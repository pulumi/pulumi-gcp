From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Daniel Bradley <daniel@pulumi.com>
Date: Tue, 7 Mar 2023 11:50:33 +0000
Subject: [PATCH] Add nil checks for sql database instance flattening


diff --git a/google-beta/services/sql/resource_sql_database_instance.go b/google-beta/services/sql/resource_sql_database_instance.go
index d6fb25a5d..68f0c2fff 100644
--- a/google-beta/services/sql/resource_sql_database_instance.go
+++ b/google-beta/services/sql/resource_sql_database_instance.go
@@ -2188,6 +2188,10 @@ func resourceSqlDatabaseInstanceImport(d *schema.ResourceData, meta interface{})
 }
 
 func flattenSettings(settings *sqladmin.Settings, d *schema.ResourceData) []map[string]interface{} {
+	if settings == nil {
+		return nil
+	}
+
 	data := map[string]interface{}{
 		"version":                     settings.SettingsVersion,
 		"tier":                        settings.Tier,
@@ -2288,6 +2292,10 @@ func flattenDataCacheConfig(d *sqladmin.DataCacheConfig) []map[string]interface{
 }
 
 func flattenBackupConfiguration(backupConfiguration *sqladmin.BackupConfiguration) []map[string]interface{} {
+	if backupConfiguration == nil {
+		return nil
+	}
+
 	data := map[string]interface{}{
 		"binary_log_enabled":             backupConfiguration.BinaryLogEnabled,
 		"enabled":                        backupConfiguration.Enabled,
@@ -2380,6 +2388,10 @@ func flattenDatabaseFlags(databaseFlags []*sqladmin.DatabaseFlags) []map[string]
 }
 
 func flattenIpConfiguration(ipConfiguration *sqladmin.IpConfiguration, d *schema.ResourceData) interface{} {
+	if ipConfiguration == nil {
+		return nil
+	}
+
 	data := map[string]interface{}{
 		"ipv4_enabled":       ipConfiguration.Ipv4Enabled,
 		"private_network":    ipConfiguration.PrivateNetwork,
@@ -2443,6 +2455,10 @@ func flattenAuthorizedNetworks(entries []*sqladmin.AclEntry) interface{} {
 }
 
 func flattenLocationPreference(locationPreference *sqladmin.LocationPreference) interface{} {
+	if locationPreference == nil {
+		return nil
+	}
+
 	data := map[string]interface{}{
 		"follow_gae_application": locationPreference.FollowGaeApplication,
 		"zone":                   locationPreference.Zone,
@@ -2453,6 +2469,10 @@ func flattenLocationPreference(locationPreference *sqladmin.LocationPreference)
 }
 
 func flattenMaintenanceWindow(maintenanceWindow *sqladmin.MaintenanceWindow) interface{} {
+	if maintenanceWindow == nil {
+		return nil
+	}
+
 	data := map[string]interface{}{
 		"day":          maintenanceWindow.Day,
 		"hour":         maintenanceWindow.Hour,
@@ -2528,6 +2548,10 @@ func flattenServerCaCerts(caCerts []*sqladmin.SslCert) []map[string]interface{}
 }
 
 func flattenInsightsConfig(insightsConfig *sqladmin.InsightsConfig) interface{} {
+	if insightsConfig == nil {
+		return nil
+	}
+
 	data := map[string]interface{}{
 		"query_insights_enabled":  insightsConfig.QueryInsightsEnabled,
 		"query_string_length":     insightsConfig.QueryStringLength,
