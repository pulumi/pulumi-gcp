From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: guineveresaenger <guinevere@pulumi.com>
Date: Mon, 9 Sep 2024 11:59:21 -0700
Subject: [PATCH] Try to set correct transformed values according to lineage


diff --git a/google-beta/services/storage/resource_storage_bucket.go b/google-beta/services/storage/resource_storage_bucket.go
index e4be7399d..8fbeee2ab 100644
--- a/google-beta/services/storage/resource_storage_bucket.go
+++ b/google-beta/services/storage/resource_storage_bucket.go
@@ -1858,10 +1858,10 @@ func setStorageBucket(d *schema.ResourceData, config *transport_tpg.Config, res
 	if err := d.Set("lifecycle_rule", flattenBucketLifecycle(d, res.Lifecycle)); err != nil {
 		return fmt.Errorf("Error setting lifecycle_rule: %s", err)
 	}
-	if err := tpgresource.SetLabels(res.Labels, d, "labels"); err != nil {
+	if err := tpgresource.SetLabelsNoDefaults(res.Labels, d, "labels", config.DefaultLabels); err != nil {
 		return fmt.Errorf("Error setting labels: %s", err)
 	}
-	if err := tpgresource.SetLabels(res.Labels, d, "terraform_labels"); err != nil {
+	if err := tpgresource.SetLabelsNoDefaults(res.Labels, d, "terraform_labels", config.DefaultLabels); err != nil {
 		return fmt.Errorf("Error setting terraform_labels: %s", err)
 	}
 	if err := d.Set("effective_labels", res.Labels); err != nil {
diff --git a/google-beta/tpgresource/labels.go b/google-beta/tpgresource/labels.go
index f3e281c90..84c047a8a 100644
--- a/google-beta/tpgresource/labels.go
+++ b/google-beta/tpgresource/labels.go
@@ -43,12 +43,6 @@ func SetLabels(labels map[string]string, d *schema.ResourceData, lineage string)
 // if we are setting the labels field.
 func SetLabelsNoDefaults(labels map[string]string, d *schema.ResourceData, lineage string, defaultLabels map[string]string) error {
 	transformed := make(map[string]interface{})
-	q.Q(labels)
-
-	if _, found := labels["goog-pulumi-provisioned"]; found {
-		q.Q("guess what we found it - but we're still unclear WTF the transformed labels are so this is probably not good enough")
-		delete(labels, "goog-pulumi-provisioned")
-	}
 
 	q.Q(labels)
 	q.Q(defaultLabels)
@@ -59,7 +53,7 @@ func SetLabelsNoDefaults(labels map[string]string, d *schema.ResourceData, linea
 		if labels != nil {
 			for k := range v.(map[string]interface{}) {
 				//// This label is set by the provider.
-				//// It is neither a defaultLabel, nor is it user set. Skip.
+				//// It is neither a defaultLabel, nor is it user set. Skip. No!!! This case happens for the terraform_labels, at least in my case.
 				//if k == "goog-pulumi-provisioned" && lineage == "terraform_labels" {
 				//	q.Q("reading after update, found goog label")
 				//	continue
@@ -71,15 +65,16 @@ func SetLabelsNoDefaults(labels map[string]string, d *schema.ResourceData, linea
 		q.Q("importing")
 		// We are reading for an import, so populate all of the labels, except the skipped ones. // TODO: what does "import" here mean?
 		for k, v := range labels {
-			if _, ok := defaultLabels[k]; !ok || lineage != "labels" { // TODO: this is happening all the time, so there's something busted here.
+
+			if _, ok := defaultLabels[k]; !ok || lineage != "labels" { // TODO: this is happening all the time, so there's something busted here. Correct. The above function just doesn't set anything if we are lineage labels. At least on initial Create. ANd there's somenthing special about hte !ok too.
 				q.Q("we did NOT find k in default labels OR lineage was NOT labels", k, lineage)
-				//if k == "goog-pulumi-provisioned" && lineage == "terraform_labels" {
-				//	q.Q("we should actually check for lineage here too I think. But this doesn't explain why default labels made it in???")
-				//	continue
-				//}
+				if k == "goog-pulumi-provisioned" && lineage == "labels" {
+					q.Q("here, we do NOT want to write to labels, so continue") //TODO: is there ever a case where we DO want to write this explicitly? Verify for import!
+					continue
+				}
 				transformed[k] = v
 			}
-			//// TODO: the goog-pulumi-provisioned label is NEVER in defaultLabels! So we're just dropping it on accident.
+			//// TODO: the goog-pulumi-provisioned label is NEVER in defaultLabels! So we're just dropping it on accident. No - we're not dropping it - we're ADDing it to the resource labels on accident!
 			//if k == "goog-pulumi-provisioned" {
 			//	transformed[k] = v
 			//}
