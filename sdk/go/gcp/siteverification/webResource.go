// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package siteverification

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A web resource is a website or domain with verified ownership. Once your
// ownership is verified you will be able to manage your website in the
// [Google Search Console](https://www.google.com/webmasters/tools/).
//
// > **Note:** The verification data (DNS `TXT` record, HTML file, `meta` tag, etc.)
// must already exist before the web resource is created, and must be deleted before
// the web resource is destroyed. The Google Site Verification API checks that the
// verification data exists at creation time and does not exist at destruction time
// and will fail if the required condition is not met.
//
// To get more information about WebResource, see:
//
// * [API documentation](https://developers.google.com/site-verification/v1)
// * How-to Guides
//   - [Getting Started](https://developers.google.com/site-verification/v1/getting_started)
//
// ## Example Usage
//
// ### Site Verification Domain Record
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/dns"
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/siteverification"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			token, err := siteverification.GetToken(ctx, &siteverification.GetTokenArgs{
//				Type:               "INET_DOMAIN",
//				Identifier:         "www.example.com",
//				VerificationMethod: "DNS_TXT",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			example, err := dns.NewRecordSet(ctx, "example", &dns.RecordSetArgs{
//				ManagedZone: pulumi.String("example.com"),
//				Name:        pulumi.String("www.example.com."),
//				Type:        pulumi.String("TXT"),
//				Rrdatas: pulumi.StringArray{
//					pulumi.String(token.Token),
//				},
//				Ttl: pulumi.Int(86400),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = siteverification.NewWebResource(ctx, "example", &siteverification.WebResourceArgs{
//				Site: &siteverification.WebResourceSiteArgs{
//					Type:       pulumi.String(token.Type),
//					Identifier: pulumi.String(token.Identifier),
//				},
//				VerificationMethod: pulumi.String(token.VerificationMethod),
//			}, pulumi.DependsOn([]pulumi.Resource{
//				example,
//			}))
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// WebResource can be imported using any of these accepted formats:
//
// * `webResource/{{web_resource_id}}`
//
// * `{{web_resource_id}}`
//
// When using the `pulumi import` command, WebResource can be imported using one of the formats above. For example:
//
// ```sh
// $ pulumi import gcp:siteverification/webResource:WebResource default webResource/{{web_resource_id}}
// ```
//
// ```sh
// $ pulumi import gcp:siteverification/webResource:WebResource default {{web_resource_id}}
// ```
type WebResource struct {
	pulumi.CustomResourceState

	// The email addresses of all direct, verified owners of this exact property. Indirect owners —
	// for example verified owners of the containing domain—are not included in this list.
	Owners pulumi.StringArrayOutput `pulumi:"owners"`
	// Container for the address and type of a site for which a verification token will be verified.
	// Structure is documented below.
	Site WebResourceSiteOutput `pulumi:"site"`
	// The verification method for the Site Verification system to use to verify
	// this site or domain.
	// Possible values are: `ANALYTICS`, `DNS_CNAME`, `DNS_TXT`, `FILE`, `META`, `TAG_MANAGER`.
	VerificationMethod pulumi.StringOutput `pulumi:"verificationMethod"`
	// The string used to identify this web resource.
	WebResourceId pulumi.StringOutput `pulumi:"webResourceId"`
}

// NewWebResource registers a new resource with the given unique name, arguments, and options.
func NewWebResource(ctx *pulumi.Context,
	name string, args *WebResourceArgs, opts ...pulumi.ResourceOption) (*WebResource, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Site == nil {
		return nil, errors.New("invalid value for required argument 'Site'")
	}
	if args.VerificationMethod == nil {
		return nil, errors.New("invalid value for required argument 'VerificationMethod'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WebResource
	err := ctx.RegisterResource("gcp:siteverification/webResource:WebResource", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWebResource gets an existing WebResource resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWebResource(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WebResourceState, opts ...pulumi.ResourceOption) (*WebResource, error) {
	var resource WebResource
	err := ctx.ReadResource("gcp:siteverification/webResource:WebResource", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WebResource resources.
type webResourceState struct {
	// The email addresses of all direct, verified owners of this exact property. Indirect owners —
	// for example verified owners of the containing domain—are not included in this list.
	Owners []string `pulumi:"owners"`
	// Container for the address and type of a site for which a verification token will be verified.
	// Structure is documented below.
	Site *WebResourceSite `pulumi:"site"`
	// The verification method for the Site Verification system to use to verify
	// this site or domain.
	// Possible values are: `ANALYTICS`, `DNS_CNAME`, `DNS_TXT`, `FILE`, `META`, `TAG_MANAGER`.
	VerificationMethod *string `pulumi:"verificationMethod"`
	// The string used to identify this web resource.
	WebResourceId *string `pulumi:"webResourceId"`
}

type WebResourceState struct {
	// The email addresses of all direct, verified owners of this exact property. Indirect owners —
	// for example verified owners of the containing domain—are not included in this list.
	Owners pulumi.StringArrayInput
	// Container for the address and type of a site for which a verification token will be verified.
	// Structure is documented below.
	Site WebResourceSitePtrInput
	// The verification method for the Site Verification system to use to verify
	// this site or domain.
	// Possible values are: `ANALYTICS`, `DNS_CNAME`, `DNS_TXT`, `FILE`, `META`, `TAG_MANAGER`.
	VerificationMethod pulumi.StringPtrInput
	// The string used to identify this web resource.
	WebResourceId pulumi.StringPtrInput
}

func (WebResourceState) ElementType() reflect.Type {
	return reflect.TypeOf((*webResourceState)(nil)).Elem()
}

type webResourceArgs struct {
	// Container for the address and type of a site for which a verification token will be verified.
	// Structure is documented below.
	Site WebResourceSite `pulumi:"site"`
	// The verification method for the Site Verification system to use to verify
	// this site or domain.
	// Possible values are: `ANALYTICS`, `DNS_CNAME`, `DNS_TXT`, `FILE`, `META`, `TAG_MANAGER`.
	VerificationMethod string `pulumi:"verificationMethod"`
}

// The set of arguments for constructing a WebResource resource.
type WebResourceArgs struct {
	// Container for the address and type of a site for which a verification token will be verified.
	// Structure is documented below.
	Site WebResourceSiteInput
	// The verification method for the Site Verification system to use to verify
	// this site or domain.
	// Possible values are: `ANALYTICS`, `DNS_CNAME`, `DNS_TXT`, `FILE`, `META`, `TAG_MANAGER`.
	VerificationMethod pulumi.StringInput
}

func (WebResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*webResourceArgs)(nil)).Elem()
}

type WebResourceInput interface {
	pulumi.Input

	ToWebResourceOutput() WebResourceOutput
	ToWebResourceOutputWithContext(ctx context.Context) WebResourceOutput
}

func (*WebResource) ElementType() reflect.Type {
	return reflect.TypeOf((**WebResource)(nil)).Elem()
}

func (i *WebResource) ToWebResourceOutput() WebResourceOutput {
	return i.ToWebResourceOutputWithContext(context.Background())
}

func (i *WebResource) ToWebResourceOutputWithContext(ctx context.Context) WebResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebResourceOutput)
}

// WebResourceArrayInput is an input type that accepts WebResourceArray and WebResourceArrayOutput values.
// You can construct a concrete instance of `WebResourceArrayInput` via:
//
//	WebResourceArray{ WebResourceArgs{...} }
type WebResourceArrayInput interface {
	pulumi.Input

	ToWebResourceArrayOutput() WebResourceArrayOutput
	ToWebResourceArrayOutputWithContext(context.Context) WebResourceArrayOutput
}

type WebResourceArray []WebResourceInput

func (WebResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WebResource)(nil)).Elem()
}

func (i WebResourceArray) ToWebResourceArrayOutput() WebResourceArrayOutput {
	return i.ToWebResourceArrayOutputWithContext(context.Background())
}

func (i WebResourceArray) ToWebResourceArrayOutputWithContext(ctx context.Context) WebResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebResourceArrayOutput)
}

// WebResourceMapInput is an input type that accepts WebResourceMap and WebResourceMapOutput values.
// You can construct a concrete instance of `WebResourceMapInput` via:
//
//	WebResourceMap{ "key": WebResourceArgs{...} }
type WebResourceMapInput interface {
	pulumi.Input

	ToWebResourceMapOutput() WebResourceMapOutput
	ToWebResourceMapOutputWithContext(context.Context) WebResourceMapOutput
}

type WebResourceMap map[string]WebResourceInput

func (WebResourceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WebResource)(nil)).Elem()
}

func (i WebResourceMap) ToWebResourceMapOutput() WebResourceMapOutput {
	return i.ToWebResourceMapOutputWithContext(context.Background())
}

func (i WebResourceMap) ToWebResourceMapOutputWithContext(ctx context.Context) WebResourceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebResourceMapOutput)
}

type WebResourceOutput struct{ *pulumi.OutputState }

func (WebResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebResource)(nil)).Elem()
}

func (o WebResourceOutput) ToWebResourceOutput() WebResourceOutput {
	return o
}

func (o WebResourceOutput) ToWebResourceOutputWithContext(ctx context.Context) WebResourceOutput {
	return o
}

// The email addresses of all direct, verified owners of this exact property. Indirect owners —
// for example verified owners of the containing domain—are not included in this list.
func (o WebResourceOutput) Owners() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WebResource) pulumi.StringArrayOutput { return v.Owners }).(pulumi.StringArrayOutput)
}

// Container for the address and type of a site for which a verification token will be verified.
// Structure is documented below.
func (o WebResourceOutput) Site() WebResourceSiteOutput {
	return o.ApplyT(func(v *WebResource) WebResourceSiteOutput { return v.Site }).(WebResourceSiteOutput)
}

// The verification method for the Site Verification system to use to verify
// this site or domain.
// Possible values are: `ANALYTICS`, `DNS_CNAME`, `DNS_TXT`, `FILE`, `META`, `TAG_MANAGER`.
func (o WebResourceOutput) VerificationMethod() pulumi.StringOutput {
	return o.ApplyT(func(v *WebResource) pulumi.StringOutput { return v.VerificationMethod }).(pulumi.StringOutput)
}

// The string used to identify this web resource.
func (o WebResourceOutput) WebResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v *WebResource) pulumi.StringOutput { return v.WebResourceId }).(pulumi.StringOutput)
}

type WebResourceArrayOutput struct{ *pulumi.OutputState }

func (WebResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WebResource)(nil)).Elem()
}

func (o WebResourceArrayOutput) ToWebResourceArrayOutput() WebResourceArrayOutput {
	return o
}

func (o WebResourceArrayOutput) ToWebResourceArrayOutputWithContext(ctx context.Context) WebResourceArrayOutput {
	return o
}

func (o WebResourceArrayOutput) Index(i pulumi.IntInput) WebResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WebResource {
		return vs[0].([]*WebResource)[vs[1].(int)]
	}).(WebResourceOutput)
}

type WebResourceMapOutput struct{ *pulumi.OutputState }

func (WebResourceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WebResource)(nil)).Elem()
}

func (o WebResourceMapOutput) ToWebResourceMapOutput() WebResourceMapOutput {
	return o
}

func (o WebResourceMapOutput) ToWebResourceMapOutputWithContext(ctx context.Context) WebResourceMapOutput {
	return o
}

func (o WebResourceMapOutput) MapIndex(k pulumi.StringInput) WebResourceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WebResource {
		return vs[0].(map[string]*WebResource)[vs[1].(string)]
	}).(WebResourceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WebResourceInput)(nil)).Elem(), &WebResource{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebResourceArrayInput)(nil)).Elem(), WebResourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebResourceMapInput)(nil)).Elem(), WebResourceMap{})
	pulumi.RegisterOutputType(WebResourceOutput{})
	pulumi.RegisterOutputType(WebResourceArrayOutput{})
	pulumi.RegisterOutputType(WebResourceMapOutput{})
}
