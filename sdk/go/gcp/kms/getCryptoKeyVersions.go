// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package kms

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides access to Google Cloud Platform KMS CryptoKeyVersions. For more information see
// [the official documentation](https://cloud.google.com/kms/docs/object-hierarchy#key_version)
// and
// [API](https://cloud.google.com/kms/docs/reference/rest/v1/projects.locations.keyRings.cryptoKeys.cryptoKeyVersions).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/kms"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			myKeyRing, err := kms.GetKMSKeyRing(ctx, &kms.GetKMSKeyRingArgs{
//				Name:     "my-key-ring",
//				Location: "us-central1",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = kms.GetKMSCryptoKey(ctx, &kms.GetKMSCryptoKeyArgs{
//				Name:    "my-crypto-key",
//				KeyRing: myKeyRing.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = kms.GetCryptoKeyVersions(ctx, &kms.GetCryptoKeyVersionsArgs{
//				CryptoKey: myKey.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetCryptoKeyVersions(ctx *pulumi.Context, args *GetCryptoKeyVersionsArgs, opts ...pulumi.InvokeOption) (*GetCryptoKeyVersionsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetCryptoKeyVersionsResult
	err := ctx.Invoke("gcp:kms/getCryptoKeyVersions:getCryptoKeyVersions", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCryptoKeyVersions.
type GetCryptoKeyVersionsArgs struct {
	// The `id` of the Google Cloud Platform CryptoKey to which the key version belongs. This is also the `id` field of the
	// `kms.CryptoKey` resource/datasource.
	CryptoKey string `pulumi:"cryptoKey"`
	// The filter argument is used to add a filter query parameter that limits which versions are retrieved by the data source: ?filter={{filter}}. When no value is provided there is no filtering.
	//
	// Example filter values if filtering on name. Note: names take the form projects/{{project}}/locations/{{location}}/keyRings/{{keyRing}}/cryptoKeys/{{cryptoKey}}/cryptoKeyVersions.
	//
	// * `"name:my-key-"` will retrieve cryptoKeyVersions that contain "my-key-" anywhere in their name.
	// * `"name=projects/my-project/locations/global/keyRings/my-key-ring/cryptoKeys/my-key-1/cryptoKeyVersions/my-version-1"` will only retrieve a key with that exact name.
	//
	// [See the documentation about using filters](https://cloud.google.com/kms/docs/sorting-and-filtering)
	Filter *string `pulumi:"filter"`
}

// A collection of values returned by getCryptoKeyVersions.
type GetCryptoKeyVersionsResult struct {
	CryptoKey string  `pulumi:"cryptoKey"`
	Filter    *string `pulumi:"filter"`
	// The provider-assigned unique ID for this managed resource.
	Id         string                          `pulumi:"id"`
	PublicKeys []GetCryptoKeyVersionsPublicKey `pulumi:"publicKeys"`
	// A list of all the retrieved crypto key versions from the provided crypto key. This list is influenced by the provided filter argument.
	Versions []GetCryptoKeyVersionsVersion `pulumi:"versions"`
}

func GetCryptoKeyVersionsOutput(ctx *pulumi.Context, args GetCryptoKeyVersionsOutputArgs, opts ...pulumi.InvokeOption) GetCryptoKeyVersionsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetCryptoKeyVersionsResult, error) {
			args := v.(GetCryptoKeyVersionsArgs)
			r, err := GetCryptoKeyVersions(ctx, &args, opts...)
			var s GetCryptoKeyVersionsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetCryptoKeyVersionsResultOutput)
}

// A collection of arguments for invoking getCryptoKeyVersions.
type GetCryptoKeyVersionsOutputArgs struct {
	// The `id` of the Google Cloud Platform CryptoKey to which the key version belongs. This is also the `id` field of the
	// `kms.CryptoKey` resource/datasource.
	CryptoKey pulumi.StringInput `pulumi:"cryptoKey"`
	// The filter argument is used to add a filter query parameter that limits which versions are retrieved by the data source: ?filter={{filter}}. When no value is provided there is no filtering.
	//
	// Example filter values if filtering on name. Note: names take the form projects/{{project}}/locations/{{location}}/keyRings/{{keyRing}}/cryptoKeys/{{cryptoKey}}/cryptoKeyVersions.
	//
	// * `"name:my-key-"` will retrieve cryptoKeyVersions that contain "my-key-" anywhere in their name.
	// * `"name=projects/my-project/locations/global/keyRings/my-key-ring/cryptoKeys/my-key-1/cryptoKeyVersions/my-version-1"` will only retrieve a key with that exact name.
	//
	// [See the documentation about using filters](https://cloud.google.com/kms/docs/sorting-and-filtering)
	Filter pulumi.StringPtrInput `pulumi:"filter"`
}

func (GetCryptoKeyVersionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCryptoKeyVersionsArgs)(nil)).Elem()
}

// A collection of values returned by getCryptoKeyVersions.
type GetCryptoKeyVersionsResultOutput struct{ *pulumi.OutputState }

func (GetCryptoKeyVersionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCryptoKeyVersionsResult)(nil)).Elem()
}

func (o GetCryptoKeyVersionsResultOutput) ToGetCryptoKeyVersionsResultOutput() GetCryptoKeyVersionsResultOutput {
	return o
}

func (o GetCryptoKeyVersionsResultOutput) ToGetCryptoKeyVersionsResultOutputWithContext(ctx context.Context) GetCryptoKeyVersionsResultOutput {
	return o
}

func (o GetCryptoKeyVersionsResultOutput) CryptoKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetCryptoKeyVersionsResult) string { return v.CryptoKey }).(pulumi.StringOutput)
}

func (o GetCryptoKeyVersionsResultOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCryptoKeyVersionsResult) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetCryptoKeyVersionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCryptoKeyVersionsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetCryptoKeyVersionsResultOutput) PublicKeys() GetCryptoKeyVersionsPublicKeyArrayOutput {
	return o.ApplyT(func(v GetCryptoKeyVersionsResult) []GetCryptoKeyVersionsPublicKey { return v.PublicKeys }).(GetCryptoKeyVersionsPublicKeyArrayOutput)
}

// A list of all the retrieved crypto key versions from the provided crypto key. This list is influenced by the provided filter argument.
func (o GetCryptoKeyVersionsResultOutput) Versions() GetCryptoKeyVersionsVersionArrayOutput {
	return o.ApplyT(func(v GetCryptoKeyVersionsResult) []GetCryptoKeyVersionsVersion { return v.Versions }).(GetCryptoKeyVersionsVersionArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetCryptoKeyVersionsResultOutput{})
}
