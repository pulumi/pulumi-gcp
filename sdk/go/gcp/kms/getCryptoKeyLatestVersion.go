// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package kms

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides access to the latest Google Cloud Platform KMS CryptoKeyVersion in a CryptoKey. For more information see
// [the official documentation](https://cloud.google.com/kms/docs/object-hierarchy#key_version)
// and
// [API](https://cloud.google.com/kms/docs/reference/rest/v1/projects.locations.keyRings.cryptoKeys.cryptoKeyVersions).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/kms"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			myKeyRing, err := kms.GetKMSKeyRing(ctx, &kms.GetKMSKeyRingArgs{
//				Name:     "my-key-ring",
//				Location: "us-central1",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = kms.GetKMSCryptoKey(ctx, &kms.GetKMSCryptoKeyArgs{
//				Name:    "my-crypto-key",
//				KeyRing: myKeyRing.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = kms.GetCryptoKeyLatestVersion(ctx, &kms.GetCryptoKeyLatestVersionArgs{
//				CryptoKey: myKey.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetCryptoKeyLatestVersion(ctx *pulumi.Context, args *GetCryptoKeyLatestVersionArgs, opts ...pulumi.InvokeOption) (*GetCryptoKeyLatestVersionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetCryptoKeyLatestVersionResult
	err := ctx.Invoke("gcp:kms/getCryptoKeyLatestVersion:getCryptoKeyLatestVersion", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCryptoKeyLatestVersion.
type GetCryptoKeyLatestVersionArgs struct {
	// The `id` of the Google Cloud Platform CryptoKey to which the key version belongs. This is also the `id` field of the
	// `kms.CryptoKey` resource/datasource.
	CryptoKey string `pulumi:"cryptoKey"`
	// The filter argument is used to add a filter query parameter that limits which type of cryptoKeyVersion is retrieved as the latest by the data source: ?filter={{filter}}. When no value is provided there is no filtering.
	//
	// Example filter values if filtering on state.
	//
	// * `"state:ENABLED"` will retrieve the latest cryptoKeyVersion that has the state "ENABLED".
	//
	// [See the documentation about using filters](https://cloud.google.com/kms/docs/sorting-and-filtering)
	Filter *string `pulumi:"filter"`
}

// A collection of values returned by getCryptoKeyLatestVersion.
type GetCryptoKeyLatestVersionResult struct {
	// The CryptoKeyVersionAlgorithm that this CryptoKeyVersion supports.
	Algorithm string  `pulumi:"algorithm"`
	CryptoKey string  `pulumi:"cryptoKey"`
	Filter    *string `pulumi:"filter"`
	// The provider-assigned unique ID for this managed resource.
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
	// The ProtectionLevel describing how crypto operations are performed with this CryptoKeyVersion. See the [protectionLevel reference](https://cloud.google.com/kms/docs/reference/rest/v1/ProtectionLevel) for possible outputs.
	ProtectionLevel string `pulumi:"protectionLevel"`
	// If the enclosing CryptoKey has purpose `ASYMMETRIC_SIGN` or `ASYMMETRIC_DECRYPT`, this block contains details about the public key associated to this CryptoKeyVersion. Structure is documented below.
	PublicKeys []GetCryptoKeyLatestVersionPublicKey `pulumi:"publicKeys"`
	// The current state of the latest CryptoKeyVersion. See the [state reference](https://cloud.google.com/kms/docs/reference/rest/v1/projects.locations.keyRings.cryptoKeys.cryptoKeyVersions#CryptoKeyVersion.CryptoKeyVersionState) for possible outputs.
	State   string `pulumi:"state"`
	Version int    `pulumi:"version"`
}

func GetCryptoKeyLatestVersionOutput(ctx *pulumi.Context, args GetCryptoKeyLatestVersionOutputArgs, opts ...pulumi.InvokeOption) GetCryptoKeyLatestVersionResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetCryptoKeyLatestVersionResultOutput, error) {
			args := v.(GetCryptoKeyLatestVersionArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv GetCryptoKeyLatestVersionResult
			secret, deps, err := ctx.InvokePackageRawWithDeps("gcp:kms/getCryptoKeyLatestVersion:getCryptoKeyLatestVersion", args, &rv, "", opts...)
			if err != nil {
				return GetCryptoKeyLatestVersionResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(GetCryptoKeyLatestVersionResultOutput)
			output = pulumi.OutputWithDependencies(ctx.Context(), output, deps...).(GetCryptoKeyLatestVersionResultOutput)
			if secret {
				return pulumi.ToSecret(output).(GetCryptoKeyLatestVersionResultOutput), nil
			}
			return output, nil
		}).(GetCryptoKeyLatestVersionResultOutput)
}

// A collection of arguments for invoking getCryptoKeyLatestVersion.
type GetCryptoKeyLatestVersionOutputArgs struct {
	// The `id` of the Google Cloud Platform CryptoKey to which the key version belongs. This is also the `id` field of the
	// `kms.CryptoKey` resource/datasource.
	CryptoKey pulumi.StringInput `pulumi:"cryptoKey"`
	// The filter argument is used to add a filter query parameter that limits which type of cryptoKeyVersion is retrieved as the latest by the data source: ?filter={{filter}}. When no value is provided there is no filtering.
	//
	// Example filter values if filtering on state.
	//
	// * `"state:ENABLED"` will retrieve the latest cryptoKeyVersion that has the state "ENABLED".
	//
	// [See the documentation about using filters](https://cloud.google.com/kms/docs/sorting-and-filtering)
	Filter pulumi.StringPtrInput `pulumi:"filter"`
}

func (GetCryptoKeyLatestVersionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCryptoKeyLatestVersionArgs)(nil)).Elem()
}

// A collection of values returned by getCryptoKeyLatestVersion.
type GetCryptoKeyLatestVersionResultOutput struct{ *pulumi.OutputState }

func (GetCryptoKeyLatestVersionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCryptoKeyLatestVersionResult)(nil)).Elem()
}

func (o GetCryptoKeyLatestVersionResultOutput) ToGetCryptoKeyLatestVersionResultOutput() GetCryptoKeyLatestVersionResultOutput {
	return o
}

func (o GetCryptoKeyLatestVersionResultOutput) ToGetCryptoKeyLatestVersionResultOutputWithContext(ctx context.Context) GetCryptoKeyLatestVersionResultOutput {
	return o
}

// The CryptoKeyVersionAlgorithm that this CryptoKeyVersion supports.
func (o GetCryptoKeyLatestVersionResultOutput) Algorithm() pulumi.StringOutput {
	return o.ApplyT(func(v GetCryptoKeyLatestVersionResult) string { return v.Algorithm }).(pulumi.StringOutput)
}

func (o GetCryptoKeyLatestVersionResultOutput) CryptoKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetCryptoKeyLatestVersionResult) string { return v.CryptoKey }).(pulumi.StringOutput)
}

func (o GetCryptoKeyLatestVersionResultOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCryptoKeyLatestVersionResult) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetCryptoKeyLatestVersionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCryptoKeyLatestVersionResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetCryptoKeyLatestVersionResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCryptoKeyLatestVersionResult) string { return v.Name }).(pulumi.StringOutput)
}

// The ProtectionLevel describing how crypto operations are performed with this CryptoKeyVersion. See the [protectionLevel reference](https://cloud.google.com/kms/docs/reference/rest/v1/ProtectionLevel) for possible outputs.
func (o GetCryptoKeyLatestVersionResultOutput) ProtectionLevel() pulumi.StringOutput {
	return o.ApplyT(func(v GetCryptoKeyLatestVersionResult) string { return v.ProtectionLevel }).(pulumi.StringOutput)
}

// If the enclosing CryptoKey has purpose `ASYMMETRIC_SIGN` or `ASYMMETRIC_DECRYPT`, this block contains details about the public key associated to this CryptoKeyVersion. Structure is documented below.
func (o GetCryptoKeyLatestVersionResultOutput) PublicKeys() GetCryptoKeyLatestVersionPublicKeyArrayOutput {
	return o.ApplyT(func(v GetCryptoKeyLatestVersionResult) []GetCryptoKeyLatestVersionPublicKey { return v.PublicKeys }).(GetCryptoKeyLatestVersionPublicKeyArrayOutput)
}

// The current state of the latest CryptoKeyVersion. See the [state reference](https://cloud.google.com/kms/docs/reference/rest/v1/projects.locations.keyRings.cryptoKeys.cryptoKeyVersions#CryptoKeyVersion.CryptoKeyVersionState) for possible outputs.
func (o GetCryptoKeyLatestVersionResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetCryptoKeyLatestVersionResult) string { return v.State }).(pulumi.StringOutput)
}

func (o GetCryptoKeyLatestVersionResultOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v GetCryptoKeyLatestVersionResult) int { return v.Version }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(GetCryptoKeyLatestVersionResultOutput{})
}
