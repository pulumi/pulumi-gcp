// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package kms

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides access to a Google Cloud Platform KMS CryptoKeyVersion. For more information see
// [the official documentation](https://cloud.google.com/kms/docs/object-hierarchy#key_version)
// and
// [API](https://cloud.google.com/kms/docs/reference/rest/v1/projects.locations.keyRings.cryptoKeys.cryptoKeyVersions).
//
// A CryptoKeyVersion represents an individual cryptographic key, and the associated key material.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-gcp/sdk/v5/go/gcp/kms"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		myKeyRing, err := kms.GetKMSKeyRing(ctx, &kms.GetKMSKeyRingArgs{
// 			Name:     "my-key-ring",
// 			Location: "us-central1",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		_, err = kms.GetKMSCryptoKey(ctx, &kms.GetKMSCryptoKeyArgs{
// 			Name:    "my-crypto-key",
// 			KeyRing: myKeyRing.Id,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		_, err = kms.GetKMSCryptoKeyVersion(ctx, &kms.GetKMSCryptoKeyVersionArgs{
// 			CryptoKey: data.Google_kms_key.My_key.Id,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func GetKMSCryptoKeyVersion(ctx *pulumi.Context, args *GetKMSCryptoKeyVersionArgs, opts ...pulumi.InvokeOption) (*GetKMSCryptoKeyVersionResult, error) {
	var rv GetKMSCryptoKeyVersionResult
	err := ctx.Invoke("gcp:kms/getKMSCryptoKeyVersion:getKMSCryptoKeyVersion", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getKMSCryptoKeyVersion.
type GetKMSCryptoKeyVersionArgs struct {
	// The `selfLink` of the Google Cloud Platform CryptoKey to which the key version belongs. This is also the `id` field of the
	// `kms.CryptoKey` resource/datasource.
	CryptoKey string `pulumi:"cryptoKey"`
	// The version number for this CryptoKeyVersion. Defaults to `1`.
	Version *int `pulumi:"version"`
}

// A collection of values returned by getKMSCryptoKeyVersion.
type GetKMSCryptoKeyVersionResult struct {
	// The CryptoKeyVersionAlgorithm that this CryptoKeyVersion supports.
	Algorithm string `pulumi:"algorithm"`
	CryptoKey string `pulumi:"cryptoKey"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The resource name for this CryptoKeyVersion in the format `projects/*/locations/*/keyRings/*/cryptoKeys/*/cryptoKeyVersions/*`
	Name string `pulumi:"name"`
	// The ProtectionLevel describing how crypto operations are performed with this CryptoKeyVersion. See the [protectionLevel reference](https://cloud.google.com/kms/docs/reference/rest/v1/ProtectionLevel) for possible outputs.
	ProtectionLevel string `pulumi:"protectionLevel"`
	// If the enclosing CryptoKey has purpose `ASYMMETRIC_SIGN` or `ASYMMETRIC_DECRYPT`, this block contains details about the public key associated to this CryptoKeyVersion. Structure is documented below.
	PublicKeys []GetKMSCryptoKeyVersionPublicKey `pulumi:"publicKeys"`
	// The current state of the CryptoKeyVersion. See the [state reference](https://cloud.google.com/kms/docs/reference/rest/v1/projects.locations.keyRings.cryptoKeys.cryptoKeyVersions#CryptoKeyVersion.CryptoKeyVersionState) for possible outputs.
	State   string `pulumi:"state"`
	Version *int   `pulumi:"version"`
}

func GetKMSCryptoKeyVersionOutput(ctx *pulumi.Context, args GetKMSCryptoKeyVersionOutputArgs, opts ...pulumi.InvokeOption) GetKMSCryptoKeyVersionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetKMSCryptoKeyVersionResult, error) {
			args := v.(GetKMSCryptoKeyVersionArgs)
			r, err := GetKMSCryptoKeyVersion(ctx, &args, opts...)
			return *r, err
		}).(GetKMSCryptoKeyVersionResultOutput)
}

// A collection of arguments for invoking getKMSCryptoKeyVersion.
type GetKMSCryptoKeyVersionOutputArgs struct {
	// The `selfLink` of the Google Cloud Platform CryptoKey to which the key version belongs. This is also the `id` field of the
	// `kms.CryptoKey` resource/datasource.
	CryptoKey pulumi.StringInput `pulumi:"cryptoKey"`
	// The version number for this CryptoKeyVersion. Defaults to `1`.
	Version pulumi.IntPtrInput `pulumi:"version"`
}

func (GetKMSCryptoKeyVersionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKMSCryptoKeyVersionArgs)(nil)).Elem()
}

// A collection of values returned by getKMSCryptoKeyVersion.
type GetKMSCryptoKeyVersionResultOutput struct{ *pulumi.OutputState }

func (GetKMSCryptoKeyVersionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKMSCryptoKeyVersionResult)(nil)).Elem()
}

func (o GetKMSCryptoKeyVersionResultOutput) ToGetKMSCryptoKeyVersionResultOutput() GetKMSCryptoKeyVersionResultOutput {
	return o
}

func (o GetKMSCryptoKeyVersionResultOutput) ToGetKMSCryptoKeyVersionResultOutputWithContext(ctx context.Context) GetKMSCryptoKeyVersionResultOutput {
	return o
}

// The CryptoKeyVersionAlgorithm that this CryptoKeyVersion supports.
func (o GetKMSCryptoKeyVersionResultOutput) Algorithm() pulumi.StringOutput {
	return o.ApplyT(func(v GetKMSCryptoKeyVersionResult) string { return v.Algorithm }).(pulumi.StringOutput)
}

func (o GetKMSCryptoKeyVersionResultOutput) CryptoKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetKMSCryptoKeyVersionResult) string { return v.CryptoKey }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetKMSCryptoKeyVersionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetKMSCryptoKeyVersionResult) string { return v.Id }).(pulumi.StringOutput)
}

// The resource name for this CryptoKeyVersion in the format `projects/*/locations/*/keyRings/*/cryptoKeys/*/cryptoKeyVersions/*`
func (o GetKMSCryptoKeyVersionResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetKMSCryptoKeyVersionResult) string { return v.Name }).(pulumi.StringOutput)
}

// The ProtectionLevel describing how crypto operations are performed with this CryptoKeyVersion. See the [protectionLevel reference](https://cloud.google.com/kms/docs/reference/rest/v1/ProtectionLevel) for possible outputs.
func (o GetKMSCryptoKeyVersionResultOutput) ProtectionLevel() pulumi.StringOutput {
	return o.ApplyT(func(v GetKMSCryptoKeyVersionResult) string { return v.ProtectionLevel }).(pulumi.StringOutput)
}

// If the enclosing CryptoKey has purpose `ASYMMETRIC_SIGN` or `ASYMMETRIC_DECRYPT`, this block contains details about the public key associated to this CryptoKeyVersion. Structure is documented below.
func (o GetKMSCryptoKeyVersionResultOutput) PublicKeys() GetKMSCryptoKeyVersionPublicKeyArrayOutput {
	return o.ApplyT(func(v GetKMSCryptoKeyVersionResult) []GetKMSCryptoKeyVersionPublicKey { return v.PublicKeys }).(GetKMSCryptoKeyVersionPublicKeyArrayOutput)
}

// The current state of the CryptoKeyVersion. See the [state reference](https://cloud.google.com/kms/docs/reference/rest/v1/projects.locations.keyRings.cryptoKeys.cryptoKeyVersions#CryptoKeyVersion.CryptoKeyVersionState) for possible outputs.
func (o GetKMSCryptoKeyVersionResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetKMSCryptoKeyVersionResult) string { return v.State }).(pulumi.StringOutput)
}

func (o GetKMSCryptoKeyVersionResultOutput) Version() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetKMSCryptoKeyVersionResult) *int { return v.Version }).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetKMSCryptoKeyVersionResultOutput{})
}
