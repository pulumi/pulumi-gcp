// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package kms

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves the current IAM policy data for ekmconnection
//
// ## example
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/kms"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := kms.LookupEkmConnectionIamPolicy(ctx, &kms.LookupEkmConnectionIamPolicyArgs{
//				Project:  pulumi.StringRef(example_ekmconnection.Project),
//				Location: pulumi.StringRef(example_ekmconnection.Location),
//				Name:     example_ekmconnection.Name,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupEkmConnectionIamPolicy(ctx *pulumi.Context, args *LookupEkmConnectionIamPolicyArgs, opts ...pulumi.InvokeOption) (*LookupEkmConnectionIamPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupEkmConnectionIamPolicyResult
	err := ctx.Invoke("gcp:kms/getEkmConnectionIamPolicy:getEkmConnectionIamPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getEkmConnectionIamPolicy.
type LookupEkmConnectionIamPolicyArgs struct {
	// The location for the EkmConnection.
	// A full list of valid locations can be found by running `gcloud kms locations list`.
	// Used to find the parent resource to bind the IAM policy to. If not specified,
	// the value will be parsed from the identifier of the parent resource. If no location is provided in the parent identifier and no
	// location is specified, it is taken from the provider configuration.
	Location *string `pulumi:"location"`
	// Used to find the parent resource to bind the IAM policy to
	Name string `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project *string `pulumi:"project"`
}

// A collection of values returned by getEkmConnectionIamPolicy.
type LookupEkmConnectionIamPolicyResult struct {
	// (Computed) The etag of the IAM policy.
	Etag string `pulumi:"etag"`
	// The provider-assigned unique ID for this managed resource.
	Id       string `pulumi:"id"`
	Location string `pulumi:"location"`
	Name     string `pulumi:"name"`
	// (Required only by `kms.EkmConnectionIamPolicy`) The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData string `pulumi:"policyData"`
	Project    string `pulumi:"project"`
}

func LookupEkmConnectionIamPolicyOutput(ctx *pulumi.Context, args LookupEkmConnectionIamPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupEkmConnectionIamPolicyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupEkmConnectionIamPolicyResult, error) {
			args := v.(LookupEkmConnectionIamPolicyArgs)
			r, err := LookupEkmConnectionIamPolicy(ctx, &args, opts...)
			var s LookupEkmConnectionIamPolicyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupEkmConnectionIamPolicyResultOutput)
}

// A collection of arguments for invoking getEkmConnectionIamPolicy.
type LookupEkmConnectionIamPolicyOutputArgs struct {
	// The location for the EkmConnection.
	// A full list of valid locations can be found by running `gcloud kms locations list`.
	// Used to find the parent resource to bind the IAM policy to. If not specified,
	// the value will be parsed from the identifier of the parent resource. If no location is provided in the parent identifier and no
	// location is specified, it is taken from the provider configuration.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Used to find the parent resource to bind the IAM policy to
	Name pulumi.StringInput `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupEkmConnectionIamPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEkmConnectionIamPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getEkmConnectionIamPolicy.
type LookupEkmConnectionIamPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupEkmConnectionIamPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEkmConnectionIamPolicyResult)(nil)).Elem()
}

func (o LookupEkmConnectionIamPolicyResultOutput) ToLookupEkmConnectionIamPolicyResultOutput() LookupEkmConnectionIamPolicyResultOutput {
	return o
}

func (o LookupEkmConnectionIamPolicyResultOutput) ToLookupEkmConnectionIamPolicyResultOutputWithContext(ctx context.Context) LookupEkmConnectionIamPolicyResultOutput {
	return o
}

// (Computed) The etag of the IAM policy.
func (o LookupEkmConnectionIamPolicyResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEkmConnectionIamPolicyResult) string { return v.Etag }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupEkmConnectionIamPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEkmConnectionIamPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupEkmConnectionIamPolicyResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEkmConnectionIamPolicyResult) string { return v.Location }).(pulumi.StringOutput)
}

func (o LookupEkmConnectionIamPolicyResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEkmConnectionIamPolicyResult) string { return v.Name }).(pulumi.StringOutput)
}

// (Required only by `kms.EkmConnectionIamPolicy`) The policy data generated by
// a `organizations.getIAMPolicy` data source.
func (o LookupEkmConnectionIamPolicyResultOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEkmConnectionIamPolicyResult) string { return v.PolicyData }).(pulumi.StringOutput)
}

func (o LookupEkmConnectionIamPolicyResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEkmConnectionIamPolicyResult) string { return v.Project }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupEkmConnectionIamPolicyResultOutput{})
}
