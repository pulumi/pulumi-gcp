// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package kms

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ### Kms Folder Kaj Policy Config Basic
//
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/kms"
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/organizations"
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/projects"
//	"github.com/pulumi/pulumi-random/sdk/v4/go/random"
//	"github.com/pulumi/pulumi-time/sdk/go/time"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			// Create Folder in GCP Organization.
//			kajFolder, err := organizations.NewFolder(ctx, "kaj_folder", &organizations.FolderArgs{
//				DisplayName:        pulumi.String("my-folder"),
//				Parent:             pulumi.String("organizations/123456789"),
//				DeletionProtection: pulumi.Bool(false),
//			})
//			if err != nil {
//				return err
//			}
//			projectSuffix, err := random.NewRandomId(ctx, "project_suffix", &random.RandomIdArgs{
//				ByteLength: pulumi.Int(4),
//			})
//			if err != nil {
//				return err
//			}
//			// Create a project for enabling KMS API.
//			kmsProject, err := organizations.NewProject(ctx, "kms_project", &organizations.ProjectArgs{
//				ProjectId: projectSuffix.Hex.ApplyT(func(hex string) (string, error) {
//					return fmt.Sprintf("kms-api-project%v", hex), nil
//				}).(pulumi.StringOutput),
//				Name: projectSuffix.Hex.ApplyT(func(hex string) (string, error) {
//					return fmt.Sprintf("kms-api-project%v", hex), nil
//				}).(pulumi.StringOutput),
//				FolderId:       kajFolder.FolderId,
//				BillingAccount: pulumi.String("000000-0000000-0000000-000000"),
//				DeletionPolicy: pulumi.String("DELETE"),
//			}, pulumi.DependsOn([]pulumi.Resource{
//				kajFolder,
//			}))
//			if err != nil {
//				return err
//			}
//			// Enable the Cloud KMS API.
//			kmsApiService, err := projects.NewService(ctx, "kms_api_service", &projects.ServiceArgs{
//				Service:                  pulumi.String("cloudkms.googleapis.com"),
//				Project:                  kmsProject.ProjectId,
//				DisableDependentServices: pulumi.Bool(true),
//			}, pulumi.DependsOn([]pulumi.Resource{
//				kmsProject,
//			}))
//			if err != nil {
//				return err
//			}
//			waitEnableServiceApi, err := time.NewSleep(ctx, "wait_enable_service_api", &time.SleepArgs{
//				CreateDuration: "30s",
//			}, pulumi.DependsOn([]pulumi.Resource{
//				kmsApiService,
//			}))
//			if err != nil {
//				return err
//			}
//			// Update folder level KAJ default policy
//			_, err = kms.NewFolderKajPolicyConfig(ctx, "example", &kms.FolderKajPolicyConfigArgs{
//				Folder: kajFolder.FolderId,
//				DefaultKeyAccessJustificationPolicy: &kms.FolderKajPolicyConfigDefaultKeyAccessJustificationPolicyArgs{
//					AllowedAccessReasons: pulumi.StringArray{
//						pulumi.String("CUSTOMER_INITIATED_ACCESS"),
//						pulumi.String("GOOGLE_INITIATED_SYSTEM_OPERATION"),
//					},
//				},
//			}, pulumi.DependsOn([]pulumi.Resource{
//				waitEnableServiceApi,
//			}))
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// FolderKajPolicyConfig can be imported using any of these accepted formats:
//
// * `folders/{{folder}}/kajPolicyConfig`
//
// * `{{folder}}`
//
// When using the `pulumi import` command, FolderKajPolicyConfig can be imported using one of the formats above. For example:
//
// ```sh
// $ pulumi import gcp:kms/folderKajPolicyConfig:FolderKajPolicyConfig default folders/{{folder}}/kajPolicyConfig
// ```
//
// ```sh
// $ pulumi import gcp:kms/folderKajPolicyConfig:FolderKajPolicyConfig default {{folder}}
// ```
type FolderKajPolicyConfig struct {
	pulumi.CustomResourceState

	// The default key access justification policy used when a CryptoKey is
	// created in this folder. This is only used when a Key Access Justifications
	// policy is not provided in the CreateCryptoKeyRequest.
	// Structure is documented below.
	DefaultKeyAccessJustificationPolicy FolderKajPolicyConfigDefaultKeyAccessJustificationPolicyPtrOutput `pulumi:"defaultKeyAccessJustificationPolicy"`
	// The numeric folder number for which to retrieve config.
	Folder pulumi.StringOutput `pulumi:"folder"`
}

// NewFolderKajPolicyConfig registers a new resource with the given unique name, arguments, and options.
func NewFolderKajPolicyConfig(ctx *pulumi.Context,
	name string, args *FolderKajPolicyConfigArgs, opts ...pulumi.ResourceOption) (*FolderKajPolicyConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Folder == nil {
		return nil, errors.New("invalid value for required argument 'Folder'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FolderKajPolicyConfig
	err := ctx.RegisterResource("gcp:kms/folderKajPolicyConfig:FolderKajPolicyConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFolderKajPolicyConfig gets an existing FolderKajPolicyConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFolderKajPolicyConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FolderKajPolicyConfigState, opts ...pulumi.ResourceOption) (*FolderKajPolicyConfig, error) {
	var resource FolderKajPolicyConfig
	err := ctx.ReadResource("gcp:kms/folderKajPolicyConfig:FolderKajPolicyConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FolderKajPolicyConfig resources.
type folderKajPolicyConfigState struct {
	// The default key access justification policy used when a CryptoKey is
	// created in this folder. This is only used when a Key Access Justifications
	// policy is not provided in the CreateCryptoKeyRequest.
	// Structure is documented below.
	DefaultKeyAccessJustificationPolicy *FolderKajPolicyConfigDefaultKeyAccessJustificationPolicy `pulumi:"defaultKeyAccessJustificationPolicy"`
	// The numeric folder number for which to retrieve config.
	Folder *string `pulumi:"folder"`
}

type FolderKajPolicyConfigState struct {
	// The default key access justification policy used when a CryptoKey is
	// created in this folder. This is only used when a Key Access Justifications
	// policy is not provided in the CreateCryptoKeyRequest.
	// Structure is documented below.
	DefaultKeyAccessJustificationPolicy FolderKajPolicyConfigDefaultKeyAccessJustificationPolicyPtrInput
	// The numeric folder number for which to retrieve config.
	Folder pulumi.StringPtrInput
}

func (FolderKajPolicyConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*folderKajPolicyConfigState)(nil)).Elem()
}

type folderKajPolicyConfigArgs struct {
	// The default key access justification policy used when a CryptoKey is
	// created in this folder. This is only used when a Key Access Justifications
	// policy is not provided in the CreateCryptoKeyRequest.
	// Structure is documented below.
	DefaultKeyAccessJustificationPolicy *FolderKajPolicyConfigDefaultKeyAccessJustificationPolicy `pulumi:"defaultKeyAccessJustificationPolicy"`
	// The numeric folder number for which to retrieve config.
	Folder string `pulumi:"folder"`
}

// The set of arguments for constructing a FolderKajPolicyConfig resource.
type FolderKajPolicyConfigArgs struct {
	// The default key access justification policy used when a CryptoKey is
	// created in this folder. This is only used when a Key Access Justifications
	// policy is not provided in the CreateCryptoKeyRequest.
	// Structure is documented below.
	DefaultKeyAccessJustificationPolicy FolderKajPolicyConfigDefaultKeyAccessJustificationPolicyPtrInput
	// The numeric folder number for which to retrieve config.
	Folder pulumi.StringInput
}

func (FolderKajPolicyConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*folderKajPolicyConfigArgs)(nil)).Elem()
}

type FolderKajPolicyConfigInput interface {
	pulumi.Input

	ToFolderKajPolicyConfigOutput() FolderKajPolicyConfigOutput
	ToFolderKajPolicyConfigOutputWithContext(ctx context.Context) FolderKajPolicyConfigOutput
}

func (*FolderKajPolicyConfig) ElementType() reflect.Type {
	return reflect.TypeOf((**FolderKajPolicyConfig)(nil)).Elem()
}

func (i *FolderKajPolicyConfig) ToFolderKajPolicyConfigOutput() FolderKajPolicyConfigOutput {
	return i.ToFolderKajPolicyConfigOutputWithContext(context.Background())
}

func (i *FolderKajPolicyConfig) ToFolderKajPolicyConfigOutputWithContext(ctx context.Context) FolderKajPolicyConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FolderKajPolicyConfigOutput)
}

// FolderKajPolicyConfigArrayInput is an input type that accepts FolderKajPolicyConfigArray and FolderKajPolicyConfigArrayOutput values.
// You can construct a concrete instance of `FolderKajPolicyConfigArrayInput` via:
//
//	FolderKajPolicyConfigArray{ FolderKajPolicyConfigArgs{...} }
type FolderKajPolicyConfigArrayInput interface {
	pulumi.Input

	ToFolderKajPolicyConfigArrayOutput() FolderKajPolicyConfigArrayOutput
	ToFolderKajPolicyConfigArrayOutputWithContext(context.Context) FolderKajPolicyConfigArrayOutput
}

type FolderKajPolicyConfigArray []FolderKajPolicyConfigInput

func (FolderKajPolicyConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FolderKajPolicyConfig)(nil)).Elem()
}

func (i FolderKajPolicyConfigArray) ToFolderKajPolicyConfigArrayOutput() FolderKajPolicyConfigArrayOutput {
	return i.ToFolderKajPolicyConfigArrayOutputWithContext(context.Background())
}

func (i FolderKajPolicyConfigArray) ToFolderKajPolicyConfigArrayOutputWithContext(ctx context.Context) FolderKajPolicyConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FolderKajPolicyConfigArrayOutput)
}

// FolderKajPolicyConfigMapInput is an input type that accepts FolderKajPolicyConfigMap and FolderKajPolicyConfigMapOutput values.
// You can construct a concrete instance of `FolderKajPolicyConfigMapInput` via:
//
//	FolderKajPolicyConfigMap{ "key": FolderKajPolicyConfigArgs{...} }
type FolderKajPolicyConfigMapInput interface {
	pulumi.Input

	ToFolderKajPolicyConfigMapOutput() FolderKajPolicyConfigMapOutput
	ToFolderKajPolicyConfigMapOutputWithContext(context.Context) FolderKajPolicyConfigMapOutput
}

type FolderKajPolicyConfigMap map[string]FolderKajPolicyConfigInput

func (FolderKajPolicyConfigMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FolderKajPolicyConfig)(nil)).Elem()
}

func (i FolderKajPolicyConfigMap) ToFolderKajPolicyConfigMapOutput() FolderKajPolicyConfigMapOutput {
	return i.ToFolderKajPolicyConfigMapOutputWithContext(context.Background())
}

func (i FolderKajPolicyConfigMap) ToFolderKajPolicyConfigMapOutputWithContext(ctx context.Context) FolderKajPolicyConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FolderKajPolicyConfigMapOutput)
}

type FolderKajPolicyConfigOutput struct{ *pulumi.OutputState }

func (FolderKajPolicyConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FolderKajPolicyConfig)(nil)).Elem()
}

func (o FolderKajPolicyConfigOutput) ToFolderKajPolicyConfigOutput() FolderKajPolicyConfigOutput {
	return o
}

func (o FolderKajPolicyConfigOutput) ToFolderKajPolicyConfigOutputWithContext(ctx context.Context) FolderKajPolicyConfigOutput {
	return o
}

// The default key access justification policy used when a CryptoKey is
// created in this folder. This is only used when a Key Access Justifications
// policy is not provided in the CreateCryptoKeyRequest.
// Structure is documented below.
func (o FolderKajPolicyConfigOutput) DefaultKeyAccessJustificationPolicy() FolderKajPolicyConfigDefaultKeyAccessJustificationPolicyPtrOutput {
	return o.ApplyT(func(v *FolderKajPolicyConfig) FolderKajPolicyConfigDefaultKeyAccessJustificationPolicyPtrOutput {
		return v.DefaultKeyAccessJustificationPolicy
	}).(FolderKajPolicyConfigDefaultKeyAccessJustificationPolicyPtrOutput)
}

// The numeric folder number for which to retrieve config.
func (o FolderKajPolicyConfigOutput) Folder() pulumi.StringOutput {
	return o.ApplyT(func(v *FolderKajPolicyConfig) pulumi.StringOutput { return v.Folder }).(pulumi.StringOutput)
}

type FolderKajPolicyConfigArrayOutput struct{ *pulumi.OutputState }

func (FolderKajPolicyConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FolderKajPolicyConfig)(nil)).Elem()
}

func (o FolderKajPolicyConfigArrayOutput) ToFolderKajPolicyConfigArrayOutput() FolderKajPolicyConfigArrayOutput {
	return o
}

func (o FolderKajPolicyConfigArrayOutput) ToFolderKajPolicyConfigArrayOutputWithContext(ctx context.Context) FolderKajPolicyConfigArrayOutput {
	return o
}

func (o FolderKajPolicyConfigArrayOutput) Index(i pulumi.IntInput) FolderKajPolicyConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FolderKajPolicyConfig {
		return vs[0].([]*FolderKajPolicyConfig)[vs[1].(int)]
	}).(FolderKajPolicyConfigOutput)
}

type FolderKajPolicyConfigMapOutput struct{ *pulumi.OutputState }

func (FolderKajPolicyConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FolderKajPolicyConfig)(nil)).Elem()
}

func (o FolderKajPolicyConfigMapOutput) ToFolderKajPolicyConfigMapOutput() FolderKajPolicyConfigMapOutput {
	return o
}

func (o FolderKajPolicyConfigMapOutput) ToFolderKajPolicyConfigMapOutputWithContext(ctx context.Context) FolderKajPolicyConfigMapOutput {
	return o
}

func (o FolderKajPolicyConfigMapOutput) MapIndex(k pulumi.StringInput) FolderKajPolicyConfigOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FolderKajPolicyConfig {
		return vs[0].(map[string]*FolderKajPolicyConfig)[vs[1].(string)]
	}).(FolderKajPolicyConfigOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FolderKajPolicyConfigInput)(nil)).Elem(), &FolderKajPolicyConfig{})
	pulumi.RegisterInputType(reflect.TypeOf((*FolderKajPolicyConfigArrayInput)(nil)).Elem(), FolderKajPolicyConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FolderKajPolicyConfigMapInput)(nil)).Elem(), FolderKajPolicyConfigMap{})
	pulumi.RegisterOutputType(FolderKajPolicyConfigOutput{})
	pulumi.RegisterOutputType(FolderKajPolicyConfigArrayOutput{})
	pulumi.RegisterOutputType(FolderKajPolicyConfigMapOutput{})
}
