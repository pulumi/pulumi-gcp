// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package kms

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ### Kms Organization Kaj Policy Config Basic
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/kms"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := kms.NewOrganizationKajPolicyConfig(ctx, "example", &kms.OrganizationKajPolicyConfigArgs{
//				Organization: pulumi.String("123456789"),
//				DefaultKeyAccessJustificationPolicy: &kms.OrganizationKajPolicyConfigDefaultKeyAccessJustificationPolicyArgs{
//					AllowedAccessReasons: pulumi.StringArray{
//						pulumi.String("CUSTOMER_INITIATED_ACCESS"),
//						pulumi.String("GOOGLE_INITIATED_SYSTEM_OPERATION"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// OrganizationKajPolicyConfig can be imported using any of these accepted formats:
//
// * `organizations/{{organization}}/kajPolicyConfig`
//
// * `{{organization}}`
//
// When using the `pulumi import` command, OrganizationKajPolicyConfig can be imported using one of the formats above. For example:
//
// ```sh
// $ pulumi import gcp:kms/organizationKajPolicyConfig:OrganizationKajPolicyConfig default organizations/{{organization}}/kajPolicyConfig
// ```
//
// ```sh
// $ pulumi import gcp:kms/organizationKajPolicyConfig:OrganizationKajPolicyConfig default {{organization}}
// ```
type OrganizationKajPolicyConfig struct {
	pulumi.CustomResourceState

	// The default key access justification policy used when a CryptoKey is
	// created in this organization. This is only used when a Key Access Justifications
	// policy is not provided in the CreateCryptoKeyRequest.
	// Structure is documented below.
	DefaultKeyAccessJustificationPolicy OrganizationKajPolicyConfigDefaultKeyAccessJustificationPolicyPtrOutput `pulumi:"defaultKeyAccessJustificationPolicy"`
	// The organization number for which to retrieve config.
	Organization pulumi.StringOutput `pulumi:"organization"`
}

// NewOrganizationKajPolicyConfig registers a new resource with the given unique name, arguments, and options.
func NewOrganizationKajPolicyConfig(ctx *pulumi.Context,
	name string, args *OrganizationKajPolicyConfigArgs, opts ...pulumi.ResourceOption) (*OrganizationKajPolicyConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Organization == nil {
		return nil, errors.New("invalid value for required argument 'Organization'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource OrganizationKajPolicyConfig
	err := ctx.RegisterResource("gcp:kms/organizationKajPolicyConfig:OrganizationKajPolicyConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOrganizationKajPolicyConfig gets an existing OrganizationKajPolicyConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOrganizationKajPolicyConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OrganizationKajPolicyConfigState, opts ...pulumi.ResourceOption) (*OrganizationKajPolicyConfig, error) {
	var resource OrganizationKajPolicyConfig
	err := ctx.ReadResource("gcp:kms/organizationKajPolicyConfig:OrganizationKajPolicyConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OrganizationKajPolicyConfig resources.
type organizationKajPolicyConfigState struct {
	// The default key access justification policy used when a CryptoKey is
	// created in this organization. This is only used when a Key Access Justifications
	// policy is not provided in the CreateCryptoKeyRequest.
	// Structure is documented below.
	DefaultKeyAccessJustificationPolicy *OrganizationKajPolicyConfigDefaultKeyAccessJustificationPolicy `pulumi:"defaultKeyAccessJustificationPolicy"`
	// The organization number for which to retrieve config.
	Organization *string `pulumi:"organization"`
}

type OrganizationKajPolicyConfigState struct {
	// The default key access justification policy used when a CryptoKey is
	// created in this organization. This is only used when a Key Access Justifications
	// policy is not provided in the CreateCryptoKeyRequest.
	// Structure is documented below.
	DefaultKeyAccessJustificationPolicy OrganizationKajPolicyConfigDefaultKeyAccessJustificationPolicyPtrInput
	// The organization number for which to retrieve config.
	Organization pulumi.StringPtrInput
}

func (OrganizationKajPolicyConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationKajPolicyConfigState)(nil)).Elem()
}

type organizationKajPolicyConfigArgs struct {
	// The default key access justification policy used when a CryptoKey is
	// created in this organization. This is only used when a Key Access Justifications
	// policy is not provided in the CreateCryptoKeyRequest.
	// Structure is documented below.
	DefaultKeyAccessJustificationPolicy *OrganizationKajPolicyConfigDefaultKeyAccessJustificationPolicy `pulumi:"defaultKeyAccessJustificationPolicy"`
	// The organization number for which to retrieve config.
	Organization string `pulumi:"organization"`
}

// The set of arguments for constructing a OrganizationKajPolicyConfig resource.
type OrganizationKajPolicyConfigArgs struct {
	// The default key access justification policy used when a CryptoKey is
	// created in this organization. This is only used when a Key Access Justifications
	// policy is not provided in the CreateCryptoKeyRequest.
	// Structure is documented below.
	DefaultKeyAccessJustificationPolicy OrganizationKajPolicyConfigDefaultKeyAccessJustificationPolicyPtrInput
	// The organization number for which to retrieve config.
	Organization pulumi.StringInput
}

func (OrganizationKajPolicyConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationKajPolicyConfigArgs)(nil)).Elem()
}

type OrganizationKajPolicyConfigInput interface {
	pulumi.Input

	ToOrganizationKajPolicyConfigOutput() OrganizationKajPolicyConfigOutput
	ToOrganizationKajPolicyConfigOutputWithContext(ctx context.Context) OrganizationKajPolicyConfigOutput
}

func (*OrganizationKajPolicyConfig) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationKajPolicyConfig)(nil)).Elem()
}

func (i *OrganizationKajPolicyConfig) ToOrganizationKajPolicyConfigOutput() OrganizationKajPolicyConfigOutput {
	return i.ToOrganizationKajPolicyConfigOutputWithContext(context.Background())
}

func (i *OrganizationKajPolicyConfig) ToOrganizationKajPolicyConfigOutputWithContext(ctx context.Context) OrganizationKajPolicyConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationKajPolicyConfigOutput)
}

// OrganizationKajPolicyConfigArrayInput is an input type that accepts OrganizationKajPolicyConfigArray and OrganizationKajPolicyConfigArrayOutput values.
// You can construct a concrete instance of `OrganizationKajPolicyConfigArrayInput` via:
//
//	OrganizationKajPolicyConfigArray{ OrganizationKajPolicyConfigArgs{...} }
type OrganizationKajPolicyConfigArrayInput interface {
	pulumi.Input

	ToOrganizationKajPolicyConfigArrayOutput() OrganizationKajPolicyConfigArrayOutput
	ToOrganizationKajPolicyConfigArrayOutputWithContext(context.Context) OrganizationKajPolicyConfigArrayOutput
}

type OrganizationKajPolicyConfigArray []OrganizationKajPolicyConfigInput

func (OrganizationKajPolicyConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OrganizationKajPolicyConfig)(nil)).Elem()
}

func (i OrganizationKajPolicyConfigArray) ToOrganizationKajPolicyConfigArrayOutput() OrganizationKajPolicyConfigArrayOutput {
	return i.ToOrganizationKajPolicyConfigArrayOutputWithContext(context.Background())
}

func (i OrganizationKajPolicyConfigArray) ToOrganizationKajPolicyConfigArrayOutputWithContext(ctx context.Context) OrganizationKajPolicyConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationKajPolicyConfigArrayOutput)
}

// OrganizationKajPolicyConfigMapInput is an input type that accepts OrganizationKajPolicyConfigMap and OrganizationKajPolicyConfigMapOutput values.
// You can construct a concrete instance of `OrganizationKajPolicyConfigMapInput` via:
//
//	OrganizationKajPolicyConfigMap{ "key": OrganizationKajPolicyConfigArgs{...} }
type OrganizationKajPolicyConfigMapInput interface {
	pulumi.Input

	ToOrganizationKajPolicyConfigMapOutput() OrganizationKajPolicyConfigMapOutput
	ToOrganizationKajPolicyConfigMapOutputWithContext(context.Context) OrganizationKajPolicyConfigMapOutput
}

type OrganizationKajPolicyConfigMap map[string]OrganizationKajPolicyConfigInput

func (OrganizationKajPolicyConfigMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OrganizationKajPolicyConfig)(nil)).Elem()
}

func (i OrganizationKajPolicyConfigMap) ToOrganizationKajPolicyConfigMapOutput() OrganizationKajPolicyConfigMapOutput {
	return i.ToOrganizationKajPolicyConfigMapOutputWithContext(context.Background())
}

func (i OrganizationKajPolicyConfigMap) ToOrganizationKajPolicyConfigMapOutputWithContext(ctx context.Context) OrganizationKajPolicyConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationKajPolicyConfigMapOutput)
}

type OrganizationKajPolicyConfigOutput struct{ *pulumi.OutputState }

func (OrganizationKajPolicyConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationKajPolicyConfig)(nil)).Elem()
}

func (o OrganizationKajPolicyConfigOutput) ToOrganizationKajPolicyConfigOutput() OrganizationKajPolicyConfigOutput {
	return o
}

func (o OrganizationKajPolicyConfigOutput) ToOrganizationKajPolicyConfigOutputWithContext(ctx context.Context) OrganizationKajPolicyConfigOutput {
	return o
}

// The default key access justification policy used when a CryptoKey is
// created in this organization. This is only used when a Key Access Justifications
// policy is not provided in the CreateCryptoKeyRequest.
// Structure is documented below.
func (o OrganizationKajPolicyConfigOutput) DefaultKeyAccessJustificationPolicy() OrganizationKajPolicyConfigDefaultKeyAccessJustificationPolicyPtrOutput {
	return o.ApplyT(func(v *OrganizationKajPolicyConfig) OrganizationKajPolicyConfigDefaultKeyAccessJustificationPolicyPtrOutput {
		return v.DefaultKeyAccessJustificationPolicy
	}).(OrganizationKajPolicyConfigDefaultKeyAccessJustificationPolicyPtrOutput)
}

// The organization number for which to retrieve config.
func (o OrganizationKajPolicyConfigOutput) Organization() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationKajPolicyConfig) pulumi.StringOutput { return v.Organization }).(pulumi.StringOutput)
}

type OrganizationKajPolicyConfigArrayOutput struct{ *pulumi.OutputState }

func (OrganizationKajPolicyConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OrganizationKajPolicyConfig)(nil)).Elem()
}

func (o OrganizationKajPolicyConfigArrayOutput) ToOrganizationKajPolicyConfigArrayOutput() OrganizationKajPolicyConfigArrayOutput {
	return o
}

func (o OrganizationKajPolicyConfigArrayOutput) ToOrganizationKajPolicyConfigArrayOutputWithContext(ctx context.Context) OrganizationKajPolicyConfigArrayOutput {
	return o
}

func (o OrganizationKajPolicyConfigArrayOutput) Index(i pulumi.IntInput) OrganizationKajPolicyConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *OrganizationKajPolicyConfig {
		return vs[0].([]*OrganizationKajPolicyConfig)[vs[1].(int)]
	}).(OrganizationKajPolicyConfigOutput)
}

type OrganizationKajPolicyConfigMapOutput struct{ *pulumi.OutputState }

func (OrganizationKajPolicyConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OrganizationKajPolicyConfig)(nil)).Elem()
}

func (o OrganizationKajPolicyConfigMapOutput) ToOrganizationKajPolicyConfigMapOutput() OrganizationKajPolicyConfigMapOutput {
	return o
}

func (o OrganizationKajPolicyConfigMapOutput) ToOrganizationKajPolicyConfigMapOutputWithContext(ctx context.Context) OrganizationKajPolicyConfigMapOutput {
	return o
}

func (o OrganizationKajPolicyConfigMapOutput) MapIndex(k pulumi.StringInput) OrganizationKajPolicyConfigOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *OrganizationKajPolicyConfig {
		return vs[0].(map[string]*OrganizationKajPolicyConfig)[vs[1].(string)]
	}).(OrganizationKajPolicyConfigOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationKajPolicyConfigInput)(nil)).Elem(), &OrganizationKajPolicyConfig{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationKajPolicyConfigArrayInput)(nil)).Elem(), OrganizationKajPolicyConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationKajPolicyConfigMapInput)(nil)).Elem(), OrganizationKajPolicyConfigMap{})
	pulumi.RegisterOutputType(OrganizationKajPolicyConfigOutput{})
	pulumi.RegisterOutputType(OrganizationKajPolicyConfigArrayOutput{})
	pulumi.RegisterOutputType(OrganizationKajPolicyConfigMapOutput{})
}
