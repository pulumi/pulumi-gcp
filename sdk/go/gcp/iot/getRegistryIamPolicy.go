// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iot

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Retrieves the current IAM policy data for deviceregistry
//
// ## example
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/iot"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := iot.LookupRegistryIamPolicy(ctx, &iot.LookupRegistryIamPolicyArgs{
//				Project: pulumi.StringRef(google_cloudiot_registry.TestRegistry.Project),
//				Region:  pulumi.StringRef(google_cloudiot_registry.TestRegistry.Region),
//				Name:    google_cloudiot_registry.TestRegistry.Name,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupRegistryIamPolicy(ctx *pulumi.Context, args *LookupRegistryIamPolicyArgs, opts ...pulumi.InvokeOption) (*LookupRegistryIamPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupRegistryIamPolicyResult
	err := ctx.Invoke("gcp:iot/getRegistryIamPolicy:getRegistryIamPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRegistryIamPolicy.
type LookupRegistryIamPolicyArgs struct {
	// Used to find the parent resource to bind the IAM policy to
	Name string `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project *string `pulumi:"project"`
	// The region in which the created registry should reside.
	// If it is not provided, the provider region is used.
	// Used to find the parent resource to bind the IAM policy to. If not specified,
	// the value will be parsed from the identifier of the parent resource. If no region is provided in the parent identifier and no
	// region is specified, it is taken from the provider configuration.
	Region *string `pulumi:"region"`
}

// A collection of values returned by getRegistryIamPolicy.
type LookupRegistryIamPolicyResult struct {
	// (Computed) The etag of the IAM policy.
	Etag string `pulumi:"etag"`
	// The provider-assigned unique ID for this managed resource.
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
	// (Required only by `iot.RegistryIamPolicy`) The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData string `pulumi:"policyData"`
	Project    string `pulumi:"project"`
	Region     string `pulumi:"region"`
}

func LookupRegistryIamPolicyOutput(ctx *pulumi.Context, args LookupRegistryIamPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupRegistryIamPolicyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupRegistryIamPolicyResult, error) {
			args := v.(LookupRegistryIamPolicyArgs)
			r, err := LookupRegistryIamPolicy(ctx, &args, opts...)
			var s LookupRegistryIamPolicyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupRegistryIamPolicyResultOutput)
}

// A collection of arguments for invoking getRegistryIamPolicy.
type LookupRegistryIamPolicyOutputArgs struct {
	// Used to find the parent resource to bind the IAM policy to
	Name pulumi.StringInput `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringPtrInput `pulumi:"project"`
	// The region in which the created registry should reside.
	// If it is not provided, the provider region is used.
	// Used to find the parent resource to bind the IAM policy to. If not specified,
	// the value will be parsed from the identifier of the parent resource. If no region is provided in the parent identifier and no
	// region is specified, it is taken from the provider configuration.
	Region pulumi.StringPtrInput `pulumi:"region"`
}

func (LookupRegistryIamPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRegistryIamPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getRegistryIamPolicy.
type LookupRegistryIamPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupRegistryIamPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRegistryIamPolicyResult)(nil)).Elem()
}

func (o LookupRegistryIamPolicyResultOutput) ToLookupRegistryIamPolicyResultOutput() LookupRegistryIamPolicyResultOutput {
	return o
}

func (o LookupRegistryIamPolicyResultOutput) ToLookupRegistryIamPolicyResultOutputWithContext(ctx context.Context) LookupRegistryIamPolicyResultOutput {
	return o
}

func (o LookupRegistryIamPolicyResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupRegistryIamPolicyResult] {
	return pulumix.Output[LookupRegistryIamPolicyResult]{
		OutputState: o.OutputState,
	}
}

// (Computed) The etag of the IAM policy.
func (o LookupRegistryIamPolicyResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegistryIamPolicyResult) string { return v.Etag }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupRegistryIamPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegistryIamPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupRegistryIamPolicyResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegistryIamPolicyResult) string { return v.Name }).(pulumi.StringOutput)
}

// (Required only by `iot.RegistryIamPolicy`) The policy data generated by
// a `organizations.getIAMPolicy` data source.
func (o LookupRegistryIamPolicyResultOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegistryIamPolicyResult) string { return v.PolicyData }).(pulumi.StringOutput)
}

func (o LookupRegistryIamPolicyResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegistryIamPolicyResult) string { return v.Project }).(pulumi.StringOutput)
}

func (o LookupRegistryIamPolicyResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegistryIamPolicyResult) string { return v.Region }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRegistryIamPolicyResultOutput{})
}
