// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package securesourcemanager

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type InstanceHostConfig struct {
	// (Output)
	// API hostname.
	Api *string `pulumi:"api"`
	// (Output)
	// Git HTTP hostname.
	GitHttp *string `pulumi:"gitHttp"`
	// (Output)
	// Git SSH hostname.
	GitSsh *string `pulumi:"gitSsh"`
	// (Output)
	// HTML hostname.
	Html *string `pulumi:"html"`
}

// InstanceHostConfigInput is an input type that accepts InstanceHostConfigArgs and InstanceHostConfigOutput values.
// You can construct a concrete instance of `InstanceHostConfigInput` via:
//
//	InstanceHostConfigArgs{...}
type InstanceHostConfigInput interface {
	pulumi.Input

	ToInstanceHostConfigOutput() InstanceHostConfigOutput
	ToInstanceHostConfigOutputWithContext(context.Context) InstanceHostConfigOutput
}

type InstanceHostConfigArgs struct {
	// (Output)
	// API hostname.
	Api pulumi.StringPtrInput `pulumi:"api"`
	// (Output)
	// Git HTTP hostname.
	GitHttp pulumi.StringPtrInput `pulumi:"gitHttp"`
	// (Output)
	// Git SSH hostname.
	GitSsh pulumi.StringPtrInput `pulumi:"gitSsh"`
	// (Output)
	// HTML hostname.
	Html pulumi.StringPtrInput `pulumi:"html"`
}

func (InstanceHostConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceHostConfig)(nil)).Elem()
}

func (i InstanceHostConfigArgs) ToInstanceHostConfigOutput() InstanceHostConfigOutput {
	return i.ToInstanceHostConfigOutputWithContext(context.Background())
}

func (i InstanceHostConfigArgs) ToInstanceHostConfigOutputWithContext(ctx context.Context) InstanceHostConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceHostConfigOutput)
}

// InstanceHostConfigArrayInput is an input type that accepts InstanceHostConfigArray and InstanceHostConfigArrayOutput values.
// You can construct a concrete instance of `InstanceHostConfigArrayInput` via:
//
//	InstanceHostConfigArray{ InstanceHostConfigArgs{...} }
type InstanceHostConfigArrayInput interface {
	pulumi.Input

	ToInstanceHostConfigArrayOutput() InstanceHostConfigArrayOutput
	ToInstanceHostConfigArrayOutputWithContext(context.Context) InstanceHostConfigArrayOutput
}

type InstanceHostConfigArray []InstanceHostConfigInput

func (InstanceHostConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceHostConfig)(nil)).Elem()
}

func (i InstanceHostConfigArray) ToInstanceHostConfigArrayOutput() InstanceHostConfigArrayOutput {
	return i.ToInstanceHostConfigArrayOutputWithContext(context.Background())
}

func (i InstanceHostConfigArray) ToInstanceHostConfigArrayOutputWithContext(ctx context.Context) InstanceHostConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceHostConfigArrayOutput)
}

type InstanceHostConfigOutput struct{ *pulumi.OutputState }

func (InstanceHostConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceHostConfig)(nil)).Elem()
}

func (o InstanceHostConfigOutput) ToInstanceHostConfigOutput() InstanceHostConfigOutput {
	return o
}

func (o InstanceHostConfigOutput) ToInstanceHostConfigOutputWithContext(ctx context.Context) InstanceHostConfigOutput {
	return o
}

// (Output)
// API hostname.
func (o InstanceHostConfigOutput) Api() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceHostConfig) *string { return v.Api }).(pulumi.StringPtrOutput)
}

// (Output)
// Git HTTP hostname.
func (o InstanceHostConfigOutput) GitHttp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceHostConfig) *string { return v.GitHttp }).(pulumi.StringPtrOutput)
}

// (Output)
// Git SSH hostname.
func (o InstanceHostConfigOutput) GitSsh() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceHostConfig) *string { return v.GitSsh }).(pulumi.StringPtrOutput)
}

// (Output)
// HTML hostname.
func (o InstanceHostConfigOutput) Html() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceHostConfig) *string { return v.Html }).(pulumi.StringPtrOutput)
}

type InstanceHostConfigArrayOutput struct{ *pulumi.OutputState }

func (InstanceHostConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceHostConfig)(nil)).Elem()
}

func (o InstanceHostConfigArrayOutput) ToInstanceHostConfigArrayOutput() InstanceHostConfigArrayOutput {
	return o
}

func (o InstanceHostConfigArrayOutput) ToInstanceHostConfigArrayOutputWithContext(ctx context.Context) InstanceHostConfigArrayOutput {
	return o
}

func (o InstanceHostConfigArrayOutput) Index(i pulumi.IntInput) InstanceHostConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceHostConfig {
		return vs[0].([]InstanceHostConfig)[vs[1].(int)]
	}).(InstanceHostConfigOutput)
}

type InstanceIamBindingCondition struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

// InstanceIamBindingConditionInput is an input type that accepts InstanceIamBindingConditionArgs and InstanceIamBindingConditionOutput values.
// You can construct a concrete instance of `InstanceIamBindingConditionInput` via:
//
//	InstanceIamBindingConditionArgs{...}
type InstanceIamBindingConditionInput interface {
	pulumi.Input

	ToInstanceIamBindingConditionOutput() InstanceIamBindingConditionOutput
	ToInstanceIamBindingConditionOutputWithContext(context.Context) InstanceIamBindingConditionOutput
}

type InstanceIamBindingConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (InstanceIamBindingConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceIamBindingCondition)(nil)).Elem()
}

func (i InstanceIamBindingConditionArgs) ToInstanceIamBindingConditionOutput() InstanceIamBindingConditionOutput {
	return i.ToInstanceIamBindingConditionOutputWithContext(context.Background())
}

func (i InstanceIamBindingConditionArgs) ToInstanceIamBindingConditionOutputWithContext(ctx context.Context) InstanceIamBindingConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceIamBindingConditionOutput)
}

func (i InstanceIamBindingConditionArgs) ToInstanceIamBindingConditionPtrOutput() InstanceIamBindingConditionPtrOutput {
	return i.ToInstanceIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i InstanceIamBindingConditionArgs) ToInstanceIamBindingConditionPtrOutputWithContext(ctx context.Context) InstanceIamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceIamBindingConditionOutput).ToInstanceIamBindingConditionPtrOutputWithContext(ctx)
}

// InstanceIamBindingConditionPtrInput is an input type that accepts InstanceIamBindingConditionArgs, InstanceIamBindingConditionPtr and InstanceIamBindingConditionPtrOutput values.
// You can construct a concrete instance of `InstanceIamBindingConditionPtrInput` via:
//
//	        InstanceIamBindingConditionArgs{...}
//
//	or:
//
//	        nil
type InstanceIamBindingConditionPtrInput interface {
	pulumi.Input

	ToInstanceIamBindingConditionPtrOutput() InstanceIamBindingConditionPtrOutput
	ToInstanceIamBindingConditionPtrOutputWithContext(context.Context) InstanceIamBindingConditionPtrOutput
}

type instanceIamBindingConditionPtrType InstanceIamBindingConditionArgs

func InstanceIamBindingConditionPtr(v *InstanceIamBindingConditionArgs) InstanceIamBindingConditionPtrInput {
	return (*instanceIamBindingConditionPtrType)(v)
}

func (*instanceIamBindingConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceIamBindingCondition)(nil)).Elem()
}

func (i *instanceIamBindingConditionPtrType) ToInstanceIamBindingConditionPtrOutput() InstanceIamBindingConditionPtrOutput {
	return i.ToInstanceIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i *instanceIamBindingConditionPtrType) ToInstanceIamBindingConditionPtrOutputWithContext(ctx context.Context) InstanceIamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceIamBindingConditionPtrOutput)
}

type InstanceIamBindingConditionOutput struct{ *pulumi.OutputState }

func (InstanceIamBindingConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceIamBindingCondition)(nil)).Elem()
}

func (o InstanceIamBindingConditionOutput) ToInstanceIamBindingConditionOutput() InstanceIamBindingConditionOutput {
	return o
}

func (o InstanceIamBindingConditionOutput) ToInstanceIamBindingConditionOutputWithContext(ctx context.Context) InstanceIamBindingConditionOutput {
	return o
}

func (o InstanceIamBindingConditionOutput) ToInstanceIamBindingConditionPtrOutput() InstanceIamBindingConditionPtrOutput {
	return o.ToInstanceIamBindingConditionPtrOutputWithContext(context.Background())
}

func (o InstanceIamBindingConditionOutput) ToInstanceIamBindingConditionPtrOutputWithContext(ctx context.Context) InstanceIamBindingConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceIamBindingCondition) *InstanceIamBindingCondition {
		return &v
	}).(InstanceIamBindingConditionPtrOutput)
}

func (o InstanceIamBindingConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceIamBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o InstanceIamBindingConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceIamBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o InstanceIamBindingConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceIamBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

type InstanceIamBindingConditionPtrOutput struct{ *pulumi.OutputState }

func (InstanceIamBindingConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceIamBindingCondition)(nil)).Elem()
}

func (o InstanceIamBindingConditionPtrOutput) ToInstanceIamBindingConditionPtrOutput() InstanceIamBindingConditionPtrOutput {
	return o
}

func (o InstanceIamBindingConditionPtrOutput) ToInstanceIamBindingConditionPtrOutputWithContext(ctx context.Context) InstanceIamBindingConditionPtrOutput {
	return o
}

func (o InstanceIamBindingConditionPtrOutput) Elem() InstanceIamBindingConditionOutput {
	return o.ApplyT(func(v *InstanceIamBindingCondition) InstanceIamBindingCondition {
		if v != nil {
			return *v
		}
		var ret InstanceIamBindingCondition
		return ret
	}).(InstanceIamBindingConditionOutput)
}

func (o InstanceIamBindingConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o InstanceIamBindingConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

func (o InstanceIamBindingConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type InstanceIamMemberCondition struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

// InstanceIamMemberConditionInput is an input type that accepts InstanceIamMemberConditionArgs and InstanceIamMemberConditionOutput values.
// You can construct a concrete instance of `InstanceIamMemberConditionInput` via:
//
//	InstanceIamMemberConditionArgs{...}
type InstanceIamMemberConditionInput interface {
	pulumi.Input

	ToInstanceIamMemberConditionOutput() InstanceIamMemberConditionOutput
	ToInstanceIamMemberConditionOutputWithContext(context.Context) InstanceIamMemberConditionOutput
}

type InstanceIamMemberConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (InstanceIamMemberConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceIamMemberCondition)(nil)).Elem()
}

func (i InstanceIamMemberConditionArgs) ToInstanceIamMemberConditionOutput() InstanceIamMemberConditionOutput {
	return i.ToInstanceIamMemberConditionOutputWithContext(context.Background())
}

func (i InstanceIamMemberConditionArgs) ToInstanceIamMemberConditionOutputWithContext(ctx context.Context) InstanceIamMemberConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceIamMemberConditionOutput)
}

func (i InstanceIamMemberConditionArgs) ToInstanceIamMemberConditionPtrOutput() InstanceIamMemberConditionPtrOutput {
	return i.ToInstanceIamMemberConditionPtrOutputWithContext(context.Background())
}

func (i InstanceIamMemberConditionArgs) ToInstanceIamMemberConditionPtrOutputWithContext(ctx context.Context) InstanceIamMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceIamMemberConditionOutput).ToInstanceIamMemberConditionPtrOutputWithContext(ctx)
}

// InstanceIamMemberConditionPtrInput is an input type that accepts InstanceIamMemberConditionArgs, InstanceIamMemberConditionPtr and InstanceIamMemberConditionPtrOutput values.
// You can construct a concrete instance of `InstanceIamMemberConditionPtrInput` via:
//
//	        InstanceIamMemberConditionArgs{...}
//
//	or:
//
//	        nil
type InstanceIamMemberConditionPtrInput interface {
	pulumi.Input

	ToInstanceIamMemberConditionPtrOutput() InstanceIamMemberConditionPtrOutput
	ToInstanceIamMemberConditionPtrOutputWithContext(context.Context) InstanceIamMemberConditionPtrOutput
}

type instanceIamMemberConditionPtrType InstanceIamMemberConditionArgs

func InstanceIamMemberConditionPtr(v *InstanceIamMemberConditionArgs) InstanceIamMemberConditionPtrInput {
	return (*instanceIamMemberConditionPtrType)(v)
}

func (*instanceIamMemberConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceIamMemberCondition)(nil)).Elem()
}

func (i *instanceIamMemberConditionPtrType) ToInstanceIamMemberConditionPtrOutput() InstanceIamMemberConditionPtrOutput {
	return i.ToInstanceIamMemberConditionPtrOutputWithContext(context.Background())
}

func (i *instanceIamMemberConditionPtrType) ToInstanceIamMemberConditionPtrOutputWithContext(ctx context.Context) InstanceIamMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceIamMemberConditionPtrOutput)
}

type InstanceIamMemberConditionOutput struct{ *pulumi.OutputState }

func (InstanceIamMemberConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceIamMemberCondition)(nil)).Elem()
}

func (o InstanceIamMemberConditionOutput) ToInstanceIamMemberConditionOutput() InstanceIamMemberConditionOutput {
	return o
}

func (o InstanceIamMemberConditionOutput) ToInstanceIamMemberConditionOutputWithContext(ctx context.Context) InstanceIamMemberConditionOutput {
	return o
}

func (o InstanceIamMemberConditionOutput) ToInstanceIamMemberConditionPtrOutput() InstanceIamMemberConditionPtrOutput {
	return o.ToInstanceIamMemberConditionPtrOutputWithContext(context.Background())
}

func (o InstanceIamMemberConditionOutput) ToInstanceIamMemberConditionPtrOutputWithContext(ctx context.Context) InstanceIamMemberConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceIamMemberCondition) *InstanceIamMemberCondition {
		return &v
	}).(InstanceIamMemberConditionPtrOutput)
}

func (o InstanceIamMemberConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceIamMemberCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o InstanceIamMemberConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceIamMemberCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o InstanceIamMemberConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceIamMemberCondition) string { return v.Title }).(pulumi.StringOutput)
}

type InstanceIamMemberConditionPtrOutput struct{ *pulumi.OutputState }

func (InstanceIamMemberConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceIamMemberCondition)(nil)).Elem()
}

func (o InstanceIamMemberConditionPtrOutput) ToInstanceIamMemberConditionPtrOutput() InstanceIamMemberConditionPtrOutput {
	return o
}

func (o InstanceIamMemberConditionPtrOutput) ToInstanceIamMemberConditionPtrOutputWithContext(ctx context.Context) InstanceIamMemberConditionPtrOutput {
	return o
}

func (o InstanceIamMemberConditionPtrOutput) Elem() InstanceIamMemberConditionOutput {
	return o.ApplyT(func(v *InstanceIamMemberCondition) InstanceIamMemberCondition {
		if v != nil {
			return *v
		}
		var ret InstanceIamMemberCondition
		return ret
	}).(InstanceIamMemberConditionOutput)
}

func (o InstanceIamMemberConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o InstanceIamMemberConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

func (o InstanceIamMemberConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type InstancePrivateConfig struct {
	// CA pool resource, resource must in the format of `projects/{project}/locations/{location}/caPools/{ca_pool}`.
	CaPool *string `pulumi:"caPool"`
	// (Output)
	// Service Attachment for HTTP, resource is in the format of `projects/{project}/regions/{region}/serviceAttachments/{service_attachment}`.
	HttpServiceAttachment *string `pulumi:"httpServiceAttachment"`
	// 'Indicate if it's private instance.'
	IsPrivate bool `pulumi:"isPrivate"`
	// (Output)
	// Service Attachment for SSH, resource is in the format of `projects/{project}/regions/{region}/serviceAttachments/{service_attachment}`.
	SshServiceAttachment *string `pulumi:"sshServiceAttachment"`
}

// InstancePrivateConfigInput is an input type that accepts InstancePrivateConfigArgs and InstancePrivateConfigOutput values.
// You can construct a concrete instance of `InstancePrivateConfigInput` via:
//
//	InstancePrivateConfigArgs{...}
type InstancePrivateConfigInput interface {
	pulumi.Input

	ToInstancePrivateConfigOutput() InstancePrivateConfigOutput
	ToInstancePrivateConfigOutputWithContext(context.Context) InstancePrivateConfigOutput
}

type InstancePrivateConfigArgs struct {
	// CA pool resource, resource must in the format of `projects/{project}/locations/{location}/caPools/{ca_pool}`.
	CaPool pulumi.StringPtrInput `pulumi:"caPool"`
	// (Output)
	// Service Attachment for HTTP, resource is in the format of `projects/{project}/regions/{region}/serviceAttachments/{service_attachment}`.
	HttpServiceAttachment pulumi.StringPtrInput `pulumi:"httpServiceAttachment"`
	// 'Indicate if it's private instance.'
	IsPrivate pulumi.BoolInput `pulumi:"isPrivate"`
	// (Output)
	// Service Attachment for SSH, resource is in the format of `projects/{project}/regions/{region}/serviceAttachments/{service_attachment}`.
	SshServiceAttachment pulumi.StringPtrInput `pulumi:"sshServiceAttachment"`
}

func (InstancePrivateConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancePrivateConfig)(nil)).Elem()
}

func (i InstancePrivateConfigArgs) ToInstancePrivateConfigOutput() InstancePrivateConfigOutput {
	return i.ToInstancePrivateConfigOutputWithContext(context.Background())
}

func (i InstancePrivateConfigArgs) ToInstancePrivateConfigOutputWithContext(ctx context.Context) InstancePrivateConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancePrivateConfigOutput)
}

func (i InstancePrivateConfigArgs) ToInstancePrivateConfigPtrOutput() InstancePrivateConfigPtrOutput {
	return i.ToInstancePrivateConfigPtrOutputWithContext(context.Background())
}

func (i InstancePrivateConfigArgs) ToInstancePrivateConfigPtrOutputWithContext(ctx context.Context) InstancePrivateConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancePrivateConfigOutput).ToInstancePrivateConfigPtrOutputWithContext(ctx)
}

// InstancePrivateConfigPtrInput is an input type that accepts InstancePrivateConfigArgs, InstancePrivateConfigPtr and InstancePrivateConfigPtrOutput values.
// You can construct a concrete instance of `InstancePrivateConfigPtrInput` via:
//
//	        InstancePrivateConfigArgs{...}
//
//	or:
//
//	        nil
type InstancePrivateConfigPtrInput interface {
	pulumi.Input

	ToInstancePrivateConfigPtrOutput() InstancePrivateConfigPtrOutput
	ToInstancePrivateConfigPtrOutputWithContext(context.Context) InstancePrivateConfigPtrOutput
}

type instancePrivateConfigPtrType InstancePrivateConfigArgs

func InstancePrivateConfigPtr(v *InstancePrivateConfigArgs) InstancePrivateConfigPtrInput {
	return (*instancePrivateConfigPtrType)(v)
}

func (*instancePrivateConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstancePrivateConfig)(nil)).Elem()
}

func (i *instancePrivateConfigPtrType) ToInstancePrivateConfigPtrOutput() InstancePrivateConfigPtrOutput {
	return i.ToInstancePrivateConfigPtrOutputWithContext(context.Background())
}

func (i *instancePrivateConfigPtrType) ToInstancePrivateConfigPtrOutputWithContext(ctx context.Context) InstancePrivateConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancePrivateConfigPtrOutput)
}

type InstancePrivateConfigOutput struct{ *pulumi.OutputState }

func (InstancePrivateConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancePrivateConfig)(nil)).Elem()
}

func (o InstancePrivateConfigOutput) ToInstancePrivateConfigOutput() InstancePrivateConfigOutput {
	return o
}

func (o InstancePrivateConfigOutput) ToInstancePrivateConfigOutputWithContext(ctx context.Context) InstancePrivateConfigOutput {
	return o
}

func (o InstancePrivateConfigOutput) ToInstancePrivateConfigPtrOutput() InstancePrivateConfigPtrOutput {
	return o.ToInstancePrivateConfigPtrOutputWithContext(context.Background())
}

func (o InstancePrivateConfigOutput) ToInstancePrivateConfigPtrOutputWithContext(ctx context.Context) InstancePrivateConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstancePrivateConfig) *InstancePrivateConfig {
		return &v
	}).(InstancePrivateConfigPtrOutput)
}

// CA pool resource, resource must in the format of `projects/{project}/locations/{location}/caPools/{ca_pool}`.
func (o InstancePrivateConfigOutput) CaPool() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstancePrivateConfig) *string { return v.CaPool }).(pulumi.StringPtrOutput)
}

// (Output)
// Service Attachment for HTTP, resource is in the format of `projects/{project}/regions/{region}/serviceAttachments/{service_attachment}`.
func (o InstancePrivateConfigOutput) HttpServiceAttachment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstancePrivateConfig) *string { return v.HttpServiceAttachment }).(pulumi.StringPtrOutput)
}

// 'Indicate if it's private instance.'
func (o InstancePrivateConfigOutput) IsPrivate() pulumi.BoolOutput {
	return o.ApplyT(func(v InstancePrivateConfig) bool { return v.IsPrivate }).(pulumi.BoolOutput)
}

// (Output)
// Service Attachment for SSH, resource is in the format of `projects/{project}/regions/{region}/serviceAttachments/{service_attachment}`.
func (o InstancePrivateConfigOutput) SshServiceAttachment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstancePrivateConfig) *string { return v.SshServiceAttachment }).(pulumi.StringPtrOutput)
}

type InstancePrivateConfigPtrOutput struct{ *pulumi.OutputState }

func (InstancePrivateConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstancePrivateConfig)(nil)).Elem()
}

func (o InstancePrivateConfigPtrOutput) ToInstancePrivateConfigPtrOutput() InstancePrivateConfigPtrOutput {
	return o
}

func (o InstancePrivateConfigPtrOutput) ToInstancePrivateConfigPtrOutputWithContext(ctx context.Context) InstancePrivateConfigPtrOutput {
	return o
}

func (o InstancePrivateConfigPtrOutput) Elem() InstancePrivateConfigOutput {
	return o.ApplyT(func(v *InstancePrivateConfig) InstancePrivateConfig {
		if v != nil {
			return *v
		}
		var ret InstancePrivateConfig
		return ret
	}).(InstancePrivateConfigOutput)
}

// CA pool resource, resource must in the format of `projects/{project}/locations/{location}/caPools/{ca_pool}`.
func (o InstancePrivateConfigPtrOutput) CaPool() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstancePrivateConfig) *string {
		if v == nil {
			return nil
		}
		return v.CaPool
	}).(pulumi.StringPtrOutput)
}

// (Output)
// Service Attachment for HTTP, resource is in the format of `projects/{project}/regions/{region}/serviceAttachments/{service_attachment}`.
func (o InstancePrivateConfigPtrOutput) HttpServiceAttachment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstancePrivateConfig) *string {
		if v == nil {
			return nil
		}
		return v.HttpServiceAttachment
	}).(pulumi.StringPtrOutput)
}

// 'Indicate if it's private instance.'
func (o InstancePrivateConfigPtrOutput) IsPrivate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InstancePrivateConfig) *bool {
		if v == nil {
			return nil
		}
		return &v.IsPrivate
	}).(pulumi.BoolPtrOutput)
}

// (Output)
// Service Attachment for SSH, resource is in the format of `projects/{project}/regions/{region}/serviceAttachments/{service_attachment}`.
func (o InstancePrivateConfigPtrOutput) SshServiceAttachment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstancePrivateConfig) *string {
		if v == nil {
			return nil
		}
		return v.SshServiceAttachment
	}).(pulumi.StringPtrOutput)
}

type InstanceWorkforceIdentityFederationConfig struct {
	// 'Whether Workforce Identity Federation is enabled.'
	Enabled bool `pulumi:"enabled"`
}

// InstanceWorkforceIdentityFederationConfigInput is an input type that accepts InstanceWorkforceIdentityFederationConfigArgs and InstanceWorkforceIdentityFederationConfigOutput values.
// You can construct a concrete instance of `InstanceWorkforceIdentityFederationConfigInput` via:
//
//	InstanceWorkforceIdentityFederationConfigArgs{...}
type InstanceWorkforceIdentityFederationConfigInput interface {
	pulumi.Input

	ToInstanceWorkforceIdentityFederationConfigOutput() InstanceWorkforceIdentityFederationConfigOutput
	ToInstanceWorkforceIdentityFederationConfigOutputWithContext(context.Context) InstanceWorkforceIdentityFederationConfigOutput
}

type InstanceWorkforceIdentityFederationConfigArgs struct {
	// 'Whether Workforce Identity Federation is enabled.'
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (InstanceWorkforceIdentityFederationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceWorkforceIdentityFederationConfig)(nil)).Elem()
}

func (i InstanceWorkforceIdentityFederationConfigArgs) ToInstanceWorkforceIdentityFederationConfigOutput() InstanceWorkforceIdentityFederationConfigOutput {
	return i.ToInstanceWorkforceIdentityFederationConfigOutputWithContext(context.Background())
}

func (i InstanceWorkforceIdentityFederationConfigArgs) ToInstanceWorkforceIdentityFederationConfigOutputWithContext(ctx context.Context) InstanceWorkforceIdentityFederationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceWorkforceIdentityFederationConfigOutput)
}

func (i InstanceWorkforceIdentityFederationConfigArgs) ToInstanceWorkforceIdentityFederationConfigPtrOutput() InstanceWorkforceIdentityFederationConfigPtrOutput {
	return i.ToInstanceWorkforceIdentityFederationConfigPtrOutputWithContext(context.Background())
}

func (i InstanceWorkforceIdentityFederationConfigArgs) ToInstanceWorkforceIdentityFederationConfigPtrOutputWithContext(ctx context.Context) InstanceWorkforceIdentityFederationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceWorkforceIdentityFederationConfigOutput).ToInstanceWorkforceIdentityFederationConfigPtrOutputWithContext(ctx)
}

// InstanceWorkforceIdentityFederationConfigPtrInput is an input type that accepts InstanceWorkforceIdentityFederationConfigArgs, InstanceWorkforceIdentityFederationConfigPtr and InstanceWorkforceIdentityFederationConfigPtrOutput values.
// You can construct a concrete instance of `InstanceWorkforceIdentityFederationConfigPtrInput` via:
//
//	        InstanceWorkforceIdentityFederationConfigArgs{...}
//
//	or:
//
//	        nil
type InstanceWorkforceIdentityFederationConfigPtrInput interface {
	pulumi.Input

	ToInstanceWorkforceIdentityFederationConfigPtrOutput() InstanceWorkforceIdentityFederationConfigPtrOutput
	ToInstanceWorkforceIdentityFederationConfigPtrOutputWithContext(context.Context) InstanceWorkforceIdentityFederationConfigPtrOutput
}

type instanceWorkforceIdentityFederationConfigPtrType InstanceWorkforceIdentityFederationConfigArgs

func InstanceWorkforceIdentityFederationConfigPtr(v *InstanceWorkforceIdentityFederationConfigArgs) InstanceWorkforceIdentityFederationConfigPtrInput {
	return (*instanceWorkforceIdentityFederationConfigPtrType)(v)
}

func (*instanceWorkforceIdentityFederationConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceWorkforceIdentityFederationConfig)(nil)).Elem()
}

func (i *instanceWorkforceIdentityFederationConfigPtrType) ToInstanceWorkforceIdentityFederationConfigPtrOutput() InstanceWorkforceIdentityFederationConfigPtrOutput {
	return i.ToInstanceWorkforceIdentityFederationConfigPtrOutputWithContext(context.Background())
}

func (i *instanceWorkforceIdentityFederationConfigPtrType) ToInstanceWorkforceIdentityFederationConfigPtrOutputWithContext(ctx context.Context) InstanceWorkforceIdentityFederationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceWorkforceIdentityFederationConfigPtrOutput)
}

type InstanceWorkforceIdentityFederationConfigOutput struct{ *pulumi.OutputState }

func (InstanceWorkforceIdentityFederationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceWorkforceIdentityFederationConfig)(nil)).Elem()
}

func (o InstanceWorkforceIdentityFederationConfigOutput) ToInstanceWorkforceIdentityFederationConfigOutput() InstanceWorkforceIdentityFederationConfigOutput {
	return o
}

func (o InstanceWorkforceIdentityFederationConfigOutput) ToInstanceWorkforceIdentityFederationConfigOutputWithContext(ctx context.Context) InstanceWorkforceIdentityFederationConfigOutput {
	return o
}

func (o InstanceWorkforceIdentityFederationConfigOutput) ToInstanceWorkforceIdentityFederationConfigPtrOutput() InstanceWorkforceIdentityFederationConfigPtrOutput {
	return o.ToInstanceWorkforceIdentityFederationConfigPtrOutputWithContext(context.Background())
}

func (o InstanceWorkforceIdentityFederationConfigOutput) ToInstanceWorkforceIdentityFederationConfigPtrOutputWithContext(ctx context.Context) InstanceWorkforceIdentityFederationConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceWorkforceIdentityFederationConfig) *InstanceWorkforceIdentityFederationConfig {
		return &v
	}).(InstanceWorkforceIdentityFederationConfigPtrOutput)
}

// 'Whether Workforce Identity Federation is enabled.'
func (o InstanceWorkforceIdentityFederationConfigOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v InstanceWorkforceIdentityFederationConfig) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type InstanceWorkforceIdentityFederationConfigPtrOutput struct{ *pulumi.OutputState }

func (InstanceWorkforceIdentityFederationConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceWorkforceIdentityFederationConfig)(nil)).Elem()
}

func (o InstanceWorkforceIdentityFederationConfigPtrOutput) ToInstanceWorkforceIdentityFederationConfigPtrOutput() InstanceWorkforceIdentityFederationConfigPtrOutput {
	return o
}

func (o InstanceWorkforceIdentityFederationConfigPtrOutput) ToInstanceWorkforceIdentityFederationConfigPtrOutputWithContext(ctx context.Context) InstanceWorkforceIdentityFederationConfigPtrOutput {
	return o
}

func (o InstanceWorkforceIdentityFederationConfigPtrOutput) Elem() InstanceWorkforceIdentityFederationConfigOutput {
	return o.ApplyT(func(v *InstanceWorkforceIdentityFederationConfig) InstanceWorkforceIdentityFederationConfig {
		if v != nil {
			return *v
		}
		var ret InstanceWorkforceIdentityFederationConfig
		return ret
	}).(InstanceWorkforceIdentityFederationConfigOutput)
}

// 'Whether Workforce Identity Federation is enabled.'
func (o InstanceWorkforceIdentityFederationConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InstanceWorkforceIdentityFederationConfig) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type RepositoryIamBindingCondition struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

// RepositoryIamBindingConditionInput is an input type that accepts RepositoryIamBindingConditionArgs and RepositoryIamBindingConditionOutput values.
// You can construct a concrete instance of `RepositoryIamBindingConditionInput` via:
//
//	RepositoryIamBindingConditionArgs{...}
type RepositoryIamBindingConditionInput interface {
	pulumi.Input

	ToRepositoryIamBindingConditionOutput() RepositoryIamBindingConditionOutput
	ToRepositoryIamBindingConditionOutputWithContext(context.Context) RepositoryIamBindingConditionOutput
}

type RepositoryIamBindingConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (RepositoryIamBindingConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryIamBindingCondition)(nil)).Elem()
}

func (i RepositoryIamBindingConditionArgs) ToRepositoryIamBindingConditionOutput() RepositoryIamBindingConditionOutput {
	return i.ToRepositoryIamBindingConditionOutputWithContext(context.Background())
}

func (i RepositoryIamBindingConditionArgs) ToRepositoryIamBindingConditionOutputWithContext(ctx context.Context) RepositoryIamBindingConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryIamBindingConditionOutput)
}

func (i RepositoryIamBindingConditionArgs) ToRepositoryIamBindingConditionPtrOutput() RepositoryIamBindingConditionPtrOutput {
	return i.ToRepositoryIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i RepositoryIamBindingConditionArgs) ToRepositoryIamBindingConditionPtrOutputWithContext(ctx context.Context) RepositoryIamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryIamBindingConditionOutput).ToRepositoryIamBindingConditionPtrOutputWithContext(ctx)
}

// RepositoryIamBindingConditionPtrInput is an input type that accepts RepositoryIamBindingConditionArgs, RepositoryIamBindingConditionPtr and RepositoryIamBindingConditionPtrOutput values.
// You can construct a concrete instance of `RepositoryIamBindingConditionPtrInput` via:
//
//	        RepositoryIamBindingConditionArgs{...}
//
//	or:
//
//	        nil
type RepositoryIamBindingConditionPtrInput interface {
	pulumi.Input

	ToRepositoryIamBindingConditionPtrOutput() RepositoryIamBindingConditionPtrOutput
	ToRepositoryIamBindingConditionPtrOutputWithContext(context.Context) RepositoryIamBindingConditionPtrOutput
}

type repositoryIamBindingConditionPtrType RepositoryIamBindingConditionArgs

func RepositoryIamBindingConditionPtr(v *RepositoryIamBindingConditionArgs) RepositoryIamBindingConditionPtrInput {
	return (*repositoryIamBindingConditionPtrType)(v)
}

func (*repositoryIamBindingConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RepositoryIamBindingCondition)(nil)).Elem()
}

func (i *repositoryIamBindingConditionPtrType) ToRepositoryIamBindingConditionPtrOutput() RepositoryIamBindingConditionPtrOutput {
	return i.ToRepositoryIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i *repositoryIamBindingConditionPtrType) ToRepositoryIamBindingConditionPtrOutputWithContext(ctx context.Context) RepositoryIamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryIamBindingConditionPtrOutput)
}

type RepositoryIamBindingConditionOutput struct{ *pulumi.OutputState }

func (RepositoryIamBindingConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryIamBindingCondition)(nil)).Elem()
}

func (o RepositoryIamBindingConditionOutput) ToRepositoryIamBindingConditionOutput() RepositoryIamBindingConditionOutput {
	return o
}

func (o RepositoryIamBindingConditionOutput) ToRepositoryIamBindingConditionOutputWithContext(ctx context.Context) RepositoryIamBindingConditionOutput {
	return o
}

func (o RepositoryIamBindingConditionOutput) ToRepositoryIamBindingConditionPtrOutput() RepositoryIamBindingConditionPtrOutput {
	return o.ToRepositoryIamBindingConditionPtrOutputWithContext(context.Background())
}

func (o RepositoryIamBindingConditionOutput) ToRepositoryIamBindingConditionPtrOutputWithContext(ctx context.Context) RepositoryIamBindingConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RepositoryIamBindingCondition) *RepositoryIamBindingCondition {
		return &v
	}).(RepositoryIamBindingConditionPtrOutput)
}

func (o RepositoryIamBindingConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepositoryIamBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o RepositoryIamBindingConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v RepositoryIamBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o RepositoryIamBindingConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v RepositoryIamBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

type RepositoryIamBindingConditionPtrOutput struct{ *pulumi.OutputState }

func (RepositoryIamBindingConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RepositoryIamBindingCondition)(nil)).Elem()
}

func (o RepositoryIamBindingConditionPtrOutput) ToRepositoryIamBindingConditionPtrOutput() RepositoryIamBindingConditionPtrOutput {
	return o
}

func (o RepositoryIamBindingConditionPtrOutput) ToRepositoryIamBindingConditionPtrOutputWithContext(ctx context.Context) RepositoryIamBindingConditionPtrOutput {
	return o
}

func (o RepositoryIamBindingConditionPtrOutput) Elem() RepositoryIamBindingConditionOutput {
	return o.ApplyT(func(v *RepositoryIamBindingCondition) RepositoryIamBindingCondition {
		if v != nil {
			return *v
		}
		var ret RepositoryIamBindingCondition
		return ret
	}).(RepositoryIamBindingConditionOutput)
}

func (o RepositoryIamBindingConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepositoryIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o RepositoryIamBindingConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepositoryIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

func (o RepositoryIamBindingConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepositoryIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type RepositoryIamMemberCondition struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

// RepositoryIamMemberConditionInput is an input type that accepts RepositoryIamMemberConditionArgs and RepositoryIamMemberConditionOutput values.
// You can construct a concrete instance of `RepositoryIamMemberConditionInput` via:
//
//	RepositoryIamMemberConditionArgs{...}
type RepositoryIamMemberConditionInput interface {
	pulumi.Input

	ToRepositoryIamMemberConditionOutput() RepositoryIamMemberConditionOutput
	ToRepositoryIamMemberConditionOutputWithContext(context.Context) RepositoryIamMemberConditionOutput
}

type RepositoryIamMemberConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (RepositoryIamMemberConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryIamMemberCondition)(nil)).Elem()
}

func (i RepositoryIamMemberConditionArgs) ToRepositoryIamMemberConditionOutput() RepositoryIamMemberConditionOutput {
	return i.ToRepositoryIamMemberConditionOutputWithContext(context.Background())
}

func (i RepositoryIamMemberConditionArgs) ToRepositoryIamMemberConditionOutputWithContext(ctx context.Context) RepositoryIamMemberConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryIamMemberConditionOutput)
}

func (i RepositoryIamMemberConditionArgs) ToRepositoryIamMemberConditionPtrOutput() RepositoryIamMemberConditionPtrOutput {
	return i.ToRepositoryIamMemberConditionPtrOutputWithContext(context.Background())
}

func (i RepositoryIamMemberConditionArgs) ToRepositoryIamMemberConditionPtrOutputWithContext(ctx context.Context) RepositoryIamMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryIamMemberConditionOutput).ToRepositoryIamMemberConditionPtrOutputWithContext(ctx)
}

// RepositoryIamMemberConditionPtrInput is an input type that accepts RepositoryIamMemberConditionArgs, RepositoryIamMemberConditionPtr and RepositoryIamMemberConditionPtrOutput values.
// You can construct a concrete instance of `RepositoryIamMemberConditionPtrInput` via:
//
//	        RepositoryIamMemberConditionArgs{...}
//
//	or:
//
//	        nil
type RepositoryIamMemberConditionPtrInput interface {
	pulumi.Input

	ToRepositoryIamMemberConditionPtrOutput() RepositoryIamMemberConditionPtrOutput
	ToRepositoryIamMemberConditionPtrOutputWithContext(context.Context) RepositoryIamMemberConditionPtrOutput
}

type repositoryIamMemberConditionPtrType RepositoryIamMemberConditionArgs

func RepositoryIamMemberConditionPtr(v *RepositoryIamMemberConditionArgs) RepositoryIamMemberConditionPtrInput {
	return (*repositoryIamMemberConditionPtrType)(v)
}

func (*repositoryIamMemberConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RepositoryIamMemberCondition)(nil)).Elem()
}

func (i *repositoryIamMemberConditionPtrType) ToRepositoryIamMemberConditionPtrOutput() RepositoryIamMemberConditionPtrOutput {
	return i.ToRepositoryIamMemberConditionPtrOutputWithContext(context.Background())
}

func (i *repositoryIamMemberConditionPtrType) ToRepositoryIamMemberConditionPtrOutputWithContext(ctx context.Context) RepositoryIamMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryIamMemberConditionPtrOutput)
}

type RepositoryIamMemberConditionOutput struct{ *pulumi.OutputState }

func (RepositoryIamMemberConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryIamMemberCondition)(nil)).Elem()
}

func (o RepositoryIamMemberConditionOutput) ToRepositoryIamMemberConditionOutput() RepositoryIamMemberConditionOutput {
	return o
}

func (o RepositoryIamMemberConditionOutput) ToRepositoryIamMemberConditionOutputWithContext(ctx context.Context) RepositoryIamMemberConditionOutput {
	return o
}

func (o RepositoryIamMemberConditionOutput) ToRepositoryIamMemberConditionPtrOutput() RepositoryIamMemberConditionPtrOutput {
	return o.ToRepositoryIamMemberConditionPtrOutputWithContext(context.Background())
}

func (o RepositoryIamMemberConditionOutput) ToRepositoryIamMemberConditionPtrOutputWithContext(ctx context.Context) RepositoryIamMemberConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RepositoryIamMemberCondition) *RepositoryIamMemberCondition {
		return &v
	}).(RepositoryIamMemberConditionPtrOutput)
}

func (o RepositoryIamMemberConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepositoryIamMemberCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o RepositoryIamMemberConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v RepositoryIamMemberCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o RepositoryIamMemberConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v RepositoryIamMemberCondition) string { return v.Title }).(pulumi.StringOutput)
}

type RepositoryIamMemberConditionPtrOutput struct{ *pulumi.OutputState }

func (RepositoryIamMemberConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RepositoryIamMemberCondition)(nil)).Elem()
}

func (o RepositoryIamMemberConditionPtrOutput) ToRepositoryIamMemberConditionPtrOutput() RepositoryIamMemberConditionPtrOutput {
	return o
}

func (o RepositoryIamMemberConditionPtrOutput) ToRepositoryIamMemberConditionPtrOutputWithContext(ctx context.Context) RepositoryIamMemberConditionPtrOutput {
	return o
}

func (o RepositoryIamMemberConditionPtrOutput) Elem() RepositoryIamMemberConditionOutput {
	return o.ApplyT(func(v *RepositoryIamMemberCondition) RepositoryIamMemberCondition {
		if v != nil {
			return *v
		}
		var ret RepositoryIamMemberCondition
		return ret
	}).(RepositoryIamMemberConditionOutput)
}

func (o RepositoryIamMemberConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepositoryIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o RepositoryIamMemberConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepositoryIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

func (o RepositoryIamMemberConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepositoryIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type RepositoryInitialConfig struct {
	// Default branch name of the repository.
	DefaultBranch *string `pulumi:"defaultBranch"`
	// List of gitignore template names user can choose from.
	// Valid values can be viewed at https://cloud.google.com/secure-source-manager/docs/reference/rest/v1/projects.locations.repositories#initialconfig.
	Gitignores []string `pulumi:"gitignores"`
	// License template name user can choose from.
	// Valid values can be viewed at https://cloud.google.com/secure-source-manager/docs/reference/rest/v1/projects.locations.repositories#initialconfig.
	License *string `pulumi:"license"`
	// README template name.
	// Valid values can be viewed at https://cloud.google.com/secure-source-manager/docs/reference/rest/v1/projects.locations.repositories#initialconfig.
	Readme *string `pulumi:"readme"`
}

// RepositoryInitialConfigInput is an input type that accepts RepositoryInitialConfigArgs and RepositoryInitialConfigOutput values.
// You can construct a concrete instance of `RepositoryInitialConfigInput` via:
//
//	RepositoryInitialConfigArgs{...}
type RepositoryInitialConfigInput interface {
	pulumi.Input

	ToRepositoryInitialConfigOutput() RepositoryInitialConfigOutput
	ToRepositoryInitialConfigOutputWithContext(context.Context) RepositoryInitialConfigOutput
}

type RepositoryInitialConfigArgs struct {
	// Default branch name of the repository.
	DefaultBranch pulumi.StringPtrInput `pulumi:"defaultBranch"`
	// List of gitignore template names user can choose from.
	// Valid values can be viewed at https://cloud.google.com/secure-source-manager/docs/reference/rest/v1/projects.locations.repositories#initialconfig.
	Gitignores pulumi.StringArrayInput `pulumi:"gitignores"`
	// License template name user can choose from.
	// Valid values can be viewed at https://cloud.google.com/secure-source-manager/docs/reference/rest/v1/projects.locations.repositories#initialconfig.
	License pulumi.StringPtrInput `pulumi:"license"`
	// README template name.
	// Valid values can be viewed at https://cloud.google.com/secure-source-manager/docs/reference/rest/v1/projects.locations.repositories#initialconfig.
	Readme pulumi.StringPtrInput `pulumi:"readme"`
}

func (RepositoryInitialConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryInitialConfig)(nil)).Elem()
}

func (i RepositoryInitialConfigArgs) ToRepositoryInitialConfigOutput() RepositoryInitialConfigOutput {
	return i.ToRepositoryInitialConfigOutputWithContext(context.Background())
}

func (i RepositoryInitialConfigArgs) ToRepositoryInitialConfigOutputWithContext(ctx context.Context) RepositoryInitialConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryInitialConfigOutput)
}

func (i RepositoryInitialConfigArgs) ToRepositoryInitialConfigPtrOutput() RepositoryInitialConfigPtrOutput {
	return i.ToRepositoryInitialConfigPtrOutputWithContext(context.Background())
}

func (i RepositoryInitialConfigArgs) ToRepositoryInitialConfigPtrOutputWithContext(ctx context.Context) RepositoryInitialConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryInitialConfigOutput).ToRepositoryInitialConfigPtrOutputWithContext(ctx)
}

// RepositoryInitialConfigPtrInput is an input type that accepts RepositoryInitialConfigArgs, RepositoryInitialConfigPtr and RepositoryInitialConfigPtrOutput values.
// You can construct a concrete instance of `RepositoryInitialConfigPtrInput` via:
//
//	        RepositoryInitialConfigArgs{...}
//
//	or:
//
//	        nil
type RepositoryInitialConfigPtrInput interface {
	pulumi.Input

	ToRepositoryInitialConfigPtrOutput() RepositoryInitialConfigPtrOutput
	ToRepositoryInitialConfigPtrOutputWithContext(context.Context) RepositoryInitialConfigPtrOutput
}

type repositoryInitialConfigPtrType RepositoryInitialConfigArgs

func RepositoryInitialConfigPtr(v *RepositoryInitialConfigArgs) RepositoryInitialConfigPtrInput {
	return (*repositoryInitialConfigPtrType)(v)
}

func (*repositoryInitialConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RepositoryInitialConfig)(nil)).Elem()
}

func (i *repositoryInitialConfigPtrType) ToRepositoryInitialConfigPtrOutput() RepositoryInitialConfigPtrOutput {
	return i.ToRepositoryInitialConfigPtrOutputWithContext(context.Background())
}

func (i *repositoryInitialConfigPtrType) ToRepositoryInitialConfigPtrOutputWithContext(ctx context.Context) RepositoryInitialConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryInitialConfigPtrOutput)
}

type RepositoryInitialConfigOutput struct{ *pulumi.OutputState }

func (RepositoryInitialConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryInitialConfig)(nil)).Elem()
}

func (o RepositoryInitialConfigOutput) ToRepositoryInitialConfigOutput() RepositoryInitialConfigOutput {
	return o
}

func (o RepositoryInitialConfigOutput) ToRepositoryInitialConfigOutputWithContext(ctx context.Context) RepositoryInitialConfigOutput {
	return o
}

func (o RepositoryInitialConfigOutput) ToRepositoryInitialConfigPtrOutput() RepositoryInitialConfigPtrOutput {
	return o.ToRepositoryInitialConfigPtrOutputWithContext(context.Background())
}

func (o RepositoryInitialConfigOutput) ToRepositoryInitialConfigPtrOutputWithContext(ctx context.Context) RepositoryInitialConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RepositoryInitialConfig) *RepositoryInitialConfig {
		return &v
	}).(RepositoryInitialConfigPtrOutput)
}

// Default branch name of the repository.
func (o RepositoryInitialConfigOutput) DefaultBranch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepositoryInitialConfig) *string { return v.DefaultBranch }).(pulumi.StringPtrOutput)
}

// List of gitignore template names user can choose from.
// Valid values can be viewed at https://cloud.google.com/secure-source-manager/docs/reference/rest/v1/projects.locations.repositories#initialconfig.
func (o RepositoryInitialConfigOutput) Gitignores() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RepositoryInitialConfig) []string { return v.Gitignores }).(pulumi.StringArrayOutput)
}

// License template name user can choose from.
// Valid values can be viewed at https://cloud.google.com/secure-source-manager/docs/reference/rest/v1/projects.locations.repositories#initialconfig.
func (o RepositoryInitialConfigOutput) License() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepositoryInitialConfig) *string { return v.License }).(pulumi.StringPtrOutput)
}

// README template name.
// Valid values can be viewed at https://cloud.google.com/secure-source-manager/docs/reference/rest/v1/projects.locations.repositories#initialconfig.
func (o RepositoryInitialConfigOutput) Readme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepositoryInitialConfig) *string { return v.Readme }).(pulumi.StringPtrOutput)
}

type RepositoryInitialConfigPtrOutput struct{ *pulumi.OutputState }

func (RepositoryInitialConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RepositoryInitialConfig)(nil)).Elem()
}

func (o RepositoryInitialConfigPtrOutput) ToRepositoryInitialConfigPtrOutput() RepositoryInitialConfigPtrOutput {
	return o
}

func (o RepositoryInitialConfigPtrOutput) ToRepositoryInitialConfigPtrOutputWithContext(ctx context.Context) RepositoryInitialConfigPtrOutput {
	return o
}

func (o RepositoryInitialConfigPtrOutput) Elem() RepositoryInitialConfigOutput {
	return o.ApplyT(func(v *RepositoryInitialConfig) RepositoryInitialConfig {
		if v != nil {
			return *v
		}
		var ret RepositoryInitialConfig
		return ret
	}).(RepositoryInitialConfigOutput)
}

// Default branch name of the repository.
func (o RepositoryInitialConfigPtrOutput) DefaultBranch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepositoryInitialConfig) *string {
		if v == nil {
			return nil
		}
		return v.DefaultBranch
	}).(pulumi.StringPtrOutput)
}

// List of gitignore template names user can choose from.
// Valid values can be viewed at https://cloud.google.com/secure-source-manager/docs/reference/rest/v1/projects.locations.repositories#initialconfig.
func (o RepositoryInitialConfigPtrOutput) Gitignores() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RepositoryInitialConfig) []string {
		if v == nil {
			return nil
		}
		return v.Gitignores
	}).(pulumi.StringArrayOutput)
}

// License template name user can choose from.
// Valid values can be viewed at https://cloud.google.com/secure-source-manager/docs/reference/rest/v1/projects.locations.repositories#initialconfig.
func (o RepositoryInitialConfigPtrOutput) License() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepositoryInitialConfig) *string {
		if v == nil {
			return nil
		}
		return v.License
	}).(pulumi.StringPtrOutput)
}

// README template name.
// Valid values can be viewed at https://cloud.google.com/secure-source-manager/docs/reference/rest/v1/projects.locations.repositories#initialconfig.
func (o RepositoryInitialConfigPtrOutput) Readme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepositoryInitialConfig) *string {
		if v == nil {
			return nil
		}
		return v.Readme
	}).(pulumi.StringPtrOutput)
}

type RepositoryUri struct {
	// (Output)
	// API is the URI for API access.
	Api *string `pulumi:"api"`
	// (Output)
	// gitHttps is the git HTTPS URI for git operations.
	GitHttps *string `pulumi:"gitHttps"`
	// (Output)
	// HTML is the URI for the user to view the repository in a browser.
	Html *string `pulumi:"html"`
}

// RepositoryUriInput is an input type that accepts RepositoryUriArgs and RepositoryUriOutput values.
// You can construct a concrete instance of `RepositoryUriInput` via:
//
//	RepositoryUriArgs{...}
type RepositoryUriInput interface {
	pulumi.Input

	ToRepositoryUriOutput() RepositoryUriOutput
	ToRepositoryUriOutputWithContext(context.Context) RepositoryUriOutput
}

type RepositoryUriArgs struct {
	// (Output)
	// API is the URI for API access.
	Api pulumi.StringPtrInput `pulumi:"api"`
	// (Output)
	// gitHttps is the git HTTPS URI for git operations.
	GitHttps pulumi.StringPtrInput `pulumi:"gitHttps"`
	// (Output)
	// HTML is the URI for the user to view the repository in a browser.
	Html pulumi.StringPtrInput `pulumi:"html"`
}

func (RepositoryUriArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryUri)(nil)).Elem()
}

func (i RepositoryUriArgs) ToRepositoryUriOutput() RepositoryUriOutput {
	return i.ToRepositoryUriOutputWithContext(context.Background())
}

func (i RepositoryUriArgs) ToRepositoryUriOutputWithContext(ctx context.Context) RepositoryUriOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryUriOutput)
}

// RepositoryUriArrayInput is an input type that accepts RepositoryUriArray and RepositoryUriArrayOutput values.
// You can construct a concrete instance of `RepositoryUriArrayInput` via:
//
//	RepositoryUriArray{ RepositoryUriArgs{...} }
type RepositoryUriArrayInput interface {
	pulumi.Input

	ToRepositoryUriArrayOutput() RepositoryUriArrayOutput
	ToRepositoryUriArrayOutputWithContext(context.Context) RepositoryUriArrayOutput
}

type RepositoryUriArray []RepositoryUriInput

func (RepositoryUriArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RepositoryUri)(nil)).Elem()
}

func (i RepositoryUriArray) ToRepositoryUriArrayOutput() RepositoryUriArrayOutput {
	return i.ToRepositoryUriArrayOutputWithContext(context.Background())
}

func (i RepositoryUriArray) ToRepositoryUriArrayOutputWithContext(ctx context.Context) RepositoryUriArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryUriArrayOutput)
}

type RepositoryUriOutput struct{ *pulumi.OutputState }

func (RepositoryUriOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryUri)(nil)).Elem()
}

func (o RepositoryUriOutput) ToRepositoryUriOutput() RepositoryUriOutput {
	return o
}

func (o RepositoryUriOutput) ToRepositoryUriOutputWithContext(ctx context.Context) RepositoryUriOutput {
	return o
}

// (Output)
// API is the URI for API access.
func (o RepositoryUriOutput) Api() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepositoryUri) *string { return v.Api }).(pulumi.StringPtrOutput)
}

// (Output)
// gitHttps is the git HTTPS URI for git operations.
func (o RepositoryUriOutput) GitHttps() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepositoryUri) *string { return v.GitHttps }).(pulumi.StringPtrOutput)
}

// (Output)
// HTML is the URI for the user to view the repository in a browser.
func (o RepositoryUriOutput) Html() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepositoryUri) *string { return v.Html }).(pulumi.StringPtrOutput)
}

type RepositoryUriArrayOutput struct{ *pulumi.OutputState }

func (RepositoryUriArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RepositoryUri)(nil)).Elem()
}

func (o RepositoryUriArrayOutput) ToRepositoryUriArrayOutput() RepositoryUriArrayOutput {
	return o
}

func (o RepositoryUriArrayOutput) ToRepositoryUriArrayOutputWithContext(ctx context.Context) RepositoryUriArrayOutput {
	return o
}

func (o RepositoryUriArrayOutput) Index(i pulumi.IntInput) RepositoryUriOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RepositoryUri {
		return vs[0].([]RepositoryUri)[vs[1].(int)]
	}).(RepositoryUriOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceHostConfigInput)(nil)).Elem(), InstanceHostConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceHostConfigArrayInput)(nil)).Elem(), InstanceHostConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceIamBindingConditionInput)(nil)).Elem(), InstanceIamBindingConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceIamBindingConditionPtrInput)(nil)).Elem(), InstanceIamBindingConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceIamMemberConditionInput)(nil)).Elem(), InstanceIamMemberConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceIamMemberConditionPtrInput)(nil)).Elem(), InstanceIamMemberConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancePrivateConfigInput)(nil)).Elem(), InstancePrivateConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancePrivateConfigPtrInput)(nil)).Elem(), InstancePrivateConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceWorkforceIdentityFederationConfigInput)(nil)).Elem(), InstanceWorkforceIdentityFederationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceWorkforceIdentityFederationConfigPtrInput)(nil)).Elem(), InstanceWorkforceIdentityFederationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RepositoryIamBindingConditionInput)(nil)).Elem(), RepositoryIamBindingConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RepositoryIamBindingConditionPtrInput)(nil)).Elem(), RepositoryIamBindingConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RepositoryIamMemberConditionInput)(nil)).Elem(), RepositoryIamMemberConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RepositoryIamMemberConditionPtrInput)(nil)).Elem(), RepositoryIamMemberConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RepositoryInitialConfigInput)(nil)).Elem(), RepositoryInitialConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RepositoryInitialConfigPtrInput)(nil)).Elem(), RepositoryInitialConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RepositoryUriInput)(nil)).Elem(), RepositoryUriArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RepositoryUriArrayInput)(nil)).Elem(), RepositoryUriArray{})
	pulumi.RegisterOutputType(InstanceHostConfigOutput{})
	pulumi.RegisterOutputType(InstanceHostConfigArrayOutput{})
	pulumi.RegisterOutputType(InstanceIamBindingConditionOutput{})
	pulumi.RegisterOutputType(InstanceIamBindingConditionPtrOutput{})
	pulumi.RegisterOutputType(InstanceIamMemberConditionOutput{})
	pulumi.RegisterOutputType(InstanceIamMemberConditionPtrOutput{})
	pulumi.RegisterOutputType(InstancePrivateConfigOutput{})
	pulumi.RegisterOutputType(InstancePrivateConfigPtrOutput{})
	pulumi.RegisterOutputType(InstanceWorkforceIdentityFederationConfigOutput{})
	pulumi.RegisterOutputType(InstanceWorkforceIdentityFederationConfigPtrOutput{})
	pulumi.RegisterOutputType(RepositoryIamBindingConditionOutput{})
	pulumi.RegisterOutputType(RepositoryIamBindingConditionPtrOutput{})
	pulumi.RegisterOutputType(RepositoryIamMemberConditionOutput{})
	pulumi.RegisterOutputType(RepositoryIamMemberConditionPtrOutput{})
	pulumi.RegisterOutputType(RepositoryInitialConfigOutput{})
	pulumi.RegisterOutputType(RepositoryInitialConfigPtrOutput{})
	pulumi.RegisterOutputType(RepositoryUriOutput{})
	pulumi.RegisterOutputType(RepositoryUriArrayOutput{})
}
