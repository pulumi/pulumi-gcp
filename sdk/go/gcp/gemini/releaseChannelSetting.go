// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package gemini

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The resource for managing ReleaseChannel settings for Admin Control.
//
// ## Example Usage
//
// ### Gemini Release Channel Setting Basic
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/gemini"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := gemini.NewReleaseChannelSetting(ctx, "example", &gemini.ReleaseChannelSettingArgs{
//				ReleaseChannelSettingId: pulumi.String("ls1-tf"),
//				Location:                pulumi.String("global"),
//				Labels: pulumi.StringMap{
//					"my_key": pulumi.String("my_value"),
//				},
//				ReleaseChannel: pulumi.String("EXPERIMENTAL"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ReleaseChannelSetting can be imported using any of these accepted formats:
//
// * `projects/{{project}}/locations/{{location}}/releaseChannelSettings/{{release_channel_setting_id}}`
//
// * `{{project}}/{{location}}/{{release_channel_setting_id}}`
//
// * `{{location}}/{{release_channel_setting_id}}`
//
// When using the `pulumi import` command, ReleaseChannelSetting can be imported using one of the formats above. For example:
//
// ```sh
// $ pulumi import gcp:gemini/releaseChannelSetting:ReleaseChannelSetting default projects/{{project}}/locations/{{location}}/releaseChannelSettings/{{release_channel_setting_id}}
// ```
//
// ```sh
// $ pulumi import gcp:gemini/releaseChannelSetting:ReleaseChannelSetting default {{project}}/{{location}}/{{release_channel_setting_id}}
// ```
//
// ```sh
// $ pulumi import gcp:gemini/releaseChannelSetting:ReleaseChannelSetting default {{location}}/{{release_channel_setting_id}}
// ```
type ReleaseChannelSetting struct {
	pulumi.CustomResourceState

	// Create time stamp.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
	EffectiveLabels pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	// Labels as key value pairs.
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
	Location pulumi.StringOutput `pulumi:"location"`
	// Identifier. Name of the resource.
	// Format:projects/{project}/locations/{location}/releaseChannelSettings/{releaseChannelSetting}
	Name pulumi.StringOutput `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
	// The combination of labels configured directly on the resource
	// and default labels configured on the provider.
	PulumiLabels pulumi.StringMapOutput `pulumi:"pulumiLabels"`
	// Release channel to be used.
	// Possible values:
	// STABLE
	// EXPERIMENTAL
	ReleaseChannel pulumi.StringPtrOutput `pulumi:"releaseChannel"`
	// Id of the Release Channel Setting.
	ReleaseChannelSettingId pulumi.StringOutput `pulumi:"releaseChannelSettingId"`
	// Update time stamp.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewReleaseChannelSetting registers a new resource with the given unique name, arguments, and options.
func NewReleaseChannelSetting(ctx *pulumi.Context,
	name string, args *ReleaseChannelSettingArgs, opts ...pulumi.ResourceOption) (*ReleaseChannelSetting, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	if args.ReleaseChannelSettingId == nil {
		return nil, errors.New("invalid value for required argument 'ReleaseChannelSettingId'")
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"effectiveLabels",
		"pulumiLabels",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ReleaseChannelSetting
	err := ctx.RegisterResource("gcp:gemini/releaseChannelSetting:ReleaseChannelSetting", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetReleaseChannelSetting gets an existing ReleaseChannelSetting resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetReleaseChannelSetting(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ReleaseChannelSettingState, opts ...pulumi.ResourceOption) (*ReleaseChannelSetting, error) {
	var resource ReleaseChannelSetting
	err := ctx.ReadResource("gcp:gemini/releaseChannelSetting:ReleaseChannelSetting", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ReleaseChannelSetting resources.
type releaseChannelSettingState struct {
	// Create time stamp.
	CreateTime *string `pulumi:"createTime"`
	// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
	EffectiveLabels map[string]string `pulumi:"effectiveLabels"`
	// Labels as key value pairs.
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
	Location *string `pulumi:"location"`
	// Identifier. Name of the resource.
	// Format:projects/{project}/locations/{location}/releaseChannelSettings/{releaseChannelSetting}
	Name *string `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// The combination of labels configured directly on the resource
	// and default labels configured on the provider.
	PulumiLabels map[string]string `pulumi:"pulumiLabels"`
	// Release channel to be used.
	// Possible values:
	// STABLE
	// EXPERIMENTAL
	ReleaseChannel *string `pulumi:"releaseChannel"`
	// Id of the Release Channel Setting.
	ReleaseChannelSettingId *string `pulumi:"releaseChannelSettingId"`
	// Update time stamp.
	UpdateTime *string `pulumi:"updateTime"`
}

type ReleaseChannelSettingState struct {
	// Create time stamp.
	CreateTime pulumi.StringPtrInput
	// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
	EffectiveLabels pulumi.StringMapInput
	// Labels as key value pairs.
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
	Location pulumi.StringPtrInput
	// Identifier. Name of the resource.
	// Format:projects/{project}/locations/{location}/releaseChannelSettings/{releaseChannelSetting}
	Name pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// The combination of labels configured directly on the resource
	// and default labels configured on the provider.
	PulumiLabels pulumi.StringMapInput
	// Release channel to be used.
	// Possible values:
	// STABLE
	// EXPERIMENTAL
	ReleaseChannel pulumi.StringPtrInput
	// Id of the Release Channel Setting.
	ReleaseChannelSettingId pulumi.StringPtrInput
	// Update time stamp.
	UpdateTime pulumi.StringPtrInput
}

func (ReleaseChannelSettingState) ElementType() reflect.Type {
	return reflect.TypeOf((*releaseChannelSettingState)(nil)).Elem()
}

type releaseChannelSettingArgs struct {
	// Labels as key value pairs.
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
	Location string `pulumi:"location"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// Release channel to be used.
	// Possible values:
	// STABLE
	// EXPERIMENTAL
	ReleaseChannel *string `pulumi:"releaseChannel"`
	// Id of the Release Channel Setting.
	ReleaseChannelSettingId string `pulumi:"releaseChannelSettingId"`
}

// The set of arguments for constructing a ReleaseChannelSetting resource.
type ReleaseChannelSettingArgs struct {
	// Labels as key value pairs.
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
	Location pulumi.StringInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// Release channel to be used.
	// Possible values:
	// STABLE
	// EXPERIMENTAL
	ReleaseChannel pulumi.StringPtrInput
	// Id of the Release Channel Setting.
	ReleaseChannelSettingId pulumi.StringInput
}

func (ReleaseChannelSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*releaseChannelSettingArgs)(nil)).Elem()
}

type ReleaseChannelSettingInput interface {
	pulumi.Input

	ToReleaseChannelSettingOutput() ReleaseChannelSettingOutput
	ToReleaseChannelSettingOutputWithContext(ctx context.Context) ReleaseChannelSettingOutput
}

func (*ReleaseChannelSetting) ElementType() reflect.Type {
	return reflect.TypeOf((**ReleaseChannelSetting)(nil)).Elem()
}

func (i *ReleaseChannelSetting) ToReleaseChannelSettingOutput() ReleaseChannelSettingOutput {
	return i.ToReleaseChannelSettingOutputWithContext(context.Background())
}

func (i *ReleaseChannelSetting) ToReleaseChannelSettingOutputWithContext(ctx context.Context) ReleaseChannelSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReleaseChannelSettingOutput)
}

// ReleaseChannelSettingArrayInput is an input type that accepts ReleaseChannelSettingArray and ReleaseChannelSettingArrayOutput values.
// You can construct a concrete instance of `ReleaseChannelSettingArrayInput` via:
//
//	ReleaseChannelSettingArray{ ReleaseChannelSettingArgs{...} }
type ReleaseChannelSettingArrayInput interface {
	pulumi.Input

	ToReleaseChannelSettingArrayOutput() ReleaseChannelSettingArrayOutput
	ToReleaseChannelSettingArrayOutputWithContext(context.Context) ReleaseChannelSettingArrayOutput
}

type ReleaseChannelSettingArray []ReleaseChannelSettingInput

func (ReleaseChannelSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ReleaseChannelSetting)(nil)).Elem()
}

func (i ReleaseChannelSettingArray) ToReleaseChannelSettingArrayOutput() ReleaseChannelSettingArrayOutput {
	return i.ToReleaseChannelSettingArrayOutputWithContext(context.Background())
}

func (i ReleaseChannelSettingArray) ToReleaseChannelSettingArrayOutputWithContext(ctx context.Context) ReleaseChannelSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReleaseChannelSettingArrayOutput)
}

// ReleaseChannelSettingMapInput is an input type that accepts ReleaseChannelSettingMap and ReleaseChannelSettingMapOutput values.
// You can construct a concrete instance of `ReleaseChannelSettingMapInput` via:
//
//	ReleaseChannelSettingMap{ "key": ReleaseChannelSettingArgs{...} }
type ReleaseChannelSettingMapInput interface {
	pulumi.Input

	ToReleaseChannelSettingMapOutput() ReleaseChannelSettingMapOutput
	ToReleaseChannelSettingMapOutputWithContext(context.Context) ReleaseChannelSettingMapOutput
}

type ReleaseChannelSettingMap map[string]ReleaseChannelSettingInput

func (ReleaseChannelSettingMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ReleaseChannelSetting)(nil)).Elem()
}

func (i ReleaseChannelSettingMap) ToReleaseChannelSettingMapOutput() ReleaseChannelSettingMapOutput {
	return i.ToReleaseChannelSettingMapOutputWithContext(context.Background())
}

func (i ReleaseChannelSettingMap) ToReleaseChannelSettingMapOutputWithContext(ctx context.Context) ReleaseChannelSettingMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReleaseChannelSettingMapOutput)
}

type ReleaseChannelSettingOutput struct{ *pulumi.OutputState }

func (ReleaseChannelSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReleaseChannelSetting)(nil)).Elem()
}

func (o ReleaseChannelSettingOutput) ToReleaseChannelSettingOutput() ReleaseChannelSettingOutput {
	return o
}

func (o ReleaseChannelSettingOutput) ToReleaseChannelSettingOutputWithContext(ctx context.Context) ReleaseChannelSettingOutput {
	return o
}

// Create time stamp.
func (o ReleaseChannelSettingOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ReleaseChannelSetting) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
func (o ReleaseChannelSettingOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ReleaseChannelSetting) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// Labels as key value pairs.
// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
func (o ReleaseChannelSettingOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ReleaseChannelSetting) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
func (o ReleaseChannelSettingOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *ReleaseChannelSetting) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Identifier. Name of the resource.
// Format:projects/{project}/locations/{location}/releaseChannelSettings/{releaseChannelSetting}
func (o ReleaseChannelSettingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ReleaseChannelSetting) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The ID of the project in which the resource belongs.
// If it is not provided, the provider project is used.
func (o ReleaseChannelSettingOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ReleaseChannelSetting) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The combination of labels configured directly on the resource
// and default labels configured on the provider.
func (o ReleaseChannelSettingOutput) PulumiLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ReleaseChannelSetting) pulumi.StringMapOutput { return v.PulumiLabels }).(pulumi.StringMapOutput)
}

// Release channel to be used.
// Possible values:
// STABLE
// EXPERIMENTAL
func (o ReleaseChannelSettingOutput) ReleaseChannel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReleaseChannelSetting) pulumi.StringPtrOutput { return v.ReleaseChannel }).(pulumi.StringPtrOutput)
}

// Id of the Release Channel Setting.
func (o ReleaseChannelSettingOutput) ReleaseChannelSettingId() pulumi.StringOutput {
	return o.ApplyT(func(v *ReleaseChannelSetting) pulumi.StringOutput { return v.ReleaseChannelSettingId }).(pulumi.StringOutput)
}

// Update time stamp.
func (o ReleaseChannelSettingOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ReleaseChannelSetting) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

type ReleaseChannelSettingArrayOutput struct{ *pulumi.OutputState }

func (ReleaseChannelSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ReleaseChannelSetting)(nil)).Elem()
}

func (o ReleaseChannelSettingArrayOutput) ToReleaseChannelSettingArrayOutput() ReleaseChannelSettingArrayOutput {
	return o
}

func (o ReleaseChannelSettingArrayOutput) ToReleaseChannelSettingArrayOutputWithContext(ctx context.Context) ReleaseChannelSettingArrayOutput {
	return o
}

func (o ReleaseChannelSettingArrayOutput) Index(i pulumi.IntInput) ReleaseChannelSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ReleaseChannelSetting {
		return vs[0].([]*ReleaseChannelSetting)[vs[1].(int)]
	}).(ReleaseChannelSettingOutput)
}

type ReleaseChannelSettingMapOutput struct{ *pulumi.OutputState }

func (ReleaseChannelSettingMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ReleaseChannelSetting)(nil)).Elem()
}

func (o ReleaseChannelSettingMapOutput) ToReleaseChannelSettingMapOutput() ReleaseChannelSettingMapOutput {
	return o
}

func (o ReleaseChannelSettingMapOutput) ToReleaseChannelSettingMapOutputWithContext(ctx context.Context) ReleaseChannelSettingMapOutput {
	return o
}

func (o ReleaseChannelSettingMapOutput) MapIndex(k pulumi.StringInput) ReleaseChannelSettingOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ReleaseChannelSetting {
		return vs[0].(map[string]*ReleaseChannelSetting)[vs[1].(string)]
	}).(ReleaseChannelSettingOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ReleaseChannelSettingInput)(nil)).Elem(), &ReleaseChannelSetting{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReleaseChannelSettingArrayInput)(nil)).Elem(), ReleaseChannelSettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReleaseChannelSettingMapInput)(nil)).Elem(), ReleaseChannelSettingMap{})
	pulumi.RegisterOutputType(ReleaseChannelSettingOutput{})
	pulumi.RegisterOutputType(ReleaseChannelSettingArrayOutput{})
	pulumi.RegisterOutputType(ReleaseChannelSettingMapOutput{})
}
