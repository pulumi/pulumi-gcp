// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package gemini

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The resource for managing ReleaseChannel setting bindings for Admin Control.
//
// To get more information about ReleaseChannelSettingBinding, see:
// * How-to Guides
//   - [Gemini Cloud Assist overview](https://cloud.google.com/gemini/docs/cloud-assist/overview)
//
// ## Example Usage
//
// ### Gemini Release Channel Setting Binding Basic
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/gemini"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			basic, err := gemini.NewReleaseChannelSetting(ctx, "basic", &gemini.ReleaseChannelSettingArgs{
//				ReleaseChannelSettingId: pulumi.String("ls-tf1"),
//				Location:                pulumi.String("global"),
//				Labels: pulumi.StringMap{
//					"my_key": pulumi.String("my_value"),
//				},
//				ReleaseChannel: pulumi.String("EXPERIMENTAL"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = gemini.NewReleaseChannelSettingBinding(ctx, "example", &gemini.ReleaseChannelSettingBindingArgs{
//				ReleaseChannelSettingId: basic.ReleaseChannelSettingId,
//				SettingBindingId:        pulumi.String("ls-tf1b1"),
//				Location:                pulumi.String("global"),
//				Target:                  pulumi.String("projects/980109375338"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ReleaseChannelSettingBinding can be imported using any of these accepted formats:
//
// * `projects/{{project}}/locations/{{location}}/releaseChannelSettings/{{release_channel_setting_id}}/settingBindings/{{setting_binding_id}}`
//
// * `{{project}}/{{location}}/{{release_channel_setting_id}}/{{setting_binding_id}}`
//
// * `{{location}}/{{release_channel_setting_id}}/{{setting_binding_id}}`
//
// When using the `pulumi import` command, ReleaseChannelSettingBinding can be imported using one of the formats above. For example:
//
// ```sh
// $ pulumi import gcp:gemini/releaseChannelSettingBinding:ReleaseChannelSettingBinding default projects/{{project}}/locations/{{location}}/releaseChannelSettings/{{release_channel_setting_id}}/settingBindings/{{setting_binding_id}}
// ```
//
// ```sh
// $ pulumi import gcp:gemini/releaseChannelSettingBinding:ReleaseChannelSettingBinding default {{project}}/{{location}}/{{release_channel_setting_id}}/{{setting_binding_id}}
// ```
//
// ```sh
// $ pulumi import gcp:gemini/releaseChannelSettingBinding:ReleaseChannelSettingBinding default {{location}}/{{release_channel_setting_id}}/{{setting_binding_id}}
// ```
type ReleaseChannelSettingBinding struct {
	pulumi.CustomResourceState

	// Create time stamp.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
	EffectiveLabels pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	// Labels as key value pairs.
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
	Location pulumi.StringPtrOutput `pulumi:"location"`
	// Identifier. Name of the resource.
	// Format:projects/{project}/locations/{location}/releaseChannelSettings/{setting}/settingBindings/{setting_binding}
	Name pulumi.StringOutput `pulumi:"name"`
	// Product type of the setting binding.
	// Possible values are: `GEMINI_CLOUD_ASSIST`, `GEMINI_CODE_ASSIST`.
	Product pulumi.StringOutput `pulumi:"product"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
	// The combination of labels configured directly on the resource
	// and default labels configured on the provider.
	PulumiLabels pulumi.StringMapOutput `pulumi:"pulumiLabels"`
	// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
	ReleaseChannelSettingId pulumi.StringOutput `pulumi:"releaseChannelSettingId"`
	// Id of the setting binding.
	SettingBindingId pulumi.StringOutput `pulumi:"settingBindingId"`
	// Target of the binding.
	Target pulumi.StringOutput `pulumi:"target"`
	// Update time stamp.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewReleaseChannelSettingBinding registers a new resource with the given unique name, arguments, and options.
func NewReleaseChannelSettingBinding(ctx *pulumi.Context,
	name string, args *ReleaseChannelSettingBindingArgs, opts ...pulumi.ResourceOption) (*ReleaseChannelSettingBinding, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ReleaseChannelSettingId == nil {
		return nil, errors.New("invalid value for required argument 'ReleaseChannelSettingId'")
	}
	if args.SettingBindingId == nil {
		return nil, errors.New("invalid value for required argument 'SettingBindingId'")
	}
	if args.Target == nil {
		return nil, errors.New("invalid value for required argument 'Target'")
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"effectiveLabels",
		"pulumiLabels",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ReleaseChannelSettingBinding
	err := ctx.RegisterResource("gcp:gemini/releaseChannelSettingBinding:ReleaseChannelSettingBinding", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetReleaseChannelSettingBinding gets an existing ReleaseChannelSettingBinding resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetReleaseChannelSettingBinding(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ReleaseChannelSettingBindingState, opts ...pulumi.ResourceOption) (*ReleaseChannelSettingBinding, error) {
	var resource ReleaseChannelSettingBinding
	err := ctx.ReadResource("gcp:gemini/releaseChannelSettingBinding:ReleaseChannelSettingBinding", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ReleaseChannelSettingBinding resources.
type releaseChannelSettingBindingState struct {
	// Create time stamp.
	CreateTime *string `pulumi:"createTime"`
	// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
	EffectiveLabels map[string]string `pulumi:"effectiveLabels"`
	// Labels as key value pairs.
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
	Location *string `pulumi:"location"`
	// Identifier. Name of the resource.
	// Format:projects/{project}/locations/{location}/releaseChannelSettings/{setting}/settingBindings/{setting_binding}
	Name *string `pulumi:"name"`
	// Product type of the setting binding.
	// Possible values are: `GEMINI_CLOUD_ASSIST`, `GEMINI_CODE_ASSIST`.
	Product *string `pulumi:"product"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// The combination of labels configured directly on the resource
	// and default labels configured on the provider.
	PulumiLabels map[string]string `pulumi:"pulumiLabels"`
	// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
	ReleaseChannelSettingId *string `pulumi:"releaseChannelSettingId"`
	// Id of the setting binding.
	SettingBindingId *string `pulumi:"settingBindingId"`
	// Target of the binding.
	Target *string `pulumi:"target"`
	// Update time stamp.
	UpdateTime *string `pulumi:"updateTime"`
}

type ReleaseChannelSettingBindingState struct {
	// Create time stamp.
	CreateTime pulumi.StringPtrInput
	// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
	EffectiveLabels pulumi.StringMapInput
	// Labels as key value pairs.
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
	Location pulumi.StringPtrInput
	// Identifier. Name of the resource.
	// Format:projects/{project}/locations/{location}/releaseChannelSettings/{setting}/settingBindings/{setting_binding}
	Name pulumi.StringPtrInput
	// Product type of the setting binding.
	// Possible values are: `GEMINI_CLOUD_ASSIST`, `GEMINI_CODE_ASSIST`.
	Product pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// The combination of labels configured directly on the resource
	// and default labels configured on the provider.
	PulumiLabels pulumi.StringMapInput
	// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
	ReleaseChannelSettingId pulumi.StringPtrInput
	// Id of the setting binding.
	SettingBindingId pulumi.StringPtrInput
	// Target of the binding.
	Target pulumi.StringPtrInput
	// Update time stamp.
	UpdateTime pulumi.StringPtrInput
}

func (ReleaseChannelSettingBindingState) ElementType() reflect.Type {
	return reflect.TypeOf((*releaseChannelSettingBindingState)(nil)).Elem()
}

type releaseChannelSettingBindingArgs struct {
	// Labels as key value pairs.
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
	Location *string `pulumi:"location"`
	// Product type of the setting binding.
	// Possible values are: `GEMINI_CLOUD_ASSIST`, `GEMINI_CODE_ASSIST`.
	Product *string `pulumi:"product"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
	ReleaseChannelSettingId string `pulumi:"releaseChannelSettingId"`
	// Id of the setting binding.
	SettingBindingId string `pulumi:"settingBindingId"`
	// Target of the binding.
	Target string `pulumi:"target"`
}

// The set of arguments for constructing a ReleaseChannelSettingBinding resource.
type ReleaseChannelSettingBindingArgs struct {
	// Labels as key value pairs.
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
	Location pulumi.StringPtrInput
	// Product type of the setting binding.
	// Possible values are: `GEMINI_CLOUD_ASSIST`, `GEMINI_CODE_ASSIST`.
	Product pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
	ReleaseChannelSettingId pulumi.StringInput
	// Id of the setting binding.
	SettingBindingId pulumi.StringInput
	// Target of the binding.
	Target pulumi.StringInput
}

func (ReleaseChannelSettingBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*releaseChannelSettingBindingArgs)(nil)).Elem()
}

type ReleaseChannelSettingBindingInput interface {
	pulumi.Input

	ToReleaseChannelSettingBindingOutput() ReleaseChannelSettingBindingOutput
	ToReleaseChannelSettingBindingOutputWithContext(ctx context.Context) ReleaseChannelSettingBindingOutput
}

func (*ReleaseChannelSettingBinding) ElementType() reflect.Type {
	return reflect.TypeOf((**ReleaseChannelSettingBinding)(nil)).Elem()
}

func (i *ReleaseChannelSettingBinding) ToReleaseChannelSettingBindingOutput() ReleaseChannelSettingBindingOutput {
	return i.ToReleaseChannelSettingBindingOutputWithContext(context.Background())
}

func (i *ReleaseChannelSettingBinding) ToReleaseChannelSettingBindingOutputWithContext(ctx context.Context) ReleaseChannelSettingBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReleaseChannelSettingBindingOutput)
}

// ReleaseChannelSettingBindingArrayInput is an input type that accepts ReleaseChannelSettingBindingArray and ReleaseChannelSettingBindingArrayOutput values.
// You can construct a concrete instance of `ReleaseChannelSettingBindingArrayInput` via:
//
//	ReleaseChannelSettingBindingArray{ ReleaseChannelSettingBindingArgs{...} }
type ReleaseChannelSettingBindingArrayInput interface {
	pulumi.Input

	ToReleaseChannelSettingBindingArrayOutput() ReleaseChannelSettingBindingArrayOutput
	ToReleaseChannelSettingBindingArrayOutputWithContext(context.Context) ReleaseChannelSettingBindingArrayOutput
}

type ReleaseChannelSettingBindingArray []ReleaseChannelSettingBindingInput

func (ReleaseChannelSettingBindingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ReleaseChannelSettingBinding)(nil)).Elem()
}

func (i ReleaseChannelSettingBindingArray) ToReleaseChannelSettingBindingArrayOutput() ReleaseChannelSettingBindingArrayOutput {
	return i.ToReleaseChannelSettingBindingArrayOutputWithContext(context.Background())
}

func (i ReleaseChannelSettingBindingArray) ToReleaseChannelSettingBindingArrayOutputWithContext(ctx context.Context) ReleaseChannelSettingBindingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReleaseChannelSettingBindingArrayOutput)
}

// ReleaseChannelSettingBindingMapInput is an input type that accepts ReleaseChannelSettingBindingMap and ReleaseChannelSettingBindingMapOutput values.
// You can construct a concrete instance of `ReleaseChannelSettingBindingMapInput` via:
//
//	ReleaseChannelSettingBindingMap{ "key": ReleaseChannelSettingBindingArgs{...} }
type ReleaseChannelSettingBindingMapInput interface {
	pulumi.Input

	ToReleaseChannelSettingBindingMapOutput() ReleaseChannelSettingBindingMapOutput
	ToReleaseChannelSettingBindingMapOutputWithContext(context.Context) ReleaseChannelSettingBindingMapOutput
}

type ReleaseChannelSettingBindingMap map[string]ReleaseChannelSettingBindingInput

func (ReleaseChannelSettingBindingMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ReleaseChannelSettingBinding)(nil)).Elem()
}

func (i ReleaseChannelSettingBindingMap) ToReleaseChannelSettingBindingMapOutput() ReleaseChannelSettingBindingMapOutput {
	return i.ToReleaseChannelSettingBindingMapOutputWithContext(context.Background())
}

func (i ReleaseChannelSettingBindingMap) ToReleaseChannelSettingBindingMapOutputWithContext(ctx context.Context) ReleaseChannelSettingBindingMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReleaseChannelSettingBindingMapOutput)
}

type ReleaseChannelSettingBindingOutput struct{ *pulumi.OutputState }

func (ReleaseChannelSettingBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReleaseChannelSettingBinding)(nil)).Elem()
}

func (o ReleaseChannelSettingBindingOutput) ToReleaseChannelSettingBindingOutput() ReleaseChannelSettingBindingOutput {
	return o
}

func (o ReleaseChannelSettingBindingOutput) ToReleaseChannelSettingBindingOutputWithContext(ctx context.Context) ReleaseChannelSettingBindingOutput {
	return o
}

// Create time stamp.
func (o ReleaseChannelSettingBindingOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ReleaseChannelSettingBinding) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
func (o ReleaseChannelSettingBindingOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ReleaseChannelSettingBinding) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// Labels as key value pairs.
// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
func (o ReleaseChannelSettingBindingOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ReleaseChannelSettingBinding) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
func (o ReleaseChannelSettingBindingOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReleaseChannelSettingBinding) pulumi.StringPtrOutput { return v.Location }).(pulumi.StringPtrOutput)
}

// Identifier. Name of the resource.
// Format:projects/{project}/locations/{location}/releaseChannelSettings/{setting}/settingBindings/{setting_binding}
func (o ReleaseChannelSettingBindingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ReleaseChannelSettingBinding) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Product type of the setting binding.
// Possible values are: `GEMINI_CLOUD_ASSIST`, `GEMINI_CODE_ASSIST`.
func (o ReleaseChannelSettingBindingOutput) Product() pulumi.StringOutput {
	return o.ApplyT(func(v *ReleaseChannelSettingBinding) pulumi.StringOutput { return v.Product }).(pulumi.StringOutput)
}

// The ID of the project in which the resource belongs.
// If it is not provided, the provider project is used.
func (o ReleaseChannelSettingBindingOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ReleaseChannelSettingBinding) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The combination of labels configured directly on the resource
// and default labels configured on the provider.
func (o ReleaseChannelSettingBindingOutput) PulumiLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ReleaseChannelSettingBinding) pulumi.StringMapOutput { return v.PulumiLabels }).(pulumi.StringMapOutput)
}

// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
func (o ReleaseChannelSettingBindingOutput) ReleaseChannelSettingId() pulumi.StringOutput {
	return o.ApplyT(func(v *ReleaseChannelSettingBinding) pulumi.StringOutput { return v.ReleaseChannelSettingId }).(pulumi.StringOutput)
}

// Id of the setting binding.
func (o ReleaseChannelSettingBindingOutput) SettingBindingId() pulumi.StringOutput {
	return o.ApplyT(func(v *ReleaseChannelSettingBinding) pulumi.StringOutput { return v.SettingBindingId }).(pulumi.StringOutput)
}

// Target of the binding.
func (o ReleaseChannelSettingBindingOutput) Target() pulumi.StringOutput {
	return o.ApplyT(func(v *ReleaseChannelSettingBinding) pulumi.StringOutput { return v.Target }).(pulumi.StringOutput)
}

// Update time stamp.
func (o ReleaseChannelSettingBindingOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ReleaseChannelSettingBinding) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

type ReleaseChannelSettingBindingArrayOutput struct{ *pulumi.OutputState }

func (ReleaseChannelSettingBindingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ReleaseChannelSettingBinding)(nil)).Elem()
}

func (o ReleaseChannelSettingBindingArrayOutput) ToReleaseChannelSettingBindingArrayOutput() ReleaseChannelSettingBindingArrayOutput {
	return o
}

func (o ReleaseChannelSettingBindingArrayOutput) ToReleaseChannelSettingBindingArrayOutputWithContext(ctx context.Context) ReleaseChannelSettingBindingArrayOutput {
	return o
}

func (o ReleaseChannelSettingBindingArrayOutput) Index(i pulumi.IntInput) ReleaseChannelSettingBindingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ReleaseChannelSettingBinding {
		return vs[0].([]*ReleaseChannelSettingBinding)[vs[1].(int)]
	}).(ReleaseChannelSettingBindingOutput)
}

type ReleaseChannelSettingBindingMapOutput struct{ *pulumi.OutputState }

func (ReleaseChannelSettingBindingMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ReleaseChannelSettingBinding)(nil)).Elem()
}

func (o ReleaseChannelSettingBindingMapOutput) ToReleaseChannelSettingBindingMapOutput() ReleaseChannelSettingBindingMapOutput {
	return o
}

func (o ReleaseChannelSettingBindingMapOutput) ToReleaseChannelSettingBindingMapOutputWithContext(ctx context.Context) ReleaseChannelSettingBindingMapOutput {
	return o
}

func (o ReleaseChannelSettingBindingMapOutput) MapIndex(k pulumi.StringInput) ReleaseChannelSettingBindingOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ReleaseChannelSettingBinding {
		return vs[0].(map[string]*ReleaseChannelSettingBinding)[vs[1].(string)]
	}).(ReleaseChannelSettingBindingOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ReleaseChannelSettingBindingInput)(nil)).Elem(), &ReleaseChannelSettingBinding{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReleaseChannelSettingBindingArrayInput)(nil)).Elem(), ReleaseChannelSettingBindingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReleaseChannelSettingBindingMapInput)(nil)).Elem(), ReleaseChannelSettingBindingMap{})
	pulumi.RegisterOutputType(ReleaseChannelSettingBindingOutput{})
	pulumi.RegisterOutputType(ReleaseChannelSettingBindingArrayOutput{})
	pulumi.RegisterOutputType(ReleaseChannelSettingBindingMapOutput{})
}
