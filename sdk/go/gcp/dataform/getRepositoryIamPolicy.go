// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dataform

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/dataform"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := dataform.LookupRepositoryIamPolicy(ctx, &dataform.LookupRepositoryIamPolicyArgs{
//				Project:    pulumi.StringRef(dataformRepository.Project),
//				Region:     pulumi.StringRef(dataformRepository.Region),
//				Repository: dataformRepository.Name,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupRepositoryIamPolicy(ctx *pulumi.Context, args *LookupRepositoryIamPolicyArgs, opts ...pulumi.InvokeOption) (*LookupRepositoryIamPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupRepositoryIamPolicyResult
	err := ctx.Invoke("gcp:dataform/getRepositoryIamPolicy:getRepositoryIamPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRepositoryIamPolicy.
type LookupRepositoryIamPolicyArgs struct {
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project *string `pulumi:"project"`
	// A reference to the region Used to find the parent resource to bind the IAM policy to. If not specified,
	// the value will be parsed from the identifier of the parent resource. If no region is provided in the parent identifier and no
	// region is specified, it is taken from the provider configuration.
	Region *string `pulumi:"region"`
	// Used to find the parent resource to bind the IAM policy to
	Repository string `pulumi:"repository"`
}

// A collection of values returned by getRepositoryIamPolicy.
type LookupRepositoryIamPolicyResult struct {
	// (Computed) The etag of the IAM policy.
	Etag string `pulumi:"etag"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// (Required only by `dataform.RepositoryIamPolicy`) The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData string `pulumi:"policyData"`
	Project    string `pulumi:"project"`
	Region     string `pulumi:"region"`
	Repository string `pulumi:"repository"`
}

func LookupRepositoryIamPolicyOutput(ctx *pulumi.Context, args LookupRepositoryIamPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupRepositoryIamPolicyResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupRepositoryIamPolicyResultOutput, error) {
			args := v.(LookupRepositoryIamPolicyArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("gcp:dataform/getRepositoryIamPolicy:getRepositoryIamPolicy", args, LookupRepositoryIamPolicyResultOutput{}, options).(LookupRepositoryIamPolicyResultOutput), nil
		}).(LookupRepositoryIamPolicyResultOutput)
}

// A collection of arguments for invoking getRepositoryIamPolicy.
type LookupRepositoryIamPolicyOutputArgs struct {
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringPtrInput `pulumi:"project"`
	// A reference to the region Used to find the parent resource to bind the IAM policy to. If not specified,
	// the value will be parsed from the identifier of the parent resource. If no region is provided in the parent identifier and no
	// region is specified, it is taken from the provider configuration.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// Used to find the parent resource to bind the IAM policy to
	Repository pulumi.StringInput `pulumi:"repository"`
}

func (LookupRepositoryIamPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRepositoryIamPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getRepositoryIamPolicy.
type LookupRepositoryIamPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupRepositoryIamPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRepositoryIamPolicyResult)(nil)).Elem()
}

func (o LookupRepositoryIamPolicyResultOutput) ToLookupRepositoryIamPolicyResultOutput() LookupRepositoryIamPolicyResultOutput {
	return o
}

func (o LookupRepositoryIamPolicyResultOutput) ToLookupRepositoryIamPolicyResultOutputWithContext(ctx context.Context) LookupRepositoryIamPolicyResultOutput {
	return o
}

// (Computed) The etag of the IAM policy.
func (o LookupRepositoryIamPolicyResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRepositoryIamPolicyResult) string { return v.Etag }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupRepositoryIamPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRepositoryIamPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

// (Required only by `dataform.RepositoryIamPolicy`) The policy data generated by
// a `organizations.getIAMPolicy` data source.
func (o LookupRepositoryIamPolicyResultOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRepositoryIamPolicyResult) string { return v.PolicyData }).(pulumi.StringOutput)
}

func (o LookupRepositoryIamPolicyResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRepositoryIamPolicyResult) string { return v.Project }).(pulumi.StringOutput)
}

func (o LookupRepositoryIamPolicyResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRepositoryIamPolicyResult) string { return v.Region }).(pulumi.StringOutput)
}

func (o LookupRepositoryIamPolicyResultOutput) Repository() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRepositoryIamPolicyResult) string { return v.Repository }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRepositoryIamPolicyResultOutput{})
}
