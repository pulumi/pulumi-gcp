// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dataform

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type RepositoryGitRemoteSettings struct {
	// The name of the Secret Manager secret version to use as an authentication token for Git operations. Must be in the format projects/*/secrets/*/versions/*.
	AuthenticationTokenSecretVersion string `pulumi:"authenticationTokenSecretVersion"`
	// The Git remote's default branch name.
	DefaultBranch string `pulumi:"defaultBranch"`
	// (Output)
	// Indicates the status of the Git access token. https://cloud.google.com/dataform/reference/rest/v1beta1/projects.locations.repositories#TokenStatus
	TokenStatus *string `pulumi:"tokenStatus"`
	// The Git remote's URL.
	Url string `pulumi:"url"`
}

// RepositoryGitRemoteSettingsInput is an input type that accepts RepositoryGitRemoteSettingsArgs and RepositoryGitRemoteSettingsOutput values.
// You can construct a concrete instance of `RepositoryGitRemoteSettingsInput` via:
//
//	RepositoryGitRemoteSettingsArgs{...}
type RepositoryGitRemoteSettingsInput interface {
	pulumi.Input

	ToRepositoryGitRemoteSettingsOutput() RepositoryGitRemoteSettingsOutput
	ToRepositoryGitRemoteSettingsOutputWithContext(context.Context) RepositoryGitRemoteSettingsOutput
}

type RepositoryGitRemoteSettingsArgs struct {
	// The name of the Secret Manager secret version to use as an authentication token for Git operations. Must be in the format projects/*/secrets/*/versions/*.
	AuthenticationTokenSecretVersion pulumi.StringInput `pulumi:"authenticationTokenSecretVersion"`
	// The Git remote's default branch name.
	DefaultBranch pulumi.StringInput `pulumi:"defaultBranch"`
	// (Output)
	// Indicates the status of the Git access token. https://cloud.google.com/dataform/reference/rest/v1beta1/projects.locations.repositories#TokenStatus
	TokenStatus pulumi.StringPtrInput `pulumi:"tokenStatus"`
	// The Git remote's URL.
	Url pulumi.StringInput `pulumi:"url"`
}

func (RepositoryGitRemoteSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryGitRemoteSettings)(nil)).Elem()
}

func (i RepositoryGitRemoteSettingsArgs) ToRepositoryGitRemoteSettingsOutput() RepositoryGitRemoteSettingsOutput {
	return i.ToRepositoryGitRemoteSettingsOutputWithContext(context.Background())
}

func (i RepositoryGitRemoteSettingsArgs) ToRepositoryGitRemoteSettingsOutputWithContext(ctx context.Context) RepositoryGitRemoteSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryGitRemoteSettingsOutput)
}

func (i RepositoryGitRemoteSettingsArgs) ToRepositoryGitRemoteSettingsPtrOutput() RepositoryGitRemoteSettingsPtrOutput {
	return i.ToRepositoryGitRemoteSettingsPtrOutputWithContext(context.Background())
}

func (i RepositoryGitRemoteSettingsArgs) ToRepositoryGitRemoteSettingsPtrOutputWithContext(ctx context.Context) RepositoryGitRemoteSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryGitRemoteSettingsOutput).ToRepositoryGitRemoteSettingsPtrOutputWithContext(ctx)
}

// RepositoryGitRemoteSettingsPtrInput is an input type that accepts RepositoryGitRemoteSettingsArgs, RepositoryGitRemoteSettingsPtr and RepositoryGitRemoteSettingsPtrOutput values.
// You can construct a concrete instance of `RepositoryGitRemoteSettingsPtrInput` via:
//
//	        RepositoryGitRemoteSettingsArgs{...}
//
//	or:
//
//	        nil
type RepositoryGitRemoteSettingsPtrInput interface {
	pulumi.Input

	ToRepositoryGitRemoteSettingsPtrOutput() RepositoryGitRemoteSettingsPtrOutput
	ToRepositoryGitRemoteSettingsPtrOutputWithContext(context.Context) RepositoryGitRemoteSettingsPtrOutput
}

type repositoryGitRemoteSettingsPtrType RepositoryGitRemoteSettingsArgs

func RepositoryGitRemoteSettingsPtr(v *RepositoryGitRemoteSettingsArgs) RepositoryGitRemoteSettingsPtrInput {
	return (*repositoryGitRemoteSettingsPtrType)(v)
}

func (*repositoryGitRemoteSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RepositoryGitRemoteSettings)(nil)).Elem()
}

func (i *repositoryGitRemoteSettingsPtrType) ToRepositoryGitRemoteSettingsPtrOutput() RepositoryGitRemoteSettingsPtrOutput {
	return i.ToRepositoryGitRemoteSettingsPtrOutputWithContext(context.Background())
}

func (i *repositoryGitRemoteSettingsPtrType) ToRepositoryGitRemoteSettingsPtrOutputWithContext(ctx context.Context) RepositoryGitRemoteSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryGitRemoteSettingsPtrOutput)
}

type RepositoryGitRemoteSettingsOutput struct{ *pulumi.OutputState }

func (RepositoryGitRemoteSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryGitRemoteSettings)(nil)).Elem()
}

func (o RepositoryGitRemoteSettingsOutput) ToRepositoryGitRemoteSettingsOutput() RepositoryGitRemoteSettingsOutput {
	return o
}

func (o RepositoryGitRemoteSettingsOutput) ToRepositoryGitRemoteSettingsOutputWithContext(ctx context.Context) RepositoryGitRemoteSettingsOutput {
	return o
}

func (o RepositoryGitRemoteSettingsOutput) ToRepositoryGitRemoteSettingsPtrOutput() RepositoryGitRemoteSettingsPtrOutput {
	return o.ToRepositoryGitRemoteSettingsPtrOutputWithContext(context.Background())
}

func (o RepositoryGitRemoteSettingsOutput) ToRepositoryGitRemoteSettingsPtrOutputWithContext(ctx context.Context) RepositoryGitRemoteSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RepositoryGitRemoteSettings) *RepositoryGitRemoteSettings {
		return &v
	}).(RepositoryGitRemoteSettingsPtrOutput)
}

// The name of the Secret Manager secret version to use as an authentication token for Git operations. Must be in the format projects/*/secrets/*/versions/*.
func (o RepositoryGitRemoteSettingsOutput) AuthenticationTokenSecretVersion() pulumi.StringOutput {
	return o.ApplyT(func(v RepositoryGitRemoteSettings) string { return v.AuthenticationTokenSecretVersion }).(pulumi.StringOutput)
}

// The Git remote's default branch name.
func (o RepositoryGitRemoteSettingsOutput) DefaultBranch() pulumi.StringOutput {
	return o.ApplyT(func(v RepositoryGitRemoteSettings) string { return v.DefaultBranch }).(pulumi.StringOutput)
}

// (Output)
// Indicates the status of the Git access token. https://cloud.google.com/dataform/reference/rest/v1beta1/projects.locations.repositories#TokenStatus
func (o RepositoryGitRemoteSettingsOutput) TokenStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepositoryGitRemoteSettings) *string { return v.TokenStatus }).(pulumi.StringPtrOutput)
}

// The Git remote's URL.
func (o RepositoryGitRemoteSettingsOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v RepositoryGitRemoteSettings) string { return v.Url }).(pulumi.StringOutput)
}

type RepositoryGitRemoteSettingsPtrOutput struct{ *pulumi.OutputState }

func (RepositoryGitRemoteSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RepositoryGitRemoteSettings)(nil)).Elem()
}

func (o RepositoryGitRemoteSettingsPtrOutput) ToRepositoryGitRemoteSettingsPtrOutput() RepositoryGitRemoteSettingsPtrOutput {
	return o
}

func (o RepositoryGitRemoteSettingsPtrOutput) ToRepositoryGitRemoteSettingsPtrOutputWithContext(ctx context.Context) RepositoryGitRemoteSettingsPtrOutput {
	return o
}

func (o RepositoryGitRemoteSettingsPtrOutput) Elem() RepositoryGitRemoteSettingsOutput {
	return o.ApplyT(func(v *RepositoryGitRemoteSettings) RepositoryGitRemoteSettings {
		if v != nil {
			return *v
		}
		var ret RepositoryGitRemoteSettings
		return ret
	}).(RepositoryGitRemoteSettingsOutput)
}

// The name of the Secret Manager secret version to use as an authentication token for Git operations. Must be in the format projects/*/secrets/*/versions/*.
func (o RepositoryGitRemoteSettingsPtrOutput) AuthenticationTokenSecretVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepositoryGitRemoteSettings) *string {
		if v == nil {
			return nil
		}
		return &v.AuthenticationTokenSecretVersion
	}).(pulumi.StringPtrOutput)
}

// The Git remote's default branch name.
func (o RepositoryGitRemoteSettingsPtrOutput) DefaultBranch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepositoryGitRemoteSettings) *string {
		if v == nil {
			return nil
		}
		return &v.DefaultBranch
	}).(pulumi.StringPtrOutput)
}

// (Output)
// Indicates the status of the Git access token. https://cloud.google.com/dataform/reference/rest/v1beta1/projects.locations.repositories#TokenStatus
func (o RepositoryGitRemoteSettingsPtrOutput) TokenStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepositoryGitRemoteSettings) *string {
		if v == nil {
			return nil
		}
		return v.TokenStatus
	}).(pulumi.StringPtrOutput)
}

// The Git remote's URL.
func (o RepositoryGitRemoteSettingsPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepositoryGitRemoteSettings) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

type RepositoryReleaseConfigCodeCompilationConfig struct {
	// Optional. The default schema (BigQuery dataset ID) for assertions.
	AssertionSchema *string `pulumi:"assertionSchema"`
	// Optional. The suffix that should be appended to all database (Google Cloud project ID) names.
	DatabaseSuffix *string `pulumi:"databaseSuffix"`
	// Optional. The default database (Google Cloud project ID).
	DefaultDatabase *string `pulumi:"defaultDatabase"`
	// Optional. The default BigQuery location to use. Defaults to "US".
	// See the BigQuery docs for a full list of locations: https://cloud.google.com/bigquery/docs/locations.
	DefaultLocation *string `pulumi:"defaultLocation"`
	// Optional. The default schema (BigQuery dataset ID).
	DefaultSchema *string `pulumi:"defaultSchema"`
	// Optional. The suffix that should be appended to all schema (BigQuery dataset ID) names.
	SchemaSuffix *string `pulumi:"schemaSuffix"`
	// Optional. The prefix that should be prepended to all table names.
	TablePrefix *string `pulumi:"tablePrefix"`
	// Optional. User-defined variables that are made available to project code during compilation.
	// An object containing a list of "key": value pairs.
	// Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
	Vars map[string]string `pulumi:"vars"`
}

// RepositoryReleaseConfigCodeCompilationConfigInput is an input type that accepts RepositoryReleaseConfigCodeCompilationConfigArgs and RepositoryReleaseConfigCodeCompilationConfigOutput values.
// You can construct a concrete instance of `RepositoryReleaseConfigCodeCompilationConfigInput` via:
//
//	RepositoryReleaseConfigCodeCompilationConfigArgs{...}
type RepositoryReleaseConfigCodeCompilationConfigInput interface {
	pulumi.Input

	ToRepositoryReleaseConfigCodeCompilationConfigOutput() RepositoryReleaseConfigCodeCompilationConfigOutput
	ToRepositoryReleaseConfigCodeCompilationConfigOutputWithContext(context.Context) RepositoryReleaseConfigCodeCompilationConfigOutput
}

type RepositoryReleaseConfigCodeCompilationConfigArgs struct {
	// Optional. The default schema (BigQuery dataset ID) for assertions.
	AssertionSchema pulumi.StringPtrInput `pulumi:"assertionSchema"`
	// Optional. The suffix that should be appended to all database (Google Cloud project ID) names.
	DatabaseSuffix pulumi.StringPtrInput `pulumi:"databaseSuffix"`
	// Optional. The default database (Google Cloud project ID).
	DefaultDatabase pulumi.StringPtrInput `pulumi:"defaultDatabase"`
	// Optional. The default BigQuery location to use. Defaults to "US".
	// See the BigQuery docs for a full list of locations: https://cloud.google.com/bigquery/docs/locations.
	DefaultLocation pulumi.StringPtrInput `pulumi:"defaultLocation"`
	// Optional. The default schema (BigQuery dataset ID).
	DefaultSchema pulumi.StringPtrInput `pulumi:"defaultSchema"`
	// Optional. The suffix that should be appended to all schema (BigQuery dataset ID) names.
	SchemaSuffix pulumi.StringPtrInput `pulumi:"schemaSuffix"`
	// Optional. The prefix that should be prepended to all table names.
	TablePrefix pulumi.StringPtrInput `pulumi:"tablePrefix"`
	// Optional. User-defined variables that are made available to project code during compilation.
	// An object containing a list of "key": value pairs.
	// Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
	Vars pulumi.StringMapInput `pulumi:"vars"`
}

func (RepositoryReleaseConfigCodeCompilationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryReleaseConfigCodeCompilationConfig)(nil)).Elem()
}

func (i RepositoryReleaseConfigCodeCompilationConfigArgs) ToRepositoryReleaseConfigCodeCompilationConfigOutput() RepositoryReleaseConfigCodeCompilationConfigOutput {
	return i.ToRepositoryReleaseConfigCodeCompilationConfigOutputWithContext(context.Background())
}

func (i RepositoryReleaseConfigCodeCompilationConfigArgs) ToRepositoryReleaseConfigCodeCompilationConfigOutputWithContext(ctx context.Context) RepositoryReleaseConfigCodeCompilationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryReleaseConfigCodeCompilationConfigOutput)
}

func (i RepositoryReleaseConfigCodeCompilationConfigArgs) ToRepositoryReleaseConfigCodeCompilationConfigPtrOutput() RepositoryReleaseConfigCodeCompilationConfigPtrOutput {
	return i.ToRepositoryReleaseConfigCodeCompilationConfigPtrOutputWithContext(context.Background())
}

func (i RepositoryReleaseConfigCodeCompilationConfigArgs) ToRepositoryReleaseConfigCodeCompilationConfigPtrOutputWithContext(ctx context.Context) RepositoryReleaseConfigCodeCompilationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryReleaseConfigCodeCompilationConfigOutput).ToRepositoryReleaseConfigCodeCompilationConfigPtrOutputWithContext(ctx)
}

// RepositoryReleaseConfigCodeCompilationConfigPtrInput is an input type that accepts RepositoryReleaseConfigCodeCompilationConfigArgs, RepositoryReleaseConfigCodeCompilationConfigPtr and RepositoryReleaseConfigCodeCompilationConfigPtrOutput values.
// You can construct a concrete instance of `RepositoryReleaseConfigCodeCompilationConfigPtrInput` via:
//
//	        RepositoryReleaseConfigCodeCompilationConfigArgs{...}
//
//	or:
//
//	        nil
type RepositoryReleaseConfigCodeCompilationConfigPtrInput interface {
	pulumi.Input

	ToRepositoryReleaseConfigCodeCompilationConfigPtrOutput() RepositoryReleaseConfigCodeCompilationConfigPtrOutput
	ToRepositoryReleaseConfigCodeCompilationConfigPtrOutputWithContext(context.Context) RepositoryReleaseConfigCodeCompilationConfigPtrOutput
}

type repositoryReleaseConfigCodeCompilationConfigPtrType RepositoryReleaseConfigCodeCompilationConfigArgs

func RepositoryReleaseConfigCodeCompilationConfigPtr(v *RepositoryReleaseConfigCodeCompilationConfigArgs) RepositoryReleaseConfigCodeCompilationConfigPtrInput {
	return (*repositoryReleaseConfigCodeCompilationConfigPtrType)(v)
}

func (*repositoryReleaseConfigCodeCompilationConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RepositoryReleaseConfigCodeCompilationConfig)(nil)).Elem()
}

func (i *repositoryReleaseConfigCodeCompilationConfigPtrType) ToRepositoryReleaseConfigCodeCompilationConfigPtrOutput() RepositoryReleaseConfigCodeCompilationConfigPtrOutput {
	return i.ToRepositoryReleaseConfigCodeCompilationConfigPtrOutputWithContext(context.Background())
}

func (i *repositoryReleaseConfigCodeCompilationConfigPtrType) ToRepositoryReleaseConfigCodeCompilationConfigPtrOutputWithContext(ctx context.Context) RepositoryReleaseConfigCodeCompilationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryReleaseConfigCodeCompilationConfigPtrOutput)
}

type RepositoryReleaseConfigCodeCompilationConfigOutput struct{ *pulumi.OutputState }

func (RepositoryReleaseConfigCodeCompilationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryReleaseConfigCodeCompilationConfig)(nil)).Elem()
}

func (o RepositoryReleaseConfigCodeCompilationConfigOutput) ToRepositoryReleaseConfigCodeCompilationConfigOutput() RepositoryReleaseConfigCodeCompilationConfigOutput {
	return o
}

func (o RepositoryReleaseConfigCodeCompilationConfigOutput) ToRepositoryReleaseConfigCodeCompilationConfigOutputWithContext(ctx context.Context) RepositoryReleaseConfigCodeCompilationConfigOutput {
	return o
}

func (o RepositoryReleaseConfigCodeCompilationConfigOutput) ToRepositoryReleaseConfigCodeCompilationConfigPtrOutput() RepositoryReleaseConfigCodeCompilationConfigPtrOutput {
	return o.ToRepositoryReleaseConfigCodeCompilationConfigPtrOutputWithContext(context.Background())
}

func (o RepositoryReleaseConfigCodeCompilationConfigOutput) ToRepositoryReleaseConfigCodeCompilationConfigPtrOutputWithContext(ctx context.Context) RepositoryReleaseConfigCodeCompilationConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RepositoryReleaseConfigCodeCompilationConfig) *RepositoryReleaseConfigCodeCompilationConfig {
		return &v
	}).(RepositoryReleaseConfigCodeCompilationConfigPtrOutput)
}

// Optional. The default schema (BigQuery dataset ID) for assertions.
func (o RepositoryReleaseConfigCodeCompilationConfigOutput) AssertionSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepositoryReleaseConfigCodeCompilationConfig) *string { return v.AssertionSchema }).(pulumi.StringPtrOutput)
}

// Optional. The suffix that should be appended to all database (Google Cloud project ID) names.
func (o RepositoryReleaseConfigCodeCompilationConfigOutput) DatabaseSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepositoryReleaseConfigCodeCompilationConfig) *string { return v.DatabaseSuffix }).(pulumi.StringPtrOutput)
}

// Optional. The default database (Google Cloud project ID).
func (o RepositoryReleaseConfigCodeCompilationConfigOutput) DefaultDatabase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepositoryReleaseConfigCodeCompilationConfig) *string { return v.DefaultDatabase }).(pulumi.StringPtrOutput)
}

// Optional. The default BigQuery location to use. Defaults to "US".
// See the BigQuery docs for a full list of locations: https://cloud.google.com/bigquery/docs/locations.
func (o RepositoryReleaseConfigCodeCompilationConfigOutput) DefaultLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepositoryReleaseConfigCodeCompilationConfig) *string { return v.DefaultLocation }).(pulumi.StringPtrOutput)
}

// Optional. The default schema (BigQuery dataset ID).
func (o RepositoryReleaseConfigCodeCompilationConfigOutput) DefaultSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepositoryReleaseConfigCodeCompilationConfig) *string { return v.DefaultSchema }).(pulumi.StringPtrOutput)
}

// Optional. The suffix that should be appended to all schema (BigQuery dataset ID) names.
func (o RepositoryReleaseConfigCodeCompilationConfigOutput) SchemaSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepositoryReleaseConfigCodeCompilationConfig) *string { return v.SchemaSuffix }).(pulumi.StringPtrOutput)
}

// Optional. The prefix that should be prepended to all table names.
func (o RepositoryReleaseConfigCodeCompilationConfigOutput) TablePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepositoryReleaseConfigCodeCompilationConfig) *string { return v.TablePrefix }).(pulumi.StringPtrOutput)
}

// Optional. User-defined variables that are made available to project code during compilation.
// An object containing a list of "key": value pairs.
// Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
func (o RepositoryReleaseConfigCodeCompilationConfigOutput) Vars() pulumi.StringMapOutput {
	return o.ApplyT(func(v RepositoryReleaseConfigCodeCompilationConfig) map[string]string { return v.Vars }).(pulumi.StringMapOutput)
}

type RepositoryReleaseConfigCodeCompilationConfigPtrOutput struct{ *pulumi.OutputState }

func (RepositoryReleaseConfigCodeCompilationConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RepositoryReleaseConfigCodeCompilationConfig)(nil)).Elem()
}

func (o RepositoryReleaseConfigCodeCompilationConfigPtrOutput) ToRepositoryReleaseConfigCodeCompilationConfigPtrOutput() RepositoryReleaseConfigCodeCompilationConfigPtrOutput {
	return o
}

func (o RepositoryReleaseConfigCodeCompilationConfigPtrOutput) ToRepositoryReleaseConfigCodeCompilationConfigPtrOutputWithContext(ctx context.Context) RepositoryReleaseConfigCodeCompilationConfigPtrOutput {
	return o
}

func (o RepositoryReleaseConfigCodeCompilationConfigPtrOutput) Elem() RepositoryReleaseConfigCodeCompilationConfigOutput {
	return o.ApplyT(func(v *RepositoryReleaseConfigCodeCompilationConfig) RepositoryReleaseConfigCodeCompilationConfig {
		if v != nil {
			return *v
		}
		var ret RepositoryReleaseConfigCodeCompilationConfig
		return ret
	}).(RepositoryReleaseConfigCodeCompilationConfigOutput)
}

// Optional. The default schema (BigQuery dataset ID) for assertions.
func (o RepositoryReleaseConfigCodeCompilationConfigPtrOutput) AssertionSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepositoryReleaseConfigCodeCompilationConfig) *string {
		if v == nil {
			return nil
		}
		return v.AssertionSchema
	}).(pulumi.StringPtrOutput)
}

// Optional. The suffix that should be appended to all database (Google Cloud project ID) names.
func (o RepositoryReleaseConfigCodeCompilationConfigPtrOutput) DatabaseSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepositoryReleaseConfigCodeCompilationConfig) *string {
		if v == nil {
			return nil
		}
		return v.DatabaseSuffix
	}).(pulumi.StringPtrOutput)
}

// Optional. The default database (Google Cloud project ID).
func (o RepositoryReleaseConfigCodeCompilationConfigPtrOutput) DefaultDatabase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepositoryReleaseConfigCodeCompilationConfig) *string {
		if v == nil {
			return nil
		}
		return v.DefaultDatabase
	}).(pulumi.StringPtrOutput)
}

// Optional. The default BigQuery location to use. Defaults to "US".
// See the BigQuery docs for a full list of locations: https://cloud.google.com/bigquery/docs/locations.
func (o RepositoryReleaseConfigCodeCompilationConfigPtrOutput) DefaultLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepositoryReleaseConfigCodeCompilationConfig) *string {
		if v == nil {
			return nil
		}
		return v.DefaultLocation
	}).(pulumi.StringPtrOutput)
}

// Optional. The default schema (BigQuery dataset ID).
func (o RepositoryReleaseConfigCodeCompilationConfigPtrOutput) DefaultSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepositoryReleaseConfigCodeCompilationConfig) *string {
		if v == nil {
			return nil
		}
		return v.DefaultSchema
	}).(pulumi.StringPtrOutput)
}

// Optional. The suffix that should be appended to all schema (BigQuery dataset ID) names.
func (o RepositoryReleaseConfigCodeCompilationConfigPtrOutput) SchemaSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepositoryReleaseConfigCodeCompilationConfig) *string {
		if v == nil {
			return nil
		}
		return v.SchemaSuffix
	}).(pulumi.StringPtrOutput)
}

// Optional. The prefix that should be prepended to all table names.
func (o RepositoryReleaseConfigCodeCompilationConfigPtrOutput) TablePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepositoryReleaseConfigCodeCompilationConfig) *string {
		if v == nil {
			return nil
		}
		return v.TablePrefix
	}).(pulumi.StringPtrOutput)
}

// Optional. User-defined variables that are made available to project code during compilation.
// An object containing a list of "key": value pairs.
// Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
func (o RepositoryReleaseConfigCodeCompilationConfigPtrOutput) Vars() pulumi.StringMapOutput {
	return o.ApplyT(func(v *RepositoryReleaseConfigCodeCompilationConfig) map[string]string {
		if v == nil {
			return nil
		}
		return v.Vars
	}).(pulumi.StringMapOutput)
}

type RepositoryReleaseConfigRecentScheduledReleaseRecord struct {
	// (Output)
	// The name of the created compilation result, if one was successfully created. Must be in the format projects/*/locations/*/repositories/*/compilationResults/*.
	CompilationResult *string `pulumi:"compilationResult"`
	// (Output)
	// The error status encountered upon this attempt to create the compilation result, if the attempt was unsuccessful.
	// Structure is documented below.
	ErrorStatuses []RepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatus `pulumi:"errorStatuses"`
	// (Output)
	// The timestamp of this release attempt.
	ReleaseTime *string `pulumi:"releaseTime"`
}

// RepositoryReleaseConfigRecentScheduledReleaseRecordInput is an input type that accepts RepositoryReleaseConfigRecentScheduledReleaseRecordArgs and RepositoryReleaseConfigRecentScheduledReleaseRecordOutput values.
// You can construct a concrete instance of `RepositoryReleaseConfigRecentScheduledReleaseRecordInput` via:
//
//	RepositoryReleaseConfigRecentScheduledReleaseRecordArgs{...}
type RepositoryReleaseConfigRecentScheduledReleaseRecordInput interface {
	pulumi.Input

	ToRepositoryReleaseConfigRecentScheduledReleaseRecordOutput() RepositoryReleaseConfigRecentScheduledReleaseRecordOutput
	ToRepositoryReleaseConfigRecentScheduledReleaseRecordOutputWithContext(context.Context) RepositoryReleaseConfigRecentScheduledReleaseRecordOutput
}

type RepositoryReleaseConfigRecentScheduledReleaseRecordArgs struct {
	// (Output)
	// The name of the created compilation result, if one was successfully created. Must be in the format projects/*/locations/*/repositories/*/compilationResults/*.
	CompilationResult pulumi.StringPtrInput `pulumi:"compilationResult"`
	// (Output)
	// The error status encountered upon this attempt to create the compilation result, if the attempt was unsuccessful.
	// Structure is documented below.
	ErrorStatuses RepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatusArrayInput `pulumi:"errorStatuses"`
	// (Output)
	// The timestamp of this release attempt.
	ReleaseTime pulumi.StringPtrInput `pulumi:"releaseTime"`
}

func (RepositoryReleaseConfigRecentScheduledReleaseRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryReleaseConfigRecentScheduledReleaseRecord)(nil)).Elem()
}

func (i RepositoryReleaseConfigRecentScheduledReleaseRecordArgs) ToRepositoryReleaseConfigRecentScheduledReleaseRecordOutput() RepositoryReleaseConfigRecentScheduledReleaseRecordOutput {
	return i.ToRepositoryReleaseConfigRecentScheduledReleaseRecordOutputWithContext(context.Background())
}

func (i RepositoryReleaseConfigRecentScheduledReleaseRecordArgs) ToRepositoryReleaseConfigRecentScheduledReleaseRecordOutputWithContext(ctx context.Context) RepositoryReleaseConfigRecentScheduledReleaseRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryReleaseConfigRecentScheduledReleaseRecordOutput)
}

// RepositoryReleaseConfigRecentScheduledReleaseRecordArrayInput is an input type that accepts RepositoryReleaseConfigRecentScheduledReleaseRecordArray and RepositoryReleaseConfigRecentScheduledReleaseRecordArrayOutput values.
// You can construct a concrete instance of `RepositoryReleaseConfigRecentScheduledReleaseRecordArrayInput` via:
//
//	RepositoryReleaseConfigRecentScheduledReleaseRecordArray{ RepositoryReleaseConfigRecentScheduledReleaseRecordArgs{...} }
type RepositoryReleaseConfigRecentScheduledReleaseRecordArrayInput interface {
	pulumi.Input

	ToRepositoryReleaseConfigRecentScheduledReleaseRecordArrayOutput() RepositoryReleaseConfigRecentScheduledReleaseRecordArrayOutput
	ToRepositoryReleaseConfigRecentScheduledReleaseRecordArrayOutputWithContext(context.Context) RepositoryReleaseConfigRecentScheduledReleaseRecordArrayOutput
}

type RepositoryReleaseConfigRecentScheduledReleaseRecordArray []RepositoryReleaseConfigRecentScheduledReleaseRecordInput

func (RepositoryReleaseConfigRecentScheduledReleaseRecordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RepositoryReleaseConfigRecentScheduledReleaseRecord)(nil)).Elem()
}

func (i RepositoryReleaseConfigRecentScheduledReleaseRecordArray) ToRepositoryReleaseConfigRecentScheduledReleaseRecordArrayOutput() RepositoryReleaseConfigRecentScheduledReleaseRecordArrayOutput {
	return i.ToRepositoryReleaseConfigRecentScheduledReleaseRecordArrayOutputWithContext(context.Background())
}

func (i RepositoryReleaseConfigRecentScheduledReleaseRecordArray) ToRepositoryReleaseConfigRecentScheduledReleaseRecordArrayOutputWithContext(ctx context.Context) RepositoryReleaseConfigRecentScheduledReleaseRecordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryReleaseConfigRecentScheduledReleaseRecordArrayOutput)
}

type RepositoryReleaseConfigRecentScheduledReleaseRecordOutput struct{ *pulumi.OutputState }

func (RepositoryReleaseConfigRecentScheduledReleaseRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryReleaseConfigRecentScheduledReleaseRecord)(nil)).Elem()
}

func (o RepositoryReleaseConfigRecentScheduledReleaseRecordOutput) ToRepositoryReleaseConfigRecentScheduledReleaseRecordOutput() RepositoryReleaseConfigRecentScheduledReleaseRecordOutput {
	return o
}

func (o RepositoryReleaseConfigRecentScheduledReleaseRecordOutput) ToRepositoryReleaseConfigRecentScheduledReleaseRecordOutputWithContext(ctx context.Context) RepositoryReleaseConfigRecentScheduledReleaseRecordOutput {
	return o
}

// (Output)
// The name of the created compilation result, if one was successfully created. Must be in the format projects/*/locations/*/repositories/*/compilationResults/*.
func (o RepositoryReleaseConfigRecentScheduledReleaseRecordOutput) CompilationResult() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepositoryReleaseConfigRecentScheduledReleaseRecord) *string { return v.CompilationResult }).(pulumi.StringPtrOutput)
}

// (Output)
// The error status encountered upon this attempt to create the compilation result, if the attempt was unsuccessful.
// Structure is documented below.
func (o RepositoryReleaseConfigRecentScheduledReleaseRecordOutput) ErrorStatuses() RepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatusArrayOutput {
	return o.ApplyT(func(v RepositoryReleaseConfigRecentScheduledReleaseRecord) []RepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatus {
		return v.ErrorStatuses
	}).(RepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatusArrayOutput)
}

// (Output)
// The timestamp of this release attempt.
func (o RepositoryReleaseConfigRecentScheduledReleaseRecordOutput) ReleaseTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepositoryReleaseConfigRecentScheduledReleaseRecord) *string { return v.ReleaseTime }).(pulumi.StringPtrOutput)
}

type RepositoryReleaseConfigRecentScheduledReleaseRecordArrayOutput struct{ *pulumi.OutputState }

func (RepositoryReleaseConfigRecentScheduledReleaseRecordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RepositoryReleaseConfigRecentScheduledReleaseRecord)(nil)).Elem()
}

func (o RepositoryReleaseConfigRecentScheduledReleaseRecordArrayOutput) ToRepositoryReleaseConfigRecentScheduledReleaseRecordArrayOutput() RepositoryReleaseConfigRecentScheduledReleaseRecordArrayOutput {
	return o
}

func (o RepositoryReleaseConfigRecentScheduledReleaseRecordArrayOutput) ToRepositoryReleaseConfigRecentScheduledReleaseRecordArrayOutputWithContext(ctx context.Context) RepositoryReleaseConfigRecentScheduledReleaseRecordArrayOutput {
	return o
}

func (o RepositoryReleaseConfigRecentScheduledReleaseRecordArrayOutput) Index(i pulumi.IntInput) RepositoryReleaseConfigRecentScheduledReleaseRecordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RepositoryReleaseConfigRecentScheduledReleaseRecord {
		return vs[0].([]RepositoryReleaseConfigRecentScheduledReleaseRecord)[vs[1].(int)]
	}).(RepositoryReleaseConfigRecentScheduledReleaseRecordOutput)
}

type RepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatus struct {
	// (Output)
	// The status code, which should be an enum value of google.rpc.Code.
	Code *int `pulumi:"code"`
	// (Output)
	// A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
	Message *string `pulumi:"message"`
}

// RepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatusInput is an input type that accepts RepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatusArgs and RepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatusOutput values.
// You can construct a concrete instance of `RepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatusInput` via:
//
//	RepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatusArgs{...}
type RepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatusInput interface {
	pulumi.Input

	ToRepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatusOutput() RepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatusOutput
	ToRepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatusOutputWithContext(context.Context) RepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatusOutput
}

type RepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatusArgs struct {
	// (Output)
	// The status code, which should be an enum value of google.rpc.Code.
	Code pulumi.IntPtrInput `pulumi:"code"`
	// (Output)
	// A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
	Message pulumi.StringPtrInput `pulumi:"message"`
}

func (RepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatus)(nil)).Elem()
}

func (i RepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatusArgs) ToRepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatusOutput() RepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatusOutput {
	return i.ToRepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatusOutputWithContext(context.Background())
}

func (i RepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatusArgs) ToRepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatusOutputWithContext(ctx context.Context) RepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatusOutput)
}

// RepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatusArrayInput is an input type that accepts RepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatusArray and RepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatusArrayOutput values.
// You can construct a concrete instance of `RepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatusArrayInput` via:
//
//	RepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatusArray{ RepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatusArgs{...} }
type RepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatusArrayInput interface {
	pulumi.Input

	ToRepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatusArrayOutput() RepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatusArrayOutput
	ToRepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatusArrayOutputWithContext(context.Context) RepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatusArrayOutput
}

type RepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatusArray []RepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatusInput

func (RepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatus)(nil)).Elem()
}

func (i RepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatusArray) ToRepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatusArrayOutput() RepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatusArrayOutput {
	return i.ToRepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatusArrayOutputWithContext(context.Background())
}

func (i RepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatusArray) ToRepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatusArrayOutputWithContext(ctx context.Context) RepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatusArrayOutput)
}

type RepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatusOutput struct{ *pulumi.OutputState }

func (RepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatus)(nil)).Elem()
}

func (o RepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatusOutput) ToRepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatusOutput() RepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatusOutput {
	return o
}

func (o RepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatusOutput) ToRepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatusOutputWithContext(ctx context.Context) RepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatusOutput {
	return o
}

// (Output)
// The status code, which should be an enum value of google.rpc.Code.
func (o RepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatusOutput) Code() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatus) *int { return v.Code }).(pulumi.IntPtrOutput)
}

// (Output)
// A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
func (o RepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatusOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatus) *string { return v.Message }).(pulumi.StringPtrOutput)
}

type RepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatusArrayOutput struct{ *pulumi.OutputState }

func (RepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatus)(nil)).Elem()
}

func (o RepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatusArrayOutput) ToRepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatusArrayOutput() RepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatusArrayOutput {
	return o
}

func (o RepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatusArrayOutput) ToRepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatusArrayOutputWithContext(ctx context.Context) RepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatusArrayOutput {
	return o
}

func (o RepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatusArrayOutput) Index(i pulumi.IntInput) RepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatus {
		return vs[0].([]RepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatus)[vs[1].(int)]
	}).(RepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatusOutput)
}

type RepositoryWorkflowConfigInvocationConfig struct {
	// Optional. When set to true, any incremental tables will be fully refreshed.
	FullyRefreshIncrementalTablesEnabled *bool `pulumi:"fullyRefreshIncrementalTablesEnabled"`
	// Optional. The set of tags to include.
	IncludedTags []string `pulumi:"includedTags"`
	// Optional. The set of action identifiers to include.
	// Structure is documented below.
	IncludedTargets []RepositoryWorkflowConfigInvocationConfigIncludedTarget `pulumi:"includedTargets"`
	// Optional. The service account to run workflow invocations under.
	ServiceAccount *string `pulumi:"serviceAccount"`
	// Optional. When set to true, transitive dependencies of included actions will be executed.
	TransitiveDependenciesIncluded *bool `pulumi:"transitiveDependenciesIncluded"`
	// Optional. When set to true, transitive dependents of included actions will be executed.
	TransitiveDependentsIncluded *bool `pulumi:"transitiveDependentsIncluded"`
}

// RepositoryWorkflowConfigInvocationConfigInput is an input type that accepts RepositoryWorkflowConfigInvocationConfigArgs and RepositoryWorkflowConfigInvocationConfigOutput values.
// You can construct a concrete instance of `RepositoryWorkflowConfigInvocationConfigInput` via:
//
//	RepositoryWorkflowConfigInvocationConfigArgs{...}
type RepositoryWorkflowConfigInvocationConfigInput interface {
	pulumi.Input

	ToRepositoryWorkflowConfigInvocationConfigOutput() RepositoryWorkflowConfigInvocationConfigOutput
	ToRepositoryWorkflowConfigInvocationConfigOutputWithContext(context.Context) RepositoryWorkflowConfigInvocationConfigOutput
}

type RepositoryWorkflowConfigInvocationConfigArgs struct {
	// Optional. When set to true, any incremental tables will be fully refreshed.
	FullyRefreshIncrementalTablesEnabled pulumi.BoolPtrInput `pulumi:"fullyRefreshIncrementalTablesEnabled"`
	// Optional. The set of tags to include.
	IncludedTags pulumi.StringArrayInput `pulumi:"includedTags"`
	// Optional. The set of action identifiers to include.
	// Structure is documented below.
	IncludedTargets RepositoryWorkflowConfigInvocationConfigIncludedTargetArrayInput `pulumi:"includedTargets"`
	// Optional. The service account to run workflow invocations under.
	ServiceAccount pulumi.StringPtrInput `pulumi:"serviceAccount"`
	// Optional. When set to true, transitive dependencies of included actions will be executed.
	TransitiveDependenciesIncluded pulumi.BoolPtrInput `pulumi:"transitiveDependenciesIncluded"`
	// Optional. When set to true, transitive dependents of included actions will be executed.
	TransitiveDependentsIncluded pulumi.BoolPtrInput `pulumi:"transitiveDependentsIncluded"`
}

func (RepositoryWorkflowConfigInvocationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryWorkflowConfigInvocationConfig)(nil)).Elem()
}

func (i RepositoryWorkflowConfigInvocationConfigArgs) ToRepositoryWorkflowConfigInvocationConfigOutput() RepositoryWorkflowConfigInvocationConfigOutput {
	return i.ToRepositoryWorkflowConfigInvocationConfigOutputWithContext(context.Background())
}

func (i RepositoryWorkflowConfigInvocationConfigArgs) ToRepositoryWorkflowConfigInvocationConfigOutputWithContext(ctx context.Context) RepositoryWorkflowConfigInvocationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryWorkflowConfigInvocationConfigOutput)
}

func (i RepositoryWorkflowConfigInvocationConfigArgs) ToRepositoryWorkflowConfigInvocationConfigPtrOutput() RepositoryWorkflowConfigInvocationConfigPtrOutput {
	return i.ToRepositoryWorkflowConfigInvocationConfigPtrOutputWithContext(context.Background())
}

func (i RepositoryWorkflowConfigInvocationConfigArgs) ToRepositoryWorkflowConfigInvocationConfigPtrOutputWithContext(ctx context.Context) RepositoryWorkflowConfigInvocationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryWorkflowConfigInvocationConfigOutput).ToRepositoryWorkflowConfigInvocationConfigPtrOutputWithContext(ctx)
}

// RepositoryWorkflowConfigInvocationConfigPtrInput is an input type that accepts RepositoryWorkflowConfigInvocationConfigArgs, RepositoryWorkflowConfigInvocationConfigPtr and RepositoryWorkflowConfigInvocationConfigPtrOutput values.
// You can construct a concrete instance of `RepositoryWorkflowConfigInvocationConfigPtrInput` via:
//
//	        RepositoryWorkflowConfigInvocationConfigArgs{...}
//
//	or:
//
//	        nil
type RepositoryWorkflowConfigInvocationConfigPtrInput interface {
	pulumi.Input

	ToRepositoryWorkflowConfigInvocationConfigPtrOutput() RepositoryWorkflowConfigInvocationConfigPtrOutput
	ToRepositoryWorkflowConfigInvocationConfigPtrOutputWithContext(context.Context) RepositoryWorkflowConfigInvocationConfigPtrOutput
}

type repositoryWorkflowConfigInvocationConfigPtrType RepositoryWorkflowConfigInvocationConfigArgs

func RepositoryWorkflowConfigInvocationConfigPtr(v *RepositoryWorkflowConfigInvocationConfigArgs) RepositoryWorkflowConfigInvocationConfigPtrInput {
	return (*repositoryWorkflowConfigInvocationConfigPtrType)(v)
}

func (*repositoryWorkflowConfigInvocationConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RepositoryWorkflowConfigInvocationConfig)(nil)).Elem()
}

func (i *repositoryWorkflowConfigInvocationConfigPtrType) ToRepositoryWorkflowConfigInvocationConfigPtrOutput() RepositoryWorkflowConfigInvocationConfigPtrOutput {
	return i.ToRepositoryWorkflowConfigInvocationConfigPtrOutputWithContext(context.Background())
}

func (i *repositoryWorkflowConfigInvocationConfigPtrType) ToRepositoryWorkflowConfigInvocationConfigPtrOutputWithContext(ctx context.Context) RepositoryWorkflowConfigInvocationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryWorkflowConfigInvocationConfigPtrOutput)
}

type RepositoryWorkflowConfigInvocationConfigOutput struct{ *pulumi.OutputState }

func (RepositoryWorkflowConfigInvocationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryWorkflowConfigInvocationConfig)(nil)).Elem()
}

func (o RepositoryWorkflowConfigInvocationConfigOutput) ToRepositoryWorkflowConfigInvocationConfigOutput() RepositoryWorkflowConfigInvocationConfigOutput {
	return o
}

func (o RepositoryWorkflowConfigInvocationConfigOutput) ToRepositoryWorkflowConfigInvocationConfigOutputWithContext(ctx context.Context) RepositoryWorkflowConfigInvocationConfigOutput {
	return o
}

func (o RepositoryWorkflowConfigInvocationConfigOutput) ToRepositoryWorkflowConfigInvocationConfigPtrOutput() RepositoryWorkflowConfigInvocationConfigPtrOutput {
	return o.ToRepositoryWorkflowConfigInvocationConfigPtrOutputWithContext(context.Background())
}

func (o RepositoryWorkflowConfigInvocationConfigOutput) ToRepositoryWorkflowConfigInvocationConfigPtrOutputWithContext(ctx context.Context) RepositoryWorkflowConfigInvocationConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RepositoryWorkflowConfigInvocationConfig) *RepositoryWorkflowConfigInvocationConfig {
		return &v
	}).(RepositoryWorkflowConfigInvocationConfigPtrOutput)
}

// Optional. When set to true, any incremental tables will be fully refreshed.
func (o RepositoryWorkflowConfigInvocationConfigOutput) FullyRefreshIncrementalTablesEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RepositoryWorkflowConfigInvocationConfig) *bool { return v.FullyRefreshIncrementalTablesEnabled }).(pulumi.BoolPtrOutput)
}

// Optional. The set of tags to include.
func (o RepositoryWorkflowConfigInvocationConfigOutput) IncludedTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RepositoryWorkflowConfigInvocationConfig) []string { return v.IncludedTags }).(pulumi.StringArrayOutput)
}

// Optional. The set of action identifiers to include.
// Structure is documented below.
func (o RepositoryWorkflowConfigInvocationConfigOutput) IncludedTargets() RepositoryWorkflowConfigInvocationConfigIncludedTargetArrayOutput {
	return o.ApplyT(func(v RepositoryWorkflowConfigInvocationConfig) []RepositoryWorkflowConfigInvocationConfigIncludedTarget {
		return v.IncludedTargets
	}).(RepositoryWorkflowConfigInvocationConfigIncludedTargetArrayOutput)
}

// Optional. The service account to run workflow invocations under.
func (o RepositoryWorkflowConfigInvocationConfigOutput) ServiceAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepositoryWorkflowConfigInvocationConfig) *string { return v.ServiceAccount }).(pulumi.StringPtrOutput)
}

// Optional. When set to true, transitive dependencies of included actions will be executed.
func (o RepositoryWorkflowConfigInvocationConfigOutput) TransitiveDependenciesIncluded() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RepositoryWorkflowConfigInvocationConfig) *bool { return v.TransitiveDependenciesIncluded }).(pulumi.BoolPtrOutput)
}

// Optional. When set to true, transitive dependents of included actions will be executed.
func (o RepositoryWorkflowConfigInvocationConfigOutput) TransitiveDependentsIncluded() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RepositoryWorkflowConfigInvocationConfig) *bool { return v.TransitiveDependentsIncluded }).(pulumi.BoolPtrOutput)
}

type RepositoryWorkflowConfigInvocationConfigPtrOutput struct{ *pulumi.OutputState }

func (RepositoryWorkflowConfigInvocationConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RepositoryWorkflowConfigInvocationConfig)(nil)).Elem()
}

func (o RepositoryWorkflowConfigInvocationConfigPtrOutput) ToRepositoryWorkflowConfigInvocationConfigPtrOutput() RepositoryWorkflowConfigInvocationConfigPtrOutput {
	return o
}

func (o RepositoryWorkflowConfigInvocationConfigPtrOutput) ToRepositoryWorkflowConfigInvocationConfigPtrOutputWithContext(ctx context.Context) RepositoryWorkflowConfigInvocationConfigPtrOutput {
	return o
}

func (o RepositoryWorkflowConfigInvocationConfigPtrOutput) Elem() RepositoryWorkflowConfigInvocationConfigOutput {
	return o.ApplyT(func(v *RepositoryWorkflowConfigInvocationConfig) RepositoryWorkflowConfigInvocationConfig {
		if v != nil {
			return *v
		}
		var ret RepositoryWorkflowConfigInvocationConfig
		return ret
	}).(RepositoryWorkflowConfigInvocationConfigOutput)
}

// Optional. When set to true, any incremental tables will be fully refreshed.
func (o RepositoryWorkflowConfigInvocationConfigPtrOutput) FullyRefreshIncrementalTablesEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RepositoryWorkflowConfigInvocationConfig) *bool {
		if v == nil {
			return nil
		}
		return v.FullyRefreshIncrementalTablesEnabled
	}).(pulumi.BoolPtrOutput)
}

// Optional. The set of tags to include.
func (o RepositoryWorkflowConfigInvocationConfigPtrOutput) IncludedTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RepositoryWorkflowConfigInvocationConfig) []string {
		if v == nil {
			return nil
		}
		return v.IncludedTags
	}).(pulumi.StringArrayOutput)
}

// Optional. The set of action identifiers to include.
// Structure is documented below.
func (o RepositoryWorkflowConfigInvocationConfigPtrOutput) IncludedTargets() RepositoryWorkflowConfigInvocationConfigIncludedTargetArrayOutput {
	return o.ApplyT(func(v *RepositoryWorkflowConfigInvocationConfig) []RepositoryWorkflowConfigInvocationConfigIncludedTarget {
		if v == nil {
			return nil
		}
		return v.IncludedTargets
	}).(RepositoryWorkflowConfigInvocationConfigIncludedTargetArrayOutput)
}

// Optional. The service account to run workflow invocations under.
func (o RepositoryWorkflowConfigInvocationConfigPtrOutput) ServiceAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepositoryWorkflowConfigInvocationConfig) *string {
		if v == nil {
			return nil
		}
		return v.ServiceAccount
	}).(pulumi.StringPtrOutput)
}

// Optional. When set to true, transitive dependencies of included actions will be executed.
func (o RepositoryWorkflowConfigInvocationConfigPtrOutput) TransitiveDependenciesIncluded() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RepositoryWorkflowConfigInvocationConfig) *bool {
		if v == nil {
			return nil
		}
		return v.TransitiveDependenciesIncluded
	}).(pulumi.BoolPtrOutput)
}

// Optional. When set to true, transitive dependents of included actions will be executed.
func (o RepositoryWorkflowConfigInvocationConfigPtrOutput) TransitiveDependentsIncluded() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RepositoryWorkflowConfigInvocationConfig) *bool {
		if v == nil {
			return nil
		}
		return v.TransitiveDependentsIncluded
	}).(pulumi.BoolPtrOutput)
}

type RepositoryWorkflowConfigInvocationConfigIncludedTarget struct {
	// The action's database (Google Cloud project ID).
	Database *string `pulumi:"database"`
	// The action's name, within database and schema.
	Name *string `pulumi:"name"`
	// The action's schema (BigQuery dataset ID), within database.
	Schema *string `pulumi:"schema"`
}

// RepositoryWorkflowConfigInvocationConfigIncludedTargetInput is an input type that accepts RepositoryWorkflowConfigInvocationConfigIncludedTargetArgs and RepositoryWorkflowConfigInvocationConfigIncludedTargetOutput values.
// You can construct a concrete instance of `RepositoryWorkflowConfigInvocationConfigIncludedTargetInput` via:
//
//	RepositoryWorkflowConfigInvocationConfigIncludedTargetArgs{...}
type RepositoryWorkflowConfigInvocationConfigIncludedTargetInput interface {
	pulumi.Input

	ToRepositoryWorkflowConfigInvocationConfigIncludedTargetOutput() RepositoryWorkflowConfigInvocationConfigIncludedTargetOutput
	ToRepositoryWorkflowConfigInvocationConfigIncludedTargetOutputWithContext(context.Context) RepositoryWorkflowConfigInvocationConfigIncludedTargetOutput
}

type RepositoryWorkflowConfigInvocationConfigIncludedTargetArgs struct {
	// The action's database (Google Cloud project ID).
	Database pulumi.StringPtrInput `pulumi:"database"`
	// The action's name, within database and schema.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The action's schema (BigQuery dataset ID), within database.
	Schema pulumi.StringPtrInput `pulumi:"schema"`
}

func (RepositoryWorkflowConfigInvocationConfigIncludedTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryWorkflowConfigInvocationConfigIncludedTarget)(nil)).Elem()
}

func (i RepositoryWorkflowConfigInvocationConfigIncludedTargetArgs) ToRepositoryWorkflowConfigInvocationConfigIncludedTargetOutput() RepositoryWorkflowConfigInvocationConfigIncludedTargetOutput {
	return i.ToRepositoryWorkflowConfigInvocationConfigIncludedTargetOutputWithContext(context.Background())
}

func (i RepositoryWorkflowConfigInvocationConfigIncludedTargetArgs) ToRepositoryWorkflowConfigInvocationConfigIncludedTargetOutputWithContext(ctx context.Context) RepositoryWorkflowConfigInvocationConfigIncludedTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryWorkflowConfigInvocationConfigIncludedTargetOutput)
}

// RepositoryWorkflowConfigInvocationConfigIncludedTargetArrayInput is an input type that accepts RepositoryWorkflowConfigInvocationConfigIncludedTargetArray and RepositoryWorkflowConfigInvocationConfigIncludedTargetArrayOutput values.
// You can construct a concrete instance of `RepositoryWorkflowConfigInvocationConfigIncludedTargetArrayInput` via:
//
//	RepositoryWorkflowConfigInvocationConfigIncludedTargetArray{ RepositoryWorkflowConfigInvocationConfigIncludedTargetArgs{...} }
type RepositoryWorkflowConfigInvocationConfigIncludedTargetArrayInput interface {
	pulumi.Input

	ToRepositoryWorkflowConfigInvocationConfigIncludedTargetArrayOutput() RepositoryWorkflowConfigInvocationConfigIncludedTargetArrayOutput
	ToRepositoryWorkflowConfigInvocationConfigIncludedTargetArrayOutputWithContext(context.Context) RepositoryWorkflowConfigInvocationConfigIncludedTargetArrayOutput
}

type RepositoryWorkflowConfigInvocationConfigIncludedTargetArray []RepositoryWorkflowConfigInvocationConfigIncludedTargetInput

func (RepositoryWorkflowConfigInvocationConfigIncludedTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RepositoryWorkflowConfigInvocationConfigIncludedTarget)(nil)).Elem()
}

func (i RepositoryWorkflowConfigInvocationConfigIncludedTargetArray) ToRepositoryWorkflowConfigInvocationConfigIncludedTargetArrayOutput() RepositoryWorkflowConfigInvocationConfigIncludedTargetArrayOutput {
	return i.ToRepositoryWorkflowConfigInvocationConfigIncludedTargetArrayOutputWithContext(context.Background())
}

func (i RepositoryWorkflowConfigInvocationConfigIncludedTargetArray) ToRepositoryWorkflowConfigInvocationConfigIncludedTargetArrayOutputWithContext(ctx context.Context) RepositoryWorkflowConfigInvocationConfigIncludedTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryWorkflowConfigInvocationConfigIncludedTargetArrayOutput)
}

type RepositoryWorkflowConfigInvocationConfigIncludedTargetOutput struct{ *pulumi.OutputState }

func (RepositoryWorkflowConfigInvocationConfigIncludedTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryWorkflowConfigInvocationConfigIncludedTarget)(nil)).Elem()
}

func (o RepositoryWorkflowConfigInvocationConfigIncludedTargetOutput) ToRepositoryWorkflowConfigInvocationConfigIncludedTargetOutput() RepositoryWorkflowConfigInvocationConfigIncludedTargetOutput {
	return o
}

func (o RepositoryWorkflowConfigInvocationConfigIncludedTargetOutput) ToRepositoryWorkflowConfigInvocationConfigIncludedTargetOutputWithContext(ctx context.Context) RepositoryWorkflowConfigInvocationConfigIncludedTargetOutput {
	return o
}

// The action's database (Google Cloud project ID).
func (o RepositoryWorkflowConfigInvocationConfigIncludedTargetOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepositoryWorkflowConfigInvocationConfigIncludedTarget) *string { return v.Database }).(pulumi.StringPtrOutput)
}

// The action's name, within database and schema.
func (o RepositoryWorkflowConfigInvocationConfigIncludedTargetOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepositoryWorkflowConfigInvocationConfigIncludedTarget) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The action's schema (BigQuery dataset ID), within database.
func (o RepositoryWorkflowConfigInvocationConfigIncludedTargetOutput) Schema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepositoryWorkflowConfigInvocationConfigIncludedTarget) *string { return v.Schema }).(pulumi.StringPtrOutput)
}

type RepositoryWorkflowConfigInvocationConfigIncludedTargetArrayOutput struct{ *pulumi.OutputState }

func (RepositoryWorkflowConfigInvocationConfigIncludedTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RepositoryWorkflowConfigInvocationConfigIncludedTarget)(nil)).Elem()
}

func (o RepositoryWorkflowConfigInvocationConfigIncludedTargetArrayOutput) ToRepositoryWorkflowConfigInvocationConfigIncludedTargetArrayOutput() RepositoryWorkflowConfigInvocationConfigIncludedTargetArrayOutput {
	return o
}

func (o RepositoryWorkflowConfigInvocationConfigIncludedTargetArrayOutput) ToRepositoryWorkflowConfigInvocationConfigIncludedTargetArrayOutputWithContext(ctx context.Context) RepositoryWorkflowConfigInvocationConfigIncludedTargetArrayOutput {
	return o
}

func (o RepositoryWorkflowConfigInvocationConfigIncludedTargetArrayOutput) Index(i pulumi.IntInput) RepositoryWorkflowConfigInvocationConfigIncludedTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RepositoryWorkflowConfigInvocationConfigIncludedTarget {
		return vs[0].([]RepositoryWorkflowConfigInvocationConfigIncludedTarget)[vs[1].(int)]
	}).(RepositoryWorkflowConfigInvocationConfigIncludedTargetOutput)
}

type RepositoryWorkflowConfigRecentScheduledExecutionRecord struct {
	// (Output)
	// The error status encountered upon this attempt to create the workflow invocation, if the attempt was unsuccessful.
	// Structure is documented below.
	ErrorStatuses []RepositoryWorkflowConfigRecentScheduledExecutionRecordErrorStatus `pulumi:"errorStatuses"`
	// (Output)
	// The timestamp of this workflow attempt.
	ExecutionTime *string `pulumi:"executionTime"`
	// (Output)
	// The name of the created workflow invocation, if one was successfully created. In the format projects/*/locations/*/repositories/*/workflowInvocations/*.
	WorkflowInvocation *string `pulumi:"workflowInvocation"`
}

// RepositoryWorkflowConfigRecentScheduledExecutionRecordInput is an input type that accepts RepositoryWorkflowConfigRecentScheduledExecutionRecordArgs and RepositoryWorkflowConfigRecentScheduledExecutionRecordOutput values.
// You can construct a concrete instance of `RepositoryWorkflowConfigRecentScheduledExecutionRecordInput` via:
//
//	RepositoryWorkflowConfigRecentScheduledExecutionRecordArgs{...}
type RepositoryWorkflowConfigRecentScheduledExecutionRecordInput interface {
	pulumi.Input

	ToRepositoryWorkflowConfigRecentScheduledExecutionRecordOutput() RepositoryWorkflowConfigRecentScheduledExecutionRecordOutput
	ToRepositoryWorkflowConfigRecentScheduledExecutionRecordOutputWithContext(context.Context) RepositoryWorkflowConfigRecentScheduledExecutionRecordOutput
}

type RepositoryWorkflowConfigRecentScheduledExecutionRecordArgs struct {
	// (Output)
	// The error status encountered upon this attempt to create the workflow invocation, if the attempt was unsuccessful.
	// Structure is documented below.
	ErrorStatuses RepositoryWorkflowConfigRecentScheduledExecutionRecordErrorStatusArrayInput `pulumi:"errorStatuses"`
	// (Output)
	// The timestamp of this workflow attempt.
	ExecutionTime pulumi.StringPtrInput `pulumi:"executionTime"`
	// (Output)
	// The name of the created workflow invocation, if one was successfully created. In the format projects/*/locations/*/repositories/*/workflowInvocations/*.
	WorkflowInvocation pulumi.StringPtrInput `pulumi:"workflowInvocation"`
}

func (RepositoryWorkflowConfigRecentScheduledExecutionRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryWorkflowConfigRecentScheduledExecutionRecord)(nil)).Elem()
}

func (i RepositoryWorkflowConfigRecentScheduledExecutionRecordArgs) ToRepositoryWorkflowConfigRecentScheduledExecutionRecordOutput() RepositoryWorkflowConfigRecentScheduledExecutionRecordOutput {
	return i.ToRepositoryWorkflowConfigRecentScheduledExecutionRecordOutputWithContext(context.Background())
}

func (i RepositoryWorkflowConfigRecentScheduledExecutionRecordArgs) ToRepositoryWorkflowConfigRecentScheduledExecutionRecordOutputWithContext(ctx context.Context) RepositoryWorkflowConfigRecentScheduledExecutionRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryWorkflowConfigRecentScheduledExecutionRecordOutput)
}

// RepositoryWorkflowConfigRecentScheduledExecutionRecordArrayInput is an input type that accepts RepositoryWorkflowConfigRecentScheduledExecutionRecordArray and RepositoryWorkflowConfigRecentScheduledExecutionRecordArrayOutput values.
// You can construct a concrete instance of `RepositoryWorkflowConfigRecentScheduledExecutionRecordArrayInput` via:
//
//	RepositoryWorkflowConfigRecentScheduledExecutionRecordArray{ RepositoryWorkflowConfigRecentScheduledExecutionRecordArgs{...} }
type RepositoryWorkflowConfigRecentScheduledExecutionRecordArrayInput interface {
	pulumi.Input

	ToRepositoryWorkflowConfigRecentScheduledExecutionRecordArrayOutput() RepositoryWorkflowConfigRecentScheduledExecutionRecordArrayOutput
	ToRepositoryWorkflowConfigRecentScheduledExecutionRecordArrayOutputWithContext(context.Context) RepositoryWorkflowConfigRecentScheduledExecutionRecordArrayOutput
}

type RepositoryWorkflowConfigRecentScheduledExecutionRecordArray []RepositoryWorkflowConfigRecentScheduledExecutionRecordInput

func (RepositoryWorkflowConfigRecentScheduledExecutionRecordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RepositoryWorkflowConfigRecentScheduledExecutionRecord)(nil)).Elem()
}

func (i RepositoryWorkflowConfigRecentScheduledExecutionRecordArray) ToRepositoryWorkflowConfigRecentScheduledExecutionRecordArrayOutput() RepositoryWorkflowConfigRecentScheduledExecutionRecordArrayOutput {
	return i.ToRepositoryWorkflowConfigRecentScheduledExecutionRecordArrayOutputWithContext(context.Background())
}

func (i RepositoryWorkflowConfigRecentScheduledExecutionRecordArray) ToRepositoryWorkflowConfigRecentScheduledExecutionRecordArrayOutputWithContext(ctx context.Context) RepositoryWorkflowConfigRecentScheduledExecutionRecordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryWorkflowConfigRecentScheduledExecutionRecordArrayOutput)
}

type RepositoryWorkflowConfigRecentScheduledExecutionRecordOutput struct{ *pulumi.OutputState }

func (RepositoryWorkflowConfigRecentScheduledExecutionRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryWorkflowConfigRecentScheduledExecutionRecord)(nil)).Elem()
}

func (o RepositoryWorkflowConfigRecentScheduledExecutionRecordOutput) ToRepositoryWorkflowConfigRecentScheduledExecutionRecordOutput() RepositoryWorkflowConfigRecentScheduledExecutionRecordOutput {
	return o
}

func (o RepositoryWorkflowConfigRecentScheduledExecutionRecordOutput) ToRepositoryWorkflowConfigRecentScheduledExecutionRecordOutputWithContext(ctx context.Context) RepositoryWorkflowConfigRecentScheduledExecutionRecordOutput {
	return o
}

// (Output)
// The error status encountered upon this attempt to create the workflow invocation, if the attempt was unsuccessful.
// Structure is documented below.
func (o RepositoryWorkflowConfigRecentScheduledExecutionRecordOutput) ErrorStatuses() RepositoryWorkflowConfigRecentScheduledExecutionRecordErrorStatusArrayOutput {
	return o.ApplyT(func(v RepositoryWorkflowConfigRecentScheduledExecutionRecord) []RepositoryWorkflowConfigRecentScheduledExecutionRecordErrorStatus {
		return v.ErrorStatuses
	}).(RepositoryWorkflowConfigRecentScheduledExecutionRecordErrorStatusArrayOutput)
}

// (Output)
// The timestamp of this workflow attempt.
func (o RepositoryWorkflowConfigRecentScheduledExecutionRecordOutput) ExecutionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepositoryWorkflowConfigRecentScheduledExecutionRecord) *string { return v.ExecutionTime }).(pulumi.StringPtrOutput)
}

// (Output)
// The name of the created workflow invocation, if one was successfully created. In the format projects/*/locations/*/repositories/*/workflowInvocations/*.
func (o RepositoryWorkflowConfigRecentScheduledExecutionRecordOutput) WorkflowInvocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepositoryWorkflowConfigRecentScheduledExecutionRecord) *string { return v.WorkflowInvocation }).(pulumi.StringPtrOutput)
}

type RepositoryWorkflowConfigRecentScheduledExecutionRecordArrayOutput struct{ *pulumi.OutputState }

func (RepositoryWorkflowConfigRecentScheduledExecutionRecordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RepositoryWorkflowConfigRecentScheduledExecutionRecord)(nil)).Elem()
}

func (o RepositoryWorkflowConfigRecentScheduledExecutionRecordArrayOutput) ToRepositoryWorkflowConfigRecentScheduledExecutionRecordArrayOutput() RepositoryWorkflowConfigRecentScheduledExecutionRecordArrayOutput {
	return o
}

func (o RepositoryWorkflowConfigRecentScheduledExecutionRecordArrayOutput) ToRepositoryWorkflowConfigRecentScheduledExecutionRecordArrayOutputWithContext(ctx context.Context) RepositoryWorkflowConfigRecentScheduledExecutionRecordArrayOutput {
	return o
}

func (o RepositoryWorkflowConfigRecentScheduledExecutionRecordArrayOutput) Index(i pulumi.IntInput) RepositoryWorkflowConfigRecentScheduledExecutionRecordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RepositoryWorkflowConfigRecentScheduledExecutionRecord {
		return vs[0].([]RepositoryWorkflowConfigRecentScheduledExecutionRecord)[vs[1].(int)]
	}).(RepositoryWorkflowConfigRecentScheduledExecutionRecordOutput)
}

type RepositoryWorkflowConfigRecentScheduledExecutionRecordErrorStatus struct {
	// (Output)
	// The status code, which should be an enum value of google.rpc.Code.
	Code *int `pulumi:"code"`
	// (Output)
	// A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
	Message *string `pulumi:"message"`
}

// RepositoryWorkflowConfigRecentScheduledExecutionRecordErrorStatusInput is an input type that accepts RepositoryWorkflowConfigRecentScheduledExecutionRecordErrorStatusArgs and RepositoryWorkflowConfigRecentScheduledExecutionRecordErrorStatusOutput values.
// You can construct a concrete instance of `RepositoryWorkflowConfigRecentScheduledExecutionRecordErrorStatusInput` via:
//
//	RepositoryWorkflowConfigRecentScheduledExecutionRecordErrorStatusArgs{...}
type RepositoryWorkflowConfigRecentScheduledExecutionRecordErrorStatusInput interface {
	pulumi.Input

	ToRepositoryWorkflowConfigRecentScheduledExecutionRecordErrorStatusOutput() RepositoryWorkflowConfigRecentScheduledExecutionRecordErrorStatusOutput
	ToRepositoryWorkflowConfigRecentScheduledExecutionRecordErrorStatusOutputWithContext(context.Context) RepositoryWorkflowConfigRecentScheduledExecutionRecordErrorStatusOutput
}

type RepositoryWorkflowConfigRecentScheduledExecutionRecordErrorStatusArgs struct {
	// (Output)
	// The status code, which should be an enum value of google.rpc.Code.
	Code pulumi.IntPtrInput `pulumi:"code"`
	// (Output)
	// A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
	Message pulumi.StringPtrInput `pulumi:"message"`
}

func (RepositoryWorkflowConfigRecentScheduledExecutionRecordErrorStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryWorkflowConfigRecentScheduledExecutionRecordErrorStatus)(nil)).Elem()
}

func (i RepositoryWorkflowConfigRecentScheduledExecutionRecordErrorStatusArgs) ToRepositoryWorkflowConfigRecentScheduledExecutionRecordErrorStatusOutput() RepositoryWorkflowConfigRecentScheduledExecutionRecordErrorStatusOutput {
	return i.ToRepositoryWorkflowConfigRecentScheduledExecutionRecordErrorStatusOutputWithContext(context.Background())
}

func (i RepositoryWorkflowConfigRecentScheduledExecutionRecordErrorStatusArgs) ToRepositoryWorkflowConfigRecentScheduledExecutionRecordErrorStatusOutputWithContext(ctx context.Context) RepositoryWorkflowConfigRecentScheduledExecutionRecordErrorStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryWorkflowConfigRecentScheduledExecutionRecordErrorStatusOutput)
}

// RepositoryWorkflowConfigRecentScheduledExecutionRecordErrorStatusArrayInput is an input type that accepts RepositoryWorkflowConfigRecentScheduledExecutionRecordErrorStatusArray and RepositoryWorkflowConfigRecentScheduledExecutionRecordErrorStatusArrayOutput values.
// You can construct a concrete instance of `RepositoryWorkflowConfigRecentScheduledExecutionRecordErrorStatusArrayInput` via:
//
//	RepositoryWorkflowConfigRecentScheduledExecutionRecordErrorStatusArray{ RepositoryWorkflowConfigRecentScheduledExecutionRecordErrorStatusArgs{...} }
type RepositoryWorkflowConfigRecentScheduledExecutionRecordErrorStatusArrayInput interface {
	pulumi.Input

	ToRepositoryWorkflowConfigRecentScheduledExecutionRecordErrorStatusArrayOutput() RepositoryWorkflowConfigRecentScheduledExecutionRecordErrorStatusArrayOutput
	ToRepositoryWorkflowConfigRecentScheduledExecutionRecordErrorStatusArrayOutputWithContext(context.Context) RepositoryWorkflowConfigRecentScheduledExecutionRecordErrorStatusArrayOutput
}

type RepositoryWorkflowConfigRecentScheduledExecutionRecordErrorStatusArray []RepositoryWorkflowConfigRecentScheduledExecutionRecordErrorStatusInput

func (RepositoryWorkflowConfigRecentScheduledExecutionRecordErrorStatusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RepositoryWorkflowConfigRecentScheduledExecutionRecordErrorStatus)(nil)).Elem()
}

func (i RepositoryWorkflowConfigRecentScheduledExecutionRecordErrorStatusArray) ToRepositoryWorkflowConfigRecentScheduledExecutionRecordErrorStatusArrayOutput() RepositoryWorkflowConfigRecentScheduledExecutionRecordErrorStatusArrayOutput {
	return i.ToRepositoryWorkflowConfigRecentScheduledExecutionRecordErrorStatusArrayOutputWithContext(context.Background())
}

func (i RepositoryWorkflowConfigRecentScheduledExecutionRecordErrorStatusArray) ToRepositoryWorkflowConfigRecentScheduledExecutionRecordErrorStatusArrayOutputWithContext(ctx context.Context) RepositoryWorkflowConfigRecentScheduledExecutionRecordErrorStatusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryWorkflowConfigRecentScheduledExecutionRecordErrorStatusArrayOutput)
}

type RepositoryWorkflowConfigRecentScheduledExecutionRecordErrorStatusOutput struct{ *pulumi.OutputState }

func (RepositoryWorkflowConfigRecentScheduledExecutionRecordErrorStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryWorkflowConfigRecentScheduledExecutionRecordErrorStatus)(nil)).Elem()
}

func (o RepositoryWorkflowConfigRecentScheduledExecutionRecordErrorStatusOutput) ToRepositoryWorkflowConfigRecentScheduledExecutionRecordErrorStatusOutput() RepositoryWorkflowConfigRecentScheduledExecutionRecordErrorStatusOutput {
	return o
}

func (o RepositoryWorkflowConfigRecentScheduledExecutionRecordErrorStatusOutput) ToRepositoryWorkflowConfigRecentScheduledExecutionRecordErrorStatusOutputWithContext(ctx context.Context) RepositoryWorkflowConfigRecentScheduledExecutionRecordErrorStatusOutput {
	return o
}

// (Output)
// The status code, which should be an enum value of google.rpc.Code.
func (o RepositoryWorkflowConfigRecentScheduledExecutionRecordErrorStatusOutput) Code() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RepositoryWorkflowConfigRecentScheduledExecutionRecordErrorStatus) *int { return v.Code }).(pulumi.IntPtrOutput)
}

// (Output)
// A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
func (o RepositoryWorkflowConfigRecentScheduledExecutionRecordErrorStatusOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepositoryWorkflowConfigRecentScheduledExecutionRecordErrorStatus) *string { return v.Message }).(pulumi.StringPtrOutput)
}

type RepositoryWorkflowConfigRecentScheduledExecutionRecordErrorStatusArrayOutput struct{ *pulumi.OutputState }

func (RepositoryWorkflowConfigRecentScheduledExecutionRecordErrorStatusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RepositoryWorkflowConfigRecentScheduledExecutionRecordErrorStatus)(nil)).Elem()
}

func (o RepositoryWorkflowConfigRecentScheduledExecutionRecordErrorStatusArrayOutput) ToRepositoryWorkflowConfigRecentScheduledExecutionRecordErrorStatusArrayOutput() RepositoryWorkflowConfigRecentScheduledExecutionRecordErrorStatusArrayOutput {
	return o
}

func (o RepositoryWorkflowConfigRecentScheduledExecutionRecordErrorStatusArrayOutput) ToRepositoryWorkflowConfigRecentScheduledExecutionRecordErrorStatusArrayOutputWithContext(ctx context.Context) RepositoryWorkflowConfigRecentScheduledExecutionRecordErrorStatusArrayOutput {
	return o
}

func (o RepositoryWorkflowConfigRecentScheduledExecutionRecordErrorStatusArrayOutput) Index(i pulumi.IntInput) RepositoryWorkflowConfigRecentScheduledExecutionRecordErrorStatusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RepositoryWorkflowConfigRecentScheduledExecutionRecordErrorStatus {
		return vs[0].([]RepositoryWorkflowConfigRecentScheduledExecutionRecordErrorStatus)[vs[1].(int)]
	}).(RepositoryWorkflowConfigRecentScheduledExecutionRecordErrorStatusOutput)
}

type RepositoryWorkspaceCompilationOverrides struct {
	// Optional. The default database (Google Cloud project ID).
	DefaultDatabase *string `pulumi:"defaultDatabase"`
	// Optional. The suffix that should be appended to all schema (BigQuery dataset ID) names.
	SchemaSuffix *string `pulumi:"schemaSuffix"`
	// Optional. The prefix that should be prepended to all table names.
	TablePrefix *string `pulumi:"tablePrefix"`
}

// RepositoryWorkspaceCompilationOverridesInput is an input type that accepts RepositoryWorkspaceCompilationOverridesArgs and RepositoryWorkspaceCompilationOverridesOutput values.
// You can construct a concrete instance of `RepositoryWorkspaceCompilationOverridesInput` via:
//
//	RepositoryWorkspaceCompilationOverridesArgs{...}
type RepositoryWorkspaceCompilationOverridesInput interface {
	pulumi.Input

	ToRepositoryWorkspaceCompilationOverridesOutput() RepositoryWorkspaceCompilationOverridesOutput
	ToRepositoryWorkspaceCompilationOverridesOutputWithContext(context.Context) RepositoryWorkspaceCompilationOverridesOutput
}

type RepositoryWorkspaceCompilationOverridesArgs struct {
	// Optional. The default database (Google Cloud project ID).
	DefaultDatabase pulumi.StringPtrInput `pulumi:"defaultDatabase"`
	// Optional. The suffix that should be appended to all schema (BigQuery dataset ID) names.
	SchemaSuffix pulumi.StringPtrInput `pulumi:"schemaSuffix"`
	// Optional. The prefix that should be prepended to all table names.
	TablePrefix pulumi.StringPtrInput `pulumi:"tablePrefix"`
}

func (RepositoryWorkspaceCompilationOverridesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryWorkspaceCompilationOverrides)(nil)).Elem()
}

func (i RepositoryWorkspaceCompilationOverridesArgs) ToRepositoryWorkspaceCompilationOverridesOutput() RepositoryWorkspaceCompilationOverridesOutput {
	return i.ToRepositoryWorkspaceCompilationOverridesOutputWithContext(context.Background())
}

func (i RepositoryWorkspaceCompilationOverridesArgs) ToRepositoryWorkspaceCompilationOverridesOutputWithContext(ctx context.Context) RepositoryWorkspaceCompilationOverridesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryWorkspaceCompilationOverridesOutput)
}

func (i RepositoryWorkspaceCompilationOverridesArgs) ToRepositoryWorkspaceCompilationOverridesPtrOutput() RepositoryWorkspaceCompilationOverridesPtrOutput {
	return i.ToRepositoryWorkspaceCompilationOverridesPtrOutputWithContext(context.Background())
}

func (i RepositoryWorkspaceCompilationOverridesArgs) ToRepositoryWorkspaceCompilationOverridesPtrOutputWithContext(ctx context.Context) RepositoryWorkspaceCompilationOverridesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryWorkspaceCompilationOverridesOutput).ToRepositoryWorkspaceCompilationOverridesPtrOutputWithContext(ctx)
}

// RepositoryWorkspaceCompilationOverridesPtrInput is an input type that accepts RepositoryWorkspaceCompilationOverridesArgs, RepositoryWorkspaceCompilationOverridesPtr and RepositoryWorkspaceCompilationOverridesPtrOutput values.
// You can construct a concrete instance of `RepositoryWorkspaceCompilationOverridesPtrInput` via:
//
//	        RepositoryWorkspaceCompilationOverridesArgs{...}
//
//	or:
//
//	        nil
type RepositoryWorkspaceCompilationOverridesPtrInput interface {
	pulumi.Input

	ToRepositoryWorkspaceCompilationOverridesPtrOutput() RepositoryWorkspaceCompilationOverridesPtrOutput
	ToRepositoryWorkspaceCompilationOverridesPtrOutputWithContext(context.Context) RepositoryWorkspaceCompilationOverridesPtrOutput
}

type repositoryWorkspaceCompilationOverridesPtrType RepositoryWorkspaceCompilationOverridesArgs

func RepositoryWorkspaceCompilationOverridesPtr(v *RepositoryWorkspaceCompilationOverridesArgs) RepositoryWorkspaceCompilationOverridesPtrInput {
	return (*repositoryWorkspaceCompilationOverridesPtrType)(v)
}

func (*repositoryWorkspaceCompilationOverridesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RepositoryWorkspaceCompilationOverrides)(nil)).Elem()
}

func (i *repositoryWorkspaceCompilationOverridesPtrType) ToRepositoryWorkspaceCompilationOverridesPtrOutput() RepositoryWorkspaceCompilationOverridesPtrOutput {
	return i.ToRepositoryWorkspaceCompilationOverridesPtrOutputWithContext(context.Background())
}

func (i *repositoryWorkspaceCompilationOverridesPtrType) ToRepositoryWorkspaceCompilationOverridesPtrOutputWithContext(ctx context.Context) RepositoryWorkspaceCompilationOverridesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryWorkspaceCompilationOverridesPtrOutput)
}

type RepositoryWorkspaceCompilationOverridesOutput struct{ *pulumi.OutputState }

func (RepositoryWorkspaceCompilationOverridesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryWorkspaceCompilationOverrides)(nil)).Elem()
}

func (o RepositoryWorkspaceCompilationOverridesOutput) ToRepositoryWorkspaceCompilationOverridesOutput() RepositoryWorkspaceCompilationOverridesOutput {
	return o
}

func (o RepositoryWorkspaceCompilationOverridesOutput) ToRepositoryWorkspaceCompilationOverridesOutputWithContext(ctx context.Context) RepositoryWorkspaceCompilationOverridesOutput {
	return o
}

func (o RepositoryWorkspaceCompilationOverridesOutput) ToRepositoryWorkspaceCompilationOverridesPtrOutput() RepositoryWorkspaceCompilationOverridesPtrOutput {
	return o.ToRepositoryWorkspaceCompilationOverridesPtrOutputWithContext(context.Background())
}

func (o RepositoryWorkspaceCompilationOverridesOutput) ToRepositoryWorkspaceCompilationOverridesPtrOutputWithContext(ctx context.Context) RepositoryWorkspaceCompilationOverridesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RepositoryWorkspaceCompilationOverrides) *RepositoryWorkspaceCompilationOverrides {
		return &v
	}).(RepositoryWorkspaceCompilationOverridesPtrOutput)
}

// Optional. The default database (Google Cloud project ID).
func (o RepositoryWorkspaceCompilationOverridesOutput) DefaultDatabase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepositoryWorkspaceCompilationOverrides) *string { return v.DefaultDatabase }).(pulumi.StringPtrOutput)
}

// Optional. The suffix that should be appended to all schema (BigQuery dataset ID) names.
func (o RepositoryWorkspaceCompilationOverridesOutput) SchemaSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepositoryWorkspaceCompilationOverrides) *string { return v.SchemaSuffix }).(pulumi.StringPtrOutput)
}

// Optional. The prefix that should be prepended to all table names.
func (o RepositoryWorkspaceCompilationOverridesOutput) TablePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepositoryWorkspaceCompilationOverrides) *string { return v.TablePrefix }).(pulumi.StringPtrOutput)
}

type RepositoryWorkspaceCompilationOverridesPtrOutput struct{ *pulumi.OutputState }

func (RepositoryWorkspaceCompilationOverridesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RepositoryWorkspaceCompilationOverrides)(nil)).Elem()
}

func (o RepositoryWorkspaceCompilationOverridesPtrOutput) ToRepositoryWorkspaceCompilationOverridesPtrOutput() RepositoryWorkspaceCompilationOverridesPtrOutput {
	return o
}

func (o RepositoryWorkspaceCompilationOverridesPtrOutput) ToRepositoryWorkspaceCompilationOverridesPtrOutputWithContext(ctx context.Context) RepositoryWorkspaceCompilationOverridesPtrOutput {
	return o
}

func (o RepositoryWorkspaceCompilationOverridesPtrOutput) Elem() RepositoryWorkspaceCompilationOverridesOutput {
	return o.ApplyT(func(v *RepositoryWorkspaceCompilationOverrides) RepositoryWorkspaceCompilationOverrides {
		if v != nil {
			return *v
		}
		var ret RepositoryWorkspaceCompilationOverrides
		return ret
	}).(RepositoryWorkspaceCompilationOverridesOutput)
}

// Optional. The default database (Google Cloud project ID).
func (o RepositoryWorkspaceCompilationOverridesPtrOutput) DefaultDatabase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepositoryWorkspaceCompilationOverrides) *string {
		if v == nil {
			return nil
		}
		return v.DefaultDatabase
	}).(pulumi.StringPtrOutput)
}

// Optional. The suffix that should be appended to all schema (BigQuery dataset ID) names.
func (o RepositoryWorkspaceCompilationOverridesPtrOutput) SchemaSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepositoryWorkspaceCompilationOverrides) *string {
		if v == nil {
			return nil
		}
		return v.SchemaSuffix
	}).(pulumi.StringPtrOutput)
}

// Optional. The prefix that should be prepended to all table names.
func (o RepositoryWorkspaceCompilationOverridesPtrOutput) TablePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepositoryWorkspaceCompilationOverrides) *string {
		if v == nil {
			return nil
		}
		return v.TablePrefix
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RepositoryGitRemoteSettingsInput)(nil)).Elem(), RepositoryGitRemoteSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RepositoryGitRemoteSettingsPtrInput)(nil)).Elem(), RepositoryGitRemoteSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RepositoryReleaseConfigCodeCompilationConfigInput)(nil)).Elem(), RepositoryReleaseConfigCodeCompilationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RepositoryReleaseConfigCodeCompilationConfigPtrInput)(nil)).Elem(), RepositoryReleaseConfigCodeCompilationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RepositoryReleaseConfigRecentScheduledReleaseRecordInput)(nil)).Elem(), RepositoryReleaseConfigRecentScheduledReleaseRecordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RepositoryReleaseConfigRecentScheduledReleaseRecordArrayInput)(nil)).Elem(), RepositoryReleaseConfigRecentScheduledReleaseRecordArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatusInput)(nil)).Elem(), RepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatusArrayInput)(nil)).Elem(), RepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RepositoryWorkflowConfigInvocationConfigInput)(nil)).Elem(), RepositoryWorkflowConfigInvocationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RepositoryWorkflowConfigInvocationConfigPtrInput)(nil)).Elem(), RepositoryWorkflowConfigInvocationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RepositoryWorkflowConfigInvocationConfigIncludedTargetInput)(nil)).Elem(), RepositoryWorkflowConfigInvocationConfigIncludedTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RepositoryWorkflowConfigInvocationConfigIncludedTargetArrayInput)(nil)).Elem(), RepositoryWorkflowConfigInvocationConfigIncludedTargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RepositoryWorkflowConfigRecentScheduledExecutionRecordInput)(nil)).Elem(), RepositoryWorkflowConfigRecentScheduledExecutionRecordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RepositoryWorkflowConfigRecentScheduledExecutionRecordArrayInput)(nil)).Elem(), RepositoryWorkflowConfigRecentScheduledExecutionRecordArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RepositoryWorkflowConfigRecentScheduledExecutionRecordErrorStatusInput)(nil)).Elem(), RepositoryWorkflowConfigRecentScheduledExecutionRecordErrorStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RepositoryWorkflowConfigRecentScheduledExecutionRecordErrorStatusArrayInput)(nil)).Elem(), RepositoryWorkflowConfigRecentScheduledExecutionRecordErrorStatusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RepositoryWorkspaceCompilationOverridesInput)(nil)).Elem(), RepositoryWorkspaceCompilationOverridesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RepositoryWorkspaceCompilationOverridesPtrInput)(nil)).Elem(), RepositoryWorkspaceCompilationOverridesArgs{})
	pulumi.RegisterOutputType(RepositoryGitRemoteSettingsOutput{})
	pulumi.RegisterOutputType(RepositoryGitRemoteSettingsPtrOutput{})
	pulumi.RegisterOutputType(RepositoryReleaseConfigCodeCompilationConfigOutput{})
	pulumi.RegisterOutputType(RepositoryReleaseConfigCodeCompilationConfigPtrOutput{})
	pulumi.RegisterOutputType(RepositoryReleaseConfigRecentScheduledReleaseRecordOutput{})
	pulumi.RegisterOutputType(RepositoryReleaseConfigRecentScheduledReleaseRecordArrayOutput{})
	pulumi.RegisterOutputType(RepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatusOutput{})
	pulumi.RegisterOutputType(RepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatusArrayOutput{})
	pulumi.RegisterOutputType(RepositoryWorkflowConfigInvocationConfigOutput{})
	pulumi.RegisterOutputType(RepositoryWorkflowConfigInvocationConfigPtrOutput{})
	pulumi.RegisterOutputType(RepositoryWorkflowConfigInvocationConfigIncludedTargetOutput{})
	pulumi.RegisterOutputType(RepositoryWorkflowConfigInvocationConfigIncludedTargetArrayOutput{})
	pulumi.RegisterOutputType(RepositoryWorkflowConfigRecentScheduledExecutionRecordOutput{})
	pulumi.RegisterOutputType(RepositoryWorkflowConfigRecentScheduledExecutionRecordArrayOutput{})
	pulumi.RegisterOutputType(RepositoryWorkflowConfigRecentScheduledExecutionRecordErrorStatusOutput{})
	pulumi.RegisterOutputType(RepositoryWorkflowConfigRecentScheduledExecutionRecordErrorStatusArrayOutput{})
	pulumi.RegisterOutputType(RepositoryWorkspaceCompilationOverridesOutput{})
	pulumi.RegisterOutputType(RepositoryWorkspaceCompilationOverridesPtrOutput{})
}
