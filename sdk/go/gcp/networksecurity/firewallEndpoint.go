// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networksecurity

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ### Network Security Firewall Endpoint Basic
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/networksecurity"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := networksecurity.NewFirewallEndpoint(ctx, "default", &networksecurity.FirewallEndpointArgs{
//				Name:             pulumi.String("my-firewall-endpoint"),
//				Parent:           pulumi.String("organizations/123456789"),
//				Location:         pulumi.String("us-central1-a"),
//				BillingProjectId: pulumi.String("my-project-name"),
//				Labels: pulumi.StringMap{
//					"foo": pulumi.String("bar"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// FirewallEndpoint can be imported using any of these accepted formats:
//
// * `{{parent}}/locations/{{location}}/firewallEndpoints/{{name}}`
//
// When using the `pulumi import` command, FirewallEndpoint can be imported using one of the formats above. For example:
//
// ```sh
// $ pulumi import gcp:networksecurity/firewallEndpoint:FirewallEndpoint default {{parent}}/locations/{{location}}/firewallEndpoints/{{name}}
// ```
type FirewallEndpoint struct {
	pulumi.CustomResourceState

	// List of networks that are associated with this endpoint in the local zone.
	// This is a projection of the FirewallEndpointAssociations pointing at this
	// endpoint. A network will only appear in this list after traffic routing is
	// fully configured. Format: projects/{project}/global/networks/{name}.
	AssociatedNetworks pulumi.StringArrayOutput `pulumi:"associatedNetworks"`
	// Project to bill on endpoint uptime usage.
	BillingProjectId pulumi.StringOutput `pulumi:"billingProjectId"`
	// Time the firewall endpoint was created in UTC.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
	EffectiveLabels pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	// A map of key/value label pairs to assign to the resource.
	//
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// The location (zone) of the firewall endpoint.
	Location pulumi.StringOutput `pulumi:"location"`
	// The name of the firewall endpoint resource.
	Name pulumi.StringOutput `pulumi:"name"`
	// The name of the parent this firewall endpoint belongs to.
	// Format: organizations/{organization_id}.
	//
	// ***
	Parent pulumi.StringOutput `pulumi:"parent"`
	// The combination of labels configured directly on the resource
	// and default labels configured on the provider.
	PulumiLabels pulumi.StringMapOutput `pulumi:"pulumiLabels"`
	// Whether reconciling is in progress, recommended per https://google.aip.dev/128.
	Reconciling pulumi.BoolOutput `pulumi:"reconciling"`
	// Server-defined URL of this resource.
	SelfLink pulumi.StringOutput `pulumi:"selfLink"`
	// The current state of the endpoint.
	State pulumi.StringOutput `pulumi:"state"`
	// Time the firewall endpoint was updated in UTC.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewFirewallEndpoint registers a new resource with the given unique name, arguments, and options.
func NewFirewallEndpoint(ctx *pulumi.Context,
	name string, args *FirewallEndpointArgs, opts ...pulumi.ResourceOption) (*FirewallEndpoint, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BillingProjectId == nil {
		return nil, errors.New("invalid value for required argument 'BillingProjectId'")
	}
	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	if args.Parent == nil {
		return nil, errors.New("invalid value for required argument 'Parent'")
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"effectiveLabels",
		"pulumiLabels",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FirewallEndpoint
	err := ctx.RegisterResource("gcp:networksecurity/firewallEndpoint:FirewallEndpoint", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFirewallEndpoint gets an existing FirewallEndpoint resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFirewallEndpoint(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FirewallEndpointState, opts ...pulumi.ResourceOption) (*FirewallEndpoint, error) {
	var resource FirewallEndpoint
	err := ctx.ReadResource("gcp:networksecurity/firewallEndpoint:FirewallEndpoint", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FirewallEndpoint resources.
type firewallEndpointState struct {
	// List of networks that are associated with this endpoint in the local zone.
	// This is a projection of the FirewallEndpointAssociations pointing at this
	// endpoint. A network will only appear in this list after traffic routing is
	// fully configured. Format: projects/{project}/global/networks/{name}.
	AssociatedNetworks []string `pulumi:"associatedNetworks"`
	// Project to bill on endpoint uptime usage.
	BillingProjectId *string `pulumi:"billingProjectId"`
	// Time the firewall endpoint was created in UTC.
	CreateTime *string `pulumi:"createTime"`
	// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
	EffectiveLabels map[string]string `pulumi:"effectiveLabels"`
	// A map of key/value label pairs to assign to the resource.
	//
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// The location (zone) of the firewall endpoint.
	Location *string `pulumi:"location"`
	// The name of the firewall endpoint resource.
	Name *string `pulumi:"name"`
	// The name of the parent this firewall endpoint belongs to.
	// Format: organizations/{organization_id}.
	//
	// ***
	Parent *string `pulumi:"parent"`
	// The combination of labels configured directly on the resource
	// and default labels configured on the provider.
	PulumiLabels map[string]string `pulumi:"pulumiLabels"`
	// Whether reconciling is in progress, recommended per https://google.aip.dev/128.
	Reconciling *bool `pulumi:"reconciling"`
	// Server-defined URL of this resource.
	SelfLink *string `pulumi:"selfLink"`
	// The current state of the endpoint.
	State *string `pulumi:"state"`
	// Time the firewall endpoint was updated in UTC.
	UpdateTime *string `pulumi:"updateTime"`
}

type FirewallEndpointState struct {
	// List of networks that are associated with this endpoint in the local zone.
	// This is a projection of the FirewallEndpointAssociations pointing at this
	// endpoint. A network will only appear in this list after traffic routing is
	// fully configured. Format: projects/{project}/global/networks/{name}.
	AssociatedNetworks pulumi.StringArrayInput
	// Project to bill on endpoint uptime usage.
	BillingProjectId pulumi.StringPtrInput
	// Time the firewall endpoint was created in UTC.
	CreateTime pulumi.StringPtrInput
	// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
	EffectiveLabels pulumi.StringMapInput
	// A map of key/value label pairs to assign to the resource.
	//
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// The location (zone) of the firewall endpoint.
	Location pulumi.StringPtrInput
	// The name of the firewall endpoint resource.
	Name pulumi.StringPtrInput
	// The name of the parent this firewall endpoint belongs to.
	// Format: organizations/{organization_id}.
	//
	// ***
	Parent pulumi.StringPtrInput
	// The combination of labels configured directly on the resource
	// and default labels configured on the provider.
	PulumiLabels pulumi.StringMapInput
	// Whether reconciling is in progress, recommended per https://google.aip.dev/128.
	Reconciling pulumi.BoolPtrInput
	// Server-defined URL of this resource.
	SelfLink pulumi.StringPtrInput
	// The current state of the endpoint.
	State pulumi.StringPtrInput
	// Time the firewall endpoint was updated in UTC.
	UpdateTime pulumi.StringPtrInput
}

func (FirewallEndpointState) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallEndpointState)(nil)).Elem()
}

type firewallEndpointArgs struct {
	// Project to bill on endpoint uptime usage.
	BillingProjectId string `pulumi:"billingProjectId"`
	// A map of key/value label pairs to assign to the resource.
	//
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// The location (zone) of the firewall endpoint.
	Location string `pulumi:"location"`
	// The name of the firewall endpoint resource.
	Name *string `pulumi:"name"`
	// The name of the parent this firewall endpoint belongs to.
	// Format: organizations/{organization_id}.
	//
	// ***
	Parent string `pulumi:"parent"`
}

// The set of arguments for constructing a FirewallEndpoint resource.
type FirewallEndpointArgs struct {
	// Project to bill on endpoint uptime usage.
	BillingProjectId pulumi.StringInput
	// A map of key/value label pairs to assign to the resource.
	//
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// The location (zone) of the firewall endpoint.
	Location pulumi.StringInput
	// The name of the firewall endpoint resource.
	Name pulumi.StringPtrInput
	// The name of the parent this firewall endpoint belongs to.
	// Format: organizations/{organization_id}.
	//
	// ***
	Parent pulumi.StringInput
}

func (FirewallEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallEndpointArgs)(nil)).Elem()
}

type FirewallEndpointInput interface {
	pulumi.Input

	ToFirewallEndpointOutput() FirewallEndpointOutput
	ToFirewallEndpointOutputWithContext(ctx context.Context) FirewallEndpointOutput
}

func (*FirewallEndpoint) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallEndpoint)(nil)).Elem()
}

func (i *FirewallEndpoint) ToFirewallEndpointOutput() FirewallEndpointOutput {
	return i.ToFirewallEndpointOutputWithContext(context.Background())
}

func (i *FirewallEndpoint) ToFirewallEndpointOutputWithContext(ctx context.Context) FirewallEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallEndpointOutput)
}

// FirewallEndpointArrayInput is an input type that accepts FirewallEndpointArray and FirewallEndpointArrayOutput values.
// You can construct a concrete instance of `FirewallEndpointArrayInput` via:
//
//	FirewallEndpointArray{ FirewallEndpointArgs{...} }
type FirewallEndpointArrayInput interface {
	pulumi.Input

	ToFirewallEndpointArrayOutput() FirewallEndpointArrayOutput
	ToFirewallEndpointArrayOutputWithContext(context.Context) FirewallEndpointArrayOutput
}

type FirewallEndpointArray []FirewallEndpointInput

func (FirewallEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallEndpoint)(nil)).Elem()
}

func (i FirewallEndpointArray) ToFirewallEndpointArrayOutput() FirewallEndpointArrayOutput {
	return i.ToFirewallEndpointArrayOutputWithContext(context.Background())
}

func (i FirewallEndpointArray) ToFirewallEndpointArrayOutputWithContext(ctx context.Context) FirewallEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallEndpointArrayOutput)
}

// FirewallEndpointMapInput is an input type that accepts FirewallEndpointMap and FirewallEndpointMapOutput values.
// You can construct a concrete instance of `FirewallEndpointMapInput` via:
//
//	FirewallEndpointMap{ "key": FirewallEndpointArgs{...} }
type FirewallEndpointMapInput interface {
	pulumi.Input

	ToFirewallEndpointMapOutput() FirewallEndpointMapOutput
	ToFirewallEndpointMapOutputWithContext(context.Context) FirewallEndpointMapOutput
}

type FirewallEndpointMap map[string]FirewallEndpointInput

func (FirewallEndpointMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallEndpoint)(nil)).Elem()
}

func (i FirewallEndpointMap) ToFirewallEndpointMapOutput() FirewallEndpointMapOutput {
	return i.ToFirewallEndpointMapOutputWithContext(context.Background())
}

func (i FirewallEndpointMap) ToFirewallEndpointMapOutputWithContext(ctx context.Context) FirewallEndpointMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallEndpointMapOutput)
}

type FirewallEndpointOutput struct{ *pulumi.OutputState }

func (FirewallEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallEndpoint)(nil)).Elem()
}

func (o FirewallEndpointOutput) ToFirewallEndpointOutput() FirewallEndpointOutput {
	return o
}

func (o FirewallEndpointOutput) ToFirewallEndpointOutputWithContext(ctx context.Context) FirewallEndpointOutput {
	return o
}

// List of networks that are associated with this endpoint in the local zone.
// This is a projection of the FirewallEndpointAssociations pointing at this
// endpoint. A network will only appear in this list after traffic routing is
// fully configured. Format: projects/{project}/global/networks/{name}.
func (o FirewallEndpointOutput) AssociatedNetworks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FirewallEndpoint) pulumi.StringArrayOutput { return v.AssociatedNetworks }).(pulumi.StringArrayOutput)
}

// Project to bill on endpoint uptime usage.
func (o FirewallEndpointOutput) BillingProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallEndpoint) pulumi.StringOutput { return v.BillingProjectId }).(pulumi.StringOutput)
}

// Time the firewall endpoint was created in UTC.
func (o FirewallEndpointOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallEndpoint) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
func (o FirewallEndpointOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *FirewallEndpoint) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// A map of key/value label pairs to assign to the resource.
//
// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
func (o FirewallEndpointOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *FirewallEndpoint) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// The location (zone) of the firewall endpoint.
func (o FirewallEndpointOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallEndpoint) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name of the firewall endpoint resource.
func (o FirewallEndpointOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallEndpoint) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The name of the parent this firewall endpoint belongs to.
// Format: organizations/{organization_id}.
//
// ***
func (o FirewallEndpointOutput) Parent() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallEndpoint) pulumi.StringOutput { return v.Parent }).(pulumi.StringOutput)
}

// The combination of labels configured directly on the resource
// and default labels configured on the provider.
func (o FirewallEndpointOutput) PulumiLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *FirewallEndpoint) pulumi.StringMapOutput { return v.PulumiLabels }).(pulumi.StringMapOutput)
}

// Whether reconciling is in progress, recommended per https://google.aip.dev/128.
func (o FirewallEndpointOutput) Reconciling() pulumi.BoolOutput {
	return o.ApplyT(func(v *FirewallEndpoint) pulumi.BoolOutput { return v.Reconciling }).(pulumi.BoolOutput)
}

// Server-defined URL of this resource.
func (o FirewallEndpointOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallEndpoint) pulumi.StringOutput { return v.SelfLink }).(pulumi.StringOutput)
}

// The current state of the endpoint.
func (o FirewallEndpointOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallEndpoint) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// Time the firewall endpoint was updated in UTC.
func (o FirewallEndpointOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallEndpoint) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

type FirewallEndpointArrayOutput struct{ *pulumi.OutputState }

func (FirewallEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallEndpoint)(nil)).Elem()
}

func (o FirewallEndpointArrayOutput) ToFirewallEndpointArrayOutput() FirewallEndpointArrayOutput {
	return o
}

func (o FirewallEndpointArrayOutput) ToFirewallEndpointArrayOutputWithContext(ctx context.Context) FirewallEndpointArrayOutput {
	return o
}

func (o FirewallEndpointArrayOutput) Index(i pulumi.IntInput) FirewallEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FirewallEndpoint {
		return vs[0].([]*FirewallEndpoint)[vs[1].(int)]
	}).(FirewallEndpointOutput)
}

type FirewallEndpointMapOutput struct{ *pulumi.OutputState }

func (FirewallEndpointMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallEndpoint)(nil)).Elem()
}

func (o FirewallEndpointMapOutput) ToFirewallEndpointMapOutput() FirewallEndpointMapOutput {
	return o
}

func (o FirewallEndpointMapOutput) ToFirewallEndpointMapOutputWithContext(ctx context.Context) FirewallEndpointMapOutput {
	return o
}

func (o FirewallEndpointMapOutput) MapIndex(k pulumi.StringInput) FirewallEndpointOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FirewallEndpoint {
		return vs[0].(map[string]*FirewallEndpoint)[vs[1].(string)]
	}).(FirewallEndpointOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallEndpointInput)(nil)).Elem(), &FirewallEndpoint{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallEndpointArrayInput)(nil)).Elem(), FirewallEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallEndpointMapInput)(nil)).Elem(), FirewallEndpointMap{})
	pulumi.RegisterOutputType(FirewallEndpointOutput{})
	pulumi.RegisterOutputType(FirewallEndpointArrayOutput{})
	pulumi.RegisterOutputType(FirewallEndpointMapOutput{})
}
