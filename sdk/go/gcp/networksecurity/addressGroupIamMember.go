// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networksecurity

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AddressGroupIamMember struct {
	pulumi.CustomResourceState

	Condition AddressGroupIamMemberConditionPtrOutput `pulumi:"condition"`
	Etag      pulumi.StringOutput                     `pulumi:"etag"`
	Location  pulumi.StringOutput                     `pulumi:"location"`
	Member    pulumi.StringOutput                     `pulumi:"member"`
	Name      pulumi.StringOutput                     `pulumi:"name"`
	Project   pulumi.StringOutput                     `pulumi:"project"`
	Role      pulumi.StringOutput                     `pulumi:"role"`
}

// NewAddressGroupIamMember registers a new resource with the given unique name, arguments, and options.
func NewAddressGroupIamMember(ctx *pulumi.Context,
	name string, args *AddressGroupIamMemberArgs, opts ...pulumi.ResourceOption) (*AddressGroupIamMember, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Member == nil {
		return nil, errors.New("invalid value for required argument 'Member'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AddressGroupIamMember
	err := ctx.RegisterResource("gcp:networksecurity/addressGroupIamMember:AddressGroupIamMember", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAddressGroupIamMember gets an existing AddressGroupIamMember resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAddressGroupIamMember(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AddressGroupIamMemberState, opts ...pulumi.ResourceOption) (*AddressGroupIamMember, error) {
	var resource AddressGroupIamMember
	err := ctx.ReadResource("gcp:networksecurity/addressGroupIamMember:AddressGroupIamMember", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AddressGroupIamMember resources.
type addressGroupIamMemberState struct {
	Condition *AddressGroupIamMemberCondition `pulumi:"condition"`
	Etag      *string                         `pulumi:"etag"`
	Location  *string                         `pulumi:"location"`
	Member    *string                         `pulumi:"member"`
	Name      *string                         `pulumi:"name"`
	Project   *string                         `pulumi:"project"`
	Role      *string                         `pulumi:"role"`
}

type AddressGroupIamMemberState struct {
	Condition AddressGroupIamMemberConditionPtrInput
	Etag      pulumi.StringPtrInput
	Location  pulumi.StringPtrInput
	Member    pulumi.StringPtrInput
	Name      pulumi.StringPtrInput
	Project   pulumi.StringPtrInput
	Role      pulumi.StringPtrInput
}

func (AddressGroupIamMemberState) ElementType() reflect.Type {
	return reflect.TypeOf((*addressGroupIamMemberState)(nil)).Elem()
}

type addressGroupIamMemberArgs struct {
	Condition *AddressGroupIamMemberCondition `pulumi:"condition"`
	Location  *string                         `pulumi:"location"`
	Member    string                          `pulumi:"member"`
	Name      *string                         `pulumi:"name"`
	Project   *string                         `pulumi:"project"`
	Role      string                          `pulumi:"role"`
}

// The set of arguments for constructing a AddressGroupIamMember resource.
type AddressGroupIamMemberArgs struct {
	Condition AddressGroupIamMemberConditionPtrInput
	Location  pulumi.StringPtrInput
	Member    pulumi.StringInput
	Name      pulumi.StringPtrInput
	Project   pulumi.StringPtrInput
	Role      pulumi.StringInput
}

func (AddressGroupIamMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*addressGroupIamMemberArgs)(nil)).Elem()
}

type AddressGroupIamMemberInput interface {
	pulumi.Input

	ToAddressGroupIamMemberOutput() AddressGroupIamMemberOutput
	ToAddressGroupIamMemberOutputWithContext(ctx context.Context) AddressGroupIamMemberOutput
}

func (*AddressGroupIamMember) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressGroupIamMember)(nil)).Elem()
}

func (i *AddressGroupIamMember) ToAddressGroupIamMemberOutput() AddressGroupIamMemberOutput {
	return i.ToAddressGroupIamMemberOutputWithContext(context.Background())
}

func (i *AddressGroupIamMember) ToAddressGroupIamMemberOutputWithContext(ctx context.Context) AddressGroupIamMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressGroupIamMemberOutput)
}

// AddressGroupIamMemberArrayInput is an input type that accepts AddressGroupIamMemberArray and AddressGroupIamMemberArrayOutput values.
// You can construct a concrete instance of `AddressGroupIamMemberArrayInput` via:
//
//	AddressGroupIamMemberArray{ AddressGroupIamMemberArgs{...} }
type AddressGroupIamMemberArrayInput interface {
	pulumi.Input

	ToAddressGroupIamMemberArrayOutput() AddressGroupIamMemberArrayOutput
	ToAddressGroupIamMemberArrayOutputWithContext(context.Context) AddressGroupIamMemberArrayOutput
}

type AddressGroupIamMemberArray []AddressGroupIamMemberInput

func (AddressGroupIamMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AddressGroupIamMember)(nil)).Elem()
}

func (i AddressGroupIamMemberArray) ToAddressGroupIamMemberArrayOutput() AddressGroupIamMemberArrayOutput {
	return i.ToAddressGroupIamMemberArrayOutputWithContext(context.Background())
}

func (i AddressGroupIamMemberArray) ToAddressGroupIamMemberArrayOutputWithContext(ctx context.Context) AddressGroupIamMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressGroupIamMemberArrayOutput)
}

// AddressGroupIamMemberMapInput is an input type that accepts AddressGroupIamMemberMap and AddressGroupIamMemberMapOutput values.
// You can construct a concrete instance of `AddressGroupIamMemberMapInput` via:
//
//	AddressGroupIamMemberMap{ "key": AddressGroupIamMemberArgs{...} }
type AddressGroupIamMemberMapInput interface {
	pulumi.Input

	ToAddressGroupIamMemberMapOutput() AddressGroupIamMemberMapOutput
	ToAddressGroupIamMemberMapOutputWithContext(context.Context) AddressGroupIamMemberMapOutput
}

type AddressGroupIamMemberMap map[string]AddressGroupIamMemberInput

func (AddressGroupIamMemberMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AddressGroupIamMember)(nil)).Elem()
}

func (i AddressGroupIamMemberMap) ToAddressGroupIamMemberMapOutput() AddressGroupIamMemberMapOutput {
	return i.ToAddressGroupIamMemberMapOutputWithContext(context.Background())
}

func (i AddressGroupIamMemberMap) ToAddressGroupIamMemberMapOutputWithContext(ctx context.Context) AddressGroupIamMemberMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressGroupIamMemberMapOutput)
}

type AddressGroupIamMemberOutput struct{ *pulumi.OutputState }

func (AddressGroupIamMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressGroupIamMember)(nil)).Elem()
}

func (o AddressGroupIamMemberOutput) ToAddressGroupIamMemberOutput() AddressGroupIamMemberOutput {
	return o
}

func (o AddressGroupIamMemberOutput) ToAddressGroupIamMemberOutputWithContext(ctx context.Context) AddressGroupIamMemberOutput {
	return o
}

func (o AddressGroupIamMemberOutput) Condition() AddressGroupIamMemberConditionPtrOutput {
	return o.ApplyT(func(v *AddressGroupIamMember) AddressGroupIamMemberConditionPtrOutput { return v.Condition }).(AddressGroupIamMemberConditionPtrOutput)
}

func (o AddressGroupIamMemberOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *AddressGroupIamMember) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o AddressGroupIamMemberOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *AddressGroupIamMember) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

func (o AddressGroupIamMemberOutput) Member() pulumi.StringOutput {
	return o.ApplyT(func(v *AddressGroupIamMember) pulumi.StringOutput { return v.Member }).(pulumi.StringOutput)
}

func (o AddressGroupIamMemberOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AddressGroupIamMember) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o AddressGroupIamMemberOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *AddressGroupIamMember) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o AddressGroupIamMemberOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *AddressGroupIamMember) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

type AddressGroupIamMemberArrayOutput struct{ *pulumi.OutputState }

func (AddressGroupIamMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AddressGroupIamMember)(nil)).Elem()
}

func (o AddressGroupIamMemberArrayOutput) ToAddressGroupIamMemberArrayOutput() AddressGroupIamMemberArrayOutput {
	return o
}

func (o AddressGroupIamMemberArrayOutput) ToAddressGroupIamMemberArrayOutputWithContext(ctx context.Context) AddressGroupIamMemberArrayOutput {
	return o
}

func (o AddressGroupIamMemberArrayOutput) Index(i pulumi.IntInput) AddressGroupIamMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AddressGroupIamMember {
		return vs[0].([]*AddressGroupIamMember)[vs[1].(int)]
	}).(AddressGroupIamMemberOutput)
}

type AddressGroupIamMemberMapOutput struct{ *pulumi.OutputState }

func (AddressGroupIamMemberMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AddressGroupIamMember)(nil)).Elem()
}

func (o AddressGroupIamMemberMapOutput) ToAddressGroupIamMemberMapOutput() AddressGroupIamMemberMapOutput {
	return o
}

func (o AddressGroupIamMemberMapOutput) ToAddressGroupIamMemberMapOutputWithContext(ctx context.Context) AddressGroupIamMemberMapOutput {
	return o
}

func (o AddressGroupIamMemberMapOutput) MapIndex(k pulumi.StringInput) AddressGroupIamMemberOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AddressGroupIamMember {
		return vs[0].(map[string]*AddressGroupIamMember)[vs[1].(string)]
	}).(AddressGroupIamMemberOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AddressGroupIamMemberInput)(nil)).Elem(), &AddressGroupIamMember{})
	pulumi.RegisterInputType(reflect.TypeOf((*AddressGroupIamMemberArrayInput)(nil)).Elem(), AddressGroupIamMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AddressGroupIamMemberMapInput)(nil)).Elem(), AddressGroupIamMemberMap{})
	pulumi.RegisterOutputType(AddressGroupIamMemberOutput{})
	pulumi.RegisterOutputType(AddressGroupIamMemberArrayOutput{})
	pulumi.RegisterOutputType(AddressGroupIamMemberMapOutput{})
}
