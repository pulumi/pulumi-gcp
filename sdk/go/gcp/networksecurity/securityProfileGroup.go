// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networksecurity

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A security profile group defines a container for security profiles.
//
// To get more information about SecurityProfileGroup, see:
//
// * [API documentation](https://cloud.google.com/firewall/docs/reference/network-security/rest/v1/organizations.locations.securityProfileGroups)
// * How-to Guides
//   - [Create and manage security profile groups](https://cloud.google.com/firewall/docs/configure-security-profile-groups)
//   - [Security profile groups overview](https://cloud.google.com/firewall/docs/about-security-profile-groups)
//
// ## Example Usage
//
// ### Network Security Security Profile Group Basic
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/networksecurity"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			securityProfile, err := networksecurity.NewSecurityProfile(ctx, "security_profile", &networksecurity.SecurityProfileArgs{
//				Name:     pulumi.String("sec-profile"),
//				Type:     pulumi.String("THREAT_PREVENTION"),
//				Parent:   pulumi.String("organizations/123456789"),
//				Location: pulumi.String("global"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = networksecurity.NewSecurityProfileGroup(ctx, "default", &networksecurity.SecurityProfileGroupArgs{
//				Name:                    pulumi.String("sec-profile-group"),
//				Parent:                  pulumi.String("organizations/123456789"),
//				Description:             pulumi.String("my description"),
//				ThreatPreventionProfile: securityProfile.ID(),
//				Labels: pulumi.StringMap{
//					"foo": pulumi.String("bar"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Network Security Security Profile Group Mirroring
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/compute"
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/networksecurity"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_default, err := compute.NewNetwork(ctx, "default", &compute.NetworkArgs{
//				Name:                  pulumi.String("network"),
//				AutoCreateSubnetworks: pulumi.Bool(false),
//			})
//			if err != nil {
//				return err
//			}
//			defaultMirroringDeploymentGroup, err := networksecurity.NewMirroringDeploymentGroup(ctx, "default", &networksecurity.MirroringDeploymentGroupArgs{
//				MirroringDeploymentGroupId: pulumi.String("deployment-group"),
//				Location:                   pulumi.String("global"),
//				Network:                    _default.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			defaultMirroringEndpointGroup, err := networksecurity.NewMirroringEndpointGroup(ctx, "default", &networksecurity.MirroringEndpointGroupArgs{
//				MirroringEndpointGroupId: pulumi.String("endpoint-group"),
//				Location:                 pulumi.String("global"),
//				MirroringDeploymentGroup: defaultMirroringDeploymentGroup.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			defaultSecurityProfile, err := networksecurity.NewSecurityProfile(ctx, "default", &networksecurity.SecurityProfileArgs{
//				Name:        pulumi.String("sec-profile"),
//				Parent:      pulumi.String("organizations/123456789"),
//				Description: pulumi.String("my description"),
//				Type:        pulumi.String("CUSTOM_MIRRORING"),
//				CustomMirroringProfile: &networksecurity.SecurityProfileCustomMirroringProfileArgs{
//					MirroringEndpointGroup: defaultMirroringEndpointGroup.ID(),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = networksecurity.NewSecurityProfileGroup(ctx, "default", &networksecurity.SecurityProfileGroupArgs{
//				Name:                   pulumi.String("sec-profile-group"),
//				Parent:                 pulumi.String("organizations/123456789"),
//				Description:            pulumi.String("my description"),
//				CustomMirroringProfile: defaultSecurityProfile.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Network Security Security Profile Group Intercept
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/compute"
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/networksecurity"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_default, err := compute.NewNetwork(ctx, "default", &compute.NetworkArgs{
//				Name:                  pulumi.String("network"),
//				AutoCreateSubnetworks: pulumi.Bool(false),
//			})
//			if err != nil {
//				return err
//			}
//			defaultInterceptDeploymentGroup, err := networksecurity.NewInterceptDeploymentGroup(ctx, "default", &networksecurity.InterceptDeploymentGroupArgs{
//				InterceptDeploymentGroupId: pulumi.String("deployment-group"),
//				Location:                   pulumi.String("global"),
//				Network:                    _default.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			defaultInterceptEndpointGroup, err := networksecurity.NewInterceptEndpointGroup(ctx, "default", &networksecurity.InterceptEndpointGroupArgs{
//				InterceptEndpointGroupId: pulumi.String("endpoint-group"),
//				Location:                 pulumi.String("global"),
//				InterceptDeploymentGroup: defaultInterceptDeploymentGroup.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			defaultSecurityProfile, err := networksecurity.NewSecurityProfile(ctx, "default", &networksecurity.SecurityProfileArgs{
//				Name:        pulumi.String("sec-profile"),
//				Parent:      pulumi.String("organizations/123456789"),
//				Description: pulumi.String("my description"),
//				Type:        pulumi.String("CUSTOM_INTERCEPT"),
//				CustomInterceptProfile: &networksecurity.SecurityProfileCustomInterceptProfileArgs{
//					InterceptEndpointGroup: defaultInterceptEndpointGroup.ID(),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = networksecurity.NewSecurityProfileGroup(ctx, "default", &networksecurity.SecurityProfileGroupArgs{
//				Name:                   pulumi.String("sec-profile-group"),
//				Parent:                 pulumi.String("organizations/123456789"),
//				Description:            pulumi.String("my description"),
//				CustomInterceptProfile: defaultSecurityProfile.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// SecurityProfileGroup can be imported using any of these accepted formats:
//
// * `{{parent}}/locations/{{location}}/securityProfileGroups/{{name}}`
//
// When using the `pulumi import` command, SecurityProfileGroup can be imported using one of the formats above. For example:
//
// ```sh
// $ pulumi import gcp:networksecurity/securityProfileGroup:SecurityProfileGroup default {{parent}}/locations/{{location}}/securityProfileGroups/{{name}}
// ```
type SecurityProfileGroup struct {
	pulumi.CustomResourceState

	// Time the security profile group was created in UTC.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Reference to a SecurityProfile with the CustomIntercept configuration.
	CustomInterceptProfile pulumi.StringPtrOutput `pulumi:"customInterceptProfile"`
	// Reference to a SecurityProfile with the custom mirroring configuration for the SecurityProfileGroup.
	CustomMirroringProfile pulumi.StringPtrOutput `pulumi:"customMirroringProfile"`
	// An optional description of the profile. The Max length is 512 characters.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
	EffectiveLabels pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	// This checksum is computed by the server based on the value of other fields,
	// and may be sent on update and delete requests to ensure the client has an up-to-date
	// value before proceeding.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// A map of key/value label pairs to assign to the resource.
	//
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// The location of the security profile group.
	// The default value is `global`.
	Location pulumi.StringPtrOutput `pulumi:"location"`
	// The name of the security profile group resource.
	//
	// ***
	Name pulumi.StringOutput `pulumi:"name"`
	// The name of the parent this security profile group belongs to.
	// Format: organizations/{organization_id}.
	Parent pulumi.StringPtrOutput `pulumi:"parent"`
	// The combination of labels configured directly on the resource
	// and default labels configured on the provider.
	PulumiLabels pulumi.StringMapOutput `pulumi:"pulumiLabels"`
	// Reference to a SecurityProfile with the threat prevention configuration for the SecurityProfileGroup.
	ThreatPreventionProfile pulumi.StringPtrOutput `pulumi:"threatPreventionProfile"`
	// Time the security profile group was updated in UTC.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewSecurityProfileGroup registers a new resource with the given unique name, arguments, and options.
func NewSecurityProfileGroup(ctx *pulumi.Context,
	name string, args *SecurityProfileGroupArgs, opts ...pulumi.ResourceOption) (*SecurityProfileGroup, error) {
	if args == nil {
		args = &SecurityProfileGroupArgs{}
	}

	secrets := pulumi.AdditionalSecretOutputs([]string{
		"effectiveLabels",
		"pulumiLabels",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SecurityProfileGroup
	err := ctx.RegisterResource("gcp:networksecurity/securityProfileGroup:SecurityProfileGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSecurityProfileGroup gets an existing SecurityProfileGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSecurityProfileGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SecurityProfileGroupState, opts ...pulumi.ResourceOption) (*SecurityProfileGroup, error) {
	var resource SecurityProfileGroup
	err := ctx.ReadResource("gcp:networksecurity/securityProfileGroup:SecurityProfileGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SecurityProfileGroup resources.
type securityProfileGroupState struct {
	// Time the security profile group was created in UTC.
	CreateTime *string `pulumi:"createTime"`
	// Reference to a SecurityProfile with the CustomIntercept configuration.
	CustomInterceptProfile *string `pulumi:"customInterceptProfile"`
	// Reference to a SecurityProfile with the custom mirroring configuration for the SecurityProfileGroup.
	CustomMirroringProfile *string `pulumi:"customMirroringProfile"`
	// An optional description of the profile. The Max length is 512 characters.
	Description *string `pulumi:"description"`
	// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
	EffectiveLabels map[string]string `pulumi:"effectiveLabels"`
	// This checksum is computed by the server based on the value of other fields,
	// and may be sent on update and delete requests to ensure the client has an up-to-date
	// value before proceeding.
	Etag *string `pulumi:"etag"`
	// A map of key/value label pairs to assign to the resource.
	//
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// The location of the security profile group.
	// The default value is `global`.
	Location *string `pulumi:"location"`
	// The name of the security profile group resource.
	//
	// ***
	Name *string `pulumi:"name"`
	// The name of the parent this security profile group belongs to.
	// Format: organizations/{organization_id}.
	Parent *string `pulumi:"parent"`
	// The combination of labels configured directly on the resource
	// and default labels configured on the provider.
	PulumiLabels map[string]string `pulumi:"pulumiLabels"`
	// Reference to a SecurityProfile with the threat prevention configuration for the SecurityProfileGroup.
	ThreatPreventionProfile *string `pulumi:"threatPreventionProfile"`
	// Time the security profile group was updated in UTC.
	UpdateTime *string `pulumi:"updateTime"`
}

type SecurityProfileGroupState struct {
	// Time the security profile group was created in UTC.
	CreateTime pulumi.StringPtrInput
	// Reference to a SecurityProfile with the CustomIntercept configuration.
	CustomInterceptProfile pulumi.StringPtrInput
	// Reference to a SecurityProfile with the custom mirroring configuration for the SecurityProfileGroup.
	CustomMirroringProfile pulumi.StringPtrInput
	// An optional description of the profile. The Max length is 512 characters.
	Description pulumi.StringPtrInput
	// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
	EffectiveLabels pulumi.StringMapInput
	// This checksum is computed by the server based on the value of other fields,
	// and may be sent on update and delete requests to ensure the client has an up-to-date
	// value before proceeding.
	Etag pulumi.StringPtrInput
	// A map of key/value label pairs to assign to the resource.
	//
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// The location of the security profile group.
	// The default value is `global`.
	Location pulumi.StringPtrInput
	// The name of the security profile group resource.
	//
	// ***
	Name pulumi.StringPtrInput
	// The name of the parent this security profile group belongs to.
	// Format: organizations/{organization_id}.
	Parent pulumi.StringPtrInput
	// The combination of labels configured directly on the resource
	// and default labels configured on the provider.
	PulumiLabels pulumi.StringMapInput
	// Reference to a SecurityProfile with the threat prevention configuration for the SecurityProfileGroup.
	ThreatPreventionProfile pulumi.StringPtrInput
	// Time the security profile group was updated in UTC.
	UpdateTime pulumi.StringPtrInput
}

func (SecurityProfileGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*securityProfileGroupState)(nil)).Elem()
}

type securityProfileGroupArgs struct {
	// Reference to a SecurityProfile with the CustomIntercept configuration.
	CustomInterceptProfile *string `pulumi:"customInterceptProfile"`
	// Reference to a SecurityProfile with the custom mirroring configuration for the SecurityProfileGroup.
	CustomMirroringProfile *string `pulumi:"customMirroringProfile"`
	// An optional description of the profile. The Max length is 512 characters.
	Description *string `pulumi:"description"`
	// A map of key/value label pairs to assign to the resource.
	//
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// The location of the security profile group.
	// The default value is `global`.
	Location *string `pulumi:"location"`
	// The name of the security profile group resource.
	//
	// ***
	Name *string `pulumi:"name"`
	// The name of the parent this security profile group belongs to.
	// Format: organizations/{organization_id}.
	Parent *string `pulumi:"parent"`
	// Reference to a SecurityProfile with the threat prevention configuration for the SecurityProfileGroup.
	ThreatPreventionProfile *string `pulumi:"threatPreventionProfile"`
}

// The set of arguments for constructing a SecurityProfileGroup resource.
type SecurityProfileGroupArgs struct {
	// Reference to a SecurityProfile with the CustomIntercept configuration.
	CustomInterceptProfile pulumi.StringPtrInput
	// Reference to a SecurityProfile with the custom mirroring configuration for the SecurityProfileGroup.
	CustomMirroringProfile pulumi.StringPtrInput
	// An optional description of the profile. The Max length is 512 characters.
	Description pulumi.StringPtrInput
	// A map of key/value label pairs to assign to the resource.
	//
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// The location of the security profile group.
	// The default value is `global`.
	Location pulumi.StringPtrInput
	// The name of the security profile group resource.
	//
	// ***
	Name pulumi.StringPtrInput
	// The name of the parent this security profile group belongs to.
	// Format: organizations/{organization_id}.
	Parent pulumi.StringPtrInput
	// Reference to a SecurityProfile with the threat prevention configuration for the SecurityProfileGroup.
	ThreatPreventionProfile pulumi.StringPtrInput
}

func (SecurityProfileGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*securityProfileGroupArgs)(nil)).Elem()
}

type SecurityProfileGroupInput interface {
	pulumi.Input

	ToSecurityProfileGroupOutput() SecurityProfileGroupOutput
	ToSecurityProfileGroupOutputWithContext(ctx context.Context) SecurityProfileGroupOutput
}

func (*SecurityProfileGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityProfileGroup)(nil)).Elem()
}

func (i *SecurityProfileGroup) ToSecurityProfileGroupOutput() SecurityProfileGroupOutput {
	return i.ToSecurityProfileGroupOutputWithContext(context.Background())
}

func (i *SecurityProfileGroup) ToSecurityProfileGroupOutputWithContext(ctx context.Context) SecurityProfileGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityProfileGroupOutput)
}

// SecurityProfileGroupArrayInput is an input type that accepts SecurityProfileGroupArray and SecurityProfileGroupArrayOutput values.
// You can construct a concrete instance of `SecurityProfileGroupArrayInput` via:
//
//	SecurityProfileGroupArray{ SecurityProfileGroupArgs{...} }
type SecurityProfileGroupArrayInput interface {
	pulumi.Input

	ToSecurityProfileGroupArrayOutput() SecurityProfileGroupArrayOutput
	ToSecurityProfileGroupArrayOutputWithContext(context.Context) SecurityProfileGroupArrayOutput
}

type SecurityProfileGroupArray []SecurityProfileGroupInput

func (SecurityProfileGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SecurityProfileGroup)(nil)).Elem()
}

func (i SecurityProfileGroupArray) ToSecurityProfileGroupArrayOutput() SecurityProfileGroupArrayOutput {
	return i.ToSecurityProfileGroupArrayOutputWithContext(context.Background())
}

func (i SecurityProfileGroupArray) ToSecurityProfileGroupArrayOutputWithContext(ctx context.Context) SecurityProfileGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityProfileGroupArrayOutput)
}

// SecurityProfileGroupMapInput is an input type that accepts SecurityProfileGroupMap and SecurityProfileGroupMapOutput values.
// You can construct a concrete instance of `SecurityProfileGroupMapInput` via:
//
//	SecurityProfileGroupMap{ "key": SecurityProfileGroupArgs{...} }
type SecurityProfileGroupMapInput interface {
	pulumi.Input

	ToSecurityProfileGroupMapOutput() SecurityProfileGroupMapOutput
	ToSecurityProfileGroupMapOutputWithContext(context.Context) SecurityProfileGroupMapOutput
}

type SecurityProfileGroupMap map[string]SecurityProfileGroupInput

func (SecurityProfileGroupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SecurityProfileGroup)(nil)).Elem()
}

func (i SecurityProfileGroupMap) ToSecurityProfileGroupMapOutput() SecurityProfileGroupMapOutput {
	return i.ToSecurityProfileGroupMapOutputWithContext(context.Background())
}

func (i SecurityProfileGroupMap) ToSecurityProfileGroupMapOutputWithContext(ctx context.Context) SecurityProfileGroupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityProfileGroupMapOutput)
}

type SecurityProfileGroupOutput struct{ *pulumi.OutputState }

func (SecurityProfileGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityProfileGroup)(nil)).Elem()
}

func (o SecurityProfileGroupOutput) ToSecurityProfileGroupOutput() SecurityProfileGroupOutput {
	return o
}

func (o SecurityProfileGroupOutput) ToSecurityProfileGroupOutputWithContext(ctx context.Context) SecurityProfileGroupOutput {
	return o
}

// Time the security profile group was created in UTC.
func (o SecurityProfileGroupOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityProfileGroup) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Reference to a SecurityProfile with the CustomIntercept configuration.
func (o SecurityProfileGroupOutput) CustomInterceptProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityProfileGroup) pulumi.StringPtrOutput { return v.CustomInterceptProfile }).(pulumi.StringPtrOutput)
}

// Reference to a SecurityProfile with the custom mirroring configuration for the SecurityProfileGroup.
func (o SecurityProfileGroupOutput) CustomMirroringProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityProfileGroup) pulumi.StringPtrOutput { return v.CustomMirroringProfile }).(pulumi.StringPtrOutput)
}

// An optional description of the profile. The Max length is 512 characters.
func (o SecurityProfileGroupOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityProfileGroup) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
func (o SecurityProfileGroupOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *SecurityProfileGroup) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// This checksum is computed by the server based on the value of other fields,
// and may be sent on update and delete requests to ensure the client has an up-to-date
// value before proceeding.
func (o SecurityProfileGroupOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityProfileGroup) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// A map of key/value label pairs to assign to the resource.
//
// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
func (o SecurityProfileGroupOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *SecurityProfileGroup) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// The location of the security profile group.
// The default value is `global`.
func (o SecurityProfileGroupOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityProfileGroup) pulumi.StringPtrOutput { return v.Location }).(pulumi.StringPtrOutput)
}

// The name of the security profile group resource.
//
// ***
func (o SecurityProfileGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityProfileGroup) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The name of the parent this security profile group belongs to.
// Format: organizations/{organization_id}.
func (o SecurityProfileGroupOutput) Parent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityProfileGroup) pulumi.StringPtrOutput { return v.Parent }).(pulumi.StringPtrOutput)
}

// The combination of labels configured directly on the resource
// and default labels configured on the provider.
func (o SecurityProfileGroupOutput) PulumiLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *SecurityProfileGroup) pulumi.StringMapOutput { return v.PulumiLabels }).(pulumi.StringMapOutput)
}

// Reference to a SecurityProfile with the threat prevention configuration for the SecurityProfileGroup.
func (o SecurityProfileGroupOutput) ThreatPreventionProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityProfileGroup) pulumi.StringPtrOutput { return v.ThreatPreventionProfile }).(pulumi.StringPtrOutput)
}

// Time the security profile group was updated in UTC.
func (o SecurityProfileGroupOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityProfileGroup) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

type SecurityProfileGroupArrayOutput struct{ *pulumi.OutputState }

func (SecurityProfileGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SecurityProfileGroup)(nil)).Elem()
}

func (o SecurityProfileGroupArrayOutput) ToSecurityProfileGroupArrayOutput() SecurityProfileGroupArrayOutput {
	return o
}

func (o SecurityProfileGroupArrayOutput) ToSecurityProfileGroupArrayOutputWithContext(ctx context.Context) SecurityProfileGroupArrayOutput {
	return o
}

func (o SecurityProfileGroupArrayOutput) Index(i pulumi.IntInput) SecurityProfileGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SecurityProfileGroup {
		return vs[0].([]*SecurityProfileGroup)[vs[1].(int)]
	}).(SecurityProfileGroupOutput)
}

type SecurityProfileGroupMapOutput struct{ *pulumi.OutputState }

func (SecurityProfileGroupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SecurityProfileGroup)(nil)).Elem()
}

func (o SecurityProfileGroupMapOutput) ToSecurityProfileGroupMapOutput() SecurityProfileGroupMapOutput {
	return o
}

func (o SecurityProfileGroupMapOutput) ToSecurityProfileGroupMapOutputWithContext(ctx context.Context) SecurityProfileGroupMapOutput {
	return o
}

func (o SecurityProfileGroupMapOutput) MapIndex(k pulumi.StringInput) SecurityProfileGroupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SecurityProfileGroup {
		return vs[0].(map[string]*SecurityProfileGroup)[vs[1].(string)]
	}).(SecurityProfileGroupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityProfileGroupInput)(nil)).Elem(), &SecurityProfileGroup{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityProfileGroupArrayInput)(nil)).Elem(), SecurityProfileGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityProfileGroupMapInput)(nil)).Elem(), SecurityProfileGroupMap{})
	pulumi.RegisterOutputType(SecurityProfileGroupOutput{})
	pulumi.RegisterOutputType(SecurityProfileGroupArrayOutput{})
	pulumi.RegisterOutputType(SecurityProfileGroupMapOutput{})
}
