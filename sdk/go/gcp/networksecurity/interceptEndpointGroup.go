// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networksecurity

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// An endpoint group is a consumer frontend for a deployment group (backend).
// In order to configure intercept for a network, consumers must create:
// - An association between their network and the endpoint group.
// - A security profile that points to the endpoint group.
// - A firewall rule that references the security profile (group).
//
// ## Example Usage
//
// ### Network Security Intercept Endpoint Group Basic
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/compute"
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/networksecurity"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			network, err := compute.NewNetwork(ctx, "network", &compute.NetworkArgs{
//				Name:                  pulumi.String("example-network"),
//				AutoCreateSubnetworks: pulumi.Bool(false),
//			})
//			if err != nil {
//				return err
//			}
//			deploymentGroup, err := networksecurity.NewInterceptDeploymentGroup(ctx, "deployment_group", &networksecurity.InterceptDeploymentGroupArgs{
//				InterceptDeploymentGroupId: pulumi.String("example-dg"),
//				Location:                   pulumi.String("global"),
//				Network:                    network.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = networksecurity.NewInterceptEndpointGroup(ctx, "default", &networksecurity.InterceptEndpointGroupArgs{
//				InterceptEndpointGroupId: pulumi.String("example-eg"),
//				Location:                 pulumi.String("global"),
//				InterceptDeploymentGroup: deploymentGroup.ID(),
//				Description:              pulumi.String("some description"),
//				Labels: pulumi.StringMap{
//					"foo": pulumi.String("bar"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// InterceptEndpointGroup can be imported using any of these accepted formats:
//
// * `projects/{{project}}/locations/{{location}}/interceptEndpointGroups/{{intercept_endpoint_group_id}}`
//
// * `{{project}}/{{location}}/{{intercept_endpoint_group_id}}`
//
// * `{{location}}/{{intercept_endpoint_group_id}}`
//
// When using the `pulumi import` command, InterceptEndpointGroup can be imported using one of the formats above. For example:
//
// ```sh
// $ pulumi import gcp:networksecurity/interceptEndpointGroup:InterceptEndpointGroup default projects/{{project}}/locations/{{location}}/interceptEndpointGroups/{{intercept_endpoint_group_id}}
// ```
//
// ```sh
// $ pulumi import gcp:networksecurity/interceptEndpointGroup:InterceptEndpointGroup default {{project}}/{{location}}/{{intercept_endpoint_group_id}}
// ```
//
// ```sh
// $ pulumi import gcp:networksecurity/interceptEndpointGroup:InterceptEndpointGroup default {{location}}/{{intercept_endpoint_group_id}}
// ```
type InterceptEndpointGroup struct {
	pulumi.CustomResourceState

	// List of associations to this endpoint group.
	// Structure is documented below.
	Associations InterceptEndpointGroupAssociationTypeArrayOutput `pulumi:"associations"`
	// The endpoint group's view of a connected deployment group.
	// Structure is documented below.
	ConnectedDeploymentGroups InterceptEndpointGroupConnectedDeploymentGroupArrayOutput `pulumi:"connectedDeploymentGroups"`
	// The timestamp when the resource was created.
	// See https://google.aip.dev/148#timestamps.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// User-provided description of the endpoint group.
	// Used as additional context for the endpoint group.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
	EffectiveLabels pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	// The deployment group that this endpoint group is connected to, for example:
	// `projects/123456789/locations/global/interceptDeploymentGroups/my-dg`.
	// See https://google.aip.dev/124.
	InterceptDeploymentGroup pulumi.StringOutput `pulumi:"interceptDeploymentGroup"`
	// The ID to use for the endpoint group, which will become the final component
	// of the endpoint group's resource name.
	//
	// ***
	InterceptEndpointGroupId pulumi.StringOutput `pulumi:"interceptEndpointGroupId"`
	// Labels are key/value pairs that help to organize and filter resources.
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// The cloud location of the endpoint group, currently restricted to `global`.
	Location pulumi.StringOutput `pulumi:"location"`
	// (Output)
	// The connected deployment group's resource name, for example:
	// `projects/123456789/locations/global/interceptDeploymentGroups/my-dg`.
	// See https://google.aip.dev/124.
	Name pulumi.StringOutput `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
	// The combination of labels configured directly on the resource
	// and default labels configured on the provider.
	PulumiLabels pulumi.StringMapOutput `pulumi:"pulumiLabels"`
	// The current state of the resource does not match the user's intended state,
	// and the system is working to reconcile them. This is part of the normal
	// operation (e.g. adding a new association to the group).
	// See https://google.aip.dev/128.
	Reconciling pulumi.BoolOutput `pulumi:"reconciling"`
	// (Output)
	// The current state of the association in this location.
	// Possible values:
	// STATE_UNSPECIFIED
	// ACTIVE
	// OUT_OF_SYNC
	State pulumi.StringOutput `pulumi:"state"`
	// The timestamp when the resource was most recently updated.
	// See https://google.aip.dev/148#timestamps.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewInterceptEndpointGroup registers a new resource with the given unique name, arguments, and options.
func NewInterceptEndpointGroup(ctx *pulumi.Context,
	name string, args *InterceptEndpointGroupArgs, opts ...pulumi.ResourceOption) (*InterceptEndpointGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InterceptDeploymentGroup == nil {
		return nil, errors.New("invalid value for required argument 'InterceptDeploymentGroup'")
	}
	if args.InterceptEndpointGroupId == nil {
		return nil, errors.New("invalid value for required argument 'InterceptEndpointGroupId'")
	}
	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"effectiveLabels",
		"pulumiLabels",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource InterceptEndpointGroup
	err := ctx.RegisterResource("gcp:networksecurity/interceptEndpointGroup:InterceptEndpointGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInterceptEndpointGroup gets an existing InterceptEndpointGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInterceptEndpointGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InterceptEndpointGroupState, opts ...pulumi.ResourceOption) (*InterceptEndpointGroup, error) {
	var resource InterceptEndpointGroup
	err := ctx.ReadResource("gcp:networksecurity/interceptEndpointGroup:InterceptEndpointGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering InterceptEndpointGroup resources.
type interceptEndpointGroupState struct {
	// List of associations to this endpoint group.
	// Structure is documented below.
	Associations []InterceptEndpointGroupAssociationType `pulumi:"associations"`
	// The endpoint group's view of a connected deployment group.
	// Structure is documented below.
	ConnectedDeploymentGroups []InterceptEndpointGroupConnectedDeploymentGroup `pulumi:"connectedDeploymentGroups"`
	// The timestamp when the resource was created.
	// See https://google.aip.dev/148#timestamps.
	CreateTime *string `pulumi:"createTime"`
	// User-provided description of the endpoint group.
	// Used as additional context for the endpoint group.
	Description *string `pulumi:"description"`
	// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
	EffectiveLabels map[string]string `pulumi:"effectiveLabels"`
	// The deployment group that this endpoint group is connected to, for example:
	// `projects/123456789/locations/global/interceptDeploymentGroups/my-dg`.
	// See https://google.aip.dev/124.
	InterceptDeploymentGroup *string `pulumi:"interceptDeploymentGroup"`
	// The ID to use for the endpoint group, which will become the final component
	// of the endpoint group's resource name.
	//
	// ***
	InterceptEndpointGroupId *string `pulumi:"interceptEndpointGroupId"`
	// Labels are key/value pairs that help to organize and filter resources.
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// The cloud location of the endpoint group, currently restricted to `global`.
	Location *string `pulumi:"location"`
	// (Output)
	// The connected deployment group's resource name, for example:
	// `projects/123456789/locations/global/interceptDeploymentGroups/my-dg`.
	// See https://google.aip.dev/124.
	Name *string `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// The combination of labels configured directly on the resource
	// and default labels configured on the provider.
	PulumiLabels map[string]string `pulumi:"pulumiLabels"`
	// The current state of the resource does not match the user's intended state,
	// and the system is working to reconcile them. This is part of the normal
	// operation (e.g. adding a new association to the group).
	// See https://google.aip.dev/128.
	Reconciling *bool `pulumi:"reconciling"`
	// (Output)
	// The current state of the association in this location.
	// Possible values:
	// STATE_UNSPECIFIED
	// ACTIVE
	// OUT_OF_SYNC
	State *string `pulumi:"state"`
	// The timestamp when the resource was most recently updated.
	// See https://google.aip.dev/148#timestamps.
	UpdateTime *string `pulumi:"updateTime"`
}

type InterceptEndpointGroupState struct {
	// List of associations to this endpoint group.
	// Structure is documented below.
	Associations InterceptEndpointGroupAssociationTypeArrayInput
	// The endpoint group's view of a connected deployment group.
	// Structure is documented below.
	ConnectedDeploymentGroups InterceptEndpointGroupConnectedDeploymentGroupArrayInput
	// The timestamp when the resource was created.
	// See https://google.aip.dev/148#timestamps.
	CreateTime pulumi.StringPtrInput
	// User-provided description of the endpoint group.
	// Used as additional context for the endpoint group.
	Description pulumi.StringPtrInput
	// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
	EffectiveLabels pulumi.StringMapInput
	// The deployment group that this endpoint group is connected to, for example:
	// `projects/123456789/locations/global/interceptDeploymentGroups/my-dg`.
	// See https://google.aip.dev/124.
	InterceptDeploymentGroup pulumi.StringPtrInput
	// The ID to use for the endpoint group, which will become the final component
	// of the endpoint group's resource name.
	//
	// ***
	InterceptEndpointGroupId pulumi.StringPtrInput
	// Labels are key/value pairs that help to organize and filter resources.
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// The cloud location of the endpoint group, currently restricted to `global`.
	Location pulumi.StringPtrInput
	// (Output)
	// The connected deployment group's resource name, for example:
	// `projects/123456789/locations/global/interceptDeploymentGroups/my-dg`.
	// See https://google.aip.dev/124.
	Name pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// The combination of labels configured directly on the resource
	// and default labels configured on the provider.
	PulumiLabels pulumi.StringMapInput
	// The current state of the resource does not match the user's intended state,
	// and the system is working to reconcile them. This is part of the normal
	// operation (e.g. adding a new association to the group).
	// See https://google.aip.dev/128.
	Reconciling pulumi.BoolPtrInput
	// (Output)
	// The current state of the association in this location.
	// Possible values:
	// STATE_UNSPECIFIED
	// ACTIVE
	// OUT_OF_SYNC
	State pulumi.StringPtrInput
	// The timestamp when the resource was most recently updated.
	// See https://google.aip.dev/148#timestamps.
	UpdateTime pulumi.StringPtrInput
}

func (InterceptEndpointGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*interceptEndpointGroupState)(nil)).Elem()
}

type interceptEndpointGroupArgs struct {
	// User-provided description of the endpoint group.
	// Used as additional context for the endpoint group.
	Description *string `pulumi:"description"`
	// The deployment group that this endpoint group is connected to, for example:
	// `projects/123456789/locations/global/interceptDeploymentGroups/my-dg`.
	// See https://google.aip.dev/124.
	InterceptDeploymentGroup string `pulumi:"interceptDeploymentGroup"`
	// The ID to use for the endpoint group, which will become the final component
	// of the endpoint group's resource name.
	//
	// ***
	InterceptEndpointGroupId string `pulumi:"interceptEndpointGroupId"`
	// Labels are key/value pairs that help to organize and filter resources.
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// The cloud location of the endpoint group, currently restricted to `global`.
	Location string `pulumi:"location"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
}

// The set of arguments for constructing a InterceptEndpointGroup resource.
type InterceptEndpointGroupArgs struct {
	// User-provided description of the endpoint group.
	// Used as additional context for the endpoint group.
	Description pulumi.StringPtrInput
	// The deployment group that this endpoint group is connected to, for example:
	// `projects/123456789/locations/global/interceptDeploymentGroups/my-dg`.
	// See https://google.aip.dev/124.
	InterceptDeploymentGroup pulumi.StringInput
	// The ID to use for the endpoint group, which will become the final component
	// of the endpoint group's resource name.
	//
	// ***
	InterceptEndpointGroupId pulumi.StringInput
	// Labels are key/value pairs that help to organize and filter resources.
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// The cloud location of the endpoint group, currently restricted to `global`.
	Location pulumi.StringInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
}

func (InterceptEndpointGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*interceptEndpointGroupArgs)(nil)).Elem()
}

type InterceptEndpointGroupInput interface {
	pulumi.Input

	ToInterceptEndpointGroupOutput() InterceptEndpointGroupOutput
	ToInterceptEndpointGroupOutputWithContext(ctx context.Context) InterceptEndpointGroupOutput
}

func (*InterceptEndpointGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**InterceptEndpointGroup)(nil)).Elem()
}

func (i *InterceptEndpointGroup) ToInterceptEndpointGroupOutput() InterceptEndpointGroupOutput {
	return i.ToInterceptEndpointGroupOutputWithContext(context.Background())
}

func (i *InterceptEndpointGroup) ToInterceptEndpointGroupOutputWithContext(ctx context.Context) InterceptEndpointGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InterceptEndpointGroupOutput)
}

// InterceptEndpointGroupArrayInput is an input type that accepts InterceptEndpointGroupArray and InterceptEndpointGroupArrayOutput values.
// You can construct a concrete instance of `InterceptEndpointGroupArrayInput` via:
//
//	InterceptEndpointGroupArray{ InterceptEndpointGroupArgs{...} }
type InterceptEndpointGroupArrayInput interface {
	pulumi.Input

	ToInterceptEndpointGroupArrayOutput() InterceptEndpointGroupArrayOutput
	ToInterceptEndpointGroupArrayOutputWithContext(context.Context) InterceptEndpointGroupArrayOutput
}

type InterceptEndpointGroupArray []InterceptEndpointGroupInput

func (InterceptEndpointGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*InterceptEndpointGroup)(nil)).Elem()
}

func (i InterceptEndpointGroupArray) ToInterceptEndpointGroupArrayOutput() InterceptEndpointGroupArrayOutput {
	return i.ToInterceptEndpointGroupArrayOutputWithContext(context.Background())
}

func (i InterceptEndpointGroupArray) ToInterceptEndpointGroupArrayOutputWithContext(ctx context.Context) InterceptEndpointGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InterceptEndpointGroupArrayOutput)
}

// InterceptEndpointGroupMapInput is an input type that accepts InterceptEndpointGroupMap and InterceptEndpointGroupMapOutput values.
// You can construct a concrete instance of `InterceptEndpointGroupMapInput` via:
//
//	InterceptEndpointGroupMap{ "key": InterceptEndpointGroupArgs{...} }
type InterceptEndpointGroupMapInput interface {
	pulumi.Input

	ToInterceptEndpointGroupMapOutput() InterceptEndpointGroupMapOutput
	ToInterceptEndpointGroupMapOutputWithContext(context.Context) InterceptEndpointGroupMapOutput
}

type InterceptEndpointGroupMap map[string]InterceptEndpointGroupInput

func (InterceptEndpointGroupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*InterceptEndpointGroup)(nil)).Elem()
}

func (i InterceptEndpointGroupMap) ToInterceptEndpointGroupMapOutput() InterceptEndpointGroupMapOutput {
	return i.ToInterceptEndpointGroupMapOutputWithContext(context.Background())
}

func (i InterceptEndpointGroupMap) ToInterceptEndpointGroupMapOutputWithContext(ctx context.Context) InterceptEndpointGroupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InterceptEndpointGroupMapOutput)
}

type InterceptEndpointGroupOutput struct{ *pulumi.OutputState }

func (InterceptEndpointGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InterceptEndpointGroup)(nil)).Elem()
}

func (o InterceptEndpointGroupOutput) ToInterceptEndpointGroupOutput() InterceptEndpointGroupOutput {
	return o
}

func (o InterceptEndpointGroupOutput) ToInterceptEndpointGroupOutputWithContext(ctx context.Context) InterceptEndpointGroupOutput {
	return o
}

// List of associations to this endpoint group.
// Structure is documented below.
func (o InterceptEndpointGroupOutput) Associations() InterceptEndpointGroupAssociationTypeArrayOutput {
	return o.ApplyT(func(v *InterceptEndpointGroup) InterceptEndpointGroupAssociationTypeArrayOutput {
		return v.Associations
	}).(InterceptEndpointGroupAssociationTypeArrayOutput)
}

// The endpoint group's view of a connected deployment group.
// Structure is documented below.
func (o InterceptEndpointGroupOutput) ConnectedDeploymentGroups() InterceptEndpointGroupConnectedDeploymentGroupArrayOutput {
	return o.ApplyT(func(v *InterceptEndpointGroup) InterceptEndpointGroupConnectedDeploymentGroupArrayOutput {
		return v.ConnectedDeploymentGroups
	}).(InterceptEndpointGroupConnectedDeploymentGroupArrayOutput)
}

// The timestamp when the resource was created.
// See https://google.aip.dev/148#timestamps.
func (o InterceptEndpointGroupOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *InterceptEndpointGroup) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// User-provided description of the endpoint group.
// Used as additional context for the endpoint group.
func (o InterceptEndpointGroupOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InterceptEndpointGroup) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
func (o InterceptEndpointGroupOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *InterceptEndpointGroup) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// The deployment group that this endpoint group is connected to, for example:
// `projects/123456789/locations/global/interceptDeploymentGroups/my-dg`.
// See https://google.aip.dev/124.
func (o InterceptEndpointGroupOutput) InterceptDeploymentGroup() pulumi.StringOutput {
	return o.ApplyT(func(v *InterceptEndpointGroup) pulumi.StringOutput { return v.InterceptDeploymentGroup }).(pulumi.StringOutput)
}

// The ID to use for the endpoint group, which will become the final component
// of the endpoint group's resource name.
//
// ***
func (o InterceptEndpointGroupOutput) InterceptEndpointGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *InterceptEndpointGroup) pulumi.StringOutput { return v.InterceptEndpointGroupId }).(pulumi.StringOutput)
}

// Labels are key/value pairs that help to organize and filter resources.
// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
func (o InterceptEndpointGroupOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *InterceptEndpointGroup) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// The cloud location of the endpoint group, currently restricted to `global`.
func (o InterceptEndpointGroupOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *InterceptEndpointGroup) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// (Output)
// The connected deployment group's resource name, for example:
// `projects/123456789/locations/global/interceptDeploymentGroups/my-dg`.
// See https://google.aip.dev/124.
func (o InterceptEndpointGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *InterceptEndpointGroup) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The ID of the project in which the resource belongs.
// If it is not provided, the provider project is used.
func (o InterceptEndpointGroupOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *InterceptEndpointGroup) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The combination of labels configured directly on the resource
// and default labels configured on the provider.
func (o InterceptEndpointGroupOutput) PulumiLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *InterceptEndpointGroup) pulumi.StringMapOutput { return v.PulumiLabels }).(pulumi.StringMapOutput)
}

// The current state of the resource does not match the user's intended state,
// and the system is working to reconcile them. This is part of the normal
// operation (e.g. adding a new association to the group).
// See https://google.aip.dev/128.
func (o InterceptEndpointGroupOutput) Reconciling() pulumi.BoolOutput {
	return o.ApplyT(func(v *InterceptEndpointGroup) pulumi.BoolOutput { return v.Reconciling }).(pulumi.BoolOutput)
}

// (Output)
// The current state of the association in this location.
// Possible values:
// STATE_UNSPECIFIED
// ACTIVE
// OUT_OF_SYNC
func (o InterceptEndpointGroupOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *InterceptEndpointGroup) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// The timestamp when the resource was most recently updated.
// See https://google.aip.dev/148#timestamps.
func (o InterceptEndpointGroupOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *InterceptEndpointGroup) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

type InterceptEndpointGroupArrayOutput struct{ *pulumi.OutputState }

func (InterceptEndpointGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*InterceptEndpointGroup)(nil)).Elem()
}

func (o InterceptEndpointGroupArrayOutput) ToInterceptEndpointGroupArrayOutput() InterceptEndpointGroupArrayOutput {
	return o
}

func (o InterceptEndpointGroupArrayOutput) ToInterceptEndpointGroupArrayOutputWithContext(ctx context.Context) InterceptEndpointGroupArrayOutput {
	return o
}

func (o InterceptEndpointGroupArrayOutput) Index(i pulumi.IntInput) InterceptEndpointGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *InterceptEndpointGroup {
		return vs[0].([]*InterceptEndpointGroup)[vs[1].(int)]
	}).(InterceptEndpointGroupOutput)
}

type InterceptEndpointGroupMapOutput struct{ *pulumi.OutputState }

func (InterceptEndpointGroupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*InterceptEndpointGroup)(nil)).Elem()
}

func (o InterceptEndpointGroupMapOutput) ToInterceptEndpointGroupMapOutput() InterceptEndpointGroupMapOutput {
	return o
}

func (o InterceptEndpointGroupMapOutput) ToInterceptEndpointGroupMapOutputWithContext(ctx context.Context) InterceptEndpointGroupMapOutput {
	return o
}

func (o InterceptEndpointGroupMapOutput) MapIndex(k pulumi.StringInput) InterceptEndpointGroupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *InterceptEndpointGroup {
		return vs[0].(map[string]*InterceptEndpointGroup)[vs[1].(string)]
	}).(InterceptEndpointGroupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InterceptEndpointGroupInput)(nil)).Elem(), &InterceptEndpointGroup{})
	pulumi.RegisterInputType(reflect.TypeOf((*InterceptEndpointGroupArrayInput)(nil)).Elem(), InterceptEndpointGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InterceptEndpointGroupMapInput)(nil)).Elem(), InterceptEndpointGroupMap{})
	pulumi.RegisterOutputType(InterceptEndpointGroupOutput{})
	pulumi.RegisterOutputType(InterceptEndpointGroupArrayOutput{})
	pulumi.RegisterOutputType(InterceptEndpointGroupMapOutput{})
}
