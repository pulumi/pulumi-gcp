// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networksecurity

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ### Network Security Firewall Endpoint Association Basic
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/networksecurity"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := networksecurity.NewFirewallEndpoint(ctx, "default", &networksecurity.FirewallEndpointArgs{
//				Name:     pulumi.String("my-firewall-endpoint"),
//				Parent:   pulumi.String("organizations/123456789"),
//				Location: pulumi.String("us-central1-a"),
//				Labels: pulumi.StringMap{
//					"foo": pulumi.String("bar"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = networksecurity.NewFirewallEndpointAssociation(ctx, "default_association", &networksecurity.FirewallEndpointAssociationArgs{
//				Name:     pulumi.String("my-firewall-endpoint-association"),
//				Parent:   pulumi.String("projects/my-project-name"),
//				Location: pulumi.String("us-central1-a"),
//				Labels: pulumi.StringMap{
//					"foo": pulumi.String("bar"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// FirewallEndpointAssociation can be imported using any of these accepted formats:
//
// * `{{parent}}/locations/{{location}}/firewallEndpointAssociations/{{name}}`
//
// When using the `pulumi import` command, FirewallEndpointAssociation can be imported using one of the formats above. For example:
//
// ```sh
// $ pulumi import gcp:networksecurity/firewallEndpointAssociation:FirewallEndpointAssociation default {{parent}}/locations/{{location}}/firewallEndpointAssociations/{{name}}
// ```
type FirewallEndpointAssociation struct {
	pulumi.CustomResourceState

	// Time the firewall endpoint was created in UTC.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
	EffectiveLabels pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	// The URL of the firewall endpoint that is being associated.
	FirewallEndpoint pulumi.StringOutput `pulumi:"firewallEndpoint"`
	// A map of key/value label pairs to assign to the resource.
	//
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// The location (zone) of the firewall endpoint association.
	//
	// ***
	Location pulumi.StringOutput `pulumi:"location"`
	// The name of the firewall endpoint association resource.
	Name pulumi.StringOutput `pulumi:"name"`
	// The URL of the network that is being associated.
	Network pulumi.StringOutput `pulumi:"network"`
	// The name of the parent this firewall endpoint association belongs to.
	// Format: projects/{project_id}.
	Parent pulumi.StringPtrOutput `pulumi:"parent"`
	// The combination of labels configured directly on the resource
	// and default labels configured on the provider.
	PulumiLabels pulumi.StringMapOutput `pulumi:"pulumiLabels"`
	// Whether reconciling is in progress, recommended per https://google.aip.dev/128.
	Reconciling pulumi.BoolOutput `pulumi:"reconciling"`
	// Server-defined URL of this resource.
	SelfLink pulumi.StringOutput `pulumi:"selfLink"`
	// The current state of the endpoint.
	State pulumi.StringOutput `pulumi:"state"`
	// The URL of the TlsInspectionPolicy that is being associated.
	TlsInspectionPolicy pulumi.StringPtrOutput `pulumi:"tlsInspectionPolicy"`
	// Time the firewall endpoint was updated in UTC.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewFirewallEndpointAssociation registers a new resource with the given unique name, arguments, and options.
func NewFirewallEndpointAssociation(ctx *pulumi.Context,
	name string, args *FirewallEndpointAssociationArgs, opts ...pulumi.ResourceOption) (*FirewallEndpointAssociation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FirewallEndpoint == nil {
		return nil, errors.New("invalid value for required argument 'FirewallEndpoint'")
	}
	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	if args.Network == nil {
		return nil, errors.New("invalid value for required argument 'Network'")
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"effectiveLabels",
		"pulumiLabels",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FirewallEndpointAssociation
	err := ctx.RegisterResource("gcp:networksecurity/firewallEndpointAssociation:FirewallEndpointAssociation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFirewallEndpointAssociation gets an existing FirewallEndpointAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFirewallEndpointAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FirewallEndpointAssociationState, opts ...pulumi.ResourceOption) (*FirewallEndpointAssociation, error) {
	var resource FirewallEndpointAssociation
	err := ctx.ReadResource("gcp:networksecurity/firewallEndpointAssociation:FirewallEndpointAssociation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FirewallEndpointAssociation resources.
type firewallEndpointAssociationState struct {
	// Time the firewall endpoint was created in UTC.
	CreateTime *string `pulumi:"createTime"`
	// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
	EffectiveLabels map[string]string `pulumi:"effectiveLabels"`
	// The URL of the firewall endpoint that is being associated.
	FirewallEndpoint *string `pulumi:"firewallEndpoint"`
	// A map of key/value label pairs to assign to the resource.
	//
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// The location (zone) of the firewall endpoint association.
	//
	// ***
	Location *string `pulumi:"location"`
	// The name of the firewall endpoint association resource.
	Name *string `pulumi:"name"`
	// The URL of the network that is being associated.
	Network *string `pulumi:"network"`
	// The name of the parent this firewall endpoint association belongs to.
	// Format: projects/{project_id}.
	Parent *string `pulumi:"parent"`
	// The combination of labels configured directly on the resource
	// and default labels configured on the provider.
	PulumiLabels map[string]string `pulumi:"pulumiLabels"`
	// Whether reconciling is in progress, recommended per https://google.aip.dev/128.
	Reconciling *bool `pulumi:"reconciling"`
	// Server-defined URL of this resource.
	SelfLink *string `pulumi:"selfLink"`
	// The current state of the endpoint.
	State *string `pulumi:"state"`
	// The URL of the TlsInspectionPolicy that is being associated.
	TlsInspectionPolicy *string `pulumi:"tlsInspectionPolicy"`
	// Time the firewall endpoint was updated in UTC.
	UpdateTime *string `pulumi:"updateTime"`
}

type FirewallEndpointAssociationState struct {
	// Time the firewall endpoint was created in UTC.
	CreateTime pulumi.StringPtrInput
	// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
	EffectiveLabels pulumi.StringMapInput
	// The URL of the firewall endpoint that is being associated.
	FirewallEndpoint pulumi.StringPtrInput
	// A map of key/value label pairs to assign to the resource.
	//
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// The location (zone) of the firewall endpoint association.
	//
	// ***
	Location pulumi.StringPtrInput
	// The name of the firewall endpoint association resource.
	Name pulumi.StringPtrInput
	// The URL of the network that is being associated.
	Network pulumi.StringPtrInput
	// The name of the parent this firewall endpoint association belongs to.
	// Format: projects/{project_id}.
	Parent pulumi.StringPtrInput
	// The combination of labels configured directly on the resource
	// and default labels configured on the provider.
	PulumiLabels pulumi.StringMapInput
	// Whether reconciling is in progress, recommended per https://google.aip.dev/128.
	Reconciling pulumi.BoolPtrInput
	// Server-defined URL of this resource.
	SelfLink pulumi.StringPtrInput
	// The current state of the endpoint.
	State pulumi.StringPtrInput
	// The URL of the TlsInspectionPolicy that is being associated.
	TlsInspectionPolicy pulumi.StringPtrInput
	// Time the firewall endpoint was updated in UTC.
	UpdateTime pulumi.StringPtrInput
}

func (FirewallEndpointAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallEndpointAssociationState)(nil)).Elem()
}

type firewallEndpointAssociationArgs struct {
	// The URL of the firewall endpoint that is being associated.
	FirewallEndpoint string `pulumi:"firewallEndpoint"`
	// A map of key/value label pairs to assign to the resource.
	//
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// The location (zone) of the firewall endpoint association.
	//
	// ***
	Location string `pulumi:"location"`
	// The name of the firewall endpoint association resource.
	Name *string `pulumi:"name"`
	// The URL of the network that is being associated.
	Network string `pulumi:"network"`
	// The name of the parent this firewall endpoint association belongs to.
	// Format: projects/{project_id}.
	Parent *string `pulumi:"parent"`
	// The URL of the TlsInspectionPolicy that is being associated.
	TlsInspectionPolicy *string `pulumi:"tlsInspectionPolicy"`
}

// The set of arguments for constructing a FirewallEndpointAssociation resource.
type FirewallEndpointAssociationArgs struct {
	// The URL of the firewall endpoint that is being associated.
	FirewallEndpoint pulumi.StringInput
	// A map of key/value label pairs to assign to the resource.
	//
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// The location (zone) of the firewall endpoint association.
	//
	// ***
	Location pulumi.StringInput
	// The name of the firewall endpoint association resource.
	Name pulumi.StringPtrInput
	// The URL of the network that is being associated.
	Network pulumi.StringInput
	// The name of the parent this firewall endpoint association belongs to.
	// Format: projects/{project_id}.
	Parent pulumi.StringPtrInput
	// The URL of the TlsInspectionPolicy that is being associated.
	TlsInspectionPolicy pulumi.StringPtrInput
}

func (FirewallEndpointAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallEndpointAssociationArgs)(nil)).Elem()
}

type FirewallEndpointAssociationInput interface {
	pulumi.Input

	ToFirewallEndpointAssociationOutput() FirewallEndpointAssociationOutput
	ToFirewallEndpointAssociationOutputWithContext(ctx context.Context) FirewallEndpointAssociationOutput
}

func (*FirewallEndpointAssociation) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallEndpointAssociation)(nil)).Elem()
}

func (i *FirewallEndpointAssociation) ToFirewallEndpointAssociationOutput() FirewallEndpointAssociationOutput {
	return i.ToFirewallEndpointAssociationOutputWithContext(context.Background())
}

func (i *FirewallEndpointAssociation) ToFirewallEndpointAssociationOutputWithContext(ctx context.Context) FirewallEndpointAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallEndpointAssociationOutput)
}

// FirewallEndpointAssociationArrayInput is an input type that accepts FirewallEndpointAssociationArray and FirewallEndpointAssociationArrayOutput values.
// You can construct a concrete instance of `FirewallEndpointAssociationArrayInput` via:
//
//	FirewallEndpointAssociationArray{ FirewallEndpointAssociationArgs{...} }
type FirewallEndpointAssociationArrayInput interface {
	pulumi.Input

	ToFirewallEndpointAssociationArrayOutput() FirewallEndpointAssociationArrayOutput
	ToFirewallEndpointAssociationArrayOutputWithContext(context.Context) FirewallEndpointAssociationArrayOutput
}

type FirewallEndpointAssociationArray []FirewallEndpointAssociationInput

func (FirewallEndpointAssociationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallEndpointAssociation)(nil)).Elem()
}

func (i FirewallEndpointAssociationArray) ToFirewallEndpointAssociationArrayOutput() FirewallEndpointAssociationArrayOutput {
	return i.ToFirewallEndpointAssociationArrayOutputWithContext(context.Background())
}

func (i FirewallEndpointAssociationArray) ToFirewallEndpointAssociationArrayOutputWithContext(ctx context.Context) FirewallEndpointAssociationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallEndpointAssociationArrayOutput)
}

// FirewallEndpointAssociationMapInput is an input type that accepts FirewallEndpointAssociationMap and FirewallEndpointAssociationMapOutput values.
// You can construct a concrete instance of `FirewallEndpointAssociationMapInput` via:
//
//	FirewallEndpointAssociationMap{ "key": FirewallEndpointAssociationArgs{...} }
type FirewallEndpointAssociationMapInput interface {
	pulumi.Input

	ToFirewallEndpointAssociationMapOutput() FirewallEndpointAssociationMapOutput
	ToFirewallEndpointAssociationMapOutputWithContext(context.Context) FirewallEndpointAssociationMapOutput
}

type FirewallEndpointAssociationMap map[string]FirewallEndpointAssociationInput

func (FirewallEndpointAssociationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallEndpointAssociation)(nil)).Elem()
}

func (i FirewallEndpointAssociationMap) ToFirewallEndpointAssociationMapOutput() FirewallEndpointAssociationMapOutput {
	return i.ToFirewallEndpointAssociationMapOutputWithContext(context.Background())
}

func (i FirewallEndpointAssociationMap) ToFirewallEndpointAssociationMapOutputWithContext(ctx context.Context) FirewallEndpointAssociationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallEndpointAssociationMapOutput)
}

type FirewallEndpointAssociationOutput struct{ *pulumi.OutputState }

func (FirewallEndpointAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallEndpointAssociation)(nil)).Elem()
}

func (o FirewallEndpointAssociationOutput) ToFirewallEndpointAssociationOutput() FirewallEndpointAssociationOutput {
	return o
}

func (o FirewallEndpointAssociationOutput) ToFirewallEndpointAssociationOutputWithContext(ctx context.Context) FirewallEndpointAssociationOutput {
	return o
}

// Time the firewall endpoint was created in UTC.
func (o FirewallEndpointAssociationOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallEndpointAssociation) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
func (o FirewallEndpointAssociationOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *FirewallEndpointAssociation) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// The URL of the firewall endpoint that is being associated.
func (o FirewallEndpointAssociationOutput) FirewallEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallEndpointAssociation) pulumi.StringOutput { return v.FirewallEndpoint }).(pulumi.StringOutput)
}

// A map of key/value label pairs to assign to the resource.
//
// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
func (o FirewallEndpointAssociationOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *FirewallEndpointAssociation) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// The location (zone) of the firewall endpoint association.
//
// ***
func (o FirewallEndpointAssociationOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallEndpointAssociation) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name of the firewall endpoint association resource.
func (o FirewallEndpointAssociationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallEndpointAssociation) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The URL of the network that is being associated.
func (o FirewallEndpointAssociationOutput) Network() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallEndpointAssociation) pulumi.StringOutput { return v.Network }).(pulumi.StringOutput)
}

// The name of the parent this firewall endpoint association belongs to.
// Format: projects/{project_id}.
func (o FirewallEndpointAssociationOutput) Parent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallEndpointAssociation) pulumi.StringPtrOutput { return v.Parent }).(pulumi.StringPtrOutput)
}

// The combination of labels configured directly on the resource
// and default labels configured on the provider.
func (o FirewallEndpointAssociationOutput) PulumiLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *FirewallEndpointAssociation) pulumi.StringMapOutput { return v.PulumiLabels }).(pulumi.StringMapOutput)
}

// Whether reconciling is in progress, recommended per https://google.aip.dev/128.
func (o FirewallEndpointAssociationOutput) Reconciling() pulumi.BoolOutput {
	return o.ApplyT(func(v *FirewallEndpointAssociation) pulumi.BoolOutput { return v.Reconciling }).(pulumi.BoolOutput)
}

// Server-defined URL of this resource.
func (o FirewallEndpointAssociationOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallEndpointAssociation) pulumi.StringOutput { return v.SelfLink }).(pulumi.StringOutput)
}

// The current state of the endpoint.
func (o FirewallEndpointAssociationOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallEndpointAssociation) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// The URL of the TlsInspectionPolicy that is being associated.
func (o FirewallEndpointAssociationOutput) TlsInspectionPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallEndpointAssociation) pulumi.StringPtrOutput { return v.TlsInspectionPolicy }).(pulumi.StringPtrOutput)
}

// Time the firewall endpoint was updated in UTC.
func (o FirewallEndpointAssociationOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallEndpointAssociation) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

type FirewallEndpointAssociationArrayOutput struct{ *pulumi.OutputState }

func (FirewallEndpointAssociationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallEndpointAssociation)(nil)).Elem()
}

func (o FirewallEndpointAssociationArrayOutput) ToFirewallEndpointAssociationArrayOutput() FirewallEndpointAssociationArrayOutput {
	return o
}

func (o FirewallEndpointAssociationArrayOutput) ToFirewallEndpointAssociationArrayOutputWithContext(ctx context.Context) FirewallEndpointAssociationArrayOutput {
	return o
}

func (o FirewallEndpointAssociationArrayOutput) Index(i pulumi.IntInput) FirewallEndpointAssociationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FirewallEndpointAssociation {
		return vs[0].([]*FirewallEndpointAssociation)[vs[1].(int)]
	}).(FirewallEndpointAssociationOutput)
}

type FirewallEndpointAssociationMapOutput struct{ *pulumi.OutputState }

func (FirewallEndpointAssociationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallEndpointAssociation)(nil)).Elem()
}

func (o FirewallEndpointAssociationMapOutput) ToFirewallEndpointAssociationMapOutput() FirewallEndpointAssociationMapOutput {
	return o
}

func (o FirewallEndpointAssociationMapOutput) ToFirewallEndpointAssociationMapOutputWithContext(ctx context.Context) FirewallEndpointAssociationMapOutput {
	return o
}

func (o FirewallEndpointAssociationMapOutput) MapIndex(k pulumi.StringInput) FirewallEndpointAssociationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FirewallEndpointAssociation {
		return vs[0].(map[string]*FirewallEndpointAssociation)[vs[1].(string)]
	}).(FirewallEndpointAssociationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallEndpointAssociationInput)(nil)).Elem(), &FirewallEndpointAssociation{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallEndpointAssociationArrayInput)(nil)).Elem(), FirewallEndpointAssociationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallEndpointAssociationMapInput)(nil)).Elem(), FirewallEndpointAssociationMap{})
	pulumi.RegisterOutputType(FirewallEndpointAssociationOutput{})
	pulumi.RegisterOutputType(FirewallEndpointAssociationArrayOutput{})
	pulumi.RegisterOutputType(FirewallEndpointAssociationMapOutput{})
}
