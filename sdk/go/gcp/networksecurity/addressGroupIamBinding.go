// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networksecurity

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AddressGroupIamBinding struct {
	pulumi.CustomResourceState

	Condition AddressGroupIamBindingConditionPtrOutput `pulumi:"condition"`
	Etag      pulumi.StringOutput                      `pulumi:"etag"`
	Location  pulumi.StringOutput                      `pulumi:"location"`
	Members   pulumi.StringArrayOutput                 `pulumi:"members"`
	Name      pulumi.StringOutput                      `pulumi:"name"`
	Project   pulumi.StringOutput                      `pulumi:"project"`
	Role      pulumi.StringOutput                      `pulumi:"role"`
}

// NewAddressGroupIamBinding registers a new resource with the given unique name, arguments, and options.
func NewAddressGroupIamBinding(ctx *pulumi.Context,
	name string, args *AddressGroupIamBindingArgs, opts ...pulumi.ResourceOption) (*AddressGroupIamBinding, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Members == nil {
		return nil, errors.New("invalid value for required argument 'Members'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AddressGroupIamBinding
	err := ctx.RegisterResource("gcp:networksecurity/addressGroupIamBinding:AddressGroupIamBinding", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAddressGroupIamBinding gets an existing AddressGroupIamBinding resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAddressGroupIamBinding(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AddressGroupIamBindingState, opts ...pulumi.ResourceOption) (*AddressGroupIamBinding, error) {
	var resource AddressGroupIamBinding
	err := ctx.ReadResource("gcp:networksecurity/addressGroupIamBinding:AddressGroupIamBinding", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AddressGroupIamBinding resources.
type addressGroupIamBindingState struct {
	Condition *AddressGroupIamBindingCondition `pulumi:"condition"`
	Etag      *string                          `pulumi:"etag"`
	Location  *string                          `pulumi:"location"`
	Members   []string                         `pulumi:"members"`
	Name      *string                          `pulumi:"name"`
	Project   *string                          `pulumi:"project"`
	Role      *string                          `pulumi:"role"`
}

type AddressGroupIamBindingState struct {
	Condition AddressGroupIamBindingConditionPtrInput
	Etag      pulumi.StringPtrInput
	Location  pulumi.StringPtrInput
	Members   pulumi.StringArrayInput
	Name      pulumi.StringPtrInput
	Project   pulumi.StringPtrInput
	Role      pulumi.StringPtrInput
}

func (AddressGroupIamBindingState) ElementType() reflect.Type {
	return reflect.TypeOf((*addressGroupIamBindingState)(nil)).Elem()
}

type addressGroupIamBindingArgs struct {
	Condition *AddressGroupIamBindingCondition `pulumi:"condition"`
	Location  *string                          `pulumi:"location"`
	Members   []string                         `pulumi:"members"`
	Name      *string                          `pulumi:"name"`
	Project   *string                          `pulumi:"project"`
	Role      string                           `pulumi:"role"`
}

// The set of arguments for constructing a AddressGroupIamBinding resource.
type AddressGroupIamBindingArgs struct {
	Condition AddressGroupIamBindingConditionPtrInput
	Location  pulumi.StringPtrInput
	Members   pulumi.StringArrayInput
	Name      pulumi.StringPtrInput
	Project   pulumi.StringPtrInput
	Role      pulumi.StringInput
}

func (AddressGroupIamBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*addressGroupIamBindingArgs)(nil)).Elem()
}

type AddressGroupIamBindingInput interface {
	pulumi.Input

	ToAddressGroupIamBindingOutput() AddressGroupIamBindingOutput
	ToAddressGroupIamBindingOutputWithContext(ctx context.Context) AddressGroupIamBindingOutput
}

func (*AddressGroupIamBinding) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressGroupIamBinding)(nil)).Elem()
}

func (i *AddressGroupIamBinding) ToAddressGroupIamBindingOutput() AddressGroupIamBindingOutput {
	return i.ToAddressGroupIamBindingOutputWithContext(context.Background())
}

func (i *AddressGroupIamBinding) ToAddressGroupIamBindingOutputWithContext(ctx context.Context) AddressGroupIamBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressGroupIamBindingOutput)
}

// AddressGroupIamBindingArrayInput is an input type that accepts AddressGroupIamBindingArray and AddressGroupIamBindingArrayOutput values.
// You can construct a concrete instance of `AddressGroupIamBindingArrayInput` via:
//
//	AddressGroupIamBindingArray{ AddressGroupIamBindingArgs{...} }
type AddressGroupIamBindingArrayInput interface {
	pulumi.Input

	ToAddressGroupIamBindingArrayOutput() AddressGroupIamBindingArrayOutput
	ToAddressGroupIamBindingArrayOutputWithContext(context.Context) AddressGroupIamBindingArrayOutput
}

type AddressGroupIamBindingArray []AddressGroupIamBindingInput

func (AddressGroupIamBindingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AddressGroupIamBinding)(nil)).Elem()
}

func (i AddressGroupIamBindingArray) ToAddressGroupIamBindingArrayOutput() AddressGroupIamBindingArrayOutput {
	return i.ToAddressGroupIamBindingArrayOutputWithContext(context.Background())
}

func (i AddressGroupIamBindingArray) ToAddressGroupIamBindingArrayOutputWithContext(ctx context.Context) AddressGroupIamBindingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressGroupIamBindingArrayOutput)
}

// AddressGroupIamBindingMapInput is an input type that accepts AddressGroupIamBindingMap and AddressGroupIamBindingMapOutput values.
// You can construct a concrete instance of `AddressGroupIamBindingMapInput` via:
//
//	AddressGroupIamBindingMap{ "key": AddressGroupIamBindingArgs{...} }
type AddressGroupIamBindingMapInput interface {
	pulumi.Input

	ToAddressGroupIamBindingMapOutput() AddressGroupIamBindingMapOutput
	ToAddressGroupIamBindingMapOutputWithContext(context.Context) AddressGroupIamBindingMapOutput
}

type AddressGroupIamBindingMap map[string]AddressGroupIamBindingInput

func (AddressGroupIamBindingMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AddressGroupIamBinding)(nil)).Elem()
}

func (i AddressGroupIamBindingMap) ToAddressGroupIamBindingMapOutput() AddressGroupIamBindingMapOutput {
	return i.ToAddressGroupIamBindingMapOutputWithContext(context.Background())
}

func (i AddressGroupIamBindingMap) ToAddressGroupIamBindingMapOutputWithContext(ctx context.Context) AddressGroupIamBindingMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressGroupIamBindingMapOutput)
}

type AddressGroupIamBindingOutput struct{ *pulumi.OutputState }

func (AddressGroupIamBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressGroupIamBinding)(nil)).Elem()
}

func (o AddressGroupIamBindingOutput) ToAddressGroupIamBindingOutput() AddressGroupIamBindingOutput {
	return o
}

func (o AddressGroupIamBindingOutput) ToAddressGroupIamBindingOutputWithContext(ctx context.Context) AddressGroupIamBindingOutput {
	return o
}

func (o AddressGroupIamBindingOutput) Condition() AddressGroupIamBindingConditionPtrOutput {
	return o.ApplyT(func(v *AddressGroupIamBinding) AddressGroupIamBindingConditionPtrOutput { return v.Condition }).(AddressGroupIamBindingConditionPtrOutput)
}

func (o AddressGroupIamBindingOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *AddressGroupIamBinding) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o AddressGroupIamBindingOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *AddressGroupIamBinding) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

func (o AddressGroupIamBindingOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AddressGroupIamBinding) pulumi.StringArrayOutput { return v.Members }).(pulumi.StringArrayOutput)
}

func (o AddressGroupIamBindingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AddressGroupIamBinding) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o AddressGroupIamBindingOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *AddressGroupIamBinding) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o AddressGroupIamBindingOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *AddressGroupIamBinding) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

type AddressGroupIamBindingArrayOutput struct{ *pulumi.OutputState }

func (AddressGroupIamBindingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AddressGroupIamBinding)(nil)).Elem()
}

func (o AddressGroupIamBindingArrayOutput) ToAddressGroupIamBindingArrayOutput() AddressGroupIamBindingArrayOutput {
	return o
}

func (o AddressGroupIamBindingArrayOutput) ToAddressGroupIamBindingArrayOutputWithContext(ctx context.Context) AddressGroupIamBindingArrayOutput {
	return o
}

func (o AddressGroupIamBindingArrayOutput) Index(i pulumi.IntInput) AddressGroupIamBindingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AddressGroupIamBinding {
		return vs[0].([]*AddressGroupIamBinding)[vs[1].(int)]
	}).(AddressGroupIamBindingOutput)
}

type AddressGroupIamBindingMapOutput struct{ *pulumi.OutputState }

func (AddressGroupIamBindingMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AddressGroupIamBinding)(nil)).Elem()
}

func (o AddressGroupIamBindingMapOutput) ToAddressGroupIamBindingMapOutput() AddressGroupIamBindingMapOutput {
	return o
}

func (o AddressGroupIamBindingMapOutput) ToAddressGroupIamBindingMapOutputWithContext(ctx context.Context) AddressGroupIamBindingMapOutput {
	return o
}

func (o AddressGroupIamBindingMapOutput) MapIndex(k pulumi.StringInput) AddressGroupIamBindingOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AddressGroupIamBinding {
		return vs[0].(map[string]*AddressGroupIamBinding)[vs[1].(string)]
	}).(AddressGroupIamBindingOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AddressGroupIamBindingInput)(nil)).Elem(), &AddressGroupIamBinding{})
	pulumi.RegisterInputType(reflect.TypeOf((*AddressGroupIamBindingArrayInput)(nil)).Elem(), AddressGroupIamBindingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AddressGroupIamBindingMapInput)(nil)).Elem(), AddressGroupIamBindingMap{})
	pulumi.RegisterOutputType(AddressGroupIamBindingOutput{})
	pulumi.RegisterOutputType(AddressGroupIamBindingArrayOutput{})
	pulumi.RegisterOutputType(AddressGroupIamBindingMapOutput{})
}
