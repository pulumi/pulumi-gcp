// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package modelarmor

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Model Armor floor settings define rules that dictate minimum requirements for all Model Armor templates created at a specific point in the Google Cloud resource hierarchy (that is, at an organization, folder, or project level). If there are
// multiple floor settings that conflict with each other, the settings lower in the resource hierarchy take precedence
// For more information, checkout https://cloud.google.com/security-command-center/docs/model_armor_floor_settings
//
// ## Example Usage
//
// ### Modelarmor Floorsetting Basic
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/modelarmor"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := modelarmor.NewFloorsetting(ctx, "floorsetting-basic", &modelarmor.FloorsettingArgs{
//				Parent:       pulumi.String("projects/my-project-name"),
//				Location:     pulumi.String("global"),
//				FilterConfig: &modelarmor.FloorsettingFilterConfigArgs{},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Modelarmor Floorsetting Filter Config
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/modelarmor"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := modelarmor.NewFloorsetting(ctx, "floorsetting-filter-config", &modelarmor.FloorsettingArgs{
//				Location: pulumi.String("global"),
//				Parent:   pulumi.String("project/my-project-name"),
//				FilterConfig: &modelarmor.FloorsettingFilterConfigArgs{
//					RaiSettings: &modelarmor.FloorsettingFilterConfigRaiSettingsArgs{
//						RaiFilters: modelarmor.FloorsettingFilterConfigRaiSettingsRaiFilterArray{
//							&modelarmor.FloorsettingFilterConfigRaiSettingsRaiFilterArgs{
//								FilterType:      pulumi.String("DANGEROUS"),
//								ConfidenceLevel: pulumi.String("MEDIUM_AND_ABOVE"),
//							},
//						},
//					},
//					SdpSettings: &modelarmor.FloorsettingFilterConfigSdpSettingsArgs{
//						BasicConfig: &modelarmor.FloorsettingFilterConfigSdpSettingsBasicConfigArgs{
//							FilterEnforcement: pulumi.String("ENABLED"),
//						},
//					},
//					PiAndJailbreakFilterSettings: &modelarmor.FloorsettingFilterConfigPiAndJailbreakFilterSettingsArgs{
//						FilterEnforcement: pulumi.String("ENABLED"),
//						ConfidenceLevel:   pulumi.String("HIGH"),
//					},
//					MaliciousUriFilterSettings: &modelarmor.FloorsettingFilterConfigMaliciousUriFilterSettingsArgs{
//						FilterEnforcement: pulumi.String("ENABLED"),
//					},
//				},
//				EnableFloorSettingEnforcement: pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Modelarmor Floorsetting Ai Platform Metadata
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/modelarmor"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := modelarmor.NewFloorsetting(ctx, "floorsetting-integrated-metadata", &modelarmor.FloorsettingArgs{
//				Location:                      pulumi.String("global"),
//				Parent:                        pulumi.String("projects/my-project-name"),
//				FilterConfig:                  &modelarmor.FloorsettingFilterConfigArgs{},
//				EnableFloorSettingEnforcement: pulumi.Bool(false),
//				AiPlatformFloorSetting: &modelarmor.FloorsettingAiPlatformFloorSettingArgs{
//					InspectOnly:        pulumi.Bool(true),
//					EnableCloudLogging: pulumi.Bool(true),
//				},
//				FloorSettingMetadata: &modelarmor.FloorsettingFloorSettingMetadataArgs{
//					MultiLanguageDetection: &modelarmor.FloorsettingFloorSettingMetadataMultiLanguageDetectionArgs{
//						EnableMultiLanguageDetection: pulumi.Bool(false),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Floorsetting can be imported using any of these accepted formats:
//
// * `{{parent}}/locations/{{location}}/floorSetting`
//
// * `{{parent}}/{{location}}`
//
// When using the `pulumi import` command, Floorsetting can be imported using one of the formats above. For example:
//
// ```sh
// $ pulumi import gcp:modelarmor/floorsetting:Floorsetting default {{parent}}/locations/{{location}}/floorSetting
// ```
//
// ```sh
// $ pulumi import gcp:modelarmor/floorsetting:Floorsetting default {{parent}}/{{location}}
// ```
type Floorsetting struct {
	pulumi.CustomResourceState

	// AI Platform floor setting.
	// Structure is documented below.
	AiPlatformFloorSetting FloorsettingAiPlatformFloorSettingPtrOutput `pulumi:"aiPlatformFloorSetting"`
	// [Output only] Create timestamp
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Floor Settings enforcement status.
	EnableFloorSettingEnforcement pulumi.BoolPtrOutput `pulumi:"enableFloorSettingEnforcement"`
	// Filters configuration.
	// Structure is documented below.
	FilterConfig FloorsettingFilterConfigOutput `pulumi:"filterConfig"`
	// Metadata to enable multi language detection via floor setting.
	// Structure is documented below.
	FloorSettingMetadata FloorsettingFloorSettingMetadataPtrOutput `pulumi:"floorSettingMetadata"`
	// List of integrated services for which the floor setting is applicable.
	IntegratedServices pulumi.StringArrayOutput `pulumi:"integratedServices"`
	// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
	Location pulumi.StringOutput `pulumi:"location"`
	// Identifier. The resource name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Will be any one of these:
	// * `projects/{project}`
	// * `folders/{folder}`
	// * `organizations/{organizationId}`
	Parent pulumi.StringOutput `pulumi:"parent"`
	// [Output only] Update timestamp
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewFloorsetting registers a new resource with the given unique name, arguments, and options.
func NewFloorsetting(ctx *pulumi.Context,
	name string, args *FloorsettingArgs, opts ...pulumi.ResourceOption) (*Floorsetting, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FilterConfig == nil {
		return nil, errors.New("invalid value for required argument 'FilterConfig'")
	}
	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	if args.Parent == nil {
		return nil, errors.New("invalid value for required argument 'Parent'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Floorsetting
	err := ctx.RegisterResource("gcp:modelarmor/floorsetting:Floorsetting", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFloorsetting gets an existing Floorsetting resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFloorsetting(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FloorsettingState, opts ...pulumi.ResourceOption) (*Floorsetting, error) {
	var resource Floorsetting
	err := ctx.ReadResource("gcp:modelarmor/floorsetting:Floorsetting", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Floorsetting resources.
type floorsettingState struct {
	// AI Platform floor setting.
	// Structure is documented below.
	AiPlatformFloorSetting *FloorsettingAiPlatformFloorSetting `pulumi:"aiPlatformFloorSetting"`
	// [Output only] Create timestamp
	CreateTime *string `pulumi:"createTime"`
	// Floor Settings enforcement status.
	EnableFloorSettingEnforcement *bool `pulumi:"enableFloorSettingEnforcement"`
	// Filters configuration.
	// Structure is documented below.
	FilterConfig *FloorsettingFilterConfig `pulumi:"filterConfig"`
	// Metadata to enable multi language detection via floor setting.
	// Structure is documented below.
	FloorSettingMetadata *FloorsettingFloorSettingMetadata `pulumi:"floorSettingMetadata"`
	// List of integrated services for which the floor setting is applicable.
	IntegratedServices []string `pulumi:"integratedServices"`
	// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
	Location *string `pulumi:"location"`
	// Identifier. The resource name.
	Name *string `pulumi:"name"`
	// Will be any one of these:
	// * `projects/{project}`
	// * `folders/{folder}`
	// * `organizations/{organizationId}`
	Parent *string `pulumi:"parent"`
	// [Output only] Update timestamp
	UpdateTime *string `pulumi:"updateTime"`
}

type FloorsettingState struct {
	// AI Platform floor setting.
	// Structure is documented below.
	AiPlatformFloorSetting FloorsettingAiPlatformFloorSettingPtrInput
	// [Output only] Create timestamp
	CreateTime pulumi.StringPtrInput
	// Floor Settings enforcement status.
	EnableFloorSettingEnforcement pulumi.BoolPtrInput
	// Filters configuration.
	// Structure is documented below.
	FilterConfig FloorsettingFilterConfigPtrInput
	// Metadata to enable multi language detection via floor setting.
	// Structure is documented below.
	FloorSettingMetadata FloorsettingFloorSettingMetadataPtrInput
	// List of integrated services for which the floor setting is applicable.
	IntegratedServices pulumi.StringArrayInput
	// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
	Location pulumi.StringPtrInput
	// Identifier. The resource name.
	Name pulumi.StringPtrInput
	// Will be any one of these:
	// * `projects/{project}`
	// * `folders/{folder}`
	// * `organizations/{organizationId}`
	Parent pulumi.StringPtrInput
	// [Output only] Update timestamp
	UpdateTime pulumi.StringPtrInput
}

func (FloorsettingState) ElementType() reflect.Type {
	return reflect.TypeOf((*floorsettingState)(nil)).Elem()
}

type floorsettingArgs struct {
	// AI Platform floor setting.
	// Structure is documented below.
	AiPlatformFloorSetting *FloorsettingAiPlatformFloorSetting `pulumi:"aiPlatformFloorSetting"`
	// Floor Settings enforcement status.
	EnableFloorSettingEnforcement *bool `pulumi:"enableFloorSettingEnforcement"`
	// Filters configuration.
	// Structure is documented below.
	FilterConfig FloorsettingFilterConfig `pulumi:"filterConfig"`
	// Metadata to enable multi language detection via floor setting.
	// Structure is documented below.
	FloorSettingMetadata *FloorsettingFloorSettingMetadata `pulumi:"floorSettingMetadata"`
	// List of integrated services for which the floor setting is applicable.
	IntegratedServices []string `pulumi:"integratedServices"`
	// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
	Location string `pulumi:"location"`
	// Will be any one of these:
	// * `projects/{project}`
	// * `folders/{folder}`
	// * `organizations/{organizationId}`
	Parent string `pulumi:"parent"`
}

// The set of arguments for constructing a Floorsetting resource.
type FloorsettingArgs struct {
	// AI Platform floor setting.
	// Structure is documented below.
	AiPlatformFloorSetting FloorsettingAiPlatformFloorSettingPtrInput
	// Floor Settings enforcement status.
	EnableFloorSettingEnforcement pulumi.BoolPtrInput
	// Filters configuration.
	// Structure is documented below.
	FilterConfig FloorsettingFilterConfigInput
	// Metadata to enable multi language detection via floor setting.
	// Structure is documented below.
	FloorSettingMetadata FloorsettingFloorSettingMetadataPtrInput
	// List of integrated services for which the floor setting is applicable.
	IntegratedServices pulumi.StringArrayInput
	// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
	Location pulumi.StringInput
	// Will be any one of these:
	// * `projects/{project}`
	// * `folders/{folder}`
	// * `organizations/{organizationId}`
	Parent pulumi.StringInput
}

func (FloorsettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*floorsettingArgs)(nil)).Elem()
}

type FloorsettingInput interface {
	pulumi.Input

	ToFloorsettingOutput() FloorsettingOutput
	ToFloorsettingOutputWithContext(ctx context.Context) FloorsettingOutput
}

func (*Floorsetting) ElementType() reflect.Type {
	return reflect.TypeOf((**Floorsetting)(nil)).Elem()
}

func (i *Floorsetting) ToFloorsettingOutput() FloorsettingOutput {
	return i.ToFloorsettingOutputWithContext(context.Background())
}

func (i *Floorsetting) ToFloorsettingOutputWithContext(ctx context.Context) FloorsettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FloorsettingOutput)
}

// FloorsettingArrayInput is an input type that accepts FloorsettingArray and FloorsettingArrayOutput values.
// You can construct a concrete instance of `FloorsettingArrayInput` via:
//
//	FloorsettingArray{ FloorsettingArgs{...} }
type FloorsettingArrayInput interface {
	pulumi.Input

	ToFloorsettingArrayOutput() FloorsettingArrayOutput
	ToFloorsettingArrayOutputWithContext(context.Context) FloorsettingArrayOutput
}

type FloorsettingArray []FloorsettingInput

func (FloorsettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Floorsetting)(nil)).Elem()
}

func (i FloorsettingArray) ToFloorsettingArrayOutput() FloorsettingArrayOutput {
	return i.ToFloorsettingArrayOutputWithContext(context.Background())
}

func (i FloorsettingArray) ToFloorsettingArrayOutputWithContext(ctx context.Context) FloorsettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FloorsettingArrayOutput)
}

// FloorsettingMapInput is an input type that accepts FloorsettingMap and FloorsettingMapOutput values.
// You can construct a concrete instance of `FloorsettingMapInput` via:
//
//	FloorsettingMap{ "key": FloorsettingArgs{...} }
type FloorsettingMapInput interface {
	pulumi.Input

	ToFloorsettingMapOutput() FloorsettingMapOutput
	ToFloorsettingMapOutputWithContext(context.Context) FloorsettingMapOutput
}

type FloorsettingMap map[string]FloorsettingInput

func (FloorsettingMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Floorsetting)(nil)).Elem()
}

func (i FloorsettingMap) ToFloorsettingMapOutput() FloorsettingMapOutput {
	return i.ToFloorsettingMapOutputWithContext(context.Background())
}

func (i FloorsettingMap) ToFloorsettingMapOutputWithContext(ctx context.Context) FloorsettingMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FloorsettingMapOutput)
}

type FloorsettingOutput struct{ *pulumi.OutputState }

func (FloorsettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Floorsetting)(nil)).Elem()
}

func (o FloorsettingOutput) ToFloorsettingOutput() FloorsettingOutput {
	return o
}

func (o FloorsettingOutput) ToFloorsettingOutputWithContext(ctx context.Context) FloorsettingOutput {
	return o
}

// AI Platform floor setting.
// Structure is documented below.
func (o FloorsettingOutput) AiPlatformFloorSetting() FloorsettingAiPlatformFloorSettingPtrOutput {
	return o.ApplyT(func(v *Floorsetting) FloorsettingAiPlatformFloorSettingPtrOutput { return v.AiPlatformFloorSetting }).(FloorsettingAiPlatformFloorSettingPtrOutput)
}

// [Output only] Create timestamp
func (o FloorsettingOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Floorsetting) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Floor Settings enforcement status.
func (o FloorsettingOutput) EnableFloorSettingEnforcement() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Floorsetting) pulumi.BoolPtrOutput { return v.EnableFloorSettingEnforcement }).(pulumi.BoolPtrOutput)
}

// Filters configuration.
// Structure is documented below.
func (o FloorsettingOutput) FilterConfig() FloorsettingFilterConfigOutput {
	return o.ApplyT(func(v *Floorsetting) FloorsettingFilterConfigOutput { return v.FilterConfig }).(FloorsettingFilterConfigOutput)
}

// Metadata to enable multi language detection via floor setting.
// Structure is documented below.
func (o FloorsettingOutput) FloorSettingMetadata() FloorsettingFloorSettingMetadataPtrOutput {
	return o.ApplyT(func(v *Floorsetting) FloorsettingFloorSettingMetadataPtrOutput { return v.FloorSettingMetadata }).(FloorsettingFloorSettingMetadataPtrOutput)
}

// List of integrated services for which the floor setting is applicable.
func (o FloorsettingOutput) IntegratedServices() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Floorsetting) pulumi.StringArrayOutput { return v.IntegratedServices }).(pulumi.StringArrayOutput)
}

// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
func (o FloorsettingOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *Floorsetting) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Identifier. The resource name.
func (o FloorsettingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Floorsetting) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Will be any one of these:
// * `projects/{project}`
// * `folders/{folder}`
// * `organizations/{organizationId}`
func (o FloorsettingOutput) Parent() pulumi.StringOutput {
	return o.ApplyT(func(v *Floorsetting) pulumi.StringOutput { return v.Parent }).(pulumi.StringOutput)
}

// [Output only] Update timestamp
func (o FloorsettingOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Floorsetting) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

type FloorsettingArrayOutput struct{ *pulumi.OutputState }

func (FloorsettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Floorsetting)(nil)).Elem()
}

func (o FloorsettingArrayOutput) ToFloorsettingArrayOutput() FloorsettingArrayOutput {
	return o
}

func (o FloorsettingArrayOutput) ToFloorsettingArrayOutputWithContext(ctx context.Context) FloorsettingArrayOutput {
	return o
}

func (o FloorsettingArrayOutput) Index(i pulumi.IntInput) FloorsettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Floorsetting {
		return vs[0].([]*Floorsetting)[vs[1].(int)]
	}).(FloorsettingOutput)
}

type FloorsettingMapOutput struct{ *pulumi.OutputState }

func (FloorsettingMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Floorsetting)(nil)).Elem()
}

func (o FloorsettingMapOutput) ToFloorsettingMapOutput() FloorsettingMapOutput {
	return o
}

func (o FloorsettingMapOutput) ToFloorsettingMapOutputWithContext(ctx context.Context) FloorsettingMapOutput {
	return o
}

func (o FloorsettingMapOutput) MapIndex(k pulumi.StringInput) FloorsettingOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Floorsetting {
		return vs[0].(map[string]*Floorsetting)[vs[1].(string)]
	}).(FloorsettingOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FloorsettingInput)(nil)).Elem(), &Floorsetting{})
	pulumi.RegisterInputType(reflect.TypeOf((*FloorsettingArrayInput)(nil)).Elem(), FloorsettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FloorsettingMapInput)(nil)).Elem(), FloorsettingMap{})
	pulumi.RegisterOutputType(FloorsettingOutput{})
	pulumi.RegisterOutputType(FloorsettingArrayOutput{})
	pulumi.RegisterOutputType(FloorsettingMapOutput{})
}
