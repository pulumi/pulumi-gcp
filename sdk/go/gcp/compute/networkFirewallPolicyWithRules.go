// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package compute

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The Compute NetworkFirewallPolicy with rules resource
//
// ## Example Usage
//
// ### Compute Network Firewall Policy With Rules Full
//
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/compute"
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/networksecurity"
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/organizations"
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/tags"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			project, err := organizations.LookupProject(ctx, &organizations.LookupProjectArgs{}, nil)
//			if err != nil {
//				return err
//			}
//			addressGroup1, err := networksecurity.NewAddressGroup(ctx, "address_group_1", &networksecurity.AddressGroupArgs{
//				Name:        pulumi.String("address-group"),
//				Parent:      pulumi.String(project.Id),
//				Description: pulumi.String("Global address group"),
//				Location:    pulumi.String("global"),
//				Items: pulumi.StringArray{
//					pulumi.String("208.80.154.224/32"),
//				},
//				Type:     pulumi.String("IPV4"),
//				Capacity: pulumi.Int(100),
//			})
//			if err != nil {
//				return err
//			}
//			secureTagKey1, err := tags.NewTagKey(ctx, "secure_tag_key_1", &tags.TagKeyArgs{
//				Description: pulumi.String("Tag key"),
//				Parent:      pulumi.String(project.Id),
//				Purpose:     pulumi.String("GCE_FIREWALL"),
//				ShortName:   pulumi.String("tag-key"),
//				PurposeData: pulumi.StringMap{
//					"network": pulumi.Sprintf("%v/default", project.Name),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			secureTagValue1, err := tags.NewTagValue(ctx, "secure_tag_value_1", &tags.TagValueArgs{
//				Description: pulumi.String("Tag value"),
//				Parent:      secureTagKey1.ID(),
//				ShortName:   pulumi.String("tag-value"),
//			})
//			if err != nil {
//				return err
//			}
//			securityProfile1, err := networksecurity.NewSecurityProfile(ctx, "security_profile_1", &networksecurity.SecurityProfileArgs{
//				Name:     pulumi.String("sp"),
//				Type:     pulumi.String("THREAT_PREVENTION"),
//				Parent:   pulumi.String("organizations/123456789"),
//				Location: pulumi.String("global"),
//			})
//			if err != nil {
//				return err
//			}
//			securityProfileGroup1, err := networksecurity.NewSecurityProfileGroup(ctx, "security_profile_group_1", &networksecurity.SecurityProfileGroupArgs{
//				Name:                    pulumi.String("spg"),
//				Parent:                  pulumi.String("organizations/123456789"),
//				Description:             pulumi.String("my description"),
//				ThreatPreventionProfile: securityProfile1.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = compute.NewNetworkFirewallPolicyWithRules(ctx, "primary", &compute.NetworkFirewallPolicyWithRulesArgs{
//				Name:        pulumi.String("fw-policy"),
//				Description: pulumi.String("Terraform test"),
//				Rules: compute.NetworkFirewallPolicyWithRulesRuleArray{
//					&compute.NetworkFirewallPolicyWithRulesRuleArgs{
//						Description:   pulumi.String("tcp rule"),
//						Priority:      pulumi.Int(1000),
//						EnableLogging: pulumi.Bool(true),
//						Action:        pulumi.String("allow"),
//						Direction:     pulumi.String("EGRESS"),
//						Match: &compute.NetworkFirewallPolicyWithRulesRuleMatchArgs{
//							DestIpRanges: pulumi.StringArray{
//								pulumi.String("11.100.0.1/32"),
//							},
//							DestFqdns: pulumi.StringArray{
//								pulumi.String("www.yyy.com"),
//								pulumi.String("www.zzz.com"),
//							},
//							DestRegionCodes: pulumi.StringArray{
//								pulumi.String("HK"),
//								pulumi.String("IN"),
//							},
//							DestThreatIntelligences: pulumi.StringArray{
//								pulumi.String("iplist-search-engines-crawlers"),
//								pulumi.String("iplist-tor-exit-nodes"),
//							},
//							DestAddressGroups: pulumi.StringArray{
//								addressGroup1.ID(),
//							},
//							Layer4Configs: compute.NetworkFirewallPolicyWithRulesRuleMatchLayer4ConfigArray{
//								&compute.NetworkFirewallPolicyWithRulesRuleMatchLayer4ConfigArgs{
//									IpProtocol: pulumi.String("tcp"),
//									Ports: pulumi.StringArray{
//										pulumi.String("8080"),
//										pulumi.String("7070"),
//									},
//								},
//							},
//						},
//						TargetSecureTags: compute.NetworkFirewallPolicyWithRulesRuleTargetSecureTagArray{
//							&compute.NetworkFirewallPolicyWithRulesRuleTargetSecureTagArgs{
//								Name: secureTagValue1.ID(),
//							},
//						},
//					},
//					&compute.NetworkFirewallPolicyWithRulesRuleArgs{
//						Description:   pulumi.String("udp rule"),
//						Priority:      pulumi.Int(2000),
//						EnableLogging: pulumi.Bool(false),
//						Action:        pulumi.String("deny"),
//						Direction:     pulumi.String("INGRESS"),
//						Disabled:      pulumi.Bool(true),
//						Match: &compute.NetworkFirewallPolicyWithRulesRuleMatchArgs{
//							SrcIpRanges: pulumi.StringArray{
//								pulumi.String("0.0.0.0/0"),
//							},
//							SrcFqdns: pulumi.StringArray{
//								pulumi.String("www.abc.com"),
//								pulumi.String("www.def.com"),
//							},
//							SrcRegionCodes: pulumi.StringArray{
//								pulumi.String("US"),
//								pulumi.String("CA"),
//							},
//							SrcThreatIntelligences: pulumi.StringArray{
//								pulumi.String("iplist-known-malicious-ips"),
//								pulumi.String("iplist-public-clouds"),
//							},
//							SrcAddressGroups: pulumi.StringArray{
//								addressGroup1.ID(),
//							},
//							SrcSecureTags: compute.NetworkFirewallPolicyWithRulesRuleMatchSrcSecureTagArray{
//								&compute.NetworkFirewallPolicyWithRulesRuleMatchSrcSecureTagArgs{
//									Name: secureTagValue1.ID(),
//								},
//							},
//							Layer4Configs: compute.NetworkFirewallPolicyWithRulesRuleMatchLayer4ConfigArray{
//								&compute.NetworkFirewallPolicyWithRulesRuleMatchLayer4ConfigArgs{
//									IpProtocol: pulumi.String("udp"),
//								},
//							},
//						},
//					},
//					&compute.NetworkFirewallPolicyWithRulesRuleArgs{
//						Description:   pulumi.String("security profile group rule"),
//						RuleName:      pulumi.String("tcp rule"),
//						Priority:      pulumi.Int(3000),
//						EnableLogging: pulumi.Bool(false),
//						Action:        pulumi.String("apply_security_profile_group"),
//						Direction:     pulumi.String("INGRESS"),
//						TargetServiceAccounts: pulumi.StringArray{
//							pulumi.String("test@google.com"),
//						},
//						SecurityProfileGroup: securityProfileGroup1.ID().ApplyT(func(id string) (string, error) {
//							return fmt.Sprintf("//networksecurity.googleapis.com/%v", id), nil
//						}).(pulumi.StringOutput),
//						TlsInspect: pulumi.Bool(true),
//						Match: &compute.NetworkFirewallPolicyWithRulesRuleMatchArgs{
//							SrcIpRanges: pulumi.StringArray{
//								pulumi.String("0.0.0.0/0"),
//							},
//							Layer4Configs: compute.NetworkFirewallPolicyWithRulesRuleMatchLayer4ConfigArray{
//								&compute.NetworkFirewallPolicyWithRulesRuleMatchLayer4ConfigArgs{
//									IpProtocol: pulumi.String("tcp"),
//								},
//							},
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// NetworkFirewallPolicyWithRules can be imported using any of these accepted formats:
//
// * `projects/{{project}}/global/firewallPolicies/{{name}}`
//
// * `{{project}}/{{name}}`
//
// * `{{name}}`
//
// When using the `pulumi import` command, NetworkFirewallPolicyWithRules can be imported using one of the formats above. For example:
//
// ```sh
// $ pulumi import gcp:compute/networkFirewallPolicyWithRules:NetworkFirewallPolicyWithRules default projects/{{project}}/global/firewallPolicies/{{name}}
// ```
//
// ```sh
// $ pulumi import gcp:compute/networkFirewallPolicyWithRules:NetworkFirewallPolicyWithRules default {{project}}/{{name}}
// ```
//
// ```sh
// $ pulumi import gcp:compute/networkFirewallPolicyWithRules:NetworkFirewallPolicyWithRules default {{name}}
// ```
type NetworkFirewallPolicyWithRules struct {
	pulumi.CustomResourceState

	// Creation timestamp in RFC3339 text format.
	CreationTimestamp pulumi.StringOutput `pulumi:"creationTimestamp"`
	// (Output)
	// A description of the rule.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Fingerprint of the resource. This field is used internally during updates of this resource.
	Fingerprint pulumi.StringOutput `pulumi:"fingerprint"`
	// User-provided name of the Network firewall policy.
	// The name should be unique in the project in which the firewall policy is created.
	// The name must be 1-63 characters long, and comply with RFC1035. Specifically,
	// the name must be 1-63 characters long and match the regular expression a-z?
	// which means the first character must be a lowercase letter, and all following characters must be a dash,
	// lowercase letter, or digit, except the last character, which cannot be a dash.
	Name pulumi.StringOutput `pulumi:"name"`
	// The unique identifier for the resource. This identifier is defined by the server.
	NetworkFirewallPolicyId pulumi.StringOutput `pulumi:"networkFirewallPolicyId"`
	// A list of firewall policy pre-defined rules.
	// Structure is documented below.
	PredefinedRules NetworkFirewallPolicyWithRulesPredefinedRuleArrayOutput `pulumi:"predefinedRules"`
	Project         pulumi.StringOutput                                     `pulumi:"project"`
	// Total count of all firewall policy rule tuples. A firewall policy can not exceed a set number of tuples.
	RuleTupleCount pulumi.IntOutput `pulumi:"ruleTupleCount"`
	// A list of firewall policy rules.
	// Structure is documented below.
	Rules NetworkFirewallPolicyWithRulesRuleArrayOutput `pulumi:"rules"`
	// Server-defined URL for the resource.
	SelfLink pulumi.StringOutput `pulumi:"selfLink"`
	// Server-defined URL for this resource with the resource id.
	SelfLinkWithId pulumi.StringOutput `pulumi:"selfLinkWithId"`
}

// NewNetworkFirewallPolicyWithRules registers a new resource with the given unique name, arguments, and options.
func NewNetworkFirewallPolicyWithRules(ctx *pulumi.Context,
	name string, args *NetworkFirewallPolicyWithRulesArgs, opts ...pulumi.ResourceOption) (*NetworkFirewallPolicyWithRules, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Rules == nil {
		return nil, errors.New("invalid value for required argument 'Rules'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource NetworkFirewallPolicyWithRules
	err := ctx.RegisterResource("gcp:compute/networkFirewallPolicyWithRules:NetworkFirewallPolicyWithRules", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetworkFirewallPolicyWithRules gets an existing NetworkFirewallPolicyWithRules resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkFirewallPolicyWithRules(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkFirewallPolicyWithRulesState, opts ...pulumi.ResourceOption) (*NetworkFirewallPolicyWithRules, error) {
	var resource NetworkFirewallPolicyWithRules
	err := ctx.ReadResource("gcp:compute/networkFirewallPolicyWithRules:NetworkFirewallPolicyWithRules", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetworkFirewallPolicyWithRules resources.
type networkFirewallPolicyWithRulesState struct {
	// Creation timestamp in RFC3339 text format.
	CreationTimestamp *string `pulumi:"creationTimestamp"`
	// (Output)
	// A description of the rule.
	Description *string `pulumi:"description"`
	// Fingerprint of the resource. This field is used internally during updates of this resource.
	Fingerprint *string `pulumi:"fingerprint"`
	// User-provided name of the Network firewall policy.
	// The name should be unique in the project in which the firewall policy is created.
	// The name must be 1-63 characters long, and comply with RFC1035. Specifically,
	// the name must be 1-63 characters long and match the regular expression a-z?
	// which means the first character must be a lowercase letter, and all following characters must be a dash,
	// lowercase letter, or digit, except the last character, which cannot be a dash.
	Name *string `pulumi:"name"`
	// The unique identifier for the resource. This identifier is defined by the server.
	NetworkFirewallPolicyId *string `pulumi:"networkFirewallPolicyId"`
	// A list of firewall policy pre-defined rules.
	// Structure is documented below.
	PredefinedRules []NetworkFirewallPolicyWithRulesPredefinedRule `pulumi:"predefinedRules"`
	Project         *string                                        `pulumi:"project"`
	// Total count of all firewall policy rule tuples. A firewall policy can not exceed a set number of tuples.
	RuleTupleCount *int `pulumi:"ruleTupleCount"`
	// A list of firewall policy rules.
	// Structure is documented below.
	Rules []NetworkFirewallPolicyWithRulesRule `pulumi:"rules"`
	// Server-defined URL for the resource.
	SelfLink *string `pulumi:"selfLink"`
	// Server-defined URL for this resource with the resource id.
	SelfLinkWithId *string `pulumi:"selfLinkWithId"`
}

type NetworkFirewallPolicyWithRulesState struct {
	// Creation timestamp in RFC3339 text format.
	CreationTimestamp pulumi.StringPtrInput
	// (Output)
	// A description of the rule.
	Description pulumi.StringPtrInput
	// Fingerprint of the resource. This field is used internally during updates of this resource.
	Fingerprint pulumi.StringPtrInput
	// User-provided name of the Network firewall policy.
	// The name should be unique in the project in which the firewall policy is created.
	// The name must be 1-63 characters long, and comply with RFC1035. Specifically,
	// the name must be 1-63 characters long and match the regular expression a-z?
	// which means the first character must be a lowercase letter, and all following characters must be a dash,
	// lowercase letter, or digit, except the last character, which cannot be a dash.
	Name pulumi.StringPtrInput
	// The unique identifier for the resource. This identifier is defined by the server.
	NetworkFirewallPolicyId pulumi.StringPtrInput
	// A list of firewall policy pre-defined rules.
	// Structure is documented below.
	PredefinedRules NetworkFirewallPolicyWithRulesPredefinedRuleArrayInput
	Project         pulumi.StringPtrInput
	// Total count of all firewall policy rule tuples. A firewall policy can not exceed a set number of tuples.
	RuleTupleCount pulumi.IntPtrInput
	// A list of firewall policy rules.
	// Structure is documented below.
	Rules NetworkFirewallPolicyWithRulesRuleArrayInput
	// Server-defined URL for the resource.
	SelfLink pulumi.StringPtrInput
	// Server-defined URL for this resource with the resource id.
	SelfLinkWithId pulumi.StringPtrInput
}

func (NetworkFirewallPolicyWithRulesState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkFirewallPolicyWithRulesState)(nil)).Elem()
}

type networkFirewallPolicyWithRulesArgs struct {
	// (Output)
	// A description of the rule.
	Description *string `pulumi:"description"`
	// User-provided name of the Network firewall policy.
	// The name should be unique in the project in which the firewall policy is created.
	// The name must be 1-63 characters long, and comply with RFC1035. Specifically,
	// the name must be 1-63 characters long and match the regular expression a-z?
	// which means the first character must be a lowercase letter, and all following characters must be a dash,
	// lowercase letter, or digit, except the last character, which cannot be a dash.
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
	// A list of firewall policy rules.
	// Structure is documented below.
	Rules []NetworkFirewallPolicyWithRulesRule `pulumi:"rules"`
}

// The set of arguments for constructing a NetworkFirewallPolicyWithRules resource.
type NetworkFirewallPolicyWithRulesArgs struct {
	// (Output)
	// A description of the rule.
	Description pulumi.StringPtrInput
	// User-provided name of the Network firewall policy.
	// The name should be unique in the project in which the firewall policy is created.
	// The name must be 1-63 characters long, and comply with RFC1035. Specifically,
	// the name must be 1-63 characters long and match the regular expression a-z?
	// which means the first character must be a lowercase letter, and all following characters must be a dash,
	// lowercase letter, or digit, except the last character, which cannot be a dash.
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// A list of firewall policy rules.
	// Structure is documented below.
	Rules NetworkFirewallPolicyWithRulesRuleArrayInput
}

func (NetworkFirewallPolicyWithRulesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkFirewallPolicyWithRulesArgs)(nil)).Elem()
}

type NetworkFirewallPolicyWithRulesInput interface {
	pulumi.Input

	ToNetworkFirewallPolicyWithRulesOutput() NetworkFirewallPolicyWithRulesOutput
	ToNetworkFirewallPolicyWithRulesOutputWithContext(ctx context.Context) NetworkFirewallPolicyWithRulesOutput
}

func (*NetworkFirewallPolicyWithRules) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkFirewallPolicyWithRules)(nil)).Elem()
}

func (i *NetworkFirewallPolicyWithRules) ToNetworkFirewallPolicyWithRulesOutput() NetworkFirewallPolicyWithRulesOutput {
	return i.ToNetworkFirewallPolicyWithRulesOutputWithContext(context.Background())
}

func (i *NetworkFirewallPolicyWithRules) ToNetworkFirewallPolicyWithRulesOutputWithContext(ctx context.Context) NetworkFirewallPolicyWithRulesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkFirewallPolicyWithRulesOutput)
}

// NetworkFirewallPolicyWithRulesArrayInput is an input type that accepts NetworkFirewallPolicyWithRulesArray and NetworkFirewallPolicyWithRulesArrayOutput values.
// You can construct a concrete instance of `NetworkFirewallPolicyWithRulesArrayInput` via:
//
//	NetworkFirewallPolicyWithRulesArray{ NetworkFirewallPolicyWithRulesArgs{...} }
type NetworkFirewallPolicyWithRulesArrayInput interface {
	pulumi.Input

	ToNetworkFirewallPolicyWithRulesArrayOutput() NetworkFirewallPolicyWithRulesArrayOutput
	ToNetworkFirewallPolicyWithRulesArrayOutputWithContext(context.Context) NetworkFirewallPolicyWithRulesArrayOutput
}

type NetworkFirewallPolicyWithRulesArray []NetworkFirewallPolicyWithRulesInput

func (NetworkFirewallPolicyWithRulesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkFirewallPolicyWithRules)(nil)).Elem()
}

func (i NetworkFirewallPolicyWithRulesArray) ToNetworkFirewallPolicyWithRulesArrayOutput() NetworkFirewallPolicyWithRulesArrayOutput {
	return i.ToNetworkFirewallPolicyWithRulesArrayOutputWithContext(context.Background())
}

func (i NetworkFirewallPolicyWithRulesArray) ToNetworkFirewallPolicyWithRulesArrayOutputWithContext(ctx context.Context) NetworkFirewallPolicyWithRulesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkFirewallPolicyWithRulesArrayOutput)
}

// NetworkFirewallPolicyWithRulesMapInput is an input type that accepts NetworkFirewallPolicyWithRulesMap and NetworkFirewallPolicyWithRulesMapOutput values.
// You can construct a concrete instance of `NetworkFirewallPolicyWithRulesMapInput` via:
//
//	NetworkFirewallPolicyWithRulesMap{ "key": NetworkFirewallPolicyWithRulesArgs{...} }
type NetworkFirewallPolicyWithRulesMapInput interface {
	pulumi.Input

	ToNetworkFirewallPolicyWithRulesMapOutput() NetworkFirewallPolicyWithRulesMapOutput
	ToNetworkFirewallPolicyWithRulesMapOutputWithContext(context.Context) NetworkFirewallPolicyWithRulesMapOutput
}

type NetworkFirewallPolicyWithRulesMap map[string]NetworkFirewallPolicyWithRulesInput

func (NetworkFirewallPolicyWithRulesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkFirewallPolicyWithRules)(nil)).Elem()
}

func (i NetworkFirewallPolicyWithRulesMap) ToNetworkFirewallPolicyWithRulesMapOutput() NetworkFirewallPolicyWithRulesMapOutput {
	return i.ToNetworkFirewallPolicyWithRulesMapOutputWithContext(context.Background())
}

func (i NetworkFirewallPolicyWithRulesMap) ToNetworkFirewallPolicyWithRulesMapOutputWithContext(ctx context.Context) NetworkFirewallPolicyWithRulesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkFirewallPolicyWithRulesMapOutput)
}

type NetworkFirewallPolicyWithRulesOutput struct{ *pulumi.OutputState }

func (NetworkFirewallPolicyWithRulesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkFirewallPolicyWithRules)(nil)).Elem()
}

func (o NetworkFirewallPolicyWithRulesOutput) ToNetworkFirewallPolicyWithRulesOutput() NetworkFirewallPolicyWithRulesOutput {
	return o
}

func (o NetworkFirewallPolicyWithRulesOutput) ToNetworkFirewallPolicyWithRulesOutputWithContext(ctx context.Context) NetworkFirewallPolicyWithRulesOutput {
	return o
}

// Creation timestamp in RFC3339 text format.
func (o NetworkFirewallPolicyWithRulesOutput) CreationTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkFirewallPolicyWithRules) pulumi.StringOutput { return v.CreationTimestamp }).(pulumi.StringOutput)
}

// (Output)
// A description of the rule.
func (o NetworkFirewallPolicyWithRulesOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkFirewallPolicyWithRules) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Fingerprint of the resource. This field is used internally during updates of this resource.
func (o NetworkFirewallPolicyWithRulesOutput) Fingerprint() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkFirewallPolicyWithRules) pulumi.StringOutput { return v.Fingerprint }).(pulumi.StringOutput)
}

// User-provided name of the Network firewall policy.
// The name should be unique in the project in which the firewall policy is created.
// The name must be 1-63 characters long, and comply with RFC1035. Specifically,
// the name must be 1-63 characters long and match the regular expression a-z?
// which means the first character must be a lowercase letter, and all following characters must be a dash,
// lowercase letter, or digit, except the last character, which cannot be a dash.
func (o NetworkFirewallPolicyWithRulesOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkFirewallPolicyWithRules) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The unique identifier for the resource. This identifier is defined by the server.
func (o NetworkFirewallPolicyWithRulesOutput) NetworkFirewallPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkFirewallPolicyWithRules) pulumi.StringOutput { return v.NetworkFirewallPolicyId }).(pulumi.StringOutput)
}

// A list of firewall policy pre-defined rules.
// Structure is documented below.
func (o NetworkFirewallPolicyWithRulesOutput) PredefinedRules() NetworkFirewallPolicyWithRulesPredefinedRuleArrayOutput {
	return o.ApplyT(func(v *NetworkFirewallPolicyWithRules) NetworkFirewallPolicyWithRulesPredefinedRuleArrayOutput {
		return v.PredefinedRules
	}).(NetworkFirewallPolicyWithRulesPredefinedRuleArrayOutput)
}

func (o NetworkFirewallPolicyWithRulesOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkFirewallPolicyWithRules) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Total count of all firewall policy rule tuples. A firewall policy can not exceed a set number of tuples.
func (o NetworkFirewallPolicyWithRulesOutput) RuleTupleCount() pulumi.IntOutput {
	return o.ApplyT(func(v *NetworkFirewallPolicyWithRules) pulumi.IntOutput { return v.RuleTupleCount }).(pulumi.IntOutput)
}

// A list of firewall policy rules.
// Structure is documented below.
func (o NetworkFirewallPolicyWithRulesOutput) Rules() NetworkFirewallPolicyWithRulesRuleArrayOutput {
	return o.ApplyT(func(v *NetworkFirewallPolicyWithRules) NetworkFirewallPolicyWithRulesRuleArrayOutput { return v.Rules }).(NetworkFirewallPolicyWithRulesRuleArrayOutput)
}

// Server-defined URL for the resource.
func (o NetworkFirewallPolicyWithRulesOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkFirewallPolicyWithRules) pulumi.StringOutput { return v.SelfLink }).(pulumi.StringOutput)
}

// Server-defined URL for this resource with the resource id.
func (o NetworkFirewallPolicyWithRulesOutput) SelfLinkWithId() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkFirewallPolicyWithRules) pulumi.StringOutput { return v.SelfLinkWithId }).(pulumi.StringOutput)
}

type NetworkFirewallPolicyWithRulesArrayOutput struct{ *pulumi.OutputState }

func (NetworkFirewallPolicyWithRulesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkFirewallPolicyWithRules)(nil)).Elem()
}

func (o NetworkFirewallPolicyWithRulesArrayOutput) ToNetworkFirewallPolicyWithRulesArrayOutput() NetworkFirewallPolicyWithRulesArrayOutput {
	return o
}

func (o NetworkFirewallPolicyWithRulesArrayOutput) ToNetworkFirewallPolicyWithRulesArrayOutputWithContext(ctx context.Context) NetworkFirewallPolicyWithRulesArrayOutput {
	return o
}

func (o NetworkFirewallPolicyWithRulesArrayOutput) Index(i pulumi.IntInput) NetworkFirewallPolicyWithRulesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NetworkFirewallPolicyWithRules {
		return vs[0].([]*NetworkFirewallPolicyWithRules)[vs[1].(int)]
	}).(NetworkFirewallPolicyWithRulesOutput)
}

type NetworkFirewallPolicyWithRulesMapOutput struct{ *pulumi.OutputState }

func (NetworkFirewallPolicyWithRulesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkFirewallPolicyWithRules)(nil)).Elem()
}

func (o NetworkFirewallPolicyWithRulesMapOutput) ToNetworkFirewallPolicyWithRulesMapOutput() NetworkFirewallPolicyWithRulesMapOutput {
	return o
}

func (o NetworkFirewallPolicyWithRulesMapOutput) ToNetworkFirewallPolicyWithRulesMapOutputWithContext(ctx context.Context) NetworkFirewallPolicyWithRulesMapOutput {
	return o
}

func (o NetworkFirewallPolicyWithRulesMapOutput) MapIndex(k pulumi.StringInput) NetworkFirewallPolicyWithRulesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NetworkFirewallPolicyWithRules {
		return vs[0].(map[string]*NetworkFirewallPolicyWithRules)[vs[1].(string)]
	}).(NetworkFirewallPolicyWithRulesOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkFirewallPolicyWithRulesInput)(nil)).Elem(), &NetworkFirewallPolicyWithRules{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkFirewallPolicyWithRulesArrayInput)(nil)).Elem(), NetworkFirewallPolicyWithRulesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkFirewallPolicyWithRulesMapInput)(nil)).Elem(), NetworkFirewallPolicyWithRulesMap{})
	pulumi.RegisterOutputType(NetworkFirewallPolicyWithRulesOutput{})
	pulumi.RegisterOutputType(NetworkFirewallPolicyWithRulesArrayOutput{})
	pulumi.RegisterOutputType(NetworkFirewallPolicyWithRulesMapOutput{})
}
