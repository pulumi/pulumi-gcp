// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package compute

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Represents a RegionTargetTcpProxy resource, which is used by one or more
// forwarding rules to route incoming TCP requests to a regional TCP proxy load
// balancer.
//
// To get more information about RegionTargetTcpProxy, see:
//
// * [API documentation](https://cloud.google.com/compute/docs/reference/rest/v1/regionTargetTcpProxies)
// * How-to Guides
//   - [Official Documentation](https://cloud.google.com/load-balancing/docs/tcp/internal-proxy)
//
// ## Example Usage
//
// ## Import
//
// # RegionTargetTcpProxy can be imported using any of these accepted formats
//
// ```sh
//
//	$ pulumi import gcp:compute/regionTargetTcpProxy:RegionTargetTcpProxy default projects/{{project}}/regions/{{region}}/targetTcpProxies/{{name}}
//
// ```
//
// ```sh
//
//	$ pulumi import gcp:compute/regionTargetTcpProxy:RegionTargetTcpProxy default {{project}}/{{region}}/{{name}}
//
// ```
//
// ```sh
//
//	$ pulumi import gcp:compute/regionTargetTcpProxy:RegionTargetTcpProxy default {{region}}/{{name}}
//
// ```
//
// ```sh
//
//	$ pulumi import gcp:compute/regionTargetTcpProxy:RegionTargetTcpProxy default {{name}}
//
// ```
type RegionTargetTcpProxy struct {
	pulumi.CustomResourceState

	// A reference to the BackendService resource.
	//
	// ***
	BackendService pulumi.StringOutput `pulumi:"backendService"`
	// Creation timestamp in RFC3339 text format.
	CreationTimestamp pulumi.StringOutput `pulumi:"creationTimestamp"`
	// An optional description of this resource.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Name of the resource. Provided by the client when the resource is
	// created. The name must be 1-63 characters long, and comply with
	// RFC1035. Specifically, the name must be 1-63 characters long and match
	// the regular expression `a-z?` which means the
	// first character must be a lowercase letter, and all following
	// characters must be a dash, lowercase letter, or digit, except the last
	// character, which cannot be a dash.
	Name pulumi.StringOutput `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
	// This field only applies when the forwarding rule that references
	// this target proxy has a loadBalancingScheme set to INTERNAL_SELF_MANAGED.
	ProxyBind pulumi.BoolOutput `pulumi:"proxyBind"`
	// Specifies the type of proxy header to append before sending data to
	// the backend.
	// Default value is `NONE`.
	// Possible values are: `NONE`, `PROXY_V1`.
	ProxyHeader pulumi.StringPtrOutput `pulumi:"proxyHeader"`
	// The unique identifier for the resource.
	ProxyId pulumi.IntOutput `pulumi:"proxyId"`
	// The Region in which the created target TCP proxy should reside.
	// If it is not provided, the provider region is used.
	Region pulumi.StringOutput `pulumi:"region"`
	// The URI of the created resource.
	SelfLink pulumi.StringOutput `pulumi:"selfLink"`
}

// NewRegionTargetTcpProxy registers a new resource with the given unique name, arguments, and options.
func NewRegionTargetTcpProxy(ctx *pulumi.Context,
	name string, args *RegionTargetTcpProxyArgs, opts ...pulumi.ResourceOption) (*RegionTargetTcpProxy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BackendService == nil {
		return nil, errors.New("invalid value for required argument 'BackendService'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RegionTargetTcpProxy
	err := ctx.RegisterResource("gcp:compute/regionTargetTcpProxy:RegionTargetTcpProxy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRegionTargetTcpProxy gets an existing RegionTargetTcpProxy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRegionTargetTcpProxy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RegionTargetTcpProxyState, opts ...pulumi.ResourceOption) (*RegionTargetTcpProxy, error) {
	var resource RegionTargetTcpProxy
	err := ctx.ReadResource("gcp:compute/regionTargetTcpProxy:RegionTargetTcpProxy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RegionTargetTcpProxy resources.
type regionTargetTcpProxyState struct {
	// A reference to the BackendService resource.
	//
	// ***
	BackendService *string `pulumi:"backendService"`
	// Creation timestamp in RFC3339 text format.
	CreationTimestamp *string `pulumi:"creationTimestamp"`
	// An optional description of this resource.
	Description *string `pulumi:"description"`
	// Name of the resource. Provided by the client when the resource is
	// created. The name must be 1-63 characters long, and comply with
	// RFC1035. Specifically, the name must be 1-63 characters long and match
	// the regular expression `a-z?` which means the
	// first character must be a lowercase letter, and all following
	// characters must be a dash, lowercase letter, or digit, except the last
	// character, which cannot be a dash.
	Name *string `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// This field only applies when the forwarding rule that references
	// this target proxy has a loadBalancingScheme set to INTERNAL_SELF_MANAGED.
	ProxyBind *bool `pulumi:"proxyBind"`
	// Specifies the type of proxy header to append before sending data to
	// the backend.
	// Default value is `NONE`.
	// Possible values are: `NONE`, `PROXY_V1`.
	ProxyHeader *string `pulumi:"proxyHeader"`
	// The unique identifier for the resource.
	ProxyId *int `pulumi:"proxyId"`
	// The Region in which the created target TCP proxy should reside.
	// If it is not provided, the provider region is used.
	Region *string `pulumi:"region"`
	// The URI of the created resource.
	SelfLink *string `pulumi:"selfLink"`
}

type RegionTargetTcpProxyState struct {
	// A reference to the BackendService resource.
	//
	// ***
	BackendService pulumi.StringPtrInput
	// Creation timestamp in RFC3339 text format.
	CreationTimestamp pulumi.StringPtrInput
	// An optional description of this resource.
	Description pulumi.StringPtrInput
	// Name of the resource. Provided by the client when the resource is
	// created. The name must be 1-63 characters long, and comply with
	// RFC1035. Specifically, the name must be 1-63 characters long and match
	// the regular expression `a-z?` which means the
	// first character must be a lowercase letter, and all following
	// characters must be a dash, lowercase letter, or digit, except the last
	// character, which cannot be a dash.
	Name pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// This field only applies when the forwarding rule that references
	// this target proxy has a loadBalancingScheme set to INTERNAL_SELF_MANAGED.
	ProxyBind pulumi.BoolPtrInput
	// Specifies the type of proxy header to append before sending data to
	// the backend.
	// Default value is `NONE`.
	// Possible values are: `NONE`, `PROXY_V1`.
	ProxyHeader pulumi.StringPtrInput
	// The unique identifier for the resource.
	ProxyId pulumi.IntPtrInput
	// The Region in which the created target TCP proxy should reside.
	// If it is not provided, the provider region is used.
	Region pulumi.StringPtrInput
	// The URI of the created resource.
	SelfLink pulumi.StringPtrInput
}

func (RegionTargetTcpProxyState) ElementType() reflect.Type {
	return reflect.TypeOf((*regionTargetTcpProxyState)(nil)).Elem()
}

type regionTargetTcpProxyArgs struct {
	// A reference to the BackendService resource.
	//
	// ***
	BackendService string `pulumi:"backendService"`
	// An optional description of this resource.
	Description *string `pulumi:"description"`
	// Name of the resource. Provided by the client when the resource is
	// created. The name must be 1-63 characters long, and comply with
	// RFC1035. Specifically, the name must be 1-63 characters long and match
	// the regular expression `a-z?` which means the
	// first character must be a lowercase letter, and all following
	// characters must be a dash, lowercase letter, or digit, except the last
	// character, which cannot be a dash.
	Name *string `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// This field only applies when the forwarding rule that references
	// this target proxy has a loadBalancingScheme set to INTERNAL_SELF_MANAGED.
	ProxyBind *bool `pulumi:"proxyBind"`
	// Specifies the type of proxy header to append before sending data to
	// the backend.
	// Default value is `NONE`.
	// Possible values are: `NONE`, `PROXY_V1`.
	ProxyHeader *string `pulumi:"proxyHeader"`
	// The Region in which the created target TCP proxy should reside.
	// If it is not provided, the provider region is used.
	Region *string `pulumi:"region"`
}

// The set of arguments for constructing a RegionTargetTcpProxy resource.
type RegionTargetTcpProxyArgs struct {
	// A reference to the BackendService resource.
	//
	// ***
	BackendService pulumi.StringInput
	// An optional description of this resource.
	Description pulumi.StringPtrInput
	// Name of the resource. Provided by the client when the resource is
	// created. The name must be 1-63 characters long, and comply with
	// RFC1035. Specifically, the name must be 1-63 characters long and match
	// the regular expression `a-z?` which means the
	// first character must be a lowercase letter, and all following
	// characters must be a dash, lowercase letter, or digit, except the last
	// character, which cannot be a dash.
	Name pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// This field only applies when the forwarding rule that references
	// this target proxy has a loadBalancingScheme set to INTERNAL_SELF_MANAGED.
	ProxyBind pulumi.BoolPtrInput
	// Specifies the type of proxy header to append before sending data to
	// the backend.
	// Default value is `NONE`.
	// Possible values are: `NONE`, `PROXY_V1`.
	ProxyHeader pulumi.StringPtrInput
	// The Region in which the created target TCP proxy should reside.
	// If it is not provided, the provider region is used.
	Region pulumi.StringPtrInput
}

func (RegionTargetTcpProxyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*regionTargetTcpProxyArgs)(nil)).Elem()
}

type RegionTargetTcpProxyInput interface {
	pulumi.Input

	ToRegionTargetTcpProxyOutput() RegionTargetTcpProxyOutput
	ToRegionTargetTcpProxyOutputWithContext(ctx context.Context) RegionTargetTcpProxyOutput
}

func (*RegionTargetTcpProxy) ElementType() reflect.Type {
	return reflect.TypeOf((**RegionTargetTcpProxy)(nil)).Elem()
}

func (i *RegionTargetTcpProxy) ToRegionTargetTcpProxyOutput() RegionTargetTcpProxyOutput {
	return i.ToRegionTargetTcpProxyOutputWithContext(context.Background())
}

func (i *RegionTargetTcpProxy) ToRegionTargetTcpProxyOutputWithContext(ctx context.Context) RegionTargetTcpProxyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegionTargetTcpProxyOutput)
}

// RegionTargetTcpProxyArrayInput is an input type that accepts RegionTargetTcpProxyArray and RegionTargetTcpProxyArrayOutput values.
// You can construct a concrete instance of `RegionTargetTcpProxyArrayInput` via:
//
//	RegionTargetTcpProxyArray{ RegionTargetTcpProxyArgs{...} }
type RegionTargetTcpProxyArrayInput interface {
	pulumi.Input

	ToRegionTargetTcpProxyArrayOutput() RegionTargetTcpProxyArrayOutput
	ToRegionTargetTcpProxyArrayOutputWithContext(context.Context) RegionTargetTcpProxyArrayOutput
}

type RegionTargetTcpProxyArray []RegionTargetTcpProxyInput

func (RegionTargetTcpProxyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RegionTargetTcpProxy)(nil)).Elem()
}

func (i RegionTargetTcpProxyArray) ToRegionTargetTcpProxyArrayOutput() RegionTargetTcpProxyArrayOutput {
	return i.ToRegionTargetTcpProxyArrayOutputWithContext(context.Background())
}

func (i RegionTargetTcpProxyArray) ToRegionTargetTcpProxyArrayOutputWithContext(ctx context.Context) RegionTargetTcpProxyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegionTargetTcpProxyArrayOutput)
}

// RegionTargetTcpProxyMapInput is an input type that accepts RegionTargetTcpProxyMap and RegionTargetTcpProxyMapOutput values.
// You can construct a concrete instance of `RegionTargetTcpProxyMapInput` via:
//
//	RegionTargetTcpProxyMap{ "key": RegionTargetTcpProxyArgs{...} }
type RegionTargetTcpProxyMapInput interface {
	pulumi.Input

	ToRegionTargetTcpProxyMapOutput() RegionTargetTcpProxyMapOutput
	ToRegionTargetTcpProxyMapOutputWithContext(context.Context) RegionTargetTcpProxyMapOutput
}

type RegionTargetTcpProxyMap map[string]RegionTargetTcpProxyInput

func (RegionTargetTcpProxyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RegionTargetTcpProxy)(nil)).Elem()
}

func (i RegionTargetTcpProxyMap) ToRegionTargetTcpProxyMapOutput() RegionTargetTcpProxyMapOutput {
	return i.ToRegionTargetTcpProxyMapOutputWithContext(context.Background())
}

func (i RegionTargetTcpProxyMap) ToRegionTargetTcpProxyMapOutputWithContext(ctx context.Context) RegionTargetTcpProxyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegionTargetTcpProxyMapOutput)
}

type RegionTargetTcpProxyOutput struct{ *pulumi.OutputState }

func (RegionTargetTcpProxyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegionTargetTcpProxy)(nil)).Elem()
}

func (o RegionTargetTcpProxyOutput) ToRegionTargetTcpProxyOutput() RegionTargetTcpProxyOutput {
	return o
}

func (o RegionTargetTcpProxyOutput) ToRegionTargetTcpProxyOutputWithContext(ctx context.Context) RegionTargetTcpProxyOutput {
	return o
}

// A reference to the BackendService resource.
//
// ***
func (o RegionTargetTcpProxyOutput) BackendService() pulumi.StringOutput {
	return o.ApplyT(func(v *RegionTargetTcpProxy) pulumi.StringOutput { return v.BackendService }).(pulumi.StringOutput)
}

// Creation timestamp in RFC3339 text format.
func (o RegionTargetTcpProxyOutput) CreationTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v *RegionTargetTcpProxy) pulumi.StringOutput { return v.CreationTimestamp }).(pulumi.StringOutput)
}

// An optional description of this resource.
func (o RegionTargetTcpProxyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegionTargetTcpProxy) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Name of the resource. Provided by the client when the resource is
// created. The name must be 1-63 characters long, and comply with
// RFC1035. Specifically, the name must be 1-63 characters long and match
// the regular expression `a-z?` which means the
// first character must be a lowercase letter, and all following
// characters must be a dash, lowercase letter, or digit, except the last
// character, which cannot be a dash.
func (o RegionTargetTcpProxyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *RegionTargetTcpProxy) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The ID of the project in which the resource belongs.
// If it is not provided, the provider project is used.
func (o RegionTargetTcpProxyOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *RegionTargetTcpProxy) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// This field only applies when the forwarding rule that references
// this target proxy has a loadBalancingScheme set to INTERNAL_SELF_MANAGED.
func (o RegionTargetTcpProxyOutput) ProxyBind() pulumi.BoolOutput {
	return o.ApplyT(func(v *RegionTargetTcpProxy) pulumi.BoolOutput { return v.ProxyBind }).(pulumi.BoolOutput)
}

// Specifies the type of proxy header to append before sending data to
// the backend.
// Default value is `NONE`.
// Possible values are: `NONE`, `PROXY_V1`.
func (o RegionTargetTcpProxyOutput) ProxyHeader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegionTargetTcpProxy) pulumi.StringPtrOutput { return v.ProxyHeader }).(pulumi.StringPtrOutput)
}

// The unique identifier for the resource.
func (o RegionTargetTcpProxyOutput) ProxyId() pulumi.IntOutput {
	return o.ApplyT(func(v *RegionTargetTcpProxy) pulumi.IntOutput { return v.ProxyId }).(pulumi.IntOutput)
}

// The Region in which the created target TCP proxy should reside.
// If it is not provided, the provider region is used.
func (o RegionTargetTcpProxyOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *RegionTargetTcpProxy) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// The URI of the created resource.
func (o RegionTargetTcpProxyOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v *RegionTargetTcpProxy) pulumi.StringOutput { return v.SelfLink }).(pulumi.StringOutput)
}

type RegionTargetTcpProxyArrayOutput struct{ *pulumi.OutputState }

func (RegionTargetTcpProxyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RegionTargetTcpProxy)(nil)).Elem()
}

func (o RegionTargetTcpProxyArrayOutput) ToRegionTargetTcpProxyArrayOutput() RegionTargetTcpProxyArrayOutput {
	return o
}

func (o RegionTargetTcpProxyArrayOutput) ToRegionTargetTcpProxyArrayOutputWithContext(ctx context.Context) RegionTargetTcpProxyArrayOutput {
	return o
}

func (o RegionTargetTcpProxyArrayOutput) Index(i pulumi.IntInput) RegionTargetTcpProxyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RegionTargetTcpProxy {
		return vs[0].([]*RegionTargetTcpProxy)[vs[1].(int)]
	}).(RegionTargetTcpProxyOutput)
}

type RegionTargetTcpProxyMapOutput struct{ *pulumi.OutputState }

func (RegionTargetTcpProxyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RegionTargetTcpProxy)(nil)).Elem()
}

func (o RegionTargetTcpProxyMapOutput) ToRegionTargetTcpProxyMapOutput() RegionTargetTcpProxyMapOutput {
	return o
}

func (o RegionTargetTcpProxyMapOutput) ToRegionTargetTcpProxyMapOutputWithContext(ctx context.Context) RegionTargetTcpProxyMapOutput {
	return o
}

func (o RegionTargetTcpProxyMapOutput) MapIndex(k pulumi.StringInput) RegionTargetTcpProxyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RegionTargetTcpProxy {
		return vs[0].(map[string]*RegionTargetTcpProxy)[vs[1].(string)]
	}).(RegionTargetTcpProxyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RegionTargetTcpProxyInput)(nil)).Elem(), &RegionTargetTcpProxy{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegionTargetTcpProxyArrayInput)(nil)).Elem(), RegionTargetTcpProxyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegionTargetTcpProxyMapInput)(nil)).Elem(), RegionTargetTcpProxyMap{})
	pulumi.RegisterOutputType(RegionTargetTcpProxyOutput{})
	pulumi.RegisterOutputType(RegionTargetTcpProxyArrayOutput{})
	pulumi.RegisterOutputType(RegionTargetTcpProxyMapOutput{})
}
