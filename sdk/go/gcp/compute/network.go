// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package compute

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Manages a network within GCE. For more information see
// [the official documentation](https://cloud.google.com/compute/docs/vpc)
// and
// [API](https://cloud.google.com/compute/docs/reference/latest/networks).
type Network struct {
	s *pulumi.ResourceState
}

// NewNetwork registers a new resource with the given unique name, arguments, and options.
func NewNetwork(ctx *pulumi.Context,
	name string, args *NetworkArgs, opts ...pulumi.ResourceOpt) (*Network, error) {
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["autoCreateSubnetworks"] = nil
		inputs["description"] = nil
		inputs["ipv4Range"] = nil
		inputs["name"] = nil
		inputs["project"] = nil
		inputs["routingMode"] = nil
	} else {
		inputs["autoCreateSubnetworks"] = args.AutoCreateSubnetworks
		inputs["description"] = args.Description
		inputs["ipv4Range"] = args.Ipv4Range
		inputs["name"] = args.Name
		inputs["project"] = args.Project
		inputs["routingMode"] = args.RoutingMode
	}
	inputs["gatewayIpv4"] = nil
	inputs["selfLink"] = nil
	s, err := ctx.RegisterResource("gcp:compute/network:Network", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Network{s: s}, nil
}

// GetNetwork gets an existing Network resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetwork(ctx *pulumi.Context,
	name string, id pulumi.ID, state *NetworkState, opts ...pulumi.ResourceOpt) (*Network, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["autoCreateSubnetworks"] = state.AutoCreateSubnetworks
		inputs["description"] = state.Description
		inputs["gatewayIpv4"] = state.GatewayIpv4
		inputs["ipv4Range"] = state.Ipv4Range
		inputs["name"] = state.Name
		inputs["project"] = state.Project
		inputs["routingMode"] = state.RoutingMode
		inputs["selfLink"] = state.SelfLink
	}
	s, err := ctx.ReadResource("gcp:compute/network:Network", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Network{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *Network) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *Network) ID() *pulumi.IDOutput {
	return r.s.ID()
}

// If set to true, this network will be
// created in auto subnet mode, and Google will create a subnet for each region
// automatically. If set to false, a custom subnetted network will be created that
// can support `google_compute_subnetwork` resources. Defaults to true.
func (r *Network) AutoCreateSubnetworks() *pulumi.BoolOutput {
	return (*pulumi.BoolOutput)(r.s.State["autoCreateSubnetworks"])
}

// A brief description of this resource.
func (r *Network) Description() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["description"])
}

// The IPv4 address of the gateway.
func (r *Network) GatewayIpv4() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["gatewayIpv4"])
}

// If set to a CIDR block, uses the legacy VPC API with the
// specified range. This API is deprecated. If set, `auto_create_subnetworks` must be
// explicitly set to false.
func (r *Network) Ipv4Range() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["ipv4Range"])
}

// A unique name for the resource, required by GCE.
// Changing this forces a new resource to be created.
func (r *Network) Name() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["name"])
}

// The ID of the project in which the resource belongs. If it
// is not provided, the provider project is used.
func (r *Network) Project() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["project"])
}

// Sets the network-wide routing mode for Cloud Routers
// to use. Accepted values are `"GLOBAL"` or `"REGIONAL"`. Defaults to `"REGIONAL"`.
// Refer to the [Cloud Router documentation](https://cloud.google.com/router/docs/concepts/overview#dynamic-routing-mode)
// for more details.
func (r *Network) RoutingMode() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["routingMode"])
}

// The URI of the created resource.
func (r *Network) SelfLink() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["selfLink"])
}

// Input properties used for looking up and filtering Network resources.
type NetworkState struct {
	// If set to true, this network will be
	// created in auto subnet mode, and Google will create a subnet for each region
	// automatically. If set to false, a custom subnetted network will be created that
	// can support `google_compute_subnetwork` resources. Defaults to true.
	AutoCreateSubnetworks interface{}
	// A brief description of this resource.
	Description interface{}
	// The IPv4 address of the gateway.
	GatewayIpv4 interface{}
	// If set to a CIDR block, uses the legacy VPC API with the
	// specified range. This API is deprecated. If set, `auto_create_subnetworks` must be
	// explicitly set to false.
	Ipv4Range interface{}
	// A unique name for the resource, required by GCE.
	// Changing this forces a new resource to be created.
	Name interface{}
	// The ID of the project in which the resource belongs. If it
	// is not provided, the provider project is used.
	Project interface{}
	// Sets the network-wide routing mode for Cloud Routers
	// to use. Accepted values are `"GLOBAL"` or `"REGIONAL"`. Defaults to `"REGIONAL"`.
	// Refer to the [Cloud Router documentation](https://cloud.google.com/router/docs/concepts/overview#dynamic-routing-mode)
	// for more details.
	RoutingMode interface{}
	// The URI of the created resource.
	SelfLink interface{}
}

// The set of arguments for constructing a Network resource.
type NetworkArgs struct {
	// If set to true, this network will be
	// created in auto subnet mode, and Google will create a subnet for each region
	// automatically. If set to false, a custom subnetted network will be created that
	// can support `google_compute_subnetwork` resources. Defaults to true.
	AutoCreateSubnetworks interface{}
	// A brief description of this resource.
	Description interface{}
	// If set to a CIDR block, uses the legacy VPC API with the
	// specified range. This API is deprecated. If set, `auto_create_subnetworks` must be
	// explicitly set to false.
	Ipv4Range interface{}
	// A unique name for the resource, required by GCE.
	// Changing this forces a new resource to be created.
	Name interface{}
	// The ID of the project in which the resource belongs. If it
	// is not provided, the provider project is used.
	Project interface{}
	// Sets the network-wide routing mode for Cloud Routers
	// to use. Accepted values are `"GLOBAL"` or `"REGIONAL"`. Defaults to `"REGIONAL"`.
	// Refer to the [Cloud Router documentation](https://cloud.google.com/router/docs/concepts/overview#dynamic-routing-mode)
	// for more details.
	RoutingMode interface{}
}
