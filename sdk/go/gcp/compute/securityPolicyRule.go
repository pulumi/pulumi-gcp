// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package compute

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A rule for the SecurityPolicy.
//
// To get more information about SecurityPolicyRule, see:
//
// * [API documentation](https://cloud.google.com/compute/docs/reference/rest/v1/securityPolicies/addRule)
// * How-to Guides
//   - [Creating global security policy rules](https://cloud.google.com/armor/docs/configure-security-policies)
//
// ## Example Usage
//
// ### Security Policy Rule Basic
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/compute"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_default, err := compute.NewSecurityPolicy(ctx, "default", &compute.SecurityPolicyArgs{
//				Name:        pulumi.String("policyruletest"),
//				Description: pulumi.String("basic global security policy"),
//				Type:        pulumi.String("CLOUD_ARMOR"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = compute.NewSecurityPolicyRule(ctx, "policy_rule", &compute.SecurityPolicyRuleArgs{
//				SecurityPolicy: _default.Name,
//				Description:    pulumi.String("new rule"),
//				Priority:       pulumi.Int(100),
//				Match: &compute.SecurityPolicyRuleMatchArgs{
//					VersionedExpr: pulumi.String("SRC_IPS_V1"),
//					Config: &compute.SecurityPolicyRuleMatchConfigArgs{
//						SrcIpRanges: pulumi.StringArray{
//							pulumi.String("10.10.0.0/16"),
//						},
//					},
//				},
//				Action:  pulumi.String("allow"),
//				Preview: pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Security Policy Rule Default Rule
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/compute"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_default, err := compute.NewSecurityPolicy(ctx, "default", &compute.SecurityPolicyArgs{
//				Name:        pulumi.String("policyruletest"),
//				Description: pulumi.String("basic global security policy"),
//				Type:        pulumi.String("CLOUD_ARMOR"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = compute.NewSecurityPolicyRule(ctx, "default_rule", &compute.SecurityPolicyRuleArgs{
//				SecurityPolicy: _default.Name,
//				Description:    pulumi.String("default rule"),
//				Action:         pulumi.String("deny"),
//				Priority:       pulumi.Int(2147483647),
//				Match: &compute.SecurityPolicyRuleMatchArgs{
//					VersionedExpr: pulumi.String("SRC_IPS_V1"),
//					Config: &compute.SecurityPolicyRuleMatchConfigArgs{
//						SrcIpRanges: pulumi.StringArray{
//							pulumi.String("*"),
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = compute.NewSecurityPolicyRule(ctx, "policy_rule", &compute.SecurityPolicyRuleArgs{
//				SecurityPolicy: _default.Name,
//				Description:    pulumi.String("new rule"),
//				Priority:       pulumi.Int(100),
//				Match: &compute.SecurityPolicyRuleMatchArgs{
//					VersionedExpr: pulumi.String("SRC_IPS_V1"),
//					Config: &compute.SecurityPolicyRuleMatchConfigArgs{
//						SrcIpRanges: pulumi.StringArray{
//							pulumi.String("10.10.0.0/16"),
//						},
//					},
//				},
//				Action:  pulumi.String("allow"),
//				Preview: pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Security Policy Rule Multiple Rules
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/compute"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_default, err := compute.NewSecurityPolicy(ctx, "default", &compute.SecurityPolicyArgs{
//				Name:        pulumi.String("policywithmultiplerules"),
//				Description: pulumi.String("basic global security policy"),
//				Type:        pulumi.String("CLOUD_ARMOR"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = compute.NewSecurityPolicyRule(ctx, "policy_rule_one", &compute.SecurityPolicyRuleArgs{
//				SecurityPolicy: _default.Name,
//				Description:    pulumi.String("new rule one"),
//				Priority:       pulumi.Int(100),
//				Match: &compute.SecurityPolicyRuleMatchArgs{
//					VersionedExpr: pulumi.String("SRC_IPS_V1"),
//					Config: &compute.SecurityPolicyRuleMatchConfigArgs{
//						SrcIpRanges: pulumi.StringArray{
//							pulumi.String("10.10.0.0/16"),
//						},
//					},
//				},
//				Action:  pulumi.String("allow"),
//				Preview: pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = compute.NewSecurityPolicyRule(ctx, "policy_rule_two", &compute.SecurityPolicyRuleArgs{
//				SecurityPolicy: _default.Name,
//				Description:    pulumi.String("new rule two"),
//				Priority:       pulumi.Int(101),
//				Match: &compute.SecurityPolicyRuleMatchArgs{
//					VersionedExpr: pulumi.String("SRC_IPS_V1"),
//					Config: &compute.SecurityPolicyRuleMatchConfigArgs{
//						SrcIpRanges: pulumi.StringArray{
//							pulumi.String("192.168.0.0/16"),
//							pulumi.String("10.0.0.0/8"),
//						},
//					},
//				},
//				Action:  pulumi.String("allow"),
//				Preview: pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// SecurityPolicyRule can be imported using any of these accepted formats:
//
// * `projects/{{project}}/global/securityPolicies/{{security_policy}}/priority/{{priority}}`
//
// * `{{project}}/{{security_policy}}/{{priority}}`
//
// * `{{security_policy}}/{{priority}}`
//
// When using the `pulumi import` command, SecurityPolicyRule can be imported using one of the formats above. For example:
//
// ```sh
// $ pulumi import gcp:compute/securityPolicyRule:SecurityPolicyRule default projects/{{project}}/global/securityPolicies/{{security_policy}}/priority/{{priority}}
// ```
//
// ```sh
// $ pulumi import gcp:compute/securityPolicyRule:SecurityPolicyRule default {{project}}/{{security_policy}}/{{priority}}
// ```
//
// ```sh
// $ pulumi import gcp:compute/securityPolicyRule:SecurityPolicyRule default {{security_policy}}/{{priority}}
// ```
type SecurityPolicyRule struct {
	pulumi.CustomResourceState

	// The Action to perform when the rule is matched. The following are the valid actions:
	// * allow: allow access to target.
	// * deny(STATUS): deny access to target, returns the HTTP response code specified. Valid values for STATUS are 403, 404, and 502.
	// * rate_based_ban: limit client traffic to the configured threshold and ban the client if the traffic exceeds the threshold. Configure parameters for this action in RateLimitOptions. Requires rateLimitOptions to be set.
	// * redirect: redirect to a different target. This can either be an internal reCAPTCHA redirect, or an external URL-based redirect via a 302 response. Parameters for this action can be configured via redirectOptions. This action is only supported in Global Security Policies of type CLOUD_ARMOR.
	// * throttle: limit client traffic to the configured threshold. Configure parameters for this action in rateLimitOptions. Requires rateLimitOptions to be set for this.
	Action pulumi.StringOutput `pulumi:"action"`
	// An optional description of this resource. Provide this property when you create the resource.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Optional, additional actions that are performed on headers. This field is only supported in Global Security Policies of type CLOUD_ARMOR.
	// Structure is documented below.
	HeaderAction SecurityPolicyRuleHeaderActionPtrOutput `pulumi:"headerAction"`
	// A match condition that incoming traffic is evaluated against.
	// If it evaluates to true, the corresponding 'action' is enforced.
	// Structure is documented below.
	Match SecurityPolicyRuleMatchPtrOutput `pulumi:"match"`
	// Preconfigured WAF configuration to be applied for the rule.
	// If the rule does not evaluate preconfigured WAF rules, i.e., if evaluatePreconfiguredWaf() is not used, this field will have no effect.
	// Structure is documented below.
	PreconfiguredWafConfig SecurityPolicyRulePreconfiguredWafConfigPtrOutput `pulumi:"preconfiguredWafConfig"`
	// If set to true, the specified action is not enforced.
	Preview pulumi.BoolPtrOutput `pulumi:"preview"`
	// An integer indicating the priority of a rule in the list.
	// The priority must be a positive value between 0 and 2147483647.
	// Rules are evaluated from highest to lowest priority where 0 is the highest priority and 2147483647 is the lowest priority.
	Priority pulumi.IntOutput `pulumi:"priority"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
	// Must be specified if the action is "rateBasedBan" or "throttle". Cannot be specified for any other actions.
	// Structure is documented below.
	RateLimitOptions SecurityPolicyRuleRateLimitOptionsPtrOutput `pulumi:"rateLimitOptions"`
	// Parameters defining the redirect action. Cannot be specified for any other actions. This field is only supported in Global Security Policies of type CLOUD_ARMOR.
	// Structure is documented below.
	RedirectOptions SecurityPolicyRuleRedirectOptionsPtrOutput `pulumi:"redirectOptions"`
	// The name of the security policy this rule belongs to.
	SecurityPolicy pulumi.StringOutput `pulumi:"securityPolicy"`
}

// NewSecurityPolicyRule registers a new resource with the given unique name, arguments, and options.
func NewSecurityPolicyRule(ctx *pulumi.Context,
	name string, args *SecurityPolicyRuleArgs, opts ...pulumi.ResourceOption) (*SecurityPolicyRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Action == nil {
		return nil, errors.New("invalid value for required argument 'Action'")
	}
	if args.Priority == nil {
		return nil, errors.New("invalid value for required argument 'Priority'")
	}
	if args.SecurityPolicy == nil {
		return nil, errors.New("invalid value for required argument 'SecurityPolicy'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SecurityPolicyRule
	err := ctx.RegisterResource("gcp:compute/securityPolicyRule:SecurityPolicyRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSecurityPolicyRule gets an existing SecurityPolicyRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSecurityPolicyRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SecurityPolicyRuleState, opts ...pulumi.ResourceOption) (*SecurityPolicyRule, error) {
	var resource SecurityPolicyRule
	err := ctx.ReadResource("gcp:compute/securityPolicyRule:SecurityPolicyRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SecurityPolicyRule resources.
type securityPolicyRuleState struct {
	// The Action to perform when the rule is matched. The following are the valid actions:
	// * allow: allow access to target.
	// * deny(STATUS): deny access to target, returns the HTTP response code specified. Valid values for STATUS are 403, 404, and 502.
	// * rate_based_ban: limit client traffic to the configured threshold and ban the client if the traffic exceeds the threshold. Configure parameters for this action in RateLimitOptions. Requires rateLimitOptions to be set.
	// * redirect: redirect to a different target. This can either be an internal reCAPTCHA redirect, or an external URL-based redirect via a 302 response. Parameters for this action can be configured via redirectOptions. This action is only supported in Global Security Policies of type CLOUD_ARMOR.
	// * throttle: limit client traffic to the configured threshold. Configure parameters for this action in rateLimitOptions. Requires rateLimitOptions to be set for this.
	Action *string `pulumi:"action"`
	// An optional description of this resource. Provide this property when you create the resource.
	Description *string `pulumi:"description"`
	// Optional, additional actions that are performed on headers. This field is only supported in Global Security Policies of type CLOUD_ARMOR.
	// Structure is documented below.
	HeaderAction *SecurityPolicyRuleHeaderAction `pulumi:"headerAction"`
	// A match condition that incoming traffic is evaluated against.
	// If it evaluates to true, the corresponding 'action' is enforced.
	// Structure is documented below.
	Match *SecurityPolicyRuleMatch `pulumi:"match"`
	// Preconfigured WAF configuration to be applied for the rule.
	// If the rule does not evaluate preconfigured WAF rules, i.e., if evaluatePreconfiguredWaf() is not used, this field will have no effect.
	// Structure is documented below.
	PreconfiguredWafConfig *SecurityPolicyRulePreconfiguredWafConfig `pulumi:"preconfiguredWafConfig"`
	// If set to true, the specified action is not enforced.
	Preview *bool `pulumi:"preview"`
	// An integer indicating the priority of a rule in the list.
	// The priority must be a positive value between 0 and 2147483647.
	// Rules are evaluated from highest to lowest priority where 0 is the highest priority and 2147483647 is the lowest priority.
	Priority *int `pulumi:"priority"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// Must be specified if the action is "rateBasedBan" or "throttle". Cannot be specified for any other actions.
	// Structure is documented below.
	RateLimitOptions *SecurityPolicyRuleRateLimitOptions `pulumi:"rateLimitOptions"`
	// Parameters defining the redirect action. Cannot be specified for any other actions. This field is only supported in Global Security Policies of type CLOUD_ARMOR.
	// Structure is documented below.
	RedirectOptions *SecurityPolicyRuleRedirectOptions `pulumi:"redirectOptions"`
	// The name of the security policy this rule belongs to.
	SecurityPolicy *string `pulumi:"securityPolicy"`
}

type SecurityPolicyRuleState struct {
	// The Action to perform when the rule is matched. The following are the valid actions:
	// * allow: allow access to target.
	// * deny(STATUS): deny access to target, returns the HTTP response code specified. Valid values for STATUS are 403, 404, and 502.
	// * rate_based_ban: limit client traffic to the configured threshold and ban the client if the traffic exceeds the threshold. Configure parameters for this action in RateLimitOptions. Requires rateLimitOptions to be set.
	// * redirect: redirect to a different target. This can either be an internal reCAPTCHA redirect, or an external URL-based redirect via a 302 response. Parameters for this action can be configured via redirectOptions. This action is only supported in Global Security Policies of type CLOUD_ARMOR.
	// * throttle: limit client traffic to the configured threshold. Configure parameters for this action in rateLimitOptions. Requires rateLimitOptions to be set for this.
	Action pulumi.StringPtrInput
	// An optional description of this resource. Provide this property when you create the resource.
	Description pulumi.StringPtrInput
	// Optional, additional actions that are performed on headers. This field is only supported in Global Security Policies of type CLOUD_ARMOR.
	// Structure is documented below.
	HeaderAction SecurityPolicyRuleHeaderActionPtrInput
	// A match condition that incoming traffic is evaluated against.
	// If it evaluates to true, the corresponding 'action' is enforced.
	// Structure is documented below.
	Match SecurityPolicyRuleMatchPtrInput
	// Preconfigured WAF configuration to be applied for the rule.
	// If the rule does not evaluate preconfigured WAF rules, i.e., if evaluatePreconfiguredWaf() is not used, this field will have no effect.
	// Structure is documented below.
	PreconfiguredWafConfig SecurityPolicyRulePreconfiguredWafConfigPtrInput
	// If set to true, the specified action is not enforced.
	Preview pulumi.BoolPtrInput
	// An integer indicating the priority of a rule in the list.
	// The priority must be a positive value between 0 and 2147483647.
	// Rules are evaluated from highest to lowest priority where 0 is the highest priority and 2147483647 is the lowest priority.
	Priority pulumi.IntPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// Must be specified if the action is "rateBasedBan" or "throttle". Cannot be specified for any other actions.
	// Structure is documented below.
	RateLimitOptions SecurityPolicyRuleRateLimitOptionsPtrInput
	// Parameters defining the redirect action. Cannot be specified for any other actions. This field is only supported in Global Security Policies of type CLOUD_ARMOR.
	// Structure is documented below.
	RedirectOptions SecurityPolicyRuleRedirectOptionsPtrInput
	// The name of the security policy this rule belongs to.
	SecurityPolicy pulumi.StringPtrInput
}

func (SecurityPolicyRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*securityPolicyRuleState)(nil)).Elem()
}

type securityPolicyRuleArgs struct {
	// The Action to perform when the rule is matched. The following are the valid actions:
	// * allow: allow access to target.
	// * deny(STATUS): deny access to target, returns the HTTP response code specified. Valid values for STATUS are 403, 404, and 502.
	// * rate_based_ban: limit client traffic to the configured threshold and ban the client if the traffic exceeds the threshold. Configure parameters for this action in RateLimitOptions. Requires rateLimitOptions to be set.
	// * redirect: redirect to a different target. This can either be an internal reCAPTCHA redirect, or an external URL-based redirect via a 302 response. Parameters for this action can be configured via redirectOptions. This action is only supported in Global Security Policies of type CLOUD_ARMOR.
	// * throttle: limit client traffic to the configured threshold. Configure parameters for this action in rateLimitOptions. Requires rateLimitOptions to be set for this.
	Action string `pulumi:"action"`
	// An optional description of this resource. Provide this property when you create the resource.
	Description *string `pulumi:"description"`
	// Optional, additional actions that are performed on headers. This field is only supported in Global Security Policies of type CLOUD_ARMOR.
	// Structure is documented below.
	HeaderAction *SecurityPolicyRuleHeaderAction `pulumi:"headerAction"`
	// A match condition that incoming traffic is evaluated against.
	// If it evaluates to true, the corresponding 'action' is enforced.
	// Structure is documented below.
	Match *SecurityPolicyRuleMatch `pulumi:"match"`
	// Preconfigured WAF configuration to be applied for the rule.
	// If the rule does not evaluate preconfigured WAF rules, i.e., if evaluatePreconfiguredWaf() is not used, this field will have no effect.
	// Structure is documented below.
	PreconfiguredWafConfig *SecurityPolicyRulePreconfiguredWafConfig `pulumi:"preconfiguredWafConfig"`
	// If set to true, the specified action is not enforced.
	Preview *bool `pulumi:"preview"`
	// An integer indicating the priority of a rule in the list.
	// The priority must be a positive value between 0 and 2147483647.
	// Rules are evaluated from highest to lowest priority where 0 is the highest priority and 2147483647 is the lowest priority.
	Priority int `pulumi:"priority"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// Must be specified if the action is "rateBasedBan" or "throttle". Cannot be specified for any other actions.
	// Structure is documented below.
	RateLimitOptions *SecurityPolicyRuleRateLimitOptions `pulumi:"rateLimitOptions"`
	// Parameters defining the redirect action. Cannot be specified for any other actions. This field is only supported in Global Security Policies of type CLOUD_ARMOR.
	// Structure is documented below.
	RedirectOptions *SecurityPolicyRuleRedirectOptions `pulumi:"redirectOptions"`
	// The name of the security policy this rule belongs to.
	SecurityPolicy string `pulumi:"securityPolicy"`
}

// The set of arguments for constructing a SecurityPolicyRule resource.
type SecurityPolicyRuleArgs struct {
	// The Action to perform when the rule is matched. The following are the valid actions:
	// * allow: allow access to target.
	// * deny(STATUS): deny access to target, returns the HTTP response code specified. Valid values for STATUS are 403, 404, and 502.
	// * rate_based_ban: limit client traffic to the configured threshold and ban the client if the traffic exceeds the threshold. Configure parameters for this action in RateLimitOptions. Requires rateLimitOptions to be set.
	// * redirect: redirect to a different target. This can either be an internal reCAPTCHA redirect, or an external URL-based redirect via a 302 response. Parameters for this action can be configured via redirectOptions. This action is only supported in Global Security Policies of type CLOUD_ARMOR.
	// * throttle: limit client traffic to the configured threshold. Configure parameters for this action in rateLimitOptions. Requires rateLimitOptions to be set for this.
	Action pulumi.StringInput
	// An optional description of this resource. Provide this property when you create the resource.
	Description pulumi.StringPtrInput
	// Optional, additional actions that are performed on headers. This field is only supported in Global Security Policies of type CLOUD_ARMOR.
	// Structure is documented below.
	HeaderAction SecurityPolicyRuleHeaderActionPtrInput
	// A match condition that incoming traffic is evaluated against.
	// If it evaluates to true, the corresponding 'action' is enforced.
	// Structure is documented below.
	Match SecurityPolicyRuleMatchPtrInput
	// Preconfigured WAF configuration to be applied for the rule.
	// If the rule does not evaluate preconfigured WAF rules, i.e., if evaluatePreconfiguredWaf() is not used, this field will have no effect.
	// Structure is documented below.
	PreconfiguredWafConfig SecurityPolicyRulePreconfiguredWafConfigPtrInput
	// If set to true, the specified action is not enforced.
	Preview pulumi.BoolPtrInput
	// An integer indicating the priority of a rule in the list.
	// The priority must be a positive value between 0 and 2147483647.
	// Rules are evaluated from highest to lowest priority where 0 is the highest priority and 2147483647 is the lowest priority.
	Priority pulumi.IntInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// Must be specified if the action is "rateBasedBan" or "throttle". Cannot be specified for any other actions.
	// Structure is documented below.
	RateLimitOptions SecurityPolicyRuleRateLimitOptionsPtrInput
	// Parameters defining the redirect action. Cannot be specified for any other actions. This field is only supported in Global Security Policies of type CLOUD_ARMOR.
	// Structure is documented below.
	RedirectOptions SecurityPolicyRuleRedirectOptionsPtrInput
	// The name of the security policy this rule belongs to.
	SecurityPolicy pulumi.StringInput
}

func (SecurityPolicyRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*securityPolicyRuleArgs)(nil)).Elem()
}

type SecurityPolicyRuleInput interface {
	pulumi.Input

	ToSecurityPolicyRuleOutput() SecurityPolicyRuleOutput
	ToSecurityPolicyRuleOutputWithContext(ctx context.Context) SecurityPolicyRuleOutput
}

func (*SecurityPolicyRule) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityPolicyRule)(nil)).Elem()
}

func (i *SecurityPolicyRule) ToSecurityPolicyRuleOutput() SecurityPolicyRuleOutput {
	return i.ToSecurityPolicyRuleOutputWithContext(context.Background())
}

func (i *SecurityPolicyRule) ToSecurityPolicyRuleOutputWithContext(ctx context.Context) SecurityPolicyRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityPolicyRuleOutput)
}

// SecurityPolicyRuleArrayInput is an input type that accepts SecurityPolicyRuleArray and SecurityPolicyRuleArrayOutput values.
// You can construct a concrete instance of `SecurityPolicyRuleArrayInput` via:
//
//	SecurityPolicyRuleArray{ SecurityPolicyRuleArgs{...} }
type SecurityPolicyRuleArrayInput interface {
	pulumi.Input

	ToSecurityPolicyRuleArrayOutput() SecurityPolicyRuleArrayOutput
	ToSecurityPolicyRuleArrayOutputWithContext(context.Context) SecurityPolicyRuleArrayOutput
}

type SecurityPolicyRuleArray []SecurityPolicyRuleInput

func (SecurityPolicyRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SecurityPolicyRule)(nil)).Elem()
}

func (i SecurityPolicyRuleArray) ToSecurityPolicyRuleArrayOutput() SecurityPolicyRuleArrayOutput {
	return i.ToSecurityPolicyRuleArrayOutputWithContext(context.Background())
}

func (i SecurityPolicyRuleArray) ToSecurityPolicyRuleArrayOutputWithContext(ctx context.Context) SecurityPolicyRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityPolicyRuleArrayOutput)
}

// SecurityPolicyRuleMapInput is an input type that accepts SecurityPolicyRuleMap and SecurityPolicyRuleMapOutput values.
// You can construct a concrete instance of `SecurityPolicyRuleMapInput` via:
//
//	SecurityPolicyRuleMap{ "key": SecurityPolicyRuleArgs{...} }
type SecurityPolicyRuleMapInput interface {
	pulumi.Input

	ToSecurityPolicyRuleMapOutput() SecurityPolicyRuleMapOutput
	ToSecurityPolicyRuleMapOutputWithContext(context.Context) SecurityPolicyRuleMapOutput
}

type SecurityPolicyRuleMap map[string]SecurityPolicyRuleInput

func (SecurityPolicyRuleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SecurityPolicyRule)(nil)).Elem()
}

func (i SecurityPolicyRuleMap) ToSecurityPolicyRuleMapOutput() SecurityPolicyRuleMapOutput {
	return i.ToSecurityPolicyRuleMapOutputWithContext(context.Background())
}

func (i SecurityPolicyRuleMap) ToSecurityPolicyRuleMapOutputWithContext(ctx context.Context) SecurityPolicyRuleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityPolicyRuleMapOutput)
}

type SecurityPolicyRuleOutput struct{ *pulumi.OutputState }

func (SecurityPolicyRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityPolicyRule)(nil)).Elem()
}

func (o SecurityPolicyRuleOutput) ToSecurityPolicyRuleOutput() SecurityPolicyRuleOutput {
	return o
}

func (o SecurityPolicyRuleOutput) ToSecurityPolicyRuleOutputWithContext(ctx context.Context) SecurityPolicyRuleOutput {
	return o
}

// The Action to perform when the rule is matched. The following are the valid actions:
// * allow: allow access to target.
// * deny(STATUS): deny access to target, returns the HTTP response code specified. Valid values for STATUS are 403, 404, and 502.
// * rate_based_ban: limit client traffic to the configured threshold and ban the client if the traffic exceeds the threshold. Configure parameters for this action in RateLimitOptions. Requires rateLimitOptions to be set.
// * redirect: redirect to a different target. This can either be an internal reCAPTCHA redirect, or an external URL-based redirect via a 302 response. Parameters for this action can be configured via redirectOptions. This action is only supported in Global Security Policies of type CLOUD_ARMOR.
// * throttle: limit client traffic to the configured threshold. Configure parameters for this action in rateLimitOptions. Requires rateLimitOptions to be set for this.
func (o SecurityPolicyRuleOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityPolicyRule) pulumi.StringOutput { return v.Action }).(pulumi.StringOutput)
}

// An optional description of this resource. Provide this property when you create the resource.
func (o SecurityPolicyRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityPolicyRule) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Optional, additional actions that are performed on headers. This field is only supported in Global Security Policies of type CLOUD_ARMOR.
// Structure is documented below.
func (o SecurityPolicyRuleOutput) HeaderAction() SecurityPolicyRuleHeaderActionPtrOutput {
	return o.ApplyT(func(v *SecurityPolicyRule) SecurityPolicyRuleHeaderActionPtrOutput { return v.HeaderAction }).(SecurityPolicyRuleHeaderActionPtrOutput)
}

// A match condition that incoming traffic is evaluated against.
// If it evaluates to true, the corresponding 'action' is enforced.
// Structure is documented below.
func (o SecurityPolicyRuleOutput) Match() SecurityPolicyRuleMatchPtrOutput {
	return o.ApplyT(func(v *SecurityPolicyRule) SecurityPolicyRuleMatchPtrOutput { return v.Match }).(SecurityPolicyRuleMatchPtrOutput)
}

// Preconfigured WAF configuration to be applied for the rule.
// If the rule does not evaluate preconfigured WAF rules, i.e., if evaluatePreconfiguredWaf() is not used, this field will have no effect.
// Structure is documented below.
func (o SecurityPolicyRuleOutput) PreconfiguredWafConfig() SecurityPolicyRulePreconfiguredWafConfigPtrOutput {
	return o.ApplyT(func(v *SecurityPolicyRule) SecurityPolicyRulePreconfiguredWafConfigPtrOutput {
		return v.PreconfiguredWafConfig
	}).(SecurityPolicyRulePreconfiguredWafConfigPtrOutput)
}

// If set to true, the specified action is not enforced.
func (o SecurityPolicyRuleOutput) Preview() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SecurityPolicyRule) pulumi.BoolPtrOutput { return v.Preview }).(pulumi.BoolPtrOutput)
}

// An integer indicating the priority of a rule in the list.
// The priority must be a positive value between 0 and 2147483647.
// Rules are evaluated from highest to lowest priority where 0 is the highest priority and 2147483647 is the lowest priority.
func (o SecurityPolicyRuleOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v *SecurityPolicyRule) pulumi.IntOutput { return v.Priority }).(pulumi.IntOutput)
}

// The ID of the project in which the resource belongs.
// If it is not provided, the provider project is used.
func (o SecurityPolicyRuleOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityPolicyRule) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Must be specified if the action is "rateBasedBan" or "throttle". Cannot be specified for any other actions.
// Structure is documented below.
func (o SecurityPolicyRuleOutput) RateLimitOptions() SecurityPolicyRuleRateLimitOptionsPtrOutput {
	return o.ApplyT(func(v *SecurityPolicyRule) SecurityPolicyRuleRateLimitOptionsPtrOutput { return v.RateLimitOptions }).(SecurityPolicyRuleRateLimitOptionsPtrOutput)
}

// Parameters defining the redirect action. Cannot be specified for any other actions. This field is only supported in Global Security Policies of type CLOUD_ARMOR.
// Structure is documented below.
func (o SecurityPolicyRuleOutput) RedirectOptions() SecurityPolicyRuleRedirectOptionsPtrOutput {
	return o.ApplyT(func(v *SecurityPolicyRule) SecurityPolicyRuleRedirectOptionsPtrOutput { return v.RedirectOptions }).(SecurityPolicyRuleRedirectOptionsPtrOutput)
}

// The name of the security policy this rule belongs to.
func (o SecurityPolicyRuleOutput) SecurityPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityPolicyRule) pulumi.StringOutput { return v.SecurityPolicy }).(pulumi.StringOutput)
}

type SecurityPolicyRuleArrayOutput struct{ *pulumi.OutputState }

func (SecurityPolicyRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SecurityPolicyRule)(nil)).Elem()
}

func (o SecurityPolicyRuleArrayOutput) ToSecurityPolicyRuleArrayOutput() SecurityPolicyRuleArrayOutput {
	return o
}

func (o SecurityPolicyRuleArrayOutput) ToSecurityPolicyRuleArrayOutputWithContext(ctx context.Context) SecurityPolicyRuleArrayOutput {
	return o
}

func (o SecurityPolicyRuleArrayOutput) Index(i pulumi.IntInput) SecurityPolicyRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SecurityPolicyRule {
		return vs[0].([]*SecurityPolicyRule)[vs[1].(int)]
	}).(SecurityPolicyRuleOutput)
}

type SecurityPolicyRuleMapOutput struct{ *pulumi.OutputState }

func (SecurityPolicyRuleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SecurityPolicyRule)(nil)).Elem()
}

func (o SecurityPolicyRuleMapOutput) ToSecurityPolicyRuleMapOutput() SecurityPolicyRuleMapOutput {
	return o
}

func (o SecurityPolicyRuleMapOutput) ToSecurityPolicyRuleMapOutputWithContext(ctx context.Context) SecurityPolicyRuleMapOutput {
	return o
}

func (o SecurityPolicyRuleMapOutput) MapIndex(k pulumi.StringInput) SecurityPolicyRuleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SecurityPolicyRule {
		return vs[0].(map[string]*SecurityPolicyRule)[vs[1].(string)]
	}).(SecurityPolicyRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityPolicyRuleInput)(nil)).Elem(), &SecurityPolicyRule{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityPolicyRuleArrayInput)(nil)).Elem(), SecurityPolicyRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityPolicyRuleMapInput)(nil)).Elem(), SecurityPolicyRuleMap{})
	pulumi.RegisterOutputType(SecurityPolicyRuleOutput{})
	pulumi.RegisterOutputType(SecurityPolicyRuleArrayOutput{})
	pulumi.RegisterOutputType(SecurityPolicyRuleMapOutput{})
}
