// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package compute

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
// ### Region Security Policy Rule Basic
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/compute"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := compute.NewRegionSecurityPolicy(ctx, "default", &compute.RegionSecurityPolicyArgs{
//				Region:      pulumi.String("us-west2"),
//				Description: pulumi.String("basic region security policy"),
//				Type:        pulumi.String("CLOUD_ARMOR"),
//			}, pulumi.Provider(google_beta))
//			if err != nil {
//				return err
//			}
//			_, err = compute.NewRegionSecurityPolicyRule(ctx, "policyRule", &compute.RegionSecurityPolicyRuleArgs{
//				Region:         pulumi.String("us-west2"),
//				SecurityPolicy: _default.Name,
//				Description:    pulumi.String("new rule"),
//				Priority:       pulumi.Int(100),
//				Match: &compute.RegionSecurityPolicyRuleMatchArgs{
//					VersionedExpr: pulumi.String("SRC_IPS_V1"),
//					Config: &compute.RegionSecurityPolicyRuleMatchConfigArgs{
//						SrcIpRanges: pulumi.StringArray{
//							pulumi.String("10.10.0.0/16"),
//						},
//					},
//				},
//				Action:  pulumi.String("allow"),
//				Preview: pulumi.Bool(true),
//			}, pulumi.Provider(google_beta))
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Region Security Policy Rule Multiple Rules
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/compute"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := compute.NewRegionSecurityPolicy(ctx, "default", &compute.RegionSecurityPolicyArgs{
//				Region:      pulumi.String("us-west2"),
//				Description: pulumi.String("basic region security policy"),
//				Type:        pulumi.String("CLOUD_ARMOR"),
//			}, pulumi.Provider(google_beta))
//			if err != nil {
//				return err
//			}
//			_, err = compute.NewRegionSecurityPolicyRule(ctx, "policyRuleOne", &compute.RegionSecurityPolicyRuleArgs{
//				Region:         pulumi.String("us-west2"),
//				SecurityPolicy: _default.Name,
//				Description:    pulumi.String("new rule one"),
//				Priority:       pulumi.Int(100),
//				Match: &compute.RegionSecurityPolicyRuleMatchArgs{
//					VersionedExpr: pulumi.String("SRC_IPS_V1"),
//					Config: &compute.RegionSecurityPolicyRuleMatchConfigArgs{
//						SrcIpRanges: pulumi.StringArray{
//							pulumi.String("10.10.0.0/16"),
//						},
//					},
//				},
//				Action:  pulumi.String("allow"),
//				Preview: pulumi.Bool(true),
//			}, pulumi.Provider(google_beta))
//			if err != nil {
//				return err
//			}
//			_, err = compute.NewRegionSecurityPolicyRule(ctx, "policyRuleTwo", &compute.RegionSecurityPolicyRuleArgs{
//				Region:         pulumi.String("us-west2"),
//				SecurityPolicy: _default.Name,
//				Description:    pulumi.String("new rule two"),
//				Priority:       pulumi.Int(101),
//				Match: &compute.RegionSecurityPolicyRuleMatchArgs{
//					VersionedExpr: pulumi.String("SRC_IPS_V1"),
//					Config: &compute.RegionSecurityPolicyRuleMatchConfigArgs{
//						SrcIpRanges: pulumi.StringArray{
//							pulumi.String("192.168.0.0/16"),
//							pulumi.String("10.0.0.0/8"),
//						},
//					},
//				},
//				Action:  pulumi.String("allow"),
//				Preview: pulumi.Bool(true),
//			}, pulumi.Provider(google_beta))
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Region Security Policy Rule With Network Match
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/compute"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			policyddosprotection, err := compute.NewRegionSecurityPolicy(ctx, "policyddosprotection", &compute.RegionSecurityPolicyArgs{
//				Region:      pulumi.String("us-west2"),
//				Description: pulumi.String("policy for activating network DDoS protection for the desired region"),
//				Type:        pulumi.String("CLOUD_ARMOR_NETWORK"),
//				DdosProtectionConfig: &compute.RegionSecurityPolicyDdosProtectionConfigArgs{
//					DdosProtection: pulumi.String("ADVANCED_PREVIEW"),
//				},
//			}, pulumi.Provider(google_beta))
//			if err != nil {
//				return err
//			}
//			edgeSecService, err := compute.NewNetworkEdgeSecurityService(ctx, "edgeSecService", &compute.NetworkEdgeSecurityServiceArgs{
//				Region:         pulumi.String("us-west2"),
//				Description:    pulumi.String("linking policy to edge security service"),
//				SecurityPolicy: policyddosprotection.SelfLink,
//			}, pulumi.Provider(google_beta))
//			if err != nil {
//				return err
//			}
//			policynetworkmatch, err := compute.NewRegionSecurityPolicy(ctx, "policynetworkmatch", &compute.RegionSecurityPolicyArgs{
//				Region:      pulumi.String("us-west2"),
//				Description: pulumi.String("region security policy for network match"),
//				Type:        pulumi.String("CLOUD_ARMOR_NETWORK"),
//				UserDefinedFields: compute.RegionSecurityPolicyUserDefinedFieldArray{
//					&compute.RegionSecurityPolicyUserDefinedFieldArgs{
//						Name:   pulumi.String("SIG1_AT_0"),
//						Base:   pulumi.String("TCP"),
//						Offset: pulumi.Int(8),
//						Size:   pulumi.Int(2),
//						Mask:   pulumi.String("0x8F00"),
//					},
//				},
//			}, pulumi.Provider(google_beta), pulumi.DependsOn([]pulumi.Resource{
//				edgeSecService,
//			}))
//			if err != nil {
//				return err
//			}
//			_, err = compute.NewRegionSecurityPolicyRule(ctx, "policyRuleNetworkMatch", &compute.RegionSecurityPolicyRuleArgs{
//				Region:         pulumi.String("us-west2"),
//				SecurityPolicy: policynetworkmatch.Name,
//				Description:    pulumi.String("custom rule for network match"),
//				Priority:       pulumi.Int(100),
//				NetworkMatch: &compute.RegionSecurityPolicyRuleNetworkMatchArgs{
//					SrcIpRanges: pulumi.StringArray{
//						pulumi.String("10.10.0.0/16"),
//					},
//					UserDefinedFields: compute.RegionSecurityPolicyRuleNetworkMatchUserDefinedFieldArray{
//						&compute.RegionSecurityPolicyRuleNetworkMatchUserDefinedFieldArgs{
//							Name: pulumi.String("SIG1_AT_0"),
//							Values: pulumi.StringArray{
//								pulumi.String("0x8F00"),
//							},
//						},
//					},
//				},
//				Action:  pulumi.String("allow"),
//				Preview: pulumi.Bool(true),
//			}, pulumi.Provider(google_beta))
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// # RegionSecurityPolicyRule can be imported using any of these accepted formats
//
// ```sh
//
//	$ pulumi import gcp:compute/regionSecurityPolicyRule:RegionSecurityPolicyRule default projects/{{project}}/regions/{{region}}/securityPolicies/{{security_policy}}/priority/{{priority}}
//
// ```
//
// ```sh
//
//	$ pulumi import gcp:compute/regionSecurityPolicyRule:RegionSecurityPolicyRule default {{project}}/{{region}}/{{security_policy}}/{{priority}}
//
// ```
//
// ```sh
//
//	$ pulumi import gcp:compute/regionSecurityPolicyRule:RegionSecurityPolicyRule default {{region}}/{{security_policy}}/{{priority}}
//
// ```
//
// ```sh
//
//	$ pulumi import gcp:compute/regionSecurityPolicyRule:RegionSecurityPolicyRule default {{security_policy}}/{{priority}}
//
// ```
type RegionSecurityPolicyRule struct {
	pulumi.CustomResourceState

	// The Action to perform when the rule is matched. The following are the valid actions:
	// * allow: allow access to target.
	// * deny(STATUS): deny access to target, returns the HTTP response code specified. Valid values for STATUS are 403, 404, and 502.
	// * rate_based_ban: limit client traffic to the configured threshold and ban the client if the traffic exceeds the threshold. Configure parameters for this action in RateLimitOptions. Requires rateLimitOptions to be set.
	// * redirect: redirect to a different target. This can either be an internal reCAPTCHA redirect, or an external URL-based redirect via a 302 response. Parameters for this action can be configured via redirectOptions. This action is only supported in Global Security Policies of type CLOUD_ARMOR.
	// * throttle: limit client traffic to the configured threshold. Configure parameters for this action in rateLimitOptions. Requires rateLimitOptions to be set for this.
	Action pulumi.StringOutput `pulumi:"action"`
	// An optional description of this resource. Provide this property when you create the resource.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// A match condition that incoming traffic is evaluated against.
	// If it evaluates to true, the corresponding 'action' is enforced.
	// Structure is documented below.
	Match RegionSecurityPolicyRuleMatchPtrOutput `pulumi:"match"`
	// A match condition that incoming packets are evaluated against for CLOUD_ARMOR_NETWORK security policies. If it matches, the corresponding 'action' is enforced.
	// The match criteria for a rule consists of built-in match fields (like 'srcIpRanges') and potentially multiple user-defined match fields ('userDefinedFields').
	// Field values may be extracted directly from the packet or derived from it (e.g. 'srcRegionCodes'). Some fields may not be present in every packet (e.g. 'srcPorts'). A user-defined field is only present if the base header is found in the packet and the entire field is in bounds.
	// Each match field may specify which values can match it, listing one or more ranges, prefixes, or exact values that are considered a match for the field. A field value must be present in order to match a specified match field. If no match values are specified for a match field, then any field value is considered to match it, and it's not required to be present. For strings specifying '*' is also equivalent to match all.
	// For a packet to match a rule, all specified match fields must match the corresponding field values derived from the packet.
	// Example:
	// networkMatch: srcIpRanges: - "192.0.2.0/24" - "198.51.100.0/24" userDefinedFields: - name: "ipv4FragmentOffset" values: - "1-0x1fff"
	// The above match condition matches packets with a source IP in 192.0.2.0/24 or 198.51.100.0/24 and a user-defined field named "ipv4FragmentOffset" with a value between 1 and 0x1fff inclusive
	// Structure is documented below.
	NetworkMatch RegionSecurityPolicyRuleNetworkMatchPtrOutput `pulumi:"networkMatch"`
	// If set to true, the specified action is not enforced.
	Preview pulumi.BoolPtrOutput `pulumi:"preview"`
	// An integer indicating the priority of a rule in the list.
	// The priority must be a positive value between 0 and 2147483647.
	// Rules are evaluated from highest to lowest priority where 0 is the highest priority and 2147483647 is the lowest priority.
	Priority pulumi.IntOutput `pulumi:"priority"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
	// The Region in which the created Region Security Policy rule should reside.
	Region pulumi.StringOutput `pulumi:"region"`
	// The name of the security policy this rule belongs to.
	//
	// ***
	SecurityPolicy pulumi.StringOutput `pulumi:"securityPolicy"`
}

// NewRegionSecurityPolicyRule registers a new resource with the given unique name, arguments, and options.
func NewRegionSecurityPolicyRule(ctx *pulumi.Context,
	name string, args *RegionSecurityPolicyRuleArgs, opts ...pulumi.ResourceOption) (*RegionSecurityPolicyRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Action == nil {
		return nil, errors.New("invalid value for required argument 'Action'")
	}
	if args.Priority == nil {
		return nil, errors.New("invalid value for required argument 'Priority'")
	}
	if args.Region == nil {
		return nil, errors.New("invalid value for required argument 'Region'")
	}
	if args.SecurityPolicy == nil {
		return nil, errors.New("invalid value for required argument 'SecurityPolicy'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RegionSecurityPolicyRule
	err := ctx.RegisterResource("gcp:compute/regionSecurityPolicyRule:RegionSecurityPolicyRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRegionSecurityPolicyRule gets an existing RegionSecurityPolicyRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRegionSecurityPolicyRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RegionSecurityPolicyRuleState, opts ...pulumi.ResourceOption) (*RegionSecurityPolicyRule, error) {
	var resource RegionSecurityPolicyRule
	err := ctx.ReadResource("gcp:compute/regionSecurityPolicyRule:RegionSecurityPolicyRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RegionSecurityPolicyRule resources.
type regionSecurityPolicyRuleState struct {
	// The Action to perform when the rule is matched. The following are the valid actions:
	// * allow: allow access to target.
	// * deny(STATUS): deny access to target, returns the HTTP response code specified. Valid values for STATUS are 403, 404, and 502.
	// * rate_based_ban: limit client traffic to the configured threshold and ban the client if the traffic exceeds the threshold. Configure parameters for this action in RateLimitOptions. Requires rateLimitOptions to be set.
	// * redirect: redirect to a different target. This can either be an internal reCAPTCHA redirect, or an external URL-based redirect via a 302 response. Parameters for this action can be configured via redirectOptions. This action is only supported in Global Security Policies of type CLOUD_ARMOR.
	// * throttle: limit client traffic to the configured threshold. Configure parameters for this action in rateLimitOptions. Requires rateLimitOptions to be set for this.
	Action *string `pulumi:"action"`
	// An optional description of this resource. Provide this property when you create the resource.
	Description *string `pulumi:"description"`
	// A match condition that incoming traffic is evaluated against.
	// If it evaluates to true, the corresponding 'action' is enforced.
	// Structure is documented below.
	Match *RegionSecurityPolicyRuleMatch `pulumi:"match"`
	// A match condition that incoming packets are evaluated against for CLOUD_ARMOR_NETWORK security policies. If it matches, the corresponding 'action' is enforced.
	// The match criteria for a rule consists of built-in match fields (like 'srcIpRanges') and potentially multiple user-defined match fields ('userDefinedFields').
	// Field values may be extracted directly from the packet or derived from it (e.g. 'srcRegionCodes'). Some fields may not be present in every packet (e.g. 'srcPorts'). A user-defined field is only present if the base header is found in the packet and the entire field is in bounds.
	// Each match field may specify which values can match it, listing one or more ranges, prefixes, or exact values that are considered a match for the field. A field value must be present in order to match a specified match field. If no match values are specified for a match field, then any field value is considered to match it, and it's not required to be present. For strings specifying '*' is also equivalent to match all.
	// For a packet to match a rule, all specified match fields must match the corresponding field values derived from the packet.
	// Example:
	// networkMatch: srcIpRanges: - "192.0.2.0/24" - "198.51.100.0/24" userDefinedFields: - name: "ipv4FragmentOffset" values: - "1-0x1fff"
	// The above match condition matches packets with a source IP in 192.0.2.0/24 or 198.51.100.0/24 and a user-defined field named "ipv4FragmentOffset" with a value between 1 and 0x1fff inclusive
	// Structure is documented below.
	NetworkMatch *RegionSecurityPolicyRuleNetworkMatch `pulumi:"networkMatch"`
	// If set to true, the specified action is not enforced.
	Preview *bool `pulumi:"preview"`
	// An integer indicating the priority of a rule in the list.
	// The priority must be a positive value between 0 and 2147483647.
	// Rules are evaluated from highest to lowest priority where 0 is the highest priority and 2147483647 is the lowest priority.
	Priority *int `pulumi:"priority"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// The Region in which the created Region Security Policy rule should reside.
	Region *string `pulumi:"region"`
	// The name of the security policy this rule belongs to.
	//
	// ***
	SecurityPolicy *string `pulumi:"securityPolicy"`
}

type RegionSecurityPolicyRuleState struct {
	// The Action to perform when the rule is matched. The following are the valid actions:
	// * allow: allow access to target.
	// * deny(STATUS): deny access to target, returns the HTTP response code specified. Valid values for STATUS are 403, 404, and 502.
	// * rate_based_ban: limit client traffic to the configured threshold and ban the client if the traffic exceeds the threshold. Configure parameters for this action in RateLimitOptions. Requires rateLimitOptions to be set.
	// * redirect: redirect to a different target. This can either be an internal reCAPTCHA redirect, or an external URL-based redirect via a 302 response. Parameters for this action can be configured via redirectOptions. This action is only supported in Global Security Policies of type CLOUD_ARMOR.
	// * throttle: limit client traffic to the configured threshold. Configure parameters for this action in rateLimitOptions. Requires rateLimitOptions to be set for this.
	Action pulumi.StringPtrInput
	// An optional description of this resource. Provide this property when you create the resource.
	Description pulumi.StringPtrInput
	// A match condition that incoming traffic is evaluated against.
	// If it evaluates to true, the corresponding 'action' is enforced.
	// Structure is documented below.
	Match RegionSecurityPolicyRuleMatchPtrInput
	// A match condition that incoming packets are evaluated against for CLOUD_ARMOR_NETWORK security policies. If it matches, the corresponding 'action' is enforced.
	// The match criteria for a rule consists of built-in match fields (like 'srcIpRanges') and potentially multiple user-defined match fields ('userDefinedFields').
	// Field values may be extracted directly from the packet or derived from it (e.g. 'srcRegionCodes'). Some fields may not be present in every packet (e.g. 'srcPorts'). A user-defined field is only present if the base header is found in the packet and the entire field is in bounds.
	// Each match field may specify which values can match it, listing one or more ranges, prefixes, or exact values that are considered a match for the field. A field value must be present in order to match a specified match field. If no match values are specified for a match field, then any field value is considered to match it, and it's not required to be present. For strings specifying '*' is also equivalent to match all.
	// For a packet to match a rule, all specified match fields must match the corresponding field values derived from the packet.
	// Example:
	// networkMatch: srcIpRanges: - "192.0.2.0/24" - "198.51.100.0/24" userDefinedFields: - name: "ipv4FragmentOffset" values: - "1-0x1fff"
	// The above match condition matches packets with a source IP in 192.0.2.0/24 or 198.51.100.0/24 and a user-defined field named "ipv4FragmentOffset" with a value between 1 and 0x1fff inclusive
	// Structure is documented below.
	NetworkMatch RegionSecurityPolicyRuleNetworkMatchPtrInput
	// If set to true, the specified action is not enforced.
	Preview pulumi.BoolPtrInput
	// An integer indicating the priority of a rule in the list.
	// The priority must be a positive value between 0 and 2147483647.
	// Rules are evaluated from highest to lowest priority where 0 is the highest priority and 2147483647 is the lowest priority.
	Priority pulumi.IntPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// The Region in which the created Region Security Policy rule should reside.
	Region pulumi.StringPtrInput
	// The name of the security policy this rule belongs to.
	//
	// ***
	SecurityPolicy pulumi.StringPtrInput
}

func (RegionSecurityPolicyRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*regionSecurityPolicyRuleState)(nil)).Elem()
}

type regionSecurityPolicyRuleArgs struct {
	// The Action to perform when the rule is matched. The following are the valid actions:
	// * allow: allow access to target.
	// * deny(STATUS): deny access to target, returns the HTTP response code specified. Valid values for STATUS are 403, 404, and 502.
	// * rate_based_ban: limit client traffic to the configured threshold and ban the client if the traffic exceeds the threshold. Configure parameters for this action in RateLimitOptions. Requires rateLimitOptions to be set.
	// * redirect: redirect to a different target. This can either be an internal reCAPTCHA redirect, or an external URL-based redirect via a 302 response. Parameters for this action can be configured via redirectOptions. This action is only supported in Global Security Policies of type CLOUD_ARMOR.
	// * throttle: limit client traffic to the configured threshold. Configure parameters for this action in rateLimitOptions. Requires rateLimitOptions to be set for this.
	Action string `pulumi:"action"`
	// An optional description of this resource. Provide this property when you create the resource.
	Description *string `pulumi:"description"`
	// A match condition that incoming traffic is evaluated against.
	// If it evaluates to true, the corresponding 'action' is enforced.
	// Structure is documented below.
	Match *RegionSecurityPolicyRuleMatch `pulumi:"match"`
	// A match condition that incoming packets are evaluated against for CLOUD_ARMOR_NETWORK security policies. If it matches, the corresponding 'action' is enforced.
	// The match criteria for a rule consists of built-in match fields (like 'srcIpRanges') and potentially multiple user-defined match fields ('userDefinedFields').
	// Field values may be extracted directly from the packet or derived from it (e.g. 'srcRegionCodes'). Some fields may not be present in every packet (e.g. 'srcPorts'). A user-defined field is only present if the base header is found in the packet and the entire field is in bounds.
	// Each match field may specify which values can match it, listing one or more ranges, prefixes, or exact values that are considered a match for the field. A field value must be present in order to match a specified match field. If no match values are specified for a match field, then any field value is considered to match it, and it's not required to be present. For strings specifying '*' is also equivalent to match all.
	// For a packet to match a rule, all specified match fields must match the corresponding field values derived from the packet.
	// Example:
	// networkMatch: srcIpRanges: - "192.0.2.0/24" - "198.51.100.0/24" userDefinedFields: - name: "ipv4FragmentOffset" values: - "1-0x1fff"
	// The above match condition matches packets with a source IP in 192.0.2.0/24 or 198.51.100.0/24 and a user-defined field named "ipv4FragmentOffset" with a value between 1 and 0x1fff inclusive
	// Structure is documented below.
	NetworkMatch *RegionSecurityPolicyRuleNetworkMatch `pulumi:"networkMatch"`
	// If set to true, the specified action is not enforced.
	Preview *bool `pulumi:"preview"`
	// An integer indicating the priority of a rule in the list.
	// The priority must be a positive value between 0 and 2147483647.
	// Rules are evaluated from highest to lowest priority where 0 is the highest priority and 2147483647 is the lowest priority.
	Priority int `pulumi:"priority"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// The Region in which the created Region Security Policy rule should reside.
	Region string `pulumi:"region"`
	// The name of the security policy this rule belongs to.
	//
	// ***
	SecurityPolicy string `pulumi:"securityPolicy"`
}

// The set of arguments for constructing a RegionSecurityPolicyRule resource.
type RegionSecurityPolicyRuleArgs struct {
	// The Action to perform when the rule is matched. The following are the valid actions:
	// * allow: allow access to target.
	// * deny(STATUS): deny access to target, returns the HTTP response code specified. Valid values for STATUS are 403, 404, and 502.
	// * rate_based_ban: limit client traffic to the configured threshold and ban the client if the traffic exceeds the threshold. Configure parameters for this action in RateLimitOptions. Requires rateLimitOptions to be set.
	// * redirect: redirect to a different target. This can either be an internal reCAPTCHA redirect, or an external URL-based redirect via a 302 response. Parameters for this action can be configured via redirectOptions. This action is only supported in Global Security Policies of type CLOUD_ARMOR.
	// * throttle: limit client traffic to the configured threshold. Configure parameters for this action in rateLimitOptions. Requires rateLimitOptions to be set for this.
	Action pulumi.StringInput
	// An optional description of this resource. Provide this property when you create the resource.
	Description pulumi.StringPtrInput
	// A match condition that incoming traffic is evaluated against.
	// If it evaluates to true, the corresponding 'action' is enforced.
	// Structure is documented below.
	Match RegionSecurityPolicyRuleMatchPtrInput
	// A match condition that incoming packets are evaluated against for CLOUD_ARMOR_NETWORK security policies. If it matches, the corresponding 'action' is enforced.
	// The match criteria for a rule consists of built-in match fields (like 'srcIpRanges') and potentially multiple user-defined match fields ('userDefinedFields').
	// Field values may be extracted directly from the packet or derived from it (e.g. 'srcRegionCodes'). Some fields may not be present in every packet (e.g. 'srcPorts'). A user-defined field is only present if the base header is found in the packet and the entire field is in bounds.
	// Each match field may specify which values can match it, listing one or more ranges, prefixes, or exact values that are considered a match for the field. A field value must be present in order to match a specified match field. If no match values are specified for a match field, then any field value is considered to match it, and it's not required to be present. For strings specifying '*' is also equivalent to match all.
	// For a packet to match a rule, all specified match fields must match the corresponding field values derived from the packet.
	// Example:
	// networkMatch: srcIpRanges: - "192.0.2.0/24" - "198.51.100.0/24" userDefinedFields: - name: "ipv4FragmentOffset" values: - "1-0x1fff"
	// The above match condition matches packets with a source IP in 192.0.2.0/24 or 198.51.100.0/24 and a user-defined field named "ipv4FragmentOffset" with a value between 1 and 0x1fff inclusive
	// Structure is documented below.
	NetworkMatch RegionSecurityPolicyRuleNetworkMatchPtrInput
	// If set to true, the specified action is not enforced.
	Preview pulumi.BoolPtrInput
	// An integer indicating the priority of a rule in the list.
	// The priority must be a positive value between 0 and 2147483647.
	// Rules are evaluated from highest to lowest priority where 0 is the highest priority and 2147483647 is the lowest priority.
	Priority pulumi.IntInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// The Region in which the created Region Security Policy rule should reside.
	Region pulumi.StringInput
	// The name of the security policy this rule belongs to.
	//
	// ***
	SecurityPolicy pulumi.StringInput
}

func (RegionSecurityPolicyRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*regionSecurityPolicyRuleArgs)(nil)).Elem()
}

type RegionSecurityPolicyRuleInput interface {
	pulumi.Input

	ToRegionSecurityPolicyRuleOutput() RegionSecurityPolicyRuleOutput
	ToRegionSecurityPolicyRuleOutputWithContext(ctx context.Context) RegionSecurityPolicyRuleOutput
}

func (*RegionSecurityPolicyRule) ElementType() reflect.Type {
	return reflect.TypeOf((**RegionSecurityPolicyRule)(nil)).Elem()
}

func (i *RegionSecurityPolicyRule) ToRegionSecurityPolicyRuleOutput() RegionSecurityPolicyRuleOutput {
	return i.ToRegionSecurityPolicyRuleOutputWithContext(context.Background())
}

func (i *RegionSecurityPolicyRule) ToRegionSecurityPolicyRuleOutputWithContext(ctx context.Context) RegionSecurityPolicyRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegionSecurityPolicyRuleOutput)
}

// RegionSecurityPolicyRuleArrayInput is an input type that accepts RegionSecurityPolicyRuleArray and RegionSecurityPolicyRuleArrayOutput values.
// You can construct a concrete instance of `RegionSecurityPolicyRuleArrayInput` via:
//
//	RegionSecurityPolicyRuleArray{ RegionSecurityPolicyRuleArgs{...} }
type RegionSecurityPolicyRuleArrayInput interface {
	pulumi.Input

	ToRegionSecurityPolicyRuleArrayOutput() RegionSecurityPolicyRuleArrayOutput
	ToRegionSecurityPolicyRuleArrayOutputWithContext(context.Context) RegionSecurityPolicyRuleArrayOutput
}

type RegionSecurityPolicyRuleArray []RegionSecurityPolicyRuleInput

func (RegionSecurityPolicyRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RegionSecurityPolicyRule)(nil)).Elem()
}

func (i RegionSecurityPolicyRuleArray) ToRegionSecurityPolicyRuleArrayOutput() RegionSecurityPolicyRuleArrayOutput {
	return i.ToRegionSecurityPolicyRuleArrayOutputWithContext(context.Background())
}

func (i RegionSecurityPolicyRuleArray) ToRegionSecurityPolicyRuleArrayOutputWithContext(ctx context.Context) RegionSecurityPolicyRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegionSecurityPolicyRuleArrayOutput)
}

// RegionSecurityPolicyRuleMapInput is an input type that accepts RegionSecurityPolicyRuleMap and RegionSecurityPolicyRuleMapOutput values.
// You can construct a concrete instance of `RegionSecurityPolicyRuleMapInput` via:
//
//	RegionSecurityPolicyRuleMap{ "key": RegionSecurityPolicyRuleArgs{...} }
type RegionSecurityPolicyRuleMapInput interface {
	pulumi.Input

	ToRegionSecurityPolicyRuleMapOutput() RegionSecurityPolicyRuleMapOutput
	ToRegionSecurityPolicyRuleMapOutputWithContext(context.Context) RegionSecurityPolicyRuleMapOutput
}

type RegionSecurityPolicyRuleMap map[string]RegionSecurityPolicyRuleInput

func (RegionSecurityPolicyRuleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RegionSecurityPolicyRule)(nil)).Elem()
}

func (i RegionSecurityPolicyRuleMap) ToRegionSecurityPolicyRuleMapOutput() RegionSecurityPolicyRuleMapOutput {
	return i.ToRegionSecurityPolicyRuleMapOutputWithContext(context.Background())
}

func (i RegionSecurityPolicyRuleMap) ToRegionSecurityPolicyRuleMapOutputWithContext(ctx context.Context) RegionSecurityPolicyRuleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegionSecurityPolicyRuleMapOutput)
}

type RegionSecurityPolicyRuleOutput struct{ *pulumi.OutputState }

func (RegionSecurityPolicyRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegionSecurityPolicyRule)(nil)).Elem()
}

func (o RegionSecurityPolicyRuleOutput) ToRegionSecurityPolicyRuleOutput() RegionSecurityPolicyRuleOutput {
	return o
}

func (o RegionSecurityPolicyRuleOutput) ToRegionSecurityPolicyRuleOutputWithContext(ctx context.Context) RegionSecurityPolicyRuleOutput {
	return o
}

// The Action to perform when the rule is matched. The following are the valid actions:
// * allow: allow access to target.
// * deny(STATUS): deny access to target, returns the HTTP response code specified. Valid values for STATUS are 403, 404, and 502.
// * rate_based_ban: limit client traffic to the configured threshold and ban the client if the traffic exceeds the threshold. Configure parameters for this action in RateLimitOptions. Requires rateLimitOptions to be set.
// * redirect: redirect to a different target. This can either be an internal reCAPTCHA redirect, or an external URL-based redirect via a 302 response. Parameters for this action can be configured via redirectOptions. This action is only supported in Global Security Policies of type CLOUD_ARMOR.
// * throttle: limit client traffic to the configured threshold. Configure parameters for this action in rateLimitOptions. Requires rateLimitOptions to be set for this.
func (o RegionSecurityPolicyRuleOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v *RegionSecurityPolicyRule) pulumi.StringOutput { return v.Action }).(pulumi.StringOutput)
}

// An optional description of this resource. Provide this property when you create the resource.
func (o RegionSecurityPolicyRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegionSecurityPolicyRule) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// A match condition that incoming traffic is evaluated against.
// If it evaluates to true, the corresponding 'action' is enforced.
// Structure is documented below.
func (o RegionSecurityPolicyRuleOutput) Match() RegionSecurityPolicyRuleMatchPtrOutput {
	return o.ApplyT(func(v *RegionSecurityPolicyRule) RegionSecurityPolicyRuleMatchPtrOutput { return v.Match }).(RegionSecurityPolicyRuleMatchPtrOutput)
}

// A match condition that incoming packets are evaluated against for CLOUD_ARMOR_NETWORK security policies. If it matches, the corresponding 'action' is enforced.
// The match criteria for a rule consists of built-in match fields (like 'srcIpRanges') and potentially multiple user-defined match fields ('userDefinedFields').
// Field values may be extracted directly from the packet or derived from it (e.g. 'srcRegionCodes'). Some fields may not be present in every packet (e.g. 'srcPorts'). A user-defined field is only present if the base header is found in the packet and the entire field is in bounds.
// Each match field may specify which values can match it, listing one or more ranges, prefixes, or exact values that are considered a match for the field. A field value must be present in order to match a specified match field. If no match values are specified for a match field, then any field value is considered to match it, and it's not required to be present. For strings specifying '*' is also equivalent to match all.
// For a packet to match a rule, all specified match fields must match the corresponding field values derived from the packet.
// Example:
// networkMatch: srcIpRanges: - "192.0.2.0/24" - "198.51.100.0/24" userDefinedFields: - name: "ipv4FragmentOffset" values: - "1-0x1fff"
// The above match condition matches packets with a source IP in 192.0.2.0/24 or 198.51.100.0/24 and a user-defined field named "ipv4FragmentOffset" with a value between 1 and 0x1fff inclusive
// Structure is documented below.
func (o RegionSecurityPolicyRuleOutput) NetworkMatch() RegionSecurityPolicyRuleNetworkMatchPtrOutput {
	return o.ApplyT(func(v *RegionSecurityPolicyRule) RegionSecurityPolicyRuleNetworkMatchPtrOutput { return v.NetworkMatch }).(RegionSecurityPolicyRuleNetworkMatchPtrOutput)
}

// If set to true, the specified action is not enforced.
func (o RegionSecurityPolicyRuleOutput) Preview() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RegionSecurityPolicyRule) pulumi.BoolPtrOutput { return v.Preview }).(pulumi.BoolPtrOutput)
}

// An integer indicating the priority of a rule in the list.
// The priority must be a positive value between 0 and 2147483647.
// Rules are evaluated from highest to lowest priority where 0 is the highest priority and 2147483647 is the lowest priority.
func (o RegionSecurityPolicyRuleOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v *RegionSecurityPolicyRule) pulumi.IntOutput { return v.Priority }).(pulumi.IntOutput)
}

// The ID of the project in which the resource belongs.
// If it is not provided, the provider project is used.
func (o RegionSecurityPolicyRuleOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *RegionSecurityPolicyRule) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The Region in which the created Region Security Policy rule should reside.
func (o RegionSecurityPolicyRuleOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *RegionSecurityPolicyRule) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// The name of the security policy this rule belongs to.
//
// ***
func (o RegionSecurityPolicyRuleOutput) SecurityPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v *RegionSecurityPolicyRule) pulumi.StringOutput { return v.SecurityPolicy }).(pulumi.StringOutput)
}

type RegionSecurityPolicyRuleArrayOutput struct{ *pulumi.OutputState }

func (RegionSecurityPolicyRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RegionSecurityPolicyRule)(nil)).Elem()
}

func (o RegionSecurityPolicyRuleArrayOutput) ToRegionSecurityPolicyRuleArrayOutput() RegionSecurityPolicyRuleArrayOutput {
	return o
}

func (o RegionSecurityPolicyRuleArrayOutput) ToRegionSecurityPolicyRuleArrayOutputWithContext(ctx context.Context) RegionSecurityPolicyRuleArrayOutput {
	return o
}

func (o RegionSecurityPolicyRuleArrayOutput) Index(i pulumi.IntInput) RegionSecurityPolicyRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RegionSecurityPolicyRule {
		return vs[0].([]*RegionSecurityPolicyRule)[vs[1].(int)]
	}).(RegionSecurityPolicyRuleOutput)
}

type RegionSecurityPolicyRuleMapOutput struct{ *pulumi.OutputState }

func (RegionSecurityPolicyRuleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RegionSecurityPolicyRule)(nil)).Elem()
}

func (o RegionSecurityPolicyRuleMapOutput) ToRegionSecurityPolicyRuleMapOutput() RegionSecurityPolicyRuleMapOutput {
	return o
}

func (o RegionSecurityPolicyRuleMapOutput) ToRegionSecurityPolicyRuleMapOutputWithContext(ctx context.Context) RegionSecurityPolicyRuleMapOutput {
	return o
}

func (o RegionSecurityPolicyRuleMapOutput) MapIndex(k pulumi.StringInput) RegionSecurityPolicyRuleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RegionSecurityPolicyRule {
		return vs[0].(map[string]*RegionSecurityPolicyRule)[vs[1].(string)]
	}).(RegionSecurityPolicyRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RegionSecurityPolicyRuleInput)(nil)).Elem(), &RegionSecurityPolicyRule{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegionSecurityPolicyRuleArrayInput)(nil)).Elem(), RegionSecurityPolicyRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegionSecurityPolicyRuleMapInput)(nil)).Elem(), RegionSecurityPolicyRuleMap{})
	pulumi.RegisterOutputType(RegionSecurityPolicyRuleOutput{})
	pulumi.RegisterOutputType(RegionSecurityPolicyRuleArrayOutput{})
	pulumi.RegisterOutputType(RegionSecurityPolicyRuleMapOutput{})
}
