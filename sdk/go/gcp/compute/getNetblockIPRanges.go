// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package compute

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get the IP addresses from different special IP ranges on Google Cloud Platform.
//
// ## Example Usage
// ### Cloud Ranges
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/compute"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			netblock, err := compute.GetNetblockIPRanges(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("cidrBlocks", netblock.CidrBlocks)
//			ctx.Export("cidrBlocksIpv4", netblock.CidrBlocksIpv4s)
//			ctx.Export("cidrBlocksIpv6", netblock.CidrBlocksIpv6s)
//			return nil
//		})
//	}
//
// ```
// ### Allow Health Checks
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/compute"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			legacy_hcs, err := compute.GetNetblockIPRanges(ctx, &compute.GetNetblockIPRangesArgs{
//				RangeType: pulumi.StringRef("legacy-health-checkers"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = compute.NewNetwork(ctx, "default", nil)
//			if err != nil {
//				return err
//			}
//			_, err = compute.NewFirewall(ctx, "allow-hcs", &compute.FirewallArgs{
//				Network: _default.Name,
//				Allows: compute.FirewallAllowArray{
//					&compute.FirewallAllowArgs{
//						Protocol: pulumi.String("tcp"),
//						Ports: pulumi.StringArray{
//							pulumi.String("80"),
//						},
//					},
//				},
//				SourceRanges: interface{}(legacy_hcs.CidrBlocksIpv4s),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetNetblockIPRanges(ctx *pulumi.Context, args *GetNetblockIPRangesArgs, opts ...pulumi.InvokeOption) (*GetNetblockIPRangesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetNetblockIPRangesResult
	err := ctx.Invoke("gcp:compute/getNetblockIPRanges:getNetblockIPRanges", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNetblockIPRanges.
type GetNetblockIPRangesArgs struct {
	// The type of range for which to provide results.
	//
	// Defaults to `cloud-netblocks`. The following `rangeType`s are supported:
	//
	// * `cloud-netblocks` - Corresponds to the IP addresses used for resources on Google Cloud Platform. [More details.](https://cloud.google.com/compute/docs/faq#where_can_i_find_product_name_short_ip_ranges)
	//
	// * `google-netblocks` - Corresponds to IP addresses used for Google services. [More details.](https://cloud.google.com/compute/docs/faq#where_can_i_find_product_name_short_ip_ranges)
	//
	// * `restricted-googleapis` - Corresponds to the IP addresses used for Private Google Access only for services that support VPC Service Controls API access. [More details.](https://cloud.google.com/vpc/docs/private-access-options#domain-vips)
	//
	// * `private-googleapis` - Corresponds to the IP addresses used for Private Google Access for services that do not support VPC Service Controls. [More details.](https://cloud.google.com/vpc/docs/private-access-options#domain-vips)
	//
	// * `dns-forwarders` - Corresponds to the IP addresses used to originate Cloud DNS outbound forwarding. [More details.](https://cloud.google.com/dns/zones/#creating-forwarding-zones)
	//
	// * `iap-forwarders` - Corresponds to the IP addresses used for Cloud IAP for TCP forwarding. [More details.](https://cloud.google.com/iap/docs/using-tcp-forwarding)
	//
	// * `health-checkers` - Corresponds to the IP addresses used for health checking in Cloud Load Balancing. [More details.](https://cloud.google.com/load-balancing/docs/health-checks)
	//
	// * `legacy-health-checkers` - Corresponds to the IP addresses used for legacy style health checkers (used by Network Load Balancing). [ More details.](https://cloud.google.com/load-balancing/docs/health-checks)
	RangeType *string `pulumi:"rangeType"`
}

// A collection of values returned by getNetblockIPRanges.
type GetNetblockIPRangesResult struct {
	// Retrieve list of all CIDR blocks.
	CidrBlocks []string `pulumi:"cidrBlocks"`
	// Retrieve list of the IPv4 CIDR blocks
	CidrBlocksIpv4s []string `pulumi:"cidrBlocksIpv4s"`
	// Retrieve list of the IPv6 CIDR blocks, if available.
	CidrBlocksIpv6s []string `pulumi:"cidrBlocksIpv6s"`
	// The provider-assigned unique ID for this managed resource.
	Id        string  `pulumi:"id"`
	RangeType *string `pulumi:"rangeType"`
}

func GetNetblockIPRangesOutput(ctx *pulumi.Context, args GetNetblockIPRangesOutputArgs, opts ...pulumi.InvokeOption) GetNetblockIPRangesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetNetblockIPRangesResult, error) {
			args := v.(GetNetblockIPRangesArgs)
			r, err := GetNetblockIPRanges(ctx, &args, opts...)
			var s GetNetblockIPRangesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetNetblockIPRangesResultOutput)
}

// A collection of arguments for invoking getNetblockIPRanges.
type GetNetblockIPRangesOutputArgs struct {
	// The type of range for which to provide results.
	//
	// Defaults to `cloud-netblocks`. The following `rangeType`s are supported:
	//
	// * `cloud-netblocks` - Corresponds to the IP addresses used for resources on Google Cloud Platform. [More details.](https://cloud.google.com/compute/docs/faq#where_can_i_find_product_name_short_ip_ranges)
	//
	// * `google-netblocks` - Corresponds to IP addresses used for Google services. [More details.](https://cloud.google.com/compute/docs/faq#where_can_i_find_product_name_short_ip_ranges)
	//
	// * `restricted-googleapis` - Corresponds to the IP addresses used for Private Google Access only for services that support VPC Service Controls API access. [More details.](https://cloud.google.com/vpc/docs/private-access-options#domain-vips)
	//
	// * `private-googleapis` - Corresponds to the IP addresses used for Private Google Access for services that do not support VPC Service Controls. [More details.](https://cloud.google.com/vpc/docs/private-access-options#domain-vips)
	//
	// * `dns-forwarders` - Corresponds to the IP addresses used to originate Cloud DNS outbound forwarding. [More details.](https://cloud.google.com/dns/zones/#creating-forwarding-zones)
	//
	// * `iap-forwarders` - Corresponds to the IP addresses used for Cloud IAP for TCP forwarding. [More details.](https://cloud.google.com/iap/docs/using-tcp-forwarding)
	//
	// * `health-checkers` - Corresponds to the IP addresses used for health checking in Cloud Load Balancing. [More details.](https://cloud.google.com/load-balancing/docs/health-checks)
	//
	// * `legacy-health-checkers` - Corresponds to the IP addresses used for legacy style health checkers (used by Network Load Balancing). [ More details.](https://cloud.google.com/load-balancing/docs/health-checks)
	RangeType pulumi.StringPtrInput `pulumi:"rangeType"`
}

func (GetNetblockIPRangesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetblockIPRangesArgs)(nil)).Elem()
}

// A collection of values returned by getNetblockIPRanges.
type GetNetblockIPRangesResultOutput struct{ *pulumi.OutputState }

func (GetNetblockIPRangesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetblockIPRangesResult)(nil)).Elem()
}

func (o GetNetblockIPRangesResultOutput) ToGetNetblockIPRangesResultOutput() GetNetblockIPRangesResultOutput {
	return o
}

func (o GetNetblockIPRangesResultOutput) ToGetNetblockIPRangesResultOutputWithContext(ctx context.Context) GetNetblockIPRangesResultOutput {
	return o
}

// Retrieve list of all CIDR blocks.
func (o GetNetblockIPRangesResultOutput) CidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNetblockIPRangesResult) []string { return v.CidrBlocks }).(pulumi.StringArrayOutput)
}

// Retrieve list of the IPv4 CIDR blocks
func (o GetNetblockIPRangesResultOutput) CidrBlocksIpv4s() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNetblockIPRangesResult) []string { return v.CidrBlocksIpv4s }).(pulumi.StringArrayOutput)
}

// Retrieve list of the IPv6 CIDR blocks, if available.
func (o GetNetblockIPRangesResultOutput) CidrBlocksIpv6s() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNetblockIPRangesResult) []string { return v.CidrBlocksIpv6s }).(pulumi.StringArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetNetblockIPRangesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetblockIPRangesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetNetblockIPRangesResultOutput) RangeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNetblockIPRangesResult) *string { return v.RangeType }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetNetblockIPRangesResultOutput{})
}
