// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package compute

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Persistent disks are durable storage devices that function similarly to
// the physical disks in a desktop or a server. Compute Engine manages the
// hardware behind these devices to ensure data redundancy and optimize
// performance for you. Persistent disks are available as either standard
// hard disk drives (HDD) or solid-state drives (SSD).
//
// Persistent disks are located independently from your virtual machine
// instances, so you can detach or move persistent disks to keep your data
// even after you delete your instances. Persistent disk performance scales
// automatically with size, so you can resize your existing persistent disks
// or add more persistent disks to an instance to meet your performance and
// storage space requirements.
//
// Add a persistent disk to your instance when you need reliable and
// affordable storage with consistent performance characteristics.
//
// To get more information about Disk, see:
//
// * [API documentation](https://cloud.google.com/compute/docs/reference/v1/disks)
// * How-to Guides
//     * [Adding a persistent disk](https://cloud.google.com/compute/docs/disks/add-persistent-disk)
//
// > **Warning:** All arguments including `disk_encryption_key.raw_key` will be stored in the raw
// state as plain-text. [Read more about secrets in state](https://www.pulumi.com/docs/intro/concepts/programming-model/#secrets).
//
// ## Example Usage
// ### Disk Basic
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-gcp/sdk/v4/go/gcp/compute"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := compute.NewDisk(ctx, "_default", &compute.DiskArgs{
// 			Image: pulumi.String("debian-8-jessie-v20170523"),
// 			Labels: pulumi.StringMap{
// 				"environment": pulumi.String("dev"),
// 			},
// 			PhysicalBlockSizeBytes: pulumi.Int(4096),
// 			Type:                   pulumi.String("pd-ssd"),
// 			Zone:                   pulumi.String("us-central1-a"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Disk can be imported using any of these accepted formats
//
// ```sh
//  $ pulumi import gcp:compute/disk:Disk default projects/{{project}}/zones/{{zone}}/disks/{{name}}
// ```
//
// ```sh
//  $ pulumi import gcp:compute/disk:Disk default {{project}}/{{zone}}/{{name}}
// ```
//
// ```sh
//  $ pulumi import gcp:compute/disk:Disk default {{zone}}/{{name}}
// ```
//
// ```sh
//  $ pulumi import gcp:compute/disk:Disk default {{name}}
// ```
type Disk struct {
	pulumi.CustomResourceState

	// Creation timestamp in RFC3339 text format.
	CreationTimestamp pulumi.StringOutput `pulumi:"creationTimestamp"`
	// An optional description of this resource. Provide this property when
	// you create the resource.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Encrypts the disk using a customer-supplied encryption key.
	// After you encrypt a disk with a customer-supplied key, you must
	// provide the same key if you use the disk later (e.g. to create a disk
	// snapshot or an image, or to attach the disk to a virtual machine).
	// Customer-supplied encryption keys do not protect access to metadata of
	// the disk.
	// If you do not provide an encryption key when creating the disk, then
	// the disk will be encrypted using an automatically generated key and
	// you do not need to provide a key to use the disk later.
	// Structure is documented below.
	DiskEncryptionKey DiskDiskEncryptionKeyPtrOutput `pulumi:"diskEncryptionKey"`
	// The image from which to initialize this disk. This can be
	// one of: the image's `selfLink`, `projects/{project}/global/images/{image}`,
	// `projects/{project}/global/images/family/{family}`, `global/images/{image}`,
	// `global/images/family/{family}`, `family/{family}`, `{project}/{family}`,
	// `{project}/{image}`, `{family}`, or `{image}`. If referred by family, the
	// images names must include the family name. If they don't, use the
	// [compute.Image data source](https://www.terraform.io/docs/providers/google/d/compute_image.html).
	// For instance, the image `centos-6-v20180104` includes its family name `centos-6`.
	// These images can be referred by family name here.
	Image pulumi.StringPtrOutput `pulumi:"image"`
	// Specifies the disk interface to use for attaching this disk, which is either SCSI or NVME. The default is SCSI. Default
	// value: "SCSI" Possible values: ["SCSI", "NVME"]
	Interface pulumi.StringPtrOutput `pulumi:"interface"`
	// The fingerprint used for optimistic locking of this resource. Used internally during updates.
	LabelFingerprint pulumi.StringOutput `pulumi:"labelFingerprint"`
	// Labels to apply to this disk.  A list of key->value pairs.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// Last attach timestamp in RFC3339 text format.
	LastAttachTimestamp pulumi.StringOutput `pulumi:"lastAttachTimestamp"`
	// Last detach timestamp in RFC3339 text format.
	LastDetachTimestamp pulumi.StringOutput `pulumi:"lastDetachTimestamp"`
	// Indicates whether or not the disk can be read/write attached to more than one instance.
	MultiWriter pulumi.BoolPtrOutput `pulumi:"multiWriter"`
	// Name of the resource. Provided by the client when the resource is
	// created. The name must be 1-63 characters long, and comply with
	// RFC1035. Specifically, the name must be 1-63 characters long and match
	// the regular expression `a-z?` which means the
	// first character must be a lowercase letter, and all following
	// characters must be a dash, lowercase letter, or digit, except the last
	// character, which cannot be a dash.
	Name pulumi.StringOutput `pulumi:"name"`
	// Physical block size of the persistent disk, in bytes. If not present
	// in a request, a default value is used. Currently supported sizes
	// are 4096 and 16384, other sizes may be added in the future.
	// If an unsupported value is requested, the error message will list
	// the supported values for the caller's project.
	PhysicalBlockSizeBytes pulumi.IntOutput `pulumi:"physicalBlockSizeBytes"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
	// Resource policies applied to this disk for automatic snapshot creations.
	// ~>**NOTE** This value does not support updating the
	// resource policy, as resource policies can not be updated more than
	// one at a time. Use
	// `compute.DiskResourcePolicyAttachment`
	// to allow for updating the resource policy attached to the disk.
	ResourcePolicies pulumi.StringArrayOutput `pulumi:"resourcePolicies"`
	// The URI of the created resource.
	SelfLink pulumi.StringOutput `pulumi:"selfLink"`
	// Size of the persistent disk, specified in GB. You can specify this
	// field when creating a persistent disk using the `image` or
	// `snapshot` parameter, or specify it alone to create an empty
	// persistent disk.
	// If you specify this field along with `image` or `snapshot`,
	// the value must not be less than the size of the image
	// or the size of the snapshot.
	Size pulumi.IntOutput `pulumi:"size"`
	// The source snapshot used to create this disk. You can provide this as
	// a partial or full URL to the resource. If the snapshot is in another
	// project than this disk, you must supply a full URL. For example, the
	// following are valid values:
	// * `https://www.googleapis.com/compute/v1/projects/project/global/snapshots/snapshot`
	// * `projects/project/global/snapshots/snapshot`
	// * `global/snapshots/snapshot`
	// * `snapshot`
	Snapshot pulumi.StringPtrOutput `pulumi:"snapshot"`
	// The customer-supplied encryption key of the source image. Required if
	// the source image is protected by a customer-supplied encryption key.
	// Structure is documented below.
	SourceImageEncryptionKey DiskSourceImageEncryptionKeyPtrOutput `pulumi:"sourceImageEncryptionKey"`
	// The ID value of the image used to create this disk. This value identifies the exact image that was used to create this
	// persistent disk. For example, if you created the persistent disk from an image that was later deleted and recreated
	// under the same name, the source image ID would identify the exact version of the image that was used.
	SourceImageId pulumi.StringOutput `pulumi:"sourceImageId"`
	// The customer-supplied encryption key of the source snapshot. Required
	// if the source snapshot is protected by a customer-supplied encryption
	// key.
	// Structure is documented below.
	SourceSnapshotEncryptionKey DiskSourceSnapshotEncryptionKeyPtrOutput `pulumi:"sourceSnapshotEncryptionKey"`
	// The unique ID of the snapshot used to create this disk. This value identifies the exact snapshot that was used to create
	// this persistent disk. For example, if you created the persistent disk from a snapshot that was later deleted and
	// recreated under the same name, the source snapshot ID would identify the exact version of the snapshot that was used.
	SourceSnapshotId pulumi.StringOutput `pulumi:"sourceSnapshotId"`
	// URL of the disk type resource describing which disk type to use to
	// create the disk. Provide this when creating the disk.
	Type pulumi.StringPtrOutput `pulumi:"type"`
	// Links to the users of the disk (attached instances) in form: project/zones/zone/instances/instance
	Users pulumi.StringArrayOutput `pulumi:"users"`
	// A reference to the zone where the disk resides.
	Zone pulumi.StringOutput `pulumi:"zone"`
}

// NewDisk registers a new resource with the given unique name, arguments, and options.
func NewDisk(ctx *pulumi.Context,
	name string, args *DiskArgs, opts ...pulumi.ResourceOption) (*Disk, error) {
	if args == nil {
		args = &DiskArgs{}
	}

	var resource Disk
	err := ctx.RegisterResource("gcp:compute/disk:Disk", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDisk gets an existing Disk resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDisk(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DiskState, opts ...pulumi.ResourceOption) (*Disk, error) {
	var resource Disk
	err := ctx.ReadResource("gcp:compute/disk:Disk", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Disk resources.
type diskState struct {
	// Creation timestamp in RFC3339 text format.
	CreationTimestamp *string `pulumi:"creationTimestamp"`
	// An optional description of this resource. Provide this property when
	// you create the resource.
	Description *string `pulumi:"description"`
	// Encrypts the disk using a customer-supplied encryption key.
	// After you encrypt a disk with a customer-supplied key, you must
	// provide the same key if you use the disk later (e.g. to create a disk
	// snapshot or an image, or to attach the disk to a virtual machine).
	// Customer-supplied encryption keys do not protect access to metadata of
	// the disk.
	// If you do not provide an encryption key when creating the disk, then
	// the disk will be encrypted using an automatically generated key and
	// you do not need to provide a key to use the disk later.
	// Structure is documented below.
	DiskEncryptionKey *DiskDiskEncryptionKey `pulumi:"diskEncryptionKey"`
	// The image from which to initialize this disk. This can be
	// one of: the image's `selfLink`, `projects/{project}/global/images/{image}`,
	// `projects/{project}/global/images/family/{family}`, `global/images/{image}`,
	// `global/images/family/{family}`, `family/{family}`, `{project}/{family}`,
	// `{project}/{image}`, `{family}`, or `{image}`. If referred by family, the
	// images names must include the family name. If they don't, use the
	// [compute.Image data source](https://www.terraform.io/docs/providers/google/d/compute_image.html).
	// For instance, the image `centos-6-v20180104` includes its family name `centos-6`.
	// These images can be referred by family name here.
	Image *string `pulumi:"image"`
	// Specifies the disk interface to use for attaching this disk, which is either SCSI or NVME. The default is SCSI. Default
	// value: "SCSI" Possible values: ["SCSI", "NVME"]
	Interface *string `pulumi:"interface"`
	// The fingerprint used for optimistic locking of this resource. Used internally during updates.
	LabelFingerprint *string `pulumi:"labelFingerprint"`
	// Labels to apply to this disk.  A list of key->value pairs.
	Labels map[string]string `pulumi:"labels"`
	// Last attach timestamp in RFC3339 text format.
	LastAttachTimestamp *string `pulumi:"lastAttachTimestamp"`
	// Last detach timestamp in RFC3339 text format.
	LastDetachTimestamp *string `pulumi:"lastDetachTimestamp"`
	// Indicates whether or not the disk can be read/write attached to more than one instance.
	MultiWriter *bool `pulumi:"multiWriter"`
	// Name of the resource. Provided by the client when the resource is
	// created. The name must be 1-63 characters long, and comply with
	// RFC1035. Specifically, the name must be 1-63 characters long and match
	// the regular expression `a-z?` which means the
	// first character must be a lowercase letter, and all following
	// characters must be a dash, lowercase letter, or digit, except the last
	// character, which cannot be a dash.
	Name *string `pulumi:"name"`
	// Physical block size of the persistent disk, in bytes. If not present
	// in a request, a default value is used. Currently supported sizes
	// are 4096 and 16384, other sizes may be added in the future.
	// If an unsupported value is requested, the error message will list
	// the supported values for the caller's project.
	PhysicalBlockSizeBytes *int `pulumi:"physicalBlockSizeBytes"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// Resource policies applied to this disk for automatic snapshot creations.
	// ~>**NOTE** This value does not support updating the
	// resource policy, as resource policies can not be updated more than
	// one at a time. Use
	// `compute.DiskResourcePolicyAttachment`
	// to allow for updating the resource policy attached to the disk.
	ResourcePolicies []string `pulumi:"resourcePolicies"`
	// The URI of the created resource.
	SelfLink *string `pulumi:"selfLink"`
	// Size of the persistent disk, specified in GB. You can specify this
	// field when creating a persistent disk using the `image` or
	// `snapshot` parameter, or specify it alone to create an empty
	// persistent disk.
	// If you specify this field along with `image` or `snapshot`,
	// the value must not be less than the size of the image
	// or the size of the snapshot.
	Size *int `pulumi:"size"`
	// The source snapshot used to create this disk. You can provide this as
	// a partial or full URL to the resource. If the snapshot is in another
	// project than this disk, you must supply a full URL. For example, the
	// following are valid values:
	// * `https://www.googleapis.com/compute/v1/projects/project/global/snapshots/snapshot`
	// * `projects/project/global/snapshots/snapshot`
	// * `global/snapshots/snapshot`
	// * `snapshot`
	Snapshot *string `pulumi:"snapshot"`
	// The customer-supplied encryption key of the source image. Required if
	// the source image is protected by a customer-supplied encryption key.
	// Structure is documented below.
	SourceImageEncryptionKey *DiskSourceImageEncryptionKey `pulumi:"sourceImageEncryptionKey"`
	// The ID value of the image used to create this disk. This value identifies the exact image that was used to create this
	// persistent disk. For example, if you created the persistent disk from an image that was later deleted and recreated
	// under the same name, the source image ID would identify the exact version of the image that was used.
	SourceImageId *string `pulumi:"sourceImageId"`
	// The customer-supplied encryption key of the source snapshot. Required
	// if the source snapshot is protected by a customer-supplied encryption
	// key.
	// Structure is documented below.
	SourceSnapshotEncryptionKey *DiskSourceSnapshotEncryptionKey `pulumi:"sourceSnapshotEncryptionKey"`
	// The unique ID of the snapshot used to create this disk. This value identifies the exact snapshot that was used to create
	// this persistent disk. For example, if you created the persistent disk from a snapshot that was later deleted and
	// recreated under the same name, the source snapshot ID would identify the exact version of the snapshot that was used.
	SourceSnapshotId *string `pulumi:"sourceSnapshotId"`
	// URL of the disk type resource describing which disk type to use to
	// create the disk. Provide this when creating the disk.
	Type *string `pulumi:"type"`
	// Links to the users of the disk (attached instances) in form: project/zones/zone/instances/instance
	Users []string `pulumi:"users"`
	// A reference to the zone where the disk resides.
	Zone *string `pulumi:"zone"`
}

type DiskState struct {
	// Creation timestamp in RFC3339 text format.
	CreationTimestamp pulumi.StringPtrInput
	// An optional description of this resource. Provide this property when
	// you create the resource.
	Description pulumi.StringPtrInput
	// Encrypts the disk using a customer-supplied encryption key.
	// After you encrypt a disk with a customer-supplied key, you must
	// provide the same key if you use the disk later (e.g. to create a disk
	// snapshot or an image, or to attach the disk to a virtual machine).
	// Customer-supplied encryption keys do not protect access to metadata of
	// the disk.
	// If you do not provide an encryption key when creating the disk, then
	// the disk will be encrypted using an automatically generated key and
	// you do not need to provide a key to use the disk later.
	// Structure is documented below.
	DiskEncryptionKey DiskDiskEncryptionKeyPtrInput
	// The image from which to initialize this disk. This can be
	// one of: the image's `selfLink`, `projects/{project}/global/images/{image}`,
	// `projects/{project}/global/images/family/{family}`, `global/images/{image}`,
	// `global/images/family/{family}`, `family/{family}`, `{project}/{family}`,
	// `{project}/{image}`, `{family}`, or `{image}`. If referred by family, the
	// images names must include the family name. If they don't, use the
	// [compute.Image data source](https://www.terraform.io/docs/providers/google/d/compute_image.html).
	// For instance, the image `centos-6-v20180104` includes its family name `centos-6`.
	// These images can be referred by family name here.
	Image pulumi.StringPtrInput
	// Specifies the disk interface to use for attaching this disk, which is either SCSI or NVME. The default is SCSI. Default
	// value: "SCSI" Possible values: ["SCSI", "NVME"]
	Interface pulumi.StringPtrInput
	// The fingerprint used for optimistic locking of this resource. Used internally during updates.
	LabelFingerprint pulumi.StringPtrInput
	// Labels to apply to this disk.  A list of key->value pairs.
	Labels pulumi.StringMapInput
	// Last attach timestamp in RFC3339 text format.
	LastAttachTimestamp pulumi.StringPtrInput
	// Last detach timestamp in RFC3339 text format.
	LastDetachTimestamp pulumi.StringPtrInput
	// Indicates whether or not the disk can be read/write attached to more than one instance.
	MultiWriter pulumi.BoolPtrInput
	// Name of the resource. Provided by the client when the resource is
	// created. The name must be 1-63 characters long, and comply with
	// RFC1035. Specifically, the name must be 1-63 characters long and match
	// the regular expression `a-z?` which means the
	// first character must be a lowercase letter, and all following
	// characters must be a dash, lowercase letter, or digit, except the last
	// character, which cannot be a dash.
	Name pulumi.StringPtrInput
	// Physical block size of the persistent disk, in bytes. If not present
	// in a request, a default value is used. Currently supported sizes
	// are 4096 and 16384, other sizes may be added in the future.
	// If an unsupported value is requested, the error message will list
	// the supported values for the caller's project.
	PhysicalBlockSizeBytes pulumi.IntPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// Resource policies applied to this disk for automatic snapshot creations.
	// ~>**NOTE** This value does not support updating the
	// resource policy, as resource policies can not be updated more than
	// one at a time. Use
	// `compute.DiskResourcePolicyAttachment`
	// to allow for updating the resource policy attached to the disk.
	ResourcePolicies pulumi.StringArrayInput
	// The URI of the created resource.
	SelfLink pulumi.StringPtrInput
	// Size of the persistent disk, specified in GB. You can specify this
	// field when creating a persistent disk using the `image` or
	// `snapshot` parameter, or specify it alone to create an empty
	// persistent disk.
	// If you specify this field along with `image` or `snapshot`,
	// the value must not be less than the size of the image
	// or the size of the snapshot.
	Size pulumi.IntPtrInput
	// The source snapshot used to create this disk. You can provide this as
	// a partial or full URL to the resource. If the snapshot is in another
	// project than this disk, you must supply a full URL. For example, the
	// following are valid values:
	// * `https://www.googleapis.com/compute/v1/projects/project/global/snapshots/snapshot`
	// * `projects/project/global/snapshots/snapshot`
	// * `global/snapshots/snapshot`
	// * `snapshot`
	Snapshot pulumi.StringPtrInput
	// The customer-supplied encryption key of the source image. Required if
	// the source image is protected by a customer-supplied encryption key.
	// Structure is documented below.
	SourceImageEncryptionKey DiskSourceImageEncryptionKeyPtrInput
	// The ID value of the image used to create this disk. This value identifies the exact image that was used to create this
	// persistent disk. For example, if you created the persistent disk from an image that was later deleted and recreated
	// under the same name, the source image ID would identify the exact version of the image that was used.
	SourceImageId pulumi.StringPtrInput
	// The customer-supplied encryption key of the source snapshot. Required
	// if the source snapshot is protected by a customer-supplied encryption
	// key.
	// Structure is documented below.
	SourceSnapshotEncryptionKey DiskSourceSnapshotEncryptionKeyPtrInput
	// The unique ID of the snapshot used to create this disk. This value identifies the exact snapshot that was used to create
	// this persistent disk. For example, if you created the persistent disk from a snapshot that was later deleted and
	// recreated under the same name, the source snapshot ID would identify the exact version of the snapshot that was used.
	SourceSnapshotId pulumi.StringPtrInput
	// URL of the disk type resource describing which disk type to use to
	// create the disk. Provide this when creating the disk.
	Type pulumi.StringPtrInput
	// Links to the users of the disk (attached instances) in form: project/zones/zone/instances/instance
	Users pulumi.StringArrayInput
	// A reference to the zone where the disk resides.
	Zone pulumi.StringPtrInput
}

func (DiskState) ElementType() reflect.Type {
	return reflect.TypeOf((*diskState)(nil)).Elem()
}

type diskArgs struct {
	// An optional description of this resource. Provide this property when
	// you create the resource.
	Description *string `pulumi:"description"`
	// Encrypts the disk using a customer-supplied encryption key.
	// After you encrypt a disk with a customer-supplied key, you must
	// provide the same key if you use the disk later (e.g. to create a disk
	// snapshot or an image, or to attach the disk to a virtual machine).
	// Customer-supplied encryption keys do not protect access to metadata of
	// the disk.
	// If you do not provide an encryption key when creating the disk, then
	// the disk will be encrypted using an automatically generated key and
	// you do not need to provide a key to use the disk later.
	// Structure is documented below.
	DiskEncryptionKey *DiskDiskEncryptionKey `pulumi:"diskEncryptionKey"`
	// The image from which to initialize this disk. This can be
	// one of: the image's `selfLink`, `projects/{project}/global/images/{image}`,
	// `projects/{project}/global/images/family/{family}`, `global/images/{image}`,
	// `global/images/family/{family}`, `family/{family}`, `{project}/{family}`,
	// `{project}/{image}`, `{family}`, or `{image}`. If referred by family, the
	// images names must include the family name. If they don't, use the
	// [compute.Image data source](https://www.terraform.io/docs/providers/google/d/compute_image.html).
	// For instance, the image `centos-6-v20180104` includes its family name `centos-6`.
	// These images can be referred by family name here.
	Image *string `pulumi:"image"`
	// Specifies the disk interface to use for attaching this disk, which is either SCSI or NVME. The default is SCSI. Default
	// value: "SCSI" Possible values: ["SCSI", "NVME"]
	Interface *string `pulumi:"interface"`
	// Labels to apply to this disk.  A list of key->value pairs.
	Labels map[string]string `pulumi:"labels"`
	// Indicates whether or not the disk can be read/write attached to more than one instance.
	MultiWriter *bool `pulumi:"multiWriter"`
	// Name of the resource. Provided by the client when the resource is
	// created. The name must be 1-63 characters long, and comply with
	// RFC1035. Specifically, the name must be 1-63 characters long and match
	// the regular expression `a-z?` which means the
	// first character must be a lowercase letter, and all following
	// characters must be a dash, lowercase letter, or digit, except the last
	// character, which cannot be a dash.
	Name *string `pulumi:"name"`
	// Physical block size of the persistent disk, in bytes. If not present
	// in a request, a default value is used. Currently supported sizes
	// are 4096 and 16384, other sizes may be added in the future.
	// If an unsupported value is requested, the error message will list
	// the supported values for the caller's project.
	PhysicalBlockSizeBytes *int `pulumi:"physicalBlockSizeBytes"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// Resource policies applied to this disk for automatic snapshot creations.
	// ~>**NOTE** This value does not support updating the
	// resource policy, as resource policies can not be updated more than
	// one at a time. Use
	// `compute.DiskResourcePolicyAttachment`
	// to allow for updating the resource policy attached to the disk.
	ResourcePolicies []string `pulumi:"resourcePolicies"`
	// Size of the persistent disk, specified in GB. You can specify this
	// field when creating a persistent disk using the `image` or
	// `snapshot` parameter, or specify it alone to create an empty
	// persistent disk.
	// If you specify this field along with `image` or `snapshot`,
	// the value must not be less than the size of the image
	// or the size of the snapshot.
	Size *int `pulumi:"size"`
	// The source snapshot used to create this disk. You can provide this as
	// a partial or full URL to the resource. If the snapshot is in another
	// project than this disk, you must supply a full URL. For example, the
	// following are valid values:
	// * `https://www.googleapis.com/compute/v1/projects/project/global/snapshots/snapshot`
	// * `projects/project/global/snapshots/snapshot`
	// * `global/snapshots/snapshot`
	// * `snapshot`
	Snapshot *string `pulumi:"snapshot"`
	// The customer-supplied encryption key of the source image. Required if
	// the source image is protected by a customer-supplied encryption key.
	// Structure is documented below.
	SourceImageEncryptionKey *DiskSourceImageEncryptionKey `pulumi:"sourceImageEncryptionKey"`
	// The customer-supplied encryption key of the source snapshot. Required
	// if the source snapshot is protected by a customer-supplied encryption
	// key.
	// Structure is documented below.
	SourceSnapshotEncryptionKey *DiskSourceSnapshotEncryptionKey `pulumi:"sourceSnapshotEncryptionKey"`
	// URL of the disk type resource describing which disk type to use to
	// create the disk. Provide this when creating the disk.
	Type *string `pulumi:"type"`
	// A reference to the zone where the disk resides.
	Zone *string `pulumi:"zone"`
}

// The set of arguments for constructing a Disk resource.
type DiskArgs struct {
	// An optional description of this resource. Provide this property when
	// you create the resource.
	Description pulumi.StringPtrInput
	// Encrypts the disk using a customer-supplied encryption key.
	// After you encrypt a disk with a customer-supplied key, you must
	// provide the same key if you use the disk later (e.g. to create a disk
	// snapshot or an image, or to attach the disk to a virtual machine).
	// Customer-supplied encryption keys do not protect access to metadata of
	// the disk.
	// If you do not provide an encryption key when creating the disk, then
	// the disk will be encrypted using an automatically generated key and
	// you do not need to provide a key to use the disk later.
	// Structure is documented below.
	DiskEncryptionKey DiskDiskEncryptionKeyPtrInput
	// The image from which to initialize this disk. This can be
	// one of: the image's `selfLink`, `projects/{project}/global/images/{image}`,
	// `projects/{project}/global/images/family/{family}`, `global/images/{image}`,
	// `global/images/family/{family}`, `family/{family}`, `{project}/{family}`,
	// `{project}/{image}`, `{family}`, or `{image}`. If referred by family, the
	// images names must include the family name. If they don't, use the
	// [compute.Image data source](https://www.terraform.io/docs/providers/google/d/compute_image.html).
	// For instance, the image `centos-6-v20180104` includes its family name `centos-6`.
	// These images can be referred by family name here.
	Image pulumi.StringPtrInput
	// Specifies the disk interface to use for attaching this disk, which is either SCSI or NVME. The default is SCSI. Default
	// value: "SCSI" Possible values: ["SCSI", "NVME"]
	Interface pulumi.StringPtrInput
	// Labels to apply to this disk.  A list of key->value pairs.
	Labels pulumi.StringMapInput
	// Indicates whether or not the disk can be read/write attached to more than one instance.
	MultiWriter pulumi.BoolPtrInput
	// Name of the resource. Provided by the client when the resource is
	// created. The name must be 1-63 characters long, and comply with
	// RFC1035. Specifically, the name must be 1-63 characters long and match
	// the regular expression `a-z?` which means the
	// first character must be a lowercase letter, and all following
	// characters must be a dash, lowercase letter, or digit, except the last
	// character, which cannot be a dash.
	Name pulumi.StringPtrInput
	// Physical block size of the persistent disk, in bytes. If not present
	// in a request, a default value is used. Currently supported sizes
	// are 4096 and 16384, other sizes may be added in the future.
	// If an unsupported value is requested, the error message will list
	// the supported values for the caller's project.
	PhysicalBlockSizeBytes pulumi.IntPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// Resource policies applied to this disk for automatic snapshot creations.
	// ~>**NOTE** This value does not support updating the
	// resource policy, as resource policies can not be updated more than
	// one at a time. Use
	// `compute.DiskResourcePolicyAttachment`
	// to allow for updating the resource policy attached to the disk.
	ResourcePolicies pulumi.StringArrayInput
	// Size of the persistent disk, specified in GB. You can specify this
	// field when creating a persistent disk using the `image` or
	// `snapshot` parameter, or specify it alone to create an empty
	// persistent disk.
	// If you specify this field along with `image` or `snapshot`,
	// the value must not be less than the size of the image
	// or the size of the snapshot.
	Size pulumi.IntPtrInput
	// The source snapshot used to create this disk. You can provide this as
	// a partial or full URL to the resource. If the snapshot is in another
	// project than this disk, you must supply a full URL. For example, the
	// following are valid values:
	// * `https://www.googleapis.com/compute/v1/projects/project/global/snapshots/snapshot`
	// * `projects/project/global/snapshots/snapshot`
	// * `global/snapshots/snapshot`
	// * `snapshot`
	Snapshot pulumi.StringPtrInput
	// The customer-supplied encryption key of the source image. Required if
	// the source image is protected by a customer-supplied encryption key.
	// Structure is documented below.
	SourceImageEncryptionKey DiskSourceImageEncryptionKeyPtrInput
	// The customer-supplied encryption key of the source snapshot. Required
	// if the source snapshot is protected by a customer-supplied encryption
	// key.
	// Structure is documented below.
	SourceSnapshotEncryptionKey DiskSourceSnapshotEncryptionKeyPtrInput
	// URL of the disk type resource describing which disk type to use to
	// create the disk. Provide this when creating the disk.
	Type pulumi.StringPtrInput
	// A reference to the zone where the disk resides.
	Zone pulumi.StringPtrInput
}

func (DiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*diskArgs)(nil)).Elem()
}

type DiskInput interface {
	pulumi.Input

	ToDiskOutput() DiskOutput
	ToDiskOutputWithContext(ctx context.Context) DiskOutput
}

func (*Disk) ElementType() reflect.Type {
	return reflect.TypeOf((*Disk)(nil))
}

func (i *Disk) ToDiskOutput() DiskOutput {
	return i.ToDiskOutputWithContext(context.Background())
}

func (i *Disk) ToDiskOutputWithContext(ctx context.Context) DiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiskOutput)
}

type DiskOutput struct {
	*pulumi.OutputState
}

func (DiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Disk)(nil))
}

func (o DiskOutput) ToDiskOutput() DiskOutput {
	return o
}

func (o DiskOutput) ToDiskOutputWithContext(ctx context.Context) DiskOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(DiskOutput{})
}
