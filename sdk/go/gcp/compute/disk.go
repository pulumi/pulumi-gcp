// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package compute

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
// ### Disk Basic
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/compute"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := compute.NewDisk(ctx, "default", &compute.DiskArgs{
//				Image: pulumi.String("debian-11-bullseye-v20220719"),
//				Labels: pulumi.StringMap{
//					"environment": pulumi.String("dev"),
//				},
//				PhysicalBlockSizeBytes: pulumi.Int(4096),
//				Type:                   pulumi.String("pd-ssd"),
//				Zone:                   pulumi.String("us-central1-a"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// # Disk can be imported using any of these accepted formats
//
// ```sh
//
//	$ pulumi import gcp:compute/disk:Disk default projects/{{project}}/zones/{{zone}}/disks/{{name}}
//
// ```
//
// ```sh
//
//	$ pulumi import gcp:compute/disk:Disk default {{project}}/{{zone}}/{{name}}
//
// ```
//
// ```sh
//
//	$ pulumi import gcp:compute/disk:Disk default {{zone}}/{{name}}
//
// ```
//
// ```sh
//
//	$ pulumi import gcp:compute/disk:Disk default {{name}}
//
// ```
type Disk struct {
	pulumi.CustomResourceState

	// Creation timestamp in RFC3339 text format.
	CreationTimestamp pulumi.StringOutput `pulumi:"creationTimestamp"`
	// An optional description of this resource. Provide this property when
	// you create the resource.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Encrypts the disk using a customer-supplied encryption key.
	// After you encrypt a disk with a customer-supplied key, you must
	// provide the same key if you use the disk later (e.g. to create a disk
	// snapshot or an image, or to attach the disk to a virtual machine).
	// Customer-supplied encryption keys do not protect access to metadata of
	// the disk.
	// If you do not provide an encryption key when creating the disk, then
	// the disk will be encrypted using an automatically generated key and
	// you do not need to provide a key to use the disk later.
	// Structure is documented below.
	DiskEncryptionKey DiskDiskEncryptionKeyPtrOutput `pulumi:"diskEncryptionKey"`
	// The image from which to initialize this disk. This can be
	// one of: the image's `selfLink`, `projects/{project}/global/images/{image}`,
	// `projects/{project}/global/images/family/{family}`, `global/images/{image}`,
	// `global/images/family/{family}`, `family/{family}`, `{project}/{family}`,
	// `{project}/{image}`, `{family}`, or `{image}`. If referred by family, the
	// images names must include the family name. If they don't, use the
	// [compute.Image data source](https://www.terraform.io/docs/providers/google/d/compute_image.html).
	// For instance, the image `centos-6-v20180104` includes its family name `centos-6`.
	// These images can be referred by family name here.
	Image pulumi.StringPtrOutput `pulumi:"image"`
	// Specifies the disk interface to use for attaching this disk, which is either SCSI or NVME. The default is SCSI.
	//
	// Deprecated: This field is no longer in use, disk interfaces will be automatically determined on attachment. To resolve this issue, remove this field from your config.
	Interface pulumi.StringPtrOutput `pulumi:"interface"`
	// The fingerprint used for optimistic locking of this resource.  Used
	// internally during updates.
	LabelFingerprint pulumi.StringOutput `pulumi:"labelFingerprint"`
	// Labels to apply to this disk.  A list of key->value pairs.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// Last attach timestamp in RFC3339 text format.
	LastAttachTimestamp pulumi.StringOutput `pulumi:"lastAttachTimestamp"`
	// Last detach timestamp in RFC3339 text format.
	LastDetachTimestamp pulumi.StringOutput `pulumi:"lastDetachTimestamp"`
	// Indicates whether or not the disk can be read/write attached to more than one instance.
	MultiWriter pulumi.BoolPtrOutput `pulumi:"multiWriter"`
	// Name of the resource. Provided by the client when the resource is
	// created. The name must be 1-63 characters long, and comply with
	// RFC1035. Specifically, the name must be 1-63 characters long and match
	// the regular expression `a-z?` which means the
	// first character must be a lowercase letter, and all following
	// characters must be a dash, lowercase letter, or digit, except the last
	// character, which cannot be a dash.
	Name pulumi.StringOutput `pulumi:"name"`
	// Physical block size of the persistent disk, in bytes. If not present
	// in a request, a default value is used. Currently supported sizes
	// are 4096 and 16384, other sizes may be added in the future.
	// If an unsupported value is requested, the error message will list
	// the supported values for the caller's project.
	PhysicalBlockSizeBytes pulumi.IntOutput `pulumi:"physicalBlockSizeBytes"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
	// Indicates how many IOPS must be provisioned for the disk.
	ProvisionedIops pulumi.IntOutput `pulumi:"provisionedIops"`
	// Resource policies applied to this disk for automatic snapshot creations. ~>**NOTE** This value does not support updating
	// the resource policy, as resource policies can not be updated more than one at a time. Use
	// ['google_compute_disk_resource_policy_attachment'](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_disk_resource_policy_attachment)
	// to allow for updating the resource policy attached to the disk.
	ResourcePolicies pulumi.StringArrayOutput `pulumi:"resourcePolicies"`
	// The URI of the created resource.
	SelfLink pulumi.StringOutput `pulumi:"selfLink"`
	// Size of the persistent disk, specified in GB. You can specify this field when creating a persistent disk using the
	// 'image' or 'snapshot' parameter, or specify it alone to create an empty persistent disk. If you specify this field along
	// with 'image' or 'snapshot', the value must not be less than the size of the image or the size of the snapshot.
	// ~>**NOTE** If you change the size, Terraform updates the disk size if upsizing is detected but recreates the disk if
	// downsizing is requested. You can add 'lifecycle.prevent_destroy' in the config to prevent destroying and recreating.
	Size pulumi.IntOutput `pulumi:"size"`
	// The source snapshot used to create this disk. You can provide this as a partial or full URL to the resource. If the
	// snapshot is in another project than this disk, you must supply a full URL. For example, the following are valid values:
	// * 'https://www.googleapis.com/compute/v1/projects/project/global/snapshots/snapshot' *
	//   'projects/project/global/snapshots/snapshot' * 'global/snapshots/snapshot' * 'snapshot'
	Snapshot pulumi.StringPtrOutput `pulumi:"snapshot"`
	// The source disk used to create this disk. You can provide this as a partial or full URL to the resource.
	// For example, the following are valid values:
	// * https://www.googleapis.com/compute/v1/projects/{project}/zones/{zone}/disks/{disk}
	// * https://www.googleapis.com/compute/v1/projects/{project}/regions/{region}/disks/{disk}
	// * projects/{project}/zones/{zone}/disks/{disk}
	// * projects/{project}/regions/{region}/disks/{disk}
	// * zones/{zone}/disks/{disk}
	// * regions/{region}/disks/{disk}
	SourceDisk pulumi.StringPtrOutput `pulumi:"sourceDisk"`
	// The ID value of the disk used to create this image. This value may
	// be used to determine whether the image was taken from the current
	// or a previous instance of a given disk name.
	SourceDiskId pulumi.StringOutput `pulumi:"sourceDiskId"`
	// The customer-supplied encryption key of the source image. Required if
	// the source image is protected by a customer-supplied encryption key.
	// Structure is documented below.
	SourceImageEncryptionKey DiskSourceImageEncryptionKeyPtrOutput `pulumi:"sourceImageEncryptionKey"`
	// The ID value of the image used to create this disk. This value
	// identifies the exact image that was used to create this persistent
	// disk. For example, if you created the persistent disk from an image
	// that was later deleted and recreated under the same name, the source
	// image ID would identify the exact version of the image that was used.
	SourceImageId pulumi.StringOutput `pulumi:"sourceImageId"`
	// The customer-supplied encryption key of the source snapshot. Required
	// if the source snapshot is protected by a customer-supplied encryption
	// key.
	// Structure is documented below.
	SourceSnapshotEncryptionKey DiskSourceSnapshotEncryptionKeyPtrOutput `pulumi:"sourceSnapshotEncryptionKey"`
	// The unique ID of the snapshot used to create this disk. This value
	// identifies the exact snapshot that was used to create this persistent
	// disk. For example, if you created the persistent disk from a snapshot
	// that was later deleted and recreated under the same name, the source
	// snapshot ID would identify the exact version of the snapshot that was
	// used.
	SourceSnapshotId pulumi.StringOutput `pulumi:"sourceSnapshotId"`
	// URL of the disk type resource describing which disk type to use to
	// create the disk. Provide this when creating the disk.
	Type pulumi.StringPtrOutput `pulumi:"type"`
	// Links to the users of the disk (attached instances) in form:
	// project/zones/zone/instances/instance
	Users pulumi.StringArrayOutput `pulumi:"users"`
	// A reference to the zone where the disk resides.
	Zone pulumi.StringOutput `pulumi:"zone"`
}

// NewDisk registers a new resource with the given unique name, arguments, and options.
func NewDisk(ctx *pulumi.Context,
	name string, args *DiskArgs, opts ...pulumi.ResourceOption) (*Disk, error) {
	if args == nil {
		args = &DiskArgs{}
	}

	var resource Disk
	err := ctx.RegisterResource("gcp:compute/disk:Disk", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDisk gets an existing Disk resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDisk(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DiskState, opts ...pulumi.ResourceOption) (*Disk, error) {
	var resource Disk
	err := ctx.ReadResource("gcp:compute/disk:Disk", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Disk resources.
type diskState struct {
	// Creation timestamp in RFC3339 text format.
	CreationTimestamp *string `pulumi:"creationTimestamp"`
	// An optional description of this resource. Provide this property when
	// you create the resource.
	Description *string `pulumi:"description"`
	// Encrypts the disk using a customer-supplied encryption key.
	// After you encrypt a disk with a customer-supplied key, you must
	// provide the same key if you use the disk later (e.g. to create a disk
	// snapshot or an image, or to attach the disk to a virtual machine).
	// Customer-supplied encryption keys do not protect access to metadata of
	// the disk.
	// If you do not provide an encryption key when creating the disk, then
	// the disk will be encrypted using an automatically generated key and
	// you do not need to provide a key to use the disk later.
	// Structure is documented below.
	DiskEncryptionKey *DiskDiskEncryptionKey `pulumi:"diskEncryptionKey"`
	// The image from which to initialize this disk. This can be
	// one of: the image's `selfLink`, `projects/{project}/global/images/{image}`,
	// `projects/{project}/global/images/family/{family}`, `global/images/{image}`,
	// `global/images/family/{family}`, `family/{family}`, `{project}/{family}`,
	// `{project}/{image}`, `{family}`, or `{image}`. If referred by family, the
	// images names must include the family name. If they don't, use the
	// [compute.Image data source](https://www.terraform.io/docs/providers/google/d/compute_image.html).
	// For instance, the image `centos-6-v20180104` includes its family name `centos-6`.
	// These images can be referred by family name here.
	Image *string `pulumi:"image"`
	// Specifies the disk interface to use for attaching this disk, which is either SCSI or NVME. The default is SCSI.
	//
	// Deprecated: This field is no longer in use, disk interfaces will be automatically determined on attachment. To resolve this issue, remove this field from your config.
	Interface *string `pulumi:"interface"`
	// The fingerprint used for optimistic locking of this resource.  Used
	// internally during updates.
	LabelFingerprint *string `pulumi:"labelFingerprint"`
	// Labels to apply to this disk.  A list of key->value pairs.
	Labels map[string]string `pulumi:"labels"`
	// Last attach timestamp in RFC3339 text format.
	LastAttachTimestamp *string `pulumi:"lastAttachTimestamp"`
	// Last detach timestamp in RFC3339 text format.
	LastDetachTimestamp *string `pulumi:"lastDetachTimestamp"`
	// Indicates whether or not the disk can be read/write attached to more than one instance.
	MultiWriter *bool `pulumi:"multiWriter"`
	// Name of the resource. Provided by the client when the resource is
	// created. The name must be 1-63 characters long, and comply with
	// RFC1035. Specifically, the name must be 1-63 characters long and match
	// the regular expression `a-z?` which means the
	// first character must be a lowercase letter, and all following
	// characters must be a dash, lowercase letter, or digit, except the last
	// character, which cannot be a dash.
	Name *string `pulumi:"name"`
	// Physical block size of the persistent disk, in bytes. If not present
	// in a request, a default value is used. Currently supported sizes
	// are 4096 and 16384, other sizes may be added in the future.
	// If an unsupported value is requested, the error message will list
	// the supported values for the caller's project.
	PhysicalBlockSizeBytes *int `pulumi:"physicalBlockSizeBytes"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// Indicates how many IOPS must be provisioned for the disk.
	ProvisionedIops *int `pulumi:"provisionedIops"`
	// Resource policies applied to this disk for automatic snapshot creations. ~>**NOTE** This value does not support updating
	// the resource policy, as resource policies can not be updated more than one at a time. Use
	// ['google_compute_disk_resource_policy_attachment'](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_disk_resource_policy_attachment)
	// to allow for updating the resource policy attached to the disk.
	ResourcePolicies []string `pulumi:"resourcePolicies"`
	// The URI of the created resource.
	SelfLink *string `pulumi:"selfLink"`
	// Size of the persistent disk, specified in GB. You can specify this field when creating a persistent disk using the
	// 'image' or 'snapshot' parameter, or specify it alone to create an empty persistent disk. If you specify this field along
	// with 'image' or 'snapshot', the value must not be less than the size of the image or the size of the snapshot.
	// ~>**NOTE** If you change the size, Terraform updates the disk size if upsizing is detected but recreates the disk if
	// downsizing is requested. You can add 'lifecycle.prevent_destroy' in the config to prevent destroying and recreating.
	Size *int `pulumi:"size"`
	// The source snapshot used to create this disk. You can provide this as a partial or full URL to the resource. If the
	// snapshot is in another project than this disk, you must supply a full URL. For example, the following are valid values:
	// * 'https://www.googleapis.com/compute/v1/projects/project/global/snapshots/snapshot' *
	//   'projects/project/global/snapshots/snapshot' * 'global/snapshots/snapshot' * 'snapshot'
	Snapshot *string `pulumi:"snapshot"`
	// The source disk used to create this disk. You can provide this as a partial or full URL to the resource.
	// For example, the following are valid values:
	// * https://www.googleapis.com/compute/v1/projects/{project}/zones/{zone}/disks/{disk}
	// * https://www.googleapis.com/compute/v1/projects/{project}/regions/{region}/disks/{disk}
	// * projects/{project}/zones/{zone}/disks/{disk}
	// * projects/{project}/regions/{region}/disks/{disk}
	// * zones/{zone}/disks/{disk}
	// * regions/{region}/disks/{disk}
	SourceDisk *string `pulumi:"sourceDisk"`
	// The ID value of the disk used to create this image. This value may
	// be used to determine whether the image was taken from the current
	// or a previous instance of a given disk name.
	SourceDiskId *string `pulumi:"sourceDiskId"`
	// The customer-supplied encryption key of the source image. Required if
	// the source image is protected by a customer-supplied encryption key.
	// Structure is documented below.
	SourceImageEncryptionKey *DiskSourceImageEncryptionKey `pulumi:"sourceImageEncryptionKey"`
	// The ID value of the image used to create this disk. This value
	// identifies the exact image that was used to create this persistent
	// disk. For example, if you created the persistent disk from an image
	// that was later deleted and recreated under the same name, the source
	// image ID would identify the exact version of the image that was used.
	SourceImageId *string `pulumi:"sourceImageId"`
	// The customer-supplied encryption key of the source snapshot. Required
	// if the source snapshot is protected by a customer-supplied encryption
	// key.
	// Structure is documented below.
	SourceSnapshotEncryptionKey *DiskSourceSnapshotEncryptionKey `pulumi:"sourceSnapshotEncryptionKey"`
	// The unique ID of the snapshot used to create this disk. This value
	// identifies the exact snapshot that was used to create this persistent
	// disk. For example, if you created the persistent disk from a snapshot
	// that was later deleted and recreated under the same name, the source
	// snapshot ID would identify the exact version of the snapshot that was
	// used.
	SourceSnapshotId *string `pulumi:"sourceSnapshotId"`
	// URL of the disk type resource describing which disk type to use to
	// create the disk. Provide this when creating the disk.
	Type *string `pulumi:"type"`
	// Links to the users of the disk (attached instances) in form:
	// project/zones/zone/instances/instance
	Users []string `pulumi:"users"`
	// A reference to the zone where the disk resides.
	Zone *string `pulumi:"zone"`
}

type DiskState struct {
	// Creation timestamp in RFC3339 text format.
	CreationTimestamp pulumi.StringPtrInput
	// An optional description of this resource. Provide this property when
	// you create the resource.
	Description pulumi.StringPtrInput
	// Encrypts the disk using a customer-supplied encryption key.
	// After you encrypt a disk with a customer-supplied key, you must
	// provide the same key if you use the disk later (e.g. to create a disk
	// snapshot or an image, or to attach the disk to a virtual machine).
	// Customer-supplied encryption keys do not protect access to metadata of
	// the disk.
	// If you do not provide an encryption key when creating the disk, then
	// the disk will be encrypted using an automatically generated key and
	// you do not need to provide a key to use the disk later.
	// Structure is documented below.
	DiskEncryptionKey DiskDiskEncryptionKeyPtrInput
	// The image from which to initialize this disk. This can be
	// one of: the image's `selfLink`, `projects/{project}/global/images/{image}`,
	// `projects/{project}/global/images/family/{family}`, `global/images/{image}`,
	// `global/images/family/{family}`, `family/{family}`, `{project}/{family}`,
	// `{project}/{image}`, `{family}`, or `{image}`. If referred by family, the
	// images names must include the family name. If they don't, use the
	// [compute.Image data source](https://www.terraform.io/docs/providers/google/d/compute_image.html).
	// For instance, the image `centos-6-v20180104` includes its family name `centos-6`.
	// These images can be referred by family name here.
	Image pulumi.StringPtrInput
	// Specifies the disk interface to use for attaching this disk, which is either SCSI or NVME. The default is SCSI.
	//
	// Deprecated: This field is no longer in use, disk interfaces will be automatically determined on attachment. To resolve this issue, remove this field from your config.
	Interface pulumi.StringPtrInput
	// The fingerprint used for optimistic locking of this resource.  Used
	// internally during updates.
	LabelFingerprint pulumi.StringPtrInput
	// Labels to apply to this disk.  A list of key->value pairs.
	Labels pulumi.StringMapInput
	// Last attach timestamp in RFC3339 text format.
	LastAttachTimestamp pulumi.StringPtrInput
	// Last detach timestamp in RFC3339 text format.
	LastDetachTimestamp pulumi.StringPtrInput
	// Indicates whether or not the disk can be read/write attached to more than one instance.
	MultiWriter pulumi.BoolPtrInput
	// Name of the resource. Provided by the client when the resource is
	// created. The name must be 1-63 characters long, and comply with
	// RFC1035. Specifically, the name must be 1-63 characters long and match
	// the regular expression `a-z?` which means the
	// first character must be a lowercase letter, and all following
	// characters must be a dash, lowercase letter, or digit, except the last
	// character, which cannot be a dash.
	Name pulumi.StringPtrInput
	// Physical block size of the persistent disk, in bytes. If not present
	// in a request, a default value is used. Currently supported sizes
	// are 4096 and 16384, other sizes may be added in the future.
	// If an unsupported value is requested, the error message will list
	// the supported values for the caller's project.
	PhysicalBlockSizeBytes pulumi.IntPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// Indicates how many IOPS must be provisioned for the disk.
	ProvisionedIops pulumi.IntPtrInput
	// Resource policies applied to this disk for automatic snapshot creations. ~>**NOTE** This value does not support updating
	// the resource policy, as resource policies can not be updated more than one at a time. Use
	// ['google_compute_disk_resource_policy_attachment'](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_disk_resource_policy_attachment)
	// to allow for updating the resource policy attached to the disk.
	ResourcePolicies pulumi.StringArrayInput
	// The URI of the created resource.
	SelfLink pulumi.StringPtrInput
	// Size of the persistent disk, specified in GB. You can specify this field when creating a persistent disk using the
	// 'image' or 'snapshot' parameter, or specify it alone to create an empty persistent disk. If you specify this field along
	// with 'image' or 'snapshot', the value must not be less than the size of the image or the size of the snapshot.
	// ~>**NOTE** If you change the size, Terraform updates the disk size if upsizing is detected but recreates the disk if
	// downsizing is requested. You can add 'lifecycle.prevent_destroy' in the config to prevent destroying and recreating.
	Size pulumi.IntPtrInput
	// The source snapshot used to create this disk. You can provide this as a partial or full URL to the resource. If the
	// snapshot is in another project than this disk, you must supply a full URL. For example, the following are valid values:
	// * 'https://www.googleapis.com/compute/v1/projects/project/global/snapshots/snapshot' *
	//   'projects/project/global/snapshots/snapshot' * 'global/snapshots/snapshot' * 'snapshot'
	Snapshot pulumi.StringPtrInput
	// The source disk used to create this disk. You can provide this as a partial or full URL to the resource.
	// For example, the following are valid values:
	// * https://www.googleapis.com/compute/v1/projects/{project}/zones/{zone}/disks/{disk}
	// * https://www.googleapis.com/compute/v1/projects/{project}/regions/{region}/disks/{disk}
	// * projects/{project}/zones/{zone}/disks/{disk}
	// * projects/{project}/regions/{region}/disks/{disk}
	// * zones/{zone}/disks/{disk}
	// * regions/{region}/disks/{disk}
	SourceDisk pulumi.StringPtrInput
	// The ID value of the disk used to create this image. This value may
	// be used to determine whether the image was taken from the current
	// or a previous instance of a given disk name.
	SourceDiskId pulumi.StringPtrInput
	// The customer-supplied encryption key of the source image. Required if
	// the source image is protected by a customer-supplied encryption key.
	// Structure is documented below.
	SourceImageEncryptionKey DiskSourceImageEncryptionKeyPtrInput
	// The ID value of the image used to create this disk. This value
	// identifies the exact image that was used to create this persistent
	// disk. For example, if you created the persistent disk from an image
	// that was later deleted and recreated under the same name, the source
	// image ID would identify the exact version of the image that was used.
	SourceImageId pulumi.StringPtrInput
	// The customer-supplied encryption key of the source snapshot. Required
	// if the source snapshot is protected by a customer-supplied encryption
	// key.
	// Structure is documented below.
	SourceSnapshotEncryptionKey DiskSourceSnapshotEncryptionKeyPtrInput
	// The unique ID of the snapshot used to create this disk. This value
	// identifies the exact snapshot that was used to create this persistent
	// disk. For example, if you created the persistent disk from a snapshot
	// that was later deleted and recreated under the same name, the source
	// snapshot ID would identify the exact version of the snapshot that was
	// used.
	SourceSnapshotId pulumi.StringPtrInput
	// URL of the disk type resource describing which disk type to use to
	// create the disk. Provide this when creating the disk.
	Type pulumi.StringPtrInput
	// Links to the users of the disk (attached instances) in form:
	// project/zones/zone/instances/instance
	Users pulumi.StringArrayInput
	// A reference to the zone where the disk resides.
	Zone pulumi.StringPtrInput
}

func (DiskState) ElementType() reflect.Type {
	return reflect.TypeOf((*diskState)(nil)).Elem()
}

type diskArgs struct {
	// An optional description of this resource. Provide this property when
	// you create the resource.
	Description *string `pulumi:"description"`
	// Encrypts the disk using a customer-supplied encryption key.
	// After you encrypt a disk with a customer-supplied key, you must
	// provide the same key if you use the disk later (e.g. to create a disk
	// snapshot or an image, or to attach the disk to a virtual machine).
	// Customer-supplied encryption keys do not protect access to metadata of
	// the disk.
	// If you do not provide an encryption key when creating the disk, then
	// the disk will be encrypted using an automatically generated key and
	// you do not need to provide a key to use the disk later.
	// Structure is documented below.
	DiskEncryptionKey *DiskDiskEncryptionKey `pulumi:"diskEncryptionKey"`
	// The image from which to initialize this disk. This can be
	// one of: the image's `selfLink`, `projects/{project}/global/images/{image}`,
	// `projects/{project}/global/images/family/{family}`, `global/images/{image}`,
	// `global/images/family/{family}`, `family/{family}`, `{project}/{family}`,
	// `{project}/{image}`, `{family}`, or `{image}`. If referred by family, the
	// images names must include the family name. If they don't, use the
	// [compute.Image data source](https://www.terraform.io/docs/providers/google/d/compute_image.html).
	// For instance, the image `centos-6-v20180104` includes its family name `centos-6`.
	// These images can be referred by family name here.
	Image *string `pulumi:"image"`
	// Specifies the disk interface to use for attaching this disk, which is either SCSI or NVME. The default is SCSI.
	//
	// Deprecated: This field is no longer in use, disk interfaces will be automatically determined on attachment. To resolve this issue, remove this field from your config.
	Interface *string `pulumi:"interface"`
	// Labels to apply to this disk.  A list of key->value pairs.
	Labels map[string]string `pulumi:"labels"`
	// Indicates whether or not the disk can be read/write attached to more than one instance.
	MultiWriter *bool `pulumi:"multiWriter"`
	// Name of the resource. Provided by the client when the resource is
	// created. The name must be 1-63 characters long, and comply with
	// RFC1035. Specifically, the name must be 1-63 characters long and match
	// the regular expression `a-z?` which means the
	// first character must be a lowercase letter, and all following
	// characters must be a dash, lowercase letter, or digit, except the last
	// character, which cannot be a dash.
	Name *string `pulumi:"name"`
	// Physical block size of the persistent disk, in bytes. If not present
	// in a request, a default value is used. Currently supported sizes
	// are 4096 and 16384, other sizes may be added in the future.
	// If an unsupported value is requested, the error message will list
	// the supported values for the caller's project.
	PhysicalBlockSizeBytes *int `pulumi:"physicalBlockSizeBytes"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// Indicates how many IOPS must be provisioned for the disk.
	ProvisionedIops *int `pulumi:"provisionedIops"`
	// Resource policies applied to this disk for automatic snapshot creations. ~>**NOTE** This value does not support updating
	// the resource policy, as resource policies can not be updated more than one at a time. Use
	// ['google_compute_disk_resource_policy_attachment'](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_disk_resource_policy_attachment)
	// to allow for updating the resource policy attached to the disk.
	ResourcePolicies []string `pulumi:"resourcePolicies"`
	// Size of the persistent disk, specified in GB. You can specify this field when creating a persistent disk using the
	// 'image' or 'snapshot' parameter, or specify it alone to create an empty persistent disk. If you specify this field along
	// with 'image' or 'snapshot', the value must not be less than the size of the image or the size of the snapshot.
	// ~>**NOTE** If you change the size, Terraform updates the disk size if upsizing is detected but recreates the disk if
	// downsizing is requested. You can add 'lifecycle.prevent_destroy' in the config to prevent destroying and recreating.
	Size *int `pulumi:"size"`
	// The source snapshot used to create this disk. You can provide this as a partial or full URL to the resource. If the
	// snapshot is in another project than this disk, you must supply a full URL. For example, the following are valid values:
	// * 'https://www.googleapis.com/compute/v1/projects/project/global/snapshots/snapshot' *
	//   'projects/project/global/snapshots/snapshot' * 'global/snapshots/snapshot' * 'snapshot'
	Snapshot *string `pulumi:"snapshot"`
	// The source disk used to create this disk. You can provide this as a partial or full URL to the resource.
	// For example, the following are valid values:
	// * https://www.googleapis.com/compute/v1/projects/{project}/zones/{zone}/disks/{disk}
	// * https://www.googleapis.com/compute/v1/projects/{project}/regions/{region}/disks/{disk}
	// * projects/{project}/zones/{zone}/disks/{disk}
	// * projects/{project}/regions/{region}/disks/{disk}
	// * zones/{zone}/disks/{disk}
	// * regions/{region}/disks/{disk}
	SourceDisk *string `pulumi:"sourceDisk"`
	// The customer-supplied encryption key of the source image. Required if
	// the source image is protected by a customer-supplied encryption key.
	// Structure is documented below.
	SourceImageEncryptionKey *DiskSourceImageEncryptionKey `pulumi:"sourceImageEncryptionKey"`
	// The customer-supplied encryption key of the source snapshot. Required
	// if the source snapshot is protected by a customer-supplied encryption
	// key.
	// Structure is documented below.
	SourceSnapshotEncryptionKey *DiskSourceSnapshotEncryptionKey `pulumi:"sourceSnapshotEncryptionKey"`
	// URL of the disk type resource describing which disk type to use to
	// create the disk. Provide this when creating the disk.
	Type *string `pulumi:"type"`
	// A reference to the zone where the disk resides.
	Zone *string `pulumi:"zone"`
}

// The set of arguments for constructing a Disk resource.
type DiskArgs struct {
	// An optional description of this resource. Provide this property when
	// you create the resource.
	Description pulumi.StringPtrInput
	// Encrypts the disk using a customer-supplied encryption key.
	// After you encrypt a disk with a customer-supplied key, you must
	// provide the same key if you use the disk later (e.g. to create a disk
	// snapshot or an image, or to attach the disk to a virtual machine).
	// Customer-supplied encryption keys do not protect access to metadata of
	// the disk.
	// If you do not provide an encryption key when creating the disk, then
	// the disk will be encrypted using an automatically generated key and
	// you do not need to provide a key to use the disk later.
	// Structure is documented below.
	DiskEncryptionKey DiskDiskEncryptionKeyPtrInput
	// The image from which to initialize this disk. This can be
	// one of: the image's `selfLink`, `projects/{project}/global/images/{image}`,
	// `projects/{project}/global/images/family/{family}`, `global/images/{image}`,
	// `global/images/family/{family}`, `family/{family}`, `{project}/{family}`,
	// `{project}/{image}`, `{family}`, or `{image}`. If referred by family, the
	// images names must include the family name. If they don't, use the
	// [compute.Image data source](https://www.terraform.io/docs/providers/google/d/compute_image.html).
	// For instance, the image `centos-6-v20180104` includes its family name `centos-6`.
	// These images can be referred by family name here.
	Image pulumi.StringPtrInput
	// Specifies the disk interface to use for attaching this disk, which is either SCSI or NVME. The default is SCSI.
	//
	// Deprecated: This field is no longer in use, disk interfaces will be automatically determined on attachment. To resolve this issue, remove this field from your config.
	Interface pulumi.StringPtrInput
	// Labels to apply to this disk.  A list of key->value pairs.
	Labels pulumi.StringMapInput
	// Indicates whether or not the disk can be read/write attached to more than one instance.
	MultiWriter pulumi.BoolPtrInput
	// Name of the resource. Provided by the client when the resource is
	// created. The name must be 1-63 characters long, and comply with
	// RFC1035. Specifically, the name must be 1-63 characters long and match
	// the regular expression `a-z?` which means the
	// first character must be a lowercase letter, and all following
	// characters must be a dash, lowercase letter, or digit, except the last
	// character, which cannot be a dash.
	Name pulumi.StringPtrInput
	// Physical block size of the persistent disk, in bytes. If not present
	// in a request, a default value is used. Currently supported sizes
	// are 4096 and 16384, other sizes may be added in the future.
	// If an unsupported value is requested, the error message will list
	// the supported values for the caller's project.
	PhysicalBlockSizeBytes pulumi.IntPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// Indicates how many IOPS must be provisioned for the disk.
	ProvisionedIops pulumi.IntPtrInput
	// Resource policies applied to this disk for automatic snapshot creations. ~>**NOTE** This value does not support updating
	// the resource policy, as resource policies can not be updated more than one at a time. Use
	// ['google_compute_disk_resource_policy_attachment'](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_disk_resource_policy_attachment)
	// to allow for updating the resource policy attached to the disk.
	ResourcePolicies pulumi.StringArrayInput
	// Size of the persistent disk, specified in GB. You can specify this field when creating a persistent disk using the
	// 'image' or 'snapshot' parameter, or specify it alone to create an empty persistent disk. If you specify this field along
	// with 'image' or 'snapshot', the value must not be less than the size of the image or the size of the snapshot.
	// ~>**NOTE** If you change the size, Terraform updates the disk size if upsizing is detected but recreates the disk if
	// downsizing is requested. You can add 'lifecycle.prevent_destroy' in the config to prevent destroying and recreating.
	Size pulumi.IntPtrInput
	// The source snapshot used to create this disk. You can provide this as a partial or full URL to the resource. If the
	// snapshot is in another project than this disk, you must supply a full URL. For example, the following are valid values:
	// * 'https://www.googleapis.com/compute/v1/projects/project/global/snapshots/snapshot' *
	//   'projects/project/global/snapshots/snapshot' * 'global/snapshots/snapshot' * 'snapshot'
	Snapshot pulumi.StringPtrInput
	// The source disk used to create this disk. You can provide this as a partial or full URL to the resource.
	// For example, the following are valid values:
	// * https://www.googleapis.com/compute/v1/projects/{project}/zones/{zone}/disks/{disk}
	// * https://www.googleapis.com/compute/v1/projects/{project}/regions/{region}/disks/{disk}
	// * projects/{project}/zones/{zone}/disks/{disk}
	// * projects/{project}/regions/{region}/disks/{disk}
	// * zones/{zone}/disks/{disk}
	// * regions/{region}/disks/{disk}
	SourceDisk pulumi.StringPtrInput
	// The customer-supplied encryption key of the source image. Required if
	// the source image is protected by a customer-supplied encryption key.
	// Structure is documented below.
	SourceImageEncryptionKey DiskSourceImageEncryptionKeyPtrInput
	// The customer-supplied encryption key of the source snapshot. Required
	// if the source snapshot is protected by a customer-supplied encryption
	// key.
	// Structure is documented below.
	SourceSnapshotEncryptionKey DiskSourceSnapshotEncryptionKeyPtrInput
	// URL of the disk type resource describing which disk type to use to
	// create the disk. Provide this when creating the disk.
	Type pulumi.StringPtrInput
	// A reference to the zone where the disk resides.
	Zone pulumi.StringPtrInput
}

func (DiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*diskArgs)(nil)).Elem()
}

type DiskInput interface {
	pulumi.Input

	ToDiskOutput() DiskOutput
	ToDiskOutputWithContext(ctx context.Context) DiskOutput
}

func (*Disk) ElementType() reflect.Type {
	return reflect.TypeOf((**Disk)(nil)).Elem()
}

func (i *Disk) ToDiskOutput() DiskOutput {
	return i.ToDiskOutputWithContext(context.Background())
}

func (i *Disk) ToDiskOutputWithContext(ctx context.Context) DiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiskOutput)
}

// DiskArrayInput is an input type that accepts DiskArray and DiskArrayOutput values.
// You can construct a concrete instance of `DiskArrayInput` via:
//
//	DiskArray{ DiskArgs{...} }
type DiskArrayInput interface {
	pulumi.Input

	ToDiskArrayOutput() DiskArrayOutput
	ToDiskArrayOutputWithContext(context.Context) DiskArrayOutput
}

type DiskArray []DiskInput

func (DiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Disk)(nil)).Elem()
}

func (i DiskArray) ToDiskArrayOutput() DiskArrayOutput {
	return i.ToDiskArrayOutputWithContext(context.Background())
}

func (i DiskArray) ToDiskArrayOutputWithContext(ctx context.Context) DiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiskArrayOutput)
}

// DiskMapInput is an input type that accepts DiskMap and DiskMapOutput values.
// You can construct a concrete instance of `DiskMapInput` via:
//
//	DiskMap{ "key": DiskArgs{...} }
type DiskMapInput interface {
	pulumi.Input

	ToDiskMapOutput() DiskMapOutput
	ToDiskMapOutputWithContext(context.Context) DiskMapOutput
}

type DiskMap map[string]DiskInput

func (DiskMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Disk)(nil)).Elem()
}

func (i DiskMap) ToDiskMapOutput() DiskMapOutput {
	return i.ToDiskMapOutputWithContext(context.Background())
}

func (i DiskMap) ToDiskMapOutputWithContext(ctx context.Context) DiskMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiskMapOutput)
}

type DiskOutput struct{ *pulumi.OutputState }

func (DiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Disk)(nil)).Elem()
}

func (o DiskOutput) ToDiskOutput() DiskOutput {
	return o
}

func (o DiskOutput) ToDiskOutputWithContext(ctx context.Context) DiskOutput {
	return o
}

// Creation timestamp in RFC3339 text format.
func (o DiskOutput) CreationTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v *Disk) pulumi.StringOutput { return v.CreationTimestamp }).(pulumi.StringOutput)
}

// An optional description of this resource. Provide this property when
// you create the resource.
func (o DiskOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Disk) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Encrypts the disk using a customer-supplied encryption key.
// After you encrypt a disk with a customer-supplied key, you must
// provide the same key if you use the disk later (e.g. to create a disk
// snapshot or an image, or to attach the disk to a virtual machine).
// Customer-supplied encryption keys do not protect access to metadata of
// the disk.
// If you do not provide an encryption key when creating the disk, then
// the disk will be encrypted using an automatically generated key and
// you do not need to provide a key to use the disk later.
// Structure is documented below.
func (o DiskOutput) DiskEncryptionKey() DiskDiskEncryptionKeyPtrOutput {
	return o.ApplyT(func(v *Disk) DiskDiskEncryptionKeyPtrOutput { return v.DiskEncryptionKey }).(DiskDiskEncryptionKeyPtrOutput)
}

// The image from which to initialize this disk. This can be
// one of: the image's `selfLink`, `projects/{project}/global/images/{image}`,
// `projects/{project}/global/images/family/{family}`, `global/images/{image}`,
// `global/images/family/{family}`, `family/{family}`, `{project}/{family}`,
// `{project}/{image}`, `{family}`, or `{image}`. If referred by family, the
// images names must include the family name. If they don't, use the
// [compute.Image data source](https://www.terraform.io/docs/providers/google/d/compute_image.html).
// For instance, the image `centos-6-v20180104` includes its family name `centos-6`.
// These images can be referred by family name here.
func (o DiskOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Disk) pulumi.StringPtrOutput { return v.Image }).(pulumi.StringPtrOutput)
}

// Specifies the disk interface to use for attaching this disk, which is either SCSI or NVME. The default is SCSI.
//
// Deprecated: This field is no longer in use, disk interfaces will be automatically determined on attachment. To resolve this issue, remove this field from your config.
func (o DiskOutput) Interface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Disk) pulumi.StringPtrOutput { return v.Interface }).(pulumi.StringPtrOutput)
}

// The fingerprint used for optimistic locking of this resource.  Used
// internally during updates.
func (o DiskOutput) LabelFingerprint() pulumi.StringOutput {
	return o.ApplyT(func(v *Disk) pulumi.StringOutput { return v.LabelFingerprint }).(pulumi.StringOutput)
}

// Labels to apply to this disk.  A list of key->value pairs.
func (o DiskOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Disk) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// Last attach timestamp in RFC3339 text format.
func (o DiskOutput) LastAttachTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v *Disk) pulumi.StringOutput { return v.LastAttachTimestamp }).(pulumi.StringOutput)
}

// Last detach timestamp in RFC3339 text format.
func (o DiskOutput) LastDetachTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v *Disk) pulumi.StringOutput { return v.LastDetachTimestamp }).(pulumi.StringOutput)
}

// Indicates whether or not the disk can be read/write attached to more than one instance.
func (o DiskOutput) MultiWriter() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Disk) pulumi.BoolPtrOutput { return v.MultiWriter }).(pulumi.BoolPtrOutput)
}

// Name of the resource. Provided by the client when the resource is
// created. The name must be 1-63 characters long, and comply with
// RFC1035. Specifically, the name must be 1-63 characters long and match
// the regular expression `a-z?` which means the
// first character must be a lowercase letter, and all following
// characters must be a dash, lowercase letter, or digit, except the last
// character, which cannot be a dash.
func (o DiskOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Disk) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Physical block size of the persistent disk, in bytes. If not present
// in a request, a default value is used. Currently supported sizes
// are 4096 and 16384, other sizes may be added in the future.
// If an unsupported value is requested, the error message will list
// the supported values for the caller's project.
func (o DiskOutput) PhysicalBlockSizeBytes() pulumi.IntOutput {
	return o.ApplyT(func(v *Disk) pulumi.IntOutput { return v.PhysicalBlockSizeBytes }).(pulumi.IntOutput)
}

// The ID of the project in which the resource belongs.
// If it is not provided, the provider project is used.
func (o DiskOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *Disk) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Indicates how many IOPS must be provisioned for the disk.
func (o DiskOutput) ProvisionedIops() pulumi.IntOutput {
	return o.ApplyT(func(v *Disk) pulumi.IntOutput { return v.ProvisionedIops }).(pulumi.IntOutput)
}

// Resource policies applied to this disk for automatic snapshot creations. ~>**NOTE** This value does not support updating
// the resource policy, as resource policies can not be updated more than one at a time. Use
// ['google_compute_disk_resource_policy_attachment'](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_disk_resource_policy_attachment)
// to allow for updating the resource policy attached to the disk.
func (o DiskOutput) ResourcePolicies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Disk) pulumi.StringArrayOutput { return v.ResourcePolicies }).(pulumi.StringArrayOutput)
}

// The URI of the created resource.
func (o DiskOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v *Disk) pulumi.StringOutput { return v.SelfLink }).(pulumi.StringOutput)
}

// Size of the persistent disk, specified in GB. You can specify this field when creating a persistent disk using the
// 'image' or 'snapshot' parameter, or specify it alone to create an empty persistent disk. If you specify this field along
// with 'image' or 'snapshot', the value must not be less than the size of the image or the size of the snapshot.
// ~>**NOTE** If you change the size, Terraform updates the disk size if upsizing is detected but recreates the disk if
// downsizing is requested. You can add 'lifecycle.prevent_destroy' in the config to prevent destroying and recreating.
func (o DiskOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v *Disk) pulumi.IntOutput { return v.Size }).(pulumi.IntOutput)
}

// The source snapshot used to create this disk. You can provide this as a partial or full URL to the resource. If the
// snapshot is in another project than this disk, you must supply a full URL. For example, the following are valid values:
//   - 'https://www.googleapis.com/compute/v1/projects/project/global/snapshots/snapshot' *
//     'projects/project/global/snapshots/snapshot' * 'global/snapshots/snapshot' * 'snapshot'
func (o DiskOutput) Snapshot() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Disk) pulumi.StringPtrOutput { return v.Snapshot }).(pulumi.StringPtrOutput)
}

// The source disk used to create this disk. You can provide this as a partial or full URL to the resource.
// For example, the following are valid values:
// * https://www.googleapis.com/compute/v1/projects/{project}/zones/{zone}/disks/{disk}
// * https://www.googleapis.com/compute/v1/projects/{project}/regions/{region}/disks/{disk}
// * projects/{project}/zones/{zone}/disks/{disk}
// * projects/{project}/regions/{region}/disks/{disk}
// * zones/{zone}/disks/{disk}
// * regions/{region}/disks/{disk}
func (o DiskOutput) SourceDisk() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Disk) pulumi.StringPtrOutput { return v.SourceDisk }).(pulumi.StringPtrOutput)
}

// The ID value of the disk used to create this image. This value may
// be used to determine whether the image was taken from the current
// or a previous instance of a given disk name.
func (o DiskOutput) SourceDiskId() pulumi.StringOutput {
	return o.ApplyT(func(v *Disk) pulumi.StringOutput { return v.SourceDiskId }).(pulumi.StringOutput)
}

// The customer-supplied encryption key of the source image. Required if
// the source image is protected by a customer-supplied encryption key.
// Structure is documented below.
func (o DiskOutput) SourceImageEncryptionKey() DiskSourceImageEncryptionKeyPtrOutput {
	return o.ApplyT(func(v *Disk) DiskSourceImageEncryptionKeyPtrOutput { return v.SourceImageEncryptionKey }).(DiskSourceImageEncryptionKeyPtrOutput)
}

// The ID value of the image used to create this disk. This value
// identifies the exact image that was used to create this persistent
// disk. For example, if you created the persistent disk from an image
// that was later deleted and recreated under the same name, the source
// image ID would identify the exact version of the image that was used.
func (o DiskOutput) SourceImageId() pulumi.StringOutput {
	return o.ApplyT(func(v *Disk) pulumi.StringOutput { return v.SourceImageId }).(pulumi.StringOutput)
}

// The customer-supplied encryption key of the source snapshot. Required
// if the source snapshot is protected by a customer-supplied encryption
// key.
// Structure is documented below.
func (o DiskOutput) SourceSnapshotEncryptionKey() DiskSourceSnapshotEncryptionKeyPtrOutput {
	return o.ApplyT(func(v *Disk) DiskSourceSnapshotEncryptionKeyPtrOutput { return v.SourceSnapshotEncryptionKey }).(DiskSourceSnapshotEncryptionKeyPtrOutput)
}

// The unique ID of the snapshot used to create this disk. This value
// identifies the exact snapshot that was used to create this persistent
// disk. For example, if you created the persistent disk from a snapshot
// that was later deleted and recreated under the same name, the source
// snapshot ID would identify the exact version of the snapshot that was
// used.
func (o DiskOutput) SourceSnapshotId() pulumi.StringOutput {
	return o.ApplyT(func(v *Disk) pulumi.StringOutput { return v.SourceSnapshotId }).(pulumi.StringOutput)
}

// URL of the disk type resource describing which disk type to use to
// create the disk. Provide this when creating the disk.
func (o DiskOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Disk) pulumi.StringPtrOutput { return v.Type }).(pulumi.StringPtrOutput)
}

// Links to the users of the disk (attached instances) in form:
// project/zones/zone/instances/instance
func (o DiskOutput) Users() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Disk) pulumi.StringArrayOutput { return v.Users }).(pulumi.StringArrayOutput)
}

// A reference to the zone where the disk resides.
func (o DiskOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v *Disk) pulumi.StringOutput { return v.Zone }).(pulumi.StringOutput)
}

type DiskArrayOutput struct{ *pulumi.OutputState }

func (DiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Disk)(nil)).Elem()
}

func (o DiskArrayOutput) ToDiskArrayOutput() DiskArrayOutput {
	return o
}

func (o DiskArrayOutput) ToDiskArrayOutputWithContext(ctx context.Context) DiskArrayOutput {
	return o
}

func (o DiskArrayOutput) Index(i pulumi.IntInput) DiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Disk {
		return vs[0].([]*Disk)[vs[1].(int)]
	}).(DiskOutput)
}

type DiskMapOutput struct{ *pulumi.OutputState }

func (DiskMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Disk)(nil)).Elem()
}

func (o DiskMapOutput) ToDiskMapOutput() DiskMapOutput {
	return o
}

func (o DiskMapOutput) ToDiskMapOutputWithContext(ctx context.Context) DiskMapOutput {
	return o
}

func (o DiskMapOutput) MapIndex(k pulumi.StringInput) DiskOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Disk {
		return vs[0].(map[string]*Disk)[vs[1].(string)]
	}).(DiskOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DiskInput)(nil)).Elem(), &Disk{})
	pulumi.RegisterInputType(reflect.TypeOf((*DiskArrayInput)(nil)).Elem(), DiskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DiskMapInput)(nil)).Elem(), DiskMap{})
	pulumi.RegisterOutputType(DiskOutput{})
	pulumi.RegisterOutputType(DiskArrayOutput{})
	pulumi.RegisterOutputType(DiskMapOutput{})
}
