// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package compute

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupMachineImageIamPolicy(ctx *pulumi.Context, args *LookupMachineImageIamPolicyArgs, opts ...pulumi.InvokeOption) (*LookupMachineImageIamPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupMachineImageIamPolicyResult
	err := ctx.Invoke("gcp:compute/getMachineImageIamPolicy:getMachineImageIamPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMachineImageIamPolicy.
type LookupMachineImageIamPolicyArgs struct {
	// Used to find the parent resource to bind the IAM policy to
	MachineImage string `pulumi:"machineImage"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project *string `pulumi:"project"`
}

// A collection of values returned by getMachineImageIamPolicy.
type LookupMachineImageIamPolicyResult struct {
	// (Computed) The etag of the IAM policy.
	Etag string `pulumi:"etag"`
	// The provider-assigned unique ID for this managed resource.
	Id           string `pulumi:"id"`
	MachineImage string `pulumi:"machineImage"`
	// (Required only by `compute.MachineImageIamPolicy`) The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData string `pulumi:"policyData"`
	Project    string `pulumi:"project"`
}

func LookupMachineImageIamPolicyOutput(ctx *pulumi.Context, args LookupMachineImageIamPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupMachineImageIamPolicyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupMachineImageIamPolicyResult, error) {
			args := v.(LookupMachineImageIamPolicyArgs)
			r, err := LookupMachineImageIamPolicy(ctx, &args, opts...)
			var s LookupMachineImageIamPolicyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupMachineImageIamPolicyResultOutput)
}

// A collection of arguments for invoking getMachineImageIamPolicy.
type LookupMachineImageIamPolicyOutputArgs struct {
	// Used to find the parent resource to bind the IAM policy to
	MachineImage pulumi.StringInput `pulumi:"machineImage"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupMachineImageIamPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMachineImageIamPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getMachineImageIamPolicy.
type LookupMachineImageIamPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupMachineImageIamPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMachineImageIamPolicyResult)(nil)).Elem()
}

func (o LookupMachineImageIamPolicyResultOutput) ToLookupMachineImageIamPolicyResultOutput() LookupMachineImageIamPolicyResultOutput {
	return o
}

func (o LookupMachineImageIamPolicyResultOutput) ToLookupMachineImageIamPolicyResultOutputWithContext(ctx context.Context) LookupMachineImageIamPolicyResultOutput {
	return o
}

// (Computed) The etag of the IAM policy.
func (o LookupMachineImageIamPolicyResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMachineImageIamPolicyResult) string { return v.Etag }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupMachineImageIamPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMachineImageIamPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupMachineImageIamPolicyResultOutput) MachineImage() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMachineImageIamPolicyResult) string { return v.MachineImage }).(pulumi.StringOutput)
}

// (Required only by `compute.MachineImageIamPolicy`) The policy data generated by
// a `organizations.getIAMPolicy` data source.
func (o LookupMachineImageIamPolicyResultOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMachineImageIamPolicyResult) string { return v.PolicyData }).(pulumi.StringOutput)
}

func (o LookupMachineImageIamPolicyResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMachineImageIamPolicyResult) string { return v.Project }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupMachineImageIamPolicyResultOutput{})
}
