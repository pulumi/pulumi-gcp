// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package compute

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a group of dissimilar Compute Engine virtual machine instances.
// For more information, see [the official documentation](https://cloud.google.com/compute/docs/instance-groups/#unmanaged_instance_groups)
// and [API](https://cloud.google.com/compute/docs/reference/latest/instanceGroups)
//
// ## Example Usage
// ### Empty Instance Group
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/compute"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := compute.NewInstanceGroup(ctx, "test", &compute.InstanceGroupArgs{
//				Description: pulumi.String("Test instance group"),
//				Zone:        pulumi.String("us-central1-a"),
//				Network:     pulumi.Any(google_compute_network.Default.Id),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Example Usage - With instances and named ports
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/compute"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := compute.NewInstanceGroup(ctx, "webservers", &compute.InstanceGroupArgs{
//				Description: pulumi.String("Test instance group"),
//				Instances: pulumi.StringArray{
//					google_compute_instance.Test.Id,
//					google_compute_instance.Test2.Id,
//				},
//				NamedPorts: compute.InstanceGroupNamedPortTypeArray{
//					&compute.InstanceGroupNamedPortTypeArgs{
//						Name: pulumi.String("http"),
//						Port: pulumi.Int(8080),
//					},
//					&compute.InstanceGroupNamedPortTypeArgs{
//						Name: pulumi.String("https"),
//						Port: pulumi.Int(8443),
//					},
//				},
//				Zone: pulumi.String("us-central1-a"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Instance group can be imported using the `zone` and `name` with an optional `project`, e.g.
//
// ```sh
//
//	$ pulumi import gcp:compute/instanceGroup:InstanceGroup webservers us-central1-a/terraform-webservers
//
// ```
//
// ```sh
//
//	$ pulumi import gcp:compute/instanceGroup:InstanceGroup webservers big-project/us-central1-a/terraform-webservers
//
// ```
//
// ```sh
//
//	$ pulumi import gcp:compute/instanceGroup:InstanceGroup webservers projects/big-project/zones/us-central1-a/instanceGroups/terraform-webservers
//
// ```
type InstanceGroup struct {
	pulumi.CustomResourceState

	// An optional textual description of the instance
	// group.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The list of instances in the group, in `selfLink` format.
	// When adding instances they must all be in the same network and zone as the instance group.
	Instances pulumi.StringArrayOutput `pulumi:"instances"`
	// The name of the instance group. Must be 1-63
	// characters long and comply with
	// [RFC1035](https://www.ietf.org/rfc/rfc1035.txt). Supported characters
	// include lowercase letters, numbers, and hyphens.
	Name pulumi.StringOutput `pulumi:"name"`
	// The named port configuration. See the section below
	// for details on configuration. Structure is documented below.
	NamedPorts InstanceGroupNamedPortTypeArrayOutput `pulumi:"namedPorts"`
	// The URL of the network the instance group is in. If
	// this is different from the network where the instances are in, the creation
	// fails. Defaults to the network where the instances are in (if neither
	// `network` nor `instances` is specified, this field will be blank).
	Network pulumi.StringOutput `pulumi:"network"`
	// The ID of the project in which the resource belongs. If it
	// is not provided, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
	// The URI of the created resource.
	SelfLink pulumi.StringOutput `pulumi:"selfLink"`
	// The number of instances in the group.
	Size pulumi.IntOutput `pulumi:"size"`
	// The zone that this instance group should be created in.
	//
	// ***
	Zone pulumi.StringOutput `pulumi:"zone"`
}

// NewInstanceGroup registers a new resource with the given unique name, arguments, and options.
func NewInstanceGroup(ctx *pulumi.Context,
	name string, args *InstanceGroupArgs, opts ...pulumi.ResourceOption) (*InstanceGroup, error) {
	if args == nil {
		args = &InstanceGroupArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource InstanceGroup
	err := ctx.RegisterResource("gcp:compute/instanceGroup:InstanceGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInstanceGroup gets an existing InstanceGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInstanceGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InstanceGroupState, opts ...pulumi.ResourceOption) (*InstanceGroup, error) {
	var resource InstanceGroup
	err := ctx.ReadResource("gcp:compute/instanceGroup:InstanceGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering InstanceGroup resources.
type instanceGroupState struct {
	// An optional textual description of the instance
	// group.
	Description *string `pulumi:"description"`
	// The list of instances in the group, in `selfLink` format.
	// When adding instances they must all be in the same network and zone as the instance group.
	Instances []string `pulumi:"instances"`
	// The name of the instance group. Must be 1-63
	// characters long and comply with
	// [RFC1035](https://www.ietf.org/rfc/rfc1035.txt). Supported characters
	// include lowercase letters, numbers, and hyphens.
	Name *string `pulumi:"name"`
	// The named port configuration. See the section below
	// for details on configuration. Structure is documented below.
	NamedPorts []InstanceGroupNamedPortType `pulumi:"namedPorts"`
	// The URL of the network the instance group is in. If
	// this is different from the network where the instances are in, the creation
	// fails. Defaults to the network where the instances are in (if neither
	// `network` nor `instances` is specified, this field will be blank).
	Network *string `pulumi:"network"`
	// The ID of the project in which the resource belongs. If it
	// is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// The URI of the created resource.
	SelfLink *string `pulumi:"selfLink"`
	// The number of instances in the group.
	Size *int `pulumi:"size"`
	// The zone that this instance group should be created in.
	//
	// ***
	Zone *string `pulumi:"zone"`
}

type InstanceGroupState struct {
	// An optional textual description of the instance
	// group.
	Description pulumi.StringPtrInput
	// The list of instances in the group, in `selfLink` format.
	// When adding instances they must all be in the same network and zone as the instance group.
	Instances pulumi.StringArrayInput
	// The name of the instance group. Must be 1-63
	// characters long and comply with
	// [RFC1035](https://www.ietf.org/rfc/rfc1035.txt). Supported characters
	// include lowercase letters, numbers, and hyphens.
	Name pulumi.StringPtrInput
	// The named port configuration. See the section below
	// for details on configuration. Structure is documented below.
	NamedPorts InstanceGroupNamedPortTypeArrayInput
	// The URL of the network the instance group is in. If
	// this is different from the network where the instances are in, the creation
	// fails. Defaults to the network where the instances are in (if neither
	// `network` nor `instances` is specified, this field will be blank).
	Network pulumi.StringPtrInput
	// The ID of the project in which the resource belongs. If it
	// is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// The URI of the created resource.
	SelfLink pulumi.StringPtrInput
	// The number of instances in the group.
	Size pulumi.IntPtrInput
	// The zone that this instance group should be created in.
	//
	// ***
	Zone pulumi.StringPtrInput
}

func (InstanceGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceGroupState)(nil)).Elem()
}

type instanceGroupArgs struct {
	// An optional textual description of the instance
	// group.
	Description *string `pulumi:"description"`
	// The list of instances in the group, in `selfLink` format.
	// When adding instances they must all be in the same network and zone as the instance group.
	Instances []string `pulumi:"instances"`
	// The name of the instance group. Must be 1-63
	// characters long and comply with
	// [RFC1035](https://www.ietf.org/rfc/rfc1035.txt). Supported characters
	// include lowercase letters, numbers, and hyphens.
	Name *string `pulumi:"name"`
	// The named port configuration. See the section below
	// for details on configuration. Structure is documented below.
	NamedPorts []InstanceGroupNamedPortType `pulumi:"namedPorts"`
	// The URL of the network the instance group is in. If
	// this is different from the network where the instances are in, the creation
	// fails. Defaults to the network where the instances are in (if neither
	// `network` nor `instances` is specified, this field will be blank).
	Network *string `pulumi:"network"`
	// The ID of the project in which the resource belongs. If it
	// is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// The zone that this instance group should be created in.
	//
	// ***
	Zone *string `pulumi:"zone"`
}

// The set of arguments for constructing a InstanceGroup resource.
type InstanceGroupArgs struct {
	// An optional textual description of the instance
	// group.
	Description pulumi.StringPtrInput
	// The list of instances in the group, in `selfLink` format.
	// When adding instances they must all be in the same network and zone as the instance group.
	Instances pulumi.StringArrayInput
	// The name of the instance group. Must be 1-63
	// characters long and comply with
	// [RFC1035](https://www.ietf.org/rfc/rfc1035.txt). Supported characters
	// include lowercase letters, numbers, and hyphens.
	Name pulumi.StringPtrInput
	// The named port configuration. See the section below
	// for details on configuration. Structure is documented below.
	NamedPorts InstanceGroupNamedPortTypeArrayInput
	// The URL of the network the instance group is in. If
	// this is different from the network where the instances are in, the creation
	// fails. Defaults to the network where the instances are in (if neither
	// `network` nor `instances` is specified, this field will be blank).
	Network pulumi.StringPtrInput
	// The ID of the project in which the resource belongs. If it
	// is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// The zone that this instance group should be created in.
	//
	// ***
	Zone pulumi.StringPtrInput
}

func (InstanceGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceGroupArgs)(nil)).Elem()
}

type InstanceGroupInput interface {
	pulumi.Input

	ToInstanceGroupOutput() InstanceGroupOutput
	ToInstanceGroupOutputWithContext(ctx context.Context) InstanceGroupOutput
}

func (*InstanceGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceGroup)(nil)).Elem()
}

func (i *InstanceGroup) ToInstanceGroupOutput() InstanceGroupOutput {
	return i.ToInstanceGroupOutputWithContext(context.Background())
}

func (i *InstanceGroup) ToInstanceGroupOutputWithContext(ctx context.Context) InstanceGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceGroupOutput)
}

// InstanceGroupArrayInput is an input type that accepts InstanceGroupArray and InstanceGroupArrayOutput values.
// You can construct a concrete instance of `InstanceGroupArrayInput` via:
//
//	InstanceGroupArray{ InstanceGroupArgs{...} }
type InstanceGroupArrayInput interface {
	pulumi.Input

	ToInstanceGroupArrayOutput() InstanceGroupArrayOutput
	ToInstanceGroupArrayOutputWithContext(context.Context) InstanceGroupArrayOutput
}

type InstanceGroupArray []InstanceGroupInput

func (InstanceGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*InstanceGroup)(nil)).Elem()
}

func (i InstanceGroupArray) ToInstanceGroupArrayOutput() InstanceGroupArrayOutput {
	return i.ToInstanceGroupArrayOutputWithContext(context.Background())
}

func (i InstanceGroupArray) ToInstanceGroupArrayOutputWithContext(ctx context.Context) InstanceGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceGroupArrayOutput)
}

// InstanceGroupMapInput is an input type that accepts InstanceGroupMap and InstanceGroupMapOutput values.
// You can construct a concrete instance of `InstanceGroupMapInput` via:
//
//	InstanceGroupMap{ "key": InstanceGroupArgs{...} }
type InstanceGroupMapInput interface {
	pulumi.Input

	ToInstanceGroupMapOutput() InstanceGroupMapOutput
	ToInstanceGroupMapOutputWithContext(context.Context) InstanceGroupMapOutput
}

type InstanceGroupMap map[string]InstanceGroupInput

func (InstanceGroupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*InstanceGroup)(nil)).Elem()
}

func (i InstanceGroupMap) ToInstanceGroupMapOutput() InstanceGroupMapOutput {
	return i.ToInstanceGroupMapOutputWithContext(context.Background())
}

func (i InstanceGroupMap) ToInstanceGroupMapOutputWithContext(ctx context.Context) InstanceGroupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceGroupMapOutput)
}

type InstanceGroupOutput struct{ *pulumi.OutputState }

func (InstanceGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceGroup)(nil)).Elem()
}

func (o InstanceGroupOutput) ToInstanceGroupOutput() InstanceGroupOutput {
	return o
}

func (o InstanceGroupOutput) ToInstanceGroupOutputWithContext(ctx context.Context) InstanceGroupOutput {
	return o
}

// An optional textual description of the instance
// group.
func (o InstanceGroupOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceGroup) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The list of instances in the group, in `selfLink` format.
// When adding instances they must all be in the same network and zone as the instance group.
func (o InstanceGroupOutput) Instances() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *InstanceGroup) pulumi.StringArrayOutput { return v.Instances }).(pulumi.StringArrayOutput)
}

// The name of the instance group. Must be 1-63
// characters long and comply with
// [RFC1035](https://www.ietf.org/rfc/rfc1035.txt). Supported characters
// include lowercase letters, numbers, and hyphens.
func (o InstanceGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *InstanceGroup) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The named port configuration. See the section below
// for details on configuration. Structure is documented below.
func (o InstanceGroupOutput) NamedPorts() InstanceGroupNamedPortTypeArrayOutput {
	return o.ApplyT(func(v *InstanceGroup) InstanceGroupNamedPortTypeArrayOutput { return v.NamedPorts }).(InstanceGroupNamedPortTypeArrayOutput)
}

// The URL of the network the instance group is in. If
// this is different from the network where the instances are in, the creation
// fails. Defaults to the network where the instances are in (if neither
// `network` nor `instances` is specified, this field will be blank).
func (o InstanceGroupOutput) Network() pulumi.StringOutput {
	return o.ApplyT(func(v *InstanceGroup) pulumi.StringOutput { return v.Network }).(pulumi.StringOutput)
}

// The ID of the project in which the resource belongs. If it
// is not provided, the provider project is used.
func (o InstanceGroupOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *InstanceGroup) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The URI of the created resource.
func (o InstanceGroupOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v *InstanceGroup) pulumi.StringOutput { return v.SelfLink }).(pulumi.StringOutput)
}

// The number of instances in the group.
func (o InstanceGroupOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v *InstanceGroup) pulumi.IntOutput { return v.Size }).(pulumi.IntOutput)
}

// The zone that this instance group should be created in.
//
// ***
func (o InstanceGroupOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v *InstanceGroup) pulumi.StringOutput { return v.Zone }).(pulumi.StringOutput)
}

type InstanceGroupArrayOutput struct{ *pulumi.OutputState }

func (InstanceGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*InstanceGroup)(nil)).Elem()
}

func (o InstanceGroupArrayOutput) ToInstanceGroupArrayOutput() InstanceGroupArrayOutput {
	return o
}

func (o InstanceGroupArrayOutput) ToInstanceGroupArrayOutputWithContext(ctx context.Context) InstanceGroupArrayOutput {
	return o
}

func (o InstanceGroupArrayOutput) Index(i pulumi.IntInput) InstanceGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *InstanceGroup {
		return vs[0].([]*InstanceGroup)[vs[1].(int)]
	}).(InstanceGroupOutput)
}

type InstanceGroupMapOutput struct{ *pulumi.OutputState }

func (InstanceGroupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*InstanceGroup)(nil)).Elem()
}

func (o InstanceGroupMapOutput) ToInstanceGroupMapOutput() InstanceGroupMapOutput {
	return o
}

func (o InstanceGroupMapOutput) ToInstanceGroupMapOutputWithContext(ctx context.Context) InstanceGroupMapOutput {
	return o
}

func (o InstanceGroupMapOutput) MapIndex(k pulumi.StringInput) InstanceGroupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *InstanceGroup {
		return vs[0].(map[string]*InstanceGroup)[vs[1].(string)]
	}).(InstanceGroupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceGroupInput)(nil)).Elem(), &InstanceGroup{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceGroupArrayInput)(nil)).Elem(), InstanceGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceGroupMapInput)(nil)).Elem(), InstanceGroupMap{})
	pulumi.RegisterOutputType(InstanceGroupOutput{})
	pulumi.RegisterOutputType(InstanceGroupArrayOutput{})
	pulumi.RegisterOutputType(InstanceGroupMapOutput{})
}
