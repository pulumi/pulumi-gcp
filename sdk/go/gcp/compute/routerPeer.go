// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package compute

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// BGP information that must be configured into the routing stack to
// establish BGP peering. This information must specify the peer ASN
// and either the interface name, IP address, or peer IP address.
// Please refer to RFC4273.
//
// To get more information about RouterBgpPeer, see:
//
// * [API documentation](https://cloud.google.com/compute/docs/reference/rest/v1/routers)
// * How-to Guides
//   - [Google Cloud Router](https://cloud.google.com/router/docs/)
//
// ## Example Usage
//
// ### Router Peer Basic
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/compute"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := compute.NewRouterPeer(ctx, "peer", &compute.RouterPeerArgs{
//				Name:                    pulumi.String("my-router-peer"),
//				Router:                  pulumi.String("my-router"),
//				Region:                  pulumi.String("us-central1"),
//				PeerAsn:                 pulumi.Int(65513),
//				AdvertisedRoutePriority: pulumi.Int(100),
//				Interface:               pulumi.String("interface-1"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Router Peer Disabled
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/compute"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := compute.NewRouterPeer(ctx, "peer", &compute.RouterPeerArgs{
//				Name:                    pulumi.String("my-router-peer"),
//				Router:                  pulumi.String("my-router"),
//				Region:                  pulumi.String("us-central1"),
//				PeerIpAddress:           pulumi.String("169.254.1.2"),
//				PeerAsn:                 pulumi.Int(65513),
//				AdvertisedRoutePriority: pulumi.Int(100),
//				Interface:               pulumi.String("interface-1"),
//				Enable:                  pulumi.Bool(false),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Router Peer Bfd
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/compute"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := compute.NewRouterPeer(ctx, "peer", &compute.RouterPeerArgs{
//				Name:                    pulumi.String("my-router-peer"),
//				Router:                  pulumi.String("my-router"),
//				Region:                  pulumi.String("us-central1"),
//				PeerIpAddress:           pulumi.String("169.254.1.2"),
//				PeerAsn:                 pulumi.Int(65513),
//				AdvertisedRoutePriority: pulumi.Int(100),
//				Interface:               pulumi.String("interface-1"),
//				Bfd: &compute.RouterPeerBfdArgs{
//					MinReceiveInterval:        pulumi.Int(1000),
//					MinTransmitInterval:       pulumi.Int(1000),
//					Multiplier:                pulumi.Int(5),
//					SessionInitializationMode: pulumi.String("ACTIVE"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Router Peer Router Appliance
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/compute"
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/networkconnectivity"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
// func main() {
// pulumi.Run(func(ctx *pulumi.Context) error {
// network, err := compute.NewNetwork(ctx, "network", &compute.NetworkArgs{
// Name: pulumi.String("my-router-net"),
// AutoCreateSubnetworks: pulumi.Bool(false),
// })
// if err != nil {
// return err
// }
// subnetwork, err := compute.NewSubnetwork(ctx, "subnetwork", &compute.SubnetworkArgs{
// Name: pulumi.String("my-router-sub"),
// Network: network.SelfLink,
// IpCidrRange: pulumi.String("10.0.0.0/16"),
// Region: pulumi.String("us-central1"),
// })
// if err != nil {
// return err
// }
// addrIntf, err := compute.NewAddress(ctx, "addr_intf", &compute.AddressArgs{
// Name: pulumi.String("my-router-addr-intf"),
// Region: subnetwork.Region,
// Subnetwork: subnetwork.ID(),
// AddressType: pulumi.String("INTERNAL"),
// })
// if err != nil {
// return err
// }
// addrIntfRedundant, err := compute.NewAddress(ctx, "addr_intf_redundant", &compute.AddressArgs{
// Name: pulumi.String("my-router-addr-intf-red"),
// Region: subnetwork.Region,
// Subnetwork: subnetwork.ID(),
// AddressType: pulumi.String("INTERNAL"),
// })
// if err != nil {
// return err
// }
// addrPeer, err := compute.NewAddress(ctx, "addr_peer", &compute.AddressArgs{
// Name: pulumi.String("my-router-addr-peer"),
// Region: subnetwork.Region,
// Subnetwork: subnetwork.ID(),
// AddressType: pulumi.String("INTERNAL"),
// })
// if err != nil {
// return err
// }
// instance, err := compute.NewInstance(ctx, "instance", &compute.InstanceArgs{
// Name: pulumi.String("router-appliance"),
// Zone: pulumi.String("us-central1-a"),
// MachineType: pulumi.String("e2-medium"),
// CanIpForward: pulumi.Bool(true),
// BootDisk: &compute.InstanceBootDiskArgs{
// InitializeParams: &compute.InstanceBootDiskInitializeParamsArgs{
// Image: pulumi.String("debian-cloud/debian-11"),
// },
// },
// NetworkInterfaces: compute.InstanceNetworkInterfaceArray{
// &compute.InstanceNetworkInterfaceArgs{
// NetworkIp: addrPeer.Address,
// Subnetwork: subnetwork.SelfLink,
// },
// },
// })
// if err != nil {
// return err
// }
// hub, err := networkconnectivity.NewHub(ctx, "hub", &networkconnectivity.HubArgs{
// Name: pulumi.String("my-router-hub"),
// })
// if err != nil {
// return err
// }
// _, err = networkconnectivity.NewSpoke(ctx, "spoke", &networkconnectivity.SpokeArgs{
// Name: pulumi.String("my-router-spoke"),
// Location: subnetwork.Region,
// Hub: hub.ID(),
// LinkedRouterApplianceInstances: &networkconnectivity.SpokeLinkedRouterApplianceInstancesArgs{
// Instances: networkconnectivity.SpokeLinkedRouterApplianceInstancesInstanceArray{
// &networkconnectivity.SpokeLinkedRouterApplianceInstancesInstanceArgs{
// VirtualMachine: instance.SelfLink,
// IpAddress: addrPeer.Address,
// },
// },
// SiteToSiteDataTransfer: pulumi.Bool(false),
// },
// })
// if err != nil {
// return err
// }
// router, err := compute.NewRouter(ctx, "router", &compute.RouterArgs{
// Name: pulumi.String("my-router-router"),
// Region: subnetwork.Region,
// Network: network.SelfLink,
// Bgp: &compute.RouterBgpArgs{
// Asn: pulumi.Int(64514),
// },
// })
// if err != nil {
// return err
// }
// interfaceRedundant, err := compute.NewRouterInterface(ctx, "interface_redundant", &compute.RouterInterfaceArgs{
// Name: pulumi.String("my-router-intf-red"),
// Region: router.Region,
// Router: router.Name,
// Subnetwork: subnetwork.SelfLink,
// PrivateIpAddress: addrIntfRedundant.Address,
// })
// if err != nil {
// return err
// }
// interface, err := compute.NewRouterInterface(ctx, "interface", &compute.RouterInterfaceArgs{
// Name: pulumi.String("my-router-intf"),
// Region: router.Region,
// Router: router.Name,
// Subnetwork: subnetwork.SelfLink,
// PrivateIpAddress: addrIntf.Address,
// RedundantInterface: interfaceRedundant.Name,
// })
// if err != nil {
// return err
// }
// _, err = compute.NewRouterPeer(ctx, "peer", &compute.RouterPeerArgs{
// Name: pulumi.String("my-router-peer"),
// Router: router.Name,
// Region: router.Region,
// Interface: interface.Name,
// RouterApplianceInstance: instance.SelfLink,
// PeerAsn: pulumi.Int(65513),
// PeerIpAddress: addrPeer.Address,
// })
// if err != nil {
// return err
// }
// return nil
// })
// }
// ```
//
// ### Router Peer Md5 Authentication Key
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/compute"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := compute.NewRouterPeer(ctx, "foobar", &compute.RouterPeerArgs{
//				Name:                    pulumi.String("%s-peer"),
//				Router:                  pulumi.Any(foobarGoogleComputeRouter.Name),
//				Region:                  pulumi.Any(foobarGoogleComputeRouter.Region),
//				PeerAsn:                 pulumi.Int(65515),
//				AdvertisedRoutePriority: pulumi.Int(100),
//				Interface:               pulumi.Any(foobarGoogleComputeRouterInterface.Name),
//				PeerIpAddress:           pulumi.String("169.254.3.2"),
//				Md5AuthenticationKey: &compute.RouterPeerMd5AuthenticationKeyArgs{
//					Name: pulumi.String("%s-peer-key"),
//					Key:  pulumi.String("%s-peer-key-value"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ### Router Peer Export And Import Policies
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/compute"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			network, err := compute.NewNetwork(ctx, "network", &compute.NetworkArgs{
//				Name:                  pulumi.String("my-router-net"),
//				AutoCreateSubnetworks: pulumi.Bool(false),
//			})
//			if err != nil {
//				return err
//			}
//			subnetwork, err := compute.NewSubnetwork(ctx, "subnetwork", &compute.SubnetworkArgs{
//				Name:        pulumi.String("my-router-subnet"),
//				Network:     network.SelfLink,
//				IpCidrRange: pulumi.String("10.0.0.0/16"),
//				Region:      pulumi.String("us-central1"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = compute.NewAddress(ctx, "address", &compute.AddressArgs{
//				Name:   pulumi.String("my-router"),
//				Region: subnetwork.Region,
//			})
//			if err != nil {
//				return err
//			}
//			vpnGateway, err := compute.NewHaVpnGateway(ctx, "vpn_gateway", &compute.HaVpnGatewayArgs{
//				Name:    pulumi.String("my-router-gateway"),
//				Network: network.SelfLink,
//				Region:  subnetwork.Region,
//			})
//			if err != nil {
//				return err
//			}
//			externalGateway, err := compute.NewExternalVpnGateway(ctx, "external_gateway", &compute.ExternalVpnGatewayArgs{
//				Name:           pulumi.String("my-router-external-gateway"),
//				RedundancyType: pulumi.String("SINGLE_IP_INTERNALLY_REDUNDANT"),
//				Description:    pulumi.String("An externally managed VPN gateway"),
//				Interfaces: compute.ExternalVpnGatewayInterfaceArray{
//					&compute.ExternalVpnGatewayInterfaceArgs{
//						Id:        pulumi.Int(0),
//						IpAddress: pulumi.String("8.8.8.8"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			router, err := compute.NewRouter(ctx, "router", &compute.RouterArgs{
//				Name:    pulumi.String("my-router"),
//				Region:  subnetwork.Region,
//				Network: network.SelfLink,
//				Bgp: &compute.RouterBgpArgs{
//					Asn: pulumi.Int(64514),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			vpnTunnel, err := compute.NewVPNTunnel(ctx, "vpn_tunnel", &compute.VPNTunnelArgs{
//				Name:                         pulumi.String("my-router"),
//				Region:                       subnetwork.Region,
//				VpnGateway:                   vpnGateway.ID(),
//				PeerExternalGateway:          externalGateway.ID(),
//				PeerExternalGatewayInterface: pulumi.Int(0),
//				SharedSecret:                 pulumi.String("unguessable"),
//				Router:                       router.Name,
//				VpnGatewayInterface:          pulumi.Int(0),
//			})
//			if err != nil {
//				return err
//			}
//			routerInterface, err := compute.NewRouterInterface(ctx, "router_interface", &compute.RouterInterfaceArgs{
//				Name:      pulumi.String("my-router"),
//				Router:    router.Name,
//				Region:    router.Region,
//				VpnTunnel: vpnTunnel.Name,
//			})
//			if err != nil {
//				return err
//			}
//			rp_export, err := compute.NewRouterRoutePolicy(ctx, "rp-export", &compute.RouterRoutePolicyArgs{
//				Name:   pulumi.String("my-router-rp-export"),
//				Router: router.Name,
//				Region: router.Region,
//				Type:   pulumi.String("ROUTE_POLICY_TYPE_EXPORT"),
//				Terms: compute.RouterRoutePolicyTermArray{
//					&compute.RouterRoutePolicyTermArgs{
//						Priority: pulumi.Int(2),
//						Match: &compute.RouterRoutePolicyTermMatchArgs{
//							Expression:  pulumi.String("destination == '10.0.0.0/12'"),
//							Title:       pulumi.String("export_expression"),
//							Description: pulumi.String("acceptance expression for export"),
//						},
//						Actions: compute.RouterRoutePolicyTermActionArray{
//							&compute.RouterRoutePolicyTermActionArgs{
//								Expression: pulumi.String("accept()"),
//							},
//						},
//					},
//				},
//			}, pulumi.DependsOn([]pulumi.Resource{
//				routerInterface,
//			}))
//			if err != nil {
//				return err
//			}
//			rp_import, err := compute.NewRouterRoutePolicy(ctx, "rp-import", &compute.RouterRoutePolicyArgs{
//				Name:   pulumi.String("my-router-rp-import"),
//				Router: router.Name,
//				Region: router.Region,
//				Type:   pulumi.String("ROUTE_POLICY_TYPE_IMPORT"),
//				Terms: compute.RouterRoutePolicyTermArray{
//					&compute.RouterRoutePolicyTermArgs{
//						Priority: pulumi.Int(1),
//						Match: &compute.RouterRoutePolicyTermMatchArgs{
//							Expression:  pulumi.String("destination == '10.0.0.0/12'"),
//							Title:       pulumi.String("import_expression"),
//							Description: pulumi.String("acceptance expression for import"),
//						},
//						Actions: compute.RouterRoutePolicyTermActionArray{
//							&compute.RouterRoutePolicyTermActionArgs{
//								Expression: pulumi.String("accept()"),
//							},
//						},
//					},
//				},
//			}, pulumi.DependsOn([]pulumi.Resource{
//				routerInterface,
//				rp_export,
//			}))
//			if err != nil {
//				return err
//			}
//			_, err = compute.NewRouterPeer(ctx, "router_peer", &compute.RouterPeerArgs{
//				Name:                    pulumi.String("my-router-peer"),
//				Router:                  router.Name,
//				Region:                  router.Region,
//				PeerAsn:                 pulumi.Int(65515),
//				AdvertisedRoutePriority: pulumi.Int(100),
//				Interface:               routerInterface.Name,
//				Md5AuthenticationKey: &compute.RouterPeerMd5AuthenticationKeyArgs{
//					Name: pulumi.String("my-router-peer-key"),
//					Key:  pulumi.String("my-router-peer-key-value"),
//				},
//				ImportPolicies: pulumi.StringArray{
//					rp_import.Name,
//				},
//				ExportPolicies: pulumi.StringArray{
//					rp_export.Name,
//				},
//			}, pulumi.DependsOn([]pulumi.Resource{
//				rp_export,
//				rp_import,
//				routerInterface,
//			}))
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// RouterBgpPeer can be imported using any of these accepted formats:
//
// * `projects/{{project}}/regions/{{region}}/routers/{{router}}/{{name}}`
//
// * `{{project}}/{{region}}/{{router}}/{{name}}`
//
// * `{{region}}/{{router}}/{{name}}`
//
// * `{{router}}/{{name}}`
//
// When using the `pulumi import` command, RouterBgpPeer can be imported using one of the formats above. For example:
//
// ```sh
// $ pulumi import gcp:compute/routerPeer:RouterPeer default projects/{{project}}/regions/{{region}}/routers/{{router}}/{{name}}
// ```
//
// ```sh
// $ pulumi import gcp:compute/routerPeer:RouterPeer default {{project}}/{{region}}/{{router}}/{{name}}
// ```
//
// ```sh
// $ pulumi import gcp:compute/routerPeer:RouterPeer default {{region}}/{{router}}/{{name}}
// ```
//
// ```sh
// $ pulumi import gcp:compute/routerPeer:RouterPeer default {{router}}/{{name}}
// ```
type RouterPeer struct {
	pulumi.CustomResourceState

	// User-specified flag to indicate which mode to use for advertisement.
	// Valid values of this enum field are: `DEFAULT`, `CUSTOM`
	// Default value is `DEFAULT`.
	// Possible values are: `DEFAULT`, `CUSTOM`.
	AdvertiseMode pulumi.StringPtrOutput `pulumi:"advertiseMode"`
	// User-specified list of prefix groups to advertise in custom
	// mode, which currently supports the following option:
	// * `ALL_SUBNETS`: Advertises all of the router's own VPC subnets.
	//   This excludes any routes learned for subnets that use VPC Network
	//   Peering.
	//
	// Note that this field can only be populated if advertiseMode is `CUSTOM`
	// and overrides the list defined for the router (in the "bgp" message).
	// These groups are advertised in addition to any specified prefixes.
	// Leave this field blank to advertise no custom groups.
	AdvertisedGroups pulumi.StringArrayOutput `pulumi:"advertisedGroups"`
	// User-specified list of individual IP ranges to advertise in
	// custom mode. This field can only be populated if advertiseMode
	// is `CUSTOM` and is advertised to all peers of the router. These IP
	// ranges will be advertised in addition to any specified groups.
	// Leave this field blank to advertise no custom IP ranges.
	// Structure is documented below.
	AdvertisedIpRanges RouterPeerAdvertisedIpRangeArrayOutput `pulumi:"advertisedIpRanges"`
	// The priority of routes advertised to this BGP peer.
	// Where there is more than one matching route of maximum
	// length, the routes with the lowest priority value win.
	AdvertisedRoutePriority pulumi.IntPtrOutput `pulumi:"advertisedRoutePriority"`
	// BFD configuration for the BGP peering.
	// Structure is documented below.
	Bfd RouterPeerBfdOutput `pulumi:"bfd"`
	// The custom learned route IP address range. Must be a valid CIDR-formatted prefix.
	// If an IP address is provided without a subnet mask, it is interpreted as, for IPv4,
	// a /32 singular IP address range, and, for IPv6, /128.
	// Structure is documented below.
	CustomLearnedIpRanges RouterPeerCustomLearnedIpRangeArrayOutput `pulumi:"customLearnedIpRanges"`
	// The user-defined custom learned route priority for a BGP session.
	// This value is applied to all custom learned route ranges for the session.
	// You can choose a value from 0 to 65335. If you don't provide a value,
	// Google Cloud assigns a priority of 100 to the ranges.
	CustomLearnedRoutePriority pulumi.IntPtrOutput `pulumi:"customLearnedRoutePriority"`
	// The status of the BGP peer connection. If set to false, any active session
	// with the peer is terminated and all associated routing information is removed.
	// If set to true, the peer connection can be established with routing information.
	// The default is true.
	Enable pulumi.BoolPtrOutput `pulumi:"enable"`
	// Enable IPv4 traffic over BGP Peer. It is enabled by default if the peerIpAddress is version 4.
	EnableIpv4 pulumi.BoolOutput `pulumi:"enableIpv4"`
	// Enable IPv6 traffic over BGP Peer. If not specified, it is disabled by default.
	EnableIpv6 pulumi.BoolPtrOutput `pulumi:"enableIpv6"`
	// routers.list of export policies applied to this peer, in the order they must be evaluated.
	// The name must correspond to an existing policy that has ROUTE_POLICY_TYPE_EXPORT type.
	ExportPolicies pulumi.StringArrayOutput `pulumi:"exportPolicies"`
	// routers.list of import policies applied to this peer, in the order they must be evaluated.
	// The name must correspond to an existing policy that has ROUTE_POLICY_TYPE_IMPORT type.
	ImportPolicies pulumi.StringArrayOutput `pulumi:"importPolicies"`
	// Name of the interface the BGP peer is associated with.
	Interface pulumi.StringOutput `pulumi:"interface"`
	// IP address of the interface inside Google Cloud Platform.
	// Only IPv4 is supported.
	IpAddress pulumi.StringOutput `pulumi:"ipAddress"`
	// IPv4 address of the interface inside Google Cloud Platform.
	Ipv4NexthopAddress pulumi.StringOutput `pulumi:"ipv4NexthopAddress"`
	// IPv6 address of the interface inside Google Cloud Platform.
	// The address must be in the range 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64.
	// If you do not specify the next hop addresses, Google Cloud automatically
	// assigns unused addresses from the 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64 range for you.
	Ipv6NexthopAddress pulumi.StringOutput `pulumi:"ipv6NexthopAddress"`
	// The resource that configures and manages this BGP peer.
	// * `MANAGED_BY_USER` is the default value and can be managed by
	//   you or other users
	// * `MANAGED_BY_ATTACHMENT` is a BGP peer that is configured and
	//   managed by Cloud Interconnect, specifically by an
	//   InterconnectAttachment of type PARTNER. Google automatically
	//   creates, updates, and deletes this type of BGP peer when the
	//   PARTNER InterconnectAttachment is created, updated,
	//   or deleted.
	ManagementType pulumi.StringOutput `pulumi:"managementType"`
	// Configuration for MD5 authentication on the BGP session.
	// Structure is documented below.
	Md5AuthenticationKey RouterPeerMd5AuthenticationKeyPtrOutput `pulumi:"md5AuthenticationKey"`
	// Name of this BGP peer. The name must be 1-63 characters long,
	// and comply with RFC1035. Specifically, the name must be 1-63 characters
	// long and match the regular expression `a-z?` which
	// means the first character must be a lowercase letter, and all
	// following characters must be a dash, lowercase letter, or digit,
	// except the last character, which cannot be a dash.
	Name pulumi.StringOutput `pulumi:"name"`
	// Peer BGP Autonomous System Number (ASN).
	// Each BGP interface may use a different value.
	PeerAsn pulumi.IntOutput `pulumi:"peerAsn"`
	// IP address of the BGP interface outside Google Cloud Platform.
	// Only IPv4 is supported. Required if `ipAddress` is set.
	PeerIpAddress pulumi.StringOutput `pulumi:"peerIpAddress"`
	// IPv4 address of the BGP interface outside Google Cloud Platform.
	PeerIpv4NexthopAddress pulumi.StringOutput `pulumi:"peerIpv4NexthopAddress"`
	// IPv6 address of the BGP interface outside Google Cloud Platform.
	// The address must be in the range 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64.
	// If you do not specify the next hop addresses, Google Cloud automatically
	// assigns unused addresses from the 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64 range for you.
	PeerIpv6NexthopAddress pulumi.StringOutput `pulumi:"peerIpv6NexthopAddress"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
	// Region where the router and BgpPeer reside.
	// If it is not provided, the provider region is used.
	Region pulumi.StringOutput `pulumi:"region"`
	// The name of the Cloud Router in which this BgpPeer will be configured.
	//
	// ***
	Router pulumi.StringOutput `pulumi:"router"`
	// The URI of the VM instance that is used as third-party router appliances
	// such as Next Gen Firewalls, Virtual Routers, or Router Appliances.
	// The VM instance must be located in zones contained in the same region as
	// this Cloud Router. The VM instance is the peer side of the BGP session.
	RouterApplianceInstance pulumi.StringPtrOutput `pulumi:"routerApplianceInstance"`
}

// NewRouterPeer registers a new resource with the given unique name, arguments, and options.
func NewRouterPeer(ctx *pulumi.Context,
	name string, args *RouterPeerArgs, opts ...pulumi.ResourceOption) (*RouterPeer, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Interface == nil {
		return nil, errors.New("invalid value for required argument 'Interface'")
	}
	if args.PeerAsn == nil {
		return nil, errors.New("invalid value for required argument 'PeerAsn'")
	}
	if args.Router == nil {
		return nil, errors.New("invalid value for required argument 'Router'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RouterPeer
	err := ctx.RegisterResource("gcp:compute/routerPeer:RouterPeer", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRouterPeer gets an existing RouterPeer resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRouterPeer(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RouterPeerState, opts ...pulumi.ResourceOption) (*RouterPeer, error) {
	var resource RouterPeer
	err := ctx.ReadResource("gcp:compute/routerPeer:RouterPeer", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RouterPeer resources.
type routerPeerState struct {
	// User-specified flag to indicate which mode to use for advertisement.
	// Valid values of this enum field are: `DEFAULT`, `CUSTOM`
	// Default value is `DEFAULT`.
	// Possible values are: `DEFAULT`, `CUSTOM`.
	AdvertiseMode *string `pulumi:"advertiseMode"`
	// User-specified list of prefix groups to advertise in custom
	// mode, which currently supports the following option:
	// * `ALL_SUBNETS`: Advertises all of the router's own VPC subnets.
	//   This excludes any routes learned for subnets that use VPC Network
	//   Peering.
	//
	// Note that this field can only be populated if advertiseMode is `CUSTOM`
	// and overrides the list defined for the router (in the "bgp" message).
	// These groups are advertised in addition to any specified prefixes.
	// Leave this field blank to advertise no custom groups.
	AdvertisedGroups []string `pulumi:"advertisedGroups"`
	// User-specified list of individual IP ranges to advertise in
	// custom mode. This field can only be populated if advertiseMode
	// is `CUSTOM` and is advertised to all peers of the router. These IP
	// ranges will be advertised in addition to any specified groups.
	// Leave this field blank to advertise no custom IP ranges.
	// Structure is documented below.
	AdvertisedIpRanges []RouterPeerAdvertisedIpRange `pulumi:"advertisedIpRanges"`
	// The priority of routes advertised to this BGP peer.
	// Where there is more than one matching route of maximum
	// length, the routes with the lowest priority value win.
	AdvertisedRoutePriority *int `pulumi:"advertisedRoutePriority"`
	// BFD configuration for the BGP peering.
	// Structure is documented below.
	Bfd *RouterPeerBfd `pulumi:"bfd"`
	// The custom learned route IP address range. Must be a valid CIDR-formatted prefix.
	// If an IP address is provided without a subnet mask, it is interpreted as, for IPv4,
	// a /32 singular IP address range, and, for IPv6, /128.
	// Structure is documented below.
	CustomLearnedIpRanges []RouterPeerCustomLearnedIpRange `pulumi:"customLearnedIpRanges"`
	// The user-defined custom learned route priority for a BGP session.
	// This value is applied to all custom learned route ranges for the session.
	// You can choose a value from 0 to 65335. If you don't provide a value,
	// Google Cloud assigns a priority of 100 to the ranges.
	CustomLearnedRoutePriority *int `pulumi:"customLearnedRoutePriority"`
	// The status of the BGP peer connection. If set to false, any active session
	// with the peer is terminated and all associated routing information is removed.
	// If set to true, the peer connection can be established with routing information.
	// The default is true.
	Enable *bool `pulumi:"enable"`
	// Enable IPv4 traffic over BGP Peer. It is enabled by default if the peerIpAddress is version 4.
	EnableIpv4 *bool `pulumi:"enableIpv4"`
	// Enable IPv6 traffic over BGP Peer. If not specified, it is disabled by default.
	EnableIpv6 *bool `pulumi:"enableIpv6"`
	// routers.list of export policies applied to this peer, in the order they must be evaluated.
	// The name must correspond to an existing policy that has ROUTE_POLICY_TYPE_EXPORT type.
	ExportPolicies []string `pulumi:"exportPolicies"`
	// routers.list of import policies applied to this peer, in the order they must be evaluated.
	// The name must correspond to an existing policy that has ROUTE_POLICY_TYPE_IMPORT type.
	ImportPolicies []string `pulumi:"importPolicies"`
	// Name of the interface the BGP peer is associated with.
	Interface *string `pulumi:"interface"`
	// IP address of the interface inside Google Cloud Platform.
	// Only IPv4 is supported.
	IpAddress *string `pulumi:"ipAddress"`
	// IPv4 address of the interface inside Google Cloud Platform.
	Ipv4NexthopAddress *string `pulumi:"ipv4NexthopAddress"`
	// IPv6 address of the interface inside Google Cloud Platform.
	// The address must be in the range 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64.
	// If you do not specify the next hop addresses, Google Cloud automatically
	// assigns unused addresses from the 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64 range for you.
	Ipv6NexthopAddress *string `pulumi:"ipv6NexthopAddress"`
	// The resource that configures and manages this BGP peer.
	// * `MANAGED_BY_USER` is the default value and can be managed by
	//   you or other users
	// * `MANAGED_BY_ATTACHMENT` is a BGP peer that is configured and
	//   managed by Cloud Interconnect, specifically by an
	//   InterconnectAttachment of type PARTNER. Google automatically
	//   creates, updates, and deletes this type of BGP peer when the
	//   PARTNER InterconnectAttachment is created, updated,
	//   or deleted.
	ManagementType *string `pulumi:"managementType"`
	// Configuration for MD5 authentication on the BGP session.
	// Structure is documented below.
	Md5AuthenticationKey *RouterPeerMd5AuthenticationKey `pulumi:"md5AuthenticationKey"`
	// Name of this BGP peer. The name must be 1-63 characters long,
	// and comply with RFC1035. Specifically, the name must be 1-63 characters
	// long and match the regular expression `a-z?` which
	// means the first character must be a lowercase letter, and all
	// following characters must be a dash, lowercase letter, or digit,
	// except the last character, which cannot be a dash.
	Name *string `pulumi:"name"`
	// Peer BGP Autonomous System Number (ASN).
	// Each BGP interface may use a different value.
	PeerAsn *int `pulumi:"peerAsn"`
	// IP address of the BGP interface outside Google Cloud Platform.
	// Only IPv4 is supported. Required if `ipAddress` is set.
	PeerIpAddress *string `pulumi:"peerIpAddress"`
	// IPv4 address of the BGP interface outside Google Cloud Platform.
	PeerIpv4NexthopAddress *string `pulumi:"peerIpv4NexthopAddress"`
	// IPv6 address of the BGP interface outside Google Cloud Platform.
	// The address must be in the range 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64.
	// If you do not specify the next hop addresses, Google Cloud automatically
	// assigns unused addresses from the 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64 range for you.
	PeerIpv6NexthopAddress *string `pulumi:"peerIpv6NexthopAddress"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// Region where the router and BgpPeer reside.
	// If it is not provided, the provider region is used.
	Region *string `pulumi:"region"`
	// The name of the Cloud Router in which this BgpPeer will be configured.
	//
	// ***
	Router *string `pulumi:"router"`
	// The URI of the VM instance that is used as third-party router appliances
	// such as Next Gen Firewalls, Virtual Routers, or Router Appliances.
	// The VM instance must be located in zones contained in the same region as
	// this Cloud Router. The VM instance is the peer side of the BGP session.
	RouterApplianceInstance *string `pulumi:"routerApplianceInstance"`
}

type RouterPeerState struct {
	// User-specified flag to indicate which mode to use for advertisement.
	// Valid values of this enum field are: `DEFAULT`, `CUSTOM`
	// Default value is `DEFAULT`.
	// Possible values are: `DEFAULT`, `CUSTOM`.
	AdvertiseMode pulumi.StringPtrInput
	// User-specified list of prefix groups to advertise in custom
	// mode, which currently supports the following option:
	// * `ALL_SUBNETS`: Advertises all of the router's own VPC subnets.
	//   This excludes any routes learned for subnets that use VPC Network
	//   Peering.
	//
	// Note that this field can only be populated if advertiseMode is `CUSTOM`
	// and overrides the list defined for the router (in the "bgp" message).
	// These groups are advertised in addition to any specified prefixes.
	// Leave this field blank to advertise no custom groups.
	AdvertisedGroups pulumi.StringArrayInput
	// User-specified list of individual IP ranges to advertise in
	// custom mode. This field can only be populated if advertiseMode
	// is `CUSTOM` and is advertised to all peers of the router. These IP
	// ranges will be advertised in addition to any specified groups.
	// Leave this field blank to advertise no custom IP ranges.
	// Structure is documented below.
	AdvertisedIpRanges RouterPeerAdvertisedIpRangeArrayInput
	// The priority of routes advertised to this BGP peer.
	// Where there is more than one matching route of maximum
	// length, the routes with the lowest priority value win.
	AdvertisedRoutePriority pulumi.IntPtrInput
	// BFD configuration for the BGP peering.
	// Structure is documented below.
	Bfd RouterPeerBfdPtrInput
	// The custom learned route IP address range. Must be a valid CIDR-formatted prefix.
	// If an IP address is provided without a subnet mask, it is interpreted as, for IPv4,
	// a /32 singular IP address range, and, for IPv6, /128.
	// Structure is documented below.
	CustomLearnedIpRanges RouterPeerCustomLearnedIpRangeArrayInput
	// The user-defined custom learned route priority for a BGP session.
	// This value is applied to all custom learned route ranges for the session.
	// You can choose a value from 0 to 65335. If you don't provide a value,
	// Google Cloud assigns a priority of 100 to the ranges.
	CustomLearnedRoutePriority pulumi.IntPtrInput
	// The status of the BGP peer connection. If set to false, any active session
	// with the peer is terminated and all associated routing information is removed.
	// If set to true, the peer connection can be established with routing information.
	// The default is true.
	Enable pulumi.BoolPtrInput
	// Enable IPv4 traffic over BGP Peer. It is enabled by default if the peerIpAddress is version 4.
	EnableIpv4 pulumi.BoolPtrInput
	// Enable IPv6 traffic over BGP Peer. If not specified, it is disabled by default.
	EnableIpv6 pulumi.BoolPtrInput
	// routers.list of export policies applied to this peer, in the order they must be evaluated.
	// The name must correspond to an existing policy that has ROUTE_POLICY_TYPE_EXPORT type.
	ExportPolicies pulumi.StringArrayInput
	// routers.list of import policies applied to this peer, in the order they must be evaluated.
	// The name must correspond to an existing policy that has ROUTE_POLICY_TYPE_IMPORT type.
	ImportPolicies pulumi.StringArrayInput
	// Name of the interface the BGP peer is associated with.
	Interface pulumi.StringPtrInput
	// IP address of the interface inside Google Cloud Platform.
	// Only IPv4 is supported.
	IpAddress pulumi.StringPtrInput
	// IPv4 address of the interface inside Google Cloud Platform.
	Ipv4NexthopAddress pulumi.StringPtrInput
	// IPv6 address of the interface inside Google Cloud Platform.
	// The address must be in the range 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64.
	// If you do not specify the next hop addresses, Google Cloud automatically
	// assigns unused addresses from the 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64 range for you.
	Ipv6NexthopAddress pulumi.StringPtrInput
	// The resource that configures and manages this BGP peer.
	// * `MANAGED_BY_USER` is the default value and can be managed by
	//   you or other users
	// * `MANAGED_BY_ATTACHMENT` is a BGP peer that is configured and
	//   managed by Cloud Interconnect, specifically by an
	//   InterconnectAttachment of type PARTNER. Google automatically
	//   creates, updates, and deletes this type of BGP peer when the
	//   PARTNER InterconnectAttachment is created, updated,
	//   or deleted.
	ManagementType pulumi.StringPtrInput
	// Configuration for MD5 authentication on the BGP session.
	// Structure is documented below.
	Md5AuthenticationKey RouterPeerMd5AuthenticationKeyPtrInput
	// Name of this BGP peer. The name must be 1-63 characters long,
	// and comply with RFC1035. Specifically, the name must be 1-63 characters
	// long and match the regular expression `a-z?` which
	// means the first character must be a lowercase letter, and all
	// following characters must be a dash, lowercase letter, or digit,
	// except the last character, which cannot be a dash.
	Name pulumi.StringPtrInput
	// Peer BGP Autonomous System Number (ASN).
	// Each BGP interface may use a different value.
	PeerAsn pulumi.IntPtrInput
	// IP address of the BGP interface outside Google Cloud Platform.
	// Only IPv4 is supported. Required if `ipAddress` is set.
	PeerIpAddress pulumi.StringPtrInput
	// IPv4 address of the BGP interface outside Google Cloud Platform.
	PeerIpv4NexthopAddress pulumi.StringPtrInput
	// IPv6 address of the BGP interface outside Google Cloud Platform.
	// The address must be in the range 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64.
	// If you do not specify the next hop addresses, Google Cloud automatically
	// assigns unused addresses from the 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64 range for you.
	PeerIpv6NexthopAddress pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// Region where the router and BgpPeer reside.
	// If it is not provided, the provider region is used.
	Region pulumi.StringPtrInput
	// The name of the Cloud Router in which this BgpPeer will be configured.
	//
	// ***
	Router pulumi.StringPtrInput
	// The URI of the VM instance that is used as third-party router appliances
	// such as Next Gen Firewalls, Virtual Routers, or Router Appliances.
	// The VM instance must be located in zones contained in the same region as
	// this Cloud Router. The VM instance is the peer side of the BGP session.
	RouterApplianceInstance pulumi.StringPtrInput
}

func (RouterPeerState) ElementType() reflect.Type {
	return reflect.TypeOf((*routerPeerState)(nil)).Elem()
}

type routerPeerArgs struct {
	// User-specified flag to indicate which mode to use for advertisement.
	// Valid values of this enum field are: `DEFAULT`, `CUSTOM`
	// Default value is `DEFAULT`.
	// Possible values are: `DEFAULT`, `CUSTOM`.
	AdvertiseMode *string `pulumi:"advertiseMode"`
	// User-specified list of prefix groups to advertise in custom
	// mode, which currently supports the following option:
	// * `ALL_SUBNETS`: Advertises all of the router's own VPC subnets.
	//   This excludes any routes learned for subnets that use VPC Network
	//   Peering.
	//
	// Note that this field can only be populated if advertiseMode is `CUSTOM`
	// and overrides the list defined for the router (in the "bgp" message).
	// These groups are advertised in addition to any specified prefixes.
	// Leave this field blank to advertise no custom groups.
	AdvertisedGroups []string `pulumi:"advertisedGroups"`
	// User-specified list of individual IP ranges to advertise in
	// custom mode. This field can only be populated if advertiseMode
	// is `CUSTOM` and is advertised to all peers of the router. These IP
	// ranges will be advertised in addition to any specified groups.
	// Leave this field blank to advertise no custom IP ranges.
	// Structure is documented below.
	AdvertisedIpRanges []RouterPeerAdvertisedIpRange `pulumi:"advertisedIpRanges"`
	// The priority of routes advertised to this BGP peer.
	// Where there is more than one matching route of maximum
	// length, the routes with the lowest priority value win.
	AdvertisedRoutePriority *int `pulumi:"advertisedRoutePriority"`
	// BFD configuration for the BGP peering.
	// Structure is documented below.
	Bfd *RouterPeerBfd `pulumi:"bfd"`
	// The custom learned route IP address range. Must be a valid CIDR-formatted prefix.
	// If an IP address is provided without a subnet mask, it is interpreted as, for IPv4,
	// a /32 singular IP address range, and, for IPv6, /128.
	// Structure is documented below.
	CustomLearnedIpRanges []RouterPeerCustomLearnedIpRange `pulumi:"customLearnedIpRanges"`
	// The user-defined custom learned route priority for a BGP session.
	// This value is applied to all custom learned route ranges for the session.
	// You can choose a value from 0 to 65335. If you don't provide a value,
	// Google Cloud assigns a priority of 100 to the ranges.
	CustomLearnedRoutePriority *int `pulumi:"customLearnedRoutePriority"`
	// The status of the BGP peer connection. If set to false, any active session
	// with the peer is terminated and all associated routing information is removed.
	// If set to true, the peer connection can be established with routing information.
	// The default is true.
	Enable *bool `pulumi:"enable"`
	// Enable IPv4 traffic over BGP Peer. It is enabled by default if the peerIpAddress is version 4.
	EnableIpv4 *bool `pulumi:"enableIpv4"`
	// Enable IPv6 traffic over BGP Peer. If not specified, it is disabled by default.
	EnableIpv6 *bool `pulumi:"enableIpv6"`
	// routers.list of export policies applied to this peer, in the order they must be evaluated.
	// The name must correspond to an existing policy that has ROUTE_POLICY_TYPE_EXPORT type.
	ExportPolicies []string `pulumi:"exportPolicies"`
	// routers.list of import policies applied to this peer, in the order they must be evaluated.
	// The name must correspond to an existing policy that has ROUTE_POLICY_TYPE_IMPORT type.
	ImportPolicies []string `pulumi:"importPolicies"`
	// Name of the interface the BGP peer is associated with.
	Interface string `pulumi:"interface"`
	// IP address of the interface inside Google Cloud Platform.
	// Only IPv4 is supported.
	IpAddress *string `pulumi:"ipAddress"`
	// IPv4 address of the interface inside Google Cloud Platform.
	Ipv4NexthopAddress *string `pulumi:"ipv4NexthopAddress"`
	// IPv6 address of the interface inside Google Cloud Platform.
	// The address must be in the range 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64.
	// If you do not specify the next hop addresses, Google Cloud automatically
	// assigns unused addresses from the 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64 range for you.
	Ipv6NexthopAddress *string `pulumi:"ipv6NexthopAddress"`
	// Configuration for MD5 authentication on the BGP session.
	// Structure is documented below.
	Md5AuthenticationKey *RouterPeerMd5AuthenticationKey `pulumi:"md5AuthenticationKey"`
	// Name of this BGP peer. The name must be 1-63 characters long,
	// and comply with RFC1035. Specifically, the name must be 1-63 characters
	// long and match the regular expression `a-z?` which
	// means the first character must be a lowercase letter, and all
	// following characters must be a dash, lowercase letter, or digit,
	// except the last character, which cannot be a dash.
	Name *string `pulumi:"name"`
	// Peer BGP Autonomous System Number (ASN).
	// Each BGP interface may use a different value.
	PeerAsn int `pulumi:"peerAsn"`
	// IP address of the BGP interface outside Google Cloud Platform.
	// Only IPv4 is supported. Required if `ipAddress` is set.
	PeerIpAddress *string `pulumi:"peerIpAddress"`
	// IPv4 address of the BGP interface outside Google Cloud Platform.
	PeerIpv4NexthopAddress *string `pulumi:"peerIpv4NexthopAddress"`
	// IPv6 address of the BGP interface outside Google Cloud Platform.
	// The address must be in the range 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64.
	// If you do not specify the next hop addresses, Google Cloud automatically
	// assigns unused addresses from the 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64 range for you.
	PeerIpv6NexthopAddress *string `pulumi:"peerIpv6NexthopAddress"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// Region where the router and BgpPeer reside.
	// If it is not provided, the provider region is used.
	Region *string `pulumi:"region"`
	// The name of the Cloud Router in which this BgpPeer will be configured.
	//
	// ***
	Router string `pulumi:"router"`
	// The URI of the VM instance that is used as third-party router appliances
	// such as Next Gen Firewalls, Virtual Routers, or Router Appliances.
	// The VM instance must be located in zones contained in the same region as
	// this Cloud Router. The VM instance is the peer side of the BGP session.
	RouterApplianceInstance *string `pulumi:"routerApplianceInstance"`
}

// The set of arguments for constructing a RouterPeer resource.
type RouterPeerArgs struct {
	// User-specified flag to indicate which mode to use for advertisement.
	// Valid values of this enum field are: `DEFAULT`, `CUSTOM`
	// Default value is `DEFAULT`.
	// Possible values are: `DEFAULT`, `CUSTOM`.
	AdvertiseMode pulumi.StringPtrInput
	// User-specified list of prefix groups to advertise in custom
	// mode, which currently supports the following option:
	// * `ALL_SUBNETS`: Advertises all of the router's own VPC subnets.
	//   This excludes any routes learned for subnets that use VPC Network
	//   Peering.
	//
	// Note that this field can only be populated if advertiseMode is `CUSTOM`
	// and overrides the list defined for the router (in the "bgp" message).
	// These groups are advertised in addition to any specified prefixes.
	// Leave this field blank to advertise no custom groups.
	AdvertisedGroups pulumi.StringArrayInput
	// User-specified list of individual IP ranges to advertise in
	// custom mode. This field can only be populated if advertiseMode
	// is `CUSTOM` and is advertised to all peers of the router. These IP
	// ranges will be advertised in addition to any specified groups.
	// Leave this field blank to advertise no custom IP ranges.
	// Structure is documented below.
	AdvertisedIpRanges RouterPeerAdvertisedIpRangeArrayInput
	// The priority of routes advertised to this BGP peer.
	// Where there is more than one matching route of maximum
	// length, the routes with the lowest priority value win.
	AdvertisedRoutePriority pulumi.IntPtrInput
	// BFD configuration for the BGP peering.
	// Structure is documented below.
	Bfd RouterPeerBfdPtrInput
	// The custom learned route IP address range. Must be a valid CIDR-formatted prefix.
	// If an IP address is provided without a subnet mask, it is interpreted as, for IPv4,
	// a /32 singular IP address range, and, for IPv6, /128.
	// Structure is documented below.
	CustomLearnedIpRanges RouterPeerCustomLearnedIpRangeArrayInput
	// The user-defined custom learned route priority for a BGP session.
	// This value is applied to all custom learned route ranges for the session.
	// You can choose a value from 0 to 65335. If you don't provide a value,
	// Google Cloud assigns a priority of 100 to the ranges.
	CustomLearnedRoutePriority pulumi.IntPtrInput
	// The status of the BGP peer connection. If set to false, any active session
	// with the peer is terminated and all associated routing information is removed.
	// If set to true, the peer connection can be established with routing information.
	// The default is true.
	Enable pulumi.BoolPtrInput
	// Enable IPv4 traffic over BGP Peer. It is enabled by default if the peerIpAddress is version 4.
	EnableIpv4 pulumi.BoolPtrInput
	// Enable IPv6 traffic over BGP Peer. If not specified, it is disabled by default.
	EnableIpv6 pulumi.BoolPtrInput
	// routers.list of export policies applied to this peer, in the order they must be evaluated.
	// The name must correspond to an existing policy that has ROUTE_POLICY_TYPE_EXPORT type.
	ExportPolicies pulumi.StringArrayInput
	// routers.list of import policies applied to this peer, in the order they must be evaluated.
	// The name must correspond to an existing policy that has ROUTE_POLICY_TYPE_IMPORT type.
	ImportPolicies pulumi.StringArrayInput
	// Name of the interface the BGP peer is associated with.
	Interface pulumi.StringInput
	// IP address of the interface inside Google Cloud Platform.
	// Only IPv4 is supported.
	IpAddress pulumi.StringPtrInput
	// IPv4 address of the interface inside Google Cloud Platform.
	Ipv4NexthopAddress pulumi.StringPtrInput
	// IPv6 address of the interface inside Google Cloud Platform.
	// The address must be in the range 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64.
	// If you do not specify the next hop addresses, Google Cloud automatically
	// assigns unused addresses from the 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64 range for you.
	Ipv6NexthopAddress pulumi.StringPtrInput
	// Configuration for MD5 authentication on the BGP session.
	// Structure is documented below.
	Md5AuthenticationKey RouterPeerMd5AuthenticationKeyPtrInput
	// Name of this BGP peer. The name must be 1-63 characters long,
	// and comply with RFC1035. Specifically, the name must be 1-63 characters
	// long and match the regular expression `a-z?` which
	// means the first character must be a lowercase letter, and all
	// following characters must be a dash, lowercase letter, or digit,
	// except the last character, which cannot be a dash.
	Name pulumi.StringPtrInput
	// Peer BGP Autonomous System Number (ASN).
	// Each BGP interface may use a different value.
	PeerAsn pulumi.IntInput
	// IP address of the BGP interface outside Google Cloud Platform.
	// Only IPv4 is supported. Required if `ipAddress` is set.
	PeerIpAddress pulumi.StringPtrInput
	// IPv4 address of the BGP interface outside Google Cloud Platform.
	PeerIpv4NexthopAddress pulumi.StringPtrInput
	// IPv6 address of the BGP interface outside Google Cloud Platform.
	// The address must be in the range 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64.
	// If you do not specify the next hop addresses, Google Cloud automatically
	// assigns unused addresses from the 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64 range for you.
	PeerIpv6NexthopAddress pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// Region where the router and BgpPeer reside.
	// If it is not provided, the provider region is used.
	Region pulumi.StringPtrInput
	// The name of the Cloud Router in which this BgpPeer will be configured.
	//
	// ***
	Router pulumi.StringInput
	// The URI of the VM instance that is used as third-party router appliances
	// such as Next Gen Firewalls, Virtual Routers, or Router Appliances.
	// The VM instance must be located in zones contained in the same region as
	// this Cloud Router. The VM instance is the peer side of the BGP session.
	RouterApplianceInstance pulumi.StringPtrInput
}

func (RouterPeerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*routerPeerArgs)(nil)).Elem()
}

type RouterPeerInput interface {
	pulumi.Input

	ToRouterPeerOutput() RouterPeerOutput
	ToRouterPeerOutputWithContext(ctx context.Context) RouterPeerOutput
}

func (*RouterPeer) ElementType() reflect.Type {
	return reflect.TypeOf((**RouterPeer)(nil)).Elem()
}

func (i *RouterPeer) ToRouterPeerOutput() RouterPeerOutput {
	return i.ToRouterPeerOutputWithContext(context.Background())
}

func (i *RouterPeer) ToRouterPeerOutputWithContext(ctx context.Context) RouterPeerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterPeerOutput)
}

// RouterPeerArrayInput is an input type that accepts RouterPeerArray and RouterPeerArrayOutput values.
// You can construct a concrete instance of `RouterPeerArrayInput` via:
//
//	RouterPeerArray{ RouterPeerArgs{...} }
type RouterPeerArrayInput interface {
	pulumi.Input

	ToRouterPeerArrayOutput() RouterPeerArrayOutput
	ToRouterPeerArrayOutputWithContext(context.Context) RouterPeerArrayOutput
}

type RouterPeerArray []RouterPeerInput

func (RouterPeerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RouterPeer)(nil)).Elem()
}

func (i RouterPeerArray) ToRouterPeerArrayOutput() RouterPeerArrayOutput {
	return i.ToRouterPeerArrayOutputWithContext(context.Background())
}

func (i RouterPeerArray) ToRouterPeerArrayOutputWithContext(ctx context.Context) RouterPeerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterPeerArrayOutput)
}

// RouterPeerMapInput is an input type that accepts RouterPeerMap and RouterPeerMapOutput values.
// You can construct a concrete instance of `RouterPeerMapInput` via:
//
//	RouterPeerMap{ "key": RouterPeerArgs{...} }
type RouterPeerMapInput interface {
	pulumi.Input

	ToRouterPeerMapOutput() RouterPeerMapOutput
	ToRouterPeerMapOutputWithContext(context.Context) RouterPeerMapOutput
}

type RouterPeerMap map[string]RouterPeerInput

func (RouterPeerMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RouterPeer)(nil)).Elem()
}

func (i RouterPeerMap) ToRouterPeerMapOutput() RouterPeerMapOutput {
	return i.ToRouterPeerMapOutputWithContext(context.Background())
}

func (i RouterPeerMap) ToRouterPeerMapOutputWithContext(ctx context.Context) RouterPeerMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterPeerMapOutput)
}

type RouterPeerOutput struct{ *pulumi.OutputState }

func (RouterPeerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouterPeer)(nil)).Elem()
}

func (o RouterPeerOutput) ToRouterPeerOutput() RouterPeerOutput {
	return o
}

func (o RouterPeerOutput) ToRouterPeerOutputWithContext(ctx context.Context) RouterPeerOutput {
	return o
}

// User-specified flag to indicate which mode to use for advertisement.
// Valid values of this enum field are: `DEFAULT`, `CUSTOM`
// Default value is `DEFAULT`.
// Possible values are: `DEFAULT`, `CUSTOM`.
func (o RouterPeerOutput) AdvertiseMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouterPeer) pulumi.StringPtrOutput { return v.AdvertiseMode }).(pulumi.StringPtrOutput)
}

// User-specified list of prefix groups to advertise in custom
// mode, which currently supports the following option:
//   - `ALL_SUBNETS`: Advertises all of the router's own VPC subnets.
//     This excludes any routes learned for subnets that use VPC Network
//     Peering.
//
// Note that this field can only be populated if advertiseMode is `CUSTOM`
// and overrides the list defined for the router (in the "bgp" message).
// These groups are advertised in addition to any specified prefixes.
// Leave this field blank to advertise no custom groups.
func (o RouterPeerOutput) AdvertisedGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RouterPeer) pulumi.StringArrayOutput { return v.AdvertisedGroups }).(pulumi.StringArrayOutput)
}

// User-specified list of individual IP ranges to advertise in
// custom mode. This field can only be populated if advertiseMode
// is `CUSTOM` and is advertised to all peers of the router. These IP
// ranges will be advertised in addition to any specified groups.
// Leave this field blank to advertise no custom IP ranges.
// Structure is documented below.
func (o RouterPeerOutput) AdvertisedIpRanges() RouterPeerAdvertisedIpRangeArrayOutput {
	return o.ApplyT(func(v *RouterPeer) RouterPeerAdvertisedIpRangeArrayOutput { return v.AdvertisedIpRanges }).(RouterPeerAdvertisedIpRangeArrayOutput)
}

// The priority of routes advertised to this BGP peer.
// Where there is more than one matching route of maximum
// length, the routes with the lowest priority value win.
func (o RouterPeerOutput) AdvertisedRoutePriority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RouterPeer) pulumi.IntPtrOutput { return v.AdvertisedRoutePriority }).(pulumi.IntPtrOutput)
}

// BFD configuration for the BGP peering.
// Structure is documented below.
func (o RouterPeerOutput) Bfd() RouterPeerBfdOutput {
	return o.ApplyT(func(v *RouterPeer) RouterPeerBfdOutput { return v.Bfd }).(RouterPeerBfdOutput)
}

// The custom learned route IP address range. Must be a valid CIDR-formatted prefix.
// If an IP address is provided without a subnet mask, it is interpreted as, for IPv4,
// a /32 singular IP address range, and, for IPv6, /128.
// Structure is documented below.
func (o RouterPeerOutput) CustomLearnedIpRanges() RouterPeerCustomLearnedIpRangeArrayOutput {
	return o.ApplyT(func(v *RouterPeer) RouterPeerCustomLearnedIpRangeArrayOutput { return v.CustomLearnedIpRanges }).(RouterPeerCustomLearnedIpRangeArrayOutput)
}

// The user-defined custom learned route priority for a BGP session.
// This value is applied to all custom learned route ranges for the session.
// You can choose a value from 0 to 65335. If you don't provide a value,
// Google Cloud assigns a priority of 100 to the ranges.
func (o RouterPeerOutput) CustomLearnedRoutePriority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RouterPeer) pulumi.IntPtrOutput { return v.CustomLearnedRoutePriority }).(pulumi.IntPtrOutput)
}

// The status of the BGP peer connection. If set to false, any active session
// with the peer is terminated and all associated routing information is removed.
// If set to true, the peer connection can be established with routing information.
// The default is true.
func (o RouterPeerOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RouterPeer) pulumi.BoolPtrOutput { return v.Enable }).(pulumi.BoolPtrOutput)
}

// Enable IPv4 traffic over BGP Peer. It is enabled by default if the peerIpAddress is version 4.
func (o RouterPeerOutput) EnableIpv4() pulumi.BoolOutput {
	return o.ApplyT(func(v *RouterPeer) pulumi.BoolOutput { return v.EnableIpv4 }).(pulumi.BoolOutput)
}

// Enable IPv6 traffic over BGP Peer. If not specified, it is disabled by default.
func (o RouterPeerOutput) EnableIpv6() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RouterPeer) pulumi.BoolPtrOutput { return v.EnableIpv6 }).(pulumi.BoolPtrOutput)
}

// routers.list of export policies applied to this peer, in the order they must be evaluated.
// The name must correspond to an existing policy that has ROUTE_POLICY_TYPE_EXPORT type.
func (o RouterPeerOutput) ExportPolicies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RouterPeer) pulumi.StringArrayOutput { return v.ExportPolicies }).(pulumi.StringArrayOutput)
}

// routers.list of import policies applied to this peer, in the order they must be evaluated.
// The name must correspond to an existing policy that has ROUTE_POLICY_TYPE_IMPORT type.
func (o RouterPeerOutput) ImportPolicies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RouterPeer) pulumi.StringArrayOutput { return v.ImportPolicies }).(pulumi.StringArrayOutput)
}

// Name of the interface the BGP peer is associated with.
func (o RouterPeerOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v *RouterPeer) pulumi.StringOutput { return v.Interface }).(pulumi.StringOutput)
}

// IP address of the interface inside Google Cloud Platform.
// Only IPv4 is supported.
func (o RouterPeerOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *RouterPeer) pulumi.StringOutput { return v.IpAddress }).(pulumi.StringOutput)
}

// IPv4 address of the interface inside Google Cloud Platform.
func (o RouterPeerOutput) Ipv4NexthopAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *RouterPeer) pulumi.StringOutput { return v.Ipv4NexthopAddress }).(pulumi.StringOutput)
}

// IPv6 address of the interface inside Google Cloud Platform.
// The address must be in the range 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64.
// If you do not specify the next hop addresses, Google Cloud automatically
// assigns unused addresses from the 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64 range for you.
func (o RouterPeerOutput) Ipv6NexthopAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *RouterPeer) pulumi.StringOutput { return v.Ipv6NexthopAddress }).(pulumi.StringOutput)
}

// The resource that configures and manages this BGP peer.
//   - `MANAGED_BY_USER` is the default value and can be managed by
//     you or other users
//   - `MANAGED_BY_ATTACHMENT` is a BGP peer that is configured and
//     managed by Cloud Interconnect, specifically by an
//     InterconnectAttachment of type PARTNER. Google automatically
//     creates, updates, and deletes this type of BGP peer when the
//     PARTNER InterconnectAttachment is created, updated,
//     or deleted.
func (o RouterPeerOutput) ManagementType() pulumi.StringOutput {
	return o.ApplyT(func(v *RouterPeer) pulumi.StringOutput { return v.ManagementType }).(pulumi.StringOutput)
}

// Configuration for MD5 authentication on the BGP session.
// Structure is documented below.
func (o RouterPeerOutput) Md5AuthenticationKey() RouterPeerMd5AuthenticationKeyPtrOutput {
	return o.ApplyT(func(v *RouterPeer) RouterPeerMd5AuthenticationKeyPtrOutput { return v.Md5AuthenticationKey }).(RouterPeerMd5AuthenticationKeyPtrOutput)
}

// Name of this BGP peer. The name must be 1-63 characters long,
// and comply with RFC1035. Specifically, the name must be 1-63 characters
// long and match the regular expression `a-z?` which
// means the first character must be a lowercase letter, and all
// following characters must be a dash, lowercase letter, or digit,
// except the last character, which cannot be a dash.
func (o RouterPeerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *RouterPeer) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Peer BGP Autonomous System Number (ASN).
// Each BGP interface may use a different value.
func (o RouterPeerOutput) PeerAsn() pulumi.IntOutput {
	return o.ApplyT(func(v *RouterPeer) pulumi.IntOutput { return v.PeerAsn }).(pulumi.IntOutput)
}

// IP address of the BGP interface outside Google Cloud Platform.
// Only IPv4 is supported. Required if `ipAddress` is set.
func (o RouterPeerOutput) PeerIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *RouterPeer) pulumi.StringOutput { return v.PeerIpAddress }).(pulumi.StringOutput)
}

// IPv4 address of the BGP interface outside Google Cloud Platform.
func (o RouterPeerOutput) PeerIpv4NexthopAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *RouterPeer) pulumi.StringOutput { return v.PeerIpv4NexthopAddress }).(pulumi.StringOutput)
}

// IPv6 address of the BGP interface outside Google Cloud Platform.
// The address must be in the range 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64.
// If you do not specify the next hop addresses, Google Cloud automatically
// assigns unused addresses from the 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64 range for you.
func (o RouterPeerOutput) PeerIpv6NexthopAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *RouterPeer) pulumi.StringOutput { return v.PeerIpv6NexthopAddress }).(pulumi.StringOutput)
}

// The ID of the project in which the resource belongs.
// If it is not provided, the provider project is used.
func (o RouterPeerOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *RouterPeer) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Region where the router and BgpPeer reside.
// If it is not provided, the provider region is used.
func (o RouterPeerOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *RouterPeer) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// The name of the Cloud Router in which this BgpPeer will be configured.
//
// ***
func (o RouterPeerOutput) Router() pulumi.StringOutput {
	return o.ApplyT(func(v *RouterPeer) pulumi.StringOutput { return v.Router }).(pulumi.StringOutput)
}

// The URI of the VM instance that is used as third-party router appliances
// such as Next Gen Firewalls, Virtual Routers, or Router Appliances.
// The VM instance must be located in zones contained in the same region as
// this Cloud Router. The VM instance is the peer side of the BGP session.
func (o RouterPeerOutput) RouterApplianceInstance() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouterPeer) pulumi.StringPtrOutput { return v.RouterApplianceInstance }).(pulumi.StringPtrOutput)
}

type RouterPeerArrayOutput struct{ *pulumi.OutputState }

func (RouterPeerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RouterPeer)(nil)).Elem()
}

func (o RouterPeerArrayOutput) ToRouterPeerArrayOutput() RouterPeerArrayOutput {
	return o
}

func (o RouterPeerArrayOutput) ToRouterPeerArrayOutputWithContext(ctx context.Context) RouterPeerArrayOutput {
	return o
}

func (o RouterPeerArrayOutput) Index(i pulumi.IntInput) RouterPeerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RouterPeer {
		return vs[0].([]*RouterPeer)[vs[1].(int)]
	}).(RouterPeerOutput)
}

type RouterPeerMapOutput struct{ *pulumi.OutputState }

func (RouterPeerMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RouterPeer)(nil)).Elem()
}

func (o RouterPeerMapOutput) ToRouterPeerMapOutput() RouterPeerMapOutput {
	return o
}

func (o RouterPeerMapOutput) ToRouterPeerMapOutputWithContext(ctx context.Context) RouterPeerMapOutput {
	return o
}

func (o RouterPeerMapOutput) MapIndex(k pulumi.StringInput) RouterPeerOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RouterPeer {
		return vs[0].(map[string]*RouterPeer)[vs[1].(string)]
	}).(RouterPeerOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RouterPeerInput)(nil)).Elem(), &RouterPeer{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterPeerArrayInput)(nil)).Elem(), RouterPeerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterPeerMapInput)(nil)).Elem(), RouterPeerMap{})
	pulumi.RegisterOutputType(RouterPeerOutput{})
	pulumi.RegisterOutputType(RouterPeerArrayOutput{})
	pulumi.RegisterOutputType(RouterPeerMapOutput{})
}
