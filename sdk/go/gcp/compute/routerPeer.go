// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package compute

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// BGP information that must be configured into the routing stack to
// establish BGP peering. This information must specify the peer ASN
// and either the interface name, IP address, or peer IP address.
// Please refer to RFC4273.
//
// To get more information about RouterBgpPeer, see:
//
// * [API documentation](https://cloud.google.com/compute/docs/reference/rest/v1/routers)
// * How-to Guides
//   - [Google Cloud Router](https://cloud.google.com/router/docs/)
//
// ## Example Usage
//
// ## Import
//
// # RouterBgpPeer can be imported using any of these accepted formats
//
// ```sh
//
//	$ pulumi import gcp:compute/routerPeer:RouterPeer default projects/{{project}}/regions/{{region}}/routers/{{router}}/{{name}}
//
// ```
//
// ```sh
//
//	$ pulumi import gcp:compute/routerPeer:RouterPeer default {{project}}/{{region}}/{{router}}/{{name}}
//
// ```
//
// ```sh
//
//	$ pulumi import gcp:compute/routerPeer:RouterPeer default {{region}}/{{router}}/{{name}}
//
// ```
//
// ```sh
//
//	$ pulumi import gcp:compute/routerPeer:RouterPeer default {{router}}/{{name}}
//
// ```
type RouterPeer struct {
	pulumi.CustomResourceState

	// User-specified flag to indicate which mode to use for advertisement.
	// Valid values of this enum field are: `DEFAULT`, `CUSTOM`
	// Default value is `DEFAULT`.
	// Possible values are: `DEFAULT`, `CUSTOM`.
	AdvertiseMode pulumi.StringPtrOutput `pulumi:"advertiseMode"`
	// User-specified list of prefix groups to advertise in custom
	// mode, which currently supports the following option:
	AdvertisedGroups pulumi.StringArrayOutput `pulumi:"advertisedGroups"`
	// User-specified list of individual IP ranges to advertise in
	// custom mode. This field can only be populated if advertiseMode
	// is `CUSTOM` and is advertised to all peers of the router. These IP
	// ranges will be advertised in addition to any specified groups.
	// Leave this field blank to advertise no custom IP ranges.
	// Structure is documented below.
	AdvertisedIpRanges RouterPeerAdvertisedIpRangeArrayOutput `pulumi:"advertisedIpRanges"`
	// The priority of routes advertised to this BGP peer.
	// Where there is more than one matching route of maximum
	// length, the routes with the lowest priority value win.
	AdvertisedRoutePriority pulumi.IntPtrOutput `pulumi:"advertisedRoutePriority"`
	// BFD configuration for the BGP peering.
	// Structure is documented below.
	Bfd RouterPeerBfdOutput `pulumi:"bfd"`
	// The status of the BGP peer connection. If set to false, any active session
	// with the peer is terminated and all associated routing information is removed.
	// If set to true, the peer connection can be established with routing information.
	// The default is true.
	Enable pulumi.BoolPtrOutput `pulumi:"enable"`
	// Enable IPv6 traffic over BGP Peer. If not specified, it is disabled by default.
	EnableIpv6 pulumi.BoolPtrOutput `pulumi:"enableIpv6"`
	// Name of the interface the BGP peer is associated with.
	Interface pulumi.StringOutput `pulumi:"interface"`
	// IP address of the interface inside Google Cloud Platform.
	// Only IPv4 is supported.
	IpAddress pulumi.StringOutput `pulumi:"ipAddress"`
	// IPv6 address of the interface inside Google Cloud Platform.
	// The address must be in the range 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64.
	// If you do not specify the next hop addresses, Google Cloud automatically
	// assigns unused addresses from the 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64 range for you.
	Ipv6NexthopAddress pulumi.StringOutput `pulumi:"ipv6NexthopAddress"`
	// The resource that configures and manages this BGP peer.
	ManagementType pulumi.StringOutput `pulumi:"managementType"`
	// Name of this BGP peer. The name must be 1-63 characters long,
	// and comply with RFC1035. Specifically, the name must be 1-63 characters
	// long and match the regular expression `a-z?` which
	// means the first character must be a lowercase letter, and all
	// following characters must be a dash, lowercase letter, or digit,
	// except the last character, which cannot be a dash.
	Name pulumi.StringOutput `pulumi:"name"`
	// Peer BGP Autonomous System Number (ASN).
	// Each BGP interface may use a different value.
	PeerAsn pulumi.IntOutput `pulumi:"peerAsn"`
	// IP address of the BGP interface outside Google Cloud Platform.
	// Only IPv4 is supported. Required if `ipAddress` is set.
	PeerIpAddress pulumi.StringOutput `pulumi:"peerIpAddress"`
	// IPv6 address of the BGP interface outside Google Cloud Platform.
	// The address must be in the range 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64.
	// If you do not specify the next hop addresses, Google Cloud automatically
	// assigns unused addresses from the 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64 range for you.
	PeerIpv6NexthopAddress pulumi.StringOutput `pulumi:"peerIpv6NexthopAddress"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
	// Region where the router and BgpPeer reside.
	// If it is not provided, the provider region is used.
	Region pulumi.StringOutput `pulumi:"region"`
	// The name of the Cloud Router in which this BgpPeer will be configured.
	//
	// ***
	Router pulumi.StringOutput `pulumi:"router"`
	// The URI of the VM instance that is used as third-party router appliances
	// such as Next Gen Firewalls, Virtual Routers, or Router Appliances.
	// The VM instance must be located in zones contained in the same region as
	// this Cloud Router. The VM instance is the peer side of the BGP session.
	RouterApplianceInstance pulumi.StringPtrOutput `pulumi:"routerApplianceInstance"`
}

// NewRouterPeer registers a new resource with the given unique name, arguments, and options.
func NewRouterPeer(ctx *pulumi.Context,
	name string, args *RouterPeerArgs, opts ...pulumi.ResourceOption) (*RouterPeer, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Interface == nil {
		return nil, errors.New("invalid value for required argument 'Interface'")
	}
	if args.PeerAsn == nil {
		return nil, errors.New("invalid value for required argument 'PeerAsn'")
	}
	if args.Router == nil {
		return nil, errors.New("invalid value for required argument 'Router'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RouterPeer
	err := ctx.RegisterResource("gcp:compute/routerPeer:RouterPeer", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRouterPeer gets an existing RouterPeer resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRouterPeer(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RouterPeerState, opts ...pulumi.ResourceOption) (*RouterPeer, error) {
	var resource RouterPeer
	err := ctx.ReadResource("gcp:compute/routerPeer:RouterPeer", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RouterPeer resources.
type routerPeerState struct {
	// User-specified flag to indicate which mode to use for advertisement.
	// Valid values of this enum field are: `DEFAULT`, `CUSTOM`
	// Default value is `DEFAULT`.
	// Possible values are: `DEFAULT`, `CUSTOM`.
	AdvertiseMode *string `pulumi:"advertiseMode"`
	// User-specified list of prefix groups to advertise in custom
	// mode, which currently supports the following option:
	AdvertisedGroups []string `pulumi:"advertisedGroups"`
	// User-specified list of individual IP ranges to advertise in
	// custom mode. This field can only be populated if advertiseMode
	// is `CUSTOM` and is advertised to all peers of the router. These IP
	// ranges will be advertised in addition to any specified groups.
	// Leave this field blank to advertise no custom IP ranges.
	// Structure is documented below.
	AdvertisedIpRanges []RouterPeerAdvertisedIpRange `pulumi:"advertisedIpRanges"`
	// The priority of routes advertised to this BGP peer.
	// Where there is more than one matching route of maximum
	// length, the routes with the lowest priority value win.
	AdvertisedRoutePriority *int `pulumi:"advertisedRoutePriority"`
	// BFD configuration for the BGP peering.
	// Structure is documented below.
	Bfd *RouterPeerBfd `pulumi:"bfd"`
	// The status of the BGP peer connection. If set to false, any active session
	// with the peer is terminated and all associated routing information is removed.
	// If set to true, the peer connection can be established with routing information.
	// The default is true.
	Enable *bool `pulumi:"enable"`
	// Enable IPv6 traffic over BGP Peer. If not specified, it is disabled by default.
	EnableIpv6 *bool `pulumi:"enableIpv6"`
	// Name of the interface the BGP peer is associated with.
	Interface *string `pulumi:"interface"`
	// IP address of the interface inside Google Cloud Platform.
	// Only IPv4 is supported.
	IpAddress *string `pulumi:"ipAddress"`
	// IPv6 address of the interface inside Google Cloud Platform.
	// The address must be in the range 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64.
	// If you do not specify the next hop addresses, Google Cloud automatically
	// assigns unused addresses from the 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64 range for you.
	Ipv6NexthopAddress *string `pulumi:"ipv6NexthopAddress"`
	// The resource that configures and manages this BGP peer.
	ManagementType *string `pulumi:"managementType"`
	// Name of this BGP peer. The name must be 1-63 characters long,
	// and comply with RFC1035. Specifically, the name must be 1-63 characters
	// long and match the regular expression `a-z?` which
	// means the first character must be a lowercase letter, and all
	// following characters must be a dash, lowercase letter, or digit,
	// except the last character, which cannot be a dash.
	Name *string `pulumi:"name"`
	// Peer BGP Autonomous System Number (ASN).
	// Each BGP interface may use a different value.
	PeerAsn *int `pulumi:"peerAsn"`
	// IP address of the BGP interface outside Google Cloud Platform.
	// Only IPv4 is supported. Required if `ipAddress` is set.
	PeerIpAddress *string `pulumi:"peerIpAddress"`
	// IPv6 address of the BGP interface outside Google Cloud Platform.
	// The address must be in the range 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64.
	// If you do not specify the next hop addresses, Google Cloud automatically
	// assigns unused addresses from the 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64 range for you.
	PeerIpv6NexthopAddress *string `pulumi:"peerIpv6NexthopAddress"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// Region where the router and BgpPeer reside.
	// If it is not provided, the provider region is used.
	Region *string `pulumi:"region"`
	// The name of the Cloud Router in which this BgpPeer will be configured.
	//
	// ***
	Router *string `pulumi:"router"`
	// The URI of the VM instance that is used as third-party router appliances
	// such as Next Gen Firewalls, Virtual Routers, or Router Appliances.
	// The VM instance must be located in zones contained in the same region as
	// this Cloud Router. The VM instance is the peer side of the BGP session.
	RouterApplianceInstance *string `pulumi:"routerApplianceInstance"`
}

type RouterPeerState struct {
	// User-specified flag to indicate which mode to use for advertisement.
	// Valid values of this enum field are: `DEFAULT`, `CUSTOM`
	// Default value is `DEFAULT`.
	// Possible values are: `DEFAULT`, `CUSTOM`.
	AdvertiseMode pulumi.StringPtrInput
	// User-specified list of prefix groups to advertise in custom
	// mode, which currently supports the following option:
	AdvertisedGroups pulumi.StringArrayInput
	// User-specified list of individual IP ranges to advertise in
	// custom mode. This field can only be populated if advertiseMode
	// is `CUSTOM` and is advertised to all peers of the router. These IP
	// ranges will be advertised in addition to any specified groups.
	// Leave this field blank to advertise no custom IP ranges.
	// Structure is documented below.
	AdvertisedIpRanges RouterPeerAdvertisedIpRangeArrayInput
	// The priority of routes advertised to this BGP peer.
	// Where there is more than one matching route of maximum
	// length, the routes with the lowest priority value win.
	AdvertisedRoutePriority pulumi.IntPtrInput
	// BFD configuration for the BGP peering.
	// Structure is documented below.
	Bfd RouterPeerBfdPtrInput
	// The status of the BGP peer connection. If set to false, any active session
	// with the peer is terminated and all associated routing information is removed.
	// If set to true, the peer connection can be established with routing information.
	// The default is true.
	Enable pulumi.BoolPtrInput
	// Enable IPv6 traffic over BGP Peer. If not specified, it is disabled by default.
	EnableIpv6 pulumi.BoolPtrInput
	// Name of the interface the BGP peer is associated with.
	Interface pulumi.StringPtrInput
	// IP address of the interface inside Google Cloud Platform.
	// Only IPv4 is supported.
	IpAddress pulumi.StringPtrInput
	// IPv6 address of the interface inside Google Cloud Platform.
	// The address must be in the range 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64.
	// If you do not specify the next hop addresses, Google Cloud automatically
	// assigns unused addresses from the 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64 range for you.
	Ipv6NexthopAddress pulumi.StringPtrInput
	// The resource that configures and manages this BGP peer.
	ManagementType pulumi.StringPtrInput
	// Name of this BGP peer. The name must be 1-63 characters long,
	// and comply with RFC1035. Specifically, the name must be 1-63 characters
	// long and match the regular expression `a-z?` which
	// means the first character must be a lowercase letter, and all
	// following characters must be a dash, lowercase letter, or digit,
	// except the last character, which cannot be a dash.
	Name pulumi.StringPtrInput
	// Peer BGP Autonomous System Number (ASN).
	// Each BGP interface may use a different value.
	PeerAsn pulumi.IntPtrInput
	// IP address of the BGP interface outside Google Cloud Platform.
	// Only IPv4 is supported. Required if `ipAddress` is set.
	PeerIpAddress pulumi.StringPtrInput
	// IPv6 address of the BGP interface outside Google Cloud Platform.
	// The address must be in the range 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64.
	// If you do not specify the next hop addresses, Google Cloud automatically
	// assigns unused addresses from the 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64 range for you.
	PeerIpv6NexthopAddress pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// Region where the router and BgpPeer reside.
	// If it is not provided, the provider region is used.
	Region pulumi.StringPtrInput
	// The name of the Cloud Router in which this BgpPeer will be configured.
	//
	// ***
	Router pulumi.StringPtrInput
	// The URI of the VM instance that is used as third-party router appliances
	// such as Next Gen Firewalls, Virtual Routers, or Router Appliances.
	// The VM instance must be located in zones contained in the same region as
	// this Cloud Router. The VM instance is the peer side of the BGP session.
	RouterApplianceInstance pulumi.StringPtrInput
}

func (RouterPeerState) ElementType() reflect.Type {
	return reflect.TypeOf((*routerPeerState)(nil)).Elem()
}

type routerPeerArgs struct {
	// User-specified flag to indicate which mode to use for advertisement.
	// Valid values of this enum field are: `DEFAULT`, `CUSTOM`
	// Default value is `DEFAULT`.
	// Possible values are: `DEFAULT`, `CUSTOM`.
	AdvertiseMode *string `pulumi:"advertiseMode"`
	// User-specified list of prefix groups to advertise in custom
	// mode, which currently supports the following option:
	AdvertisedGroups []string `pulumi:"advertisedGroups"`
	// User-specified list of individual IP ranges to advertise in
	// custom mode. This field can only be populated if advertiseMode
	// is `CUSTOM` and is advertised to all peers of the router. These IP
	// ranges will be advertised in addition to any specified groups.
	// Leave this field blank to advertise no custom IP ranges.
	// Structure is documented below.
	AdvertisedIpRanges []RouterPeerAdvertisedIpRange `pulumi:"advertisedIpRanges"`
	// The priority of routes advertised to this BGP peer.
	// Where there is more than one matching route of maximum
	// length, the routes with the lowest priority value win.
	AdvertisedRoutePriority *int `pulumi:"advertisedRoutePriority"`
	// BFD configuration for the BGP peering.
	// Structure is documented below.
	Bfd *RouterPeerBfd `pulumi:"bfd"`
	// The status of the BGP peer connection. If set to false, any active session
	// with the peer is terminated and all associated routing information is removed.
	// If set to true, the peer connection can be established with routing information.
	// The default is true.
	Enable *bool `pulumi:"enable"`
	// Enable IPv6 traffic over BGP Peer. If not specified, it is disabled by default.
	EnableIpv6 *bool `pulumi:"enableIpv6"`
	// Name of the interface the BGP peer is associated with.
	Interface string `pulumi:"interface"`
	// IP address of the interface inside Google Cloud Platform.
	// Only IPv4 is supported.
	IpAddress *string `pulumi:"ipAddress"`
	// IPv6 address of the interface inside Google Cloud Platform.
	// The address must be in the range 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64.
	// If you do not specify the next hop addresses, Google Cloud automatically
	// assigns unused addresses from the 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64 range for you.
	Ipv6NexthopAddress *string `pulumi:"ipv6NexthopAddress"`
	// Name of this BGP peer. The name must be 1-63 characters long,
	// and comply with RFC1035. Specifically, the name must be 1-63 characters
	// long and match the regular expression `a-z?` which
	// means the first character must be a lowercase letter, and all
	// following characters must be a dash, lowercase letter, or digit,
	// except the last character, which cannot be a dash.
	Name *string `pulumi:"name"`
	// Peer BGP Autonomous System Number (ASN).
	// Each BGP interface may use a different value.
	PeerAsn int `pulumi:"peerAsn"`
	// IP address of the BGP interface outside Google Cloud Platform.
	// Only IPv4 is supported. Required if `ipAddress` is set.
	PeerIpAddress *string `pulumi:"peerIpAddress"`
	// IPv6 address of the BGP interface outside Google Cloud Platform.
	// The address must be in the range 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64.
	// If you do not specify the next hop addresses, Google Cloud automatically
	// assigns unused addresses from the 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64 range for you.
	PeerIpv6NexthopAddress *string `pulumi:"peerIpv6NexthopAddress"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// Region where the router and BgpPeer reside.
	// If it is not provided, the provider region is used.
	Region *string `pulumi:"region"`
	// The name of the Cloud Router in which this BgpPeer will be configured.
	//
	// ***
	Router string `pulumi:"router"`
	// The URI of the VM instance that is used as third-party router appliances
	// such as Next Gen Firewalls, Virtual Routers, or Router Appliances.
	// The VM instance must be located in zones contained in the same region as
	// this Cloud Router. The VM instance is the peer side of the BGP session.
	RouterApplianceInstance *string `pulumi:"routerApplianceInstance"`
}

// The set of arguments for constructing a RouterPeer resource.
type RouterPeerArgs struct {
	// User-specified flag to indicate which mode to use for advertisement.
	// Valid values of this enum field are: `DEFAULT`, `CUSTOM`
	// Default value is `DEFAULT`.
	// Possible values are: `DEFAULT`, `CUSTOM`.
	AdvertiseMode pulumi.StringPtrInput
	// User-specified list of prefix groups to advertise in custom
	// mode, which currently supports the following option:
	AdvertisedGroups pulumi.StringArrayInput
	// User-specified list of individual IP ranges to advertise in
	// custom mode. This field can only be populated if advertiseMode
	// is `CUSTOM` and is advertised to all peers of the router. These IP
	// ranges will be advertised in addition to any specified groups.
	// Leave this field blank to advertise no custom IP ranges.
	// Structure is documented below.
	AdvertisedIpRanges RouterPeerAdvertisedIpRangeArrayInput
	// The priority of routes advertised to this BGP peer.
	// Where there is more than one matching route of maximum
	// length, the routes with the lowest priority value win.
	AdvertisedRoutePriority pulumi.IntPtrInput
	// BFD configuration for the BGP peering.
	// Structure is documented below.
	Bfd RouterPeerBfdPtrInput
	// The status of the BGP peer connection. If set to false, any active session
	// with the peer is terminated and all associated routing information is removed.
	// If set to true, the peer connection can be established with routing information.
	// The default is true.
	Enable pulumi.BoolPtrInput
	// Enable IPv6 traffic over BGP Peer. If not specified, it is disabled by default.
	EnableIpv6 pulumi.BoolPtrInput
	// Name of the interface the BGP peer is associated with.
	Interface pulumi.StringInput
	// IP address of the interface inside Google Cloud Platform.
	// Only IPv4 is supported.
	IpAddress pulumi.StringPtrInput
	// IPv6 address of the interface inside Google Cloud Platform.
	// The address must be in the range 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64.
	// If you do not specify the next hop addresses, Google Cloud automatically
	// assigns unused addresses from the 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64 range for you.
	Ipv6NexthopAddress pulumi.StringPtrInput
	// Name of this BGP peer. The name must be 1-63 characters long,
	// and comply with RFC1035. Specifically, the name must be 1-63 characters
	// long and match the regular expression `a-z?` which
	// means the first character must be a lowercase letter, and all
	// following characters must be a dash, lowercase letter, or digit,
	// except the last character, which cannot be a dash.
	Name pulumi.StringPtrInput
	// Peer BGP Autonomous System Number (ASN).
	// Each BGP interface may use a different value.
	PeerAsn pulumi.IntInput
	// IP address of the BGP interface outside Google Cloud Platform.
	// Only IPv4 is supported. Required if `ipAddress` is set.
	PeerIpAddress pulumi.StringPtrInput
	// IPv6 address of the BGP interface outside Google Cloud Platform.
	// The address must be in the range 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64.
	// If you do not specify the next hop addresses, Google Cloud automatically
	// assigns unused addresses from the 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64 range for you.
	PeerIpv6NexthopAddress pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// Region where the router and BgpPeer reside.
	// If it is not provided, the provider region is used.
	Region pulumi.StringPtrInput
	// The name of the Cloud Router in which this BgpPeer will be configured.
	//
	// ***
	Router pulumi.StringInput
	// The URI of the VM instance that is used as third-party router appliances
	// such as Next Gen Firewalls, Virtual Routers, or Router Appliances.
	// The VM instance must be located in zones contained in the same region as
	// this Cloud Router. The VM instance is the peer side of the BGP session.
	RouterApplianceInstance pulumi.StringPtrInput
}

func (RouterPeerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*routerPeerArgs)(nil)).Elem()
}

type RouterPeerInput interface {
	pulumi.Input

	ToRouterPeerOutput() RouterPeerOutput
	ToRouterPeerOutputWithContext(ctx context.Context) RouterPeerOutput
}

func (*RouterPeer) ElementType() reflect.Type {
	return reflect.TypeOf((**RouterPeer)(nil)).Elem()
}

func (i *RouterPeer) ToRouterPeerOutput() RouterPeerOutput {
	return i.ToRouterPeerOutputWithContext(context.Background())
}

func (i *RouterPeer) ToRouterPeerOutputWithContext(ctx context.Context) RouterPeerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterPeerOutput)
}

func (i *RouterPeer) ToOutput(ctx context.Context) pulumix.Output[*RouterPeer] {
	return pulumix.Output[*RouterPeer]{
		OutputState: i.ToRouterPeerOutputWithContext(ctx).OutputState,
	}
}

// RouterPeerArrayInput is an input type that accepts RouterPeerArray and RouterPeerArrayOutput values.
// You can construct a concrete instance of `RouterPeerArrayInput` via:
//
//	RouterPeerArray{ RouterPeerArgs{...} }
type RouterPeerArrayInput interface {
	pulumi.Input

	ToRouterPeerArrayOutput() RouterPeerArrayOutput
	ToRouterPeerArrayOutputWithContext(context.Context) RouterPeerArrayOutput
}

type RouterPeerArray []RouterPeerInput

func (RouterPeerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RouterPeer)(nil)).Elem()
}

func (i RouterPeerArray) ToRouterPeerArrayOutput() RouterPeerArrayOutput {
	return i.ToRouterPeerArrayOutputWithContext(context.Background())
}

func (i RouterPeerArray) ToRouterPeerArrayOutputWithContext(ctx context.Context) RouterPeerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterPeerArrayOutput)
}

func (i RouterPeerArray) ToOutput(ctx context.Context) pulumix.Output[[]*RouterPeer] {
	return pulumix.Output[[]*RouterPeer]{
		OutputState: i.ToRouterPeerArrayOutputWithContext(ctx).OutputState,
	}
}

// RouterPeerMapInput is an input type that accepts RouterPeerMap and RouterPeerMapOutput values.
// You can construct a concrete instance of `RouterPeerMapInput` via:
//
//	RouterPeerMap{ "key": RouterPeerArgs{...} }
type RouterPeerMapInput interface {
	pulumi.Input

	ToRouterPeerMapOutput() RouterPeerMapOutput
	ToRouterPeerMapOutputWithContext(context.Context) RouterPeerMapOutput
}

type RouterPeerMap map[string]RouterPeerInput

func (RouterPeerMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RouterPeer)(nil)).Elem()
}

func (i RouterPeerMap) ToRouterPeerMapOutput() RouterPeerMapOutput {
	return i.ToRouterPeerMapOutputWithContext(context.Background())
}

func (i RouterPeerMap) ToRouterPeerMapOutputWithContext(ctx context.Context) RouterPeerMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterPeerMapOutput)
}

func (i RouterPeerMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*RouterPeer] {
	return pulumix.Output[map[string]*RouterPeer]{
		OutputState: i.ToRouterPeerMapOutputWithContext(ctx).OutputState,
	}
}

type RouterPeerOutput struct{ *pulumi.OutputState }

func (RouterPeerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouterPeer)(nil)).Elem()
}

func (o RouterPeerOutput) ToRouterPeerOutput() RouterPeerOutput {
	return o
}

func (o RouterPeerOutput) ToRouterPeerOutputWithContext(ctx context.Context) RouterPeerOutput {
	return o
}

func (o RouterPeerOutput) ToOutput(ctx context.Context) pulumix.Output[*RouterPeer] {
	return pulumix.Output[*RouterPeer]{
		OutputState: o.OutputState,
	}
}

// User-specified flag to indicate which mode to use for advertisement.
// Valid values of this enum field are: `DEFAULT`, `CUSTOM`
// Default value is `DEFAULT`.
// Possible values are: `DEFAULT`, `CUSTOM`.
func (o RouterPeerOutput) AdvertiseMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouterPeer) pulumi.StringPtrOutput { return v.AdvertiseMode }).(pulumi.StringPtrOutput)
}

// User-specified list of prefix groups to advertise in custom
// mode, which currently supports the following option:
func (o RouterPeerOutput) AdvertisedGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RouterPeer) pulumi.StringArrayOutput { return v.AdvertisedGroups }).(pulumi.StringArrayOutput)
}

// User-specified list of individual IP ranges to advertise in
// custom mode. This field can only be populated if advertiseMode
// is `CUSTOM` and is advertised to all peers of the router. These IP
// ranges will be advertised in addition to any specified groups.
// Leave this field blank to advertise no custom IP ranges.
// Structure is documented below.
func (o RouterPeerOutput) AdvertisedIpRanges() RouterPeerAdvertisedIpRangeArrayOutput {
	return o.ApplyT(func(v *RouterPeer) RouterPeerAdvertisedIpRangeArrayOutput { return v.AdvertisedIpRanges }).(RouterPeerAdvertisedIpRangeArrayOutput)
}

// The priority of routes advertised to this BGP peer.
// Where there is more than one matching route of maximum
// length, the routes with the lowest priority value win.
func (o RouterPeerOutput) AdvertisedRoutePriority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RouterPeer) pulumi.IntPtrOutput { return v.AdvertisedRoutePriority }).(pulumi.IntPtrOutput)
}

// BFD configuration for the BGP peering.
// Structure is documented below.
func (o RouterPeerOutput) Bfd() RouterPeerBfdOutput {
	return o.ApplyT(func(v *RouterPeer) RouterPeerBfdOutput { return v.Bfd }).(RouterPeerBfdOutput)
}

// The status of the BGP peer connection. If set to false, any active session
// with the peer is terminated and all associated routing information is removed.
// If set to true, the peer connection can be established with routing information.
// The default is true.
func (o RouterPeerOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RouterPeer) pulumi.BoolPtrOutput { return v.Enable }).(pulumi.BoolPtrOutput)
}

// Enable IPv6 traffic over BGP Peer. If not specified, it is disabled by default.
func (o RouterPeerOutput) EnableIpv6() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RouterPeer) pulumi.BoolPtrOutput { return v.EnableIpv6 }).(pulumi.BoolPtrOutput)
}

// Name of the interface the BGP peer is associated with.
func (o RouterPeerOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v *RouterPeer) pulumi.StringOutput { return v.Interface }).(pulumi.StringOutput)
}

// IP address of the interface inside Google Cloud Platform.
// Only IPv4 is supported.
func (o RouterPeerOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *RouterPeer) pulumi.StringOutput { return v.IpAddress }).(pulumi.StringOutput)
}

// IPv6 address of the interface inside Google Cloud Platform.
// The address must be in the range 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64.
// If you do not specify the next hop addresses, Google Cloud automatically
// assigns unused addresses from the 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64 range for you.
func (o RouterPeerOutput) Ipv6NexthopAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *RouterPeer) pulumi.StringOutput { return v.Ipv6NexthopAddress }).(pulumi.StringOutput)
}

// The resource that configures and manages this BGP peer.
func (o RouterPeerOutput) ManagementType() pulumi.StringOutput {
	return o.ApplyT(func(v *RouterPeer) pulumi.StringOutput { return v.ManagementType }).(pulumi.StringOutput)
}

// Name of this BGP peer. The name must be 1-63 characters long,
// and comply with RFC1035. Specifically, the name must be 1-63 characters
// long and match the regular expression `a-z?` which
// means the first character must be a lowercase letter, and all
// following characters must be a dash, lowercase letter, or digit,
// except the last character, which cannot be a dash.
func (o RouterPeerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *RouterPeer) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Peer BGP Autonomous System Number (ASN).
// Each BGP interface may use a different value.
func (o RouterPeerOutput) PeerAsn() pulumi.IntOutput {
	return o.ApplyT(func(v *RouterPeer) pulumi.IntOutput { return v.PeerAsn }).(pulumi.IntOutput)
}

// IP address of the BGP interface outside Google Cloud Platform.
// Only IPv4 is supported. Required if `ipAddress` is set.
func (o RouterPeerOutput) PeerIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *RouterPeer) pulumi.StringOutput { return v.PeerIpAddress }).(pulumi.StringOutput)
}

// IPv6 address of the BGP interface outside Google Cloud Platform.
// The address must be in the range 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64.
// If you do not specify the next hop addresses, Google Cloud automatically
// assigns unused addresses from the 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64 range for you.
func (o RouterPeerOutput) PeerIpv6NexthopAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *RouterPeer) pulumi.StringOutput { return v.PeerIpv6NexthopAddress }).(pulumi.StringOutput)
}

// The ID of the project in which the resource belongs.
// If it is not provided, the provider project is used.
func (o RouterPeerOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *RouterPeer) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Region where the router and BgpPeer reside.
// If it is not provided, the provider region is used.
func (o RouterPeerOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *RouterPeer) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// The name of the Cloud Router in which this BgpPeer will be configured.
//
// ***
func (o RouterPeerOutput) Router() pulumi.StringOutput {
	return o.ApplyT(func(v *RouterPeer) pulumi.StringOutput { return v.Router }).(pulumi.StringOutput)
}

// The URI of the VM instance that is used as third-party router appliances
// such as Next Gen Firewalls, Virtual Routers, or Router Appliances.
// The VM instance must be located in zones contained in the same region as
// this Cloud Router. The VM instance is the peer side of the BGP session.
func (o RouterPeerOutput) RouterApplianceInstance() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouterPeer) pulumi.StringPtrOutput { return v.RouterApplianceInstance }).(pulumi.StringPtrOutput)
}

type RouterPeerArrayOutput struct{ *pulumi.OutputState }

func (RouterPeerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RouterPeer)(nil)).Elem()
}

func (o RouterPeerArrayOutput) ToRouterPeerArrayOutput() RouterPeerArrayOutput {
	return o
}

func (o RouterPeerArrayOutput) ToRouterPeerArrayOutputWithContext(ctx context.Context) RouterPeerArrayOutput {
	return o
}

func (o RouterPeerArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*RouterPeer] {
	return pulumix.Output[[]*RouterPeer]{
		OutputState: o.OutputState,
	}
}

func (o RouterPeerArrayOutput) Index(i pulumi.IntInput) RouterPeerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RouterPeer {
		return vs[0].([]*RouterPeer)[vs[1].(int)]
	}).(RouterPeerOutput)
}

type RouterPeerMapOutput struct{ *pulumi.OutputState }

func (RouterPeerMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RouterPeer)(nil)).Elem()
}

func (o RouterPeerMapOutput) ToRouterPeerMapOutput() RouterPeerMapOutput {
	return o
}

func (o RouterPeerMapOutput) ToRouterPeerMapOutputWithContext(ctx context.Context) RouterPeerMapOutput {
	return o
}

func (o RouterPeerMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*RouterPeer] {
	return pulumix.Output[map[string]*RouterPeer]{
		OutputState: o.OutputState,
	}
}

func (o RouterPeerMapOutput) MapIndex(k pulumi.StringInput) RouterPeerOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RouterPeer {
		return vs[0].(map[string]*RouterPeer)[vs[1].(string)]
	}).(RouterPeerOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RouterPeerInput)(nil)).Elem(), &RouterPeer{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterPeerArrayInput)(nil)).Elem(), RouterPeerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterPeerMapInput)(nil)).Elem(), RouterPeerMap{})
	pulumi.RegisterOutputType(RouterPeerOutput{})
	pulumi.RegisterOutputType(RouterPeerArrayOutput{})
	pulumi.RegisterOutputType(RouterPeerMapOutput{})
}
