// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package compute

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// An HttpHealthCheck resource. This resource defines a template for how
// individual VMs should be checked for health, via HTTP.
// 
// 
// > **Note:** google_compute_http_health_check is a legacy health check.
// The newer [google_compute_health_check](https://www.terraform.io/docs/providers/google/r/compute_health_check.html)
// should be preferred for all uses except
// [Network Load Balancers](https://cloud.google.com/compute/docs/load-balancing/network/)
// which still require the legacy version.
// 
// 
// To get more information about HttpHealthCheck, see:
// 
// * [API documentation](https://cloud.google.com/compute/docs/reference/v1/httpHealthChecks)
// * How-to Guides
//     * [Adding Health Checks](https://cloud.google.com/compute/docs/load-balancing/health-checks#legacy_health_checks)
// 
// <div class = "oics-button" style="float: right; margin: 0 0 -15px">
//   <a href="https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_working_dir=http_health_check_basic&cloudshell_image=gcr.io%2Fgraphite-cloud-shell-images%2Fterraform%3Alatest&open_in_editor=main.tf&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md" target="_blank">
//     <img alt="Open in Cloud Shell" src="//gstatic.com/cloudssh/images/open-btn.svg" style="max-height: 44px; margin: 32px auto; max-width: 100%;">
//   </a>
// </div>
type HttpHealthCheck struct {
	s *pulumi.ResourceState
}

// NewHttpHealthCheck registers a new resource with the given unique name, arguments, and options.
func NewHttpHealthCheck(ctx *pulumi.Context,
	name string, args *HttpHealthCheckArgs, opts ...pulumi.ResourceOpt) (*HttpHealthCheck, error) {
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["checkIntervalSec"] = nil
		inputs["description"] = nil
		inputs["healthyThreshold"] = nil
		inputs["host"] = nil
		inputs["name"] = nil
		inputs["port"] = nil
		inputs["project"] = nil
		inputs["requestPath"] = nil
		inputs["timeoutSec"] = nil
		inputs["unhealthyThreshold"] = nil
	} else {
		inputs["checkIntervalSec"] = args.CheckIntervalSec
		inputs["description"] = args.Description
		inputs["healthyThreshold"] = args.HealthyThreshold
		inputs["host"] = args.Host
		inputs["name"] = args.Name
		inputs["port"] = args.Port
		inputs["project"] = args.Project
		inputs["requestPath"] = args.RequestPath
		inputs["timeoutSec"] = args.TimeoutSec
		inputs["unhealthyThreshold"] = args.UnhealthyThreshold
	}
	inputs["creationTimestamp"] = nil
	inputs["selfLink"] = nil
	s, err := ctx.RegisterResource("gcp:compute/httpHealthCheck:HttpHealthCheck", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &HttpHealthCheck{s: s}, nil
}

// GetHttpHealthCheck gets an existing HttpHealthCheck resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetHttpHealthCheck(ctx *pulumi.Context,
	name string, id pulumi.ID, state *HttpHealthCheckState, opts ...pulumi.ResourceOpt) (*HttpHealthCheck, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["checkIntervalSec"] = state.CheckIntervalSec
		inputs["creationTimestamp"] = state.CreationTimestamp
		inputs["description"] = state.Description
		inputs["healthyThreshold"] = state.HealthyThreshold
		inputs["host"] = state.Host
		inputs["name"] = state.Name
		inputs["port"] = state.Port
		inputs["project"] = state.Project
		inputs["requestPath"] = state.RequestPath
		inputs["selfLink"] = state.SelfLink
		inputs["timeoutSec"] = state.TimeoutSec
		inputs["unhealthyThreshold"] = state.UnhealthyThreshold
	}
	s, err := ctx.ReadResource("gcp:compute/httpHealthCheck:HttpHealthCheck", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &HttpHealthCheck{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *HttpHealthCheck) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *HttpHealthCheck) ID() *pulumi.IDOutput {
	return r.s.ID()
}

func (r *HttpHealthCheck) CheckIntervalSec() *pulumi.IntOutput {
	return (*pulumi.IntOutput)(r.s.State["checkIntervalSec"])
}

func (r *HttpHealthCheck) CreationTimestamp() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["creationTimestamp"])
}

func (r *HttpHealthCheck) Description() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["description"])
}

func (r *HttpHealthCheck) HealthyThreshold() *pulumi.IntOutput {
	return (*pulumi.IntOutput)(r.s.State["healthyThreshold"])
}

func (r *HttpHealthCheck) Host() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["host"])
}

func (r *HttpHealthCheck) Name() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["name"])
}

func (r *HttpHealthCheck) Port() *pulumi.IntOutput {
	return (*pulumi.IntOutput)(r.s.State["port"])
}

// The ID of the project in which the resource belongs.
// If it is not provided, the provider project is used.
func (r *HttpHealthCheck) Project() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["project"])
}

func (r *HttpHealthCheck) RequestPath() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["requestPath"])
}

// The URI of the created resource.
func (r *HttpHealthCheck) SelfLink() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["selfLink"])
}

func (r *HttpHealthCheck) TimeoutSec() *pulumi.IntOutput {
	return (*pulumi.IntOutput)(r.s.State["timeoutSec"])
}

func (r *HttpHealthCheck) UnhealthyThreshold() *pulumi.IntOutput {
	return (*pulumi.IntOutput)(r.s.State["unhealthyThreshold"])
}

// Input properties used for looking up and filtering HttpHealthCheck resources.
type HttpHealthCheckState struct {
	CheckIntervalSec interface{}
	CreationTimestamp interface{}
	Description interface{}
	HealthyThreshold interface{}
	Host interface{}
	Name interface{}
	Port interface{}
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project interface{}
	RequestPath interface{}
	// The URI of the created resource.
	SelfLink interface{}
	TimeoutSec interface{}
	UnhealthyThreshold interface{}
}

// The set of arguments for constructing a HttpHealthCheck resource.
type HttpHealthCheckArgs struct {
	CheckIntervalSec interface{}
	Description interface{}
	HealthyThreshold interface{}
	Host interface{}
	Name interface{}
	Port interface{}
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project interface{}
	RequestPath interface{}
	TimeoutSec interface{}
	UnhealthyThreshold interface{}
}
