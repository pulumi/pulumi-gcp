// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package compute

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to access a Region Network Endpoint Group's attributes.
//
// The RNEG may be found by providing either a `selfLink`, or a `name` and a `region`.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/compute"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := compute.LookupRegionNetworkEndpointGroup(ctx, &compute.LookupRegionNetworkEndpointGroupArgs{
//				Name:   pulumi.StringRef("k8s1-abcdef01-myns-mysvc-8080-4b6bac43"),
//				Region: pulumi.StringRef("us-central1"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = compute.LookupRegionNetworkEndpointGroup(ctx, &compute.LookupRegionNetworkEndpointGroupArgs{
//				SelfLink: pulumi.StringRef("https://www.googleapis.com/compute/v1/projects/myproject/regions/us-central1/networkEndpointGroups/k8s1-abcdef01-myns-mysvc-8080-4b6bac43"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupRegionNetworkEndpointGroup(ctx *pulumi.Context, args *LookupRegionNetworkEndpointGroupArgs, opts ...pulumi.InvokeOption) (*LookupRegionNetworkEndpointGroupResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupRegionNetworkEndpointGroupResult
	err := ctx.Invoke("gcp:compute/getRegionNetworkEndpointGroup:getRegionNetworkEndpointGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRegionNetworkEndpointGroup.
type LookupRegionNetworkEndpointGroupArgs struct {
	// The Network Endpoint Group name. Provide either this or a `selfLink`.
	Name *string `pulumi:"name"`
	// The ID of the project to list versions in. If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// A reference to the region where the Serverless REGs Reside. Provide either this or a `selfLink`.
	Region *string `pulumi:"region"`
	// The Network Endpoint Group self\_link.
	SelfLink *string `pulumi:"selfLink"`
}

// A collection of values returned by getRegionNetworkEndpointGroup.
type LookupRegionNetworkEndpointGroupResult struct {
	AppEngines     []GetRegionNetworkEndpointGroupAppEngine     `pulumi:"appEngines"`
	CloudFunctions []GetRegionNetworkEndpointGroupCloudFunction `pulumi:"cloudFunctions"`
	CloudRuns      []GetRegionNetworkEndpointGroupCloudRun      `pulumi:"cloudRuns"`
	// The RNEG description.
	Description string `pulumi:"description"`
	// The provider-assigned unique ID for this managed resource.
	Id   string  `pulumi:"id"`
	Name *string `pulumi:"name"`
	// The network to which all network endpoints in the RNEG belong.
	Network string `pulumi:"network"`
	// Type of network endpoints in this network endpoint group.
	NetworkEndpointType string  `pulumi:"networkEndpointType"`
	Project             *string `pulumi:"project"`
	// The target service url used to set up private service connection to a Google API or a PSC Producer Service Attachment.
	PscTargetService      string                                              `pulumi:"pscTargetService"`
	Region                *string                                             `pulumi:"region"`
	SelfLink              *string                                             `pulumi:"selfLink"`
	ServerlessDeployments []GetRegionNetworkEndpointGroupServerlessDeployment `pulumi:"serverlessDeployments"`
	// subnetwork to which all network endpoints in the RNEG belong.
	Subnetwork string `pulumi:"subnetwork"`
}

func LookupRegionNetworkEndpointGroupOutput(ctx *pulumi.Context, args LookupRegionNetworkEndpointGroupOutputArgs, opts ...pulumi.InvokeOption) LookupRegionNetworkEndpointGroupResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupRegionNetworkEndpointGroupResult, error) {
			args := v.(LookupRegionNetworkEndpointGroupArgs)
			r, err := LookupRegionNetworkEndpointGroup(ctx, &args, opts...)
			var s LookupRegionNetworkEndpointGroupResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupRegionNetworkEndpointGroupResultOutput)
}

// A collection of arguments for invoking getRegionNetworkEndpointGroup.
type LookupRegionNetworkEndpointGroupOutputArgs struct {
	// The Network Endpoint Group name. Provide either this or a `selfLink`.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The ID of the project to list versions in. If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput `pulumi:"project"`
	// A reference to the region where the Serverless REGs Reside. Provide either this or a `selfLink`.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// The Network Endpoint Group self\_link.
	SelfLink pulumi.StringPtrInput `pulumi:"selfLink"`
}

func (LookupRegionNetworkEndpointGroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRegionNetworkEndpointGroupArgs)(nil)).Elem()
}

// A collection of values returned by getRegionNetworkEndpointGroup.
type LookupRegionNetworkEndpointGroupResultOutput struct{ *pulumi.OutputState }

func (LookupRegionNetworkEndpointGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRegionNetworkEndpointGroupResult)(nil)).Elem()
}

func (o LookupRegionNetworkEndpointGroupResultOutput) ToLookupRegionNetworkEndpointGroupResultOutput() LookupRegionNetworkEndpointGroupResultOutput {
	return o
}

func (o LookupRegionNetworkEndpointGroupResultOutput) ToLookupRegionNetworkEndpointGroupResultOutputWithContext(ctx context.Context) LookupRegionNetworkEndpointGroupResultOutput {
	return o
}

func (o LookupRegionNetworkEndpointGroupResultOutput) AppEngines() GetRegionNetworkEndpointGroupAppEngineArrayOutput {
	return o.ApplyT(func(v LookupRegionNetworkEndpointGroupResult) []GetRegionNetworkEndpointGroupAppEngine {
		return v.AppEngines
	}).(GetRegionNetworkEndpointGroupAppEngineArrayOutput)
}

func (o LookupRegionNetworkEndpointGroupResultOutput) CloudFunctions() GetRegionNetworkEndpointGroupCloudFunctionArrayOutput {
	return o.ApplyT(func(v LookupRegionNetworkEndpointGroupResult) []GetRegionNetworkEndpointGroupCloudFunction {
		return v.CloudFunctions
	}).(GetRegionNetworkEndpointGroupCloudFunctionArrayOutput)
}

func (o LookupRegionNetworkEndpointGroupResultOutput) CloudRuns() GetRegionNetworkEndpointGroupCloudRunArrayOutput {
	return o.ApplyT(func(v LookupRegionNetworkEndpointGroupResult) []GetRegionNetworkEndpointGroupCloudRun {
		return v.CloudRuns
	}).(GetRegionNetworkEndpointGroupCloudRunArrayOutput)
}

// The RNEG description.
func (o LookupRegionNetworkEndpointGroupResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegionNetworkEndpointGroupResult) string { return v.Description }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupRegionNetworkEndpointGroupResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegionNetworkEndpointGroupResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupRegionNetworkEndpointGroupResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRegionNetworkEndpointGroupResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The network to which all network endpoints in the RNEG belong.
func (o LookupRegionNetworkEndpointGroupResultOutput) Network() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegionNetworkEndpointGroupResult) string { return v.Network }).(pulumi.StringOutput)
}

// Type of network endpoints in this network endpoint group.
func (o LookupRegionNetworkEndpointGroupResultOutput) NetworkEndpointType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegionNetworkEndpointGroupResult) string { return v.NetworkEndpointType }).(pulumi.StringOutput)
}

func (o LookupRegionNetworkEndpointGroupResultOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRegionNetworkEndpointGroupResult) *string { return v.Project }).(pulumi.StringPtrOutput)
}

// The target service url used to set up private service connection to a Google API or a PSC Producer Service Attachment.
func (o LookupRegionNetworkEndpointGroupResultOutput) PscTargetService() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegionNetworkEndpointGroupResult) string { return v.PscTargetService }).(pulumi.StringOutput)
}

func (o LookupRegionNetworkEndpointGroupResultOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRegionNetworkEndpointGroupResult) *string { return v.Region }).(pulumi.StringPtrOutput)
}

func (o LookupRegionNetworkEndpointGroupResultOutput) SelfLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRegionNetworkEndpointGroupResult) *string { return v.SelfLink }).(pulumi.StringPtrOutput)
}

func (o LookupRegionNetworkEndpointGroupResultOutput) ServerlessDeployments() GetRegionNetworkEndpointGroupServerlessDeploymentArrayOutput {
	return o.ApplyT(func(v LookupRegionNetworkEndpointGroupResult) []GetRegionNetworkEndpointGroupServerlessDeployment {
		return v.ServerlessDeployments
	}).(GetRegionNetworkEndpointGroupServerlessDeploymentArrayOutput)
}

// subnetwork to which all network endpoints in the RNEG belong.
func (o LookupRegionNetworkEndpointGroupResultOutput) Subnetwork() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegionNetworkEndpointGroupResult) string { return v.Subnetwork }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRegionNetworkEndpointGroupResultOutput{})
}
