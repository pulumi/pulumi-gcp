// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package compute

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// List IP addresses in a project. For more information see
// the official API [list](https://cloud.google.com/compute/docs/reference/latest/addresses/list) and
// [aggregated lsit](https://cloud.google.com/compute/docs/reference/rest/v1/addresses/aggregatedList) documentation.
func GetAddresses(ctx *pulumi.Context, args *GetAddressesArgs, opts ...pulumi.InvokeOption) (*GetAddressesResult, error) {
	var rv GetAddressesResult
	err := ctx.Invoke("gcp:compute/getAddresses:getAddresses", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAddresses.
type GetAddressesArgs struct {
	// A filter expression that
	// filters resources listed in the response. The expression must specify
	// the field name, an operator, and the value that you want to use for
	// filtering. The value must be a string, a number, or a boolean. The
	// operator must be either "=", "!=", ">", "<", "<=", ">=" or ":". For
	// example, if you are filtering Compute Engine instances, you can
	// exclude instances named "example-instance" by specifying "name !=
	// example-instance". The ":" operator can be used with string fields to
	// match substrings. For non-string fields it is equivalent to the "="
	// operator. The ":*" comparison can be used to test whether a key has
	// been defined. For example, to find all objects with "owner" label
	// use: """ labels.owner:* """ You can also filter nested fields. For
	// example, you could specify "scheduling.automaticRestart = false" to
	// include instances only if they are not scheduled for automatic
	// restarts. You can use filtering on nested fields to filter based on
	// resource labels. To filter on multiple expressions, provide each
	// separate expression within parentheses. For example: """
	// (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")
	// """ By default, each expression is an "AND" expression. However, you
	// can include "AND" and "OR" expressions explicitly. For example: """
	// (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell")
	// AND (scheduling.automaticRestart = true)
	Filter *string `pulumi:"filter"`
	// The google project in which addresses are listed.
	// Defaults to provider's configuration if missing.
	Project *string `pulumi:"project"`
	// Region that should be considered to search addresses.
	// All regions are considered if missing.
	Region *string `pulumi:"region"`
}

// A collection of values returned by getAddresses.
type GetAddressesResult struct {
	// A list of addresses matching the filter. Structure is defined below.
	Addresses []GetAddressesAddress `pulumi:"addresses"`
	Filter    *string               `pulumi:"filter"`
	// The provider-assigned unique ID for this managed resource.
	Id      string `pulumi:"id"`
	Project string `pulumi:"project"`
	// The region in which the address resides.
	Region *string `pulumi:"region"`
}

func GetAddressesOutput(ctx *pulumi.Context, args GetAddressesOutputArgs, opts ...pulumi.InvokeOption) GetAddressesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetAddressesResult, error) {
			args := v.(GetAddressesArgs)
			r, err := GetAddresses(ctx, &args, opts...)
			var s GetAddressesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetAddressesResultOutput)
}

// A collection of arguments for invoking getAddresses.
type GetAddressesOutputArgs struct {
	// A filter expression that
	// filters resources listed in the response. The expression must specify
	// the field name, an operator, and the value that you want to use for
	// filtering. The value must be a string, a number, or a boolean. The
	// operator must be either "=", "!=", ">", "<", "<=", ">=" or ":". For
	// example, if you are filtering Compute Engine instances, you can
	// exclude instances named "example-instance" by specifying "name !=
	// example-instance". The ":" operator can be used with string fields to
	// match substrings. For non-string fields it is equivalent to the "="
	// operator. The ":*" comparison can be used to test whether a key has
	// been defined. For example, to find all objects with "owner" label
	// use: """ labels.owner:* """ You can also filter nested fields. For
	// example, you could specify "scheduling.automaticRestart = false" to
	// include instances only if they are not scheduled for automatic
	// restarts. You can use filtering on nested fields to filter based on
	// resource labels. To filter on multiple expressions, provide each
	// separate expression within parentheses. For example: """
	// (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")
	// """ By default, each expression is an "AND" expression. However, you
	// can include "AND" and "OR" expressions explicitly. For example: """
	// (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell")
	// AND (scheduling.automaticRestart = true)
	Filter pulumi.StringPtrInput `pulumi:"filter"`
	// The google project in which addresses are listed.
	// Defaults to provider's configuration if missing.
	Project pulumi.StringPtrInput `pulumi:"project"`
	// Region that should be considered to search addresses.
	// All regions are considered if missing.
	Region pulumi.StringPtrInput `pulumi:"region"`
}

func (GetAddressesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAddressesArgs)(nil)).Elem()
}

// A collection of values returned by getAddresses.
type GetAddressesResultOutput struct{ *pulumi.OutputState }

func (GetAddressesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAddressesResult)(nil)).Elem()
}

func (o GetAddressesResultOutput) ToGetAddressesResultOutput() GetAddressesResultOutput {
	return o
}

func (o GetAddressesResultOutput) ToGetAddressesResultOutputWithContext(ctx context.Context) GetAddressesResultOutput {
	return o
}

// A list of addresses matching the filter. Structure is defined below.
func (o GetAddressesResultOutput) Addresses() GetAddressesAddressArrayOutput {
	return o.ApplyT(func(v GetAddressesResult) []GetAddressesAddress { return v.Addresses }).(GetAddressesAddressArrayOutput)
}

func (o GetAddressesResultOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAddressesResult) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetAddressesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAddressesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetAddressesResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v GetAddressesResult) string { return v.Project }).(pulumi.StringOutput)
}

// The region in which the address resides.
func (o GetAddressesResultOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAddressesResult) *string { return v.Region }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetAddressesResultOutput{})
}
