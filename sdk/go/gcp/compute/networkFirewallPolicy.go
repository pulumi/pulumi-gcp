// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package compute

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The Compute NetworkFirewallPolicy resource
//
// ## Example Usage
// ### Global
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/compute"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := compute.NewNetworkFirewallPolicy(ctx, "primary", &compute.NetworkFirewallPolicyArgs{
//				Description: pulumi.String("Sample global network firewall policy"),
//				Project:     pulumi.String("my-project-name"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// # NetworkFirewallPolicy can be imported using any of these accepted formats
//
// ```sh
//
//	$ pulumi import gcp:compute/networkFirewallPolicy:NetworkFirewallPolicy default projects/{{project}}/global/firewallPolicies/{{name}}
//
// ```
//
// ```sh
//
//	$ pulumi import gcp:compute/networkFirewallPolicy:NetworkFirewallPolicy default {{project}}/{{name}}
//
// ```
//
// ```sh
//
//	$ pulumi import gcp:compute/networkFirewallPolicy:NetworkFirewallPolicy default {{name}}
//
// ```
type NetworkFirewallPolicy struct {
	pulumi.CustomResourceState

	// Creation timestamp in RFC3339 text format.
	CreationTimestamp pulumi.StringOutput `pulumi:"creationTimestamp"`
	// An optional description of this resource. Provide this property when you create the resource.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Fingerprint of the resource. This field is used internally during updates of this resource.
	Fingerprint pulumi.StringOutput `pulumi:"fingerprint"`
	// User-provided name of the Network firewall policy. The name should be unique in the project in which the firewall policy is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression a-z? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
	//
	// ***
	Name pulumi.StringOutput `pulumi:"name"`
	// The unique identifier for the resource. This identifier is defined by the server.
	NetworkFirewallPolicyId pulumi.StringOutput `pulumi:"networkFirewallPolicyId"`
	// The project for the resource
	Project pulumi.StringOutput `pulumi:"project"`
	// Total count of all firewall policy rule tuples. A firewall policy can not exceed a set number of tuples.
	RuleTupleCount pulumi.IntOutput `pulumi:"ruleTupleCount"`
	// Server-defined URL for the resource.
	SelfLink pulumi.StringOutput `pulumi:"selfLink"`
	// Server-defined URL for this resource with the resource id.
	SelfLinkWithId pulumi.StringOutput `pulumi:"selfLinkWithId"`
}

// NewNetworkFirewallPolicy registers a new resource with the given unique name, arguments, and options.
func NewNetworkFirewallPolicy(ctx *pulumi.Context,
	name string, args *NetworkFirewallPolicyArgs, opts ...pulumi.ResourceOption) (*NetworkFirewallPolicy, error) {
	if args == nil {
		args = &NetworkFirewallPolicyArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource NetworkFirewallPolicy
	err := ctx.RegisterResource("gcp:compute/networkFirewallPolicy:NetworkFirewallPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetworkFirewallPolicy gets an existing NetworkFirewallPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkFirewallPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkFirewallPolicyState, opts ...pulumi.ResourceOption) (*NetworkFirewallPolicy, error) {
	var resource NetworkFirewallPolicy
	err := ctx.ReadResource("gcp:compute/networkFirewallPolicy:NetworkFirewallPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetworkFirewallPolicy resources.
type networkFirewallPolicyState struct {
	// Creation timestamp in RFC3339 text format.
	CreationTimestamp *string `pulumi:"creationTimestamp"`
	// An optional description of this resource. Provide this property when you create the resource.
	Description *string `pulumi:"description"`
	// Fingerprint of the resource. This field is used internally during updates of this resource.
	Fingerprint *string `pulumi:"fingerprint"`
	// User-provided name of the Network firewall policy. The name should be unique in the project in which the firewall policy is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression a-z? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
	//
	// ***
	Name *string `pulumi:"name"`
	// The unique identifier for the resource. This identifier is defined by the server.
	NetworkFirewallPolicyId *string `pulumi:"networkFirewallPolicyId"`
	// The project for the resource
	Project *string `pulumi:"project"`
	// Total count of all firewall policy rule tuples. A firewall policy can not exceed a set number of tuples.
	RuleTupleCount *int `pulumi:"ruleTupleCount"`
	// Server-defined URL for the resource.
	SelfLink *string `pulumi:"selfLink"`
	// Server-defined URL for this resource with the resource id.
	SelfLinkWithId *string `pulumi:"selfLinkWithId"`
}

type NetworkFirewallPolicyState struct {
	// Creation timestamp in RFC3339 text format.
	CreationTimestamp pulumi.StringPtrInput
	// An optional description of this resource. Provide this property when you create the resource.
	Description pulumi.StringPtrInput
	// Fingerprint of the resource. This field is used internally during updates of this resource.
	Fingerprint pulumi.StringPtrInput
	// User-provided name of the Network firewall policy. The name should be unique in the project in which the firewall policy is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression a-z? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
	//
	// ***
	Name pulumi.StringPtrInput
	// The unique identifier for the resource. This identifier is defined by the server.
	NetworkFirewallPolicyId pulumi.StringPtrInput
	// The project for the resource
	Project pulumi.StringPtrInput
	// Total count of all firewall policy rule tuples. A firewall policy can not exceed a set number of tuples.
	RuleTupleCount pulumi.IntPtrInput
	// Server-defined URL for the resource.
	SelfLink pulumi.StringPtrInput
	// Server-defined URL for this resource with the resource id.
	SelfLinkWithId pulumi.StringPtrInput
}

func (NetworkFirewallPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkFirewallPolicyState)(nil)).Elem()
}

type networkFirewallPolicyArgs struct {
	// An optional description of this resource. Provide this property when you create the resource.
	Description *string `pulumi:"description"`
	// User-provided name of the Network firewall policy. The name should be unique in the project in which the firewall policy is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression a-z? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
	//
	// ***
	Name *string `pulumi:"name"`
	// The project for the resource
	Project *string `pulumi:"project"`
}

// The set of arguments for constructing a NetworkFirewallPolicy resource.
type NetworkFirewallPolicyArgs struct {
	// An optional description of this resource. Provide this property when you create the resource.
	Description pulumi.StringPtrInput
	// User-provided name of the Network firewall policy. The name should be unique in the project in which the firewall policy is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression a-z? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
	//
	// ***
	Name pulumi.StringPtrInput
	// The project for the resource
	Project pulumi.StringPtrInput
}

func (NetworkFirewallPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkFirewallPolicyArgs)(nil)).Elem()
}

type NetworkFirewallPolicyInput interface {
	pulumi.Input

	ToNetworkFirewallPolicyOutput() NetworkFirewallPolicyOutput
	ToNetworkFirewallPolicyOutputWithContext(ctx context.Context) NetworkFirewallPolicyOutput
}

func (*NetworkFirewallPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkFirewallPolicy)(nil)).Elem()
}

func (i *NetworkFirewallPolicy) ToNetworkFirewallPolicyOutput() NetworkFirewallPolicyOutput {
	return i.ToNetworkFirewallPolicyOutputWithContext(context.Background())
}

func (i *NetworkFirewallPolicy) ToNetworkFirewallPolicyOutputWithContext(ctx context.Context) NetworkFirewallPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkFirewallPolicyOutput)
}

// NetworkFirewallPolicyArrayInput is an input type that accepts NetworkFirewallPolicyArray and NetworkFirewallPolicyArrayOutput values.
// You can construct a concrete instance of `NetworkFirewallPolicyArrayInput` via:
//
//	NetworkFirewallPolicyArray{ NetworkFirewallPolicyArgs{...} }
type NetworkFirewallPolicyArrayInput interface {
	pulumi.Input

	ToNetworkFirewallPolicyArrayOutput() NetworkFirewallPolicyArrayOutput
	ToNetworkFirewallPolicyArrayOutputWithContext(context.Context) NetworkFirewallPolicyArrayOutput
}

type NetworkFirewallPolicyArray []NetworkFirewallPolicyInput

func (NetworkFirewallPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkFirewallPolicy)(nil)).Elem()
}

func (i NetworkFirewallPolicyArray) ToNetworkFirewallPolicyArrayOutput() NetworkFirewallPolicyArrayOutput {
	return i.ToNetworkFirewallPolicyArrayOutputWithContext(context.Background())
}

func (i NetworkFirewallPolicyArray) ToNetworkFirewallPolicyArrayOutputWithContext(ctx context.Context) NetworkFirewallPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkFirewallPolicyArrayOutput)
}

// NetworkFirewallPolicyMapInput is an input type that accepts NetworkFirewallPolicyMap and NetworkFirewallPolicyMapOutput values.
// You can construct a concrete instance of `NetworkFirewallPolicyMapInput` via:
//
//	NetworkFirewallPolicyMap{ "key": NetworkFirewallPolicyArgs{...} }
type NetworkFirewallPolicyMapInput interface {
	pulumi.Input

	ToNetworkFirewallPolicyMapOutput() NetworkFirewallPolicyMapOutput
	ToNetworkFirewallPolicyMapOutputWithContext(context.Context) NetworkFirewallPolicyMapOutput
}

type NetworkFirewallPolicyMap map[string]NetworkFirewallPolicyInput

func (NetworkFirewallPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkFirewallPolicy)(nil)).Elem()
}

func (i NetworkFirewallPolicyMap) ToNetworkFirewallPolicyMapOutput() NetworkFirewallPolicyMapOutput {
	return i.ToNetworkFirewallPolicyMapOutputWithContext(context.Background())
}

func (i NetworkFirewallPolicyMap) ToNetworkFirewallPolicyMapOutputWithContext(ctx context.Context) NetworkFirewallPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkFirewallPolicyMapOutput)
}

type NetworkFirewallPolicyOutput struct{ *pulumi.OutputState }

func (NetworkFirewallPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkFirewallPolicy)(nil)).Elem()
}

func (o NetworkFirewallPolicyOutput) ToNetworkFirewallPolicyOutput() NetworkFirewallPolicyOutput {
	return o
}

func (o NetworkFirewallPolicyOutput) ToNetworkFirewallPolicyOutputWithContext(ctx context.Context) NetworkFirewallPolicyOutput {
	return o
}

// Creation timestamp in RFC3339 text format.
func (o NetworkFirewallPolicyOutput) CreationTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkFirewallPolicy) pulumi.StringOutput { return v.CreationTimestamp }).(pulumi.StringOutput)
}

// An optional description of this resource. Provide this property when you create the resource.
func (o NetworkFirewallPolicyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkFirewallPolicy) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Fingerprint of the resource. This field is used internally during updates of this resource.
func (o NetworkFirewallPolicyOutput) Fingerprint() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkFirewallPolicy) pulumi.StringOutput { return v.Fingerprint }).(pulumi.StringOutput)
}

// User-provided name of the Network firewall policy. The name should be unique in the project in which the firewall policy is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression a-z? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
//
// ***
func (o NetworkFirewallPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkFirewallPolicy) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The unique identifier for the resource. This identifier is defined by the server.
func (o NetworkFirewallPolicyOutput) NetworkFirewallPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkFirewallPolicy) pulumi.StringOutput { return v.NetworkFirewallPolicyId }).(pulumi.StringOutput)
}

// The project for the resource
func (o NetworkFirewallPolicyOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkFirewallPolicy) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Total count of all firewall policy rule tuples. A firewall policy can not exceed a set number of tuples.
func (o NetworkFirewallPolicyOutput) RuleTupleCount() pulumi.IntOutput {
	return o.ApplyT(func(v *NetworkFirewallPolicy) pulumi.IntOutput { return v.RuleTupleCount }).(pulumi.IntOutput)
}

// Server-defined URL for the resource.
func (o NetworkFirewallPolicyOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkFirewallPolicy) pulumi.StringOutput { return v.SelfLink }).(pulumi.StringOutput)
}

// Server-defined URL for this resource with the resource id.
func (o NetworkFirewallPolicyOutput) SelfLinkWithId() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkFirewallPolicy) pulumi.StringOutput { return v.SelfLinkWithId }).(pulumi.StringOutput)
}

type NetworkFirewallPolicyArrayOutput struct{ *pulumi.OutputState }

func (NetworkFirewallPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkFirewallPolicy)(nil)).Elem()
}

func (o NetworkFirewallPolicyArrayOutput) ToNetworkFirewallPolicyArrayOutput() NetworkFirewallPolicyArrayOutput {
	return o
}

func (o NetworkFirewallPolicyArrayOutput) ToNetworkFirewallPolicyArrayOutputWithContext(ctx context.Context) NetworkFirewallPolicyArrayOutput {
	return o
}

func (o NetworkFirewallPolicyArrayOutput) Index(i pulumi.IntInput) NetworkFirewallPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NetworkFirewallPolicy {
		return vs[0].([]*NetworkFirewallPolicy)[vs[1].(int)]
	}).(NetworkFirewallPolicyOutput)
}

type NetworkFirewallPolicyMapOutput struct{ *pulumi.OutputState }

func (NetworkFirewallPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkFirewallPolicy)(nil)).Elem()
}

func (o NetworkFirewallPolicyMapOutput) ToNetworkFirewallPolicyMapOutput() NetworkFirewallPolicyMapOutput {
	return o
}

func (o NetworkFirewallPolicyMapOutput) ToNetworkFirewallPolicyMapOutputWithContext(ctx context.Context) NetworkFirewallPolicyMapOutput {
	return o
}

func (o NetworkFirewallPolicyMapOutput) MapIndex(k pulumi.StringInput) NetworkFirewallPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NetworkFirewallPolicy {
		return vs[0].(map[string]*NetworkFirewallPolicy)[vs[1].(string)]
	}).(NetworkFirewallPolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkFirewallPolicyInput)(nil)).Elem(), &NetworkFirewallPolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkFirewallPolicyArrayInput)(nil)).Elem(), NetworkFirewallPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkFirewallPolicyMapInput)(nil)).Elem(), NetworkFirewallPolicyMap{})
	pulumi.RegisterOutputType(NetworkFirewallPolicyOutput{})
	pulumi.RegisterOutputType(NetworkFirewallPolicyArrayOutput{})
	pulumi.RegisterOutputType(NetworkFirewallPolicyMapOutput{})
}
