// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package compute

import (
	"context"
	"errors"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get information about a HealthCheck.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/compute"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := compute.LookupHealthCheck(ctx, &compute.LookupHealthCheckArgs{
//				Name: "my-hc",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupHealthCheck(ctx *pulumi.Context, args *LookupHealthCheckArgs, opts ...pulumi.InvokeOption) (*LookupHealthCheckResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	invokeOpts, optsErr := pulumi.NewInvokeOptions(opts...)
	if optsErr != nil {
		return &LookupHealthCheckResult{}, optsErr
	}
	if len(invokeOpts.DependsOn) > 0 {
		return &LookupHealthCheckResult{}, errors.New("DependsOn is not supported for direct form invoke LookupHealthCheck, use LookupHealthCheckOutput instead")
	}
	if len(invokeOpts.DependsOnInputs) > 0 {
		return &LookupHealthCheckResult{}, errors.New("DependsOnInputs is not supported for direct form invoke LookupHealthCheck, use LookupHealthCheckOutput instead")
	}
	var rv LookupHealthCheckResult
	err := ctx.Invoke("gcp:compute/getHealthCheck:getHealthCheck", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getHealthCheck.
type LookupHealthCheckArgs struct {
	// Name of the resource.
	//
	// ***
	Name string `pulumi:"name"`
	// The ID of the project in which the resource belongs. If it
	// is not provided, the provider project is used.
	Project *string `pulumi:"project"`
}

// A collection of values returned by getHealthCheck.
type LookupHealthCheckResult struct {
	CheckIntervalSec  int                              `pulumi:"checkIntervalSec"`
	CreationTimestamp string                           `pulumi:"creationTimestamp"`
	Description       string                           `pulumi:"description"`
	GrpcHealthChecks  []GetHealthCheckGrpcHealthCheck  `pulumi:"grpcHealthChecks"`
	HealthyThreshold  int                              `pulumi:"healthyThreshold"`
	Http2HealthChecks []GetHealthCheckHttp2HealthCheck `pulumi:"http2HealthChecks"`
	HttpHealthChecks  []GetHealthCheckHttpHealthCheck  `pulumi:"httpHealthChecks"`
	HttpsHealthChecks []GetHealthCheckHttpsHealthCheck `pulumi:"httpsHealthChecks"`
	// The provider-assigned unique ID for this managed resource.
	Id                 string                         `pulumi:"id"`
	LogConfigs         []GetHealthCheckLogConfig      `pulumi:"logConfigs"`
	Name               string                         `pulumi:"name"`
	Project            *string                        `pulumi:"project"`
	SelfLink           string                         `pulumi:"selfLink"`
	SourceRegions      []string                       `pulumi:"sourceRegions"`
	SslHealthChecks    []GetHealthCheckSslHealthCheck `pulumi:"sslHealthChecks"`
	TcpHealthChecks    []GetHealthCheckTcpHealthCheck `pulumi:"tcpHealthChecks"`
	TimeoutSec         int                            `pulumi:"timeoutSec"`
	Type               string                         `pulumi:"type"`
	UnhealthyThreshold int                            `pulumi:"unhealthyThreshold"`
}

func LookupHealthCheckOutput(ctx *pulumi.Context, args LookupHealthCheckOutputArgs, opts ...pulumi.InvokeOption) LookupHealthCheckResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupHealthCheckResultOutput, error) {
			args := v.(LookupHealthCheckArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupHealthCheckResult
			secret, deps, err := ctx.InvokePackageRawWithDeps("gcp:compute/getHealthCheck:getHealthCheck", args, &rv, "", opts...)
			if err != nil {
				return LookupHealthCheckResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupHealthCheckResultOutput)
			output = pulumi.OutputWithDependencies(ctx.Context(), output, deps...).(LookupHealthCheckResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupHealthCheckResultOutput), nil
			}
			return output, nil
		}).(LookupHealthCheckResultOutput)
}

// A collection of arguments for invoking getHealthCheck.
type LookupHealthCheckOutputArgs struct {
	// Name of the resource.
	//
	// ***
	Name pulumi.StringInput `pulumi:"name"`
	// The ID of the project in which the resource belongs. If it
	// is not provided, the provider project is used.
	Project pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupHealthCheckOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupHealthCheckArgs)(nil)).Elem()
}

// A collection of values returned by getHealthCheck.
type LookupHealthCheckResultOutput struct{ *pulumi.OutputState }

func (LookupHealthCheckResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupHealthCheckResult)(nil)).Elem()
}

func (o LookupHealthCheckResultOutput) ToLookupHealthCheckResultOutput() LookupHealthCheckResultOutput {
	return o
}

func (o LookupHealthCheckResultOutput) ToLookupHealthCheckResultOutputWithContext(ctx context.Context) LookupHealthCheckResultOutput {
	return o
}

func (o LookupHealthCheckResultOutput) CheckIntervalSec() pulumi.IntOutput {
	return o.ApplyT(func(v LookupHealthCheckResult) int { return v.CheckIntervalSec }).(pulumi.IntOutput)
}

func (o LookupHealthCheckResultOutput) CreationTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHealthCheckResult) string { return v.CreationTimestamp }).(pulumi.StringOutput)
}

func (o LookupHealthCheckResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHealthCheckResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupHealthCheckResultOutput) GrpcHealthChecks() GetHealthCheckGrpcHealthCheckArrayOutput {
	return o.ApplyT(func(v LookupHealthCheckResult) []GetHealthCheckGrpcHealthCheck { return v.GrpcHealthChecks }).(GetHealthCheckGrpcHealthCheckArrayOutput)
}

func (o LookupHealthCheckResultOutput) HealthyThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v LookupHealthCheckResult) int { return v.HealthyThreshold }).(pulumi.IntOutput)
}

func (o LookupHealthCheckResultOutput) Http2HealthChecks() GetHealthCheckHttp2HealthCheckArrayOutput {
	return o.ApplyT(func(v LookupHealthCheckResult) []GetHealthCheckHttp2HealthCheck { return v.Http2HealthChecks }).(GetHealthCheckHttp2HealthCheckArrayOutput)
}

func (o LookupHealthCheckResultOutput) HttpHealthChecks() GetHealthCheckHttpHealthCheckArrayOutput {
	return o.ApplyT(func(v LookupHealthCheckResult) []GetHealthCheckHttpHealthCheck { return v.HttpHealthChecks }).(GetHealthCheckHttpHealthCheckArrayOutput)
}

func (o LookupHealthCheckResultOutput) HttpsHealthChecks() GetHealthCheckHttpsHealthCheckArrayOutput {
	return o.ApplyT(func(v LookupHealthCheckResult) []GetHealthCheckHttpsHealthCheck { return v.HttpsHealthChecks }).(GetHealthCheckHttpsHealthCheckArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupHealthCheckResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHealthCheckResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupHealthCheckResultOutput) LogConfigs() GetHealthCheckLogConfigArrayOutput {
	return o.ApplyT(func(v LookupHealthCheckResult) []GetHealthCheckLogConfig { return v.LogConfigs }).(GetHealthCheckLogConfigArrayOutput)
}

func (o LookupHealthCheckResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHealthCheckResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupHealthCheckResultOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupHealthCheckResult) *string { return v.Project }).(pulumi.StringPtrOutput)
}

func (o LookupHealthCheckResultOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHealthCheckResult) string { return v.SelfLink }).(pulumi.StringOutput)
}

func (o LookupHealthCheckResultOutput) SourceRegions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupHealthCheckResult) []string { return v.SourceRegions }).(pulumi.StringArrayOutput)
}

func (o LookupHealthCheckResultOutput) SslHealthChecks() GetHealthCheckSslHealthCheckArrayOutput {
	return o.ApplyT(func(v LookupHealthCheckResult) []GetHealthCheckSslHealthCheck { return v.SslHealthChecks }).(GetHealthCheckSslHealthCheckArrayOutput)
}

func (o LookupHealthCheckResultOutput) TcpHealthChecks() GetHealthCheckTcpHealthCheckArrayOutput {
	return o.ApplyT(func(v LookupHealthCheckResult) []GetHealthCheckTcpHealthCheck { return v.TcpHealthChecks }).(GetHealthCheckTcpHealthCheckArrayOutput)
}

func (o LookupHealthCheckResultOutput) TimeoutSec() pulumi.IntOutput {
	return o.ApplyT(func(v LookupHealthCheckResult) int { return v.TimeoutSec }).(pulumi.IntOutput)
}

func (o LookupHealthCheckResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHealthCheckResult) string { return v.Type }).(pulumi.StringOutput)
}

func (o LookupHealthCheckResultOutput) UnhealthyThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v LookupHealthCheckResult) int { return v.UnhealthyThreshold }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupHealthCheckResultOutput{})
}
