// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package compute

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provide access to a Backend Service's attribute. For more information
// see [the official documentation](https://cloud.google.com/compute/docs/load-balancing/http/backend-service)
// and the [API](https://cloud.google.com/compute/docs/reference/latest/backendServices).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/compute"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			baz, err := compute.LookupBackendService(ctx, &compute.LookupBackendServiceArgs{
//				Name: "foobar",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = compute.NewBackendService(ctx, "default", &compute.BackendServiceArgs{
//				Name:         pulumi.String("backend-service"),
//				HealthChecks: pulumi.String(baz.HealthChecks[0]),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupBackendService(ctx *pulumi.Context, args *LookupBackendServiceArgs, opts ...pulumi.InvokeOption) (*LookupBackendServiceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupBackendServiceResult
	err := ctx.Invoke("gcp:compute/getBackendService:getBackendService", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBackendService.
type LookupBackendServiceArgs struct {
	// The name of the Backend Service.
	//
	// ***
	Name string `pulumi:"name"`
	// The project in which the resource belongs. If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
}

// A collection of values returned by getBackendService.
type LookupBackendServiceResult struct {
	AffinityCookieTtlSec int `pulumi:"affinityCookieTtlSec"`
	// The set of backends that serve this Backend Service.
	Backends        []GetBackendServiceBackend        `pulumi:"backends"`
	CdnPolicies     []GetBackendServiceCdnPolicy      `pulumi:"cdnPolicies"`
	CircuitBreakers []GetBackendServiceCircuitBreaker `pulumi:"circuitBreakers"`
	CompressionMode string                            `pulumi:"compressionMode"`
	// Time for which instance will be drained (not accept new connections, but still work to finish started ones).
	ConnectionDrainingTimeoutSec int                               `pulumi:"connectionDrainingTimeoutSec"`
	ConsistentHash               []GetBackendServiceConsistentHash `pulumi:"consistentHash"`
	CreationTimestamp            string                            `pulumi:"creationTimestamp"`
	CustomMetrics                []GetBackendServiceCustomMetric   `pulumi:"customMetrics"`
	CustomRequestHeaders         []string                          `pulumi:"customRequestHeaders"`
	CustomResponseHeaders        []string                          `pulumi:"customResponseHeaders"`
	// Textual description for the Backend Service.
	Description        string                               `pulumi:"description"`
	DynamicForwardings []GetBackendServiceDynamicForwarding `pulumi:"dynamicForwardings"`
	EdgeSecurityPolicy string                               `pulumi:"edgeSecurityPolicy"`
	// Whether or not Cloud CDN is enabled on the Backend Service.
	EnableCdn                                 bool    `pulumi:"enableCdn"`
	ExternalManagedMigrationState             string  `pulumi:"externalManagedMigrationState"`
	ExternalManagedMigrationTestingPercentage float64 `pulumi:"externalManagedMigrationTestingPercentage"`
	// The fingerprint of the Backend Service.
	Fingerprint string `pulumi:"fingerprint"`
	// The unique identifier for the resource. This identifier is defined by the server.
	GeneratedId int `pulumi:"generatedId"`
	// The set of HTTP/HTTPS health checks used by the Backend Service.
	HealthChecks []string               `pulumi:"healthChecks"`
	Iaps         []GetBackendServiceIap `pulumi:"iaps"`
	// The provider-assigned unique ID for this managed resource.
	Id                                  string                                               `pulumi:"id"`
	IpAddressSelectionPolicy            string                                               `pulumi:"ipAddressSelectionPolicy"`
	LoadBalancingScheme                 string                                               `pulumi:"loadBalancingScheme"`
	LocalityLbPolicies                  []GetBackendServiceLocalityLbPolicy                  `pulumi:"localityLbPolicies"`
	LocalityLbPolicy                    string                                               `pulumi:"localityLbPolicy"`
	LogConfigs                          []GetBackendServiceLogConfig                         `pulumi:"logConfigs"`
	MaxStreamDurations                  []GetBackendServiceMaxStreamDuration                 `pulumi:"maxStreamDurations"`
	Name                                string                                               `pulumi:"name"`
	NetworkPassThroughLbTrafficPolicies []GetBackendServiceNetworkPassThroughLbTrafficPolicy `pulumi:"networkPassThroughLbTrafficPolicies"`
	OutlierDetections                   []GetBackendServiceOutlierDetection                  `pulumi:"outlierDetections"`
	Params                              []GetBackendServiceParam                             `pulumi:"params"`
	// The name of a service that has been added to an instance group in this backend.
	PortName string  `pulumi:"portName"`
	Project  *string `pulumi:"project"`
	// The protocol for incoming requests.
	Protocol         string                             `pulumi:"protocol"`
	SecurityPolicy   string                             `pulumi:"securityPolicy"`
	SecuritySettings []GetBackendServiceSecuritySetting `pulumi:"securitySettings"`
	// The URI of the Backend Service.
	SelfLink        string `pulumi:"selfLink"`
	ServiceLbPolicy string `pulumi:"serviceLbPolicy"`
	// The Backend Service session stickiness configuration.
	SessionAffinity              string                                        `pulumi:"sessionAffinity"`
	StrongSessionAffinityCookies []GetBackendServiceStrongSessionAffinityCooky `pulumi:"strongSessionAffinityCookies"`
	// The number of seconds to wait for a backend to respond to a request before considering the request failed.
	TimeoutSec  int                           `pulumi:"timeoutSec"`
	TlsSettings []GetBackendServiceTlsSetting `pulumi:"tlsSettings"`
}

func LookupBackendServiceOutput(ctx *pulumi.Context, args LookupBackendServiceOutputArgs, opts ...pulumi.InvokeOption) LookupBackendServiceResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupBackendServiceResultOutput, error) {
			args := v.(LookupBackendServiceArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("gcp:compute/getBackendService:getBackendService", args, LookupBackendServiceResultOutput{}, options).(LookupBackendServiceResultOutput), nil
		}).(LookupBackendServiceResultOutput)
}

// A collection of arguments for invoking getBackendService.
type LookupBackendServiceOutputArgs struct {
	// The name of the Backend Service.
	//
	// ***
	Name pulumi.StringInput `pulumi:"name"`
	// The project in which the resource belongs. If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupBackendServiceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBackendServiceArgs)(nil)).Elem()
}

// A collection of values returned by getBackendService.
type LookupBackendServiceResultOutput struct{ *pulumi.OutputState }

func (LookupBackendServiceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBackendServiceResult)(nil)).Elem()
}

func (o LookupBackendServiceResultOutput) ToLookupBackendServiceResultOutput() LookupBackendServiceResultOutput {
	return o
}

func (o LookupBackendServiceResultOutput) ToLookupBackendServiceResultOutputWithContext(ctx context.Context) LookupBackendServiceResultOutput {
	return o
}

func (o LookupBackendServiceResultOutput) AffinityCookieTtlSec() pulumi.IntOutput {
	return o.ApplyT(func(v LookupBackendServiceResult) int { return v.AffinityCookieTtlSec }).(pulumi.IntOutput)
}

// The set of backends that serve this Backend Service.
func (o LookupBackendServiceResultOutput) Backends() GetBackendServiceBackendArrayOutput {
	return o.ApplyT(func(v LookupBackendServiceResult) []GetBackendServiceBackend { return v.Backends }).(GetBackendServiceBackendArrayOutput)
}

func (o LookupBackendServiceResultOutput) CdnPolicies() GetBackendServiceCdnPolicyArrayOutput {
	return o.ApplyT(func(v LookupBackendServiceResult) []GetBackendServiceCdnPolicy { return v.CdnPolicies }).(GetBackendServiceCdnPolicyArrayOutput)
}

func (o LookupBackendServiceResultOutput) CircuitBreakers() GetBackendServiceCircuitBreakerArrayOutput {
	return o.ApplyT(func(v LookupBackendServiceResult) []GetBackendServiceCircuitBreaker { return v.CircuitBreakers }).(GetBackendServiceCircuitBreakerArrayOutput)
}

func (o LookupBackendServiceResultOutput) CompressionMode() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackendServiceResult) string { return v.CompressionMode }).(pulumi.StringOutput)
}

// Time for which instance will be drained (not accept new connections, but still work to finish started ones).
func (o LookupBackendServiceResultOutput) ConnectionDrainingTimeoutSec() pulumi.IntOutput {
	return o.ApplyT(func(v LookupBackendServiceResult) int { return v.ConnectionDrainingTimeoutSec }).(pulumi.IntOutput)
}

func (o LookupBackendServiceResultOutput) ConsistentHash() GetBackendServiceConsistentHashArrayOutput {
	return o.ApplyT(func(v LookupBackendServiceResult) []GetBackendServiceConsistentHash { return v.ConsistentHash }).(GetBackendServiceConsistentHashArrayOutput)
}

func (o LookupBackendServiceResultOutput) CreationTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackendServiceResult) string { return v.CreationTimestamp }).(pulumi.StringOutput)
}

func (o LookupBackendServiceResultOutput) CustomMetrics() GetBackendServiceCustomMetricArrayOutput {
	return o.ApplyT(func(v LookupBackendServiceResult) []GetBackendServiceCustomMetric { return v.CustomMetrics }).(GetBackendServiceCustomMetricArrayOutput)
}

func (o LookupBackendServiceResultOutput) CustomRequestHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupBackendServiceResult) []string { return v.CustomRequestHeaders }).(pulumi.StringArrayOutput)
}

func (o LookupBackendServiceResultOutput) CustomResponseHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupBackendServiceResult) []string { return v.CustomResponseHeaders }).(pulumi.StringArrayOutput)
}

// Textual description for the Backend Service.
func (o LookupBackendServiceResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackendServiceResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupBackendServiceResultOutput) DynamicForwardings() GetBackendServiceDynamicForwardingArrayOutput {
	return o.ApplyT(func(v LookupBackendServiceResult) []GetBackendServiceDynamicForwarding { return v.DynamicForwardings }).(GetBackendServiceDynamicForwardingArrayOutput)
}

func (o LookupBackendServiceResultOutput) EdgeSecurityPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackendServiceResult) string { return v.EdgeSecurityPolicy }).(pulumi.StringOutput)
}

// Whether or not Cloud CDN is enabled on the Backend Service.
func (o LookupBackendServiceResultOutput) EnableCdn() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupBackendServiceResult) bool { return v.EnableCdn }).(pulumi.BoolOutput)
}

func (o LookupBackendServiceResultOutput) ExternalManagedMigrationState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackendServiceResult) string { return v.ExternalManagedMigrationState }).(pulumi.StringOutput)
}

func (o LookupBackendServiceResultOutput) ExternalManagedMigrationTestingPercentage() pulumi.Float64Output {
	return o.ApplyT(func(v LookupBackendServiceResult) float64 { return v.ExternalManagedMigrationTestingPercentage }).(pulumi.Float64Output)
}

// The fingerprint of the Backend Service.
func (o LookupBackendServiceResultOutput) Fingerprint() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackendServiceResult) string { return v.Fingerprint }).(pulumi.StringOutput)
}

// The unique identifier for the resource. This identifier is defined by the server.
func (o LookupBackendServiceResultOutput) GeneratedId() pulumi.IntOutput {
	return o.ApplyT(func(v LookupBackendServiceResult) int { return v.GeneratedId }).(pulumi.IntOutput)
}

// The set of HTTP/HTTPS health checks used by the Backend Service.
func (o LookupBackendServiceResultOutput) HealthChecks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupBackendServiceResult) []string { return v.HealthChecks }).(pulumi.StringArrayOutput)
}

func (o LookupBackendServiceResultOutput) Iaps() GetBackendServiceIapArrayOutput {
	return o.ApplyT(func(v LookupBackendServiceResult) []GetBackendServiceIap { return v.Iaps }).(GetBackendServiceIapArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupBackendServiceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackendServiceResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupBackendServiceResultOutput) IpAddressSelectionPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackendServiceResult) string { return v.IpAddressSelectionPolicy }).(pulumi.StringOutput)
}

func (o LookupBackendServiceResultOutput) LoadBalancingScheme() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackendServiceResult) string { return v.LoadBalancingScheme }).(pulumi.StringOutput)
}

func (o LookupBackendServiceResultOutput) LocalityLbPolicies() GetBackendServiceLocalityLbPolicyArrayOutput {
	return o.ApplyT(func(v LookupBackendServiceResult) []GetBackendServiceLocalityLbPolicy { return v.LocalityLbPolicies }).(GetBackendServiceLocalityLbPolicyArrayOutput)
}

func (o LookupBackendServiceResultOutput) LocalityLbPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackendServiceResult) string { return v.LocalityLbPolicy }).(pulumi.StringOutput)
}

func (o LookupBackendServiceResultOutput) LogConfigs() GetBackendServiceLogConfigArrayOutput {
	return o.ApplyT(func(v LookupBackendServiceResult) []GetBackendServiceLogConfig { return v.LogConfigs }).(GetBackendServiceLogConfigArrayOutput)
}

func (o LookupBackendServiceResultOutput) MaxStreamDurations() GetBackendServiceMaxStreamDurationArrayOutput {
	return o.ApplyT(func(v LookupBackendServiceResult) []GetBackendServiceMaxStreamDuration { return v.MaxStreamDurations }).(GetBackendServiceMaxStreamDurationArrayOutput)
}

func (o LookupBackendServiceResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackendServiceResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupBackendServiceResultOutput) NetworkPassThroughLbTrafficPolicies() GetBackendServiceNetworkPassThroughLbTrafficPolicyArrayOutput {
	return o.ApplyT(func(v LookupBackendServiceResult) []GetBackendServiceNetworkPassThroughLbTrafficPolicy {
		return v.NetworkPassThroughLbTrafficPolicies
	}).(GetBackendServiceNetworkPassThroughLbTrafficPolicyArrayOutput)
}

func (o LookupBackendServiceResultOutput) OutlierDetections() GetBackendServiceOutlierDetectionArrayOutput {
	return o.ApplyT(func(v LookupBackendServiceResult) []GetBackendServiceOutlierDetection { return v.OutlierDetections }).(GetBackendServiceOutlierDetectionArrayOutput)
}

func (o LookupBackendServiceResultOutput) Params() GetBackendServiceParamArrayOutput {
	return o.ApplyT(func(v LookupBackendServiceResult) []GetBackendServiceParam { return v.Params }).(GetBackendServiceParamArrayOutput)
}

// The name of a service that has been added to an instance group in this backend.
func (o LookupBackendServiceResultOutput) PortName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackendServiceResult) string { return v.PortName }).(pulumi.StringOutput)
}

func (o LookupBackendServiceResultOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupBackendServiceResult) *string { return v.Project }).(pulumi.StringPtrOutput)
}

// The protocol for incoming requests.
func (o LookupBackendServiceResultOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackendServiceResult) string { return v.Protocol }).(pulumi.StringOutput)
}

func (o LookupBackendServiceResultOutput) SecurityPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackendServiceResult) string { return v.SecurityPolicy }).(pulumi.StringOutput)
}

func (o LookupBackendServiceResultOutput) SecuritySettings() GetBackendServiceSecuritySettingArrayOutput {
	return o.ApplyT(func(v LookupBackendServiceResult) []GetBackendServiceSecuritySetting { return v.SecuritySettings }).(GetBackendServiceSecuritySettingArrayOutput)
}

// The URI of the Backend Service.
func (o LookupBackendServiceResultOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackendServiceResult) string { return v.SelfLink }).(pulumi.StringOutput)
}

func (o LookupBackendServiceResultOutput) ServiceLbPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackendServiceResult) string { return v.ServiceLbPolicy }).(pulumi.StringOutput)
}

// The Backend Service session stickiness configuration.
func (o LookupBackendServiceResultOutput) SessionAffinity() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackendServiceResult) string { return v.SessionAffinity }).(pulumi.StringOutput)
}

func (o LookupBackendServiceResultOutput) StrongSessionAffinityCookies() GetBackendServiceStrongSessionAffinityCookyArrayOutput {
	return o.ApplyT(func(v LookupBackendServiceResult) []GetBackendServiceStrongSessionAffinityCooky {
		return v.StrongSessionAffinityCookies
	}).(GetBackendServiceStrongSessionAffinityCookyArrayOutput)
}

// The number of seconds to wait for a backend to respond to a request before considering the request failed.
func (o LookupBackendServiceResultOutput) TimeoutSec() pulumi.IntOutput {
	return o.ApplyT(func(v LookupBackendServiceResult) int { return v.TimeoutSec }).(pulumi.IntOutput)
}

func (o LookupBackendServiceResultOutput) TlsSettings() GetBackendServiceTlsSettingArrayOutput {
	return o.ApplyT(func(v LookupBackendServiceResult) []GetBackendServiceTlsSetting { return v.TlsSettings }).(GetBackendServiceTlsSettingArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupBackendServiceResultOutput{})
}
