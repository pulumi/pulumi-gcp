// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package compute

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Represents a RegionTargetHttpsProxy resource, which is used by one or more
// forwarding rules to route incoming HTTPS requests to a URL map.
//
// To get more information about RegionTargetHttpsProxy, see:
//
// * [API documentation](https://cloud.google.com/compute/docs/reference/rest/v1/regionTargetHttpsProxies)
// * How-to Guides
//   - [Official Documentation](https://cloud.google.com/compute/docs/load-balancing/http/target-proxies)
//
// ## Example Usage
//
// ## Import
//
// RegionTargetHttpsProxy can be imported using any of these accepted formats:
//
// * `projects/{{project}}/regions/{{region}}/targetHttpsProxies/{{name}}`
//
// * `{{project}}/{{region}}/{{name}}`
//
// * `{{region}}/{{name}}`
//
// * `{{name}}`
//
// When using the `pulumi import` command, RegionTargetHttpsProxy can be imported using one of the formats above. For example:
//
// ```sh
// $ pulumi import gcp:compute/regionTargetHttpsProxy:RegionTargetHttpsProxy default projects/{{project}}/regions/{{region}}/targetHttpsProxies/{{name}}
// ```
//
// ```sh
// $ pulumi import gcp:compute/regionTargetHttpsProxy:RegionTargetHttpsProxy default {{project}}/{{region}}/{{name}}
// ```
//
// ```sh
// $ pulumi import gcp:compute/regionTargetHttpsProxy:RegionTargetHttpsProxy default {{region}}/{{name}}
// ```
//
// ```sh
// $ pulumi import gcp:compute/regionTargetHttpsProxy:RegionTargetHttpsProxy default {{name}}
// ```
type RegionTargetHttpsProxy struct {
	pulumi.CustomResourceState

	// URLs to certificate manager certificate resources that are used to authenticate connections between users and the load balancer.
	// sslCertificates and certificateManagerCertificates can't be defined together.
	// Accepted format is `//certificatemanager.googleapis.com/projects/{project}/locations/{location}/certificates/{resourceName}` or just the selfLink `projects/{project}/locations/{location}/certificates/{resourceName}`
	CertificateManagerCertificates pulumi.StringArrayOutput `pulumi:"certificateManagerCertificates"`
	// Creation timestamp in RFC3339 text format.
	CreationTimestamp pulumi.StringOutput `pulumi:"creationTimestamp"`
	// An optional description of this resource.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Specifies how long to keep a connection open, after completing a response,
	// while there is no matching traffic (in seconds). If an HTTP keepalive is
	// not specified, a default value (600 seconds) will be used. For Regioanl
	// HTTP(S) load balancer, the minimum allowed value is 5 seconds and the
	// maximum allowed value is 600 seconds.
	HttpKeepAliveTimeoutSec pulumi.IntPtrOutput `pulumi:"httpKeepAliveTimeoutSec"`
	// Name of the resource. Provided by the client when the resource is
	// created. The name must be 1-63 characters long, and comply with
	// RFC1035. Specifically, the name must be 1-63 characters long and match
	// the regular expression `a-z?` which means the
	// first character must be a lowercase letter, and all following
	// characters must be a dash, lowercase letter, or digit, except the last
	// character, which cannot be a dash.
	Name pulumi.StringOutput `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
	// The unique identifier for the resource.
	ProxyId pulumi.IntOutput `pulumi:"proxyId"`
	// The Region in which the created target https proxy should reside.
	// If it is not provided, the provider region is used.
	Region pulumi.StringOutput `pulumi:"region"`
	// The URI of the created resource.
	SelfLink pulumi.StringOutput `pulumi:"selfLink"`
	// A URL referring to a networksecurity.ServerTlsPolicy
	// resource that describes how the proxy should authenticate inbound
	// traffic. serverTlsPolicy only applies to a global TargetHttpsProxy
	// attached to globalForwardingRules with the loadBalancingScheme
	// set to INTERNAL_SELF_MANAGED or EXTERNAL or EXTERNAL_MANAGED.
	// For details which ServerTlsPolicy resources are accepted with
	// INTERNAL_SELF_MANAGED and which with EXTERNAL, EXTERNAL_MANAGED
	// loadBalancingScheme consult ServerTlsPolicy documentation.
	// If left blank, communications are not encrypted.
	// If you remove this field from your configuration at the same time as
	// deleting or recreating a referenced ServerTlsPolicy resource, you will
	// receive a resourceInUseByAnotherResource error. Use lifecycle.create_before_destroy
	// within the ServerTlsPolicy resource to avoid this.
	ServerTlsPolicy pulumi.StringPtrOutput `pulumi:"serverTlsPolicy"`
	// URLs to SslCertificate resources that are used to authenticate connections between users and the load balancer.
	// At least one SSL certificate must be specified. Currently, you may specify up to 15 SSL certificates.
	// sslCertificates do not apply when the load balancing scheme is set to INTERNAL_SELF_MANAGED.
	SslCertificates pulumi.StringArrayOutput `pulumi:"sslCertificates"`
	// A reference to the Region SslPolicy resource that will be associated with
	// the TargetHttpsProxy resource. If not set, the TargetHttpsProxy
	// resource will not have any SSL policy configured.
	SslPolicy pulumi.StringPtrOutput `pulumi:"sslPolicy"`
	// A reference to the RegionUrlMap resource that defines the mapping from URL
	// to the RegionBackendService.
	//
	// ***
	UrlMap pulumi.StringOutput `pulumi:"urlMap"`
}

// NewRegionTargetHttpsProxy registers a new resource with the given unique name, arguments, and options.
func NewRegionTargetHttpsProxy(ctx *pulumi.Context,
	name string, args *RegionTargetHttpsProxyArgs, opts ...pulumi.ResourceOption) (*RegionTargetHttpsProxy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.UrlMap == nil {
		return nil, errors.New("invalid value for required argument 'UrlMap'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RegionTargetHttpsProxy
	err := ctx.RegisterResource("gcp:compute/regionTargetHttpsProxy:RegionTargetHttpsProxy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRegionTargetHttpsProxy gets an existing RegionTargetHttpsProxy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRegionTargetHttpsProxy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RegionTargetHttpsProxyState, opts ...pulumi.ResourceOption) (*RegionTargetHttpsProxy, error) {
	var resource RegionTargetHttpsProxy
	err := ctx.ReadResource("gcp:compute/regionTargetHttpsProxy:RegionTargetHttpsProxy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RegionTargetHttpsProxy resources.
type regionTargetHttpsProxyState struct {
	// URLs to certificate manager certificate resources that are used to authenticate connections between users and the load balancer.
	// sslCertificates and certificateManagerCertificates can't be defined together.
	// Accepted format is `//certificatemanager.googleapis.com/projects/{project}/locations/{location}/certificates/{resourceName}` or just the selfLink `projects/{project}/locations/{location}/certificates/{resourceName}`
	CertificateManagerCertificates []string `pulumi:"certificateManagerCertificates"`
	// Creation timestamp in RFC3339 text format.
	CreationTimestamp *string `pulumi:"creationTimestamp"`
	// An optional description of this resource.
	Description *string `pulumi:"description"`
	// Specifies how long to keep a connection open, after completing a response,
	// while there is no matching traffic (in seconds). If an HTTP keepalive is
	// not specified, a default value (600 seconds) will be used. For Regioanl
	// HTTP(S) load balancer, the minimum allowed value is 5 seconds and the
	// maximum allowed value is 600 seconds.
	HttpKeepAliveTimeoutSec *int `pulumi:"httpKeepAliveTimeoutSec"`
	// Name of the resource. Provided by the client when the resource is
	// created. The name must be 1-63 characters long, and comply with
	// RFC1035. Specifically, the name must be 1-63 characters long and match
	// the regular expression `a-z?` which means the
	// first character must be a lowercase letter, and all following
	// characters must be a dash, lowercase letter, or digit, except the last
	// character, which cannot be a dash.
	Name *string `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// The unique identifier for the resource.
	ProxyId *int `pulumi:"proxyId"`
	// The Region in which the created target https proxy should reside.
	// If it is not provided, the provider region is used.
	Region *string `pulumi:"region"`
	// The URI of the created resource.
	SelfLink *string `pulumi:"selfLink"`
	// A URL referring to a networksecurity.ServerTlsPolicy
	// resource that describes how the proxy should authenticate inbound
	// traffic. serverTlsPolicy only applies to a global TargetHttpsProxy
	// attached to globalForwardingRules with the loadBalancingScheme
	// set to INTERNAL_SELF_MANAGED or EXTERNAL or EXTERNAL_MANAGED.
	// For details which ServerTlsPolicy resources are accepted with
	// INTERNAL_SELF_MANAGED and which with EXTERNAL, EXTERNAL_MANAGED
	// loadBalancingScheme consult ServerTlsPolicy documentation.
	// If left blank, communications are not encrypted.
	// If you remove this field from your configuration at the same time as
	// deleting or recreating a referenced ServerTlsPolicy resource, you will
	// receive a resourceInUseByAnotherResource error. Use lifecycle.create_before_destroy
	// within the ServerTlsPolicy resource to avoid this.
	ServerTlsPolicy *string `pulumi:"serverTlsPolicy"`
	// URLs to SslCertificate resources that are used to authenticate connections between users and the load balancer.
	// At least one SSL certificate must be specified. Currently, you may specify up to 15 SSL certificates.
	// sslCertificates do not apply when the load balancing scheme is set to INTERNAL_SELF_MANAGED.
	SslCertificates []string `pulumi:"sslCertificates"`
	// A reference to the Region SslPolicy resource that will be associated with
	// the TargetHttpsProxy resource. If not set, the TargetHttpsProxy
	// resource will not have any SSL policy configured.
	SslPolicy *string `pulumi:"sslPolicy"`
	// A reference to the RegionUrlMap resource that defines the mapping from URL
	// to the RegionBackendService.
	//
	// ***
	UrlMap *string `pulumi:"urlMap"`
}

type RegionTargetHttpsProxyState struct {
	// URLs to certificate manager certificate resources that are used to authenticate connections between users and the load balancer.
	// sslCertificates and certificateManagerCertificates can't be defined together.
	// Accepted format is `//certificatemanager.googleapis.com/projects/{project}/locations/{location}/certificates/{resourceName}` or just the selfLink `projects/{project}/locations/{location}/certificates/{resourceName}`
	CertificateManagerCertificates pulumi.StringArrayInput
	// Creation timestamp in RFC3339 text format.
	CreationTimestamp pulumi.StringPtrInput
	// An optional description of this resource.
	Description pulumi.StringPtrInput
	// Specifies how long to keep a connection open, after completing a response,
	// while there is no matching traffic (in seconds). If an HTTP keepalive is
	// not specified, a default value (600 seconds) will be used. For Regioanl
	// HTTP(S) load balancer, the minimum allowed value is 5 seconds and the
	// maximum allowed value is 600 seconds.
	HttpKeepAliveTimeoutSec pulumi.IntPtrInput
	// Name of the resource. Provided by the client when the resource is
	// created. The name must be 1-63 characters long, and comply with
	// RFC1035. Specifically, the name must be 1-63 characters long and match
	// the regular expression `a-z?` which means the
	// first character must be a lowercase letter, and all following
	// characters must be a dash, lowercase letter, or digit, except the last
	// character, which cannot be a dash.
	Name pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// The unique identifier for the resource.
	ProxyId pulumi.IntPtrInput
	// The Region in which the created target https proxy should reside.
	// If it is not provided, the provider region is used.
	Region pulumi.StringPtrInput
	// The URI of the created resource.
	SelfLink pulumi.StringPtrInput
	// A URL referring to a networksecurity.ServerTlsPolicy
	// resource that describes how the proxy should authenticate inbound
	// traffic. serverTlsPolicy only applies to a global TargetHttpsProxy
	// attached to globalForwardingRules with the loadBalancingScheme
	// set to INTERNAL_SELF_MANAGED or EXTERNAL or EXTERNAL_MANAGED.
	// For details which ServerTlsPolicy resources are accepted with
	// INTERNAL_SELF_MANAGED and which with EXTERNAL, EXTERNAL_MANAGED
	// loadBalancingScheme consult ServerTlsPolicy documentation.
	// If left blank, communications are not encrypted.
	// If you remove this field from your configuration at the same time as
	// deleting or recreating a referenced ServerTlsPolicy resource, you will
	// receive a resourceInUseByAnotherResource error. Use lifecycle.create_before_destroy
	// within the ServerTlsPolicy resource to avoid this.
	ServerTlsPolicy pulumi.StringPtrInput
	// URLs to SslCertificate resources that are used to authenticate connections between users and the load balancer.
	// At least one SSL certificate must be specified. Currently, you may specify up to 15 SSL certificates.
	// sslCertificates do not apply when the load balancing scheme is set to INTERNAL_SELF_MANAGED.
	SslCertificates pulumi.StringArrayInput
	// A reference to the Region SslPolicy resource that will be associated with
	// the TargetHttpsProxy resource. If not set, the TargetHttpsProxy
	// resource will not have any SSL policy configured.
	SslPolicy pulumi.StringPtrInput
	// A reference to the RegionUrlMap resource that defines the mapping from URL
	// to the RegionBackendService.
	//
	// ***
	UrlMap pulumi.StringPtrInput
}

func (RegionTargetHttpsProxyState) ElementType() reflect.Type {
	return reflect.TypeOf((*regionTargetHttpsProxyState)(nil)).Elem()
}

type regionTargetHttpsProxyArgs struct {
	// URLs to certificate manager certificate resources that are used to authenticate connections between users and the load balancer.
	// sslCertificates and certificateManagerCertificates can't be defined together.
	// Accepted format is `//certificatemanager.googleapis.com/projects/{project}/locations/{location}/certificates/{resourceName}` or just the selfLink `projects/{project}/locations/{location}/certificates/{resourceName}`
	CertificateManagerCertificates []string `pulumi:"certificateManagerCertificates"`
	// An optional description of this resource.
	Description *string `pulumi:"description"`
	// Specifies how long to keep a connection open, after completing a response,
	// while there is no matching traffic (in seconds). If an HTTP keepalive is
	// not specified, a default value (600 seconds) will be used. For Regioanl
	// HTTP(S) load balancer, the minimum allowed value is 5 seconds and the
	// maximum allowed value is 600 seconds.
	HttpKeepAliveTimeoutSec *int `pulumi:"httpKeepAliveTimeoutSec"`
	// Name of the resource. Provided by the client when the resource is
	// created. The name must be 1-63 characters long, and comply with
	// RFC1035. Specifically, the name must be 1-63 characters long and match
	// the regular expression `a-z?` which means the
	// first character must be a lowercase letter, and all following
	// characters must be a dash, lowercase letter, or digit, except the last
	// character, which cannot be a dash.
	Name *string `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// The Region in which the created target https proxy should reside.
	// If it is not provided, the provider region is used.
	Region *string `pulumi:"region"`
	// A URL referring to a networksecurity.ServerTlsPolicy
	// resource that describes how the proxy should authenticate inbound
	// traffic. serverTlsPolicy only applies to a global TargetHttpsProxy
	// attached to globalForwardingRules with the loadBalancingScheme
	// set to INTERNAL_SELF_MANAGED or EXTERNAL or EXTERNAL_MANAGED.
	// For details which ServerTlsPolicy resources are accepted with
	// INTERNAL_SELF_MANAGED and which with EXTERNAL, EXTERNAL_MANAGED
	// loadBalancingScheme consult ServerTlsPolicy documentation.
	// If left blank, communications are not encrypted.
	// If you remove this field from your configuration at the same time as
	// deleting or recreating a referenced ServerTlsPolicy resource, you will
	// receive a resourceInUseByAnotherResource error. Use lifecycle.create_before_destroy
	// within the ServerTlsPolicy resource to avoid this.
	ServerTlsPolicy *string `pulumi:"serverTlsPolicy"`
	// URLs to SslCertificate resources that are used to authenticate connections between users and the load balancer.
	// At least one SSL certificate must be specified. Currently, you may specify up to 15 SSL certificates.
	// sslCertificates do not apply when the load balancing scheme is set to INTERNAL_SELF_MANAGED.
	SslCertificates []string `pulumi:"sslCertificates"`
	// A reference to the Region SslPolicy resource that will be associated with
	// the TargetHttpsProxy resource. If not set, the TargetHttpsProxy
	// resource will not have any SSL policy configured.
	SslPolicy *string `pulumi:"sslPolicy"`
	// A reference to the RegionUrlMap resource that defines the mapping from URL
	// to the RegionBackendService.
	//
	// ***
	UrlMap string `pulumi:"urlMap"`
}

// The set of arguments for constructing a RegionTargetHttpsProxy resource.
type RegionTargetHttpsProxyArgs struct {
	// URLs to certificate manager certificate resources that are used to authenticate connections between users and the load balancer.
	// sslCertificates and certificateManagerCertificates can't be defined together.
	// Accepted format is `//certificatemanager.googleapis.com/projects/{project}/locations/{location}/certificates/{resourceName}` or just the selfLink `projects/{project}/locations/{location}/certificates/{resourceName}`
	CertificateManagerCertificates pulumi.StringArrayInput
	// An optional description of this resource.
	Description pulumi.StringPtrInput
	// Specifies how long to keep a connection open, after completing a response,
	// while there is no matching traffic (in seconds). If an HTTP keepalive is
	// not specified, a default value (600 seconds) will be used. For Regioanl
	// HTTP(S) load balancer, the minimum allowed value is 5 seconds and the
	// maximum allowed value is 600 seconds.
	HttpKeepAliveTimeoutSec pulumi.IntPtrInput
	// Name of the resource. Provided by the client when the resource is
	// created. The name must be 1-63 characters long, and comply with
	// RFC1035. Specifically, the name must be 1-63 characters long and match
	// the regular expression `a-z?` which means the
	// first character must be a lowercase letter, and all following
	// characters must be a dash, lowercase letter, or digit, except the last
	// character, which cannot be a dash.
	Name pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// The Region in which the created target https proxy should reside.
	// If it is not provided, the provider region is used.
	Region pulumi.StringPtrInput
	// A URL referring to a networksecurity.ServerTlsPolicy
	// resource that describes how the proxy should authenticate inbound
	// traffic. serverTlsPolicy only applies to a global TargetHttpsProxy
	// attached to globalForwardingRules with the loadBalancingScheme
	// set to INTERNAL_SELF_MANAGED or EXTERNAL or EXTERNAL_MANAGED.
	// For details which ServerTlsPolicy resources are accepted with
	// INTERNAL_SELF_MANAGED and which with EXTERNAL, EXTERNAL_MANAGED
	// loadBalancingScheme consult ServerTlsPolicy documentation.
	// If left blank, communications are not encrypted.
	// If you remove this field from your configuration at the same time as
	// deleting or recreating a referenced ServerTlsPolicy resource, you will
	// receive a resourceInUseByAnotherResource error. Use lifecycle.create_before_destroy
	// within the ServerTlsPolicy resource to avoid this.
	ServerTlsPolicy pulumi.StringPtrInput
	// URLs to SslCertificate resources that are used to authenticate connections between users and the load balancer.
	// At least one SSL certificate must be specified. Currently, you may specify up to 15 SSL certificates.
	// sslCertificates do not apply when the load balancing scheme is set to INTERNAL_SELF_MANAGED.
	SslCertificates pulumi.StringArrayInput
	// A reference to the Region SslPolicy resource that will be associated with
	// the TargetHttpsProxy resource. If not set, the TargetHttpsProxy
	// resource will not have any SSL policy configured.
	SslPolicy pulumi.StringPtrInput
	// A reference to the RegionUrlMap resource that defines the mapping from URL
	// to the RegionBackendService.
	//
	// ***
	UrlMap pulumi.StringInput
}

func (RegionTargetHttpsProxyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*regionTargetHttpsProxyArgs)(nil)).Elem()
}

type RegionTargetHttpsProxyInput interface {
	pulumi.Input

	ToRegionTargetHttpsProxyOutput() RegionTargetHttpsProxyOutput
	ToRegionTargetHttpsProxyOutputWithContext(ctx context.Context) RegionTargetHttpsProxyOutput
}

func (*RegionTargetHttpsProxy) ElementType() reflect.Type {
	return reflect.TypeOf((**RegionTargetHttpsProxy)(nil)).Elem()
}

func (i *RegionTargetHttpsProxy) ToRegionTargetHttpsProxyOutput() RegionTargetHttpsProxyOutput {
	return i.ToRegionTargetHttpsProxyOutputWithContext(context.Background())
}

func (i *RegionTargetHttpsProxy) ToRegionTargetHttpsProxyOutputWithContext(ctx context.Context) RegionTargetHttpsProxyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegionTargetHttpsProxyOutput)
}

// RegionTargetHttpsProxyArrayInput is an input type that accepts RegionTargetHttpsProxyArray and RegionTargetHttpsProxyArrayOutput values.
// You can construct a concrete instance of `RegionTargetHttpsProxyArrayInput` via:
//
//	RegionTargetHttpsProxyArray{ RegionTargetHttpsProxyArgs{...} }
type RegionTargetHttpsProxyArrayInput interface {
	pulumi.Input

	ToRegionTargetHttpsProxyArrayOutput() RegionTargetHttpsProxyArrayOutput
	ToRegionTargetHttpsProxyArrayOutputWithContext(context.Context) RegionTargetHttpsProxyArrayOutput
}

type RegionTargetHttpsProxyArray []RegionTargetHttpsProxyInput

func (RegionTargetHttpsProxyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RegionTargetHttpsProxy)(nil)).Elem()
}

func (i RegionTargetHttpsProxyArray) ToRegionTargetHttpsProxyArrayOutput() RegionTargetHttpsProxyArrayOutput {
	return i.ToRegionTargetHttpsProxyArrayOutputWithContext(context.Background())
}

func (i RegionTargetHttpsProxyArray) ToRegionTargetHttpsProxyArrayOutputWithContext(ctx context.Context) RegionTargetHttpsProxyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegionTargetHttpsProxyArrayOutput)
}

// RegionTargetHttpsProxyMapInput is an input type that accepts RegionTargetHttpsProxyMap and RegionTargetHttpsProxyMapOutput values.
// You can construct a concrete instance of `RegionTargetHttpsProxyMapInput` via:
//
//	RegionTargetHttpsProxyMap{ "key": RegionTargetHttpsProxyArgs{...} }
type RegionTargetHttpsProxyMapInput interface {
	pulumi.Input

	ToRegionTargetHttpsProxyMapOutput() RegionTargetHttpsProxyMapOutput
	ToRegionTargetHttpsProxyMapOutputWithContext(context.Context) RegionTargetHttpsProxyMapOutput
}

type RegionTargetHttpsProxyMap map[string]RegionTargetHttpsProxyInput

func (RegionTargetHttpsProxyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RegionTargetHttpsProxy)(nil)).Elem()
}

func (i RegionTargetHttpsProxyMap) ToRegionTargetHttpsProxyMapOutput() RegionTargetHttpsProxyMapOutput {
	return i.ToRegionTargetHttpsProxyMapOutputWithContext(context.Background())
}

func (i RegionTargetHttpsProxyMap) ToRegionTargetHttpsProxyMapOutputWithContext(ctx context.Context) RegionTargetHttpsProxyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegionTargetHttpsProxyMapOutput)
}

type RegionTargetHttpsProxyOutput struct{ *pulumi.OutputState }

func (RegionTargetHttpsProxyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegionTargetHttpsProxy)(nil)).Elem()
}

func (o RegionTargetHttpsProxyOutput) ToRegionTargetHttpsProxyOutput() RegionTargetHttpsProxyOutput {
	return o
}

func (o RegionTargetHttpsProxyOutput) ToRegionTargetHttpsProxyOutputWithContext(ctx context.Context) RegionTargetHttpsProxyOutput {
	return o
}

// URLs to certificate manager certificate resources that are used to authenticate connections between users and the load balancer.
// sslCertificates and certificateManagerCertificates can't be defined together.
// Accepted format is `//certificatemanager.googleapis.com/projects/{project}/locations/{location}/certificates/{resourceName}` or just the selfLink `projects/{project}/locations/{location}/certificates/{resourceName}`
func (o RegionTargetHttpsProxyOutput) CertificateManagerCertificates() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RegionTargetHttpsProxy) pulumi.StringArrayOutput { return v.CertificateManagerCertificates }).(pulumi.StringArrayOutput)
}

// Creation timestamp in RFC3339 text format.
func (o RegionTargetHttpsProxyOutput) CreationTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v *RegionTargetHttpsProxy) pulumi.StringOutput { return v.CreationTimestamp }).(pulumi.StringOutput)
}

// An optional description of this resource.
func (o RegionTargetHttpsProxyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegionTargetHttpsProxy) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Specifies how long to keep a connection open, after completing a response,
// while there is no matching traffic (in seconds). If an HTTP keepalive is
// not specified, a default value (600 seconds) will be used. For Regioanl
// HTTP(S) load balancer, the minimum allowed value is 5 seconds and the
// maximum allowed value is 600 seconds.
func (o RegionTargetHttpsProxyOutput) HttpKeepAliveTimeoutSec() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RegionTargetHttpsProxy) pulumi.IntPtrOutput { return v.HttpKeepAliveTimeoutSec }).(pulumi.IntPtrOutput)
}

// Name of the resource. Provided by the client when the resource is
// created. The name must be 1-63 characters long, and comply with
// RFC1035. Specifically, the name must be 1-63 characters long and match
// the regular expression `a-z?` which means the
// first character must be a lowercase letter, and all following
// characters must be a dash, lowercase letter, or digit, except the last
// character, which cannot be a dash.
func (o RegionTargetHttpsProxyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *RegionTargetHttpsProxy) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The ID of the project in which the resource belongs.
// If it is not provided, the provider project is used.
func (o RegionTargetHttpsProxyOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *RegionTargetHttpsProxy) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The unique identifier for the resource.
func (o RegionTargetHttpsProxyOutput) ProxyId() pulumi.IntOutput {
	return o.ApplyT(func(v *RegionTargetHttpsProxy) pulumi.IntOutput { return v.ProxyId }).(pulumi.IntOutput)
}

// The Region in which the created target https proxy should reside.
// If it is not provided, the provider region is used.
func (o RegionTargetHttpsProxyOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *RegionTargetHttpsProxy) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// The URI of the created resource.
func (o RegionTargetHttpsProxyOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v *RegionTargetHttpsProxy) pulumi.StringOutput { return v.SelfLink }).(pulumi.StringOutput)
}

// A URL referring to a networksecurity.ServerTlsPolicy
// resource that describes how the proxy should authenticate inbound
// traffic. serverTlsPolicy only applies to a global TargetHttpsProxy
// attached to globalForwardingRules with the loadBalancingScheme
// set to INTERNAL_SELF_MANAGED or EXTERNAL or EXTERNAL_MANAGED.
// For details which ServerTlsPolicy resources are accepted with
// INTERNAL_SELF_MANAGED and which with EXTERNAL, EXTERNAL_MANAGED
// loadBalancingScheme consult ServerTlsPolicy documentation.
// If left blank, communications are not encrypted.
// If you remove this field from your configuration at the same time as
// deleting or recreating a referenced ServerTlsPolicy resource, you will
// receive a resourceInUseByAnotherResource error. Use lifecycle.create_before_destroy
// within the ServerTlsPolicy resource to avoid this.
func (o RegionTargetHttpsProxyOutput) ServerTlsPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegionTargetHttpsProxy) pulumi.StringPtrOutput { return v.ServerTlsPolicy }).(pulumi.StringPtrOutput)
}

// URLs to SslCertificate resources that are used to authenticate connections between users and the load balancer.
// At least one SSL certificate must be specified. Currently, you may specify up to 15 SSL certificates.
// sslCertificates do not apply when the load balancing scheme is set to INTERNAL_SELF_MANAGED.
func (o RegionTargetHttpsProxyOutput) SslCertificates() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RegionTargetHttpsProxy) pulumi.StringArrayOutput { return v.SslCertificates }).(pulumi.StringArrayOutput)
}

// A reference to the Region SslPolicy resource that will be associated with
// the TargetHttpsProxy resource. If not set, the TargetHttpsProxy
// resource will not have any SSL policy configured.
func (o RegionTargetHttpsProxyOutput) SslPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegionTargetHttpsProxy) pulumi.StringPtrOutput { return v.SslPolicy }).(pulumi.StringPtrOutput)
}

// A reference to the RegionUrlMap resource that defines the mapping from URL
// to the RegionBackendService.
//
// ***
func (o RegionTargetHttpsProxyOutput) UrlMap() pulumi.StringOutput {
	return o.ApplyT(func(v *RegionTargetHttpsProxy) pulumi.StringOutput { return v.UrlMap }).(pulumi.StringOutput)
}

type RegionTargetHttpsProxyArrayOutput struct{ *pulumi.OutputState }

func (RegionTargetHttpsProxyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RegionTargetHttpsProxy)(nil)).Elem()
}

func (o RegionTargetHttpsProxyArrayOutput) ToRegionTargetHttpsProxyArrayOutput() RegionTargetHttpsProxyArrayOutput {
	return o
}

func (o RegionTargetHttpsProxyArrayOutput) ToRegionTargetHttpsProxyArrayOutputWithContext(ctx context.Context) RegionTargetHttpsProxyArrayOutput {
	return o
}

func (o RegionTargetHttpsProxyArrayOutput) Index(i pulumi.IntInput) RegionTargetHttpsProxyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RegionTargetHttpsProxy {
		return vs[0].([]*RegionTargetHttpsProxy)[vs[1].(int)]
	}).(RegionTargetHttpsProxyOutput)
}

type RegionTargetHttpsProxyMapOutput struct{ *pulumi.OutputState }

func (RegionTargetHttpsProxyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RegionTargetHttpsProxy)(nil)).Elem()
}

func (o RegionTargetHttpsProxyMapOutput) ToRegionTargetHttpsProxyMapOutput() RegionTargetHttpsProxyMapOutput {
	return o
}

func (o RegionTargetHttpsProxyMapOutput) ToRegionTargetHttpsProxyMapOutputWithContext(ctx context.Context) RegionTargetHttpsProxyMapOutput {
	return o
}

func (o RegionTargetHttpsProxyMapOutput) MapIndex(k pulumi.StringInput) RegionTargetHttpsProxyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RegionTargetHttpsProxy {
		return vs[0].(map[string]*RegionTargetHttpsProxy)[vs[1].(string)]
	}).(RegionTargetHttpsProxyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RegionTargetHttpsProxyInput)(nil)).Elem(), &RegionTargetHttpsProxy{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegionTargetHttpsProxyArrayInput)(nil)).Elem(), RegionTargetHttpsProxyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegionTargetHttpsProxyMapInput)(nil)).Elem(), RegionTargetHttpsProxyMap{})
	pulumi.RegisterOutputType(RegionTargetHttpsProxyOutput{})
	pulumi.RegisterOutputType(RegionTargetHttpsProxyArrayOutput{})
	pulumi.RegisterOutputType(RegionTargetHttpsProxyMapOutput{})
}
