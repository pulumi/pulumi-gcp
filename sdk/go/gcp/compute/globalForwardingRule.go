// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package compute

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Manages a Global Forwarding Rule within GCE. This binds an ip and port to a target HTTP(s) proxy. For more
// information see [the official
// documentation](https://cloud.google.com/compute/docs/load-balancing/http/global-forwarding-rules) and
// [API](https://cloud.google.com/compute/docs/reference/latest/globalForwardingRules).
type GlobalForwardingRule struct {
	s *pulumi.ResourceState
}

// NewGlobalForwardingRule registers a new resource with the given unique name, arguments, and options.
func NewGlobalForwardingRule(ctx *pulumi.Context,
	name string, args *GlobalForwardingRuleArgs, opts ...pulumi.ResourceOpt) (*GlobalForwardingRule, error) {
	if args == nil || args.Target == nil {
		return nil, errors.New("missing required argument 'Target'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["description"] = nil
		inputs["ipAddress"] = nil
		inputs["ipProtocol"] = nil
		inputs["ipVersion"] = nil
		inputs["labels"] = nil
		inputs["name"] = nil
		inputs["portRange"] = nil
		inputs["project"] = nil
		inputs["target"] = nil
	} else {
		inputs["description"] = args.Description
		inputs["ipAddress"] = args.IpAddress
		inputs["ipProtocol"] = args.IpProtocol
		inputs["ipVersion"] = args.IpVersion
		inputs["labels"] = args.Labels
		inputs["name"] = args.Name
		inputs["portRange"] = args.PortRange
		inputs["project"] = args.Project
		inputs["target"] = args.Target
	}
	inputs["labelFingerprint"] = nil
	inputs["selfLink"] = nil
	s, err := ctx.RegisterResource("gcp:compute/globalForwardingRule:GlobalForwardingRule", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &GlobalForwardingRule{s: s}, nil
}

// GetGlobalForwardingRule gets an existing GlobalForwardingRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGlobalForwardingRule(ctx *pulumi.Context,
	name string, id pulumi.ID, state *GlobalForwardingRuleState, opts ...pulumi.ResourceOpt) (*GlobalForwardingRule, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["description"] = state.Description
		inputs["ipAddress"] = state.IpAddress
		inputs["ipProtocol"] = state.IpProtocol
		inputs["ipVersion"] = state.IpVersion
		inputs["labelFingerprint"] = state.LabelFingerprint
		inputs["labels"] = state.Labels
		inputs["name"] = state.Name
		inputs["portRange"] = state.PortRange
		inputs["project"] = state.Project
		inputs["selfLink"] = state.SelfLink
		inputs["target"] = state.Target
	}
	s, err := ctx.ReadResource("gcp:compute/globalForwardingRule:GlobalForwardingRule", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &GlobalForwardingRule{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *GlobalForwardingRule) URN() *pulumi.URNOutput {
	return r.s.URN
}

// ID is this resource's unique identifier assigned by its provider.
func (r *GlobalForwardingRule) ID() *pulumi.IDOutput {
	return r.s.ID
}

// Textual description field.
func (r *GlobalForwardingRule) Description() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["description"])
}

// The static IP. (if not set, an ephemeral IP is
// used). This should be the literal IP address to be used, not the `self_link`
// to a `google_compute_global_address` resource. (If using a `google_compute_global_address`
// resource, use the `address` property instead of the `self_link` property.)
func (r *GlobalForwardingRule) IpAddress() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["ipAddress"])
}

// The IP protocol to route, one of "TCP" "UDP" "AH"
// "ESP" or "SCTP". (default "TCP").
func (r *GlobalForwardingRule) IpProtocol() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["ipProtocol"])
}

// 
// The IP Version that will be used by this resource's address. One of `"IPV4"` or `"IPV6"`.
// You cannot provide this and `ip_address`.
func (r *GlobalForwardingRule) IpVersion() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["ipVersion"])
}

// ([Beta](/docs/providers/google/index.html#beta-features)) The current label fingerprint.
func (r *GlobalForwardingRule) LabelFingerprint() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["labelFingerprint"])
}

// )
// A set of key/value label pairs to assign to the resource.
func (r *GlobalForwardingRule) Labels() *pulumi.MapOutput {
	return (*pulumi.MapOutput)(r.s.State["labels"])
}

// A unique name for the resource, required by GCE. Changing
// this forces a new resource to be created.
func (r *GlobalForwardingRule) Name() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["name"])
}

// A range e.g. "1024-2048" or a single port "1024"
// (defaults to all ports!).
// Some types of forwarding targets have constraints on the acceptable ports:
// * Target HTTP proxy: 80, 8080
// * Target HTTPS proxy: 443
// * Target TCP proxy: 25, 43, 110, 143, 195, 443, 465, 587, 700, 993, 995, 1883, 5222
// * Target SSL proxy: 25, 43, 110, 143, 195, 443, 465, 587, 700, 993, 995, 1883, 5222
// * Target VPN gateway: 500, 4500
func (r *GlobalForwardingRule) PortRange() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["portRange"])
}

// The ID of the project in which the resource belongs. If it
// is not provided, the provider project is used.
func (r *GlobalForwardingRule) Project() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["project"])
}

// The URI of the created resource.
func (r *GlobalForwardingRule) SelfLink() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["selfLink"])
}

// URL of target HTTP or HTTPS proxy.
func (r *GlobalForwardingRule) Target() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["target"])
}

// Input properties used for looking up and filtering GlobalForwardingRule resources.
type GlobalForwardingRuleState struct {
	// Textual description field.
	Description interface{}
	// The static IP. (if not set, an ephemeral IP is
	// used). This should be the literal IP address to be used, not the `self_link`
	// to a `google_compute_global_address` resource. (If using a `google_compute_global_address`
	// resource, use the `address` property instead of the `self_link` property.)
	IpAddress interface{}
	// The IP protocol to route, one of "TCP" "UDP" "AH"
	// "ESP" or "SCTP". (default "TCP").
	IpProtocol interface{}
	// 
	// The IP Version that will be used by this resource's address. One of `"IPV4"` or `"IPV6"`.
	// You cannot provide this and `ip_address`.
	IpVersion interface{}
	// ([Beta](/docs/providers/google/index.html#beta-features)) The current label fingerprint.
	LabelFingerprint interface{}
	// )
	// A set of key/value label pairs to assign to the resource.
	Labels interface{}
	// A unique name for the resource, required by GCE. Changing
	// this forces a new resource to be created.
	Name interface{}
	// A range e.g. "1024-2048" or a single port "1024"
	// (defaults to all ports!).
	// Some types of forwarding targets have constraints on the acceptable ports:
	// * Target HTTP proxy: 80, 8080
	// * Target HTTPS proxy: 443
	// * Target TCP proxy: 25, 43, 110, 143, 195, 443, 465, 587, 700, 993, 995, 1883, 5222
	// * Target SSL proxy: 25, 43, 110, 143, 195, 443, 465, 587, 700, 993, 995, 1883, 5222
	// * Target VPN gateway: 500, 4500
	PortRange interface{}
	// The ID of the project in which the resource belongs. If it
	// is not provided, the provider project is used.
	Project interface{}
	// The URI of the created resource.
	SelfLink interface{}
	// URL of target HTTP or HTTPS proxy.
	Target interface{}
}

// The set of arguments for constructing a GlobalForwardingRule resource.
type GlobalForwardingRuleArgs struct {
	// Textual description field.
	Description interface{}
	// The static IP. (if not set, an ephemeral IP is
	// used). This should be the literal IP address to be used, not the `self_link`
	// to a `google_compute_global_address` resource. (If using a `google_compute_global_address`
	// resource, use the `address` property instead of the `self_link` property.)
	IpAddress interface{}
	// The IP protocol to route, one of "TCP" "UDP" "AH"
	// "ESP" or "SCTP". (default "TCP").
	IpProtocol interface{}
	// 
	// The IP Version that will be used by this resource's address. One of `"IPV4"` or `"IPV6"`.
	// You cannot provide this and `ip_address`.
	IpVersion interface{}
	// )
	// A set of key/value label pairs to assign to the resource.
	Labels interface{}
	// A unique name for the resource, required by GCE. Changing
	// this forces a new resource to be created.
	Name interface{}
	// A range e.g. "1024-2048" or a single port "1024"
	// (defaults to all ports!).
	// Some types of forwarding targets have constraints on the acceptable ports:
	// * Target HTTP proxy: 80, 8080
	// * Target HTTPS proxy: 443
	// * Target TCP proxy: 25, 43, 110, 143, 195, 443, 465, 587, 700, 993, 995, 1883, 5222
	// * Target SSL proxy: 25, 43, 110, 143, 195, 443, 465, 587, 700, 993, 995, 1883, 5222
	// * Target VPN gateway: 500, 4500
	PortRange interface{}
	// The ID of the project in which the resource belongs. If it
	// is not provided, the provider project is used.
	Project interface{}
	// URL of target HTTP or HTTPS proxy.
	Target interface{}
}
