// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package compute

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get a list of interconnect locations. For more information see
// the official [API](https://cloud.google.com/compute/docs/reference/rest/v1/interconnectLocations/list) documentation.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/compute"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			all, err := compute.GetInterconnectLocations(ctx, &compute.GetInterconnectLocationsArgs{}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("interconnectLocations", all.Locations)
//			return nil
//		})
//	}
//
// ```
func GetInterconnectLocations(ctx *pulumi.Context, args *GetInterconnectLocationsArgs, opts ...pulumi.InvokeOption) (*GetInterconnectLocationsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetInterconnectLocationsResult
	err := ctx.Invoke("gcp:compute/getInterconnectLocations:getInterconnectLocations", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getInterconnectLocations.
type GetInterconnectLocationsArgs struct {
	// The project in which the resource belongs. If it
	// is not provided, the provider project is used.
	Project *string `pulumi:"project"`
}

// A collection of values returned by getInterconnectLocations.
type GetInterconnectLocationsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A list of interconnect locations. Each location will have the following attributes:
	Locations []GetInterconnectLocationsLocation `pulumi:"locations"`
	Project   string                             `pulumi:"project"`
}

func GetInterconnectLocationsOutput(ctx *pulumi.Context, args GetInterconnectLocationsOutputArgs, opts ...pulumi.InvokeOption) GetInterconnectLocationsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetInterconnectLocationsResultOutput, error) {
			args := v.(GetInterconnectLocationsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("gcp:compute/getInterconnectLocations:getInterconnectLocations", args, GetInterconnectLocationsResultOutput{}, options).(GetInterconnectLocationsResultOutput), nil
		}).(GetInterconnectLocationsResultOutput)
}

// A collection of arguments for invoking getInterconnectLocations.
type GetInterconnectLocationsOutputArgs struct {
	// The project in which the resource belongs. If it
	// is not provided, the provider project is used.
	Project pulumi.StringPtrInput `pulumi:"project"`
}

func (GetInterconnectLocationsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInterconnectLocationsArgs)(nil)).Elem()
}

// A collection of values returned by getInterconnectLocations.
type GetInterconnectLocationsResultOutput struct{ *pulumi.OutputState }

func (GetInterconnectLocationsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInterconnectLocationsResult)(nil)).Elem()
}

func (o GetInterconnectLocationsResultOutput) ToGetInterconnectLocationsResultOutput() GetInterconnectLocationsResultOutput {
	return o
}

func (o GetInterconnectLocationsResultOutput) ToGetInterconnectLocationsResultOutputWithContext(ctx context.Context) GetInterconnectLocationsResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetInterconnectLocationsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterconnectLocationsResult) string { return v.Id }).(pulumi.StringOutput)
}

// A list of interconnect locations. Each location will have the following attributes:
func (o GetInterconnectLocationsResultOutput) Locations() GetInterconnectLocationsLocationArrayOutput {
	return o.ApplyT(func(v GetInterconnectLocationsResult) []GetInterconnectLocationsLocation { return v.Locations }).(GetInterconnectLocationsLocationArrayOutput)
}

func (o GetInterconnectLocationsResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterconnectLocationsResult) string { return v.Project }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetInterconnectLocationsResultOutput{})
}
