// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package compute

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get information about a Google Compute Regional Persistent disks.
//
// [the official documentation](https://cloud.google.com/compute/docs/disks) and its [API](https://cloud.google.com/compute/docs/reference/rest/v1/regionDisks).
func LookupRegionDisk(ctx *pulumi.Context, args *LookupRegionDiskArgs, opts ...pulumi.InvokeOption) (*LookupRegionDiskResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupRegionDiskResult
	err := ctx.Invoke("gcp:compute/getRegionDisk:getRegionDisk", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRegionDisk.
type LookupRegionDiskArgs struct {
	// The name of a specific disk.
	//
	// ***
	Name string `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// A reference to the region where the disk resides.
	Region *string `pulumi:"region"`
}

// A collection of values returned by getRegionDisk.
type LookupRegionDiskResult struct {
	AsyncPrimaryDisks                 []GetRegionDiskAsyncPrimaryDisk  `pulumi:"asyncPrimaryDisks"`
	CreateSnapshotBeforeDestroy       bool                             `pulumi:"createSnapshotBeforeDestroy"`
	CreateSnapshotBeforeDestroyPrefix string                           `pulumi:"createSnapshotBeforeDestroyPrefix"`
	CreationTimestamp                 string                           `pulumi:"creationTimestamp"`
	Description                       string                           `pulumi:"description"`
	DiskEncryptionKeys                []GetRegionDiskDiskEncryptionKey `pulumi:"diskEncryptionKeys"`
	EffectiveLabels                   map[string]string                `pulumi:"effectiveLabels"`
	GuestOsFeatures                   []GetRegionDiskGuestOsFeature    `pulumi:"guestOsFeatures"`
	// The provider-assigned unique ID for this managed resource.
	Id                           string                                     `pulumi:"id"`
	Interface                    string                                     `pulumi:"interface"`
	LabelFingerprint             string                                     `pulumi:"labelFingerprint"`
	Labels                       map[string]string                          `pulumi:"labels"`
	LastAttachTimestamp          string                                     `pulumi:"lastAttachTimestamp"`
	LastDetachTimestamp          string                                     `pulumi:"lastDetachTimestamp"`
	Licenses                     []string                                   `pulumi:"licenses"`
	Name                         string                                     `pulumi:"name"`
	PhysicalBlockSizeBytes       int                                        `pulumi:"physicalBlockSizeBytes"`
	Project                      *string                                    `pulumi:"project"`
	PulumiLabels                 map[string]string                          `pulumi:"pulumiLabels"`
	Region                       *string                                    `pulumi:"region"`
	ReplicaZones                 []string                                   `pulumi:"replicaZones"`
	SelfLink                     string                                     `pulumi:"selfLink"`
	Size                         int                                        `pulumi:"size"`
	Snapshot                     string                                     `pulumi:"snapshot"`
	SourceDisk                   string                                     `pulumi:"sourceDisk"`
	SourceDiskId                 string                                     `pulumi:"sourceDiskId"`
	SourceSnapshotEncryptionKeys []GetRegionDiskSourceSnapshotEncryptionKey `pulumi:"sourceSnapshotEncryptionKeys"`
	SourceSnapshotId             string                                     `pulumi:"sourceSnapshotId"`
	Type                         string                                     `pulumi:"type"`
	Users                        []string                                   `pulumi:"users"`
}

func LookupRegionDiskOutput(ctx *pulumi.Context, args LookupRegionDiskOutputArgs, opts ...pulumi.InvokeOption) LookupRegionDiskResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupRegionDiskResultOutput, error) {
			args := v.(LookupRegionDiskArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("gcp:compute/getRegionDisk:getRegionDisk", args, LookupRegionDiskResultOutput{}, options).(LookupRegionDiskResultOutput), nil
		}).(LookupRegionDiskResultOutput)
}

// A collection of arguments for invoking getRegionDisk.
type LookupRegionDiskOutputArgs struct {
	// The name of a specific disk.
	//
	// ***
	Name pulumi.StringInput `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput `pulumi:"project"`
	// A reference to the region where the disk resides.
	Region pulumi.StringPtrInput `pulumi:"region"`
}

func (LookupRegionDiskOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRegionDiskArgs)(nil)).Elem()
}

// A collection of values returned by getRegionDisk.
type LookupRegionDiskResultOutput struct{ *pulumi.OutputState }

func (LookupRegionDiskResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRegionDiskResult)(nil)).Elem()
}

func (o LookupRegionDiskResultOutput) ToLookupRegionDiskResultOutput() LookupRegionDiskResultOutput {
	return o
}

func (o LookupRegionDiskResultOutput) ToLookupRegionDiskResultOutputWithContext(ctx context.Context) LookupRegionDiskResultOutput {
	return o
}

func (o LookupRegionDiskResultOutput) AsyncPrimaryDisks() GetRegionDiskAsyncPrimaryDiskArrayOutput {
	return o.ApplyT(func(v LookupRegionDiskResult) []GetRegionDiskAsyncPrimaryDisk { return v.AsyncPrimaryDisks }).(GetRegionDiskAsyncPrimaryDiskArrayOutput)
}

func (o LookupRegionDiskResultOutput) CreateSnapshotBeforeDestroy() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupRegionDiskResult) bool { return v.CreateSnapshotBeforeDestroy }).(pulumi.BoolOutput)
}

func (o LookupRegionDiskResultOutput) CreateSnapshotBeforeDestroyPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegionDiskResult) string { return v.CreateSnapshotBeforeDestroyPrefix }).(pulumi.StringOutput)
}

func (o LookupRegionDiskResultOutput) CreationTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegionDiskResult) string { return v.CreationTimestamp }).(pulumi.StringOutput)
}

func (o LookupRegionDiskResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegionDiskResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupRegionDiskResultOutput) DiskEncryptionKeys() GetRegionDiskDiskEncryptionKeyArrayOutput {
	return o.ApplyT(func(v LookupRegionDiskResult) []GetRegionDiskDiskEncryptionKey { return v.DiskEncryptionKeys }).(GetRegionDiskDiskEncryptionKeyArrayOutput)
}

func (o LookupRegionDiskResultOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupRegionDiskResult) map[string]string { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

func (o LookupRegionDiskResultOutput) GuestOsFeatures() GetRegionDiskGuestOsFeatureArrayOutput {
	return o.ApplyT(func(v LookupRegionDiskResult) []GetRegionDiskGuestOsFeature { return v.GuestOsFeatures }).(GetRegionDiskGuestOsFeatureArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupRegionDiskResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegionDiskResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupRegionDiskResultOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegionDiskResult) string { return v.Interface }).(pulumi.StringOutput)
}

func (o LookupRegionDiskResultOutput) LabelFingerprint() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegionDiskResult) string { return v.LabelFingerprint }).(pulumi.StringOutput)
}

func (o LookupRegionDiskResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupRegionDiskResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

func (o LookupRegionDiskResultOutput) LastAttachTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegionDiskResult) string { return v.LastAttachTimestamp }).(pulumi.StringOutput)
}

func (o LookupRegionDiskResultOutput) LastDetachTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegionDiskResult) string { return v.LastDetachTimestamp }).(pulumi.StringOutput)
}

func (o LookupRegionDiskResultOutput) Licenses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupRegionDiskResult) []string { return v.Licenses }).(pulumi.StringArrayOutput)
}

func (o LookupRegionDiskResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegionDiskResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupRegionDiskResultOutput) PhysicalBlockSizeBytes() pulumi.IntOutput {
	return o.ApplyT(func(v LookupRegionDiskResult) int { return v.PhysicalBlockSizeBytes }).(pulumi.IntOutput)
}

func (o LookupRegionDiskResultOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRegionDiskResult) *string { return v.Project }).(pulumi.StringPtrOutput)
}

func (o LookupRegionDiskResultOutput) PulumiLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupRegionDiskResult) map[string]string { return v.PulumiLabels }).(pulumi.StringMapOutput)
}

func (o LookupRegionDiskResultOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRegionDiskResult) *string { return v.Region }).(pulumi.StringPtrOutput)
}

func (o LookupRegionDiskResultOutput) ReplicaZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupRegionDiskResult) []string { return v.ReplicaZones }).(pulumi.StringArrayOutput)
}

func (o LookupRegionDiskResultOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegionDiskResult) string { return v.SelfLink }).(pulumi.StringOutput)
}

func (o LookupRegionDiskResultOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v LookupRegionDiskResult) int { return v.Size }).(pulumi.IntOutput)
}

func (o LookupRegionDiskResultOutput) Snapshot() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegionDiskResult) string { return v.Snapshot }).(pulumi.StringOutput)
}

func (o LookupRegionDiskResultOutput) SourceDisk() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegionDiskResult) string { return v.SourceDisk }).(pulumi.StringOutput)
}

func (o LookupRegionDiskResultOutput) SourceDiskId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegionDiskResult) string { return v.SourceDiskId }).(pulumi.StringOutput)
}

func (o LookupRegionDiskResultOutput) SourceSnapshotEncryptionKeys() GetRegionDiskSourceSnapshotEncryptionKeyArrayOutput {
	return o.ApplyT(func(v LookupRegionDiskResult) []GetRegionDiskSourceSnapshotEncryptionKey {
		return v.SourceSnapshotEncryptionKeys
	}).(GetRegionDiskSourceSnapshotEncryptionKeyArrayOutput)
}

func (o LookupRegionDiskResultOutput) SourceSnapshotId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegionDiskResult) string { return v.SourceSnapshotId }).(pulumi.StringOutput)
}

func (o LookupRegionDiskResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegionDiskResult) string { return v.Type }).(pulumi.StringOutput)
}

func (o LookupRegionDiskResultOutput) Users() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupRegionDiskResult) []string { return v.Users }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRegionDiskResultOutput{})
}
