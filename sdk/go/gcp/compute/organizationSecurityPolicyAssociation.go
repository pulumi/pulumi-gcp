// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package compute

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// An association for the OrganizationSecurityPolicy.
//
// To get more information about OrganizationSecurityPolicyAssociation, see:
//
// * [API documentation](https://cloud.google.com/compute/docs/reference/rest/beta/organizationSecurityPolicies/addAssociation)
// * How-to Guides
//   - [Associating a policy with the organization or folder](https://cloud.google.com/vpc/docs/using-firewall-policies#associate)
//
// ## Example Usage
// ### Organization Security Policy Association Basic
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/compute"
//	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/organizations"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			securityPolicyTarget, err := organizations.NewFolder(ctx, "securityPolicyTarget", &organizations.FolderArgs{
//				DisplayName: pulumi.String("tf-test-secpol"),
//				Parent:      pulumi.String("organizations/123456789"),
//			}, pulumi.Provider(google_beta))
//			if err != nil {
//				return err
//			}
//			policyOrganizationSecurityPolicy, err := compute.NewOrganizationSecurityPolicy(ctx, "policyOrganizationSecurityPolicy", &compute.OrganizationSecurityPolicyArgs{
//				DisplayName: pulumi.String("tf-test"),
//				Parent:      securityPolicyTarget.Name,
//			}, pulumi.Provider(google_beta))
//			if err != nil {
//				return err
//			}
//			_, err = compute.NewOrganizationSecurityPolicyRule(ctx, "policyOrganizationSecurityPolicyRule", &compute.OrganizationSecurityPolicyRuleArgs{
//				PolicyId:      policyOrganizationSecurityPolicy.ID(),
//				Action:        pulumi.String("allow"),
//				Direction:     pulumi.String("INGRESS"),
//				EnableLogging: pulumi.Bool(true),
//				Match: &compute.OrganizationSecurityPolicyRuleMatchArgs{
//					Config: &compute.OrganizationSecurityPolicyRuleMatchConfigArgs{
//						SrcIpRanges: pulumi.StringArray{
//							pulumi.String("192.168.0.0/16"),
//							pulumi.String("10.0.0.0/8"),
//						},
//						Layer4Configs: compute.OrganizationSecurityPolicyRuleMatchConfigLayer4ConfigArray{
//							&compute.OrganizationSecurityPolicyRuleMatchConfigLayer4ConfigArgs{
//								IpProtocol: pulumi.String("tcp"),
//								Ports: pulumi.StringArray{
//									pulumi.String("22"),
//								},
//							},
//							&compute.OrganizationSecurityPolicyRuleMatchConfigLayer4ConfigArgs{
//								IpProtocol: pulumi.String("icmp"),
//							},
//						},
//					},
//				},
//				Priority: pulumi.Int(100),
//			}, pulumi.Provider(google_beta))
//			if err != nil {
//				return err
//			}
//			_, err = compute.NewOrganizationSecurityPolicyAssociation(ctx, "policyOrganizationSecurityPolicyAssociation", &compute.OrganizationSecurityPolicyAssociationArgs{
//				AttachmentId: policyOrganizationSecurityPolicy.Parent,
//				PolicyId:     policyOrganizationSecurityPolicy.ID(),
//			}, pulumi.Provider(google_beta))
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// # OrganizationSecurityPolicyAssociation can be imported using any of these accepted formats
//
// ```sh
//
//	$ pulumi import gcp:compute/organizationSecurityPolicyAssociation:OrganizationSecurityPolicyAssociation default {{policy_id}}/association/{{name}}
//
// ```
type OrganizationSecurityPolicyAssociation struct {
	pulumi.CustomResourceState

	// The resource that the security policy is attached to.
	AttachmentId pulumi.StringOutput `pulumi:"attachmentId"`
	// The display name of the security policy of the association.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// The name for an association.
	Name pulumi.StringOutput `pulumi:"name"`
	// The security policy ID of the association.
	PolicyId pulumi.StringOutput `pulumi:"policyId"`
}

// NewOrganizationSecurityPolicyAssociation registers a new resource with the given unique name, arguments, and options.
func NewOrganizationSecurityPolicyAssociation(ctx *pulumi.Context,
	name string, args *OrganizationSecurityPolicyAssociationArgs, opts ...pulumi.ResourceOption) (*OrganizationSecurityPolicyAssociation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AttachmentId == nil {
		return nil, errors.New("invalid value for required argument 'AttachmentId'")
	}
	if args.PolicyId == nil {
		return nil, errors.New("invalid value for required argument 'PolicyId'")
	}
	var resource OrganizationSecurityPolicyAssociation
	err := ctx.RegisterResource("gcp:compute/organizationSecurityPolicyAssociation:OrganizationSecurityPolicyAssociation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOrganizationSecurityPolicyAssociation gets an existing OrganizationSecurityPolicyAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOrganizationSecurityPolicyAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OrganizationSecurityPolicyAssociationState, opts ...pulumi.ResourceOption) (*OrganizationSecurityPolicyAssociation, error) {
	var resource OrganizationSecurityPolicyAssociation
	err := ctx.ReadResource("gcp:compute/organizationSecurityPolicyAssociation:OrganizationSecurityPolicyAssociation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OrganizationSecurityPolicyAssociation resources.
type organizationSecurityPolicyAssociationState struct {
	// The resource that the security policy is attached to.
	AttachmentId *string `pulumi:"attachmentId"`
	// The display name of the security policy of the association.
	DisplayName *string `pulumi:"displayName"`
	// The name for an association.
	Name *string `pulumi:"name"`
	// The security policy ID of the association.
	PolicyId *string `pulumi:"policyId"`
}

type OrganizationSecurityPolicyAssociationState struct {
	// The resource that the security policy is attached to.
	AttachmentId pulumi.StringPtrInput
	// The display name of the security policy of the association.
	DisplayName pulumi.StringPtrInput
	// The name for an association.
	Name pulumi.StringPtrInput
	// The security policy ID of the association.
	PolicyId pulumi.StringPtrInput
}

func (OrganizationSecurityPolicyAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationSecurityPolicyAssociationState)(nil)).Elem()
}

type organizationSecurityPolicyAssociationArgs struct {
	// The resource that the security policy is attached to.
	AttachmentId string `pulumi:"attachmentId"`
	// The name for an association.
	Name *string `pulumi:"name"`
	// The security policy ID of the association.
	PolicyId string `pulumi:"policyId"`
}

// The set of arguments for constructing a OrganizationSecurityPolicyAssociation resource.
type OrganizationSecurityPolicyAssociationArgs struct {
	// The resource that the security policy is attached to.
	AttachmentId pulumi.StringInput
	// The name for an association.
	Name pulumi.StringPtrInput
	// The security policy ID of the association.
	PolicyId pulumi.StringInput
}

func (OrganizationSecurityPolicyAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationSecurityPolicyAssociationArgs)(nil)).Elem()
}

type OrganizationSecurityPolicyAssociationInput interface {
	pulumi.Input

	ToOrganizationSecurityPolicyAssociationOutput() OrganizationSecurityPolicyAssociationOutput
	ToOrganizationSecurityPolicyAssociationOutputWithContext(ctx context.Context) OrganizationSecurityPolicyAssociationOutput
}

func (*OrganizationSecurityPolicyAssociation) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationSecurityPolicyAssociation)(nil)).Elem()
}

func (i *OrganizationSecurityPolicyAssociation) ToOrganizationSecurityPolicyAssociationOutput() OrganizationSecurityPolicyAssociationOutput {
	return i.ToOrganizationSecurityPolicyAssociationOutputWithContext(context.Background())
}

func (i *OrganizationSecurityPolicyAssociation) ToOrganizationSecurityPolicyAssociationOutputWithContext(ctx context.Context) OrganizationSecurityPolicyAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationSecurityPolicyAssociationOutput)
}

// OrganizationSecurityPolicyAssociationArrayInput is an input type that accepts OrganizationSecurityPolicyAssociationArray and OrganizationSecurityPolicyAssociationArrayOutput values.
// You can construct a concrete instance of `OrganizationSecurityPolicyAssociationArrayInput` via:
//
//	OrganizationSecurityPolicyAssociationArray{ OrganizationSecurityPolicyAssociationArgs{...} }
type OrganizationSecurityPolicyAssociationArrayInput interface {
	pulumi.Input

	ToOrganizationSecurityPolicyAssociationArrayOutput() OrganizationSecurityPolicyAssociationArrayOutput
	ToOrganizationSecurityPolicyAssociationArrayOutputWithContext(context.Context) OrganizationSecurityPolicyAssociationArrayOutput
}

type OrganizationSecurityPolicyAssociationArray []OrganizationSecurityPolicyAssociationInput

func (OrganizationSecurityPolicyAssociationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OrganizationSecurityPolicyAssociation)(nil)).Elem()
}

func (i OrganizationSecurityPolicyAssociationArray) ToOrganizationSecurityPolicyAssociationArrayOutput() OrganizationSecurityPolicyAssociationArrayOutput {
	return i.ToOrganizationSecurityPolicyAssociationArrayOutputWithContext(context.Background())
}

func (i OrganizationSecurityPolicyAssociationArray) ToOrganizationSecurityPolicyAssociationArrayOutputWithContext(ctx context.Context) OrganizationSecurityPolicyAssociationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationSecurityPolicyAssociationArrayOutput)
}

// OrganizationSecurityPolicyAssociationMapInput is an input type that accepts OrganizationSecurityPolicyAssociationMap and OrganizationSecurityPolicyAssociationMapOutput values.
// You can construct a concrete instance of `OrganizationSecurityPolicyAssociationMapInput` via:
//
//	OrganizationSecurityPolicyAssociationMap{ "key": OrganizationSecurityPolicyAssociationArgs{...} }
type OrganizationSecurityPolicyAssociationMapInput interface {
	pulumi.Input

	ToOrganizationSecurityPolicyAssociationMapOutput() OrganizationSecurityPolicyAssociationMapOutput
	ToOrganizationSecurityPolicyAssociationMapOutputWithContext(context.Context) OrganizationSecurityPolicyAssociationMapOutput
}

type OrganizationSecurityPolicyAssociationMap map[string]OrganizationSecurityPolicyAssociationInput

func (OrganizationSecurityPolicyAssociationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OrganizationSecurityPolicyAssociation)(nil)).Elem()
}

func (i OrganizationSecurityPolicyAssociationMap) ToOrganizationSecurityPolicyAssociationMapOutput() OrganizationSecurityPolicyAssociationMapOutput {
	return i.ToOrganizationSecurityPolicyAssociationMapOutputWithContext(context.Background())
}

func (i OrganizationSecurityPolicyAssociationMap) ToOrganizationSecurityPolicyAssociationMapOutputWithContext(ctx context.Context) OrganizationSecurityPolicyAssociationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationSecurityPolicyAssociationMapOutput)
}

type OrganizationSecurityPolicyAssociationOutput struct{ *pulumi.OutputState }

func (OrganizationSecurityPolicyAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationSecurityPolicyAssociation)(nil)).Elem()
}

func (o OrganizationSecurityPolicyAssociationOutput) ToOrganizationSecurityPolicyAssociationOutput() OrganizationSecurityPolicyAssociationOutput {
	return o
}

func (o OrganizationSecurityPolicyAssociationOutput) ToOrganizationSecurityPolicyAssociationOutputWithContext(ctx context.Context) OrganizationSecurityPolicyAssociationOutput {
	return o
}

// The resource that the security policy is attached to.
func (o OrganizationSecurityPolicyAssociationOutput) AttachmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationSecurityPolicyAssociation) pulumi.StringOutput { return v.AttachmentId }).(pulumi.StringOutput)
}

// The display name of the security policy of the association.
func (o OrganizationSecurityPolicyAssociationOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationSecurityPolicyAssociation) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// The name for an association.
func (o OrganizationSecurityPolicyAssociationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationSecurityPolicyAssociation) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The security policy ID of the association.
func (o OrganizationSecurityPolicyAssociationOutput) PolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationSecurityPolicyAssociation) pulumi.StringOutput { return v.PolicyId }).(pulumi.StringOutput)
}

type OrganizationSecurityPolicyAssociationArrayOutput struct{ *pulumi.OutputState }

func (OrganizationSecurityPolicyAssociationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OrganizationSecurityPolicyAssociation)(nil)).Elem()
}

func (o OrganizationSecurityPolicyAssociationArrayOutput) ToOrganizationSecurityPolicyAssociationArrayOutput() OrganizationSecurityPolicyAssociationArrayOutput {
	return o
}

func (o OrganizationSecurityPolicyAssociationArrayOutput) ToOrganizationSecurityPolicyAssociationArrayOutputWithContext(ctx context.Context) OrganizationSecurityPolicyAssociationArrayOutput {
	return o
}

func (o OrganizationSecurityPolicyAssociationArrayOutput) Index(i pulumi.IntInput) OrganizationSecurityPolicyAssociationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *OrganizationSecurityPolicyAssociation {
		return vs[0].([]*OrganizationSecurityPolicyAssociation)[vs[1].(int)]
	}).(OrganizationSecurityPolicyAssociationOutput)
}

type OrganizationSecurityPolicyAssociationMapOutput struct{ *pulumi.OutputState }

func (OrganizationSecurityPolicyAssociationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OrganizationSecurityPolicyAssociation)(nil)).Elem()
}

func (o OrganizationSecurityPolicyAssociationMapOutput) ToOrganizationSecurityPolicyAssociationMapOutput() OrganizationSecurityPolicyAssociationMapOutput {
	return o
}

func (o OrganizationSecurityPolicyAssociationMapOutput) ToOrganizationSecurityPolicyAssociationMapOutputWithContext(ctx context.Context) OrganizationSecurityPolicyAssociationMapOutput {
	return o
}

func (o OrganizationSecurityPolicyAssociationMapOutput) MapIndex(k pulumi.StringInput) OrganizationSecurityPolicyAssociationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *OrganizationSecurityPolicyAssociation {
		return vs[0].(map[string]*OrganizationSecurityPolicyAssociation)[vs[1].(string)]
	}).(OrganizationSecurityPolicyAssociationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationSecurityPolicyAssociationInput)(nil)).Elem(), &OrganizationSecurityPolicyAssociation{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationSecurityPolicyAssociationArrayInput)(nil)).Elem(), OrganizationSecurityPolicyAssociationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationSecurityPolicyAssociationMapInput)(nil)).Elem(), OrganizationSecurityPolicyAssociationMap{})
	pulumi.RegisterOutputType(OrganizationSecurityPolicyAssociationOutput{})
	pulumi.RegisterOutputType(OrganizationSecurityPolicyAssociationArrayOutput{})
	pulumi.RegisterOutputType(OrganizationSecurityPolicyAssociationMapOutput{})
}
