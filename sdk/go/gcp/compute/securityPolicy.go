// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package compute

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// A Security Policy defines an IP blacklist or whitelist that protects load balanced Google Cloud services by denying or permitting traffic from specified IP ranges. For more information
// see the [official documentation](https://cloud.google.com/armor/docs/configure-security-policies)
// and the [API](https://cloud.google.com/compute/docs/reference/rest/beta/securityPolicies).
//
// Security Policy is used by google_compute_backend_service.
type SecurityPolicy struct {
	pulumi.CustomResourceState

	// Configuration for [Google Cloud Armor Adaptive Protection](https://cloud.google.com/armor/docs/adaptive-protection-overview?hl=en). Structure is documented below.
	AdaptiveProtectionConfig SecurityPolicyAdaptiveProtectionConfigPtrOutput `pulumi:"adaptiveProtectionConfig"`
	// [Advanced Configuration Options](https://cloud.google.com/armor/docs/security-policy-overview#json-parsing).
	// Structure is documented below.
	AdvancedOptionsConfig SecurityPolicyAdvancedOptionsConfigOutput `pulumi:"advancedOptionsConfig"`
	// An optional description of this security policy. Max size is 2048.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Fingerprint of this resource.
	Fingerprint pulumi.StringOutput `pulumi:"fingerprint"`
	// The name of the security policy.
	//
	// ***
	Name pulumi.StringOutput `pulumi:"name"`
	// The project in which the resource belongs. If it
	// is not provided, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
	// [reCAPTCHA Configuration Options](https://cloud.google.com/armor/docs/configure-security-policies?hl=en#use_a_manual_challenge_to_distinguish_between_human_or_automated_clients). Structure is documented below.
	RecaptchaOptionsConfig SecurityPolicyRecaptchaOptionsConfigPtrOutput `pulumi:"recaptchaOptionsConfig"`
	// The set of rules that belong to this policy. There must always be a default
	// rule (rule with priority 2147483647 and match "\*"). If no rules are provided when creating a
	// security policy, a default rule with action "allow" will be added. Structure is documented below.
	Rules SecurityPolicyRuleArrayOutput `pulumi:"rules"`
	// The URI of the created resourc
	SelfLink pulumi.StringOutput `pulumi:"selfLink"`
	// The type indicates the intended use of the security policy. This field can be set only at resource creation time.
	// * CLOUD_ARMOR - Cloud Armor backend security policies can be configured to filter incoming HTTP requests targeting backend services.
	//   They filter requests before they hit the origin servers.
	// * CLOUD_ARMOR_EDGE - Cloud Armor edge security policies can be configured to filter incoming HTTP requests targeting backend services
	//   (including Cloud CDN-enabled) as well as backend buckets (Cloud Storage).
	//   They filter requests before the request is served from Google's cache.
	// * CLOUD_ARMOR_INTERNAL_SERVICE - Cloud Armor internal service policies can be configured to filter HTTP requests targeting services
	//   managed by Traffic Director in a service mesh. They filter requests before the request is served from the application.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewSecurityPolicy registers a new resource with the given unique name, arguments, and options.
func NewSecurityPolicy(ctx *pulumi.Context,
	name string, args *SecurityPolicyArgs, opts ...pulumi.ResourceOption) (*SecurityPolicy, error) {
	if args == nil {
		args = &SecurityPolicyArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SecurityPolicy
	err := ctx.RegisterResource("gcp:compute/securityPolicy:SecurityPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSecurityPolicy gets an existing SecurityPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSecurityPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SecurityPolicyState, opts ...pulumi.ResourceOption) (*SecurityPolicy, error) {
	var resource SecurityPolicy
	err := ctx.ReadResource("gcp:compute/securityPolicy:SecurityPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SecurityPolicy resources.
type securityPolicyState struct {
	// Configuration for [Google Cloud Armor Adaptive Protection](https://cloud.google.com/armor/docs/adaptive-protection-overview?hl=en). Structure is documented below.
	AdaptiveProtectionConfig *SecurityPolicyAdaptiveProtectionConfig `pulumi:"adaptiveProtectionConfig"`
	// [Advanced Configuration Options](https://cloud.google.com/armor/docs/security-policy-overview#json-parsing).
	// Structure is documented below.
	AdvancedOptionsConfig *SecurityPolicyAdvancedOptionsConfig `pulumi:"advancedOptionsConfig"`
	// An optional description of this security policy. Max size is 2048.
	Description *string `pulumi:"description"`
	// Fingerprint of this resource.
	Fingerprint *string `pulumi:"fingerprint"`
	// The name of the security policy.
	//
	// ***
	Name *string `pulumi:"name"`
	// The project in which the resource belongs. If it
	// is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// [reCAPTCHA Configuration Options](https://cloud.google.com/armor/docs/configure-security-policies?hl=en#use_a_manual_challenge_to_distinguish_between_human_or_automated_clients). Structure is documented below.
	RecaptchaOptionsConfig *SecurityPolicyRecaptchaOptionsConfig `pulumi:"recaptchaOptionsConfig"`
	// The set of rules that belong to this policy. There must always be a default
	// rule (rule with priority 2147483647 and match "\*"). If no rules are provided when creating a
	// security policy, a default rule with action "allow" will be added. Structure is documented below.
	Rules []SecurityPolicyRule `pulumi:"rules"`
	// The URI of the created resourc
	SelfLink *string `pulumi:"selfLink"`
	// The type indicates the intended use of the security policy. This field can be set only at resource creation time.
	// * CLOUD_ARMOR - Cloud Armor backend security policies can be configured to filter incoming HTTP requests targeting backend services.
	//   They filter requests before they hit the origin servers.
	// * CLOUD_ARMOR_EDGE - Cloud Armor edge security policies can be configured to filter incoming HTTP requests targeting backend services
	//   (including Cloud CDN-enabled) as well as backend buckets (Cloud Storage).
	//   They filter requests before the request is served from Google's cache.
	// * CLOUD_ARMOR_INTERNAL_SERVICE - Cloud Armor internal service policies can be configured to filter HTTP requests targeting services
	//   managed by Traffic Director in a service mesh. They filter requests before the request is served from the application.
	Type *string `pulumi:"type"`
}

type SecurityPolicyState struct {
	// Configuration for [Google Cloud Armor Adaptive Protection](https://cloud.google.com/armor/docs/adaptive-protection-overview?hl=en). Structure is documented below.
	AdaptiveProtectionConfig SecurityPolicyAdaptiveProtectionConfigPtrInput
	// [Advanced Configuration Options](https://cloud.google.com/armor/docs/security-policy-overview#json-parsing).
	// Structure is documented below.
	AdvancedOptionsConfig SecurityPolicyAdvancedOptionsConfigPtrInput
	// An optional description of this security policy. Max size is 2048.
	Description pulumi.StringPtrInput
	// Fingerprint of this resource.
	Fingerprint pulumi.StringPtrInput
	// The name of the security policy.
	//
	// ***
	Name pulumi.StringPtrInput
	// The project in which the resource belongs. If it
	// is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// [reCAPTCHA Configuration Options](https://cloud.google.com/armor/docs/configure-security-policies?hl=en#use_a_manual_challenge_to_distinguish_between_human_or_automated_clients). Structure is documented below.
	RecaptchaOptionsConfig SecurityPolicyRecaptchaOptionsConfigPtrInput
	// The set of rules that belong to this policy. There must always be a default
	// rule (rule with priority 2147483647 and match "\*"). If no rules are provided when creating a
	// security policy, a default rule with action "allow" will be added. Structure is documented below.
	Rules SecurityPolicyRuleArrayInput
	// The URI of the created resourc
	SelfLink pulumi.StringPtrInput
	// The type indicates the intended use of the security policy. This field can be set only at resource creation time.
	// * CLOUD_ARMOR - Cloud Armor backend security policies can be configured to filter incoming HTTP requests targeting backend services.
	//   They filter requests before they hit the origin servers.
	// * CLOUD_ARMOR_EDGE - Cloud Armor edge security policies can be configured to filter incoming HTTP requests targeting backend services
	//   (including Cloud CDN-enabled) as well as backend buckets (Cloud Storage).
	//   They filter requests before the request is served from Google's cache.
	// * CLOUD_ARMOR_INTERNAL_SERVICE - Cloud Armor internal service policies can be configured to filter HTTP requests targeting services
	//   managed by Traffic Director in a service mesh. They filter requests before the request is served from the application.
	Type pulumi.StringPtrInput
}

func (SecurityPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*securityPolicyState)(nil)).Elem()
}

type securityPolicyArgs struct {
	// Configuration for [Google Cloud Armor Adaptive Protection](https://cloud.google.com/armor/docs/adaptive-protection-overview?hl=en). Structure is documented below.
	AdaptiveProtectionConfig *SecurityPolicyAdaptiveProtectionConfig `pulumi:"adaptiveProtectionConfig"`
	// [Advanced Configuration Options](https://cloud.google.com/armor/docs/security-policy-overview#json-parsing).
	// Structure is documented below.
	AdvancedOptionsConfig *SecurityPolicyAdvancedOptionsConfig `pulumi:"advancedOptionsConfig"`
	// An optional description of this security policy. Max size is 2048.
	Description *string `pulumi:"description"`
	// The name of the security policy.
	//
	// ***
	Name *string `pulumi:"name"`
	// The project in which the resource belongs. If it
	// is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// [reCAPTCHA Configuration Options](https://cloud.google.com/armor/docs/configure-security-policies?hl=en#use_a_manual_challenge_to_distinguish_between_human_or_automated_clients). Structure is documented below.
	RecaptchaOptionsConfig *SecurityPolicyRecaptchaOptionsConfig `pulumi:"recaptchaOptionsConfig"`
	// The set of rules that belong to this policy. There must always be a default
	// rule (rule with priority 2147483647 and match "\*"). If no rules are provided when creating a
	// security policy, a default rule with action "allow" will be added. Structure is documented below.
	Rules []SecurityPolicyRule `pulumi:"rules"`
	// The type indicates the intended use of the security policy. This field can be set only at resource creation time.
	// * CLOUD_ARMOR - Cloud Armor backend security policies can be configured to filter incoming HTTP requests targeting backend services.
	//   They filter requests before they hit the origin servers.
	// * CLOUD_ARMOR_EDGE - Cloud Armor edge security policies can be configured to filter incoming HTTP requests targeting backend services
	//   (including Cloud CDN-enabled) as well as backend buckets (Cloud Storage).
	//   They filter requests before the request is served from Google's cache.
	// * CLOUD_ARMOR_INTERNAL_SERVICE - Cloud Armor internal service policies can be configured to filter HTTP requests targeting services
	//   managed by Traffic Director in a service mesh. They filter requests before the request is served from the application.
	Type *string `pulumi:"type"`
}

// The set of arguments for constructing a SecurityPolicy resource.
type SecurityPolicyArgs struct {
	// Configuration for [Google Cloud Armor Adaptive Protection](https://cloud.google.com/armor/docs/adaptive-protection-overview?hl=en). Structure is documented below.
	AdaptiveProtectionConfig SecurityPolicyAdaptiveProtectionConfigPtrInput
	// [Advanced Configuration Options](https://cloud.google.com/armor/docs/security-policy-overview#json-parsing).
	// Structure is documented below.
	AdvancedOptionsConfig SecurityPolicyAdvancedOptionsConfigPtrInput
	// An optional description of this security policy. Max size is 2048.
	Description pulumi.StringPtrInput
	// The name of the security policy.
	//
	// ***
	Name pulumi.StringPtrInput
	// The project in which the resource belongs. If it
	// is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// [reCAPTCHA Configuration Options](https://cloud.google.com/armor/docs/configure-security-policies?hl=en#use_a_manual_challenge_to_distinguish_between_human_or_automated_clients). Structure is documented below.
	RecaptchaOptionsConfig SecurityPolicyRecaptchaOptionsConfigPtrInput
	// The set of rules that belong to this policy. There must always be a default
	// rule (rule with priority 2147483647 and match "\*"). If no rules are provided when creating a
	// security policy, a default rule with action "allow" will be added. Structure is documented below.
	Rules SecurityPolicyRuleArrayInput
	// The type indicates the intended use of the security policy. This field can be set only at resource creation time.
	// * CLOUD_ARMOR - Cloud Armor backend security policies can be configured to filter incoming HTTP requests targeting backend services.
	//   They filter requests before they hit the origin servers.
	// * CLOUD_ARMOR_EDGE - Cloud Armor edge security policies can be configured to filter incoming HTTP requests targeting backend services
	//   (including Cloud CDN-enabled) as well as backend buckets (Cloud Storage).
	//   They filter requests before the request is served from Google's cache.
	// * CLOUD_ARMOR_INTERNAL_SERVICE - Cloud Armor internal service policies can be configured to filter HTTP requests targeting services
	//   managed by Traffic Director in a service mesh. They filter requests before the request is served from the application.
	Type pulumi.StringPtrInput
}

func (SecurityPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*securityPolicyArgs)(nil)).Elem()
}

type SecurityPolicyInput interface {
	pulumi.Input

	ToSecurityPolicyOutput() SecurityPolicyOutput
	ToSecurityPolicyOutputWithContext(ctx context.Context) SecurityPolicyOutput
}

func (*SecurityPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityPolicy)(nil)).Elem()
}

func (i *SecurityPolicy) ToSecurityPolicyOutput() SecurityPolicyOutput {
	return i.ToSecurityPolicyOutputWithContext(context.Background())
}

func (i *SecurityPolicy) ToSecurityPolicyOutputWithContext(ctx context.Context) SecurityPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityPolicyOutput)
}

func (i *SecurityPolicy) ToOutput(ctx context.Context) pulumix.Output[*SecurityPolicy] {
	return pulumix.Output[*SecurityPolicy]{
		OutputState: i.ToSecurityPolicyOutputWithContext(ctx).OutputState,
	}
}

// SecurityPolicyArrayInput is an input type that accepts SecurityPolicyArray and SecurityPolicyArrayOutput values.
// You can construct a concrete instance of `SecurityPolicyArrayInput` via:
//
//	SecurityPolicyArray{ SecurityPolicyArgs{...} }
type SecurityPolicyArrayInput interface {
	pulumi.Input

	ToSecurityPolicyArrayOutput() SecurityPolicyArrayOutput
	ToSecurityPolicyArrayOutputWithContext(context.Context) SecurityPolicyArrayOutput
}

type SecurityPolicyArray []SecurityPolicyInput

func (SecurityPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SecurityPolicy)(nil)).Elem()
}

func (i SecurityPolicyArray) ToSecurityPolicyArrayOutput() SecurityPolicyArrayOutput {
	return i.ToSecurityPolicyArrayOutputWithContext(context.Background())
}

func (i SecurityPolicyArray) ToSecurityPolicyArrayOutputWithContext(ctx context.Context) SecurityPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityPolicyArrayOutput)
}

func (i SecurityPolicyArray) ToOutput(ctx context.Context) pulumix.Output[[]*SecurityPolicy] {
	return pulumix.Output[[]*SecurityPolicy]{
		OutputState: i.ToSecurityPolicyArrayOutputWithContext(ctx).OutputState,
	}
}

// SecurityPolicyMapInput is an input type that accepts SecurityPolicyMap and SecurityPolicyMapOutput values.
// You can construct a concrete instance of `SecurityPolicyMapInput` via:
//
//	SecurityPolicyMap{ "key": SecurityPolicyArgs{...} }
type SecurityPolicyMapInput interface {
	pulumi.Input

	ToSecurityPolicyMapOutput() SecurityPolicyMapOutput
	ToSecurityPolicyMapOutputWithContext(context.Context) SecurityPolicyMapOutput
}

type SecurityPolicyMap map[string]SecurityPolicyInput

func (SecurityPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SecurityPolicy)(nil)).Elem()
}

func (i SecurityPolicyMap) ToSecurityPolicyMapOutput() SecurityPolicyMapOutput {
	return i.ToSecurityPolicyMapOutputWithContext(context.Background())
}

func (i SecurityPolicyMap) ToSecurityPolicyMapOutputWithContext(ctx context.Context) SecurityPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityPolicyMapOutput)
}

func (i SecurityPolicyMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*SecurityPolicy] {
	return pulumix.Output[map[string]*SecurityPolicy]{
		OutputState: i.ToSecurityPolicyMapOutputWithContext(ctx).OutputState,
	}
}

type SecurityPolicyOutput struct{ *pulumi.OutputState }

func (SecurityPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityPolicy)(nil)).Elem()
}

func (o SecurityPolicyOutput) ToSecurityPolicyOutput() SecurityPolicyOutput {
	return o
}

func (o SecurityPolicyOutput) ToSecurityPolicyOutputWithContext(ctx context.Context) SecurityPolicyOutput {
	return o
}

func (o SecurityPolicyOutput) ToOutput(ctx context.Context) pulumix.Output[*SecurityPolicy] {
	return pulumix.Output[*SecurityPolicy]{
		OutputState: o.OutputState,
	}
}

// Configuration for [Google Cloud Armor Adaptive Protection](https://cloud.google.com/armor/docs/adaptive-protection-overview?hl=en). Structure is documented below.
func (o SecurityPolicyOutput) AdaptiveProtectionConfig() SecurityPolicyAdaptiveProtectionConfigPtrOutput {
	return o.ApplyT(func(v *SecurityPolicy) SecurityPolicyAdaptiveProtectionConfigPtrOutput {
		return v.AdaptiveProtectionConfig
	}).(SecurityPolicyAdaptiveProtectionConfigPtrOutput)
}

// [Advanced Configuration Options](https://cloud.google.com/armor/docs/security-policy-overview#json-parsing).
// Structure is documented below.
func (o SecurityPolicyOutput) AdvancedOptionsConfig() SecurityPolicyAdvancedOptionsConfigOutput {
	return o.ApplyT(func(v *SecurityPolicy) SecurityPolicyAdvancedOptionsConfigOutput { return v.AdvancedOptionsConfig }).(SecurityPolicyAdvancedOptionsConfigOutput)
}

// An optional description of this security policy. Max size is 2048.
func (o SecurityPolicyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityPolicy) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Fingerprint of this resource.
func (o SecurityPolicyOutput) Fingerprint() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityPolicy) pulumi.StringOutput { return v.Fingerprint }).(pulumi.StringOutput)
}

// The name of the security policy.
//
// ***
func (o SecurityPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityPolicy) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The project in which the resource belongs. If it
// is not provided, the provider project is used.
func (o SecurityPolicyOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityPolicy) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// [reCAPTCHA Configuration Options](https://cloud.google.com/armor/docs/configure-security-policies?hl=en#use_a_manual_challenge_to_distinguish_between_human_or_automated_clients). Structure is documented below.
func (o SecurityPolicyOutput) RecaptchaOptionsConfig() SecurityPolicyRecaptchaOptionsConfigPtrOutput {
	return o.ApplyT(func(v *SecurityPolicy) SecurityPolicyRecaptchaOptionsConfigPtrOutput { return v.RecaptchaOptionsConfig }).(SecurityPolicyRecaptchaOptionsConfigPtrOutput)
}

// The set of rules that belong to this policy. There must always be a default
// rule (rule with priority 2147483647 and match "\*"). If no rules are provided when creating a
// security policy, a default rule with action "allow" will be added. Structure is documented below.
func (o SecurityPolicyOutput) Rules() SecurityPolicyRuleArrayOutput {
	return o.ApplyT(func(v *SecurityPolicy) SecurityPolicyRuleArrayOutput { return v.Rules }).(SecurityPolicyRuleArrayOutput)
}

// The URI of the created resourc
func (o SecurityPolicyOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityPolicy) pulumi.StringOutput { return v.SelfLink }).(pulumi.StringOutput)
}

// The type indicates the intended use of the security policy. This field can be set only at resource creation time.
//   - CLOUD_ARMOR - Cloud Armor backend security policies can be configured to filter incoming HTTP requests targeting backend services.
//     They filter requests before they hit the origin servers.
//   - CLOUD_ARMOR_EDGE - Cloud Armor edge security policies can be configured to filter incoming HTTP requests targeting backend services
//     (including Cloud CDN-enabled) as well as backend buckets (Cloud Storage).
//     They filter requests before the request is served from Google's cache.
//   - CLOUD_ARMOR_INTERNAL_SERVICE - Cloud Armor internal service policies can be configured to filter HTTP requests targeting services
//     managed by Traffic Director in a service mesh. They filter requests before the request is served from the application.
func (o SecurityPolicyOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityPolicy) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

type SecurityPolicyArrayOutput struct{ *pulumi.OutputState }

func (SecurityPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SecurityPolicy)(nil)).Elem()
}

func (o SecurityPolicyArrayOutput) ToSecurityPolicyArrayOutput() SecurityPolicyArrayOutput {
	return o
}

func (o SecurityPolicyArrayOutput) ToSecurityPolicyArrayOutputWithContext(ctx context.Context) SecurityPolicyArrayOutput {
	return o
}

func (o SecurityPolicyArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*SecurityPolicy] {
	return pulumix.Output[[]*SecurityPolicy]{
		OutputState: o.OutputState,
	}
}

func (o SecurityPolicyArrayOutput) Index(i pulumi.IntInput) SecurityPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SecurityPolicy {
		return vs[0].([]*SecurityPolicy)[vs[1].(int)]
	}).(SecurityPolicyOutput)
}

type SecurityPolicyMapOutput struct{ *pulumi.OutputState }

func (SecurityPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SecurityPolicy)(nil)).Elem()
}

func (o SecurityPolicyMapOutput) ToSecurityPolicyMapOutput() SecurityPolicyMapOutput {
	return o
}

func (o SecurityPolicyMapOutput) ToSecurityPolicyMapOutputWithContext(ctx context.Context) SecurityPolicyMapOutput {
	return o
}

func (o SecurityPolicyMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*SecurityPolicy] {
	return pulumix.Output[map[string]*SecurityPolicy]{
		OutputState: o.OutputState,
	}
}

func (o SecurityPolicyMapOutput) MapIndex(k pulumi.StringInput) SecurityPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SecurityPolicy {
		return vs[0].(map[string]*SecurityPolicy)[vs[1].(string)]
	}).(SecurityPolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityPolicyInput)(nil)).Elem(), &SecurityPolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityPolicyArrayInput)(nil)).Elem(), SecurityPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityPolicyMapInput)(nil)).Elem(), SecurityPolicyMap{})
	pulumi.RegisterOutputType(SecurityPolicyOutput{})
	pulumi.RegisterOutputType(SecurityPolicyArrayOutput{})
	pulumi.RegisterOutputType(SecurityPolicyMapOutput{})
}
