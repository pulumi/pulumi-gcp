// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package compute

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ### Future Reservation Basic
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/compute"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := compute.NewFutureReservation(ctx, "gce_future_reservation", &compute.FutureReservationArgs{
//				Name:                              pulumi.String("gce-future-reservation"),
//				Project:                           pulumi.String("my-project-name"),
//				AutoDeleteAutoCreatedReservations: pulumi.Bool(true),
//				PlanningStatus:                    pulumi.String("DRAFT"),
//				NamePrefix:                        pulumi.String("fr-basic"),
//				TimeWindow: &compute.FutureReservationTimeWindowArgs{
//					StartTime: pulumi.String("2025-11-01T00:00:00Z"),
//					EndTime:   pulumi.String("2025-11-02T00:00:00Z"),
//				},
//				SpecificSkuProperties: &compute.FutureReservationSpecificSkuPropertiesArgs{
//					TotalCount: pulumi.String("1"),
//					InstanceProperties: &compute.FutureReservationSpecificSkuPropertiesInstancePropertiesArgs{
//						MachineType: pulumi.String("e2-standard-2"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// FutureReservation can be imported using any of these accepted formats:
//
// * `projects/{{project}}/zones/{{zone}}/futureReservations/{{name}}`
//
// * `{{project}}/{{zone}}/{{name}}`
//
// * `{{zone}}/{{name}}`
//
// * `{{name}}`
//
// When using the `pulumi import` command, FutureReservation can be imported using one of the formats above. For example:
//
// ```sh
// $ pulumi import gcp:compute/futureReservation:FutureReservation default projects/{{project}}/zones/{{zone}}/futureReservations/{{name}}
// ```
//
// ```sh
// $ pulumi import gcp:compute/futureReservation:FutureReservation default {{project}}/{{zone}}/{{name}}
// ```
//
// ```sh
// $ pulumi import gcp:compute/futureReservation:FutureReservation default {{zone}}/{{name}}
// ```
//
// ```sh
// $ pulumi import gcp:compute/futureReservation:FutureReservation default {{name}}
// ```
type FutureReservation struct {
	pulumi.CustomResourceState

	// Future timestamp when the FR auto-created reservations will be deleted by Compute Engine.
	AutoCreatedReservationsDeleteTime pulumi.StringPtrOutput `pulumi:"autoCreatedReservationsDeleteTime"`
	// Specifies the duration of auto-created reservations. It represents relative time to future reservation startTime when
	// auto-created reservations will be automatically deleted by Compute Engine. Duration time unit is represented as a count
	// of seconds and fractions of seconds at nanosecond resolution.
	AutoCreatedReservationsDuration FutureReservationAutoCreatedReservationsDurationPtrOutput `pulumi:"autoCreatedReservationsDuration"`
	// Setting for enabling or disabling automatic deletion for auto-created reservation. If set to true, auto-created
	// reservations will be deleted at Future Reservation's end time (default) or at user's defined timestamp if any of the
	// [autoCreatedReservationsDeleteTime, autoCreatedReservationsDuration] values is specified. For keeping auto-created
	// reservation indefinitely, this value should be set to false.
	AutoDeleteAutoCreatedReservations pulumi.BoolPtrOutput `pulumi:"autoDeleteAutoCreatedReservations"`
	// If not present, then FR will not deliver a new commitment or update an existing commitment.
	CommitmentInfo FutureReservationCommitmentInfoPtrOutput `pulumi:"commitmentInfo"`
	// The creation timestamp for this future reservation in RFC3339 text format.
	CreationTimestamp pulumi.StringOutput `pulumi:"creationTimestamp"`
	// Type of the deployment requested as part of future reservation. Possible values: ["DENSE", "FLEXIBLE"]
	DeploymentType pulumi.StringPtrOutput `pulumi:"deploymentType"`
	// The description of the FutureReservation before an amendment was requested.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Name of the resource. Provided by the client when the resource is
	// created. The name must be 1-63 characters long, and comply with
	// RFC1035. Specifically, the name must be 1-63 characters long and match
	// the regular expression `a-z?` which means the
	// first character must be a lowercase letter, and all following
	// characters must be a dash, lowercase letter, or digit, except the las
	// character, which cannot be a dash.
	Name pulumi.StringOutput `pulumi:"name"`
	// The name prefix of the Future Reservation before an amendment was requested.
	NamePrefix pulumi.StringPtrOutput `pulumi:"namePrefix"`
	// Planning state before being submitted for evaluation Possible values: ["DRAFT", "SUBMITTED"]
	PlanningStatus pulumi.StringOutput `pulumi:"planningStatus"`
	// (Required) The identifier for this object. Format specified above.
	Project pulumi.StringOutput `pulumi:"project"`
	// The reservation mode which determines reservation-termination behavior and expected pricing. Possible values:
	// ["CALENDAR", "DEFAULT"]
	ReservationMode pulumi.StringPtrOutput `pulumi:"reservationMode"`
	// Name of reservations where the capacity is provisioned at the time of delivery of future reservations. If the
	// reservation with the given name does not exist already, it is created automatically at the time of Approval with
	// INACTIVE state till specified start-time. Either provide the reservationName or a namePrefix.
	ReservationName pulumi.StringPtrOutput `pulumi:"reservationName"`
	// Maintenance information for this reservation Possible values: ["GROUPED", "INDEPENDENT"]
	SchedulingType pulumi.StringPtrOutput `pulumi:"schedulingType"`
	// The URI of the created resource.
	SelfLink pulumi.StringOutput `pulumi:"selfLink"`
	// Server-defined URL for this resource with the resource id.
	SelfLinkWithId pulumi.StringOutput `pulumi:"selfLinkWithId"`
	// The previous share settings of the Future Reservation.
	// Structure is documented below.
	ShareSettings FutureReservationShareSettingsPtrOutput `pulumi:"shareSettings"`
	// Indicates whether the auto-created reservation can be consumed by VMs with affinity for "any" reservation. If the field
	// is set, then only VMs that target the reservation by name can consume from the delivered reservation.
	SpecificReservationRequired pulumi.BoolPtrOutput `pulumi:"specificReservationRequired"`
	// The previous instance related properties of the Future Reservation.
	// Structure is documented below.
	SpecificSkuProperties FutureReservationSpecificSkuPropertiesPtrOutput `pulumi:"specificSkuProperties"`
	// [Output only] Status of the Future Reservation
	// Structure is documented below.
	Statuses FutureReservationStatusArrayOutput `pulumi:"statuses"`
	// Time window for this Future Reservation.
	// Structure is documented below.
	TimeWindow FutureReservationTimeWindowOutput `pulumi:"timeWindow"`
	// URL of the Zone where this future reservation resides.
	Zone pulumi.StringOutput `pulumi:"zone"`
}

// NewFutureReservation registers a new resource with the given unique name, arguments, and options.
func NewFutureReservation(ctx *pulumi.Context,
	name string, args *FutureReservationArgs, opts ...pulumi.ResourceOption) (*FutureReservation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.TimeWindow == nil {
		return nil, errors.New("invalid value for required argument 'TimeWindow'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FutureReservation
	err := ctx.RegisterResource("gcp:compute/futureReservation:FutureReservation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFutureReservation gets an existing FutureReservation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFutureReservation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FutureReservationState, opts ...pulumi.ResourceOption) (*FutureReservation, error) {
	var resource FutureReservation
	err := ctx.ReadResource("gcp:compute/futureReservation:FutureReservation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FutureReservation resources.
type futureReservationState struct {
	// Future timestamp when the FR auto-created reservations will be deleted by Compute Engine.
	AutoCreatedReservationsDeleteTime *string `pulumi:"autoCreatedReservationsDeleteTime"`
	// Specifies the duration of auto-created reservations. It represents relative time to future reservation startTime when
	// auto-created reservations will be automatically deleted by Compute Engine. Duration time unit is represented as a count
	// of seconds and fractions of seconds at nanosecond resolution.
	AutoCreatedReservationsDuration *FutureReservationAutoCreatedReservationsDuration `pulumi:"autoCreatedReservationsDuration"`
	// Setting for enabling or disabling automatic deletion for auto-created reservation. If set to true, auto-created
	// reservations will be deleted at Future Reservation's end time (default) or at user's defined timestamp if any of the
	// [autoCreatedReservationsDeleteTime, autoCreatedReservationsDuration] values is specified. For keeping auto-created
	// reservation indefinitely, this value should be set to false.
	AutoDeleteAutoCreatedReservations *bool `pulumi:"autoDeleteAutoCreatedReservations"`
	// If not present, then FR will not deliver a new commitment or update an existing commitment.
	CommitmentInfo *FutureReservationCommitmentInfo `pulumi:"commitmentInfo"`
	// The creation timestamp for this future reservation in RFC3339 text format.
	CreationTimestamp *string `pulumi:"creationTimestamp"`
	// Type of the deployment requested as part of future reservation. Possible values: ["DENSE", "FLEXIBLE"]
	DeploymentType *string `pulumi:"deploymentType"`
	// The description of the FutureReservation before an amendment was requested.
	Description *string `pulumi:"description"`
	// Name of the resource. Provided by the client when the resource is
	// created. The name must be 1-63 characters long, and comply with
	// RFC1035. Specifically, the name must be 1-63 characters long and match
	// the regular expression `a-z?` which means the
	// first character must be a lowercase letter, and all following
	// characters must be a dash, lowercase letter, or digit, except the las
	// character, which cannot be a dash.
	Name *string `pulumi:"name"`
	// The name prefix of the Future Reservation before an amendment was requested.
	NamePrefix *string `pulumi:"namePrefix"`
	// Planning state before being submitted for evaluation Possible values: ["DRAFT", "SUBMITTED"]
	PlanningStatus *string `pulumi:"planningStatus"`
	// (Required) The identifier for this object. Format specified above.
	Project *string `pulumi:"project"`
	// The reservation mode which determines reservation-termination behavior and expected pricing. Possible values:
	// ["CALENDAR", "DEFAULT"]
	ReservationMode *string `pulumi:"reservationMode"`
	// Name of reservations where the capacity is provisioned at the time of delivery of future reservations. If the
	// reservation with the given name does not exist already, it is created automatically at the time of Approval with
	// INACTIVE state till specified start-time. Either provide the reservationName or a namePrefix.
	ReservationName *string `pulumi:"reservationName"`
	// Maintenance information for this reservation Possible values: ["GROUPED", "INDEPENDENT"]
	SchedulingType *string `pulumi:"schedulingType"`
	// The URI of the created resource.
	SelfLink *string `pulumi:"selfLink"`
	// Server-defined URL for this resource with the resource id.
	SelfLinkWithId *string `pulumi:"selfLinkWithId"`
	// The previous share settings of the Future Reservation.
	// Structure is documented below.
	ShareSettings *FutureReservationShareSettings `pulumi:"shareSettings"`
	// Indicates whether the auto-created reservation can be consumed by VMs with affinity for "any" reservation. If the field
	// is set, then only VMs that target the reservation by name can consume from the delivered reservation.
	SpecificReservationRequired *bool `pulumi:"specificReservationRequired"`
	// The previous instance related properties of the Future Reservation.
	// Structure is documented below.
	SpecificSkuProperties *FutureReservationSpecificSkuProperties `pulumi:"specificSkuProperties"`
	// [Output only] Status of the Future Reservation
	// Structure is documented below.
	Statuses []FutureReservationStatus `pulumi:"statuses"`
	// Time window for this Future Reservation.
	// Structure is documented below.
	TimeWindow *FutureReservationTimeWindow `pulumi:"timeWindow"`
	// URL of the Zone where this future reservation resides.
	Zone *string `pulumi:"zone"`
}

type FutureReservationState struct {
	// Future timestamp when the FR auto-created reservations will be deleted by Compute Engine.
	AutoCreatedReservationsDeleteTime pulumi.StringPtrInput
	// Specifies the duration of auto-created reservations. It represents relative time to future reservation startTime when
	// auto-created reservations will be automatically deleted by Compute Engine. Duration time unit is represented as a count
	// of seconds and fractions of seconds at nanosecond resolution.
	AutoCreatedReservationsDuration FutureReservationAutoCreatedReservationsDurationPtrInput
	// Setting for enabling or disabling automatic deletion for auto-created reservation. If set to true, auto-created
	// reservations will be deleted at Future Reservation's end time (default) or at user's defined timestamp if any of the
	// [autoCreatedReservationsDeleteTime, autoCreatedReservationsDuration] values is specified. For keeping auto-created
	// reservation indefinitely, this value should be set to false.
	AutoDeleteAutoCreatedReservations pulumi.BoolPtrInput
	// If not present, then FR will not deliver a new commitment or update an existing commitment.
	CommitmentInfo FutureReservationCommitmentInfoPtrInput
	// The creation timestamp for this future reservation in RFC3339 text format.
	CreationTimestamp pulumi.StringPtrInput
	// Type of the deployment requested as part of future reservation. Possible values: ["DENSE", "FLEXIBLE"]
	DeploymentType pulumi.StringPtrInput
	// The description of the FutureReservation before an amendment was requested.
	Description pulumi.StringPtrInput
	// Name of the resource. Provided by the client when the resource is
	// created. The name must be 1-63 characters long, and comply with
	// RFC1035. Specifically, the name must be 1-63 characters long and match
	// the regular expression `a-z?` which means the
	// first character must be a lowercase letter, and all following
	// characters must be a dash, lowercase letter, or digit, except the las
	// character, which cannot be a dash.
	Name pulumi.StringPtrInput
	// The name prefix of the Future Reservation before an amendment was requested.
	NamePrefix pulumi.StringPtrInput
	// Planning state before being submitted for evaluation Possible values: ["DRAFT", "SUBMITTED"]
	PlanningStatus pulumi.StringPtrInput
	// (Required) The identifier for this object. Format specified above.
	Project pulumi.StringPtrInput
	// The reservation mode which determines reservation-termination behavior and expected pricing. Possible values:
	// ["CALENDAR", "DEFAULT"]
	ReservationMode pulumi.StringPtrInput
	// Name of reservations where the capacity is provisioned at the time of delivery of future reservations. If the
	// reservation with the given name does not exist already, it is created automatically at the time of Approval with
	// INACTIVE state till specified start-time. Either provide the reservationName or a namePrefix.
	ReservationName pulumi.StringPtrInput
	// Maintenance information for this reservation Possible values: ["GROUPED", "INDEPENDENT"]
	SchedulingType pulumi.StringPtrInput
	// The URI of the created resource.
	SelfLink pulumi.StringPtrInput
	// Server-defined URL for this resource with the resource id.
	SelfLinkWithId pulumi.StringPtrInput
	// The previous share settings of the Future Reservation.
	// Structure is documented below.
	ShareSettings FutureReservationShareSettingsPtrInput
	// Indicates whether the auto-created reservation can be consumed by VMs with affinity for "any" reservation. If the field
	// is set, then only VMs that target the reservation by name can consume from the delivered reservation.
	SpecificReservationRequired pulumi.BoolPtrInput
	// The previous instance related properties of the Future Reservation.
	// Structure is documented below.
	SpecificSkuProperties FutureReservationSpecificSkuPropertiesPtrInput
	// [Output only] Status of the Future Reservation
	// Structure is documented below.
	Statuses FutureReservationStatusArrayInput
	// Time window for this Future Reservation.
	// Structure is documented below.
	TimeWindow FutureReservationTimeWindowPtrInput
	// URL of the Zone where this future reservation resides.
	Zone pulumi.StringPtrInput
}

func (FutureReservationState) ElementType() reflect.Type {
	return reflect.TypeOf((*futureReservationState)(nil)).Elem()
}

type futureReservationArgs struct {
	// Future timestamp when the FR auto-created reservations will be deleted by Compute Engine.
	AutoCreatedReservationsDeleteTime *string `pulumi:"autoCreatedReservationsDeleteTime"`
	// Specifies the duration of auto-created reservations. It represents relative time to future reservation startTime when
	// auto-created reservations will be automatically deleted by Compute Engine. Duration time unit is represented as a count
	// of seconds and fractions of seconds at nanosecond resolution.
	AutoCreatedReservationsDuration *FutureReservationAutoCreatedReservationsDuration `pulumi:"autoCreatedReservationsDuration"`
	// Setting for enabling or disabling automatic deletion for auto-created reservation. If set to true, auto-created
	// reservations will be deleted at Future Reservation's end time (default) or at user's defined timestamp if any of the
	// [autoCreatedReservationsDeleteTime, autoCreatedReservationsDuration] values is specified. For keeping auto-created
	// reservation indefinitely, this value should be set to false.
	AutoDeleteAutoCreatedReservations *bool `pulumi:"autoDeleteAutoCreatedReservations"`
	// If not present, then FR will not deliver a new commitment or update an existing commitment.
	CommitmentInfo *FutureReservationCommitmentInfo `pulumi:"commitmentInfo"`
	// Type of the deployment requested as part of future reservation. Possible values: ["DENSE", "FLEXIBLE"]
	DeploymentType *string `pulumi:"deploymentType"`
	// The description of the FutureReservation before an amendment was requested.
	Description *string `pulumi:"description"`
	// Name of the resource. Provided by the client when the resource is
	// created. The name must be 1-63 characters long, and comply with
	// RFC1035. Specifically, the name must be 1-63 characters long and match
	// the regular expression `a-z?` which means the
	// first character must be a lowercase letter, and all following
	// characters must be a dash, lowercase letter, or digit, except the las
	// character, which cannot be a dash.
	Name *string `pulumi:"name"`
	// The name prefix of the Future Reservation before an amendment was requested.
	NamePrefix *string `pulumi:"namePrefix"`
	// Planning state before being submitted for evaluation Possible values: ["DRAFT", "SUBMITTED"]
	PlanningStatus *string `pulumi:"planningStatus"`
	// (Required) The identifier for this object. Format specified above.
	Project *string `pulumi:"project"`
	// The reservation mode which determines reservation-termination behavior and expected pricing. Possible values:
	// ["CALENDAR", "DEFAULT"]
	ReservationMode *string `pulumi:"reservationMode"`
	// Name of reservations where the capacity is provisioned at the time of delivery of future reservations. If the
	// reservation with the given name does not exist already, it is created automatically at the time of Approval with
	// INACTIVE state till specified start-time. Either provide the reservationName or a namePrefix.
	ReservationName *string `pulumi:"reservationName"`
	// Maintenance information for this reservation Possible values: ["GROUPED", "INDEPENDENT"]
	SchedulingType *string `pulumi:"schedulingType"`
	// The previous share settings of the Future Reservation.
	// Structure is documented below.
	ShareSettings *FutureReservationShareSettings `pulumi:"shareSettings"`
	// Indicates whether the auto-created reservation can be consumed by VMs with affinity for "any" reservation. If the field
	// is set, then only VMs that target the reservation by name can consume from the delivered reservation.
	SpecificReservationRequired *bool `pulumi:"specificReservationRequired"`
	// The previous instance related properties of the Future Reservation.
	// Structure is documented below.
	SpecificSkuProperties *FutureReservationSpecificSkuProperties `pulumi:"specificSkuProperties"`
	// Time window for this Future Reservation.
	// Structure is documented below.
	TimeWindow FutureReservationTimeWindow `pulumi:"timeWindow"`
}

// The set of arguments for constructing a FutureReservation resource.
type FutureReservationArgs struct {
	// Future timestamp when the FR auto-created reservations will be deleted by Compute Engine.
	AutoCreatedReservationsDeleteTime pulumi.StringPtrInput
	// Specifies the duration of auto-created reservations. It represents relative time to future reservation startTime when
	// auto-created reservations will be automatically deleted by Compute Engine. Duration time unit is represented as a count
	// of seconds and fractions of seconds at nanosecond resolution.
	AutoCreatedReservationsDuration FutureReservationAutoCreatedReservationsDurationPtrInput
	// Setting for enabling or disabling automatic deletion for auto-created reservation. If set to true, auto-created
	// reservations will be deleted at Future Reservation's end time (default) or at user's defined timestamp if any of the
	// [autoCreatedReservationsDeleteTime, autoCreatedReservationsDuration] values is specified. For keeping auto-created
	// reservation indefinitely, this value should be set to false.
	AutoDeleteAutoCreatedReservations pulumi.BoolPtrInput
	// If not present, then FR will not deliver a new commitment or update an existing commitment.
	CommitmentInfo FutureReservationCommitmentInfoPtrInput
	// Type of the deployment requested as part of future reservation. Possible values: ["DENSE", "FLEXIBLE"]
	DeploymentType pulumi.StringPtrInput
	// The description of the FutureReservation before an amendment was requested.
	Description pulumi.StringPtrInput
	// Name of the resource. Provided by the client when the resource is
	// created. The name must be 1-63 characters long, and comply with
	// RFC1035. Specifically, the name must be 1-63 characters long and match
	// the regular expression `a-z?` which means the
	// first character must be a lowercase letter, and all following
	// characters must be a dash, lowercase letter, or digit, except the las
	// character, which cannot be a dash.
	Name pulumi.StringPtrInput
	// The name prefix of the Future Reservation before an amendment was requested.
	NamePrefix pulumi.StringPtrInput
	// Planning state before being submitted for evaluation Possible values: ["DRAFT", "SUBMITTED"]
	PlanningStatus pulumi.StringPtrInput
	// (Required) The identifier for this object. Format specified above.
	Project pulumi.StringPtrInput
	// The reservation mode which determines reservation-termination behavior and expected pricing. Possible values:
	// ["CALENDAR", "DEFAULT"]
	ReservationMode pulumi.StringPtrInput
	// Name of reservations where the capacity is provisioned at the time of delivery of future reservations. If the
	// reservation with the given name does not exist already, it is created automatically at the time of Approval with
	// INACTIVE state till specified start-time. Either provide the reservationName or a namePrefix.
	ReservationName pulumi.StringPtrInput
	// Maintenance information for this reservation Possible values: ["GROUPED", "INDEPENDENT"]
	SchedulingType pulumi.StringPtrInput
	// The previous share settings of the Future Reservation.
	// Structure is documented below.
	ShareSettings FutureReservationShareSettingsPtrInput
	// Indicates whether the auto-created reservation can be consumed by VMs with affinity for "any" reservation. If the field
	// is set, then only VMs that target the reservation by name can consume from the delivered reservation.
	SpecificReservationRequired pulumi.BoolPtrInput
	// The previous instance related properties of the Future Reservation.
	// Structure is documented below.
	SpecificSkuProperties FutureReservationSpecificSkuPropertiesPtrInput
	// Time window for this Future Reservation.
	// Structure is documented below.
	TimeWindow FutureReservationTimeWindowInput
}

func (FutureReservationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*futureReservationArgs)(nil)).Elem()
}

type FutureReservationInput interface {
	pulumi.Input

	ToFutureReservationOutput() FutureReservationOutput
	ToFutureReservationOutputWithContext(ctx context.Context) FutureReservationOutput
}

func (*FutureReservation) ElementType() reflect.Type {
	return reflect.TypeOf((**FutureReservation)(nil)).Elem()
}

func (i *FutureReservation) ToFutureReservationOutput() FutureReservationOutput {
	return i.ToFutureReservationOutputWithContext(context.Background())
}

func (i *FutureReservation) ToFutureReservationOutputWithContext(ctx context.Context) FutureReservationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FutureReservationOutput)
}

// FutureReservationArrayInput is an input type that accepts FutureReservationArray and FutureReservationArrayOutput values.
// You can construct a concrete instance of `FutureReservationArrayInput` via:
//
//	FutureReservationArray{ FutureReservationArgs{...} }
type FutureReservationArrayInput interface {
	pulumi.Input

	ToFutureReservationArrayOutput() FutureReservationArrayOutput
	ToFutureReservationArrayOutputWithContext(context.Context) FutureReservationArrayOutput
}

type FutureReservationArray []FutureReservationInput

func (FutureReservationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FutureReservation)(nil)).Elem()
}

func (i FutureReservationArray) ToFutureReservationArrayOutput() FutureReservationArrayOutput {
	return i.ToFutureReservationArrayOutputWithContext(context.Background())
}

func (i FutureReservationArray) ToFutureReservationArrayOutputWithContext(ctx context.Context) FutureReservationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FutureReservationArrayOutput)
}

// FutureReservationMapInput is an input type that accepts FutureReservationMap and FutureReservationMapOutput values.
// You can construct a concrete instance of `FutureReservationMapInput` via:
//
//	FutureReservationMap{ "key": FutureReservationArgs{...} }
type FutureReservationMapInput interface {
	pulumi.Input

	ToFutureReservationMapOutput() FutureReservationMapOutput
	ToFutureReservationMapOutputWithContext(context.Context) FutureReservationMapOutput
}

type FutureReservationMap map[string]FutureReservationInput

func (FutureReservationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FutureReservation)(nil)).Elem()
}

func (i FutureReservationMap) ToFutureReservationMapOutput() FutureReservationMapOutput {
	return i.ToFutureReservationMapOutputWithContext(context.Background())
}

func (i FutureReservationMap) ToFutureReservationMapOutputWithContext(ctx context.Context) FutureReservationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FutureReservationMapOutput)
}

type FutureReservationOutput struct{ *pulumi.OutputState }

func (FutureReservationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FutureReservation)(nil)).Elem()
}

func (o FutureReservationOutput) ToFutureReservationOutput() FutureReservationOutput {
	return o
}

func (o FutureReservationOutput) ToFutureReservationOutputWithContext(ctx context.Context) FutureReservationOutput {
	return o
}

// Future timestamp when the FR auto-created reservations will be deleted by Compute Engine.
func (o FutureReservationOutput) AutoCreatedReservationsDeleteTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FutureReservation) pulumi.StringPtrOutput { return v.AutoCreatedReservationsDeleteTime }).(pulumi.StringPtrOutput)
}

// Specifies the duration of auto-created reservations. It represents relative time to future reservation startTime when
// auto-created reservations will be automatically deleted by Compute Engine. Duration time unit is represented as a count
// of seconds and fractions of seconds at nanosecond resolution.
func (o FutureReservationOutput) AutoCreatedReservationsDuration() FutureReservationAutoCreatedReservationsDurationPtrOutput {
	return o.ApplyT(func(v *FutureReservation) FutureReservationAutoCreatedReservationsDurationPtrOutput {
		return v.AutoCreatedReservationsDuration
	}).(FutureReservationAutoCreatedReservationsDurationPtrOutput)
}

// Setting for enabling or disabling automatic deletion for auto-created reservation. If set to true, auto-created
// reservations will be deleted at Future Reservation's end time (default) or at user's defined timestamp if any of the
// [autoCreatedReservationsDeleteTime, autoCreatedReservationsDuration] values is specified. For keeping auto-created
// reservation indefinitely, this value should be set to false.
func (o FutureReservationOutput) AutoDeleteAutoCreatedReservations() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FutureReservation) pulumi.BoolPtrOutput { return v.AutoDeleteAutoCreatedReservations }).(pulumi.BoolPtrOutput)
}

// If not present, then FR will not deliver a new commitment or update an existing commitment.
func (o FutureReservationOutput) CommitmentInfo() FutureReservationCommitmentInfoPtrOutput {
	return o.ApplyT(func(v *FutureReservation) FutureReservationCommitmentInfoPtrOutput { return v.CommitmentInfo }).(FutureReservationCommitmentInfoPtrOutput)
}

// The creation timestamp for this future reservation in RFC3339 text format.
func (o FutureReservationOutput) CreationTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v *FutureReservation) pulumi.StringOutput { return v.CreationTimestamp }).(pulumi.StringOutput)
}

// Type of the deployment requested as part of future reservation. Possible values: ["DENSE", "FLEXIBLE"]
func (o FutureReservationOutput) DeploymentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FutureReservation) pulumi.StringPtrOutput { return v.DeploymentType }).(pulumi.StringPtrOutput)
}

// The description of the FutureReservation before an amendment was requested.
func (o FutureReservationOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FutureReservation) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Name of the resource. Provided by the client when the resource is
// created. The name must be 1-63 characters long, and comply with
// RFC1035. Specifically, the name must be 1-63 characters long and match
// the regular expression `a-z?` which means the
// first character must be a lowercase letter, and all following
// characters must be a dash, lowercase letter, or digit, except the las
// character, which cannot be a dash.
func (o FutureReservationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *FutureReservation) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The name prefix of the Future Reservation before an amendment was requested.
func (o FutureReservationOutput) NamePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FutureReservation) pulumi.StringPtrOutput { return v.NamePrefix }).(pulumi.StringPtrOutput)
}

// Planning state before being submitted for evaluation Possible values: ["DRAFT", "SUBMITTED"]
func (o FutureReservationOutput) PlanningStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *FutureReservation) pulumi.StringOutput { return v.PlanningStatus }).(pulumi.StringOutput)
}

// (Required) The identifier for this object. Format specified above.
func (o FutureReservationOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *FutureReservation) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The reservation mode which determines reservation-termination behavior and expected pricing. Possible values:
// ["CALENDAR", "DEFAULT"]
func (o FutureReservationOutput) ReservationMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FutureReservation) pulumi.StringPtrOutput { return v.ReservationMode }).(pulumi.StringPtrOutput)
}

// Name of reservations where the capacity is provisioned at the time of delivery of future reservations. If the
// reservation with the given name does not exist already, it is created automatically at the time of Approval with
// INACTIVE state till specified start-time. Either provide the reservationName or a namePrefix.
func (o FutureReservationOutput) ReservationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FutureReservation) pulumi.StringPtrOutput { return v.ReservationName }).(pulumi.StringPtrOutput)
}

// Maintenance information for this reservation Possible values: ["GROUPED", "INDEPENDENT"]
func (o FutureReservationOutput) SchedulingType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FutureReservation) pulumi.StringPtrOutput { return v.SchedulingType }).(pulumi.StringPtrOutput)
}

// The URI of the created resource.
func (o FutureReservationOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v *FutureReservation) pulumi.StringOutput { return v.SelfLink }).(pulumi.StringOutput)
}

// Server-defined URL for this resource with the resource id.
func (o FutureReservationOutput) SelfLinkWithId() pulumi.StringOutput {
	return o.ApplyT(func(v *FutureReservation) pulumi.StringOutput { return v.SelfLinkWithId }).(pulumi.StringOutput)
}

// The previous share settings of the Future Reservation.
// Structure is documented below.
func (o FutureReservationOutput) ShareSettings() FutureReservationShareSettingsPtrOutput {
	return o.ApplyT(func(v *FutureReservation) FutureReservationShareSettingsPtrOutput { return v.ShareSettings }).(FutureReservationShareSettingsPtrOutput)
}

// Indicates whether the auto-created reservation can be consumed by VMs with affinity for "any" reservation. If the field
// is set, then only VMs that target the reservation by name can consume from the delivered reservation.
func (o FutureReservationOutput) SpecificReservationRequired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FutureReservation) pulumi.BoolPtrOutput { return v.SpecificReservationRequired }).(pulumi.BoolPtrOutput)
}

// The previous instance related properties of the Future Reservation.
// Structure is documented below.
func (o FutureReservationOutput) SpecificSkuProperties() FutureReservationSpecificSkuPropertiesPtrOutput {
	return o.ApplyT(func(v *FutureReservation) FutureReservationSpecificSkuPropertiesPtrOutput {
		return v.SpecificSkuProperties
	}).(FutureReservationSpecificSkuPropertiesPtrOutput)
}

// [Output only] Status of the Future Reservation
// Structure is documented below.
func (o FutureReservationOutput) Statuses() FutureReservationStatusArrayOutput {
	return o.ApplyT(func(v *FutureReservation) FutureReservationStatusArrayOutput { return v.Statuses }).(FutureReservationStatusArrayOutput)
}

// Time window for this Future Reservation.
// Structure is documented below.
func (o FutureReservationOutput) TimeWindow() FutureReservationTimeWindowOutput {
	return o.ApplyT(func(v *FutureReservation) FutureReservationTimeWindowOutput { return v.TimeWindow }).(FutureReservationTimeWindowOutput)
}

// URL of the Zone where this future reservation resides.
func (o FutureReservationOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v *FutureReservation) pulumi.StringOutput { return v.Zone }).(pulumi.StringOutput)
}

type FutureReservationArrayOutput struct{ *pulumi.OutputState }

func (FutureReservationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FutureReservation)(nil)).Elem()
}

func (o FutureReservationArrayOutput) ToFutureReservationArrayOutput() FutureReservationArrayOutput {
	return o
}

func (o FutureReservationArrayOutput) ToFutureReservationArrayOutputWithContext(ctx context.Context) FutureReservationArrayOutput {
	return o
}

func (o FutureReservationArrayOutput) Index(i pulumi.IntInput) FutureReservationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FutureReservation {
		return vs[0].([]*FutureReservation)[vs[1].(int)]
	}).(FutureReservationOutput)
}

type FutureReservationMapOutput struct{ *pulumi.OutputState }

func (FutureReservationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FutureReservation)(nil)).Elem()
}

func (o FutureReservationMapOutput) ToFutureReservationMapOutput() FutureReservationMapOutput {
	return o
}

func (o FutureReservationMapOutput) ToFutureReservationMapOutputWithContext(ctx context.Context) FutureReservationMapOutput {
	return o
}

func (o FutureReservationMapOutput) MapIndex(k pulumi.StringInput) FutureReservationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FutureReservation {
		return vs[0].(map[string]*FutureReservation)[vs[1].(string)]
	}).(FutureReservationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FutureReservationInput)(nil)).Elem(), &FutureReservation{})
	pulumi.RegisterInputType(reflect.TypeOf((*FutureReservationArrayInput)(nil)).Elem(), FutureReservationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FutureReservationMapInput)(nil)).Elem(), FutureReservationMap{})
	pulumi.RegisterOutputType(FutureReservationOutput{})
	pulumi.RegisterOutputType(FutureReservationArrayOutput{})
	pulumi.RegisterOutputType(FutureReservationMapOutput{})
}
