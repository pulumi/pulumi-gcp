// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package compute

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// To get more information about Snapshot, see:
//
// * [API documentation](https://cloud.google.com/compute/docs/reference/rest/v1/routers)
// * How-to Guides
//   - [Official Documentation](https://cloud.google.com/router/docs/)
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/compute"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := compute.LookupRouterNat(ctx, &compute.LookupRouterNatArgs{
//				Name:   "my-nat",
//				Router: "my-router",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupRouterNat(ctx *pulumi.Context, args *LookupRouterNatArgs, opts ...pulumi.InvokeOption) (*LookupRouterNatResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupRouterNatResult
	err := ctx.Invoke("gcp:compute/getRouterNat:getRouterNat", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRouterNat.
type LookupRouterNatArgs struct {
	// Name of the NAT service. The name must be 1-63 characters long and
	// comply with RFC1035.
	Name string `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// Region where the router and NAT reside.
	Region *string `pulumi:"region"`
	// The name of the Cloud Router in which this NAT will be configured.
	//
	// ***
	Router string `pulumi:"router"`
}

// A collection of values returned by getRouterNat.
type LookupRouterNatResult struct {
	AutoNetworkTier                  string   `pulumi:"autoNetworkTier"`
	DrainNatIps                      []string `pulumi:"drainNatIps"`
	EnableDynamicPortAllocation      bool     `pulumi:"enableDynamicPortAllocation"`
	EnableEndpointIndependentMapping bool     `pulumi:"enableEndpointIndependentMapping"`
	EndpointTypes                    []string `pulumi:"endpointTypes"`
	IcmpIdleTimeoutSec               int      `pulumi:"icmpIdleTimeoutSec"`
	// The provider-assigned unique ID for this managed resource.
	Id                              string                        `pulumi:"id"`
	InitialNatIps                   []string                      `pulumi:"initialNatIps"`
	LogConfigs                      []GetRouterNatLogConfig       `pulumi:"logConfigs"`
	MaxPortsPerVm                   int                           `pulumi:"maxPortsPerVm"`
	MinPortsPerVm                   int                           `pulumi:"minPortsPerVm"`
	Name                            string                        `pulumi:"name"`
	Nat64Subnetworks                []GetRouterNatNat64Subnetwork `pulumi:"nat64Subnetworks"`
	NatIpAllocateOption             string                        `pulumi:"natIpAllocateOption"`
	NatIps                          []string                      `pulumi:"natIps"`
	Project                         *string                       `pulumi:"project"`
	Region                          *string                       `pulumi:"region"`
	Router                          string                        `pulumi:"router"`
	Rules                           []GetRouterNatRule            `pulumi:"rules"`
	SourceSubnetworkIpRangesToNat   string                        `pulumi:"sourceSubnetworkIpRangesToNat"`
	SourceSubnetworkIpRangesToNat64 string                        `pulumi:"sourceSubnetworkIpRangesToNat64"`
	Subnetworks                     []GetRouterNatSubnetwork      `pulumi:"subnetworks"`
	TcpEstablishedIdleTimeoutSec    int                           `pulumi:"tcpEstablishedIdleTimeoutSec"`
	TcpTimeWaitTimeoutSec           int                           `pulumi:"tcpTimeWaitTimeoutSec"`
	TcpTransitoryIdleTimeoutSec     int                           `pulumi:"tcpTransitoryIdleTimeoutSec"`
	Type                            string                        `pulumi:"type"`
	UdpIdleTimeoutSec               int                           `pulumi:"udpIdleTimeoutSec"`
}

func LookupRouterNatOutput(ctx *pulumi.Context, args LookupRouterNatOutputArgs, opts ...pulumi.InvokeOption) LookupRouterNatResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupRouterNatResultOutput, error) {
			args := v.(LookupRouterNatArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("gcp:compute/getRouterNat:getRouterNat", args, LookupRouterNatResultOutput{}, options).(LookupRouterNatResultOutput), nil
		}).(LookupRouterNatResultOutput)
}

// A collection of arguments for invoking getRouterNat.
type LookupRouterNatOutputArgs struct {
	// Name of the NAT service. The name must be 1-63 characters long and
	// comply with RFC1035.
	Name pulumi.StringInput `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput `pulumi:"project"`
	// Region where the router and NAT reside.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// The name of the Cloud Router in which this NAT will be configured.
	//
	// ***
	Router pulumi.StringInput `pulumi:"router"`
}

func (LookupRouterNatOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRouterNatArgs)(nil)).Elem()
}

// A collection of values returned by getRouterNat.
type LookupRouterNatResultOutput struct{ *pulumi.OutputState }

func (LookupRouterNatResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRouterNatResult)(nil)).Elem()
}

func (o LookupRouterNatResultOutput) ToLookupRouterNatResultOutput() LookupRouterNatResultOutput {
	return o
}

func (o LookupRouterNatResultOutput) ToLookupRouterNatResultOutputWithContext(ctx context.Context) LookupRouterNatResultOutput {
	return o
}

func (o LookupRouterNatResultOutput) AutoNetworkTier() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRouterNatResult) string { return v.AutoNetworkTier }).(pulumi.StringOutput)
}

func (o LookupRouterNatResultOutput) DrainNatIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupRouterNatResult) []string { return v.DrainNatIps }).(pulumi.StringArrayOutput)
}

func (o LookupRouterNatResultOutput) EnableDynamicPortAllocation() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupRouterNatResult) bool { return v.EnableDynamicPortAllocation }).(pulumi.BoolOutput)
}

func (o LookupRouterNatResultOutput) EnableEndpointIndependentMapping() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupRouterNatResult) bool { return v.EnableEndpointIndependentMapping }).(pulumi.BoolOutput)
}

func (o LookupRouterNatResultOutput) EndpointTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupRouterNatResult) []string { return v.EndpointTypes }).(pulumi.StringArrayOutput)
}

func (o LookupRouterNatResultOutput) IcmpIdleTimeoutSec() pulumi.IntOutput {
	return o.ApplyT(func(v LookupRouterNatResult) int { return v.IcmpIdleTimeoutSec }).(pulumi.IntOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupRouterNatResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRouterNatResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupRouterNatResultOutput) InitialNatIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupRouterNatResult) []string { return v.InitialNatIps }).(pulumi.StringArrayOutput)
}

func (o LookupRouterNatResultOutput) LogConfigs() GetRouterNatLogConfigArrayOutput {
	return o.ApplyT(func(v LookupRouterNatResult) []GetRouterNatLogConfig { return v.LogConfigs }).(GetRouterNatLogConfigArrayOutput)
}

func (o LookupRouterNatResultOutput) MaxPortsPerVm() pulumi.IntOutput {
	return o.ApplyT(func(v LookupRouterNatResult) int { return v.MaxPortsPerVm }).(pulumi.IntOutput)
}

func (o LookupRouterNatResultOutput) MinPortsPerVm() pulumi.IntOutput {
	return o.ApplyT(func(v LookupRouterNatResult) int { return v.MinPortsPerVm }).(pulumi.IntOutput)
}

func (o LookupRouterNatResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRouterNatResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupRouterNatResultOutput) Nat64Subnetworks() GetRouterNatNat64SubnetworkArrayOutput {
	return o.ApplyT(func(v LookupRouterNatResult) []GetRouterNatNat64Subnetwork { return v.Nat64Subnetworks }).(GetRouterNatNat64SubnetworkArrayOutput)
}

func (o LookupRouterNatResultOutput) NatIpAllocateOption() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRouterNatResult) string { return v.NatIpAllocateOption }).(pulumi.StringOutput)
}

func (o LookupRouterNatResultOutput) NatIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupRouterNatResult) []string { return v.NatIps }).(pulumi.StringArrayOutput)
}

func (o LookupRouterNatResultOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRouterNatResult) *string { return v.Project }).(pulumi.StringPtrOutput)
}

func (o LookupRouterNatResultOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRouterNatResult) *string { return v.Region }).(pulumi.StringPtrOutput)
}

func (o LookupRouterNatResultOutput) Router() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRouterNatResult) string { return v.Router }).(pulumi.StringOutput)
}

func (o LookupRouterNatResultOutput) Rules() GetRouterNatRuleArrayOutput {
	return o.ApplyT(func(v LookupRouterNatResult) []GetRouterNatRule { return v.Rules }).(GetRouterNatRuleArrayOutput)
}

func (o LookupRouterNatResultOutput) SourceSubnetworkIpRangesToNat() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRouterNatResult) string { return v.SourceSubnetworkIpRangesToNat }).(pulumi.StringOutput)
}

func (o LookupRouterNatResultOutput) SourceSubnetworkIpRangesToNat64() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRouterNatResult) string { return v.SourceSubnetworkIpRangesToNat64 }).(pulumi.StringOutput)
}

func (o LookupRouterNatResultOutput) Subnetworks() GetRouterNatSubnetworkArrayOutput {
	return o.ApplyT(func(v LookupRouterNatResult) []GetRouterNatSubnetwork { return v.Subnetworks }).(GetRouterNatSubnetworkArrayOutput)
}

func (o LookupRouterNatResultOutput) TcpEstablishedIdleTimeoutSec() pulumi.IntOutput {
	return o.ApplyT(func(v LookupRouterNatResult) int { return v.TcpEstablishedIdleTimeoutSec }).(pulumi.IntOutput)
}

func (o LookupRouterNatResultOutput) TcpTimeWaitTimeoutSec() pulumi.IntOutput {
	return o.ApplyT(func(v LookupRouterNatResult) int { return v.TcpTimeWaitTimeoutSec }).(pulumi.IntOutput)
}

func (o LookupRouterNatResultOutput) TcpTransitoryIdleTimeoutSec() pulumi.IntOutput {
	return o.ApplyT(func(v LookupRouterNatResult) int { return v.TcpTransitoryIdleTimeoutSec }).(pulumi.IntOutput)
}

func (o LookupRouterNatResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRouterNatResult) string { return v.Type }).(pulumi.StringOutput)
}

func (o LookupRouterNatResultOutput) UdpIdleTimeoutSec() pulumi.IntOutput {
	return o.ApplyT(func(v LookupRouterNatResult) int { return v.UdpIdleTimeoutSec }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRouterNatResultOutput{})
}
