// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package compute

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Represents a PublicDelegatedPrefix for use with bring your own IP addresses (BYOIP).
//
// To get more information about PublicDelegatedPrefix, see:
//
// * [API documentation](https://cloud.google.com/compute/docs/reference/rest/v1/publicDelegatedPrefixes)
// * How-to Guides
//   - [Using bring your own IP](https://cloud.google.com/vpc/docs/using-bring-your-own-ip)
//
// ## Example Usage
// ### Public Delegated Prefixes Basic
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/compute"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			advertised, err := compute.NewPublicAdvertisedPrefix(ctx, "advertised", &compute.PublicAdvertisedPrefixArgs{
//				Description:       pulumi.String("description"),
//				DnsVerificationIp: pulumi.String("127.127.0.0"),
//				IpCidrRange:       pulumi.String("127.127.0.0/16"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = compute.NewPublicDelegatedPrefix(ctx, "prefixes", &compute.PublicDelegatedPrefixArgs{
//				Region:       pulumi.String("us-central1"),
//				Description:  pulumi.String("my description"),
//				IpCidrRange:  pulumi.String("127.127.0.0/24"),
//				ParentPrefix: advertised.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// # PublicDelegatedPrefix can be imported using any of these accepted formats
//
// ```sh
//
//	$ pulumi import gcp:compute/publicDelegatedPrefix:PublicDelegatedPrefix default projects/{{project}}/regions/{{region}}/publicDelegatedPrefixes/{{name}}
//
// ```
//
// ```sh
//
//	$ pulumi import gcp:compute/publicDelegatedPrefix:PublicDelegatedPrefix default {{project}}/{{region}}/{{name}}
//
// ```
//
// ```sh
//
//	$ pulumi import gcp:compute/publicDelegatedPrefix:PublicDelegatedPrefix default {{region}}/{{name}}
//
// ```
//
// ```sh
//
//	$ pulumi import gcp:compute/publicDelegatedPrefix:PublicDelegatedPrefix default {{name}}
//
// ```
type PublicDelegatedPrefix struct {
	pulumi.CustomResourceState

	// An optional description of this resource.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The IPv4 address range, in CIDR format, represented by this public advertised prefix.
	//
	// ***
	IpCidrRange pulumi.StringOutput `pulumi:"ipCidrRange"`
	// If true, the prefix will be live migrated.
	IsLiveMigration pulumi.BoolPtrOutput `pulumi:"isLiveMigration"`
	// Name of the resource. The name must be 1-63 characters long, and
	// comply with RFC1035. Specifically, the name must be 1-63 characters
	// long and match the regular expression `a-z?`
	// which means the first character must be a lowercase letter, and all
	// following characters must be a dash, lowercase letter, or digit,
	// except the last character, which cannot be a dash.
	Name pulumi.StringOutput `pulumi:"name"`
	// The URL of parent prefix. Either PublicAdvertisedPrefix or PublicDelegatedPrefix.
	ParentPrefix pulumi.StringOutput `pulumi:"parentPrefix"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
	// A region where the prefix will reside.
	Region pulumi.StringOutput `pulumi:"region"`
	// The URI of the created resource.
	SelfLink pulumi.StringOutput `pulumi:"selfLink"`
}

// NewPublicDelegatedPrefix registers a new resource with the given unique name, arguments, and options.
func NewPublicDelegatedPrefix(ctx *pulumi.Context,
	name string, args *PublicDelegatedPrefixArgs, opts ...pulumi.ResourceOption) (*PublicDelegatedPrefix, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.IpCidrRange == nil {
		return nil, errors.New("invalid value for required argument 'IpCidrRange'")
	}
	if args.ParentPrefix == nil {
		return nil, errors.New("invalid value for required argument 'ParentPrefix'")
	}
	if args.Region == nil {
		return nil, errors.New("invalid value for required argument 'Region'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PublicDelegatedPrefix
	err := ctx.RegisterResource("gcp:compute/publicDelegatedPrefix:PublicDelegatedPrefix", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPublicDelegatedPrefix gets an existing PublicDelegatedPrefix resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPublicDelegatedPrefix(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PublicDelegatedPrefixState, opts ...pulumi.ResourceOption) (*PublicDelegatedPrefix, error) {
	var resource PublicDelegatedPrefix
	err := ctx.ReadResource("gcp:compute/publicDelegatedPrefix:PublicDelegatedPrefix", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PublicDelegatedPrefix resources.
type publicDelegatedPrefixState struct {
	// An optional description of this resource.
	Description *string `pulumi:"description"`
	// The IPv4 address range, in CIDR format, represented by this public advertised prefix.
	//
	// ***
	IpCidrRange *string `pulumi:"ipCidrRange"`
	// If true, the prefix will be live migrated.
	IsLiveMigration *bool `pulumi:"isLiveMigration"`
	// Name of the resource. The name must be 1-63 characters long, and
	// comply with RFC1035. Specifically, the name must be 1-63 characters
	// long and match the regular expression `a-z?`
	// which means the first character must be a lowercase letter, and all
	// following characters must be a dash, lowercase letter, or digit,
	// except the last character, which cannot be a dash.
	Name *string `pulumi:"name"`
	// The URL of parent prefix. Either PublicAdvertisedPrefix or PublicDelegatedPrefix.
	ParentPrefix *string `pulumi:"parentPrefix"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// A region where the prefix will reside.
	Region *string `pulumi:"region"`
	// The URI of the created resource.
	SelfLink *string `pulumi:"selfLink"`
}

type PublicDelegatedPrefixState struct {
	// An optional description of this resource.
	Description pulumi.StringPtrInput
	// The IPv4 address range, in CIDR format, represented by this public advertised prefix.
	//
	// ***
	IpCidrRange pulumi.StringPtrInput
	// If true, the prefix will be live migrated.
	IsLiveMigration pulumi.BoolPtrInput
	// Name of the resource. The name must be 1-63 characters long, and
	// comply with RFC1035. Specifically, the name must be 1-63 characters
	// long and match the regular expression `a-z?`
	// which means the first character must be a lowercase letter, and all
	// following characters must be a dash, lowercase letter, or digit,
	// except the last character, which cannot be a dash.
	Name pulumi.StringPtrInput
	// The URL of parent prefix. Either PublicAdvertisedPrefix or PublicDelegatedPrefix.
	ParentPrefix pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// A region where the prefix will reside.
	Region pulumi.StringPtrInput
	// The URI of the created resource.
	SelfLink pulumi.StringPtrInput
}

func (PublicDelegatedPrefixState) ElementType() reflect.Type {
	return reflect.TypeOf((*publicDelegatedPrefixState)(nil)).Elem()
}

type publicDelegatedPrefixArgs struct {
	// An optional description of this resource.
	Description *string `pulumi:"description"`
	// The IPv4 address range, in CIDR format, represented by this public advertised prefix.
	//
	// ***
	IpCidrRange string `pulumi:"ipCidrRange"`
	// If true, the prefix will be live migrated.
	IsLiveMigration *bool `pulumi:"isLiveMigration"`
	// Name of the resource. The name must be 1-63 characters long, and
	// comply with RFC1035. Specifically, the name must be 1-63 characters
	// long and match the regular expression `a-z?`
	// which means the first character must be a lowercase letter, and all
	// following characters must be a dash, lowercase letter, or digit,
	// except the last character, which cannot be a dash.
	Name *string `pulumi:"name"`
	// The URL of parent prefix. Either PublicAdvertisedPrefix or PublicDelegatedPrefix.
	ParentPrefix string `pulumi:"parentPrefix"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// A region where the prefix will reside.
	Region string `pulumi:"region"`
}

// The set of arguments for constructing a PublicDelegatedPrefix resource.
type PublicDelegatedPrefixArgs struct {
	// An optional description of this resource.
	Description pulumi.StringPtrInput
	// The IPv4 address range, in CIDR format, represented by this public advertised prefix.
	//
	// ***
	IpCidrRange pulumi.StringInput
	// If true, the prefix will be live migrated.
	IsLiveMigration pulumi.BoolPtrInput
	// Name of the resource. The name must be 1-63 characters long, and
	// comply with RFC1035. Specifically, the name must be 1-63 characters
	// long and match the regular expression `a-z?`
	// which means the first character must be a lowercase letter, and all
	// following characters must be a dash, lowercase letter, or digit,
	// except the last character, which cannot be a dash.
	Name pulumi.StringPtrInput
	// The URL of parent prefix. Either PublicAdvertisedPrefix or PublicDelegatedPrefix.
	ParentPrefix pulumi.StringInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// A region where the prefix will reside.
	Region pulumi.StringInput
}

func (PublicDelegatedPrefixArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*publicDelegatedPrefixArgs)(nil)).Elem()
}

type PublicDelegatedPrefixInput interface {
	pulumi.Input

	ToPublicDelegatedPrefixOutput() PublicDelegatedPrefixOutput
	ToPublicDelegatedPrefixOutputWithContext(ctx context.Context) PublicDelegatedPrefixOutput
}

func (*PublicDelegatedPrefix) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicDelegatedPrefix)(nil)).Elem()
}

func (i *PublicDelegatedPrefix) ToPublicDelegatedPrefixOutput() PublicDelegatedPrefixOutput {
	return i.ToPublicDelegatedPrefixOutputWithContext(context.Background())
}

func (i *PublicDelegatedPrefix) ToPublicDelegatedPrefixOutputWithContext(ctx context.Context) PublicDelegatedPrefixOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicDelegatedPrefixOutput)
}

// PublicDelegatedPrefixArrayInput is an input type that accepts PublicDelegatedPrefixArray and PublicDelegatedPrefixArrayOutput values.
// You can construct a concrete instance of `PublicDelegatedPrefixArrayInput` via:
//
//	PublicDelegatedPrefixArray{ PublicDelegatedPrefixArgs{...} }
type PublicDelegatedPrefixArrayInput interface {
	pulumi.Input

	ToPublicDelegatedPrefixArrayOutput() PublicDelegatedPrefixArrayOutput
	ToPublicDelegatedPrefixArrayOutputWithContext(context.Context) PublicDelegatedPrefixArrayOutput
}

type PublicDelegatedPrefixArray []PublicDelegatedPrefixInput

func (PublicDelegatedPrefixArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PublicDelegatedPrefix)(nil)).Elem()
}

func (i PublicDelegatedPrefixArray) ToPublicDelegatedPrefixArrayOutput() PublicDelegatedPrefixArrayOutput {
	return i.ToPublicDelegatedPrefixArrayOutputWithContext(context.Background())
}

func (i PublicDelegatedPrefixArray) ToPublicDelegatedPrefixArrayOutputWithContext(ctx context.Context) PublicDelegatedPrefixArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicDelegatedPrefixArrayOutput)
}

// PublicDelegatedPrefixMapInput is an input type that accepts PublicDelegatedPrefixMap and PublicDelegatedPrefixMapOutput values.
// You can construct a concrete instance of `PublicDelegatedPrefixMapInput` via:
//
//	PublicDelegatedPrefixMap{ "key": PublicDelegatedPrefixArgs{...} }
type PublicDelegatedPrefixMapInput interface {
	pulumi.Input

	ToPublicDelegatedPrefixMapOutput() PublicDelegatedPrefixMapOutput
	ToPublicDelegatedPrefixMapOutputWithContext(context.Context) PublicDelegatedPrefixMapOutput
}

type PublicDelegatedPrefixMap map[string]PublicDelegatedPrefixInput

func (PublicDelegatedPrefixMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PublicDelegatedPrefix)(nil)).Elem()
}

func (i PublicDelegatedPrefixMap) ToPublicDelegatedPrefixMapOutput() PublicDelegatedPrefixMapOutput {
	return i.ToPublicDelegatedPrefixMapOutputWithContext(context.Background())
}

func (i PublicDelegatedPrefixMap) ToPublicDelegatedPrefixMapOutputWithContext(ctx context.Context) PublicDelegatedPrefixMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicDelegatedPrefixMapOutput)
}

type PublicDelegatedPrefixOutput struct{ *pulumi.OutputState }

func (PublicDelegatedPrefixOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicDelegatedPrefix)(nil)).Elem()
}

func (o PublicDelegatedPrefixOutput) ToPublicDelegatedPrefixOutput() PublicDelegatedPrefixOutput {
	return o
}

func (o PublicDelegatedPrefixOutput) ToPublicDelegatedPrefixOutputWithContext(ctx context.Context) PublicDelegatedPrefixOutput {
	return o
}

// An optional description of this resource.
func (o PublicDelegatedPrefixOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicDelegatedPrefix) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The IPv4 address range, in CIDR format, represented by this public advertised prefix.
//
// ***
func (o PublicDelegatedPrefixOutput) IpCidrRange() pulumi.StringOutput {
	return o.ApplyT(func(v *PublicDelegatedPrefix) pulumi.StringOutput { return v.IpCidrRange }).(pulumi.StringOutput)
}

// If true, the prefix will be live migrated.
func (o PublicDelegatedPrefixOutput) IsLiveMigration() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PublicDelegatedPrefix) pulumi.BoolPtrOutput { return v.IsLiveMigration }).(pulumi.BoolPtrOutput)
}

// Name of the resource. The name must be 1-63 characters long, and
// comply with RFC1035. Specifically, the name must be 1-63 characters
// long and match the regular expression `a-z?`
// which means the first character must be a lowercase letter, and all
// following characters must be a dash, lowercase letter, or digit,
// except the last character, which cannot be a dash.
func (o PublicDelegatedPrefixOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *PublicDelegatedPrefix) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The URL of parent prefix. Either PublicAdvertisedPrefix or PublicDelegatedPrefix.
func (o PublicDelegatedPrefixOutput) ParentPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v *PublicDelegatedPrefix) pulumi.StringOutput { return v.ParentPrefix }).(pulumi.StringOutput)
}

// The ID of the project in which the resource belongs.
// If it is not provided, the provider project is used.
func (o PublicDelegatedPrefixOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *PublicDelegatedPrefix) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// A region where the prefix will reside.
func (o PublicDelegatedPrefixOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *PublicDelegatedPrefix) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// The URI of the created resource.
func (o PublicDelegatedPrefixOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v *PublicDelegatedPrefix) pulumi.StringOutput { return v.SelfLink }).(pulumi.StringOutput)
}

type PublicDelegatedPrefixArrayOutput struct{ *pulumi.OutputState }

func (PublicDelegatedPrefixArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PublicDelegatedPrefix)(nil)).Elem()
}

func (o PublicDelegatedPrefixArrayOutput) ToPublicDelegatedPrefixArrayOutput() PublicDelegatedPrefixArrayOutput {
	return o
}

func (o PublicDelegatedPrefixArrayOutput) ToPublicDelegatedPrefixArrayOutputWithContext(ctx context.Context) PublicDelegatedPrefixArrayOutput {
	return o
}

func (o PublicDelegatedPrefixArrayOutput) Index(i pulumi.IntInput) PublicDelegatedPrefixOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PublicDelegatedPrefix {
		return vs[0].([]*PublicDelegatedPrefix)[vs[1].(int)]
	}).(PublicDelegatedPrefixOutput)
}

type PublicDelegatedPrefixMapOutput struct{ *pulumi.OutputState }

func (PublicDelegatedPrefixMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PublicDelegatedPrefix)(nil)).Elem()
}

func (o PublicDelegatedPrefixMapOutput) ToPublicDelegatedPrefixMapOutput() PublicDelegatedPrefixMapOutput {
	return o
}

func (o PublicDelegatedPrefixMapOutput) ToPublicDelegatedPrefixMapOutputWithContext(ctx context.Context) PublicDelegatedPrefixMapOutput {
	return o
}

func (o PublicDelegatedPrefixMapOutput) MapIndex(k pulumi.StringInput) PublicDelegatedPrefixOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PublicDelegatedPrefix {
		return vs[0].(map[string]*PublicDelegatedPrefix)[vs[1].(string)]
	}).(PublicDelegatedPrefixOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PublicDelegatedPrefixInput)(nil)).Elem(), &PublicDelegatedPrefix{})
	pulumi.RegisterInputType(reflect.TypeOf((*PublicDelegatedPrefixArrayInput)(nil)).Elem(), PublicDelegatedPrefixArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PublicDelegatedPrefixMapInput)(nil)).Elem(), PublicDelegatedPrefixMap{})
	pulumi.RegisterOutputType(PublicDelegatedPrefixOutput{})
	pulumi.RegisterOutputType(PublicDelegatedPrefixArrayOutput{})
	pulumi.RegisterOutputType(PublicDelegatedPrefixMapOutput{})
}
