// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package compute

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get a Compute Region Instance Group Manager within GCE.
// For more information, see [the official documentation](https://cloud.google.com/compute/docs/instance-groups/distributing-instances-with-regional-instance-groups)
// and [API](https://cloud.google.com/compute/docs/reference/rest/v1/regionInstanceGroupManagers)
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/compute"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := compute.LookupRegionInstanceGroupManager(ctx, &compute.LookupRegionInstanceGroupManagerArgs{
//				Name:   pulumi.StringRef("my-igm"),
//				Region: pulumi.StringRef("us-central1"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupRegionInstanceGroupManager(ctx *pulumi.Context, args *LookupRegionInstanceGroupManagerArgs, opts ...pulumi.InvokeOption) (*LookupRegionInstanceGroupManagerResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupRegionInstanceGroupManagerResult
	err := ctx.Invoke("gcp:compute/getRegionInstanceGroupManager:getRegionInstanceGroupManager", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRegionInstanceGroupManager.
type LookupRegionInstanceGroupManagerArgs struct {
	// The name of the instance group. Either `name` or `selfLink` must be provided.
	Name *string `pulumi:"name"`
	// The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
	//
	// * `Region` - (Optional) The region where the managed instance group resides. If not provided, the provider region is used.
	Project *string `pulumi:"project"`
	Region  *string `pulumi:"region"`
	// The self link of the instance group. Either `name` or `selfLink` must be provided.
	SelfLink *string `pulumi:"selfLink"`
}

// A collection of values returned by getRegionInstanceGroupManager.
type LookupRegionInstanceGroupManagerResult struct {
	AllInstancesConfigs           []GetRegionInstanceGroupManagerAllInstancesConfig `pulumi:"allInstancesConfigs"`
	AutoHealingPolicies           []GetRegionInstanceGroupManagerAutoHealingPolicy  `pulumi:"autoHealingPolicies"`
	BaseInstanceName              string                                            `pulumi:"baseInstanceName"`
	CreationTimestamp             string                                            `pulumi:"creationTimestamp"`
	Description                   string                                            `pulumi:"description"`
	DistributionPolicyTargetShape string                                            `pulumi:"distributionPolicyTargetShape"`
	DistributionPolicyZones       []string                                          `pulumi:"distributionPolicyZones"`
	Fingerprint                   string                                            `pulumi:"fingerprint"`
	// The provider-assigned unique ID for this managed resource.
	Id                          string                                                   `pulumi:"id"`
	InstanceFlexibilityPolicies []GetRegionInstanceGroupManagerInstanceFlexibilityPolicy `pulumi:"instanceFlexibilityPolicies"`
	InstanceGroup               string                                                   `pulumi:"instanceGroup"`
	InstanceLifecyclePolicies   []GetRegionInstanceGroupManagerInstanceLifecyclePolicy   `pulumi:"instanceLifecyclePolicies"`
	ListManagedInstancesResults string                                                   `pulumi:"listManagedInstancesResults"`
	Name                        *string                                                  `pulumi:"name"`
	NamedPorts                  []GetRegionInstanceGroupManagerNamedPort                 `pulumi:"namedPorts"`
	Params                      []GetRegionInstanceGroupManagerParam                     `pulumi:"params"`
	Project                     *string                                                  `pulumi:"project"`
	Region                      *string                                                  `pulumi:"region"`
	SelfLink                    *string                                                  `pulumi:"selfLink"`
	StandbyPolicies             []GetRegionInstanceGroupManagerStandbyPolicy             `pulumi:"standbyPolicies"`
	StatefulDisks               []GetRegionInstanceGroupManagerStatefulDisk              `pulumi:"statefulDisks"`
	StatefulExternalIps         []GetRegionInstanceGroupManagerStatefulExternalIp        `pulumi:"statefulExternalIps"`
	StatefulInternalIps         []GetRegionInstanceGroupManagerStatefulInternalIp        `pulumi:"statefulInternalIps"`
	Statuses                    []GetRegionInstanceGroupManagerStatus                    `pulumi:"statuses"`
	TargetPools                 []string                                                 `pulumi:"targetPools"`
	TargetSize                  int                                                      `pulumi:"targetSize"`
	TargetStoppedSize           int                                                      `pulumi:"targetStoppedSize"`
	TargetSuspendedSize         int                                                      `pulumi:"targetSuspendedSize"`
	UpdatePolicies              []GetRegionInstanceGroupManagerUpdatePolicy              `pulumi:"updatePolicies"`
	Versions                    []GetRegionInstanceGroupManagerVersion                   `pulumi:"versions"`
	WaitForInstances            bool                                                     `pulumi:"waitForInstances"`
	WaitForInstancesStatus      string                                                   `pulumi:"waitForInstancesStatus"`
}

func LookupRegionInstanceGroupManagerOutput(ctx *pulumi.Context, args LookupRegionInstanceGroupManagerOutputArgs, opts ...pulumi.InvokeOption) LookupRegionInstanceGroupManagerResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupRegionInstanceGroupManagerResultOutput, error) {
			args := v.(LookupRegionInstanceGroupManagerArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupRegionInstanceGroupManagerResult
			secret, deps, err := ctx.InvokePackageRawWithDeps("gcp:compute/getRegionInstanceGroupManager:getRegionInstanceGroupManager", args, &rv, "", opts...)
			if err != nil {
				return LookupRegionInstanceGroupManagerResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupRegionInstanceGroupManagerResultOutput)
			output = pulumi.OutputWithDependencies(ctx.Context(), output, deps...).(LookupRegionInstanceGroupManagerResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupRegionInstanceGroupManagerResultOutput), nil
			}
			return output, nil
		}).(LookupRegionInstanceGroupManagerResultOutput)
}

// A collection of arguments for invoking getRegionInstanceGroupManager.
type LookupRegionInstanceGroupManagerOutputArgs struct {
	// The name of the instance group. Either `name` or `selfLink` must be provided.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
	//
	// * `Region` - (Optional) The region where the managed instance group resides. If not provided, the provider region is used.
	Project pulumi.StringPtrInput `pulumi:"project"`
	Region  pulumi.StringPtrInput `pulumi:"region"`
	// The self link of the instance group. Either `name` or `selfLink` must be provided.
	SelfLink pulumi.StringPtrInput `pulumi:"selfLink"`
}

func (LookupRegionInstanceGroupManagerOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRegionInstanceGroupManagerArgs)(nil)).Elem()
}

// A collection of values returned by getRegionInstanceGroupManager.
type LookupRegionInstanceGroupManagerResultOutput struct{ *pulumi.OutputState }

func (LookupRegionInstanceGroupManagerResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRegionInstanceGroupManagerResult)(nil)).Elem()
}

func (o LookupRegionInstanceGroupManagerResultOutput) ToLookupRegionInstanceGroupManagerResultOutput() LookupRegionInstanceGroupManagerResultOutput {
	return o
}

func (o LookupRegionInstanceGroupManagerResultOutput) ToLookupRegionInstanceGroupManagerResultOutputWithContext(ctx context.Context) LookupRegionInstanceGroupManagerResultOutput {
	return o
}

func (o LookupRegionInstanceGroupManagerResultOutput) AllInstancesConfigs() GetRegionInstanceGroupManagerAllInstancesConfigArrayOutput {
	return o.ApplyT(func(v LookupRegionInstanceGroupManagerResult) []GetRegionInstanceGroupManagerAllInstancesConfig {
		return v.AllInstancesConfigs
	}).(GetRegionInstanceGroupManagerAllInstancesConfigArrayOutput)
}

func (o LookupRegionInstanceGroupManagerResultOutput) AutoHealingPolicies() GetRegionInstanceGroupManagerAutoHealingPolicyArrayOutput {
	return o.ApplyT(func(v LookupRegionInstanceGroupManagerResult) []GetRegionInstanceGroupManagerAutoHealingPolicy {
		return v.AutoHealingPolicies
	}).(GetRegionInstanceGroupManagerAutoHealingPolicyArrayOutput)
}

func (o LookupRegionInstanceGroupManagerResultOutput) BaseInstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegionInstanceGroupManagerResult) string { return v.BaseInstanceName }).(pulumi.StringOutput)
}

func (o LookupRegionInstanceGroupManagerResultOutput) CreationTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegionInstanceGroupManagerResult) string { return v.CreationTimestamp }).(pulumi.StringOutput)
}

func (o LookupRegionInstanceGroupManagerResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegionInstanceGroupManagerResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupRegionInstanceGroupManagerResultOutput) DistributionPolicyTargetShape() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegionInstanceGroupManagerResult) string { return v.DistributionPolicyTargetShape }).(pulumi.StringOutput)
}

func (o LookupRegionInstanceGroupManagerResultOutput) DistributionPolicyZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupRegionInstanceGroupManagerResult) []string { return v.DistributionPolicyZones }).(pulumi.StringArrayOutput)
}

func (o LookupRegionInstanceGroupManagerResultOutput) Fingerprint() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegionInstanceGroupManagerResult) string { return v.Fingerprint }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupRegionInstanceGroupManagerResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegionInstanceGroupManagerResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupRegionInstanceGroupManagerResultOutput) InstanceFlexibilityPolicies() GetRegionInstanceGroupManagerInstanceFlexibilityPolicyArrayOutput {
	return o.ApplyT(func(v LookupRegionInstanceGroupManagerResult) []GetRegionInstanceGroupManagerInstanceFlexibilityPolicy {
		return v.InstanceFlexibilityPolicies
	}).(GetRegionInstanceGroupManagerInstanceFlexibilityPolicyArrayOutput)
}

func (o LookupRegionInstanceGroupManagerResultOutput) InstanceGroup() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegionInstanceGroupManagerResult) string { return v.InstanceGroup }).(pulumi.StringOutput)
}

func (o LookupRegionInstanceGroupManagerResultOutput) InstanceLifecyclePolicies() GetRegionInstanceGroupManagerInstanceLifecyclePolicyArrayOutput {
	return o.ApplyT(func(v LookupRegionInstanceGroupManagerResult) []GetRegionInstanceGroupManagerInstanceLifecyclePolicy {
		return v.InstanceLifecyclePolicies
	}).(GetRegionInstanceGroupManagerInstanceLifecyclePolicyArrayOutput)
}

func (o LookupRegionInstanceGroupManagerResultOutput) ListManagedInstancesResults() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegionInstanceGroupManagerResult) string { return v.ListManagedInstancesResults }).(pulumi.StringOutput)
}

func (o LookupRegionInstanceGroupManagerResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRegionInstanceGroupManagerResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o LookupRegionInstanceGroupManagerResultOutput) NamedPorts() GetRegionInstanceGroupManagerNamedPortArrayOutput {
	return o.ApplyT(func(v LookupRegionInstanceGroupManagerResult) []GetRegionInstanceGroupManagerNamedPort {
		return v.NamedPorts
	}).(GetRegionInstanceGroupManagerNamedPortArrayOutput)
}

func (o LookupRegionInstanceGroupManagerResultOutput) Params() GetRegionInstanceGroupManagerParamArrayOutput {
	return o.ApplyT(func(v LookupRegionInstanceGroupManagerResult) []GetRegionInstanceGroupManagerParam { return v.Params }).(GetRegionInstanceGroupManagerParamArrayOutput)
}

func (o LookupRegionInstanceGroupManagerResultOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRegionInstanceGroupManagerResult) *string { return v.Project }).(pulumi.StringPtrOutput)
}

func (o LookupRegionInstanceGroupManagerResultOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRegionInstanceGroupManagerResult) *string { return v.Region }).(pulumi.StringPtrOutput)
}

func (o LookupRegionInstanceGroupManagerResultOutput) SelfLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRegionInstanceGroupManagerResult) *string { return v.SelfLink }).(pulumi.StringPtrOutput)
}

func (o LookupRegionInstanceGroupManagerResultOutput) StandbyPolicies() GetRegionInstanceGroupManagerStandbyPolicyArrayOutput {
	return o.ApplyT(func(v LookupRegionInstanceGroupManagerResult) []GetRegionInstanceGroupManagerStandbyPolicy {
		return v.StandbyPolicies
	}).(GetRegionInstanceGroupManagerStandbyPolicyArrayOutput)
}

func (o LookupRegionInstanceGroupManagerResultOutput) StatefulDisks() GetRegionInstanceGroupManagerStatefulDiskArrayOutput {
	return o.ApplyT(func(v LookupRegionInstanceGroupManagerResult) []GetRegionInstanceGroupManagerStatefulDisk {
		return v.StatefulDisks
	}).(GetRegionInstanceGroupManagerStatefulDiskArrayOutput)
}

func (o LookupRegionInstanceGroupManagerResultOutput) StatefulExternalIps() GetRegionInstanceGroupManagerStatefulExternalIpArrayOutput {
	return o.ApplyT(func(v LookupRegionInstanceGroupManagerResult) []GetRegionInstanceGroupManagerStatefulExternalIp {
		return v.StatefulExternalIps
	}).(GetRegionInstanceGroupManagerStatefulExternalIpArrayOutput)
}

func (o LookupRegionInstanceGroupManagerResultOutput) StatefulInternalIps() GetRegionInstanceGroupManagerStatefulInternalIpArrayOutput {
	return o.ApplyT(func(v LookupRegionInstanceGroupManagerResult) []GetRegionInstanceGroupManagerStatefulInternalIp {
		return v.StatefulInternalIps
	}).(GetRegionInstanceGroupManagerStatefulInternalIpArrayOutput)
}

func (o LookupRegionInstanceGroupManagerResultOutput) Statuses() GetRegionInstanceGroupManagerStatusArrayOutput {
	return o.ApplyT(func(v LookupRegionInstanceGroupManagerResult) []GetRegionInstanceGroupManagerStatus {
		return v.Statuses
	}).(GetRegionInstanceGroupManagerStatusArrayOutput)
}

func (o LookupRegionInstanceGroupManagerResultOutput) TargetPools() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupRegionInstanceGroupManagerResult) []string { return v.TargetPools }).(pulumi.StringArrayOutput)
}

func (o LookupRegionInstanceGroupManagerResultOutput) TargetSize() pulumi.IntOutput {
	return o.ApplyT(func(v LookupRegionInstanceGroupManagerResult) int { return v.TargetSize }).(pulumi.IntOutput)
}

func (o LookupRegionInstanceGroupManagerResultOutput) TargetStoppedSize() pulumi.IntOutput {
	return o.ApplyT(func(v LookupRegionInstanceGroupManagerResult) int { return v.TargetStoppedSize }).(pulumi.IntOutput)
}

func (o LookupRegionInstanceGroupManagerResultOutput) TargetSuspendedSize() pulumi.IntOutput {
	return o.ApplyT(func(v LookupRegionInstanceGroupManagerResult) int { return v.TargetSuspendedSize }).(pulumi.IntOutput)
}

func (o LookupRegionInstanceGroupManagerResultOutput) UpdatePolicies() GetRegionInstanceGroupManagerUpdatePolicyArrayOutput {
	return o.ApplyT(func(v LookupRegionInstanceGroupManagerResult) []GetRegionInstanceGroupManagerUpdatePolicy {
		return v.UpdatePolicies
	}).(GetRegionInstanceGroupManagerUpdatePolicyArrayOutput)
}

func (o LookupRegionInstanceGroupManagerResultOutput) Versions() GetRegionInstanceGroupManagerVersionArrayOutput {
	return o.ApplyT(func(v LookupRegionInstanceGroupManagerResult) []GetRegionInstanceGroupManagerVersion {
		return v.Versions
	}).(GetRegionInstanceGroupManagerVersionArrayOutput)
}

func (o LookupRegionInstanceGroupManagerResultOutput) WaitForInstances() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupRegionInstanceGroupManagerResult) bool { return v.WaitForInstances }).(pulumi.BoolOutput)
}

func (o LookupRegionInstanceGroupManagerResultOutput) WaitForInstancesStatus() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegionInstanceGroupManagerResult) string { return v.WaitForInstancesStatus }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRegionInstanceGroupManagerResultOutput{})
}
