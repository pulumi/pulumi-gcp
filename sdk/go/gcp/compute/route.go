// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package compute

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// #     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
// #
// # ----------------------------------------------------------------------------
// #
// #     This file is automatically generated by Magic Modules and manual
// #     changes will be clobbered when the file is regenerated.
// #
// #     Please read more about how to change this file in
// #     .github/CONTRIBUTING.md.
// #
// # ----------------------------------------------------------------------------
// layout: "google"
// page_title: "Google: google_compute_route"
// sidebar_current: "docs-google-compute-route"
// description: |-
//   Represents a Route resource.
// ---
// 
// # google\_compute\_route
// 
// Represents a Route resource.
// 
// A route is a rule that specifies how certain packets should be handled by
// the virtual network. Routes are associated with virtual machines by tag,
// and the set of routes for a particular virtual machine is called its
// routing table. For each packet leaving a virtual machine, the system
// searches that virtual machine's routing table for a single best matching
// route.
// 
// Routes match packets by destination IP address, preferring smaller or more
// specific ranges over larger ones. If there is a tie, the system selects
// the route with the smallest priority value. If there is still a tie, it
// uses the layer three and four packet headers to select just one of the
// remaining matching routes. The packet is then forwarded as specified by
// the next_hop field of the winning route -- either to another virtual
// machine destination, a virtual machine gateway or a Compute
// Engine-operated gateway. Packets that do not match any route in the
// sending virtual machine's routing table will be dropped.
// 
// A Route resource must have exactly one specification of either
// nextHopGateway, nextHopInstance, nextHopIp, or nextHopVpnTunnel.
// 
// 
// To get more information about Route, see:
// 
// * [API documentation](https://cloud.google.com/compute/docs/reference/rest/v1/routes)
// * How-to Guides
//     * [Using Routes](https://cloud.google.com/vpc/docs/using-routes)
type Route struct {
	s *pulumi.ResourceState
}

// NewRoute registers a new resource with the given unique name, arguments, and options.
func NewRoute(ctx *pulumi.Context,
	name string, args *RouteArgs, opts ...pulumi.ResourceOpt) (*Route, error) {
	if args == nil || args.DestRange == nil {
		return nil, errors.New("missing required argument 'DestRange'")
	}
	if args == nil || args.Network == nil {
		return nil, errors.New("missing required argument 'Network'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["description"] = nil
		inputs["destRange"] = nil
		inputs["name"] = nil
		inputs["network"] = nil
		inputs["nextHopGateway"] = nil
		inputs["nextHopInstance"] = nil
		inputs["nextHopInstanceZone"] = nil
		inputs["nextHopIp"] = nil
		inputs["nextHopVpnTunnel"] = nil
		inputs["priority"] = nil
		inputs["project"] = nil
		inputs["tags"] = nil
	} else {
		inputs["description"] = args.Description
		inputs["destRange"] = args.DestRange
		inputs["name"] = args.Name
		inputs["network"] = args.Network
		inputs["nextHopGateway"] = args.NextHopGateway
		inputs["nextHopInstance"] = args.NextHopInstance
		inputs["nextHopInstanceZone"] = args.NextHopInstanceZone
		inputs["nextHopIp"] = args.NextHopIp
		inputs["nextHopVpnTunnel"] = args.NextHopVpnTunnel
		inputs["priority"] = args.Priority
		inputs["project"] = args.Project
		inputs["tags"] = args.Tags
	}
	inputs["nextHopNetwork"] = nil
	inputs["selfLink"] = nil
	s, err := ctx.RegisterResource("gcp:compute/route:Route", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Route{s: s}, nil
}

// GetRoute gets an existing Route resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRoute(ctx *pulumi.Context,
	name string, id pulumi.ID, state *RouteState, opts ...pulumi.ResourceOpt) (*Route, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["description"] = state.Description
		inputs["destRange"] = state.DestRange
		inputs["name"] = state.Name
		inputs["network"] = state.Network
		inputs["nextHopGateway"] = state.NextHopGateway
		inputs["nextHopInstance"] = state.NextHopInstance
		inputs["nextHopInstanceZone"] = state.NextHopInstanceZone
		inputs["nextHopIp"] = state.NextHopIp
		inputs["nextHopNetwork"] = state.NextHopNetwork
		inputs["nextHopVpnTunnel"] = state.NextHopVpnTunnel
		inputs["priority"] = state.Priority
		inputs["project"] = state.Project
		inputs["selfLink"] = state.SelfLink
		inputs["tags"] = state.Tags
	}
	s, err := ctx.ReadResource("gcp:compute/route:Route", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Route{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *Route) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *Route) ID() *pulumi.IDOutput {
	return r.s.ID()
}

func (r *Route) Description() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["description"])
}

func (r *Route) DestRange() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["destRange"])
}

func (r *Route) Name() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["name"])
}

func (r *Route) Network() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["network"])
}

func (r *Route) NextHopGateway() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["nextHopGateway"])
}

func (r *Route) NextHopInstance() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["nextHopInstance"])
}

// (Optional when `next_hop_instance` is
// specified)  The zone of the instance specified in
// `next_hop_instance`.  Omit if `next_hop_instance` is specified as
// a URL.
func (r *Route) NextHopInstanceZone() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["nextHopInstanceZone"])
}

func (r *Route) NextHopIp() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["nextHopIp"])
}

func (r *Route) NextHopNetwork() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["nextHopNetwork"])
}

func (r *Route) NextHopVpnTunnel() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["nextHopVpnTunnel"])
}

func (r *Route) Priority() *pulumi.IntOutput {
	return (*pulumi.IntOutput)(r.s.State["priority"])
}

// The ID of the project in which the resource belongs.
// If it is not provided, the provider project is used.
func (r *Route) Project() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["project"])
}

// The URI of the created resource.
func (r *Route) SelfLink() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["selfLink"])
}

func (r *Route) Tags() *pulumi.ArrayOutput {
	return (*pulumi.ArrayOutput)(r.s.State["tags"])
}

// Input properties used for looking up and filtering Route resources.
type RouteState struct {
	Description interface{}
	DestRange interface{}
	Name interface{}
	Network interface{}
	NextHopGateway interface{}
	NextHopInstance interface{}
	// (Optional when `next_hop_instance` is
	// specified)  The zone of the instance specified in
	// `next_hop_instance`.  Omit if `next_hop_instance` is specified as
	// a URL.
	NextHopInstanceZone interface{}
	NextHopIp interface{}
	NextHopNetwork interface{}
	NextHopVpnTunnel interface{}
	Priority interface{}
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project interface{}
	// The URI of the created resource.
	SelfLink interface{}
	Tags interface{}
}

// The set of arguments for constructing a Route resource.
type RouteArgs struct {
	Description interface{}
	DestRange interface{}
	Name interface{}
	Network interface{}
	NextHopGateway interface{}
	NextHopInstance interface{}
	// (Optional when `next_hop_instance` is
	// specified)  The zone of the instance specified in
	// `next_hop_instance`.  Omit if `next_hop_instance` is specified as
	// a URL.
	NextHopInstanceZone interface{}
	NextHopIp interface{}
	NextHopVpnTunnel interface{}
	Priority interface{}
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project interface{}
	Tags interface{}
}
