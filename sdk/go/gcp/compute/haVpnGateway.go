// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package compute

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Represents a VPN gateway running in GCP. This virtual device is managed
// by Google, but used only by you. This type of VPN Gateway allows for the creation
// of VPN solutions with higher availability than classic Target VPN Gateways.
// 
// To get more information about HaVpnGateway, see:
// 
// * [API documentation](https://cloud.google.com/compute/docs/reference/rest/beta/vpnGateways)
// * How-to Guides
//     * [Choosing a VPN](https://cloud.google.com/vpn/docs/how-to/choosing-a-vpn)
//     * [Cloud VPN Overview](https://cloud.google.com/vpn/docs/concepts/overview)
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-google/blob/master/website/docs/r/compute_ha_vpn_gateway.html.markdown.
type HaVpnGateway struct {
	s *pulumi.ResourceState
}

// NewHaVpnGateway registers a new resource with the given unique name, arguments, and options.
func NewHaVpnGateway(ctx *pulumi.Context,
	name string, args *HaVpnGatewayArgs, opts ...pulumi.ResourceOpt) (*HaVpnGateway, error) {
	if args == nil || args.Network == nil {
		return nil, errors.New("missing required argument 'Network'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["description"] = nil
		inputs["name"] = nil
		inputs["network"] = nil
		inputs["project"] = nil
		inputs["region"] = nil
	} else {
		inputs["description"] = args.Description
		inputs["name"] = args.Name
		inputs["network"] = args.Network
		inputs["project"] = args.Project
		inputs["region"] = args.Region
	}
	inputs["selfLink"] = nil
	inputs["vpnInterfaces"] = nil
	s, err := ctx.RegisterResource("gcp:compute/haVpnGateway:HaVpnGateway", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &HaVpnGateway{s: s}, nil
}

// GetHaVpnGateway gets an existing HaVpnGateway resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetHaVpnGateway(ctx *pulumi.Context,
	name string, id pulumi.ID, state *HaVpnGatewayState, opts ...pulumi.ResourceOpt) (*HaVpnGateway, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["description"] = state.Description
		inputs["name"] = state.Name
		inputs["network"] = state.Network
		inputs["project"] = state.Project
		inputs["region"] = state.Region
		inputs["selfLink"] = state.SelfLink
		inputs["vpnInterfaces"] = state.VpnInterfaces
	}
	s, err := ctx.ReadResource("gcp:compute/haVpnGateway:HaVpnGateway", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &HaVpnGateway{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *HaVpnGateway) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *HaVpnGateway) ID() *pulumi.IDOutput {
	return r.s.ID()
}

func (r *HaVpnGateway) Description() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["description"])
}

func (r *HaVpnGateway) Name() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["name"])
}

func (r *HaVpnGateway) Network() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["network"])
}

// The ID of the project in which the resource belongs.
// If it is not provided, the provider project is used.
func (r *HaVpnGateway) Project() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["project"])
}

func (r *HaVpnGateway) Region() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["region"])
}

// The URI of the created resource.
func (r *HaVpnGateway) SelfLink() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["selfLink"])
}

func (r *HaVpnGateway) VpnInterfaces() *pulumi.ArrayOutput {
	return (*pulumi.ArrayOutput)(r.s.State["vpnInterfaces"])
}

// Input properties used for looking up and filtering HaVpnGateway resources.
type HaVpnGatewayState struct {
	Description interface{}
	Name interface{}
	Network interface{}
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project interface{}
	Region interface{}
	// The URI of the created resource.
	SelfLink interface{}
	VpnInterfaces interface{}
}

// The set of arguments for constructing a HaVpnGateway resource.
type HaVpnGatewayArgs struct {
	Description interface{}
	Name interface{}
	Network interface{}
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project interface{}
	Region interface{}
}
