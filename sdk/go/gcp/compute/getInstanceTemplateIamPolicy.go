// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package compute

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves the current IAM policy data for instancetemplate
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/compute"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := compute.LookupInstanceTemplateIamPolicy(ctx, &compute.LookupInstanceTemplateIamPolicyArgs{
//				Project: pulumi.StringRef(_default.Project),
//				Name:    _default.Name,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupInstanceTemplateIamPolicy(ctx *pulumi.Context, args *LookupInstanceTemplateIamPolicyArgs, opts ...pulumi.InvokeOption) (*LookupInstanceTemplateIamPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupInstanceTemplateIamPolicyResult
	err := ctx.Invoke("gcp:compute/getInstanceTemplateIamPolicy:getInstanceTemplateIamPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getInstanceTemplateIamPolicy.
type LookupInstanceTemplateIamPolicyArgs struct {
	// Used to find the parent resource to bind the IAM policy to
	Name string `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project *string `pulumi:"project"`
}

// A collection of values returned by getInstanceTemplateIamPolicy.
type LookupInstanceTemplateIamPolicyResult struct {
	// (Computed) The etag of the IAM policy.
	Etag string `pulumi:"etag"`
	// The provider-assigned unique ID for this managed resource.
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
	// (Required only by `compute.InstanceTemplateIamPolicy`) The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData string `pulumi:"policyData"`
	Project    string `pulumi:"project"`
}

func LookupInstanceTemplateIamPolicyOutput(ctx *pulumi.Context, args LookupInstanceTemplateIamPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupInstanceTemplateIamPolicyResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupInstanceTemplateIamPolicyResultOutput, error) {
			args := v.(LookupInstanceTemplateIamPolicyArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("gcp:compute/getInstanceTemplateIamPolicy:getInstanceTemplateIamPolicy", args, LookupInstanceTemplateIamPolicyResultOutput{}, options).(LookupInstanceTemplateIamPolicyResultOutput), nil
		}).(LookupInstanceTemplateIamPolicyResultOutput)
}

// A collection of arguments for invoking getInstanceTemplateIamPolicy.
type LookupInstanceTemplateIamPolicyOutputArgs struct {
	// Used to find the parent resource to bind the IAM policy to
	Name pulumi.StringInput `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupInstanceTemplateIamPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupInstanceTemplateIamPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getInstanceTemplateIamPolicy.
type LookupInstanceTemplateIamPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupInstanceTemplateIamPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupInstanceTemplateIamPolicyResult)(nil)).Elem()
}

func (o LookupInstanceTemplateIamPolicyResultOutput) ToLookupInstanceTemplateIamPolicyResultOutput() LookupInstanceTemplateIamPolicyResultOutput {
	return o
}

func (o LookupInstanceTemplateIamPolicyResultOutput) ToLookupInstanceTemplateIamPolicyResultOutputWithContext(ctx context.Context) LookupInstanceTemplateIamPolicyResultOutput {
	return o
}

// (Computed) The etag of the IAM policy.
func (o LookupInstanceTemplateIamPolicyResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceTemplateIamPolicyResult) string { return v.Etag }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupInstanceTemplateIamPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceTemplateIamPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupInstanceTemplateIamPolicyResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceTemplateIamPolicyResult) string { return v.Name }).(pulumi.StringOutput)
}

// (Required only by `compute.InstanceTemplateIamPolicy`) The policy data generated by
// a `organizations.getIAMPolicy` data source.
func (o LookupInstanceTemplateIamPolicyResultOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceTemplateIamPolicyResult) string { return v.PolicyData }).(pulumi.StringOutput)
}

func (o LookupInstanceTemplateIamPolicyResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceTemplateIamPolicyResult) string { return v.Project }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupInstanceTemplateIamPolicyResultOutput{})
}
