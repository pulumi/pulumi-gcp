// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package compute

import (
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Get a forwarding rule within GCE from its name.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-gcp/sdk/v4/go/gcp/compute"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := compute.LookupForwardingRule(ctx, &compute.LookupForwardingRuleArgs{
// 			Name: "forwarding-rule-us-east1",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupForwardingRule(ctx *pulumi.Context, args *LookupForwardingRuleArgs, opts ...pulumi.InvokeOption) (*LookupForwardingRuleResult, error) {
	var rv LookupForwardingRuleResult
	err := ctx.Invoke("gcp:compute/getForwardingRule:getForwardingRule", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getForwardingRule.
type LookupForwardingRuleArgs struct {
	// The name of the forwarding rule.
	Name string `pulumi:"name"`
	// The project in which the resource belongs. If it
	// is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// The region in which the resource belongs. If it
	// is not provided, the project region is used.
	Region *string `pulumi:"region"`
}

// A collection of values returned by getForwardingRule.
type LookupForwardingRuleResult struct {
	AllPorts          bool   `pulumi:"allPorts"`
	AllowGlobalAccess bool   `pulumi:"allowGlobalAccess"`
	BackendService    string `pulumi:"backendService"`
	CreationTimestamp string `pulumi:"creationTimestamp"`
	Description       string `pulumi:"description"`
	// The provider-assigned unique ID for this managed resource.
	Id                   string            `pulumi:"id"`
	IpAddress            string            `pulumi:"ipAddress"`
	IpProtocol           string            `pulumi:"ipProtocol"`
	IsMirroringCollector bool              `pulumi:"isMirroringCollector"`
	LabelFingerprint     string            `pulumi:"labelFingerprint"`
	Labels               map[string]string `pulumi:"labels"`
	LoadBalancingScheme  string            `pulumi:"loadBalancingScheme"`
	Name                 string            `pulumi:"name"`
	Network              string            `pulumi:"network"`
	NetworkTier          string            `pulumi:"networkTier"`
	PortRange            string            `pulumi:"portRange"`
	Ports                []string          `pulumi:"ports"`
	Project              *string           `pulumi:"project"`
	Region               *string           `pulumi:"region"`
	SelfLink             string            `pulumi:"selfLink"`
	ServiceLabel         string            `pulumi:"serviceLabel"`
	ServiceName          string            `pulumi:"serviceName"`
	Subnetwork           string            `pulumi:"subnetwork"`
	Target               string            `pulumi:"target"`
}
