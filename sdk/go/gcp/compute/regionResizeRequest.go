// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package compute

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Represents a Regional Managed Instance Group Resize Request
//
// Resize Requests are the Managed Instance Group implementation of Dynamic Workload Scheduler Flex Start.
//
// With Dynamic Workload Scheduler in Flex Start mode, you submit a GPU capacity request for your AI/ML jobs by indicating how many you need, a duration, and your preferred region. Dynamic Workload Scheduler intelligently persists the request; once the capacity becomes available, it automatically provisions your VMs enabling your workloads to run continuously for the entire duration of the capacity allocation.
//
// To get more information about RegionResizeRequest, see:
//
// * [API documentation](https://cloud.google.com/compute/docs/reference/rest/beta/regionInstanceGroupManagerResizeRequests)
// * How-to Guides
//   - [About resize requests in a MIG](https://cloud.google.com/compute/docs/instance-groups/about-resize-requests-mig)
//
// ## Example Usage
//
// ### Compute Rmig Resize Request
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/compute"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			a3Dws, err := compute.NewRegionInstanceTemplate(ctx, "a3_dws", &compute.RegionInstanceTemplateArgs{
//				Name:                pulumi.String("a3-dws"),
//				Region:              pulumi.String("us-central1"),
//				Description:         pulumi.String("This template is used to create a mig instance that is compatible with DWS resize requests."),
//				InstanceDescription: pulumi.String("A3 GPU"),
//				MachineType:         pulumi.String("a3-highgpu-8g"),
//				CanIpForward:        pulumi.Bool(false),
//				Scheduling: &compute.RegionInstanceTemplateSchedulingArgs{
//					AutomaticRestart:  pulumi.Bool(false),
//					OnHostMaintenance: pulumi.String("TERMINATE"),
//				},
//				Disks: compute.RegionInstanceTemplateDiskArray{
//					&compute.RegionInstanceTemplateDiskArgs{
//						SourceImage: pulumi.String("cos-cloud/cos-121-lts"),
//						AutoDelete:  pulumi.Bool(true),
//						Boot:        pulumi.Bool(true),
//						DiskType:    pulumi.String("pd-ssd"),
//						DiskSizeGb:  pulumi.Int(960),
//						Mode:        pulumi.String("READ_WRITE"),
//					},
//				},
//				GuestAccelerators: compute.RegionInstanceTemplateGuestAcceleratorArray{
//					&compute.RegionInstanceTemplateGuestAcceleratorArgs{
//						Type:  pulumi.String("nvidia-h100-80gb"),
//						Count: pulumi.Int(8),
//					},
//				},
//				ReservationAffinity: &compute.RegionInstanceTemplateReservationAffinityArgs{
//					Type: pulumi.String("NO_RESERVATION"),
//				},
//				ShieldedInstanceConfig: &compute.RegionInstanceTemplateShieldedInstanceConfigArgs{
//					EnableVtpm:                pulumi.Bool(true),
//					EnableIntegrityMonitoring: pulumi.Bool(true),
//				},
//				NetworkInterfaces: compute.RegionInstanceTemplateNetworkInterfaceArray{
//					&compute.RegionInstanceTemplateNetworkInterfaceArgs{
//						Network: pulumi.String("default"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			a3DwsRegionInstanceGroupManager, err := compute.NewRegionInstanceGroupManager(ctx, "a3_dws", &compute.RegionInstanceGroupManagerArgs{
//				Name:             pulumi.String("a3-dws"),
//				BaseInstanceName: pulumi.String("a3-dws"),
//				Region:           pulumi.String("us-central1"),
//				Versions: compute.RegionInstanceGroupManagerVersionArray{
//					&compute.RegionInstanceGroupManagerVersionArgs{
//						InstanceTemplate: a3Dws.SelfLink,
//					},
//				},
//				InstanceLifecyclePolicy: &compute.RegionInstanceGroupManagerInstanceLifecyclePolicyArgs{
//					DefaultActionOnFailure: pulumi.String("DO_NOTHING"),
//				},
//				DistributionPolicyTargetShape: pulumi.String("ANY_SINGLE_ZONE"),
//				DistributionPolicyZones: pulumi.StringArray{
//					pulumi.String("us-central1-a"),
//					pulumi.String("us-central1-b"),
//					pulumi.String("us-central1-c"),
//					pulumi.String("us-central1-f"),
//				},
//				UpdatePolicy: &compute.RegionInstanceGroupManagerUpdatePolicyArgs{
//					InstanceRedistributionType: pulumi.String("NONE"),
//					Type:                       pulumi.String("OPPORTUNISTIC"),
//					MinimalAction:              pulumi.String("REPLACE"),
//					MaxSurgeFixed:              pulumi.Int(0),
//					MaxUnavailableFixed:        pulumi.Int(6),
//				},
//				WaitForInstances: pulumi.Bool(false),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = compute.NewRegionResizeRequest(ctx, "a3_resize_request", &compute.RegionResizeRequestArgs{
//				Name:                 pulumi.String("a3-dws"),
//				InstanceGroupManager: a3DwsRegionInstanceGroupManager.Name,
//				Region:               pulumi.String("us-central1"),
//				Description:          pulumi.String("Test resize request resource"),
//				ResizeBy:             pulumi.Int(2),
//				RequestedRunDuration: &compute.RegionResizeRequestRequestedRunDurationArgs{
//					Seconds: pulumi.String("14400"),
//					Nanos:   pulumi.Int(0),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// RegionResizeRequest can be imported using any of these accepted formats:
//
// * `projects/{{project}}/regions/{{region}}/instanceGroupManagers/{{instance_group_manager}}/resizeRequests/{{name}}`
//
// * `{{project}}/{{region}}/{{instance_group_manager}}/{{name}}`
//
// * `{{region}}/{{instance_group_manager}}/{{name}}`
//
// * `{{instance_group_manager}}/{{name}}`
//
// When using the `pulumi import` command, RegionResizeRequest can be imported using one of the formats above. For example:
//
// ```sh
// $ pulumi import gcp:compute/regionResizeRequest:RegionResizeRequest default projects/{{project}}/regions/{{region}}/instanceGroupManagers/{{instance_group_manager}}/resizeRequests/{{name}}
// ```
//
// ```sh
// $ pulumi import gcp:compute/regionResizeRequest:RegionResizeRequest default {{project}}/{{region}}/{{instance_group_manager}}/{{name}}
// ```
//
// ```sh
// $ pulumi import gcp:compute/regionResizeRequest:RegionResizeRequest default {{region}}/{{instance_group_manager}}/{{name}}
// ```
//
// ```sh
// $ pulumi import gcp:compute/regionResizeRequest:RegionResizeRequest default {{instance_group_manager}}/{{name}}
// ```
type RegionResizeRequest struct {
	pulumi.CustomResourceState

	// The creation timestamp for this resize request in RFC3339 text format.
	CreationTimestamp pulumi.StringOutput `pulumi:"creationTimestamp"`
	// An optional description of this resize-request.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The reference of the regional instance group manager this ResizeRequest is a part of.
	InstanceGroupManager pulumi.StringOutput `pulumi:"instanceGroupManager"`
	// The name of this resize request. The name must be 1-63 characters long, and comply with RFC1035.
	Name pulumi.StringOutput `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
	// The reference of the compute region scoping this request. If it is not provided, the provider region is used.
	Region pulumi.StringOutput `pulumi:"region"`
	// Requested run duration for instances that will be created by this request. At the end of the run duration instances will be deleted.
	// Structure is documented below.
	RequestedRunDuration RegionResizeRequestRequestedRunDurationPtrOutput `pulumi:"requestedRunDuration"`
	// The number of instances to be created by this resize request. The group's target size will be increased by this number.
	ResizeBy pulumi.IntOutput `pulumi:"resizeBy"`
	// Current state of the request.
	State pulumi.StringOutput `pulumi:"state"`
	// Status of the request.
	// Structure is documented below.
	Statuses RegionResizeRequestStatusArrayOutput `pulumi:"statuses"`
}

// NewRegionResizeRequest registers a new resource with the given unique name, arguments, and options.
func NewRegionResizeRequest(ctx *pulumi.Context,
	name string, args *RegionResizeRequestArgs, opts ...pulumi.ResourceOption) (*RegionResizeRequest, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InstanceGroupManager == nil {
		return nil, errors.New("invalid value for required argument 'InstanceGroupManager'")
	}
	if args.ResizeBy == nil {
		return nil, errors.New("invalid value for required argument 'ResizeBy'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RegionResizeRequest
	err := ctx.RegisterResource("gcp:compute/regionResizeRequest:RegionResizeRequest", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRegionResizeRequest gets an existing RegionResizeRequest resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRegionResizeRequest(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RegionResizeRequestState, opts ...pulumi.ResourceOption) (*RegionResizeRequest, error) {
	var resource RegionResizeRequest
	err := ctx.ReadResource("gcp:compute/regionResizeRequest:RegionResizeRequest", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RegionResizeRequest resources.
type regionResizeRequestState struct {
	// The creation timestamp for this resize request in RFC3339 text format.
	CreationTimestamp *string `pulumi:"creationTimestamp"`
	// An optional description of this resize-request.
	Description *string `pulumi:"description"`
	// The reference of the regional instance group manager this ResizeRequest is a part of.
	InstanceGroupManager *string `pulumi:"instanceGroupManager"`
	// The name of this resize request. The name must be 1-63 characters long, and comply with RFC1035.
	Name *string `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// The reference of the compute region scoping this request. If it is not provided, the provider region is used.
	Region *string `pulumi:"region"`
	// Requested run duration for instances that will be created by this request. At the end of the run duration instances will be deleted.
	// Structure is documented below.
	RequestedRunDuration *RegionResizeRequestRequestedRunDuration `pulumi:"requestedRunDuration"`
	// The number of instances to be created by this resize request. The group's target size will be increased by this number.
	ResizeBy *int `pulumi:"resizeBy"`
	// Current state of the request.
	State *string `pulumi:"state"`
	// Status of the request.
	// Structure is documented below.
	Statuses []RegionResizeRequestStatus `pulumi:"statuses"`
}

type RegionResizeRequestState struct {
	// The creation timestamp for this resize request in RFC3339 text format.
	CreationTimestamp pulumi.StringPtrInput
	// An optional description of this resize-request.
	Description pulumi.StringPtrInput
	// The reference of the regional instance group manager this ResizeRequest is a part of.
	InstanceGroupManager pulumi.StringPtrInput
	// The name of this resize request. The name must be 1-63 characters long, and comply with RFC1035.
	Name pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// The reference of the compute region scoping this request. If it is not provided, the provider region is used.
	Region pulumi.StringPtrInput
	// Requested run duration for instances that will be created by this request. At the end of the run duration instances will be deleted.
	// Structure is documented below.
	RequestedRunDuration RegionResizeRequestRequestedRunDurationPtrInput
	// The number of instances to be created by this resize request. The group's target size will be increased by this number.
	ResizeBy pulumi.IntPtrInput
	// Current state of the request.
	State pulumi.StringPtrInput
	// Status of the request.
	// Structure is documented below.
	Statuses RegionResizeRequestStatusArrayInput
}

func (RegionResizeRequestState) ElementType() reflect.Type {
	return reflect.TypeOf((*regionResizeRequestState)(nil)).Elem()
}

type regionResizeRequestArgs struct {
	// An optional description of this resize-request.
	Description *string `pulumi:"description"`
	// The reference of the regional instance group manager this ResizeRequest is a part of.
	InstanceGroupManager string `pulumi:"instanceGroupManager"`
	// The name of this resize request. The name must be 1-63 characters long, and comply with RFC1035.
	Name *string `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// The reference of the compute region scoping this request. If it is not provided, the provider region is used.
	Region *string `pulumi:"region"`
	// Requested run duration for instances that will be created by this request. At the end of the run duration instances will be deleted.
	// Structure is documented below.
	RequestedRunDuration *RegionResizeRequestRequestedRunDuration `pulumi:"requestedRunDuration"`
	// The number of instances to be created by this resize request. The group's target size will be increased by this number.
	ResizeBy int `pulumi:"resizeBy"`
}

// The set of arguments for constructing a RegionResizeRequest resource.
type RegionResizeRequestArgs struct {
	// An optional description of this resize-request.
	Description pulumi.StringPtrInput
	// The reference of the regional instance group manager this ResizeRequest is a part of.
	InstanceGroupManager pulumi.StringInput
	// The name of this resize request. The name must be 1-63 characters long, and comply with RFC1035.
	Name pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// The reference of the compute region scoping this request. If it is not provided, the provider region is used.
	Region pulumi.StringPtrInput
	// Requested run duration for instances that will be created by this request. At the end of the run duration instances will be deleted.
	// Structure is documented below.
	RequestedRunDuration RegionResizeRequestRequestedRunDurationPtrInput
	// The number of instances to be created by this resize request. The group's target size will be increased by this number.
	ResizeBy pulumi.IntInput
}

func (RegionResizeRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*regionResizeRequestArgs)(nil)).Elem()
}

type RegionResizeRequestInput interface {
	pulumi.Input

	ToRegionResizeRequestOutput() RegionResizeRequestOutput
	ToRegionResizeRequestOutputWithContext(ctx context.Context) RegionResizeRequestOutput
}

func (*RegionResizeRequest) ElementType() reflect.Type {
	return reflect.TypeOf((**RegionResizeRequest)(nil)).Elem()
}

func (i *RegionResizeRequest) ToRegionResizeRequestOutput() RegionResizeRequestOutput {
	return i.ToRegionResizeRequestOutputWithContext(context.Background())
}

func (i *RegionResizeRequest) ToRegionResizeRequestOutputWithContext(ctx context.Context) RegionResizeRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegionResizeRequestOutput)
}

// RegionResizeRequestArrayInput is an input type that accepts RegionResizeRequestArray and RegionResizeRequestArrayOutput values.
// You can construct a concrete instance of `RegionResizeRequestArrayInput` via:
//
//	RegionResizeRequestArray{ RegionResizeRequestArgs{...} }
type RegionResizeRequestArrayInput interface {
	pulumi.Input

	ToRegionResizeRequestArrayOutput() RegionResizeRequestArrayOutput
	ToRegionResizeRequestArrayOutputWithContext(context.Context) RegionResizeRequestArrayOutput
}

type RegionResizeRequestArray []RegionResizeRequestInput

func (RegionResizeRequestArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RegionResizeRequest)(nil)).Elem()
}

func (i RegionResizeRequestArray) ToRegionResizeRequestArrayOutput() RegionResizeRequestArrayOutput {
	return i.ToRegionResizeRequestArrayOutputWithContext(context.Background())
}

func (i RegionResizeRequestArray) ToRegionResizeRequestArrayOutputWithContext(ctx context.Context) RegionResizeRequestArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegionResizeRequestArrayOutput)
}

// RegionResizeRequestMapInput is an input type that accepts RegionResizeRequestMap and RegionResizeRequestMapOutput values.
// You can construct a concrete instance of `RegionResizeRequestMapInput` via:
//
//	RegionResizeRequestMap{ "key": RegionResizeRequestArgs{...} }
type RegionResizeRequestMapInput interface {
	pulumi.Input

	ToRegionResizeRequestMapOutput() RegionResizeRequestMapOutput
	ToRegionResizeRequestMapOutputWithContext(context.Context) RegionResizeRequestMapOutput
}

type RegionResizeRequestMap map[string]RegionResizeRequestInput

func (RegionResizeRequestMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RegionResizeRequest)(nil)).Elem()
}

func (i RegionResizeRequestMap) ToRegionResizeRequestMapOutput() RegionResizeRequestMapOutput {
	return i.ToRegionResizeRequestMapOutputWithContext(context.Background())
}

func (i RegionResizeRequestMap) ToRegionResizeRequestMapOutputWithContext(ctx context.Context) RegionResizeRequestMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegionResizeRequestMapOutput)
}

type RegionResizeRequestOutput struct{ *pulumi.OutputState }

func (RegionResizeRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegionResizeRequest)(nil)).Elem()
}

func (o RegionResizeRequestOutput) ToRegionResizeRequestOutput() RegionResizeRequestOutput {
	return o
}

func (o RegionResizeRequestOutput) ToRegionResizeRequestOutputWithContext(ctx context.Context) RegionResizeRequestOutput {
	return o
}

// The creation timestamp for this resize request in RFC3339 text format.
func (o RegionResizeRequestOutput) CreationTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v *RegionResizeRequest) pulumi.StringOutput { return v.CreationTimestamp }).(pulumi.StringOutput)
}

// An optional description of this resize-request.
func (o RegionResizeRequestOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegionResizeRequest) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The reference of the regional instance group manager this ResizeRequest is a part of.
func (o RegionResizeRequestOutput) InstanceGroupManager() pulumi.StringOutput {
	return o.ApplyT(func(v *RegionResizeRequest) pulumi.StringOutput { return v.InstanceGroupManager }).(pulumi.StringOutput)
}

// The name of this resize request. The name must be 1-63 characters long, and comply with RFC1035.
func (o RegionResizeRequestOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *RegionResizeRequest) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The ID of the project in which the resource belongs.
// If it is not provided, the provider project is used.
func (o RegionResizeRequestOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *RegionResizeRequest) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The reference of the compute region scoping this request. If it is not provided, the provider region is used.
func (o RegionResizeRequestOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *RegionResizeRequest) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// Requested run duration for instances that will be created by this request. At the end of the run duration instances will be deleted.
// Structure is documented below.
func (o RegionResizeRequestOutput) RequestedRunDuration() RegionResizeRequestRequestedRunDurationPtrOutput {
	return o.ApplyT(func(v *RegionResizeRequest) RegionResizeRequestRequestedRunDurationPtrOutput {
		return v.RequestedRunDuration
	}).(RegionResizeRequestRequestedRunDurationPtrOutput)
}

// The number of instances to be created by this resize request. The group's target size will be increased by this number.
func (o RegionResizeRequestOutput) ResizeBy() pulumi.IntOutput {
	return o.ApplyT(func(v *RegionResizeRequest) pulumi.IntOutput { return v.ResizeBy }).(pulumi.IntOutput)
}

// Current state of the request.
func (o RegionResizeRequestOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *RegionResizeRequest) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// Status of the request.
// Structure is documented below.
func (o RegionResizeRequestOutput) Statuses() RegionResizeRequestStatusArrayOutput {
	return o.ApplyT(func(v *RegionResizeRequest) RegionResizeRequestStatusArrayOutput { return v.Statuses }).(RegionResizeRequestStatusArrayOutput)
}

type RegionResizeRequestArrayOutput struct{ *pulumi.OutputState }

func (RegionResizeRequestArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RegionResizeRequest)(nil)).Elem()
}

func (o RegionResizeRequestArrayOutput) ToRegionResizeRequestArrayOutput() RegionResizeRequestArrayOutput {
	return o
}

func (o RegionResizeRequestArrayOutput) ToRegionResizeRequestArrayOutputWithContext(ctx context.Context) RegionResizeRequestArrayOutput {
	return o
}

func (o RegionResizeRequestArrayOutput) Index(i pulumi.IntInput) RegionResizeRequestOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RegionResizeRequest {
		return vs[0].([]*RegionResizeRequest)[vs[1].(int)]
	}).(RegionResizeRequestOutput)
}

type RegionResizeRequestMapOutput struct{ *pulumi.OutputState }

func (RegionResizeRequestMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RegionResizeRequest)(nil)).Elem()
}

func (o RegionResizeRequestMapOutput) ToRegionResizeRequestMapOutput() RegionResizeRequestMapOutput {
	return o
}

func (o RegionResizeRequestMapOutput) ToRegionResizeRequestMapOutputWithContext(ctx context.Context) RegionResizeRequestMapOutput {
	return o
}

func (o RegionResizeRequestMapOutput) MapIndex(k pulumi.StringInput) RegionResizeRequestOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RegionResizeRequest {
		return vs[0].(map[string]*RegionResizeRequest)[vs[1].(string)]
	}).(RegionResizeRequestOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RegionResizeRequestInput)(nil)).Elem(), &RegionResizeRequest{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegionResizeRequestArrayInput)(nil)).Elem(), RegionResizeRequestArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegionResizeRequestMapInput)(nil)).Elem(), RegionResizeRequestMap{})
	pulumi.RegisterOutputType(RegionResizeRequestOutput{})
	pulumi.RegisterOutputType(RegionResizeRequestArrayOutput{})
	pulumi.RegisterOutputType(RegionResizeRequestMapOutput{})
}
