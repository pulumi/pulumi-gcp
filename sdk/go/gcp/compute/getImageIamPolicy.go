// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package compute

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves the current IAM policy data for image
//
// ## example
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/compute"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := compute.LookupImageIamPolicy(ctx, &compute.LookupImageIamPolicyArgs{
//				Project: pulumi.StringRef(google_compute_image.Example.Project),
//				Image:   google_compute_image.Example.Name,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupImageIamPolicy(ctx *pulumi.Context, args *LookupImageIamPolicyArgs, opts ...pulumi.InvokeOption) (*LookupImageIamPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupImageIamPolicyResult
	err := ctx.Invoke("gcp:compute/getImageIamPolicy:getImageIamPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getImageIamPolicy.
type LookupImageIamPolicyArgs struct {
	// Used to find the parent resource to bind the IAM policy to
	Image string `pulumi:"image"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project *string `pulumi:"project"`
}

// A collection of values returned by getImageIamPolicy.
type LookupImageIamPolicyResult struct {
	// (Computed) The etag of the IAM policy.
	Etag string `pulumi:"etag"`
	// The provider-assigned unique ID for this managed resource.
	Id    string `pulumi:"id"`
	Image string `pulumi:"image"`
	// (Required only by `compute.ImageIamPolicy`) The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData string `pulumi:"policyData"`
	Project    string `pulumi:"project"`
}

func LookupImageIamPolicyOutput(ctx *pulumi.Context, args LookupImageIamPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupImageIamPolicyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupImageIamPolicyResult, error) {
			args := v.(LookupImageIamPolicyArgs)
			r, err := LookupImageIamPolicy(ctx, &args, opts...)
			var s LookupImageIamPolicyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupImageIamPolicyResultOutput)
}

// A collection of arguments for invoking getImageIamPolicy.
type LookupImageIamPolicyOutputArgs struct {
	// Used to find the parent resource to bind the IAM policy to
	Image pulumi.StringInput `pulumi:"image"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupImageIamPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupImageIamPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getImageIamPolicy.
type LookupImageIamPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupImageIamPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupImageIamPolicyResult)(nil)).Elem()
}

func (o LookupImageIamPolicyResultOutput) ToLookupImageIamPolicyResultOutput() LookupImageIamPolicyResultOutput {
	return o
}

func (o LookupImageIamPolicyResultOutput) ToLookupImageIamPolicyResultOutputWithContext(ctx context.Context) LookupImageIamPolicyResultOutput {
	return o
}

// (Computed) The etag of the IAM policy.
func (o LookupImageIamPolicyResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImageIamPolicyResult) string { return v.Etag }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupImageIamPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImageIamPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupImageIamPolicyResultOutput) Image() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImageIamPolicyResult) string { return v.Image }).(pulumi.StringOutput)
}

// (Required only by `compute.ImageIamPolicy`) The policy data generated by
// a `organizations.getIAMPolicy` data source.
func (o LookupImageIamPolicyResultOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImageIamPolicyResult) string { return v.PolicyData }).(pulumi.StringOutput)
}

func (o LookupImageIamPolicyResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImageIamPolicyResult) string { return v.Project }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupImageIamPolicyResultOutput{})
}
