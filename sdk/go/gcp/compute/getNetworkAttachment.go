// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package compute

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get a specific network attachment within a region. For more information see
// the [official documentation](https://cloud.google.com/vpc/docs/about-network-attachments)
// and [API](https://cloud.google.com/compute/docs/reference/rest/v1/networkAttachments/get).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/compute"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := compute.LookupNetworkAttachment(ctx, &compute.LookupNetworkAttachmentArgs{
//				Project: pulumi.StringRef("my-project"),
//				Name:    "my-network-attachment",
//				Region:  "europe-west1",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupNetworkAttachment(ctx *pulumi.Context, args *LookupNetworkAttachmentArgs, opts ...pulumi.InvokeOption) (*LookupNetworkAttachmentResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupNetworkAttachmentResult
	err := ctx.Invoke("gcp:compute/getNetworkAttachment:getNetworkAttachment", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNetworkAttachment.
type LookupNetworkAttachmentArgs struct {
	// The name of the network attachment to retrieve.
	// The name must be unique within the region.
	Name string `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// The region in which the network attachment resides.
	// For example, `europe-west1`.
	Region string `pulumi:"region"`
}

// A collection of values returned by getNetworkAttachment.
type LookupNetworkAttachmentResult struct {
	ConnectionEndpoints  []GetNetworkAttachmentConnectionEndpoint `pulumi:"connectionEndpoints"`
	ConnectionPreference string                                   `pulumi:"connectionPreference"`
	CreationTimestamp    string                                   `pulumi:"creationTimestamp"`
	Description          string                                   `pulumi:"description"`
	Fingerprint          string                                   `pulumi:"fingerprint"`
	Id                   string                                   `pulumi:"id"`
	Kind                 string                                   `pulumi:"kind"`
	Name                 string                                   `pulumi:"name"`
	Network              string                                   `pulumi:"network"`
	ProducerAcceptLists  []string                                 `pulumi:"producerAcceptLists"`
	ProducerRejectLists  []string                                 `pulumi:"producerRejectLists"`
	Project              *string                                  `pulumi:"project"`
	Region               string                                   `pulumi:"region"`
	SelfLink             string                                   `pulumi:"selfLink"`
	SelfLinkWithId       string                                   `pulumi:"selfLinkWithId"`
	Subnetworks          []string                                 `pulumi:"subnetworks"`
}

func LookupNetworkAttachmentOutput(ctx *pulumi.Context, args LookupNetworkAttachmentOutputArgs, opts ...pulumi.InvokeOption) LookupNetworkAttachmentResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupNetworkAttachmentResultOutput, error) {
			args := v.(LookupNetworkAttachmentArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("gcp:compute/getNetworkAttachment:getNetworkAttachment", args, LookupNetworkAttachmentResultOutput{}, options).(LookupNetworkAttachmentResultOutput), nil
		}).(LookupNetworkAttachmentResultOutput)
}

// A collection of arguments for invoking getNetworkAttachment.
type LookupNetworkAttachmentOutputArgs struct {
	// The name of the network attachment to retrieve.
	// The name must be unique within the region.
	Name pulumi.StringInput `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput `pulumi:"project"`
	// The region in which the network attachment resides.
	// For example, `europe-west1`.
	Region pulumi.StringInput `pulumi:"region"`
}

func (LookupNetworkAttachmentOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNetworkAttachmentArgs)(nil)).Elem()
}

// A collection of values returned by getNetworkAttachment.
type LookupNetworkAttachmentResultOutput struct{ *pulumi.OutputState }

func (LookupNetworkAttachmentResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNetworkAttachmentResult)(nil)).Elem()
}

func (o LookupNetworkAttachmentResultOutput) ToLookupNetworkAttachmentResultOutput() LookupNetworkAttachmentResultOutput {
	return o
}

func (o LookupNetworkAttachmentResultOutput) ToLookupNetworkAttachmentResultOutputWithContext(ctx context.Context) LookupNetworkAttachmentResultOutput {
	return o
}

func (o LookupNetworkAttachmentResultOutput) ConnectionEndpoints() GetNetworkAttachmentConnectionEndpointArrayOutput {
	return o.ApplyT(func(v LookupNetworkAttachmentResult) []GetNetworkAttachmentConnectionEndpoint {
		return v.ConnectionEndpoints
	}).(GetNetworkAttachmentConnectionEndpointArrayOutput)
}

func (o LookupNetworkAttachmentResultOutput) ConnectionPreference() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkAttachmentResult) string { return v.ConnectionPreference }).(pulumi.StringOutput)
}

func (o LookupNetworkAttachmentResultOutput) CreationTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkAttachmentResult) string { return v.CreationTimestamp }).(pulumi.StringOutput)
}

func (o LookupNetworkAttachmentResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkAttachmentResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupNetworkAttachmentResultOutput) Fingerprint() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkAttachmentResult) string { return v.Fingerprint }).(pulumi.StringOutput)
}

func (o LookupNetworkAttachmentResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkAttachmentResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupNetworkAttachmentResultOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkAttachmentResult) string { return v.Kind }).(pulumi.StringOutput)
}

func (o LookupNetworkAttachmentResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkAttachmentResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupNetworkAttachmentResultOutput) Network() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkAttachmentResult) string { return v.Network }).(pulumi.StringOutput)
}

func (o LookupNetworkAttachmentResultOutput) ProducerAcceptLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupNetworkAttachmentResult) []string { return v.ProducerAcceptLists }).(pulumi.StringArrayOutput)
}

func (o LookupNetworkAttachmentResultOutput) ProducerRejectLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupNetworkAttachmentResult) []string { return v.ProducerRejectLists }).(pulumi.StringArrayOutput)
}

func (o LookupNetworkAttachmentResultOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupNetworkAttachmentResult) *string { return v.Project }).(pulumi.StringPtrOutput)
}

func (o LookupNetworkAttachmentResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkAttachmentResult) string { return v.Region }).(pulumi.StringOutput)
}

func (o LookupNetworkAttachmentResultOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkAttachmentResult) string { return v.SelfLink }).(pulumi.StringOutput)
}

func (o LookupNetworkAttachmentResultOutput) SelfLinkWithId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkAttachmentResult) string { return v.SelfLinkWithId }).(pulumi.StringOutput)
}

func (o LookupNetworkAttachmentResultOutput) Subnetworks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupNetworkAttachmentResult) []string { return v.Subnetworks }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupNetworkAttachmentResultOutput{})
}
