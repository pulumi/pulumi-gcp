// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package compute

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Manage a network peering's route settings without managing the peering as
// a whole. This resource is primarily intended for use with GCP-generated
// peerings that shouldn't otherwise be managed by other tools. Deleting this
// resource is a no-op and the peering will not be modified.
//
//
// To get more information about NetworkPeeringRoutesConfig, see:
//
// * [API documentation](https://cloud.google.com/compute/docs/reference/rest/v1/networks/updatePeering)
// * How-to Guides
//     * [Official Documentation](https://cloud.google.com/vpc/docs/vpc-peering)
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-google/blob/master/website/docs/r/compute_network_peering_routes_config.html.markdown.
type NetworkPeeringRoutesConfig struct {
	pulumi.CustomResourceState

	// Whether to export the custom routes to the peer network.
	ExportCustomRoutes pulumi.BoolOutput `pulumi:"exportCustomRoutes"`
	// Whether to import the custom routes to the peer network.
	ImportCustomRoutes pulumi.BoolOutput `pulumi:"importCustomRoutes"`
	// The name of the primary network for the peering.
	Network pulumi.StringOutput `pulumi:"network"`
	// Name of the peering.
	Peering pulumi.StringOutput `pulumi:"peering"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
}

// NewNetworkPeeringRoutesConfig registers a new resource with the given unique name, arguments, and options.
func NewNetworkPeeringRoutesConfig(ctx *pulumi.Context,
	name string, args *NetworkPeeringRoutesConfigArgs, opts ...pulumi.ResourceOption) (*NetworkPeeringRoutesConfig, error) {
	if args == nil || args.ExportCustomRoutes == nil {
		return nil, errors.New("missing required argument 'ExportCustomRoutes'")
	}
	if args == nil || args.ImportCustomRoutes == nil {
		return nil, errors.New("missing required argument 'ImportCustomRoutes'")
	}
	if args == nil || args.Network == nil {
		return nil, errors.New("missing required argument 'Network'")
	}
	if args == nil || args.Peering == nil {
		return nil, errors.New("missing required argument 'Peering'")
	}
	if args == nil {
		args = &NetworkPeeringRoutesConfigArgs{}
	}
	var resource NetworkPeeringRoutesConfig
	err := ctx.RegisterResource("gcp:compute/networkPeeringRoutesConfig:NetworkPeeringRoutesConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetworkPeeringRoutesConfig gets an existing NetworkPeeringRoutesConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkPeeringRoutesConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkPeeringRoutesConfigState, opts ...pulumi.ResourceOption) (*NetworkPeeringRoutesConfig, error) {
	var resource NetworkPeeringRoutesConfig
	err := ctx.ReadResource("gcp:compute/networkPeeringRoutesConfig:NetworkPeeringRoutesConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetworkPeeringRoutesConfig resources.
type networkPeeringRoutesConfigState struct {
	// Whether to export the custom routes to the peer network.
	ExportCustomRoutes *bool `pulumi:"exportCustomRoutes"`
	// Whether to import the custom routes to the peer network.
	ImportCustomRoutes *bool `pulumi:"importCustomRoutes"`
	// The name of the primary network for the peering.
	Network *string `pulumi:"network"`
	// Name of the peering.
	Peering *string `pulumi:"peering"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
}

type NetworkPeeringRoutesConfigState struct {
	// Whether to export the custom routes to the peer network.
	ExportCustomRoutes pulumi.BoolPtrInput
	// Whether to import the custom routes to the peer network.
	ImportCustomRoutes pulumi.BoolPtrInput
	// The name of the primary network for the peering.
	Network pulumi.StringPtrInput
	// Name of the peering.
	Peering pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
}

func (NetworkPeeringRoutesConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkPeeringRoutesConfigState)(nil)).Elem()
}

type networkPeeringRoutesConfigArgs struct {
	// Whether to export the custom routes to the peer network.
	ExportCustomRoutes bool `pulumi:"exportCustomRoutes"`
	// Whether to import the custom routes to the peer network.
	ImportCustomRoutes bool `pulumi:"importCustomRoutes"`
	// The name of the primary network for the peering.
	Network string `pulumi:"network"`
	// Name of the peering.
	Peering string `pulumi:"peering"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
}

// The set of arguments for constructing a NetworkPeeringRoutesConfig resource.
type NetworkPeeringRoutesConfigArgs struct {
	// Whether to export the custom routes to the peer network.
	ExportCustomRoutes pulumi.BoolInput
	// Whether to import the custom routes to the peer network.
	ImportCustomRoutes pulumi.BoolInput
	// The name of the primary network for the peering.
	Network pulumi.StringInput
	// Name of the peering.
	Peering pulumi.StringInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
}

func (NetworkPeeringRoutesConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkPeeringRoutesConfigArgs)(nil)).Elem()
}

