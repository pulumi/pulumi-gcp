// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package compute

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Enables the Google Compute Engine
// [Shared VPC](https://cloud.google.com/compute/docs/shared-vpc)
// feature for a project, assigning it as a Shared VPC host project.
// 
// For more information, see,
// [the Project API documentation](https://cloud.google.com/compute/docs/reference/latest/projects),
// where the Shared VPC feature is referred to by its former name "XPN".
type SharedVPCHostProject struct {
	s *pulumi.ResourceState
}

// NewSharedVPCHostProject registers a new resource with the given unique name, arguments, and options.
func NewSharedVPCHostProject(ctx *pulumi.Context,
	name string, args *SharedVPCHostProjectArgs, opts ...pulumi.ResourceOpt) (*SharedVPCHostProject, error) {
	if args == nil || args.Project == nil {
		return nil, errors.New("missing required argument 'Project'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["project"] = nil
	} else {
		inputs["project"] = args.Project
	}
	s, err := ctx.RegisterResource("gcp:compute/sharedVPCHostProject:SharedVPCHostProject", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &SharedVPCHostProject{s: s}, nil
}

// GetSharedVPCHostProject gets an existing SharedVPCHostProject resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSharedVPCHostProject(ctx *pulumi.Context,
	name string, id pulumi.ID, state *SharedVPCHostProjectState, opts ...pulumi.ResourceOpt) (*SharedVPCHostProject, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["project"] = state.Project
	}
	s, err := ctx.ReadResource("gcp:compute/sharedVPCHostProject:SharedVPCHostProject", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &SharedVPCHostProject{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *SharedVPCHostProject) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *SharedVPCHostProject) ID() *pulumi.IDOutput {
	return r.s.ID()
}

// The ID of the project that will serve as a Shared VPC host project
func (r *SharedVPCHostProject) Project() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["project"])
}

// Input properties used for looking up and filtering SharedVPCHostProject resources.
type SharedVPCHostProjectState struct {
	// The ID of the project that will serve as a Shared VPC host project
	Project interface{}
}

// The set of arguments for constructing a SharedVPCHostProject resource.
type SharedVPCHostProjectArgs struct {
	// The ID of the project that will serve as a Shared VPC host project
	Project interface{}
}
