// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package compute

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Represents an Interconnect resource. The Interconnect resource is a dedicated connection between
// Google's network and your on-premises network.
//
// To get more information about Interconnect, see:
//
// * [API documentation](https://cloud.google.com/compute/docs/reference/rest/v1/interconnects)
// * How-to Guides
//   - [Create a Dedicated Interconnect](https://cloud.google.com/network-connectivity/docs/interconnect/concepts/dedicated-overview)
//
// ## Example Usage
//
// ### Compute Interconnect Basic
//
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/compute"
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/organizations"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			project, err := organizations.LookupProject(ctx, &organizations.LookupProjectArgs{}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = compute.NewInterconnect(ctx, "example-interconnect", &compute.InterconnectArgs{
//				Name:               pulumi.String("example-interconnect"),
//				CustomerName:       pulumi.String("example_customer"),
//				InterconnectType:   pulumi.String("DEDICATED"),
//				LinkType:           pulumi.String("LINK_TYPE_ETHERNET_10G_LR"),
//				Location:           pulumi.Sprintf("https://www.googleapis.com/compute/v1/projects/%v/global/interconnectLocations/iad-zone1-1", project.Name),
//				RequestedLinkCount: pulumi.Int(1),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Interconnect can be imported using any of these accepted formats:
//
// * `projects/{{project}}/global/interconnects/{{name}}`
//
// * `{{project}}/{{name}}`
//
// * `{{name}}`
//
// When using the `pulumi import` command, Interconnect can be imported using one of the formats above. For example:
//
// ```sh
// $ pulumi import gcp:compute/interconnect:Interconnect default projects/{{project}}/global/interconnects/{{name}}
// ```
//
// ```sh
// $ pulumi import gcp:compute/interconnect:Interconnect default {{project}}/{{name}}
// ```
//
// ```sh
// $ pulumi import gcp:compute/interconnect:Interconnect default {{name}}
// ```
type Interconnect struct {
	pulumi.CustomResourceState

	// Administrative status of the interconnect. When this is set to true, the Interconnect is
	// functional and can carry traffic. When set to false, no packets can be carried over the
	// interconnect and no BGP routes are exchanged over it. By default, the status is set to true.
	AdminEnabled pulumi.BoolPtrOutput `pulumi:"adminEnabled"`
	// interconnects.list of features available for this Interconnect connection. Can take the value:
	// MACSEC. If present then the Interconnect connection is provisioned on MACsec capable hardware
	// ports. If not present then the Interconnect connection is provisioned on non-MACsec capable
	// ports and MACsec isn't supported and enabling MACsec fails).
	AvailableFeatures pulumi.StringArrayOutput `pulumi:"availableFeatures"`
	// A list of CircuitInfo objects, that describe the individual circuits in this LAG.
	// Structure is documented below.
	CircuitInfos InterconnectCircuitInfoArrayOutput `pulumi:"circuitInfos"`
	// Creation timestamp in RFC3339 text format.
	CreationTimestamp pulumi.StringOutput `pulumi:"creationTimestamp"`
	// Customer name, to put in the Letter of Authorization as the party authorized to request a
	// crossconnect. This field is required for Dedicated and Partner Interconnect, should not be specified
	// for cross-cloud interconnect.
	CustomerName pulumi.StringPtrOutput `pulumi:"customerName"`
	// An optional description of this resource. Provide this property when you create the resource.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
	EffectiveLabels pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	// A list of outages expected for this Interconnect.
	// Structure is documented below.
	ExpectedOutages InterconnectExpectedOutageArrayOutput `pulumi:"expectedOutages"`
	// IP address configured on the Google side of the Interconnect link.
	// This can be used only for ping tests.
	GoogleIpAddress pulumi.StringOutput `pulumi:"googleIpAddress"`
	// Google reference ID to be used when raising support tickets with Google or otherwise to debug
	// backend connectivity issues.
	GoogleReferenceId pulumi.StringOutput `pulumi:"googleReferenceId"`
	// A list of the URLs of all InterconnectAttachments configured to use this Interconnect.
	InterconnectAttachments pulumi.StringArrayOutput `pulumi:"interconnectAttachments"`
	// Type of interconnect. Note that a value IT_PRIVATE has been deprecated in favor of DEDICATED.
	// Can take one of the following values:
	// - PARTNER: A partner-managed interconnection shared between customers though a partner.
	// - DEDICATED: A dedicated physical interconnection with the customer.
	//   Possible values are: `DEDICATED`, `PARTNER`, `IT_PRIVATE`.
	//
	// ***
	InterconnectType pulumi.StringOutput `pulumi:"interconnectType"`
	// A fingerprint for the labels being applied to this Interconnect, which is essentially a hash
	// of the labels set used for optimistic locking. The fingerprint is initially generated by
	// Compute Engine and changes after every request to modify or update labels.
	// You must always provide an up-to-date fingerprint hash in order to update or change labels,
	// otherwise the request will fail with error 412 conditionNotMet.
	LabelFingerprint pulumi.StringOutput `pulumi:"labelFingerprint"`
	// Labels for this resource. These can only be added or modified by the setLabels
	// method. Each label key/value pair must comply with RFC1035. Label values may be empty.
	//
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// Type of link requested. Note that this field indicates the speed of each of the links in the
	// bundle, not the speed of the entire bundle. Can take one of the following values:
	// - LINK_TYPE_ETHERNET_10G_LR: A 10G Ethernet with LR optics.
	// - LINK_TYPE_ETHERNET_100G_LR: A 100G Ethernet with LR optics.
	// - LINK_TYPE_ETHERNET_400G_LR4: A 400G Ethernet with LR4 optics
	//   Possible values are: `LINK_TYPE_ETHERNET_10G_LR`, `LINK_TYPE_ETHERNET_100G_LR`, `LINK_TYPE_ETHERNET_400G_LR4`.
	LinkType pulumi.StringOutput `pulumi:"linkType"`
	// URL of the InterconnectLocation object that represents where this connection is to be provisioned.
	// Specifies the location inside Google's Networks, should not be passed in case of cross-cloud interconnect.
	Location pulumi.StringPtrOutput `pulumi:"location"`
	// Configuration that enables Media Access Control security (MACsec) on the Cloud
	// Interconnect connection between Google and your on-premises router.
	// Structure is documented below.
	Macsec InterconnectMacsecPtrOutput `pulumi:"macsec"`
	// Enable or disable MACsec on this Interconnect connection.
	// MACsec enablement fails if the MACsec object is not specified.
	MacsecEnabled pulumi.BoolPtrOutput `pulumi:"macsecEnabled"`
	// Name of the resource. Provided by the client when the resource is created. The name must be
	// 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters
	// long and match the regular expression `a-z?` which means the first
	// character must be a lowercase letter, and all following characters must be a dash,
	// lowercase letter, or digit, except the last character, which cannot be a dash.
	Name pulumi.StringOutput `pulumi:"name"`
	// Email address to contact the customer NOC for operations and maintenance notifications
	// regarding this Interconnect. If specified, this will be used for notifications in addition to
	// all other forms described, such as Cloud Monitoring logs alerting and Cloud Notifications.
	// This field is required for users who sign up for Cloud Interconnect using workforce identity
	// federation.
	NocContactEmail pulumi.StringPtrOutput `pulumi:"nocContactEmail"`
	// The current status of this Interconnect's functionality, which can take one of the following:
	// - OS_ACTIVE: A valid Interconnect, which is turned up and is ready to use. Attachments may
	//   be provisioned on this Interconnect.
	// - OS_UNPROVISIONED: An Interconnect that has not completed turnup. No attachments may be
	//   provisioned on this Interconnect.
	// - OS_UNDER_MAINTENANCE: An Interconnect that is undergoing internal maintenance. No
	//   attachments may be provisioned or updated on this Interconnect.
	OperationalStatus pulumi.StringOutput `pulumi:"operationalStatus"`
	// IP address configured on the customer side of the Interconnect link.
	// The customer should configure this IP address during turnup when prompted by Google NOC.
	// This can be used only for ping tests.
	PeerIpAddress pulumi.StringOutput `pulumi:"peerIpAddress"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
	// Number of links actually provisioned in this interconnect.
	ProvisionedLinkCount pulumi.IntOutput `pulumi:"provisionedLinkCount"`
	// The combination of labels configured directly on the resource
	// and default labels configured on the provider.
	PulumiLabels pulumi.StringMapOutput `pulumi:"pulumiLabels"`
	// Indicates that this is a Cross-Cloud Interconnect. This field specifies the location outside
	// of Google's network that the interconnect is connected to.
	RemoteLocation pulumi.StringPtrOutput `pulumi:"remoteLocation"`
	// interconnects.list of features requested for this Interconnect connection. Options: IF_MACSEC (
	// If specified then the connection is created on MACsec capable hardware ports. If not
	// specified, the default value is false, which allocates non-MACsec capable ports first if
	// available). Note that MACSEC is still technically allowed for compatibility reasons, but it
	// does not work with the API, and will be removed in an upcoming major version.
	// Each value may be one of: `MACSEC`, `IF_MACSEC`.
	RequestedFeatures pulumi.StringArrayOutput `pulumi:"requestedFeatures"`
	// Target number of physical links in the link bundle, as requested by the customer.
	RequestedLinkCount pulumi.IntOutput `pulumi:"requestedLinkCount"`
	// Reserved for future use.
	SatisfiesPzs pulumi.BoolOutput `pulumi:"satisfiesPzs"`
	// (Output)
	// State of this notification. Note that the versions of this enum prefixed with "NS_" have
	// been deprecated in favor of the unprefixed values. Can take one of the following values:
	// - ACTIVE: This outage notification is active. The event could be in the past, present,
	//   or future. See startTime and endTime for scheduling.
	// - CANCELLED: The outage associated with this notification was cancelled before the
	//   outage was due to start.
	// - COMPLETED: The outage associated with this notification is complete.
	State pulumi.StringOutput `pulumi:"state"`
}

// NewInterconnect registers a new resource with the given unique name, arguments, and options.
func NewInterconnect(ctx *pulumi.Context,
	name string, args *InterconnectArgs, opts ...pulumi.ResourceOption) (*Interconnect, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InterconnectType == nil {
		return nil, errors.New("invalid value for required argument 'InterconnectType'")
	}
	if args.LinkType == nil {
		return nil, errors.New("invalid value for required argument 'LinkType'")
	}
	if args.RequestedLinkCount == nil {
		return nil, errors.New("invalid value for required argument 'RequestedLinkCount'")
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"effectiveLabels",
		"pulumiLabels",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Interconnect
	err := ctx.RegisterResource("gcp:compute/interconnect:Interconnect", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInterconnect gets an existing Interconnect resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInterconnect(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InterconnectState, opts ...pulumi.ResourceOption) (*Interconnect, error) {
	var resource Interconnect
	err := ctx.ReadResource("gcp:compute/interconnect:Interconnect", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Interconnect resources.
type interconnectState struct {
	// Administrative status of the interconnect. When this is set to true, the Interconnect is
	// functional and can carry traffic. When set to false, no packets can be carried over the
	// interconnect and no BGP routes are exchanged over it. By default, the status is set to true.
	AdminEnabled *bool `pulumi:"adminEnabled"`
	// interconnects.list of features available for this Interconnect connection. Can take the value:
	// MACSEC. If present then the Interconnect connection is provisioned on MACsec capable hardware
	// ports. If not present then the Interconnect connection is provisioned on non-MACsec capable
	// ports and MACsec isn't supported and enabling MACsec fails).
	AvailableFeatures []string `pulumi:"availableFeatures"`
	// A list of CircuitInfo objects, that describe the individual circuits in this LAG.
	// Structure is documented below.
	CircuitInfos []InterconnectCircuitInfo `pulumi:"circuitInfos"`
	// Creation timestamp in RFC3339 text format.
	CreationTimestamp *string `pulumi:"creationTimestamp"`
	// Customer name, to put in the Letter of Authorization as the party authorized to request a
	// crossconnect. This field is required for Dedicated and Partner Interconnect, should not be specified
	// for cross-cloud interconnect.
	CustomerName *string `pulumi:"customerName"`
	// An optional description of this resource. Provide this property when you create the resource.
	Description *string `pulumi:"description"`
	// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
	EffectiveLabels map[string]string `pulumi:"effectiveLabels"`
	// A list of outages expected for this Interconnect.
	// Structure is documented below.
	ExpectedOutages []InterconnectExpectedOutage `pulumi:"expectedOutages"`
	// IP address configured on the Google side of the Interconnect link.
	// This can be used only for ping tests.
	GoogleIpAddress *string `pulumi:"googleIpAddress"`
	// Google reference ID to be used when raising support tickets with Google or otherwise to debug
	// backend connectivity issues.
	GoogleReferenceId *string `pulumi:"googleReferenceId"`
	// A list of the URLs of all InterconnectAttachments configured to use this Interconnect.
	InterconnectAttachments []string `pulumi:"interconnectAttachments"`
	// Type of interconnect. Note that a value IT_PRIVATE has been deprecated in favor of DEDICATED.
	// Can take one of the following values:
	// - PARTNER: A partner-managed interconnection shared between customers though a partner.
	// - DEDICATED: A dedicated physical interconnection with the customer.
	//   Possible values are: `DEDICATED`, `PARTNER`, `IT_PRIVATE`.
	//
	// ***
	InterconnectType *string `pulumi:"interconnectType"`
	// A fingerprint for the labels being applied to this Interconnect, which is essentially a hash
	// of the labels set used for optimistic locking. The fingerprint is initially generated by
	// Compute Engine and changes after every request to modify or update labels.
	// You must always provide an up-to-date fingerprint hash in order to update or change labels,
	// otherwise the request will fail with error 412 conditionNotMet.
	LabelFingerprint *string `pulumi:"labelFingerprint"`
	// Labels for this resource. These can only be added or modified by the setLabels
	// method. Each label key/value pair must comply with RFC1035. Label values may be empty.
	//
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// Type of link requested. Note that this field indicates the speed of each of the links in the
	// bundle, not the speed of the entire bundle. Can take one of the following values:
	// - LINK_TYPE_ETHERNET_10G_LR: A 10G Ethernet with LR optics.
	// - LINK_TYPE_ETHERNET_100G_LR: A 100G Ethernet with LR optics.
	// - LINK_TYPE_ETHERNET_400G_LR4: A 400G Ethernet with LR4 optics
	//   Possible values are: `LINK_TYPE_ETHERNET_10G_LR`, `LINK_TYPE_ETHERNET_100G_LR`, `LINK_TYPE_ETHERNET_400G_LR4`.
	LinkType *string `pulumi:"linkType"`
	// URL of the InterconnectLocation object that represents where this connection is to be provisioned.
	// Specifies the location inside Google's Networks, should not be passed in case of cross-cloud interconnect.
	Location *string `pulumi:"location"`
	// Configuration that enables Media Access Control security (MACsec) on the Cloud
	// Interconnect connection between Google and your on-premises router.
	// Structure is documented below.
	Macsec *InterconnectMacsec `pulumi:"macsec"`
	// Enable or disable MACsec on this Interconnect connection.
	// MACsec enablement fails if the MACsec object is not specified.
	MacsecEnabled *bool `pulumi:"macsecEnabled"`
	// Name of the resource. Provided by the client when the resource is created. The name must be
	// 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters
	// long and match the regular expression `a-z?` which means the first
	// character must be a lowercase letter, and all following characters must be a dash,
	// lowercase letter, or digit, except the last character, which cannot be a dash.
	Name *string `pulumi:"name"`
	// Email address to contact the customer NOC for operations and maintenance notifications
	// regarding this Interconnect. If specified, this will be used for notifications in addition to
	// all other forms described, such as Cloud Monitoring logs alerting and Cloud Notifications.
	// This field is required for users who sign up for Cloud Interconnect using workforce identity
	// federation.
	NocContactEmail *string `pulumi:"nocContactEmail"`
	// The current status of this Interconnect's functionality, which can take one of the following:
	// - OS_ACTIVE: A valid Interconnect, which is turned up and is ready to use. Attachments may
	//   be provisioned on this Interconnect.
	// - OS_UNPROVISIONED: An Interconnect that has not completed turnup. No attachments may be
	//   provisioned on this Interconnect.
	// - OS_UNDER_MAINTENANCE: An Interconnect that is undergoing internal maintenance. No
	//   attachments may be provisioned or updated on this Interconnect.
	OperationalStatus *string `pulumi:"operationalStatus"`
	// IP address configured on the customer side of the Interconnect link.
	// The customer should configure this IP address during turnup when prompted by Google NOC.
	// This can be used only for ping tests.
	PeerIpAddress *string `pulumi:"peerIpAddress"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// Number of links actually provisioned in this interconnect.
	ProvisionedLinkCount *int `pulumi:"provisionedLinkCount"`
	// The combination of labels configured directly on the resource
	// and default labels configured on the provider.
	PulumiLabels map[string]string `pulumi:"pulumiLabels"`
	// Indicates that this is a Cross-Cloud Interconnect. This field specifies the location outside
	// of Google's network that the interconnect is connected to.
	RemoteLocation *string `pulumi:"remoteLocation"`
	// interconnects.list of features requested for this Interconnect connection. Options: IF_MACSEC (
	// If specified then the connection is created on MACsec capable hardware ports. If not
	// specified, the default value is false, which allocates non-MACsec capable ports first if
	// available). Note that MACSEC is still technically allowed for compatibility reasons, but it
	// does not work with the API, and will be removed in an upcoming major version.
	// Each value may be one of: `MACSEC`, `IF_MACSEC`.
	RequestedFeatures []string `pulumi:"requestedFeatures"`
	// Target number of physical links in the link bundle, as requested by the customer.
	RequestedLinkCount *int `pulumi:"requestedLinkCount"`
	// Reserved for future use.
	SatisfiesPzs *bool `pulumi:"satisfiesPzs"`
	// (Output)
	// State of this notification. Note that the versions of this enum prefixed with "NS_" have
	// been deprecated in favor of the unprefixed values. Can take one of the following values:
	// - ACTIVE: This outage notification is active. The event could be in the past, present,
	//   or future. See startTime and endTime for scheduling.
	// - CANCELLED: The outage associated with this notification was cancelled before the
	//   outage was due to start.
	// - COMPLETED: The outage associated with this notification is complete.
	State *string `pulumi:"state"`
}

type InterconnectState struct {
	// Administrative status of the interconnect. When this is set to true, the Interconnect is
	// functional and can carry traffic. When set to false, no packets can be carried over the
	// interconnect and no BGP routes are exchanged over it. By default, the status is set to true.
	AdminEnabled pulumi.BoolPtrInput
	// interconnects.list of features available for this Interconnect connection. Can take the value:
	// MACSEC. If present then the Interconnect connection is provisioned on MACsec capable hardware
	// ports. If not present then the Interconnect connection is provisioned on non-MACsec capable
	// ports and MACsec isn't supported and enabling MACsec fails).
	AvailableFeatures pulumi.StringArrayInput
	// A list of CircuitInfo objects, that describe the individual circuits in this LAG.
	// Structure is documented below.
	CircuitInfos InterconnectCircuitInfoArrayInput
	// Creation timestamp in RFC3339 text format.
	CreationTimestamp pulumi.StringPtrInput
	// Customer name, to put in the Letter of Authorization as the party authorized to request a
	// crossconnect. This field is required for Dedicated and Partner Interconnect, should not be specified
	// for cross-cloud interconnect.
	CustomerName pulumi.StringPtrInput
	// An optional description of this resource. Provide this property when you create the resource.
	Description pulumi.StringPtrInput
	// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
	EffectiveLabels pulumi.StringMapInput
	// A list of outages expected for this Interconnect.
	// Structure is documented below.
	ExpectedOutages InterconnectExpectedOutageArrayInput
	// IP address configured on the Google side of the Interconnect link.
	// This can be used only for ping tests.
	GoogleIpAddress pulumi.StringPtrInput
	// Google reference ID to be used when raising support tickets with Google or otherwise to debug
	// backend connectivity issues.
	GoogleReferenceId pulumi.StringPtrInput
	// A list of the URLs of all InterconnectAttachments configured to use this Interconnect.
	InterconnectAttachments pulumi.StringArrayInput
	// Type of interconnect. Note that a value IT_PRIVATE has been deprecated in favor of DEDICATED.
	// Can take one of the following values:
	// - PARTNER: A partner-managed interconnection shared between customers though a partner.
	// - DEDICATED: A dedicated physical interconnection with the customer.
	//   Possible values are: `DEDICATED`, `PARTNER`, `IT_PRIVATE`.
	//
	// ***
	InterconnectType pulumi.StringPtrInput
	// A fingerprint for the labels being applied to this Interconnect, which is essentially a hash
	// of the labels set used for optimistic locking. The fingerprint is initially generated by
	// Compute Engine and changes after every request to modify or update labels.
	// You must always provide an up-to-date fingerprint hash in order to update or change labels,
	// otherwise the request will fail with error 412 conditionNotMet.
	LabelFingerprint pulumi.StringPtrInput
	// Labels for this resource. These can only be added or modified by the setLabels
	// method. Each label key/value pair must comply with RFC1035. Label values may be empty.
	//
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// Type of link requested. Note that this field indicates the speed of each of the links in the
	// bundle, not the speed of the entire bundle. Can take one of the following values:
	// - LINK_TYPE_ETHERNET_10G_LR: A 10G Ethernet with LR optics.
	// - LINK_TYPE_ETHERNET_100G_LR: A 100G Ethernet with LR optics.
	// - LINK_TYPE_ETHERNET_400G_LR4: A 400G Ethernet with LR4 optics
	//   Possible values are: `LINK_TYPE_ETHERNET_10G_LR`, `LINK_TYPE_ETHERNET_100G_LR`, `LINK_TYPE_ETHERNET_400G_LR4`.
	LinkType pulumi.StringPtrInput
	// URL of the InterconnectLocation object that represents where this connection is to be provisioned.
	// Specifies the location inside Google's Networks, should not be passed in case of cross-cloud interconnect.
	Location pulumi.StringPtrInput
	// Configuration that enables Media Access Control security (MACsec) on the Cloud
	// Interconnect connection between Google and your on-premises router.
	// Structure is documented below.
	Macsec InterconnectMacsecPtrInput
	// Enable or disable MACsec on this Interconnect connection.
	// MACsec enablement fails if the MACsec object is not specified.
	MacsecEnabled pulumi.BoolPtrInput
	// Name of the resource. Provided by the client when the resource is created. The name must be
	// 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters
	// long and match the regular expression `a-z?` which means the first
	// character must be a lowercase letter, and all following characters must be a dash,
	// lowercase letter, or digit, except the last character, which cannot be a dash.
	Name pulumi.StringPtrInput
	// Email address to contact the customer NOC for operations and maintenance notifications
	// regarding this Interconnect. If specified, this will be used for notifications in addition to
	// all other forms described, such as Cloud Monitoring logs alerting and Cloud Notifications.
	// This field is required for users who sign up for Cloud Interconnect using workforce identity
	// federation.
	NocContactEmail pulumi.StringPtrInput
	// The current status of this Interconnect's functionality, which can take one of the following:
	// - OS_ACTIVE: A valid Interconnect, which is turned up and is ready to use. Attachments may
	//   be provisioned on this Interconnect.
	// - OS_UNPROVISIONED: An Interconnect that has not completed turnup. No attachments may be
	//   provisioned on this Interconnect.
	// - OS_UNDER_MAINTENANCE: An Interconnect that is undergoing internal maintenance. No
	//   attachments may be provisioned or updated on this Interconnect.
	OperationalStatus pulumi.StringPtrInput
	// IP address configured on the customer side of the Interconnect link.
	// The customer should configure this IP address during turnup when prompted by Google NOC.
	// This can be used only for ping tests.
	PeerIpAddress pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// Number of links actually provisioned in this interconnect.
	ProvisionedLinkCount pulumi.IntPtrInput
	// The combination of labels configured directly on the resource
	// and default labels configured on the provider.
	PulumiLabels pulumi.StringMapInput
	// Indicates that this is a Cross-Cloud Interconnect. This field specifies the location outside
	// of Google's network that the interconnect is connected to.
	RemoteLocation pulumi.StringPtrInput
	// interconnects.list of features requested for this Interconnect connection. Options: IF_MACSEC (
	// If specified then the connection is created on MACsec capable hardware ports. If not
	// specified, the default value is false, which allocates non-MACsec capable ports first if
	// available). Note that MACSEC is still technically allowed for compatibility reasons, but it
	// does not work with the API, and will be removed in an upcoming major version.
	// Each value may be one of: `MACSEC`, `IF_MACSEC`.
	RequestedFeatures pulumi.StringArrayInput
	// Target number of physical links in the link bundle, as requested by the customer.
	RequestedLinkCount pulumi.IntPtrInput
	// Reserved for future use.
	SatisfiesPzs pulumi.BoolPtrInput
	// (Output)
	// State of this notification. Note that the versions of this enum prefixed with "NS_" have
	// been deprecated in favor of the unprefixed values. Can take one of the following values:
	// - ACTIVE: This outage notification is active. The event could be in the past, present,
	//   or future. See startTime and endTime for scheduling.
	// - CANCELLED: The outage associated with this notification was cancelled before the
	//   outage was due to start.
	// - COMPLETED: The outage associated with this notification is complete.
	State pulumi.StringPtrInput
}

func (InterconnectState) ElementType() reflect.Type {
	return reflect.TypeOf((*interconnectState)(nil)).Elem()
}

type interconnectArgs struct {
	// Administrative status of the interconnect. When this is set to true, the Interconnect is
	// functional and can carry traffic. When set to false, no packets can be carried over the
	// interconnect and no BGP routes are exchanged over it. By default, the status is set to true.
	AdminEnabled *bool `pulumi:"adminEnabled"`
	// Customer name, to put in the Letter of Authorization as the party authorized to request a
	// crossconnect. This field is required for Dedicated and Partner Interconnect, should not be specified
	// for cross-cloud interconnect.
	CustomerName *string `pulumi:"customerName"`
	// An optional description of this resource. Provide this property when you create the resource.
	Description *string `pulumi:"description"`
	// Type of interconnect. Note that a value IT_PRIVATE has been deprecated in favor of DEDICATED.
	// Can take one of the following values:
	// - PARTNER: A partner-managed interconnection shared between customers though a partner.
	// - DEDICATED: A dedicated physical interconnection with the customer.
	//   Possible values are: `DEDICATED`, `PARTNER`, `IT_PRIVATE`.
	//
	// ***
	InterconnectType string `pulumi:"interconnectType"`
	// Labels for this resource. These can only be added or modified by the setLabels
	// method. Each label key/value pair must comply with RFC1035. Label values may be empty.
	//
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// Type of link requested. Note that this field indicates the speed of each of the links in the
	// bundle, not the speed of the entire bundle. Can take one of the following values:
	// - LINK_TYPE_ETHERNET_10G_LR: A 10G Ethernet with LR optics.
	// - LINK_TYPE_ETHERNET_100G_LR: A 100G Ethernet with LR optics.
	// - LINK_TYPE_ETHERNET_400G_LR4: A 400G Ethernet with LR4 optics
	//   Possible values are: `LINK_TYPE_ETHERNET_10G_LR`, `LINK_TYPE_ETHERNET_100G_LR`, `LINK_TYPE_ETHERNET_400G_LR4`.
	LinkType string `pulumi:"linkType"`
	// URL of the InterconnectLocation object that represents where this connection is to be provisioned.
	// Specifies the location inside Google's Networks, should not be passed in case of cross-cloud interconnect.
	Location *string `pulumi:"location"`
	// Configuration that enables Media Access Control security (MACsec) on the Cloud
	// Interconnect connection between Google and your on-premises router.
	// Structure is documented below.
	Macsec *InterconnectMacsec `pulumi:"macsec"`
	// Enable or disable MACsec on this Interconnect connection.
	// MACsec enablement fails if the MACsec object is not specified.
	MacsecEnabled *bool `pulumi:"macsecEnabled"`
	// Name of the resource. Provided by the client when the resource is created. The name must be
	// 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters
	// long and match the regular expression `a-z?` which means the first
	// character must be a lowercase letter, and all following characters must be a dash,
	// lowercase letter, or digit, except the last character, which cannot be a dash.
	Name *string `pulumi:"name"`
	// Email address to contact the customer NOC for operations and maintenance notifications
	// regarding this Interconnect. If specified, this will be used for notifications in addition to
	// all other forms described, such as Cloud Monitoring logs alerting and Cloud Notifications.
	// This field is required for users who sign up for Cloud Interconnect using workforce identity
	// federation.
	NocContactEmail *string `pulumi:"nocContactEmail"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// Indicates that this is a Cross-Cloud Interconnect. This field specifies the location outside
	// of Google's network that the interconnect is connected to.
	RemoteLocation *string `pulumi:"remoteLocation"`
	// interconnects.list of features requested for this Interconnect connection. Options: IF_MACSEC (
	// If specified then the connection is created on MACsec capable hardware ports. If not
	// specified, the default value is false, which allocates non-MACsec capable ports first if
	// available). Note that MACSEC is still technically allowed for compatibility reasons, but it
	// does not work with the API, and will be removed in an upcoming major version.
	// Each value may be one of: `MACSEC`, `IF_MACSEC`.
	RequestedFeatures []string `pulumi:"requestedFeatures"`
	// Target number of physical links in the link bundle, as requested by the customer.
	RequestedLinkCount int `pulumi:"requestedLinkCount"`
}

// The set of arguments for constructing a Interconnect resource.
type InterconnectArgs struct {
	// Administrative status of the interconnect. When this is set to true, the Interconnect is
	// functional and can carry traffic. When set to false, no packets can be carried over the
	// interconnect and no BGP routes are exchanged over it. By default, the status is set to true.
	AdminEnabled pulumi.BoolPtrInput
	// Customer name, to put in the Letter of Authorization as the party authorized to request a
	// crossconnect. This field is required for Dedicated and Partner Interconnect, should not be specified
	// for cross-cloud interconnect.
	CustomerName pulumi.StringPtrInput
	// An optional description of this resource. Provide this property when you create the resource.
	Description pulumi.StringPtrInput
	// Type of interconnect. Note that a value IT_PRIVATE has been deprecated in favor of DEDICATED.
	// Can take one of the following values:
	// - PARTNER: A partner-managed interconnection shared between customers though a partner.
	// - DEDICATED: A dedicated physical interconnection with the customer.
	//   Possible values are: `DEDICATED`, `PARTNER`, `IT_PRIVATE`.
	//
	// ***
	InterconnectType pulumi.StringInput
	// Labels for this resource. These can only be added or modified by the setLabels
	// method. Each label key/value pair must comply with RFC1035. Label values may be empty.
	//
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// Type of link requested. Note that this field indicates the speed of each of the links in the
	// bundle, not the speed of the entire bundle. Can take one of the following values:
	// - LINK_TYPE_ETHERNET_10G_LR: A 10G Ethernet with LR optics.
	// - LINK_TYPE_ETHERNET_100G_LR: A 100G Ethernet with LR optics.
	// - LINK_TYPE_ETHERNET_400G_LR4: A 400G Ethernet with LR4 optics
	//   Possible values are: `LINK_TYPE_ETHERNET_10G_LR`, `LINK_TYPE_ETHERNET_100G_LR`, `LINK_TYPE_ETHERNET_400G_LR4`.
	LinkType pulumi.StringInput
	// URL of the InterconnectLocation object that represents where this connection is to be provisioned.
	// Specifies the location inside Google's Networks, should not be passed in case of cross-cloud interconnect.
	Location pulumi.StringPtrInput
	// Configuration that enables Media Access Control security (MACsec) on the Cloud
	// Interconnect connection between Google and your on-premises router.
	// Structure is documented below.
	Macsec InterconnectMacsecPtrInput
	// Enable or disable MACsec on this Interconnect connection.
	// MACsec enablement fails if the MACsec object is not specified.
	MacsecEnabled pulumi.BoolPtrInput
	// Name of the resource. Provided by the client when the resource is created. The name must be
	// 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters
	// long and match the regular expression `a-z?` which means the first
	// character must be a lowercase letter, and all following characters must be a dash,
	// lowercase letter, or digit, except the last character, which cannot be a dash.
	Name pulumi.StringPtrInput
	// Email address to contact the customer NOC for operations and maintenance notifications
	// regarding this Interconnect. If specified, this will be used for notifications in addition to
	// all other forms described, such as Cloud Monitoring logs alerting and Cloud Notifications.
	// This field is required for users who sign up for Cloud Interconnect using workforce identity
	// federation.
	NocContactEmail pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// Indicates that this is a Cross-Cloud Interconnect. This field specifies the location outside
	// of Google's network that the interconnect is connected to.
	RemoteLocation pulumi.StringPtrInput
	// interconnects.list of features requested for this Interconnect connection. Options: IF_MACSEC (
	// If specified then the connection is created on MACsec capable hardware ports. If not
	// specified, the default value is false, which allocates non-MACsec capable ports first if
	// available). Note that MACSEC is still technically allowed for compatibility reasons, but it
	// does not work with the API, and will be removed in an upcoming major version.
	// Each value may be one of: `MACSEC`, `IF_MACSEC`.
	RequestedFeatures pulumi.StringArrayInput
	// Target number of physical links in the link bundle, as requested by the customer.
	RequestedLinkCount pulumi.IntInput
}

func (InterconnectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*interconnectArgs)(nil)).Elem()
}

type InterconnectInput interface {
	pulumi.Input

	ToInterconnectOutput() InterconnectOutput
	ToInterconnectOutputWithContext(ctx context.Context) InterconnectOutput
}

func (*Interconnect) ElementType() reflect.Type {
	return reflect.TypeOf((**Interconnect)(nil)).Elem()
}

func (i *Interconnect) ToInterconnectOutput() InterconnectOutput {
	return i.ToInterconnectOutputWithContext(context.Background())
}

func (i *Interconnect) ToInterconnectOutputWithContext(ctx context.Context) InterconnectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InterconnectOutput)
}

// InterconnectArrayInput is an input type that accepts InterconnectArray and InterconnectArrayOutput values.
// You can construct a concrete instance of `InterconnectArrayInput` via:
//
//	InterconnectArray{ InterconnectArgs{...} }
type InterconnectArrayInput interface {
	pulumi.Input

	ToInterconnectArrayOutput() InterconnectArrayOutput
	ToInterconnectArrayOutputWithContext(context.Context) InterconnectArrayOutput
}

type InterconnectArray []InterconnectInput

func (InterconnectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Interconnect)(nil)).Elem()
}

func (i InterconnectArray) ToInterconnectArrayOutput() InterconnectArrayOutput {
	return i.ToInterconnectArrayOutputWithContext(context.Background())
}

func (i InterconnectArray) ToInterconnectArrayOutputWithContext(ctx context.Context) InterconnectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InterconnectArrayOutput)
}

// InterconnectMapInput is an input type that accepts InterconnectMap and InterconnectMapOutput values.
// You can construct a concrete instance of `InterconnectMapInput` via:
//
//	InterconnectMap{ "key": InterconnectArgs{...} }
type InterconnectMapInput interface {
	pulumi.Input

	ToInterconnectMapOutput() InterconnectMapOutput
	ToInterconnectMapOutputWithContext(context.Context) InterconnectMapOutput
}

type InterconnectMap map[string]InterconnectInput

func (InterconnectMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Interconnect)(nil)).Elem()
}

func (i InterconnectMap) ToInterconnectMapOutput() InterconnectMapOutput {
	return i.ToInterconnectMapOutputWithContext(context.Background())
}

func (i InterconnectMap) ToInterconnectMapOutputWithContext(ctx context.Context) InterconnectMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InterconnectMapOutput)
}

type InterconnectOutput struct{ *pulumi.OutputState }

func (InterconnectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Interconnect)(nil)).Elem()
}

func (o InterconnectOutput) ToInterconnectOutput() InterconnectOutput {
	return o
}

func (o InterconnectOutput) ToInterconnectOutputWithContext(ctx context.Context) InterconnectOutput {
	return o
}

// Administrative status of the interconnect. When this is set to true, the Interconnect is
// functional and can carry traffic. When set to false, no packets can be carried over the
// interconnect and no BGP routes are exchanged over it. By default, the status is set to true.
func (o InterconnectOutput) AdminEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Interconnect) pulumi.BoolPtrOutput { return v.AdminEnabled }).(pulumi.BoolPtrOutput)
}

// interconnects.list of features available for this Interconnect connection. Can take the value:
// MACSEC. If present then the Interconnect connection is provisioned on MACsec capable hardware
// ports. If not present then the Interconnect connection is provisioned on non-MACsec capable
// ports and MACsec isn't supported and enabling MACsec fails).
func (o InterconnectOutput) AvailableFeatures() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Interconnect) pulumi.StringArrayOutput { return v.AvailableFeatures }).(pulumi.StringArrayOutput)
}

// A list of CircuitInfo objects, that describe the individual circuits in this LAG.
// Structure is documented below.
func (o InterconnectOutput) CircuitInfos() InterconnectCircuitInfoArrayOutput {
	return o.ApplyT(func(v *Interconnect) InterconnectCircuitInfoArrayOutput { return v.CircuitInfos }).(InterconnectCircuitInfoArrayOutput)
}

// Creation timestamp in RFC3339 text format.
func (o InterconnectOutput) CreationTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v *Interconnect) pulumi.StringOutput { return v.CreationTimestamp }).(pulumi.StringOutput)
}

// Customer name, to put in the Letter of Authorization as the party authorized to request a
// crossconnect. This field is required for Dedicated and Partner Interconnect, should not be specified
// for cross-cloud interconnect.
func (o InterconnectOutput) CustomerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Interconnect) pulumi.StringPtrOutput { return v.CustomerName }).(pulumi.StringPtrOutput)
}

// An optional description of this resource. Provide this property when you create the resource.
func (o InterconnectOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Interconnect) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
func (o InterconnectOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Interconnect) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// A list of outages expected for this Interconnect.
// Structure is documented below.
func (o InterconnectOutput) ExpectedOutages() InterconnectExpectedOutageArrayOutput {
	return o.ApplyT(func(v *Interconnect) InterconnectExpectedOutageArrayOutput { return v.ExpectedOutages }).(InterconnectExpectedOutageArrayOutput)
}

// IP address configured on the Google side of the Interconnect link.
// This can be used only for ping tests.
func (o InterconnectOutput) GoogleIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *Interconnect) pulumi.StringOutput { return v.GoogleIpAddress }).(pulumi.StringOutput)
}

// Google reference ID to be used when raising support tickets with Google or otherwise to debug
// backend connectivity issues.
func (o InterconnectOutput) GoogleReferenceId() pulumi.StringOutput {
	return o.ApplyT(func(v *Interconnect) pulumi.StringOutput { return v.GoogleReferenceId }).(pulumi.StringOutput)
}

// A list of the URLs of all InterconnectAttachments configured to use this Interconnect.
func (o InterconnectOutput) InterconnectAttachments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Interconnect) pulumi.StringArrayOutput { return v.InterconnectAttachments }).(pulumi.StringArrayOutput)
}

// Type of interconnect. Note that a value IT_PRIVATE has been deprecated in favor of DEDICATED.
// Can take one of the following values:
//   - PARTNER: A partner-managed interconnection shared between customers though a partner.
//   - DEDICATED: A dedicated physical interconnection with the customer.
//     Possible values are: `DEDICATED`, `PARTNER`, `IT_PRIVATE`.
//
// ***
func (o InterconnectOutput) InterconnectType() pulumi.StringOutput {
	return o.ApplyT(func(v *Interconnect) pulumi.StringOutput { return v.InterconnectType }).(pulumi.StringOutput)
}

// A fingerprint for the labels being applied to this Interconnect, which is essentially a hash
// of the labels set used for optimistic locking. The fingerprint is initially generated by
// Compute Engine and changes after every request to modify or update labels.
// You must always provide an up-to-date fingerprint hash in order to update or change labels,
// otherwise the request will fail with error 412 conditionNotMet.
func (o InterconnectOutput) LabelFingerprint() pulumi.StringOutput {
	return o.ApplyT(func(v *Interconnect) pulumi.StringOutput { return v.LabelFingerprint }).(pulumi.StringOutput)
}

// Labels for this resource. These can only be added or modified by the setLabels
// method. Each label key/value pair must comply with RFC1035. Label values may be empty.
//
// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
func (o InterconnectOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Interconnect) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// Type of link requested. Note that this field indicates the speed of each of the links in the
// bundle, not the speed of the entire bundle. Can take one of the following values:
//   - LINK_TYPE_ETHERNET_10G_LR: A 10G Ethernet with LR optics.
//   - LINK_TYPE_ETHERNET_100G_LR: A 100G Ethernet with LR optics.
//   - LINK_TYPE_ETHERNET_400G_LR4: A 400G Ethernet with LR4 optics
//     Possible values are: `LINK_TYPE_ETHERNET_10G_LR`, `LINK_TYPE_ETHERNET_100G_LR`, `LINK_TYPE_ETHERNET_400G_LR4`.
func (o InterconnectOutput) LinkType() pulumi.StringOutput {
	return o.ApplyT(func(v *Interconnect) pulumi.StringOutput { return v.LinkType }).(pulumi.StringOutput)
}

// URL of the InterconnectLocation object that represents where this connection is to be provisioned.
// Specifies the location inside Google's Networks, should not be passed in case of cross-cloud interconnect.
func (o InterconnectOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Interconnect) pulumi.StringPtrOutput { return v.Location }).(pulumi.StringPtrOutput)
}

// Configuration that enables Media Access Control security (MACsec) on the Cloud
// Interconnect connection between Google and your on-premises router.
// Structure is documented below.
func (o InterconnectOutput) Macsec() InterconnectMacsecPtrOutput {
	return o.ApplyT(func(v *Interconnect) InterconnectMacsecPtrOutput { return v.Macsec }).(InterconnectMacsecPtrOutput)
}

// Enable or disable MACsec on this Interconnect connection.
// MACsec enablement fails if the MACsec object is not specified.
func (o InterconnectOutput) MacsecEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Interconnect) pulumi.BoolPtrOutput { return v.MacsecEnabled }).(pulumi.BoolPtrOutput)
}

// Name of the resource. Provided by the client when the resource is created. The name must be
// 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters
// long and match the regular expression `a-z?` which means the first
// character must be a lowercase letter, and all following characters must be a dash,
// lowercase letter, or digit, except the last character, which cannot be a dash.
func (o InterconnectOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Interconnect) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Email address to contact the customer NOC for operations and maintenance notifications
// regarding this Interconnect. If specified, this will be used for notifications in addition to
// all other forms described, such as Cloud Monitoring logs alerting and Cloud Notifications.
// This field is required for users who sign up for Cloud Interconnect using workforce identity
// federation.
func (o InterconnectOutput) NocContactEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Interconnect) pulumi.StringPtrOutput { return v.NocContactEmail }).(pulumi.StringPtrOutput)
}

// The current status of this Interconnect's functionality, which can take one of the following:
//   - OS_ACTIVE: A valid Interconnect, which is turned up and is ready to use. Attachments may
//     be provisioned on this Interconnect.
//   - OS_UNPROVISIONED: An Interconnect that has not completed turnup. No attachments may be
//     provisioned on this Interconnect.
//   - OS_UNDER_MAINTENANCE: An Interconnect that is undergoing internal maintenance. No
//     attachments may be provisioned or updated on this Interconnect.
func (o InterconnectOutput) OperationalStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *Interconnect) pulumi.StringOutput { return v.OperationalStatus }).(pulumi.StringOutput)
}

// IP address configured on the customer side of the Interconnect link.
// The customer should configure this IP address during turnup when prompted by Google NOC.
// This can be used only for ping tests.
func (o InterconnectOutput) PeerIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *Interconnect) pulumi.StringOutput { return v.PeerIpAddress }).(pulumi.StringOutput)
}

// The ID of the project in which the resource belongs.
// If it is not provided, the provider project is used.
func (o InterconnectOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *Interconnect) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Number of links actually provisioned in this interconnect.
func (o InterconnectOutput) ProvisionedLinkCount() pulumi.IntOutput {
	return o.ApplyT(func(v *Interconnect) pulumi.IntOutput { return v.ProvisionedLinkCount }).(pulumi.IntOutput)
}

// The combination of labels configured directly on the resource
// and default labels configured on the provider.
func (o InterconnectOutput) PulumiLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Interconnect) pulumi.StringMapOutput { return v.PulumiLabels }).(pulumi.StringMapOutput)
}

// Indicates that this is a Cross-Cloud Interconnect. This field specifies the location outside
// of Google's network that the interconnect is connected to.
func (o InterconnectOutput) RemoteLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Interconnect) pulumi.StringPtrOutput { return v.RemoteLocation }).(pulumi.StringPtrOutput)
}

// interconnects.list of features requested for this Interconnect connection. Options: IF_MACSEC (
// If specified then the connection is created on MACsec capable hardware ports. If not
// specified, the default value is false, which allocates non-MACsec capable ports first if
// available). Note that MACSEC is still technically allowed for compatibility reasons, but it
// does not work with the API, and will be removed in an upcoming major version.
// Each value may be one of: `MACSEC`, `IF_MACSEC`.
func (o InterconnectOutput) RequestedFeatures() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Interconnect) pulumi.StringArrayOutput { return v.RequestedFeatures }).(pulumi.StringArrayOutput)
}

// Target number of physical links in the link bundle, as requested by the customer.
func (o InterconnectOutput) RequestedLinkCount() pulumi.IntOutput {
	return o.ApplyT(func(v *Interconnect) pulumi.IntOutput { return v.RequestedLinkCount }).(pulumi.IntOutput)
}

// Reserved for future use.
func (o InterconnectOutput) SatisfiesPzs() pulumi.BoolOutput {
	return o.ApplyT(func(v *Interconnect) pulumi.BoolOutput { return v.SatisfiesPzs }).(pulumi.BoolOutput)
}

// (Output)
// State of this notification. Note that the versions of this enum prefixed with "NS_" have
// been deprecated in favor of the unprefixed values. Can take one of the following values:
//   - ACTIVE: This outage notification is active. The event could be in the past, present,
//     or future. See startTime and endTime for scheduling.
//   - CANCELLED: The outage associated with this notification was cancelled before the
//     outage was due to start.
//   - COMPLETED: The outage associated with this notification is complete.
func (o InterconnectOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *Interconnect) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

type InterconnectArrayOutput struct{ *pulumi.OutputState }

func (InterconnectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Interconnect)(nil)).Elem()
}

func (o InterconnectArrayOutput) ToInterconnectArrayOutput() InterconnectArrayOutput {
	return o
}

func (o InterconnectArrayOutput) ToInterconnectArrayOutputWithContext(ctx context.Context) InterconnectArrayOutput {
	return o
}

func (o InterconnectArrayOutput) Index(i pulumi.IntInput) InterconnectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Interconnect {
		return vs[0].([]*Interconnect)[vs[1].(int)]
	}).(InterconnectOutput)
}

type InterconnectMapOutput struct{ *pulumi.OutputState }

func (InterconnectMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Interconnect)(nil)).Elem()
}

func (o InterconnectMapOutput) ToInterconnectMapOutput() InterconnectMapOutput {
	return o
}

func (o InterconnectMapOutput) ToInterconnectMapOutputWithContext(ctx context.Context) InterconnectMapOutput {
	return o
}

func (o InterconnectMapOutput) MapIndex(k pulumi.StringInput) InterconnectOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Interconnect {
		return vs[0].(map[string]*Interconnect)[vs[1].(string)]
	}).(InterconnectOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InterconnectInput)(nil)).Elem(), &Interconnect{})
	pulumi.RegisterInputType(reflect.TypeOf((*InterconnectArrayInput)(nil)).Elem(), InterconnectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InterconnectMapInput)(nil)).Elem(), InterconnectMap{})
	pulumi.RegisterOutputType(InterconnectOutput{})
	pulumi.RegisterOutputType(InterconnectArrayOutput{})
	pulumi.RegisterOutputType(InterconnectMapOutput{})
}
