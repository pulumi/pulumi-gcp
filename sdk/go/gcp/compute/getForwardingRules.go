// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package compute

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// List all networks in a specified Google Cloud project.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/compute"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := compute.GetForwardingRules(ctx, &compute.GetForwardingRulesArgs{
//				Project: pulumi.StringRef("my-cloud-project"),
//				Region:  pulumi.StringRef("us-central1"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetForwardingRules(ctx *pulumi.Context, args *GetForwardingRulesArgs, opts ...pulumi.InvokeOption) (*GetForwardingRulesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetForwardingRulesResult
	err := ctx.Invoke("gcp:compute/getForwardingRules:getForwardingRules", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getForwardingRules.
type GetForwardingRulesArgs struct {
	// The name of the project.
	Project *string `pulumi:"project"`
	// The region you want to get the forwarding rules from.
	//
	// These arguments must be set in either the provider or the resouce in order for the information to be queried.
	Region *string `pulumi:"region"`
}

// A collection of values returned by getForwardingRules.
type GetForwardingRulesResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The project name being queried.
	Project *string `pulumi:"project"`
	// The region being queried.
	Region *string `pulumi:"region"`
	// This is a list of the forwarding rules in the project. Each forwarding rule will list the backend, description, ip address. name, network, self link, service label, service name, and subnet.
	Rules []GetForwardingRulesRule `pulumi:"rules"`
}

func GetForwardingRulesOutput(ctx *pulumi.Context, args GetForwardingRulesOutputArgs, opts ...pulumi.InvokeOption) GetForwardingRulesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetForwardingRulesResultOutput, error) {
			args := v.(GetForwardingRulesArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv GetForwardingRulesResult
			secret, deps, err := ctx.InvokePackageRawWithDeps("gcp:compute/getForwardingRules:getForwardingRules", args, &rv, "", opts...)
			if err != nil {
				return GetForwardingRulesResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(GetForwardingRulesResultOutput)
			output = pulumi.OutputWithDependencies(ctx.Context(), output, deps...).(GetForwardingRulesResultOutput)
			if secret {
				return pulumi.ToSecret(output).(GetForwardingRulesResultOutput), nil
			}
			return output, nil
		}).(GetForwardingRulesResultOutput)
}

// A collection of arguments for invoking getForwardingRules.
type GetForwardingRulesOutputArgs struct {
	// The name of the project.
	Project pulumi.StringPtrInput `pulumi:"project"`
	// The region you want to get the forwarding rules from.
	//
	// These arguments must be set in either the provider or the resouce in order for the information to be queried.
	Region pulumi.StringPtrInput `pulumi:"region"`
}

func (GetForwardingRulesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetForwardingRulesArgs)(nil)).Elem()
}

// A collection of values returned by getForwardingRules.
type GetForwardingRulesResultOutput struct{ *pulumi.OutputState }

func (GetForwardingRulesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetForwardingRulesResult)(nil)).Elem()
}

func (o GetForwardingRulesResultOutput) ToGetForwardingRulesResultOutput() GetForwardingRulesResultOutput {
	return o
}

func (o GetForwardingRulesResultOutput) ToGetForwardingRulesResultOutputWithContext(ctx context.Context) GetForwardingRulesResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetForwardingRulesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetForwardingRulesResult) string { return v.Id }).(pulumi.StringOutput)
}

// The project name being queried.
func (o GetForwardingRulesResultOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetForwardingRulesResult) *string { return v.Project }).(pulumi.StringPtrOutput)
}

// The region being queried.
func (o GetForwardingRulesResultOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetForwardingRulesResult) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// This is a list of the forwarding rules in the project. Each forwarding rule will list the backend, description, ip address. name, network, self link, service label, service name, and subnet.
func (o GetForwardingRulesResultOutput) Rules() GetForwardingRulesRuleArrayOutput {
	return o.ApplyT(func(v GetForwardingRulesResult) []GetForwardingRulesRule { return v.Rules }).(GetForwardingRulesRuleArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetForwardingRulesResultOutput{})
}
