// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package compute

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Represents a Managed Instance Group Resize Request
//
// Resize Requests are the Managed Instance Group implementation of Dynamic Workload Scheduler Flex Start.
//
// With Dynamic Workload Scheduler in Flex Start mode, you submit a GPU capacity request for your AI/ML jobs by indicating how many you need, a duration, and your preferred zone. Dynamic Workload Scheduler intelligently persists the request; once the capacity becomes available, it automatically provisions your VMs enabling your workloads to run continuously for the entire duration of the capacity allocation.
//
// To get more information about ResizeRequest, see:
//
// * [API documentation](https://cloud.google.com/compute/docs/reference/rest/v1/instanceGroupManagerResizeRequests)
// * How-to Guides
//   - [About resize requests in a MIG](https://cloud.google.com/compute/docs/instance-groups/about-resize-requests-mig)
//
// ## Example Usage
//
// ### Compute Mig Resize Request
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/compute"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			a3Dws, err := compute.NewRegionInstanceTemplate(ctx, "a3_dws", &compute.RegionInstanceTemplateArgs{
//				Name:                pulumi.String("a3-dws"),
//				Region:              pulumi.String("us-central1"),
//				Description:         pulumi.String("This template is used to create a mig instance that is compatible with DWS resize requests."),
//				InstanceDescription: pulumi.String("A3 GPU"),
//				MachineType:         pulumi.String("a3-highgpu-8g"),
//				CanIpForward:        pulumi.Bool(false),
//				Scheduling: &compute.RegionInstanceTemplateSchedulingArgs{
//					AutomaticRestart:  pulumi.Bool(false),
//					OnHostMaintenance: pulumi.String("TERMINATE"),
//				},
//				Disks: compute.RegionInstanceTemplateDiskArray{
//					&compute.RegionInstanceTemplateDiskArgs{
//						SourceImage: pulumi.String("cos-cloud/cos-121-lts"),
//						AutoDelete:  pulumi.Bool(true),
//						Boot:        pulumi.Bool(true),
//						DiskType:    pulumi.String("pd-ssd"),
//						DiskSizeGb:  pulumi.Int(960),
//						Mode:        pulumi.String("READ_WRITE"),
//					},
//				},
//				GuestAccelerators: compute.RegionInstanceTemplateGuestAcceleratorArray{
//					&compute.RegionInstanceTemplateGuestAcceleratorArgs{
//						Type:  pulumi.String("nvidia-h100-80gb"),
//						Count: pulumi.Int(8),
//					},
//				},
//				ReservationAffinity: &compute.RegionInstanceTemplateReservationAffinityArgs{
//					Type: pulumi.String("NO_RESERVATION"),
//				},
//				ShieldedInstanceConfig: &compute.RegionInstanceTemplateShieldedInstanceConfigArgs{
//					EnableVtpm:                pulumi.Bool(true),
//					EnableIntegrityMonitoring: pulumi.Bool(true),
//				},
//				NetworkInterfaces: compute.RegionInstanceTemplateNetworkInterfaceArray{
//					&compute.RegionInstanceTemplateNetworkInterfaceArgs{
//						Network: pulumi.String("default"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			a3DwsInstanceGroupManager, err := compute.NewInstanceGroupManager(ctx, "a3_dws", &compute.InstanceGroupManagerArgs{
//				Name:             pulumi.String("a3-dws"),
//				BaseInstanceName: pulumi.String("a3-dws"),
//				Zone:             pulumi.String("us-central1-a"),
//				Versions: compute.InstanceGroupManagerVersionArray{
//					&compute.InstanceGroupManagerVersionArgs{
//						InstanceTemplate: a3Dws.SelfLink,
//					},
//				},
//				InstanceLifecyclePolicy: &compute.InstanceGroupManagerInstanceLifecyclePolicyArgs{
//					DefaultActionOnFailure: pulumi.String("DO_NOTHING"),
//				},
//				WaitForInstances: pulumi.Bool(false),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = compute.NewResizeRequest(ctx, "a3_resize_request", &compute.ResizeRequestArgs{
//				Name:                 pulumi.String("a3-dws"),
//				InstanceGroupManager: a3DwsInstanceGroupManager.Name,
//				Zone:                 pulumi.String("us-central1-a"),
//				Description:          pulumi.String("Test resize request resource"),
//				ResizeBy:             pulumi.Int(2),
//				RequestedRunDuration: &compute.ResizeRequestRequestedRunDurationArgs{
//					Seconds: pulumi.String("14400"),
//					Nanos:   pulumi.Int(0),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ResizeRequest can be imported using any of these accepted formats:
//
// * `projects/{{project}}/zones/{{zone}}/instanceGroupManagers/{{instance_group_manager}}/resizeRequests/{{name}}`
//
// * `{{project}}/{{zone}}/{{instance_group_manager}}/{{name}}`
//
// * `{{zone}}/{{instance_group_manager}}/{{name}}`
//
// * `{{instance_group_manager}}/{{name}}`
//
// When using the `pulumi import` command, ResizeRequest can be imported using one of the formats above. For example:
//
// ```sh
// $ pulumi import gcp:compute/resizeRequest:ResizeRequest default projects/{{project}}/zones/{{zone}}/instanceGroupManagers/{{instance_group_manager}}/resizeRequests/{{name}}
// ```
//
// ```sh
// $ pulumi import gcp:compute/resizeRequest:ResizeRequest default {{project}}/{{zone}}/{{instance_group_manager}}/{{name}}
// ```
//
// ```sh
// $ pulumi import gcp:compute/resizeRequest:ResizeRequest default {{zone}}/{{instance_group_manager}}/{{name}}
// ```
//
// ```sh
// $ pulumi import gcp:compute/resizeRequest:ResizeRequest default {{instance_group_manager}}/{{name}}
// ```
type ResizeRequest struct {
	pulumi.CustomResourceState

	// The creation timestamp for this resize request in RFC3339 text format.
	CreationTimestamp pulumi.StringOutput `pulumi:"creationTimestamp"`
	// An optional description of this resize-request.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The reference of the instance group manager this ResizeRequest is a part of.
	//
	// ***
	InstanceGroupManager pulumi.StringOutput `pulumi:"instanceGroupManager"`
	// The name of this resize request. The name must be 1-63 characters long, and comply with RFC1035.
	Name pulumi.StringOutput `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
	// Requested run duration for instances that will be created by this request. At the end of the run duration instance will be deleted.
	// Structure is documented below.
	RequestedRunDuration ResizeRequestRequestedRunDurationPtrOutput `pulumi:"requestedRunDuration"`
	// The number of instances to be created by this resize request. The group's target size will be increased by this number.
	ResizeBy pulumi.IntOutput `pulumi:"resizeBy"`
	// Current state of the request.
	State pulumi.StringOutput `pulumi:"state"`
	// Status of the request.
	// Structure is documented below.
	Statuses ResizeRequestStatusArrayOutput `pulumi:"statuses"`
	// The reference of the compute zone scoping this request. If it is not provided, the provider zone is used.
	Zone pulumi.StringOutput `pulumi:"zone"`
}

// NewResizeRequest registers a new resource with the given unique name, arguments, and options.
func NewResizeRequest(ctx *pulumi.Context,
	name string, args *ResizeRequestArgs, opts ...pulumi.ResourceOption) (*ResizeRequest, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InstanceGroupManager == nil {
		return nil, errors.New("invalid value for required argument 'InstanceGroupManager'")
	}
	if args.ResizeBy == nil {
		return nil, errors.New("invalid value for required argument 'ResizeBy'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ResizeRequest
	err := ctx.RegisterResource("gcp:compute/resizeRequest:ResizeRequest", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetResizeRequest gets an existing ResizeRequest resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetResizeRequest(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ResizeRequestState, opts ...pulumi.ResourceOption) (*ResizeRequest, error) {
	var resource ResizeRequest
	err := ctx.ReadResource("gcp:compute/resizeRequest:ResizeRequest", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ResizeRequest resources.
type resizeRequestState struct {
	// The creation timestamp for this resize request in RFC3339 text format.
	CreationTimestamp *string `pulumi:"creationTimestamp"`
	// An optional description of this resize-request.
	Description *string `pulumi:"description"`
	// The reference of the instance group manager this ResizeRequest is a part of.
	//
	// ***
	InstanceGroupManager *string `pulumi:"instanceGroupManager"`
	// The name of this resize request. The name must be 1-63 characters long, and comply with RFC1035.
	Name *string `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// Requested run duration for instances that will be created by this request. At the end of the run duration instance will be deleted.
	// Structure is documented below.
	RequestedRunDuration *ResizeRequestRequestedRunDuration `pulumi:"requestedRunDuration"`
	// The number of instances to be created by this resize request. The group's target size will be increased by this number.
	ResizeBy *int `pulumi:"resizeBy"`
	// Current state of the request.
	State *string `pulumi:"state"`
	// Status of the request.
	// Structure is documented below.
	Statuses []ResizeRequestStatus `pulumi:"statuses"`
	// The reference of the compute zone scoping this request. If it is not provided, the provider zone is used.
	Zone *string `pulumi:"zone"`
}

type ResizeRequestState struct {
	// The creation timestamp for this resize request in RFC3339 text format.
	CreationTimestamp pulumi.StringPtrInput
	// An optional description of this resize-request.
	Description pulumi.StringPtrInput
	// The reference of the instance group manager this ResizeRequest is a part of.
	//
	// ***
	InstanceGroupManager pulumi.StringPtrInput
	// The name of this resize request. The name must be 1-63 characters long, and comply with RFC1035.
	Name pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// Requested run duration for instances that will be created by this request. At the end of the run duration instance will be deleted.
	// Structure is documented below.
	RequestedRunDuration ResizeRequestRequestedRunDurationPtrInput
	// The number of instances to be created by this resize request. The group's target size will be increased by this number.
	ResizeBy pulumi.IntPtrInput
	// Current state of the request.
	State pulumi.StringPtrInput
	// Status of the request.
	// Structure is documented below.
	Statuses ResizeRequestStatusArrayInput
	// The reference of the compute zone scoping this request. If it is not provided, the provider zone is used.
	Zone pulumi.StringPtrInput
}

func (ResizeRequestState) ElementType() reflect.Type {
	return reflect.TypeOf((*resizeRequestState)(nil)).Elem()
}

type resizeRequestArgs struct {
	// An optional description of this resize-request.
	Description *string `pulumi:"description"`
	// The reference of the instance group manager this ResizeRequest is a part of.
	//
	// ***
	InstanceGroupManager string `pulumi:"instanceGroupManager"`
	// The name of this resize request. The name must be 1-63 characters long, and comply with RFC1035.
	Name *string `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// Requested run duration for instances that will be created by this request. At the end of the run duration instance will be deleted.
	// Structure is documented below.
	RequestedRunDuration *ResizeRequestRequestedRunDuration `pulumi:"requestedRunDuration"`
	// The number of instances to be created by this resize request. The group's target size will be increased by this number.
	ResizeBy int `pulumi:"resizeBy"`
	// The reference of the compute zone scoping this request. If it is not provided, the provider zone is used.
	Zone *string `pulumi:"zone"`
}

// The set of arguments for constructing a ResizeRequest resource.
type ResizeRequestArgs struct {
	// An optional description of this resize-request.
	Description pulumi.StringPtrInput
	// The reference of the instance group manager this ResizeRequest is a part of.
	//
	// ***
	InstanceGroupManager pulumi.StringInput
	// The name of this resize request. The name must be 1-63 characters long, and comply with RFC1035.
	Name pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// Requested run duration for instances that will be created by this request. At the end of the run duration instance will be deleted.
	// Structure is documented below.
	RequestedRunDuration ResizeRequestRequestedRunDurationPtrInput
	// The number of instances to be created by this resize request. The group's target size will be increased by this number.
	ResizeBy pulumi.IntInput
	// The reference of the compute zone scoping this request. If it is not provided, the provider zone is used.
	Zone pulumi.StringPtrInput
}

func (ResizeRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*resizeRequestArgs)(nil)).Elem()
}

type ResizeRequestInput interface {
	pulumi.Input

	ToResizeRequestOutput() ResizeRequestOutput
	ToResizeRequestOutputWithContext(ctx context.Context) ResizeRequestOutput
}

func (*ResizeRequest) ElementType() reflect.Type {
	return reflect.TypeOf((**ResizeRequest)(nil)).Elem()
}

func (i *ResizeRequest) ToResizeRequestOutput() ResizeRequestOutput {
	return i.ToResizeRequestOutputWithContext(context.Background())
}

func (i *ResizeRequest) ToResizeRequestOutputWithContext(ctx context.Context) ResizeRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResizeRequestOutput)
}

// ResizeRequestArrayInput is an input type that accepts ResizeRequestArray and ResizeRequestArrayOutput values.
// You can construct a concrete instance of `ResizeRequestArrayInput` via:
//
//	ResizeRequestArray{ ResizeRequestArgs{...} }
type ResizeRequestArrayInput interface {
	pulumi.Input

	ToResizeRequestArrayOutput() ResizeRequestArrayOutput
	ToResizeRequestArrayOutputWithContext(context.Context) ResizeRequestArrayOutput
}

type ResizeRequestArray []ResizeRequestInput

func (ResizeRequestArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ResizeRequest)(nil)).Elem()
}

func (i ResizeRequestArray) ToResizeRequestArrayOutput() ResizeRequestArrayOutput {
	return i.ToResizeRequestArrayOutputWithContext(context.Background())
}

func (i ResizeRequestArray) ToResizeRequestArrayOutputWithContext(ctx context.Context) ResizeRequestArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResizeRequestArrayOutput)
}

// ResizeRequestMapInput is an input type that accepts ResizeRequestMap and ResizeRequestMapOutput values.
// You can construct a concrete instance of `ResizeRequestMapInput` via:
//
//	ResizeRequestMap{ "key": ResizeRequestArgs{...} }
type ResizeRequestMapInput interface {
	pulumi.Input

	ToResizeRequestMapOutput() ResizeRequestMapOutput
	ToResizeRequestMapOutputWithContext(context.Context) ResizeRequestMapOutput
}

type ResizeRequestMap map[string]ResizeRequestInput

func (ResizeRequestMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ResizeRequest)(nil)).Elem()
}

func (i ResizeRequestMap) ToResizeRequestMapOutput() ResizeRequestMapOutput {
	return i.ToResizeRequestMapOutputWithContext(context.Background())
}

func (i ResizeRequestMap) ToResizeRequestMapOutputWithContext(ctx context.Context) ResizeRequestMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResizeRequestMapOutput)
}

type ResizeRequestOutput struct{ *pulumi.OutputState }

func (ResizeRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResizeRequest)(nil)).Elem()
}

func (o ResizeRequestOutput) ToResizeRequestOutput() ResizeRequestOutput {
	return o
}

func (o ResizeRequestOutput) ToResizeRequestOutputWithContext(ctx context.Context) ResizeRequestOutput {
	return o
}

// The creation timestamp for this resize request in RFC3339 text format.
func (o ResizeRequestOutput) CreationTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v *ResizeRequest) pulumi.StringOutput { return v.CreationTimestamp }).(pulumi.StringOutput)
}

// An optional description of this resize-request.
func (o ResizeRequestOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResizeRequest) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The reference of the instance group manager this ResizeRequest is a part of.
//
// ***
func (o ResizeRequestOutput) InstanceGroupManager() pulumi.StringOutput {
	return o.ApplyT(func(v *ResizeRequest) pulumi.StringOutput { return v.InstanceGroupManager }).(pulumi.StringOutput)
}

// The name of this resize request. The name must be 1-63 characters long, and comply with RFC1035.
func (o ResizeRequestOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ResizeRequest) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The ID of the project in which the resource belongs.
// If it is not provided, the provider project is used.
func (o ResizeRequestOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ResizeRequest) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Requested run duration for instances that will be created by this request. At the end of the run duration instance will be deleted.
// Structure is documented below.
func (o ResizeRequestOutput) RequestedRunDuration() ResizeRequestRequestedRunDurationPtrOutput {
	return o.ApplyT(func(v *ResizeRequest) ResizeRequestRequestedRunDurationPtrOutput { return v.RequestedRunDuration }).(ResizeRequestRequestedRunDurationPtrOutput)
}

// The number of instances to be created by this resize request. The group's target size will be increased by this number.
func (o ResizeRequestOutput) ResizeBy() pulumi.IntOutput {
	return o.ApplyT(func(v *ResizeRequest) pulumi.IntOutput { return v.ResizeBy }).(pulumi.IntOutput)
}

// Current state of the request.
func (o ResizeRequestOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *ResizeRequest) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// Status of the request.
// Structure is documented below.
func (o ResizeRequestOutput) Statuses() ResizeRequestStatusArrayOutput {
	return o.ApplyT(func(v *ResizeRequest) ResizeRequestStatusArrayOutput { return v.Statuses }).(ResizeRequestStatusArrayOutput)
}

// The reference of the compute zone scoping this request. If it is not provided, the provider zone is used.
func (o ResizeRequestOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v *ResizeRequest) pulumi.StringOutput { return v.Zone }).(pulumi.StringOutput)
}

type ResizeRequestArrayOutput struct{ *pulumi.OutputState }

func (ResizeRequestArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ResizeRequest)(nil)).Elem()
}

func (o ResizeRequestArrayOutput) ToResizeRequestArrayOutput() ResizeRequestArrayOutput {
	return o
}

func (o ResizeRequestArrayOutput) ToResizeRequestArrayOutputWithContext(ctx context.Context) ResizeRequestArrayOutput {
	return o
}

func (o ResizeRequestArrayOutput) Index(i pulumi.IntInput) ResizeRequestOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ResizeRequest {
		return vs[0].([]*ResizeRequest)[vs[1].(int)]
	}).(ResizeRequestOutput)
}

type ResizeRequestMapOutput struct{ *pulumi.OutputState }

func (ResizeRequestMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ResizeRequest)(nil)).Elem()
}

func (o ResizeRequestMapOutput) ToResizeRequestMapOutput() ResizeRequestMapOutput {
	return o
}

func (o ResizeRequestMapOutput) ToResizeRequestMapOutputWithContext(ctx context.Context) ResizeRequestMapOutput {
	return o
}

func (o ResizeRequestMapOutput) MapIndex(k pulumi.StringInput) ResizeRequestOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ResizeRequest {
		return vs[0].(map[string]*ResizeRequest)[vs[1].(string)]
	}).(ResizeRequestOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ResizeRequestInput)(nil)).Elem(), &ResizeRequest{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResizeRequestArrayInput)(nil)).Elem(), ResizeRequestArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResizeRequestMapInput)(nil)).Elem(), ResizeRequestMap{})
	pulumi.RegisterOutputType(ResizeRequestOutput{})
	pulumi.RegisterOutputType(ResizeRequestArrayOutput{})
	pulumi.RegisterOutputType(ResizeRequestMapOutput{})
}
