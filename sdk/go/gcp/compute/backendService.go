// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package compute

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Creates a BackendService resource in the specified project using the data
// included in the request.
type BackendService struct {
	s *pulumi.ResourceState
}

// NewBackendService registers a new resource with the given unique name, arguments, and options.
func NewBackendService(ctx *pulumi.Context,
	name string, args *BackendServiceArgs, opts ...pulumi.ResourceOpt) (*BackendService, error) {
	if args == nil || args.HealthChecks == nil {
		return nil, errors.New("missing required argument 'HealthChecks'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["affinityCookieTtlSec"] = nil
		inputs["backends"] = nil
		inputs["cdnPolicy"] = nil
		inputs["connectionDrainingTimeoutSec"] = nil
		inputs["customRequestHeaders"] = nil
		inputs["description"] = nil
		inputs["enableCdn"] = nil
		inputs["healthChecks"] = nil
		inputs["iap"] = nil
		inputs["loadBalancingScheme"] = nil
		inputs["name"] = nil
		inputs["portName"] = nil
		inputs["project"] = nil
		inputs["protocol"] = nil
		inputs["securityPolicy"] = nil
		inputs["sessionAffinity"] = nil
		inputs["timeoutSec"] = nil
	} else {
		inputs["affinityCookieTtlSec"] = args.AffinityCookieTtlSec
		inputs["backends"] = args.Backends
		inputs["cdnPolicy"] = args.CdnPolicy
		inputs["connectionDrainingTimeoutSec"] = args.ConnectionDrainingTimeoutSec
		inputs["customRequestHeaders"] = args.CustomRequestHeaders
		inputs["description"] = args.Description
		inputs["enableCdn"] = args.EnableCdn
		inputs["healthChecks"] = args.HealthChecks
		inputs["iap"] = args.Iap
		inputs["loadBalancingScheme"] = args.LoadBalancingScheme
		inputs["name"] = args.Name
		inputs["portName"] = args.PortName
		inputs["project"] = args.Project
		inputs["protocol"] = args.Protocol
		inputs["securityPolicy"] = args.SecurityPolicy
		inputs["sessionAffinity"] = args.SessionAffinity
		inputs["timeoutSec"] = args.TimeoutSec
	}
	inputs["creationTimestamp"] = nil
	inputs["fingerprint"] = nil
	inputs["selfLink"] = nil
	s, err := ctx.RegisterResource("gcp:compute/backendService:BackendService", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &BackendService{s: s}, nil
}

// GetBackendService gets an existing BackendService resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBackendService(ctx *pulumi.Context,
	name string, id pulumi.ID, state *BackendServiceState, opts ...pulumi.ResourceOpt) (*BackendService, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["affinityCookieTtlSec"] = state.AffinityCookieTtlSec
		inputs["backends"] = state.Backends
		inputs["cdnPolicy"] = state.CdnPolicy
		inputs["connectionDrainingTimeoutSec"] = state.ConnectionDrainingTimeoutSec
		inputs["creationTimestamp"] = state.CreationTimestamp
		inputs["customRequestHeaders"] = state.CustomRequestHeaders
		inputs["description"] = state.Description
		inputs["enableCdn"] = state.EnableCdn
		inputs["fingerprint"] = state.Fingerprint
		inputs["healthChecks"] = state.HealthChecks
		inputs["iap"] = state.Iap
		inputs["loadBalancingScheme"] = state.LoadBalancingScheme
		inputs["name"] = state.Name
		inputs["portName"] = state.PortName
		inputs["project"] = state.Project
		inputs["protocol"] = state.Protocol
		inputs["securityPolicy"] = state.SecurityPolicy
		inputs["selfLink"] = state.SelfLink
		inputs["sessionAffinity"] = state.SessionAffinity
		inputs["timeoutSec"] = state.TimeoutSec
	}
	s, err := ctx.ReadResource("gcp:compute/backendService:BackendService", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &BackendService{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *BackendService) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *BackendService) ID() *pulumi.IDOutput {
	return r.s.ID()
}

func (r *BackendService) AffinityCookieTtlSec() *pulumi.IntOutput {
	return (*pulumi.IntOutput)(r.s.State["affinityCookieTtlSec"])
}

func (r *BackendService) Backends() *pulumi.ArrayOutput {
	return (*pulumi.ArrayOutput)(r.s.State["backends"])
}

func (r *BackendService) CdnPolicy() *pulumi.Output {
	return r.s.State["cdnPolicy"]
}

func (r *BackendService) ConnectionDrainingTimeoutSec() *pulumi.IntOutput {
	return (*pulumi.IntOutput)(r.s.State["connectionDrainingTimeoutSec"])
}

func (r *BackendService) CreationTimestamp() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["creationTimestamp"])
}

func (r *BackendService) CustomRequestHeaders() *pulumi.ArrayOutput {
	return (*pulumi.ArrayOutput)(r.s.State["customRequestHeaders"])
}

func (r *BackendService) Description() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["description"])
}

func (r *BackendService) EnableCdn() *pulumi.BoolOutput {
	return (*pulumi.BoolOutput)(r.s.State["enableCdn"])
}

func (r *BackendService) Fingerprint() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["fingerprint"])
}

func (r *BackendService) HealthChecks() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["healthChecks"])
}

func (r *BackendService) Iap() *pulumi.Output {
	return r.s.State["iap"]
}

func (r *BackendService) LoadBalancingScheme() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["loadBalancingScheme"])
}

func (r *BackendService) Name() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["name"])
}

func (r *BackendService) PortName() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["portName"])
}

// The ID of the project in which the resource belongs.
// If it is not provided, the provider project is used.
func (r *BackendService) Project() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["project"])
}

func (r *BackendService) Protocol() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["protocol"])
}

func (r *BackendService) SecurityPolicy() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["securityPolicy"])
}

// The URI of the created resource.
func (r *BackendService) SelfLink() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["selfLink"])
}

func (r *BackendService) SessionAffinity() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["sessionAffinity"])
}

func (r *BackendService) TimeoutSec() *pulumi.IntOutput {
	return (*pulumi.IntOutput)(r.s.State["timeoutSec"])
}

// Input properties used for looking up and filtering BackendService resources.
type BackendServiceState struct {
	AffinityCookieTtlSec interface{}
	Backends interface{}
	CdnPolicy interface{}
	ConnectionDrainingTimeoutSec interface{}
	CreationTimestamp interface{}
	CustomRequestHeaders interface{}
	Description interface{}
	EnableCdn interface{}
	Fingerprint interface{}
	HealthChecks interface{}
	Iap interface{}
	LoadBalancingScheme interface{}
	Name interface{}
	PortName interface{}
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project interface{}
	Protocol interface{}
	SecurityPolicy interface{}
	// The URI of the created resource.
	SelfLink interface{}
	SessionAffinity interface{}
	TimeoutSec interface{}
}

// The set of arguments for constructing a BackendService resource.
type BackendServiceArgs struct {
	AffinityCookieTtlSec interface{}
	Backends interface{}
	CdnPolicy interface{}
	ConnectionDrainingTimeoutSec interface{}
	CustomRequestHeaders interface{}
	Description interface{}
	EnableCdn interface{}
	HealthChecks interface{}
	Iap interface{}
	LoadBalancingScheme interface{}
	Name interface{}
	PortName interface{}
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project interface{}
	Protocol interface{}
	SecurityPolicy interface{}
	SessionAffinity interface{}
	TimeoutSec interface{}
}
