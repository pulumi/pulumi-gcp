// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package compute

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type GetRouterStatusBestRoutesForRouter struct {
	Description string `pulumi:"description"`
	DestRange   string `pulumi:"destRange"`
	// The name of the router.
	Name string `pulumi:"name"`
	// The network name or resource link to the parent
	// network of this subnetwork.
	Network             string `pulumi:"network"`
	NextHopGateway      string `pulumi:"nextHopGateway"`
	NextHopIlb          string `pulumi:"nextHopIlb"`
	NextHopInstance     string `pulumi:"nextHopInstance"`
	NextHopInstanceZone string `pulumi:"nextHopInstanceZone"`
	NextHopIp           string `pulumi:"nextHopIp"`
	NextHopNetwork      string `pulumi:"nextHopNetwork"`
	NextHopVpnTunnel    string `pulumi:"nextHopVpnTunnel"`
	Priority            int    `pulumi:"priority"`
	// The ID of the project in which the resource
	// belongs. If it is not provided, the provider project is used.
	Project  string   `pulumi:"project"`
	SelfLink string   `pulumi:"selfLink"`
	Tags     []string `pulumi:"tags"`
}

// GetRouterStatusBestRoutesForRouterInput is an input type that accepts GetRouterStatusBestRoutesForRouterArgs and GetRouterStatusBestRoutesForRouterOutput values.
// You can construct a concrete instance of `GetRouterStatusBestRoutesForRouterInput` via:
//
//	GetRouterStatusBestRoutesForRouterArgs{...}
type GetRouterStatusBestRoutesForRouterInput interface {
	pulumi.Input

	ToGetRouterStatusBestRoutesForRouterOutput() GetRouterStatusBestRoutesForRouterOutput
	ToGetRouterStatusBestRoutesForRouterOutputWithContext(context.Context) GetRouterStatusBestRoutesForRouterOutput
}

type GetRouterStatusBestRoutesForRouterArgs struct {
	Description pulumi.StringInput `pulumi:"description"`
	DestRange   pulumi.StringInput `pulumi:"destRange"`
	// The name of the router.
	Name pulumi.StringInput `pulumi:"name"`
	// The network name or resource link to the parent
	// network of this subnetwork.
	Network             pulumi.StringInput `pulumi:"network"`
	NextHopGateway      pulumi.StringInput `pulumi:"nextHopGateway"`
	NextHopIlb          pulumi.StringInput `pulumi:"nextHopIlb"`
	NextHopInstance     pulumi.StringInput `pulumi:"nextHopInstance"`
	NextHopInstanceZone pulumi.StringInput `pulumi:"nextHopInstanceZone"`
	NextHopIp           pulumi.StringInput `pulumi:"nextHopIp"`
	NextHopNetwork      pulumi.StringInput `pulumi:"nextHopNetwork"`
	NextHopVpnTunnel    pulumi.StringInput `pulumi:"nextHopVpnTunnel"`
	Priority            pulumi.IntInput    `pulumi:"priority"`
	// The ID of the project in which the resource
	// belongs. If it is not provided, the provider project is used.
	Project  pulumi.StringInput      `pulumi:"project"`
	SelfLink pulumi.StringInput      `pulumi:"selfLink"`
	Tags     pulumi.StringArrayInput `pulumi:"tags"`
}

func (GetRouterStatusBestRoutesForRouterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterStatusBestRoutesForRouter)(nil)).Elem()
}

func (i GetRouterStatusBestRoutesForRouterArgs) ToGetRouterStatusBestRoutesForRouterOutput() GetRouterStatusBestRoutesForRouterOutput {
	return i.ToGetRouterStatusBestRoutesForRouterOutputWithContext(context.Background())
}

func (i GetRouterStatusBestRoutesForRouterArgs) ToGetRouterStatusBestRoutesForRouterOutputWithContext(ctx context.Context) GetRouterStatusBestRoutesForRouterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterStatusBestRoutesForRouterOutput)
}

// GetRouterStatusBestRoutesForRouterArrayInput is an input type that accepts GetRouterStatusBestRoutesForRouterArray and GetRouterStatusBestRoutesForRouterArrayOutput values.
// You can construct a concrete instance of `GetRouterStatusBestRoutesForRouterArrayInput` via:
//
//	GetRouterStatusBestRoutesForRouterArray{ GetRouterStatusBestRoutesForRouterArgs{...} }
type GetRouterStatusBestRoutesForRouterArrayInput interface {
	pulumi.Input

	ToGetRouterStatusBestRoutesForRouterArrayOutput() GetRouterStatusBestRoutesForRouterArrayOutput
	ToGetRouterStatusBestRoutesForRouterArrayOutputWithContext(context.Context) GetRouterStatusBestRoutesForRouterArrayOutput
}

type GetRouterStatusBestRoutesForRouterArray []GetRouterStatusBestRoutesForRouterInput

func (GetRouterStatusBestRoutesForRouterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterStatusBestRoutesForRouter)(nil)).Elem()
}

func (i GetRouterStatusBestRoutesForRouterArray) ToGetRouterStatusBestRoutesForRouterArrayOutput() GetRouterStatusBestRoutesForRouterArrayOutput {
	return i.ToGetRouterStatusBestRoutesForRouterArrayOutputWithContext(context.Background())
}

func (i GetRouterStatusBestRoutesForRouterArray) ToGetRouterStatusBestRoutesForRouterArrayOutputWithContext(ctx context.Context) GetRouterStatusBestRoutesForRouterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterStatusBestRoutesForRouterArrayOutput)
}

type GetRouterStatusBestRoutesForRouterOutput struct{ *pulumi.OutputState }

func (GetRouterStatusBestRoutesForRouterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterStatusBestRoutesForRouter)(nil)).Elem()
}

func (o GetRouterStatusBestRoutesForRouterOutput) ToGetRouterStatusBestRoutesForRouterOutput() GetRouterStatusBestRoutesForRouterOutput {
	return o
}

func (o GetRouterStatusBestRoutesForRouterOutput) ToGetRouterStatusBestRoutesForRouterOutputWithContext(ctx context.Context) GetRouterStatusBestRoutesForRouterOutput {
	return o
}

func (o GetRouterStatusBestRoutesForRouterOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterStatusBestRoutesForRouter) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetRouterStatusBestRoutesForRouterOutput) DestRange() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterStatusBestRoutesForRouter) string { return v.DestRange }).(pulumi.StringOutput)
}

// The name of the router.
func (o GetRouterStatusBestRoutesForRouterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterStatusBestRoutesForRouter) string { return v.Name }).(pulumi.StringOutput)
}

// The network name or resource link to the parent
// network of this subnetwork.
func (o GetRouterStatusBestRoutesForRouterOutput) Network() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterStatusBestRoutesForRouter) string { return v.Network }).(pulumi.StringOutput)
}

func (o GetRouterStatusBestRoutesForRouterOutput) NextHopGateway() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterStatusBestRoutesForRouter) string { return v.NextHopGateway }).(pulumi.StringOutput)
}

func (o GetRouterStatusBestRoutesForRouterOutput) NextHopIlb() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterStatusBestRoutesForRouter) string { return v.NextHopIlb }).(pulumi.StringOutput)
}

func (o GetRouterStatusBestRoutesForRouterOutput) NextHopInstance() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterStatusBestRoutesForRouter) string { return v.NextHopInstance }).(pulumi.StringOutput)
}

func (o GetRouterStatusBestRoutesForRouterOutput) NextHopInstanceZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterStatusBestRoutesForRouter) string { return v.NextHopInstanceZone }).(pulumi.StringOutput)
}

func (o GetRouterStatusBestRoutesForRouterOutput) NextHopIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterStatusBestRoutesForRouter) string { return v.NextHopIp }).(pulumi.StringOutput)
}

func (o GetRouterStatusBestRoutesForRouterOutput) NextHopNetwork() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterStatusBestRoutesForRouter) string { return v.NextHopNetwork }).(pulumi.StringOutput)
}

func (o GetRouterStatusBestRoutesForRouterOutput) NextHopVpnTunnel() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterStatusBestRoutesForRouter) string { return v.NextHopVpnTunnel }).(pulumi.StringOutput)
}

func (o GetRouterStatusBestRoutesForRouterOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterStatusBestRoutesForRouter) int { return v.Priority }).(pulumi.IntOutput)
}

// The ID of the project in which the resource
// belongs. If it is not provided, the provider project is used.
func (o GetRouterStatusBestRoutesForRouterOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterStatusBestRoutesForRouter) string { return v.Project }).(pulumi.StringOutput)
}

func (o GetRouterStatusBestRoutesForRouterOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterStatusBestRoutesForRouter) string { return v.SelfLink }).(pulumi.StringOutput)
}

func (o GetRouterStatusBestRoutesForRouterOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRouterStatusBestRoutesForRouter) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

type GetRouterStatusBestRoutesForRouterArrayOutput struct{ *pulumi.OutputState }

func (GetRouterStatusBestRoutesForRouterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterStatusBestRoutesForRouter)(nil)).Elem()
}

func (o GetRouterStatusBestRoutesForRouterArrayOutput) ToGetRouterStatusBestRoutesForRouterArrayOutput() GetRouterStatusBestRoutesForRouterArrayOutput {
	return o
}

func (o GetRouterStatusBestRoutesForRouterArrayOutput) ToGetRouterStatusBestRoutesForRouterArrayOutputWithContext(ctx context.Context) GetRouterStatusBestRoutesForRouterArrayOutput {
	return o
}

func (o GetRouterStatusBestRoutesForRouterArrayOutput) Index(i pulumi.IntInput) GetRouterStatusBestRoutesForRouterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterStatusBestRoutesForRouter {
		return vs[0].([]GetRouterStatusBestRoutesForRouter)[vs[1].(int)]
	}).(GetRouterStatusBestRoutesForRouterOutput)
}

type GetSnapshotSnapshotEncryptionKey struct {
	KmsKeySelfLink       string `pulumi:"kmsKeySelfLink"`
	KmsKeyServiceAccount string `pulumi:"kmsKeyServiceAccount"`
	RawKey               string `pulumi:"rawKey"`
	Sha256               string `pulumi:"sha256"`
}

// GetSnapshotSnapshotEncryptionKeyInput is an input type that accepts GetSnapshotSnapshotEncryptionKeyArgs and GetSnapshotSnapshotEncryptionKeyOutput values.
// You can construct a concrete instance of `GetSnapshotSnapshotEncryptionKeyInput` via:
//
//	GetSnapshotSnapshotEncryptionKeyArgs{...}
type GetSnapshotSnapshotEncryptionKeyInput interface {
	pulumi.Input

	ToGetSnapshotSnapshotEncryptionKeyOutput() GetSnapshotSnapshotEncryptionKeyOutput
	ToGetSnapshotSnapshotEncryptionKeyOutputWithContext(context.Context) GetSnapshotSnapshotEncryptionKeyOutput
}

type GetSnapshotSnapshotEncryptionKeyArgs struct {
	KmsKeySelfLink       pulumi.StringInput `pulumi:"kmsKeySelfLink"`
	KmsKeyServiceAccount pulumi.StringInput `pulumi:"kmsKeyServiceAccount"`
	RawKey               pulumi.StringInput `pulumi:"rawKey"`
	Sha256               pulumi.StringInput `pulumi:"sha256"`
}

func (GetSnapshotSnapshotEncryptionKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSnapshotSnapshotEncryptionKey)(nil)).Elem()
}

func (i GetSnapshotSnapshotEncryptionKeyArgs) ToGetSnapshotSnapshotEncryptionKeyOutput() GetSnapshotSnapshotEncryptionKeyOutput {
	return i.ToGetSnapshotSnapshotEncryptionKeyOutputWithContext(context.Background())
}

func (i GetSnapshotSnapshotEncryptionKeyArgs) ToGetSnapshotSnapshotEncryptionKeyOutputWithContext(ctx context.Context) GetSnapshotSnapshotEncryptionKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSnapshotSnapshotEncryptionKeyOutput)
}

// GetSnapshotSnapshotEncryptionKeyArrayInput is an input type that accepts GetSnapshotSnapshotEncryptionKeyArray and GetSnapshotSnapshotEncryptionKeyArrayOutput values.
// You can construct a concrete instance of `GetSnapshotSnapshotEncryptionKeyArrayInput` via:
//
//	GetSnapshotSnapshotEncryptionKeyArray{ GetSnapshotSnapshotEncryptionKeyArgs{...} }
type GetSnapshotSnapshotEncryptionKeyArrayInput interface {
	pulumi.Input

	ToGetSnapshotSnapshotEncryptionKeyArrayOutput() GetSnapshotSnapshotEncryptionKeyArrayOutput
	ToGetSnapshotSnapshotEncryptionKeyArrayOutputWithContext(context.Context) GetSnapshotSnapshotEncryptionKeyArrayOutput
}

type GetSnapshotSnapshotEncryptionKeyArray []GetSnapshotSnapshotEncryptionKeyInput

func (GetSnapshotSnapshotEncryptionKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSnapshotSnapshotEncryptionKey)(nil)).Elem()
}

func (i GetSnapshotSnapshotEncryptionKeyArray) ToGetSnapshotSnapshotEncryptionKeyArrayOutput() GetSnapshotSnapshotEncryptionKeyArrayOutput {
	return i.ToGetSnapshotSnapshotEncryptionKeyArrayOutputWithContext(context.Background())
}

func (i GetSnapshotSnapshotEncryptionKeyArray) ToGetSnapshotSnapshotEncryptionKeyArrayOutputWithContext(ctx context.Context) GetSnapshotSnapshotEncryptionKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSnapshotSnapshotEncryptionKeyArrayOutput)
}

type GetSnapshotSnapshotEncryptionKeyOutput struct{ *pulumi.OutputState }

func (GetSnapshotSnapshotEncryptionKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSnapshotSnapshotEncryptionKey)(nil)).Elem()
}

func (o GetSnapshotSnapshotEncryptionKeyOutput) ToGetSnapshotSnapshotEncryptionKeyOutput() GetSnapshotSnapshotEncryptionKeyOutput {
	return o
}

func (o GetSnapshotSnapshotEncryptionKeyOutput) ToGetSnapshotSnapshotEncryptionKeyOutputWithContext(ctx context.Context) GetSnapshotSnapshotEncryptionKeyOutput {
	return o
}

func (o GetSnapshotSnapshotEncryptionKeyOutput) KmsKeySelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotSnapshotEncryptionKey) string { return v.KmsKeySelfLink }).(pulumi.StringOutput)
}

func (o GetSnapshotSnapshotEncryptionKeyOutput) KmsKeyServiceAccount() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotSnapshotEncryptionKey) string { return v.KmsKeyServiceAccount }).(pulumi.StringOutput)
}

func (o GetSnapshotSnapshotEncryptionKeyOutput) RawKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotSnapshotEncryptionKey) string { return v.RawKey }).(pulumi.StringOutput)
}

func (o GetSnapshotSnapshotEncryptionKeyOutput) Sha256() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotSnapshotEncryptionKey) string { return v.Sha256 }).(pulumi.StringOutput)
}

type GetSnapshotSnapshotEncryptionKeyArrayOutput struct{ *pulumi.OutputState }

func (GetSnapshotSnapshotEncryptionKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSnapshotSnapshotEncryptionKey)(nil)).Elem()
}

func (o GetSnapshotSnapshotEncryptionKeyArrayOutput) ToGetSnapshotSnapshotEncryptionKeyArrayOutput() GetSnapshotSnapshotEncryptionKeyArrayOutput {
	return o
}

func (o GetSnapshotSnapshotEncryptionKeyArrayOutput) ToGetSnapshotSnapshotEncryptionKeyArrayOutputWithContext(ctx context.Context) GetSnapshotSnapshotEncryptionKeyArrayOutput {
	return o
}

func (o GetSnapshotSnapshotEncryptionKeyArrayOutput) Index(i pulumi.IntInput) GetSnapshotSnapshotEncryptionKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSnapshotSnapshotEncryptionKey {
		return vs[0].([]GetSnapshotSnapshotEncryptionKey)[vs[1].(int)]
	}).(GetSnapshotSnapshotEncryptionKeyOutput)
}

type GetSnapshotSourceDiskEncryptionKey struct {
	KmsKeyServiceAccount string `pulumi:"kmsKeyServiceAccount"`
	RawKey               string `pulumi:"rawKey"`
}

// GetSnapshotSourceDiskEncryptionKeyInput is an input type that accepts GetSnapshotSourceDiskEncryptionKeyArgs and GetSnapshotSourceDiskEncryptionKeyOutput values.
// You can construct a concrete instance of `GetSnapshotSourceDiskEncryptionKeyInput` via:
//
//	GetSnapshotSourceDiskEncryptionKeyArgs{...}
type GetSnapshotSourceDiskEncryptionKeyInput interface {
	pulumi.Input

	ToGetSnapshotSourceDiskEncryptionKeyOutput() GetSnapshotSourceDiskEncryptionKeyOutput
	ToGetSnapshotSourceDiskEncryptionKeyOutputWithContext(context.Context) GetSnapshotSourceDiskEncryptionKeyOutput
}

type GetSnapshotSourceDiskEncryptionKeyArgs struct {
	KmsKeyServiceAccount pulumi.StringInput `pulumi:"kmsKeyServiceAccount"`
	RawKey               pulumi.StringInput `pulumi:"rawKey"`
}

func (GetSnapshotSourceDiskEncryptionKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSnapshotSourceDiskEncryptionKey)(nil)).Elem()
}

func (i GetSnapshotSourceDiskEncryptionKeyArgs) ToGetSnapshotSourceDiskEncryptionKeyOutput() GetSnapshotSourceDiskEncryptionKeyOutput {
	return i.ToGetSnapshotSourceDiskEncryptionKeyOutputWithContext(context.Background())
}

func (i GetSnapshotSourceDiskEncryptionKeyArgs) ToGetSnapshotSourceDiskEncryptionKeyOutputWithContext(ctx context.Context) GetSnapshotSourceDiskEncryptionKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSnapshotSourceDiskEncryptionKeyOutput)
}

// GetSnapshotSourceDiskEncryptionKeyArrayInput is an input type that accepts GetSnapshotSourceDiskEncryptionKeyArray and GetSnapshotSourceDiskEncryptionKeyArrayOutput values.
// You can construct a concrete instance of `GetSnapshotSourceDiskEncryptionKeyArrayInput` via:
//
//	GetSnapshotSourceDiskEncryptionKeyArray{ GetSnapshotSourceDiskEncryptionKeyArgs{...} }
type GetSnapshotSourceDiskEncryptionKeyArrayInput interface {
	pulumi.Input

	ToGetSnapshotSourceDiskEncryptionKeyArrayOutput() GetSnapshotSourceDiskEncryptionKeyArrayOutput
	ToGetSnapshotSourceDiskEncryptionKeyArrayOutputWithContext(context.Context) GetSnapshotSourceDiskEncryptionKeyArrayOutput
}

type GetSnapshotSourceDiskEncryptionKeyArray []GetSnapshotSourceDiskEncryptionKeyInput

func (GetSnapshotSourceDiskEncryptionKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSnapshotSourceDiskEncryptionKey)(nil)).Elem()
}

func (i GetSnapshotSourceDiskEncryptionKeyArray) ToGetSnapshotSourceDiskEncryptionKeyArrayOutput() GetSnapshotSourceDiskEncryptionKeyArrayOutput {
	return i.ToGetSnapshotSourceDiskEncryptionKeyArrayOutputWithContext(context.Background())
}

func (i GetSnapshotSourceDiskEncryptionKeyArray) ToGetSnapshotSourceDiskEncryptionKeyArrayOutputWithContext(ctx context.Context) GetSnapshotSourceDiskEncryptionKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSnapshotSourceDiskEncryptionKeyArrayOutput)
}

type GetSnapshotSourceDiskEncryptionKeyOutput struct{ *pulumi.OutputState }

func (GetSnapshotSourceDiskEncryptionKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSnapshotSourceDiskEncryptionKey)(nil)).Elem()
}

func (o GetSnapshotSourceDiskEncryptionKeyOutput) ToGetSnapshotSourceDiskEncryptionKeyOutput() GetSnapshotSourceDiskEncryptionKeyOutput {
	return o
}

func (o GetSnapshotSourceDiskEncryptionKeyOutput) ToGetSnapshotSourceDiskEncryptionKeyOutputWithContext(ctx context.Context) GetSnapshotSourceDiskEncryptionKeyOutput {
	return o
}

func (o GetSnapshotSourceDiskEncryptionKeyOutput) KmsKeyServiceAccount() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotSourceDiskEncryptionKey) string { return v.KmsKeyServiceAccount }).(pulumi.StringOutput)
}

func (o GetSnapshotSourceDiskEncryptionKeyOutput) RawKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotSourceDiskEncryptionKey) string { return v.RawKey }).(pulumi.StringOutput)
}

type GetSnapshotSourceDiskEncryptionKeyArrayOutput struct{ *pulumi.OutputState }

func (GetSnapshotSourceDiskEncryptionKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSnapshotSourceDiskEncryptionKey)(nil)).Elem()
}

func (o GetSnapshotSourceDiskEncryptionKeyArrayOutput) ToGetSnapshotSourceDiskEncryptionKeyArrayOutput() GetSnapshotSourceDiskEncryptionKeyArrayOutput {
	return o
}

func (o GetSnapshotSourceDiskEncryptionKeyArrayOutput) ToGetSnapshotSourceDiskEncryptionKeyArrayOutputWithContext(ctx context.Context) GetSnapshotSourceDiskEncryptionKeyArrayOutput {
	return o
}

func (o GetSnapshotSourceDiskEncryptionKeyArrayOutput) Index(i pulumi.IntInput) GetSnapshotSourceDiskEncryptionKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSnapshotSourceDiskEncryptionKey {
		return vs[0].([]GetSnapshotSourceDiskEncryptionKey)[vs[1].(int)]
	}).(GetSnapshotSourceDiskEncryptionKeyOutput)
}

type GetSubnetworkSecondaryIpRange struct {
	// The range of IP addresses belonging to this subnetwork
	// secondary range.
	IpCidrRange string `pulumi:"ipCidrRange"`
	// The name associated with this subnetwork secondary range, used
	// when adding an alias IP range to a VM instance.
	RangeName string `pulumi:"rangeName"`
}

// GetSubnetworkSecondaryIpRangeInput is an input type that accepts GetSubnetworkSecondaryIpRangeArgs and GetSubnetworkSecondaryIpRangeOutput values.
// You can construct a concrete instance of `GetSubnetworkSecondaryIpRangeInput` via:
//
//	GetSubnetworkSecondaryIpRangeArgs{...}
type GetSubnetworkSecondaryIpRangeInput interface {
	pulumi.Input

	ToGetSubnetworkSecondaryIpRangeOutput() GetSubnetworkSecondaryIpRangeOutput
	ToGetSubnetworkSecondaryIpRangeOutputWithContext(context.Context) GetSubnetworkSecondaryIpRangeOutput
}

type GetSubnetworkSecondaryIpRangeArgs struct {
	// The range of IP addresses belonging to this subnetwork
	// secondary range.
	IpCidrRange pulumi.StringInput `pulumi:"ipCidrRange"`
	// The name associated with this subnetwork secondary range, used
	// when adding an alias IP range to a VM instance.
	RangeName pulumi.StringInput `pulumi:"rangeName"`
}

func (GetSubnetworkSecondaryIpRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubnetworkSecondaryIpRange)(nil)).Elem()
}

func (i GetSubnetworkSecondaryIpRangeArgs) ToGetSubnetworkSecondaryIpRangeOutput() GetSubnetworkSecondaryIpRangeOutput {
	return i.ToGetSubnetworkSecondaryIpRangeOutputWithContext(context.Background())
}

func (i GetSubnetworkSecondaryIpRangeArgs) ToGetSubnetworkSecondaryIpRangeOutputWithContext(ctx context.Context) GetSubnetworkSecondaryIpRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubnetworkSecondaryIpRangeOutput)
}

// GetSubnetworkSecondaryIpRangeArrayInput is an input type that accepts GetSubnetworkSecondaryIpRangeArray and GetSubnetworkSecondaryIpRangeArrayOutput values.
// You can construct a concrete instance of `GetSubnetworkSecondaryIpRangeArrayInput` via:
//
//	GetSubnetworkSecondaryIpRangeArray{ GetSubnetworkSecondaryIpRangeArgs{...} }
type GetSubnetworkSecondaryIpRangeArrayInput interface {
	pulumi.Input

	ToGetSubnetworkSecondaryIpRangeArrayOutput() GetSubnetworkSecondaryIpRangeArrayOutput
	ToGetSubnetworkSecondaryIpRangeArrayOutputWithContext(context.Context) GetSubnetworkSecondaryIpRangeArrayOutput
}

type GetSubnetworkSecondaryIpRangeArray []GetSubnetworkSecondaryIpRangeInput

func (GetSubnetworkSecondaryIpRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubnetworkSecondaryIpRange)(nil)).Elem()
}

func (i GetSubnetworkSecondaryIpRangeArray) ToGetSubnetworkSecondaryIpRangeArrayOutput() GetSubnetworkSecondaryIpRangeArrayOutput {
	return i.ToGetSubnetworkSecondaryIpRangeArrayOutputWithContext(context.Background())
}

func (i GetSubnetworkSecondaryIpRangeArray) ToGetSubnetworkSecondaryIpRangeArrayOutputWithContext(ctx context.Context) GetSubnetworkSecondaryIpRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubnetworkSecondaryIpRangeArrayOutput)
}

type GetSubnetworkSecondaryIpRangeOutput struct{ *pulumi.OutputState }

func (GetSubnetworkSecondaryIpRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubnetworkSecondaryIpRange)(nil)).Elem()
}

func (o GetSubnetworkSecondaryIpRangeOutput) ToGetSubnetworkSecondaryIpRangeOutput() GetSubnetworkSecondaryIpRangeOutput {
	return o
}

func (o GetSubnetworkSecondaryIpRangeOutput) ToGetSubnetworkSecondaryIpRangeOutputWithContext(ctx context.Context) GetSubnetworkSecondaryIpRangeOutput {
	return o
}

// The range of IP addresses belonging to this subnetwork
// secondary range.
func (o GetSubnetworkSecondaryIpRangeOutput) IpCidrRange() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubnetworkSecondaryIpRange) string { return v.IpCidrRange }).(pulumi.StringOutput)
}

// The name associated with this subnetwork secondary range, used
// when adding an alias IP range to a VM instance.
func (o GetSubnetworkSecondaryIpRangeOutput) RangeName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubnetworkSecondaryIpRange) string { return v.RangeName }).(pulumi.StringOutput)
}

type GetSubnetworkSecondaryIpRangeArrayOutput struct{ *pulumi.OutputState }

func (GetSubnetworkSecondaryIpRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubnetworkSecondaryIpRange)(nil)).Elem()
}

func (o GetSubnetworkSecondaryIpRangeArrayOutput) ToGetSubnetworkSecondaryIpRangeArrayOutput() GetSubnetworkSecondaryIpRangeArrayOutput {
	return o
}

func (o GetSubnetworkSecondaryIpRangeArrayOutput) ToGetSubnetworkSecondaryIpRangeArrayOutputWithContext(ctx context.Context) GetSubnetworkSecondaryIpRangeArrayOutput {
	return o
}

func (o GetSubnetworkSecondaryIpRangeArrayOutput) Index(i pulumi.IntInput) GetSubnetworkSecondaryIpRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSubnetworkSecondaryIpRange {
		return vs[0].([]GetSubnetworkSecondaryIpRange)[vs[1].(int)]
	}).(GetSubnetworkSecondaryIpRangeOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterStatusBestRoutesForRouterInput)(nil)).Elem(), GetRouterStatusBestRoutesForRouterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterStatusBestRoutesForRouterArrayInput)(nil)).Elem(), GetRouterStatusBestRoutesForRouterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSnapshotSnapshotEncryptionKeyInput)(nil)).Elem(), GetSnapshotSnapshotEncryptionKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSnapshotSnapshotEncryptionKeyArrayInput)(nil)).Elem(), GetSnapshotSnapshotEncryptionKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSnapshotSourceDiskEncryptionKeyInput)(nil)).Elem(), GetSnapshotSourceDiskEncryptionKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSnapshotSourceDiskEncryptionKeyArrayInput)(nil)).Elem(), GetSnapshotSourceDiskEncryptionKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubnetworkSecondaryIpRangeInput)(nil)).Elem(), GetSubnetworkSecondaryIpRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubnetworkSecondaryIpRangeArrayInput)(nil)).Elem(), GetSubnetworkSecondaryIpRangeArray{})
	pulumi.RegisterOutputType(GetRouterStatusBestRoutesForRouterOutput{})
	pulumi.RegisterOutputType(GetRouterStatusBestRoutesForRouterArrayOutput{})
	pulumi.RegisterOutputType(GetSnapshotSnapshotEncryptionKeyOutput{})
	pulumi.RegisterOutputType(GetSnapshotSnapshotEncryptionKeyArrayOutput{})
	pulumi.RegisterOutputType(GetSnapshotSourceDiskEncryptionKeyOutput{})
	pulumi.RegisterOutputType(GetSnapshotSourceDiskEncryptionKeyArrayOutput{})
	pulumi.RegisterOutputType(GetSubnetworkSecondaryIpRangeOutput{})
	pulumi.RegisterOutputType(GetSubnetworkSecondaryIpRangeArrayOutput{})
}
