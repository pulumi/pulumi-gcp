// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package compute

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type GetSubnetworkSecondaryIpRange struct {
	// The range of IP addresses belonging to this subnetwork
	// secondary range.
	IpCidrRange string `pulumi:"ipCidrRange"`
	// The name associated with this subnetwork secondary range, used
	// when adding an alias IP range to a VM instance.
	RangeName string `pulumi:"rangeName"`
}

// GetSubnetworkSecondaryIpRangeInput is an input type that accepts GetSubnetworkSecondaryIpRangeArgs and GetSubnetworkSecondaryIpRangeOutput values.
// You can construct a concrete instance of `GetSubnetworkSecondaryIpRangeInput` via:
//
//	GetSubnetworkSecondaryIpRangeArgs{...}
type GetSubnetworkSecondaryIpRangeInput interface {
	pulumi.Input

	ToGetSubnetworkSecondaryIpRangeOutput() GetSubnetworkSecondaryIpRangeOutput
	ToGetSubnetworkSecondaryIpRangeOutputWithContext(context.Context) GetSubnetworkSecondaryIpRangeOutput
}

type GetSubnetworkSecondaryIpRangeArgs struct {
	// The range of IP addresses belonging to this subnetwork
	// secondary range.
	IpCidrRange pulumi.StringInput `pulumi:"ipCidrRange"`
	// The name associated with this subnetwork secondary range, used
	// when adding an alias IP range to a VM instance.
	RangeName pulumi.StringInput `pulumi:"rangeName"`
}

func (GetSubnetworkSecondaryIpRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubnetworkSecondaryIpRange)(nil)).Elem()
}

func (i GetSubnetworkSecondaryIpRangeArgs) ToGetSubnetworkSecondaryIpRangeOutput() GetSubnetworkSecondaryIpRangeOutput {
	return i.ToGetSubnetworkSecondaryIpRangeOutputWithContext(context.Background())
}

func (i GetSubnetworkSecondaryIpRangeArgs) ToGetSubnetworkSecondaryIpRangeOutputWithContext(ctx context.Context) GetSubnetworkSecondaryIpRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubnetworkSecondaryIpRangeOutput)
}

// GetSubnetworkSecondaryIpRangeArrayInput is an input type that accepts GetSubnetworkSecondaryIpRangeArray and GetSubnetworkSecondaryIpRangeArrayOutput values.
// You can construct a concrete instance of `GetSubnetworkSecondaryIpRangeArrayInput` via:
//
//	GetSubnetworkSecondaryIpRangeArray{ GetSubnetworkSecondaryIpRangeArgs{...} }
type GetSubnetworkSecondaryIpRangeArrayInput interface {
	pulumi.Input

	ToGetSubnetworkSecondaryIpRangeArrayOutput() GetSubnetworkSecondaryIpRangeArrayOutput
	ToGetSubnetworkSecondaryIpRangeArrayOutputWithContext(context.Context) GetSubnetworkSecondaryIpRangeArrayOutput
}

type GetSubnetworkSecondaryIpRangeArray []GetSubnetworkSecondaryIpRangeInput

func (GetSubnetworkSecondaryIpRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubnetworkSecondaryIpRange)(nil)).Elem()
}

func (i GetSubnetworkSecondaryIpRangeArray) ToGetSubnetworkSecondaryIpRangeArrayOutput() GetSubnetworkSecondaryIpRangeArrayOutput {
	return i.ToGetSubnetworkSecondaryIpRangeArrayOutputWithContext(context.Background())
}

func (i GetSubnetworkSecondaryIpRangeArray) ToGetSubnetworkSecondaryIpRangeArrayOutputWithContext(ctx context.Context) GetSubnetworkSecondaryIpRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubnetworkSecondaryIpRangeArrayOutput)
}

type GetSubnetworkSecondaryIpRangeOutput struct{ *pulumi.OutputState }

func (GetSubnetworkSecondaryIpRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubnetworkSecondaryIpRange)(nil)).Elem()
}

func (o GetSubnetworkSecondaryIpRangeOutput) ToGetSubnetworkSecondaryIpRangeOutput() GetSubnetworkSecondaryIpRangeOutput {
	return o
}

func (o GetSubnetworkSecondaryIpRangeOutput) ToGetSubnetworkSecondaryIpRangeOutputWithContext(ctx context.Context) GetSubnetworkSecondaryIpRangeOutput {
	return o
}

// The range of IP addresses belonging to this subnetwork
// secondary range.
func (o GetSubnetworkSecondaryIpRangeOutput) IpCidrRange() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubnetworkSecondaryIpRange) string { return v.IpCidrRange }).(pulumi.StringOutput)
}

// The name associated with this subnetwork secondary range, used
// when adding an alias IP range to a VM instance.
func (o GetSubnetworkSecondaryIpRangeOutput) RangeName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubnetworkSecondaryIpRange) string { return v.RangeName }).(pulumi.StringOutput)
}

type GetSubnetworkSecondaryIpRangeArrayOutput struct{ *pulumi.OutputState }

func (GetSubnetworkSecondaryIpRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubnetworkSecondaryIpRange)(nil)).Elem()
}

func (o GetSubnetworkSecondaryIpRangeArrayOutput) ToGetSubnetworkSecondaryIpRangeArrayOutput() GetSubnetworkSecondaryIpRangeArrayOutput {
	return o
}

func (o GetSubnetworkSecondaryIpRangeArrayOutput) ToGetSubnetworkSecondaryIpRangeArrayOutputWithContext(ctx context.Context) GetSubnetworkSecondaryIpRangeArrayOutput {
	return o
}

func (o GetSubnetworkSecondaryIpRangeArrayOutput) Index(i pulumi.IntInput) GetSubnetworkSecondaryIpRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSubnetworkSecondaryIpRange {
		return vs[0].([]GetSubnetworkSecondaryIpRange)[vs[1].(int)]
	}).(GetSubnetworkSecondaryIpRangeOutput)
}

type GetSubnetworksSubnetwork struct {
	// Description of the subnetwork.
	Description string `pulumi:"description"`
	// The IP address range represented as a CIDR block.
	IpCidrRange string `pulumi:"ipCidrRange"`
	// The name of the subnetwork.
	Name string `pulumi:"name"`
	// The self link of the parent network.
	Network         string `pulumi:"network"`
	NetworkSelfLink string `pulumi:"networkSelfLink"`
	// Whether the VMs in the subnet can access Google services without assigned external IP addresses.
	PrivateIpGoogleAccess bool `pulumi:"privateIpGoogleAccess"`
	// The self link of the subnetwork.
	SelfLink string `pulumi:"selfLink"`
}

// GetSubnetworksSubnetworkInput is an input type that accepts GetSubnetworksSubnetworkArgs and GetSubnetworksSubnetworkOutput values.
// You can construct a concrete instance of `GetSubnetworksSubnetworkInput` via:
//
//	GetSubnetworksSubnetworkArgs{...}
type GetSubnetworksSubnetworkInput interface {
	pulumi.Input

	ToGetSubnetworksSubnetworkOutput() GetSubnetworksSubnetworkOutput
	ToGetSubnetworksSubnetworkOutputWithContext(context.Context) GetSubnetworksSubnetworkOutput
}

type GetSubnetworksSubnetworkArgs struct {
	// Description of the subnetwork.
	Description pulumi.StringInput `pulumi:"description"`
	// The IP address range represented as a CIDR block.
	IpCidrRange pulumi.StringInput `pulumi:"ipCidrRange"`
	// The name of the subnetwork.
	Name pulumi.StringInput `pulumi:"name"`
	// The self link of the parent network.
	Network         pulumi.StringInput `pulumi:"network"`
	NetworkSelfLink pulumi.StringInput `pulumi:"networkSelfLink"`
	// Whether the VMs in the subnet can access Google services without assigned external IP addresses.
	PrivateIpGoogleAccess pulumi.BoolInput `pulumi:"privateIpGoogleAccess"`
	// The self link of the subnetwork.
	SelfLink pulumi.StringInput `pulumi:"selfLink"`
}

func (GetSubnetworksSubnetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubnetworksSubnetwork)(nil)).Elem()
}

func (i GetSubnetworksSubnetworkArgs) ToGetSubnetworksSubnetworkOutput() GetSubnetworksSubnetworkOutput {
	return i.ToGetSubnetworksSubnetworkOutputWithContext(context.Background())
}

func (i GetSubnetworksSubnetworkArgs) ToGetSubnetworksSubnetworkOutputWithContext(ctx context.Context) GetSubnetworksSubnetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubnetworksSubnetworkOutput)
}

// GetSubnetworksSubnetworkArrayInput is an input type that accepts GetSubnetworksSubnetworkArray and GetSubnetworksSubnetworkArrayOutput values.
// You can construct a concrete instance of `GetSubnetworksSubnetworkArrayInput` via:
//
//	GetSubnetworksSubnetworkArray{ GetSubnetworksSubnetworkArgs{...} }
type GetSubnetworksSubnetworkArrayInput interface {
	pulumi.Input

	ToGetSubnetworksSubnetworkArrayOutput() GetSubnetworksSubnetworkArrayOutput
	ToGetSubnetworksSubnetworkArrayOutputWithContext(context.Context) GetSubnetworksSubnetworkArrayOutput
}

type GetSubnetworksSubnetworkArray []GetSubnetworksSubnetworkInput

func (GetSubnetworksSubnetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubnetworksSubnetwork)(nil)).Elem()
}

func (i GetSubnetworksSubnetworkArray) ToGetSubnetworksSubnetworkArrayOutput() GetSubnetworksSubnetworkArrayOutput {
	return i.ToGetSubnetworksSubnetworkArrayOutputWithContext(context.Background())
}

func (i GetSubnetworksSubnetworkArray) ToGetSubnetworksSubnetworkArrayOutputWithContext(ctx context.Context) GetSubnetworksSubnetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubnetworksSubnetworkArrayOutput)
}

type GetSubnetworksSubnetworkOutput struct{ *pulumi.OutputState }

func (GetSubnetworksSubnetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubnetworksSubnetwork)(nil)).Elem()
}

func (o GetSubnetworksSubnetworkOutput) ToGetSubnetworksSubnetworkOutput() GetSubnetworksSubnetworkOutput {
	return o
}

func (o GetSubnetworksSubnetworkOutput) ToGetSubnetworksSubnetworkOutputWithContext(ctx context.Context) GetSubnetworksSubnetworkOutput {
	return o
}

// Description of the subnetwork.
func (o GetSubnetworksSubnetworkOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubnetworksSubnetwork) string { return v.Description }).(pulumi.StringOutput)
}

// The IP address range represented as a CIDR block.
func (o GetSubnetworksSubnetworkOutput) IpCidrRange() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubnetworksSubnetwork) string { return v.IpCidrRange }).(pulumi.StringOutput)
}

// The name of the subnetwork.
func (o GetSubnetworksSubnetworkOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubnetworksSubnetwork) string { return v.Name }).(pulumi.StringOutput)
}

// The self link of the parent network.
func (o GetSubnetworksSubnetworkOutput) Network() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubnetworksSubnetwork) string { return v.Network }).(pulumi.StringOutput)
}

func (o GetSubnetworksSubnetworkOutput) NetworkSelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubnetworksSubnetwork) string { return v.NetworkSelfLink }).(pulumi.StringOutput)
}

// Whether the VMs in the subnet can access Google services without assigned external IP addresses.
func (o GetSubnetworksSubnetworkOutput) PrivateIpGoogleAccess() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSubnetworksSubnetwork) bool { return v.PrivateIpGoogleAccess }).(pulumi.BoolOutput)
}

// The self link of the subnetwork.
func (o GetSubnetworksSubnetworkOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubnetworksSubnetwork) string { return v.SelfLink }).(pulumi.StringOutput)
}

type GetSubnetworksSubnetworkArrayOutput struct{ *pulumi.OutputState }

func (GetSubnetworksSubnetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubnetworksSubnetwork)(nil)).Elem()
}

func (o GetSubnetworksSubnetworkArrayOutput) ToGetSubnetworksSubnetworkArrayOutput() GetSubnetworksSubnetworkArrayOutput {
	return o
}

func (o GetSubnetworksSubnetworkArrayOutput) ToGetSubnetworksSubnetworkArrayOutputWithContext(ctx context.Context) GetSubnetworksSubnetworkArrayOutput {
	return o
}

func (o GetSubnetworksSubnetworkArrayOutput) Index(i pulumi.IntInput) GetSubnetworksSubnetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSubnetworksSubnetwork {
		return vs[0].([]GetSubnetworksSubnetwork)[vs[1].(int)]
	}).(GetSubnetworksSubnetworkOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubnetworkSecondaryIpRangeInput)(nil)).Elem(), GetSubnetworkSecondaryIpRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubnetworkSecondaryIpRangeArrayInput)(nil)).Elem(), GetSubnetworkSecondaryIpRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubnetworksSubnetworkInput)(nil)).Elem(), GetSubnetworksSubnetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubnetworksSubnetworkArrayInput)(nil)).Elem(), GetSubnetworksSubnetworkArray{})
	pulumi.RegisterOutputType(GetSubnetworkSecondaryIpRangeOutput{})
	pulumi.RegisterOutputType(GetSubnetworkSecondaryIpRangeArrayOutput{})
	pulumi.RegisterOutputType(GetSubnetworksSubnetworkOutput{})
	pulumi.RegisterOutputType(GetSubnetworksSubnetworkArrayOutput{})
}
