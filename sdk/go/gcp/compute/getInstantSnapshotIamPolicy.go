// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package compute

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves the current IAM policy data for instantsnapshot
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/compute"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := compute.LookupInstantSnapshotIamPolicy(ctx, &compute.LookupInstantSnapshotIamPolicyArgs{
//				Project: pulumi.StringRef(_default.Project),
//				Zone:    pulumi.StringRef(_default.Zone),
//				Name:    _default.Name,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupInstantSnapshotIamPolicy(ctx *pulumi.Context, args *LookupInstantSnapshotIamPolicyArgs, opts ...pulumi.InvokeOption) (*LookupInstantSnapshotIamPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupInstantSnapshotIamPolicyResult
	err := ctx.Invoke("gcp:compute/getInstantSnapshotIamPolicy:getInstantSnapshotIamPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getInstantSnapshotIamPolicy.
type LookupInstantSnapshotIamPolicyArgs struct {
	// Used to find the parent resource to bind the IAM policy to
	Name string `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project *string `pulumi:"project"`
	// A reference to the zone where the disk is located. Used to find the parent resource to bind the IAM policy to. If not specified,
	// the value will be parsed from the identifier of the parent resource. If no zone is provided in the parent identifier and no
	// zone is specified, it is taken from the provider configuration.
	Zone *string `pulumi:"zone"`
}

// A collection of values returned by getInstantSnapshotIamPolicy.
type LookupInstantSnapshotIamPolicyResult struct {
	// (Computed) The etag of the IAM policy.
	Etag string `pulumi:"etag"`
	// The provider-assigned unique ID for this managed resource.
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
	// (Required only by `compute.InstantSnapshotIamPolicy`) The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData string `pulumi:"policyData"`
	Project    string `pulumi:"project"`
	Zone       string `pulumi:"zone"`
}

func LookupInstantSnapshotIamPolicyOutput(ctx *pulumi.Context, args LookupInstantSnapshotIamPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupInstantSnapshotIamPolicyResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupInstantSnapshotIamPolicyResultOutput, error) {
			args := v.(LookupInstantSnapshotIamPolicyArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("gcp:compute/getInstantSnapshotIamPolicy:getInstantSnapshotIamPolicy", args, LookupInstantSnapshotIamPolicyResultOutput{}, options).(LookupInstantSnapshotIamPolicyResultOutput), nil
		}).(LookupInstantSnapshotIamPolicyResultOutput)
}

// A collection of arguments for invoking getInstantSnapshotIamPolicy.
type LookupInstantSnapshotIamPolicyOutputArgs struct {
	// Used to find the parent resource to bind the IAM policy to
	Name pulumi.StringInput `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringPtrInput `pulumi:"project"`
	// A reference to the zone where the disk is located. Used to find the parent resource to bind the IAM policy to. If not specified,
	// the value will be parsed from the identifier of the parent resource. If no zone is provided in the parent identifier and no
	// zone is specified, it is taken from the provider configuration.
	Zone pulumi.StringPtrInput `pulumi:"zone"`
}

func (LookupInstantSnapshotIamPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupInstantSnapshotIamPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getInstantSnapshotIamPolicy.
type LookupInstantSnapshotIamPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupInstantSnapshotIamPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupInstantSnapshotIamPolicyResult)(nil)).Elem()
}

func (o LookupInstantSnapshotIamPolicyResultOutput) ToLookupInstantSnapshotIamPolicyResultOutput() LookupInstantSnapshotIamPolicyResultOutput {
	return o
}

func (o LookupInstantSnapshotIamPolicyResultOutput) ToLookupInstantSnapshotIamPolicyResultOutputWithContext(ctx context.Context) LookupInstantSnapshotIamPolicyResultOutput {
	return o
}

// (Computed) The etag of the IAM policy.
func (o LookupInstantSnapshotIamPolicyResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstantSnapshotIamPolicyResult) string { return v.Etag }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupInstantSnapshotIamPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstantSnapshotIamPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupInstantSnapshotIamPolicyResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstantSnapshotIamPolicyResult) string { return v.Name }).(pulumi.StringOutput)
}

// (Required only by `compute.InstantSnapshotIamPolicy`) The policy data generated by
// a `organizations.getIAMPolicy` data source.
func (o LookupInstantSnapshotIamPolicyResultOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstantSnapshotIamPolicyResult) string { return v.PolicyData }).(pulumi.StringOutput)
}

func (o LookupInstantSnapshotIamPolicyResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstantSnapshotIamPolicyResult) string { return v.Project }).(pulumi.StringOutput)
}

func (o LookupInstantSnapshotIamPolicyResultOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstantSnapshotIamPolicyResult) string { return v.Zone }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupInstantSnapshotIamPolicyResultOutput{})
}
