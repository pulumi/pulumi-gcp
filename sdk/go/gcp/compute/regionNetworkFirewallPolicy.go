// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package compute

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The Compute NetworkFirewallPolicy resource
//
// ## Example Usage
// ### Regional
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/compute"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := compute.NewRegionNetworkFirewallPolicy(ctx, "primary", &compute.RegionNetworkFirewallPolicyArgs{
//				Description: pulumi.String("Sample regional network firewall policy"),
//				Project:     pulumi.String("my-project-name"),
//				Region:      pulumi.String("us-west1"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// # NetworkFirewallPolicy can be imported using any of these accepted formats
//
// ```sh
//
//	$ pulumi import gcp:compute/regionNetworkFirewallPolicy:RegionNetworkFirewallPolicy default projects/{{project}}/regions/{{region}}/firewallPolicies/{{name}}
//
// ```
//
// ```sh
//
//	$ pulumi import gcp:compute/regionNetworkFirewallPolicy:RegionNetworkFirewallPolicy default {{project}}/{{region}}/{{name}}
//
// ```
//
// ```sh
//
//	$ pulumi import gcp:compute/regionNetworkFirewallPolicy:RegionNetworkFirewallPolicy default {{region}}/{{name}}
//
// ```
//
// ```sh
//
//	$ pulumi import gcp:compute/regionNetworkFirewallPolicy:RegionNetworkFirewallPolicy default {{name}}
//
// ```
type RegionNetworkFirewallPolicy struct {
	pulumi.CustomResourceState

	// Creation timestamp in RFC3339 text format.
	CreationTimestamp pulumi.StringOutput `pulumi:"creationTimestamp"`
	// An optional description of this resource. Provide this property when you create the resource.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Fingerprint of the resource. This field is used internally during updates of this resource.
	Fingerprint pulumi.StringOutput `pulumi:"fingerprint"`
	// User-provided name of the Network firewall policy. The name should be unique in the project in which the firewall policy is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression a-z? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
	//
	// ***
	Name pulumi.StringOutput `pulumi:"name"`
	// The project for the resource
	Project pulumi.StringOutput `pulumi:"project"`
	// The location of this resource.
	Region pulumi.StringOutput `pulumi:"region"`
	// The unique identifier for the resource. This identifier is defined by the server.
	RegionNetworkFirewallPolicyId pulumi.StringOutput `pulumi:"regionNetworkFirewallPolicyId"`
	// Total count of all firewall policy rule tuples. A firewall policy can not exceed a set number of tuples.
	RuleTupleCount pulumi.IntOutput `pulumi:"ruleTupleCount"`
	// Server-defined URL for the resource.
	SelfLink pulumi.StringOutput `pulumi:"selfLink"`
	// Server-defined URL for this resource with the resource id.
	SelfLinkWithId pulumi.StringOutput `pulumi:"selfLinkWithId"`
}

// NewRegionNetworkFirewallPolicy registers a new resource with the given unique name, arguments, and options.
func NewRegionNetworkFirewallPolicy(ctx *pulumi.Context,
	name string, args *RegionNetworkFirewallPolicyArgs, opts ...pulumi.ResourceOption) (*RegionNetworkFirewallPolicy, error) {
	if args == nil {
		args = &RegionNetworkFirewallPolicyArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RegionNetworkFirewallPolicy
	err := ctx.RegisterResource("gcp:compute/regionNetworkFirewallPolicy:RegionNetworkFirewallPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRegionNetworkFirewallPolicy gets an existing RegionNetworkFirewallPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRegionNetworkFirewallPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RegionNetworkFirewallPolicyState, opts ...pulumi.ResourceOption) (*RegionNetworkFirewallPolicy, error) {
	var resource RegionNetworkFirewallPolicy
	err := ctx.ReadResource("gcp:compute/regionNetworkFirewallPolicy:RegionNetworkFirewallPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RegionNetworkFirewallPolicy resources.
type regionNetworkFirewallPolicyState struct {
	// Creation timestamp in RFC3339 text format.
	CreationTimestamp *string `pulumi:"creationTimestamp"`
	// An optional description of this resource. Provide this property when you create the resource.
	Description *string `pulumi:"description"`
	// Fingerprint of the resource. This field is used internally during updates of this resource.
	Fingerprint *string `pulumi:"fingerprint"`
	// User-provided name of the Network firewall policy. The name should be unique in the project in which the firewall policy is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression a-z? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
	//
	// ***
	Name *string `pulumi:"name"`
	// The project for the resource
	Project *string `pulumi:"project"`
	// The location of this resource.
	Region *string `pulumi:"region"`
	// The unique identifier for the resource. This identifier is defined by the server.
	RegionNetworkFirewallPolicyId *string `pulumi:"regionNetworkFirewallPolicyId"`
	// Total count of all firewall policy rule tuples. A firewall policy can not exceed a set number of tuples.
	RuleTupleCount *int `pulumi:"ruleTupleCount"`
	// Server-defined URL for the resource.
	SelfLink *string `pulumi:"selfLink"`
	// Server-defined URL for this resource with the resource id.
	SelfLinkWithId *string `pulumi:"selfLinkWithId"`
}

type RegionNetworkFirewallPolicyState struct {
	// Creation timestamp in RFC3339 text format.
	CreationTimestamp pulumi.StringPtrInput
	// An optional description of this resource. Provide this property when you create the resource.
	Description pulumi.StringPtrInput
	// Fingerprint of the resource. This field is used internally during updates of this resource.
	Fingerprint pulumi.StringPtrInput
	// User-provided name of the Network firewall policy. The name should be unique in the project in which the firewall policy is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression a-z? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
	//
	// ***
	Name pulumi.StringPtrInput
	// The project for the resource
	Project pulumi.StringPtrInput
	// The location of this resource.
	Region pulumi.StringPtrInput
	// The unique identifier for the resource. This identifier is defined by the server.
	RegionNetworkFirewallPolicyId pulumi.StringPtrInput
	// Total count of all firewall policy rule tuples. A firewall policy can not exceed a set number of tuples.
	RuleTupleCount pulumi.IntPtrInput
	// Server-defined URL for the resource.
	SelfLink pulumi.StringPtrInput
	// Server-defined URL for this resource with the resource id.
	SelfLinkWithId pulumi.StringPtrInput
}

func (RegionNetworkFirewallPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*regionNetworkFirewallPolicyState)(nil)).Elem()
}

type regionNetworkFirewallPolicyArgs struct {
	// An optional description of this resource. Provide this property when you create the resource.
	Description *string `pulumi:"description"`
	// User-provided name of the Network firewall policy. The name should be unique in the project in which the firewall policy is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression a-z? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
	//
	// ***
	Name *string `pulumi:"name"`
	// The project for the resource
	Project *string `pulumi:"project"`
	// The location of this resource.
	Region *string `pulumi:"region"`
}

// The set of arguments for constructing a RegionNetworkFirewallPolicy resource.
type RegionNetworkFirewallPolicyArgs struct {
	// An optional description of this resource. Provide this property when you create the resource.
	Description pulumi.StringPtrInput
	// User-provided name of the Network firewall policy. The name should be unique in the project in which the firewall policy is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression a-z? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
	//
	// ***
	Name pulumi.StringPtrInput
	// The project for the resource
	Project pulumi.StringPtrInput
	// The location of this resource.
	Region pulumi.StringPtrInput
}

func (RegionNetworkFirewallPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*regionNetworkFirewallPolicyArgs)(nil)).Elem()
}

type RegionNetworkFirewallPolicyInput interface {
	pulumi.Input

	ToRegionNetworkFirewallPolicyOutput() RegionNetworkFirewallPolicyOutput
	ToRegionNetworkFirewallPolicyOutputWithContext(ctx context.Context) RegionNetworkFirewallPolicyOutput
}

func (*RegionNetworkFirewallPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**RegionNetworkFirewallPolicy)(nil)).Elem()
}

func (i *RegionNetworkFirewallPolicy) ToRegionNetworkFirewallPolicyOutput() RegionNetworkFirewallPolicyOutput {
	return i.ToRegionNetworkFirewallPolicyOutputWithContext(context.Background())
}

func (i *RegionNetworkFirewallPolicy) ToRegionNetworkFirewallPolicyOutputWithContext(ctx context.Context) RegionNetworkFirewallPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegionNetworkFirewallPolicyOutput)
}

// RegionNetworkFirewallPolicyArrayInput is an input type that accepts RegionNetworkFirewallPolicyArray and RegionNetworkFirewallPolicyArrayOutput values.
// You can construct a concrete instance of `RegionNetworkFirewallPolicyArrayInput` via:
//
//	RegionNetworkFirewallPolicyArray{ RegionNetworkFirewallPolicyArgs{...} }
type RegionNetworkFirewallPolicyArrayInput interface {
	pulumi.Input

	ToRegionNetworkFirewallPolicyArrayOutput() RegionNetworkFirewallPolicyArrayOutput
	ToRegionNetworkFirewallPolicyArrayOutputWithContext(context.Context) RegionNetworkFirewallPolicyArrayOutput
}

type RegionNetworkFirewallPolicyArray []RegionNetworkFirewallPolicyInput

func (RegionNetworkFirewallPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RegionNetworkFirewallPolicy)(nil)).Elem()
}

func (i RegionNetworkFirewallPolicyArray) ToRegionNetworkFirewallPolicyArrayOutput() RegionNetworkFirewallPolicyArrayOutput {
	return i.ToRegionNetworkFirewallPolicyArrayOutputWithContext(context.Background())
}

func (i RegionNetworkFirewallPolicyArray) ToRegionNetworkFirewallPolicyArrayOutputWithContext(ctx context.Context) RegionNetworkFirewallPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegionNetworkFirewallPolicyArrayOutput)
}

// RegionNetworkFirewallPolicyMapInput is an input type that accepts RegionNetworkFirewallPolicyMap and RegionNetworkFirewallPolicyMapOutput values.
// You can construct a concrete instance of `RegionNetworkFirewallPolicyMapInput` via:
//
//	RegionNetworkFirewallPolicyMap{ "key": RegionNetworkFirewallPolicyArgs{...} }
type RegionNetworkFirewallPolicyMapInput interface {
	pulumi.Input

	ToRegionNetworkFirewallPolicyMapOutput() RegionNetworkFirewallPolicyMapOutput
	ToRegionNetworkFirewallPolicyMapOutputWithContext(context.Context) RegionNetworkFirewallPolicyMapOutput
}

type RegionNetworkFirewallPolicyMap map[string]RegionNetworkFirewallPolicyInput

func (RegionNetworkFirewallPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RegionNetworkFirewallPolicy)(nil)).Elem()
}

func (i RegionNetworkFirewallPolicyMap) ToRegionNetworkFirewallPolicyMapOutput() RegionNetworkFirewallPolicyMapOutput {
	return i.ToRegionNetworkFirewallPolicyMapOutputWithContext(context.Background())
}

func (i RegionNetworkFirewallPolicyMap) ToRegionNetworkFirewallPolicyMapOutputWithContext(ctx context.Context) RegionNetworkFirewallPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegionNetworkFirewallPolicyMapOutput)
}

type RegionNetworkFirewallPolicyOutput struct{ *pulumi.OutputState }

func (RegionNetworkFirewallPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegionNetworkFirewallPolicy)(nil)).Elem()
}

func (o RegionNetworkFirewallPolicyOutput) ToRegionNetworkFirewallPolicyOutput() RegionNetworkFirewallPolicyOutput {
	return o
}

func (o RegionNetworkFirewallPolicyOutput) ToRegionNetworkFirewallPolicyOutputWithContext(ctx context.Context) RegionNetworkFirewallPolicyOutput {
	return o
}

// Creation timestamp in RFC3339 text format.
func (o RegionNetworkFirewallPolicyOutput) CreationTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v *RegionNetworkFirewallPolicy) pulumi.StringOutput { return v.CreationTimestamp }).(pulumi.StringOutput)
}

// An optional description of this resource. Provide this property when you create the resource.
func (o RegionNetworkFirewallPolicyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegionNetworkFirewallPolicy) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Fingerprint of the resource. This field is used internally during updates of this resource.
func (o RegionNetworkFirewallPolicyOutput) Fingerprint() pulumi.StringOutput {
	return o.ApplyT(func(v *RegionNetworkFirewallPolicy) pulumi.StringOutput { return v.Fingerprint }).(pulumi.StringOutput)
}

// User-provided name of the Network firewall policy. The name should be unique in the project in which the firewall policy is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression a-z? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
//
// ***
func (o RegionNetworkFirewallPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *RegionNetworkFirewallPolicy) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The project for the resource
func (o RegionNetworkFirewallPolicyOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *RegionNetworkFirewallPolicy) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The location of this resource.
func (o RegionNetworkFirewallPolicyOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *RegionNetworkFirewallPolicy) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// The unique identifier for the resource. This identifier is defined by the server.
func (o RegionNetworkFirewallPolicyOutput) RegionNetworkFirewallPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *RegionNetworkFirewallPolicy) pulumi.StringOutput { return v.RegionNetworkFirewallPolicyId }).(pulumi.StringOutput)
}

// Total count of all firewall policy rule tuples. A firewall policy can not exceed a set number of tuples.
func (o RegionNetworkFirewallPolicyOutput) RuleTupleCount() pulumi.IntOutput {
	return o.ApplyT(func(v *RegionNetworkFirewallPolicy) pulumi.IntOutput { return v.RuleTupleCount }).(pulumi.IntOutput)
}

// Server-defined URL for the resource.
func (o RegionNetworkFirewallPolicyOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v *RegionNetworkFirewallPolicy) pulumi.StringOutput { return v.SelfLink }).(pulumi.StringOutput)
}

// Server-defined URL for this resource with the resource id.
func (o RegionNetworkFirewallPolicyOutput) SelfLinkWithId() pulumi.StringOutput {
	return o.ApplyT(func(v *RegionNetworkFirewallPolicy) pulumi.StringOutput { return v.SelfLinkWithId }).(pulumi.StringOutput)
}

type RegionNetworkFirewallPolicyArrayOutput struct{ *pulumi.OutputState }

func (RegionNetworkFirewallPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RegionNetworkFirewallPolicy)(nil)).Elem()
}

func (o RegionNetworkFirewallPolicyArrayOutput) ToRegionNetworkFirewallPolicyArrayOutput() RegionNetworkFirewallPolicyArrayOutput {
	return o
}

func (o RegionNetworkFirewallPolicyArrayOutput) ToRegionNetworkFirewallPolicyArrayOutputWithContext(ctx context.Context) RegionNetworkFirewallPolicyArrayOutput {
	return o
}

func (o RegionNetworkFirewallPolicyArrayOutput) Index(i pulumi.IntInput) RegionNetworkFirewallPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RegionNetworkFirewallPolicy {
		return vs[0].([]*RegionNetworkFirewallPolicy)[vs[1].(int)]
	}).(RegionNetworkFirewallPolicyOutput)
}

type RegionNetworkFirewallPolicyMapOutput struct{ *pulumi.OutputState }

func (RegionNetworkFirewallPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RegionNetworkFirewallPolicy)(nil)).Elem()
}

func (o RegionNetworkFirewallPolicyMapOutput) ToRegionNetworkFirewallPolicyMapOutput() RegionNetworkFirewallPolicyMapOutput {
	return o
}

func (o RegionNetworkFirewallPolicyMapOutput) ToRegionNetworkFirewallPolicyMapOutputWithContext(ctx context.Context) RegionNetworkFirewallPolicyMapOutput {
	return o
}

func (o RegionNetworkFirewallPolicyMapOutput) MapIndex(k pulumi.StringInput) RegionNetworkFirewallPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RegionNetworkFirewallPolicy {
		return vs[0].(map[string]*RegionNetworkFirewallPolicy)[vs[1].(string)]
	}).(RegionNetworkFirewallPolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RegionNetworkFirewallPolicyInput)(nil)).Elem(), &RegionNetworkFirewallPolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegionNetworkFirewallPolicyArrayInput)(nil)).Elem(), RegionNetworkFirewallPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegionNetworkFirewallPolicyMapInput)(nil)).Elem(), RegionNetworkFirewallPolicyMap{})
	pulumi.RegisterOutputType(RegionNetworkFirewallPolicyOutput{})
	pulumi.RegisterOutputType(RegionNetworkFirewallPolicyArrayOutput{})
	pulumi.RegisterOutputType(RegionNetworkFirewallPolicyMapOutput{})
}
