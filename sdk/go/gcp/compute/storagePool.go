// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package compute

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A Hyperdisk Storage Pool is a pre-purchased collection of capacity, throughput, and IOPS
// which you can then provision to your applications as needed.
// You can use Hyperdisk Storage Pools to create and manage disks in pools and use the disks across multiple workloads.
//
// To get more information about StoragePool, see:
//
// * [API documentation](https://cloud.google.com/compute/docs/reference/rest/v1/storagePools)
// * How-to Guides
//   - [Create Hyperdisk Storage Pools](https://cloud.google.com/compute/docs/disks/create-storage-pools)
//
// ## Example Usage
//
// ### Compute Storage Pool Basic
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/compute"
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/organizations"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := compute.NewStoragePool(ctx, "test-storage-pool-basic", &compute.StoragePoolArgs{
//				Name:                      pulumi.String("storage-pool-basic"),
//				PoolProvisionedCapacityGb: pulumi.String("10240"),
//				PoolProvisionedThroughput: pulumi.String("100"),
//				StoragePoolType:           pulumi.String("hyperdisk-throughput"),
//				Zone:                      pulumi.String("us-central1-a"),
//				DeletionProtection:        pulumi.Bool(false),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = organizations.LookupProject(ctx, &organizations.LookupProjectArgs{}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Compute Storage Pool Full
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/compute"
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/organizations"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			balanced, err := compute.GetStoragePoolTypes(ctx, &compute.GetStoragePoolTypesArgs{
//				Zone:            "us-central1-a",
//				StoragePoolType: "hyperdisk-balanced",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = compute.NewStoragePool(ctx, "test-storage-pool-full", &compute.StoragePoolArgs{
//				Name:                        pulumi.String("storage-pool-full"),
//				Description:                 pulumi.String("Hyperdisk Balanced storage pool"),
//				CapacityProvisioningType:    pulumi.String("STANDARD"),
//				PoolProvisionedCapacityGb:   pulumi.String("10240"),
//				PerformanceProvisioningType: pulumi.String("STANDARD"),
//				PoolProvisionedIops:         pulumi.String("10000"),
//				PoolProvisionedThroughput:   pulumi.String("1024"),
//				StoragePoolType:             pulumi.String(balanced.SelfLink),
//				DeletionProtection:          pulumi.Bool(false),
//				Zone:                        pulumi.String("us-central1-a"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = organizations.LookupProject(ctx, &organizations.LookupProjectArgs{}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// StoragePool can be imported using any of these accepted formats:
//
// * `projects/{{project}}/zones/{{zone}}/storagePools/{{name}}`
//
// * `{{project}}/{{zone}}/{{name}}`
//
// * `{{zone}}/{{name}}`
//
// * `{{name}}`
//
// When using the `pulumi import` command, StoragePool can be imported using one of the formats above. For example:
//
// ```sh
// $ pulumi import gcp:compute/storagePool:StoragePool default projects/{{project}}/zones/{{zone}}/storagePools/{{name}}
// ```
//
// ```sh
// $ pulumi import gcp:compute/storagePool:StoragePool default {{project}}/{{zone}}/{{name}}
// ```
//
// ```sh
// $ pulumi import gcp:compute/storagePool:StoragePool default {{zone}}/{{name}}
// ```
//
// ```sh
// $ pulumi import gcp:compute/storagePool:StoragePool default {{name}}
// ```
type StoragePool struct {
	pulumi.CustomResourceState

	// Provisioning type of the byte capacity of the pool.
	// Possible values are: `STANDARD`, `ADVANCED`.
	CapacityProvisioningType pulumi.StringOutput `pulumi:"capacityProvisioningType"`
	// Creation timestamp in RFC3339 text format.
	CreationTimestamp  pulumi.StringOutput  `pulumi:"creationTimestamp"`
	DeletionProtection pulumi.BoolPtrOutput `pulumi:"deletionProtection"`
	// A description of this resource. Provide this property when you create the resource.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Type of the resource.
	Kind pulumi.StringOutput `pulumi:"kind"`
	// The fingerprint used for optimistic locking of this resource.
	// Used internally during updates.
	LabelFingerprint pulumi.StringOutput `pulumi:"labelFingerprint"`
	// Name of the resource. Provided by the client when the resource is created.
	// The name must be 1-63 characters long, and comply with RFC1035.
	// Specifically, the name must be 1-63 characters long and match
	// the regular expression `a-z?`
	// which means the first character must be a lowercase letter,
	// and all following characters must be a dash, lowercase letter, or digit,
	// except the last character, which cannot be a dash.
	Name pulumi.StringOutput `pulumi:"name"`
	// Provisioning type of the performance-related parameters of the pool, such as throughput and IOPS.
	// Possible values are: `STANDARD`, `ADVANCED`.
	PerformanceProvisioningType pulumi.StringOutput `pulumi:"performanceProvisioningType"`
	// Size, in GiB, of the storage pool. For more information about the size limits,
	// see https://cloud.google.com/compute/docs/disks/storage-pools.
	PoolProvisionedCapacityGb pulumi.StringOutput `pulumi:"poolProvisionedCapacityGb"`
	// Provisioned IOPS of the storage pool.
	// Only relevant if the storage pool type is `hyperdisk-balanced`.
	PoolProvisionedIops pulumi.StringPtrOutput `pulumi:"poolProvisionedIops"`
	// Provisioned throughput, in MB/s, of the storage pool.
	// Only relevant if the storage pool type is `hyperdisk-balanced` or `hyperdisk-throughput`.
	PoolProvisionedThroughput pulumi.StringOutput `pulumi:"poolProvisionedThroughput"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
	// Status information for the storage pool resource.
	// Structure is documented below.
	ResourceStatuses StoragePoolResourceStatusArrayOutput `pulumi:"resourceStatuses"`
	// Status information for the storage pool resource.
	// Structure is documented below.
	Statuses StoragePoolStatusArrayOutput `pulumi:"statuses"`
	// Type of the storage pool. For example, the
	// following are valid values:
	// * `https://www.googleapis.com/compute/v1/projects/{project_id}/zones/{zone}/storagePoolTypes/hyperdisk-balanced`
	// * `hyperdisk-throughput`
	StoragePoolType pulumi.StringOutput `pulumi:"storagePoolType"`
	// A reference to the zone where the storage pool resides.
	Zone pulumi.StringOutput `pulumi:"zone"`
}

// NewStoragePool registers a new resource with the given unique name, arguments, and options.
func NewStoragePool(ctx *pulumi.Context,
	name string, args *StoragePoolArgs, opts ...pulumi.ResourceOption) (*StoragePool, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PoolProvisionedCapacityGb == nil {
		return nil, errors.New("invalid value for required argument 'PoolProvisionedCapacityGb'")
	}
	if args.PoolProvisionedThroughput == nil {
		return nil, errors.New("invalid value for required argument 'PoolProvisionedThroughput'")
	}
	if args.StoragePoolType == nil {
		return nil, errors.New("invalid value for required argument 'StoragePoolType'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource StoragePool
	err := ctx.RegisterResource("gcp:compute/storagePool:StoragePool", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetStoragePool gets an existing StoragePool resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetStoragePool(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *StoragePoolState, opts ...pulumi.ResourceOption) (*StoragePool, error) {
	var resource StoragePool
	err := ctx.ReadResource("gcp:compute/storagePool:StoragePool", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering StoragePool resources.
type storagePoolState struct {
	// Provisioning type of the byte capacity of the pool.
	// Possible values are: `STANDARD`, `ADVANCED`.
	CapacityProvisioningType *string `pulumi:"capacityProvisioningType"`
	// Creation timestamp in RFC3339 text format.
	CreationTimestamp  *string `pulumi:"creationTimestamp"`
	DeletionProtection *bool   `pulumi:"deletionProtection"`
	// A description of this resource. Provide this property when you create the resource.
	Description *string `pulumi:"description"`
	// Type of the resource.
	Kind *string `pulumi:"kind"`
	// The fingerprint used for optimistic locking of this resource.
	// Used internally during updates.
	LabelFingerprint *string `pulumi:"labelFingerprint"`
	// Name of the resource. Provided by the client when the resource is created.
	// The name must be 1-63 characters long, and comply with RFC1035.
	// Specifically, the name must be 1-63 characters long and match
	// the regular expression `a-z?`
	// which means the first character must be a lowercase letter,
	// and all following characters must be a dash, lowercase letter, or digit,
	// except the last character, which cannot be a dash.
	Name *string `pulumi:"name"`
	// Provisioning type of the performance-related parameters of the pool, such as throughput and IOPS.
	// Possible values are: `STANDARD`, `ADVANCED`.
	PerformanceProvisioningType *string `pulumi:"performanceProvisioningType"`
	// Size, in GiB, of the storage pool. For more information about the size limits,
	// see https://cloud.google.com/compute/docs/disks/storage-pools.
	PoolProvisionedCapacityGb *string `pulumi:"poolProvisionedCapacityGb"`
	// Provisioned IOPS of the storage pool.
	// Only relevant if the storage pool type is `hyperdisk-balanced`.
	PoolProvisionedIops *string `pulumi:"poolProvisionedIops"`
	// Provisioned throughput, in MB/s, of the storage pool.
	// Only relevant if the storage pool type is `hyperdisk-balanced` or `hyperdisk-throughput`.
	PoolProvisionedThroughput *string `pulumi:"poolProvisionedThroughput"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// Status information for the storage pool resource.
	// Structure is documented below.
	ResourceStatuses []StoragePoolResourceStatus `pulumi:"resourceStatuses"`
	// Status information for the storage pool resource.
	// Structure is documented below.
	Statuses []StoragePoolStatus `pulumi:"statuses"`
	// Type of the storage pool. For example, the
	// following are valid values:
	// * `https://www.googleapis.com/compute/v1/projects/{project_id}/zones/{zone}/storagePoolTypes/hyperdisk-balanced`
	// * `hyperdisk-throughput`
	StoragePoolType *string `pulumi:"storagePoolType"`
	// A reference to the zone where the storage pool resides.
	Zone *string `pulumi:"zone"`
}

type StoragePoolState struct {
	// Provisioning type of the byte capacity of the pool.
	// Possible values are: `STANDARD`, `ADVANCED`.
	CapacityProvisioningType pulumi.StringPtrInput
	// Creation timestamp in RFC3339 text format.
	CreationTimestamp  pulumi.StringPtrInput
	DeletionProtection pulumi.BoolPtrInput
	// A description of this resource. Provide this property when you create the resource.
	Description pulumi.StringPtrInput
	// Type of the resource.
	Kind pulumi.StringPtrInput
	// The fingerprint used for optimistic locking of this resource.
	// Used internally during updates.
	LabelFingerprint pulumi.StringPtrInput
	// Name of the resource. Provided by the client when the resource is created.
	// The name must be 1-63 characters long, and comply with RFC1035.
	// Specifically, the name must be 1-63 characters long and match
	// the regular expression `a-z?`
	// which means the first character must be a lowercase letter,
	// and all following characters must be a dash, lowercase letter, or digit,
	// except the last character, which cannot be a dash.
	Name pulumi.StringPtrInput
	// Provisioning type of the performance-related parameters of the pool, such as throughput and IOPS.
	// Possible values are: `STANDARD`, `ADVANCED`.
	PerformanceProvisioningType pulumi.StringPtrInput
	// Size, in GiB, of the storage pool. For more information about the size limits,
	// see https://cloud.google.com/compute/docs/disks/storage-pools.
	PoolProvisionedCapacityGb pulumi.StringPtrInput
	// Provisioned IOPS of the storage pool.
	// Only relevant if the storage pool type is `hyperdisk-balanced`.
	PoolProvisionedIops pulumi.StringPtrInput
	// Provisioned throughput, in MB/s, of the storage pool.
	// Only relevant if the storage pool type is `hyperdisk-balanced` or `hyperdisk-throughput`.
	PoolProvisionedThroughput pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// Status information for the storage pool resource.
	// Structure is documented below.
	ResourceStatuses StoragePoolResourceStatusArrayInput
	// Status information for the storage pool resource.
	// Structure is documented below.
	Statuses StoragePoolStatusArrayInput
	// Type of the storage pool. For example, the
	// following are valid values:
	// * `https://www.googleapis.com/compute/v1/projects/{project_id}/zones/{zone}/storagePoolTypes/hyperdisk-balanced`
	// * `hyperdisk-throughput`
	StoragePoolType pulumi.StringPtrInput
	// A reference to the zone where the storage pool resides.
	Zone pulumi.StringPtrInput
}

func (StoragePoolState) ElementType() reflect.Type {
	return reflect.TypeOf((*storagePoolState)(nil)).Elem()
}

type storagePoolArgs struct {
	// Provisioning type of the byte capacity of the pool.
	// Possible values are: `STANDARD`, `ADVANCED`.
	CapacityProvisioningType *string `pulumi:"capacityProvisioningType"`
	DeletionProtection       *bool   `pulumi:"deletionProtection"`
	// A description of this resource. Provide this property when you create the resource.
	Description *string `pulumi:"description"`
	// Name of the resource. Provided by the client when the resource is created.
	// The name must be 1-63 characters long, and comply with RFC1035.
	// Specifically, the name must be 1-63 characters long and match
	// the regular expression `a-z?`
	// which means the first character must be a lowercase letter,
	// and all following characters must be a dash, lowercase letter, or digit,
	// except the last character, which cannot be a dash.
	Name *string `pulumi:"name"`
	// Provisioning type of the performance-related parameters of the pool, such as throughput and IOPS.
	// Possible values are: `STANDARD`, `ADVANCED`.
	PerformanceProvisioningType *string `pulumi:"performanceProvisioningType"`
	// Size, in GiB, of the storage pool. For more information about the size limits,
	// see https://cloud.google.com/compute/docs/disks/storage-pools.
	PoolProvisionedCapacityGb string `pulumi:"poolProvisionedCapacityGb"`
	// Provisioned IOPS of the storage pool.
	// Only relevant if the storage pool type is `hyperdisk-balanced`.
	PoolProvisionedIops *string `pulumi:"poolProvisionedIops"`
	// Provisioned throughput, in MB/s, of the storage pool.
	// Only relevant if the storage pool type is `hyperdisk-balanced` or `hyperdisk-throughput`.
	PoolProvisionedThroughput string `pulumi:"poolProvisionedThroughput"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// Type of the storage pool. For example, the
	// following are valid values:
	// * `https://www.googleapis.com/compute/v1/projects/{project_id}/zones/{zone}/storagePoolTypes/hyperdisk-balanced`
	// * `hyperdisk-throughput`
	StoragePoolType string `pulumi:"storagePoolType"`
	// A reference to the zone where the storage pool resides.
	Zone *string `pulumi:"zone"`
}

// The set of arguments for constructing a StoragePool resource.
type StoragePoolArgs struct {
	// Provisioning type of the byte capacity of the pool.
	// Possible values are: `STANDARD`, `ADVANCED`.
	CapacityProvisioningType pulumi.StringPtrInput
	DeletionProtection       pulumi.BoolPtrInput
	// A description of this resource. Provide this property when you create the resource.
	Description pulumi.StringPtrInput
	// Name of the resource. Provided by the client when the resource is created.
	// The name must be 1-63 characters long, and comply with RFC1035.
	// Specifically, the name must be 1-63 characters long and match
	// the regular expression `a-z?`
	// which means the first character must be a lowercase letter,
	// and all following characters must be a dash, lowercase letter, or digit,
	// except the last character, which cannot be a dash.
	Name pulumi.StringPtrInput
	// Provisioning type of the performance-related parameters of the pool, such as throughput and IOPS.
	// Possible values are: `STANDARD`, `ADVANCED`.
	PerformanceProvisioningType pulumi.StringPtrInput
	// Size, in GiB, of the storage pool. For more information about the size limits,
	// see https://cloud.google.com/compute/docs/disks/storage-pools.
	PoolProvisionedCapacityGb pulumi.StringInput
	// Provisioned IOPS of the storage pool.
	// Only relevant if the storage pool type is `hyperdisk-balanced`.
	PoolProvisionedIops pulumi.StringPtrInput
	// Provisioned throughput, in MB/s, of the storage pool.
	// Only relevant if the storage pool type is `hyperdisk-balanced` or `hyperdisk-throughput`.
	PoolProvisionedThroughput pulumi.StringInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// Type of the storage pool. For example, the
	// following are valid values:
	// * `https://www.googleapis.com/compute/v1/projects/{project_id}/zones/{zone}/storagePoolTypes/hyperdisk-balanced`
	// * `hyperdisk-throughput`
	StoragePoolType pulumi.StringInput
	// A reference to the zone where the storage pool resides.
	Zone pulumi.StringPtrInput
}

func (StoragePoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*storagePoolArgs)(nil)).Elem()
}

type StoragePoolInput interface {
	pulumi.Input

	ToStoragePoolOutput() StoragePoolOutput
	ToStoragePoolOutputWithContext(ctx context.Context) StoragePoolOutput
}

func (*StoragePool) ElementType() reflect.Type {
	return reflect.TypeOf((**StoragePool)(nil)).Elem()
}

func (i *StoragePool) ToStoragePoolOutput() StoragePoolOutput {
	return i.ToStoragePoolOutputWithContext(context.Background())
}

func (i *StoragePool) ToStoragePoolOutputWithContext(ctx context.Context) StoragePoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StoragePoolOutput)
}

// StoragePoolArrayInput is an input type that accepts StoragePoolArray and StoragePoolArrayOutput values.
// You can construct a concrete instance of `StoragePoolArrayInput` via:
//
//	StoragePoolArray{ StoragePoolArgs{...} }
type StoragePoolArrayInput interface {
	pulumi.Input

	ToStoragePoolArrayOutput() StoragePoolArrayOutput
	ToStoragePoolArrayOutputWithContext(context.Context) StoragePoolArrayOutput
}

type StoragePoolArray []StoragePoolInput

func (StoragePoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*StoragePool)(nil)).Elem()
}

func (i StoragePoolArray) ToStoragePoolArrayOutput() StoragePoolArrayOutput {
	return i.ToStoragePoolArrayOutputWithContext(context.Background())
}

func (i StoragePoolArray) ToStoragePoolArrayOutputWithContext(ctx context.Context) StoragePoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StoragePoolArrayOutput)
}

// StoragePoolMapInput is an input type that accepts StoragePoolMap and StoragePoolMapOutput values.
// You can construct a concrete instance of `StoragePoolMapInput` via:
//
//	StoragePoolMap{ "key": StoragePoolArgs{...} }
type StoragePoolMapInput interface {
	pulumi.Input

	ToStoragePoolMapOutput() StoragePoolMapOutput
	ToStoragePoolMapOutputWithContext(context.Context) StoragePoolMapOutput
}

type StoragePoolMap map[string]StoragePoolInput

func (StoragePoolMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*StoragePool)(nil)).Elem()
}

func (i StoragePoolMap) ToStoragePoolMapOutput() StoragePoolMapOutput {
	return i.ToStoragePoolMapOutputWithContext(context.Background())
}

func (i StoragePoolMap) ToStoragePoolMapOutputWithContext(ctx context.Context) StoragePoolMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StoragePoolMapOutput)
}

type StoragePoolOutput struct{ *pulumi.OutputState }

func (StoragePoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StoragePool)(nil)).Elem()
}

func (o StoragePoolOutput) ToStoragePoolOutput() StoragePoolOutput {
	return o
}

func (o StoragePoolOutput) ToStoragePoolOutputWithContext(ctx context.Context) StoragePoolOutput {
	return o
}

// Provisioning type of the byte capacity of the pool.
// Possible values are: `STANDARD`, `ADVANCED`.
func (o StoragePoolOutput) CapacityProvisioningType() pulumi.StringOutput {
	return o.ApplyT(func(v *StoragePool) pulumi.StringOutput { return v.CapacityProvisioningType }).(pulumi.StringOutput)
}

// Creation timestamp in RFC3339 text format.
func (o StoragePoolOutput) CreationTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v *StoragePool) pulumi.StringOutput { return v.CreationTimestamp }).(pulumi.StringOutput)
}

func (o StoragePoolOutput) DeletionProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StoragePool) pulumi.BoolPtrOutput { return v.DeletionProtection }).(pulumi.BoolPtrOutput)
}

// A description of this resource. Provide this property when you create the resource.
func (o StoragePoolOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StoragePool) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Type of the resource.
func (o StoragePoolOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *StoragePool) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// The fingerprint used for optimistic locking of this resource.
// Used internally during updates.
func (o StoragePoolOutput) LabelFingerprint() pulumi.StringOutput {
	return o.ApplyT(func(v *StoragePool) pulumi.StringOutput { return v.LabelFingerprint }).(pulumi.StringOutput)
}

// Name of the resource. Provided by the client when the resource is created.
// The name must be 1-63 characters long, and comply with RFC1035.
// Specifically, the name must be 1-63 characters long and match
// the regular expression `a-z?`
// which means the first character must be a lowercase letter,
// and all following characters must be a dash, lowercase letter, or digit,
// except the last character, which cannot be a dash.
func (o StoragePoolOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *StoragePool) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Provisioning type of the performance-related parameters of the pool, such as throughput and IOPS.
// Possible values are: `STANDARD`, `ADVANCED`.
func (o StoragePoolOutput) PerformanceProvisioningType() pulumi.StringOutput {
	return o.ApplyT(func(v *StoragePool) pulumi.StringOutput { return v.PerformanceProvisioningType }).(pulumi.StringOutput)
}

// Size, in GiB, of the storage pool. For more information about the size limits,
// see https://cloud.google.com/compute/docs/disks/storage-pools.
func (o StoragePoolOutput) PoolProvisionedCapacityGb() pulumi.StringOutput {
	return o.ApplyT(func(v *StoragePool) pulumi.StringOutput { return v.PoolProvisionedCapacityGb }).(pulumi.StringOutput)
}

// Provisioned IOPS of the storage pool.
// Only relevant if the storage pool type is `hyperdisk-balanced`.
func (o StoragePoolOutput) PoolProvisionedIops() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StoragePool) pulumi.StringPtrOutput { return v.PoolProvisionedIops }).(pulumi.StringPtrOutput)
}

// Provisioned throughput, in MB/s, of the storage pool.
// Only relevant if the storage pool type is `hyperdisk-balanced` or `hyperdisk-throughput`.
func (o StoragePoolOutput) PoolProvisionedThroughput() pulumi.StringOutput {
	return o.ApplyT(func(v *StoragePool) pulumi.StringOutput { return v.PoolProvisionedThroughput }).(pulumi.StringOutput)
}

// The ID of the project in which the resource belongs.
// If it is not provided, the provider project is used.
func (o StoragePoolOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *StoragePool) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Status information for the storage pool resource.
// Structure is documented below.
func (o StoragePoolOutput) ResourceStatuses() StoragePoolResourceStatusArrayOutput {
	return o.ApplyT(func(v *StoragePool) StoragePoolResourceStatusArrayOutput { return v.ResourceStatuses }).(StoragePoolResourceStatusArrayOutput)
}

// Status information for the storage pool resource.
// Structure is documented below.
func (o StoragePoolOutput) Statuses() StoragePoolStatusArrayOutput {
	return o.ApplyT(func(v *StoragePool) StoragePoolStatusArrayOutput { return v.Statuses }).(StoragePoolStatusArrayOutput)
}

// Type of the storage pool. For example, the
// following are valid values:
// * `https://www.googleapis.com/compute/v1/projects/{project_id}/zones/{zone}/storagePoolTypes/hyperdisk-balanced`
// * `hyperdisk-throughput`
func (o StoragePoolOutput) StoragePoolType() pulumi.StringOutput {
	return o.ApplyT(func(v *StoragePool) pulumi.StringOutput { return v.StoragePoolType }).(pulumi.StringOutput)
}

// A reference to the zone where the storage pool resides.
func (o StoragePoolOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v *StoragePool) pulumi.StringOutput { return v.Zone }).(pulumi.StringOutput)
}

type StoragePoolArrayOutput struct{ *pulumi.OutputState }

func (StoragePoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*StoragePool)(nil)).Elem()
}

func (o StoragePoolArrayOutput) ToStoragePoolArrayOutput() StoragePoolArrayOutput {
	return o
}

func (o StoragePoolArrayOutput) ToStoragePoolArrayOutputWithContext(ctx context.Context) StoragePoolArrayOutput {
	return o
}

func (o StoragePoolArrayOutput) Index(i pulumi.IntInput) StoragePoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *StoragePool {
		return vs[0].([]*StoragePool)[vs[1].(int)]
	}).(StoragePoolOutput)
}

type StoragePoolMapOutput struct{ *pulumi.OutputState }

func (StoragePoolMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*StoragePool)(nil)).Elem()
}

func (o StoragePoolMapOutput) ToStoragePoolMapOutput() StoragePoolMapOutput {
	return o
}

func (o StoragePoolMapOutput) ToStoragePoolMapOutputWithContext(ctx context.Context) StoragePoolMapOutput {
	return o
}

func (o StoragePoolMapOutput) MapIndex(k pulumi.StringInput) StoragePoolOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *StoragePool {
		return vs[0].(map[string]*StoragePool)[vs[1].(string)]
	}).(StoragePoolOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*StoragePoolInput)(nil)).Elem(), &StoragePool{})
	pulumi.RegisterInputType(reflect.TypeOf((*StoragePoolArrayInput)(nil)).Elem(), StoragePoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StoragePoolMapInput)(nil)).Elem(), StoragePoolMap{})
	pulumi.RegisterOutputType(StoragePoolOutput{})
	pulumi.RegisterOutputType(StoragePoolArrayOutput{})
	pulumi.RegisterOutputType(StoragePoolMapOutput{})
}
