// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package compute

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Represents the Instance membership to the Instance Group.
//
// > **NOTE** You can use this resource instead of the `instances` field in the
// `compute.InstanceGroup`, however it's not recommended to use it alongside this field.
// It might cause inconsistencies, as they can end up competing over control.
//
// > **NOTE** This resource has been added to avoid a situation, where after
// Instance is recreated, it's removed from Instance Group and it's needed to
// perform `apply` twice. To avoid situations like this, please use this resource
// with the lifecycle `updateTriggeredBy` method, with the passed Instance's ID.
//
// To get more information about InstanceGroupMembership, see:
//
// * [API documentation](https://cloud.google.com/compute/docs/reference/rest/v1/instanceGroups)
// * How-to Guides
//   - [Add instances](https://cloud.google.com/compute/docs/reference/rest/v1/instanceGroups/addInstances)
//   - [Remove instances](https://cloud.google.com/compute/docs/reference/rest/v1/instanceGroups/removeInstances)
//   - [List instances](https://cloud.google.com/compute/docs/reference/rest/v1/instanceGroups/listInstances)
//
// ## Example Usage
//
// ### Instance Group Membership
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/compute"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := compute.NewNetwork(ctx, "default-network", &compute.NetworkArgs{
//				Name: pulumi.String("network"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = compute.NewInstance(ctx, "default-instance", &compute.InstanceArgs{
//				Name:        pulumi.String("instance"),
//				MachineType: pulumi.String("e2-medium"),
//				BootDisk: &compute.InstanceBootDiskArgs{
//					InitializeParams: &compute.InstanceBootDiskInitializeParamsArgs{
//						Image: pulumi.String("debian-cloud/debian-11"),
//					},
//				},
//				NetworkInterfaces: compute.InstanceNetworkInterfaceArray{
//					&compute.InstanceNetworkInterfaceArgs{
//						Network: default_network.Name,
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = compute.NewInstanceGroup(ctx, "default-instance-group", &compute.InstanceGroupArgs{
//				Name: pulumi.String("instance-group"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = compute.NewInstanceGroupMembership(ctx, "default-ig-membership", &compute.InstanceGroupMembershipArgs{
//				Instance:      default_instance.SelfLink,
//				InstanceGroup: default_instance_group.Name,
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// InstanceGroupMembership can be imported using any of these accepted formats:
//
// * `projects/{{project}}/zones/{{zone}}/instanceGroups/{{instance_group}}/{{instance}}`
//
// * `{{project}}/{{zone}}/{{instance_group}}/{{instance}}`
//
// * `{{zone}}/{{instance_group}}/{{instance}}`
//
// * `{{instance_group}}/{{instance}}`
//
// When using the `pulumi import` command, InstanceGroupMembership can be imported using one of the formats above. For example:
//
// ```sh
// $ pulumi import gcp:compute/instanceGroupMembership:InstanceGroupMembership default projects/{{project}}/zones/{{zone}}/instanceGroups/{{instance_group}}/{{instance}}
// ```
//
// ```sh
// $ pulumi import gcp:compute/instanceGroupMembership:InstanceGroupMembership default {{project}}/{{zone}}/{{instance_group}}/{{instance}}
// ```
//
// ```sh
// $ pulumi import gcp:compute/instanceGroupMembership:InstanceGroupMembership default {{zone}}/{{instance_group}}/{{instance}}
// ```
//
// ```sh
// $ pulumi import gcp:compute/instanceGroupMembership:InstanceGroupMembership default {{instance_group}}/{{instance}}
// ```
type InstanceGroupMembership struct {
	pulumi.CustomResourceState

	// An instance being added to the InstanceGroup
	Instance pulumi.StringOutput `pulumi:"instance"`
	// Represents an Instance Group resource name that the instance belongs to.
	//
	// ***
	InstanceGroup pulumi.StringOutput `pulumi:"instanceGroup"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
	// A reference to the zone where the instance group resides.
	Zone pulumi.StringPtrOutput `pulumi:"zone"`
}

// NewInstanceGroupMembership registers a new resource with the given unique name, arguments, and options.
func NewInstanceGroupMembership(ctx *pulumi.Context,
	name string, args *InstanceGroupMembershipArgs, opts ...pulumi.ResourceOption) (*InstanceGroupMembership, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Instance == nil {
		return nil, errors.New("invalid value for required argument 'Instance'")
	}
	if args.InstanceGroup == nil {
		return nil, errors.New("invalid value for required argument 'InstanceGroup'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource InstanceGroupMembership
	err := ctx.RegisterResource("gcp:compute/instanceGroupMembership:InstanceGroupMembership", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInstanceGroupMembership gets an existing InstanceGroupMembership resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInstanceGroupMembership(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InstanceGroupMembershipState, opts ...pulumi.ResourceOption) (*InstanceGroupMembership, error) {
	var resource InstanceGroupMembership
	err := ctx.ReadResource("gcp:compute/instanceGroupMembership:InstanceGroupMembership", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering InstanceGroupMembership resources.
type instanceGroupMembershipState struct {
	// An instance being added to the InstanceGroup
	Instance *string `pulumi:"instance"`
	// Represents an Instance Group resource name that the instance belongs to.
	//
	// ***
	InstanceGroup *string `pulumi:"instanceGroup"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// A reference to the zone where the instance group resides.
	Zone *string `pulumi:"zone"`
}

type InstanceGroupMembershipState struct {
	// An instance being added to the InstanceGroup
	Instance pulumi.StringPtrInput
	// Represents an Instance Group resource name that the instance belongs to.
	//
	// ***
	InstanceGroup pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// A reference to the zone where the instance group resides.
	Zone pulumi.StringPtrInput
}

func (InstanceGroupMembershipState) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceGroupMembershipState)(nil)).Elem()
}

type instanceGroupMembershipArgs struct {
	// An instance being added to the InstanceGroup
	Instance string `pulumi:"instance"`
	// Represents an Instance Group resource name that the instance belongs to.
	//
	// ***
	InstanceGroup string `pulumi:"instanceGroup"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// A reference to the zone where the instance group resides.
	Zone *string `pulumi:"zone"`
}

// The set of arguments for constructing a InstanceGroupMembership resource.
type InstanceGroupMembershipArgs struct {
	// An instance being added to the InstanceGroup
	Instance pulumi.StringInput
	// Represents an Instance Group resource name that the instance belongs to.
	//
	// ***
	InstanceGroup pulumi.StringInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// A reference to the zone where the instance group resides.
	Zone pulumi.StringPtrInput
}

func (InstanceGroupMembershipArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceGroupMembershipArgs)(nil)).Elem()
}

type InstanceGroupMembershipInput interface {
	pulumi.Input

	ToInstanceGroupMembershipOutput() InstanceGroupMembershipOutput
	ToInstanceGroupMembershipOutputWithContext(ctx context.Context) InstanceGroupMembershipOutput
}

func (*InstanceGroupMembership) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceGroupMembership)(nil)).Elem()
}

func (i *InstanceGroupMembership) ToInstanceGroupMembershipOutput() InstanceGroupMembershipOutput {
	return i.ToInstanceGroupMembershipOutputWithContext(context.Background())
}

func (i *InstanceGroupMembership) ToInstanceGroupMembershipOutputWithContext(ctx context.Context) InstanceGroupMembershipOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceGroupMembershipOutput)
}

// InstanceGroupMembershipArrayInput is an input type that accepts InstanceGroupMembershipArray and InstanceGroupMembershipArrayOutput values.
// You can construct a concrete instance of `InstanceGroupMembershipArrayInput` via:
//
//	InstanceGroupMembershipArray{ InstanceGroupMembershipArgs{...} }
type InstanceGroupMembershipArrayInput interface {
	pulumi.Input

	ToInstanceGroupMembershipArrayOutput() InstanceGroupMembershipArrayOutput
	ToInstanceGroupMembershipArrayOutputWithContext(context.Context) InstanceGroupMembershipArrayOutput
}

type InstanceGroupMembershipArray []InstanceGroupMembershipInput

func (InstanceGroupMembershipArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*InstanceGroupMembership)(nil)).Elem()
}

func (i InstanceGroupMembershipArray) ToInstanceGroupMembershipArrayOutput() InstanceGroupMembershipArrayOutput {
	return i.ToInstanceGroupMembershipArrayOutputWithContext(context.Background())
}

func (i InstanceGroupMembershipArray) ToInstanceGroupMembershipArrayOutputWithContext(ctx context.Context) InstanceGroupMembershipArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceGroupMembershipArrayOutput)
}

// InstanceGroupMembershipMapInput is an input type that accepts InstanceGroupMembershipMap and InstanceGroupMembershipMapOutput values.
// You can construct a concrete instance of `InstanceGroupMembershipMapInput` via:
//
//	InstanceGroupMembershipMap{ "key": InstanceGroupMembershipArgs{...} }
type InstanceGroupMembershipMapInput interface {
	pulumi.Input

	ToInstanceGroupMembershipMapOutput() InstanceGroupMembershipMapOutput
	ToInstanceGroupMembershipMapOutputWithContext(context.Context) InstanceGroupMembershipMapOutput
}

type InstanceGroupMembershipMap map[string]InstanceGroupMembershipInput

func (InstanceGroupMembershipMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*InstanceGroupMembership)(nil)).Elem()
}

func (i InstanceGroupMembershipMap) ToInstanceGroupMembershipMapOutput() InstanceGroupMembershipMapOutput {
	return i.ToInstanceGroupMembershipMapOutputWithContext(context.Background())
}

func (i InstanceGroupMembershipMap) ToInstanceGroupMembershipMapOutputWithContext(ctx context.Context) InstanceGroupMembershipMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceGroupMembershipMapOutput)
}

type InstanceGroupMembershipOutput struct{ *pulumi.OutputState }

func (InstanceGroupMembershipOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceGroupMembership)(nil)).Elem()
}

func (o InstanceGroupMembershipOutput) ToInstanceGroupMembershipOutput() InstanceGroupMembershipOutput {
	return o
}

func (o InstanceGroupMembershipOutput) ToInstanceGroupMembershipOutputWithContext(ctx context.Context) InstanceGroupMembershipOutput {
	return o
}

// An instance being added to the InstanceGroup
func (o InstanceGroupMembershipOutput) Instance() pulumi.StringOutput {
	return o.ApplyT(func(v *InstanceGroupMembership) pulumi.StringOutput { return v.Instance }).(pulumi.StringOutput)
}

// Represents an Instance Group resource name that the instance belongs to.
//
// ***
func (o InstanceGroupMembershipOutput) InstanceGroup() pulumi.StringOutput {
	return o.ApplyT(func(v *InstanceGroupMembership) pulumi.StringOutput { return v.InstanceGroup }).(pulumi.StringOutput)
}

// The ID of the project in which the resource belongs.
// If it is not provided, the provider project is used.
func (o InstanceGroupMembershipOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *InstanceGroupMembership) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// A reference to the zone where the instance group resides.
func (o InstanceGroupMembershipOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceGroupMembership) pulumi.StringPtrOutput { return v.Zone }).(pulumi.StringPtrOutput)
}

type InstanceGroupMembershipArrayOutput struct{ *pulumi.OutputState }

func (InstanceGroupMembershipArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*InstanceGroupMembership)(nil)).Elem()
}

func (o InstanceGroupMembershipArrayOutput) ToInstanceGroupMembershipArrayOutput() InstanceGroupMembershipArrayOutput {
	return o
}

func (o InstanceGroupMembershipArrayOutput) ToInstanceGroupMembershipArrayOutputWithContext(ctx context.Context) InstanceGroupMembershipArrayOutput {
	return o
}

func (o InstanceGroupMembershipArrayOutput) Index(i pulumi.IntInput) InstanceGroupMembershipOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *InstanceGroupMembership {
		return vs[0].([]*InstanceGroupMembership)[vs[1].(int)]
	}).(InstanceGroupMembershipOutput)
}

type InstanceGroupMembershipMapOutput struct{ *pulumi.OutputState }

func (InstanceGroupMembershipMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*InstanceGroupMembership)(nil)).Elem()
}

func (o InstanceGroupMembershipMapOutput) ToInstanceGroupMembershipMapOutput() InstanceGroupMembershipMapOutput {
	return o
}

func (o InstanceGroupMembershipMapOutput) ToInstanceGroupMembershipMapOutputWithContext(ctx context.Context) InstanceGroupMembershipMapOutput {
	return o
}

func (o InstanceGroupMembershipMapOutput) MapIndex(k pulumi.StringInput) InstanceGroupMembershipOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *InstanceGroupMembership {
		return vs[0].(map[string]*InstanceGroupMembership)[vs[1].(string)]
	}).(InstanceGroupMembershipOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceGroupMembershipInput)(nil)).Elem(), &InstanceGroupMembership{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceGroupMembershipArrayInput)(nil)).Elem(), InstanceGroupMembershipArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceGroupMembershipMapInput)(nil)).Elem(), InstanceGroupMembershipMap{})
	pulumi.RegisterOutputType(InstanceGroupMembershipOutput{})
	pulumi.RegisterOutputType(InstanceGroupMembershipArrayOutput{})
	pulumi.RegisterOutputType(InstanceGroupMembershipMapOutput{})
}
