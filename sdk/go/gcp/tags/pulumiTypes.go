// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package tags

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type TagKeyIamBindingCondition struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

// TagKeyIamBindingConditionInput is an input type that accepts TagKeyIamBindingConditionArgs and TagKeyIamBindingConditionOutput values.
// You can construct a concrete instance of `TagKeyIamBindingConditionInput` via:
//
//	TagKeyIamBindingConditionArgs{...}
type TagKeyIamBindingConditionInput interface {
	pulumi.Input

	ToTagKeyIamBindingConditionOutput() TagKeyIamBindingConditionOutput
	ToTagKeyIamBindingConditionOutputWithContext(context.Context) TagKeyIamBindingConditionOutput
}

type TagKeyIamBindingConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (TagKeyIamBindingConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TagKeyIamBindingCondition)(nil)).Elem()
}

func (i TagKeyIamBindingConditionArgs) ToTagKeyIamBindingConditionOutput() TagKeyIamBindingConditionOutput {
	return i.ToTagKeyIamBindingConditionOutputWithContext(context.Background())
}

func (i TagKeyIamBindingConditionArgs) ToTagKeyIamBindingConditionOutputWithContext(ctx context.Context) TagKeyIamBindingConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagKeyIamBindingConditionOutput)
}

func (i TagKeyIamBindingConditionArgs) ToTagKeyIamBindingConditionPtrOutput() TagKeyIamBindingConditionPtrOutput {
	return i.ToTagKeyIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i TagKeyIamBindingConditionArgs) ToTagKeyIamBindingConditionPtrOutputWithContext(ctx context.Context) TagKeyIamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagKeyIamBindingConditionOutput).ToTagKeyIamBindingConditionPtrOutputWithContext(ctx)
}

// TagKeyIamBindingConditionPtrInput is an input type that accepts TagKeyIamBindingConditionArgs, TagKeyIamBindingConditionPtr and TagKeyIamBindingConditionPtrOutput values.
// You can construct a concrete instance of `TagKeyIamBindingConditionPtrInput` via:
//
//	        TagKeyIamBindingConditionArgs{...}
//
//	or:
//
//	        nil
type TagKeyIamBindingConditionPtrInput interface {
	pulumi.Input

	ToTagKeyIamBindingConditionPtrOutput() TagKeyIamBindingConditionPtrOutput
	ToTagKeyIamBindingConditionPtrOutputWithContext(context.Context) TagKeyIamBindingConditionPtrOutput
}

type tagKeyIamBindingConditionPtrType TagKeyIamBindingConditionArgs

func TagKeyIamBindingConditionPtr(v *TagKeyIamBindingConditionArgs) TagKeyIamBindingConditionPtrInput {
	return (*tagKeyIamBindingConditionPtrType)(v)
}

func (*tagKeyIamBindingConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TagKeyIamBindingCondition)(nil)).Elem()
}

func (i *tagKeyIamBindingConditionPtrType) ToTagKeyIamBindingConditionPtrOutput() TagKeyIamBindingConditionPtrOutput {
	return i.ToTagKeyIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i *tagKeyIamBindingConditionPtrType) ToTagKeyIamBindingConditionPtrOutputWithContext(ctx context.Context) TagKeyIamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagKeyIamBindingConditionPtrOutput)
}

type TagKeyIamBindingConditionOutput struct{ *pulumi.OutputState }

func (TagKeyIamBindingConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TagKeyIamBindingCondition)(nil)).Elem()
}

func (o TagKeyIamBindingConditionOutput) ToTagKeyIamBindingConditionOutput() TagKeyIamBindingConditionOutput {
	return o
}

func (o TagKeyIamBindingConditionOutput) ToTagKeyIamBindingConditionOutputWithContext(ctx context.Context) TagKeyIamBindingConditionOutput {
	return o
}

func (o TagKeyIamBindingConditionOutput) ToTagKeyIamBindingConditionPtrOutput() TagKeyIamBindingConditionPtrOutput {
	return o.ToTagKeyIamBindingConditionPtrOutputWithContext(context.Background())
}

func (o TagKeyIamBindingConditionOutput) ToTagKeyIamBindingConditionPtrOutputWithContext(ctx context.Context) TagKeyIamBindingConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TagKeyIamBindingCondition) *TagKeyIamBindingCondition {
		return &v
	}).(TagKeyIamBindingConditionPtrOutput)
}

func (o TagKeyIamBindingConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TagKeyIamBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o TagKeyIamBindingConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v TagKeyIamBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o TagKeyIamBindingConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v TagKeyIamBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

type TagKeyIamBindingConditionPtrOutput struct{ *pulumi.OutputState }

func (TagKeyIamBindingConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TagKeyIamBindingCondition)(nil)).Elem()
}

func (o TagKeyIamBindingConditionPtrOutput) ToTagKeyIamBindingConditionPtrOutput() TagKeyIamBindingConditionPtrOutput {
	return o
}

func (o TagKeyIamBindingConditionPtrOutput) ToTagKeyIamBindingConditionPtrOutputWithContext(ctx context.Context) TagKeyIamBindingConditionPtrOutput {
	return o
}

func (o TagKeyIamBindingConditionPtrOutput) Elem() TagKeyIamBindingConditionOutput {
	return o.ApplyT(func(v *TagKeyIamBindingCondition) TagKeyIamBindingCondition {
		if v != nil {
			return *v
		}
		var ret TagKeyIamBindingCondition
		return ret
	}).(TagKeyIamBindingConditionOutput)
}

func (o TagKeyIamBindingConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TagKeyIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o TagKeyIamBindingConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TagKeyIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

func (o TagKeyIamBindingConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TagKeyIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type TagKeyIamMemberCondition struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

// TagKeyIamMemberConditionInput is an input type that accepts TagKeyIamMemberConditionArgs and TagKeyIamMemberConditionOutput values.
// You can construct a concrete instance of `TagKeyIamMemberConditionInput` via:
//
//	TagKeyIamMemberConditionArgs{...}
type TagKeyIamMemberConditionInput interface {
	pulumi.Input

	ToTagKeyIamMemberConditionOutput() TagKeyIamMemberConditionOutput
	ToTagKeyIamMemberConditionOutputWithContext(context.Context) TagKeyIamMemberConditionOutput
}

type TagKeyIamMemberConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (TagKeyIamMemberConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TagKeyIamMemberCondition)(nil)).Elem()
}

func (i TagKeyIamMemberConditionArgs) ToTagKeyIamMemberConditionOutput() TagKeyIamMemberConditionOutput {
	return i.ToTagKeyIamMemberConditionOutputWithContext(context.Background())
}

func (i TagKeyIamMemberConditionArgs) ToTagKeyIamMemberConditionOutputWithContext(ctx context.Context) TagKeyIamMemberConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagKeyIamMemberConditionOutput)
}

func (i TagKeyIamMemberConditionArgs) ToTagKeyIamMemberConditionPtrOutput() TagKeyIamMemberConditionPtrOutput {
	return i.ToTagKeyIamMemberConditionPtrOutputWithContext(context.Background())
}

func (i TagKeyIamMemberConditionArgs) ToTagKeyIamMemberConditionPtrOutputWithContext(ctx context.Context) TagKeyIamMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagKeyIamMemberConditionOutput).ToTagKeyIamMemberConditionPtrOutputWithContext(ctx)
}

// TagKeyIamMemberConditionPtrInput is an input type that accepts TagKeyIamMemberConditionArgs, TagKeyIamMemberConditionPtr and TagKeyIamMemberConditionPtrOutput values.
// You can construct a concrete instance of `TagKeyIamMemberConditionPtrInput` via:
//
//	        TagKeyIamMemberConditionArgs{...}
//
//	or:
//
//	        nil
type TagKeyIamMemberConditionPtrInput interface {
	pulumi.Input

	ToTagKeyIamMemberConditionPtrOutput() TagKeyIamMemberConditionPtrOutput
	ToTagKeyIamMemberConditionPtrOutputWithContext(context.Context) TagKeyIamMemberConditionPtrOutput
}

type tagKeyIamMemberConditionPtrType TagKeyIamMemberConditionArgs

func TagKeyIamMemberConditionPtr(v *TagKeyIamMemberConditionArgs) TagKeyIamMemberConditionPtrInput {
	return (*tagKeyIamMemberConditionPtrType)(v)
}

func (*tagKeyIamMemberConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TagKeyIamMemberCondition)(nil)).Elem()
}

func (i *tagKeyIamMemberConditionPtrType) ToTagKeyIamMemberConditionPtrOutput() TagKeyIamMemberConditionPtrOutput {
	return i.ToTagKeyIamMemberConditionPtrOutputWithContext(context.Background())
}

func (i *tagKeyIamMemberConditionPtrType) ToTagKeyIamMemberConditionPtrOutputWithContext(ctx context.Context) TagKeyIamMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagKeyIamMemberConditionPtrOutput)
}

type TagKeyIamMemberConditionOutput struct{ *pulumi.OutputState }

func (TagKeyIamMemberConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TagKeyIamMemberCondition)(nil)).Elem()
}

func (o TagKeyIamMemberConditionOutput) ToTagKeyIamMemberConditionOutput() TagKeyIamMemberConditionOutput {
	return o
}

func (o TagKeyIamMemberConditionOutput) ToTagKeyIamMemberConditionOutputWithContext(ctx context.Context) TagKeyIamMemberConditionOutput {
	return o
}

func (o TagKeyIamMemberConditionOutput) ToTagKeyIamMemberConditionPtrOutput() TagKeyIamMemberConditionPtrOutput {
	return o.ToTagKeyIamMemberConditionPtrOutputWithContext(context.Background())
}

func (o TagKeyIamMemberConditionOutput) ToTagKeyIamMemberConditionPtrOutputWithContext(ctx context.Context) TagKeyIamMemberConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TagKeyIamMemberCondition) *TagKeyIamMemberCondition {
		return &v
	}).(TagKeyIamMemberConditionPtrOutput)
}

func (o TagKeyIamMemberConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TagKeyIamMemberCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o TagKeyIamMemberConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v TagKeyIamMemberCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o TagKeyIamMemberConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v TagKeyIamMemberCondition) string { return v.Title }).(pulumi.StringOutput)
}

type TagKeyIamMemberConditionPtrOutput struct{ *pulumi.OutputState }

func (TagKeyIamMemberConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TagKeyIamMemberCondition)(nil)).Elem()
}

func (o TagKeyIamMemberConditionPtrOutput) ToTagKeyIamMemberConditionPtrOutput() TagKeyIamMemberConditionPtrOutput {
	return o
}

func (o TagKeyIamMemberConditionPtrOutput) ToTagKeyIamMemberConditionPtrOutputWithContext(ctx context.Context) TagKeyIamMemberConditionPtrOutput {
	return o
}

func (o TagKeyIamMemberConditionPtrOutput) Elem() TagKeyIamMemberConditionOutput {
	return o.ApplyT(func(v *TagKeyIamMemberCondition) TagKeyIamMemberCondition {
		if v != nil {
			return *v
		}
		var ret TagKeyIamMemberCondition
		return ret
	}).(TagKeyIamMemberConditionOutput)
}

func (o TagKeyIamMemberConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TagKeyIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o TagKeyIamMemberConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TagKeyIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

func (o TagKeyIamMemberConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TagKeyIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type TagValueIamBindingCondition struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

// TagValueIamBindingConditionInput is an input type that accepts TagValueIamBindingConditionArgs and TagValueIamBindingConditionOutput values.
// You can construct a concrete instance of `TagValueIamBindingConditionInput` via:
//
//	TagValueIamBindingConditionArgs{...}
type TagValueIamBindingConditionInput interface {
	pulumi.Input

	ToTagValueIamBindingConditionOutput() TagValueIamBindingConditionOutput
	ToTagValueIamBindingConditionOutputWithContext(context.Context) TagValueIamBindingConditionOutput
}

type TagValueIamBindingConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (TagValueIamBindingConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TagValueIamBindingCondition)(nil)).Elem()
}

func (i TagValueIamBindingConditionArgs) ToTagValueIamBindingConditionOutput() TagValueIamBindingConditionOutput {
	return i.ToTagValueIamBindingConditionOutputWithContext(context.Background())
}

func (i TagValueIamBindingConditionArgs) ToTagValueIamBindingConditionOutputWithContext(ctx context.Context) TagValueIamBindingConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagValueIamBindingConditionOutput)
}

func (i TagValueIamBindingConditionArgs) ToTagValueIamBindingConditionPtrOutput() TagValueIamBindingConditionPtrOutput {
	return i.ToTagValueIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i TagValueIamBindingConditionArgs) ToTagValueIamBindingConditionPtrOutputWithContext(ctx context.Context) TagValueIamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagValueIamBindingConditionOutput).ToTagValueIamBindingConditionPtrOutputWithContext(ctx)
}

// TagValueIamBindingConditionPtrInput is an input type that accepts TagValueIamBindingConditionArgs, TagValueIamBindingConditionPtr and TagValueIamBindingConditionPtrOutput values.
// You can construct a concrete instance of `TagValueIamBindingConditionPtrInput` via:
//
//	        TagValueIamBindingConditionArgs{...}
//
//	or:
//
//	        nil
type TagValueIamBindingConditionPtrInput interface {
	pulumi.Input

	ToTagValueIamBindingConditionPtrOutput() TagValueIamBindingConditionPtrOutput
	ToTagValueIamBindingConditionPtrOutputWithContext(context.Context) TagValueIamBindingConditionPtrOutput
}

type tagValueIamBindingConditionPtrType TagValueIamBindingConditionArgs

func TagValueIamBindingConditionPtr(v *TagValueIamBindingConditionArgs) TagValueIamBindingConditionPtrInput {
	return (*tagValueIamBindingConditionPtrType)(v)
}

func (*tagValueIamBindingConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TagValueIamBindingCondition)(nil)).Elem()
}

func (i *tagValueIamBindingConditionPtrType) ToTagValueIamBindingConditionPtrOutput() TagValueIamBindingConditionPtrOutput {
	return i.ToTagValueIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i *tagValueIamBindingConditionPtrType) ToTagValueIamBindingConditionPtrOutputWithContext(ctx context.Context) TagValueIamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagValueIamBindingConditionPtrOutput)
}

type TagValueIamBindingConditionOutput struct{ *pulumi.OutputState }

func (TagValueIamBindingConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TagValueIamBindingCondition)(nil)).Elem()
}

func (o TagValueIamBindingConditionOutput) ToTagValueIamBindingConditionOutput() TagValueIamBindingConditionOutput {
	return o
}

func (o TagValueIamBindingConditionOutput) ToTagValueIamBindingConditionOutputWithContext(ctx context.Context) TagValueIamBindingConditionOutput {
	return o
}

func (o TagValueIamBindingConditionOutput) ToTagValueIamBindingConditionPtrOutput() TagValueIamBindingConditionPtrOutput {
	return o.ToTagValueIamBindingConditionPtrOutputWithContext(context.Background())
}

func (o TagValueIamBindingConditionOutput) ToTagValueIamBindingConditionPtrOutputWithContext(ctx context.Context) TagValueIamBindingConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TagValueIamBindingCondition) *TagValueIamBindingCondition {
		return &v
	}).(TagValueIamBindingConditionPtrOutput)
}

func (o TagValueIamBindingConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TagValueIamBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o TagValueIamBindingConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v TagValueIamBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o TagValueIamBindingConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v TagValueIamBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

type TagValueIamBindingConditionPtrOutput struct{ *pulumi.OutputState }

func (TagValueIamBindingConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TagValueIamBindingCondition)(nil)).Elem()
}

func (o TagValueIamBindingConditionPtrOutput) ToTagValueIamBindingConditionPtrOutput() TagValueIamBindingConditionPtrOutput {
	return o
}

func (o TagValueIamBindingConditionPtrOutput) ToTagValueIamBindingConditionPtrOutputWithContext(ctx context.Context) TagValueIamBindingConditionPtrOutput {
	return o
}

func (o TagValueIamBindingConditionPtrOutput) Elem() TagValueIamBindingConditionOutput {
	return o.ApplyT(func(v *TagValueIamBindingCondition) TagValueIamBindingCondition {
		if v != nil {
			return *v
		}
		var ret TagValueIamBindingCondition
		return ret
	}).(TagValueIamBindingConditionOutput)
}

func (o TagValueIamBindingConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TagValueIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o TagValueIamBindingConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TagValueIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

func (o TagValueIamBindingConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TagValueIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type TagValueIamMemberCondition struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

// TagValueIamMemberConditionInput is an input type that accepts TagValueIamMemberConditionArgs and TagValueIamMemberConditionOutput values.
// You can construct a concrete instance of `TagValueIamMemberConditionInput` via:
//
//	TagValueIamMemberConditionArgs{...}
type TagValueIamMemberConditionInput interface {
	pulumi.Input

	ToTagValueIamMemberConditionOutput() TagValueIamMemberConditionOutput
	ToTagValueIamMemberConditionOutputWithContext(context.Context) TagValueIamMemberConditionOutput
}

type TagValueIamMemberConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (TagValueIamMemberConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TagValueIamMemberCondition)(nil)).Elem()
}

func (i TagValueIamMemberConditionArgs) ToTagValueIamMemberConditionOutput() TagValueIamMemberConditionOutput {
	return i.ToTagValueIamMemberConditionOutputWithContext(context.Background())
}

func (i TagValueIamMemberConditionArgs) ToTagValueIamMemberConditionOutputWithContext(ctx context.Context) TagValueIamMemberConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagValueIamMemberConditionOutput)
}

func (i TagValueIamMemberConditionArgs) ToTagValueIamMemberConditionPtrOutput() TagValueIamMemberConditionPtrOutput {
	return i.ToTagValueIamMemberConditionPtrOutputWithContext(context.Background())
}

func (i TagValueIamMemberConditionArgs) ToTagValueIamMemberConditionPtrOutputWithContext(ctx context.Context) TagValueIamMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagValueIamMemberConditionOutput).ToTagValueIamMemberConditionPtrOutputWithContext(ctx)
}

// TagValueIamMemberConditionPtrInput is an input type that accepts TagValueIamMemberConditionArgs, TagValueIamMemberConditionPtr and TagValueIamMemberConditionPtrOutput values.
// You can construct a concrete instance of `TagValueIamMemberConditionPtrInput` via:
//
//	        TagValueIamMemberConditionArgs{...}
//
//	or:
//
//	        nil
type TagValueIamMemberConditionPtrInput interface {
	pulumi.Input

	ToTagValueIamMemberConditionPtrOutput() TagValueIamMemberConditionPtrOutput
	ToTagValueIamMemberConditionPtrOutputWithContext(context.Context) TagValueIamMemberConditionPtrOutput
}

type tagValueIamMemberConditionPtrType TagValueIamMemberConditionArgs

func TagValueIamMemberConditionPtr(v *TagValueIamMemberConditionArgs) TagValueIamMemberConditionPtrInput {
	return (*tagValueIamMemberConditionPtrType)(v)
}

func (*tagValueIamMemberConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TagValueIamMemberCondition)(nil)).Elem()
}

func (i *tagValueIamMemberConditionPtrType) ToTagValueIamMemberConditionPtrOutput() TagValueIamMemberConditionPtrOutput {
	return i.ToTagValueIamMemberConditionPtrOutputWithContext(context.Background())
}

func (i *tagValueIamMemberConditionPtrType) ToTagValueIamMemberConditionPtrOutputWithContext(ctx context.Context) TagValueIamMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagValueIamMemberConditionPtrOutput)
}

type TagValueIamMemberConditionOutput struct{ *pulumi.OutputState }

func (TagValueIamMemberConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TagValueIamMemberCondition)(nil)).Elem()
}

func (o TagValueIamMemberConditionOutput) ToTagValueIamMemberConditionOutput() TagValueIamMemberConditionOutput {
	return o
}

func (o TagValueIamMemberConditionOutput) ToTagValueIamMemberConditionOutputWithContext(ctx context.Context) TagValueIamMemberConditionOutput {
	return o
}

func (o TagValueIamMemberConditionOutput) ToTagValueIamMemberConditionPtrOutput() TagValueIamMemberConditionPtrOutput {
	return o.ToTagValueIamMemberConditionPtrOutputWithContext(context.Background())
}

func (o TagValueIamMemberConditionOutput) ToTagValueIamMemberConditionPtrOutputWithContext(ctx context.Context) TagValueIamMemberConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TagValueIamMemberCondition) *TagValueIamMemberCondition {
		return &v
	}).(TagValueIamMemberConditionPtrOutput)
}

func (o TagValueIamMemberConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TagValueIamMemberCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o TagValueIamMemberConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v TagValueIamMemberCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o TagValueIamMemberConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v TagValueIamMemberCondition) string { return v.Title }).(pulumi.StringOutput)
}

type TagValueIamMemberConditionPtrOutput struct{ *pulumi.OutputState }

func (TagValueIamMemberConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TagValueIamMemberCondition)(nil)).Elem()
}

func (o TagValueIamMemberConditionPtrOutput) ToTagValueIamMemberConditionPtrOutput() TagValueIamMemberConditionPtrOutput {
	return o
}

func (o TagValueIamMemberConditionPtrOutput) ToTagValueIamMemberConditionPtrOutputWithContext(ctx context.Context) TagValueIamMemberConditionPtrOutput {
	return o
}

func (o TagValueIamMemberConditionPtrOutput) Elem() TagValueIamMemberConditionOutput {
	return o.ApplyT(func(v *TagValueIamMemberCondition) TagValueIamMemberCondition {
		if v != nil {
			return *v
		}
		var ret TagValueIamMemberCondition
		return ret
	}).(TagValueIamMemberConditionOutput)
}

func (o TagValueIamMemberConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TagValueIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o TagValueIamMemberConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TagValueIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

func (o TagValueIamMemberConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TagValueIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type GetTagKeysKey struct {
	// Creation time.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	CreateTime string `pulumi:"createTime"`
	// User-assigned description of the TagKey.
	Description string `pulumi:"description"`
	// an identifier for the resource with format `tagKeys/{{name}}`
	Name string `pulumi:"name"`
	// Namespaced name of the TagKey which is in the format `{parentNamespace}/{shortName}`.
	NamespacedName string `pulumi:"namespacedName"`
	// The resource name of the parent organization or project. It can be in format `organizations/{org_id}` or `projects/{project_id_or_number}`.
	Parent string `pulumi:"parent"`
	// A purpose denotes that this Tag is intended for use in policies of a specific policy engine, and will involve that policy engine in management operations involving this Tag. A purpose does not grant a policy engine exclusive rights to the Tag, and it may be referenced by other policy engines.
	Purpose string `pulumi:"purpose"`
	// Purpose data corresponds to the policy system that the tag is intended for. See documentation for Purpose for formatting of this field.
	PurposeData map[string]string `pulumi:"purposeData"`
	// The user friendly name for a TagKey. The short name should be unique for TagKeys wihting the same tag namespace.
	ShortName string `pulumi:"shortName"`
	// Update time.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	UpdateTime string `pulumi:"updateTime"`
}

// GetTagKeysKeyInput is an input type that accepts GetTagKeysKeyArgs and GetTagKeysKeyOutput values.
// You can construct a concrete instance of `GetTagKeysKeyInput` via:
//
//	GetTagKeysKeyArgs{...}
type GetTagKeysKeyInput interface {
	pulumi.Input

	ToGetTagKeysKeyOutput() GetTagKeysKeyOutput
	ToGetTagKeysKeyOutputWithContext(context.Context) GetTagKeysKeyOutput
}

type GetTagKeysKeyArgs struct {
	// Creation time.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// User-assigned description of the TagKey.
	Description pulumi.StringInput `pulumi:"description"`
	// an identifier for the resource with format `tagKeys/{{name}}`
	Name pulumi.StringInput `pulumi:"name"`
	// Namespaced name of the TagKey which is in the format `{parentNamespace}/{shortName}`.
	NamespacedName pulumi.StringInput `pulumi:"namespacedName"`
	// The resource name of the parent organization or project. It can be in format `organizations/{org_id}` or `projects/{project_id_or_number}`.
	Parent pulumi.StringInput `pulumi:"parent"`
	// A purpose denotes that this Tag is intended for use in policies of a specific policy engine, and will involve that policy engine in management operations involving this Tag. A purpose does not grant a policy engine exclusive rights to the Tag, and it may be referenced by other policy engines.
	Purpose pulumi.StringInput `pulumi:"purpose"`
	// Purpose data corresponds to the policy system that the tag is intended for. See documentation for Purpose for formatting of this field.
	PurposeData pulumi.StringMapInput `pulumi:"purposeData"`
	// The user friendly name for a TagKey. The short name should be unique for TagKeys wihting the same tag namespace.
	ShortName pulumi.StringInput `pulumi:"shortName"`
	// Update time.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
}

func (GetTagKeysKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTagKeysKey)(nil)).Elem()
}

func (i GetTagKeysKeyArgs) ToGetTagKeysKeyOutput() GetTagKeysKeyOutput {
	return i.ToGetTagKeysKeyOutputWithContext(context.Background())
}

func (i GetTagKeysKeyArgs) ToGetTagKeysKeyOutputWithContext(ctx context.Context) GetTagKeysKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTagKeysKeyOutput)
}

// GetTagKeysKeyArrayInput is an input type that accepts GetTagKeysKeyArray and GetTagKeysKeyArrayOutput values.
// You can construct a concrete instance of `GetTagKeysKeyArrayInput` via:
//
//	GetTagKeysKeyArray{ GetTagKeysKeyArgs{...} }
type GetTagKeysKeyArrayInput interface {
	pulumi.Input

	ToGetTagKeysKeyArrayOutput() GetTagKeysKeyArrayOutput
	ToGetTagKeysKeyArrayOutputWithContext(context.Context) GetTagKeysKeyArrayOutput
}

type GetTagKeysKeyArray []GetTagKeysKeyInput

func (GetTagKeysKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTagKeysKey)(nil)).Elem()
}

func (i GetTagKeysKeyArray) ToGetTagKeysKeyArrayOutput() GetTagKeysKeyArrayOutput {
	return i.ToGetTagKeysKeyArrayOutputWithContext(context.Background())
}

func (i GetTagKeysKeyArray) ToGetTagKeysKeyArrayOutputWithContext(ctx context.Context) GetTagKeysKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTagKeysKeyArrayOutput)
}

type GetTagKeysKeyOutput struct{ *pulumi.OutputState }

func (GetTagKeysKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTagKeysKey)(nil)).Elem()
}

func (o GetTagKeysKeyOutput) ToGetTagKeysKeyOutput() GetTagKeysKeyOutput {
	return o
}

func (o GetTagKeysKeyOutput) ToGetTagKeysKeyOutputWithContext(ctx context.Context) GetTagKeysKeyOutput {
	return o
}

// Creation time.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
func (o GetTagKeysKeyOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetTagKeysKey) string { return v.CreateTime }).(pulumi.StringOutput)
}

// User-assigned description of the TagKey.
func (o GetTagKeysKeyOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetTagKeysKey) string { return v.Description }).(pulumi.StringOutput)
}

// an identifier for the resource with format `tagKeys/{{name}}`
func (o GetTagKeysKeyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetTagKeysKey) string { return v.Name }).(pulumi.StringOutput)
}

// Namespaced name of the TagKey which is in the format `{parentNamespace}/{shortName}`.
func (o GetTagKeysKeyOutput) NamespacedName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTagKeysKey) string { return v.NamespacedName }).(pulumi.StringOutput)
}

// The resource name of the parent organization or project. It can be in format `organizations/{org_id}` or `projects/{project_id_or_number}`.
func (o GetTagKeysKeyOutput) Parent() pulumi.StringOutput {
	return o.ApplyT(func(v GetTagKeysKey) string { return v.Parent }).(pulumi.StringOutput)
}

// A purpose denotes that this Tag is intended for use in policies of a specific policy engine, and will involve that policy engine in management operations involving this Tag. A purpose does not grant a policy engine exclusive rights to the Tag, and it may be referenced by other policy engines.
func (o GetTagKeysKeyOutput) Purpose() pulumi.StringOutput {
	return o.ApplyT(func(v GetTagKeysKey) string { return v.Purpose }).(pulumi.StringOutput)
}

// Purpose data corresponds to the policy system that the tag is intended for. See documentation for Purpose for formatting of this field.
func (o GetTagKeysKeyOutput) PurposeData() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetTagKeysKey) map[string]string { return v.PurposeData }).(pulumi.StringMapOutput)
}

// The user friendly name for a TagKey. The short name should be unique for TagKeys wihting the same tag namespace.
func (o GetTagKeysKeyOutput) ShortName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTagKeysKey) string { return v.ShortName }).(pulumi.StringOutput)
}

// Update time.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
func (o GetTagKeysKeyOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetTagKeysKey) string { return v.UpdateTime }).(pulumi.StringOutput)
}

type GetTagKeysKeyArrayOutput struct{ *pulumi.OutputState }

func (GetTagKeysKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTagKeysKey)(nil)).Elem()
}

func (o GetTagKeysKeyArrayOutput) ToGetTagKeysKeyArrayOutput() GetTagKeysKeyArrayOutput {
	return o
}

func (o GetTagKeysKeyArrayOutput) ToGetTagKeysKeyArrayOutputWithContext(ctx context.Context) GetTagKeysKeyArrayOutput {
	return o
}

func (o GetTagKeysKeyArrayOutput) Index(i pulumi.IntInput) GetTagKeysKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTagKeysKey {
		return vs[0].([]GetTagKeysKey)[vs[1].(int)]
	}).(GetTagKeysKeyOutput)
}

type GetTagValuesValue struct {
	// Creation time.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	CreateTime string `pulumi:"createTime"`
	// User-assigned description of the TagValue.
	Description string `pulumi:"description"`
	// an identifier for the resource with format `tagValues/{{name}}`
	Name string `pulumi:"name"`
	// Namespaced name of the TagValue.
	NamespacedName string `pulumi:"namespacedName"`
	// The resource name of the parent tagKey in format `tagKey/{name}`.
	Parent string `pulumi:"parent"`
	// User-assigned short name for TagValue. The short name should be unique for TagValues within the same parent TagKey.
	ShortName string `pulumi:"shortName"`
	// Update time.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	UpdateTime string `pulumi:"updateTime"`
}

// GetTagValuesValueInput is an input type that accepts GetTagValuesValueArgs and GetTagValuesValueOutput values.
// You can construct a concrete instance of `GetTagValuesValueInput` via:
//
//	GetTagValuesValueArgs{...}
type GetTagValuesValueInput interface {
	pulumi.Input

	ToGetTagValuesValueOutput() GetTagValuesValueOutput
	ToGetTagValuesValueOutputWithContext(context.Context) GetTagValuesValueOutput
}

type GetTagValuesValueArgs struct {
	// Creation time.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// User-assigned description of the TagValue.
	Description pulumi.StringInput `pulumi:"description"`
	// an identifier for the resource with format `tagValues/{{name}}`
	Name pulumi.StringInput `pulumi:"name"`
	// Namespaced name of the TagValue.
	NamespacedName pulumi.StringInput `pulumi:"namespacedName"`
	// The resource name of the parent tagKey in format `tagKey/{name}`.
	Parent pulumi.StringInput `pulumi:"parent"`
	// User-assigned short name for TagValue. The short name should be unique for TagValues within the same parent TagKey.
	ShortName pulumi.StringInput `pulumi:"shortName"`
	// Update time.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
}

func (GetTagValuesValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTagValuesValue)(nil)).Elem()
}

func (i GetTagValuesValueArgs) ToGetTagValuesValueOutput() GetTagValuesValueOutput {
	return i.ToGetTagValuesValueOutputWithContext(context.Background())
}

func (i GetTagValuesValueArgs) ToGetTagValuesValueOutputWithContext(ctx context.Context) GetTagValuesValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTagValuesValueOutput)
}

// GetTagValuesValueArrayInput is an input type that accepts GetTagValuesValueArray and GetTagValuesValueArrayOutput values.
// You can construct a concrete instance of `GetTagValuesValueArrayInput` via:
//
//	GetTagValuesValueArray{ GetTagValuesValueArgs{...} }
type GetTagValuesValueArrayInput interface {
	pulumi.Input

	ToGetTagValuesValueArrayOutput() GetTagValuesValueArrayOutput
	ToGetTagValuesValueArrayOutputWithContext(context.Context) GetTagValuesValueArrayOutput
}

type GetTagValuesValueArray []GetTagValuesValueInput

func (GetTagValuesValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTagValuesValue)(nil)).Elem()
}

func (i GetTagValuesValueArray) ToGetTagValuesValueArrayOutput() GetTagValuesValueArrayOutput {
	return i.ToGetTagValuesValueArrayOutputWithContext(context.Background())
}

func (i GetTagValuesValueArray) ToGetTagValuesValueArrayOutputWithContext(ctx context.Context) GetTagValuesValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTagValuesValueArrayOutput)
}

type GetTagValuesValueOutput struct{ *pulumi.OutputState }

func (GetTagValuesValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTagValuesValue)(nil)).Elem()
}

func (o GetTagValuesValueOutput) ToGetTagValuesValueOutput() GetTagValuesValueOutput {
	return o
}

func (o GetTagValuesValueOutput) ToGetTagValuesValueOutputWithContext(ctx context.Context) GetTagValuesValueOutput {
	return o
}

// Creation time.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
func (o GetTagValuesValueOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetTagValuesValue) string { return v.CreateTime }).(pulumi.StringOutput)
}

// User-assigned description of the TagValue.
func (o GetTagValuesValueOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetTagValuesValue) string { return v.Description }).(pulumi.StringOutput)
}

// an identifier for the resource with format `tagValues/{{name}}`
func (o GetTagValuesValueOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetTagValuesValue) string { return v.Name }).(pulumi.StringOutput)
}

// Namespaced name of the TagValue.
func (o GetTagValuesValueOutput) NamespacedName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTagValuesValue) string { return v.NamespacedName }).(pulumi.StringOutput)
}

// The resource name of the parent tagKey in format `tagKey/{name}`.
func (o GetTagValuesValueOutput) Parent() pulumi.StringOutput {
	return o.ApplyT(func(v GetTagValuesValue) string { return v.Parent }).(pulumi.StringOutput)
}

// User-assigned short name for TagValue. The short name should be unique for TagValues within the same parent TagKey.
func (o GetTagValuesValueOutput) ShortName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTagValuesValue) string { return v.ShortName }).(pulumi.StringOutput)
}

// Update time.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
func (o GetTagValuesValueOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetTagValuesValue) string { return v.UpdateTime }).(pulumi.StringOutput)
}

type GetTagValuesValueArrayOutput struct{ *pulumi.OutputState }

func (GetTagValuesValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTagValuesValue)(nil)).Elem()
}

func (o GetTagValuesValueArrayOutput) ToGetTagValuesValueArrayOutput() GetTagValuesValueArrayOutput {
	return o
}

func (o GetTagValuesValueArrayOutput) ToGetTagValuesValueArrayOutputWithContext(ctx context.Context) GetTagValuesValueArrayOutput {
	return o
}

func (o GetTagValuesValueArrayOutput) Index(i pulumi.IntInput) GetTagValuesValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTagValuesValue {
		return vs[0].([]GetTagValuesValue)[vs[1].(int)]
	}).(GetTagValuesValueOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TagKeyIamBindingConditionInput)(nil)).Elem(), TagKeyIamBindingConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TagKeyIamBindingConditionPtrInput)(nil)).Elem(), TagKeyIamBindingConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TagKeyIamMemberConditionInput)(nil)).Elem(), TagKeyIamMemberConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TagKeyIamMemberConditionPtrInput)(nil)).Elem(), TagKeyIamMemberConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TagValueIamBindingConditionInput)(nil)).Elem(), TagValueIamBindingConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TagValueIamBindingConditionPtrInput)(nil)).Elem(), TagValueIamBindingConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TagValueIamMemberConditionInput)(nil)).Elem(), TagValueIamMemberConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TagValueIamMemberConditionPtrInput)(nil)).Elem(), TagValueIamMemberConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTagKeysKeyInput)(nil)).Elem(), GetTagKeysKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTagKeysKeyArrayInput)(nil)).Elem(), GetTagKeysKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTagValuesValueInput)(nil)).Elem(), GetTagValuesValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTagValuesValueArrayInput)(nil)).Elem(), GetTagValuesValueArray{})
	pulumi.RegisterOutputType(TagKeyIamBindingConditionOutput{})
	pulumi.RegisterOutputType(TagKeyIamBindingConditionPtrOutput{})
	pulumi.RegisterOutputType(TagKeyIamMemberConditionOutput{})
	pulumi.RegisterOutputType(TagKeyIamMemberConditionPtrOutput{})
	pulumi.RegisterOutputType(TagValueIamBindingConditionOutput{})
	pulumi.RegisterOutputType(TagValueIamBindingConditionPtrOutput{})
	pulumi.RegisterOutputType(TagValueIamMemberConditionOutput{})
	pulumi.RegisterOutputType(TagValueIamMemberConditionPtrOutput{})
	pulumi.RegisterOutputType(GetTagKeysKeyOutput{})
	pulumi.RegisterOutputType(GetTagKeysKeyArrayOutput{})
	pulumi.RegisterOutputType(GetTagValuesValueOutput{})
	pulumi.RegisterOutputType(GetTagValuesValueArrayOutput{})
}
