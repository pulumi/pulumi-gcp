// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package tags

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get a tag key within a GCP org by `parent` and `shortName`.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/tags"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := tags.LookupTagKey(ctx, &tags.LookupTagKeyArgs{
//				Parent:    "organizations/12345",
//				ShortName: "environment",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupTagKey(ctx *pulumi.Context, args *LookupTagKeyArgs, opts ...pulumi.InvokeOption) (*LookupTagKeyResult, error) {
	var rv LookupTagKeyResult
	err := ctx.Invoke("gcp:tags/getTagKey:getTagKey", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTagKey.
type LookupTagKeyArgs struct {
	// The resource name of the parent organization in format `organizations/{org_id}`.
	Parent string `pulumi:"parent"`
	// The tag key's short_name.
	ShortName string `pulumi:"shortName"`
}

// A collection of values returned by getTagKey.
type LookupTagKeyResult struct {
	CreateTime  string `pulumi:"createTime"`
	Description string `pulumi:"description"`
	// an identifier for the resource with format `tagKeys/{{name}}`
	Id             string `pulumi:"id"`
	Name           string `pulumi:"name"`
	NamespacedName string `pulumi:"namespacedName"`
	Parent         string `pulumi:"parent"`
	ShortName      string `pulumi:"shortName"`
	UpdateTime     string `pulumi:"updateTime"`
}

func LookupTagKeyOutput(ctx *pulumi.Context, args LookupTagKeyOutputArgs, opts ...pulumi.InvokeOption) LookupTagKeyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupTagKeyResult, error) {
			args := v.(LookupTagKeyArgs)
			r, err := LookupTagKey(ctx, &args, opts...)
			var s LookupTagKeyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupTagKeyResultOutput)
}

// A collection of arguments for invoking getTagKey.
type LookupTagKeyOutputArgs struct {
	// The resource name of the parent organization in format `organizations/{org_id}`.
	Parent pulumi.StringInput `pulumi:"parent"`
	// The tag key's short_name.
	ShortName pulumi.StringInput `pulumi:"shortName"`
}

func (LookupTagKeyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTagKeyArgs)(nil)).Elem()
}

// A collection of values returned by getTagKey.
type LookupTagKeyResultOutput struct{ *pulumi.OutputState }

func (LookupTagKeyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTagKeyResult)(nil)).Elem()
}

func (o LookupTagKeyResultOutput) ToLookupTagKeyResultOutput() LookupTagKeyResultOutput {
	return o
}

func (o LookupTagKeyResultOutput) ToLookupTagKeyResultOutputWithContext(ctx context.Context) LookupTagKeyResultOutput {
	return o
}

func (o LookupTagKeyResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTagKeyResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

func (o LookupTagKeyResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTagKeyResult) string { return v.Description }).(pulumi.StringOutput)
}

// an identifier for the resource with format `tagKeys/{{name}}`
func (o LookupTagKeyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTagKeyResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupTagKeyResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTagKeyResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupTagKeyResultOutput) NamespacedName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTagKeyResult) string { return v.NamespacedName }).(pulumi.StringOutput)
}

func (o LookupTagKeyResultOutput) Parent() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTagKeyResult) string { return v.Parent }).(pulumi.StringOutput)
}

func (o LookupTagKeyResultOutput) ShortName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTagKeyResult) string { return v.ShortName }).(pulumi.StringOutput)
}

func (o LookupTagKeyResultOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTagKeyResult) string { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupTagKeyResultOutput{})
}
