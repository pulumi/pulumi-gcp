// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package tags

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves the current IAM policy data for tagkey
//
// ## example
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/tags"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := tags.LookupTagKeyIamPolicy(ctx, &tags.LookupTagKeyIamPolicyArgs{
//				TagKey: google_tags_tag_key.Key.Name,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupTagKeyIamPolicy(ctx *pulumi.Context, args *LookupTagKeyIamPolicyArgs, opts ...pulumi.InvokeOption) (*LookupTagKeyIamPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupTagKeyIamPolicyResult
	err := ctx.Invoke("gcp:tags/getTagKeyIamPolicy:getTagKeyIamPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTagKeyIamPolicy.
type LookupTagKeyIamPolicyArgs struct {
	// Used to find the parent resource to bind the IAM policy to
	TagKey string `pulumi:"tagKey"`
}

// A collection of values returned by getTagKeyIamPolicy.
type LookupTagKeyIamPolicyResult struct {
	// (Computed) The etag of the IAM policy.
	Etag string `pulumi:"etag"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// (Required only by `tags.TagKeyIamPolicy`) The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData string `pulumi:"policyData"`
	TagKey     string `pulumi:"tagKey"`
}

func LookupTagKeyIamPolicyOutput(ctx *pulumi.Context, args LookupTagKeyIamPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupTagKeyIamPolicyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupTagKeyIamPolicyResult, error) {
			args := v.(LookupTagKeyIamPolicyArgs)
			r, err := LookupTagKeyIamPolicy(ctx, &args, opts...)
			var s LookupTagKeyIamPolicyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupTagKeyIamPolicyResultOutput)
}

// A collection of arguments for invoking getTagKeyIamPolicy.
type LookupTagKeyIamPolicyOutputArgs struct {
	// Used to find the parent resource to bind the IAM policy to
	TagKey pulumi.StringInput `pulumi:"tagKey"`
}

func (LookupTagKeyIamPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTagKeyIamPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getTagKeyIamPolicy.
type LookupTagKeyIamPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupTagKeyIamPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTagKeyIamPolicyResult)(nil)).Elem()
}

func (o LookupTagKeyIamPolicyResultOutput) ToLookupTagKeyIamPolicyResultOutput() LookupTagKeyIamPolicyResultOutput {
	return o
}

func (o LookupTagKeyIamPolicyResultOutput) ToLookupTagKeyIamPolicyResultOutputWithContext(ctx context.Context) LookupTagKeyIamPolicyResultOutput {
	return o
}

// (Computed) The etag of the IAM policy.
func (o LookupTagKeyIamPolicyResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTagKeyIamPolicyResult) string { return v.Etag }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupTagKeyIamPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTagKeyIamPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

// (Required only by `tags.TagKeyIamPolicy`) The policy data generated by
// a `organizations.getIAMPolicy` data source.
func (o LookupTagKeyIamPolicyResultOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTagKeyIamPolicyResult) string { return v.PolicyData }).(pulumi.StringOutput)
}

func (o LookupTagKeyIamPolicyResultOutput) TagKey() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTagKeyIamPolicyResult) string { return v.TagKey }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupTagKeyIamPolicyResultOutput{})
}
