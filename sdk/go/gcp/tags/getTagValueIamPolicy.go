// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package tags

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves the current IAM policy data for tagvalue
//
// ## example
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/tags"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := tags.LookupTagValueIamPolicy(ctx, &tags.LookupTagValueIamPolicyArgs{
//				TagValue: google_tags_tag_value.Value.Name,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupTagValueIamPolicy(ctx *pulumi.Context, args *LookupTagValueIamPolicyArgs, opts ...pulumi.InvokeOption) (*LookupTagValueIamPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupTagValueIamPolicyResult
	err := ctx.Invoke("gcp:tags/getTagValueIamPolicy:getTagValueIamPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTagValueIamPolicy.
type LookupTagValueIamPolicyArgs struct {
	// Used to find the parent resource to bind the IAM policy to
	TagValue string `pulumi:"tagValue"`
}

// A collection of values returned by getTagValueIamPolicy.
type LookupTagValueIamPolicyResult struct {
	// (Computed) The etag of the IAM policy.
	Etag string `pulumi:"etag"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// (Required only by `tags.TagValueIamPolicy`) The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData string `pulumi:"policyData"`
	TagValue   string `pulumi:"tagValue"`
}

func LookupTagValueIamPolicyOutput(ctx *pulumi.Context, args LookupTagValueIamPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupTagValueIamPolicyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupTagValueIamPolicyResult, error) {
			args := v.(LookupTagValueIamPolicyArgs)
			r, err := LookupTagValueIamPolicy(ctx, &args, opts...)
			var s LookupTagValueIamPolicyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupTagValueIamPolicyResultOutput)
}

// A collection of arguments for invoking getTagValueIamPolicy.
type LookupTagValueIamPolicyOutputArgs struct {
	// Used to find the parent resource to bind the IAM policy to
	TagValue pulumi.StringInput `pulumi:"tagValue"`
}

func (LookupTagValueIamPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTagValueIamPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getTagValueIamPolicy.
type LookupTagValueIamPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupTagValueIamPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTagValueIamPolicyResult)(nil)).Elem()
}

func (o LookupTagValueIamPolicyResultOutput) ToLookupTagValueIamPolicyResultOutput() LookupTagValueIamPolicyResultOutput {
	return o
}

func (o LookupTagValueIamPolicyResultOutput) ToLookupTagValueIamPolicyResultOutputWithContext(ctx context.Context) LookupTagValueIamPolicyResultOutput {
	return o
}

// (Computed) The etag of the IAM policy.
func (o LookupTagValueIamPolicyResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTagValueIamPolicyResult) string { return v.Etag }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupTagValueIamPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTagValueIamPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

// (Required only by `tags.TagValueIamPolicy`) The policy data generated by
// a `organizations.getIAMPolicy` data source.
func (o LookupTagValueIamPolicyResultOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTagValueIamPolicyResult) string { return v.PolicyData }).(pulumi.StringOutput)
}

func (o LookupTagValueIamPolicyResultOutput) TagValue() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTagValueIamPolicyResult) string { return v.TagValue }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupTagValueIamPolicyResultOutput{})
}
