// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package tags

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Three different resources help you manage your IAM policy for Tags TagValue. Each of these resources serves a different use case:
//
// * `tags.TagValueIamPlicy`: Authoritative. Sets the IAM policy for the tagvalue and replaces any existing policy already attached.
// * `tags.TagValueIamBinding`: Authoritative for a given role. Updates the IAM policy to grant a role to a list of members. Other roles within the IAM policy for the tagvalue are preserved.
// * `tags.TagValueIamMember`: Non-authoritative. Updates the IAM policy to grant a role to a new member. Other members for the role for the tagvalue are preserved.
//
// > **Note:** `tags.TagValueIamPlicy` **cannot** be used in conjunction with `tags.TagValueIamBinding` and `tags.TagValueIamMember` or they will fight over what your policy should be.
//
// > **Note:** `tags.TagValueIamBinding` resources **can be** used in conjunction with `tags.TagValueIamMember` resources **only if** they do not grant privilege to the same role.
//
// ## google\_tags\_tag\_value\_iam\_policy
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-gcp/sdk/v4/go/gcp/organizations"
// 	"github.com/pulumi/pulumi-gcp/sdk/v4/go/gcp/tags"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		admin, err := organizations.LookupIAMPolicy(ctx, &organizations.LookupIAMPolicyArgs{
// 			Bindings: []organizations.GetIAMPolicyBinding{
// 				organizations.GetIAMPolicyBinding{
// 					Role: "roles/viewer",
// 					Members: []string{
// 						"user:jane@example.com",
// 					},
// 				},
// 			},
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		_, err = tags.NewTagValueIamPlicy(ctx, "policy", &tags.TagValueIamPlicyArgs{
// 			TagValue:   pulumi.Any(google_tags_tag_value.Value.Name),
// 			PolicyData: pulumi.String(admin.PolicyData),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## google\_tags\_tag\_value\_iam\_binding
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-gcp/sdk/v4/go/gcp/tags"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := tags.NewTagValueIamBinding(ctx, "binding", &tags.TagValueIamBindingArgs{
// 			TagValue: pulumi.Any(google_tags_tag_value.Value.Name),
// 			Role:     pulumi.String("roles/viewer"),
// 			Members: pulumi.StringArray{
// 				pulumi.String("user:jane@example.com"),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## google\_tags\_tag\_value\_iam\_member
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-gcp/sdk/v4/go/gcp/tags"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := tags.NewTagValueIamMember(ctx, "member", &tags.TagValueIamMemberArgs{
// 			TagValue: pulumi.Any(google_tags_tag_value.Value.Name),
// 			Role:     pulumi.String("roles/viewer"),
// 			Member:   pulumi.String("user:jane@example.com"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// For all import syntaxes, the "resource in question" can take any of the following forms* tagValues/{{name}} * {{name}} Any variables not passed in the import command will be taken from the provider configuration. Tags tagvalue IAM resources can be imported using the resource identifiers, role, and member. IAM member imports use space-delimited identifiersthe resource in question, the role, and the member identity, e.g.
//
// ```sh
//  $ pulumi import gcp:tags/tagValueIamPlicy:TagValueIamPlicy editor "tagValues/{{tag_value}} roles/viewer user:jane@example.com"
// ```
//
//  IAM binding imports use space-delimited identifiersthe resource in question and the role, e.g.
//
// ```sh
//  $ pulumi import gcp:tags/tagValueIamPlicy:TagValueIamPlicy editor "tagValues/{{tag_value}} roles/viewer"
// ```
//
//  IAM policy imports use the identifier of the resource in question, e.g.
//
// ```sh
//  $ pulumi import gcp:tags/tagValueIamPlicy:TagValueIamPlicy editor tagValues/{{tag_value}}
// ```
//
//  -> **Custom Roles**If you're importing a IAM resource with a custom role, make sure to use the
//
// full name of the custom role, e.g. `[projects/my-project|organizations/my-org]/roles/my-custom-role`.
type TagValueIamPlicy struct {
	pulumi.CustomResourceState

	// (Computed) The etag of the IAM policy.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData pulumi.StringOutput `pulumi:"policyData"`
	// Used to find the parent resource to bind the IAM policy to
	TagValue pulumi.StringOutput `pulumi:"tagValue"`
}

// NewTagValueIamPlicy registers a new resource with the given unique name, arguments, and options.
func NewTagValueIamPlicy(ctx *pulumi.Context,
	name string, args *TagValueIamPlicyArgs, opts ...pulumi.ResourceOption) (*TagValueIamPlicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PolicyData == nil {
		return nil, errors.New("invalid value for required argument 'PolicyData'")
	}
	if args.TagValue == nil {
		return nil, errors.New("invalid value for required argument 'TagValue'")
	}
	var resource TagValueIamPlicy
	err := ctx.RegisterResource("gcp:tags/tagValueIamPlicy:TagValueIamPlicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTagValueIamPlicy gets an existing TagValueIamPlicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTagValueIamPlicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TagValueIamPlicyState, opts ...pulumi.ResourceOption) (*TagValueIamPlicy, error) {
	var resource TagValueIamPlicy
	err := ctx.ReadResource("gcp:tags/tagValueIamPlicy:TagValueIamPlicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TagValueIamPlicy resources.
type tagValueIamPlicyState struct {
	// (Computed) The etag of the IAM policy.
	Etag *string `pulumi:"etag"`
	// The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData *string `pulumi:"policyData"`
	// Used to find the parent resource to bind the IAM policy to
	TagValue *string `pulumi:"tagValue"`
}

type TagValueIamPlicyState struct {
	// (Computed) The etag of the IAM policy.
	Etag pulumi.StringPtrInput
	// The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData pulumi.StringPtrInput
	// Used to find the parent resource to bind the IAM policy to
	TagValue pulumi.StringPtrInput
}

func (TagValueIamPlicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*tagValueIamPlicyState)(nil)).Elem()
}

type tagValueIamPlicyArgs struct {
	// The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData string `pulumi:"policyData"`
	// Used to find the parent resource to bind the IAM policy to
	TagValue string `pulumi:"tagValue"`
}

// The set of arguments for constructing a TagValueIamPlicy resource.
type TagValueIamPlicyArgs struct {
	// The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData pulumi.StringInput
	// Used to find the parent resource to bind the IAM policy to
	TagValue pulumi.StringInput
}

func (TagValueIamPlicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*tagValueIamPlicyArgs)(nil)).Elem()
}

type TagValueIamPlicyInput interface {
	pulumi.Input

	ToTagValueIamPlicyOutput() TagValueIamPlicyOutput
	ToTagValueIamPlicyOutputWithContext(ctx context.Context) TagValueIamPlicyOutput
}

func (*TagValueIamPlicy) ElementType() reflect.Type {
	return reflect.TypeOf((*TagValueIamPlicy)(nil))
}

func (i *TagValueIamPlicy) ToTagValueIamPlicyOutput() TagValueIamPlicyOutput {
	return i.ToTagValueIamPlicyOutputWithContext(context.Background())
}

func (i *TagValueIamPlicy) ToTagValueIamPlicyOutputWithContext(ctx context.Context) TagValueIamPlicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagValueIamPlicyOutput)
}

func (i *TagValueIamPlicy) ToTagValueIamPlicyPtrOutput() TagValueIamPlicyPtrOutput {
	return i.ToTagValueIamPlicyPtrOutputWithContext(context.Background())
}

func (i *TagValueIamPlicy) ToTagValueIamPlicyPtrOutputWithContext(ctx context.Context) TagValueIamPlicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagValueIamPlicyPtrOutput)
}

type TagValueIamPlicyPtrInput interface {
	pulumi.Input

	ToTagValueIamPlicyPtrOutput() TagValueIamPlicyPtrOutput
	ToTagValueIamPlicyPtrOutputWithContext(ctx context.Context) TagValueIamPlicyPtrOutput
}

type tagValueIamPlicyPtrType TagValueIamPlicyArgs

func (*tagValueIamPlicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TagValueIamPlicy)(nil))
}

func (i *tagValueIamPlicyPtrType) ToTagValueIamPlicyPtrOutput() TagValueIamPlicyPtrOutput {
	return i.ToTagValueIamPlicyPtrOutputWithContext(context.Background())
}

func (i *tagValueIamPlicyPtrType) ToTagValueIamPlicyPtrOutputWithContext(ctx context.Context) TagValueIamPlicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagValueIamPlicyPtrOutput)
}

// TagValueIamPlicyArrayInput is an input type that accepts TagValueIamPlicyArray and TagValueIamPlicyArrayOutput values.
// You can construct a concrete instance of `TagValueIamPlicyArrayInput` via:
//
//          TagValueIamPlicyArray{ TagValueIamPlicyArgs{...} }
type TagValueIamPlicyArrayInput interface {
	pulumi.Input

	ToTagValueIamPlicyArrayOutput() TagValueIamPlicyArrayOutput
	ToTagValueIamPlicyArrayOutputWithContext(context.Context) TagValueIamPlicyArrayOutput
}

type TagValueIamPlicyArray []TagValueIamPlicyInput

func (TagValueIamPlicyArray) ElementType() reflect.Type {
	return reflect.TypeOf(([]*TagValueIamPlicy)(nil))
}

func (i TagValueIamPlicyArray) ToTagValueIamPlicyArrayOutput() TagValueIamPlicyArrayOutput {
	return i.ToTagValueIamPlicyArrayOutputWithContext(context.Background())
}

func (i TagValueIamPlicyArray) ToTagValueIamPlicyArrayOutputWithContext(ctx context.Context) TagValueIamPlicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagValueIamPlicyArrayOutput)
}

// TagValueIamPlicyMapInput is an input type that accepts TagValueIamPlicyMap and TagValueIamPlicyMapOutput values.
// You can construct a concrete instance of `TagValueIamPlicyMapInput` via:
//
//          TagValueIamPlicyMap{ "key": TagValueIamPlicyArgs{...} }
type TagValueIamPlicyMapInput interface {
	pulumi.Input

	ToTagValueIamPlicyMapOutput() TagValueIamPlicyMapOutput
	ToTagValueIamPlicyMapOutputWithContext(context.Context) TagValueIamPlicyMapOutput
}

type TagValueIamPlicyMap map[string]TagValueIamPlicyInput

func (TagValueIamPlicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((map[string]*TagValueIamPlicy)(nil))
}

func (i TagValueIamPlicyMap) ToTagValueIamPlicyMapOutput() TagValueIamPlicyMapOutput {
	return i.ToTagValueIamPlicyMapOutputWithContext(context.Background())
}

func (i TagValueIamPlicyMap) ToTagValueIamPlicyMapOutputWithContext(ctx context.Context) TagValueIamPlicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagValueIamPlicyMapOutput)
}

type TagValueIamPlicyOutput struct {
	*pulumi.OutputState
}

func (TagValueIamPlicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TagValueIamPlicy)(nil))
}

func (o TagValueIamPlicyOutput) ToTagValueIamPlicyOutput() TagValueIamPlicyOutput {
	return o
}

func (o TagValueIamPlicyOutput) ToTagValueIamPlicyOutputWithContext(ctx context.Context) TagValueIamPlicyOutput {
	return o
}

func (o TagValueIamPlicyOutput) ToTagValueIamPlicyPtrOutput() TagValueIamPlicyPtrOutput {
	return o.ToTagValueIamPlicyPtrOutputWithContext(context.Background())
}

func (o TagValueIamPlicyOutput) ToTagValueIamPlicyPtrOutputWithContext(ctx context.Context) TagValueIamPlicyPtrOutput {
	return o.ApplyT(func(v TagValueIamPlicy) *TagValueIamPlicy {
		return &v
	}).(TagValueIamPlicyPtrOutput)
}

type TagValueIamPlicyPtrOutput struct {
	*pulumi.OutputState
}

func (TagValueIamPlicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TagValueIamPlicy)(nil))
}

func (o TagValueIamPlicyPtrOutput) ToTagValueIamPlicyPtrOutput() TagValueIamPlicyPtrOutput {
	return o
}

func (o TagValueIamPlicyPtrOutput) ToTagValueIamPlicyPtrOutputWithContext(ctx context.Context) TagValueIamPlicyPtrOutput {
	return o
}

type TagValueIamPlicyArrayOutput struct{ *pulumi.OutputState }

func (TagValueIamPlicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TagValueIamPlicy)(nil))
}

func (o TagValueIamPlicyArrayOutput) ToTagValueIamPlicyArrayOutput() TagValueIamPlicyArrayOutput {
	return o
}

func (o TagValueIamPlicyArrayOutput) ToTagValueIamPlicyArrayOutputWithContext(ctx context.Context) TagValueIamPlicyArrayOutput {
	return o
}

func (o TagValueIamPlicyArrayOutput) Index(i pulumi.IntInput) TagValueIamPlicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TagValueIamPlicy {
		return vs[0].([]TagValueIamPlicy)[vs[1].(int)]
	}).(TagValueIamPlicyOutput)
}

type TagValueIamPlicyMapOutput struct{ *pulumi.OutputState }

func (TagValueIamPlicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]TagValueIamPlicy)(nil))
}

func (o TagValueIamPlicyMapOutput) ToTagValueIamPlicyMapOutput() TagValueIamPlicyMapOutput {
	return o
}

func (o TagValueIamPlicyMapOutput) ToTagValueIamPlicyMapOutputWithContext(ctx context.Context) TagValueIamPlicyMapOutput {
	return o
}

func (o TagValueIamPlicyMapOutput) MapIndex(k pulumi.StringInput) TagValueIamPlicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) TagValueIamPlicy {
		return vs[0].(map[string]TagValueIamPlicy)[vs[1].(string)]
	}).(TagValueIamPlicyOutput)
}

func init() {
	pulumi.RegisterOutputType(TagValueIamPlicyOutput{})
	pulumi.RegisterOutputType(TagValueIamPlicyPtrOutput{})
	pulumi.RegisterOutputType(TagValueIamPlicyArrayOutput{})
	pulumi.RegisterOutputType(TagValueIamPlicyMapOutput{})
}
