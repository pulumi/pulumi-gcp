// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package appengine

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A NetworkSettings resource is a container for ingress settings for a version or service.
//
// To get more information about ServiceNetworkSettings, see:
//
// * [API documentation](https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1/apps.services)
//
// ## Example Usage
// ### App Engine Service Network Settings
//
// ```go
// package main
//
// import (
// 	"fmt"
//
// 	"github.com/pulumi/pulumi-gcp/sdk/v5/go/gcp/appengine"
// 	"github.com/pulumi/pulumi-gcp/sdk/v5/go/gcp/storage"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		bucket, err := storage.NewBucket(ctx, "bucket", nil)
// 		if err != nil {
// 			return err
// 		}
// 		object, err := storage.NewBucketObject(ctx, "object", &storage.BucketObjectArgs{
// 			Bucket: bucket.Name,
// 			Source: pulumi.NewFileAsset("./test-fixtures/appengine/hello-world.zip"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		liveappV1, err := appengine.NewStandardAppVersion(ctx, "liveappV1", &appengine.StandardAppVersionArgs{
// 			VersionId:              pulumi.String("v1"),
// 			Service:                pulumi.String("liveapp"),
// 			DeleteServiceOnDestroy: pulumi.Bool(true),
// 			Runtime:                pulumi.String("nodejs10"),
// 			Entrypoint: &appengine.StandardAppVersionEntrypointArgs{
// 				Shell: pulumi.String("node ./app.js"),
// 			},
// 			Deployment: &appengine.StandardAppVersionDeploymentArgs{
// 				Zip: &appengine.StandardAppVersionDeploymentZipArgs{
// 					SourceUrl: pulumi.All(bucket.Name, object.Name).ApplyT(func(_args []interface{}) (string, error) {
// 						bucketName := _args[0].(string)
// 						objectName := _args[1].(string)
// 						return fmt.Sprintf("%v%v%v%v", "https://storage.googleapis.com/", bucketName, "/", objectName), nil
// 					}).(pulumi.StringOutput),
// 				},
// 			},
// 			EnvVariables: pulumi.StringMap{
// 				"port": pulumi.String("8080"),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		_, err = appengine.NewServiceNetworkSettings(ctx, "liveapp", &appengine.ServiceNetworkSettingsArgs{
// 			Service: liveappV1.Service,
// 			NetworkSettings: &appengine.ServiceNetworkSettingsNetworkSettingsArgs{
// 				IngressTrafficAllowed: pulumi.String("INGRESS_TRAFFIC_ALLOWED_INTERNAL_ONLY"),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// ServiceNetworkSettings can be imported using any of these accepted formats
//
// ```sh
//  $ pulumi import gcp:appengine/serviceNetworkSettings:ServiceNetworkSettings default apps/{{project}}/services/{{service}}
// ```
//
// ```sh
//  $ pulumi import gcp:appengine/serviceNetworkSettings:ServiceNetworkSettings default {{project}}/{{service}}
// ```
//
// ```sh
//  $ pulumi import gcp:appengine/serviceNetworkSettings:ServiceNetworkSettings default {{service}}
// ```
type ServiceNetworkSettings struct {
	pulumi.CustomResourceState

	// Ingress settings for this service. Will apply to all versions.
	// Structure is documented below.
	NetworkSettings ServiceNetworkSettingsNetworkSettingsOutput `pulumi:"networkSettings"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
	// The name of the service these settings apply to.
	Service pulumi.StringOutput `pulumi:"service"`
}

// NewServiceNetworkSettings registers a new resource with the given unique name, arguments, and options.
func NewServiceNetworkSettings(ctx *pulumi.Context,
	name string, args *ServiceNetworkSettingsArgs, opts ...pulumi.ResourceOption) (*ServiceNetworkSettings, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.NetworkSettings == nil {
		return nil, errors.New("invalid value for required argument 'NetworkSettings'")
	}
	if args.Service == nil {
		return nil, errors.New("invalid value for required argument 'Service'")
	}
	var resource ServiceNetworkSettings
	err := ctx.RegisterResource("gcp:appengine/serviceNetworkSettings:ServiceNetworkSettings", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceNetworkSettings gets an existing ServiceNetworkSettings resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceNetworkSettings(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceNetworkSettingsState, opts ...pulumi.ResourceOption) (*ServiceNetworkSettings, error) {
	var resource ServiceNetworkSettings
	err := ctx.ReadResource("gcp:appengine/serviceNetworkSettings:ServiceNetworkSettings", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceNetworkSettings resources.
type serviceNetworkSettingsState struct {
	// Ingress settings for this service. Will apply to all versions.
	// Structure is documented below.
	NetworkSettings *ServiceNetworkSettingsNetworkSettings `pulumi:"networkSettings"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// The name of the service these settings apply to.
	Service *string `pulumi:"service"`
}

type ServiceNetworkSettingsState struct {
	// Ingress settings for this service. Will apply to all versions.
	// Structure is documented below.
	NetworkSettings ServiceNetworkSettingsNetworkSettingsPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// The name of the service these settings apply to.
	Service pulumi.StringPtrInput
}

func (ServiceNetworkSettingsState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceNetworkSettingsState)(nil)).Elem()
}

type serviceNetworkSettingsArgs struct {
	// Ingress settings for this service. Will apply to all versions.
	// Structure is documented below.
	NetworkSettings ServiceNetworkSettingsNetworkSettings `pulumi:"networkSettings"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// The name of the service these settings apply to.
	Service string `pulumi:"service"`
}

// The set of arguments for constructing a ServiceNetworkSettings resource.
type ServiceNetworkSettingsArgs struct {
	// Ingress settings for this service. Will apply to all versions.
	// Structure is documented below.
	NetworkSettings ServiceNetworkSettingsNetworkSettingsInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// The name of the service these settings apply to.
	Service pulumi.StringInput
}

func (ServiceNetworkSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceNetworkSettingsArgs)(nil)).Elem()
}

type ServiceNetworkSettingsInput interface {
	pulumi.Input

	ToServiceNetworkSettingsOutput() ServiceNetworkSettingsOutput
	ToServiceNetworkSettingsOutputWithContext(ctx context.Context) ServiceNetworkSettingsOutput
}

func (*ServiceNetworkSettings) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNetworkSettings)(nil))
}

func (i *ServiceNetworkSettings) ToServiceNetworkSettingsOutput() ServiceNetworkSettingsOutput {
	return i.ToServiceNetworkSettingsOutputWithContext(context.Background())
}

func (i *ServiceNetworkSettings) ToServiceNetworkSettingsOutputWithContext(ctx context.Context) ServiceNetworkSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNetworkSettingsOutput)
}

func (i *ServiceNetworkSettings) ToServiceNetworkSettingsPtrOutput() ServiceNetworkSettingsPtrOutput {
	return i.ToServiceNetworkSettingsPtrOutputWithContext(context.Background())
}

func (i *ServiceNetworkSettings) ToServiceNetworkSettingsPtrOutputWithContext(ctx context.Context) ServiceNetworkSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNetworkSettingsPtrOutput)
}

type ServiceNetworkSettingsPtrInput interface {
	pulumi.Input

	ToServiceNetworkSettingsPtrOutput() ServiceNetworkSettingsPtrOutput
	ToServiceNetworkSettingsPtrOutputWithContext(ctx context.Context) ServiceNetworkSettingsPtrOutput
}

type serviceNetworkSettingsPtrType ServiceNetworkSettingsArgs

func (*serviceNetworkSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceNetworkSettings)(nil))
}

func (i *serviceNetworkSettingsPtrType) ToServiceNetworkSettingsPtrOutput() ServiceNetworkSettingsPtrOutput {
	return i.ToServiceNetworkSettingsPtrOutputWithContext(context.Background())
}

func (i *serviceNetworkSettingsPtrType) ToServiceNetworkSettingsPtrOutputWithContext(ctx context.Context) ServiceNetworkSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNetworkSettingsPtrOutput)
}

// ServiceNetworkSettingsArrayInput is an input type that accepts ServiceNetworkSettingsArray and ServiceNetworkSettingsArrayOutput values.
// You can construct a concrete instance of `ServiceNetworkSettingsArrayInput` via:
//
//          ServiceNetworkSettingsArray{ ServiceNetworkSettingsArgs{...} }
type ServiceNetworkSettingsArrayInput interface {
	pulumi.Input

	ToServiceNetworkSettingsArrayOutput() ServiceNetworkSettingsArrayOutput
	ToServiceNetworkSettingsArrayOutputWithContext(context.Context) ServiceNetworkSettingsArrayOutput
}

type ServiceNetworkSettingsArray []ServiceNetworkSettingsInput

func (ServiceNetworkSettingsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceNetworkSettings)(nil)).Elem()
}

func (i ServiceNetworkSettingsArray) ToServiceNetworkSettingsArrayOutput() ServiceNetworkSettingsArrayOutput {
	return i.ToServiceNetworkSettingsArrayOutputWithContext(context.Background())
}

func (i ServiceNetworkSettingsArray) ToServiceNetworkSettingsArrayOutputWithContext(ctx context.Context) ServiceNetworkSettingsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNetworkSettingsArrayOutput)
}

// ServiceNetworkSettingsMapInput is an input type that accepts ServiceNetworkSettingsMap and ServiceNetworkSettingsMapOutput values.
// You can construct a concrete instance of `ServiceNetworkSettingsMapInput` via:
//
//          ServiceNetworkSettingsMap{ "key": ServiceNetworkSettingsArgs{...} }
type ServiceNetworkSettingsMapInput interface {
	pulumi.Input

	ToServiceNetworkSettingsMapOutput() ServiceNetworkSettingsMapOutput
	ToServiceNetworkSettingsMapOutputWithContext(context.Context) ServiceNetworkSettingsMapOutput
}

type ServiceNetworkSettingsMap map[string]ServiceNetworkSettingsInput

func (ServiceNetworkSettingsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceNetworkSettings)(nil)).Elem()
}

func (i ServiceNetworkSettingsMap) ToServiceNetworkSettingsMapOutput() ServiceNetworkSettingsMapOutput {
	return i.ToServiceNetworkSettingsMapOutputWithContext(context.Background())
}

func (i ServiceNetworkSettingsMap) ToServiceNetworkSettingsMapOutputWithContext(ctx context.Context) ServiceNetworkSettingsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNetworkSettingsMapOutput)
}

type ServiceNetworkSettingsOutput struct{ *pulumi.OutputState }

func (ServiceNetworkSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNetworkSettings)(nil))
}

func (o ServiceNetworkSettingsOutput) ToServiceNetworkSettingsOutput() ServiceNetworkSettingsOutput {
	return o
}

func (o ServiceNetworkSettingsOutput) ToServiceNetworkSettingsOutputWithContext(ctx context.Context) ServiceNetworkSettingsOutput {
	return o
}

func (o ServiceNetworkSettingsOutput) ToServiceNetworkSettingsPtrOutput() ServiceNetworkSettingsPtrOutput {
	return o.ToServiceNetworkSettingsPtrOutputWithContext(context.Background())
}

func (o ServiceNetworkSettingsOutput) ToServiceNetworkSettingsPtrOutputWithContext(ctx context.Context) ServiceNetworkSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceNetworkSettings) *ServiceNetworkSettings {
		return &v
	}).(ServiceNetworkSettingsPtrOutput)
}

type ServiceNetworkSettingsPtrOutput struct{ *pulumi.OutputState }

func (ServiceNetworkSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceNetworkSettings)(nil))
}

func (o ServiceNetworkSettingsPtrOutput) ToServiceNetworkSettingsPtrOutput() ServiceNetworkSettingsPtrOutput {
	return o
}

func (o ServiceNetworkSettingsPtrOutput) ToServiceNetworkSettingsPtrOutputWithContext(ctx context.Context) ServiceNetworkSettingsPtrOutput {
	return o
}

func (o ServiceNetworkSettingsPtrOutput) Elem() ServiceNetworkSettingsOutput {
	return o.ApplyT(func(v *ServiceNetworkSettings) ServiceNetworkSettings {
		if v != nil {
			return *v
		}
		var ret ServiceNetworkSettings
		return ret
	}).(ServiceNetworkSettingsOutput)
}

type ServiceNetworkSettingsArrayOutput struct{ *pulumi.OutputState }

func (ServiceNetworkSettingsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNetworkSettings)(nil))
}

func (o ServiceNetworkSettingsArrayOutput) ToServiceNetworkSettingsArrayOutput() ServiceNetworkSettingsArrayOutput {
	return o
}

func (o ServiceNetworkSettingsArrayOutput) ToServiceNetworkSettingsArrayOutputWithContext(ctx context.Context) ServiceNetworkSettingsArrayOutput {
	return o
}

func (o ServiceNetworkSettingsArrayOutput) Index(i pulumi.IntInput) ServiceNetworkSettingsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNetworkSettings {
		return vs[0].([]ServiceNetworkSettings)[vs[1].(int)]
	}).(ServiceNetworkSettingsOutput)
}

type ServiceNetworkSettingsMapOutput struct{ *pulumi.OutputState }

func (ServiceNetworkSettingsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ServiceNetworkSettings)(nil))
}

func (o ServiceNetworkSettingsMapOutput) ToServiceNetworkSettingsMapOutput() ServiceNetworkSettingsMapOutput {
	return o
}

func (o ServiceNetworkSettingsMapOutput) ToServiceNetworkSettingsMapOutputWithContext(ctx context.Context) ServiceNetworkSettingsMapOutput {
	return o
}

func (o ServiceNetworkSettingsMapOutput) MapIndex(k pulumi.StringInput) ServiceNetworkSettingsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) ServiceNetworkSettings {
		return vs[0].(map[string]ServiceNetworkSettings)[vs[1].(string)]
	}).(ServiceNetworkSettingsOutput)
}

func init() {
	pulumi.RegisterOutputType(ServiceNetworkSettingsOutput{})
	pulumi.RegisterOutputType(ServiceNetworkSettingsPtrOutput{})
	pulumi.RegisterOutputType(ServiceNetworkSettingsArrayOutput{})
	pulumi.RegisterOutputType(ServiceNetworkSettingsMapOutput{})
}
