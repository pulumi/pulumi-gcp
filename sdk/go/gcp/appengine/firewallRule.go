// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package appengine

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// A single firewall rule that is evaluated against incoming traffic
// and provides an action to take on matched requests.
// 
// 
// To get more information about FirewallRule, see:
// 
// * [API documentation](https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1/apps.firewall.ingressRules)
// * How-to Guides
//     * [Official Documentation](https://cloud.google.com/appengine/docs/standard/python/creating-firewalls#creating_firewall_rules)
// 
// <div class = "oics-button" style="float: right; margin: 0 0 -15px">
//   <a href="https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_working_dir=app_engine_firewall_rule_basic&cloudshell_image=gcr.io%2Fgraphite-cloud-shell-images%2Fterraform%3Alatest&open_in_editor=main.tf&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md" target="_blank">
//     <img alt="Open in Cloud Shell" src="//gstatic.com/cloudssh/images/open-btn.svg" style="max-height: 44px; margin: 32px auto; max-width: 100%;">
//   </a>
// </div>
type FirewallRule struct {
	s *pulumi.ResourceState
}

// NewFirewallRule registers a new resource with the given unique name, arguments, and options.
func NewFirewallRule(ctx *pulumi.Context,
	name string, args *FirewallRuleArgs, opts ...pulumi.ResourceOpt) (*FirewallRule, error) {
	if args == nil || args.Action == nil {
		return nil, errors.New("missing required argument 'Action'")
	}
	if args == nil || args.SourceRange == nil {
		return nil, errors.New("missing required argument 'SourceRange'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["action"] = nil
		inputs["description"] = nil
		inputs["priority"] = nil
		inputs["project"] = nil
		inputs["sourceRange"] = nil
	} else {
		inputs["action"] = args.Action
		inputs["description"] = args.Description
		inputs["priority"] = args.Priority
		inputs["project"] = args.Project
		inputs["sourceRange"] = args.SourceRange
	}
	s, err := ctx.RegisterResource("gcp:appengine/firewallRule:FirewallRule", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &FirewallRule{s: s}, nil
}

// GetFirewallRule gets an existing FirewallRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFirewallRule(ctx *pulumi.Context,
	name string, id pulumi.ID, state *FirewallRuleState, opts ...pulumi.ResourceOpt) (*FirewallRule, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["action"] = state.Action
		inputs["description"] = state.Description
		inputs["priority"] = state.Priority
		inputs["project"] = state.Project
		inputs["sourceRange"] = state.SourceRange
	}
	s, err := ctx.ReadResource("gcp:appengine/firewallRule:FirewallRule", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &FirewallRule{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *FirewallRule) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *FirewallRule) ID() *pulumi.IDOutput {
	return r.s.ID()
}

func (r *FirewallRule) Action() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["action"])
}

func (r *FirewallRule) Description() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["description"])
}

func (r *FirewallRule) Priority() *pulumi.IntOutput {
	return (*pulumi.IntOutput)(r.s.State["priority"])
}

// The ID of the project in which the resource belongs.
// If it is not provided, the provider project is used.
func (r *FirewallRule) Project() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["project"])
}

func (r *FirewallRule) SourceRange() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["sourceRange"])
}

// Input properties used for looking up and filtering FirewallRule resources.
type FirewallRuleState struct {
	Action interface{}
	Description interface{}
	Priority interface{}
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project interface{}
	SourceRange interface{}
}

// The set of arguments for constructing a FirewallRule resource.
type FirewallRuleArgs struct {
	Action interface{}
	Description interface{}
	Priority interface{}
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project interface{}
	SourceRange interface{}
}
