// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package biglake

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type DatabaseHiveOptions struct {
	// Cloud Storage folder URI where the database data is stored, starting with "gs://".
	LocationUri *string `pulumi:"locationUri"`
	// Stores user supplied Hive database parameters. An object containing a
	// list of"key": value pairs.
	// Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
	//
	// ***
	Parameters map[string]string `pulumi:"parameters"`
}

// DatabaseHiveOptionsInput is an input type that accepts DatabaseHiveOptionsArgs and DatabaseHiveOptionsOutput values.
// You can construct a concrete instance of `DatabaseHiveOptionsInput` via:
//
//	DatabaseHiveOptionsArgs{...}
type DatabaseHiveOptionsInput interface {
	pulumi.Input

	ToDatabaseHiveOptionsOutput() DatabaseHiveOptionsOutput
	ToDatabaseHiveOptionsOutputWithContext(context.Context) DatabaseHiveOptionsOutput
}

type DatabaseHiveOptionsArgs struct {
	// Cloud Storage folder URI where the database data is stored, starting with "gs://".
	LocationUri pulumi.StringPtrInput `pulumi:"locationUri"`
	// Stores user supplied Hive database parameters. An object containing a
	// list of"key": value pairs.
	// Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
	//
	// ***
	Parameters pulumi.StringMapInput `pulumi:"parameters"`
}

func (DatabaseHiveOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseHiveOptions)(nil)).Elem()
}

func (i DatabaseHiveOptionsArgs) ToDatabaseHiveOptionsOutput() DatabaseHiveOptionsOutput {
	return i.ToDatabaseHiveOptionsOutputWithContext(context.Background())
}

func (i DatabaseHiveOptionsArgs) ToDatabaseHiveOptionsOutputWithContext(ctx context.Context) DatabaseHiveOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseHiveOptionsOutput)
}

func (i DatabaseHiveOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[DatabaseHiveOptions] {
	return pulumix.Output[DatabaseHiveOptions]{
		OutputState: i.ToDatabaseHiveOptionsOutputWithContext(ctx).OutputState,
	}
}

func (i DatabaseHiveOptionsArgs) ToDatabaseHiveOptionsPtrOutput() DatabaseHiveOptionsPtrOutput {
	return i.ToDatabaseHiveOptionsPtrOutputWithContext(context.Background())
}

func (i DatabaseHiveOptionsArgs) ToDatabaseHiveOptionsPtrOutputWithContext(ctx context.Context) DatabaseHiveOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseHiveOptionsOutput).ToDatabaseHiveOptionsPtrOutputWithContext(ctx)
}

// DatabaseHiveOptionsPtrInput is an input type that accepts DatabaseHiveOptionsArgs, DatabaseHiveOptionsPtr and DatabaseHiveOptionsPtrOutput values.
// You can construct a concrete instance of `DatabaseHiveOptionsPtrInput` via:
//
//	        DatabaseHiveOptionsArgs{...}
//
//	or:
//
//	        nil
type DatabaseHiveOptionsPtrInput interface {
	pulumi.Input

	ToDatabaseHiveOptionsPtrOutput() DatabaseHiveOptionsPtrOutput
	ToDatabaseHiveOptionsPtrOutputWithContext(context.Context) DatabaseHiveOptionsPtrOutput
}

type databaseHiveOptionsPtrType DatabaseHiveOptionsArgs

func DatabaseHiveOptionsPtr(v *DatabaseHiveOptionsArgs) DatabaseHiveOptionsPtrInput {
	return (*databaseHiveOptionsPtrType)(v)
}

func (*databaseHiveOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseHiveOptions)(nil)).Elem()
}

func (i *databaseHiveOptionsPtrType) ToDatabaseHiveOptionsPtrOutput() DatabaseHiveOptionsPtrOutput {
	return i.ToDatabaseHiveOptionsPtrOutputWithContext(context.Background())
}

func (i *databaseHiveOptionsPtrType) ToDatabaseHiveOptionsPtrOutputWithContext(ctx context.Context) DatabaseHiveOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseHiveOptionsPtrOutput)
}

func (i *databaseHiveOptionsPtrType) ToOutput(ctx context.Context) pulumix.Output[*DatabaseHiveOptions] {
	return pulumix.Output[*DatabaseHiveOptions]{
		OutputState: i.ToDatabaseHiveOptionsPtrOutputWithContext(ctx).OutputState,
	}
}

type DatabaseHiveOptionsOutput struct{ *pulumi.OutputState }

func (DatabaseHiveOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseHiveOptions)(nil)).Elem()
}

func (o DatabaseHiveOptionsOutput) ToDatabaseHiveOptionsOutput() DatabaseHiveOptionsOutput {
	return o
}

func (o DatabaseHiveOptionsOutput) ToDatabaseHiveOptionsOutputWithContext(ctx context.Context) DatabaseHiveOptionsOutput {
	return o
}

func (o DatabaseHiveOptionsOutput) ToDatabaseHiveOptionsPtrOutput() DatabaseHiveOptionsPtrOutput {
	return o.ToDatabaseHiveOptionsPtrOutputWithContext(context.Background())
}

func (o DatabaseHiveOptionsOutput) ToDatabaseHiveOptionsPtrOutputWithContext(ctx context.Context) DatabaseHiveOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatabaseHiveOptions) *DatabaseHiveOptions {
		return &v
	}).(DatabaseHiveOptionsPtrOutput)
}

func (o DatabaseHiveOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[DatabaseHiveOptions] {
	return pulumix.Output[DatabaseHiveOptions]{
		OutputState: o.OutputState,
	}
}

// Cloud Storage folder URI where the database data is stored, starting with "gs://".
func (o DatabaseHiveOptionsOutput) LocationUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseHiveOptions) *string { return v.LocationUri }).(pulumi.StringPtrOutput)
}

// Stores user supplied Hive database parameters. An object containing a
// list of"key": value pairs.
// Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
//
// ***
func (o DatabaseHiveOptionsOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v DatabaseHiveOptions) map[string]string { return v.Parameters }).(pulumi.StringMapOutput)
}

type DatabaseHiveOptionsPtrOutput struct{ *pulumi.OutputState }

func (DatabaseHiveOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseHiveOptions)(nil)).Elem()
}

func (o DatabaseHiveOptionsPtrOutput) ToDatabaseHiveOptionsPtrOutput() DatabaseHiveOptionsPtrOutput {
	return o
}

func (o DatabaseHiveOptionsPtrOutput) ToDatabaseHiveOptionsPtrOutputWithContext(ctx context.Context) DatabaseHiveOptionsPtrOutput {
	return o
}

func (o DatabaseHiveOptionsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DatabaseHiveOptions] {
	return pulumix.Output[*DatabaseHiveOptions]{
		OutputState: o.OutputState,
	}
}

func (o DatabaseHiveOptionsPtrOutput) Elem() DatabaseHiveOptionsOutput {
	return o.ApplyT(func(v *DatabaseHiveOptions) DatabaseHiveOptions {
		if v != nil {
			return *v
		}
		var ret DatabaseHiveOptions
		return ret
	}).(DatabaseHiveOptionsOutput)
}

// Cloud Storage folder URI where the database data is stored, starting with "gs://".
func (o DatabaseHiveOptionsPtrOutput) LocationUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseHiveOptions) *string {
		if v == nil {
			return nil
		}
		return v.LocationUri
	}).(pulumi.StringPtrOutput)
}

// Stores user supplied Hive database parameters. An object containing a
// list of"key": value pairs.
// Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
//
// ***
func (o DatabaseHiveOptionsPtrOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DatabaseHiveOptions) map[string]string {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseHiveOptionsInput)(nil)).Elem(), DatabaseHiveOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseHiveOptionsPtrInput)(nil)).Elem(), DatabaseHiveOptionsArgs{})
	pulumi.RegisterOutputType(DatabaseHiveOptionsOutput{})
	pulumi.RegisterOutputType(DatabaseHiveOptionsPtrOutput{})
}
