// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package organizations

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi-gcp/sdk/v4/go/gcp"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "gcp:organizations/accessApprovalSettings:AccessApprovalSettings":
		r = &AccessApprovalSettings{}
	case "gcp:organizations/folder:Folder":
		r = &Folder{}
	case "gcp:organizations/iAMBinding:IAMBinding":
		r = &IAMBinding{}
	case "gcp:organizations/iAMCustomRole:IAMCustomRole":
		r = &IAMCustomRole{}
	case "gcp:organizations/iAMMember:IAMMember":
		r = &IAMMember{}
	case "gcp:organizations/iAMPolicy:IAMPolicy":
		r = &IAMPolicy{}
	case "gcp:organizations/iamAuditConfig:IamAuditConfig":
		r = &IamAuditConfig{}
	case "gcp:organizations/policy:Policy":
		r = &Policy{}
	case "gcp:organizations/project:Project":
		r = &Project{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

func init() {
	version, err := gcp.PkgVersion()
	if err != nil {
		fmt.Println("failed to determine package version. defaulting to v1: %v", err)
	}
	pulumi.RegisterResourceModule(
		"gcp",
		"organizations/accessApprovalSettings",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"gcp",
		"organizations/folder",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"gcp",
		"organizations/iAMBinding",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"gcp",
		"organizations/iAMCustomRole",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"gcp",
		"organizations/iAMMember",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"gcp",
		"organizations/iAMPolicy",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"gcp",
		"organizations/iamAuditConfig",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"gcp",
		"organizations/policy",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"gcp",
		"organizations/project",
		&module{version},
	)
}
