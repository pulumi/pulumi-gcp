// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package organizations

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/organizations"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			current, err := organizations.GetClientConfig(ctx, map[string]interface{}{}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("project", current.Project)
//			return nil
//		})
//	}
//
// ```
//
// ### Configure Kubernetes Provider With OAuth2 Access Token
func GetClientConfig(ctx *pulumi.Context, opts ...pulumi.InvokeOption) (*GetClientConfigResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetClientConfigResult
	err := ctx.Invoke("gcp:organizations/getClientConfig:getClientConfig", nil, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of values returned by getClientConfig.
type GetClientConfigResult struct {
	// The OAuth2 access token used by the client to authenticate against the Google Cloud API.
	AccessToken string `pulumi:"accessToken"`
	// The default labels configured on the provider.
	DefaultLabels map[string]string `pulumi:"defaultLabels"`
	Id            string            `pulumi:"id"`
	// The ID of the project to apply any resources to.
	Project string `pulumi:"project"`
	// The region to operate under.
	Region string `pulumi:"region"`
	// The zone to operate under.
	Zone string `pulumi:"zone"`
}

func GetClientConfigOutput(ctx *pulumi.Context, opts ...pulumi.InvokeOption) GetClientConfigResultOutput {
	return pulumi.ToOutput(0).ApplyT(func(int) (GetClientConfigResultOutput, error) {
		options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
		return ctx.InvokeOutput("gcp:organizations/getClientConfig:getClientConfig", nil, GetClientConfigResultOutput{}, options).(GetClientConfigResultOutput), nil
	}).(GetClientConfigResultOutput)
}

// A collection of values returned by getClientConfig.
type GetClientConfigResultOutput struct{ *pulumi.OutputState }

func (GetClientConfigResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientConfigResult)(nil)).Elem()
}

func (o GetClientConfigResultOutput) ToGetClientConfigResultOutput() GetClientConfigResultOutput {
	return o
}

func (o GetClientConfigResultOutput) ToGetClientConfigResultOutputWithContext(ctx context.Context) GetClientConfigResultOutput {
	return o
}

// The OAuth2 access token used by the client to authenticate against the Google Cloud API.
func (o GetClientConfigResultOutput) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientConfigResult) string { return v.AccessToken }).(pulumi.StringOutput)
}

// The default labels configured on the provider.
func (o GetClientConfigResultOutput) DefaultLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetClientConfigResult) map[string]string { return v.DefaultLabels }).(pulumi.StringMapOutput)
}

func (o GetClientConfigResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientConfigResult) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of the project to apply any resources to.
func (o GetClientConfigResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientConfigResult) string { return v.Project }).(pulumi.StringOutput)
}

// The region to operate under.
func (o GetClientConfigResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientConfigResult) string { return v.Region }).(pulumi.StringOutput)
}

// The zone to operate under.
func (o GetClientConfigResultOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientConfigResult) string { return v.Zone }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetClientConfigResultOutput{})
}
