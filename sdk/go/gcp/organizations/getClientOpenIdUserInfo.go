// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package organizations

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Get OpenID userinfo about the credentials used with the Google provider,
// specifically the email.
//
// This datasource enables you to export the email of the account you've
// authenticated the provider with; this can be used alongside
// `data.google_client_config`'s `accessToken` to perform OpenID Connect
// authentication with GKE and configure an RBAC role for the email used.
//
// > This resource will only work as expected if the provider is configured to
// use the `https://www.googleapis.com/auth/userinfo.email` scope! You will
// receive an error otherwise. The provider uses this scope by default.
//
// ## Example Usage
func GetClientOpenIdUserInfo(ctx *pulumi.Context, opts ...pulumi.InvokeOption) (*GetClientOpenIdUserInfoResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetClientOpenIdUserInfoResult
	err := ctx.Invoke("gcp:organizations/getClientOpenIdUserInfo:getClientOpenIdUserInfo", nil, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of values returned by getClientOpenIdUserInfo.
type GetClientOpenIdUserInfoResult struct {
	// The email of the account used by the provider to authenticate with GCP.
	Email string `pulumi:"email"`
	Id    string `pulumi:"id"`
}

func GetClientOpenIdUserInfoOutput(ctx *pulumi.Context, opts ...pulumi.InvokeOption) GetClientOpenIdUserInfoResultOutput {
	return pulumi.ToOutput(0).ApplyT(func(int) (GetClientOpenIdUserInfoResult, error) {
		r, err := GetClientOpenIdUserInfo(ctx, opts...)
		var s GetClientOpenIdUserInfoResult
		if r != nil {
			s = *r
		}
		return s, err
	}).(GetClientOpenIdUserInfoResultOutput)
}

// A collection of values returned by getClientOpenIdUserInfo.
type GetClientOpenIdUserInfoResultOutput struct{ *pulumi.OutputState }

func (GetClientOpenIdUserInfoResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientOpenIdUserInfoResult)(nil)).Elem()
}

func (o GetClientOpenIdUserInfoResultOutput) ToGetClientOpenIdUserInfoResultOutput() GetClientOpenIdUserInfoResultOutput {
	return o
}

func (o GetClientOpenIdUserInfoResultOutput) ToGetClientOpenIdUserInfoResultOutputWithContext(ctx context.Context) GetClientOpenIdUserInfoResultOutput {
	return o
}

func (o GetClientOpenIdUserInfoResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetClientOpenIdUserInfoResult] {
	return pulumix.Output[GetClientOpenIdUserInfoResult]{
		OutputState: o.OutputState,
	}
}

// The email of the account used by the provider to authenticate with GCP.
func (o GetClientOpenIdUserInfoResultOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientOpenIdUserInfoResult) string { return v.Email }).(pulumi.StringOutput)
}

func (o GetClientOpenIdUserInfoResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientOpenIdUserInfoResult) string { return v.Id }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetClientOpenIdUserInfoResultOutput{})
}
