// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package servicenetworking

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// > **Warning:** This resource is in beta, and should be used with the terraform-provider-google-beta provider.
// See [Provider Versions](https://terraform.io/docs/providers/google/provider_versions.html) for more details on beta resources.
// 
// Manages a private VPC connection with a GCP service provider. For more information see
// [the official documentation](https://cloud.google.com/vpc/docs/configure-private-services-access#creating-connection)
// and
// [API](https://cloud.google.com/service-infrastructure/docs/service-networking/reference/rest/v1/services.connections).
type Connection struct {
	s *pulumi.ResourceState
}

// NewConnection registers a new resource with the given unique name, arguments, and options.
func NewConnection(ctx *pulumi.Context,
	name string, args *ConnectionArgs, opts ...pulumi.ResourceOpt) (*Connection, error) {
	if args == nil || args.Network == nil {
		return nil, errors.New("missing required argument 'Network'")
	}
	if args == nil || args.ReservedPeeringRanges == nil {
		return nil, errors.New("missing required argument 'ReservedPeeringRanges'")
	}
	if args == nil || args.Service == nil {
		return nil, errors.New("missing required argument 'Service'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["network"] = nil
		inputs["reservedPeeringRanges"] = nil
		inputs["service"] = nil
	} else {
		inputs["network"] = args.Network
		inputs["reservedPeeringRanges"] = args.ReservedPeeringRanges
		inputs["service"] = args.Service
	}
	s, err := ctx.RegisterResource("gcp:servicenetworking/connection:Connection", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Connection{s: s}, nil
}

// GetConnection gets an existing Connection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetConnection(ctx *pulumi.Context,
	name string, id pulumi.ID, state *ConnectionState, opts ...pulumi.ResourceOpt) (*Connection, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["network"] = state.Network
		inputs["reservedPeeringRanges"] = state.ReservedPeeringRanges
		inputs["service"] = state.Service
	}
	s, err := ctx.ReadResource("gcp:servicenetworking/connection:Connection", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Connection{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *Connection) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *Connection) ID() *pulumi.IDOutput {
	return r.s.ID()
}

// Name of VPC network connected with service producers using VPC peering.
func (r *Connection) Network() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["network"])
}

// Named IP address range(s) of PEERING type reserved for
// this service provider. Note that invoking this method with a different range when connection
// is already established will not reallocate already provisioned service producer subnetworks.
func (r *Connection) ReservedPeeringRanges() *pulumi.ArrayOutput {
	return (*pulumi.ArrayOutput)(r.s.State["reservedPeeringRanges"])
}

// Provider peering service that is managing peering connectivity for a
// service provider organization. For Google services that support this functionality it is
// 'servicenetworking.googleapis.com'.
func (r *Connection) Service() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["service"])
}

// Input properties used for looking up and filtering Connection resources.
type ConnectionState struct {
	// Name of VPC network connected with service producers using VPC peering.
	Network interface{}
	// Named IP address range(s) of PEERING type reserved for
	// this service provider. Note that invoking this method with a different range when connection
	// is already established will not reallocate already provisioned service producer subnetworks.
	ReservedPeeringRanges interface{}
	// Provider peering service that is managing peering connectivity for a
	// service provider organization. For Google services that support this functionality it is
	// 'servicenetworking.googleapis.com'.
	Service interface{}
}

// The set of arguments for constructing a Connection resource.
type ConnectionArgs struct {
	// Name of VPC network connected with service producers using VPC peering.
	Network interface{}
	// Named IP address range(s) of PEERING type reserved for
	// this service provider. Note that invoking this method with a different range when connection
	// is already established will not reallocate already provisioned service producer subnetworks.
	ReservedPeeringRanges interface{}
	// Provider peering service that is managing peering connectivity for a
	// service provider organization. For Google services that support this functionality it is
	// 'servicenetworking.googleapis.com'.
	Service interface{}
}
