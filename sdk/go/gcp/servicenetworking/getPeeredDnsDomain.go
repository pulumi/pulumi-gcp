// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package servicenetworking

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupPeeredDnsDomain(ctx *pulumi.Context, args *LookupPeeredDnsDomainArgs, opts ...pulumi.InvokeOption) (*LookupPeeredDnsDomainResult, error) {
	var rv LookupPeeredDnsDomainResult
	err := ctx.Invoke("gcp:servicenetworking/getPeeredDnsDomain:getPeeredDnsDomain", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPeeredDnsDomain.
type LookupPeeredDnsDomainArgs struct {
	Name    string `pulumi:"name"`
	Network string `pulumi:"network"`
	Project string `pulumi:"project"`
	Service string `pulumi:"service"`
}

// A collection of values returned by getPeeredDnsDomain.
type LookupPeeredDnsDomainResult struct {
	DnsSuffix string `pulumi:"dnsSuffix"`
	// The provider-assigned unique ID for this managed resource.
	Id      string `pulumi:"id"`
	Name    string `pulumi:"name"`
	Network string `pulumi:"network"`
	Parent  string `pulumi:"parent"`
	Project string `pulumi:"project"`
	Service string `pulumi:"service"`
}

func LookupPeeredDnsDomainOutput(ctx *pulumi.Context, args LookupPeeredDnsDomainOutputArgs, opts ...pulumi.InvokeOption) LookupPeeredDnsDomainResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupPeeredDnsDomainResult, error) {
			args := v.(LookupPeeredDnsDomainArgs)
			r, err := LookupPeeredDnsDomain(ctx, &args, opts...)
			var s LookupPeeredDnsDomainResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupPeeredDnsDomainResultOutput)
}

// A collection of arguments for invoking getPeeredDnsDomain.
type LookupPeeredDnsDomainOutputArgs struct {
	Name    pulumi.StringInput `pulumi:"name"`
	Network pulumi.StringInput `pulumi:"network"`
	Project pulumi.StringInput `pulumi:"project"`
	Service pulumi.StringInput `pulumi:"service"`
}

func (LookupPeeredDnsDomainOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPeeredDnsDomainArgs)(nil)).Elem()
}

// A collection of values returned by getPeeredDnsDomain.
type LookupPeeredDnsDomainResultOutput struct{ *pulumi.OutputState }

func (LookupPeeredDnsDomainResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPeeredDnsDomainResult)(nil)).Elem()
}

func (o LookupPeeredDnsDomainResultOutput) ToLookupPeeredDnsDomainResultOutput() LookupPeeredDnsDomainResultOutput {
	return o
}

func (o LookupPeeredDnsDomainResultOutput) ToLookupPeeredDnsDomainResultOutputWithContext(ctx context.Context) LookupPeeredDnsDomainResultOutput {
	return o
}

func (o LookupPeeredDnsDomainResultOutput) DnsSuffix() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPeeredDnsDomainResult) string { return v.DnsSuffix }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupPeeredDnsDomainResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPeeredDnsDomainResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupPeeredDnsDomainResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPeeredDnsDomainResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupPeeredDnsDomainResultOutput) Network() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPeeredDnsDomainResult) string { return v.Network }).(pulumi.StringOutput)
}

func (o LookupPeeredDnsDomainResultOutput) Parent() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPeeredDnsDomainResult) string { return v.Parent }).(pulumi.StringOutput)
}

func (o LookupPeeredDnsDomainResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPeeredDnsDomainResult) string { return v.Project }).(pulumi.StringOutput)
}

func (o LookupPeeredDnsDomainResultOutput) Service() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPeeredDnsDomainResult) string { return v.Service }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPeeredDnsDomainResultOutput{})
}
