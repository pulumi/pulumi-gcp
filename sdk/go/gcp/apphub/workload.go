// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apphub

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Workload represents a binary deployment (such as Managed Instance Groups (MIGs), GKE deployments, etc.) that performs the smallest logical subset of business functionality. It registers identified workload to the Application.
//
// ## Example Usage
//
// ## Import
//
// Workload can be imported using any of these accepted formats:
//
// * `projects/{{project}}/locations/{{location}}/applications/{{application_id}}/workloads/{{workload_id}}`
//
// * `{{project}}/{{location}}/{{application_id}}/{{workload_id}}`
//
// * `{{location}}/{{application_id}}/{{workload_id}}`
//
// When using the `pulumi import` command, Workload can be imported using one of the formats above. For example:
//
// ```sh
// $ pulumi import gcp:apphub/workload:Workload default projects/{{project}}/locations/{{location}}/applications/{{application_id}}/workloads/{{workload_id}}
// ```
//
// ```sh
// $ pulumi import gcp:apphub/workload:Workload default {{project}}/{{location}}/{{application_id}}/{{workload_id}}
// ```
//
// ```sh
// $ pulumi import gcp:apphub/workload:Workload default {{location}}/{{application_id}}/{{workload_id}}
// ```
type Workload struct {
	pulumi.CustomResourceState

	// Part of `parent`.  Full resource name of a parent Application. Example: projects/{HOST_PROJECT_ID}/locations/{LOCATION}/applications/{APPLICATION_ID}
	ApplicationId pulumi.StringOutput `pulumi:"applicationId"`
	// Consumer provided attributes.
	// Structure is documented below.
	Attributes WorkloadAttributesPtrOutput `pulumi:"attributes"`
	// Output only. Create time.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// User-defined description of a Workload.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Immutable. The resource name of the original discovered workload.
	DiscoveredWorkload pulumi.StringOutput `pulumi:"discoveredWorkload"`
	// User-defined name for the Workload.
	DisplayName pulumi.StringPtrOutput `pulumi:"displayName"`
	// Part of `parent`.  Full resource name of a parent Application. Example: projects/{HOST_PROJECT_ID}/locations/{LOCATION}/applications/{APPLICATION_ID}
	Location pulumi.StringOutput `pulumi:"location"`
	// Identifier. The resource name of the Workload. Format:"projects/{host-project-id}/locations/{location}/applications/{application-id}/workloads/{workload-id}"
	Name pulumi.StringOutput `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
	// Output only. Workload state. Possible values:  STATE_UNSPECIFIED CREATING ACTIVE DELETING DETACHED
	State pulumi.StringOutput `pulumi:"state"`
	// Output only. A universally unique identifier (UUID) for the `Workload` in the UUID4 format.
	Uid pulumi.StringOutput `pulumi:"uid"`
	// Output only. Update time.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
	// The Workload identifier.
	WorkloadId pulumi.StringOutput `pulumi:"workloadId"`
	// Properties of an underlying compute resource represented by the Workload.
	// Structure is documented below.
	WorkloadProperties WorkloadWorkloadPropertyArrayOutput `pulumi:"workloadProperties"`
	// Reference of an underlying compute resource represented by the Workload.
	// Structure is documented below.
	WorkloadReferences WorkloadWorkloadReferenceArrayOutput `pulumi:"workloadReferences"`
}

// NewWorkload registers a new resource with the given unique name, arguments, and options.
func NewWorkload(ctx *pulumi.Context,
	name string, args *WorkloadArgs, opts ...pulumi.ResourceOption) (*Workload, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApplicationId == nil {
		return nil, errors.New("invalid value for required argument 'ApplicationId'")
	}
	if args.DiscoveredWorkload == nil {
		return nil, errors.New("invalid value for required argument 'DiscoveredWorkload'")
	}
	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	if args.WorkloadId == nil {
		return nil, errors.New("invalid value for required argument 'WorkloadId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Workload
	err := ctx.RegisterResource("gcp:apphub/workload:Workload", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkload gets an existing Workload resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkload(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkloadState, opts ...pulumi.ResourceOption) (*Workload, error) {
	var resource Workload
	err := ctx.ReadResource("gcp:apphub/workload:Workload", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Workload resources.
type workloadState struct {
	// Part of `parent`.  Full resource name of a parent Application. Example: projects/{HOST_PROJECT_ID}/locations/{LOCATION}/applications/{APPLICATION_ID}
	ApplicationId *string `pulumi:"applicationId"`
	// Consumer provided attributes.
	// Structure is documented below.
	Attributes *WorkloadAttributes `pulumi:"attributes"`
	// Output only. Create time.
	CreateTime *string `pulumi:"createTime"`
	// User-defined description of a Workload.
	Description *string `pulumi:"description"`
	// Immutable. The resource name of the original discovered workload.
	DiscoveredWorkload *string `pulumi:"discoveredWorkload"`
	// User-defined name for the Workload.
	DisplayName *string `pulumi:"displayName"`
	// Part of `parent`.  Full resource name of a parent Application. Example: projects/{HOST_PROJECT_ID}/locations/{LOCATION}/applications/{APPLICATION_ID}
	Location *string `pulumi:"location"`
	// Identifier. The resource name of the Workload. Format:"projects/{host-project-id}/locations/{location}/applications/{application-id}/workloads/{workload-id}"
	Name *string `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// Output only. Workload state. Possible values:  STATE_UNSPECIFIED CREATING ACTIVE DELETING DETACHED
	State *string `pulumi:"state"`
	// Output only. A universally unique identifier (UUID) for the `Workload` in the UUID4 format.
	Uid *string `pulumi:"uid"`
	// Output only. Update time.
	UpdateTime *string `pulumi:"updateTime"`
	// The Workload identifier.
	WorkloadId *string `pulumi:"workloadId"`
	// Properties of an underlying compute resource represented by the Workload.
	// Structure is documented below.
	WorkloadProperties []WorkloadWorkloadProperty `pulumi:"workloadProperties"`
	// Reference of an underlying compute resource represented by the Workload.
	// Structure is documented below.
	WorkloadReferences []WorkloadWorkloadReference `pulumi:"workloadReferences"`
}

type WorkloadState struct {
	// Part of `parent`.  Full resource name of a parent Application. Example: projects/{HOST_PROJECT_ID}/locations/{LOCATION}/applications/{APPLICATION_ID}
	ApplicationId pulumi.StringPtrInput
	// Consumer provided attributes.
	// Structure is documented below.
	Attributes WorkloadAttributesPtrInput
	// Output only. Create time.
	CreateTime pulumi.StringPtrInput
	// User-defined description of a Workload.
	Description pulumi.StringPtrInput
	// Immutable. The resource name of the original discovered workload.
	DiscoveredWorkload pulumi.StringPtrInput
	// User-defined name for the Workload.
	DisplayName pulumi.StringPtrInput
	// Part of `parent`.  Full resource name of a parent Application. Example: projects/{HOST_PROJECT_ID}/locations/{LOCATION}/applications/{APPLICATION_ID}
	Location pulumi.StringPtrInput
	// Identifier. The resource name of the Workload. Format:"projects/{host-project-id}/locations/{location}/applications/{application-id}/workloads/{workload-id}"
	Name pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// Output only. Workload state. Possible values:  STATE_UNSPECIFIED CREATING ACTIVE DELETING DETACHED
	State pulumi.StringPtrInput
	// Output only. A universally unique identifier (UUID) for the `Workload` in the UUID4 format.
	Uid pulumi.StringPtrInput
	// Output only. Update time.
	UpdateTime pulumi.StringPtrInput
	// The Workload identifier.
	WorkloadId pulumi.StringPtrInput
	// Properties of an underlying compute resource represented by the Workload.
	// Structure is documented below.
	WorkloadProperties WorkloadWorkloadPropertyArrayInput
	// Reference of an underlying compute resource represented by the Workload.
	// Structure is documented below.
	WorkloadReferences WorkloadWorkloadReferenceArrayInput
}

func (WorkloadState) ElementType() reflect.Type {
	return reflect.TypeOf((*workloadState)(nil)).Elem()
}

type workloadArgs struct {
	// Part of `parent`.  Full resource name of a parent Application. Example: projects/{HOST_PROJECT_ID}/locations/{LOCATION}/applications/{APPLICATION_ID}
	ApplicationId string `pulumi:"applicationId"`
	// Consumer provided attributes.
	// Structure is documented below.
	Attributes *WorkloadAttributes `pulumi:"attributes"`
	// User-defined description of a Workload.
	Description *string `pulumi:"description"`
	// Immutable. The resource name of the original discovered workload.
	DiscoveredWorkload string `pulumi:"discoveredWorkload"`
	// User-defined name for the Workload.
	DisplayName *string `pulumi:"displayName"`
	// Part of `parent`.  Full resource name of a parent Application. Example: projects/{HOST_PROJECT_ID}/locations/{LOCATION}/applications/{APPLICATION_ID}
	Location string `pulumi:"location"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// The Workload identifier.
	WorkloadId string `pulumi:"workloadId"`
}

// The set of arguments for constructing a Workload resource.
type WorkloadArgs struct {
	// Part of `parent`.  Full resource name of a parent Application. Example: projects/{HOST_PROJECT_ID}/locations/{LOCATION}/applications/{APPLICATION_ID}
	ApplicationId pulumi.StringInput
	// Consumer provided attributes.
	// Structure is documented below.
	Attributes WorkloadAttributesPtrInput
	// User-defined description of a Workload.
	Description pulumi.StringPtrInput
	// Immutable. The resource name of the original discovered workload.
	DiscoveredWorkload pulumi.StringInput
	// User-defined name for the Workload.
	DisplayName pulumi.StringPtrInput
	// Part of `parent`.  Full resource name of a parent Application. Example: projects/{HOST_PROJECT_ID}/locations/{LOCATION}/applications/{APPLICATION_ID}
	Location pulumi.StringInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// The Workload identifier.
	WorkloadId pulumi.StringInput
}

func (WorkloadArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workloadArgs)(nil)).Elem()
}

type WorkloadInput interface {
	pulumi.Input

	ToWorkloadOutput() WorkloadOutput
	ToWorkloadOutputWithContext(ctx context.Context) WorkloadOutput
}

func (*Workload) ElementType() reflect.Type {
	return reflect.TypeOf((**Workload)(nil)).Elem()
}

func (i *Workload) ToWorkloadOutput() WorkloadOutput {
	return i.ToWorkloadOutputWithContext(context.Background())
}

func (i *Workload) ToWorkloadOutputWithContext(ctx context.Context) WorkloadOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadOutput)
}

// WorkloadArrayInput is an input type that accepts WorkloadArray and WorkloadArrayOutput values.
// You can construct a concrete instance of `WorkloadArrayInput` via:
//
//	WorkloadArray{ WorkloadArgs{...} }
type WorkloadArrayInput interface {
	pulumi.Input

	ToWorkloadArrayOutput() WorkloadArrayOutput
	ToWorkloadArrayOutputWithContext(context.Context) WorkloadArrayOutput
}

type WorkloadArray []WorkloadInput

func (WorkloadArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Workload)(nil)).Elem()
}

func (i WorkloadArray) ToWorkloadArrayOutput() WorkloadArrayOutput {
	return i.ToWorkloadArrayOutputWithContext(context.Background())
}

func (i WorkloadArray) ToWorkloadArrayOutputWithContext(ctx context.Context) WorkloadArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadArrayOutput)
}

// WorkloadMapInput is an input type that accepts WorkloadMap and WorkloadMapOutput values.
// You can construct a concrete instance of `WorkloadMapInput` via:
//
//	WorkloadMap{ "key": WorkloadArgs{...} }
type WorkloadMapInput interface {
	pulumi.Input

	ToWorkloadMapOutput() WorkloadMapOutput
	ToWorkloadMapOutputWithContext(context.Context) WorkloadMapOutput
}

type WorkloadMap map[string]WorkloadInput

func (WorkloadMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Workload)(nil)).Elem()
}

func (i WorkloadMap) ToWorkloadMapOutput() WorkloadMapOutput {
	return i.ToWorkloadMapOutputWithContext(context.Background())
}

func (i WorkloadMap) ToWorkloadMapOutputWithContext(ctx context.Context) WorkloadMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadMapOutput)
}

type WorkloadOutput struct{ *pulumi.OutputState }

func (WorkloadOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Workload)(nil)).Elem()
}

func (o WorkloadOutput) ToWorkloadOutput() WorkloadOutput {
	return o
}

func (o WorkloadOutput) ToWorkloadOutputWithContext(ctx context.Context) WorkloadOutput {
	return o
}

// Part of `parent`.  Full resource name of a parent Application. Example: projects/{HOST_PROJECT_ID}/locations/{LOCATION}/applications/{APPLICATION_ID}
func (o WorkloadOutput) ApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v *Workload) pulumi.StringOutput { return v.ApplicationId }).(pulumi.StringOutput)
}

// Consumer provided attributes.
// Structure is documented below.
func (o WorkloadOutput) Attributes() WorkloadAttributesPtrOutput {
	return o.ApplyT(func(v *Workload) WorkloadAttributesPtrOutput { return v.Attributes }).(WorkloadAttributesPtrOutput)
}

// Output only. Create time.
func (o WorkloadOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Workload) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// User-defined description of a Workload.
func (o WorkloadOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Workload) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Immutable. The resource name of the original discovered workload.
func (o WorkloadOutput) DiscoveredWorkload() pulumi.StringOutput {
	return o.ApplyT(func(v *Workload) pulumi.StringOutput { return v.DiscoveredWorkload }).(pulumi.StringOutput)
}

// User-defined name for the Workload.
func (o WorkloadOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Workload) pulumi.StringPtrOutput { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Part of `parent`.  Full resource name of a parent Application. Example: projects/{HOST_PROJECT_ID}/locations/{LOCATION}/applications/{APPLICATION_ID}
func (o WorkloadOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *Workload) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Identifier. The resource name of the Workload. Format:"projects/{host-project-id}/locations/{location}/applications/{application-id}/workloads/{workload-id}"
func (o WorkloadOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Workload) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The ID of the project in which the resource belongs.
// If it is not provided, the provider project is used.
func (o WorkloadOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *Workload) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Output only. Workload state. Possible values:  STATE_UNSPECIFIED CREATING ACTIVE DELETING DETACHED
func (o WorkloadOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *Workload) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// Output only. A universally unique identifier (UUID) for the `Workload` in the UUID4 format.
func (o WorkloadOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v *Workload) pulumi.StringOutput { return v.Uid }).(pulumi.StringOutput)
}

// Output only. Update time.
func (o WorkloadOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Workload) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

// The Workload identifier.
func (o WorkloadOutput) WorkloadId() pulumi.StringOutput {
	return o.ApplyT(func(v *Workload) pulumi.StringOutput { return v.WorkloadId }).(pulumi.StringOutput)
}

// Properties of an underlying compute resource represented by the Workload.
// Structure is documented below.
func (o WorkloadOutput) WorkloadProperties() WorkloadWorkloadPropertyArrayOutput {
	return o.ApplyT(func(v *Workload) WorkloadWorkloadPropertyArrayOutput { return v.WorkloadProperties }).(WorkloadWorkloadPropertyArrayOutput)
}

// Reference of an underlying compute resource represented by the Workload.
// Structure is documented below.
func (o WorkloadOutput) WorkloadReferences() WorkloadWorkloadReferenceArrayOutput {
	return o.ApplyT(func(v *Workload) WorkloadWorkloadReferenceArrayOutput { return v.WorkloadReferences }).(WorkloadWorkloadReferenceArrayOutput)
}

type WorkloadArrayOutput struct{ *pulumi.OutputState }

func (WorkloadArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Workload)(nil)).Elem()
}

func (o WorkloadArrayOutput) ToWorkloadArrayOutput() WorkloadArrayOutput {
	return o
}

func (o WorkloadArrayOutput) ToWorkloadArrayOutputWithContext(ctx context.Context) WorkloadArrayOutput {
	return o
}

func (o WorkloadArrayOutput) Index(i pulumi.IntInput) WorkloadOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Workload {
		return vs[0].([]*Workload)[vs[1].(int)]
	}).(WorkloadOutput)
}

type WorkloadMapOutput struct{ *pulumi.OutputState }

func (WorkloadMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Workload)(nil)).Elem()
}

func (o WorkloadMapOutput) ToWorkloadMapOutput() WorkloadMapOutput {
	return o
}

func (o WorkloadMapOutput) ToWorkloadMapOutputWithContext(ctx context.Context) WorkloadMapOutput {
	return o
}

func (o WorkloadMapOutput) MapIndex(k pulumi.StringInput) WorkloadOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Workload {
		return vs[0].(map[string]*Workload)[vs[1].(string)]
	}).(WorkloadOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadInput)(nil)).Elem(), &Workload{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadArrayInput)(nil)).Elem(), WorkloadArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadMapInput)(nil)).Elem(), WorkloadMap{})
	pulumi.RegisterOutputType(WorkloadOutput{})
	pulumi.RegisterOutputType(WorkloadArrayOutput{})
	pulumi.RegisterOutputType(WorkloadMapOutput{})
}
