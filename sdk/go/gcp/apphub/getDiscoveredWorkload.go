// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apphub

import (
	"context"
	"errors"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get information about a discovered workload from its uri.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/apphub"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := apphub.GetDiscoveredWorkload(ctx, &apphub.GetDiscoveredWorkloadArgs{
//				Location:    "us-central1",
//				WorkloadUri: "my-workload-uri",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetDiscoveredWorkload(ctx *pulumi.Context, args *GetDiscoveredWorkloadArgs, opts ...pulumi.InvokeOption) (*GetDiscoveredWorkloadResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	invokeOpts, optsErr := pulumi.NewInvokeOptions(opts...)
	if optsErr != nil {
		return &GetDiscoveredWorkloadResult{}, optsErr
	}
	if len(invokeOpts.DependsOn) > 0 {
		return &GetDiscoveredWorkloadResult{}, errors.New("DependsOn is not supported for direct form invoke GetDiscoveredWorkload, use GetDiscoveredWorkloadOutput instead")
	}
	if len(invokeOpts.DependsOnInputs) > 0 {
		return &GetDiscoveredWorkloadResult{}, errors.New("DependsOnInputs is not supported for direct form invoke GetDiscoveredWorkload, use GetDiscoveredWorkloadOutput instead")
	}
	var rv GetDiscoveredWorkloadResult
	err := ctx.Invoke("gcp:apphub/getDiscoveredWorkload:getDiscoveredWorkload", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDiscoveredWorkload.
type GetDiscoveredWorkloadArgs struct {
	// The location of the discovered workload.
	Location string `pulumi:"location"`
	// The host project of the discovered workload.
	Project *string `pulumi:"project"`
	// The uri of the workload (instance group managed by the Instance Group Manager). Example: "//compute.googleapis.com/projects/1/regions/us-east1/instanceGroups/id1"
	WorkloadUri string `pulumi:"workloadUri"`
}

// A collection of values returned by getDiscoveredWorkload.
type GetDiscoveredWorkloadResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The location that the underlying resource resides in.
	Location string `pulumi:"location"`
	// Resource name of a Workload. Format: "projects/{host-project-id}/locations/{location}/applications/{application-id}/workloads/{workload-id}".
	Name    string  `pulumi:"name"`
	Project *string `pulumi:"project"`
	// Properties of an underlying compute resource that can comprise a Workload. Structure is documented below
	WorkloadProperties []GetDiscoveredWorkloadWorkloadProperty `pulumi:"workloadProperties"`
	// Reference to an underlying networking resource that can comprise a Workload. Structure is documented below
	WorkloadReferences []GetDiscoveredWorkloadWorkloadReference `pulumi:"workloadReferences"`
	WorkloadUri        string                                   `pulumi:"workloadUri"`
}

func GetDiscoveredWorkloadOutput(ctx *pulumi.Context, args GetDiscoveredWorkloadOutputArgs, opts ...pulumi.InvokeOption) GetDiscoveredWorkloadResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetDiscoveredWorkloadResultOutput, error) {
			args := v.(GetDiscoveredWorkloadArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv GetDiscoveredWorkloadResult
			secret, deps, err := ctx.InvokePackageRawWithDeps("gcp:apphub/getDiscoveredWorkload:getDiscoveredWorkload", args, &rv, "", opts...)
			if err != nil {
				return GetDiscoveredWorkloadResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(GetDiscoveredWorkloadResultOutput)
			output = pulumi.OutputWithDependencies(ctx.Context(), output, deps...).(GetDiscoveredWorkloadResultOutput)
			if secret {
				return pulumi.ToSecret(output).(GetDiscoveredWorkloadResultOutput), nil
			}
			return output, nil
		}).(GetDiscoveredWorkloadResultOutput)
}

// A collection of arguments for invoking getDiscoveredWorkload.
type GetDiscoveredWorkloadOutputArgs struct {
	// The location of the discovered workload.
	Location pulumi.StringInput `pulumi:"location"`
	// The host project of the discovered workload.
	Project pulumi.StringPtrInput `pulumi:"project"`
	// The uri of the workload (instance group managed by the Instance Group Manager). Example: "//compute.googleapis.com/projects/1/regions/us-east1/instanceGroups/id1"
	WorkloadUri pulumi.StringInput `pulumi:"workloadUri"`
}

func (GetDiscoveredWorkloadOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDiscoveredWorkloadArgs)(nil)).Elem()
}

// A collection of values returned by getDiscoveredWorkload.
type GetDiscoveredWorkloadResultOutput struct{ *pulumi.OutputState }

func (GetDiscoveredWorkloadResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDiscoveredWorkloadResult)(nil)).Elem()
}

func (o GetDiscoveredWorkloadResultOutput) ToGetDiscoveredWorkloadResultOutput() GetDiscoveredWorkloadResultOutput {
	return o
}

func (o GetDiscoveredWorkloadResultOutput) ToGetDiscoveredWorkloadResultOutputWithContext(ctx context.Context) GetDiscoveredWorkloadResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetDiscoveredWorkloadResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiscoveredWorkloadResult) string { return v.Id }).(pulumi.StringOutput)
}

// The location that the underlying resource resides in.
func (o GetDiscoveredWorkloadResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiscoveredWorkloadResult) string { return v.Location }).(pulumi.StringOutput)
}

// Resource name of a Workload. Format: "projects/{host-project-id}/locations/{location}/applications/{application-id}/workloads/{workload-id}".
func (o GetDiscoveredWorkloadResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiscoveredWorkloadResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetDiscoveredWorkloadResultOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDiscoveredWorkloadResult) *string { return v.Project }).(pulumi.StringPtrOutput)
}

// Properties of an underlying compute resource that can comprise a Workload. Structure is documented below
func (o GetDiscoveredWorkloadResultOutput) WorkloadProperties() GetDiscoveredWorkloadWorkloadPropertyArrayOutput {
	return o.ApplyT(func(v GetDiscoveredWorkloadResult) []GetDiscoveredWorkloadWorkloadProperty {
		return v.WorkloadProperties
	}).(GetDiscoveredWorkloadWorkloadPropertyArrayOutput)
}

// Reference to an underlying networking resource that can comprise a Workload. Structure is documented below
func (o GetDiscoveredWorkloadResultOutput) WorkloadReferences() GetDiscoveredWorkloadWorkloadReferenceArrayOutput {
	return o.ApplyT(func(v GetDiscoveredWorkloadResult) []GetDiscoveredWorkloadWorkloadReference {
		return v.WorkloadReferences
	}).(GetDiscoveredWorkloadWorkloadReferenceArrayOutput)
}

func (o GetDiscoveredWorkloadResultOutput) WorkloadUri() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiscoveredWorkloadResult) string { return v.WorkloadUri }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDiscoveredWorkloadResultOutput{})
}
