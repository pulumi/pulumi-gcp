// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apphub

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Application is a functional grouping of Services and Workloads that helps achieve a desired end-to-end business functionality. Services and Workloads are owned by the Application.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/apphub"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := apphub.LookupApplication(ctx, &apphub.LookupApplicationArgs{
//				Project:       "project-id",
//				ApplicationId: "application",
//				Location:      "location",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupApplication(ctx *pulumi.Context, args *LookupApplicationArgs, opts ...pulumi.InvokeOption) (*LookupApplicationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupApplicationResult
	err := ctx.Invoke("gcp:apphub/getApplication:getApplication", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getApplication.
type LookupApplicationArgs struct {
	ApplicationId string `pulumi:"applicationId"`
	Location      string `pulumi:"location"`
	Project       string `pulumi:"project"`
}

// A collection of values returned by getApplication.
type LookupApplicationResult struct {
	ApplicationId string                    `pulumi:"applicationId"`
	Attributes    []GetApplicationAttribute `pulumi:"attributes"`
	CreateTime    string                    `pulumi:"createTime"`
	Description   string                    `pulumi:"description"`
	DisplayName   string                    `pulumi:"displayName"`
	// The provider-assigned unique ID for this managed resource.
	Id         string                `pulumi:"id"`
	Location   string                `pulumi:"location"`
	Name       string                `pulumi:"name"`
	Project    string                `pulumi:"project"`
	Scopes     []GetApplicationScope `pulumi:"scopes"`
	State      string                `pulumi:"state"`
	Uid        string                `pulumi:"uid"`
	UpdateTime string                `pulumi:"updateTime"`
}

func LookupApplicationOutput(ctx *pulumi.Context, args LookupApplicationOutputArgs, opts ...pulumi.InvokeOption) LookupApplicationResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupApplicationResultOutput, error) {
			args := v.(LookupApplicationArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("gcp:apphub/getApplication:getApplication", args, LookupApplicationResultOutput{}, options).(LookupApplicationResultOutput), nil
		}).(LookupApplicationResultOutput)
}

// A collection of arguments for invoking getApplication.
type LookupApplicationOutputArgs struct {
	ApplicationId pulumi.StringInput `pulumi:"applicationId"`
	Location      pulumi.StringInput `pulumi:"location"`
	Project       pulumi.StringInput `pulumi:"project"`
}

func (LookupApplicationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupApplicationArgs)(nil)).Elem()
}

// A collection of values returned by getApplication.
type LookupApplicationResultOutput struct{ *pulumi.OutputState }

func (LookupApplicationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupApplicationResult)(nil)).Elem()
}

func (o LookupApplicationResultOutput) ToLookupApplicationResultOutput() LookupApplicationResultOutput {
	return o
}

func (o LookupApplicationResultOutput) ToLookupApplicationResultOutputWithContext(ctx context.Context) LookupApplicationResultOutput {
	return o
}

func (o LookupApplicationResultOutput) ApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApplicationResult) string { return v.ApplicationId }).(pulumi.StringOutput)
}

func (o LookupApplicationResultOutput) Attributes() GetApplicationAttributeArrayOutput {
	return o.ApplyT(func(v LookupApplicationResult) []GetApplicationAttribute { return v.Attributes }).(GetApplicationAttributeArrayOutput)
}

func (o LookupApplicationResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApplicationResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

func (o LookupApplicationResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApplicationResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupApplicationResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApplicationResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupApplicationResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApplicationResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupApplicationResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApplicationResult) string { return v.Location }).(pulumi.StringOutput)
}

func (o LookupApplicationResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApplicationResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupApplicationResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApplicationResult) string { return v.Project }).(pulumi.StringOutput)
}

func (o LookupApplicationResultOutput) Scopes() GetApplicationScopeArrayOutput {
	return o.ApplyT(func(v LookupApplicationResult) []GetApplicationScope { return v.Scopes }).(GetApplicationScopeArrayOutput)
}

func (o LookupApplicationResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApplicationResult) string { return v.State }).(pulumi.StringOutput)
}

func (o LookupApplicationResultOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApplicationResult) string { return v.Uid }).(pulumi.StringOutput)
}

func (o LookupApplicationResultOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApplicationResult) string { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupApplicationResultOutput{})
}
