// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package binaryauthorization

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves the current IAM policy data for attestor
//
// ## example
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/binaryauthorization"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := binaryauthorization.LookupAttestorIamPolicy(ctx, &binaryauthorization.LookupAttestorIamPolicyArgs{
//				Project:  pulumi.StringRef(google_binary_authorization_attestor.Attestor.Project),
//				Attestor: google_binary_authorization_attestor.Attestor.Name,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupAttestorIamPolicy(ctx *pulumi.Context, args *LookupAttestorIamPolicyArgs, opts ...pulumi.InvokeOption) (*LookupAttestorIamPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupAttestorIamPolicyResult
	err := ctx.Invoke("gcp:binaryauthorization/getAttestorIamPolicy:getAttestorIamPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAttestorIamPolicy.
type LookupAttestorIamPolicyArgs struct {
	// Used to find the parent resource to bind the IAM policy to
	Attestor string `pulumi:"attestor"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project *string `pulumi:"project"`
}

// A collection of values returned by getAttestorIamPolicy.
type LookupAttestorIamPolicyResult struct {
	Attestor string `pulumi:"attestor"`
	// (Computed) The etag of the IAM policy.
	Etag string `pulumi:"etag"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// (Required only by `binaryauthorization.AttestorIamPolicy`) The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData string `pulumi:"policyData"`
	Project    string `pulumi:"project"`
}

func LookupAttestorIamPolicyOutput(ctx *pulumi.Context, args LookupAttestorIamPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupAttestorIamPolicyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupAttestorIamPolicyResult, error) {
			args := v.(LookupAttestorIamPolicyArgs)
			r, err := LookupAttestorIamPolicy(ctx, &args, opts...)
			var s LookupAttestorIamPolicyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupAttestorIamPolicyResultOutput)
}

// A collection of arguments for invoking getAttestorIamPolicy.
type LookupAttestorIamPolicyOutputArgs struct {
	// Used to find the parent resource to bind the IAM policy to
	Attestor pulumi.StringInput `pulumi:"attestor"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupAttestorIamPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAttestorIamPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getAttestorIamPolicy.
type LookupAttestorIamPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupAttestorIamPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAttestorIamPolicyResult)(nil)).Elem()
}

func (o LookupAttestorIamPolicyResultOutput) ToLookupAttestorIamPolicyResultOutput() LookupAttestorIamPolicyResultOutput {
	return o
}

func (o LookupAttestorIamPolicyResultOutput) ToLookupAttestorIamPolicyResultOutputWithContext(ctx context.Context) LookupAttestorIamPolicyResultOutput {
	return o
}

func (o LookupAttestorIamPolicyResultOutput) Attestor() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAttestorIamPolicyResult) string { return v.Attestor }).(pulumi.StringOutput)
}

// (Computed) The etag of the IAM policy.
func (o LookupAttestorIamPolicyResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAttestorIamPolicyResult) string { return v.Etag }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupAttestorIamPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAttestorIamPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

// (Required only by `binaryauthorization.AttestorIamPolicy`) The policy data generated by
// a `organizations.getIAMPolicy` data source.
func (o LookupAttestorIamPolicyResultOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAttestorIamPolicyResult) string { return v.PolicyData }).(pulumi.StringOutput)
}

func (o LookupAttestorIamPolicyResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAttestorIamPolicyResult) string { return v.Project }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAttestorIamPolicyResultOutput{})
}
