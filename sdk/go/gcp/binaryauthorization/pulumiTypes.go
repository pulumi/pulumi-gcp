// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package binaryauthorization

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type AttestorAttestationAuthorityNote struct {
	DelegationServiceAccountEmail *string                                     `pulumi:"delegationServiceAccountEmail"`
	NoteReference                 string                                      `pulumi:"noteReference"`
	PublicKeys                    []AttestorAttestationAuthorityNotePublicKey `pulumi:"publicKeys"`
}

// AttestorAttestationAuthorityNoteInput is an input type that accepts AttestorAttestationAuthorityNoteArgs and AttestorAttestationAuthorityNoteOutput values.
// You can construct a concrete instance of `AttestorAttestationAuthorityNoteInput` via:
//
// 		 AttestorAttestationAuthorityNoteArgs{...}
//
type AttestorAttestationAuthorityNoteInput interface {
	pulumi.Input

	ToAttestorAttestationAuthorityNoteOutput() AttestorAttestationAuthorityNoteOutput
	ToAttestorAttestationAuthorityNoteOutputWithContext(context.Context) AttestorAttestationAuthorityNoteOutput
}

type AttestorAttestationAuthorityNoteArgs struct {
	DelegationServiceAccountEmail pulumi.StringPtrInput                               `pulumi:"delegationServiceAccountEmail"`
	NoteReference                 pulumi.StringInput                                  `pulumi:"noteReference"`
	PublicKeys                    AttestorAttestationAuthorityNotePublicKeyArrayInput `pulumi:"publicKeys"`
}

func (AttestorAttestationAuthorityNoteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AttestorAttestationAuthorityNote)(nil)).Elem()
}

func (i AttestorAttestationAuthorityNoteArgs) ToAttestorAttestationAuthorityNoteOutput() AttestorAttestationAuthorityNoteOutput {
	return i.ToAttestorAttestationAuthorityNoteOutputWithContext(context.Background())
}

func (i AttestorAttestationAuthorityNoteArgs) ToAttestorAttestationAuthorityNoteOutputWithContext(ctx context.Context) AttestorAttestationAuthorityNoteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttestorAttestationAuthorityNoteOutput)
}

func (i AttestorAttestationAuthorityNoteArgs) ToAttestorAttestationAuthorityNotePtrOutput() AttestorAttestationAuthorityNotePtrOutput {
	return i.ToAttestorAttestationAuthorityNotePtrOutputWithContext(context.Background())
}

func (i AttestorAttestationAuthorityNoteArgs) ToAttestorAttestationAuthorityNotePtrOutputWithContext(ctx context.Context) AttestorAttestationAuthorityNotePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttestorAttestationAuthorityNoteOutput).ToAttestorAttestationAuthorityNotePtrOutputWithContext(ctx)
}

// AttestorAttestationAuthorityNotePtrInput is an input type that accepts AttestorAttestationAuthorityNoteArgs, AttestorAttestationAuthorityNotePtr and AttestorAttestationAuthorityNotePtrOutput values.
// You can construct a concrete instance of `AttestorAttestationAuthorityNotePtrInput` via:
//
// 		 AttestorAttestationAuthorityNoteArgs{...}
//
//  or:
//
// 		 nil
//
type AttestorAttestationAuthorityNotePtrInput interface {
	pulumi.Input

	ToAttestorAttestationAuthorityNotePtrOutput() AttestorAttestationAuthorityNotePtrOutput
	ToAttestorAttestationAuthorityNotePtrOutputWithContext(context.Context) AttestorAttestationAuthorityNotePtrOutput
}

type attestorAttestationAuthorityNotePtrType AttestorAttestationAuthorityNoteArgs

func AttestorAttestationAuthorityNotePtr(v *AttestorAttestationAuthorityNoteArgs) AttestorAttestationAuthorityNotePtrInput {
	return (*attestorAttestationAuthorityNotePtrType)(v)
}

func (*attestorAttestationAuthorityNotePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AttestorAttestationAuthorityNote)(nil)).Elem()
}

func (i *attestorAttestationAuthorityNotePtrType) ToAttestorAttestationAuthorityNotePtrOutput() AttestorAttestationAuthorityNotePtrOutput {
	return i.ToAttestorAttestationAuthorityNotePtrOutputWithContext(context.Background())
}

func (i *attestorAttestationAuthorityNotePtrType) ToAttestorAttestationAuthorityNotePtrOutputWithContext(ctx context.Context) AttestorAttestationAuthorityNotePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttestorAttestationAuthorityNotePtrOutput)
}

type AttestorAttestationAuthorityNoteOutput struct{ *pulumi.OutputState }

func (AttestorAttestationAuthorityNoteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AttestorAttestationAuthorityNote)(nil)).Elem()
}

func (o AttestorAttestationAuthorityNoteOutput) ToAttestorAttestationAuthorityNoteOutput() AttestorAttestationAuthorityNoteOutput {
	return o
}

func (o AttestorAttestationAuthorityNoteOutput) ToAttestorAttestationAuthorityNoteOutputWithContext(ctx context.Context) AttestorAttestationAuthorityNoteOutput {
	return o
}

func (o AttestorAttestationAuthorityNoteOutput) ToAttestorAttestationAuthorityNotePtrOutput() AttestorAttestationAuthorityNotePtrOutput {
	return o.ToAttestorAttestationAuthorityNotePtrOutputWithContext(context.Background())
}

func (o AttestorAttestationAuthorityNoteOutput) ToAttestorAttestationAuthorityNotePtrOutputWithContext(ctx context.Context) AttestorAttestationAuthorityNotePtrOutput {
	return o.ApplyT(func(v AttestorAttestationAuthorityNote) *AttestorAttestationAuthorityNote {
		return &v
	}).(AttestorAttestationAuthorityNotePtrOutput)
}
func (o AttestorAttestationAuthorityNoteOutput) DelegationServiceAccountEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AttestorAttestationAuthorityNote) *string { return v.DelegationServiceAccountEmail }).(pulumi.StringPtrOutput)
}

func (o AttestorAttestationAuthorityNoteOutput) NoteReference() pulumi.StringOutput {
	return o.ApplyT(func(v AttestorAttestationAuthorityNote) string { return v.NoteReference }).(pulumi.StringOutput)
}

func (o AttestorAttestationAuthorityNoteOutput) PublicKeys() AttestorAttestationAuthorityNotePublicKeyArrayOutput {
	return o.ApplyT(func(v AttestorAttestationAuthorityNote) []AttestorAttestationAuthorityNotePublicKey {
		return v.PublicKeys
	}).(AttestorAttestationAuthorityNotePublicKeyArrayOutput)
}

type AttestorAttestationAuthorityNotePtrOutput struct{ *pulumi.OutputState }

func (AttestorAttestationAuthorityNotePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AttestorAttestationAuthorityNote)(nil)).Elem()
}

func (o AttestorAttestationAuthorityNotePtrOutput) ToAttestorAttestationAuthorityNotePtrOutput() AttestorAttestationAuthorityNotePtrOutput {
	return o
}

func (o AttestorAttestationAuthorityNotePtrOutput) ToAttestorAttestationAuthorityNotePtrOutputWithContext(ctx context.Context) AttestorAttestationAuthorityNotePtrOutput {
	return o
}

func (o AttestorAttestationAuthorityNotePtrOutput) Elem() AttestorAttestationAuthorityNoteOutput {
	return o.ApplyT(func(v *AttestorAttestationAuthorityNote) AttestorAttestationAuthorityNote { return *v }).(AttestorAttestationAuthorityNoteOutput)
}

func (o AttestorAttestationAuthorityNotePtrOutput) DelegationServiceAccountEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AttestorAttestationAuthorityNote) *string { return v.DelegationServiceAccountEmail }).(pulumi.StringPtrOutput)
}

func (o AttestorAttestationAuthorityNotePtrOutput) NoteReference() pulumi.StringOutput {
	return o.ApplyT(func(v AttestorAttestationAuthorityNote) string { return v.NoteReference }).(pulumi.StringOutput)
}

func (o AttestorAttestationAuthorityNotePtrOutput) PublicKeys() AttestorAttestationAuthorityNotePublicKeyArrayOutput {
	return o.ApplyT(func(v AttestorAttestationAuthorityNote) []AttestorAttestationAuthorityNotePublicKey {
		return v.PublicKeys
	}).(AttestorAttestationAuthorityNotePublicKeyArrayOutput)
}

type AttestorAttestationAuthorityNotePublicKey struct {
	AsciiArmoredPgpPublicKey *string `pulumi:"asciiArmoredPgpPublicKey"`
	Comment                  *string `pulumi:"comment"`
	// an identifier for the resource with format `projects/{{project}}/attestors/{{name}}`
	Id            *string                                                 `pulumi:"id"`
	PkixPublicKey *AttestorAttestationAuthorityNotePublicKeyPkixPublicKey `pulumi:"pkixPublicKey"`
}

// AttestorAttestationAuthorityNotePublicKeyInput is an input type that accepts AttestorAttestationAuthorityNotePublicKeyArgs and AttestorAttestationAuthorityNotePublicKeyOutput values.
// You can construct a concrete instance of `AttestorAttestationAuthorityNotePublicKeyInput` via:
//
// 		 AttestorAttestationAuthorityNotePublicKeyArgs{...}
//
type AttestorAttestationAuthorityNotePublicKeyInput interface {
	pulumi.Input

	ToAttestorAttestationAuthorityNotePublicKeyOutput() AttestorAttestationAuthorityNotePublicKeyOutput
	ToAttestorAttestationAuthorityNotePublicKeyOutputWithContext(context.Context) AttestorAttestationAuthorityNotePublicKeyOutput
}

type AttestorAttestationAuthorityNotePublicKeyArgs struct {
	AsciiArmoredPgpPublicKey pulumi.StringPtrInput `pulumi:"asciiArmoredPgpPublicKey"`
	Comment                  pulumi.StringPtrInput `pulumi:"comment"`
	// an identifier for the resource with format `projects/{{project}}/attestors/{{name}}`
	Id            pulumi.StringPtrInput                                          `pulumi:"id"`
	PkixPublicKey AttestorAttestationAuthorityNotePublicKeyPkixPublicKeyPtrInput `pulumi:"pkixPublicKey"`
}

func (AttestorAttestationAuthorityNotePublicKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AttestorAttestationAuthorityNotePublicKey)(nil)).Elem()
}

func (i AttestorAttestationAuthorityNotePublicKeyArgs) ToAttestorAttestationAuthorityNotePublicKeyOutput() AttestorAttestationAuthorityNotePublicKeyOutput {
	return i.ToAttestorAttestationAuthorityNotePublicKeyOutputWithContext(context.Background())
}

func (i AttestorAttestationAuthorityNotePublicKeyArgs) ToAttestorAttestationAuthorityNotePublicKeyOutputWithContext(ctx context.Context) AttestorAttestationAuthorityNotePublicKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttestorAttestationAuthorityNotePublicKeyOutput)
}

// AttestorAttestationAuthorityNotePublicKeyArrayInput is an input type that accepts AttestorAttestationAuthorityNotePublicKeyArray and AttestorAttestationAuthorityNotePublicKeyArrayOutput values.
// You can construct a concrete instance of `AttestorAttestationAuthorityNotePublicKeyArrayInput` via:
//
// 		 AttestorAttestationAuthorityNotePublicKeyArray{ AttestorAttestationAuthorityNotePublicKeyArgs{...} }
//
type AttestorAttestationAuthorityNotePublicKeyArrayInput interface {
	pulumi.Input

	ToAttestorAttestationAuthorityNotePublicKeyArrayOutput() AttestorAttestationAuthorityNotePublicKeyArrayOutput
	ToAttestorAttestationAuthorityNotePublicKeyArrayOutputWithContext(context.Context) AttestorAttestationAuthorityNotePublicKeyArrayOutput
}

type AttestorAttestationAuthorityNotePublicKeyArray []AttestorAttestationAuthorityNotePublicKeyInput

func (AttestorAttestationAuthorityNotePublicKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AttestorAttestationAuthorityNotePublicKey)(nil)).Elem()
}

func (i AttestorAttestationAuthorityNotePublicKeyArray) ToAttestorAttestationAuthorityNotePublicKeyArrayOutput() AttestorAttestationAuthorityNotePublicKeyArrayOutput {
	return i.ToAttestorAttestationAuthorityNotePublicKeyArrayOutputWithContext(context.Background())
}

func (i AttestorAttestationAuthorityNotePublicKeyArray) ToAttestorAttestationAuthorityNotePublicKeyArrayOutputWithContext(ctx context.Context) AttestorAttestationAuthorityNotePublicKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttestorAttestationAuthorityNotePublicKeyArrayOutput)
}

type AttestorAttestationAuthorityNotePublicKeyOutput struct{ *pulumi.OutputState }

func (AttestorAttestationAuthorityNotePublicKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AttestorAttestationAuthorityNotePublicKey)(nil)).Elem()
}

func (o AttestorAttestationAuthorityNotePublicKeyOutput) ToAttestorAttestationAuthorityNotePublicKeyOutput() AttestorAttestationAuthorityNotePublicKeyOutput {
	return o
}

func (o AttestorAttestationAuthorityNotePublicKeyOutput) ToAttestorAttestationAuthorityNotePublicKeyOutputWithContext(ctx context.Context) AttestorAttestationAuthorityNotePublicKeyOutput {
	return o
}

func (o AttestorAttestationAuthorityNotePublicKeyOutput) AsciiArmoredPgpPublicKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AttestorAttestationAuthorityNotePublicKey) *string { return v.AsciiArmoredPgpPublicKey }).(pulumi.StringPtrOutput)
}

func (o AttestorAttestationAuthorityNotePublicKeyOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AttestorAttestationAuthorityNotePublicKey) *string { return v.Comment }).(pulumi.StringPtrOutput)
}

// an identifier for the resource with format `projects/{{project}}/attestors/{{name}}`
func (o AttestorAttestationAuthorityNotePublicKeyOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AttestorAttestationAuthorityNotePublicKey) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o AttestorAttestationAuthorityNotePublicKeyOutput) PkixPublicKey() AttestorAttestationAuthorityNotePublicKeyPkixPublicKeyPtrOutput {
	return o.ApplyT(func(v AttestorAttestationAuthorityNotePublicKey) *AttestorAttestationAuthorityNotePublicKeyPkixPublicKey {
		return v.PkixPublicKey
	}).(AttestorAttestationAuthorityNotePublicKeyPkixPublicKeyPtrOutput)
}

type AttestorAttestationAuthorityNotePublicKeyArrayOutput struct{ *pulumi.OutputState }

func (AttestorAttestationAuthorityNotePublicKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AttestorAttestationAuthorityNotePublicKey)(nil)).Elem()
}

func (o AttestorAttestationAuthorityNotePublicKeyArrayOutput) ToAttestorAttestationAuthorityNotePublicKeyArrayOutput() AttestorAttestationAuthorityNotePublicKeyArrayOutput {
	return o
}

func (o AttestorAttestationAuthorityNotePublicKeyArrayOutput) ToAttestorAttestationAuthorityNotePublicKeyArrayOutputWithContext(ctx context.Context) AttestorAttestationAuthorityNotePublicKeyArrayOutput {
	return o
}

func (o AttestorAttestationAuthorityNotePublicKeyArrayOutput) Index(i pulumi.IntInput) AttestorAttestationAuthorityNotePublicKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AttestorAttestationAuthorityNotePublicKey {
		return vs[0].([]AttestorAttestationAuthorityNotePublicKey)[vs[1].(int)]
	}).(AttestorAttestationAuthorityNotePublicKeyOutput)
}

type AttestorAttestationAuthorityNotePublicKeyPkixPublicKey struct {
	PublicKeyPem       *string `pulumi:"publicKeyPem"`
	SignatureAlgorithm *string `pulumi:"signatureAlgorithm"`
}

// AttestorAttestationAuthorityNotePublicKeyPkixPublicKeyInput is an input type that accepts AttestorAttestationAuthorityNotePublicKeyPkixPublicKeyArgs and AttestorAttestationAuthorityNotePublicKeyPkixPublicKeyOutput values.
// You can construct a concrete instance of `AttestorAttestationAuthorityNotePublicKeyPkixPublicKeyInput` via:
//
// 		 AttestorAttestationAuthorityNotePublicKeyPkixPublicKeyArgs{...}
//
type AttestorAttestationAuthorityNotePublicKeyPkixPublicKeyInput interface {
	pulumi.Input

	ToAttestorAttestationAuthorityNotePublicKeyPkixPublicKeyOutput() AttestorAttestationAuthorityNotePublicKeyPkixPublicKeyOutput
	ToAttestorAttestationAuthorityNotePublicKeyPkixPublicKeyOutputWithContext(context.Context) AttestorAttestationAuthorityNotePublicKeyPkixPublicKeyOutput
}

type AttestorAttestationAuthorityNotePublicKeyPkixPublicKeyArgs struct {
	PublicKeyPem       pulumi.StringPtrInput `pulumi:"publicKeyPem"`
	SignatureAlgorithm pulumi.StringPtrInput `pulumi:"signatureAlgorithm"`
}

func (AttestorAttestationAuthorityNotePublicKeyPkixPublicKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AttestorAttestationAuthorityNotePublicKeyPkixPublicKey)(nil)).Elem()
}

func (i AttestorAttestationAuthorityNotePublicKeyPkixPublicKeyArgs) ToAttestorAttestationAuthorityNotePublicKeyPkixPublicKeyOutput() AttestorAttestationAuthorityNotePublicKeyPkixPublicKeyOutput {
	return i.ToAttestorAttestationAuthorityNotePublicKeyPkixPublicKeyOutputWithContext(context.Background())
}

func (i AttestorAttestationAuthorityNotePublicKeyPkixPublicKeyArgs) ToAttestorAttestationAuthorityNotePublicKeyPkixPublicKeyOutputWithContext(ctx context.Context) AttestorAttestationAuthorityNotePublicKeyPkixPublicKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttestorAttestationAuthorityNotePublicKeyPkixPublicKeyOutput)
}

func (i AttestorAttestationAuthorityNotePublicKeyPkixPublicKeyArgs) ToAttestorAttestationAuthorityNotePublicKeyPkixPublicKeyPtrOutput() AttestorAttestationAuthorityNotePublicKeyPkixPublicKeyPtrOutput {
	return i.ToAttestorAttestationAuthorityNotePublicKeyPkixPublicKeyPtrOutputWithContext(context.Background())
}

func (i AttestorAttestationAuthorityNotePublicKeyPkixPublicKeyArgs) ToAttestorAttestationAuthorityNotePublicKeyPkixPublicKeyPtrOutputWithContext(ctx context.Context) AttestorAttestationAuthorityNotePublicKeyPkixPublicKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttestorAttestationAuthorityNotePublicKeyPkixPublicKeyOutput).ToAttestorAttestationAuthorityNotePublicKeyPkixPublicKeyPtrOutputWithContext(ctx)
}

// AttestorAttestationAuthorityNotePublicKeyPkixPublicKeyPtrInput is an input type that accepts AttestorAttestationAuthorityNotePublicKeyPkixPublicKeyArgs, AttestorAttestationAuthorityNotePublicKeyPkixPublicKeyPtr and AttestorAttestationAuthorityNotePublicKeyPkixPublicKeyPtrOutput values.
// You can construct a concrete instance of `AttestorAttestationAuthorityNotePublicKeyPkixPublicKeyPtrInput` via:
//
// 		 AttestorAttestationAuthorityNotePublicKeyPkixPublicKeyArgs{...}
//
//  or:
//
// 		 nil
//
type AttestorAttestationAuthorityNotePublicKeyPkixPublicKeyPtrInput interface {
	pulumi.Input

	ToAttestorAttestationAuthorityNotePublicKeyPkixPublicKeyPtrOutput() AttestorAttestationAuthorityNotePublicKeyPkixPublicKeyPtrOutput
	ToAttestorAttestationAuthorityNotePublicKeyPkixPublicKeyPtrOutputWithContext(context.Context) AttestorAttestationAuthorityNotePublicKeyPkixPublicKeyPtrOutput
}

type attestorAttestationAuthorityNotePublicKeyPkixPublicKeyPtrType AttestorAttestationAuthorityNotePublicKeyPkixPublicKeyArgs

func AttestorAttestationAuthorityNotePublicKeyPkixPublicKeyPtr(v *AttestorAttestationAuthorityNotePublicKeyPkixPublicKeyArgs) AttestorAttestationAuthorityNotePublicKeyPkixPublicKeyPtrInput {
	return (*attestorAttestationAuthorityNotePublicKeyPkixPublicKeyPtrType)(v)
}

func (*attestorAttestationAuthorityNotePublicKeyPkixPublicKeyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AttestorAttestationAuthorityNotePublicKeyPkixPublicKey)(nil)).Elem()
}

func (i *attestorAttestationAuthorityNotePublicKeyPkixPublicKeyPtrType) ToAttestorAttestationAuthorityNotePublicKeyPkixPublicKeyPtrOutput() AttestorAttestationAuthorityNotePublicKeyPkixPublicKeyPtrOutput {
	return i.ToAttestorAttestationAuthorityNotePublicKeyPkixPublicKeyPtrOutputWithContext(context.Background())
}

func (i *attestorAttestationAuthorityNotePublicKeyPkixPublicKeyPtrType) ToAttestorAttestationAuthorityNotePublicKeyPkixPublicKeyPtrOutputWithContext(ctx context.Context) AttestorAttestationAuthorityNotePublicKeyPkixPublicKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttestorAttestationAuthorityNotePublicKeyPkixPublicKeyPtrOutput)
}

type AttestorAttestationAuthorityNotePublicKeyPkixPublicKeyOutput struct{ *pulumi.OutputState }

func (AttestorAttestationAuthorityNotePublicKeyPkixPublicKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AttestorAttestationAuthorityNotePublicKeyPkixPublicKey)(nil)).Elem()
}

func (o AttestorAttestationAuthorityNotePublicKeyPkixPublicKeyOutput) ToAttestorAttestationAuthorityNotePublicKeyPkixPublicKeyOutput() AttestorAttestationAuthorityNotePublicKeyPkixPublicKeyOutput {
	return o
}

func (o AttestorAttestationAuthorityNotePublicKeyPkixPublicKeyOutput) ToAttestorAttestationAuthorityNotePublicKeyPkixPublicKeyOutputWithContext(ctx context.Context) AttestorAttestationAuthorityNotePublicKeyPkixPublicKeyOutput {
	return o
}

func (o AttestorAttestationAuthorityNotePublicKeyPkixPublicKeyOutput) ToAttestorAttestationAuthorityNotePublicKeyPkixPublicKeyPtrOutput() AttestorAttestationAuthorityNotePublicKeyPkixPublicKeyPtrOutput {
	return o.ToAttestorAttestationAuthorityNotePublicKeyPkixPublicKeyPtrOutputWithContext(context.Background())
}

func (o AttestorAttestationAuthorityNotePublicKeyPkixPublicKeyOutput) ToAttestorAttestationAuthorityNotePublicKeyPkixPublicKeyPtrOutputWithContext(ctx context.Context) AttestorAttestationAuthorityNotePublicKeyPkixPublicKeyPtrOutput {
	return o.ApplyT(func(v AttestorAttestationAuthorityNotePublicKeyPkixPublicKey) *AttestorAttestationAuthorityNotePublicKeyPkixPublicKey {
		return &v
	}).(AttestorAttestationAuthorityNotePublicKeyPkixPublicKeyPtrOutput)
}
func (o AttestorAttestationAuthorityNotePublicKeyPkixPublicKeyOutput) PublicKeyPem() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AttestorAttestationAuthorityNotePublicKeyPkixPublicKey) *string { return v.PublicKeyPem }).(pulumi.StringPtrOutput)
}

func (o AttestorAttestationAuthorityNotePublicKeyPkixPublicKeyOutput) SignatureAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AttestorAttestationAuthorityNotePublicKeyPkixPublicKey) *string { return v.SignatureAlgorithm }).(pulumi.StringPtrOutput)
}

type AttestorAttestationAuthorityNotePublicKeyPkixPublicKeyPtrOutput struct{ *pulumi.OutputState }

func (AttestorAttestationAuthorityNotePublicKeyPkixPublicKeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AttestorAttestationAuthorityNotePublicKeyPkixPublicKey)(nil)).Elem()
}

func (o AttestorAttestationAuthorityNotePublicKeyPkixPublicKeyPtrOutput) ToAttestorAttestationAuthorityNotePublicKeyPkixPublicKeyPtrOutput() AttestorAttestationAuthorityNotePublicKeyPkixPublicKeyPtrOutput {
	return o
}

func (o AttestorAttestationAuthorityNotePublicKeyPkixPublicKeyPtrOutput) ToAttestorAttestationAuthorityNotePublicKeyPkixPublicKeyPtrOutputWithContext(ctx context.Context) AttestorAttestationAuthorityNotePublicKeyPkixPublicKeyPtrOutput {
	return o
}

func (o AttestorAttestationAuthorityNotePublicKeyPkixPublicKeyPtrOutput) Elem() AttestorAttestationAuthorityNotePublicKeyPkixPublicKeyOutput {
	return o.ApplyT(func(v *AttestorAttestationAuthorityNotePublicKeyPkixPublicKey) AttestorAttestationAuthorityNotePublicKeyPkixPublicKey {
		return *v
	}).(AttestorAttestationAuthorityNotePublicKeyPkixPublicKeyOutput)
}

func (o AttestorAttestationAuthorityNotePublicKeyPkixPublicKeyPtrOutput) PublicKeyPem() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AttestorAttestationAuthorityNotePublicKeyPkixPublicKey) *string { return v.PublicKeyPem }).(pulumi.StringPtrOutput)
}

func (o AttestorAttestationAuthorityNotePublicKeyPkixPublicKeyPtrOutput) SignatureAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AttestorAttestationAuthorityNotePublicKeyPkixPublicKey) *string { return v.SignatureAlgorithm }).(pulumi.StringPtrOutput)
}

type AttestorIamBindingCondition struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

// AttestorIamBindingConditionInput is an input type that accepts AttestorIamBindingConditionArgs and AttestorIamBindingConditionOutput values.
// You can construct a concrete instance of `AttestorIamBindingConditionInput` via:
//
// 		 AttestorIamBindingConditionArgs{...}
//
type AttestorIamBindingConditionInput interface {
	pulumi.Input

	ToAttestorIamBindingConditionOutput() AttestorIamBindingConditionOutput
	ToAttestorIamBindingConditionOutputWithContext(context.Context) AttestorIamBindingConditionOutput
}

type AttestorIamBindingConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (AttestorIamBindingConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AttestorIamBindingCondition)(nil)).Elem()
}

func (i AttestorIamBindingConditionArgs) ToAttestorIamBindingConditionOutput() AttestorIamBindingConditionOutput {
	return i.ToAttestorIamBindingConditionOutputWithContext(context.Background())
}

func (i AttestorIamBindingConditionArgs) ToAttestorIamBindingConditionOutputWithContext(ctx context.Context) AttestorIamBindingConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttestorIamBindingConditionOutput)
}

func (i AttestorIamBindingConditionArgs) ToAttestorIamBindingConditionPtrOutput() AttestorIamBindingConditionPtrOutput {
	return i.ToAttestorIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i AttestorIamBindingConditionArgs) ToAttestorIamBindingConditionPtrOutputWithContext(ctx context.Context) AttestorIamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttestorIamBindingConditionOutput).ToAttestorIamBindingConditionPtrOutputWithContext(ctx)
}

// AttestorIamBindingConditionPtrInput is an input type that accepts AttestorIamBindingConditionArgs, AttestorIamBindingConditionPtr and AttestorIamBindingConditionPtrOutput values.
// You can construct a concrete instance of `AttestorIamBindingConditionPtrInput` via:
//
// 		 AttestorIamBindingConditionArgs{...}
//
//  or:
//
// 		 nil
//
type AttestorIamBindingConditionPtrInput interface {
	pulumi.Input

	ToAttestorIamBindingConditionPtrOutput() AttestorIamBindingConditionPtrOutput
	ToAttestorIamBindingConditionPtrOutputWithContext(context.Context) AttestorIamBindingConditionPtrOutput
}

type attestorIamBindingConditionPtrType AttestorIamBindingConditionArgs

func AttestorIamBindingConditionPtr(v *AttestorIamBindingConditionArgs) AttestorIamBindingConditionPtrInput {
	return (*attestorIamBindingConditionPtrType)(v)
}

func (*attestorIamBindingConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AttestorIamBindingCondition)(nil)).Elem()
}

func (i *attestorIamBindingConditionPtrType) ToAttestorIamBindingConditionPtrOutput() AttestorIamBindingConditionPtrOutput {
	return i.ToAttestorIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i *attestorIamBindingConditionPtrType) ToAttestorIamBindingConditionPtrOutputWithContext(ctx context.Context) AttestorIamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttestorIamBindingConditionPtrOutput)
}

type AttestorIamBindingConditionOutput struct{ *pulumi.OutputState }

func (AttestorIamBindingConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AttestorIamBindingCondition)(nil)).Elem()
}

func (o AttestorIamBindingConditionOutput) ToAttestorIamBindingConditionOutput() AttestorIamBindingConditionOutput {
	return o
}

func (o AttestorIamBindingConditionOutput) ToAttestorIamBindingConditionOutputWithContext(ctx context.Context) AttestorIamBindingConditionOutput {
	return o
}

func (o AttestorIamBindingConditionOutput) ToAttestorIamBindingConditionPtrOutput() AttestorIamBindingConditionPtrOutput {
	return o.ToAttestorIamBindingConditionPtrOutputWithContext(context.Background())
}

func (o AttestorIamBindingConditionOutput) ToAttestorIamBindingConditionPtrOutputWithContext(ctx context.Context) AttestorIamBindingConditionPtrOutput {
	return o.ApplyT(func(v AttestorIamBindingCondition) *AttestorIamBindingCondition {
		return &v
	}).(AttestorIamBindingConditionPtrOutput)
}
func (o AttestorIamBindingConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AttestorIamBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o AttestorIamBindingConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v AttestorIamBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o AttestorIamBindingConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v AttestorIamBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

type AttestorIamBindingConditionPtrOutput struct{ *pulumi.OutputState }

func (AttestorIamBindingConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AttestorIamBindingCondition)(nil)).Elem()
}

func (o AttestorIamBindingConditionPtrOutput) ToAttestorIamBindingConditionPtrOutput() AttestorIamBindingConditionPtrOutput {
	return o
}

func (o AttestorIamBindingConditionPtrOutput) ToAttestorIamBindingConditionPtrOutputWithContext(ctx context.Context) AttestorIamBindingConditionPtrOutput {
	return o
}

func (o AttestorIamBindingConditionPtrOutput) Elem() AttestorIamBindingConditionOutput {
	return o.ApplyT(func(v *AttestorIamBindingCondition) AttestorIamBindingCondition { return *v }).(AttestorIamBindingConditionOutput)
}

func (o AttestorIamBindingConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AttestorIamBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o AttestorIamBindingConditionPtrOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v AttestorIamBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o AttestorIamBindingConditionPtrOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v AttestorIamBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

type AttestorIamMemberCondition struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

// AttestorIamMemberConditionInput is an input type that accepts AttestorIamMemberConditionArgs and AttestorIamMemberConditionOutput values.
// You can construct a concrete instance of `AttestorIamMemberConditionInput` via:
//
// 		 AttestorIamMemberConditionArgs{...}
//
type AttestorIamMemberConditionInput interface {
	pulumi.Input

	ToAttestorIamMemberConditionOutput() AttestorIamMemberConditionOutput
	ToAttestorIamMemberConditionOutputWithContext(context.Context) AttestorIamMemberConditionOutput
}

type AttestorIamMemberConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (AttestorIamMemberConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AttestorIamMemberCondition)(nil)).Elem()
}

func (i AttestorIamMemberConditionArgs) ToAttestorIamMemberConditionOutput() AttestorIamMemberConditionOutput {
	return i.ToAttestorIamMemberConditionOutputWithContext(context.Background())
}

func (i AttestorIamMemberConditionArgs) ToAttestorIamMemberConditionOutputWithContext(ctx context.Context) AttestorIamMemberConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttestorIamMemberConditionOutput)
}

func (i AttestorIamMemberConditionArgs) ToAttestorIamMemberConditionPtrOutput() AttestorIamMemberConditionPtrOutput {
	return i.ToAttestorIamMemberConditionPtrOutputWithContext(context.Background())
}

func (i AttestorIamMemberConditionArgs) ToAttestorIamMemberConditionPtrOutputWithContext(ctx context.Context) AttestorIamMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttestorIamMemberConditionOutput).ToAttestorIamMemberConditionPtrOutputWithContext(ctx)
}

// AttestorIamMemberConditionPtrInput is an input type that accepts AttestorIamMemberConditionArgs, AttestorIamMemberConditionPtr and AttestorIamMemberConditionPtrOutput values.
// You can construct a concrete instance of `AttestorIamMemberConditionPtrInput` via:
//
// 		 AttestorIamMemberConditionArgs{...}
//
//  or:
//
// 		 nil
//
type AttestorIamMemberConditionPtrInput interface {
	pulumi.Input

	ToAttestorIamMemberConditionPtrOutput() AttestorIamMemberConditionPtrOutput
	ToAttestorIamMemberConditionPtrOutputWithContext(context.Context) AttestorIamMemberConditionPtrOutput
}

type attestorIamMemberConditionPtrType AttestorIamMemberConditionArgs

func AttestorIamMemberConditionPtr(v *AttestorIamMemberConditionArgs) AttestorIamMemberConditionPtrInput {
	return (*attestorIamMemberConditionPtrType)(v)
}

func (*attestorIamMemberConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AttestorIamMemberCondition)(nil)).Elem()
}

func (i *attestorIamMemberConditionPtrType) ToAttestorIamMemberConditionPtrOutput() AttestorIamMemberConditionPtrOutput {
	return i.ToAttestorIamMemberConditionPtrOutputWithContext(context.Background())
}

func (i *attestorIamMemberConditionPtrType) ToAttestorIamMemberConditionPtrOutputWithContext(ctx context.Context) AttestorIamMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttestorIamMemberConditionPtrOutput)
}

type AttestorIamMemberConditionOutput struct{ *pulumi.OutputState }

func (AttestorIamMemberConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AttestorIamMemberCondition)(nil)).Elem()
}

func (o AttestorIamMemberConditionOutput) ToAttestorIamMemberConditionOutput() AttestorIamMemberConditionOutput {
	return o
}

func (o AttestorIamMemberConditionOutput) ToAttestorIamMemberConditionOutputWithContext(ctx context.Context) AttestorIamMemberConditionOutput {
	return o
}

func (o AttestorIamMemberConditionOutput) ToAttestorIamMemberConditionPtrOutput() AttestorIamMemberConditionPtrOutput {
	return o.ToAttestorIamMemberConditionPtrOutputWithContext(context.Background())
}

func (o AttestorIamMemberConditionOutput) ToAttestorIamMemberConditionPtrOutputWithContext(ctx context.Context) AttestorIamMemberConditionPtrOutput {
	return o.ApplyT(func(v AttestorIamMemberCondition) *AttestorIamMemberCondition {
		return &v
	}).(AttestorIamMemberConditionPtrOutput)
}
func (o AttestorIamMemberConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AttestorIamMemberCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o AttestorIamMemberConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v AttestorIamMemberCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o AttestorIamMemberConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v AttestorIamMemberCondition) string { return v.Title }).(pulumi.StringOutput)
}

type AttestorIamMemberConditionPtrOutput struct{ *pulumi.OutputState }

func (AttestorIamMemberConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AttestorIamMemberCondition)(nil)).Elem()
}

func (o AttestorIamMemberConditionPtrOutput) ToAttestorIamMemberConditionPtrOutput() AttestorIamMemberConditionPtrOutput {
	return o
}

func (o AttestorIamMemberConditionPtrOutput) ToAttestorIamMemberConditionPtrOutputWithContext(ctx context.Context) AttestorIamMemberConditionPtrOutput {
	return o
}

func (o AttestorIamMemberConditionPtrOutput) Elem() AttestorIamMemberConditionOutput {
	return o.ApplyT(func(v *AttestorIamMemberCondition) AttestorIamMemberCondition { return *v }).(AttestorIamMemberConditionOutput)
}

func (o AttestorIamMemberConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AttestorIamMemberCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o AttestorIamMemberConditionPtrOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v AttestorIamMemberCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o AttestorIamMemberConditionPtrOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v AttestorIamMemberCondition) string { return v.Title }).(pulumi.StringOutput)
}

type PolicyAdmissionWhitelistPattern struct {
	NamePattern string `pulumi:"namePattern"`
}

// PolicyAdmissionWhitelistPatternInput is an input type that accepts PolicyAdmissionWhitelistPatternArgs and PolicyAdmissionWhitelistPatternOutput values.
// You can construct a concrete instance of `PolicyAdmissionWhitelistPatternInput` via:
//
// 		 PolicyAdmissionWhitelistPatternArgs{...}
//
type PolicyAdmissionWhitelistPatternInput interface {
	pulumi.Input

	ToPolicyAdmissionWhitelistPatternOutput() PolicyAdmissionWhitelistPatternOutput
	ToPolicyAdmissionWhitelistPatternOutputWithContext(context.Context) PolicyAdmissionWhitelistPatternOutput
}

type PolicyAdmissionWhitelistPatternArgs struct {
	NamePattern pulumi.StringInput `pulumi:"namePattern"`
}

func (PolicyAdmissionWhitelistPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyAdmissionWhitelistPattern)(nil)).Elem()
}

func (i PolicyAdmissionWhitelistPatternArgs) ToPolicyAdmissionWhitelistPatternOutput() PolicyAdmissionWhitelistPatternOutput {
	return i.ToPolicyAdmissionWhitelistPatternOutputWithContext(context.Background())
}

func (i PolicyAdmissionWhitelistPatternArgs) ToPolicyAdmissionWhitelistPatternOutputWithContext(ctx context.Context) PolicyAdmissionWhitelistPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyAdmissionWhitelistPatternOutput)
}

// PolicyAdmissionWhitelistPatternArrayInput is an input type that accepts PolicyAdmissionWhitelistPatternArray and PolicyAdmissionWhitelistPatternArrayOutput values.
// You can construct a concrete instance of `PolicyAdmissionWhitelistPatternArrayInput` via:
//
// 		 PolicyAdmissionWhitelistPatternArray{ PolicyAdmissionWhitelistPatternArgs{...} }
//
type PolicyAdmissionWhitelistPatternArrayInput interface {
	pulumi.Input

	ToPolicyAdmissionWhitelistPatternArrayOutput() PolicyAdmissionWhitelistPatternArrayOutput
	ToPolicyAdmissionWhitelistPatternArrayOutputWithContext(context.Context) PolicyAdmissionWhitelistPatternArrayOutput
}

type PolicyAdmissionWhitelistPatternArray []PolicyAdmissionWhitelistPatternInput

func (PolicyAdmissionWhitelistPatternArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyAdmissionWhitelistPattern)(nil)).Elem()
}

func (i PolicyAdmissionWhitelistPatternArray) ToPolicyAdmissionWhitelistPatternArrayOutput() PolicyAdmissionWhitelistPatternArrayOutput {
	return i.ToPolicyAdmissionWhitelistPatternArrayOutputWithContext(context.Background())
}

func (i PolicyAdmissionWhitelistPatternArray) ToPolicyAdmissionWhitelistPatternArrayOutputWithContext(ctx context.Context) PolicyAdmissionWhitelistPatternArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyAdmissionWhitelistPatternArrayOutput)
}

type PolicyAdmissionWhitelistPatternOutput struct{ *pulumi.OutputState }

func (PolicyAdmissionWhitelistPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyAdmissionWhitelistPattern)(nil)).Elem()
}

func (o PolicyAdmissionWhitelistPatternOutput) ToPolicyAdmissionWhitelistPatternOutput() PolicyAdmissionWhitelistPatternOutput {
	return o
}

func (o PolicyAdmissionWhitelistPatternOutput) ToPolicyAdmissionWhitelistPatternOutputWithContext(ctx context.Context) PolicyAdmissionWhitelistPatternOutput {
	return o
}

func (o PolicyAdmissionWhitelistPatternOutput) NamePattern() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyAdmissionWhitelistPattern) string { return v.NamePattern }).(pulumi.StringOutput)
}

type PolicyAdmissionWhitelistPatternArrayOutput struct{ *pulumi.OutputState }

func (PolicyAdmissionWhitelistPatternArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyAdmissionWhitelistPattern)(nil)).Elem()
}

func (o PolicyAdmissionWhitelistPatternArrayOutput) ToPolicyAdmissionWhitelistPatternArrayOutput() PolicyAdmissionWhitelistPatternArrayOutput {
	return o
}

func (o PolicyAdmissionWhitelistPatternArrayOutput) ToPolicyAdmissionWhitelistPatternArrayOutputWithContext(ctx context.Context) PolicyAdmissionWhitelistPatternArrayOutput {
	return o
}

func (o PolicyAdmissionWhitelistPatternArrayOutput) Index(i pulumi.IntInput) PolicyAdmissionWhitelistPatternOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyAdmissionWhitelistPattern {
		return vs[0].([]PolicyAdmissionWhitelistPattern)[vs[1].(int)]
	}).(PolicyAdmissionWhitelistPatternOutput)
}

type PolicyClusterAdmissionRule struct {
	// The identifier for this object. Format specified above.
	Cluster                 string   `pulumi:"cluster"`
	EnforcementMode         string   `pulumi:"enforcementMode"`
	EvaluationMode          string   `pulumi:"evaluationMode"`
	RequireAttestationsBies []string `pulumi:"requireAttestationsBies"`
}

// PolicyClusterAdmissionRuleInput is an input type that accepts PolicyClusterAdmissionRuleArgs and PolicyClusterAdmissionRuleOutput values.
// You can construct a concrete instance of `PolicyClusterAdmissionRuleInput` via:
//
// 		 PolicyClusterAdmissionRuleArgs{...}
//
type PolicyClusterAdmissionRuleInput interface {
	pulumi.Input

	ToPolicyClusterAdmissionRuleOutput() PolicyClusterAdmissionRuleOutput
	ToPolicyClusterAdmissionRuleOutputWithContext(context.Context) PolicyClusterAdmissionRuleOutput
}

type PolicyClusterAdmissionRuleArgs struct {
	// The identifier for this object. Format specified above.
	Cluster                 pulumi.StringInput      `pulumi:"cluster"`
	EnforcementMode         pulumi.StringInput      `pulumi:"enforcementMode"`
	EvaluationMode          pulumi.StringInput      `pulumi:"evaluationMode"`
	RequireAttestationsBies pulumi.StringArrayInput `pulumi:"requireAttestationsBies"`
}

func (PolicyClusterAdmissionRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyClusterAdmissionRule)(nil)).Elem()
}

func (i PolicyClusterAdmissionRuleArgs) ToPolicyClusterAdmissionRuleOutput() PolicyClusterAdmissionRuleOutput {
	return i.ToPolicyClusterAdmissionRuleOutputWithContext(context.Background())
}

func (i PolicyClusterAdmissionRuleArgs) ToPolicyClusterAdmissionRuleOutputWithContext(ctx context.Context) PolicyClusterAdmissionRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyClusterAdmissionRuleOutput)
}

// PolicyClusterAdmissionRuleArrayInput is an input type that accepts PolicyClusterAdmissionRuleArray and PolicyClusterAdmissionRuleArrayOutput values.
// You can construct a concrete instance of `PolicyClusterAdmissionRuleArrayInput` via:
//
// 		 PolicyClusterAdmissionRuleArray{ PolicyClusterAdmissionRuleArgs{...} }
//
type PolicyClusterAdmissionRuleArrayInput interface {
	pulumi.Input

	ToPolicyClusterAdmissionRuleArrayOutput() PolicyClusterAdmissionRuleArrayOutput
	ToPolicyClusterAdmissionRuleArrayOutputWithContext(context.Context) PolicyClusterAdmissionRuleArrayOutput
}

type PolicyClusterAdmissionRuleArray []PolicyClusterAdmissionRuleInput

func (PolicyClusterAdmissionRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyClusterAdmissionRule)(nil)).Elem()
}

func (i PolicyClusterAdmissionRuleArray) ToPolicyClusterAdmissionRuleArrayOutput() PolicyClusterAdmissionRuleArrayOutput {
	return i.ToPolicyClusterAdmissionRuleArrayOutputWithContext(context.Background())
}

func (i PolicyClusterAdmissionRuleArray) ToPolicyClusterAdmissionRuleArrayOutputWithContext(ctx context.Context) PolicyClusterAdmissionRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyClusterAdmissionRuleArrayOutput)
}

type PolicyClusterAdmissionRuleOutput struct{ *pulumi.OutputState }

func (PolicyClusterAdmissionRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyClusterAdmissionRule)(nil)).Elem()
}

func (o PolicyClusterAdmissionRuleOutput) ToPolicyClusterAdmissionRuleOutput() PolicyClusterAdmissionRuleOutput {
	return o
}

func (o PolicyClusterAdmissionRuleOutput) ToPolicyClusterAdmissionRuleOutputWithContext(ctx context.Context) PolicyClusterAdmissionRuleOutput {
	return o
}

// The identifier for this object. Format specified above.
func (o PolicyClusterAdmissionRuleOutput) Cluster() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyClusterAdmissionRule) string { return v.Cluster }).(pulumi.StringOutput)
}

func (o PolicyClusterAdmissionRuleOutput) EnforcementMode() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyClusterAdmissionRule) string { return v.EnforcementMode }).(pulumi.StringOutput)
}

func (o PolicyClusterAdmissionRuleOutput) EvaluationMode() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyClusterAdmissionRule) string { return v.EvaluationMode }).(pulumi.StringOutput)
}

func (o PolicyClusterAdmissionRuleOutput) RequireAttestationsBies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyClusterAdmissionRule) []string { return v.RequireAttestationsBies }).(pulumi.StringArrayOutput)
}

type PolicyClusterAdmissionRuleArrayOutput struct{ *pulumi.OutputState }

func (PolicyClusterAdmissionRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyClusterAdmissionRule)(nil)).Elem()
}

func (o PolicyClusterAdmissionRuleArrayOutput) ToPolicyClusterAdmissionRuleArrayOutput() PolicyClusterAdmissionRuleArrayOutput {
	return o
}

func (o PolicyClusterAdmissionRuleArrayOutput) ToPolicyClusterAdmissionRuleArrayOutputWithContext(ctx context.Context) PolicyClusterAdmissionRuleArrayOutput {
	return o
}

func (o PolicyClusterAdmissionRuleArrayOutput) Index(i pulumi.IntInput) PolicyClusterAdmissionRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyClusterAdmissionRule {
		return vs[0].([]PolicyClusterAdmissionRule)[vs[1].(int)]
	}).(PolicyClusterAdmissionRuleOutput)
}

type PolicyDefaultAdmissionRule struct {
	EnforcementMode         string   `pulumi:"enforcementMode"`
	EvaluationMode          string   `pulumi:"evaluationMode"`
	RequireAttestationsBies []string `pulumi:"requireAttestationsBies"`
}

// PolicyDefaultAdmissionRuleInput is an input type that accepts PolicyDefaultAdmissionRuleArgs and PolicyDefaultAdmissionRuleOutput values.
// You can construct a concrete instance of `PolicyDefaultAdmissionRuleInput` via:
//
// 		 PolicyDefaultAdmissionRuleArgs{...}
//
type PolicyDefaultAdmissionRuleInput interface {
	pulumi.Input

	ToPolicyDefaultAdmissionRuleOutput() PolicyDefaultAdmissionRuleOutput
	ToPolicyDefaultAdmissionRuleOutputWithContext(context.Context) PolicyDefaultAdmissionRuleOutput
}

type PolicyDefaultAdmissionRuleArgs struct {
	EnforcementMode         pulumi.StringInput      `pulumi:"enforcementMode"`
	EvaluationMode          pulumi.StringInput      `pulumi:"evaluationMode"`
	RequireAttestationsBies pulumi.StringArrayInput `pulumi:"requireAttestationsBies"`
}

func (PolicyDefaultAdmissionRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyDefaultAdmissionRule)(nil)).Elem()
}

func (i PolicyDefaultAdmissionRuleArgs) ToPolicyDefaultAdmissionRuleOutput() PolicyDefaultAdmissionRuleOutput {
	return i.ToPolicyDefaultAdmissionRuleOutputWithContext(context.Background())
}

func (i PolicyDefaultAdmissionRuleArgs) ToPolicyDefaultAdmissionRuleOutputWithContext(ctx context.Context) PolicyDefaultAdmissionRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyDefaultAdmissionRuleOutput)
}

func (i PolicyDefaultAdmissionRuleArgs) ToPolicyDefaultAdmissionRulePtrOutput() PolicyDefaultAdmissionRulePtrOutput {
	return i.ToPolicyDefaultAdmissionRulePtrOutputWithContext(context.Background())
}

func (i PolicyDefaultAdmissionRuleArgs) ToPolicyDefaultAdmissionRulePtrOutputWithContext(ctx context.Context) PolicyDefaultAdmissionRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyDefaultAdmissionRuleOutput).ToPolicyDefaultAdmissionRulePtrOutputWithContext(ctx)
}

// PolicyDefaultAdmissionRulePtrInput is an input type that accepts PolicyDefaultAdmissionRuleArgs, PolicyDefaultAdmissionRulePtr and PolicyDefaultAdmissionRulePtrOutput values.
// You can construct a concrete instance of `PolicyDefaultAdmissionRulePtrInput` via:
//
// 		 PolicyDefaultAdmissionRuleArgs{...}
//
//  or:
//
// 		 nil
//
type PolicyDefaultAdmissionRulePtrInput interface {
	pulumi.Input

	ToPolicyDefaultAdmissionRulePtrOutput() PolicyDefaultAdmissionRulePtrOutput
	ToPolicyDefaultAdmissionRulePtrOutputWithContext(context.Context) PolicyDefaultAdmissionRulePtrOutput
}

type policyDefaultAdmissionRulePtrType PolicyDefaultAdmissionRuleArgs

func PolicyDefaultAdmissionRulePtr(v *PolicyDefaultAdmissionRuleArgs) PolicyDefaultAdmissionRulePtrInput {
	return (*policyDefaultAdmissionRulePtrType)(v)
}

func (*policyDefaultAdmissionRulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyDefaultAdmissionRule)(nil)).Elem()
}

func (i *policyDefaultAdmissionRulePtrType) ToPolicyDefaultAdmissionRulePtrOutput() PolicyDefaultAdmissionRulePtrOutput {
	return i.ToPolicyDefaultAdmissionRulePtrOutputWithContext(context.Background())
}

func (i *policyDefaultAdmissionRulePtrType) ToPolicyDefaultAdmissionRulePtrOutputWithContext(ctx context.Context) PolicyDefaultAdmissionRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyDefaultAdmissionRulePtrOutput)
}

type PolicyDefaultAdmissionRuleOutput struct{ *pulumi.OutputState }

func (PolicyDefaultAdmissionRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyDefaultAdmissionRule)(nil)).Elem()
}

func (o PolicyDefaultAdmissionRuleOutput) ToPolicyDefaultAdmissionRuleOutput() PolicyDefaultAdmissionRuleOutput {
	return o
}

func (o PolicyDefaultAdmissionRuleOutput) ToPolicyDefaultAdmissionRuleOutputWithContext(ctx context.Context) PolicyDefaultAdmissionRuleOutput {
	return o
}

func (o PolicyDefaultAdmissionRuleOutput) ToPolicyDefaultAdmissionRulePtrOutput() PolicyDefaultAdmissionRulePtrOutput {
	return o.ToPolicyDefaultAdmissionRulePtrOutputWithContext(context.Background())
}

func (o PolicyDefaultAdmissionRuleOutput) ToPolicyDefaultAdmissionRulePtrOutputWithContext(ctx context.Context) PolicyDefaultAdmissionRulePtrOutput {
	return o.ApplyT(func(v PolicyDefaultAdmissionRule) *PolicyDefaultAdmissionRule {
		return &v
	}).(PolicyDefaultAdmissionRulePtrOutput)
}
func (o PolicyDefaultAdmissionRuleOutput) EnforcementMode() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyDefaultAdmissionRule) string { return v.EnforcementMode }).(pulumi.StringOutput)
}

func (o PolicyDefaultAdmissionRuleOutput) EvaluationMode() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyDefaultAdmissionRule) string { return v.EvaluationMode }).(pulumi.StringOutput)
}

func (o PolicyDefaultAdmissionRuleOutput) RequireAttestationsBies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyDefaultAdmissionRule) []string { return v.RequireAttestationsBies }).(pulumi.StringArrayOutput)
}

type PolicyDefaultAdmissionRulePtrOutput struct{ *pulumi.OutputState }

func (PolicyDefaultAdmissionRulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyDefaultAdmissionRule)(nil)).Elem()
}

func (o PolicyDefaultAdmissionRulePtrOutput) ToPolicyDefaultAdmissionRulePtrOutput() PolicyDefaultAdmissionRulePtrOutput {
	return o
}

func (o PolicyDefaultAdmissionRulePtrOutput) ToPolicyDefaultAdmissionRulePtrOutputWithContext(ctx context.Context) PolicyDefaultAdmissionRulePtrOutput {
	return o
}

func (o PolicyDefaultAdmissionRulePtrOutput) Elem() PolicyDefaultAdmissionRuleOutput {
	return o.ApplyT(func(v *PolicyDefaultAdmissionRule) PolicyDefaultAdmissionRule { return *v }).(PolicyDefaultAdmissionRuleOutput)
}

func (o PolicyDefaultAdmissionRulePtrOutput) EnforcementMode() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyDefaultAdmissionRule) string { return v.EnforcementMode }).(pulumi.StringOutput)
}

func (o PolicyDefaultAdmissionRulePtrOutput) EvaluationMode() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyDefaultAdmissionRule) string { return v.EvaluationMode }).(pulumi.StringOutput)
}

func (o PolicyDefaultAdmissionRulePtrOutput) RequireAttestationsBies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyDefaultAdmissionRule) []string { return v.RequireAttestationsBies }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(AttestorAttestationAuthorityNoteOutput{})
	pulumi.RegisterOutputType(AttestorAttestationAuthorityNotePtrOutput{})
	pulumi.RegisterOutputType(AttestorAttestationAuthorityNotePublicKeyOutput{})
	pulumi.RegisterOutputType(AttestorAttestationAuthorityNotePublicKeyArrayOutput{})
	pulumi.RegisterOutputType(AttestorAttestationAuthorityNotePublicKeyPkixPublicKeyOutput{})
	pulumi.RegisterOutputType(AttestorAttestationAuthorityNotePublicKeyPkixPublicKeyPtrOutput{})
	pulumi.RegisterOutputType(AttestorIamBindingConditionOutput{})
	pulumi.RegisterOutputType(AttestorIamBindingConditionPtrOutput{})
	pulumi.RegisterOutputType(AttestorIamMemberConditionOutput{})
	pulumi.RegisterOutputType(AttestorIamMemberConditionPtrOutput{})
	pulumi.RegisterOutputType(PolicyAdmissionWhitelistPatternOutput{})
	pulumi.RegisterOutputType(PolicyAdmissionWhitelistPatternArrayOutput{})
	pulumi.RegisterOutputType(PolicyClusterAdmissionRuleOutput{})
	pulumi.RegisterOutputType(PolicyClusterAdmissionRuleArrayOutput{})
	pulumi.RegisterOutputType(PolicyDefaultAdmissionRuleOutput{})
	pulumi.RegisterOutputType(PolicyDefaultAdmissionRulePtrOutput{})
}
