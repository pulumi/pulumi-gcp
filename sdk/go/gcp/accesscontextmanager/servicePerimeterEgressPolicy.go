// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package accesscontextmanager

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// EgressPolicies match requests based on egressFrom and egressTo stanzas.
// For an EgressPolicy to match, both egressFrom and egressTo stanzas must be matched.
// If an EgressPolicy matches a request, the request is allowed to span the ServicePerimeter
// boundary. For example, an EgressPolicy can be used to allow VMs on networks
// within the ServicePerimeter to access a defined set of projects outside the
// perimeter in certain contexts (e.g. to read data from a Cloud Storage bucket
// or query against a BigQuery dataset).
//
// To get more information about ServicePerimeterEgressPolicy, see:
//
// * [API documentation](https://cloud.google.com/access-context-manager/docs/reference/rest/v1/accessPolicies.servicePerimeters#egresspolicy)
//
// ## Import
//
// # ServicePerimeterEgressPolicy can be imported using any of these accepted formats
//
// ```sh
//
//	$ pulumi import gcp:accesscontextmanager/servicePerimeterEgressPolicy:ServicePerimeterEgressPolicy default {{perimeter}}
//
// ```
type ServicePerimeterEgressPolicy struct {
	pulumi.CustomResourceState

	// Defines conditions on the source of a request causing this `EgressPolicy` to apply.
	// Structure is documented below.
	EgressFrom ServicePerimeterEgressPolicyEgressFromPtrOutput `pulumi:"egressFrom"`
	// Defines the conditions on the `ApiOperation` and destination resources that
	// cause this `EgressPolicy` to apply.
	// Structure is documented below.
	EgressTo ServicePerimeterEgressPolicyEgressToPtrOutput `pulumi:"egressTo"`
	// The name of the Service Perimeter to add this resource to.
	//
	// ***
	Perimeter pulumi.StringOutput `pulumi:"perimeter"`
}

// NewServicePerimeterEgressPolicy registers a new resource with the given unique name, arguments, and options.
func NewServicePerimeterEgressPolicy(ctx *pulumi.Context,
	name string, args *ServicePerimeterEgressPolicyArgs, opts ...pulumi.ResourceOption) (*ServicePerimeterEgressPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Perimeter == nil {
		return nil, errors.New("invalid value for required argument 'Perimeter'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ServicePerimeterEgressPolicy
	err := ctx.RegisterResource("gcp:accesscontextmanager/servicePerimeterEgressPolicy:ServicePerimeterEgressPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServicePerimeterEgressPolicy gets an existing ServicePerimeterEgressPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServicePerimeterEgressPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServicePerimeterEgressPolicyState, opts ...pulumi.ResourceOption) (*ServicePerimeterEgressPolicy, error) {
	var resource ServicePerimeterEgressPolicy
	err := ctx.ReadResource("gcp:accesscontextmanager/servicePerimeterEgressPolicy:ServicePerimeterEgressPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServicePerimeterEgressPolicy resources.
type servicePerimeterEgressPolicyState struct {
	// Defines conditions on the source of a request causing this `EgressPolicy` to apply.
	// Structure is documented below.
	EgressFrom *ServicePerimeterEgressPolicyEgressFrom `pulumi:"egressFrom"`
	// Defines the conditions on the `ApiOperation` and destination resources that
	// cause this `EgressPolicy` to apply.
	// Structure is documented below.
	EgressTo *ServicePerimeterEgressPolicyEgressTo `pulumi:"egressTo"`
	// The name of the Service Perimeter to add this resource to.
	//
	// ***
	Perimeter *string `pulumi:"perimeter"`
}

type ServicePerimeterEgressPolicyState struct {
	// Defines conditions on the source of a request causing this `EgressPolicy` to apply.
	// Structure is documented below.
	EgressFrom ServicePerimeterEgressPolicyEgressFromPtrInput
	// Defines the conditions on the `ApiOperation` and destination resources that
	// cause this `EgressPolicy` to apply.
	// Structure is documented below.
	EgressTo ServicePerimeterEgressPolicyEgressToPtrInput
	// The name of the Service Perimeter to add this resource to.
	//
	// ***
	Perimeter pulumi.StringPtrInput
}

func (ServicePerimeterEgressPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*servicePerimeterEgressPolicyState)(nil)).Elem()
}

type servicePerimeterEgressPolicyArgs struct {
	// Defines conditions on the source of a request causing this `EgressPolicy` to apply.
	// Structure is documented below.
	EgressFrom *ServicePerimeterEgressPolicyEgressFrom `pulumi:"egressFrom"`
	// Defines the conditions on the `ApiOperation` and destination resources that
	// cause this `EgressPolicy` to apply.
	// Structure is documented below.
	EgressTo *ServicePerimeterEgressPolicyEgressTo `pulumi:"egressTo"`
	// The name of the Service Perimeter to add this resource to.
	//
	// ***
	Perimeter string `pulumi:"perimeter"`
}

// The set of arguments for constructing a ServicePerimeterEgressPolicy resource.
type ServicePerimeterEgressPolicyArgs struct {
	// Defines conditions on the source of a request causing this `EgressPolicy` to apply.
	// Structure is documented below.
	EgressFrom ServicePerimeterEgressPolicyEgressFromPtrInput
	// Defines the conditions on the `ApiOperation` and destination resources that
	// cause this `EgressPolicy` to apply.
	// Structure is documented below.
	EgressTo ServicePerimeterEgressPolicyEgressToPtrInput
	// The name of the Service Perimeter to add this resource to.
	//
	// ***
	Perimeter pulumi.StringInput
}

func (ServicePerimeterEgressPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*servicePerimeterEgressPolicyArgs)(nil)).Elem()
}

type ServicePerimeterEgressPolicyInput interface {
	pulumi.Input

	ToServicePerimeterEgressPolicyOutput() ServicePerimeterEgressPolicyOutput
	ToServicePerimeterEgressPolicyOutputWithContext(ctx context.Context) ServicePerimeterEgressPolicyOutput
}

func (*ServicePerimeterEgressPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**ServicePerimeterEgressPolicy)(nil)).Elem()
}

func (i *ServicePerimeterEgressPolicy) ToServicePerimeterEgressPolicyOutput() ServicePerimeterEgressPolicyOutput {
	return i.ToServicePerimeterEgressPolicyOutputWithContext(context.Background())
}

func (i *ServicePerimeterEgressPolicy) ToServicePerimeterEgressPolicyOutputWithContext(ctx context.Context) ServicePerimeterEgressPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePerimeterEgressPolicyOutput)
}

// ServicePerimeterEgressPolicyArrayInput is an input type that accepts ServicePerimeterEgressPolicyArray and ServicePerimeterEgressPolicyArrayOutput values.
// You can construct a concrete instance of `ServicePerimeterEgressPolicyArrayInput` via:
//
//	ServicePerimeterEgressPolicyArray{ ServicePerimeterEgressPolicyArgs{...} }
type ServicePerimeterEgressPolicyArrayInput interface {
	pulumi.Input

	ToServicePerimeterEgressPolicyArrayOutput() ServicePerimeterEgressPolicyArrayOutput
	ToServicePerimeterEgressPolicyArrayOutputWithContext(context.Context) ServicePerimeterEgressPolicyArrayOutput
}

type ServicePerimeterEgressPolicyArray []ServicePerimeterEgressPolicyInput

func (ServicePerimeterEgressPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServicePerimeterEgressPolicy)(nil)).Elem()
}

func (i ServicePerimeterEgressPolicyArray) ToServicePerimeterEgressPolicyArrayOutput() ServicePerimeterEgressPolicyArrayOutput {
	return i.ToServicePerimeterEgressPolicyArrayOutputWithContext(context.Background())
}

func (i ServicePerimeterEgressPolicyArray) ToServicePerimeterEgressPolicyArrayOutputWithContext(ctx context.Context) ServicePerimeterEgressPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePerimeterEgressPolicyArrayOutput)
}

// ServicePerimeterEgressPolicyMapInput is an input type that accepts ServicePerimeterEgressPolicyMap and ServicePerimeterEgressPolicyMapOutput values.
// You can construct a concrete instance of `ServicePerimeterEgressPolicyMapInput` via:
//
//	ServicePerimeterEgressPolicyMap{ "key": ServicePerimeterEgressPolicyArgs{...} }
type ServicePerimeterEgressPolicyMapInput interface {
	pulumi.Input

	ToServicePerimeterEgressPolicyMapOutput() ServicePerimeterEgressPolicyMapOutput
	ToServicePerimeterEgressPolicyMapOutputWithContext(context.Context) ServicePerimeterEgressPolicyMapOutput
}

type ServicePerimeterEgressPolicyMap map[string]ServicePerimeterEgressPolicyInput

func (ServicePerimeterEgressPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServicePerimeterEgressPolicy)(nil)).Elem()
}

func (i ServicePerimeterEgressPolicyMap) ToServicePerimeterEgressPolicyMapOutput() ServicePerimeterEgressPolicyMapOutput {
	return i.ToServicePerimeterEgressPolicyMapOutputWithContext(context.Background())
}

func (i ServicePerimeterEgressPolicyMap) ToServicePerimeterEgressPolicyMapOutputWithContext(ctx context.Context) ServicePerimeterEgressPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePerimeterEgressPolicyMapOutput)
}

type ServicePerimeterEgressPolicyOutput struct{ *pulumi.OutputState }

func (ServicePerimeterEgressPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServicePerimeterEgressPolicy)(nil)).Elem()
}

func (o ServicePerimeterEgressPolicyOutput) ToServicePerimeterEgressPolicyOutput() ServicePerimeterEgressPolicyOutput {
	return o
}

func (o ServicePerimeterEgressPolicyOutput) ToServicePerimeterEgressPolicyOutputWithContext(ctx context.Context) ServicePerimeterEgressPolicyOutput {
	return o
}

// Defines conditions on the source of a request causing this `EgressPolicy` to apply.
// Structure is documented below.
func (o ServicePerimeterEgressPolicyOutput) EgressFrom() ServicePerimeterEgressPolicyEgressFromPtrOutput {
	return o.ApplyT(func(v *ServicePerimeterEgressPolicy) ServicePerimeterEgressPolicyEgressFromPtrOutput {
		return v.EgressFrom
	}).(ServicePerimeterEgressPolicyEgressFromPtrOutput)
}

// Defines the conditions on the `ApiOperation` and destination resources that
// cause this `EgressPolicy` to apply.
// Structure is documented below.
func (o ServicePerimeterEgressPolicyOutput) EgressTo() ServicePerimeterEgressPolicyEgressToPtrOutput {
	return o.ApplyT(func(v *ServicePerimeterEgressPolicy) ServicePerimeterEgressPolicyEgressToPtrOutput { return v.EgressTo }).(ServicePerimeterEgressPolicyEgressToPtrOutput)
}

// The name of the Service Perimeter to add this resource to.
//
// ***
func (o ServicePerimeterEgressPolicyOutput) Perimeter() pulumi.StringOutput {
	return o.ApplyT(func(v *ServicePerimeterEgressPolicy) pulumi.StringOutput { return v.Perimeter }).(pulumi.StringOutput)
}

type ServicePerimeterEgressPolicyArrayOutput struct{ *pulumi.OutputState }

func (ServicePerimeterEgressPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServicePerimeterEgressPolicy)(nil)).Elem()
}

func (o ServicePerimeterEgressPolicyArrayOutput) ToServicePerimeterEgressPolicyArrayOutput() ServicePerimeterEgressPolicyArrayOutput {
	return o
}

func (o ServicePerimeterEgressPolicyArrayOutput) ToServicePerimeterEgressPolicyArrayOutputWithContext(ctx context.Context) ServicePerimeterEgressPolicyArrayOutput {
	return o
}

func (o ServicePerimeterEgressPolicyArrayOutput) Index(i pulumi.IntInput) ServicePerimeterEgressPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ServicePerimeterEgressPolicy {
		return vs[0].([]*ServicePerimeterEgressPolicy)[vs[1].(int)]
	}).(ServicePerimeterEgressPolicyOutput)
}

type ServicePerimeterEgressPolicyMapOutput struct{ *pulumi.OutputState }

func (ServicePerimeterEgressPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServicePerimeterEgressPolicy)(nil)).Elem()
}

func (o ServicePerimeterEgressPolicyMapOutput) ToServicePerimeterEgressPolicyMapOutput() ServicePerimeterEgressPolicyMapOutput {
	return o
}

func (o ServicePerimeterEgressPolicyMapOutput) ToServicePerimeterEgressPolicyMapOutputWithContext(ctx context.Context) ServicePerimeterEgressPolicyMapOutput {
	return o
}

func (o ServicePerimeterEgressPolicyMapOutput) MapIndex(k pulumi.StringInput) ServicePerimeterEgressPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ServicePerimeterEgressPolicy {
		return vs[0].(map[string]*ServicePerimeterEgressPolicy)[vs[1].(string)]
	}).(ServicePerimeterEgressPolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServicePerimeterEgressPolicyInput)(nil)).Elem(), &ServicePerimeterEgressPolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServicePerimeterEgressPolicyArrayInput)(nil)).Elem(), ServicePerimeterEgressPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServicePerimeterEgressPolicyMapInput)(nil)).Elem(), ServicePerimeterEgressPolicyMap{})
	pulumi.RegisterOutputType(ServicePerimeterEgressPolicyOutput{})
	pulumi.RegisterOutputType(ServicePerimeterEgressPolicyArrayOutput{})
	pulumi.RegisterOutputType(ServicePerimeterEgressPolicyMapOutput{})
}
