// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package accesscontextmanager

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// ServicePerimeter describes a set of GCP resources which can freely import
// and export data amongst themselves, but not export outside of the
// ServicePerimeter. If a request with a source within this ServicePerimeter
// has a target outside of the ServicePerimeter, the request will be blocked.
// Otherwise the request is allowed. There are two types of Service Perimeter
// - Regular and Bridge. Regular Service Perimeters cannot overlap, a single
// GCP project can only belong to a single regular Service Perimeter. Service
// Perimeter Bridges can contain only GCP projects as members, a single GCP
// project may belong to multiple Service Perimeter Bridges.
// 
// 
// To get more information about ServicePerimeter, see:
// 
// * [API documentation](https://cloud.google.com/access-context-manager/docs/reference/rest/v1/accessPolicies.servicePerimeters)
// * How-to Guides
//     * [Service Perimeter Quickstart](https://cloud.google.com/vpc-service-controls/docs/quickstart)
type ServicePerimeter struct {
	s *pulumi.ResourceState
}

// NewServicePerimeter registers a new resource with the given unique name, arguments, and options.
func NewServicePerimeter(ctx *pulumi.Context,
	name string, args *ServicePerimeterArgs, opts ...pulumi.ResourceOpt) (*ServicePerimeter, error) {
	if args == nil || args.Parent == nil {
		return nil, errors.New("missing required argument 'Parent'")
	}
	if args == nil || args.Title == nil {
		return nil, errors.New("missing required argument 'Title'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["description"] = nil
		inputs["name"] = nil
		inputs["parent"] = nil
		inputs["perimeterType"] = nil
		inputs["status"] = nil
		inputs["title"] = nil
	} else {
		inputs["description"] = args.Description
		inputs["name"] = args.Name
		inputs["parent"] = args.Parent
		inputs["perimeterType"] = args.PerimeterType
		inputs["status"] = args.Status
		inputs["title"] = args.Title
	}
	inputs["createTime"] = nil
	inputs["updateTime"] = nil
	s, err := ctx.RegisterResource("gcp:accesscontextmanager/servicePerimeter:ServicePerimeter", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &ServicePerimeter{s: s}, nil
}

// GetServicePerimeter gets an existing ServicePerimeter resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServicePerimeter(ctx *pulumi.Context,
	name string, id pulumi.ID, state *ServicePerimeterState, opts ...pulumi.ResourceOpt) (*ServicePerimeter, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["createTime"] = state.CreateTime
		inputs["description"] = state.Description
		inputs["name"] = state.Name
		inputs["parent"] = state.Parent
		inputs["perimeterType"] = state.PerimeterType
		inputs["status"] = state.Status
		inputs["title"] = state.Title
		inputs["updateTime"] = state.UpdateTime
	}
	s, err := ctx.ReadResource("gcp:accesscontextmanager/servicePerimeter:ServicePerimeter", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &ServicePerimeter{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *ServicePerimeter) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *ServicePerimeter) ID() *pulumi.IDOutput {
	return r.s.ID()
}

func (r *ServicePerimeter) CreateTime() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["createTime"])
}

func (r *ServicePerimeter) Description() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["description"])
}

func (r *ServicePerimeter) Name() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["name"])
}

func (r *ServicePerimeter) Parent() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["parent"])
}

func (r *ServicePerimeter) PerimeterType() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["perimeterType"])
}

func (r *ServicePerimeter) Status() *pulumi.Output {
	return r.s.State["status"]
}

func (r *ServicePerimeter) Title() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["title"])
}

func (r *ServicePerimeter) UpdateTime() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["updateTime"])
}

// Input properties used for looking up and filtering ServicePerimeter resources.
type ServicePerimeterState struct {
	CreateTime interface{}
	Description interface{}
	Name interface{}
	Parent interface{}
	PerimeterType interface{}
	Status interface{}
	Title interface{}
	UpdateTime interface{}
}

// The set of arguments for constructing a ServicePerimeter resource.
type ServicePerimeterArgs struct {
	Description interface{}
	Name interface{}
	Parent interface{}
	PerimeterType interface{}
	Status interface{}
	Title interface{}
}
