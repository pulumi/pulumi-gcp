// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package accesscontextmanager

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type AccessLevelBasic struct {
	// How the conditions list should be combined to determine if a request
	// is granted this AccessLevel. If AND is used, each Condition in
	// conditions must be satisfied for the AccessLevel to be applied. If
	// OR is used, at least one Condition in conditions must be satisfied
	// for the AccessLevel to be applied. Defaults to AND if unspecified.
	CombiningFunction *string `pulumi:"combiningFunction"`
	// A set of requirements for the AccessLevel to be granted.  Structure is documented below.
	Conditions []AccessLevelBasicCondition `pulumi:"conditions"`
}

// AccessLevelBasicInput is an input type that accepts AccessLevelBasicArgs and AccessLevelBasicOutput values.
// You can construct a concrete instance of `AccessLevelBasicInput` via:
//
// 		 AccessLevelBasicArgs{...}
//
type AccessLevelBasicInput interface {
	pulumi.Input

	ToAccessLevelBasicOutput() AccessLevelBasicOutput
	ToAccessLevelBasicOutputWithContext(context.Context) AccessLevelBasicOutput
}

type AccessLevelBasicArgs struct {
	// How the conditions list should be combined to determine if a request
	// is granted this AccessLevel. If AND is used, each Condition in
	// conditions must be satisfied for the AccessLevel to be applied. If
	// OR is used, at least one Condition in conditions must be satisfied
	// for the AccessLevel to be applied. Defaults to AND if unspecified.
	CombiningFunction pulumi.StringPtrInput `pulumi:"combiningFunction"`
	// A set of requirements for the AccessLevel to be granted.  Structure is documented below.
	Conditions AccessLevelBasicConditionArrayInput `pulumi:"conditions"`
}

func (AccessLevelBasicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessLevelBasic)(nil)).Elem()
}

func (i AccessLevelBasicArgs) ToAccessLevelBasicOutput() AccessLevelBasicOutput {
	return i.ToAccessLevelBasicOutputWithContext(context.Background())
}

func (i AccessLevelBasicArgs) ToAccessLevelBasicOutputWithContext(ctx context.Context) AccessLevelBasicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessLevelBasicOutput)
}

func (i AccessLevelBasicArgs) ToAccessLevelBasicPtrOutput() AccessLevelBasicPtrOutput {
	return i.ToAccessLevelBasicPtrOutputWithContext(context.Background())
}

func (i AccessLevelBasicArgs) ToAccessLevelBasicPtrOutputWithContext(ctx context.Context) AccessLevelBasicPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessLevelBasicOutput).ToAccessLevelBasicPtrOutputWithContext(ctx)
}

// AccessLevelBasicPtrInput is an input type that accepts AccessLevelBasicArgs, AccessLevelBasicPtr and AccessLevelBasicPtrOutput values.
// You can construct a concrete instance of `AccessLevelBasicPtrInput` via:
//
// 		 AccessLevelBasicArgs{...}
//
//  or:
//
// 		 nil
//
type AccessLevelBasicPtrInput interface {
	pulumi.Input

	ToAccessLevelBasicPtrOutput() AccessLevelBasicPtrOutput
	ToAccessLevelBasicPtrOutputWithContext(context.Context) AccessLevelBasicPtrOutput
}

type accessLevelBasicPtrType AccessLevelBasicArgs

func AccessLevelBasicPtr(v *AccessLevelBasicArgs) AccessLevelBasicPtrInput {
	return (*accessLevelBasicPtrType)(v)
}

func (*accessLevelBasicPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessLevelBasic)(nil)).Elem()
}

func (i *accessLevelBasicPtrType) ToAccessLevelBasicPtrOutput() AccessLevelBasicPtrOutput {
	return i.ToAccessLevelBasicPtrOutputWithContext(context.Background())
}

func (i *accessLevelBasicPtrType) ToAccessLevelBasicPtrOutputWithContext(ctx context.Context) AccessLevelBasicPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessLevelBasicPtrOutput)
}

type AccessLevelBasicOutput struct{ *pulumi.OutputState }

func (AccessLevelBasicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessLevelBasic)(nil)).Elem()
}

func (o AccessLevelBasicOutput) ToAccessLevelBasicOutput() AccessLevelBasicOutput {
	return o
}

func (o AccessLevelBasicOutput) ToAccessLevelBasicOutputWithContext(ctx context.Context) AccessLevelBasicOutput {
	return o
}

func (o AccessLevelBasicOutput) ToAccessLevelBasicPtrOutput() AccessLevelBasicPtrOutput {
	return o.ToAccessLevelBasicPtrOutputWithContext(context.Background())
}

func (o AccessLevelBasicOutput) ToAccessLevelBasicPtrOutputWithContext(ctx context.Context) AccessLevelBasicPtrOutput {
	return o.ApplyT(func(v AccessLevelBasic) *AccessLevelBasic {
		return &v
	}).(AccessLevelBasicPtrOutput)
}

// How the conditions list should be combined to determine if a request
// is granted this AccessLevel. If AND is used, each Condition in
// conditions must be satisfied for the AccessLevel to be applied. If
// OR is used, at least one Condition in conditions must be satisfied
// for the AccessLevel to be applied. Defaults to AND if unspecified.
func (o AccessLevelBasicOutput) CombiningFunction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessLevelBasic) *string { return v.CombiningFunction }).(pulumi.StringPtrOutput)
}

// A set of requirements for the AccessLevel to be granted.  Structure is documented below.
func (o AccessLevelBasicOutput) Conditions() AccessLevelBasicConditionArrayOutput {
	return o.ApplyT(func(v AccessLevelBasic) []AccessLevelBasicCondition { return v.Conditions }).(AccessLevelBasicConditionArrayOutput)
}

type AccessLevelBasicPtrOutput struct{ *pulumi.OutputState }

func (AccessLevelBasicPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessLevelBasic)(nil)).Elem()
}

func (o AccessLevelBasicPtrOutput) ToAccessLevelBasicPtrOutput() AccessLevelBasicPtrOutput {
	return o
}

func (o AccessLevelBasicPtrOutput) ToAccessLevelBasicPtrOutputWithContext(ctx context.Context) AccessLevelBasicPtrOutput {
	return o
}

func (o AccessLevelBasicPtrOutput) Elem() AccessLevelBasicOutput {
	return o.ApplyT(func(v *AccessLevelBasic) AccessLevelBasic { return *v }).(AccessLevelBasicOutput)
}

// How the conditions list should be combined to determine if a request
// is granted this AccessLevel. If AND is used, each Condition in
// conditions must be satisfied for the AccessLevel to be applied. If
// OR is used, at least one Condition in conditions must be satisfied
// for the AccessLevel to be applied. Defaults to AND if unspecified.
func (o AccessLevelBasicPtrOutput) CombiningFunction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessLevelBasic) *string {
		if v == nil {
			return nil
		}
		return v.CombiningFunction
	}).(pulumi.StringPtrOutput)
}

// A set of requirements for the AccessLevel to be granted.  Structure is documented below.
func (o AccessLevelBasicPtrOutput) Conditions() AccessLevelBasicConditionArrayOutput {
	return o.ApplyT(func(v *AccessLevelBasic) []AccessLevelBasicCondition {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(AccessLevelBasicConditionArrayOutput)
}

type AccessLevelBasicCondition struct {
	// Device specific restrictions, all restrictions must hold for
	// the Condition to be true. If not specified, all devices are
	// allowed.  Structure is documented below.
	DevicePolicy *AccessLevelBasicConditionDevicePolicy `pulumi:"devicePolicy"`
	// A list of CIDR block IP subnetwork specification. May be IPv4
	// or IPv6.
	// Note that for a CIDR IP address block, the specified IP address
	// portion must be properly truncated (i.e. all the host bits must
	// be zero) or the input is considered malformed. For example,
	// "192.0.2.0/24" is accepted but "192.0.2.1/24" is not. Similarly,
	// for IPv6, "2001:db8::/32" is accepted whereas "2001:db8::1/32"
	// is not. The originating IP of a request must be in one of the
	// listed subnets in order for this Condition to be true.
	// If empty, all IP addresses are allowed.
	IpSubnetworks []string `pulumi:"ipSubnetworks"`
	// An allowed list of members (users, service accounts).
	// Using groups is not supported yet.
	// The signed-in user originating the request must be a part of one
	// of the provided members. If not specified, a request may come
	// from any user (logged in/not logged in, not present in any
	// groups, etc.).
	// Formats: `user:{emailid}`, `serviceAccount:{emailid}`
	Members []string `pulumi:"members"`
	// Whether to negate the Condition. If true, the Condition becomes
	// a NAND over its non-empty fields, each field must be false for
	// the Condition overall to be satisfied. Defaults to false.
	Negate *bool `pulumi:"negate"`
	// The request must originate from one of the provided
	// countries/regions.
	// Format: A valid ISO 3166-1 alpha-2 code.
	Regions []string `pulumi:"regions"`
	// A list of other access levels defined in the same Policy,
	// referenced by resource name. Referencing an AccessLevel which
	// does not exist is an error. All access levels listed must be
	// granted for the Condition to be true.
	// Format: accessPolicies/{policy_id}/accessLevels/{short_name}
	RequiredAccessLevels []string `pulumi:"requiredAccessLevels"`
}

// AccessLevelBasicConditionInput is an input type that accepts AccessLevelBasicConditionArgs and AccessLevelBasicConditionOutput values.
// You can construct a concrete instance of `AccessLevelBasicConditionInput` via:
//
// 		 AccessLevelBasicConditionArgs{...}
//
type AccessLevelBasicConditionInput interface {
	pulumi.Input

	ToAccessLevelBasicConditionOutput() AccessLevelBasicConditionOutput
	ToAccessLevelBasicConditionOutputWithContext(context.Context) AccessLevelBasicConditionOutput
}

type AccessLevelBasicConditionArgs struct {
	// Device specific restrictions, all restrictions must hold for
	// the Condition to be true. If not specified, all devices are
	// allowed.  Structure is documented below.
	DevicePolicy AccessLevelBasicConditionDevicePolicyPtrInput `pulumi:"devicePolicy"`
	// A list of CIDR block IP subnetwork specification. May be IPv4
	// or IPv6.
	// Note that for a CIDR IP address block, the specified IP address
	// portion must be properly truncated (i.e. all the host bits must
	// be zero) or the input is considered malformed. For example,
	// "192.0.2.0/24" is accepted but "192.0.2.1/24" is not. Similarly,
	// for IPv6, "2001:db8::/32" is accepted whereas "2001:db8::1/32"
	// is not. The originating IP of a request must be in one of the
	// listed subnets in order for this Condition to be true.
	// If empty, all IP addresses are allowed.
	IpSubnetworks pulumi.StringArrayInput `pulumi:"ipSubnetworks"`
	// An allowed list of members (users, service accounts).
	// Using groups is not supported yet.
	// The signed-in user originating the request must be a part of one
	// of the provided members. If not specified, a request may come
	// from any user (logged in/not logged in, not present in any
	// groups, etc.).
	// Formats: `user:{emailid}`, `serviceAccount:{emailid}`
	Members pulumi.StringArrayInput `pulumi:"members"`
	// Whether to negate the Condition. If true, the Condition becomes
	// a NAND over its non-empty fields, each field must be false for
	// the Condition overall to be satisfied. Defaults to false.
	Negate pulumi.BoolPtrInput `pulumi:"negate"`
	// The request must originate from one of the provided
	// countries/regions.
	// Format: A valid ISO 3166-1 alpha-2 code.
	Regions pulumi.StringArrayInput `pulumi:"regions"`
	// A list of other access levels defined in the same Policy,
	// referenced by resource name. Referencing an AccessLevel which
	// does not exist is an error. All access levels listed must be
	// granted for the Condition to be true.
	// Format: accessPolicies/{policy_id}/accessLevels/{short_name}
	RequiredAccessLevels pulumi.StringArrayInput `pulumi:"requiredAccessLevels"`
}

func (AccessLevelBasicConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessLevelBasicCondition)(nil)).Elem()
}

func (i AccessLevelBasicConditionArgs) ToAccessLevelBasicConditionOutput() AccessLevelBasicConditionOutput {
	return i.ToAccessLevelBasicConditionOutputWithContext(context.Background())
}

func (i AccessLevelBasicConditionArgs) ToAccessLevelBasicConditionOutputWithContext(ctx context.Context) AccessLevelBasicConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessLevelBasicConditionOutput)
}

// AccessLevelBasicConditionArrayInput is an input type that accepts AccessLevelBasicConditionArray and AccessLevelBasicConditionArrayOutput values.
// You can construct a concrete instance of `AccessLevelBasicConditionArrayInput` via:
//
// 		 AccessLevelBasicConditionArray{ AccessLevelBasicConditionArgs{...} }
//
type AccessLevelBasicConditionArrayInput interface {
	pulumi.Input

	ToAccessLevelBasicConditionArrayOutput() AccessLevelBasicConditionArrayOutput
	ToAccessLevelBasicConditionArrayOutputWithContext(context.Context) AccessLevelBasicConditionArrayOutput
}

type AccessLevelBasicConditionArray []AccessLevelBasicConditionInput

func (AccessLevelBasicConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessLevelBasicCondition)(nil)).Elem()
}

func (i AccessLevelBasicConditionArray) ToAccessLevelBasicConditionArrayOutput() AccessLevelBasicConditionArrayOutput {
	return i.ToAccessLevelBasicConditionArrayOutputWithContext(context.Background())
}

func (i AccessLevelBasicConditionArray) ToAccessLevelBasicConditionArrayOutputWithContext(ctx context.Context) AccessLevelBasicConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessLevelBasicConditionArrayOutput)
}

type AccessLevelBasicConditionOutput struct{ *pulumi.OutputState }

func (AccessLevelBasicConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessLevelBasicCondition)(nil)).Elem()
}

func (o AccessLevelBasicConditionOutput) ToAccessLevelBasicConditionOutput() AccessLevelBasicConditionOutput {
	return o
}

func (o AccessLevelBasicConditionOutput) ToAccessLevelBasicConditionOutputWithContext(ctx context.Context) AccessLevelBasicConditionOutput {
	return o
}

// Device specific restrictions, all restrictions must hold for
// the Condition to be true. If not specified, all devices are
// allowed.  Structure is documented below.
func (o AccessLevelBasicConditionOutput) DevicePolicy() AccessLevelBasicConditionDevicePolicyPtrOutput {
	return o.ApplyT(func(v AccessLevelBasicCondition) *AccessLevelBasicConditionDevicePolicy { return v.DevicePolicy }).(AccessLevelBasicConditionDevicePolicyPtrOutput)
}

// A list of CIDR block IP subnetwork specification. May be IPv4
// or IPv6.
// Note that for a CIDR IP address block, the specified IP address
// portion must be properly truncated (i.e. all the host bits must
// be zero) or the input is considered malformed. For example,
// "192.0.2.0/24" is accepted but "192.0.2.1/24" is not. Similarly,
// for IPv6, "2001:db8::/32" is accepted whereas "2001:db8::1/32"
// is not. The originating IP of a request must be in one of the
// listed subnets in order for this Condition to be true.
// If empty, all IP addresses are allowed.
func (o AccessLevelBasicConditionOutput) IpSubnetworks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessLevelBasicCondition) []string { return v.IpSubnetworks }).(pulumi.StringArrayOutput)
}

// An allowed list of members (users, service accounts).
// Using groups is not supported yet.
// The signed-in user originating the request must be a part of one
// of the provided members. If not specified, a request may come
// from any user (logged in/not logged in, not present in any
// groups, etc.).
// Formats: `user:{emailid}`, `serviceAccount:{emailid}`
func (o AccessLevelBasicConditionOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessLevelBasicCondition) []string { return v.Members }).(pulumi.StringArrayOutput)
}

// Whether to negate the Condition. If true, the Condition becomes
// a NAND over its non-empty fields, each field must be false for
// the Condition overall to be satisfied. Defaults to false.
func (o AccessLevelBasicConditionOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AccessLevelBasicCondition) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

// The request must originate from one of the provided
// countries/regions.
// Format: A valid ISO 3166-1 alpha-2 code.
func (o AccessLevelBasicConditionOutput) Regions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessLevelBasicCondition) []string { return v.Regions }).(pulumi.StringArrayOutput)
}

// A list of other access levels defined in the same Policy,
// referenced by resource name. Referencing an AccessLevel which
// does not exist is an error. All access levels listed must be
// granted for the Condition to be true.
// Format: accessPolicies/{policy_id}/accessLevels/{short_name}
func (o AccessLevelBasicConditionOutput) RequiredAccessLevels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessLevelBasicCondition) []string { return v.RequiredAccessLevels }).(pulumi.StringArrayOutput)
}

type AccessLevelBasicConditionArrayOutput struct{ *pulumi.OutputState }

func (AccessLevelBasicConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessLevelBasicCondition)(nil)).Elem()
}

func (o AccessLevelBasicConditionArrayOutput) ToAccessLevelBasicConditionArrayOutput() AccessLevelBasicConditionArrayOutput {
	return o
}

func (o AccessLevelBasicConditionArrayOutput) ToAccessLevelBasicConditionArrayOutputWithContext(ctx context.Context) AccessLevelBasicConditionArrayOutput {
	return o
}

func (o AccessLevelBasicConditionArrayOutput) Index(i pulumi.IntInput) AccessLevelBasicConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccessLevelBasicCondition {
		return vs[0].([]AccessLevelBasicCondition)[vs[1].(int)]
	}).(AccessLevelBasicConditionOutput)
}

type AccessLevelBasicConditionDevicePolicy struct {
	// A list of allowed device management levels.
	// An empty list allows all management levels.
	AllowedDeviceManagementLevels []string `pulumi:"allowedDeviceManagementLevels"`
	// A list of allowed encryptions statuses.
	// An empty list allows all statuses.
	AllowedEncryptionStatuses []string `pulumi:"allowedEncryptionStatuses"`
	// A list of allowed OS versions.
	// An empty list allows all types and all versions.  Structure is documented below.
	OsConstraints []AccessLevelBasicConditionDevicePolicyOsConstraint `pulumi:"osConstraints"`
	// Whether the device needs to be approved by the customer admin.
	RequireAdminApproval *bool `pulumi:"requireAdminApproval"`
	// Whether the device needs to be corp owned.
	RequireCorpOwned *bool `pulumi:"requireCorpOwned"`
	// Whether or not screenlock is required for the DevicePolicy
	// to be true. Defaults to false.
	RequireScreenLock *bool `pulumi:"requireScreenLock"`
}

// AccessLevelBasicConditionDevicePolicyInput is an input type that accepts AccessLevelBasicConditionDevicePolicyArgs and AccessLevelBasicConditionDevicePolicyOutput values.
// You can construct a concrete instance of `AccessLevelBasicConditionDevicePolicyInput` via:
//
// 		 AccessLevelBasicConditionDevicePolicyArgs{...}
//
type AccessLevelBasicConditionDevicePolicyInput interface {
	pulumi.Input

	ToAccessLevelBasicConditionDevicePolicyOutput() AccessLevelBasicConditionDevicePolicyOutput
	ToAccessLevelBasicConditionDevicePolicyOutputWithContext(context.Context) AccessLevelBasicConditionDevicePolicyOutput
}

type AccessLevelBasicConditionDevicePolicyArgs struct {
	// A list of allowed device management levels.
	// An empty list allows all management levels.
	AllowedDeviceManagementLevels pulumi.StringArrayInput `pulumi:"allowedDeviceManagementLevels"`
	// A list of allowed encryptions statuses.
	// An empty list allows all statuses.
	AllowedEncryptionStatuses pulumi.StringArrayInput `pulumi:"allowedEncryptionStatuses"`
	// A list of allowed OS versions.
	// An empty list allows all types and all versions.  Structure is documented below.
	OsConstraints AccessLevelBasicConditionDevicePolicyOsConstraintArrayInput `pulumi:"osConstraints"`
	// Whether the device needs to be approved by the customer admin.
	RequireAdminApproval pulumi.BoolPtrInput `pulumi:"requireAdminApproval"`
	// Whether the device needs to be corp owned.
	RequireCorpOwned pulumi.BoolPtrInput `pulumi:"requireCorpOwned"`
	// Whether or not screenlock is required for the DevicePolicy
	// to be true. Defaults to false.
	RequireScreenLock pulumi.BoolPtrInput `pulumi:"requireScreenLock"`
}

func (AccessLevelBasicConditionDevicePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessLevelBasicConditionDevicePolicy)(nil)).Elem()
}

func (i AccessLevelBasicConditionDevicePolicyArgs) ToAccessLevelBasicConditionDevicePolicyOutput() AccessLevelBasicConditionDevicePolicyOutput {
	return i.ToAccessLevelBasicConditionDevicePolicyOutputWithContext(context.Background())
}

func (i AccessLevelBasicConditionDevicePolicyArgs) ToAccessLevelBasicConditionDevicePolicyOutputWithContext(ctx context.Context) AccessLevelBasicConditionDevicePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessLevelBasicConditionDevicePolicyOutput)
}

func (i AccessLevelBasicConditionDevicePolicyArgs) ToAccessLevelBasicConditionDevicePolicyPtrOutput() AccessLevelBasicConditionDevicePolicyPtrOutput {
	return i.ToAccessLevelBasicConditionDevicePolicyPtrOutputWithContext(context.Background())
}

func (i AccessLevelBasicConditionDevicePolicyArgs) ToAccessLevelBasicConditionDevicePolicyPtrOutputWithContext(ctx context.Context) AccessLevelBasicConditionDevicePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessLevelBasicConditionDevicePolicyOutput).ToAccessLevelBasicConditionDevicePolicyPtrOutputWithContext(ctx)
}

// AccessLevelBasicConditionDevicePolicyPtrInput is an input type that accepts AccessLevelBasicConditionDevicePolicyArgs, AccessLevelBasicConditionDevicePolicyPtr and AccessLevelBasicConditionDevicePolicyPtrOutput values.
// You can construct a concrete instance of `AccessLevelBasicConditionDevicePolicyPtrInput` via:
//
// 		 AccessLevelBasicConditionDevicePolicyArgs{...}
//
//  or:
//
// 		 nil
//
type AccessLevelBasicConditionDevicePolicyPtrInput interface {
	pulumi.Input

	ToAccessLevelBasicConditionDevicePolicyPtrOutput() AccessLevelBasicConditionDevicePolicyPtrOutput
	ToAccessLevelBasicConditionDevicePolicyPtrOutputWithContext(context.Context) AccessLevelBasicConditionDevicePolicyPtrOutput
}

type accessLevelBasicConditionDevicePolicyPtrType AccessLevelBasicConditionDevicePolicyArgs

func AccessLevelBasicConditionDevicePolicyPtr(v *AccessLevelBasicConditionDevicePolicyArgs) AccessLevelBasicConditionDevicePolicyPtrInput {
	return (*accessLevelBasicConditionDevicePolicyPtrType)(v)
}

func (*accessLevelBasicConditionDevicePolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessLevelBasicConditionDevicePolicy)(nil)).Elem()
}

func (i *accessLevelBasicConditionDevicePolicyPtrType) ToAccessLevelBasicConditionDevicePolicyPtrOutput() AccessLevelBasicConditionDevicePolicyPtrOutput {
	return i.ToAccessLevelBasicConditionDevicePolicyPtrOutputWithContext(context.Background())
}

func (i *accessLevelBasicConditionDevicePolicyPtrType) ToAccessLevelBasicConditionDevicePolicyPtrOutputWithContext(ctx context.Context) AccessLevelBasicConditionDevicePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessLevelBasicConditionDevicePolicyPtrOutput)
}

type AccessLevelBasicConditionDevicePolicyOutput struct{ *pulumi.OutputState }

func (AccessLevelBasicConditionDevicePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessLevelBasicConditionDevicePolicy)(nil)).Elem()
}

func (o AccessLevelBasicConditionDevicePolicyOutput) ToAccessLevelBasicConditionDevicePolicyOutput() AccessLevelBasicConditionDevicePolicyOutput {
	return o
}

func (o AccessLevelBasicConditionDevicePolicyOutput) ToAccessLevelBasicConditionDevicePolicyOutputWithContext(ctx context.Context) AccessLevelBasicConditionDevicePolicyOutput {
	return o
}

func (o AccessLevelBasicConditionDevicePolicyOutput) ToAccessLevelBasicConditionDevicePolicyPtrOutput() AccessLevelBasicConditionDevicePolicyPtrOutput {
	return o.ToAccessLevelBasicConditionDevicePolicyPtrOutputWithContext(context.Background())
}

func (o AccessLevelBasicConditionDevicePolicyOutput) ToAccessLevelBasicConditionDevicePolicyPtrOutputWithContext(ctx context.Context) AccessLevelBasicConditionDevicePolicyPtrOutput {
	return o.ApplyT(func(v AccessLevelBasicConditionDevicePolicy) *AccessLevelBasicConditionDevicePolicy {
		return &v
	}).(AccessLevelBasicConditionDevicePolicyPtrOutput)
}

// A list of allowed device management levels.
// An empty list allows all management levels.
func (o AccessLevelBasicConditionDevicePolicyOutput) AllowedDeviceManagementLevels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessLevelBasicConditionDevicePolicy) []string { return v.AllowedDeviceManagementLevels }).(pulumi.StringArrayOutput)
}

// A list of allowed encryptions statuses.
// An empty list allows all statuses.
func (o AccessLevelBasicConditionDevicePolicyOutput) AllowedEncryptionStatuses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessLevelBasicConditionDevicePolicy) []string { return v.AllowedEncryptionStatuses }).(pulumi.StringArrayOutput)
}

// A list of allowed OS versions.
// An empty list allows all types and all versions.  Structure is documented below.
func (o AccessLevelBasicConditionDevicePolicyOutput) OsConstraints() AccessLevelBasicConditionDevicePolicyOsConstraintArrayOutput {
	return o.ApplyT(func(v AccessLevelBasicConditionDevicePolicy) []AccessLevelBasicConditionDevicePolicyOsConstraint {
		return v.OsConstraints
	}).(AccessLevelBasicConditionDevicePolicyOsConstraintArrayOutput)
}

// Whether the device needs to be approved by the customer admin.
func (o AccessLevelBasicConditionDevicePolicyOutput) RequireAdminApproval() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AccessLevelBasicConditionDevicePolicy) *bool { return v.RequireAdminApproval }).(pulumi.BoolPtrOutput)
}

// Whether the device needs to be corp owned.
func (o AccessLevelBasicConditionDevicePolicyOutput) RequireCorpOwned() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AccessLevelBasicConditionDevicePolicy) *bool { return v.RequireCorpOwned }).(pulumi.BoolPtrOutput)
}

// Whether or not screenlock is required for the DevicePolicy
// to be true. Defaults to false.
func (o AccessLevelBasicConditionDevicePolicyOutput) RequireScreenLock() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AccessLevelBasicConditionDevicePolicy) *bool { return v.RequireScreenLock }).(pulumi.BoolPtrOutput)
}

type AccessLevelBasicConditionDevicePolicyPtrOutput struct{ *pulumi.OutputState }

func (AccessLevelBasicConditionDevicePolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessLevelBasicConditionDevicePolicy)(nil)).Elem()
}

func (o AccessLevelBasicConditionDevicePolicyPtrOutput) ToAccessLevelBasicConditionDevicePolicyPtrOutput() AccessLevelBasicConditionDevicePolicyPtrOutput {
	return o
}

func (o AccessLevelBasicConditionDevicePolicyPtrOutput) ToAccessLevelBasicConditionDevicePolicyPtrOutputWithContext(ctx context.Context) AccessLevelBasicConditionDevicePolicyPtrOutput {
	return o
}

func (o AccessLevelBasicConditionDevicePolicyPtrOutput) Elem() AccessLevelBasicConditionDevicePolicyOutput {
	return o.ApplyT(func(v *AccessLevelBasicConditionDevicePolicy) AccessLevelBasicConditionDevicePolicy { return *v }).(AccessLevelBasicConditionDevicePolicyOutput)
}

// A list of allowed device management levels.
// An empty list allows all management levels.
func (o AccessLevelBasicConditionDevicePolicyPtrOutput) AllowedDeviceManagementLevels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AccessLevelBasicConditionDevicePolicy) []string {
		if v == nil {
			return nil
		}
		return v.AllowedDeviceManagementLevels
	}).(pulumi.StringArrayOutput)
}

// A list of allowed encryptions statuses.
// An empty list allows all statuses.
func (o AccessLevelBasicConditionDevicePolicyPtrOutput) AllowedEncryptionStatuses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AccessLevelBasicConditionDevicePolicy) []string {
		if v == nil {
			return nil
		}
		return v.AllowedEncryptionStatuses
	}).(pulumi.StringArrayOutput)
}

// A list of allowed OS versions.
// An empty list allows all types and all versions.  Structure is documented below.
func (o AccessLevelBasicConditionDevicePolicyPtrOutput) OsConstraints() AccessLevelBasicConditionDevicePolicyOsConstraintArrayOutput {
	return o.ApplyT(func(v *AccessLevelBasicConditionDevicePolicy) []AccessLevelBasicConditionDevicePolicyOsConstraint {
		if v == nil {
			return nil
		}
		return v.OsConstraints
	}).(AccessLevelBasicConditionDevicePolicyOsConstraintArrayOutput)
}

// Whether the device needs to be approved by the customer admin.
func (o AccessLevelBasicConditionDevicePolicyPtrOutput) RequireAdminApproval() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AccessLevelBasicConditionDevicePolicy) *bool {
		if v == nil {
			return nil
		}
		return v.RequireAdminApproval
	}).(pulumi.BoolPtrOutput)
}

// Whether the device needs to be corp owned.
func (o AccessLevelBasicConditionDevicePolicyPtrOutput) RequireCorpOwned() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AccessLevelBasicConditionDevicePolicy) *bool {
		if v == nil {
			return nil
		}
		return v.RequireCorpOwned
	}).(pulumi.BoolPtrOutput)
}

// Whether or not screenlock is required for the DevicePolicy
// to be true. Defaults to false.
func (o AccessLevelBasicConditionDevicePolicyPtrOutput) RequireScreenLock() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AccessLevelBasicConditionDevicePolicy) *bool {
		if v == nil {
			return nil
		}
		return v.RequireScreenLock
	}).(pulumi.BoolPtrOutput)
}

type AccessLevelBasicConditionDevicePolicyOsConstraint struct {
	// The minimum allowed OS version. If not set, any version
	// of this OS satisfies the constraint.
	// Format: "major.minor.patch" such as "10.5.301", "9.2.1".
	MinimumVersion *string `pulumi:"minimumVersion"`
	// The operating system type of the device.
	OsType string `pulumi:"osType"`
}

// AccessLevelBasicConditionDevicePolicyOsConstraintInput is an input type that accepts AccessLevelBasicConditionDevicePolicyOsConstraintArgs and AccessLevelBasicConditionDevicePolicyOsConstraintOutput values.
// You can construct a concrete instance of `AccessLevelBasicConditionDevicePolicyOsConstraintInput` via:
//
// 		 AccessLevelBasicConditionDevicePolicyOsConstraintArgs{...}
//
type AccessLevelBasicConditionDevicePolicyOsConstraintInput interface {
	pulumi.Input

	ToAccessLevelBasicConditionDevicePolicyOsConstraintOutput() AccessLevelBasicConditionDevicePolicyOsConstraintOutput
	ToAccessLevelBasicConditionDevicePolicyOsConstraintOutputWithContext(context.Context) AccessLevelBasicConditionDevicePolicyOsConstraintOutput
}

type AccessLevelBasicConditionDevicePolicyOsConstraintArgs struct {
	// The minimum allowed OS version. If not set, any version
	// of this OS satisfies the constraint.
	// Format: "major.minor.patch" such as "10.5.301", "9.2.1".
	MinimumVersion pulumi.StringPtrInput `pulumi:"minimumVersion"`
	// The operating system type of the device.
	OsType pulumi.StringInput `pulumi:"osType"`
}

func (AccessLevelBasicConditionDevicePolicyOsConstraintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessLevelBasicConditionDevicePolicyOsConstraint)(nil)).Elem()
}

func (i AccessLevelBasicConditionDevicePolicyOsConstraintArgs) ToAccessLevelBasicConditionDevicePolicyOsConstraintOutput() AccessLevelBasicConditionDevicePolicyOsConstraintOutput {
	return i.ToAccessLevelBasicConditionDevicePolicyOsConstraintOutputWithContext(context.Background())
}

func (i AccessLevelBasicConditionDevicePolicyOsConstraintArgs) ToAccessLevelBasicConditionDevicePolicyOsConstraintOutputWithContext(ctx context.Context) AccessLevelBasicConditionDevicePolicyOsConstraintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessLevelBasicConditionDevicePolicyOsConstraintOutput)
}

// AccessLevelBasicConditionDevicePolicyOsConstraintArrayInput is an input type that accepts AccessLevelBasicConditionDevicePolicyOsConstraintArray and AccessLevelBasicConditionDevicePolicyOsConstraintArrayOutput values.
// You can construct a concrete instance of `AccessLevelBasicConditionDevicePolicyOsConstraintArrayInput` via:
//
// 		 AccessLevelBasicConditionDevicePolicyOsConstraintArray{ AccessLevelBasicConditionDevicePolicyOsConstraintArgs{...} }
//
type AccessLevelBasicConditionDevicePolicyOsConstraintArrayInput interface {
	pulumi.Input

	ToAccessLevelBasicConditionDevicePolicyOsConstraintArrayOutput() AccessLevelBasicConditionDevicePolicyOsConstraintArrayOutput
	ToAccessLevelBasicConditionDevicePolicyOsConstraintArrayOutputWithContext(context.Context) AccessLevelBasicConditionDevicePolicyOsConstraintArrayOutput
}

type AccessLevelBasicConditionDevicePolicyOsConstraintArray []AccessLevelBasicConditionDevicePolicyOsConstraintInput

func (AccessLevelBasicConditionDevicePolicyOsConstraintArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessLevelBasicConditionDevicePolicyOsConstraint)(nil)).Elem()
}

func (i AccessLevelBasicConditionDevicePolicyOsConstraintArray) ToAccessLevelBasicConditionDevicePolicyOsConstraintArrayOutput() AccessLevelBasicConditionDevicePolicyOsConstraintArrayOutput {
	return i.ToAccessLevelBasicConditionDevicePolicyOsConstraintArrayOutputWithContext(context.Background())
}

func (i AccessLevelBasicConditionDevicePolicyOsConstraintArray) ToAccessLevelBasicConditionDevicePolicyOsConstraintArrayOutputWithContext(ctx context.Context) AccessLevelBasicConditionDevicePolicyOsConstraintArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessLevelBasicConditionDevicePolicyOsConstraintArrayOutput)
}

type AccessLevelBasicConditionDevicePolicyOsConstraintOutput struct{ *pulumi.OutputState }

func (AccessLevelBasicConditionDevicePolicyOsConstraintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessLevelBasicConditionDevicePolicyOsConstraint)(nil)).Elem()
}

func (o AccessLevelBasicConditionDevicePolicyOsConstraintOutput) ToAccessLevelBasicConditionDevicePolicyOsConstraintOutput() AccessLevelBasicConditionDevicePolicyOsConstraintOutput {
	return o
}

func (o AccessLevelBasicConditionDevicePolicyOsConstraintOutput) ToAccessLevelBasicConditionDevicePolicyOsConstraintOutputWithContext(ctx context.Context) AccessLevelBasicConditionDevicePolicyOsConstraintOutput {
	return o
}

// The minimum allowed OS version. If not set, any version
// of this OS satisfies the constraint.
// Format: "major.minor.patch" such as "10.5.301", "9.2.1".
func (o AccessLevelBasicConditionDevicePolicyOsConstraintOutput) MinimumVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessLevelBasicConditionDevicePolicyOsConstraint) *string { return v.MinimumVersion }).(pulumi.StringPtrOutput)
}

// The operating system type of the device.
func (o AccessLevelBasicConditionDevicePolicyOsConstraintOutput) OsType() pulumi.StringOutput {
	return o.ApplyT(func(v AccessLevelBasicConditionDevicePolicyOsConstraint) string { return v.OsType }).(pulumi.StringOutput)
}

type AccessLevelBasicConditionDevicePolicyOsConstraintArrayOutput struct{ *pulumi.OutputState }

func (AccessLevelBasicConditionDevicePolicyOsConstraintArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessLevelBasicConditionDevicePolicyOsConstraint)(nil)).Elem()
}

func (o AccessLevelBasicConditionDevicePolicyOsConstraintArrayOutput) ToAccessLevelBasicConditionDevicePolicyOsConstraintArrayOutput() AccessLevelBasicConditionDevicePolicyOsConstraintArrayOutput {
	return o
}

func (o AccessLevelBasicConditionDevicePolicyOsConstraintArrayOutput) ToAccessLevelBasicConditionDevicePolicyOsConstraintArrayOutputWithContext(ctx context.Context) AccessLevelBasicConditionDevicePolicyOsConstraintArrayOutput {
	return o
}

func (o AccessLevelBasicConditionDevicePolicyOsConstraintArrayOutput) Index(i pulumi.IntInput) AccessLevelBasicConditionDevicePolicyOsConstraintOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccessLevelBasicConditionDevicePolicyOsConstraint {
		return vs[0].([]AccessLevelBasicConditionDevicePolicyOsConstraint)[vs[1].(int)]
	}).(AccessLevelBasicConditionDevicePolicyOsConstraintOutput)
}

type ServicePerimeterSpec struct {
	// A list of AccessLevel resource names that allow resources within
	// the ServicePerimeter to be accessed from the internet.
	// AccessLevels listed must be in the same policy as this
	// ServicePerimeter. Referencing a nonexistent AccessLevel is a
	// syntax error. If no AccessLevel names are listed, resources within
	// the perimeter can only be accessed via GCP calls with request
	// origins within the perimeter. For Service Perimeter Bridge, must
	// be empty.
	// Format: accessPolicies/{policy_id}/accessLevels/{access_level_name}
	AccessLevels []string `pulumi:"accessLevels"`
	// A list of GCP resources that are inside of the service perimeter.
	// Currently only projects are allowed.
	// Format: projects/{project_number}
	Resources []string `pulumi:"resources"`
	// GCP services that are subject to the Service Perimeter
	// restrictions. Must contain a list of services. For example, if
	// `storage.googleapis.com` is specified, access to the storage
	// buckets inside the perimeter must meet the perimeter's access
	// restrictions.
	RestrictedServices []string `pulumi:"restrictedServices"`
	// Specifies how APIs are allowed to communicate within the Service
	// Perimeter.  Structure is documented below.
	VpcAccessibleServices *ServicePerimeterSpecVpcAccessibleServices `pulumi:"vpcAccessibleServices"`
}

// ServicePerimeterSpecInput is an input type that accepts ServicePerimeterSpecArgs and ServicePerimeterSpecOutput values.
// You can construct a concrete instance of `ServicePerimeterSpecInput` via:
//
// 		 ServicePerimeterSpecArgs{...}
//
type ServicePerimeterSpecInput interface {
	pulumi.Input

	ToServicePerimeterSpecOutput() ServicePerimeterSpecOutput
	ToServicePerimeterSpecOutputWithContext(context.Context) ServicePerimeterSpecOutput
}

type ServicePerimeterSpecArgs struct {
	// A list of AccessLevel resource names that allow resources within
	// the ServicePerimeter to be accessed from the internet.
	// AccessLevels listed must be in the same policy as this
	// ServicePerimeter. Referencing a nonexistent AccessLevel is a
	// syntax error. If no AccessLevel names are listed, resources within
	// the perimeter can only be accessed via GCP calls with request
	// origins within the perimeter. For Service Perimeter Bridge, must
	// be empty.
	// Format: accessPolicies/{policy_id}/accessLevels/{access_level_name}
	AccessLevels pulumi.StringArrayInput `pulumi:"accessLevels"`
	// A list of GCP resources that are inside of the service perimeter.
	// Currently only projects are allowed.
	// Format: projects/{project_number}
	Resources pulumi.StringArrayInput `pulumi:"resources"`
	// GCP services that are subject to the Service Perimeter
	// restrictions. Must contain a list of services. For example, if
	// `storage.googleapis.com` is specified, access to the storage
	// buckets inside the perimeter must meet the perimeter's access
	// restrictions.
	RestrictedServices pulumi.StringArrayInput `pulumi:"restrictedServices"`
	// Specifies how APIs are allowed to communicate within the Service
	// Perimeter.  Structure is documented below.
	VpcAccessibleServices ServicePerimeterSpecVpcAccessibleServicesPtrInput `pulumi:"vpcAccessibleServices"`
}

func (ServicePerimeterSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServicePerimeterSpec)(nil)).Elem()
}

func (i ServicePerimeterSpecArgs) ToServicePerimeterSpecOutput() ServicePerimeterSpecOutput {
	return i.ToServicePerimeterSpecOutputWithContext(context.Background())
}

func (i ServicePerimeterSpecArgs) ToServicePerimeterSpecOutputWithContext(ctx context.Context) ServicePerimeterSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePerimeterSpecOutput)
}

func (i ServicePerimeterSpecArgs) ToServicePerimeterSpecPtrOutput() ServicePerimeterSpecPtrOutput {
	return i.ToServicePerimeterSpecPtrOutputWithContext(context.Background())
}

func (i ServicePerimeterSpecArgs) ToServicePerimeterSpecPtrOutputWithContext(ctx context.Context) ServicePerimeterSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePerimeterSpecOutput).ToServicePerimeterSpecPtrOutputWithContext(ctx)
}

// ServicePerimeterSpecPtrInput is an input type that accepts ServicePerimeterSpecArgs, ServicePerimeterSpecPtr and ServicePerimeterSpecPtrOutput values.
// You can construct a concrete instance of `ServicePerimeterSpecPtrInput` via:
//
// 		 ServicePerimeterSpecArgs{...}
//
//  or:
//
// 		 nil
//
type ServicePerimeterSpecPtrInput interface {
	pulumi.Input

	ToServicePerimeterSpecPtrOutput() ServicePerimeterSpecPtrOutput
	ToServicePerimeterSpecPtrOutputWithContext(context.Context) ServicePerimeterSpecPtrOutput
}

type servicePerimeterSpecPtrType ServicePerimeterSpecArgs

func ServicePerimeterSpecPtr(v *ServicePerimeterSpecArgs) ServicePerimeterSpecPtrInput {
	return (*servicePerimeterSpecPtrType)(v)
}

func (*servicePerimeterSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServicePerimeterSpec)(nil)).Elem()
}

func (i *servicePerimeterSpecPtrType) ToServicePerimeterSpecPtrOutput() ServicePerimeterSpecPtrOutput {
	return i.ToServicePerimeterSpecPtrOutputWithContext(context.Background())
}

func (i *servicePerimeterSpecPtrType) ToServicePerimeterSpecPtrOutputWithContext(ctx context.Context) ServicePerimeterSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePerimeterSpecPtrOutput)
}

type ServicePerimeterSpecOutput struct{ *pulumi.OutputState }

func (ServicePerimeterSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServicePerimeterSpec)(nil)).Elem()
}

func (o ServicePerimeterSpecOutput) ToServicePerimeterSpecOutput() ServicePerimeterSpecOutput {
	return o
}

func (o ServicePerimeterSpecOutput) ToServicePerimeterSpecOutputWithContext(ctx context.Context) ServicePerimeterSpecOutput {
	return o
}

func (o ServicePerimeterSpecOutput) ToServicePerimeterSpecPtrOutput() ServicePerimeterSpecPtrOutput {
	return o.ToServicePerimeterSpecPtrOutputWithContext(context.Background())
}

func (o ServicePerimeterSpecOutput) ToServicePerimeterSpecPtrOutputWithContext(ctx context.Context) ServicePerimeterSpecPtrOutput {
	return o.ApplyT(func(v ServicePerimeterSpec) *ServicePerimeterSpec {
		return &v
	}).(ServicePerimeterSpecPtrOutput)
}

// A list of AccessLevel resource names that allow resources within
// the ServicePerimeter to be accessed from the internet.
// AccessLevels listed must be in the same policy as this
// ServicePerimeter. Referencing a nonexistent AccessLevel is a
// syntax error. If no AccessLevel names are listed, resources within
// the perimeter can only be accessed via GCP calls with request
// origins within the perimeter. For Service Perimeter Bridge, must
// be empty.
// Format: accessPolicies/{policy_id}/accessLevels/{access_level_name}
func (o ServicePerimeterSpecOutput) AccessLevels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServicePerimeterSpec) []string { return v.AccessLevels }).(pulumi.StringArrayOutput)
}

// A list of GCP resources that are inside of the service perimeter.
// Currently only projects are allowed.
// Format: projects/{project_number}
func (o ServicePerimeterSpecOutput) Resources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServicePerimeterSpec) []string { return v.Resources }).(pulumi.StringArrayOutput)
}

// GCP services that are subject to the Service Perimeter
// restrictions. Must contain a list of services. For example, if
// `storage.googleapis.com` is specified, access to the storage
// buckets inside the perimeter must meet the perimeter's access
// restrictions.
func (o ServicePerimeterSpecOutput) RestrictedServices() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServicePerimeterSpec) []string { return v.RestrictedServices }).(pulumi.StringArrayOutput)
}

// Specifies how APIs are allowed to communicate within the Service
// Perimeter.  Structure is documented below.
func (o ServicePerimeterSpecOutput) VpcAccessibleServices() ServicePerimeterSpecVpcAccessibleServicesPtrOutput {
	return o.ApplyT(func(v ServicePerimeterSpec) *ServicePerimeterSpecVpcAccessibleServices {
		return v.VpcAccessibleServices
	}).(ServicePerimeterSpecVpcAccessibleServicesPtrOutput)
}

type ServicePerimeterSpecPtrOutput struct{ *pulumi.OutputState }

func (ServicePerimeterSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServicePerimeterSpec)(nil)).Elem()
}

func (o ServicePerimeterSpecPtrOutput) ToServicePerimeterSpecPtrOutput() ServicePerimeterSpecPtrOutput {
	return o
}

func (o ServicePerimeterSpecPtrOutput) ToServicePerimeterSpecPtrOutputWithContext(ctx context.Context) ServicePerimeterSpecPtrOutput {
	return o
}

func (o ServicePerimeterSpecPtrOutput) Elem() ServicePerimeterSpecOutput {
	return o.ApplyT(func(v *ServicePerimeterSpec) ServicePerimeterSpec { return *v }).(ServicePerimeterSpecOutput)
}

// A list of AccessLevel resource names that allow resources within
// the ServicePerimeter to be accessed from the internet.
// AccessLevels listed must be in the same policy as this
// ServicePerimeter. Referencing a nonexistent AccessLevel is a
// syntax error. If no AccessLevel names are listed, resources within
// the perimeter can only be accessed via GCP calls with request
// origins within the perimeter. For Service Perimeter Bridge, must
// be empty.
// Format: accessPolicies/{policy_id}/accessLevels/{access_level_name}
func (o ServicePerimeterSpecPtrOutput) AccessLevels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServicePerimeterSpec) []string {
		if v == nil {
			return nil
		}
		return v.AccessLevels
	}).(pulumi.StringArrayOutput)
}

// A list of GCP resources that are inside of the service perimeter.
// Currently only projects are allowed.
// Format: projects/{project_number}
func (o ServicePerimeterSpecPtrOutput) Resources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServicePerimeterSpec) []string {
		if v == nil {
			return nil
		}
		return v.Resources
	}).(pulumi.StringArrayOutput)
}

// GCP services that are subject to the Service Perimeter
// restrictions. Must contain a list of services. For example, if
// `storage.googleapis.com` is specified, access to the storage
// buckets inside the perimeter must meet the perimeter's access
// restrictions.
func (o ServicePerimeterSpecPtrOutput) RestrictedServices() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServicePerimeterSpec) []string {
		if v == nil {
			return nil
		}
		return v.RestrictedServices
	}).(pulumi.StringArrayOutput)
}

// Specifies how APIs are allowed to communicate within the Service
// Perimeter.  Structure is documented below.
func (o ServicePerimeterSpecPtrOutput) VpcAccessibleServices() ServicePerimeterSpecVpcAccessibleServicesPtrOutput {
	return o.ApplyT(func(v *ServicePerimeterSpec) *ServicePerimeterSpecVpcAccessibleServices {
		if v == nil {
			return nil
		}
		return v.VpcAccessibleServices
	}).(ServicePerimeterSpecVpcAccessibleServicesPtrOutput)
}

type ServicePerimeterSpecVpcAccessibleServices struct {
	// The list of APIs usable within the Service Perimeter.
	// Must be empty unless `enableRestriction` is True.
	AllowedServices []string `pulumi:"allowedServices"`
	// Whether to restrict API calls within the Service Perimeter to the
	// list of APIs specified in 'allowedServices'.
	EnableRestriction *bool `pulumi:"enableRestriction"`
}

// ServicePerimeterSpecVpcAccessibleServicesInput is an input type that accepts ServicePerimeterSpecVpcAccessibleServicesArgs and ServicePerimeterSpecVpcAccessibleServicesOutput values.
// You can construct a concrete instance of `ServicePerimeterSpecVpcAccessibleServicesInput` via:
//
// 		 ServicePerimeterSpecVpcAccessibleServicesArgs{...}
//
type ServicePerimeterSpecVpcAccessibleServicesInput interface {
	pulumi.Input

	ToServicePerimeterSpecVpcAccessibleServicesOutput() ServicePerimeterSpecVpcAccessibleServicesOutput
	ToServicePerimeterSpecVpcAccessibleServicesOutputWithContext(context.Context) ServicePerimeterSpecVpcAccessibleServicesOutput
}

type ServicePerimeterSpecVpcAccessibleServicesArgs struct {
	// The list of APIs usable within the Service Perimeter.
	// Must be empty unless `enableRestriction` is True.
	AllowedServices pulumi.StringArrayInput `pulumi:"allowedServices"`
	// Whether to restrict API calls within the Service Perimeter to the
	// list of APIs specified in 'allowedServices'.
	EnableRestriction pulumi.BoolPtrInput `pulumi:"enableRestriction"`
}

func (ServicePerimeterSpecVpcAccessibleServicesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServicePerimeterSpecVpcAccessibleServices)(nil)).Elem()
}

func (i ServicePerimeterSpecVpcAccessibleServicesArgs) ToServicePerimeterSpecVpcAccessibleServicesOutput() ServicePerimeterSpecVpcAccessibleServicesOutput {
	return i.ToServicePerimeterSpecVpcAccessibleServicesOutputWithContext(context.Background())
}

func (i ServicePerimeterSpecVpcAccessibleServicesArgs) ToServicePerimeterSpecVpcAccessibleServicesOutputWithContext(ctx context.Context) ServicePerimeterSpecVpcAccessibleServicesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePerimeterSpecVpcAccessibleServicesOutput)
}

func (i ServicePerimeterSpecVpcAccessibleServicesArgs) ToServicePerimeterSpecVpcAccessibleServicesPtrOutput() ServicePerimeterSpecVpcAccessibleServicesPtrOutput {
	return i.ToServicePerimeterSpecVpcAccessibleServicesPtrOutputWithContext(context.Background())
}

func (i ServicePerimeterSpecVpcAccessibleServicesArgs) ToServicePerimeterSpecVpcAccessibleServicesPtrOutputWithContext(ctx context.Context) ServicePerimeterSpecVpcAccessibleServicesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePerimeterSpecVpcAccessibleServicesOutput).ToServicePerimeterSpecVpcAccessibleServicesPtrOutputWithContext(ctx)
}

// ServicePerimeterSpecVpcAccessibleServicesPtrInput is an input type that accepts ServicePerimeterSpecVpcAccessibleServicesArgs, ServicePerimeterSpecVpcAccessibleServicesPtr and ServicePerimeterSpecVpcAccessibleServicesPtrOutput values.
// You can construct a concrete instance of `ServicePerimeterSpecVpcAccessibleServicesPtrInput` via:
//
// 		 ServicePerimeterSpecVpcAccessibleServicesArgs{...}
//
//  or:
//
// 		 nil
//
type ServicePerimeterSpecVpcAccessibleServicesPtrInput interface {
	pulumi.Input

	ToServicePerimeterSpecVpcAccessibleServicesPtrOutput() ServicePerimeterSpecVpcAccessibleServicesPtrOutput
	ToServicePerimeterSpecVpcAccessibleServicesPtrOutputWithContext(context.Context) ServicePerimeterSpecVpcAccessibleServicesPtrOutput
}

type servicePerimeterSpecVpcAccessibleServicesPtrType ServicePerimeterSpecVpcAccessibleServicesArgs

func ServicePerimeterSpecVpcAccessibleServicesPtr(v *ServicePerimeterSpecVpcAccessibleServicesArgs) ServicePerimeterSpecVpcAccessibleServicesPtrInput {
	return (*servicePerimeterSpecVpcAccessibleServicesPtrType)(v)
}

func (*servicePerimeterSpecVpcAccessibleServicesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServicePerimeterSpecVpcAccessibleServices)(nil)).Elem()
}

func (i *servicePerimeterSpecVpcAccessibleServicesPtrType) ToServicePerimeterSpecVpcAccessibleServicesPtrOutput() ServicePerimeterSpecVpcAccessibleServicesPtrOutput {
	return i.ToServicePerimeterSpecVpcAccessibleServicesPtrOutputWithContext(context.Background())
}

func (i *servicePerimeterSpecVpcAccessibleServicesPtrType) ToServicePerimeterSpecVpcAccessibleServicesPtrOutputWithContext(ctx context.Context) ServicePerimeterSpecVpcAccessibleServicesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePerimeterSpecVpcAccessibleServicesPtrOutput)
}

type ServicePerimeterSpecVpcAccessibleServicesOutput struct{ *pulumi.OutputState }

func (ServicePerimeterSpecVpcAccessibleServicesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServicePerimeterSpecVpcAccessibleServices)(nil)).Elem()
}

func (o ServicePerimeterSpecVpcAccessibleServicesOutput) ToServicePerimeterSpecVpcAccessibleServicesOutput() ServicePerimeterSpecVpcAccessibleServicesOutput {
	return o
}

func (o ServicePerimeterSpecVpcAccessibleServicesOutput) ToServicePerimeterSpecVpcAccessibleServicesOutputWithContext(ctx context.Context) ServicePerimeterSpecVpcAccessibleServicesOutput {
	return o
}

func (o ServicePerimeterSpecVpcAccessibleServicesOutput) ToServicePerimeterSpecVpcAccessibleServicesPtrOutput() ServicePerimeterSpecVpcAccessibleServicesPtrOutput {
	return o.ToServicePerimeterSpecVpcAccessibleServicesPtrOutputWithContext(context.Background())
}

func (o ServicePerimeterSpecVpcAccessibleServicesOutput) ToServicePerimeterSpecVpcAccessibleServicesPtrOutputWithContext(ctx context.Context) ServicePerimeterSpecVpcAccessibleServicesPtrOutput {
	return o.ApplyT(func(v ServicePerimeterSpecVpcAccessibleServices) *ServicePerimeterSpecVpcAccessibleServices {
		return &v
	}).(ServicePerimeterSpecVpcAccessibleServicesPtrOutput)
}

// The list of APIs usable within the Service Perimeter.
// Must be empty unless `enableRestriction` is True.
func (o ServicePerimeterSpecVpcAccessibleServicesOutput) AllowedServices() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServicePerimeterSpecVpcAccessibleServices) []string { return v.AllowedServices }).(pulumi.StringArrayOutput)
}

// Whether to restrict API calls within the Service Perimeter to the
// list of APIs specified in 'allowedServices'.
func (o ServicePerimeterSpecVpcAccessibleServicesOutput) EnableRestriction() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServicePerimeterSpecVpcAccessibleServices) *bool { return v.EnableRestriction }).(pulumi.BoolPtrOutput)
}

type ServicePerimeterSpecVpcAccessibleServicesPtrOutput struct{ *pulumi.OutputState }

func (ServicePerimeterSpecVpcAccessibleServicesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServicePerimeterSpecVpcAccessibleServices)(nil)).Elem()
}

func (o ServicePerimeterSpecVpcAccessibleServicesPtrOutput) ToServicePerimeterSpecVpcAccessibleServicesPtrOutput() ServicePerimeterSpecVpcAccessibleServicesPtrOutput {
	return o
}

func (o ServicePerimeterSpecVpcAccessibleServicesPtrOutput) ToServicePerimeterSpecVpcAccessibleServicesPtrOutputWithContext(ctx context.Context) ServicePerimeterSpecVpcAccessibleServicesPtrOutput {
	return o
}

func (o ServicePerimeterSpecVpcAccessibleServicesPtrOutput) Elem() ServicePerimeterSpecVpcAccessibleServicesOutput {
	return o.ApplyT(func(v *ServicePerimeterSpecVpcAccessibleServices) ServicePerimeterSpecVpcAccessibleServices {
		return *v
	}).(ServicePerimeterSpecVpcAccessibleServicesOutput)
}

// The list of APIs usable within the Service Perimeter.
// Must be empty unless `enableRestriction` is True.
func (o ServicePerimeterSpecVpcAccessibleServicesPtrOutput) AllowedServices() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServicePerimeterSpecVpcAccessibleServices) []string {
		if v == nil {
			return nil
		}
		return v.AllowedServices
	}).(pulumi.StringArrayOutput)
}

// Whether to restrict API calls within the Service Perimeter to the
// list of APIs specified in 'allowedServices'.
func (o ServicePerimeterSpecVpcAccessibleServicesPtrOutput) EnableRestriction() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServicePerimeterSpecVpcAccessibleServices) *bool {
		if v == nil {
			return nil
		}
		return v.EnableRestriction
	}).(pulumi.BoolPtrOutput)
}

type ServicePerimeterStatus struct {
	// A list of AccessLevel resource names that allow resources within
	// the ServicePerimeter to be accessed from the internet.
	// AccessLevels listed must be in the same policy as this
	// ServicePerimeter. Referencing a nonexistent AccessLevel is a
	// syntax error. If no AccessLevel names are listed, resources within
	// the perimeter can only be accessed via GCP calls with request
	// origins within the perimeter. For Service Perimeter Bridge, must
	// be empty.
	// Format: accessPolicies/{policy_id}/accessLevels/{access_level_name}
	AccessLevels []string `pulumi:"accessLevels"`
	// A list of GCP resources that are inside of the service perimeter.
	// Currently only projects are allowed.
	// Format: projects/{project_number}
	Resources []string `pulumi:"resources"`
	// GCP services that are subject to the Service Perimeter
	// restrictions. Must contain a list of services. For example, if
	// `storage.googleapis.com` is specified, access to the storage
	// buckets inside the perimeter must meet the perimeter's access
	// restrictions.
	RestrictedServices []string `pulumi:"restrictedServices"`
	// Specifies how APIs are allowed to communicate within the Service
	// Perimeter.  Structure is documented below.
	VpcAccessibleServices *ServicePerimeterStatusVpcAccessibleServices `pulumi:"vpcAccessibleServices"`
}

// ServicePerimeterStatusInput is an input type that accepts ServicePerimeterStatusArgs and ServicePerimeterStatusOutput values.
// You can construct a concrete instance of `ServicePerimeterStatusInput` via:
//
// 		 ServicePerimeterStatusArgs{...}
//
type ServicePerimeterStatusInput interface {
	pulumi.Input

	ToServicePerimeterStatusOutput() ServicePerimeterStatusOutput
	ToServicePerimeterStatusOutputWithContext(context.Context) ServicePerimeterStatusOutput
}

type ServicePerimeterStatusArgs struct {
	// A list of AccessLevel resource names that allow resources within
	// the ServicePerimeter to be accessed from the internet.
	// AccessLevels listed must be in the same policy as this
	// ServicePerimeter. Referencing a nonexistent AccessLevel is a
	// syntax error. If no AccessLevel names are listed, resources within
	// the perimeter can only be accessed via GCP calls with request
	// origins within the perimeter. For Service Perimeter Bridge, must
	// be empty.
	// Format: accessPolicies/{policy_id}/accessLevels/{access_level_name}
	AccessLevels pulumi.StringArrayInput `pulumi:"accessLevels"`
	// A list of GCP resources that are inside of the service perimeter.
	// Currently only projects are allowed.
	// Format: projects/{project_number}
	Resources pulumi.StringArrayInput `pulumi:"resources"`
	// GCP services that are subject to the Service Perimeter
	// restrictions. Must contain a list of services. For example, if
	// `storage.googleapis.com` is specified, access to the storage
	// buckets inside the perimeter must meet the perimeter's access
	// restrictions.
	RestrictedServices pulumi.StringArrayInput `pulumi:"restrictedServices"`
	// Specifies how APIs are allowed to communicate within the Service
	// Perimeter.  Structure is documented below.
	VpcAccessibleServices ServicePerimeterStatusVpcAccessibleServicesPtrInput `pulumi:"vpcAccessibleServices"`
}

func (ServicePerimeterStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServicePerimeterStatus)(nil)).Elem()
}

func (i ServicePerimeterStatusArgs) ToServicePerimeterStatusOutput() ServicePerimeterStatusOutput {
	return i.ToServicePerimeterStatusOutputWithContext(context.Background())
}

func (i ServicePerimeterStatusArgs) ToServicePerimeterStatusOutputWithContext(ctx context.Context) ServicePerimeterStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePerimeterStatusOutput)
}

func (i ServicePerimeterStatusArgs) ToServicePerimeterStatusPtrOutput() ServicePerimeterStatusPtrOutput {
	return i.ToServicePerimeterStatusPtrOutputWithContext(context.Background())
}

func (i ServicePerimeterStatusArgs) ToServicePerimeterStatusPtrOutputWithContext(ctx context.Context) ServicePerimeterStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePerimeterStatusOutput).ToServicePerimeterStatusPtrOutputWithContext(ctx)
}

// ServicePerimeterStatusPtrInput is an input type that accepts ServicePerimeterStatusArgs, ServicePerimeterStatusPtr and ServicePerimeterStatusPtrOutput values.
// You can construct a concrete instance of `ServicePerimeterStatusPtrInput` via:
//
// 		 ServicePerimeterStatusArgs{...}
//
//  or:
//
// 		 nil
//
type ServicePerimeterStatusPtrInput interface {
	pulumi.Input

	ToServicePerimeterStatusPtrOutput() ServicePerimeterStatusPtrOutput
	ToServicePerimeterStatusPtrOutputWithContext(context.Context) ServicePerimeterStatusPtrOutput
}

type servicePerimeterStatusPtrType ServicePerimeterStatusArgs

func ServicePerimeterStatusPtr(v *ServicePerimeterStatusArgs) ServicePerimeterStatusPtrInput {
	return (*servicePerimeterStatusPtrType)(v)
}

func (*servicePerimeterStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServicePerimeterStatus)(nil)).Elem()
}

func (i *servicePerimeterStatusPtrType) ToServicePerimeterStatusPtrOutput() ServicePerimeterStatusPtrOutput {
	return i.ToServicePerimeterStatusPtrOutputWithContext(context.Background())
}

func (i *servicePerimeterStatusPtrType) ToServicePerimeterStatusPtrOutputWithContext(ctx context.Context) ServicePerimeterStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePerimeterStatusPtrOutput)
}

type ServicePerimeterStatusOutput struct{ *pulumi.OutputState }

func (ServicePerimeterStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServicePerimeterStatus)(nil)).Elem()
}

func (o ServicePerimeterStatusOutput) ToServicePerimeterStatusOutput() ServicePerimeterStatusOutput {
	return o
}

func (o ServicePerimeterStatusOutput) ToServicePerimeterStatusOutputWithContext(ctx context.Context) ServicePerimeterStatusOutput {
	return o
}

func (o ServicePerimeterStatusOutput) ToServicePerimeterStatusPtrOutput() ServicePerimeterStatusPtrOutput {
	return o.ToServicePerimeterStatusPtrOutputWithContext(context.Background())
}

func (o ServicePerimeterStatusOutput) ToServicePerimeterStatusPtrOutputWithContext(ctx context.Context) ServicePerimeterStatusPtrOutput {
	return o.ApplyT(func(v ServicePerimeterStatus) *ServicePerimeterStatus {
		return &v
	}).(ServicePerimeterStatusPtrOutput)
}

// A list of AccessLevel resource names that allow resources within
// the ServicePerimeter to be accessed from the internet.
// AccessLevels listed must be in the same policy as this
// ServicePerimeter. Referencing a nonexistent AccessLevel is a
// syntax error. If no AccessLevel names are listed, resources within
// the perimeter can only be accessed via GCP calls with request
// origins within the perimeter. For Service Perimeter Bridge, must
// be empty.
// Format: accessPolicies/{policy_id}/accessLevels/{access_level_name}
func (o ServicePerimeterStatusOutput) AccessLevels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServicePerimeterStatus) []string { return v.AccessLevels }).(pulumi.StringArrayOutput)
}

// A list of GCP resources that are inside of the service perimeter.
// Currently only projects are allowed.
// Format: projects/{project_number}
func (o ServicePerimeterStatusOutput) Resources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServicePerimeterStatus) []string { return v.Resources }).(pulumi.StringArrayOutput)
}

// GCP services that are subject to the Service Perimeter
// restrictions. Must contain a list of services. For example, if
// `storage.googleapis.com` is specified, access to the storage
// buckets inside the perimeter must meet the perimeter's access
// restrictions.
func (o ServicePerimeterStatusOutput) RestrictedServices() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServicePerimeterStatus) []string { return v.RestrictedServices }).(pulumi.StringArrayOutput)
}

// Specifies how APIs are allowed to communicate within the Service
// Perimeter.  Structure is documented below.
func (o ServicePerimeterStatusOutput) VpcAccessibleServices() ServicePerimeterStatusVpcAccessibleServicesPtrOutput {
	return o.ApplyT(func(v ServicePerimeterStatus) *ServicePerimeterStatusVpcAccessibleServices {
		return v.VpcAccessibleServices
	}).(ServicePerimeterStatusVpcAccessibleServicesPtrOutput)
}

type ServicePerimeterStatusPtrOutput struct{ *pulumi.OutputState }

func (ServicePerimeterStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServicePerimeterStatus)(nil)).Elem()
}

func (o ServicePerimeterStatusPtrOutput) ToServicePerimeterStatusPtrOutput() ServicePerimeterStatusPtrOutput {
	return o
}

func (o ServicePerimeterStatusPtrOutput) ToServicePerimeterStatusPtrOutputWithContext(ctx context.Context) ServicePerimeterStatusPtrOutput {
	return o
}

func (o ServicePerimeterStatusPtrOutput) Elem() ServicePerimeterStatusOutput {
	return o.ApplyT(func(v *ServicePerimeterStatus) ServicePerimeterStatus { return *v }).(ServicePerimeterStatusOutput)
}

// A list of AccessLevel resource names that allow resources within
// the ServicePerimeter to be accessed from the internet.
// AccessLevels listed must be in the same policy as this
// ServicePerimeter. Referencing a nonexistent AccessLevel is a
// syntax error. If no AccessLevel names are listed, resources within
// the perimeter can only be accessed via GCP calls with request
// origins within the perimeter. For Service Perimeter Bridge, must
// be empty.
// Format: accessPolicies/{policy_id}/accessLevels/{access_level_name}
func (o ServicePerimeterStatusPtrOutput) AccessLevels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServicePerimeterStatus) []string {
		if v == nil {
			return nil
		}
		return v.AccessLevels
	}).(pulumi.StringArrayOutput)
}

// A list of GCP resources that are inside of the service perimeter.
// Currently only projects are allowed.
// Format: projects/{project_number}
func (o ServicePerimeterStatusPtrOutput) Resources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServicePerimeterStatus) []string {
		if v == nil {
			return nil
		}
		return v.Resources
	}).(pulumi.StringArrayOutput)
}

// GCP services that are subject to the Service Perimeter
// restrictions. Must contain a list of services. For example, if
// `storage.googleapis.com` is specified, access to the storage
// buckets inside the perimeter must meet the perimeter's access
// restrictions.
func (o ServicePerimeterStatusPtrOutput) RestrictedServices() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServicePerimeterStatus) []string {
		if v == nil {
			return nil
		}
		return v.RestrictedServices
	}).(pulumi.StringArrayOutput)
}

// Specifies how APIs are allowed to communicate within the Service
// Perimeter.  Structure is documented below.
func (o ServicePerimeterStatusPtrOutput) VpcAccessibleServices() ServicePerimeterStatusVpcAccessibleServicesPtrOutput {
	return o.ApplyT(func(v *ServicePerimeterStatus) *ServicePerimeterStatusVpcAccessibleServices {
		if v == nil {
			return nil
		}
		return v.VpcAccessibleServices
	}).(ServicePerimeterStatusVpcAccessibleServicesPtrOutput)
}

type ServicePerimeterStatusVpcAccessibleServices struct {
	// The list of APIs usable within the Service Perimeter.
	// Must be empty unless `enableRestriction` is True.
	AllowedServices []string `pulumi:"allowedServices"`
	// Whether to restrict API calls within the Service Perimeter to the
	// list of APIs specified in 'allowedServices'.
	EnableRestriction *bool `pulumi:"enableRestriction"`
}

// ServicePerimeterStatusVpcAccessibleServicesInput is an input type that accepts ServicePerimeterStatusVpcAccessibleServicesArgs and ServicePerimeterStatusVpcAccessibleServicesOutput values.
// You can construct a concrete instance of `ServicePerimeterStatusVpcAccessibleServicesInput` via:
//
// 		 ServicePerimeterStatusVpcAccessibleServicesArgs{...}
//
type ServicePerimeterStatusVpcAccessibleServicesInput interface {
	pulumi.Input

	ToServicePerimeterStatusVpcAccessibleServicesOutput() ServicePerimeterStatusVpcAccessibleServicesOutput
	ToServicePerimeterStatusVpcAccessibleServicesOutputWithContext(context.Context) ServicePerimeterStatusVpcAccessibleServicesOutput
}

type ServicePerimeterStatusVpcAccessibleServicesArgs struct {
	// The list of APIs usable within the Service Perimeter.
	// Must be empty unless `enableRestriction` is True.
	AllowedServices pulumi.StringArrayInput `pulumi:"allowedServices"`
	// Whether to restrict API calls within the Service Perimeter to the
	// list of APIs specified in 'allowedServices'.
	EnableRestriction pulumi.BoolPtrInput `pulumi:"enableRestriction"`
}

func (ServicePerimeterStatusVpcAccessibleServicesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServicePerimeterStatusVpcAccessibleServices)(nil)).Elem()
}

func (i ServicePerimeterStatusVpcAccessibleServicesArgs) ToServicePerimeterStatusVpcAccessibleServicesOutput() ServicePerimeterStatusVpcAccessibleServicesOutput {
	return i.ToServicePerimeterStatusVpcAccessibleServicesOutputWithContext(context.Background())
}

func (i ServicePerimeterStatusVpcAccessibleServicesArgs) ToServicePerimeterStatusVpcAccessibleServicesOutputWithContext(ctx context.Context) ServicePerimeterStatusVpcAccessibleServicesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePerimeterStatusVpcAccessibleServicesOutput)
}

func (i ServicePerimeterStatusVpcAccessibleServicesArgs) ToServicePerimeterStatusVpcAccessibleServicesPtrOutput() ServicePerimeterStatusVpcAccessibleServicesPtrOutput {
	return i.ToServicePerimeterStatusVpcAccessibleServicesPtrOutputWithContext(context.Background())
}

func (i ServicePerimeterStatusVpcAccessibleServicesArgs) ToServicePerimeterStatusVpcAccessibleServicesPtrOutputWithContext(ctx context.Context) ServicePerimeterStatusVpcAccessibleServicesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePerimeterStatusVpcAccessibleServicesOutput).ToServicePerimeterStatusVpcAccessibleServicesPtrOutputWithContext(ctx)
}

// ServicePerimeterStatusVpcAccessibleServicesPtrInput is an input type that accepts ServicePerimeterStatusVpcAccessibleServicesArgs, ServicePerimeterStatusVpcAccessibleServicesPtr and ServicePerimeterStatusVpcAccessibleServicesPtrOutput values.
// You can construct a concrete instance of `ServicePerimeterStatusVpcAccessibleServicesPtrInput` via:
//
// 		 ServicePerimeterStatusVpcAccessibleServicesArgs{...}
//
//  or:
//
// 		 nil
//
type ServicePerimeterStatusVpcAccessibleServicesPtrInput interface {
	pulumi.Input

	ToServicePerimeterStatusVpcAccessibleServicesPtrOutput() ServicePerimeterStatusVpcAccessibleServicesPtrOutput
	ToServicePerimeterStatusVpcAccessibleServicesPtrOutputWithContext(context.Context) ServicePerimeterStatusVpcAccessibleServicesPtrOutput
}

type servicePerimeterStatusVpcAccessibleServicesPtrType ServicePerimeterStatusVpcAccessibleServicesArgs

func ServicePerimeterStatusVpcAccessibleServicesPtr(v *ServicePerimeterStatusVpcAccessibleServicesArgs) ServicePerimeterStatusVpcAccessibleServicesPtrInput {
	return (*servicePerimeterStatusVpcAccessibleServicesPtrType)(v)
}

func (*servicePerimeterStatusVpcAccessibleServicesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServicePerimeterStatusVpcAccessibleServices)(nil)).Elem()
}

func (i *servicePerimeterStatusVpcAccessibleServicesPtrType) ToServicePerimeterStatusVpcAccessibleServicesPtrOutput() ServicePerimeterStatusVpcAccessibleServicesPtrOutput {
	return i.ToServicePerimeterStatusVpcAccessibleServicesPtrOutputWithContext(context.Background())
}

func (i *servicePerimeterStatusVpcAccessibleServicesPtrType) ToServicePerimeterStatusVpcAccessibleServicesPtrOutputWithContext(ctx context.Context) ServicePerimeterStatusVpcAccessibleServicesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePerimeterStatusVpcAccessibleServicesPtrOutput)
}

type ServicePerimeterStatusVpcAccessibleServicesOutput struct{ *pulumi.OutputState }

func (ServicePerimeterStatusVpcAccessibleServicesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServicePerimeterStatusVpcAccessibleServices)(nil)).Elem()
}

func (o ServicePerimeterStatusVpcAccessibleServicesOutput) ToServicePerimeterStatusVpcAccessibleServicesOutput() ServicePerimeterStatusVpcAccessibleServicesOutput {
	return o
}

func (o ServicePerimeterStatusVpcAccessibleServicesOutput) ToServicePerimeterStatusVpcAccessibleServicesOutputWithContext(ctx context.Context) ServicePerimeterStatusVpcAccessibleServicesOutput {
	return o
}

func (o ServicePerimeterStatusVpcAccessibleServicesOutput) ToServicePerimeterStatusVpcAccessibleServicesPtrOutput() ServicePerimeterStatusVpcAccessibleServicesPtrOutput {
	return o.ToServicePerimeterStatusVpcAccessibleServicesPtrOutputWithContext(context.Background())
}

func (o ServicePerimeterStatusVpcAccessibleServicesOutput) ToServicePerimeterStatusVpcAccessibleServicesPtrOutputWithContext(ctx context.Context) ServicePerimeterStatusVpcAccessibleServicesPtrOutput {
	return o.ApplyT(func(v ServicePerimeterStatusVpcAccessibleServices) *ServicePerimeterStatusVpcAccessibleServices {
		return &v
	}).(ServicePerimeterStatusVpcAccessibleServicesPtrOutput)
}

// The list of APIs usable within the Service Perimeter.
// Must be empty unless `enableRestriction` is True.
func (o ServicePerimeterStatusVpcAccessibleServicesOutput) AllowedServices() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServicePerimeterStatusVpcAccessibleServices) []string { return v.AllowedServices }).(pulumi.StringArrayOutput)
}

// Whether to restrict API calls within the Service Perimeter to the
// list of APIs specified in 'allowedServices'.
func (o ServicePerimeterStatusVpcAccessibleServicesOutput) EnableRestriction() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServicePerimeterStatusVpcAccessibleServices) *bool { return v.EnableRestriction }).(pulumi.BoolPtrOutput)
}

type ServicePerimeterStatusVpcAccessibleServicesPtrOutput struct{ *pulumi.OutputState }

func (ServicePerimeterStatusVpcAccessibleServicesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServicePerimeterStatusVpcAccessibleServices)(nil)).Elem()
}

func (o ServicePerimeterStatusVpcAccessibleServicesPtrOutput) ToServicePerimeterStatusVpcAccessibleServicesPtrOutput() ServicePerimeterStatusVpcAccessibleServicesPtrOutput {
	return o
}

func (o ServicePerimeterStatusVpcAccessibleServicesPtrOutput) ToServicePerimeterStatusVpcAccessibleServicesPtrOutputWithContext(ctx context.Context) ServicePerimeterStatusVpcAccessibleServicesPtrOutput {
	return o
}

func (o ServicePerimeterStatusVpcAccessibleServicesPtrOutput) Elem() ServicePerimeterStatusVpcAccessibleServicesOutput {
	return o.ApplyT(func(v *ServicePerimeterStatusVpcAccessibleServices) ServicePerimeterStatusVpcAccessibleServices {
		return *v
	}).(ServicePerimeterStatusVpcAccessibleServicesOutput)
}

// The list of APIs usable within the Service Perimeter.
// Must be empty unless `enableRestriction` is True.
func (o ServicePerimeterStatusVpcAccessibleServicesPtrOutput) AllowedServices() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServicePerimeterStatusVpcAccessibleServices) []string {
		if v == nil {
			return nil
		}
		return v.AllowedServices
	}).(pulumi.StringArrayOutput)
}

// Whether to restrict API calls within the Service Perimeter to the
// list of APIs specified in 'allowedServices'.
func (o ServicePerimeterStatusVpcAccessibleServicesPtrOutput) EnableRestriction() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServicePerimeterStatusVpcAccessibleServices) *bool {
		if v == nil {
			return nil
		}
		return v.EnableRestriction
	}).(pulumi.BoolPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AccessLevelBasicOutput{})
	pulumi.RegisterOutputType(AccessLevelBasicPtrOutput{})
	pulumi.RegisterOutputType(AccessLevelBasicConditionOutput{})
	pulumi.RegisterOutputType(AccessLevelBasicConditionArrayOutput{})
	pulumi.RegisterOutputType(AccessLevelBasicConditionDevicePolicyOutput{})
	pulumi.RegisterOutputType(AccessLevelBasicConditionDevicePolicyPtrOutput{})
	pulumi.RegisterOutputType(AccessLevelBasicConditionDevicePolicyOsConstraintOutput{})
	pulumi.RegisterOutputType(AccessLevelBasicConditionDevicePolicyOsConstraintArrayOutput{})
	pulumi.RegisterOutputType(ServicePerimeterSpecOutput{})
	pulumi.RegisterOutputType(ServicePerimeterSpecPtrOutput{})
	pulumi.RegisterOutputType(ServicePerimeterSpecVpcAccessibleServicesOutput{})
	pulumi.RegisterOutputType(ServicePerimeterSpecVpcAccessibleServicesPtrOutput{})
	pulumi.RegisterOutputType(ServicePerimeterStatusOutput{})
	pulumi.RegisterOutputType(ServicePerimeterStatusPtrOutput{})
	pulumi.RegisterOutputType(ServicePerimeterStatusVpcAccessibleServicesOutput{})
	pulumi.RegisterOutputType(ServicePerimeterStatusVpcAccessibleServicesPtrOutput{})
}
