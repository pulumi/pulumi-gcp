// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package bigqueryanalyticshub

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Retrieves the current IAM policy data for dataexchange
//
// ## example
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/bigqueryanalyticshub"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := bigqueryanalyticshub.LookupDataExchangeIamPolicy(ctx, &bigqueryanalyticshub.LookupDataExchangeIamPolicyArgs{
//				Project:        pulumi.StringRef(google_bigquery_analytics_hub_data_exchange.Data_exchange.Project),
//				Location:       pulumi.StringRef(google_bigquery_analytics_hub_data_exchange.Data_exchange.Location),
//				DataExchangeId: google_bigquery_analytics_hub_data_exchange.Data_exchange.Data_exchange_id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupDataExchangeIamPolicy(ctx *pulumi.Context, args *LookupDataExchangeIamPolicyArgs, opts ...pulumi.InvokeOption) (*LookupDataExchangeIamPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDataExchangeIamPolicyResult
	err := ctx.Invoke("gcp:bigqueryanalyticshub/getDataExchangeIamPolicy:getDataExchangeIamPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDataExchangeIamPolicy.
type LookupDataExchangeIamPolicyArgs struct {
	// The ID of the data exchange. Must contain only Unicode letters, numbers (0-9), underscores (_). Should not use characters that require URL-escaping, or characters outside of ASCII, spaces. Used to find the parent resource to bind the IAM policy to
	DataExchangeId string `pulumi:"dataExchangeId"`
	// The name of the location this data exchange.
	// Used to find the parent resource to bind the IAM policy to
	Location *string `pulumi:"location"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project *string `pulumi:"project"`
}

// A collection of values returned by getDataExchangeIamPolicy.
type LookupDataExchangeIamPolicyResult struct {
	DataExchangeId string `pulumi:"dataExchangeId"`
	// (Computed) The etag of the IAM policy.
	Etag string `pulumi:"etag"`
	// The provider-assigned unique ID for this managed resource.
	Id       string `pulumi:"id"`
	Location string `pulumi:"location"`
	// (Required only by `bigqueryanalyticshub.DataExchangeIamPolicy`) The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData string `pulumi:"policyData"`
	Project    string `pulumi:"project"`
}

func LookupDataExchangeIamPolicyOutput(ctx *pulumi.Context, args LookupDataExchangeIamPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupDataExchangeIamPolicyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDataExchangeIamPolicyResult, error) {
			args := v.(LookupDataExchangeIamPolicyArgs)
			r, err := LookupDataExchangeIamPolicy(ctx, &args, opts...)
			var s LookupDataExchangeIamPolicyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDataExchangeIamPolicyResultOutput)
}

// A collection of arguments for invoking getDataExchangeIamPolicy.
type LookupDataExchangeIamPolicyOutputArgs struct {
	// The ID of the data exchange. Must contain only Unicode letters, numbers (0-9), underscores (_). Should not use characters that require URL-escaping, or characters outside of ASCII, spaces. Used to find the parent resource to bind the IAM policy to
	DataExchangeId pulumi.StringInput `pulumi:"dataExchangeId"`
	// The name of the location this data exchange.
	// Used to find the parent resource to bind the IAM policy to
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupDataExchangeIamPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDataExchangeIamPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getDataExchangeIamPolicy.
type LookupDataExchangeIamPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupDataExchangeIamPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDataExchangeIamPolicyResult)(nil)).Elem()
}

func (o LookupDataExchangeIamPolicyResultOutput) ToLookupDataExchangeIamPolicyResultOutput() LookupDataExchangeIamPolicyResultOutput {
	return o
}

func (o LookupDataExchangeIamPolicyResultOutput) ToLookupDataExchangeIamPolicyResultOutputWithContext(ctx context.Context) LookupDataExchangeIamPolicyResultOutput {
	return o
}

func (o LookupDataExchangeIamPolicyResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupDataExchangeIamPolicyResult] {
	return pulumix.Output[LookupDataExchangeIamPolicyResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupDataExchangeIamPolicyResultOutput) DataExchangeId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDataExchangeIamPolicyResult) string { return v.DataExchangeId }).(pulumi.StringOutput)
}

// (Computed) The etag of the IAM policy.
func (o LookupDataExchangeIamPolicyResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDataExchangeIamPolicyResult) string { return v.Etag }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupDataExchangeIamPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDataExchangeIamPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupDataExchangeIamPolicyResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDataExchangeIamPolicyResult) string { return v.Location }).(pulumi.StringOutput)
}

// (Required only by `bigqueryanalyticshub.DataExchangeIamPolicy`) The policy data generated by
// a `organizations.getIAMPolicy` data source.
func (o LookupDataExchangeIamPolicyResultOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDataExchangeIamPolicyResult) string { return v.PolicyData }).(pulumi.StringOutput)
}

func (o LookupDataExchangeIamPolicyResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDataExchangeIamPolicyResult) string { return v.Project }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDataExchangeIamPolicyResultOutput{})
}
