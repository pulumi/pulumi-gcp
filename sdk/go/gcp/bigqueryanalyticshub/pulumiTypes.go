// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package bigqueryanalyticshub

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type DataExchangeIamBindingCondition struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

// DataExchangeIamBindingConditionInput is an input type that accepts DataExchangeIamBindingConditionArgs and DataExchangeIamBindingConditionOutput values.
// You can construct a concrete instance of `DataExchangeIamBindingConditionInput` via:
//
//	DataExchangeIamBindingConditionArgs{...}
type DataExchangeIamBindingConditionInput interface {
	pulumi.Input

	ToDataExchangeIamBindingConditionOutput() DataExchangeIamBindingConditionOutput
	ToDataExchangeIamBindingConditionOutputWithContext(context.Context) DataExchangeIamBindingConditionOutput
}

type DataExchangeIamBindingConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (DataExchangeIamBindingConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataExchangeIamBindingCondition)(nil)).Elem()
}

func (i DataExchangeIamBindingConditionArgs) ToDataExchangeIamBindingConditionOutput() DataExchangeIamBindingConditionOutput {
	return i.ToDataExchangeIamBindingConditionOutputWithContext(context.Background())
}

func (i DataExchangeIamBindingConditionArgs) ToDataExchangeIamBindingConditionOutputWithContext(ctx context.Context) DataExchangeIamBindingConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataExchangeIamBindingConditionOutput)
}

func (i DataExchangeIamBindingConditionArgs) ToDataExchangeIamBindingConditionPtrOutput() DataExchangeIamBindingConditionPtrOutput {
	return i.ToDataExchangeIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i DataExchangeIamBindingConditionArgs) ToDataExchangeIamBindingConditionPtrOutputWithContext(ctx context.Context) DataExchangeIamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataExchangeIamBindingConditionOutput).ToDataExchangeIamBindingConditionPtrOutputWithContext(ctx)
}

// DataExchangeIamBindingConditionPtrInput is an input type that accepts DataExchangeIamBindingConditionArgs, DataExchangeIamBindingConditionPtr and DataExchangeIamBindingConditionPtrOutput values.
// You can construct a concrete instance of `DataExchangeIamBindingConditionPtrInput` via:
//
//	        DataExchangeIamBindingConditionArgs{...}
//
//	or:
//
//	        nil
type DataExchangeIamBindingConditionPtrInput interface {
	pulumi.Input

	ToDataExchangeIamBindingConditionPtrOutput() DataExchangeIamBindingConditionPtrOutput
	ToDataExchangeIamBindingConditionPtrOutputWithContext(context.Context) DataExchangeIamBindingConditionPtrOutput
}

type dataExchangeIamBindingConditionPtrType DataExchangeIamBindingConditionArgs

func DataExchangeIamBindingConditionPtr(v *DataExchangeIamBindingConditionArgs) DataExchangeIamBindingConditionPtrInput {
	return (*dataExchangeIamBindingConditionPtrType)(v)
}

func (*dataExchangeIamBindingConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataExchangeIamBindingCondition)(nil)).Elem()
}

func (i *dataExchangeIamBindingConditionPtrType) ToDataExchangeIamBindingConditionPtrOutput() DataExchangeIamBindingConditionPtrOutput {
	return i.ToDataExchangeIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i *dataExchangeIamBindingConditionPtrType) ToDataExchangeIamBindingConditionPtrOutputWithContext(ctx context.Context) DataExchangeIamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataExchangeIamBindingConditionPtrOutput)
}

type DataExchangeIamBindingConditionOutput struct{ *pulumi.OutputState }

func (DataExchangeIamBindingConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataExchangeIamBindingCondition)(nil)).Elem()
}

func (o DataExchangeIamBindingConditionOutput) ToDataExchangeIamBindingConditionOutput() DataExchangeIamBindingConditionOutput {
	return o
}

func (o DataExchangeIamBindingConditionOutput) ToDataExchangeIamBindingConditionOutputWithContext(ctx context.Context) DataExchangeIamBindingConditionOutput {
	return o
}

func (o DataExchangeIamBindingConditionOutput) ToDataExchangeIamBindingConditionPtrOutput() DataExchangeIamBindingConditionPtrOutput {
	return o.ToDataExchangeIamBindingConditionPtrOutputWithContext(context.Background())
}

func (o DataExchangeIamBindingConditionOutput) ToDataExchangeIamBindingConditionPtrOutputWithContext(ctx context.Context) DataExchangeIamBindingConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataExchangeIamBindingCondition) *DataExchangeIamBindingCondition {
		return &v
	}).(DataExchangeIamBindingConditionPtrOutput)
}

func (o DataExchangeIamBindingConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataExchangeIamBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o DataExchangeIamBindingConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v DataExchangeIamBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o DataExchangeIamBindingConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v DataExchangeIamBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

type DataExchangeIamBindingConditionPtrOutput struct{ *pulumi.OutputState }

func (DataExchangeIamBindingConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataExchangeIamBindingCondition)(nil)).Elem()
}

func (o DataExchangeIamBindingConditionPtrOutput) ToDataExchangeIamBindingConditionPtrOutput() DataExchangeIamBindingConditionPtrOutput {
	return o
}

func (o DataExchangeIamBindingConditionPtrOutput) ToDataExchangeIamBindingConditionPtrOutputWithContext(ctx context.Context) DataExchangeIamBindingConditionPtrOutput {
	return o
}

func (o DataExchangeIamBindingConditionPtrOutput) Elem() DataExchangeIamBindingConditionOutput {
	return o.ApplyT(func(v *DataExchangeIamBindingCondition) DataExchangeIamBindingCondition {
		if v != nil {
			return *v
		}
		var ret DataExchangeIamBindingCondition
		return ret
	}).(DataExchangeIamBindingConditionOutput)
}

func (o DataExchangeIamBindingConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataExchangeIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o DataExchangeIamBindingConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataExchangeIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

func (o DataExchangeIamBindingConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataExchangeIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type DataExchangeIamMemberCondition struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

// DataExchangeIamMemberConditionInput is an input type that accepts DataExchangeIamMemberConditionArgs and DataExchangeIamMemberConditionOutput values.
// You can construct a concrete instance of `DataExchangeIamMemberConditionInput` via:
//
//	DataExchangeIamMemberConditionArgs{...}
type DataExchangeIamMemberConditionInput interface {
	pulumi.Input

	ToDataExchangeIamMemberConditionOutput() DataExchangeIamMemberConditionOutput
	ToDataExchangeIamMemberConditionOutputWithContext(context.Context) DataExchangeIamMemberConditionOutput
}

type DataExchangeIamMemberConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (DataExchangeIamMemberConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataExchangeIamMemberCondition)(nil)).Elem()
}

func (i DataExchangeIamMemberConditionArgs) ToDataExchangeIamMemberConditionOutput() DataExchangeIamMemberConditionOutput {
	return i.ToDataExchangeIamMemberConditionOutputWithContext(context.Background())
}

func (i DataExchangeIamMemberConditionArgs) ToDataExchangeIamMemberConditionOutputWithContext(ctx context.Context) DataExchangeIamMemberConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataExchangeIamMemberConditionOutput)
}

func (i DataExchangeIamMemberConditionArgs) ToDataExchangeIamMemberConditionPtrOutput() DataExchangeIamMemberConditionPtrOutput {
	return i.ToDataExchangeIamMemberConditionPtrOutputWithContext(context.Background())
}

func (i DataExchangeIamMemberConditionArgs) ToDataExchangeIamMemberConditionPtrOutputWithContext(ctx context.Context) DataExchangeIamMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataExchangeIamMemberConditionOutput).ToDataExchangeIamMemberConditionPtrOutputWithContext(ctx)
}

// DataExchangeIamMemberConditionPtrInput is an input type that accepts DataExchangeIamMemberConditionArgs, DataExchangeIamMemberConditionPtr and DataExchangeIamMemberConditionPtrOutput values.
// You can construct a concrete instance of `DataExchangeIamMemberConditionPtrInput` via:
//
//	        DataExchangeIamMemberConditionArgs{...}
//
//	or:
//
//	        nil
type DataExchangeIamMemberConditionPtrInput interface {
	pulumi.Input

	ToDataExchangeIamMemberConditionPtrOutput() DataExchangeIamMemberConditionPtrOutput
	ToDataExchangeIamMemberConditionPtrOutputWithContext(context.Context) DataExchangeIamMemberConditionPtrOutput
}

type dataExchangeIamMemberConditionPtrType DataExchangeIamMemberConditionArgs

func DataExchangeIamMemberConditionPtr(v *DataExchangeIamMemberConditionArgs) DataExchangeIamMemberConditionPtrInput {
	return (*dataExchangeIamMemberConditionPtrType)(v)
}

func (*dataExchangeIamMemberConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataExchangeIamMemberCondition)(nil)).Elem()
}

func (i *dataExchangeIamMemberConditionPtrType) ToDataExchangeIamMemberConditionPtrOutput() DataExchangeIamMemberConditionPtrOutput {
	return i.ToDataExchangeIamMemberConditionPtrOutputWithContext(context.Background())
}

func (i *dataExchangeIamMemberConditionPtrType) ToDataExchangeIamMemberConditionPtrOutputWithContext(ctx context.Context) DataExchangeIamMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataExchangeIamMemberConditionPtrOutput)
}

type DataExchangeIamMemberConditionOutput struct{ *pulumi.OutputState }

func (DataExchangeIamMemberConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataExchangeIamMemberCondition)(nil)).Elem()
}

func (o DataExchangeIamMemberConditionOutput) ToDataExchangeIamMemberConditionOutput() DataExchangeIamMemberConditionOutput {
	return o
}

func (o DataExchangeIamMemberConditionOutput) ToDataExchangeIamMemberConditionOutputWithContext(ctx context.Context) DataExchangeIamMemberConditionOutput {
	return o
}

func (o DataExchangeIamMemberConditionOutput) ToDataExchangeIamMemberConditionPtrOutput() DataExchangeIamMemberConditionPtrOutput {
	return o.ToDataExchangeIamMemberConditionPtrOutputWithContext(context.Background())
}

func (o DataExchangeIamMemberConditionOutput) ToDataExchangeIamMemberConditionPtrOutputWithContext(ctx context.Context) DataExchangeIamMemberConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataExchangeIamMemberCondition) *DataExchangeIamMemberCondition {
		return &v
	}).(DataExchangeIamMemberConditionPtrOutput)
}

func (o DataExchangeIamMemberConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataExchangeIamMemberCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o DataExchangeIamMemberConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v DataExchangeIamMemberCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o DataExchangeIamMemberConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v DataExchangeIamMemberCondition) string { return v.Title }).(pulumi.StringOutput)
}

type DataExchangeIamMemberConditionPtrOutput struct{ *pulumi.OutputState }

func (DataExchangeIamMemberConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataExchangeIamMemberCondition)(nil)).Elem()
}

func (o DataExchangeIamMemberConditionPtrOutput) ToDataExchangeIamMemberConditionPtrOutput() DataExchangeIamMemberConditionPtrOutput {
	return o
}

func (o DataExchangeIamMemberConditionPtrOutput) ToDataExchangeIamMemberConditionPtrOutputWithContext(ctx context.Context) DataExchangeIamMemberConditionPtrOutput {
	return o
}

func (o DataExchangeIamMemberConditionPtrOutput) Elem() DataExchangeIamMemberConditionOutput {
	return o.ApplyT(func(v *DataExchangeIamMemberCondition) DataExchangeIamMemberCondition {
		if v != nil {
			return *v
		}
		var ret DataExchangeIamMemberCondition
		return ret
	}).(DataExchangeIamMemberConditionOutput)
}

func (o DataExchangeIamMemberConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataExchangeIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o DataExchangeIamMemberConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataExchangeIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

func (o DataExchangeIamMemberConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataExchangeIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type DataExchangeSharingEnvironmentConfig struct {
	// Data Clean Room (DCR), used for privacy-safe and secured data sharing.
	DcrExchangeConfig *DataExchangeSharingEnvironmentConfigDcrExchangeConfig `pulumi:"dcrExchangeConfig"`
	// Default Analytics Hub data exchange, used for secured data sharing.
	DefaultExchangeConfig *DataExchangeSharingEnvironmentConfigDefaultExchangeConfig `pulumi:"defaultExchangeConfig"`
}

// DataExchangeSharingEnvironmentConfigInput is an input type that accepts DataExchangeSharingEnvironmentConfigArgs and DataExchangeSharingEnvironmentConfigOutput values.
// You can construct a concrete instance of `DataExchangeSharingEnvironmentConfigInput` via:
//
//	DataExchangeSharingEnvironmentConfigArgs{...}
type DataExchangeSharingEnvironmentConfigInput interface {
	pulumi.Input

	ToDataExchangeSharingEnvironmentConfigOutput() DataExchangeSharingEnvironmentConfigOutput
	ToDataExchangeSharingEnvironmentConfigOutputWithContext(context.Context) DataExchangeSharingEnvironmentConfigOutput
}

type DataExchangeSharingEnvironmentConfigArgs struct {
	// Data Clean Room (DCR), used for privacy-safe and secured data sharing.
	DcrExchangeConfig DataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrInput `pulumi:"dcrExchangeConfig"`
	// Default Analytics Hub data exchange, used for secured data sharing.
	DefaultExchangeConfig DataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrInput `pulumi:"defaultExchangeConfig"`
}

func (DataExchangeSharingEnvironmentConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataExchangeSharingEnvironmentConfig)(nil)).Elem()
}

func (i DataExchangeSharingEnvironmentConfigArgs) ToDataExchangeSharingEnvironmentConfigOutput() DataExchangeSharingEnvironmentConfigOutput {
	return i.ToDataExchangeSharingEnvironmentConfigOutputWithContext(context.Background())
}

func (i DataExchangeSharingEnvironmentConfigArgs) ToDataExchangeSharingEnvironmentConfigOutputWithContext(ctx context.Context) DataExchangeSharingEnvironmentConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataExchangeSharingEnvironmentConfigOutput)
}

func (i DataExchangeSharingEnvironmentConfigArgs) ToDataExchangeSharingEnvironmentConfigPtrOutput() DataExchangeSharingEnvironmentConfigPtrOutput {
	return i.ToDataExchangeSharingEnvironmentConfigPtrOutputWithContext(context.Background())
}

func (i DataExchangeSharingEnvironmentConfigArgs) ToDataExchangeSharingEnvironmentConfigPtrOutputWithContext(ctx context.Context) DataExchangeSharingEnvironmentConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataExchangeSharingEnvironmentConfigOutput).ToDataExchangeSharingEnvironmentConfigPtrOutputWithContext(ctx)
}

// DataExchangeSharingEnvironmentConfigPtrInput is an input type that accepts DataExchangeSharingEnvironmentConfigArgs, DataExchangeSharingEnvironmentConfigPtr and DataExchangeSharingEnvironmentConfigPtrOutput values.
// You can construct a concrete instance of `DataExchangeSharingEnvironmentConfigPtrInput` via:
//
//	        DataExchangeSharingEnvironmentConfigArgs{...}
//
//	or:
//
//	        nil
type DataExchangeSharingEnvironmentConfigPtrInput interface {
	pulumi.Input

	ToDataExchangeSharingEnvironmentConfigPtrOutput() DataExchangeSharingEnvironmentConfigPtrOutput
	ToDataExchangeSharingEnvironmentConfigPtrOutputWithContext(context.Context) DataExchangeSharingEnvironmentConfigPtrOutput
}

type dataExchangeSharingEnvironmentConfigPtrType DataExchangeSharingEnvironmentConfigArgs

func DataExchangeSharingEnvironmentConfigPtr(v *DataExchangeSharingEnvironmentConfigArgs) DataExchangeSharingEnvironmentConfigPtrInput {
	return (*dataExchangeSharingEnvironmentConfigPtrType)(v)
}

func (*dataExchangeSharingEnvironmentConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataExchangeSharingEnvironmentConfig)(nil)).Elem()
}

func (i *dataExchangeSharingEnvironmentConfigPtrType) ToDataExchangeSharingEnvironmentConfigPtrOutput() DataExchangeSharingEnvironmentConfigPtrOutput {
	return i.ToDataExchangeSharingEnvironmentConfigPtrOutputWithContext(context.Background())
}

func (i *dataExchangeSharingEnvironmentConfigPtrType) ToDataExchangeSharingEnvironmentConfigPtrOutputWithContext(ctx context.Context) DataExchangeSharingEnvironmentConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataExchangeSharingEnvironmentConfigPtrOutput)
}

type DataExchangeSharingEnvironmentConfigOutput struct{ *pulumi.OutputState }

func (DataExchangeSharingEnvironmentConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataExchangeSharingEnvironmentConfig)(nil)).Elem()
}

func (o DataExchangeSharingEnvironmentConfigOutput) ToDataExchangeSharingEnvironmentConfigOutput() DataExchangeSharingEnvironmentConfigOutput {
	return o
}

func (o DataExchangeSharingEnvironmentConfigOutput) ToDataExchangeSharingEnvironmentConfigOutputWithContext(ctx context.Context) DataExchangeSharingEnvironmentConfigOutput {
	return o
}

func (o DataExchangeSharingEnvironmentConfigOutput) ToDataExchangeSharingEnvironmentConfigPtrOutput() DataExchangeSharingEnvironmentConfigPtrOutput {
	return o.ToDataExchangeSharingEnvironmentConfigPtrOutputWithContext(context.Background())
}

func (o DataExchangeSharingEnvironmentConfigOutput) ToDataExchangeSharingEnvironmentConfigPtrOutputWithContext(ctx context.Context) DataExchangeSharingEnvironmentConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataExchangeSharingEnvironmentConfig) *DataExchangeSharingEnvironmentConfig {
		return &v
	}).(DataExchangeSharingEnvironmentConfigPtrOutput)
}

// Data Clean Room (DCR), used for privacy-safe and secured data sharing.
func (o DataExchangeSharingEnvironmentConfigOutput) DcrExchangeConfig() DataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrOutput {
	return o.ApplyT(func(v DataExchangeSharingEnvironmentConfig) *DataExchangeSharingEnvironmentConfigDcrExchangeConfig {
		return v.DcrExchangeConfig
	}).(DataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrOutput)
}

// Default Analytics Hub data exchange, used for secured data sharing.
func (o DataExchangeSharingEnvironmentConfigOutput) DefaultExchangeConfig() DataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrOutput {
	return o.ApplyT(func(v DataExchangeSharingEnvironmentConfig) *DataExchangeSharingEnvironmentConfigDefaultExchangeConfig {
		return v.DefaultExchangeConfig
	}).(DataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrOutput)
}

type DataExchangeSharingEnvironmentConfigPtrOutput struct{ *pulumi.OutputState }

func (DataExchangeSharingEnvironmentConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataExchangeSharingEnvironmentConfig)(nil)).Elem()
}

func (o DataExchangeSharingEnvironmentConfigPtrOutput) ToDataExchangeSharingEnvironmentConfigPtrOutput() DataExchangeSharingEnvironmentConfigPtrOutput {
	return o
}

func (o DataExchangeSharingEnvironmentConfigPtrOutput) ToDataExchangeSharingEnvironmentConfigPtrOutputWithContext(ctx context.Context) DataExchangeSharingEnvironmentConfigPtrOutput {
	return o
}

func (o DataExchangeSharingEnvironmentConfigPtrOutput) Elem() DataExchangeSharingEnvironmentConfigOutput {
	return o.ApplyT(func(v *DataExchangeSharingEnvironmentConfig) DataExchangeSharingEnvironmentConfig {
		if v != nil {
			return *v
		}
		var ret DataExchangeSharingEnvironmentConfig
		return ret
	}).(DataExchangeSharingEnvironmentConfigOutput)
}

// Data Clean Room (DCR), used for privacy-safe and secured data sharing.
func (o DataExchangeSharingEnvironmentConfigPtrOutput) DcrExchangeConfig() DataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrOutput {
	return o.ApplyT(func(v *DataExchangeSharingEnvironmentConfig) *DataExchangeSharingEnvironmentConfigDcrExchangeConfig {
		if v == nil {
			return nil
		}
		return v.DcrExchangeConfig
	}).(DataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrOutput)
}

// Default Analytics Hub data exchange, used for secured data sharing.
func (o DataExchangeSharingEnvironmentConfigPtrOutput) DefaultExchangeConfig() DataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrOutput {
	return o.ApplyT(func(v *DataExchangeSharingEnvironmentConfig) *DataExchangeSharingEnvironmentConfigDefaultExchangeConfig {
		if v == nil {
			return nil
		}
		return v.DefaultExchangeConfig
	}).(DataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrOutput)
}

type DataExchangeSharingEnvironmentConfigDcrExchangeConfig struct {
}

// DataExchangeSharingEnvironmentConfigDcrExchangeConfigInput is an input type that accepts DataExchangeSharingEnvironmentConfigDcrExchangeConfigArgs and DataExchangeSharingEnvironmentConfigDcrExchangeConfigOutput values.
// You can construct a concrete instance of `DataExchangeSharingEnvironmentConfigDcrExchangeConfigInput` via:
//
//	DataExchangeSharingEnvironmentConfigDcrExchangeConfigArgs{...}
type DataExchangeSharingEnvironmentConfigDcrExchangeConfigInput interface {
	pulumi.Input

	ToDataExchangeSharingEnvironmentConfigDcrExchangeConfigOutput() DataExchangeSharingEnvironmentConfigDcrExchangeConfigOutput
	ToDataExchangeSharingEnvironmentConfigDcrExchangeConfigOutputWithContext(context.Context) DataExchangeSharingEnvironmentConfigDcrExchangeConfigOutput
}

type DataExchangeSharingEnvironmentConfigDcrExchangeConfigArgs struct {
}

func (DataExchangeSharingEnvironmentConfigDcrExchangeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataExchangeSharingEnvironmentConfigDcrExchangeConfig)(nil)).Elem()
}

func (i DataExchangeSharingEnvironmentConfigDcrExchangeConfigArgs) ToDataExchangeSharingEnvironmentConfigDcrExchangeConfigOutput() DataExchangeSharingEnvironmentConfigDcrExchangeConfigOutput {
	return i.ToDataExchangeSharingEnvironmentConfigDcrExchangeConfigOutputWithContext(context.Background())
}

func (i DataExchangeSharingEnvironmentConfigDcrExchangeConfigArgs) ToDataExchangeSharingEnvironmentConfigDcrExchangeConfigOutputWithContext(ctx context.Context) DataExchangeSharingEnvironmentConfigDcrExchangeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataExchangeSharingEnvironmentConfigDcrExchangeConfigOutput)
}

func (i DataExchangeSharingEnvironmentConfigDcrExchangeConfigArgs) ToDataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrOutput() DataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrOutput {
	return i.ToDataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrOutputWithContext(context.Background())
}

func (i DataExchangeSharingEnvironmentConfigDcrExchangeConfigArgs) ToDataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrOutputWithContext(ctx context.Context) DataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataExchangeSharingEnvironmentConfigDcrExchangeConfigOutput).ToDataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrOutputWithContext(ctx)
}

// DataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrInput is an input type that accepts DataExchangeSharingEnvironmentConfigDcrExchangeConfigArgs, DataExchangeSharingEnvironmentConfigDcrExchangeConfigPtr and DataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrOutput values.
// You can construct a concrete instance of `DataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrInput` via:
//
//	        DataExchangeSharingEnvironmentConfigDcrExchangeConfigArgs{...}
//
//	or:
//
//	        nil
type DataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrInput interface {
	pulumi.Input

	ToDataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrOutput() DataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrOutput
	ToDataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrOutputWithContext(context.Context) DataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrOutput
}

type dataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrType DataExchangeSharingEnvironmentConfigDcrExchangeConfigArgs

func DataExchangeSharingEnvironmentConfigDcrExchangeConfigPtr(v *DataExchangeSharingEnvironmentConfigDcrExchangeConfigArgs) DataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrInput {
	return (*dataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrType)(v)
}

func (*dataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataExchangeSharingEnvironmentConfigDcrExchangeConfig)(nil)).Elem()
}

func (i *dataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrType) ToDataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrOutput() DataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrOutput {
	return i.ToDataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrOutputWithContext(context.Background())
}

func (i *dataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrType) ToDataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrOutputWithContext(ctx context.Context) DataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrOutput)
}

type DataExchangeSharingEnvironmentConfigDcrExchangeConfigOutput struct{ *pulumi.OutputState }

func (DataExchangeSharingEnvironmentConfigDcrExchangeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataExchangeSharingEnvironmentConfigDcrExchangeConfig)(nil)).Elem()
}

func (o DataExchangeSharingEnvironmentConfigDcrExchangeConfigOutput) ToDataExchangeSharingEnvironmentConfigDcrExchangeConfigOutput() DataExchangeSharingEnvironmentConfigDcrExchangeConfigOutput {
	return o
}

func (o DataExchangeSharingEnvironmentConfigDcrExchangeConfigOutput) ToDataExchangeSharingEnvironmentConfigDcrExchangeConfigOutputWithContext(ctx context.Context) DataExchangeSharingEnvironmentConfigDcrExchangeConfigOutput {
	return o
}

func (o DataExchangeSharingEnvironmentConfigDcrExchangeConfigOutput) ToDataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrOutput() DataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrOutput {
	return o.ToDataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrOutputWithContext(context.Background())
}

func (o DataExchangeSharingEnvironmentConfigDcrExchangeConfigOutput) ToDataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrOutputWithContext(ctx context.Context) DataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataExchangeSharingEnvironmentConfigDcrExchangeConfig) *DataExchangeSharingEnvironmentConfigDcrExchangeConfig {
		return &v
	}).(DataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrOutput)
}

type DataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrOutput struct{ *pulumi.OutputState }

func (DataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataExchangeSharingEnvironmentConfigDcrExchangeConfig)(nil)).Elem()
}

func (o DataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrOutput) ToDataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrOutput() DataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrOutput {
	return o
}

func (o DataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrOutput) ToDataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrOutputWithContext(ctx context.Context) DataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrOutput {
	return o
}

func (o DataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrOutput) Elem() DataExchangeSharingEnvironmentConfigDcrExchangeConfigOutput {
	return o.ApplyT(func(v *DataExchangeSharingEnvironmentConfigDcrExchangeConfig) DataExchangeSharingEnvironmentConfigDcrExchangeConfig {
		if v != nil {
			return *v
		}
		var ret DataExchangeSharingEnvironmentConfigDcrExchangeConfig
		return ret
	}).(DataExchangeSharingEnvironmentConfigDcrExchangeConfigOutput)
}

type DataExchangeSharingEnvironmentConfigDefaultExchangeConfig struct {
}

// DataExchangeSharingEnvironmentConfigDefaultExchangeConfigInput is an input type that accepts DataExchangeSharingEnvironmentConfigDefaultExchangeConfigArgs and DataExchangeSharingEnvironmentConfigDefaultExchangeConfigOutput values.
// You can construct a concrete instance of `DataExchangeSharingEnvironmentConfigDefaultExchangeConfigInput` via:
//
//	DataExchangeSharingEnvironmentConfigDefaultExchangeConfigArgs{...}
type DataExchangeSharingEnvironmentConfigDefaultExchangeConfigInput interface {
	pulumi.Input

	ToDataExchangeSharingEnvironmentConfigDefaultExchangeConfigOutput() DataExchangeSharingEnvironmentConfigDefaultExchangeConfigOutput
	ToDataExchangeSharingEnvironmentConfigDefaultExchangeConfigOutputWithContext(context.Context) DataExchangeSharingEnvironmentConfigDefaultExchangeConfigOutput
}

type DataExchangeSharingEnvironmentConfigDefaultExchangeConfigArgs struct {
}

func (DataExchangeSharingEnvironmentConfigDefaultExchangeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataExchangeSharingEnvironmentConfigDefaultExchangeConfig)(nil)).Elem()
}

func (i DataExchangeSharingEnvironmentConfigDefaultExchangeConfigArgs) ToDataExchangeSharingEnvironmentConfigDefaultExchangeConfigOutput() DataExchangeSharingEnvironmentConfigDefaultExchangeConfigOutput {
	return i.ToDataExchangeSharingEnvironmentConfigDefaultExchangeConfigOutputWithContext(context.Background())
}

func (i DataExchangeSharingEnvironmentConfigDefaultExchangeConfigArgs) ToDataExchangeSharingEnvironmentConfigDefaultExchangeConfigOutputWithContext(ctx context.Context) DataExchangeSharingEnvironmentConfigDefaultExchangeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataExchangeSharingEnvironmentConfigDefaultExchangeConfigOutput)
}

func (i DataExchangeSharingEnvironmentConfigDefaultExchangeConfigArgs) ToDataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrOutput() DataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrOutput {
	return i.ToDataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrOutputWithContext(context.Background())
}

func (i DataExchangeSharingEnvironmentConfigDefaultExchangeConfigArgs) ToDataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrOutputWithContext(ctx context.Context) DataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataExchangeSharingEnvironmentConfigDefaultExchangeConfigOutput).ToDataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrOutputWithContext(ctx)
}

// DataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrInput is an input type that accepts DataExchangeSharingEnvironmentConfigDefaultExchangeConfigArgs, DataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtr and DataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrOutput values.
// You can construct a concrete instance of `DataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrInput` via:
//
//	        DataExchangeSharingEnvironmentConfigDefaultExchangeConfigArgs{...}
//
//	or:
//
//	        nil
type DataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrInput interface {
	pulumi.Input

	ToDataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrOutput() DataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrOutput
	ToDataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrOutputWithContext(context.Context) DataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrOutput
}

type dataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrType DataExchangeSharingEnvironmentConfigDefaultExchangeConfigArgs

func DataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtr(v *DataExchangeSharingEnvironmentConfigDefaultExchangeConfigArgs) DataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrInput {
	return (*dataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrType)(v)
}

func (*dataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataExchangeSharingEnvironmentConfigDefaultExchangeConfig)(nil)).Elem()
}

func (i *dataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrType) ToDataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrOutput() DataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrOutput {
	return i.ToDataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrOutputWithContext(context.Background())
}

func (i *dataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrType) ToDataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrOutputWithContext(ctx context.Context) DataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrOutput)
}

type DataExchangeSharingEnvironmentConfigDefaultExchangeConfigOutput struct{ *pulumi.OutputState }

func (DataExchangeSharingEnvironmentConfigDefaultExchangeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataExchangeSharingEnvironmentConfigDefaultExchangeConfig)(nil)).Elem()
}

func (o DataExchangeSharingEnvironmentConfigDefaultExchangeConfigOutput) ToDataExchangeSharingEnvironmentConfigDefaultExchangeConfigOutput() DataExchangeSharingEnvironmentConfigDefaultExchangeConfigOutput {
	return o
}

func (o DataExchangeSharingEnvironmentConfigDefaultExchangeConfigOutput) ToDataExchangeSharingEnvironmentConfigDefaultExchangeConfigOutputWithContext(ctx context.Context) DataExchangeSharingEnvironmentConfigDefaultExchangeConfigOutput {
	return o
}

func (o DataExchangeSharingEnvironmentConfigDefaultExchangeConfigOutput) ToDataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrOutput() DataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrOutput {
	return o.ToDataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrOutputWithContext(context.Background())
}

func (o DataExchangeSharingEnvironmentConfigDefaultExchangeConfigOutput) ToDataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrOutputWithContext(ctx context.Context) DataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataExchangeSharingEnvironmentConfigDefaultExchangeConfig) *DataExchangeSharingEnvironmentConfigDefaultExchangeConfig {
		return &v
	}).(DataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrOutput)
}

type DataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrOutput struct{ *pulumi.OutputState }

func (DataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataExchangeSharingEnvironmentConfigDefaultExchangeConfig)(nil)).Elem()
}

func (o DataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrOutput) ToDataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrOutput() DataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrOutput {
	return o
}

func (o DataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrOutput) ToDataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrOutputWithContext(ctx context.Context) DataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrOutput {
	return o
}

func (o DataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrOutput) Elem() DataExchangeSharingEnvironmentConfigDefaultExchangeConfigOutput {
	return o.ApplyT(func(v *DataExchangeSharingEnvironmentConfigDefaultExchangeConfig) DataExchangeSharingEnvironmentConfigDefaultExchangeConfig {
		if v != nil {
			return *v
		}
		var ret DataExchangeSharingEnvironmentConfigDefaultExchangeConfig
		return ret
	}).(DataExchangeSharingEnvironmentConfigDefaultExchangeConfigOutput)
}

type ListingBigqueryDataset struct {
	// Resource name of the dataset source for this listing. e.g. projects/myproject/datasets/123
	Dataset string `pulumi:"dataset"`
	// Resource in this dataset that is selectively shared. This field is required for data clean room exchanges.
	// Structure is documented below.
	SelectedResources []ListingBigqueryDatasetSelectedResource `pulumi:"selectedResources"`
}

// ListingBigqueryDatasetInput is an input type that accepts ListingBigqueryDatasetArgs and ListingBigqueryDatasetOutput values.
// You can construct a concrete instance of `ListingBigqueryDatasetInput` via:
//
//	ListingBigqueryDatasetArgs{...}
type ListingBigqueryDatasetInput interface {
	pulumi.Input

	ToListingBigqueryDatasetOutput() ListingBigqueryDatasetOutput
	ToListingBigqueryDatasetOutputWithContext(context.Context) ListingBigqueryDatasetOutput
}

type ListingBigqueryDatasetArgs struct {
	// Resource name of the dataset source for this listing. e.g. projects/myproject/datasets/123
	Dataset pulumi.StringInput `pulumi:"dataset"`
	// Resource in this dataset that is selectively shared. This field is required for data clean room exchanges.
	// Structure is documented below.
	SelectedResources ListingBigqueryDatasetSelectedResourceArrayInput `pulumi:"selectedResources"`
}

func (ListingBigqueryDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListingBigqueryDataset)(nil)).Elem()
}

func (i ListingBigqueryDatasetArgs) ToListingBigqueryDatasetOutput() ListingBigqueryDatasetOutput {
	return i.ToListingBigqueryDatasetOutputWithContext(context.Background())
}

func (i ListingBigqueryDatasetArgs) ToListingBigqueryDatasetOutputWithContext(ctx context.Context) ListingBigqueryDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListingBigqueryDatasetOutput)
}

func (i ListingBigqueryDatasetArgs) ToListingBigqueryDatasetPtrOutput() ListingBigqueryDatasetPtrOutput {
	return i.ToListingBigqueryDatasetPtrOutputWithContext(context.Background())
}

func (i ListingBigqueryDatasetArgs) ToListingBigqueryDatasetPtrOutputWithContext(ctx context.Context) ListingBigqueryDatasetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListingBigqueryDatasetOutput).ToListingBigqueryDatasetPtrOutputWithContext(ctx)
}

// ListingBigqueryDatasetPtrInput is an input type that accepts ListingBigqueryDatasetArgs, ListingBigqueryDatasetPtr and ListingBigqueryDatasetPtrOutput values.
// You can construct a concrete instance of `ListingBigqueryDatasetPtrInput` via:
//
//	        ListingBigqueryDatasetArgs{...}
//
//	or:
//
//	        nil
type ListingBigqueryDatasetPtrInput interface {
	pulumi.Input

	ToListingBigqueryDatasetPtrOutput() ListingBigqueryDatasetPtrOutput
	ToListingBigqueryDatasetPtrOutputWithContext(context.Context) ListingBigqueryDatasetPtrOutput
}

type listingBigqueryDatasetPtrType ListingBigqueryDatasetArgs

func ListingBigqueryDatasetPtr(v *ListingBigqueryDatasetArgs) ListingBigqueryDatasetPtrInput {
	return (*listingBigqueryDatasetPtrType)(v)
}

func (*listingBigqueryDatasetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ListingBigqueryDataset)(nil)).Elem()
}

func (i *listingBigqueryDatasetPtrType) ToListingBigqueryDatasetPtrOutput() ListingBigqueryDatasetPtrOutput {
	return i.ToListingBigqueryDatasetPtrOutputWithContext(context.Background())
}

func (i *listingBigqueryDatasetPtrType) ToListingBigqueryDatasetPtrOutputWithContext(ctx context.Context) ListingBigqueryDatasetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListingBigqueryDatasetPtrOutput)
}

type ListingBigqueryDatasetOutput struct{ *pulumi.OutputState }

func (ListingBigqueryDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListingBigqueryDataset)(nil)).Elem()
}

func (o ListingBigqueryDatasetOutput) ToListingBigqueryDatasetOutput() ListingBigqueryDatasetOutput {
	return o
}

func (o ListingBigqueryDatasetOutput) ToListingBigqueryDatasetOutputWithContext(ctx context.Context) ListingBigqueryDatasetOutput {
	return o
}

func (o ListingBigqueryDatasetOutput) ToListingBigqueryDatasetPtrOutput() ListingBigqueryDatasetPtrOutput {
	return o.ToListingBigqueryDatasetPtrOutputWithContext(context.Background())
}

func (o ListingBigqueryDatasetOutput) ToListingBigqueryDatasetPtrOutputWithContext(ctx context.Context) ListingBigqueryDatasetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ListingBigqueryDataset) *ListingBigqueryDataset {
		return &v
	}).(ListingBigqueryDatasetPtrOutput)
}

// Resource name of the dataset source for this listing. e.g. projects/myproject/datasets/123
func (o ListingBigqueryDatasetOutput) Dataset() pulumi.StringOutput {
	return o.ApplyT(func(v ListingBigqueryDataset) string { return v.Dataset }).(pulumi.StringOutput)
}

// Resource in this dataset that is selectively shared. This field is required for data clean room exchanges.
// Structure is documented below.
func (o ListingBigqueryDatasetOutput) SelectedResources() ListingBigqueryDatasetSelectedResourceArrayOutput {
	return o.ApplyT(func(v ListingBigqueryDataset) []ListingBigqueryDatasetSelectedResource { return v.SelectedResources }).(ListingBigqueryDatasetSelectedResourceArrayOutput)
}

type ListingBigqueryDatasetPtrOutput struct{ *pulumi.OutputState }

func (ListingBigqueryDatasetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListingBigqueryDataset)(nil)).Elem()
}

func (o ListingBigqueryDatasetPtrOutput) ToListingBigqueryDatasetPtrOutput() ListingBigqueryDatasetPtrOutput {
	return o
}

func (o ListingBigqueryDatasetPtrOutput) ToListingBigqueryDatasetPtrOutputWithContext(ctx context.Context) ListingBigqueryDatasetPtrOutput {
	return o
}

func (o ListingBigqueryDatasetPtrOutput) Elem() ListingBigqueryDatasetOutput {
	return o.ApplyT(func(v *ListingBigqueryDataset) ListingBigqueryDataset {
		if v != nil {
			return *v
		}
		var ret ListingBigqueryDataset
		return ret
	}).(ListingBigqueryDatasetOutput)
}

// Resource name of the dataset source for this listing. e.g. projects/myproject/datasets/123
func (o ListingBigqueryDatasetPtrOutput) Dataset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListingBigqueryDataset) *string {
		if v == nil {
			return nil
		}
		return &v.Dataset
	}).(pulumi.StringPtrOutput)
}

// Resource in this dataset that is selectively shared. This field is required for data clean room exchanges.
// Structure is documented below.
func (o ListingBigqueryDatasetPtrOutput) SelectedResources() ListingBigqueryDatasetSelectedResourceArrayOutput {
	return o.ApplyT(func(v *ListingBigqueryDataset) []ListingBigqueryDatasetSelectedResource {
		if v == nil {
			return nil
		}
		return v.SelectedResources
	}).(ListingBigqueryDatasetSelectedResourceArrayOutput)
}

type ListingBigqueryDatasetSelectedResource struct {
	// Format: For table: projects/{projectId}/datasets/{datasetId}/tables/{tableId} Example:"projects/test_project/datasets/test_dataset/tables/test_table"
	//
	// ***
	Table *string `pulumi:"table"`
}

// ListingBigqueryDatasetSelectedResourceInput is an input type that accepts ListingBigqueryDatasetSelectedResourceArgs and ListingBigqueryDatasetSelectedResourceOutput values.
// You can construct a concrete instance of `ListingBigqueryDatasetSelectedResourceInput` via:
//
//	ListingBigqueryDatasetSelectedResourceArgs{...}
type ListingBigqueryDatasetSelectedResourceInput interface {
	pulumi.Input

	ToListingBigqueryDatasetSelectedResourceOutput() ListingBigqueryDatasetSelectedResourceOutput
	ToListingBigqueryDatasetSelectedResourceOutputWithContext(context.Context) ListingBigqueryDatasetSelectedResourceOutput
}

type ListingBigqueryDatasetSelectedResourceArgs struct {
	// Format: For table: projects/{projectId}/datasets/{datasetId}/tables/{tableId} Example:"projects/test_project/datasets/test_dataset/tables/test_table"
	//
	// ***
	Table pulumi.StringPtrInput `pulumi:"table"`
}

func (ListingBigqueryDatasetSelectedResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListingBigqueryDatasetSelectedResource)(nil)).Elem()
}

func (i ListingBigqueryDatasetSelectedResourceArgs) ToListingBigqueryDatasetSelectedResourceOutput() ListingBigqueryDatasetSelectedResourceOutput {
	return i.ToListingBigqueryDatasetSelectedResourceOutputWithContext(context.Background())
}

func (i ListingBigqueryDatasetSelectedResourceArgs) ToListingBigqueryDatasetSelectedResourceOutputWithContext(ctx context.Context) ListingBigqueryDatasetSelectedResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListingBigqueryDatasetSelectedResourceOutput)
}

// ListingBigqueryDatasetSelectedResourceArrayInput is an input type that accepts ListingBigqueryDatasetSelectedResourceArray and ListingBigqueryDatasetSelectedResourceArrayOutput values.
// You can construct a concrete instance of `ListingBigqueryDatasetSelectedResourceArrayInput` via:
//
//	ListingBigqueryDatasetSelectedResourceArray{ ListingBigqueryDatasetSelectedResourceArgs{...} }
type ListingBigqueryDatasetSelectedResourceArrayInput interface {
	pulumi.Input

	ToListingBigqueryDatasetSelectedResourceArrayOutput() ListingBigqueryDatasetSelectedResourceArrayOutput
	ToListingBigqueryDatasetSelectedResourceArrayOutputWithContext(context.Context) ListingBigqueryDatasetSelectedResourceArrayOutput
}

type ListingBigqueryDatasetSelectedResourceArray []ListingBigqueryDatasetSelectedResourceInput

func (ListingBigqueryDatasetSelectedResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListingBigqueryDatasetSelectedResource)(nil)).Elem()
}

func (i ListingBigqueryDatasetSelectedResourceArray) ToListingBigqueryDatasetSelectedResourceArrayOutput() ListingBigqueryDatasetSelectedResourceArrayOutput {
	return i.ToListingBigqueryDatasetSelectedResourceArrayOutputWithContext(context.Background())
}

func (i ListingBigqueryDatasetSelectedResourceArray) ToListingBigqueryDatasetSelectedResourceArrayOutputWithContext(ctx context.Context) ListingBigqueryDatasetSelectedResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListingBigqueryDatasetSelectedResourceArrayOutput)
}

type ListingBigqueryDatasetSelectedResourceOutput struct{ *pulumi.OutputState }

func (ListingBigqueryDatasetSelectedResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListingBigqueryDatasetSelectedResource)(nil)).Elem()
}

func (o ListingBigqueryDatasetSelectedResourceOutput) ToListingBigqueryDatasetSelectedResourceOutput() ListingBigqueryDatasetSelectedResourceOutput {
	return o
}

func (o ListingBigqueryDatasetSelectedResourceOutput) ToListingBigqueryDatasetSelectedResourceOutputWithContext(ctx context.Context) ListingBigqueryDatasetSelectedResourceOutput {
	return o
}

// Format: For table: projects/{projectId}/datasets/{datasetId}/tables/{tableId} Example:"projects/test_project/datasets/test_dataset/tables/test_table"
//
// ***
func (o ListingBigqueryDatasetSelectedResourceOutput) Table() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListingBigqueryDatasetSelectedResource) *string { return v.Table }).(pulumi.StringPtrOutput)
}

type ListingBigqueryDatasetSelectedResourceArrayOutput struct{ *pulumi.OutputState }

func (ListingBigqueryDatasetSelectedResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListingBigqueryDatasetSelectedResource)(nil)).Elem()
}

func (o ListingBigqueryDatasetSelectedResourceArrayOutput) ToListingBigqueryDatasetSelectedResourceArrayOutput() ListingBigqueryDatasetSelectedResourceArrayOutput {
	return o
}

func (o ListingBigqueryDatasetSelectedResourceArrayOutput) ToListingBigqueryDatasetSelectedResourceArrayOutputWithContext(ctx context.Context) ListingBigqueryDatasetSelectedResourceArrayOutput {
	return o
}

func (o ListingBigqueryDatasetSelectedResourceArrayOutput) Index(i pulumi.IntInput) ListingBigqueryDatasetSelectedResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ListingBigqueryDatasetSelectedResource {
		return vs[0].([]ListingBigqueryDatasetSelectedResource)[vs[1].(int)]
	}).(ListingBigqueryDatasetSelectedResourceOutput)
}

type ListingDataProvider struct {
	// Name of the data provider.
	Name string `pulumi:"name"`
	// Email or URL of the data provider.
	PrimaryContact *string `pulumi:"primaryContact"`
}

// ListingDataProviderInput is an input type that accepts ListingDataProviderArgs and ListingDataProviderOutput values.
// You can construct a concrete instance of `ListingDataProviderInput` via:
//
//	ListingDataProviderArgs{...}
type ListingDataProviderInput interface {
	pulumi.Input

	ToListingDataProviderOutput() ListingDataProviderOutput
	ToListingDataProviderOutputWithContext(context.Context) ListingDataProviderOutput
}

type ListingDataProviderArgs struct {
	// Name of the data provider.
	Name pulumi.StringInput `pulumi:"name"`
	// Email or URL of the data provider.
	PrimaryContact pulumi.StringPtrInput `pulumi:"primaryContact"`
}

func (ListingDataProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListingDataProvider)(nil)).Elem()
}

func (i ListingDataProviderArgs) ToListingDataProviderOutput() ListingDataProviderOutput {
	return i.ToListingDataProviderOutputWithContext(context.Background())
}

func (i ListingDataProviderArgs) ToListingDataProviderOutputWithContext(ctx context.Context) ListingDataProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListingDataProviderOutput)
}

func (i ListingDataProviderArgs) ToListingDataProviderPtrOutput() ListingDataProviderPtrOutput {
	return i.ToListingDataProviderPtrOutputWithContext(context.Background())
}

func (i ListingDataProviderArgs) ToListingDataProviderPtrOutputWithContext(ctx context.Context) ListingDataProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListingDataProviderOutput).ToListingDataProviderPtrOutputWithContext(ctx)
}

// ListingDataProviderPtrInput is an input type that accepts ListingDataProviderArgs, ListingDataProviderPtr and ListingDataProviderPtrOutput values.
// You can construct a concrete instance of `ListingDataProviderPtrInput` via:
//
//	        ListingDataProviderArgs{...}
//
//	or:
//
//	        nil
type ListingDataProviderPtrInput interface {
	pulumi.Input

	ToListingDataProviderPtrOutput() ListingDataProviderPtrOutput
	ToListingDataProviderPtrOutputWithContext(context.Context) ListingDataProviderPtrOutput
}

type listingDataProviderPtrType ListingDataProviderArgs

func ListingDataProviderPtr(v *ListingDataProviderArgs) ListingDataProviderPtrInput {
	return (*listingDataProviderPtrType)(v)
}

func (*listingDataProviderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ListingDataProvider)(nil)).Elem()
}

func (i *listingDataProviderPtrType) ToListingDataProviderPtrOutput() ListingDataProviderPtrOutput {
	return i.ToListingDataProviderPtrOutputWithContext(context.Background())
}

func (i *listingDataProviderPtrType) ToListingDataProviderPtrOutputWithContext(ctx context.Context) ListingDataProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListingDataProviderPtrOutput)
}

type ListingDataProviderOutput struct{ *pulumi.OutputState }

func (ListingDataProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListingDataProvider)(nil)).Elem()
}

func (o ListingDataProviderOutput) ToListingDataProviderOutput() ListingDataProviderOutput {
	return o
}

func (o ListingDataProviderOutput) ToListingDataProviderOutputWithContext(ctx context.Context) ListingDataProviderOutput {
	return o
}

func (o ListingDataProviderOutput) ToListingDataProviderPtrOutput() ListingDataProviderPtrOutput {
	return o.ToListingDataProviderPtrOutputWithContext(context.Background())
}

func (o ListingDataProviderOutput) ToListingDataProviderPtrOutputWithContext(ctx context.Context) ListingDataProviderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ListingDataProvider) *ListingDataProvider {
		return &v
	}).(ListingDataProviderPtrOutput)
}

// Name of the data provider.
func (o ListingDataProviderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ListingDataProvider) string { return v.Name }).(pulumi.StringOutput)
}

// Email or URL of the data provider.
func (o ListingDataProviderOutput) PrimaryContact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListingDataProvider) *string { return v.PrimaryContact }).(pulumi.StringPtrOutput)
}

type ListingDataProviderPtrOutput struct{ *pulumi.OutputState }

func (ListingDataProviderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListingDataProvider)(nil)).Elem()
}

func (o ListingDataProviderPtrOutput) ToListingDataProviderPtrOutput() ListingDataProviderPtrOutput {
	return o
}

func (o ListingDataProviderPtrOutput) ToListingDataProviderPtrOutputWithContext(ctx context.Context) ListingDataProviderPtrOutput {
	return o
}

func (o ListingDataProviderPtrOutput) Elem() ListingDataProviderOutput {
	return o.ApplyT(func(v *ListingDataProvider) ListingDataProvider {
		if v != nil {
			return *v
		}
		var ret ListingDataProvider
		return ret
	}).(ListingDataProviderOutput)
}

// Name of the data provider.
func (o ListingDataProviderPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListingDataProvider) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Email or URL of the data provider.
func (o ListingDataProviderPtrOutput) PrimaryContact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListingDataProvider) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryContact
	}).(pulumi.StringPtrOutput)
}

type ListingIamBindingCondition struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

// ListingIamBindingConditionInput is an input type that accepts ListingIamBindingConditionArgs and ListingIamBindingConditionOutput values.
// You can construct a concrete instance of `ListingIamBindingConditionInput` via:
//
//	ListingIamBindingConditionArgs{...}
type ListingIamBindingConditionInput interface {
	pulumi.Input

	ToListingIamBindingConditionOutput() ListingIamBindingConditionOutput
	ToListingIamBindingConditionOutputWithContext(context.Context) ListingIamBindingConditionOutput
}

type ListingIamBindingConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (ListingIamBindingConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListingIamBindingCondition)(nil)).Elem()
}

func (i ListingIamBindingConditionArgs) ToListingIamBindingConditionOutput() ListingIamBindingConditionOutput {
	return i.ToListingIamBindingConditionOutputWithContext(context.Background())
}

func (i ListingIamBindingConditionArgs) ToListingIamBindingConditionOutputWithContext(ctx context.Context) ListingIamBindingConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListingIamBindingConditionOutput)
}

func (i ListingIamBindingConditionArgs) ToListingIamBindingConditionPtrOutput() ListingIamBindingConditionPtrOutput {
	return i.ToListingIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i ListingIamBindingConditionArgs) ToListingIamBindingConditionPtrOutputWithContext(ctx context.Context) ListingIamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListingIamBindingConditionOutput).ToListingIamBindingConditionPtrOutputWithContext(ctx)
}

// ListingIamBindingConditionPtrInput is an input type that accepts ListingIamBindingConditionArgs, ListingIamBindingConditionPtr and ListingIamBindingConditionPtrOutput values.
// You can construct a concrete instance of `ListingIamBindingConditionPtrInput` via:
//
//	        ListingIamBindingConditionArgs{...}
//
//	or:
//
//	        nil
type ListingIamBindingConditionPtrInput interface {
	pulumi.Input

	ToListingIamBindingConditionPtrOutput() ListingIamBindingConditionPtrOutput
	ToListingIamBindingConditionPtrOutputWithContext(context.Context) ListingIamBindingConditionPtrOutput
}

type listingIamBindingConditionPtrType ListingIamBindingConditionArgs

func ListingIamBindingConditionPtr(v *ListingIamBindingConditionArgs) ListingIamBindingConditionPtrInput {
	return (*listingIamBindingConditionPtrType)(v)
}

func (*listingIamBindingConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ListingIamBindingCondition)(nil)).Elem()
}

func (i *listingIamBindingConditionPtrType) ToListingIamBindingConditionPtrOutput() ListingIamBindingConditionPtrOutput {
	return i.ToListingIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i *listingIamBindingConditionPtrType) ToListingIamBindingConditionPtrOutputWithContext(ctx context.Context) ListingIamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListingIamBindingConditionPtrOutput)
}

type ListingIamBindingConditionOutput struct{ *pulumi.OutputState }

func (ListingIamBindingConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListingIamBindingCondition)(nil)).Elem()
}

func (o ListingIamBindingConditionOutput) ToListingIamBindingConditionOutput() ListingIamBindingConditionOutput {
	return o
}

func (o ListingIamBindingConditionOutput) ToListingIamBindingConditionOutputWithContext(ctx context.Context) ListingIamBindingConditionOutput {
	return o
}

func (o ListingIamBindingConditionOutput) ToListingIamBindingConditionPtrOutput() ListingIamBindingConditionPtrOutput {
	return o.ToListingIamBindingConditionPtrOutputWithContext(context.Background())
}

func (o ListingIamBindingConditionOutput) ToListingIamBindingConditionPtrOutputWithContext(ctx context.Context) ListingIamBindingConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ListingIamBindingCondition) *ListingIamBindingCondition {
		return &v
	}).(ListingIamBindingConditionPtrOutput)
}

func (o ListingIamBindingConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListingIamBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ListingIamBindingConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v ListingIamBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o ListingIamBindingConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v ListingIamBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

type ListingIamBindingConditionPtrOutput struct{ *pulumi.OutputState }

func (ListingIamBindingConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListingIamBindingCondition)(nil)).Elem()
}

func (o ListingIamBindingConditionPtrOutput) ToListingIamBindingConditionPtrOutput() ListingIamBindingConditionPtrOutput {
	return o
}

func (o ListingIamBindingConditionPtrOutput) ToListingIamBindingConditionPtrOutputWithContext(ctx context.Context) ListingIamBindingConditionPtrOutput {
	return o
}

func (o ListingIamBindingConditionPtrOutput) Elem() ListingIamBindingConditionOutput {
	return o.ApplyT(func(v *ListingIamBindingCondition) ListingIamBindingCondition {
		if v != nil {
			return *v
		}
		var ret ListingIamBindingCondition
		return ret
	}).(ListingIamBindingConditionOutput)
}

func (o ListingIamBindingConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListingIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o ListingIamBindingConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListingIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

func (o ListingIamBindingConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListingIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type ListingIamMemberCondition struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

// ListingIamMemberConditionInput is an input type that accepts ListingIamMemberConditionArgs and ListingIamMemberConditionOutput values.
// You can construct a concrete instance of `ListingIamMemberConditionInput` via:
//
//	ListingIamMemberConditionArgs{...}
type ListingIamMemberConditionInput interface {
	pulumi.Input

	ToListingIamMemberConditionOutput() ListingIamMemberConditionOutput
	ToListingIamMemberConditionOutputWithContext(context.Context) ListingIamMemberConditionOutput
}

type ListingIamMemberConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (ListingIamMemberConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListingIamMemberCondition)(nil)).Elem()
}

func (i ListingIamMemberConditionArgs) ToListingIamMemberConditionOutput() ListingIamMemberConditionOutput {
	return i.ToListingIamMemberConditionOutputWithContext(context.Background())
}

func (i ListingIamMemberConditionArgs) ToListingIamMemberConditionOutputWithContext(ctx context.Context) ListingIamMemberConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListingIamMemberConditionOutput)
}

func (i ListingIamMemberConditionArgs) ToListingIamMemberConditionPtrOutput() ListingIamMemberConditionPtrOutput {
	return i.ToListingIamMemberConditionPtrOutputWithContext(context.Background())
}

func (i ListingIamMemberConditionArgs) ToListingIamMemberConditionPtrOutputWithContext(ctx context.Context) ListingIamMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListingIamMemberConditionOutput).ToListingIamMemberConditionPtrOutputWithContext(ctx)
}

// ListingIamMemberConditionPtrInput is an input type that accepts ListingIamMemberConditionArgs, ListingIamMemberConditionPtr and ListingIamMemberConditionPtrOutput values.
// You can construct a concrete instance of `ListingIamMemberConditionPtrInput` via:
//
//	        ListingIamMemberConditionArgs{...}
//
//	or:
//
//	        nil
type ListingIamMemberConditionPtrInput interface {
	pulumi.Input

	ToListingIamMemberConditionPtrOutput() ListingIamMemberConditionPtrOutput
	ToListingIamMemberConditionPtrOutputWithContext(context.Context) ListingIamMemberConditionPtrOutput
}

type listingIamMemberConditionPtrType ListingIamMemberConditionArgs

func ListingIamMemberConditionPtr(v *ListingIamMemberConditionArgs) ListingIamMemberConditionPtrInput {
	return (*listingIamMemberConditionPtrType)(v)
}

func (*listingIamMemberConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ListingIamMemberCondition)(nil)).Elem()
}

func (i *listingIamMemberConditionPtrType) ToListingIamMemberConditionPtrOutput() ListingIamMemberConditionPtrOutput {
	return i.ToListingIamMemberConditionPtrOutputWithContext(context.Background())
}

func (i *listingIamMemberConditionPtrType) ToListingIamMemberConditionPtrOutputWithContext(ctx context.Context) ListingIamMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListingIamMemberConditionPtrOutput)
}

type ListingIamMemberConditionOutput struct{ *pulumi.OutputState }

func (ListingIamMemberConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListingIamMemberCondition)(nil)).Elem()
}

func (o ListingIamMemberConditionOutput) ToListingIamMemberConditionOutput() ListingIamMemberConditionOutput {
	return o
}

func (o ListingIamMemberConditionOutput) ToListingIamMemberConditionOutputWithContext(ctx context.Context) ListingIamMemberConditionOutput {
	return o
}

func (o ListingIamMemberConditionOutput) ToListingIamMemberConditionPtrOutput() ListingIamMemberConditionPtrOutput {
	return o.ToListingIamMemberConditionPtrOutputWithContext(context.Background())
}

func (o ListingIamMemberConditionOutput) ToListingIamMemberConditionPtrOutputWithContext(ctx context.Context) ListingIamMemberConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ListingIamMemberCondition) *ListingIamMemberCondition {
		return &v
	}).(ListingIamMemberConditionPtrOutput)
}

func (o ListingIamMemberConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListingIamMemberCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ListingIamMemberConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v ListingIamMemberCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o ListingIamMemberConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v ListingIamMemberCondition) string { return v.Title }).(pulumi.StringOutput)
}

type ListingIamMemberConditionPtrOutput struct{ *pulumi.OutputState }

func (ListingIamMemberConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListingIamMemberCondition)(nil)).Elem()
}

func (o ListingIamMemberConditionPtrOutput) ToListingIamMemberConditionPtrOutput() ListingIamMemberConditionPtrOutput {
	return o
}

func (o ListingIamMemberConditionPtrOutput) ToListingIamMemberConditionPtrOutputWithContext(ctx context.Context) ListingIamMemberConditionPtrOutput {
	return o
}

func (o ListingIamMemberConditionPtrOutput) Elem() ListingIamMemberConditionOutput {
	return o.ApplyT(func(v *ListingIamMemberCondition) ListingIamMemberCondition {
		if v != nil {
			return *v
		}
		var ret ListingIamMemberCondition
		return ret
	}).(ListingIamMemberConditionOutput)
}

func (o ListingIamMemberConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListingIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o ListingIamMemberConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListingIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

func (o ListingIamMemberConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListingIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type ListingPublisher struct {
	// Name of the listing publisher.
	Name string `pulumi:"name"`
	// Email or URL of the listing publisher.
	PrimaryContact *string `pulumi:"primaryContact"`
}

// ListingPublisherInput is an input type that accepts ListingPublisherArgs and ListingPublisherOutput values.
// You can construct a concrete instance of `ListingPublisherInput` via:
//
//	ListingPublisherArgs{...}
type ListingPublisherInput interface {
	pulumi.Input

	ToListingPublisherOutput() ListingPublisherOutput
	ToListingPublisherOutputWithContext(context.Context) ListingPublisherOutput
}

type ListingPublisherArgs struct {
	// Name of the listing publisher.
	Name pulumi.StringInput `pulumi:"name"`
	// Email or URL of the listing publisher.
	PrimaryContact pulumi.StringPtrInput `pulumi:"primaryContact"`
}

func (ListingPublisherArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListingPublisher)(nil)).Elem()
}

func (i ListingPublisherArgs) ToListingPublisherOutput() ListingPublisherOutput {
	return i.ToListingPublisherOutputWithContext(context.Background())
}

func (i ListingPublisherArgs) ToListingPublisherOutputWithContext(ctx context.Context) ListingPublisherOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListingPublisherOutput)
}

func (i ListingPublisherArgs) ToListingPublisherPtrOutput() ListingPublisherPtrOutput {
	return i.ToListingPublisherPtrOutputWithContext(context.Background())
}

func (i ListingPublisherArgs) ToListingPublisherPtrOutputWithContext(ctx context.Context) ListingPublisherPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListingPublisherOutput).ToListingPublisherPtrOutputWithContext(ctx)
}

// ListingPublisherPtrInput is an input type that accepts ListingPublisherArgs, ListingPublisherPtr and ListingPublisherPtrOutput values.
// You can construct a concrete instance of `ListingPublisherPtrInput` via:
//
//	        ListingPublisherArgs{...}
//
//	or:
//
//	        nil
type ListingPublisherPtrInput interface {
	pulumi.Input

	ToListingPublisherPtrOutput() ListingPublisherPtrOutput
	ToListingPublisherPtrOutputWithContext(context.Context) ListingPublisherPtrOutput
}

type listingPublisherPtrType ListingPublisherArgs

func ListingPublisherPtr(v *ListingPublisherArgs) ListingPublisherPtrInput {
	return (*listingPublisherPtrType)(v)
}

func (*listingPublisherPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ListingPublisher)(nil)).Elem()
}

func (i *listingPublisherPtrType) ToListingPublisherPtrOutput() ListingPublisherPtrOutput {
	return i.ToListingPublisherPtrOutputWithContext(context.Background())
}

func (i *listingPublisherPtrType) ToListingPublisherPtrOutputWithContext(ctx context.Context) ListingPublisherPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListingPublisherPtrOutput)
}

type ListingPublisherOutput struct{ *pulumi.OutputState }

func (ListingPublisherOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListingPublisher)(nil)).Elem()
}

func (o ListingPublisherOutput) ToListingPublisherOutput() ListingPublisherOutput {
	return o
}

func (o ListingPublisherOutput) ToListingPublisherOutputWithContext(ctx context.Context) ListingPublisherOutput {
	return o
}

func (o ListingPublisherOutput) ToListingPublisherPtrOutput() ListingPublisherPtrOutput {
	return o.ToListingPublisherPtrOutputWithContext(context.Background())
}

func (o ListingPublisherOutput) ToListingPublisherPtrOutputWithContext(ctx context.Context) ListingPublisherPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ListingPublisher) *ListingPublisher {
		return &v
	}).(ListingPublisherPtrOutput)
}

// Name of the listing publisher.
func (o ListingPublisherOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ListingPublisher) string { return v.Name }).(pulumi.StringOutput)
}

// Email or URL of the listing publisher.
func (o ListingPublisherOutput) PrimaryContact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListingPublisher) *string { return v.PrimaryContact }).(pulumi.StringPtrOutput)
}

type ListingPublisherPtrOutput struct{ *pulumi.OutputState }

func (ListingPublisherPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListingPublisher)(nil)).Elem()
}

func (o ListingPublisherPtrOutput) ToListingPublisherPtrOutput() ListingPublisherPtrOutput {
	return o
}

func (o ListingPublisherPtrOutput) ToListingPublisherPtrOutputWithContext(ctx context.Context) ListingPublisherPtrOutput {
	return o
}

func (o ListingPublisherPtrOutput) Elem() ListingPublisherOutput {
	return o.ApplyT(func(v *ListingPublisher) ListingPublisher {
		if v != nil {
			return *v
		}
		var ret ListingPublisher
		return ret
	}).(ListingPublisherOutput)
}

// Name of the listing publisher.
func (o ListingPublisherPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListingPublisher) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Email or URL of the listing publisher.
func (o ListingPublisherPtrOutput) PrimaryContact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListingPublisher) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryContact
	}).(pulumi.StringPtrOutput)
}

type ListingRestrictedExportConfig struct {
	// If true, enable restricted export.
	Enabled *bool `pulumi:"enabled"`
	// (Output)
	// If true, restrict direct table access(read api/tabledata.list) on linked table.
	RestrictDirectTableAccess *bool `pulumi:"restrictDirectTableAccess"`
	// If true, restrict export of query result derived from restricted linked dataset table.
	RestrictQueryResult *bool `pulumi:"restrictQueryResult"`
}

// ListingRestrictedExportConfigInput is an input type that accepts ListingRestrictedExportConfigArgs and ListingRestrictedExportConfigOutput values.
// You can construct a concrete instance of `ListingRestrictedExportConfigInput` via:
//
//	ListingRestrictedExportConfigArgs{...}
type ListingRestrictedExportConfigInput interface {
	pulumi.Input

	ToListingRestrictedExportConfigOutput() ListingRestrictedExportConfigOutput
	ToListingRestrictedExportConfigOutputWithContext(context.Context) ListingRestrictedExportConfigOutput
}

type ListingRestrictedExportConfigArgs struct {
	// If true, enable restricted export.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// (Output)
	// If true, restrict direct table access(read api/tabledata.list) on linked table.
	RestrictDirectTableAccess pulumi.BoolPtrInput `pulumi:"restrictDirectTableAccess"`
	// If true, restrict export of query result derived from restricted linked dataset table.
	RestrictQueryResult pulumi.BoolPtrInput `pulumi:"restrictQueryResult"`
}

func (ListingRestrictedExportConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListingRestrictedExportConfig)(nil)).Elem()
}

func (i ListingRestrictedExportConfigArgs) ToListingRestrictedExportConfigOutput() ListingRestrictedExportConfigOutput {
	return i.ToListingRestrictedExportConfigOutputWithContext(context.Background())
}

func (i ListingRestrictedExportConfigArgs) ToListingRestrictedExportConfigOutputWithContext(ctx context.Context) ListingRestrictedExportConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListingRestrictedExportConfigOutput)
}

func (i ListingRestrictedExportConfigArgs) ToListingRestrictedExportConfigPtrOutput() ListingRestrictedExportConfigPtrOutput {
	return i.ToListingRestrictedExportConfigPtrOutputWithContext(context.Background())
}

func (i ListingRestrictedExportConfigArgs) ToListingRestrictedExportConfigPtrOutputWithContext(ctx context.Context) ListingRestrictedExportConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListingRestrictedExportConfigOutput).ToListingRestrictedExportConfigPtrOutputWithContext(ctx)
}

// ListingRestrictedExportConfigPtrInput is an input type that accepts ListingRestrictedExportConfigArgs, ListingRestrictedExportConfigPtr and ListingRestrictedExportConfigPtrOutput values.
// You can construct a concrete instance of `ListingRestrictedExportConfigPtrInput` via:
//
//	        ListingRestrictedExportConfigArgs{...}
//
//	or:
//
//	        nil
type ListingRestrictedExportConfigPtrInput interface {
	pulumi.Input

	ToListingRestrictedExportConfigPtrOutput() ListingRestrictedExportConfigPtrOutput
	ToListingRestrictedExportConfigPtrOutputWithContext(context.Context) ListingRestrictedExportConfigPtrOutput
}

type listingRestrictedExportConfigPtrType ListingRestrictedExportConfigArgs

func ListingRestrictedExportConfigPtr(v *ListingRestrictedExportConfigArgs) ListingRestrictedExportConfigPtrInput {
	return (*listingRestrictedExportConfigPtrType)(v)
}

func (*listingRestrictedExportConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ListingRestrictedExportConfig)(nil)).Elem()
}

func (i *listingRestrictedExportConfigPtrType) ToListingRestrictedExportConfigPtrOutput() ListingRestrictedExportConfigPtrOutput {
	return i.ToListingRestrictedExportConfigPtrOutputWithContext(context.Background())
}

func (i *listingRestrictedExportConfigPtrType) ToListingRestrictedExportConfigPtrOutputWithContext(ctx context.Context) ListingRestrictedExportConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListingRestrictedExportConfigPtrOutput)
}

type ListingRestrictedExportConfigOutput struct{ *pulumi.OutputState }

func (ListingRestrictedExportConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListingRestrictedExportConfig)(nil)).Elem()
}

func (o ListingRestrictedExportConfigOutput) ToListingRestrictedExportConfigOutput() ListingRestrictedExportConfigOutput {
	return o
}

func (o ListingRestrictedExportConfigOutput) ToListingRestrictedExportConfigOutputWithContext(ctx context.Context) ListingRestrictedExportConfigOutput {
	return o
}

func (o ListingRestrictedExportConfigOutput) ToListingRestrictedExportConfigPtrOutput() ListingRestrictedExportConfigPtrOutput {
	return o.ToListingRestrictedExportConfigPtrOutputWithContext(context.Background())
}

func (o ListingRestrictedExportConfigOutput) ToListingRestrictedExportConfigPtrOutputWithContext(ctx context.Context) ListingRestrictedExportConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ListingRestrictedExportConfig) *ListingRestrictedExportConfig {
		return &v
	}).(ListingRestrictedExportConfigPtrOutput)
}

// If true, enable restricted export.
func (o ListingRestrictedExportConfigOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ListingRestrictedExportConfig) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// (Output)
// If true, restrict direct table access(read api/tabledata.list) on linked table.
func (o ListingRestrictedExportConfigOutput) RestrictDirectTableAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ListingRestrictedExportConfig) *bool { return v.RestrictDirectTableAccess }).(pulumi.BoolPtrOutput)
}

// If true, restrict export of query result derived from restricted linked dataset table.
func (o ListingRestrictedExportConfigOutput) RestrictQueryResult() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ListingRestrictedExportConfig) *bool { return v.RestrictQueryResult }).(pulumi.BoolPtrOutput)
}

type ListingRestrictedExportConfigPtrOutput struct{ *pulumi.OutputState }

func (ListingRestrictedExportConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListingRestrictedExportConfig)(nil)).Elem()
}

func (o ListingRestrictedExportConfigPtrOutput) ToListingRestrictedExportConfigPtrOutput() ListingRestrictedExportConfigPtrOutput {
	return o
}

func (o ListingRestrictedExportConfigPtrOutput) ToListingRestrictedExportConfigPtrOutputWithContext(ctx context.Context) ListingRestrictedExportConfigPtrOutput {
	return o
}

func (o ListingRestrictedExportConfigPtrOutput) Elem() ListingRestrictedExportConfigOutput {
	return o.ApplyT(func(v *ListingRestrictedExportConfig) ListingRestrictedExportConfig {
		if v != nil {
			return *v
		}
		var ret ListingRestrictedExportConfig
		return ret
	}).(ListingRestrictedExportConfigOutput)
}

// If true, enable restricted export.
func (o ListingRestrictedExportConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ListingRestrictedExportConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// (Output)
// If true, restrict direct table access(read api/tabledata.list) on linked table.
func (o ListingRestrictedExportConfigPtrOutput) RestrictDirectTableAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ListingRestrictedExportConfig) *bool {
		if v == nil {
			return nil
		}
		return v.RestrictDirectTableAccess
	}).(pulumi.BoolPtrOutput)
}

// If true, restrict export of query result derived from restricted linked dataset table.
func (o ListingRestrictedExportConfigPtrOutput) RestrictQueryResult() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ListingRestrictedExportConfig) *bool {
		if v == nil {
			return nil
		}
		return v.RestrictQueryResult
	}).(pulumi.BoolPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DataExchangeIamBindingConditionInput)(nil)).Elem(), DataExchangeIamBindingConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataExchangeIamBindingConditionPtrInput)(nil)).Elem(), DataExchangeIamBindingConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataExchangeIamMemberConditionInput)(nil)).Elem(), DataExchangeIamMemberConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataExchangeIamMemberConditionPtrInput)(nil)).Elem(), DataExchangeIamMemberConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataExchangeSharingEnvironmentConfigInput)(nil)).Elem(), DataExchangeSharingEnvironmentConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataExchangeSharingEnvironmentConfigPtrInput)(nil)).Elem(), DataExchangeSharingEnvironmentConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataExchangeSharingEnvironmentConfigDcrExchangeConfigInput)(nil)).Elem(), DataExchangeSharingEnvironmentConfigDcrExchangeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrInput)(nil)).Elem(), DataExchangeSharingEnvironmentConfigDcrExchangeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataExchangeSharingEnvironmentConfigDefaultExchangeConfigInput)(nil)).Elem(), DataExchangeSharingEnvironmentConfigDefaultExchangeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrInput)(nil)).Elem(), DataExchangeSharingEnvironmentConfigDefaultExchangeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListingBigqueryDatasetInput)(nil)).Elem(), ListingBigqueryDatasetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListingBigqueryDatasetPtrInput)(nil)).Elem(), ListingBigqueryDatasetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListingBigqueryDatasetSelectedResourceInput)(nil)).Elem(), ListingBigqueryDatasetSelectedResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListingBigqueryDatasetSelectedResourceArrayInput)(nil)).Elem(), ListingBigqueryDatasetSelectedResourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListingDataProviderInput)(nil)).Elem(), ListingDataProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListingDataProviderPtrInput)(nil)).Elem(), ListingDataProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListingIamBindingConditionInput)(nil)).Elem(), ListingIamBindingConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListingIamBindingConditionPtrInput)(nil)).Elem(), ListingIamBindingConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListingIamMemberConditionInput)(nil)).Elem(), ListingIamMemberConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListingIamMemberConditionPtrInput)(nil)).Elem(), ListingIamMemberConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListingPublisherInput)(nil)).Elem(), ListingPublisherArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListingPublisherPtrInput)(nil)).Elem(), ListingPublisherArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListingRestrictedExportConfigInput)(nil)).Elem(), ListingRestrictedExportConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListingRestrictedExportConfigPtrInput)(nil)).Elem(), ListingRestrictedExportConfigArgs{})
	pulumi.RegisterOutputType(DataExchangeIamBindingConditionOutput{})
	pulumi.RegisterOutputType(DataExchangeIamBindingConditionPtrOutput{})
	pulumi.RegisterOutputType(DataExchangeIamMemberConditionOutput{})
	pulumi.RegisterOutputType(DataExchangeIamMemberConditionPtrOutput{})
	pulumi.RegisterOutputType(DataExchangeSharingEnvironmentConfigOutput{})
	pulumi.RegisterOutputType(DataExchangeSharingEnvironmentConfigPtrOutput{})
	pulumi.RegisterOutputType(DataExchangeSharingEnvironmentConfigDcrExchangeConfigOutput{})
	pulumi.RegisterOutputType(DataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrOutput{})
	pulumi.RegisterOutputType(DataExchangeSharingEnvironmentConfigDefaultExchangeConfigOutput{})
	pulumi.RegisterOutputType(DataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrOutput{})
	pulumi.RegisterOutputType(ListingBigqueryDatasetOutput{})
	pulumi.RegisterOutputType(ListingBigqueryDatasetPtrOutput{})
	pulumi.RegisterOutputType(ListingBigqueryDatasetSelectedResourceOutput{})
	pulumi.RegisterOutputType(ListingBigqueryDatasetSelectedResourceArrayOutput{})
	pulumi.RegisterOutputType(ListingDataProviderOutput{})
	pulumi.RegisterOutputType(ListingDataProviderPtrOutput{})
	pulumi.RegisterOutputType(ListingIamBindingConditionOutput{})
	pulumi.RegisterOutputType(ListingIamBindingConditionPtrOutput{})
	pulumi.RegisterOutputType(ListingIamMemberConditionOutput{})
	pulumi.RegisterOutputType(ListingIamMemberConditionPtrOutput{})
	pulumi.RegisterOutputType(ListingPublisherOutput{})
	pulumi.RegisterOutputType(ListingPublisherPtrOutput{})
	pulumi.RegisterOutputType(ListingRestrictedExportConfigOutput{})
	pulumi.RegisterOutputType(ListingRestrictedExportConfigPtrOutput{})
}
