// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package bigqueryanalyticshub

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type DataExchangeIamBindingCondition struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

// DataExchangeIamBindingConditionInput is an input type that accepts DataExchangeIamBindingConditionArgs and DataExchangeIamBindingConditionOutput values.
// You can construct a concrete instance of `DataExchangeIamBindingConditionInput` via:
//
//	DataExchangeIamBindingConditionArgs{...}
type DataExchangeIamBindingConditionInput interface {
	pulumi.Input

	ToDataExchangeIamBindingConditionOutput() DataExchangeIamBindingConditionOutput
	ToDataExchangeIamBindingConditionOutputWithContext(context.Context) DataExchangeIamBindingConditionOutput
}

type DataExchangeIamBindingConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (DataExchangeIamBindingConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataExchangeIamBindingCondition)(nil)).Elem()
}

func (i DataExchangeIamBindingConditionArgs) ToDataExchangeIamBindingConditionOutput() DataExchangeIamBindingConditionOutput {
	return i.ToDataExchangeIamBindingConditionOutputWithContext(context.Background())
}

func (i DataExchangeIamBindingConditionArgs) ToDataExchangeIamBindingConditionOutputWithContext(ctx context.Context) DataExchangeIamBindingConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataExchangeIamBindingConditionOutput)
}

func (i DataExchangeIamBindingConditionArgs) ToDataExchangeIamBindingConditionPtrOutput() DataExchangeIamBindingConditionPtrOutput {
	return i.ToDataExchangeIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i DataExchangeIamBindingConditionArgs) ToDataExchangeIamBindingConditionPtrOutputWithContext(ctx context.Context) DataExchangeIamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataExchangeIamBindingConditionOutput).ToDataExchangeIamBindingConditionPtrOutputWithContext(ctx)
}

// DataExchangeIamBindingConditionPtrInput is an input type that accepts DataExchangeIamBindingConditionArgs, DataExchangeIamBindingConditionPtr and DataExchangeIamBindingConditionPtrOutput values.
// You can construct a concrete instance of `DataExchangeIamBindingConditionPtrInput` via:
//
//	        DataExchangeIamBindingConditionArgs{...}
//
//	or:
//
//	        nil
type DataExchangeIamBindingConditionPtrInput interface {
	pulumi.Input

	ToDataExchangeIamBindingConditionPtrOutput() DataExchangeIamBindingConditionPtrOutput
	ToDataExchangeIamBindingConditionPtrOutputWithContext(context.Context) DataExchangeIamBindingConditionPtrOutput
}

type dataExchangeIamBindingConditionPtrType DataExchangeIamBindingConditionArgs

func DataExchangeIamBindingConditionPtr(v *DataExchangeIamBindingConditionArgs) DataExchangeIamBindingConditionPtrInput {
	return (*dataExchangeIamBindingConditionPtrType)(v)
}

func (*dataExchangeIamBindingConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataExchangeIamBindingCondition)(nil)).Elem()
}

func (i *dataExchangeIamBindingConditionPtrType) ToDataExchangeIamBindingConditionPtrOutput() DataExchangeIamBindingConditionPtrOutput {
	return i.ToDataExchangeIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i *dataExchangeIamBindingConditionPtrType) ToDataExchangeIamBindingConditionPtrOutputWithContext(ctx context.Context) DataExchangeIamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataExchangeIamBindingConditionPtrOutput)
}

type DataExchangeIamBindingConditionOutput struct{ *pulumi.OutputState }

func (DataExchangeIamBindingConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataExchangeIamBindingCondition)(nil)).Elem()
}

func (o DataExchangeIamBindingConditionOutput) ToDataExchangeIamBindingConditionOutput() DataExchangeIamBindingConditionOutput {
	return o
}

func (o DataExchangeIamBindingConditionOutput) ToDataExchangeIamBindingConditionOutputWithContext(ctx context.Context) DataExchangeIamBindingConditionOutput {
	return o
}

func (o DataExchangeIamBindingConditionOutput) ToDataExchangeIamBindingConditionPtrOutput() DataExchangeIamBindingConditionPtrOutput {
	return o.ToDataExchangeIamBindingConditionPtrOutputWithContext(context.Background())
}

func (o DataExchangeIamBindingConditionOutput) ToDataExchangeIamBindingConditionPtrOutputWithContext(ctx context.Context) DataExchangeIamBindingConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataExchangeIamBindingCondition) *DataExchangeIamBindingCondition {
		return &v
	}).(DataExchangeIamBindingConditionPtrOutput)
}

func (o DataExchangeIamBindingConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataExchangeIamBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o DataExchangeIamBindingConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v DataExchangeIamBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o DataExchangeIamBindingConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v DataExchangeIamBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

type DataExchangeIamBindingConditionPtrOutput struct{ *pulumi.OutputState }

func (DataExchangeIamBindingConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataExchangeIamBindingCondition)(nil)).Elem()
}

func (o DataExchangeIamBindingConditionPtrOutput) ToDataExchangeIamBindingConditionPtrOutput() DataExchangeIamBindingConditionPtrOutput {
	return o
}

func (o DataExchangeIamBindingConditionPtrOutput) ToDataExchangeIamBindingConditionPtrOutputWithContext(ctx context.Context) DataExchangeIamBindingConditionPtrOutput {
	return o
}

func (o DataExchangeIamBindingConditionPtrOutput) Elem() DataExchangeIamBindingConditionOutput {
	return o.ApplyT(func(v *DataExchangeIamBindingCondition) DataExchangeIamBindingCondition {
		if v != nil {
			return *v
		}
		var ret DataExchangeIamBindingCondition
		return ret
	}).(DataExchangeIamBindingConditionOutput)
}

func (o DataExchangeIamBindingConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataExchangeIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o DataExchangeIamBindingConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataExchangeIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

func (o DataExchangeIamBindingConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataExchangeIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type DataExchangeIamMemberCondition struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

// DataExchangeIamMemberConditionInput is an input type that accepts DataExchangeIamMemberConditionArgs and DataExchangeIamMemberConditionOutput values.
// You can construct a concrete instance of `DataExchangeIamMemberConditionInput` via:
//
//	DataExchangeIamMemberConditionArgs{...}
type DataExchangeIamMemberConditionInput interface {
	pulumi.Input

	ToDataExchangeIamMemberConditionOutput() DataExchangeIamMemberConditionOutput
	ToDataExchangeIamMemberConditionOutputWithContext(context.Context) DataExchangeIamMemberConditionOutput
}

type DataExchangeIamMemberConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (DataExchangeIamMemberConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataExchangeIamMemberCondition)(nil)).Elem()
}

func (i DataExchangeIamMemberConditionArgs) ToDataExchangeIamMemberConditionOutput() DataExchangeIamMemberConditionOutput {
	return i.ToDataExchangeIamMemberConditionOutputWithContext(context.Background())
}

func (i DataExchangeIamMemberConditionArgs) ToDataExchangeIamMemberConditionOutputWithContext(ctx context.Context) DataExchangeIamMemberConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataExchangeIamMemberConditionOutput)
}

func (i DataExchangeIamMemberConditionArgs) ToDataExchangeIamMemberConditionPtrOutput() DataExchangeIamMemberConditionPtrOutput {
	return i.ToDataExchangeIamMemberConditionPtrOutputWithContext(context.Background())
}

func (i DataExchangeIamMemberConditionArgs) ToDataExchangeIamMemberConditionPtrOutputWithContext(ctx context.Context) DataExchangeIamMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataExchangeIamMemberConditionOutput).ToDataExchangeIamMemberConditionPtrOutputWithContext(ctx)
}

// DataExchangeIamMemberConditionPtrInput is an input type that accepts DataExchangeIamMemberConditionArgs, DataExchangeIamMemberConditionPtr and DataExchangeIamMemberConditionPtrOutput values.
// You can construct a concrete instance of `DataExchangeIamMemberConditionPtrInput` via:
//
//	        DataExchangeIamMemberConditionArgs{...}
//
//	or:
//
//	        nil
type DataExchangeIamMemberConditionPtrInput interface {
	pulumi.Input

	ToDataExchangeIamMemberConditionPtrOutput() DataExchangeIamMemberConditionPtrOutput
	ToDataExchangeIamMemberConditionPtrOutputWithContext(context.Context) DataExchangeIamMemberConditionPtrOutput
}

type dataExchangeIamMemberConditionPtrType DataExchangeIamMemberConditionArgs

func DataExchangeIamMemberConditionPtr(v *DataExchangeIamMemberConditionArgs) DataExchangeIamMemberConditionPtrInput {
	return (*dataExchangeIamMemberConditionPtrType)(v)
}

func (*dataExchangeIamMemberConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataExchangeIamMemberCondition)(nil)).Elem()
}

func (i *dataExchangeIamMemberConditionPtrType) ToDataExchangeIamMemberConditionPtrOutput() DataExchangeIamMemberConditionPtrOutput {
	return i.ToDataExchangeIamMemberConditionPtrOutputWithContext(context.Background())
}

func (i *dataExchangeIamMemberConditionPtrType) ToDataExchangeIamMemberConditionPtrOutputWithContext(ctx context.Context) DataExchangeIamMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataExchangeIamMemberConditionPtrOutput)
}

type DataExchangeIamMemberConditionOutput struct{ *pulumi.OutputState }

func (DataExchangeIamMemberConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataExchangeIamMemberCondition)(nil)).Elem()
}

func (o DataExchangeIamMemberConditionOutput) ToDataExchangeIamMemberConditionOutput() DataExchangeIamMemberConditionOutput {
	return o
}

func (o DataExchangeIamMemberConditionOutput) ToDataExchangeIamMemberConditionOutputWithContext(ctx context.Context) DataExchangeIamMemberConditionOutput {
	return o
}

func (o DataExchangeIamMemberConditionOutput) ToDataExchangeIamMemberConditionPtrOutput() DataExchangeIamMemberConditionPtrOutput {
	return o.ToDataExchangeIamMemberConditionPtrOutputWithContext(context.Background())
}

func (o DataExchangeIamMemberConditionOutput) ToDataExchangeIamMemberConditionPtrOutputWithContext(ctx context.Context) DataExchangeIamMemberConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataExchangeIamMemberCondition) *DataExchangeIamMemberCondition {
		return &v
	}).(DataExchangeIamMemberConditionPtrOutput)
}

func (o DataExchangeIamMemberConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataExchangeIamMemberCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o DataExchangeIamMemberConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v DataExchangeIamMemberCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o DataExchangeIamMemberConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v DataExchangeIamMemberCondition) string { return v.Title }).(pulumi.StringOutput)
}

type DataExchangeIamMemberConditionPtrOutput struct{ *pulumi.OutputState }

func (DataExchangeIamMemberConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataExchangeIamMemberCondition)(nil)).Elem()
}

func (o DataExchangeIamMemberConditionPtrOutput) ToDataExchangeIamMemberConditionPtrOutput() DataExchangeIamMemberConditionPtrOutput {
	return o
}

func (o DataExchangeIamMemberConditionPtrOutput) ToDataExchangeIamMemberConditionPtrOutputWithContext(ctx context.Context) DataExchangeIamMemberConditionPtrOutput {
	return o
}

func (o DataExchangeIamMemberConditionPtrOutput) Elem() DataExchangeIamMemberConditionOutput {
	return o.ApplyT(func(v *DataExchangeIamMemberCondition) DataExchangeIamMemberCondition {
		if v != nil {
			return *v
		}
		var ret DataExchangeIamMemberCondition
		return ret
	}).(DataExchangeIamMemberConditionOutput)
}

func (o DataExchangeIamMemberConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataExchangeIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o DataExchangeIamMemberConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataExchangeIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

func (o DataExchangeIamMemberConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataExchangeIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type DataExchangeSharingEnvironmentConfig struct {
	// Data Clean Room (DCR), used for privacy-safe and secured data sharing.
	DcrExchangeConfig *DataExchangeSharingEnvironmentConfigDcrExchangeConfig `pulumi:"dcrExchangeConfig"`
	// Default Analytics Hub data exchange, used for secured data sharing.
	DefaultExchangeConfig *DataExchangeSharingEnvironmentConfigDefaultExchangeConfig `pulumi:"defaultExchangeConfig"`
}

// DataExchangeSharingEnvironmentConfigInput is an input type that accepts DataExchangeSharingEnvironmentConfigArgs and DataExchangeSharingEnvironmentConfigOutput values.
// You can construct a concrete instance of `DataExchangeSharingEnvironmentConfigInput` via:
//
//	DataExchangeSharingEnvironmentConfigArgs{...}
type DataExchangeSharingEnvironmentConfigInput interface {
	pulumi.Input

	ToDataExchangeSharingEnvironmentConfigOutput() DataExchangeSharingEnvironmentConfigOutput
	ToDataExchangeSharingEnvironmentConfigOutputWithContext(context.Context) DataExchangeSharingEnvironmentConfigOutput
}

type DataExchangeSharingEnvironmentConfigArgs struct {
	// Data Clean Room (DCR), used for privacy-safe and secured data sharing.
	DcrExchangeConfig DataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrInput `pulumi:"dcrExchangeConfig"`
	// Default Analytics Hub data exchange, used for secured data sharing.
	DefaultExchangeConfig DataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrInput `pulumi:"defaultExchangeConfig"`
}

func (DataExchangeSharingEnvironmentConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataExchangeSharingEnvironmentConfig)(nil)).Elem()
}

func (i DataExchangeSharingEnvironmentConfigArgs) ToDataExchangeSharingEnvironmentConfigOutput() DataExchangeSharingEnvironmentConfigOutput {
	return i.ToDataExchangeSharingEnvironmentConfigOutputWithContext(context.Background())
}

func (i DataExchangeSharingEnvironmentConfigArgs) ToDataExchangeSharingEnvironmentConfigOutputWithContext(ctx context.Context) DataExchangeSharingEnvironmentConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataExchangeSharingEnvironmentConfigOutput)
}

func (i DataExchangeSharingEnvironmentConfigArgs) ToDataExchangeSharingEnvironmentConfigPtrOutput() DataExchangeSharingEnvironmentConfigPtrOutput {
	return i.ToDataExchangeSharingEnvironmentConfigPtrOutputWithContext(context.Background())
}

func (i DataExchangeSharingEnvironmentConfigArgs) ToDataExchangeSharingEnvironmentConfigPtrOutputWithContext(ctx context.Context) DataExchangeSharingEnvironmentConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataExchangeSharingEnvironmentConfigOutput).ToDataExchangeSharingEnvironmentConfigPtrOutputWithContext(ctx)
}

// DataExchangeSharingEnvironmentConfigPtrInput is an input type that accepts DataExchangeSharingEnvironmentConfigArgs, DataExchangeSharingEnvironmentConfigPtr and DataExchangeSharingEnvironmentConfigPtrOutput values.
// You can construct a concrete instance of `DataExchangeSharingEnvironmentConfigPtrInput` via:
//
//	        DataExchangeSharingEnvironmentConfigArgs{...}
//
//	or:
//
//	        nil
type DataExchangeSharingEnvironmentConfigPtrInput interface {
	pulumi.Input

	ToDataExchangeSharingEnvironmentConfigPtrOutput() DataExchangeSharingEnvironmentConfigPtrOutput
	ToDataExchangeSharingEnvironmentConfigPtrOutputWithContext(context.Context) DataExchangeSharingEnvironmentConfigPtrOutput
}

type dataExchangeSharingEnvironmentConfigPtrType DataExchangeSharingEnvironmentConfigArgs

func DataExchangeSharingEnvironmentConfigPtr(v *DataExchangeSharingEnvironmentConfigArgs) DataExchangeSharingEnvironmentConfigPtrInput {
	return (*dataExchangeSharingEnvironmentConfigPtrType)(v)
}

func (*dataExchangeSharingEnvironmentConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataExchangeSharingEnvironmentConfig)(nil)).Elem()
}

func (i *dataExchangeSharingEnvironmentConfigPtrType) ToDataExchangeSharingEnvironmentConfigPtrOutput() DataExchangeSharingEnvironmentConfigPtrOutput {
	return i.ToDataExchangeSharingEnvironmentConfigPtrOutputWithContext(context.Background())
}

func (i *dataExchangeSharingEnvironmentConfigPtrType) ToDataExchangeSharingEnvironmentConfigPtrOutputWithContext(ctx context.Context) DataExchangeSharingEnvironmentConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataExchangeSharingEnvironmentConfigPtrOutput)
}

type DataExchangeSharingEnvironmentConfigOutput struct{ *pulumi.OutputState }

func (DataExchangeSharingEnvironmentConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataExchangeSharingEnvironmentConfig)(nil)).Elem()
}

func (o DataExchangeSharingEnvironmentConfigOutput) ToDataExchangeSharingEnvironmentConfigOutput() DataExchangeSharingEnvironmentConfigOutput {
	return o
}

func (o DataExchangeSharingEnvironmentConfigOutput) ToDataExchangeSharingEnvironmentConfigOutputWithContext(ctx context.Context) DataExchangeSharingEnvironmentConfigOutput {
	return o
}

func (o DataExchangeSharingEnvironmentConfigOutput) ToDataExchangeSharingEnvironmentConfigPtrOutput() DataExchangeSharingEnvironmentConfigPtrOutput {
	return o.ToDataExchangeSharingEnvironmentConfigPtrOutputWithContext(context.Background())
}

func (o DataExchangeSharingEnvironmentConfigOutput) ToDataExchangeSharingEnvironmentConfigPtrOutputWithContext(ctx context.Context) DataExchangeSharingEnvironmentConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataExchangeSharingEnvironmentConfig) *DataExchangeSharingEnvironmentConfig {
		return &v
	}).(DataExchangeSharingEnvironmentConfigPtrOutput)
}

// Data Clean Room (DCR), used for privacy-safe and secured data sharing.
func (o DataExchangeSharingEnvironmentConfigOutput) DcrExchangeConfig() DataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrOutput {
	return o.ApplyT(func(v DataExchangeSharingEnvironmentConfig) *DataExchangeSharingEnvironmentConfigDcrExchangeConfig {
		return v.DcrExchangeConfig
	}).(DataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrOutput)
}

// Default Analytics Hub data exchange, used for secured data sharing.
func (o DataExchangeSharingEnvironmentConfigOutput) DefaultExchangeConfig() DataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrOutput {
	return o.ApplyT(func(v DataExchangeSharingEnvironmentConfig) *DataExchangeSharingEnvironmentConfigDefaultExchangeConfig {
		return v.DefaultExchangeConfig
	}).(DataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrOutput)
}

type DataExchangeSharingEnvironmentConfigPtrOutput struct{ *pulumi.OutputState }

func (DataExchangeSharingEnvironmentConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataExchangeSharingEnvironmentConfig)(nil)).Elem()
}

func (o DataExchangeSharingEnvironmentConfigPtrOutput) ToDataExchangeSharingEnvironmentConfigPtrOutput() DataExchangeSharingEnvironmentConfigPtrOutput {
	return o
}

func (o DataExchangeSharingEnvironmentConfigPtrOutput) ToDataExchangeSharingEnvironmentConfigPtrOutputWithContext(ctx context.Context) DataExchangeSharingEnvironmentConfigPtrOutput {
	return o
}

func (o DataExchangeSharingEnvironmentConfigPtrOutput) Elem() DataExchangeSharingEnvironmentConfigOutput {
	return o.ApplyT(func(v *DataExchangeSharingEnvironmentConfig) DataExchangeSharingEnvironmentConfig {
		if v != nil {
			return *v
		}
		var ret DataExchangeSharingEnvironmentConfig
		return ret
	}).(DataExchangeSharingEnvironmentConfigOutput)
}

// Data Clean Room (DCR), used for privacy-safe and secured data sharing.
func (o DataExchangeSharingEnvironmentConfigPtrOutput) DcrExchangeConfig() DataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrOutput {
	return o.ApplyT(func(v *DataExchangeSharingEnvironmentConfig) *DataExchangeSharingEnvironmentConfigDcrExchangeConfig {
		if v == nil {
			return nil
		}
		return v.DcrExchangeConfig
	}).(DataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrOutput)
}

// Default Analytics Hub data exchange, used for secured data sharing.
func (o DataExchangeSharingEnvironmentConfigPtrOutput) DefaultExchangeConfig() DataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrOutput {
	return o.ApplyT(func(v *DataExchangeSharingEnvironmentConfig) *DataExchangeSharingEnvironmentConfigDefaultExchangeConfig {
		if v == nil {
			return nil
		}
		return v.DefaultExchangeConfig
	}).(DataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrOutput)
}

type DataExchangeSharingEnvironmentConfigDcrExchangeConfig struct {
}

// DataExchangeSharingEnvironmentConfigDcrExchangeConfigInput is an input type that accepts DataExchangeSharingEnvironmentConfigDcrExchangeConfigArgs and DataExchangeSharingEnvironmentConfigDcrExchangeConfigOutput values.
// You can construct a concrete instance of `DataExchangeSharingEnvironmentConfigDcrExchangeConfigInput` via:
//
//	DataExchangeSharingEnvironmentConfigDcrExchangeConfigArgs{...}
type DataExchangeSharingEnvironmentConfigDcrExchangeConfigInput interface {
	pulumi.Input

	ToDataExchangeSharingEnvironmentConfigDcrExchangeConfigOutput() DataExchangeSharingEnvironmentConfigDcrExchangeConfigOutput
	ToDataExchangeSharingEnvironmentConfigDcrExchangeConfigOutputWithContext(context.Context) DataExchangeSharingEnvironmentConfigDcrExchangeConfigOutput
}

type DataExchangeSharingEnvironmentConfigDcrExchangeConfigArgs struct {
}

func (DataExchangeSharingEnvironmentConfigDcrExchangeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataExchangeSharingEnvironmentConfigDcrExchangeConfig)(nil)).Elem()
}

func (i DataExchangeSharingEnvironmentConfigDcrExchangeConfigArgs) ToDataExchangeSharingEnvironmentConfigDcrExchangeConfigOutput() DataExchangeSharingEnvironmentConfigDcrExchangeConfigOutput {
	return i.ToDataExchangeSharingEnvironmentConfigDcrExchangeConfigOutputWithContext(context.Background())
}

func (i DataExchangeSharingEnvironmentConfigDcrExchangeConfigArgs) ToDataExchangeSharingEnvironmentConfigDcrExchangeConfigOutputWithContext(ctx context.Context) DataExchangeSharingEnvironmentConfigDcrExchangeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataExchangeSharingEnvironmentConfigDcrExchangeConfigOutput)
}

func (i DataExchangeSharingEnvironmentConfigDcrExchangeConfigArgs) ToDataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrOutput() DataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrOutput {
	return i.ToDataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrOutputWithContext(context.Background())
}

func (i DataExchangeSharingEnvironmentConfigDcrExchangeConfigArgs) ToDataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrOutputWithContext(ctx context.Context) DataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataExchangeSharingEnvironmentConfigDcrExchangeConfigOutput).ToDataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrOutputWithContext(ctx)
}

// DataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrInput is an input type that accepts DataExchangeSharingEnvironmentConfigDcrExchangeConfigArgs, DataExchangeSharingEnvironmentConfigDcrExchangeConfigPtr and DataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrOutput values.
// You can construct a concrete instance of `DataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrInput` via:
//
//	        DataExchangeSharingEnvironmentConfigDcrExchangeConfigArgs{...}
//
//	or:
//
//	        nil
type DataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrInput interface {
	pulumi.Input

	ToDataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrOutput() DataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrOutput
	ToDataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrOutputWithContext(context.Context) DataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrOutput
}

type dataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrType DataExchangeSharingEnvironmentConfigDcrExchangeConfigArgs

func DataExchangeSharingEnvironmentConfigDcrExchangeConfigPtr(v *DataExchangeSharingEnvironmentConfigDcrExchangeConfigArgs) DataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrInput {
	return (*dataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrType)(v)
}

func (*dataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataExchangeSharingEnvironmentConfigDcrExchangeConfig)(nil)).Elem()
}

func (i *dataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrType) ToDataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrOutput() DataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrOutput {
	return i.ToDataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrOutputWithContext(context.Background())
}

func (i *dataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrType) ToDataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrOutputWithContext(ctx context.Context) DataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrOutput)
}

type DataExchangeSharingEnvironmentConfigDcrExchangeConfigOutput struct{ *pulumi.OutputState }

func (DataExchangeSharingEnvironmentConfigDcrExchangeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataExchangeSharingEnvironmentConfigDcrExchangeConfig)(nil)).Elem()
}

func (o DataExchangeSharingEnvironmentConfigDcrExchangeConfigOutput) ToDataExchangeSharingEnvironmentConfigDcrExchangeConfigOutput() DataExchangeSharingEnvironmentConfigDcrExchangeConfigOutput {
	return o
}

func (o DataExchangeSharingEnvironmentConfigDcrExchangeConfigOutput) ToDataExchangeSharingEnvironmentConfigDcrExchangeConfigOutputWithContext(ctx context.Context) DataExchangeSharingEnvironmentConfigDcrExchangeConfigOutput {
	return o
}

func (o DataExchangeSharingEnvironmentConfigDcrExchangeConfigOutput) ToDataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrOutput() DataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrOutput {
	return o.ToDataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrOutputWithContext(context.Background())
}

func (o DataExchangeSharingEnvironmentConfigDcrExchangeConfigOutput) ToDataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrOutputWithContext(ctx context.Context) DataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataExchangeSharingEnvironmentConfigDcrExchangeConfig) *DataExchangeSharingEnvironmentConfigDcrExchangeConfig {
		return &v
	}).(DataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrOutput)
}

type DataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrOutput struct{ *pulumi.OutputState }

func (DataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataExchangeSharingEnvironmentConfigDcrExchangeConfig)(nil)).Elem()
}

func (o DataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrOutput) ToDataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrOutput() DataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrOutput {
	return o
}

func (o DataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrOutput) ToDataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrOutputWithContext(ctx context.Context) DataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrOutput {
	return o
}

func (o DataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrOutput) Elem() DataExchangeSharingEnvironmentConfigDcrExchangeConfigOutput {
	return o.ApplyT(func(v *DataExchangeSharingEnvironmentConfigDcrExchangeConfig) DataExchangeSharingEnvironmentConfigDcrExchangeConfig {
		if v != nil {
			return *v
		}
		var ret DataExchangeSharingEnvironmentConfigDcrExchangeConfig
		return ret
	}).(DataExchangeSharingEnvironmentConfigDcrExchangeConfigOutput)
}

type DataExchangeSharingEnvironmentConfigDefaultExchangeConfig struct {
}

// DataExchangeSharingEnvironmentConfigDefaultExchangeConfigInput is an input type that accepts DataExchangeSharingEnvironmentConfigDefaultExchangeConfigArgs and DataExchangeSharingEnvironmentConfigDefaultExchangeConfigOutput values.
// You can construct a concrete instance of `DataExchangeSharingEnvironmentConfigDefaultExchangeConfigInput` via:
//
//	DataExchangeSharingEnvironmentConfigDefaultExchangeConfigArgs{...}
type DataExchangeSharingEnvironmentConfigDefaultExchangeConfigInput interface {
	pulumi.Input

	ToDataExchangeSharingEnvironmentConfigDefaultExchangeConfigOutput() DataExchangeSharingEnvironmentConfigDefaultExchangeConfigOutput
	ToDataExchangeSharingEnvironmentConfigDefaultExchangeConfigOutputWithContext(context.Context) DataExchangeSharingEnvironmentConfigDefaultExchangeConfigOutput
}

type DataExchangeSharingEnvironmentConfigDefaultExchangeConfigArgs struct {
}

func (DataExchangeSharingEnvironmentConfigDefaultExchangeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataExchangeSharingEnvironmentConfigDefaultExchangeConfig)(nil)).Elem()
}

func (i DataExchangeSharingEnvironmentConfigDefaultExchangeConfigArgs) ToDataExchangeSharingEnvironmentConfigDefaultExchangeConfigOutput() DataExchangeSharingEnvironmentConfigDefaultExchangeConfigOutput {
	return i.ToDataExchangeSharingEnvironmentConfigDefaultExchangeConfigOutputWithContext(context.Background())
}

func (i DataExchangeSharingEnvironmentConfigDefaultExchangeConfigArgs) ToDataExchangeSharingEnvironmentConfigDefaultExchangeConfigOutputWithContext(ctx context.Context) DataExchangeSharingEnvironmentConfigDefaultExchangeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataExchangeSharingEnvironmentConfigDefaultExchangeConfigOutput)
}

func (i DataExchangeSharingEnvironmentConfigDefaultExchangeConfigArgs) ToDataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrOutput() DataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrOutput {
	return i.ToDataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrOutputWithContext(context.Background())
}

func (i DataExchangeSharingEnvironmentConfigDefaultExchangeConfigArgs) ToDataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrOutputWithContext(ctx context.Context) DataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataExchangeSharingEnvironmentConfigDefaultExchangeConfigOutput).ToDataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrOutputWithContext(ctx)
}

// DataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrInput is an input type that accepts DataExchangeSharingEnvironmentConfigDefaultExchangeConfigArgs, DataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtr and DataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrOutput values.
// You can construct a concrete instance of `DataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrInput` via:
//
//	        DataExchangeSharingEnvironmentConfigDefaultExchangeConfigArgs{...}
//
//	or:
//
//	        nil
type DataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrInput interface {
	pulumi.Input

	ToDataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrOutput() DataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrOutput
	ToDataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrOutputWithContext(context.Context) DataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrOutput
}

type dataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrType DataExchangeSharingEnvironmentConfigDefaultExchangeConfigArgs

func DataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtr(v *DataExchangeSharingEnvironmentConfigDefaultExchangeConfigArgs) DataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrInput {
	return (*dataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrType)(v)
}

func (*dataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataExchangeSharingEnvironmentConfigDefaultExchangeConfig)(nil)).Elem()
}

func (i *dataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrType) ToDataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrOutput() DataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrOutput {
	return i.ToDataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrOutputWithContext(context.Background())
}

func (i *dataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrType) ToDataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrOutputWithContext(ctx context.Context) DataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrOutput)
}

type DataExchangeSharingEnvironmentConfigDefaultExchangeConfigOutput struct{ *pulumi.OutputState }

func (DataExchangeSharingEnvironmentConfigDefaultExchangeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataExchangeSharingEnvironmentConfigDefaultExchangeConfig)(nil)).Elem()
}

func (o DataExchangeSharingEnvironmentConfigDefaultExchangeConfigOutput) ToDataExchangeSharingEnvironmentConfigDefaultExchangeConfigOutput() DataExchangeSharingEnvironmentConfigDefaultExchangeConfigOutput {
	return o
}

func (o DataExchangeSharingEnvironmentConfigDefaultExchangeConfigOutput) ToDataExchangeSharingEnvironmentConfigDefaultExchangeConfigOutputWithContext(ctx context.Context) DataExchangeSharingEnvironmentConfigDefaultExchangeConfigOutput {
	return o
}

func (o DataExchangeSharingEnvironmentConfigDefaultExchangeConfigOutput) ToDataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrOutput() DataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrOutput {
	return o.ToDataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrOutputWithContext(context.Background())
}

func (o DataExchangeSharingEnvironmentConfigDefaultExchangeConfigOutput) ToDataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrOutputWithContext(ctx context.Context) DataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataExchangeSharingEnvironmentConfigDefaultExchangeConfig) *DataExchangeSharingEnvironmentConfigDefaultExchangeConfig {
		return &v
	}).(DataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrOutput)
}

type DataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrOutput struct{ *pulumi.OutputState }

func (DataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataExchangeSharingEnvironmentConfigDefaultExchangeConfig)(nil)).Elem()
}

func (o DataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrOutput) ToDataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrOutput() DataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrOutput {
	return o
}

func (o DataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrOutput) ToDataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrOutputWithContext(ctx context.Context) DataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrOutput {
	return o
}

func (o DataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrOutput) Elem() DataExchangeSharingEnvironmentConfigDefaultExchangeConfigOutput {
	return o.ApplyT(func(v *DataExchangeSharingEnvironmentConfigDefaultExchangeConfig) DataExchangeSharingEnvironmentConfigDefaultExchangeConfig {
		if v != nil {
			return *v
		}
		var ret DataExchangeSharingEnvironmentConfigDefaultExchangeConfig
		return ret
	}).(DataExchangeSharingEnvironmentConfigDefaultExchangeConfigOutput)
}

type DataExchangeSubscriptionDestinationDataset struct {
	// A reference that identifies the destination dataset.
	// Structure is documented below.
	DatasetReference DataExchangeSubscriptionDestinationDatasetDatasetReference `pulumi:"datasetReference"`
	// A user-friendly description of the dataset.
	Description *string `pulumi:"description"`
	// A descriptive name for the dataset.
	FriendlyName *string `pulumi:"friendlyName"`
	// The labels associated with this dataset. You can use these to
	// organize and group your datasets.
	Labels map[string]string `pulumi:"labels"`
	// The geographic location where the dataset should reside.
	// See https://cloud.google.com/bigquery/docs/locations for supported locations.
	Location string `pulumi:"location"`
}

// DataExchangeSubscriptionDestinationDatasetInput is an input type that accepts DataExchangeSubscriptionDestinationDatasetArgs and DataExchangeSubscriptionDestinationDatasetOutput values.
// You can construct a concrete instance of `DataExchangeSubscriptionDestinationDatasetInput` via:
//
//	DataExchangeSubscriptionDestinationDatasetArgs{...}
type DataExchangeSubscriptionDestinationDatasetInput interface {
	pulumi.Input

	ToDataExchangeSubscriptionDestinationDatasetOutput() DataExchangeSubscriptionDestinationDatasetOutput
	ToDataExchangeSubscriptionDestinationDatasetOutputWithContext(context.Context) DataExchangeSubscriptionDestinationDatasetOutput
}

type DataExchangeSubscriptionDestinationDatasetArgs struct {
	// A reference that identifies the destination dataset.
	// Structure is documented below.
	DatasetReference DataExchangeSubscriptionDestinationDatasetDatasetReferenceInput `pulumi:"datasetReference"`
	// A user-friendly description of the dataset.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// A descriptive name for the dataset.
	FriendlyName pulumi.StringPtrInput `pulumi:"friendlyName"`
	// The labels associated with this dataset. You can use these to
	// organize and group your datasets.
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// The geographic location where the dataset should reside.
	// See https://cloud.google.com/bigquery/docs/locations for supported locations.
	Location pulumi.StringInput `pulumi:"location"`
}

func (DataExchangeSubscriptionDestinationDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataExchangeSubscriptionDestinationDataset)(nil)).Elem()
}

func (i DataExchangeSubscriptionDestinationDatasetArgs) ToDataExchangeSubscriptionDestinationDatasetOutput() DataExchangeSubscriptionDestinationDatasetOutput {
	return i.ToDataExchangeSubscriptionDestinationDatasetOutputWithContext(context.Background())
}

func (i DataExchangeSubscriptionDestinationDatasetArgs) ToDataExchangeSubscriptionDestinationDatasetOutputWithContext(ctx context.Context) DataExchangeSubscriptionDestinationDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataExchangeSubscriptionDestinationDatasetOutput)
}

func (i DataExchangeSubscriptionDestinationDatasetArgs) ToDataExchangeSubscriptionDestinationDatasetPtrOutput() DataExchangeSubscriptionDestinationDatasetPtrOutput {
	return i.ToDataExchangeSubscriptionDestinationDatasetPtrOutputWithContext(context.Background())
}

func (i DataExchangeSubscriptionDestinationDatasetArgs) ToDataExchangeSubscriptionDestinationDatasetPtrOutputWithContext(ctx context.Context) DataExchangeSubscriptionDestinationDatasetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataExchangeSubscriptionDestinationDatasetOutput).ToDataExchangeSubscriptionDestinationDatasetPtrOutputWithContext(ctx)
}

// DataExchangeSubscriptionDestinationDatasetPtrInput is an input type that accepts DataExchangeSubscriptionDestinationDatasetArgs, DataExchangeSubscriptionDestinationDatasetPtr and DataExchangeSubscriptionDestinationDatasetPtrOutput values.
// You can construct a concrete instance of `DataExchangeSubscriptionDestinationDatasetPtrInput` via:
//
//	        DataExchangeSubscriptionDestinationDatasetArgs{...}
//
//	or:
//
//	        nil
type DataExchangeSubscriptionDestinationDatasetPtrInput interface {
	pulumi.Input

	ToDataExchangeSubscriptionDestinationDatasetPtrOutput() DataExchangeSubscriptionDestinationDatasetPtrOutput
	ToDataExchangeSubscriptionDestinationDatasetPtrOutputWithContext(context.Context) DataExchangeSubscriptionDestinationDatasetPtrOutput
}

type dataExchangeSubscriptionDestinationDatasetPtrType DataExchangeSubscriptionDestinationDatasetArgs

func DataExchangeSubscriptionDestinationDatasetPtr(v *DataExchangeSubscriptionDestinationDatasetArgs) DataExchangeSubscriptionDestinationDatasetPtrInput {
	return (*dataExchangeSubscriptionDestinationDatasetPtrType)(v)
}

func (*dataExchangeSubscriptionDestinationDatasetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataExchangeSubscriptionDestinationDataset)(nil)).Elem()
}

func (i *dataExchangeSubscriptionDestinationDatasetPtrType) ToDataExchangeSubscriptionDestinationDatasetPtrOutput() DataExchangeSubscriptionDestinationDatasetPtrOutput {
	return i.ToDataExchangeSubscriptionDestinationDatasetPtrOutputWithContext(context.Background())
}

func (i *dataExchangeSubscriptionDestinationDatasetPtrType) ToDataExchangeSubscriptionDestinationDatasetPtrOutputWithContext(ctx context.Context) DataExchangeSubscriptionDestinationDatasetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataExchangeSubscriptionDestinationDatasetPtrOutput)
}

type DataExchangeSubscriptionDestinationDatasetOutput struct{ *pulumi.OutputState }

func (DataExchangeSubscriptionDestinationDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataExchangeSubscriptionDestinationDataset)(nil)).Elem()
}

func (o DataExchangeSubscriptionDestinationDatasetOutput) ToDataExchangeSubscriptionDestinationDatasetOutput() DataExchangeSubscriptionDestinationDatasetOutput {
	return o
}

func (o DataExchangeSubscriptionDestinationDatasetOutput) ToDataExchangeSubscriptionDestinationDatasetOutputWithContext(ctx context.Context) DataExchangeSubscriptionDestinationDatasetOutput {
	return o
}

func (o DataExchangeSubscriptionDestinationDatasetOutput) ToDataExchangeSubscriptionDestinationDatasetPtrOutput() DataExchangeSubscriptionDestinationDatasetPtrOutput {
	return o.ToDataExchangeSubscriptionDestinationDatasetPtrOutputWithContext(context.Background())
}

func (o DataExchangeSubscriptionDestinationDatasetOutput) ToDataExchangeSubscriptionDestinationDatasetPtrOutputWithContext(ctx context.Context) DataExchangeSubscriptionDestinationDatasetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataExchangeSubscriptionDestinationDataset) *DataExchangeSubscriptionDestinationDataset {
		return &v
	}).(DataExchangeSubscriptionDestinationDatasetPtrOutput)
}

// A reference that identifies the destination dataset.
// Structure is documented below.
func (o DataExchangeSubscriptionDestinationDatasetOutput) DatasetReference() DataExchangeSubscriptionDestinationDatasetDatasetReferenceOutput {
	return o.ApplyT(func(v DataExchangeSubscriptionDestinationDataset) DataExchangeSubscriptionDestinationDatasetDatasetReference {
		return v.DatasetReference
	}).(DataExchangeSubscriptionDestinationDatasetDatasetReferenceOutput)
}

// A user-friendly description of the dataset.
func (o DataExchangeSubscriptionDestinationDatasetOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataExchangeSubscriptionDestinationDataset) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// A descriptive name for the dataset.
func (o DataExchangeSubscriptionDestinationDatasetOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataExchangeSubscriptionDestinationDataset) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// The labels associated with this dataset. You can use these to
// organize and group your datasets.
func (o DataExchangeSubscriptionDestinationDatasetOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v DataExchangeSubscriptionDestinationDataset) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// The geographic location where the dataset should reside.
// See https://cloud.google.com/bigquery/docs/locations for supported locations.
func (o DataExchangeSubscriptionDestinationDatasetOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v DataExchangeSubscriptionDestinationDataset) string { return v.Location }).(pulumi.StringOutput)
}

type DataExchangeSubscriptionDestinationDatasetPtrOutput struct{ *pulumi.OutputState }

func (DataExchangeSubscriptionDestinationDatasetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataExchangeSubscriptionDestinationDataset)(nil)).Elem()
}

func (o DataExchangeSubscriptionDestinationDatasetPtrOutput) ToDataExchangeSubscriptionDestinationDatasetPtrOutput() DataExchangeSubscriptionDestinationDatasetPtrOutput {
	return o
}

func (o DataExchangeSubscriptionDestinationDatasetPtrOutput) ToDataExchangeSubscriptionDestinationDatasetPtrOutputWithContext(ctx context.Context) DataExchangeSubscriptionDestinationDatasetPtrOutput {
	return o
}

func (o DataExchangeSubscriptionDestinationDatasetPtrOutput) Elem() DataExchangeSubscriptionDestinationDatasetOutput {
	return o.ApplyT(func(v *DataExchangeSubscriptionDestinationDataset) DataExchangeSubscriptionDestinationDataset {
		if v != nil {
			return *v
		}
		var ret DataExchangeSubscriptionDestinationDataset
		return ret
	}).(DataExchangeSubscriptionDestinationDatasetOutput)
}

// A reference that identifies the destination dataset.
// Structure is documented below.
func (o DataExchangeSubscriptionDestinationDatasetPtrOutput) DatasetReference() DataExchangeSubscriptionDestinationDatasetDatasetReferencePtrOutput {
	return o.ApplyT(func(v *DataExchangeSubscriptionDestinationDataset) *DataExchangeSubscriptionDestinationDatasetDatasetReference {
		if v == nil {
			return nil
		}
		return &v.DatasetReference
	}).(DataExchangeSubscriptionDestinationDatasetDatasetReferencePtrOutput)
}

// A user-friendly description of the dataset.
func (o DataExchangeSubscriptionDestinationDatasetPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataExchangeSubscriptionDestinationDataset) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// A descriptive name for the dataset.
func (o DataExchangeSubscriptionDestinationDatasetPtrOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataExchangeSubscriptionDestinationDataset) *string {
		if v == nil {
			return nil
		}
		return v.FriendlyName
	}).(pulumi.StringPtrOutput)
}

// The labels associated with this dataset. You can use these to
// organize and group your datasets.
func (o DataExchangeSubscriptionDestinationDatasetPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DataExchangeSubscriptionDestinationDataset) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// The geographic location where the dataset should reside.
// See https://cloud.google.com/bigquery/docs/locations for supported locations.
func (o DataExchangeSubscriptionDestinationDatasetPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataExchangeSubscriptionDestinationDataset) *string {
		if v == nil {
			return nil
		}
		return &v.Location
	}).(pulumi.StringPtrOutput)
}

type DataExchangeSubscriptionDestinationDatasetDatasetReference struct {
	// A unique ID for this dataset, without the project name. The ID must contain only letters (a-z, A-Z), numbers (0-9), or underscores (_). The maximum length is 1,024 characters.
	DatasetId string `pulumi:"datasetId"`
	// The ID of the project containing this dataset.
	ProjectId string `pulumi:"projectId"`
}

// DataExchangeSubscriptionDestinationDatasetDatasetReferenceInput is an input type that accepts DataExchangeSubscriptionDestinationDatasetDatasetReferenceArgs and DataExchangeSubscriptionDestinationDatasetDatasetReferenceOutput values.
// You can construct a concrete instance of `DataExchangeSubscriptionDestinationDatasetDatasetReferenceInput` via:
//
//	DataExchangeSubscriptionDestinationDatasetDatasetReferenceArgs{...}
type DataExchangeSubscriptionDestinationDatasetDatasetReferenceInput interface {
	pulumi.Input

	ToDataExchangeSubscriptionDestinationDatasetDatasetReferenceOutput() DataExchangeSubscriptionDestinationDatasetDatasetReferenceOutput
	ToDataExchangeSubscriptionDestinationDatasetDatasetReferenceOutputWithContext(context.Context) DataExchangeSubscriptionDestinationDatasetDatasetReferenceOutput
}

type DataExchangeSubscriptionDestinationDatasetDatasetReferenceArgs struct {
	// A unique ID for this dataset, without the project name. The ID must contain only letters (a-z, A-Z), numbers (0-9), or underscores (_). The maximum length is 1,024 characters.
	DatasetId pulumi.StringInput `pulumi:"datasetId"`
	// The ID of the project containing this dataset.
	ProjectId pulumi.StringInput `pulumi:"projectId"`
}

func (DataExchangeSubscriptionDestinationDatasetDatasetReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataExchangeSubscriptionDestinationDatasetDatasetReference)(nil)).Elem()
}

func (i DataExchangeSubscriptionDestinationDatasetDatasetReferenceArgs) ToDataExchangeSubscriptionDestinationDatasetDatasetReferenceOutput() DataExchangeSubscriptionDestinationDatasetDatasetReferenceOutput {
	return i.ToDataExchangeSubscriptionDestinationDatasetDatasetReferenceOutputWithContext(context.Background())
}

func (i DataExchangeSubscriptionDestinationDatasetDatasetReferenceArgs) ToDataExchangeSubscriptionDestinationDatasetDatasetReferenceOutputWithContext(ctx context.Context) DataExchangeSubscriptionDestinationDatasetDatasetReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataExchangeSubscriptionDestinationDatasetDatasetReferenceOutput)
}

func (i DataExchangeSubscriptionDestinationDatasetDatasetReferenceArgs) ToDataExchangeSubscriptionDestinationDatasetDatasetReferencePtrOutput() DataExchangeSubscriptionDestinationDatasetDatasetReferencePtrOutput {
	return i.ToDataExchangeSubscriptionDestinationDatasetDatasetReferencePtrOutputWithContext(context.Background())
}

func (i DataExchangeSubscriptionDestinationDatasetDatasetReferenceArgs) ToDataExchangeSubscriptionDestinationDatasetDatasetReferencePtrOutputWithContext(ctx context.Context) DataExchangeSubscriptionDestinationDatasetDatasetReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataExchangeSubscriptionDestinationDatasetDatasetReferenceOutput).ToDataExchangeSubscriptionDestinationDatasetDatasetReferencePtrOutputWithContext(ctx)
}

// DataExchangeSubscriptionDestinationDatasetDatasetReferencePtrInput is an input type that accepts DataExchangeSubscriptionDestinationDatasetDatasetReferenceArgs, DataExchangeSubscriptionDestinationDatasetDatasetReferencePtr and DataExchangeSubscriptionDestinationDatasetDatasetReferencePtrOutput values.
// You can construct a concrete instance of `DataExchangeSubscriptionDestinationDatasetDatasetReferencePtrInput` via:
//
//	        DataExchangeSubscriptionDestinationDatasetDatasetReferenceArgs{...}
//
//	or:
//
//	        nil
type DataExchangeSubscriptionDestinationDatasetDatasetReferencePtrInput interface {
	pulumi.Input

	ToDataExchangeSubscriptionDestinationDatasetDatasetReferencePtrOutput() DataExchangeSubscriptionDestinationDatasetDatasetReferencePtrOutput
	ToDataExchangeSubscriptionDestinationDatasetDatasetReferencePtrOutputWithContext(context.Context) DataExchangeSubscriptionDestinationDatasetDatasetReferencePtrOutput
}

type dataExchangeSubscriptionDestinationDatasetDatasetReferencePtrType DataExchangeSubscriptionDestinationDatasetDatasetReferenceArgs

func DataExchangeSubscriptionDestinationDatasetDatasetReferencePtr(v *DataExchangeSubscriptionDestinationDatasetDatasetReferenceArgs) DataExchangeSubscriptionDestinationDatasetDatasetReferencePtrInput {
	return (*dataExchangeSubscriptionDestinationDatasetDatasetReferencePtrType)(v)
}

func (*dataExchangeSubscriptionDestinationDatasetDatasetReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataExchangeSubscriptionDestinationDatasetDatasetReference)(nil)).Elem()
}

func (i *dataExchangeSubscriptionDestinationDatasetDatasetReferencePtrType) ToDataExchangeSubscriptionDestinationDatasetDatasetReferencePtrOutput() DataExchangeSubscriptionDestinationDatasetDatasetReferencePtrOutput {
	return i.ToDataExchangeSubscriptionDestinationDatasetDatasetReferencePtrOutputWithContext(context.Background())
}

func (i *dataExchangeSubscriptionDestinationDatasetDatasetReferencePtrType) ToDataExchangeSubscriptionDestinationDatasetDatasetReferencePtrOutputWithContext(ctx context.Context) DataExchangeSubscriptionDestinationDatasetDatasetReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataExchangeSubscriptionDestinationDatasetDatasetReferencePtrOutput)
}

type DataExchangeSubscriptionDestinationDatasetDatasetReferenceOutput struct{ *pulumi.OutputState }

func (DataExchangeSubscriptionDestinationDatasetDatasetReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataExchangeSubscriptionDestinationDatasetDatasetReference)(nil)).Elem()
}

func (o DataExchangeSubscriptionDestinationDatasetDatasetReferenceOutput) ToDataExchangeSubscriptionDestinationDatasetDatasetReferenceOutput() DataExchangeSubscriptionDestinationDatasetDatasetReferenceOutput {
	return o
}

func (o DataExchangeSubscriptionDestinationDatasetDatasetReferenceOutput) ToDataExchangeSubscriptionDestinationDatasetDatasetReferenceOutputWithContext(ctx context.Context) DataExchangeSubscriptionDestinationDatasetDatasetReferenceOutput {
	return o
}

func (o DataExchangeSubscriptionDestinationDatasetDatasetReferenceOutput) ToDataExchangeSubscriptionDestinationDatasetDatasetReferencePtrOutput() DataExchangeSubscriptionDestinationDatasetDatasetReferencePtrOutput {
	return o.ToDataExchangeSubscriptionDestinationDatasetDatasetReferencePtrOutputWithContext(context.Background())
}

func (o DataExchangeSubscriptionDestinationDatasetDatasetReferenceOutput) ToDataExchangeSubscriptionDestinationDatasetDatasetReferencePtrOutputWithContext(ctx context.Context) DataExchangeSubscriptionDestinationDatasetDatasetReferencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataExchangeSubscriptionDestinationDatasetDatasetReference) *DataExchangeSubscriptionDestinationDatasetDatasetReference {
		return &v
	}).(DataExchangeSubscriptionDestinationDatasetDatasetReferencePtrOutput)
}

// A unique ID for this dataset, without the project name. The ID must contain only letters (a-z, A-Z), numbers (0-9), or underscores (_). The maximum length is 1,024 characters.
func (o DataExchangeSubscriptionDestinationDatasetDatasetReferenceOutput) DatasetId() pulumi.StringOutput {
	return o.ApplyT(func(v DataExchangeSubscriptionDestinationDatasetDatasetReference) string { return v.DatasetId }).(pulumi.StringOutput)
}

// The ID of the project containing this dataset.
func (o DataExchangeSubscriptionDestinationDatasetDatasetReferenceOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v DataExchangeSubscriptionDestinationDatasetDatasetReference) string { return v.ProjectId }).(pulumi.StringOutput)
}

type DataExchangeSubscriptionDestinationDatasetDatasetReferencePtrOutput struct{ *pulumi.OutputState }

func (DataExchangeSubscriptionDestinationDatasetDatasetReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataExchangeSubscriptionDestinationDatasetDatasetReference)(nil)).Elem()
}

func (o DataExchangeSubscriptionDestinationDatasetDatasetReferencePtrOutput) ToDataExchangeSubscriptionDestinationDatasetDatasetReferencePtrOutput() DataExchangeSubscriptionDestinationDatasetDatasetReferencePtrOutput {
	return o
}

func (o DataExchangeSubscriptionDestinationDatasetDatasetReferencePtrOutput) ToDataExchangeSubscriptionDestinationDatasetDatasetReferencePtrOutputWithContext(ctx context.Context) DataExchangeSubscriptionDestinationDatasetDatasetReferencePtrOutput {
	return o
}

func (o DataExchangeSubscriptionDestinationDatasetDatasetReferencePtrOutput) Elem() DataExchangeSubscriptionDestinationDatasetDatasetReferenceOutput {
	return o.ApplyT(func(v *DataExchangeSubscriptionDestinationDatasetDatasetReference) DataExchangeSubscriptionDestinationDatasetDatasetReference {
		if v != nil {
			return *v
		}
		var ret DataExchangeSubscriptionDestinationDatasetDatasetReference
		return ret
	}).(DataExchangeSubscriptionDestinationDatasetDatasetReferenceOutput)
}

// A unique ID for this dataset, without the project name. The ID must contain only letters (a-z, A-Z), numbers (0-9), or underscores (_). The maximum length is 1,024 characters.
func (o DataExchangeSubscriptionDestinationDatasetDatasetReferencePtrOutput) DatasetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataExchangeSubscriptionDestinationDatasetDatasetReference) *string {
		if v == nil {
			return nil
		}
		return &v.DatasetId
	}).(pulumi.StringPtrOutput)
}

// The ID of the project containing this dataset.
func (o DataExchangeSubscriptionDestinationDatasetDatasetReferencePtrOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataExchangeSubscriptionDestinationDatasetDatasetReference) *string {
		if v == nil {
			return nil
		}
		return &v.ProjectId
	}).(pulumi.StringPtrOutput)
}

type DataExchangeSubscriptionLinkedDatasetMap struct {
	// (Output)
	// Output only. Name of the linked dataset, e.g. projects/subscriberproject/datasets/linkedDataset
	LinkedDataset *string `pulumi:"linkedDataset"`
	// (Output)
	// Output only. Name of the Pub/Sub subscription, e.g. projects/subscriberproject/subscriptions/subscriptions/sub_id
	LinkedPubsubSubscription *string `pulumi:"linkedPubsubSubscription"`
	// (Output)
	// Output only. Listing for which linked resource is created.
	Listing *string `pulumi:"listing"`
	// (Required) The identifier for this object. Format specified above.
	ResourceName string `pulumi:"resourceName"`
}

// DataExchangeSubscriptionLinkedDatasetMapInput is an input type that accepts DataExchangeSubscriptionLinkedDatasetMap and DataExchangeSubscriptionLinkedDatasetMapOutput values.
// You can construct a concrete instance of `DataExchangeSubscriptionLinkedDatasetMapInput` via:
//
//	DataExchangeSubscriptionLinkedDatasetMap{ "key": DataExchangeSubscriptionLinkedDatasetArgs{...} }
type DataExchangeSubscriptionLinkedDatasetMapInput interface {
	pulumi.Input

	ToDataExchangeSubscriptionLinkedDatasetMapOutput() DataExchangeSubscriptionLinkedDatasetMapOutput
	ToDataExchangeSubscriptionLinkedDatasetMapOutputWithContext(context.Context) DataExchangeSubscriptionLinkedDatasetMapOutput
}

type DataExchangeSubscriptionLinkedDatasetMapArgs struct {
	// (Output)
	// Output only. Name of the linked dataset, e.g. projects/subscriberproject/datasets/linkedDataset
	LinkedDataset pulumi.StringPtrInput `pulumi:"linkedDataset"`
	// (Output)
	// Output only. Name of the Pub/Sub subscription, e.g. projects/subscriberproject/subscriptions/subscriptions/sub_id
	LinkedPubsubSubscription pulumi.StringPtrInput `pulumi:"linkedPubsubSubscription"`
	// (Output)
	// Output only. Listing for which linked resource is created.
	Listing pulumi.StringPtrInput `pulumi:"listing"`
	// (Required) The identifier for this object. Format specified above.
	ResourceName pulumi.StringInput `pulumi:"resourceName"`
}

func (DataExchangeSubscriptionLinkedDatasetMapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataExchangeSubscriptionLinkedDatasetMap)(nil)).Elem()
}

func (i DataExchangeSubscriptionLinkedDatasetMapArgs) ToDataExchangeSubscriptionLinkedDatasetMapOutput() DataExchangeSubscriptionLinkedDatasetMapOutput {
	return i.ToDataExchangeSubscriptionLinkedDatasetMapOutputWithContext(context.Background())
}

func (i DataExchangeSubscriptionLinkedDatasetMapArgs) ToDataExchangeSubscriptionLinkedDatasetMapOutputWithContext(ctx context.Context) DataExchangeSubscriptionLinkedDatasetMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataExchangeSubscriptionLinkedDatasetMapOutput)
}

// DataExchangeSubscriptionLinkedDatasetMapArrayInput is an input type that accepts DataExchangeSubscriptionLinkedDatasetMapArray and DataExchangeSubscriptionLinkedDatasetMapArrayOutput values.
// You can construct a concrete instance of `DataExchangeSubscriptionLinkedDatasetMapArrayInput` via:
//
//	DataExchangeSubscriptionLinkedDatasetMapArray{ DataExchangeSubscriptionLinkedDatasetMapArgs{...} }
type DataExchangeSubscriptionLinkedDatasetMapArrayInput interface {
	pulumi.Input

	ToDataExchangeSubscriptionLinkedDatasetMapArrayOutput() DataExchangeSubscriptionLinkedDatasetMapArrayOutput
	ToDataExchangeSubscriptionLinkedDatasetMapArrayOutputWithContext(context.Context) DataExchangeSubscriptionLinkedDatasetMapArrayOutput
}

type DataExchangeSubscriptionLinkedDatasetMapArray []DataExchangeSubscriptionLinkedDatasetMapInput

func (DataExchangeSubscriptionLinkedDatasetMapArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataExchangeSubscriptionLinkedDatasetMap)(nil)).Elem()
}

func (i DataExchangeSubscriptionLinkedDatasetMapArray) ToDataExchangeSubscriptionLinkedDatasetMapArrayOutput() DataExchangeSubscriptionLinkedDatasetMapArrayOutput {
	return i.ToDataExchangeSubscriptionLinkedDatasetMapArrayOutputWithContext(context.Background())
}

func (i DataExchangeSubscriptionLinkedDatasetMapArray) ToDataExchangeSubscriptionLinkedDatasetMapArrayOutputWithContext(ctx context.Context) DataExchangeSubscriptionLinkedDatasetMapArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataExchangeSubscriptionLinkedDatasetMapArrayOutput)
}

type DataExchangeSubscriptionLinkedDatasetMapOutput struct{ *pulumi.OutputState }

func (DataExchangeSubscriptionLinkedDatasetMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataExchangeSubscriptionLinkedDatasetMap)(nil)).Elem()
}

func (o DataExchangeSubscriptionLinkedDatasetMapOutput) ToDataExchangeSubscriptionLinkedDatasetMapOutput() DataExchangeSubscriptionLinkedDatasetMapOutput {
	return o
}

func (o DataExchangeSubscriptionLinkedDatasetMapOutput) ToDataExchangeSubscriptionLinkedDatasetMapOutputWithContext(ctx context.Context) DataExchangeSubscriptionLinkedDatasetMapOutput {
	return o
}

// (Output)
// Output only. Name of the linked dataset, e.g. projects/subscriberproject/datasets/linkedDataset
func (o DataExchangeSubscriptionLinkedDatasetMapOutput) LinkedDataset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataExchangeSubscriptionLinkedDatasetMap) *string { return v.LinkedDataset }).(pulumi.StringPtrOutput)
}

// (Output)
// Output only. Name of the Pub/Sub subscription, e.g. projects/subscriberproject/subscriptions/subscriptions/sub_id
func (o DataExchangeSubscriptionLinkedDatasetMapOutput) LinkedPubsubSubscription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataExchangeSubscriptionLinkedDatasetMap) *string { return v.LinkedPubsubSubscription }).(pulumi.StringPtrOutput)
}

// (Output)
// Output only. Listing for which linked resource is created.
func (o DataExchangeSubscriptionLinkedDatasetMapOutput) Listing() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataExchangeSubscriptionLinkedDatasetMap) *string { return v.Listing }).(pulumi.StringPtrOutput)
}

// (Required) The identifier for this object. Format specified above.
func (o DataExchangeSubscriptionLinkedDatasetMapOutput) ResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v DataExchangeSubscriptionLinkedDatasetMap) string { return v.ResourceName }).(pulumi.StringOutput)
}

type DataExchangeSubscriptionLinkedDatasetMapArrayOutput struct{ *pulumi.OutputState }

func (DataExchangeSubscriptionLinkedDatasetMapArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataExchangeSubscriptionLinkedDatasetMap)(nil)).Elem()
}

func (o DataExchangeSubscriptionLinkedDatasetMapArrayOutput) ToDataExchangeSubscriptionLinkedDatasetMapArrayOutput() DataExchangeSubscriptionLinkedDatasetMapArrayOutput {
	return o
}

func (o DataExchangeSubscriptionLinkedDatasetMapArrayOutput) ToDataExchangeSubscriptionLinkedDatasetMapArrayOutputWithContext(ctx context.Context) DataExchangeSubscriptionLinkedDatasetMapArrayOutput {
	return o
}

func (o DataExchangeSubscriptionLinkedDatasetMapArrayOutput) Index(i pulumi.IntInput) DataExchangeSubscriptionLinkedDatasetMapOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataExchangeSubscriptionLinkedDatasetMap {
		return vs[0].([]DataExchangeSubscriptionLinkedDatasetMap)[vs[1].(int)]
	}).(DataExchangeSubscriptionLinkedDatasetMapOutput)
}

type DataExchangeSubscriptionLinkedResource struct {
	// (Output)
	// Output only. Name of the linked dataset, e.g. projects/subscriberproject/datasets/linkedDataset
	LinkedDataset *string `pulumi:"linkedDataset"`
	// (Output)
	// Output only. Listing for which linked resource is created.
	Listing *string `pulumi:"listing"`
}

// DataExchangeSubscriptionLinkedResourceInput is an input type that accepts DataExchangeSubscriptionLinkedResourceArgs and DataExchangeSubscriptionLinkedResourceOutput values.
// You can construct a concrete instance of `DataExchangeSubscriptionLinkedResourceInput` via:
//
//	DataExchangeSubscriptionLinkedResourceArgs{...}
type DataExchangeSubscriptionLinkedResourceInput interface {
	pulumi.Input

	ToDataExchangeSubscriptionLinkedResourceOutput() DataExchangeSubscriptionLinkedResourceOutput
	ToDataExchangeSubscriptionLinkedResourceOutputWithContext(context.Context) DataExchangeSubscriptionLinkedResourceOutput
}

type DataExchangeSubscriptionLinkedResourceArgs struct {
	// (Output)
	// Output only. Name of the linked dataset, e.g. projects/subscriberproject/datasets/linkedDataset
	LinkedDataset pulumi.StringPtrInput `pulumi:"linkedDataset"`
	// (Output)
	// Output only. Listing for which linked resource is created.
	Listing pulumi.StringPtrInput `pulumi:"listing"`
}

func (DataExchangeSubscriptionLinkedResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataExchangeSubscriptionLinkedResource)(nil)).Elem()
}

func (i DataExchangeSubscriptionLinkedResourceArgs) ToDataExchangeSubscriptionLinkedResourceOutput() DataExchangeSubscriptionLinkedResourceOutput {
	return i.ToDataExchangeSubscriptionLinkedResourceOutputWithContext(context.Background())
}

func (i DataExchangeSubscriptionLinkedResourceArgs) ToDataExchangeSubscriptionLinkedResourceOutputWithContext(ctx context.Context) DataExchangeSubscriptionLinkedResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataExchangeSubscriptionLinkedResourceOutput)
}

// DataExchangeSubscriptionLinkedResourceArrayInput is an input type that accepts DataExchangeSubscriptionLinkedResourceArray and DataExchangeSubscriptionLinkedResourceArrayOutput values.
// You can construct a concrete instance of `DataExchangeSubscriptionLinkedResourceArrayInput` via:
//
//	DataExchangeSubscriptionLinkedResourceArray{ DataExchangeSubscriptionLinkedResourceArgs{...} }
type DataExchangeSubscriptionLinkedResourceArrayInput interface {
	pulumi.Input

	ToDataExchangeSubscriptionLinkedResourceArrayOutput() DataExchangeSubscriptionLinkedResourceArrayOutput
	ToDataExchangeSubscriptionLinkedResourceArrayOutputWithContext(context.Context) DataExchangeSubscriptionLinkedResourceArrayOutput
}

type DataExchangeSubscriptionLinkedResourceArray []DataExchangeSubscriptionLinkedResourceInput

func (DataExchangeSubscriptionLinkedResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataExchangeSubscriptionLinkedResource)(nil)).Elem()
}

func (i DataExchangeSubscriptionLinkedResourceArray) ToDataExchangeSubscriptionLinkedResourceArrayOutput() DataExchangeSubscriptionLinkedResourceArrayOutput {
	return i.ToDataExchangeSubscriptionLinkedResourceArrayOutputWithContext(context.Background())
}

func (i DataExchangeSubscriptionLinkedResourceArray) ToDataExchangeSubscriptionLinkedResourceArrayOutputWithContext(ctx context.Context) DataExchangeSubscriptionLinkedResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataExchangeSubscriptionLinkedResourceArrayOutput)
}

type DataExchangeSubscriptionLinkedResourceOutput struct{ *pulumi.OutputState }

func (DataExchangeSubscriptionLinkedResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataExchangeSubscriptionLinkedResource)(nil)).Elem()
}

func (o DataExchangeSubscriptionLinkedResourceOutput) ToDataExchangeSubscriptionLinkedResourceOutput() DataExchangeSubscriptionLinkedResourceOutput {
	return o
}

func (o DataExchangeSubscriptionLinkedResourceOutput) ToDataExchangeSubscriptionLinkedResourceOutputWithContext(ctx context.Context) DataExchangeSubscriptionLinkedResourceOutput {
	return o
}

// (Output)
// Output only. Name of the linked dataset, e.g. projects/subscriberproject/datasets/linkedDataset
func (o DataExchangeSubscriptionLinkedResourceOutput) LinkedDataset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataExchangeSubscriptionLinkedResource) *string { return v.LinkedDataset }).(pulumi.StringPtrOutput)
}

// (Output)
// Output only. Listing for which linked resource is created.
func (o DataExchangeSubscriptionLinkedResourceOutput) Listing() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataExchangeSubscriptionLinkedResource) *string { return v.Listing }).(pulumi.StringPtrOutput)
}

type DataExchangeSubscriptionLinkedResourceArrayOutput struct{ *pulumi.OutputState }

func (DataExchangeSubscriptionLinkedResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataExchangeSubscriptionLinkedResource)(nil)).Elem()
}

func (o DataExchangeSubscriptionLinkedResourceArrayOutput) ToDataExchangeSubscriptionLinkedResourceArrayOutput() DataExchangeSubscriptionLinkedResourceArrayOutput {
	return o
}

func (o DataExchangeSubscriptionLinkedResourceArrayOutput) ToDataExchangeSubscriptionLinkedResourceArrayOutputWithContext(ctx context.Context) DataExchangeSubscriptionLinkedResourceArrayOutput {
	return o
}

func (o DataExchangeSubscriptionLinkedResourceArrayOutput) Index(i pulumi.IntInput) DataExchangeSubscriptionLinkedResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataExchangeSubscriptionLinkedResource {
		return vs[0].([]DataExchangeSubscriptionLinkedResource)[vs[1].(int)]
	}).(DataExchangeSubscriptionLinkedResourceOutput)
}

type ListingBigqueryDataset struct {
	// Resource name of the dataset source for this listing. e.g. projects/myproject/datasets/123
	Dataset string `pulumi:"dataset"`
	// Resource in this dataset that is selectively shared. This field is required for data clean room exchanges.
	// Structure is documented below.
	SelectedResources []ListingBigqueryDatasetSelectedResource `pulumi:"selectedResources"`
}

// ListingBigqueryDatasetInput is an input type that accepts ListingBigqueryDatasetArgs and ListingBigqueryDatasetOutput values.
// You can construct a concrete instance of `ListingBigqueryDatasetInput` via:
//
//	ListingBigqueryDatasetArgs{...}
type ListingBigqueryDatasetInput interface {
	pulumi.Input

	ToListingBigqueryDatasetOutput() ListingBigqueryDatasetOutput
	ToListingBigqueryDatasetOutputWithContext(context.Context) ListingBigqueryDatasetOutput
}

type ListingBigqueryDatasetArgs struct {
	// Resource name of the dataset source for this listing. e.g. projects/myproject/datasets/123
	Dataset pulumi.StringInput `pulumi:"dataset"`
	// Resource in this dataset that is selectively shared. This field is required for data clean room exchanges.
	// Structure is documented below.
	SelectedResources ListingBigqueryDatasetSelectedResourceArrayInput `pulumi:"selectedResources"`
}

func (ListingBigqueryDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListingBigqueryDataset)(nil)).Elem()
}

func (i ListingBigqueryDatasetArgs) ToListingBigqueryDatasetOutput() ListingBigqueryDatasetOutput {
	return i.ToListingBigqueryDatasetOutputWithContext(context.Background())
}

func (i ListingBigqueryDatasetArgs) ToListingBigqueryDatasetOutputWithContext(ctx context.Context) ListingBigqueryDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListingBigqueryDatasetOutput)
}

func (i ListingBigqueryDatasetArgs) ToListingBigqueryDatasetPtrOutput() ListingBigqueryDatasetPtrOutput {
	return i.ToListingBigqueryDatasetPtrOutputWithContext(context.Background())
}

func (i ListingBigqueryDatasetArgs) ToListingBigqueryDatasetPtrOutputWithContext(ctx context.Context) ListingBigqueryDatasetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListingBigqueryDatasetOutput).ToListingBigqueryDatasetPtrOutputWithContext(ctx)
}

// ListingBigqueryDatasetPtrInput is an input type that accepts ListingBigqueryDatasetArgs, ListingBigqueryDatasetPtr and ListingBigqueryDatasetPtrOutput values.
// You can construct a concrete instance of `ListingBigqueryDatasetPtrInput` via:
//
//	        ListingBigqueryDatasetArgs{...}
//
//	or:
//
//	        nil
type ListingBigqueryDatasetPtrInput interface {
	pulumi.Input

	ToListingBigqueryDatasetPtrOutput() ListingBigqueryDatasetPtrOutput
	ToListingBigqueryDatasetPtrOutputWithContext(context.Context) ListingBigqueryDatasetPtrOutput
}

type listingBigqueryDatasetPtrType ListingBigqueryDatasetArgs

func ListingBigqueryDatasetPtr(v *ListingBigqueryDatasetArgs) ListingBigqueryDatasetPtrInput {
	return (*listingBigqueryDatasetPtrType)(v)
}

func (*listingBigqueryDatasetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ListingBigqueryDataset)(nil)).Elem()
}

func (i *listingBigqueryDatasetPtrType) ToListingBigqueryDatasetPtrOutput() ListingBigqueryDatasetPtrOutput {
	return i.ToListingBigqueryDatasetPtrOutputWithContext(context.Background())
}

func (i *listingBigqueryDatasetPtrType) ToListingBigqueryDatasetPtrOutputWithContext(ctx context.Context) ListingBigqueryDatasetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListingBigqueryDatasetPtrOutput)
}

type ListingBigqueryDatasetOutput struct{ *pulumi.OutputState }

func (ListingBigqueryDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListingBigqueryDataset)(nil)).Elem()
}

func (o ListingBigqueryDatasetOutput) ToListingBigqueryDatasetOutput() ListingBigqueryDatasetOutput {
	return o
}

func (o ListingBigqueryDatasetOutput) ToListingBigqueryDatasetOutputWithContext(ctx context.Context) ListingBigqueryDatasetOutput {
	return o
}

func (o ListingBigqueryDatasetOutput) ToListingBigqueryDatasetPtrOutput() ListingBigqueryDatasetPtrOutput {
	return o.ToListingBigqueryDatasetPtrOutputWithContext(context.Background())
}

func (o ListingBigqueryDatasetOutput) ToListingBigqueryDatasetPtrOutputWithContext(ctx context.Context) ListingBigqueryDatasetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ListingBigqueryDataset) *ListingBigqueryDataset {
		return &v
	}).(ListingBigqueryDatasetPtrOutput)
}

// Resource name of the dataset source for this listing. e.g. projects/myproject/datasets/123
func (o ListingBigqueryDatasetOutput) Dataset() pulumi.StringOutput {
	return o.ApplyT(func(v ListingBigqueryDataset) string { return v.Dataset }).(pulumi.StringOutput)
}

// Resource in this dataset that is selectively shared. This field is required for data clean room exchanges.
// Structure is documented below.
func (o ListingBigqueryDatasetOutput) SelectedResources() ListingBigqueryDatasetSelectedResourceArrayOutput {
	return o.ApplyT(func(v ListingBigqueryDataset) []ListingBigqueryDatasetSelectedResource { return v.SelectedResources }).(ListingBigqueryDatasetSelectedResourceArrayOutput)
}

type ListingBigqueryDatasetPtrOutput struct{ *pulumi.OutputState }

func (ListingBigqueryDatasetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListingBigqueryDataset)(nil)).Elem()
}

func (o ListingBigqueryDatasetPtrOutput) ToListingBigqueryDatasetPtrOutput() ListingBigqueryDatasetPtrOutput {
	return o
}

func (o ListingBigqueryDatasetPtrOutput) ToListingBigqueryDatasetPtrOutputWithContext(ctx context.Context) ListingBigqueryDatasetPtrOutput {
	return o
}

func (o ListingBigqueryDatasetPtrOutput) Elem() ListingBigqueryDatasetOutput {
	return o.ApplyT(func(v *ListingBigqueryDataset) ListingBigqueryDataset {
		if v != nil {
			return *v
		}
		var ret ListingBigqueryDataset
		return ret
	}).(ListingBigqueryDatasetOutput)
}

// Resource name of the dataset source for this listing. e.g. projects/myproject/datasets/123
func (o ListingBigqueryDatasetPtrOutput) Dataset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListingBigqueryDataset) *string {
		if v == nil {
			return nil
		}
		return &v.Dataset
	}).(pulumi.StringPtrOutput)
}

// Resource in this dataset that is selectively shared. This field is required for data clean room exchanges.
// Structure is documented below.
func (o ListingBigqueryDatasetPtrOutput) SelectedResources() ListingBigqueryDatasetSelectedResourceArrayOutput {
	return o.ApplyT(func(v *ListingBigqueryDataset) []ListingBigqueryDatasetSelectedResource {
		if v == nil {
			return nil
		}
		return v.SelectedResources
	}).(ListingBigqueryDatasetSelectedResourceArrayOutput)
}

type ListingBigqueryDatasetSelectedResource struct {
	// Format: For routine: projects/{projectId}/datasets/{datasetId}/routines/{routineId} Example:"projects/test_project/datasets/test_dataset/routines/test_routine"
	Routine *string `pulumi:"routine"`
	// Format: For table: projects/{projectId}/datasets/{datasetId}/tables/{tableId} Example:"projects/test_project/datasets/test_dataset/tables/test_table"
	Table *string `pulumi:"table"`
}

// ListingBigqueryDatasetSelectedResourceInput is an input type that accepts ListingBigqueryDatasetSelectedResourceArgs and ListingBigqueryDatasetSelectedResourceOutput values.
// You can construct a concrete instance of `ListingBigqueryDatasetSelectedResourceInput` via:
//
//	ListingBigqueryDatasetSelectedResourceArgs{...}
type ListingBigqueryDatasetSelectedResourceInput interface {
	pulumi.Input

	ToListingBigqueryDatasetSelectedResourceOutput() ListingBigqueryDatasetSelectedResourceOutput
	ToListingBigqueryDatasetSelectedResourceOutputWithContext(context.Context) ListingBigqueryDatasetSelectedResourceOutput
}

type ListingBigqueryDatasetSelectedResourceArgs struct {
	// Format: For routine: projects/{projectId}/datasets/{datasetId}/routines/{routineId} Example:"projects/test_project/datasets/test_dataset/routines/test_routine"
	Routine pulumi.StringPtrInput `pulumi:"routine"`
	// Format: For table: projects/{projectId}/datasets/{datasetId}/tables/{tableId} Example:"projects/test_project/datasets/test_dataset/tables/test_table"
	Table pulumi.StringPtrInput `pulumi:"table"`
}

func (ListingBigqueryDatasetSelectedResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListingBigqueryDatasetSelectedResource)(nil)).Elem()
}

func (i ListingBigqueryDatasetSelectedResourceArgs) ToListingBigqueryDatasetSelectedResourceOutput() ListingBigqueryDatasetSelectedResourceOutput {
	return i.ToListingBigqueryDatasetSelectedResourceOutputWithContext(context.Background())
}

func (i ListingBigqueryDatasetSelectedResourceArgs) ToListingBigqueryDatasetSelectedResourceOutputWithContext(ctx context.Context) ListingBigqueryDatasetSelectedResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListingBigqueryDatasetSelectedResourceOutput)
}

// ListingBigqueryDatasetSelectedResourceArrayInput is an input type that accepts ListingBigqueryDatasetSelectedResourceArray and ListingBigqueryDatasetSelectedResourceArrayOutput values.
// You can construct a concrete instance of `ListingBigqueryDatasetSelectedResourceArrayInput` via:
//
//	ListingBigqueryDatasetSelectedResourceArray{ ListingBigqueryDatasetSelectedResourceArgs{...} }
type ListingBigqueryDatasetSelectedResourceArrayInput interface {
	pulumi.Input

	ToListingBigqueryDatasetSelectedResourceArrayOutput() ListingBigqueryDatasetSelectedResourceArrayOutput
	ToListingBigqueryDatasetSelectedResourceArrayOutputWithContext(context.Context) ListingBigqueryDatasetSelectedResourceArrayOutput
}

type ListingBigqueryDatasetSelectedResourceArray []ListingBigqueryDatasetSelectedResourceInput

func (ListingBigqueryDatasetSelectedResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListingBigqueryDatasetSelectedResource)(nil)).Elem()
}

func (i ListingBigqueryDatasetSelectedResourceArray) ToListingBigqueryDatasetSelectedResourceArrayOutput() ListingBigqueryDatasetSelectedResourceArrayOutput {
	return i.ToListingBigqueryDatasetSelectedResourceArrayOutputWithContext(context.Background())
}

func (i ListingBigqueryDatasetSelectedResourceArray) ToListingBigqueryDatasetSelectedResourceArrayOutputWithContext(ctx context.Context) ListingBigqueryDatasetSelectedResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListingBigqueryDatasetSelectedResourceArrayOutput)
}

type ListingBigqueryDatasetSelectedResourceOutput struct{ *pulumi.OutputState }

func (ListingBigqueryDatasetSelectedResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListingBigqueryDatasetSelectedResource)(nil)).Elem()
}

func (o ListingBigqueryDatasetSelectedResourceOutput) ToListingBigqueryDatasetSelectedResourceOutput() ListingBigqueryDatasetSelectedResourceOutput {
	return o
}

func (o ListingBigqueryDatasetSelectedResourceOutput) ToListingBigqueryDatasetSelectedResourceOutputWithContext(ctx context.Context) ListingBigqueryDatasetSelectedResourceOutput {
	return o
}

// Format: For routine: projects/{projectId}/datasets/{datasetId}/routines/{routineId} Example:"projects/test_project/datasets/test_dataset/routines/test_routine"
func (o ListingBigqueryDatasetSelectedResourceOutput) Routine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListingBigqueryDatasetSelectedResource) *string { return v.Routine }).(pulumi.StringPtrOutput)
}

// Format: For table: projects/{projectId}/datasets/{datasetId}/tables/{tableId} Example:"projects/test_project/datasets/test_dataset/tables/test_table"
func (o ListingBigqueryDatasetSelectedResourceOutput) Table() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListingBigqueryDatasetSelectedResource) *string { return v.Table }).(pulumi.StringPtrOutput)
}

type ListingBigqueryDatasetSelectedResourceArrayOutput struct{ *pulumi.OutputState }

func (ListingBigqueryDatasetSelectedResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListingBigqueryDatasetSelectedResource)(nil)).Elem()
}

func (o ListingBigqueryDatasetSelectedResourceArrayOutput) ToListingBigqueryDatasetSelectedResourceArrayOutput() ListingBigqueryDatasetSelectedResourceArrayOutput {
	return o
}

func (o ListingBigqueryDatasetSelectedResourceArrayOutput) ToListingBigqueryDatasetSelectedResourceArrayOutputWithContext(ctx context.Context) ListingBigqueryDatasetSelectedResourceArrayOutput {
	return o
}

func (o ListingBigqueryDatasetSelectedResourceArrayOutput) Index(i pulumi.IntInput) ListingBigqueryDatasetSelectedResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ListingBigqueryDatasetSelectedResource {
		return vs[0].([]ListingBigqueryDatasetSelectedResource)[vs[1].(int)]
	}).(ListingBigqueryDatasetSelectedResourceOutput)
}

type ListingCommercialInfo struct {
	// (Output)
	// Details of the Marketplace Data Product associated with the Listing.
	// Structure is documented below.
	CloudMarketplaces []ListingCommercialInfoCloudMarketplace `pulumi:"cloudMarketplaces"`
}

// ListingCommercialInfoInput is an input type that accepts ListingCommercialInfoArgs and ListingCommercialInfoOutput values.
// You can construct a concrete instance of `ListingCommercialInfoInput` via:
//
//	ListingCommercialInfoArgs{...}
type ListingCommercialInfoInput interface {
	pulumi.Input

	ToListingCommercialInfoOutput() ListingCommercialInfoOutput
	ToListingCommercialInfoOutputWithContext(context.Context) ListingCommercialInfoOutput
}

type ListingCommercialInfoArgs struct {
	// (Output)
	// Details of the Marketplace Data Product associated with the Listing.
	// Structure is documented below.
	CloudMarketplaces ListingCommercialInfoCloudMarketplaceArrayInput `pulumi:"cloudMarketplaces"`
}

func (ListingCommercialInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListingCommercialInfo)(nil)).Elem()
}

func (i ListingCommercialInfoArgs) ToListingCommercialInfoOutput() ListingCommercialInfoOutput {
	return i.ToListingCommercialInfoOutputWithContext(context.Background())
}

func (i ListingCommercialInfoArgs) ToListingCommercialInfoOutputWithContext(ctx context.Context) ListingCommercialInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListingCommercialInfoOutput)
}

// ListingCommercialInfoArrayInput is an input type that accepts ListingCommercialInfoArray and ListingCommercialInfoArrayOutput values.
// You can construct a concrete instance of `ListingCommercialInfoArrayInput` via:
//
//	ListingCommercialInfoArray{ ListingCommercialInfoArgs{...} }
type ListingCommercialInfoArrayInput interface {
	pulumi.Input

	ToListingCommercialInfoArrayOutput() ListingCommercialInfoArrayOutput
	ToListingCommercialInfoArrayOutputWithContext(context.Context) ListingCommercialInfoArrayOutput
}

type ListingCommercialInfoArray []ListingCommercialInfoInput

func (ListingCommercialInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListingCommercialInfo)(nil)).Elem()
}

func (i ListingCommercialInfoArray) ToListingCommercialInfoArrayOutput() ListingCommercialInfoArrayOutput {
	return i.ToListingCommercialInfoArrayOutputWithContext(context.Background())
}

func (i ListingCommercialInfoArray) ToListingCommercialInfoArrayOutputWithContext(ctx context.Context) ListingCommercialInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListingCommercialInfoArrayOutput)
}

type ListingCommercialInfoOutput struct{ *pulumi.OutputState }

func (ListingCommercialInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListingCommercialInfo)(nil)).Elem()
}

func (o ListingCommercialInfoOutput) ToListingCommercialInfoOutput() ListingCommercialInfoOutput {
	return o
}

func (o ListingCommercialInfoOutput) ToListingCommercialInfoOutputWithContext(ctx context.Context) ListingCommercialInfoOutput {
	return o
}

// (Output)
// Details of the Marketplace Data Product associated with the Listing.
// Structure is documented below.
func (o ListingCommercialInfoOutput) CloudMarketplaces() ListingCommercialInfoCloudMarketplaceArrayOutput {
	return o.ApplyT(func(v ListingCommercialInfo) []ListingCommercialInfoCloudMarketplace { return v.CloudMarketplaces }).(ListingCommercialInfoCloudMarketplaceArrayOutput)
}

type ListingCommercialInfoArrayOutput struct{ *pulumi.OutputState }

func (ListingCommercialInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListingCommercialInfo)(nil)).Elem()
}

func (o ListingCommercialInfoArrayOutput) ToListingCommercialInfoArrayOutput() ListingCommercialInfoArrayOutput {
	return o
}

func (o ListingCommercialInfoArrayOutput) ToListingCommercialInfoArrayOutputWithContext(ctx context.Context) ListingCommercialInfoArrayOutput {
	return o
}

func (o ListingCommercialInfoArrayOutput) Index(i pulumi.IntInput) ListingCommercialInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ListingCommercialInfo {
		return vs[0].([]ListingCommercialInfo)[vs[1].(int)]
	}).(ListingCommercialInfoOutput)
}

type ListingCommercialInfoCloudMarketplace struct {
	// (Output)
	// Commercial state of the Marketplace Data Product.
	// Possible values: COMMERCIAL_STATE_UNSPECIFIED, ONBOARDING, ACTIVE
	CommercialState *string `pulumi:"commercialState"`
	// (Output)
	// Resource name of the commercial service associated with the Marketplace Data Product. e.g. example.com
	Service *string `pulumi:"service"`
}

// ListingCommercialInfoCloudMarketplaceInput is an input type that accepts ListingCommercialInfoCloudMarketplaceArgs and ListingCommercialInfoCloudMarketplaceOutput values.
// You can construct a concrete instance of `ListingCommercialInfoCloudMarketplaceInput` via:
//
//	ListingCommercialInfoCloudMarketplaceArgs{...}
type ListingCommercialInfoCloudMarketplaceInput interface {
	pulumi.Input

	ToListingCommercialInfoCloudMarketplaceOutput() ListingCommercialInfoCloudMarketplaceOutput
	ToListingCommercialInfoCloudMarketplaceOutputWithContext(context.Context) ListingCommercialInfoCloudMarketplaceOutput
}

type ListingCommercialInfoCloudMarketplaceArgs struct {
	// (Output)
	// Commercial state of the Marketplace Data Product.
	// Possible values: COMMERCIAL_STATE_UNSPECIFIED, ONBOARDING, ACTIVE
	CommercialState pulumi.StringPtrInput `pulumi:"commercialState"`
	// (Output)
	// Resource name of the commercial service associated with the Marketplace Data Product. e.g. example.com
	Service pulumi.StringPtrInput `pulumi:"service"`
}

func (ListingCommercialInfoCloudMarketplaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListingCommercialInfoCloudMarketplace)(nil)).Elem()
}

func (i ListingCommercialInfoCloudMarketplaceArgs) ToListingCommercialInfoCloudMarketplaceOutput() ListingCommercialInfoCloudMarketplaceOutput {
	return i.ToListingCommercialInfoCloudMarketplaceOutputWithContext(context.Background())
}

func (i ListingCommercialInfoCloudMarketplaceArgs) ToListingCommercialInfoCloudMarketplaceOutputWithContext(ctx context.Context) ListingCommercialInfoCloudMarketplaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListingCommercialInfoCloudMarketplaceOutput)
}

// ListingCommercialInfoCloudMarketplaceArrayInput is an input type that accepts ListingCommercialInfoCloudMarketplaceArray and ListingCommercialInfoCloudMarketplaceArrayOutput values.
// You can construct a concrete instance of `ListingCommercialInfoCloudMarketplaceArrayInput` via:
//
//	ListingCommercialInfoCloudMarketplaceArray{ ListingCommercialInfoCloudMarketplaceArgs{...} }
type ListingCommercialInfoCloudMarketplaceArrayInput interface {
	pulumi.Input

	ToListingCommercialInfoCloudMarketplaceArrayOutput() ListingCommercialInfoCloudMarketplaceArrayOutput
	ToListingCommercialInfoCloudMarketplaceArrayOutputWithContext(context.Context) ListingCommercialInfoCloudMarketplaceArrayOutput
}

type ListingCommercialInfoCloudMarketplaceArray []ListingCommercialInfoCloudMarketplaceInput

func (ListingCommercialInfoCloudMarketplaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListingCommercialInfoCloudMarketplace)(nil)).Elem()
}

func (i ListingCommercialInfoCloudMarketplaceArray) ToListingCommercialInfoCloudMarketplaceArrayOutput() ListingCommercialInfoCloudMarketplaceArrayOutput {
	return i.ToListingCommercialInfoCloudMarketplaceArrayOutputWithContext(context.Background())
}

func (i ListingCommercialInfoCloudMarketplaceArray) ToListingCommercialInfoCloudMarketplaceArrayOutputWithContext(ctx context.Context) ListingCommercialInfoCloudMarketplaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListingCommercialInfoCloudMarketplaceArrayOutput)
}

type ListingCommercialInfoCloudMarketplaceOutput struct{ *pulumi.OutputState }

func (ListingCommercialInfoCloudMarketplaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListingCommercialInfoCloudMarketplace)(nil)).Elem()
}

func (o ListingCommercialInfoCloudMarketplaceOutput) ToListingCommercialInfoCloudMarketplaceOutput() ListingCommercialInfoCloudMarketplaceOutput {
	return o
}

func (o ListingCommercialInfoCloudMarketplaceOutput) ToListingCommercialInfoCloudMarketplaceOutputWithContext(ctx context.Context) ListingCommercialInfoCloudMarketplaceOutput {
	return o
}

// (Output)
// Commercial state of the Marketplace Data Product.
// Possible values: COMMERCIAL_STATE_UNSPECIFIED, ONBOARDING, ACTIVE
func (o ListingCommercialInfoCloudMarketplaceOutput) CommercialState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListingCommercialInfoCloudMarketplace) *string { return v.CommercialState }).(pulumi.StringPtrOutput)
}

// (Output)
// Resource name of the commercial service associated with the Marketplace Data Product. e.g. example.com
func (o ListingCommercialInfoCloudMarketplaceOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListingCommercialInfoCloudMarketplace) *string { return v.Service }).(pulumi.StringPtrOutput)
}

type ListingCommercialInfoCloudMarketplaceArrayOutput struct{ *pulumi.OutputState }

func (ListingCommercialInfoCloudMarketplaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListingCommercialInfoCloudMarketplace)(nil)).Elem()
}

func (o ListingCommercialInfoCloudMarketplaceArrayOutput) ToListingCommercialInfoCloudMarketplaceArrayOutput() ListingCommercialInfoCloudMarketplaceArrayOutput {
	return o
}

func (o ListingCommercialInfoCloudMarketplaceArrayOutput) ToListingCommercialInfoCloudMarketplaceArrayOutputWithContext(ctx context.Context) ListingCommercialInfoCloudMarketplaceArrayOutput {
	return o
}

func (o ListingCommercialInfoCloudMarketplaceArrayOutput) Index(i pulumi.IntInput) ListingCommercialInfoCloudMarketplaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ListingCommercialInfoCloudMarketplace {
		return vs[0].([]ListingCommercialInfoCloudMarketplace)[vs[1].(int)]
	}).(ListingCommercialInfoCloudMarketplaceOutput)
}

type ListingDataProvider struct {
	// Name of the data provider.
	Name string `pulumi:"name"`
	// Email or URL of the data provider.
	PrimaryContact *string `pulumi:"primaryContact"`
}

// ListingDataProviderInput is an input type that accepts ListingDataProviderArgs and ListingDataProviderOutput values.
// You can construct a concrete instance of `ListingDataProviderInput` via:
//
//	ListingDataProviderArgs{...}
type ListingDataProviderInput interface {
	pulumi.Input

	ToListingDataProviderOutput() ListingDataProviderOutput
	ToListingDataProviderOutputWithContext(context.Context) ListingDataProviderOutput
}

type ListingDataProviderArgs struct {
	// Name of the data provider.
	Name pulumi.StringInput `pulumi:"name"`
	// Email or URL of the data provider.
	PrimaryContact pulumi.StringPtrInput `pulumi:"primaryContact"`
}

func (ListingDataProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListingDataProvider)(nil)).Elem()
}

func (i ListingDataProviderArgs) ToListingDataProviderOutput() ListingDataProviderOutput {
	return i.ToListingDataProviderOutputWithContext(context.Background())
}

func (i ListingDataProviderArgs) ToListingDataProviderOutputWithContext(ctx context.Context) ListingDataProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListingDataProviderOutput)
}

func (i ListingDataProviderArgs) ToListingDataProviderPtrOutput() ListingDataProviderPtrOutput {
	return i.ToListingDataProviderPtrOutputWithContext(context.Background())
}

func (i ListingDataProviderArgs) ToListingDataProviderPtrOutputWithContext(ctx context.Context) ListingDataProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListingDataProviderOutput).ToListingDataProviderPtrOutputWithContext(ctx)
}

// ListingDataProviderPtrInput is an input type that accepts ListingDataProviderArgs, ListingDataProviderPtr and ListingDataProviderPtrOutput values.
// You can construct a concrete instance of `ListingDataProviderPtrInput` via:
//
//	        ListingDataProviderArgs{...}
//
//	or:
//
//	        nil
type ListingDataProviderPtrInput interface {
	pulumi.Input

	ToListingDataProviderPtrOutput() ListingDataProviderPtrOutput
	ToListingDataProviderPtrOutputWithContext(context.Context) ListingDataProviderPtrOutput
}

type listingDataProviderPtrType ListingDataProviderArgs

func ListingDataProviderPtr(v *ListingDataProviderArgs) ListingDataProviderPtrInput {
	return (*listingDataProviderPtrType)(v)
}

func (*listingDataProviderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ListingDataProvider)(nil)).Elem()
}

func (i *listingDataProviderPtrType) ToListingDataProviderPtrOutput() ListingDataProviderPtrOutput {
	return i.ToListingDataProviderPtrOutputWithContext(context.Background())
}

func (i *listingDataProviderPtrType) ToListingDataProviderPtrOutputWithContext(ctx context.Context) ListingDataProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListingDataProviderPtrOutput)
}

type ListingDataProviderOutput struct{ *pulumi.OutputState }

func (ListingDataProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListingDataProvider)(nil)).Elem()
}

func (o ListingDataProviderOutput) ToListingDataProviderOutput() ListingDataProviderOutput {
	return o
}

func (o ListingDataProviderOutput) ToListingDataProviderOutputWithContext(ctx context.Context) ListingDataProviderOutput {
	return o
}

func (o ListingDataProviderOutput) ToListingDataProviderPtrOutput() ListingDataProviderPtrOutput {
	return o.ToListingDataProviderPtrOutputWithContext(context.Background())
}

func (o ListingDataProviderOutput) ToListingDataProviderPtrOutputWithContext(ctx context.Context) ListingDataProviderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ListingDataProvider) *ListingDataProvider {
		return &v
	}).(ListingDataProviderPtrOutput)
}

// Name of the data provider.
func (o ListingDataProviderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ListingDataProvider) string { return v.Name }).(pulumi.StringOutput)
}

// Email or URL of the data provider.
func (o ListingDataProviderOutput) PrimaryContact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListingDataProvider) *string { return v.PrimaryContact }).(pulumi.StringPtrOutput)
}

type ListingDataProviderPtrOutput struct{ *pulumi.OutputState }

func (ListingDataProviderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListingDataProvider)(nil)).Elem()
}

func (o ListingDataProviderPtrOutput) ToListingDataProviderPtrOutput() ListingDataProviderPtrOutput {
	return o
}

func (o ListingDataProviderPtrOutput) ToListingDataProviderPtrOutputWithContext(ctx context.Context) ListingDataProviderPtrOutput {
	return o
}

func (o ListingDataProviderPtrOutput) Elem() ListingDataProviderOutput {
	return o.ApplyT(func(v *ListingDataProvider) ListingDataProvider {
		if v != nil {
			return *v
		}
		var ret ListingDataProvider
		return ret
	}).(ListingDataProviderOutput)
}

// Name of the data provider.
func (o ListingDataProviderPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListingDataProvider) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Email or URL of the data provider.
func (o ListingDataProviderPtrOutput) PrimaryContact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListingDataProvider) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryContact
	}).(pulumi.StringPtrOutput)
}

type ListingIamBindingCondition struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

// ListingIamBindingConditionInput is an input type that accepts ListingIamBindingConditionArgs and ListingIamBindingConditionOutput values.
// You can construct a concrete instance of `ListingIamBindingConditionInput` via:
//
//	ListingIamBindingConditionArgs{...}
type ListingIamBindingConditionInput interface {
	pulumi.Input

	ToListingIamBindingConditionOutput() ListingIamBindingConditionOutput
	ToListingIamBindingConditionOutputWithContext(context.Context) ListingIamBindingConditionOutput
}

type ListingIamBindingConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (ListingIamBindingConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListingIamBindingCondition)(nil)).Elem()
}

func (i ListingIamBindingConditionArgs) ToListingIamBindingConditionOutput() ListingIamBindingConditionOutput {
	return i.ToListingIamBindingConditionOutputWithContext(context.Background())
}

func (i ListingIamBindingConditionArgs) ToListingIamBindingConditionOutputWithContext(ctx context.Context) ListingIamBindingConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListingIamBindingConditionOutput)
}

func (i ListingIamBindingConditionArgs) ToListingIamBindingConditionPtrOutput() ListingIamBindingConditionPtrOutput {
	return i.ToListingIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i ListingIamBindingConditionArgs) ToListingIamBindingConditionPtrOutputWithContext(ctx context.Context) ListingIamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListingIamBindingConditionOutput).ToListingIamBindingConditionPtrOutputWithContext(ctx)
}

// ListingIamBindingConditionPtrInput is an input type that accepts ListingIamBindingConditionArgs, ListingIamBindingConditionPtr and ListingIamBindingConditionPtrOutput values.
// You can construct a concrete instance of `ListingIamBindingConditionPtrInput` via:
//
//	        ListingIamBindingConditionArgs{...}
//
//	or:
//
//	        nil
type ListingIamBindingConditionPtrInput interface {
	pulumi.Input

	ToListingIamBindingConditionPtrOutput() ListingIamBindingConditionPtrOutput
	ToListingIamBindingConditionPtrOutputWithContext(context.Context) ListingIamBindingConditionPtrOutput
}

type listingIamBindingConditionPtrType ListingIamBindingConditionArgs

func ListingIamBindingConditionPtr(v *ListingIamBindingConditionArgs) ListingIamBindingConditionPtrInput {
	return (*listingIamBindingConditionPtrType)(v)
}

func (*listingIamBindingConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ListingIamBindingCondition)(nil)).Elem()
}

func (i *listingIamBindingConditionPtrType) ToListingIamBindingConditionPtrOutput() ListingIamBindingConditionPtrOutput {
	return i.ToListingIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i *listingIamBindingConditionPtrType) ToListingIamBindingConditionPtrOutputWithContext(ctx context.Context) ListingIamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListingIamBindingConditionPtrOutput)
}

type ListingIamBindingConditionOutput struct{ *pulumi.OutputState }

func (ListingIamBindingConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListingIamBindingCondition)(nil)).Elem()
}

func (o ListingIamBindingConditionOutput) ToListingIamBindingConditionOutput() ListingIamBindingConditionOutput {
	return o
}

func (o ListingIamBindingConditionOutput) ToListingIamBindingConditionOutputWithContext(ctx context.Context) ListingIamBindingConditionOutput {
	return o
}

func (o ListingIamBindingConditionOutput) ToListingIamBindingConditionPtrOutput() ListingIamBindingConditionPtrOutput {
	return o.ToListingIamBindingConditionPtrOutputWithContext(context.Background())
}

func (o ListingIamBindingConditionOutput) ToListingIamBindingConditionPtrOutputWithContext(ctx context.Context) ListingIamBindingConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ListingIamBindingCondition) *ListingIamBindingCondition {
		return &v
	}).(ListingIamBindingConditionPtrOutput)
}

func (o ListingIamBindingConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListingIamBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ListingIamBindingConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v ListingIamBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o ListingIamBindingConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v ListingIamBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

type ListingIamBindingConditionPtrOutput struct{ *pulumi.OutputState }

func (ListingIamBindingConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListingIamBindingCondition)(nil)).Elem()
}

func (o ListingIamBindingConditionPtrOutput) ToListingIamBindingConditionPtrOutput() ListingIamBindingConditionPtrOutput {
	return o
}

func (o ListingIamBindingConditionPtrOutput) ToListingIamBindingConditionPtrOutputWithContext(ctx context.Context) ListingIamBindingConditionPtrOutput {
	return o
}

func (o ListingIamBindingConditionPtrOutput) Elem() ListingIamBindingConditionOutput {
	return o.ApplyT(func(v *ListingIamBindingCondition) ListingIamBindingCondition {
		if v != nil {
			return *v
		}
		var ret ListingIamBindingCondition
		return ret
	}).(ListingIamBindingConditionOutput)
}

func (o ListingIamBindingConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListingIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o ListingIamBindingConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListingIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

func (o ListingIamBindingConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListingIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type ListingIamMemberCondition struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

// ListingIamMemberConditionInput is an input type that accepts ListingIamMemberConditionArgs and ListingIamMemberConditionOutput values.
// You can construct a concrete instance of `ListingIamMemberConditionInput` via:
//
//	ListingIamMemberConditionArgs{...}
type ListingIamMemberConditionInput interface {
	pulumi.Input

	ToListingIamMemberConditionOutput() ListingIamMemberConditionOutput
	ToListingIamMemberConditionOutputWithContext(context.Context) ListingIamMemberConditionOutput
}

type ListingIamMemberConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (ListingIamMemberConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListingIamMemberCondition)(nil)).Elem()
}

func (i ListingIamMemberConditionArgs) ToListingIamMemberConditionOutput() ListingIamMemberConditionOutput {
	return i.ToListingIamMemberConditionOutputWithContext(context.Background())
}

func (i ListingIamMemberConditionArgs) ToListingIamMemberConditionOutputWithContext(ctx context.Context) ListingIamMemberConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListingIamMemberConditionOutput)
}

func (i ListingIamMemberConditionArgs) ToListingIamMemberConditionPtrOutput() ListingIamMemberConditionPtrOutput {
	return i.ToListingIamMemberConditionPtrOutputWithContext(context.Background())
}

func (i ListingIamMemberConditionArgs) ToListingIamMemberConditionPtrOutputWithContext(ctx context.Context) ListingIamMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListingIamMemberConditionOutput).ToListingIamMemberConditionPtrOutputWithContext(ctx)
}

// ListingIamMemberConditionPtrInput is an input type that accepts ListingIamMemberConditionArgs, ListingIamMemberConditionPtr and ListingIamMemberConditionPtrOutput values.
// You can construct a concrete instance of `ListingIamMemberConditionPtrInput` via:
//
//	        ListingIamMemberConditionArgs{...}
//
//	or:
//
//	        nil
type ListingIamMemberConditionPtrInput interface {
	pulumi.Input

	ToListingIamMemberConditionPtrOutput() ListingIamMemberConditionPtrOutput
	ToListingIamMemberConditionPtrOutputWithContext(context.Context) ListingIamMemberConditionPtrOutput
}

type listingIamMemberConditionPtrType ListingIamMemberConditionArgs

func ListingIamMemberConditionPtr(v *ListingIamMemberConditionArgs) ListingIamMemberConditionPtrInput {
	return (*listingIamMemberConditionPtrType)(v)
}

func (*listingIamMemberConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ListingIamMemberCondition)(nil)).Elem()
}

func (i *listingIamMemberConditionPtrType) ToListingIamMemberConditionPtrOutput() ListingIamMemberConditionPtrOutput {
	return i.ToListingIamMemberConditionPtrOutputWithContext(context.Background())
}

func (i *listingIamMemberConditionPtrType) ToListingIamMemberConditionPtrOutputWithContext(ctx context.Context) ListingIamMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListingIamMemberConditionPtrOutput)
}

type ListingIamMemberConditionOutput struct{ *pulumi.OutputState }

func (ListingIamMemberConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListingIamMemberCondition)(nil)).Elem()
}

func (o ListingIamMemberConditionOutput) ToListingIamMemberConditionOutput() ListingIamMemberConditionOutput {
	return o
}

func (o ListingIamMemberConditionOutput) ToListingIamMemberConditionOutputWithContext(ctx context.Context) ListingIamMemberConditionOutput {
	return o
}

func (o ListingIamMemberConditionOutput) ToListingIamMemberConditionPtrOutput() ListingIamMemberConditionPtrOutput {
	return o.ToListingIamMemberConditionPtrOutputWithContext(context.Background())
}

func (o ListingIamMemberConditionOutput) ToListingIamMemberConditionPtrOutputWithContext(ctx context.Context) ListingIamMemberConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ListingIamMemberCondition) *ListingIamMemberCondition {
		return &v
	}).(ListingIamMemberConditionPtrOutput)
}

func (o ListingIamMemberConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListingIamMemberCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ListingIamMemberConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v ListingIamMemberCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o ListingIamMemberConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v ListingIamMemberCondition) string { return v.Title }).(pulumi.StringOutput)
}

type ListingIamMemberConditionPtrOutput struct{ *pulumi.OutputState }

func (ListingIamMemberConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListingIamMemberCondition)(nil)).Elem()
}

func (o ListingIamMemberConditionPtrOutput) ToListingIamMemberConditionPtrOutput() ListingIamMemberConditionPtrOutput {
	return o
}

func (o ListingIamMemberConditionPtrOutput) ToListingIamMemberConditionPtrOutputWithContext(ctx context.Context) ListingIamMemberConditionPtrOutput {
	return o
}

func (o ListingIamMemberConditionPtrOutput) Elem() ListingIamMemberConditionOutput {
	return o.ApplyT(func(v *ListingIamMemberCondition) ListingIamMemberCondition {
		if v != nil {
			return *v
		}
		var ret ListingIamMemberCondition
		return ret
	}).(ListingIamMemberConditionOutput)
}

func (o ListingIamMemberConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListingIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o ListingIamMemberConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListingIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

func (o ListingIamMemberConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListingIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type ListingPublisher struct {
	// Name of the listing publisher.
	Name string `pulumi:"name"`
	// Email or URL of the listing publisher.
	PrimaryContact *string `pulumi:"primaryContact"`
}

// ListingPublisherInput is an input type that accepts ListingPublisherArgs and ListingPublisherOutput values.
// You can construct a concrete instance of `ListingPublisherInput` via:
//
//	ListingPublisherArgs{...}
type ListingPublisherInput interface {
	pulumi.Input

	ToListingPublisherOutput() ListingPublisherOutput
	ToListingPublisherOutputWithContext(context.Context) ListingPublisherOutput
}

type ListingPublisherArgs struct {
	// Name of the listing publisher.
	Name pulumi.StringInput `pulumi:"name"`
	// Email or URL of the listing publisher.
	PrimaryContact pulumi.StringPtrInput `pulumi:"primaryContact"`
}

func (ListingPublisherArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListingPublisher)(nil)).Elem()
}

func (i ListingPublisherArgs) ToListingPublisherOutput() ListingPublisherOutput {
	return i.ToListingPublisherOutputWithContext(context.Background())
}

func (i ListingPublisherArgs) ToListingPublisherOutputWithContext(ctx context.Context) ListingPublisherOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListingPublisherOutput)
}

func (i ListingPublisherArgs) ToListingPublisherPtrOutput() ListingPublisherPtrOutput {
	return i.ToListingPublisherPtrOutputWithContext(context.Background())
}

func (i ListingPublisherArgs) ToListingPublisherPtrOutputWithContext(ctx context.Context) ListingPublisherPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListingPublisherOutput).ToListingPublisherPtrOutputWithContext(ctx)
}

// ListingPublisherPtrInput is an input type that accepts ListingPublisherArgs, ListingPublisherPtr and ListingPublisherPtrOutput values.
// You can construct a concrete instance of `ListingPublisherPtrInput` via:
//
//	        ListingPublisherArgs{...}
//
//	or:
//
//	        nil
type ListingPublisherPtrInput interface {
	pulumi.Input

	ToListingPublisherPtrOutput() ListingPublisherPtrOutput
	ToListingPublisherPtrOutputWithContext(context.Context) ListingPublisherPtrOutput
}

type listingPublisherPtrType ListingPublisherArgs

func ListingPublisherPtr(v *ListingPublisherArgs) ListingPublisherPtrInput {
	return (*listingPublisherPtrType)(v)
}

func (*listingPublisherPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ListingPublisher)(nil)).Elem()
}

func (i *listingPublisherPtrType) ToListingPublisherPtrOutput() ListingPublisherPtrOutput {
	return i.ToListingPublisherPtrOutputWithContext(context.Background())
}

func (i *listingPublisherPtrType) ToListingPublisherPtrOutputWithContext(ctx context.Context) ListingPublisherPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListingPublisherPtrOutput)
}

type ListingPublisherOutput struct{ *pulumi.OutputState }

func (ListingPublisherOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListingPublisher)(nil)).Elem()
}

func (o ListingPublisherOutput) ToListingPublisherOutput() ListingPublisherOutput {
	return o
}

func (o ListingPublisherOutput) ToListingPublisherOutputWithContext(ctx context.Context) ListingPublisherOutput {
	return o
}

func (o ListingPublisherOutput) ToListingPublisherPtrOutput() ListingPublisherPtrOutput {
	return o.ToListingPublisherPtrOutputWithContext(context.Background())
}

func (o ListingPublisherOutput) ToListingPublisherPtrOutputWithContext(ctx context.Context) ListingPublisherPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ListingPublisher) *ListingPublisher {
		return &v
	}).(ListingPublisherPtrOutput)
}

// Name of the listing publisher.
func (o ListingPublisherOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ListingPublisher) string { return v.Name }).(pulumi.StringOutput)
}

// Email or URL of the listing publisher.
func (o ListingPublisherOutput) PrimaryContact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListingPublisher) *string { return v.PrimaryContact }).(pulumi.StringPtrOutput)
}

type ListingPublisherPtrOutput struct{ *pulumi.OutputState }

func (ListingPublisherPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListingPublisher)(nil)).Elem()
}

func (o ListingPublisherPtrOutput) ToListingPublisherPtrOutput() ListingPublisherPtrOutput {
	return o
}

func (o ListingPublisherPtrOutput) ToListingPublisherPtrOutputWithContext(ctx context.Context) ListingPublisherPtrOutput {
	return o
}

func (o ListingPublisherPtrOutput) Elem() ListingPublisherOutput {
	return o.ApplyT(func(v *ListingPublisher) ListingPublisher {
		if v != nil {
			return *v
		}
		var ret ListingPublisher
		return ret
	}).(ListingPublisherOutput)
}

// Name of the listing publisher.
func (o ListingPublisherPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListingPublisher) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Email or URL of the listing publisher.
func (o ListingPublisherPtrOutput) PrimaryContact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListingPublisher) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryContact
	}).(pulumi.StringPtrOutput)
}

type ListingPubsubTopic struct {
	// Region hint on where the data might be published. Data affinity regions are modifiable.
	// See https://cloud.google.com/about/locations for full listing of possible Cloud regions.
	DataAffinityRegions []string `pulumi:"dataAffinityRegions"`
	// Resource name of the Pub/Sub topic source for this listing. e.g. projects/myproject/topics/topicId
	Topic string `pulumi:"topic"`
}

// ListingPubsubTopicInput is an input type that accepts ListingPubsubTopicArgs and ListingPubsubTopicOutput values.
// You can construct a concrete instance of `ListingPubsubTopicInput` via:
//
//	ListingPubsubTopicArgs{...}
type ListingPubsubTopicInput interface {
	pulumi.Input

	ToListingPubsubTopicOutput() ListingPubsubTopicOutput
	ToListingPubsubTopicOutputWithContext(context.Context) ListingPubsubTopicOutput
}

type ListingPubsubTopicArgs struct {
	// Region hint on where the data might be published. Data affinity regions are modifiable.
	// See https://cloud.google.com/about/locations for full listing of possible Cloud regions.
	DataAffinityRegions pulumi.StringArrayInput `pulumi:"dataAffinityRegions"`
	// Resource name of the Pub/Sub topic source for this listing. e.g. projects/myproject/topics/topicId
	Topic pulumi.StringInput `pulumi:"topic"`
}

func (ListingPubsubTopicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListingPubsubTopic)(nil)).Elem()
}

func (i ListingPubsubTopicArgs) ToListingPubsubTopicOutput() ListingPubsubTopicOutput {
	return i.ToListingPubsubTopicOutputWithContext(context.Background())
}

func (i ListingPubsubTopicArgs) ToListingPubsubTopicOutputWithContext(ctx context.Context) ListingPubsubTopicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListingPubsubTopicOutput)
}

func (i ListingPubsubTopicArgs) ToListingPubsubTopicPtrOutput() ListingPubsubTopicPtrOutput {
	return i.ToListingPubsubTopicPtrOutputWithContext(context.Background())
}

func (i ListingPubsubTopicArgs) ToListingPubsubTopicPtrOutputWithContext(ctx context.Context) ListingPubsubTopicPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListingPubsubTopicOutput).ToListingPubsubTopicPtrOutputWithContext(ctx)
}

// ListingPubsubTopicPtrInput is an input type that accepts ListingPubsubTopicArgs, ListingPubsubTopicPtr and ListingPubsubTopicPtrOutput values.
// You can construct a concrete instance of `ListingPubsubTopicPtrInput` via:
//
//	        ListingPubsubTopicArgs{...}
//
//	or:
//
//	        nil
type ListingPubsubTopicPtrInput interface {
	pulumi.Input

	ToListingPubsubTopicPtrOutput() ListingPubsubTopicPtrOutput
	ToListingPubsubTopicPtrOutputWithContext(context.Context) ListingPubsubTopicPtrOutput
}

type listingPubsubTopicPtrType ListingPubsubTopicArgs

func ListingPubsubTopicPtr(v *ListingPubsubTopicArgs) ListingPubsubTopicPtrInput {
	return (*listingPubsubTopicPtrType)(v)
}

func (*listingPubsubTopicPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ListingPubsubTopic)(nil)).Elem()
}

func (i *listingPubsubTopicPtrType) ToListingPubsubTopicPtrOutput() ListingPubsubTopicPtrOutput {
	return i.ToListingPubsubTopicPtrOutputWithContext(context.Background())
}

func (i *listingPubsubTopicPtrType) ToListingPubsubTopicPtrOutputWithContext(ctx context.Context) ListingPubsubTopicPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListingPubsubTopicPtrOutput)
}

type ListingPubsubTopicOutput struct{ *pulumi.OutputState }

func (ListingPubsubTopicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListingPubsubTopic)(nil)).Elem()
}

func (o ListingPubsubTopicOutput) ToListingPubsubTopicOutput() ListingPubsubTopicOutput {
	return o
}

func (o ListingPubsubTopicOutput) ToListingPubsubTopicOutputWithContext(ctx context.Context) ListingPubsubTopicOutput {
	return o
}

func (o ListingPubsubTopicOutput) ToListingPubsubTopicPtrOutput() ListingPubsubTopicPtrOutput {
	return o.ToListingPubsubTopicPtrOutputWithContext(context.Background())
}

func (o ListingPubsubTopicOutput) ToListingPubsubTopicPtrOutputWithContext(ctx context.Context) ListingPubsubTopicPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ListingPubsubTopic) *ListingPubsubTopic {
		return &v
	}).(ListingPubsubTopicPtrOutput)
}

// Region hint on where the data might be published. Data affinity regions are modifiable.
// See https://cloud.google.com/about/locations for full listing of possible Cloud regions.
func (o ListingPubsubTopicOutput) DataAffinityRegions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ListingPubsubTopic) []string { return v.DataAffinityRegions }).(pulumi.StringArrayOutput)
}

// Resource name of the Pub/Sub topic source for this listing. e.g. projects/myproject/topics/topicId
func (o ListingPubsubTopicOutput) Topic() pulumi.StringOutput {
	return o.ApplyT(func(v ListingPubsubTopic) string { return v.Topic }).(pulumi.StringOutput)
}

type ListingPubsubTopicPtrOutput struct{ *pulumi.OutputState }

func (ListingPubsubTopicPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListingPubsubTopic)(nil)).Elem()
}

func (o ListingPubsubTopicPtrOutput) ToListingPubsubTopicPtrOutput() ListingPubsubTopicPtrOutput {
	return o
}

func (o ListingPubsubTopicPtrOutput) ToListingPubsubTopicPtrOutputWithContext(ctx context.Context) ListingPubsubTopicPtrOutput {
	return o
}

func (o ListingPubsubTopicPtrOutput) Elem() ListingPubsubTopicOutput {
	return o.ApplyT(func(v *ListingPubsubTopic) ListingPubsubTopic {
		if v != nil {
			return *v
		}
		var ret ListingPubsubTopic
		return ret
	}).(ListingPubsubTopicOutput)
}

// Region hint on where the data might be published. Data affinity regions are modifiable.
// See https://cloud.google.com/about/locations for full listing of possible Cloud regions.
func (o ListingPubsubTopicPtrOutput) DataAffinityRegions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ListingPubsubTopic) []string {
		if v == nil {
			return nil
		}
		return v.DataAffinityRegions
	}).(pulumi.StringArrayOutput)
}

// Resource name of the Pub/Sub topic source for this listing. e.g. projects/myproject/topics/topicId
func (o ListingPubsubTopicPtrOutput) Topic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListingPubsubTopic) *string {
		if v == nil {
			return nil
		}
		return &v.Topic
	}).(pulumi.StringPtrOutput)
}

type ListingRestrictedExportConfig struct {
	// If true, enable restricted export.
	Enabled *bool `pulumi:"enabled"`
	// (Output)
	// If true, restrict direct table access(read api/tabledata.list) on linked table.
	RestrictDirectTableAccess *bool `pulumi:"restrictDirectTableAccess"`
	// If true, restrict export of query result derived from restricted linked dataset table.
	RestrictQueryResult *bool `pulumi:"restrictQueryResult"`
}

// ListingRestrictedExportConfigInput is an input type that accepts ListingRestrictedExportConfigArgs and ListingRestrictedExportConfigOutput values.
// You can construct a concrete instance of `ListingRestrictedExportConfigInput` via:
//
//	ListingRestrictedExportConfigArgs{...}
type ListingRestrictedExportConfigInput interface {
	pulumi.Input

	ToListingRestrictedExportConfigOutput() ListingRestrictedExportConfigOutput
	ToListingRestrictedExportConfigOutputWithContext(context.Context) ListingRestrictedExportConfigOutput
}

type ListingRestrictedExportConfigArgs struct {
	// If true, enable restricted export.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// (Output)
	// If true, restrict direct table access(read api/tabledata.list) on linked table.
	RestrictDirectTableAccess pulumi.BoolPtrInput `pulumi:"restrictDirectTableAccess"`
	// If true, restrict export of query result derived from restricted linked dataset table.
	RestrictQueryResult pulumi.BoolPtrInput `pulumi:"restrictQueryResult"`
}

func (ListingRestrictedExportConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListingRestrictedExportConfig)(nil)).Elem()
}

func (i ListingRestrictedExportConfigArgs) ToListingRestrictedExportConfigOutput() ListingRestrictedExportConfigOutput {
	return i.ToListingRestrictedExportConfigOutputWithContext(context.Background())
}

func (i ListingRestrictedExportConfigArgs) ToListingRestrictedExportConfigOutputWithContext(ctx context.Context) ListingRestrictedExportConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListingRestrictedExportConfigOutput)
}

func (i ListingRestrictedExportConfigArgs) ToListingRestrictedExportConfigPtrOutput() ListingRestrictedExportConfigPtrOutput {
	return i.ToListingRestrictedExportConfigPtrOutputWithContext(context.Background())
}

func (i ListingRestrictedExportConfigArgs) ToListingRestrictedExportConfigPtrOutputWithContext(ctx context.Context) ListingRestrictedExportConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListingRestrictedExportConfigOutput).ToListingRestrictedExportConfigPtrOutputWithContext(ctx)
}

// ListingRestrictedExportConfigPtrInput is an input type that accepts ListingRestrictedExportConfigArgs, ListingRestrictedExportConfigPtr and ListingRestrictedExportConfigPtrOutput values.
// You can construct a concrete instance of `ListingRestrictedExportConfigPtrInput` via:
//
//	        ListingRestrictedExportConfigArgs{...}
//
//	or:
//
//	        nil
type ListingRestrictedExportConfigPtrInput interface {
	pulumi.Input

	ToListingRestrictedExportConfigPtrOutput() ListingRestrictedExportConfigPtrOutput
	ToListingRestrictedExportConfigPtrOutputWithContext(context.Context) ListingRestrictedExportConfigPtrOutput
}

type listingRestrictedExportConfigPtrType ListingRestrictedExportConfigArgs

func ListingRestrictedExportConfigPtr(v *ListingRestrictedExportConfigArgs) ListingRestrictedExportConfigPtrInput {
	return (*listingRestrictedExportConfigPtrType)(v)
}

func (*listingRestrictedExportConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ListingRestrictedExportConfig)(nil)).Elem()
}

func (i *listingRestrictedExportConfigPtrType) ToListingRestrictedExportConfigPtrOutput() ListingRestrictedExportConfigPtrOutput {
	return i.ToListingRestrictedExportConfigPtrOutputWithContext(context.Background())
}

func (i *listingRestrictedExportConfigPtrType) ToListingRestrictedExportConfigPtrOutputWithContext(ctx context.Context) ListingRestrictedExportConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListingRestrictedExportConfigPtrOutput)
}

type ListingRestrictedExportConfigOutput struct{ *pulumi.OutputState }

func (ListingRestrictedExportConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListingRestrictedExportConfig)(nil)).Elem()
}

func (o ListingRestrictedExportConfigOutput) ToListingRestrictedExportConfigOutput() ListingRestrictedExportConfigOutput {
	return o
}

func (o ListingRestrictedExportConfigOutput) ToListingRestrictedExportConfigOutputWithContext(ctx context.Context) ListingRestrictedExportConfigOutput {
	return o
}

func (o ListingRestrictedExportConfigOutput) ToListingRestrictedExportConfigPtrOutput() ListingRestrictedExportConfigPtrOutput {
	return o.ToListingRestrictedExportConfigPtrOutputWithContext(context.Background())
}

func (o ListingRestrictedExportConfigOutput) ToListingRestrictedExportConfigPtrOutputWithContext(ctx context.Context) ListingRestrictedExportConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ListingRestrictedExportConfig) *ListingRestrictedExportConfig {
		return &v
	}).(ListingRestrictedExportConfigPtrOutput)
}

// If true, enable restricted export.
func (o ListingRestrictedExportConfigOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ListingRestrictedExportConfig) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// (Output)
// If true, restrict direct table access(read api/tabledata.list) on linked table.
func (o ListingRestrictedExportConfigOutput) RestrictDirectTableAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ListingRestrictedExportConfig) *bool { return v.RestrictDirectTableAccess }).(pulumi.BoolPtrOutput)
}

// If true, restrict export of query result derived from restricted linked dataset table.
func (o ListingRestrictedExportConfigOutput) RestrictQueryResult() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ListingRestrictedExportConfig) *bool { return v.RestrictQueryResult }).(pulumi.BoolPtrOutput)
}

type ListingRestrictedExportConfigPtrOutput struct{ *pulumi.OutputState }

func (ListingRestrictedExportConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListingRestrictedExportConfig)(nil)).Elem()
}

func (o ListingRestrictedExportConfigPtrOutput) ToListingRestrictedExportConfigPtrOutput() ListingRestrictedExportConfigPtrOutput {
	return o
}

func (o ListingRestrictedExportConfigPtrOutput) ToListingRestrictedExportConfigPtrOutputWithContext(ctx context.Context) ListingRestrictedExportConfigPtrOutput {
	return o
}

func (o ListingRestrictedExportConfigPtrOutput) Elem() ListingRestrictedExportConfigOutput {
	return o.ApplyT(func(v *ListingRestrictedExportConfig) ListingRestrictedExportConfig {
		if v != nil {
			return *v
		}
		var ret ListingRestrictedExportConfig
		return ret
	}).(ListingRestrictedExportConfigOutput)
}

// If true, enable restricted export.
func (o ListingRestrictedExportConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ListingRestrictedExportConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// (Output)
// If true, restrict direct table access(read api/tabledata.list) on linked table.
func (o ListingRestrictedExportConfigPtrOutput) RestrictDirectTableAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ListingRestrictedExportConfig) *bool {
		if v == nil {
			return nil
		}
		return v.RestrictDirectTableAccess
	}).(pulumi.BoolPtrOutput)
}

// If true, restrict export of query result derived from restricted linked dataset table.
func (o ListingRestrictedExportConfigPtrOutput) RestrictQueryResult() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ListingRestrictedExportConfig) *bool {
		if v == nil {
			return nil
		}
		return v.RestrictQueryResult
	}).(pulumi.BoolPtrOutput)
}

type ListingSubscriptionCommercialInfo struct {
	// (Output)
	// Cloud Marketplace commercial metadata for this subscription.
	// Structure is documented below.
	CloudMarketplaces []ListingSubscriptionCommercialInfoCloudMarketplace `pulumi:"cloudMarketplaces"`
}

// ListingSubscriptionCommercialInfoInput is an input type that accepts ListingSubscriptionCommercialInfoArgs and ListingSubscriptionCommercialInfoOutput values.
// You can construct a concrete instance of `ListingSubscriptionCommercialInfoInput` via:
//
//	ListingSubscriptionCommercialInfoArgs{...}
type ListingSubscriptionCommercialInfoInput interface {
	pulumi.Input

	ToListingSubscriptionCommercialInfoOutput() ListingSubscriptionCommercialInfoOutput
	ToListingSubscriptionCommercialInfoOutputWithContext(context.Context) ListingSubscriptionCommercialInfoOutput
}

type ListingSubscriptionCommercialInfoArgs struct {
	// (Output)
	// Cloud Marketplace commercial metadata for this subscription.
	// Structure is documented below.
	CloudMarketplaces ListingSubscriptionCommercialInfoCloudMarketplaceArrayInput `pulumi:"cloudMarketplaces"`
}

func (ListingSubscriptionCommercialInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListingSubscriptionCommercialInfo)(nil)).Elem()
}

func (i ListingSubscriptionCommercialInfoArgs) ToListingSubscriptionCommercialInfoOutput() ListingSubscriptionCommercialInfoOutput {
	return i.ToListingSubscriptionCommercialInfoOutputWithContext(context.Background())
}

func (i ListingSubscriptionCommercialInfoArgs) ToListingSubscriptionCommercialInfoOutputWithContext(ctx context.Context) ListingSubscriptionCommercialInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListingSubscriptionCommercialInfoOutput)
}

// ListingSubscriptionCommercialInfoArrayInput is an input type that accepts ListingSubscriptionCommercialInfoArray and ListingSubscriptionCommercialInfoArrayOutput values.
// You can construct a concrete instance of `ListingSubscriptionCommercialInfoArrayInput` via:
//
//	ListingSubscriptionCommercialInfoArray{ ListingSubscriptionCommercialInfoArgs{...} }
type ListingSubscriptionCommercialInfoArrayInput interface {
	pulumi.Input

	ToListingSubscriptionCommercialInfoArrayOutput() ListingSubscriptionCommercialInfoArrayOutput
	ToListingSubscriptionCommercialInfoArrayOutputWithContext(context.Context) ListingSubscriptionCommercialInfoArrayOutput
}

type ListingSubscriptionCommercialInfoArray []ListingSubscriptionCommercialInfoInput

func (ListingSubscriptionCommercialInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListingSubscriptionCommercialInfo)(nil)).Elem()
}

func (i ListingSubscriptionCommercialInfoArray) ToListingSubscriptionCommercialInfoArrayOutput() ListingSubscriptionCommercialInfoArrayOutput {
	return i.ToListingSubscriptionCommercialInfoArrayOutputWithContext(context.Background())
}

func (i ListingSubscriptionCommercialInfoArray) ToListingSubscriptionCommercialInfoArrayOutputWithContext(ctx context.Context) ListingSubscriptionCommercialInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListingSubscriptionCommercialInfoArrayOutput)
}

type ListingSubscriptionCommercialInfoOutput struct{ *pulumi.OutputState }

func (ListingSubscriptionCommercialInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListingSubscriptionCommercialInfo)(nil)).Elem()
}

func (o ListingSubscriptionCommercialInfoOutput) ToListingSubscriptionCommercialInfoOutput() ListingSubscriptionCommercialInfoOutput {
	return o
}

func (o ListingSubscriptionCommercialInfoOutput) ToListingSubscriptionCommercialInfoOutputWithContext(ctx context.Context) ListingSubscriptionCommercialInfoOutput {
	return o
}

// (Output)
// Cloud Marketplace commercial metadata for this subscription.
// Structure is documented below.
func (o ListingSubscriptionCommercialInfoOutput) CloudMarketplaces() ListingSubscriptionCommercialInfoCloudMarketplaceArrayOutput {
	return o.ApplyT(func(v ListingSubscriptionCommercialInfo) []ListingSubscriptionCommercialInfoCloudMarketplace {
		return v.CloudMarketplaces
	}).(ListingSubscriptionCommercialInfoCloudMarketplaceArrayOutput)
}

type ListingSubscriptionCommercialInfoArrayOutput struct{ *pulumi.OutputState }

func (ListingSubscriptionCommercialInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListingSubscriptionCommercialInfo)(nil)).Elem()
}

func (o ListingSubscriptionCommercialInfoArrayOutput) ToListingSubscriptionCommercialInfoArrayOutput() ListingSubscriptionCommercialInfoArrayOutput {
	return o
}

func (o ListingSubscriptionCommercialInfoArrayOutput) ToListingSubscriptionCommercialInfoArrayOutputWithContext(ctx context.Context) ListingSubscriptionCommercialInfoArrayOutput {
	return o
}

func (o ListingSubscriptionCommercialInfoArrayOutput) Index(i pulumi.IntInput) ListingSubscriptionCommercialInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ListingSubscriptionCommercialInfo {
		return vs[0].([]ListingSubscriptionCommercialInfo)[vs[1].(int)]
	}).(ListingSubscriptionCommercialInfoOutput)
}

type ListingSubscriptionCommercialInfoCloudMarketplace struct {
	// (Output)
	// Resource name of the Marketplace Order.
	Order *string `pulumi:"order"`
}

// ListingSubscriptionCommercialInfoCloudMarketplaceInput is an input type that accepts ListingSubscriptionCommercialInfoCloudMarketplaceArgs and ListingSubscriptionCommercialInfoCloudMarketplaceOutput values.
// You can construct a concrete instance of `ListingSubscriptionCommercialInfoCloudMarketplaceInput` via:
//
//	ListingSubscriptionCommercialInfoCloudMarketplaceArgs{...}
type ListingSubscriptionCommercialInfoCloudMarketplaceInput interface {
	pulumi.Input

	ToListingSubscriptionCommercialInfoCloudMarketplaceOutput() ListingSubscriptionCommercialInfoCloudMarketplaceOutput
	ToListingSubscriptionCommercialInfoCloudMarketplaceOutputWithContext(context.Context) ListingSubscriptionCommercialInfoCloudMarketplaceOutput
}

type ListingSubscriptionCommercialInfoCloudMarketplaceArgs struct {
	// (Output)
	// Resource name of the Marketplace Order.
	Order pulumi.StringPtrInput `pulumi:"order"`
}

func (ListingSubscriptionCommercialInfoCloudMarketplaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListingSubscriptionCommercialInfoCloudMarketplace)(nil)).Elem()
}

func (i ListingSubscriptionCommercialInfoCloudMarketplaceArgs) ToListingSubscriptionCommercialInfoCloudMarketplaceOutput() ListingSubscriptionCommercialInfoCloudMarketplaceOutput {
	return i.ToListingSubscriptionCommercialInfoCloudMarketplaceOutputWithContext(context.Background())
}

func (i ListingSubscriptionCommercialInfoCloudMarketplaceArgs) ToListingSubscriptionCommercialInfoCloudMarketplaceOutputWithContext(ctx context.Context) ListingSubscriptionCommercialInfoCloudMarketplaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListingSubscriptionCommercialInfoCloudMarketplaceOutput)
}

// ListingSubscriptionCommercialInfoCloudMarketplaceArrayInput is an input type that accepts ListingSubscriptionCommercialInfoCloudMarketplaceArray and ListingSubscriptionCommercialInfoCloudMarketplaceArrayOutput values.
// You can construct a concrete instance of `ListingSubscriptionCommercialInfoCloudMarketplaceArrayInput` via:
//
//	ListingSubscriptionCommercialInfoCloudMarketplaceArray{ ListingSubscriptionCommercialInfoCloudMarketplaceArgs{...} }
type ListingSubscriptionCommercialInfoCloudMarketplaceArrayInput interface {
	pulumi.Input

	ToListingSubscriptionCommercialInfoCloudMarketplaceArrayOutput() ListingSubscriptionCommercialInfoCloudMarketplaceArrayOutput
	ToListingSubscriptionCommercialInfoCloudMarketplaceArrayOutputWithContext(context.Context) ListingSubscriptionCommercialInfoCloudMarketplaceArrayOutput
}

type ListingSubscriptionCommercialInfoCloudMarketplaceArray []ListingSubscriptionCommercialInfoCloudMarketplaceInput

func (ListingSubscriptionCommercialInfoCloudMarketplaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListingSubscriptionCommercialInfoCloudMarketplace)(nil)).Elem()
}

func (i ListingSubscriptionCommercialInfoCloudMarketplaceArray) ToListingSubscriptionCommercialInfoCloudMarketplaceArrayOutput() ListingSubscriptionCommercialInfoCloudMarketplaceArrayOutput {
	return i.ToListingSubscriptionCommercialInfoCloudMarketplaceArrayOutputWithContext(context.Background())
}

func (i ListingSubscriptionCommercialInfoCloudMarketplaceArray) ToListingSubscriptionCommercialInfoCloudMarketplaceArrayOutputWithContext(ctx context.Context) ListingSubscriptionCommercialInfoCloudMarketplaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListingSubscriptionCommercialInfoCloudMarketplaceArrayOutput)
}

type ListingSubscriptionCommercialInfoCloudMarketplaceOutput struct{ *pulumi.OutputState }

func (ListingSubscriptionCommercialInfoCloudMarketplaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListingSubscriptionCommercialInfoCloudMarketplace)(nil)).Elem()
}

func (o ListingSubscriptionCommercialInfoCloudMarketplaceOutput) ToListingSubscriptionCommercialInfoCloudMarketplaceOutput() ListingSubscriptionCommercialInfoCloudMarketplaceOutput {
	return o
}

func (o ListingSubscriptionCommercialInfoCloudMarketplaceOutput) ToListingSubscriptionCommercialInfoCloudMarketplaceOutputWithContext(ctx context.Context) ListingSubscriptionCommercialInfoCloudMarketplaceOutput {
	return o
}

// (Output)
// Resource name of the Marketplace Order.
func (o ListingSubscriptionCommercialInfoCloudMarketplaceOutput) Order() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListingSubscriptionCommercialInfoCloudMarketplace) *string { return v.Order }).(pulumi.StringPtrOutput)
}

type ListingSubscriptionCommercialInfoCloudMarketplaceArrayOutput struct{ *pulumi.OutputState }

func (ListingSubscriptionCommercialInfoCloudMarketplaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListingSubscriptionCommercialInfoCloudMarketplace)(nil)).Elem()
}

func (o ListingSubscriptionCommercialInfoCloudMarketplaceArrayOutput) ToListingSubscriptionCommercialInfoCloudMarketplaceArrayOutput() ListingSubscriptionCommercialInfoCloudMarketplaceArrayOutput {
	return o
}

func (o ListingSubscriptionCommercialInfoCloudMarketplaceArrayOutput) ToListingSubscriptionCommercialInfoCloudMarketplaceArrayOutputWithContext(ctx context.Context) ListingSubscriptionCommercialInfoCloudMarketplaceArrayOutput {
	return o
}

func (o ListingSubscriptionCommercialInfoCloudMarketplaceArrayOutput) Index(i pulumi.IntInput) ListingSubscriptionCommercialInfoCloudMarketplaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ListingSubscriptionCommercialInfoCloudMarketplace {
		return vs[0].([]ListingSubscriptionCommercialInfoCloudMarketplace)[vs[1].(int)]
	}).(ListingSubscriptionCommercialInfoCloudMarketplaceOutput)
}

type ListingSubscriptionDestinationDataset struct {
	// A reference that identifies the destination dataset.
	// Structure is documented below.
	DatasetReference ListingSubscriptionDestinationDatasetDatasetReference `pulumi:"datasetReference"`
	// A user-friendly description of the dataset.
	Description *string `pulumi:"description"`
	// A descriptive name for the dataset.
	FriendlyName *string `pulumi:"friendlyName"`
	// The labels associated with this dataset. You can use these to
	// organize and group your datasets.
	Labels map[string]string `pulumi:"labels"`
	// The geographic location where the dataset should reside.
	// See https://cloud.google.com/bigquery/docs/locations for supported locations.
	Location string `pulumi:"location"`
}

// ListingSubscriptionDestinationDatasetInput is an input type that accepts ListingSubscriptionDestinationDatasetArgs and ListingSubscriptionDestinationDatasetOutput values.
// You can construct a concrete instance of `ListingSubscriptionDestinationDatasetInput` via:
//
//	ListingSubscriptionDestinationDatasetArgs{...}
type ListingSubscriptionDestinationDatasetInput interface {
	pulumi.Input

	ToListingSubscriptionDestinationDatasetOutput() ListingSubscriptionDestinationDatasetOutput
	ToListingSubscriptionDestinationDatasetOutputWithContext(context.Context) ListingSubscriptionDestinationDatasetOutput
}

type ListingSubscriptionDestinationDatasetArgs struct {
	// A reference that identifies the destination dataset.
	// Structure is documented below.
	DatasetReference ListingSubscriptionDestinationDatasetDatasetReferenceInput `pulumi:"datasetReference"`
	// A user-friendly description of the dataset.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// A descriptive name for the dataset.
	FriendlyName pulumi.StringPtrInput `pulumi:"friendlyName"`
	// The labels associated with this dataset. You can use these to
	// organize and group your datasets.
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// The geographic location where the dataset should reside.
	// See https://cloud.google.com/bigquery/docs/locations for supported locations.
	Location pulumi.StringInput `pulumi:"location"`
}

func (ListingSubscriptionDestinationDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListingSubscriptionDestinationDataset)(nil)).Elem()
}

func (i ListingSubscriptionDestinationDatasetArgs) ToListingSubscriptionDestinationDatasetOutput() ListingSubscriptionDestinationDatasetOutput {
	return i.ToListingSubscriptionDestinationDatasetOutputWithContext(context.Background())
}

func (i ListingSubscriptionDestinationDatasetArgs) ToListingSubscriptionDestinationDatasetOutputWithContext(ctx context.Context) ListingSubscriptionDestinationDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListingSubscriptionDestinationDatasetOutput)
}

func (i ListingSubscriptionDestinationDatasetArgs) ToListingSubscriptionDestinationDatasetPtrOutput() ListingSubscriptionDestinationDatasetPtrOutput {
	return i.ToListingSubscriptionDestinationDatasetPtrOutputWithContext(context.Background())
}

func (i ListingSubscriptionDestinationDatasetArgs) ToListingSubscriptionDestinationDatasetPtrOutputWithContext(ctx context.Context) ListingSubscriptionDestinationDatasetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListingSubscriptionDestinationDatasetOutput).ToListingSubscriptionDestinationDatasetPtrOutputWithContext(ctx)
}

// ListingSubscriptionDestinationDatasetPtrInput is an input type that accepts ListingSubscriptionDestinationDatasetArgs, ListingSubscriptionDestinationDatasetPtr and ListingSubscriptionDestinationDatasetPtrOutput values.
// You can construct a concrete instance of `ListingSubscriptionDestinationDatasetPtrInput` via:
//
//	        ListingSubscriptionDestinationDatasetArgs{...}
//
//	or:
//
//	        nil
type ListingSubscriptionDestinationDatasetPtrInput interface {
	pulumi.Input

	ToListingSubscriptionDestinationDatasetPtrOutput() ListingSubscriptionDestinationDatasetPtrOutput
	ToListingSubscriptionDestinationDatasetPtrOutputWithContext(context.Context) ListingSubscriptionDestinationDatasetPtrOutput
}

type listingSubscriptionDestinationDatasetPtrType ListingSubscriptionDestinationDatasetArgs

func ListingSubscriptionDestinationDatasetPtr(v *ListingSubscriptionDestinationDatasetArgs) ListingSubscriptionDestinationDatasetPtrInput {
	return (*listingSubscriptionDestinationDatasetPtrType)(v)
}

func (*listingSubscriptionDestinationDatasetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ListingSubscriptionDestinationDataset)(nil)).Elem()
}

func (i *listingSubscriptionDestinationDatasetPtrType) ToListingSubscriptionDestinationDatasetPtrOutput() ListingSubscriptionDestinationDatasetPtrOutput {
	return i.ToListingSubscriptionDestinationDatasetPtrOutputWithContext(context.Background())
}

func (i *listingSubscriptionDestinationDatasetPtrType) ToListingSubscriptionDestinationDatasetPtrOutputWithContext(ctx context.Context) ListingSubscriptionDestinationDatasetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListingSubscriptionDestinationDatasetPtrOutput)
}

type ListingSubscriptionDestinationDatasetOutput struct{ *pulumi.OutputState }

func (ListingSubscriptionDestinationDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListingSubscriptionDestinationDataset)(nil)).Elem()
}

func (o ListingSubscriptionDestinationDatasetOutput) ToListingSubscriptionDestinationDatasetOutput() ListingSubscriptionDestinationDatasetOutput {
	return o
}

func (o ListingSubscriptionDestinationDatasetOutput) ToListingSubscriptionDestinationDatasetOutputWithContext(ctx context.Context) ListingSubscriptionDestinationDatasetOutput {
	return o
}

func (o ListingSubscriptionDestinationDatasetOutput) ToListingSubscriptionDestinationDatasetPtrOutput() ListingSubscriptionDestinationDatasetPtrOutput {
	return o.ToListingSubscriptionDestinationDatasetPtrOutputWithContext(context.Background())
}

func (o ListingSubscriptionDestinationDatasetOutput) ToListingSubscriptionDestinationDatasetPtrOutputWithContext(ctx context.Context) ListingSubscriptionDestinationDatasetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ListingSubscriptionDestinationDataset) *ListingSubscriptionDestinationDataset {
		return &v
	}).(ListingSubscriptionDestinationDatasetPtrOutput)
}

// A reference that identifies the destination dataset.
// Structure is documented below.
func (o ListingSubscriptionDestinationDatasetOutput) DatasetReference() ListingSubscriptionDestinationDatasetDatasetReferenceOutput {
	return o.ApplyT(func(v ListingSubscriptionDestinationDataset) ListingSubscriptionDestinationDatasetDatasetReference {
		return v.DatasetReference
	}).(ListingSubscriptionDestinationDatasetDatasetReferenceOutput)
}

// A user-friendly description of the dataset.
func (o ListingSubscriptionDestinationDatasetOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListingSubscriptionDestinationDataset) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// A descriptive name for the dataset.
func (o ListingSubscriptionDestinationDatasetOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListingSubscriptionDestinationDataset) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// The labels associated with this dataset. You can use these to
// organize and group your datasets.
func (o ListingSubscriptionDestinationDatasetOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v ListingSubscriptionDestinationDataset) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// The geographic location where the dataset should reside.
// See https://cloud.google.com/bigquery/docs/locations for supported locations.
func (o ListingSubscriptionDestinationDatasetOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v ListingSubscriptionDestinationDataset) string { return v.Location }).(pulumi.StringOutput)
}

type ListingSubscriptionDestinationDatasetPtrOutput struct{ *pulumi.OutputState }

func (ListingSubscriptionDestinationDatasetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListingSubscriptionDestinationDataset)(nil)).Elem()
}

func (o ListingSubscriptionDestinationDatasetPtrOutput) ToListingSubscriptionDestinationDatasetPtrOutput() ListingSubscriptionDestinationDatasetPtrOutput {
	return o
}

func (o ListingSubscriptionDestinationDatasetPtrOutput) ToListingSubscriptionDestinationDatasetPtrOutputWithContext(ctx context.Context) ListingSubscriptionDestinationDatasetPtrOutput {
	return o
}

func (o ListingSubscriptionDestinationDatasetPtrOutput) Elem() ListingSubscriptionDestinationDatasetOutput {
	return o.ApplyT(func(v *ListingSubscriptionDestinationDataset) ListingSubscriptionDestinationDataset {
		if v != nil {
			return *v
		}
		var ret ListingSubscriptionDestinationDataset
		return ret
	}).(ListingSubscriptionDestinationDatasetOutput)
}

// A reference that identifies the destination dataset.
// Structure is documented below.
func (o ListingSubscriptionDestinationDatasetPtrOutput) DatasetReference() ListingSubscriptionDestinationDatasetDatasetReferencePtrOutput {
	return o.ApplyT(func(v *ListingSubscriptionDestinationDataset) *ListingSubscriptionDestinationDatasetDatasetReference {
		if v == nil {
			return nil
		}
		return &v.DatasetReference
	}).(ListingSubscriptionDestinationDatasetDatasetReferencePtrOutput)
}

// A user-friendly description of the dataset.
func (o ListingSubscriptionDestinationDatasetPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListingSubscriptionDestinationDataset) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// A descriptive name for the dataset.
func (o ListingSubscriptionDestinationDatasetPtrOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListingSubscriptionDestinationDataset) *string {
		if v == nil {
			return nil
		}
		return v.FriendlyName
	}).(pulumi.StringPtrOutput)
}

// The labels associated with this dataset. You can use these to
// organize and group your datasets.
func (o ListingSubscriptionDestinationDatasetPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ListingSubscriptionDestinationDataset) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// The geographic location where the dataset should reside.
// See https://cloud.google.com/bigquery/docs/locations for supported locations.
func (o ListingSubscriptionDestinationDatasetPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListingSubscriptionDestinationDataset) *string {
		if v == nil {
			return nil
		}
		return &v.Location
	}).(pulumi.StringPtrOutput)
}

type ListingSubscriptionDestinationDatasetDatasetReference struct {
	// A unique ID for this dataset, without the project name. The ID must contain only letters (a-z, A-Z), numbers (0-9), or underscores (_). The maximum length is 1,024 characters.
	DatasetId string `pulumi:"datasetId"`
	// The ID of the project containing this dataset.
	ProjectId string `pulumi:"projectId"`
}

// ListingSubscriptionDestinationDatasetDatasetReferenceInput is an input type that accepts ListingSubscriptionDestinationDatasetDatasetReferenceArgs and ListingSubscriptionDestinationDatasetDatasetReferenceOutput values.
// You can construct a concrete instance of `ListingSubscriptionDestinationDatasetDatasetReferenceInput` via:
//
//	ListingSubscriptionDestinationDatasetDatasetReferenceArgs{...}
type ListingSubscriptionDestinationDatasetDatasetReferenceInput interface {
	pulumi.Input

	ToListingSubscriptionDestinationDatasetDatasetReferenceOutput() ListingSubscriptionDestinationDatasetDatasetReferenceOutput
	ToListingSubscriptionDestinationDatasetDatasetReferenceOutputWithContext(context.Context) ListingSubscriptionDestinationDatasetDatasetReferenceOutput
}

type ListingSubscriptionDestinationDatasetDatasetReferenceArgs struct {
	// A unique ID for this dataset, without the project name. The ID must contain only letters (a-z, A-Z), numbers (0-9), or underscores (_). The maximum length is 1,024 characters.
	DatasetId pulumi.StringInput `pulumi:"datasetId"`
	// The ID of the project containing this dataset.
	ProjectId pulumi.StringInput `pulumi:"projectId"`
}

func (ListingSubscriptionDestinationDatasetDatasetReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListingSubscriptionDestinationDatasetDatasetReference)(nil)).Elem()
}

func (i ListingSubscriptionDestinationDatasetDatasetReferenceArgs) ToListingSubscriptionDestinationDatasetDatasetReferenceOutput() ListingSubscriptionDestinationDatasetDatasetReferenceOutput {
	return i.ToListingSubscriptionDestinationDatasetDatasetReferenceOutputWithContext(context.Background())
}

func (i ListingSubscriptionDestinationDatasetDatasetReferenceArgs) ToListingSubscriptionDestinationDatasetDatasetReferenceOutputWithContext(ctx context.Context) ListingSubscriptionDestinationDatasetDatasetReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListingSubscriptionDestinationDatasetDatasetReferenceOutput)
}

func (i ListingSubscriptionDestinationDatasetDatasetReferenceArgs) ToListingSubscriptionDestinationDatasetDatasetReferencePtrOutput() ListingSubscriptionDestinationDatasetDatasetReferencePtrOutput {
	return i.ToListingSubscriptionDestinationDatasetDatasetReferencePtrOutputWithContext(context.Background())
}

func (i ListingSubscriptionDestinationDatasetDatasetReferenceArgs) ToListingSubscriptionDestinationDatasetDatasetReferencePtrOutputWithContext(ctx context.Context) ListingSubscriptionDestinationDatasetDatasetReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListingSubscriptionDestinationDatasetDatasetReferenceOutput).ToListingSubscriptionDestinationDatasetDatasetReferencePtrOutputWithContext(ctx)
}

// ListingSubscriptionDestinationDatasetDatasetReferencePtrInput is an input type that accepts ListingSubscriptionDestinationDatasetDatasetReferenceArgs, ListingSubscriptionDestinationDatasetDatasetReferencePtr and ListingSubscriptionDestinationDatasetDatasetReferencePtrOutput values.
// You can construct a concrete instance of `ListingSubscriptionDestinationDatasetDatasetReferencePtrInput` via:
//
//	        ListingSubscriptionDestinationDatasetDatasetReferenceArgs{...}
//
//	or:
//
//	        nil
type ListingSubscriptionDestinationDatasetDatasetReferencePtrInput interface {
	pulumi.Input

	ToListingSubscriptionDestinationDatasetDatasetReferencePtrOutput() ListingSubscriptionDestinationDatasetDatasetReferencePtrOutput
	ToListingSubscriptionDestinationDatasetDatasetReferencePtrOutputWithContext(context.Context) ListingSubscriptionDestinationDatasetDatasetReferencePtrOutput
}

type listingSubscriptionDestinationDatasetDatasetReferencePtrType ListingSubscriptionDestinationDatasetDatasetReferenceArgs

func ListingSubscriptionDestinationDatasetDatasetReferencePtr(v *ListingSubscriptionDestinationDatasetDatasetReferenceArgs) ListingSubscriptionDestinationDatasetDatasetReferencePtrInput {
	return (*listingSubscriptionDestinationDatasetDatasetReferencePtrType)(v)
}

func (*listingSubscriptionDestinationDatasetDatasetReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ListingSubscriptionDestinationDatasetDatasetReference)(nil)).Elem()
}

func (i *listingSubscriptionDestinationDatasetDatasetReferencePtrType) ToListingSubscriptionDestinationDatasetDatasetReferencePtrOutput() ListingSubscriptionDestinationDatasetDatasetReferencePtrOutput {
	return i.ToListingSubscriptionDestinationDatasetDatasetReferencePtrOutputWithContext(context.Background())
}

func (i *listingSubscriptionDestinationDatasetDatasetReferencePtrType) ToListingSubscriptionDestinationDatasetDatasetReferencePtrOutputWithContext(ctx context.Context) ListingSubscriptionDestinationDatasetDatasetReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListingSubscriptionDestinationDatasetDatasetReferencePtrOutput)
}

type ListingSubscriptionDestinationDatasetDatasetReferenceOutput struct{ *pulumi.OutputState }

func (ListingSubscriptionDestinationDatasetDatasetReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListingSubscriptionDestinationDatasetDatasetReference)(nil)).Elem()
}

func (o ListingSubscriptionDestinationDatasetDatasetReferenceOutput) ToListingSubscriptionDestinationDatasetDatasetReferenceOutput() ListingSubscriptionDestinationDatasetDatasetReferenceOutput {
	return o
}

func (o ListingSubscriptionDestinationDatasetDatasetReferenceOutput) ToListingSubscriptionDestinationDatasetDatasetReferenceOutputWithContext(ctx context.Context) ListingSubscriptionDestinationDatasetDatasetReferenceOutput {
	return o
}

func (o ListingSubscriptionDestinationDatasetDatasetReferenceOutput) ToListingSubscriptionDestinationDatasetDatasetReferencePtrOutput() ListingSubscriptionDestinationDatasetDatasetReferencePtrOutput {
	return o.ToListingSubscriptionDestinationDatasetDatasetReferencePtrOutputWithContext(context.Background())
}

func (o ListingSubscriptionDestinationDatasetDatasetReferenceOutput) ToListingSubscriptionDestinationDatasetDatasetReferencePtrOutputWithContext(ctx context.Context) ListingSubscriptionDestinationDatasetDatasetReferencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ListingSubscriptionDestinationDatasetDatasetReference) *ListingSubscriptionDestinationDatasetDatasetReference {
		return &v
	}).(ListingSubscriptionDestinationDatasetDatasetReferencePtrOutput)
}

// A unique ID for this dataset, without the project name. The ID must contain only letters (a-z, A-Z), numbers (0-9), or underscores (_). The maximum length is 1,024 characters.
func (o ListingSubscriptionDestinationDatasetDatasetReferenceOutput) DatasetId() pulumi.StringOutput {
	return o.ApplyT(func(v ListingSubscriptionDestinationDatasetDatasetReference) string { return v.DatasetId }).(pulumi.StringOutput)
}

// The ID of the project containing this dataset.
func (o ListingSubscriptionDestinationDatasetDatasetReferenceOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v ListingSubscriptionDestinationDatasetDatasetReference) string { return v.ProjectId }).(pulumi.StringOutput)
}

type ListingSubscriptionDestinationDatasetDatasetReferencePtrOutput struct{ *pulumi.OutputState }

func (ListingSubscriptionDestinationDatasetDatasetReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListingSubscriptionDestinationDatasetDatasetReference)(nil)).Elem()
}

func (o ListingSubscriptionDestinationDatasetDatasetReferencePtrOutput) ToListingSubscriptionDestinationDatasetDatasetReferencePtrOutput() ListingSubscriptionDestinationDatasetDatasetReferencePtrOutput {
	return o
}

func (o ListingSubscriptionDestinationDatasetDatasetReferencePtrOutput) ToListingSubscriptionDestinationDatasetDatasetReferencePtrOutputWithContext(ctx context.Context) ListingSubscriptionDestinationDatasetDatasetReferencePtrOutput {
	return o
}

func (o ListingSubscriptionDestinationDatasetDatasetReferencePtrOutput) Elem() ListingSubscriptionDestinationDatasetDatasetReferenceOutput {
	return o.ApplyT(func(v *ListingSubscriptionDestinationDatasetDatasetReference) ListingSubscriptionDestinationDatasetDatasetReference {
		if v != nil {
			return *v
		}
		var ret ListingSubscriptionDestinationDatasetDatasetReference
		return ret
	}).(ListingSubscriptionDestinationDatasetDatasetReferenceOutput)
}

// A unique ID for this dataset, without the project name. The ID must contain only letters (a-z, A-Z), numbers (0-9), or underscores (_). The maximum length is 1,024 characters.
func (o ListingSubscriptionDestinationDatasetDatasetReferencePtrOutput) DatasetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListingSubscriptionDestinationDatasetDatasetReference) *string {
		if v == nil {
			return nil
		}
		return &v.DatasetId
	}).(pulumi.StringPtrOutput)
}

// The ID of the project containing this dataset.
func (o ListingSubscriptionDestinationDatasetDatasetReferencePtrOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListingSubscriptionDestinationDatasetDatasetReference) *string {
		if v == nil {
			return nil
		}
		return &v.ProjectId
	}).(pulumi.StringPtrOutput)
}

type ListingSubscriptionLinkedDatasetMap struct {
	// (Output)
	// Output only. Name of the linked dataset, e.g. projects/subscriberproject/datasets/linkedDataset
	LinkedDataset *string `pulumi:"linkedDataset"`
	// (Output)
	// Output only. Listing for which linked resource is created.
	Listing *string `pulumi:"listing"`
	// (Required) The identifier for this object. Format specified above.
	ResourceName string `pulumi:"resourceName"`
}

// ListingSubscriptionLinkedDatasetMapInput is an input type that accepts ListingSubscriptionLinkedDatasetMap and ListingSubscriptionLinkedDatasetMapOutput values.
// You can construct a concrete instance of `ListingSubscriptionLinkedDatasetMapInput` via:
//
//	ListingSubscriptionLinkedDatasetMap{ "key": ListingSubscriptionLinkedDatasetArgs{...} }
type ListingSubscriptionLinkedDatasetMapInput interface {
	pulumi.Input

	ToListingSubscriptionLinkedDatasetMapOutput() ListingSubscriptionLinkedDatasetMapOutput
	ToListingSubscriptionLinkedDatasetMapOutputWithContext(context.Context) ListingSubscriptionLinkedDatasetMapOutput
}

type ListingSubscriptionLinkedDatasetMapArgs struct {
	// (Output)
	// Output only. Name of the linked dataset, e.g. projects/subscriberproject/datasets/linkedDataset
	LinkedDataset pulumi.StringPtrInput `pulumi:"linkedDataset"`
	// (Output)
	// Output only. Listing for which linked resource is created.
	Listing pulumi.StringPtrInput `pulumi:"listing"`
	// (Required) The identifier for this object. Format specified above.
	ResourceName pulumi.StringInput `pulumi:"resourceName"`
}

func (ListingSubscriptionLinkedDatasetMapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListingSubscriptionLinkedDatasetMap)(nil)).Elem()
}

func (i ListingSubscriptionLinkedDatasetMapArgs) ToListingSubscriptionLinkedDatasetMapOutput() ListingSubscriptionLinkedDatasetMapOutput {
	return i.ToListingSubscriptionLinkedDatasetMapOutputWithContext(context.Background())
}

func (i ListingSubscriptionLinkedDatasetMapArgs) ToListingSubscriptionLinkedDatasetMapOutputWithContext(ctx context.Context) ListingSubscriptionLinkedDatasetMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListingSubscriptionLinkedDatasetMapOutput)
}

// ListingSubscriptionLinkedDatasetMapArrayInput is an input type that accepts ListingSubscriptionLinkedDatasetMapArray and ListingSubscriptionLinkedDatasetMapArrayOutput values.
// You can construct a concrete instance of `ListingSubscriptionLinkedDatasetMapArrayInput` via:
//
//	ListingSubscriptionLinkedDatasetMapArray{ ListingSubscriptionLinkedDatasetMapArgs{...} }
type ListingSubscriptionLinkedDatasetMapArrayInput interface {
	pulumi.Input

	ToListingSubscriptionLinkedDatasetMapArrayOutput() ListingSubscriptionLinkedDatasetMapArrayOutput
	ToListingSubscriptionLinkedDatasetMapArrayOutputWithContext(context.Context) ListingSubscriptionLinkedDatasetMapArrayOutput
}

type ListingSubscriptionLinkedDatasetMapArray []ListingSubscriptionLinkedDatasetMapInput

func (ListingSubscriptionLinkedDatasetMapArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListingSubscriptionLinkedDatasetMap)(nil)).Elem()
}

func (i ListingSubscriptionLinkedDatasetMapArray) ToListingSubscriptionLinkedDatasetMapArrayOutput() ListingSubscriptionLinkedDatasetMapArrayOutput {
	return i.ToListingSubscriptionLinkedDatasetMapArrayOutputWithContext(context.Background())
}

func (i ListingSubscriptionLinkedDatasetMapArray) ToListingSubscriptionLinkedDatasetMapArrayOutputWithContext(ctx context.Context) ListingSubscriptionLinkedDatasetMapArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListingSubscriptionLinkedDatasetMapArrayOutput)
}

type ListingSubscriptionLinkedDatasetMapOutput struct{ *pulumi.OutputState }

func (ListingSubscriptionLinkedDatasetMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListingSubscriptionLinkedDatasetMap)(nil)).Elem()
}

func (o ListingSubscriptionLinkedDatasetMapOutput) ToListingSubscriptionLinkedDatasetMapOutput() ListingSubscriptionLinkedDatasetMapOutput {
	return o
}

func (o ListingSubscriptionLinkedDatasetMapOutput) ToListingSubscriptionLinkedDatasetMapOutputWithContext(ctx context.Context) ListingSubscriptionLinkedDatasetMapOutput {
	return o
}

// (Output)
// Output only. Name of the linked dataset, e.g. projects/subscriberproject/datasets/linkedDataset
func (o ListingSubscriptionLinkedDatasetMapOutput) LinkedDataset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListingSubscriptionLinkedDatasetMap) *string { return v.LinkedDataset }).(pulumi.StringPtrOutput)
}

// (Output)
// Output only. Listing for which linked resource is created.
func (o ListingSubscriptionLinkedDatasetMapOutput) Listing() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListingSubscriptionLinkedDatasetMap) *string { return v.Listing }).(pulumi.StringPtrOutput)
}

// (Required) The identifier for this object. Format specified above.
func (o ListingSubscriptionLinkedDatasetMapOutput) ResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v ListingSubscriptionLinkedDatasetMap) string { return v.ResourceName }).(pulumi.StringOutput)
}

type ListingSubscriptionLinkedDatasetMapArrayOutput struct{ *pulumi.OutputState }

func (ListingSubscriptionLinkedDatasetMapArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListingSubscriptionLinkedDatasetMap)(nil)).Elem()
}

func (o ListingSubscriptionLinkedDatasetMapArrayOutput) ToListingSubscriptionLinkedDatasetMapArrayOutput() ListingSubscriptionLinkedDatasetMapArrayOutput {
	return o
}

func (o ListingSubscriptionLinkedDatasetMapArrayOutput) ToListingSubscriptionLinkedDatasetMapArrayOutputWithContext(ctx context.Context) ListingSubscriptionLinkedDatasetMapArrayOutput {
	return o
}

func (o ListingSubscriptionLinkedDatasetMapArrayOutput) Index(i pulumi.IntInput) ListingSubscriptionLinkedDatasetMapOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ListingSubscriptionLinkedDatasetMap {
		return vs[0].([]ListingSubscriptionLinkedDatasetMap)[vs[1].(int)]
	}).(ListingSubscriptionLinkedDatasetMapOutput)
}

type ListingSubscriptionLinkedResource struct {
	// (Output)
	// Output only. Name of the linked dataset, e.g. projects/subscriberproject/datasets/linkedDataset
	LinkedDataset *string `pulumi:"linkedDataset"`
	// (Output)
	// Output only. Listing for which linked resource is created.
	Listing *string `pulumi:"listing"`
}

// ListingSubscriptionLinkedResourceInput is an input type that accepts ListingSubscriptionLinkedResourceArgs and ListingSubscriptionLinkedResourceOutput values.
// You can construct a concrete instance of `ListingSubscriptionLinkedResourceInput` via:
//
//	ListingSubscriptionLinkedResourceArgs{...}
type ListingSubscriptionLinkedResourceInput interface {
	pulumi.Input

	ToListingSubscriptionLinkedResourceOutput() ListingSubscriptionLinkedResourceOutput
	ToListingSubscriptionLinkedResourceOutputWithContext(context.Context) ListingSubscriptionLinkedResourceOutput
}

type ListingSubscriptionLinkedResourceArgs struct {
	// (Output)
	// Output only. Name of the linked dataset, e.g. projects/subscriberproject/datasets/linkedDataset
	LinkedDataset pulumi.StringPtrInput `pulumi:"linkedDataset"`
	// (Output)
	// Output only. Listing for which linked resource is created.
	Listing pulumi.StringPtrInput `pulumi:"listing"`
}

func (ListingSubscriptionLinkedResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListingSubscriptionLinkedResource)(nil)).Elem()
}

func (i ListingSubscriptionLinkedResourceArgs) ToListingSubscriptionLinkedResourceOutput() ListingSubscriptionLinkedResourceOutput {
	return i.ToListingSubscriptionLinkedResourceOutputWithContext(context.Background())
}

func (i ListingSubscriptionLinkedResourceArgs) ToListingSubscriptionLinkedResourceOutputWithContext(ctx context.Context) ListingSubscriptionLinkedResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListingSubscriptionLinkedResourceOutput)
}

// ListingSubscriptionLinkedResourceArrayInput is an input type that accepts ListingSubscriptionLinkedResourceArray and ListingSubscriptionLinkedResourceArrayOutput values.
// You can construct a concrete instance of `ListingSubscriptionLinkedResourceArrayInput` via:
//
//	ListingSubscriptionLinkedResourceArray{ ListingSubscriptionLinkedResourceArgs{...} }
type ListingSubscriptionLinkedResourceArrayInput interface {
	pulumi.Input

	ToListingSubscriptionLinkedResourceArrayOutput() ListingSubscriptionLinkedResourceArrayOutput
	ToListingSubscriptionLinkedResourceArrayOutputWithContext(context.Context) ListingSubscriptionLinkedResourceArrayOutput
}

type ListingSubscriptionLinkedResourceArray []ListingSubscriptionLinkedResourceInput

func (ListingSubscriptionLinkedResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListingSubscriptionLinkedResource)(nil)).Elem()
}

func (i ListingSubscriptionLinkedResourceArray) ToListingSubscriptionLinkedResourceArrayOutput() ListingSubscriptionLinkedResourceArrayOutput {
	return i.ToListingSubscriptionLinkedResourceArrayOutputWithContext(context.Background())
}

func (i ListingSubscriptionLinkedResourceArray) ToListingSubscriptionLinkedResourceArrayOutputWithContext(ctx context.Context) ListingSubscriptionLinkedResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListingSubscriptionLinkedResourceArrayOutput)
}

type ListingSubscriptionLinkedResourceOutput struct{ *pulumi.OutputState }

func (ListingSubscriptionLinkedResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListingSubscriptionLinkedResource)(nil)).Elem()
}

func (o ListingSubscriptionLinkedResourceOutput) ToListingSubscriptionLinkedResourceOutput() ListingSubscriptionLinkedResourceOutput {
	return o
}

func (o ListingSubscriptionLinkedResourceOutput) ToListingSubscriptionLinkedResourceOutputWithContext(ctx context.Context) ListingSubscriptionLinkedResourceOutput {
	return o
}

// (Output)
// Output only. Name of the linked dataset, e.g. projects/subscriberproject/datasets/linkedDataset
func (o ListingSubscriptionLinkedResourceOutput) LinkedDataset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListingSubscriptionLinkedResource) *string { return v.LinkedDataset }).(pulumi.StringPtrOutput)
}

// (Output)
// Output only. Listing for which linked resource is created.
func (o ListingSubscriptionLinkedResourceOutput) Listing() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListingSubscriptionLinkedResource) *string { return v.Listing }).(pulumi.StringPtrOutput)
}

type ListingSubscriptionLinkedResourceArrayOutput struct{ *pulumi.OutputState }

func (ListingSubscriptionLinkedResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListingSubscriptionLinkedResource)(nil)).Elem()
}

func (o ListingSubscriptionLinkedResourceArrayOutput) ToListingSubscriptionLinkedResourceArrayOutput() ListingSubscriptionLinkedResourceArrayOutput {
	return o
}

func (o ListingSubscriptionLinkedResourceArrayOutput) ToListingSubscriptionLinkedResourceArrayOutputWithContext(ctx context.Context) ListingSubscriptionLinkedResourceArrayOutput {
	return o
}

func (o ListingSubscriptionLinkedResourceArrayOutput) Index(i pulumi.IntInput) ListingSubscriptionLinkedResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ListingSubscriptionLinkedResource {
		return vs[0].([]ListingSubscriptionLinkedResource)[vs[1].(int)]
	}).(ListingSubscriptionLinkedResourceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DataExchangeIamBindingConditionInput)(nil)).Elem(), DataExchangeIamBindingConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataExchangeIamBindingConditionPtrInput)(nil)).Elem(), DataExchangeIamBindingConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataExchangeIamMemberConditionInput)(nil)).Elem(), DataExchangeIamMemberConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataExchangeIamMemberConditionPtrInput)(nil)).Elem(), DataExchangeIamMemberConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataExchangeSharingEnvironmentConfigInput)(nil)).Elem(), DataExchangeSharingEnvironmentConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataExchangeSharingEnvironmentConfigPtrInput)(nil)).Elem(), DataExchangeSharingEnvironmentConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataExchangeSharingEnvironmentConfigDcrExchangeConfigInput)(nil)).Elem(), DataExchangeSharingEnvironmentConfigDcrExchangeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrInput)(nil)).Elem(), DataExchangeSharingEnvironmentConfigDcrExchangeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataExchangeSharingEnvironmentConfigDefaultExchangeConfigInput)(nil)).Elem(), DataExchangeSharingEnvironmentConfigDefaultExchangeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrInput)(nil)).Elem(), DataExchangeSharingEnvironmentConfigDefaultExchangeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataExchangeSubscriptionDestinationDatasetInput)(nil)).Elem(), DataExchangeSubscriptionDestinationDatasetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataExchangeSubscriptionDestinationDatasetPtrInput)(nil)).Elem(), DataExchangeSubscriptionDestinationDatasetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataExchangeSubscriptionDestinationDatasetDatasetReferenceInput)(nil)).Elem(), DataExchangeSubscriptionDestinationDatasetDatasetReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataExchangeSubscriptionDestinationDatasetDatasetReferencePtrInput)(nil)).Elem(), DataExchangeSubscriptionDestinationDatasetDatasetReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataExchangeSubscriptionLinkedDatasetMapInput)(nil)).Elem(), DataExchangeSubscriptionLinkedDatasetMapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataExchangeSubscriptionLinkedDatasetMapArrayInput)(nil)).Elem(), DataExchangeSubscriptionLinkedDatasetMapArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataExchangeSubscriptionLinkedResourceInput)(nil)).Elem(), DataExchangeSubscriptionLinkedResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataExchangeSubscriptionLinkedResourceArrayInput)(nil)).Elem(), DataExchangeSubscriptionLinkedResourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListingBigqueryDatasetInput)(nil)).Elem(), ListingBigqueryDatasetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListingBigqueryDatasetPtrInput)(nil)).Elem(), ListingBigqueryDatasetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListingBigqueryDatasetSelectedResourceInput)(nil)).Elem(), ListingBigqueryDatasetSelectedResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListingBigqueryDatasetSelectedResourceArrayInput)(nil)).Elem(), ListingBigqueryDatasetSelectedResourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListingCommercialInfoInput)(nil)).Elem(), ListingCommercialInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListingCommercialInfoArrayInput)(nil)).Elem(), ListingCommercialInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListingCommercialInfoCloudMarketplaceInput)(nil)).Elem(), ListingCommercialInfoCloudMarketplaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListingCommercialInfoCloudMarketplaceArrayInput)(nil)).Elem(), ListingCommercialInfoCloudMarketplaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListingDataProviderInput)(nil)).Elem(), ListingDataProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListingDataProviderPtrInput)(nil)).Elem(), ListingDataProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListingIamBindingConditionInput)(nil)).Elem(), ListingIamBindingConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListingIamBindingConditionPtrInput)(nil)).Elem(), ListingIamBindingConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListingIamMemberConditionInput)(nil)).Elem(), ListingIamMemberConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListingIamMemberConditionPtrInput)(nil)).Elem(), ListingIamMemberConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListingPublisherInput)(nil)).Elem(), ListingPublisherArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListingPublisherPtrInput)(nil)).Elem(), ListingPublisherArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListingPubsubTopicInput)(nil)).Elem(), ListingPubsubTopicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListingPubsubTopicPtrInput)(nil)).Elem(), ListingPubsubTopicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListingRestrictedExportConfigInput)(nil)).Elem(), ListingRestrictedExportConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListingRestrictedExportConfigPtrInput)(nil)).Elem(), ListingRestrictedExportConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListingSubscriptionCommercialInfoInput)(nil)).Elem(), ListingSubscriptionCommercialInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListingSubscriptionCommercialInfoArrayInput)(nil)).Elem(), ListingSubscriptionCommercialInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListingSubscriptionCommercialInfoCloudMarketplaceInput)(nil)).Elem(), ListingSubscriptionCommercialInfoCloudMarketplaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListingSubscriptionCommercialInfoCloudMarketplaceArrayInput)(nil)).Elem(), ListingSubscriptionCommercialInfoCloudMarketplaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListingSubscriptionDestinationDatasetInput)(nil)).Elem(), ListingSubscriptionDestinationDatasetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListingSubscriptionDestinationDatasetPtrInput)(nil)).Elem(), ListingSubscriptionDestinationDatasetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListingSubscriptionDestinationDatasetDatasetReferenceInput)(nil)).Elem(), ListingSubscriptionDestinationDatasetDatasetReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListingSubscriptionDestinationDatasetDatasetReferencePtrInput)(nil)).Elem(), ListingSubscriptionDestinationDatasetDatasetReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListingSubscriptionLinkedDatasetMapInput)(nil)).Elem(), ListingSubscriptionLinkedDatasetMapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListingSubscriptionLinkedDatasetMapArrayInput)(nil)).Elem(), ListingSubscriptionLinkedDatasetMapArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListingSubscriptionLinkedResourceInput)(nil)).Elem(), ListingSubscriptionLinkedResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListingSubscriptionLinkedResourceArrayInput)(nil)).Elem(), ListingSubscriptionLinkedResourceArray{})
	pulumi.RegisterOutputType(DataExchangeIamBindingConditionOutput{})
	pulumi.RegisterOutputType(DataExchangeIamBindingConditionPtrOutput{})
	pulumi.RegisterOutputType(DataExchangeIamMemberConditionOutput{})
	pulumi.RegisterOutputType(DataExchangeIamMemberConditionPtrOutput{})
	pulumi.RegisterOutputType(DataExchangeSharingEnvironmentConfigOutput{})
	pulumi.RegisterOutputType(DataExchangeSharingEnvironmentConfigPtrOutput{})
	pulumi.RegisterOutputType(DataExchangeSharingEnvironmentConfigDcrExchangeConfigOutput{})
	pulumi.RegisterOutputType(DataExchangeSharingEnvironmentConfigDcrExchangeConfigPtrOutput{})
	pulumi.RegisterOutputType(DataExchangeSharingEnvironmentConfigDefaultExchangeConfigOutput{})
	pulumi.RegisterOutputType(DataExchangeSharingEnvironmentConfigDefaultExchangeConfigPtrOutput{})
	pulumi.RegisterOutputType(DataExchangeSubscriptionDestinationDatasetOutput{})
	pulumi.RegisterOutputType(DataExchangeSubscriptionDestinationDatasetPtrOutput{})
	pulumi.RegisterOutputType(DataExchangeSubscriptionDestinationDatasetDatasetReferenceOutput{})
	pulumi.RegisterOutputType(DataExchangeSubscriptionDestinationDatasetDatasetReferencePtrOutput{})
	pulumi.RegisterOutputType(DataExchangeSubscriptionLinkedDatasetMapOutput{})
	pulumi.RegisterOutputType(DataExchangeSubscriptionLinkedDatasetMapArrayOutput{})
	pulumi.RegisterOutputType(DataExchangeSubscriptionLinkedResourceOutput{})
	pulumi.RegisterOutputType(DataExchangeSubscriptionLinkedResourceArrayOutput{})
	pulumi.RegisterOutputType(ListingBigqueryDatasetOutput{})
	pulumi.RegisterOutputType(ListingBigqueryDatasetPtrOutput{})
	pulumi.RegisterOutputType(ListingBigqueryDatasetSelectedResourceOutput{})
	pulumi.RegisterOutputType(ListingBigqueryDatasetSelectedResourceArrayOutput{})
	pulumi.RegisterOutputType(ListingCommercialInfoOutput{})
	pulumi.RegisterOutputType(ListingCommercialInfoArrayOutput{})
	pulumi.RegisterOutputType(ListingCommercialInfoCloudMarketplaceOutput{})
	pulumi.RegisterOutputType(ListingCommercialInfoCloudMarketplaceArrayOutput{})
	pulumi.RegisterOutputType(ListingDataProviderOutput{})
	pulumi.RegisterOutputType(ListingDataProviderPtrOutput{})
	pulumi.RegisterOutputType(ListingIamBindingConditionOutput{})
	pulumi.RegisterOutputType(ListingIamBindingConditionPtrOutput{})
	pulumi.RegisterOutputType(ListingIamMemberConditionOutput{})
	pulumi.RegisterOutputType(ListingIamMemberConditionPtrOutput{})
	pulumi.RegisterOutputType(ListingPublisherOutput{})
	pulumi.RegisterOutputType(ListingPublisherPtrOutput{})
	pulumi.RegisterOutputType(ListingPubsubTopicOutput{})
	pulumi.RegisterOutputType(ListingPubsubTopicPtrOutput{})
	pulumi.RegisterOutputType(ListingRestrictedExportConfigOutput{})
	pulumi.RegisterOutputType(ListingRestrictedExportConfigPtrOutput{})
	pulumi.RegisterOutputType(ListingSubscriptionCommercialInfoOutput{})
	pulumi.RegisterOutputType(ListingSubscriptionCommercialInfoArrayOutput{})
	pulumi.RegisterOutputType(ListingSubscriptionCommercialInfoCloudMarketplaceOutput{})
	pulumi.RegisterOutputType(ListingSubscriptionCommercialInfoCloudMarketplaceArrayOutput{})
	pulumi.RegisterOutputType(ListingSubscriptionDestinationDatasetOutput{})
	pulumi.RegisterOutputType(ListingSubscriptionDestinationDatasetPtrOutput{})
	pulumi.RegisterOutputType(ListingSubscriptionDestinationDatasetDatasetReferenceOutput{})
	pulumi.RegisterOutputType(ListingSubscriptionDestinationDatasetDatasetReferencePtrOutput{})
	pulumi.RegisterOutputType(ListingSubscriptionLinkedDatasetMapOutput{})
	pulumi.RegisterOutputType(ListingSubscriptionLinkedDatasetMapArrayOutput{})
	pulumi.RegisterOutputType(ListingSubscriptionLinkedResourceOutput{})
	pulumi.RegisterOutputType(ListingSubscriptionLinkedResourceArrayOutput{})
}
