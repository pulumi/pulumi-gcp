// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package backupdisasterrecovery

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type ManagementServerManagementUri struct {
	// (Output)
	// The management console api endpoint.
	Api *string `pulumi:"api"`
	// (Output)
	// The management console webUi.
	WebUi *string `pulumi:"webUi"`
}

// ManagementServerManagementUriInput is an input type that accepts ManagementServerManagementUriArgs and ManagementServerManagementUriOutput values.
// You can construct a concrete instance of `ManagementServerManagementUriInput` via:
//
//	ManagementServerManagementUriArgs{...}
type ManagementServerManagementUriInput interface {
	pulumi.Input

	ToManagementServerManagementUriOutput() ManagementServerManagementUriOutput
	ToManagementServerManagementUriOutputWithContext(context.Context) ManagementServerManagementUriOutput
}

type ManagementServerManagementUriArgs struct {
	// (Output)
	// The management console api endpoint.
	Api pulumi.StringPtrInput `pulumi:"api"`
	// (Output)
	// The management console webUi.
	WebUi pulumi.StringPtrInput `pulumi:"webUi"`
}

func (ManagementServerManagementUriArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementServerManagementUri)(nil)).Elem()
}

func (i ManagementServerManagementUriArgs) ToManagementServerManagementUriOutput() ManagementServerManagementUriOutput {
	return i.ToManagementServerManagementUriOutputWithContext(context.Background())
}

func (i ManagementServerManagementUriArgs) ToManagementServerManagementUriOutputWithContext(ctx context.Context) ManagementServerManagementUriOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementServerManagementUriOutput)
}

func (i ManagementServerManagementUriArgs) ToOutput(ctx context.Context) pulumix.Output[ManagementServerManagementUri] {
	return pulumix.Output[ManagementServerManagementUri]{
		OutputState: i.ToManagementServerManagementUriOutputWithContext(ctx).OutputState,
	}
}

// ManagementServerManagementUriArrayInput is an input type that accepts ManagementServerManagementUriArray and ManagementServerManagementUriArrayOutput values.
// You can construct a concrete instance of `ManagementServerManagementUriArrayInput` via:
//
//	ManagementServerManagementUriArray{ ManagementServerManagementUriArgs{...} }
type ManagementServerManagementUriArrayInput interface {
	pulumi.Input

	ToManagementServerManagementUriArrayOutput() ManagementServerManagementUriArrayOutput
	ToManagementServerManagementUriArrayOutputWithContext(context.Context) ManagementServerManagementUriArrayOutput
}

type ManagementServerManagementUriArray []ManagementServerManagementUriInput

func (ManagementServerManagementUriArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementServerManagementUri)(nil)).Elem()
}

func (i ManagementServerManagementUriArray) ToManagementServerManagementUriArrayOutput() ManagementServerManagementUriArrayOutput {
	return i.ToManagementServerManagementUriArrayOutputWithContext(context.Background())
}

func (i ManagementServerManagementUriArray) ToManagementServerManagementUriArrayOutputWithContext(ctx context.Context) ManagementServerManagementUriArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementServerManagementUriArrayOutput)
}

func (i ManagementServerManagementUriArray) ToOutput(ctx context.Context) pulumix.Output[[]ManagementServerManagementUri] {
	return pulumix.Output[[]ManagementServerManagementUri]{
		OutputState: i.ToManagementServerManagementUriArrayOutputWithContext(ctx).OutputState,
	}
}

type ManagementServerManagementUriOutput struct{ *pulumi.OutputState }

func (ManagementServerManagementUriOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementServerManagementUri)(nil)).Elem()
}

func (o ManagementServerManagementUriOutput) ToManagementServerManagementUriOutput() ManagementServerManagementUriOutput {
	return o
}

func (o ManagementServerManagementUriOutput) ToManagementServerManagementUriOutputWithContext(ctx context.Context) ManagementServerManagementUriOutput {
	return o
}

func (o ManagementServerManagementUriOutput) ToOutput(ctx context.Context) pulumix.Output[ManagementServerManagementUri] {
	return pulumix.Output[ManagementServerManagementUri]{
		OutputState: o.OutputState,
	}
}

// (Output)
// The management console api endpoint.
func (o ManagementServerManagementUriOutput) Api() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementServerManagementUri) *string { return v.Api }).(pulumi.StringPtrOutput)
}

// (Output)
// The management console webUi.
func (o ManagementServerManagementUriOutput) WebUi() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementServerManagementUri) *string { return v.WebUi }).(pulumi.StringPtrOutput)
}

type ManagementServerManagementUriArrayOutput struct{ *pulumi.OutputState }

func (ManagementServerManagementUriArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementServerManagementUri)(nil)).Elem()
}

func (o ManagementServerManagementUriArrayOutput) ToManagementServerManagementUriArrayOutput() ManagementServerManagementUriArrayOutput {
	return o
}

func (o ManagementServerManagementUriArrayOutput) ToManagementServerManagementUriArrayOutputWithContext(ctx context.Context) ManagementServerManagementUriArrayOutput {
	return o
}

func (o ManagementServerManagementUriArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ManagementServerManagementUri] {
	return pulumix.Output[[]ManagementServerManagementUri]{
		OutputState: o.OutputState,
	}
}

func (o ManagementServerManagementUriArrayOutput) Index(i pulumi.IntInput) ManagementServerManagementUriOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagementServerManagementUri {
		return vs[0].([]ManagementServerManagementUri)[vs[1].(int)]
	}).(ManagementServerManagementUriOutput)
}

type ManagementServerNetwork struct {
	// Network with format `projects/{{project_id}}/global/networks/{{network_id}}`
	Network string `pulumi:"network"`
	// Type of Network peeringMode
	// Default value is `PRIVATE_SERVICE_ACCESS`.
	// Possible values are: `PRIVATE_SERVICE_ACCESS`.
	//
	// ***
	PeeringMode *string `pulumi:"peeringMode"`
}

// ManagementServerNetworkInput is an input type that accepts ManagementServerNetworkArgs and ManagementServerNetworkOutput values.
// You can construct a concrete instance of `ManagementServerNetworkInput` via:
//
//	ManagementServerNetworkArgs{...}
type ManagementServerNetworkInput interface {
	pulumi.Input

	ToManagementServerNetworkOutput() ManagementServerNetworkOutput
	ToManagementServerNetworkOutputWithContext(context.Context) ManagementServerNetworkOutput
}

type ManagementServerNetworkArgs struct {
	// Network with format `projects/{{project_id}}/global/networks/{{network_id}}`
	Network pulumi.StringInput `pulumi:"network"`
	// Type of Network peeringMode
	// Default value is `PRIVATE_SERVICE_ACCESS`.
	// Possible values are: `PRIVATE_SERVICE_ACCESS`.
	//
	// ***
	PeeringMode pulumi.StringPtrInput `pulumi:"peeringMode"`
}

func (ManagementServerNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementServerNetwork)(nil)).Elem()
}

func (i ManagementServerNetworkArgs) ToManagementServerNetworkOutput() ManagementServerNetworkOutput {
	return i.ToManagementServerNetworkOutputWithContext(context.Background())
}

func (i ManagementServerNetworkArgs) ToManagementServerNetworkOutputWithContext(ctx context.Context) ManagementServerNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementServerNetworkOutput)
}

func (i ManagementServerNetworkArgs) ToOutput(ctx context.Context) pulumix.Output[ManagementServerNetwork] {
	return pulumix.Output[ManagementServerNetwork]{
		OutputState: i.ToManagementServerNetworkOutputWithContext(ctx).OutputState,
	}
}

// ManagementServerNetworkArrayInput is an input type that accepts ManagementServerNetworkArray and ManagementServerNetworkArrayOutput values.
// You can construct a concrete instance of `ManagementServerNetworkArrayInput` via:
//
//	ManagementServerNetworkArray{ ManagementServerNetworkArgs{...} }
type ManagementServerNetworkArrayInput interface {
	pulumi.Input

	ToManagementServerNetworkArrayOutput() ManagementServerNetworkArrayOutput
	ToManagementServerNetworkArrayOutputWithContext(context.Context) ManagementServerNetworkArrayOutput
}

type ManagementServerNetworkArray []ManagementServerNetworkInput

func (ManagementServerNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementServerNetwork)(nil)).Elem()
}

func (i ManagementServerNetworkArray) ToManagementServerNetworkArrayOutput() ManagementServerNetworkArrayOutput {
	return i.ToManagementServerNetworkArrayOutputWithContext(context.Background())
}

func (i ManagementServerNetworkArray) ToManagementServerNetworkArrayOutputWithContext(ctx context.Context) ManagementServerNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementServerNetworkArrayOutput)
}

func (i ManagementServerNetworkArray) ToOutput(ctx context.Context) pulumix.Output[[]ManagementServerNetwork] {
	return pulumix.Output[[]ManagementServerNetwork]{
		OutputState: i.ToManagementServerNetworkArrayOutputWithContext(ctx).OutputState,
	}
}

type ManagementServerNetworkOutput struct{ *pulumi.OutputState }

func (ManagementServerNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementServerNetwork)(nil)).Elem()
}

func (o ManagementServerNetworkOutput) ToManagementServerNetworkOutput() ManagementServerNetworkOutput {
	return o
}

func (o ManagementServerNetworkOutput) ToManagementServerNetworkOutputWithContext(ctx context.Context) ManagementServerNetworkOutput {
	return o
}

func (o ManagementServerNetworkOutput) ToOutput(ctx context.Context) pulumix.Output[ManagementServerNetwork] {
	return pulumix.Output[ManagementServerNetwork]{
		OutputState: o.OutputState,
	}
}

// Network with format `projects/{{project_id}}/global/networks/{{network_id}}`
func (o ManagementServerNetworkOutput) Network() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementServerNetwork) string { return v.Network }).(pulumi.StringOutput)
}

// Type of Network peeringMode
// Default value is `PRIVATE_SERVICE_ACCESS`.
// Possible values are: `PRIVATE_SERVICE_ACCESS`.
//
// ***
func (o ManagementServerNetworkOutput) PeeringMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementServerNetwork) *string { return v.PeeringMode }).(pulumi.StringPtrOutput)
}

type ManagementServerNetworkArrayOutput struct{ *pulumi.OutputState }

func (ManagementServerNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementServerNetwork)(nil)).Elem()
}

func (o ManagementServerNetworkArrayOutput) ToManagementServerNetworkArrayOutput() ManagementServerNetworkArrayOutput {
	return o
}

func (o ManagementServerNetworkArrayOutput) ToManagementServerNetworkArrayOutputWithContext(ctx context.Context) ManagementServerNetworkArrayOutput {
	return o
}

func (o ManagementServerNetworkArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ManagementServerNetwork] {
	return pulumix.Output[[]ManagementServerNetwork]{
		OutputState: o.OutputState,
	}
}

func (o ManagementServerNetworkArrayOutput) Index(i pulumi.IntInput) ManagementServerNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagementServerNetwork {
		return vs[0].([]ManagementServerNetwork)[vs[1].(int)]
	}).(ManagementServerNetworkOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementServerManagementUriInput)(nil)).Elem(), ManagementServerManagementUriArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementServerManagementUriArrayInput)(nil)).Elem(), ManagementServerManagementUriArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementServerNetworkInput)(nil)).Elem(), ManagementServerNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementServerNetworkArrayInput)(nil)).Elem(), ManagementServerNetworkArray{})
	pulumi.RegisterOutputType(ManagementServerManagementUriOutput{})
	pulumi.RegisterOutputType(ManagementServerManagementUriArrayOutput{})
	pulumi.RegisterOutputType(ManagementServerNetworkOutput{})
	pulumi.RegisterOutputType(ManagementServerNetworkArrayOutput{})
}
