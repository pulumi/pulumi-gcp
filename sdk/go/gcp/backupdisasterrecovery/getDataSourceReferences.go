// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package backupdisasterrecovery

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A list of Backup and DR data source references.
func GetDataSourceReferences(ctx *pulumi.Context, args *GetDataSourceReferencesArgs, opts ...pulumi.InvokeOption) (*GetDataSourceReferencesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDataSourceReferencesResult
	err := ctx.Invoke("gcp:backupdisasterrecovery/getDataSourceReferences:getDataSourceReferences", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDataSourceReferences.
type GetDataSourceReferencesArgs struct {
	Location string `pulumi:"location"`
	// - (Optional) The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// - (Required) The resource type to get the data source references for. Examples include, "sqladmin.googleapis.com/Instance" , "compute.googleapis.com/Instance" (right now this service not available for compute Instances , it will be added soon )
	ResourceType string `pulumi:"resourceType"`
}

// A collection of values returned by getDataSourceReferences.
type GetDataSourceReferencesResult struct {
	DataSourceReferences []GetDataSourceReferencesDataSourceReference `pulumi:"dataSourceReferences"`
	// The provider-assigned unique ID for this managed resource.
	Id           string `pulumi:"id"`
	Location     string `pulumi:"location"`
	Project      string `pulumi:"project"`
	ResourceType string `pulumi:"resourceType"`
}

func GetDataSourceReferencesOutput(ctx *pulumi.Context, args GetDataSourceReferencesOutputArgs, opts ...pulumi.InvokeOption) GetDataSourceReferencesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetDataSourceReferencesResultOutput, error) {
			args := v.(GetDataSourceReferencesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("gcp:backupdisasterrecovery/getDataSourceReferences:getDataSourceReferences", args, GetDataSourceReferencesResultOutput{}, options).(GetDataSourceReferencesResultOutput), nil
		}).(GetDataSourceReferencesResultOutput)
}

// A collection of arguments for invoking getDataSourceReferences.
type GetDataSourceReferencesOutputArgs struct {
	Location pulumi.StringInput `pulumi:"location"`
	// - (Optional) The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput `pulumi:"project"`
	// - (Required) The resource type to get the data source references for. Examples include, "sqladmin.googleapis.com/Instance" , "compute.googleapis.com/Instance" (right now this service not available for compute Instances , it will be added soon )
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
}

func (GetDataSourceReferencesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataSourceReferencesArgs)(nil)).Elem()
}

// A collection of values returned by getDataSourceReferences.
type GetDataSourceReferencesResultOutput struct{ *pulumi.OutputState }

func (GetDataSourceReferencesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataSourceReferencesResult)(nil)).Elem()
}

func (o GetDataSourceReferencesResultOutput) ToGetDataSourceReferencesResultOutput() GetDataSourceReferencesResultOutput {
	return o
}

func (o GetDataSourceReferencesResultOutput) ToGetDataSourceReferencesResultOutputWithContext(ctx context.Context) GetDataSourceReferencesResultOutput {
	return o
}

func (o GetDataSourceReferencesResultOutput) DataSourceReferences() GetDataSourceReferencesDataSourceReferenceArrayOutput {
	return o.ApplyT(func(v GetDataSourceReferencesResult) []GetDataSourceReferencesDataSourceReference {
		return v.DataSourceReferences
	}).(GetDataSourceReferencesDataSourceReferenceArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetDataSourceReferencesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceReferencesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetDataSourceReferencesResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceReferencesResult) string { return v.Location }).(pulumi.StringOutput)
}

func (o GetDataSourceReferencesResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceReferencesResult) string { return v.Project }).(pulumi.StringOutput)
}

func (o GetDataSourceReferencesResultOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceReferencesResult) string { return v.ResourceType }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDataSourceReferencesResultOutput{})
}
