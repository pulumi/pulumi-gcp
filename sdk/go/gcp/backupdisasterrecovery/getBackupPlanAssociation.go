// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package backupdisasterrecovery

import (
	"context"
	"errors"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/backupdisasterrecovery"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := backupdisasterrecovery.LookupBackupPlanAssociation(ctx, &backupdisasterrecovery.LookupBackupPlanAssociationArgs{
//				Location:                "us-central1",
//				BackupPlanAssociationId: "bpa-id",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupBackupPlanAssociation(ctx *pulumi.Context, args *LookupBackupPlanAssociationArgs, opts ...pulumi.InvokeOption) (*LookupBackupPlanAssociationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	invokeOpts, optsErr := pulumi.NewInvokeOptions(opts...)
	if optsErr != nil {
		return &LookupBackupPlanAssociationResult{}, optsErr
	}
	if len(invokeOpts.DependsOn) > 0 {
		return &LookupBackupPlanAssociationResult{}, errors.New("DependsOn is not supported for direct form invoke LookupBackupPlanAssociation, use LookupBackupPlanAssociationOutput instead")
	}
	if len(invokeOpts.DependsOnInputs) > 0 {
		return &LookupBackupPlanAssociationResult{}, errors.New("DependsOnInputs is not supported for direct form invoke LookupBackupPlanAssociation, use LookupBackupPlanAssociationOutput instead")
	}
	var rv LookupBackupPlanAssociationResult
	err := ctx.Invoke("gcp:backupdisasterrecovery/getBackupPlanAssociation:getBackupPlanAssociation", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBackupPlanAssociation.
type LookupBackupPlanAssociationArgs struct {
	// The id of Backupplan association resource.
	//
	// ***
	BackupPlanAssociationId string `pulumi:"backupPlanAssociationId"`
	// The location in which the Backupplan association resource belongs.
	Location string  `pulumi:"location"`
	Project  *string `pulumi:"project"`
}

// A collection of values returned by getBackupPlanAssociation.
type LookupBackupPlanAssociationResult struct {
	BackupPlan              string `pulumi:"backupPlan"`
	BackupPlanAssociationId string `pulumi:"backupPlanAssociationId"`
	CreateTime              string `pulumi:"createTime"`
	DataSource              string `pulumi:"dataSource"`
	// The provider-assigned unique ID for this managed resource.
	Id                                  string                                    `pulumi:"id"`
	LastSuccessfulBackupConsistencyTime string                                    `pulumi:"lastSuccessfulBackupConsistencyTime"`
	Location                            string                                    `pulumi:"location"`
	Name                                string                                    `pulumi:"name"`
	Project                             *string                                   `pulumi:"project"`
	Resource                            string                                    `pulumi:"resource"`
	ResourceType                        string                                    `pulumi:"resourceType"`
	RulesConfigInfos                    []GetBackupPlanAssociationRulesConfigInfo `pulumi:"rulesConfigInfos"`
	UpdateTime                          string                                    `pulumi:"updateTime"`
}

func LookupBackupPlanAssociationOutput(ctx *pulumi.Context, args LookupBackupPlanAssociationOutputArgs, opts ...pulumi.InvokeOption) LookupBackupPlanAssociationResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupBackupPlanAssociationResultOutput, error) {
			args := v.(LookupBackupPlanAssociationArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupBackupPlanAssociationResult
			secret, deps, err := ctx.InvokePackageRawWithDeps("gcp:backupdisasterrecovery/getBackupPlanAssociation:getBackupPlanAssociation", args, &rv, "", opts...)
			if err != nil {
				return LookupBackupPlanAssociationResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupBackupPlanAssociationResultOutput)
			output = pulumi.OutputWithDependencies(ctx.Context(), output, deps...).(LookupBackupPlanAssociationResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupBackupPlanAssociationResultOutput), nil
			}
			return output, nil
		}).(LookupBackupPlanAssociationResultOutput)
}

// A collection of arguments for invoking getBackupPlanAssociation.
type LookupBackupPlanAssociationOutputArgs struct {
	// The id of Backupplan association resource.
	//
	// ***
	BackupPlanAssociationId pulumi.StringInput `pulumi:"backupPlanAssociationId"`
	// The location in which the Backupplan association resource belongs.
	Location pulumi.StringInput    `pulumi:"location"`
	Project  pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupBackupPlanAssociationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBackupPlanAssociationArgs)(nil)).Elem()
}

// A collection of values returned by getBackupPlanAssociation.
type LookupBackupPlanAssociationResultOutput struct{ *pulumi.OutputState }

func (LookupBackupPlanAssociationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBackupPlanAssociationResult)(nil)).Elem()
}

func (o LookupBackupPlanAssociationResultOutput) ToLookupBackupPlanAssociationResultOutput() LookupBackupPlanAssociationResultOutput {
	return o
}

func (o LookupBackupPlanAssociationResultOutput) ToLookupBackupPlanAssociationResultOutputWithContext(ctx context.Context) LookupBackupPlanAssociationResultOutput {
	return o
}

func (o LookupBackupPlanAssociationResultOutput) BackupPlan() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackupPlanAssociationResult) string { return v.BackupPlan }).(pulumi.StringOutput)
}

func (o LookupBackupPlanAssociationResultOutput) BackupPlanAssociationId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackupPlanAssociationResult) string { return v.BackupPlanAssociationId }).(pulumi.StringOutput)
}

func (o LookupBackupPlanAssociationResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackupPlanAssociationResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

func (o LookupBackupPlanAssociationResultOutput) DataSource() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackupPlanAssociationResult) string { return v.DataSource }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupBackupPlanAssociationResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackupPlanAssociationResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupBackupPlanAssociationResultOutput) LastSuccessfulBackupConsistencyTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackupPlanAssociationResult) string { return v.LastSuccessfulBackupConsistencyTime }).(pulumi.StringOutput)
}

func (o LookupBackupPlanAssociationResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackupPlanAssociationResult) string { return v.Location }).(pulumi.StringOutput)
}

func (o LookupBackupPlanAssociationResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackupPlanAssociationResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupBackupPlanAssociationResultOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupBackupPlanAssociationResult) *string { return v.Project }).(pulumi.StringPtrOutput)
}

func (o LookupBackupPlanAssociationResultOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackupPlanAssociationResult) string { return v.Resource }).(pulumi.StringOutput)
}

func (o LookupBackupPlanAssociationResultOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackupPlanAssociationResult) string { return v.ResourceType }).(pulumi.StringOutput)
}

func (o LookupBackupPlanAssociationResultOutput) RulesConfigInfos() GetBackupPlanAssociationRulesConfigInfoArrayOutput {
	return o.ApplyT(func(v LookupBackupPlanAssociationResult) []GetBackupPlanAssociationRulesConfigInfo {
		return v.RulesConfigInfos
	}).(GetBackupPlanAssociationRulesConfigInfoArrayOutput)
}

func (o LookupBackupPlanAssociationResultOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackupPlanAssociationResult) string { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupBackupPlanAssociationResultOutput{})
}
