// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package backupdisasterrecovery

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ### Backup Dr Management Server
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/backupdisasterrecovery"
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/compute"
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/servicenetworking"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := compute.NewNetwork(ctx, "default", &compute.NetworkArgs{
//				Name: pulumi.String("vpc-network"),
//			})
//			if err != nil {
//				return err
//			}
//			privateIpAddress, err := compute.NewGlobalAddress(ctx, "private_ip_address", &compute.GlobalAddressArgs{
//				Name:         pulumi.String("vpc-network"),
//				AddressType:  pulumi.String("INTERNAL"),
//				Purpose:      pulumi.String("VPC_PEERING"),
//				PrefixLength: pulumi.Int(20),
//				Network:      _default.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			defaultConnection, err := servicenetworking.NewConnection(ctx, "default", &servicenetworking.ConnectionArgs{
//				Network: _default.ID(),
//				Service: pulumi.String("servicenetworking.googleapis.com"),
//				ReservedPeeringRanges: pulumi.StringArray{
//					privateIpAddress.Name,
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = backupdisasterrecovery.NewManagementServer(ctx, "ms-console", &backupdisasterrecovery.ManagementServerArgs{
//				Location: pulumi.String("us-central1"),
//				Name:     pulumi.String("ms-console"),
//				Type:     pulumi.String("BACKUP_RESTORE"),
//				Networks: backupdisasterrecovery.ManagementServerNetworkArray{
//					&backupdisasterrecovery.ManagementServerNetworkArgs{
//						Network:     _default.ID(),
//						PeeringMode: pulumi.String("PRIVATE_SERVICE_ACCESS"),
//					},
//				},
//			}, pulumi.DependsOn([]pulumi.Resource{
//				defaultConnection,
//			}))
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ManagementServer can be imported using any of these accepted formats:
//
// * `projects/{{project}}/locations/{{location}}/managementServers/{{name}}`
//
// * `{{project}}/{{location}}/{{name}}`
//
// * `{{location}}/{{name}}`
//
// When using the `pulumi import` command, ManagementServer can be imported using one of the formats above. For example:
//
// ```sh
// $ pulumi import gcp:backupdisasterrecovery/managementServer:ManagementServer default projects/{{project}}/locations/{{location}}/managementServers/{{name}}
// ```
//
// ```sh
// $ pulumi import gcp:backupdisasterrecovery/managementServer:ManagementServer default {{project}}/{{location}}/{{name}}
// ```
//
// ```sh
// $ pulumi import gcp:backupdisasterrecovery/managementServer:ManagementServer default {{location}}/{{name}}
// ```
type ManagementServer struct {
	pulumi.CustomResourceState

	// The location for the management server (management console)
	Location pulumi.StringOutput `pulumi:"location"`
	// The management console URI
	// Structure is documented below.
	ManagementUris ManagementServerManagementUriArrayOutput `pulumi:"managementUris"`
	// The name of management server (management console)
	Name pulumi.StringOutput `pulumi:"name"`
	// Network details to create management server (management console).
	// Structure is documented below.
	Networks ManagementServerNetworkArrayOutput `pulumi:"networks"`
	// The oauth2ClientId of management console.
	Oauth2ClientId pulumi.StringOutput `pulumi:"oauth2ClientId"`
	Project        pulumi.StringOutput `pulumi:"project"`
	// The type of management server (management console). Default value: "BACKUP_RESTORE" Possible values: ["BACKUP_RESTORE"]
	Type pulumi.StringPtrOutput `pulumi:"type"`
}

// NewManagementServer registers a new resource with the given unique name, arguments, and options.
func NewManagementServer(ctx *pulumi.Context,
	name string, args *ManagementServerArgs, opts ...pulumi.ResourceOption) (*ManagementServer, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	if args.Networks == nil {
		return nil, errors.New("invalid value for required argument 'Networks'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ManagementServer
	err := ctx.RegisterResource("gcp:backupdisasterrecovery/managementServer:ManagementServer", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetManagementServer gets an existing ManagementServer resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetManagementServer(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ManagementServerState, opts ...pulumi.ResourceOption) (*ManagementServer, error) {
	var resource ManagementServer
	err := ctx.ReadResource("gcp:backupdisasterrecovery/managementServer:ManagementServer", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ManagementServer resources.
type managementServerState struct {
	// The location for the management server (management console)
	Location *string `pulumi:"location"`
	// The management console URI
	// Structure is documented below.
	ManagementUris []ManagementServerManagementUri `pulumi:"managementUris"`
	// The name of management server (management console)
	Name *string `pulumi:"name"`
	// Network details to create management server (management console).
	// Structure is documented below.
	Networks []ManagementServerNetwork `pulumi:"networks"`
	// The oauth2ClientId of management console.
	Oauth2ClientId *string `pulumi:"oauth2ClientId"`
	Project        *string `pulumi:"project"`
	// The type of management server (management console). Default value: "BACKUP_RESTORE" Possible values: ["BACKUP_RESTORE"]
	Type *string `pulumi:"type"`
}

type ManagementServerState struct {
	// The location for the management server (management console)
	Location pulumi.StringPtrInput
	// The management console URI
	// Structure is documented below.
	ManagementUris ManagementServerManagementUriArrayInput
	// The name of management server (management console)
	Name pulumi.StringPtrInput
	// Network details to create management server (management console).
	// Structure is documented below.
	Networks ManagementServerNetworkArrayInput
	// The oauth2ClientId of management console.
	Oauth2ClientId pulumi.StringPtrInput
	Project        pulumi.StringPtrInput
	// The type of management server (management console). Default value: "BACKUP_RESTORE" Possible values: ["BACKUP_RESTORE"]
	Type pulumi.StringPtrInput
}

func (ManagementServerState) ElementType() reflect.Type {
	return reflect.TypeOf((*managementServerState)(nil)).Elem()
}

type managementServerArgs struct {
	// The location for the management server (management console)
	Location string `pulumi:"location"`
	// The name of management server (management console)
	Name *string `pulumi:"name"`
	// Network details to create management server (management console).
	// Structure is documented below.
	Networks []ManagementServerNetwork `pulumi:"networks"`
	Project  *string                   `pulumi:"project"`
	// The type of management server (management console). Default value: "BACKUP_RESTORE" Possible values: ["BACKUP_RESTORE"]
	Type *string `pulumi:"type"`
}

// The set of arguments for constructing a ManagementServer resource.
type ManagementServerArgs struct {
	// The location for the management server (management console)
	Location pulumi.StringInput
	// The name of management server (management console)
	Name pulumi.StringPtrInput
	// Network details to create management server (management console).
	// Structure is documented below.
	Networks ManagementServerNetworkArrayInput
	Project  pulumi.StringPtrInput
	// The type of management server (management console). Default value: "BACKUP_RESTORE" Possible values: ["BACKUP_RESTORE"]
	Type pulumi.StringPtrInput
}

func (ManagementServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*managementServerArgs)(nil)).Elem()
}

type ManagementServerInput interface {
	pulumi.Input

	ToManagementServerOutput() ManagementServerOutput
	ToManagementServerOutputWithContext(ctx context.Context) ManagementServerOutput
}

func (*ManagementServer) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementServer)(nil)).Elem()
}

func (i *ManagementServer) ToManagementServerOutput() ManagementServerOutput {
	return i.ToManagementServerOutputWithContext(context.Background())
}

func (i *ManagementServer) ToManagementServerOutputWithContext(ctx context.Context) ManagementServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementServerOutput)
}

// ManagementServerArrayInput is an input type that accepts ManagementServerArray and ManagementServerArrayOutput values.
// You can construct a concrete instance of `ManagementServerArrayInput` via:
//
//	ManagementServerArray{ ManagementServerArgs{...} }
type ManagementServerArrayInput interface {
	pulumi.Input

	ToManagementServerArrayOutput() ManagementServerArrayOutput
	ToManagementServerArrayOutputWithContext(context.Context) ManagementServerArrayOutput
}

type ManagementServerArray []ManagementServerInput

func (ManagementServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ManagementServer)(nil)).Elem()
}

func (i ManagementServerArray) ToManagementServerArrayOutput() ManagementServerArrayOutput {
	return i.ToManagementServerArrayOutputWithContext(context.Background())
}

func (i ManagementServerArray) ToManagementServerArrayOutputWithContext(ctx context.Context) ManagementServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementServerArrayOutput)
}

// ManagementServerMapInput is an input type that accepts ManagementServerMap and ManagementServerMapOutput values.
// You can construct a concrete instance of `ManagementServerMapInput` via:
//
//	ManagementServerMap{ "key": ManagementServerArgs{...} }
type ManagementServerMapInput interface {
	pulumi.Input

	ToManagementServerMapOutput() ManagementServerMapOutput
	ToManagementServerMapOutputWithContext(context.Context) ManagementServerMapOutput
}

type ManagementServerMap map[string]ManagementServerInput

func (ManagementServerMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ManagementServer)(nil)).Elem()
}

func (i ManagementServerMap) ToManagementServerMapOutput() ManagementServerMapOutput {
	return i.ToManagementServerMapOutputWithContext(context.Background())
}

func (i ManagementServerMap) ToManagementServerMapOutputWithContext(ctx context.Context) ManagementServerMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementServerMapOutput)
}

type ManagementServerOutput struct{ *pulumi.OutputState }

func (ManagementServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementServer)(nil)).Elem()
}

func (o ManagementServerOutput) ToManagementServerOutput() ManagementServerOutput {
	return o
}

func (o ManagementServerOutput) ToManagementServerOutputWithContext(ctx context.Context) ManagementServerOutput {
	return o
}

// The location for the management server (management console)
func (o ManagementServerOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagementServer) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The management console URI
// Structure is documented below.
func (o ManagementServerOutput) ManagementUris() ManagementServerManagementUriArrayOutput {
	return o.ApplyT(func(v *ManagementServer) ManagementServerManagementUriArrayOutput { return v.ManagementUris }).(ManagementServerManagementUriArrayOutput)
}

// The name of management server (management console)
func (o ManagementServerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagementServer) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Network details to create management server (management console).
// Structure is documented below.
func (o ManagementServerOutput) Networks() ManagementServerNetworkArrayOutput {
	return o.ApplyT(func(v *ManagementServer) ManagementServerNetworkArrayOutput { return v.Networks }).(ManagementServerNetworkArrayOutput)
}

// The oauth2ClientId of management console.
func (o ManagementServerOutput) Oauth2ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagementServer) pulumi.StringOutput { return v.Oauth2ClientId }).(pulumi.StringOutput)
}

func (o ManagementServerOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagementServer) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The type of management server (management console). Default value: "BACKUP_RESTORE" Possible values: ["BACKUP_RESTORE"]
func (o ManagementServerOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagementServer) pulumi.StringPtrOutput { return v.Type }).(pulumi.StringPtrOutput)
}

type ManagementServerArrayOutput struct{ *pulumi.OutputState }

func (ManagementServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ManagementServer)(nil)).Elem()
}

func (o ManagementServerArrayOutput) ToManagementServerArrayOutput() ManagementServerArrayOutput {
	return o
}

func (o ManagementServerArrayOutput) ToManagementServerArrayOutputWithContext(ctx context.Context) ManagementServerArrayOutput {
	return o
}

func (o ManagementServerArrayOutput) Index(i pulumi.IntInput) ManagementServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ManagementServer {
		return vs[0].([]*ManagementServer)[vs[1].(int)]
	}).(ManagementServerOutput)
}

type ManagementServerMapOutput struct{ *pulumi.OutputState }

func (ManagementServerMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ManagementServer)(nil)).Elem()
}

func (o ManagementServerMapOutput) ToManagementServerMapOutput() ManagementServerMapOutput {
	return o
}

func (o ManagementServerMapOutput) ToManagementServerMapOutputWithContext(ctx context.Context) ManagementServerMapOutput {
	return o
}

func (o ManagementServerMapOutput) MapIndex(k pulumi.StringInput) ManagementServerOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ManagementServer {
		return vs[0].(map[string]*ManagementServer)[vs[1].(string)]
	}).(ManagementServerOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementServerInput)(nil)).Elem(), &ManagementServer{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementServerArrayInput)(nil)).Elem(), ManagementServerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementServerMapInput)(nil)).Elem(), ManagementServerMap{})
	pulumi.RegisterOutputType(ManagementServerOutput{})
	pulumi.RegisterOutputType(ManagementServerArrayOutput{})
	pulumi.RegisterOutputType(ManagementServerMapOutput{})
}
