// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package backupdisasterrecovery

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a list of Backup and DR BackupPlanAssociations for a specific resource type.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/backupdisasterrecovery"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := backupdisasterrecovery.GetBackupPlanAssociations(ctx, &backupdisasterrecovery.GetBackupPlanAssociationsArgs{
//				Location:     "us-central1",
//				ResourceType: "compute.googleapis.com/Instance",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetBackupPlanAssociations(ctx *pulumi.Context, args *GetBackupPlanAssociationsArgs, opts ...pulumi.InvokeOption) (*GetBackupPlanAssociationsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetBackupPlanAssociationsResult
	err := ctx.Invoke("gcp:backupdisasterrecovery/getBackupPlanAssociations:getBackupPlanAssociations", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBackupPlanAssociations.
type GetBackupPlanAssociationsArgs struct {
	// The location where the Backup Plan Association resources reside.
	Location string `pulumi:"location"`
	// The project in which the resource belongs. If it
	// is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// The resource type of the workload. For example, sqladmin.googleapis.com/Instance or compute.googleapis.com/Instance.
	//
	// ***
	ResourceType string `pulumi:"resourceType"`
}

// A collection of values returned by getBackupPlanAssociations.
type GetBackupPlanAssociationsResult struct {
	// A list of the backup plan associations found.
	Associations []GetBackupPlanAssociationsAssociation `pulumi:"associations"`
	// The provider-assigned unique ID for this managed resource.
	Id       string `pulumi:"id"`
	Location string `pulumi:"location"`
	// The ID of the project in which the resource belongs.
	Project      string `pulumi:"project"`
	ResourceType string `pulumi:"resourceType"`
}

func GetBackupPlanAssociationsOutput(ctx *pulumi.Context, args GetBackupPlanAssociationsOutputArgs, opts ...pulumi.InvokeOption) GetBackupPlanAssociationsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetBackupPlanAssociationsResultOutput, error) {
			args := v.(GetBackupPlanAssociationsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("gcp:backupdisasterrecovery/getBackupPlanAssociations:getBackupPlanAssociations", args, GetBackupPlanAssociationsResultOutput{}, options).(GetBackupPlanAssociationsResultOutput), nil
		}).(GetBackupPlanAssociationsResultOutput)
}

// A collection of arguments for invoking getBackupPlanAssociations.
type GetBackupPlanAssociationsOutputArgs struct {
	// The location where the Backup Plan Association resources reside.
	Location pulumi.StringInput `pulumi:"location"`
	// The project in which the resource belongs. If it
	// is not provided, the provider project is used.
	Project pulumi.StringPtrInput `pulumi:"project"`
	// The resource type of the workload. For example, sqladmin.googleapis.com/Instance or compute.googleapis.com/Instance.
	//
	// ***
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
}

func (GetBackupPlanAssociationsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackupPlanAssociationsArgs)(nil)).Elem()
}

// A collection of values returned by getBackupPlanAssociations.
type GetBackupPlanAssociationsResultOutput struct{ *pulumi.OutputState }

func (GetBackupPlanAssociationsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackupPlanAssociationsResult)(nil)).Elem()
}

func (o GetBackupPlanAssociationsResultOutput) ToGetBackupPlanAssociationsResultOutput() GetBackupPlanAssociationsResultOutput {
	return o
}

func (o GetBackupPlanAssociationsResultOutput) ToGetBackupPlanAssociationsResultOutputWithContext(ctx context.Context) GetBackupPlanAssociationsResultOutput {
	return o
}

// A list of the backup plan associations found.
func (o GetBackupPlanAssociationsResultOutput) Associations() GetBackupPlanAssociationsAssociationArrayOutput {
	return o.ApplyT(func(v GetBackupPlanAssociationsResult) []GetBackupPlanAssociationsAssociation { return v.Associations }).(GetBackupPlanAssociationsAssociationArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetBackupPlanAssociationsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupPlanAssociationsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetBackupPlanAssociationsResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupPlanAssociationsResult) string { return v.Location }).(pulumi.StringOutput)
}

// The ID of the project in which the resource belongs.
func (o GetBackupPlanAssociationsResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupPlanAssociationsResult) string { return v.Project }).(pulumi.StringOutput)
}

func (o GetBackupPlanAssociationsResultOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupPlanAssociationsResult) string { return v.ResourceType }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetBackupPlanAssociationsResultOutput{})
}
