// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package backupdisasterrecovery

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A Backup and DRBackupVault.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/backupdisasterrecovery"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := backupdisasterrecovery.LookupBackupVault(ctx, &backupdisasterrecovery.LookupBackupVaultArgs{
//				Location:      "us-central1",
//				BackupVaultId: "bv-1",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupBackupVault(ctx *pulumi.Context, args *LookupBackupVaultArgs, opts ...pulumi.InvokeOption) (*LookupBackupVaultResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupBackupVaultResult
	err := ctx.Invoke("gcp:backupdisasterrecovery/getBackupVault:getBackupVault", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBackupVault.
type LookupBackupVaultArgs struct {
	// The id of Backup Vault resource.
	//
	// ***
	BackupVaultId string `pulumi:"backupVaultId"`
	// The location in which the Backup Vault resource belongs.
	Location string `pulumi:"location"`
	// The project in which the resource belongs. If it
	// is not provided, the provider project is used.
	Project *string `pulumi:"project"`
}

// A collection of values returned by getBackupVault.
type LookupBackupVaultResult struct {
	AccessRestriction                      string            `pulumi:"accessRestriction"`
	AllowMissing                           bool              `pulumi:"allowMissing"`
	Annotations                            map[string]string `pulumi:"annotations"`
	BackupCount                            string            `pulumi:"backupCount"`
	BackupMinimumEnforcedRetentionDuration string            `pulumi:"backupMinimumEnforcedRetentionDuration"`
	BackupRetentionInheritance             string            `pulumi:"backupRetentionInheritance"`
	BackupVaultId                          string            `pulumi:"backupVaultId"`
	CreateTime                             string            `pulumi:"createTime"`
	Deletable                              bool              `pulumi:"deletable"`
	Description                            string            `pulumi:"description"`
	EffectiveAnnotations                   map[string]string `pulumi:"effectiveAnnotations"`
	EffectiveLabels                        map[string]string `pulumi:"effectiveLabels"`
	EffectiveTime                          string            `pulumi:"effectiveTime"`
	Etag                                   string            `pulumi:"etag"`
	ForceDelete                            bool              `pulumi:"forceDelete"`
	ForceUpdate                            bool              `pulumi:"forceUpdate"`
	// The provider-assigned unique ID for this managed resource.
	Id                         string            `pulumi:"id"`
	IgnoreBackupPlanReferences bool              `pulumi:"ignoreBackupPlanReferences"`
	IgnoreInactiveDatasources  bool              `pulumi:"ignoreInactiveDatasources"`
	Labels                     map[string]string `pulumi:"labels"`
	Location                   string            `pulumi:"location"`
	Name                       string            `pulumi:"name"`
	Project                    *string           `pulumi:"project"`
	PulumiLabels               map[string]string `pulumi:"pulumiLabels"`
	ServiceAccount             string            `pulumi:"serviceAccount"`
	State                      string            `pulumi:"state"`
	TotalStoredBytes           string            `pulumi:"totalStoredBytes"`
	Uid                        string            `pulumi:"uid"`
	UpdateTime                 string            `pulumi:"updateTime"`
}

func LookupBackupVaultOutput(ctx *pulumi.Context, args LookupBackupVaultOutputArgs, opts ...pulumi.InvokeOption) LookupBackupVaultResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupBackupVaultResultOutput, error) {
			args := v.(LookupBackupVaultArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("gcp:backupdisasterrecovery/getBackupVault:getBackupVault", args, LookupBackupVaultResultOutput{}, options).(LookupBackupVaultResultOutput), nil
		}).(LookupBackupVaultResultOutput)
}

// A collection of arguments for invoking getBackupVault.
type LookupBackupVaultOutputArgs struct {
	// The id of Backup Vault resource.
	//
	// ***
	BackupVaultId pulumi.StringInput `pulumi:"backupVaultId"`
	// The location in which the Backup Vault resource belongs.
	Location pulumi.StringInput `pulumi:"location"`
	// The project in which the resource belongs. If it
	// is not provided, the provider project is used.
	Project pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupBackupVaultOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBackupVaultArgs)(nil)).Elem()
}

// A collection of values returned by getBackupVault.
type LookupBackupVaultResultOutput struct{ *pulumi.OutputState }

func (LookupBackupVaultResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBackupVaultResult)(nil)).Elem()
}

func (o LookupBackupVaultResultOutput) ToLookupBackupVaultResultOutput() LookupBackupVaultResultOutput {
	return o
}

func (o LookupBackupVaultResultOutput) ToLookupBackupVaultResultOutputWithContext(ctx context.Context) LookupBackupVaultResultOutput {
	return o
}

func (o LookupBackupVaultResultOutput) AccessRestriction() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackupVaultResult) string { return v.AccessRestriction }).(pulumi.StringOutput)
}

func (o LookupBackupVaultResultOutput) AllowMissing() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupBackupVaultResult) bool { return v.AllowMissing }).(pulumi.BoolOutput)
}

func (o LookupBackupVaultResultOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupBackupVaultResult) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

func (o LookupBackupVaultResultOutput) BackupCount() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackupVaultResult) string { return v.BackupCount }).(pulumi.StringOutput)
}

func (o LookupBackupVaultResultOutput) BackupMinimumEnforcedRetentionDuration() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackupVaultResult) string { return v.BackupMinimumEnforcedRetentionDuration }).(pulumi.StringOutput)
}

func (o LookupBackupVaultResultOutput) BackupRetentionInheritance() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackupVaultResult) string { return v.BackupRetentionInheritance }).(pulumi.StringOutput)
}

func (o LookupBackupVaultResultOutput) BackupVaultId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackupVaultResult) string { return v.BackupVaultId }).(pulumi.StringOutput)
}

func (o LookupBackupVaultResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackupVaultResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

func (o LookupBackupVaultResultOutput) Deletable() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupBackupVaultResult) bool { return v.Deletable }).(pulumi.BoolOutput)
}

func (o LookupBackupVaultResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackupVaultResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupBackupVaultResultOutput) EffectiveAnnotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupBackupVaultResult) map[string]string { return v.EffectiveAnnotations }).(pulumi.StringMapOutput)
}

func (o LookupBackupVaultResultOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupBackupVaultResult) map[string]string { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

func (o LookupBackupVaultResultOutput) EffectiveTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackupVaultResult) string { return v.EffectiveTime }).(pulumi.StringOutput)
}

func (o LookupBackupVaultResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackupVaultResult) string { return v.Etag }).(pulumi.StringOutput)
}

func (o LookupBackupVaultResultOutput) ForceDelete() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupBackupVaultResult) bool { return v.ForceDelete }).(pulumi.BoolOutput)
}

func (o LookupBackupVaultResultOutput) ForceUpdate() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupBackupVaultResult) bool { return v.ForceUpdate }).(pulumi.BoolOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupBackupVaultResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackupVaultResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupBackupVaultResultOutput) IgnoreBackupPlanReferences() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupBackupVaultResult) bool { return v.IgnoreBackupPlanReferences }).(pulumi.BoolOutput)
}

func (o LookupBackupVaultResultOutput) IgnoreInactiveDatasources() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupBackupVaultResult) bool { return v.IgnoreInactiveDatasources }).(pulumi.BoolOutput)
}

func (o LookupBackupVaultResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupBackupVaultResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

func (o LookupBackupVaultResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackupVaultResult) string { return v.Location }).(pulumi.StringOutput)
}

func (o LookupBackupVaultResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackupVaultResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupBackupVaultResultOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupBackupVaultResult) *string { return v.Project }).(pulumi.StringPtrOutput)
}

func (o LookupBackupVaultResultOutput) PulumiLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupBackupVaultResult) map[string]string { return v.PulumiLabels }).(pulumi.StringMapOutput)
}

func (o LookupBackupVaultResultOutput) ServiceAccount() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackupVaultResult) string { return v.ServiceAccount }).(pulumi.StringOutput)
}

func (o LookupBackupVaultResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackupVaultResult) string { return v.State }).(pulumi.StringOutput)
}

func (o LookupBackupVaultResultOutput) TotalStoredBytes() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackupVaultResult) string { return v.TotalStoredBytes }).(pulumi.StringOutput)
}

func (o LookupBackupVaultResultOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackupVaultResult) string { return v.Uid }).(pulumi.StringOutput)
}

func (o LookupBackupVaultResultOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackupVaultResult) string { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupBackupVaultResultOutput{})
}
