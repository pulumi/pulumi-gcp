// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package backupdisasterrecovery

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A Backup and DR BackupPlanAssociation.
//
// To get more information about BackupPlanAssociation, see:
//
// * [API documentation](https://cloud.google.com/backup-disaster-recovery/docs/reference/rest)
// * How-to Guides
//   - [Official Documentation](https://cloud.google.com/backup-disaster-recovery/docs)
//
// ## Example Usage
//
// ### Backup Dr Bpa
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/backupdisasterrecovery"
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/compute"
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/serviceaccount"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			mySA, err := serviceaccount.NewAccount(ctx, "mySA", &serviceaccount.AccountArgs{
//				AccountId:   pulumi.String("my-custom"),
//				DisplayName: pulumi.String("Custom SA for VM Instance"),
//			})
//			if err != nil {
//				return err
//			}
//			myinstance, err := compute.NewInstance(ctx, "myinstance", &compute.InstanceArgs{
//				NetworkInterfaces: compute.InstanceNetworkInterfaceArray{
//					&compute.InstanceNetworkInterfaceArgs{
//						AccessConfigs: compute.InstanceNetworkInterfaceAccessConfigArray{
//							&compute.InstanceNetworkInterfaceAccessConfigArgs{},
//						},
//						Network: pulumi.String("default"),
//					},
//				},
//				Name:        pulumi.String("test-instance"),
//				MachineType: pulumi.String("n2-standard-2"),
//				Zone:        pulumi.String("us-central1-a"),
//				BootDisk: &compute.InstanceBootDiskArgs{
//					InitializeParams: &compute.InstanceBootDiskInitializeParamsArgs{
//						Image: pulumi.String("debian-cloud/debian-11"),
//						Labels: pulumi.StringMap{
//							"my_label": pulumi.String("value"),
//						},
//					},
//				},
//				ScratchDisks: compute.InstanceScratchDiskArray{
//					&compute.InstanceScratchDiskArgs{
//						Interface: pulumi.String("NVME"),
//					},
//				},
//				ServiceAccount: &compute.InstanceServiceAccountArgs{
//					Email: mySA.Email,
//					Scopes: pulumi.StringArray{
//						pulumi.String("cloud-platform"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			bv1, err := backupdisasterrecovery.NewBackupVault(ctx, "bv1", &backupdisasterrecovery.BackupVaultArgs{
//				Location:                               pulumi.String("us-central1"),
//				BackupVaultId:                          pulumi.String("bv-bpa"),
//				BackupMinimumEnforcedRetentionDuration: pulumi.String("100000s"),
//				ForceDelete:                            pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			bp1, err := backupdisasterrecovery.NewBackupPlan(ctx, "bp1", &backupdisasterrecovery.BackupPlanArgs{
//				Location:     pulumi.String("us-central1"),
//				BackupPlanId: pulumi.String("bp-bpa-test"),
//				ResourceType: pulumi.String("compute.googleapis.com/Instance"),
//				BackupVault:  bv1.ID(),
//				BackupRules: backupdisasterrecovery.BackupPlanBackupRuleArray{
//					&backupdisasterrecovery.BackupPlanBackupRuleArgs{
//						RuleId:              pulumi.String("rule-1"),
//						BackupRetentionDays: pulumi.Int(2),
//						StandardSchedule: &backupdisasterrecovery.BackupPlanBackupRuleStandardScheduleArgs{
//							RecurrenceType:  pulumi.String("HOURLY"),
//							HourlyFrequency: pulumi.Int(6),
//							TimeZone:        pulumi.String("UTC"),
//							BackupWindow: &backupdisasterrecovery.BackupPlanBackupRuleStandardScheduleBackupWindowArgs{
//								StartHourOfDay: pulumi.Int(12),
//								EndHourOfDay:   pulumi.Int(18),
//							},
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = backupdisasterrecovery.NewBackupPlanAssociation(ctx, "my-backup-plan-association", &backupdisasterrecovery.BackupPlanAssociationArgs{
//				Location:                pulumi.String("us-central1"),
//				ResourceType:            pulumi.String("compute.googleapis.com/Instance"),
//				BackupPlanAssociationId: pulumi.String("my-bpa"),
//				Resource:                myinstance.ID(),
//				BackupPlan:              bp1.Name,
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// BackupPlanAssociation can be imported using any of these accepted formats:
//
// * `projects/{{project}}/locations/{{location}}/backupPlanAssociations/{{backup_plan_association_id}}`
//
// * `{{project}}/{{location}}/{{backup_plan_association_id}}`
//
// * `{{location}}/{{backup_plan_association_id}}`
//
// When using the `pulumi import` command, BackupPlanAssociation can be imported using one of the formats above. For example:
//
// ```sh
// $ pulumi import gcp:backupdisasterrecovery/backupPlanAssociation:BackupPlanAssociation default projects/{{project}}/locations/{{location}}/backupPlanAssociations/{{backup_plan_association_id}}
// ```
//
// ```sh
// $ pulumi import gcp:backupdisasterrecovery/backupPlanAssociation:BackupPlanAssociation default {{project}}/{{location}}/{{backup_plan_association_id}}
// ```
//
// ```sh
// $ pulumi import gcp:backupdisasterrecovery/backupPlanAssociation:BackupPlanAssociation default {{location}}/{{backup_plan_association_id}}
// ```
type BackupPlanAssociation struct {
	pulumi.CustomResourceState

	// The BP with which resource needs to be created
	// Note:
	// - A Backup Plan configured for 'compute.googleapis.com/Instance', can only protect instance type resources.
	// - A Backup Plan configured for 'compute.googleapis.com/Disk' can be used to protect both standard Disks and Regional Disks resources.
	BackupPlan pulumi.StringOutput `pulumi:"backupPlan"`
	// The id of backupplan association
	//
	// ***
	BackupPlanAssociationId pulumi.StringOutput `pulumi:"backupPlanAssociationId"`
	// The time when the instance was created
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Resource name of data source which will be used as storage location for backups taken
	DataSource pulumi.StringOutput `pulumi:"dataSource"`
	// The point in time when the last successful backup was captured from the source
	LastSuccessfulBackupConsistencyTime pulumi.StringOutput `pulumi:"lastSuccessfulBackupConsistencyTime"`
	// The location for the backupplan association
	Location pulumi.StringOutput `pulumi:"location"`
	// The name of backup plan association resource created
	Name pulumi.StringOutput `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
	// The resource for which BPA needs to be created
	Resource pulumi.StringOutput `pulumi:"resource"`
	// The resource type of workload on which backupplan is applied.
	// Examples include, "compute.googleapis.com/Instance", "compute.googleapis.com/Disk", and "compute.googleapis.com/RegionDisk"
	ResourceType pulumi.StringOutput `pulumi:"resourceType"`
	// Message for rules config info
	// Structure is documented below.
	RulesConfigInfos BackupPlanAssociationRulesConfigInfoArrayOutput `pulumi:"rulesConfigInfos"`
	// The time when the instance was updated.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewBackupPlanAssociation registers a new resource with the given unique name, arguments, and options.
func NewBackupPlanAssociation(ctx *pulumi.Context,
	name string, args *BackupPlanAssociationArgs, opts ...pulumi.ResourceOption) (*BackupPlanAssociation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BackupPlan == nil {
		return nil, errors.New("invalid value for required argument 'BackupPlan'")
	}
	if args.BackupPlanAssociationId == nil {
		return nil, errors.New("invalid value for required argument 'BackupPlanAssociationId'")
	}
	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	if args.Resource == nil {
		return nil, errors.New("invalid value for required argument 'Resource'")
	}
	if args.ResourceType == nil {
		return nil, errors.New("invalid value for required argument 'ResourceType'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource BackupPlanAssociation
	err := ctx.RegisterResource("gcp:backupdisasterrecovery/backupPlanAssociation:BackupPlanAssociation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBackupPlanAssociation gets an existing BackupPlanAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBackupPlanAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BackupPlanAssociationState, opts ...pulumi.ResourceOption) (*BackupPlanAssociation, error) {
	var resource BackupPlanAssociation
	err := ctx.ReadResource("gcp:backupdisasterrecovery/backupPlanAssociation:BackupPlanAssociation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BackupPlanAssociation resources.
type backupPlanAssociationState struct {
	// The BP with which resource needs to be created
	// Note:
	// - A Backup Plan configured for 'compute.googleapis.com/Instance', can only protect instance type resources.
	// - A Backup Plan configured for 'compute.googleapis.com/Disk' can be used to protect both standard Disks and Regional Disks resources.
	BackupPlan *string `pulumi:"backupPlan"`
	// The id of backupplan association
	//
	// ***
	BackupPlanAssociationId *string `pulumi:"backupPlanAssociationId"`
	// The time when the instance was created
	CreateTime *string `pulumi:"createTime"`
	// Resource name of data source which will be used as storage location for backups taken
	DataSource *string `pulumi:"dataSource"`
	// The point in time when the last successful backup was captured from the source
	LastSuccessfulBackupConsistencyTime *string `pulumi:"lastSuccessfulBackupConsistencyTime"`
	// The location for the backupplan association
	Location *string `pulumi:"location"`
	// The name of backup plan association resource created
	Name *string `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// The resource for which BPA needs to be created
	Resource *string `pulumi:"resource"`
	// The resource type of workload on which backupplan is applied.
	// Examples include, "compute.googleapis.com/Instance", "compute.googleapis.com/Disk", and "compute.googleapis.com/RegionDisk"
	ResourceType *string `pulumi:"resourceType"`
	// Message for rules config info
	// Structure is documented below.
	RulesConfigInfos []BackupPlanAssociationRulesConfigInfo `pulumi:"rulesConfigInfos"`
	// The time when the instance was updated.
	UpdateTime *string `pulumi:"updateTime"`
}

type BackupPlanAssociationState struct {
	// The BP with which resource needs to be created
	// Note:
	// - A Backup Plan configured for 'compute.googleapis.com/Instance', can only protect instance type resources.
	// - A Backup Plan configured for 'compute.googleapis.com/Disk' can be used to protect both standard Disks and Regional Disks resources.
	BackupPlan pulumi.StringPtrInput
	// The id of backupplan association
	//
	// ***
	BackupPlanAssociationId pulumi.StringPtrInput
	// The time when the instance was created
	CreateTime pulumi.StringPtrInput
	// Resource name of data source which will be used as storage location for backups taken
	DataSource pulumi.StringPtrInput
	// The point in time when the last successful backup was captured from the source
	LastSuccessfulBackupConsistencyTime pulumi.StringPtrInput
	// The location for the backupplan association
	Location pulumi.StringPtrInput
	// The name of backup plan association resource created
	Name pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// The resource for which BPA needs to be created
	Resource pulumi.StringPtrInput
	// The resource type of workload on which backupplan is applied.
	// Examples include, "compute.googleapis.com/Instance", "compute.googleapis.com/Disk", and "compute.googleapis.com/RegionDisk"
	ResourceType pulumi.StringPtrInput
	// Message for rules config info
	// Structure is documented below.
	RulesConfigInfos BackupPlanAssociationRulesConfigInfoArrayInput
	// The time when the instance was updated.
	UpdateTime pulumi.StringPtrInput
}

func (BackupPlanAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*backupPlanAssociationState)(nil)).Elem()
}

type backupPlanAssociationArgs struct {
	// The BP with which resource needs to be created
	// Note:
	// - A Backup Plan configured for 'compute.googleapis.com/Instance', can only protect instance type resources.
	// - A Backup Plan configured for 'compute.googleapis.com/Disk' can be used to protect both standard Disks and Regional Disks resources.
	BackupPlan string `pulumi:"backupPlan"`
	// The id of backupplan association
	//
	// ***
	BackupPlanAssociationId string `pulumi:"backupPlanAssociationId"`
	// The location for the backupplan association
	Location string `pulumi:"location"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// The resource for which BPA needs to be created
	Resource string `pulumi:"resource"`
	// The resource type of workload on which backupplan is applied.
	// Examples include, "compute.googleapis.com/Instance", "compute.googleapis.com/Disk", and "compute.googleapis.com/RegionDisk"
	ResourceType string `pulumi:"resourceType"`
}

// The set of arguments for constructing a BackupPlanAssociation resource.
type BackupPlanAssociationArgs struct {
	// The BP with which resource needs to be created
	// Note:
	// - A Backup Plan configured for 'compute.googleapis.com/Instance', can only protect instance type resources.
	// - A Backup Plan configured for 'compute.googleapis.com/Disk' can be used to protect both standard Disks and Regional Disks resources.
	BackupPlan pulumi.StringInput
	// The id of backupplan association
	//
	// ***
	BackupPlanAssociationId pulumi.StringInput
	// The location for the backupplan association
	Location pulumi.StringInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// The resource for which BPA needs to be created
	Resource pulumi.StringInput
	// The resource type of workload on which backupplan is applied.
	// Examples include, "compute.googleapis.com/Instance", "compute.googleapis.com/Disk", and "compute.googleapis.com/RegionDisk"
	ResourceType pulumi.StringInput
}

func (BackupPlanAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*backupPlanAssociationArgs)(nil)).Elem()
}

type BackupPlanAssociationInput interface {
	pulumi.Input

	ToBackupPlanAssociationOutput() BackupPlanAssociationOutput
	ToBackupPlanAssociationOutputWithContext(ctx context.Context) BackupPlanAssociationOutput
}

func (*BackupPlanAssociation) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupPlanAssociation)(nil)).Elem()
}

func (i *BackupPlanAssociation) ToBackupPlanAssociationOutput() BackupPlanAssociationOutput {
	return i.ToBackupPlanAssociationOutputWithContext(context.Background())
}

func (i *BackupPlanAssociation) ToBackupPlanAssociationOutputWithContext(ctx context.Context) BackupPlanAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupPlanAssociationOutput)
}

// BackupPlanAssociationArrayInput is an input type that accepts BackupPlanAssociationArray and BackupPlanAssociationArrayOutput values.
// You can construct a concrete instance of `BackupPlanAssociationArrayInput` via:
//
//	BackupPlanAssociationArray{ BackupPlanAssociationArgs{...} }
type BackupPlanAssociationArrayInput interface {
	pulumi.Input

	ToBackupPlanAssociationArrayOutput() BackupPlanAssociationArrayOutput
	ToBackupPlanAssociationArrayOutputWithContext(context.Context) BackupPlanAssociationArrayOutput
}

type BackupPlanAssociationArray []BackupPlanAssociationInput

func (BackupPlanAssociationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BackupPlanAssociation)(nil)).Elem()
}

func (i BackupPlanAssociationArray) ToBackupPlanAssociationArrayOutput() BackupPlanAssociationArrayOutput {
	return i.ToBackupPlanAssociationArrayOutputWithContext(context.Background())
}

func (i BackupPlanAssociationArray) ToBackupPlanAssociationArrayOutputWithContext(ctx context.Context) BackupPlanAssociationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupPlanAssociationArrayOutput)
}

// BackupPlanAssociationMapInput is an input type that accepts BackupPlanAssociationMap and BackupPlanAssociationMapOutput values.
// You can construct a concrete instance of `BackupPlanAssociationMapInput` via:
//
//	BackupPlanAssociationMap{ "key": BackupPlanAssociationArgs{...} }
type BackupPlanAssociationMapInput interface {
	pulumi.Input

	ToBackupPlanAssociationMapOutput() BackupPlanAssociationMapOutput
	ToBackupPlanAssociationMapOutputWithContext(context.Context) BackupPlanAssociationMapOutput
}

type BackupPlanAssociationMap map[string]BackupPlanAssociationInput

func (BackupPlanAssociationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BackupPlanAssociation)(nil)).Elem()
}

func (i BackupPlanAssociationMap) ToBackupPlanAssociationMapOutput() BackupPlanAssociationMapOutput {
	return i.ToBackupPlanAssociationMapOutputWithContext(context.Background())
}

func (i BackupPlanAssociationMap) ToBackupPlanAssociationMapOutputWithContext(ctx context.Context) BackupPlanAssociationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupPlanAssociationMapOutput)
}

type BackupPlanAssociationOutput struct{ *pulumi.OutputState }

func (BackupPlanAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupPlanAssociation)(nil)).Elem()
}

func (o BackupPlanAssociationOutput) ToBackupPlanAssociationOutput() BackupPlanAssociationOutput {
	return o
}

func (o BackupPlanAssociationOutput) ToBackupPlanAssociationOutputWithContext(ctx context.Context) BackupPlanAssociationOutput {
	return o
}

// The BP with which resource needs to be created
// Note:
// - A Backup Plan configured for 'compute.googleapis.com/Instance', can only protect instance type resources.
// - A Backup Plan configured for 'compute.googleapis.com/Disk' can be used to protect both standard Disks and Regional Disks resources.
func (o BackupPlanAssociationOutput) BackupPlan() pulumi.StringOutput {
	return o.ApplyT(func(v *BackupPlanAssociation) pulumi.StringOutput { return v.BackupPlan }).(pulumi.StringOutput)
}

// The id of backupplan association
//
// ***
func (o BackupPlanAssociationOutput) BackupPlanAssociationId() pulumi.StringOutput {
	return o.ApplyT(func(v *BackupPlanAssociation) pulumi.StringOutput { return v.BackupPlanAssociationId }).(pulumi.StringOutput)
}

// The time when the instance was created
func (o BackupPlanAssociationOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *BackupPlanAssociation) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Resource name of data source which will be used as storage location for backups taken
func (o BackupPlanAssociationOutput) DataSource() pulumi.StringOutput {
	return o.ApplyT(func(v *BackupPlanAssociation) pulumi.StringOutput { return v.DataSource }).(pulumi.StringOutput)
}

// The point in time when the last successful backup was captured from the source
func (o BackupPlanAssociationOutput) LastSuccessfulBackupConsistencyTime() pulumi.StringOutput {
	return o.ApplyT(func(v *BackupPlanAssociation) pulumi.StringOutput { return v.LastSuccessfulBackupConsistencyTime }).(pulumi.StringOutput)
}

// The location for the backupplan association
func (o BackupPlanAssociationOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *BackupPlanAssociation) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name of backup plan association resource created
func (o BackupPlanAssociationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *BackupPlanAssociation) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The ID of the project in which the resource belongs.
// If it is not provided, the provider project is used.
func (o BackupPlanAssociationOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *BackupPlanAssociation) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The resource for which BPA needs to be created
func (o BackupPlanAssociationOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v *BackupPlanAssociation) pulumi.StringOutput { return v.Resource }).(pulumi.StringOutput)
}

// The resource type of workload on which backupplan is applied.
// Examples include, "compute.googleapis.com/Instance", "compute.googleapis.com/Disk", and "compute.googleapis.com/RegionDisk"
func (o BackupPlanAssociationOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v *BackupPlanAssociation) pulumi.StringOutput { return v.ResourceType }).(pulumi.StringOutput)
}

// Message for rules config info
// Structure is documented below.
func (o BackupPlanAssociationOutput) RulesConfigInfos() BackupPlanAssociationRulesConfigInfoArrayOutput {
	return o.ApplyT(func(v *BackupPlanAssociation) BackupPlanAssociationRulesConfigInfoArrayOutput {
		return v.RulesConfigInfos
	}).(BackupPlanAssociationRulesConfigInfoArrayOutput)
}

// The time when the instance was updated.
func (o BackupPlanAssociationOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *BackupPlanAssociation) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

type BackupPlanAssociationArrayOutput struct{ *pulumi.OutputState }

func (BackupPlanAssociationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BackupPlanAssociation)(nil)).Elem()
}

func (o BackupPlanAssociationArrayOutput) ToBackupPlanAssociationArrayOutput() BackupPlanAssociationArrayOutput {
	return o
}

func (o BackupPlanAssociationArrayOutput) ToBackupPlanAssociationArrayOutputWithContext(ctx context.Context) BackupPlanAssociationArrayOutput {
	return o
}

func (o BackupPlanAssociationArrayOutput) Index(i pulumi.IntInput) BackupPlanAssociationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *BackupPlanAssociation {
		return vs[0].([]*BackupPlanAssociation)[vs[1].(int)]
	}).(BackupPlanAssociationOutput)
}

type BackupPlanAssociationMapOutput struct{ *pulumi.OutputState }

func (BackupPlanAssociationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BackupPlanAssociation)(nil)).Elem()
}

func (o BackupPlanAssociationMapOutput) ToBackupPlanAssociationMapOutput() BackupPlanAssociationMapOutput {
	return o
}

func (o BackupPlanAssociationMapOutput) ToBackupPlanAssociationMapOutputWithContext(ctx context.Context) BackupPlanAssociationMapOutput {
	return o
}

func (o BackupPlanAssociationMapOutput) MapIndex(k pulumi.StringInput) BackupPlanAssociationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *BackupPlanAssociation {
		return vs[0].(map[string]*BackupPlanAssociation)[vs[1].(string)]
	}).(BackupPlanAssociationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BackupPlanAssociationInput)(nil)).Elem(), &BackupPlanAssociation{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackupPlanAssociationArrayInput)(nil)).Elem(), BackupPlanAssociationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackupPlanAssociationMapInput)(nil)).Elem(), BackupPlanAssociationMap{})
	pulumi.RegisterOutputType(BackupPlanAssociationOutput{})
	pulumi.RegisterOutputType(BackupPlanAssociationArrayOutput{})
	pulumi.RegisterOutputType(BackupPlanAssociationMapOutput{})
}
