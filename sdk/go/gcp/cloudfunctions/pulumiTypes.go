// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudfunctions

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type FunctionEventTrigger struct {
	// The type of event to observe. For example: `"google.storage.object.finalize"`.
	// See the documentation on [calling Cloud Functions](https://cloud.google.com/functions/docs/calling/) for a
	// full reference of accepted triggers.
	EventType string `pulumi:"eventType"`
	// Specifies policy for failed executions. Structure is documented below.
	FailurePolicy *FunctionEventTriggerFailurePolicy `pulumi:"failurePolicy"`
	// Required. The name or partial URI of the resource from
	// which to observe events. For example, `"myBucket"` or `"projects/my-project/topics/my-topic"`
	Resource string `pulumi:"resource"`
}

// FunctionEventTriggerInput is an input type that accepts FunctionEventTriggerArgs and FunctionEventTriggerOutput values.
// You can construct a concrete instance of `FunctionEventTriggerInput` via:
//
//	FunctionEventTriggerArgs{...}
type FunctionEventTriggerInput interface {
	pulumi.Input

	ToFunctionEventTriggerOutput() FunctionEventTriggerOutput
	ToFunctionEventTriggerOutputWithContext(context.Context) FunctionEventTriggerOutput
}

type FunctionEventTriggerArgs struct {
	// The type of event to observe. For example: `"google.storage.object.finalize"`.
	// See the documentation on [calling Cloud Functions](https://cloud.google.com/functions/docs/calling/) for a
	// full reference of accepted triggers.
	EventType pulumi.StringInput `pulumi:"eventType"`
	// Specifies policy for failed executions. Structure is documented below.
	FailurePolicy FunctionEventTriggerFailurePolicyPtrInput `pulumi:"failurePolicy"`
	// Required. The name or partial URI of the resource from
	// which to observe events. For example, `"myBucket"` or `"projects/my-project/topics/my-topic"`
	Resource pulumi.StringInput `pulumi:"resource"`
}

func (FunctionEventTriggerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionEventTrigger)(nil)).Elem()
}

func (i FunctionEventTriggerArgs) ToFunctionEventTriggerOutput() FunctionEventTriggerOutput {
	return i.ToFunctionEventTriggerOutputWithContext(context.Background())
}

func (i FunctionEventTriggerArgs) ToFunctionEventTriggerOutputWithContext(ctx context.Context) FunctionEventTriggerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionEventTriggerOutput)
}

func (i FunctionEventTriggerArgs) ToFunctionEventTriggerPtrOutput() FunctionEventTriggerPtrOutput {
	return i.ToFunctionEventTriggerPtrOutputWithContext(context.Background())
}

func (i FunctionEventTriggerArgs) ToFunctionEventTriggerPtrOutputWithContext(ctx context.Context) FunctionEventTriggerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionEventTriggerOutput).ToFunctionEventTriggerPtrOutputWithContext(ctx)
}

// FunctionEventTriggerPtrInput is an input type that accepts FunctionEventTriggerArgs, FunctionEventTriggerPtr and FunctionEventTriggerPtrOutput values.
// You can construct a concrete instance of `FunctionEventTriggerPtrInput` via:
//
//	        FunctionEventTriggerArgs{...}
//
//	or:
//
//	        nil
type FunctionEventTriggerPtrInput interface {
	pulumi.Input

	ToFunctionEventTriggerPtrOutput() FunctionEventTriggerPtrOutput
	ToFunctionEventTriggerPtrOutputWithContext(context.Context) FunctionEventTriggerPtrOutput
}

type functionEventTriggerPtrType FunctionEventTriggerArgs

func FunctionEventTriggerPtr(v *FunctionEventTriggerArgs) FunctionEventTriggerPtrInput {
	return (*functionEventTriggerPtrType)(v)
}

func (*functionEventTriggerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionEventTrigger)(nil)).Elem()
}

func (i *functionEventTriggerPtrType) ToFunctionEventTriggerPtrOutput() FunctionEventTriggerPtrOutput {
	return i.ToFunctionEventTriggerPtrOutputWithContext(context.Background())
}

func (i *functionEventTriggerPtrType) ToFunctionEventTriggerPtrOutputWithContext(ctx context.Context) FunctionEventTriggerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionEventTriggerPtrOutput)
}

type FunctionEventTriggerOutput struct{ *pulumi.OutputState }

func (FunctionEventTriggerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionEventTrigger)(nil)).Elem()
}

func (o FunctionEventTriggerOutput) ToFunctionEventTriggerOutput() FunctionEventTriggerOutput {
	return o
}

func (o FunctionEventTriggerOutput) ToFunctionEventTriggerOutputWithContext(ctx context.Context) FunctionEventTriggerOutput {
	return o
}

func (o FunctionEventTriggerOutput) ToFunctionEventTriggerPtrOutput() FunctionEventTriggerPtrOutput {
	return o.ToFunctionEventTriggerPtrOutputWithContext(context.Background())
}

func (o FunctionEventTriggerOutput) ToFunctionEventTriggerPtrOutputWithContext(ctx context.Context) FunctionEventTriggerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FunctionEventTrigger) *FunctionEventTrigger {
		return &v
	}).(FunctionEventTriggerPtrOutput)
}

// The type of event to observe. For example: `"google.storage.object.finalize"`.
// See the documentation on [calling Cloud Functions](https://cloud.google.com/functions/docs/calling/) for a
// full reference of accepted triggers.
func (o FunctionEventTriggerOutput) EventType() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionEventTrigger) string { return v.EventType }).(pulumi.StringOutput)
}

// Specifies policy for failed executions. Structure is documented below.
func (o FunctionEventTriggerOutput) FailurePolicy() FunctionEventTriggerFailurePolicyPtrOutput {
	return o.ApplyT(func(v FunctionEventTrigger) *FunctionEventTriggerFailurePolicy { return v.FailurePolicy }).(FunctionEventTriggerFailurePolicyPtrOutput)
}

// Required. The name or partial URI of the resource from
// which to observe events. For example, `"myBucket"` or `"projects/my-project/topics/my-topic"`
func (o FunctionEventTriggerOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionEventTrigger) string { return v.Resource }).(pulumi.StringOutput)
}

type FunctionEventTriggerPtrOutput struct{ *pulumi.OutputState }

func (FunctionEventTriggerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionEventTrigger)(nil)).Elem()
}

func (o FunctionEventTriggerPtrOutput) ToFunctionEventTriggerPtrOutput() FunctionEventTriggerPtrOutput {
	return o
}

func (o FunctionEventTriggerPtrOutput) ToFunctionEventTriggerPtrOutputWithContext(ctx context.Context) FunctionEventTriggerPtrOutput {
	return o
}

func (o FunctionEventTriggerPtrOutput) Elem() FunctionEventTriggerOutput {
	return o.ApplyT(func(v *FunctionEventTrigger) FunctionEventTrigger {
		if v != nil {
			return *v
		}
		var ret FunctionEventTrigger
		return ret
	}).(FunctionEventTriggerOutput)
}

// The type of event to observe. For example: `"google.storage.object.finalize"`.
// See the documentation on [calling Cloud Functions](https://cloud.google.com/functions/docs/calling/) for a
// full reference of accepted triggers.
func (o FunctionEventTriggerPtrOutput) EventType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionEventTrigger) *string {
		if v == nil {
			return nil
		}
		return &v.EventType
	}).(pulumi.StringPtrOutput)
}

// Specifies policy for failed executions. Structure is documented below.
func (o FunctionEventTriggerPtrOutput) FailurePolicy() FunctionEventTriggerFailurePolicyPtrOutput {
	return o.ApplyT(func(v *FunctionEventTrigger) *FunctionEventTriggerFailurePolicy {
		if v == nil {
			return nil
		}
		return v.FailurePolicy
	}).(FunctionEventTriggerFailurePolicyPtrOutput)
}

// Required. The name or partial URI of the resource from
// which to observe events. For example, `"myBucket"` or `"projects/my-project/topics/my-topic"`
func (o FunctionEventTriggerPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionEventTrigger) *string {
		if v == nil {
			return nil
		}
		return &v.Resource
	}).(pulumi.StringPtrOutput)
}

type FunctionEventTriggerFailurePolicy struct {
	// Whether the function should be retried on failure. Defaults to `false`.
	Retry bool `pulumi:"retry"`
}

// FunctionEventTriggerFailurePolicyInput is an input type that accepts FunctionEventTriggerFailurePolicyArgs and FunctionEventTriggerFailurePolicyOutput values.
// You can construct a concrete instance of `FunctionEventTriggerFailurePolicyInput` via:
//
//	FunctionEventTriggerFailurePolicyArgs{...}
type FunctionEventTriggerFailurePolicyInput interface {
	pulumi.Input

	ToFunctionEventTriggerFailurePolicyOutput() FunctionEventTriggerFailurePolicyOutput
	ToFunctionEventTriggerFailurePolicyOutputWithContext(context.Context) FunctionEventTriggerFailurePolicyOutput
}

type FunctionEventTriggerFailurePolicyArgs struct {
	// Whether the function should be retried on failure. Defaults to `false`.
	Retry pulumi.BoolInput `pulumi:"retry"`
}

func (FunctionEventTriggerFailurePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionEventTriggerFailurePolicy)(nil)).Elem()
}

func (i FunctionEventTriggerFailurePolicyArgs) ToFunctionEventTriggerFailurePolicyOutput() FunctionEventTriggerFailurePolicyOutput {
	return i.ToFunctionEventTriggerFailurePolicyOutputWithContext(context.Background())
}

func (i FunctionEventTriggerFailurePolicyArgs) ToFunctionEventTriggerFailurePolicyOutputWithContext(ctx context.Context) FunctionEventTriggerFailurePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionEventTriggerFailurePolicyOutput)
}

func (i FunctionEventTriggerFailurePolicyArgs) ToFunctionEventTriggerFailurePolicyPtrOutput() FunctionEventTriggerFailurePolicyPtrOutput {
	return i.ToFunctionEventTriggerFailurePolicyPtrOutputWithContext(context.Background())
}

func (i FunctionEventTriggerFailurePolicyArgs) ToFunctionEventTriggerFailurePolicyPtrOutputWithContext(ctx context.Context) FunctionEventTriggerFailurePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionEventTriggerFailurePolicyOutput).ToFunctionEventTriggerFailurePolicyPtrOutputWithContext(ctx)
}

// FunctionEventTriggerFailurePolicyPtrInput is an input type that accepts FunctionEventTriggerFailurePolicyArgs, FunctionEventTriggerFailurePolicyPtr and FunctionEventTriggerFailurePolicyPtrOutput values.
// You can construct a concrete instance of `FunctionEventTriggerFailurePolicyPtrInput` via:
//
//	        FunctionEventTriggerFailurePolicyArgs{...}
//
//	or:
//
//	        nil
type FunctionEventTriggerFailurePolicyPtrInput interface {
	pulumi.Input

	ToFunctionEventTriggerFailurePolicyPtrOutput() FunctionEventTriggerFailurePolicyPtrOutput
	ToFunctionEventTriggerFailurePolicyPtrOutputWithContext(context.Context) FunctionEventTriggerFailurePolicyPtrOutput
}

type functionEventTriggerFailurePolicyPtrType FunctionEventTriggerFailurePolicyArgs

func FunctionEventTriggerFailurePolicyPtr(v *FunctionEventTriggerFailurePolicyArgs) FunctionEventTriggerFailurePolicyPtrInput {
	return (*functionEventTriggerFailurePolicyPtrType)(v)
}

func (*functionEventTriggerFailurePolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionEventTriggerFailurePolicy)(nil)).Elem()
}

func (i *functionEventTriggerFailurePolicyPtrType) ToFunctionEventTriggerFailurePolicyPtrOutput() FunctionEventTriggerFailurePolicyPtrOutput {
	return i.ToFunctionEventTriggerFailurePolicyPtrOutputWithContext(context.Background())
}

func (i *functionEventTriggerFailurePolicyPtrType) ToFunctionEventTriggerFailurePolicyPtrOutputWithContext(ctx context.Context) FunctionEventTriggerFailurePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionEventTriggerFailurePolicyPtrOutput)
}

type FunctionEventTriggerFailurePolicyOutput struct{ *pulumi.OutputState }

func (FunctionEventTriggerFailurePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionEventTriggerFailurePolicy)(nil)).Elem()
}

func (o FunctionEventTriggerFailurePolicyOutput) ToFunctionEventTriggerFailurePolicyOutput() FunctionEventTriggerFailurePolicyOutput {
	return o
}

func (o FunctionEventTriggerFailurePolicyOutput) ToFunctionEventTriggerFailurePolicyOutputWithContext(ctx context.Context) FunctionEventTriggerFailurePolicyOutput {
	return o
}

func (o FunctionEventTriggerFailurePolicyOutput) ToFunctionEventTriggerFailurePolicyPtrOutput() FunctionEventTriggerFailurePolicyPtrOutput {
	return o.ToFunctionEventTriggerFailurePolicyPtrOutputWithContext(context.Background())
}

func (o FunctionEventTriggerFailurePolicyOutput) ToFunctionEventTriggerFailurePolicyPtrOutputWithContext(ctx context.Context) FunctionEventTriggerFailurePolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FunctionEventTriggerFailurePolicy) *FunctionEventTriggerFailurePolicy {
		return &v
	}).(FunctionEventTriggerFailurePolicyPtrOutput)
}

// Whether the function should be retried on failure. Defaults to `false`.
func (o FunctionEventTriggerFailurePolicyOutput) Retry() pulumi.BoolOutput {
	return o.ApplyT(func(v FunctionEventTriggerFailurePolicy) bool { return v.Retry }).(pulumi.BoolOutput)
}

type FunctionEventTriggerFailurePolicyPtrOutput struct{ *pulumi.OutputState }

func (FunctionEventTriggerFailurePolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionEventTriggerFailurePolicy)(nil)).Elem()
}

func (o FunctionEventTriggerFailurePolicyPtrOutput) ToFunctionEventTriggerFailurePolicyPtrOutput() FunctionEventTriggerFailurePolicyPtrOutput {
	return o
}

func (o FunctionEventTriggerFailurePolicyPtrOutput) ToFunctionEventTriggerFailurePolicyPtrOutputWithContext(ctx context.Context) FunctionEventTriggerFailurePolicyPtrOutput {
	return o
}

func (o FunctionEventTriggerFailurePolicyPtrOutput) Elem() FunctionEventTriggerFailurePolicyOutput {
	return o.ApplyT(func(v *FunctionEventTriggerFailurePolicy) FunctionEventTriggerFailurePolicy {
		if v != nil {
			return *v
		}
		var ret FunctionEventTriggerFailurePolicy
		return ret
	}).(FunctionEventTriggerFailurePolicyOutput)
}

// Whether the function should be retried on failure. Defaults to `false`.
func (o FunctionEventTriggerFailurePolicyPtrOutput) Retry() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FunctionEventTriggerFailurePolicy) *bool {
		if v == nil {
			return nil
		}
		return &v.Retry
	}).(pulumi.BoolPtrOutput)
}

type FunctionIamBindingCondition struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

// FunctionIamBindingConditionInput is an input type that accepts FunctionIamBindingConditionArgs and FunctionIamBindingConditionOutput values.
// You can construct a concrete instance of `FunctionIamBindingConditionInput` via:
//
//	FunctionIamBindingConditionArgs{...}
type FunctionIamBindingConditionInput interface {
	pulumi.Input

	ToFunctionIamBindingConditionOutput() FunctionIamBindingConditionOutput
	ToFunctionIamBindingConditionOutputWithContext(context.Context) FunctionIamBindingConditionOutput
}

type FunctionIamBindingConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (FunctionIamBindingConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionIamBindingCondition)(nil)).Elem()
}

func (i FunctionIamBindingConditionArgs) ToFunctionIamBindingConditionOutput() FunctionIamBindingConditionOutput {
	return i.ToFunctionIamBindingConditionOutputWithContext(context.Background())
}

func (i FunctionIamBindingConditionArgs) ToFunctionIamBindingConditionOutputWithContext(ctx context.Context) FunctionIamBindingConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionIamBindingConditionOutput)
}

func (i FunctionIamBindingConditionArgs) ToFunctionIamBindingConditionPtrOutput() FunctionIamBindingConditionPtrOutput {
	return i.ToFunctionIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i FunctionIamBindingConditionArgs) ToFunctionIamBindingConditionPtrOutputWithContext(ctx context.Context) FunctionIamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionIamBindingConditionOutput).ToFunctionIamBindingConditionPtrOutputWithContext(ctx)
}

// FunctionIamBindingConditionPtrInput is an input type that accepts FunctionIamBindingConditionArgs, FunctionIamBindingConditionPtr and FunctionIamBindingConditionPtrOutput values.
// You can construct a concrete instance of `FunctionIamBindingConditionPtrInput` via:
//
//	        FunctionIamBindingConditionArgs{...}
//
//	or:
//
//	        nil
type FunctionIamBindingConditionPtrInput interface {
	pulumi.Input

	ToFunctionIamBindingConditionPtrOutput() FunctionIamBindingConditionPtrOutput
	ToFunctionIamBindingConditionPtrOutputWithContext(context.Context) FunctionIamBindingConditionPtrOutput
}

type functionIamBindingConditionPtrType FunctionIamBindingConditionArgs

func FunctionIamBindingConditionPtr(v *FunctionIamBindingConditionArgs) FunctionIamBindingConditionPtrInput {
	return (*functionIamBindingConditionPtrType)(v)
}

func (*functionIamBindingConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionIamBindingCondition)(nil)).Elem()
}

func (i *functionIamBindingConditionPtrType) ToFunctionIamBindingConditionPtrOutput() FunctionIamBindingConditionPtrOutput {
	return i.ToFunctionIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i *functionIamBindingConditionPtrType) ToFunctionIamBindingConditionPtrOutputWithContext(ctx context.Context) FunctionIamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionIamBindingConditionPtrOutput)
}

type FunctionIamBindingConditionOutput struct{ *pulumi.OutputState }

func (FunctionIamBindingConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionIamBindingCondition)(nil)).Elem()
}

func (o FunctionIamBindingConditionOutput) ToFunctionIamBindingConditionOutput() FunctionIamBindingConditionOutput {
	return o
}

func (o FunctionIamBindingConditionOutput) ToFunctionIamBindingConditionOutputWithContext(ctx context.Context) FunctionIamBindingConditionOutput {
	return o
}

func (o FunctionIamBindingConditionOutput) ToFunctionIamBindingConditionPtrOutput() FunctionIamBindingConditionPtrOutput {
	return o.ToFunctionIamBindingConditionPtrOutputWithContext(context.Background())
}

func (o FunctionIamBindingConditionOutput) ToFunctionIamBindingConditionPtrOutputWithContext(ctx context.Context) FunctionIamBindingConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FunctionIamBindingCondition) *FunctionIamBindingCondition {
		return &v
	}).(FunctionIamBindingConditionPtrOutput)
}

func (o FunctionIamBindingConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionIamBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o FunctionIamBindingConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionIamBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o FunctionIamBindingConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionIamBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

type FunctionIamBindingConditionPtrOutput struct{ *pulumi.OutputState }

func (FunctionIamBindingConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionIamBindingCondition)(nil)).Elem()
}

func (o FunctionIamBindingConditionPtrOutput) ToFunctionIamBindingConditionPtrOutput() FunctionIamBindingConditionPtrOutput {
	return o
}

func (o FunctionIamBindingConditionPtrOutput) ToFunctionIamBindingConditionPtrOutputWithContext(ctx context.Context) FunctionIamBindingConditionPtrOutput {
	return o
}

func (o FunctionIamBindingConditionPtrOutput) Elem() FunctionIamBindingConditionOutput {
	return o.ApplyT(func(v *FunctionIamBindingCondition) FunctionIamBindingCondition {
		if v != nil {
			return *v
		}
		var ret FunctionIamBindingCondition
		return ret
	}).(FunctionIamBindingConditionOutput)
}

func (o FunctionIamBindingConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o FunctionIamBindingConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

func (o FunctionIamBindingConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type FunctionIamMemberCondition struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

// FunctionIamMemberConditionInput is an input type that accepts FunctionIamMemberConditionArgs and FunctionIamMemberConditionOutput values.
// You can construct a concrete instance of `FunctionIamMemberConditionInput` via:
//
//	FunctionIamMemberConditionArgs{...}
type FunctionIamMemberConditionInput interface {
	pulumi.Input

	ToFunctionIamMemberConditionOutput() FunctionIamMemberConditionOutput
	ToFunctionIamMemberConditionOutputWithContext(context.Context) FunctionIamMemberConditionOutput
}

type FunctionIamMemberConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (FunctionIamMemberConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionIamMemberCondition)(nil)).Elem()
}

func (i FunctionIamMemberConditionArgs) ToFunctionIamMemberConditionOutput() FunctionIamMemberConditionOutput {
	return i.ToFunctionIamMemberConditionOutputWithContext(context.Background())
}

func (i FunctionIamMemberConditionArgs) ToFunctionIamMemberConditionOutputWithContext(ctx context.Context) FunctionIamMemberConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionIamMemberConditionOutput)
}

func (i FunctionIamMemberConditionArgs) ToFunctionIamMemberConditionPtrOutput() FunctionIamMemberConditionPtrOutput {
	return i.ToFunctionIamMemberConditionPtrOutputWithContext(context.Background())
}

func (i FunctionIamMemberConditionArgs) ToFunctionIamMemberConditionPtrOutputWithContext(ctx context.Context) FunctionIamMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionIamMemberConditionOutput).ToFunctionIamMemberConditionPtrOutputWithContext(ctx)
}

// FunctionIamMemberConditionPtrInput is an input type that accepts FunctionIamMemberConditionArgs, FunctionIamMemberConditionPtr and FunctionIamMemberConditionPtrOutput values.
// You can construct a concrete instance of `FunctionIamMemberConditionPtrInput` via:
//
//	        FunctionIamMemberConditionArgs{...}
//
//	or:
//
//	        nil
type FunctionIamMemberConditionPtrInput interface {
	pulumi.Input

	ToFunctionIamMemberConditionPtrOutput() FunctionIamMemberConditionPtrOutput
	ToFunctionIamMemberConditionPtrOutputWithContext(context.Context) FunctionIamMemberConditionPtrOutput
}

type functionIamMemberConditionPtrType FunctionIamMemberConditionArgs

func FunctionIamMemberConditionPtr(v *FunctionIamMemberConditionArgs) FunctionIamMemberConditionPtrInput {
	return (*functionIamMemberConditionPtrType)(v)
}

func (*functionIamMemberConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionIamMemberCondition)(nil)).Elem()
}

func (i *functionIamMemberConditionPtrType) ToFunctionIamMemberConditionPtrOutput() FunctionIamMemberConditionPtrOutput {
	return i.ToFunctionIamMemberConditionPtrOutputWithContext(context.Background())
}

func (i *functionIamMemberConditionPtrType) ToFunctionIamMemberConditionPtrOutputWithContext(ctx context.Context) FunctionIamMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionIamMemberConditionPtrOutput)
}

type FunctionIamMemberConditionOutput struct{ *pulumi.OutputState }

func (FunctionIamMemberConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionIamMemberCondition)(nil)).Elem()
}

func (o FunctionIamMemberConditionOutput) ToFunctionIamMemberConditionOutput() FunctionIamMemberConditionOutput {
	return o
}

func (o FunctionIamMemberConditionOutput) ToFunctionIamMemberConditionOutputWithContext(ctx context.Context) FunctionIamMemberConditionOutput {
	return o
}

func (o FunctionIamMemberConditionOutput) ToFunctionIamMemberConditionPtrOutput() FunctionIamMemberConditionPtrOutput {
	return o.ToFunctionIamMemberConditionPtrOutputWithContext(context.Background())
}

func (o FunctionIamMemberConditionOutput) ToFunctionIamMemberConditionPtrOutputWithContext(ctx context.Context) FunctionIamMemberConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FunctionIamMemberCondition) *FunctionIamMemberCondition {
		return &v
	}).(FunctionIamMemberConditionPtrOutput)
}

func (o FunctionIamMemberConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionIamMemberCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o FunctionIamMemberConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionIamMemberCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o FunctionIamMemberConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionIamMemberCondition) string { return v.Title }).(pulumi.StringOutput)
}

type FunctionIamMemberConditionPtrOutput struct{ *pulumi.OutputState }

func (FunctionIamMemberConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionIamMemberCondition)(nil)).Elem()
}

func (o FunctionIamMemberConditionPtrOutput) ToFunctionIamMemberConditionPtrOutput() FunctionIamMemberConditionPtrOutput {
	return o
}

func (o FunctionIamMemberConditionPtrOutput) ToFunctionIamMemberConditionPtrOutputWithContext(ctx context.Context) FunctionIamMemberConditionPtrOutput {
	return o
}

func (o FunctionIamMemberConditionPtrOutput) Elem() FunctionIamMemberConditionOutput {
	return o.ApplyT(func(v *FunctionIamMemberCondition) FunctionIamMemberCondition {
		if v != nil {
			return *v
		}
		var ret FunctionIamMemberCondition
		return ret
	}).(FunctionIamMemberConditionOutput)
}

func (o FunctionIamMemberConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o FunctionIamMemberConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

func (o FunctionIamMemberConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type FunctionSecretEnvironmentVariable struct {
	// Name of the environment variable.
	Key string `pulumi:"key"`
	// Project identifier (due to a known limitation, only project number is supported by this field) of the project that contains the secret. If not set, it will be populated with the function's project, assuming that the secret exists in the same project as of the function.
	ProjectId *string `pulumi:"projectId"`
	// ID of the secret in secret manager (not the full resource name).
	Secret string `pulumi:"secret"`
	// Version of the secret (version number or the string "latest"). It is preferable to use "latest" version with secret volumes as secret value changes are reflected immediately.
	Version string `pulumi:"version"`
}

// FunctionSecretEnvironmentVariableInput is an input type that accepts FunctionSecretEnvironmentVariableArgs and FunctionSecretEnvironmentVariableOutput values.
// You can construct a concrete instance of `FunctionSecretEnvironmentVariableInput` via:
//
//	FunctionSecretEnvironmentVariableArgs{...}
type FunctionSecretEnvironmentVariableInput interface {
	pulumi.Input

	ToFunctionSecretEnvironmentVariableOutput() FunctionSecretEnvironmentVariableOutput
	ToFunctionSecretEnvironmentVariableOutputWithContext(context.Context) FunctionSecretEnvironmentVariableOutput
}

type FunctionSecretEnvironmentVariableArgs struct {
	// Name of the environment variable.
	Key pulumi.StringInput `pulumi:"key"`
	// Project identifier (due to a known limitation, only project number is supported by this field) of the project that contains the secret. If not set, it will be populated with the function's project, assuming that the secret exists in the same project as of the function.
	ProjectId pulumi.StringPtrInput `pulumi:"projectId"`
	// ID of the secret in secret manager (not the full resource name).
	Secret pulumi.StringInput `pulumi:"secret"`
	// Version of the secret (version number or the string "latest"). It is preferable to use "latest" version with secret volumes as secret value changes are reflected immediately.
	Version pulumi.StringInput `pulumi:"version"`
}

func (FunctionSecretEnvironmentVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionSecretEnvironmentVariable)(nil)).Elem()
}

func (i FunctionSecretEnvironmentVariableArgs) ToFunctionSecretEnvironmentVariableOutput() FunctionSecretEnvironmentVariableOutput {
	return i.ToFunctionSecretEnvironmentVariableOutputWithContext(context.Background())
}

func (i FunctionSecretEnvironmentVariableArgs) ToFunctionSecretEnvironmentVariableOutputWithContext(ctx context.Context) FunctionSecretEnvironmentVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionSecretEnvironmentVariableOutput)
}

// FunctionSecretEnvironmentVariableArrayInput is an input type that accepts FunctionSecretEnvironmentVariableArray and FunctionSecretEnvironmentVariableArrayOutput values.
// You can construct a concrete instance of `FunctionSecretEnvironmentVariableArrayInput` via:
//
//	FunctionSecretEnvironmentVariableArray{ FunctionSecretEnvironmentVariableArgs{...} }
type FunctionSecretEnvironmentVariableArrayInput interface {
	pulumi.Input

	ToFunctionSecretEnvironmentVariableArrayOutput() FunctionSecretEnvironmentVariableArrayOutput
	ToFunctionSecretEnvironmentVariableArrayOutputWithContext(context.Context) FunctionSecretEnvironmentVariableArrayOutput
}

type FunctionSecretEnvironmentVariableArray []FunctionSecretEnvironmentVariableInput

func (FunctionSecretEnvironmentVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionSecretEnvironmentVariable)(nil)).Elem()
}

func (i FunctionSecretEnvironmentVariableArray) ToFunctionSecretEnvironmentVariableArrayOutput() FunctionSecretEnvironmentVariableArrayOutput {
	return i.ToFunctionSecretEnvironmentVariableArrayOutputWithContext(context.Background())
}

func (i FunctionSecretEnvironmentVariableArray) ToFunctionSecretEnvironmentVariableArrayOutputWithContext(ctx context.Context) FunctionSecretEnvironmentVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionSecretEnvironmentVariableArrayOutput)
}

type FunctionSecretEnvironmentVariableOutput struct{ *pulumi.OutputState }

func (FunctionSecretEnvironmentVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionSecretEnvironmentVariable)(nil)).Elem()
}

func (o FunctionSecretEnvironmentVariableOutput) ToFunctionSecretEnvironmentVariableOutput() FunctionSecretEnvironmentVariableOutput {
	return o
}

func (o FunctionSecretEnvironmentVariableOutput) ToFunctionSecretEnvironmentVariableOutputWithContext(ctx context.Context) FunctionSecretEnvironmentVariableOutput {
	return o
}

// Name of the environment variable.
func (o FunctionSecretEnvironmentVariableOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionSecretEnvironmentVariable) string { return v.Key }).(pulumi.StringOutput)
}

// Project identifier (due to a known limitation, only project number is supported by this field) of the project that contains the secret. If not set, it will be populated with the function's project, assuming that the secret exists in the same project as of the function.
func (o FunctionSecretEnvironmentVariableOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionSecretEnvironmentVariable) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

// ID of the secret in secret manager (not the full resource name).
func (o FunctionSecretEnvironmentVariableOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionSecretEnvironmentVariable) string { return v.Secret }).(pulumi.StringOutput)
}

// Version of the secret (version number or the string "latest"). It is preferable to use "latest" version with secret volumes as secret value changes are reflected immediately.
func (o FunctionSecretEnvironmentVariableOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionSecretEnvironmentVariable) string { return v.Version }).(pulumi.StringOutput)
}

type FunctionSecretEnvironmentVariableArrayOutput struct{ *pulumi.OutputState }

func (FunctionSecretEnvironmentVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionSecretEnvironmentVariable)(nil)).Elem()
}

func (o FunctionSecretEnvironmentVariableArrayOutput) ToFunctionSecretEnvironmentVariableArrayOutput() FunctionSecretEnvironmentVariableArrayOutput {
	return o
}

func (o FunctionSecretEnvironmentVariableArrayOutput) ToFunctionSecretEnvironmentVariableArrayOutputWithContext(ctx context.Context) FunctionSecretEnvironmentVariableArrayOutput {
	return o
}

func (o FunctionSecretEnvironmentVariableArrayOutput) Index(i pulumi.IntInput) FunctionSecretEnvironmentVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FunctionSecretEnvironmentVariable {
		return vs[0].([]FunctionSecretEnvironmentVariable)[vs[1].(int)]
	}).(FunctionSecretEnvironmentVariableOutput)
}

type FunctionSecretVolume struct {
	// The path within the container to mount the secret volume. For example, setting the mountPath as "/etc/secrets" would mount the secret value files under the "/etc/secrets" directory. This directory will also be completely shadowed and unavailable to mount any other secrets. Recommended mount paths: "/etc/secrets" Restricted mount paths: "/cloudsql", "/dev/log", "/pod", "/proc", "/var/log".
	MountPath string `pulumi:"mountPath"`
	// Project identifier (due to a known limitation, only project number is supported by this field) of the project that contains the secret. If not set, it will be populated with the function's project, assuming that the secret exists in the same project as of the function.
	ProjectId *string `pulumi:"projectId"`
	// ID of the secret in secret manager (not the full resource name).
	Secret string `pulumi:"secret"`
	// List of secret versions to mount for this secret. If empty, the "latest" version of the secret will be made available in a file named after the secret under the mount point. Structure is documented below.
	Versions []FunctionSecretVolumeVersion `pulumi:"versions"`
}

// FunctionSecretVolumeInput is an input type that accepts FunctionSecretVolumeArgs and FunctionSecretVolumeOutput values.
// You can construct a concrete instance of `FunctionSecretVolumeInput` via:
//
//	FunctionSecretVolumeArgs{...}
type FunctionSecretVolumeInput interface {
	pulumi.Input

	ToFunctionSecretVolumeOutput() FunctionSecretVolumeOutput
	ToFunctionSecretVolumeOutputWithContext(context.Context) FunctionSecretVolumeOutput
}

type FunctionSecretVolumeArgs struct {
	// The path within the container to mount the secret volume. For example, setting the mountPath as "/etc/secrets" would mount the secret value files under the "/etc/secrets" directory. This directory will also be completely shadowed and unavailable to mount any other secrets. Recommended mount paths: "/etc/secrets" Restricted mount paths: "/cloudsql", "/dev/log", "/pod", "/proc", "/var/log".
	MountPath pulumi.StringInput `pulumi:"mountPath"`
	// Project identifier (due to a known limitation, only project number is supported by this field) of the project that contains the secret. If not set, it will be populated with the function's project, assuming that the secret exists in the same project as of the function.
	ProjectId pulumi.StringPtrInput `pulumi:"projectId"`
	// ID of the secret in secret manager (not the full resource name).
	Secret pulumi.StringInput `pulumi:"secret"`
	// List of secret versions to mount for this secret. If empty, the "latest" version of the secret will be made available in a file named after the secret under the mount point. Structure is documented below.
	Versions FunctionSecretVolumeVersionArrayInput `pulumi:"versions"`
}

func (FunctionSecretVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionSecretVolume)(nil)).Elem()
}

func (i FunctionSecretVolumeArgs) ToFunctionSecretVolumeOutput() FunctionSecretVolumeOutput {
	return i.ToFunctionSecretVolumeOutputWithContext(context.Background())
}

func (i FunctionSecretVolumeArgs) ToFunctionSecretVolumeOutputWithContext(ctx context.Context) FunctionSecretVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionSecretVolumeOutput)
}

// FunctionSecretVolumeArrayInput is an input type that accepts FunctionSecretVolumeArray and FunctionSecretVolumeArrayOutput values.
// You can construct a concrete instance of `FunctionSecretVolumeArrayInput` via:
//
//	FunctionSecretVolumeArray{ FunctionSecretVolumeArgs{...} }
type FunctionSecretVolumeArrayInput interface {
	pulumi.Input

	ToFunctionSecretVolumeArrayOutput() FunctionSecretVolumeArrayOutput
	ToFunctionSecretVolumeArrayOutputWithContext(context.Context) FunctionSecretVolumeArrayOutput
}

type FunctionSecretVolumeArray []FunctionSecretVolumeInput

func (FunctionSecretVolumeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionSecretVolume)(nil)).Elem()
}

func (i FunctionSecretVolumeArray) ToFunctionSecretVolumeArrayOutput() FunctionSecretVolumeArrayOutput {
	return i.ToFunctionSecretVolumeArrayOutputWithContext(context.Background())
}

func (i FunctionSecretVolumeArray) ToFunctionSecretVolumeArrayOutputWithContext(ctx context.Context) FunctionSecretVolumeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionSecretVolumeArrayOutput)
}

type FunctionSecretVolumeOutput struct{ *pulumi.OutputState }

func (FunctionSecretVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionSecretVolume)(nil)).Elem()
}

func (o FunctionSecretVolumeOutput) ToFunctionSecretVolumeOutput() FunctionSecretVolumeOutput {
	return o
}

func (o FunctionSecretVolumeOutput) ToFunctionSecretVolumeOutputWithContext(ctx context.Context) FunctionSecretVolumeOutput {
	return o
}

// The path within the container to mount the secret volume. For example, setting the mountPath as "/etc/secrets" would mount the secret value files under the "/etc/secrets" directory. This directory will also be completely shadowed and unavailable to mount any other secrets. Recommended mount paths: "/etc/secrets" Restricted mount paths: "/cloudsql", "/dev/log", "/pod", "/proc", "/var/log".
func (o FunctionSecretVolumeOutput) MountPath() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionSecretVolume) string { return v.MountPath }).(pulumi.StringOutput)
}

// Project identifier (due to a known limitation, only project number is supported by this field) of the project that contains the secret. If not set, it will be populated with the function's project, assuming that the secret exists in the same project as of the function.
func (o FunctionSecretVolumeOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionSecretVolume) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

// ID of the secret in secret manager (not the full resource name).
func (o FunctionSecretVolumeOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionSecretVolume) string { return v.Secret }).(pulumi.StringOutput)
}

// List of secret versions to mount for this secret. If empty, the "latest" version of the secret will be made available in a file named after the secret under the mount point. Structure is documented below.
func (o FunctionSecretVolumeOutput) Versions() FunctionSecretVolumeVersionArrayOutput {
	return o.ApplyT(func(v FunctionSecretVolume) []FunctionSecretVolumeVersion { return v.Versions }).(FunctionSecretVolumeVersionArrayOutput)
}

type FunctionSecretVolumeArrayOutput struct{ *pulumi.OutputState }

func (FunctionSecretVolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionSecretVolume)(nil)).Elem()
}

func (o FunctionSecretVolumeArrayOutput) ToFunctionSecretVolumeArrayOutput() FunctionSecretVolumeArrayOutput {
	return o
}

func (o FunctionSecretVolumeArrayOutput) ToFunctionSecretVolumeArrayOutputWithContext(ctx context.Context) FunctionSecretVolumeArrayOutput {
	return o
}

func (o FunctionSecretVolumeArrayOutput) Index(i pulumi.IntInput) FunctionSecretVolumeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FunctionSecretVolume {
		return vs[0].([]FunctionSecretVolume)[vs[1].(int)]
	}).(FunctionSecretVolumeOutput)
}

type FunctionSecretVolumeVersion struct {
	// Relative path of the file under the mount path where the secret value for this version will be fetched and made available. For example, setting the mountPath as "/etc/secrets" and path as "/secret_foo" would mount the secret value file at "/etc/secrets/secret_foo".
	Path string `pulumi:"path"`
	// Version of the secret (version number or the string "latest"). It is preferable to use "latest" version with secret volumes as secret value changes are reflected immediately.
	Version string `pulumi:"version"`
}

// FunctionSecretVolumeVersionInput is an input type that accepts FunctionSecretVolumeVersionArgs and FunctionSecretVolumeVersionOutput values.
// You can construct a concrete instance of `FunctionSecretVolumeVersionInput` via:
//
//	FunctionSecretVolumeVersionArgs{...}
type FunctionSecretVolumeVersionInput interface {
	pulumi.Input

	ToFunctionSecretVolumeVersionOutput() FunctionSecretVolumeVersionOutput
	ToFunctionSecretVolumeVersionOutputWithContext(context.Context) FunctionSecretVolumeVersionOutput
}

type FunctionSecretVolumeVersionArgs struct {
	// Relative path of the file under the mount path where the secret value for this version will be fetched and made available. For example, setting the mountPath as "/etc/secrets" and path as "/secret_foo" would mount the secret value file at "/etc/secrets/secret_foo".
	Path pulumi.StringInput `pulumi:"path"`
	// Version of the secret (version number or the string "latest"). It is preferable to use "latest" version with secret volumes as secret value changes are reflected immediately.
	Version pulumi.StringInput `pulumi:"version"`
}

func (FunctionSecretVolumeVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionSecretVolumeVersion)(nil)).Elem()
}

func (i FunctionSecretVolumeVersionArgs) ToFunctionSecretVolumeVersionOutput() FunctionSecretVolumeVersionOutput {
	return i.ToFunctionSecretVolumeVersionOutputWithContext(context.Background())
}

func (i FunctionSecretVolumeVersionArgs) ToFunctionSecretVolumeVersionOutputWithContext(ctx context.Context) FunctionSecretVolumeVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionSecretVolumeVersionOutput)
}

// FunctionSecretVolumeVersionArrayInput is an input type that accepts FunctionSecretVolumeVersionArray and FunctionSecretVolumeVersionArrayOutput values.
// You can construct a concrete instance of `FunctionSecretVolumeVersionArrayInput` via:
//
//	FunctionSecretVolumeVersionArray{ FunctionSecretVolumeVersionArgs{...} }
type FunctionSecretVolumeVersionArrayInput interface {
	pulumi.Input

	ToFunctionSecretVolumeVersionArrayOutput() FunctionSecretVolumeVersionArrayOutput
	ToFunctionSecretVolumeVersionArrayOutputWithContext(context.Context) FunctionSecretVolumeVersionArrayOutput
}

type FunctionSecretVolumeVersionArray []FunctionSecretVolumeVersionInput

func (FunctionSecretVolumeVersionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionSecretVolumeVersion)(nil)).Elem()
}

func (i FunctionSecretVolumeVersionArray) ToFunctionSecretVolumeVersionArrayOutput() FunctionSecretVolumeVersionArrayOutput {
	return i.ToFunctionSecretVolumeVersionArrayOutputWithContext(context.Background())
}

func (i FunctionSecretVolumeVersionArray) ToFunctionSecretVolumeVersionArrayOutputWithContext(ctx context.Context) FunctionSecretVolumeVersionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionSecretVolumeVersionArrayOutput)
}

type FunctionSecretVolumeVersionOutput struct{ *pulumi.OutputState }

func (FunctionSecretVolumeVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionSecretVolumeVersion)(nil)).Elem()
}

func (o FunctionSecretVolumeVersionOutput) ToFunctionSecretVolumeVersionOutput() FunctionSecretVolumeVersionOutput {
	return o
}

func (o FunctionSecretVolumeVersionOutput) ToFunctionSecretVolumeVersionOutputWithContext(ctx context.Context) FunctionSecretVolumeVersionOutput {
	return o
}

// Relative path of the file under the mount path where the secret value for this version will be fetched and made available. For example, setting the mountPath as "/etc/secrets" and path as "/secret_foo" would mount the secret value file at "/etc/secrets/secret_foo".
func (o FunctionSecretVolumeVersionOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionSecretVolumeVersion) string { return v.Path }).(pulumi.StringOutput)
}

// Version of the secret (version number or the string "latest"). It is preferable to use "latest" version with secret volumes as secret value changes are reflected immediately.
func (o FunctionSecretVolumeVersionOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionSecretVolumeVersion) string { return v.Version }).(pulumi.StringOutput)
}

type FunctionSecretVolumeVersionArrayOutput struct{ *pulumi.OutputState }

func (FunctionSecretVolumeVersionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionSecretVolumeVersion)(nil)).Elem()
}

func (o FunctionSecretVolumeVersionArrayOutput) ToFunctionSecretVolumeVersionArrayOutput() FunctionSecretVolumeVersionArrayOutput {
	return o
}

func (o FunctionSecretVolumeVersionArrayOutput) ToFunctionSecretVolumeVersionArrayOutputWithContext(ctx context.Context) FunctionSecretVolumeVersionArrayOutput {
	return o
}

func (o FunctionSecretVolumeVersionArrayOutput) Index(i pulumi.IntInput) FunctionSecretVolumeVersionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FunctionSecretVolumeVersion {
		return vs[0].([]FunctionSecretVolumeVersion)[vs[1].(int)]
	}).(FunctionSecretVolumeVersionOutput)
}

type FunctionSourceRepository struct {
	DeployedUrl *string `pulumi:"deployedUrl"`
	// The URL pointing to the hosted repository where the function is defined. There are supported Cloud Source Repository URLs in the following formats:
	Url string `pulumi:"url"`
}

// FunctionSourceRepositoryInput is an input type that accepts FunctionSourceRepositoryArgs and FunctionSourceRepositoryOutput values.
// You can construct a concrete instance of `FunctionSourceRepositoryInput` via:
//
//	FunctionSourceRepositoryArgs{...}
type FunctionSourceRepositoryInput interface {
	pulumi.Input

	ToFunctionSourceRepositoryOutput() FunctionSourceRepositoryOutput
	ToFunctionSourceRepositoryOutputWithContext(context.Context) FunctionSourceRepositoryOutput
}

type FunctionSourceRepositoryArgs struct {
	DeployedUrl pulumi.StringPtrInput `pulumi:"deployedUrl"`
	// The URL pointing to the hosted repository where the function is defined. There are supported Cloud Source Repository URLs in the following formats:
	Url pulumi.StringInput `pulumi:"url"`
}

func (FunctionSourceRepositoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionSourceRepository)(nil)).Elem()
}

func (i FunctionSourceRepositoryArgs) ToFunctionSourceRepositoryOutput() FunctionSourceRepositoryOutput {
	return i.ToFunctionSourceRepositoryOutputWithContext(context.Background())
}

func (i FunctionSourceRepositoryArgs) ToFunctionSourceRepositoryOutputWithContext(ctx context.Context) FunctionSourceRepositoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionSourceRepositoryOutput)
}

func (i FunctionSourceRepositoryArgs) ToFunctionSourceRepositoryPtrOutput() FunctionSourceRepositoryPtrOutput {
	return i.ToFunctionSourceRepositoryPtrOutputWithContext(context.Background())
}

func (i FunctionSourceRepositoryArgs) ToFunctionSourceRepositoryPtrOutputWithContext(ctx context.Context) FunctionSourceRepositoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionSourceRepositoryOutput).ToFunctionSourceRepositoryPtrOutputWithContext(ctx)
}

// FunctionSourceRepositoryPtrInput is an input type that accepts FunctionSourceRepositoryArgs, FunctionSourceRepositoryPtr and FunctionSourceRepositoryPtrOutput values.
// You can construct a concrete instance of `FunctionSourceRepositoryPtrInput` via:
//
//	        FunctionSourceRepositoryArgs{...}
//
//	or:
//
//	        nil
type FunctionSourceRepositoryPtrInput interface {
	pulumi.Input

	ToFunctionSourceRepositoryPtrOutput() FunctionSourceRepositoryPtrOutput
	ToFunctionSourceRepositoryPtrOutputWithContext(context.Context) FunctionSourceRepositoryPtrOutput
}

type functionSourceRepositoryPtrType FunctionSourceRepositoryArgs

func FunctionSourceRepositoryPtr(v *FunctionSourceRepositoryArgs) FunctionSourceRepositoryPtrInput {
	return (*functionSourceRepositoryPtrType)(v)
}

func (*functionSourceRepositoryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionSourceRepository)(nil)).Elem()
}

func (i *functionSourceRepositoryPtrType) ToFunctionSourceRepositoryPtrOutput() FunctionSourceRepositoryPtrOutput {
	return i.ToFunctionSourceRepositoryPtrOutputWithContext(context.Background())
}

func (i *functionSourceRepositoryPtrType) ToFunctionSourceRepositoryPtrOutputWithContext(ctx context.Context) FunctionSourceRepositoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionSourceRepositoryPtrOutput)
}

type FunctionSourceRepositoryOutput struct{ *pulumi.OutputState }

func (FunctionSourceRepositoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionSourceRepository)(nil)).Elem()
}

func (o FunctionSourceRepositoryOutput) ToFunctionSourceRepositoryOutput() FunctionSourceRepositoryOutput {
	return o
}

func (o FunctionSourceRepositoryOutput) ToFunctionSourceRepositoryOutputWithContext(ctx context.Context) FunctionSourceRepositoryOutput {
	return o
}

func (o FunctionSourceRepositoryOutput) ToFunctionSourceRepositoryPtrOutput() FunctionSourceRepositoryPtrOutput {
	return o.ToFunctionSourceRepositoryPtrOutputWithContext(context.Background())
}

func (o FunctionSourceRepositoryOutput) ToFunctionSourceRepositoryPtrOutputWithContext(ctx context.Context) FunctionSourceRepositoryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FunctionSourceRepository) *FunctionSourceRepository {
		return &v
	}).(FunctionSourceRepositoryPtrOutput)
}

func (o FunctionSourceRepositoryOutput) DeployedUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionSourceRepository) *string { return v.DeployedUrl }).(pulumi.StringPtrOutput)
}

// The URL pointing to the hosted repository where the function is defined. There are supported Cloud Source Repository URLs in the following formats:
func (o FunctionSourceRepositoryOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionSourceRepository) string { return v.Url }).(pulumi.StringOutput)
}

type FunctionSourceRepositoryPtrOutput struct{ *pulumi.OutputState }

func (FunctionSourceRepositoryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionSourceRepository)(nil)).Elem()
}

func (o FunctionSourceRepositoryPtrOutput) ToFunctionSourceRepositoryPtrOutput() FunctionSourceRepositoryPtrOutput {
	return o
}

func (o FunctionSourceRepositoryPtrOutput) ToFunctionSourceRepositoryPtrOutputWithContext(ctx context.Context) FunctionSourceRepositoryPtrOutput {
	return o
}

func (o FunctionSourceRepositoryPtrOutput) Elem() FunctionSourceRepositoryOutput {
	return o.ApplyT(func(v *FunctionSourceRepository) FunctionSourceRepository {
		if v != nil {
			return *v
		}
		var ret FunctionSourceRepository
		return ret
	}).(FunctionSourceRepositoryOutput)
}

func (o FunctionSourceRepositoryPtrOutput) DeployedUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionSourceRepository) *string {
		if v == nil {
			return nil
		}
		return v.DeployedUrl
	}).(pulumi.StringPtrOutput)
}

// The URL pointing to the hosted repository where the function is defined. There are supported Cloud Source Repository URLs in the following formats:
func (o FunctionSourceRepositoryPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionSourceRepository) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

type GetFunctionEventTrigger struct {
	// The type of event to observe. For example: `"google.storage.object.finalize"`.
	// See the documentation on [calling Cloud Functions](https://cloud.google.com/functions/docs/calling/)
	// for a full reference of accepted triggers.
	EventType string `pulumi:"eventType"`
	// Policy for failed executions. Structure is documented below.
	FailurePolicies []GetFunctionEventTriggerFailurePolicy `pulumi:"failurePolicies"`
	// The name of the resource whose events are being observed, for example, `"myBucket"`
	Resource string `pulumi:"resource"`
}

// GetFunctionEventTriggerInput is an input type that accepts GetFunctionEventTriggerArgs and GetFunctionEventTriggerOutput values.
// You can construct a concrete instance of `GetFunctionEventTriggerInput` via:
//
//	GetFunctionEventTriggerArgs{...}
type GetFunctionEventTriggerInput interface {
	pulumi.Input

	ToGetFunctionEventTriggerOutput() GetFunctionEventTriggerOutput
	ToGetFunctionEventTriggerOutputWithContext(context.Context) GetFunctionEventTriggerOutput
}

type GetFunctionEventTriggerArgs struct {
	// The type of event to observe. For example: `"google.storage.object.finalize"`.
	// See the documentation on [calling Cloud Functions](https://cloud.google.com/functions/docs/calling/)
	// for a full reference of accepted triggers.
	EventType pulumi.StringInput `pulumi:"eventType"`
	// Policy for failed executions. Structure is documented below.
	FailurePolicies GetFunctionEventTriggerFailurePolicyArrayInput `pulumi:"failurePolicies"`
	// The name of the resource whose events are being observed, for example, `"myBucket"`
	Resource pulumi.StringInput `pulumi:"resource"`
}

func (GetFunctionEventTriggerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionEventTrigger)(nil)).Elem()
}

func (i GetFunctionEventTriggerArgs) ToGetFunctionEventTriggerOutput() GetFunctionEventTriggerOutput {
	return i.ToGetFunctionEventTriggerOutputWithContext(context.Background())
}

func (i GetFunctionEventTriggerArgs) ToGetFunctionEventTriggerOutputWithContext(ctx context.Context) GetFunctionEventTriggerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionEventTriggerOutput)
}

// GetFunctionEventTriggerArrayInput is an input type that accepts GetFunctionEventTriggerArray and GetFunctionEventTriggerArrayOutput values.
// You can construct a concrete instance of `GetFunctionEventTriggerArrayInput` via:
//
//	GetFunctionEventTriggerArray{ GetFunctionEventTriggerArgs{...} }
type GetFunctionEventTriggerArrayInput interface {
	pulumi.Input

	ToGetFunctionEventTriggerArrayOutput() GetFunctionEventTriggerArrayOutput
	ToGetFunctionEventTriggerArrayOutputWithContext(context.Context) GetFunctionEventTriggerArrayOutput
}

type GetFunctionEventTriggerArray []GetFunctionEventTriggerInput

func (GetFunctionEventTriggerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFunctionEventTrigger)(nil)).Elem()
}

func (i GetFunctionEventTriggerArray) ToGetFunctionEventTriggerArrayOutput() GetFunctionEventTriggerArrayOutput {
	return i.ToGetFunctionEventTriggerArrayOutputWithContext(context.Background())
}

func (i GetFunctionEventTriggerArray) ToGetFunctionEventTriggerArrayOutputWithContext(ctx context.Context) GetFunctionEventTriggerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionEventTriggerArrayOutput)
}

type GetFunctionEventTriggerOutput struct{ *pulumi.OutputState }

func (GetFunctionEventTriggerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionEventTrigger)(nil)).Elem()
}

func (o GetFunctionEventTriggerOutput) ToGetFunctionEventTriggerOutput() GetFunctionEventTriggerOutput {
	return o
}

func (o GetFunctionEventTriggerOutput) ToGetFunctionEventTriggerOutputWithContext(ctx context.Context) GetFunctionEventTriggerOutput {
	return o
}

// The type of event to observe. For example: `"google.storage.object.finalize"`.
// See the documentation on [calling Cloud Functions](https://cloud.google.com/functions/docs/calling/)
// for a full reference of accepted triggers.
func (o GetFunctionEventTriggerOutput) EventType() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionEventTrigger) string { return v.EventType }).(pulumi.StringOutput)
}

// Policy for failed executions. Structure is documented below.
func (o GetFunctionEventTriggerOutput) FailurePolicies() GetFunctionEventTriggerFailurePolicyArrayOutput {
	return o.ApplyT(func(v GetFunctionEventTrigger) []GetFunctionEventTriggerFailurePolicy { return v.FailurePolicies }).(GetFunctionEventTriggerFailurePolicyArrayOutput)
}

// The name of the resource whose events are being observed, for example, `"myBucket"`
func (o GetFunctionEventTriggerOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionEventTrigger) string { return v.Resource }).(pulumi.StringOutput)
}

type GetFunctionEventTriggerArrayOutput struct{ *pulumi.OutputState }

func (GetFunctionEventTriggerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFunctionEventTrigger)(nil)).Elem()
}

func (o GetFunctionEventTriggerArrayOutput) ToGetFunctionEventTriggerArrayOutput() GetFunctionEventTriggerArrayOutput {
	return o
}

func (o GetFunctionEventTriggerArrayOutput) ToGetFunctionEventTriggerArrayOutputWithContext(ctx context.Context) GetFunctionEventTriggerArrayOutput {
	return o
}

func (o GetFunctionEventTriggerArrayOutput) Index(i pulumi.IntInput) GetFunctionEventTriggerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFunctionEventTrigger {
		return vs[0].([]GetFunctionEventTrigger)[vs[1].(int)]
	}).(GetFunctionEventTriggerOutput)
}

type GetFunctionEventTriggerFailurePolicy struct {
	// Whether the function should be retried on failure.
	Retry bool `pulumi:"retry"`
}

// GetFunctionEventTriggerFailurePolicyInput is an input type that accepts GetFunctionEventTriggerFailurePolicyArgs and GetFunctionEventTriggerFailurePolicyOutput values.
// You can construct a concrete instance of `GetFunctionEventTriggerFailurePolicyInput` via:
//
//	GetFunctionEventTriggerFailurePolicyArgs{...}
type GetFunctionEventTriggerFailurePolicyInput interface {
	pulumi.Input

	ToGetFunctionEventTriggerFailurePolicyOutput() GetFunctionEventTriggerFailurePolicyOutput
	ToGetFunctionEventTriggerFailurePolicyOutputWithContext(context.Context) GetFunctionEventTriggerFailurePolicyOutput
}

type GetFunctionEventTriggerFailurePolicyArgs struct {
	// Whether the function should be retried on failure.
	Retry pulumi.BoolInput `pulumi:"retry"`
}

func (GetFunctionEventTriggerFailurePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionEventTriggerFailurePolicy)(nil)).Elem()
}

func (i GetFunctionEventTriggerFailurePolicyArgs) ToGetFunctionEventTriggerFailurePolicyOutput() GetFunctionEventTriggerFailurePolicyOutput {
	return i.ToGetFunctionEventTriggerFailurePolicyOutputWithContext(context.Background())
}

func (i GetFunctionEventTriggerFailurePolicyArgs) ToGetFunctionEventTriggerFailurePolicyOutputWithContext(ctx context.Context) GetFunctionEventTriggerFailurePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionEventTriggerFailurePolicyOutput)
}

// GetFunctionEventTriggerFailurePolicyArrayInput is an input type that accepts GetFunctionEventTriggerFailurePolicyArray and GetFunctionEventTriggerFailurePolicyArrayOutput values.
// You can construct a concrete instance of `GetFunctionEventTriggerFailurePolicyArrayInput` via:
//
//	GetFunctionEventTriggerFailurePolicyArray{ GetFunctionEventTriggerFailurePolicyArgs{...} }
type GetFunctionEventTriggerFailurePolicyArrayInput interface {
	pulumi.Input

	ToGetFunctionEventTriggerFailurePolicyArrayOutput() GetFunctionEventTriggerFailurePolicyArrayOutput
	ToGetFunctionEventTriggerFailurePolicyArrayOutputWithContext(context.Context) GetFunctionEventTriggerFailurePolicyArrayOutput
}

type GetFunctionEventTriggerFailurePolicyArray []GetFunctionEventTriggerFailurePolicyInput

func (GetFunctionEventTriggerFailurePolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFunctionEventTriggerFailurePolicy)(nil)).Elem()
}

func (i GetFunctionEventTriggerFailurePolicyArray) ToGetFunctionEventTriggerFailurePolicyArrayOutput() GetFunctionEventTriggerFailurePolicyArrayOutput {
	return i.ToGetFunctionEventTriggerFailurePolicyArrayOutputWithContext(context.Background())
}

func (i GetFunctionEventTriggerFailurePolicyArray) ToGetFunctionEventTriggerFailurePolicyArrayOutputWithContext(ctx context.Context) GetFunctionEventTriggerFailurePolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionEventTriggerFailurePolicyArrayOutput)
}

type GetFunctionEventTriggerFailurePolicyOutput struct{ *pulumi.OutputState }

func (GetFunctionEventTriggerFailurePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionEventTriggerFailurePolicy)(nil)).Elem()
}

func (o GetFunctionEventTriggerFailurePolicyOutput) ToGetFunctionEventTriggerFailurePolicyOutput() GetFunctionEventTriggerFailurePolicyOutput {
	return o
}

func (o GetFunctionEventTriggerFailurePolicyOutput) ToGetFunctionEventTriggerFailurePolicyOutputWithContext(ctx context.Context) GetFunctionEventTriggerFailurePolicyOutput {
	return o
}

// Whether the function should be retried on failure.
func (o GetFunctionEventTriggerFailurePolicyOutput) Retry() pulumi.BoolOutput {
	return o.ApplyT(func(v GetFunctionEventTriggerFailurePolicy) bool { return v.Retry }).(pulumi.BoolOutput)
}

type GetFunctionEventTriggerFailurePolicyArrayOutput struct{ *pulumi.OutputState }

func (GetFunctionEventTriggerFailurePolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFunctionEventTriggerFailurePolicy)(nil)).Elem()
}

func (o GetFunctionEventTriggerFailurePolicyArrayOutput) ToGetFunctionEventTriggerFailurePolicyArrayOutput() GetFunctionEventTriggerFailurePolicyArrayOutput {
	return o
}

func (o GetFunctionEventTriggerFailurePolicyArrayOutput) ToGetFunctionEventTriggerFailurePolicyArrayOutputWithContext(ctx context.Context) GetFunctionEventTriggerFailurePolicyArrayOutput {
	return o
}

func (o GetFunctionEventTriggerFailurePolicyArrayOutput) Index(i pulumi.IntInput) GetFunctionEventTriggerFailurePolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFunctionEventTriggerFailurePolicy {
		return vs[0].([]GetFunctionEventTriggerFailurePolicy)[vs[1].(int)]
	}).(GetFunctionEventTriggerFailurePolicyOutput)
}

type GetFunctionSecretEnvironmentVariable struct {
	Key       string `pulumi:"key"`
	ProjectId string `pulumi:"projectId"`
	Secret    string `pulumi:"secret"`
	Version   string `pulumi:"version"`
}

// GetFunctionSecretEnvironmentVariableInput is an input type that accepts GetFunctionSecretEnvironmentVariableArgs and GetFunctionSecretEnvironmentVariableOutput values.
// You can construct a concrete instance of `GetFunctionSecretEnvironmentVariableInput` via:
//
//	GetFunctionSecretEnvironmentVariableArgs{...}
type GetFunctionSecretEnvironmentVariableInput interface {
	pulumi.Input

	ToGetFunctionSecretEnvironmentVariableOutput() GetFunctionSecretEnvironmentVariableOutput
	ToGetFunctionSecretEnvironmentVariableOutputWithContext(context.Context) GetFunctionSecretEnvironmentVariableOutput
}

type GetFunctionSecretEnvironmentVariableArgs struct {
	Key       pulumi.StringInput `pulumi:"key"`
	ProjectId pulumi.StringInput `pulumi:"projectId"`
	Secret    pulumi.StringInput `pulumi:"secret"`
	Version   pulumi.StringInput `pulumi:"version"`
}

func (GetFunctionSecretEnvironmentVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionSecretEnvironmentVariable)(nil)).Elem()
}

func (i GetFunctionSecretEnvironmentVariableArgs) ToGetFunctionSecretEnvironmentVariableOutput() GetFunctionSecretEnvironmentVariableOutput {
	return i.ToGetFunctionSecretEnvironmentVariableOutputWithContext(context.Background())
}

func (i GetFunctionSecretEnvironmentVariableArgs) ToGetFunctionSecretEnvironmentVariableOutputWithContext(ctx context.Context) GetFunctionSecretEnvironmentVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionSecretEnvironmentVariableOutput)
}

// GetFunctionSecretEnvironmentVariableArrayInput is an input type that accepts GetFunctionSecretEnvironmentVariableArray and GetFunctionSecretEnvironmentVariableArrayOutput values.
// You can construct a concrete instance of `GetFunctionSecretEnvironmentVariableArrayInput` via:
//
//	GetFunctionSecretEnvironmentVariableArray{ GetFunctionSecretEnvironmentVariableArgs{...} }
type GetFunctionSecretEnvironmentVariableArrayInput interface {
	pulumi.Input

	ToGetFunctionSecretEnvironmentVariableArrayOutput() GetFunctionSecretEnvironmentVariableArrayOutput
	ToGetFunctionSecretEnvironmentVariableArrayOutputWithContext(context.Context) GetFunctionSecretEnvironmentVariableArrayOutput
}

type GetFunctionSecretEnvironmentVariableArray []GetFunctionSecretEnvironmentVariableInput

func (GetFunctionSecretEnvironmentVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFunctionSecretEnvironmentVariable)(nil)).Elem()
}

func (i GetFunctionSecretEnvironmentVariableArray) ToGetFunctionSecretEnvironmentVariableArrayOutput() GetFunctionSecretEnvironmentVariableArrayOutput {
	return i.ToGetFunctionSecretEnvironmentVariableArrayOutputWithContext(context.Background())
}

func (i GetFunctionSecretEnvironmentVariableArray) ToGetFunctionSecretEnvironmentVariableArrayOutputWithContext(ctx context.Context) GetFunctionSecretEnvironmentVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionSecretEnvironmentVariableArrayOutput)
}

type GetFunctionSecretEnvironmentVariableOutput struct{ *pulumi.OutputState }

func (GetFunctionSecretEnvironmentVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionSecretEnvironmentVariable)(nil)).Elem()
}

func (o GetFunctionSecretEnvironmentVariableOutput) ToGetFunctionSecretEnvironmentVariableOutput() GetFunctionSecretEnvironmentVariableOutput {
	return o
}

func (o GetFunctionSecretEnvironmentVariableOutput) ToGetFunctionSecretEnvironmentVariableOutputWithContext(ctx context.Context) GetFunctionSecretEnvironmentVariableOutput {
	return o
}

func (o GetFunctionSecretEnvironmentVariableOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionSecretEnvironmentVariable) string { return v.Key }).(pulumi.StringOutput)
}

func (o GetFunctionSecretEnvironmentVariableOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionSecretEnvironmentVariable) string { return v.ProjectId }).(pulumi.StringOutput)
}

func (o GetFunctionSecretEnvironmentVariableOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionSecretEnvironmentVariable) string { return v.Secret }).(pulumi.StringOutput)
}

func (o GetFunctionSecretEnvironmentVariableOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionSecretEnvironmentVariable) string { return v.Version }).(pulumi.StringOutput)
}

type GetFunctionSecretEnvironmentVariableArrayOutput struct{ *pulumi.OutputState }

func (GetFunctionSecretEnvironmentVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFunctionSecretEnvironmentVariable)(nil)).Elem()
}

func (o GetFunctionSecretEnvironmentVariableArrayOutput) ToGetFunctionSecretEnvironmentVariableArrayOutput() GetFunctionSecretEnvironmentVariableArrayOutput {
	return o
}

func (o GetFunctionSecretEnvironmentVariableArrayOutput) ToGetFunctionSecretEnvironmentVariableArrayOutputWithContext(ctx context.Context) GetFunctionSecretEnvironmentVariableArrayOutput {
	return o
}

func (o GetFunctionSecretEnvironmentVariableArrayOutput) Index(i pulumi.IntInput) GetFunctionSecretEnvironmentVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFunctionSecretEnvironmentVariable {
		return vs[0].([]GetFunctionSecretEnvironmentVariable)[vs[1].(int)]
	}).(GetFunctionSecretEnvironmentVariableOutput)
}

type GetFunctionSecretVolume struct {
	MountPath string                           `pulumi:"mountPath"`
	ProjectId string                           `pulumi:"projectId"`
	Secret    string                           `pulumi:"secret"`
	Versions  []GetFunctionSecretVolumeVersion `pulumi:"versions"`
}

// GetFunctionSecretVolumeInput is an input type that accepts GetFunctionSecretVolumeArgs and GetFunctionSecretVolumeOutput values.
// You can construct a concrete instance of `GetFunctionSecretVolumeInput` via:
//
//	GetFunctionSecretVolumeArgs{...}
type GetFunctionSecretVolumeInput interface {
	pulumi.Input

	ToGetFunctionSecretVolumeOutput() GetFunctionSecretVolumeOutput
	ToGetFunctionSecretVolumeOutputWithContext(context.Context) GetFunctionSecretVolumeOutput
}

type GetFunctionSecretVolumeArgs struct {
	MountPath pulumi.StringInput                       `pulumi:"mountPath"`
	ProjectId pulumi.StringInput                       `pulumi:"projectId"`
	Secret    pulumi.StringInput                       `pulumi:"secret"`
	Versions  GetFunctionSecretVolumeVersionArrayInput `pulumi:"versions"`
}

func (GetFunctionSecretVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionSecretVolume)(nil)).Elem()
}

func (i GetFunctionSecretVolumeArgs) ToGetFunctionSecretVolumeOutput() GetFunctionSecretVolumeOutput {
	return i.ToGetFunctionSecretVolumeOutputWithContext(context.Background())
}

func (i GetFunctionSecretVolumeArgs) ToGetFunctionSecretVolumeOutputWithContext(ctx context.Context) GetFunctionSecretVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionSecretVolumeOutput)
}

// GetFunctionSecretVolumeArrayInput is an input type that accepts GetFunctionSecretVolumeArray and GetFunctionSecretVolumeArrayOutput values.
// You can construct a concrete instance of `GetFunctionSecretVolumeArrayInput` via:
//
//	GetFunctionSecretVolumeArray{ GetFunctionSecretVolumeArgs{...} }
type GetFunctionSecretVolumeArrayInput interface {
	pulumi.Input

	ToGetFunctionSecretVolumeArrayOutput() GetFunctionSecretVolumeArrayOutput
	ToGetFunctionSecretVolumeArrayOutputWithContext(context.Context) GetFunctionSecretVolumeArrayOutput
}

type GetFunctionSecretVolumeArray []GetFunctionSecretVolumeInput

func (GetFunctionSecretVolumeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFunctionSecretVolume)(nil)).Elem()
}

func (i GetFunctionSecretVolumeArray) ToGetFunctionSecretVolumeArrayOutput() GetFunctionSecretVolumeArrayOutput {
	return i.ToGetFunctionSecretVolumeArrayOutputWithContext(context.Background())
}

func (i GetFunctionSecretVolumeArray) ToGetFunctionSecretVolumeArrayOutputWithContext(ctx context.Context) GetFunctionSecretVolumeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionSecretVolumeArrayOutput)
}

type GetFunctionSecretVolumeOutput struct{ *pulumi.OutputState }

func (GetFunctionSecretVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionSecretVolume)(nil)).Elem()
}

func (o GetFunctionSecretVolumeOutput) ToGetFunctionSecretVolumeOutput() GetFunctionSecretVolumeOutput {
	return o
}

func (o GetFunctionSecretVolumeOutput) ToGetFunctionSecretVolumeOutputWithContext(ctx context.Context) GetFunctionSecretVolumeOutput {
	return o
}

func (o GetFunctionSecretVolumeOutput) MountPath() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionSecretVolume) string { return v.MountPath }).(pulumi.StringOutput)
}

func (o GetFunctionSecretVolumeOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionSecretVolume) string { return v.ProjectId }).(pulumi.StringOutput)
}

func (o GetFunctionSecretVolumeOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionSecretVolume) string { return v.Secret }).(pulumi.StringOutput)
}

func (o GetFunctionSecretVolumeOutput) Versions() GetFunctionSecretVolumeVersionArrayOutput {
	return o.ApplyT(func(v GetFunctionSecretVolume) []GetFunctionSecretVolumeVersion { return v.Versions }).(GetFunctionSecretVolumeVersionArrayOutput)
}

type GetFunctionSecretVolumeArrayOutput struct{ *pulumi.OutputState }

func (GetFunctionSecretVolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFunctionSecretVolume)(nil)).Elem()
}

func (o GetFunctionSecretVolumeArrayOutput) ToGetFunctionSecretVolumeArrayOutput() GetFunctionSecretVolumeArrayOutput {
	return o
}

func (o GetFunctionSecretVolumeArrayOutput) ToGetFunctionSecretVolumeArrayOutputWithContext(ctx context.Context) GetFunctionSecretVolumeArrayOutput {
	return o
}

func (o GetFunctionSecretVolumeArrayOutput) Index(i pulumi.IntInput) GetFunctionSecretVolumeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFunctionSecretVolume {
		return vs[0].([]GetFunctionSecretVolume)[vs[1].(int)]
	}).(GetFunctionSecretVolumeOutput)
}

type GetFunctionSecretVolumeVersion struct {
	Path    string `pulumi:"path"`
	Version string `pulumi:"version"`
}

// GetFunctionSecretVolumeVersionInput is an input type that accepts GetFunctionSecretVolumeVersionArgs and GetFunctionSecretVolumeVersionOutput values.
// You can construct a concrete instance of `GetFunctionSecretVolumeVersionInput` via:
//
//	GetFunctionSecretVolumeVersionArgs{...}
type GetFunctionSecretVolumeVersionInput interface {
	pulumi.Input

	ToGetFunctionSecretVolumeVersionOutput() GetFunctionSecretVolumeVersionOutput
	ToGetFunctionSecretVolumeVersionOutputWithContext(context.Context) GetFunctionSecretVolumeVersionOutput
}

type GetFunctionSecretVolumeVersionArgs struct {
	Path    pulumi.StringInput `pulumi:"path"`
	Version pulumi.StringInput `pulumi:"version"`
}

func (GetFunctionSecretVolumeVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionSecretVolumeVersion)(nil)).Elem()
}

func (i GetFunctionSecretVolumeVersionArgs) ToGetFunctionSecretVolumeVersionOutput() GetFunctionSecretVolumeVersionOutput {
	return i.ToGetFunctionSecretVolumeVersionOutputWithContext(context.Background())
}

func (i GetFunctionSecretVolumeVersionArgs) ToGetFunctionSecretVolumeVersionOutputWithContext(ctx context.Context) GetFunctionSecretVolumeVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionSecretVolumeVersionOutput)
}

// GetFunctionSecretVolumeVersionArrayInput is an input type that accepts GetFunctionSecretVolumeVersionArray and GetFunctionSecretVolumeVersionArrayOutput values.
// You can construct a concrete instance of `GetFunctionSecretVolumeVersionArrayInput` via:
//
//	GetFunctionSecretVolumeVersionArray{ GetFunctionSecretVolumeVersionArgs{...} }
type GetFunctionSecretVolumeVersionArrayInput interface {
	pulumi.Input

	ToGetFunctionSecretVolumeVersionArrayOutput() GetFunctionSecretVolumeVersionArrayOutput
	ToGetFunctionSecretVolumeVersionArrayOutputWithContext(context.Context) GetFunctionSecretVolumeVersionArrayOutput
}

type GetFunctionSecretVolumeVersionArray []GetFunctionSecretVolumeVersionInput

func (GetFunctionSecretVolumeVersionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFunctionSecretVolumeVersion)(nil)).Elem()
}

func (i GetFunctionSecretVolumeVersionArray) ToGetFunctionSecretVolumeVersionArrayOutput() GetFunctionSecretVolumeVersionArrayOutput {
	return i.ToGetFunctionSecretVolumeVersionArrayOutputWithContext(context.Background())
}

func (i GetFunctionSecretVolumeVersionArray) ToGetFunctionSecretVolumeVersionArrayOutputWithContext(ctx context.Context) GetFunctionSecretVolumeVersionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionSecretVolumeVersionArrayOutput)
}

type GetFunctionSecretVolumeVersionOutput struct{ *pulumi.OutputState }

func (GetFunctionSecretVolumeVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionSecretVolumeVersion)(nil)).Elem()
}

func (o GetFunctionSecretVolumeVersionOutput) ToGetFunctionSecretVolumeVersionOutput() GetFunctionSecretVolumeVersionOutput {
	return o
}

func (o GetFunctionSecretVolumeVersionOutput) ToGetFunctionSecretVolumeVersionOutputWithContext(ctx context.Context) GetFunctionSecretVolumeVersionOutput {
	return o
}

func (o GetFunctionSecretVolumeVersionOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionSecretVolumeVersion) string { return v.Path }).(pulumi.StringOutput)
}

func (o GetFunctionSecretVolumeVersionOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionSecretVolumeVersion) string { return v.Version }).(pulumi.StringOutput)
}

type GetFunctionSecretVolumeVersionArrayOutput struct{ *pulumi.OutputState }

func (GetFunctionSecretVolumeVersionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFunctionSecretVolumeVersion)(nil)).Elem()
}

func (o GetFunctionSecretVolumeVersionArrayOutput) ToGetFunctionSecretVolumeVersionArrayOutput() GetFunctionSecretVolumeVersionArrayOutput {
	return o
}

func (o GetFunctionSecretVolumeVersionArrayOutput) ToGetFunctionSecretVolumeVersionArrayOutputWithContext(ctx context.Context) GetFunctionSecretVolumeVersionArrayOutput {
	return o
}

func (o GetFunctionSecretVolumeVersionArrayOutput) Index(i pulumi.IntInput) GetFunctionSecretVolumeVersionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFunctionSecretVolumeVersion {
		return vs[0].([]GetFunctionSecretVolumeVersion)[vs[1].(int)]
	}).(GetFunctionSecretVolumeVersionOutput)
}

type GetFunctionSourceRepository struct {
	DeployedUrl string `pulumi:"deployedUrl"`
	// The URL pointing to the hosted repository where the function is defined.
	Url string `pulumi:"url"`
}

// GetFunctionSourceRepositoryInput is an input type that accepts GetFunctionSourceRepositoryArgs and GetFunctionSourceRepositoryOutput values.
// You can construct a concrete instance of `GetFunctionSourceRepositoryInput` via:
//
//	GetFunctionSourceRepositoryArgs{...}
type GetFunctionSourceRepositoryInput interface {
	pulumi.Input

	ToGetFunctionSourceRepositoryOutput() GetFunctionSourceRepositoryOutput
	ToGetFunctionSourceRepositoryOutputWithContext(context.Context) GetFunctionSourceRepositoryOutput
}

type GetFunctionSourceRepositoryArgs struct {
	DeployedUrl pulumi.StringInput `pulumi:"deployedUrl"`
	// The URL pointing to the hosted repository where the function is defined.
	Url pulumi.StringInput `pulumi:"url"`
}

func (GetFunctionSourceRepositoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionSourceRepository)(nil)).Elem()
}

func (i GetFunctionSourceRepositoryArgs) ToGetFunctionSourceRepositoryOutput() GetFunctionSourceRepositoryOutput {
	return i.ToGetFunctionSourceRepositoryOutputWithContext(context.Background())
}

func (i GetFunctionSourceRepositoryArgs) ToGetFunctionSourceRepositoryOutputWithContext(ctx context.Context) GetFunctionSourceRepositoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionSourceRepositoryOutput)
}

// GetFunctionSourceRepositoryArrayInput is an input type that accepts GetFunctionSourceRepositoryArray and GetFunctionSourceRepositoryArrayOutput values.
// You can construct a concrete instance of `GetFunctionSourceRepositoryArrayInput` via:
//
//	GetFunctionSourceRepositoryArray{ GetFunctionSourceRepositoryArgs{...} }
type GetFunctionSourceRepositoryArrayInput interface {
	pulumi.Input

	ToGetFunctionSourceRepositoryArrayOutput() GetFunctionSourceRepositoryArrayOutput
	ToGetFunctionSourceRepositoryArrayOutputWithContext(context.Context) GetFunctionSourceRepositoryArrayOutput
}

type GetFunctionSourceRepositoryArray []GetFunctionSourceRepositoryInput

func (GetFunctionSourceRepositoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFunctionSourceRepository)(nil)).Elem()
}

func (i GetFunctionSourceRepositoryArray) ToGetFunctionSourceRepositoryArrayOutput() GetFunctionSourceRepositoryArrayOutput {
	return i.ToGetFunctionSourceRepositoryArrayOutputWithContext(context.Background())
}

func (i GetFunctionSourceRepositoryArray) ToGetFunctionSourceRepositoryArrayOutputWithContext(ctx context.Context) GetFunctionSourceRepositoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionSourceRepositoryArrayOutput)
}

type GetFunctionSourceRepositoryOutput struct{ *pulumi.OutputState }

func (GetFunctionSourceRepositoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionSourceRepository)(nil)).Elem()
}

func (o GetFunctionSourceRepositoryOutput) ToGetFunctionSourceRepositoryOutput() GetFunctionSourceRepositoryOutput {
	return o
}

func (o GetFunctionSourceRepositoryOutput) ToGetFunctionSourceRepositoryOutputWithContext(ctx context.Context) GetFunctionSourceRepositoryOutput {
	return o
}

func (o GetFunctionSourceRepositoryOutput) DeployedUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionSourceRepository) string { return v.DeployedUrl }).(pulumi.StringOutput)
}

// The URL pointing to the hosted repository where the function is defined.
func (o GetFunctionSourceRepositoryOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionSourceRepository) string { return v.Url }).(pulumi.StringOutput)
}

type GetFunctionSourceRepositoryArrayOutput struct{ *pulumi.OutputState }

func (GetFunctionSourceRepositoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFunctionSourceRepository)(nil)).Elem()
}

func (o GetFunctionSourceRepositoryArrayOutput) ToGetFunctionSourceRepositoryArrayOutput() GetFunctionSourceRepositoryArrayOutput {
	return o
}

func (o GetFunctionSourceRepositoryArrayOutput) ToGetFunctionSourceRepositoryArrayOutputWithContext(ctx context.Context) GetFunctionSourceRepositoryArrayOutput {
	return o
}

func (o GetFunctionSourceRepositoryArrayOutput) Index(i pulumi.IntInput) GetFunctionSourceRepositoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFunctionSourceRepository {
		return vs[0].([]GetFunctionSourceRepository)[vs[1].(int)]
	}).(GetFunctionSourceRepositoryOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionEventTriggerInput)(nil)).Elem(), FunctionEventTriggerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionEventTriggerPtrInput)(nil)).Elem(), FunctionEventTriggerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionEventTriggerFailurePolicyInput)(nil)).Elem(), FunctionEventTriggerFailurePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionEventTriggerFailurePolicyPtrInput)(nil)).Elem(), FunctionEventTriggerFailurePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionIamBindingConditionInput)(nil)).Elem(), FunctionIamBindingConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionIamBindingConditionPtrInput)(nil)).Elem(), FunctionIamBindingConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionIamMemberConditionInput)(nil)).Elem(), FunctionIamMemberConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionIamMemberConditionPtrInput)(nil)).Elem(), FunctionIamMemberConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionSecretEnvironmentVariableInput)(nil)).Elem(), FunctionSecretEnvironmentVariableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionSecretEnvironmentVariableArrayInput)(nil)).Elem(), FunctionSecretEnvironmentVariableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionSecretVolumeInput)(nil)).Elem(), FunctionSecretVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionSecretVolumeArrayInput)(nil)).Elem(), FunctionSecretVolumeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionSecretVolumeVersionInput)(nil)).Elem(), FunctionSecretVolumeVersionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionSecretVolumeVersionArrayInput)(nil)).Elem(), FunctionSecretVolumeVersionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionSourceRepositoryInput)(nil)).Elem(), FunctionSourceRepositoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionSourceRepositoryPtrInput)(nil)).Elem(), FunctionSourceRepositoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFunctionEventTriggerInput)(nil)).Elem(), GetFunctionEventTriggerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFunctionEventTriggerArrayInput)(nil)).Elem(), GetFunctionEventTriggerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFunctionEventTriggerFailurePolicyInput)(nil)).Elem(), GetFunctionEventTriggerFailurePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFunctionEventTriggerFailurePolicyArrayInput)(nil)).Elem(), GetFunctionEventTriggerFailurePolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFunctionSecretEnvironmentVariableInput)(nil)).Elem(), GetFunctionSecretEnvironmentVariableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFunctionSecretEnvironmentVariableArrayInput)(nil)).Elem(), GetFunctionSecretEnvironmentVariableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFunctionSecretVolumeInput)(nil)).Elem(), GetFunctionSecretVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFunctionSecretVolumeArrayInput)(nil)).Elem(), GetFunctionSecretVolumeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFunctionSecretVolumeVersionInput)(nil)).Elem(), GetFunctionSecretVolumeVersionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFunctionSecretVolumeVersionArrayInput)(nil)).Elem(), GetFunctionSecretVolumeVersionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFunctionSourceRepositoryInput)(nil)).Elem(), GetFunctionSourceRepositoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFunctionSourceRepositoryArrayInput)(nil)).Elem(), GetFunctionSourceRepositoryArray{})
	pulumi.RegisterOutputType(FunctionEventTriggerOutput{})
	pulumi.RegisterOutputType(FunctionEventTriggerPtrOutput{})
	pulumi.RegisterOutputType(FunctionEventTriggerFailurePolicyOutput{})
	pulumi.RegisterOutputType(FunctionEventTriggerFailurePolicyPtrOutput{})
	pulumi.RegisterOutputType(FunctionIamBindingConditionOutput{})
	pulumi.RegisterOutputType(FunctionIamBindingConditionPtrOutput{})
	pulumi.RegisterOutputType(FunctionIamMemberConditionOutput{})
	pulumi.RegisterOutputType(FunctionIamMemberConditionPtrOutput{})
	pulumi.RegisterOutputType(FunctionSecretEnvironmentVariableOutput{})
	pulumi.RegisterOutputType(FunctionSecretEnvironmentVariableArrayOutput{})
	pulumi.RegisterOutputType(FunctionSecretVolumeOutput{})
	pulumi.RegisterOutputType(FunctionSecretVolumeArrayOutput{})
	pulumi.RegisterOutputType(FunctionSecretVolumeVersionOutput{})
	pulumi.RegisterOutputType(FunctionSecretVolumeVersionArrayOutput{})
	pulumi.RegisterOutputType(FunctionSourceRepositoryOutput{})
	pulumi.RegisterOutputType(FunctionSourceRepositoryPtrOutput{})
	pulumi.RegisterOutputType(GetFunctionEventTriggerOutput{})
	pulumi.RegisterOutputType(GetFunctionEventTriggerArrayOutput{})
	pulumi.RegisterOutputType(GetFunctionEventTriggerFailurePolicyOutput{})
	pulumi.RegisterOutputType(GetFunctionEventTriggerFailurePolicyArrayOutput{})
	pulumi.RegisterOutputType(GetFunctionSecretEnvironmentVariableOutput{})
	pulumi.RegisterOutputType(GetFunctionSecretEnvironmentVariableArrayOutput{})
	pulumi.RegisterOutputType(GetFunctionSecretVolumeOutput{})
	pulumi.RegisterOutputType(GetFunctionSecretVolumeArrayOutput{})
	pulumi.RegisterOutputType(GetFunctionSecretVolumeVersionOutput{})
	pulumi.RegisterOutputType(GetFunctionSecretVolumeVersionArrayOutput{})
	pulumi.RegisterOutputType(GetFunctionSourceRepositoryOutput{})
	pulumi.RegisterOutputType(GetFunctionSourceRepositoryArrayOutput{})
}
