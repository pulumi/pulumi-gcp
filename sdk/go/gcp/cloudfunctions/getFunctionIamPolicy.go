// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudfunctions

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Retrieves the current IAM policy data for cloudfunction
func LookupFunctionIamPolicy(ctx *pulumi.Context, args *LookupFunctionIamPolicyArgs, opts ...pulumi.InvokeOption) (*LookupFunctionIamPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupFunctionIamPolicyResult
	err := ctx.Invoke("gcp:cloudfunctions/getFunctionIamPolicy:getFunctionIamPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getFunctionIamPolicy.
type LookupFunctionIamPolicyArgs struct {
	// Used to find the parent resource to bind the IAM policy to
	CloudFunction string `pulumi:"cloudFunction"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project *string `pulumi:"project"`
	// The location of this cloud function. Used to find the parent resource to bind the IAM policy to. If not specified,
	// the value will be parsed from the identifier of the parent resource. If no region is provided in the parent identifier and no
	// region is specified, it is taken from the provider configuration.
	Region *string `pulumi:"region"`
}

// A collection of values returned by getFunctionIamPolicy.
type LookupFunctionIamPolicyResult struct {
	CloudFunction string `pulumi:"cloudFunction"`
	// (Computed) The etag of the IAM policy.
	Etag string `pulumi:"etag"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// (Required only by `cloudfunctions.FunctionIamPolicy`) The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData string `pulumi:"policyData"`
	Project    string `pulumi:"project"`
	Region     string `pulumi:"region"`
}

func LookupFunctionIamPolicyOutput(ctx *pulumi.Context, args LookupFunctionIamPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupFunctionIamPolicyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupFunctionIamPolicyResult, error) {
			args := v.(LookupFunctionIamPolicyArgs)
			r, err := LookupFunctionIamPolicy(ctx, &args, opts...)
			var s LookupFunctionIamPolicyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupFunctionIamPolicyResultOutput)
}

// A collection of arguments for invoking getFunctionIamPolicy.
type LookupFunctionIamPolicyOutputArgs struct {
	// Used to find the parent resource to bind the IAM policy to
	CloudFunction pulumi.StringInput `pulumi:"cloudFunction"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringPtrInput `pulumi:"project"`
	// The location of this cloud function. Used to find the parent resource to bind the IAM policy to. If not specified,
	// the value will be parsed from the identifier of the parent resource. If no region is provided in the parent identifier and no
	// region is specified, it is taken from the provider configuration.
	Region pulumi.StringPtrInput `pulumi:"region"`
}

func (LookupFunctionIamPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFunctionIamPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getFunctionIamPolicy.
type LookupFunctionIamPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupFunctionIamPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFunctionIamPolicyResult)(nil)).Elem()
}

func (o LookupFunctionIamPolicyResultOutput) ToLookupFunctionIamPolicyResultOutput() LookupFunctionIamPolicyResultOutput {
	return o
}

func (o LookupFunctionIamPolicyResultOutput) ToLookupFunctionIamPolicyResultOutputWithContext(ctx context.Context) LookupFunctionIamPolicyResultOutput {
	return o
}

func (o LookupFunctionIamPolicyResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupFunctionIamPolicyResult] {
	return pulumix.Output[LookupFunctionIamPolicyResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupFunctionIamPolicyResultOutput) CloudFunction() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFunctionIamPolicyResult) string { return v.CloudFunction }).(pulumi.StringOutput)
}

// (Computed) The etag of the IAM policy.
func (o LookupFunctionIamPolicyResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFunctionIamPolicyResult) string { return v.Etag }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupFunctionIamPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFunctionIamPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

// (Required only by `cloudfunctions.FunctionIamPolicy`) The policy data generated by
// a `organizations.getIAMPolicy` data source.
func (o LookupFunctionIamPolicyResultOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFunctionIamPolicyResult) string { return v.PolicyData }).(pulumi.StringOutput)
}

func (o LookupFunctionIamPolicyResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFunctionIamPolicyResult) string { return v.Project }).(pulumi.StringOutput)
}

func (o LookupFunctionIamPolicyResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFunctionIamPolicyResult) string { return v.Region }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupFunctionIamPolicyResultOutput{})
}
