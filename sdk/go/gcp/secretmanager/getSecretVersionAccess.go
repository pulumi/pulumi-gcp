// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package secretmanager

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get a payload of Secret Manager secret's version. It only requires the [Secret Manager Secret Accessor](https://cloud.google.com/secret-manager/docs/access-control#secretmanager.secretAccessor) role. For more information see the [official documentation](https://cloud.google.com/secret-manager/docs/) and [API](https://cloud.google.com/secret-manager/docs/reference/rest/v1/projects.secrets.versions/access).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/secretmanager"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := secretmanager.GetSecretVersionAccess(ctx, &secretmanager.GetSecretVersionAccessArgs{
//				Secret: "my-secret",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetSecretVersionAccess(ctx *pulumi.Context, args *GetSecretVersionAccessArgs, opts ...pulumi.InvokeOption) (*GetSecretVersionAccessResult, error) {
	var rv GetSecretVersionAccessResult
	err := ctx.Invoke("gcp:secretmanager/getSecretVersionAccess:getSecretVersionAccess", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSecretVersionAccess.
type GetSecretVersionAccessArgs struct {
	// The project to get the secret version for. If it
	// is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// The secret to get the secret version for.
	Secret string `pulumi:"secret"`
	// The version of the secret to get. If it
	// is not provided, the latest version is retrieved.
	Version *string `pulumi:"version"`
}

// A collection of values returned by getSecretVersionAccess.
type GetSecretVersionAccessResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The resource name of the SecretVersion. Format:
	// `projects/{{project}}/secrets/{{secret_id}}/versions/{{version}}`
	Name    string `pulumi:"name"`
	Project string `pulumi:"project"`
	Secret  string `pulumi:"secret"`
	// The secret data. No larger than 64KiB.
	SecretData string `pulumi:"secretData"`
	Version    string `pulumi:"version"`
}

func GetSecretVersionAccessOutput(ctx *pulumi.Context, args GetSecretVersionAccessOutputArgs, opts ...pulumi.InvokeOption) GetSecretVersionAccessResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetSecretVersionAccessResult, error) {
			args := v.(GetSecretVersionAccessArgs)
			r, err := GetSecretVersionAccess(ctx, &args, opts...)
			var s GetSecretVersionAccessResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetSecretVersionAccessResultOutput)
}

// A collection of arguments for invoking getSecretVersionAccess.
type GetSecretVersionAccessOutputArgs struct {
	// The project to get the secret version for. If it
	// is not provided, the provider project is used.
	Project pulumi.StringPtrInput `pulumi:"project"`
	// The secret to get the secret version for.
	Secret pulumi.StringInput `pulumi:"secret"`
	// The version of the secret to get. If it
	// is not provided, the latest version is retrieved.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (GetSecretVersionAccessOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretVersionAccessArgs)(nil)).Elem()
}

// A collection of values returned by getSecretVersionAccess.
type GetSecretVersionAccessResultOutput struct{ *pulumi.OutputState }

func (GetSecretVersionAccessResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretVersionAccessResult)(nil)).Elem()
}

func (o GetSecretVersionAccessResultOutput) ToGetSecretVersionAccessResultOutput() GetSecretVersionAccessResultOutput {
	return o
}

func (o GetSecretVersionAccessResultOutput) ToGetSecretVersionAccessResultOutputWithContext(ctx context.Context) GetSecretVersionAccessResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetSecretVersionAccessResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretVersionAccessResult) string { return v.Id }).(pulumi.StringOutput)
}

// The resource name of the SecretVersion. Format:
// `projects/{{project}}/secrets/{{secret_id}}/versions/{{version}}`
func (o GetSecretVersionAccessResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretVersionAccessResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetSecretVersionAccessResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretVersionAccessResult) string { return v.Project }).(pulumi.StringOutput)
}

func (o GetSecretVersionAccessResultOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretVersionAccessResult) string { return v.Secret }).(pulumi.StringOutput)
}

// The secret data. No larger than 64KiB.
func (o GetSecretVersionAccessResultOutput) SecretData() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretVersionAccessResult) string { return v.SecretData }).(pulumi.StringOutput)
}

func (o GetSecretVersionAccessResultOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretVersionAccessResult) string { return v.Version }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSecretVersionAccessResultOutput{})
}
