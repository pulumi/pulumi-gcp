// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package secretmanager

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to list the Secret Manager Regional Secrets.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/secretmanager"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := secretmanager.GetRegionalSecrets(ctx, &secretmanager.GetRegionalSecretsArgs{
//				Location: "us-central1",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetRegionalSecrets(ctx *pulumi.Context, args *GetRegionalSecretsArgs, opts ...pulumi.InvokeOption) (*GetRegionalSecretsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetRegionalSecretsResult
	err := ctx.Invoke("gcp:secretmanager/getRegionalSecrets:getRegionalSecrets", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRegionalSecrets.
type GetRegionalSecretsArgs struct {
	// Filter string, adhering to the rules in [List-operation filtering](https://cloud.google.com/secret-manager/docs/filtering). List only secrets matching the filter. If filter is empty, all regional secrets are listed from the specified location.
	Filter *string `pulumi:"filter"`
	// The location of the regional secret.
	Location string `pulumi:"location"`
	// The ID of the project.
	Project *string `pulumi:"project"`
}

// A collection of values returned by getRegionalSecrets.
type GetRegionalSecretsResult struct {
	Filter *string `pulumi:"filter"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The location in which the resource belongs.
	Location string `pulumi:"location"`
	// The ID of the project in which the resource belongs.
	Project string `pulumi:"project"`
	// A list of regional secrets present in the specified location and matching the filter. Structure is defined below.
	Secrets []GetRegionalSecretsSecret `pulumi:"secrets"`
}

func GetRegionalSecretsOutput(ctx *pulumi.Context, args GetRegionalSecretsOutputArgs, opts ...pulumi.InvokeOption) GetRegionalSecretsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetRegionalSecretsResultOutput, error) {
			args := v.(GetRegionalSecretsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("gcp:secretmanager/getRegionalSecrets:getRegionalSecrets", args, GetRegionalSecretsResultOutput{}, options).(GetRegionalSecretsResultOutput), nil
		}).(GetRegionalSecretsResultOutput)
}

// A collection of arguments for invoking getRegionalSecrets.
type GetRegionalSecretsOutputArgs struct {
	// Filter string, adhering to the rules in [List-operation filtering](https://cloud.google.com/secret-manager/docs/filtering). List only secrets matching the filter. If filter is empty, all regional secrets are listed from the specified location.
	Filter pulumi.StringPtrInput `pulumi:"filter"`
	// The location of the regional secret.
	Location pulumi.StringInput `pulumi:"location"`
	// The ID of the project.
	Project pulumi.StringPtrInput `pulumi:"project"`
}

func (GetRegionalSecretsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegionalSecretsArgs)(nil)).Elem()
}

// A collection of values returned by getRegionalSecrets.
type GetRegionalSecretsResultOutput struct{ *pulumi.OutputState }

func (GetRegionalSecretsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegionalSecretsResult)(nil)).Elem()
}

func (o GetRegionalSecretsResultOutput) ToGetRegionalSecretsResultOutput() GetRegionalSecretsResultOutput {
	return o
}

func (o GetRegionalSecretsResultOutput) ToGetRegionalSecretsResultOutputWithContext(ctx context.Context) GetRegionalSecretsResultOutput {
	return o
}

func (o GetRegionalSecretsResultOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRegionalSecretsResult) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetRegionalSecretsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionalSecretsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The location in which the resource belongs.
func (o GetRegionalSecretsResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionalSecretsResult) string { return v.Location }).(pulumi.StringOutput)
}

// The ID of the project in which the resource belongs.
func (o GetRegionalSecretsResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionalSecretsResult) string { return v.Project }).(pulumi.StringOutput)
}

// A list of regional secrets present in the specified location and matching the filter. Structure is defined below.
func (o GetRegionalSecretsResultOutput) Secrets() GetRegionalSecretsSecretArrayOutput {
	return o.ApplyT(func(v GetRegionalSecretsResult) []GetRegionalSecretsSecret { return v.Secrets }).(GetRegionalSecretsSecretArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetRegionalSecretsResultOutput{})
}
