// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package secretmanager

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type SecretIamBindingCondition struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

// SecretIamBindingConditionInput is an input type that accepts SecretIamBindingConditionArgs and SecretIamBindingConditionOutput values.
// You can construct a concrete instance of `SecretIamBindingConditionInput` via:
//
//          SecretIamBindingConditionArgs{...}
type SecretIamBindingConditionInput interface {
	pulumi.Input

	ToSecretIamBindingConditionOutput() SecretIamBindingConditionOutput
	ToSecretIamBindingConditionOutputWithContext(context.Context) SecretIamBindingConditionOutput
}

type SecretIamBindingConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (SecretIamBindingConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretIamBindingCondition)(nil)).Elem()
}

func (i SecretIamBindingConditionArgs) ToSecretIamBindingConditionOutput() SecretIamBindingConditionOutput {
	return i.ToSecretIamBindingConditionOutputWithContext(context.Background())
}

func (i SecretIamBindingConditionArgs) ToSecretIamBindingConditionOutputWithContext(ctx context.Context) SecretIamBindingConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretIamBindingConditionOutput)
}

func (i SecretIamBindingConditionArgs) ToSecretIamBindingConditionPtrOutput() SecretIamBindingConditionPtrOutput {
	return i.ToSecretIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i SecretIamBindingConditionArgs) ToSecretIamBindingConditionPtrOutputWithContext(ctx context.Context) SecretIamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretIamBindingConditionOutput).ToSecretIamBindingConditionPtrOutputWithContext(ctx)
}

// SecretIamBindingConditionPtrInput is an input type that accepts SecretIamBindingConditionArgs, SecretIamBindingConditionPtr and SecretIamBindingConditionPtrOutput values.
// You can construct a concrete instance of `SecretIamBindingConditionPtrInput` via:
//
//          SecretIamBindingConditionArgs{...}
//
//  or:
//
//          nil
type SecretIamBindingConditionPtrInput interface {
	pulumi.Input

	ToSecretIamBindingConditionPtrOutput() SecretIamBindingConditionPtrOutput
	ToSecretIamBindingConditionPtrOutputWithContext(context.Context) SecretIamBindingConditionPtrOutput
}

type secretIamBindingConditionPtrType SecretIamBindingConditionArgs

func SecretIamBindingConditionPtr(v *SecretIamBindingConditionArgs) SecretIamBindingConditionPtrInput {
	return (*secretIamBindingConditionPtrType)(v)
}

func (*secretIamBindingConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretIamBindingCondition)(nil)).Elem()
}

func (i *secretIamBindingConditionPtrType) ToSecretIamBindingConditionPtrOutput() SecretIamBindingConditionPtrOutput {
	return i.ToSecretIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i *secretIamBindingConditionPtrType) ToSecretIamBindingConditionPtrOutputWithContext(ctx context.Context) SecretIamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretIamBindingConditionPtrOutput)
}

type SecretIamBindingConditionOutput struct{ *pulumi.OutputState }

func (SecretIamBindingConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretIamBindingCondition)(nil)).Elem()
}

func (o SecretIamBindingConditionOutput) ToSecretIamBindingConditionOutput() SecretIamBindingConditionOutput {
	return o
}

func (o SecretIamBindingConditionOutput) ToSecretIamBindingConditionOutputWithContext(ctx context.Context) SecretIamBindingConditionOutput {
	return o
}

func (o SecretIamBindingConditionOutput) ToSecretIamBindingConditionPtrOutput() SecretIamBindingConditionPtrOutput {
	return o.ToSecretIamBindingConditionPtrOutputWithContext(context.Background())
}

func (o SecretIamBindingConditionOutput) ToSecretIamBindingConditionPtrOutputWithContext(ctx context.Context) SecretIamBindingConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretIamBindingCondition) *SecretIamBindingCondition {
		return &v
	}).(SecretIamBindingConditionPtrOutput)
}

func (o SecretIamBindingConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretIamBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o SecretIamBindingConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v SecretIamBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o SecretIamBindingConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v SecretIamBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

type SecretIamBindingConditionPtrOutput struct{ *pulumi.OutputState }

func (SecretIamBindingConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretIamBindingCondition)(nil)).Elem()
}

func (o SecretIamBindingConditionPtrOutput) ToSecretIamBindingConditionPtrOutput() SecretIamBindingConditionPtrOutput {
	return o
}

func (o SecretIamBindingConditionPtrOutput) ToSecretIamBindingConditionPtrOutputWithContext(ctx context.Context) SecretIamBindingConditionPtrOutput {
	return o
}

func (o SecretIamBindingConditionPtrOutput) Elem() SecretIamBindingConditionOutput {
	return o.ApplyT(func(v *SecretIamBindingCondition) SecretIamBindingCondition {
		if v != nil {
			return *v
		}
		var ret SecretIamBindingCondition
		return ret
	}).(SecretIamBindingConditionOutput)
}

func (o SecretIamBindingConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o SecretIamBindingConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

func (o SecretIamBindingConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type SecretIamMemberCondition struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

// SecretIamMemberConditionInput is an input type that accepts SecretIamMemberConditionArgs and SecretIamMemberConditionOutput values.
// You can construct a concrete instance of `SecretIamMemberConditionInput` via:
//
//          SecretIamMemberConditionArgs{...}
type SecretIamMemberConditionInput interface {
	pulumi.Input

	ToSecretIamMemberConditionOutput() SecretIamMemberConditionOutput
	ToSecretIamMemberConditionOutputWithContext(context.Context) SecretIamMemberConditionOutput
}

type SecretIamMemberConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (SecretIamMemberConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretIamMemberCondition)(nil)).Elem()
}

func (i SecretIamMemberConditionArgs) ToSecretIamMemberConditionOutput() SecretIamMemberConditionOutput {
	return i.ToSecretIamMemberConditionOutputWithContext(context.Background())
}

func (i SecretIamMemberConditionArgs) ToSecretIamMemberConditionOutputWithContext(ctx context.Context) SecretIamMemberConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretIamMemberConditionOutput)
}

func (i SecretIamMemberConditionArgs) ToSecretIamMemberConditionPtrOutput() SecretIamMemberConditionPtrOutput {
	return i.ToSecretIamMemberConditionPtrOutputWithContext(context.Background())
}

func (i SecretIamMemberConditionArgs) ToSecretIamMemberConditionPtrOutputWithContext(ctx context.Context) SecretIamMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretIamMemberConditionOutput).ToSecretIamMemberConditionPtrOutputWithContext(ctx)
}

// SecretIamMemberConditionPtrInput is an input type that accepts SecretIamMemberConditionArgs, SecretIamMemberConditionPtr and SecretIamMemberConditionPtrOutput values.
// You can construct a concrete instance of `SecretIamMemberConditionPtrInput` via:
//
//          SecretIamMemberConditionArgs{...}
//
//  or:
//
//          nil
type SecretIamMemberConditionPtrInput interface {
	pulumi.Input

	ToSecretIamMemberConditionPtrOutput() SecretIamMemberConditionPtrOutput
	ToSecretIamMemberConditionPtrOutputWithContext(context.Context) SecretIamMemberConditionPtrOutput
}

type secretIamMemberConditionPtrType SecretIamMemberConditionArgs

func SecretIamMemberConditionPtr(v *SecretIamMemberConditionArgs) SecretIamMemberConditionPtrInput {
	return (*secretIamMemberConditionPtrType)(v)
}

func (*secretIamMemberConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretIamMemberCondition)(nil)).Elem()
}

func (i *secretIamMemberConditionPtrType) ToSecretIamMemberConditionPtrOutput() SecretIamMemberConditionPtrOutput {
	return i.ToSecretIamMemberConditionPtrOutputWithContext(context.Background())
}

func (i *secretIamMemberConditionPtrType) ToSecretIamMemberConditionPtrOutputWithContext(ctx context.Context) SecretIamMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretIamMemberConditionPtrOutput)
}

type SecretIamMemberConditionOutput struct{ *pulumi.OutputState }

func (SecretIamMemberConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretIamMemberCondition)(nil)).Elem()
}

func (o SecretIamMemberConditionOutput) ToSecretIamMemberConditionOutput() SecretIamMemberConditionOutput {
	return o
}

func (o SecretIamMemberConditionOutput) ToSecretIamMemberConditionOutputWithContext(ctx context.Context) SecretIamMemberConditionOutput {
	return o
}

func (o SecretIamMemberConditionOutput) ToSecretIamMemberConditionPtrOutput() SecretIamMemberConditionPtrOutput {
	return o.ToSecretIamMemberConditionPtrOutputWithContext(context.Background())
}

func (o SecretIamMemberConditionOutput) ToSecretIamMemberConditionPtrOutputWithContext(ctx context.Context) SecretIamMemberConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretIamMemberCondition) *SecretIamMemberCondition {
		return &v
	}).(SecretIamMemberConditionPtrOutput)
}

func (o SecretIamMemberConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretIamMemberCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o SecretIamMemberConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v SecretIamMemberCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o SecretIamMemberConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v SecretIamMemberCondition) string { return v.Title }).(pulumi.StringOutput)
}

type SecretIamMemberConditionPtrOutput struct{ *pulumi.OutputState }

func (SecretIamMemberConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretIamMemberCondition)(nil)).Elem()
}

func (o SecretIamMemberConditionPtrOutput) ToSecretIamMemberConditionPtrOutput() SecretIamMemberConditionPtrOutput {
	return o
}

func (o SecretIamMemberConditionPtrOutput) ToSecretIamMemberConditionPtrOutputWithContext(ctx context.Context) SecretIamMemberConditionPtrOutput {
	return o
}

func (o SecretIamMemberConditionPtrOutput) Elem() SecretIamMemberConditionOutput {
	return o.ApplyT(func(v *SecretIamMemberCondition) SecretIamMemberCondition {
		if v != nil {
			return *v
		}
		var ret SecretIamMemberCondition
		return ret
	}).(SecretIamMemberConditionOutput)
}

func (o SecretIamMemberConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o SecretIamMemberConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

func (o SecretIamMemberConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type SecretReplication struct {
	// The Secret will automatically be replicated without any restrictions.
	Automatic *bool `pulumi:"automatic"`
	// The Secret will automatically be replicated without any restrictions.
	// Structure is documented below.
	UserManaged *SecretReplicationUserManaged `pulumi:"userManaged"`
}

// SecretReplicationInput is an input type that accepts SecretReplicationArgs and SecretReplicationOutput values.
// You can construct a concrete instance of `SecretReplicationInput` via:
//
//          SecretReplicationArgs{...}
type SecretReplicationInput interface {
	pulumi.Input

	ToSecretReplicationOutput() SecretReplicationOutput
	ToSecretReplicationOutputWithContext(context.Context) SecretReplicationOutput
}

type SecretReplicationArgs struct {
	// The Secret will automatically be replicated without any restrictions.
	Automatic pulumi.BoolPtrInput `pulumi:"automatic"`
	// The Secret will automatically be replicated without any restrictions.
	// Structure is documented below.
	UserManaged SecretReplicationUserManagedPtrInput `pulumi:"userManaged"`
}

func (SecretReplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretReplication)(nil)).Elem()
}

func (i SecretReplicationArgs) ToSecretReplicationOutput() SecretReplicationOutput {
	return i.ToSecretReplicationOutputWithContext(context.Background())
}

func (i SecretReplicationArgs) ToSecretReplicationOutputWithContext(ctx context.Context) SecretReplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretReplicationOutput)
}

func (i SecretReplicationArgs) ToSecretReplicationPtrOutput() SecretReplicationPtrOutput {
	return i.ToSecretReplicationPtrOutputWithContext(context.Background())
}

func (i SecretReplicationArgs) ToSecretReplicationPtrOutputWithContext(ctx context.Context) SecretReplicationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretReplicationOutput).ToSecretReplicationPtrOutputWithContext(ctx)
}

// SecretReplicationPtrInput is an input type that accepts SecretReplicationArgs, SecretReplicationPtr and SecretReplicationPtrOutput values.
// You can construct a concrete instance of `SecretReplicationPtrInput` via:
//
//          SecretReplicationArgs{...}
//
//  or:
//
//          nil
type SecretReplicationPtrInput interface {
	pulumi.Input

	ToSecretReplicationPtrOutput() SecretReplicationPtrOutput
	ToSecretReplicationPtrOutputWithContext(context.Context) SecretReplicationPtrOutput
}

type secretReplicationPtrType SecretReplicationArgs

func SecretReplicationPtr(v *SecretReplicationArgs) SecretReplicationPtrInput {
	return (*secretReplicationPtrType)(v)
}

func (*secretReplicationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretReplication)(nil)).Elem()
}

func (i *secretReplicationPtrType) ToSecretReplicationPtrOutput() SecretReplicationPtrOutput {
	return i.ToSecretReplicationPtrOutputWithContext(context.Background())
}

func (i *secretReplicationPtrType) ToSecretReplicationPtrOutputWithContext(ctx context.Context) SecretReplicationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretReplicationPtrOutput)
}

type SecretReplicationOutput struct{ *pulumi.OutputState }

func (SecretReplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretReplication)(nil)).Elem()
}

func (o SecretReplicationOutput) ToSecretReplicationOutput() SecretReplicationOutput {
	return o
}

func (o SecretReplicationOutput) ToSecretReplicationOutputWithContext(ctx context.Context) SecretReplicationOutput {
	return o
}

func (o SecretReplicationOutput) ToSecretReplicationPtrOutput() SecretReplicationPtrOutput {
	return o.ToSecretReplicationPtrOutputWithContext(context.Background())
}

func (o SecretReplicationOutput) ToSecretReplicationPtrOutputWithContext(ctx context.Context) SecretReplicationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretReplication) *SecretReplication {
		return &v
	}).(SecretReplicationPtrOutput)
}

// The Secret will automatically be replicated without any restrictions.
func (o SecretReplicationOutput) Automatic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SecretReplication) *bool { return v.Automatic }).(pulumi.BoolPtrOutput)
}

// The Secret will automatically be replicated without any restrictions.
// Structure is documented below.
func (o SecretReplicationOutput) UserManaged() SecretReplicationUserManagedPtrOutput {
	return o.ApplyT(func(v SecretReplication) *SecretReplicationUserManaged { return v.UserManaged }).(SecretReplicationUserManagedPtrOutput)
}

type SecretReplicationPtrOutput struct{ *pulumi.OutputState }

func (SecretReplicationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretReplication)(nil)).Elem()
}

func (o SecretReplicationPtrOutput) ToSecretReplicationPtrOutput() SecretReplicationPtrOutput {
	return o
}

func (o SecretReplicationPtrOutput) ToSecretReplicationPtrOutputWithContext(ctx context.Context) SecretReplicationPtrOutput {
	return o
}

func (o SecretReplicationPtrOutput) Elem() SecretReplicationOutput {
	return o.ApplyT(func(v *SecretReplication) SecretReplication {
		if v != nil {
			return *v
		}
		var ret SecretReplication
		return ret
	}).(SecretReplicationOutput)
}

// The Secret will automatically be replicated without any restrictions.
func (o SecretReplicationPtrOutput) Automatic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SecretReplication) *bool {
		if v == nil {
			return nil
		}
		return v.Automatic
	}).(pulumi.BoolPtrOutput)
}

// The Secret will automatically be replicated without any restrictions.
// Structure is documented below.
func (o SecretReplicationPtrOutput) UserManaged() SecretReplicationUserManagedPtrOutput {
	return o.ApplyT(func(v *SecretReplication) *SecretReplicationUserManaged {
		if v == nil {
			return nil
		}
		return v.UserManaged
	}).(SecretReplicationUserManagedPtrOutput)
}

type SecretReplicationUserManaged struct {
	// The list of Replicas for this Secret. Cannot be empty.
	// Structure is documented below.
	Replicas []SecretReplicationUserManagedReplica `pulumi:"replicas"`
}

// SecretReplicationUserManagedInput is an input type that accepts SecretReplicationUserManagedArgs and SecretReplicationUserManagedOutput values.
// You can construct a concrete instance of `SecretReplicationUserManagedInput` via:
//
//          SecretReplicationUserManagedArgs{...}
type SecretReplicationUserManagedInput interface {
	pulumi.Input

	ToSecretReplicationUserManagedOutput() SecretReplicationUserManagedOutput
	ToSecretReplicationUserManagedOutputWithContext(context.Context) SecretReplicationUserManagedOutput
}

type SecretReplicationUserManagedArgs struct {
	// The list of Replicas for this Secret. Cannot be empty.
	// Structure is documented below.
	Replicas SecretReplicationUserManagedReplicaArrayInput `pulumi:"replicas"`
}

func (SecretReplicationUserManagedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretReplicationUserManaged)(nil)).Elem()
}

func (i SecretReplicationUserManagedArgs) ToSecretReplicationUserManagedOutput() SecretReplicationUserManagedOutput {
	return i.ToSecretReplicationUserManagedOutputWithContext(context.Background())
}

func (i SecretReplicationUserManagedArgs) ToSecretReplicationUserManagedOutputWithContext(ctx context.Context) SecretReplicationUserManagedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretReplicationUserManagedOutput)
}

func (i SecretReplicationUserManagedArgs) ToSecretReplicationUserManagedPtrOutput() SecretReplicationUserManagedPtrOutput {
	return i.ToSecretReplicationUserManagedPtrOutputWithContext(context.Background())
}

func (i SecretReplicationUserManagedArgs) ToSecretReplicationUserManagedPtrOutputWithContext(ctx context.Context) SecretReplicationUserManagedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretReplicationUserManagedOutput).ToSecretReplicationUserManagedPtrOutputWithContext(ctx)
}

// SecretReplicationUserManagedPtrInput is an input type that accepts SecretReplicationUserManagedArgs, SecretReplicationUserManagedPtr and SecretReplicationUserManagedPtrOutput values.
// You can construct a concrete instance of `SecretReplicationUserManagedPtrInput` via:
//
//          SecretReplicationUserManagedArgs{...}
//
//  or:
//
//          nil
type SecretReplicationUserManagedPtrInput interface {
	pulumi.Input

	ToSecretReplicationUserManagedPtrOutput() SecretReplicationUserManagedPtrOutput
	ToSecretReplicationUserManagedPtrOutputWithContext(context.Context) SecretReplicationUserManagedPtrOutput
}

type secretReplicationUserManagedPtrType SecretReplicationUserManagedArgs

func SecretReplicationUserManagedPtr(v *SecretReplicationUserManagedArgs) SecretReplicationUserManagedPtrInput {
	return (*secretReplicationUserManagedPtrType)(v)
}

func (*secretReplicationUserManagedPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretReplicationUserManaged)(nil)).Elem()
}

func (i *secretReplicationUserManagedPtrType) ToSecretReplicationUserManagedPtrOutput() SecretReplicationUserManagedPtrOutput {
	return i.ToSecretReplicationUserManagedPtrOutputWithContext(context.Background())
}

func (i *secretReplicationUserManagedPtrType) ToSecretReplicationUserManagedPtrOutputWithContext(ctx context.Context) SecretReplicationUserManagedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretReplicationUserManagedPtrOutput)
}

type SecretReplicationUserManagedOutput struct{ *pulumi.OutputState }

func (SecretReplicationUserManagedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretReplicationUserManaged)(nil)).Elem()
}

func (o SecretReplicationUserManagedOutput) ToSecretReplicationUserManagedOutput() SecretReplicationUserManagedOutput {
	return o
}

func (o SecretReplicationUserManagedOutput) ToSecretReplicationUserManagedOutputWithContext(ctx context.Context) SecretReplicationUserManagedOutput {
	return o
}

func (o SecretReplicationUserManagedOutput) ToSecretReplicationUserManagedPtrOutput() SecretReplicationUserManagedPtrOutput {
	return o.ToSecretReplicationUserManagedPtrOutputWithContext(context.Background())
}

func (o SecretReplicationUserManagedOutput) ToSecretReplicationUserManagedPtrOutputWithContext(ctx context.Context) SecretReplicationUserManagedPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretReplicationUserManaged) *SecretReplicationUserManaged {
		return &v
	}).(SecretReplicationUserManagedPtrOutput)
}

// The list of Replicas for this Secret. Cannot be empty.
// Structure is documented below.
func (o SecretReplicationUserManagedOutput) Replicas() SecretReplicationUserManagedReplicaArrayOutput {
	return o.ApplyT(func(v SecretReplicationUserManaged) []SecretReplicationUserManagedReplica { return v.Replicas }).(SecretReplicationUserManagedReplicaArrayOutput)
}

type SecretReplicationUserManagedPtrOutput struct{ *pulumi.OutputState }

func (SecretReplicationUserManagedPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretReplicationUserManaged)(nil)).Elem()
}

func (o SecretReplicationUserManagedPtrOutput) ToSecretReplicationUserManagedPtrOutput() SecretReplicationUserManagedPtrOutput {
	return o
}

func (o SecretReplicationUserManagedPtrOutput) ToSecretReplicationUserManagedPtrOutputWithContext(ctx context.Context) SecretReplicationUserManagedPtrOutput {
	return o
}

func (o SecretReplicationUserManagedPtrOutput) Elem() SecretReplicationUserManagedOutput {
	return o.ApplyT(func(v *SecretReplicationUserManaged) SecretReplicationUserManaged {
		if v != nil {
			return *v
		}
		var ret SecretReplicationUserManaged
		return ret
	}).(SecretReplicationUserManagedOutput)
}

// The list of Replicas for this Secret. Cannot be empty.
// Structure is documented below.
func (o SecretReplicationUserManagedPtrOutput) Replicas() SecretReplicationUserManagedReplicaArrayOutput {
	return o.ApplyT(func(v *SecretReplicationUserManaged) []SecretReplicationUserManagedReplica {
		if v == nil {
			return nil
		}
		return v.Replicas
	}).(SecretReplicationUserManagedReplicaArrayOutput)
}

type SecretReplicationUserManagedReplica struct {
	// Customer Managed Encryption for the secret.
	// Structure is documented below.
	CustomerManagedEncryption *SecretReplicationUserManagedReplicaCustomerManagedEncryption `pulumi:"customerManagedEncryption"`
	// The canonical IDs of the location to replicate data. For example: "us-east1".
	Location string `pulumi:"location"`
}

// SecretReplicationUserManagedReplicaInput is an input type that accepts SecretReplicationUserManagedReplicaArgs and SecretReplicationUserManagedReplicaOutput values.
// You can construct a concrete instance of `SecretReplicationUserManagedReplicaInput` via:
//
//          SecretReplicationUserManagedReplicaArgs{...}
type SecretReplicationUserManagedReplicaInput interface {
	pulumi.Input

	ToSecretReplicationUserManagedReplicaOutput() SecretReplicationUserManagedReplicaOutput
	ToSecretReplicationUserManagedReplicaOutputWithContext(context.Context) SecretReplicationUserManagedReplicaOutput
}

type SecretReplicationUserManagedReplicaArgs struct {
	// Customer Managed Encryption for the secret.
	// Structure is documented below.
	CustomerManagedEncryption SecretReplicationUserManagedReplicaCustomerManagedEncryptionPtrInput `pulumi:"customerManagedEncryption"`
	// The canonical IDs of the location to replicate data. For example: "us-east1".
	Location pulumi.StringInput `pulumi:"location"`
}

func (SecretReplicationUserManagedReplicaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretReplicationUserManagedReplica)(nil)).Elem()
}

func (i SecretReplicationUserManagedReplicaArgs) ToSecretReplicationUserManagedReplicaOutput() SecretReplicationUserManagedReplicaOutput {
	return i.ToSecretReplicationUserManagedReplicaOutputWithContext(context.Background())
}

func (i SecretReplicationUserManagedReplicaArgs) ToSecretReplicationUserManagedReplicaOutputWithContext(ctx context.Context) SecretReplicationUserManagedReplicaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretReplicationUserManagedReplicaOutput)
}

// SecretReplicationUserManagedReplicaArrayInput is an input type that accepts SecretReplicationUserManagedReplicaArray and SecretReplicationUserManagedReplicaArrayOutput values.
// You can construct a concrete instance of `SecretReplicationUserManagedReplicaArrayInput` via:
//
//          SecretReplicationUserManagedReplicaArray{ SecretReplicationUserManagedReplicaArgs{...} }
type SecretReplicationUserManagedReplicaArrayInput interface {
	pulumi.Input

	ToSecretReplicationUserManagedReplicaArrayOutput() SecretReplicationUserManagedReplicaArrayOutput
	ToSecretReplicationUserManagedReplicaArrayOutputWithContext(context.Context) SecretReplicationUserManagedReplicaArrayOutput
}

type SecretReplicationUserManagedReplicaArray []SecretReplicationUserManagedReplicaInput

func (SecretReplicationUserManagedReplicaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecretReplicationUserManagedReplica)(nil)).Elem()
}

func (i SecretReplicationUserManagedReplicaArray) ToSecretReplicationUserManagedReplicaArrayOutput() SecretReplicationUserManagedReplicaArrayOutput {
	return i.ToSecretReplicationUserManagedReplicaArrayOutputWithContext(context.Background())
}

func (i SecretReplicationUserManagedReplicaArray) ToSecretReplicationUserManagedReplicaArrayOutputWithContext(ctx context.Context) SecretReplicationUserManagedReplicaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretReplicationUserManagedReplicaArrayOutput)
}

type SecretReplicationUserManagedReplicaOutput struct{ *pulumi.OutputState }

func (SecretReplicationUserManagedReplicaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretReplicationUserManagedReplica)(nil)).Elem()
}

func (o SecretReplicationUserManagedReplicaOutput) ToSecretReplicationUserManagedReplicaOutput() SecretReplicationUserManagedReplicaOutput {
	return o
}

func (o SecretReplicationUserManagedReplicaOutput) ToSecretReplicationUserManagedReplicaOutputWithContext(ctx context.Context) SecretReplicationUserManagedReplicaOutput {
	return o
}

// Customer Managed Encryption for the secret.
// Structure is documented below.
func (o SecretReplicationUserManagedReplicaOutput) CustomerManagedEncryption() SecretReplicationUserManagedReplicaCustomerManagedEncryptionPtrOutput {
	return o.ApplyT(func(v SecretReplicationUserManagedReplica) *SecretReplicationUserManagedReplicaCustomerManagedEncryption {
		return v.CustomerManagedEncryption
	}).(SecretReplicationUserManagedReplicaCustomerManagedEncryptionPtrOutput)
}

// The canonical IDs of the location to replicate data. For example: "us-east1".
func (o SecretReplicationUserManagedReplicaOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v SecretReplicationUserManagedReplica) string { return v.Location }).(pulumi.StringOutput)
}

type SecretReplicationUserManagedReplicaArrayOutput struct{ *pulumi.OutputState }

func (SecretReplicationUserManagedReplicaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecretReplicationUserManagedReplica)(nil)).Elem()
}

func (o SecretReplicationUserManagedReplicaArrayOutput) ToSecretReplicationUserManagedReplicaArrayOutput() SecretReplicationUserManagedReplicaArrayOutput {
	return o
}

func (o SecretReplicationUserManagedReplicaArrayOutput) ToSecretReplicationUserManagedReplicaArrayOutputWithContext(ctx context.Context) SecretReplicationUserManagedReplicaArrayOutput {
	return o
}

func (o SecretReplicationUserManagedReplicaArrayOutput) Index(i pulumi.IntInput) SecretReplicationUserManagedReplicaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecretReplicationUserManagedReplica {
		return vs[0].([]SecretReplicationUserManagedReplica)[vs[1].(int)]
	}).(SecretReplicationUserManagedReplicaOutput)
}

type SecretReplicationUserManagedReplicaCustomerManagedEncryption struct {
	// Describes the Cloud KMS encryption key that will be used to protect destination secret.
	KmsKeyName string `pulumi:"kmsKeyName"`
}

// SecretReplicationUserManagedReplicaCustomerManagedEncryptionInput is an input type that accepts SecretReplicationUserManagedReplicaCustomerManagedEncryptionArgs and SecretReplicationUserManagedReplicaCustomerManagedEncryptionOutput values.
// You can construct a concrete instance of `SecretReplicationUserManagedReplicaCustomerManagedEncryptionInput` via:
//
//          SecretReplicationUserManagedReplicaCustomerManagedEncryptionArgs{...}
type SecretReplicationUserManagedReplicaCustomerManagedEncryptionInput interface {
	pulumi.Input

	ToSecretReplicationUserManagedReplicaCustomerManagedEncryptionOutput() SecretReplicationUserManagedReplicaCustomerManagedEncryptionOutput
	ToSecretReplicationUserManagedReplicaCustomerManagedEncryptionOutputWithContext(context.Context) SecretReplicationUserManagedReplicaCustomerManagedEncryptionOutput
}

type SecretReplicationUserManagedReplicaCustomerManagedEncryptionArgs struct {
	// Describes the Cloud KMS encryption key that will be used to protect destination secret.
	KmsKeyName pulumi.StringInput `pulumi:"kmsKeyName"`
}

func (SecretReplicationUserManagedReplicaCustomerManagedEncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretReplicationUserManagedReplicaCustomerManagedEncryption)(nil)).Elem()
}

func (i SecretReplicationUserManagedReplicaCustomerManagedEncryptionArgs) ToSecretReplicationUserManagedReplicaCustomerManagedEncryptionOutput() SecretReplicationUserManagedReplicaCustomerManagedEncryptionOutput {
	return i.ToSecretReplicationUserManagedReplicaCustomerManagedEncryptionOutputWithContext(context.Background())
}

func (i SecretReplicationUserManagedReplicaCustomerManagedEncryptionArgs) ToSecretReplicationUserManagedReplicaCustomerManagedEncryptionOutputWithContext(ctx context.Context) SecretReplicationUserManagedReplicaCustomerManagedEncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretReplicationUserManagedReplicaCustomerManagedEncryptionOutput)
}

func (i SecretReplicationUserManagedReplicaCustomerManagedEncryptionArgs) ToSecretReplicationUserManagedReplicaCustomerManagedEncryptionPtrOutput() SecretReplicationUserManagedReplicaCustomerManagedEncryptionPtrOutput {
	return i.ToSecretReplicationUserManagedReplicaCustomerManagedEncryptionPtrOutputWithContext(context.Background())
}

func (i SecretReplicationUserManagedReplicaCustomerManagedEncryptionArgs) ToSecretReplicationUserManagedReplicaCustomerManagedEncryptionPtrOutputWithContext(ctx context.Context) SecretReplicationUserManagedReplicaCustomerManagedEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretReplicationUserManagedReplicaCustomerManagedEncryptionOutput).ToSecretReplicationUserManagedReplicaCustomerManagedEncryptionPtrOutputWithContext(ctx)
}

// SecretReplicationUserManagedReplicaCustomerManagedEncryptionPtrInput is an input type that accepts SecretReplicationUserManagedReplicaCustomerManagedEncryptionArgs, SecretReplicationUserManagedReplicaCustomerManagedEncryptionPtr and SecretReplicationUserManagedReplicaCustomerManagedEncryptionPtrOutput values.
// You can construct a concrete instance of `SecretReplicationUserManagedReplicaCustomerManagedEncryptionPtrInput` via:
//
//          SecretReplicationUserManagedReplicaCustomerManagedEncryptionArgs{...}
//
//  or:
//
//          nil
type SecretReplicationUserManagedReplicaCustomerManagedEncryptionPtrInput interface {
	pulumi.Input

	ToSecretReplicationUserManagedReplicaCustomerManagedEncryptionPtrOutput() SecretReplicationUserManagedReplicaCustomerManagedEncryptionPtrOutput
	ToSecretReplicationUserManagedReplicaCustomerManagedEncryptionPtrOutputWithContext(context.Context) SecretReplicationUserManagedReplicaCustomerManagedEncryptionPtrOutput
}

type secretReplicationUserManagedReplicaCustomerManagedEncryptionPtrType SecretReplicationUserManagedReplicaCustomerManagedEncryptionArgs

func SecretReplicationUserManagedReplicaCustomerManagedEncryptionPtr(v *SecretReplicationUserManagedReplicaCustomerManagedEncryptionArgs) SecretReplicationUserManagedReplicaCustomerManagedEncryptionPtrInput {
	return (*secretReplicationUserManagedReplicaCustomerManagedEncryptionPtrType)(v)
}

func (*secretReplicationUserManagedReplicaCustomerManagedEncryptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretReplicationUserManagedReplicaCustomerManagedEncryption)(nil)).Elem()
}

func (i *secretReplicationUserManagedReplicaCustomerManagedEncryptionPtrType) ToSecretReplicationUserManagedReplicaCustomerManagedEncryptionPtrOutput() SecretReplicationUserManagedReplicaCustomerManagedEncryptionPtrOutput {
	return i.ToSecretReplicationUserManagedReplicaCustomerManagedEncryptionPtrOutputWithContext(context.Background())
}

func (i *secretReplicationUserManagedReplicaCustomerManagedEncryptionPtrType) ToSecretReplicationUserManagedReplicaCustomerManagedEncryptionPtrOutputWithContext(ctx context.Context) SecretReplicationUserManagedReplicaCustomerManagedEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretReplicationUserManagedReplicaCustomerManagedEncryptionPtrOutput)
}

type SecretReplicationUserManagedReplicaCustomerManagedEncryptionOutput struct{ *pulumi.OutputState }

func (SecretReplicationUserManagedReplicaCustomerManagedEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretReplicationUserManagedReplicaCustomerManagedEncryption)(nil)).Elem()
}

func (o SecretReplicationUserManagedReplicaCustomerManagedEncryptionOutput) ToSecretReplicationUserManagedReplicaCustomerManagedEncryptionOutput() SecretReplicationUserManagedReplicaCustomerManagedEncryptionOutput {
	return o
}

func (o SecretReplicationUserManagedReplicaCustomerManagedEncryptionOutput) ToSecretReplicationUserManagedReplicaCustomerManagedEncryptionOutputWithContext(ctx context.Context) SecretReplicationUserManagedReplicaCustomerManagedEncryptionOutput {
	return o
}

func (o SecretReplicationUserManagedReplicaCustomerManagedEncryptionOutput) ToSecretReplicationUserManagedReplicaCustomerManagedEncryptionPtrOutput() SecretReplicationUserManagedReplicaCustomerManagedEncryptionPtrOutput {
	return o.ToSecretReplicationUserManagedReplicaCustomerManagedEncryptionPtrOutputWithContext(context.Background())
}

func (o SecretReplicationUserManagedReplicaCustomerManagedEncryptionOutput) ToSecretReplicationUserManagedReplicaCustomerManagedEncryptionPtrOutputWithContext(ctx context.Context) SecretReplicationUserManagedReplicaCustomerManagedEncryptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretReplicationUserManagedReplicaCustomerManagedEncryption) *SecretReplicationUserManagedReplicaCustomerManagedEncryption {
		return &v
	}).(SecretReplicationUserManagedReplicaCustomerManagedEncryptionPtrOutput)
}

// Describes the Cloud KMS encryption key that will be used to protect destination secret.
func (o SecretReplicationUserManagedReplicaCustomerManagedEncryptionOutput) KmsKeyName() pulumi.StringOutput {
	return o.ApplyT(func(v SecretReplicationUserManagedReplicaCustomerManagedEncryption) string { return v.KmsKeyName }).(pulumi.StringOutput)
}

type SecretReplicationUserManagedReplicaCustomerManagedEncryptionPtrOutput struct{ *pulumi.OutputState }

func (SecretReplicationUserManagedReplicaCustomerManagedEncryptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretReplicationUserManagedReplicaCustomerManagedEncryption)(nil)).Elem()
}

func (o SecretReplicationUserManagedReplicaCustomerManagedEncryptionPtrOutput) ToSecretReplicationUserManagedReplicaCustomerManagedEncryptionPtrOutput() SecretReplicationUserManagedReplicaCustomerManagedEncryptionPtrOutput {
	return o
}

func (o SecretReplicationUserManagedReplicaCustomerManagedEncryptionPtrOutput) ToSecretReplicationUserManagedReplicaCustomerManagedEncryptionPtrOutputWithContext(ctx context.Context) SecretReplicationUserManagedReplicaCustomerManagedEncryptionPtrOutput {
	return o
}

func (o SecretReplicationUserManagedReplicaCustomerManagedEncryptionPtrOutput) Elem() SecretReplicationUserManagedReplicaCustomerManagedEncryptionOutput {
	return o.ApplyT(func(v *SecretReplicationUserManagedReplicaCustomerManagedEncryption) SecretReplicationUserManagedReplicaCustomerManagedEncryption {
		if v != nil {
			return *v
		}
		var ret SecretReplicationUserManagedReplicaCustomerManagedEncryption
		return ret
	}).(SecretReplicationUserManagedReplicaCustomerManagedEncryptionOutput)
}

// Describes the Cloud KMS encryption key that will be used to protect destination secret.
func (o SecretReplicationUserManagedReplicaCustomerManagedEncryptionPtrOutput) KmsKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretReplicationUserManagedReplicaCustomerManagedEncryption) *string {
		if v == nil {
			return nil
		}
		return &v.KmsKeyName
	}).(pulumi.StringPtrOutput)
}

type SecretRotation struct {
	// Timestamp in UTC at which the Secret is scheduled to rotate.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	NextRotationTime *string `pulumi:"nextRotationTime"`
	// The Duration between rotation notifications. Must be in seconds and at least 3600s (1h) and at most 3153600000s (100 years).
	// If rotationPeriod is set, `nextRotationTime` must be set. `nextRotationTime` will be advanced by this period when the service automatically sends rotation notifications.
	RotationPeriod *string `pulumi:"rotationPeriod"`
}

// SecretRotationInput is an input type that accepts SecretRotationArgs and SecretRotationOutput values.
// You can construct a concrete instance of `SecretRotationInput` via:
//
//          SecretRotationArgs{...}
type SecretRotationInput interface {
	pulumi.Input

	ToSecretRotationOutput() SecretRotationOutput
	ToSecretRotationOutputWithContext(context.Context) SecretRotationOutput
}

type SecretRotationArgs struct {
	// Timestamp in UTC at which the Secret is scheduled to rotate.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	NextRotationTime pulumi.StringPtrInput `pulumi:"nextRotationTime"`
	// The Duration between rotation notifications. Must be in seconds and at least 3600s (1h) and at most 3153600000s (100 years).
	// If rotationPeriod is set, `nextRotationTime` must be set. `nextRotationTime` will be advanced by this period when the service automatically sends rotation notifications.
	RotationPeriod pulumi.StringPtrInput `pulumi:"rotationPeriod"`
}

func (SecretRotationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretRotation)(nil)).Elem()
}

func (i SecretRotationArgs) ToSecretRotationOutput() SecretRotationOutput {
	return i.ToSecretRotationOutputWithContext(context.Background())
}

func (i SecretRotationArgs) ToSecretRotationOutputWithContext(ctx context.Context) SecretRotationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationOutput)
}

func (i SecretRotationArgs) ToSecretRotationPtrOutput() SecretRotationPtrOutput {
	return i.ToSecretRotationPtrOutputWithContext(context.Background())
}

func (i SecretRotationArgs) ToSecretRotationPtrOutputWithContext(ctx context.Context) SecretRotationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationOutput).ToSecretRotationPtrOutputWithContext(ctx)
}

// SecretRotationPtrInput is an input type that accepts SecretRotationArgs, SecretRotationPtr and SecretRotationPtrOutput values.
// You can construct a concrete instance of `SecretRotationPtrInput` via:
//
//          SecretRotationArgs{...}
//
//  or:
//
//          nil
type SecretRotationPtrInput interface {
	pulumi.Input

	ToSecretRotationPtrOutput() SecretRotationPtrOutput
	ToSecretRotationPtrOutputWithContext(context.Context) SecretRotationPtrOutput
}

type secretRotationPtrType SecretRotationArgs

func SecretRotationPtr(v *SecretRotationArgs) SecretRotationPtrInput {
	return (*secretRotationPtrType)(v)
}

func (*secretRotationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretRotation)(nil)).Elem()
}

func (i *secretRotationPtrType) ToSecretRotationPtrOutput() SecretRotationPtrOutput {
	return i.ToSecretRotationPtrOutputWithContext(context.Background())
}

func (i *secretRotationPtrType) ToSecretRotationPtrOutputWithContext(ctx context.Context) SecretRotationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationPtrOutput)
}

type SecretRotationOutput struct{ *pulumi.OutputState }

func (SecretRotationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretRotation)(nil)).Elem()
}

func (o SecretRotationOutput) ToSecretRotationOutput() SecretRotationOutput {
	return o
}

func (o SecretRotationOutput) ToSecretRotationOutputWithContext(ctx context.Context) SecretRotationOutput {
	return o
}

func (o SecretRotationOutput) ToSecretRotationPtrOutput() SecretRotationPtrOutput {
	return o.ToSecretRotationPtrOutputWithContext(context.Background())
}

func (o SecretRotationOutput) ToSecretRotationPtrOutputWithContext(ctx context.Context) SecretRotationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretRotation) *SecretRotation {
		return &v
	}).(SecretRotationPtrOutput)
}

// Timestamp in UTC at which the Secret is scheduled to rotate.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
func (o SecretRotationOutput) NextRotationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretRotation) *string { return v.NextRotationTime }).(pulumi.StringPtrOutput)
}

// The Duration between rotation notifications. Must be in seconds and at least 3600s (1h) and at most 3153600000s (100 years).
// If rotationPeriod is set, `nextRotationTime` must be set. `nextRotationTime` will be advanced by this period when the service automatically sends rotation notifications.
func (o SecretRotationOutput) RotationPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretRotation) *string { return v.RotationPeriod }).(pulumi.StringPtrOutput)
}

type SecretRotationPtrOutput struct{ *pulumi.OutputState }

func (SecretRotationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretRotation)(nil)).Elem()
}

func (o SecretRotationPtrOutput) ToSecretRotationPtrOutput() SecretRotationPtrOutput {
	return o
}

func (o SecretRotationPtrOutput) ToSecretRotationPtrOutputWithContext(ctx context.Context) SecretRotationPtrOutput {
	return o
}

func (o SecretRotationPtrOutput) Elem() SecretRotationOutput {
	return o.ApplyT(func(v *SecretRotation) SecretRotation {
		if v != nil {
			return *v
		}
		var ret SecretRotation
		return ret
	}).(SecretRotationOutput)
}

// Timestamp in UTC at which the Secret is scheduled to rotate.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
func (o SecretRotationPtrOutput) NextRotationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretRotation) *string {
		if v == nil {
			return nil
		}
		return v.NextRotationTime
	}).(pulumi.StringPtrOutput)
}

// The Duration between rotation notifications. Must be in seconds and at least 3600s (1h) and at most 3153600000s (100 years).
// If rotationPeriod is set, `nextRotationTime` must be set. `nextRotationTime` will be advanced by this period when the service automatically sends rotation notifications.
func (o SecretRotationPtrOutput) RotationPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretRotation) *string {
		if v == nil {
			return nil
		}
		return v.RotationPeriod
	}).(pulumi.StringPtrOutput)
}

type SecretTopic struct {
	// The resource name of the Pub/Sub topic that will be published to, in the following format: projects/*/topics/*.
	// For publication to succeed, the Secret Manager Service Agent service account must have pubsub.publisher permissions on the topic.
	Name string `pulumi:"name"`
}

// SecretTopicInput is an input type that accepts SecretTopicArgs and SecretTopicOutput values.
// You can construct a concrete instance of `SecretTopicInput` via:
//
//          SecretTopicArgs{...}
type SecretTopicInput interface {
	pulumi.Input

	ToSecretTopicOutput() SecretTopicOutput
	ToSecretTopicOutputWithContext(context.Context) SecretTopicOutput
}

type SecretTopicArgs struct {
	// The resource name of the Pub/Sub topic that will be published to, in the following format: projects/*/topics/*.
	// For publication to succeed, the Secret Manager Service Agent service account must have pubsub.publisher permissions on the topic.
	Name pulumi.StringInput `pulumi:"name"`
}

func (SecretTopicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretTopic)(nil)).Elem()
}

func (i SecretTopicArgs) ToSecretTopicOutput() SecretTopicOutput {
	return i.ToSecretTopicOutputWithContext(context.Background())
}

func (i SecretTopicArgs) ToSecretTopicOutputWithContext(ctx context.Context) SecretTopicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretTopicOutput)
}

// SecretTopicArrayInput is an input type that accepts SecretTopicArray and SecretTopicArrayOutput values.
// You can construct a concrete instance of `SecretTopicArrayInput` via:
//
//          SecretTopicArray{ SecretTopicArgs{...} }
type SecretTopicArrayInput interface {
	pulumi.Input

	ToSecretTopicArrayOutput() SecretTopicArrayOutput
	ToSecretTopicArrayOutputWithContext(context.Context) SecretTopicArrayOutput
}

type SecretTopicArray []SecretTopicInput

func (SecretTopicArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecretTopic)(nil)).Elem()
}

func (i SecretTopicArray) ToSecretTopicArrayOutput() SecretTopicArrayOutput {
	return i.ToSecretTopicArrayOutputWithContext(context.Background())
}

func (i SecretTopicArray) ToSecretTopicArrayOutputWithContext(ctx context.Context) SecretTopicArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretTopicArrayOutput)
}

type SecretTopicOutput struct{ *pulumi.OutputState }

func (SecretTopicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretTopic)(nil)).Elem()
}

func (o SecretTopicOutput) ToSecretTopicOutput() SecretTopicOutput {
	return o
}

func (o SecretTopicOutput) ToSecretTopicOutputWithContext(ctx context.Context) SecretTopicOutput {
	return o
}

// The resource name of the Pub/Sub topic that will be published to, in the following format: projects/*/topics/*.
// For publication to succeed, the Secret Manager Service Agent service account must have pubsub.publisher permissions on the topic.
func (o SecretTopicOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SecretTopic) string { return v.Name }).(pulumi.StringOutput)
}

type SecretTopicArrayOutput struct{ *pulumi.OutputState }

func (SecretTopicArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecretTopic)(nil)).Elem()
}

func (o SecretTopicArrayOutput) ToSecretTopicArrayOutput() SecretTopicArrayOutput {
	return o
}

func (o SecretTopicArrayOutput) ToSecretTopicArrayOutputWithContext(ctx context.Context) SecretTopicArrayOutput {
	return o
}

func (o SecretTopicArrayOutput) Index(i pulumi.IntInput) SecretTopicOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecretTopic {
		return vs[0].([]SecretTopic)[vs[1].(int)]
	}).(SecretTopicOutput)
}

type GetSecretReplication struct {
	Automatic    bool                              `pulumi:"automatic"`
	UserManageds []GetSecretReplicationUserManaged `pulumi:"userManageds"`
}

// GetSecretReplicationInput is an input type that accepts GetSecretReplicationArgs and GetSecretReplicationOutput values.
// You can construct a concrete instance of `GetSecretReplicationInput` via:
//
//          GetSecretReplicationArgs{...}
type GetSecretReplicationInput interface {
	pulumi.Input

	ToGetSecretReplicationOutput() GetSecretReplicationOutput
	ToGetSecretReplicationOutputWithContext(context.Context) GetSecretReplicationOutput
}

type GetSecretReplicationArgs struct {
	Automatic    pulumi.BoolInput                          `pulumi:"automatic"`
	UserManageds GetSecretReplicationUserManagedArrayInput `pulumi:"userManageds"`
}

func (GetSecretReplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretReplication)(nil)).Elem()
}

func (i GetSecretReplicationArgs) ToGetSecretReplicationOutput() GetSecretReplicationOutput {
	return i.ToGetSecretReplicationOutputWithContext(context.Background())
}

func (i GetSecretReplicationArgs) ToGetSecretReplicationOutputWithContext(ctx context.Context) GetSecretReplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretReplicationOutput)
}

// GetSecretReplicationArrayInput is an input type that accepts GetSecretReplicationArray and GetSecretReplicationArrayOutput values.
// You can construct a concrete instance of `GetSecretReplicationArrayInput` via:
//
//          GetSecretReplicationArray{ GetSecretReplicationArgs{...} }
type GetSecretReplicationArrayInput interface {
	pulumi.Input

	ToGetSecretReplicationArrayOutput() GetSecretReplicationArrayOutput
	ToGetSecretReplicationArrayOutputWithContext(context.Context) GetSecretReplicationArrayOutput
}

type GetSecretReplicationArray []GetSecretReplicationInput

func (GetSecretReplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretReplication)(nil)).Elem()
}

func (i GetSecretReplicationArray) ToGetSecretReplicationArrayOutput() GetSecretReplicationArrayOutput {
	return i.ToGetSecretReplicationArrayOutputWithContext(context.Background())
}

func (i GetSecretReplicationArray) ToGetSecretReplicationArrayOutputWithContext(ctx context.Context) GetSecretReplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretReplicationArrayOutput)
}

type GetSecretReplicationOutput struct{ *pulumi.OutputState }

func (GetSecretReplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretReplication)(nil)).Elem()
}

func (o GetSecretReplicationOutput) ToGetSecretReplicationOutput() GetSecretReplicationOutput {
	return o
}

func (o GetSecretReplicationOutput) ToGetSecretReplicationOutputWithContext(ctx context.Context) GetSecretReplicationOutput {
	return o
}

func (o GetSecretReplicationOutput) Automatic() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSecretReplication) bool { return v.Automatic }).(pulumi.BoolOutput)
}

func (o GetSecretReplicationOutput) UserManageds() GetSecretReplicationUserManagedArrayOutput {
	return o.ApplyT(func(v GetSecretReplication) []GetSecretReplicationUserManaged { return v.UserManageds }).(GetSecretReplicationUserManagedArrayOutput)
}

type GetSecretReplicationArrayOutput struct{ *pulumi.OutputState }

func (GetSecretReplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretReplication)(nil)).Elem()
}

func (o GetSecretReplicationArrayOutput) ToGetSecretReplicationArrayOutput() GetSecretReplicationArrayOutput {
	return o
}

func (o GetSecretReplicationArrayOutput) ToGetSecretReplicationArrayOutputWithContext(ctx context.Context) GetSecretReplicationArrayOutput {
	return o
}

func (o GetSecretReplicationArrayOutput) Index(i pulumi.IntInput) GetSecretReplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecretReplication {
		return vs[0].([]GetSecretReplication)[vs[1].(int)]
	}).(GetSecretReplicationOutput)
}

type GetSecretReplicationUserManaged struct {
	Replicas []GetSecretReplicationUserManagedReplica `pulumi:"replicas"`
}

// GetSecretReplicationUserManagedInput is an input type that accepts GetSecretReplicationUserManagedArgs and GetSecretReplicationUserManagedOutput values.
// You can construct a concrete instance of `GetSecretReplicationUserManagedInput` via:
//
//          GetSecretReplicationUserManagedArgs{...}
type GetSecretReplicationUserManagedInput interface {
	pulumi.Input

	ToGetSecretReplicationUserManagedOutput() GetSecretReplicationUserManagedOutput
	ToGetSecretReplicationUserManagedOutputWithContext(context.Context) GetSecretReplicationUserManagedOutput
}

type GetSecretReplicationUserManagedArgs struct {
	Replicas GetSecretReplicationUserManagedReplicaArrayInput `pulumi:"replicas"`
}

func (GetSecretReplicationUserManagedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretReplicationUserManaged)(nil)).Elem()
}

func (i GetSecretReplicationUserManagedArgs) ToGetSecretReplicationUserManagedOutput() GetSecretReplicationUserManagedOutput {
	return i.ToGetSecretReplicationUserManagedOutputWithContext(context.Background())
}

func (i GetSecretReplicationUserManagedArgs) ToGetSecretReplicationUserManagedOutputWithContext(ctx context.Context) GetSecretReplicationUserManagedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretReplicationUserManagedOutput)
}

// GetSecretReplicationUserManagedArrayInput is an input type that accepts GetSecretReplicationUserManagedArray and GetSecretReplicationUserManagedArrayOutput values.
// You can construct a concrete instance of `GetSecretReplicationUserManagedArrayInput` via:
//
//          GetSecretReplicationUserManagedArray{ GetSecretReplicationUserManagedArgs{...} }
type GetSecretReplicationUserManagedArrayInput interface {
	pulumi.Input

	ToGetSecretReplicationUserManagedArrayOutput() GetSecretReplicationUserManagedArrayOutput
	ToGetSecretReplicationUserManagedArrayOutputWithContext(context.Context) GetSecretReplicationUserManagedArrayOutput
}

type GetSecretReplicationUserManagedArray []GetSecretReplicationUserManagedInput

func (GetSecretReplicationUserManagedArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretReplicationUserManaged)(nil)).Elem()
}

func (i GetSecretReplicationUserManagedArray) ToGetSecretReplicationUserManagedArrayOutput() GetSecretReplicationUserManagedArrayOutput {
	return i.ToGetSecretReplicationUserManagedArrayOutputWithContext(context.Background())
}

func (i GetSecretReplicationUserManagedArray) ToGetSecretReplicationUserManagedArrayOutputWithContext(ctx context.Context) GetSecretReplicationUserManagedArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretReplicationUserManagedArrayOutput)
}

type GetSecretReplicationUserManagedOutput struct{ *pulumi.OutputState }

func (GetSecretReplicationUserManagedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretReplicationUserManaged)(nil)).Elem()
}

func (o GetSecretReplicationUserManagedOutput) ToGetSecretReplicationUserManagedOutput() GetSecretReplicationUserManagedOutput {
	return o
}

func (o GetSecretReplicationUserManagedOutput) ToGetSecretReplicationUserManagedOutputWithContext(ctx context.Context) GetSecretReplicationUserManagedOutput {
	return o
}

func (o GetSecretReplicationUserManagedOutput) Replicas() GetSecretReplicationUserManagedReplicaArrayOutput {
	return o.ApplyT(func(v GetSecretReplicationUserManaged) []GetSecretReplicationUserManagedReplica { return v.Replicas }).(GetSecretReplicationUserManagedReplicaArrayOutput)
}

type GetSecretReplicationUserManagedArrayOutput struct{ *pulumi.OutputState }

func (GetSecretReplicationUserManagedArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretReplicationUserManaged)(nil)).Elem()
}

func (o GetSecretReplicationUserManagedArrayOutput) ToGetSecretReplicationUserManagedArrayOutput() GetSecretReplicationUserManagedArrayOutput {
	return o
}

func (o GetSecretReplicationUserManagedArrayOutput) ToGetSecretReplicationUserManagedArrayOutputWithContext(ctx context.Context) GetSecretReplicationUserManagedArrayOutput {
	return o
}

func (o GetSecretReplicationUserManagedArrayOutput) Index(i pulumi.IntInput) GetSecretReplicationUserManagedOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecretReplicationUserManaged {
		return vs[0].([]GetSecretReplicationUserManaged)[vs[1].(int)]
	}).(GetSecretReplicationUserManagedOutput)
}

type GetSecretReplicationUserManagedReplica struct {
	CustomerManagedEncryptions []GetSecretReplicationUserManagedReplicaCustomerManagedEncryption `pulumi:"customerManagedEncryptions"`
	Location                   string                                                            `pulumi:"location"`
}

// GetSecretReplicationUserManagedReplicaInput is an input type that accepts GetSecretReplicationUserManagedReplicaArgs and GetSecretReplicationUserManagedReplicaOutput values.
// You can construct a concrete instance of `GetSecretReplicationUserManagedReplicaInput` via:
//
//          GetSecretReplicationUserManagedReplicaArgs{...}
type GetSecretReplicationUserManagedReplicaInput interface {
	pulumi.Input

	ToGetSecretReplicationUserManagedReplicaOutput() GetSecretReplicationUserManagedReplicaOutput
	ToGetSecretReplicationUserManagedReplicaOutputWithContext(context.Context) GetSecretReplicationUserManagedReplicaOutput
}

type GetSecretReplicationUserManagedReplicaArgs struct {
	CustomerManagedEncryptions GetSecretReplicationUserManagedReplicaCustomerManagedEncryptionArrayInput `pulumi:"customerManagedEncryptions"`
	Location                   pulumi.StringInput                                                        `pulumi:"location"`
}

func (GetSecretReplicationUserManagedReplicaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretReplicationUserManagedReplica)(nil)).Elem()
}

func (i GetSecretReplicationUserManagedReplicaArgs) ToGetSecretReplicationUserManagedReplicaOutput() GetSecretReplicationUserManagedReplicaOutput {
	return i.ToGetSecretReplicationUserManagedReplicaOutputWithContext(context.Background())
}

func (i GetSecretReplicationUserManagedReplicaArgs) ToGetSecretReplicationUserManagedReplicaOutputWithContext(ctx context.Context) GetSecretReplicationUserManagedReplicaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretReplicationUserManagedReplicaOutput)
}

// GetSecretReplicationUserManagedReplicaArrayInput is an input type that accepts GetSecretReplicationUserManagedReplicaArray and GetSecretReplicationUserManagedReplicaArrayOutput values.
// You can construct a concrete instance of `GetSecretReplicationUserManagedReplicaArrayInput` via:
//
//          GetSecretReplicationUserManagedReplicaArray{ GetSecretReplicationUserManagedReplicaArgs{...} }
type GetSecretReplicationUserManagedReplicaArrayInput interface {
	pulumi.Input

	ToGetSecretReplicationUserManagedReplicaArrayOutput() GetSecretReplicationUserManagedReplicaArrayOutput
	ToGetSecretReplicationUserManagedReplicaArrayOutputWithContext(context.Context) GetSecretReplicationUserManagedReplicaArrayOutput
}

type GetSecretReplicationUserManagedReplicaArray []GetSecretReplicationUserManagedReplicaInput

func (GetSecretReplicationUserManagedReplicaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretReplicationUserManagedReplica)(nil)).Elem()
}

func (i GetSecretReplicationUserManagedReplicaArray) ToGetSecretReplicationUserManagedReplicaArrayOutput() GetSecretReplicationUserManagedReplicaArrayOutput {
	return i.ToGetSecretReplicationUserManagedReplicaArrayOutputWithContext(context.Background())
}

func (i GetSecretReplicationUserManagedReplicaArray) ToGetSecretReplicationUserManagedReplicaArrayOutputWithContext(ctx context.Context) GetSecretReplicationUserManagedReplicaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretReplicationUserManagedReplicaArrayOutput)
}

type GetSecretReplicationUserManagedReplicaOutput struct{ *pulumi.OutputState }

func (GetSecretReplicationUserManagedReplicaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretReplicationUserManagedReplica)(nil)).Elem()
}

func (o GetSecretReplicationUserManagedReplicaOutput) ToGetSecretReplicationUserManagedReplicaOutput() GetSecretReplicationUserManagedReplicaOutput {
	return o
}

func (o GetSecretReplicationUserManagedReplicaOutput) ToGetSecretReplicationUserManagedReplicaOutputWithContext(ctx context.Context) GetSecretReplicationUserManagedReplicaOutput {
	return o
}

func (o GetSecretReplicationUserManagedReplicaOutput) CustomerManagedEncryptions() GetSecretReplicationUserManagedReplicaCustomerManagedEncryptionArrayOutput {
	return o.ApplyT(func(v GetSecretReplicationUserManagedReplica) []GetSecretReplicationUserManagedReplicaCustomerManagedEncryption {
		return v.CustomerManagedEncryptions
	}).(GetSecretReplicationUserManagedReplicaCustomerManagedEncryptionArrayOutput)
}

func (o GetSecretReplicationUserManagedReplicaOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretReplicationUserManagedReplica) string { return v.Location }).(pulumi.StringOutput)
}

type GetSecretReplicationUserManagedReplicaArrayOutput struct{ *pulumi.OutputState }

func (GetSecretReplicationUserManagedReplicaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretReplicationUserManagedReplica)(nil)).Elem()
}

func (o GetSecretReplicationUserManagedReplicaArrayOutput) ToGetSecretReplicationUserManagedReplicaArrayOutput() GetSecretReplicationUserManagedReplicaArrayOutput {
	return o
}

func (o GetSecretReplicationUserManagedReplicaArrayOutput) ToGetSecretReplicationUserManagedReplicaArrayOutputWithContext(ctx context.Context) GetSecretReplicationUserManagedReplicaArrayOutput {
	return o
}

func (o GetSecretReplicationUserManagedReplicaArrayOutput) Index(i pulumi.IntInput) GetSecretReplicationUserManagedReplicaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecretReplicationUserManagedReplica {
		return vs[0].([]GetSecretReplicationUserManagedReplica)[vs[1].(int)]
	}).(GetSecretReplicationUserManagedReplicaOutput)
}

type GetSecretReplicationUserManagedReplicaCustomerManagedEncryption struct {
	KmsKeyName string `pulumi:"kmsKeyName"`
}

// GetSecretReplicationUserManagedReplicaCustomerManagedEncryptionInput is an input type that accepts GetSecretReplicationUserManagedReplicaCustomerManagedEncryptionArgs and GetSecretReplicationUserManagedReplicaCustomerManagedEncryptionOutput values.
// You can construct a concrete instance of `GetSecretReplicationUserManagedReplicaCustomerManagedEncryptionInput` via:
//
//          GetSecretReplicationUserManagedReplicaCustomerManagedEncryptionArgs{...}
type GetSecretReplicationUserManagedReplicaCustomerManagedEncryptionInput interface {
	pulumi.Input

	ToGetSecretReplicationUserManagedReplicaCustomerManagedEncryptionOutput() GetSecretReplicationUserManagedReplicaCustomerManagedEncryptionOutput
	ToGetSecretReplicationUserManagedReplicaCustomerManagedEncryptionOutputWithContext(context.Context) GetSecretReplicationUserManagedReplicaCustomerManagedEncryptionOutput
}

type GetSecretReplicationUserManagedReplicaCustomerManagedEncryptionArgs struct {
	KmsKeyName pulumi.StringInput `pulumi:"kmsKeyName"`
}

func (GetSecretReplicationUserManagedReplicaCustomerManagedEncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretReplicationUserManagedReplicaCustomerManagedEncryption)(nil)).Elem()
}

func (i GetSecretReplicationUserManagedReplicaCustomerManagedEncryptionArgs) ToGetSecretReplicationUserManagedReplicaCustomerManagedEncryptionOutput() GetSecretReplicationUserManagedReplicaCustomerManagedEncryptionOutput {
	return i.ToGetSecretReplicationUserManagedReplicaCustomerManagedEncryptionOutputWithContext(context.Background())
}

func (i GetSecretReplicationUserManagedReplicaCustomerManagedEncryptionArgs) ToGetSecretReplicationUserManagedReplicaCustomerManagedEncryptionOutputWithContext(ctx context.Context) GetSecretReplicationUserManagedReplicaCustomerManagedEncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretReplicationUserManagedReplicaCustomerManagedEncryptionOutput)
}

// GetSecretReplicationUserManagedReplicaCustomerManagedEncryptionArrayInput is an input type that accepts GetSecretReplicationUserManagedReplicaCustomerManagedEncryptionArray and GetSecretReplicationUserManagedReplicaCustomerManagedEncryptionArrayOutput values.
// You can construct a concrete instance of `GetSecretReplicationUserManagedReplicaCustomerManagedEncryptionArrayInput` via:
//
//          GetSecretReplicationUserManagedReplicaCustomerManagedEncryptionArray{ GetSecretReplicationUserManagedReplicaCustomerManagedEncryptionArgs{...} }
type GetSecretReplicationUserManagedReplicaCustomerManagedEncryptionArrayInput interface {
	pulumi.Input

	ToGetSecretReplicationUserManagedReplicaCustomerManagedEncryptionArrayOutput() GetSecretReplicationUserManagedReplicaCustomerManagedEncryptionArrayOutput
	ToGetSecretReplicationUserManagedReplicaCustomerManagedEncryptionArrayOutputWithContext(context.Context) GetSecretReplicationUserManagedReplicaCustomerManagedEncryptionArrayOutput
}

type GetSecretReplicationUserManagedReplicaCustomerManagedEncryptionArray []GetSecretReplicationUserManagedReplicaCustomerManagedEncryptionInput

func (GetSecretReplicationUserManagedReplicaCustomerManagedEncryptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretReplicationUserManagedReplicaCustomerManagedEncryption)(nil)).Elem()
}

func (i GetSecretReplicationUserManagedReplicaCustomerManagedEncryptionArray) ToGetSecretReplicationUserManagedReplicaCustomerManagedEncryptionArrayOutput() GetSecretReplicationUserManagedReplicaCustomerManagedEncryptionArrayOutput {
	return i.ToGetSecretReplicationUserManagedReplicaCustomerManagedEncryptionArrayOutputWithContext(context.Background())
}

func (i GetSecretReplicationUserManagedReplicaCustomerManagedEncryptionArray) ToGetSecretReplicationUserManagedReplicaCustomerManagedEncryptionArrayOutputWithContext(ctx context.Context) GetSecretReplicationUserManagedReplicaCustomerManagedEncryptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretReplicationUserManagedReplicaCustomerManagedEncryptionArrayOutput)
}

type GetSecretReplicationUserManagedReplicaCustomerManagedEncryptionOutput struct{ *pulumi.OutputState }

func (GetSecretReplicationUserManagedReplicaCustomerManagedEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretReplicationUserManagedReplicaCustomerManagedEncryption)(nil)).Elem()
}

func (o GetSecretReplicationUserManagedReplicaCustomerManagedEncryptionOutput) ToGetSecretReplicationUserManagedReplicaCustomerManagedEncryptionOutput() GetSecretReplicationUserManagedReplicaCustomerManagedEncryptionOutput {
	return o
}

func (o GetSecretReplicationUserManagedReplicaCustomerManagedEncryptionOutput) ToGetSecretReplicationUserManagedReplicaCustomerManagedEncryptionOutputWithContext(ctx context.Context) GetSecretReplicationUserManagedReplicaCustomerManagedEncryptionOutput {
	return o
}

func (o GetSecretReplicationUserManagedReplicaCustomerManagedEncryptionOutput) KmsKeyName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretReplicationUserManagedReplicaCustomerManagedEncryption) string { return v.KmsKeyName }).(pulumi.StringOutput)
}

type GetSecretReplicationUserManagedReplicaCustomerManagedEncryptionArrayOutput struct{ *pulumi.OutputState }

func (GetSecretReplicationUserManagedReplicaCustomerManagedEncryptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretReplicationUserManagedReplicaCustomerManagedEncryption)(nil)).Elem()
}

func (o GetSecretReplicationUserManagedReplicaCustomerManagedEncryptionArrayOutput) ToGetSecretReplicationUserManagedReplicaCustomerManagedEncryptionArrayOutput() GetSecretReplicationUserManagedReplicaCustomerManagedEncryptionArrayOutput {
	return o
}

func (o GetSecretReplicationUserManagedReplicaCustomerManagedEncryptionArrayOutput) ToGetSecretReplicationUserManagedReplicaCustomerManagedEncryptionArrayOutputWithContext(ctx context.Context) GetSecretReplicationUserManagedReplicaCustomerManagedEncryptionArrayOutput {
	return o
}

func (o GetSecretReplicationUserManagedReplicaCustomerManagedEncryptionArrayOutput) Index(i pulumi.IntInput) GetSecretReplicationUserManagedReplicaCustomerManagedEncryptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecretReplicationUserManagedReplicaCustomerManagedEncryption {
		return vs[0].([]GetSecretReplicationUserManagedReplicaCustomerManagedEncryption)[vs[1].(int)]
	}).(GetSecretReplicationUserManagedReplicaCustomerManagedEncryptionOutput)
}

type GetSecretRotation struct {
	NextRotationTime string `pulumi:"nextRotationTime"`
	RotationPeriod   string `pulumi:"rotationPeriod"`
}

// GetSecretRotationInput is an input type that accepts GetSecretRotationArgs and GetSecretRotationOutput values.
// You can construct a concrete instance of `GetSecretRotationInput` via:
//
//          GetSecretRotationArgs{...}
type GetSecretRotationInput interface {
	pulumi.Input

	ToGetSecretRotationOutput() GetSecretRotationOutput
	ToGetSecretRotationOutputWithContext(context.Context) GetSecretRotationOutput
}

type GetSecretRotationArgs struct {
	NextRotationTime pulumi.StringInput `pulumi:"nextRotationTime"`
	RotationPeriod   pulumi.StringInput `pulumi:"rotationPeriod"`
}

func (GetSecretRotationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretRotation)(nil)).Elem()
}

func (i GetSecretRotationArgs) ToGetSecretRotationOutput() GetSecretRotationOutput {
	return i.ToGetSecretRotationOutputWithContext(context.Background())
}

func (i GetSecretRotationArgs) ToGetSecretRotationOutputWithContext(ctx context.Context) GetSecretRotationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretRotationOutput)
}

// GetSecretRotationArrayInput is an input type that accepts GetSecretRotationArray and GetSecretRotationArrayOutput values.
// You can construct a concrete instance of `GetSecretRotationArrayInput` via:
//
//          GetSecretRotationArray{ GetSecretRotationArgs{...} }
type GetSecretRotationArrayInput interface {
	pulumi.Input

	ToGetSecretRotationArrayOutput() GetSecretRotationArrayOutput
	ToGetSecretRotationArrayOutputWithContext(context.Context) GetSecretRotationArrayOutput
}

type GetSecretRotationArray []GetSecretRotationInput

func (GetSecretRotationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretRotation)(nil)).Elem()
}

func (i GetSecretRotationArray) ToGetSecretRotationArrayOutput() GetSecretRotationArrayOutput {
	return i.ToGetSecretRotationArrayOutputWithContext(context.Background())
}

func (i GetSecretRotationArray) ToGetSecretRotationArrayOutputWithContext(ctx context.Context) GetSecretRotationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretRotationArrayOutput)
}

type GetSecretRotationOutput struct{ *pulumi.OutputState }

func (GetSecretRotationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretRotation)(nil)).Elem()
}

func (o GetSecretRotationOutput) ToGetSecretRotationOutput() GetSecretRotationOutput {
	return o
}

func (o GetSecretRotationOutput) ToGetSecretRotationOutputWithContext(ctx context.Context) GetSecretRotationOutput {
	return o
}

func (o GetSecretRotationOutput) NextRotationTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretRotation) string { return v.NextRotationTime }).(pulumi.StringOutput)
}

func (o GetSecretRotationOutput) RotationPeriod() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretRotation) string { return v.RotationPeriod }).(pulumi.StringOutput)
}

type GetSecretRotationArrayOutput struct{ *pulumi.OutputState }

func (GetSecretRotationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretRotation)(nil)).Elem()
}

func (o GetSecretRotationArrayOutput) ToGetSecretRotationArrayOutput() GetSecretRotationArrayOutput {
	return o
}

func (o GetSecretRotationArrayOutput) ToGetSecretRotationArrayOutputWithContext(ctx context.Context) GetSecretRotationArrayOutput {
	return o
}

func (o GetSecretRotationArrayOutput) Index(i pulumi.IntInput) GetSecretRotationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecretRotation {
		return vs[0].([]GetSecretRotation)[vs[1].(int)]
	}).(GetSecretRotationOutput)
}

type GetSecretTopic struct {
	Name string `pulumi:"name"`
}

// GetSecretTopicInput is an input type that accepts GetSecretTopicArgs and GetSecretTopicOutput values.
// You can construct a concrete instance of `GetSecretTopicInput` via:
//
//          GetSecretTopicArgs{...}
type GetSecretTopicInput interface {
	pulumi.Input

	ToGetSecretTopicOutput() GetSecretTopicOutput
	ToGetSecretTopicOutputWithContext(context.Context) GetSecretTopicOutput
}

type GetSecretTopicArgs struct {
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetSecretTopicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretTopic)(nil)).Elem()
}

func (i GetSecretTopicArgs) ToGetSecretTopicOutput() GetSecretTopicOutput {
	return i.ToGetSecretTopicOutputWithContext(context.Background())
}

func (i GetSecretTopicArgs) ToGetSecretTopicOutputWithContext(ctx context.Context) GetSecretTopicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretTopicOutput)
}

// GetSecretTopicArrayInput is an input type that accepts GetSecretTopicArray and GetSecretTopicArrayOutput values.
// You can construct a concrete instance of `GetSecretTopicArrayInput` via:
//
//          GetSecretTopicArray{ GetSecretTopicArgs{...} }
type GetSecretTopicArrayInput interface {
	pulumi.Input

	ToGetSecretTopicArrayOutput() GetSecretTopicArrayOutput
	ToGetSecretTopicArrayOutputWithContext(context.Context) GetSecretTopicArrayOutput
}

type GetSecretTopicArray []GetSecretTopicInput

func (GetSecretTopicArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretTopic)(nil)).Elem()
}

func (i GetSecretTopicArray) ToGetSecretTopicArrayOutput() GetSecretTopicArrayOutput {
	return i.ToGetSecretTopicArrayOutputWithContext(context.Background())
}

func (i GetSecretTopicArray) ToGetSecretTopicArrayOutputWithContext(ctx context.Context) GetSecretTopicArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretTopicArrayOutput)
}

type GetSecretTopicOutput struct{ *pulumi.OutputState }

func (GetSecretTopicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretTopic)(nil)).Elem()
}

func (o GetSecretTopicOutput) ToGetSecretTopicOutput() GetSecretTopicOutput {
	return o
}

func (o GetSecretTopicOutput) ToGetSecretTopicOutputWithContext(ctx context.Context) GetSecretTopicOutput {
	return o
}

func (o GetSecretTopicOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretTopic) string { return v.Name }).(pulumi.StringOutput)
}

type GetSecretTopicArrayOutput struct{ *pulumi.OutputState }

func (GetSecretTopicArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretTopic)(nil)).Elem()
}

func (o GetSecretTopicArrayOutput) ToGetSecretTopicArrayOutput() GetSecretTopicArrayOutput {
	return o
}

func (o GetSecretTopicArrayOutput) ToGetSecretTopicArrayOutputWithContext(ctx context.Context) GetSecretTopicArrayOutput {
	return o
}

func (o GetSecretTopicArrayOutput) Index(i pulumi.IntInput) GetSecretTopicOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecretTopic {
		return vs[0].([]GetSecretTopic)[vs[1].(int)]
	}).(GetSecretTopicOutput)
}

func init() {
	pulumi.RegisterOutputType(SecretIamBindingConditionOutput{})
	pulumi.RegisterOutputType(SecretIamBindingConditionPtrOutput{})
	pulumi.RegisterOutputType(SecretIamMemberConditionOutput{})
	pulumi.RegisterOutputType(SecretIamMemberConditionPtrOutput{})
	pulumi.RegisterOutputType(SecretReplicationOutput{})
	pulumi.RegisterOutputType(SecretReplicationPtrOutput{})
	pulumi.RegisterOutputType(SecretReplicationUserManagedOutput{})
	pulumi.RegisterOutputType(SecretReplicationUserManagedPtrOutput{})
	pulumi.RegisterOutputType(SecretReplicationUserManagedReplicaOutput{})
	pulumi.RegisterOutputType(SecretReplicationUserManagedReplicaArrayOutput{})
	pulumi.RegisterOutputType(SecretReplicationUserManagedReplicaCustomerManagedEncryptionOutput{})
	pulumi.RegisterOutputType(SecretReplicationUserManagedReplicaCustomerManagedEncryptionPtrOutput{})
	pulumi.RegisterOutputType(SecretRotationOutput{})
	pulumi.RegisterOutputType(SecretRotationPtrOutput{})
	pulumi.RegisterOutputType(SecretTopicOutput{})
	pulumi.RegisterOutputType(SecretTopicArrayOutput{})
	pulumi.RegisterOutputType(GetSecretReplicationOutput{})
	pulumi.RegisterOutputType(GetSecretReplicationArrayOutput{})
	pulumi.RegisterOutputType(GetSecretReplicationUserManagedOutput{})
	pulumi.RegisterOutputType(GetSecretReplicationUserManagedArrayOutput{})
	pulumi.RegisterOutputType(GetSecretReplicationUserManagedReplicaOutput{})
	pulumi.RegisterOutputType(GetSecretReplicationUserManagedReplicaArrayOutput{})
	pulumi.RegisterOutputType(GetSecretReplicationUserManagedReplicaCustomerManagedEncryptionOutput{})
	pulumi.RegisterOutputType(GetSecretReplicationUserManagedReplicaCustomerManagedEncryptionArrayOutput{})
	pulumi.RegisterOutputType(GetSecretRotationOutput{})
	pulumi.RegisterOutputType(GetSecretRotationArrayOutput{})
	pulumi.RegisterOutputType(GetSecretTopicOutput{})
	pulumi.RegisterOutputType(GetSecretTopicArrayOutput{})
}
