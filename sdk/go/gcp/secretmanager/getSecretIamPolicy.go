// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package secretmanager

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Retrieves the current IAM policy data for secret
//
// ## example
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/secretmanager"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := secretmanager.LookupSecretIamPolicy(ctx, &secretmanager.LookupSecretIamPolicyArgs{
//				Project:  pulumi.StringRef(google_secret_manager_secret.SecretBasic.Project),
//				SecretId: google_secret_manager_secret.SecretBasic.Secret_id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupSecretIamPolicy(ctx *pulumi.Context, args *LookupSecretIamPolicyArgs, opts ...pulumi.InvokeOption) (*LookupSecretIamPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSecretIamPolicyResult
	err := ctx.Invoke("gcp:secretmanager/getSecretIamPolicy:getSecretIamPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSecretIamPolicy.
type LookupSecretIamPolicyArgs struct {
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project  *string `pulumi:"project"`
	SecretId string  `pulumi:"secretId"`
}

// A collection of values returned by getSecretIamPolicy.
type LookupSecretIamPolicyResult struct {
	// (Computed) The etag of the IAM policy.
	Etag string `pulumi:"etag"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// (Required only by `secretmanager.SecretIamPolicy`) The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData string `pulumi:"policyData"`
	Project    string `pulumi:"project"`
	SecretId   string `pulumi:"secretId"`
}

func LookupSecretIamPolicyOutput(ctx *pulumi.Context, args LookupSecretIamPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupSecretIamPolicyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSecretIamPolicyResult, error) {
			args := v.(LookupSecretIamPolicyArgs)
			r, err := LookupSecretIamPolicy(ctx, &args, opts...)
			var s LookupSecretIamPolicyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupSecretIamPolicyResultOutput)
}

// A collection of arguments for invoking getSecretIamPolicy.
type LookupSecretIamPolicyOutputArgs struct {
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project  pulumi.StringPtrInput `pulumi:"project"`
	SecretId pulumi.StringInput    `pulumi:"secretId"`
}

func (LookupSecretIamPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSecretIamPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getSecretIamPolicy.
type LookupSecretIamPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupSecretIamPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSecretIamPolicyResult)(nil)).Elem()
}

func (o LookupSecretIamPolicyResultOutput) ToLookupSecretIamPolicyResultOutput() LookupSecretIamPolicyResultOutput {
	return o
}

func (o LookupSecretIamPolicyResultOutput) ToLookupSecretIamPolicyResultOutputWithContext(ctx context.Context) LookupSecretIamPolicyResultOutput {
	return o
}

func (o LookupSecretIamPolicyResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupSecretIamPolicyResult] {
	return pulumix.Output[LookupSecretIamPolicyResult]{
		OutputState: o.OutputState,
	}
}

// (Computed) The etag of the IAM policy.
func (o LookupSecretIamPolicyResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecretIamPolicyResult) string { return v.Etag }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupSecretIamPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecretIamPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

// (Required only by `secretmanager.SecretIamPolicy`) The policy data generated by
// a `organizations.getIAMPolicy` data source.
func (o LookupSecretIamPolicyResultOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecretIamPolicyResult) string { return v.PolicyData }).(pulumi.StringOutput)
}

func (o LookupSecretIamPolicyResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecretIamPolicyResult) string { return v.Project }).(pulumi.StringOutput)
}

func (o LookupSecretIamPolicyResultOutput) SecretId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecretIamPolicyResult) string { return v.SecretId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSecretIamPolicyResultOutput{})
}
