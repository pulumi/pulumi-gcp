// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package secretmanager

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get information about a Secret Manager Secret
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-gcp/sdk/v5/go/gcp/secretmanager"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := secretmanager.LookupSecret(ctx, &secretmanager.LookupSecretArgs{
// 			SecretId: "foobar",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupSecret(ctx *pulumi.Context, args *LookupSecretArgs, opts ...pulumi.InvokeOption) (*LookupSecretResult, error) {
	var rv LookupSecretResult
	err := ctx.Invoke("gcp:secretmanager/getSecret:getSecret", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSecret.
type LookupSecretArgs struct {
	// The ID of the project in which the resource belongs.
	Project *string `pulumi:"project"`
	// The name of the secret.
	SecretId string `pulumi:"secretId"`
}

// A collection of values returned by getSecret.
type LookupSecretResult struct {
	CreateTime string `pulumi:"createTime"`
	ExpireTime string `pulumi:"expireTime"`
	// The provider-assigned unique ID for this managed resource.
	Id           string                 `pulumi:"id"`
	Labels       map[string]string      `pulumi:"labels"`
	Name         string                 `pulumi:"name"`
	Project      *string                `pulumi:"project"`
	Replications []GetSecretReplication `pulumi:"replications"`
	Rotations    []GetSecretRotation    `pulumi:"rotations"`
	SecretId     string                 `pulumi:"secretId"`
	Topics       []GetSecretTopic       `pulumi:"topics"`
	Ttl          string                 `pulumi:"ttl"`
}
