// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package spanner

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Retrieves the current IAM policy data for a Spanner database.
func GetDatabaseIamPolicy(ctx *pulumi.Context, args *GetDatabaseIamPolicyArgs, opts ...pulumi.InvokeOption) (*GetDatabaseIamPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDatabaseIamPolicyResult
	err := ctx.Invoke("gcp:spanner/getDatabaseIamPolicy:getDatabaseIamPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDatabaseIamPolicy.
type GetDatabaseIamPolicyArgs struct {
	// The name of the Spanner database.
	Database string `pulumi:"database"`
	// The name of the Spanner instance the database belongs to.
	Instance string `pulumi:"instance"`
	// The ID of the project in which the resource belongs. If it
	// is not provided, the provider project is used.
	Project *string `pulumi:"project"`
}

// A collection of values returned by getDatabaseIamPolicy.
type GetDatabaseIamPolicyResult struct {
	Database string `pulumi:"database"`
	// (Computed) The etag of the IAM policy.
	Etag string `pulumi:"etag"`
	// The provider-assigned unique ID for this managed resource.
	Id       string `pulumi:"id"`
	Instance string `pulumi:"instance"`
	// (Computed) The policy data
	PolicyData string `pulumi:"policyData"`
	Project    string `pulumi:"project"`
}

func GetDatabaseIamPolicyOutput(ctx *pulumi.Context, args GetDatabaseIamPolicyOutputArgs, opts ...pulumi.InvokeOption) GetDatabaseIamPolicyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetDatabaseIamPolicyResult, error) {
			args := v.(GetDatabaseIamPolicyArgs)
			r, err := GetDatabaseIamPolicy(ctx, &args, opts...)
			var s GetDatabaseIamPolicyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetDatabaseIamPolicyResultOutput)
}

// A collection of arguments for invoking getDatabaseIamPolicy.
type GetDatabaseIamPolicyOutputArgs struct {
	// The name of the Spanner database.
	Database pulumi.StringInput `pulumi:"database"`
	// The name of the Spanner instance the database belongs to.
	Instance pulumi.StringInput `pulumi:"instance"`
	// The ID of the project in which the resource belongs. If it
	// is not provided, the provider project is used.
	Project pulumi.StringPtrInput `pulumi:"project"`
}

func (GetDatabaseIamPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseIamPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getDatabaseIamPolicy.
type GetDatabaseIamPolicyResultOutput struct{ *pulumi.OutputState }

func (GetDatabaseIamPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseIamPolicyResult)(nil)).Elem()
}

func (o GetDatabaseIamPolicyResultOutput) ToGetDatabaseIamPolicyResultOutput() GetDatabaseIamPolicyResultOutput {
	return o
}

func (o GetDatabaseIamPolicyResultOutput) ToGetDatabaseIamPolicyResultOutputWithContext(ctx context.Context) GetDatabaseIamPolicyResultOutput {
	return o
}

func (o GetDatabaseIamPolicyResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetDatabaseIamPolicyResult] {
	return pulumix.Output[GetDatabaseIamPolicyResult]{
		OutputState: o.OutputState,
	}
}

func (o GetDatabaseIamPolicyResultOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseIamPolicyResult) string { return v.Database }).(pulumi.StringOutput)
}

// (Computed) The etag of the IAM policy.
func (o GetDatabaseIamPolicyResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseIamPolicyResult) string { return v.Etag }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetDatabaseIamPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseIamPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetDatabaseIamPolicyResultOutput) Instance() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseIamPolicyResult) string { return v.Instance }).(pulumi.StringOutput)
}

// (Computed) The policy data
func (o GetDatabaseIamPolicyResultOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseIamPolicyResult) string { return v.PolicyData }).(pulumi.StringOutput)
}

func (o GetDatabaseIamPolicyResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseIamPolicyResult) string { return v.Project }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDatabaseIamPolicyResultOutput{})
}
