// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dataplex

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Retrieves the current IAM policy data for lake
//
// ## example
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/dataplex"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := dataplex.LookupLakeIamPolicy(ctx, &dataplex.LookupLakeIamPolicyArgs{
//				Project:  pulumi.StringRef(google_dataplex_lake.Example.Project),
//				Location: pulumi.StringRef(google_dataplex_lake.Example.Location),
//				Lake:     google_dataplex_lake.Example.Name,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupLakeIamPolicy(ctx *pulumi.Context, args *LookupLakeIamPolicyArgs, opts ...pulumi.InvokeOption) (*LookupLakeIamPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupLakeIamPolicyResult
	err := ctx.Invoke("gcp:dataplex/getLakeIamPolicy:getLakeIamPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getLakeIamPolicy.
type LookupLakeIamPolicyArgs struct {
	// Used to find the parent resource to bind the IAM policy to
	Lake     string  `pulumi:"lake"`
	Location *string `pulumi:"location"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project *string `pulumi:"project"`
}

// A collection of values returned by getLakeIamPolicy.
type LookupLakeIamPolicyResult struct {
	// (Computed) The etag of the IAM policy.
	Etag string `pulumi:"etag"`
	// The provider-assigned unique ID for this managed resource.
	Id       string `pulumi:"id"`
	Lake     string `pulumi:"lake"`
	Location string `pulumi:"location"`
	// (Required only by `dataplex.LakeIamPolicy`) The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData string `pulumi:"policyData"`
	Project    string `pulumi:"project"`
}

func LookupLakeIamPolicyOutput(ctx *pulumi.Context, args LookupLakeIamPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupLakeIamPolicyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupLakeIamPolicyResult, error) {
			args := v.(LookupLakeIamPolicyArgs)
			r, err := LookupLakeIamPolicy(ctx, &args, opts...)
			var s LookupLakeIamPolicyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupLakeIamPolicyResultOutput)
}

// A collection of arguments for invoking getLakeIamPolicy.
type LookupLakeIamPolicyOutputArgs struct {
	// Used to find the parent resource to bind the IAM policy to
	Lake     pulumi.StringInput    `pulumi:"lake"`
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupLakeIamPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLakeIamPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getLakeIamPolicy.
type LookupLakeIamPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupLakeIamPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLakeIamPolicyResult)(nil)).Elem()
}

func (o LookupLakeIamPolicyResultOutput) ToLookupLakeIamPolicyResultOutput() LookupLakeIamPolicyResultOutput {
	return o
}

func (o LookupLakeIamPolicyResultOutput) ToLookupLakeIamPolicyResultOutputWithContext(ctx context.Context) LookupLakeIamPolicyResultOutput {
	return o
}

func (o LookupLakeIamPolicyResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupLakeIamPolicyResult] {
	return pulumix.Output[LookupLakeIamPolicyResult]{
		OutputState: o.OutputState,
	}
}

// (Computed) The etag of the IAM policy.
func (o LookupLakeIamPolicyResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLakeIamPolicyResult) string { return v.Etag }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupLakeIamPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLakeIamPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupLakeIamPolicyResultOutput) Lake() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLakeIamPolicyResult) string { return v.Lake }).(pulumi.StringOutput)
}

func (o LookupLakeIamPolicyResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLakeIamPolicyResult) string { return v.Location }).(pulumi.StringOutput)
}

// (Required only by `dataplex.LakeIamPolicy`) The policy data generated by
// a `organizations.getIAMPolicy` data source.
func (o LookupLakeIamPolicyResultOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLakeIamPolicyResult) string { return v.PolicyData }).(pulumi.StringOutput)
}

func (o LookupLakeIamPolicyResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLakeIamPolicyResult) string { return v.Project }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupLakeIamPolicyResultOutput{})
}
