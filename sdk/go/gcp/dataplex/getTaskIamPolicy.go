// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dataplex

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves the current IAM policy data for task
//
// ## example
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/dataplex"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := dataplex.LookupTaskIamPolicy(ctx, &dataplex.LookupTaskIamPolicyArgs{
//				Project:  pulumi.StringRef(google_dataplex_task.Example.Project),
//				Location: pulumi.StringRef(google_dataplex_task.Example.Location),
//				Lake:     google_dataplex_task.Example.Lake,
//				TaskId:   google_dataplex_task.Example.Task_id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupTaskIamPolicy(ctx *pulumi.Context, args *LookupTaskIamPolicyArgs, opts ...pulumi.InvokeOption) (*LookupTaskIamPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupTaskIamPolicyResult
	err := ctx.Invoke("gcp:dataplex/getTaskIamPolicy:getTaskIamPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTaskIamPolicy.
type LookupTaskIamPolicyArgs struct {
	// The lake in which the task will be created in.
	// Used to find the parent resource to bind the IAM policy to
	Lake string `pulumi:"lake"`
	// The location in which the task will be created in.
	// Used to find the parent resource to bind the IAM policy to
	Location *string `pulumi:"location"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project *string `pulumi:"project"`
	TaskId  string  `pulumi:"taskId"`
}

// A collection of values returned by getTaskIamPolicy.
type LookupTaskIamPolicyResult struct {
	// (Computed) The etag of the IAM policy.
	Etag string `pulumi:"etag"`
	// The provider-assigned unique ID for this managed resource.
	Id       string `pulumi:"id"`
	Lake     string `pulumi:"lake"`
	Location string `pulumi:"location"`
	// (Required only by `dataplex.TaskIamPolicy`) The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData string `pulumi:"policyData"`
	Project    string `pulumi:"project"`
	TaskId     string `pulumi:"taskId"`
}

func LookupTaskIamPolicyOutput(ctx *pulumi.Context, args LookupTaskIamPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupTaskIamPolicyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupTaskIamPolicyResult, error) {
			args := v.(LookupTaskIamPolicyArgs)
			r, err := LookupTaskIamPolicy(ctx, &args, opts...)
			var s LookupTaskIamPolicyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupTaskIamPolicyResultOutput)
}

// A collection of arguments for invoking getTaskIamPolicy.
type LookupTaskIamPolicyOutputArgs struct {
	// The lake in which the task will be created in.
	// Used to find the parent resource to bind the IAM policy to
	Lake pulumi.StringInput `pulumi:"lake"`
	// The location in which the task will be created in.
	// Used to find the parent resource to bind the IAM policy to
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringPtrInput `pulumi:"project"`
	TaskId  pulumi.StringInput    `pulumi:"taskId"`
}

func (LookupTaskIamPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTaskIamPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getTaskIamPolicy.
type LookupTaskIamPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupTaskIamPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTaskIamPolicyResult)(nil)).Elem()
}

func (o LookupTaskIamPolicyResultOutput) ToLookupTaskIamPolicyResultOutput() LookupTaskIamPolicyResultOutput {
	return o
}

func (o LookupTaskIamPolicyResultOutput) ToLookupTaskIamPolicyResultOutputWithContext(ctx context.Context) LookupTaskIamPolicyResultOutput {
	return o
}

// (Computed) The etag of the IAM policy.
func (o LookupTaskIamPolicyResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTaskIamPolicyResult) string { return v.Etag }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupTaskIamPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTaskIamPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupTaskIamPolicyResultOutput) Lake() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTaskIamPolicyResult) string { return v.Lake }).(pulumi.StringOutput)
}

func (o LookupTaskIamPolicyResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTaskIamPolicyResult) string { return v.Location }).(pulumi.StringOutput)
}

// (Required only by `dataplex.TaskIamPolicy`) The policy data generated by
// a `organizations.getIAMPolicy` data source.
func (o LookupTaskIamPolicyResultOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTaskIamPolicyResult) string { return v.PolicyData }).(pulumi.StringOutput)
}

func (o LookupTaskIamPolicyResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTaskIamPolicyResult) string { return v.Project }).(pulumi.StringOutput)
}

func (o LookupTaskIamPolicyResultOutput) TaskId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTaskIamPolicyResult) string { return v.TaskId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupTaskIamPolicyResultOutput{})
}
