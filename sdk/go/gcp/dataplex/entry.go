// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dataplex

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// An entry represents a data asset for which you capture metadata, such as a BigQuery table.
// The primary constituents of an entry are aspects, which provide thematically coherent information.
// Examples include a table's schema, sensitive data protection profile, data quality information, or a simple tag.
//
// **Important Considerations:**
//
//   - There is a limit of 99 aspects per entry.
//   - The entry resource has to use project numbers and not project IDs. Therefore, if
//     a dependency was already provisioned using project ID, it needs to be referenced explicitly as a resource name
//     containing the project number.
//
// To get more information about Entry, see:
//
// * [API documentation](https://cloud.google.com/dataplex/docs/reference/rest/v1/projects.locations.entryGroups.entries)
// * How-to Guides
//   - [Manage entries and ingest custom sources](https://cloud.google.com/dataplex/docs/ingest-custom-sources)
//
// ## Example Usage
//
// ### Dataplex Entry Basic
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/dataplex"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			entry_group_basic, err := dataplex.NewEntryGroup(ctx, "entry-group-basic", &dataplex.EntryGroupArgs{
//				EntryGroupId: pulumi.String("entry-group-basic"),
//				Project:      pulumi.String("1111111111111"),
//				Location:     pulumi.String("us-central1"),
//			})
//			if err != nil {
//				return err
//			}
//			entry_type_basic, err := dataplex.NewEntryType(ctx, "entry-type-basic", &dataplex.EntryTypeArgs{
//				EntryTypeId: pulumi.String("entry-type-basic"),
//				Project:     pulumi.String("1111111111111"),
//				Location:    pulumi.String("us-central1"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = dataplex.NewEntry(ctx, "test_basic", &dataplex.EntryArgs{
//				EntryGroupId: entry_group_basic.EntryGroupId,
//				Project:      pulumi.String("1111111111111"),
//				Location:     pulumi.String("us-central1"),
//				EntryId:      pulumi.String("entry-basic"),
//				EntryType:    entry_type_basic.Name,
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Dataplex Entry Full
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/dataplex"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			aspect_type_full_one, err := dataplex.NewAspectType(ctx, "aspect-type-full-one", &dataplex.AspectTypeArgs{
//				AspectTypeId: pulumi.String("aspect-type-full-one"),
//				Location:     pulumi.String("us-central1"),
//				Project:      pulumi.String("1111111111111"),
//				MetadataTemplate: pulumi.String(`{
//	  "name": "tf-test-template",
//	  "type": "record",
//	  "recordFields": [
//	    {
//	      "name": "type",
//	      "type": "enum",
//	      "annotations": {
//	        "displayName": "Type",
//	        "description": "Specifies the type of view represented by the entry."
//	      },
//	      "index": 1,
//	      "constraints": {
//	        "required": true
//	      },
//	      "enumValues": [
//	        {
//	          "name": "VIEW",
//	          "index": 1
//	        }
//	      ]
//	    }
//	  ]
//	}
//
// `),
//
//			})
//			if err != nil {
//				return err
//			}
//			aspect_type_full_two, err := dataplex.NewAspectType(ctx, "aspect-type-full-two", &dataplex.AspectTypeArgs{
//				AspectTypeId: pulumi.String("aspect-type-full-two"),
//				Location:     pulumi.String("us-central1"),
//				Project:      pulumi.String("1111111111111"),
//				MetadataTemplate: pulumi.String(`{
//	  "name": "tf-test-template",
//	  "type": "record",
//	  "recordFields": [
//	    {
//	      "name": "story",
//	      "type": "enum",
//	      "annotations": {
//	        "displayName": "Story",
//	        "description": "Specifies the story of an entry."
//	      },
//	      "index": 1,
//	      "constraints": {
//	        "required": true
//	      },
//	      "enumValues": [
//	        {
//	          "name": "SEQUENCE",
//	          "index": 1
//	        }
//	      ]
//	    }
//	  ]
//	}
//
// `),
//
//			})
//			if err != nil {
//				return err
//			}
//			entry_group_full, err := dataplex.NewEntryGroup(ctx, "entry-group-full", &dataplex.EntryGroupArgs{
//				EntryGroupId: pulumi.String("entry-group-full"),
//				Project:      pulumi.String("1111111111111"),
//				Location:     pulumi.String("us-central1"),
//			})
//			if err != nil {
//				return err
//			}
//			entry_type_full, err := dataplex.NewEntryType(ctx, "entry-type-full", &dataplex.EntryTypeArgs{
//				EntryTypeId: pulumi.String("entry-type-full"),
//				Project:     pulumi.String("1111111111111"),
//				Location:    pulumi.String("us-central1"),
//				RequiredAspects: dataplex.EntryTypeRequiredAspectArray{
//					&dataplex.EntryTypeRequiredAspectArgs{
//						Type: aspect_type_full_one.Name,
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = dataplex.NewEntry(ctx, "test_entry_full", &dataplex.EntryArgs{
//				EntryGroupId:       entry_group_full.EntryGroupId,
//				Project:            pulumi.String("1111111111111"),
//				Location:           pulumi.String("us-central1"),
//				EntryId:            pulumi.String("entry-full/has/slashes"),
//				EntryType:          entry_type_full.Name,
//				FullyQualifiedName: pulumi.String("bigquery:1111111111111.test-dataset"),
//				ParentEntry:        pulumi.String("projects/1111111111111/locations/us-central1/entryGroups/entry-group-full/entries/some-other-entry"),
//				EntrySource: &dataplex.EntryEntrySourceArgs{
//					Resource:    pulumi.String("bigquery:1111111111111.test-dataset"),
//					System:      pulumi.String("System III"),
//					Platform:    pulumi.String("BigQuery"),
//					DisplayName: pulumi.String("Human readable name"),
//					Description: pulumi.String("Description from source system"),
//					Labels: pulumi.StringMap{
//						"some-label": pulumi.String("some-value"),
//					},
//					Ancestors: dataplex.EntryEntrySourceAncestorArray{
//						&dataplex.EntryEntrySourceAncestorArgs{
//							Name: pulumi.String("ancestor-one"),
//							Type: pulumi.String("type-one"),
//						},
//						&dataplex.EntryEntrySourceAncestorArgs{
//							Name: pulumi.String("ancestor-two"),
//							Type: pulumi.String("type-two"),
//						},
//					},
//					CreateTime: pulumi.String("2023-08-03T19:19:00.094Z"),
//					UpdateTime: pulumi.String("2023-08-03T20:19:00.094Z"),
//				},
//				Aspects: dataplex.EntryAspectArray{
//					&dataplex.EntryAspectArgs{
//						AspectKey: pulumi.String("1111111111111.us-central1.aspect-type-full-one"),
//						Aspect: &dataplex.EntryAspectAspectArgs{
//							Data: pulumi.String("          {\"type\": \"VIEW\"    }\n"),
//						},
//					},
//					&dataplex.EntryAspectArgs{
//						AspectKey: pulumi.String("1111111111111.us-central1.aspect-type-full-two"),
//						Aspect: &dataplex.EntryAspectAspectArgs{
//							Data: pulumi.String("          {\"story\": \"SEQUENCE\"    }\n"),
//						},
//					},
//				},
//			}, pulumi.DependsOn([]pulumi.Resource{
//				aspect_type_full_two,
//				aspect_type_full_one,
//			}))
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Entry can be imported using any of these accepted formats:
//
// * `projects/{{project}}/locations/{{location}}/entryGroups/{{entry_group_id}}/entries/{{entry_id}}`
//
// * `{{project}}/{{location}}/{{entry_group_id}}/{{entry_id}}`
//
// * `{{location}}/{{entry_group_id}}/{{entry_id}}`
//
// When using the `pulumi import` command, Entry can be imported using one of the formats above. For example:
//
// ```sh
// $ pulumi import gcp:dataplex/entry:Entry default projects/{{project}}/locations/{{location}}/entryGroups/{{entry_group_id}}/entries/{{entry_id}}
// ```
//
// ```sh
// $ pulumi import gcp:dataplex/entry:Entry default {{project}}/{{location}}/{{entry_group_id}}/{{entry_id}}
// ```
//
// ```sh
// $ pulumi import gcp:dataplex/entry:Entry default {{location}}/{{entry_group_id}}/{{entry_id}}
// ```
type Entry struct {
	pulumi.CustomResourceState

	// The aspects that are attached to the entry.
	// Structure is documented below.
	Aspects EntryAspectArrayOutput `pulumi:"aspects"`
	// The time when the Entry was created in Dataplex.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// The entry group id of the entry group the entry will be created in.
	EntryGroupId pulumi.StringPtrOutput `pulumi:"entryGroupId"`
	// The entry id of the entry.
	EntryId pulumi.StringPtrOutput `pulumi:"entryId"`
	// A nested object resource.
	// Structure is documented below.
	EntrySource EntryEntrySourceOutput `pulumi:"entrySource"`
	// The relative resource name of the entry type that was used to create this entry, in the format projects/{project_number}/locations/{locationId}/entryTypes/{entryTypeId}.
	EntryType pulumi.StringOutput `pulumi:"entryType"`
	// A name for the entry that can be referenced by an external system. For more information, see https://cloud.google.com/dataplex/docs/fully-qualified-names.
	// The maximum size of the field is 4000 characters.
	FullyQualifiedName pulumi.StringPtrOutput `pulumi:"fullyQualifiedName"`
	// The location where entry will be created.
	Location pulumi.StringPtrOutput `pulumi:"location"`
	// The relative resource name of the entry, in the format projects/{project_number}/locations/{locationId}/entryGroups/{entryGroupId}/entries/{entryId}.
	Name pulumi.StringOutput `pulumi:"name"`
	// The resource name of the parent entry, in the format projects/{project_number}/locations/{locationId}/entryGroups/{entryGroupId}/entries/{entryId}.
	ParentEntry pulumi.StringPtrOutput `pulumi:"parentEntry"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
	// The time when the entry was last updated in Dataplex.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewEntry registers a new resource with the given unique name, arguments, and options.
func NewEntry(ctx *pulumi.Context,
	name string, args *EntryArgs, opts ...pulumi.ResourceOption) (*Entry, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EntryType == nil {
		return nil, errors.New("invalid value for required argument 'EntryType'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Entry
	err := ctx.RegisterResource("gcp:dataplex/entry:Entry", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEntry gets an existing Entry resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEntry(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EntryState, opts ...pulumi.ResourceOption) (*Entry, error) {
	var resource Entry
	err := ctx.ReadResource("gcp:dataplex/entry:Entry", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Entry resources.
type entryState struct {
	// The aspects that are attached to the entry.
	// Structure is documented below.
	Aspects []EntryAspect `pulumi:"aspects"`
	// The time when the Entry was created in Dataplex.
	CreateTime *string `pulumi:"createTime"`
	// The entry group id of the entry group the entry will be created in.
	EntryGroupId *string `pulumi:"entryGroupId"`
	// The entry id of the entry.
	EntryId *string `pulumi:"entryId"`
	// A nested object resource.
	// Structure is documented below.
	EntrySource *EntryEntrySource `pulumi:"entrySource"`
	// The relative resource name of the entry type that was used to create this entry, in the format projects/{project_number}/locations/{locationId}/entryTypes/{entryTypeId}.
	EntryType *string `pulumi:"entryType"`
	// A name for the entry that can be referenced by an external system. For more information, see https://cloud.google.com/dataplex/docs/fully-qualified-names.
	// The maximum size of the field is 4000 characters.
	FullyQualifiedName *string `pulumi:"fullyQualifiedName"`
	// The location where entry will be created.
	Location *string `pulumi:"location"`
	// The relative resource name of the entry, in the format projects/{project_number}/locations/{locationId}/entryGroups/{entryGroupId}/entries/{entryId}.
	Name *string `pulumi:"name"`
	// The resource name of the parent entry, in the format projects/{project_number}/locations/{locationId}/entryGroups/{entryGroupId}/entries/{entryId}.
	ParentEntry *string `pulumi:"parentEntry"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// The time when the entry was last updated in Dataplex.
	UpdateTime *string `pulumi:"updateTime"`
}

type EntryState struct {
	// The aspects that are attached to the entry.
	// Structure is documented below.
	Aspects EntryAspectArrayInput
	// The time when the Entry was created in Dataplex.
	CreateTime pulumi.StringPtrInput
	// The entry group id of the entry group the entry will be created in.
	EntryGroupId pulumi.StringPtrInput
	// The entry id of the entry.
	EntryId pulumi.StringPtrInput
	// A nested object resource.
	// Structure is documented below.
	EntrySource EntryEntrySourcePtrInput
	// The relative resource name of the entry type that was used to create this entry, in the format projects/{project_number}/locations/{locationId}/entryTypes/{entryTypeId}.
	EntryType pulumi.StringPtrInput
	// A name for the entry that can be referenced by an external system. For more information, see https://cloud.google.com/dataplex/docs/fully-qualified-names.
	// The maximum size of the field is 4000 characters.
	FullyQualifiedName pulumi.StringPtrInput
	// The location where entry will be created.
	Location pulumi.StringPtrInput
	// The relative resource name of the entry, in the format projects/{project_number}/locations/{locationId}/entryGroups/{entryGroupId}/entries/{entryId}.
	Name pulumi.StringPtrInput
	// The resource name of the parent entry, in the format projects/{project_number}/locations/{locationId}/entryGroups/{entryGroupId}/entries/{entryId}.
	ParentEntry pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// The time when the entry was last updated in Dataplex.
	UpdateTime pulumi.StringPtrInput
}

func (EntryState) ElementType() reflect.Type {
	return reflect.TypeOf((*entryState)(nil)).Elem()
}

type entryArgs struct {
	// The aspects that are attached to the entry.
	// Structure is documented below.
	Aspects []EntryAspect `pulumi:"aspects"`
	// The entry group id of the entry group the entry will be created in.
	EntryGroupId *string `pulumi:"entryGroupId"`
	// The entry id of the entry.
	EntryId *string `pulumi:"entryId"`
	// A nested object resource.
	// Structure is documented below.
	EntrySource *EntryEntrySource `pulumi:"entrySource"`
	// The relative resource name of the entry type that was used to create this entry, in the format projects/{project_number}/locations/{locationId}/entryTypes/{entryTypeId}.
	EntryType string `pulumi:"entryType"`
	// A name for the entry that can be referenced by an external system. For more information, see https://cloud.google.com/dataplex/docs/fully-qualified-names.
	// The maximum size of the field is 4000 characters.
	FullyQualifiedName *string `pulumi:"fullyQualifiedName"`
	// The location where entry will be created.
	Location *string `pulumi:"location"`
	// The resource name of the parent entry, in the format projects/{project_number}/locations/{locationId}/entryGroups/{entryGroupId}/entries/{entryId}.
	ParentEntry *string `pulumi:"parentEntry"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
}

// The set of arguments for constructing a Entry resource.
type EntryArgs struct {
	// The aspects that are attached to the entry.
	// Structure is documented below.
	Aspects EntryAspectArrayInput
	// The entry group id of the entry group the entry will be created in.
	EntryGroupId pulumi.StringPtrInput
	// The entry id of the entry.
	EntryId pulumi.StringPtrInput
	// A nested object resource.
	// Structure is documented below.
	EntrySource EntryEntrySourcePtrInput
	// The relative resource name of the entry type that was used to create this entry, in the format projects/{project_number}/locations/{locationId}/entryTypes/{entryTypeId}.
	EntryType pulumi.StringInput
	// A name for the entry that can be referenced by an external system. For more information, see https://cloud.google.com/dataplex/docs/fully-qualified-names.
	// The maximum size of the field is 4000 characters.
	FullyQualifiedName pulumi.StringPtrInput
	// The location where entry will be created.
	Location pulumi.StringPtrInput
	// The resource name of the parent entry, in the format projects/{project_number}/locations/{locationId}/entryGroups/{entryGroupId}/entries/{entryId}.
	ParentEntry pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
}

func (EntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*entryArgs)(nil)).Elem()
}

type EntryInput interface {
	pulumi.Input

	ToEntryOutput() EntryOutput
	ToEntryOutputWithContext(ctx context.Context) EntryOutput
}

func (*Entry) ElementType() reflect.Type {
	return reflect.TypeOf((**Entry)(nil)).Elem()
}

func (i *Entry) ToEntryOutput() EntryOutput {
	return i.ToEntryOutputWithContext(context.Background())
}

func (i *Entry) ToEntryOutputWithContext(ctx context.Context) EntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntryOutput)
}

// EntryArrayInput is an input type that accepts EntryArray and EntryArrayOutput values.
// You can construct a concrete instance of `EntryArrayInput` via:
//
//	EntryArray{ EntryArgs{...} }
type EntryArrayInput interface {
	pulumi.Input

	ToEntryArrayOutput() EntryArrayOutput
	ToEntryArrayOutputWithContext(context.Context) EntryArrayOutput
}

type EntryArray []EntryInput

func (EntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Entry)(nil)).Elem()
}

func (i EntryArray) ToEntryArrayOutput() EntryArrayOutput {
	return i.ToEntryArrayOutputWithContext(context.Background())
}

func (i EntryArray) ToEntryArrayOutputWithContext(ctx context.Context) EntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntryArrayOutput)
}

// EntryMapInput is an input type that accepts EntryMap and EntryMapOutput values.
// You can construct a concrete instance of `EntryMapInput` via:
//
//	EntryMap{ "key": EntryArgs{...} }
type EntryMapInput interface {
	pulumi.Input

	ToEntryMapOutput() EntryMapOutput
	ToEntryMapOutputWithContext(context.Context) EntryMapOutput
}

type EntryMap map[string]EntryInput

func (EntryMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Entry)(nil)).Elem()
}

func (i EntryMap) ToEntryMapOutput() EntryMapOutput {
	return i.ToEntryMapOutputWithContext(context.Background())
}

func (i EntryMap) ToEntryMapOutputWithContext(ctx context.Context) EntryMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntryMapOutput)
}

type EntryOutput struct{ *pulumi.OutputState }

func (EntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Entry)(nil)).Elem()
}

func (o EntryOutput) ToEntryOutput() EntryOutput {
	return o
}

func (o EntryOutput) ToEntryOutputWithContext(ctx context.Context) EntryOutput {
	return o
}

// The aspects that are attached to the entry.
// Structure is documented below.
func (o EntryOutput) Aspects() EntryAspectArrayOutput {
	return o.ApplyT(func(v *Entry) EntryAspectArrayOutput { return v.Aspects }).(EntryAspectArrayOutput)
}

// The time when the Entry was created in Dataplex.
func (o EntryOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Entry) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// The entry group id of the entry group the entry will be created in.
func (o EntryOutput) EntryGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Entry) pulumi.StringPtrOutput { return v.EntryGroupId }).(pulumi.StringPtrOutput)
}

// The entry id of the entry.
func (o EntryOutput) EntryId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Entry) pulumi.StringPtrOutput { return v.EntryId }).(pulumi.StringPtrOutput)
}

// A nested object resource.
// Structure is documented below.
func (o EntryOutput) EntrySource() EntryEntrySourceOutput {
	return o.ApplyT(func(v *Entry) EntryEntrySourceOutput { return v.EntrySource }).(EntryEntrySourceOutput)
}

// The relative resource name of the entry type that was used to create this entry, in the format projects/{project_number}/locations/{locationId}/entryTypes/{entryTypeId}.
func (o EntryOutput) EntryType() pulumi.StringOutput {
	return o.ApplyT(func(v *Entry) pulumi.StringOutput { return v.EntryType }).(pulumi.StringOutput)
}

// A name for the entry that can be referenced by an external system. For more information, see https://cloud.google.com/dataplex/docs/fully-qualified-names.
// The maximum size of the field is 4000 characters.
func (o EntryOutput) FullyQualifiedName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Entry) pulumi.StringPtrOutput { return v.FullyQualifiedName }).(pulumi.StringPtrOutput)
}

// The location where entry will be created.
func (o EntryOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Entry) pulumi.StringPtrOutput { return v.Location }).(pulumi.StringPtrOutput)
}

// The relative resource name of the entry, in the format projects/{project_number}/locations/{locationId}/entryGroups/{entryGroupId}/entries/{entryId}.
func (o EntryOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Entry) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The resource name of the parent entry, in the format projects/{project_number}/locations/{locationId}/entryGroups/{entryGroupId}/entries/{entryId}.
func (o EntryOutput) ParentEntry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Entry) pulumi.StringPtrOutput { return v.ParentEntry }).(pulumi.StringPtrOutput)
}

// The ID of the project in which the resource belongs.
// If it is not provided, the provider project is used.
func (o EntryOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *Entry) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The time when the entry was last updated in Dataplex.
func (o EntryOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Entry) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

type EntryArrayOutput struct{ *pulumi.OutputState }

func (EntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Entry)(nil)).Elem()
}

func (o EntryArrayOutput) ToEntryArrayOutput() EntryArrayOutput {
	return o
}

func (o EntryArrayOutput) ToEntryArrayOutputWithContext(ctx context.Context) EntryArrayOutput {
	return o
}

func (o EntryArrayOutput) Index(i pulumi.IntInput) EntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Entry {
		return vs[0].([]*Entry)[vs[1].(int)]
	}).(EntryOutput)
}

type EntryMapOutput struct{ *pulumi.OutputState }

func (EntryMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Entry)(nil)).Elem()
}

func (o EntryMapOutput) ToEntryMapOutput() EntryMapOutput {
	return o
}

func (o EntryMapOutput) ToEntryMapOutputWithContext(ctx context.Context) EntryMapOutput {
	return o
}

func (o EntryMapOutput) MapIndex(k pulumi.StringInput) EntryOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Entry {
		return vs[0].(map[string]*Entry)[vs[1].(string)]
	}).(EntryOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EntryInput)(nil)).Elem(), &Entry{})
	pulumi.RegisterInputType(reflect.TypeOf((*EntryArrayInput)(nil)).Elem(), EntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EntryMapInput)(nil)).Elem(), EntryMap{})
	pulumi.RegisterOutputType(EntryOutput{})
	pulumi.RegisterOutputType(EntryArrayOutput{})
	pulumi.RegisterOutputType(EntryMapOutput{})
}
