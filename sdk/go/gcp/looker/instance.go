// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package looker

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A Google Cloud Looker instance.
//
// To get more information about Instance, see:
//
// * [API documentation](https://cloud.google.com/looker/docs/reference/rest/v1/projects.locations.instances)
// * How-to Guides
//   - [Create a Looker (Google Cloud core) instance](https://cloud.google.com/looker/docs/looker-core-instance-create)
//   - [Configure a Looker (Google Cloud core) instance](https://cloud.google.com/looker/docs/looker-core-instance-setup)
//
// ## Example Usage
// ### Looker Instance Basic
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/looker"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := looker.NewInstance(ctx, "looker-instance", &looker.InstanceArgs{
//				OauthConfig: &looker.InstanceOauthConfigArgs{
//					ClientId:     pulumi.String("my-client-id"),
//					ClientSecret: pulumi.String("my-client-secret"),
//				},
//				PlatformEdition: pulumi.String("LOOKER_CORE_STANDARD"),
//				Region:          pulumi.String("us-central1"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Looker Instance Full
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/looker"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := looker.NewInstance(ctx, "looker-instance", &looker.InstanceArgs{
//				AdminSettings: &looker.InstanceAdminSettingsArgs{
//					AllowedEmailDomains: pulumi.StringArray{
//						pulumi.String("google.com"),
//					},
//				},
//				DenyMaintenancePeriod: &looker.InstanceDenyMaintenancePeriodArgs{
//					EndDate: &looker.InstanceDenyMaintenancePeriodEndDateArgs{
//						Day:   pulumi.Int(1),
//						Month: pulumi.Int(2),
//						Year:  pulumi.Int(2050),
//					},
//					StartDate: &looker.InstanceDenyMaintenancePeriodStartDateArgs{
//						Day:   pulumi.Int(1),
//						Month: pulumi.Int(1),
//						Year:  pulumi.Int(2050),
//					},
//					Time: &looker.InstanceDenyMaintenancePeriodTimeArgs{
//						Hours:   pulumi.Int(10),
//						Minutes: pulumi.Int(0),
//						Nanos:   pulumi.Int(0),
//						Seconds: pulumi.Int(0),
//					},
//				},
//				MaintenanceWindow: &looker.InstanceMaintenanceWindowArgs{
//					DayOfWeek: pulumi.String("THURSDAY"),
//					StartTime: &looker.InstanceMaintenanceWindowStartTimeArgs{
//						Hours:   pulumi.Int(22),
//						Minutes: pulumi.Int(0),
//						Nanos:   pulumi.Int(0),
//						Seconds: pulumi.Int(0),
//					},
//				},
//				OauthConfig: &looker.InstanceOauthConfigArgs{
//					ClientId:     pulumi.String("my-client-id"),
//					ClientSecret: pulumi.String("my-client-secret"),
//				},
//				PlatformEdition: pulumi.String("LOOKER_CORE_STANDARD"),
//				PublicIpEnabled: pulumi.Bool(true),
//				Region:          pulumi.String("us-central1"),
//				UserMetadata: &looker.InstanceUserMetadataArgs{
//					AdditionalDeveloperUserCount: pulumi.Int(10),
//					AdditionalStandardUserCount:  pulumi.Int(10),
//					AdditionalViewerUserCount:    pulumi.Int(10),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Looker Instance Enterprise Full
//
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/compute"
//	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/kms"
//	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/looker"
//	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/organizations"
//	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/servicenetworking"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			lookerNetwork, err := compute.NewNetwork(ctx, "lookerNetwork", &compute.NetworkArgs{
//				AutoCreateSubnetworks: pulumi.Bool(false),
//			})
//			if err != nil {
//				return err
//			}
//			lookerRange, err := compute.NewGlobalAddress(ctx, "lookerRange", &compute.GlobalAddressArgs{
//				Purpose:      pulumi.String("VPC_PEERING"),
//				AddressType:  pulumi.String("INTERNAL"),
//				PrefixLength: pulumi.Int(20),
//				Network:      lookerNetwork.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			lookerVpcConnection, err := servicenetworking.NewConnection(ctx, "lookerVpcConnection", &servicenetworking.ConnectionArgs{
//				Network: lookerNetwork.ID(),
//				Service: pulumi.String("servicenetworking.googleapis.com"),
//				ReservedPeeringRanges: pulumi.StringArray{
//					lookerRange.Name,
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = looker.NewInstance(ctx, "looker-instance", &looker.InstanceArgs{
//				PlatformEdition:  pulumi.String("LOOKER_CORE_ENTERPRISE_ANNUAL"),
//				Region:           pulumi.String("us-central1"),
//				PrivateIpEnabled: pulumi.Bool(true),
//				PublicIpEnabled:  pulumi.Bool(false),
//				ReservedRange:    lookerRange.Name,
//				ConsumerNetwork:  lookerNetwork.ID(),
//				AdminSettings: &looker.InstanceAdminSettingsArgs{
//					AllowedEmailDomains: pulumi.StringArray{
//						pulumi.String("google.com"),
//					},
//				},
//				EncryptionConfig: &looker.InstanceEncryptionConfigArgs{
//					KmsKeyName: pulumi.String("looker-kms-key"),
//				},
//				MaintenanceWindow: &looker.InstanceMaintenanceWindowArgs{
//					DayOfWeek: pulumi.String("THURSDAY"),
//					StartTime: &looker.InstanceMaintenanceWindowStartTimeArgs{
//						Hours:   pulumi.Int(22),
//						Minutes: pulumi.Int(0),
//						Seconds: pulumi.Int(0),
//						Nanos:   pulumi.Int(0),
//					},
//				},
//				DenyMaintenancePeriod: &looker.InstanceDenyMaintenancePeriodArgs{
//					StartDate: &looker.InstanceDenyMaintenancePeriodStartDateArgs{
//						Year:  pulumi.Int(2050),
//						Month: pulumi.Int(1),
//						Day:   pulumi.Int(1),
//					},
//					EndDate: &looker.InstanceDenyMaintenancePeriodEndDateArgs{
//						Year:  pulumi.Int(2050),
//						Month: pulumi.Int(2),
//						Day:   pulumi.Int(1),
//					},
//					Time: &looker.InstanceDenyMaintenancePeriodTimeArgs{
//						Hours:   pulumi.Int(10),
//						Minutes: pulumi.Int(0),
//						Seconds: pulumi.Int(0),
//						Nanos:   pulumi.Int(0),
//					},
//				},
//				OauthConfig: &looker.InstanceOauthConfigArgs{
//					ClientId:     pulumi.String("my-client-id"),
//					ClientSecret: pulumi.String("my-client-secret"),
//				},
//			}, pulumi.DependsOn([]pulumi.Resource{
//				lookerVpcConnection,
//			}))
//			if err != nil {
//				return err
//			}
//			project, err := organizations.LookupProject(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			_, err = kms.NewCryptoKeyIAMMember(ctx, "cryptoKey", &kms.CryptoKeyIAMMemberArgs{
//				CryptoKeyId: pulumi.String("looker-kms-key"),
//				Role:        pulumi.String("roles/cloudkms.cryptoKeyEncrypterDecrypter"),
//				Member:      pulumi.String(fmt.Sprintf("serviceAccount:service-%v@gcp-sa-looker.iam.gserviceaccount.com", project.Number)),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// # Instance can be imported using any of these accepted formats
//
// ```sh
//
//	$ pulumi import gcp:looker/instance:Instance default projects/{{project}}/locations/{{region}}/instances/{{name}}
//
// ```
//
// ```sh
//
//	$ pulumi import gcp:looker/instance:Instance default {{project}}/{{region}}/{{name}}
//
// ```
//
// ```sh
//
//	$ pulumi import gcp:looker/instance:Instance default {{region}}/{{name}}
//
// ```
//
// ```sh
//
//	$ pulumi import gcp:looker/instance:Instance default {{name}}
//
// ```
type Instance struct {
	pulumi.CustomResourceState

	// Looker instance Admin settings.
	// Structure is documented below.
	AdminSettings InstanceAdminSettingsPtrOutput `pulumi:"adminSettings"`
	// Network name in the consumer project in the format of: projects/{project}/global/networks/{network}
	// Note that the consumer network may be in a different GCP project than the consumer
	// project that is hosting the Looker Instance.
	ConsumerNetwork pulumi.StringPtrOutput `pulumi:"consumerNetwork"`
	// The time the instance was created in RFC3339 UTC "Zulu" format,
	// accurate to nanoseconds.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Maintenance denial period for this instance.
	// You must allow at least 14 days of maintenance availability
	// between any two deny maintenance periods.
	// Structure is documented below.
	DenyMaintenancePeriod InstanceDenyMaintenancePeriodPtrOutput `pulumi:"denyMaintenancePeriod"`
	// Public Egress IP (IPv4).
	EgressPublicIp pulumi.StringOutput `pulumi:"egressPublicIp"`
	// Looker instance encryption settings.
	// Structure is documented below.
	EncryptionConfig InstanceEncryptionConfigOutput `pulumi:"encryptionConfig"`
	// Private Ingress IP (IPv4).
	IngressPrivateIp pulumi.StringOutput `pulumi:"ingressPrivateIp"`
	// Public Ingress IP (IPv4).
	IngressPublicIp pulumi.StringOutput `pulumi:"ingressPublicIp"`
	// Looker instance URI which can be used to access the Looker Instance UI.
	LookerUri pulumi.StringOutput `pulumi:"lookerUri"`
	// The Looker version that the instance is using.
	LookerVersion pulumi.StringOutput `pulumi:"lookerVersion"`
	// Maintenance window for an instance.
	// Maintenance of your instance takes place once a month, and will require
	// your instance to be restarted during updates, which will temporarily
	// disrupt service.
	// Structure is documented below.
	MaintenanceWindow InstanceMaintenanceWindowPtrOutput `pulumi:"maintenanceWindow"`
	// The ID of the instance or a fully qualified identifier for the instance.
	//
	// ***
	Name pulumi.StringOutput `pulumi:"name"`
	// Looker Instance OAuth login settings.
	// Structure is documented below.
	OauthConfig InstanceOauthConfigPtrOutput `pulumi:"oauthConfig"`
	// Platform editions for a Looker instance. Each edition maps to a set of instance features, like its size. Must be one of these values:
	// - LOOKER_CORE_TRIAL: trial instance
	// - LOOKER_CORE_STANDARD: pay as you go standard instance
	// - LOOKER_CORE_STANDARD_ANNUAL: subscription standard instance
	// - LOOKER_CORE_ENTERPRISE_ANNUAL: subscription enterprise instance
	// - LOOKER_CORE_EMBED_ANNUAL: subscription embed instance
	// - LOOKER_MODELER: standalone modeling service
	//   Default value is `LOOKER_CORE_TRIAL`.
	//   Possible values are: `LOOKER_CORE_TRIAL`, `LOOKER_CORE_STANDARD`, `LOOKER_CORE_STANDARD_ANNUAL`, `LOOKER_CORE_ENTERPRISE_ANNUAL`, `LOOKER_CORE_EMBED_ANNUAL`, `LOOKER_MODELER`.
	PlatformEdition pulumi.StringPtrOutput `pulumi:"platformEdition"`
	// Whether private IP is enabled on the Looker instance.
	PrivateIpEnabled pulumi.BoolPtrOutput `pulumi:"privateIpEnabled"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
	// Whether public IP is enabled on the Looker instance.
	PublicIpEnabled pulumi.BoolPtrOutput `pulumi:"publicIpEnabled"`
	// The name of the Looker region of the instance.
	Region pulumi.StringOutput `pulumi:"region"`
	// Name of a reserved IP address range within the consumer network, to be used for
	// private service access connection. User may or may not specify this in a request.
	ReservedRange pulumi.StringPtrOutput `pulumi:"reservedRange"`
	// The time the instance was updated in RFC3339 UTC "Zulu" format,
	// accurate to nanoseconds.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
	// Metadata about users for a Looker instance.
	// These settings are only available when platform edition LOOKER_CORE_STANDARD is set.
	// There are ten Standard and two Developer users included in the cost of the product.
	// You can allocate additional Standard, Viewer, and Developer users for this instance.
	// It is an optional step and can be modified later.
	// With the Standard edition of Looker (Google Cloud core), you can provision up to 50
	// total users, distributed across Viewer, Standard, and Developer.
	// Structure is documented below.
	UserMetadata InstanceUserMetadataPtrOutput `pulumi:"userMetadata"`
}

// NewInstance registers a new resource with the given unique name, arguments, and options.
func NewInstance(ctx *pulumi.Context,
	name string, args *InstanceArgs, opts ...pulumi.ResourceOption) (*Instance, error) {
	if args == nil {
		args = &InstanceArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Instance
	err := ctx.RegisterResource("gcp:looker/instance:Instance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInstance gets an existing Instance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InstanceState, opts ...pulumi.ResourceOption) (*Instance, error) {
	var resource Instance
	err := ctx.ReadResource("gcp:looker/instance:Instance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Instance resources.
type instanceState struct {
	// Looker instance Admin settings.
	// Structure is documented below.
	AdminSettings *InstanceAdminSettings `pulumi:"adminSettings"`
	// Network name in the consumer project in the format of: projects/{project}/global/networks/{network}
	// Note that the consumer network may be in a different GCP project than the consumer
	// project that is hosting the Looker Instance.
	ConsumerNetwork *string `pulumi:"consumerNetwork"`
	// The time the instance was created in RFC3339 UTC "Zulu" format,
	// accurate to nanoseconds.
	CreateTime *string `pulumi:"createTime"`
	// Maintenance denial period for this instance.
	// You must allow at least 14 days of maintenance availability
	// between any two deny maintenance periods.
	// Structure is documented below.
	DenyMaintenancePeriod *InstanceDenyMaintenancePeriod `pulumi:"denyMaintenancePeriod"`
	// Public Egress IP (IPv4).
	EgressPublicIp *string `pulumi:"egressPublicIp"`
	// Looker instance encryption settings.
	// Structure is documented below.
	EncryptionConfig *InstanceEncryptionConfig `pulumi:"encryptionConfig"`
	// Private Ingress IP (IPv4).
	IngressPrivateIp *string `pulumi:"ingressPrivateIp"`
	// Public Ingress IP (IPv4).
	IngressPublicIp *string `pulumi:"ingressPublicIp"`
	// Looker instance URI which can be used to access the Looker Instance UI.
	LookerUri *string `pulumi:"lookerUri"`
	// The Looker version that the instance is using.
	LookerVersion *string `pulumi:"lookerVersion"`
	// Maintenance window for an instance.
	// Maintenance of your instance takes place once a month, and will require
	// your instance to be restarted during updates, which will temporarily
	// disrupt service.
	// Structure is documented below.
	MaintenanceWindow *InstanceMaintenanceWindow `pulumi:"maintenanceWindow"`
	// The ID of the instance or a fully qualified identifier for the instance.
	//
	// ***
	Name *string `pulumi:"name"`
	// Looker Instance OAuth login settings.
	// Structure is documented below.
	OauthConfig *InstanceOauthConfig `pulumi:"oauthConfig"`
	// Platform editions for a Looker instance. Each edition maps to a set of instance features, like its size. Must be one of these values:
	// - LOOKER_CORE_TRIAL: trial instance
	// - LOOKER_CORE_STANDARD: pay as you go standard instance
	// - LOOKER_CORE_STANDARD_ANNUAL: subscription standard instance
	// - LOOKER_CORE_ENTERPRISE_ANNUAL: subscription enterprise instance
	// - LOOKER_CORE_EMBED_ANNUAL: subscription embed instance
	// - LOOKER_MODELER: standalone modeling service
	//   Default value is `LOOKER_CORE_TRIAL`.
	//   Possible values are: `LOOKER_CORE_TRIAL`, `LOOKER_CORE_STANDARD`, `LOOKER_CORE_STANDARD_ANNUAL`, `LOOKER_CORE_ENTERPRISE_ANNUAL`, `LOOKER_CORE_EMBED_ANNUAL`, `LOOKER_MODELER`.
	PlatformEdition *string `pulumi:"platformEdition"`
	// Whether private IP is enabled on the Looker instance.
	PrivateIpEnabled *bool `pulumi:"privateIpEnabled"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// Whether public IP is enabled on the Looker instance.
	PublicIpEnabled *bool `pulumi:"publicIpEnabled"`
	// The name of the Looker region of the instance.
	Region *string `pulumi:"region"`
	// Name of a reserved IP address range within the consumer network, to be used for
	// private service access connection. User may or may not specify this in a request.
	ReservedRange *string `pulumi:"reservedRange"`
	// The time the instance was updated in RFC3339 UTC "Zulu" format,
	// accurate to nanoseconds.
	UpdateTime *string `pulumi:"updateTime"`
	// Metadata about users for a Looker instance.
	// These settings are only available when platform edition LOOKER_CORE_STANDARD is set.
	// There are ten Standard and two Developer users included in the cost of the product.
	// You can allocate additional Standard, Viewer, and Developer users for this instance.
	// It is an optional step and can be modified later.
	// With the Standard edition of Looker (Google Cloud core), you can provision up to 50
	// total users, distributed across Viewer, Standard, and Developer.
	// Structure is documented below.
	UserMetadata *InstanceUserMetadata `pulumi:"userMetadata"`
}

type InstanceState struct {
	// Looker instance Admin settings.
	// Structure is documented below.
	AdminSettings InstanceAdminSettingsPtrInput
	// Network name in the consumer project in the format of: projects/{project}/global/networks/{network}
	// Note that the consumer network may be in a different GCP project than the consumer
	// project that is hosting the Looker Instance.
	ConsumerNetwork pulumi.StringPtrInput
	// The time the instance was created in RFC3339 UTC "Zulu" format,
	// accurate to nanoseconds.
	CreateTime pulumi.StringPtrInput
	// Maintenance denial period for this instance.
	// You must allow at least 14 days of maintenance availability
	// between any two deny maintenance periods.
	// Structure is documented below.
	DenyMaintenancePeriod InstanceDenyMaintenancePeriodPtrInput
	// Public Egress IP (IPv4).
	EgressPublicIp pulumi.StringPtrInput
	// Looker instance encryption settings.
	// Structure is documented below.
	EncryptionConfig InstanceEncryptionConfigPtrInput
	// Private Ingress IP (IPv4).
	IngressPrivateIp pulumi.StringPtrInput
	// Public Ingress IP (IPv4).
	IngressPublicIp pulumi.StringPtrInput
	// Looker instance URI which can be used to access the Looker Instance UI.
	LookerUri pulumi.StringPtrInput
	// The Looker version that the instance is using.
	LookerVersion pulumi.StringPtrInput
	// Maintenance window for an instance.
	// Maintenance of your instance takes place once a month, and will require
	// your instance to be restarted during updates, which will temporarily
	// disrupt service.
	// Structure is documented below.
	MaintenanceWindow InstanceMaintenanceWindowPtrInput
	// The ID of the instance or a fully qualified identifier for the instance.
	//
	// ***
	Name pulumi.StringPtrInput
	// Looker Instance OAuth login settings.
	// Structure is documented below.
	OauthConfig InstanceOauthConfigPtrInput
	// Platform editions for a Looker instance. Each edition maps to a set of instance features, like its size. Must be one of these values:
	// - LOOKER_CORE_TRIAL: trial instance
	// - LOOKER_CORE_STANDARD: pay as you go standard instance
	// - LOOKER_CORE_STANDARD_ANNUAL: subscription standard instance
	// - LOOKER_CORE_ENTERPRISE_ANNUAL: subscription enterprise instance
	// - LOOKER_CORE_EMBED_ANNUAL: subscription embed instance
	// - LOOKER_MODELER: standalone modeling service
	//   Default value is `LOOKER_CORE_TRIAL`.
	//   Possible values are: `LOOKER_CORE_TRIAL`, `LOOKER_CORE_STANDARD`, `LOOKER_CORE_STANDARD_ANNUAL`, `LOOKER_CORE_ENTERPRISE_ANNUAL`, `LOOKER_CORE_EMBED_ANNUAL`, `LOOKER_MODELER`.
	PlatformEdition pulumi.StringPtrInput
	// Whether private IP is enabled on the Looker instance.
	PrivateIpEnabled pulumi.BoolPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// Whether public IP is enabled on the Looker instance.
	PublicIpEnabled pulumi.BoolPtrInput
	// The name of the Looker region of the instance.
	Region pulumi.StringPtrInput
	// Name of a reserved IP address range within the consumer network, to be used for
	// private service access connection. User may or may not specify this in a request.
	ReservedRange pulumi.StringPtrInput
	// The time the instance was updated in RFC3339 UTC "Zulu" format,
	// accurate to nanoseconds.
	UpdateTime pulumi.StringPtrInput
	// Metadata about users for a Looker instance.
	// These settings are only available when platform edition LOOKER_CORE_STANDARD is set.
	// There are ten Standard and two Developer users included in the cost of the product.
	// You can allocate additional Standard, Viewer, and Developer users for this instance.
	// It is an optional step and can be modified later.
	// With the Standard edition of Looker (Google Cloud core), you can provision up to 50
	// total users, distributed across Viewer, Standard, and Developer.
	// Structure is documented below.
	UserMetadata InstanceUserMetadataPtrInput
}

func (InstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceState)(nil)).Elem()
}

type instanceArgs struct {
	// Looker instance Admin settings.
	// Structure is documented below.
	AdminSettings *InstanceAdminSettings `pulumi:"adminSettings"`
	// Network name in the consumer project in the format of: projects/{project}/global/networks/{network}
	// Note that the consumer network may be in a different GCP project than the consumer
	// project that is hosting the Looker Instance.
	ConsumerNetwork *string `pulumi:"consumerNetwork"`
	// Maintenance denial period for this instance.
	// You must allow at least 14 days of maintenance availability
	// between any two deny maintenance periods.
	// Structure is documented below.
	DenyMaintenancePeriod *InstanceDenyMaintenancePeriod `pulumi:"denyMaintenancePeriod"`
	// Looker instance encryption settings.
	// Structure is documented below.
	EncryptionConfig *InstanceEncryptionConfig `pulumi:"encryptionConfig"`
	// Maintenance window for an instance.
	// Maintenance of your instance takes place once a month, and will require
	// your instance to be restarted during updates, which will temporarily
	// disrupt service.
	// Structure is documented below.
	MaintenanceWindow *InstanceMaintenanceWindow `pulumi:"maintenanceWindow"`
	// The ID of the instance or a fully qualified identifier for the instance.
	//
	// ***
	Name *string `pulumi:"name"`
	// Looker Instance OAuth login settings.
	// Structure is documented below.
	OauthConfig *InstanceOauthConfig `pulumi:"oauthConfig"`
	// Platform editions for a Looker instance. Each edition maps to a set of instance features, like its size. Must be one of these values:
	// - LOOKER_CORE_TRIAL: trial instance
	// - LOOKER_CORE_STANDARD: pay as you go standard instance
	// - LOOKER_CORE_STANDARD_ANNUAL: subscription standard instance
	// - LOOKER_CORE_ENTERPRISE_ANNUAL: subscription enterprise instance
	// - LOOKER_CORE_EMBED_ANNUAL: subscription embed instance
	// - LOOKER_MODELER: standalone modeling service
	//   Default value is `LOOKER_CORE_TRIAL`.
	//   Possible values are: `LOOKER_CORE_TRIAL`, `LOOKER_CORE_STANDARD`, `LOOKER_CORE_STANDARD_ANNUAL`, `LOOKER_CORE_ENTERPRISE_ANNUAL`, `LOOKER_CORE_EMBED_ANNUAL`, `LOOKER_MODELER`.
	PlatformEdition *string `pulumi:"platformEdition"`
	// Whether private IP is enabled on the Looker instance.
	PrivateIpEnabled *bool `pulumi:"privateIpEnabled"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// Whether public IP is enabled on the Looker instance.
	PublicIpEnabled *bool `pulumi:"publicIpEnabled"`
	// The name of the Looker region of the instance.
	Region *string `pulumi:"region"`
	// Name of a reserved IP address range within the consumer network, to be used for
	// private service access connection. User may or may not specify this in a request.
	ReservedRange *string `pulumi:"reservedRange"`
	// Metadata about users for a Looker instance.
	// These settings are only available when platform edition LOOKER_CORE_STANDARD is set.
	// There are ten Standard and two Developer users included in the cost of the product.
	// You can allocate additional Standard, Viewer, and Developer users for this instance.
	// It is an optional step and can be modified later.
	// With the Standard edition of Looker (Google Cloud core), you can provision up to 50
	// total users, distributed across Viewer, Standard, and Developer.
	// Structure is documented below.
	UserMetadata *InstanceUserMetadata `pulumi:"userMetadata"`
}

// The set of arguments for constructing a Instance resource.
type InstanceArgs struct {
	// Looker instance Admin settings.
	// Structure is documented below.
	AdminSettings InstanceAdminSettingsPtrInput
	// Network name in the consumer project in the format of: projects/{project}/global/networks/{network}
	// Note that the consumer network may be in a different GCP project than the consumer
	// project that is hosting the Looker Instance.
	ConsumerNetwork pulumi.StringPtrInput
	// Maintenance denial period for this instance.
	// You must allow at least 14 days of maintenance availability
	// between any two deny maintenance periods.
	// Structure is documented below.
	DenyMaintenancePeriod InstanceDenyMaintenancePeriodPtrInput
	// Looker instance encryption settings.
	// Structure is documented below.
	EncryptionConfig InstanceEncryptionConfigPtrInput
	// Maintenance window for an instance.
	// Maintenance of your instance takes place once a month, and will require
	// your instance to be restarted during updates, which will temporarily
	// disrupt service.
	// Structure is documented below.
	MaintenanceWindow InstanceMaintenanceWindowPtrInput
	// The ID of the instance or a fully qualified identifier for the instance.
	//
	// ***
	Name pulumi.StringPtrInput
	// Looker Instance OAuth login settings.
	// Structure is documented below.
	OauthConfig InstanceOauthConfigPtrInput
	// Platform editions for a Looker instance. Each edition maps to a set of instance features, like its size. Must be one of these values:
	// - LOOKER_CORE_TRIAL: trial instance
	// - LOOKER_CORE_STANDARD: pay as you go standard instance
	// - LOOKER_CORE_STANDARD_ANNUAL: subscription standard instance
	// - LOOKER_CORE_ENTERPRISE_ANNUAL: subscription enterprise instance
	// - LOOKER_CORE_EMBED_ANNUAL: subscription embed instance
	// - LOOKER_MODELER: standalone modeling service
	//   Default value is `LOOKER_CORE_TRIAL`.
	//   Possible values are: `LOOKER_CORE_TRIAL`, `LOOKER_CORE_STANDARD`, `LOOKER_CORE_STANDARD_ANNUAL`, `LOOKER_CORE_ENTERPRISE_ANNUAL`, `LOOKER_CORE_EMBED_ANNUAL`, `LOOKER_MODELER`.
	PlatformEdition pulumi.StringPtrInput
	// Whether private IP is enabled on the Looker instance.
	PrivateIpEnabled pulumi.BoolPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// Whether public IP is enabled on the Looker instance.
	PublicIpEnabled pulumi.BoolPtrInput
	// The name of the Looker region of the instance.
	Region pulumi.StringPtrInput
	// Name of a reserved IP address range within the consumer network, to be used for
	// private service access connection. User may or may not specify this in a request.
	ReservedRange pulumi.StringPtrInput
	// Metadata about users for a Looker instance.
	// These settings are only available when platform edition LOOKER_CORE_STANDARD is set.
	// There are ten Standard and two Developer users included in the cost of the product.
	// You can allocate additional Standard, Viewer, and Developer users for this instance.
	// It is an optional step and can be modified later.
	// With the Standard edition of Looker (Google Cloud core), you can provision up to 50
	// total users, distributed across Viewer, Standard, and Developer.
	// Structure is documented below.
	UserMetadata InstanceUserMetadataPtrInput
}

func (InstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceArgs)(nil)).Elem()
}

type InstanceInput interface {
	pulumi.Input

	ToInstanceOutput() InstanceOutput
	ToInstanceOutputWithContext(ctx context.Context) InstanceOutput
}

func (*Instance) ElementType() reflect.Type {
	return reflect.TypeOf((**Instance)(nil)).Elem()
}

func (i *Instance) ToInstanceOutput() InstanceOutput {
	return i.ToInstanceOutputWithContext(context.Background())
}

func (i *Instance) ToInstanceOutputWithContext(ctx context.Context) InstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceOutput)
}

// InstanceArrayInput is an input type that accepts InstanceArray and InstanceArrayOutput values.
// You can construct a concrete instance of `InstanceArrayInput` via:
//
//	InstanceArray{ InstanceArgs{...} }
type InstanceArrayInput interface {
	pulumi.Input

	ToInstanceArrayOutput() InstanceArrayOutput
	ToInstanceArrayOutputWithContext(context.Context) InstanceArrayOutput
}

type InstanceArray []InstanceInput

func (InstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Instance)(nil)).Elem()
}

func (i InstanceArray) ToInstanceArrayOutput() InstanceArrayOutput {
	return i.ToInstanceArrayOutputWithContext(context.Background())
}

func (i InstanceArray) ToInstanceArrayOutputWithContext(ctx context.Context) InstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceArrayOutput)
}

// InstanceMapInput is an input type that accepts InstanceMap and InstanceMapOutput values.
// You can construct a concrete instance of `InstanceMapInput` via:
//
//	InstanceMap{ "key": InstanceArgs{...} }
type InstanceMapInput interface {
	pulumi.Input

	ToInstanceMapOutput() InstanceMapOutput
	ToInstanceMapOutputWithContext(context.Context) InstanceMapOutput
}

type InstanceMap map[string]InstanceInput

func (InstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Instance)(nil)).Elem()
}

func (i InstanceMap) ToInstanceMapOutput() InstanceMapOutput {
	return i.ToInstanceMapOutputWithContext(context.Background())
}

func (i InstanceMap) ToInstanceMapOutputWithContext(ctx context.Context) InstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMapOutput)
}

type InstanceOutput struct{ *pulumi.OutputState }

func (InstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Instance)(nil)).Elem()
}

func (o InstanceOutput) ToInstanceOutput() InstanceOutput {
	return o
}

func (o InstanceOutput) ToInstanceOutputWithContext(ctx context.Context) InstanceOutput {
	return o
}

// Looker instance Admin settings.
// Structure is documented below.
func (o InstanceOutput) AdminSettings() InstanceAdminSettingsPtrOutput {
	return o.ApplyT(func(v *Instance) InstanceAdminSettingsPtrOutput { return v.AdminSettings }).(InstanceAdminSettingsPtrOutput)
}

// Network name in the consumer project in the format of: projects/{project}/global/networks/{network}
// Note that the consumer network may be in a different GCP project than the consumer
// project that is hosting the Looker Instance.
func (o InstanceOutput) ConsumerNetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.ConsumerNetwork }).(pulumi.StringPtrOutput)
}

// The time the instance was created in RFC3339 UTC "Zulu" format,
// accurate to nanoseconds.
func (o InstanceOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Maintenance denial period for this instance.
// You must allow at least 14 days of maintenance availability
// between any two deny maintenance periods.
// Structure is documented below.
func (o InstanceOutput) DenyMaintenancePeriod() InstanceDenyMaintenancePeriodPtrOutput {
	return o.ApplyT(func(v *Instance) InstanceDenyMaintenancePeriodPtrOutput { return v.DenyMaintenancePeriod }).(InstanceDenyMaintenancePeriodPtrOutput)
}

// Public Egress IP (IPv4).
func (o InstanceOutput) EgressPublicIp() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.EgressPublicIp }).(pulumi.StringOutput)
}

// Looker instance encryption settings.
// Structure is documented below.
func (o InstanceOutput) EncryptionConfig() InstanceEncryptionConfigOutput {
	return o.ApplyT(func(v *Instance) InstanceEncryptionConfigOutput { return v.EncryptionConfig }).(InstanceEncryptionConfigOutput)
}

// Private Ingress IP (IPv4).
func (o InstanceOutput) IngressPrivateIp() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.IngressPrivateIp }).(pulumi.StringOutput)
}

// Public Ingress IP (IPv4).
func (o InstanceOutput) IngressPublicIp() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.IngressPublicIp }).(pulumi.StringOutput)
}

// Looker instance URI which can be used to access the Looker Instance UI.
func (o InstanceOutput) LookerUri() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.LookerUri }).(pulumi.StringOutput)
}

// The Looker version that the instance is using.
func (o InstanceOutput) LookerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.LookerVersion }).(pulumi.StringOutput)
}

// Maintenance window for an instance.
// Maintenance of your instance takes place once a month, and will require
// your instance to be restarted during updates, which will temporarily
// disrupt service.
// Structure is documented below.
func (o InstanceOutput) MaintenanceWindow() InstanceMaintenanceWindowPtrOutput {
	return o.ApplyT(func(v *Instance) InstanceMaintenanceWindowPtrOutput { return v.MaintenanceWindow }).(InstanceMaintenanceWindowPtrOutput)
}

// The ID of the instance or a fully qualified identifier for the instance.
//
// ***
func (o InstanceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Looker Instance OAuth login settings.
// Structure is documented below.
func (o InstanceOutput) OauthConfig() InstanceOauthConfigPtrOutput {
	return o.ApplyT(func(v *Instance) InstanceOauthConfigPtrOutput { return v.OauthConfig }).(InstanceOauthConfigPtrOutput)
}

// Platform editions for a Looker instance. Each edition maps to a set of instance features, like its size. Must be one of these values:
//   - LOOKER_CORE_TRIAL: trial instance
//   - LOOKER_CORE_STANDARD: pay as you go standard instance
//   - LOOKER_CORE_STANDARD_ANNUAL: subscription standard instance
//   - LOOKER_CORE_ENTERPRISE_ANNUAL: subscription enterprise instance
//   - LOOKER_CORE_EMBED_ANNUAL: subscription embed instance
//   - LOOKER_MODELER: standalone modeling service
//     Default value is `LOOKER_CORE_TRIAL`.
//     Possible values are: `LOOKER_CORE_TRIAL`, `LOOKER_CORE_STANDARD`, `LOOKER_CORE_STANDARD_ANNUAL`, `LOOKER_CORE_ENTERPRISE_ANNUAL`, `LOOKER_CORE_EMBED_ANNUAL`, `LOOKER_MODELER`.
func (o InstanceOutput) PlatformEdition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.PlatformEdition }).(pulumi.StringPtrOutput)
}

// Whether private IP is enabled on the Looker instance.
func (o InstanceOutput) PrivateIpEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.BoolPtrOutput { return v.PrivateIpEnabled }).(pulumi.BoolPtrOutput)
}

// The ID of the project in which the resource belongs.
// If it is not provided, the provider project is used.
func (o InstanceOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Whether public IP is enabled on the Looker instance.
func (o InstanceOutput) PublicIpEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.BoolPtrOutput { return v.PublicIpEnabled }).(pulumi.BoolPtrOutput)
}

// The name of the Looker region of the instance.
func (o InstanceOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// Name of a reserved IP address range within the consumer network, to be used for
// private service access connection. User may or may not specify this in a request.
func (o InstanceOutput) ReservedRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.ReservedRange }).(pulumi.StringPtrOutput)
}

// The time the instance was updated in RFC3339 UTC "Zulu" format,
// accurate to nanoseconds.
func (o InstanceOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

// Metadata about users for a Looker instance.
// These settings are only available when platform edition LOOKER_CORE_STANDARD is set.
// There are ten Standard and two Developer users included in the cost of the product.
// You can allocate additional Standard, Viewer, and Developer users for this instance.
// It is an optional step and can be modified later.
// With the Standard edition of Looker (Google Cloud core), you can provision up to 50
// total users, distributed across Viewer, Standard, and Developer.
// Structure is documented below.
func (o InstanceOutput) UserMetadata() InstanceUserMetadataPtrOutput {
	return o.ApplyT(func(v *Instance) InstanceUserMetadataPtrOutput { return v.UserMetadata }).(InstanceUserMetadataPtrOutput)
}

type InstanceArrayOutput struct{ *pulumi.OutputState }

func (InstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Instance)(nil)).Elem()
}

func (o InstanceArrayOutput) ToInstanceArrayOutput() InstanceArrayOutput {
	return o
}

func (o InstanceArrayOutput) ToInstanceArrayOutputWithContext(ctx context.Context) InstanceArrayOutput {
	return o
}

func (o InstanceArrayOutput) Index(i pulumi.IntInput) InstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Instance {
		return vs[0].([]*Instance)[vs[1].(int)]
	}).(InstanceOutput)
}

type InstanceMapOutput struct{ *pulumi.OutputState }

func (InstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Instance)(nil)).Elem()
}

func (o InstanceMapOutput) ToInstanceMapOutput() InstanceMapOutput {
	return o
}

func (o InstanceMapOutput) ToInstanceMapOutputWithContext(ctx context.Context) InstanceMapOutput {
	return o
}

func (o InstanceMapOutput) MapIndex(k pulumi.StringInput) InstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Instance {
		return vs[0].(map[string]*Instance)[vs[1].(string)]
	}).(InstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceInput)(nil)).Elem(), &Instance{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceArrayInput)(nil)).Elem(), InstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceMapInput)(nil)).Elem(), InstanceMap{})
	pulumi.RegisterOutputType(InstanceOutput{})
	pulumi.RegisterOutputType(InstanceArrayOutput{})
	pulumi.RegisterOutputType(InstanceMapOutput{})
}
