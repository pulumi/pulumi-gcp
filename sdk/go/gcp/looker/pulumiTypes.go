// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package looker

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type InstanceAdminSettings struct {
	AllowedEmailDomains []string `pulumi:"allowedEmailDomains"`
}

// InstanceAdminSettingsInput is an input type that accepts InstanceAdminSettingsArgs and InstanceAdminSettingsOutput values.
// You can construct a concrete instance of `InstanceAdminSettingsInput` via:
//
//	InstanceAdminSettingsArgs{...}
type InstanceAdminSettingsInput interface {
	pulumi.Input

	ToInstanceAdminSettingsOutput() InstanceAdminSettingsOutput
	ToInstanceAdminSettingsOutputWithContext(context.Context) InstanceAdminSettingsOutput
}

type InstanceAdminSettingsArgs struct {
	AllowedEmailDomains pulumi.StringArrayInput `pulumi:"allowedEmailDomains"`
}

func (InstanceAdminSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceAdminSettings)(nil)).Elem()
}

func (i InstanceAdminSettingsArgs) ToInstanceAdminSettingsOutput() InstanceAdminSettingsOutput {
	return i.ToInstanceAdminSettingsOutputWithContext(context.Background())
}

func (i InstanceAdminSettingsArgs) ToInstanceAdminSettingsOutputWithContext(ctx context.Context) InstanceAdminSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceAdminSettingsOutput)
}

func (i InstanceAdminSettingsArgs) ToInstanceAdminSettingsPtrOutput() InstanceAdminSettingsPtrOutput {
	return i.ToInstanceAdminSettingsPtrOutputWithContext(context.Background())
}

func (i InstanceAdminSettingsArgs) ToInstanceAdminSettingsPtrOutputWithContext(ctx context.Context) InstanceAdminSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceAdminSettingsOutput).ToInstanceAdminSettingsPtrOutputWithContext(ctx)
}

// InstanceAdminSettingsPtrInput is an input type that accepts InstanceAdminSettingsArgs, InstanceAdminSettingsPtr and InstanceAdminSettingsPtrOutput values.
// You can construct a concrete instance of `InstanceAdminSettingsPtrInput` via:
//
//	        InstanceAdminSettingsArgs{...}
//
//	or:
//
//	        nil
type InstanceAdminSettingsPtrInput interface {
	pulumi.Input

	ToInstanceAdminSettingsPtrOutput() InstanceAdminSettingsPtrOutput
	ToInstanceAdminSettingsPtrOutputWithContext(context.Context) InstanceAdminSettingsPtrOutput
}

type instanceAdminSettingsPtrType InstanceAdminSettingsArgs

func InstanceAdminSettingsPtr(v *InstanceAdminSettingsArgs) InstanceAdminSettingsPtrInput {
	return (*instanceAdminSettingsPtrType)(v)
}

func (*instanceAdminSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceAdminSettings)(nil)).Elem()
}

func (i *instanceAdminSettingsPtrType) ToInstanceAdminSettingsPtrOutput() InstanceAdminSettingsPtrOutput {
	return i.ToInstanceAdminSettingsPtrOutputWithContext(context.Background())
}

func (i *instanceAdminSettingsPtrType) ToInstanceAdminSettingsPtrOutputWithContext(ctx context.Context) InstanceAdminSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceAdminSettingsPtrOutput)
}

type InstanceAdminSettingsOutput struct{ *pulumi.OutputState }

func (InstanceAdminSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceAdminSettings)(nil)).Elem()
}

func (o InstanceAdminSettingsOutput) ToInstanceAdminSettingsOutput() InstanceAdminSettingsOutput {
	return o
}

func (o InstanceAdminSettingsOutput) ToInstanceAdminSettingsOutputWithContext(ctx context.Context) InstanceAdminSettingsOutput {
	return o
}

func (o InstanceAdminSettingsOutput) ToInstanceAdminSettingsPtrOutput() InstanceAdminSettingsPtrOutput {
	return o.ToInstanceAdminSettingsPtrOutputWithContext(context.Background())
}

func (o InstanceAdminSettingsOutput) ToInstanceAdminSettingsPtrOutputWithContext(ctx context.Context) InstanceAdminSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceAdminSettings) *InstanceAdminSettings {
		return &v
	}).(InstanceAdminSettingsPtrOutput)
}

func (o InstanceAdminSettingsOutput) AllowedEmailDomains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v InstanceAdminSettings) []string { return v.AllowedEmailDomains }).(pulumi.StringArrayOutput)
}

type InstanceAdminSettingsPtrOutput struct{ *pulumi.OutputState }

func (InstanceAdminSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceAdminSettings)(nil)).Elem()
}

func (o InstanceAdminSettingsPtrOutput) ToInstanceAdminSettingsPtrOutput() InstanceAdminSettingsPtrOutput {
	return o
}

func (o InstanceAdminSettingsPtrOutput) ToInstanceAdminSettingsPtrOutputWithContext(ctx context.Context) InstanceAdminSettingsPtrOutput {
	return o
}

func (o InstanceAdminSettingsPtrOutput) Elem() InstanceAdminSettingsOutput {
	return o.ApplyT(func(v *InstanceAdminSettings) InstanceAdminSettings {
		if v != nil {
			return *v
		}
		var ret InstanceAdminSettings
		return ret
	}).(InstanceAdminSettingsOutput)
}

func (o InstanceAdminSettingsPtrOutput) AllowedEmailDomains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *InstanceAdminSettings) []string {
		if v == nil {
			return nil
		}
		return v.AllowedEmailDomains
	}).(pulumi.StringArrayOutput)
}

type InstanceDenyMaintenancePeriod struct {
	// Required. Start date of the deny maintenance period
	// Structure is documented below.
	EndDate InstanceDenyMaintenancePeriodEndDate `pulumi:"endDate"`
	// Required. Start date of the deny maintenance period
	// Structure is documented below.
	StartDate InstanceDenyMaintenancePeriodStartDate `pulumi:"startDate"`
	// Required. Start time of the window in UTC time.
	// Structure is documented below.
	Time InstanceDenyMaintenancePeriodTime `pulumi:"time"`
}

// InstanceDenyMaintenancePeriodInput is an input type that accepts InstanceDenyMaintenancePeriodArgs and InstanceDenyMaintenancePeriodOutput values.
// You can construct a concrete instance of `InstanceDenyMaintenancePeriodInput` via:
//
//	InstanceDenyMaintenancePeriodArgs{...}
type InstanceDenyMaintenancePeriodInput interface {
	pulumi.Input

	ToInstanceDenyMaintenancePeriodOutput() InstanceDenyMaintenancePeriodOutput
	ToInstanceDenyMaintenancePeriodOutputWithContext(context.Context) InstanceDenyMaintenancePeriodOutput
}

type InstanceDenyMaintenancePeriodArgs struct {
	// Required. Start date of the deny maintenance period
	// Structure is documented below.
	EndDate InstanceDenyMaintenancePeriodEndDateInput `pulumi:"endDate"`
	// Required. Start date of the deny maintenance period
	// Structure is documented below.
	StartDate InstanceDenyMaintenancePeriodStartDateInput `pulumi:"startDate"`
	// Required. Start time of the window in UTC time.
	// Structure is documented below.
	Time InstanceDenyMaintenancePeriodTimeInput `pulumi:"time"`
}

func (InstanceDenyMaintenancePeriodArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceDenyMaintenancePeriod)(nil)).Elem()
}

func (i InstanceDenyMaintenancePeriodArgs) ToInstanceDenyMaintenancePeriodOutput() InstanceDenyMaintenancePeriodOutput {
	return i.ToInstanceDenyMaintenancePeriodOutputWithContext(context.Background())
}

func (i InstanceDenyMaintenancePeriodArgs) ToInstanceDenyMaintenancePeriodOutputWithContext(ctx context.Context) InstanceDenyMaintenancePeriodOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceDenyMaintenancePeriodOutput)
}

func (i InstanceDenyMaintenancePeriodArgs) ToInstanceDenyMaintenancePeriodPtrOutput() InstanceDenyMaintenancePeriodPtrOutput {
	return i.ToInstanceDenyMaintenancePeriodPtrOutputWithContext(context.Background())
}

func (i InstanceDenyMaintenancePeriodArgs) ToInstanceDenyMaintenancePeriodPtrOutputWithContext(ctx context.Context) InstanceDenyMaintenancePeriodPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceDenyMaintenancePeriodOutput).ToInstanceDenyMaintenancePeriodPtrOutputWithContext(ctx)
}

// InstanceDenyMaintenancePeriodPtrInput is an input type that accepts InstanceDenyMaintenancePeriodArgs, InstanceDenyMaintenancePeriodPtr and InstanceDenyMaintenancePeriodPtrOutput values.
// You can construct a concrete instance of `InstanceDenyMaintenancePeriodPtrInput` via:
//
//	        InstanceDenyMaintenancePeriodArgs{...}
//
//	or:
//
//	        nil
type InstanceDenyMaintenancePeriodPtrInput interface {
	pulumi.Input

	ToInstanceDenyMaintenancePeriodPtrOutput() InstanceDenyMaintenancePeriodPtrOutput
	ToInstanceDenyMaintenancePeriodPtrOutputWithContext(context.Context) InstanceDenyMaintenancePeriodPtrOutput
}

type instanceDenyMaintenancePeriodPtrType InstanceDenyMaintenancePeriodArgs

func InstanceDenyMaintenancePeriodPtr(v *InstanceDenyMaintenancePeriodArgs) InstanceDenyMaintenancePeriodPtrInput {
	return (*instanceDenyMaintenancePeriodPtrType)(v)
}

func (*instanceDenyMaintenancePeriodPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceDenyMaintenancePeriod)(nil)).Elem()
}

func (i *instanceDenyMaintenancePeriodPtrType) ToInstanceDenyMaintenancePeriodPtrOutput() InstanceDenyMaintenancePeriodPtrOutput {
	return i.ToInstanceDenyMaintenancePeriodPtrOutputWithContext(context.Background())
}

func (i *instanceDenyMaintenancePeriodPtrType) ToInstanceDenyMaintenancePeriodPtrOutputWithContext(ctx context.Context) InstanceDenyMaintenancePeriodPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceDenyMaintenancePeriodPtrOutput)
}

type InstanceDenyMaintenancePeriodOutput struct{ *pulumi.OutputState }

func (InstanceDenyMaintenancePeriodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceDenyMaintenancePeriod)(nil)).Elem()
}

func (o InstanceDenyMaintenancePeriodOutput) ToInstanceDenyMaintenancePeriodOutput() InstanceDenyMaintenancePeriodOutput {
	return o
}

func (o InstanceDenyMaintenancePeriodOutput) ToInstanceDenyMaintenancePeriodOutputWithContext(ctx context.Context) InstanceDenyMaintenancePeriodOutput {
	return o
}

func (o InstanceDenyMaintenancePeriodOutput) ToInstanceDenyMaintenancePeriodPtrOutput() InstanceDenyMaintenancePeriodPtrOutput {
	return o.ToInstanceDenyMaintenancePeriodPtrOutputWithContext(context.Background())
}

func (o InstanceDenyMaintenancePeriodOutput) ToInstanceDenyMaintenancePeriodPtrOutputWithContext(ctx context.Context) InstanceDenyMaintenancePeriodPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceDenyMaintenancePeriod) *InstanceDenyMaintenancePeriod {
		return &v
	}).(InstanceDenyMaintenancePeriodPtrOutput)
}

// Required. Start date of the deny maintenance period
// Structure is documented below.
func (o InstanceDenyMaintenancePeriodOutput) EndDate() InstanceDenyMaintenancePeriodEndDateOutput {
	return o.ApplyT(func(v InstanceDenyMaintenancePeriod) InstanceDenyMaintenancePeriodEndDate { return v.EndDate }).(InstanceDenyMaintenancePeriodEndDateOutput)
}

// Required. Start date of the deny maintenance period
// Structure is documented below.
func (o InstanceDenyMaintenancePeriodOutput) StartDate() InstanceDenyMaintenancePeriodStartDateOutput {
	return o.ApplyT(func(v InstanceDenyMaintenancePeriod) InstanceDenyMaintenancePeriodStartDate { return v.StartDate }).(InstanceDenyMaintenancePeriodStartDateOutput)
}

// Required. Start time of the window in UTC time.
// Structure is documented below.
func (o InstanceDenyMaintenancePeriodOutput) Time() InstanceDenyMaintenancePeriodTimeOutput {
	return o.ApplyT(func(v InstanceDenyMaintenancePeriod) InstanceDenyMaintenancePeriodTime { return v.Time }).(InstanceDenyMaintenancePeriodTimeOutput)
}

type InstanceDenyMaintenancePeriodPtrOutput struct{ *pulumi.OutputState }

func (InstanceDenyMaintenancePeriodPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceDenyMaintenancePeriod)(nil)).Elem()
}

func (o InstanceDenyMaintenancePeriodPtrOutput) ToInstanceDenyMaintenancePeriodPtrOutput() InstanceDenyMaintenancePeriodPtrOutput {
	return o
}

func (o InstanceDenyMaintenancePeriodPtrOutput) ToInstanceDenyMaintenancePeriodPtrOutputWithContext(ctx context.Context) InstanceDenyMaintenancePeriodPtrOutput {
	return o
}

func (o InstanceDenyMaintenancePeriodPtrOutput) Elem() InstanceDenyMaintenancePeriodOutput {
	return o.ApplyT(func(v *InstanceDenyMaintenancePeriod) InstanceDenyMaintenancePeriod {
		if v != nil {
			return *v
		}
		var ret InstanceDenyMaintenancePeriod
		return ret
	}).(InstanceDenyMaintenancePeriodOutput)
}

// Required. Start date of the deny maintenance period
// Structure is documented below.
func (o InstanceDenyMaintenancePeriodPtrOutput) EndDate() InstanceDenyMaintenancePeriodEndDatePtrOutput {
	return o.ApplyT(func(v *InstanceDenyMaintenancePeriod) *InstanceDenyMaintenancePeriodEndDate {
		if v == nil {
			return nil
		}
		return &v.EndDate
	}).(InstanceDenyMaintenancePeriodEndDatePtrOutput)
}

// Required. Start date of the deny maintenance period
// Structure is documented below.
func (o InstanceDenyMaintenancePeriodPtrOutput) StartDate() InstanceDenyMaintenancePeriodStartDatePtrOutput {
	return o.ApplyT(func(v *InstanceDenyMaintenancePeriod) *InstanceDenyMaintenancePeriodStartDate {
		if v == nil {
			return nil
		}
		return &v.StartDate
	}).(InstanceDenyMaintenancePeriodStartDatePtrOutput)
}

// Required. Start time of the window in UTC time.
// Structure is documented below.
func (o InstanceDenyMaintenancePeriodPtrOutput) Time() InstanceDenyMaintenancePeriodTimePtrOutput {
	return o.ApplyT(func(v *InstanceDenyMaintenancePeriod) *InstanceDenyMaintenancePeriodTime {
		if v == nil {
			return nil
		}
		return &v.Time
	}).(InstanceDenyMaintenancePeriodTimePtrOutput)
}

type InstanceDenyMaintenancePeriodEndDate struct {
	// Day of a month. Must be from 1 to 31 and valid for the year and month, or 0
	// to specify a year by itself or a year and month where the day isn't significant.
	Day *int `pulumi:"day"`
	// Month of a year. Must be from 1 to 12, or 0 to specify a year without a
	// month and day.
	Month *int `pulumi:"month"`
	// Year of the date. Must be from 1 to 9999, or 0 to specify a date without
	// a year.
	Year *int `pulumi:"year"`
}

// InstanceDenyMaintenancePeriodEndDateInput is an input type that accepts InstanceDenyMaintenancePeriodEndDateArgs and InstanceDenyMaintenancePeriodEndDateOutput values.
// You can construct a concrete instance of `InstanceDenyMaintenancePeriodEndDateInput` via:
//
//	InstanceDenyMaintenancePeriodEndDateArgs{...}
type InstanceDenyMaintenancePeriodEndDateInput interface {
	pulumi.Input

	ToInstanceDenyMaintenancePeriodEndDateOutput() InstanceDenyMaintenancePeriodEndDateOutput
	ToInstanceDenyMaintenancePeriodEndDateOutputWithContext(context.Context) InstanceDenyMaintenancePeriodEndDateOutput
}

type InstanceDenyMaintenancePeriodEndDateArgs struct {
	// Day of a month. Must be from 1 to 31 and valid for the year and month, or 0
	// to specify a year by itself or a year and month where the day isn't significant.
	Day pulumi.IntPtrInput `pulumi:"day"`
	// Month of a year. Must be from 1 to 12, or 0 to specify a year without a
	// month and day.
	Month pulumi.IntPtrInput `pulumi:"month"`
	// Year of the date. Must be from 1 to 9999, or 0 to specify a date without
	// a year.
	Year pulumi.IntPtrInput `pulumi:"year"`
}

func (InstanceDenyMaintenancePeriodEndDateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceDenyMaintenancePeriodEndDate)(nil)).Elem()
}

func (i InstanceDenyMaintenancePeriodEndDateArgs) ToInstanceDenyMaintenancePeriodEndDateOutput() InstanceDenyMaintenancePeriodEndDateOutput {
	return i.ToInstanceDenyMaintenancePeriodEndDateOutputWithContext(context.Background())
}

func (i InstanceDenyMaintenancePeriodEndDateArgs) ToInstanceDenyMaintenancePeriodEndDateOutputWithContext(ctx context.Context) InstanceDenyMaintenancePeriodEndDateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceDenyMaintenancePeriodEndDateOutput)
}

func (i InstanceDenyMaintenancePeriodEndDateArgs) ToInstanceDenyMaintenancePeriodEndDatePtrOutput() InstanceDenyMaintenancePeriodEndDatePtrOutput {
	return i.ToInstanceDenyMaintenancePeriodEndDatePtrOutputWithContext(context.Background())
}

func (i InstanceDenyMaintenancePeriodEndDateArgs) ToInstanceDenyMaintenancePeriodEndDatePtrOutputWithContext(ctx context.Context) InstanceDenyMaintenancePeriodEndDatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceDenyMaintenancePeriodEndDateOutput).ToInstanceDenyMaintenancePeriodEndDatePtrOutputWithContext(ctx)
}

// InstanceDenyMaintenancePeriodEndDatePtrInput is an input type that accepts InstanceDenyMaintenancePeriodEndDateArgs, InstanceDenyMaintenancePeriodEndDatePtr and InstanceDenyMaintenancePeriodEndDatePtrOutput values.
// You can construct a concrete instance of `InstanceDenyMaintenancePeriodEndDatePtrInput` via:
//
//	        InstanceDenyMaintenancePeriodEndDateArgs{...}
//
//	or:
//
//	        nil
type InstanceDenyMaintenancePeriodEndDatePtrInput interface {
	pulumi.Input

	ToInstanceDenyMaintenancePeriodEndDatePtrOutput() InstanceDenyMaintenancePeriodEndDatePtrOutput
	ToInstanceDenyMaintenancePeriodEndDatePtrOutputWithContext(context.Context) InstanceDenyMaintenancePeriodEndDatePtrOutput
}

type instanceDenyMaintenancePeriodEndDatePtrType InstanceDenyMaintenancePeriodEndDateArgs

func InstanceDenyMaintenancePeriodEndDatePtr(v *InstanceDenyMaintenancePeriodEndDateArgs) InstanceDenyMaintenancePeriodEndDatePtrInput {
	return (*instanceDenyMaintenancePeriodEndDatePtrType)(v)
}

func (*instanceDenyMaintenancePeriodEndDatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceDenyMaintenancePeriodEndDate)(nil)).Elem()
}

func (i *instanceDenyMaintenancePeriodEndDatePtrType) ToInstanceDenyMaintenancePeriodEndDatePtrOutput() InstanceDenyMaintenancePeriodEndDatePtrOutput {
	return i.ToInstanceDenyMaintenancePeriodEndDatePtrOutputWithContext(context.Background())
}

func (i *instanceDenyMaintenancePeriodEndDatePtrType) ToInstanceDenyMaintenancePeriodEndDatePtrOutputWithContext(ctx context.Context) InstanceDenyMaintenancePeriodEndDatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceDenyMaintenancePeriodEndDatePtrOutput)
}

type InstanceDenyMaintenancePeriodEndDateOutput struct{ *pulumi.OutputState }

func (InstanceDenyMaintenancePeriodEndDateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceDenyMaintenancePeriodEndDate)(nil)).Elem()
}

func (o InstanceDenyMaintenancePeriodEndDateOutput) ToInstanceDenyMaintenancePeriodEndDateOutput() InstanceDenyMaintenancePeriodEndDateOutput {
	return o
}

func (o InstanceDenyMaintenancePeriodEndDateOutput) ToInstanceDenyMaintenancePeriodEndDateOutputWithContext(ctx context.Context) InstanceDenyMaintenancePeriodEndDateOutput {
	return o
}

func (o InstanceDenyMaintenancePeriodEndDateOutput) ToInstanceDenyMaintenancePeriodEndDatePtrOutput() InstanceDenyMaintenancePeriodEndDatePtrOutput {
	return o.ToInstanceDenyMaintenancePeriodEndDatePtrOutputWithContext(context.Background())
}

func (o InstanceDenyMaintenancePeriodEndDateOutput) ToInstanceDenyMaintenancePeriodEndDatePtrOutputWithContext(ctx context.Context) InstanceDenyMaintenancePeriodEndDatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceDenyMaintenancePeriodEndDate) *InstanceDenyMaintenancePeriodEndDate {
		return &v
	}).(InstanceDenyMaintenancePeriodEndDatePtrOutput)
}

// Day of a month. Must be from 1 to 31 and valid for the year and month, or 0
// to specify a year by itself or a year and month where the day isn't significant.
func (o InstanceDenyMaintenancePeriodEndDateOutput) Day() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceDenyMaintenancePeriodEndDate) *int { return v.Day }).(pulumi.IntPtrOutput)
}

// Month of a year. Must be from 1 to 12, or 0 to specify a year without a
// month and day.
func (o InstanceDenyMaintenancePeriodEndDateOutput) Month() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceDenyMaintenancePeriodEndDate) *int { return v.Month }).(pulumi.IntPtrOutput)
}

// Year of the date. Must be from 1 to 9999, or 0 to specify a date without
// a year.
func (o InstanceDenyMaintenancePeriodEndDateOutput) Year() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceDenyMaintenancePeriodEndDate) *int { return v.Year }).(pulumi.IntPtrOutput)
}

type InstanceDenyMaintenancePeriodEndDatePtrOutput struct{ *pulumi.OutputState }

func (InstanceDenyMaintenancePeriodEndDatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceDenyMaintenancePeriodEndDate)(nil)).Elem()
}

func (o InstanceDenyMaintenancePeriodEndDatePtrOutput) ToInstanceDenyMaintenancePeriodEndDatePtrOutput() InstanceDenyMaintenancePeriodEndDatePtrOutput {
	return o
}

func (o InstanceDenyMaintenancePeriodEndDatePtrOutput) ToInstanceDenyMaintenancePeriodEndDatePtrOutputWithContext(ctx context.Context) InstanceDenyMaintenancePeriodEndDatePtrOutput {
	return o
}

func (o InstanceDenyMaintenancePeriodEndDatePtrOutput) Elem() InstanceDenyMaintenancePeriodEndDateOutput {
	return o.ApplyT(func(v *InstanceDenyMaintenancePeriodEndDate) InstanceDenyMaintenancePeriodEndDate {
		if v != nil {
			return *v
		}
		var ret InstanceDenyMaintenancePeriodEndDate
		return ret
	}).(InstanceDenyMaintenancePeriodEndDateOutput)
}

// Day of a month. Must be from 1 to 31 and valid for the year and month, or 0
// to specify a year by itself or a year and month where the day isn't significant.
func (o InstanceDenyMaintenancePeriodEndDatePtrOutput) Day() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceDenyMaintenancePeriodEndDate) *int {
		if v == nil {
			return nil
		}
		return v.Day
	}).(pulumi.IntPtrOutput)
}

// Month of a year. Must be from 1 to 12, or 0 to specify a year without a
// month and day.
func (o InstanceDenyMaintenancePeriodEndDatePtrOutput) Month() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceDenyMaintenancePeriodEndDate) *int {
		if v == nil {
			return nil
		}
		return v.Month
	}).(pulumi.IntPtrOutput)
}

// Year of the date. Must be from 1 to 9999, or 0 to specify a date without
// a year.
func (o InstanceDenyMaintenancePeriodEndDatePtrOutput) Year() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceDenyMaintenancePeriodEndDate) *int {
		if v == nil {
			return nil
		}
		return v.Year
	}).(pulumi.IntPtrOutput)
}

type InstanceDenyMaintenancePeriodStartDate struct {
	// Day of a month. Must be from 1 to 31 and valid for the year and month, or 0
	// to specify a year by itself or a year and month where the day isn't significant.
	Day *int `pulumi:"day"`
	// Month of a year. Must be from 1 to 12, or 0 to specify a year without a
	// month and day.
	Month *int `pulumi:"month"`
	// Year of the date. Must be from 1 to 9999, or 0 to specify a date without
	// a year.
	Year *int `pulumi:"year"`
}

// InstanceDenyMaintenancePeriodStartDateInput is an input type that accepts InstanceDenyMaintenancePeriodStartDateArgs and InstanceDenyMaintenancePeriodStartDateOutput values.
// You can construct a concrete instance of `InstanceDenyMaintenancePeriodStartDateInput` via:
//
//	InstanceDenyMaintenancePeriodStartDateArgs{...}
type InstanceDenyMaintenancePeriodStartDateInput interface {
	pulumi.Input

	ToInstanceDenyMaintenancePeriodStartDateOutput() InstanceDenyMaintenancePeriodStartDateOutput
	ToInstanceDenyMaintenancePeriodStartDateOutputWithContext(context.Context) InstanceDenyMaintenancePeriodStartDateOutput
}

type InstanceDenyMaintenancePeriodStartDateArgs struct {
	// Day of a month. Must be from 1 to 31 and valid for the year and month, or 0
	// to specify a year by itself or a year and month where the day isn't significant.
	Day pulumi.IntPtrInput `pulumi:"day"`
	// Month of a year. Must be from 1 to 12, or 0 to specify a year without a
	// month and day.
	Month pulumi.IntPtrInput `pulumi:"month"`
	// Year of the date. Must be from 1 to 9999, or 0 to specify a date without
	// a year.
	Year pulumi.IntPtrInput `pulumi:"year"`
}

func (InstanceDenyMaintenancePeriodStartDateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceDenyMaintenancePeriodStartDate)(nil)).Elem()
}

func (i InstanceDenyMaintenancePeriodStartDateArgs) ToInstanceDenyMaintenancePeriodStartDateOutput() InstanceDenyMaintenancePeriodStartDateOutput {
	return i.ToInstanceDenyMaintenancePeriodStartDateOutputWithContext(context.Background())
}

func (i InstanceDenyMaintenancePeriodStartDateArgs) ToInstanceDenyMaintenancePeriodStartDateOutputWithContext(ctx context.Context) InstanceDenyMaintenancePeriodStartDateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceDenyMaintenancePeriodStartDateOutput)
}

func (i InstanceDenyMaintenancePeriodStartDateArgs) ToInstanceDenyMaintenancePeriodStartDatePtrOutput() InstanceDenyMaintenancePeriodStartDatePtrOutput {
	return i.ToInstanceDenyMaintenancePeriodStartDatePtrOutputWithContext(context.Background())
}

func (i InstanceDenyMaintenancePeriodStartDateArgs) ToInstanceDenyMaintenancePeriodStartDatePtrOutputWithContext(ctx context.Context) InstanceDenyMaintenancePeriodStartDatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceDenyMaintenancePeriodStartDateOutput).ToInstanceDenyMaintenancePeriodStartDatePtrOutputWithContext(ctx)
}

// InstanceDenyMaintenancePeriodStartDatePtrInput is an input type that accepts InstanceDenyMaintenancePeriodStartDateArgs, InstanceDenyMaintenancePeriodStartDatePtr and InstanceDenyMaintenancePeriodStartDatePtrOutput values.
// You can construct a concrete instance of `InstanceDenyMaintenancePeriodStartDatePtrInput` via:
//
//	        InstanceDenyMaintenancePeriodStartDateArgs{...}
//
//	or:
//
//	        nil
type InstanceDenyMaintenancePeriodStartDatePtrInput interface {
	pulumi.Input

	ToInstanceDenyMaintenancePeriodStartDatePtrOutput() InstanceDenyMaintenancePeriodStartDatePtrOutput
	ToInstanceDenyMaintenancePeriodStartDatePtrOutputWithContext(context.Context) InstanceDenyMaintenancePeriodStartDatePtrOutput
}

type instanceDenyMaintenancePeriodStartDatePtrType InstanceDenyMaintenancePeriodStartDateArgs

func InstanceDenyMaintenancePeriodStartDatePtr(v *InstanceDenyMaintenancePeriodStartDateArgs) InstanceDenyMaintenancePeriodStartDatePtrInput {
	return (*instanceDenyMaintenancePeriodStartDatePtrType)(v)
}

func (*instanceDenyMaintenancePeriodStartDatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceDenyMaintenancePeriodStartDate)(nil)).Elem()
}

func (i *instanceDenyMaintenancePeriodStartDatePtrType) ToInstanceDenyMaintenancePeriodStartDatePtrOutput() InstanceDenyMaintenancePeriodStartDatePtrOutput {
	return i.ToInstanceDenyMaintenancePeriodStartDatePtrOutputWithContext(context.Background())
}

func (i *instanceDenyMaintenancePeriodStartDatePtrType) ToInstanceDenyMaintenancePeriodStartDatePtrOutputWithContext(ctx context.Context) InstanceDenyMaintenancePeriodStartDatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceDenyMaintenancePeriodStartDatePtrOutput)
}

type InstanceDenyMaintenancePeriodStartDateOutput struct{ *pulumi.OutputState }

func (InstanceDenyMaintenancePeriodStartDateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceDenyMaintenancePeriodStartDate)(nil)).Elem()
}

func (o InstanceDenyMaintenancePeriodStartDateOutput) ToInstanceDenyMaintenancePeriodStartDateOutput() InstanceDenyMaintenancePeriodStartDateOutput {
	return o
}

func (o InstanceDenyMaintenancePeriodStartDateOutput) ToInstanceDenyMaintenancePeriodStartDateOutputWithContext(ctx context.Context) InstanceDenyMaintenancePeriodStartDateOutput {
	return o
}

func (o InstanceDenyMaintenancePeriodStartDateOutput) ToInstanceDenyMaintenancePeriodStartDatePtrOutput() InstanceDenyMaintenancePeriodStartDatePtrOutput {
	return o.ToInstanceDenyMaintenancePeriodStartDatePtrOutputWithContext(context.Background())
}

func (o InstanceDenyMaintenancePeriodStartDateOutput) ToInstanceDenyMaintenancePeriodStartDatePtrOutputWithContext(ctx context.Context) InstanceDenyMaintenancePeriodStartDatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceDenyMaintenancePeriodStartDate) *InstanceDenyMaintenancePeriodStartDate {
		return &v
	}).(InstanceDenyMaintenancePeriodStartDatePtrOutput)
}

// Day of a month. Must be from 1 to 31 and valid for the year and month, or 0
// to specify a year by itself or a year and month where the day isn't significant.
func (o InstanceDenyMaintenancePeriodStartDateOutput) Day() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceDenyMaintenancePeriodStartDate) *int { return v.Day }).(pulumi.IntPtrOutput)
}

// Month of a year. Must be from 1 to 12, or 0 to specify a year without a
// month and day.
func (o InstanceDenyMaintenancePeriodStartDateOutput) Month() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceDenyMaintenancePeriodStartDate) *int { return v.Month }).(pulumi.IntPtrOutput)
}

// Year of the date. Must be from 1 to 9999, or 0 to specify a date without
// a year.
func (o InstanceDenyMaintenancePeriodStartDateOutput) Year() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceDenyMaintenancePeriodStartDate) *int { return v.Year }).(pulumi.IntPtrOutput)
}

type InstanceDenyMaintenancePeriodStartDatePtrOutput struct{ *pulumi.OutputState }

func (InstanceDenyMaintenancePeriodStartDatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceDenyMaintenancePeriodStartDate)(nil)).Elem()
}

func (o InstanceDenyMaintenancePeriodStartDatePtrOutput) ToInstanceDenyMaintenancePeriodStartDatePtrOutput() InstanceDenyMaintenancePeriodStartDatePtrOutput {
	return o
}

func (o InstanceDenyMaintenancePeriodStartDatePtrOutput) ToInstanceDenyMaintenancePeriodStartDatePtrOutputWithContext(ctx context.Context) InstanceDenyMaintenancePeriodStartDatePtrOutput {
	return o
}

func (o InstanceDenyMaintenancePeriodStartDatePtrOutput) Elem() InstanceDenyMaintenancePeriodStartDateOutput {
	return o.ApplyT(func(v *InstanceDenyMaintenancePeriodStartDate) InstanceDenyMaintenancePeriodStartDate {
		if v != nil {
			return *v
		}
		var ret InstanceDenyMaintenancePeriodStartDate
		return ret
	}).(InstanceDenyMaintenancePeriodStartDateOutput)
}

// Day of a month. Must be from 1 to 31 and valid for the year and month, or 0
// to specify a year by itself or a year and month where the day isn't significant.
func (o InstanceDenyMaintenancePeriodStartDatePtrOutput) Day() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceDenyMaintenancePeriodStartDate) *int {
		if v == nil {
			return nil
		}
		return v.Day
	}).(pulumi.IntPtrOutput)
}

// Month of a year. Must be from 1 to 12, or 0 to specify a year without a
// month and day.
func (o InstanceDenyMaintenancePeriodStartDatePtrOutput) Month() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceDenyMaintenancePeriodStartDate) *int {
		if v == nil {
			return nil
		}
		return v.Month
	}).(pulumi.IntPtrOutput)
}

// Year of the date. Must be from 1 to 9999, or 0 to specify a date without
// a year.
func (o InstanceDenyMaintenancePeriodStartDatePtrOutput) Year() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceDenyMaintenancePeriodStartDate) *int {
		if v == nil {
			return nil
		}
		return v.Year
	}).(pulumi.IntPtrOutput)
}

type InstanceDenyMaintenancePeriodTime struct {
	// Hours of day in 24 hour format. Should be from 0 to 23.
	Hours *int `pulumi:"hours"`
	// Minutes of hour of day. Must be from 0 to 59.
	Minutes *int `pulumi:"minutes"`
	// Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
	Nanos *int `pulumi:"nanos"`
	// Seconds of minutes of the time. Must normally be from 0 to 59.
	Seconds *int `pulumi:"seconds"`
}

// InstanceDenyMaintenancePeriodTimeInput is an input type that accepts InstanceDenyMaintenancePeriodTimeArgs and InstanceDenyMaintenancePeriodTimeOutput values.
// You can construct a concrete instance of `InstanceDenyMaintenancePeriodTimeInput` via:
//
//	InstanceDenyMaintenancePeriodTimeArgs{...}
type InstanceDenyMaintenancePeriodTimeInput interface {
	pulumi.Input

	ToInstanceDenyMaintenancePeriodTimeOutput() InstanceDenyMaintenancePeriodTimeOutput
	ToInstanceDenyMaintenancePeriodTimeOutputWithContext(context.Context) InstanceDenyMaintenancePeriodTimeOutput
}

type InstanceDenyMaintenancePeriodTimeArgs struct {
	// Hours of day in 24 hour format. Should be from 0 to 23.
	Hours pulumi.IntPtrInput `pulumi:"hours"`
	// Minutes of hour of day. Must be from 0 to 59.
	Minutes pulumi.IntPtrInput `pulumi:"minutes"`
	// Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
	Nanos pulumi.IntPtrInput `pulumi:"nanos"`
	// Seconds of minutes of the time. Must normally be from 0 to 59.
	Seconds pulumi.IntPtrInput `pulumi:"seconds"`
}

func (InstanceDenyMaintenancePeriodTimeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceDenyMaintenancePeriodTime)(nil)).Elem()
}

func (i InstanceDenyMaintenancePeriodTimeArgs) ToInstanceDenyMaintenancePeriodTimeOutput() InstanceDenyMaintenancePeriodTimeOutput {
	return i.ToInstanceDenyMaintenancePeriodTimeOutputWithContext(context.Background())
}

func (i InstanceDenyMaintenancePeriodTimeArgs) ToInstanceDenyMaintenancePeriodTimeOutputWithContext(ctx context.Context) InstanceDenyMaintenancePeriodTimeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceDenyMaintenancePeriodTimeOutput)
}

func (i InstanceDenyMaintenancePeriodTimeArgs) ToInstanceDenyMaintenancePeriodTimePtrOutput() InstanceDenyMaintenancePeriodTimePtrOutput {
	return i.ToInstanceDenyMaintenancePeriodTimePtrOutputWithContext(context.Background())
}

func (i InstanceDenyMaintenancePeriodTimeArgs) ToInstanceDenyMaintenancePeriodTimePtrOutputWithContext(ctx context.Context) InstanceDenyMaintenancePeriodTimePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceDenyMaintenancePeriodTimeOutput).ToInstanceDenyMaintenancePeriodTimePtrOutputWithContext(ctx)
}

// InstanceDenyMaintenancePeriodTimePtrInput is an input type that accepts InstanceDenyMaintenancePeriodTimeArgs, InstanceDenyMaintenancePeriodTimePtr and InstanceDenyMaintenancePeriodTimePtrOutput values.
// You can construct a concrete instance of `InstanceDenyMaintenancePeriodTimePtrInput` via:
//
//	        InstanceDenyMaintenancePeriodTimeArgs{...}
//
//	or:
//
//	        nil
type InstanceDenyMaintenancePeriodTimePtrInput interface {
	pulumi.Input

	ToInstanceDenyMaintenancePeriodTimePtrOutput() InstanceDenyMaintenancePeriodTimePtrOutput
	ToInstanceDenyMaintenancePeriodTimePtrOutputWithContext(context.Context) InstanceDenyMaintenancePeriodTimePtrOutput
}

type instanceDenyMaintenancePeriodTimePtrType InstanceDenyMaintenancePeriodTimeArgs

func InstanceDenyMaintenancePeriodTimePtr(v *InstanceDenyMaintenancePeriodTimeArgs) InstanceDenyMaintenancePeriodTimePtrInput {
	return (*instanceDenyMaintenancePeriodTimePtrType)(v)
}

func (*instanceDenyMaintenancePeriodTimePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceDenyMaintenancePeriodTime)(nil)).Elem()
}

func (i *instanceDenyMaintenancePeriodTimePtrType) ToInstanceDenyMaintenancePeriodTimePtrOutput() InstanceDenyMaintenancePeriodTimePtrOutput {
	return i.ToInstanceDenyMaintenancePeriodTimePtrOutputWithContext(context.Background())
}

func (i *instanceDenyMaintenancePeriodTimePtrType) ToInstanceDenyMaintenancePeriodTimePtrOutputWithContext(ctx context.Context) InstanceDenyMaintenancePeriodTimePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceDenyMaintenancePeriodTimePtrOutput)
}

type InstanceDenyMaintenancePeriodTimeOutput struct{ *pulumi.OutputState }

func (InstanceDenyMaintenancePeriodTimeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceDenyMaintenancePeriodTime)(nil)).Elem()
}

func (o InstanceDenyMaintenancePeriodTimeOutput) ToInstanceDenyMaintenancePeriodTimeOutput() InstanceDenyMaintenancePeriodTimeOutput {
	return o
}

func (o InstanceDenyMaintenancePeriodTimeOutput) ToInstanceDenyMaintenancePeriodTimeOutputWithContext(ctx context.Context) InstanceDenyMaintenancePeriodTimeOutput {
	return o
}

func (o InstanceDenyMaintenancePeriodTimeOutput) ToInstanceDenyMaintenancePeriodTimePtrOutput() InstanceDenyMaintenancePeriodTimePtrOutput {
	return o.ToInstanceDenyMaintenancePeriodTimePtrOutputWithContext(context.Background())
}

func (o InstanceDenyMaintenancePeriodTimeOutput) ToInstanceDenyMaintenancePeriodTimePtrOutputWithContext(ctx context.Context) InstanceDenyMaintenancePeriodTimePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceDenyMaintenancePeriodTime) *InstanceDenyMaintenancePeriodTime {
		return &v
	}).(InstanceDenyMaintenancePeriodTimePtrOutput)
}

// Hours of day in 24 hour format. Should be from 0 to 23.
func (o InstanceDenyMaintenancePeriodTimeOutput) Hours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceDenyMaintenancePeriodTime) *int { return v.Hours }).(pulumi.IntPtrOutput)
}

// Minutes of hour of day. Must be from 0 to 59.
func (o InstanceDenyMaintenancePeriodTimeOutput) Minutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceDenyMaintenancePeriodTime) *int { return v.Minutes }).(pulumi.IntPtrOutput)
}

// Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
func (o InstanceDenyMaintenancePeriodTimeOutput) Nanos() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceDenyMaintenancePeriodTime) *int { return v.Nanos }).(pulumi.IntPtrOutput)
}

// Seconds of minutes of the time. Must normally be from 0 to 59.
func (o InstanceDenyMaintenancePeriodTimeOutput) Seconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceDenyMaintenancePeriodTime) *int { return v.Seconds }).(pulumi.IntPtrOutput)
}

type InstanceDenyMaintenancePeriodTimePtrOutput struct{ *pulumi.OutputState }

func (InstanceDenyMaintenancePeriodTimePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceDenyMaintenancePeriodTime)(nil)).Elem()
}

func (o InstanceDenyMaintenancePeriodTimePtrOutput) ToInstanceDenyMaintenancePeriodTimePtrOutput() InstanceDenyMaintenancePeriodTimePtrOutput {
	return o
}

func (o InstanceDenyMaintenancePeriodTimePtrOutput) ToInstanceDenyMaintenancePeriodTimePtrOutputWithContext(ctx context.Context) InstanceDenyMaintenancePeriodTimePtrOutput {
	return o
}

func (o InstanceDenyMaintenancePeriodTimePtrOutput) Elem() InstanceDenyMaintenancePeriodTimeOutput {
	return o.ApplyT(func(v *InstanceDenyMaintenancePeriodTime) InstanceDenyMaintenancePeriodTime {
		if v != nil {
			return *v
		}
		var ret InstanceDenyMaintenancePeriodTime
		return ret
	}).(InstanceDenyMaintenancePeriodTimeOutput)
}

// Hours of day in 24 hour format. Should be from 0 to 23.
func (o InstanceDenyMaintenancePeriodTimePtrOutput) Hours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceDenyMaintenancePeriodTime) *int {
		if v == nil {
			return nil
		}
		return v.Hours
	}).(pulumi.IntPtrOutput)
}

// Minutes of hour of day. Must be from 0 to 59.
func (o InstanceDenyMaintenancePeriodTimePtrOutput) Minutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceDenyMaintenancePeriodTime) *int {
		if v == nil {
			return nil
		}
		return v.Minutes
	}).(pulumi.IntPtrOutput)
}

// Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
func (o InstanceDenyMaintenancePeriodTimePtrOutput) Nanos() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceDenyMaintenancePeriodTime) *int {
		if v == nil {
			return nil
		}
		return v.Nanos
	}).(pulumi.IntPtrOutput)
}

// Seconds of minutes of the time. Must normally be from 0 to 59.
func (o InstanceDenyMaintenancePeriodTimePtrOutput) Seconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceDenyMaintenancePeriodTime) *int {
		if v == nil {
			return nil
		}
		return v.Seconds
	}).(pulumi.IntPtrOutput)
}

type InstanceEncryptionConfig struct {
	// Name of the customer managed encryption key (CMEK) in KMS.
	KmsKeyName *string `pulumi:"kmsKeyName"`
	// (Output)
	// Full name and version of the CMEK key currently in use to encrypt Looker data.
	KmsKeyNameVersion *string `pulumi:"kmsKeyNameVersion"`
	// (Output)
	// Status of the customer managed encryption key (CMEK) in KMS.
	KmsKeyState *string `pulumi:"kmsKeyState"`
}

// InstanceEncryptionConfigInput is an input type that accepts InstanceEncryptionConfigArgs and InstanceEncryptionConfigOutput values.
// You can construct a concrete instance of `InstanceEncryptionConfigInput` via:
//
//	InstanceEncryptionConfigArgs{...}
type InstanceEncryptionConfigInput interface {
	pulumi.Input

	ToInstanceEncryptionConfigOutput() InstanceEncryptionConfigOutput
	ToInstanceEncryptionConfigOutputWithContext(context.Context) InstanceEncryptionConfigOutput
}

type InstanceEncryptionConfigArgs struct {
	// Name of the customer managed encryption key (CMEK) in KMS.
	KmsKeyName pulumi.StringPtrInput `pulumi:"kmsKeyName"`
	// (Output)
	// Full name and version of the CMEK key currently in use to encrypt Looker data.
	KmsKeyNameVersion pulumi.StringPtrInput `pulumi:"kmsKeyNameVersion"`
	// (Output)
	// Status of the customer managed encryption key (CMEK) in KMS.
	KmsKeyState pulumi.StringPtrInput `pulumi:"kmsKeyState"`
}

func (InstanceEncryptionConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceEncryptionConfig)(nil)).Elem()
}

func (i InstanceEncryptionConfigArgs) ToInstanceEncryptionConfigOutput() InstanceEncryptionConfigOutput {
	return i.ToInstanceEncryptionConfigOutputWithContext(context.Background())
}

func (i InstanceEncryptionConfigArgs) ToInstanceEncryptionConfigOutputWithContext(ctx context.Context) InstanceEncryptionConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceEncryptionConfigOutput)
}

func (i InstanceEncryptionConfigArgs) ToInstanceEncryptionConfigPtrOutput() InstanceEncryptionConfigPtrOutput {
	return i.ToInstanceEncryptionConfigPtrOutputWithContext(context.Background())
}

func (i InstanceEncryptionConfigArgs) ToInstanceEncryptionConfigPtrOutputWithContext(ctx context.Context) InstanceEncryptionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceEncryptionConfigOutput).ToInstanceEncryptionConfigPtrOutputWithContext(ctx)
}

// InstanceEncryptionConfigPtrInput is an input type that accepts InstanceEncryptionConfigArgs, InstanceEncryptionConfigPtr and InstanceEncryptionConfigPtrOutput values.
// You can construct a concrete instance of `InstanceEncryptionConfigPtrInput` via:
//
//	        InstanceEncryptionConfigArgs{...}
//
//	or:
//
//	        nil
type InstanceEncryptionConfigPtrInput interface {
	pulumi.Input

	ToInstanceEncryptionConfigPtrOutput() InstanceEncryptionConfigPtrOutput
	ToInstanceEncryptionConfigPtrOutputWithContext(context.Context) InstanceEncryptionConfigPtrOutput
}

type instanceEncryptionConfigPtrType InstanceEncryptionConfigArgs

func InstanceEncryptionConfigPtr(v *InstanceEncryptionConfigArgs) InstanceEncryptionConfigPtrInput {
	return (*instanceEncryptionConfigPtrType)(v)
}

func (*instanceEncryptionConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceEncryptionConfig)(nil)).Elem()
}

func (i *instanceEncryptionConfigPtrType) ToInstanceEncryptionConfigPtrOutput() InstanceEncryptionConfigPtrOutput {
	return i.ToInstanceEncryptionConfigPtrOutputWithContext(context.Background())
}

func (i *instanceEncryptionConfigPtrType) ToInstanceEncryptionConfigPtrOutputWithContext(ctx context.Context) InstanceEncryptionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceEncryptionConfigPtrOutput)
}

type InstanceEncryptionConfigOutput struct{ *pulumi.OutputState }

func (InstanceEncryptionConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceEncryptionConfig)(nil)).Elem()
}

func (o InstanceEncryptionConfigOutput) ToInstanceEncryptionConfigOutput() InstanceEncryptionConfigOutput {
	return o
}

func (o InstanceEncryptionConfigOutput) ToInstanceEncryptionConfigOutputWithContext(ctx context.Context) InstanceEncryptionConfigOutput {
	return o
}

func (o InstanceEncryptionConfigOutput) ToInstanceEncryptionConfigPtrOutput() InstanceEncryptionConfigPtrOutput {
	return o.ToInstanceEncryptionConfigPtrOutputWithContext(context.Background())
}

func (o InstanceEncryptionConfigOutput) ToInstanceEncryptionConfigPtrOutputWithContext(ctx context.Context) InstanceEncryptionConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceEncryptionConfig) *InstanceEncryptionConfig {
		return &v
	}).(InstanceEncryptionConfigPtrOutput)
}

// Name of the customer managed encryption key (CMEK) in KMS.
func (o InstanceEncryptionConfigOutput) KmsKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceEncryptionConfig) *string { return v.KmsKeyName }).(pulumi.StringPtrOutput)
}

// (Output)
// Full name and version of the CMEK key currently in use to encrypt Looker data.
func (o InstanceEncryptionConfigOutput) KmsKeyNameVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceEncryptionConfig) *string { return v.KmsKeyNameVersion }).(pulumi.StringPtrOutput)
}

// (Output)
// Status of the customer managed encryption key (CMEK) in KMS.
func (o InstanceEncryptionConfigOutput) KmsKeyState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceEncryptionConfig) *string { return v.KmsKeyState }).(pulumi.StringPtrOutput)
}

type InstanceEncryptionConfigPtrOutput struct{ *pulumi.OutputState }

func (InstanceEncryptionConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceEncryptionConfig)(nil)).Elem()
}

func (o InstanceEncryptionConfigPtrOutput) ToInstanceEncryptionConfigPtrOutput() InstanceEncryptionConfigPtrOutput {
	return o
}

func (o InstanceEncryptionConfigPtrOutput) ToInstanceEncryptionConfigPtrOutputWithContext(ctx context.Context) InstanceEncryptionConfigPtrOutput {
	return o
}

func (o InstanceEncryptionConfigPtrOutput) Elem() InstanceEncryptionConfigOutput {
	return o.ApplyT(func(v *InstanceEncryptionConfig) InstanceEncryptionConfig {
		if v != nil {
			return *v
		}
		var ret InstanceEncryptionConfig
		return ret
	}).(InstanceEncryptionConfigOutput)
}

// Name of the customer managed encryption key (CMEK) in KMS.
func (o InstanceEncryptionConfigPtrOutput) KmsKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceEncryptionConfig) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyName
	}).(pulumi.StringPtrOutput)
}

// (Output)
// Full name and version of the CMEK key currently in use to encrypt Looker data.
func (o InstanceEncryptionConfigPtrOutput) KmsKeyNameVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceEncryptionConfig) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyNameVersion
	}).(pulumi.StringPtrOutput)
}

// (Output)
// Status of the customer managed encryption key (CMEK) in KMS.
func (o InstanceEncryptionConfigPtrOutput) KmsKeyState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceEncryptionConfig) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyState
	}).(pulumi.StringPtrOutput)
}

type InstanceMaintenanceWindow struct {
	// Required. Day of the week for this MaintenanceWindow (in UTC).
	// - MONDAY: Monday
	// - TUESDAY: Tuesday
	// - WEDNESDAY: Wednesday
	// - THURSDAY: Thursday
	// - FRIDAY: Friday
	// - SATURDAY: Saturday
	// - SUNDAY: Sunday
	//   Possible values are: `MONDAY`, `TUESDAY`, `WEDNESDAY`, `THURSDAY`, `FRIDAY`, `SATURDAY`, `SUNDAY`.
	DayOfWeek string `pulumi:"dayOfWeek"`
	// Required. Start time of the window in UTC time.
	// Structure is documented below.
	StartTime InstanceMaintenanceWindowStartTime `pulumi:"startTime"`
}

// InstanceMaintenanceWindowInput is an input type that accepts InstanceMaintenanceWindowArgs and InstanceMaintenanceWindowOutput values.
// You can construct a concrete instance of `InstanceMaintenanceWindowInput` via:
//
//	InstanceMaintenanceWindowArgs{...}
type InstanceMaintenanceWindowInput interface {
	pulumi.Input

	ToInstanceMaintenanceWindowOutput() InstanceMaintenanceWindowOutput
	ToInstanceMaintenanceWindowOutputWithContext(context.Context) InstanceMaintenanceWindowOutput
}

type InstanceMaintenanceWindowArgs struct {
	// Required. Day of the week for this MaintenanceWindow (in UTC).
	// - MONDAY: Monday
	// - TUESDAY: Tuesday
	// - WEDNESDAY: Wednesday
	// - THURSDAY: Thursday
	// - FRIDAY: Friday
	// - SATURDAY: Saturday
	// - SUNDAY: Sunday
	//   Possible values are: `MONDAY`, `TUESDAY`, `WEDNESDAY`, `THURSDAY`, `FRIDAY`, `SATURDAY`, `SUNDAY`.
	DayOfWeek pulumi.StringInput `pulumi:"dayOfWeek"`
	// Required. Start time of the window in UTC time.
	// Structure is documented below.
	StartTime InstanceMaintenanceWindowStartTimeInput `pulumi:"startTime"`
}

func (InstanceMaintenanceWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceMaintenanceWindow)(nil)).Elem()
}

func (i InstanceMaintenanceWindowArgs) ToInstanceMaintenanceWindowOutput() InstanceMaintenanceWindowOutput {
	return i.ToInstanceMaintenanceWindowOutputWithContext(context.Background())
}

func (i InstanceMaintenanceWindowArgs) ToInstanceMaintenanceWindowOutputWithContext(ctx context.Context) InstanceMaintenanceWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMaintenanceWindowOutput)
}

func (i InstanceMaintenanceWindowArgs) ToInstanceMaintenanceWindowPtrOutput() InstanceMaintenanceWindowPtrOutput {
	return i.ToInstanceMaintenanceWindowPtrOutputWithContext(context.Background())
}

func (i InstanceMaintenanceWindowArgs) ToInstanceMaintenanceWindowPtrOutputWithContext(ctx context.Context) InstanceMaintenanceWindowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMaintenanceWindowOutput).ToInstanceMaintenanceWindowPtrOutputWithContext(ctx)
}

// InstanceMaintenanceWindowPtrInput is an input type that accepts InstanceMaintenanceWindowArgs, InstanceMaintenanceWindowPtr and InstanceMaintenanceWindowPtrOutput values.
// You can construct a concrete instance of `InstanceMaintenanceWindowPtrInput` via:
//
//	        InstanceMaintenanceWindowArgs{...}
//
//	or:
//
//	        nil
type InstanceMaintenanceWindowPtrInput interface {
	pulumi.Input

	ToInstanceMaintenanceWindowPtrOutput() InstanceMaintenanceWindowPtrOutput
	ToInstanceMaintenanceWindowPtrOutputWithContext(context.Context) InstanceMaintenanceWindowPtrOutput
}

type instanceMaintenanceWindowPtrType InstanceMaintenanceWindowArgs

func InstanceMaintenanceWindowPtr(v *InstanceMaintenanceWindowArgs) InstanceMaintenanceWindowPtrInput {
	return (*instanceMaintenanceWindowPtrType)(v)
}

func (*instanceMaintenanceWindowPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceMaintenanceWindow)(nil)).Elem()
}

func (i *instanceMaintenanceWindowPtrType) ToInstanceMaintenanceWindowPtrOutput() InstanceMaintenanceWindowPtrOutput {
	return i.ToInstanceMaintenanceWindowPtrOutputWithContext(context.Background())
}

func (i *instanceMaintenanceWindowPtrType) ToInstanceMaintenanceWindowPtrOutputWithContext(ctx context.Context) InstanceMaintenanceWindowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMaintenanceWindowPtrOutput)
}

type InstanceMaintenanceWindowOutput struct{ *pulumi.OutputState }

func (InstanceMaintenanceWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceMaintenanceWindow)(nil)).Elem()
}

func (o InstanceMaintenanceWindowOutput) ToInstanceMaintenanceWindowOutput() InstanceMaintenanceWindowOutput {
	return o
}

func (o InstanceMaintenanceWindowOutput) ToInstanceMaintenanceWindowOutputWithContext(ctx context.Context) InstanceMaintenanceWindowOutput {
	return o
}

func (o InstanceMaintenanceWindowOutput) ToInstanceMaintenanceWindowPtrOutput() InstanceMaintenanceWindowPtrOutput {
	return o.ToInstanceMaintenanceWindowPtrOutputWithContext(context.Background())
}

func (o InstanceMaintenanceWindowOutput) ToInstanceMaintenanceWindowPtrOutputWithContext(ctx context.Context) InstanceMaintenanceWindowPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceMaintenanceWindow) *InstanceMaintenanceWindow {
		return &v
	}).(InstanceMaintenanceWindowPtrOutput)
}

// Required. Day of the week for this MaintenanceWindow (in UTC).
//   - MONDAY: Monday
//   - TUESDAY: Tuesday
//   - WEDNESDAY: Wednesday
//   - THURSDAY: Thursday
//   - FRIDAY: Friday
//   - SATURDAY: Saturday
//   - SUNDAY: Sunday
//     Possible values are: `MONDAY`, `TUESDAY`, `WEDNESDAY`, `THURSDAY`, `FRIDAY`, `SATURDAY`, `SUNDAY`.
func (o InstanceMaintenanceWindowOutput) DayOfWeek() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceMaintenanceWindow) string { return v.DayOfWeek }).(pulumi.StringOutput)
}

// Required. Start time of the window in UTC time.
// Structure is documented below.
func (o InstanceMaintenanceWindowOutput) StartTime() InstanceMaintenanceWindowStartTimeOutput {
	return o.ApplyT(func(v InstanceMaintenanceWindow) InstanceMaintenanceWindowStartTime { return v.StartTime }).(InstanceMaintenanceWindowStartTimeOutput)
}

type InstanceMaintenanceWindowPtrOutput struct{ *pulumi.OutputState }

func (InstanceMaintenanceWindowPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceMaintenanceWindow)(nil)).Elem()
}

func (o InstanceMaintenanceWindowPtrOutput) ToInstanceMaintenanceWindowPtrOutput() InstanceMaintenanceWindowPtrOutput {
	return o
}

func (o InstanceMaintenanceWindowPtrOutput) ToInstanceMaintenanceWindowPtrOutputWithContext(ctx context.Context) InstanceMaintenanceWindowPtrOutput {
	return o
}

func (o InstanceMaintenanceWindowPtrOutput) Elem() InstanceMaintenanceWindowOutput {
	return o.ApplyT(func(v *InstanceMaintenanceWindow) InstanceMaintenanceWindow {
		if v != nil {
			return *v
		}
		var ret InstanceMaintenanceWindow
		return ret
	}).(InstanceMaintenanceWindowOutput)
}

// Required. Day of the week for this MaintenanceWindow (in UTC).
//   - MONDAY: Monday
//   - TUESDAY: Tuesday
//   - WEDNESDAY: Wednesday
//   - THURSDAY: Thursday
//   - FRIDAY: Friday
//   - SATURDAY: Saturday
//   - SUNDAY: Sunday
//     Possible values are: `MONDAY`, `TUESDAY`, `WEDNESDAY`, `THURSDAY`, `FRIDAY`, `SATURDAY`, `SUNDAY`.
func (o InstanceMaintenanceWindowPtrOutput) DayOfWeek() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceMaintenanceWindow) *string {
		if v == nil {
			return nil
		}
		return &v.DayOfWeek
	}).(pulumi.StringPtrOutput)
}

// Required. Start time of the window in UTC time.
// Structure is documented below.
func (o InstanceMaintenanceWindowPtrOutput) StartTime() InstanceMaintenanceWindowStartTimePtrOutput {
	return o.ApplyT(func(v *InstanceMaintenanceWindow) *InstanceMaintenanceWindowStartTime {
		if v == nil {
			return nil
		}
		return &v.StartTime
	}).(InstanceMaintenanceWindowStartTimePtrOutput)
}

type InstanceMaintenanceWindowStartTime struct {
	// Hours of day in 24 hour format. Should be from 0 to 23.
	Hours *int `pulumi:"hours"`
	// Minutes of hour of day. Must be from 0 to 59.
	Minutes *int `pulumi:"minutes"`
	// Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
	Nanos *int `pulumi:"nanos"`
	// Seconds of minutes of the time. Must normally be from 0 to 59.
	Seconds *int `pulumi:"seconds"`
}

// InstanceMaintenanceWindowStartTimeInput is an input type that accepts InstanceMaintenanceWindowStartTimeArgs and InstanceMaintenanceWindowStartTimeOutput values.
// You can construct a concrete instance of `InstanceMaintenanceWindowStartTimeInput` via:
//
//	InstanceMaintenanceWindowStartTimeArgs{...}
type InstanceMaintenanceWindowStartTimeInput interface {
	pulumi.Input

	ToInstanceMaintenanceWindowStartTimeOutput() InstanceMaintenanceWindowStartTimeOutput
	ToInstanceMaintenanceWindowStartTimeOutputWithContext(context.Context) InstanceMaintenanceWindowStartTimeOutput
}

type InstanceMaintenanceWindowStartTimeArgs struct {
	// Hours of day in 24 hour format. Should be from 0 to 23.
	Hours pulumi.IntPtrInput `pulumi:"hours"`
	// Minutes of hour of day. Must be from 0 to 59.
	Minutes pulumi.IntPtrInput `pulumi:"minutes"`
	// Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
	Nanos pulumi.IntPtrInput `pulumi:"nanos"`
	// Seconds of minutes of the time. Must normally be from 0 to 59.
	Seconds pulumi.IntPtrInput `pulumi:"seconds"`
}

func (InstanceMaintenanceWindowStartTimeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceMaintenanceWindowStartTime)(nil)).Elem()
}

func (i InstanceMaintenanceWindowStartTimeArgs) ToInstanceMaintenanceWindowStartTimeOutput() InstanceMaintenanceWindowStartTimeOutput {
	return i.ToInstanceMaintenanceWindowStartTimeOutputWithContext(context.Background())
}

func (i InstanceMaintenanceWindowStartTimeArgs) ToInstanceMaintenanceWindowStartTimeOutputWithContext(ctx context.Context) InstanceMaintenanceWindowStartTimeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMaintenanceWindowStartTimeOutput)
}

func (i InstanceMaintenanceWindowStartTimeArgs) ToInstanceMaintenanceWindowStartTimePtrOutput() InstanceMaintenanceWindowStartTimePtrOutput {
	return i.ToInstanceMaintenanceWindowStartTimePtrOutputWithContext(context.Background())
}

func (i InstanceMaintenanceWindowStartTimeArgs) ToInstanceMaintenanceWindowStartTimePtrOutputWithContext(ctx context.Context) InstanceMaintenanceWindowStartTimePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMaintenanceWindowStartTimeOutput).ToInstanceMaintenanceWindowStartTimePtrOutputWithContext(ctx)
}

// InstanceMaintenanceWindowStartTimePtrInput is an input type that accepts InstanceMaintenanceWindowStartTimeArgs, InstanceMaintenanceWindowStartTimePtr and InstanceMaintenanceWindowStartTimePtrOutput values.
// You can construct a concrete instance of `InstanceMaintenanceWindowStartTimePtrInput` via:
//
//	        InstanceMaintenanceWindowStartTimeArgs{...}
//
//	or:
//
//	        nil
type InstanceMaintenanceWindowStartTimePtrInput interface {
	pulumi.Input

	ToInstanceMaintenanceWindowStartTimePtrOutput() InstanceMaintenanceWindowStartTimePtrOutput
	ToInstanceMaintenanceWindowStartTimePtrOutputWithContext(context.Context) InstanceMaintenanceWindowStartTimePtrOutput
}

type instanceMaintenanceWindowStartTimePtrType InstanceMaintenanceWindowStartTimeArgs

func InstanceMaintenanceWindowStartTimePtr(v *InstanceMaintenanceWindowStartTimeArgs) InstanceMaintenanceWindowStartTimePtrInput {
	return (*instanceMaintenanceWindowStartTimePtrType)(v)
}

func (*instanceMaintenanceWindowStartTimePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceMaintenanceWindowStartTime)(nil)).Elem()
}

func (i *instanceMaintenanceWindowStartTimePtrType) ToInstanceMaintenanceWindowStartTimePtrOutput() InstanceMaintenanceWindowStartTimePtrOutput {
	return i.ToInstanceMaintenanceWindowStartTimePtrOutputWithContext(context.Background())
}

func (i *instanceMaintenanceWindowStartTimePtrType) ToInstanceMaintenanceWindowStartTimePtrOutputWithContext(ctx context.Context) InstanceMaintenanceWindowStartTimePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMaintenanceWindowStartTimePtrOutput)
}

type InstanceMaintenanceWindowStartTimeOutput struct{ *pulumi.OutputState }

func (InstanceMaintenanceWindowStartTimeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceMaintenanceWindowStartTime)(nil)).Elem()
}

func (o InstanceMaintenanceWindowStartTimeOutput) ToInstanceMaintenanceWindowStartTimeOutput() InstanceMaintenanceWindowStartTimeOutput {
	return o
}

func (o InstanceMaintenanceWindowStartTimeOutput) ToInstanceMaintenanceWindowStartTimeOutputWithContext(ctx context.Context) InstanceMaintenanceWindowStartTimeOutput {
	return o
}

func (o InstanceMaintenanceWindowStartTimeOutput) ToInstanceMaintenanceWindowStartTimePtrOutput() InstanceMaintenanceWindowStartTimePtrOutput {
	return o.ToInstanceMaintenanceWindowStartTimePtrOutputWithContext(context.Background())
}

func (o InstanceMaintenanceWindowStartTimeOutput) ToInstanceMaintenanceWindowStartTimePtrOutputWithContext(ctx context.Context) InstanceMaintenanceWindowStartTimePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceMaintenanceWindowStartTime) *InstanceMaintenanceWindowStartTime {
		return &v
	}).(InstanceMaintenanceWindowStartTimePtrOutput)
}

// Hours of day in 24 hour format. Should be from 0 to 23.
func (o InstanceMaintenanceWindowStartTimeOutput) Hours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceMaintenanceWindowStartTime) *int { return v.Hours }).(pulumi.IntPtrOutput)
}

// Minutes of hour of day. Must be from 0 to 59.
func (o InstanceMaintenanceWindowStartTimeOutput) Minutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceMaintenanceWindowStartTime) *int { return v.Minutes }).(pulumi.IntPtrOutput)
}

// Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
func (o InstanceMaintenanceWindowStartTimeOutput) Nanos() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceMaintenanceWindowStartTime) *int { return v.Nanos }).(pulumi.IntPtrOutput)
}

// Seconds of minutes of the time. Must normally be from 0 to 59.
func (o InstanceMaintenanceWindowStartTimeOutput) Seconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceMaintenanceWindowStartTime) *int { return v.Seconds }).(pulumi.IntPtrOutput)
}

type InstanceMaintenanceWindowStartTimePtrOutput struct{ *pulumi.OutputState }

func (InstanceMaintenanceWindowStartTimePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceMaintenanceWindowStartTime)(nil)).Elem()
}

func (o InstanceMaintenanceWindowStartTimePtrOutput) ToInstanceMaintenanceWindowStartTimePtrOutput() InstanceMaintenanceWindowStartTimePtrOutput {
	return o
}

func (o InstanceMaintenanceWindowStartTimePtrOutput) ToInstanceMaintenanceWindowStartTimePtrOutputWithContext(ctx context.Context) InstanceMaintenanceWindowStartTimePtrOutput {
	return o
}

func (o InstanceMaintenanceWindowStartTimePtrOutput) Elem() InstanceMaintenanceWindowStartTimeOutput {
	return o.ApplyT(func(v *InstanceMaintenanceWindowStartTime) InstanceMaintenanceWindowStartTime {
		if v != nil {
			return *v
		}
		var ret InstanceMaintenanceWindowStartTime
		return ret
	}).(InstanceMaintenanceWindowStartTimeOutput)
}

// Hours of day in 24 hour format. Should be from 0 to 23.
func (o InstanceMaintenanceWindowStartTimePtrOutput) Hours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceMaintenanceWindowStartTime) *int {
		if v == nil {
			return nil
		}
		return v.Hours
	}).(pulumi.IntPtrOutput)
}

// Minutes of hour of day. Must be from 0 to 59.
func (o InstanceMaintenanceWindowStartTimePtrOutput) Minutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceMaintenanceWindowStartTime) *int {
		if v == nil {
			return nil
		}
		return v.Minutes
	}).(pulumi.IntPtrOutput)
}

// Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
func (o InstanceMaintenanceWindowStartTimePtrOutput) Nanos() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceMaintenanceWindowStartTime) *int {
		if v == nil {
			return nil
		}
		return v.Nanos
	}).(pulumi.IntPtrOutput)
}

// Seconds of minutes of the time. Must normally be from 0 to 59.
func (o InstanceMaintenanceWindowStartTimePtrOutput) Seconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceMaintenanceWindowStartTime) *int {
		if v == nil {
			return nil
		}
		return v.Seconds
	}).(pulumi.IntPtrOutput)
}

type InstanceOauthConfig struct {
	// The client ID for the Oauth config.
	ClientId string `pulumi:"clientId"`
	// The client secret for the Oauth config.
	ClientSecret string `pulumi:"clientSecret"`
}

// InstanceOauthConfigInput is an input type that accepts InstanceOauthConfigArgs and InstanceOauthConfigOutput values.
// You can construct a concrete instance of `InstanceOauthConfigInput` via:
//
//	InstanceOauthConfigArgs{...}
type InstanceOauthConfigInput interface {
	pulumi.Input

	ToInstanceOauthConfigOutput() InstanceOauthConfigOutput
	ToInstanceOauthConfigOutputWithContext(context.Context) InstanceOauthConfigOutput
}

type InstanceOauthConfigArgs struct {
	// The client ID for the Oauth config.
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// The client secret for the Oauth config.
	ClientSecret pulumi.StringInput `pulumi:"clientSecret"`
}

func (InstanceOauthConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceOauthConfig)(nil)).Elem()
}

func (i InstanceOauthConfigArgs) ToInstanceOauthConfigOutput() InstanceOauthConfigOutput {
	return i.ToInstanceOauthConfigOutputWithContext(context.Background())
}

func (i InstanceOauthConfigArgs) ToInstanceOauthConfigOutputWithContext(ctx context.Context) InstanceOauthConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceOauthConfigOutput)
}

func (i InstanceOauthConfigArgs) ToInstanceOauthConfigPtrOutput() InstanceOauthConfigPtrOutput {
	return i.ToInstanceOauthConfigPtrOutputWithContext(context.Background())
}

func (i InstanceOauthConfigArgs) ToInstanceOauthConfigPtrOutputWithContext(ctx context.Context) InstanceOauthConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceOauthConfigOutput).ToInstanceOauthConfigPtrOutputWithContext(ctx)
}

// InstanceOauthConfigPtrInput is an input type that accepts InstanceOauthConfigArgs, InstanceOauthConfigPtr and InstanceOauthConfigPtrOutput values.
// You can construct a concrete instance of `InstanceOauthConfigPtrInput` via:
//
//	        InstanceOauthConfigArgs{...}
//
//	or:
//
//	        nil
type InstanceOauthConfigPtrInput interface {
	pulumi.Input

	ToInstanceOauthConfigPtrOutput() InstanceOauthConfigPtrOutput
	ToInstanceOauthConfigPtrOutputWithContext(context.Context) InstanceOauthConfigPtrOutput
}

type instanceOauthConfigPtrType InstanceOauthConfigArgs

func InstanceOauthConfigPtr(v *InstanceOauthConfigArgs) InstanceOauthConfigPtrInput {
	return (*instanceOauthConfigPtrType)(v)
}

func (*instanceOauthConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceOauthConfig)(nil)).Elem()
}

func (i *instanceOauthConfigPtrType) ToInstanceOauthConfigPtrOutput() InstanceOauthConfigPtrOutput {
	return i.ToInstanceOauthConfigPtrOutputWithContext(context.Background())
}

func (i *instanceOauthConfigPtrType) ToInstanceOauthConfigPtrOutputWithContext(ctx context.Context) InstanceOauthConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceOauthConfigPtrOutput)
}

type InstanceOauthConfigOutput struct{ *pulumi.OutputState }

func (InstanceOauthConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceOauthConfig)(nil)).Elem()
}

func (o InstanceOauthConfigOutput) ToInstanceOauthConfigOutput() InstanceOauthConfigOutput {
	return o
}

func (o InstanceOauthConfigOutput) ToInstanceOauthConfigOutputWithContext(ctx context.Context) InstanceOauthConfigOutput {
	return o
}

func (o InstanceOauthConfigOutput) ToInstanceOauthConfigPtrOutput() InstanceOauthConfigPtrOutput {
	return o.ToInstanceOauthConfigPtrOutputWithContext(context.Background())
}

func (o InstanceOauthConfigOutput) ToInstanceOauthConfigPtrOutputWithContext(ctx context.Context) InstanceOauthConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceOauthConfig) *InstanceOauthConfig {
		return &v
	}).(InstanceOauthConfigPtrOutput)
}

// The client ID for the Oauth config.
func (o InstanceOauthConfigOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceOauthConfig) string { return v.ClientId }).(pulumi.StringOutput)
}

// The client secret for the Oauth config.
func (o InstanceOauthConfigOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceOauthConfig) string { return v.ClientSecret }).(pulumi.StringOutput)
}

type InstanceOauthConfigPtrOutput struct{ *pulumi.OutputState }

func (InstanceOauthConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceOauthConfig)(nil)).Elem()
}

func (o InstanceOauthConfigPtrOutput) ToInstanceOauthConfigPtrOutput() InstanceOauthConfigPtrOutput {
	return o
}

func (o InstanceOauthConfigPtrOutput) ToInstanceOauthConfigPtrOutputWithContext(ctx context.Context) InstanceOauthConfigPtrOutput {
	return o
}

func (o InstanceOauthConfigPtrOutput) Elem() InstanceOauthConfigOutput {
	return o.ApplyT(func(v *InstanceOauthConfig) InstanceOauthConfig {
		if v != nil {
			return *v
		}
		var ret InstanceOauthConfig
		return ret
	}).(InstanceOauthConfigOutput)
}

// The client ID for the Oauth config.
func (o InstanceOauthConfigPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceOauthConfig) *string {
		if v == nil {
			return nil
		}
		return &v.ClientId
	}).(pulumi.StringPtrOutput)
}

// The client secret for the Oauth config.
func (o InstanceOauthConfigPtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceOauthConfig) *string {
		if v == nil {
			return nil
		}
		return &v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

type InstanceUserMetadata struct {
	// Number of additional Developer Users to allocate to the Looker Instance.
	AdditionalDeveloperUserCount *int `pulumi:"additionalDeveloperUserCount"`
	// Number of additional Standard Users to allocate to the Looker Instance.
	AdditionalStandardUserCount *int `pulumi:"additionalStandardUserCount"`
	// Number of additional Viewer Users to allocate to the Looker Instance.
	AdditionalViewerUserCount *int `pulumi:"additionalViewerUserCount"`
}

// InstanceUserMetadataInput is an input type that accepts InstanceUserMetadataArgs and InstanceUserMetadataOutput values.
// You can construct a concrete instance of `InstanceUserMetadataInput` via:
//
//	InstanceUserMetadataArgs{...}
type InstanceUserMetadataInput interface {
	pulumi.Input

	ToInstanceUserMetadataOutput() InstanceUserMetadataOutput
	ToInstanceUserMetadataOutputWithContext(context.Context) InstanceUserMetadataOutput
}

type InstanceUserMetadataArgs struct {
	// Number of additional Developer Users to allocate to the Looker Instance.
	AdditionalDeveloperUserCount pulumi.IntPtrInput `pulumi:"additionalDeveloperUserCount"`
	// Number of additional Standard Users to allocate to the Looker Instance.
	AdditionalStandardUserCount pulumi.IntPtrInput `pulumi:"additionalStandardUserCount"`
	// Number of additional Viewer Users to allocate to the Looker Instance.
	AdditionalViewerUserCount pulumi.IntPtrInput `pulumi:"additionalViewerUserCount"`
}

func (InstanceUserMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceUserMetadata)(nil)).Elem()
}

func (i InstanceUserMetadataArgs) ToInstanceUserMetadataOutput() InstanceUserMetadataOutput {
	return i.ToInstanceUserMetadataOutputWithContext(context.Background())
}

func (i InstanceUserMetadataArgs) ToInstanceUserMetadataOutputWithContext(ctx context.Context) InstanceUserMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceUserMetadataOutput)
}

func (i InstanceUserMetadataArgs) ToInstanceUserMetadataPtrOutput() InstanceUserMetadataPtrOutput {
	return i.ToInstanceUserMetadataPtrOutputWithContext(context.Background())
}

func (i InstanceUserMetadataArgs) ToInstanceUserMetadataPtrOutputWithContext(ctx context.Context) InstanceUserMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceUserMetadataOutput).ToInstanceUserMetadataPtrOutputWithContext(ctx)
}

// InstanceUserMetadataPtrInput is an input type that accepts InstanceUserMetadataArgs, InstanceUserMetadataPtr and InstanceUserMetadataPtrOutput values.
// You can construct a concrete instance of `InstanceUserMetadataPtrInput` via:
//
//	        InstanceUserMetadataArgs{...}
//
//	or:
//
//	        nil
type InstanceUserMetadataPtrInput interface {
	pulumi.Input

	ToInstanceUserMetadataPtrOutput() InstanceUserMetadataPtrOutput
	ToInstanceUserMetadataPtrOutputWithContext(context.Context) InstanceUserMetadataPtrOutput
}

type instanceUserMetadataPtrType InstanceUserMetadataArgs

func InstanceUserMetadataPtr(v *InstanceUserMetadataArgs) InstanceUserMetadataPtrInput {
	return (*instanceUserMetadataPtrType)(v)
}

func (*instanceUserMetadataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceUserMetadata)(nil)).Elem()
}

func (i *instanceUserMetadataPtrType) ToInstanceUserMetadataPtrOutput() InstanceUserMetadataPtrOutput {
	return i.ToInstanceUserMetadataPtrOutputWithContext(context.Background())
}

func (i *instanceUserMetadataPtrType) ToInstanceUserMetadataPtrOutputWithContext(ctx context.Context) InstanceUserMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceUserMetadataPtrOutput)
}

type InstanceUserMetadataOutput struct{ *pulumi.OutputState }

func (InstanceUserMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceUserMetadata)(nil)).Elem()
}

func (o InstanceUserMetadataOutput) ToInstanceUserMetadataOutput() InstanceUserMetadataOutput {
	return o
}

func (o InstanceUserMetadataOutput) ToInstanceUserMetadataOutputWithContext(ctx context.Context) InstanceUserMetadataOutput {
	return o
}

func (o InstanceUserMetadataOutput) ToInstanceUserMetadataPtrOutput() InstanceUserMetadataPtrOutput {
	return o.ToInstanceUserMetadataPtrOutputWithContext(context.Background())
}

func (o InstanceUserMetadataOutput) ToInstanceUserMetadataPtrOutputWithContext(ctx context.Context) InstanceUserMetadataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceUserMetadata) *InstanceUserMetadata {
		return &v
	}).(InstanceUserMetadataPtrOutput)
}

// Number of additional Developer Users to allocate to the Looker Instance.
func (o InstanceUserMetadataOutput) AdditionalDeveloperUserCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceUserMetadata) *int { return v.AdditionalDeveloperUserCount }).(pulumi.IntPtrOutput)
}

// Number of additional Standard Users to allocate to the Looker Instance.
func (o InstanceUserMetadataOutput) AdditionalStandardUserCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceUserMetadata) *int { return v.AdditionalStandardUserCount }).(pulumi.IntPtrOutput)
}

// Number of additional Viewer Users to allocate to the Looker Instance.
func (o InstanceUserMetadataOutput) AdditionalViewerUserCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceUserMetadata) *int { return v.AdditionalViewerUserCount }).(pulumi.IntPtrOutput)
}

type InstanceUserMetadataPtrOutput struct{ *pulumi.OutputState }

func (InstanceUserMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceUserMetadata)(nil)).Elem()
}

func (o InstanceUserMetadataPtrOutput) ToInstanceUserMetadataPtrOutput() InstanceUserMetadataPtrOutput {
	return o
}

func (o InstanceUserMetadataPtrOutput) ToInstanceUserMetadataPtrOutputWithContext(ctx context.Context) InstanceUserMetadataPtrOutput {
	return o
}

func (o InstanceUserMetadataPtrOutput) Elem() InstanceUserMetadataOutput {
	return o.ApplyT(func(v *InstanceUserMetadata) InstanceUserMetadata {
		if v != nil {
			return *v
		}
		var ret InstanceUserMetadata
		return ret
	}).(InstanceUserMetadataOutput)
}

// Number of additional Developer Users to allocate to the Looker Instance.
func (o InstanceUserMetadataPtrOutput) AdditionalDeveloperUserCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceUserMetadata) *int {
		if v == nil {
			return nil
		}
		return v.AdditionalDeveloperUserCount
	}).(pulumi.IntPtrOutput)
}

// Number of additional Standard Users to allocate to the Looker Instance.
func (o InstanceUserMetadataPtrOutput) AdditionalStandardUserCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceUserMetadata) *int {
		if v == nil {
			return nil
		}
		return v.AdditionalStandardUserCount
	}).(pulumi.IntPtrOutput)
}

// Number of additional Viewer Users to allocate to the Looker Instance.
func (o InstanceUserMetadataPtrOutput) AdditionalViewerUserCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceUserMetadata) *int {
		if v == nil {
			return nil
		}
		return v.AdditionalViewerUserCount
	}).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceAdminSettingsInput)(nil)).Elem(), InstanceAdminSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceAdminSettingsPtrInput)(nil)).Elem(), InstanceAdminSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceDenyMaintenancePeriodInput)(nil)).Elem(), InstanceDenyMaintenancePeriodArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceDenyMaintenancePeriodPtrInput)(nil)).Elem(), InstanceDenyMaintenancePeriodArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceDenyMaintenancePeriodEndDateInput)(nil)).Elem(), InstanceDenyMaintenancePeriodEndDateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceDenyMaintenancePeriodEndDatePtrInput)(nil)).Elem(), InstanceDenyMaintenancePeriodEndDateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceDenyMaintenancePeriodStartDateInput)(nil)).Elem(), InstanceDenyMaintenancePeriodStartDateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceDenyMaintenancePeriodStartDatePtrInput)(nil)).Elem(), InstanceDenyMaintenancePeriodStartDateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceDenyMaintenancePeriodTimeInput)(nil)).Elem(), InstanceDenyMaintenancePeriodTimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceDenyMaintenancePeriodTimePtrInput)(nil)).Elem(), InstanceDenyMaintenancePeriodTimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceEncryptionConfigInput)(nil)).Elem(), InstanceEncryptionConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceEncryptionConfigPtrInput)(nil)).Elem(), InstanceEncryptionConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceMaintenanceWindowInput)(nil)).Elem(), InstanceMaintenanceWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceMaintenanceWindowPtrInput)(nil)).Elem(), InstanceMaintenanceWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceMaintenanceWindowStartTimeInput)(nil)).Elem(), InstanceMaintenanceWindowStartTimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceMaintenanceWindowStartTimePtrInput)(nil)).Elem(), InstanceMaintenanceWindowStartTimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceOauthConfigInput)(nil)).Elem(), InstanceOauthConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceOauthConfigPtrInput)(nil)).Elem(), InstanceOauthConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceUserMetadataInput)(nil)).Elem(), InstanceUserMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceUserMetadataPtrInput)(nil)).Elem(), InstanceUserMetadataArgs{})
	pulumi.RegisterOutputType(InstanceAdminSettingsOutput{})
	pulumi.RegisterOutputType(InstanceAdminSettingsPtrOutput{})
	pulumi.RegisterOutputType(InstanceDenyMaintenancePeriodOutput{})
	pulumi.RegisterOutputType(InstanceDenyMaintenancePeriodPtrOutput{})
	pulumi.RegisterOutputType(InstanceDenyMaintenancePeriodEndDateOutput{})
	pulumi.RegisterOutputType(InstanceDenyMaintenancePeriodEndDatePtrOutput{})
	pulumi.RegisterOutputType(InstanceDenyMaintenancePeriodStartDateOutput{})
	pulumi.RegisterOutputType(InstanceDenyMaintenancePeriodStartDatePtrOutput{})
	pulumi.RegisterOutputType(InstanceDenyMaintenancePeriodTimeOutput{})
	pulumi.RegisterOutputType(InstanceDenyMaintenancePeriodTimePtrOutput{})
	pulumi.RegisterOutputType(InstanceEncryptionConfigOutput{})
	pulumi.RegisterOutputType(InstanceEncryptionConfigPtrOutput{})
	pulumi.RegisterOutputType(InstanceMaintenanceWindowOutput{})
	pulumi.RegisterOutputType(InstanceMaintenanceWindowPtrOutput{})
	pulumi.RegisterOutputType(InstanceMaintenanceWindowStartTimeOutput{})
	pulumi.RegisterOutputType(InstanceMaintenanceWindowStartTimePtrOutput{})
	pulumi.RegisterOutputType(InstanceOauthConfigOutput{})
	pulumi.RegisterOutputType(InstanceOauthConfigPtrOutput{})
	pulumi.RegisterOutputType(InstanceUserMetadataOutput{})
	pulumi.RegisterOutputType(InstanceUserMetadataPtrOutput{})
}
