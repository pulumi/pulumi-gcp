// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package netapp

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ### Storage Pool Create Doc
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/compute"
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/netapp"
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/servicenetworking"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			// Create a network or use datasource to reference existing network
//			peeringNetwork, err := compute.NewNetwork(ctx, "peering_network", &compute.NetworkArgs{
//				Name: pulumi.String("test-network"),
//			})
//			if err != nil {
//				return err
//			}
//			// Reserve a CIDR for NetApp Volumes to use
//			// When using shared-VPCs, this resource needs to be created in host project
//			privateIpAlloc, err := compute.NewGlobalAddress(ctx, "private_ip_alloc", &compute.GlobalAddressArgs{
//				Name:         pulumi.String("test-address"),
//				Purpose:      pulumi.String("VPC_PEERING"),
//				AddressType:  pulumi.String("INTERNAL"),
//				PrefixLength: pulumi.Int(16),
//				Network:      peeringNetwork.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			// Create a Private Service Access connection
//			// When using shared-VPCs, this resource needs to be created in host project
//			_default, err := servicenetworking.NewConnection(ctx, "default", &servicenetworking.ConnectionArgs{
//				Network: peeringNetwork.ID(),
//				Service: pulumi.String("netapp.servicenetworking.goog"),
//				ReservedPeeringRanges: pulumi.StringArray{
//					privateIpAlloc.Name,
//				},
//			})
//			if err != nil {
//				return err
//			}
//			// Modify the PSA Connection to allow import/export of custom routes
//			// When using shared-VPCs, this resource needs to be created in host project
//			_, err = compute.NewNetworkPeeringRoutesConfig(ctx, "route_updates", &compute.NetworkPeeringRoutesConfigArgs{
//				Peering:            _default.Peering,
//				Network:            peeringNetwork.Name,
//				ImportCustomRoutes: pulumi.Bool(true),
//				ExportCustomRoutes: pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			// Create a storage pool
//			// Create this resource in the project which is expected to own the volumes
//			_, err = netapp.NewStoragePool(ctx, "test_pool", &netapp.StoragePoolArgs{
//				Name:         pulumi.String("test-pool"),
//				Location:     pulumi.String("us-central1"),
//				ServiceLevel: pulumi.String("PREMIUM"),
//				CapacityGib:  pulumi.String("2048"),
//				Network:      peeringNetwork.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// StoragePool can be imported using any of these accepted formats:
//
// * `projects/{{project}}/locations/{{location}}/storagePools/{{name}}`
//
// * `{{project}}/{{location}}/{{name}}`
//
// * `{{location}}/{{name}}`
//
// When using the `pulumi import` command, StoragePool can be imported using one of the formats above. For example:
//
// ```sh
// $ pulumi import gcp:netapp/storagePool:StoragePool default projects/{{project}}/locations/{{location}}/storagePools/{{name}}
// ```
//
// ```sh
// $ pulumi import gcp:netapp/storagePool:StoragePool default {{project}}/{{location}}/{{name}}
// ```
//
// ```sh
// $ pulumi import gcp:netapp/storagePool:StoragePool default {{location}}/{{name}}
// ```
type StoragePool struct {
	pulumi.CustomResourceState

	// Specifies the Active Directory policy to be used. Format: `projects/{{project}}/locations/{{location}}/activeDirectories/{{name}}`.
	// The policy needs to be in the same location as the storage pool.
	ActiveDirectory pulumi.StringPtrOutput `pulumi:"activeDirectory"`
	// Optional. True if the storage pool supports Auto Tiering enabled volumes. Default is false.
	// Auto-tiering can be enabled after storage pool creation but it can't be disabled once enabled.
	AllowAutoTiering pulumi.BoolPtrOutput `pulumi:"allowAutoTiering"`
	// Available throughput of the storage pool (in MiB/s).
	AvailableThroughputMibps pulumi.Float64Output `pulumi:"availableThroughputMibps"`
	// Capacity of the storage pool (in GiB).
	CapacityGib pulumi.StringOutput `pulumi:"capacityGib"`
	// Optional. True if using Independent Scaling of capacity and performance (Hyperdisk). Default is false.
	CustomPerformanceEnabled pulumi.BoolPtrOutput `pulumi:"customPerformanceEnabled"`
	// An optional description of this resource.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
	EffectiveLabels pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	// Flag indicating that the hot-tier threshold will be auto-increased by 10% of the hot-tier when it hits 100%. Default is true.
	// The increment will kick in only if the new size after increment is still less than or equal to storage pool size.
	EnableHotTierAutoResize pulumi.BoolPtrOutput `pulumi:"enableHotTierAutoResize"`
	// Reports if volumes in the pool are encrypted using a Google-managed encryption key or CMEK.
	EncryptionType pulumi.StringOutput `pulumi:"encryptionType"`
	// Total hot tier capacity for the Storage Pool. It is applicable only to Flex service level.
	// It should be less than the minimum storage pool size and cannot be more than the current storage pool size. It cannot be decreased once set.
	HotTierSizeGib pulumi.StringPtrOutput `pulumi:"hotTierSizeGib"`
	// Specifies the CMEK policy to be used for volume encryption. Format: `projects/{{project}}/locations/{{location}}/kmsConfigs/{{name}}`.
	// The policy needs to be in the same location as the storage pool.
	KmsConfig pulumi.StringPtrOutput `pulumi:"kmsConfig"`
	// Labels as key value pairs. Example: `{ "owner": "Bob", "department": "finance", "purpose": "testing" }`.
	//
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// When enabled, the volumes uses Active Directory as LDAP name service for UID/GID lookups. Required to enable extended group support for NFSv3,
	// using security identifiers for NFSv4.1 or principal names for kerberized NFSv4.1.
	LdapEnabled pulumi.BoolPtrOutput `pulumi:"ldapEnabled"`
	// Name of the location. For zonal Flex pools specify a zone name, in all other cases a region name.
	Location pulumi.StringOutput `pulumi:"location"`
	// The resource name of the storage pool. Needs to be unique per location/region.
	Name pulumi.StringOutput `pulumi:"name"`
	// VPC network name with format: `projects/{{project}}/global/networks/{{network}}`
	Network pulumi.StringOutput `pulumi:"network"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
	// The combination of labels configured directly on the resource
	// and default labels configured on the provider.
	PulumiLabels pulumi.StringMapOutput `pulumi:"pulumiLabels"`
	// QoS (Quality of Service) type of the storage pool.
	// Possible values are: AUTO, MANUAL.
	// Possible values are: `QOS_TYPE_UNSPECIFIED`, `AUTO`, `MANUAL`.
	QosType pulumi.StringOutput `pulumi:"qosType"`
	// Specifies the replica zone for regional Flex pools. `zone` and `replicaZone` values can be swapped to initiate a
	// [zone switch](https://cloud.google.com/netapp/volumes/docs/configure-and-use/storage-pools/edit-or-delete-storage-pool#switch_active_and_replica_zones).
	ReplicaZone pulumi.StringPtrOutput `pulumi:"replicaZone"`
	// Service level of the storage pool.
	// Possible values are: `PREMIUM`, `EXTREME`, `STANDARD`, `FLEX`.
	ServiceLevel pulumi.StringOutput `pulumi:"serviceLevel"`
	// Optional. Custom Performance Total IOPS of the pool If not provided, it will be calculated based on the totalThroughputMibps
	TotalIops pulumi.StringOutput `pulumi:"totalIops"`
	// Optional. Custom Performance Total Throughput of the pool (in MiB/s).
	TotalThroughputMibps pulumi.StringOutput `pulumi:"totalThroughputMibps"`
	// Size allocated to volumes in the storage pool (in GiB).
	VolumeCapacityGib pulumi.StringOutput `pulumi:"volumeCapacityGib"`
	// Number of volume in the storage pool.
	VolumeCount pulumi.IntOutput `pulumi:"volumeCount"`
	// Specifies the active zone for regional Flex pools. `zone` and `replicaZone` values can be swapped to initiate a
	// [zone switch](https://cloud.google.com/netapp/volumes/docs/configure-and-use/storage-pools/edit-or-delete-storage-pool#switch_active_and_replica_zones).
	// If you want to create a zonal Flex pool, specify a zone name for `location` and omit `zone`.
	Zone pulumi.StringOutput `pulumi:"zone"`
}

// NewStoragePool registers a new resource with the given unique name, arguments, and options.
func NewStoragePool(ctx *pulumi.Context,
	name string, args *StoragePoolArgs, opts ...pulumi.ResourceOption) (*StoragePool, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CapacityGib == nil {
		return nil, errors.New("invalid value for required argument 'CapacityGib'")
	}
	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	if args.Network == nil {
		return nil, errors.New("invalid value for required argument 'Network'")
	}
	if args.ServiceLevel == nil {
		return nil, errors.New("invalid value for required argument 'ServiceLevel'")
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"effectiveLabels",
		"pulumiLabels",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource StoragePool
	err := ctx.RegisterResource("gcp:netapp/storagePool:StoragePool", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetStoragePool gets an existing StoragePool resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetStoragePool(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *StoragePoolState, opts ...pulumi.ResourceOption) (*StoragePool, error) {
	var resource StoragePool
	err := ctx.ReadResource("gcp:netapp/storagePool:StoragePool", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering StoragePool resources.
type storagePoolState struct {
	// Specifies the Active Directory policy to be used. Format: `projects/{{project}}/locations/{{location}}/activeDirectories/{{name}}`.
	// The policy needs to be in the same location as the storage pool.
	ActiveDirectory *string `pulumi:"activeDirectory"`
	// Optional. True if the storage pool supports Auto Tiering enabled volumes. Default is false.
	// Auto-tiering can be enabled after storage pool creation but it can't be disabled once enabled.
	AllowAutoTiering *bool `pulumi:"allowAutoTiering"`
	// Available throughput of the storage pool (in MiB/s).
	AvailableThroughputMibps *float64 `pulumi:"availableThroughputMibps"`
	// Capacity of the storage pool (in GiB).
	CapacityGib *string `pulumi:"capacityGib"`
	// Optional. True if using Independent Scaling of capacity and performance (Hyperdisk). Default is false.
	CustomPerformanceEnabled *bool `pulumi:"customPerformanceEnabled"`
	// An optional description of this resource.
	Description *string `pulumi:"description"`
	// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
	EffectiveLabels map[string]string `pulumi:"effectiveLabels"`
	// Flag indicating that the hot-tier threshold will be auto-increased by 10% of the hot-tier when it hits 100%. Default is true.
	// The increment will kick in only if the new size after increment is still less than or equal to storage pool size.
	EnableHotTierAutoResize *bool `pulumi:"enableHotTierAutoResize"`
	// Reports if volumes in the pool are encrypted using a Google-managed encryption key or CMEK.
	EncryptionType *string `pulumi:"encryptionType"`
	// Total hot tier capacity for the Storage Pool. It is applicable only to Flex service level.
	// It should be less than the minimum storage pool size and cannot be more than the current storage pool size. It cannot be decreased once set.
	HotTierSizeGib *string `pulumi:"hotTierSizeGib"`
	// Specifies the CMEK policy to be used for volume encryption. Format: `projects/{{project}}/locations/{{location}}/kmsConfigs/{{name}}`.
	// The policy needs to be in the same location as the storage pool.
	KmsConfig *string `pulumi:"kmsConfig"`
	// Labels as key value pairs. Example: `{ "owner": "Bob", "department": "finance", "purpose": "testing" }`.
	//
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// When enabled, the volumes uses Active Directory as LDAP name service for UID/GID lookups. Required to enable extended group support for NFSv3,
	// using security identifiers for NFSv4.1 or principal names for kerberized NFSv4.1.
	LdapEnabled *bool `pulumi:"ldapEnabled"`
	// Name of the location. For zonal Flex pools specify a zone name, in all other cases a region name.
	Location *string `pulumi:"location"`
	// The resource name of the storage pool. Needs to be unique per location/region.
	Name *string `pulumi:"name"`
	// VPC network name with format: `projects/{{project}}/global/networks/{{network}}`
	Network *string `pulumi:"network"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// The combination of labels configured directly on the resource
	// and default labels configured on the provider.
	PulumiLabels map[string]string `pulumi:"pulumiLabels"`
	// QoS (Quality of Service) type of the storage pool.
	// Possible values are: AUTO, MANUAL.
	// Possible values are: `QOS_TYPE_UNSPECIFIED`, `AUTO`, `MANUAL`.
	QosType *string `pulumi:"qosType"`
	// Specifies the replica zone for regional Flex pools. `zone` and `replicaZone` values can be swapped to initiate a
	// [zone switch](https://cloud.google.com/netapp/volumes/docs/configure-and-use/storage-pools/edit-or-delete-storage-pool#switch_active_and_replica_zones).
	ReplicaZone *string `pulumi:"replicaZone"`
	// Service level of the storage pool.
	// Possible values are: `PREMIUM`, `EXTREME`, `STANDARD`, `FLEX`.
	ServiceLevel *string `pulumi:"serviceLevel"`
	// Optional. Custom Performance Total IOPS of the pool If not provided, it will be calculated based on the totalThroughputMibps
	TotalIops *string `pulumi:"totalIops"`
	// Optional. Custom Performance Total Throughput of the pool (in MiB/s).
	TotalThroughputMibps *string `pulumi:"totalThroughputMibps"`
	// Size allocated to volumes in the storage pool (in GiB).
	VolumeCapacityGib *string `pulumi:"volumeCapacityGib"`
	// Number of volume in the storage pool.
	VolumeCount *int `pulumi:"volumeCount"`
	// Specifies the active zone for regional Flex pools. `zone` and `replicaZone` values can be swapped to initiate a
	// [zone switch](https://cloud.google.com/netapp/volumes/docs/configure-and-use/storage-pools/edit-or-delete-storage-pool#switch_active_and_replica_zones).
	// If you want to create a zonal Flex pool, specify a zone name for `location` and omit `zone`.
	Zone *string `pulumi:"zone"`
}

type StoragePoolState struct {
	// Specifies the Active Directory policy to be used. Format: `projects/{{project}}/locations/{{location}}/activeDirectories/{{name}}`.
	// The policy needs to be in the same location as the storage pool.
	ActiveDirectory pulumi.StringPtrInput
	// Optional. True if the storage pool supports Auto Tiering enabled volumes. Default is false.
	// Auto-tiering can be enabled after storage pool creation but it can't be disabled once enabled.
	AllowAutoTiering pulumi.BoolPtrInput
	// Available throughput of the storage pool (in MiB/s).
	AvailableThroughputMibps pulumi.Float64PtrInput
	// Capacity of the storage pool (in GiB).
	CapacityGib pulumi.StringPtrInput
	// Optional. True if using Independent Scaling of capacity and performance (Hyperdisk). Default is false.
	CustomPerformanceEnabled pulumi.BoolPtrInput
	// An optional description of this resource.
	Description pulumi.StringPtrInput
	// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
	EffectiveLabels pulumi.StringMapInput
	// Flag indicating that the hot-tier threshold will be auto-increased by 10% of the hot-tier when it hits 100%. Default is true.
	// The increment will kick in only if the new size after increment is still less than or equal to storage pool size.
	EnableHotTierAutoResize pulumi.BoolPtrInput
	// Reports if volumes in the pool are encrypted using a Google-managed encryption key or CMEK.
	EncryptionType pulumi.StringPtrInput
	// Total hot tier capacity for the Storage Pool. It is applicable only to Flex service level.
	// It should be less than the minimum storage pool size and cannot be more than the current storage pool size. It cannot be decreased once set.
	HotTierSizeGib pulumi.StringPtrInput
	// Specifies the CMEK policy to be used for volume encryption. Format: `projects/{{project}}/locations/{{location}}/kmsConfigs/{{name}}`.
	// The policy needs to be in the same location as the storage pool.
	KmsConfig pulumi.StringPtrInput
	// Labels as key value pairs. Example: `{ "owner": "Bob", "department": "finance", "purpose": "testing" }`.
	//
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// When enabled, the volumes uses Active Directory as LDAP name service for UID/GID lookups. Required to enable extended group support for NFSv3,
	// using security identifiers for NFSv4.1 or principal names for kerberized NFSv4.1.
	LdapEnabled pulumi.BoolPtrInput
	// Name of the location. For zonal Flex pools specify a zone name, in all other cases a region name.
	Location pulumi.StringPtrInput
	// The resource name of the storage pool. Needs to be unique per location/region.
	Name pulumi.StringPtrInput
	// VPC network name with format: `projects/{{project}}/global/networks/{{network}}`
	Network pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// The combination of labels configured directly on the resource
	// and default labels configured on the provider.
	PulumiLabels pulumi.StringMapInput
	// QoS (Quality of Service) type of the storage pool.
	// Possible values are: AUTO, MANUAL.
	// Possible values are: `QOS_TYPE_UNSPECIFIED`, `AUTO`, `MANUAL`.
	QosType pulumi.StringPtrInput
	// Specifies the replica zone for regional Flex pools. `zone` and `replicaZone` values can be swapped to initiate a
	// [zone switch](https://cloud.google.com/netapp/volumes/docs/configure-and-use/storage-pools/edit-or-delete-storage-pool#switch_active_and_replica_zones).
	ReplicaZone pulumi.StringPtrInput
	// Service level of the storage pool.
	// Possible values are: `PREMIUM`, `EXTREME`, `STANDARD`, `FLEX`.
	ServiceLevel pulumi.StringPtrInput
	// Optional. Custom Performance Total IOPS of the pool If not provided, it will be calculated based on the totalThroughputMibps
	TotalIops pulumi.StringPtrInput
	// Optional. Custom Performance Total Throughput of the pool (in MiB/s).
	TotalThroughputMibps pulumi.StringPtrInput
	// Size allocated to volumes in the storage pool (in GiB).
	VolumeCapacityGib pulumi.StringPtrInput
	// Number of volume in the storage pool.
	VolumeCount pulumi.IntPtrInput
	// Specifies the active zone for regional Flex pools. `zone` and `replicaZone` values can be swapped to initiate a
	// [zone switch](https://cloud.google.com/netapp/volumes/docs/configure-and-use/storage-pools/edit-or-delete-storage-pool#switch_active_and_replica_zones).
	// If you want to create a zonal Flex pool, specify a zone name for `location` and omit `zone`.
	Zone pulumi.StringPtrInput
}

func (StoragePoolState) ElementType() reflect.Type {
	return reflect.TypeOf((*storagePoolState)(nil)).Elem()
}

type storagePoolArgs struct {
	// Specifies the Active Directory policy to be used. Format: `projects/{{project}}/locations/{{location}}/activeDirectories/{{name}}`.
	// The policy needs to be in the same location as the storage pool.
	ActiveDirectory *string `pulumi:"activeDirectory"`
	// Optional. True if the storage pool supports Auto Tiering enabled volumes. Default is false.
	// Auto-tiering can be enabled after storage pool creation but it can't be disabled once enabled.
	AllowAutoTiering *bool `pulumi:"allowAutoTiering"`
	// Capacity of the storage pool (in GiB).
	CapacityGib string `pulumi:"capacityGib"`
	// Optional. True if using Independent Scaling of capacity and performance (Hyperdisk). Default is false.
	CustomPerformanceEnabled *bool `pulumi:"customPerformanceEnabled"`
	// An optional description of this resource.
	Description *string `pulumi:"description"`
	// Flag indicating that the hot-tier threshold will be auto-increased by 10% of the hot-tier when it hits 100%. Default is true.
	// The increment will kick in only if the new size after increment is still less than or equal to storage pool size.
	EnableHotTierAutoResize *bool `pulumi:"enableHotTierAutoResize"`
	// Total hot tier capacity for the Storage Pool. It is applicable only to Flex service level.
	// It should be less than the minimum storage pool size and cannot be more than the current storage pool size. It cannot be decreased once set.
	HotTierSizeGib *string `pulumi:"hotTierSizeGib"`
	// Specifies the CMEK policy to be used for volume encryption. Format: `projects/{{project}}/locations/{{location}}/kmsConfigs/{{name}}`.
	// The policy needs to be in the same location as the storage pool.
	KmsConfig *string `pulumi:"kmsConfig"`
	// Labels as key value pairs. Example: `{ "owner": "Bob", "department": "finance", "purpose": "testing" }`.
	//
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// When enabled, the volumes uses Active Directory as LDAP name service for UID/GID lookups. Required to enable extended group support for NFSv3,
	// using security identifiers for NFSv4.1 or principal names for kerberized NFSv4.1.
	LdapEnabled *bool `pulumi:"ldapEnabled"`
	// Name of the location. For zonal Flex pools specify a zone name, in all other cases a region name.
	Location string `pulumi:"location"`
	// The resource name of the storage pool. Needs to be unique per location/region.
	Name *string `pulumi:"name"`
	// VPC network name with format: `projects/{{project}}/global/networks/{{network}}`
	Network string `pulumi:"network"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// QoS (Quality of Service) type of the storage pool.
	// Possible values are: AUTO, MANUAL.
	// Possible values are: `QOS_TYPE_UNSPECIFIED`, `AUTO`, `MANUAL`.
	QosType *string `pulumi:"qosType"`
	// Specifies the replica zone for regional Flex pools. `zone` and `replicaZone` values can be swapped to initiate a
	// [zone switch](https://cloud.google.com/netapp/volumes/docs/configure-and-use/storage-pools/edit-or-delete-storage-pool#switch_active_and_replica_zones).
	ReplicaZone *string `pulumi:"replicaZone"`
	// Service level of the storage pool.
	// Possible values are: `PREMIUM`, `EXTREME`, `STANDARD`, `FLEX`.
	ServiceLevel string `pulumi:"serviceLevel"`
	// Optional. Custom Performance Total IOPS of the pool If not provided, it will be calculated based on the totalThroughputMibps
	TotalIops *string `pulumi:"totalIops"`
	// Optional. Custom Performance Total Throughput of the pool (in MiB/s).
	TotalThroughputMibps *string `pulumi:"totalThroughputMibps"`
	// Specifies the active zone for regional Flex pools. `zone` and `replicaZone` values can be swapped to initiate a
	// [zone switch](https://cloud.google.com/netapp/volumes/docs/configure-and-use/storage-pools/edit-or-delete-storage-pool#switch_active_and_replica_zones).
	// If you want to create a zonal Flex pool, specify a zone name for `location` and omit `zone`.
	Zone *string `pulumi:"zone"`
}

// The set of arguments for constructing a StoragePool resource.
type StoragePoolArgs struct {
	// Specifies the Active Directory policy to be used. Format: `projects/{{project}}/locations/{{location}}/activeDirectories/{{name}}`.
	// The policy needs to be in the same location as the storage pool.
	ActiveDirectory pulumi.StringPtrInput
	// Optional. True if the storage pool supports Auto Tiering enabled volumes. Default is false.
	// Auto-tiering can be enabled after storage pool creation but it can't be disabled once enabled.
	AllowAutoTiering pulumi.BoolPtrInput
	// Capacity of the storage pool (in GiB).
	CapacityGib pulumi.StringInput
	// Optional. True if using Independent Scaling of capacity and performance (Hyperdisk). Default is false.
	CustomPerformanceEnabled pulumi.BoolPtrInput
	// An optional description of this resource.
	Description pulumi.StringPtrInput
	// Flag indicating that the hot-tier threshold will be auto-increased by 10% of the hot-tier when it hits 100%. Default is true.
	// The increment will kick in only if the new size after increment is still less than or equal to storage pool size.
	EnableHotTierAutoResize pulumi.BoolPtrInput
	// Total hot tier capacity for the Storage Pool. It is applicable only to Flex service level.
	// It should be less than the minimum storage pool size and cannot be more than the current storage pool size. It cannot be decreased once set.
	HotTierSizeGib pulumi.StringPtrInput
	// Specifies the CMEK policy to be used for volume encryption. Format: `projects/{{project}}/locations/{{location}}/kmsConfigs/{{name}}`.
	// The policy needs to be in the same location as the storage pool.
	KmsConfig pulumi.StringPtrInput
	// Labels as key value pairs. Example: `{ "owner": "Bob", "department": "finance", "purpose": "testing" }`.
	//
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// When enabled, the volumes uses Active Directory as LDAP name service for UID/GID lookups. Required to enable extended group support for NFSv3,
	// using security identifiers for NFSv4.1 or principal names for kerberized NFSv4.1.
	LdapEnabled pulumi.BoolPtrInput
	// Name of the location. For zonal Flex pools specify a zone name, in all other cases a region name.
	Location pulumi.StringInput
	// The resource name of the storage pool. Needs to be unique per location/region.
	Name pulumi.StringPtrInput
	// VPC network name with format: `projects/{{project}}/global/networks/{{network}}`
	Network pulumi.StringInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// QoS (Quality of Service) type of the storage pool.
	// Possible values are: AUTO, MANUAL.
	// Possible values are: `QOS_TYPE_UNSPECIFIED`, `AUTO`, `MANUAL`.
	QosType pulumi.StringPtrInput
	// Specifies the replica zone for regional Flex pools. `zone` and `replicaZone` values can be swapped to initiate a
	// [zone switch](https://cloud.google.com/netapp/volumes/docs/configure-and-use/storage-pools/edit-or-delete-storage-pool#switch_active_and_replica_zones).
	ReplicaZone pulumi.StringPtrInput
	// Service level of the storage pool.
	// Possible values are: `PREMIUM`, `EXTREME`, `STANDARD`, `FLEX`.
	ServiceLevel pulumi.StringInput
	// Optional. Custom Performance Total IOPS of the pool If not provided, it will be calculated based on the totalThroughputMibps
	TotalIops pulumi.StringPtrInput
	// Optional. Custom Performance Total Throughput of the pool (in MiB/s).
	TotalThroughputMibps pulumi.StringPtrInput
	// Specifies the active zone for regional Flex pools. `zone` and `replicaZone` values can be swapped to initiate a
	// [zone switch](https://cloud.google.com/netapp/volumes/docs/configure-and-use/storage-pools/edit-or-delete-storage-pool#switch_active_and_replica_zones).
	// If you want to create a zonal Flex pool, specify a zone name for `location` and omit `zone`.
	Zone pulumi.StringPtrInput
}

func (StoragePoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*storagePoolArgs)(nil)).Elem()
}

type StoragePoolInput interface {
	pulumi.Input

	ToStoragePoolOutput() StoragePoolOutput
	ToStoragePoolOutputWithContext(ctx context.Context) StoragePoolOutput
}

func (*StoragePool) ElementType() reflect.Type {
	return reflect.TypeOf((**StoragePool)(nil)).Elem()
}

func (i *StoragePool) ToStoragePoolOutput() StoragePoolOutput {
	return i.ToStoragePoolOutputWithContext(context.Background())
}

func (i *StoragePool) ToStoragePoolOutputWithContext(ctx context.Context) StoragePoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StoragePoolOutput)
}

// StoragePoolArrayInput is an input type that accepts StoragePoolArray and StoragePoolArrayOutput values.
// You can construct a concrete instance of `StoragePoolArrayInput` via:
//
//	StoragePoolArray{ StoragePoolArgs{...} }
type StoragePoolArrayInput interface {
	pulumi.Input

	ToStoragePoolArrayOutput() StoragePoolArrayOutput
	ToStoragePoolArrayOutputWithContext(context.Context) StoragePoolArrayOutput
}

type StoragePoolArray []StoragePoolInput

func (StoragePoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*StoragePool)(nil)).Elem()
}

func (i StoragePoolArray) ToStoragePoolArrayOutput() StoragePoolArrayOutput {
	return i.ToStoragePoolArrayOutputWithContext(context.Background())
}

func (i StoragePoolArray) ToStoragePoolArrayOutputWithContext(ctx context.Context) StoragePoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StoragePoolArrayOutput)
}

// StoragePoolMapInput is an input type that accepts StoragePoolMap and StoragePoolMapOutput values.
// You can construct a concrete instance of `StoragePoolMapInput` via:
//
//	StoragePoolMap{ "key": StoragePoolArgs{...} }
type StoragePoolMapInput interface {
	pulumi.Input

	ToStoragePoolMapOutput() StoragePoolMapOutput
	ToStoragePoolMapOutputWithContext(context.Context) StoragePoolMapOutput
}

type StoragePoolMap map[string]StoragePoolInput

func (StoragePoolMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*StoragePool)(nil)).Elem()
}

func (i StoragePoolMap) ToStoragePoolMapOutput() StoragePoolMapOutput {
	return i.ToStoragePoolMapOutputWithContext(context.Background())
}

func (i StoragePoolMap) ToStoragePoolMapOutputWithContext(ctx context.Context) StoragePoolMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StoragePoolMapOutput)
}

type StoragePoolOutput struct{ *pulumi.OutputState }

func (StoragePoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StoragePool)(nil)).Elem()
}

func (o StoragePoolOutput) ToStoragePoolOutput() StoragePoolOutput {
	return o
}

func (o StoragePoolOutput) ToStoragePoolOutputWithContext(ctx context.Context) StoragePoolOutput {
	return o
}

// Specifies the Active Directory policy to be used. Format: `projects/{{project}}/locations/{{location}}/activeDirectories/{{name}}`.
// The policy needs to be in the same location as the storage pool.
func (o StoragePoolOutput) ActiveDirectory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StoragePool) pulumi.StringPtrOutput { return v.ActiveDirectory }).(pulumi.StringPtrOutput)
}

// Optional. True if the storage pool supports Auto Tiering enabled volumes. Default is false.
// Auto-tiering can be enabled after storage pool creation but it can't be disabled once enabled.
func (o StoragePoolOutput) AllowAutoTiering() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StoragePool) pulumi.BoolPtrOutput { return v.AllowAutoTiering }).(pulumi.BoolPtrOutput)
}

// Available throughput of the storage pool (in MiB/s).
func (o StoragePoolOutput) AvailableThroughputMibps() pulumi.Float64Output {
	return o.ApplyT(func(v *StoragePool) pulumi.Float64Output { return v.AvailableThroughputMibps }).(pulumi.Float64Output)
}

// Capacity of the storage pool (in GiB).
func (o StoragePoolOutput) CapacityGib() pulumi.StringOutput {
	return o.ApplyT(func(v *StoragePool) pulumi.StringOutput { return v.CapacityGib }).(pulumi.StringOutput)
}

// Optional. True if using Independent Scaling of capacity and performance (Hyperdisk). Default is false.
func (o StoragePoolOutput) CustomPerformanceEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StoragePool) pulumi.BoolPtrOutput { return v.CustomPerformanceEnabled }).(pulumi.BoolPtrOutput)
}

// An optional description of this resource.
func (o StoragePoolOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StoragePool) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
func (o StoragePoolOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *StoragePool) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// Flag indicating that the hot-tier threshold will be auto-increased by 10% of the hot-tier when it hits 100%. Default is true.
// The increment will kick in only if the new size after increment is still less than or equal to storage pool size.
func (o StoragePoolOutput) EnableHotTierAutoResize() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StoragePool) pulumi.BoolPtrOutput { return v.EnableHotTierAutoResize }).(pulumi.BoolPtrOutput)
}

// Reports if volumes in the pool are encrypted using a Google-managed encryption key or CMEK.
func (o StoragePoolOutput) EncryptionType() pulumi.StringOutput {
	return o.ApplyT(func(v *StoragePool) pulumi.StringOutput { return v.EncryptionType }).(pulumi.StringOutput)
}

// Total hot tier capacity for the Storage Pool. It is applicable only to Flex service level.
// It should be less than the minimum storage pool size and cannot be more than the current storage pool size. It cannot be decreased once set.
func (o StoragePoolOutput) HotTierSizeGib() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StoragePool) pulumi.StringPtrOutput { return v.HotTierSizeGib }).(pulumi.StringPtrOutput)
}

// Specifies the CMEK policy to be used for volume encryption. Format: `projects/{{project}}/locations/{{location}}/kmsConfigs/{{name}}`.
// The policy needs to be in the same location as the storage pool.
func (o StoragePoolOutput) KmsConfig() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StoragePool) pulumi.StringPtrOutput { return v.KmsConfig }).(pulumi.StringPtrOutput)
}

// Labels as key value pairs. Example: `{ "owner": "Bob", "department": "finance", "purpose": "testing" }`.
//
// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
func (o StoragePoolOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *StoragePool) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// When enabled, the volumes uses Active Directory as LDAP name service for UID/GID lookups. Required to enable extended group support for NFSv3,
// using security identifiers for NFSv4.1 or principal names for kerberized NFSv4.1.
func (o StoragePoolOutput) LdapEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StoragePool) pulumi.BoolPtrOutput { return v.LdapEnabled }).(pulumi.BoolPtrOutput)
}

// Name of the location. For zonal Flex pools specify a zone name, in all other cases a region name.
func (o StoragePoolOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *StoragePool) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The resource name of the storage pool. Needs to be unique per location/region.
func (o StoragePoolOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *StoragePool) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// VPC network name with format: `projects/{{project}}/global/networks/{{network}}`
func (o StoragePoolOutput) Network() pulumi.StringOutput {
	return o.ApplyT(func(v *StoragePool) pulumi.StringOutput { return v.Network }).(pulumi.StringOutput)
}

// The ID of the project in which the resource belongs.
// If it is not provided, the provider project is used.
func (o StoragePoolOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *StoragePool) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The combination of labels configured directly on the resource
// and default labels configured on the provider.
func (o StoragePoolOutput) PulumiLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *StoragePool) pulumi.StringMapOutput { return v.PulumiLabels }).(pulumi.StringMapOutput)
}

// QoS (Quality of Service) type of the storage pool.
// Possible values are: AUTO, MANUAL.
// Possible values are: `QOS_TYPE_UNSPECIFIED`, `AUTO`, `MANUAL`.
func (o StoragePoolOutput) QosType() pulumi.StringOutput {
	return o.ApplyT(func(v *StoragePool) pulumi.StringOutput { return v.QosType }).(pulumi.StringOutput)
}

// Specifies the replica zone for regional Flex pools. `zone` and `replicaZone` values can be swapped to initiate a
// [zone switch](https://cloud.google.com/netapp/volumes/docs/configure-and-use/storage-pools/edit-or-delete-storage-pool#switch_active_and_replica_zones).
func (o StoragePoolOutput) ReplicaZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StoragePool) pulumi.StringPtrOutput { return v.ReplicaZone }).(pulumi.StringPtrOutput)
}

// Service level of the storage pool.
// Possible values are: `PREMIUM`, `EXTREME`, `STANDARD`, `FLEX`.
func (o StoragePoolOutput) ServiceLevel() pulumi.StringOutput {
	return o.ApplyT(func(v *StoragePool) pulumi.StringOutput { return v.ServiceLevel }).(pulumi.StringOutput)
}

// Optional. Custom Performance Total IOPS of the pool If not provided, it will be calculated based on the totalThroughputMibps
func (o StoragePoolOutput) TotalIops() pulumi.StringOutput {
	return o.ApplyT(func(v *StoragePool) pulumi.StringOutput { return v.TotalIops }).(pulumi.StringOutput)
}

// Optional. Custom Performance Total Throughput of the pool (in MiB/s).
func (o StoragePoolOutput) TotalThroughputMibps() pulumi.StringOutput {
	return o.ApplyT(func(v *StoragePool) pulumi.StringOutput { return v.TotalThroughputMibps }).(pulumi.StringOutput)
}

// Size allocated to volumes in the storage pool (in GiB).
func (o StoragePoolOutput) VolumeCapacityGib() pulumi.StringOutput {
	return o.ApplyT(func(v *StoragePool) pulumi.StringOutput { return v.VolumeCapacityGib }).(pulumi.StringOutput)
}

// Number of volume in the storage pool.
func (o StoragePoolOutput) VolumeCount() pulumi.IntOutput {
	return o.ApplyT(func(v *StoragePool) pulumi.IntOutput { return v.VolumeCount }).(pulumi.IntOutput)
}

// Specifies the active zone for regional Flex pools. `zone` and `replicaZone` values can be swapped to initiate a
// [zone switch](https://cloud.google.com/netapp/volumes/docs/configure-and-use/storage-pools/edit-or-delete-storage-pool#switch_active_and_replica_zones).
// If you want to create a zonal Flex pool, specify a zone name for `location` and omit `zone`.
func (o StoragePoolOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v *StoragePool) pulumi.StringOutput { return v.Zone }).(pulumi.StringOutput)
}

type StoragePoolArrayOutput struct{ *pulumi.OutputState }

func (StoragePoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*StoragePool)(nil)).Elem()
}

func (o StoragePoolArrayOutput) ToStoragePoolArrayOutput() StoragePoolArrayOutput {
	return o
}

func (o StoragePoolArrayOutput) ToStoragePoolArrayOutputWithContext(ctx context.Context) StoragePoolArrayOutput {
	return o
}

func (o StoragePoolArrayOutput) Index(i pulumi.IntInput) StoragePoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *StoragePool {
		return vs[0].([]*StoragePool)[vs[1].(int)]
	}).(StoragePoolOutput)
}

type StoragePoolMapOutput struct{ *pulumi.OutputState }

func (StoragePoolMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*StoragePool)(nil)).Elem()
}

func (o StoragePoolMapOutput) ToStoragePoolMapOutput() StoragePoolMapOutput {
	return o
}

func (o StoragePoolMapOutput) ToStoragePoolMapOutputWithContext(ctx context.Context) StoragePoolMapOutput {
	return o
}

func (o StoragePoolMapOutput) MapIndex(k pulumi.StringInput) StoragePoolOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *StoragePool {
		return vs[0].(map[string]*StoragePool)[vs[1].(string)]
	}).(StoragePoolOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*StoragePoolInput)(nil)).Elem(), &StoragePool{})
	pulumi.RegisterInputType(reflect.TypeOf((*StoragePoolArrayInput)(nil)).Elem(), StoragePoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StoragePoolMapInput)(nil)).Elem(), StoragePoolMap{})
	pulumi.RegisterOutputType(StoragePoolOutput{})
	pulumi.RegisterOutputType(StoragePoolArrayOutput{})
	pulumi.RegisterOutputType(StoragePoolMapOutput{})
}
