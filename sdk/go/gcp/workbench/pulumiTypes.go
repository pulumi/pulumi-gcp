// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package workbench

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type InstanceGceSetup struct {
	// The hardware accelerators used on this instance. If you use accelerators, make sure that your configuration has
	// [enough vCPUs and memory to support the `machineType` you have selected](https://cloud.google.com/compute/docs/gpus/#gpus-list).
	// Currently supports only one accelerator configuration.
	// Structure is documented below.
	AcceleratorConfigs []InstanceGceSetupAcceleratorConfig `pulumi:"acceleratorConfigs"`
	// The definition of a boot disk.
	// Structure is documented below.
	BootDisk *InstanceGceSetupBootDisk `pulumi:"bootDisk"`
	// Confidential instance configuration.
	// Structure is documented below.
	ConfidentialInstanceConfig *InstanceGceSetupConfidentialInstanceConfig `pulumi:"confidentialInstanceConfig"`
	// Use a container image to start the workbench instance.
	// Structure is documented below.
	ContainerImage *InstanceGceSetupContainerImage `pulumi:"containerImage"`
	// Data disks attached to the VM instance. Currently supports only one data disk.
	// Structure is documented below.
	DataDisks *InstanceGceSetupDataDisks `pulumi:"dataDisks"`
	// Optional. If true, no external IP will be assigned to this VM instance.
	DisablePublicIp *bool `pulumi:"disablePublicIp"`
	// Optional. Flag to enable ip forwarding or not, default false/off.
	// https://cloud.google.com/vpc/docs/using-routes#canipforward
	EnableIpForwarding *bool `pulumi:"enableIpForwarding"`
	// Optional. The machine type of the VM instance. https://cloud.google.com/compute/docs/machine-resource
	MachineType *string `pulumi:"machineType"`
	// Optional. Custom metadata to apply to this instance.
	Metadata map[string]string `pulumi:"metadata"`
	// The network interfaces for the VM. Supports only one interface.
	// Structure is documented below.
	NetworkInterfaces []InstanceGceSetupNetworkInterface `pulumi:"networkInterfaces"`
	// The service account that serves as an identity for the VM instance. Currently supports only one service account.
	// Structure is documented below.
	ServiceAccounts []InstanceGceSetupServiceAccount `pulumi:"serviceAccounts"`
	// A set of Shielded Instance options. See [Images using supported Shielded
	// VM features](https://cloud.google.com/compute/docs/instances/modifying-shielded-vm).
	// Not all combinations are valid.
	// Structure is documented below.
	ShieldedInstanceConfig *InstanceGceSetupShieldedInstanceConfig `pulumi:"shieldedInstanceConfig"`
	// Optional. The Compute Engine tags to add to instance (see [Tagging
	// instances](https://cloud.google.com/compute/docs/label-or-tag-resources#tags)).
	Tags []string `pulumi:"tags"`
	// Definition of a custom Compute Engine virtual machine image for starting
	// a workbench instance with the environment installed directly on the VM.
	// Structure is documented below.
	VmImage *InstanceGceSetupVmImage `pulumi:"vmImage"`
}

// InstanceGceSetupInput is an input type that accepts InstanceGceSetupArgs and InstanceGceSetupOutput values.
// You can construct a concrete instance of `InstanceGceSetupInput` via:
//
//	InstanceGceSetupArgs{...}
type InstanceGceSetupInput interface {
	pulumi.Input

	ToInstanceGceSetupOutput() InstanceGceSetupOutput
	ToInstanceGceSetupOutputWithContext(context.Context) InstanceGceSetupOutput
}

type InstanceGceSetupArgs struct {
	// The hardware accelerators used on this instance. If you use accelerators, make sure that your configuration has
	// [enough vCPUs and memory to support the `machineType` you have selected](https://cloud.google.com/compute/docs/gpus/#gpus-list).
	// Currently supports only one accelerator configuration.
	// Structure is documented below.
	AcceleratorConfigs InstanceGceSetupAcceleratorConfigArrayInput `pulumi:"acceleratorConfigs"`
	// The definition of a boot disk.
	// Structure is documented below.
	BootDisk InstanceGceSetupBootDiskPtrInput `pulumi:"bootDisk"`
	// Confidential instance configuration.
	// Structure is documented below.
	ConfidentialInstanceConfig InstanceGceSetupConfidentialInstanceConfigPtrInput `pulumi:"confidentialInstanceConfig"`
	// Use a container image to start the workbench instance.
	// Structure is documented below.
	ContainerImage InstanceGceSetupContainerImagePtrInput `pulumi:"containerImage"`
	// Data disks attached to the VM instance. Currently supports only one data disk.
	// Structure is documented below.
	DataDisks InstanceGceSetupDataDisksPtrInput `pulumi:"dataDisks"`
	// Optional. If true, no external IP will be assigned to this VM instance.
	DisablePublicIp pulumi.BoolPtrInput `pulumi:"disablePublicIp"`
	// Optional. Flag to enable ip forwarding or not, default false/off.
	// https://cloud.google.com/vpc/docs/using-routes#canipforward
	EnableIpForwarding pulumi.BoolPtrInput `pulumi:"enableIpForwarding"`
	// Optional. The machine type of the VM instance. https://cloud.google.com/compute/docs/machine-resource
	MachineType pulumi.StringPtrInput `pulumi:"machineType"`
	// Optional. Custom metadata to apply to this instance.
	Metadata pulumi.StringMapInput `pulumi:"metadata"`
	// The network interfaces for the VM. Supports only one interface.
	// Structure is documented below.
	NetworkInterfaces InstanceGceSetupNetworkInterfaceArrayInput `pulumi:"networkInterfaces"`
	// The service account that serves as an identity for the VM instance. Currently supports only one service account.
	// Structure is documented below.
	ServiceAccounts InstanceGceSetupServiceAccountArrayInput `pulumi:"serviceAccounts"`
	// A set of Shielded Instance options. See [Images using supported Shielded
	// VM features](https://cloud.google.com/compute/docs/instances/modifying-shielded-vm).
	// Not all combinations are valid.
	// Structure is documented below.
	ShieldedInstanceConfig InstanceGceSetupShieldedInstanceConfigPtrInput `pulumi:"shieldedInstanceConfig"`
	// Optional. The Compute Engine tags to add to instance (see [Tagging
	// instances](https://cloud.google.com/compute/docs/label-or-tag-resources#tags)).
	Tags pulumi.StringArrayInput `pulumi:"tags"`
	// Definition of a custom Compute Engine virtual machine image for starting
	// a workbench instance with the environment installed directly on the VM.
	// Structure is documented below.
	VmImage InstanceGceSetupVmImagePtrInput `pulumi:"vmImage"`
}

func (InstanceGceSetupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceGceSetup)(nil)).Elem()
}

func (i InstanceGceSetupArgs) ToInstanceGceSetupOutput() InstanceGceSetupOutput {
	return i.ToInstanceGceSetupOutputWithContext(context.Background())
}

func (i InstanceGceSetupArgs) ToInstanceGceSetupOutputWithContext(ctx context.Context) InstanceGceSetupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceGceSetupOutput)
}

func (i InstanceGceSetupArgs) ToInstanceGceSetupPtrOutput() InstanceGceSetupPtrOutput {
	return i.ToInstanceGceSetupPtrOutputWithContext(context.Background())
}

func (i InstanceGceSetupArgs) ToInstanceGceSetupPtrOutputWithContext(ctx context.Context) InstanceGceSetupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceGceSetupOutput).ToInstanceGceSetupPtrOutputWithContext(ctx)
}

// InstanceGceSetupPtrInput is an input type that accepts InstanceGceSetupArgs, InstanceGceSetupPtr and InstanceGceSetupPtrOutput values.
// You can construct a concrete instance of `InstanceGceSetupPtrInput` via:
//
//	        InstanceGceSetupArgs{...}
//
//	or:
//
//	        nil
type InstanceGceSetupPtrInput interface {
	pulumi.Input

	ToInstanceGceSetupPtrOutput() InstanceGceSetupPtrOutput
	ToInstanceGceSetupPtrOutputWithContext(context.Context) InstanceGceSetupPtrOutput
}

type instanceGceSetupPtrType InstanceGceSetupArgs

func InstanceGceSetupPtr(v *InstanceGceSetupArgs) InstanceGceSetupPtrInput {
	return (*instanceGceSetupPtrType)(v)
}

func (*instanceGceSetupPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceGceSetup)(nil)).Elem()
}

func (i *instanceGceSetupPtrType) ToInstanceGceSetupPtrOutput() InstanceGceSetupPtrOutput {
	return i.ToInstanceGceSetupPtrOutputWithContext(context.Background())
}

func (i *instanceGceSetupPtrType) ToInstanceGceSetupPtrOutputWithContext(ctx context.Context) InstanceGceSetupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceGceSetupPtrOutput)
}

type InstanceGceSetupOutput struct{ *pulumi.OutputState }

func (InstanceGceSetupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceGceSetup)(nil)).Elem()
}

func (o InstanceGceSetupOutput) ToInstanceGceSetupOutput() InstanceGceSetupOutput {
	return o
}

func (o InstanceGceSetupOutput) ToInstanceGceSetupOutputWithContext(ctx context.Context) InstanceGceSetupOutput {
	return o
}

func (o InstanceGceSetupOutput) ToInstanceGceSetupPtrOutput() InstanceGceSetupPtrOutput {
	return o.ToInstanceGceSetupPtrOutputWithContext(context.Background())
}

func (o InstanceGceSetupOutput) ToInstanceGceSetupPtrOutputWithContext(ctx context.Context) InstanceGceSetupPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceGceSetup) *InstanceGceSetup {
		return &v
	}).(InstanceGceSetupPtrOutput)
}

// The hardware accelerators used on this instance. If you use accelerators, make sure that your configuration has
// [enough vCPUs and memory to support the `machineType` you have selected](https://cloud.google.com/compute/docs/gpus/#gpus-list).
// Currently supports only one accelerator configuration.
// Structure is documented below.
func (o InstanceGceSetupOutput) AcceleratorConfigs() InstanceGceSetupAcceleratorConfigArrayOutput {
	return o.ApplyT(func(v InstanceGceSetup) []InstanceGceSetupAcceleratorConfig { return v.AcceleratorConfigs }).(InstanceGceSetupAcceleratorConfigArrayOutput)
}

// The definition of a boot disk.
// Structure is documented below.
func (o InstanceGceSetupOutput) BootDisk() InstanceGceSetupBootDiskPtrOutput {
	return o.ApplyT(func(v InstanceGceSetup) *InstanceGceSetupBootDisk { return v.BootDisk }).(InstanceGceSetupBootDiskPtrOutput)
}

// Confidential instance configuration.
// Structure is documented below.
func (o InstanceGceSetupOutput) ConfidentialInstanceConfig() InstanceGceSetupConfidentialInstanceConfigPtrOutput {
	return o.ApplyT(func(v InstanceGceSetup) *InstanceGceSetupConfidentialInstanceConfig {
		return v.ConfidentialInstanceConfig
	}).(InstanceGceSetupConfidentialInstanceConfigPtrOutput)
}

// Use a container image to start the workbench instance.
// Structure is documented below.
func (o InstanceGceSetupOutput) ContainerImage() InstanceGceSetupContainerImagePtrOutput {
	return o.ApplyT(func(v InstanceGceSetup) *InstanceGceSetupContainerImage { return v.ContainerImage }).(InstanceGceSetupContainerImagePtrOutput)
}

// Data disks attached to the VM instance. Currently supports only one data disk.
// Structure is documented below.
func (o InstanceGceSetupOutput) DataDisks() InstanceGceSetupDataDisksPtrOutput {
	return o.ApplyT(func(v InstanceGceSetup) *InstanceGceSetupDataDisks { return v.DataDisks }).(InstanceGceSetupDataDisksPtrOutput)
}

// Optional. If true, no external IP will be assigned to this VM instance.
func (o InstanceGceSetupOutput) DisablePublicIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceGceSetup) *bool { return v.DisablePublicIp }).(pulumi.BoolPtrOutput)
}

// Optional. Flag to enable ip forwarding or not, default false/off.
// https://cloud.google.com/vpc/docs/using-routes#canipforward
func (o InstanceGceSetupOutput) EnableIpForwarding() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceGceSetup) *bool { return v.EnableIpForwarding }).(pulumi.BoolPtrOutput)
}

// Optional. The machine type of the VM instance. https://cloud.google.com/compute/docs/machine-resource
func (o InstanceGceSetupOutput) MachineType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceGceSetup) *string { return v.MachineType }).(pulumi.StringPtrOutput)
}

// Optional. Custom metadata to apply to this instance.
func (o InstanceGceSetupOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v InstanceGceSetup) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

// The network interfaces for the VM. Supports only one interface.
// Structure is documented below.
func (o InstanceGceSetupOutput) NetworkInterfaces() InstanceGceSetupNetworkInterfaceArrayOutput {
	return o.ApplyT(func(v InstanceGceSetup) []InstanceGceSetupNetworkInterface { return v.NetworkInterfaces }).(InstanceGceSetupNetworkInterfaceArrayOutput)
}

// The service account that serves as an identity for the VM instance. Currently supports only one service account.
// Structure is documented below.
func (o InstanceGceSetupOutput) ServiceAccounts() InstanceGceSetupServiceAccountArrayOutput {
	return o.ApplyT(func(v InstanceGceSetup) []InstanceGceSetupServiceAccount { return v.ServiceAccounts }).(InstanceGceSetupServiceAccountArrayOutput)
}

// A set of Shielded Instance options. See [Images using supported Shielded
// VM features](https://cloud.google.com/compute/docs/instances/modifying-shielded-vm).
// Not all combinations are valid.
// Structure is documented below.
func (o InstanceGceSetupOutput) ShieldedInstanceConfig() InstanceGceSetupShieldedInstanceConfigPtrOutput {
	return o.ApplyT(func(v InstanceGceSetup) *InstanceGceSetupShieldedInstanceConfig { return v.ShieldedInstanceConfig }).(InstanceGceSetupShieldedInstanceConfigPtrOutput)
}

// Optional. The Compute Engine tags to add to instance (see [Tagging
// instances](https://cloud.google.com/compute/docs/label-or-tag-resources#tags)).
func (o InstanceGceSetupOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v InstanceGceSetup) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// Definition of a custom Compute Engine virtual machine image for starting
// a workbench instance with the environment installed directly on the VM.
// Structure is documented below.
func (o InstanceGceSetupOutput) VmImage() InstanceGceSetupVmImagePtrOutput {
	return o.ApplyT(func(v InstanceGceSetup) *InstanceGceSetupVmImage { return v.VmImage }).(InstanceGceSetupVmImagePtrOutput)
}

type InstanceGceSetupPtrOutput struct{ *pulumi.OutputState }

func (InstanceGceSetupPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceGceSetup)(nil)).Elem()
}

func (o InstanceGceSetupPtrOutput) ToInstanceGceSetupPtrOutput() InstanceGceSetupPtrOutput {
	return o
}

func (o InstanceGceSetupPtrOutput) ToInstanceGceSetupPtrOutputWithContext(ctx context.Context) InstanceGceSetupPtrOutput {
	return o
}

func (o InstanceGceSetupPtrOutput) Elem() InstanceGceSetupOutput {
	return o.ApplyT(func(v *InstanceGceSetup) InstanceGceSetup {
		if v != nil {
			return *v
		}
		var ret InstanceGceSetup
		return ret
	}).(InstanceGceSetupOutput)
}

// The hardware accelerators used on this instance. If you use accelerators, make sure that your configuration has
// [enough vCPUs and memory to support the `machineType` you have selected](https://cloud.google.com/compute/docs/gpus/#gpus-list).
// Currently supports only one accelerator configuration.
// Structure is documented below.
func (o InstanceGceSetupPtrOutput) AcceleratorConfigs() InstanceGceSetupAcceleratorConfigArrayOutput {
	return o.ApplyT(func(v *InstanceGceSetup) []InstanceGceSetupAcceleratorConfig {
		if v == nil {
			return nil
		}
		return v.AcceleratorConfigs
	}).(InstanceGceSetupAcceleratorConfigArrayOutput)
}

// The definition of a boot disk.
// Structure is documented below.
func (o InstanceGceSetupPtrOutput) BootDisk() InstanceGceSetupBootDiskPtrOutput {
	return o.ApplyT(func(v *InstanceGceSetup) *InstanceGceSetupBootDisk {
		if v == nil {
			return nil
		}
		return v.BootDisk
	}).(InstanceGceSetupBootDiskPtrOutput)
}

// Confidential instance configuration.
// Structure is documented below.
func (o InstanceGceSetupPtrOutput) ConfidentialInstanceConfig() InstanceGceSetupConfidentialInstanceConfigPtrOutput {
	return o.ApplyT(func(v *InstanceGceSetup) *InstanceGceSetupConfidentialInstanceConfig {
		if v == nil {
			return nil
		}
		return v.ConfidentialInstanceConfig
	}).(InstanceGceSetupConfidentialInstanceConfigPtrOutput)
}

// Use a container image to start the workbench instance.
// Structure is documented below.
func (o InstanceGceSetupPtrOutput) ContainerImage() InstanceGceSetupContainerImagePtrOutput {
	return o.ApplyT(func(v *InstanceGceSetup) *InstanceGceSetupContainerImage {
		if v == nil {
			return nil
		}
		return v.ContainerImage
	}).(InstanceGceSetupContainerImagePtrOutput)
}

// Data disks attached to the VM instance. Currently supports only one data disk.
// Structure is documented below.
func (o InstanceGceSetupPtrOutput) DataDisks() InstanceGceSetupDataDisksPtrOutput {
	return o.ApplyT(func(v *InstanceGceSetup) *InstanceGceSetupDataDisks {
		if v == nil {
			return nil
		}
		return v.DataDisks
	}).(InstanceGceSetupDataDisksPtrOutput)
}

// Optional. If true, no external IP will be assigned to this VM instance.
func (o InstanceGceSetupPtrOutput) DisablePublicIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InstanceGceSetup) *bool {
		if v == nil {
			return nil
		}
		return v.DisablePublicIp
	}).(pulumi.BoolPtrOutput)
}

// Optional. Flag to enable ip forwarding or not, default false/off.
// https://cloud.google.com/vpc/docs/using-routes#canipforward
func (o InstanceGceSetupPtrOutput) EnableIpForwarding() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InstanceGceSetup) *bool {
		if v == nil {
			return nil
		}
		return v.EnableIpForwarding
	}).(pulumi.BoolPtrOutput)
}

// Optional. The machine type of the VM instance. https://cloud.google.com/compute/docs/machine-resource
func (o InstanceGceSetupPtrOutput) MachineType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceGceSetup) *string {
		if v == nil {
			return nil
		}
		return v.MachineType
	}).(pulumi.StringPtrOutput)
}

// Optional. Custom metadata to apply to this instance.
func (o InstanceGceSetupPtrOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v *InstanceGceSetup) map[string]string {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(pulumi.StringMapOutput)
}

// The network interfaces for the VM. Supports only one interface.
// Structure is documented below.
func (o InstanceGceSetupPtrOutput) NetworkInterfaces() InstanceGceSetupNetworkInterfaceArrayOutput {
	return o.ApplyT(func(v *InstanceGceSetup) []InstanceGceSetupNetworkInterface {
		if v == nil {
			return nil
		}
		return v.NetworkInterfaces
	}).(InstanceGceSetupNetworkInterfaceArrayOutput)
}

// The service account that serves as an identity for the VM instance. Currently supports only one service account.
// Structure is documented below.
func (o InstanceGceSetupPtrOutput) ServiceAccounts() InstanceGceSetupServiceAccountArrayOutput {
	return o.ApplyT(func(v *InstanceGceSetup) []InstanceGceSetupServiceAccount {
		if v == nil {
			return nil
		}
		return v.ServiceAccounts
	}).(InstanceGceSetupServiceAccountArrayOutput)
}

// A set of Shielded Instance options. See [Images using supported Shielded
// VM features](https://cloud.google.com/compute/docs/instances/modifying-shielded-vm).
// Not all combinations are valid.
// Structure is documented below.
func (o InstanceGceSetupPtrOutput) ShieldedInstanceConfig() InstanceGceSetupShieldedInstanceConfigPtrOutput {
	return o.ApplyT(func(v *InstanceGceSetup) *InstanceGceSetupShieldedInstanceConfig {
		if v == nil {
			return nil
		}
		return v.ShieldedInstanceConfig
	}).(InstanceGceSetupShieldedInstanceConfigPtrOutput)
}

// Optional. The Compute Engine tags to add to instance (see [Tagging
// instances](https://cloud.google.com/compute/docs/label-or-tag-resources#tags)).
func (o InstanceGceSetupPtrOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *InstanceGceSetup) []string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringArrayOutput)
}

// Definition of a custom Compute Engine virtual machine image for starting
// a workbench instance with the environment installed directly on the VM.
// Structure is documented below.
func (o InstanceGceSetupPtrOutput) VmImage() InstanceGceSetupVmImagePtrOutput {
	return o.ApplyT(func(v *InstanceGceSetup) *InstanceGceSetupVmImage {
		if v == nil {
			return nil
		}
		return v.VmImage
	}).(InstanceGceSetupVmImagePtrOutput)
}

type InstanceGceSetupAcceleratorConfig struct {
	// Optional. Count of cores of this accelerator.
	CoreCount *string `pulumi:"coreCount"`
	// Optional. Type of this accelerator.
	// Possible values are: `NVIDIA_TESLA_P100`, `NVIDIA_TESLA_V100`, `NVIDIA_TESLA_P4`, `NVIDIA_TESLA_T4`, `NVIDIA_TESLA_A100`, `NVIDIA_A100_80GB`, `NVIDIA_L4`, `NVIDIA_TESLA_T4_VWS`, `NVIDIA_TESLA_P100_VWS`, `NVIDIA_TESLA_P4_VWS`.
	Type *string `pulumi:"type"`
}

// InstanceGceSetupAcceleratorConfigInput is an input type that accepts InstanceGceSetupAcceleratorConfigArgs and InstanceGceSetupAcceleratorConfigOutput values.
// You can construct a concrete instance of `InstanceGceSetupAcceleratorConfigInput` via:
//
//	InstanceGceSetupAcceleratorConfigArgs{...}
type InstanceGceSetupAcceleratorConfigInput interface {
	pulumi.Input

	ToInstanceGceSetupAcceleratorConfigOutput() InstanceGceSetupAcceleratorConfigOutput
	ToInstanceGceSetupAcceleratorConfigOutputWithContext(context.Context) InstanceGceSetupAcceleratorConfigOutput
}

type InstanceGceSetupAcceleratorConfigArgs struct {
	// Optional. Count of cores of this accelerator.
	CoreCount pulumi.StringPtrInput `pulumi:"coreCount"`
	// Optional. Type of this accelerator.
	// Possible values are: `NVIDIA_TESLA_P100`, `NVIDIA_TESLA_V100`, `NVIDIA_TESLA_P4`, `NVIDIA_TESLA_T4`, `NVIDIA_TESLA_A100`, `NVIDIA_A100_80GB`, `NVIDIA_L4`, `NVIDIA_TESLA_T4_VWS`, `NVIDIA_TESLA_P100_VWS`, `NVIDIA_TESLA_P4_VWS`.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (InstanceGceSetupAcceleratorConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceGceSetupAcceleratorConfig)(nil)).Elem()
}

func (i InstanceGceSetupAcceleratorConfigArgs) ToInstanceGceSetupAcceleratorConfigOutput() InstanceGceSetupAcceleratorConfigOutput {
	return i.ToInstanceGceSetupAcceleratorConfigOutputWithContext(context.Background())
}

func (i InstanceGceSetupAcceleratorConfigArgs) ToInstanceGceSetupAcceleratorConfigOutputWithContext(ctx context.Context) InstanceGceSetupAcceleratorConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceGceSetupAcceleratorConfigOutput)
}

// InstanceGceSetupAcceleratorConfigArrayInput is an input type that accepts InstanceGceSetupAcceleratorConfigArray and InstanceGceSetupAcceleratorConfigArrayOutput values.
// You can construct a concrete instance of `InstanceGceSetupAcceleratorConfigArrayInput` via:
//
//	InstanceGceSetupAcceleratorConfigArray{ InstanceGceSetupAcceleratorConfigArgs{...} }
type InstanceGceSetupAcceleratorConfigArrayInput interface {
	pulumi.Input

	ToInstanceGceSetupAcceleratorConfigArrayOutput() InstanceGceSetupAcceleratorConfigArrayOutput
	ToInstanceGceSetupAcceleratorConfigArrayOutputWithContext(context.Context) InstanceGceSetupAcceleratorConfigArrayOutput
}

type InstanceGceSetupAcceleratorConfigArray []InstanceGceSetupAcceleratorConfigInput

func (InstanceGceSetupAcceleratorConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceGceSetupAcceleratorConfig)(nil)).Elem()
}

func (i InstanceGceSetupAcceleratorConfigArray) ToInstanceGceSetupAcceleratorConfigArrayOutput() InstanceGceSetupAcceleratorConfigArrayOutput {
	return i.ToInstanceGceSetupAcceleratorConfigArrayOutputWithContext(context.Background())
}

func (i InstanceGceSetupAcceleratorConfigArray) ToInstanceGceSetupAcceleratorConfigArrayOutputWithContext(ctx context.Context) InstanceGceSetupAcceleratorConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceGceSetupAcceleratorConfigArrayOutput)
}

type InstanceGceSetupAcceleratorConfigOutput struct{ *pulumi.OutputState }

func (InstanceGceSetupAcceleratorConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceGceSetupAcceleratorConfig)(nil)).Elem()
}

func (o InstanceGceSetupAcceleratorConfigOutput) ToInstanceGceSetupAcceleratorConfigOutput() InstanceGceSetupAcceleratorConfigOutput {
	return o
}

func (o InstanceGceSetupAcceleratorConfigOutput) ToInstanceGceSetupAcceleratorConfigOutputWithContext(ctx context.Context) InstanceGceSetupAcceleratorConfigOutput {
	return o
}

// Optional. Count of cores of this accelerator.
func (o InstanceGceSetupAcceleratorConfigOutput) CoreCount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceGceSetupAcceleratorConfig) *string { return v.CoreCount }).(pulumi.StringPtrOutput)
}

// Optional. Type of this accelerator.
// Possible values are: `NVIDIA_TESLA_P100`, `NVIDIA_TESLA_V100`, `NVIDIA_TESLA_P4`, `NVIDIA_TESLA_T4`, `NVIDIA_TESLA_A100`, `NVIDIA_A100_80GB`, `NVIDIA_L4`, `NVIDIA_TESLA_T4_VWS`, `NVIDIA_TESLA_P100_VWS`, `NVIDIA_TESLA_P4_VWS`.
func (o InstanceGceSetupAcceleratorConfigOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceGceSetupAcceleratorConfig) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type InstanceGceSetupAcceleratorConfigArrayOutput struct{ *pulumi.OutputState }

func (InstanceGceSetupAcceleratorConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceGceSetupAcceleratorConfig)(nil)).Elem()
}

func (o InstanceGceSetupAcceleratorConfigArrayOutput) ToInstanceGceSetupAcceleratorConfigArrayOutput() InstanceGceSetupAcceleratorConfigArrayOutput {
	return o
}

func (o InstanceGceSetupAcceleratorConfigArrayOutput) ToInstanceGceSetupAcceleratorConfigArrayOutputWithContext(ctx context.Context) InstanceGceSetupAcceleratorConfigArrayOutput {
	return o
}

func (o InstanceGceSetupAcceleratorConfigArrayOutput) Index(i pulumi.IntInput) InstanceGceSetupAcceleratorConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceGceSetupAcceleratorConfig {
		return vs[0].([]InstanceGceSetupAcceleratorConfig)[vs[1].(int)]
	}).(InstanceGceSetupAcceleratorConfigOutput)
}

type InstanceGceSetupBootDisk struct {
	// Optional. Input only. Disk encryption method used on the boot and
	// data disks, defaults to GMEK.
	// Possible values are: `GMEK`, `CMEK`.
	DiskEncryption *string `pulumi:"diskEncryption"`
	// Optional. The size of the boot disk in GB attached to this instance,
	// up to a maximum of 64000 GB (64 TB). If not specified, this defaults to the
	// recommended value of 150GB.
	DiskSizeGb *string `pulumi:"diskSizeGb"`
	// Optional. Indicates the type of the disk.
	// Possible values are: `PD_STANDARD`, `PD_SSD`, `PD_BALANCED`, `PD_EXTREME`.
	DiskType *string `pulumi:"diskType"`
	// 'Optional. The KMS key used to encrypt the disks, only
	// applicable if diskEncryption is CMEK. Format: `projects/{project_id}/locations/{location}/keyRings/{key_ring_id}/cryptoKeys/{key_id}`
	// Learn more about using your own encryption keys.'
	KmsKey *string `pulumi:"kmsKey"`
}

// InstanceGceSetupBootDiskInput is an input type that accepts InstanceGceSetupBootDiskArgs and InstanceGceSetupBootDiskOutput values.
// You can construct a concrete instance of `InstanceGceSetupBootDiskInput` via:
//
//	InstanceGceSetupBootDiskArgs{...}
type InstanceGceSetupBootDiskInput interface {
	pulumi.Input

	ToInstanceGceSetupBootDiskOutput() InstanceGceSetupBootDiskOutput
	ToInstanceGceSetupBootDiskOutputWithContext(context.Context) InstanceGceSetupBootDiskOutput
}

type InstanceGceSetupBootDiskArgs struct {
	// Optional. Input only. Disk encryption method used on the boot and
	// data disks, defaults to GMEK.
	// Possible values are: `GMEK`, `CMEK`.
	DiskEncryption pulumi.StringPtrInput `pulumi:"diskEncryption"`
	// Optional. The size of the boot disk in GB attached to this instance,
	// up to a maximum of 64000 GB (64 TB). If not specified, this defaults to the
	// recommended value of 150GB.
	DiskSizeGb pulumi.StringPtrInput `pulumi:"diskSizeGb"`
	// Optional. Indicates the type of the disk.
	// Possible values are: `PD_STANDARD`, `PD_SSD`, `PD_BALANCED`, `PD_EXTREME`.
	DiskType pulumi.StringPtrInput `pulumi:"diskType"`
	// 'Optional. The KMS key used to encrypt the disks, only
	// applicable if diskEncryption is CMEK. Format: `projects/{project_id}/locations/{location}/keyRings/{key_ring_id}/cryptoKeys/{key_id}`
	// Learn more about using your own encryption keys.'
	KmsKey pulumi.StringPtrInput `pulumi:"kmsKey"`
}

func (InstanceGceSetupBootDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceGceSetupBootDisk)(nil)).Elem()
}

func (i InstanceGceSetupBootDiskArgs) ToInstanceGceSetupBootDiskOutput() InstanceGceSetupBootDiskOutput {
	return i.ToInstanceGceSetupBootDiskOutputWithContext(context.Background())
}

func (i InstanceGceSetupBootDiskArgs) ToInstanceGceSetupBootDiskOutputWithContext(ctx context.Context) InstanceGceSetupBootDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceGceSetupBootDiskOutput)
}

func (i InstanceGceSetupBootDiskArgs) ToInstanceGceSetupBootDiskPtrOutput() InstanceGceSetupBootDiskPtrOutput {
	return i.ToInstanceGceSetupBootDiskPtrOutputWithContext(context.Background())
}

func (i InstanceGceSetupBootDiskArgs) ToInstanceGceSetupBootDiskPtrOutputWithContext(ctx context.Context) InstanceGceSetupBootDiskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceGceSetupBootDiskOutput).ToInstanceGceSetupBootDiskPtrOutputWithContext(ctx)
}

// InstanceGceSetupBootDiskPtrInput is an input type that accepts InstanceGceSetupBootDiskArgs, InstanceGceSetupBootDiskPtr and InstanceGceSetupBootDiskPtrOutput values.
// You can construct a concrete instance of `InstanceGceSetupBootDiskPtrInput` via:
//
//	        InstanceGceSetupBootDiskArgs{...}
//
//	or:
//
//	        nil
type InstanceGceSetupBootDiskPtrInput interface {
	pulumi.Input

	ToInstanceGceSetupBootDiskPtrOutput() InstanceGceSetupBootDiskPtrOutput
	ToInstanceGceSetupBootDiskPtrOutputWithContext(context.Context) InstanceGceSetupBootDiskPtrOutput
}

type instanceGceSetupBootDiskPtrType InstanceGceSetupBootDiskArgs

func InstanceGceSetupBootDiskPtr(v *InstanceGceSetupBootDiskArgs) InstanceGceSetupBootDiskPtrInput {
	return (*instanceGceSetupBootDiskPtrType)(v)
}

func (*instanceGceSetupBootDiskPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceGceSetupBootDisk)(nil)).Elem()
}

func (i *instanceGceSetupBootDiskPtrType) ToInstanceGceSetupBootDiskPtrOutput() InstanceGceSetupBootDiskPtrOutput {
	return i.ToInstanceGceSetupBootDiskPtrOutputWithContext(context.Background())
}

func (i *instanceGceSetupBootDiskPtrType) ToInstanceGceSetupBootDiskPtrOutputWithContext(ctx context.Context) InstanceGceSetupBootDiskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceGceSetupBootDiskPtrOutput)
}

type InstanceGceSetupBootDiskOutput struct{ *pulumi.OutputState }

func (InstanceGceSetupBootDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceGceSetupBootDisk)(nil)).Elem()
}

func (o InstanceGceSetupBootDiskOutput) ToInstanceGceSetupBootDiskOutput() InstanceGceSetupBootDiskOutput {
	return o
}

func (o InstanceGceSetupBootDiskOutput) ToInstanceGceSetupBootDiskOutputWithContext(ctx context.Context) InstanceGceSetupBootDiskOutput {
	return o
}

func (o InstanceGceSetupBootDiskOutput) ToInstanceGceSetupBootDiskPtrOutput() InstanceGceSetupBootDiskPtrOutput {
	return o.ToInstanceGceSetupBootDiskPtrOutputWithContext(context.Background())
}

func (o InstanceGceSetupBootDiskOutput) ToInstanceGceSetupBootDiskPtrOutputWithContext(ctx context.Context) InstanceGceSetupBootDiskPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceGceSetupBootDisk) *InstanceGceSetupBootDisk {
		return &v
	}).(InstanceGceSetupBootDiskPtrOutput)
}

// Optional. Input only. Disk encryption method used on the boot and
// data disks, defaults to GMEK.
// Possible values are: `GMEK`, `CMEK`.
func (o InstanceGceSetupBootDiskOutput) DiskEncryption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceGceSetupBootDisk) *string { return v.DiskEncryption }).(pulumi.StringPtrOutput)
}

// Optional. The size of the boot disk in GB attached to this instance,
// up to a maximum of 64000 GB (64 TB). If not specified, this defaults to the
// recommended value of 150GB.
func (o InstanceGceSetupBootDiskOutput) DiskSizeGb() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceGceSetupBootDisk) *string { return v.DiskSizeGb }).(pulumi.StringPtrOutput)
}

// Optional. Indicates the type of the disk.
// Possible values are: `PD_STANDARD`, `PD_SSD`, `PD_BALANCED`, `PD_EXTREME`.
func (o InstanceGceSetupBootDiskOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceGceSetupBootDisk) *string { return v.DiskType }).(pulumi.StringPtrOutput)
}

// 'Optional. The KMS key used to encrypt the disks, only
// applicable if diskEncryption is CMEK. Format: `projects/{project_id}/locations/{location}/keyRings/{key_ring_id}/cryptoKeys/{key_id}`
// Learn more about using your own encryption keys.'
func (o InstanceGceSetupBootDiskOutput) KmsKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceGceSetupBootDisk) *string { return v.KmsKey }).(pulumi.StringPtrOutput)
}

type InstanceGceSetupBootDiskPtrOutput struct{ *pulumi.OutputState }

func (InstanceGceSetupBootDiskPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceGceSetupBootDisk)(nil)).Elem()
}

func (o InstanceGceSetupBootDiskPtrOutput) ToInstanceGceSetupBootDiskPtrOutput() InstanceGceSetupBootDiskPtrOutput {
	return o
}

func (o InstanceGceSetupBootDiskPtrOutput) ToInstanceGceSetupBootDiskPtrOutputWithContext(ctx context.Context) InstanceGceSetupBootDiskPtrOutput {
	return o
}

func (o InstanceGceSetupBootDiskPtrOutput) Elem() InstanceGceSetupBootDiskOutput {
	return o.ApplyT(func(v *InstanceGceSetupBootDisk) InstanceGceSetupBootDisk {
		if v != nil {
			return *v
		}
		var ret InstanceGceSetupBootDisk
		return ret
	}).(InstanceGceSetupBootDiskOutput)
}

// Optional. Input only. Disk encryption method used on the boot and
// data disks, defaults to GMEK.
// Possible values are: `GMEK`, `CMEK`.
func (o InstanceGceSetupBootDiskPtrOutput) DiskEncryption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceGceSetupBootDisk) *string {
		if v == nil {
			return nil
		}
		return v.DiskEncryption
	}).(pulumi.StringPtrOutput)
}

// Optional. The size of the boot disk in GB attached to this instance,
// up to a maximum of 64000 GB (64 TB). If not specified, this defaults to the
// recommended value of 150GB.
func (o InstanceGceSetupBootDiskPtrOutput) DiskSizeGb() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceGceSetupBootDisk) *string {
		if v == nil {
			return nil
		}
		return v.DiskSizeGb
	}).(pulumi.StringPtrOutput)
}

// Optional. Indicates the type of the disk.
// Possible values are: `PD_STANDARD`, `PD_SSD`, `PD_BALANCED`, `PD_EXTREME`.
func (o InstanceGceSetupBootDiskPtrOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceGceSetupBootDisk) *string {
		if v == nil {
			return nil
		}
		return v.DiskType
	}).(pulumi.StringPtrOutput)
}

// 'Optional. The KMS key used to encrypt the disks, only
// applicable if diskEncryption is CMEK. Format: `projects/{project_id}/locations/{location}/keyRings/{key_ring_id}/cryptoKeys/{key_id}`
// Learn more about using your own encryption keys.'
func (o InstanceGceSetupBootDiskPtrOutput) KmsKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceGceSetupBootDisk) *string {
		if v == nil {
			return nil
		}
		return v.KmsKey
	}).(pulumi.StringPtrOutput)
}

type InstanceGceSetupConfidentialInstanceConfig struct {
	// Defines the type of technology used by the confidential instance.
	// Possible values are: `SEV`.
	ConfidentialInstanceType *string `pulumi:"confidentialInstanceType"`
}

// InstanceGceSetupConfidentialInstanceConfigInput is an input type that accepts InstanceGceSetupConfidentialInstanceConfigArgs and InstanceGceSetupConfidentialInstanceConfigOutput values.
// You can construct a concrete instance of `InstanceGceSetupConfidentialInstanceConfigInput` via:
//
//	InstanceGceSetupConfidentialInstanceConfigArgs{...}
type InstanceGceSetupConfidentialInstanceConfigInput interface {
	pulumi.Input

	ToInstanceGceSetupConfidentialInstanceConfigOutput() InstanceGceSetupConfidentialInstanceConfigOutput
	ToInstanceGceSetupConfidentialInstanceConfigOutputWithContext(context.Context) InstanceGceSetupConfidentialInstanceConfigOutput
}

type InstanceGceSetupConfidentialInstanceConfigArgs struct {
	// Defines the type of technology used by the confidential instance.
	// Possible values are: `SEV`.
	ConfidentialInstanceType pulumi.StringPtrInput `pulumi:"confidentialInstanceType"`
}

func (InstanceGceSetupConfidentialInstanceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceGceSetupConfidentialInstanceConfig)(nil)).Elem()
}

func (i InstanceGceSetupConfidentialInstanceConfigArgs) ToInstanceGceSetupConfidentialInstanceConfigOutput() InstanceGceSetupConfidentialInstanceConfigOutput {
	return i.ToInstanceGceSetupConfidentialInstanceConfigOutputWithContext(context.Background())
}

func (i InstanceGceSetupConfidentialInstanceConfigArgs) ToInstanceGceSetupConfidentialInstanceConfigOutputWithContext(ctx context.Context) InstanceGceSetupConfidentialInstanceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceGceSetupConfidentialInstanceConfigOutput)
}

func (i InstanceGceSetupConfidentialInstanceConfigArgs) ToInstanceGceSetupConfidentialInstanceConfigPtrOutput() InstanceGceSetupConfidentialInstanceConfigPtrOutput {
	return i.ToInstanceGceSetupConfidentialInstanceConfigPtrOutputWithContext(context.Background())
}

func (i InstanceGceSetupConfidentialInstanceConfigArgs) ToInstanceGceSetupConfidentialInstanceConfigPtrOutputWithContext(ctx context.Context) InstanceGceSetupConfidentialInstanceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceGceSetupConfidentialInstanceConfigOutput).ToInstanceGceSetupConfidentialInstanceConfigPtrOutputWithContext(ctx)
}

// InstanceGceSetupConfidentialInstanceConfigPtrInput is an input type that accepts InstanceGceSetupConfidentialInstanceConfigArgs, InstanceGceSetupConfidentialInstanceConfigPtr and InstanceGceSetupConfidentialInstanceConfigPtrOutput values.
// You can construct a concrete instance of `InstanceGceSetupConfidentialInstanceConfigPtrInput` via:
//
//	        InstanceGceSetupConfidentialInstanceConfigArgs{...}
//
//	or:
//
//	        nil
type InstanceGceSetupConfidentialInstanceConfigPtrInput interface {
	pulumi.Input

	ToInstanceGceSetupConfidentialInstanceConfigPtrOutput() InstanceGceSetupConfidentialInstanceConfigPtrOutput
	ToInstanceGceSetupConfidentialInstanceConfigPtrOutputWithContext(context.Context) InstanceGceSetupConfidentialInstanceConfigPtrOutput
}

type instanceGceSetupConfidentialInstanceConfigPtrType InstanceGceSetupConfidentialInstanceConfigArgs

func InstanceGceSetupConfidentialInstanceConfigPtr(v *InstanceGceSetupConfidentialInstanceConfigArgs) InstanceGceSetupConfidentialInstanceConfigPtrInput {
	return (*instanceGceSetupConfidentialInstanceConfigPtrType)(v)
}

func (*instanceGceSetupConfidentialInstanceConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceGceSetupConfidentialInstanceConfig)(nil)).Elem()
}

func (i *instanceGceSetupConfidentialInstanceConfigPtrType) ToInstanceGceSetupConfidentialInstanceConfigPtrOutput() InstanceGceSetupConfidentialInstanceConfigPtrOutput {
	return i.ToInstanceGceSetupConfidentialInstanceConfigPtrOutputWithContext(context.Background())
}

func (i *instanceGceSetupConfidentialInstanceConfigPtrType) ToInstanceGceSetupConfidentialInstanceConfigPtrOutputWithContext(ctx context.Context) InstanceGceSetupConfidentialInstanceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceGceSetupConfidentialInstanceConfigPtrOutput)
}

type InstanceGceSetupConfidentialInstanceConfigOutput struct{ *pulumi.OutputState }

func (InstanceGceSetupConfidentialInstanceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceGceSetupConfidentialInstanceConfig)(nil)).Elem()
}

func (o InstanceGceSetupConfidentialInstanceConfigOutput) ToInstanceGceSetupConfidentialInstanceConfigOutput() InstanceGceSetupConfidentialInstanceConfigOutput {
	return o
}

func (o InstanceGceSetupConfidentialInstanceConfigOutput) ToInstanceGceSetupConfidentialInstanceConfigOutputWithContext(ctx context.Context) InstanceGceSetupConfidentialInstanceConfigOutput {
	return o
}

func (o InstanceGceSetupConfidentialInstanceConfigOutput) ToInstanceGceSetupConfidentialInstanceConfigPtrOutput() InstanceGceSetupConfidentialInstanceConfigPtrOutput {
	return o.ToInstanceGceSetupConfidentialInstanceConfigPtrOutputWithContext(context.Background())
}

func (o InstanceGceSetupConfidentialInstanceConfigOutput) ToInstanceGceSetupConfidentialInstanceConfigPtrOutputWithContext(ctx context.Context) InstanceGceSetupConfidentialInstanceConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceGceSetupConfidentialInstanceConfig) *InstanceGceSetupConfidentialInstanceConfig {
		return &v
	}).(InstanceGceSetupConfidentialInstanceConfigPtrOutput)
}

// Defines the type of technology used by the confidential instance.
// Possible values are: `SEV`.
func (o InstanceGceSetupConfidentialInstanceConfigOutput) ConfidentialInstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceGceSetupConfidentialInstanceConfig) *string { return v.ConfidentialInstanceType }).(pulumi.StringPtrOutput)
}

type InstanceGceSetupConfidentialInstanceConfigPtrOutput struct{ *pulumi.OutputState }

func (InstanceGceSetupConfidentialInstanceConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceGceSetupConfidentialInstanceConfig)(nil)).Elem()
}

func (o InstanceGceSetupConfidentialInstanceConfigPtrOutput) ToInstanceGceSetupConfidentialInstanceConfigPtrOutput() InstanceGceSetupConfidentialInstanceConfigPtrOutput {
	return o
}

func (o InstanceGceSetupConfidentialInstanceConfigPtrOutput) ToInstanceGceSetupConfidentialInstanceConfigPtrOutputWithContext(ctx context.Context) InstanceGceSetupConfidentialInstanceConfigPtrOutput {
	return o
}

func (o InstanceGceSetupConfidentialInstanceConfigPtrOutput) Elem() InstanceGceSetupConfidentialInstanceConfigOutput {
	return o.ApplyT(func(v *InstanceGceSetupConfidentialInstanceConfig) InstanceGceSetupConfidentialInstanceConfig {
		if v != nil {
			return *v
		}
		var ret InstanceGceSetupConfidentialInstanceConfig
		return ret
	}).(InstanceGceSetupConfidentialInstanceConfigOutput)
}

// Defines the type of technology used by the confidential instance.
// Possible values are: `SEV`.
func (o InstanceGceSetupConfidentialInstanceConfigPtrOutput) ConfidentialInstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceGceSetupConfidentialInstanceConfig) *string {
		if v == nil {
			return nil
		}
		return v.ConfidentialInstanceType
	}).(pulumi.StringPtrOutput)
}

type InstanceGceSetupContainerImage struct {
	// The path to the container image repository.
	// For example: gcr.io/{project_id}/{imageName}
	Repository string `pulumi:"repository"`
	// The tag of the container image. If not specified, this defaults to the latest tag.
	Tag *string `pulumi:"tag"`
}

// InstanceGceSetupContainerImageInput is an input type that accepts InstanceGceSetupContainerImageArgs and InstanceGceSetupContainerImageOutput values.
// You can construct a concrete instance of `InstanceGceSetupContainerImageInput` via:
//
//	InstanceGceSetupContainerImageArgs{...}
type InstanceGceSetupContainerImageInput interface {
	pulumi.Input

	ToInstanceGceSetupContainerImageOutput() InstanceGceSetupContainerImageOutput
	ToInstanceGceSetupContainerImageOutputWithContext(context.Context) InstanceGceSetupContainerImageOutput
}

type InstanceGceSetupContainerImageArgs struct {
	// The path to the container image repository.
	// For example: gcr.io/{project_id}/{imageName}
	Repository pulumi.StringInput `pulumi:"repository"`
	// The tag of the container image. If not specified, this defaults to the latest tag.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
}

func (InstanceGceSetupContainerImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceGceSetupContainerImage)(nil)).Elem()
}

func (i InstanceGceSetupContainerImageArgs) ToInstanceGceSetupContainerImageOutput() InstanceGceSetupContainerImageOutput {
	return i.ToInstanceGceSetupContainerImageOutputWithContext(context.Background())
}

func (i InstanceGceSetupContainerImageArgs) ToInstanceGceSetupContainerImageOutputWithContext(ctx context.Context) InstanceGceSetupContainerImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceGceSetupContainerImageOutput)
}

func (i InstanceGceSetupContainerImageArgs) ToInstanceGceSetupContainerImagePtrOutput() InstanceGceSetupContainerImagePtrOutput {
	return i.ToInstanceGceSetupContainerImagePtrOutputWithContext(context.Background())
}

func (i InstanceGceSetupContainerImageArgs) ToInstanceGceSetupContainerImagePtrOutputWithContext(ctx context.Context) InstanceGceSetupContainerImagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceGceSetupContainerImageOutput).ToInstanceGceSetupContainerImagePtrOutputWithContext(ctx)
}

// InstanceGceSetupContainerImagePtrInput is an input type that accepts InstanceGceSetupContainerImageArgs, InstanceGceSetupContainerImagePtr and InstanceGceSetupContainerImagePtrOutput values.
// You can construct a concrete instance of `InstanceGceSetupContainerImagePtrInput` via:
//
//	        InstanceGceSetupContainerImageArgs{...}
//
//	or:
//
//	        nil
type InstanceGceSetupContainerImagePtrInput interface {
	pulumi.Input

	ToInstanceGceSetupContainerImagePtrOutput() InstanceGceSetupContainerImagePtrOutput
	ToInstanceGceSetupContainerImagePtrOutputWithContext(context.Context) InstanceGceSetupContainerImagePtrOutput
}

type instanceGceSetupContainerImagePtrType InstanceGceSetupContainerImageArgs

func InstanceGceSetupContainerImagePtr(v *InstanceGceSetupContainerImageArgs) InstanceGceSetupContainerImagePtrInput {
	return (*instanceGceSetupContainerImagePtrType)(v)
}

func (*instanceGceSetupContainerImagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceGceSetupContainerImage)(nil)).Elem()
}

func (i *instanceGceSetupContainerImagePtrType) ToInstanceGceSetupContainerImagePtrOutput() InstanceGceSetupContainerImagePtrOutput {
	return i.ToInstanceGceSetupContainerImagePtrOutputWithContext(context.Background())
}

func (i *instanceGceSetupContainerImagePtrType) ToInstanceGceSetupContainerImagePtrOutputWithContext(ctx context.Context) InstanceGceSetupContainerImagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceGceSetupContainerImagePtrOutput)
}

type InstanceGceSetupContainerImageOutput struct{ *pulumi.OutputState }

func (InstanceGceSetupContainerImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceGceSetupContainerImage)(nil)).Elem()
}

func (o InstanceGceSetupContainerImageOutput) ToInstanceGceSetupContainerImageOutput() InstanceGceSetupContainerImageOutput {
	return o
}

func (o InstanceGceSetupContainerImageOutput) ToInstanceGceSetupContainerImageOutputWithContext(ctx context.Context) InstanceGceSetupContainerImageOutput {
	return o
}

func (o InstanceGceSetupContainerImageOutput) ToInstanceGceSetupContainerImagePtrOutput() InstanceGceSetupContainerImagePtrOutput {
	return o.ToInstanceGceSetupContainerImagePtrOutputWithContext(context.Background())
}

func (o InstanceGceSetupContainerImageOutput) ToInstanceGceSetupContainerImagePtrOutputWithContext(ctx context.Context) InstanceGceSetupContainerImagePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceGceSetupContainerImage) *InstanceGceSetupContainerImage {
		return &v
	}).(InstanceGceSetupContainerImagePtrOutput)
}

// The path to the container image repository.
// For example: gcr.io/{project_id}/{imageName}
func (o InstanceGceSetupContainerImageOutput) Repository() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceGceSetupContainerImage) string { return v.Repository }).(pulumi.StringOutput)
}

// The tag of the container image. If not specified, this defaults to the latest tag.
func (o InstanceGceSetupContainerImageOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceGceSetupContainerImage) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type InstanceGceSetupContainerImagePtrOutput struct{ *pulumi.OutputState }

func (InstanceGceSetupContainerImagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceGceSetupContainerImage)(nil)).Elem()
}

func (o InstanceGceSetupContainerImagePtrOutput) ToInstanceGceSetupContainerImagePtrOutput() InstanceGceSetupContainerImagePtrOutput {
	return o
}

func (o InstanceGceSetupContainerImagePtrOutput) ToInstanceGceSetupContainerImagePtrOutputWithContext(ctx context.Context) InstanceGceSetupContainerImagePtrOutput {
	return o
}

func (o InstanceGceSetupContainerImagePtrOutput) Elem() InstanceGceSetupContainerImageOutput {
	return o.ApplyT(func(v *InstanceGceSetupContainerImage) InstanceGceSetupContainerImage {
		if v != nil {
			return *v
		}
		var ret InstanceGceSetupContainerImage
		return ret
	}).(InstanceGceSetupContainerImageOutput)
}

// The path to the container image repository.
// For example: gcr.io/{project_id}/{imageName}
func (o InstanceGceSetupContainerImagePtrOutput) Repository() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceGceSetupContainerImage) *string {
		if v == nil {
			return nil
		}
		return &v.Repository
	}).(pulumi.StringPtrOutput)
}

// The tag of the container image. If not specified, this defaults to the latest tag.
func (o InstanceGceSetupContainerImagePtrOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceGceSetupContainerImage) *string {
		if v == nil {
			return nil
		}
		return v.Tag
	}).(pulumi.StringPtrOutput)
}

type InstanceGceSetupDataDisks struct {
	// Optional. Input only. Disk encryption method used on the boot
	// and data disks, defaults to GMEK.
	// Possible values are: `GMEK`, `CMEK`.
	DiskEncryption *string `pulumi:"diskEncryption"`
	// Optional. The size of the disk in GB attached to this VM instance,
	// up to a maximum of 64000 GB (64 TB). If not specified, this defaults to
	// 100.
	DiskSizeGb *string `pulumi:"diskSizeGb"`
	// Optional. Input only. Indicates the type of the disk.
	// Possible values are: `PD_STANDARD`, `PD_SSD`, `PD_BALANCED`, `PD_EXTREME`.
	DiskType *string `pulumi:"diskType"`
	// 'Optional. The KMS key used to encrypt the disks,
	// only applicable if diskEncryption is CMEK. Format: `projects/{project_id}/locations/{location}/keyRings/{key_ring_id}/cryptoKeys/{key_id}`
	// Learn more about using your own encryption keys.'
	KmsKey *string `pulumi:"kmsKey"`
}

// InstanceGceSetupDataDisksInput is an input type that accepts InstanceGceSetupDataDisksArgs and InstanceGceSetupDataDisksOutput values.
// You can construct a concrete instance of `InstanceGceSetupDataDisksInput` via:
//
//	InstanceGceSetupDataDisksArgs{...}
type InstanceGceSetupDataDisksInput interface {
	pulumi.Input

	ToInstanceGceSetupDataDisksOutput() InstanceGceSetupDataDisksOutput
	ToInstanceGceSetupDataDisksOutputWithContext(context.Context) InstanceGceSetupDataDisksOutput
}

type InstanceGceSetupDataDisksArgs struct {
	// Optional. Input only. Disk encryption method used on the boot
	// and data disks, defaults to GMEK.
	// Possible values are: `GMEK`, `CMEK`.
	DiskEncryption pulumi.StringPtrInput `pulumi:"diskEncryption"`
	// Optional. The size of the disk in GB attached to this VM instance,
	// up to a maximum of 64000 GB (64 TB). If not specified, this defaults to
	// 100.
	DiskSizeGb pulumi.StringPtrInput `pulumi:"diskSizeGb"`
	// Optional. Input only. Indicates the type of the disk.
	// Possible values are: `PD_STANDARD`, `PD_SSD`, `PD_BALANCED`, `PD_EXTREME`.
	DiskType pulumi.StringPtrInput `pulumi:"diskType"`
	// 'Optional. The KMS key used to encrypt the disks,
	// only applicable if diskEncryption is CMEK. Format: `projects/{project_id}/locations/{location}/keyRings/{key_ring_id}/cryptoKeys/{key_id}`
	// Learn more about using your own encryption keys.'
	KmsKey pulumi.StringPtrInput `pulumi:"kmsKey"`
}

func (InstanceGceSetupDataDisksArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceGceSetupDataDisks)(nil)).Elem()
}

func (i InstanceGceSetupDataDisksArgs) ToInstanceGceSetupDataDisksOutput() InstanceGceSetupDataDisksOutput {
	return i.ToInstanceGceSetupDataDisksOutputWithContext(context.Background())
}

func (i InstanceGceSetupDataDisksArgs) ToInstanceGceSetupDataDisksOutputWithContext(ctx context.Context) InstanceGceSetupDataDisksOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceGceSetupDataDisksOutput)
}

func (i InstanceGceSetupDataDisksArgs) ToInstanceGceSetupDataDisksPtrOutput() InstanceGceSetupDataDisksPtrOutput {
	return i.ToInstanceGceSetupDataDisksPtrOutputWithContext(context.Background())
}

func (i InstanceGceSetupDataDisksArgs) ToInstanceGceSetupDataDisksPtrOutputWithContext(ctx context.Context) InstanceGceSetupDataDisksPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceGceSetupDataDisksOutput).ToInstanceGceSetupDataDisksPtrOutputWithContext(ctx)
}

// InstanceGceSetupDataDisksPtrInput is an input type that accepts InstanceGceSetupDataDisksArgs, InstanceGceSetupDataDisksPtr and InstanceGceSetupDataDisksPtrOutput values.
// You can construct a concrete instance of `InstanceGceSetupDataDisksPtrInput` via:
//
//	        InstanceGceSetupDataDisksArgs{...}
//
//	or:
//
//	        nil
type InstanceGceSetupDataDisksPtrInput interface {
	pulumi.Input

	ToInstanceGceSetupDataDisksPtrOutput() InstanceGceSetupDataDisksPtrOutput
	ToInstanceGceSetupDataDisksPtrOutputWithContext(context.Context) InstanceGceSetupDataDisksPtrOutput
}

type instanceGceSetupDataDisksPtrType InstanceGceSetupDataDisksArgs

func InstanceGceSetupDataDisksPtr(v *InstanceGceSetupDataDisksArgs) InstanceGceSetupDataDisksPtrInput {
	return (*instanceGceSetupDataDisksPtrType)(v)
}

func (*instanceGceSetupDataDisksPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceGceSetupDataDisks)(nil)).Elem()
}

func (i *instanceGceSetupDataDisksPtrType) ToInstanceGceSetupDataDisksPtrOutput() InstanceGceSetupDataDisksPtrOutput {
	return i.ToInstanceGceSetupDataDisksPtrOutputWithContext(context.Background())
}

func (i *instanceGceSetupDataDisksPtrType) ToInstanceGceSetupDataDisksPtrOutputWithContext(ctx context.Context) InstanceGceSetupDataDisksPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceGceSetupDataDisksPtrOutput)
}

type InstanceGceSetupDataDisksOutput struct{ *pulumi.OutputState }

func (InstanceGceSetupDataDisksOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceGceSetupDataDisks)(nil)).Elem()
}

func (o InstanceGceSetupDataDisksOutput) ToInstanceGceSetupDataDisksOutput() InstanceGceSetupDataDisksOutput {
	return o
}

func (o InstanceGceSetupDataDisksOutput) ToInstanceGceSetupDataDisksOutputWithContext(ctx context.Context) InstanceGceSetupDataDisksOutput {
	return o
}

func (o InstanceGceSetupDataDisksOutput) ToInstanceGceSetupDataDisksPtrOutput() InstanceGceSetupDataDisksPtrOutput {
	return o.ToInstanceGceSetupDataDisksPtrOutputWithContext(context.Background())
}

func (o InstanceGceSetupDataDisksOutput) ToInstanceGceSetupDataDisksPtrOutputWithContext(ctx context.Context) InstanceGceSetupDataDisksPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceGceSetupDataDisks) *InstanceGceSetupDataDisks {
		return &v
	}).(InstanceGceSetupDataDisksPtrOutput)
}

// Optional. Input only. Disk encryption method used on the boot
// and data disks, defaults to GMEK.
// Possible values are: `GMEK`, `CMEK`.
func (o InstanceGceSetupDataDisksOutput) DiskEncryption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceGceSetupDataDisks) *string { return v.DiskEncryption }).(pulumi.StringPtrOutput)
}

// Optional. The size of the disk in GB attached to this VM instance,
// up to a maximum of 64000 GB (64 TB). If not specified, this defaults to
// 100.
func (o InstanceGceSetupDataDisksOutput) DiskSizeGb() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceGceSetupDataDisks) *string { return v.DiskSizeGb }).(pulumi.StringPtrOutput)
}

// Optional. Input only. Indicates the type of the disk.
// Possible values are: `PD_STANDARD`, `PD_SSD`, `PD_BALANCED`, `PD_EXTREME`.
func (o InstanceGceSetupDataDisksOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceGceSetupDataDisks) *string { return v.DiskType }).(pulumi.StringPtrOutput)
}

// 'Optional. The KMS key used to encrypt the disks,
// only applicable if diskEncryption is CMEK. Format: `projects/{project_id}/locations/{location}/keyRings/{key_ring_id}/cryptoKeys/{key_id}`
// Learn more about using your own encryption keys.'
func (o InstanceGceSetupDataDisksOutput) KmsKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceGceSetupDataDisks) *string { return v.KmsKey }).(pulumi.StringPtrOutput)
}

type InstanceGceSetupDataDisksPtrOutput struct{ *pulumi.OutputState }

func (InstanceGceSetupDataDisksPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceGceSetupDataDisks)(nil)).Elem()
}

func (o InstanceGceSetupDataDisksPtrOutput) ToInstanceGceSetupDataDisksPtrOutput() InstanceGceSetupDataDisksPtrOutput {
	return o
}

func (o InstanceGceSetupDataDisksPtrOutput) ToInstanceGceSetupDataDisksPtrOutputWithContext(ctx context.Context) InstanceGceSetupDataDisksPtrOutput {
	return o
}

func (o InstanceGceSetupDataDisksPtrOutput) Elem() InstanceGceSetupDataDisksOutput {
	return o.ApplyT(func(v *InstanceGceSetupDataDisks) InstanceGceSetupDataDisks {
		if v != nil {
			return *v
		}
		var ret InstanceGceSetupDataDisks
		return ret
	}).(InstanceGceSetupDataDisksOutput)
}

// Optional. Input only. Disk encryption method used on the boot
// and data disks, defaults to GMEK.
// Possible values are: `GMEK`, `CMEK`.
func (o InstanceGceSetupDataDisksPtrOutput) DiskEncryption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceGceSetupDataDisks) *string {
		if v == nil {
			return nil
		}
		return v.DiskEncryption
	}).(pulumi.StringPtrOutput)
}

// Optional. The size of the disk in GB attached to this VM instance,
// up to a maximum of 64000 GB (64 TB). If not specified, this defaults to
// 100.
func (o InstanceGceSetupDataDisksPtrOutput) DiskSizeGb() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceGceSetupDataDisks) *string {
		if v == nil {
			return nil
		}
		return v.DiskSizeGb
	}).(pulumi.StringPtrOutput)
}

// Optional. Input only. Indicates the type of the disk.
// Possible values are: `PD_STANDARD`, `PD_SSD`, `PD_BALANCED`, `PD_EXTREME`.
func (o InstanceGceSetupDataDisksPtrOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceGceSetupDataDisks) *string {
		if v == nil {
			return nil
		}
		return v.DiskType
	}).(pulumi.StringPtrOutput)
}

// 'Optional. The KMS key used to encrypt the disks,
// only applicable if diskEncryption is CMEK. Format: `projects/{project_id}/locations/{location}/keyRings/{key_ring_id}/cryptoKeys/{key_id}`
// Learn more about using your own encryption keys.'
func (o InstanceGceSetupDataDisksPtrOutput) KmsKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceGceSetupDataDisks) *string {
		if v == nil {
			return nil
		}
		return v.KmsKey
	}).(pulumi.StringPtrOutput)
}

type InstanceGceSetupNetworkInterface struct {
	// Optional. An array of configurations for this interface. Currently, only one access
	// config, ONE_TO_ONE_NAT, is supported. If no accessConfigs specified, the
	// instance will have an external internet access through an ephemeral
	// external IP address.
	// Structure is documented below.
	AccessConfigs []InstanceGceSetupNetworkInterfaceAccessConfig `pulumi:"accessConfigs"`
	// Optional. The name of the VPC that this VM instance is in.
	Network *string `pulumi:"network"`
	// Optional. The type of vNIC to be used on this interface. This
	// may be gVNIC or VirtioNet.
	// Possible values are: `VIRTIO_NET`, `GVNIC`.
	NicType *string `pulumi:"nicType"`
	// Optional. The name of the subnet that this VM instance is in.
	Subnet *string `pulumi:"subnet"`
}

// InstanceGceSetupNetworkInterfaceInput is an input type that accepts InstanceGceSetupNetworkInterfaceArgs and InstanceGceSetupNetworkInterfaceOutput values.
// You can construct a concrete instance of `InstanceGceSetupNetworkInterfaceInput` via:
//
//	InstanceGceSetupNetworkInterfaceArgs{...}
type InstanceGceSetupNetworkInterfaceInput interface {
	pulumi.Input

	ToInstanceGceSetupNetworkInterfaceOutput() InstanceGceSetupNetworkInterfaceOutput
	ToInstanceGceSetupNetworkInterfaceOutputWithContext(context.Context) InstanceGceSetupNetworkInterfaceOutput
}

type InstanceGceSetupNetworkInterfaceArgs struct {
	// Optional. An array of configurations for this interface. Currently, only one access
	// config, ONE_TO_ONE_NAT, is supported. If no accessConfigs specified, the
	// instance will have an external internet access through an ephemeral
	// external IP address.
	// Structure is documented below.
	AccessConfigs InstanceGceSetupNetworkInterfaceAccessConfigArrayInput `pulumi:"accessConfigs"`
	// Optional. The name of the VPC that this VM instance is in.
	Network pulumi.StringPtrInput `pulumi:"network"`
	// Optional. The type of vNIC to be used on this interface. This
	// may be gVNIC or VirtioNet.
	// Possible values are: `VIRTIO_NET`, `GVNIC`.
	NicType pulumi.StringPtrInput `pulumi:"nicType"`
	// Optional. The name of the subnet that this VM instance is in.
	Subnet pulumi.StringPtrInput `pulumi:"subnet"`
}

func (InstanceGceSetupNetworkInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceGceSetupNetworkInterface)(nil)).Elem()
}

func (i InstanceGceSetupNetworkInterfaceArgs) ToInstanceGceSetupNetworkInterfaceOutput() InstanceGceSetupNetworkInterfaceOutput {
	return i.ToInstanceGceSetupNetworkInterfaceOutputWithContext(context.Background())
}

func (i InstanceGceSetupNetworkInterfaceArgs) ToInstanceGceSetupNetworkInterfaceOutputWithContext(ctx context.Context) InstanceGceSetupNetworkInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceGceSetupNetworkInterfaceOutput)
}

// InstanceGceSetupNetworkInterfaceArrayInput is an input type that accepts InstanceGceSetupNetworkInterfaceArray and InstanceGceSetupNetworkInterfaceArrayOutput values.
// You can construct a concrete instance of `InstanceGceSetupNetworkInterfaceArrayInput` via:
//
//	InstanceGceSetupNetworkInterfaceArray{ InstanceGceSetupNetworkInterfaceArgs{...} }
type InstanceGceSetupNetworkInterfaceArrayInput interface {
	pulumi.Input

	ToInstanceGceSetupNetworkInterfaceArrayOutput() InstanceGceSetupNetworkInterfaceArrayOutput
	ToInstanceGceSetupNetworkInterfaceArrayOutputWithContext(context.Context) InstanceGceSetupNetworkInterfaceArrayOutput
}

type InstanceGceSetupNetworkInterfaceArray []InstanceGceSetupNetworkInterfaceInput

func (InstanceGceSetupNetworkInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceGceSetupNetworkInterface)(nil)).Elem()
}

func (i InstanceGceSetupNetworkInterfaceArray) ToInstanceGceSetupNetworkInterfaceArrayOutput() InstanceGceSetupNetworkInterfaceArrayOutput {
	return i.ToInstanceGceSetupNetworkInterfaceArrayOutputWithContext(context.Background())
}

func (i InstanceGceSetupNetworkInterfaceArray) ToInstanceGceSetupNetworkInterfaceArrayOutputWithContext(ctx context.Context) InstanceGceSetupNetworkInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceGceSetupNetworkInterfaceArrayOutput)
}

type InstanceGceSetupNetworkInterfaceOutput struct{ *pulumi.OutputState }

func (InstanceGceSetupNetworkInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceGceSetupNetworkInterface)(nil)).Elem()
}

func (o InstanceGceSetupNetworkInterfaceOutput) ToInstanceGceSetupNetworkInterfaceOutput() InstanceGceSetupNetworkInterfaceOutput {
	return o
}

func (o InstanceGceSetupNetworkInterfaceOutput) ToInstanceGceSetupNetworkInterfaceOutputWithContext(ctx context.Context) InstanceGceSetupNetworkInterfaceOutput {
	return o
}

// Optional. An array of configurations for this interface. Currently, only one access
// config, ONE_TO_ONE_NAT, is supported. If no accessConfigs specified, the
// instance will have an external internet access through an ephemeral
// external IP address.
// Structure is documented below.
func (o InstanceGceSetupNetworkInterfaceOutput) AccessConfigs() InstanceGceSetupNetworkInterfaceAccessConfigArrayOutput {
	return o.ApplyT(func(v InstanceGceSetupNetworkInterface) []InstanceGceSetupNetworkInterfaceAccessConfig {
		return v.AccessConfigs
	}).(InstanceGceSetupNetworkInterfaceAccessConfigArrayOutput)
}

// Optional. The name of the VPC that this VM instance is in.
func (o InstanceGceSetupNetworkInterfaceOutput) Network() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceGceSetupNetworkInterface) *string { return v.Network }).(pulumi.StringPtrOutput)
}

// Optional. The type of vNIC to be used on this interface. This
// may be gVNIC or VirtioNet.
// Possible values are: `VIRTIO_NET`, `GVNIC`.
func (o InstanceGceSetupNetworkInterfaceOutput) NicType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceGceSetupNetworkInterface) *string { return v.NicType }).(pulumi.StringPtrOutput)
}

// Optional. The name of the subnet that this VM instance is in.
func (o InstanceGceSetupNetworkInterfaceOutput) Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceGceSetupNetworkInterface) *string { return v.Subnet }).(pulumi.StringPtrOutput)
}

type InstanceGceSetupNetworkInterfaceArrayOutput struct{ *pulumi.OutputState }

func (InstanceGceSetupNetworkInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceGceSetupNetworkInterface)(nil)).Elem()
}

func (o InstanceGceSetupNetworkInterfaceArrayOutput) ToInstanceGceSetupNetworkInterfaceArrayOutput() InstanceGceSetupNetworkInterfaceArrayOutput {
	return o
}

func (o InstanceGceSetupNetworkInterfaceArrayOutput) ToInstanceGceSetupNetworkInterfaceArrayOutputWithContext(ctx context.Context) InstanceGceSetupNetworkInterfaceArrayOutput {
	return o
}

func (o InstanceGceSetupNetworkInterfaceArrayOutput) Index(i pulumi.IntInput) InstanceGceSetupNetworkInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceGceSetupNetworkInterface {
		return vs[0].([]InstanceGceSetupNetworkInterface)[vs[1].(int)]
	}).(InstanceGceSetupNetworkInterfaceOutput)
}

type InstanceGceSetupNetworkInterfaceAccessConfig struct {
	// An external IP address associated with this instance. Specify an unused
	// static external IP address available to the project or leave this field
	// undefined to use an IP from a shared ephemeral IP address pool. If you
	// specify a static external IP address, it must live in the same region as
	// the zone of the instance.
	ExternalIp string `pulumi:"externalIp"`
}

// InstanceGceSetupNetworkInterfaceAccessConfigInput is an input type that accepts InstanceGceSetupNetworkInterfaceAccessConfigArgs and InstanceGceSetupNetworkInterfaceAccessConfigOutput values.
// You can construct a concrete instance of `InstanceGceSetupNetworkInterfaceAccessConfigInput` via:
//
//	InstanceGceSetupNetworkInterfaceAccessConfigArgs{...}
type InstanceGceSetupNetworkInterfaceAccessConfigInput interface {
	pulumi.Input

	ToInstanceGceSetupNetworkInterfaceAccessConfigOutput() InstanceGceSetupNetworkInterfaceAccessConfigOutput
	ToInstanceGceSetupNetworkInterfaceAccessConfigOutputWithContext(context.Context) InstanceGceSetupNetworkInterfaceAccessConfigOutput
}

type InstanceGceSetupNetworkInterfaceAccessConfigArgs struct {
	// An external IP address associated with this instance. Specify an unused
	// static external IP address available to the project or leave this field
	// undefined to use an IP from a shared ephemeral IP address pool. If you
	// specify a static external IP address, it must live in the same region as
	// the zone of the instance.
	ExternalIp pulumi.StringInput `pulumi:"externalIp"`
}

func (InstanceGceSetupNetworkInterfaceAccessConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceGceSetupNetworkInterfaceAccessConfig)(nil)).Elem()
}

func (i InstanceGceSetupNetworkInterfaceAccessConfigArgs) ToInstanceGceSetupNetworkInterfaceAccessConfigOutput() InstanceGceSetupNetworkInterfaceAccessConfigOutput {
	return i.ToInstanceGceSetupNetworkInterfaceAccessConfigOutputWithContext(context.Background())
}

func (i InstanceGceSetupNetworkInterfaceAccessConfigArgs) ToInstanceGceSetupNetworkInterfaceAccessConfigOutputWithContext(ctx context.Context) InstanceGceSetupNetworkInterfaceAccessConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceGceSetupNetworkInterfaceAccessConfigOutput)
}

// InstanceGceSetupNetworkInterfaceAccessConfigArrayInput is an input type that accepts InstanceGceSetupNetworkInterfaceAccessConfigArray and InstanceGceSetupNetworkInterfaceAccessConfigArrayOutput values.
// You can construct a concrete instance of `InstanceGceSetupNetworkInterfaceAccessConfigArrayInput` via:
//
//	InstanceGceSetupNetworkInterfaceAccessConfigArray{ InstanceGceSetupNetworkInterfaceAccessConfigArgs{...} }
type InstanceGceSetupNetworkInterfaceAccessConfigArrayInput interface {
	pulumi.Input

	ToInstanceGceSetupNetworkInterfaceAccessConfigArrayOutput() InstanceGceSetupNetworkInterfaceAccessConfigArrayOutput
	ToInstanceGceSetupNetworkInterfaceAccessConfigArrayOutputWithContext(context.Context) InstanceGceSetupNetworkInterfaceAccessConfigArrayOutput
}

type InstanceGceSetupNetworkInterfaceAccessConfigArray []InstanceGceSetupNetworkInterfaceAccessConfigInput

func (InstanceGceSetupNetworkInterfaceAccessConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceGceSetupNetworkInterfaceAccessConfig)(nil)).Elem()
}

func (i InstanceGceSetupNetworkInterfaceAccessConfigArray) ToInstanceGceSetupNetworkInterfaceAccessConfigArrayOutput() InstanceGceSetupNetworkInterfaceAccessConfigArrayOutput {
	return i.ToInstanceGceSetupNetworkInterfaceAccessConfigArrayOutputWithContext(context.Background())
}

func (i InstanceGceSetupNetworkInterfaceAccessConfigArray) ToInstanceGceSetupNetworkInterfaceAccessConfigArrayOutputWithContext(ctx context.Context) InstanceGceSetupNetworkInterfaceAccessConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceGceSetupNetworkInterfaceAccessConfigArrayOutput)
}

type InstanceGceSetupNetworkInterfaceAccessConfigOutput struct{ *pulumi.OutputState }

func (InstanceGceSetupNetworkInterfaceAccessConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceGceSetupNetworkInterfaceAccessConfig)(nil)).Elem()
}

func (o InstanceGceSetupNetworkInterfaceAccessConfigOutput) ToInstanceGceSetupNetworkInterfaceAccessConfigOutput() InstanceGceSetupNetworkInterfaceAccessConfigOutput {
	return o
}

func (o InstanceGceSetupNetworkInterfaceAccessConfigOutput) ToInstanceGceSetupNetworkInterfaceAccessConfigOutputWithContext(ctx context.Context) InstanceGceSetupNetworkInterfaceAccessConfigOutput {
	return o
}

// An external IP address associated with this instance. Specify an unused
// static external IP address available to the project or leave this field
// undefined to use an IP from a shared ephemeral IP address pool. If you
// specify a static external IP address, it must live in the same region as
// the zone of the instance.
func (o InstanceGceSetupNetworkInterfaceAccessConfigOutput) ExternalIp() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceGceSetupNetworkInterfaceAccessConfig) string { return v.ExternalIp }).(pulumi.StringOutput)
}

type InstanceGceSetupNetworkInterfaceAccessConfigArrayOutput struct{ *pulumi.OutputState }

func (InstanceGceSetupNetworkInterfaceAccessConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceGceSetupNetworkInterfaceAccessConfig)(nil)).Elem()
}

func (o InstanceGceSetupNetworkInterfaceAccessConfigArrayOutput) ToInstanceGceSetupNetworkInterfaceAccessConfigArrayOutput() InstanceGceSetupNetworkInterfaceAccessConfigArrayOutput {
	return o
}

func (o InstanceGceSetupNetworkInterfaceAccessConfigArrayOutput) ToInstanceGceSetupNetworkInterfaceAccessConfigArrayOutputWithContext(ctx context.Context) InstanceGceSetupNetworkInterfaceAccessConfigArrayOutput {
	return o
}

func (o InstanceGceSetupNetworkInterfaceAccessConfigArrayOutput) Index(i pulumi.IntInput) InstanceGceSetupNetworkInterfaceAccessConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceGceSetupNetworkInterfaceAccessConfig {
		return vs[0].([]InstanceGceSetupNetworkInterfaceAccessConfig)[vs[1].(int)]
	}).(InstanceGceSetupNetworkInterfaceAccessConfigOutput)
}

type InstanceGceSetupServiceAccount struct {
	// Optional. Email address of the service account.
	Email *string `pulumi:"email"`
	// (Output)
	// Output only. The list of scopes to be made available for this
	// service account. Set by the CLH to https://www.googleapis.com/auth/cloud-platform
	Scopes []string `pulumi:"scopes"`
}

// InstanceGceSetupServiceAccountInput is an input type that accepts InstanceGceSetupServiceAccountArgs and InstanceGceSetupServiceAccountOutput values.
// You can construct a concrete instance of `InstanceGceSetupServiceAccountInput` via:
//
//	InstanceGceSetupServiceAccountArgs{...}
type InstanceGceSetupServiceAccountInput interface {
	pulumi.Input

	ToInstanceGceSetupServiceAccountOutput() InstanceGceSetupServiceAccountOutput
	ToInstanceGceSetupServiceAccountOutputWithContext(context.Context) InstanceGceSetupServiceAccountOutput
}

type InstanceGceSetupServiceAccountArgs struct {
	// Optional. Email address of the service account.
	Email pulumi.StringPtrInput `pulumi:"email"`
	// (Output)
	// Output only. The list of scopes to be made available for this
	// service account. Set by the CLH to https://www.googleapis.com/auth/cloud-platform
	Scopes pulumi.StringArrayInput `pulumi:"scopes"`
}

func (InstanceGceSetupServiceAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceGceSetupServiceAccount)(nil)).Elem()
}

func (i InstanceGceSetupServiceAccountArgs) ToInstanceGceSetupServiceAccountOutput() InstanceGceSetupServiceAccountOutput {
	return i.ToInstanceGceSetupServiceAccountOutputWithContext(context.Background())
}

func (i InstanceGceSetupServiceAccountArgs) ToInstanceGceSetupServiceAccountOutputWithContext(ctx context.Context) InstanceGceSetupServiceAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceGceSetupServiceAccountOutput)
}

// InstanceGceSetupServiceAccountArrayInput is an input type that accepts InstanceGceSetupServiceAccountArray and InstanceGceSetupServiceAccountArrayOutput values.
// You can construct a concrete instance of `InstanceGceSetupServiceAccountArrayInput` via:
//
//	InstanceGceSetupServiceAccountArray{ InstanceGceSetupServiceAccountArgs{...} }
type InstanceGceSetupServiceAccountArrayInput interface {
	pulumi.Input

	ToInstanceGceSetupServiceAccountArrayOutput() InstanceGceSetupServiceAccountArrayOutput
	ToInstanceGceSetupServiceAccountArrayOutputWithContext(context.Context) InstanceGceSetupServiceAccountArrayOutput
}

type InstanceGceSetupServiceAccountArray []InstanceGceSetupServiceAccountInput

func (InstanceGceSetupServiceAccountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceGceSetupServiceAccount)(nil)).Elem()
}

func (i InstanceGceSetupServiceAccountArray) ToInstanceGceSetupServiceAccountArrayOutput() InstanceGceSetupServiceAccountArrayOutput {
	return i.ToInstanceGceSetupServiceAccountArrayOutputWithContext(context.Background())
}

func (i InstanceGceSetupServiceAccountArray) ToInstanceGceSetupServiceAccountArrayOutputWithContext(ctx context.Context) InstanceGceSetupServiceAccountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceGceSetupServiceAccountArrayOutput)
}

type InstanceGceSetupServiceAccountOutput struct{ *pulumi.OutputState }

func (InstanceGceSetupServiceAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceGceSetupServiceAccount)(nil)).Elem()
}

func (o InstanceGceSetupServiceAccountOutput) ToInstanceGceSetupServiceAccountOutput() InstanceGceSetupServiceAccountOutput {
	return o
}

func (o InstanceGceSetupServiceAccountOutput) ToInstanceGceSetupServiceAccountOutputWithContext(ctx context.Context) InstanceGceSetupServiceAccountOutput {
	return o
}

// Optional. Email address of the service account.
func (o InstanceGceSetupServiceAccountOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceGceSetupServiceAccount) *string { return v.Email }).(pulumi.StringPtrOutput)
}

// (Output)
// Output only. The list of scopes to be made available for this
// service account. Set by the CLH to https://www.googleapis.com/auth/cloud-platform
func (o InstanceGceSetupServiceAccountOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v InstanceGceSetupServiceAccount) []string { return v.Scopes }).(pulumi.StringArrayOutput)
}

type InstanceGceSetupServiceAccountArrayOutput struct{ *pulumi.OutputState }

func (InstanceGceSetupServiceAccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceGceSetupServiceAccount)(nil)).Elem()
}

func (o InstanceGceSetupServiceAccountArrayOutput) ToInstanceGceSetupServiceAccountArrayOutput() InstanceGceSetupServiceAccountArrayOutput {
	return o
}

func (o InstanceGceSetupServiceAccountArrayOutput) ToInstanceGceSetupServiceAccountArrayOutputWithContext(ctx context.Context) InstanceGceSetupServiceAccountArrayOutput {
	return o
}

func (o InstanceGceSetupServiceAccountArrayOutput) Index(i pulumi.IntInput) InstanceGceSetupServiceAccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceGceSetupServiceAccount {
		return vs[0].([]InstanceGceSetupServiceAccount)[vs[1].(int)]
	}).(InstanceGceSetupServiceAccountOutput)
}

type InstanceGceSetupShieldedInstanceConfig struct {
	// Optional. Defines whether the VM instance has integrity monitoring
	// enabled. Enables monitoring and attestation of the boot integrity of the VM
	// instance. The attestation is performed against the integrity policy baseline.
	// This baseline is initially derived from the implicitly trusted boot image
	// when the VM instance is created. Enabled by default.
	EnableIntegrityMonitoring *bool `pulumi:"enableIntegrityMonitoring"`
	// Optional. Defines whether the VM instance has Secure Boot enabled.
	// Secure Boot helps ensure that the system only runs authentic software by verifying
	// the digital signature of all boot components, and halting the boot process
	// if signature verification fails. Disabled by default.
	EnableSecureBoot *bool `pulumi:"enableSecureBoot"`
	// Optional. Defines whether the VM instance has the vTPM enabled.
	// Enabled by default.
	EnableVtpm *bool `pulumi:"enableVtpm"`
}

// InstanceGceSetupShieldedInstanceConfigInput is an input type that accepts InstanceGceSetupShieldedInstanceConfigArgs and InstanceGceSetupShieldedInstanceConfigOutput values.
// You can construct a concrete instance of `InstanceGceSetupShieldedInstanceConfigInput` via:
//
//	InstanceGceSetupShieldedInstanceConfigArgs{...}
type InstanceGceSetupShieldedInstanceConfigInput interface {
	pulumi.Input

	ToInstanceGceSetupShieldedInstanceConfigOutput() InstanceGceSetupShieldedInstanceConfigOutput
	ToInstanceGceSetupShieldedInstanceConfigOutputWithContext(context.Context) InstanceGceSetupShieldedInstanceConfigOutput
}

type InstanceGceSetupShieldedInstanceConfigArgs struct {
	// Optional. Defines whether the VM instance has integrity monitoring
	// enabled. Enables monitoring and attestation of the boot integrity of the VM
	// instance. The attestation is performed against the integrity policy baseline.
	// This baseline is initially derived from the implicitly trusted boot image
	// when the VM instance is created. Enabled by default.
	EnableIntegrityMonitoring pulumi.BoolPtrInput `pulumi:"enableIntegrityMonitoring"`
	// Optional. Defines whether the VM instance has Secure Boot enabled.
	// Secure Boot helps ensure that the system only runs authentic software by verifying
	// the digital signature of all boot components, and halting the boot process
	// if signature verification fails. Disabled by default.
	EnableSecureBoot pulumi.BoolPtrInput `pulumi:"enableSecureBoot"`
	// Optional. Defines whether the VM instance has the vTPM enabled.
	// Enabled by default.
	EnableVtpm pulumi.BoolPtrInput `pulumi:"enableVtpm"`
}

func (InstanceGceSetupShieldedInstanceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceGceSetupShieldedInstanceConfig)(nil)).Elem()
}

func (i InstanceGceSetupShieldedInstanceConfigArgs) ToInstanceGceSetupShieldedInstanceConfigOutput() InstanceGceSetupShieldedInstanceConfigOutput {
	return i.ToInstanceGceSetupShieldedInstanceConfigOutputWithContext(context.Background())
}

func (i InstanceGceSetupShieldedInstanceConfigArgs) ToInstanceGceSetupShieldedInstanceConfigOutputWithContext(ctx context.Context) InstanceGceSetupShieldedInstanceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceGceSetupShieldedInstanceConfigOutput)
}

func (i InstanceGceSetupShieldedInstanceConfigArgs) ToInstanceGceSetupShieldedInstanceConfigPtrOutput() InstanceGceSetupShieldedInstanceConfigPtrOutput {
	return i.ToInstanceGceSetupShieldedInstanceConfigPtrOutputWithContext(context.Background())
}

func (i InstanceGceSetupShieldedInstanceConfigArgs) ToInstanceGceSetupShieldedInstanceConfigPtrOutputWithContext(ctx context.Context) InstanceGceSetupShieldedInstanceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceGceSetupShieldedInstanceConfigOutput).ToInstanceGceSetupShieldedInstanceConfigPtrOutputWithContext(ctx)
}

// InstanceGceSetupShieldedInstanceConfigPtrInput is an input type that accepts InstanceGceSetupShieldedInstanceConfigArgs, InstanceGceSetupShieldedInstanceConfigPtr and InstanceGceSetupShieldedInstanceConfigPtrOutput values.
// You can construct a concrete instance of `InstanceGceSetupShieldedInstanceConfigPtrInput` via:
//
//	        InstanceGceSetupShieldedInstanceConfigArgs{...}
//
//	or:
//
//	        nil
type InstanceGceSetupShieldedInstanceConfigPtrInput interface {
	pulumi.Input

	ToInstanceGceSetupShieldedInstanceConfigPtrOutput() InstanceGceSetupShieldedInstanceConfigPtrOutput
	ToInstanceGceSetupShieldedInstanceConfigPtrOutputWithContext(context.Context) InstanceGceSetupShieldedInstanceConfigPtrOutput
}

type instanceGceSetupShieldedInstanceConfigPtrType InstanceGceSetupShieldedInstanceConfigArgs

func InstanceGceSetupShieldedInstanceConfigPtr(v *InstanceGceSetupShieldedInstanceConfigArgs) InstanceGceSetupShieldedInstanceConfigPtrInput {
	return (*instanceGceSetupShieldedInstanceConfigPtrType)(v)
}

func (*instanceGceSetupShieldedInstanceConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceGceSetupShieldedInstanceConfig)(nil)).Elem()
}

func (i *instanceGceSetupShieldedInstanceConfigPtrType) ToInstanceGceSetupShieldedInstanceConfigPtrOutput() InstanceGceSetupShieldedInstanceConfigPtrOutput {
	return i.ToInstanceGceSetupShieldedInstanceConfigPtrOutputWithContext(context.Background())
}

func (i *instanceGceSetupShieldedInstanceConfigPtrType) ToInstanceGceSetupShieldedInstanceConfigPtrOutputWithContext(ctx context.Context) InstanceGceSetupShieldedInstanceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceGceSetupShieldedInstanceConfigPtrOutput)
}

type InstanceGceSetupShieldedInstanceConfigOutput struct{ *pulumi.OutputState }

func (InstanceGceSetupShieldedInstanceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceGceSetupShieldedInstanceConfig)(nil)).Elem()
}

func (o InstanceGceSetupShieldedInstanceConfigOutput) ToInstanceGceSetupShieldedInstanceConfigOutput() InstanceGceSetupShieldedInstanceConfigOutput {
	return o
}

func (o InstanceGceSetupShieldedInstanceConfigOutput) ToInstanceGceSetupShieldedInstanceConfigOutputWithContext(ctx context.Context) InstanceGceSetupShieldedInstanceConfigOutput {
	return o
}

func (o InstanceGceSetupShieldedInstanceConfigOutput) ToInstanceGceSetupShieldedInstanceConfigPtrOutput() InstanceGceSetupShieldedInstanceConfigPtrOutput {
	return o.ToInstanceGceSetupShieldedInstanceConfigPtrOutputWithContext(context.Background())
}

func (o InstanceGceSetupShieldedInstanceConfigOutput) ToInstanceGceSetupShieldedInstanceConfigPtrOutputWithContext(ctx context.Context) InstanceGceSetupShieldedInstanceConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceGceSetupShieldedInstanceConfig) *InstanceGceSetupShieldedInstanceConfig {
		return &v
	}).(InstanceGceSetupShieldedInstanceConfigPtrOutput)
}

// Optional. Defines whether the VM instance has integrity monitoring
// enabled. Enables monitoring and attestation of the boot integrity of the VM
// instance. The attestation is performed against the integrity policy baseline.
// This baseline is initially derived from the implicitly trusted boot image
// when the VM instance is created. Enabled by default.
func (o InstanceGceSetupShieldedInstanceConfigOutput) EnableIntegrityMonitoring() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceGceSetupShieldedInstanceConfig) *bool { return v.EnableIntegrityMonitoring }).(pulumi.BoolPtrOutput)
}

// Optional. Defines whether the VM instance has Secure Boot enabled.
// Secure Boot helps ensure that the system only runs authentic software by verifying
// the digital signature of all boot components, and halting the boot process
// if signature verification fails. Disabled by default.
func (o InstanceGceSetupShieldedInstanceConfigOutput) EnableSecureBoot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceGceSetupShieldedInstanceConfig) *bool { return v.EnableSecureBoot }).(pulumi.BoolPtrOutput)
}

// Optional. Defines whether the VM instance has the vTPM enabled.
// Enabled by default.
func (o InstanceGceSetupShieldedInstanceConfigOutput) EnableVtpm() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceGceSetupShieldedInstanceConfig) *bool { return v.EnableVtpm }).(pulumi.BoolPtrOutput)
}

type InstanceGceSetupShieldedInstanceConfigPtrOutput struct{ *pulumi.OutputState }

func (InstanceGceSetupShieldedInstanceConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceGceSetupShieldedInstanceConfig)(nil)).Elem()
}

func (o InstanceGceSetupShieldedInstanceConfigPtrOutput) ToInstanceGceSetupShieldedInstanceConfigPtrOutput() InstanceGceSetupShieldedInstanceConfigPtrOutput {
	return o
}

func (o InstanceGceSetupShieldedInstanceConfigPtrOutput) ToInstanceGceSetupShieldedInstanceConfigPtrOutputWithContext(ctx context.Context) InstanceGceSetupShieldedInstanceConfigPtrOutput {
	return o
}

func (o InstanceGceSetupShieldedInstanceConfigPtrOutput) Elem() InstanceGceSetupShieldedInstanceConfigOutput {
	return o.ApplyT(func(v *InstanceGceSetupShieldedInstanceConfig) InstanceGceSetupShieldedInstanceConfig {
		if v != nil {
			return *v
		}
		var ret InstanceGceSetupShieldedInstanceConfig
		return ret
	}).(InstanceGceSetupShieldedInstanceConfigOutput)
}

// Optional. Defines whether the VM instance has integrity monitoring
// enabled. Enables monitoring and attestation of the boot integrity of the VM
// instance. The attestation is performed against the integrity policy baseline.
// This baseline is initially derived from the implicitly trusted boot image
// when the VM instance is created. Enabled by default.
func (o InstanceGceSetupShieldedInstanceConfigPtrOutput) EnableIntegrityMonitoring() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InstanceGceSetupShieldedInstanceConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EnableIntegrityMonitoring
	}).(pulumi.BoolPtrOutput)
}

// Optional. Defines whether the VM instance has Secure Boot enabled.
// Secure Boot helps ensure that the system only runs authentic software by verifying
// the digital signature of all boot components, and halting the boot process
// if signature verification fails. Disabled by default.
func (o InstanceGceSetupShieldedInstanceConfigPtrOutput) EnableSecureBoot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InstanceGceSetupShieldedInstanceConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EnableSecureBoot
	}).(pulumi.BoolPtrOutput)
}

// Optional. Defines whether the VM instance has the vTPM enabled.
// Enabled by default.
func (o InstanceGceSetupShieldedInstanceConfigPtrOutput) EnableVtpm() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InstanceGceSetupShieldedInstanceConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EnableVtpm
	}).(pulumi.BoolPtrOutput)
}

type InstanceGceSetupVmImage struct {
	// Optional. Use this VM image family to find the image; the newest
	// image in this family will be used.
	Family *string `pulumi:"family"`
	// Optional. Use VM image name to find the image.
	Name *string `pulumi:"name"`
	// The name of the Google Cloud project that this VM image belongs to.
	// Format: {project_id}
	Project *string `pulumi:"project"`
}

// InstanceGceSetupVmImageInput is an input type that accepts InstanceGceSetupVmImageArgs and InstanceGceSetupVmImageOutput values.
// You can construct a concrete instance of `InstanceGceSetupVmImageInput` via:
//
//	InstanceGceSetupVmImageArgs{...}
type InstanceGceSetupVmImageInput interface {
	pulumi.Input

	ToInstanceGceSetupVmImageOutput() InstanceGceSetupVmImageOutput
	ToInstanceGceSetupVmImageOutputWithContext(context.Context) InstanceGceSetupVmImageOutput
}

type InstanceGceSetupVmImageArgs struct {
	// Optional. Use this VM image family to find the image; the newest
	// image in this family will be used.
	Family pulumi.StringPtrInput `pulumi:"family"`
	// Optional. Use VM image name to find the image.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The name of the Google Cloud project that this VM image belongs to.
	// Format: {project_id}
	Project pulumi.StringPtrInput `pulumi:"project"`
}

func (InstanceGceSetupVmImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceGceSetupVmImage)(nil)).Elem()
}

func (i InstanceGceSetupVmImageArgs) ToInstanceGceSetupVmImageOutput() InstanceGceSetupVmImageOutput {
	return i.ToInstanceGceSetupVmImageOutputWithContext(context.Background())
}

func (i InstanceGceSetupVmImageArgs) ToInstanceGceSetupVmImageOutputWithContext(ctx context.Context) InstanceGceSetupVmImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceGceSetupVmImageOutput)
}

func (i InstanceGceSetupVmImageArgs) ToInstanceGceSetupVmImagePtrOutput() InstanceGceSetupVmImagePtrOutput {
	return i.ToInstanceGceSetupVmImagePtrOutputWithContext(context.Background())
}

func (i InstanceGceSetupVmImageArgs) ToInstanceGceSetupVmImagePtrOutputWithContext(ctx context.Context) InstanceGceSetupVmImagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceGceSetupVmImageOutput).ToInstanceGceSetupVmImagePtrOutputWithContext(ctx)
}

// InstanceGceSetupVmImagePtrInput is an input type that accepts InstanceGceSetupVmImageArgs, InstanceGceSetupVmImagePtr and InstanceGceSetupVmImagePtrOutput values.
// You can construct a concrete instance of `InstanceGceSetupVmImagePtrInput` via:
//
//	        InstanceGceSetupVmImageArgs{...}
//
//	or:
//
//	        nil
type InstanceGceSetupVmImagePtrInput interface {
	pulumi.Input

	ToInstanceGceSetupVmImagePtrOutput() InstanceGceSetupVmImagePtrOutput
	ToInstanceGceSetupVmImagePtrOutputWithContext(context.Context) InstanceGceSetupVmImagePtrOutput
}

type instanceGceSetupVmImagePtrType InstanceGceSetupVmImageArgs

func InstanceGceSetupVmImagePtr(v *InstanceGceSetupVmImageArgs) InstanceGceSetupVmImagePtrInput {
	return (*instanceGceSetupVmImagePtrType)(v)
}

func (*instanceGceSetupVmImagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceGceSetupVmImage)(nil)).Elem()
}

func (i *instanceGceSetupVmImagePtrType) ToInstanceGceSetupVmImagePtrOutput() InstanceGceSetupVmImagePtrOutput {
	return i.ToInstanceGceSetupVmImagePtrOutputWithContext(context.Background())
}

func (i *instanceGceSetupVmImagePtrType) ToInstanceGceSetupVmImagePtrOutputWithContext(ctx context.Context) InstanceGceSetupVmImagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceGceSetupVmImagePtrOutput)
}

type InstanceGceSetupVmImageOutput struct{ *pulumi.OutputState }

func (InstanceGceSetupVmImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceGceSetupVmImage)(nil)).Elem()
}

func (o InstanceGceSetupVmImageOutput) ToInstanceGceSetupVmImageOutput() InstanceGceSetupVmImageOutput {
	return o
}

func (o InstanceGceSetupVmImageOutput) ToInstanceGceSetupVmImageOutputWithContext(ctx context.Context) InstanceGceSetupVmImageOutput {
	return o
}

func (o InstanceGceSetupVmImageOutput) ToInstanceGceSetupVmImagePtrOutput() InstanceGceSetupVmImagePtrOutput {
	return o.ToInstanceGceSetupVmImagePtrOutputWithContext(context.Background())
}

func (o InstanceGceSetupVmImageOutput) ToInstanceGceSetupVmImagePtrOutputWithContext(ctx context.Context) InstanceGceSetupVmImagePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceGceSetupVmImage) *InstanceGceSetupVmImage {
		return &v
	}).(InstanceGceSetupVmImagePtrOutput)
}

// Optional. Use this VM image family to find the image; the newest
// image in this family will be used.
func (o InstanceGceSetupVmImageOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceGceSetupVmImage) *string { return v.Family }).(pulumi.StringPtrOutput)
}

// Optional. Use VM image name to find the image.
func (o InstanceGceSetupVmImageOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceGceSetupVmImage) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The name of the Google Cloud project that this VM image belongs to.
// Format: {project_id}
func (o InstanceGceSetupVmImageOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceGceSetupVmImage) *string { return v.Project }).(pulumi.StringPtrOutput)
}

type InstanceGceSetupVmImagePtrOutput struct{ *pulumi.OutputState }

func (InstanceGceSetupVmImagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceGceSetupVmImage)(nil)).Elem()
}

func (o InstanceGceSetupVmImagePtrOutput) ToInstanceGceSetupVmImagePtrOutput() InstanceGceSetupVmImagePtrOutput {
	return o
}

func (o InstanceGceSetupVmImagePtrOutput) ToInstanceGceSetupVmImagePtrOutputWithContext(ctx context.Context) InstanceGceSetupVmImagePtrOutput {
	return o
}

func (o InstanceGceSetupVmImagePtrOutput) Elem() InstanceGceSetupVmImageOutput {
	return o.ApplyT(func(v *InstanceGceSetupVmImage) InstanceGceSetupVmImage {
		if v != nil {
			return *v
		}
		var ret InstanceGceSetupVmImage
		return ret
	}).(InstanceGceSetupVmImageOutput)
}

// Optional. Use this VM image family to find the image; the newest
// image in this family will be used.
func (o InstanceGceSetupVmImagePtrOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceGceSetupVmImage) *string {
		if v == nil {
			return nil
		}
		return v.Family
	}).(pulumi.StringPtrOutput)
}

// Optional. Use VM image name to find the image.
func (o InstanceGceSetupVmImagePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceGceSetupVmImage) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The name of the Google Cloud project that this VM image belongs to.
// Format: {project_id}
func (o InstanceGceSetupVmImagePtrOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceGceSetupVmImage) *string {
		if v == nil {
			return nil
		}
		return v.Project
	}).(pulumi.StringPtrOutput)
}

type InstanceHealthInfo struct {
}

// InstanceHealthInfoInput is an input type that accepts InstanceHealthInfoArgs and InstanceHealthInfoOutput values.
// You can construct a concrete instance of `InstanceHealthInfoInput` via:
//
//	InstanceHealthInfoArgs{...}
type InstanceHealthInfoInput interface {
	pulumi.Input

	ToInstanceHealthInfoOutput() InstanceHealthInfoOutput
	ToInstanceHealthInfoOutputWithContext(context.Context) InstanceHealthInfoOutput
}

type InstanceHealthInfoArgs struct {
}

func (InstanceHealthInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceHealthInfo)(nil)).Elem()
}

func (i InstanceHealthInfoArgs) ToInstanceHealthInfoOutput() InstanceHealthInfoOutput {
	return i.ToInstanceHealthInfoOutputWithContext(context.Background())
}

func (i InstanceHealthInfoArgs) ToInstanceHealthInfoOutputWithContext(ctx context.Context) InstanceHealthInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceHealthInfoOutput)
}

// InstanceHealthInfoArrayInput is an input type that accepts InstanceHealthInfoArray and InstanceHealthInfoArrayOutput values.
// You can construct a concrete instance of `InstanceHealthInfoArrayInput` via:
//
//	InstanceHealthInfoArray{ InstanceHealthInfoArgs{...} }
type InstanceHealthInfoArrayInput interface {
	pulumi.Input

	ToInstanceHealthInfoArrayOutput() InstanceHealthInfoArrayOutput
	ToInstanceHealthInfoArrayOutputWithContext(context.Context) InstanceHealthInfoArrayOutput
}

type InstanceHealthInfoArray []InstanceHealthInfoInput

func (InstanceHealthInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceHealthInfo)(nil)).Elem()
}

func (i InstanceHealthInfoArray) ToInstanceHealthInfoArrayOutput() InstanceHealthInfoArrayOutput {
	return i.ToInstanceHealthInfoArrayOutputWithContext(context.Background())
}

func (i InstanceHealthInfoArray) ToInstanceHealthInfoArrayOutputWithContext(ctx context.Context) InstanceHealthInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceHealthInfoArrayOutput)
}

type InstanceHealthInfoOutput struct{ *pulumi.OutputState }

func (InstanceHealthInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceHealthInfo)(nil)).Elem()
}

func (o InstanceHealthInfoOutput) ToInstanceHealthInfoOutput() InstanceHealthInfoOutput {
	return o
}

func (o InstanceHealthInfoOutput) ToInstanceHealthInfoOutputWithContext(ctx context.Context) InstanceHealthInfoOutput {
	return o
}

type InstanceHealthInfoArrayOutput struct{ *pulumi.OutputState }

func (InstanceHealthInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceHealthInfo)(nil)).Elem()
}

func (o InstanceHealthInfoArrayOutput) ToInstanceHealthInfoArrayOutput() InstanceHealthInfoArrayOutput {
	return o
}

func (o InstanceHealthInfoArrayOutput) ToInstanceHealthInfoArrayOutputWithContext(ctx context.Context) InstanceHealthInfoArrayOutput {
	return o
}

func (o InstanceHealthInfoArrayOutput) Index(i pulumi.IntInput) InstanceHealthInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceHealthInfo {
		return vs[0].([]InstanceHealthInfo)[vs[1].(int)]
	}).(InstanceHealthInfoOutput)
}

type InstanceIamBindingCondition struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

// InstanceIamBindingConditionInput is an input type that accepts InstanceIamBindingConditionArgs and InstanceIamBindingConditionOutput values.
// You can construct a concrete instance of `InstanceIamBindingConditionInput` via:
//
//	InstanceIamBindingConditionArgs{...}
type InstanceIamBindingConditionInput interface {
	pulumi.Input

	ToInstanceIamBindingConditionOutput() InstanceIamBindingConditionOutput
	ToInstanceIamBindingConditionOutputWithContext(context.Context) InstanceIamBindingConditionOutput
}

type InstanceIamBindingConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (InstanceIamBindingConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceIamBindingCondition)(nil)).Elem()
}

func (i InstanceIamBindingConditionArgs) ToInstanceIamBindingConditionOutput() InstanceIamBindingConditionOutput {
	return i.ToInstanceIamBindingConditionOutputWithContext(context.Background())
}

func (i InstanceIamBindingConditionArgs) ToInstanceIamBindingConditionOutputWithContext(ctx context.Context) InstanceIamBindingConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceIamBindingConditionOutput)
}

func (i InstanceIamBindingConditionArgs) ToInstanceIamBindingConditionPtrOutput() InstanceIamBindingConditionPtrOutput {
	return i.ToInstanceIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i InstanceIamBindingConditionArgs) ToInstanceIamBindingConditionPtrOutputWithContext(ctx context.Context) InstanceIamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceIamBindingConditionOutput).ToInstanceIamBindingConditionPtrOutputWithContext(ctx)
}

// InstanceIamBindingConditionPtrInput is an input type that accepts InstanceIamBindingConditionArgs, InstanceIamBindingConditionPtr and InstanceIamBindingConditionPtrOutput values.
// You can construct a concrete instance of `InstanceIamBindingConditionPtrInput` via:
//
//	        InstanceIamBindingConditionArgs{...}
//
//	or:
//
//	        nil
type InstanceIamBindingConditionPtrInput interface {
	pulumi.Input

	ToInstanceIamBindingConditionPtrOutput() InstanceIamBindingConditionPtrOutput
	ToInstanceIamBindingConditionPtrOutputWithContext(context.Context) InstanceIamBindingConditionPtrOutput
}

type instanceIamBindingConditionPtrType InstanceIamBindingConditionArgs

func InstanceIamBindingConditionPtr(v *InstanceIamBindingConditionArgs) InstanceIamBindingConditionPtrInput {
	return (*instanceIamBindingConditionPtrType)(v)
}

func (*instanceIamBindingConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceIamBindingCondition)(nil)).Elem()
}

func (i *instanceIamBindingConditionPtrType) ToInstanceIamBindingConditionPtrOutput() InstanceIamBindingConditionPtrOutput {
	return i.ToInstanceIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i *instanceIamBindingConditionPtrType) ToInstanceIamBindingConditionPtrOutputWithContext(ctx context.Context) InstanceIamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceIamBindingConditionPtrOutput)
}

type InstanceIamBindingConditionOutput struct{ *pulumi.OutputState }

func (InstanceIamBindingConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceIamBindingCondition)(nil)).Elem()
}

func (o InstanceIamBindingConditionOutput) ToInstanceIamBindingConditionOutput() InstanceIamBindingConditionOutput {
	return o
}

func (o InstanceIamBindingConditionOutput) ToInstanceIamBindingConditionOutputWithContext(ctx context.Context) InstanceIamBindingConditionOutput {
	return o
}

func (o InstanceIamBindingConditionOutput) ToInstanceIamBindingConditionPtrOutput() InstanceIamBindingConditionPtrOutput {
	return o.ToInstanceIamBindingConditionPtrOutputWithContext(context.Background())
}

func (o InstanceIamBindingConditionOutput) ToInstanceIamBindingConditionPtrOutputWithContext(ctx context.Context) InstanceIamBindingConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceIamBindingCondition) *InstanceIamBindingCondition {
		return &v
	}).(InstanceIamBindingConditionPtrOutput)
}

func (o InstanceIamBindingConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceIamBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o InstanceIamBindingConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceIamBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o InstanceIamBindingConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceIamBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

type InstanceIamBindingConditionPtrOutput struct{ *pulumi.OutputState }

func (InstanceIamBindingConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceIamBindingCondition)(nil)).Elem()
}

func (o InstanceIamBindingConditionPtrOutput) ToInstanceIamBindingConditionPtrOutput() InstanceIamBindingConditionPtrOutput {
	return o
}

func (o InstanceIamBindingConditionPtrOutput) ToInstanceIamBindingConditionPtrOutputWithContext(ctx context.Context) InstanceIamBindingConditionPtrOutput {
	return o
}

func (o InstanceIamBindingConditionPtrOutput) Elem() InstanceIamBindingConditionOutput {
	return o.ApplyT(func(v *InstanceIamBindingCondition) InstanceIamBindingCondition {
		if v != nil {
			return *v
		}
		var ret InstanceIamBindingCondition
		return ret
	}).(InstanceIamBindingConditionOutput)
}

func (o InstanceIamBindingConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o InstanceIamBindingConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

func (o InstanceIamBindingConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type InstanceIamMemberCondition struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

// InstanceIamMemberConditionInput is an input type that accepts InstanceIamMemberConditionArgs and InstanceIamMemberConditionOutput values.
// You can construct a concrete instance of `InstanceIamMemberConditionInput` via:
//
//	InstanceIamMemberConditionArgs{...}
type InstanceIamMemberConditionInput interface {
	pulumi.Input

	ToInstanceIamMemberConditionOutput() InstanceIamMemberConditionOutput
	ToInstanceIamMemberConditionOutputWithContext(context.Context) InstanceIamMemberConditionOutput
}

type InstanceIamMemberConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (InstanceIamMemberConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceIamMemberCondition)(nil)).Elem()
}

func (i InstanceIamMemberConditionArgs) ToInstanceIamMemberConditionOutput() InstanceIamMemberConditionOutput {
	return i.ToInstanceIamMemberConditionOutputWithContext(context.Background())
}

func (i InstanceIamMemberConditionArgs) ToInstanceIamMemberConditionOutputWithContext(ctx context.Context) InstanceIamMemberConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceIamMemberConditionOutput)
}

func (i InstanceIamMemberConditionArgs) ToInstanceIamMemberConditionPtrOutput() InstanceIamMemberConditionPtrOutput {
	return i.ToInstanceIamMemberConditionPtrOutputWithContext(context.Background())
}

func (i InstanceIamMemberConditionArgs) ToInstanceIamMemberConditionPtrOutputWithContext(ctx context.Context) InstanceIamMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceIamMemberConditionOutput).ToInstanceIamMemberConditionPtrOutputWithContext(ctx)
}

// InstanceIamMemberConditionPtrInput is an input type that accepts InstanceIamMemberConditionArgs, InstanceIamMemberConditionPtr and InstanceIamMemberConditionPtrOutput values.
// You can construct a concrete instance of `InstanceIamMemberConditionPtrInput` via:
//
//	        InstanceIamMemberConditionArgs{...}
//
//	or:
//
//	        nil
type InstanceIamMemberConditionPtrInput interface {
	pulumi.Input

	ToInstanceIamMemberConditionPtrOutput() InstanceIamMemberConditionPtrOutput
	ToInstanceIamMemberConditionPtrOutputWithContext(context.Context) InstanceIamMemberConditionPtrOutput
}

type instanceIamMemberConditionPtrType InstanceIamMemberConditionArgs

func InstanceIamMemberConditionPtr(v *InstanceIamMemberConditionArgs) InstanceIamMemberConditionPtrInput {
	return (*instanceIamMemberConditionPtrType)(v)
}

func (*instanceIamMemberConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceIamMemberCondition)(nil)).Elem()
}

func (i *instanceIamMemberConditionPtrType) ToInstanceIamMemberConditionPtrOutput() InstanceIamMemberConditionPtrOutput {
	return i.ToInstanceIamMemberConditionPtrOutputWithContext(context.Background())
}

func (i *instanceIamMemberConditionPtrType) ToInstanceIamMemberConditionPtrOutputWithContext(ctx context.Context) InstanceIamMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceIamMemberConditionPtrOutput)
}

type InstanceIamMemberConditionOutput struct{ *pulumi.OutputState }

func (InstanceIamMemberConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceIamMemberCondition)(nil)).Elem()
}

func (o InstanceIamMemberConditionOutput) ToInstanceIamMemberConditionOutput() InstanceIamMemberConditionOutput {
	return o
}

func (o InstanceIamMemberConditionOutput) ToInstanceIamMemberConditionOutputWithContext(ctx context.Context) InstanceIamMemberConditionOutput {
	return o
}

func (o InstanceIamMemberConditionOutput) ToInstanceIamMemberConditionPtrOutput() InstanceIamMemberConditionPtrOutput {
	return o.ToInstanceIamMemberConditionPtrOutputWithContext(context.Background())
}

func (o InstanceIamMemberConditionOutput) ToInstanceIamMemberConditionPtrOutputWithContext(ctx context.Context) InstanceIamMemberConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceIamMemberCondition) *InstanceIamMemberCondition {
		return &v
	}).(InstanceIamMemberConditionPtrOutput)
}

func (o InstanceIamMemberConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceIamMemberCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o InstanceIamMemberConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceIamMemberCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o InstanceIamMemberConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceIamMemberCondition) string { return v.Title }).(pulumi.StringOutput)
}

type InstanceIamMemberConditionPtrOutput struct{ *pulumi.OutputState }

func (InstanceIamMemberConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceIamMemberCondition)(nil)).Elem()
}

func (o InstanceIamMemberConditionPtrOutput) ToInstanceIamMemberConditionPtrOutput() InstanceIamMemberConditionPtrOutput {
	return o
}

func (o InstanceIamMemberConditionPtrOutput) ToInstanceIamMemberConditionPtrOutputWithContext(ctx context.Context) InstanceIamMemberConditionPtrOutput {
	return o
}

func (o InstanceIamMemberConditionPtrOutput) Elem() InstanceIamMemberConditionOutput {
	return o.ApplyT(func(v *InstanceIamMemberCondition) InstanceIamMemberCondition {
		if v != nil {
			return *v
		}
		var ret InstanceIamMemberCondition
		return ret
	}).(InstanceIamMemberConditionOutput)
}

func (o InstanceIamMemberConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o InstanceIamMemberConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

func (o InstanceIamMemberConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type InstanceUpgradeHistory struct {
	// Optional. Action. Rolloback or Upgrade.
	Action *string `pulumi:"action"`
	// Optional. The container image before this instance upgrade.
	ContainerImage *string `pulumi:"containerImage"`
	// An RFC3339 timestamp in UTC time. This in the format of yyyy-MM-ddTHH:mm:ss.SSSZ.
	// The milliseconds portion (".SSS") is optional.
	CreateTime *string `pulumi:"createTime"`
	// Optional. The framework of this workbench instance.
	Framework *string `pulumi:"framework"`
	// Optional. The snapshot of the boot disk of this workbench instance before upgrade.
	Snapshot *string `pulumi:"snapshot"`
	// (Output)
	// Output only. The state of this instance upgrade history entry.
	State *string `pulumi:"state"`
	// Optional. Target VM Version, like m63.
	TargetVersion *string `pulumi:"targetVersion"`
	// Optional. The version of the workbench instance before this upgrade.
	Version *string `pulumi:"version"`
	// Optional. The VM image before this instance upgrade.
	VmImage *string `pulumi:"vmImage"`
}

// InstanceUpgradeHistoryInput is an input type that accepts InstanceUpgradeHistoryArgs and InstanceUpgradeHistoryOutput values.
// You can construct a concrete instance of `InstanceUpgradeHistoryInput` via:
//
//	InstanceUpgradeHistoryArgs{...}
type InstanceUpgradeHistoryInput interface {
	pulumi.Input

	ToInstanceUpgradeHistoryOutput() InstanceUpgradeHistoryOutput
	ToInstanceUpgradeHistoryOutputWithContext(context.Context) InstanceUpgradeHistoryOutput
}

type InstanceUpgradeHistoryArgs struct {
	// Optional. Action. Rolloback or Upgrade.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Optional. The container image before this instance upgrade.
	ContainerImage pulumi.StringPtrInput `pulumi:"containerImage"`
	// An RFC3339 timestamp in UTC time. This in the format of yyyy-MM-ddTHH:mm:ss.SSSZ.
	// The milliseconds portion (".SSS") is optional.
	CreateTime pulumi.StringPtrInput `pulumi:"createTime"`
	// Optional. The framework of this workbench instance.
	Framework pulumi.StringPtrInput `pulumi:"framework"`
	// Optional. The snapshot of the boot disk of this workbench instance before upgrade.
	Snapshot pulumi.StringPtrInput `pulumi:"snapshot"`
	// (Output)
	// Output only. The state of this instance upgrade history entry.
	State pulumi.StringPtrInput `pulumi:"state"`
	// Optional. Target VM Version, like m63.
	TargetVersion pulumi.StringPtrInput `pulumi:"targetVersion"`
	// Optional. The version of the workbench instance before this upgrade.
	Version pulumi.StringPtrInput `pulumi:"version"`
	// Optional. The VM image before this instance upgrade.
	VmImage pulumi.StringPtrInput `pulumi:"vmImage"`
}

func (InstanceUpgradeHistoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceUpgradeHistory)(nil)).Elem()
}

func (i InstanceUpgradeHistoryArgs) ToInstanceUpgradeHistoryOutput() InstanceUpgradeHistoryOutput {
	return i.ToInstanceUpgradeHistoryOutputWithContext(context.Background())
}

func (i InstanceUpgradeHistoryArgs) ToInstanceUpgradeHistoryOutputWithContext(ctx context.Context) InstanceUpgradeHistoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceUpgradeHistoryOutput)
}

// InstanceUpgradeHistoryArrayInput is an input type that accepts InstanceUpgradeHistoryArray and InstanceUpgradeHistoryArrayOutput values.
// You can construct a concrete instance of `InstanceUpgradeHistoryArrayInput` via:
//
//	InstanceUpgradeHistoryArray{ InstanceUpgradeHistoryArgs{...} }
type InstanceUpgradeHistoryArrayInput interface {
	pulumi.Input

	ToInstanceUpgradeHistoryArrayOutput() InstanceUpgradeHistoryArrayOutput
	ToInstanceUpgradeHistoryArrayOutputWithContext(context.Context) InstanceUpgradeHistoryArrayOutput
}

type InstanceUpgradeHistoryArray []InstanceUpgradeHistoryInput

func (InstanceUpgradeHistoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceUpgradeHistory)(nil)).Elem()
}

func (i InstanceUpgradeHistoryArray) ToInstanceUpgradeHistoryArrayOutput() InstanceUpgradeHistoryArrayOutput {
	return i.ToInstanceUpgradeHistoryArrayOutputWithContext(context.Background())
}

func (i InstanceUpgradeHistoryArray) ToInstanceUpgradeHistoryArrayOutputWithContext(ctx context.Context) InstanceUpgradeHistoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceUpgradeHistoryArrayOutput)
}

type InstanceUpgradeHistoryOutput struct{ *pulumi.OutputState }

func (InstanceUpgradeHistoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceUpgradeHistory)(nil)).Elem()
}

func (o InstanceUpgradeHistoryOutput) ToInstanceUpgradeHistoryOutput() InstanceUpgradeHistoryOutput {
	return o
}

func (o InstanceUpgradeHistoryOutput) ToInstanceUpgradeHistoryOutputWithContext(ctx context.Context) InstanceUpgradeHistoryOutput {
	return o
}

// Optional. Action. Rolloback or Upgrade.
func (o InstanceUpgradeHistoryOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceUpgradeHistory) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Optional. The container image before this instance upgrade.
func (o InstanceUpgradeHistoryOutput) ContainerImage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceUpgradeHistory) *string { return v.ContainerImage }).(pulumi.StringPtrOutput)
}

// An RFC3339 timestamp in UTC time. This in the format of yyyy-MM-ddTHH:mm:ss.SSSZ.
// The milliseconds portion (".SSS") is optional.
func (o InstanceUpgradeHistoryOutput) CreateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceUpgradeHistory) *string { return v.CreateTime }).(pulumi.StringPtrOutput)
}

// Optional. The framework of this workbench instance.
func (o InstanceUpgradeHistoryOutput) Framework() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceUpgradeHistory) *string { return v.Framework }).(pulumi.StringPtrOutput)
}

// Optional. The snapshot of the boot disk of this workbench instance before upgrade.
func (o InstanceUpgradeHistoryOutput) Snapshot() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceUpgradeHistory) *string { return v.Snapshot }).(pulumi.StringPtrOutput)
}

// (Output)
// Output only. The state of this instance upgrade history entry.
func (o InstanceUpgradeHistoryOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceUpgradeHistory) *string { return v.State }).(pulumi.StringPtrOutput)
}

// Optional. Target VM Version, like m63.
func (o InstanceUpgradeHistoryOutput) TargetVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceUpgradeHistory) *string { return v.TargetVersion }).(pulumi.StringPtrOutput)
}

// Optional. The version of the workbench instance before this upgrade.
func (o InstanceUpgradeHistoryOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceUpgradeHistory) *string { return v.Version }).(pulumi.StringPtrOutput)
}

// Optional. The VM image before this instance upgrade.
func (o InstanceUpgradeHistoryOutput) VmImage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceUpgradeHistory) *string { return v.VmImage }).(pulumi.StringPtrOutput)
}

type InstanceUpgradeHistoryArrayOutput struct{ *pulumi.OutputState }

func (InstanceUpgradeHistoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceUpgradeHistory)(nil)).Elem()
}

func (o InstanceUpgradeHistoryArrayOutput) ToInstanceUpgradeHistoryArrayOutput() InstanceUpgradeHistoryArrayOutput {
	return o
}

func (o InstanceUpgradeHistoryArrayOutput) ToInstanceUpgradeHistoryArrayOutputWithContext(ctx context.Context) InstanceUpgradeHistoryArrayOutput {
	return o
}

func (o InstanceUpgradeHistoryArrayOutput) Index(i pulumi.IntInput) InstanceUpgradeHistoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceUpgradeHistory {
		return vs[0].([]InstanceUpgradeHistory)[vs[1].(int)]
	}).(InstanceUpgradeHistoryOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceGceSetupInput)(nil)).Elem(), InstanceGceSetupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceGceSetupPtrInput)(nil)).Elem(), InstanceGceSetupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceGceSetupAcceleratorConfigInput)(nil)).Elem(), InstanceGceSetupAcceleratorConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceGceSetupAcceleratorConfigArrayInput)(nil)).Elem(), InstanceGceSetupAcceleratorConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceGceSetupBootDiskInput)(nil)).Elem(), InstanceGceSetupBootDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceGceSetupBootDiskPtrInput)(nil)).Elem(), InstanceGceSetupBootDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceGceSetupConfidentialInstanceConfigInput)(nil)).Elem(), InstanceGceSetupConfidentialInstanceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceGceSetupConfidentialInstanceConfigPtrInput)(nil)).Elem(), InstanceGceSetupConfidentialInstanceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceGceSetupContainerImageInput)(nil)).Elem(), InstanceGceSetupContainerImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceGceSetupContainerImagePtrInput)(nil)).Elem(), InstanceGceSetupContainerImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceGceSetupDataDisksInput)(nil)).Elem(), InstanceGceSetupDataDisksArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceGceSetupDataDisksPtrInput)(nil)).Elem(), InstanceGceSetupDataDisksArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceGceSetupNetworkInterfaceInput)(nil)).Elem(), InstanceGceSetupNetworkInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceGceSetupNetworkInterfaceArrayInput)(nil)).Elem(), InstanceGceSetupNetworkInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceGceSetupNetworkInterfaceAccessConfigInput)(nil)).Elem(), InstanceGceSetupNetworkInterfaceAccessConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceGceSetupNetworkInterfaceAccessConfigArrayInput)(nil)).Elem(), InstanceGceSetupNetworkInterfaceAccessConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceGceSetupServiceAccountInput)(nil)).Elem(), InstanceGceSetupServiceAccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceGceSetupServiceAccountArrayInput)(nil)).Elem(), InstanceGceSetupServiceAccountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceGceSetupShieldedInstanceConfigInput)(nil)).Elem(), InstanceGceSetupShieldedInstanceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceGceSetupShieldedInstanceConfigPtrInput)(nil)).Elem(), InstanceGceSetupShieldedInstanceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceGceSetupVmImageInput)(nil)).Elem(), InstanceGceSetupVmImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceGceSetupVmImagePtrInput)(nil)).Elem(), InstanceGceSetupVmImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceHealthInfoInput)(nil)).Elem(), InstanceHealthInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceHealthInfoArrayInput)(nil)).Elem(), InstanceHealthInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceIamBindingConditionInput)(nil)).Elem(), InstanceIamBindingConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceIamBindingConditionPtrInput)(nil)).Elem(), InstanceIamBindingConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceIamMemberConditionInput)(nil)).Elem(), InstanceIamMemberConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceIamMemberConditionPtrInput)(nil)).Elem(), InstanceIamMemberConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceUpgradeHistoryInput)(nil)).Elem(), InstanceUpgradeHistoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceUpgradeHistoryArrayInput)(nil)).Elem(), InstanceUpgradeHistoryArray{})
	pulumi.RegisterOutputType(InstanceGceSetupOutput{})
	pulumi.RegisterOutputType(InstanceGceSetupPtrOutput{})
	pulumi.RegisterOutputType(InstanceGceSetupAcceleratorConfigOutput{})
	pulumi.RegisterOutputType(InstanceGceSetupAcceleratorConfigArrayOutput{})
	pulumi.RegisterOutputType(InstanceGceSetupBootDiskOutput{})
	pulumi.RegisterOutputType(InstanceGceSetupBootDiskPtrOutput{})
	pulumi.RegisterOutputType(InstanceGceSetupConfidentialInstanceConfigOutput{})
	pulumi.RegisterOutputType(InstanceGceSetupConfidentialInstanceConfigPtrOutput{})
	pulumi.RegisterOutputType(InstanceGceSetupContainerImageOutput{})
	pulumi.RegisterOutputType(InstanceGceSetupContainerImagePtrOutput{})
	pulumi.RegisterOutputType(InstanceGceSetupDataDisksOutput{})
	pulumi.RegisterOutputType(InstanceGceSetupDataDisksPtrOutput{})
	pulumi.RegisterOutputType(InstanceGceSetupNetworkInterfaceOutput{})
	pulumi.RegisterOutputType(InstanceGceSetupNetworkInterfaceArrayOutput{})
	pulumi.RegisterOutputType(InstanceGceSetupNetworkInterfaceAccessConfigOutput{})
	pulumi.RegisterOutputType(InstanceGceSetupNetworkInterfaceAccessConfigArrayOutput{})
	pulumi.RegisterOutputType(InstanceGceSetupServiceAccountOutput{})
	pulumi.RegisterOutputType(InstanceGceSetupServiceAccountArrayOutput{})
	pulumi.RegisterOutputType(InstanceGceSetupShieldedInstanceConfigOutput{})
	pulumi.RegisterOutputType(InstanceGceSetupShieldedInstanceConfigPtrOutput{})
	pulumi.RegisterOutputType(InstanceGceSetupVmImageOutput{})
	pulumi.RegisterOutputType(InstanceGceSetupVmImagePtrOutput{})
	pulumi.RegisterOutputType(InstanceHealthInfoOutput{})
	pulumi.RegisterOutputType(InstanceHealthInfoArrayOutput{})
	pulumi.RegisterOutputType(InstanceIamBindingConditionOutput{})
	pulumi.RegisterOutputType(InstanceIamBindingConditionPtrOutput{})
	pulumi.RegisterOutputType(InstanceIamMemberConditionOutput{})
	pulumi.RegisterOutputType(InstanceIamMemberConditionPtrOutput{})
	pulumi.RegisterOutputType(InstanceUpgradeHistoryOutput{})
	pulumi.RegisterOutputType(InstanceUpgradeHistoryArrayOutput{})
}
