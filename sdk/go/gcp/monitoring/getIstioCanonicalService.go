// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package monitoring

import (
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// A Monitoring Service is the root resource under which operational aspects of a
// generic service are accessible. A service is some discrete, autonomous, and
// network-accessible unit, designed to solve an individual concern
//
// A monitoring Istio Canonical Service is automatically created by GCP to monitor
// Istio Canonical Services.
//
// To get more information about Service, see:
//
// * [API documentation](https://cloud.google.com/monitoring/api/ref_v3/rest/v3/services)
// * How-to Guides
//     * [Service Monitoring](https://cloud.google.com/monitoring/service-monitoring)
//     * [Monitoring API Documentation](https://cloud.google.com/monitoring/api/v3/)
//
// ## Example Usage
// ### Monitoring Istio Canonical Service
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-gcp/sdk/v4/go/gcp/monitoring"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := monitoring.GetIstioCanonicalService(ctx, &monitoring.GetIstioCanonicalServiceArgs{
// 			CanonicalService:          "prometheus",
// 			CanonicalServiceNamespace: "istio-system",
// 			MeshUid:                   "proj-573164786102",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func GetIstioCanonicalService(ctx *pulumi.Context, args *GetIstioCanonicalServiceArgs, opts ...pulumi.InvokeOption) (*GetIstioCanonicalServiceResult, error) {
	var rv GetIstioCanonicalServiceResult
	err := ctx.Invoke("gcp:monitoring/getIstioCanonicalService:getIstioCanonicalService", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getIstioCanonicalService.
type GetIstioCanonicalServiceArgs struct {
	// The name of the canonical service underlying this service.
	// Corresponds to the destinationCanonicalServiceName metric label in label in Istio metrics.
	CanonicalService string `pulumi:"canonicalService"`
	// The namespace of the canonical service underlying this service.
	// Corresponds to the destinationCanonicalServiceNamespace metric label in Istio metrics.
	CanonicalServiceNamespace string `pulumi:"canonicalServiceNamespace"`
	// Identifier for the mesh in which this Istio service is defined.
	// Corresponds to the meshUid metric label in Istio metrics.
	MeshUid string `pulumi:"meshUid"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
}

// A collection of values returned by getIstioCanonicalService.
type GetIstioCanonicalServiceResult struct {
	CanonicalService          string `pulumi:"canonicalService"`
	CanonicalServiceNamespace string `pulumi:"canonicalServiceNamespace"`
	DisplayName               string `pulumi:"displayName"`
	// The provider-assigned unique ID for this managed resource.
	Id          string                              `pulumi:"id"`
	MeshUid     string                              `pulumi:"meshUid"`
	Name        string                              `pulumi:"name"`
	Project     *string                             `pulumi:"project"`
	ServiceId   string                              `pulumi:"serviceId"`
	Telemetries []GetIstioCanonicalServiceTelemetry `pulumi:"telemetries"`
}
