// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package monitoring

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A Monitoring Service is the root resource under which operational aspects of a
// generic service are accessible. A service is some discrete, autonomous, and
// network-accessible unit, designed to solve an individual concern
//
// An Mesh Istio monitoring service is automatically created by GCP to monitor
// Mesh Istio services.
//
// To get more information about Service, see:
//
// * [API documentation](https://cloud.google.com/monitoring/api/ref_v3/rest/v3/services)
// * How-to Guides
//     * [Service Monitoring](https://cloud.google.com/monitoring/service-monitoring)
//     * [Monitoring API Documentation](https://cloud.google.com/monitoring/api/v3/)
//
// ## Example Usage
// ### Monitoring Mesh Istio Service
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-gcp/sdk/v5/go/gcp/monitoring"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := monitoring.GetMeshIstioService(ctx, &monitoring.GetMeshIstioServiceArgs{
// 			MeshUid:          "proj-573164786102",
// 			ServiceName:      "prometheus",
// 			ServiceNamespace: "istio-system",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func GetMeshIstioService(ctx *pulumi.Context, args *GetMeshIstioServiceArgs, opts ...pulumi.InvokeOption) (*GetMeshIstioServiceResult, error) {
	var rv GetMeshIstioServiceResult
	err := ctx.Invoke("gcp:monitoring/getMeshIstioService:getMeshIstioService", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMeshIstioService.
type GetMeshIstioServiceArgs struct {
	// Identifier for the mesh in which this Istio service is defined.
	// Corresponds to the meshUid metric label in Istio metrics.
	MeshUid string `pulumi:"meshUid"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// The name of the Istio service underlying this service.
	// Corresponds to the destinationServiceName metric label in Istio metrics.
	ServiceName string `pulumi:"serviceName"`
	// The namespace of the Istio service underlying this service.
	// Corresponds to the destinationServiceNamespace metric label in Istio metrics.
	ServiceNamespace string `pulumi:"serviceNamespace"`
}

// A collection of values returned by getMeshIstioService.
type GetMeshIstioServiceResult struct {
	DisplayName string `pulumi:"displayName"`
	// The provider-assigned unique ID for this managed resource.
	Id               string                         `pulumi:"id"`
	MeshUid          string                         `pulumi:"meshUid"`
	Name             string                         `pulumi:"name"`
	Project          *string                        `pulumi:"project"`
	ServiceId        string                         `pulumi:"serviceId"`
	ServiceName      string                         `pulumi:"serviceName"`
	ServiceNamespace string                         `pulumi:"serviceNamespace"`
	Telemetries      []GetMeshIstioServiceTelemetry `pulumi:"telemetries"`
}

func GetMeshIstioServiceOutput(ctx *pulumi.Context, args GetMeshIstioServiceOutputArgs, opts ...pulumi.InvokeOption) GetMeshIstioServiceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetMeshIstioServiceResult, error) {
			args := v.(GetMeshIstioServiceArgs)
			r, err := GetMeshIstioService(ctx, &args, opts...)
			return *r, err
		}).(GetMeshIstioServiceResultOutput)
}

// A collection of arguments for invoking getMeshIstioService.
type GetMeshIstioServiceOutputArgs struct {
	// Identifier for the mesh in which this Istio service is defined.
	// Corresponds to the meshUid metric label in Istio metrics.
	MeshUid pulumi.StringInput `pulumi:"meshUid"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput `pulumi:"project"`
	// The name of the Istio service underlying this service.
	// Corresponds to the destinationServiceName metric label in Istio metrics.
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
	// The namespace of the Istio service underlying this service.
	// Corresponds to the destinationServiceNamespace metric label in Istio metrics.
	ServiceNamespace pulumi.StringInput `pulumi:"serviceNamespace"`
}

func (GetMeshIstioServiceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMeshIstioServiceArgs)(nil)).Elem()
}

// A collection of values returned by getMeshIstioService.
type GetMeshIstioServiceResultOutput struct{ *pulumi.OutputState }

func (GetMeshIstioServiceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMeshIstioServiceResult)(nil)).Elem()
}

func (o GetMeshIstioServiceResultOutput) ToGetMeshIstioServiceResultOutput() GetMeshIstioServiceResultOutput {
	return o
}

func (o GetMeshIstioServiceResultOutput) ToGetMeshIstioServiceResultOutputWithContext(ctx context.Context) GetMeshIstioServiceResultOutput {
	return o
}

func (o GetMeshIstioServiceResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMeshIstioServiceResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetMeshIstioServiceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetMeshIstioServiceResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetMeshIstioServiceResultOutput) MeshUid() pulumi.StringOutput {
	return o.ApplyT(func(v GetMeshIstioServiceResult) string { return v.MeshUid }).(pulumi.StringOutput)
}

func (o GetMeshIstioServiceResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetMeshIstioServiceResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetMeshIstioServiceResultOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMeshIstioServiceResult) *string { return v.Project }).(pulumi.StringPtrOutput)
}

func (o GetMeshIstioServiceResultOutput) ServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMeshIstioServiceResult) string { return v.ServiceId }).(pulumi.StringOutput)
}

func (o GetMeshIstioServiceResultOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMeshIstioServiceResult) string { return v.ServiceName }).(pulumi.StringOutput)
}

func (o GetMeshIstioServiceResultOutput) ServiceNamespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetMeshIstioServiceResult) string { return v.ServiceNamespace }).(pulumi.StringOutput)
}

func (o GetMeshIstioServiceResultOutput) Telemetries() GetMeshIstioServiceTelemetryArrayOutput {
	return o.ApplyT(func(v GetMeshIstioServiceResult) []GetMeshIstioServiceTelemetry { return v.Telemetries }).(GetMeshIstioServiceTelemetryArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetMeshIstioServiceResultOutput{})
}
