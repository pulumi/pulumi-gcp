// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package monitoring

import (
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// A Monitoring Service is the root resource under which operational aspects of a
// generic service are accessible. A service is some discrete, autonomous, and
// network-accessible unit, designed to solve an individual concern
//
// An Cluster Istio monitoring service is automatically created by GCP to monitor
// Cluster Istio services.
//
// To get more information about Service, see:
//
// * [API documentation](https://cloud.google.com/monitoring/api/ref_v3/rest/v3/services)
// * How-to Guides
//     * [Service Monitoring](https://cloud.google.com/monitoring/service-monitoring)
//     * [Monitoring API Documentation](https://cloud.google.com/monitoring/api/v3/)
//
// ## Example Usage
// ### Monitoring Cluster Istio Service
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-gcp/sdk/v4/go/gcp/monitoring"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := monitoring.GetClusterIstioService(ctx, &monitoring.GetClusterIstioServiceArgs{
// 			ClusterName:      "west",
// 			Location:         "us-west2-a",
// 			ServiceName:      "istio-policy",
// 			ServiceNamespace: "istio-system",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func GetClusterIstioService(ctx *pulumi.Context, args *GetClusterIstioServiceArgs, opts ...pulumi.InvokeOption) (*GetClusterIstioServiceResult, error) {
	var rv GetClusterIstioServiceResult
	err := ctx.Invoke("gcp:monitoring/getClusterIstioService:getClusterIstioService", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getClusterIstioService.
type GetClusterIstioServiceArgs struct {
	// The name of the Kubernetes cluster in which this Istio service
	// is defined. Corresponds to the clusterName resource label in k8sCluster resources.
	ClusterName string `pulumi:"clusterName"`
	// The location of the Kubernetes cluster in which this Istio service
	// is defined. Corresponds to the location resource label in k8sCluster resources.
	Location string `pulumi:"location"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// The name of the Istio service underlying this service.
	// Corresponds to the destinationServiceName metric label in Istio metrics.
	ServiceName string `pulumi:"serviceName"`
	// The namespace of the Istio service underlying this service.
	// Corresponds to the destinationServiceNamespace metric label in Istio metrics.
	ServiceNamespace string `pulumi:"serviceNamespace"`
}

// A collection of values returned by getClusterIstioService.
type GetClusterIstioServiceResult struct {
	ClusterName string `pulumi:"clusterName"`
	DisplayName string `pulumi:"displayName"`
	// The provider-assigned unique ID for this managed resource.
	Id               string                            `pulumi:"id"`
	Location         string                            `pulumi:"location"`
	Name             string                            `pulumi:"name"`
	Project          *string                           `pulumi:"project"`
	ServiceId        string                            `pulumi:"serviceId"`
	ServiceName      string                            `pulumi:"serviceName"`
	ServiceNamespace string                            `pulumi:"serviceNamespace"`
	Telemetries      []GetClusterIstioServiceTelemetry `pulumi:"telemetries"`
}
