// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dataproc

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Three different resources help you manage your IAM policy for Dataproc AutoscalingPolicy. Each of these resources serves a different use case:
//
// * `dataproc.AutoscalingPolicyIamPolicy`: Authoritative. Sets the IAM policy for the autoscalingpolicy and replaces any existing policy already attached.
// * `dataproc.AutoscalingPolicyIamBinding`: Authoritative for a given role. Updates the IAM policy to grant a role to a list of members. Other roles within the IAM policy for the autoscalingpolicy are preserved.
// * `dataproc.AutoscalingPolicyIamMember`: Non-authoritative. Updates the IAM policy to grant a role to a new member. Other members for the role for the autoscalingpolicy are preserved.
//
// > **Note:** `dataproc.AutoscalingPolicyIamPolicy` **cannot** be used in conjunction with `dataproc.AutoscalingPolicyIamBinding` and `dataproc.AutoscalingPolicyIamMember` or they will fight over what your policy should be.
//
// > **Note:** `dataproc.AutoscalingPolicyIamBinding` resources **can be** used in conjunction with `dataproc.AutoscalingPolicyIamMember` resources **only if** they do not grant privilege to the same role.
//
// ## google\_dataproc\_autoscaling\_policy\_iam\_policy
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/dataproc"
//	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/organizations"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			admin, err := organizations.LookupIAMPolicy(ctx, &organizations.LookupIAMPolicyArgs{
//				Bindings: []organizations.GetIAMPolicyBinding{
//					{
//						Role: "roles/viewer",
//						Members: []string{
//							"user:jane@example.com",
//						},
//					},
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = dataproc.NewAutoscalingPolicyIamPolicy(ctx, "policy", &dataproc.AutoscalingPolicyIamPolicyArgs{
//				Project:    pulumi.Any(google_dataproc_autoscaling_policy.Basic.Project),
//				Location:   pulumi.Any(google_dataproc_autoscaling_policy.Basic.Location),
//				PolicyId:   pulumi.Any(google_dataproc_autoscaling_policy.Basic.Policy_id),
//				PolicyData: *pulumi.String(admin.PolicyData),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## google\_dataproc\_autoscaling\_policy\_iam\_binding
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/dataproc"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := dataproc.NewAutoscalingPolicyIamBinding(ctx, "binding", &dataproc.AutoscalingPolicyIamBindingArgs{
//				Project:  pulumi.Any(google_dataproc_autoscaling_policy.Basic.Project),
//				Location: pulumi.Any(google_dataproc_autoscaling_policy.Basic.Location),
//				PolicyId: pulumi.Any(google_dataproc_autoscaling_policy.Basic.Policy_id),
//				Role:     pulumi.String("roles/viewer"),
//				Members: pulumi.StringArray{
//					pulumi.String("user:jane@example.com"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## google\_dataproc\_autoscaling\_policy\_iam\_member
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/dataproc"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := dataproc.NewAutoscalingPolicyIamMember(ctx, "member", &dataproc.AutoscalingPolicyIamMemberArgs{
//				Project:  pulumi.Any(google_dataproc_autoscaling_policy.Basic.Project),
//				Location: pulumi.Any(google_dataproc_autoscaling_policy.Basic.Location),
//				PolicyId: pulumi.Any(google_dataproc_autoscaling_policy.Basic.Policy_id),
//				Role:     pulumi.String("roles/viewer"),
//				Member:   pulumi.String("user:jane@example.com"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// For all import syntaxes, the "resource in question" can take any of the following forms* projects/{{project}}/locations/{{location}}/autoscalingPolicies/{{policy_id}} * {{project}}/{{location}}/{{policy_id}} * {{location}}/{{policy_id}} * {{policy_id}} Any variables not passed in the import command will be taken from the provider configuration. Dataproc autoscalingpolicy IAM resources can be imported using the resource identifiers, role, and member. IAM member imports use space-delimited identifiersthe resource in question, the role, and the member identity, e.g.
//
// ```sh
//
//	$ pulumi import gcp:dataproc/autoscalingPolicyIamMember:AutoscalingPolicyIamMember editor "projects/{{project}}/locations/{{location}}/autoscalingPolicies/{{policy_id}} roles/viewer user:jane@example.com"
//
// ```
//
//	IAM binding imports use space-delimited identifiersthe resource in question and the role, e.g.
//
// ```sh
//
//	$ pulumi import gcp:dataproc/autoscalingPolicyIamMember:AutoscalingPolicyIamMember editor "projects/{{project}}/locations/{{location}}/autoscalingPolicies/{{policy_id}} roles/viewer"
//
// ```
//
//	IAM policy imports use the identifier of the resource in question, e.g.
//
// ```sh
//
//	$ pulumi import gcp:dataproc/autoscalingPolicyIamMember:AutoscalingPolicyIamMember editor projects/{{project}}/locations/{{location}}/autoscalingPolicies/{{policy_id}}
//
// ```
//
//	-> **Custom Roles**If you're importing a IAM resource with a custom role, make sure to use the
//
// full name of the custom role, e.g. `[projects/my-project|organizations/my-org]/roles/my-custom-role`.
type AutoscalingPolicyIamMember struct {
	pulumi.CustomResourceState

	Condition AutoscalingPolicyIamMemberConditionPtrOutput `pulumi:"condition"`
	// (Computed) The etag of the IAM policy.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// The  location where the autoscaling policy should reside.
	// The default value is `global`.
	// Used to find the parent resource to bind the IAM policy to
	Location pulumi.StringOutput `pulumi:"location"`
	Member   pulumi.StringOutput `pulumi:"member"`
	// The policy id. The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_),
	// and hyphens (-). Cannot begin or end with underscore or hyphen. Must consist of between
	// 3 and 50 characters.
	// Used to find the parent resource to bind the IAM policy to
	PolicyId pulumi.StringOutput `pulumi:"policyId"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
	// The role that should be applied. Only one
	// `dataproc.AutoscalingPolicyIamBinding` can be used per role. Note that custom roles must be of the format
	// `[projects|organizations]/{parent-name}/roles/{role-name}`.
	Role pulumi.StringOutput `pulumi:"role"`
}

// NewAutoscalingPolicyIamMember registers a new resource with the given unique name, arguments, and options.
func NewAutoscalingPolicyIamMember(ctx *pulumi.Context,
	name string, args *AutoscalingPolicyIamMemberArgs, opts ...pulumi.ResourceOption) (*AutoscalingPolicyIamMember, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Member == nil {
		return nil, errors.New("invalid value for required argument 'Member'")
	}
	if args.PolicyId == nil {
		return nil, errors.New("invalid value for required argument 'PolicyId'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	var resource AutoscalingPolicyIamMember
	err := ctx.RegisterResource("gcp:dataproc/autoscalingPolicyIamMember:AutoscalingPolicyIamMember", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAutoscalingPolicyIamMember gets an existing AutoscalingPolicyIamMember resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAutoscalingPolicyIamMember(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AutoscalingPolicyIamMemberState, opts ...pulumi.ResourceOption) (*AutoscalingPolicyIamMember, error) {
	var resource AutoscalingPolicyIamMember
	err := ctx.ReadResource("gcp:dataproc/autoscalingPolicyIamMember:AutoscalingPolicyIamMember", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AutoscalingPolicyIamMember resources.
type autoscalingPolicyIamMemberState struct {
	Condition *AutoscalingPolicyIamMemberCondition `pulumi:"condition"`
	// (Computed) The etag of the IAM policy.
	Etag *string `pulumi:"etag"`
	// The  location where the autoscaling policy should reside.
	// The default value is `global`.
	// Used to find the parent resource to bind the IAM policy to
	Location *string `pulumi:"location"`
	Member   *string `pulumi:"member"`
	// The policy id. The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_),
	// and hyphens (-). Cannot begin or end with underscore or hyphen. Must consist of between
	// 3 and 50 characters.
	// Used to find the parent resource to bind the IAM policy to
	PolicyId *string `pulumi:"policyId"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project *string `pulumi:"project"`
	// The role that should be applied. Only one
	// `dataproc.AutoscalingPolicyIamBinding` can be used per role. Note that custom roles must be of the format
	// `[projects|organizations]/{parent-name}/roles/{role-name}`.
	Role *string `pulumi:"role"`
}

type AutoscalingPolicyIamMemberState struct {
	Condition AutoscalingPolicyIamMemberConditionPtrInput
	// (Computed) The etag of the IAM policy.
	Etag pulumi.StringPtrInput
	// The  location where the autoscaling policy should reside.
	// The default value is `global`.
	// Used to find the parent resource to bind the IAM policy to
	Location pulumi.StringPtrInput
	Member   pulumi.StringPtrInput
	// The policy id. The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_),
	// and hyphens (-). Cannot begin or end with underscore or hyphen. Must consist of between
	// 3 and 50 characters.
	// Used to find the parent resource to bind the IAM policy to
	PolicyId pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringPtrInput
	// The role that should be applied. Only one
	// `dataproc.AutoscalingPolicyIamBinding` can be used per role. Note that custom roles must be of the format
	// `[projects|organizations]/{parent-name}/roles/{role-name}`.
	Role pulumi.StringPtrInput
}

func (AutoscalingPolicyIamMemberState) ElementType() reflect.Type {
	return reflect.TypeOf((*autoscalingPolicyIamMemberState)(nil)).Elem()
}

type autoscalingPolicyIamMemberArgs struct {
	Condition *AutoscalingPolicyIamMemberCondition `pulumi:"condition"`
	// The  location where the autoscaling policy should reside.
	// The default value is `global`.
	// Used to find the parent resource to bind the IAM policy to
	Location *string `pulumi:"location"`
	Member   string  `pulumi:"member"`
	// The policy id. The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_),
	// and hyphens (-). Cannot begin or end with underscore or hyphen. Must consist of between
	// 3 and 50 characters.
	// Used to find the parent resource to bind the IAM policy to
	PolicyId string `pulumi:"policyId"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project *string `pulumi:"project"`
	// The role that should be applied. Only one
	// `dataproc.AutoscalingPolicyIamBinding` can be used per role. Note that custom roles must be of the format
	// `[projects|organizations]/{parent-name}/roles/{role-name}`.
	Role string `pulumi:"role"`
}

// The set of arguments for constructing a AutoscalingPolicyIamMember resource.
type AutoscalingPolicyIamMemberArgs struct {
	Condition AutoscalingPolicyIamMemberConditionPtrInput
	// The  location where the autoscaling policy should reside.
	// The default value is `global`.
	// Used to find the parent resource to bind the IAM policy to
	Location pulumi.StringPtrInput
	Member   pulumi.StringInput
	// The policy id. The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_),
	// and hyphens (-). Cannot begin or end with underscore or hyphen. Must consist of between
	// 3 and 50 characters.
	// Used to find the parent resource to bind the IAM policy to
	PolicyId pulumi.StringInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringPtrInput
	// The role that should be applied. Only one
	// `dataproc.AutoscalingPolicyIamBinding` can be used per role. Note that custom roles must be of the format
	// `[projects|organizations]/{parent-name}/roles/{role-name}`.
	Role pulumi.StringInput
}

func (AutoscalingPolicyIamMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*autoscalingPolicyIamMemberArgs)(nil)).Elem()
}

type AutoscalingPolicyIamMemberInput interface {
	pulumi.Input

	ToAutoscalingPolicyIamMemberOutput() AutoscalingPolicyIamMemberOutput
	ToAutoscalingPolicyIamMemberOutputWithContext(ctx context.Context) AutoscalingPolicyIamMemberOutput
}

func (*AutoscalingPolicyIamMember) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoscalingPolicyIamMember)(nil)).Elem()
}

func (i *AutoscalingPolicyIamMember) ToAutoscalingPolicyIamMemberOutput() AutoscalingPolicyIamMemberOutput {
	return i.ToAutoscalingPolicyIamMemberOutputWithContext(context.Background())
}

func (i *AutoscalingPolicyIamMember) ToAutoscalingPolicyIamMemberOutputWithContext(ctx context.Context) AutoscalingPolicyIamMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalingPolicyIamMemberOutput)
}

// AutoscalingPolicyIamMemberArrayInput is an input type that accepts AutoscalingPolicyIamMemberArray and AutoscalingPolicyIamMemberArrayOutput values.
// You can construct a concrete instance of `AutoscalingPolicyIamMemberArrayInput` via:
//
//	AutoscalingPolicyIamMemberArray{ AutoscalingPolicyIamMemberArgs{...} }
type AutoscalingPolicyIamMemberArrayInput interface {
	pulumi.Input

	ToAutoscalingPolicyIamMemberArrayOutput() AutoscalingPolicyIamMemberArrayOutput
	ToAutoscalingPolicyIamMemberArrayOutputWithContext(context.Context) AutoscalingPolicyIamMemberArrayOutput
}

type AutoscalingPolicyIamMemberArray []AutoscalingPolicyIamMemberInput

func (AutoscalingPolicyIamMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AutoscalingPolicyIamMember)(nil)).Elem()
}

func (i AutoscalingPolicyIamMemberArray) ToAutoscalingPolicyIamMemberArrayOutput() AutoscalingPolicyIamMemberArrayOutput {
	return i.ToAutoscalingPolicyIamMemberArrayOutputWithContext(context.Background())
}

func (i AutoscalingPolicyIamMemberArray) ToAutoscalingPolicyIamMemberArrayOutputWithContext(ctx context.Context) AutoscalingPolicyIamMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalingPolicyIamMemberArrayOutput)
}

// AutoscalingPolicyIamMemberMapInput is an input type that accepts AutoscalingPolicyIamMemberMap and AutoscalingPolicyIamMemberMapOutput values.
// You can construct a concrete instance of `AutoscalingPolicyIamMemberMapInput` via:
//
//	AutoscalingPolicyIamMemberMap{ "key": AutoscalingPolicyIamMemberArgs{...} }
type AutoscalingPolicyIamMemberMapInput interface {
	pulumi.Input

	ToAutoscalingPolicyIamMemberMapOutput() AutoscalingPolicyIamMemberMapOutput
	ToAutoscalingPolicyIamMemberMapOutputWithContext(context.Context) AutoscalingPolicyIamMemberMapOutput
}

type AutoscalingPolicyIamMemberMap map[string]AutoscalingPolicyIamMemberInput

func (AutoscalingPolicyIamMemberMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AutoscalingPolicyIamMember)(nil)).Elem()
}

func (i AutoscalingPolicyIamMemberMap) ToAutoscalingPolicyIamMemberMapOutput() AutoscalingPolicyIamMemberMapOutput {
	return i.ToAutoscalingPolicyIamMemberMapOutputWithContext(context.Background())
}

func (i AutoscalingPolicyIamMemberMap) ToAutoscalingPolicyIamMemberMapOutputWithContext(ctx context.Context) AutoscalingPolicyIamMemberMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalingPolicyIamMemberMapOutput)
}

type AutoscalingPolicyIamMemberOutput struct{ *pulumi.OutputState }

func (AutoscalingPolicyIamMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoscalingPolicyIamMember)(nil)).Elem()
}

func (o AutoscalingPolicyIamMemberOutput) ToAutoscalingPolicyIamMemberOutput() AutoscalingPolicyIamMemberOutput {
	return o
}

func (o AutoscalingPolicyIamMemberOutput) ToAutoscalingPolicyIamMemberOutputWithContext(ctx context.Context) AutoscalingPolicyIamMemberOutput {
	return o
}

func (o AutoscalingPolicyIamMemberOutput) Condition() AutoscalingPolicyIamMemberConditionPtrOutput {
	return o.ApplyT(func(v *AutoscalingPolicyIamMember) AutoscalingPolicyIamMemberConditionPtrOutput { return v.Condition }).(AutoscalingPolicyIamMemberConditionPtrOutput)
}

// (Computed) The etag of the IAM policy.
func (o AutoscalingPolicyIamMemberOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *AutoscalingPolicyIamMember) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// The  location where the autoscaling policy should reside.
// The default value is `global`.
// Used to find the parent resource to bind the IAM policy to
func (o AutoscalingPolicyIamMemberOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *AutoscalingPolicyIamMember) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

func (o AutoscalingPolicyIamMemberOutput) Member() pulumi.StringOutput {
	return o.ApplyT(func(v *AutoscalingPolicyIamMember) pulumi.StringOutput { return v.Member }).(pulumi.StringOutput)
}

// The policy id. The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_),
// and hyphens (-). Cannot begin or end with underscore or hyphen. Must consist of between
// 3 and 50 characters.
// Used to find the parent resource to bind the IAM policy to
func (o AutoscalingPolicyIamMemberOutput) PolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *AutoscalingPolicyIamMember) pulumi.StringOutput { return v.PolicyId }).(pulumi.StringOutput)
}

// The ID of the project in which the resource belongs.
// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
func (o AutoscalingPolicyIamMemberOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *AutoscalingPolicyIamMember) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The role that should be applied. Only one
// `dataproc.AutoscalingPolicyIamBinding` can be used per role. Note that custom roles must be of the format
// `[projects|organizations]/{parent-name}/roles/{role-name}`.
func (o AutoscalingPolicyIamMemberOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *AutoscalingPolicyIamMember) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

type AutoscalingPolicyIamMemberArrayOutput struct{ *pulumi.OutputState }

func (AutoscalingPolicyIamMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AutoscalingPolicyIamMember)(nil)).Elem()
}

func (o AutoscalingPolicyIamMemberArrayOutput) ToAutoscalingPolicyIamMemberArrayOutput() AutoscalingPolicyIamMemberArrayOutput {
	return o
}

func (o AutoscalingPolicyIamMemberArrayOutput) ToAutoscalingPolicyIamMemberArrayOutputWithContext(ctx context.Context) AutoscalingPolicyIamMemberArrayOutput {
	return o
}

func (o AutoscalingPolicyIamMemberArrayOutput) Index(i pulumi.IntInput) AutoscalingPolicyIamMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AutoscalingPolicyIamMember {
		return vs[0].([]*AutoscalingPolicyIamMember)[vs[1].(int)]
	}).(AutoscalingPolicyIamMemberOutput)
}

type AutoscalingPolicyIamMemberMapOutput struct{ *pulumi.OutputState }

func (AutoscalingPolicyIamMemberMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AutoscalingPolicyIamMember)(nil)).Elem()
}

func (o AutoscalingPolicyIamMemberMapOutput) ToAutoscalingPolicyIamMemberMapOutput() AutoscalingPolicyIamMemberMapOutput {
	return o
}

func (o AutoscalingPolicyIamMemberMapOutput) ToAutoscalingPolicyIamMemberMapOutputWithContext(ctx context.Context) AutoscalingPolicyIamMemberMapOutput {
	return o
}

func (o AutoscalingPolicyIamMemberMapOutput) MapIndex(k pulumi.StringInput) AutoscalingPolicyIamMemberOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AutoscalingPolicyIamMember {
		return vs[0].(map[string]*AutoscalingPolicyIamMember)[vs[1].(string)]
	}).(AutoscalingPolicyIamMemberOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AutoscalingPolicyIamMemberInput)(nil)).Elem(), &AutoscalingPolicyIamMember{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutoscalingPolicyIamMemberArrayInput)(nil)).Elem(), AutoscalingPolicyIamMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutoscalingPolicyIamMemberMapInput)(nil)).Elem(), AutoscalingPolicyIamMemberMap{})
	pulumi.RegisterOutputType(AutoscalingPolicyIamMemberOutput{})
	pulumi.RegisterOutputType(AutoscalingPolicyIamMemberArrayOutput{})
	pulumi.RegisterOutputType(AutoscalingPolicyIamMemberMapOutput{})
}
