// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dataproc

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Retrieves the current IAM policy data for a Dataproc cluster.
//
// ## example
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/dataproc"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := dataproc.GetClusterIamPolicy(ctx, &dataproc.GetClusterIamPolicyArgs{
//				Cluster: google_dataproc_cluster.Cluster.Name,
//				Region:  pulumi.StringRef("us-central1"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetClusterIamPolicy(ctx *pulumi.Context, args *GetClusterIamPolicyArgs, opts ...pulumi.InvokeOption) (*GetClusterIamPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetClusterIamPolicyResult
	err := ctx.Invoke("gcp:dataproc/getClusterIamPolicy:getClusterIamPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getClusterIamPolicy.
type GetClusterIamPolicyArgs struct {
	// The name or relative resource id of the cluster to manage IAM policies for.
	Cluster string  `pulumi:"cluster"`
	Project *string `pulumi:"project"`
	Region  *string `pulumi:"region"`
}

// A collection of values returned by getClusterIamPolicy.
type GetClusterIamPolicyResult struct {
	Cluster string `pulumi:"cluster"`
	// (Computed) The etag of the IAM policy.
	Etag string `pulumi:"etag"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// (Computed) The policy data
	PolicyData string `pulumi:"policyData"`
	Project    string `pulumi:"project"`
	Region     string `pulumi:"region"`
}

func GetClusterIamPolicyOutput(ctx *pulumi.Context, args GetClusterIamPolicyOutputArgs, opts ...pulumi.InvokeOption) GetClusterIamPolicyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetClusterIamPolicyResult, error) {
			args := v.(GetClusterIamPolicyArgs)
			r, err := GetClusterIamPolicy(ctx, &args, opts...)
			var s GetClusterIamPolicyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetClusterIamPolicyResultOutput)
}

// A collection of arguments for invoking getClusterIamPolicy.
type GetClusterIamPolicyOutputArgs struct {
	// The name or relative resource id of the cluster to manage IAM policies for.
	Cluster pulumi.StringInput    `pulumi:"cluster"`
	Project pulumi.StringPtrInput `pulumi:"project"`
	Region  pulumi.StringPtrInput `pulumi:"region"`
}

func (GetClusterIamPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterIamPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getClusterIamPolicy.
type GetClusterIamPolicyResultOutput struct{ *pulumi.OutputState }

func (GetClusterIamPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterIamPolicyResult)(nil)).Elem()
}

func (o GetClusterIamPolicyResultOutput) ToGetClusterIamPolicyResultOutput() GetClusterIamPolicyResultOutput {
	return o
}

func (o GetClusterIamPolicyResultOutput) ToGetClusterIamPolicyResultOutputWithContext(ctx context.Context) GetClusterIamPolicyResultOutput {
	return o
}

func (o GetClusterIamPolicyResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetClusterIamPolicyResult] {
	return pulumix.Output[GetClusterIamPolicyResult]{
		OutputState: o.OutputState,
	}
}

func (o GetClusterIamPolicyResultOutput) Cluster() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterIamPolicyResult) string { return v.Cluster }).(pulumi.StringOutput)
}

// (Computed) The etag of the IAM policy.
func (o GetClusterIamPolicyResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterIamPolicyResult) string { return v.Etag }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetClusterIamPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterIamPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

// (Computed) The policy data
func (o GetClusterIamPolicyResultOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterIamPolicyResult) string { return v.PolicyData }).(pulumi.StringOutput)
}

func (o GetClusterIamPolicyResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterIamPolicyResult) string { return v.Project }).(pulumi.StringOutput)
}

func (o GetClusterIamPolicyResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterIamPolicyResult) string { return v.Region }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetClusterIamPolicyResultOutput{})
}
