// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dataproc

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Three different resources help you manage your IAM policy for Dataproc AutoscalingPolicy. Each of these resources serves a different use case:
//
// * `dataproc.AutoscalingPolicyIamPolicy`: Authoritative. Sets the IAM policy for the autoscalingpolicy and replaces any existing policy already attached.
// * `dataproc.AutoscalingPolicyIamBinding`: Authoritative for a given role. Updates the IAM policy to grant a role to a list of members. Other roles within the IAM policy for the autoscalingpolicy are preserved.
// * `dataproc.AutoscalingPolicyIamMember`: Non-authoritative. Updates the IAM policy to grant a role to a new member. Other members for the role for the autoscalingpolicy are preserved.
//
// > **Note:** `dataproc.AutoscalingPolicyIamPolicy` **cannot** be used in conjunction with `dataproc.AutoscalingPolicyIamBinding` and `dataproc.AutoscalingPolicyIamMember` or they will fight over what your policy should be.
//
// > **Note:** `dataproc.AutoscalingPolicyIamBinding` resources **can be** used in conjunction with `dataproc.AutoscalingPolicyIamMember` resources **only if** they do not grant privilege to the same role.
//
// ## google\_dataproc\_autoscaling\_policy\_iam\_policy
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/dataproc"
// 	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/organizations"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		admin, err := organizations.LookupIAMPolicy(ctx, &organizations.LookupIAMPolicyArgs{
// 			Bindings: []organizations.GetIAMPolicyBinding{
// 				organizations.GetIAMPolicyBinding{
// 					Role: "roles/viewer",
// 					Members: []string{
// 						"user:jane@example.com",
// 					},
// 				},
// 			},
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		_, err = dataproc.NewAutoscalingPolicyIamPolicy(ctx, "policy", &dataproc.AutoscalingPolicyIamPolicyArgs{
// 			Project:    pulumi.Any(google_dataproc_autoscaling_policy.Basic.Project),
// 			Location:   pulumi.Any(google_dataproc_autoscaling_policy.Basic.Location),
// 			PolicyId:   pulumi.Any(google_dataproc_autoscaling_policy.Basic.Policy_id),
// 			PolicyData: pulumi.String(admin.PolicyData),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## google\_dataproc\_autoscaling\_policy\_iam\_binding
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/dataproc"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := dataproc.NewAutoscalingPolicyIamBinding(ctx, "binding", &dataproc.AutoscalingPolicyIamBindingArgs{
// 			Project:  pulumi.Any(google_dataproc_autoscaling_policy.Basic.Project),
// 			Location: pulumi.Any(google_dataproc_autoscaling_policy.Basic.Location),
// 			PolicyId: pulumi.Any(google_dataproc_autoscaling_policy.Basic.Policy_id),
// 			Role:     pulumi.String("roles/viewer"),
// 			Members: pulumi.StringArray{
// 				pulumi.String("user:jane@example.com"),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## google\_dataproc\_autoscaling\_policy\_iam\_member
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/dataproc"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := dataproc.NewAutoscalingPolicyIamMember(ctx, "member", &dataproc.AutoscalingPolicyIamMemberArgs{
// 			Project:  pulumi.Any(google_dataproc_autoscaling_policy.Basic.Project),
// 			Location: pulumi.Any(google_dataproc_autoscaling_policy.Basic.Location),
// 			PolicyId: pulumi.Any(google_dataproc_autoscaling_policy.Basic.Policy_id),
// 			Role:     pulumi.String("roles/viewer"),
// 			Member:   pulumi.String("user:jane@example.com"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// For all import syntaxes, the "resource in question" can take any of the following forms* projects/{{project}}/locations/{{location}}/autoscalingPolicies/{{policy_id}} * {{project}}/{{location}}/{{policy_id}} * {{location}}/{{policy_id}} * {{policy_id}} Any variables not passed in the import command will be taken from the provider configuration. Dataproc autoscalingpolicy IAM resources can be imported using the resource identifiers, role, and member. IAM member imports use space-delimited identifiersthe resource in question, the role, and the member identity, e.g.
//
// ```sh
//  $ pulumi import gcp:dataproc/autoscalingPolicyIamPolicy:AutoscalingPolicyIamPolicy editor "projects/{{project}}/locations/{{location}}/autoscalingPolicies/{{policy_id}} roles/viewer user:jane@example.com"
// ```
//
//  IAM binding imports use space-delimited identifiersthe resource in question and the role, e.g.
//
// ```sh
//  $ pulumi import gcp:dataproc/autoscalingPolicyIamPolicy:AutoscalingPolicyIamPolicy editor "projects/{{project}}/locations/{{location}}/autoscalingPolicies/{{policy_id}} roles/viewer"
// ```
//
//  IAM policy imports use the identifier of the resource in question, e.g.
//
// ```sh
//  $ pulumi import gcp:dataproc/autoscalingPolicyIamPolicy:AutoscalingPolicyIamPolicy editor projects/{{project}}/locations/{{location}}/autoscalingPolicies/{{policy_id}}
// ```
//
//  -> **Custom Roles**If you're importing a IAM resource with a custom role, make sure to use the
//
// full name of the custom role, e.g. `[projects/my-project|organizations/my-org]/roles/my-custom-role`.
type AutoscalingPolicyIamPolicy struct {
	pulumi.CustomResourceState

	// (Computed) The etag of the IAM policy.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// The  location where the autoscaling policy should reside.
	// The default value is `global`.
	// Used to find the parent resource to bind the IAM policy to
	Location pulumi.StringOutput `pulumi:"location"`
	// The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData pulumi.StringOutput `pulumi:"policyData"`
	// The policy id. The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_),
	// and hyphens (-). Cannot begin or end with underscore or hyphen. Must consist of between
	// 3 and 50 characters.
	// Used to find the parent resource to bind the IAM policy to
	PolicyId pulumi.StringOutput `pulumi:"policyId"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
}

// NewAutoscalingPolicyIamPolicy registers a new resource with the given unique name, arguments, and options.
func NewAutoscalingPolicyIamPolicy(ctx *pulumi.Context,
	name string, args *AutoscalingPolicyIamPolicyArgs, opts ...pulumi.ResourceOption) (*AutoscalingPolicyIamPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PolicyData == nil {
		return nil, errors.New("invalid value for required argument 'PolicyData'")
	}
	if args.PolicyId == nil {
		return nil, errors.New("invalid value for required argument 'PolicyId'")
	}
	var resource AutoscalingPolicyIamPolicy
	err := ctx.RegisterResource("gcp:dataproc/autoscalingPolicyIamPolicy:AutoscalingPolicyIamPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAutoscalingPolicyIamPolicy gets an existing AutoscalingPolicyIamPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAutoscalingPolicyIamPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AutoscalingPolicyIamPolicyState, opts ...pulumi.ResourceOption) (*AutoscalingPolicyIamPolicy, error) {
	var resource AutoscalingPolicyIamPolicy
	err := ctx.ReadResource("gcp:dataproc/autoscalingPolicyIamPolicy:AutoscalingPolicyIamPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AutoscalingPolicyIamPolicy resources.
type autoscalingPolicyIamPolicyState struct {
	// (Computed) The etag of the IAM policy.
	Etag *string `pulumi:"etag"`
	// The  location where the autoscaling policy should reside.
	// The default value is `global`.
	// Used to find the parent resource to bind the IAM policy to
	Location *string `pulumi:"location"`
	// The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData *string `pulumi:"policyData"`
	// The policy id. The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_),
	// and hyphens (-). Cannot begin or end with underscore or hyphen. Must consist of between
	// 3 and 50 characters.
	// Used to find the parent resource to bind the IAM policy to
	PolicyId *string `pulumi:"policyId"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project *string `pulumi:"project"`
}

type AutoscalingPolicyIamPolicyState struct {
	// (Computed) The etag of the IAM policy.
	Etag pulumi.StringPtrInput
	// The  location where the autoscaling policy should reside.
	// The default value is `global`.
	// Used to find the parent resource to bind the IAM policy to
	Location pulumi.StringPtrInput
	// The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData pulumi.StringPtrInput
	// The policy id. The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_),
	// and hyphens (-). Cannot begin or end with underscore or hyphen. Must consist of between
	// 3 and 50 characters.
	// Used to find the parent resource to bind the IAM policy to
	PolicyId pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringPtrInput
}

func (AutoscalingPolicyIamPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*autoscalingPolicyIamPolicyState)(nil)).Elem()
}

type autoscalingPolicyIamPolicyArgs struct {
	// The  location where the autoscaling policy should reside.
	// The default value is `global`.
	// Used to find the parent resource to bind the IAM policy to
	Location *string `pulumi:"location"`
	// The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData string `pulumi:"policyData"`
	// The policy id. The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_),
	// and hyphens (-). Cannot begin or end with underscore or hyphen. Must consist of between
	// 3 and 50 characters.
	// Used to find the parent resource to bind the IAM policy to
	PolicyId string `pulumi:"policyId"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project *string `pulumi:"project"`
}

// The set of arguments for constructing a AutoscalingPolicyIamPolicy resource.
type AutoscalingPolicyIamPolicyArgs struct {
	// The  location where the autoscaling policy should reside.
	// The default value is `global`.
	// Used to find the parent resource to bind the IAM policy to
	Location pulumi.StringPtrInput
	// The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData pulumi.StringInput
	// The policy id. The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_),
	// and hyphens (-). Cannot begin or end with underscore or hyphen. Must consist of between
	// 3 and 50 characters.
	// Used to find the parent resource to bind the IAM policy to
	PolicyId pulumi.StringInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringPtrInput
}

func (AutoscalingPolicyIamPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*autoscalingPolicyIamPolicyArgs)(nil)).Elem()
}

type AutoscalingPolicyIamPolicyInput interface {
	pulumi.Input

	ToAutoscalingPolicyIamPolicyOutput() AutoscalingPolicyIamPolicyOutput
	ToAutoscalingPolicyIamPolicyOutputWithContext(ctx context.Context) AutoscalingPolicyIamPolicyOutput
}

func (*AutoscalingPolicyIamPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoscalingPolicyIamPolicy)(nil)).Elem()
}

func (i *AutoscalingPolicyIamPolicy) ToAutoscalingPolicyIamPolicyOutput() AutoscalingPolicyIamPolicyOutput {
	return i.ToAutoscalingPolicyIamPolicyOutputWithContext(context.Background())
}

func (i *AutoscalingPolicyIamPolicy) ToAutoscalingPolicyIamPolicyOutputWithContext(ctx context.Context) AutoscalingPolicyIamPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalingPolicyIamPolicyOutput)
}

// AutoscalingPolicyIamPolicyArrayInput is an input type that accepts AutoscalingPolicyIamPolicyArray and AutoscalingPolicyIamPolicyArrayOutput values.
// You can construct a concrete instance of `AutoscalingPolicyIamPolicyArrayInput` via:
//
//          AutoscalingPolicyIamPolicyArray{ AutoscalingPolicyIamPolicyArgs{...} }
type AutoscalingPolicyIamPolicyArrayInput interface {
	pulumi.Input

	ToAutoscalingPolicyIamPolicyArrayOutput() AutoscalingPolicyIamPolicyArrayOutput
	ToAutoscalingPolicyIamPolicyArrayOutputWithContext(context.Context) AutoscalingPolicyIamPolicyArrayOutput
}

type AutoscalingPolicyIamPolicyArray []AutoscalingPolicyIamPolicyInput

func (AutoscalingPolicyIamPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AutoscalingPolicyIamPolicy)(nil)).Elem()
}

func (i AutoscalingPolicyIamPolicyArray) ToAutoscalingPolicyIamPolicyArrayOutput() AutoscalingPolicyIamPolicyArrayOutput {
	return i.ToAutoscalingPolicyIamPolicyArrayOutputWithContext(context.Background())
}

func (i AutoscalingPolicyIamPolicyArray) ToAutoscalingPolicyIamPolicyArrayOutputWithContext(ctx context.Context) AutoscalingPolicyIamPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalingPolicyIamPolicyArrayOutput)
}

// AutoscalingPolicyIamPolicyMapInput is an input type that accepts AutoscalingPolicyIamPolicyMap and AutoscalingPolicyIamPolicyMapOutput values.
// You can construct a concrete instance of `AutoscalingPolicyIamPolicyMapInput` via:
//
//          AutoscalingPolicyIamPolicyMap{ "key": AutoscalingPolicyIamPolicyArgs{...} }
type AutoscalingPolicyIamPolicyMapInput interface {
	pulumi.Input

	ToAutoscalingPolicyIamPolicyMapOutput() AutoscalingPolicyIamPolicyMapOutput
	ToAutoscalingPolicyIamPolicyMapOutputWithContext(context.Context) AutoscalingPolicyIamPolicyMapOutput
}

type AutoscalingPolicyIamPolicyMap map[string]AutoscalingPolicyIamPolicyInput

func (AutoscalingPolicyIamPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AutoscalingPolicyIamPolicy)(nil)).Elem()
}

func (i AutoscalingPolicyIamPolicyMap) ToAutoscalingPolicyIamPolicyMapOutput() AutoscalingPolicyIamPolicyMapOutput {
	return i.ToAutoscalingPolicyIamPolicyMapOutputWithContext(context.Background())
}

func (i AutoscalingPolicyIamPolicyMap) ToAutoscalingPolicyIamPolicyMapOutputWithContext(ctx context.Context) AutoscalingPolicyIamPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalingPolicyIamPolicyMapOutput)
}

type AutoscalingPolicyIamPolicyOutput struct{ *pulumi.OutputState }

func (AutoscalingPolicyIamPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoscalingPolicyIamPolicy)(nil)).Elem()
}

func (o AutoscalingPolicyIamPolicyOutput) ToAutoscalingPolicyIamPolicyOutput() AutoscalingPolicyIamPolicyOutput {
	return o
}

func (o AutoscalingPolicyIamPolicyOutput) ToAutoscalingPolicyIamPolicyOutputWithContext(ctx context.Context) AutoscalingPolicyIamPolicyOutput {
	return o
}

// (Computed) The etag of the IAM policy.
func (o AutoscalingPolicyIamPolicyOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *AutoscalingPolicyIamPolicy) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// The  location where the autoscaling policy should reside.
// The default value is `global`.
// Used to find the parent resource to bind the IAM policy to
func (o AutoscalingPolicyIamPolicyOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *AutoscalingPolicyIamPolicy) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The policy data generated by
// a `organizations.getIAMPolicy` data source.
func (o AutoscalingPolicyIamPolicyOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v *AutoscalingPolicyIamPolicy) pulumi.StringOutput { return v.PolicyData }).(pulumi.StringOutput)
}

// The policy id. The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_),
// and hyphens (-). Cannot begin or end with underscore or hyphen. Must consist of between
// 3 and 50 characters.
// Used to find the parent resource to bind the IAM policy to
func (o AutoscalingPolicyIamPolicyOutput) PolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *AutoscalingPolicyIamPolicy) pulumi.StringOutput { return v.PolicyId }).(pulumi.StringOutput)
}

// The ID of the project in which the resource belongs.
// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
func (o AutoscalingPolicyIamPolicyOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *AutoscalingPolicyIamPolicy) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

type AutoscalingPolicyIamPolicyArrayOutput struct{ *pulumi.OutputState }

func (AutoscalingPolicyIamPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AutoscalingPolicyIamPolicy)(nil)).Elem()
}

func (o AutoscalingPolicyIamPolicyArrayOutput) ToAutoscalingPolicyIamPolicyArrayOutput() AutoscalingPolicyIamPolicyArrayOutput {
	return o
}

func (o AutoscalingPolicyIamPolicyArrayOutput) ToAutoscalingPolicyIamPolicyArrayOutputWithContext(ctx context.Context) AutoscalingPolicyIamPolicyArrayOutput {
	return o
}

func (o AutoscalingPolicyIamPolicyArrayOutput) Index(i pulumi.IntInput) AutoscalingPolicyIamPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AutoscalingPolicyIamPolicy {
		return vs[0].([]*AutoscalingPolicyIamPolicy)[vs[1].(int)]
	}).(AutoscalingPolicyIamPolicyOutput)
}

type AutoscalingPolicyIamPolicyMapOutput struct{ *pulumi.OutputState }

func (AutoscalingPolicyIamPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AutoscalingPolicyIamPolicy)(nil)).Elem()
}

func (o AutoscalingPolicyIamPolicyMapOutput) ToAutoscalingPolicyIamPolicyMapOutput() AutoscalingPolicyIamPolicyMapOutput {
	return o
}

func (o AutoscalingPolicyIamPolicyMapOutput) ToAutoscalingPolicyIamPolicyMapOutputWithContext(ctx context.Context) AutoscalingPolicyIamPolicyMapOutput {
	return o
}

func (o AutoscalingPolicyIamPolicyMapOutput) MapIndex(k pulumi.StringInput) AutoscalingPolicyIamPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AutoscalingPolicyIamPolicy {
		return vs[0].(map[string]*AutoscalingPolicyIamPolicy)[vs[1].(string)]
	}).(AutoscalingPolicyIamPolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AutoscalingPolicyIamPolicyInput)(nil)).Elem(), &AutoscalingPolicyIamPolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutoscalingPolicyIamPolicyArrayInput)(nil)).Elem(), AutoscalingPolicyIamPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutoscalingPolicyIamPolicyMapInput)(nil)).Elem(), AutoscalingPolicyIamPolicyMap{})
	pulumi.RegisterOutputType(AutoscalingPolicyIamPolicyOutput{})
	pulumi.RegisterOutputType(AutoscalingPolicyIamPolicyArrayOutput{})
	pulumi.RegisterOutputType(AutoscalingPolicyIamPolicyMapOutput{})
}
