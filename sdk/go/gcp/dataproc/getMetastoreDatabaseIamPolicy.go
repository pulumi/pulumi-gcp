// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dataproc

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves the current IAM policy data for database
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/dataproc"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := dataproc.LookupMetastoreDatabaseIamPolicy(ctx, &dataproc.LookupMetastoreDatabaseIamPolicyArgs{
//				Project:   pulumi.StringRef(dpmsService.Project),
//				Location:  pulumi.StringRef(dpmsService.Location),
//				ServiceId: dpmsService.ServiceId,
//				Database:  hive.HiveConfig[0].Properties.Database,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupMetastoreDatabaseIamPolicy(ctx *pulumi.Context, args *LookupMetastoreDatabaseIamPolicyArgs, opts ...pulumi.InvokeOption) (*LookupMetastoreDatabaseIamPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupMetastoreDatabaseIamPolicyResult
	err := ctx.Invoke("gcp:dataproc/getMetastoreDatabaseIamPolicy:getMetastoreDatabaseIamPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMetastoreDatabaseIamPolicy.
type LookupMetastoreDatabaseIamPolicyArgs struct {
	// Used to find the parent resource to bind the IAM policy to
	Database string `pulumi:"database"`
	// Used to find the parent resource to bind the IAM policy to. If not specified,
	// the value will be parsed from the identifier of the parent resource. If no location is provided in the parent identifier and no
	// location is specified, it is taken from the provider configuration.
	Location *string `pulumi:"location"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project *string `pulumi:"project"`
	// Used to find the parent resource to bind the IAM policy to
	ServiceId string `pulumi:"serviceId"`
}

// A collection of values returned by getMetastoreDatabaseIamPolicy.
type LookupMetastoreDatabaseIamPolicyResult struct {
	Database string `pulumi:"database"`
	// (Computed) The etag of the IAM policy.
	Etag string `pulumi:"etag"`
	// The provider-assigned unique ID for this managed resource.
	Id       string `pulumi:"id"`
	Location string `pulumi:"location"`
	// (Required only by `dataproc.MetastoreDatabaseIamPolicy`) The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData string `pulumi:"policyData"`
	Project    string `pulumi:"project"`
	ServiceId  string `pulumi:"serviceId"`
}

func LookupMetastoreDatabaseIamPolicyOutput(ctx *pulumi.Context, args LookupMetastoreDatabaseIamPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupMetastoreDatabaseIamPolicyResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupMetastoreDatabaseIamPolicyResultOutput, error) {
			args := v.(LookupMetastoreDatabaseIamPolicyArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("gcp:dataproc/getMetastoreDatabaseIamPolicy:getMetastoreDatabaseIamPolicy", args, LookupMetastoreDatabaseIamPolicyResultOutput{}, options).(LookupMetastoreDatabaseIamPolicyResultOutput), nil
		}).(LookupMetastoreDatabaseIamPolicyResultOutput)
}

// A collection of arguments for invoking getMetastoreDatabaseIamPolicy.
type LookupMetastoreDatabaseIamPolicyOutputArgs struct {
	// Used to find the parent resource to bind the IAM policy to
	Database pulumi.StringInput `pulumi:"database"`
	// Used to find the parent resource to bind the IAM policy to. If not specified,
	// the value will be parsed from the identifier of the parent resource. If no location is provided in the parent identifier and no
	// location is specified, it is taken from the provider configuration.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringPtrInput `pulumi:"project"`
	// Used to find the parent resource to bind the IAM policy to
	ServiceId pulumi.StringInput `pulumi:"serviceId"`
}

func (LookupMetastoreDatabaseIamPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMetastoreDatabaseIamPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getMetastoreDatabaseIamPolicy.
type LookupMetastoreDatabaseIamPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupMetastoreDatabaseIamPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMetastoreDatabaseIamPolicyResult)(nil)).Elem()
}

func (o LookupMetastoreDatabaseIamPolicyResultOutput) ToLookupMetastoreDatabaseIamPolicyResultOutput() LookupMetastoreDatabaseIamPolicyResultOutput {
	return o
}

func (o LookupMetastoreDatabaseIamPolicyResultOutput) ToLookupMetastoreDatabaseIamPolicyResultOutputWithContext(ctx context.Context) LookupMetastoreDatabaseIamPolicyResultOutput {
	return o
}

func (o LookupMetastoreDatabaseIamPolicyResultOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMetastoreDatabaseIamPolicyResult) string { return v.Database }).(pulumi.StringOutput)
}

// (Computed) The etag of the IAM policy.
func (o LookupMetastoreDatabaseIamPolicyResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMetastoreDatabaseIamPolicyResult) string { return v.Etag }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupMetastoreDatabaseIamPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMetastoreDatabaseIamPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupMetastoreDatabaseIamPolicyResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMetastoreDatabaseIamPolicyResult) string { return v.Location }).(pulumi.StringOutput)
}

// (Required only by `dataproc.MetastoreDatabaseIamPolicy`) The policy data generated by
// a `organizations.getIAMPolicy` data source.
func (o LookupMetastoreDatabaseIamPolicyResultOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMetastoreDatabaseIamPolicyResult) string { return v.PolicyData }).(pulumi.StringOutput)
}

func (o LookupMetastoreDatabaseIamPolicyResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMetastoreDatabaseIamPolicyResult) string { return v.Project }).(pulumi.StringOutput)
}

func (o LookupMetastoreDatabaseIamPolicyResultOutput) ServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMetastoreDatabaseIamPolicyResult) string { return v.ServiceId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupMetastoreDatabaseIamPolicyResultOutput{})
}
