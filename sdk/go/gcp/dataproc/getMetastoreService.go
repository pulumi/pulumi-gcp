// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dataproc

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get a Dataproc Metastore service from Google Cloud by its id and location.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/dataproc"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := dataproc.LookupMetastoreService(ctx, &dataproc.LookupMetastoreServiceArgs{
//				ServiceId: "foo-bar",
//				Location:  "global",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupMetastoreService(ctx *pulumi.Context, args *LookupMetastoreServiceArgs, opts ...pulumi.InvokeOption) (*LookupMetastoreServiceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupMetastoreServiceResult
	err := ctx.Invoke("gcp:dataproc/getMetastoreService:getMetastoreService", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMetastoreService.
type LookupMetastoreServiceArgs struct {
	// The location where the metastore service resides.
	//
	// ***
	Location string `pulumi:"location"`
	// The project in which the resource belongs. If it
	// is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// The ID of the metastore service.
	ServiceId string `pulumi:"serviceId"`
}

// A collection of values returned by getMetastoreService.
type LookupMetastoreServiceResult struct {
	ArtifactGcsUri       string                                   `pulumi:"artifactGcsUri"`
	DatabaseType         string                                   `pulumi:"databaseType"`
	EffectiveLabels      map[string]string                        `pulumi:"effectiveLabels"`
	EncryptionConfigs    []GetMetastoreServiceEncryptionConfig    `pulumi:"encryptionConfigs"`
	EndpointUri          string                                   `pulumi:"endpointUri"`
	HiveMetastoreConfigs []GetMetastoreServiceHiveMetastoreConfig `pulumi:"hiveMetastoreConfigs"`
	// The provider-assigned unique ID for this managed resource.
	Id                   string                                   `pulumi:"id"`
	Labels               map[string]string                        `pulumi:"labels"`
	Location             string                                   `pulumi:"location"`
	MaintenanceWindows   []GetMetastoreServiceMaintenanceWindow   `pulumi:"maintenanceWindows"`
	MetadataIntegrations []GetMetastoreServiceMetadataIntegration `pulumi:"metadataIntegrations"`
	Name                 string                                   `pulumi:"name"`
	Network              string                                   `pulumi:"network"`
	NetworkConfigs       []GetMetastoreServiceNetworkConfig       `pulumi:"networkConfigs"`
	Port                 int                                      `pulumi:"port"`
	Project              *string                                  `pulumi:"project"`
	PulumiLabels         map[string]string                        `pulumi:"pulumiLabels"`
	ReleaseChannel       string                                   `pulumi:"releaseChannel"`
	ScalingConfigs       []GetMetastoreServiceScalingConfig       `pulumi:"scalingConfigs"`
	ServiceId            string                                   `pulumi:"serviceId"`
	State                string                                   `pulumi:"state"`
	StateMessage         string                                   `pulumi:"stateMessage"`
	TelemetryConfigs     []GetMetastoreServiceTelemetryConfig     `pulumi:"telemetryConfigs"`
	Tier                 string                                   `pulumi:"tier"`
	Uid                  string                                   `pulumi:"uid"`
}

func LookupMetastoreServiceOutput(ctx *pulumi.Context, args LookupMetastoreServiceOutputArgs, opts ...pulumi.InvokeOption) LookupMetastoreServiceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupMetastoreServiceResult, error) {
			args := v.(LookupMetastoreServiceArgs)
			r, err := LookupMetastoreService(ctx, &args, opts...)
			var s LookupMetastoreServiceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupMetastoreServiceResultOutput)
}

// A collection of arguments for invoking getMetastoreService.
type LookupMetastoreServiceOutputArgs struct {
	// The location where the metastore service resides.
	//
	// ***
	Location pulumi.StringInput `pulumi:"location"`
	// The project in which the resource belongs. If it
	// is not provided, the provider project is used.
	Project pulumi.StringPtrInput `pulumi:"project"`
	// The ID of the metastore service.
	ServiceId pulumi.StringInput `pulumi:"serviceId"`
}

func (LookupMetastoreServiceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMetastoreServiceArgs)(nil)).Elem()
}

// A collection of values returned by getMetastoreService.
type LookupMetastoreServiceResultOutput struct{ *pulumi.OutputState }

func (LookupMetastoreServiceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMetastoreServiceResult)(nil)).Elem()
}

func (o LookupMetastoreServiceResultOutput) ToLookupMetastoreServiceResultOutput() LookupMetastoreServiceResultOutput {
	return o
}

func (o LookupMetastoreServiceResultOutput) ToLookupMetastoreServiceResultOutputWithContext(ctx context.Context) LookupMetastoreServiceResultOutput {
	return o
}

func (o LookupMetastoreServiceResultOutput) ArtifactGcsUri() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMetastoreServiceResult) string { return v.ArtifactGcsUri }).(pulumi.StringOutput)
}

func (o LookupMetastoreServiceResultOutput) DatabaseType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMetastoreServiceResult) string { return v.DatabaseType }).(pulumi.StringOutput)
}

func (o LookupMetastoreServiceResultOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupMetastoreServiceResult) map[string]string { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

func (o LookupMetastoreServiceResultOutput) EncryptionConfigs() GetMetastoreServiceEncryptionConfigArrayOutput {
	return o.ApplyT(func(v LookupMetastoreServiceResult) []GetMetastoreServiceEncryptionConfig { return v.EncryptionConfigs }).(GetMetastoreServiceEncryptionConfigArrayOutput)
}

func (o LookupMetastoreServiceResultOutput) EndpointUri() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMetastoreServiceResult) string { return v.EndpointUri }).(pulumi.StringOutput)
}

func (o LookupMetastoreServiceResultOutput) HiveMetastoreConfigs() GetMetastoreServiceHiveMetastoreConfigArrayOutput {
	return o.ApplyT(func(v LookupMetastoreServiceResult) []GetMetastoreServiceHiveMetastoreConfig {
		return v.HiveMetastoreConfigs
	}).(GetMetastoreServiceHiveMetastoreConfigArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupMetastoreServiceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMetastoreServiceResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupMetastoreServiceResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupMetastoreServiceResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

func (o LookupMetastoreServiceResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMetastoreServiceResult) string { return v.Location }).(pulumi.StringOutput)
}

func (o LookupMetastoreServiceResultOutput) MaintenanceWindows() GetMetastoreServiceMaintenanceWindowArrayOutput {
	return o.ApplyT(func(v LookupMetastoreServiceResult) []GetMetastoreServiceMaintenanceWindow {
		return v.MaintenanceWindows
	}).(GetMetastoreServiceMaintenanceWindowArrayOutput)
}

func (o LookupMetastoreServiceResultOutput) MetadataIntegrations() GetMetastoreServiceMetadataIntegrationArrayOutput {
	return o.ApplyT(func(v LookupMetastoreServiceResult) []GetMetastoreServiceMetadataIntegration {
		return v.MetadataIntegrations
	}).(GetMetastoreServiceMetadataIntegrationArrayOutput)
}

func (o LookupMetastoreServiceResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMetastoreServiceResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupMetastoreServiceResultOutput) Network() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMetastoreServiceResult) string { return v.Network }).(pulumi.StringOutput)
}

func (o LookupMetastoreServiceResultOutput) NetworkConfigs() GetMetastoreServiceNetworkConfigArrayOutput {
	return o.ApplyT(func(v LookupMetastoreServiceResult) []GetMetastoreServiceNetworkConfig { return v.NetworkConfigs }).(GetMetastoreServiceNetworkConfigArrayOutput)
}

func (o LookupMetastoreServiceResultOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v LookupMetastoreServiceResult) int { return v.Port }).(pulumi.IntOutput)
}

func (o LookupMetastoreServiceResultOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMetastoreServiceResult) *string { return v.Project }).(pulumi.StringPtrOutput)
}

func (o LookupMetastoreServiceResultOutput) PulumiLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupMetastoreServiceResult) map[string]string { return v.PulumiLabels }).(pulumi.StringMapOutput)
}

func (o LookupMetastoreServiceResultOutput) ReleaseChannel() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMetastoreServiceResult) string { return v.ReleaseChannel }).(pulumi.StringOutput)
}

func (o LookupMetastoreServiceResultOutput) ScalingConfigs() GetMetastoreServiceScalingConfigArrayOutput {
	return o.ApplyT(func(v LookupMetastoreServiceResult) []GetMetastoreServiceScalingConfig { return v.ScalingConfigs }).(GetMetastoreServiceScalingConfigArrayOutput)
}

func (o LookupMetastoreServiceResultOutput) ServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMetastoreServiceResult) string { return v.ServiceId }).(pulumi.StringOutput)
}

func (o LookupMetastoreServiceResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMetastoreServiceResult) string { return v.State }).(pulumi.StringOutput)
}

func (o LookupMetastoreServiceResultOutput) StateMessage() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMetastoreServiceResult) string { return v.StateMessage }).(pulumi.StringOutput)
}

func (o LookupMetastoreServiceResultOutput) TelemetryConfigs() GetMetastoreServiceTelemetryConfigArrayOutput {
	return o.ApplyT(func(v LookupMetastoreServiceResult) []GetMetastoreServiceTelemetryConfig { return v.TelemetryConfigs }).(GetMetastoreServiceTelemetryConfigArrayOutput)
}

func (o LookupMetastoreServiceResultOutput) Tier() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMetastoreServiceResult) string { return v.Tier }).(pulumi.StringOutput)
}

func (o LookupMetastoreServiceResultOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMetastoreServiceResult) string { return v.Uid }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupMetastoreServiceResultOutput{})
}
