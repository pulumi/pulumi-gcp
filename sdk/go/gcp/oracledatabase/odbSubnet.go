// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package oracledatabase

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// An OdbSubnet resource which represents a subnet under an OdbNetwork.
//
// To get more information about OdbSubnet, see:
// * How-to Guides
//   - [OracleDatabase@Google Cloud](https://cloud.google.com/oracle/database/docs/overview')
//
// ## Example Usage
//
// ### Oracledatabase Odbsubnet
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/oracledatabase"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := oracledatabase.NewOdbSubnet(ctx, "my-odbsubnet", &oracledatabase.OdbSubnetArgs{
//				OdbSubnetId: pulumi.String("my-odbsubnet"),
//				Location:    pulumi.String("europe-west2"),
//				Project:     pulumi.String("my-project"),
//				Odbnetwork:  pulumi.String("my-odbnetwork"),
//				CidrRange:   pulumi.String("10.1.1.0/24"),
//				Purpose:     pulumi.String("CLIENT_SUBNET"),
//				Labels: pulumi.StringMap{
//					"terraform_created": pulumi.String("true"),
//				},
//				DeletionProtection: pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// OdbSubnet can be imported using any of these accepted formats:
//
// * `projects/{{project}}/locations/{{location}}/odbNetworks/{{odbnetwork}}/odbSubnets/{{odb_subnet_id}}`
//
// * `{{project}}/{{location}}/{{odbnetwork}}/{{odb_subnet_id}}`
//
// * `{{location}}/{{odbnetwork}}/{{odb_subnet_id}}`
//
// When using the `pulumi import` command, OdbSubnet can be imported using one of the formats above. For example:
//
// ```sh
// $ pulumi import gcp:oracledatabase/odbSubnet:OdbSubnet default projects/{{project}}/locations/{{location}}/odbNetworks/{{odbnetwork}}/odbSubnets/{{odb_subnet_id}}
// ```
//
// ```sh
// $ pulumi import gcp:oracledatabase/odbSubnet:OdbSubnet default {{project}}/{{location}}/{{odbnetwork}}/{{odb_subnet_id}}
// ```
//
// ```sh
// $ pulumi import gcp:oracledatabase/odbSubnet:OdbSubnet default {{location}}/{{odbnetwork}}/{{odb_subnet_id}}
// ```
type OdbSubnet struct {
	pulumi.CustomResourceState

	// The CIDR range of the subnet.
	CidrRange pulumi.StringOutput `pulumi:"cidrRange"`
	// The date and time that the OdbNetwork was created.
	CreateTime         pulumi.StringOutput  `pulumi:"createTime"`
	DeletionProtection pulumi.BoolPtrOutput `pulumi:"deletionProtection"`
	// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
	EffectiveLabels pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	// Labels or tags associated with the resource.
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
	Location pulumi.StringOutput `pulumi:"location"`
	// Identifier. The name of the OdbSubnet resource in the following format:
	// projects/{project}/locations/{location}/odbNetworks/{odb_network}/odbSubnets/{odb_subnet}
	Name pulumi.StringOutput `pulumi:"name"`
	// The ID of the OdbSubnet to create. This value is restricted
	// to (^a-z?$) and must be a maximum of 63
	// characters in length. The value must start with a letter and end with
	// a letter or a number.
	OdbSubnetId pulumi.StringOutput `pulumi:"odbSubnetId"`
	// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
	Odbnetwork pulumi.StringOutput `pulumi:"odbnetwork"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
	// The combination of labels configured directly on the resource
	// and default labels configured on the provider.
	PulumiLabels pulumi.StringMapOutput `pulumi:"pulumiLabels"`
	// Purpose of the subnet.
	// Possible values:
	// CLIENT_SUBNET
	// BACKUP_SUBNET
	Purpose pulumi.StringOutput `pulumi:"purpose"`
	// State of the ODB Subnet.
	// Possible values:
	// PROVISIONING
	// AVAILABLE
	// TERMINATING
	// FAILED
	State pulumi.StringOutput `pulumi:"state"`
}

// NewOdbSubnet registers a new resource with the given unique name, arguments, and options.
func NewOdbSubnet(ctx *pulumi.Context,
	name string, args *OdbSubnetArgs, opts ...pulumi.ResourceOption) (*OdbSubnet, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CidrRange == nil {
		return nil, errors.New("invalid value for required argument 'CidrRange'")
	}
	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	if args.OdbSubnetId == nil {
		return nil, errors.New("invalid value for required argument 'OdbSubnetId'")
	}
	if args.Odbnetwork == nil {
		return nil, errors.New("invalid value for required argument 'Odbnetwork'")
	}
	if args.Purpose == nil {
		return nil, errors.New("invalid value for required argument 'Purpose'")
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"effectiveLabels",
		"pulumiLabels",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource OdbSubnet
	err := ctx.RegisterResource("gcp:oracledatabase/odbSubnet:OdbSubnet", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOdbSubnet gets an existing OdbSubnet resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOdbSubnet(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OdbSubnetState, opts ...pulumi.ResourceOption) (*OdbSubnet, error) {
	var resource OdbSubnet
	err := ctx.ReadResource("gcp:oracledatabase/odbSubnet:OdbSubnet", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OdbSubnet resources.
type odbSubnetState struct {
	// The CIDR range of the subnet.
	CidrRange *string `pulumi:"cidrRange"`
	// The date and time that the OdbNetwork was created.
	CreateTime         *string `pulumi:"createTime"`
	DeletionProtection *bool   `pulumi:"deletionProtection"`
	// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
	EffectiveLabels map[string]string `pulumi:"effectiveLabels"`
	// Labels or tags associated with the resource.
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
	Location *string `pulumi:"location"`
	// Identifier. The name of the OdbSubnet resource in the following format:
	// projects/{project}/locations/{location}/odbNetworks/{odb_network}/odbSubnets/{odb_subnet}
	Name *string `pulumi:"name"`
	// The ID of the OdbSubnet to create. This value is restricted
	// to (^a-z?$) and must be a maximum of 63
	// characters in length. The value must start with a letter and end with
	// a letter or a number.
	OdbSubnetId *string `pulumi:"odbSubnetId"`
	// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
	Odbnetwork *string `pulumi:"odbnetwork"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// The combination of labels configured directly on the resource
	// and default labels configured on the provider.
	PulumiLabels map[string]string `pulumi:"pulumiLabels"`
	// Purpose of the subnet.
	// Possible values:
	// CLIENT_SUBNET
	// BACKUP_SUBNET
	Purpose *string `pulumi:"purpose"`
	// State of the ODB Subnet.
	// Possible values:
	// PROVISIONING
	// AVAILABLE
	// TERMINATING
	// FAILED
	State *string `pulumi:"state"`
}

type OdbSubnetState struct {
	// The CIDR range of the subnet.
	CidrRange pulumi.StringPtrInput
	// The date and time that the OdbNetwork was created.
	CreateTime         pulumi.StringPtrInput
	DeletionProtection pulumi.BoolPtrInput
	// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
	EffectiveLabels pulumi.StringMapInput
	// Labels or tags associated with the resource.
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
	Location pulumi.StringPtrInput
	// Identifier. The name of the OdbSubnet resource in the following format:
	// projects/{project}/locations/{location}/odbNetworks/{odb_network}/odbSubnets/{odb_subnet}
	Name pulumi.StringPtrInput
	// The ID of the OdbSubnet to create. This value is restricted
	// to (^a-z?$) and must be a maximum of 63
	// characters in length. The value must start with a letter and end with
	// a letter or a number.
	OdbSubnetId pulumi.StringPtrInput
	// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
	Odbnetwork pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// The combination of labels configured directly on the resource
	// and default labels configured on the provider.
	PulumiLabels pulumi.StringMapInput
	// Purpose of the subnet.
	// Possible values:
	// CLIENT_SUBNET
	// BACKUP_SUBNET
	Purpose pulumi.StringPtrInput
	// State of the ODB Subnet.
	// Possible values:
	// PROVISIONING
	// AVAILABLE
	// TERMINATING
	// FAILED
	State pulumi.StringPtrInput
}

func (OdbSubnetState) ElementType() reflect.Type {
	return reflect.TypeOf((*odbSubnetState)(nil)).Elem()
}

type odbSubnetArgs struct {
	// The CIDR range of the subnet.
	CidrRange          string `pulumi:"cidrRange"`
	DeletionProtection *bool  `pulumi:"deletionProtection"`
	// Labels or tags associated with the resource.
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
	Location string `pulumi:"location"`
	// The ID of the OdbSubnet to create. This value is restricted
	// to (^a-z?$) and must be a maximum of 63
	// characters in length. The value must start with a letter and end with
	// a letter or a number.
	OdbSubnetId string `pulumi:"odbSubnetId"`
	// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
	Odbnetwork string `pulumi:"odbnetwork"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// Purpose of the subnet.
	// Possible values:
	// CLIENT_SUBNET
	// BACKUP_SUBNET
	Purpose string `pulumi:"purpose"`
}

// The set of arguments for constructing a OdbSubnet resource.
type OdbSubnetArgs struct {
	// The CIDR range of the subnet.
	CidrRange          pulumi.StringInput
	DeletionProtection pulumi.BoolPtrInput
	// Labels or tags associated with the resource.
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
	Location pulumi.StringInput
	// The ID of the OdbSubnet to create. This value is restricted
	// to (^a-z?$) and must be a maximum of 63
	// characters in length. The value must start with a letter and end with
	// a letter or a number.
	OdbSubnetId pulumi.StringInput
	// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
	Odbnetwork pulumi.StringInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// Purpose of the subnet.
	// Possible values:
	// CLIENT_SUBNET
	// BACKUP_SUBNET
	Purpose pulumi.StringInput
}

func (OdbSubnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*odbSubnetArgs)(nil)).Elem()
}

type OdbSubnetInput interface {
	pulumi.Input

	ToOdbSubnetOutput() OdbSubnetOutput
	ToOdbSubnetOutputWithContext(ctx context.Context) OdbSubnetOutput
}

func (*OdbSubnet) ElementType() reflect.Type {
	return reflect.TypeOf((**OdbSubnet)(nil)).Elem()
}

func (i *OdbSubnet) ToOdbSubnetOutput() OdbSubnetOutput {
	return i.ToOdbSubnetOutputWithContext(context.Background())
}

func (i *OdbSubnet) ToOdbSubnetOutputWithContext(ctx context.Context) OdbSubnetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OdbSubnetOutput)
}

// OdbSubnetArrayInput is an input type that accepts OdbSubnetArray and OdbSubnetArrayOutput values.
// You can construct a concrete instance of `OdbSubnetArrayInput` via:
//
//	OdbSubnetArray{ OdbSubnetArgs{...} }
type OdbSubnetArrayInput interface {
	pulumi.Input

	ToOdbSubnetArrayOutput() OdbSubnetArrayOutput
	ToOdbSubnetArrayOutputWithContext(context.Context) OdbSubnetArrayOutput
}

type OdbSubnetArray []OdbSubnetInput

func (OdbSubnetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OdbSubnet)(nil)).Elem()
}

func (i OdbSubnetArray) ToOdbSubnetArrayOutput() OdbSubnetArrayOutput {
	return i.ToOdbSubnetArrayOutputWithContext(context.Background())
}

func (i OdbSubnetArray) ToOdbSubnetArrayOutputWithContext(ctx context.Context) OdbSubnetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OdbSubnetArrayOutput)
}

// OdbSubnetMapInput is an input type that accepts OdbSubnetMap and OdbSubnetMapOutput values.
// You can construct a concrete instance of `OdbSubnetMapInput` via:
//
//	OdbSubnetMap{ "key": OdbSubnetArgs{...} }
type OdbSubnetMapInput interface {
	pulumi.Input

	ToOdbSubnetMapOutput() OdbSubnetMapOutput
	ToOdbSubnetMapOutputWithContext(context.Context) OdbSubnetMapOutput
}

type OdbSubnetMap map[string]OdbSubnetInput

func (OdbSubnetMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OdbSubnet)(nil)).Elem()
}

func (i OdbSubnetMap) ToOdbSubnetMapOutput() OdbSubnetMapOutput {
	return i.ToOdbSubnetMapOutputWithContext(context.Background())
}

func (i OdbSubnetMap) ToOdbSubnetMapOutputWithContext(ctx context.Context) OdbSubnetMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OdbSubnetMapOutput)
}

type OdbSubnetOutput struct{ *pulumi.OutputState }

func (OdbSubnetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OdbSubnet)(nil)).Elem()
}

func (o OdbSubnetOutput) ToOdbSubnetOutput() OdbSubnetOutput {
	return o
}

func (o OdbSubnetOutput) ToOdbSubnetOutputWithContext(ctx context.Context) OdbSubnetOutput {
	return o
}

// The CIDR range of the subnet.
func (o OdbSubnetOutput) CidrRange() pulumi.StringOutput {
	return o.ApplyT(func(v *OdbSubnet) pulumi.StringOutput { return v.CidrRange }).(pulumi.StringOutput)
}

// The date and time that the OdbNetwork was created.
func (o OdbSubnetOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *OdbSubnet) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

func (o OdbSubnetOutput) DeletionProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OdbSubnet) pulumi.BoolPtrOutput { return v.DeletionProtection }).(pulumi.BoolPtrOutput)
}

// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
func (o OdbSubnetOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *OdbSubnet) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// Labels or tags associated with the resource.
// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
func (o OdbSubnetOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *OdbSubnet) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
func (o OdbSubnetOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *OdbSubnet) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Identifier. The name of the OdbSubnet resource in the following format:
// projects/{project}/locations/{location}/odbNetworks/{odb_network}/odbSubnets/{odb_subnet}
func (o OdbSubnetOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *OdbSubnet) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The ID of the OdbSubnet to create. This value is restricted
// to (^a-z?$) and must be a maximum of 63
// characters in length. The value must start with a letter and end with
// a letter or a number.
func (o OdbSubnetOutput) OdbSubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v *OdbSubnet) pulumi.StringOutput { return v.OdbSubnetId }).(pulumi.StringOutput)
}

// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
func (o OdbSubnetOutput) Odbnetwork() pulumi.StringOutput {
	return o.ApplyT(func(v *OdbSubnet) pulumi.StringOutput { return v.Odbnetwork }).(pulumi.StringOutput)
}

// The ID of the project in which the resource belongs.
// If it is not provided, the provider project is used.
func (o OdbSubnetOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *OdbSubnet) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The combination of labels configured directly on the resource
// and default labels configured on the provider.
func (o OdbSubnetOutput) PulumiLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *OdbSubnet) pulumi.StringMapOutput { return v.PulumiLabels }).(pulumi.StringMapOutput)
}

// Purpose of the subnet.
// Possible values:
// CLIENT_SUBNET
// BACKUP_SUBNET
func (o OdbSubnetOutput) Purpose() pulumi.StringOutput {
	return o.ApplyT(func(v *OdbSubnet) pulumi.StringOutput { return v.Purpose }).(pulumi.StringOutput)
}

// State of the ODB Subnet.
// Possible values:
// PROVISIONING
// AVAILABLE
// TERMINATING
// FAILED
func (o OdbSubnetOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *OdbSubnet) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

type OdbSubnetArrayOutput struct{ *pulumi.OutputState }

func (OdbSubnetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OdbSubnet)(nil)).Elem()
}

func (o OdbSubnetArrayOutput) ToOdbSubnetArrayOutput() OdbSubnetArrayOutput {
	return o
}

func (o OdbSubnetArrayOutput) ToOdbSubnetArrayOutputWithContext(ctx context.Context) OdbSubnetArrayOutput {
	return o
}

func (o OdbSubnetArrayOutput) Index(i pulumi.IntInput) OdbSubnetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *OdbSubnet {
		return vs[0].([]*OdbSubnet)[vs[1].(int)]
	}).(OdbSubnetOutput)
}

type OdbSubnetMapOutput struct{ *pulumi.OutputState }

func (OdbSubnetMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OdbSubnet)(nil)).Elem()
}

func (o OdbSubnetMapOutput) ToOdbSubnetMapOutput() OdbSubnetMapOutput {
	return o
}

func (o OdbSubnetMapOutput) ToOdbSubnetMapOutputWithContext(ctx context.Context) OdbSubnetMapOutput {
	return o
}

func (o OdbSubnetMapOutput) MapIndex(k pulumi.StringInput) OdbSubnetOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *OdbSubnet {
		return vs[0].(map[string]*OdbSubnet)[vs[1].(string)]
	}).(OdbSubnetOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OdbSubnetInput)(nil)).Elem(), &OdbSubnet{})
	pulumi.RegisterInputType(reflect.TypeOf((*OdbSubnetArrayInput)(nil)).Elem(), OdbSubnetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OdbSubnetMapInput)(nil)).Elem(), OdbSubnetMap{})
	pulumi.RegisterOutputType(OdbSubnetOutput{})
	pulumi.RegisterOutputType(OdbSubnetArrayOutput{})
	pulumi.RegisterOutputType(OdbSubnetMapOutput{})
}
