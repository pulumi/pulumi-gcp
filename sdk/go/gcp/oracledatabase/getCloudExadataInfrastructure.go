// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package oracledatabase

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get information about an ExadataInfrastructure.
//
// For more information see the
// [API](https://cloud.google.com/oracle/database/docs/reference/rest/v1/projects.locations.cloudExadataInfrastructures).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/oracledatabase"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := oracledatabase.LookupCloudExadataInfrastructure(ctx, &oracledatabase.LookupCloudExadataInfrastructureArgs{
//				Location:                     "us-east4",
//				CloudExadataInfrastructureId: "exadata-id",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupCloudExadataInfrastructure(ctx *pulumi.Context, args *LookupCloudExadataInfrastructureArgs, opts ...pulumi.InvokeOption) (*LookupCloudExadataInfrastructureResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupCloudExadataInfrastructureResult
	err := ctx.Invoke("gcp:oracledatabase/getCloudExadataInfrastructure:getCloudExadataInfrastructure", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCloudExadataInfrastructure.
type LookupCloudExadataInfrastructureArgs struct {
	// The ID of the ExadataInfrastructure.
	CloudExadataInfrastructureId string `pulumi:"cloudExadataInfrastructureId"`
	// The location of the resource.
	//
	// ***
	Location string `pulumi:"location"`
	// The project to which the resource belongs. If it
	// is not provided, the provider project is used.
	Project *string `pulumi:"project"`
}

// A collection of values returned by getCloudExadataInfrastructure.
type LookupCloudExadataInfrastructureResult struct {
	CloudExadataInfrastructureId string            `pulumi:"cloudExadataInfrastructureId"`
	CreateTime                   string            `pulumi:"createTime"`
	DeletionProtection           bool              `pulumi:"deletionProtection"`
	DisplayName                  string            `pulumi:"displayName"`
	EffectiveLabels              map[string]string `pulumi:"effectiveLabels"`
	EntitlementId                string            `pulumi:"entitlementId"`
	GcpOracleZone                string            `pulumi:"gcpOracleZone"`
	// The provider-assigned unique ID for this managed resource.
	Id           string                                  `pulumi:"id"`
	Labels       map[string]string                       `pulumi:"labels"`
	Location     string                                  `pulumi:"location"`
	Name         string                                  `pulumi:"name"`
	Project      *string                                 `pulumi:"project"`
	Properties   []GetCloudExadataInfrastructureProperty `pulumi:"properties"`
	PulumiLabels map[string]string                       `pulumi:"pulumiLabels"`
}

func LookupCloudExadataInfrastructureOutput(ctx *pulumi.Context, args LookupCloudExadataInfrastructureOutputArgs, opts ...pulumi.InvokeOption) LookupCloudExadataInfrastructureResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupCloudExadataInfrastructureResultOutput, error) {
			args := v.(LookupCloudExadataInfrastructureArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("gcp:oracledatabase/getCloudExadataInfrastructure:getCloudExadataInfrastructure", args, LookupCloudExadataInfrastructureResultOutput{}, options).(LookupCloudExadataInfrastructureResultOutput), nil
		}).(LookupCloudExadataInfrastructureResultOutput)
}

// A collection of arguments for invoking getCloudExadataInfrastructure.
type LookupCloudExadataInfrastructureOutputArgs struct {
	// The ID of the ExadataInfrastructure.
	CloudExadataInfrastructureId pulumi.StringInput `pulumi:"cloudExadataInfrastructureId"`
	// The location of the resource.
	//
	// ***
	Location pulumi.StringInput `pulumi:"location"`
	// The project to which the resource belongs. If it
	// is not provided, the provider project is used.
	Project pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupCloudExadataInfrastructureOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCloudExadataInfrastructureArgs)(nil)).Elem()
}

// A collection of values returned by getCloudExadataInfrastructure.
type LookupCloudExadataInfrastructureResultOutput struct{ *pulumi.OutputState }

func (LookupCloudExadataInfrastructureResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCloudExadataInfrastructureResult)(nil)).Elem()
}

func (o LookupCloudExadataInfrastructureResultOutput) ToLookupCloudExadataInfrastructureResultOutput() LookupCloudExadataInfrastructureResultOutput {
	return o
}

func (o LookupCloudExadataInfrastructureResultOutput) ToLookupCloudExadataInfrastructureResultOutputWithContext(ctx context.Context) LookupCloudExadataInfrastructureResultOutput {
	return o
}

func (o LookupCloudExadataInfrastructureResultOutput) CloudExadataInfrastructureId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudExadataInfrastructureResult) string { return v.CloudExadataInfrastructureId }).(pulumi.StringOutput)
}

func (o LookupCloudExadataInfrastructureResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudExadataInfrastructureResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

func (o LookupCloudExadataInfrastructureResultOutput) DeletionProtection() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupCloudExadataInfrastructureResult) bool { return v.DeletionProtection }).(pulumi.BoolOutput)
}

func (o LookupCloudExadataInfrastructureResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudExadataInfrastructureResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

func (o LookupCloudExadataInfrastructureResultOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupCloudExadataInfrastructureResult) map[string]string { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

func (o LookupCloudExadataInfrastructureResultOutput) EntitlementId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudExadataInfrastructureResult) string { return v.EntitlementId }).(pulumi.StringOutput)
}

func (o LookupCloudExadataInfrastructureResultOutput) GcpOracleZone() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudExadataInfrastructureResult) string { return v.GcpOracleZone }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupCloudExadataInfrastructureResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudExadataInfrastructureResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupCloudExadataInfrastructureResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupCloudExadataInfrastructureResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

func (o LookupCloudExadataInfrastructureResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudExadataInfrastructureResult) string { return v.Location }).(pulumi.StringOutput)
}

func (o LookupCloudExadataInfrastructureResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudExadataInfrastructureResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupCloudExadataInfrastructureResultOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCloudExadataInfrastructureResult) *string { return v.Project }).(pulumi.StringPtrOutput)
}

func (o LookupCloudExadataInfrastructureResultOutput) Properties() GetCloudExadataInfrastructurePropertyArrayOutput {
	return o.ApplyT(func(v LookupCloudExadataInfrastructureResult) []GetCloudExadataInfrastructureProperty {
		return v.Properties
	}).(GetCloudExadataInfrastructurePropertyArrayOutput)
}

func (o LookupCloudExadataInfrastructureResultOutput) PulumiLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupCloudExadataInfrastructureResult) map[string]string { return v.PulumiLabels }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCloudExadataInfrastructureResultOutput{})
}
