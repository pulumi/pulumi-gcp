// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package oracledatabase

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A CloudExadataInfrastructure resource.
//
// To get more information about CloudExadataInfrastructure, see:
//
// * [API documentation](https://cloud.google.com/oracle/database/docs/reference/rest/v1/projects.locations.cloudExadataInfrastructures)
// * How-to Guides
//   - [Create Exadata Infrastructure instances](https://cloud.google.com/oracle/database/docs/create-instances)
//
// ## Example Usage
//
// ### Oracledatabase Cloud Exadata Infrastructure Basic
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/oracledatabase"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := oracledatabase.NewCloudExadataInfrastructure(ctx, "my-cloud-exadata", &oracledatabase.CloudExadataInfrastructureArgs{
//				CloudExadataInfrastructureId: pulumi.String("my-instance"),
//				DisplayName:                  pulumi.String("my-instance displayname"),
//				Location:                     pulumi.String("us-east4"),
//				Project:                      pulumi.String("my-project"),
//				Properties: &oracledatabase.CloudExadataInfrastructurePropertiesArgs{
//					Shape:        pulumi.String("Exadata.X9M"),
//					ComputeCount: pulumi.Int(2),
//					StorageCount: pulumi.Int(3),
//				},
//				DeletionProtection: pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Oracledatabase Cloud Exadata Infrastructure Full
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/oracledatabase"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := oracledatabase.NewCloudExadataInfrastructure(ctx, "my-cloud-exadata", &oracledatabase.CloudExadataInfrastructureArgs{
//				CloudExadataInfrastructureId: pulumi.String("my-instance"),
//				DisplayName:                  pulumi.String("my-instance displayname"),
//				Location:                     pulumi.String("us-east4"),
//				Project:                      pulumi.String("my-project"),
//				GcpOracleZone:                pulumi.String("us-east4-b-r1"),
//				Properties: &oracledatabase.CloudExadataInfrastructurePropertiesArgs{
//					Shape:        pulumi.String("Exadata.X9M"),
//					ComputeCount: pulumi.Int(2),
//					StorageCount: pulumi.Int(3),
//					CustomerContacts: oracledatabase.CloudExadataInfrastructurePropertiesCustomerContactArray{
//						&oracledatabase.CloudExadataInfrastructurePropertiesCustomerContactArgs{
//							Email: pulumi.String("xyz@example.com"),
//						},
//					},
//					MaintenanceWindow: &oracledatabase.CloudExadataInfrastructurePropertiesMaintenanceWindowArgs{
//						CustomActionTimeoutMins: pulumi.Int(20),
//						DaysOfWeeks: pulumi.StringArray{
//							pulumi.String("SUNDAY"),
//						},
//						HoursOfDays: pulumi.IntArray{
//							pulumi.Int(4),
//						},
//						IsCustomActionTimeoutEnabled: pulumi.Bool(false),
//						LeadTimeWeek:                 pulumi.Int(1),
//						Months: pulumi.StringArray{
//							pulumi.String("JANUARY"),
//							pulumi.String("APRIL"),
//							pulumi.String("MAY"),
//							pulumi.String("OCTOBER"),
//						},
//						PatchingMode: pulumi.String("ROLLING"),
//						Preference:   pulumi.String("CUSTOM_PREFERENCE"),
//						WeeksOfMonths: pulumi.IntArray{
//							pulumi.Int(4),
//						},
//					},
//					TotalStorageSizeGb: pulumi.Int(196608),
//				},
//				Labels: pulumi.StringMap{
//					"label-one": pulumi.String("value-one"),
//				},
//				DeletionProtection: pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// CloudExadataInfrastructure can be imported using any of these accepted formats:
//
// * `projects/{{project}}/locations/{{location}}/cloudExadataInfrastructures/{{cloud_exadata_infrastructure_id}}`
//
// * `{{project}}/{{location}}/{{cloud_exadata_infrastructure_id}}`
//
// * `{{location}}/{{cloud_exadata_infrastructure_id}}`
//
// When using the `pulumi import` command, CloudExadataInfrastructure can be imported using one of the formats above. For example:
//
// ```sh
// $ pulumi import gcp:oracledatabase/cloudExadataInfrastructure:CloudExadataInfrastructure default projects/{{project}}/locations/{{location}}/cloudExadataInfrastructures/{{cloud_exadata_infrastructure_id}}
// ```
//
// ```sh
// $ pulumi import gcp:oracledatabase/cloudExadataInfrastructure:CloudExadataInfrastructure default {{project}}/{{location}}/{{cloud_exadata_infrastructure_id}}
// ```
//
// ```sh
// $ pulumi import gcp:oracledatabase/cloudExadataInfrastructure:CloudExadataInfrastructure default {{location}}/{{cloud_exadata_infrastructure_id}}
// ```
type CloudExadataInfrastructure struct {
	pulumi.CustomResourceState

	// The ID of the Exadata Infrastructure to create. This value is restricted
	// to (^a-z?$) and must be a maximum of 63
	// characters in length. The value must start with a letter and end with
	// a letter or a number.
	CloudExadataInfrastructureId pulumi.StringOutput `pulumi:"cloudExadataInfrastructureId"`
	// The date and time that the Exadata Infrastructure was created.
	CreateTime         pulumi.StringOutput  `pulumi:"createTime"`
	DeletionProtection pulumi.BoolPtrOutput `pulumi:"deletionProtection"`
	// User friendly name for this resource.
	DisplayName pulumi.StringPtrOutput `pulumi:"displayName"`
	// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
	EffectiveLabels pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	// Entitlement ID of the private offer against which this infrastructure
	// resource is provisioned.
	EntitlementId pulumi.StringOutput `pulumi:"entitlementId"`
	// GCP location where Oracle Exadata is hosted.
	GcpOracleZone pulumi.StringOutput `pulumi:"gcpOracleZone"`
	// Labels or tags associated with the resource.
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// Resource ID segment making up resource `name`. See documentation for resource type `oracledatabase.googleapis.com/DbServer`.
	Location pulumi.StringOutput `pulumi:"location"`
	// Identifier. The name of the Exadata Infrastructure resource with the following format:
	// projects/{project}/locations/{region}/cloudExadataInfrastructures/{cloud_exadata_infrastructure}
	Name pulumi.StringOutput `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
	// Various properties of Exadata Infrastructure.
	// Structure is documented below.
	Properties CloudExadataInfrastructurePropertiesPtrOutput `pulumi:"properties"`
	// The combination of labels configured directly on the resource
	// and default labels configured on the provider.
	PulumiLabels pulumi.StringMapOutput `pulumi:"pulumiLabels"`
}

// NewCloudExadataInfrastructure registers a new resource with the given unique name, arguments, and options.
func NewCloudExadataInfrastructure(ctx *pulumi.Context,
	name string, args *CloudExadataInfrastructureArgs, opts ...pulumi.ResourceOption) (*CloudExadataInfrastructure, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CloudExadataInfrastructureId == nil {
		return nil, errors.New("invalid value for required argument 'CloudExadataInfrastructureId'")
	}
	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"effectiveLabels",
		"pulumiLabels",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CloudExadataInfrastructure
	err := ctx.RegisterResource("gcp:oracledatabase/cloudExadataInfrastructure:CloudExadataInfrastructure", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCloudExadataInfrastructure gets an existing CloudExadataInfrastructure resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCloudExadataInfrastructure(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CloudExadataInfrastructureState, opts ...pulumi.ResourceOption) (*CloudExadataInfrastructure, error) {
	var resource CloudExadataInfrastructure
	err := ctx.ReadResource("gcp:oracledatabase/cloudExadataInfrastructure:CloudExadataInfrastructure", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CloudExadataInfrastructure resources.
type cloudExadataInfrastructureState struct {
	// The ID of the Exadata Infrastructure to create. This value is restricted
	// to (^a-z?$) and must be a maximum of 63
	// characters in length. The value must start with a letter and end with
	// a letter or a number.
	CloudExadataInfrastructureId *string `pulumi:"cloudExadataInfrastructureId"`
	// The date and time that the Exadata Infrastructure was created.
	CreateTime         *string `pulumi:"createTime"`
	DeletionProtection *bool   `pulumi:"deletionProtection"`
	// User friendly name for this resource.
	DisplayName *string `pulumi:"displayName"`
	// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
	EffectiveLabels map[string]string `pulumi:"effectiveLabels"`
	// Entitlement ID of the private offer against which this infrastructure
	// resource is provisioned.
	EntitlementId *string `pulumi:"entitlementId"`
	// GCP location where Oracle Exadata is hosted.
	GcpOracleZone *string `pulumi:"gcpOracleZone"`
	// Labels or tags associated with the resource.
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// Resource ID segment making up resource `name`. See documentation for resource type `oracledatabase.googleapis.com/DbServer`.
	Location *string `pulumi:"location"`
	// Identifier. The name of the Exadata Infrastructure resource with the following format:
	// projects/{project}/locations/{region}/cloudExadataInfrastructures/{cloud_exadata_infrastructure}
	Name *string `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// Various properties of Exadata Infrastructure.
	// Structure is documented below.
	Properties *CloudExadataInfrastructureProperties `pulumi:"properties"`
	// The combination of labels configured directly on the resource
	// and default labels configured on the provider.
	PulumiLabels map[string]string `pulumi:"pulumiLabels"`
}

type CloudExadataInfrastructureState struct {
	// The ID of the Exadata Infrastructure to create. This value is restricted
	// to (^a-z?$) and must be a maximum of 63
	// characters in length. The value must start with a letter and end with
	// a letter or a number.
	CloudExadataInfrastructureId pulumi.StringPtrInput
	// The date and time that the Exadata Infrastructure was created.
	CreateTime         pulumi.StringPtrInput
	DeletionProtection pulumi.BoolPtrInput
	// User friendly name for this resource.
	DisplayName pulumi.StringPtrInput
	// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
	EffectiveLabels pulumi.StringMapInput
	// Entitlement ID of the private offer against which this infrastructure
	// resource is provisioned.
	EntitlementId pulumi.StringPtrInput
	// GCP location where Oracle Exadata is hosted.
	GcpOracleZone pulumi.StringPtrInput
	// Labels or tags associated with the resource.
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// Resource ID segment making up resource `name`. See documentation for resource type `oracledatabase.googleapis.com/DbServer`.
	Location pulumi.StringPtrInput
	// Identifier. The name of the Exadata Infrastructure resource with the following format:
	// projects/{project}/locations/{region}/cloudExadataInfrastructures/{cloud_exadata_infrastructure}
	Name pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// Various properties of Exadata Infrastructure.
	// Structure is documented below.
	Properties CloudExadataInfrastructurePropertiesPtrInput
	// The combination of labels configured directly on the resource
	// and default labels configured on the provider.
	PulumiLabels pulumi.StringMapInput
}

func (CloudExadataInfrastructureState) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudExadataInfrastructureState)(nil)).Elem()
}

type cloudExadataInfrastructureArgs struct {
	// The ID of the Exadata Infrastructure to create. This value is restricted
	// to (^a-z?$) and must be a maximum of 63
	// characters in length. The value must start with a letter and end with
	// a letter or a number.
	CloudExadataInfrastructureId string `pulumi:"cloudExadataInfrastructureId"`
	DeletionProtection           *bool  `pulumi:"deletionProtection"`
	// User friendly name for this resource.
	DisplayName *string `pulumi:"displayName"`
	// GCP location where Oracle Exadata is hosted.
	GcpOracleZone *string `pulumi:"gcpOracleZone"`
	// Labels or tags associated with the resource.
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// Resource ID segment making up resource `name`. See documentation for resource type `oracledatabase.googleapis.com/DbServer`.
	Location string `pulumi:"location"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// Various properties of Exadata Infrastructure.
	// Structure is documented below.
	Properties *CloudExadataInfrastructureProperties `pulumi:"properties"`
}

// The set of arguments for constructing a CloudExadataInfrastructure resource.
type CloudExadataInfrastructureArgs struct {
	// The ID of the Exadata Infrastructure to create. This value is restricted
	// to (^a-z?$) and must be a maximum of 63
	// characters in length. The value must start with a letter and end with
	// a letter or a number.
	CloudExadataInfrastructureId pulumi.StringInput
	DeletionProtection           pulumi.BoolPtrInput
	// User friendly name for this resource.
	DisplayName pulumi.StringPtrInput
	// GCP location where Oracle Exadata is hosted.
	GcpOracleZone pulumi.StringPtrInput
	// Labels or tags associated with the resource.
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// Resource ID segment making up resource `name`. See documentation for resource type `oracledatabase.googleapis.com/DbServer`.
	Location pulumi.StringInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// Various properties of Exadata Infrastructure.
	// Structure is documented below.
	Properties CloudExadataInfrastructurePropertiesPtrInput
}

func (CloudExadataInfrastructureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudExadataInfrastructureArgs)(nil)).Elem()
}

type CloudExadataInfrastructureInput interface {
	pulumi.Input

	ToCloudExadataInfrastructureOutput() CloudExadataInfrastructureOutput
	ToCloudExadataInfrastructureOutputWithContext(ctx context.Context) CloudExadataInfrastructureOutput
}

func (*CloudExadataInfrastructure) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudExadataInfrastructure)(nil)).Elem()
}

func (i *CloudExadataInfrastructure) ToCloudExadataInfrastructureOutput() CloudExadataInfrastructureOutput {
	return i.ToCloudExadataInfrastructureOutputWithContext(context.Background())
}

func (i *CloudExadataInfrastructure) ToCloudExadataInfrastructureOutputWithContext(ctx context.Context) CloudExadataInfrastructureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudExadataInfrastructureOutput)
}

// CloudExadataInfrastructureArrayInput is an input type that accepts CloudExadataInfrastructureArray and CloudExadataInfrastructureArrayOutput values.
// You can construct a concrete instance of `CloudExadataInfrastructureArrayInput` via:
//
//	CloudExadataInfrastructureArray{ CloudExadataInfrastructureArgs{...} }
type CloudExadataInfrastructureArrayInput interface {
	pulumi.Input

	ToCloudExadataInfrastructureArrayOutput() CloudExadataInfrastructureArrayOutput
	ToCloudExadataInfrastructureArrayOutputWithContext(context.Context) CloudExadataInfrastructureArrayOutput
}

type CloudExadataInfrastructureArray []CloudExadataInfrastructureInput

func (CloudExadataInfrastructureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CloudExadataInfrastructure)(nil)).Elem()
}

func (i CloudExadataInfrastructureArray) ToCloudExadataInfrastructureArrayOutput() CloudExadataInfrastructureArrayOutput {
	return i.ToCloudExadataInfrastructureArrayOutputWithContext(context.Background())
}

func (i CloudExadataInfrastructureArray) ToCloudExadataInfrastructureArrayOutputWithContext(ctx context.Context) CloudExadataInfrastructureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudExadataInfrastructureArrayOutput)
}

// CloudExadataInfrastructureMapInput is an input type that accepts CloudExadataInfrastructureMap and CloudExadataInfrastructureMapOutput values.
// You can construct a concrete instance of `CloudExadataInfrastructureMapInput` via:
//
//	CloudExadataInfrastructureMap{ "key": CloudExadataInfrastructureArgs{...} }
type CloudExadataInfrastructureMapInput interface {
	pulumi.Input

	ToCloudExadataInfrastructureMapOutput() CloudExadataInfrastructureMapOutput
	ToCloudExadataInfrastructureMapOutputWithContext(context.Context) CloudExadataInfrastructureMapOutput
}

type CloudExadataInfrastructureMap map[string]CloudExadataInfrastructureInput

func (CloudExadataInfrastructureMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CloudExadataInfrastructure)(nil)).Elem()
}

func (i CloudExadataInfrastructureMap) ToCloudExadataInfrastructureMapOutput() CloudExadataInfrastructureMapOutput {
	return i.ToCloudExadataInfrastructureMapOutputWithContext(context.Background())
}

func (i CloudExadataInfrastructureMap) ToCloudExadataInfrastructureMapOutputWithContext(ctx context.Context) CloudExadataInfrastructureMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudExadataInfrastructureMapOutput)
}

type CloudExadataInfrastructureOutput struct{ *pulumi.OutputState }

func (CloudExadataInfrastructureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudExadataInfrastructure)(nil)).Elem()
}

func (o CloudExadataInfrastructureOutput) ToCloudExadataInfrastructureOutput() CloudExadataInfrastructureOutput {
	return o
}

func (o CloudExadataInfrastructureOutput) ToCloudExadataInfrastructureOutputWithContext(ctx context.Context) CloudExadataInfrastructureOutput {
	return o
}

// The ID of the Exadata Infrastructure to create. This value is restricted
// to (^a-z?$) and must be a maximum of 63
// characters in length. The value must start with a letter and end with
// a letter or a number.
func (o CloudExadataInfrastructureOutput) CloudExadataInfrastructureId() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructure) pulumi.StringOutput { return v.CloudExadataInfrastructureId }).(pulumi.StringOutput)
}

// The date and time that the Exadata Infrastructure was created.
func (o CloudExadataInfrastructureOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructure) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

func (o CloudExadataInfrastructureOutput) DeletionProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructure) pulumi.BoolPtrOutput { return v.DeletionProtection }).(pulumi.BoolPtrOutput)
}

// User friendly name for this resource.
func (o CloudExadataInfrastructureOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructure) pulumi.StringPtrOutput { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
func (o CloudExadataInfrastructureOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructure) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// Entitlement ID of the private offer against which this infrastructure
// resource is provisioned.
func (o CloudExadataInfrastructureOutput) EntitlementId() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructure) pulumi.StringOutput { return v.EntitlementId }).(pulumi.StringOutput)
}

// GCP location where Oracle Exadata is hosted.
func (o CloudExadataInfrastructureOutput) GcpOracleZone() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructure) pulumi.StringOutput { return v.GcpOracleZone }).(pulumi.StringOutput)
}

// Labels or tags associated with the resource.
// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
func (o CloudExadataInfrastructureOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructure) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// Resource ID segment making up resource `name`. See documentation for resource type `oracledatabase.googleapis.com/DbServer`.
func (o CloudExadataInfrastructureOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructure) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Identifier. The name of the Exadata Infrastructure resource with the following format:
// projects/{project}/locations/{region}/cloudExadataInfrastructures/{cloud_exadata_infrastructure}
func (o CloudExadataInfrastructureOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructure) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The ID of the project in which the resource belongs.
// If it is not provided, the provider project is used.
func (o CloudExadataInfrastructureOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructure) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Various properties of Exadata Infrastructure.
// Structure is documented below.
func (o CloudExadataInfrastructureOutput) Properties() CloudExadataInfrastructurePropertiesPtrOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructure) CloudExadataInfrastructurePropertiesPtrOutput { return v.Properties }).(CloudExadataInfrastructurePropertiesPtrOutput)
}

// The combination of labels configured directly on the resource
// and default labels configured on the provider.
func (o CloudExadataInfrastructureOutput) PulumiLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructure) pulumi.StringMapOutput { return v.PulumiLabels }).(pulumi.StringMapOutput)
}

type CloudExadataInfrastructureArrayOutput struct{ *pulumi.OutputState }

func (CloudExadataInfrastructureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CloudExadataInfrastructure)(nil)).Elem()
}

func (o CloudExadataInfrastructureArrayOutput) ToCloudExadataInfrastructureArrayOutput() CloudExadataInfrastructureArrayOutput {
	return o
}

func (o CloudExadataInfrastructureArrayOutput) ToCloudExadataInfrastructureArrayOutputWithContext(ctx context.Context) CloudExadataInfrastructureArrayOutput {
	return o
}

func (o CloudExadataInfrastructureArrayOutput) Index(i pulumi.IntInput) CloudExadataInfrastructureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CloudExadataInfrastructure {
		return vs[0].([]*CloudExadataInfrastructure)[vs[1].(int)]
	}).(CloudExadataInfrastructureOutput)
}

type CloudExadataInfrastructureMapOutput struct{ *pulumi.OutputState }

func (CloudExadataInfrastructureMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CloudExadataInfrastructure)(nil)).Elem()
}

func (o CloudExadataInfrastructureMapOutput) ToCloudExadataInfrastructureMapOutput() CloudExadataInfrastructureMapOutput {
	return o
}

func (o CloudExadataInfrastructureMapOutput) ToCloudExadataInfrastructureMapOutputWithContext(ctx context.Context) CloudExadataInfrastructureMapOutput {
	return o
}

func (o CloudExadataInfrastructureMapOutput) MapIndex(k pulumi.StringInput) CloudExadataInfrastructureOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CloudExadataInfrastructure {
		return vs[0].(map[string]*CloudExadataInfrastructure)[vs[1].(string)]
	}).(CloudExadataInfrastructureOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CloudExadataInfrastructureInput)(nil)).Elem(), &CloudExadataInfrastructure{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudExadataInfrastructureArrayInput)(nil)).Elem(), CloudExadataInfrastructureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudExadataInfrastructureMapInput)(nil)).Elem(), CloudExadataInfrastructureMap{})
	pulumi.RegisterOutputType(CloudExadataInfrastructureOutput{})
	pulumi.RegisterOutputType(CloudExadataInfrastructureArrayOutput{})
	pulumi.RegisterOutputType(CloudExadataInfrastructureMapOutput{})
}
