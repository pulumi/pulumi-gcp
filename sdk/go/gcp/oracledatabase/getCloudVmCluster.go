// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package oracledatabase

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get information about a CloudVmCluster.
//
// For more information see the
// [API](https://cloud.google.com/oracle/database/docs/reference/rest/v1/projects.locations.cloudVmClusters).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/oracledatabase"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := oracledatabase.LookupCloudVmCluster(ctx, &oracledatabase.LookupCloudVmClusterArgs{
//				Location:         "us-east4",
//				CloudVmClusterId: "vmcluster-id",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupCloudVmCluster(ctx *pulumi.Context, args *LookupCloudVmClusterArgs, opts ...pulumi.InvokeOption) (*LookupCloudVmClusterResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupCloudVmClusterResult
	err := ctx.Invoke("gcp:oracledatabase/getCloudVmCluster:getCloudVmCluster", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCloudVmCluster.
type LookupCloudVmClusterArgs struct {
	// The ID of the VM Cluster.
	CloudVmClusterId string `pulumi:"cloudVmClusterId"`
	// The location of the resource.
	//
	// ***
	Location string `pulumi:"location"`
	// The project in which the resource belongs. If it
	// is not provided, the provider project is used.
	Project *string `pulumi:"project"`
}

// A collection of values returned by getCloudVmCluster.
type LookupCloudVmClusterResult struct {
	BackupOdbSubnet       string            `pulumi:"backupOdbSubnet"`
	BackupSubnetCidr      string            `pulumi:"backupSubnetCidr"`
	Cidr                  string            `pulumi:"cidr"`
	CloudVmClusterId      string            `pulumi:"cloudVmClusterId"`
	CreateTime            string            `pulumi:"createTime"`
	DeletionProtection    bool              `pulumi:"deletionProtection"`
	DisplayName           string            `pulumi:"displayName"`
	EffectiveLabels       map[string]string `pulumi:"effectiveLabels"`
	ExadataInfrastructure string            `pulumi:"exadataInfrastructure"`
	GcpOracleZone         string            `pulumi:"gcpOracleZone"`
	// The provider-assigned unique ID for this managed resource.
	Id           string                      `pulumi:"id"`
	Labels       map[string]string           `pulumi:"labels"`
	Location     string                      `pulumi:"location"`
	Name         string                      `pulumi:"name"`
	Network      string                      `pulumi:"network"`
	OdbNetwork   string                      `pulumi:"odbNetwork"`
	OdbSubnet    string                      `pulumi:"odbSubnet"`
	Project      *string                     `pulumi:"project"`
	Properties   []GetCloudVmClusterProperty `pulumi:"properties"`
	PulumiLabels map[string]string           `pulumi:"pulumiLabels"`
}

func LookupCloudVmClusterOutput(ctx *pulumi.Context, args LookupCloudVmClusterOutputArgs, opts ...pulumi.InvokeOption) LookupCloudVmClusterResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupCloudVmClusterResultOutput, error) {
			args := v.(LookupCloudVmClusterArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("gcp:oracledatabase/getCloudVmCluster:getCloudVmCluster", args, LookupCloudVmClusterResultOutput{}, options).(LookupCloudVmClusterResultOutput), nil
		}).(LookupCloudVmClusterResultOutput)
}

// A collection of arguments for invoking getCloudVmCluster.
type LookupCloudVmClusterOutputArgs struct {
	// The ID of the VM Cluster.
	CloudVmClusterId pulumi.StringInput `pulumi:"cloudVmClusterId"`
	// The location of the resource.
	//
	// ***
	Location pulumi.StringInput `pulumi:"location"`
	// The project in which the resource belongs. If it
	// is not provided, the provider project is used.
	Project pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupCloudVmClusterOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCloudVmClusterArgs)(nil)).Elem()
}

// A collection of values returned by getCloudVmCluster.
type LookupCloudVmClusterResultOutput struct{ *pulumi.OutputState }

func (LookupCloudVmClusterResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCloudVmClusterResult)(nil)).Elem()
}

func (o LookupCloudVmClusterResultOutput) ToLookupCloudVmClusterResultOutput() LookupCloudVmClusterResultOutput {
	return o
}

func (o LookupCloudVmClusterResultOutput) ToLookupCloudVmClusterResultOutputWithContext(ctx context.Context) LookupCloudVmClusterResultOutput {
	return o
}

func (o LookupCloudVmClusterResultOutput) BackupOdbSubnet() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudVmClusterResult) string { return v.BackupOdbSubnet }).(pulumi.StringOutput)
}

func (o LookupCloudVmClusterResultOutput) BackupSubnetCidr() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudVmClusterResult) string { return v.BackupSubnetCidr }).(pulumi.StringOutput)
}

func (o LookupCloudVmClusterResultOutput) Cidr() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudVmClusterResult) string { return v.Cidr }).(pulumi.StringOutput)
}

func (o LookupCloudVmClusterResultOutput) CloudVmClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudVmClusterResult) string { return v.CloudVmClusterId }).(pulumi.StringOutput)
}

func (o LookupCloudVmClusterResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudVmClusterResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

func (o LookupCloudVmClusterResultOutput) DeletionProtection() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupCloudVmClusterResult) bool { return v.DeletionProtection }).(pulumi.BoolOutput)
}

func (o LookupCloudVmClusterResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudVmClusterResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

func (o LookupCloudVmClusterResultOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupCloudVmClusterResult) map[string]string { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

func (o LookupCloudVmClusterResultOutput) ExadataInfrastructure() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudVmClusterResult) string { return v.ExadataInfrastructure }).(pulumi.StringOutput)
}

func (o LookupCloudVmClusterResultOutput) GcpOracleZone() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudVmClusterResult) string { return v.GcpOracleZone }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupCloudVmClusterResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudVmClusterResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupCloudVmClusterResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupCloudVmClusterResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

func (o LookupCloudVmClusterResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudVmClusterResult) string { return v.Location }).(pulumi.StringOutput)
}

func (o LookupCloudVmClusterResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudVmClusterResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupCloudVmClusterResultOutput) Network() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudVmClusterResult) string { return v.Network }).(pulumi.StringOutput)
}

func (o LookupCloudVmClusterResultOutput) OdbNetwork() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudVmClusterResult) string { return v.OdbNetwork }).(pulumi.StringOutput)
}

func (o LookupCloudVmClusterResultOutput) OdbSubnet() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudVmClusterResult) string { return v.OdbSubnet }).(pulumi.StringOutput)
}

func (o LookupCloudVmClusterResultOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCloudVmClusterResult) *string { return v.Project }).(pulumi.StringPtrOutput)
}

func (o LookupCloudVmClusterResultOutput) Properties() GetCloudVmClusterPropertyArrayOutput {
	return o.ApplyT(func(v LookupCloudVmClusterResult) []GetCloudVmClusterProperty { return v.Properties }).(GetCloudVmClusterPropertyArrayOutput)
}

func (o LookupCloudVmClusterResultOutput) PulumiLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupCloudVmClusterResult) map[string]string { return v.PulumiLabels }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCloudVmClusterResultOutput{})
}
