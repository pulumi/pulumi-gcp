// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package oracledatabase

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// An OdbNetwork resource which represents a private network providing connectivity between OracleDatabase resources and Google Cloud VPC network.
//
// To get more information about OdbNetwork, see:
// * How-to Guides
//   - [OracleDatabase@Google Cloud](https://cloud.google.com/oracle/database/docs/overview')
//
// ## Example Usage
//
// ### Oracledatabase Odbnetwork
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/compute"
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/oracledatabase"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_default, err := compute.LookupNetwork(ctx, &compute.LookupNetworkArgs{
//				Name:    "new",
//				Project: pulumi.StringRef("my-project"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = oracledatabase.NewOdbNetwork(ctx, "my-odbnetwork", &oracledatabase.OdbNetworkArgs{
//				OdbNetworkId: pulumi.String("my-odbnetwork"),
//				Location:     pulumi.String("us-west3"),
//				Project:      pulumi.String("my-project"),
//				Network:      pulumi.String(_default.Id),
//				Labels: pulumi.StringMap{
//					"terraform_created": pulumi.String("true"),
//				},
//				DeletionProtection: pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// OdbNetwork can be imported using any of these accepted formats:
//
// * `projects/{{project}}/locations/{{location}}/odbNetworks/{{odb_network_id}}`
//
// * `{{project}}/{{location}}/{{odb_network_id}}`
//
// * `{{location}}/{{odb_network_id}}`
//
// When using the `pulumi import` command, OdbNetwork can be imported using one of the formats above. For example:
//
// ```sh
// $ pulumi import gcp:oracledatabase/odbNetwork:OdbNetwork default projects/{{project}}/locations/{{location}}/odbNetworks/{{odb_network_id}}
// ```
//
// ```sh
// $ pulumi import gcp:oracledatabase/odbNetwork:OdbNetwork default {{project}}/{{location}}/{{odb_network_id}}
// ```
//
// ```sh
// $ pulumi import gcp:oracledatabase/odbNetwork:OdbNetwork default {{location}}/{{odb_network_id}}
// ```
type OdbNetwork struct {
	pulumi.CustomResourceState

	// The date and time that the OdbNetwork was created.
	CreateTime         pulumi.StringOutput  `pulumi:"createTime"`
	DeletionProtection pulumi.BoolPtrOutput `pulumi:"deletionProtection"`
	// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
	EffectiveLabels pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	// The ID of the subscription entitlement associated with the OdbNetwork.
	EntitlementId pulumi.StringOutput `pulumi:"entitlementId"`
	// Labels or tags associated with the resource.
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
	Location pulumi.StringOutput `pulumi:"location"`
	// Identifier. The name of the OdbNetwork resource in the following format:
	// projects/{project}/locations/{region}/odbNetworks/{odb_network}
	Name pulumi.StringOutput `pulumi:"name"`
	// The name of the VPC network in the following format:
	// projects/{project}/global/networks/{network}
	Network pulumi.StringOutput `pulumi:"network"`
	// The ID of the OdbNetwork to create. This value is restricted
	// to (^a-z?$) and must be a maximum of 63
	// characters in length. The value must start with a letter and end with
	// a letter or a number.
	OdbNetworkId pulumi.StringOutput `pulumi:"odbNetworkId"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
	// The combination of labels configured directly on the resource
	// and default labels configured on the provider.
	PulumiLabels pulumi.StringMapOutput `pulumi:"pulumiLabels"`
	// State of the ODB Network.
	// Possible values:
	// PROVISIONING
	// AVAILABLE
	// TERMINATING
	// FAILED
	State pulumi.StringOutput `pulumi:"state"`
}

// NewOdbNetwork registers a new resource with the given unique name, arguments, and options.
func NewOdbNetwork(ctx *pulumi.Context,
	name string, args *OdbNetworkArgs, opts ...pulumi.ResourceOption) (*OdbNetwork, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	if args.Network == nil {
		return nil, errors.New("invalid value for required argument 'Network'")
	}
	if args.OdbNetworkId == nil {
		return nil, errors.New("invalid value for required argument 'OdbNetworkId'")
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"effectiveLabels",
		"pulumiLabels",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource OdbNetwork
	err := ctx.RegisterResource("gcp:oracledatabase/odbNetwork:OdbNetwork", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOdbNetwork gets an existing OdbNetwork resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOdbNetwork(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OdbNetworkState, opts ...pulumi.ResourceOption) (*OdbNetwork, error) {
	var resource OdbNetwork
	err := ctx.ReadResource("gcp:oracledatabase/odbNetwork:OdbNetwork", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OdbNetwork resources.
type odbNetworkState struct {
	// The date and time that the OdbNetwork was created.
	CreateTime         *string `pulumi:"createTime"`
	DeletionProtection *bool   `pulumi:"deletionProtection"`
	// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
	EffectiveLabels map[string]string `pulumi:"effectiveLabels"`
	// The ID of the subscription entitlement associated with the OdbNetwork.
	EntitlementId *string `pulumi:"entitlementId"`
	// Labels or tags associated with the resource.
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
	Location *string `pulumi:"location"`
	// Identifier. The name of the OdbNetwork resource in the following format:
	// projects/{project}/locations/{region}/odbNetworks/{odb_network}
	Name *string `pulumi:"name"`
	// The name of the VPC network in the following format:
	// projects/{project}/global/networks/{network}
	Network *string `pulumi:"network"`
	// The ID of the OdbNetwork to create. This value is restricted
	// to (^a-z?$) and must be a maximum of 63
	// characters in length. The value must start with a letter and end with
	// a letter or a number.
	OdbNetworkId *string `pulumi:"odbNetworkId"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// The combination of labels configured directly on the resource
	// and default labels configured on the provider.
	PulumiLabels map[string]string `pulumi:"pulumiLabels"`
	// State of the ODB Network.
	// Possible values:
	// PROVISIONING
	// AVAILABLE
	// TERMINATING
	// FAILED
	State *string `pulumi:"state"`
}

type OdbNetworkState struct {
	// The date and time that the OdbNetwork was created.
	CreateTime         pulumi.StringPtrInput
	DeletionProtection pulumi.BoolPtrInput
	// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
	EffectiveLabels pulumi.StringMapInput
	// The ID of the subscription entitlement associated with the OdbNetwork.
	EntitlementId pulumi.StringPtrInput
	// Labels or tags associated with the resource.
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
	Location pulumi.StringPtrInput
	// Identifier. The name of the OdbNetwork resource in the following format:
	// projects/{project}/locations/{region}/odbNetworks/{odb_network}
	Name pulumi.StringPtrInput
	// The name of the VPC network in the following format:
	// projects/{project}/global/networks/{network}
	Network pulumi.StringPtrInput
	// The ID of the OdbNetwork to create. This value is restricted
	// to (^a-z?$) and must be a maximum of 63
	// characters in length. The value must start with a letter and end with
	// a letter or a number.
	OdbNetworkId pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// The combination of labels configured directly on the resource
	// and default labels configured on the provider.
	PulumiLabels pulumi.StringMapInput
	// State of the ODB Network.
	// Possible values:
	// PROVISIONING
	// AVAILABLE
	// TERMINATING
	// FAILED
	State pulumi.StringPtrInput
}

func (OdbNetworkState) ElementType() reflect.Type {
	return reflect.TypeOf((*odbNetworkState)(nil)).Elem()
}

type odbNetworkArgs struct {
	DeletionProtection *bool `pulumi:"deletionProtection"`
	// Labels or tags associated with the resource.
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
	Location string `pulumi:"location"`
	// The name of the VPC network in the following format:
	// projects/{project}/global/networks/{network}
	Network string `pulumi:"network"`
	// The ID of the OdbNetwork to create. This value is restricted
	// to (^a-z?$) and must be a maximum of 63
	// characters in length. The value must start with a letter and end with
	// a letter or a number.
	OdbNetworkId string `pulumi:"odbNetworkId"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
}

// The set of arguments for constructing a OdbNetwork resource.
type OdbNetworkArgs struct {
	DeletionProtection pulumi.BoolPtrInput
	// Labels or tags associated with the resource.
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
	Location pulumi.StringInput
	// The name of the VPC network in the following format:
	// projects/{project}/global/networks/{network}
	Network pulumi.StringInput
	// The ID of the OdbNetwork to create. This value is restricted
	// to (^a-z?$) and must be a maximum of 63
	// characters in length. The value must start with a letter and end with
	// a letter or a number.
	OdbNetworkId pulumi.StringInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
}

func (OdbNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*odbNetworkArgs)(nil)).Elem()
}

type OdbNetworkInput interface {
	pulumi.Input

	ToOdbNetworkOutput() OdbNetworkOutput
	ToOdbNetworkOutputWithContext(ctx context.Context) OdbNetworkOutput
}

func (*OdbNetwork) ElementType() reflect.Type {
	return reflect.TypeOf((**OdbNetwork)(nil)).Elem()
}

func (i *OdbNetwork) ToOdbNetworkOutput() OdbNetworkOutput {
	return i.ToOdbNetworkOutputWithContext(context.Background())
}

func (i *OdbNetwork) ToOdbNetworkOutputWithContext(ctx context.Context) OdbNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OdbNetworkOutput)
}

// OdbNetworkArrayInput is an input type that accepts OdbNetworkArray and OdbNetworkArrayOutput values.
// You can construct a concrete instance of `OdbNetworkArrayInput` via:
//
//	OdbNetworkArray{ OdbNetworkArgs{...} }
type OdbNetworkArrayInput interface {
	pulumi.Input

	ToOdbNetworkArrayOutput() OdbNetworkArrayOutput
	ToOdbNetworkArrayOutputWithContext(context.Context) OdbNetworkArrayOutput
}

type OdbNetworkArray []OdbNetworkInput

func (OdbNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OdbNetwork)(nil)).Elem()
}

func (i OdbNetworkArray) ToOdbNetworkArrayOutput() OdbNetworkArrayOutput {
	return i.ToOdbNetworkArrayOutputWithContext(context.Background())
}

func (i OdbNetworkArray) ToOdbNetworkArrayOutputWithContext(ctx context.Context) OdbNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OdbNetworkArrayOutput)
}

// OdbNetworkMapInput is an input type that accepts OdbNetworkMap and OdbNetworkMapOutput values.
// You can construct a concrete instance of `OdbNetworkMapInput` via:
//
//	OdbNetworkMap{ "key": OdbNetworkArgs{...} }
type OdbNetworkMapInput interface {
	pulumi.Input

	ToOdbNetworkMapOutput() OdbNetworkMapOutput
	ToOdbNetworkMapOutputWithContext(context.Context) OdbNetworkMapOutput
}

type OdbNetworkMap map[string]OdbNetworkInput

func (OdbNetworkMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OdbNetwork)(nil)).Elem()
}

func (i OdbNetworkMap) ToOdbNetworkMapOutput() OdbNetworkMapOutput {
	return i.ToOdbNetworkMapOutputWithContext(context.Background())
}

func (i OdbNetworkMap) ToOdbNetworkMapOutputWithContext(ctx context.Context) OdbNetworkMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OdbNetworkMapOutput)
}

type OdbNetworkOutput struct{ *pulumi.OutputState }

func (OdbNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OdbNetwork)(nil)).Elem()
}

func (o OdbNetworkOutput) ToOdbNetworkOutput() OdbNetworkOutput {
	return o
}

func (o OdbNetworkOutput) ToOdbNetworkOutputWithContext(ctx context.Context) OdbNetworkOutput {
	return o
}

// The date and time that the OdbNetwork was created.
func (o OdbNetworkOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *OdbNetwork) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

func (o OdbNetworkOutput) DeletionProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OdbNetwork) pulumi.BoolPtrOutput { return v.DeletionProtection }).(pulumi.BoolPtrOutput)
}

// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
func (o OdbNetworkOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *OdbNetwork) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// The ID of the subscription entitlement associated with the OdbNetwork.
func (o OdbNetworkOutput) EntitlementId() pulumi.StringOutput {
	return o.ApplyT(func(v *OdbNetwork) pulumi.StringOutput { return v.EntitlementId }).(pulumi.StringOutput)
}

// Labels or tags associated with the resource.
// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
func (o OdbNetworkOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *OdbNetwork) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
func (o OdbNetworkOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *OdbNetwork) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Identifier. The name of the OdbNetwork resource in the following format:
// projects/{project}/locations/{region}/odbNetworks/{odb_network}
func (o OdbNetworkOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *OdbNetwork) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The name of the VPC network in the following format:
// projects/{project}/global/networks/{network}
func (o OdbNetworkOutput) Network() pulumi.StringOutput {
	return o.ApplyT(func(v *OdbNetwork) pulumi.StringOutput { return v.Network }).(pulumi.StringOutput)
}

// The ID of the OdbNetwork to create. This value is restricted
// to (^a-z?$) and must be a maximum of 63
// characters in length. The value must start with a letter and end with
// a letter or a number.
func (o OdbNetworkOutput) OdbNetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v *OdbNetwork) pulumi.StringOutput { return v.OdbNetworkId }).(pulumi.StringOutput)
}

// The ID of the project in which the resource belongs.
// If it is not provided, the provider project is used.
func (o OdbNetworkOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *OdbNetwork) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The combination of labels configured directly on the resource
// and default labels configured on the provider.
func (o OdbNetworkOutput) PulumiLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *OdbNetwork) pulumi.StringMapOutput { return v.PulumiLabels }).(pulumi.StringMapOutput)
}

// State of the ODB Network.
// Possible values:
// PROVISIONING
// AVAILABLE
// TERMINATING
// FAILED
func (o OdbNetworkOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *OdbNetwork) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

type OdbNetworkArrayOutput struct{ *pulumi.OutputState }

func (OdbNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OdbNetwork)(nil)).Elem()
}

func (o OdbNetworkArrayOutput) ToOdbNetworkArrayOutput() OdbNetworkArrayOutput {
	return o
}

func (o OdbNetworkArrayOutput) ToOdbNetworkArrayOutputWithContext(ctx context.Context) OdbNetworkArrayOutput {
	return o
}

func (o OdbNetworkArrayOutput) Index(i pulumi.IntInput) OdbNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *OdbNetwork {
		return vs[0].([]*OdbNetwork)[vs[1].(int)]
	}).(OdbNetworkOutput)
}

type OdbNetworkMapOutput struct{ *pulumi.OutputState }

func (OdbNetworkMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OdbNetwork)(nil)).Elem()
}

func (o OdbNetworkMapOutput) ToOdbNetworkMapOutput() OdbNetworkMapOutput {
	return o
}

func (o OdbNetworkMapOutput) ToOdbNetworkMapOutputWithContext(ctx context.Context) OdbNetworkMapOutput {
	return o
}

func (o OdbNetworkMapOutput) MapIndex(k pulumi.StringInput) OdbNetworkOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *OdbNetwork {
		return vs[0].(map[string]*OdbNetwork)[vs[1].(string)]
	}).(OdbNetworkOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OdbNetworkInput)(nil)).Elem(), &OdbNetwork{})
	pulumi.RegisterInputType(reflect.TypeOf((*OdbNetworkArrayInput)(nil)).Elem(), OdbNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OdbNetworkMapInput)(nil)).Elem(), OdbNetworkMap{})
	pulumi.RegisterOutputType(OdbNetworkOutput{})
	pulumi.RegisterOutputType(OdbNetworkArrayOutput{})
	pulumi.RegisterOutputType(OdbNetworkMapOutput{})
}
