// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package alloydb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get information about the available instance. For more details refer the [API docs](https://cloud.google.com/alloydb/docs/reference/rest/v1/projects.locations.clusters.instances).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/alloydb"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := alloydb.LookupInstance(ctx, &alloydb.LookupInstanceArgs{}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupInstance(ctx *pulumi.Context, args *LookupInstanceArgs, opts ...pulumi.InvokeOption) (*LookupInstanceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupInstanceResult
	err := ctx.Invoke("gcp:alloydb/getInstance:getInstance", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getInstance.
type LookupInstanceArgs struct {
	// The ID of the alloydb cluster that the instance belongs to.
	// 'alloydb_cluster_id'
	ClusterId string `pulumi:"clusterId"`
	// The ID of the alloydb instance.
	// 'alloydb_instance_id'
	InstanceId string `pulumi:"instanceId"`
	// (optional)
	// The canonical id of the location.If it is not provided, the provider project is used. For example: us-east1.
	Location *string `pulumi:"location"`
	// (optional)
	// The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
}

// A collection of values returned by getInstance.
type LookupInstanceResult struct {
	ActivationPolicy        string                              `pulumi:"activationPolicy"`
	Annotations             map[string]string                   `pulumi:"annotations"`
	AvailabilityType        string                              `pulumi:"availabilityType"`
	ClientConnectionConfigs []GetInstanceClientConnectionConfig `pulumi:"clientConnectionConfigs"`
	Cluster                 string                              `pulumi:"cluster"`
	ClusterId               string                              `pulumi:"clusterId"`
	CreateTime              string                              `pulumi:"createTime"`
	DatabaseFlags           map[string]string                   `pulumi:"databaseFlags"`
	DisplayName             string                              `pulumi:"displayName"`
	EffectiveAnnotations    map[string]string                   `pulumi:"effectiveAnnotations"`
	EffectiveLabels         map[string]string                   `pulumi:"effectiveLabels"`
	GceZone                 string                              `pulumi:"gceZone"`
	// The provider-assigned unique ID for this managed resource.
	Id                        string                           `pulumi:"id"`
	InstanceId                string                           `pulumi:"instanceId"`
	InstanceType              string                           `pulumi:"instanceType"`
	IpAddress                 string                           `pulumi:"ipAddress"`
	Labels                    map[string]string                `pulumi:"labels"`
	Location                  *string                          `pulumi:"location"`
	MachineConfigs            []GetInstanceMachineConfig       `pulumi:"machineConfigs"`
	Name                      string                           `pulumi:"name"`
	NetworkConfigs            []GetInstanceNetworkConfig       `pulumi:"networkConfigs"`
	ObservabilityConfigs      []GetInstanceObservabilityConfig `pulumi:"observabilityConfigs"`
	OutboundPublicIpAddresses []string                         `pulumi:"outboundPublicIpAddresses"`
	Project                   *string                          `pulumi:"project"`
	PscInstanceConfigs        []GetInstancePscInstanceConfig   `pulumi:"pscInstanceConfigs"`
	PublicIpAddress           string                           `pulumi:"publicIpAddress"`
	PulumiLabels              map[string]string                `pulumi:"pulumiLabels"`
	QueryInsightsConfigs      []GetInstanceQueryInsightsConfig `pulumi:"queryInsightsConfigs"`
	ReadPoolConfigs           []GetInstanceReadPoolConfig      `pulumi:"readPoolConfigs"`
	Reconciling               bool                             `pulumi:"reconciling"`
	State                     string                           `pulumi:"state"`
	Uid                       string                           `pulumi:"uid"`
	UpdateTime                string                           `pulumi:"updateTime"`
}

func LookupInstanceOutput(ctx *pulumi.Context, args LookupInstanceOutputArgs, opts ...pulumi.InvokeOption) LookupInstanceResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupInstanceResultOutput, error) {
			args := v.(LookupInstanceArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("gcp:alloydb/getInstance:getInstance", args, LookupInstanceResultOutput{}, options).(LookupInstanceResultOutput), nil
		}).(LookupInstanceResultOutput)
}

// A collection of arguments for invoking getInstance.
type LookupInstanceOutputArgs struct {
	// The ID of the alloydb cluster that the instance belongs to.
	// 'alloydb_cluster_id'
	ClusterId pulumi.StringInput `pulumi:"clusterId"`
	// The ID of the alloydb instance.
	// 'alloydb_instance_id'
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// (optional)
	// The canonical id of the location.If it is not provided, the provider project is used. For example: us-east1.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// (optional)
	// The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupInstanceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupInstanceArgs)(nil)).Elem()
}

// A collection of values returned by getInstance.
type LookupInstanceResultOutput struct{ *pulumi.OutputState }

func (LookupInstanceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupInstanceResult)(nil)).Elem()
}

func (o LookupInstanceResultOutput) ToLookupInstanceResultOutput() LookupInstanceResultOutput {
	return o
}

func (o LookupInstanceResultOutput) ToLookupInstanceResultOutputWithContext(ctx context.Context) LookupInstanceResultOutput {
	return o
}

func (o LookupInstanceResultOutput) ActivationPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.ActivationPolicy }).(pulumi.StringOutput)
}

func (o LookupInstanceResultOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupInstanceResult) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

func (o LookupInstanceResultOutput) AvailabilityType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.AvailabilityType }).(pulumi.StringOutput)
}

func (o LookupInstanceResultOutput) ClientConnectionConfigs() GetInstanceClientConnectionConfigArrayOutput {
	return o.ApplyT(func(v LookupInstanceResult) []GetInstanceClientConnectionConfig { return v.ClientConnectionConfigs }).(GetInstanceClientConnectionConfigArrayOutput)
}

func (o LookupInstanceResultOutput) Cluster() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.Cluster }).(pulumi.StringOutput)
}

func (o LookupInstanceResultOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.ClusterId }).(pulumi.StringOutput)
}

func (o LookupInstanceResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

func (o LookupInstanceResultOutput) DatabaseFlags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupInstanceResult) map[string]string { return v.DatabaseFlags }).(pulumi.StringMapOutput)
}

func (o LookupInstanceResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

func (o LookupInstanceResultOutput) EffectiveAnnotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupInstanceResult) map[string]string { return v.EffectiveAnnotations }).(pulumi.StringMapOutput)
}

func (o LookupInstanceResultOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupInstanceResult) map[string]string { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

func (o LookupInstanceResultOutput) GceZone() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.GceZone }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupInstanceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupInstanceResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

func (o LookupInstanceResultOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.InstanceType }).(pulumi.StringOutput)
}

func (o LookupInstanceResultOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.IpAddress }).(pulumi.StringOutput)
}

func (o LookupInstanceResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupInstanceResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

func (o LookupInstanceResultOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupInstanceResult) *string { return v.Location }).(pulumi.StringPtrOutput)
}

func (o LookupInstanceResultOutput) MachineConfigs() GetInstanceMachineConfigArrayOutput {
	return o.ApplyT(func(v LookupInstanceResult) []GetInstanceMachineConfig { return v.MachineConfigs }).(GetInstanceMachineConfigArrayOutput)
}

func (o LookupInstanceResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupInstanceResultOutput) NetworkConfigs() GetInstanceNetworkConfigArrayOutput {
	return o.ApplyT(func(v LookupInstanceResult) []GetInstanceNetworkConfig { return v.NetworkConfigs }).(GetInstanceNetworkConfigArrayOutput)
}

func (o LookupInstanceResultOutput) ObservabilityConfigs() GetInstanceObservabilityConfigArrayOutput {
	return o.ApplyT(func(v LookupInstanceResult) []GetInstanceObservabilityConfig { return v.ObservabilityConfigs }).(GetInstanceObservabilityConfigArrayOutput)
}

func (o LookupInstanceResultOutput) OutboundPublicIpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupInstanceResult) []string { return v.OutboundPublicIpAddresses }).(pulumi.StringArrayOutput)
}

func (o LookupInstanceResultOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupInstanceResult) *string { return v.Project }).(pulumi.StringPtrOutput)
}

func (o LookupInstanceResultOutput) PscInstanceConfigs() GetInstancePscInstanceConfigArrayOutput {
	return o.ApplyT(func(v LookupInstanceResult) []GetInstancePscInstanceConfig { return v.PscInstanceConfigs }).(GetInstancePscInstanceConfigArrayOutput)
}

func (o LookupInstanceResultOutput) PublicIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.PublicIpAddress }).(pulumi.StringOutput)
}

func (o LookupInstanceResultOutput) PulumiLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupInstanceResult) map[string]string { return v.PulumiLabels }).(pulumi.StringMapOutput)
}

func (o LookupInstanceResultOutput) QueryInsightsConfigs() GetInstanceQueryInsightsConfigArrayOutput {
	return o.ApplyT(func(v LookupInstanceResult) []GetInstanceQueryInsightsConfig { return v.QueryInsightsConfigs }).(GetInstanceQueryInsightsConfigArrayOutput)
}

func (o LookupInstanceResultOutput) ReadPoolConfigs() GetInstanceReadPoolConfigArrayOutput {
	return o.ApplyT(func(v LookupInstanceResult) []GetInstanceReadPoolConfig { return v.ReadPoolConfigs }).(GetInstanceReadPoolConfigArrayOutput)
}

func (o LookupInstanceResultOutput) Reconciling() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupInstanceResult) bool { return v.Reconciling }).(pulumi.BoolOutput)
}

func (o LookupInstanceResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.State }).(pulumi.StringOutput)
}

func (o LookupInstanceResultOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.Uid }).(pulumi.StringOutput)
}

func (o LookupInstanceResultOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupInstanceResultOutput{})
}
