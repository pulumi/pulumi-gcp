// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package alloydb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Use this data source to get information about the supported alloydb database flags in a location.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/alloydb"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := alloydb.GetSupportedDatabaseFlags(ctx, &alloydb.GetSupportedDatabaseFlagsArgs{
//				Location: "us-central1",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetSupportedDatabaseFlags(ctx *pulumi.Context, args *GetSupportedDatabaseFlagsArgs, opts ...pulumi.InvokeOption) (*GetSupportedDatabaseFlagsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetSupportedDatabaseFlagsResult
	err := ctx.Invoke("gcp:alloydb/getSupportedDatabaseFlags:getSupportedDatabaseFlags", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSupportedDatabaseFlags.
type GetSupportedDatabaseFlagsArgs struct {
	// The canonical id of the location. For example: `us-east1`.
	Location string `pulumi:"location"`
	// The ID of the project.
	Project *string `pulumi:"project"`
}

// A collection of values returned by getSupportedDatabaseFlags.
type GetSupportedDatabaseFlagsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id       string  `pulumi:"id"`
	Location string  `pulumi:"location"`
	Project  *string `pulumi:"project"`
	// Contains a list of `flag`, which contains the details about a particular flag.
	SupportedDatabaseFlags []GetSupportedDatabaseFlagsSupportedDatabaseFlag `pulumi:"supportedDatabaseFlags"`
}

func GetSupportedDatabaseFlagsOutput(ctx *pulumi.Context, args GetSupportedDatabaseFlagsOutputArgs, opts ...pulumi.InvokeOption) GetSupportedDatabaseFlagsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetSupportedDatabaseFlagsResult, error) {
			args := v.(GetSupportedDatabaseFlagsArgs)
			r, err := GetSupportedDatabaseFlags(ctx, &args, opts...)
			var s GetSupportedDatabaseFlagsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetSupportedDatabaseFlagsResultOutput)
}

// A collection of arguments for invoking getSupportedDatabaseFlags.
type GetSupportedDatabaseFlagsOutputArgs struct {
	// The canonical id of the location. For example: `us-east1`.
	Location pulumi.StringInput `pulumi:"location"`
	// The ID of the project.
	Project pulumi.StringPtrInput `pulumi:"project"`
}

func (GetSupportedDatabaseFlagsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSupportedDatabaseFlagsArgs)(nil)).Elem()
}

// A collection of values returned by getSupportedDatabaseFlags.
type GetSupportedDatabaseFlagsResultOutput struct{ *pulumi.OutputState }

func (GetSupportedDatabaseFlagsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSupportedDatabaseFlagsResult)(nil)).Elem()
}

func (o GetSupportedDatabaseFlagsResultOutput) ToGetSupportedDatabaseFlagsResultOutput() GetSupportedDatabaseFlagsResultOutput {
	return o
}

func (o GetSupportedDatabaseFlagsResultOutput) ToGetSupportedDatabaseFlagsResultOutputWithContext(ctx context.Context) GetSupportedDatabaseFlagsResultOutput {
	return o
}

func (o GetSupportedDatabaseFlagsResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetSupportedDatabaseFlagsResult] {
	return pulumix.Output[GetSupportedDatabaseFlagsResult]{
		OutputState: o.OutputState,
	}
}

// The provider-assigned unique ID for this managed resource.
func (o GetSupportedDatabaseFlagsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSupportedDatabaseFlagsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetSupportedDatabaseFlagsResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetSupportedDatabaseFlagsResult) string { return v.Location }).(pulumi.StringOutput)
}

func (o GetSupportedDatabaseFlagsResultOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSupportedDatabaseFlagsResult) *string { return v.Project }).(pulumi.StringPtrOutput)
}

// Contains a list of `flag`, which contains the details about a particular flag.
func (o GetSupportedDatabaseFlagsResultOutput) SupportedDatabaseFlags() GetSupportedDatabaseFlagsSupportedDatabaseFlagArrayOutput {
	return o.ApplyT(func(v GetSupportedDatabaseFlagsResult) []GetSupportedDatabaseFlagsSupportedDatabaseFlag {
		return v.SupportedDatabaseFlags
	}).(GetSupportedDatabaseFlagsSupportedDatabaseFlagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSupportedDatabaseFlagsResultOutput{})
}
