// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package alloydb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get information about the available locations. For more details refer the [API docs](https://cloud.google.com/alloydb/docs/reference/rest/v1/projects.locations).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/alloydb"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := alloydb.GetLocations(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetLocations(ctx *pulumi.Context, args *GetLocationsArgs, opts ...pulumi.InvokeOption) (*GetLocationsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetLocationsResult
	err := ctx.Invoke("gcp:alloydb/getLocations:getLocations", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getLocations.
type GetLocationsArgs struct {
	// The ID of the project.
	Project *string `pulumi:"project"`
}

// A collection of values returned by getLocations.
type GetLocationsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Contains a list of `location`, which contains the details about a particular location.
	Locations []GetLocationsLocation `pulumi:"locations"`
	Project   *string                `pulumi:"project"`
}

func GetLocationsOutput(ctx *pulumi.Context, args GetLocationsOutputArgs, opts ...pulumi.InvokeOption) GetLocationsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetLocationsResult, error) {
			args := v.(GetLocationsArgs)
			r, err := GetLocations(ctx, &args, opts...)
			var s GetLocationsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetLocationsResultOutput)
}

// A collection of arguments for invoking getLocations.
type GetLocationsOutputArgs struct {
	// The ID of the project.
	Project pulumi.StringPtrInput `pulumi:"project"`
}

func (GetLocationsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLocationsArgs)(nil)).Elem()
}

// A collection of values returned by getLocations.
type GetLocationsResultOutput struct{ *pulumi.OutputState }

func (GetLocationsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLocationsResult)(nil)).Elem()
}

func (o GetLocationsResultOutput) ToGetLocationsResultOutput() GetLocationsResultOutput {
	return o
}

func (o GetLocationsResultOutput) ToGetLocationsResultOutputWithContext(ctx context.Context) GetLocationsResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetLocationsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLocationsResult) string { return v.Id }).(pulumi.StringOutput)
}

// Contains a list of `location`, which contains the details about a particular location.
func (o GetLocationsResultOutput) Locations() GetLocationsLocationArrayOutput {
	return o.ApplyT(func(v GetLocationsResult) []GetLocationsLocation { return v.Locations }).(GetLocationsLocationArrayOutput)
}

func (o GetLocationsResultOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLocationsResult) *string { return v.Project }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetLocationsResultOutput{})
}
