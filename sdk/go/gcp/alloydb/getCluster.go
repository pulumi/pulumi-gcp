// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package alloydb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get information about the available cluster. For more details refer the [API docs](https://cloud.google.com/alloydb/docs/reference/rest/v1/projects.locations.clusters).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/alloydb"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := alloydb.LookupCluster(ctx, &alloydb.LookupClusterArgs{}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupCluster(ctx *pulumi.Context, args *LookupClusterArgs, opts ...pulumi.InvokeOption) (*LookupClusterResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupClusterResult
	err := ctx.Invoke("gcp:alloydb/getCluster:getCluster", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCluster.
type LookupClusterArgs struct {
	// The ID of the alloydb cluster that the instance belongs to.
	// 'alloydb_cluster_id'
	ClusterId string `pulumi:"clusterId"`
	// (optional)
	// The canonical id of the location.If it is not provided, the provider project is used. For example: us-east1.
	Location *string `pulumi:"location"`
	// (optional)
	// The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
}

// A collection of values returned by getCluster.
type LookupClusterResult struct {
	Annotations             map[string]string                  `pulumi:"annotations"`
	AutomatedBackupPolicies []GetClusterAutomatedBackupPolicy  `pulumi:"automatedBackupPolicies"`
	BackupSources           []GetClusterBackupSource           `pulumi:"backupSources"`
	ClusterId               string                             `pulumi:"clusterId"`
	ClusterType             string                             `pulumi:"clusterType"`
	ContinuousBackupConfigs []GetClusterContinuousBackupConfig `pulumi:"continuousBackupConfigs"`
	ContinuousBackupInfos   []GetClusterContinuousBackupInfo   `pulumi:"continuousBackupInfos"`
	DatabaseVersion         string                             `pulumi:"databaseVersion"`
	DeletionPolicy          string                             `pulumi:"deletionPolicy"`
	DisplayName             string                             `pulumi:"displayName"`
	EffectiveAnnotations    map[string]string                  `pulumi:"effectiveAnnotations"`
	EffectiveLabels         map[string]string                  `pulumi:"effectiveLabels"`
	EncryptionConfigs       []GetClusterEncryptionConfig       `pulumi:"encryptionConfigs"`
	EncryptionInfos         []GetClusterEncryptionInfo         `pulumi:"encryptionInfos"`
	Etag                    string                             `pulumi:"etag"`
	// The provider-assigned unique ID for this managed resource.
	Id                             string                                    `pulumi:"id"`
	InitialUsers                   []GetClusterInitialUser                   `pulumi:"initialUsers"`
	Labels                         map[string]string                         `pulumi:"labels"`
	Location                       *string                                   `pulumi:"location"`
	MaintenanceUpdatePolicies      []GetClusterMaintenanceUpdatePolicy       `pulumi:"maintenanceUpdatePolicies"`
	MigrationSources               []GetClusterMigrationSource               `pulumi:"migrationSources"`
	Name                           string                                    `pulumi:"name"`
	NetworkConfigs                 []GetClusterNetworkConfig                 `pulumi:"networkConfigs"`
	Project                        *string                                   `pulumi:"project"`
	PscConfigs                     []GetClusterPscConfig                     `pulumi:"pscConfigs"`
	PulumiLabels                   map[string]string                         `pulumi:"pulumiLabels"`
	Reconciling                    bool                                      `pulumi:"reconciling"`
	RestoreBackupSources           []GetClusterRestoreBackupSource           `pulumi:"restoreBackupSources"`
	RestoreContinuousBackupSources []GetClusterRestoreContinuousBackupSource `pulumi:"restoreContinuousBackupSources"`
	SecondaryConfigs               []GetClusterSecondaryConfig               `pulumi:"secondaryConfigs"`
	SkipAwaitMajorVersionUpgrade   bool                                      `pulumi:"skipAwaitMajorVersionUpgrade"`
	State                          string                                    `pulumi:"state"`
	SubscriptionType               string                                    `pulumi:"subscriptionType"`
	TrialMetadatas                 []GetClusterTrialMetadata                 `pulumi:"trialMetadatas"`
	Uid                            string                                    `pulumi:"uid"`
}

func LookupClusterOutput(ctx *pulumi.Context, args LookupClusterOutputArgs, opts ...pulumi.InvokeOption) LookupClusterResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupClusterResultOutput, error) {
			args := v.(LookupClusterArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("gcp:alloydb/getCluster:getCluster", args, LookupClusterResultOutput{}, options).(LookupClusterResultOutput), nil
		}).(LookupClusterResultOutput)
}

// A collection of arguments for invoking getCluster.
type LookupClusterOutputArgs struct {
	// The ID of the alloydb cluster that the instance belongs to.
	// 'alloydb_cluster_id'
	ClusterId pulumi.StringInput `pulumi:"clusterId"`
	// (optional)
	// The canonical id of the location.If it is not provided, the provider project is used. For example: us-east1.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// (optional)
	// The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupClusterOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupClusterArgs)(nil)).Elem()
}

// A collection of values returned by getCluster.
type LookupClusterResultOutput struct{ *pulumi.OutputState }

func (LookupClusterResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupClusterResult)(nil)).Elem()
}

func (o LookupClusterResultOutput) ToLookupClusterResultOutput() LookupClusterResultOutput {
	return o
}

func (o LookupClusterResultOutput) ToLookupClusterResultOutputWithContext(ctx context.Context) LookupClusterResultOutput {
	return o
}

func (o LookupClusterResultOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupClusterResult) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

func (o LookupClusterResultOutput) AutomatedBackupPolicies() GetClusterAutomatedBackupPolicyArrayOutput {
	return o.ApplyT(func(v LookupClusterResult) []GetClusterAutomatedBackupPolicy { return v.AutomatedBackupPolicies }).(GetClusterAutomatedBackupPolicyArrayOutput)
}

func (o LookupClusterResultOutput) BackupSources() GetClusterBackupSourceArrayOutput {
	return o.ApplyT(func(v LookupClusterResult) []GetClusterBackupSource { return v.BackupSources }).(GetClusterBackupSourceArrayOutput)
}

func (o LookupClusterResultOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.ClusterId }).(pulumi.StringOutput)
}

func (o LookupClusterResultOutput) ClusterType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.ClusterType }).(pulumi.StringOutput)
}

func (o LookupClusterResultOutput) ContinuousBackupConfigs() GetClusterContinuousBackupConfigArrayOutput {
	return o.ApplyT(func(v LookupClusterResult) []GetClusterContinuousBackupConfig { return v.ContinuousBackupConfigs }).(GetClusterContinuousBackupConfigArrayOutput)
}

func (o LookupClusterResultOutput) ContinuousBackupInfos() GetClusterContinuousBackupInfoArrayOutput {
	return o.ApplyT(func(v LookupClusterResult) []GetClusterContinuousBackupInfo { return v.ContinuousBackupInfos }).(GetClusterContinuousBackupInfoArrayOutput)
}

func (o LookupClusterResultOutput) DatabaseVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.DatabaseVersion }).(pulumi.StringOutput)
}

func (o LookupClusterResultOutput) DeletionPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.DeletionPolicy }).(pulumi.StringOutput)
}

func (o LookupClusterResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

func (o LookupClusterResultOutput) EffectiveAnnotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupClusterResult) map[string]string { return v.EffectiveAnnotations }).(pulumi.StringMapOutput)
}

func (o LookupClusterResultOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupClusterResult) map[string]string { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

func (o LookupClusterResultOutput) EncryptionConfigs() GetClusterEncryptionConfigArrayOutput {
	return o.ApplyT(func(v LookupClusterResult) []GetClusterEncryptionConfig { return v.EncryptionConfigs }).(GetClusterEncryptionConfigArrayOutput)
}

func (o LookupClusterResultOutput) EncryptionInfos() GetClusterEncryptionInfoArrayOutput {
	return o.ApplyT(func(v LookupClusterResult) []GetClusterEncryptionInfo { return v.EncryptionInfos }).(GetClusterEncryptionInfoArrayOutput)
}

func (o LookupClusterResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.Etag }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupClusterResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupClusterResultOutput) InitialUsers() GetClusterInitialUserArrayOutput {
	return o.ApplyT(func(v LookupClusterResult) []GetClusterInitialUser { return v.InitialUsers }).(GetClusterInitialUserArrayOutput)
}

func (o LookupClusterResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupClusterResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

func (o LookupClusterResultOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupClusterResult) *string { return v.Location }).(pulumi.StringPtrOutput)
}

func (o LookupClusterResultOutput) MaintenanceUpdatePolicies() GetClusterMaintenanceUpdatePolicyArrayOutput {
	return o.ApplyT(func(v LookupClusterResult) []GetClusterMaintenanceUpdatePolicy { return v.MaintenanceUpdatePolicies }).(GetClusterMaintenanceUpdatePolicyArrayOutput)
}

func (o LookupClusterResultOutput) MigrationSources() GetClusterMigrationSourceArrayOutput {
	return o.ApplyT(func(v LookupClusterResult) []GetClusterMigrationSource { return v.MigrationSources }).(GetClusterMigrationSourceArrayOutput)
}

func (o LookupClusterResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupClusterResultOutput) NetworkConfigs() GetClusterNetworkConfigArrayOutput {
	return o.ApplyT(func(v LookupClusterResult) []GetClusterNetworkConfig { return v.NetworkConfigs }).(GetClusterNetworkConfigArrayOutput)
}

func (o LookupClusterResultOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupClusterResult) *string { return v.Project }).(pulumi.StringPtrOutput)
}

func (o LookupClusterResultOutput) PscConfigs() GetClusterPscConfigArrayOutput {
	return o.ApplyT(func(v LookupClusterResult) []GetClusterPscConfig { return v.PscConfigs }).(GetClusterPscConfigArrayOutput)
}

func (o LookupClusterResultOutput) PulumiLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupClusterResult) map[string]string { return v.PulumiLabels }).(pulumi.StringMapOutput)
}

func (o LookupClusterResultOutput) Reconciling() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupClusterResult) bool { return v.Reconciling }).(pulumi.BoolOutput)
}

func (o LookupClusterResultOutput) RestoreBackupSources() GetClusterRestoreBackupSourceArrayOutput {
	return o.ApplyT(func(v LookupClusterResult) []GetClusterRestoreBackupSource { return v.RestoreBackupSources }).(GetClusterRestoreBackupSourceArrayOutput)
}

func (o LookupClusterResultOutput) RestoreContinuousBackupSources() GetClusterRestoreContinuousBackupSourceArrayOutput {
	return o.ApplyT(func(v LookupClusterResult) []GetClusterRestoreContinuousBackupSource {
		return v.RestoreContinuousBackupSources
	}).(GetClusterRestoreContinuousBackupSourceArrayOutput)
}

func (o LookupClusterResultOutput) SecondaryConfigs() GetClusterSecondaryConfigArrayOutput {
	return o.ApplyT(func(v LookupClusterResult) []GetClusterSecondaryConfig { return v.SecondaryConfigs }).(GetClusterSecondaryConfigArrayOutput)
}

func (o LookupClusterResultOutput) SkipAwaitMajorVersionUpgrade() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupClusterResult) bool { return v.SkipAwaitMajorVersionUpgrade }).(pulumi.BoolOutput)
}

func (o LookupClusterResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.State }).(pulumi.StringOutput)
}

func (o LookupClusterResultOutput) SubscriptionType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.SubscriptionType }).(pulumi.StringOutput)
}

func (o LookupClusterResultOutput) TrialMetadatas() GetClusterTrialMetadataArrayOutput {
	return o.ApplyT(func(v LookupClusterResult) []GetClusterTrialMetadata { return v.TrialMetadatas }).(GetClusterTrialMetadataArrayOutput)
}

func (o LookupClusterResultOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.Uid }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupClusterResultOutput{})
}
