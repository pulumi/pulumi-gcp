// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package alloydb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ClusterAutomatedBackupPolicy struct {
	// The length of the time window during which a backup can be taken. If a backup does not succeed within this time window, it will be canceled and considered failed.
	// The backup window must be at least 5 minutes long. There is no upper bound on the window. If not set, it will default to 1 hour.
	// A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
	BackupWindow *string `pulumi:"backupWindow"`
	// Whether automated automated backups are enabled.
	Enabled *bool `pulumi:"enabled"`
	// Labels to apply to backups created using this configuration.
	Labels map[string]string `pulumi:"labels"`
	// The location where the backup will be stored. Currently, the only supported option is to store the backup in the same region as the cluster.
	Location *string `pulumi:"location"`
	// Quantity-based Backup retention policy to retain recent backups.
	// Structure is documented below.
	QuantityBasedRetention *ClusterAutomatedBackupPolicyQuantityBasedRetention `pulumi:"quantityBasedRetention"`
	// Time-based Backup retention policy.
	// Structure is documented below.
	TimeBasedRetention *ClusterAutomatedBackupPolicyTimeBasedRetention `pulumi:"timeBasedRetention"`
	// Weekly schedule for the Backup.
	// Structure is documented below.
	WeeklySchedule ClusterAutomatedBackupPolicyWeeklySchedule `pulumi:"weeklySchedule"`
}

// ClusterAutomatedBackupPolicyInput is an input type that accepts ClusterAutomatedBackupPolicyArgs and ClusterAutomatedBackupPolicyOutput values.
// You can construct a concrete instance of `ClusterAutomatedBackupPolicyInput` via:
//
//	ClusterAutomatedBackupPolicyArgs{...}
type ClusterAutomatedBackupPolicyInput interface {
	pulumi.Input

	ToClusterAutomatedBackupPolicyOutput() ClusterAutomatedBackupPolicyOutput
	ToClusterAutomatedBackupPolicyOutputWithContext(context.Context) ClusterAutomatedBackupPolicyOutput
}

type ClusterAutomatedBackupPolicyArgs struct {
	// The length of the time window during which a backup can be taken. If a backup does not succeed within this time window, it will be canceled and considered failed.
	// The backup window must be at least 5 minutes long. There is no upper bound on the window. If not set, it will default to 1 hour.
	// A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
	BackupWindow pulumi.StringPtrInput `pulumi:"backupWindow"`
	// Whether automated automated backups are enabled.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Labels to apply to backups created using this configuration.
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// The location where the backup will be stored. Currently, the only supported option is to store the backup in the same region as the cluster.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Quantity-based Backup retention policy to retain recent backups.
	// Structure is documented below.
	QuantityBasedRetention ClusterAutomatedBackupPolicyQuantityBasedRetentionPtrInput `pulumi:"quantityBasedRetention"`
	// Time-based Backup retention policy.
	// Structure is documented below.
	TimeBasedRetention ClusterAutomatedBackupPolicyTimeBasedRetentionPtrInput `pulumi:"timeBasedRetention"`
	// Weekly schedule for the Backup.
	// Structure is documented below.
	WeeklySchedule ClusterAutomatedBackupPolicyWeeklyScheduleInput `pulumi:"weeklySchedule"`
}

func (ClusterAutomatedBackupPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAutomatedBackupPolicy)(nil)).Elem()
}

func (i ClusterAutomatedBackupPolicyArgs) ToClusterAutomatedBackupPolicyOutput() ClusterAutomatedBackupPolicyOutput {
	return i.ToClusterAutomatedBackupPolicyOutputWithContext(context.Background())
}

func (i ClusterAutomatedBackupPolicyArgs) ToClusterAutomatedBackupPolicyOutputWithContext(ctx context.Context) ClusterAutomatedBackupPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAutomatedBackupPolicyOutput)
}

func (i ClusterAutomatedBackupPolicyArgs) ToClusterAutomatedBackupPolicyPtrOutput() ClusterAutomatedBackupPolicyPtrOutput {
	return i.ToClusterAutomatedBackupPolicyPtrOutputWithContext(context.Background())
}

func (i ClusterAutomatedBackupPolicyArgs) ToClusterAutomatedBackupPolicyPtrOutputWithContext(ctx context.Context) ClusterAutomatedBackupPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAutomatedBackupPolicyOutput).ToClusterAutomatedBackupPolicyPtrOutputWithContext(ctx)
}

// ClusterAutomatedBackupPolicyPtrInput is an input type that accepts ClusterAutomatedBackupPolicyArgs, ClusterAutomatedBackupPolicyPtr and ClusterAutomatedBackupPolicyPtrOutput values.
// You can construct a concrete instance of `ClusterAutomatedBackupPolicyPtrInput` via:
//
//	        ClusterAutomatedBackupPolicyArgs{...}
//
//	or:
//
//	        nil
type ClusterAutomatedBackupPolicyPtrInput interface {
	pulumi.Input

	ToClusterAutomatedBackupPolicyPtrOutput() ClusterAutomatedBackupPolicyPtrOutput
	ToClusterAutomatedBackupPolicyPtrOutputWithContext(context.Context) ClusterAutomatedBackupPolicyPtrOutput
}

type clusterAutomatedBackupPolicyPtrType ClusterAutomatedBackupPolicyArgs

func ClusterAutomatedBackupPolicyPtr(v *ClusterAutomatedBackupPolicyArgs) ClusterAutomatedBackupPolicyPtrInput {
	return (*clusterAutomatedBackupPolicyPtrType)(v)
}

func (*clusterAutomatedBackupPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAutomatedBackupPolicy)(nil)).Elem()
}

func (i *clusterAutomatedBackupPolicyPtrType) ToClusterAutomatedBackupPolicyPtrOutput() ClusterAutomatedBackupPolicyPtrOutput {
	return i.ToClusterAutomatedBackupPolicyPtrOutputWithContext(context.Background())
}

func (i *clusterAutomatedBackupPolicyPtrType) ToClusterAutomatedBackupPolicyPtrOutputWithContext(ctx context.Context) ClusterAutomatedBackupPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAutomatedBackupPolicyPtrOutput)
}

type ClusterAutomatedBackupPolicyOutput struct{ *pulumi.OutputState }

func (ClusterAutomatedBackupPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAutomatedBackupPolicy)(nil)).Elem()
}

func (o ClusterAutomatedBackupPolicyOutput) ToClusterAutomatedBackupPolicyOutput() ClusterAutomatedBackupPolicyOutput {
	return o
}

func (o ClusterAutomatedBackupPolicyOutput) ToClusterAutomatedBackupPolicyOutputWithContext(ctx context.Context) ClusterAutomatedBackupPolicyOutput {
	return o
}

func (o ClusterAutomatedBackupPolicyOutput) ToClusterAutomatedBackupPolicyPtrOutput() ClusterAutomatedBackupPolicyPtrOutput {
	return o.ToClusterAutomatedBackupPolicyPtrOutputWithContext(context.Background())
}

func (o ClusterAutomatedBackupPolicyOutput) ToClusterAutomatedBackupPolicyPtrOutputWithContext(ctx context.Context) ClusterAutomatedBackupPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterAutomatedBackupPolicy) *ClusterAutomatedBackupPolicy {
		return &v
	}).(ClusterAutomatedBackupPolicyPtrOutput)
}

// The length of the time window during which a backup can be taken. If a backup does not succeed within this time window, it will be canceled and considered failed.
// The backup window must be at least 5 minutes long. There is no upper bound on the window. If not set, it will default to 1 hour.
// A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
func (o ClusterAutomatedBackupPolicyOutput) BackupWindow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterAutomatedBackupPolicy) *string { return v.BackupWindow }).(pulumi.StringPtrOutput)
}

// Whether automated automated backups are enabled.
func (o ClusterAutomatedBackupPolicyOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterAutomatedBackupPolicy) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Labels to apply to backups created using this configuration.
func (o ClusterAutomatedBackupPolicyOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterAutomatedBackupPolicy) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// The location where the backup will be stored. Currently, the only supported option is to store the backup in the same region as the cluster.
func (o ClusterAutomatedBackupPolicyOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterAutomatedBackupPolicy) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Quantity-based Backup retention policy to retain recent backups.
// Structure is documented below.
func (o ClusterAutomatedBackupPolicyOutput) QuantityBasedRetention() ClusterAutomatedBackupPolicyQuantityBasedRetentionPtrOutput {
	return o.ApplyT(func(v ClusterAutomatedBackupPolicy) *ClusterAutomatedBackupPolicyQuantityBasedRetention {
		return v.QuantityBasedRetention
	}).(ClusterAutomatedBackupPolicyQuantityBasedRetentionPtrOutput)
}

// Time-based Backup retention policy.
// Structure is documented below.
func (o ClusterAutomatedBackupPolicyOutput) TimeBasedRetention() ClusterAutomatedBackupPolicyTimeBasedRetentionPtrOutput {
	return o.ApplyT(func(v ClusterAutomatedBackupPolicy) *ClusterAutomatedBackupPolicyTimeBasedRetention {
		return v.TimeBasedRetention
	}).(ClusterAutomatedBackupPolicyTimeBasedRetentionPtrOutput)
}

// Weekly schedule for the Backup.
// Structure is documented below.
func (o ClusterAutomatedBackupPolicyOutput) WeeklySchedule() ClusterAutomatedBackupPolicyWeeklyScheduleOutput {
	return o.ApplyT(func(v ClusterAutomatedBackupPolicy) ClusterAutomatedBackupPolicyWeeklySchedule {
		return v.WeeklySchedule
	}).(ClusterAutomatedBackupPolicyWeeklyScheduleOutput)
}

type ClusterAutomatedBackupPolicyPtrOutput struct{ *pulumi.OutputState }

func (ClusterAutomatedBackupPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAutomatedBackupPolicy)(nil)).Elem()
}

func (o ClusterAutomatedBackupPolicyPtrOutput) ToClusterAutomatedBackupPolicyPtrOutput() ClusterAutomatedBackupPolicyPtrOutput {
	return o
}

func (o ClusterAutomatedBackupPolicyPtrOutput) ToClusterAutomatedBackupPolicyPtrOutputWithContext(ctx context.Context) ClusterAutomatedBackupPolicyPtrOutput {
	return o
}

func (o ClusterAutomatedBackupPolicyPtrOutput) Elem() ClusterAutomatedBackupPolicyOutput {
	return o.ApplyT(func(v *ClusterAutomatedBackupPolicy) ClusterAutomatedBackupPolicy {
		if v != nil {
			return *v
		}
		var ret ClusterAutomatedBackupPolicy
		return ret
	}).(ClusterAutomatedBackupPolicyOutput)
}

// The length of the time window during which a backup can be taken. If a backup does not succeed within this time window, it will be canceled and considered failed.
// The backup window must be at least 5 minutes long. There is no upper bound on the window. If not set, it will default to 1 hour.
// A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
func (o ClusterAutomatedBackupPolicyPtrOutput) BackupWindow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterAutomatedBackupPolicy) *string {
		if v == nil {
			return nil
		}
		return v.BackupWindow
	}).(pulumi.StringPtrOutput)
}

// Whether automated automated backups are enabled.
func (o ClusterAutomatedBackupPolicyPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterAutomatedBackupPolicy) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Labels to apply to backups created using this configuration.
func (o ClusterAutomatedBackupPolicyPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ClusterAutomatedBackupPolicy) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// The location where the backup will be stored. Currently, the only supported option is to store the backup in the same region as the cluster.
func (o ClusterAutomatedBackupPolicyPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterAutomatedBackupPolicy) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Quantity-based Backup retention policy to retain recent backups.
// Structure is documented below.
func (o ClusterAutomatedBackupPolicyPtrOutput) QuantityBasedRetention() ClusterAutomatedBackupPolicyQuantityBasedRetentionPtrOutput {
	return o.ApplyT(func(v *ClusterAutomatedBackupPolicy) *ClusterAutomatedBackupPolicyQuantityBasedRetention {
		if v == nil {
			return nil
		}
		return v.QuantityBasedRetention
	}).(ClusterAutomatedBackupPolicyQuantityBasedRetentionPtrOutput)
}

// Time-based Backup retention policy.
// Structure is documented below.
func (o ClusterAutomatedBackupPolicyPtrOutput) TimeBasedRetention() ClusterAutomatedBackupPolicyTimeBasedRetentionPtrOutput {
	return o.ApplyT(func(v *ClusterAutomatedBackupPolicy) *ClusterAutomatedBackupPolicyTimeBasedRetention {
		if v == nil {
			return nil
		}
		return v.TimeBasedRetention
	}).(ClusterAutomatedBackupPolicyTimeBasedRetentionPtrOutput)
}

// Weekly schedule for the Backup.
// Structure is documented below.
func (o ClusterAutomatedBackupPolicyPtrOutput) WeeklySchedule() ClusterAutomatedBackupPolicyWeeklySchedulePtrOutput {
	return o.ApplyT(func(v *ClusterAutomatedBackupPolicy) *ClusterAutomatedBackupPolicyWeeklySchedule {
		if v == nil {
			return nil
		}
		return &v.WeeklySchedule
	}).(ClusterAutomatedBackupPolicyWeeklySchedulePtrOutput)
}

type ClusterAutomatedBackupPolicyQuantityBasedRetention struct {
	// The number of backups to retain.
	Count *int `pulumi:"count"`
}

// ClusterAutomatedBackupPolicyQuantityBasedRetentionInput is an input type that accepts ClusterAutomatedBackupPolicyQuantityBasedRetentionArgs and ClusterAutomatedBackupPolicyQuantityBasedRetentionOutput values.
// You can construct a concrete instance of `ClusterAutomatedBackupPolicyQuantityBasedRetentionInput` via:
//
//	ClusterAutomatedBackupPolicyQuantityBasedRetentionArgs{...}
type ClusterAutomatedBackupPolicyQuantityBasedRetentionInput interface {
	pulumi.Input

	ToClusterAutomatedBackupPolicyQuantityBasedRetentionOutput() ClusterAutomatedBackupPolicyQuantityBasedRetentionOutput
	ToClusterAutomatedBackupPolicyQuantityBasedRetentionOutputWithContext(context.Context) ClusterAutomatedBackupPolicyQuantityBasedRetentionOutput
}

type ClusterAutomatedBackupPolicyQuantityBasedRetentionArgs struct {
	// The number of backups to retain.
	Count pulumi.IntPtrInput `pulumi:"count"`
}

func (ClusterAutomatedBackupPolicyQuantityBasedRetentionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAutomatedBackupPolicyQuantityBasedRetention)(nil)).Elem()
}

func (i ClusterAutomatedBackupPolicyQuantityBasedRetentionArgs) ToClusterAutomatedBackupPolicyQuantityBasedRetentionOutput() ClusterAutomatedBackupPolicyQuantityBasedRetentionOutput {
	return i.ToClusterAutomatedBackupPolicyQuantityBasedRetentionOutputWithContext(context.Background())
}

func (i ClusterAutomatedBackupPolicyQuantityBasedRetentionArgs) ToClusterAutomatedBackupPolicyQuantityBasedRetentionOutputWithContext(ctx context.Context) ClusterAutomatedBackupPolicyQuantityBasedRetentionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAutomatedBackupPolicyQuantityBasedRetentionOutput)
}

func (i ClusterAutomatedBackupPolicyQuantityBasedRetentionArgs) ToClusterAutomatedBackupPolicyQuantityBasedRetentionPtrOutput() ClusterAutomatedBackupPolicyQuantityBasedRetentionPtrOutput {
	return i.ToClusterAutomatedBackupPolicyQuantityBasedRetentionPtrOutputWithContext(context.Background())
}

func (i ClusterAutomatedBackupPolicyQuantityBasedRetentionArgs) ToClusterAutomatedBackupPolicyQuantityBasedRetentionPtrOutputWithContext(ctx context.Context) ClusterAutomatedBackupPolicyQuantityBasedRetentionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAutomatedBackupPolicyQuantityBasedRetentionOutput).ToClusterAutomatedBackupPolicyQuantityBasedRetentionPtrOutputWithContext(ctx)
}

// ClusterAutomatedBackupPolicyQuantityBasedRetentionPtrInput is an input type that accepts ClusterAutomatedBackupPolicyQuantityBasedRetentionArgs, ClusterAutomatedBackupPolicyQuantityBasedRetentionPtr and ClusterAutomatedBackupPolicyQuantityBasedRetentionPtrOutput values.
// You can construct a concrete instance of `ClusterAutomatedBackupPolicyQuantityBasedRetentionPtrInput` via:
//
//	        ClusterAutomatedBackupPolicyQuantityBasedRetentionArgs{...}
//
//	or:
//
//	        nil
type ClusterAutomatedBackupPolicyQuantityBasedRetentionPtrInput interface {
	pulumi.Input

	ToClusterAutomatedBackupPolicyQuantityBasedRetentionPtrOutput() ClusterAutomatedBackupPolicyQuantityBasedRetentionPtrOutput
	ToClusterAutomatedBackupPolicyQuantityBasedRetentionPtrOutputWithContext(context.Context) ClusterAutomatedBackupPolicyQuantityBasedRetentionPtrOutput
}

type clusterAutomatedBackupPolicyQuantityBasedRetentionPtrType ClusterAutomatedBackupPolicyQuantityBasedRetentionArgs

func ClusterAutomatedBackupPolicyQuantityBasedRetentionPtr(v *ClusterAutomatedBackupPolicyQuantityBasedRetentionArgs) ClusterAutomatedBackupPolicyQuantityBasedRetentionPtrInput {
	return (*clusterAutomatedBackupPolicyQuantityBasedRetentionPtrType)(v)
}

func (*clusterAutomatedBackupPolicyQuantityBasedRetentionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAutomatedBackupPolicyQuantityBasedRetention)(nil)).Elem()
}

func (i *clusterAutomatedBackupPolicyQuantityBasedRetentionPtrType) ToClusterAutomatedBackupPolicyQuantityBasedRetentionPtrOutput() ClusterAutomatedBackupPolicyQuantityBasedRetentionPtrOutput {
	return i.ToClusterAutomatedBackupPolicyQuantityBasedRetentionPtrOutputWithContext(context.Background())
}

func (i *clusterAutomatedBackupPolicyQuantityBasedRetentionPtrType) ToClusterAutomatedBackupPolicyQuantityBasedRetentionPtrOutputWithContext(ctx context.Context) ClusterAutomatedBackupPolicyQuantityBasedRetentionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAutomatedBackupPolicyQuantityBasedRetentionPtrOutput)
}

type ClusterAutomatedBackupPolicyQuantityBasedRetentionOutput struct{ *pulumi.OutputState }

func (ClusterAutomatedBackupPolicyQuantityBasedRetentionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAutomatedBackupPolicyQuantityBasedRetention)(nil)).Elem()
}

func (o ClusterAutomatedBackupPolicyQuantityBasedRetentionOutput) ToClusterAutomatedBackupPolicyQuantityBasedRetentionOutput() ClusterAutomatedBackupPolicyQuantityBasedRetentionOutput {
	return o
}

func (o ClusterAutomatedBackupPolicyQuantityBasedRetentionOutput) ToClusterAutomatedBackupPolicyQuantityBasedRetentionOutputWithContext(ctx context.Context) ClusterAutomatedBackupPolicyQuantityBasedRetentionOutput {
	return o
}

func (o ClusterAutomatedBackupPolicyQuantityBasedRetentionOutput) ToClusterAutomatedBackupPolicyQuantityBasedRetentionPtrOutput() ClusterAutomatedBackupPolicyQuantityBasedRetentionPtrOutput {
	return o.ToClusterAutomatedBackupPolicyQuantityBasedRetentionPtrOutputWithContext(context.Background())
}

func (o ClusterAutomatedBackupPolicyQuantityBasedRetentionOutput) ToClusterAutomatedBackupPolicyQuantityBasedRetentionPtrOutputWithContext(ctx context.Context) ClusterAutomatedBackupPolicyQuantityBasedRetentionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterAutomatedBackupPolicyQuantityBasedRetention) *ClusterAutomatedBackupPolicyQuantityBasedRetention {
		return &v
	}).(ClusterAutomatedBackupPolicyQuantityBasedRetentionPtrOutput)
}

// The number of backups to retain.
func (o ClusterAutomatedBackupPolicyQuantityBasedRetentionOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterAutomatedBackupPolicyQuantityBasedRetention) *int { return v.Count }).(pulumi.IntPtrOutput)
}

type ClusterAutomatedBackupPolicyQuantityBasedRetentionPtrOutput struct{ *pulumi.OutputState }

func (ClusterAutomatedBackupPolicyQuantityBasedRetentionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAutomatedBackupPolicyQuantityBasedRetention)(nil)).Elem()
}

func (o ClusterAutomatedBackupPolicyQuantityBasedRetentionPtrOutput) ToClusterAutomatedBackupPolicyQuantityBasedRetentionPtrOutput() ClusterAutomatedBackupPolicyQuantityBasedRetentionPtrOutput {
	return o
}

func (o ClusterAutomatedBackupPolicyQuantityBasedRetentionPtrOutput) ToClusterAutomatedBackupPolicyQuantityBasedRetentionPtrOutputWithContext(ctx context.Context) ClusterAutomatedBackupPolicyQuantityBasedRetentionPtrOutput {
	return o
}

func (o ClusterAutomatedBackupPolicyQuantityBasedRetentionPtrOutput) Elem() ClusterAutomatedBackupPolicyQuantityBasedRetentionOutput {
	return o.ApplyT(func(v *ClusterAutomatedBackupPolicyQuantityBasedRetention) ClusterAutomatedBackupPolicyQuantityBasedRetention {
		if v != nil {
			return *v
		}
		var ret ClusterAutomatedBackupPolicyQuantityBasedRetention
		return ret
	}).(ClusterAutomatedBackupPolicyQuantityBasedRetentionOutput)
}

// The number of backups to retain.
func (o ClusterAutomatedBackupPolicyQuantityBasedRetentionPtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterAutomatedBackupPolicyQuantityBasedRetention) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

type ClusterAutomatedBackupPolicyTimeBasedRetention struct {
	// The retention period.
	// A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
	RetentionPeriod *string `pulumi:"retentionPeriod"`
}

// ClusterAutomatedBackupPolicyTimeBasedRetentionInput is an input type that accepts ClusterAutomatedBackupPolicyTimeBasedRetentionArgs and ClusterAutomatedBackupPolicyTimeBasedRetentionOutput values.
// You can construct a concrete instance of `ClusterAutomatedBackupPolicyTimeBasedRetentionInput` via:
//
//	ClusterAutomatedBackupPolicyTimeBasedRetentionArgs{...}
type ClusterAutomatedBackupPolicyTimeBasedRetentionInput interface {
	pulumi.Input

	ToClusterAutomatedBackupPolicyTimeBasedRetentionOutput() ClusterAutomatedBackupPolicyTimeBasedRetentionOutput
	ToClusterAutomatedBackupPolicyTimeBasedRetentionOutputWithContext(context.Context) ClusterAutomatedBackupPolicyTimeBasedRetentionOutput
}

type ClusterAutomatedBackupPolicyTimeBasedRetentionArgs struct {
	// The retention period.
	// A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
	RetentionPeriod pulumi.StringPtrInput `pulumi:"retentionPeriod"`
}

func (ClusterAutomatedBackupPolicyTimeBasedRetentionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAutomatedBackupPolicyTimeBasedRetention)(nil)).Elem()
}

func (i ClusterAutomatedBackupPolicyTimeBasedRetentionArgs) ToClusterAutomatedBackupPolicyTimeBasedRetentionOutput() ClusterAutomatedBackupPolicyTimeBasedRetentionOutput {
	return i.ToClusterAutomatedBackupPolicyTimeBasedRetentionOutputWithContext(context.Background())
}

func (i ClusterAutomatedBackupPolicyTimeBasedRetentionArgs) ToClusterAutomatedBackupPolicyTimeBasedRetentionOutputWithContext(ctx context.Context) ClusterAutomatedBackupPolicyTimeBasedRetentionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAutomatedBackupPolicyTimeBasedRetentionOutput)
}

func (i ClusterAutomatedBackupPolicyTimeBasedRetentionArgs) ToClusterAutomatedBackupPolicyTimeBasedRetentionPtrOutput() ClusterAutomatedBackupPolicyTimeBasedRetentionPtrOutput {
	return i.ToClusterAutomatedBackupPolicyTimeBasedRetentionPtrOutputWithContext(context.Background())
}

func (i ClusterAutomatedBackupPolicyTimeBasedRetentionArgs) ToClusterAutomatedBackupPolicyTimeBasedRetentionPtrOutputWithContext(ctx context.Context) ClusterAutomatedBackupPolicyTimeBasedRetentionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAutomatedBackupPolicyTimeBasedRetentionOutput).ToClusterAutomatedBackupPolicyTimeBasedRetentionPtrOutputWithContext(ctx)
}

// ClusterAutomatedBackupPolicyTimeBasedRetentionPtrInput is an input type that accepts ClusterAutomatedBackupPolicyTimeBasedRetentionArgs, ClusterAutomatedBackupPolicyTimeBasedRetentionPtr and ClusterAutomatedBackupPolicyTimeBasedRetentionPtrOutput values.
// You can construct a concrete instance of `ClusterAutomatedBackupPolicyTimeBasedRetentionPtrInput` via:
//
//	        ClusterAutomatedBackupPolicyTimeBasedRetentionArgs{...}
//
//	or:
//
//	        nil
type ClusterAutomatedBackupPolicyTimeBasedRetentionPtrInput interface {
	pulumi.Input

	ToClusterAutomatedBackupPolicyTimeBasedRetentionPtrOutput() ClusterAutomatedBackupPolicyTimeBasedRetentionPtrOutput
	ToClusterAutomatedBackupPolicyTimeBasedRetentionPtrOutputWithContext(context.Context) ClusterAutomatedBackupPolicyTimeBasedRetentionPtrOutput
}

type clusterAutomatedBackupPolicyTimeBasedRetentionPtrType ClusterAutomatedBackupPolicyTimeBasedRetentionArgs

func ClusterAutomatedBackupPolicyTimeBasedRetentionPtr(v *ClusterAutomatedBackupPolicyTimeBasedRetentionArgs) ClusterAutomatedBackupPolicyTimeBasedRetentionPtrInput {
	return (*clusterAutomatedBackupPolicyTimeBasedRetentionPtrType)(v)
}

func (*clusterAutomatedBackupPolicyTimeBasedRetentionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAutomatedBackupPolicyTimeBasedRetention)(nil)).Elem()
}

func (i *clusterAutomatedBackupPolicyTimeBasedRetentionPtrType) ToClusterAutomatedBackupPolicyTimeBasedRetentionPtrOutput() ClusterAutomatedBackupPolicyTimeBasedRetentionPtrOutput {
	return i.ToClusterAutomatedBackupPolicyTimeBasedRetentionPtrOutputWithContext(context.Background())
}

func (i *clusterAutomatedBackupPolicyTimeBasedRetentionPtrType) ToClusterAutomatedBackupPolicyTimeBasedRetentionPtrOutputWithContext(ctx context.Context) ClusterAutomatedBackupPolicyTimeBasedRetentionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAutomatedBackupPolicyTimeBasedRetentionPtrOutput)
}

type ClusterAutomatedBackupPolicyTimeBasedRetentionOutput struct{ *pulumi.OutputState }

func (ClusterAutomatedBackupPolicyTimeBasedRetentionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAutomatedBackupPolicyTimeBasedRetention)(nil)).Elem()
}

func (o ClusterAutomatedBackupPolicyTimeBasedRetentionOutput) ToClusterAutomatedBackupPolicyTimeBasedRetentionOutput() ClusterAutomatedBackupPolicyTimeBasedRetentionOutput {
	return o
}

func (o ClusterAutomatedBackupPolicyTimeBasedRetentionOutput) ToClusterAutomatedBackupPolicyTimeBasedRetentionOutputWithContext(ctx context.Context) ClusterAutomatedBackupPolicyTimeBasedRetentionOutput {
	return o
}

func (o ClusterAutomatedBackupPolicyTimeBasedRetentionOutput) ToClusterAutomatedBackupPolicyTimeBasedRetentionPtrOutput() ClusterAutomatedBackupPolicyTimeBasedRetentionPtrOutput {
	return o.ToClusterAutomatedBackupPolicyTimeBasedRetentionPtrOutputWithContext(context.Background())
}

func (o ClusterAutomatedBackupPolicyTimeBasedRetentionOutput) ToClusterAutomatedBackupPolicyTimeBasedRetentionPtrOutputWithContext(ctx context.Context) ClusterAutomatedBackupPolicyTimeBasedRetentionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterAutomatedBackupPolicyTimeBasedRetention) *ClusterAutomatedBackupPolicyTimeBasedRetention {
		return &v
	}).(ClusterAutomatedBackupPolicyTimeBasedRetentionPtrOutput)
}

// The retention period.
// A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
func (o ClusterAutomatedBackupPolicyTimeBasedRetentionOutput) RetentionPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterAutomatedBackupPolicyTimeBasedRetention) *string { return v.RetentionPeriod }).(pulumi.StringPtrOutput)
}

type ClusterAutomatedBackupPolicyTimeBasedRetentionPtrOutput struct{ *pulumi.OutputState }

func (ClusterAutomatedBackupPolicyTimeBasedRetentionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAutomatedBackupPolicyTimeBasedRetention)(nil)).Elem()
}

func (o ClusterAutomatedBackupPolicyTimeBasedRetentionPtrOutput) ToClusterAutomatedBackupPolicyTimeBasedRetentionPtrOutput() ClusterAutomatedBackupPolicyTimeBasedRetentionPtrOutput {
	return o
}

func (o ClusterAutomatedBackupPolicyTimeBasedRetentionPtrOutput) ToClusterAutomatedBackupPolicyTimeBasedRetentionPtrOutputWithContext(ctx context.Context) ClusterAutomatedBackupPolicyTimeBasedRetentionPtrOutput {
	return o
}

func (o ClusterAutomatedBackupPolicyTimeBasedRetentionPtrOutput) Elem() ClusterAutomatedBackupPolicyTimeBasedRetentionOutput {
	return o.ApplyT(func(v *ClusterAutomatedBackupPolicyTimeBasedRetention) ClusterAutomatedBackupPolicyTimeBasedRetention {
		if v != nil {
			return *v
		}
		var ret ClusterAutomatedBackupPolicyTimeBasedRetention
		return ret
	}).(ClusterAutomatedBackupPolicyTimeBasedRetentionOutput)
}

// The retention period.
// A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
func (o ClusterAutomatedBackupPolicyTimeBasedRetentionPtrOutput) RetentionPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterAutomatedBackupPolicyTimeBasedRetention) *string {
		if v == nil {
			return nil
		}
		return v.RetentionPeriod
	}).(pulumi.StringPtrOutput)
}

type ClusterAutomatedBackupPolicyWeeklySchedule struct {
	// The days of the week to perform a backup. At least one day of the week must be provided.
	// Each value may be one of `MONDAY`, `TUESDAY`, `WEDNESDAY`, `THURSDAY`, `FRIDAY`, `SATURDAY`, and `SUNDAY`.
	DaysOfWeeks []string `pulumi:"daysOfWeeks"`
	// The times during the day to start a backup. At least one start time must be provided. The start times are assumed to be in UTC and to be an exact hour (e.g., 04:00:00).
	// Structure is documented below.
	StartTimes []ClusterAutomatedBackupPolicyWeeklyScheduleStartTime `pulumi:"startTimes"`
}

// ClusterAutomatedBackupPolicyWeeklyScheduleInput is an input type that accepts ClusterAutomatedBackupPolicyWeeklyScheduleArgs and ClusterAutomatedBackupPolicyWeeklyScheduleOutput values.
// You can construct a concrete instance of `ClusterAutomatedBackupPolicyWeeklyScheduleInput` via:
//
//	ClusterAutomatedBackupPolicyWeeklyScheduleArgs{...}
type ClusterAutomatedBackupPolicyWeeklyScheduleInput interface {
	pulumi.Input

	ToClusterAutomatedBackupPolicyWeeklyScheduleOutput() ClusterAutomatedBackupPolicyWeeklyScheduleOutput
	ToClusterAutomatedBackupPolicyWeeklyScheduleOutputWithContext(context.Context) ClusterAutomatedBackupPolicyWeeklyScheduleOutput
}

type ClusterAutomatedBackupPolicyWeeklyScheduleArgs struct {
	// The days of the week to perform a backup. At least one day of the week must be provided.
	// Each value may be one of `MONDAY`, `TUESDAY`, `WEDNESDAY`, `THURSDAY`, `FRIDAY`, `SATURDAY`, and `SUNDAY`.
	DaysOfWeeks pulumi.StringArrayInput `pulumi:"daysOfWeeks"`
	// The times during the day to start a backup. At least one start time must be provided. The start times are assumed to be in UTC and to be an exact hour (e.g., 04:00:00).
	// Structure is documented below.
	StartTimes ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArrayInput `pulumi:"startTimes"`
}

func (ClusterAutomatedBackupPolicyWeeklyScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAutomatedBackupPolicyWeeklySchedule)(nil)).Elem()
}

func (i ClusterAutomatedBackupPolicyWeeklyScheduleArgs) ToClusterAutomatedBackupPolicyWeeklyScheduleOutput() ClusterAutomatedBackupPolicyWeeklyScheduleOutput {
	return i.ToClusterAutomatedBackupPolicyWeeklyScheduleOutputWithContext(context.Background())
}

func (i ClusterAutomatedBackupPolicyWeeklyScheduleArgs) ToClusterAutomatedBackupPolicyWeeklyScheduleOutputWithContext(ctx context.Context) ClusterAutomatedBackupPolicyWeeklyScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAutomatedBackupPolicyWeeklyScheduleOutput)
}

func (i ClusterAutomatedBackupPolicyWeeklyScheduleArgs) ToClusterAutomatedBackupPolicyWeeklySchedulePtrOutput() ClusterAutomatedBackupPolicyWeeklySchedulePtrOutput {
	return i.ToClusterAutomatedBackupPolicyWeeklySchedulePtrOutputWithContext(context.Background())
}

func (i ClusterAutomatedBackupPolicyWeeklyScheduleArgs) ToClusterAutomatedBackupPolicyWeeklySchedulePtrOutputWithContext(ctx context.Context) ClusterAutomatedBackupPolicyWeeklySchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAutomatedBackupPolicyWeeklyScheduleOutput).ToClusterAutomatedBackupPolicyWeeklySchedulePtrOutputWithContext(ctx)
}

// ClusterAutomatedBackupPolicyWeeklySchedulePtrInput is an input type that accepts ClusterAutomatedBackupPolicyWeeklyScheduleArgs, ClusterAutomatedBackupPolicyWeeklySchedulePtr and ClusterAutomatedBackupPolicyWeeklySchedulePtrOutput values.
// You can construct a concrete instance of `ClusterAutomatedBackupPolicyWeeklySchedulePtrInput` via:
//
//	        ClusterAutomatedBackupPolicyWeeklyScheduleArgs{...}
//
//	or:
//
//	        nil
type ClusterAutomatedBackupPolicyWeeklySchedulePtrInput interface {
	pulumi.Input

	ToClusterAutomatedBackupPolicyWeeklySchedulePtrOutput() ClusterAutomatedBackupPolicyWeeklySchedulePtrOutput
	ToClusterAutomatedBackupPolicyWeeklySchedulePtrOutputWithContext(context.Context) ClusterAutomatedBackupPolicyWeeklySchedulePtrOutput
}

type clusterAutomatedBackupPolicyWeeklySchedulePtrType ClusterAutomatedBackupPolicyWeeklyScheduleArgs

func ClusterAutomatedBackupPolicyWeeklySchedulePtr(v *ClusterAutomatedBackupPolicyWeeklyScheduleArgs) ClusterAutomatedBackupPolicyWeeklySchedulePtrInput {
	return (*clusterAutomatedBackupPolicyWeeklySchedulePtrType)(v)
}

func (*clusterAutomatedBackupPolicyWeeklySchedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAutomatedBackupPolicyWeeklySchedule)(nil)).Elem()
}

func (i *clusterAutomatedBackupPolicyWeeklySchedulePtrType) ToClusterAutomatedBackupPolicyWeeklySchedulePtrOutput() ClusterAutomatedBackupPolicyWeeklySchedulePtrOutput {
	return i.ToClusterAutomatedBackupPolicyWeeklySchedulePtrOutputWithContext(context.Background())
}

func (i *clusterAutomatedBackupPolicyWeeklySchedulePtrType) ToClusterAutomatedBackupPolicyWeeklySchedulePtrOutputWithContext(ctx context.Context) ClusterAutomatedBackupPolicyWeeklySchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAutomatedBackupPolicyWeeklySchedulePtrOutput)
}

type ClusterAutomatedBackupPolicyWeeklyScheduleOutput struct{ *pulumi.OutputState }

func (ClusterAutomatedBackupPolicyWeeklyScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAutomatedBackupPolicyWeeklySchedule)(nil)).Elem()
}

func (o ClusterAutomatedBackupPolicyWeeklyScheduleOutput) ToClusterAutomatedBackupPolicyWeeklyScheduleOutput() ClusterAutomatedBackupPolicyWeeklyScheduleOutput {
	return o
}

func (o ClusterAutomatedBackupPolicyWeeklyScheduleOutput) ToClusterAutomatedBackupPolicyWeeklyScheduleOutputWithContext(ctx context.Context) ClusterAutomatedBackupPolicyWeeklyScheduleOutput {
	return o
}

func (o ClusterAutomatedBackupPolicyWeeklyScheduleOutput) ToClusterAutomatedBackupPolicyWeeklySchedulePtrOutput() ClusterAutomatedBackupPolicyWeeklySchedulePtrOutput {
	return o.ToClusterAutomatedBackupPolicyWeeklySchedulePtrOutputWithContext(context.Background())
}

func (o ClusterAutomatedBackupPolicyWeeklyScheduleOutput) ToClusterAutomatedBackupPolicyWeeklySchedulePtrOutputWithContext(ctx context.Context) ClusterAutomatedBackupPolicyWeeklySchedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterAutomatedBackupPolicyWeeklySchedule) *ClusterAutomatedBackupPolicyWeeklySchedule {
		return &v
	}).(ClusterAutomatedBackupPolicyWeeklySchedulePtrOutput)
}

// The days of the week to perform a backup. At least one day of the week must be provided.
// Each value may be one of `MONDAY`, `TUESDAY`, `WEDNESDAY`, `THURSDAY`, `FRIDAY`, `SATURDAY`, and `SUNDAY`.
func (o ClusterAutomatedBackupPolicyWeeklyScheduleOutput) DaysOfWeeks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterAutomatedBackupPolicyWeeklySchedule) []string { return v.DaysOfWeeks }).(pulumi.StringArrayOutput)
}

// The times during the day to start a backup. At least one start time must be provided. The start times are assumed to be in UTC and to be an exact hour (e.g., 04:00:00).
// Structure is documented below.
func (o ClusterAutomatedBackupPolicyWeeklyScheduleOutput) StartTimes() ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArrayOutput {
	return o.ApplyT(func(v ClusterAutomatedBackupPolicyWeeklySchedule) []ClusterAutomatedBackupPolicyWeeklyScheduleStartTime {
		return v.StartTimes
	}).(ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArrayOutput)
}

type ClusterAutomatedBackupPolicyWeeklySchedulePtrOutput struct{ *pulumi.OutputState }

func (ClusterAutomatedBackupPolicyWeeklySchedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAutomatedBackupPolicyWeeklySchedule)(nil)).Elem()
}

func (o ClusterAutomatedBackupPolicyWeeklySchedulePtrOutput) ToClusterAutomatedBackupPolicyWeeklySchedulePtrOutput() ClusterAutomatedBackupPolicyWeeklySchedulePtrOutput {
	return o
}

func (o ClusterAutomatedBackupPolicyWeeklySchedulePtrOutput) ToClusterAutomatedBackupPolicyWeeklySchedulePtrOutputWithContext(ctx context.Context) ClusterAutomatedBackupPolicyWeeklySchedulePtrOutput {
	return o
}

func (o ClusterAutomatedBackupPolicyWeeklySchedulePtrOutput) Elem() ClusterAutomatedBackupPolicyWeeklyScheduleOutput {
	return o.ApplyT(func(v *ClusterAutomatedBackupPolicyWeeklySchedule) ClusterAutomatedBackupPolicyWeeklySchedule {
		if v != nil {
			return *v
		}
		var ret ClusterAutomatedBackupPolicyWeeklySchedule
		return ret
	}).(ClusterAutomatedBackupPolicyWeeklyScheduleOutput)
}

// The days of the week to perform a backup. At least one day of the week must be provided.
// Each value may be one of `MONDAY`, `TUESDAY`, `WEDNESDAY`, `THURSDAY`, `FRIDAY`, `SATURDAY`, and `SUNDAY`.
func (o ClusterAutomatedBackupPolicyWeeklySchedulePtrOutput) DaysOfWeeks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterAutomatedBackupPolicyWeeklySchedule) []string {
		if v == nil {
			return nil
		}
		return v.DaysOfWeeks
	}).(pulumi.StringArrayOutput)
}

// The times during the day to start a backup. At least one start time must be provided. The start times are assumed to be in UTC and to be an exact hour (e.g., 04:00:00).
// Structure is documented below.
func (o ClusterAutomatedBackupPolicyWeeklySchedulePtrOutput) StartTimes() ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArrayOutput {
	return o.ApplyT(func(v *ClusterAutomatedBackupPolicyWeeklySchedule) []ClusterAutomatedBackupPolicyWeeklyScheduleStartTime {
		if v == nil {
			return nil
		}
		return v.StartTimes
	}).(ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArrayOutput)
}

type ClusterAutomatedBackupPolicyWeeklyScheduleStartTime struct {
	// Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value "24:00:00" for scenarios like business closing time.
	Hours *int `pulumi:"hours"`
	// Minutes of hour of day. Must be from 0 to 59.
	Minutes *int `pulumi:"minutes"`
	// Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
	Nanos *int `pulumi:"nanos"`
	// Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds.
	Seconds *int `pulumi:"seconds"`
}

// ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeInput is an input type that accepts ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArgs and ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeOutput values.
// You can construct a concrete instance of `ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeInput` via:
//
//	ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArgs{...}
type ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeInput interface {
	pulumi.Input

	ToClusterAutomatedBackupPolicyWeeklyScheduleStartTimeOutput() ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeOutput
	ToClusterAutomatedBackupPolicyWeeklyScheduleStartTimeOutputWithContext(context.Context) ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeOutput
}

type ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArgs struct {
	// Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value "24:00:00" for scenarios like business closing time.
	Hours pulumi.IntPtrInput `pulumi:"hours"`
	// Minutes of hour of day. Must be from 0 to 59.
	Minutes pulumi.IntPtrInput `pulumi:"minutes"`
	// Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
	Nanos pulumi.IntPtrInput `pulumi:"nanos"`
	// Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds.
	Seconds pulumi.IntPtrInput `pulumi:"seconds"`
}

func (ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAutomatedBackupPolicyWeeklyScheduleStartTime)(nil)).Elem()
}

func (i ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArgs) ToClusterAutomatedBackupPolicyWeeklyScheduleStartTimeOutput() ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeOutput {
	return i.ToClusterAutomatedBackupPolicyWeeklyScheduleStartTimeOutputWithContext(context.Background())
}

func (i ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArgs) ToClusterAutomatedBackupPolicyWeeklyScheduleStartTimeOutputWithContext(ctx context.Context) ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeOutput)
}

// ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArrayInput is an input type that accepts ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArray and ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArrayOutput values.
// You can construct a concrete instance of `ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArrayInput` via:
//
//	ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArray{ ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArgs{...} }
type ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArrayInput interface {
	pulumi.Input

	ToClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArrayOutput() ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArrayOutput
	ToClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArrayOutputWithContext(context.Context) ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArrayOutput
}

type ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArray []ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeInput

func (ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterAutomatedBackupPolicyWeeklyScheduleStartTime)(nil)).Elem()
}

func (i ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArray) ToClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArrayOutput() ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArrayOutput {
	return i.ToClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArrayOutputWithContext(context.Background())
}

func (i ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArray) ToClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArrayOutputWithContext(ctx context.Context) ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArrayOutput)
}

type ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeOutput struct{ *pulumi.OutputState }

func (ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAutomatedBackupPolicyWeeklyScheduleStartTime)(nil)).Elem()
}

func (o ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeOutput) ToClusterAutomatedBackupPolicyWeeklyScheduleStartTimeOutput() ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeOutput {
	return o
}

func (o ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeOutput) ToClusterAutomatedBackupPolicyWeeklyScheduleStartTimeOutputWithContext(ctx context.Context) ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeOutput {
	return o
}

// Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value "24:00:00" for scenarios like business closing time.
func (o ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeOutput) Hours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterAutomatedBackupPolicyWeeklyScheduleStartTime) *int { return v.Hours }).(pulumi.IntPtrOutput)
}

// Minutes of hour of day. Must be from 0 to 59.
func (o ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeOutput) Minutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterAutomatedBackupPolicyWeeklyScheduleStartTime) *int { return v.Minutes }).(pulumi.IntPtrOutput)
}

// Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
func (o ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeOutput) Nanos() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterAutomatedBackupPolicyWeeklyScheduleStartTime) *int { return v.Nanos }).(pulumi.IntPtrOutput)
}

// Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds.
func (o ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeOutput) Seconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterAutomatedBackupPolicyWeeklyScheduleStartTime) *int { return v.Seconds }).(pulumi.IntPtrOutput)
}

type ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArrayOutput struct{ *pulumi.OutputState }

func (ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterAutomatedBackupPolicyWeeklyScheduleStartTime)(nil)).Elem()
}

func (o ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArrayOutput) ToClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArrayOutput() ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArrayOutput {
	return o
}

func (o ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArrayOutput) ToClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArrayOutputWithContext(ctx context.Context) ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArrayOutput {
	return o
}

func (o ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArrayOutput) Index(i pulumi.IntInput) ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterAutomatedBackupPolicyWeeklyScheduleStartTime {
		return vs[0].([]ClusterAutomatedBackupPolicyWeeklyScheduleStartTime)[vs[1].(int)]
	}).(ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeOutput)
}

type ClusterBackupSource struct {
	// The name of the backup resource.
	BackupName *string `pulumi:"backupName"`
}

// ClusterBackupSourceInput is an input type that accepts ClusterBackupSourceArgs and ClusterBackupSourceOutput values.
// You can construct a concrete instance of `ClusterBackupSourceInput` via:
//
//	ClusterBackupSourceArgs{...}
type ClusterBackupSourceInput interface {
	pulumi.Input

	ToClusterBackupSourceOutput() ClusterBackupSourceOutput
	ToClusterBackupSourceOutputWithContext(context.Context) ClusterBackupSourceOutput
}

type ClusterBackupSourceArgs struct {
	// The name of the backup resource.
	BackupName pulumi.StringPtrInput `pulumi:"backupName"`
}

func (ClusterBackupSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBackupSource)(nil)).Elem()
}

func (i ClusterBackupSourceArgs) ToClusterBackupSourceOutput() ClusterBackupSourceOutput {
	return i.ToClusterBackupSourceOutputWithContext(context.Background())
}

func (i ClusterBackupSourceArgs) ToClusterBackupSourceOutputWithContext(ctx context.Context) ClusterBackupSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBackupSourceOutput)
}

// ClusterBackupSourceArrayInput is an input type that accepts ClusterBackupSourceArray and ClusterBackupSourceArrayOutput values.
// You can construct a concrete instance of `ClusterBackupSourceArrayInput` via:
//
//	ClusterBackupSourceArray{ ClusterBackupSourceArgs{...} }
type ClusterBackupSourceArrayInput interface {
	pulumi.Input

	ToClusterBackupSourceArrayOutput() ClusterBackupSourceArrayOutput
	ToClusterBackupSourceArrayOutputWithContext(context.Context) ClusterBackupSourceArrayOutput
}

type ClusterBackupSourceArray []ClusterBackupSourceInput

func (ClusterBackupSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterBackupSource)(nil)).Elem()
}

func (i ClusterBackupSourceArray) ToClusterBackupSourceArrayOutput() ClusterBackupSourceArrayOutput {
	return i.ToClusterBackupSourceArrayOutputWithContext(context.Background())
}

func (i ClusterBackupSourceArray) ToClusterBackupSourceArrayOutputWithContext(ctx context.Context) ClusterBackupSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBackupSourceArrayOutput)
}

type ClusterBackupSourceOutput struct{ *pulumi.OutputState }

func (ClusterBackupSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBackupSource)(nil)).Elem()
}

func (o ClusterBackupSourceOutput) ToClusterBackupSourceOutput() ClusterBackupSourceOutput {
	return o
}

func (o ClusterBackupSourceOutput) ToClusterBackupSourceOutputWithContext(ctx context.Context) ClusterBackupSourceOutput {
	return o
}

// The name of the backup resource.
func (o ClusterBackupSourceOutput) BackupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterBackupSource) *string { return v.BackupName }).(pulumi.StringPtrOutput)
}

type ClusterBackupSourceArrayOutput struct{ *pulumi.OutputState }

func (ClusterBackupSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterBackupSource)(nil)).Elem()
}

func (o ClusterBackupSourceArrayOutput) ToClusterBackupSourceArrayOutput() ClusterBackupSourceArrayOutput {
	return o
}

func (o ClusterBackupSourceArrayOutput) ToClusterBackupSourceArrayOutputWithContext(ctx context.Context) ClusterBackupSourceArrayOutput {
	return o
}

func (o ClusterBackupSourceArrayOutput) Index(i pulumi.IntInput) ClusterBackupSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterBackupSource {
		return vs[0].([]ClusterBackupSource)[vs[1].(int)]
	}).(ClusterBackupSourceOutput)
}

type ClusterInitialUser struct {
	// The initial password for the user.
	// **Note**: This property is sensitive and will not be displayed in the plan.
	Password string `pulumi:"password"`
	// The database username.
	User *string `pulumi:"user"`
}

// ClusterInitialUserInput is an input type that accepts ClusterInitialUserArgs and ClusterInitialUserOutput values.
// You can construct a concrete instance of `ClusterInitialUserInput` via:
//
//	ClusterInitialUserArgs{...}
type ClusterInitialUserInput interface {
	pulumi.Input

	ToClusterInitialUserOutput() ClusterInitialUserOutput
	ToClusterInitialUserOutputWithContext(context.Context) ClusterInitialUserOutput
}

type ClusterInitialUserArgs struct {
	// The initial password for the user.
	// **Note**: This property is sensitive and will not be displayed in the plan.
	Password pulumi.StringInput `pulumi:"password"`
	// The database username.
	User pulumi.StringPtrInput `pulumi:"user"`
}

func (ClusterInitialUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterInitialUser)(nil)).Elem()
}

func (i ClusterInitialUserArgs) ToClusterInitialUserOutput() ClusterInitialUserOutput {
	return i.ToClusterInitialUserOutputWithContext(context.Background())
}

func (i ClusterInitialUserArgs) ToClusterInitialUserOutputWithContext(ctx context.Context) ClusterInitialUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterInitialUserOutput)
}

func (i ClusterInitialUserArgs) ToClusterInitialUserPtrOutput() ClusterInitialUserPtrOutput {
	return i.ToClusterInitialUserPtrOutputWithContext(context.Background())
}

func (i ClusterInitialUserArgs) ToClusterInitialUserPtrOutputWithContext(ctx context.Context) ClusterInitialUserPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterInitialUserOutput).ToClusterInitialUserPtrOutputWithContext(ctx)
}

// ClusterInitialUserPtrInput is an input type that accepts ClusterInitialUserArgs, ClusterInitialUserPtr and ClusterInitialUserPtrOutput values.
// You can construct a concrete instance of `ClusterInitialUserPtrInput` via:
//
//	        ClusterInitialUserArgs{...}
//
//	or:
//
//	        nil
type ClusterInitialUserPtrInput interface {
	pulumi.Input

	ToClusterInitialUserPtrOutput() ClusterInitialUserPtrOutput
	ToClusterInitialUserPtrOutputWithContext(context.Context) ClusterInitialUserPtrOutput
}

type clusterInitialUserPtrType ClusterInitialUserArgs

func ClusterInitialUserPtr(v *ClusterInitialUserArgs) ClusterInitialUserPtrInput {
	return (*clusterInitialUserPtrType)(v)
}

func (*clusterInitialUserPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterInitialUser)(nil)).Elem()
}

func (i *clusterInitialUserPtrType) ToClusterInitialUserPtrOutput() ClusterInitialUserPtrOutput {
	return i.ToClusterInitialUserPtrOutputWithContext(context.Background())
}

func (i *clusterInitialUserPtrType) ToClusterInitialUserPtrOutputWithContext(ctx context.Context) ClusterInitialUserPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterInitialUserPtrOutput)
}

type ClusterInitialUserOutput struct{ *pulumi.OutputState }

func (ClusterInitialUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterInitialUser)(nil)).Elem()
}

func (o ClusterInitialUserOutput) ToClusterInitialUserOutput() ClusterInitialUserOutput {
	return o
}

func (o ClusterInitialUserOutput) ToClusterInitialUserOutputWithContext(ctx context.Context) ClusterInitialUserOutput {
	return o
}

func (o ClusterInitialUserOutput) ToClusterInitialUserPtrOutput() ClusterInitialUserPtrOutput {
	return o.ToClusterInitialUserPtrOutputWithContext(context.Background())
}

func (o ClusterInitialUserOutput) ToClusterInitialUserPtrOutputWithContext(ctx context.Context) ClusterInitialUserPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterInitialUser) *ClusterInitialUser {
		return &v
	}).(ClusterInitialUserPtrOutput)
}

// The initial password for the user.
// **Note**: This property is sensitive and will not be displayed in the plan.
func (o ClusterInitialUserOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterInitialUser) string { return v.Password }).(pulumi.StringOutput)
}

// The database username.
func (o ClusterInitialUserOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterInitialUser) *string { return v.User }).(pulumi.StringPtrOutput)
}

type ClusterInitialUserPtrOutput struct{ *pulumi.OutputState }

func (ClusterInitialUserPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterInitialUser)(nil)).Elem()
}

func (o ClusterInitialUserPtrOutput) ToClusterInitialUserPtrOutput() ClusterInitialUserPtrOutput {
	return o
}

func (o ClusterInitialUserPtrOutput) ToClusterInitialUserPtrOutputWithContext(ctx context.Context) ClusterInitialUserPtrOutput {
	return o
}

func (o ClusterInitialUserPtrOutput) Elem() ClusterInitialUserOutput {
	return o.ApplyT(func(v *ClusterInitialUser) ClusterInitialUser {
		if v != nil {
			return *v
		}
		var ret ClusterInitialUser
		return ret
	}).(ClusterInitialUserOutput)
}

// The initial password for the user.
// **Note**: This property is sensitive and will not be displayed in the plan.
func (o ClusterInitialUserPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterInitialUser) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// The database username.
func (o ClusterInitialUserPtrOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterInitialUser) *string {
		if v == nil {
			return nil
		}
		return v.User
	}).(pulumi.StringPtrOutput)
}

type ClusterMigrationSource struct {
	// The host and port of the on-premises instance in host:port format
	HostPort *string `pulumi:"hostPort"`
	// Place holder for the external source identifier(e.g DMS job name) that created the cluster.
	ReferenceId *string `pulumi:"referenceId"`
	// Type of migration source.
	SourceType *string `pulumi:"sourceType"`
}

// ClusterMigrationSourceInput is an input type that accepts ClusterMigrationSourceArgs and ClusterMigrationSourceOutput values.
// You can construct a concrete instance of `ClusterMigrationSourceInput` via:
//
//	ClusterMigrationSourceArgs{...}
type ClusterMigrationSourceInput interface {
	pulumi.Input

	ToClusterMigrationSourceOutput() ClusterMigrationSourceOutput
	ToClusterMigrationSourceOutputWithContext(context.Context) ClusterMigrationSourceOutput
}

type ClusterMigrationSourceArgs struct {
	// The host and port of the on-premises instance in host:port format
	HostPort pulumi.StringPtrInput `pulumi:"hostPort"`
	// Place holder for the external source identifier(e.g DMS job name) that created the cluster.
	ReferenceId pulumi.StringPtrInput `pulumi:"referenceId"`
	// Type of migration source.
	SourceType pulumi.StringPtrInput `pulumi:"sourceType"`
}

func (ClusterMigrationSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMigrationSource)(nil)).Elem()
}

func (i ClusterMigrationSourceArgs) ToClusterMigrationSourceOutput() ClusterMigrationSourceOutput {
	return i.ToClusterMigrationSourceOutputWithContext(context.Background())
}

func (i ClusterMigrationSourceArgs) ToClusterMigrationSourceOutputWithContext(ctx context.Context) ClusterMigrationSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMigrationSourceOutput)
}

// ClusterMigrationSourceArrayInput is an input type that accepts ClusterMigrationSourceArray and ClusterMigrationSourceArrayOutput values.
// You can construct a concrete instance of `ClusterMigrationSourceArrayInput` via:
//
//	ClusterMigrationSourceArray{ ClusterMigrationSourceArgs{...} }
type ClusterMigrationSourceArrayInput interface {
	pulumi.Input

	ToClusterMigrationSourceArrayOutput() ClusterMigrationSourceArrayOutput
	ToClusterMigrationSourceArrayOutputWithContext(context.Context) ClusterMigrationSourceArrayOutput
}

type ClusterMigrationSourceArray []ClusterMigrationSourceInput

func (ClusterMigrationSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterMigrationSource)(nil)).Elem()
}

func (i ClusterMigrationSourceArray) ToClusterMigrationSourceArrayOutput() ClusterMigrationSourceArrayOutput {
	return i.ToClusterMigrationSourceArrayOutputWithContext(context.Background())
}

func (i ClusterMigrationSourceArray) ToClusterMigrationSourceArrayOutputWithContext(ctx context.Context) ClusterMigrationSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMigrationSourceArrayOutput)
}

type ClusterMigrationSourceOutput struct{ *pulumi.OutputState }

func (ClusterMigrationSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMigrationSource)(nil)).Elem()
}

func (o ClusterMigrationSourceOutput) ToClusterMigrationSourceOutput() ClusterMigrationSourceOutput {
	return o
}

func (o ClusterMigrationSourceOutput) ToClusterMigrationSourceOutputWithContext(ctx context.Context) ClusterMigrationSourceOutput {
	return o
}

// The host and port of the on-premises instance in host:port format
func (o ClusterMigrationSourceOutput) HostPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMigrationSource) *string { return v.HostPort }).(pulumi.StringPtrOutput)
}

// Place holder for the external source identifier(e.g DMS job name) that created the cluster.
func (o ClusterMigrationSourceOutput) ReferenceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMigrationSource) *string { return v.ReferenceId }).(pulumi.StringPtrOutput)
}

// Type of migration source.
func (o ClusterMigrationSourceOutput) SourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMigrationSource) *string { return v.SourceType }).(pulumi.StringPtrOutput)
}

type ClusterMigrationSourceArrayOutput struct{ *pulumi.OutputState }

func (ClusterMigrationSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterMigrationSource)(nil)).Elem()
}

func (o ClusterMigrationSourceArrayOutput) ToClusterMigrationSourceArrayOutput() ClusterMigrationSourceArrayOutput {
	return o
}

func (o ClusterMigrationSourceArrayOutput) ToClusterMigrationSourceArrayOutputWithContext(ctx context.Context) ClusterMigrationSourceArrayOutput {
	return o
}

func (o ClusterMigrationSourceArrayOutput) Index(i pulumi.IntInput) ClusterMigrationSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterMigrationSource {
		return vs[0].([]ClusterMigrationSource)[vs[1].(int)]
	}).(ClusterMigrationSourceOutput)
}

type InstanceMachineConfig struct {
	// The number of CPU's in the VM instance.
	CpuCount *int `pulumi:"cpuCount"`
}

// InstanceMachineConfigInput is an input type that accepts InstanceMachineConfigArgs and InstanceMachineConfigOutput values.
// You can construct a concrete instance of `InstanceMachineConfigInput` via:
//
//	InstanceMachineConfigArgs{...}
type InstanceMachineConfigInput interface {
	pulumi.Input

	ToInstanceMachineConfigOutput() InstanceMachineConfigOutput
	ToInstanceMachineConfigOutputWithContext(context.Context) InstanceMachineConfigOutput
}

type InstanceMachineConfigArgs struct {
	// The number of CPU's in the VM instance.
	CpuCount pulumi.IntPtrInput `pulumi:"cpuCount"`
}

func (InstanceMachineConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceMachineConfig)(nil)).Elem()
}

func (i InstanceMachineConfigArgs) ToInstanceMachineConfigOutput() InstanceMachineConfigOutput {
	return i.ToInstanceMachineConfigOutputWithContext(context.Background())
}

func (i InstanceMachineConfigArgs) ToInstanceMachineConfigOutputWithContext(ctx context.Context) InstanceMachineConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMachineConfigOutput)
}

func (i InstanceMachineConfigArgs) ToInstanceMachineConfigPtrOutput() InstanceMachineConfigPtrOutput {
	return i.ToInstanceMachineConfigPtrOutputWithContext(context.Background())
}

func (i InstanceMachineConfigArgs) ToInstanceMachineConfigPtrOutputWithContext(ctx context.Context) InstanceMachineConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMachineConfigOutput).ToInstanceMachineConfigPtrOutputWithContext(ctx)
}

// InstanceMachineConfigPtrInput is an input type that accepts InstanceMachineConfigArgs, InstanceMachineConfigPtr and InstanceMachineConfigPtrOutput values.
// You can construct a concrete instance of `InstanceMachineConfigPtrInput` via:
//
//	        InstanceMachineConfigArgs{...}
//
//	or:
//
//	        nil
type InstanceMachineConfigPtrInput interface {
	pulumi.Input

	ToInstanceMachineConfigPtrOutput() InstanceMachineConfigPtrOutput
	ToInstanceMachineConfigPtrOutputWithContext(context.Context) InstanceMachineConfigPtrOutput
}

type instanceMachineConfigPtrType InstanceMachineConfigArgs

func InstanceMachineConfigPtr(v *InstanceMachineConfigArgs) InstanceMachineConfigPtrInput {
	return (*instanceMachineConfigPtrType)(v)
}

func (*instanceMachineConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceMachineConfig)(nil)).Elem()
}

func (i *instanceMachineConfigPtrType) ToInstanceMachineConfigPtrOutput() InstanceMachineConfigPtrOutput {
	return i.ToInstanceMachineConfigPtrOutputWithContext(context.Background())
}

func (i *instanceMachineConfigPtrType) ToInstanceMachineConfigPtrOutputWithContext(ctx context.Context) InstanceMachineConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMachineConfigPtrOutput)
}

type InstanceMachineConfigOutput struct{ *pulumi.OutputState }

func (InstanceMachineConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceMachineConfig)(nil)).Elem()
}

func (o InstanceMachineConfigOutput) ToInstanceMachineConfigOutput() InstanceMachineConfigOutput {
	return o
}

func (o InstanceMachineConfigOutput) ToInstanceMachineConfigOutputWithContext(ctx context.Context) InstanceMachineConfigOutput {
	return o
}

func (o InstanceMachineConfigOutput) ToInstanceMachineConfigPtrOutput() InstanceMachineConfigPtrOutput {
	return o.ToInstanceMachineConfigPtrOutputWithContext(context.Background())
}

func (o InstanceMachineConfigOutput) ToInstanceMachineConfigPtrOutputWithContext(ctx context.Context) InstanceMachineConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceMachineConfig) *InstanceMachineConfig {
		return &v
	}).(InstanceMachineConfigPtrOutput)
}

// The number of CPU's in the VM instance.
func (o InstanceMachineConfigOutput) CpuCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceMachineConfig) *int { return v.CpuCount }).(pulumi.IntPtrOutput)
}

type InstanceMachineConfigPtrOutput struct{ *pulumi.OutputState }

func (InstanceMachineConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceMachineConfig)(nil)).Elem()
}

func (o InstanceMachineConfigPtrOutput) ToInstanceMachineConfigPtrOutput() InstanceMachineConfigPtrOutput {
	return o
}

func (o InstanceMachineConfigPtrOutput) ToInstanceMachineConfigPtrOutputWithContext(ctx context.Context) InstanceMachineConfigPtrOutput {
	return o
}

func (o InstanceMachineConfigPtrOutput) Elem() InstanceMachineConfigOutput {
	return o.ApplyT(func(v *InstanceMachineConfig) InstanceMachineConfig {
		if v != nil {
			return *v
		}
		var ret InstanceMachineConfig
		return ret
	}).(InstanceMachineConfigOutput)
}

// The number of CPU's in the VM instance.
func (o InstanceMachineConfigPtrOutput) CpuCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceMachineConfig) *int {
		if v == nil {
			return nil
		}
		return v.CpuCount
	}).(pulumi.IntPtrOutput)
}

type InstanceReadPoolConfig struct {
	// Read capacity, i.e. number of nodes in a read pool instance.
	NodeCount *int `pulumi:"nodeCount"`
}

// InstanceReadPoolConfigInput is an input type that accepts InstanceReadPoolConfigArgs and InstanceReadPoolConfigOutput values.
// You can construct a concrete instance of `InstanceReadPoolConfigInput` via:
//
//	InstanceReadPoolConfigArgs{...}
type InstanceReadPoolConfigInput interface {
	pulumi.Input

	ToInstanceReadPoolConfigOutput() InstanceReadPoolConfigOutput
	ToInstanceReadPoolConfigOutputWithContext(context.Context) InstanceReadPoolConfigOutput
}

type InstanceReadPoolConfigArgs struct {
	// Read capacity, i.e. number of nodes in a read pool instance.
	NodeCount pulumi.IntPtrInput `pulumi:"nodeCount"`
}

func (InstanceReadPoolConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceReadPoolConfig)(nil)).Elem()
}

func (i InstanceReadPoolConfigArgs) ToInstanceReadPoolConfigOutput() InstanceReadPoolConfigOutput {
	return i.ToInstanceReadPoolConfigOutputWithContext(context.Background())
}

func (i InstanceReadPoolConfigArgs) ToInstanceReadPoolConfigOutputWithContext(ctx context.Context) InstanceReadPoolConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceReadPoolConfigOutput)
}

func (i InstanceReadPoolConfigArgs) ToInstanceReadPoolConfigPtrOutput() InstanceReadPoolConfigPtrOutput {
	return i.ToInstanceReadPoolConfigPtrOutputWithContext(context.Background())
}

func (i InstanceReadPoolConfigArgs) ToInstanceReadPoolConfigPtrOutputWithContext(ctx context.Context) InstanceReadPoolConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceReadPoolConfigOutput).ToInstanceReadPoolConfigPtrOutputWithContext(ctx)
}

// InstanceReadPoolConfigPtrInput is an input type that accepts InstanceReadPoolConfigArgs, InstanceReadPoolConfigPtr and InstanceReadPoolConfigPtrOutput values.
// You can construct a concrete instance of `InstanceReadPoolConfigPtrInput` via:
//
//	        InstanceReadPoolConfigArgs{...}
//
//	or:
//
//	        nil
type InstanceReadPoolConfigPtrInput interface {
	pulumi.Input

	ToInstanceReadPoolConfigPtrOutput() InstanceReadPoolConfigPtrOutput
	ToInstanceReadPoolConfigPtrOutputWithContext(context.Context) InstanceReadPoolConfigPtrOutput
}

type instanceReadPoolConfigPtrType InstanceReadPoolConfigArgs

func InstanceReadPoolConfigPtr(v *InstanceReadPoolConfigArgs) InstanceReadPoolConfigPtrInput {
	return (*instanceReadPoolConfigPtrType)(v)
}

func (*instanceReadPoolConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceReadPoolConfig)(nil)).Elem()
}

func (i *instanceReadPoolConfigPtrType) ToInstanceReadPoolConfigPtrOutput() InstanceReadPoolConfigPtrOutput {
	return i.ToInstanceReadPoolConfigPtrOutputWithContext(context.Background())
}

func (i *instanceReadPoolConfigPtrType) ToInstanceReadPoolConfigPtrOutputWithContext(ctx context.Context) InstanceReadPoolConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceReadPoolConfigPtrOutput)
}

type InstanceReadPoolConfigOutput struct{ *pulumi.OutputState }

func (InstanceReadPoolConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceReadPoolConfig)(nil)).Elem()
}

func (o InstanceReadPoolConfigOutput) ToInstanceReadPoolConfigOutput() InstanceReadPoolConfigOutput {
	return o
}

func (o InstanceReadPoolConfigOutput) ToInstanceReadPoolConfigOutputWithContext(ctx context.Context) InstanceReadPoolConfigOutput {
	return o
}

func (o InstanceReadPoolConfigOutput) ToInstanceReadPoolConfigPtrOutput() InstanceReadPoolConfigPtrOutput {
	return o.ToInstanceReadPoolConfigPtrOutputWithContext(context.Background())
}

func (o InstanceReadPoolConfigOutput) ToInstanceReadPoolConfigPtrOutputWithContext(ctx context.Context) InstanceReadPoolConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceReadPoolConfig) *InstanceReadPoolConfig {
		return &v
	}).(InstanceReadPoolConfigPtrOutput)
}

// Read capacity, i.e. number of nodes in a read pool instance.
func (o InstanceReadPoolConfigOutput) NodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceReadPoolConfig) *int { return v.NodeCount }).(pulumi.IntPtrOutput)
}

type InstanceReadPoolConfigPtrOutput struct{ *pulumi.OutputState }

func (InstanceReadPoolConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceReadPoolConfig)(nil)).Elem()
}

func (o InstanceReadPoolConfigPtrOutput) ToInstanceReadPoolConfigPtrOutput() InstanceReadPoolConfigPtrOutput {
	return o
}

func (o InstanceReadPoolConfigPtrOutput) ToInstanceReadPoolConfigPtrOutputWithContext(ctx context.Context) InstanceReadPoolConfigPtrOutput {
	return o
}

func (o InstanceReadPoolConfigPtrOutput) Elem() InstanceReadPoolConfigOutput {
	return o.ApplyT(func(v *InstanceReadPoolConfig) InstanceReadPoolConfig {
		if v != nil {
			return *v
		}
		var ret InstanceReadPoolConfig
		return ret
	}).(InstanceReadPoolConfigOutput)
}

// Read capacity, i.e. number of nodes in a read pool instance.
func (o InstanceReadPoolConfigPtrOutput) NodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceReadPoolConfig) *int {
		if v == nil {
			return nil
		}
		return v.NodeCount
	}).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAutomatedBackupPolicyInput)(nil)).Elem(), ClusterAutomatedBackupPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAutomatedBackupPolicyPtrInput)(nil)).Elem(), ClusterAutomatedBackupPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAutomatedBackupPolicyQuantityBasedRetentionInput)(nil)).Elem(), ClusterAutomatedBackupPolicyQuantityBasedRetentionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAutomatedBackupPolicyQuantityBasedRetentionPtrInput)(nil)).Elem(), ClusterAutomatedBackupPolicyQuantityBasedRetentionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAutomatedBackupPolicyTimeBasedRetentionInput)(nil)).Elem(), ClusterAutomatedBackupPolicyTimeBasedRetentionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAutomatedBackupPolicyTimeBasedRetentionPtrInput)(nil)).Elem(), ClusterAutomatedBackupPolicyTimeBasedRetentionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAutomatedBackupPolicyWeeklyScheduleInput)(nil)).Elem(), ClusterAutomatedBackupPolicyWeeklyScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAutomatedBackupPolicyWeeklySchedulePtrInput)(nil)).Elem(), ClusterAutomatedBackupPolicyWeeklyScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeInput)(nil)).Elem(), ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArrayInput)(nil)).Elem(), ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterBackupSourceInput)(nil)).Elem(), ClusterBackupSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterBackupSourceArrayInput)(nil)).Elem(), ClusterBackupSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterInitialUserInput)(nil)).Elem(), ClusterInitialUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterInitialUserPtrInput)(nil)).Elem(), ClusterInitialUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterMigrationSourceInput)(nil)).Elem(), ClusterMigrationSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterMigrationSourceArrayInput)(nil)).Elem(), ClusterMigrationSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceMachineConfigInput)(nil)).Elem(), InstanceMachineConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceMachineConfigPtrInput)(nil)).Elem(), InstanceMachineConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceReadPoolConfigInput)(nil)).Elem(), InstanceReadPoolConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceReadPoolConfigPtrInput)(nil)).Elem(), InstanceReadPoolConfigArgs{})
	pulumi.RegisterOutputType(ClusterAutomatedBackupPolicyOutput{})
	pulumi.RegisterOutputType(ClusterAutomatedBackupPolicyPtrOutput{})
	pulumi.RegisterOutputType(ClusterAutomatedBackupPolicyQuantityBasedRetentionOutput{})
	pulumi.RegisterOutputType(ClusterAutomatedBackupPolicyQuantityBasedRetentionPtrOutput{})
	pulumi.RegisterOutputType(ClusterAutomatedBackupPolicyTimeBasedRetentionOutput{})
	pulumi.RegisterOutputType(ClusterAutomatedBackupPolicyTimeBasedRetentionPtrOutput{})
	pulumi.RegisterOutputType(ClusterAutomatedBackupPolicyWeeklyScheduleOutput{})
	pulumi.RegisterOutputType(ClusterAutomatedBackupPolicyWeeklySchedulePtrOutput{})
	pulumi.RegisterOutputType(ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeOutput{})
	pulumi.RegisterOutputType(ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArrayOutput{})
	pulumi.RegisterOutputType(ClusterBackupSourceOutput{})
	pulumi.RegisterOutputType(ClusterBackupSourceArrayOutput{})
	pulumi.RegisterOutputType(ClusterInitialUserOutput{})
	pulumi.RegisterOutputType(ClusterInitialUserPtrOutput{})
	pulumi.RegisterOutputType(ClusterMigrationSourceOutput{})
	pulumi.RegisterOutputType(ClusterMigrationSourceArrayOutput{})
	pulumi.RegisterOutputType(InstanceMachineConfigOutput{})
	pulumi.RegisterOutputType(InstanceMachineConfigPtrOutput{})
	pulumi.RegisterOutputType(InstanceReadPoolConfigOutput{})
	pulumi.RegisterOutputType(InstanceReadPoolConfigPtrOutput{})
}
