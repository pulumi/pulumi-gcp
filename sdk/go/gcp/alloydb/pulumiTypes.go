// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package alloydb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type BackupEncryptionConfig struct {
	// The fully-qualified resource name of the KMS key. Each Cloud KMS key is regionalized and has the following format: projects/[PROJECT]/locations/[REGION]/keyRings/[RING]/cryptoKeys/[KEY_NAME].
	KmsKeyName *string `pulumi:"kmsKeyName"`
}

// BackupEncryptionConfigInput is an input type that accepts BackupEncryptionConfigArgs and BackupEncryptionConfigOutput values.
// You can construct a concrete instance of `BackupEncryptionConfigInput` via:
//
//	BackupEncryptionConfigArgs{...}
type BackupEncryptionConfigInput interface {
	pulumi.Input

	ToBackupEncryptionConfigOutput() BackupEncryptionConfigOutput
	ToBackupEncryptionConfigOutputWithContext(context.Context) BackupEncryptionConfigOutput
}

type BackupEncryptionConfigArgs struct {
	// The fully-qualified resource name of the KMS key. Each Cloud KMS key is regionalized and has the following format: projects/[PROJECT]/locations/[REGION]/keyRings/[RING]/cryptoKeys/[KEY_NAME].
	KmsKeyName pulumi.StringPtrInput `pulumi:"kmsKeyName"`
}

func (BackupEncryptionConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupEncryptionConfig)(nil)).Elem()
}

func (i BackupEncryptionConfigArgs) ToBackupEncryptionConfigOutput() BackupEncryptionConfigOutput {
	return i.ToBackupEncryptionConfigOutputWithContext(context.Background())
}

func (i BackupEncryptionConfigArgs) ToBackupEncryptionConfigOutputWithContext(ctx context.Context) BackupEncryptionConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupEncryptionConfigOutput)
}

func (i BackupEncryptionConfigArgs) ToOutput(ctx context.Context) pulumix.Output[BackupEncryptionConfig] {
	return pulumix.Output[BackupEncryptionConfig]{
		OutputState: i.ToBackupEncryptionConfigOutputWithContext(ctx).OutputState,
	}
}

func (i BackupEncryptionConfigArgs) ToBackupEncryptionConfigPtrOutput() BackupEncryptionConfigPtrOutput {
	return i.ToBackupEncryptionConfigPtrOutputWithContext(context.Background())
}

func (i BackupEncryptionConfigArgs) ToBackupEncryptionConfigPtrOutputWithContext(ctx context.Context) BackupEncryptionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupEncryptionConfigOutput).ToBackupEncryptionConfigPtrOutputWithContext(ctx)
}

// BackupEncryptionConfigPtrInput is an input type that accepts BackupEncryptionConfigArgs, BackupEncryptionConfigPtr and BackupEncryptionConfigPtrOutput values.
// You can construct a concrete instance of `BackupEncryptionConfigPtrInput` via:
//
//	        BackupEncryptionConfigArgs{...}
//
//	or:
//
//	        nil
type BackupEncryptionConfigPtrInput interface {
	pulumi.Input

	ToBackupEncryptionConfigPtrOutput() BackupEncryptionConfigPtrOutput
	ToBackupEncryptionConfigPtrOutputWithContext(context.Context) BackupEncryptionConfigPtrOutput
}

type backupEncryptionConfigPtrType BackupEncryptionConfigArgs

func BackupEncryptionConfigPtr(v *BackupEncryptionConfigArgs) BackupEncryptionConfigPtrInput {
	return (*backupEncryptionConfigPtrType)(v)
}

func (*backupEncryptionConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupEncryptionConfig)(nil)).Elem()
}

func (i *backupEncryptionConfigPtrType) ToBackupEncryptionConfigPtrOutput() BackupEncryptionConfigPtrOutput {
	return i.ToBackupEncryptionConfigPtrOutputWithContext(context.Background())
}

func (i *backupEncryptionConfigPtrType) ToBackupEncryptionConfigPtrOutputWithContext(ctx context.Context) BackupEncryptionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupEncryptionConfigPtrOutput)
}

func (i *backupEncryptionConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*BackupEncryptionConfig] {
	return pulumix.Output[*BackupEncryptionConfig]{
		OutputState: i.ToBackupEncryptionConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type BackupEncryptionConfigOutput struct{ *pulumi.OutputState }

func (BackupEncryptionConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupEncryptionConfig)(nil)).Elem()
}

func (o BackupEncryptionConfigOutput) ToBackupEncryptionConfigOutput() BackupEncryptionConfigOutput {
	return o
}

func (o BackupEncryptionConfigOutput) ToBackupEncryptionConfigOutputWithContext(ctx context.Context) BackupEncryptionConfigOutput {
	return o
}

func (o BackupEncryptionConfigOutput) ToBackupEncryptionConfigPtrOutput() BackupEncryptionConfigPtrOutput {
	return o.ToBackupEncryptionConfigPtrOutputWithContext(context.Background())
}

func (o BackupEncryptionConfigOutput) ToBackupEncryptionConfigPtrOutputWithContext(ctx context.Context) BackupEncryptionConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BackupEncryptionConfig) *BackupEncryptionConfig {
		return &v
	}).(BackupEncryptionConfigPtrOutput)
}

func (o BackupEncryptionConfigOutput) ToOutput(ctx context.Context) pulumix.Output[BackupEncryptionConfig] {
	return pulumix.Output[BackupEncryptionConfig]{
		OutputState: o.OutputState,
	}
}

// The fully-qualified resource name of the KMS key. Each Cloud KMS key is regionalized and has the following format: projects/[PROJECT]/locations/[REGION]/keyRings/[RING]/cryptoKeys/[KEY_NAME].
func (o BackupEncryptionConfigOutput) KmsKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupEncryptionConfig) *string { return v.KmsKeyName }).(pulumi.StringPtrOutput)
}

type BackupEncryptionConfigPtrOutput struct{ *pulumi.OutputState }

func (BackupEncryptionConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupEncryptionConfig)(nil)).Elem()
}

func (o BackupEncryptionConfigPtrOutput) ToBackupEncryptionConfigPtrOutput() BackupEncryptionConfigPtrOutput {
	return o
}

func (o BackupEncryptionConfigPtrOutput) ToBackupEncryptionConfigPtrOutputWithContext(ctx context.Context) BackupEncryptionConfigPtrOutput {
	return o
}

func (o BackupEncryptionConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BackupEncryptionConfig] {
	return pulumix.Output[*BackupEncryptionConfig]{
		OutputState: o.OutputState,
	}
}

func (o BackupEncryptionConfigPtrOutput) Elem() BackupEncryptionConfigOutput {
	return o.ApplyT(func(v *BackupEncryptionConfig) BackupEncryptionConfig {
		if v != nil {
			return *v
		}
		var ret BackupEncryptionConfig
		return ret
	}).(BackupEncryptionConfigOutput)
}

// The fully-qualified resource name of the KMS key. Each Cloud KMS key is regionalized and has the following format: projects/[PROJECT]/locations/[REGION]/keyRings/[RING]/cryptoKeys/[KEY_NAME].
func (o BackupEncryptionConfigPtrOutput) KmsKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupEncryptionConfig) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyName
	}).(pulumi.StringPtrOutput)
}

type BackupEncryptionInfo struct {
	// (Output)
	// Output only. Type of encryption.
	EncryptionType *string `pulumi:"encryptionType"`
	// (Output)
	// Output only. Cloud KMS key versions that are being used to protect the database or the backup.
	KmsKeyVersions []string `pulumi:"kmsKeyVersions"`
}

// BackupEncryptionInfoInput is an input type that accepts BackupEncryptionInfoArgs and BackupEncryptionInfoOutput values.
// You can construct a concrete instance of `BackupEncryptionInfoInput` via:
//
//	BackupEncryptionInfoArgs{...}
type BackupEncryptionInfoInput interface {
	pulumi.Input

	ToBackupEncryptionInfoOutput() BackupEncryptionInfoOutput
	ToBackupEncryptionInfoOutputWithContext(context.Context) BackupEncryptionInfoOutput
}

type BackupEncryptionInfoArgs struct {
	// (Output)
	// Output only. Type of encryption.
	EncryptionType pulumi.StringPtrInput `pulumi:"encryptionType"`
	// (Output)
	// Output only. Cloud KMS key versions that are being used to protect the database or the backup.
	KmsKeyVersions pulumi.StringArrayInput `pulumi:"kmsKeyVersions"`
}

func (BackupEncryptionInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupEncryptionInfo)(nil)).Elem()
}

func (i BackupEncryptionInfoArgs) ToBackupEncryptionInfoOutput() BackupEncryptionInfoOutput {
	return i.ToBackupEncryptionInfoOutputWithContext(context.Background())
}

func (i BackupEncryptionInfoArgs) ToBackupEncryptionInfoOutputWithContext(ctx context.Context) BackupEncryptionInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupEncryptionInfoOutput)
}

func (i BackupEncryptionInfoArgs) ToOutput(ctx context.Context) pulumix.Output[BackupEncryptionInfo] {
	return pulumix.Output[BackupEncryptionInfo]{
		OutputState: i.ToBackupEncryptionInfoOutputWithContext(ctx).OutputState,
	}
}

// BackupEncryptionInfoArrayInput is an input type that accepts BackupEncryptionInfoArray and BackupEncryptionInfoArrayOutput values.
// You can construct a concrete instance of `BackupEncryptionInfoArrayInput` via:
//
//	BackupEncryptionInfoArray{ BackupEncryptionInfoArgs{...} }
type BackupEncryptionInfoArrayInput interface {
	pulumi.Input

	ToBackupEncryptionInfoArrayOutput() BackupEncryptionInfoArrayOutput
	ToBackupEncryptionInfoArrayOutputWithContext(context.Context) BackupEncryptionInfoArrayOutput
}

type BackupEncryptionInfoArray []BackupEncryptionInfoInput

func (BackupEncryptionInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackupEncryptionInfo)(nil)).Elem()
}

func (i BackupEncryptionInfoArray) ToBackupEncryptionInfoArrayOutput() BackupEncryptionInfoArrayOutput {
	return i.ToBackupEncryptionInfoArrayOutputWithContext(context.Background())
}

func (i BackupEncryptionInfoArray) ToBackupEncryptionInfoArrayOutputWithContext(ctx context.Context) BackupEncryptionInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupEncryptionInfoArrayOutput)
}

func (i BackupEncryptionInfoArray) ToOutput(ctx context.Context) pulumix.Output[[]BackupEncryptionInfo] {
	return pulumix.Output[[]BackupEncryptionInfo]{
		OutputState: i.ToBackupEncryptionInfoArrayOutputWithContext(ctx).OutputState,
	}
}

type BackupEncryptionInfoOutput struct{ *pulumi.OutputState }

func (BackupEncryptionInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupEncryptionInfo)(nil)).Elem()
}

func (o BackupEncryptionInfoOutput) ToBackupEncryptionInfoOutput() BackupEncryptionInfoOutput {
	return o
}

func (o BackupEncryptionInfoOutput) ToBackupEncryptionInfoOutputWithContext(ctx context.Context) BackupEncryptionInfoOutput {
	return o
}

func (o BackupEncryptionInfoOutput) ToOutput(ctx context.Context) pulumix.Output[BackupEncryptionInfo] {
	return pulumix.Output[BackupEncryptionInfo]{
		OutputState: o.OutputState,
	}
}

// (Output)
// Output only. Type of encryption.
func (o BackupEncryptionInfoOutput) EncryptionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupEncryptionInfo) *string { return v.EncryptionType }).(pulumi.StringPtrOutput)
}

// (Output)
// Output only. Cloud KMS key versions that are being used to protect the database or the backup.
func (o BackupEncryptionInfoOutput) KmsKeyVersions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BackupEncryptionInfo) []string { return v.KmsKeyVersions }).(pulumi.StringArrayOutput)
}

type BackupEncryptionInfoArrayOutput struct{ *pulumi.OutputState }

func (BackupEncryptionInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackupEncryptionInfo)(nil)).Elem()
}

func (o BackupEncryptionInfoArrayOutput) ToBackupEncryptionInfoArrayOutput() BackupEncryptionInfoArrayOutput {
	return o
}

func (o BackupEncryptionInfoArrayOutput) ToBackupEncryptionInfoArrayOutputWithContext(ctx context.Context) BackupEncryptionInfoArrayOutput {
	return o
}

func (o BackupEncryptionInfoArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]BackupEncryptionInfo] {
	return pulumix.Output[[]BackupEncryptionInfo]{
		OutputState: o.OutputState,
	}
}

func (o BackupEncryptionInfoArrayOutput) Index(i pulumi.IntInput) BackupEncryptionInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BackupEncryptionInfo {
		return vs[0].([]BackupEncryptionInfo)[vs[1].(int)]
	}).(BackupEncryptionInfoOutput)
}

type ClusterAutomatedBackupPolicy struct {
	// The length of the time window during which a backup can be taken. If a backup does not succeed within this time window, it will be canceled and considered failed.
	// The backup window must be at least 5 minutes long. There is no upper bound on the window. If not set, it will default to 1 hour.
	// A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
	BackupWindow *string `pulumi:"backupWindow"`
	// Whether automated backups are enabled.
	Enabled *bool `pulumi:"enabled"`
	// EncryptionConfig describes the encryption config of a cluster or a backup that is encrypted with a CMEK (customer-managed encryption key).
	// Structure is documented below.
	EncryptionConfig *ClusterAutomatedBackupPolicyEncryptionConfig `pulumi:"encryptionConfig"`
	// Labels to apply to backups created using this configuration.
	Labels map[string]string `pulumi:"labels"`
	// The location where the backup will be stored. Currently, the only supported option is to store the backup in the same region as the cluster.
	Location *string `pulumi:"location"`
	// Quantity-based Backup retention policy to retain recent backups. Conflicts with 'time_based_retention', both can't be set together.
	// Structure is documented below.
	QuantityBasedRetention *ClusterAutomatedBackupPolicyQuantityBasedRetention `pulumi:"quantityBasedRetention"`
	// Time-based Backup retention policy. Conflicts with 'quantity_based_retention', both can't be set together.
	// Structure is documented below.
	TimeBasedRetention *ClusterAutomatedBackupPolicyTimeBasedRetention `pulumi:"timeBasedRetention"`
	// Weekly schedule for the Backup.
	// Structure is documented below.
	WeeklySchedule *ClusterAutomatedBackupPolicyWeeklySchedule `pulumi:"weeklySchedule"`
}

// ClusterAutomatedBackupPolicyInput is an input type that accepts ClusterAutomatedBackupPolicyArgs and ClusterAutomatedBackupPolicyOutput values.
// You can construct a concrete instance of `ClusterAutomatedBackupPolicyInput` via:
//
//	ClusterAutomatedBackupPolicyArgs{...}
type ClusterAutomatedBackupPolicyInput interface {
	pulumi.Input

	ToClusterAutomatedBackupPolicyOutput() ClusterAutomatedBackupPolicyOutput
	ToClusterAutomatedBackupPolicyOutputWithContext(context.Context) ClusterAutomatedBackupPolicyOutput
}

type ClusterAutomatedBackupPolicyArgs struct {
	// The length of the time window during which a backup can be taken. If a backup does not succeed within this time window, it will be canceled and considered failed.
	// The backup window must be at least 5 minutes long. There is no upper bound on the window. If not set, it will default to 1 hour.
	// A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
	BackupWindow pulumi.StringPtrInput `pulumi:"backupWindow"`
	// Whether automated backups are enabled.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// EncryptionConfig describes the encryption config of a cluster or a backup that is encrypted with a CMEK (customer-managed encryption key).
	// Structure is documented below.
	EncryptionConfig ClusterAutomatedBackupPolicyEncryptionConfigPtrInput `pulumi:"encryptionConfig"`
	// Labels to apply to backups created using this configuration.
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// The location where the backup will be stored. Currently, the only supported option is to store the backup in the same region as the cluster.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Quantity-based Backup retention policy to retain recent backups. Conflicts with 'time_based_retention', both can't be set together.
	// Structure is documented below.
	QuantityBasedRetention ClusterAutomatedBackupPolicyQuantityBasedRetentionPtrInput `pulumi:"quantityBasedRetention"`
	// Time-based Backup retention policy. Conflicts with 'quantity_based_retention', both can't be set together.
	// Structure is documented below.
	TimeBasedRetention ClusterAutomatedBackupPolicyTimeBasedRetentionPtrInput `pulumi:"timeBasedRetention"`
	// Weekly schedule for the Backup.
	// Structure is documented below.
	WeeklySchedule ClusterAutomatedBackupPolicyWeeklySchedulePtrInput `pulumi:"weeklySchedule"`
}

func (ClusterAutomatedBackupPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAutomatedBackupPolicy)(nil)).Elem()
}

func (i ClusterAutomatedBackupPolicyArgs) ToClusterAutomatedBackupPolicyOutput() ClusterAutomatedBackupPolicyOutput {
	return i.ToClusterAutomatedBackupPolicyOutputWithContext(context.Background())
}

func (i ClusterAutomatedBackupPolicyArgs) ToClusterAutomatedBackupPolicyOutputWithContext(ctx context.Context) ClusterAutomatedBackupPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAutomatedBackupPolicyOutput)
}

func (i ClusterAutomatedBackupPolicyArgs) ToOutput(ctx context.Context) pulumix.Output[ClusterAutomatedBackupPolicy] {
	return pulumix.Output[ClusterAutomatedBackupPolicy]{
		OutputState: i.ToClusterAutomatedBackupPolicyOutputWithContext(ctx).OutputState,
	}
}

func (i ClusterAutomatedBackupPolicyArgs) ToClusterAutomatedBackupPolicyPtrOutput() ClusterAutomatedBackupPolicyPtrOutput {
	return i.ToClusterAutomatedBackupPolicyPtrOutputWithContext(context.Background())
}

func (i ClusterAutomatedBackupPolicyArgs) ToClusterAutomatedBackupPolicyPtrOutputWithContext(ctx context.Context) ClusterAutomatedBackupPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAutomatedBackupPolicyOutput).ToClusterAutomatedBackupPolicyPtrOutputWithContext(ctx)
}

// ClusterAutomatedBackupPolicyPtrInput is an input type that accepts ClusterAutomatedBackupPolicyArgs, ClusterAutomatedBackupPolicyPtr and ClusterAutomatedBackupPolicyPtrOutput values.
// You can construct a concrete instance of `ClusterAutomatedBackupPolicyPtrInput` via:
//
//	        ClusterAutomatedBackupPolicyArgs{...}
//
//	or:
//
//	        nil
type ClusterAutomatedBackupPolicyPtrInput interface {
	pulumi.Input

	ToClusterAutomatedBackupPolicyPtrOutput() ClusterAutomatedBackupPolicyPtrOutput
	ToClusterAutomatedBackupPolicyPtrOutputWithContext(context.Context) ClusterAutomatedBackupPolicyPtrOutput
}

type clusterAutomatedBackupPolicyPtrType ClusterAutomatedBackupPolicyArgs

func ClusterAutomatedBackupPolicyPtr(v *ClusterAutomatedBackupPolicyArgs) ClusterAutomatedBackupPolicyPtrInput {
	return (*clusterAutomatedBackupPolicyPtrType)(v)
}

func (*clusterAutomatedBackupPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAutomatedBackupPolicy)(nil)).Elem()
}

func (i *clusterAutomatedBackupPolicyPtrType) ToClusterAutomatedBackupPolicyPtrOutput() ClusterAutomatedBackupPolicyPtrOutput {
	return i.ToClusterAutomatedBackupPolicyPtrOutputWithContext(context.Background())
}

func (i *clusterAutomatedBackupPolicyPtrType) ToClusterAutomatedBackupPolicyPtrOutputWithContext(ctx context.Context) ClusterAutomatedBackupPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAutomatedBackupPolicyPtrOutput)
}

func (i *clusterAutomatedBackupPolicyPtrType) ToOutput(ctx context.Context) pulumix.Output[*ClusterAutomatedBackupPolicy] {
	return pulumix.Output[*ClusterAutomatedBackupPolicy]{
		OutputState: i.ToClusterAutomatedBackupPolicyPtrOutputWithContext(ctx).OutputState,
	}
}

type ClusterAutomatedBackupPolicyOutput struct{ *pulumi.OutputState }

func (ClusterAutomatedBackupPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAutomatedBackupPolicy)(nil)).Elem()
}

func (o ClusterAutomatedBackupPolicyOutput) ToClusterAutomatedBackupPolicyOutput() ClusterAutomatedBackupPolicyOutput {
	return o
}

func (o ClusterAutomatedBackupPolicyOutput) ToClusterAutomatedBackupPolicyOutputWithContext(ctx context.Context) ClusterAutomatedBackupPolicyOutput {
	return o
}

func (o ClusterAutomatedBackupPolicyOutput) ToClusterAutomatedBackupPolicyPtrOutput() ClusterAutomatedBackupPolicyPtrOutput {
	return o.ToClusterAutomatedBackupPolicyPtrOutputWithContext(context.Background())
}

func (o ClusterAutomatedBackupPolicyOutput) ToClusterAutomatedBackupPolicyPtrOutputWithContext(ctx context.Context) ClusterAutomatedBackupPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterAutomatedBackupPolicy) *ClusterAutomatedBackupPolicy {
		return &v
	}).(ClusterAutomatedBackupPolicyPtrOutput)
}

func (o ClusterAutomatedBackupPolicyOutput) ToOutput(ctx context.Context) pulumix.Output[ClusterAutomatedBackupPolicy] {
	return pulumix.Output[ClusterAutomatedBackupPolicy]{
		OutputState: o.OutputState,
	}
}

// The length of the time window during which a backup can be taken. If a backup does not succeed within this time window, it will be canceled and considered failed.
// The backup window must be at least 5 minutes long. There is no upper bound on the window. If not set, it will default to 1 hour.
// A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
func (o ClusterAutomatedBackupPolicyOutput) BackupWindow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterAutomatedBackupPolicy) *string { return v.BackupWindow }).(pulumi.StringPtrOutput)
}

// Whether automated backups are enabled.
func (o ClusterAutomatedBackupPolicyOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterAutomatedBackupPolicy) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// EncryptionConfig describes the encryption config of a cluster or a backup that is encrypted with a CMEK (customer-managed encryption key).
// Structure is documented below.
func (o ClusterAutomatedBackupPolicyOutput) EncryptionConfig() ClusterAutomatedBackupPolicyEncryptionConfigPtrOutput {
	return o.ApplyT(func(v ClusterAutomatedBackupPolicy) *ClusterAutomatedBackupPolicyEncryptionConfig {
		return v.EncryptionConfig
	}).(ClusterAutomatedBackupPolicyEncryptionConfigPtrOutput)
}

// Labels to apply to backups created using this configuration.
func (o ClusterAutomatedBackupPolicyOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterAutomatedBackupPolicy) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// The location where the backup will be stored. Currently, the only supported option is to store the backup in the same region as the cluster.
func (o ClusterAutomatedBackupPolicyOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterAutomatedBackupPolicy) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Quantity-based Backup retention policy to retain recent backups. Conflicts with 'time_based_retention', both can't be set together.
// Structure is documented below.
func (o ClusterAutomatedBackupPolicyOutput) QuantityBasedRetention() ClusterAutomatedBackupPolicyQuantityBasedRetentionPtrOutput {
	return o.ApplyT(func(v ClusterAutomatedBackupPolicy) *ClusterAutomatedBackupPolicyQuantityBasedRetention {
		return v.QuantityBasedRetention
	}).(ClusterAutomatedBackupPolicyQuantityBasedRetentionPtrOutput)
}

// Time-based Backup retention policy. Conflicts with 'quantity_based_retention', both can't be set together.
// Structure is documented below.
func (o ClusterAutomatedBackupPolicyOutput) TimeBasedRetention() ClusterAutomatedBackupPolicyTimeBasedRetentionPtrOutput {
	return o.ApplyT(func(v ClusterAutomatedBackupPolicy) *ClusterAutomatedBackupPolicyTimeBasedRetention {
		return v.TimeBasedRetention
	}).(ClusterAutomatedBackupPolicyTimeBasedRetentionPtrOutput)
}

// Weekly schedule for the Backup.
// Structure is documented below.
func (o ClusterAutomatedBackupPolicyOutput) WeeklySchedule() ClusterAutomatedBackupPolicyWeeklySchedulePtrOutput {
	return o.ApplyT(func(v ClusterAutomatedBackupPolicy) *ClusterAutomatedBackupPolicyWeeklySchedule {
		return v.WeeklySchedule
	}).(ClusterAutomatedBackupPolicyWeeklySchedulePtrOutput)
}

type ClusterAutomatedBackupPolicyPtrOutput struct{ *pulumi.OutputState }

func (ClusterAutomatedBackupPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAutomatedBackupPolicy)(nil)).Elem()
}

func (o ClusterAutomatedBackupPolicyPtrOutput) ToClusterAutomatedBackupPolicyPtrOutput() ClusterAutomatedBackupPolicyPtrOutput {
	return o
}

func (o ClusterAutomatedBackupPolicyPtrOutput) ToClusterAutomatedBackupPolicyPtrOutputWithContext(ctx context.Context) ClusterAutomatedBackupPolicyPtrOutput {
	return o
}

func (o ClusterAutomatedBackupPolicyPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ClusterAutomatedBackupPolicy] {
	return pulumix.Output[*ClusterAutomatedBackupPolicy]{
		OutputState: o.OutputState,
	}
}

func (o ClusterAutomatedBackupPolicyPtrOutput) Elem() ClusterAutomatedBackupPolicyOutput {
	return o.ApplyT(func(v *ClusterAutomatedBackupPolicy) ClusterAutomatedBackupPolicy {
		if v != nil {
			return *v
		}
		var ret ClusterAutomatedBackupPolicy
		return ret
	}).(ClusterAutomatedBackupPolicyOutput)
}

// The length of the time window during which a backup can be taken. If a backup does not succeed within this time window, it will be canceled and considered failed.
// The backup window must be at least 5 minutes long. There is no upper bound on the window. If not set, it will default to 1 hour.
// A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
func (o ClusterAutomatedBackupPolicyPtrOutput) BackupWindow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterAutomatedBackupPolicy) *string {
		if v == nil {
			return nil
		}
		return v.BackupWindow
	}).(pulumi.StringPtrOutput)
}

// Whether automated backups are enabled.
func (o ClusterAutomatedBackupPolicyPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterAutomatedBackupPolicy) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// EncryptionConfig describes the encryption config of a cluster or a backup that is encrypted with a CMEK (customer-managed encryption key).
// Structure is documented below.
func (o ClusterAutomatedBackupPolicyPtrOutput) EncryptionConfig() ClusterAutomatedBackupPolicyEncryptionConfigPtrOutput {
	return o.ApplyT(func(v *ClusterAutomatedBackupPolicy) *ClusterAutomatedBackupPolicyEncryptionConfig {
		if v == nil {
			return nil
		}
		return v.EncryptionConfig
	}).(ClusterAutomatedBackupPolicyEncryptionConfigPtrOutput)
}

// Labels to apply to backups created using this configuration.
func (o ClusterAutomatedBackupPolicyPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ClusterAutomatedBackupPolicy) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// The location where the backup will be stored. Currently, the only supported option is to store the backup in the same region as the cluster.
func (o ClusterAutomatedBackupPolicyPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterAutomatedBackupPolicy) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Quantity-based Backup retention policy to retain recent backups. Conflicts with 'time_based_retention', both can't be set together.
// Structure is documented below.
func (o ClusterAutomatedBackupPolicyPtrOutput) QuantityBasedRetention() ClusterAutomatedBackupPolicyQuantityBasedRetentionPtrOutput {
	return o.ApplyT(func(v *ClusterAutomatedBackupPolicy) *ClusterAutomatedBackupPolicyQuantityBasedRetention {
		if v == nil {
			return nil
		}
		return v.QuantityBasedRetention
	}).(ClusterAutomatedBackupPolicyQuantityBasedRetentionPtrOutput)
}

// Time-based Backup retention policy. Conflicts with 'quantity_based_retention', both can't be set together.
// Structure is documented below.
func (o ClusterAutomatedBackupPolicyPtrOutput) TimeBasedRetention() ClusterAutomatedBackupPolicyTimeBasedRetentionPtrOutput {
	return o.ApplyT(func(v *ClusterAutomatedBackupPolicy) *ClusterAutomatedBackupPolicyTimeBasedRetention {
		if v == nil {
			return nil
		}
		return v.TimeBasedRetention
	}).(ClusterAutomatedBackupPolicyTimeBasedRetentionPtrOutput)
}

// Weekly schedule for the Backup.
// Structure is documented below.
func (o ClusterAutomatedBackupPolicyPtrOutput) WeeklySchedule() ClusterAutomatedBackupPolicyWeeklySchedulePtrOutput {
	return o.ApplyT(func(v *ClusterAutomatedBackupPolicy) *ClusterAutomatedBackupPolicyWeeklySchedule {
		if v == nil {
			return nil
		}
		return v.WeeklySchedule
	}).(ClusterAutomatedBackupPolicyWeeklySchedulePtrOutput)
}

type ClusterAutomatedBackupPolicyEncryptionConfig struct {
	// The fully-qualified resource name of the KMS key. Each Cloud KMS key is regionalized and has the following format: projects/[PROJECT]/locations/[REGION]/keyRings/[RING]/cryptoKeys/[KEY_NAME].
	KmsKeyName *string `pulumi:"kmsKeyName"`
}

// ClusterAutomatedBackupPolicyEncryptionConfigInput is an input type that accepts ClusterAutomatedBackupPolicyEncryptionConfigArgs and ClusterAutomatedBackupPolicyEncryptionConfigOutput values.
// You can construct a concrete instance of `ClusterAutomatedBackupPolicyEncryptionConfigInput` via:
//
//	ClusterAutomatedBackupPolicyEncryptionConfigArgs{...}
type ClusterAutomatedBackupPolicyEncryptionConfigInput interface {
	pulumi.Input

	ToClusterAutomatedBackupPolicyEncryptionConfigOutput() ClusterAutomatedBackupPolicyEncryptionConfigOutput
	ToClusterAutomatedBackupPolicyEncryptionConfigOutputWithContext(context.Context) ClusterAutomatedBackupPolicyEncryptionConfigOutput
}

type ClusterAutomatedBackupPolicyEncryptionConfigArgs struct {
	// The fully-qualified resource name of the KMS key. Each Cloud KMS key is regionalized and has the following format: projects/[PROJECT]/locations/[REGION]/keyRings/[RING]/cryptoKeys/[KEY_NAME].
	KmsKeyName pulumi.StringPtrInput `pulumi:"kmsKeyName"`
}

func (ClusterAutomatedBackupPolicyEncryptionConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAutomatedBackupPolicyEncryptionConfig)(nil)).Elem()
}

func (i ClusterAutomatedBackupPolicyEncryptionConfigArgs) ToClusterAutomatedBackupPolicyEncryptionConfigOutput() ClusterAutomatedBackupPolicyEncryptionConfigOutput {
	return i.ToClusterAutomatedBackupPolicyEncryptionConfigOutputWithContext(context.Background())
}

func (i ClusterAutomatedBackupPolicyEncryptionConfigArgs) ToClusterAutomatedBackupPolicyEncryptionConfigOutputWithContext(ctx context.Context) ClusterAutomatedBackupPolicyEncryptionConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAutomatedBackupPolicyEncryptionConfigOutput)
}

func (i ClusterAutomatedBackupPolicyEncryptionConfigArgs) ToOutput(ctx context.Context) pulumix.Output[ClusterAutomatedBackupPolicyEncryptionConfig] {
	return pulumix.Output[ClusterAutomatedBackupPolicyEncryptionConfig]{
		OutputState: i.ToClusterAutomatedBackupPolicyEncryptionConfigOutputWithContext(ctx).OutputState,
	}
}

func (i ClusterAutomatedBackupPolicyEncryptionConfigArgs) ToClusterAutomatedBackupPolicyEncryptionConfigPtrOutput() ClusterAutomatedBackupPolicyEncryptionConfigPtrOutput {
	return i.ToClusterAutomatedBackupPolicyEncryptionConfigPtrOutputWithContext(context.Background())
}

func (i ClusterAutomatedBackupPolicyEncryptionConfigArgs) ToClusterAutomatedBackupPolicyEncryptionConfigPtrOutputWithContext(ctx context.Context) ClusterAutomatedBackupPolicyEncryptionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAutomatedBackupPolicyEncryptionConfigOutput).ToClusterAutomatedBackupPolicyEncryptionConfigPtrOutputWithContext(ctx)
}

// ClusterAutomatedBackupPolicyEncryptionConfigPtrInput is an input type that accepts ClusterAutomatedBackupPolicyEncryptionConfigArgs, ClusterAutomatedBackupPolicyEncryptionConfigPtr and ClusterAutomatedBackupPolicyEncryptionConfigPtrOutput values.
// You can construct a concrete instance of `ClusterAutomatedBackupPolicyEncryptionConfigPtrInput` via:
//
//	        ClusterAutomatedBackupPolicyEncryptionConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterAutomatedBackupPolicyEncryptionConfigPtrInput interface {
	pulumi.Input

	ToClusterAutomatedBackupPolicyEncryptionConfigPtrOutput() ClusterAutomatedBackupPolicyEncryptionConfigPtrOutput
	ToClusterAutomatedBackupPolicyEncryptionConfigPtrOutputWithContext(context.Context) ClusterAutomatedBackupPolicyEncryptionConfigPtrOutput
}

type clusterAutomatedBackupPolicyEncryptionConfigPtrType ClusterAutomatedBackupPolicyEncryptionConfigArgs

func ClusterAutomatedBackupPolicyEncryptionConfigPtr(v *ClusterAutomatedBackupPolicyEncryptionConfigArgs) ClusterAutomatedBackupPolicyEncryptionConfigPtrInput {
	return (*clusterAutomatedBackupPolicyEncryptionConfigPtrType)(v)
}

func (*clusterAutomatedBackupPolicyEncryptionConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAutomatedBackupPolicyEncryptionConfig)(nil)).Elem()
}

func (i *clusterAutomatedBackupPolicyEncryptionConfigPtrType) ToClusterAutomatedBackupPolicyEncryptionConfigPtrOutput() ClusterAutomatedBackupPolicyEncryptionConfigPtrOutput {
	return i.ToClusterAutomatedBackupPolicyEncryptionConfigPtrOutputWithContext(context.Background())
}

func (i *clusterAutomatedBackupPolicyEncryptionConfigPtrType) ToClusterAutomatedBackupPolicyEncryptionConfigPtrOutputWithContext(ctx context.Context) ClusterAutomatedBackupPolicyEncryptionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAutomatedBackupPolicyEncryptionConfigPtrOutput)
}

func (i *clusterAutomatedBackupPolicyEncryptionConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*ClusterAutomatedBackupPolicyEncryptionConfig] {
	return pulumix.Output[*ClusterAutomatedBackupPolicyEncryptionConfig]{
		OutputState: i.ToClusterAutomatedBackupPolicyEncryptionConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type ClusterAutomatedBackupPolicyEncryptionConfigOutput struct{ *pulumi.OutputState }

func (ClusterAutomatedBackupPolicyEncryptionConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAutomatedBackupPolicyEncryptionConfig)(nil)).Elem()
}

func (o ClusterAutomatedBackupPolicyEncryptionConfigOutput) ToClusterAutomatedBackupPolicyEncryptionConfigOutput() ClusterAutomatedBackupPolicyEncryptionConfigOutput {
	return o
}

func (o ClusterAutomatedBackupPolicyEncryptionConfigOutput) ToClusterAutomatedBackupPolicyEncryptionConfigOutputWithContext(ctx context.Context) ClusterAutomatedBackupPolicyEncryptionConfigOutput {
	return o
}

func (o ClusterAutomatedBackupPolicyEncryptionConfigOutput) ToClusterAutomatedBackupPolicyEncryptionConfigPtrOutput() ClusterAutomatedBackupPolicyEncryptionConfigPtrOutput {
	return o.ToClusterAutomatedBackupPolicyEncryptionConfigPtrOutputWithContext(context.Background())
}

func (o ClusterAutomatedBackupPolicyEncryptionConfigOutput) ToClusterAutomatedBackupPolicyEncryptionConfigPtrOutputWithContext(ctx context.Context) ClusterAutomatedBackupPolicyEncryptionConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterAutomatedBackupPolicyEncryptionConfig) *ClusterAutomatedBackupPolicyEncryptionConfig {
		return &v
	}).(ClusterAutomatedBackupPolicyEncryptionConfigPtrOutput)
}

func (o ClusterAutomatedBackupPolicyEncryptionConfigOutput) ToOutput(ctx context.Context) pulumix.Output[ClusterAutomatedBackupPolicyEncryptionConfig] {
	return pulumix.Output[ClusterAutomatedBackupPolicyEncryptionConfig]{
		OutputState: o.OutputState,
	}
}

// The fully-qualified resource name of the KMS key. Each Cloud KMS key is regionalized and has the following format: projects/[PROJECT]/locations/[REGION]/keyRings/[RING]/cryptoKeys/[KEY_NAME].
func (o ClusterAutomatedBackupPolicyEncryptionConfigOutput) KmsKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterAutomatedBackupPolicyEncryptionConfig) *string { return v.KmsKeyName }).(pulumi.StringPtrOutput)
}

type ClusterAutomatedBackupPolicyEncryptionConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterAutomatedBackupPolicyEncryptionConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAutomatedBackupPolicyEncryptionConfig)(nil)).Elem()
}

func (o ClusterAutomatedBackupPolicyEncryptionConfigPtrOutput) ToClusterAutomatedBackupPolicyEncryptionConfigPtrOutput() ClusterAutomatedBackupPolicyEncryptionConfigPtrOutput {
	return o
}

func (o ClusterAutomatedBackupPolicyEncryptionConfigPtrOutput) ToClusterAutomatedBackupPolicyEncryptionConfigPtrOutputWithContext(ctx context.Context) ClusterAutomatedBackupPolicyEncryptionConfigPtrOutput {
	return o
}

func (o ClusterAutomatedBackupPolicyEncryptionConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ClusterAutomatedBackupPolicyEncryptionConfig] {
	return pulumix.Output[*ClusterAutomatedBackupPolicyEncryptionConfig]{
		OutputState: o.OutputState,
	}
}

func (o ClusterAutomatedBackupPolicyEncryptionConfigPtrOutput) Elem() ClusterAutomatedBackupPolicyEncryptionConfigOutput {
	return o.ApplyT(func(v *ClusterAutomatedBackupPolicyEncryptionConfig) ClusterAutomatedBackupPolicyEncryptionConfig {
		if v != nil {
			return *v
		}
		var ret ClusterAutomatedBackupPolicyEncryptionConfig
		return ret
	}).(ClusterAutomatedBackupPolicyEncryptionConfigOutput)
}

// The fully-qualified resource name of the KMS key. Each Cloud KMS key is regionalized and has the following format: projects/[PROJECT]/locations/[REGION]/keyRings/[RING]/cryptoKeys/[KEY_NAME].
func (o ClusterAutomatedBackupPolicyEncryptionConfigPtrOutput) KmsKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterAutomatedBackupPolicyEncryptionConfig) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyName
	}).(pulumi.StringPtrOutput)
}

type ClusterAutomatedBackupPolicyQuantityBasedRetention struct {
	// The number of backups to retain.
	Count *int `pulumi:"count"`
}

// ClusterAutomatedBackupPolicyQuantityBasedRetentionInput is an input type that accepts ClusterAutomatedBackupPolicyQuantityBasedRetentionArgs and ClusterAutomatedBackupPolicyQuantityBasedRetentionOutput values.
// You can construct a concrete instance of `ClusterAutomatedBackupPolicyQuantityBasedRetentionInput` via:
//
//	ClusterAutomatedBackupPolicyQuantityBasedRetentionArgs{...}
type ClusterAutomatedBackupPolicyQuantityBasedRetentionInput interface {
	pulumi.Input

	ToClusterAutomatedBackupPolicyQuantityBasedRetentionOutput() ClusterAutomatedBackupPolicyQuantityBasedRetentionOutput
	ToClusterAutomatedBackupPolicyQuantityBasedRetentionOutputWithContext(context.Context) ClusterAutomatedBackupPolicyQuantityBasedRetentionOutput
}

type ClusterAutomatedBackupPolicyQuantityBasedRetentionArgs struct {
	// The number of backups to retain.
	Count pulumi.IntPtrInput `pulumi:"count"`
}

func (ClusterAutomatedBackupPolicyQuantityBasedRetentionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAutomatedBackupPolicyQuantityBasedRetention)(nil)).Elem()
}

func (i ClusterAutomatedBackupPolicyQuantityBasedRetentionArgs) ToClusterAutomatedBackupPolicyQuantityBasedRetentionOutput() ClusterAutomatedBackupPolicyQuantityBasedRetentionOutput {
	return i.ToClusterAutomatedBackupPolicyQuantityBasedRetentionOutputWithContext(context.Background())
}

func (i ClusterAutomatedBackupPolicyQuantityBasedRetentionArgs) ToClusterAutomatedBackupPolicyQuantityBasedRetentionOutputWithContext(ctx context.Context) ClusterAutomatedBackupPolicyQuantityBasedRetentionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAutomatedBackupPolicyQuantityBasedRetentionOutput)
}

func (i ClusterAutomatedBackupPolicyQuantityBasedRetentionArgs) ToOutput(ctx context.Context) pulumix.Output[ClusterAutomatedBackupPolicyQuantityBasedRetention] {
	return pulumix.Output[ClusterAutomatedBackupPolicyQuantityBasedRetention]{
		OutputState: i.ToClusterAutomatedBackupPolicyQuantityBasedRetentionOutputWithContext(ctx).OutputState,
	}
}

func (i ClusterAutomatedBackupPolicyQuantityBasedRetentionArgs) ToClusterAutomatedBackupPolicyQuantityBasedRetentionPtrOutput() ClusterAutomatedBackupPolicyQuantityBasedRetentionPtrOutput {
	return i.ToClusterAutomatedBackupPolicyQuantityBasedRetentionPtrOutputWithContext(context.Background())
}

func (i ClusterAutomatedBackupPolicyQuantityBasedRetentionArgs) ToClusterAutomatedBackupPolicyQuantityBasedRetentionPtrOutputWithContext(ctx context.Context) ClusterAutomatedBackupPolicyQuantityBasedRetentionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAutomatedBackupPolicyQuantityBasedRetentionOutput).ToClusterAutomatedBackupPolicyQuantityBasedRetentionPtrOutputWithContext(ctx)
}

// ClusterAutomatedBackupPolicyQuantityBasedRetentionPtrInput is an input type that accepts ClusterAutomatedBackupPolicyQuantityBasedRetentionArgs, ClusterAutomatedBackupPolicyQuantityBasedRetentionPtr and ClusterAutomatedBackupPolicyQuantityBasedRetentionPtrOutput values.
// You can construct a concrete instance of `ClusterAutomatedBackupPolicyQuantityBasedRetentionPtrInput` via:
//
//	        ClusterAutomatedBackupPolicyQuantityBasedRetentionArgs{...}
//
//	or:
//
//	        nil
type ClusterAutomatedBackupPolicyQuantityBasedRetentionPtrInput interface {
	pulumi.Input

	ToClusterAutomatedBackupPolicyQuantityBasedRetentionPtrOutput() ClusterAutomatedBackupPolicyQuantityBasedRetentionPtrOutput
	ToClusterAutomatedBackupPolicyQuantityBasedRetentionPtrOutputWithContext(context.Context) ClusterAutomatedBackupPolicyQuantityBasedRetentionPtrOutput
}

type clusterAutomatedBackupPolicyQuantityBasedRetentionPtrType ClusterAutomatedBackupPolicyQuantityBasedRetentionArgs

func ClusterAutomatedBackupPolicyQuantityBasedRetentionPtr(v *ClusterAutomatedBackupPolicyQuantityBasedRetentionArgs) ClusterAutomatedBackupPolicyQuantityBasedRetentionPtrInput {
	return (*clusterAutomatedBackupPolicyQuantityBasedRetentionPtrType)(v)
}

func (*clusterAutomatedBackupPolicyQuantityBasedRetentionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAutomatedBackupPolicyQuantityBasedRetention)(nil)).Elem()
}

func (i *clusterAutomatedBackupPolicyQuantityBasedRetentionPtrType) ToClusterAutomatedBackupPolicyQuantityBasedRetentionPtrOutput() ClusterAutomatedBackupPolicyQuantityBasedRetentionPtrOutput {
	return i.ToClusterAutomatedBackupPolicyQuantityBasedRetentionPtrOutputWithContext(context.Background())
}

func (i *clusterAutomatedBackupPolicyQuantityBasedRetentionPtrType) ToClusterAutomatedBackupPolicyQuantityBasedRetentionPtrOutputWithContext(ctx context.Context) ClusterAutomatedBackupPolicyQuantityBasedRetentionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAutomatedBackupPolicyQuantityBasedRetentionPtrOutput)
}

func (i *clusterAutomatedBackupPolicyQuantityBasedRetentionPtrType) ToOutput(ctx context.Context) pulumix.Output[*ClusterAutomatedBackupPolicyQuantityBasedRetention] {
	return pulumix.Output[*ClusterAutomatedBackupPolicyQuantityBasedRetention]{
		OutputState: i.ToClusterAutomatedBackupPolicyQuantityBasedRetentionPtrOutputWithContext(ctx).OutputState,
	}
}

type ClusterAutomatedBackupPolicyQuantityBasedRetentionOutput struct{ *pulumi.OutputState }

func (ClusterAutomatedBackupPolicyQuantityBasedRetentionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAutomatedBackupPolicyQuantityBasedRetention)(nil)).Elem()
}

func (o ClusterAutomatedBackupPolicyQuantityBasedRetentionOutput) ToClusterAutomatedBackupPolicyQuantityBasedRetentionOutput() ClusterAutomatedBackupPolicyQuantityBasedRetentionOutput {
	return o
}

func (o ClusterAutomatedBackupPolicyQuantityBasedRetentionOutput) ToClusterAutomatedBackupPolicyQuantityBasedRetentionOutputWithContext(ctx context.Context) ClusterAutomatedBackupPolicyQuantityBasedRetentionOutput {
	return o
}

func (o ClusterAutomatedBackupPolicyQuantityBasedRetentionOutput) ToClusterAutomatedBackupPolicyQuantityBasedRetentionPtrOutput() ClusterAutomatedBackupPolicyQuantityBasedRetentionPtrOutput {
	return o.ToClusterAutomatedBackupPolicyQuantityBasedRetentionPtrOutputWithContext(context.Background())
}

func (o ClusterAutomatedBackupPolicyQuantityBasedRetentionOutput) ToClusterAutomatedBackupPolicyQuantityBasedRetentionPtrOutputWithContext(ctx context.Context) ClusterAutomatedBackupPolicyQuantityBasedRetentionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterAutomatedBackupPolicyQuantityBasedRetention) *ClusterAutomatedBackupPolicyQuantityBasedRetention {
		return &v
	}).(ClusterAutomatedBackupPolicyQuantityBasedRetentionPtrOutput)
}

func (o ClusterAutomatedBackupPolicyQuantityBasedRetentionOutput) ToOutput(ctx context.Context) pulumix.Output[ClusterAutomatedBackupPolicyQuantityBasedRetention] {
	return pulumix.Output[ClusterAutomatedBackupPolicyQuantityBasedRetention]{
		OutputState: o.OutputState,
	}
}

// The number of backups to retain.
func (o ClusterAutomatedBackupPolicyQuantityBasedRetentionOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterAutomatedBackupPolicyQuantityBasedRetention) *int { return v.Count }).(pulumi.IntPtrOutput)
}

type ClusterAutomatedBackupPolicyQuantityBasedRetentionPtrOutput struct{ *pulumi.OutputState }

func (ClusterAutomatedBackupPolicyQuantityBasedRetentionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAutomatedBackupPolicyQuantityBasedRetention)(nil)).Elem()
}

func (o ClusterAutomatedBackupPolicyQuantityBasedRetentionPtrOutput) ToClusterAutomatedBackupPolicyQuantityBasedRetentionPtrOutput() ClusterAutomatedBackupPolicyQuantityBasedRetentionPtrOutput {
	return o
}

func (o ClusterAutomatedBackupPolicyQuantityBasedRetentionPtrOutput) ToClusterAutomatedBackupPolicyQuantityBasedRetentionPtrOutputWithContext(ctx context.Context) ClusterAutomatedBackupPolicyQuantityBasedRetentionPtrOutput {
	return o
}

func (o ClusterAutomatedBackupPolicyQuantityBasedRetentionPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ClusterAutomatedBackupPolicyQuantityBasedRetention] {
	return pulumix.Output[*ClusterAutomatedBackupPolicyQuantityBasedRetention]{
		OutputState: o.OutputState,
	}
}

func (o ClusterAutomatedBackupPolicyQuantityBasedRetentionPtrOutput) Elem() ClusterAutomatedBackupPolicyQuantityBasedRetentionOutput {
	return o.ApplyT(func(v *ClusterAutomatedBackupPolicyQuantityBasedRetention) ClusterAutomatedBackupPolicyQuantityBasedRetention {
		if v != nil {
			return *v
		}
		var ret ClusterAutomatedBackupPolicyQuantityBasedRetention
		return ret
	}).(ClusterAutomatedBackupPolicyQuantityBasedRetentionOutput)
}

// The number of backups to retain.
func (o ClusterAutomatedBackupPolicyQuantityBasedRetentionPtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterAutomatedBackupPolicyQuantityBasedRetention) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

type ClusterAutomatedBackupPolicyTimeBasedRetention struct {
	// The retention period.
	// A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
	RetentionPeriod *string `pulumi:"retentionPeriod"`
}

// ClusterAutomatedBackupPolicyTimeBasedRetentionInput is an input type that accepts ClusterAutomatedBackupPolicyTimeBasedRetentionArgs and ClusterAutomatedBackupPolicyTimeBasedRetentionOutput values.
// You can construct a concrete instance of `ClusterAutomatedBackupPolicyTimeBasedRetentionInput` via:
//
//	ClusterAutomatedBackupPolicyTimeBasedRetentionArgs{...}
type ClusterAutomatedBackupPolicyTimeBasedRetentionInput interface {
	pulumi.Input

	ToClusterAutomatedBackupPolicyTimeBasedRetentionOutput() ClusterAutomatedBackupPolicyTimeBasedRetentionOutput
	ToClusterAutomatedBackupPolicyTimeBasedRetentionOutputWithContext(context.Context) ClusterAutomatedBackupPolicyTimeBasedRetentionOutput
}

type ClusterAutomatedBackupPolicyTimeBasedRetentionArgs struct {
	// The retention period.
	// A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
	RetentionPeriod pulumi.StringPtrInput `pulumi:"retentionPeriod"`
}

func (ClusterAutomatedBackupPolicyTimeBasedRetentionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAutomatedBackupPolicyTimeBasedRetention)(nil)).Elem()
}

func (i ClusterAutomatedBackupPolicyTimeBasedRetentionArgs) ToClusterAutomatedBackupPolicyTimeBasedRetentionOutput() ClusterAutomatedBackupPolicyTimeBasedRetentionOutput {
	return i.ToClusterAutomatedBackupPolicyTimeBasedRetentionOutputWithContext(context.Background())
}

func (i ClusterAutomatedBackupPolicyTimeBasedRetentionArgs) ToClusterAutomatedBackupPolicyTimeBasedRetentionOutputWithContext(ctx context.Context) ClusterAutomatedBackupPolicyTimeBasedRetentionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAutomatedBackupPolicyTimeBasedRetentionOutput)
}

func (i ClusterAutomatedBackupPolicyTimeBasedRetentionArgs) ToOutput(ctx context.Context) pulumix.Output[ClusterAutomatedBackupPolicyTimeBasedRetention] {
	return pulumix.Output[ClusterAutomatedBackupPolicyTimeBasedRetention]{
		OutputState: i.ToClusterAutomatedBackupPolicyTimeBasedRetentionOutputWithContext(ctx).OutputState,
	}
}

func (i ClusterAutomatedBackupPolicyTimeBasedRetentionArgs) ToClusterAutomatedBackupPolicyTimeBasedRetentionPtrOutput() ClusterAutomatedBackupPolicyTimeBasedRetentionPtrOutput {
	return i.ToClusterAutomatedBackupPolicyTimeBasedRetentionPtrOutputWithContext(context.Background())
}

func (i ClusterAutomatedBackupPolicyTimeBasedRetentionArgs) ToClusterAutomatedBackupPolicyTimeBasedRetentionPtrOutputWithContext(ctx context.Context) ClusterAutomatedBackupPolicyTimeBasedRetentionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAutomatedBackupPolicyTimeBasedRetentionOutput).ToClusterAutomatedBackupPolicyTimeBasedRetentionPtrOutputWithContext(ctx)
}

// ClusterAutomatedBackupPolicyTimeBasedRetentionPtrInput is an input type that accepts ClusterAutomatedBackupPolicyTimeBasedRetentionArgs, ClusterAutomatedBackupPolicyTimeBasedRetentionPtr and ClusterAutomatedBackupPolicyTimeBasedRetentionPtrOutput values.
// You can construct a concrete instance of `ClusterAutomatedBackupPolicyTimeBasedRetentionPtrInput` via:
//
//	        ClusterAutomatedBackupPolicyTimeBasedRetentionArgs{...}
//
//	or:
//
//	        nil
type ClusterAutomatedBackupPolicyTimeBasedRetentionPtrInput interface {
	pulumi.Input

	ToClusterAutomatedBackupPolicyTimeBasedRetentionPtrOutput() ClusterAutomatedBackupPolicyTimeBasedRetentionPtrOutput
	ToClusterAutomatedBackupPolicyTimeBasedRetentionPtrOutputWithContext(context.Context) ClusterAutomatedBackupPolicyTimeBasedRetentionPtrOutput
}

type clusterAutomatedBackupPolicyTimeBasedRetentionPtrType ClusterAutomatedBackupPolicyTimeBasedRetentionArgs

func ClusterAutomatedBackupPolicyTimeBasedRetentionPtr(v *ClusterAutomatedBackupPolicyTimeBasedRetentionArgs) ClusterAutomatedBackupPolicyTimeBasedRetentionPtrInput {
	return (*clusterAutomatedBackupPolicyTimeBasedRetentionPtrType)(v)
}

func (*clusterAutomatedBackupPolicyTimeBasedRetentionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAutomatedBackupPolicyTimeBasedRetention)(nil)).Elem()
}

func (i *clusterAutomatedBackupPolicyTimeBasedRetentionPtrType) ToClusterAutomatedBackupPolicyTimeBasedRetentionPtrOutput() ClusterAutomatedBackupPolicyTimeBasedRetentionPtrOutput {
	return i.ToClusterAutomatedBackupPolicyTimeBasedRetentionPtrOutputWithContext(context.Background())
}

func (i *clusterAutomatedBackupPolicyTimeBasedRetentionPtrType) ToClusterAutomatedBackupPolicyTimeBasedRetentionPtrOutputWithContext(ctx context.Context) ClusterAutomatedBackupPolicyTimeBasedRetentionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAutomatedBackupPolicyTimeBasedRetentionPtrOutput)
}

func (i *clusterAutomatedBackupPolicyTimeBasedRetentionPtrType) ToOutput(ctx context.Context) pulumix.Output[*ClusterAutomatedBackupPolicyTimeBasedRetention] {
	return pulumix.Output[*ClusterAutomatedBackupPolicyTimeBasedRetention]{
		OutputState: i.ToClusterAutomatedBackupPolicyTimeBasedRetentionPtrOutputWithContext(ctx).OutputState,
	}
}

type ClusterAutomatedBackupPolicyTimeBasedRetentionOutput struct{ *pulumi.OutputState }

func (ClusterAutomatedBackupPolicyTimeBasedRetentionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAutomatedBackupPolicyTimeBasedRetention)(nil)).Elem()
}

func (o ClusterAutomatedBackupPolicyTimeBasedRetentionOutput) ToClusterAutomatedBackupPolicyTimeBasedRetentionOutput() ClusterAutomatedBackupPolicyTimeBasedRetentionOutput {
	return o
}

func (o ClusterAutomatedBackupPolicyTimeBasedRetentionOutput) ToClusterAutomatedBackupPolicyTimeBasedRetentionOutputWithContext(ctx context.Context) ClusterAutomatedBackupPolicyTimeBasedRetentionOutput {
	return o
}

func (o ClusterAutomatedBackupPolicyTimeBasedRetentionOutput) ToClusterAutomatedBackupPolicyTimeBasedRetentionPtrOutput() ClusterAutomatedBackupPolicyTimeBasedRetentionPtrOutput {
	return o.ToClusterAutomatedBackupPolicyTimeBasedRetentionPtrOutputWithContext(context.Background())
}

func (o ClusterAutomatedBackupPolicyTimeBasedRetentionOutput) ToClusterAutomatedBackupPolicyTimeBasedRetentionPtrOutputWithContext(ctx context.Context) ClusterAutomatedBackupPolicyTimeBasedRetentionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterAutomatedBackupPolicyTimeBasedRetention) *ClusterAutomatedBackupPolicyTimeBasedRetention {
		return &v
	}).(ClusterAutomatedBackupPolicyTimeBasedRetentionPtrOutput)
}

func (o ClusterAutomatedBackupPolicyTimeBasedRetentionOutput) ToOutput(ctx context.Context) pulumix.Output[ClusterAutomatedBackupPolicyTimeBasedRetention] {
	return pulumix.Output[ClusterAutomatedBackupPolicyTimeBasedRetention]{
		OutputState: o.OutputState,
	}
}

// The retention period.
// A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
func (o ClusterAutomatedBackupPolicyTimeBasedRetentionOutput) RetentionPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterAutomatedBackupPolicyTimeBasedRetention) *string { return v.RetentionPeriod }).(pulumi.StringPtrOutput)
}

type ClusterAutomatedBackupPolicyTimeBasedRetentionPtrOutput struct{ *pulumi.OutputState }

func (ClusterAutomatedBackupPolicyTimeBasedRetentionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAutomatedBackupPolicyTimeBasedRetention)(nil)).Elem()
}

func (o ClusterAutomatedBackupPolicyTimeBasedRetentionPtrOutput) ToClusterAutomatedBackupPolicyTimeBasedRetentionPtrOutput() ClusterAutomatedBackupPolicyTimeBasedRetentionPtrOutput {
	return o
}

func (o ClusterAutomatedBackupPolicyTimeBasedRetentionPtrOutput) ToClusterAutomatedBackupPolicyTimeBasedRetentionPtrOutputWithContext(ctx context.Context) ClusterAutomatedBackupPolicyTimeBasedRetentionPtrOutput {
	return o
}

func (o ClusterAutomatedBackupPolicyTimeBasedRetentionPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ClusterAutomatedBackupPolicyTimeBasedRetention] {
	return pulumix.Output[*ClusterAutomatedBackupPolicyTimeBasedRetention]{
		OutputState: o.OutputState,
	}
}

func (o ClusterAutomatedBackupPolicyTimeBasedRetentionPtrOutput) Elem() ClusterAutomatedBackupPolicyTimeBasedRetentionOutput {
	return o.ApplyT(func(v *ClusterAutomatedBackupPolicyTimeBasedRetention) ClusterAutomatedBackupPolicyTimeBasedRetention {
		if v != nil {
			return *v
		}
		var ret ClusterAutomatedBackupPolicyTimeBasedRetention
		return ret
	}).(ClusterAutomatedBackupPolicyTimeBasedRetentionOutput)
}

// The retention period.
// A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
func (o ClusterAutomatedBackupPolicyTimeBasedRetentionPtrOutput) RetentionPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterAutomatedBackupPolicyTimeBasedRetention) *string {
		if v == nil {
			return nil
		}
		return v.RetentionPeriod
	}).(pulumi.StringPtrOutput)
}

type ClusterAutomatedBackupPolicyWeeklySchedule struct {
	// The days of the week to perform a backup. At least one day of the week must be provided.
	// Each value may be one of: `MONDAY`, `TUESDAY`, `WEDNESDAY`, `THURSDAY`, `FRIDAY`, `SATURDAY`, `SUNDAY`.
	DaysOfWeeks []string `pulumi:"daysOfWeeks"`
	// The times during the day to start a backup. At least one start time must be provided. The start times are assumed to be in UTC and to be an exact hour (e.g., 04:00:00).
	// Structure is documented below.
	StartTimes []ClusterAutomatedBackupPolicyWeeklyScheduleStartTime `pulumi:"startTimes"`
}

// ClusterAutomatedBackupPolicyWeeklyScheduleInput is an input type that accepts ClusterAutomatedBackupPolicyWeeklyScheduleArgs and ClusterAutomatedBackupPolicyWeeklyScheduleOutput values.
// You can construct a concrete instance of `ClusterAutomatedBackupPolicyWeeklyScheduleInput` via:
//
//	ClusterAutomatedBackupPolicyWeeklyScheduleArgs{...}
type ClusterAutomatedBackupPolicyWeeklyScheduleInput interface {
	pulumi.Input

	ToClusterAutomatedBackupPolicyWeeklyScheduleOutput() ClusterAutomatedBackupPolicyWeeklyScheduleOutput
	ToClusterAutomatedBackupPolicyWeeklyScheduleOutputWithContext(context.Context) ClusterAutomatedBackupPolicyWeeklyScheduleOutput
}

type ClusterAutomatedBackupPolicyWeeklyScheduleArgs struct {
	// The days of the week to perform a backup. At least one day of the week must be provided.
	// Each value may be one of: `MONDAY`, `TUESDAY`, `WEDNESDAY`, `THURSDAY`, `FRIDAY`, `SATURDAY`, `SUNDAY`.
	DaysOfWeeks pulumi.StringArrayInput `pulumi:"daysOfWeeks"`
	// The times during the day to start a backup. At least one start time must be provided. The start times are assumed to be in UTC and to be an exact hour (e.g., 04:00:00).
	// Structure is documented below.
	StartTimes ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArrayInput `pulumi:"startTimes"`
}

func (ClusterAutomatedBackupPolicyWeeklyScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAutomatedBackupPolicyWeeklySchedule)(nil)).Elem()
}

func (i ClusterAutomatedBackupPolicyWeeklyScheduleArgs) ToClusterAutomatedBackupPolicyWeeklyScheduleOutput() ClusterAutomatedBackupPolicyWeeklyScheduleOutput {
	return i.ToClusterAutomatedBackupPolicyWeeklyScheduleOutputWithContext(context.Background())
}

func (i ClusterAutomatedBackupPolicyWeeklyScheduleArgs) ToClusterAutomatedBackupPolicyWeeklyScheduleOutputWithContext(ctx context.Context) ClusterAutomatedBackupPolicyWeeklyScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAutomatedBackupPolicyWeeklyScheduleOutput)
}

func (i ClusterAutomatedBackupPolicyWeeklyScheduleArgs) ToOutput(ctx context.Context) pulumix.Output[ClusterAutomatedBackupPolicyWeeklySchedule] {
	return pulumix.Output[ClusterAutomatedBackupPolicyWeeklySchedule]{
		OutputState: i.ToClusterAutomatedBackupPolicyWeeklyScheduleOutputWithContext(ctx).OutputState,
	}
}

func (i ClusterAutomatedBackupPolicyWeeklyScheduleArgs) ToClusterAutomatedBackupPolicyWeeklySchedulePtrOutput() ClusterAutomatedBackupPolicyWeeklySchedulePtrOutput {
	return i.ToClusterAutomatedBackupPolicyWeeklySchedulePtrOutputWithContext(context.Background())
}

func (i ClusterAutomatedBackupPolicyWeeklyScheduleArgs) ToClusterAutomatedBackupPolicyWeeklySchedulePtrOutputWithContext(ctx context.Context) ClusterAutomatedBackupPolicyWeeklySchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAutomatedBackupPolicyWeeklyScheduleOutput).ToClusterAutomatedBackupPolicyWeeklySchedulePtrOutputWithContext(ctx)
}

// ClusterAutomatedBackupPolicyWeeklySchedulePtrInput is an input type that accepts ClusterAutomatedBackupPolicyWeeklyScheduleArgs, ClusterAutomatedBackupPolicyWeeklySchedulePtr and ClusterAutomatedBackupPolicyWeeklySchedulePtrOutput values.
// You can construct a concrete instance of `ClusterAutomatedBackupPolicyWeeklySchedulePtrInput` via:
//
//	        ClusterAutomatedBackupPolicyWeeklyScheduleArgs{...}
//
//	or:
//
//	        nil
type ClusterAutomatedBackupPolicyWeeklySchedulePtrInput interface {
	pulumi.Input

	ToClusterAutomatedBackupPolicyWeeklySchedulePtrOutput() ClusterAutomatedBackupPolicyWeeklySchedulePtrOutput
	ToClusterAutomatedBackupPolicyWeeklySchedulePtrOutputWithContext(context.Context) ClusterAutomatedBackupPolicyWeeklySchedulePtrOutput
}

type clusterAutomatedBackupPolicyWeeklySchedulePtrType ClusterAutomatedBackupPolicyWeeklyScheduleArgs

func ClusterAutomatedBackupPolicyWeeklySchedulePtr(v *ClusterAutomatedBackupPolicyWeeklyScheduleArgs) ClusterAutomatedBackupPolicyWeeklySchedulePtrInput {
	return (*clusterAutomatedBackupPolicyWeeklySchedulePtrType)(v)
}

func (*clusterAutomatedBackupPolicyWeeklySchedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAutomatedBackupPolicyWeeklySchedule)(nil)).Elem()
}

func (i *clusterAutomatedBackupPolicyWeeklySchedulePtrType) ToClusterAutomatedBackupPolicyWeeklySchedulePtrOutput() ClusterAutomatedBackupPolicyWeeklySchedulePtrOutput {
	return i.ToClusterAutomatedBackupPolicyWeeklySchedulePtrOutputWithContext(context.Background())
}

func (i *clusterAutomatedBackupPolicyWeeklySchedulePtrType) ToClusterAutomatedBackupPolicyWeeklySchedulePtrOutputWithContext(ctx context.Context) ClusterAutomatedBackupPolicyWeeklySchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAutomatedBackupPolicyWeeklySchedulePtrOutput)
}

func (i *clusterAutomatedBackupPolicyWeeklySchedulePtrType) ToOutput(ctx context.Context) pulumix.Output[*ClusterAutomatedBackupPolicyWeeklySchedule] {
	return pulumix.Output[*ClusterAutomatedBackupPolicyWeeklySchedule]{
		OutputState: i.ToClusterAutomatedBackupPolicyWeeklySchedulePtrOutputWithContext(ctx).OutputState,
	}
}

type ClusterAutomatedBackupPolicyWeeklyScheduleOutput struct{ *pulumi.OutputState }

func (ClusterAutomatedBackupPolicyWeeklyScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAutomatedBackupPolicyWeeklySchedule)(nil)).Elem()
}

func (o ClusterAutomatedBackupPolicyWeeklyScheduleOutput) ToClusterAutomatedBackupPolicyWeeklyScheduleOutput() ClusterAutomatedBackupPolicyWeeklyScheduleOutput {
	return o
}

func (o ClusterAutomatedBackupPolicyWeeklyScheduleOutput) ToClusterAutomatedBackupPolicyWeeklyScheduleOutputWithContext(ctx context.Context) ClusterAutomatedBackupPolicyWeeklyScheduleOutput {
	return o
}

func (o ClusterAutomatedBackupPolicyWeeklyScheduleOutput) ToClusterAutomatedBackupPolicyWeeklySchedulePtrOutput() ClusterAutomatedBackupPolicyWeeklySchedulePtrOutput {
	return o.ToClusterAutomatedBackupPolicyWeeklySchedulePtrOutputWithContext(context.Background())
}

func (o ClusterAutomatedBackupPolicyWeeklyScheduleOutput) ToClusterAutomatedBackupPolicyWeeklySchedulePtrOutputWithContext(ctx context.Context) ClusterAutomatedBackupPolicyWeeklySchedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterAutomatedBackupPolicyWeeklySchedule) *ClusterAutomatedBackupPolicyWeeklySchedule {
		return &v
	}).(ClusterAutomatedBackupPolicyWeeklySchedulePtrOutput)
}

func (o ClusterAutomatedBackupPolicyWeeklyScheduleOutput) ToOutput(ctx context.Context) pulumix.Output[ClusterAutomatedBackupPolicyWeeklySchedule] {
	return pulumix.Output[ClusterAutomatedBackupPolicyWeeklySchedule]{
		OutputState: o.OutputState,
	}
}

// The days of the week to perform a backup. At least one day of the week must be provided.
// Each value may be one of: `MONDAY`, `TUESDAY`, `WEDNESDAY`, `THURSDAY`, `FRIDAY`, `SATURDAY`, `SUNDAY`.
func (o ClusterAutomatedBackupPolicyWeeklyScheduleOutput) DaysOfWeeks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterAutomatedBackupPolicyWeeklySchedule) []string { return v.DaysOfWeeks }).(pulumi.StringArrayOutput)
}

// The times during the day to start a backup. At least one start time must be provided. The start times are assumed to be in UTC and to be an exact hour (e.g., 04:00:00).
// Structure is documented below.
func (o ClusterAutomatedBackupPolicyWeeklyScheduleOutput) StartTimes() ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArrayOutput {
	return o.ApplyT(func(v ClusterAutomatedBackupPolicyWeeklySchedule) []ClusterAutomatedBackupPolicyWeeklyScheduleStartTime {
		return v.StartTimes
	}).(ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArrayOutput)
}

type ClusterAutomatedBackupPolicyWeeklySchedulePtrOutput struct{ *pulumi.OutputState }

func (ClusterAutomatedBackupPolicyWeeklySchedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAutomatedBackupPolicyWeeklySchedule)(nil)).Elem()
}

func (o ClusterAutomatedBackupPolicyWeeklySchedulePtrOutput) ToClusterAutomatedBackupPolicyWeeklySchedulePtrOutput() ClusterAutomatedBackupPolicyWeeklySchedulePtrOutput {
	return o
}

func (o ClusterAutomatedBackupPolicyWeeklySchedulePtrOutput) ToClusterAutomatedBackupPolicyWeeklySchedulePtrOutputWithContext(ctx context.Context) ClusterAutomatedBackupPolicyWeeklySchedulePtrOutput {
	return o
}

func (o ClusterAutomatedBackupPolicyWeeklySchedulePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ClusterAutomatedBackupPolicyWeeklySchedule] {
	return pulumix.Output[*ClusterAutomatedBackupPolicyWeeklySchedule]{
		OutputState: o.OutputState,
	}
}

func (o ClusterAutomatedBackupPolicyWeeklySchedulePtrOutput) Elem() ClusterAutomatedBackupPolicyWeeklyScheduleOutput {
	return o.ApplyT(func(v *ClusterAutomatedBackupPolicyWeeklySchedule) ClusterAutomatedBackupPolicyWeeklySchedule {
		if v != nil {
			return *v
		}
		var ret ClusterAutomatedBackupPolicyWeeklySchedule
		return ret
	}).(ClusterAutomatedBackupPolicyWeeklyScheduleOutput)
}

// The days of the week to perform a backup. At least one day of the week must be provided.
// Each value may be one of: `MONDAY`, `TUESDAY`, `WEDNESDAY`, `THURSDAY`, `FRIDAY`, `SATURDAY`, `SUNDAY`.
func (o ClusterAutomatedBackupPolicyWeeklySchedulePtrOutput) DaysOfWeeks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterAutomatedBackupPolicyWeeklySchedule) []string {
		if v == nil {
			return nil
		}
		return v.DaysOfWeeks
	}).(pulumi.StringArrayOutput)
}

// The times during the day to start a backup. At least one start time must be provided. The start times are assumed to be in UTC and to be an exact hour (e.g., 04:00:00).
// Structure is documented below.
func (o ClusterAutomatedBackupPolicyWeeklySchedulePtrOutput) StartTimes() ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArrayOutput {
	return o.ApplyT(func(v *ClusterAutomatedBackupPolicyWeeklySchedule) []ClusterAutomatedBackupPolicyWeeklyScheduleStartTime {
		if v == nil {
			return nil
		}
		return v.StartTimes
	}).(ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArrayOutput)
}

type ClusterAutomatedBackupPolicyWeeklyScheduleStartTime struct {
	// Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value "24:00:00" for scenarios like business closing time.
	Hours *int `pulumi:"hours"`
	// Minutes of hour of day. Currently, only the value 0 is supported.
	Minutes *int `pulumi:"minutes"`
	// Fractions of seconds in nanoseconds. Currently, only the value 0 is supported.
	Nanos *int `pulumi:"nanos"`
	// Seconds of minutes of the time. Currently, only the value 0 is supported.
	Seconds *int `pulumi:"seconds"`
}

// ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeInput is an input type that accepts ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArgs and ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeOutput values.
// You can construct a concrete instance of `ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeInput` via:
//
//	ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArgs{...}
type ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeInput interface {
	pulumi.Input

	ToClusterAutomatedBackupPolicyWeeklyScheduleStartTimeOutput() ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeOutput
	ToClusterAutomatedBackupPolicyWeeklyScheduleStartTimeOutputWithContext(context.Context) ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeOutput
}

type ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArgs struct {
	// Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value "24:00:00" for scenarios like business closing time.
	Hours pulumi.IntPtrInput `pulumi:"hours"`
	// Minutes of hour of day. Currently, only the value 0 is supported.
	Minutes pulumi.IntPtrInput `pulumi:"minutes"`
	// Fractions of seconds in nanoseconds. Currently, only the value 0 is supported.
	Nanos pulumi.IntPtrInput `pulumi:"nanos"`
	// Seconds of minutes of the time. Currently, only the value 0 is supported.
	Seconds pulumi.IntPtrInput `pulumi:"seconds"`
}

func (ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAutomatedBackupPolicyWeeklyScheduleStartTime)(nil)).Elem()
}

func (i ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArgs) ToClusterAutomatedBackupPolicyWeeklyScheduleStartTimeOutput() ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeOutput {
	return i.ToClusterAutomatedBackupPolicyWeeklyScheduleStartTimeOutputWithContext(context.Background())
}

func (i ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArgs) ToClusterAutomatedBackupPolicyWeeklyScheduleStartTimeOutputWithContext(ctx context.Context) ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeOutput)
}

func (i ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArgs) ToOutput(ctx context.Context) pulumix.Output[ClusterAutomatedBackupPolicyWeeklyScheduleStartTime] {
	return pulumix.Output[ClusterAutomatedBackupPolicyWeeklyScheduleStartTime]{
		OutputState: i.ToClusterAutomatedBackupPolicyWeeklyScheduleStartTimeOutputWithContext(ctx).OutputState,
	}
}

// ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArrayInput is an input type that accepts ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArray and ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArrayOutput values.
// You can construct a concrete instance of `ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArrayInput` via:
//
//	ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArray{ ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArgs{...} }
type ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArrayInput interface {
	pulumi.Input

	ToClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArrayOutput() ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArrayOutput
	ToClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArrayOutputWithContext(context.Context) ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArrayOutput
}

type ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArray []ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeInput

func (ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterAutomatedBackupPolicyWeeklyScheduleStartTime)(nil)).Elem()
}

func (i ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArray) ToClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArrayOutput() ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArrayOutput {
	return i.ToClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArrayOutputWithContext(context.Background())
}

func (i ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArray) ToClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArrayOutputWithContext(ctx context.Context) ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArrayOutput)
}

func (i ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArray) ToOutput(ctx context.Context) pulumix.Output[[]ClusterAutomatedBackupPolicyWeeklyScheduleStartTime] {
	return pulumix.Output[[]ClusterAutomatedBackupPolicyWeeklyScheduleStartTime]{
		OutputState: i.ToClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArrayOutputWithContext(ctx).OutputState,
	}
}

type ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeOutput struct{ *pulumi.OutputState }

func (ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAutomatedBackupPolicyWeeklyScheduleStartTime)(nil)).Elem()
}

func (o ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeOutput) ToClusterAutomatedBackupPolicyWeeklyScheduleStartTimeOutput() ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeOutput {
	return o
}

func (o ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeOutput) ToClusterAutomatedBackupPolicyWeeklyScheduleStartTimeOutputWithContext(ctx context.Context) ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeOutput {
	return o
}

func (o ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeOutput) ToOutput(ctx context.Context) pulumix.Output[ClusterAutomatedBackupPolicyWeeklyScheduleStartTime] {
	return pulumix.Output[ClusterAutomatedBackupPolicyWeeklyScheduleStartTime]{
		OutputState: o.OutputState,
	}
}

// Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value "24:00:00" for scenarios like business closing time.
func (o ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeOutput) Hours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterAutomatedBackupPolicyWeeklyScheduleStartTime) *int { return v.Hours }).(pulumi.IntPtrOutput)
}

// Minutes of hour of day. Currently, only the value 0 is supported.
func (o ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeOutput) Minutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterAutomatedBackupPolicyWeeklyScheduleStartTime) *int { return v.Minutes }).(pulumi.IntPtrOutput)
}

// Fractions of seconds in nanoseconds. Currently, only the value 0 is supported.
func (o ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeOutput) Nanos() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterAutomatedBackupPolicyWeeklyScheduleStartTime) *int { return v.Nanos }).(pulumi.IntPtrOutput)
}

// Seconds of minutes of the time. Currently, only the value 0 is supported.
func (o ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeOutput) Seconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterAutomatedBackupPolicyWeeklyScheduleStartTime) *int { return v.Seconds }).(pulumi.IntPtrOutput)
}

type ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArrayOutput struct{ *pulumi.OutputState }

func (ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterAutomatedBackupPolicyWeeklyScheduleStartTime)(nil)).Elem()
}

func (o ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArrayOutput) ToClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArrayOutput() ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArrayOutput {
	return o
}

func (o ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArrayOutput) ToClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArrayOutputWithContext(ctx context.Context) ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArrayOutput {
	return o
}

func (o ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ClusterAutomatedBackupPolicyWeeklyScheduleStartTime] {
	return pulumix.Output[[]ClusterAutomatedBackupPolicyWeeklyScheduleStartTime]{
		OutputState: o.OutputState,
	}
}

func (o ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArrayOutput) Index(i pulumi.IntInput) ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterAutomatedBackupPolicyWeeklyScheduleStartTime {
		return vs[0].([]ClusterAutomatedBackupPolicyWeeklyScheduleStartTime)[vs[1].(int)]
	}).(ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeOutput)
}

type ClusterBackupSource struct {
	// The name of the backup that this cluster is restored from.
	BackupName *string `pulumi:"backupName"`
}

// ClusterBackupSourceInput is an input type that accepts ClusterBackupSourceArgs and ClusterBackupSourceOutput values.
// You can construct a concrete instance of `ClusterBackupSourceInput` via:
//
//	ClusterBackupSourceArgs{...}
type ClusterBackupSourceInput interface {
	pulumi.Input

	ToClusterBackupSourceOutput() ClusterBackupSourceOutput
	ToClusterBackupSourceOutputWithContext(context.Context) ClusterBackupSourceOutput
}

type ClusterBackupSourceArgs struct {
	// The name of the backup that this cluster is restored from.
	BackupName pulumi.StringPtrInput `pulumi:"backupName"`
}

func (ClusterBackupSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBackupSource)(nil)).Elem()
}

func (i ClusterBackupSourceArgs) ToClusterBackupSourceOutput() ClusterBackupSourceOutput {
	return i.ToClusterBackupSourceOutputWithContext(context.Background())
}

func (i ClusterBackupSourceArgs) ToClusterBackupSourceOutputWithContext(ctx context.Context) ClusterBackupSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBackupSourceOutput)
}

func (i ClusterBackupSourceArgs) ToOutput(ctx context.Context) pulumix.Output[ClusterBackupSource] {
	return pulumix.Output[ClusterBackupSource]{
		OutputState: i.ToClusterBackupSourceOutputWithContext(ctx).OutputState,
	}
}

// ClusterBackupSourceArrayInput is an input type that accepts ClusterBackupSourceArray and ClusterBackupSourceArrayOutput values.
// You can construct a concrete instance of `ClusterBackupSourceArrayInput` via:
//
//	ClusterBackupSourceArray{ ClusterBackupSourceArgs{...} }
type ClusterBackupSourceArrayInput interface {
	pulumi.Input

	ToClusterBackupSourceArrayOutput() ClusterBackupSourceArrayOutput
	ToClusterBackupSourceArrayOutputWithContext(context.Context) ClusterBackupSourceArrayOutput
}

type ClusterBackupSourceArray []ClusterBackupSourceInput

func (ClusterBackupSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterBackupSource)(nil)).Elem()
}

func (i ClusterBackupSourceArray) ToClusterBackupSourceArrayOutput() ClusterBackupSourceArrayOutput {
	return i.ToClusterBackupSourceArrayOutputWithContext(context.Background())
}

func (i ClusterBackupSourceArray) ToClusterBackupSourceArrayOutputWithContext(ctx context.Context) ClusterBackupSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBackupSourceArrayOutput)
}

func (i ClusterBackupSourceArray) ToOutput(ctx context.Context) pulumix.Output[[]ClusterBackupSource] {
	return pulumix.Output[[]ClusterBackupSource]{
		OutputState: i.ToClusterBackupSourceArrayOutputWithContext(ctx).OutputState,
	}
}

type ClusterBackupSourceOutput struct{ *pulumi.OutputState }

func (ClusterBackupSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBackupSource)(nil)).Elem()
}

func (o ClusterBackupSourceOutput) ToClusterBackupSourceOutput() ClusterBackupSourceOutput {
	return o
}

func (o ClusterBackupSourceOutput) ToClusterBackupSourceOutputWithContext(ctx context.Context) ClusterBackupSourceOutput {
	return o
}

func (o ClusterBackupSourceOutput) ToOutput(ctx context.Context) pulumix.Output[ClusterBackupSource] {
	return pulumix.Output[ClusterBackupSource]{
		OutputState: o.OutputState,
	}
}

// The name of the backup that this cluster is restored from.
func (o ClusterBackupSourceOutput) BackupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterBackupSource) *string { return v.BackupName }).(pulumi.StringPtrOutput)
}

type ClusterBackupSourceArrayOutput struct{ *pulumi.OutputState }

func (ClusterBackupSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterBackupSource)(nil)).Elem()
}

func (o ClusterBackupSourceArrayOutput) ToClusterBackupSourceArrayOutput() ClusterBackupSourceArrayOutput {
	return o
}

func (o ClusterBackupSourceArrayOutput) ToClusterBackupSourceArrayOutputWithContext(ctx context.Context) ClusterBackupSourceArrayOutput {
	return o
}

func (o ClusterBackupSourceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ClusterBackupSource] {
	return pulumix.Output[[]ClusterBackupSource]{
		OutputState: o.OutputState,
	}
}

func (o ClusterBackupSourceArrayOutput) Index(i pulumi.IntInput) ClusterBackupSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterBackupSource {
		return vs[0].([]ClusterBackupSource)[vs[1].(int)]
	}).(ClusterBackupSourceOutput)
}

type ClusterContinuousBackupConfig struct {
	// Whether continuous backup recovery is enabled. If not set, defaults to true.
	Enabled *bool `pulumi:"enabled"`
	// EncryptionConfig describes the encryption config of a cluster or a backup that is encrypted with a CMEK (customer-managed encryption key).
	// Structure is documented below.
	EncryptionConfig *ClusterContinuousBackupConfigEncryptionConfig `pulumi:"encryptionConfig"`
	// The numbers of days that are eligible to restore from using PITR. To support the entire recovery window, backups and logs are retained for one day more than the recovery window.
	// If not set, defaults to 14 days.
	RecoveryWindowDays *int `pulumi:"recoveryWindowDays"`
}

// ClusterContinuousBackupConfigInput is an input type that accepts ClusterContinuousBackupConfigArgs and ClusterContinuousBackupConfigOutput values.
// You can construct a concrete instance of `ClusterContinuousBackupConfigInput` via:
//
//	ClusterContinuousBackupConfigArgs{...}
type ClusterContinuousBackupConfigInput interface {
	pulumi.Input

	ToClusterContinuousBackupConfigOutput() ClusterContinuousBackupConfigOutput
	ToClusterContinuousBackupConfigOutputWithContext(context.Context) ClusterContinuousBackupConfigOutput
}

type ClusterContinuousBackupConfigArgs struct {
	// Whether continuous backup recovery is enabled. If not set, defaults to true.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// EncryptionConfig describes the encryption config of a cluster or a backup that is encrypted with a CMEK (customer-managed encryption key).
	// Structure is documented below.
	EncryptionConfig ClusterContinuousBackupConfigEncryptionConfigPtrInput `pulumi:"encryptionConfig"`
	// The numbers of days that are eligible to restore from using PITR. To support the entire recovery window, backups and logs are retained for one day more than the recovery window.
	// If not set, defaults to 14 days.
	RecoveryWindowDays pulumi.IntPtrInput `pulumi:"recoveryWindowDays"`
}

func (ClusterContinuousBackupConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterContinuousBackupConfig)(nil)).Elem()
}

func (i ClusterContinuousBackupConfigArgs) ToClusterContinuousBackupConfigOutput() ClusterContinuousBackupConfigOutput {
	return i.ToClusterContinuousBackupConfigOutputWithContext(context.Background())
}

func (i ClusterContinuousBackupConfigArgs) ToClusterContinuousBackupConfigOutputWithContext(ctx context.Context) ClusterContinuousBackupConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterContinuousBackupConfigOutput)
}

func (i ClusterContinuousBackupConfigArgs) ToOutput(ctx context.Context) pulumix.Output[ClusterContinuousBackupConfig] {
	return pulumix.Output[ClusterContinuousBackupConfig]{
		OutputState: i.ToClusterContinuousBackupConfigOutputWithContext(ctx).OutputState,
	}
}

func (i ClusterContinuousBackupConfigArgs) ToClusterContinuousBackupConfigPtrOutput() ClusterContinuousBackupConfigPtrOutput {
	return i.ToClusterContinuousBackupConfigPtrOutputWithContext(context.Background())
}

func (i ClusterContinuousBackupConfigArgs) ToClusterContinuousBackupConfigPtrOutputWithContext(ctx context.Context) ClusterContinuousBackupConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterContinuousBackupConfigOutput).ToClusterContinuousBackupConfigPtrOutputWithContext(ctx)
}

// ClusterContinuousBackupConfigPtrInput is an input type that accepts ClusterContinuousBackupConfigArgs, ClusterContinuousBackupConfigPtr and ClusterContinuousBackupConfigPtrOutput values.
// You can construct a concrete instance of `ClusterContinuousBackupConfigPtrInput` via:
//
//	        ClusterContinuousBackupConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterContinuousBackupConfigPtrInput interface {
	pulumi.Input

	ToClusterContinuousBackupConfigPtrOutput() ClusterContinuousBackupConfigPtrOutput
	ToClusterContinuousBackupConfigPtrOutputWithContext(context.Context) ClusterContinuousBackupConfigPtrOutput
}

type clusterContinuousBackupConfigPtrType ClusterContinuousBackupConfigArgs

func ClusterContinuousBackupConfigPtr(v *ClusterContinuousBackupConfigArgs) ClusterContinuousBackupConfigPtrInput {
	return (*clusterContinuousBackupConfigPtrType)(v)
}

func (*clusterContinuousBackupConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterContinuousBackupConfig)(nil)).Elem()
}

func (i *clusterContinuousBackupConfigPtrType) ToClusterContinuousBackupConfigPtrOutput() ClusterContinuousBackupConfigPtrOutput {
	return i.ToClusterContinuousBackupConfigPtrOutputWithContext(context.Background())
}

func (i *clusterContinuousBackupConfigPtrType) ToClusterContinuousBackupConfigPtrOutputWithContext(ctx context.Context) ClusterContinuousBackupConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterContinuousBackupConfigPtrOutput)
}

func (i *clusterContinuousBackupConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*ClusterContinuousBackupConfig] {
	return pulumix.Output[*ClusterContinuousBackupConfig]{
		OutputState: i.ToClusterContinuousBackupConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type ClusterContinuousBackupConfigOutput struct{ *pulumi.OutputState }

func (ClusterContinuousBackupConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterContinuousBackupConfig)(nil)).Elem()
}

func (o ClusterContinuousBackupConfigOutput) ToClusterContinuousBackupConfigOutput() ClusterContinuousBackupConfigOutput {
	return o
}

func (o ClusterContinuousBackupConfigOutput) ToClusterContinuousBackupConfigOutputWithContext(ctx context.Context) ClusterContinuousBackupConfigOutput {
	return o
}

func (o ClusterContinuousBackupConfigOutput) ToClusterContinuousBackupConfigPtrOutput() ClusterContinuousBackupConfigPtrOutput {
	return o.ToClusterContinuousBackupConfigPtrOutputWithContext(context.Background())
}

func (o ClusterContinuousBackupConfigOutput) ToClusterContinuousBackupConfigPtrOutputWithContext(ctx context.Context) ClusterContinuousBackupConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterContinuousBackupConfig) *ClusterContinuousBackupConfig {
		return &v
	}).(ClusterContinuousBackupConfigPtrOutput)
}

func (o ClusterContinuousBackupConfigOutput) ToOutput(ctx context.Context) pulumix.Output[ClusterContinuousBackupConfig] {
	return pulumix.Output[ClusterContinuousBackupConfig]{
		OutputState: o.OutputState,
	}
}

// Whether continuous backup recovery is enabled. If not set, defaults to true.
func (o ClusterContinuousBackupConfigOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterContinuousBackupConfig) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// EncryptionConfig describes the encryption config of a cluster or a backup that is encrypted with a CMEK (customer-managed encryption key).
// Structure is documented below.
func (o ClusterContinuousBackupConfigOutput) EncryptionConfig() ClusterContinuousBackupConfigEncryptionConfigPtrOutput {
	return o.ApplyT(func(v ClusterContinuousBackupConfig) *ClusterContinuousBackupConfigEncryptionConfig {
		return v.EncryptionConfig
	}).(ClusterContinuousBackupConfigEncryptionConfigPtrOutput)
}

// The numbers of days that are eligible to restore from using PITR. To support the entire recovery window, backups and logs are retained for one day more than the recovery window.
// If not set, defaults to 14 days.
func (o ClusterContinuousBackupConfigOutput) RecoveryWindowDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterContinuousBackupConfig) *int { return v.RecoveryWindowDays }).(pulumi.IntPtrOutput)
}

type ClusterContinuousBackupConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterContinuousBackupConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterContinuousBackupConfig)(nil)).Elem()
}

func (o ClusterContinuousBackupConfigPtrOutput) ToClusterContinuousBackupConfigPtrOutput() ClusterContinuousBackupConfigPtrOutput {
	return o
}

func (o ClusterContinuousBackupConfigPtrOutput) ToClusterContinuousBackupConfigPtrOutputWithContext(ctx context.Context) ClusterContinuousBackupConfigPtrOutput {
	return o
}

func (o ClusterContinuousBackupConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ClusterContinuousBackupConfig] {
	return pulumix.Output[*ClusterContinuousBackupConfig]{
		OutputState: o.OutputState,
	}
}

func (o ClusterContinuousBackupConfigPtrOutput) Elem() ClusterContinuousBackupConfigOutput {
	return o.ApplyT(func(v *ClusterContinuousBackupConfig) ClusterContinuousBackupConfig {
		if v != nil {
			return *v
		}
		var ret ClusterContinuousBackupConfig
		return ret
	}).(ClusterContinuousBackupConfigOutput)
}

// Whether continuous backup recovery is enabled. If not set, defaults to true.
func (o ClusterContinuousBackupConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterContinuousBackupConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// EncryptionConfig describes the encryption config of a cluster or a backup that is encrypted with a CMEK (customer-managed encryption key).
// Structure is documented below.
func (o ClusterContinuousBackupConfigPtrOutput) EncryptionConfig() ClusterContinuousBackupConfigEncryptionConfigPtrOutput {
	return o.ApplyT(func(v *ClusterContinuousBackupConfig) *ClusterContinuousBackupConfigEncryptionConfig {
		if v == nil {
			return nil
		}
		return v.EncryptionConfig
	}).(ClusterContinuousBackupConfigEncryptionConfigPtrOutput)
}

// The numbers of days that are eligible to restore from using PITR. To support the entire recovery window, backups and logs are retained for one day more than the recovery window.
// If not set, defaults to 14 days.
func (o ClusterContinuousBackupConfigPtrOutput) RecoveryWindowDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterContinuousBackupConfig) *int {
		if v == nil {
			return nil
		}
		return v.RecoveryWindowDays
	}).(pulumi.IntPtrOutput)
}

type ClusterContinuousBackupConfigEncryptionConfig struct {
	// The fully-qualified resource name of the KMS key. Each Cloud KMS key is regionalized and has the following format: projects/[PROJECT]/locations/[REGION]/keyRings/[RING]/cryptoKeys/[KEY_NAME].
	KmsKeyName *string `pulumi:"kmsKeyName"`
}

// ClusterContinuousBackupConfigEncryptionConfigInput is an input type that accepts ClusterContinuousBackupConfigEncryptionConfigArgs and ClusterContinuousBackupConfigEncryptionConfigOutput values.
// You can construct a concrete instance of `ClusterContinuousBackupConfigEncryptionConfigInput` via:
//
//	ClusterContinuousBackupConfigEncryptionConfigArgs{...}
type ClusterContinuousBackupConfigEncryptionConfigInput interface {
	pulumi.Input

	ToClusterContinuousBackupConfigEncryptionConfigOutput() ClusterContinuousBackupConfigEncryptionConfigOutput
	ToClusterContinuousBackupConfigEncryptionConfigOutputWithContext(context.Context) ClusterContinuousBackupConfigEncryptionConfigOutput
}

type ClusterContinuousBackupConfigEncryptionConfigArgs struct {
	// The fully-qualified resource name of the KMS key. Each Cloud KMS key is regionalized and has the following format: projects/[PROJECT]/locations/[REGION]/keyRings/[RING]/cryptoKeys/[KEY_NAME].
	KmsKeyName pulumi.StringPtrInput `pulumi:"kmsKeyName"`
}

func (ClusterContinuousBackupConfigEncryptionConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterContinuousBackupConfigEncryptionConfig)(nil)).Elem()
}

func (i ClusterContinuousBackupConfigEncryptionConfigArgs) ToClusterContinuousBackupConfigEncryptionConfigOutput() ClusterContinuousBackupConfigEncryptionConfigOutput {
	return i.ToClusterContinuousBackupConfigEncryptionConfigOutputWithContext(context.Background())
}

func (i ClusterContinuousBackupConfigEncryptionConfigArgs) ToClusterContinuousBackupConfigEncryptionConfigOutputWithContext(ctx context.Context) ClusterContinuousBackupConfigEncryptionConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterContinuousBackupConfigEncryptionConfigOutput)
}

func (i ClusterContinuousBackupConfigEncryptionConfigArgs) ToOutput(ctx context.Context) pulumix.Output[ClusterContinuousBackupConfigEncryptionConfig] {
	return pulumix.Output[ClusterContinuousBackupConfigEncryptionConfig]{
		OutputState: i.ToClusterContinuousBackupConfigEncryptionConfigOutputWithContext(ctx).OutputState,
	}
}

func (i ClusterContinuousBackupConfigEncryptionConfigArgs) ToClusterContinuousBackupConfigEncryptionConfigPtrOutput() ClusterContinuousBackupConfigEncryptionConfigPtrOutput {
	return i.ToClusterContinuousBackupConfigEncryptionConfigPtrOutputWithContext(context.Background())
}

func (i ClusterContinuousBackupConfigEncryptionConfigArgs) ToClusterContinuousBackupConfigEncryptionConfigPtrOutputWithContext(ctx context.Context) ClusterContinuousBackupConfigEncryptionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterContinuousBackupConfigEncryptionConfigOutput).ToClusterContinuousBackupConfigEncryptionConfigPtrOutputWithContext(ctx)
}

// ClusterContinuousBackupConfigEncryptionConfigPtrInput is an input type that accepts ClusterContinuousBackupConfigEncryptionConfigArgs, ClusterContinuousBackupConfigEncryptionConfigPtr and ClusterContinuousBackupConfigEncryptionConfigPtrOutput values.
// You can construct a concrete instance of `ClusterContinuousBackupConfigEncryptionConfigPtrInput` via:
//
//	        ClusterContinuousBackupConfigEncryptionConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterContinuousBackupConfigEncryptionConfigPtrInput interface {
	pulumi.Input

	ToClusterContinuousBackupConfigEncryptionConfigPtrOutput() ClusterContinuousBackupConfigEncryptionConfigPtrOutput
	ToClusterContinuousBackupConfigEncryptionConfigPtrOutputWithContext(context.Context) ClusterContinuousBackupConfigEncryptionConfigPtrOutput
}

type clusterContinuousBackupConfigEncryptionConfigPtrType ClusterContinuousBackupConfigEncryptionConfigArgs

func ClusterContinuousBackupConfigEncryptionConfigPtr(v *ClusterContinuousBackupConfigEncryptionConfigArgs) ClusterContinuousBackupConfigEncryptionConfigPtrInput {
	return (*clusterContinuousBackupConfigEncryptionConfigPtrType)(v)
}

func (*clusterContinuousBackupConfigEncryptionConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterContinuousBackupConfigEncryptionConfig)(nil)).Elem()
}

func (i *clusterContinuousBackupConfigEncryptionConfigPtrType) ToClusterContinuousBackupConfigEncryptionConfigPtrOutput() ClusterContinuousBackupConfigEncryptionConfigPtrOutput {
	return i.ToClusterContinuousBackupConfigEncryptionConfigPtrOutputWithContext(context.Background())
}

func (i *clusterContinuousBackupConfigEncryptionConfigPtrType) ToClusterContinuousBackupConfigEncryptionConfigPtrOutputWithContext(ctx context.Context) ClusterContinuousBackupConfigEncryptionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterContinuousBackupConfigEncryptionConfigPtrOutput)
}

func (i *clusterContinuousBackupConfigEncryptionConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*ClusterContinuousBackupConfigEncryptionConfig] {
	return pulumix.Output[*ClusterContinuousBackupConfigEncryptionConfig]{
		OutputState: i.ToClusterContinuousBackupConfigEncryptionConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type ClusterContinuousBackupConfigEncryptionConfigOutput struct{ *pulumi.OutputState }

func (ClusterContinuousBackupConfigEncryptionConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterContinuousBackupConfigEncryptionConfig)(nil)).Elem()
}

func (o ClusterContinuousBackupConfigEncryptionConfigOutput) ToClusterContinuousBackupConfigEncryptionConfigOutput() ClusterContinuousBackupConfigEncryptionConfigOutput {
	return o
}

func (o ClusterContinuousBackupConfigEncryptionConfigOutput) ToClusterContinuousBackupConfigEncryptionConfigOutputWithContext(ctx context.Context) ClusterContinuousBackupConfigEncryptionConfigOutput {
	return o
}

func (o ClusterContinuousBackupConfigEncryptionConfigOutput) ToClusterContinuousBackupConfigEncryptionConfigPtrOutput() ClusterContinuousBackupConfigEncryptionConfigPtrOutput {
	return o.ToClusterContinuousBackupConfigEncryptionConfigPtrOutputWithContext(context.Background())
}

func (o ClusterContinuousBackupConfigEncryptionConfigOutput) ToClusterContinuousBackupConfigEncryptionConfigPtrOutputWithContext(ctx context.Context) ClusterContinuousBackupConfigEncryptionConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterContinuousBackupConfigEncryptionConfig) *ClusterContinuousBackupConfigEncryptionConfig {
		return &v
	}).(ClusterContinuousBackupConfigEncryptionConfigPtrOutput)
}

func (o ClusterContinuousBackupConfigEncryptionConfigOutput) ToOutput(ctx context.Context) pulumix.Output[ClusterContinuousBackupConfigEncryptionConfig] {
	return pulumix.Output[ClusterContinuousBackupConfigEncryptionConfig]{
		OutputState: o.OutputState,
	}
}

// The fully-qualified resource name of the KMS key. Each Cloud KMS key is regionalized and has the following format: projects/[PROJECT]/locations/[REGION]/keyRings/[RING]/cryptoKeys/[KEY_NAME].
func (o ClusterContinuousBackupConfigEncryptionConfigOutput) KmsKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterContinuousBackupConfigEncryptionConfig) *string { return v.KmsKeyName }).(pulumi.StringPtrOutput)
}

type ClusterContinuousBackupConfigEncryptionConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterContinuousBackupConfigEncryptionConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterContinuousBackupConfigEncryptionConfig)(nil)).Elem()
}

func (o ClusterContinuousBackupConfigEncryptionConfigPtrOutput) ToClusterContinuousBackupConfigEncryptionConfigPtrOutput() ClusterContinuousBackupConfigEncryptionConfigPtrOutput {
	return o
}

func (o ClusterContinuousBackupConfigEncryptionConfigPtrOutput) ToClusterContinuousBackupConfigEncryptionConfigPtrOutputWithContext(ctx context.Context) ClusterContinuousBackupConfigEncryptionConfigPtrOutput {
	return o
}

func (o ClusterContinuousBackupConfigEncryptionConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ClusterContinuousBackupConfigEncryptionConfig] {
	return pulumix.Output[*ClusterContinuousBackupConfigEncryptionConfig]{
		OutputState: o.OutputState,
	}
}

func (o ClusterContinuousBackupConfigEncryptionConfigPtrOutput) Elem() ClusterContinuousBackupConfigEncryptionConfigOutput {
	return o.ApplyT(func(v *ClusterContinuousBackupConfigEncryptionConfig) ClusterContinuousBackupConfigEncryptionConfig {
		if v != nil {
			return *v
		}
		var ret ClusterContinuousBackupConfigEncryptionConfig
		return ret
	}).(ClusterContinuousBackupConfigEncryptionConfigOutput)
}

// The fully-qualified resource name of the KMS key. Each Cloud KMS key is regionalized and has the following format: projects/[PROJECT]/locations/[REGION]/keyRings/[RING]/cryptoKeys/[KEY_NAME].
func (o ClusterContinuousBackupConfigEncryptionConfigPtrOutput) KmsKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterContinuousBackupConfigEncryptionConfig) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyName
	}).(pulumi.StringPtrOutput)
}

type ClusterContinuousBackupInfo struct {
	// (Output)
	// The earliest restorable time that can be restored to. Output only field.
	EarliestRestorableTime *string `pulumi:"earliestRestorableTime"`
	// (Output)
	// When ContinuousBackup was most recently enabled. Set to null if ContinuousBackup is not enabled.
	EnabledTime *string `pulumi:"enabledTime"`
	// (Output)
	// Output only. The encryption information for the WALs and backups required for ContinuousBackup.
	// Structure is documented below.
	EncryptionInfos []ClusterContinuousBackupInfoEncryptionInfo `pulumi:"encryptionInfos"`
	// (Output)
	// Days of the week on which a continuous backup is taken. Output only field. Ignored if passed into the request.
	Schedules []string `pulumi:"schedules"`
}

// ClusterContinuousBackupInfoInput is an input type that accepts ClusterContinuousBackupInfoArgs and ClusterContinuousBackupInfoOutput values.
// You can construct a concrete instance of `ClusterContinuousBackupInfoInput` via:
//
//	ClusterContinuousBackupInfoArgs{...}
type ClusterContinuousBackupInfoInput interface {
	pulumi.Input

	ToClusterContinuousBackupInfoOutput() ClusterContinuousBackupInfoOutput
	ToClusterContinuousBackupInfoOutputWithContext(context.Context) ClusterContinuousBackupInfoOutput
}

type ClusterContinuousBackupInfoArgs struct {
	// (Output)
	// The earliest restorable time that can be restored to. Output only field.
	EarliestRestorableTime pulumi.StringPtrInput `pulumi:"earliestRestorableTime"`
	// (Output)
	// When ContinuousBackup was most recently enabled. Set to null if ContinuousBackup is not enabled.
	EnabledTime pulumi.StringPtrInput `pulumi:"enabledTime"`
	// (Output)
	// Output only. The encryption information for the WALs and backups required for ContinuousBackup.
	// Structure is documented below.
	EncryptionInfos ClusterContinuousBackupInfoEncryptionInfoArrayInput `pulumi:"encryptionInfos"`
	// (Output)
	// Days of the week on which a continuous backup is taken. Output only field. Ignored if passed into the request.
	Schedules pulumi.StringArrayInput `pulumi:"schedules"`
}

func (ClusterContinuousBackupInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterContinuousBackupInfo)(nil)).Elem()
}

func (i ClusterContinuousBackupInfoArgs) ToClusterContinuousBackupInfoOutput() ClusterContinuousBackupInfoOutput {
	return i.ToClusterContinuousBackupInfoOutputWithContext(context.Background())
}

func (i ClusterContinuousBackupInfoArgs) ToClusterContinuousBackupInfoOutputWithContext(ctx context.Context) ClusterContinuousBackupInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterContinuousBackupInfoOutput)
}

func (i ClusterContinuousBackupInfoArgs) ToOutput(ctx context.Context) pulumix.Output[ClusterContinuousBackupInfo] {
	return pulumix.Output[ClusterContinuousBackupInfo]{
		OutputState: i.ToClusterContinuousBackupInfoOutputWithContext(ctx).OutputState,
	}
}

// ClusterContinuousBackupInfoArrayInput is an input type that accepts ClusterContinuousBackupInfoArray and ClusterContinuousBackupInfoArrayOutput values.
// You can construct a concrete instance of `ClusterContinuousBackupInfoArrayInput` via:
//
//	ClusterContinuousBackupInfoArray{ ClusterContinuousBackupInfoArgs{...} }
type ClusterContinuousBackupInfoArrayInput interface {
	pulumi.Input

	ToClusterContinuousBackupInfoArrayOutput() ClusterContinuousBackupInfoArrayOutput
	ToClusterContinuousBackupInfoArrayOutputWithContext(context.Context) ClusterContinuousBackupInfoArrayOutput
}

type ClusterContinuousBackupInfoArray []ClusterContinuousBackupInfoInput

func (ClusterContinuousBackupInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterContinuousBackupInfo)(nil)).Elem()
}

func (i ClusterContinuousBackupInfoArray) ToClusterContinuousBackupInfoArrayOutput() ClusterContinuousBackupInfoArrayOutput {
	return i.ToClusterContinuousBackupInfoArrayOutputWithContext(context.Background())
}

func (i ClusterContinuousBackupInfoArray) ToClusterContinuousBackupInfoArrayOutputWithContext(ctx context.Context) ClusterContinuousBackupInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterContinuousBackupInfoArrayOutput)
}

func (i ClusterContinuousBackupInfoArray) ToOutput(ctx context.Context) pulumix.Output[[]ClusterContinuousBackupInfo] {
	return pulumix.Output[[]ClusterContinuousBackupInfo]{
		OutputState: i.ToClusterContinuousBackupInfoArrayOutputWithContext(ctx).OutputState,
	}
}

type ClusterContinuousBackupInfoOutput struct{ *pulumi.OutputState }

func (ClusterContinuousBackupInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterContinuousBackupInfo)(nil)).Elem()
}

func (o ClusterContinuousBackupInfoOutput) ToClusterContinuousBackupInfoOutput() ClusterContinuousBackupInfoOutput {
	return o
}

func (o ClusterContinuousBackupInfoOutput) ToClusterContinuousBackupInfoOutputWithContext(ctx context.Context) ClusterContinuousBackupInfoOutput {
	return o
}

func (o ClusterContinuousBackupInfoOutput) ToOutput(ctx context.Context) pulumix.Output[ClusterContinuousBackupInfo] {
	return pulumix.Output[ClusterContinuousBackupInfo]{
		OutputState: o.OutputState,
	}
}

// (Output)
// The earliest restorable time that can be restored to. Output only field.
func (o ClusterContinuousBackupInfoOutput) EarliestRestorableTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterContinuousBackupInfo) *string { return v.EarliestRestorableTime }).(pulumi.StringPtrOutput)
}

// (Output)
// When ContinuousBackup was most recently enabled. Set to null if ContinuousBackup is not enabled.
func (o ClusterContinuousBackupInfoOutput) EnabledTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterContinuousBackupInfo) *string { return v.EnabledTime }).(pulumi.StringPtrOutput)
}

// (Output)
// Output only. The encryption information for the WALs and backups required for ContinuousBackup.
// Structure is documented below.
func (o ClusterContinuousBackupInfoOutput) EncryptionInfos() ClusterContinuousBackupInfoEncryptionInfoArrayOutput {
	return o.ApplyT(func(v ClusterContinuousBackupInfo) []ClusterContinuousBackupInfoEncryptionInfo {
		return v.EncryptionInfos
	}).(ClusterContinuousBackupInfoEncryptionInfoArrayOutput)
}

// (Output)
// Days of the week on which a continuous backup is taken. Output only field. Ignored if passed into the request.
func (o ClusterContinuousBackupInfoOutput) Schedules() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterContinuousBackupInfo) []string { return v.Schedules }).(pulumi.StringArrayOutput)
}

type ClusterContinuousBackupInfoArrayOutput struct{ *pulumi.OutputState }

func (ClusterContinuousBackupInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterContinuousBackupInfo)(nil)).Elem()
}

func (o ClusterContinuousBackupInfoArrayOutput) ToClusterContinuousBackupInfoArrayOutput() ClusterContinuousBackupInfoArrayOutput {
	return o
}

func (o ClusterContinuousBackupInfoArrayOutput) ToClusterContinuousBackupInfoArrayOutputWithContext(ctx context.Context) ClusterContinuousBackupInfoArrayOutput {
	return o
}

func (o ClusterContinuousBackupInfoArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ClusterContinuousBackupInfo] {
	return pulumix.Output[[]ClusterContinuousBackupInfo]{
		OutputState: o.OutputState,
	}
}

func (o ClusterContinuousBackupInfoArrayOutput) Index(i pulumi.IntInput) ClusterContinuousBackupInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterContinuousBackupInfo {
		return vs[0].([]ClusterContinuousBackupInfo)[vs[1].(int)]
	}).(ClusterContinuousBackupInfoOutput)
}

type ClusterContinuousBackupInfoEncryptionInfo struct {
	// (Output)
	// Output only. Type of encryption.
	EncryptionType *string `pulumi:"encryptionType"`
	// (Output)
	// Output only. Cloud KMS key versions that are being used to protect the database or the backup.
	KmsKeyVersions []string `pulumi:"kmsKeyVersions"`
}

// ClusterContinuousBackupInfoEncryptionInfoInput is an input type that accepts ClusterContinuousBackupInfoEncryptionInfoArgs and ClusterContinuousBackupInfoEncryptionInfoOutput values.
// You can construct a concrete instance of `ClusterContinuousBackupInfoEncryptionInfoInput` via:
//
//	ClusterContinuousBackupInfoEncryptionInfoArgs{...}
type ClusterContinuousBackupInfoEncryptionInfoInput interface {
	pulumi.Input

	ToClusterContinuousBackupInfoEncryptionInfoOutput() ClusterContinuousBackupInfoEncryptionInfoOutput
	ToClusterContinuousBackupInfoEncryptionInfoOutputWithContext(context.Context) ClusterContinuousBackupInfoEncryptionInfoOutput
}

type ClusterContinuousBackupInfoEncryptionInfoArgs struct {
	// (Output)
	// Output only. Type of encryption.
	EncryptionType pulumi.StringPtrInput `pulumi:"encryptionType"`
	// (Output)
	// Output only. Cloud KMS key versions that are being used to protect the database or the backup.
	KmsKeyVersions pulumi.StringArrayInput `pulumi:"kmsKeyVersions"`
}

func (ClusterContinuousBackupInfoEncryptionInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterContinuousBackupInfoEncryptionInfo)(nil)).Elem()
}

func (i ClusterContinuousBackupInfoEncryptionInfoArgs) ToClusterContinuousBackupInfoEncryptionInfoOutput() ClusterContinuousBackupInfoEncryptionInfoOutput {
	return i.ToClusterContinuousBackupInfoEncryptionInfoOutputWithContext(context.Background())
}

func (i ClusterContinuousBackupInfoEncryptionInfoArgs) ToClusterContinuousBackupInfoEncryptionInfoOutputWithContext(ctx context.Context) ClusterContinuousBackupInfoEncryptionInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterContinuousBackupInfoEncryptionInfoOutput)
}

func (i ClusterContinuousBackupInfoEncryptionInfoArgs) ToOutput(ctx context.Context) pulumix.Output[ClusterContinuousBackupInfoEncryptionInfo] {
	return pulumix.Output[ClusterContinuousBackupInfoEncryptionInfo]{
		OutputState: i.ToClusterContinuousBackupInfoEncryptionInfoOutputWithContext(ctx).OutputState,
	}
}

// ClusterContinuousBackupInfoEncryptionInfoArrayInput is an input type that accepts ClusterContinuousBackupInfoEncryptionInfoArray and ClusterContinuousBackupInfoEncryptionInfoArrayOutput values.
// You can construct a concrete instance of `ClusterContinuousBackupInfoEncryptionInfoArrayInput` via:
//
//	ClusterContinuousBackupInfoEncryptionInfoArray{ ClusterContinuousBackupInfoEncryptionInfoArgs{...} }
type ClusterContinuousBackupInfoEncryptionInfoArrayInput interface {
	pulumi.Input

	ToClusterContinuousBackupInfoEncryptionInfoArrayOutput() ClusterContinuousBackupInfoEncryptionInfoArrayOutput
	ToClusterContinuousBackupInfoEncryptionInfoArrayOutputWithContext(context.Context) ClusterContinuousBackupInfoEncryptionInfoArrayOutput
}

type ClusterContinuousBackupInfoEncryptionInfoArray []ClusterContinuousBackupInfoEncryptionInfoInput

func (ClusterContinuousBackupInfoEncryptionInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterContinuousBackupInfoEncryptionInfo)(nil)).Elem()
}

func (i ClusterContinuousBackupInfoEncryptionInfoArray) ToClusterContinuousBackupInfoEncryptionInfoArrayOutput() ClusterContinuousBackupInfoEncryptionInfoArrayOutput {
	return i.ToClusterContinuousBackupInfoEncryptionInfoArrayOutputWithContext(context.Background())
}

func (i ClusterContinuousBackupInfoEncryptionInfoArray) ToClusterContinuousBackupInfoEncryptionInfoArrayOutputWithContext(ctx context.Context) ClusterContinuousBackupInfoEncryptionInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterContinuousBackupInfoEncryptionInfoArrayOutput)
}

func (i ClusterContinuousBackupInfoEncryptionInfoArray) ToOutput(ctx context.Context) pulumix.Output[[]ClusterContinuousBackupInfoEncryptionInfo] {
	return pulumix.Output[[]ClusterContinuousBackupInfoEncryptionInfo]{
		OutputState: i.ToClusterContinuousBackupInfoEncryptionInfoArrayOutputWithContext(ctx).OutputState,
	}
}

type ClusterContinuousBackupInfoEncryptionInfoOutput struct{ *pulumi.OutputState }

func (ClusterContinuousBackupInfoEncryptionInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterContinuousBackupInfoEncryptionInfo)(nil)).Elem()
}

func (o ClusterContinuousBackupInfoEncryptionInfoOutput) ToClusterContinuousBackupInfoEncryptionInfoOutput() ClusterContinuousBackupInfoEncryptionInfoOutput {
	return o
}

func (o ClusterContinuousBackupInfoEncryptionInfoOutput) ToClusterContinuousBackupInfoEncryptionInfoOutputWithContext(ctx context.Context) ClusterContinuousBackupInfoEncryptionInfoOutput {
	return o
}

func (o ClusterContinuousBackupInfoEncryptionInfoOutput) ToOutput(ctx context.Context) pulumix.Output[ClusterContinuousBackupInfoEncryptionInfo] {
	return pulumix.Output[ClusterContinuousBackupInfoEncryptionInfo]{
		OutputState: o.OutputState,
	}
}

// (Output)
// Output only. Type of encryption.
func (o ClusterContinuousBackupInfoEncryptionInfoOutput) EncryptionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterContinuousBackupInfoEncryptionInfo) *string { return v.EncryptionType }).(pulumi.StringPtrOutput)
}

// (Output)
// Output only. Cloud KMS key versions that are being used to protect the database or the backup.
func (o ClusterContinuousBackupInfoEncryptionInfoOutput) KmsKeyVersions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterContinuousBackupInfoEncryptionInfo) []string { return v.KmsKeyVersions }).(pulumi.StringArrayOutput)
}

type ClusterContinuousBackupInfoEncryptionInfoArrayOutput struct{ *pulumi.OutputState }

func (ClusterContinuousBackupInfoEncryptionInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterContinuousBackupInfoEncryptionInfo)(nil)).Elem()
}

func (o ClusterContinuousBackupInfoEncryptionInfoArrayOutput) ToClusterContinuousBackupInfoEncryptionInfoArrayOutput() ClusterContinuousBackupInfoEncryptionInfoArrayOutput {
	return o
}

func (o ClusterContinuousBackupInfoEncryptionInfoArrayOutput) ToClusterContinuousBackupInfoEncryptionInfoArrayOutputWithContext(ctx context.Context) ClusterContinuousBackupInfoEncryptionInfoArrayOutput {
	return o
}

func (o ClusterContinuousBackupInfoEncryptionInfoArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ClusterContinuousBackupInfoEncryptionInfo] {
	return pulumix.Output[[]ClusterContinuousBackupInfoEncryptionInfo]{
		OutputState: o.OutputState,
	}
}

func (o ClusterContinuousBackupInfoEncryptionInfoArrayOutput) Index(i pulumi.IntInput) ClusterContinuousBackupInfoEncryptionInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterContinuousBackupInfoEncryptionInfo {
		return vs[0].([]ClusterContinuousBackupInfoEncryptionInfo)[vs[1].(int)]
	}).(ClusterContinuousBackupInfoEncryptionInfoOutput)
}

type ClusterEncryptionConfig struct {
	// The fully-qualified resource name of the KMS key. Each Cloud KMS key is regionalized and has the following format: projects/[PROJECT]/locations/[REGION]/keyRings/[RING]/cryptoKeys/[KEY_NAME].
	KmsKeyName *string `pulumi:"kmsKeyName"`
}

// ClusterEncryptionConfigInput is an input type that accepts ClusterEncryptionConfigArgs and ClusterEncryptionConfigOutput values.
// You can construct a concrete instance of `ClusterEncryptionConfigInput` via:
//
//	ClusterEncryptionConfigArgs{...}
type ClusterEncryptionConfigInput interface {
	pulumi.Input

	ToClusterEncryptionConfigOutput() ClusterEncryptionConfigOutput
	ToClusterEncryptionConfigOutputWithContext(context.Context) ClusterEncryptionConfigOutput
}

type ClusterEncryptionConfigArgs struct {
	// The fully-qualified resource name of the KMS key. Each Cloud KMS key is regionalized and has the following format: projects/[PROJECT]/locations/[REGION]/keyRings/[RING]/cryptoKeys/[KEY_NAME].
	KmsKeyName pulumi.StringPtrInput `pulumi:"kmsKeyName"`
}

func (ClusterEncryptionConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterEncryptionConfig)(nil)).Elem()
}

func (i ClusterEncryptionConfigArgs) ToClusterEncryptionConfigOutput() ClusterEncryptionConfigOutput {
	return i.ToClusterEncryptionConfigOutputWithContext(context.Background())
}

func (i ClusterEncryptionConfigArgs) ToClusterEncryptionConfigOutputWithContext(ctx context.Context) ClusterEncryptionConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterEncryptionConfigOutput)
}

func (i ClusterEncryptionConfigArgs) ToOutput(ctx context.Context) pulumix.Output[ClusterEncryptionConfig] {
	return pulumix.Output[ClusterEncryptionConfig]{
		OutputState: i.ToClusterEncryptionConfigOutputWithContext(ctx).OutputState,
	}
}

func (i ClusterEncryptionConfigArgs) ToClusterEncryptionConfigPtrOutput() ClusterEncryptionConfigPtrOutput {
	return i.ToClusterEncryptionConfigPtrOutputWithContext(context.Background())
}

func (i ClusterEncryptionConfigArgs) ToClusterEncryptionConfigPtrOutputWithContext(ctx context.Context) ClusterEncryptionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterEncryptionConfigOutput).ToClusterEncryptionConfigPtrOutputWithContext(ctx)
}

// ClusterEncryptionConfigPtrInput is an input type that accepts ClusterEncryptionConfigArgs, ClusterEncryptionConfigPtr and ClusterEncryptionConfigPtrOutput values.
// You can construct a concrete instance of `ClusterEncryptionConfigPtrInput` via:
//
//	        ClusterEncryptionConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterEncryptionConfigPtrInput interface {
	pulumi.Input

	ToClusterEncryptionConfigPtrOutput() ClusterEncryptionConfigPtrOutput
	ToClusterEncryptionConfigPtrOutputWithContext(context.Context) ClusterEncryptionConfigPtrOutput
}

type clusterEncryptionConfigPtrType ClusterEncryptionConfigArgs

func ClusterEncryptionConfigPtr(v *ClusterEncryptionConfigArgs) ClusterEncryptionConfigPtrInput {
	return (*clusterEncryptionConfigPtrType)(v)
}

func (*clusterEncryptionConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterEncryptionConfig)(nil)).Elem()
}

func (i *clusterEncryptionConfigPtrType) ToClusterEncryptionConfigPtrOutput() ClusterEncryptionConfigPtrOutput {
	return i.ToClusterEncryptionConfigPtrOutputWithContext(context.Background())
}

func (i *clusterEncryptionConfigPtrType) ToClusterEncryptionConfigPtrOutputWithContext(ctx context.Context) ClusterEncryptionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterEncryptionConfigPtrOutput)
}

func (i *clusterEncryptionConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*ClusterEncryptionConfig] {
	return pulumix.Output[*ClusterEncryptionConfig]{
		OutputState: i.ToClusterEncryptionConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type ClusterEncryptionConfigOutput struct{ *pulumi.OutputState }

func (ClusterEncryptionConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterEncryptionConfig)(nil)).Elem()
}

func (o ClusterEncryptionConfigOutput) ToClusterEncryptionConfigOutput() ClusterEncryptionConfigOutput {
	return o
}

func (o ClusterEncryptionConfigOutput) ToClusterEncryptionConfigOutputWithContext(ctx context.Context) ClusterEncryptionConfigOutput {
	return o
}

func (o ClusterEncryptionConfigOutput) ToClusterEncryptionConfigPtrOutput() ClusterEncryptionConfigPtrOutput {
	return o.ToClusterEncryptionConfigPtrOutputWithContext(context.Background())
}

func (o ClusterEncryptionConfigOutput) ToClusterEncryptionConfigPtrOutputWithContext(ctx context.Context) ClusterEncryptionConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterEncryptionConfig) *ClusterEncryptionConfig {
		return &v
	}).(ClusterEncryptionConfigPtrOutput)
}

func (o ClusterEncryptionConfigOutput) ToOutput(ctx context.Context) pulumix.Output[ClusterEncryptionConfig] {
	return pulumix.Output[ClusterEncryptionConfig]{
		OutputState: o.OutputState,
	}
}

// The fully-qualified resource name of the KMS key. Each Cloud KMS key is regionalized and has the following format: projects/[PROJECT]/locations/[REGION]/keyRings/[RING]/cryptoKeys/[KEY_NAME].
func (o ClusterEncryptionConfigOutput) KmsKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterEncryptionConfig) *string { return v.KmsKeyName }).(pulumi.StringPtrOutput)
}

type ClusterEncryptionConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterEncryptionConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterEncryptionConfig)(nil)).Elem()
}

func (o ClusterEncryptionConfigPtrOutput) ToClusterEncryptionConfigPtrOutput() ClusterEncryptionConfigPtrOutput {
	return o
}

func (o ClusterEncryptionConfigPtrOutput) ToClusterEncryptionConfigPtrOutputWithContext(ctx context.Context) ClusterEncryptionConfigPtrOutput {
	return o
}

func (o ClusterEncryptionConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ClusterEncryptionConfig] {
	return pulumix.Output[*ClusterEncryptionConfig]{
		OutputState: o.OutputState,
	}
}

func (o ClusterEncryptionConfigPtrOutput) Elem() ClusterEncryptionConfigOutput {
	return o.ApplyT(func(v *ClusterEncryptionConfig) ClusterEncryptionConfig {
		if v != nil {
			return *v
		}
		var ret ClusterEncryptionConfig
		return ret
	}).(ClusterEncryptionConfigOutput)
}

// The fully-qualified resource name of the KMS key. Each Cloud KMS key is regionalized and has the following format: projects/[PROJECT]/locations/[REGION]/keyRings/[RING]/cryptoKeys/[KEY_NAME].
func (o ClusterEncryptionConfigPtrOutput) KmsKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterEncryptionConfig) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyName
	}).(pulumi.StringPtrOutput)
}

type ClusterEncryptionInfo struct {
	// (Output)
	// Output only. Type of encryption.
	EncryptionType *string `pulumi:"encryptionType"`
	// (Output)
	// Output only. Cloud KMS key versions that are being used to protect the database or the backup.
	KmsKeyVersions []string `pulumi:"kmsKeyVersions"`
}

// ClusterEncryptionInfoInput is an input type that accepts ClusterEncryptionInfoArgs and ClusterEncryptionInfoOutput values.
// You can construct a concrete instance of `ClusterEncryptionInfoInput` via:
//
//	ClusterEncryptionInfoArgs{...}
type ClusterEncryptionInfoInput interface {
	pulumi.Input

	ToClusterEncryptionInfoOutput() ClusterEncryptionInfoOutput
	ToClusterEncryptionInfoOutputWithContext(context.Context) ClusterEncryptionInfoOutput
}

type ClusterEncryptionInfoArgs struct {
	// (Output)
	// Output only. Type of encryption.
	EncryptionType pulumi.StringPtrInput `pulumi:"encryptionType"`
	// (Output)
	// Output only. Cloud KMS key versions that are being used to protect the database or the backup.
	KmsKeyVersions pulumi.StringArrayInput `pulumi:"kmsKeyVersions"`
}

func (ClusterEncryptionInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterEncryptionInfo)(nil)).Elem()
}

func (i ClusterEncryptionInfoArgs) ToClusterEncryptionInfoOutput() ClusterEncryptionInfoOutput {
	return i.ToClusterEncryptionInfoOutputWithContext(context.Background())
}

func (i ClusterEncryptionInfoArgs) ToClusterEncryptionInfoOutputWithContext(ctx context.Context) ClusterEncryptionInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterEncryptionInfoOutput)
}

func (i ClusterEncryptionInfoArgs) ToOutput(ctx context.Context) pulumix.Output[ClusterEncryptionInfo] {
	return pulumix.Output[ClusterEncryptionInfo]{
		OutputState: i.ToClusterEncryptionInfoOutputWithContext(ctx).OutputState,
	}
}

// ClusterEncryptionInfoArrayInput is an input type that accepts ClusterEncryptionInfoArray and ClusterEncryptionInfoArrayOutput values.
// You can construct a concrete instance of `ClusterEncryptionInfoArrayInput` via:
//
//	ClusterEncryptionInfoArray{ ClusterEncryptionInfoArgs{...} }
type ClusterEncryptionInfoArrayInput interface {
	pulumi.Input

	ToClusterEncryptionInfoArrayOutput() ClusterEncryptionInfoArrayOutput
	ToClusterEncryptionInfoArrayOutputWithContext(context.Context) ClusterEncryptionInfoArrayOutput
}

type ClusterEncryptionInfoArray []ClusterEncryptionInfoInput

func (ClusterEncryptionInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterEncryptionInfo)(nil)).Elem()
}

func (i ClusterEncryptionInfoArray) ToClusterEncryptionInfoArrayOutput() ClusterEncryptionInfoArrayOutput {
	return i.ToClusterEncryptionInfoArrayOutputWithContext(context.Background())
}

func (i ClusterEncryptionInfoArray) ToClusterEncryptionInfoArrayOutputWithContext(ctx context.Context) ClusterEncryptionInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterEncryptionInfoArrayOutput)
}

func (i ClusterEncryptionInfoArray) ToOutput(ctx context.Context) pulumix.Output[[]ClusterEncryptionInfo] {
	return pulumix.Output[[]ClusterEncryptionInfo]{
		OutputState: i.ToClusterEncryptionInfoArrayOutputWithContext(ctx).OutputState,
	}
}

type ClusterEncryptionInfoOutput struct{ *pulumi.OutputState }

func (ClusterEncryptionInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterEncryptionInfo)(nil)).Elem()
}

func (o ClusterEncryptionInfoOutput) ToClusterEncryptionInfoOutput() ClusterEncryptionInfoOutput {
	return o
}

func (o ClusterEncryptionInfoOutput) ToClusterEncryptionInfoOutputWithContext(ctx context.Context) ClusterEncryptionInfoOutput {
	return o
}

func (o ClusterEncryptionInfoOutput) ToOutput(ctx context.Context) pulumix.Output[ClusterEncryptionInfo] {
	return pulumix.Output[ClusterEncryptionInfo]{
		OutputState: o.OutputState,
	}
}

// (Output)
// Output only. Type of encryption.
func (o ClusterEncryptionInfoOutput) EncryptionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterEncryptionInfo) *string { return v.EncryptionType }).(pulumi.StringPtrOutput)
}

// (Output)
// Output only. Cloud KMS key versions that are being used to protect the database or the backup.
func (o ClusterEncryptionInfoOutput) KmsKeyVersions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterEncryptionInfo) []string { return v.KmsKeyVersions }).(pulumi.StringArrayOutput)
}

type ClusterEncryptionInfoArrayOutput struct{ *pulumi.OutputState }

func (ClusterEncryptionInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterEncryptionInfo)(nil)).Elem()
}

func (o ClusterEncryptionInfoArrayOutput) ToClusterEncryptionInfoArrayOutput() ClusterEncryptionInfoArrayOutput {
	return o
}

func (o ClusterEncryptionInfoArrayOutput) ToClusterEncryptionInfoArrayOutputWithContext(ctx context.Context) ClusterEncryptionInfoArrayOutput {
	return o
}

func (o ClusterEncryptionInfoArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ClusterEncryptionInfo] {
	return pulumix.Output[[]ClusterEncryptionInfo]{
		OutputState: o.OutputState,
	}
}

func (o ClusterEncryptionInfoArrayOutput) Index(i pulumi.IntInput) ClusterEncryptionInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterEncryptionInfo {
		return vs[0].([]ClusterEncryptionInfo)[vs[1].(int)]
	}).(ClusterEncryptionInfoOutput)
}

type ClusterInitialUser struct {
	// The initial password for the user.
	// **Note**: This property is sensitive and will not be displayed in the plan.
	Password string `pulumi:"password"`
	// The database username.
	User *string `pulumi:"user"`
}

// ClusterInitialUserInput is an input type that accepts ClusterInitialUserArgs and ClusterInitialUserOutput values.
// You can construct a concrete instance of `ClusterInitialUserInput` via:
//
//	ClusterInitialUserArgs{...}
type ClusterInitialUserInput interface {
	pulumi.Input

	ToClusterInitialUserOutput() ClusterInitialUserOutput
	ToClusterInitialUserOutputWithContext(context.Context) ClusterInitialUserOutput
}

type ClusterInitialUserArgs struct {
	// The initial password for the user.
	// **Note**: This property is sensitive and will not be displayed in the plan.
	Password pulumi.StringInput `pulumi:"password"`
	// The database username.
	User pulumi.StringPtrInput `pulumi:"user"`
}

func (ClusterInitialUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterInitialUser)(nil)).Elem()
}

func (i ClusterInitialUserArgs) ToClusterInitialUserOutput() ClusterInitialUserOutput {
	return i.ToClusterInitialUserOutputWithContext(context.Background())
}

func (i ClusterInitialUserArgs) ToClusterInitialUserOutputWithContext(ctx context.Context) ClusterInitialUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterInitialUserOutput)
}

func (i ClusterInitialUserArgs) ToOutput(ctx context.Context) pulumix.Output[ClusterInitialUser] {
	return pulumix.Output[ClusterInitialUser]{
		OutputState: i.ToClusterInitialUserOutputWithContext(ctx).OutputState,
	}
}

func (i ClusterInitialUserArgs) ToClusterInitialUserPtrOutput() ClusterInitialUserPtrOutput {
	return i.ToClusterInitialUserPtrOutputWithContext(context.Background())
}

func (i ClusterInitialUserArgs) ToClusterInitialUserPtrOutputWithContext(ctx context.Context) ClusterInitialUserPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterInitialUserOutput).ToClusterInitialUserPtrOutputWithContext(ctx)
}

// ClusterInitialUserPtrInput is an input type that accepts ClusterInitialUserArgs, ClusterInitialUserPtr and ClusterInitialUserPtrOutput values.
// You can construct a concrete instance of `ClusterInitialUserPtrInput` via:
//
//	        ClusterInitialUserArgs{...}
//
//	or:
//
//	        nil
type ClusterInitialUserPtrInput interface {
	pulumi.Input

	ToClusterInitialUserPtrOutput() ClusterInitialUserPtrOutput
	ToClusterInitialUserPtrOutputWithContext(context.Context) ClusterInitialUserPtrOutput
}

type clusterInitialUserPtrType ClusterInitialUserArgs

func ClusterInitialUserPtr(v *ClusterInitialUserArgs) ClusterInitialUserPtrInput {
	return (*clusterInitialUserPtrType)(v)
}

func (*clusterInitialUserPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterInitialUser)(nil)).Elem()
}

func (i *clusterInitialUserPtrType) ToClusterInitialUserPtrOutput() ClusterInitialUserPtrOutput {
	return i.ToClusterInitialUserPtrOutputWithContext(context.Background())
}

func (i *clusterInitialUserPtrType) ToClusterInitialUserPtrOutputWithContext(ctx context.Context) ClusterInitialUserPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterInitialUserPtrOutput)
}

func (i *clusterInitialUserPtrType) ToOutput(ctx context.Context) pulumix.Output[*ClusterInitialUser] {
	return pulumix.Output[*ClusterInitialUser]{
		OutputState: i.ToClusterInitialUserPtrOutputWithContext(ctx).OutputState,
	}
}

type ClusterInitialUserOutput struct{ *pulumi.OutputState }

func (ClusterInitialUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterInitialUser)(nil)).Elem()
}

func (o ClusterInitialUserOutput) ToClusterInitialUserOutput() ClusterInitialUserOutput {
	return o
}

func (o ClusterInitialUserOutput) ToClusterInitialUserOutputWithContext(ctx context.Context) ClusterInitialUserOutput {
	return o
}

func (o ClusterInitialUserOutput) ToClusterInitialUserPtrOutput() ClusterInitialUserPtrOutput {
	return o.ToClusterInitialUserPtrOutputWithContext(context.Background())
}

func (o ClusterInitialUserOutput) ToClusterInitialUserPtrOutputWithContext(ctx context.Context) ClusterInitialUserPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterInitialUser) *ClusterInitialUser {
		return &v
	}).(ClusterInitialUserPtrOutput)
}

func (o ClusterInitialUserOutput) ToOutput(ctx context.Context) pulumix.Output[ClusterInitialUser] {
	return pulumix.Output[ClusterInitialUser]{
		OutputState: o.OutputState,
	}
}

// The initial password for the user.
// **Note**: This property is sensitive and will not be displayed in the plan.
func (o ClusterInitialUserOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterInitialUser) string { return v.Password }).(pulumi.StringOutput)
}

// The database username.
func (o ClusterInitialUserOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterInitialUser) *string { return v.User }).(pulumi.StringPtrOutput)
}

type ClusterInitialUserPtrOutput struct{ *pulumi.OutputState }

func (ClusterInitialUserPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterInitialUser)(nil)).Elem()
}

func (o ClusterInitialUserPtrOutput) ToClusterInitialUserPtrOutput() ClusterInitialUserPtrOutput {
	return o
}

func (o ClusterInitialUserPtrOutput) ToClusterInitialUserPtrOutputWithContext(ctx context.Context) ClusterInitialUserPtrOutput {
	return o
}

func (o ClusterInitialUserPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ClusterInitialUser] {
	return pulumix.Output[*ClusterInitialUser]{
		OutputState: o.OutputState,
	}
}

func (o ClusterInitialUserPtrOutput) Elem() ClusterInitialUserOutput {
	return o.ApplyT(func(v *ClusterInitialUser) ClusterInitialUser {
		if v != nil {
			return *v
		}
		var ret ClusterInitialUser
		return ret
	}).(ClusterInitialUserOutput)
}

// The initial password for the user.
// **Note**: This property is sensitive and will not be displayed in the plan.
func (o ClusterInitialUserPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterInitialUser) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// The database username.
func (o ClusterInitialUserPtrOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterInitialUser) *string {
		if v == nil {
			return nil
		}
		return v.User
	}).(pulumi.StringPtrOutput)
}

type ClusterMigrationSource struct {
	// The host and port of the on-premises instance in host:port format
	HostPort *string `pulumi:"hostPort"`
	// Place holder for the external source identifier(e.g DMS job name) that created the cluster.
	ReferenceId *string `pulumi:"referenceId"`
	// Type of migration source.
	SourceType *string `pulumi:"sourceType"`
}

// ClusterMigrationSourceInput is an input type that accepts ClusterMigrationSourceArgs and ClusterMigrationSourceOutput values.
// You can construct a concrete instance of `ClusterMigrationSourceInput` via:
//
//	ClusterMigrationSourceArgs{...}
type ClusterMigrationSourceInput interface {
	pulumi.Input

	ToClusterMigrationSourceOutput() ClusterMigrationSourceOutput
	ToClusterMigrationSourceOutputWithContext(context.Context) ClusterMigrationSourceOutput
}

type ClusterMigrationSourceArgs struct {
	// The host and port of the on-premises instance in host:port format
	HostPort pulumi.StringPtrInput `pulumi:"hostPort"`
	// Place holder for the external source identifier(e.g DMS job name) that created the cluster.
	ReferenceId pulumi.StringPtrInput `pulumi:"referenceId"`
	// Type of migration source.
	SourceType pulumi.StringPtrInput `pulumi:"sourceType"`
}

func (ClusterMigrationSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMigrationSource)(nil)).Elem()
}

func (i ClusterMigrationSourceArgs) ToClusterMigrationSourceOutput() ClusterMigrationSourceOutput {
	return i.ToClusterMigrationSourceOutputWithContext(context.Background())
}

func (i ClusterMigrationSourceArgs) ToClusterMigrationSourceOutputWithContext(ctx context.Context) ClusterMigrationSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMigrationSourceOutput)
}

func (i ClusterMigrationSourceArgs) ToOutput(ctx context.Context) pulumix.Output[ClusterMigrationSource] {
	return pulumix.Output[ClusterMigrationSource]{
		OutputState: i.ToClusterMigrationSourceOutputWithContext(ctx).OutputState,
	}
}

// ClusterMigrationSourceArrayInput is an input type that accepts ClusterMigrationSourceArray and ClusterMigrationSourceArrayOutput values.
// You can construct a concrete instance of `ClusterMigrationSourceArrayInput` via:
//
//	ClusterMigrationSourceArray{ ClusterMigrationSourceArgs{...} }
type ClusterMigrationSourceArrayInput interface {
	pulumi.Input

	ToClusterMigrationSourceArrayOutput() ClusterMigrationSourceArrayOutput
	ToClusterMigrationSourceArrayOutputWithContext(context.Context) ClusterMigrationSourceArrayOutput
}

type ClusterMigrationSourceArray []ClusterMigrationSourceInput

func (ClusterMigrationSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterMigrationSource)(nil)).Elem()
}

func (i ClusterMigrationSourceArray) ToClusterMigrationSourceArrayOutput() ClusterMigrationSourceArrayOutput {
	return i.ToClusterMigrationSourceArrayOutputWithContext(context.Background())
}

func (i ClusterMigrationSourceArray) ToClusterMigrationSourceArrayOutputWithContext(ctx context.Context) ClusterMigrationSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMigrationSourceArrayOutput)
}

func (i ClusterMigrationSourceArray) ToOutput(ctx context.Context) pulumix.Output[[]ClusterMigrationSource] {
	return pulumix.Output[[]ClusterMigrationSource]{
		OutputState: i.ToClusterMigrationSourceArrayOutputWithContext(ctx).OutputState,
	}
}

type ClusterMigrationSourceOutput struct{ *pulumi.OutputState }

func (ClusterMigrationSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMigrationSource)(nil)).Elem()
}

func (o ClusterMigrationSourceOutput) ToClusterMigrationSourceOutput() ClusterMigrationSourceOutput {
	return o
}

func (o ClusterMigrationSourceOutput) ToClusterMigrationSourceOutputWithContext(ctx context.Context) ClusterMigrationSourceOutput {
	return o
}

func (o ClusterMigrationSourceOutput) ToOutput(ctx context.Context) pulumix.Output[ClusterMigrationSource] {
	return pulumix.Output[ClusterMigrationSource]{
		OutputState: o.OutputState,
	}
}

// The host and port of the on-premises instance in host:port format
func (o ClusterMigrationSourceOutput) HostPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMigrationSource) *string { return v.HostPort }).(pulumi.StringPtrOutput)
}

// Place holder for the external source identifier(e.g DMS job name) that created the cluster.
func (o ClusterMigrationSourceOutput) ReferenceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMigrationSource) *string { return v.ReferenceId }).(pulumi.StringPtrOutput)
}

// Type of migration source.
func (o ClusterMigrationSourceOutput) SourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMigrationSource) *string { return v.SourceType }).(pulumi.StringPtrOutput)
}

type ClusterMigrationSourceArrayOutput struct{ *pulumi.OutputState }

func (ClusterMigrationSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterMigrationSource)(nil)).Elem()
}

func (o ClusterMigrationSourceArrayOutput) ToClusterMigrationSourceArrayOutput() ClusterMigrationSourceArrayOutput {
	return o
}

func (o ClusterMigrationSourceArrayOutput) ToClusterMigrationSourceArrayOutputWithContext(ctx context.Context) ClusterMigrationSourceArrayOutput {
	return o
}

func (o ClusterMigrationSourceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ClusterMigrationSource] {
	return pulumix.Output[[]ClusterMigrationSource]{
		OutputState: o.OutputState,
	}
}

func (o ClusterMigrationSourceArrayOutput) Index(i pulumi.IntInput) ClusterMigrationSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterMigrationSource {
		return vs[0].([]ClusterMigrationSource)[vs[1].(int)]
	}).(ClusterMigrationSourceOutput)
}

type ClusterRestoreBackupSource struct {
	// The name of the backup that this cluster is restored from.
	BackupName string `pulumi:"backupName"`
}

// ClusterRestoreBackupSourceInput is an input type that accepts ClusterRestoreBackupSourceArgs and ClusterRestoreBackupSourceOutput values.
// You can construct a concrete instance of `ClusterRestoreBackupSourceInput` via:
//
//	ClusterRestoreBackupSourceArgs{...}
type ClusterRestoreBackupSourceInput interface {
	pulumi.Input

	ToClusterRestoreBackupSourceOutput() ClusterRestoreBackupSourceOutput
	ToClusterRestoreBackupSourceOutputWithContext(context.Context) ClusterRestoreBackupSourceOutput
}

type ClusterRestoreBackupSourceArgs struct {
	// The name of the backup that this cluster is restored from.
	BackupName pulumi.StringInput `pulumi:"backupName"`
}

func (ClusterRestoreBackupSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterRestoreBackupSource)(nil)).Elem()
}

func (i ClusterRestoreBackupSourceArgs) ToClusterRestoreBackupSourceOutput() ClusterRestoreBackupSourceOutput {
	return i.ToClusterRestoreBackupSourceOutputWithContext(context.Background())
}

func (i ClusterRestoreBackupSourceArgs) ToClusterRestoreBackupSourceOutputWithContext(ctx context.Context) ClusterRestoreBackupSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterRestoreBackupSourceOutput)
}

func (i ClusterRestoreBackupSourceArgs) ToOutput(ctx context.Context) pulumix.Output[ClusterRestoreBackupSource] {
	return pulumix.Output[ClusterRestoreBackupSource]{
		OutputState: i.ToClusterRestoreBackupSourceOutputWithContext(ctx).OutputState,
	}
}

func (i ClusterRestoreBackupSourceArgs) ToClusterRestoreBackupSourcePtrOutput() ClusterRestoreBackupSourcePtrOutput {
	return i.ToClusterRestoreBackupSourcePtrOutputWithContext(context.Background())
}

func (i ClusterRestoreBackupSourceArgs) ToClusterRestoreBackupSourcePtrOutputWithContext(ctx context.Context) ClusterRestoreBackupSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterRestoreBackupSourceOutput).ToClusterRestoreBackupSourcePtrOutputWithContext(ctx)
}

// ClusterRestoreBackupSourcePtrInput is an input type that accepts ClusterRestoreBackupSourceArgs, ClusterRestoreBackupSourcePtr and ClusterRestoreBackupSourcePtrOutput values.
// You can construct a concrete instance of `ClusterRestoreBackupSourcePtrInput` via:
//
//	        ClusterRestoreBackupSourceArgs{...}
//
//	or:
//
//	        nil
type ClusterRestoreBackupSourcePtrInput interface {
	pulumi.Input

	ToClusterRestoreBackupSourcePtrOutput() ClusterRestoreBackupSourcePtrOutput
	ToClusterRestoreBackupSourcePtrOutputWithContext(context.Context) ClusterRestoreBackupSourcePtrOutput
}

type clusterRestoreBackupSourcePtrType ClusterRestoreBackupSourceArgs

func ClusterRestoreBackupSourcePtr(v *ClusterRestoreBackupSourceArgs) ClusterRestoreBackupSourcePtrInput {
	return (*clusterRestoreBackupSourcePtrType)(v)
}

func (*clusterRestoreBackupSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterRestoreBackupSource)(nil)).Elem()
}

func (i *clusterRestoreBackupSourcePtrType) ToClusterRestoreBackupSourcePtrOutput() ClusterRestoreBackupSourcePtrOutput {
	return i.ToClusterRestoreBackupSourcePtrOutputWithContext(context.Background())
}

func (i *clusterRestoreBackupSourcePtrType) ToClusterRestoreBackupSourcePtrOutputWithContext(ctx context.Context) ClusterRestoreBackupSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterRestoreBackupSourcePtrOutput)
}

func (i *clusterRestoreBackupSourcePtrType) ToOutput(ctx context.Context) pulumix.Output[*ClusterRestoreBackupSource] {
	return pulumix.Output[*ClusterRestoreBackupSource]{
		OutputState: i.ToClusterRestoreBackupSourcePtrOutputWithContext(ctx).OutputState,
	}
}

type ClusterRestoreBackupSourceOutput struct{ *pulumi.OutputState }

func (ClusterRestoreBackupSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterRestoreBackupSource)(nil)).Elem()
}

func (o ClusterRestoreBackupSourceOutput) ToClusterRestoreBackupSourceOutput() ClusterRestoreBackupSourceOutput {
	return o
}

func (o ClusterRestoreBackupSourceOutput) ToClusterRestoreBackupSourceOutputWithContext(ctx context.Context) ClusterRestoreBackupSourceOutput {
	return o
}

func (o ClusterRestoreBackupSourceOutput) ToClusterRestoreBackupSourcePtrOutput() ClusterRestoreBackupSourcePtrOutput {
	return o.ToClusterRestoreBackupSourcePtrOutputWithContext(context.Background())
}

func (o ClusterRestoreBackupSourceOutput) ToClusterRestoreBackupSourcePtrOutputWithContext(ctx context.Context) ClusterRestoreBackupSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterRestoreBackupSource) *ClusterRestoreBackupSource {
		return &v
	}).(ClusterRestoreBackupSourcePtrOutput)
}

func (o ClusterRestoreBackupSourceOutput) ToOutput(ctx context.Context) pulumix.Output[ClusterRestoreBackupSource] {
	return pulumix.Output[ClusterRestoreBackupSource]{
		OutputState: o.OutputState,
	}
}

// The name of the backup that this cluster is restored from.
func (o ClusterRestoreBackupSourceOutput) BackupName() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterRestoreBackupSource) string { return v.BackupName }).(pulumi.StringOutput)
}

type ClusterRestoreBackupSourcePtrOutput struct{ *pulumi.OutputState }

func (ClusterRestoreBackupSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterRestoreBackupSource)(nil)).Elem()
}

func (o ClusterRestoreBackupSourcePtrOutput) ToClusterRestoreBackupSourcePtrOutput() ClusterRestoreBackupSourcePtrOutput {
	return o
}

func (o ClusterRestoreBackupSourcePtrOutput) ToClusterRestoreBackupSourcePtrOutputWithContext(ctx context.Context) ClusterRestoreBackupSourcePtrOutput {
	return o
}

func (o ClusterRestoreBackupSourcePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ClusterRestoreBackupSource] {
	return pulumix.Output[*ClusterRestoreBackupSource]{
		OutputState: o.OutputState,
	}
}

func (o ClusterRestoreBackupSourcePtrOutput) Elem() ClusterRestoreBackupSourceOutput {
	return o.ApplyT(func(v *ClusterRestoreBackupSource) ClusterRestoreBackupSource {
		if v != nil {
			return *v
		}
		var ret ClusterRestoreBackupSource
		return ret
	}).(ClusterRestoreBackupSourceOutput)
}

// The name of the backup that this cluster is restored from.
func (o ClusterRestoreBackupSourcePtrOutput) BackupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterRestoreBackupSource) *string {
		if v == nil {
			return nil
		}
		return &v.BackupName
	}).(pulumi.StringPtrOutput)
}

type ClusterRestoreContinuousBackupSource struct {
	// The name of the source cluster that this cluster is restored from.
	Cluster string `pulumi:"cluster"`
	// The point in time that this cluster is restored to, in RFC 3339 format.
	PointInTime string `pulumi:"pointInTime"`
}

// ClusterRestoreContinuousBackupSourceInput is an input type that accepts ClusterRestoreContinuousBackupSourceArgs and ClusterRestoreContinuousBackupSourceOutput values.
// You can construct a concrete instance of `ClusterRestoreContinuousBackupSourceInput` via:
//
//	ClusterRestoreContinuousBackupSourceArgs{...}
type ClusterRestoreContinuousBackupSourceInput interface {
	pulumi.Input

	ToClusterRestoreContinuousBackupSourceOutput() ClusterRestoreContinuousBackupSourceOutput
	ToClusterRestoreContinuousBackupSourceOutputWithContext(context.Context) ClusterRestoreContinuousBackupSourceOutput
}

type ClusterRestoreContinuousBackupSourceArgs struct {
	// The name of the source cluster that this cluster is restored from.
	Cluster pulumi.StringInput `pulumi:"cluster"`
	// The point in time that this cluster is restored to, in RFC 3339 format.
	PointInTime pulumi.StringInput `pulumi:"pointInTime"`
}

func (ClusterRestoreContinuousBackupSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterRestoreContinuousBackupSource)(nil)).Elem()
}

func (i ClusterRestoreContinuousBackupSourceArgs) ToClusterRestoreContinuousBackupSourceOutput() ClusterRestoreContinuousBackupSourceOutput {
	return i.ToClusterRestoreContinuousBackupSourceOutputWithContext(context.Background())
}

func (i ClusterRestoreContinuousBackupSourceArgs) ToClusterRestoreContinuousBackupSourceOutputWithContext(ctx context.Context) ClusterRestoreContinuousBackupSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterRestoreContinuousBackupSourceOutput)
}

func (i ClusterRestoreContinuousBackupSourceArgs) ToOutput(ctx context.Context) pulumix.Output[ClusterRestoreContinuousBackupSource] {
	return pulumix.Output[ClusterRestoreContinuousBackupSource]{
		OutputState: i.ToClusterRestoreContinuousBackupSourceOutputWithContext(ctx).OutputState,
	}
}

func (i ClusterRestoreContinuousBackupSourceArgs) ToClusterRestoreContinuousBackupSourcePtrOutput() ClusterRestoreContinuousBackupSourcePtrOutput {
	return i.ToClusterRestoreContinuousBackupSourcePtrOutputWithContext(context.Background())
}

func (i ClusterRestoreContinuousBackupSourceArgs) ToClusterRestoreContinuousBackupSourcePtrOutputWithContext(ctx context.Context) ClusterRestoreContinuousBackupSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterRestoreContinuousBackupSourceOutput).ToClusterRestoreContinuousBackupSourcePtrOutputWithContext(ctx)
}

// ClusterRestoreContinuousBackupSourcePtrInput is an input type that accepts ClusterRestoreContinuousBackupSourceArgs, ClusterRestoreContinuousBackupSourcePtr and ClusterRestoreContinuousBackupSourcePtrOutput values.
// You can construct a concrete instance of `ClusterRestoreContinuousBackupSourcePtrInput` via:
//
//	        ClusterRestoreContinuousBackupSourceArgs{...}
//
//	or:
//
//	        nil
type ClusterRestoreContinuousBackupSourcePtrInput interface {
	pulumi.Input

	ToClusterRestoreContinuousBackupSourcePtrOutput() ClusterRestoreContinuousBackupSourcePtrOutput
	ToClusterRestoreContinuousBackupSourcePtrOutputWithContext(context.Context) ClusterRestoreContinuousBackupSourcePtrOutput
}

type clusterRestoreContinuousBackupSourcePtrType ClusterRestoreContinuousBackupSourceArgs

func ClusterRestoreContinuousBackupSourcePtr(v *ClusterRestoreContinuousBackupSourceArgs) ClusterRestoreContinuousBackupSourcePtrInput {
	return (*clusterRestoreContinuousBackupSourcePtrType)(v)
}

func (*clusterRestoreContinuousBackupSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterRestoreContinuousBackupSource)(nil)).Elem()
}

func (i *clusterRestoreContinuousBackupSourcePtrType) ToClusterRestoreContinuousBackupSourcePtrOutput() ClusterRestoreContinuousBackupSourcePtrOutput {
	return i.ToClusterRestoreContinuousBackupSourcePtrOutputWithContext(context.Background())
}

func (i *clusterRestoreContinuousBackupSourcePtrType) ToClusterRestoreContinuousBackupSourcePtrOutputWithContext(ctx context.Context) ClusterRestoreContinuousBackupSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterRestoreContinuousBackupSourcePtrOutput)
}

func (i *clusterRestoreContinuousBackupSourcePtrType) ToOutput(ctx context.Context) pulumix.Output[*ClusterRestoreContinuousBackupSource] {
	return pulumix.Output[*ClusterRestoreContinuousBackupSource]{
		OutputState: i.ToClusterRestoreContinuousBackupSourcePtrOutputWithContext(ctx).OutputState,
	}
}

type ClusterRestoreContinuousBackupSourceOutput struct{ *pulumi.OutputState }

func (ClusterRestoreContinuousBackupSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterRestoreContinuousBackupSource)(nil)).Elem()
}

func (o ClusterRestoreContinuousBackupSourceOutput) ToClusterRestoreContinuousBackupSourceOutput() ClusterRestoreContinuousBackupSourceOutput {
	return o
}

func (o ClusterRestoreContinuousBackupSourceOutput) ToClusterRestoreContinuousBackupSourceOutputWithContext(ctx context.Context) ClusterRestoreContinuousBackupSourceOutput {
	return o
}

func (o ClusterRestoreContinuousBackupSourceOutput) ToClusterRestoreContinuousBackupSourcePtrOutput() ClusterRestoreContinuousBackupSourcePtrOutput {
	return o.ToClusterRestoreContinuousBackupSourcePtrOutputWithContext(context.Background())
}

func (o ClusterRestoreContinuousBackupSourceOutput) ToClusterRestoreContinuousBackupSourcePtrOutputWithContext(ctx context.Context) ClusterRestoreContinuousBackupSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterRestoreContinuousBackupSource) *ClusterRestoreContinuousBackupSource {
		return &v
	}).(ClusterRestoreContinuousBackupSourcePtrOutput)
}

func (o ClusterRestoreContinuousBackupSourceOutput) ToOutput(ctx context.Context) pulumix.Output[ClusterRestoreContinuousBackupSource] {
	return pulumix.Output[ClusterRestoreContinuousBackupSource]{
		OutputState: o.OutputState,
	}
}

// The name of the source cluster that this cluster is restored from.
func (o ClusterRestoreContinuousBackupSourceOutput) Cluster() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterRestoreContinuousBackupSource) string { return v.Cluster }).(pulumi.StringOutput)
}

// The point in time that this cluster is restored to, in RFC 3339 format.
func (o ClusterRestoreContinuousBackupSourceOutput) PointInTime() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterRestoreContinuousBackupSource) string { return v.PointInTime }).(pulumi.StringOutput)
}

type ClusterRestoreContinuousBackupSourcePtrOutput struct{ *pulumi.OutputState }

func (ClusterRestoreContinuousBackupSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterRestoreContinuousBackupSource)(nil)).Elem()
}

func (o ClusterRestoreContinuousBackupSourcePtrOutput) ToClusterRestoreContinuousBackupSourcePtrOutput() ClusterRestoreContinuousBackupSourcePtrOutput {
	return o
}

func (o ClusterRestoreContinuousBackupSourcePtrOutput) ToClusterRestoreContinuousBackupSourcePtrOutputWithContext(ctx context.Context) ClusterRestoreContinuousBackupSourcePtrOutput {
	return o
}

func (o ClusterRestoreContinuousBackupSourcePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ClusterRestoreContinuousBackupSource] {
	return pulumix.Output[*ClusterRestoreContinuousBackupSource]{
		OutputState: o.OutputState,
	}
}

func (o ClusterRestoreContinuousBackupSourcePtrOutput) Elem() ClusterRestoreContinuousBackupSourceOutput {
	return o.ApplyT(func(v *ClusterRestoreContinuousBackupSource) ClusterRestoreContinuousBackupSource {
		if v != nil {
			return *v
		}
		var ret ClusterRestoreContinuousBackupSource
		return ret
	}).(ClusterRestoreContinuousBackupSourceOutput)
}

// The name of the source cluster that this cluster is restored from.
func (o ClusterRestoreContinuousBackupSourcePtrOutput) Cluster() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterRestoreContinuousBackupSource) *string {
		if v == nil {
			return nil
		}
		return &v.Cluster
	}).(pulumi.StringPtrOutput)
}

// The point in time that this cluster is restored to, in RFC 3339 format.
func (o ClusterRestoreContinuousBackupSourcePtrOutput) PointInTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterRestoreContinuousBackupSource) *string {
		if v == nil {
			return nil
		}
		return &v.PointInTime
	}).(pulumi.StringPtrOutput)
}

type InstanceMachineConfig struct {
	// The number of CPU's in the VM instance.
	CpuCount *int `pulumi:"cpuCount"`
}

// InstanceMachineConfigInput is an input type that accepts InstanceMachineConfigArgs and InstanceMachineConfigOutput values.
// You can construct a concrete instance of `InstanceMachineConfigInput` via:
//
//	InstanceMachineConfigArgs{...}
type InstanceMachineConfigInput interface {
	pulumi.Input

	ToInstanceMachineConfigOutput() InstanceMachineConfigOutput
	ToInstanceMachineConfigOutputWithContext(context.Context) InstanceMachineConfigOutput
}

type InstanceMachineConfigArgs struct {
	// The number of CPU's in the VM instance.
	CpuCount pulumi.IntPtrInput `pulumi:"cpuCount"`
}

func (InstanceMachineConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceMachineConfig)(nil)).Elem()
}

func (i InstanceMachineConfigArgs) ToInstanceMachineConfigOutput() InstanceMachineConfigOutput {
	return i.ToInstanceMachineConfigOutputWithContext(context.Background())
}

func (i InstanceMachineConfigArgs) ToInstanceMachineConfigOutputWithContext(ctx context.Context) InstanceMachineConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMachineConfigOutput)
}

func (i InstanceMachineConfigArgs) ToOutput(ctx context.Context) pulumix.Output[InstanceMachineConfig] {
	return pulumix.Output[InstanceMachineConfig]{
		OutputState: i.ToInstanceMachineConfigOutputWithContext(ctx).OutputState,
	}
}

func (i InstanceMachineConfigArgs) ToInstanceMachineConfigPtrOutput() InstanceMachineConfigPtrOutput {
	return i.ToInstanceMachineConfigPtrOutputWithContext(context.Background())
}

func (i InstanceMachineConfigArgs) ToInstanceMachineConfigPtrOutputWithContext(ctx context.Context) InstanceMachineConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMachineConfigOutput).ToInstanceMachineConfigPtrOutputWithContext(ctx)
}

// InstanceMachineConfigPtrInput is an input type that accepts InstanceMachineConfigArgs, InstanceMachineConfigPtr and InstanceMachineConfigPtrOutput values.
// You can construct a concrete instance of `InstanceMachineConfigPtrInput` via:
//
//	        InstanceMachineConfigArgs{...}
//
//	or:
//
//	        nil
type InstanceMachineConfigPtrInput interface {
	pulumi.Input

	ToInstanceMachineConfigPtrOutput() InstanceMachineConfigPtrOutput
	ToInstanceMachineConfigPtrOutputWithContext(context.Context) InstanceMachineConfigPtrOutput
}

type instanceMachineConfigPtrType InstanceMachineConfigArgs

func InstanceMachineConfigPtr(v *InstanceMachineConfigArgs) InstanceMachineConfigPtrInput {
	return (*instanceMachineConfigPtrType)(v)
}

func (*instanceMachineConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceMachineConfig)(nil)).Elem()
}

func (i *instanceMachineConfigPtrType) ToInstanceMachineConfigPtrOutput() InstanceMachineConfigPtrOutput {
	return i.ToInstanceMachineConfigPtrOutputWithContext(context.Background())
}

func (i *instanceMachineConfigPtrType) ToInstanceMachineConfigPtrOutputWithContext(ctx context.Context) InstanceMachineConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMachineConfigPtrOutput)
}

func (i *instanceMachineConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*InstanceMachineConfig] {
	return pulumix.Output[*InstanceMachineConfig]{
		OutputState: i.ToInstanceMachineConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type InstanceMachineConfigOutput struct{ *pulumi.OutputState }

func (InstanceMachineConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceMachineConfig)(nil)).Elem()
}

func (o InstanceMachineConfigOutput) ToInstanceMachineConfigOutput() InstanceMachineConfigOutput {
	return o
}

func (o InstanceMachineConfigOutput) ToInstanceMachineConfigOutputWithContext(ctx context.Context) InstanceMachineConfigOutput {
	return o
}

func (o InstanceMachineConfigOutput) ToInstanceMachineConfigPtrOutput() InstanceMachineConfigPtrOutput {
	return o.ToInstanceMachineConfigPtrOutputWithContext(context.Background())
}

func (o InstanceMachineConfigOutput) ToInstanceMachineConfigPtrOutputWithContext(ctx context.Context) InstanceMachineConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceMachineConfig) *InstanceMachineConfig {
		return &v
	}).(InstanceMachineConfigPtrOutput)
}

func (o InstanceMachineConfigOutput) ToOutput(ctx context.Context) pulumix.Output[InstanceMachineConfig] {
	return pulumix.Output[InstanceMachineConfig]{
		OutputState: o.OutputState,
	}
}

// The number of CPU's in the VM instance.
func (o InstanceMachineConfigOutput) CpuCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceMachineConfig) *int { return v.CpuCount }).(pulumi.IntPtrOutput)
}

type InstanceMachineConfigPtrOutput struct{ *pulumi.OutputState }

func (InstanceMachineConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceMachineConfig)(nil)).Elem()
}

func (o InstanceMachineConfigPtrOutput) ToInstanceMachineConfigPtrOutput() InstanceMachineConfigPtrOutput {
	return o
}

func (o InstanceMachineConfigPtrOutput) ToInstanceMachineConfigPtrOutputWithContext(ctx context.Context) InstanceMachineConfigPtrOutput {
	return o
}

func (o InstanceMachineConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*InstanceMachineConfig] {
	return pulumix.Output[*InstanceMachineConfig]{
		OutputState: o.OutputState,
	}
}

func (o InstanceMachineConfigPtrOutput) Elem() InstanceMachineConfigOutput {
	return o.ApplyT(func(v *InstanceMachineConfig) InstanceMachineConfig {
		if v != nil {
			return *v
		}
		var ret InstanceMachineConfig
		return ret
	}).(InstanceMachineConfigOutput)
}

// The number of CPU's in the VM instance.
func (o InstanceMachineConfigPtrOutput) CpuCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceMachineConfig) *int {
		if v == nil {
			return nil
		}
		return v.CpuCount
	}).(pulumi.IntPtrOutput)
}

type InstanceReadPoolConfig struct {
	// Read capacity, i.e. number of nodes in a read pool instance.
	NodeCount *int `pulumi:"nodeCount"`
}

// InstanceReadPoolConfigInput is an input type that accepts InstanceReadPoolConfigArgs and InstanceReadPoolConfigOutput values.
// You can construct a concrete instance of `InstanceReadPoolConfigInput` via:
//
//	InstanceReadPoolConfigArgs{...}
type InstanceReadPoolConfigInput interface {
	pulumi.Input

	ToInstanceReadPoolConfigOutput() InstanceReadPoolConfigOutput
	ToInstanceReadPoolConfigOutputWithContext(context.Context) InstanceReadPoolConfigOutput
}

type InstanceReadPoolConfigArgs struct {
	// Read capacity, i.e. number of nodes in a read pool instance.
	NodeCount pulumi.IntPtrInput `pulumi:"nodeCount"`
}

func (InstanceReadPoolConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceReadPoolConfig)(nil)).Elem()
}

func (i InstanceReadPoolConfigArgs) ToInstanceReadPoolConfigOutput() InstanceReadPoolConfigOutput {
	return i.ToInstanceReadPoolConfigOutputWithContext(context.Background())
}

func (i InstanceReadPoolConfigArgs) ToInstanceReadPoolConfigOutputWithContext(ctx context.Context) InstanceReadPoolConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceReadPoolConfigOutput)
}

func (i InstanceReadPoolConfigArgs) ToOutput(ctx context.Context) pulumix.Output[InstanceReadPoolConfig] {
	return pulumix.Output[InstanceReadPoolConfig]{
		OutputState: i.ToInstanceReadPoolConfigOutputWithContext(ctx).OutputState,
	}
}

func (i InstanceReadPoolConfigArgs) ToInstanceReadPoolConfigPtrOutput() InstanceReadPoolConfigPtrOutput {
	return i.ToInstanceReadPoolConfigPtrOutputWithContext(context.Background())
}

func (i InstanceReadPoolConfigArgs) ToInstanceReadPoolConfigPtrOutputWithContext(ctx context.Context) InstanceReadPoolConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceReadPoolConfigOutput).ToInstanceReadPoolConfigPtrOutputWithContext(ctx)
}

// InstanceReadPoolConfigPtrInput is an input type that accepts InstanceReadPoolConfigArgs, InstanceReadPoolConfigPtr and InstanceReadPoolConfigPtrOutput values.
// You can construct a concrete instance of `InstanceReadPoolConfigPtrInput` via:
//
//	        InstanceReadPoolConfigArgs{...}
//
//	or:
//
//	        nil
type InstanceReadPoolConfigPtrInput interface {
	pulumi.Input

	ToInstanceReadPoolConfigPtrOutput() InstanceReadPoolConfigPtrOutput
	ToInstanceReadPoolConfigPtrOutputWithContext(context.Context) InstanceReadPoolConfigPtrOutput
}

type instanceReadPoolConfigPtrType InstanceReadPoolConfigArgs

func InstanceReadPoolConfigPtr(v *InstanceReadPoolConfigArgs) InstanceReadPoolConfigPtrInput {
	return (*instanceReadPoolConfigPtrType)(v)
}

func (*instanceReadPoolConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceReadPoolConfig)(nil)).Elem()
}

func (i *instanceReadPoolConfigPtrType) ToInstanceReadPoolConfigPtrOutput() InstanceReadPoolConfigPtrOutput {
	return i.ToInstanceReadPoolConfigPtrOutputWithContext(context.Background())
}

func (i *instanceReadPoolConfigPtrType) ToInstanceReadPoolConfigPtrOutputWithContext(ctx context.Context) InstanceReadPoolConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceReadPoolConfigPtrOutput)
}

func (i *instanceReadPoolConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*InstanceReadPoolConfig] {
	return pulumix.Output[*InstanceReadPoolConfig]{
		OutputState: i.ToInstanceReadPoolConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type InstanceReadPoolConfigOutput struct{ *pulumi.OutputState }

func (InstanceReadPoolConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceReadPoolConfig)(nil)).Elem()
}

func (o InstanceReadPoolConfigOutput) ToInstanceReadPoolConfigOutput() InstanceReadPoolConfigOutput {
	return o
}

func (o InstanceReadPoolConfigOutput) ToInstanceReadPoolConfigOutputWithContext(ctx context.Context) InstanceReadPoolConfigOutput {
	return o
}

func (o InstanceReadPoolConfigOutput) ToInstanceReadPoolConfigPtrOutput() InstanceReadPoolConfigPtrOutput {
	return o.ToInstanceReadPoolConfigPtrOutputWithContext(context.Background())
}

func (o InstanceReadPoolConfigOutput) ToInstanceReadPoolConfigPtrOutputWithContext(ctx context.Context) InstanceReadPoolConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceReadPoolConfig) *InstanceReadPoolConfig {
		return &v
	}).(InstanceReadPoolConfigPtrOutput)
}

func (o InstanceReadPoolConfigOutput) ToOutput(ctx context.Context) pulumix.Output[InstanceReadPoolConfig] {
	return pulumix.Output[InstanceReadPoolConfig]{
		OutputState: o.OutputState,
	}
}

// Read capacity, i.e. number of nodes in a read pool instance.
func (o InstanceReadPoolConfigOutput) NodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceReadPoolConfig) *int { return v.NodeCount }).(pulumi.IntPtrOutput)
}

type InstanceReadPoolConfigPtrOutput struct{ *pulumi.OutputState }

func (InstanceReadPoolConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceReadPoolConfig)(nil)).Elem()
}

func (o InstanceReadPoolConfigPtrOutput) ToInstanceReadPoolConfigPtrOutput() InstanceReadPoolConfigPtrOutput {
	return o
}

func (o InstanceReadPoolConfigPtrOutput) ToInstanceReadPoolConfigPtrOutputWithContext(ctx context.Context) InstanceReadPoolConfigPtrOutput {
	return o
}

func (o InstanceReadPoolConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*InstanceReadPoolConfig] {
	return pulumix.Output[*InstanceReadPoolConfig]{
		OutputState: o.OutputState,
	}
}

func (o InstanceReadPoolConfigPtrOutput) Elem() InstanceReadPoolConfigOutput {
	return o.ApplyT(func(v *InstanceReadPoolConfig) InstanceReadPoolConfig {
		if v != nil {
			return *v
		}
		var ret InstanceReadPoolConfig
		return ret
	}).(InstanceReadPoolConfigOutput)
}

// Read capacity, i.e. number of nodes in a read pool instance.
func (o InstanceReadPoolConfigPtrOutput) NodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceReadPoolConfig) *int {
		if v == nil {
			return nil
		}
		return v.NodeCount
	}).(pulumi.IntPtrOutput)
}

type GetLocationsLocation struct {
	// The friendly name for this location, typically a nearby city name. For example, "Tokyo".
	DisplayName string `pulumi:"displayName"`
	// Cross-service attributes for the location. For example `{"cloud.googleapis.com/region": "us-east1"}`.
	Labels map[string]string `pulumi:"labels"`
	// The canonical id for this location. For example: "us-east1"..
	LocationId string `pulumi:"locationId"`
	// Service-specific metadata. For example the available capacity at the given location.
	Metadata map[string]string `pulumi:"metadata"`
	// Resource name for the location, which may vary between implementations. For example: "projects/example-project/locations/us-east1".
	Name string `pulumi:"name"`
}

// GetLocationsLocationInput is an input type that accepts GetLocationsLocationArgs and GetLocationsLocationOutput values.
// You can construct a concrete instance of `GetLocationsLocationInput` via:
//
//	GetLocationsLocationArgs{...}
type GetLocationsLocationInput interface {
	pulumi.Input

	ToGetLocationsLocationOutput() GetLocationsLocationOutput
	ToGetLocationsLocationOutputWithContext(context.Context) GetLocationsLocationOutput
}

type GetLocationsLocationArgs struct {
	// The friendly name for this location, typically a nearby city name. For example, "Tokyo".
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Cross-service attributes for the location. For example `{"cloud.googleapis.com/region": "us-east1"}`.
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// The canonical id for this location. For example: "us-east1"..
	LocationId pulumi.StringInput `pulumi:"locationId"`
	// Service-specific metadata. For example the available capacity at the given location.
	Metadata pulumi.StringMapInput `pulumi:"metadata"`
	// Resource name for the location, which may vary between implementations. For example: "projects/example-project/locations/us-east1".
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetLocationsLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLocationsLocation)(nil)).Elem()
}

func (i GetLocationsLocationArgs) ToGetLocationsLocationOutput() GetLocationsLocationOutput {
	return i.ToGetLocationsLocationOutputWithContext(context.Background())
}

func (i GetLocationsLocationArgs) ToGetLocationsLocationOutputWithContext(ctx context.Context) GetLocationsLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLocationsLocationOutput)
}

func (i GetLocationsLocationArgs) ToOutput(ctx context.Context) pulumix.Output[GetLocationsLocation] {
	return pulumix.Output[GetLocationsLocation]{
		OutputState: i.ToGetLocationsLocationOutputWithContext(ctx).OutputState,
	}
}

// GetLocationsLocationArrayInput is an input type that accepts GetLocationsLocationArray and GetLocationsLocationArrayOutput values.
// You can construct a concrete instance of `GetLocationsLocationArrayInput` via:
//
//	GetLocationsLocationArray{ GetLocationsLocationArgs{...} }
type GetLocationsLocationArrayInput interface {
	pulumi.Input

	ToGetLocationsLocationArrayOutput() GetLocationsLocationArrayOutput
	ToGetLocationsLocationArrayOutputWithContext(context.Context) GetLocationsLocationArrayOutput
}

type GetLocationsLocationArray []GetLocationsLocationInput

func (GetLocationsLocationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLocationsLocation)(nil)).Elem()
}

func (i GetLocationsLocationArray) ToGetLocationsLocationArrayOutput() GetLocationsLocationArrayOutput {
	return i.ToGetLocationsLocationArrayOutputWithContext(context.Background())
}

func (i GetLocationsLocationArray) ToGetLocationsLocationArrayOutputWithContext(ctx context.Context) GetLocationsLocationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLocationsLocationArrayOutput)
}

func (i GetLocationsLocationArray) ToOutput(ctx context.Context) pulumix.Output[[]GetLocationsLocation] {
	return pulumix.Output[[]GetLocationsLocation]{
		OutputState: i.ToGetLocationsLocationArrayOutputWithContext(ctx).OutputState,
	}
}

type GetLocationsLocationOutput struct{ *pulumi.OutputState }

func (GetLocationsLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLocationsLocation)(nil)).Elem()
}

func (o GetLocationsLocationOutput) ToGetLocationsLocationOutput() GetLocationsLocationOutput {
	return o
}

func (o GetLocationsLocationOutput) ToGetLocationsLocationOutputWithContext(ctx context.Context) GetLocationsLocationOutput {
	return o
}

func (o GetLocationsLocationOutput) ToOutput(ctx context.Context) pulumix.Output[GetLocationsLocation] {
	return pulumix.Output[GetLocationsLocation]{
		OutputState: o.OutputState,
	}
}

// The friendly name for this location, typically a nearby city name. For example, "Tokyo".
func (o GetLocationsLocationOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetLocationsLocation) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Cross-service attributes for the location. For example `{"cloud.googleapis.com/region": "us-east1"}`.
func (o GetLocationsLocationOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetLocationsLocation) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// The canonical id for this location. For example: "us-east1"..
func (o GetLocationsLocationOutput) LocationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLocationsLocation) string { return v.LocationId }).(pulumi.StringOutput)
}

// Service-specific metadata. For example the available capacity at the given location.
func (o GetLocationsLocationOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetLocationsLocation) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

// Resource name for the location, which may vary between implementations. For example: "projects/example-project/locations/us-east1".
func (o GetLocationsLocationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetLocationsLocation) string { return v.Name }).(pulumi.StringOutput)
}

type GetLocationsLocationArrayOutput struct{ *pulumi.OutputState }

func (GetLocationsLocationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLocationsLocation)(nil)).Elem()
}

func (o GetLocationsLocationArrayOutput) ToGetLocationsLocationArrayOutput() GetLocationsLocationArrayOutput {
	return o
}

func (o GetLocationsLocationArrayOutput) ToGetLocationsLocationArrayOutputWithContext(ctx context.Context) GetLocationsLocationArrayOutput {
	return o
}

func (o GetLocationsLocationArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetLocationsLocation] {
	return pulumix.Output[[]GetLocationsLocation]{
		OutputState: o.OutputState,
	}
}

func (o GetLocationsLocationArrayOutput) Index(i pulumi.IntInput) GetLocationsLocationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLocationsLocation {
		return vs[0].([]GetLocationsLocation)[vs[1].(int)]
	}).(GetLocationsLocationOutput)
}

type GetSupportedDatabaseFlagsSupportedDatabaseFlag struct {
	// Whether the database flag accepts multiple values. If true, a comma-separated list of stringified values may be specified.
	AcceptsMultipleValues bool `pulumi:"acceptsMultipleValues"`
	// The name of the database flag, e.g. "maxAllowedPackets". The is a possibly key for the Instance.database_flags map field.
	FlagName string `pulumi:"flagName"`
	// Restriction on `INTEGER` type value. Specifies the minimum value and the maximum value that can be specified, if applicable.
	IntegerRestrictions GetSupportedDatabaseFlagsSupportedDatabaseFlagIntegerRestrictions `pulumi:"integerRestrictions"`
	// The name of the flag resource, following Google Cloud conventions, e.g.: * projects/{project}/locations/{location}/flags/{flag} This field currently has no semantic meaning.
	Name string `pulumi:"name"`
	// Whether setting or updating this flag on an Instance requires a database restart. If a flag that requires database restart is set, the backend will automatically restart the database (making sure to satisfy any availability SLO's).
	RequiresDbRestart bool `pulumi:"requiresDbRestart"`
	// Restriction on `STRING` type value. The list of allowed values, if bounded. This field will be empty if there is a unbounded number of allowed values.
	StringRestrictions GetSupportedDatabaseFlagsSupportedDatabaseFlagStringRestrictions `pulumi:"stringRestrictions"`
	// Major database engine versions for which this flag is supported. The supported values are `POSTGRES_14` and `DATABASE_VERSION_UNSPECIFIED`.
	SupportedDbVersions []string `pulumi:"supportedDbVersions"`
	// ValueType describes the semantic type of the value that the flag accepts. Regardless of the ValueType, the Instance.database_flags field accepts the stringified version of the value, i.e. "20" or "3.14". The supported values are `VALUE_TYPE_UNSPECIFIED`, `STRING`, `INTEGER`, `FLOAT` and `NONE`.
	ValueType string `pulumi:"valueType"`
}

// GetSupportedDatabaseFlagsSupportedDatabaseFlagInput is an input type that accepts GetSupportedDatabaseFlagsSupportedDatabaseFlagArgs and GetSupportedDatabaseFlagsSupportedDatabaseFlagOutput values.
// You can construct a concrete instance of `GetSupportedDatabaseFlagsSupportedDatabaseFlagInput` via:
//
//	GetSupportedDatabaseFlagsSupportedDatabaseFlagArgs{...}
type GetSupportedDatabaseFlagsSupportedDatabaseFlagInput interface {
	pulumi.Input

	ToGetSupportedDatabaseFlagsSupportedDatabaseFlagOutput() GetSupportedDatabaseFlagsSupportedDatabaseFlagOutput
	ToGetSupportedDatabaseFlagsSupportedDatabaseFlagOutputWithContext(context.Context) GetSupportedDatabaseFlagsSupportedDatabaseFlagOutput
}

type GetSupportedDatabaseFlagsSupportedDatabaseFlagArgs struct {
	// Whether the database flag accepts multiple values. If true, a comma-separated list of stringified values may be specified.
	AcceptsMultipleValues pulumi.BoolInput `pulumi:"acceptsMultipleValues"`
	// The name of the database flag, e.g. "maxAllowedPackets". The is a possibly key for the Instance.database_flags map field.
	FlagName pulumi.StringInput `pulumi:"flagName"`
	// Restriction on `INTEGER` type value. Specifies the minimum value and the maximum value that can be specified, if applicable.
	IntegerRestrictions GetSupportedDatabaseFlagsSupportedDatabaseFlagIntegerRestrictionsInput `pulumi:"integerRestrictions"`
	// The name of the flag resource, following Google Cloud conventions, e.g.: * projects/{project}/locations/{location}/flags/{flag} This field currently has no semantic meaning.
	Name pulumi.StringInput `pulumi:"name"`
	// Whether setting or updating this flag on an Instance requires a database restart. If a flag that requires database restart is set, the backend will automatically restart the database (making sure to satisfy any availability SLO's).
	RequiresDbRestart pulumi.BoolInput `pulumi:"requiresDbRestart"`
	// Restriction on `STRING` type value. The list of allowed values, if bounded. This field will be empty if there is a unbounded number of allowed values.
	StringRestrictions GetSupportedDatabaseFlagsSupportedDatabaseFlagStringRestrictionsInput `pulumi:"stringRestrictions"`
	// Major database engine versions for which this flag is supported. The supported values are `POSTGRES_14` and `DATABASE_VERSION_UNSPECIFIED`.
	SupportedDbVersions pulumi.StringArrayInput `pulumi:"supportedDbVersions"`
	// ValueType describes the semantic type of the value that the flag accepts. Regardless of the ValueType, the Instance.database_flags field accepts the stringified version of the value, i.e. "20" or "3.14". The supported values are `VALUE_TYPE_UNSPECIFIED`, `STRING`, `INTEGER`, `FLOAT` and `NONE`.
	ValueType pulumi.StringInput `pulumi:"valueType"`
}

func (GetSupportedDatabaseFlagsSupportedDatabaseFlagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSupportedDatabaseFlagsSupportedDatabaseFlag)(nil)).Elem()
}

func (i GetSupportedDatabaseFlagsSupportedDatabaseFlagArgs) ToGetSupportedDatabaseFlagsSupportedDatabaseFlagOutput() GetSupportedDatabaseFlagsSupportedDatabaseFlagOutput {
	return i.ToGetSupportedDatabaseFlagsSupportedDatabaseFlagOutputWithContext(context.Background())
}

func (i GetSupportedDatabaseFlagsSupportedDatabaseFlagArgs) ToGetSupportedDatabaseFlagsSupportedDatabaseFlagOutputWithContext(ctx context.Context) GetSupportedDatabaseFlagsSupportedDatabaseFlagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSupportedDatabaseFlagsSupportedDatabaseFlagOutput)
}

func (i GetSupportedDatabaseFlagsSupportedDatabaseFlagArgs) ToOutput(ctx context.Context) pulumix.Output[GetSupportedDatabaseFlagsSupportedDatabaseFlag] {
	return pulumix.Output[GetSupportedDatabaseFlagsSupportedDatabaseFlag]{
		OutputState: i.ToGetSupportedDatabaseFlagsSupportedDatabaseFlagOutputWithContext(ctx).OutputState,
	}
}

// GetSupportedDatabaseFlagsSupportedDatabaseFlagArrayInput is an input type that accepts GetSupportedDatabaseFlagsSupportedDatabaseFlagArray and GetSupportedDatabaseFlagsSupportedDatabaseFlagArrayOutput values.
// You can construct a concrete instance of `GetSupportedDatabaseFlagsSupportedDatabaseFlagArrayInput` via:
//
//	GetSupportedDatabaseFlagsSupportedDatabaseFlagArray{ GetSupportedDatabaseFlagsSupportedDatabaseFlagArgs{...} }
type GetSupportedDatabaseFlagsSupportedDatabaseFlagArrayInput interface {
	pulumi.Input

	ToGetSupportedDatabaseFlagsSupportedDatabaseFlagArrayOutput() GetSupportedDatabaseFlagsSupportedDatabaseFlagArrayOutput
	ToGetSupportedDatabaseFlagsSupportedDatabaseFlagArrayOutputWithContext(context.Context) GetSupportedDatabaseFlagsSupportedDatabaseFlagArrayOutput
}

type GetSupportedDatabaseFlagsSupportedDatabaseFlagArray []GetSupportedDatabaseFlagsSupportedDatabaseFlagInput

func (GetSupportedDatabaseFlagsSupportedDatabaseFlagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSupportedDatabaseFlagsSupportedDatabaseFlag)(nil)).Elem()
}

func (i GetSupportedDatabaseFlagsSupportedDatabaseFlagArray) ToGetSupportedDatabaseFlagsSupportedDatabaseFlagArrayOutput() GetSupportedDatabaseFlagsSupportedDatabaseFlagArrayOutput {
	return i.ToGetSupportedDatabaseFlagsSupportedDatabaseFlagArrayOutputWithContext(context.Background())
}

func (i GetSupportedDatabaseFlagsSupportedDatabaseFlagArray) ToGetSupportedDatabaseFlagsSupportedDatabaseFlagArrayOutputWithContext(ctx context.Context) GetSupportedDatabaseFlagsSupportedDatabaseFlagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSupportedDatabaseFlagsSupportedDatabaseFlagArrayOutput)
}

func (i GetSupportedDatabaseFlagsSupportedDatabaseFlagArray) ToOutput(ctx context.Context) pulumix.Output[[]GetSupportedDatabaseFlagsSupportedDatabaseFlag] {
	return pulumix.Output[[]GetSupportedDatabaseFlagsSupportedDatabaseFlag]{
		OutputState: i.ToGetSupportedDatabaseFlagsSupportedDatabaseFlagArrayOutputWithContext(ctx).OutputState,
	}
}

type GetSupportedDatabaseFlagsSupportedDatabaseFlagOutput struct{ *pulumi.OutputState }

func (GetSupportedDatabaseFlagsSupportedDatabaseFlagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSupportedDatabaseFlagsSupportedDatabaseFlag)(nil)).Elem()
}

func (o GetSupportedDatabaseFlagsSupportedDatabaseFlagOutput) ToGetSupportedDatabaseFlagsSupportedDatabaseFlagOutput() GetSupportedDatabaseFlagsSupportedDatabaseFlagOutput {
	return o
}

func (o GetSupportedDatabaseFlagsSupportedDatabaseFlagOutput) ToGetSupportedDatabaseFlagsSupportedDatabaseFlagOutputWithContext(ctx context.Context) GetSupportedDatabaseFlagsSupportedDatabaseFlagOutput {
	return o
}

func (o GetSupportedDatabaseFlagsSupportedDatabaseFlagOutput) ToOutput(ctx context.Context) pulumix.Output[GetSupportedDatabaseFlagsSupportedDatabaseFlag] {
	return pulumix.Output[GetSupportedDatabaseFlagsSupportedDatabaseFlag]{
		OutputState: o.OutputState,
	}
}

// Whether the database flag accepts multiple values. If true, a comma-separated list of stringified values may be specified.
func (o GetSupportedDatabaseFlagsSupportedDatabaseFlagOutput) AcceptsMultipleValues() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSupportedDatabaseFlagsSupportedDatabaseFlag) bool { return v.AcceptsMultipleValues }).(pulumi.BoolOutput)
}

// The name of the database flag, e.g. "maxAllowedPackets". The is a possibly key for the Instance.database_flags map field.
func (o GetSupportedDatabaseFlagsSupportedDatabaseFlagOutput) FlagName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSupportedDatabaseFlagsSupportedDatabaseFlag) string { return v.FlagName }).(pulumi.StringOutput)
}

// Restriction on `INTEGER` type value. Specifies the minimum value and the maximum value that can be specified, if applicable.
func (o GetSupportedDatabaseFlagsSupportedDatabaseFlagOutput) IntegerRestrictions() GetSupportedDatabaseFlagsSupportedDatabaseFlagIntegerRestrictionsOutput {
	return o.ApplyT(func(v GetSupportedDatabaseFlagsSupportedDatabaseFlag) GetSupportedDatabaseFlagsSupportedDatabaseFlagIntegerRestrictions {
		return v.IntegerRestrictions
	}).(GetSupportedDatabaseFlagsSupportedDatabaseFlagIntegerRestrictionsOutput)
}

// The name of the flag resource, following Google Cloud conventions, e.g.: * projects/{project}/locations/{location}/flags/{flag} This field currently has no semantic meaning.
func (o GetSupportedDatabaseFlagsSupportedDatabaseFlagOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSupportedDatabaseFlagsSupportedDatabaseFlag) string { return v.Name }).(pulumi.StringOutput)
}

// Whether setting or updating this flag on an Instance requires a database restart. If a flag that requires database restart is set, the backend will automatically restart the database (making sure to satisfy any availability SLO's).
func (o GetSupportedDatabaseFlagsSupportedDatabaseFlagOutput) RequiresDbRestart() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSupportedDatabaseFlagsSupportedDatabaseFlag) bool { return v.RequiresDbRestart }).(pulumi.BoolOutput)
}

// Restriction on `STRING` type value. The list of allowed values, if bounded. This field will be empty if there is a unbounded number of allowed values.
func (o GetSupportedDatabaseFlagsSupportedDatabaseFlagOutput) StringRestrictions() GetSupportedDatabaseFlagsSupportedDatabaseFlagStringRestrictionsOutput {
	return o.ApplyT(func(v GetSupportedDatabaseFlagsSupportedDatabaseFlag) GetSupportedDatabaseFlagsSupportedDatabaseFlagStringRestrictions {
		return v.StringRestrictions
	}).(GetSupportedDatabaseFlagsSupportedDatabaseFlagStringRestrictionsOutput)
}

// Major database engine versions for which this flag is supported. The supported values are `POSTGRES_14` and `DATABASE_VERSION_UNSPECIFIED`.
func (o GetSupportedDatabaseFlagsSupportedDatabaseFlagOutput) SupportedDbVersions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSupportedDatabaseFlagsSupportedDatabaseFlag) []string { return v.SupportedDbVersions }).(pulumi.StringArrayOutput)
}

// ValueType describes the semantic type of the value that the flag accepts. Regardless of the ValueType, the Instance.database_flags field accepts the stringified version of the value, i.e. "20" or "3.14". The supported values are `VALUE_TYPE_UNSPECIFIED`, `STRING`, `INTEGER`, `FLOAT` and `NONE`.
func (o GetSupportedDatabaseFlagsSupportedDatabaseFlagOutput) ValueType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSupportedDatabaseFlagsSupportedDatabaseFlag) string { return v.ValueType }).(pulumi.StringOutput)
}

type GetSupportedDatabaseFlagsSupportedDatabaseFlagArrayOutput struct{ *pulumi.OutputState }

func (GetSupportedDatabaseFlagsSupportedDatabaseFlagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSupportedDatabaseFlagsSupportedDatabaseFlag)(nil)).Elem()
}

func (o GetSupportedDatabaseFlagsSupportedDatabaseFlagArrayOutput) ToGetSupportedDatabaseFlagsSupportedDatabaseFlagArrayOutput() GetSupportedDatabaseFlagsSupportedDatabaseFlagArrayOutput {
	return o
}

func (o GetSupportedDatabaseFlagsSupportedDatabaseFlagArrayOutput) ToGetSupportedDatabaseFlagsSupportedDatabaseFlagArrayOutputWithContext(ctx context.Context) GetSupportedDatabaseFlagsSupportedDatabaseFlagArrayOutput {
	return o
}

func (o GetSupportedDatabaseFlagsSupportedDatabaseFlagArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetSupportedDatabaseFlagsSupportedDatabaseFlag] {
	return pulumix.Output[[]GetSupportedDatabaseFlagsSupportedDatabaseFlag]{
		OutputState: o.OutputState,
	}
}

func (o GetSupportedDatabaseFlagsSupportedDatabaseFlagArrayOutput) Index(i pulumi.IntInput) GetSupportedDatabaseFlagsSupportedDatabaseFlagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSupportedDatabaseFlagsSupportedDatabaseFlag {
		return vs[0].([]GetSupportedDatabaseFlagsSupportedDatabaseFlag)[vs[1].(int)]
	}).(GetSupportedDatabaseFlagsSupportedDatabaseFlagOutput)
}

type GetSupportedDatabaseFlagsSupportedDatabaseFlagIntegerRestrictions struct {
	MaxValue string `pulumi:"maxValue"`
	MinValue string `pulumi:"minValue"`
}

// GetSupportedDatabaseFlagsSupportedDatabaseFlagIntegerRestrictionsInput is an input type that accepts GetSupportedDatabaseFlagsSupportedDatabaseFlagIntegerRestrictionsArgs and GetSupportedDatabaseFlagsSupportedDatabaseFlagIntegerRestrictionsOutput values.
// You can construct a concrete instance of `GetSupportedDatabaseFlagsSupportedDatabaseFlagIntegerRestrictionsInput` via:
//
//	GetSupportedDatabaseFlagsSupportedDatabaseFlagIntegerRestrictionsArgs{...}
type GetSupportedDatabaseFlagsSupportedDatabaseFlagIntegerRestrictionsInput interface {
	pulumi.Input

	ToGetSupportedDatabaseFlagsSupportedDatabaseFlagIntegerRestrictionsOutput() GetSupportedDatabaseFlagsSupportedDatabaseFlagIntegerRestrictionsOutput
	ToGetSupportedDatabaseFlagsSupportedDatabaseFlagIntegerRestrictionsOutputWithContext(context.Context) GetSupportedDatabaseFlagsSupportedDatabaseFlagIntegerRestrictionsOutput
}

type GetSupportedDatabaseFlagsSupportedDatabaseFlagIntegerRestrictionsArgs struct {
	MaxValue pulumi.StringInput `pulumi:"maxValue"`
	MinValue pulumi.StringInput `pulumi:"minValue"`
}

func (GetSupportedDatabaseFlagsSupportedDatabaseFlagIntegerRestrictionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSupportedDatabaseFlagsSupportedDatabaseFlagIntegerRestrictions)(nil)).Elem()
}

func (i GetSupportedDatabaseFlagsSupportedDatabaseFlagIntegerRestrictionsArgs) ToGetSupportedDatabaseFlagsSupportedDatabaseFlagIntegerRestrictionsOutput() GetSupportedDatabaseFlagsSupportedDatabaseFlagIntegerRestrictionsOutput {
	return i.ToGetSupportedDatabaseFlagsSupportedDatabaseFlagIntegerRestrictionsOutputWithContext(context.Background())
}

func (i GetSupportedDatabaseFlagsSupportedDatabaseFlagIntegerRestrictionsArgs) ToGetSupportedDatabaseFlagsSupportedDatabaseFlagIntegerRestrictionsOutputWithContext(ctx context.Context) GetSupportedDatabaseFlagsSupportedDatabaseFlagIntegerRestrictionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSupportedDatabaseFlagsSupportedDatabaseFlagIntegerRestrictionsOutput)
}

func (i GetSupportedDatabaseFlagsSupportedDatabaseFlagIntegerRestrictionsArgs) ToOutput(ctx context.Context) pulumix.Output[GetSupportedDatabaseFlagsSupportedDatabaseFlagIntegerRestrictions] {
	return pulumix.Output[GetSupportedDatabaseFlagsSupportedDatabaseFlagIntegerRestrictions]{
		OutputState: i.ToGetSupportedDatabaseFlagsSupportedDatabaseFlagIntegerRestrictionsOutputWithContext(ctx).OutputState,
	}
}

type GetSupportedDatabaseFlagsSupportedDatabaseFlagIntegerRestrictionsOutput struct{ *pulumi.OutputState }

func (GetSupportedDatabaseFlagsSupportedDatabaseFlagIntegerRestrictionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSupportedDatabaseFlagsSupportedDatabaseFlagIntegerRestrictions)(nil)).Elem()
}

func (o GetSupportedDatabaseFlagsSupportedDatabaseFlagIntegerRestrictionsOutput) ToGetSupportedDatabaseFlagsSupportedDatabaseFlagIntegerRestrictionsOutput() GetSupportedDatabaseFlagsSupportedDatabaseFlagIntegerRestrictionsOutput {
	return o
}

func (o GetSupportedDatabaseFlagsSupportedDatabaseFlagIntegerRestrictionsOutput) ToGetSupportedDatabaseFlagsSupportedDatabaseFlagIntegerRestrictionsOutputWithContext(ctx context.Context) GetSupportedDatabaseFlagsSupportedDatabaseFlagIntegerRestrictionsOutput {
	return o
}

func (o GetSupportedDatabaseFlagsSupportedDatabaseFlagIntegerRestrictionsOutput) ToOutput(ctx context.Context) pulumix.Output[GetSupportedDatabaseFlagsSupportedDatabaseFlagIntegerRestrictions] {
	return pulumix.Output[GetSupportedDatabaseFlagsSupportedDatabaseFlagIntegerRestrictions]{
		OutputState: o.OutputState,
	}
}

func (o GetSupportedDatabaseFlagsSupportedDatabaseFlagIntegerRestrictionsOutput) MaxValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetSupportedDatabaseFlagsSupportedDatabaseFlagIntegerRestrictions) string { return v.MaxValue }).(pulumi.StringOutput)
}

func (o GetSupportedDatabaseFlagsSupportedDatabaseFlagIntegerRestrictionsOutput) MinValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetSupportedDatabaseFlagsSupportedDatabaseFlagIntegerRestrictions) string { return v.MinValue }).(pulumi.StringOutput)
}

type GetSupportedDatabaseFlagsSupportedDatabaseFlagStringRestrictions struct {
	AllowedValues []string `pulumi:"allowedValues"`
}

// GetSupportedDatabaseFlagsSupportedDatabaseFlagStringRestrictionsInput is an input type that accepts GetSupportedDatabaseFlagsSupportedDatabaseFlagStringRestrictionsArgs and GetSupportedDatabaseFlagsSupportedDatabaseFlagStringRestrictionsOutput values.
// You can construct a concrete instance of `GetSupportedDatabaseFlagsSupportedDatabaseFlagStringRestrictionsInput` via:
//
//	GetSupportedDatabaseFlagsSupportedDatabaseFlagStringRestrictionsArgs{...}
type GetSupportedDatabaseFlagsSupportedDatabaseFlagStringRestrictionsInput interface {
	pulumi.Input

	ToGetSupportedDatabaseFlagsSupportedDatabaseFlagStringRestrictionsOutput() GetSupportedDatabaseFlagsSupportedDatabaseFlagStringRestrictionsOutput
	ToGetSupportedDatabaseFlagsSupportedDatabaseFlagStringRestrictionsOutputWithContext(context.Context) GetSupportedDatabaseFlagsSupportedDatabaseFlagStringRestrictionsOutput
}

type GetSupportedDatabaseFlagsSupportedDatabaseFlagStringRestrictionsArgs struct {
	AllowedValues pulumi.StringArrayInput `pulumi:"allowedValues"`
}

func (GetSupportedDatabaseFlagsSupportedDatabaseFlagStringRestrictionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSupportedDatabaseFlagsSupportedDatabaseFlagStringRestrictions)(nil)).Elem()
}

func (i GetSupportedDatabaseFlagsSupportedDatabaseFlagStringRestrictionsArgs) ToGetSupportedDatabaseFlagsSupportedDatabaseFlagStringRestrictionsOutput() GetSupportedDatabaseFlagsSupportedDatabaseFlagStringRestrictionsOutput {
	return i.ToGetSupportedDatabaseFlagsSupportedDatabaseFlagStringRestrictionsOutputWithContext(context.Background())
}

func (i GetSupportedDatabaseFlagsSupportedDatabaseFlagStringRestrictionsArgs) ToGetSupportedDatabaseFlagsSupportedDatabaseFlagStringRestrictionsOutputWithContext(ctx context.Context) GetSupportedDatabaseFlagsSupportedDatabaseFlagStringRestrictionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSupportedDatabaseFlagsSupportedDatabaseFlagStringRestrictionsOutput)
}

func (i GetSupportedDatabaseFlagsSupportedDatabaseFlagStringRestrictionsArgs) ToOutput(ctx context.Context) pulumix.Output[GetSupportedDatabaseFlagsSupportedDatabaseFlagStringRestrictions] {
	return pulumix.Output[GetSupportedDatabaseFlagsSupportedDatabaseFlagStringRestrictions]{
		OutputState: i.ToGetSupportedDatabaseFlagsSupportedDatabaseFlagStringRestrictionsOutputWithContext(ctx).OutputState,
	}
}

type GetSupportedDatabaseFlagsSupportedDatabaseFlagStringRestrictionsOutput struct{ *pulumi.OutputState }

func (GetSupportedDatabaseFlagsSupportedDatabaseFlagStringRestrictionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSupportedDatabaseFlagsSupportedDatabaseFlagStringRestrictions)(nil)).Elem()
}

func (o GetSupportedDatabaseFlagsSupportedDatabaseFlagStringRestrictionsOutput) ToGetSupportedDatabaseFlagsSupportedDatabaseFlagStringRestrictionsOutput() GetSupportedDatabaseFlagsSupportedDatabaseFlagStringRestrictionsOutput {
	return o
}

func (o GetSupportedDatabaseFlagsSupportedDatabaseFlagStringRestrictionsOutput) ToGetSupportedDatabaseFlagsSupportedDatabaseFlagStringRestrictionsOutputWithContext(ctx context.Context) GetSupportedDatabaseFlagsSupportedDatabaseFlagStringRestrictionsOutput {
	return o
}

func (o GetSupportedDatabaseFlagsSupportedDatabaseFlagStringRestrictionsOutput) ToOutput(ctx context.Context) pulumix.Output[GetSupportedDatabaseFlagsSupportedDatabaseFlagStringRestrictions] {
	return pulumix.Output[GetSupportedDatabaseFlagsSupportedDatabaseFlagStringRestrictions]{
		OutputState: o.OutputState,
	}
}

func (o GetSupportedDatabaseFlagsSupportedDatabaseFlagStringRestrictionsOutput) AllowedValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSupportedDatabaseFlagsSupportedDatabaseFlagStringRestrictions) []string {
		return v.AllowedValues
	}).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BackupEncryptionConfigInput)(nil)).Elem(), BackupEncryptionConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackupEncryptionConfigPtrInput)(nil)).Elem(), BackupEncryptionConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackupEncryptionInfoInput)(nil)).Elem(), BackupEncryptionInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackupEncryptionInfoArrayInput)(nil)).Elem(), BackupEncryptionInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAutomatedBackupPolicyInput)(nil)).Elem(), ClusterAutomatedBackupPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAutomatedBackupPolicyPtrInput)(nil)).Elem(), ClusterAutomatedBackupPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAutomatedBackupPolicyEncryptionConfigInput)(nil)).Elem(), ClusterAutomatedBackupPolicyEncryptionConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAutomatedBackupPolicyEncryptionConfigPtrInput)(nil)).Elem(), ClusterAutomatedBackupPolicyEncryptionConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAutomatedBackupPolicyQuantityBasedRetentionInput)(nil)).Elem(), ClusterAutomatedBackupPolicyQuantityBasedRetentionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAutomatedBackupPolicyQuantityBasedRetentionPtrInput)(nil)).Elem(), ClusterAutomatedBackupPolicyQuantityBasedRetentionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAutomatedBackupPolicyTimeBasedRetentionInput)(nil)).Elem(), ClusterAutomatedBackupPolicyTimeBasedRetentionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAutomatedBackupPolicyTimeBasedRetentionPtrInput)(nil)).Elem(), ClusterAutomatedBackupPolicyTimeBasedRetentionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAutomatedBackupPolicyWeeklyScheduleInput)(nil)).Elem(), ClusterAutomatedBackupPolicyWeeklyScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAutomatedBackupPolicyWeeklySchedulePtrInput)(nil)).Elem(), ClusterAutomatedBackupPolicyWeeklyScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeInput)(nil)).Elem(), ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArrayInput)(nil)).Elem(), ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterBackupSourceInput)(nil)).Elem(), ClusterBackupSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterBackupSourceArrayInput)(nil)).Elem(), ClusterBackupSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterContinuousBackupConfigInput)(nil)).Elem(), ClusterContinuousBackupConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterContinuousBackupConfigPtrInput)(nil)).Elem(), ClusterContinuousBackupConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterContinuousBackupConfigEncryptionConfigInput)(nil)).Elem(), ClusterContinuousBackupConfigEncryptionConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterContinuousBackupConfigEncryptionConfigPtrInput)(nil)).Elem(), ClusterContinuousBackupConfigEncryptionConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterContinuousBackupInfoInput)(nil)).Elem(), ClusterContinuousBackupInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterContinuousBackupInfoArrayInput)(nil)).Elem(), ClusterContinuousBackupInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterContinuousBackupInfoEncryptionInfoInput)(nil)).Elem(), ClusterContinuousBackupInfoEncryptionInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterContinuousBackupInfoEncryptionInfoArrayInput)(nil)).Elem(), ClusterContinuousBackupInfoEncryptionInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterEncryptionConfigInput)(nil)).Elem(), ClusterEncryptionConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterEncryptionConfigPtrInput)(nil)).Elem(), ClusterEncryptionConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterEncryptionInfoInput)(nil)).Elem(), ClusterEncryptionInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterEncryptionInfoArrayInput)(nil)).Elem(), ClusterEncryptionInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterInitialUserInput)(nil)).Elem(), ClusterInitialUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterInitialUserPtrInput)(nil)).Elem(), ClusterInitialUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterMigrationSourceInput)(nil)).Elem(), ClusterMigrationSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterMigrationSourceArrayInput)(nil)).Elem(), ClusterMigrationSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterRestoreBackupSourceInput)(nil)).Elem(), ClusterRestoreBackupSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterRestoreBackupSourcePtrInput)(nil)).Elem(), ClusterRestoreBackupSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterRestoreContinuousBackupSourceInput)(nil)).Elem(), ClusterRestoreContinuousBackupSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterRestoreContinuousBackupSourcePtrInput)(nil)).Elem(), ClusterRestoreContinuousBackupSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceMachineConfigInput)(nil)).Elem(), InstanceMachineConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceMachineConfigPtrInput)(nil)).Elem(), InstanceMachineConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceReadPoolConfigInput)(nil)).Elem(), InstanceReadPoolConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceReadPoolConfigPtrInput)(nil)).Elem(), InstanceReadPoolConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLocationsLocationInput)(nil)).Elem(), GetLocationsLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLocationsLocationArrayInput)(nil)).Elem(), GetLocationsLocationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSupportedDatabaseFlagsSupportedDatabaseFlagInput)(nil)).Elem(), GetSupportedDatabaseFlagsSupportedDatabaseFlagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSupportedDatabaseFlagsSupportedDatabaseFlagArrayInput)(nil)).Elem(), GetSupportedDatabaseFlagsSupportedDatabaseFlagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSupportedDatabaseFlagsSupportedDatabaseFlagIntegerRestrictionsInput)(nil)).Elem(), GetSupportedDatabaseFlagsSupportedDatabaseFlagIntegerRestrictionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSupportedDatabaseFlagsSupportedDatabaseFlagStringRestrictionsInput)(nil)).Elem(), GetSupportedDatabaseFlagsSupportedDatabaseFlagStringRestrictionsArgs{})
	pulumi.RegisterOutputType(BackupEncryptionConfigOutput{})
	pulumi.RegisterOutputType(BackupEncryptionConfigPtrOutput{})
	pulumi.RegisterOutputType(BackupEncryptionInfoOutput{})
	pulumi.RegisterOutputType(BackupEncryptionInfoArrayOutput{})
	pulumi.RegisterOutputType(ClusterAutomatedBackupPolicyOutput{})
	pulumi.RegisterOutputType(ClusterAutomatedBackupPolicyPtrOutput{})
	pulumi.RegisterOutputType(ClusterAutomatedBackupPolicyEncryptionConfigOutput{})
	pulumi.RegisterOutputType(ClusterAutomatedBackupPolicyEncryptionConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterAutomatedBackupPolicyQuantityBasedRetentionOutput{})
	pulumi.RegisterOutputType(ClusterAutomatedBackupPolicyQuantityBasedRetentionPtrOutput{})
	pulumi.RegisterOutputType(ClusterAutomatedBackupPolicyTimeBasedRetentionOutput{})
	pulumi.RegisterOutputType(ClusterAutomatedBackupPolicyTimeBasedRetentionPtrOutput{})
	pulumi.RegisterOutputType(ClusterAutomatedBackupPolicyWeeklyScheduleOutput{})
	pulumi.RegisterOutputType(ClusterAutomatedBackupPolicyWeeklySchedulePtrOutput{})
	pulumi.RegisterOutputType(ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeOutput{})
	pulumi.RegisterOutputType(ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArrayOutput{})
	pulumi.RegisterOutputType(ClusterBackupSourceOutput{})
	pulumi.RegisterOutputType(ClusterBackupSourceArrayOutput{})
	pulumi.RegisterOutputType(ClusterContinuousBackupConfigOutput{})
	pulumi.RegisterOutputType(ClusterContinuousBackupConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterContinuousBackupConfigEncryptionConfigOutput{})
	pulumi.RegisterOutputType(ClusterContinuousBackupConfigEncryptionConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterContinuousBackupInfoOutput{})
	pulumi.RegisterOutputType(ClusterContinuousBackupInfoArrayOutput{})
	pulumi.RegisterOutputType(ClusterContinuousBackupInfoEncryptionInfoOutput{})
	pulumi.RegisterOutputType(ClusterContinuousBackupInfoEncryptionInfoArrayOutput{})
	pulumi.RegisterOutputType(ClusterEncryptionConfigOutput{})
	pulumi.RegisterOutputType(ClusterEncryptionConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterEncryptionInfoOutput{})
	pulumi.RegisterOutputType(ClusterEncryptionInfoArrayOutput{})
	pulumi.RegisterOutputType(ClusterInitialUserOutput{})
	pulumi.RegisterOutputType(ClusterInitialUserPtrOutput{})
	pulumi.RegisterOutputType(ClusterMigrationSourceOutput{})
	pulumi.RegisterOutputType(ClusterMigrationSourceArrayOutput{})
	pulumi.RegisterOutputType(ClusterRestoreBackupSourceOutput{})
	pulumi.RegisterOutputType(ClusterRestoreBackupSourcePtrOutput{})
	pulumi.RegisterOutputType(ClusterRestoreContinuousBackupSourceOutput{})
	pulumi.RegisterOutputType(ClusterRestoreContinuousBackupSourcePtrOutput{})
	pulumi.RegisterOutputType(InstanceMachineConfigOutput{})
	pulumi.RegisterOutputType(InstanceMachineConfigPtrOutput{})
	pulumi.RegisterOutputType(InstanceReadPoolConfigOutput{})
	pulumi.RegisterOutputType(InstanceReadPoolConfigPtrOutput{})
	pulumi.RegisterOutputType(GetLocationsLocationOutput{})
	pulumi.RegisterOutputType(GetLocationsLocationArrayOutput{})
	pulumi.RegisterOutputType(GetSupportedDatabaseFlagsSupportedDatabaseFlagOutput{})
	pulumi.RegisterOutputType(GetSupportedDatabaseFlagsSupportedDatabaseFlagArrayOutput{})
	pulumi.RegisterOutputType(GetSupportedDatabaseFlagsSupportedDatabaseFlagIntegerRestrictionsOutput{})
	pulumi.RegisterOutputType(GetSupportedDatabaseFlagsSupportedDatabaseFlagStringRestrictionsOutput{})
}
