// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package container

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type AttachedClusterAuthorization struct {
	// Groups that can perform operations as a cluster admin. A managed
	// ClusterRoleBinding will be created to grant the `cluster-admin` ClusterRole
	// to the groups. Up to ten admin groups can be provided.
	// For more info on RBAC, see
	// https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles
	AdminGroups []string `pulumi:"adminGroups"`
	// Users that can perform operations as a cluster admin. A managed
	// ClusterRoleBinding will be created to grant the `cluster-admin` ClusterRole
	// to the users. Up to ten admin users can be provided.
	// For more info on RBAC, see
	// https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles
	AdminUsers []string `pulumi:"adminUsers"`
}

// AttachedClusterAuthorizationInput is an input type that accepts AttachedClusterAuthorizationArgs and AttachedClusterAuthorizationOutput values.
// You can construct a concrete instance of `AttachedClusterAuthorizationInput` via:
//
//	AttachedClusterAuthorizationArgs{...}
type AttachedClusterAuthorizationInput interface {
	pulumi.Input

	ToAttachedClusterAuthorizationOutput() AttachedClusterAuthorizationOutput
	ToAttachedClusterAuthorizationOutputWithContext(context.Context) AttachedClusterAuthorizationOutput
}

type AttachedClusterAuthorizationArgs struct {
	// Groups that can perform operations as a cluster admin. A managed
	// ClusterRoleBinding will be created to grant the `cluster-admin` ClusterRole
	// to the groups. Up to ten admin groups can be provided.
	// For more info on RBAC, see
	// https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles
	AdminGroups pulumi.StringArrayInput `pulumi:"adminGroups"`
	// Users that can perform operations as a cluster admin. A managed
	// ClusterRoleBinding will be created to grant the `cluster-admin` ClusterRole
	// to the users. Up to ten admin users can be provided.
	// For more info on RBAC, see
	// https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles
	AdminUsers pulumi.StringArrayInput `pulumi:"adminUsers"`
}

func (AttachedClusterAuthorizationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AttachedClusterAuthorization)(nil)).Elem()
}

func (i AttachedClusterAuthorizationArgs) ToAttachedClusterAuthorizationOutput() AttachedClusterAuthorizationOutput {
	return i.ToAttachedClusterAuthorizationOutputWithContext(context.Background())
}

func (i AttachedClusterAuthorizationArgs) ToAttachedClusterAuthorizationOutputWithContext(ctx context.Context) AttachedClusterAuthorizationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttachedClusterAuthorizationOutput)
}

func (i AttachedClusterAuthorizationArgs) ToAttachedClusterAuthorizationPtrOutput() AttachedClusterAuthorizationPtrOutput {
	return i.ToAttachedClusterAuthorizationPtrOutputWithContext(context.Background())
}

func (i AttachedClusterAuthorizationArgs) ToAttachedClusterAuthorizationPtrOutputWithContext(ctx context.Context) AttachedClusterAuthorizationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttachedClusterAuthorizationOutput).ToAttachedClusterAuthorizationPtrOutputWithContext(ctx)
}

// AttachedClusterAuthorizationPtrInput is an input type that accepts AttachedClusterAuthorizationArgs, AttachedClusterAuthorizationPtr and AttachedClusterAuthorizationPtrOutput values.
// You can construct a concrete instance of `AttachedClusterAuthorizationPtrInput` via:
//
//	        AttachedClusterAuthorizationArgs{...}
//
//	or:
//
//	        nil
type AttachedClusterAuthorizationPtrInput interface {
	pulumi.Input

	ToAttachedClusterAuthorizationPtrOutput() AttachedClusterAuthorizationPtrOutput
	ToAttachedClusterAuthorizationPtrOutputWithContext(context.Context) AttachedClusterAuthorizationPtrOutput
}

type attachedClusterAuthorizationPtrType AttachedClusterAuthorizationArgs

func AttachedClusterAuthorizationPtr(v *AttachedClusterAuthorizationArgs) AttachedClusterAuthorizationPtrInput {
	return (*attachedClusterAuthorizationPtrType)(v)
}

func (*attachedClusterAuthorizationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AttachedClusterAuthorization)(nil)).Elem()
}

func (i *attachedClusterAuthorizationPtrType) ToAttachedClusterAuthorizationPtrOutput() AttachedClusterAuthorizationPtrOutput {
	return i.ToAttachedClusterAuthorizationPtrOutputWithContext(context.Background())
}

func (i *attachedClusterAuthorizationPtrType) ToAttachedClusterAuthorizationPtrOutputWithContext(ctx context.Context) AttachedClusterAuthorizationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttachedClusterAuthorizationPtrOutput)
}

type AttachedClusterAuthorizationOutput struct{ *pulumi.OutputState }

func (AttachedClusterAuthorizationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AttachedClusterAuthorization)(nil)).Elem()
}

func (o AttachedClusterAuthorizationOutput) ToAttachedClusterAuthorizationOutput() AttachedClusterAuthorizationOutput {
	return o
}

func (o AttachedClusterAuthorizationOutput) ToAttachedClusterAuthorizationOutputWithContext(ctx context.Context) AttachedClusterAuthorizationOutput {
	return o
}

func (o AttachedClusterAuthorizationOutput) ToAttachedClusterAuthorizationPtrOutput() AttachedClusterAuthorizationPtrOutput {
	return o.ToAttachedClusterAuthorizationPtrOutputWithContext(context.Background())
}

func (o AttachedClusterAuthorizationOutput) ToAttachedClusterAuthorizationPtrOutputWithContext(ctx context.Context) AttachedClusterAuthorizationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AttachedClusterAuthorization) *AttachedClusterAuthorization {
		return &v
	}).(AttachedClusterAuthorizationPtrOutput)
}

// Groups that can perform operations as a cluster admin. A managed
// ClusterRoleBinding will be created to grant the `cluster-admin` ClusterRole
// to the groups. Up to ten admin groups can be provided.
// For more info on RBAC, see
// https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles
func (o AttachedClusterAuthorizationOutput) AdminGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AttachedClusterAuthorization) []string { return v.AdminGroups }).(pulumi.StringArrayOutput)
}

// Users that can perform operations as a cluster admin. A managed
// ClusterRoleBinding will be created to grant the `cluster-admin` ClusterRole
// to the users. Up to ten admin users can be provided.
// For more info on RBAC, see
// https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles
func (o AttachedClusterAuthorizationOutput) AdminUsers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AttachedClusterAuthorization) []string { return v.AdminUsers }).(pulumi.StringArrayOutput)
}

type AttachedClusterAuthorizationPtrOutput struct{ *pulumi.OutputState }

func (AttachedClusterAuthorizationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AttachedClusterAuthorization)(nil)).Elem()
}

func (o AttachedClusterAuthorizationPtrOutput) ToAttachedClusterAuthorizationPtrOutput() AttachedClusterAuthorizationPtrOutput {
	return o
}

func (o AttachedClusterAuthorizationPtrOutput) ToAttachedClusterAuthorizationPtrOutputWithContext(ctx context.Context) AttachedClusterAuthorizationPtrOutput {
	return o
}

func (o AttachedClusterAuthorizationPtrOutput) Elem() AttachedClusterAuthorizationOutput {
	return o.ApplyT(func(v *AttachedClusterAuthorization) AttachedClusterAuthorization {
		if v != nil {
			return *v
		}
		var ret AttachedClusterAuthorization
		return ret
	}).(AttachedClusterAuthorizationOutput)
}

// Groups that can perform operations as a cluster admin. A managed
// ClusterRoleBinding will be created to grant the `cluster-admin` ClusterRole
// to the groups. Up to ten admin groups can be provided.
// For more info on RBAC, see
// https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles
func (o AttachedClusterAuthorizationPtrOutput) AdminGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AttachedClusterAuthorization) []string {
		if v == nil {
			return nil
		}
		return v.AdminGroups
	}).(pulumi.StringArrayOutput)
}

// Users that can perform operations as a cluster admin. A managed
// ClusterRoleBinding will be created to grant the `cluster-admin` ClusterRole
// to the users. Up to ten admin users can be provided.
// For more info on RBAC, see
// https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles
func (o AttachedClusterAuthorizationPtrOutput) AdminUsers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AttachedClusterAuthorization) []string {
		if v == nil {
			return nil
		}
		return v.AdminUsers
	}).(pulumi.StringArrayOutput)
}

type AttachedClusterBinaryAuthorization struct {
	// Configure Binary Authorization evaluation mode.
	// Possible values are: `DISABLED`, `PROJECT_SINGLETON_POLICY_ENFORCE`.
	EvaluationMode *string `pulumi:"evaluationMode"`
}

// AttachedClusterBinaryAuthorizationInput is an input type that accepts AttachedClusterBinaryAuthorizationArgs and AttachedClusterBinaryAuthorizationOutput values.
// You can construct a concrete instance of `AttachedClusterBinaryAuthorizationInput` via:
//
//	AttachedClusterBinaryAuthorizationArgs{...}
type AttachedClusterBinaryAuthorizationInput interface {
	pulumi.Input

	ToAttachedClusterBinaryAuthorizationOutput() AttachedClusterBinaryAuthorizationOutput
	ToAttachedClusterBinaryAuthorizationOutputWithContext(context.Context) AttachedClusterBinaryAuthorizationOutput
}

type AttachedClusterBinaryAuthorizationArgs struct {
	// Configure Binary Authorization evaluation mode.
	// Possible values are: `DISABLED`, `PROJECT_SINGLETON_POLICY_ENFORCE`.
	EvaluationMode pulumi.StringPtrInput `pulumi:"evaluationMode"`
}

func (AttachedClusterBinaryAuthorizationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AttachedClusterBinaryAuthorization)(nil)).Elem()
}

func (i AttachedClusterBinaryAuthorizationArgs) ToAttachedClusterBinaryAuthorizationOutput() AttachedClusterBinaryAuthorizationOutput {
	return i.ToAttachedClusterBinaryAuthorizationOutputWithContext(context.Background())
}

func (i AttachedClusterBinaryAuthorizationArgs) ToAttachedClusterBinaryAuthorizationOutputWithContext(ctx context.Context) AttachedClusterBinaryAuthorizationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttachedClusterBinaryAuthorizationOutput)
}

func (i AttachedClusterBinaryAuthorizationArgs) ToAttachedClusterBinaryAuthorizationPtrOutput() AttachedClusterBinaryAuthorizationPtrOutput {
	return i.ToAttachedClusterBinaryAuthorizationPtrOutputWithContext(context.Background())
}

func (i AttachedClusterBinaryAuthorizationArgs) ToAttachedClusterBinaryAuthorizationPtrOutputWithContext(ctx context.Context) AttachedClusterBinaryAuthorizationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttachedClusterBinaryAuthorizationOutput).ToAttachedClusterBinaryAuthorizationPtrOutputWithContext(ctx)
}

// AttachedClusterBinaryAuthorizationPtrInput is an input type that accepts AttachedClusterBinaryAuthorizationArgs, AttachedClusterBinaryAuthorizationPtr and AttachedClusterBinaryAuthorizationPtrOutput values.
// You can construct a concrete instance of `AttachedClusterBinaryAuthorizationPtrInput` via:
//
//	        AttachedClusterBinaryAuthorizationArgs{...}
//
//	or:
//
//	        nil
type AttachedClusterBinaryAuthorizationPtrInput interface {
	pulumi.Input

	ToAttachedClusterBinaryAuthorizationPtrOutput() AttachedClusterBinaryAuthorizationPtrOutput
	ToAttachedClusterBinaryAuthorizationPtrOutputWithContext(context.Context) AttachedClusterBinaryAuthorizationPtrOutput
}

type attachedClusterBinaryAuthorizationPtrType AttachedClusterBinaryAuthorizationArgs

func AttachedClusterBinaryAuthorizationPtr(v *AttachedClusterBinaryAuthorizationArgs) AttachedClusterBinaryAuthorizationPtrInput {
	return (*attachedClusterBinaryAuthorizationPtrType)(v)
}

func (*attachedClusterBinaryAuthorizationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AttachedClusterBinaryAuthorization)(nil)).Elem()
}

func (i *attachedClusterBinaryAuthorizationPtrType) ToAttachedClusterBinaryAuthorizationPtrOutput() AttachedClusterBinaryAuthorizationPtrOutput {
	return i.ToAttachedClusterBinaryAuthorizationPtrOutputWithContext(context.Background())
}

func (i *attachedClusterBinaryAuthorizationPtrType) ToAttachedClusterBinaryAuthorizationPtrOutputWithContext(ctx context.Context) AttachedClusterBinaryAuthorizationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttachedClusterBinaryAuthorizationPtrOutput)
}

type AttachedClusterBinaryAuthorizationOutput struct{ *pulumi.OutputState }

func (AttachedClusterBinaryAuthorizationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AttachedClusterBinaryAuthorization)(nil)).Elem()
}

func (o AttachedClusterBinaryAuthorizationOutput) ToAttachedClusterBinaryAuthorizationOutput() AttachedClusterBinaryAuthorizationOutput {
	return o
}

func (o AttachedClusterBinaryAuthorizationOutput) ToAttachedClusterBinaryAuthorizationOutputWithContext(ctx context.Context) AttachedClusterBinaryAuthorizationOutput {
	return o
}

func (o AttachedClusterBinaryAuthorizationOutput) ToAttachedClusterBinaryAuthorizationPtrOutput() AttachedClusterBinaryAuthorizationPtrOutput {
	return o.ToAttachedClusterBinaryAuthorizationPtrOutputWithContext(context.Background())
}

func (o AttachedClusterBinaryAuthorizationOutput) ToAttachedClusterBinaryAuthorizationPtrOutputWithContext(ctx context.Context) AttachedClusterBinaryAuthorizationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AttachedClusterBinaryAuthorization) *AttachedClusterBinaryAuthorization {
		return &v
	}).(AttachedClusterBinaryAuthorizationPtrOutput)
}

// Configure Binary Authorization evaluation mode.
// Possible values are: `DISABLED`, `PROJECT_SINGLETON_POLICY_ENFORCE`.
func (o AttachedClusterBinaryAuthorizationOutput) EvaluationMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AttachedClusterBinaryAuthorization) *string { return v.EvaluationMode }).(pulumi.StringPtrOutput)
}

type AttachedClusterBinaryAuthorizationPtrOutput struct{ *pulumi.OutputState }

func (AttachedClusterBinaryAuthorizationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AttachedClusterBinaryAuthorization)(nil)).Elem()
}

func (o AttachedClusterBinaryAuthorizationPtrOutput) ToAttachedClusterBinaryAuthorizationPtrOutput() AttachedClusterBinaryAuthorizationPtrOutput {
	return o
}

func (o AttachedClusterBinaryAuthorizationPtrOutput) ToAttachedClusterBinaryAuthorizationPtrOutputWithContext(ctx context.Context) AttachedClusterBinaryAuthorizationPtrOutput {
	return o
}

func (o AttachedClusterBinaryAuthorizationPtrOutput) Elem() AttachedClusterBinaryAuthorizationOutput {
	return o.ApplyT(func(v *AttachedClusterBinaryAuthorization) AttachedClusterBinaryAuthorization {
		if v != nil {
			return *v
		}
		var ret AttachedClusterBinaryAuthorization
		return ret
	}).(AttachedClusterBinaryAuthorizationOutput)
}

// Configure Binary Authorization evaluation mode.
// Possible values are: `DISABLED`, `PROJECT_SINGLETON_POLICY_ENFORCE`.
func (o AttachedClusterBinaryAuthorizationPtrOutput) EvaluationMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AttachedClusterBinaryAuthorization) *string {
		if v == nil {
			return nil
		}
		return v.EvaluationMode
	}).(pulumi.StringPtrOutput)
}

type AttachedClusterError struct {
	// Human-friendly description of the error.
	Message *string `pulumi:"message"`
}

// AttachedClusterErrorInput is an input type that accepts AttachedClusterErrorArgs and AttachedClusterErrorOutput values.
// You can construct a concrete instance of `AttachedClusterErrorInput` via:
//
//	AttachedClusterErrorArgs{...}
type AttachedClusterErrorInput interface {
	pulumi.Input

	ToAttachedClusterErrorOutput() AttachedClusterErrorOutput
	ToAttachedClusterErrorOutputWithContext(context.Context) AttachedClusterErrorOutput
}

type AttachedClusterErrorArgs struct {
	// Human-friendly description of the error.
	Message pulumi.StringPtrInput `pulumi:"message"`
}

func (AttachedClusterErrorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AttachedClusterError)(nil)).Elem()
}

func (i AttachedClusterErrorArgs) ToAttachedClusterErrorOutput() AttachedClusterErrorOutput {
	return i.ToAttachedClusterErrorOutputWithContext(context.Background())
}

func (i AttachedClusterErrorArgs) ToAttachedClusterErrorOutputWithContext(ctx context.Context) AttachedClusterErrorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttachedClusterErrorOutput)
}

// AttachedClusterErrorArrayInput is an input type that accepts AttachedClusterErrorArray and AttachedClusterErrorArrayOutput values.
// You can construct a concrete instance of `AttachedClusterErrorArrayInput` via:
//
//	AttachedClusterErrorArray{ AttachedClusterErrorArgs{...} }
type AttachedClusterErrorArrayInput interface {
	pulumi.Input

	ToAttachedClusterErrorArrayOutput() AttachedClusterErrorArrayOutput
	ToAttachedClusterErrorArrayOutputWithContext(context.Context) AttachedClusterErrorArrayOutput
}

type AttachedClusterErrorArray []AttachedClusterErrorInput

func (AttachedClusterErrorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AttachedClusterError)(nil)).Elem()
}

func (i AttachedClusterErrorArray) ToAttachedClusterErrorArrayOutput() AttachedClusterErrorArrayOutput {
	return i.ToAttachedClusterErrorArrayOutputWithContext(context.Background())
}

func (i AttachedClusterErrorArray) ToAttachedClusterErrorArrayOutputWithContext(ctx context.Context) AttachedClusterErrorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttachedClusterErrorArrayOutput)
}

type AttachedClusterErrorOutput struct{ *pulumi.OutputState }

func (AttachedClusterErrorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AttachedClusterError)(nil)).Elem()
}

func (o AttachedClusterErrorOutput) ToAttachedClusterErrorOutput() AttachedClusterErrorOutput {
	return o
}

func (o AttachedClusterErrorOutput) ToAttachedClusterErrorOutputWithContext(ctx context.Context) AttachedClusterErrorOutput {
	return o
}

// Human-friendly description of the error.
func (o AttachedClusterErrorOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AttachedClusterError) *string { return v.Message }).(pulumi.StringPtrOutput)
}

type AttachedClusterErrorArrayOutput struct{ *pulumi.OutputState }

func (AttachedClusterErrorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AttachedClusterError)(nil)).Elem()
}

func (o AttachedClusterErrorArrayOutput) ToAttachedClusterErrorArrayOutput() AttachedClusterErrorArrayOutput {
	return o
}

func (o AttachedClusterErrorArrayOutput) ToAttachedClusterErrorArrayOutputWithContext(ctx context.Context) AttachedClusterErrorArrayOutput {
	return o
}

func (o AttachedClusterErrorArrayOutput) Index(i pulumi.IntInput) AttachedClusterErrorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AttachedClusterError {
		return vs[0].([]AttachedClusterError)[vs[1].(int)]
	}).(AttachedClusterErrorOutput)
}

type AttachedClusterFleet struct {
	// (Output)
	// The name of the managed Hub Membership resource associated to this
	// cluster. Membership names are formatted as
	// projects/<project-number>/locations/global/membership/<cluster-id>.
	Membership *string `pulumi:"membership"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project string `pulumi:"project"`
}

// AttachedClusterFleetInput is an input type that accepts AttachedClusterFleetArgs and AttachedClusterFleetOutput values.
// You can construct a concrete instance of `AttachedClusterFleetInput` via:
//
//	AttachedClusterFleetArgs{...}
type AttachedClusterFleetInput interface {
	pulumi.Input

	ToAttachedClusterFleetOutput() AttachedClusterFleetOutput
	ToAttachedClusterFleetOutputWithContext(context.Context) AttachedClusterFleetOutput
}

type AttachedClusterFleetArgs struct {
	// (Output)
	// The name of the managed Hub Membership resource associated to this
	// cluster. Membership names are formatted as
	// projects/<project-number>/locations/global/membership/<cluster-id>.
	Membership pulumi.StringPtrInput `pulumi:"membership"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringInput `pulumi:"project"`
}

func (AttachedClusterFleetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AttachedClusterFleet)(nil)).Elem()
}

func (i AttachedClusterFleetArgs) ToAttachedClusterFleetOutput() AttachedClusterFleetOutput {
	return i.ToAttachedClusterFleetOutputWithContext(context.Background())
}

func (i AttachedClusterFleetArgs) ToAttachedClusterFleetOutputWithContext(ctx context.Context) AttachedClusterFleetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttachedClusterFleetOutput)
}

func (i AttachedClusterFleetArgs) ToAttachedClusterFleetPtrOutput() AttachedClusterFleetPtrOutput {
	return i.ToAttachedClusterFleetPtrOutputWithContext(context.Background())
}

func (i AttachedClusterFleetArgs) ToAttachedClusterFleetPtrOutputWithContext(ctx context.Context) AttachedClusterFleetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttachedClusterFleetOutput).ToAttachedClusterFleetPtrOutputWithContext(ctx)
}

// AttachedClusterFleetPtrInput is an input type that accepts AttachedClusterFleetArgs, AttachedClusterFleetPtr and AttachedClusterFleetPtrOutput values.
// You can construct a concrete instance of `AttachedClusterFleetPtrInput` via:
//
//	        AttachedClusterFleetArgs{...}
//
//	or:
//
//	        nil
type AttachedClusterFleetPtrInput interface {
	pulumi.Input

	ToAttachedClusterFleetPtrOutput() AttachedClusterFleetPtrOutput
	ToAttachedClusterFleetPtrOutputWithContext(context.Context) AttachedClusterFleetPtrOutput
}

type attachedClusterFleetPtrType AttachedClusterFleetArgs

func AttachedClusterFleetPtr(v *AttachedClusterFleetArgs) AttachedClusterFleetPtrInput {
	return (*attachedClusterFleetPtrType)(v)
}

func (*attachedClusterFleetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AttachedClusterFleet)(nil)).Elem()
}

func (i *attachedClusterFleetPtrType) ToAttachedClusterFleetPtrOutput() AttachedClusterFleetPtrOutput {
	return i.ToAttachedClusterFleetPtrOutputWithContext(context.Background())
}

func (i *attachedClusterFleetPtrType) ToAttachedClusterFleetPtrOutputWithContext(ctx context.Context) AttachedClusterFleetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttachedClusterFleetPtrOutput)
}

type AttachedClusterFleetOutput struct{ *pulumi.OutputState }

func (AttachedClusterFleetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AttachedClusterFleet)(nil)).Elem()
}

func (o AttachedClusterFleetOutput) ToAttachedClusterFleetOutput() AttachedClusterFleetOutput {
	return o
}

func (o AttachedClusterFleetOutput) ToAttachedClusterFleetOutputWithContext(ctx context.Context) AttachedClusterFleetOutput {
	return o
}

func (o AttachedClusterFleetOutput) ToAttachedClusterFleetPtrOutput() AttachedClusterFleetPtrOutput {
	return o.ToAttachedClusterFleetPtrOutputWithContext(context.Background())
}

func (o AttachedClusterFleetOutput) ToAttachedClusterFleetPtrOutputWithContext(ctx context.Context) AttachedClusterFleetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AttachedClusterFleet) *AttachedClusterFleet {
		return &v
	}).(AttachedClusterFleetPtrOutput)
}

// (Output)
// The name of the managed Hub Membership resource associated to this
// cluster. Membership names are formatted as
// projects/<project-number>/locations/global/membership/<cluster-id>.
func (o AttachedClusterFleetOutput) Membership() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AttachedClusterFleet) *string { return v.Membership }).(pulumi.StringPtrOutput)
}

// The ID of the project in which the resource belongs.
// If it is not provided, the provider project is used.
func (o AttachedClusterFleetOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v AttachedClusterFleet) string { return v.Project }).(pulumi.StringOutput)
}

type AttachedClusterFleetPtrOutput struct{ *pulumi.OutputState }

func (AttachedClusterFleetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AttachedClusterFleet)(nil)).Elem()
}

func (o AttachedClusterFleetPtrOutput) ToAttachedClusterFleetPtrOutput() AttachedClusterFleetPtrOutput {
	return o
}

func (o AttachedClusterFleetPtrOutput) ToAttachedClusterFleetPtrOutputWithContext(ctx context.Context) AttachedClusterFleetPtrOutput {
	return o
}

func (o AttachedClusterFleetPtrOutput) Elem() AttachedClusterFleetOutput {
	return o.ApplyT(func(v *AttachedClusterFleet) AttachedClusterFleet {
		if v != nil {
			return *v
		}
		var ret AttachedClusterFleet
		return ret
	}).(AttachedClusterFleetOutput)
}

// (Output)
// The name of the managed Hub Membership resource associated to this
// cluster. Membership names are formatted as
// projects/<project-number>/locations/global/membership/<cluster-id>.
func (o AttachedClusterFleetPtrOutput) Membership() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AttachedClusterFleet) *string {
		if v == nil {
			return nil
		}
		return v.Membership
	}).(pulumi.StringPtrOutput)
}

// The ID of the project in which the resource belongs.
// If it is not provided, the provider project is used.
func (o AttachedClusterFleetPtrOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AttachedClusterFleet) *string {
		if v == nil {
			return nil
		}
		return &v.Project
	}).(pulumi.StringPtrOutput)
}

type AttachedClusterLoggingConfig struct {
	// The configuration of the logging components
	// Structure is documented below.
	ComponentConfig *AttachedClusterLoggingConfigComponentConfig `pulumi:"componentConfig"`
}

// AttachedClusterLoggingConfigInput is an input type that accepts AttachedClusterLoggingConfigArgs and AttachedClusterLoggingConfigOutput values.
// You can construct a concrete instance of `AttachedClusterLoggingConfigInput` via:
//
//	AttachedClusterLoggingConfigArgs{...}
type AttachedClusterLoggingConfigInput interface {
	pulumi.Input

	ToAttachedClusterLoggingConfigOutput() AttachedClusterLoggingConfigOutput
	ToAttachedClusterLoggingConfigOutputWithContext(context.Context) AttachedClusterLoggingConfigOutput
}

type AttachedClusterLoggingConfigArgs struct {
	// The configuration of the logging components
	// Structure is documented below.
	ComponentConfig AttachedClusterLoggingConfigComponentConfigPtrInput `pulumi:"componentConfig"`
}

func (AttachedClusterLoggingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AttachedClusterLoggingConfig)(nil)).Elem()
}

func (i AttachedClusterLoggingConfigArgs) ToAttachedClusterLoggingConfigOutput() AttachedClusterLoggingConfigOutput {
	return i.ToAttachedClusterLoggingConfigOutputWithContext(context.Background())
}

func (i AttachedClusterLoggingConfigArgs) ToAttachedClusterLoggingConfigOutputWithContext(ctx context.Context) AttachedClusterLoggingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttachedClusterLoggingConfigOutput)
}

func (i AttachedClusterLoggingConfigArgs) ToAttachedClusterLoggingConfigPtrOutput() AttachedClusterLoggingConfigPtrOutput {
	return i.ToAttachedClusterLoggingConfigPtrOutputWithContext(context.Background())
}

func (i AttachedClusterLoggingConfigArgs) ToAttachedClusterLoggingConfigPtrOutputWithContext(ctx context.Context) AttachedClusterLoggingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttachedClusterLoggingConfigOutput).ToAttachedClusterLoggingConfigPtrOutputWithContext(ctx)
}

// AttachedClusterLoggingConfigPtrInput is an input type that accepts AttachedClusterLoggingConfigArgs, AttachedClusterLoggingConfigPtr and AttachedClusterLoggingConfigPtrOutput values.
// You can construct a concrete instance of `AttachedClusterLoggingConfigPtrInput` via:
//
//	        AttachedClusterLoggingConfigArgs{...}
//
//	or:
//
//	        nil
type AttachedClusterLoggingConfigPtrInput interface {
	pulumi.Input

	ToAttachedClusterLoggingConfigPtrOutput() AttachedClusterLoggingConfigPtrOutput
	ToAttachedClusterLoggingConfigPtrOutputWithContext(context.Context) AttachedClusterLoggingConfigPtrOutput
}

type attachedClusterLoggingConfigPtrType AttachedClusterLoggingConfigArgs

func AttachedClusterLoggingConfigPtr(v *AttachedClusterLoggingConfigArgs) AttachedClusterLoggingConfigPtrInput {
	return (*attachedClusterLoggingConfigPtrType)(v)
}

func (*attachedClusterLoggingConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AttachedClusterLoggingConfig)(nil)).Elem()
}

func (i *attachedClusterLoggingConfigPtrType) ToAttachedClusterLoggingConfigPtrOutput() AttachedClusterLoggingConfigPtrOutput {
	return i.ToAttachedClusterLoggingConfigPtrOutputWithContext(context.Background())
}

func (i *attachedClusterLoggingConfigPtrType) ToAttachedClusterLoggingConfigPtrOutputWithContext(ctx context.Context) AttachedClusterLoggingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttachedClusterLoggingConfigPtrOutput)
}

type AttachedClusterLoggingConfigOutput struct{ *pulumi.OutputState }

func (AttachedClusterLoggingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AttachedClusterLoggingConfig)(nil)).Elem()
}

func (o AttachedClusterLoggingConfigOutput) ToAttachedClusterLoggingConfigOutput() AttachedClusterLoggingConfigOutput {
	return o
}

func (o AttachedClusterLoggingConfigOutput) ToAttachedClusterLoggingConfigOutputWithContext(ctx context.Context) AttachedClusterLoggingConfigOutput {
	return o
}

func (o AttachedClusterLoggingConfigOutput) ToAttachedClusterLoggingConfigPtrOutput() AttachedClusterLoggingConfigPtrOutput {
	return o.ToAttachedClusterLoggingConfigPtrOutputWithContext(context.Background())
}

func (o AttachedClusterLoggingConfigOutput) ToAttachedClusterLoggingConfigPtrOutputWithContext(ctx context.Context) AttachedClusterLoggingConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AttachedClusterLoggingConfig) *AttachedClusterLoggingConfig {
		return &v
	}).(AttachedClusterLoggingConfigPtrOutput)
}

// The configuration of the logging components
// Structure is documented below.
func (o AttachedClusterLoggingConfigOutput) ComponentConfig() AttachedClusterLoggingConfigComponentConfigPtrOutput {
	return o.ApplyT(func(v AttachedClusterLoggingConfig) *AttachedClusterLoggingConfigComponentConfig {
		return v.ComponentConfig
	}).(AttachedClusterLoggingConfigComponentConfigPtrOutput)
}

type AttachedClusterLoggingConfigPtrOutput struct{ *pulumi.OutputState }

func (AttachedClusterLoggingConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AttachedClusterLoggingConfig)(nil)).Elem()
}

func (o AttachedClusterLoggingConfigPtrOutput) ToAttachedClusterLoggingConfigPtrOutput() AttachedClusterLoggingConfigPtrOutput {
	return o
}

func (o AttachedClusterLoggingConfigPtrOutput) ToAttachedClusterLoggingConfigPtrOutputWithContext(ctx context.Context) AttachedClusterLoggingConfigPtrOutput {
	return o
}

func (o AttachedClusterLoggingConfigPtrOutput) Elem() AttachedClusterLoggingConfigOutput {
	return o.ApplyT(func(v *AttachedClusterLoggingConfig) AttachedClusterLoggingConfig {
		if v != nil {
			return *v
		}
		var ret AttachedClusterLoggingConfig
		return ret
	}).(AttachedClusterLoggingConfigOutput)
}

// The configuration of the logging components
// Structure is documented below.
func (o AttachedClusterLoggingConfigPtrOutput) ComponentConfig() AttachedClusterLoggingConfigComponentConfigPtrOutput {
	return o.ApplyT(func(v *AttachedClusterLoggingConfig) *AttachedClusterLoggingConfigComponentConfig {
		if v == nil {
			return nil
		}
		return v.ComponentConfig
	}).(AttachedClusterLoggingConfigComponentConfigPtrOutput)
}

type AttachedClusterLoggingConfigComponentConfig struct {
	// The components to be enabled.
	// Each value may be one of: `SYSTEM_COMPONENTS`, `WORKLOADS`.
	EnableComponents []string `pulumi:"enableComponents"`
}

// AttachedClusterLoggingConfigComponentConfigInput is an input type that accepts AttachedClusterLoggingConfigComponentConfigArgs and AttachedClusterLoggingConfigComponentConfigOutput values.
// You can construct a concrete instance of `AttachedClusterLoggingConfigComponentConfigInput` via:
//
//	AttachedClusterLoggingConfigComponentConfigArgs{...}
type AttachedClusterLoggingConfigComponentConfigInput interface {
	pulumi.Input

	ToAttachedClusterLoggingConfigComponentConfigOutput() AttachedClusterLoggingConfigComponentConfigOutput
	ToAttachedClusterLoggingConfigComponentConfigOutputWithContext(context.Context) AttachedClusterLoggingConfigComponentConfigOutput
}

type AttachedClusterLoggingConfigComponentConfigArgs struct {
	// The components to be enabled.
	// Each value may be one of: `SYSTEM_COMPONENTS`, `WORKLOADS`.
	EnableComponents pulumi.StringArrayInput `pulumi:"enableComponents"`
}

func (AttachedClusterLoggingConfigComponentConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AttachedClusterLoggingConfigComponentConfig)(nil)).Elem()
}

func (i AttachedClusterLoggingConfigComponentConfigArgs) ToAttachedClusterLoggingConfigComponentConfigOutput() AttachedClusterLoggingConfigComponentConfigOutput {
	return i.ToAttachedClusterLoggingConfigComponentConfigOutputWithContext(context.Background())
}

func (i AttachedClusterLoggingConfigComponentConfigArgs) ToAttachedClusterLoggingConfigComponentConfigOutputWithContext(ctx context.Context) AttachedClusterLoggingConfigComponentConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttachedClusterLoggingConfigComponentConfigOutput)
}

func (i AttachedClusterLoggingConfigComponentConfigArgs) ToAttachedClusterLoggingConfigComponentConfigPtrOutput() AttachedClusterLoggingConfigComponentConfigPtrOutput {
	return i.ToAttachedClusterLoggingConfigComponentConfigPtrOutputWithContext(context.Background())
}

func (i AttachedClusterLoggingConfigComponentConfigArgs) ToAttachedClusterLoggingConfigComponentConfigPtrOutputWithContext(ctx context.Context) AttachedClusterLoggingConfigComponentConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttachedClusterLoggingConfigComponentConfigOutput).ToAttachedClusterLoggingConfigComponentConfigPtrOutputWithContext(ctx)
}

// AttachedClusterLoggingConfigComponentConfigPtrInput is an input type that accepts AttachedClusterLoggingConfigComponentConfigArgs, AttachedClusterLoggingConfigComponentConfigPtr and AttachedClusterLoggingConfigComponentConfigPtrOutput values.
// You can construct a concrete instance of `AttachedClusterLoggingConfigComponentConfigPtrInput` via:
//
//	        AttachedClusterLoggingConfigComponentConfigArgs{...}
//
//	or:
//
//	        nil
type AttachedClusterLoggingConfigComponentConfigPtrInput interface {
	pulumi.Input

	ToAttachedClusterLoggingConfigComponentConfigPtrOutput() AttachedClusterLoggingConfigComponentConfigPtrOutput
	ToAttachedClusterLoggingConfigComponentConfigPtrOutputWithContext(context.Context) AttachedClusterLoggingConfigComponentConfigPtrOutput
}

type attachedClusterLoggingConfigComponentConfigPtrType AttachedClusterLoggingConfigComponentConfigArgs

func AttachedClusterLoggingConfigComponentConfigPtr(v *AttachedClusterLoggingConfigComponentConfigArgs) AttachedClusterLoggingConfigComponentConfigPtrInput {
	return (*attachedClusterLoggingConfigComponentConfigPtrType)(v)
}

func (*attachedClusterLoggingConfigComponentConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AttachedClusterLoggingConfigComponentConfig)(nil)).Elem()
}

func (i *attachedClusterLoggingConfigComponentConfigPtrType) ToAttachedClusterLoggingConfigComponentConfigPtrOutput() AttachedClusterLoggingConfigComponentConfigPtrOutput {
	return i.ToAttachedClusterLoggingConfigComponentConfigPtrOutputWithContext(context.Background())
}

func (i *attachedClusterLoggingConfigComponentConfigPtrType) ToAttachedClusterLoggingConfigComponentConfigPtrOutputWithContext(ctx context.Context) AttachedClusterLoggingConfigComponentConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttachedClusterLoggingConfigComponentConfigPtrOutput)
}

type AttachedClusterLoggingConfigComponentConfigOutput struct{ *pulumi.OutputState }

func (AttachedClusterLoggingConfigComponentConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AttachedClusterLoggingConfigComponentConfig)(nil)).Elem()
}

func (o AttachedClusterLoggingConfigComponentConfigOutput) ToAttachedClusterLoggingConfigComponentConfigOutput() AttachedClusterLoggingConfigComponentConfigOutput {
	return o
}

func (o AttachedClusterLoggingConfigComponentConfigOutput) ToAttachedClusterLoggingConfigComponentConfigOutputWithContext(ctx context.Context) AttachedClusterLoggingConfigComponentConfigOutput {
	return o
}

func (o AttachedClusterLoggingConfigComponentConfigOutput) ToAttachedClusterLoggingConfigComponentConfigPtrOutput() AttachedClusterLoggingConfigComponentConfigPtrOutput {
	return o.ToAttachedClusterLoggingConfigComponentConfigPtrOutputWithContext(context.Background())
}

func (o AttachedClusterLoggingConfigComponentConfigOutput) ToAttachedClusterLoggingConfigComponentConfigPtrOutputWithContext(ctx context.Context) AttachedClusterLoggingConfigComponentConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AttachedClusterLoggingConfigComponentConfig) *AttachedClusterLoggingConfigComponentConfig {
		return &v
	}).(AttachedClusterLoggingConfigComponentConfigPtrOutput)
}

// The components to be enabled.
// Each value may be one of: `SYSTEM_COMPONENTS`, `WORKLOADS`.
func (o AttachedClusterLoggingConfigComponentConfigOutput) EnableComponents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AttachedClusterLoggingConfigComponentConfig) []string { return v.EnableComponents }).(pulumi.StringArrayOutput)
}

type AttachedClusterLoggingConfigComponentConfigPtrOutput struct{ *pulumi.OutputState }

func (AttachedClusterLoggingConfigComponentConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AttachedClusterLoggingConfigComponentConfig)(nil)).Elem()
}

func (o AttachedClusterLoggingConfigComponentConfigPtrOutput) ToAttachedClusterLoggingConfigComponentConfigPtrOutput() AttachedClusterLoggingConfigComponentConfigPtrOutput {
	return o
}

func (o AttachedClusterLoggingConfigComponentConfigPtrOutput) ToAttachedClusterLoggingConfigComponentConfigPtrOutputWithContext(ctx context.Context) AttachedClusterLoggingConfigComponentConfigPtrOutput {
	return o
}

func (o AttachedClusterLoggingConfigComponentConfigPtrOutput) Elem() AttachedClusterLoggingConfigComponentConfigOutput {
	return o.ApplyT(func(v *AttachedClusterLoggingConfigComponentConfig) AttachedClusterLoggingConfigComponentConfig {
		if v != nil {
			return *v
		}
		var ret AttachedClusterLoggingConfigComponentConfig
		return ret
	}).(AttachedClusterLoggingConfigComponentConfigOutput)
}

// The components to be enabled.
// Each value may be one of: `SYSTEM_COMPONENTS`, `WORKLOADS`.
func (o AttachedClusterLoggingConfigComponentConfigPtrOutput) EnableComponents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AttachedClusterLoggingConfigComponentConfig) []string {
		if v == nil {
			return nil
		}
		return v.EnableComponents
	}).(pulumi.StringArrayOutput)
}

type AttachedClusterMonitoringConfig struct {
	// Enable Google Cloud Managed Service for Prometheus in the cluster.
	// Structure is documented below.
	ManagedPrometheusConfig *AttachedClusterMonitoringConfigManagedPrometheusConfig `pulumi:"managedPrometheusConfig"`
}

// AttachedClusterMonitoringConfigInput is an input type that accepts AttachedClusterMonitoringConfigArgs and AttachedClusterMonitoringConfigOutput values.
// You can construct a concrete instance of `AttachedClusterMonitoringConfigInput` via:
//
//	AttachedClusterMonitoringConfigArgs{...}
type AttachedClusterMonitoringConfigInput interface {
	pulumi.Input

	ToAttachedClusterMonitoringConfigOutput() AttachedClusterMonitoringConfigOutput
	ToAttachedClusterMonitoringConfigOutputWithContext(context.Context) AttachedClusterMonitoringConfigOutput
}

type AttachedClusterMonitoringConfigArgs struct {
	// Enable Google Cloud Managed Service for Prometheus in the cluster.
	// Structure is documented below.
	ManagedPrometheusConfig AttachedClusterMonitoringConfigManagedPrometheusConfigPtrInput `pulumi:"managedPrometheusConfig"`
}

func (AttachedClusterMonitoringConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AttachedClusterMonitoringConfig)(nil)).Elem()
}

func (i AttachedClusterMonitoringConfigArgs) ToAttachedClusterMonitoringConfigOutput() AttachedClusterMonitoringConfigOutput {
	return i.ToAttachedClusterMonitoringConfigOutputWithContext(context.Background())
}

func (i AttachedClusterMonitoringConfigArgs) ToAttachedClusterMonitoringConfigOutputWithContext(ctx context.Context) AttachedClusterMonitoringConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttachedClusterMonitoringConfigOutput)
}

func (i AttachedClusterMonitoringConfigArgs) ToAttachedClusterMonitoringConfigPtrOutput() AttachedClusterMonitoringConfigPtrOutput {
	return i.ToAttachedClusterMonitoringConfigPtrOutputWithContext(context.Background())
}

func (i AttachedClusterMonitoringConfigArgs) ToAttachedClusterMonitoringConfigPtrOutputWithContext(ctx context.Context) AttachedClusterMonitoringConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttachedClusterMonitoringConfigOutput).ToAttachedClusterMonitoringConfigPtrOutputWithContext(ctx)
}

// AttachedClusterMonitoringConfigPtrInput is an input type that accepts AttachedClusterMonitoringConfigArgs, AttachedClusterMonitoringConfigPtr and AttachedClusterMonitoringConfigPtrOutput values.
// You can construct a concrete instance of `AttachedClusterMonitoringConfigPtrInput` via:
//
//	        AttachedClusterMonitoringConfigArgs{...}
//
//	or:
//
//	        nil
type AttachedClusterMonitoringConfigPtrInput interface {
	pulumi.Input

	ToAttachedClusterMonitoringConfigPtrOutput() AttachedClusterMonitoringConfigPtrOutput
	ToAttachedClusterMonitoringConfigPtrOutputWithContext(context.Context) AttachedClusterMonitoringConfigPtrOutput
}

type attachedClusterMonitoringConfigPtrType AttachedClusterMonitoringConfigArgs

func AttachedClusterMonitoringConfigPtr(v *AttachedClusterMonitoringConfigArgs) AttachedClusterMonitoringConfigPtrInput {
	return (*attachedClusterMonitoringConfigPtrType)(v)
}

func (*attachedClusterMonitoringConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AttachedClusterMonitoringConfig)(nil)).Elem()
}

func (i *attachedClusterMonitoringConfigPtrType) ToAttachedClusterMonitoringConfigPtrOutput() AttachedClusterMonitoringConfigPtrOutput {
	return i.ToAttachedClusterMonitoringConfigPtrOutputWithContext(context.Background())
}

func (i *attachedClusterMonitoringConfigPtrType) ToAttachedClusterMonitoringConfigPtrOutputWithContext(ctx context.Context) AttachedClusterMonitoringConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttachedClusterMonitoringConfigPtrOutput)
}

type AttachedClusterMonitoringConfigOutput struct{ *pulumi.OutputState }

func (AttachedClusterMonitoringConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AttachedClusterMonitoringConfig)(nil)).Elem()
}

func (o AttachedClusterMonitoringConfigOutput) ToAttachedClusterMonitoringConfigOutput() AttachedClusterMonitoringConfigOutput {
	return o
}

func (o AttachedClusterMonitoringConfigOutput) ToAttachedClusterMonitoringConfigOutputWithContext(ctx context.Context) AttachedClusterMonitoringConfigOutput {
	return o
}

func (o AttachedClusterMonitoringConfigOutput) ToAttachedClusterMonitoringConfigPtrOutput() AttachedClusterMonitoringConfigPtrOutput {
	return o.ToAttachedClusterMonitoringConfigPtrOutputWithContext(context.Background())
}

func (o AttachedClusterMonitoringConfigOutput) ToAttachedClusterMonitoringConfigPtrOutputWithContext(ctx context.Context) AttachedClusterMonitoringConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AttachedClusterMonitoringConfig) *AttachedClusterMonitoringConfig {
		return &v
	}).(AttachedClusterMonitoringConfigPtrOutput)
}

// Enable Google Cloud Managed Service for Prometheus in the cluster.
// Structure is documented below.
func (o AttachedClusterMonitoringConfigOutput) ManagedPrometheusConfig() AttachedClusterMonitoringConfigManagedPrometheusConfigPtrOutput {
	return o.ApplyT(func(v AttachedClusterMonitoringConfig) *AttachedClusterMonitoringConfigManagedPrometheusConfig {
		return v.ManagedPrometheusConfig
	}).(AttachedClusterMonitoringConfigManagedPrometheusConfigPtrOutput)
}

type AttachedClusterMonitoringConfigPtrOutput struct{ *pulumi.OutputState }

func (AttachedClusterMonitoringConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AttachedClusterMonitoringConfig)(nil)).Elem()
}

func (o AttachedClusterMonitoringConfigPtrOutput) ToAttachedClusterMonitoringConfigPtrOutput() AttachedClusterMonitoringConfigPtrOutput {
	return o
}

func (o AttachedClusterMonitoringConfigPtrOutput) ToAttachedClusterMonitoringConfigPtrOutputWithContext(ctx context.Context) AttachedClusterMonitoringConfigPtrOutput {
	return o
}

func (o AttachedClusterMonitoringConfigPtrOutput) Elem() AttachedClusterMonitoringConfigOutput {
	return o.ApplyT(func(v *AttachedClusterMonitoringConfig) AttachedClusterMonitoringConfig {
		if v != nil {
			return *v
		}
		var ret AttachedClusterMonitoringConfig
		return ret
	}).(AttachedClusterMonitoringConfigOutput)
}

// Enable Google Cloud Managed Service for Prometheus in the cluster.
// Structure is documented below.
func (o AttachedClusterMonitoringConfigPtrOutput) ManagedPrometheusConfig() AttachedClusterMonitoringConfigManagedPrometheusConfigPtrOutput {
	return o.ApplyT(func(v *AttachedClusterMonitoringConfig) *AttachedClusterMonitoringConfigManagedPrometheusConfig {
		if v == nil {
			return nil
		}
		return v.ManagedPrometheusConfig
	}).(AttachedClusterMonitoringConfigManagedPrometheusConfigPtrOutput)
}

type AttachedClusterMonitoringConfigManagedPrometheusConfig struct {
	// Enable Managed Collection.
	Enabled *bool `pulumi:"enabled"`
}

// AttachedClusterMonitoringConfigManagedPrometheusConfigInput is an input type that accepts AttachedClusterMonitoringConfigManagedPrometheusConfigArgs and AttachedClusterMonitoringConfigManagedPrometheusConfigOutput values.
// You can construct a concrete instance of `AttachedClusterMonitoringConfigManagedPrometheusConfigInput` via:
//
//	AttachedClusterMonitoringConfigManagedPrometheusConfigArgs{...}
type AttachedClusterMonitoringConfigManagedPrometheusConfigInput interface {
	pulumi.Input

	ToAttachedClusterMonitoringConfigManagedPrometheusConfigOutput() AttachedClusterMonitoringConfigManagedPrometheusConfigOutput
	ToAttachedClusterMonitoringConfigManagedPrometheusConfigOutputWithContext(context.Context) AttachedClusterMonitoringConfigManagedPrometheusConfigOutput
}

type AttachedClusterMonitoringConfigManagedPrometheusConfigArgs struct {
	// Enable Managed Collection.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (AttachedClusterMonitoringConfigManagedPrometheusConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AttachedClusterMonitoringConfigManagedPrometheusConfig)(nil)).Elem()
}

func (i AttachedClusterMonitoringConfigManagedPrometheusConfigArgs) ToAttachedClusterMonitoringConfigManagedPrometheusConfigOutput() AttachedClusterMonitoringConfigManagedPrometheusConfigOutput {
	return i.ToAttachedClusterMonitoringConfigManagedPrometheusConfigOutputWithContext(context.Background())
}

func (i AttachedClusterMonitoringConfigManagedPrometheusConfigArgs) ToAttachedClusterMonitoringConfigManagedPrometheusConfigOutputWithContext(ctx context.Context) AttachedClusterMonitoringConfigManagedPrometheusConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttachedClusterMonitoringConfigManagedPrometheusConfigOutput)
}

func (i AttachedClusterMonitoringConfigManagedPrometheusConfigArgs) ToAttachedClusterMonitoringConfigManagedPrometheusConfigPtrOutput() AttachedClusterMonitoringConfigManagedPrometheusConfigPtrOutput {
	return i.ToAttachedClusterMonitoringConfigManagedPrometheusConfigPtrOutputWithContext(context.Background())
}

func (i AttachedClusterMonitoringConfigManagedPrometheusConfigArgs) ToAttachedClusterMonitoringConfigManagedPrometheusConfigPtrOutputWithContext(ctx context.Context) AttachedClusterMonitoringConfigManagedPrometheusConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttachedClusterMonitoringConfigManagedPrometheusConfigOutput).ToAttachedClusterMonitoringConfigManagedPrometheusConfigPtrOutputWithContext(ctx)
}

// AttachedClusterMonitoringConfigManagedPrometheusConfigPtrInput is an input type that accepts AttachedClusterMonitoringConfigManagedPrometheusConfigArgs, AttachedClusterMonitoringConfigManagedPrometheusConfigPtr and AttachedClusterMonitoringConfigManagedPrometheusConfigPtrOutput values.
// You can construct a concrete instance of `AttachedClusterMonitoringConfigManagedPrometheusConfigPtrInput` via:
//
//	        AttachedClusterMonitoringConfigManagedPrometheusConfigArgs{...}
//
//	or:
//
//	        nil
type AttachedClusterMonitoringConfigManagedPrometheusConfigPtrInput interface {
	pulumi.Input

	ToAttachedClusterMonitoringConfigManagedPrometheusConfigPtrOutput() AttachedClusterMonitoringConfigManagedPrometheusConfigPtrOutput
	ToAttachedClusterMonitoringConfigManagedPrometheusConfigPtrOutputWithContext(context.Context) AttachedClusterMonitoringConfigManagedPrometheusConfigPtrOutput
}

type attachedClusterMonitoringConfigManagedPrometheusConfigPtrType AttachedClusterMonitoringConfigManagedPrometheusConfigArgs

func AttachedClusterMonitoringConfigManagedPrometheusConfigPtr(v *AttachedClusterMonitoringConfigManagedPrometheusConfigArgs) AttachedClusterMonitoringConfigManagedPrometheusConfigPtrInput {
	return (*attachedClusterMonitoringConfigManagedPrometheusConfigPtrType)(v)
}

func (*attachedClusterMonitoringConfigManagedPrometheusConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AttachedClusterMonitoringConfigManagedPrometheusConfig)(nil)).Elem()
}

func (i *attachedClusterMonitoringConfigManagedPrometheusConfigPtrType) ToAttachedClusterMonitoringConfigManagedPrometheusConfigPtrOutput() AttachedClusterMonitoringConfigManagedPrometheusConfigPtrOutput {
	return i.ToAttachedClusterMonitoringConfigManagedPrometheusConfigPtrOutputWithContext(context.Background())
}

func (i *attachedClusterMonitoringConfigManagedPrometheusConfigPtrType) ToAttachedClusterMonitoringConfigManagedPrometheusConfigPtrOutputWithContext(ctx context.Context) AttachedClusterMonitoringConfigManagedPrometheusConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttachedClusterMonitoringConfigManagedPrometheusConfigPtrOutput)
}

type AttachedClusterMonitoringConfigManagedPrometheusConfigOutput struct{ *pulumi.OutputState }

func (AttachedClusterMonitoringConfigManagedPrometheusConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AttachedClusterMonitoringConfigManagedPrometheusConfig)(nil)).Elem()
}

func (o AttachedClusterMonitoringConfigManagedPrometheusConfigOutput) ToAttachedClusterMonitoringConfigManagedPrometheusConfigOutput() AttachedClusterMonitoringConfigManagedPrometheusConfigOutput {
	return o
}

func (o AttachedClusterMonitoringConfigManagedPrometheusConfigOutput) ToAttachedClusterMonitoringConfigManagedPrometheusConfigOutputWithContext(ctx context.Context) AttachedClusterMonitoringConfigManagedPrometheusConfigOutput {
	return o
}

func (o AttachedClusterMonitoringConfigManagedPrometheusConfigOutput) ToAttachedClusterMonitoringConfigManagedPrometheusConfigPtrOutput() AttachedClusterMonitoringConfigManagedPrometheusConfigPtrOutput {
	return o.ToAttachedClusterMonitoringConfigManagedPrometheusConfigPtrOutputWithContext(context.Background())
}

func (o AttachedClusterMonitoringConfigManagedPrometheusConfigOutput) ToAttachedClusterMonitoringConfigManagedPrometheusConfigPtrOutputWithContext(ctx context.Context) AttachedClusterMonitoringConfigManagedPrometheusConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AttachedClusterMonitoringConfigManagedPrometheusConfig) *AttachedClusterMonitoringConfigManagedPrometheusConfig {
		return &v
	}).(AttachedClusterMonitoringConfigManagedPrometheusConfigPtrOutput)
}

// Enable Managed Collection.
func (o AttachedClusterMonitoringConfigManagedPrometheusConfigOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AttachedClusterMonitoringConfigManagedPrometheusConfig) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type AttachedClusterMonitoringConfigManagedPrometheusConfigPtrOutput struct{ *pulumi.OutputState }

func (AttachedClusterMonitoringConfigManagedPrometheusConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AttachedClusterMonitoringConfigManagedPrometheusConfig)(nil)).Elem()
}

func (o AttachedClusterMonitoringConfigManagedPrometheusConfigPtrOutput) ToAttachedClusterMonitoringConfigManagedPrometheusConfigPtrOutput() AttachedClusterMonitoringConfigManagedPrometheusConfigPtrOutput {
	return o
}

func (o AttachedClusterMonitoringConfigManagedPrometheusConfigPtrOutput) ToAttachedClusterMonitoringConfigManagedPrometheusConfigPtrOutputWithContext(ctx context.Context) AttachedClusterMonitoringConfigManagedPrometheusConfigPtrOutput {
	return o
}

func (o AttachedClusterMonitoringConfigManagedPrometheusConfigPtrOutput) Elem() AttachedClusterMonitoringConfigManagedPrometheusConfigOutput {
	return o.ApplyT(func(v *AttachedClusterMonitoringConfigManagedPrometheusConfig) AttachedClusterMonitoringConfigManagedPrometheusConfig {
		if v != nil {
			return *v
		}
		var ret AttachedClusterMonitoringConfigManagedPrometheusConfig
		return ret
	}).(AttachedClusterMonitoringConfigManagedPrometheusConfigOutput)
}

// Enable Managed Collection.
func (o AttachedClusterMonitoringConfigManagedPrometheusConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AttachedClusterMonitoringConfigManagedPrometheusConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type AttachedClusterOidcConfig struct {
	// A JSON Web Token (JWT) issuer URI. `issuer` must start with `https://`
	IssuerUrl string `pulumi:"issuerUrl"`
	// OIDC verification keys in JWKS format (RFC 7517).
	Jwks *string `pulumi:"jwks"`
}

// AttachedClusterOidcConfigInput is an input type that accepts AttachedClusterOidcConfigArgs and AttachedClusterOidcConfigOutput values.
// You can construct a concrete instance of `AttachedClusterOidcConfigInput` via:
//
//	AttachedClusterOidcConfigArgs{...}
type AttachedClusterOidcConfigInput interface {
	pulumi.Input

	ToAttachedClusterOidcConfigOutput() AttachedClusterOidcConfigOutput
	ToAttachedClusterOidcConfigOutputWithContext(context.Context) AttachedClusterOidcConfigOutput
}

type AttachedClusterOidcConfigArgs struct {
	// A JSON Web Token (JWT) issuer URI. `issuer` must start with `https://`
	IssuerUrl pulumi.StringInput `pulumi:"issuerUrl"`
	// OIDC verification keys in JWKS format (RFC 7517).
	Jwks pulumi.StringPtrInput `pulumi:"jwks"`
}

func (AttachedClusterOidcConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AttachedClusterOidcConfig)(nil)).Elem()
}

func (i AttachedClusterOidcConfigArgs) ToAttachedClusterOidcConfigOutput() AttachedClusterOidcConfigOutput {
	return i.ToAttachedClusterOidcConfigOutputWithContext(context.Background())
}

func (i AttachedClusterOidcConfigArgs) ToAttachedClusterOidcConfigOutputWithContext(ctx context.Context) AttachedClusterOidcConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttachedClusterOidcConfigOutput)
}

func (i AttachedClusterOidcConfigArgs) ToAttachedClusterOidcConfigPtrOutput() AttachedClusterOidcConfigPtrOutput {
	return i.ToAttachedClusterOidcConfigPtrOutputWithContext(context.Background())
}

func (i AttachedClusterOidcConfigArgs) ToAttachedClusterOidcConfigPtrOutputWithContext(ctx context.Context) AttachedClusterOidcConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttachedClusterOidcConfigOutput).ToAttachedClusterOidcConfigPtrOutputWithContext(ctx)
}

// AttachedClusterOidcConfigPtrInput is an input type that accepts AttachedClusterOidcConfigArgs, AttachedClusterOidcConfigPtr and AttachedClusterOidcConfigPtrOutput values.
// You can construct a concrete instance of `AttachedClusterOidcConfigPtrInput` via:
//
//	        AttachedClusterOidcConfigArgs{...}
//
//	or:
//
//	        nil
type AttachedClusterOidcConfigPtrInput interface {
	pulumi.Input

	ToAttachedClusterOidcConfigPtrOutput() AttachedClusterOidcConfigPtrOutput
	ToAttachedClusterOidcConfigPtrOutputWithContext(context.Context) AttachedClusterOidcConfigPtrOutput
}

type attachedClusterOidcConfigPtrType AttachedClusterOidcConfigArgs

func AttachedClusterOidcConfigPtr(v *AttachedClusterOidcConfigArgs) AttachedClusterOidcConfigPtrInput {
	return (*attachedClusterOidcConfigPtrType)(v)
}

func (*attachedClusterOidcConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AttachedClusterOidcConfig)(nil)).Elem()
}

func (i *attachedClusterOidcConfigPtrType) ToAttachedClusterOidcConfigPtrOutput() AttachedClusterOidcConfigPtrOutput {
	return i.ToAttachedClusterOidcConfigPtrOutputWithContext(context.Background())
}

func (i *attachedClusterOidcConfigPtrType) ToAttachedClusterOidcConfigPtrOutputWithContext(ctx context.Context) AttachedClusterOidcConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttachedClusterOidcConfigPtrOutput)
}

type AttachedClusterOidcConfigOutput struct{ *pulumi.OutputState }

func (AttachedClusterOidcConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AttachedClusterOidcConfig)(nil)).Elem()
}

func (o AttachedClusterOidcConfigOutput) ToAttachedClusterOidcConfigOutput() AttachedClusterOidcConfigOutput {
	return o
}

func (o AttachedClusterOidcConfigOutput) ToAttachedClusterOidcConfigOutputWithContext(ctx context.Context) AttachedClusterOidcConfigOutput {
	return o
}

func (o AttachedClusterOidcConfigOutput) ToAttachedClusterOidcConfigPtrOutput() AttachedClusterOidcConfigPtrOutput {
	return o.ToAttachedClusterOidcConfigPtrOutputWithContext(context.Background())
}

func (o AttachedClusterOidcConfigOutput) ToAttachedClusterOidcConfigPtrOutputWithContext(ctx context.Context) AttachedClusterOidcConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AttachedClusterOidcConfig) *AttachedClusterOidcConfig {
		return &v
	}).(AttachedClusterOidcConfigPtrOutput)
}

// A JSON Web Token (JWT) issuer URI. `issuer` must start with `https://`
func (o AttachedClusterOidcConfigOutput) IssuerUrl() pulumi.StringOutput {
	return o.ApplyT(func(v AttachedClusterOidcConfig) string { return v.IssuerUrl }).(pulumi.StringOutput)
}

// OIDC verification keys in JWKS format (RFC 7517).
func (o AttachedClusterOidcConfigOutput) Jwks() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AttachedClusterOidcConfig) *string { return v.Jwks }).(pulumi.StringPtrOutput)
}

type AttachedClusterOidcConfigPtrOutput struct{ *pulumi.OutputState }

func (AttachedClusterOidcConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AttachedClusterOidcConfig)(nil)).Elem()
}

func (o AttachedClusterOidcConfigPtrOutput) ToAttachedClusterOidcConfigPtrOutput() AttachedClusterOidcConfigPtrOutput {
	return o
}

func (o AttachedClusterOidcConfigPtrOutput) ToAttachedClusterOidcConfigPtrOutputWithContext(ctx context.Context) AttachedClusterOidcConfigPtrOutput {
	return o
}

func (o AttachedClusterOidcConfigPtrOutput) Elem() AttachedClusterOidcConfigOutput {
	return o.ApplyT(func(v *AttachedClusterOidcConfig) AttachedClusterOidcConfig {
		if v != nil {
			return *v
		}
		var ret AttachedClusterOidcConfig
		return ret
	}).(AttachedClusterOidcConfigOutput)
}

// A JSON Web Token (JWT) issuer URI. `issuer` must start with `https://`
func (o AttachedClusterOidcConfigPtrOutput) IssuerUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AttachedClusterOidcConfig) *string {
		if v == nil {
			return nil
		}
		return &v.IssuerUrl
	}).(pulumi.StringPtrOutput)
}

// OIDC verification keys in JWKS format (RFC 7517).
func (o AttachedClusterOidcConfigPtrOutput) Jwks() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AttachedClusterOidcConfig) *string {
		if v == nil {
			return nil
		}
		return v.Jwks
	}).(pulumi.StringPtrOutput)
}

type AttachedClusterProxyConfig struct {
	// The Kubernetes Secret resource that contains the HTTP(S) proxy configuration.
	// Structure is documented below.
	KubernetesSecret *AttachedClusterProxyConfigKubernetesSecret `pulumi:"kubernetesSecret"`
}

// AttachedClusterProxyConfigInput is an input type that accepts AttachedClusterProxyConfigArgs and AttachedClusterProxyConfigOutput values.
// You can construct a concrete instance of `AttachedClusterProxyConfigInput` via:
//
//	AttachedClusterProxyConfigArgs{...}
type AttachedClusterProxyConfigInput interface {
	pulumi.Input

	ToAttachedClusterProxyConfigOutput() AttachedClusterProxyConfigOutput
	ToAttachedClusterProxyConfigOutputWithContext(context.Context) AttachedClusterProxyConfigOutput
}

type AttachedClusterProxyConfigArgs struct {
	// The Kubernetes Secret resource that contains the HTTP(S) proxy configuration.
	// Structure is documented below.
	KubernetesSecret AttachedClusterProxyConfigKubernetesSecretPtrInput `pulumi:"kubernetesSecret"`
}

func (AttachedClusterProxyConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AttachedClusterProxyConfig)(nil)).Elem()
}

func (i AttachedClusterProxyConfigArgs) ToAttachedClusterProxyConfigOutput() AttachedClusterProxyConfigOutput {
	return i.ToAttachedClusterProxyConfigOutputWithContext(context.Background())
}

func (i AttachedClusterProxyConfigArgs) ToAttachedClusterProxyConfigOutputWithContext(ctx context.Context) AttachedClusterProxyConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttachedClusterProxyConfigOutput)
}

func (i AttachedClusterProxyConfigArgs) ToAttachedClusterProxyConfigPtrOutput() AttachedClusterProxyConfigPtrOutput {
	return i.ToAttachedClusterProxyConfigPtrOutputWithContext(context.Background())
}

func (i AttachedClusterProxyConfigArgs) ToAttachedClusterProxyConfigPtrOutputWithContext(ctx context.Context) AttachedClusterProxyConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttachedClusterProxyConfigOutput).ToAttachedClusterProxyConfigPtrOutputWithContext(ctx)
}

// AttachedClusterProxyConfigPtrInput is an input type that accepts AttachedClusterProxyConfigArgs, AttachedClusterProxyConfigPtr and AttachedClusterProxyConfigPtrOutput values.
// You can construct a concrete instance of `AttachedClusterProxyConfigPtrInput` via:
//
//	        AttachedClusterProxyConfigArgs{...}
//
//	or:
//
//	        nil
type AttachedClusterProxyConfigPtrInput interface {
	pulumi.Input

	ToAttachedClusterProxyConfigPtrOutput() AttachedClusterProxyConfigPtrOutput
	ToAttachedClusterProxyConfigPtrOutputWithContext(context.Context) AttachedClusterProxyConfigPtrOutput
}

type attachedClusterProxyConfigPtrType AttachedClusterProxyConfigArgs

func AttachedClusterProxyConfigPtr(v *AttachedClusterProxyConfigArgs) AttachedClusterProxyConfigPtrInput {
	return (*attachedClusterProxyConfigPtrType)(v)
}

func (*attachedClusterProxyConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AttachedClusterProxyConfig)(nil)).Elem()
}

func (i *attachedClusterProxyConfigPtrType) ToAttachedClusterProxyConfigPtrOutput() AttachedClusterProxyConfigPtrOutput {
	return i.ToAttachedClusterProxyConfigPtrOutputWithContext(context.Background())
}

func (i *attachedClusterProxyConfigPtrType) ToAttachedClusterProxyConfigPtrOutputWithContext(ctx context.Context) AttachedClusterProxyConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttachedClusterProxyConfigPtrOutput)
}

type AttachedClusterProxyConfigOutput struct{ *pulumi.OutputState }

func (AttachedClusterProxyConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AttachedClusterProxyConfig)(nil)).Elem()
}

func (o AttachedClusterProxyConfigOutput) ToAttachedClusterProxyConfigOutput() AttachedClusterProxyConfigOutput {
	return o
}

func (o AttachedClusterProxyConfigOutput) ToAttachedClusterProxyConfigOutputWithContext(ctx context.Context) AttachedClusterProxyConfigOutput {
	return o
}

func (o AttachedClusterProxyConfigOutput) ToAttachedClusterProxyConfigPtrOutput() AttachedClusterProxyConfigPtrOutput {
	return o.ToAttachedClusterProxyConfigPtrOutputWithContext(context.Background())
}

func (o AttachedClusterProxyConfigOutput) ToAttachedClusterProxyConfigPtrOutputWithContext(ctx context.Context) AttachedClusterProxyConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AttachedClusterProxyConfig) *AttachedClusterProxyConfig {
		return &v
	}).(AttachedClusterProxyConfigPtrOutput)
}

// The Kubernetes Secret resource that contains the HTTP(S) proxy configuration.
// Structure is documented below.
func (o AttachedClusterProxyConfigOutput) KubernetesSecret() AttachedClusterProxyConfigKubernetesSecretPtrOutput {
	return o.ApplyT(func(v AttachedClusterProxyConfig) *AttachedClusterProxyConfigKubernetesSecret {
		return v.KubernetesSecret
	}).(AttachedClusterProxyConfigKubernetesSecretPtrOutput)
}

type AttachedClusterProxyConfigPtrOutput struct{ *pulumi.OutputState }

func (AttachedClusterProxyConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AttachedClusterProxyConfig)(nil)).Elem()
}

func (o AttachedClusterProxyConfigPtrOutput) ToAttachedClusterProxyConfigPtrOutput() AttachedClusterProxyConfigPtrOutput {
	return o
}

func (o AttachedClusterProxyConfigPtrOutput) ToAttachedClusterProxyConfigPtrOutputWithContext(ctx context.Context) AttachedClusterProxyConfigPtrOutput {
	return o
}

func (o AttachedClusterProxyConfigPtrOutput) Elem() AttachedClusterProxyConfigOutput {
	return o.ApplyT(func(v *AttachedClusterProxyConfig) AttachedClusterProxyConfig {
		if v != nil {
			return *v
		}
		var ret AttachedClusterProxyConfig
		return ret
	}).(AttachedClusterProxyConfigOutput)
}

// The Kubernetes Secret resource that contains the HTTP(S) proxy configuration.
// Structure is documented below.
func (o AttachedClusterProxyConfigPtrOutput) KubernetesSecret() AttachedClusterProxyConfigKubernetesSecretPtrOutput {
	return o.ApplyT(func(v *AttachedClusterProxyConfig) *AttachedClusterProxyConfigKubernetesSecret {
		if v == nil {
			return nil
		}
		return v.KubernetesSecret
	}).(AttachedClusterProxyConfigKubernetesSecretPtrOutput)
}

type AttachedClusterProxyConfigKubernetesSecret struct {
	// Name of the kubernetes secret containing the proxy config.
	Name string `pulumi:"name"`
	// Namespace of the kubernetes secret containing the proxy config.
	Namespace string `pulumi:"namespace"`
}

// AttachedClusterProxyConfigKubernetesSecretInput is an input type that accepts AttachedClusterProxyConfigKubernetesSecretArgs and AttachedClusterProxyConfigKubernetesSecretOutput values.
// You can construct a concrete instance of `AttachedClusterProxyConfigKubernetesSecretInput` via:
//
//	AttachedClusterProxyConfigKubernetesSecretArgs{...}
type AttachedClusterProxyConfigKubernetesSecretInput interface {
	pulumi.Input

	ToAttachedClusterProxyConfigKubernetesSecretOutput() AttachedClusterProxyConfigKubernetesSecretOutput
	ToAttachedClusterProxyConfigKubernetesSecretOutputWithContext(context.Context) AttachedClusterProxyConfigKubernetesSecretOutput
}

type AttachedClusterProxyConfigKubernetesSecretArgs struct {
	// Name of the kubernetes secret containing the proxy config.
	Name pulumi.StringInput `pulumi:"name"`
	// Namespace of the kubernetes secret containing the proxy config.
	Namespace pulumi.StringInput `pulumi:"namespace"`
}

func (AttachedClusterProxyConfigKubernetesSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AttachedClusterProxyConfigKubernetesSecret)(nil)).Elem()
}

func (i AttachedClusterProxyConfigKubernetesSecretArgs) ToAttachedClusterProxyConfigKubernetesSecretOutput() AttachedClusterProxyConfigKubernetesSecretOutput {
	return i.ToAttachedClusterProxyConfigKubernetesSecretOutputWithContext(context.Background())
}

func (i AttachedClusterProxyConfigKubernetesSecretArgs) ToAttachedClusterProxyConfigKubernetesSecretOutputWithContext(ctx context.Context) AttachedClusterProxyConfigKubernetesSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttachedClusterProxyConfigKubernetesSecretOutput)
}

func (i AttachedClusterProxyConfigKubernetesSecretArgs) ToAttachedClusterProxyConfigKubernetesSecretPtrOutput() AttachedClusterProxyConfigKubernetesSecretPtrOutput {
	return i.ToAttachedClusterProxyConfigKubernetesSecretPtrOutputWithContext(context.Background())
}

func (i AttachedClusterProxyConfigKubernetesSecretArgs) ToAttachedClusterProxyConfigKubernetesSecretPtrOutputWithContext(ctx context.Context) AttachedClusterProxyConfigKubernetesSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttachedClusterProxyConfigKubernetesSecretOutput).ToAttachedClusterProxyConfigKubernetesSecretPtrOutputWithContext(ctx)
}

// AttachedClusterProxyConfigKubernetesSecretPtrInput is an input type that accepts AttachedClusterProxyConfigKubernetesSecretArgs, AttachedClusterProxyConfigKubernetesSecretPtr and AttachedClusterProxyConfigKubernetesSecretPtrOutput values.
// You can construct a concrete instance of `AttachedClusterProxyConfigKubernetesSecretPtrInput` via:
//
//	        AttachedClusterProxyConfigKubernetesSecretArgs{...}
//
//	or:
//
//	        nil
type AttachedClusterProxyConfigKubernetesSecretPtrInput interface {
	pulumi.Input

	ToAttachedClusterProxyConfigKubernetesSecretPtrOutput() AttachedClusterProxyConfigKubernetesSecretPtrOutput
	ToAttachedClusterProxyConfigKubernetesSecretPtrOutputWithContext(context.Context) AttachedClusterProxyConfigKubernetesSecretPtrOutput
}

type attachedClusterProxyConfigKubernetesSecretPtrType AttachedClusterProxyConfigKubernetesSecretArgs

func AttachedClusterProxyConfigKubernetesSecretPtr(v *AttachedClusterProxyConfigKubernetesSecretArgs) AttachedClusterProxyConfigKubernetesSecretPtrInput {
	return (*attachedClusterProxyConfigKubernetesSecretPtrType)(v)
}

func (*attachedClusterProxyConfigKubernetesSecretPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AttachedClusterProxyConfigKubernetesSecret)(nil)).Elem()
}

func (i *attachedClusterProxyConfigKubernetesSecretPtrType) ToAttachedClusterProxyConfigKubernetesSecretPtrOutput() AttachedClusterProxyConfigKubernetesSecretPtrOutput {
	return i.ToAttachedClusterProxyConfigKubernetesSecretPtrOutputWithContext(context.Background())
}

func (i *attachedClusterProxyConfigKubernetesSecretPtrType) ToAttachedClusterProxyConfigKubernetesSecretPtrOutputWithContext(ctx context.Context) AttachedClusterProxyConfigKubernetesSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttachedClusterProxyConfigKubernetesSecretPtrOutput)
}

type AttachedClusterProxyConfigKubernetesSecretOutput struct{ *pulumi.OutputState }

func (AttachedClusterProxyConfigKubernetesSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AttachedClusterProxyConfigKubernetesSecret)(nil)).Elem()
}

func (o AttachedClusterProxyConfigKubernetesSecretOutput) ToAttachedClusterProxyConfigKubernetesSecretOutput() AttachedClusterProxyConfigKubernetesSecretOutput {
	return o
}

func (o AttachedClusterProxyConfigKubernetesSecretOutput) ToAttachedClusterProxyConfigKubernetesSecretOutputWithContext(ctx context.Context) AttachedClusterProxyConfigKubernetesSecretOutput {
	return o
}

func (o AttachedClusterProxyConfigKubernetesSecretOutput) ToAttachedClusterProxyConfigKubernetesSecretPtrOutput() AttachedClusterProxyConfigKubernetesSecretPtrOutput {
	return o.ToAttachedClusterProxyConfigKubernetesSecretPtrOutputWithContext(context.Background())
}

func (o AttachedClusterProxyConfigKubernetesSecretOutput) ToAttachedClusterProxyConfigKubernetesSecretPtrOutputWithContext(ctx context.Context) AttachedClusterProxyConfigKubernetesSecretPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AttachedClusterProxyConfigKubernetesSecret) *AttachedClusterProxyConfigKubernetesSecret {
		return &v
	}).(AttachedClusterProxyConfigKubernetesSecretPtrOutput)
}

// Name of the kubernetes secret containing the proxy config.
func (o AttachedClusterProxyConfigKubernetesSecretOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AttachedClusterProxyConfigKubernetesSecret) string { return v.Name }).(pulumi.StringOutput)
}

// Namespace of the kubernetes secret containing the proxy config.
func (o AttachedClusterProxyConfigKubernetesSecretOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v AttachedClusterProxyConfigKubernetesSecret) string { return v.Namespace }).(pulumi.StringOutput)
}

type AttachedClusterProxyConfigKubernetesSecretPtrOutput struct{ *pulumi.OutputState }

func (AttachedClusterProxyConfigKubernetesSecretPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AttachedClusterProxyConfigKubernetesSecret)(nil)).Elem()
}

func (o AttachedClusterProxyConfigKubernetesSecretPtrOutput) ToAttachedClusterProxyConfigKubernetesSecretPtrOutput() AttachedClusterProxyConfigKubernetesSecretPtrOutput {
	return o
}

func (o AttachedClusterProxyConfigKubernetesSecretPtrOutput) ToAttachedClusterProxyConfigKubernetesSecretPtrOutputWithContext(ctx context.Context) AttachedClusterProxyConfigKubernetesSecretPtrOutput {
	return o
}

func (o AttachedClusterProxyConfigKubernetesSecretPtrOutput) Elem() AttachedClusterProxyConfigKubernetesSecretOutput {
	return o.ApplyT(func(v *AttachedClusterProxyConfigKubernetesSecret) AttachedClusterProxyConfigKubernetesSecret {
		if v != nil {
			return *v
		}
		var ret AttachedClusterProxyConfigKubernetesSecret
		return ret
	}).(AttachedClusterProxyConfigKubernetesSecretOutput)
}

// Name of the kubernetes secret containing the proxy config.
func (o AttachedClusterProxyConfigKubernetesSecretPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AttachedClusterProxyConfigKubernetesSecret) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the kubernetes secret containing the proxy config.
func (o AttachedClusterProxyConfigKubernetesSecretPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AttachedClusterProxyConfigKubernetesSecret) *string {
		if v == nil {
			return nil
		}
		return &v.Namespace
	}).(pulumi.StringPtrOutput)
}

type AttachedClusterWorkloadIdentityConfig struct {
	// The ID of the OIDC Identity Provider (IdP) associated to
	// the Workload Identity Pool.
	IdentityProvider *string `pulumi:"identityProvider"`
	// The OIDC issuer URL for this cluster.
	IssuerUri *string `pulumi:"issuerUri"`
	// The Workload Identity Pool associated to the cluster.
	WorkloadPool *string `pulumi:"workloadPool"`
}

// AttachedClusterWorkloadIdentityConfigInput is an input type that accepts AttachedClusterWorkloadIdentityConfigArgs and AttachedClusterWorkloadIdentityConfigOutput values.
// You can construct a concrete instance of `AttachedClusterWorkloadIdentityConfigInput` via:
//
//	AttachedClusterWorkloadIdentityConfigArgs{...}
type AttachedClusterWorkloadIdentityConfigInput interface {
	pulumi.Input

	ToAttachedClusterWorkloadIdentityConfigOutput() AttachedClusterWorkloadIdentityConfigOutput
	ToAttachedClusterWorkloadIdentityConfigOutputWithContext(context.Context) AttachedClusterWorkloadIdentityConfigOutput
}

type AttachedClusterWorkloadIdentityConfigArgs struct {
	// The ID of the OIDC Identity Provider (IdP) associated to
	// the Workload Identity Pool.
	IdentityProvider pulumi.StringPtrInput `pulumi:"identityProvider"`
	// The OIDC issuer URL for this cluster.
	IssuerUri pulumi.StringPtrInput `pulumi:"issuerUri"`
	// The Workload Identity Pool associated to the cluster.
	WorkloadPool pulumi.StringPtrInput `pulumi:"workloadPool"`
}

func (AttachedClusterWorkloadIdentityConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AttachedClusterWorkloadIdentityConfig)(nil)).Elem()
}

func (i AttachedClusterWorkloadIdentityConfigArgs) ToAttachedClusterWorkloadIdentityConfigOutput() AttachedClusterWorkloadIdentityConfigOutput {
	return i.ToAttachedClusterWorkloadIdentityConfigOutputWithContext(context.Background())
}

func (i AttachedClusterWorkloadIdentityConfigArgs) ToAttachedClusterWorkloadIdentityConfigOutputWithContext(ctx context.Context) AttachedClusterWorkloadIdentityConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttachedClusterWorkloadIdentityConfigOutput)
}

// AttachedClusterWorkloadIdentityConfigArrayInput is an input type that accepts AttachedClusterWorkloadIdentityConfigArray and AttachedClusterWorkloadIdentityConfigArrayOutput values.
// You can construct a concrete instance of `AttachedClusterWorkloadIdentityConfigArrayInput` via:
//
//	AttachedClusterWorkloadIdentityConfigArray{ AttachedClusterWorkloadIdentityConfigArgs{...} }
type AttachedClusterWorkloadIdentityConfigArrayInput interface {
	pulumi.Input

	ToAttachedClusterWorkloadIdentityConfigArrayOutput() AttachedClusterWorkloadIdentityConfigArrayOutput
	ToAttachedClusterWorkloadIdentityConfigArrayOutputWithContext(context.Context) AttachedClusterWorkloadIdentityConfigArrayOutput
}

type AttachedClusterWorkloadIdentityConfigArray []AttachedClusterWorkloadIdentityConfigInput

func (AttachedClusterWorkloadIdentityConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AttachedClusterWorkloadIdentityConfig)(nil)).Elem()
}

func (i AttachedClusterWorkloadIdentityConfigArray) ToAttachedClusterWorkloadIdentityConfigArrayOutput() AttachedClusterWorkloadIdentityConfigArrayOutput {
	return i.ToAttachedClusterWorkloadIdentityConfigArrayOutputWithContext(context.Background())
}

func (i AttachedClusterWorkloadIdentityConfigArray) ToAttachedClusterWorkloadIdentityConfigArrayOutputWithContext(ctx context.Context) AttachedClusterWorkloadIdentityConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttachedClusterWorkloadIdentityConfigArrayOutput)
}

type AttachedClusterWorkloadIdentityConfigOutput struct{ *pulumi.OutputState }

func (AttachedClusterWorkloadIdentityConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AttachedClusterWorkloadIdentityConfig)(nil)).Elem()
}

func (o AttachedClusterWorkloadIdentityConfigOutput) ToAttachedClusterWorkloadIdentityConfigOutput() AttachedClusterWorkloadIdentityConfigOutput {
	return o
}

func (o AttachedClusterWorkloadIdentityConfigOutput) ToAttachedClusterWorkloadIdentityConfigOutputWithContext(ctx context.Context) AttachedClusterWorkloadIdentityConfigOutput {
	return o
}

// The ID of the OIDC Identity Provider (IdP) associated to
// the Workload Identity Pool.
func (o AttachedClusterWorkloadIdentityConfigOutput) IdentityProvider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AttachedClusterWorkloadIdentityConfig) *string { return v.IdentityProvider }).(pulumi.StringPtrOutput)
}

// The OIDC issuer URL for this cluster.
func (o AttachedClusterWorkloadIdentityConfigOutput) IssuerUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AttachedClusterWorkloadIdentityConfig) *string { return v.IssuerUri }).(pulumi.StringPtrOutput)
}

// The Workload Identity Pool associated to the cluster.
func (o AttachedClusterWorkloadIdentityConfigOutput) WorkloadPool() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AttachedClusterWorkloadIdentityConfig) *string { return v.WorkloadPool }).(pulumi.StringPtrOutput)
}

type AttachedClusterWorkloadIdentityConfigArrayOutput struct{ *pulumi.OutputState }

func (AttachedClusterWorkloadIdentityConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AttachedClusterWorkloadIdentityConfig)(nil)).Elem()
}

func (o AttachedClusterWorkloadIdentityConfigArrayOutput) ToAttachedClusterWorkloadIdentityConfigArrayOutput() AttachedClusterWorkloadIdentityConfigArrayOutput {
	return o
}

func (o AttachedClusterWorkloadIdentityConfigArrayOutput) ToAttachedClusterWorkloadIdentityConfigArrayOutputWithContext(ctx context.Context) AttachedClusterWorkloadIdentityConfigArrayOutput {
	return o
}

func (o AttachedClusterWorkloadIdentityConfigArrayOutput) Index(i pulumi.IntInput) AttachedClusterWorkloadIdentityConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AttachedClusterWorkloadIdentityConfig {
		return vs[0].([]AttachedClusterWorkloadIdentityConfig)[vs[1].(int)]
	}).(AttachedClusterWorkloadIdentityConfigOutput)
}

type AwsClusterAuthorization struct {
	// Groups of users that can perform operations as a cluster admin. A managed ClusterRoleBinding will be created to grant the `cluster-admin` ClusterRole to the groups. Up to ten admin groups can be provided. For more info on RBAC, see https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles
	AdminGroups []AwsClusterAuthorizationAdminGroup `pulumi:"adminGroups"`
	// Users to perform operations as a cluster admin. A managed ClusterRoleBinding will be created to grant the `cluster-admin` ClusterRole to the users. Up to ten admin users can be provided. For more info on RBAC, see https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles
	AdminUsers []AwsClusterAuthorizationAdminUser `pulumi:"adminUsers"`
}

// AwsClusterAuthorizationInput is an input type that accepts AwsClusterAuthorizationArgs and AwsClusterAuthorizationOutput values.
// You can construct a concrete instance of `AwsClusterAuthorizationInput` via:
//
//	AwsClusterAuthorizationArgs{...}
type AwsClusterAuthorizationInput interface {
	pulumi.Input

	ToAwsClusterAuthorizationOutput() AwsClusterAuthorizationOutput
	ToAwsClusterAuthorizationOutputWithContext(context.Context) AwsClusterAuthorizationOutput
}

type AwsClusterAuthorizationArgs struct {
	// Groups of users that can perform operations as a cluster admin. A managed ClusterRoleBinding will be created to grant the `cluster-admin` ClusterRole to the groups. Up to ten admin groups can be provided. For more info on RBAC, see https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles
	AdminGroups AwsClusterAuthorizationAdminGroupArrayInput `pulumi:"adminGroups"`
	// Users to perform operations as a cluster admin. A managed ClusterRoleBinding will be created to grant the `cluster-admin` ClusterRole to the users. Up to ten admin users can be provided. For more info on RBAC, see https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles
	AdminUsers AwsClusterAuthorizationAdminUserArrayInput `pulumi:"adminUsers"`
}

func (AwsClusterAuthorizationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsClusterAuthorization)(nil)).Elem()
}

func (i AwsClusterAuthorizationArgs) ToAwsClusterAuthorizationOutput() AwsClusterAuthorizationOutput {
	return i.ToAwsClusterAuthorizationOutputWithContext(context.Background())
}

func (i AwsClusterAuthorizationArgs) ToAwsClusterAuthorizationOutputWithContext(ctx context.Context) AwsClusterAuthorizationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsClusterAuthorizationOutput)
}

func (i AwsClusterAuthorizationArgs) ToAwsClusterAuthorizationPtrOutput() AwsClusterAuthorizationPtrOutput {
	return i.ToAwsClusterAuthorizationPtrOutputWithContext(context.Background())
}

func (i AwsClusterAuthorizationArgs) ToAwsClusterAuthorizationPtrOutputWithContext(ctx context.Context) AwsClusterAuthorizationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsClusterAuthorizationOutput).ToAwsClusterAuthorizationPtrOutputWithContext(ctx)
}

// AwsClusterAuthorizationPtrInput is an input type that accepts AwsClusterAuthorizationArgs, AwsClusterAuthorizationPtr and AwsClusterAuthorizationPtrOutput values.
// You can construct a concrete instance of `AwsClusterAuthorizationPtrInput` via:
//
//	        AwsClusterAuthorizationArgs{...}
//
//	or:
//
//	        nil
type AwsClusterAuthorizationPtrInput interface {
	pulumi.Input

	ToAwsClusterAuthorizationPtrOutput() AwsClusterAuthorizationPtrOutput
	ToAwsClusterAuthorizationPtrOutputWithContext(context.Context) AwsClusterAuthorizationPtrOutput
}

type awsClusterAuthorizationPtrType AwsClusterAuthorizationArgs

func AwsClusterAuthorizationPtr(v *AwsClusterAuthorizationArgs) AwsClusterAuthorizationPtrInput {
	return (*awsClusterAuthorizationPtrType)(v)
}

func (*awsClusterAuthorizationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsClusterAuthorization)(nil)).Elem()
}

func (i *awsClusterAuthorizationPtrType) ToAwsClusterAuthorizationPtrOutput() AwsClusterAuthorizationPtrOutput {
	return i.ToAwsClusterAuthorizationPtrOutputWithContext(context.Background())
}

func (i *awsClusterAuthorizationPtrType) ToAwsClusterAuthorizationPtrOutputWithContext(ctx context.Context) AwsClusterAuthorizationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsClusterAuthorizationPtrOutput)
}

type AwsClusterAuthorizationOutput struct{ *pulumi.OutputState }

func (AwsClusterAuthorizationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsClusterAuthorization)(nil)).Elem()
}

func (o AwsClusterAuthorizationOutput) ToAwsClusterAuthorizationOutput() AwsClusterAuthorizationOutput {
	return o
}

func (o AwsClusterAuthorizationOutput) ToAwsClusterAuthorizationOutputWithContext(ctx context.Context) AwsClusterAuthorizationOutput {
	return o
}

func (o AwsClusterAuthorizationOutput) ToAwsClusterAuthorizationPtrOutput() AwsClusterAuthorizationPtrOutput {
	return o.ToAwsClusterAuthorizationPtrOutputWithContext(context.Background())
}

func (o AwsClusterAuthorizationOutput) ToAwsClusterAuthorizationPtrOutputWithContext(ctx context.Context) AwsClusterAuthorizationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AwsClusterAuthorization) *AwsClusterAuthorization {
		return &v
	}).(AwsClusterAuthorizationPtrOutput)
}

// Groups of users that can perform operations as a cluster admin. A managed ClusterRoleBinding will be created to grant the `cluster-admin` ClusterRole to the groups. Up to ten admin groups can be provided. For more info on RBAC, see https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles
func (o AwsClusterAuthorizationOutput) AdminGroups() AwsClusterAuthorizationAdminGroupArrayOutput {
	return o.ApplyT(func(v AwsClusterAuthorization) []AwsClusterAuthorizationAdminGroup { return v.AdminGroups }).(AwsClusterAuthorizationAdminGroupArrayOutput)
}

// Users to perform operations as a cluster admin. A managed ClusterRoleBinding will be created to grant the `cluster-admin` ClusterRole to the users. Up to ten admin users can be provided. For more info on RBAC, see https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles
func (o AwsClusterAuthorizationOutput) AdminUsers() AwsClusterAuthorizationAdminUserArrayOutput {
	return o.ApplyT(func(v AwsClusterAuthorization) []AwsClusterAuthorizationAdminUser { return v.AdminUsers }).(AwsClusterAuthorizationAdminUserArrayOutput)
}

type AwsClusterAuthorizationPtrOutput struct{ *pulumi.OutputState }

func (AwsClusterAuthorizationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsClusterAuthorization)(nil)).Elem()
}

func (o AwsClusterAuthorizationPtrOutput) ToAwsClusterAuthorizationPtrOutput() AwsClusterAuthorizationPtrOutput {
	return o
}

func (o AwsClusterAuthorizationPtrOutput) ToAwsClusterAuthorizationPtrOutputWithContext(ctx context.Context) AwsClusterAuthorizationPtrOutput {
	return o
}

func (o AwsClusterAuthorizationPtrOutput) Elem() AwsClusterAuthorizationOutput {
	return o.ApplyT(func(v *AwsClusterAuthorization) AwsClusterAuthorization {
		if v != nil {
			return *v
		}
		var ret AwsClusterAuthorization
		return ret
	}).(AwsClusterAuthorizationOutput)
}

// Groups of users that can perform operations as a cluster admin. A managed ClusterRoleBinding will be created to grant the `cluster-admin` ClusterRole to the groups. Up to ten admin groups can be provided. For more info on RBAC, see https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles
func (o AwsClusterAuthorizationPtrOutput) AdminGroups() AwsClusterAuthorizationAdminGroupArrayOutput {
	return o.ApplyT(func(v *AwsClusterAuthorization) []AwsClusterAuthorizationAdminGroup {
		if v == nil {
			return nil
		}
		return v.AdminGroups
	}).(AwsClusterAuthorizationAdminGroupArrayOutput)
}

// Users to perform operations as a cluster admin. A managed ClusterRoleBinding will be created to grant the `cluster-admin` ClusterRole to the users. Up to ten admin users can be provided. For more info on RBAC, see https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles
func (o AwsClusterAuthorizationPtrOutput) AdminUsers() AwsClusterAuthorizationAdminUserArrayOutput {
	return o.ApplyT(func(v *AwsClusterAuthorization) []AwsClusterAuthorizationAdminUser {
		if v == nil {
			return nil
		}
		return v.AdminUsers
	}).(AwsClusterAuthorizationAdminUserArrayOutput)
}

type AwsClusterAuthorizationAdminGroup struct {
	// The name of the group, e.g. `my-group@domain.com`.
	Group string `pulumi:"group"`
}

// AwsClusterAuthorizationAdminGroupInput is an input type that accepts AwsClusterAuthorizationAdminGroupArgs and AwsClusterAuthorizationAdminGroupOutput values.
// You can construct a concrete instance of `AwsClusterAuthorizationAdminGroupInput` via:
//
//	AwsClusterAuthorizationAdminGroupArgs{...}
type AwsClusterAuthorizationAdminGroupInput interface {
	pulumi.Input

	ToAwsClusterAuthorizationAdminGroupOutput() AwsClusterAuthorizationAdminGroupOutput
	ToAwsClusterAuthorizationAdminGroupOutputWithContext(context.Context) AwsClusterAuthorizationAdminGroupOutput
}

type AwsClusterAuthorizationAdminGroupArgs struct {
	// The name of the group, e.g. `my-group@domain.com`.
	Group pulumi.StringInput `pulumi:"group"`
}

func (AwsClusterAuthorizationAdminGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsClusterAuthorizationAdminGroup)(nil)).Elem()
}

func (i AwsClusterAuthorizationAdminGroupArgs) ToAwsClusterAuthorizationAdminGroupOutput() AwsClusterAuthorizationAdminGroupOutput {
	return i.ToAwsClusterAuthorizationAdminGroupOutputWithContext(context.Background())
}

func (i AwsClusterAuthorizationAdminGroupArgs) ToAwsClusterAuthorizationAdminGroupOutputWithContext(ctx context.Context) AwsClusterAuthorizationAdminGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsClusterAuthorizationAdminGroupOutput)
}

// AwsClusterAuthorizationAdminGroupArrayInput is an input type that accepts AwsClusterAuthorizationAdminGroupArray and AwsClusterAuthorizationAdminGroupArrayOutput values.
// You can construct a concrete instance of `AwsClusterAuthorizationAdminGroupArrayInput` via:
//
//	AwsClusterAuthorizationAdminGroupArray{ AwsClusterAuthorizationAdminGroupArgs{...} }
type AwsClusterAuthorizationAdminGroupArrayInput interface {
	pulumi.Input

	ToAwsClusterAuthorizationAdminGroupArrayOutput() AwsClusterAuthorizationAdminGroupArrayOutput
	ToAwsClusterAuthorizationAdminGroupArrayOutputWithContext(context.Context) AwsClusterAuthorizationAdminGroupArrayOutput
}

type AwsClusterAuthorizationAdminGroupArray []AwsClusterAuthorizationAdminGroupInput

func (AwsClusterAuthorizationAdminGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AwsClusterAuthorizationAdminGroup)(nil)).Elem()
}

func (i AwsClusterAuthorizationAdminGroupArray) ToAwsClusterAuthorizationAdminGroupArrayOutput() AwsClusterAuthorizationAdminGroupArrayOutput {
	return i.ToAwsClusterAuthorizationAdminGroupArrayOutputWithContext(context.Background())
}

func (i AwsClusterAuthorizationAdminGroupArray) ToAwsClusterAuthorizationAdminGroupArrayOutputWithContext(ctx context.Context) AwsClusterAuthorizationAdminGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsClusterAuthorizationAdminGroupArrayOutput)
}

type AwsClusterAuthorizationAdminGroupOutput struct{ *pulumi.OutputState }

func (AwsClusterAuthorizationAdminGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsClusterAuthorizationAdminGroup)(nil)).Elem()
}

func (o AwsClusterAuthorizationAdminGroupOutput) ToAwsClusterAuthorizationAdminGroupOutput() AwsClusterAuthorizationAdminGroupOutput {
	return o
}

func (o AwsClusterAuthorizationAdminGroupOutput) ToAwsClusterAuthorizationAdminGroupOutputWithContext(ctx context.Context) AwsClusterAuthorizationAdminGroupOutput {
	return o
}

// The name of the group, e.g. `my-group@domain.com`.
func (o AwsClusterAuthorizationAdminGroupOutput) Group() pulumi.StringOutput {
	return o.ApplyT(func(v AwsClusterAuthorizationAdminGroup) string { return v.Group }).(pulumi.StringOutput)
}

type AwsClusterAuthorizationAdminGroupArrayOutput struct{ *pulumi.OutputState }

func (AwsClusterAuthorizationAdminGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AwsClusterAuthorizationAdminGroup)(nil)).Elem()
}

func (o AwsClusterAuthorizationAdminGroupArrayOutput) ToAwsClusterAuthorizationAdminGroupArrayOutput() AwsClusterAuthorizationAdminGroupArrayOutput {
	return o
}

func (o AwsClusterAuthorizationAdminGroupArrayOutput) ToAwsClusterAuthorizationAdminGroupArrayOutputWithContext(ctx context.Context) AwsClusterAuthorizationAdminGroupArrayOutput {
	return o
}

func (o AwsClusterAuthorizationAdminGroupArrayOutput) Index(i pulumi.IntInput) AwsClusterAuthorizationAdminGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AwsClusterAuthorizationAdminGroup {
		return vs[0].([]AwsClusterAuthorizationAdminGroup)[vs[1].(int)]
	}).(AwsClusterAuthorizationAdminGroupOutput)
}

type AwsClusterAuthorizationAdminUser struct {
	// The name of the user, e.g. `my-gcp-id@gmail.com`.
	Username string `pulumi:"username"`
}

// AwsClusterAuthorizationAdminUserInput is an input type that accepts AwsClusterAuthorizationAdminUserArgs and AwsClusterAuthorizationAdminUserOutput values.
// You can construct a concrete instance of `AwsClusterAuthorizationAdminUserInput` via:
//
//	AwsClusterAuthorizationAdminUserArgs{...}
type AwsClusterAuthorizationAdminUserInput interface {
	pulumi.Input

	ToAwsClusterAuthorizationAdminUserOutput() AwsClusterAuthorizationAdminUserOutput
	ToAwsClusterAuthorizationAdminUserOutputWithContext(context.Context) AwsClusterAuthorizationAdminUserOutput
}

type AwsClusterAuthorizationAdminUserArgs struct {
	// The name of the user, e.g. `my-gcp-id@gmail.com`.
	Username pulumi.StringInput `pulumi:"username"`
}

func (AwsClusterAuthorizationAdminUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsClusterAuthorizationAdminUser)(nil)).Elem()
}

func (i AwsClusterAuthorizationAdminUserArgs) ToAwsClusterAuthorizationAdminUserOutput() AwsClusterAuthorizationAdminUserOutput {
	return i.ToAwsClusterAuthorizationAdminUserOutputWithContext(context.Background())
}

func (i AwsClusterAuthorizationAdminUserArgs) ToAwsClusterAuthorizationAdminUserOutputWithContext(ctx context.Context) AwsClusterAuthorizationAdminUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsClusterAuthorizationAdminUserOutput)
}

// AwsClusterAuthorizationAdminUserArrayInput is an input type that accepts AwsClusterAuthorizationAdminUserArray and AwsClusterAuthorizationAdminUserArrayOutput values.
// You can construct a concrete instance of `AwsClusterAuthorizationAdminUserArrayInput` via:
//
//	AwsClusterAuthorizationAdminUserArray{ AwsClusterAuthorizationAdminUserArgs{...} }
type AwsClusterAuthorizationAdminUserArrayInput interface {
	pulumi.Input

	ToAwsClusterAuthorizationAdminUserArrayOutput() AwsClusterAuthorizationAdminUserArrayOutput
	ToAwsClusterAuthorizationAdminUserArrayOutputWithContext(context.Context) AwsClusterAuthorizationAdminUserArrayOutput
}

type AwsClusterAuthorizationAdminUserArray []AwsClusterAuthorizationAdminUserInput

func (AwsClusterAuthorizationAdminUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AwsClusterAuthorizationAdminUser)(nil)).Elem()
}

func (i AwsClusterAuthorizationAdminUserArray) ToAwsClusterAuthorizationAdminUserArrayOutput() AwsClusterAuthorizationAdminUserArrayOutput {
	return i.ToAwsClusterAuthorizationAdminUserArrayOutputWithContext(context.Background())
}

func (i AwsClusterAuthorizationAdminUserArray) ToAwsClusterAuthorizationAdminUserArrayOutputWithContext(ctx context.Context) AwsClusterAuthorizationAdminUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsClusterAuthorizationAdminUserArrayOutput)
}

type AwsClusterAuthorizationAdminUserOutput struct{ *pulumi.OutputState }

func (AwsClusterAuthorizationAdminUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsClusterAuthorizationAdminUser)(nil)).Elem()
}

func (o AwsClusterAuthorizationAdminUserOutput) ToAwsClusterAuthorizationAdminUserOutput() AwsClusterAuthorizationAdminUserOutput {
	return o
}

func (o AwsClusterAuthorizationAdminUserOutput) ToAwsClusterAuthorizationAdminUserOutputWithContext(ctx context.Context) AwsClusterAuthorizationAdminUserOutput {
	return o
}

// The name of the user, e.g. `my-gcp-id@gmail.com`.
func (o AwsClusterAuthorizationAdminUserOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v AwsClusterAuthorizationAdminUser) string { return v.Username }).(pulumi.StringOutput)
}

type AwsClusterAuthorizationAdminUserArrayOutput struct{ *pulumi.OutputState }

func (AwsClusterAuthorizationAdminUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AwsClusterAuthorizationAdminUser)(nil)).Elem()
}

func (o AwsClusterAuthorizationAdminUserArrayOutput) ToAwsClusterAuthorizationAdminUserArrayOutput() AwsClusterAuthorizationAdminUserArrayOutput {
	return o
}

func (o AwsClusterAuthorizationAdminUserArrayOutput) ToAwsClusterAuthorizationAdminUserArrayOutputWithContext(ctx context.Context) AwsClusterAuthorizationAdminUserArrayOutput {
	return o
}

func (o AwsClusterAuthorizationAdminUserArrayOutput) Index(i pulumi.IntInput) AwsClusterAuthorizationAdminUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AwsClusterAuthorizationAdminUser {
		return vs[0].([]AwsClusterAuthorizationAdminUser)[vs[1].(int)]
	}).(AwsClusterAuthorizationAdminUserOutput)
}

type AwsClusterBinaryAuthorization struct {
	// Mode of operation for Binary Authorization policy evaluation. Possible values: DISABLED, PROJECT_SINGLETON_POLICY_ENFORCE
	EvaluationMode *string `pulumi:"evaluationMode"`
}

// AwsClusterBinaryAuthorizationInput is an input type that accepts AwsClusterBinaryAuthorizationArgs and AwsClusterBinaryAuthorizationOutput values.
// You can construct a concrete instance of `AwsClusterBinaryAuthorizationInput` via:
//
//	AwsClusterBinaryAuthorizationArgs{...}
type AwsClusterBinaryAuthorizationInput interface {
	pulumi.Input

	ToAwsClusterBinaryAuthorizationOutput() AwsClusterBinaryAuthorizationOutput
	ToAwsClusterBinaryAuthorizationOutputWithContext(context.Context) AwsClusterBinaryAuthorizationOutput
}

type AwsClusterBinaryAuthorizationArgs struct {
	// Mode of operation for Binary Authorization policy evaluation. Possible values: DISABLED, PROJECT_SINGLETON_POLICY_ENFORCE
	EvaluationMode pulumi.StringPtrInput `pulumi:"evaluationMode"`
}

func (AwsClusterBinaryAuthorizationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsClusterBinaryAuthorization)(nil)).Elem()
}

func (i AwsClusterBinaryAuthorizationArgs) ToAwsClusterBinaryAuthorizationOutput() AwsClusterBinaryAuthorizationOutput {
	return i.ToAwsClusterBinaryAuthorizationOutputWithContext(context.Background())
}

func (i AwsClusterBinaryAuthorizationArgs) ToAwsClusterBinaryAuthorizationOutputWithContext(ctx context.Context) AwsClusterBinaryAuthorizationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsClusterBinaryAuthorizationOutput)
}

func (i AwsClusterBinaryAuthorizationArgs) ToAwsClusterBinaryAuthorizationPtrOutput() AwsClusterBinaryAuthorizationPtrOutput {
	return i.ToAwsClusterBinaryAuthorizationPtrOutputWithContext(context.Background())
}

func (i AwsClusterBinaryAuthorizationArgs) ToAwsClusterBinaryAuthorizationPtrOutputWithContext(ctx context.Context) AwsClusterBinaryAuthorizationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsClusterBinaryAuthorizationOutput).ToAwsClusterBinaryAuthorizationPtrOutputWithContext(ctx)
}

// AwsClusterBinaryAuthorizationPtrInput is an input type that accepts AwsClusterBinaryAuthorizationArgs, AwsClusterBinaryAuthorizationPtr and AwsClusterBinaryAuthorizationPtrOutput values.
// You can construct a concrete instance of `AwsClusterBinaryAuthorizationPtrInput` via:
//
//	        AwsClusterBinaryAuthorizationArgs{...}
//
//	or:
//
//	        nil
type AwsClusterBinaryAuthorizationPtrInput interface {
	pulumi.Input

	ToAwsClusterBinaryAuthorizationPtrOutput() AwsClusterBinaryAuthorizationPtrOutput
	ToAwsClusterBinaryAuthorizationPtrOutputWithContext(context.Context) AwsClusterBinaryAuthorizationPtrOutput
}

type awsClusterBinaryAuthorizationPtrType AwsClusterBinaryAuthorizationArgs

func AwsClusterBinaryAuthorizationPtr(v *AwsClusterBinaryAuthorizationArgs) AwsClusterBinaryAuthorizationPtrInput {
	return (*awsClusterBinaryAuthorizationPtrType)(v)
}

func (*awsClusterBinaryAuthorizationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsClusterBinaryAuthorization)(nil)).Elem()
}

func (i *awsClusterBinaryAuthorizationPtrType) ToAwsClusterBinaryAuthorizationPtrOutput() AwsClusterBinaryAuthorizationPtrOutput {
	return i.ToAwsClusterBinaryAuthorizationPtrOutputWithContext(context.Background())
}

func (i *awsClusterBinaryAuthorizationPtrType) ToAwsClusterBinaryAuthorizationPtrOutputWithContext(ctx context.Context) AwsClusterBinaryAuthorizationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsClusterBinaryAuthorizationPtrOutput)
}

type AwsClusterBinaryAuthorizationOutput struct{ *pulumi.OutputState }

func (AwsClusterBinaryAuthorizationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsClusterBinaryAuthorization)(nil)).Elem()
}

func (o AwsClusterBinaryAuthorizationOutput) ToAwsClusterBinaryAuthorizationOutput() AwsClusterBinaryAuthorizationOutput {
	return o
}

func (o AwsClusterBinaryAuthorizationOutput) ToAwsClusterBinaryAuthorizationOutputWithContext(ctx context.Context) AwsClusterBinaryAuthorizationOutput {
	return o
}

func (o AwsClusterBinaryAuthorizationOutput) ToAwsClusterBinaryAuthorizationPtrOutput() AwsClusterBinaryAuthorizationPtrOutput {
	return o.ToAwsClusterBinaryAuthorizationPtrOutputWithContext(context.Background())
}

func (o AwsClusterBinaryAuthorizationOutput) ToAwsClusterBinaryAuthorizationPtrOutputWithContext(ctx context.Context) AwsClusterBinaryAuthorizationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AwsClusterBinaryAuthorization) *AwsClusterBinaryAuthorization {
		return &v
	}).(AwsClusterBinaryAuthorizationPtrOutput)
}

// Mode of operation for Binary Authorization policy evaluation. Possible values: DISABLED, PROJECT_SINGLETON_POLICY_ENFORCE
func (o AwsClusterBinaryAuthorizationOutput) EvaluationMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsClusterBinaryAuthorization) *string { return v.EvaluationMode }).(pulumi.StringPtrOutput)
}

type AwsClusterBinaryAuthorizationPtrOutput struct{ *pulumi.OutputState }

func (AwsClusterBinaryAuthorizationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsClusterBinaryAuthorization)(nil)).Elem()
}

func (o AwsClusterBinaryAuthorizationPtrOutput) ToAwsClusterBinaryAuthorizationPtrOutput() AwsClusterBinaryAuthorizationPtrOutput {
	return o
}

func (o AwsClusterBinaryAuthorizationPtrOutput) ToAwsClusterBinaryAuthorizationPtrOutputWithContext(ctx context.Context) AwsClusterBinaryAuthorizationPtrOutput {
	return o
}

func (o AwsClusterBinaryAuthorizationPtrOutput) Elem() AwsClusterBinaryAuthorizationOutput {
	return o.ApplyT(func(v *AwsClusterBinaryAuthorization) AwsClusterBinaryAuthorization {
		if v != nil {
			return *v
		}
		var ret AwsClusterBinaryAuthorization
		return ret
	}).(AwsClusterBinaryAuthorizationOutput)
}

// Mode of operation for Binary Authorization policy evaluation. Possible values: DISABLED, PROJECT_SINGLETON_POLICY_ENFORCE
func (o AwsClusterBinaryAuthorizationPtrOutput) EvaluationMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsClusterBinaryAuthorization) *string {
		if v == nil {
			return nil
		}
		return v.EvaluationMode
	}).(pulumi.StringPtrOutput)
}

type AwsClusterControlPlane struct {
	// Authentication configuration for management of AWS resources.
	AwsServicesAuthentication AwsClusterControlPlaneAwsServicesAuthentication `pulumi:"awsServicesAuthentication"`
	// The ARN of the AWS KMS key used to encrypt cluster configuration.
	ConfigEncryption AwsClusterControlPlaneConfigEncryption `pulumi:"configEncryption"`
	// The ARN of the AWS KMS key used to encrypt cluster secrets.
	DatabaseEncryption AwsClusterControlPlaneDatabaseEncryption `pulumi:"databaseEncryption"`
	// The name of the AWS IAM instance pofile to assign to each control plane replica.
	IamInstanceProfile string `pulumi:"iamInstanceProfile"`
	// Details of placement information for an instance.
	InstancePlacement *AwsClusterControlPlaneInstancePlacement `pulumi:"instancePlacement"`
	// Optional. The AWS instance type. When unspecified, it defaults to `m5.large`.
	InstanceType *string `pulumi:"instanceType"`
	// Optional. Configuration related to the main volume provisioned for each control plane replica. The main volume is in charge of storing all of the cluster's etcd state. Volumes will be provisioned in the availability zone associated with the corresponding subnet. When unspecified, it defaults to 8 GiB with the GP2 volume type.
	MainVolume *AwsClusterControlPlaneMainVolume `pulumi:"mainVolume"`
	// Proxy configuration for outbound HTTP(S) traffic.
	ProxyConfig *AwsClusterControlPlaneProxyConfig `pulumi:"proxyConfig"`
	// Optional. Configuration related to the root volume provisioned for each control plane replica. Volumes will be provisioned in the availability zone associated with the corresponding subnet. When unspecified, it defaults to 32 GiB with the GP2 volume type.
	RootVolume *AwsClusterControlPlaneRootVolume `pulumi:"rootVolume"`
	// Optional. The IDs of additional security groups to add to control plane replicas. The Anthos Multi-Cloud API will automatically create and manage security groups with the minimum rules needed for a functioning cluster.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// Optional. SSH configuration for how to access the underlying control plane machines.
	SshConfig *AwsClusterControlPlaneSshConfig `pulumi:"sshConfig"`
	// The list of subnets where control plane replicas will run. A replica will be provisioned on each subnet and up to three values can be provided. Each subnet must be in a different AWS Availability Zone (AZ).
	SubnetIds []string `pulumi:"subnetIds"`
	// Optional. A set of AWS resource tags to propagate to all underlying managed AWS resources. Specify at most 50 pairs containing alphanumerics, spaces, and symbols (.+-=_:@/). Keys can be up to 127 Unicode characters. Values can be up to 255 Unicode characters.
	Tags map[string]string `pulumi:"tags"`
	// The Kubernetes version to run on control plane replicas (e.g. `1.19.10-gke.1000`). You can list all supported versions on a given Google Cloud region by calling .
	Version string `pulumi:"version"`
}

// AwsClusterControlPlaneInput is an input type that accepts AwsClusterControlPlaneArgs and AwsClusterControlPlaneOutput values.
// You can construct a concrete instance of `AwsClusterControlPlaneInput` via:
//
//	AwsClusterControlPlaneArgs{...}
type AwsClusterControlPlaneInput interface {
	pulumi.Input

	ToAwsClusterControlPlaneOutput() AwsClusterControlPlaneOutput
	ToAwsClusterControlPlaneOutputWithContext(context.Context) AwsClusterControlPlaneOutput
}

type AwsClusterControlPlaneArgs struct {
	// Authentication configuration for management of AWS resources.
	AwsServicesAuthentication AwsClusterControlPlaneAwsServicesAuthenticationInput `pulumi:"awsServicesAuthentication"`
	// The ARN of the AWS KMS key used to encrypt cluster configuration.
	ConfigEncryption AwsClusterControlPlaneConfigEncryptionInput `pulumi:"configEncryption"`
	// The ARN of the AWS KMS key used to encrypt cluster secrets.
	DatabaseEncryption AwsClusterControlPlaneDatabaseEncryptionInput `pulumi:"databaseEncryption"`
	// The name of the AWS IAM instance pofile to assign to each control plane replica.
	IamInstanceProfile pulumi.StringInput `pulumi:"iamInstanceProfile"`
	// Details of placement information for an instance.
	InstancePlacement AwsClusterControlPlaneInstancePlacementPtrInput `pulumi:"instancePlacement"`
	// Optional. The AWS instance type. When unspecified, it defaults to `m5.large`.
	InstanceType pulumi.StringPtrInput `pulumi:"instanceType"`
	// Optional. Configuration related to the main volume provisioned for each control plane replica. The main volume is in charge of storing all of the cluster's etcd state. Volumes will be provisioned in the availability zone associated with the corresponding subnet. When unspecified, it defaults to 8 GiB with the GP2 volume type.
	MainVolume AwsClusterControlPlaneMainVolumePtrInput `pulumi:"mainVolume"`
	// Proxy configuration for outbound HTTP(S) traffic.
	ProxyConfig AwsClusterControlPlaneProxyConfigPtrInput `pulumi:"proxyConfig"`
	// Optional. Configuration related to the root volume provisioned for each control plane replica. Volumes will be provisioned in the availability zone associated with the corresponding subnet. When unspecified, it defaults to 32 GiB with the GP2 volume type.
	RootVolume AwsClusterControlPlaneRootVolumePtrInput `pulumi:"rootVolume"`
	// Optional. The IDs of additional security groups to add to control plane replicas. The Anthos Multi-Cloud API will automatically create and manage security groups with the minimum rules needed for a functioning cluster.
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	// Optional. SSH configuration for how to access the underlying control plane machines.
	SshConfig AwsClusterControlPlaneSshConfigPtrInput `pulumi:"sshConfig"`
	// The list of subnets where control plane replicas will run. A replica will be provisioned on each subnet and up to three values can be provided. Each subnet must be in a different AWS Availability Zone (AZ).
	SubnetIds pulumi.StringArrayInput `pulumi:"subnetIds"`
	// Optional. A set of AWS resource tags to propagate to all underlying managed AWS resources. Specify at most 50 pairs containing alphanumerics, spaces, and symbols (.+-=_:@/). Keys can be up to 127 Unicode characters. Values can be up to 255 Unicode characters.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// The Kubernetes version to run on control plane replicas (e.g. `1.19.10-gke.1000`). You can list all supported versions on a given Google Cloud region by calling .
	Version pulumi.StringInput `pulumi:"version"`
}

func (AwsClusterControlPlaneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsClusterControlPlane)(nil)).Elem()
}

func (i AwsClusterControlPlaneArgs) ToAwsClusterControlPlaneOutput() AwsClusterControlPlaneOutput {
	return i.ToAwsClusterControlPlaneOutputWithContext(context.Background())
}

func (i AwsClusterControlPlaneArgs) ToAwsClusterControlPlaneOutputWithContext(ctx context.Context) AwsClusterControlPlaneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsClusterControlPlaneOutput)
}

func (i AwsClusterControlPlaneArgs) ToAwsClusterControlPlanePtrOutput() AwsClusterControlPlanePtrOutput {
	return i.ToAwsClusterControlPlanePtrOutputWithContext(context.Background())
}

func (i AwsClusterControlPlaneArgs) ToAwsClusterControlPlanePtrOutputWithContext(ctx context.Context) AwsClusterControlPlanePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsClusterControlPlaneOutput).ToAwsClusterControlPlanePtrOutputWithContext(ctx)
}

// AwsClusterControlPlanePtrInput is an input type that accepts AwsClusterControlPlaneArgs, AwsClusterControlPlanePtr and AwsClusterControlPlanePtrOutput values.
// You can construct a concrete instance of `AwsClusterControlPlanePtrInput` via:
//
//	        AwsClusterControlPlaneArgs{...}
//
//	or:
//
//	        nil
type AwsClusterControlPlanePtrInput interface {
	pulumi.Input

	ToAwsClusterControlPlanePtrOutput() AwsClusterControlPlanePtrOutput
	ToAwsClusterControlPlanePtrOutputWithContext(context.Context) AwsClusterControlPlanePtrOutput
}

type awsClusterControlPlanePtrType AwsClusterControlPlaneArgs

func AwsClusterControlPlanePtr(v *AwsClusterControlPlaneArgs) AwsClusterControlPlanePtrInput {
	return (*awsClusterControlPlanePtrType)(v)
}

func (*awsClusterControlPlanePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsClusterControlPlane)(nil)).Elem()
}

func (i *awsClusterControlPlanePtrType) ToAwsClusterControlPlanePtrOutput() AwsClusterControlPlanePtrOutput {
	return i.ToAwsClusterControlPlanePtrOutputWithContext(context.Background())
}

func (i *awsClusterControlPlanePtrType) ToAwsClusterControlPlanePtrOutputWithContext(ctx context.Context) AwsClusterControlPlanePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsClusterControlPlanePtrOutput)
}

type AwsClusterControlPlaneOutput struct{ *pulumi.OutputState }

func (AwsClusterControlPlaneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsClusterControlPlane)(nil)).Elem()
}

func (o AwsClusterControlPlaneOutput) ToAwsClusterControlPlaneOutput() AwsClusterControlPlaneOutput {
	return o
}

func (o AwsClusterControlPlaneOutput) ToAwsClusterControlPlaneOutputWithContext(ctx context.Context) AwsClusterControlPlaneOutput {
	return o
}

func (o AwsClusterControlPlaneOutput) ToAwsClusterControlPlanePtrOutput() AwsClusterControlPlanePtrOutput {
	return o.ToAwsClusterControlPlanePtrOutputWithContext(context.Background())
}

func (o AwsClusterControlPlaneOutput) ToAwsClusterControlPlanePtrOutputWithContext(ctx context.Context) AwsClusterControlPlanePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AwsClusterControlPlane) *AwsClusterControlPlane {
		return &v
	}).(AwsClusterControlPlanePtrOutput)
}

// Authentication configuration for management of AWS resources.
func (o AwsClusterControlPlaneOutput) AwsServicesAuthentication() AwsClusterControlPlaneAwsServicesAuthenticationOutput {
	return o.ApplyT(func(v AwsClusterControlPlane) AwsClusterControlPlaneAwsServicesAuthentication {
		return v.AwsServicesAuthentication
	}).(AwsClusterControlPlaneAwsServicesAuthenticationOutput)
}

// The ARN of the AWS KMS key used to encrypt cluster configuration.
func (o AwsClusterControlPlaneOutput) ConfigEncryption() AwsClusterControlPlaneConfigEncryptionOutput {
	return o.ApplyT(func(v AwsClusterControlPlane) AwsClusterControlPlaneConfigEncryption { return v.ConfigEncryption }).(AwsClusterControlPlaneConfigEncryptionOutput)
}

// The ARN of the AWS KMS key used to encrypt cluster secrets.
func (o AwsClusterControlPlaneOutput) DatabaseEncryption() AwsClusterControlPlaneDatabaseEncryptionOutput {
	return o.ApplyT(func(v AwsClusterControlPlane) AwsClusterControlPlaneDatabaseEncryption { return v.DatabaseEncryption }).(AwsClusterControlPlaneDatabaseEncryptionOutput)
}

// The name of the AWS IAM instance pofile to assign to each control plane replica.
func (o AwsClusterControlPlaneOutput) IamInstanceProfile() pulumi.StringOutput {
	return o.ApplyT(func(v AwsClusterControlPlane) string { return v.IamInstanceProfile }).(pulumi.StringOutput)
}

// Details of placement information for an instance.
func (o AwsClusterControlPlaneOutput) InstancePlacement() AwsClusterControlPlaneInstancePlacementPtrOutput {
	return o.ApplyT(func(v AwsClusterControlPlane) *AwsClusterControlPlaneInstancePlacement { return v.InstancePlacement }).(AwsClusterControlPlaneInstancePlacementPtrOutput)
}

// Optional. The AWS instance type. When unspecified, it defaults to `m5.large`.
func (o AwsClusterControlPlaneOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsClusterControlPlane) *string { return v.InstanceType }).(pulumi.StringPtrOutput)
}

// Optional. Configuration related to the main volume provisioned for each control plane replica. The main volume is in charge of storing all of the cluster's etcd state. Volumes will be provisioned in the availability zone associated with the corresponding subnet. When unspecified, it defaults to 8 GiB with the GP2 volume type.
func (o AwsClusterControlPlaneOutput) MainVolume() AwsClusterControlPlaneMainVolumePtrOutput {
	return o.ApplyT(func(v AwsClusterControlPlane) *AwsClusterControlPlaneMainVolume { return v.MainVolume }).(AwsClusterControlPlaneMainVolumePtrOutput)
}

// Proxy configuration for outbound HTTP(S) traffic.
func (o AwsClusterControlPlaneOutput) ProxyConfig() AwsClusterControlPlaneProxyConfigPtrOutput {
	return o.ApplyT(func(v AwsClusterControlPlane) *AwsClusterControlPlaneProxyConfig { return v.ProxyConfig }).(AwsClusterControlPlaneProxyConfigPtrOutput)
}

// Optional. Configuration related to the root volume provisioned for each control plane replica. Volumes will be provisioned in the availability zone associated with the corresponding subnet. When unspecified, it defaults to 32 GiB with the GP2 volume type.
func (o AwsClusterControlPlaneOutput) RootVolume() AwsClusterControlPlaneRootVolumePtrOutput {
	return o.ApplyT(func(v AwsClusterControlPlane) *AwsClusterControlPlaneRootVolume { return v.RootVolume }).(AwsClusterControlPlaneRootVolumePtrOutput)
}

// Optional. The IDs of additional security groups to add to control plane replicas. The Anthos Multi-Cloud API will automatically create and manage security groups with the minimum rules needed for a functioning cluster.
func (o AwsClusterControlPlaneOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AwsClusterControlPlane) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// Optional. SSH configuration for how to access the underlying control plane machines.
func (o AwsClusterControlPlaneOutput) SshConfig() AwsClusterControlPlaneSshConfigPtrOutput {
	return o.ApplyT(func(v AwsClusterControlPlane) *AwsClusterControlPlaneSshConfig { return v.SshConfig }).(AwsClusterControlPlaneSshConfigPtrOutput)
}

// The list of subnets where control plane replicas will run. A replica will be provisioned on each subnet and up to three values can be provided. Each subnet must be in a different AWS Availability Zone (AZ).
func (o AwsClusterControlPlaneOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AwsClusterControlPlane) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

// Optional. A set of AWS resource tags to propagate to all underlying managed AWS resources. Specify at most 50 pairs containing alphanumerics, spaces, and symbols (.+-=_:@/). Keys can be up to 127 Unicode characters. Values can be up to 255 Unicode characters.
func (o AwsClusterControlPlaneOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v AwsClusterControlPlane) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The Kubernetes version to run on control plane replicas (e.g. `1.19.10-gke.1000`). You can list all supported versions on a given Google Cloud region by calling .
func (o AwsClusterControlPlaneOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v AwsClusterControlPlane) string { return v.Version }).(pulumi.StringOutput)
}

type AwsClusterControlPlanePtrOutput struct{ *pulumi.OutputState }

func (AwsClusterControlPlanePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsClusterControlPlane)(nil)).Elem()
}

func (o AwsClusterControlPlanePtrOutput) ToAwsClusterControlPlanePtrOutput() AwsClusterControlPlanePtrOutput {
	return o
}

func (o AwsClusterControlPlanePtrOutput) ToAwsClusterControlPlanePtrOutputWithContext(ctx context.Context) AwsClusterControlPlanePtrOutput {
	return o
}

func (o AwsClusterControlPlanePtrOutput) Elem() AwsClusterControlPlaneOutput {
	return o.ApplyT(func(v *AwsClusterControlPlane) AwsClusterControlPlane {
		if v != nil {
			return *v
		}
		var ret AwsClusterControlPlane
		return ret
	}).(AwsClusterControlPlaneOutput)
}

// Authentication configuration for management of AWS resources.
func (o AwsClusterControlPlanePtrOutput) AwsServicesAuthentication() AwsClusterControlPlaneAwsServicesAuthenticationPtrOutput {
	return o.ApplyT(func(v *AwsClusterControlPlane) *AwsClusterControlPlaneAwsServicesAuthentication {
		if v == nil {
			return nil
		}
		return &v.AwsServicesAuthentication
	}).(AwsClusterControlPlaneAwsServicesAuthenticationPtrOutput)
}

// The ARN of the AWS KMS key used to encrypt cluster configuration.
func (o AwsClusterControlPlanePtrOutput) ConfigEncryption() AwsClusterControlPlaneConfigEncryptionPtrOutput {
	return o.ApplyT(func(v *AwsClusterControlPlane) *AwsClusterControlPlaneConfigEncryption {
		if v == nil {
			return nil
		}
		return &v.ConfigEncryption
	}).(AwsClusterControlPlaneConfigEncryptionPtrOutput)
}

// The ARN of the AWS KMS key used to encrypt cluster secrets.
func (o AwsClusterControlPlanePtrOutput) DatabaseEncryption() AwsClusterControlPlaneDatabaseEncryptionPtrOutput {
	return o.ApplyT(func(v *AwsClusterControlPlane) *AwsClusterControlPlaneDatabaseEncryption {
		if v == nil {
			return nil
		}
		return &v.DatabaseEncryption
	}).(AwsClusterControlPlaneDatabaseEncryptionPtrOutput)
}

// The name of the AWS IAM instance pofile to assign to each control plane replica.
func (o AwsClusterControlPlanePtrOutput) IamInstanceProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsClusterControlPlane) *string {
		if v == nil {
			return nil
		}
		return &v.IamInstanceProfile
	}).(pulumi.StringPtrOutput)
}

// Details of placement information for an instance.
func (o AwsClusterControlPlanePtrOutput) InstancePlacement() AwsClusterControlPlaneInstancePlacementPtrOutput {
	return o.ApplyT(func(v *AwsClusterControlPlane) *AwsClusterControlPlaneInstancePlacement {
		if v == nil {
			return nil
		}
		return v.InstancePlacement
	}).(AwsClusterControlPlaneInstancePlacementPtrOutput)
}

// Optional. The AWS instance type. When unspecified, it defaults to `m5.large`.
func (o AwsClusterControlPlanePtrOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsClusterControlPlane) *string {
		if v == nil {
			return nil
		}
		return v.InstanceType
	}).(pulumi.StringPtrOutput)
}

// Optional. Configuration related to the main volume provisioned for each control plane replica. The main volume is in charge of storing all of the cluster's etcd state. Volumes will be provisioned in the availability zone associated with the corresponding subnet. When unspecified, it defaults to 8 GiB with the GP2 volume type.
func (o AwsClusterControlPlanePtrOutput) MainVolume() AwsClusterControlPlaneMainVolumePtrOutput {
	return o.ApplyT(func(v *AwsClusterControlPlane) *AwsClusterControlPlaneMainVolume {
		if v == nil {
			return nil
		}
		return v.MainVolume
	}).(AwsClusterControlPlaneMainVolumePtrOutput)
}

// Proxy configuration for outbound HTTP(S) traffic.
func (o AwsClusterControlPlanePtrOutput) ProxyConfig() AwsClusterControlPlaneProxyConfigPtrOutput {
	return o.ApplyT(func(v *AwsClusterControlPlane) *AwsClusterControlPlaneProxyConfig {
		if v == nil {
			return nil
		}
		return v.ProxyConfig
	}).(AwsClusterControlPlaneProxyConfigPtrOutput)
}

// Optional. Configuration related to the root volume provisioned for each control plane replica. Volumes will be provisioned in the availability zone associated with the corresponding subnet. When unspecified, it defaults to 32 GiB with the GP2 volume type.
func (o AwsClusterControlPlanePtrOutput) RootVolume() AwsClusterControlPlaneRootVolumePtrOutput {
	return o.ApplyT(func(v *AwsClusterControlPlane) *AwsClusterControlPlaneRootVolume {
		if v == nil {
			return nil
		}
		return v.RootVolume
	}).(AwsClusterControlPlaneRootVolumePtrOutput)
}

// Optional. The IDs of additional security groups to add to control plane replicas. The Anthos Multi-Cloud API will automatically create and manage security groups with the minimum rules needed for a functioning cluster.
func (o AwsClusterControlPlanePtrOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AwsClusterControlPlane) []string {
		if v == nil {
			return nil
		}
		return v.SecurityGroupIds
	}).(pulumi.StringArrayOutput)
}

// Optional. SSH configuration for how to access the underlying control plane machines.
func (o AwsClusterControlPlanePtrOutput) SshConfig() AwsClusterControlPlaneSshConfigPtrOutput {
	return o.ApplyT(func(v *AwsClusterControlPlane) *AwsClusterControlPlaneSshConfig {
		if v == nil {
			return nil
		}
		return v.SshConfig
	}).(AwsClusterControlPlaneSshConfigPtrOutput)
}

// The list of subnets where control plane replicas will run. A replica will be provisioned on each subnet and up to three values can be provided. Each subnet must be in a different AWS Availability Zone (AZ).
func (o AwsClusterControlPlanePtrOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AwsClusterControlPlane) []string {
		if v == nil {
			return nil
		}
		return v.SubnetIds
	}).(pulumi.StringArrayOutput)
}

// Optional. A set of AWS resource tags to propagate to all underlying managed AWS resources. Specify at most 50 pairs containing alphanumerics, spaces, and symbols (.+-=_:@/). Keys can be up to 127 Unicode characters. Values can be up to 255 Unicode characters.
func (o AwsClusterControlPlanePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AwsClusterControlPlane) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// The Kubernetes version to run on control plane replicas (e.g. `1.19.10-gke.1000`). You can list all supported versions on a given Google Cloud region by calling .
func (o AwsClusterControlPlanePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsClusterControlPlane) *string {
		if v == nil {
			return nil
		}
		return &v.Version
	}).(pulumi.StringPtrOutput)
}

type AwsClusterControlPlaneAwsServicesAuthentication struct {
	// The Amazon Resource Name (ARN) of the role that the Anthos Multi-Cloud API will assume when managing AWS resources on your account.
	RoleArn string `pulumi:"roleArn"`
	// Optional. An identifier for the assumed role session. When unspecified, it defaults to `multicloud-service-agent`.
	RoleSessionName *string `pulumi:"roleSessionName"`
}

// AwsClusterControlPlaneAwsServicesAuthenticationInput is an input type that accepts AwsClusterControlPlaneAwsServicesAuthenticationArgs and AwsClusterControlPlaneAwsServicesAuthenticationOutput values.
// You can construct a concrete instance of `AwsClusterControlPlaneAwsServicesAuthenticationInput` via:
//
//	AwsClusterControlPlaneAwsServicesAuthenticationArgs{...}
type AwsClusterControlPlaneAwsServicesAuthenticationInput interface {
	pulumi.Input

	ToAwsClusterControlPlaneAwsServicesAuthenticationOutput() AwsClusterControlPlaneAwsServicesAuthenticationOutput
	ToAwsClusterControlPlaneAwsServicesAuthenticationOutputWithContext(context.Context) AwsClusterControlPlaneAwsServicesAuthenticationOutput
}

type AwsClusterControlPlaneAwsServicesAuthenticationArgs struct {
	// The Amazon Resource Name (ARN) of the role that the Anthos Multi-Cloud API will assume when managing AWS resources on your account.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// Optional. An identifier for the assumed role session. When unspecified, it defaults to `multicloud-service-agent`.
	RoleSessionName pulumi.StringPtrInput `pulumi:"roleSessionName"`
}

func (AwsClusterControlPlaneAwsServicesAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsClusterControlPlaneAwsServicesAuthentication)(nil)).Elem()
}

func (i AwsClusterControlPlaneAwsServicesAuthenticationArgs) ToAwsClusterControlPlaneAwsServicesAuthenticationOutput() AwsClusterControlPlaneAwsServicesAuthenticationOutput {
	return i.ToAwsClusterControlPlaneAwsServicesAuthenticationOutputWithContext(context.Background())
}

func (i AwsClusterControlPlaneAwsServicesAuthenticationArgs) ToAwsClusterControlPlaneAwsServicesAuthenticationOutputWithContext(ctx context.Context) AwsClusterControlPlaneAwsServicesAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsClusterControlPlaneAwsServicesAuthenticationOutput)
}

func (i AwsClusterControlPlaneAwsServicesAuthenticationArgs) ToAwsClusterControlPlaneAwsServicesAuthenticationPtrOutput() AwsClusterControlPlaneAwsServicesAuthenticationPtrOutput {
	return i.ToAwsClusterControlPlaneAwsServicesAuthenticationPtrOutputWithContext(context.Background())
}

func (i AwsClusterControlPlaneAwsServicesAuthenticationArgs) ToAwsClusterControlPlaneAwsServicesAuthenticationPtrOutputWithContext(ctx context.Context) AwsClusterControlPlaneAwsServicesAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsClusterControlPlaneAwsServicesAuthenticationOutput).ToAwsClusterControlPlaneAwsServicesAuthenticationPtrOutputWithContext(ctx)
}

// AwsClusterControlPlaneAwsServicesAuthenticationPtrInput is an input type that accepts AwsClusterControlPlaneAwsServicesAuthenticationArgs, AwsClusterControlPlaneAwsServicesAuthenticationPtr and AwsClusterControlPlaneAwsServicesAuthenticationPtrOutput values.
// You can construct a concrete instance of `AwsClusterControlPlaneAwsServicesAuthenticationPtrInput` via:
//
//	        AwsClusterControlPlaneAwsServicesAuthenticationArgs{...}
//
//	or:
//
//	        nil
type AwsClusterControlPlaneAwsServicesAuthenticationPtrInput interface {
	pulumi.Input

	ToAwsClusterControlPlaneAwsServicesAuthenticationPtrOutput() AwsClusterControlPlaneAwsServicesAuthenticationPtrOutput
	ToAwsClusterControlPlaneAwsServicesAuthenticationPtrOutputWithContext(context.Context) AwsClusterControlPlaneAwsServicesAuthenticationPtrOutput
}

type awsClusterControlPlaneAwsServicesAuthenticationPtrType AwsClusterControlPlaneAwsServicesAuthenticationArgs

func AwsClusterControlPlaneAwsServicesAuthenticationPtr(v *AwsClusterControlPlaneAwsServicesAuthenticationArgs) AwsClusterControlPlaneAwsServicesAuthenticationPtrInput {
	return (*awsClusterControlPlaneAwsServicesAuthenticationPtrType)(v)
}

func (*awsClusterControlPlaneAwsServicesAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsClusterControlPlaneAwsServicesAuthentication)(nil)).Elem()
}

func (i *awsClusterControlPlaneAwsServicesAuthenticationPtrType) ToAwsClusterControlPlaneAwsServicesAuthenticationPtrOutput() AwsClusterControlPlaneAwsServicesAuthenticationPtrOutput {
	return i.ToAwsClusterControlPlaneAwsServicesAuthenticationPtrOutputWithContext(context.Background())
}

func (i *awsClusterControlPlaneAwsServicesAuthenticationPtrType) ToAwsClusterControlPlaneAwsServicesAuthenticationPtrOutputWithContext(ctx context.Context) AwsClusterControlPlaneAwsServicesAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsClusterControlPlaneAwsServicesAuthenticationPtrOutput)
}

type AwsClusterControlPlaneAwsServicesAuthenticationOutput struct{ *pulumi.OutputState }

func (AwsClusterControlPlaneAwsServicesAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsClusterControlPlaneAwsServicesAuthentication)(nil)).Elem()
}

func (o AwsClusterControlPlaneAwsServicesAuthenticationOutput) ToAwsClusterControlPlaneAwsServicesAuthenticationOutput() AwsClusterControlPlaneAwsServicesAuthenticationOutput {
	return o
}

func (o AwsClusterControlPlaneAwsServicesAuthenticationOutput) ToAwsClusterControlPlaneAwsServicesAuthenticationOutputWithContext(ctx context.Context) AwsClusterControlPlaneAwsServicesAuthenticationOutput {
	return o
}

func (o AwsClusterControlPlaneAwsServicesAuthenticationOutput) ToAwsClusterControlPlaneAwsServicesAuthenticationPtrOutput() AwsClusterControlPlaneAwsServicesAuthenticationPtrOutput {
	return o.ToAwsClusterControlPlaneAwsServicesAuthenticationPtrOutputWithContext(context.Background())
}

func (o AwsClusterControlPlaneAwsServicesAuthenticationOutput) ToAwsClusterControlPlaneAwsServicesAuthenticationPtrOutputWithContext(ctx context.Context) AwsClusterControlPlaneAwsServicesAuthenticationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AwsClusterControlPlaneAwsServicesAuthentication) *AwsClusterControlPlaneAwsServicesAuthentication {
		return &v
	}).(AwsClusterControlPlaneAwsServicesAuthenticationPtrOutput)
}

// The Amazon Resource Name (ARN) of the role that the Anthos Multi-Cloud API will assume when managing AWS resources on your account.
func (o AwsClusterControlPlaneAwsServicesAuthenticationOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v AwsClusterControlPlaneAwsServicesAuthentication) string { return v.RoleArn }).(pulumi.StringOutput)
}

// Optional. An identifier for the assumed role session. When unspecified, it defaults to `multicloud-service-agent`.
func (o AwsClusterControlPlaneAwsServicesAuthenticationOutput) RoleSessionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsClusterControlPlaneAwsServicesAuthentication) *string { return v.RoleSessionName }).(pulumi.StringPtrOutput)
}

type AwsClusterControlPlaneAwsServicesAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (AwsClusterControlPlaneAwsServicesAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsClusterControlPlaneAwsServicesAuthentication)(nil)).Elem()
}

func (o AwsClusterControlPlaneAwsServicesAuthenticationPtrOutput) ToAwsClusterControlPlaneAwsServicesAuthenticationPtrOutput() AwsClusterControlPlaneAwsServicesAuthenticationPtrOutput {
	return o
}

func (o AwsClusterControlPlaneAwsServicesAuthenticationPtrOutput) ToAwsClusterControlPlaneAwsServicesAuthenticationPtrOutputWithContext(ctx context.Context) AwsClusterControlPlaneAwsServicesAuthenticationPtrOutput {
	return o
}

func (o AwsClusterControlPlaneAwsServicesAuthenticationPtrOutput) Elem() AwsClusterControlPlaneAwsServicesAuthenticationOutput {
	return o.ApplyT(func(v *AwsClusterControlPlaneAwsServicesAuthentication) AwsClusterControlPlaneAwsServicesAuthentication {
		if v != nil {
			return *v
		}
		var ret AwsClusterControlPlaneAwsServicesAuthentication
		return ret
	}).(AwsClusterControlPlaneAwsServicesAuthenticationOutput)
}

// The Amazon Resource Name (ARN) of the role that the Anthos Multi-Cloud API will assume when managing AWS resources on your account.
func (o AwsClusterControlPlaneAwsServicesAuthenticationPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsClusterControlPlaneAwsServicesAuthentication) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// Optional. An identifier for the assumed role session. When unspecified, it defaults to `multicloud-service-agent`.
func (o AwsClusterControlPlaneAwsServicesAuthenticationPtrOutput) RoleSessionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsClusterControlPlaneAwsServicesAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.RoleSessionName
	}).(pulumi.StringPtrOutput)
}

type AwsClusterControlPlaneConfigEncryption struct {
	// The ARN of the AWS KMS key used to encrypt cluster configuration.
	KmsKeyArn string `pulumi:"kmsKeyArn"`
}

// AwsClusterControlPlaneConfigEncryptionInput is an input type that accepts AwsClusterControlPlaneConfigEncryptionArgs and AwsClusterControlPlaneConfigEncryptionOutput values.
// You can construct a concrete instance of `AwsClusterControlPlaneConfigEncryptionInput` via:
//
//	AwsClusterControlPlaneConfigEncryptionArgs{...}
type AwsClusterControlPlaneConfigEncryptionInput interface {
	pulumi.Input

	ToAwsClusterControlPlaneConfigEncryptionOutput() AwsClusterControlPlaneConfigEncryptionOutput
	ToAwsClusterControlPlaneConfigEncryptionOutputWithContext(context.Context) AwsClusterControlPlaneConfigEncryptionOutput
}

type AwsClusterControlPlaneConfigEncryptionArgs struct {
	// The ARN of the AWS KMS key used to encrypt cluster configuration.
	KmsKeyArn pulumi.StringInput `pulumi:"kmsKeyArn"`
}

func (AwsClusterControlPlaneConfigEncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsClusterControlPlaneConfigEncryption)(nil)).Elem()
}

func (i AwsClusterControlPlaneConfigEncryptionArgs) ToAwsClusterControlPlaneConfigEncryptionOutput() AwsClusterControlPlaneConfigEncryptionOutput {
	return i.ToAwsClusterControlPlaneConfigEncryptionOutputWithContext(context.Background())
}

func (i AwsClusterControlPlaneConfigEncryptionArgs) ToAwsClusterControlPlaneConfigEncryptionOutputWithContext(ctx context.Context) AwsClusterControlPlaneConfigEncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsClusterControlPlaneConfigEncryptionOutput)
}

func (i AwsClusterControlPlaneConfigEncryptionArgs) ToAwsClusterControlPlaneConfigEncryptionPtrOutput() AwsClusterControlPlaneConfigEncryptionPtrOutput {
	return i.ToAwsClusterControlPlaneConfigEncryptionPtrOutputWithContext(context.Background())
}

func (i AwsClusterControlPlaneConfigEncryptionArgs) ToAwsClusterControlPlaneConfigEncryptionPtrOutputWithContext(ctx context.Context) AwsClusterControlPlaneConfigEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsClusterControlPlaneConfigEncryptionOutput).ToAwsClusterControlPlaneConfigEncryptionPtrOutputWithContext(ctx)
}

// AwsClusterControlPlaneConfigEncryptionPtrInput is an input type that accepts AwsClusterControlPlaneConfigEncryptionArgs, AwsClusterControlPlaneConfigEncryptionPtr and AwsClusterControlPlaneConfigEncryptionPtrOutput values.
// You can construct a concrete instance of `AwsClusterControlPlaneConfigEncryptionPtrInput` via:
//
//	        AwsClusterControlPlaneConfigEncryptionArgs{...}
//
//	or:
//
//	        nil
type AwsClusterControlPlaneConfigEncryptionPtrInput interface {
	pulumi.Input

	ToAwsClusterControlPlaneConfigEncryptionPtrOutput() AwsClusterControlPlaneConfigEncryptionPtrOutput
	ToAwsClusterControlPlaneConfigEncryptionPtrOutputWithContext(context.Context) AwsClusterControlPlaneConfigEncryptionPtrOutput
}

type awsClusterControlPlaneConfigEncryptionPtrType AwsClusterControlPlaneConfigEncryptionArgs

func AwsClusterControlPlaneConfigEncryptionPtr(v *AwsClusterControlPlaneConfigEncryptionArgs) AwsClusterControlPlaneConfigEncryptionPtrInput {
	return (*awsClusterControlPlaneConfigEncryptionPtrType)(v)
}

func (*awsClusterControlPlaneConfigEncryptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsClusterControlPlaneConfigEncryption)(nil)).Elem()
}

func (i *awsClusterControlPlaneConfigEncryptionPtrType) ToAwsClusterControlPlaneConfigEncryptionPtrOutput() AwsClusterControlPlaneConfigEncryptionPtrOutput {
	return i.ToAwsClusterControlPlaneConfigEncryptionPtrOutputWithContext(context.Background())
}

func (i *awsClusterControlPlaneConfigEncryptionPtrType) ToAwsClusterControlPlaneConfigEncryptionPtrOutputWithContext(ctx context.Context) AwsClusterControlPlaneConfigEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsClusterControlPlaneConfigEncryptionPtrOutput)
}

type AwsClusterControlPlaneConfigEncryptionOutput struct{ *pulumi.OutputState }

func (AwsClusterControlPlaneConfigEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsClusterControlPlaneConfigEncryption)(nil)).Elem()
}

func (o AwsClusterControlPlaneConfigEncryptionOutput) ToAwsClusterControlPlaneConfigEncryptionOutput() AwsClusterControlPlaneConfigEncryptionOutput {
	return o
}

func (o AwsClusterControlPlaneConfigEncryptionOutput) ToAwsClusterControlPlaneConfigEncryptionOutputWithContext(ctx context.Context) AwsClusterControlPlaneConfigEncryptionOutput {
	return o
}

func (o AwsClusterControlPlaneConfigEncryptionOutput) ToAwsClusterControlPlaneConfigEncryptionPtrOutput() AwsClusterControlPlaneConfigEncryptionPtrOutput {
	return o.ToAwsClusterControlPlaneConfigEncryptionPtrOutputWithContext(context.Background())
}

func (o AwsClusterControlPlaneConfigEncryptionOutput) ToAwsClusterControlPlaneConfigEncryptionPtrOutputWithContext(ctx context.Context) AwsClusterControlPlaneConfigEncryptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AwsClusterControlPlaneConfigEncryption) *AwsClusterControlPlaneConfigEncryption {
		return &v
	}).(AwsClusterControlPlaneConfigEncryptionPtrOutput)
}

// The ARN of the AWS KMS key used to encrypt cluster configuration.
func (o AwsClusterControlPlaneConfigEncryptionOutput) KmsKeyArn() pulumi.StringOutput {
	return o.ApplyT(func(v AwsClusterControlPlaneConfigEncryption) string { return v.KmsKeyArn }).(pulumi.StringOutput)
}

type AwsClusterControlPlaneConfigEncryptionPtrOutput struct{ *pulumi.OutputState }

func (AwsClusterControlPlaneConfigEncryptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsClusterControlPlaneConfigEncryption)(nil)).Elem()
}

func (o AwsClusterControlPlaneConfigEncryptionPtrOutput) ToAwsClusterControlPlaneConfigEncryptionPtrOutput() AwsClusterControlPlaneConfigEncryptionPtrOutput {
	return o
}

func (o AwsClusterControlPlaneConfigEncryptionPtrOutput) ToAwsClusterControlPlaneConfigEncryptionPtrOutputWithContext(ctx context.Context) AwsClusterControlPlaneConfigEncryptionPtrOutput {
	return o
}

func (o AwsClusterControlPlaneConfigEncryptionPtrOutput) Elem() AwsClusterControlPlaneConfigEncryptionOutput {
	return o.ApplyT(func(v *AwsClusterControlPlaneConfigEncryption) AwsClusterControlPlaneConfigEncryption {
		if v != nil {
			return *v
		}
		var ret AwsClusterControlPlaneConfigEncryption
		return ret
	}).(AwsClusterControlPlaneConfigEncryptionOutput)
}

// The ARN of the AWS KMS key used to encrypt cluster configuration.
func (o AwsClusterControlPlaneConfigEncryptionPtrOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsClusterControlPlaneConfigEncryption) *string {
		if v == nil {
			return nil
		}
		return &v.KmsKeyArn
	}).(pulumi.StringPtrOutput)
}

type AwsClusterControlPlaneDatabaseEncryption struct {
	// The ARN of the AWS KMS key used to encrypt cluster secrets.
	KmsKeyArn string `pulumi:"kmsKeyArn"`
}

// AwsClusterControlPlaneDatabaseEncryptionInput is an input type that accepts AwsClusterControlPlaneDatabaseEncryptionArgs and AwsClusterControlPlaneDatabaseEncryptionOutput values.
// You can construct a concrete instance of `AwsClusterControlPlaneDatabaseEncryptionInput` via:
//
//	AwsClusterControlPlaneDatabaseEncryptionArgs{...}
type AwsClusterControlPlaneDatabaseEncryptionInput interface {
	pulumi.Input

	ToAwsClusterControlPlaneDatabaseEncryptionOutput() AwsClusterControlPlaneDatabaseEncryptionOutput
	ToAwsClusterControlPlaneDatabaseEncryptionOutputWithContext(context.Context) AwsClusterControlPlaneDatabaseEncryptionOutput
}

type AwsClusterControlPlaneDatabaseEncryptionArgs struct {
	// The ARN of the AWS KMS key used to encrypt cluster secrets.
	KmsKeyArn pulumi.StringInput `pulumi:"kmsKeyArn"`
}

func (AwsClusterControlPlaneDatabaseEncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsClusterControlPlaneDatabaseEncryption)(nil)).Elem()
}

func (i AwsClusterControlPlaneDatabaseEncryptionArgs) ToAwsClusterControlPlaneDatabaseEncryptionOutput() AwsClusterControlPlaneDatabaseEncryptionOutput {
	return i.ToAwsClusterControlPlaneDatabaseEncryptionOutputWithContext(context.Background())
}

func (i AwsClusterControlPlaneDatabaseEncryptionArgs) ToAwsClusterControlPlaneDatabaseEncryptionOutputWithContext(ctx context.Context) AwsClusterControlPlaneDatabaseEncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsClusterControlPlaneDatabaseEncryptionOutput)
}

func (i AwsClusterControlPlaneDatabaseEncryptionArgs) ToAwsClusterControlPlaneDatabaseEncryptionPtrOutput() AwsClusterControlPlaneDatabaseEncryptionPtrOutput {
	return i.ToAwsClusterControlPlaneDatabaseEncryptionPtrOutputWithContext(context.Background())
}

func (i AwsClusterControlPlaneDatabaseEncryptionArgs) ToAwsClusterControlPlaneDatabaseEncryptionPtrOutputWithContext(ctx context.Context) AwsClusterControlPlaneDatabaseEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsClusterControlPlaneDatabaseEncryptionOutput).ToAwsClusterControlPlaneDatabaseEncryptionPtrOutputWithContext(ctx)
}

// AwsClusterControlPlaneDatabaseEncryptionPtrInput is an input type that accepts AwsClusterControlPlaneDatabaseEncryptionArgs, AwsClusterControlPlaneDatabaseEncryptionPtr and AwsClusterControlPlaneDatabaseEncryptionPtrOutput values.
// You can construct a concrete instance of `AwsClusterControlPlaneDatabaseEncryptionPtrInput` via:
//
//	        AwsClusterControlPlaneDatabaseEncryptionArgs{...}
//
//	or:
//
//	        nil
type AwsClusterControlPlaneDatabaseEncryptionPtrInput interface {
	pulumi.Input

	ToAwsClusterControlPlaneDatabaseEncryptionPtrOutput() AwsClusterControlPlaneDatabaseEncryptionPtrOutput
	ToAwsClusterControlPlaneDatabaseEncryptionPtrOutputWithContext(context.Context) AwsClusterControlPlaneDatabaseEncryptionPtrOutput
}

type awsClusterControlPlaneDatabaseEncryptionPtrType AwsClusterControlPlaneDatabaseEncryptionArgs

func AwsClusterControlPlaneDatabaseEncryptionPtr(v *AwsClusterControlPlaneDatabaseEncryptionArgs) AwsClusterControlPlaneDatabaseEncryptionPtrInput {
	return (*awsClusterControlPlaneDatabaseEncryptionPtrType)(v)
}

func (*awsClusterControlPlaneDatabaseEncryptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsClusterControlPlaneDatabaseEncryption)(nil)).Elem()
}

func (i *awsClusterControlPlaneDatabaseEncryptionPtrType) ToAwsClusterControlPlaneDatabaseEncryptionPtrOutput() AwsClusterControlPlaneDatabaseEncryptionPtrOutput {
	return i.ToAwsClusterControlPlaneDatabaseEncryptionPtrOutputWithContext(context.Background())
}

func (i *awsClusterControlPlaneDatabaseEncryptionPtrType) ToAwsClusterControlPlaneDatabaseEncryptionPtrOutputWithContext(ctx context.Context) AwsClusterControlPlaneDatabaseEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsClusterControlPlaneDatabaseEncryptionPtrOutput)
}

type AwsClusterControlPlaneDatabaseEncryptionOutput struct{ *pulumi.OutputState }

func (AwsClusterControlPlaneDatabaseEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsClusterControlPlaneDatabaseEncryption)(nil)).Elem()
}

func (o AwsClusterControlPlaneDatabaseEncryptionOutput) ToAwsClusterControlPlaneDatabaseEncryptionOutput() AwsClusterControlPlaneDatabaseEncryptionOutput {
	return o
}

func (o AwsClusterControlPlaneDatabaseEncryptionOutput) ToAwsClusterControlPlaneDatabaseEncryptionOutputWithContext(ctx context.Context) AwsClusterControlPlaneDatabaseEncryptionOutput {
	return o
}

func (o AwsClusterControlPlaneDatabaseEncryptionOutput) ToAwsClusterControlPlaneDatabaseEncryptionPtrOutput() AwsClusterControlPlaneDatabaseEncryptionPtrOutput {
	return o.ToAwsClusterControlPlaneDatabaseEncryptionPtrOutputWithContext(context.Background())
}

func (o AwsClusterControlPlaneDatabaseEncryptionOutput) ToAwsClusterControlPlaneDatabaseEncryptionPtrOutputWithContext(ctx context.Context) AwsClusterControlPlaneDatabaseEncryptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AwsClusterControlPlaneDatabaseEncryption) *AwsClusterControlPlaneDatabaseEncryption {
		return &v
	}).(AwsClusterControlPlaneDatabaseEncryptionPtrOutput)
}

// The ARN of the AWS KMS key used to encrypt cluster secrets.
func (o AwsClusterControlPlaneDatabaseEncryptionOutput) KmsKeyArn() pulumi.StringOutput {
	return o.ApplyT(func(v AwsClusterControlPlaneDatabaseEncryption) string { return v.KmsKeyArn }).(pulumi.StringOutput)
}

type AwsClusterControlPlaneDatabaseEncryptionPtrOutput struct{ *pulumi.OutputState }

func (AwsClusterControlPlaneDatabaseEncryptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsClusterControlPlaneDatabaseEncryption)(nil)).Elem()
}

func (o AwsClusterControlPlaneDatabaseEncryptionPtrOutput) ToAwsClusterControlPlaneDatabaseEncryptionPtrOutput() AwsClusterControlPlaneDatabaseEncryptionPtrOutput {
	return o
}

func (o AwsClusterControlPlaneDatabaseEncryptionPtrOutput) ToAwsClusterControlPlaneDatabaseEncryptionPtrOutputWithContext(ctx context.Context) AwsClusterControlPlaneDatabaseEncryptionPtrOutput {
	return o
}

func (o AwsClusterControlPlaneDatabaseEncryptionPtrOutput) Elem() AwsClusterControlPlaneDatabaseEncryptionOutput {
	return o.ApplyT(func(v *AwsClusterControlPlaneDatabaseEncryption) AwsClusterControlPlaneDatabaseEncryption {
		if v != nil {
			return *v
		}
		var ret AwsClusterControlPlaneDatabaseEncryption
		return ret
	}).(AwsClusterControlPlaneDatabaseEncryptionOutput)
}

// The ARN of the AWS KMS key used to encrypt cluster secrets.
func (o AwsClusterControlPlaneDatabaseEncryptionPtrOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsClusterControlPlaneDatabaseEncryption) *string {
		if v == nil {
			return nil
		}
		return &v.KmsKeyArn
	}).(pulumi.StringPtrOutput)
}

type AwsClusterControlPlaneInstancePlacement struct {
	// The tenancy for the instance. Possible values: TENANCY_UNSPECIFIED, DEFAULT, DEDICATED, HOST
	Tenancy *string `pulumi:"tenancy"`
}

// AwsClusterControlPlaneInstancePlacementInput is an input type that accepts AwsClusterControlPlaneInstancePlacementArgs and AwsClusterControlPlaneInstancePlacementOutput values.
// You can construct a concrete instance of `AwsClusterControlPlaneInstancePlacementInput` via:
//
//	AwsClusterControlPlaneInstancePlacementArgs{...}
type AwsClusterControlPlaneInstancePlacementInput interface {
	pulumi.Input

	ToAwsClusterControlPlaneInstancePlacementOutput() AwsClusterControlPlaneInstancePlacementOutput
	ToAwsClusterControlPlaneInstancePlacementOutputWithContext(context.Context) AwsClusterControlPlaneInstancePlacementOutput
}

type AwsClusterControlPlaneInstancePlacementArgs struct {
	// The tenancy for the instance. Possible values: TENANCY_UNSPECIFIED, DEFAULT, DEDICATED, HOST
	Tenancy pulumi.StringPtrInput `pulumi:"tenancy"`
}

func (AwsClusterControlPlaneInstancePlacementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsClusterControlPlaneInstancePlacement)(nil)).Elem()
}

func (i AwsClusterControlPlaneInstancePlacementArgs) ToAwsClusterControlPlaneInstancePlacementOutput() AwsClusterControlPlaneInstancePlacementOutput {
	return i.ToAwsClusterControlPlaneInstancePlacementOutputWithContext(context.Background())
}

func (i AwsClusterControlPlaneInstancePlacementArgs) ToAwsClusterControlPlaneInstancePlacementOutputWithContext(ctx context.Context) AwsClusterControlPlaneInstancePlacementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsClusterControlPlaneInstancePlacementOutput)
}

func (i AwsClusterControlPlaneInstancePlacementArgs) ToAwsClusterControlPlaneInstancePlacementPtrOutput() AwsClusterControlPlaneInstancePlacementPtrOutput {
	return i.ToAwsClusterControlPlaneInstancePlacementPtrOutputWithContext(context.Background())
}

func (i AwsClusterControlPlaneInstancePlacementArgs) ToAwsClusterControlPlaneInstancePlacementPtrOutputWithContext(ctx context.Context) AwsClusterControlPlaneInstancePlacementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsClusterControlPlaneInstancePlacementOutput).ToAwsClusterControlPlaneInstancePlacementPtrOutputWithContext(ctx)
}

// AwsClusterControlPlaneInstancePlacementPtrInput is an input type that accepts AwsClusterControlPlaneInstancePlacementArgs, AwsClusterControlPlaneInstancePlacementPtr and AwsClusterControlPlaneInstancePlacementPtrOutput values.
// You can construct a concrete instance of `AwsClusterControlPlaneInstancePlacementPtrInput` via:
//
//	        AwsClusterControlPlaneInstancePlacementArgs{...}
//
//	or:
//
//	        nil
type AwsClusterControlPlaneInstancePlacementPtrInput interface {
	pulumi.Input

	ToAwsClusterControlPlaneInstancePlacementPtrOutput() AwsClusterControlPlaneInstancePlacementPtrOutput
	ToAwsClusterControlPlaneInstancePlacementPtrOutputWithContext(context.Context) AwsClusterControlPlaneInstancePlacementPtrOutput
}

type awsClusterControlPlaneInstancePlacementPtrType AwsClusterControlPlaneInstancePlacementArgs

func AwsClusterControlPlaneInstancePlacementPtr(v *AwsClusterControlPlaneInstancePlacementArgs) AwsClusterControlPlaneInstancePlacementPtrInput {
	return (*awsClusterControlPlaneInstancePlacementPtrType)(v)
}

func (*awsClusterControlPlaneInstancePlacementPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsClusterControlPlaneInstancePlacement)(nil)).Elem()
}

func (i *awsClusterControlPlaneInstancePlacementPtrType) ToAwsClusterControlPlaneInstancePlacementPtrOutput() AwsClusterControlPlaneInstancePlacementPtrOutput {
	return i.ToAwsClusterControlPlaneInstancePlacementPtrOutputWithContext(context.Background())
}

func (i *awsClusterControlPlaneInstancePlacementPtrType) ToAwsClusterControlPlaneInstancePlacementPtrOutputWithContext(ctx context.Context) AwsClusterControlPlaneInstancePlacementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsClusterControlPlaneInstancePlacementPtrOutput)
}

type AwsClusterControlPlaneInstancePlacementOutput struct{ *pulumi.OutputState }

func (AwsClusterControlPlaneInstancePlacementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsClusterControlPlaneInstancePlacement)(nil)).Elem()
}

func (o AwsClusterControlPlaneInstancePlacementOutput) ToAwsClusterControlPlaneInstancePlacementOutput() AwsClusterControlPlaneInstancePlacementOutput {
	return o
}

func (o AwsClusterControlPlaneInstancePlacementOutput) ToAwsClusterControlPlaneInstancePlacementOutputWithContext(ctx context.Context) AwsClusterControlPlaneInstancePlacementOutput {
	return o
}

func (o AwsClusterControlPlaneInstancePlacementOutput) ToAwsClusterControlPlaneInstancePlacementPtrOutput() AwsClusterControlPlaneInstancePlacementPtrOutput {
	return o.ToAwsClusterControlPlaneInstancePlacementPtrOutputWithContext(context.Background())
}

func (o AwsClusterControlPlaneInstancePlacementOutput) ToAwsClusterControlPlaneInstancePlacementPtrOutputWithContext(ctx context.Context) AwsClusterControlPlaneInstancePlacementPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AwsClusterControlPlaneInstancePlacement) *AwsClusterControlPlaneInstancePlacement {
		return &v
	}).(AwsClusterControlPlaneInstancePlacementPtrOutput)
}

// The tenancy for the instance. Possible values: TENANCY_UNSPECIFIED, DEFAULT, DEDICATED, HOST
func (o AwsClusterControlPlaneInstancePlacementOutput) Tenancy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsClusterControlPlaneInstancePlacement) *string { return v.Tenancy }).(pulumi.StringPtrOutput)
}

type AwsClusterControlPlaneInstancePlacementPtrOutput struct{ *pulumi.OutputState }

func (AwsClusterControlPlaneInstancePlacementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsClusterControlPlaneInstancePlacement)(nil)).Elem()
}

func (o AwsClusterControlPlaneInstancePlacementPtrOutput) ToAwsClusterControlPlaneInstancePlacementPtrOutput() AwsClusterControlPlaneInstancePlacementPtrOutput {
	return o
}

func (o AwsClusterControlPlaneInstancePlacementPtrOutput) ToAwsClusterControlPlaneInstancePlacementPtrOutputWithContext(ctx context.Context) AwsClusterControlPlaneInstancePlacementPtrOutput {
	return o
}

func (o AwsClusterControlPlaneInstancePlacementPtrOutput) Elem() AwsClusterControlPlaneInstancePlacementOutput {
	return o.ApplyT(func(v *AwsClusterControlPlaneInstancePlacement) AwsClusterControlPlaneInstancePlacement {
		if v != nil {
			return *v
		}
		var ret AwsClusterControlPlaneInstancePlacement
		return ret
	}).(AwsClusterControlPlaneInstancePlacementOutput)
}

// The tenancy for the instance. Possible values: TENANCY_UNSPECIFIED, DEFAULT, DEDICATED, HOST
func (o AwsClusterControlPlaneInstancePlacementPtrOutput) Tenancy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsClusterControlPlaneInstancePlacement) *string {
		if v == nil {
			return nil
		}
		return v.Tenancy
	}).(pulumi.StringPtrOutput)
}

type AwsClusterControlPlaneMainVolume struct {
	// Optional. The number of I/O operations per second (IOPS) to provision for GP3 volume.
	Iops *int `pulumi:"iops"`
	// Optional. The Amazon Resource Name (ARN) of the Customer Managed Key (CMK) used to encrypt AWS EBS volumes. If not specified, the default Amazon managed key associated to the AWS region where this cluster runs will be used.
	KmsKeyArn *string `pulumi:"kmsKeyArn"`
	// Optional. The size of the volume, in GiBs. When unspecified, a default value is provided. See the specific reference in the parent resource.
	SizeGib *int `pulumi:"sizeGib"`
	// Optional. The throughput to provision for the volume, in MiB/s. Only valid if the volume type is GP3. If volume type is gp3 and throughput is not specified, the throughput will defaults to 125.
	Throughput *int `pulumi:"throughput"`
	// Optional. Type of the EBS volume. When unspecified, it defaults to GP2 volume. Possible values: VOLUME_TYPE_UNSPECIFIED, GP2, GP3
	VolumeType *string `pulumi:"volumeType"`
}

// AwsClusterControlPlaneMainVolumeInput is an input type that accepts AwsClusterControlPlaneMainVolumeArgs and AwsClusterControlPlaneMainVolumeOutput values.
// You can construct a concrete instance of `AwsClusterControlPlaneMainVolumeInput` via:
//
//	AwsClusterControlPlaneMainVolumeArgs{...}
type AwsClusterControlPlaneMainVolumeInput interface {
	pulumi.Input

	ToAwsClusterControlPlaneMainVolumeOutput() AwsClusterControlPlaneMainVolumeOutput
	ToAwsClusterControlPlaneMainVolumeOutputWithContext(context.Context) AwsClusterControlPlaneMainVolumeOutput
}

type AwsClusterControlPlaneMainVolumeArgs struct {
	// Optional. The number of I/O operations per second (IOPS) to provision for GP3 volume.
	Iops pulumi.IntPtrInput `pulumi:"iops"`
	// Optional. The Amazon Resource Name (ARN) of the Customer Managed Key (CMK) used to encrypt AWS EBS volumes. If not specified, the default Amazon managed key associated to the AWS region where this cluster runs will be used.
	KmsKeyArn pulumi.StringPtrInput `pulumi:"kmsKeyArn"`
	// Optional. The size of the volume, in GiBs. When unspecified, a default value is provided. See the specific reference in the parent resource.
	SizeGib pulumi.IntPtrInput `pulumi:"sizeGib"`
	// Optional. The throughput to provision for the volume, in MiB/s. Only valid if the volume type is GP3. If volume type is gp3 and throughput is not specified, the throughput will defaults to 125.
	Throughput pulumi.IntPtrInput `pulumi:"throughput"`
	// Optional. Type of the EBS volume. When unspecified, it defaults to GP2 volume. Possible values: VOLUME_TYPE_UNSPECIFIED, GP2, GP3
	VolumeType pulumi.StringPtrInput `pulumi:"volumeType"`
}

func (AwsClusterControlPlaneMainVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsClusterControlPlaneMainVolume)(nil)).Elem()
}

func (i AwsClusterControlPlaneMainVolumeArgs) ToAwsClusterControlPlaneMainVolumeOutput() AwsClusterControlPlaneMainVolumeOutput {
	return i.ToAwsClusterControlPlaneMainVolumeOutputWithContext(context.Background())
}

func (i AwsClusterControlPlaneMainVolumeArgs) ToAwsClusterControlPlaneMainVolumeOutputWithContext(ctx context.Context) AwsClusterControlPlaneMainVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsClusterControlPlaneMainVolumeOutput)
}

func (i AwsClusterControlPlaneMainVolumeArgs) ToAwsClusterControlPlaneMainVolumePtrOutput() AwsClusterControlPlaneMainVolumePtrOutput {
	return i.ToAwsClusterControlPlaneMainVolumePtrOutputWithContext(context.Background())
}

func (i AwsClusterControlPlaneMainVolumeArgs) ToAwsClusterControlPlaneMainVolumePtrOutputWithContext(ctx context.Context) AwsClusterControlPlaneMainVolumePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsClusterControlPlaneMainVolumeOutput).ToAwsClusterControlPlaneMainVolumePtrOutputWithContext(ctx)
}

// AwsClusterControlPlaneMainVolumePtrInput is an input type that accepts AwsClusterControlPlaneMainVolumeArgs, AwsClusterControlPlaneMainVolumePtr and AwsClusterControlPlaneMainVolumePtrOutput values.
// You can construct a concrete instance of `AwsClusterControlPlaneMainVolumePtrInput` via:
//
//	        AwsClusterControlPlaneMainVolumeArgs{...}
//
//	or:
//
//	        nil
type AwsClusterControlPlaneMainVolumePtrInput interface {
	pulumi.Input

	ToAwsClusterControlPlaneMainVolumePtrOutput() AwsClusterControlPlaneMainVolumePtrOutput
	ToAwsClusterControlPlaneMainVolumePtrOutputWithContext(context.Context) AwsClusterControlPlaneMainVolumePtrOutput
}

type awsClusterControlPlaneMainVolumePtrType AwsClusterControlPlaneMainVolumeArgs

func AwsClusterControlPlaneMainVolumePtr(v *AwsClusterControlPlaneMainVolumeArgs) AwsClusterControlPlaneMainVolumePtrInput {
	return (*awsClusterControlPlaneMainVolumePtrType)(v)
}

func (*awsClusterControlPlaneMainVolumePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsClusterControlPlaneMainVolume)(nil)).Elem()
}

func (i *awsClusterControlPlaneMainVolumePtrType) ToAwsClusterControlPlaneMainVolumePtrOutput() AwsClusterControlPlaneMainVolumePtrOutput {
	return i.ToAwsClusterControlPlaneMainVolumePtrOutputWithContext(context.Background())
}

func (i *awsClusterControlPlaneMainVolumePtrType) ToAwsClusterControlPlaneMainVolumePtrOutputWithContext(ctx context.Context) AwsClusterControlPlaneMainVolumePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsClusterControlPlaneMainVolumePtrOutput)
}

type AwsClusterControlPlaneMainVolumeOutput struct{ *pulumi.OutputState }

func (AwsClusterControlPlaneMainVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsClusterControlPlaneMainVolume)(nil)).Elem()
}

func (o AwsClusterControlPlaneMainVolumeOutput) ToAwsClusterControlPlaneMainVolumeOutput() AwsClusterControlPlaneMainVolumeOutput {
	return o
}

func (o AwsClusterControlPlaneMainVolumeOutput) ToAwsClusterControlPlaneMainVolumeOutputWithContext(ctx context.Context) AwsClusterControlPlaneMainVolumeOutput {
	return o
}

func (o AwsClusterControlPlaneMainVolumeOutput) ToAwsClusterControlPlaneMainVolumePtrOutput() AwsClusterControlPlaneMainVolumePtrOutput {
	return o.ToAwsClusterControlPlaneMainVolumePtrOutputWithContext(context.Background())
}

func (o AwsClusterControlPlaneMainVolumeOutput) ToAwsClusterControlPlaneMainVolumePtrOutputWithContext(ctx context.Context) AwsClusterControlPlaneMainVolumePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AwsClusterControlPlaneMainVolume) *AwsClusterControlPlaneMainVolume {
		return &v
	}).(AwsClusterControlPlaneMainVolumePtrOutput)
}

// Optional. The number of I/O operations per second (IOPS) to provision for GP3 volume.
func (o AwsClusterControlPlaneMainVolumeOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AwsClusterControlPlaneMainVolume) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

// Optional. The Amazon Resource Name (ARN) of the Customer Managed Key (CMK) used to encrypt AWS EBS volumes. If not specified, the default Amazon managed key associated to the AWS region where this cluster runs will be used.
func (o AwsClusterControlPlaneMainVolumeOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsClusterControlPlaneMainVolume) *string { return v.KmsKeyArn }).(pulumi.StringPtrOutput)
}

// Optional. The size of the volume, in GiBs. When unspecified, a default value is provided. See the specific reference in the parent resource.
func (o AwsClusterControlPlaneMainVolumeOutput) SizeGib() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AwsClusterControlPlaneMainVolume) *int { return v.SizeGib }).(pulumi.IntPtrOutput)
}

// Optional. The throughput to provision for the volume, in MiB/s. Only valid if the volume type is GP3. If volume type is gp3 and throughput is not specified, the throughput will defaults to 125.
func (o AwsClusterControlPlaneMainVolumeOutput) Throughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AwsClusterControlPlaneMainVolume) *int { return v.Throughput }).(pulumi.IntPtrOutput)
}

// Optional. Type of the EBS volume. When unspecified, it defaults to GP2 volume. Possible values: VOLUME_TYPE_UNSPECIFIED, GP2, GP3
func (o AwsClusterControlPlaneMainVolumeOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsClusterControlPlaneMainVolume) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type AwsClusterControlPlaneMainVolumePtrOutput struct{ *pulumi.OutputState }

func (AwsClusterControlPlaneMainVolumePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsClusterControlPlaneMainVolume)(nil)).Elem()
}

func (o AwsClusterControlPlaneMainVolumePtrOutput) ToAwsClusterControlPlaneMainVolumePtrOutput() AwsClusterControlPlaneMainVolumePtrOutput {
	return o
}

func (o AwsClusterControlPlaneMainVolumePtrOutput) ToAwsClusterControlPlaneMainVolumePtrOutputWithContext(ctx context.Context) AwsClusterControlPlaneMainVolumePtrOutput {
	return o
}

func (o AwsClusterControlPlaneMainVolumePtrOutput) Elem() AwsClusterControlPlaneMainVolumeOutput {
	return o.ApplyT(func(v *AwsClusterControlPlaneMainVolume) AwsClusterControlPlaneMainVolume {
		if v != nil {
			return *v
		}
		var ret AwsClusterControlPlaneMainVolume
		return ret
	}).(AwsClusterControlPlaneMainVolumeOutput)
}

// Optional. The number of I/O operations per second (IOPS) to provision for GP3 volume.
func (o AwsClusterControlPlaneMainVolumePtrOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AwsClusterControlPlaneMainVolume) *int {
		if v == nil {
			return nil
		}
		return v.Iops
	}).(pulumi.IntPtrOutput)
}

// Optional. The Amazon Resource Name (ARN) of the Customer Managed Key (CMK) used to encrypt AWS EBS volumes. If not specified, the default Amazon managed key associated to the AWS region where this cluster runs will be used.
func (o AwsClusterControlPlaneMainVolumePtrOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsClusterControlPlaneMainVolume) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyArn
	}).(pulumi.StringPtrOutput)
}

// Optional. The size of the volume, in GiBs. When unspecified, a default value is provided. See the specific reference in the parent resource.
func (o AwsClusterControlPlaneMainVolumePtrOutput) SizeGib() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AwsClusterControlPlaneMainVolume) *int {
		if v == nil {
			return nil
		}
		return v.SizeGib
	}).(pulumi.IntPtrOutput)
}

// Optional. The throughput to provision for the volume, in MiB/s. Only valid if the volume type is GP3. If volume type is gp3 and throughput is not specified, the throughput will defaults to 125.
func (o AwsClusterControlPlaneMainVolumePtrOutput) Throughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AwsClusterControlPlaneMainVolume) *int {
		if v == nil {
			return nil
		}
		return v.Throughput
	}).(pulumi.IntPtrOutput)
}

// Optional. Type of the EBS volume. When unspecified, it defaults to GP2 volume. Possible values: VOLUME_TYPE_UNSPECIFIED, GP2, GP3
func (o AwsClusterControlPlaneMainVolumePtrOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsClusterControlPlaneMainVolume) *string {
		if v == nil {
			return nil
		}
		return v.VolumeType
	}).(pulumi.StringPtrOutput)
}

type AwsClusterControlPlaneProxyConfig struct {
	// The ARN of the AWS Secret Manager secret that contains the HTTP(S) proxy configuration.
	SecretArn string `pulumi:"secretArn"`
	// The version string of the AWS Secret Manager secret that contains the HTTP(S) proxy configuration.
	SecretVersion string `pulumi:"secretVersion"`
}

// AwsClusterControlPlaneProxyConfigInput is an input type that accepts AwsClusterControlPlaneProxyConfigArgs and AwsClusterControlPlaneProxyConfigOutput values.
// You can construct a concrete instance of `AwsClusterControlPlaneProxyConfigInput` via:
//
//	AwsClusterControlPlaneProxyConfigArgs{...}
type AwsClusterControlPlaneProxyConfigInput interface {
	pulumi.Input

	ToAwsClusterControlPlaneProxyConfigOutput() AwsClusterControlPlaneProxyConfigOutput
	ToAwsClusterControlPlaneProxyConfigOutputWithContext(context.Context) AwsClusterControlPlaneProxyConfigOutput
}

type AwsClusterControlPlaneProxyConfigArgs struct {
	// The ARN of the AWS Secret Manager secret that contains the HTTP(S) proxy configuration.
	SecretArn pulumi.StringInput `pulumi:"secretArn"`
	// The version string of the AWS Secret Manager secret that contains the HTTP(S) proxy configuration.
	SecretVersion pulumi.StringInput `pulumi:"secretVersion"`
}

func (AwsClusterControlPlaneProxyConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsClusterControlPlaneProxyConfig)(nil)).Elem()
}

func (i AwsClusterControlPlaneProxyConfigArgs) ToAwsClusterControlPlaneProxyConfigOutput() AwsClusterControlPlaneProxyConfigOutput {
	return i.ToAwsClusterControlPlaneProxyConfigOutputWithContext(context.Background())
}

func (i AwsClusterControlPlaneProxyConfigArgs) ToAwsClusterControlPlaneProxyConfigOutputWithContext(ctx context.Context) AwsClusterControlPlaneProxyConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsClusterControlPlaneProxyConfigOutput)
}

func (i AwsClusterControlPlaneProxyConfigArgs) ToAwsClusterControlPlaneProxyConfigPtrOutput() AwsClusterControlPlaneProxyConfigPtrOutput {
	return i.ToAwsClusterControlPlaneProxyConfigPtrOutputWithContext(context.Background())
}

func (i AwsClusterControlPlaneProxyConfigArgs) ToAwsClusterControlPlaneProxyConfigPtrOutputWithContext(ctx context.Context) AwsClusterControlPlaneProxyConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsClusterControlPlaneProxyConfigOutput).ToAwsClusterControlPlaneProxyConfigPtrOutputWithContext(ctx)
}

// AwsClusterControlPlaneProxyConfigPtrInput is an input type that accepts AwsClusterControlPlaneProxyConfigArgs, AwsClusterControlPlaneProxyConfigPtr and AwsClusterControlPlaneProxyConfigPtrOutput values.
// You can construct a concrete instance of `AwsClusterControlPlaneProxyConfigPtrInput` via:
//
//	        AwsClusterControlPlaneProxyConfigArgs{...}
//
//	or:
//
//	        nil
type AwsClusterControlPlaneProxyConfigPtrInput interface {
	pulumi.Input

	ToAwsClusterControlPlaneProxyConfigPtrOutput() AwsClusterControlPlaneProxyConfigPtrOutput
	ToAwsClusterControlPlaneProxyConfigPtrOutputWithContext(context.Context) AwsClusterControlPlaneProxyConfigPtrOutput
}

type awsClusterControlPlaneProxyConfigPtrType AwsClusterControlPlaneProxyConfigArgs

func AwsClusterControlPlaneProxyConfigPtr(v *AwsClusterControlPlaneProxyConfigArgs) AwsClusterControlPlaneProxyConfigPtrInput {
	return (*awsClusterControlPlaneProxyConfigPtrType)(v)
}

func (*awsClusterControlPlaneProxyConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsClusterControlPlaneProxyConfig)(nil)).Elem()
}

func (i *awsClusterControlPlaneProxyConfigPtrType) ToAwsClusterControlPlaneProxyConfigPtrOutput() AwsClusterControlPlaneProxyConfigPtrOutput {
	return i.ToAwsClusterControlPlaneProxyConfigPtrOutputWithContext(context.Background())
}

func (i *awsClusterControlPlaneProxyConfigPtrType) ToAwsClusterControlPlaneProxyConfigPtrOutputWithContext(ctx context.Context) AwsClusterControlPlaneProxyConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsClusterControlPlaneProxyConfigPtrOutput)
}

type AwsClusterControlPlaneProxyConfigOutput struct{ *pulumi.OutputState }

func (AwsClusterControlPlaneProxyConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsClusterControlPlaneProxyConfig)(nil)).Elem()
}

func (o AwsClusterControlPlaneProxyConfigOutput) ToAwsClusterControlPlaneProxyConfigOutput() AwsClusterControlPlaneProxyConfigOutput {
	return o
}

func (o AwsClusterControlPlaneProxyConfigOutput) ToAwsClusterControlPlaneProxyConfigOutputWithContext(ctx context.Context) AwsClusterControlPlaneProxyConfigOutput {
	return o
}

func (o AwsClusterControlPlaneProxyConfigOutput) ToAwsClusterControlPlaneProxyConfigPtrOutput() AwsClusterControlPlaneProxyConfigPtrOutput {
	return o.ToAwsClusterControlPlaneProxyConfigPtrOutputWithContext(context.Background())
}

func (o AwsClusterControlPlaneProxyConfigOutput) ToAwsClusterControlPlaneProxyConfigPtrOutputWithContext(ctx context.Context) AwsClusterControlPlaneProxyConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AwsClusterControlPlaneProxyConfig) *AwsClusterControlPlaneProxyConfig {
		return &v
	}).(AwsClusterControlPlaneProxyConfigPtrOutput)
}

// The ARN of the AWS Secret Manager secret that contains the HTTP(S) proxy configuration.
func (o AwsClusterControlPlaneProxyConfigOutput) SecretArn() pulumi.StringOutput {
	return o.ApplyT(func(v AwsClusterControlPlaneProxyConfig) string { return v.SecretArn }).(pulumi.StringOutput)
}

// The version string of the AWS Secret Manager secret that contains the HTTP(S) proxy configuration.
func (o AwsClusterControlPlaneProxyConfigOutput) SecretVersion() pulumi.StringOutput {
	return o.ApplyT(func(v AwsClusterControlPlaneProxyConfig) string { return v.SecretVersion }).(pulumi.StringOutput)
}

type AwsClusterControlPlaneProxyConfigPtrOutput struct{ *pulumi.OutputState }

func (AwsClusterControlPlaneProxyConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsClusterControlPlaneProxyConfig)(nil)).Elem()
}

func (o AwsClusterControlPlaneProxyConfigPtrOutput) ToAwsClusterControlPlaneProxyConfigPtrOutput() AwsClusterControlPlaneProxyConfigPtrOutput {
	return o
}

func (o AwsClusterControlPlaneProxyConfigPtrOutput) ToAwsClusterControlPlaneProxyConfigPtrOutputWithContext(ctx context.Context) AwsClusterControlPlaneProxyConfigPtrOutput {
	return o
}

func (o AwsClusterControlPlaneProxyConfigPtrOutput) Elem() AwsClusterControlPlaneProxyConfigOutput {
	return o.ApplyT(func(v *AwsClusterControlPlaneProxyConfig) AwsClusterControlPlaneProxyConfig {
		if v != nil {
			return *v
		}
		var ret AwsClusterControlPlaneProxyConfig
		return ret
	}).(AwsClusterControlPlaneProxyConfigOutput)
}

// The ARN of the AWS Secret Manager secret that contains the HTTP(S) proxy configuration.
func (o AwsClusterControlPlaneProxyConfigPtrOutput) SecretArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsClusterControlPlaneProxyConfig) *string {
		if v == nil {
			return nil
		}
		return &v.SecretArn
	}).(pulumi.StringPtrOutput)
}

// The version string of the AWS Secret Manager secret that contains the HTTP(S) proxy configuration.
func (o AwsClusterControlPlaneProxyConfigPtrOutput) SecretVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsClusterControlPlaneProxyConfig) *string {
		if v == nil {
			return nil
		}
		return &v.SecretVersion
	}).(pulumi.StringPtrOutput)
}

type AwsClusterControlPlaneRootVolume struct {
	// Optional. The number of I/O operations per second (IOPS) to provision for GP3 volume.
	Iops *int `pulumi:"iops"`
	// Optional. The Amazon Resource Name (ARN) of the Customer Managed Key (CMK) used to encrypt AWS EBS volumes. If not specified, the default Amazon managed key associated to the AWS region where this cluster runs will be used.
	KmsKeyArn *string `pulumi:"kmsKeyArn"`
	// Optional. The size of the volume, in GiBs. When unspecified, a default value is provided. See the specific reference in the parent resource.
	SizeGib *int `pulumi:"sizeGib"`
	// Optional. The throughput to provision for the volume, in MiB/s. Only valid if the volume type is GP3. If volume type is gp3 and throughput is not specified, the throughput will defaults to 125.
	Throughput *int `pulumi:"throughput"`
	// Optional. Type of the EBS volume. When unspecified, it defaults to GP2 volume. Possible values: VOLUME_TYPE_UNSPECIFIED, GP2, GP3
	VolumeType *string `pulumi:"volumeType"`
}

// AwsClusterControlPlaneRootVolumeInput is an input type that accepts AwsClusterControlPlaneRootVolumeArgs and AwsClusterControlPlaneRootVolumeOutput values.
// You can construct a concrete instance of `AwsClusterControlPlaneRootVolumeInput` via:
//
//	AwsClusterControlPlaneRootVolumeArgs{...}
type AwsClusterControlPlaneRootVolumeInput interface {
	pulumi.Input

	ToAwsClusterControlPlaneRootVolumeOutput() AwsClusterControlPlaneRootVolumeOutput
	ToAwsClusterControlPlaneRootVolumeOutputWithContext(context.Context) AwsClusterControlPlaneRootVolumeOutput
}

type AwsClusterControlPlaneRootVolumeArgs struct {
	// Optional. The number of I/O operations per second (IOPS) to provision for GP3 volume.
	Iops pulumi.IntPtrInput `pulumi:"iops"`
	// Optional. The Amazon Resource Name (ARN) of the Customer Managed Key (CMK) used to encrypt AWS EBS volumes. If not specified, the default Amazon managed key associated to the AWS region where this cluster runs will be used.
	KmsKeyArn pulumi.StringPtrInput `pulumi:"kmsKeyArn"`
	// Optional. The size of the volume, in GiBs. When unspecified, a default value is provided. See the specific reference in the parent resource.
	SizeGib pulumi.IntPtrInput `pulumi:"sizeGib"`
	// Optional. The throughput to provision for the volume, in MiB/s. Only valid if the volume type is GP3. If volume type is gp3 and throughput is not specified, the throughput will defaults to 125.
	Throughput pulumi.IntPtrInput `pulumi:"throughput"`
	// Optional. Type of the EBS volume. When unspecified, it defaults to GP2 volume. Possible values: VOLUME_TYPE_UNSPECIFIED, GP2, GP3
	VolumeType pulumi.StringPtrInput `pulumi:"volumeType"`
}

func (AwsClusterControlPlaneRootVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsClusterControlPlaneRootVolume)(nil)).Elem()
}

func (i AwsClusterControlPlaneRootVolumeArgs) ToAwsClusterControlPlaneRootVolumeOutput() AwsClusterControlPlaneRootVolumeOutput {
	return i.ToAwsClusterControlPlaneRootVolumeOutputWithContext(context.Background())
}

func (i AwsClusterControlPlaneRootVolumeArgs) ToAwsClusterControlPlaneRootVolumeOutputWithContext(ctx context.Context) AwsClusterControlPlaneRootVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsClusterControlPlaneRootVolumeOutput)
}

func (i AwsClusterControlPlaneRootVolumeArgs) ToAwsClusterControlPlaneRootVolumePtrOutput() AwsClusterControlPlaneRootVolumePtrOutput {
	return i.ToAwsClusterControlPlaneRootVolumePtrOutputWithContext(context.Background())
}

func (i AwsClusterControlPlaneRootVolumeArgs) ToAwsClusterControlPlaneRootVolumePtrOutputWithContext(ctx context.Context) AwsClusterControlPlaneRootVolumePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsClusterControlPlaneRootVolumeOutput).ToAwsClusterControlPlaneRootVolumePtrOutputWithContext(ctx)
}

// AwsClusterControlPlaneRootVolumePtrInput is an input type that accepts AwsClusterControlPlaneRootVolumeArgs, AwsClusterControlPlaneRootVolumePtr and AwsClusterControlPlaneRootVolumePtrOutput values.
// You can construct a concrete instance of `AwsClusterControlPlaneRootVolumePtrInput` via:
//
//	        AwsClusterControlPlaneRootVolumeArgs{...}
//
//	or:
//
//	        nil
type AwsClusterControlPlaneRootVolumePtrInput interface {
	pulumi.Input

	ToAwsClusterControlPlaneRootVolumePtrOutput() AwsClusterControlPlaneRootVolumePtrOutput
	ToAwsClusterControlPlaneRootVolumePtrOutputWithContext(context.Context) AwsClusterControlPlaneRootVolumePtrOutput
}

type awsClusterControlPlaneRootVolumePtrType AwsClusterControlPlaneRootVolumeArgs

func AwsClusterControlPlaneRootVolumePtr(v *AwsClusterControlPlaneRootVolumeArgs) AwsClusterControlPlaneRootVolumePtrInput {
	return (*awsClusterControlPlaneRootVolumePtrType)(v)
}

func (*awsClusterControlPlaneRootVolumePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsClusterControlPlaneRootVolume)(nil)).Elem()
}

func (i *awsClusterControlPlaneRootVolumePtrType) ToAwsClusterControlPlaneRootVolumePtrOutput() AwsClusterControlPlaneRootVolumePtrOutput {
	return i.ToAwsClusterControlPlaneRootVolumePtrOutputWithContext(context.Background())
}

func (i *awsClusterControlPlaneRootVolumePtrType) ToAwsClusterControlPlaneRootVolumePtrOutputWithContext(ctx context.Context) AwsClusterControlPlaneRootVolumePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsClusterControlPlaneRootVolumePtrOutput)
}

type AwsClusterControlPlaneRootVolumeOutput struct{ *pulumi.OutputState }

func (AwsClusterControlPlaneRootVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsClusterControlPlaneRootVolume)(nil)).Elem()
}

func (o AwsClusterControlPlaneRootVolumeOutput) ToAwsClusterControlPlaneRootVolumeOutput() AwsClusterControlPlaneRootVolumeOutput {
	return o
}

func (o AwsClusterControlPlaneRootVolumeOutput) ToAwsClusterControlPlaneRootVolumeOutputWithContext(ctx context.Context) AwsClusterControlPlaneRootVolumeOutput {
	return o
}

func (o AwsClusterControlPlaneRootVolumeOutput) ToAwsClusterControlPlaneRootVolumePtrOutput() AwsClusterControlPlaneRootVolumePtrOutput {
	return o.ToAwsClusterControlPlaneRootVolumePtrOutputWithContext(context.Background())
}

func (o AwsClusterControlPlaneRootVolumeOutput) ToAwsClusterControlPlaneRootVolumePtrOutputWithContext(ctx context.Context) AwsClusterControlPlaneRootVolumePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AwsClusterControlPlaneRootVolume) *AwsClusterControlPlaneRootVolume {
		return &v
	}).(AwsClusterControlPlaneRootVolumePtrOutput)
}

// Optional. The number of I/O operations per second (IOPS) to provision for GP3 volume.
func (o AwsClusterControlPlaneRootVolumeOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AwsClusterControlPlaneRootVolume) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

// Optional. The Amazon Resource Name (ARN) of the Customer Managed Key (CMK) used to encrypt AWS EBS volumes. If not specified, the default Amazon managed key associated to the AWS region where this cluster runs will be used.
func (o AwsClusterControlPlaneRootVolumeOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsClusterControlPlaneRootVolume) *string { return v.KmsKeyArn }).(pulumi.StringPtrOutput)
}

// Optional. The size of the volume, in GiBs. When unspecified, a default value is provided. See the specific reference in the parent resource.
func (o AwsClusterControlPlaneRootVolumeOutput) SizeGib() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AwsClusterControlPlaneRootVolume) *int { return v.SizeGib }).(pulumi.IntPtrOutput)
}

// Optional. The throughput to provision for the volume, in MiB/s. Only valid if the volume type is GP3. If volume type is gp3 and throughput is not specified, the throughput will defaults to 125.
func (o AwsClusterControlPlaneRootVolumeOutput) Throughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AwsClusterControlPlaneRootVolume) *int { return v.Throughput }).(pulumi.IntPtrOutput)
}

// Optional. Type of the EBS volume. When unspecified, it defaults to GP2 volume. Possible values: VOLUME_TYPE_UNSPECIFIED, GP2, GP3
func (o AwsClusterControlPlaneRootVolumeOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsClusterControlPlaneRootVolume) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type AwsClusterControlPlaneRootVolumePtrOutput struct{ *pulumi.OutputState }

func (AwsClusterControlPlaneRootVolumePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsClusterControlPlaneRootVolume)(nil)).Elem()
}

func (o AwsClusterControlPlaneRootVolumePtrOutput) ToAwsClusterControlPlaneRootVolumePtrOutput() AwsClusterControlPlaneRootVolumePtrOutput {
	return o
}

func (o AwsClusterControlPlaneRootVolumePtrOutput) ToAwsClusterControlPlaneRootVolumePtrOutputWithContext(ctx context.Context) AwsClusterControlPlaneRootVolumePtrOutput {
	return o
}

func (o AwsClusterControlPlaneRootVolumePtrOutput) Elem() AwsClusterControlPlaneRootVolumeOutput {
	return o.ApplyT(func(v *AwsClusterControlPlaneRootVolume) AwsClusterControlPlaneRootVolume {
		if v != nil {
			return *v
		}
		var ret AwsClusterControlPlaneRootVolume
		return ret
	}).(AwsClusterControlPlaneRootVolumeOutput)
}

// Optional. The number of I/O operations per second (IOPS) to provision for GP3 volume.
func (o AwsClusterControlPlaneRootVolumePtrOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AwsClusterControlPlaneRootVolume) *int {
		if v == nil {
			return nil
		}
		return v.Iops
	}).(pulumi.IntPtrOutput)
}

// Optional. The Amazon Resource Name (ARN) of the Customer Managed Key (CMK) used to encrypt AWS EBS volumes. If not specified, the default Amazon managed key associated to the AWS region where this cluster runs will be used.
func (o AwsClusterControlPlaneRootVolumePtrOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsClusterControlPlaneRootVolume) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyArn
	}).(pulumi.StringPtrOutput)
}

// Optional. The size of the volume, in GiBs. When unspecified, a default value is provided. See the specific reference in the parent resource.
func (o AwsClusterControlPlaneRootVolumePtrOutput) SizeGib() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AwsClusterControlPlaneRootVolume) *int {
		if v == nil {
			return nil
		}
		return v.SizeGib
	}).(pulumi.IntPtrOutput)
}

// Optional. The throughput to provision for the volume, in MiB/s. Only valid if the volume type is GP3. If volume type is gp3 and throughput is not specified, the throughput will defaults to 125.
func (o AwsClusterControlPlaneRootVolumePtrOutput) Throughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AwsClusterControlPlaneRootVolume) *int {
		if v == nil {
			return nil
		}
		return v.Throughput
	}).(pulumi.IntPtrOutput)
}

// Optional. Type of the EBS volume. When unspecified, it defaults to GP2 volume. Possible values: VOLUME_TYPE_UNSPECIFIED, GP2, GP3
func (o AwsClusterControlPlaneRootVolumePtrOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsClusterControlPlaneRootVolume) *string {
		if v == nil {
			return nil
		}
		return v.VolumeType
	}).(pulumi.StringPtrOutput)
}

type AwsClusterControlPlaneSshConfig struct {
	// The name of the EC2 key pair used to login into cluster machines.
	Ec2KeyPair string `pulumi:"ec2KeyPair"`
}

// AwsClusterControlPlaneSshConfigInput is an input type that accepts AwsClusterControlPlaneSshConfigArgs and AwsClusterControlPlaneSshConfigOutput values.
// You can construct a concrete instance of `AwsClusterControlPlaneSshConfigInput` via:
//
//	AwsClusterControlPlaneSshConfigArgs{...}
type AwsClusterControlPlaneSshConfigInput interface {
	pulumi.Input

	ToAwsClusterControlPlaneSshConfigOutput() AwsClusterControlPlaneSshConfigOutput
	ToAwsClusterControlPlaneSshConfigOutputWithContext(context.Context) AwsClusterControlPlaneSshConfigOutput
}

type AwsClusterControlPlaneSshConfigArgs struct {
	// The name of the EC2 key pair used to login into cluster machines.
	Ec2KeyPair pulumi.StringInput `pulumi:"ec2KeyPair"`
}

func (AwsClusterControlPlaneSshConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsClusterControlPlaneSshConfig)(nil)).Elem()
}

func (i AwsClusterControlPlaneSshConfigArgs) ToAwsClusterControlPlaneSshConfigOutput() AwsClusterControlPlaneSshConfigOutput {
	return i.ToAwsClusterControlPlaneSshConfigOutputWithContext(context.Background())
}

func (i AwsClusterControlPlaneSshConfigArgs) ToAwsClusterControlPlaneSshConfigOutputWithContext(ctx context.Context) AwsClusterControlPlaneSshConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsClusterControlPlaneSshConfigOutput)
}

func (i AwsClusterControlPlaneSshConfigArgs) ToAwsClusterControlPlaneSshConfigPtrOutput() AwsClusterControlPlaneSshConfigPtrOutput {
	return i.ToAwsClusterControlPlaneSshConfigPtrOutputWithContext(context.Background())
}

func (i AwsClusterControlPlaneSshConfigArgs) ToAwsClusterControlPlaneSshConfigPtrOutputWithContext(ctx context.Context) AwsClusterControlPlaneSshConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsClusterControlPlaneSshConfigOutput).ToAwsClusterControlPlaneSshConfigPtrOutputWithContext(ctx)
}

// AwsClusterControlPlaneSshConfigPtrInput is an input type that accepts AwsClusterControlPlaneSshConfigArgs, AwsClusterControlPlaneSshConfigPtr and AwsClusterControlPlaneSshConfigPtrOutput values.
// You can construct a concrete instance of `AwsClusterControlPlaneSshConfigPtrInput` via:
//
//	        AwsClusterControlPlaneSshConfigArgs{...}
//
//	or:
//
//	        nil
type AwsClusterControlPlaneSshConfigPtrInput interface {
	pulumi.Input

	ToAwsClusterControlPlaneSshConfigPtrOutput() AwsClusterControlPlaneSshConfigPtrOutput
	ToAwsClusterControlPlaneSshConfigPtrOutputWithContext(context.Context) AwsClusterControlPlaneSshConfigPtrOutput
}

type awsClusterControlPlaneSshConfigPtrType AwsClusterControlPlaneSshConfigArgs

func AwsClusterControlPlaneSshConfigPtr(v *AwsClusterControlPlaneSshConfigArgs) AwsClusterControlPlaneSshConfigPtrInput {
	return (*awsClusterControlPlaneSshConfigPtrType)(v)
}

func (*awsClusterControlPlaneSshConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsClusterControlPlaneSshConfig)(nil)).Elem()
}

func (i *awsClusterControlPlaneSshConfigPtrType) ToAwsClusterControlPlaneSshConfigPtrOutput() AwsClusterControlPlaneSshConfigPtrOutput {
	return i.ToAwsClusterControlPlaneSshConfigPtrOutputWithContext(context.Background())
}

func (i *awsClusterControlPlaneSshConfigPtrType) ToAwsClusterControlPlaneSshConfigPtrOutputWithContext(ctx context.Context) AwsClusterControlPlaneSshConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsClusterControlPlaneSshConfigPtrOutput)
}

type AwsClusterControlPlaneSshConfigOutput struct{ *pulumi.OutputState }

func (AwsClusterControlPlaneSshConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsClusterControlPlaneSshConfig)(nil)).Elem()
}

func (o AwsClusterControlPlaneSshConfigOutput) ToAwsClusterControlPlaneSshConfigOutput() AwsClusterControlPlaneSshConfigOutput {
	return o
}

func (o AwsClusterControlPlaneSshConfigOutput) ToAwsClusterControlPlaneSshConfigOutputWithContext(ctx context.Context) AwsClusterControlPlaneSshConfigOutput {
	return o
}

func (o AwsClusterControlPlaneSshConfigOutput) ToAwsClusterControlPlaneSshConfigPtrOutput() AwsClusterControlPlaneSshConfigPtrOutput {
	return o.ToAwsClusterControlPlaneSshConfigPtrOutputWithContext(context.Background())
}

func (o AwsClusterControlPlaneSshConfigOutput) ToAwsClusterControlPlaneSshConfigPtrOutputWithContext(ctx context.Context) AwsClusterControlPlaneSshConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AwsClusterControlPlaneSshConfig) *AwsClusterControlPlaneSshConfig {
		return &v
	}).(AwsClusterControlPlaneSshConfigPtrOutput)
}

// The name of the EC2 key pair used to login into cluster machines.
func (o AwsClusterControlPlaneSshConfigOutput) Ec2KeyPair() pulumi.StringOutput {
	return o.ApplyT(func(v AwsClusterControlPlaneSshConfig) string { return v.Ec2KeyPair }).(pulumi.StringOutput)
}

type AwsClusterControlPlaneSshConfigPtrOutput struct{ *pulumi.OutputState }

func (AwsClusterControlPlaneSshConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsClusterControlPlaneSshConfig)(nil)).Elem()
}

func (o AwsClusterControlPlaneSshConfigPtrOutput) ToAwsClusterControlPlaneSshConfigPtrOutput() AwsClusterControlPlaneSshConfigPtrOutput {
	return o
}

func (o AwsClusterControlPlaneSshConfigPtrOutput) ToAwsClusterControlPlaneSshConfigPtrOutputWithContext(ctx context.Context) AwsClusterControlPlaneSshConfigPtrOutput {
	return o
}

func (o AwsClusterControlPlaneSshConfigPtrOutput) Elem() AwsClusterControlPlaneSshConfigOutput {
	return o.ApplyT(func(v *AwsClusterControlPlaneSshConfig) AwsClusterControlPlaneSshConfig {
		if v != nil {
			return *v
		}
		var ret AwsClusterControlPlaneSshConfig
		return ret
	}).(AwsClusterControlPlaneSshConfigOutput)
}

// The name of the EC2 key pair used to login into cluster machines.
func (o AwsClusterControlPlaneSshConfigPtrOutput) Ec2KeyPair() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsClusterControlPlaneSshConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Ec2KeyPair
	}).(pulumi.StringPtrOutput)
}

type AwsClusterFleet struct {
	// The name of the managed Hub Membership resource associated to this cluster. Membership names are formatted as projects/<project-number>/locations/global/membership/<cluster-id>.
	Membership *string `pulumi:"membership"`
	// The number of the Fleet host project where this cluster will be registered.
	Project *string `pulumi:"project"`
}

// AwsClusterFleetInput is an input type that accepts AwsClusterFleetArgs and AwsClusterFleetOutput values.
// You can construct a concrete instance of `AwsClusterFleetInput` via:
//
//	AwsClusterFleetArgs{...}
type AwsClusterFleetInput interface {
	pulumi.Input

	ToAwsClusterFleetOutput() AwsClusterFleetOutput
	ToAwsClusterFleetOutputWithContext(context.Context) AwsClusterFleetOutput
}

type AwsClusterFleetArgs struct {
	// The name of the managed Hub Membership resource associated to this cluster. Membership names are formatted as projects/<project-number>/locations/global/membership/<cluster-id>.
	Membership pulumi.StringPtrInput `pulumi:"membership"`
	// The number of the Fleet host project where this cluster will be registered.
	Project pulumi.StringPtrInput `pulumi:"project"`
}

func (AwsClusterFleetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsClusterFleet)(nil)).Elem()
}

func (i AwsClusterFleetArgs) ToAwsClusterFleetOutput() AwsClusterFleetOutput {
	return i.ToAwsClusterFleetOutputWithContext(context.Background())
}

func (i AwsClusterFleetArgs) ToAwsClusterFleetOutputWithContext(ctx context.Context) AwsClusterFleetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsClusterFleetOutput)
}

func (i AwsClusterFleetArgs) ToAwsClusterFleetPtrOutput() AwsClusterFleetPtrOutput {
	return i.ToAwsClusterFleetPtrOutputWithContext(context.Background())
}

func (i AwsClusterFleetArgs) ToAwsClusterFleetPtrOutputWithContext(ctx context.Context) AwsClusterFleetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsClusterFleetOutput).ToAwsClusterFleetPtrOutputWithContext(ctx)
}

// AwsClusterFleetPtrInput is an input type that accepts AwsClusterFleetArgs, AwsClusterFleetPtr and AwsClusterFleetPtrOutput values.
// You can construct a concrete instance of `AwsClusterFleetPtrInput` via:
//
//	        AwsClusterFleetArgs{...}
//
//	or:
//
//	        nil
type AwsClusterFleetPtrInput interface {
	pulumi.Input

	ToAwsClusterFleetPtrOutput() AwsClusterFleetPtrOutput
	ToAwsClusterFleetPtrOutputWithContext(context.Context) AwsClusterFleetPtrOutput
}

type awsClusterFleetPtrType AwsClusterFleetArgs

func AwsClusterFleetPtr(v *AwsClusterFleetArgs) AwsClusterFleetPtrInput {
	return (*awsClusterFleetPtrType)(v)
}

func (*awsClusterFleetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsClusterFleet)(nil)).Elem()
}

func (i *awsClusterFleetPtrType) ToAwsClusterFleetPtrOutput() AwsClusterFleetPtrOutput {
	return i.ToAwsClusterFleetPtrOutputWithContext(context.Background())
}

func (i *awsClusterFleetPtrType) ToAwsClusterFleetPtrOutputWithContext(ctx context.Context) AwsClusterFleetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsClusterFleetPtrOutput)
}

type AwsClusterFleetOutput struct{ *pulumi.OutputState }

func (AwsClusterFleetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsClusterFleet)(nil)).Elem()
}

func (o AwsClusterFleetOutput) ToAwsClusterFleetOutput() AwsClusterFleetOutput {
	return o
}

func (o AwsClusterFleetOutput) ToAwsClusterFleetOutputWithContext(ctx context.Context) AwsClusterFleetOutput {
	return o
}

func (o AwsClusterFleetOutput) ToAwsClusterFleetPtrOutput() AwsClusterFleetPtrOutput {
	return o.ToAwsClusterFleetPtrOutputWithContext(context.Background())
}

func (o AwsClusterFleetOutput) ToAwsClusterFleetPtrOutputWithContext(ctx context.Context) AwsClusterFleetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AwsClusterFleet) *AwsClusterFleet {
		return &v
	}).(AwsClusterFleetPtrOutput)
}

// The name of the managed Hub Membership resource associated to this cluster. Membership names are formatted as projects/<project-number>/locations/global/membership/<cluster-id>.
func (o AwsClusterFleetOutput) Membership() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsClusterFleet) *string { return v.Membership }).(pulumi.StringPtrOutput)
}

// The number of the Fleet host project where this cluster will be registered.
func (o AwsClusterFleetOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsClusterFleet) *string { return v.Project }).(pulumi.StringPtrOutput)
}

type AwsClusterFleetPtrOutput struct{ *pulumi.OutputState }

func (AwsClusterFleetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsClusterFleet)(nil)).Elem()
}

func (o AwsClusterFleetPtrOutput) ToAwsClusterFleetPtrOutput() AwsClusterFleetPtrOutput {
	return o
}

func (o AwsClusterFleetPtrOutput) ToAwsClusterFleetPtrOutputWithContext(ctx context.Context) AwsClusterFleetPtrOutput {
	return o
}

func (o AwsClusterFleetPtrOutput) Elem() AwsClusterFleetOutput {
	return o.ApplyT(func(v *AwsClusterFleet) AwsClusterFleet {
		if v != nil {
			return *v
		}
		var ret AwsClusterFleet
		return ret
	}).(AwsClusterFleetOutput)
}

// The name of the managed Hub Membership resource associated to this cluster. Membership names are formatted as projects/<project-number>/locations/global/membership/<cluster-id>.
func (o AwsClusterFleetPtrOutput) Membership() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsClusterFleet) *string {
		if v == nil {
			return nil
		}
		return v.Membership
	}).(pulumi.StringPtrOutput)
}

// The number of the Fleet host project where this cluster will be registered.
func (o AwsClusterFleetPtrOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsClusterFleet) *string {
		if v == nil {
			return nil
		}
		return v.Project
	}).(pulumi.StringPtrOutput)
}

type AwsClusterLoggingConfig struct {
	// Configuration of the logging components.
	ComponentConfig *AwsClusterLoggingConfigComponentConfig `pulumi:"componentConfig"`
}

// AwsClusterLoggingConfigInput is an input type that accepts AwsClusterLoggingConfigArgs and AwsClusterLoggingConfigOutput values.
// You can construct a concrete instance of `AwsClusterLoggingConfigInput` via:
//
//	AwsClusterLoggingConfigArgs{...}
type AwsClusterLoggingConfigInput interface {
	pulumi.Input

	ToAwsClusterLoggingConfigOutput() AwsClusterLoggingConfigOutput
	ToAwsClusterLoggingConfigOutputWithContext(context.Context) AwsClusterLoggingConfigOutput
}

type AwsClusterLoggingConfigArgs struct {
	// Configuration of the logging components.
	ComponentConfig AwsClusterLoggingConfigComponentConfigPtrInput `pulumi:"componentConfig"`
}

func (AwsClusterLoggingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsClusterLoggingConfig)(nil)).Elem()
}

func (i AwsClusterLoggingConfigArgs) ToAwsClusterLoggingConfigOutput() AwsClusterLoggingConfigOutput {
	return i.ToAwsClusterLoggingConfigOutputWithContext(context.Background())
}

func (i AwsClusterLoggingConfigArgs) ToAwsClusterLoggingConfigOutputWithContext(ctx context.Context) AwsClusterLoggingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsClusterLoggingConfigOutput)
}

func (i AwsClusterLoggingConfigArgs) ToAwsClusterLoggingConfigPtrOutput() AwsClusterLoggingConfigPtrOutput {
	return i.ToAwsClusterLoggingConfigPtrOutputWithContext(context.Background())
}

func (i AwsClusterLoggingConfigArgs) ToAwsClusterLoggingConfigPtrOutputWithContext(ctx context.Context) AwsClusterLoggingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsClusterLoggingConfigOutput).ToAwsClusterLoggingConfigPtrOutputWithContext(ctx)
}

// AwsClusterLoggingConfigPtrInput is an input type that accepts AwsClusterLoggingConfigArgs, AwsClusterLoggingConfigPtr and AwsClusterLoggingConfigPtrOutput values.
// You can construct a concrete instance of `AwsClusterLoggingConfigPtrInput` via:
//
//	        AwsClusterLoggingConfigArgs{...}
//
//	or:
//
//	        nil
type AwsClusterLoggingConfigPtrInput interface {
	pulumi.Input

	ToAwsClusterLoggingConfigPtrOutput() AwsClusterLoggingConfigPtrOutput
	ToAwsClusterLoggingConfigPtrOutputWithContext(context.Context) AwsClusterLoggingConfigPtrOutput
}

type awsClusterLoggingConfigPtrType AwsClusterLoggingConfigArgs

func AwsClusterLoggingConfigPtr(v *AwsClusterLoggingConfigArgs) AwsClusterLoggingConfigPtrInput {
	return (*awsClusterLoggingConfigPtrType)(v)
}

func (*awsClusterLoggingConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsClusterLoggingConfig)(nil)).Elem()
}

func (i *awsClusterLoggingConfigPtrType) ToAwsClusterLoggingConfigPtrOutput() AwsClusterLoggingConfigPtrOutput {
	return i.ToAwsClusterLoggingConfigPtrOutputWithContext(context.Background())
}

func (i *awsClusterLoggingConfigPtrType) ToAwsClusterLoggingConfigPtrOutputWithContext(ctx context.Context) AwsClusterLoggingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsClusterLoggingConfigPtrOutput)
}

type AwsClusterLoggingConfigOutput struct{ *pulumi.OutputState }

func (AwsClusterLoggingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsClusterLoggingConfig)(nil)).Elem()
}

func (o AwsClusterLoggingConfigOutput) ToAwsClusterLoggingConfigOutput() AwsClusterLoggingConfigOutput {
	return o
}

func (o AwsClusterLoggingConfigOutput) ToAwsClusterLoggingConfigOutputWithContext(ctx context.Context) AwsClusterLoggingConfigOutput {
	return o
}

func (o AwsClusterLoggingConfigOutput) ToAwsClusterLoggingConfigPtrOutput() AwsClusterLoggingConfigPtrOutput {
	return o.ToAwsClusterLoggingConfigPtrOutputWithContext(context.Background())
}

func (o AwsClusterLoggingConfigOutput) ToAwsClusterLoggingConfigPtrOutputWithContext(ctx context.Context) AwsClusterLoggingConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AwsClusterLoggingConfig) *AwsClusterLoggingConfig {
		return &v
	}).(AwsClusterLoggingConfigPtrOutput)
}

// Configuration of the logging components.
func (o AwsClusterLoggingConfigOutput) ComponentConfig() AwsClusterLoggingConfigComponentConfigPtrOutput {
	return o.ApplyT(func(v AwsClusterLoggingConfig) *AwsClusterLoggingConfigComponentConfig { return v.ComponentConfig }).(AwsClusterLoggingConfigComponentConfigPtrOutput)
}

type AwsClusterLoggingConfigPtrOutput struct{ *pulumi.OutputState }

func (AwsClusterLoggingConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsClusterLoggingConfig)(nil)).Elem()
}

func (o AwsClusterLoggingConfigPtrOutput) ToAwsClusterLoggingConfigPtrOutput() AwsClusterLoggingConfigPtrOutput {
	return o
}

func (o AwsClusterLoggingConfigPtrOutput) ToAwsClusterLoggingConfigPtrOutputWithContext(ctx context.Context) AwsClusterLoggingConfigPtrOutput {
	return o
}

func (o AwsClusterLoggingConfigPtrOutput) Elem() AwsClusterLoggingConfigOutput {
	return o.ApplyT(func(v *AwsClusterLoggingConfig) AwsClusterLoggingConfig {
		if v != nil {
			return *v
		}
		var ret AwsClusterLoggingConfig
		return ret
	}).(AwsClusterLoggingConfigOutput)
}

// Configuration of the logging components.
func (o AwsClusterLoggingConfigPtrOutput) ComponentConfig() AwsClusterLoggingConfigComponentConfigPtrOutput {
	return o.ApplyT(func(v *AwsClusterLoggingConfig) *AwsClusterLoggingConfigComponentConfig {
		if v == nil {
			return nil
		}
		return v.ComponentConfig
	}).(AwsClusterLoggingConfigComponentConfigPtrOutput)
}

type AwsClusterLoggingConfigComponentConfig struct {
	// Components of the logging configuration to be enabled.
	EnableComponents []string `pulumi:"enableComponents"`
}

// AwsClusterLoggingConfigComponentConfigInput is an input type that accepts AwsClusterLoggingConfigComponentConfigArgs and AwsClusterLoggingConfigComponentConfigOutput values.
// You can construct a concrete instance of `AwsClusterLoggingConfigComponentConfigInput` via:
//
//	AwsClusterLoggingConfigComponentConfigArgs{...}
type AwsClusterLoggingConfigComponentConfigInput interface {
	pulumi.Input

	ToAwsClusterLoggingConfigComponentConfigOutput() AwsClusterLoggingConfigComponentConfigOutput
	ToAwsClusterLoggingConfigComponentConfigOutputWithContext(context.Context) AwsClusterLoggingConfigComponentConfigOutput
}

type AwsClusterLoggingConfigComponentConfigArgs struct {
	// Components of the logging configuration to be enabled.
	EnableComponents pulumi.StringArrayInput `pulumi:"enableComponents"`
}

func (AwsClusterLoggingConfigComponentConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsClusterLoggingConfigComponentConfig)(nil)).Elem()
}

func (i AwsClusterLoggingConfigComponentConfigArgs) ToAwsClusterLoggingConfigComponentConfigOutput() AwsClusterLoggingConfigComponentConfigOutput {
	return i.ToAwsClusterLoggingConfigComponentConfigOutputWithContext(context.Background())
}

func (i AwsClusterLoggingConfigComponentConfigArgs) ToAwsClusterLoggingConfigComponentConfigOutputWithContext(ctx context.Context) AwsClusterLoggingConfigComponentConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsClusterLoggingConfigComponentConfigOutput)
}

func (i AwsClusterLoggingConfigComponentConfigArgs) ToAwsClusterLoggingConfigComponentConfigPtrOutput() AwsClusterLoggingConfigComponentConfigPtrOutput {
	return i.ToAwsClusterLoggingConfigComponentConfigPtrOutputWithContext(context.Background())
}

func (i AwsClusterLoggingConfigComponentConfigArgs) ToAwsClusterLoggingConfigComponentConfigPtrOutputWithContext(ctx context.Context) AwsClusterLoggingConfigComponentConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsClusterLoggingConfigComponentConfigOutput).ToAwsClusterLoggingConfigComponentConfigPtrOutputWithContext(ctx)
}

// AwsClusterLoggingConfigComponentConfigPtrInput is an input type that accepts AwsClusterLoggingConfigComponentConfigArgs, AwsClusterLoggingConfigComponentConfigPtr and AwsClusterLoggingConfigComponentConfigPtrOutput values.
// You can construct a concrete instance of `AwsClusterLoggingConfigComponentConfigPtrInput` via:
//
//	        AwsClusterLoggingConfigComponentConfigArgs{...}
//
//	or:
//
//	        nil
type AwsClusterLoggingConfigComponentConfigPtrInput interface {
	pulumi.Input

	ToAwsClusterLoggingConfigComponentConfigPtrOutput() AwsClusterLoggingConfigComponentConfigPtrOutput
	ToAwsClusterLoggingConfigComponentConfigPtrOutputWithContext(context.Context) AwsClusterLoggingConfigComponentConfigPtrOutput
}

type awsClusterLoggingConfigComponentConfigPtrType AwsClusterLoggingConfigComponentConfigArgs

func AwsClusterLoggingConfigComponentConfigPtr(v *AwsClusterLoggingConfigComponentConfigArgs) AwsClusterLoggingConfigComponentConfigPtrInput {
	return (*awsClusterLoggingConfigComponentConfigPtrType)(v)
}

func (*awsClusterLoggingConfigComponentConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsClusterLoggingConfigComponentConfig)(nil)).Elem()
}

func (i *awsClusterLoggingConfigComponentConfigPtrType) ToAwsClusterLoggingConfigComponentConfigPtrOutput() AwsClusterLoggingConfigComponentConfigPtrOutput {
	return i.ToAwsClusterLoggingConfigComponentConfigPtrOutputWithContext(context.Background())
}

func (i *awsClusterLoggingConfigComponentConfigPtrType) ToAwsClusterLoggingConfigComponentConfigPtrOutputWithContext(ctx context.Context) AwsClusterLoggingConfigComponentConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsClusterLoggingConfigComponentConfigPtrOutput)
}

type AwsClusterLoggingConfigComponentConfigOutput struct{ *pulumi.OutputState }

func (AwsClusterLoggingConfigComponentConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsClusterLoggingConfigComponentConfig)(nil)).Elem()
}

func (o AwsClusterLoggingConfigComponentConfigOutput) ToAwsClusterLoggingConfigComponentConfigOutput() AwsClusterLoggingConfigComponentConfigOutput {
	return o
}

func (o AwsClusterLoggingConfigComponentConfigOutput) ToAwsClusterLoggingConfigComponentConfigOutputWithContext(ctx context.Context) AwsClusterLoggingConfigComponentConfigOutput {
	return o
}

func (o AwsClusterLoggingConfigComponentConfigOutput) ToAwsClusterLoggingConfigComponentConfigPtrOutput() AwsClusterLoggingConfigComponentConfigPtrOutput {
	return o.ToAwsClusterLoggingConfigComponentConfigPtrOutputWithContext(context.Background())
}

func (o AwsClusterLoggingConfigComponentConfigOutput) ToAwsClusterLoggingConfigComponentConfigPtrOutputWithContext(ctx context.Context) AwsClusterLoggingConfigComponentConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AwsClusterLoggingConfigComponentConfig) *AwsClusterLoggingConfigComponentConfig {
		return &v
	}).(AwsClusterLoggingConfigComponentConfigPtrOutput)
}

// Components of the logging configuration to be enabled.
func (o AwsClusterLoggingConfigComponentConfigOutput) EnableComponents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AwsClusterLoggingConfigComponentConfig) []string { return v.EnableComponents }).(pulumi.StringArrayOutput)
}

type AwsClusterLoggingConfigComponentConfigPtrOutput struct{ *pulumi.OutputState }

func (AwsClusterLoggingConfigComponentConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsClusterLoggingConfigComponentConfig)(nil)).Elem()
}

func (o AwsClusterLoggingConfigComponentConfigPtrOutput) ToAwsClusterLoggingConfigComponentConfigPtrOutput() AwsClusterLoggingConfigComponentConfigPtrOutput {
	return o
}

func (o AwsClusterLoggingConfigComponentConfigPtrOutput) ToAwsClusterLoggingConfigComponentConfigPtrOutputWithContext(ctx context.Context) AwsClusterLoggingConfigComponentConfigPtrOutput {
	return o
}

func (o AwsClusterLoggingConfigComponentConfigPtrOutput) Elem() AwsClusterLoggingConfigComponentConfigOutput {
	return o.ApplyT(func(v *AwsClusterLoggingConfigComponentConfig) AwsClusterLoggingConfigComponentConfig {
		if v != nil {
			return *v
		}
		var ret AwsClusterLoggingConfigComponentConfig
		return ret
	}).(AwsClusterLoggingConfigComponentConfigOutput)
}

// Components of the logging configuration to be enabled.
func (o AwsClusterLoggingConfigComponentConfigPtrOutput) EnableComponents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AwsClusterLoggingConfigComponentConfig) []string {
		if v == nil {
			return nil
		}
		return v.EnableComponents
	}).(pulumi.StringArrayOutput)
}

type AwsClusterNetworking struct {
	// Disable the per node pool subnet security group rules on the control plane security group. When set to true, you must also provide one or more security groups that ensure node pools are able to send requests to the control plane on TCP/443 and TCP/8132. Failure to do so may result in unavailable node pools.
	PerNodePoolSgRulesDisabled *bool `pulumi:"perNodePoolSgRulesDisabled"`
	// All pods in the cluster are assigned an RFC1918 IPv4 address from these ranges. Only a single range is supported. This field cannot be changed after creation.
	PodAddressCidrBlocks []string `pulumi:"podAddressCidrBlocks"`
	// All services in the cluster are assigned an RFC1918 IPv4 address from these ranges. Only a single range is supported. This field cannot be changed after creation.
	ServiceAddressCidrBlocks []string `pulumi:"serviceAddressCidrBlocks"`
	// The VPC associated with the cluster. All component clusters (i.e. control plane and node pools) run on a single VPC. This field cannot be changed after creation.
	//
	// ***
	VpcId string `pulumi:"vpcId"`
}

// AwsClusterNetworkingInput is an input type that accepts AwsClusterNetworkingArgs and AwsClusterNetworkingOutput values.
// You can construct a concrete instance of `AwsClusterNetworkingInput` via:
//
//	AwsClusterNetworkingArgs{...}
type AwsClusterNetworkingInput interface {
	pulumi.Input

	ToAwsClusterNetworkingOutput() AwsClusterNetworkingOutput
	ToAwsClusterNetworkingOutputWithContext(context.Context) AwsClusterNetworkingOutput
}

type AwsClusterNetworkingArgs struct {
	// Disable the per node pool subnet security group rules on the control plane security group. When set to true, you must also provide one or more security groups that ensure node pools are able to send requests to the control plane on TCP/443 and TCP/8132. Failure to do so may result in unavailable node pools.
	PerNodePoolSgRulesDisabled pulumi.BoolPtrInput `pulumi:"perNodePoolSgRulesDisabled"`
	// All pods in the cluster are assigned an RFC1918 IPv4 address from these ranges. Only a single range is supported. This field cannot be changed after creation.
	PodAddressCidrBlocks pulumi.StringArrayInput `pulumi:"podAddressCidrBlocks"`
	// All services in the cluster are assigned an RFC1918 IPv4 address from these ranges. Only a single range is supported. This field cannot be changed after creation.
	ServiceAddressCidrBlocks pulumi.StringArrayInput `pulumi:"serviceAddressCidrBlocks"`
	// The VPC associated with the cluster. All component clusters (i.e. control plane and node pools) run on a single VPC. This field cannot be changed after creation.
	//
	// ***
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (AwsClusterNetworkingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsClusterNetworking)(nil)).Elem()
}

func (i AwsClusterNetworkingArgs) ToAwsClusterNetworkingOutput() AwsClusterNetworkingOutput {
	return i.ToAwsClusterNetworkingOutputWithContext(context.Background())
}

func (i AwsClusterNetworkingArgs) ToAwsClusterNetworkingOutputWithContext(ctx context.Context) AwsClusterNetworkingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsClusterNetworkingOutput)
}

func (i AwsClusterNetworkingArgs) ToAwsClusterNetworkingPtrOutput() AwsClusterNetworkingPtrOutput {
	return i.ToAwsClusterNetworkingPtrOutputWithContext(context.Background())
}

func (i AwsClusterNetworkingArgs) ToAwsClusterNetworkingPtrOutputWithContext(ctx context.Context) AwsClusterNetworkingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsClusterNetworkingOutput).ToAwsClusterNetworkingPtrOutputWithContext(ctx)
}

// AwsClusterNetworkingPtrInput is an input type that accepts AwsClusterNetworkingArgs, AwsClusterNetworkingPtr and AwsClusterNetworkingPtrOutput values.
// You can construct a concrete instance of `AwsClusterNetworkingPtrInput` via:
//
//	        AwsClusterNetworkingArgs{...}
//
//	or:
//
//	        nil
type AwsClusterNetworkingPtrInput interface {
	pulumi.Input

	ToAwsClusterNetworkingPtrOutput() AwsClusterNetworkingPtrOutput
	ToAwsClusterNetworkingPtrOutputWithContext(context.Context) AwsClusterNetworkingPtrOutput
}

type awsClusterNetworkingPtrType AwsClusterNetworkingArgs

func AwsClusterNetworkingPtr(v *AwsClusterNetworkingArgs) AwsClusterNetworkingPtrInput {
	return (*awsClusterNetworkingPtrType)(v)
}

func (*awsClusterNetworkingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsClusterNetworking)(nil)).Elem()
}

func (i *awsClusterNetworkingPtrType) ToAwsClusterNetworkingPtrOutput() AwsClusterNetworkingPtrOutput {
	return i.ToAwsClusterNetworkingPtrOutputWithContext(context.Background())
}

func (i *awsClusterNetworkingPtrType) ToAwsClusterNetworkingPtrOutputWithContext(ctx context.Context) AwsClusterNetworkingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsClusterNetworkingPtrOutput)
}

type AwsClusterNetworkingOutput struct{ *pulumi.OutputState }

func (AwsClusterNetworkingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsClusterNetworking)(nil)).Elem()
}

func (o AwsClusterNetworkingOutput) ToAwsClusterNetworkingOutput() AwsClusterNetworkingOutput {
	return o
}

func (o AwsClusterNetworkingOutput) ToAwsClusterNetworkingOutputWithContext(ctx context.Context) AwsClusterNetworkingOutput {
	return o
}

func (o AwsClusterNetworkingOutput) ToAwsClusterNetworkingPtrOutput() AwsClusterNetworkingPtrOutput {
	return o.ToAwsClusterNetworkingPtrOutputWithContext(context.Background())
}

func (o AwsClusterNetworkingOutput) ToAwsClusterNetworkingPtrOutputWithContext(ctx context.Context) AwsClusterNetworkingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AwsClusterNetworking) *AwsClusterNetworking {
		return &v
	}).(AwsClusterNetworkingPtrOutput)
}

// Disable the per node pool subnet security group rules on the control plane security group. When set to true, you must also provide one or more security groups that ensure node pools are able to send requests to the control plane on TCP/443 and TCP/8132. Failure to do so may result in unavailable node pools.
func (o AwsClusterNetworkingOutput) PerNodePoolSgRulesDisabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AwsClusterNetworking) *bool { return v.PerNodePoolSgRulesDisabled }).(pulumi.BoolPtrOutput)
}

// All pods in the cluster are assigned an RFC1918 IPv4 address from these ranges. Only a single range is supported. This field cannot be changed after creation.
func (o AwsClusterNetworkingOutput) PodAddressCidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AwsClusterNetworking) []string { return v.PodAddressCidrBlocks }).(pulumi.StringArrayOutput)
}

// All services in the cluster are assigned an RFC1918 IPv4 address from these ranges. Only a single range is supported. This field cannot be changed after creation.
func (o AwsClusterNetworkingOutput) ServiceAddressCidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AwsClusterNetworking) []string { return v.ServiceAddressCidrBlocks }).(pulumi.StringArrayOutput)
}

// The VPC associated with the cluster. All component clusters (i.e. control plane and node pools) run on a single VPC. This field cannot be changed after creation.
//
// ***
func (o AwsClusterNetworkingOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v AwsClusterNetworking) string { return v.VpcId }).(pulumi.StringOutput)
}

type AwsClusterNetworkingPtrOutput struct{ *pulumi.OutputState }

func (AwsClusterNetworkingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsClusterNetworking)(nil)).Elem()
}

func (o AwsClusterNetworkingPtrOutput) ToAwsClusterNetworkingPtrOutput() AwsClusterNetworkingPtrOutput {
	return o
}

func (o AwsClusterNetworkingPtrOutput) ToAwsClusterNetworkingPtrOutputWithContext(ctx context.Context) AwsClusterNetworkingPtrOutput {
	return o
}

func (o AwsClusterNetworkingPtrOutput) Elem() AwsClusterNetworkingOutput {
	return o.ApplyT(func(v *AwsClusterNetworking) AwsClusterNetworking {
		if v != nil {
			return *v
		}
		var ret AwsClusterNetworking
		return ret
	}).(AwsClusterNetworkingOutput)
}

// Disable the per node pool subnet security group rules on the control plane security group. When set to true, you must also provide one or more security groups that ensure node pools are able to send requests to the control plane on TCP/443 and TCP/8132. Failure to do so may result in unavailable node pools.
func (o AwsClusterNetworkingPtrOutput) PerNodePoolSgRulesDisabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AwsClusterNetworking) *bool {
		if v == nil {
			return nil
		}
		return v.PerNodePoolSgRulesDisabled
	}).(pulumi.BoolPtrOutput)
}

// All pods in the cluster are assigned an RFC1918 IPv4 address from these ranges. Only a single range is supported. This field cannot be changed after creation.
func (o AwsClusterNetworkingPtrOutput) PodAddressCidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AwsClusterNetworking) []string {
		if v == nil {
			return nil
		}
		return v.PodAddressCidrBlocks
	}).(pulumi.StringArrayOutput)
}

// All services in the cluster are assigned an RFC1918 IPv4 address from these ranges. Only a single range is supported. This field cannot be changed after creation.
func (o AwsClusterNetworkingPtrOutput) ServiceAddressCidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AwsClusterNetworking) []string {
		if v == nil {
			return nil
		}
		return v.ServiceAddressCidrBlocks
	}).(pulumi.StringArrayOutput)
}

// The VPC associated with the cluster. All component clusters (i.e. control plane and node pools) run on a single VPC. This field cannot be changed after creation.
//
// ***
func (o AwsClusterNetworkingPtrOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsClusterNetworking) *string {
		if v == nil {
			return nil
		}
		return &v.VpcId
	}).(pulumi.StringPtrOutput)
}

type AwsClusterWorkloadIdentityConfig struct {
	// The ID of the OIDC Identity Provider (IdP) associated to the Workload Identity Pool.
	IdentityProvider *string `pulumi:"identityProvider"`
	// The OIDC issuer URL for this cluster.
	IssuerUri *string `pulumi:"issuerUri"`
	// The Workload Identity Pool associated to the cluster.
	WorkloadPool *string `pulumi:"workloadPool"`
}

// AwsClusterWorkloadIdentityConfigInput is an input type that accepts AwsClusterWorkloadIdentityConfigArgs and AwsClusterWorkloadIdentityConfigOutput values.
// You can construct a concrete instance of `AwsClusterWorkloadIdentityConfigInput` via:
//
//	AwsClusterWorkloadIdentityConfigArgs{...}
type AwsClusterWorkloadIdentityConfigInput interface {
	pulumi.Input

	ToAwsClusterWorkloadIdentityConfigOutput() AwsClusterWorkloadIdentityConfigOutput
	ToAwsClusterWorkloadIdentityConfigOutputWithContext(context.Context) AwsClusterWorkloadIdentityConfigOutput
}

type AwsClusterWorkloadIdentityConfigArgs struct {
	// The ID of the OIDC Identity Provider (IdP) associated to the Workload Identity Pool.
	IdentityProvider pulumi.StringPtrInput `pulumi:"identityProvider"`
	// The OIDC issuer URL for this cluster.
	IssuerUri pulumi.StringPtrInput `pulumi:"issuerUri"`
	// The Workload Identity Pool associated to the cluster.
	WorkloadPool pulumi.StringPtrInput `pulumi:"workloadPool"`
}

func (AwsClusterWorkloadIdentityConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsClusterWorkloadIdentityConfig)(nil)).Elem()
}

func (i AwsClusterWorkloadIdentityConfigArgs) ToAwsClusterWorkloadIdentityConfigOutput() AwsClusterWorkloadIdentityConfigOutput {
	return i.ToAwsClusterWorkloadIdentityConfigOutputWithContext(context.Background())
}

func (i AwsClusterWorkloadIdentityConfigArgs) ToAwsClusterWorkloadIdentityConfigOutputWithContext(ctx context.Context) AwsClusterWorkloadIdentityConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsClusterWorkloadIdentityConfigOutput)
}

// AwsClusterWorkloadIdentityConfigArrayInput is an input type that accepts AwsClusterWorkloadIdentityConfigArray and AwsClusterWorkloadIdentityConfigArrayOutput values.
// You can construct a concrete instance of `AwsClusterWorkloadIdentityConfigArrayInput` via:
//
//	AwsClusterWorkloadIdentityConfigArray{ AwsClusterWorkloadIdentityConfigArgs{...} }
type AwsClusterWorkloadIdentityConfigArrayInput interface {
	pulumi.Input

	ToAwsClusterWorkloadIdentityConfigArrayOutput() AwsClusterWorkloadIdentityConfigArrayOutput
	ToAwsClusterWorkloadIdentityConfigArrayOutputWithContext(context.Context) AwsClusterWorkloadIdentityConfigArrayOutput
}

type AwsClusterWorkloadIdentityConfigArray []AwsClusterWorkloadIdentityConfigInput

func (AwsClusterWorkloadIdentityConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AwsClusterWorkloadIdentityConfig)(nil)).Elem()
}

func (i AwsClusterWorkloadIdentityConfigArray) ToAwsClusterWorkloadIdentityConfigArrayOutput() AwsClusterWorkloadIdentityConfigArrayOutput {
	return i.ToAwsClusterWorkloadIdentityConfigArrayOutputWithContext(context.Background())
}

func (i AwsClusterWorkloadIdentityConfigArray) ToAwsClusterWorkloadIdentityConfigArrayOutputWithContext(ctx context.Context) AwsClusterWorkloadIdentityConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsClusterWorkloadIdentityConfigArrayOutput)
}

type AwsClusterWorkloadIdentityConfigOutput struct{ *pulumi.OutputState }

func (AwsClusterWorkloadIdentityConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsClusterWorkloadIdentityConfig)(nil)).Elem()
}

func (o AwsClusterWorkloadIdentityConfigOutput) ToAwsClusterWorkloadIdentityConfigOutput() AwsClusterWorkloadIdentityConfigOutput {
	return o
}

func (o AwsClusterWorkloadIdentityConfigOutput) ToAwsClusterWorkloadIdentityConfigOutputWithContext(ctx context.Context) AwsClusterWorkloadIdentityConfigOutput {
	return o
}

// The ID of the OIDC Identity Provider (IdP) associated to the Workload Identity Pool.
func (o AwsClusterWorkloadIdentityConfigOutput) IdentityProvider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsClusterWorkloadIdentityConfig) *string { return v.IdentityProvider }).(pulumi.StringPtrOutput)
}

// The OIDC issuer URL for this cluster.
func (o AwsClusterWorkloadIdentityConfigOutput) IssuerUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsClusterWorkloadIdentityConfig) *string { return v.IssuerUri }).(pulumi.StringPtrOutput)
}

// The Workload Identity Pool associated to the cluster.
func (o AwsClusterWorkloadIdentityConfigOutput) WorkloadPool() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsClusterWorkloadIdentityConfig) *string { return v.WorkloadPool }).(pulumi.StringPtrOutput)
}

type AwsClusterWorkloadIdentityConfigArrayOutput struct{ *pulumi.OutputState }

func (AwsClusterWorkloadIdentityConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AwsClusterWorkloadIdentityConfig)(nil)).Elem()
}

func (o AwsClusterWorkloadIdentityConfigArrayOutput) ToAwsClusterWorkloadIdentityConfigArrayOutput() AwsClusterWorkloadIdentityConfigArrayOutput {
	return o
}

func (o AwsClusterWorkloadIdentityConfigArrayOutput) ToAwsClusterWorkloadIdentityConfigArrayOutputWithContext(ctx context.Context) AwsClusterWorkloadIdentityConfigArrayOutput {
	return o
}

func (o AwsClusterWorkloadIdentityConfigArrayOutput) Index(i pulumi.IntInput) AwsClusterWorkloadIdentityConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AwsClusterWorkloadIdentityConfig {
		return vs[0].([]AwsClusterWorkloadIdentityConfig)[vs[1].(int)]
	}).(AwsClusterWorkloadIdentityConfigOutput)
}

type AwsNodePoolAutoscaling struct {
	// Maximum number of nodes in the NodePool. Must be >= min_node_count.
	MaxNodeCount int `pulumi:"maxNodeCount"`
	// Minimum number of nodes in the NodePool. Must be >= 1 and <= max_node_count.
	MinNodeCount int `pulumi:"minNodeCount"`
}

// AwsNodePoolAutoscalingInput is an input type that accepts AwsNodePoolAutoscalingArgs and AwsNodePoolAutoscalingOutput values.
// You can construct a concrete instance of `AwsNodePoolAutoscalingInput` via:
//
//	AwsNodePoolAutoscalingArgs{...}
type AwsNodePoolAutoscalingInput interface {
	pulumi.Input

	ToAwsNodePoolAutoscalingOutput() AwsNodePoolAutoscalingOutput
	ToAwsNodePoolAutoscalingOutputWithContext(context.Context) AwsNodePoolAutoscalingOutput
}

type AwsNodePoolAutoscalingArgs struct {
	// Maximum number of nodes in the NodePool. Must be >= min_node_count.
	MaxNodeCount pulumi.IntInput `pulumi:"maxNodeCount"`
	// Minimum number of nodes in the NodePool. Must be >= 1 and <= max_node_count.
	MinNodeCount pulumi.IntInput `pulumi:"minNodeCount"`
}

func (AwsNodePoolAutoscalingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsNodePoolAutoscaling)(nil)).Elem()
}

func (i AwsNodePoolAutoscalingArgs) ToAwsNodePoolAutoscalingOutput() AwsNodePoolAutoscalingOutput {
	return i.ToAwsNodePoolAutoscalingOutputWithContext(context.Background())
}

func (i AwsNodePoolAutoscalingArgs) ToAwsNodePoolAutoscalingOutputWithContext(ctx context.Context) AwsNodePoolAutoscalingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsNodePoolAutoscalingOutput)
}

func (i AwsNodePoolAutoscalingArgs) ToAwsNodePoolAutoscalingPtrOutput() AwsNodePoolAutoscalingPtrOutput {
	return i.ToAwsNodePoolAutoscalingPtrOutputWithContext(context.Background())
}

func (i AwsNodePoolAutoscalingArgs) ToAwsNodePoolAutoscalingPtrOutputWithContext(ctx context.Context) AwsNodePoolAutoscalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsNodePoolAutoscalingOutput).ToAwsNodePoolAutoscalingPtrOutputWithContext(ctx)
}

// AwsNodePoolAutoscalingPtrInput is an input type that accepts AwsNodePoolAutoscalingArgs, AwsNodePoolAutoscalingPtr and AwsNodePoolAutoscalingPtrOutput values.
// You can construct a concrete instance of `AwsNodePoolAutoscalingPtrInput` via:
//
//	        AwsNodePoolAutoscalingArgs{...}
//
//	or:
//
//	        nil
type AwsNodePoolAutoscalingPtrInput interface {
	pulumi.Input

	ToAwsNodePoolAutoscalingPtrOutput() AwsNodePoolAutoscalingPtrOutput
	ToAwsNodePoolAutoscalingPtrOutputWithContext(context.Context) AwsNodePoolAutoscalingPtrOutput
}

type awsNodePoolAutoscalingPtrType AwsNodePoolAutoscalingArgs

func AwsNodePoolAutoscalingPtr(v *AwsNodePoolAutoscalingArgs) AwsNodePoolAutoscalingPtrInput {
	return (*awsNodePoolAutoscalingPtrType)(v)
}

func (*awsNodePoolAutoscalingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsNodePoolAutoscaling)(nil)).Elem()
}

func (i *awsNodePoolAutoscalingPtrType) ToAwsNodePoolAutoscalingPtrOutput() AwsNodePoolAutoscalingPtrOutput {
	return i.ToAwsNodePoolAutoscalingPtrOutputWithContext(context.Background())
}

func (i *awsNodePoolAutoscalingPtrType) ToAwsNodePoolAutoscalingPtrOutputWithContext(ctx context.Context) AwsNodePoolAutoscalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsNodePoolAutoscalingPtrOutput)
}

type AwsNodePoolAutoscalingOutput struct{ *pulumi.OutputState }

func (AwsNodePoolAutoscalingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsNodePoolAutoscaling)(nil)).Elem()
}

func (o AwsNodePoolAutoscalingOutput) ToAwsNodePoolAutoscalingOutput() AwsNodePoolAutoscalingOutput {
	return o
}

func (o AwsNodePoolAutoscalingOutput) ToAwsNodePoolAutoscalingOutputWithContext(ctx context.Context) AwsNodePoolAutoscalingOutput {
	return o
}

func (o AwsNodePoolAutoscalingOutput) ToAwsNodePoolAutoscalingPtrOutput() AwsNodePoolAutoscalingPtrOutput {
	return o.ToAwsNodePoolAutoscalingPtrOutputWithContext(context.Background())
}

func (o AwsNodePoolAutoscalingOutput) ToAwsNodePoolAutoscalingPtrOutputWithContext(ctx context.Context) AwsNodePoolAutoscalingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AwsNodePoolAutoscaling) *AwsNodePoolAutoscaling {
		return &v
	}).(AwsNodePoolAutoscalingPtrOutput)
}

// Maximum number of nodes in the NodePool. Must be >= min_node_count.
func (o AwsNodePoolAutoscalingOutput) MaxNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v AwsNodePoolAutoscaling) int { return v.MaxNodeCount }).(pulumi.IntOutput)
}

// Minimum number of nodes in the NodePool. Must be >= 1 and <= max_node_count.
func (o AwsNodePoolAutoscalingOutput) MinNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v AwsNodePoolAutoscaling) int { return v.MinNodeCount }).(pulumi.IntOutput)
}

type AwsNodePoolAutoscalingPtrOutput struct{ *pulumi.OutputState }

func (AwsNodePoolAutoscalingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsNodePoolAutoscaling)(nil)).Elem()
}

func (o AwsNodePoolAutoscalingPtrOutput) ToAwsNodePoolAutoscalingPtrOutput() AwsNodePoolAutoscalingPtrOutput {
	return o
}

func (o AwsNodePoolAutoscalingPtrOutput) ToAwsNodePoolAutoscalingPtrOutputWithContext(ctx context.Context) AwsNodePoolAutoscalingPtrOutput {
	return o
}

func (o AwsNodePoolAutoscalingPtrOutput) Elem() AwsNodePoolAutoscalingOutput {
	return o.ApplyT(func(v *AwsNodePoolAutoscaling) AwsNodePoolAutoscaling {
		if v != nil {
			return *v
		}
		var ret AwsNodePoolAutoscaling
		return ret
	}).(AwsNodePoolAutoscalingOutput)
}

// Maximum number of nodes in the NodePool. Must be >= min_node_count.
func (o AwsNodePoolAutoscalingPtrOutput) MaxNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AwsNodePoolAutoscaling) *int {
		if v == nil {
			return nil
		}
		return &v.MaxNodeCount
	}).(pulumi.IntPtrOutput)
}

// Minimum number of nodes in the NodePool. Must be >= 1 and <= max_node_count.
func (o AwsNodePoolAutoscalingPtrOutput) MinNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AwsNodePoolAutoscaling) *int {
		if v == nil {
			return nil
		}
		return &v.MinNodeCount
	}).(pulumi.IntPtrOutput)
}

type AwsNodePoolConfig struct {
	// Optional. Configuration related to CloudWatch metrics collection on the Auto Scaling group of the node pool. When unspecified, metrics collection is disabled.
	AutoscalingMetricsCollection *AwsNodePoolConfigAutoscalingMetricsCollection `pulumi:"autoscalingMetricsCollection"`
	// The ARN of the AWS KMS key used to encrypt node pool configuration.
	ConfigEncryption AwsNodePoolConfigConfigEncryption `pulumi:"configEncryption"`
	// The name of the AWS IAM role assigned to nodes in the pool.
	IamInstanceProfile string `pulumi:"iamInstanceProfile"`
	// The OS image type to use on node pool instances.
	ImageType *string `pulumi:"imageType"`
	// Details of placement information for an instance.
	InstancePlacement *AwsNodePoolConfigInstancePlacement `pulumi:"instancePlacement"`
	// Optional. The AWS instance type. When unspecified, it defaults to `m5.large`.
	InstanceType *string `pulumi:"instanceType"`
	// Optional. The initial labels assigned to nodes of this node pool. An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
	Labels map[string]string `pulumi:"labels"`
	// Proxy configuration for outbound HTTP(S) traffic.
	ProxyConfig *AwsNodePoolConfigProxyConfig `pulumi:"proxyConfig"`
	// Optional. Template for the root volume provisioned for node pool nodes. Volumes will be provisioned in the availability zone assigned to the node pool subnet. When unspecified, it defaults to 32 GiB with the GP2 volume type.
	RootVolume *AwsNodePoolConfigRootVolume `pulumi:"rootVolume"`
	// Optional. The IDs of additional security groups to add to nodes in this pool. The manager will automatically create security groups with minimum rules needed for a functioning cluster.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// Optional. When specified, the node pool will provision Spot instances from the set of spot_config.instance_types. This field is mutually exclusive with `instanceType`
	SpotConfig *AwsNodePoolConfigSpotConfig `pulumi:"spotConfig"`
	// Optional. The SSH configuration.
	SshConfig *AwsNodePoolConfigSshConfig `pulumi:"sshConfig"`
	// Optional. Key/value metadata to assign to each underlying AWS resource. Specify at most 50 pairs containing alphanumerics, spaces, and symbols (.+-=_:@/). Keys can be up to 127 Unicode characters. Values can be up to 255 Unicode characters.
	Tags map[string]string `pulumi:"tags"`
	// Optional. The initial taints assigned to nodes of this node pool.
	Taints []AwsNodePoolConfigTaint `pulumi:"taints"`
}

// AwsNodePoolConfigInput is an input type that accepts AwsNodePoolConfigArgs and AwsNodePoolConfigOutput values.
// You can construct a concrete instance of `AwsNodePoolConfigInput` via:
//
//	AwsNodePoolConfigArgs{...}
type AwsNodePoolConfigInput interface {
	pulumi.Input

	ToAwsNodePoolConfigOutput() AwsNodePoolConfigOutput
	ToAwsNodePoolConfigOutputWithContext(context.Context) AwsNodePoolConfigOutput
}

type AwsNodePoolConfigArgs struct {
	// Optional. Configuration related to CloudWatch metrics collection on the Auto Scaling group of the node pool. When unspecified, metrics collection is disabled.
	AutoscalingMetricsCollection AwsNodePoolConfigAutoscalingMetricsCollectionPtrInput `pulumi:"autoscalingMetricsCollection"`
	// The ARN of the AWS KMS key used to encrypt node pool configuration.
	ConfigEncryption AwsNodePoolConfigConfigEncryptionInput `pulumi:"configEncryption"`
	// The name of the AWS IAM role assigned to nodes in the pool.
	IamInstanceProfile pulumi.StringInput `pulumi:"iamInstanceProfile"`
	// The OS image type to use on node pool instances.
	ImageType pulumi.StringPtrInput `pulumi:"imageType"`
	// Details of placement information for an instance.
	InstancePlacement AwsNodePoolConfigInstancePlacementPtrInput `pulumi:"instancePlacement"`
	// Optional. The AWS instance type. When unspecified, it defaults to `m5.large`.
	InstanceType pulumi.StringPtrInput `pulumi:"instanceType"`
	// Optional. The initial labels assigned to nodes of this node pool. An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// Proxy configuration for outbound HTTP(S) traffic.
	ProxyConfig AwsNodePoolConfigProxyConfigPtrInput `pulumi:"proxyConfig"`
	// Optional. Template for the root volume provisioned for node pool nodes. Volumes will be provisioned in the availability zone assigned to the node pool subnet. When unspecified, it defaults to 32 GiB with the GP2 volume type.
	RootVolume AwsNodePoolConfigRootVolumePtrInput `pulumi:"rootVolume"`
	// Optional. The IDs of additional security groups to add to nodes in this pool. The manager will automatically create security groups with minimum rules needed for a functioning cluster.
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	// Optional. When specified, the node pool will provision Spot instances from the set of spot_config.instance_types. This field is mutually exclusive with `instanceType`
	SpotConfig AwsNodePoolConfigSpotConfigPtrInput `pulumi:"spotConfig"`
	// Optional. The SSH configuration.
	SshConfig AwsNodePoolConfigSshConfigPtrInput `pulumi:"sshConfig"`
	// Optional. Key/value metadata to assign to each underlying AWS resource. Specify at most 50 pairs containing alphanumerics, spaces, and symbols (.+-=_:@/). Keys can be up to 127 Unicode characters. Values can be up to 255 Unicode characters.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Optional. The initial taints assigned to nodes of this node pool.
	Taints AwsNodePoolConfigTaintArrayInput `pulumi:"taints"`
}

func (AwsNodePoolConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsNodePoolConfig)(nil)).Elem()
}

func (i AwsNodePoolConfigArgs) ToAwsNodePoolConfigOutput() AwsNodePoolConfigOutput {
	return i.ToAwsNodePoolConfigOutputWithContext(context.Background())
}

func (i AwsNodePoolConfigArgs) ToAwsNodePoolConfigOutputWithContext(ctx context.Context) AwsNodePoolConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsNodePoolConfigOutput)
}

func (i AwsNodePoolConfigArgs) ToAwsNodePoolConfigPtrOutput() AwsNodePoolConfigPtrOutput {
	return i.ToAwsNodePoolConfigPtrOutputWithContext(context.Background())
}

func (i AwsNodePoolConfigArgs) ToAwsNodePoolConfigPtrOutputWithContext(ctx context.Context) AwsNodePoolConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsNodePoolConfigOutput).ToAwsNodePoolConfigPtrOutputWithContext(ctx)
}

// AwsNodePoolConfigPtrInput is an input type that accepts AwsNodePoolConfigArgs, AwsNodePoolConfigPtr and AwsNodePoolConfigPtrOutput values.
// You can construct a concrete instance of `AwsNodePoolConfigPtrInput` via:
//
//	        AwsNodePoolConfigArgs{...}
//
//	or:
//
//	        nil
type AwsNodePoolConfigPtrInput interface {
	pulumi.Input

	ToAwsNodePoolConfigPtrOutput() AwsNodePoolConfigPtrOutput
	ToAwsNodePoolConfigPtrOutputWithContext(context.Context) AwsNodePoolConfigPtrOutput
}

type awsNodePoolConfigPtrType AwsNodePoolConfigArgs

func AwsNodePoolConfigPtr(v *AwsNodePoolConfigArgs) AwsNodePoolConfigPtrInput {
	return (*awsNodePoolConfigPtrType)(v)
}

func (*awsNodePoolConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsNodePoolConfig)(nil)).Elem()
}

func (i *awsNodePoolConfigPtrType) ToAwsNodePoolConfigPtrOutput() AwsNodePoolConfigPtrOutput {
	return i.ToAwsNodePoolConfigPtrOutputWithContext(context.Background())
}

func (i *awsNodePoolConfigPtrType) ToAwsNodePoolConfigPtrOutputWithContext(ctx context.Context) AwsNodePoolConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsNodePoolConfigPtrOutput)
}

type AwsNodePoolConfigOutput struct{ *pulumi.OutputState }

func (AwsNodePoolConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsNodePoolConfig)(nil)).Elem()
}

func (o AwsNodePoolConfigOutput) ToAwsNodePoolConfigOutput() AwsNodePoolConfigOutput {
	return o
}

func (o AwsNodePoolConfigOutput) ToAwsNodePoolConfigOutputWithContext(ctx context.Context) AwsNodePoolConfigOutput {
	return o
}

func (o AwsNodePoolConfigOutput) ToAwsNodePoolConfigPtrOutput() AwsNodePoolConfigPtrOutput {
	return o.ToAwsNodePoolConfigPtrOutputWithContext(context.Background())
}

func (o AwsNodePoolConfigOutput) ToAwsNodePoolConfigPtrOutputWithContext(ctx context.Context) AwsNodePoolConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AwsNodePoolConfig) *AwsNodePoolConfig {
		return &v
	}).(AwsNodePoolConfigPtrOutput)
}

// Optional. Configuration related to CloudWatch metrics collection on the Auto Scaling group of the node pool. When unspecified, metrics collection is disabled.
func (o AwsNodePoolConfigOutput) AutoscalingMetricsCollection() AwsNodePoolConfigAutoscalingMetricsCollectionPtrOutput {
	return o.ApplyT(func(v AwsNodePoolConfig) *AwsNodePoolConfigAutoscalingMetricsCollection {
		return v.AutoscalingMetricsCollection
	}).(AwsNodePoolConfigAutoscalingMetricsCollectionPtrOutput)
}

// The ARN of the AWS KMS key used to encrypt node pool configuration.
func (o AwsNodePoolConfigOutput) ConfigEncryption() AwsNodePoolConfigConfigEncryptionOutput {
	return o.ApplyT(func(v AwsNodePoolConfig) AwsNodePoolConfigConfigEncryption { return v.ConfigEncryption }).(AwsNodePoolConfigConfigEncryptionOutput)
}

// The name of the AWS IAM role assigned to nodes in the pool.
func (o AwsNodePoolConfigOutput) IamInstanceProfile() pulumi.StringOutput {
	return o.ApplyT(func(v AwsNodePoolConfig) string { return v.IamInstanceProfile }).(pulumi.StringOutput)
}

// The OS image type to use on node pool instances.
func (o AwsNodePoolConfigOutput) ImageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsNodePoolConfig) *string { return v.ImageType }).(pulumi.StringPtrOutput)
}

// Details of placement information for an instance.
func (o AwsNodePoolConfigOutput) InstancePlacement() AwsNodePoolConfigInstancePlacementPtrOutput {
	return o.ApplyT(func(v AwsNodePoolConfig) *AwsNodePoolConfigInstancePlacement { return v.InstancePlacement }).(AwsNodePoolConfigInstancePlacementPtrOutput)
}

// Optional. The AWS instance type. When unspecified, it defaults to `m5.large`.
func (o AwsNodePoolConfigOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsNodePoolConfig) *string { return v.InstanceType }).(pulumi.StringPtrOutput)
}

// Optional. The initial labels assigned to nodes of this node pool. An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
func (o AwsNodePoolConfigOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v AwsNodePoolConfig) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// Proxy configuration for outbound HTTP(S) traffic.
func (o AwsNodePoolConfigOutput) ProxyConfig() AwsNodePoolConfigProxyConfigPtrOutput {
	return o.ApplyT(func(v AwsNodePoolConfig) *AwsNodePoolConfigProxyConfig { return v.ProxyConfig }).(AwsNodePoolConfigProxyConfigPtrOutput)
}

// Optional. Template for the root volume provisioned for node pool nodes. Volumes will be provisioned in the availability zone assigned to the node pool subnet. When unspecified, it defaults to 32 GiB with the GP2 volume type.
func (o AwsNodePoolConfigOutput) RootVolume() AwsNodePoolConfigRootVolumePtrOutput {
	return o.ApplyT(func(v AwsNodePoolConfig) *AwsNodePoolConfigRootVolume { return v.RootVolume }).(AwsNodePoolConfigRootVolumePtrOutput)
}

// Optional. The IDs of additional security groups to add to nodes in this pool. The manager will automatically create security groups with minimum rules needed for a functioning cluster.
func (o AwsNodePoolConfigOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AwsNodePoolConfig) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// Optional. When specified, the node pool will provision Spot instances from the set of spot_config.instance_types. This field is mutually exclusive with `instanceType`
func (o AwsNodePoolConfigOutput) SpotConfig() AwsNodePoolConfigSpotConfigPtrOutput {
	return o.ApplyT(func(v AwsNodePoolConfig) *AwsNodePoolConfigSpotConfig { return v.SpotConfig }).(AwsNodePoolConfigSpotConfigPtrOutput)
}

// Optional. The SSH configuration.
func (o AwsNodePoolConfigOutput) SshConfig() AwsNodePoolConfigSshConfigPtrOutput {
	return o.ApplyT(func(v AwsNodePoolConfig) *AwsNodePoolConfigSshConfig { return v.SshConfig }).(AwsNodePoolConfigSshConfigPtrOutput)
}

// Optional. Key/value metadata to assign to each underlying AWS resource. Specify at most 50 pairs containing alphanumerics, spaces, and symbols (.+-=_:@/). Keys can be up to 127 Unicode characters. Values can be up to 255 Unicode characters.
func (o AwsNodePoolConfigOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v AwsNodePoolConfig) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Optional. The initial taints assigned to nodes of this node pool.
func (o AwsNodePoolConfigOutput) Taints() AwsNodePoolConfigTaintArrayOutput {
	return o.ApplyT(func(v AwsNodePoolConfig) []AwsNodePoolConfigTaint { return v.Taints }).(AwsNodePoolConfigTaintArrayOutput)
}

type AwsNodePoolConfigPtrOutput struct{ *pulumi.OutputState }

func (AwsNodePoolConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsNodePoolConfig)(nil)).Elem()
}

func (o AwsNodePoolConfigPtrOutput) ToAwsNodePoolConfigPtrOutput() AwsNodePoolConfigPtrOutput {
	return o
}

func (o AwsNodePoolConfigPtrOutput) ToAwsNodePoolConfigPtrOutputWithContext(ctx context.Context) AwsNodePoolConfigPtrOutput {
	return o
}

func (o AwsNodePoolConfigPtrOutput) Elem() AwsNodePoolConfigOutput {
	return o.ApplyT(func(v *AwsNodePoolConfig) AwsNodePoolConfig {
		if v != nil {
			return *v
		}
		var ret AwsNodePoolConfig
		return ret
	}).(AwsNodePoolConfigOutput)
}

// Optional. Configuration related to CloudWatch metrics collection on the Auto Scaling group of the node pool. When unspecified, metrics collection is disabled.
func (o AwsNodePoolConfigPtrOutput) AutoscalingMetricsCollection() AwsNodePoolConfigAutoscalingMetricsCollectionPtrOutput {
	return o.ApplyT(func(v *AwsNodePoolConfig) *AwsNodePoolConfigAutoscalingMetricsCollection {
		if v == nil {
			return nil
		}
		return v.AutoscalingMetricsCollection
	}).(AwsNodePoolConfigAutoscalingMetricsCollectionPtrOutput)
}

// The ARN of the AWS KMS key used to encrypt node pool configuration.
func (o AwsNodePoolConfigPtrOutput) ConfigEncryption() AwsNodePoolConfigConfigEncryptionPtrOutput {
	return o.ApplyT(func(v *AwsNodePoolConfig) *AwsNodePoolConfigConfigEncryption {
		if v == nil {
			return nil
		}
		return &v.ConfigEncryption
	}).(AwsNodePoolConfigConfigEncryptionPtrOutput)
}

// The name of the AWS IAM role assigned to nodes in the pool.
func (o AwsNodePoolConfigPtrOutput) IamInstanceProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsNodePoolConfig) *string {
		if v == nil {
			return nil
		}
		return &v.IamInstanceProfile
	}).(pulumi.StringPtrOutput)
}

// The OS image type to use on node pool instances.
func (o AwsNodePoolConfigPtrOutput) ImageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsNodePoolConfig) *string {
		if v == nil {
			return nil
		}
		return v.ImageType
	}).(pulumi.StringPtrOutput)
}

// Details of placement information for an instance.
func (o AwsNodePoolConfigPtrOutput) InstancePlacement() AwsNodePoolConfigInstancePlacementPtrOutput {
	return o.ApplyT(func(v *AwsNodePoolConfig) *AwsNodePoolConfigInstancePlacement {
		if v == nil {
			return nil
		}
		return v.InstancePlacement
	}).(AwsNodePoolConfigInstancePlacementPtrOutput)
}

// Optional. The AWS instance type. When unspecified, it defaults to `m5.large`.
func (o AwsNodePoolConfigPtrOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsNodePoolConfig) *string {
		if v == nil {
			return nil
		}
		return v.InstanceType
	}).(pulumi.StringPtrOutput)
}

// Optional. The initial labels assigned to nodes of this node pool. An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
func (o AwsNodePoolConfigPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AwsNodePoolConfig) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// Proxy configuration for outbound HTTP(S) traffic.
func (o AwsNodePoolConfigPtrOutput) ProxyConfig() AwsNodePoolConfigProxyConfigPtrOutput {
	return o.ApplyT(func(v *AwsNodePoolConfig) *AwsNodePoolConfigProxyConfig {
		if v == nil {
			return nil
		}
		return v.ProxyConfig
	}).(AwsNodePoolConfigProxyConfigPtrOutput)
}

// Optional. Template for the root volume provisioned for node pool nodes. Volumes will be provisioned in the availability zone assigned to the node pool subnet. When unspecified, it defaults to 32 GiB with the GP2 volume type.
func (o AwsNodePoolConfigPtrOutput) RootVolume() AwsNodePoolConfigRootVolumePtrOutput {
	return o.ApplyT(func(v *AwsNodePoolConfig) *AwsNodePoolConfigRootVolume {
		if v == nil {
			return nil
		}
		return v.RootVolume
	}).(AwsNodePoolConfigRootVolumePtrOutput)
}

// Optional. The IDs of additional security groups to add to nodes in this pool. The manager will automatically create security groups with minimum rules needed for a functioning cluster.
func (o AwsNodePoolConfigPtrOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AwsNodePoolConfig) []string {
		if v == nil {
			return nil
		}
		return v.SecurityGroupIds
	}).(pulumi.StringArrayOutput)
}

// Optional. When specified, the node pool will provision Spot instances from the set of spot_config.instance_types. This field is mutually exclusive with `instanceType`
func (o AwsNodePoolConfigPtrOutput) SpotConfig() AwsNodePoolConfigSpotConfigPtrOutput {
	return o.ApplyT(func(v *AwsNodePoolConfig) *AwsNodePoolConfigSpotConfig {
		if v == nil {
			return nil
		}
		return v.SpotConfig
	}).(AwsNodePoolConfigSpotConfigPtrOutput)
}

// Optional. The SSH configuration.
func (o AwsNodePoolConfigPtrOutput) SshConfig() AwsNodePoolConfigSshConfigPtrOutput {
	return o.ApplyT(func(v *AwsNodePoolConfig) *AwsNodePoolConfigSshConfig {
		if v == nil {
			return nil
		}
		return v.SshConfig
	}).(AwsNodePoolConfigSshConfigPtrOutput)
}

// Optional. Key/value metadata to assign to each underlying AWS resource. Specify at most 50 pairs containing alphanumerics, spaces, and symbols (.+-=_:@/). Keys can be up to 127 Unicode characters. Values can be up to 255 Unicode characters.
func (o AwsNodePoolConfigPtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AwsNodePoolConfig) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// Optional. The initial taints assigned to nodes of this node pool.
func (o AwsNodePoolConfigPtrOutput) Taints() AwsNodePoolConfigTaintArrayOutput {
	return o.ApplyT(func(v *AwsNodePoolConfig) []AwsNodePoolConfigTaint {
		if v == nil {
			return nil
		}
		return v.Taints
	}).(AwsNodePoolConfigTaintArrayOutput)
}

type AwsNodePoolConfigAutoscalingMetricsCollection struct {
	// The frequency at which EC2 Auto Scaling sends aggregated data to AWS CloudWatch. The only valid value is "1Minute".
	Granularity string `pulumi:"granularity"`
	// The metrics to enable. For a list of valid metrics, see https://docs.aws.amazon.com/autoscaling/ec2/APIReference/API_EnableMetricsCollection.html. If you specify granularity and don't specify any metrics, all metrics are enabled.
	Metrics []string `pulumi:"metrics"`
}

// AwsNodePoolConfigAutoscalingMetricsCollectionInput is an input type that accepts AwsNodePoolConfigAutoscalingMetricsCollectionArgs and AwsNodePoolConfigAutoscalingMetricsCollectionOutput values.
// You can construct a concrete instance of `AwsNodePoolConfigAutoscalingMetricsCollectionInput` via:
//
//	AwsNodePoolConfigAutoscalingMetricsCollectionArgs{...}
type AwsNodePoolConfigAutoscalingMetricsCollectionInput interface {
	pulumi.Input

	ToAwsNodePoolConfigAutoscalingMetricsCollectionOutput() AwsNodePoolConfigAutoscalingMetricsCollectionOutput
	ToAwsNodePoolConfigAutoscalingMetricsCollectionOutputWithContext(context.Context) AwsNodePoolConfigAutoscalingMetricsCollectionOutput
}

type AwsNodePoolConfigAutoscalingMetricsCollectionArgs struct {
	// The frequency at which EC2 Auto Scaling sends aggregated data to AWS CloudWatch. The only valid value is "1Minute".
	Granularity pulumi.StringInput `pulumi:"granularity"`
	// The metrics to enable. For a list of valid metrics, see https://docs.aws.amazon.com/autoscaling/ec2/APIReference/API_EnableMetricsCollection.html. If you specify granularity and don't specify any metrics, all metrics are enabled.
	Metrics pulumi.StringArrayInput `pulumi:"metrics"`
}

func (AwsNodePoolConfigAutoscalingMetricsCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsNodePoolConfigAutoscalingMetricsCollection)(nil)).Elem()
}

func (i AwsNodePoolConfigAutoscalingMetricsCollectionArgs) ToAwsNodePoolConfigAutoscalingMetricsCollectionOutput() AwsNodePoolConfigAutoscalingMetricsCollectionOutput {
	return i.ToAwsNodePoolConfigAutoscalingMetricsCollectionOutputWithContext(context.Background())
}

func (i AwsNodePoolConfigAutoscalingMetricsCollectionArgs) ToAwsNodePoolConfigAutoscalingMetricsCollectionOutputWithContext(ctx context.Context) AwsNodePoolConfigAutoscalingMetricsCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsNodePoolConfigAutoscalingMetricsCollectionOutput)
}

func (i AwsNodePoolConfigAutoscalingMetricsCollectionArgs) ToAwsNodePoolConfigAutoscalingMetricsCollectionPtrOutput() AwsNodePoolConfigAutoscalingMetricsCollectionPtrOutput {
	return i.ToAwsNodePoolConfigAutoscalingMetricsCollectionPtrOutputWithContext(context.Background())
}

func (i AwsNodePoolConfigAutoscalingMetricsCollectionArgs) ToAwsNodePoolConfigAutoscalingMetricsCollectionPtrOutputWithContext(ctx context.Context) AwsNodePoolConfigAutoscalingMetricsCollectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsNodePoolConfigAutoscalingMetricsCollectionOutput).ToAwsNodePoolConfigAutoscalingMetricsCollectionPtrOutputWithContext(ctx)
}

// AwsNodePoolConfigAutoscalingMetricsCollectionPtrInput is an input type that accepts AwsNodePoolConfigAutoscalingMetricsCollectionArgs, AwsNodePoolConfigAutoscalingMetricsCollectionPtr and AwsNodePoolConfigAutoscalingMetricsCollectionPtrOutput values.
// You can construct a concrete instance of `AwsNodePoolConfigAutoscalingMetricsCollectionPtrInput` via:
//
//	        AwsNodePoolConfigAutoscalingMetricsCollectionArgs{...}
//
//	or:
//
//	        nil
type AwsNodePoolConfigAutoscalingMetricsCollectionPtrInput interface {
	pulumi.Input

	ToAwsNodePoolConfigAutoscalingMetricsCollectionPtrOutput() AwsNodePoolConfigAutoscalingMetricsCollectionPtrOutput
	ToAwsNodePoolConfigAutoscalingMetricsCollectionPtrOutputWithContext(context.Context) AwsNodePoolConfigAutoscalingMetricsCollectionPtrOutput
}

type awsNodePoolConfigAutoscalingMetricsCollectionPtrType AwsNodePoolConfigAutoscalingMetricsCollectionArgs

func AwsNodePoolConfigAutoscalingMetricsCollectionPtr(v *AwsNodePoolConfigAutoscalingMetricsCollectionArgs) AwsNodePoolConfigAutoscalingMetricsCollectionPtrInput {
	return (*awsNodePoolConfigAutoscalingMetricsCollectionPtrType)(v)
}

func (*awsNodePoolConfigAutoscalingMetricsCollectionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsNodePoolConfigAutoscalingMetricsCollection)(nil)).Elem()
}

func (i *awsNodePoolConfigAutoscalingMetricsCollectionPtrType) ToAwsNodePoolConfigAutoscalingMetricsCollectionPtrOutput() AwsNodePoolConfigAutoscalingMetricsCollectionPtrOutput {
	return i.ToAwsNodePoolConfigAutoscalingMetricsCollectionPtrOutputWithContext(context.Background())
}

func (i *awsNodePoolConfigAutoscalingMetricsCollectionPtrType) ToAwsNodePoolConfigAutoscalingMetricsCollectionPtrOutputWithContext(ctx context.Context) AwsNodePoolConfigAutoscalingMetricsCollectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsNodePoolConfigAutoscalingMetricsCollectionPtrOutput)
}

type AwsNodePoolConfigAutoscalingMetricsCollectionOutput struct{ *pulumi.OutputState }

func (AwsNodePoolConfigAutoscalingMetricsCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsNodePoolConfigAutoscalingMetricsCollection)(nil)).Elem()
}

func (o AwsNodePoolConfigAutoscalingMetricsCollectionOutput) ToAwsNodePoolConfigAutoscalingMetricsCollectionOutput() AwsNodePoolConfigAutoscalingMetricsCollectionOutput {
	return o
}

func (o AwsNodePoolConfigAutoscalingMetricsCollectionOutput) ToAwsNodePoolConfigAutoscalingMetricsCollectionOutputWithContext(ctx context.Context) AwsNodePoolConfigAutoscalingMetricsCollectionOutput {
	return o
}

func (o AwsNodePoolConfigAutoscalingMetricsCollectionOutput) ToAwsNodePoolConfigAutoscalingMetricsCollectionPtrOutput() AwsNodePoolConfigAutoscalingMetricsCollectionPtrOutput {
	return o.ToAwsNodePoolConfigAutoscalingMetricsCollectionPtrOutputWithContext(context.Background())
}

func (o AwsNodePoolConfigAutoscalingMetricsCollectionOutput) ToAwsNodePoolConfigAutoscalingMetricsCollectionPtrOutputWithContext(ctx context.Context) AwsNodePoolConfigAutoscalingMetricsCollectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AwsNodePoolConfigAutoscalingMetricsCollection) *AwsNodePoolConfigAutoscalingMetricsCollection {
		return &v
	}).(AwsNodePoolConfigAutoscalingMetricsCollectionPtrOutput)
}

// The frequency at which EC2 Auto Scaling sends aggregated data to AWS CloudWatch. The only valid value is "1Minute".
func (o AwsNodePoolConfigAutoscalingMetricsCollectionOutput) Granularity() pulumi.StringOutput {
	return o.ApplyT(func(v AwsNodePoolConfigAutoscalingMetricsCollection) string { return v.Granularity }).(pulumi.StringOutput)
}

// The metrics to enable. For a list of valid metrics, see https://docs.aws.amazon.com/autoscaling/ec2/APIReference/API_EnableMetricsCollection.html. If you specify granularity and don't specify any metrics, all metrics are enabled.
func (o AwsNodePoolConfigAutoscalingMetricsCollectionOutput) Metrics() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AwsNodePoolConfigAutoscalingMetricsCollection) []string { return v.Metrics }).(pulumi.StringArrayOutput)
}

type AwsNodePoolConfigAutoscalingMetricsCollectionPtrOutput struct{ *pulumi.OutputState }

func (AwsNodePoolConfigAutoscalingMetricsCollectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsNodePoolConfigAutoscalingMetricsCollection)(nil)).Elem()
}

func (o AwsNodePoolConfigAutoscalingMetricsCollectionPtrOutput) ToAwsNodePoolConfigAutoscalingMetricsCollectionPtrOutput() AwsNodePoolConfigAutoscalingMetricsCollectionPtrOutput {
	return o
}

func (o AwsNodePoolConfigAutoscalingMetricsCollectionPtrOutput) ToAwsNodePoolConfigAutoscalingMetricsCollectionPtrOutputWithContext(ctx context.Context) AwsNodePoolConfigAutoscalingMetricsCollectionPtrOutput {
	return o
}

func (o AwsNodePoolConfigAutoscalingMetricsCollectionPtrOutput) Elem() AwsNodePoolConfigAutoscalingMetricsCollectionOutput {
	return o.ApplyT(func(v *AwsNodePoolConfigAutoscalingMetricsCollection) AwsNodePoolConfigAutoscalingMetricsCollection {
		if v != nil {
			return *v
		}
		var ret AwsNodePoolConfigAutoscalingMetricsCollection
		return ret
	}).(AwsNodePoolConfigAutoscalingMetricsCollectionOutput)
}

// The frequency at which EC2 Auto Scaling sends aggregated data to AWS CloudWatch. The only valid value is "1Minute".
func (o AwsNodePoolConfigAutoscalingMetricsCollectionPtrOutput) Granularity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsNodePoolConfigAutoscalingMetricsCollection) *string {
		if v == nil {
			return nil
		}
		return &v.Granularity
	}).(pulumi.StringPtrOutput)
}

// The metrics to enable. For a list of valid metrics, see https://docs.aws.amazon.com/autoscaling/ec2/APIReference/API_EnableMetricsCollection.html. If you specify granularity and don't specify any metrics, all metrics are enabled.
func (o AwsNodePoolConfigAutoscalingMetricsCollectionPtrOutput) Metrics() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AwsNodePoolConfigAutoscalingMetricsCollection) []string {
		if v == nil {
			return nil
		}
		return v.Metrics
	}).(pulumi.StringArrayOutput)
}

type AwsNodePoolConfigConfigEncryption struct {
	// The ARN of the AWS KMS key used to encrypt node pool configuration.
	KmsKeyArn string `pulumi:"kmsKeyArn"`
}

// AwsNodePoolConfigConfigEncryptionInput is an input type that accepts AwsNodePoolConfigConfigEncryptionArgs and AwsNodePoolConfigConfigEncryptionOutput values.
// You can construct a concrete instance of `AwsNodePoolConfigConfigEncryptionInput` via:
//
//	AwsNodePoolConfigConfigEncryptionArgs{...}
type AwsNodePoolConfigConfigEncryptionInput interface {
	pulumi.Input

	ToAwsNodePoolConfigConfigEncryptionOutput() AwsNodePoolConfigConfigEncryptionOutput
	ToAwsNodePoolConfigConfigEncryptionOutputWithContext(context.Context) AwsNodePoolConfigConfigEncryptionOutput
}

type AwsNodePoolConfigConfigEncryptionArgs struct {
	// The ARN of the AWS KMS key used to encrypt node pool configuration.
	KmsKeyArn pulumi.StringInput `pulumi:"kmsKeyArn"`
}

func (AwsNodePoolConfigConfigEncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsNodePoolConfigConfigEncryption)(nil)).Elem()
}

func (i AwsNodePoolConfigConfigEncryptionArgs) ToAwsNodePoolConfigConfigEncryptionOutput() AwsNodePoolConfigConfigEncryptionOutput {
	return i.ToAwsNodePoolConfigConfigEncryptionOutputWithContext(context.Background())
}

func (i AwsNodePoolConfigConfigEncryptionArgs) ToAwsNodePoolConfigConfigEncryptionOutputWithContext(ctx context.Context) AwsNodePoolConfigConfigEncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsNodePoolConfigConfigEncryptionOutput)
}

func (i AwsNodePoolConfigConfigEncryptionArgs) ToAwsNodePoolConfigConfigEncryptionPtrOutput() AwsNodePoolConfigConfigEncryptionPtrOutput {
	return i.ToAwsNodePoolConfigConfigEncryptionPtrOutputWithContext(context.Background())
}

func (i AwsNodePoolConfigConfigEncryptionArgs) ToAwsNodePoolConfigConfigEncryptionPtrOutputWithContext(ctx context.Context) AwsNodePoolConfigConfigEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsNodePoolConfigConfigEncryptionOutput).ToAwsNodePoolConfigConfigEncryptionPtrOutputWithContext(ctx)
}

// AwsNodePoolConfigConfigEncryptionPtrInput is an input type that accepts AwsNodePoolConfigConfigEncryptionArgs, AwsNodePoolConfigConfigEncryptionPtr and AwsNodePoolConfigConfigEncryptionPtrOutput values.
// You can construct a concrete instance of `AwsNodePoolConfigConfigEncryptionPtrInput` via:
//
//	        AwsNodePoolConfigConfigEncryptionArgs{...}
//
//	or:
//
//	        nil
type AwsNodePoolConfigConfigEncryptionPtrInput interface {
	pulumi.Input

	ToAwsNodePoolConfigConfigEncryptionPtrOutput() AwsNodePoolConfigConfigEncryptionPtrOutput
	ToAwsNodePoolConfigConfigEncryptionPtrOutputWithContext(context.Context) AwsNodePoolConfigConfigEncryptionPtrOutput
}

type awsNodePoolConfigConfigEncryptionPtrType AwsNodePoolConfigConfigEncryptionArgs

func AwsNodePoolConfigConfigEncryptionPtr(v *AwsNodePoolConfigConfigEncryptionArgs) AwsNodePoolConfigConfigEncryptionPtrInput {
	return (*awsNodePoolConfigConfigEncryptionPtrType)(v)
}

func (*awsNodePoolConfigConfigEncryptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsNodePoolConfigConfigEncryption)(nil)).Elem()
}

func (i *awsNodePoolConfigConfigEncryptionPtrType) ToAwsNodePoolConfigConfigEncryptionPtrOutput() AwsNodePoolConfigConfigEncryptionPtrOutput {
	return i.ToAwsNodePoolConfigConfigEncryptionPtrOutputWithContext(context.Background())
}

func (i *awsNodePoolConfigConfigEncryptionPtrType) ToAwsNodePoolConfigConfigEncryptionPtrOutputWithContext(ctx context.Context) AwsNodePoolConfigConfigEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsNodePoolConfigConfigEncryptionPtrOutput)
}

type AwsNodePoolConfigConfigEncryptionOutput struct{ *pulumi.OutputState }

func (AwsNodePoolConfigConfigEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsNodePoolConfigConfigEncryption)(nil)).Elem()
}

func (o AwsNodePoolConfigConfigEncryptionOutput) ToAwsNodePoolConfigConfigEncryptionOutput() AwsNodePoolConfigConfigEncryptionOutput {
	return o
}

func (o AwsNodePoolConfigConfigEncryptionOutput) ToAwsNodePoolConfigConfigEncryptionOutputWithContext(ctx context.Context) AwsNodePoolConfigConfigEncryptionOutput {
	return o
}

func (o AwsNodePoolConfigConfigEncryptionOutput) ToAwsNodePoolConfigConfigEncryptionPtrOutput() AwsNodePoolConfigConfigEncryptionPtrOutput {
	return o.ToAwsNodePoolConfigConfigEncryptionPtrOutputWithContext(context.Background())
}

func (o AwsNodePoolConfigConfigEncryptionOutput) ToAwsNodePoolConfigConfigEncryptionPtrOutputWithContext(ctx context.Context) AwsNodePoolConfigConfigEncryptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AwsNodePoolConfigConfigEncryption) *AwsNodePoolConfigConfigEncryption {
		return &v
	}).(AwsNodePoolConfigConfigEncryptionPtrOutput)
}

// The ARN of the AWS KMS key used to encrypt node pool configuration.
func (o AwsNodePoolConfigConfigEncryptionOutput) KmsKeyArn() pulumi.StringOutput {
	return o.ApplyT(func(v AwsNodePoolConfigConfigEncryption) string { return v.KmsKeyArn }).(pulumi.StringOutput)
}

type AwsNodePoolConfigConfigEncryptionPtrOutput struct{ *pulumi.OutputState }

func (AwsNodePoolConfigConfigEncryptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsNodePoolConfigConfigEncryption)(nil)).Elem()
}

func (o AwsNodePoolConfigConfigEncryptionPtrOutput) ToAwsNodePoolConfigConfigEncryptionPtrOutput() AwsNodePoolConfigConfigEncryptionPtrOutput {
	return o
}

func (o AwsNodePoolConfigConfigEncryptionPtrOutput) ToAwsNodePoolConfigConfigEncryptionPtrOutputWithContext(ctx context.Context) AwsNodePoolConfigConfigEncryptionPtrOutput {
	return o
}

func (o AwsNodePoolConfigConfigEncryptionPtrOutput) Elem() AwsNodePoolConfigConfigEncryptionOutput {
	return o.ApplyT(func(v *AwsNodePoolConfigConfigEncryption) AwsNodePoolConfigConfigEncryption {
		if v != nil {
			return *v
		}
		var ret AwsNodePoolConfigConfigEncryption
		return ret
	}).(AwsNodePoolConfigConfigEncryptionOutput)
}

// The ARN of the AWS KMS key used to encrypt node pool configuration.
func (o AwsNodePoolConfigConfigEncryptionPtrOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsNodePoolConfigConfigEncryption) *string {
		if v == nil {
			return nil
		}
		return &v.KmsKeyArn
	}).(pulumi.StringPtrOutput)
}

type AwsNodePoolConfigInstancePlacement struct {
	// The tenancy for the instance. Possible values: TENANCY_UNSPECIFIED, DEFAULT, DEDICATED, HOST
	Tenancy *string `pulumi:"tenancy"`
}

// AwsNodePoolConfigInstancePlacementInput is an input type that accepts AwsNodePoolConfigInstancePlacementArgs and AwsNodePoolConfigInstancePlacementOutput values.
// You can construct a concrete instance of `AwsNodePoolConfigInstancePlacementInput` via:
//
//	AwsNodePoolConfigInstancePlacementArgs{...}
type AwsNodePoolConfigInstancePlacementInput interface {
	pulumi.Input

	ToAwsNodePoolConfigInstancePlacementOutput() AwsNodePoolConfigInstancePlacementOutput
	ToAwsNodePoolConfigInstancePlacementOutputWithContext(context.Context) AwsNodePoolConfigInstancePlacementOutput
}

type AwsNodePoolConfigInstancePlacementArgs struct {
	// The tenancy for the instance. Possible values: TENANCY_UNSPECIFIED, DEFAULT, DEDICATED, HOST
	Tenancy pulumi.StringPtrInput `pulumi:"tenancy"`
}

func (AwsNodePoolConfigInstancePlacementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsNodePoolConfigInstancePlacement)(nil)).Elem()
}

func (i AwsNodePoolConfigInstancePlacementArgs) ToAwsNodePoolConfigInstancePlacementOutput() AwsNodePoolConfigInstancePlacementOutput {
	return i.ToAwsNodePoolConfigInstancePlacementOutputWithContext(context.Background())
}

func (i AwsNodePoolConfigInstancePlacementArgs) ToAwsNodePoolConfigInstancePlacementOutputWithContext(ctx context.Context) AwsNodePoolConfigInstancePlacementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsNodePoolConfigInstancePlacementOutput)
}

func (i AwsNodePoolConfigInstancePlacementArgs) ToAwsNodePoolConfigInstancePlacementPtrOutput() AwsNodePoolConfigInstancePlacementPtrOutput {
	return i.ToAwsNodePoolConfigInstancePlacementPtrOutputWithContext(context.Background())
}

func (i AwsNodePoolConfigInstancePlacementArgs) ToAwsNodePoolConfigInstancePlacementPtrOutputWithContext(ctx context.Context) AwsNodePoolConfigInstancePlacementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsNodePoolConfigInstancePlacementOutput).ToAwsNodePoolConfigInstancePlacementPtrOutputWithContext(ctx)
}

// AwsNodePoolConfigInstancePlacementPtrInput is an input type that accepts AwsNodePoolConfigInstancePlacementArgs, AwsNodePoolConfigInstancePlacementPtr and AwsNodePoolConfigInstancePlacementPtrOutput values.
// You can construct a concrete instance of `AwsNodePoolConfigInstancePlacementPtrInput` via:
//
//	        AwsNodePoolConfigInstancePlacementArgs{...}
//
//	or:
//
//	        nil
type AwsNodePoolConfigInstancePlacementPtrInput interface {
	pulumi.Input

	ToAwsNodePoolConfigInstancePlacementPtrOutput() AwsNodePoolConfigInstancePlacementPtrOutput
	ToAwsNodePoolConfigInstancePlacementPtrOutputWithContext(context.Context) AwsNodePoolConfigInstancePlacementPtrOutput
}

type awsNodePoolConfigInstancePlacementPtrType AwsNodePoolConfigInstancePlacementArgs

func AwsNodePoolConfigInstancePlacementPtr(v *AwsNodePoolConfigInstancePlacementArgs) AwsNodePoolConfigInstancePlacementPtrInput {
	return (*awsNodePoolConfigInstancePlacementPtrType)(v)
}

func (*awsNodePoolConfigInstancePlacementPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsNodePoolConfigInstancePlacement)(nil)).Elem()
}

func (i *awsNodePoolConfigInstancePlacementPtrType) ToAwsNodePoolConfigInstancePlacementPtrOutput() AwsNodePoolConfigInstancePlacementPtrOutput {
	return i.ToAwsNodePoolConfigInstancePlacementPtrOutputWithContext(context.Background())
}

func (i *awsNodePoolConfigInstancePlacementPtrType) ToAwsNodePoolConfigInstancePlacementPtrOutputWithContext(ctx context.Context) AwsNodePoolConfigInstancePlacementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsNodePoolConfigInstancePlacementPtrOutput)
}

type AwsNodePoolConfigInstancePlacementOutput struct{ *pulumi.OutputState }

func (AwsNodePoolConfigInstancePlacementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsNodePoolConfigInstancePlacement)(nil)).Elem()
}

func (o AwsNodePoolConfigInstancePlacementOutput) ToAwsNodePoolConfigInstancePlacementOutput() AwsNodePoolConfigInstancePlacementOutput {
	return o
}

func (o AwsNodePoolConfigInstancePlacementOutput) ToAwsNodePoolConfigInstancePlacementOutputWithContext(ctx context.Context) AwsNodePoolConfigInstancePlacementOutput {
	return o
}

func (o AwsNodePoolConfigInstancePlacementOutput) ToAwsNodePoolConfigInstancePlacementPtrOutput() AwsNodePoolConfigInstancePlacementPtrOutput {
	return o.ToAwsNodePoolConfigInstancePlacementPtrOutputWithContext(context.Background())
}

func (o AwsNodePoolConfigInstancePlacementOutput) ToAwsNodePoolConfigInstancePlacementPtrOutputWithContext(ctx context.Context) AwsNodePoolConfigInstancePlacementPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AwsNodePoolConfigInstancePlacement) *AwsNodePoolConfigInstancePlacement {
		return &v
	}).(AwsNodePoolConfigInstancePlacementPtrOutput)
}

// The tenancy for the instance. Possible values: TENANCY_UNSPECIFIED, DEFAULT, DEDICATED, HOST
func (o AwsNodePoolConfigInstancePlacementOutput) Tenancy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsNodePoolConfigInstancePlacement) *string { return v.Tenancy }).(pulumi.StringPtrOutput)
}

type AwsNodePoolConfigInstancePlacementPtrOutput struct{ *pulumi.OutputState }

func (AwsNodePoolConfigInstancePlacementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsNodePoolConfigInstancePlacement)(nil)).Elem()
}

func (o AwsNodePoolConfigInstancePlacementPtrOutput) ToAwsNodePoolConfigInstancePlacementPtrOutput() AwsNodePoolConfigInstancePlacementPtrOutput {
	return o
}

func (o AwsNodePoolConfigInstancePlacementPtrOutput) ToAwsNodePoolConfigInstancePlacementPtrOutputWithContext(ctx context.Context) AwsNodePoolConfigInstancePlacementPtrOutput {
	return o
}

func (o AwsNodePoolConfigInstancePlacementPtrOutput) Elem() AwsNodePoolConfigInstancePlacementOutput {
	return o.ApplyT(func(v *AwsNodePoolConfigInstancePlacement) AwsNodePoolConfigInstancePlacement {
		if v != nil {
			return *v
		}
		var ret AwsNodePoolConfigInstancePlacement
		return ret
	}).(AwsNodePoolConfigInstancePlacementOutput)
}

// The tenancy for the instance. Possible values: TENANCY_UNSPECIFIED, DEFAULT, DEDICATED, HOST
func (o AwsNodePoolConfigInstancePlacementPtrOutput) Tenancy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsNodePoolConfigInstancePlacement) *string {
		if v == nil {
			return nil
		}
		return v.Tenancy
	}).(pulumi.StringPtrOutput)
}

type AwsNodePoolConfigProxyConfig struct {
	// The ARN of the AWS Secret Manager secret that contains the HTTP(S) proxy configuration.
	SecretArn string `pulumi:"secretArn"`
	// The version string of the AWS Secret Manager secret that contains the HTTP(S) proxy configuration.
	SecretVersion string `pulumi:"secretVersion"`
}

// AwsNodePoolConfigProxyConfigInput is an input type that accepts AwsNodePoolConfigProxyConfigArgs and AwsNodePoolConfigProxyConfigOutput values.
// You can construct a concrete instance of `AwsNodePoolConfigProxyConfigInput` via:
//
//	AwsNodePoolConfigProxyConfigArgs{...}
type AwsNodePoolConfigProxyConfigInput interface {
	pulumi.Input

	ToAwsNodePoolConfigProxyConfigOutput() AwsNodePoolConfigProxyConfigOutput
	ToAwsNodePoolConfigProxyConfigOutputWithContext(context.Context) AwsNodePoolConfigProxyConfigOutput
}

type AwsNodePoolConfigProxyConfigArgs struct {
	// The ARN of the AWS Secret Manager secret that contains the HTTP(S) proxy configuration.
	SecretArn pulumi.StringInput `pulumi:"secretArn"`
	// The version string of the AWS Secret Manager secret that contains the HTTP(S) proxy configuration.
	SecretVersion pulumi.StringInput `pulumi:"secretVersion"`
}

func (AwsNodePoolConfigProxyConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsNodePoolConfigProxyConfig)(nil)).Elem()
}

func (i AwsNodePoolConfigProxyConfigArgs) ToAwsNodePoolConfigProxyConfigOutput() AwsNodePoolConfigProxyConfigOutput {
	return i.ToAwsNodePoolConfigProxyConfigOutputWithContext(context.Background())
}

func (i AwsNodePoolConfigProxyConfigArgs) ToAwsNodePoolConfigProxyConfigOutputWithContext(ctx context.Context) AwsNodePoolConfigProxyConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsNodePoolConfigProxyConfigOutput)
}

func (i AwsNodePoolConfigProxyConfigArgs) ToAwsNodePoolConfigProxyConfigPtrOutput() AwsNodePoolConfigProxyConfigPtrOutput {
	return i.ToAwsNodePoolConfigProxyConfigPtrOutputWithContext(context.Background())
}

func (i AwsNodePoolConfigProxyConfigArgs) ToAwsNodePoolConfigProxyConfigPtrOutputWithContext(ctx context.Context) AwsNodePoolConfigProxyConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsNodePoolConfigProxyConfigOutput).ToAwsNodePoolConfigProxyConfigPtrOutputWithContext(ctx)
}

// AwsNodePoolConfigProxyConfigPtrInput is an input type that accepts AwsNodePoolConfigProxyConfigArgs, AwsNodePoolConfigProxyConfigPtr and AwsNodePoolConfigProxyConfigPtrOutput values.
// You can construct a concrete instance of `AwsNodePoolConfigProxyConfigPtrInput` via:
//
//	        AwsNodePoolConfigProxyConfigArgs{...}
//
//	or:
//
//	        nil
type AwsNodePoolConfigProxyConfigPtrInput interface {
	pulumi.Input

	ToAwsNodePoolConfigProxyConfigPtrOutput() AwsNodePoolConfigProxyConfigPtrOutput
	ToAwsNodePoolConfigProxyConfigPtrOutputWithContext(context.Context) AwsNodePoolConfigProxyConfigPtrOutput
}

type awsNodePoolConfigProxyConfigPtrType AwsNodePoolConfigProxyConfigArgs

func AwsNodePoolConfigProxyConfigPtr(v *AwsNodePoolConfigProxyConfigArgs) AwsNodePoolConfigProxyConfigPtrInput {
	return (*awsNodePoolConfigProxyConfigPtrType)(v)
}

func (*awsNodePoolConfigProxyConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsNodePoolConfigProxyConfig)(nil)).Elem()
}

func (i *awsNodePoolConfigProxyConfigPtrType) ToAwsNodePoolConfigProxyConfigPtrOutput() AwsNodePoolConfigProxyConfigPtrOutput {
	return i.ToAwsNodePoolConfigProxyConfigPtrOutputWithContext(context.Background())
}

func (i *awsNodePoolConfigProxyConfigPtrType) ToAwsNodePoolConfigProxyConfigPtrOutputWithContext(ctx context.Context) AwsNodePoolConfigProxyConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsNodePoolConfigProxyConfigPtrOutput)
}

type AwsNodePoolConfigProxyConfigOutput struct{ *pulumi.OutputState }

func (AwsNodePoolConfigProxyConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsNodePoolConfigProxyConfig)(nil)).Elem()
}

func (o AwsNodePoolConfigProxyConfigOutput) ToAwsNodePoolConfigProxyConfigOutput() AwsNodePoolConfigProxyConfigOutput {
	return o
}

func (o AwsNodePoolConfigProxyConfigOutput) ToAwsNodePoolConfigProxyConfigOutputWithContext(ctx context.Context) AwsNodePoolConfigProxyConfigOutput {
	return o
}

func (o AwsNodePoolConfigProxyConfigOutput) ToAwsNodePoolConfigProxyConfigPtrOutput() AwsNodePoolConfigProxyConfigPtrOutput {
	return o.ToAwsNodePoolConfigProxyConfigPtrOutputWithContext(context.Background())
}

func (o AwsNodePoolConfigProxyConfigOutput) ToAwsNodePoolConfigProxyConfigPtrOutputWithContext(ctx context.Context) AwsNodePoolConfigProxyConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AwsNodePoolConfigProxyConfig) *AwsNodePoolConfigProxyConfig {
		return &v
	}).(AwsNodePoolConfigProxyConfigPtrOutput)
}

// The ARN of the AWS Secret Manager secret that contains the HTTP(S) proxy configuration.
func (o AwsNodePoolConfigProxyConfigOutput) SecretArn() pulumi.StringOutput {
	return o.ApplyT(func(v AwsNodePoolConfigProxyConfig) string { return v.SecretArn }).(pulumi.StringOutput)
}

// The version string of the AWS Secret Manager secret that contains the HTTP(S) proxy configuration.
func (o AwsNodePoolConfigProxyConfigOutput) SecretVersion() pulumi.StringOutput {
	return o.ApplyT(func(v AwsNodePoolConfigProxyConfig) string { return v.SecretVersion }).(pulumi.StringOutput)
}

type AwsNodePoolConfigProxyConfigPtrOutput struct{ *pulumi.OutputState }

func (AwsNodePoolConfigProxyConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsNodePoolConfigProxyConfig)(nil)).Elem()
}

func (o AwsNodePoolConfigProxyConfigPtrOutput) ToAwsNodePoolConfigProxyConfigPtrOutput() AwsNodePoolConfigProxyConfigPtrOutput {
	return o
}

func (o AwsNodePoolConfigProxyConfigPtrOutput) ToAwsNodePoolConfigProxyConfigPtrOutputWithContext(ctx context.Context) AwsNodePoolConfigProxyConfigPtrOutput {
	return o
}

func (o AwsNodePoolConfigProxyConfigPtrOutput) Elem() AwsNodePoolConfigProxyConfigOutput {
	return o.ApplyT(func(v *AwsNodePoolConfigProxyConfig) AwsNodePoolConfigProxyConfig {
		if v != nil {
			return *v
		}
		var ret AwsNodePoolConfigProxyConfig
		return ret
	}).(AwsNodePoolConfigProxyConfigOutput)
}

// The ARN of the AWS Secret Manager secret that contains the HTTP(S) proxy configuration.
func (o AwsNodePoolConfigProxyConfigPtrOutput) SecretArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsNodePoolConfigProxyConfig) *string {
		if v == nil {
			return nil
		}
		return &v.SecretArn
	}).(pulumi.StringPtrOutput)
}

// The version string of the AWS Secret Manager secret that contains the HTTP(S) proxy configuration.
func (o AwsNodePoolConfigProxyConfigPtrOutput) SecretVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsNodePoolConfigProxyConfig) *string {
		if v == nil {
			return nil
		}
		return &v.SecretVersion
	}).(pulumi.StringPtrOutput)
}

type AwsNodePoolConfigRootVolume struct {
	// Optional. The number of I/O operations per second (IOPS) to provision for GP3 volume.
	Iops *int `pulumi:"iops"`
	// Optional. The Amazon Resource Name (ARN) of the Customer Managed Key (CMK) used to encrypt AWS EBS volumes. If not specified, the default Amazon managed key associated to the AWS region where this cluster runs will be used.
	KmsKeyArn *string `pulumi:"kmsKeyArn"`
	// Optional. The size of the volume, in GiBs. When unspecified, a default value is provided. See the specific reference in the parent resource.
	SizeGib *int `pulumi:"sizeGib"`
	// Optional. The throughput to provision for the volume, in MiB/s. Only valid if the volume type is GP3. If volume type is gp3 and throughput is not specified, the throughput will defaults to 125.
	Throughput *int `pulumi:"throughput"`
	// Optional. Type of the EBS volume. When unspecified, it defaults to GP2 volume. Possible values: VOLUME_TYPE_UNSPECIFIED, GP2, GP3
	VolumeType *string `pulumi:"volumeType"`
}

// AwsNodePoolConfigRootVolumeInput is an input type that accepts AwsNodePoolConfigRootVolumeArgs and AwsNodePoolConfigRootVolumeOutput values.
// You can construct a concrete instance of `AwsNodePoolConfigRootVolumeInput` via:
//
//	AwsNodePoolConfigRootVolumeArgs{...}
type AwsNodePoolConfigRootVolumeInput interface {
	pulumi.Input

	ToAwsNodePoolConfigRootVolumeOutput() AwsNodePoolConfigRootVolumeOutput
	ToAwsNodePoolConfigRootVolumeOutputWithContext(context.Context) AwsNodePoolConfigRootVolumeOutput
}

type AwsNodePoolConfigRootVolumeArgs struct {
	// Optional. The number of I/O operations per second (IOPS) to provision for GP3 volume.
	Iops pulumi.IntPtrInput `pulumi:"iops"`
	// Optional. The Amazon Resource Name (ARN) of the Customer Managed Key (CMK) used to encrypt AWS EBS volumes. If not specified, the default Amazon managed key associated to the AWS region where this cluster runs will be used.
	KmsKeyArn pulumi.StringPtrInput `pulumi:"kmsKeyArn"`
	// Optional. The size of the volume, in GiBs. When unspecified, a default value is provided. See the specific reference in the parent resource.
	SizeGib pulumi.IntPtrInput `pulumi:"sizeGib"`
	// Optional. The throughput to provision for the volume, in MiB/s. Only valid if the volume type is GP3. If volume type is gp3 and throughput is not specified, the throughput will defaults to 125.
	Throughput pulumi.IntPtrInput `pulumi:"throughput"`
	// Optional. Type of the EBS volume. When unspecified, it defaults to GP2 volume. Possible values: VOLUME_TYPE_UNSPECIFIED, GP2, GP3
	VolumeType pulumi.StringPtrInput `pulumi:"volumeType"`
}

func (AwsNodePoolConfigRootVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsNodePoolConfigRootVolume)(nil)).Elem()
}

func (i AwsNodePoolConfigRootVolumeArgs) ToAwsNodePoolConfigRootVolumeOutput() AwsNodePoolConfigRootVolumeOutput {
	return i.ToAwsNodePoolConfigRootVolumeOutputWithContext(context.Background())
}

func (i AwsNodePoolConfigRootVolumeArgs) ToAwsNodePoolConfigRootVolumeOutputWithContext(ctx context.Context) AwsNodePoolConfigRootVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsNodePoolConfigRootVolumeOutput)
}

func (i AwsNodePoolConfigRootVolumeArgs) ToAwsNodePoolConfigRootVolumePtrOutput() AwsNodePoolConfigRootVolumePtrOutput {
	return i.ToAwsNodePoolConfigRootVolumePtrOutputWithContext(context.Background())
}

func (i AwsNodePoolConfigRootVolumeArgs) ToAwsNodePoolConfigRootVolumePtrOutputWithContext(ctx context.Context) AwsNodePoolConfigRootVolumePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsNodePoolConfigRootVolumeOutput).ToAwsNodePoolConfigRootVolumePtrOutputWithContext(ctx)
}

// AwsNodePoolConfigRootVolumePtrInput is an input type that accepts AwsNodePoolConfigRootVolumeArgs, AwsNodePoolConfigRootVolumePtr and AwsNodePoolConfigRootVolumePtrOutput values.
// You can construct a concrete instance of `AwsNodePoolConfigRootVolumePtrInput` via:
//
//	        AwsNodePoolConfigRootVolumeArgs{...}
//
//	or:
//
//	        nil
type AwsNodePoolConfigRootVolumePtrInput interface {
	pulumi.Input

	ToAwsNodePoolConfigRootVolumePtrOutput() AwsNodePoolConfigRootVolumePtrOutput
	ToAwsNodePoolConfigRootVolumePtrOutputWithContext(context.Context) AwsNodePoolConfigRootVolumePtrOutput
}

type awsNodePoolConfigRootVolumePtrType AwsNodePoolConfigRootVolumeArgs

func AwsNodePoolConfigRootVolumePtr(v *AwsNodePoolConfigRootVolumeArgs) AwsNodePoolConfigRootVolumePtrInput {
	return (*awsNodePoolConfigRootVolumePtrType)(v)
}

func (*awsNodePoolConfigRootVolumePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsNodePoolConfigRootVolume)(nil)).Elem()
}

func (i *awsNodePoolConfigRootVolumePtrType) ToAwsNodePoolConfigRootVolumePtrOutput() AwsNodePoolConfigRootVolumePtrOutput {
	return i.ToAwsNodePoolConfigRootVolumePtrOutputWithContext(context.Background())
}

func (i *awsNodePoolConfigRootVolumePtrType) ToAwsNodePoolConfigRootVolumePtrOutputWithContext(ctx context.Context) AwsNodePoolConfigRootVolumePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsNodePoolConfigRootVolumePtrOutput)
}

type AwsNodePoolConfigRootVolumeOutput struct{ *pulumi.OutputState }

func (AwsNodePoolConfigRootVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsNodePoolConfigRootVolume)(nil)).Elem()
}

func (o AwsNodePoolConfigRootVolumeOutput) ToAwsNodePoolConfigRootVolumeOutput() AwsNodePoolConfigRootVolumeOutput {
	return o
}

func (o AwsNodePoolConfigRootVolumeOutput) ToAwsNodePoolConfigRootVolumeOutputWithContext(ctx context.Context) AwsNodePoolConfigRootVolumeOutput {
	return o
}

func (o AwsNodePoolConfigRootVolumeOutput) ToAwsNodePoolConfigRootVolumePtrOutput() AwsNodePoolConfigRootVolumePtrOutput {
	return o.ToAwsNodePoolConfigRootVolumePtrOutputWithContext(context.Background())
}

func (o AwsNodePoolConfigRootVolumeOutput) ToAwsNodePoolConfigRootVolumePtrOutputWithContext(ctx context.Context) AwsNodePoolConfigRootVolumePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AwsNodePoolConfigRootVolume) *AwsNodePoolConfigRootVolume {
		return &v
	}).(AwsNodePoolConfigRootVolumePtrOutput)
}

// Optional. The number of I/O operations per second (IOPS) to provision for GP3 volume.
func (o AwsNodePoolConfigRootVolumeOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AwsNodePoolConfigRootVolume) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

// Optional. The Amazon Resource Name (ARN) of the Customer Managed Key (CMK) used to encrypt AWS EBS volumes. If not specified, the default Amazon managed key associated to the AWS region where this cluster runs will be used.
func (o AwsNodePoolConfigRootVolumeOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsNodePoolConfigRootVolume) *string { return v.KmsKeyArn }).(pulumi.StringPtrOutput)
}

// Optional. The size of the volume, in GiBs. When unspecified, a default value is provided. See the specific reference in the parent resource.
func (o AwsNodePoolConfigRootVolumeOutput) SizeGib() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AwsNodePoolConfigRootVolume) *int { return v.SizeGib }).(pulumi.IntPtrOutput)
}

// Optional. The throughput to provision for the volume, in MiB/s. Only valid if the volume type is GP3. If volume type is gp3 and throughput is not specified, the throughput will defaults to 125.
func (o AwsNodePoolConfigRootVolumeOutput) Throughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AwsNodePoolConfigRootVolume) *int { return v.Throughput }).(pulumi.IntPtrOutput)
}

// Optional. Type of the EBS volume. When unspecified, it defaults to GP2 volume. Possible values: VOLUME_TYPE_UNSPECIFIED, GP2, GP3
func (o AwsNodePoolConfigRootVolumeOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsNodePoolConfigRootVolume) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type AwsNodePoolConfigRootVolumePtrOutput struct{ *pulumi.OutputState }

func (AwsNodePoolConfigRootVolumePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsNodePoolConfigRootVolume)(nil)).Elem()
}

func (o AwsNodePoolConfigRootVolumePtrOutput) ToAwsNodePoolConfigRootVolumePtrOutput() AwsNodePoolConfigRootVolumePtrOutput {
	return o
}

func (o AwsNodePoolConfigRootVolumePtrOutput) ToAwsNodePoolConfigRootVolumePtrOutputWithContext(ctx context.Context) AwsNodePoolConfigRootVolumePtrOutput {
	return o
}

func (o AwsNodePoolConfigRootVolumePtrOutput) Elem() AwsNodePoolConfigRootVolumeOutput {
	return o.ApplyT(func(v *AwsNodePoolConfigRootVolume) AwsNodePoolConfigRootVolume {
		if v != nil {
			return *v
		}
		var ret AwsNodePoolConfigRootVolume
		return ret
	}).(AwsNodePoolConfigRootVolumeOutput)
}

// Optional. The number of I/O operations per second (IOPS) to provision for GP3 volume.
func (o AwsNodePoolConfigRootVolumePtrOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AwsNodePoolConfigRootVolume) *int {
		if v == nil {
			return nil
		}
		return v.Iops
	}).(pulumi.IntPtrOutput)
}

// Optional. The Amazon Resource Name (ARN) of the Customer Managed Key (CMK) used to encrypt AWS EBS volumes. If not specified, the default Amazon managed key associated to the AWS region where this cluster runs will be used.
func (o AwsNodePoolConfigRootVolumePtrOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsNodePoolConfigRootVolume) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyArn
	}).(pulumi.StringPtrOutput)
}

// Optional. The size of the volume, in GiBs. When unspecified, a default value is provided. See the specific reference in the parent resource.
func (o AwsNodePoolConfigRootVolumePtrOutput) SizeGib() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AwsNodePoolConfigRootVolume) *int {
		if v == nil {
			return nil
		}
		return v.SizeGib
	}).(pulumi.IntPtrOutput)
}

// Optional. The throughput to provision for the volume, in MiB/s. Only valid if the volume type is GP3. If volume type is gp3 and throughput is not specified, the throughput will defaults to 125.
func (o AwsNodePoolConfigRootVolumePtrOutput) Throughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AwsNodePoolConfigRootVolume) *int {
		if v == nil {
			return nil
		}
		return v.Throughput
	}).(pulumi.IntPtrOutput)
}

// Optional. Type of the EBS volume. When unspecified, it defaults to GP2 volume. Possible values: VOLUME_TYPE_UNSPECIFIED, GP2, GP3
func (o AwsNodePoolConfigRootVolumePtrOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsNodePoolConfigRootVolume) *string {
		if v == nil {
			return nil
		}
		return v.VolumeType
	}).(pulumi.StringPtrOutput)
}

type AwsNodePoolConfigSpotConfig struct {
	// List of AWS EC2 instance types for creating a spot node pool's nodes. The specified instance types must have the same number of CPUs and memory. You can use the Amazon EC2 Instance Selector tool (https://github.com/aws/amazon-ec2-instance-selector) to choose instance types with matching CPU and memory
	InstanceTypes []string `pulumi:"instanceTypes"`
}

// AwsNodePoolConfigSpotConfigInput is an input type that accepts AwsNodePoolConfigSpotConfigArgs and AwsNodePoolConfigSpotConfigOutput values.
// You can construct a concrete instance of `AwsNodePoolConfigSpotConfigInput` via:
//
//	AwsNodePoolConfigSpotConfigArgs{...}
type AwsNodePoolConfigSpotConfigInput interface {
	pulumi.Input

	ToAwsNodePoolConfigSpotConfigOutput() AwsNodePoolConfigSpotConfigOutput
	ToAwsNodePoolConfigSpotConfigOutputWithContext(context.Context) AwsNodePoolConfigSpotConfigOutput
}

type AwsNodePoolConfigSpotConfigArgs struct {
	// List of AWS EC2 instance types for creating a spot node pool's nodes. The specified instance types must have the same number of CPUs and memory. You can use the Amazon EC2 Instance Selector tool (https://github.com/aws/amazon-ec2-instance-selector) to choose instance types with matching CPU and memory
	InstanceTypes pulumi.StringArrayInput `pulumi:"instanceTypes"`
}

func (AwsNodePoolConfigSpotConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsNodePoolConfigSpotConfig)(nil)).Elem()
}

func (i AwsNodePoolConfigSpotConfigArgs) ToAwsNodePoolConfigSpotConfigOutput() AwsNodePoolConfigSpotConfigOutput {
	return i.ToAwsNodePoolConfigSpotConfigOutputWithContext(context.Background())
}

func (i AwsNodePoolConfigSpotConfigArgs) ToAwsNodePoolConfigSpotConfigOutputWithContext(ctx context.Context) AwsNodePoolConfigSpotConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsNodePoolConfigSpotConfigOutput)
}

func (i AwsNodePoolConfigSpotConfigArgs) ToAwsNodePoolConfigSpotConfigPtrOutput() AwsNodePoolConfigSpotConfigPtrOutput {
	return i.ToAwsNodePoolConfigSpotConfigPtrOutputWithContext(context.Background())
}

func (i AwsNodePoolConfigSpotConfigArgs) ToAwsNodePoolConfigSpotConfigPtrOutputWithContext(ctx context.Context) AwsNodePoolConfigSpotConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsNodePoolConfigSpotConfigOutput).ToAwsNodePoolConfigSpotConfigPtrOutputWithContext(ctx)
}

// AwsNodePoolConfigSpotConfigPtrInput is an input type that accepts AwsNodePoolConfigSpotConfigArgs, AwsNodePoolConfigSpotConfigPtr and AwsNodePoolConfigSpotConfigPtrOutput values.
// You can construct a concrete instance of `AwsNodePoolConfigSpotConfigPtrInput` via:
//
//	        AwsNodePoolConfigSpotConfigArgs{...}
//
//	or:
//
//	        nil
type AwsNodePoolConfigSpotConfigPtrInput interface {
	pulumi.Input

	ToAwsNodePoolConfigSpotConfigPtrOutput() AwsNodePoolConfigSpotConfigPtrOutput
	ToAwsNodePoolConfigSpotConfigPtrOutputWithContext(context.Context) AwsNodePoolConfigSpotConfigPtrOutput
}

type awsNodePoolConfigSpotConfigPtrType AwsNodePoolConfigSpotConfigArgs

func AwsNodePoolConfigSpotConfigPtr(v *AwsNodePoolConfigSpotConfigArgs) AwsNodePoolConfigSpotConfigPtrInput {
	return (*awsNodePoolConfigSpotConfigPtrType)(v)
}

func (*awsNodePoolConfigSpotConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsNodePoolConfigSpotConfig)(nil)).Elem()
}

func (i *awsNodePoolConfigSpotConfigPtrType) ToAwsNodePoolConfigSpotConfigPtrOutput() AwsNodePoolConfigSpotConfigPtrOutput {
	return i.ToAwsNodePoolConfigSpotConfigPtrOutputWithContext(context.Background())
}

func (i *awsNodePoolConfigSpotConfigPtrType) ToAwsNodePoolConfigSpotConfigPtrOutputWithContext(ctx context.Context) AwsNodePoolConfigSpotConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsNodePoolConfigSpotConfigPtrOutput)
}

type AwsNodePoolConfigSpotConfigOutput struct{ *pulumi.OutputState }

func (AwsNodePoolConfigSpotConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsNodePoolConfigSpotConfig)(nil)).Elem()
}

func (o AwsNodePoolConfigSpotConfigOutput) ToAwsNodePoolConfigSpotConfigOutput() AwsNodePoolConfigSpotConfigOutput {
	return o
}

func (o AwsNodePoolConfigSpotConfigOutput) ToAwsNodePoolConfigSpotConfigOutputWithContext(ctx context.Context) AwsNodePoolConfigSpotConfigOutput {
	return o
}

func (o AwsNodePoolConfigSpotConfigOutput) ToAwsNodePoolConfigSpotConfigPtrOutput() AwsNodePoolConfigSpotConfigPtrOutput {
	return o.ToAwsNodePoolConfigSpotConfigPtrOutputWithContext(context.Background())
}

func (o AwsNodePoolConfigSpotConfigOutput) ToAwsNodePoolConfigSpotConfigPtrOutputWithContext(ctx context.Context) AwsNodePoolConfigSpotConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AwsNodePoolConfigSpotConfig) *AwsNodePoolConfigSpotConfig {
		return &v
	}).(AwsNodePoolConfigSpotConfigPtrOutput)
}

// List of AWS EC2 instance types for creating a spot node pool's nodes. The specified instance types must have the same number of CPUs and memory. You can use the Amazon EC2 Instance Selector tool (https://github.com/aws/amazon-ec2-instance-selector) to choose instance types with matching CPU and memory
func (o AwsNodePoolConfigSpotConfigOutput) InstanceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AwsNodePoolConfigSpotConfig) []string { return v.InstanceTypes }).(pulumi.StringArrayOutput)
}

type AwsNodePoolConfigSpotConfigPtrOutput struct{ *pulumi.OutputState }

func (AwsNodePoolConfigSpotConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsNodePoolConfigSpotConfig)(nil)).Elem()
}

func (o AwsNodePoolConfigSpotConfigPtrOutput) ToAwsNodePoolConfigSpotConfigPtrOutput() AwsNodePoolConfigSpotConfigPtrOutput {
	return o
}

func (o AwsNodePoolConfigSpotConfigPtrOutput) ToAwsNodePoolConfigSpotConfigPtrOutputWithContext(ctx context.Context) AwsNodePoolConfigSpotConfigPtrOutput {
	return o
}

func (o AwsNodePoolConfigSpotConfigPtrOutput) Elem() AwsNodePoolConfigSpotConfigOutput {
	return o.ApplyT(func(v *AwsNodePoolConfigSpotConfig) AwsNodePoolConfigSpotConfig {
		if v != nil {
			return *v
		}
		var ret AwsNodePoolConfigSpotConfig
		return ret
	}).(AwsNodePoolConfigSpotConfigOutput)
}

// List of AWS EC2 instance types for creating a spot node pool's nodes. The specified instance types must have the same number of CPUs and memory. You can use the Amazon EC2 Instance Selector tool (https://github.com/aws/amazon-ec2-instance-selector) to choose instance types with matching CPU and memory
func (o AwsNodePoolConfigSpotConfigPtrOutput) InstanceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AwsNodePoolConfigSpotConfig) []string {
		if v == nil {
			return nil
		}
		return v.InstanceTypes
	}).(pulumi.StringArrayOutput)
}

type AwsNodePoolConfigSshConfig struct {
	// The name of the EC2 key pair used to login into cluster machines.
	Ec2KeyPair string `pulumi:"ec2KeyPair"`
}

// AwsNodePoolConfigSshConfigInput is an input type that accepts AwsNodePoolConfigSshConfigArgs and AwsNodePoolConfigSshConfigOutput values.
// You can construct a concrete instance of `AwsNodePoolConfigSshConfigInput` via:
//
//	AwsNodePoolConfigSshConfigArgs{...}
type AwsNodePoolConfigSshConfigInput interface {
	pulumi.Input

	ToAwsNodePoolConfigSshConfigOutput() AwsNodePoolConfigSshConfigOutput
	ToAwsNodePoolConfigSshConfigOutputWithContext(context.Context) AwsNodePoolConfigSshConfigOutput
}

type AwsNodePoolConfigSshConfigArgs struct {
	// The name of the EC2 key pair used to login into cluster machines.
	Ec2KeyPair pulumi.StringInput `pulumi:"ec2KeyPair"`
}

func (AwsNodePoolConfigSshConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsNodePoolConfigSshConfig)(nil)).Elem()
}

func (i AwsNodePoolConfigSshConfigArgs) ToAwsNodePoolConfigSshConfigOutput() AwsNodePoolConfigSshConfigOutput {
	return i.ToAwsNodePoolConfigSshConfigOutputWithContext(context.Background())
}

func (i AwsNodePoolConfigSshConfigArgs) ToAwsNodePoolConfigSshConfigOutputWithContext(ctx context.Context) AwsNodePoolConfigSshConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsNodePoolConfigSshConfigOutput)
}

func (i AwsNodePoolConfigSshConfigArgs) ToAwsNodePoolConfigSshConfigPtrOutput() AwsNodePoolConfigSshConfigPtrOutput {
	return i.ToAwsNodePoolConfigSshConfigPtrOutputWithContext(context.Background())
}

func (i AwsNodePoolConfigSshConfigArgs) ToAwsNodePoolConfigSshConfigPtrOutputWithContext(ctx context.Context) AwsNodePoolConfigSshConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsNodePoolConfigSshConfigOutput).ToAwsNodePoolConfigSshConfigPtrOutputWithContext(ctx)
}

// AwsNodePoolConfigSshConfigPtrInput is an input type that accepts AwsNodePoolConfigSshConfigArgs, AwsNodePoolConfigSshConfigPtr and AwsNodePoolConfigSshConfigPtrOutput values.
// You can construct a concrete instance of `AwsNodePoolConfigSshConfigPtrInput` via:
//
//	        AwsNodePoolConfigSshConfigArgs{...}
//
//	or:
//
//	        nil
type AwsNodePoolConfigSshConfigPtrInput interface {
	pulumi.Input

	ToAwsNodePoolConfigSshConfigPtrOutput() AwsNodePoolConfigSshConfigPtrOutput
	ToAwsNodePoolConfigSshConfigPtrOutputWithContext(context.Context) AwsNodePoolConfigSshConfigPtrOutput
}

type awsNodePoolConfigSshConfigPtrType AwsNodePoolConfigSshConfigArgs

func AwsNodePoolConfigSshConfigPtr(v *AwsNodePoolConfigSshConfigArgs) AwsNodePoolConfigSshConfigPtrInput {
	return (*awsNodePoolConfigSshConfigPtrType)(v)
}

func (*awsNodePoolConfigSshConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsNodePoolConfigSshConfig)(nil)).Elem()
}

func (i *awsNodePoolConfigSshConfigPtrType) ToAwsNodePoolConfigSshConfigPtrOutput() AwsNodePoolConfigSshConfigPtrOutput {
	return i.ToAwsNodePoolConfigSshConfigPtrOutputWithContext(context.Background())
}

func (i *awsNodePoolConfigSshConfigPtrType) ToAwsNodePoolConfigSshConfigPtrOutputWithContext(ctx context.Context) AwsNodePoolConfigSshConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsNodePoolConfigSshConfigPtrOutput)
}

type AwsNodePoolConfigSshConfigOutput struct{ *pulumi.OutputState }

func (AwsNodePoolConfigSshConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsNodePoolConfigSshConfig)(nil)).Elem()
}

func (o AwsNodePoolConfigSshConfigOutput) ToAwsNodePoolConfigSshConfigOutput() AwsNodePoolConfigSshConfigOutput {
	return o
}

func (o AwsNodePoolConfigSshConfigOutput) ToAwsNodePoolConfigSshConfigOutputWithContext(ctx context.Context) AwsNodePoolConfigSshConfigOutput {
	return o
}

func (o AwsNodePoolConfigSshConfigOutput) ToAwsNodePoolConfigSshConfigPtrOutput() AwsNodePoolConfigSshConfigPtrOutput {
	return o.ToAwsNodePoolConfigSshConfigPtrOutputWithContext(context.Background())
}

func (o AwsNodePoolConfigSshConfigOutput) ToAwsNodePoolConfigSshConfigPtrOutputWithContext(ctx context.Context) AwsNodePoolConfigSshConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AwsNodePoolConfigSshConfig) *AwsNodePoolConfigSshConfig {
		return &v
	}).(AwsNodePoolConfigSshConfigPtrOutput)
}

// The name of the EC2 key pair used to login into cluster machines.
func (o AwsNodePoolConfigSshConfigOutput) Ec2KeyPair() pulumi.StringOutput {
	return o.ApplyT(func(v AwsNodePoolConfigSshConfig) string { return v.Ec2KeyPair }).(pulumi.StringOutput)
}

type AwsNodePoolConfigSshConfigPtrOutput struct{ *pulumi.OutputState }

func (AwsNodePoolConfigSshConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsNodePoolConfigSshConfig)(nil)).Elem()
}

func (o AwsNodePoolConfigSshConfigPtrOutput) ToAwsNodePoolConfigSshConfigPtrOutput() AwsNodePoolConfigSshConfigPtrOutput {
	return o
}

func (o AwsNodePoolConfigSshConfigPtrOutput) ToAwsNodePoolConfigSshConfigPtrOutputWithContext(ctx context.Context) AwsNodePoolConfigSshConfigPtrOutput {
	return o
}

func (o AwsNodePoolConfigSshConfigPtrOutput) Elem() AwsNodePoolConfigSshConfigOutput {
	return o.ApplyT(func(v *AwsNodePoolConfigSshConfig) AwsNodePoolConfigSshConfig {
		if v != nil {
			return *v
		}
		var ret AwsNodePoolConfigSshConfig
		return ret
	}).(AwsNodePoolConfigSshConfigOutput)
}

// The name of the EC2 key pair used to login into cluster machines.
func (o AwsNodePoolConfigSshConfigPtrOutput) Ec2KeyPair() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsNodePoolConfigSshConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Ec2KeyPair
	}).(pulumi.StringPtrOutput)
}

type AwsNodePoolConfigTaint struct {
	// The taint effect. Possible values: EFFECT_UNSPECIFIED, NO_SCHEDULE, PREFER_NO_SCHEDULE, NO_EXECUTE
	Effect string `pulumi:"effect"`
	// Key for the taint.
	Key string `pulumi:"key"`
	// Value for the taint.
	Value string `pulumi:"value"`
}

// AwsNodePoolConfigTaintInput is an input type that accepts AwsNodePoolConfigTaintArgs and AwsNodePoolConfigTaintOutput values.
// You can construct a concrete instance of `AwsNodePoolConfigTaintInput` via:
//
//	AwsNodePoolConfigTaintArgs{...}
type AwsNodePoolConfigTaintInput interface {
	pulumi.Input

	ToAwsNodePoolConfigTaintOutput() AwsNodePoolConfigTaintOutput
	ToAwsNodePoolConfigTaintOutputWithContext(context.Context) AwsNodePoolConfigTaintOutput
}

type AwsNodePoolConfigTaintArgs struct {
	// The taint effect. Possible values: EFFECT_UNSPECIFIED, NO_SCHEDULE, PREFER_NO_SCHEDULE, NO_EXECUTE
	Effect pulumi.StringInput `pulumi:"effect"`
	// Key for the taint.
	Key pulumi.StringInput `pulumi:"key"`
	// Value for the taint.
	Value pulumi.StringInput `pulumi:"value"`
}

func (AwsNodePoolConfigTaintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsNodePoolConfigTaint)(nil)).Elem()
}

func (i AwsNodePoolConfigTaintArgs) ToAwsNodePoolConfigTaintOutput() AwsNodePoolConfigTaintOutput {
	return i.ToAwsNodePoolConfigTaintOutputWithContext(context.Background())
}

func (i AwsNodePoolConfigTaintArgs) ToAwsNodePoolConfigTaintOutputWithContext(ctx context.Context) AwsNodePoolConfigTaintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsNodePoolConfigTaintOutput)
}

// AwsNodePoolConfigTaintArrayInput is an input type that accepts AwsNodePoolConfigTaintArray and AwsNodePoolConfigTaintArrayOutput values.
// You can construct a concrete instance of `AwsNodePoolConfigTaintArrayInput` via:
//
//	AwsNodePoolConfigTaintArray{ AwsNodePoolConfigTaintArgs{...} }
type AwsNodePoolConfigTaintArrayInput interface {
	pulumi.Input

	ToAwsNodePoolConfigTaintArrayOutput() AwsNodePoolConfigTaintArrayOutput
	ToAwsNodePoolConfigTaintArrayOutputWithContext(context.Context) AwsNodePoolConfigTaintArrayOutput
}

type AwsNodePoolConfigTaintArray []AwsNodePoolConfigTaintInput

func (AwsNodePoolConfigTaintArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AwsNodePoolConfigTaint)(nil)).Elem()
}

func (i AwsNodePoolConfigTaintArray) ToAwsNodePoolConfigTaintArrayOutput() AwsNodePoolConfigTaintArrayOutput {
	return i.ToAwsNodePoolConfigTaintArrayOutputWithContext(context.Background())
}

func (i AwsNodePoolConfigTaintArray) ToAwsNodePoolConfigTaintArrayOutputWithContext(ctx context.Context) AwsNodePoolConfigTaintArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsNodePoolConfigTaintArrayOutput)
}

type AwsNodePoolConfigTaintOutput struct{ *pulumi.OutputState }

func (AwsNodePoolConfigTaintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsNodePoolConfigTaint)(nil)).Elem()
}

func (o AwsNodePoolConfigTaintOutput) ToAwsNodePoolConfigTaintOutput() AwsNodePoolConfigTaintOutput {
	return o
}

func (o AwsNodePoolConfigTaintOutput) ToAwsNodePoolConfigTaintOutputWithContext(ctx context.Context) AwsNodePoolConfigTaintOutput {
	return o
}

// The taint effect. Possible values: EFFECT_UNSPECIFIED, NO_SCHEDULE, PREFER_NO_SCHEDULE, NO_EXECUTE
func (o AwsNodePoolConfigTaintOutput) Effect() pulumi.StringOutput {
	return o.ApplyT(func(v AwsNodePoolConfigTaint) string { return v.Effect }).(pulumi.StringOutput)
}

// Key for the taint.
func (o AwsNodePoolConfigTaintOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v AwsNodePoolConfigTaint) string { return v.Key }).(pulumi.StringOutput)
}

// Value for the taint.
func (o AwsNodePoolConfigTaintOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v AwsNodePoolConfigTaint) string { return v.Value }).(pulumi.StringOutput)
}

type AwsNodePoolConfigTaintArrayOutput struct{ *pulumi.OutputState }

func (AwsNodePoolConfigTaintArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AwsNodePoolConfigTaint)(nil)).Elem()
}

func (o AwsNodePoolConfigTaintArrayOutput) ToAwsNodePoolConfigTaintArrayOutput() AwsNodePoolConfigTaintArrayOutput {
	return o
}

func (o AwsNodePoolConfigTaintArrayOutput) ToAwsNodePoolConfigTaintArrayOutputWithContext(ctx context.Context) AwsNodePoolConfigTaintArrayOutput {
	return o
}

func (o AwsNodePoolConfigTaintArrayOutput) Index(i pulumi.IntInput) AwsNodePoolConfigTaintOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AwsNodePoolConfigTaint {
		return vs[0].([]AwsNodePoolConfigTaint)[vs[1].(int)]
	}).(AwsNodePoolConfigTaintOutput)
}

type AwsNodePoolManagement struct {
	// Optional. Whether or not the nodes will be automatically repaired.
	AutoRepair *bool `pulumi:"autoRepair"`
}

// AwsNodePoolManagementInput is an input type that accepts AwsNodePoolManagementArgs and AwsNodePoolManagementOutput values.
// You can construct a concrete instance of `AwsNodePoolManagementInput` via:
//
//	AwsNodePoolManagementArgs{...}
type AwsNodePoolManagementInput interface {
	pulumi.Input

	ToAwsNodePoolManagementOutput() AwsNodePoolManagementOutput
	ToAwsNodePoolManagementOutputWithContext(context.Context) AwsNodePoolManagementOutput
}

type AwsNodePoolManagementArgs struct {
	// Optional. Whether or not the nodes will be automatically repaired.
	AutoRepair pulumi.BoolPtrInput `pulumi:"autoRepair"`
}

func (AwsNodePoolManagementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsNodePoolManagement)(nil)).Elem()
}

func (i AwsNodePoolManagementArgs) ToAwsNodePoolManagementOutput() AwsNodePoolManagementOutput {
	return i.ToAwsNodePoolManagementOutputWithContext(context.Background())
}

func (i AwsNodePoolManagementArgs) ToAwsNodePoolManagementOutputWithContext(ctx context.Context) AwsNodePoolManagementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsNodePoolManagementOutput)
}

func (i AwsNodePoolManagementArgs) ToAwsNodePoolManagementPtrOutput() AwsNodePoolManagementPtrOutput {
	return i.ToAwsNodePoolManagementPtrOutputWithContext(context.Background())
}

func (i AwsNodePoolManagementArgs) ToAwsNodePoolManagementPtrOutputWithContext(ctx context.Context) AwsNodePoolManagementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsNodePoolManagementOutput).ToAwsNodePoolManagementPtrOutputWithContext(ctx)
}

// AwsNodePoolManagementPtrInput is an input type that accepts AwsNodePoolManagementArgs, AwsNodePoolManagementPtr and AwsNodePoolManagementPtrOutput values.
// You can construct a concrete instance of `AwsNodePoolManagementPtrInput` via:
//
//	        AwsNodePoolManagementArgs{...}
//
//	or:
//
//	        nil
type AwsNodePoolManagementPtrInput interface {
	pulumi.Input

	ToAwsNodePoolManagementPtrOutput() AwsNodePoolManagementPtrOutput
	ToAwsNodePoolManagementPtrOutputWithContext(context.Context) AwsNodePoolManagementPtrOutput
}

type awsNodePoolManagementPtrType AwsNodePoolManagementArgs

func AwsNodePoolManagementPtr(v *AwsNodePoolManagementArgs) AwsNodePoolManagementPtrInput {
	return (*awsNodePoolManagementPtrType)(v)
}

func (*awsNodePoolManagementPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsNodePoolManagement)(nil)).Elem()
}

func (i *awsNodePoolManagementPtrType) ToAwsNodePoolManagementPtrOutput() AwsNodePoolManagementPtrOutput {
	return i.ToAwsNodePoolManagementPtrOutputWithContext(context.Background())
}

func (i *awsNodePoolManagementPtrType) ToAwsNodePoolManagementPtrOutputWithContext(ctx context.Context) AwsNodePoolManagementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsNodePoolManagementPtrOutput)
}

type AwsNodePoolManagementOutput struct{ *pulumi.OutputState }

func (AwsNodePoolManagementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsNodePoolManagement)(nil)).Elem()
}

func (o AwsNodePoolManagementOutput) ToAwsNodePoolManagementOutput() AwsNodePoolManagementOutput {
	return o
}

func (o AwsNodePoolManagementOutput) ToAwsNodePoolManagementOutputWithContext(ctx context.Context) AwsNodePoolManagementOutput {
	return o
}

func (o AwsNodePoolManagementOutput) ToAwsNodePoolManagementPtrOutput() AwsNodePoolManagementPtrOutput {
	return o.ToAwsNodePoolManagementPtrOutputWithContext(context.Background())
}

func (o AwsNodePoolManagementOutput) ToAwsNodePoolManagementPtrOutputWithContext(ctx context.Context) AwsNodePoolManagementPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AwsNodePoolManagement) *AwsNodePoolManagement {
		return &v
	}).(AwsNodePoolManagementPtrOutput)
}

// Optional. Whether or not the nodes will be automatically repaired.
func (o AwsNodePoolManagementOutput) AutoRepair() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AwsNodePoolManagement) *bool { return v.AutoRepair }).(pulumi.BoolPtrOutput)
}

type AwsNodePoolManagementPtrOutput struct{ *pulumi.OutputState }

func (AwsNodePoolManagementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsNodePoolManagement)(nil)).Elem()
}

func (o AwsNodePoolManagementPtrOutput) ToAwsNodePoolManagementPtrOutput() AwsNodePoolManagementPtrOutput {
	return o
}

func (o AwsNodePoolManagementPtrOutput) ToAwsNodePoolManagementPtrOutputWithContext(ctx context.Context) AwsNodePoolManagementPtrOutput {
	return o
}

func (o AwsNodePoolManagementPtrOutput) Elem() AwsNodePoolManagementOutput {
	return o.ApplyT(func(v *AwsNodePoolManagement) AwsNodePoolManagement {
		if v != nil {
			return *v
		}
		var ret AwsNodePoolManagement
		return ret
	}).(AwsNodePoolManagementOutput)
}

// Optional. Whether or not the nodes will be automatically repaired.
func (o AwsNodePoolManagementPtrOutput) AutoRepair() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AwsNodePoolManagement) *bool {
		if v == nil {
			return nil
		}
		return v.AutoRepair
	}).(pulumi.BoolPtrOutput)
}

type AwsNodePoolMaxPodsConstraint struct {
	// The maximum number of pods to schedule on a single node.
	//
	// ***
	MaxPodsPerNode int `pulumi:"maxPodsPerNode"`
}

// AwsNodePoolMaxPodsConstraintInput is an input type that accepts AwsNodePoolMaxPodsConstraintArgs and AwsNodePoolMaxPodsConstraintOutput values.
// You can construct a concrete instance of `AwsNodePoolMaxPodsConstraintInput` via:
//
//	AwsNodePoolMaxPodsConstraintArgs{...}
type AwsNodePoolMaxPodsConstraintInput interface {
	pulumi.Input

	ToAwsNodePoolMaxPodsConstraintOutput() AwsNodePoolMaxPodsConstraintOutput
	ToAwsNodePoolMaxPodsConstraintOutputWithContext(context.Context) AwsNodePoolMaxPodsConstraintOutput
}

type AwsNodePoolMaxPodsConstraintArgs struct {
	// The maximum number of pods to schedule on a single node.
	//
	// ***
	MaxPodsPerNode pulumi.IntInput `pulumi:"maxPodsPerNode"`
}

func (AwsNodePoolMaxPodsConstraintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsNodePoolMaxPodsConstraint)(nil)).Elem()
}

func (i AwsNodePoolMaxPodsConstraintArgs) ToAwsNodePoolMaxPodsConstraintOutput() AwsNodePoolMaxPodsConstraintOutput {
	return i.ToAwsNodePoolMaxPodsConstraintOutputWithContext(context.Background())
}

func (i AwsNodePoolMaxPodsConstraintArgs) ToAwsNodePoolMaxPodsConstraintOutputWithContext(ctx context.Context) AwsNodePoolMaxPodsConstraintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsNodePoolMaxPodsConstraintOutput)
}

func (i AwsNodePoolMaxPodsConstraintArgs) ToAwsNodePoolMaxPodsConstraintPtrOutput() AwsNodePoolMaxPodsConstraintPtrOutput {
	return i.ToAwsNodePoolMaxPodsConstraintPtrOutputWithContext(context.Background())
}

func (i AwsNodePoolMaxPodsConstraintArgs) ToAwsNodePoolMaxPodsConstraintPtrOutputWithContext(ctx context.Context) AwsNodePoolMaxPodsConstraintPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsNodePoolMaxPodsConstraintOutput).ToAwsNodePoolMaxPodsConstraintPtrOutputWithContext(ctx)
}

// AwsNodePoolMaxPodsConstraintPtrInput is an input type that accepts AwsNodePoolMaxPodsConstraintArgs, AwsNodePoolMaxPodsConstraintPtr and AwsNodePoolMaxPodsConstraintPtrOutput values.
// You can construct a concrete instance of `AwsNodePoolMaxPodsConstraintPtrInput` via:
//
//	        AwsNodePoolMaxPodsConstraintArgs{...}
//
//	or:
//
//	        nil
type AwsNodePoolMaxPodsConstraintPtrInput interface {
	pulumi.Input

	ToAwsNodePoolMaxPodsConstraintPtrOutput() AwsNodePoolMaxPodsConstraintPtrOutput
	ToAwsNodePoolMaxPodsConstraintPtrOutputWithContext(context.Context) AwsNodePoolMaxPodsConstraintPtrOutput
}

type awsNodePoolMaxPodsConstraintPtrType AwsNodePoolMaxPodsConstraintArgs

func AwsNodePoolMaxPodsConstraintPtr(v *AwsNodePoolMaxPodsConstraintArgs) AwsNodePoolMaxPodsConstraintPtrInput {
	return (*awsNodePoolMaxPodsConstraintPtrType)(v)
}

func (*awsNodePoolMaxPodsConstraintPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsNodePoolMaxPodsConstraint)(nil)).Elem()
}

func (i *awsNodePoolMaxPodsConstraintPtrType) ToAwsNodePoolMaxPodsConstraintPtrOutput() AwsNodePoolMaxPodsConstraintPtrOutput {
	return i.ToAwsNodePoolMaxPodsConstraintPtrOutputWithContext(context.Background())
}

func (i *awsNodePoolMaxPodsConstraintPtrType) ToAwsNodePoolMaxPodsConstraintPtrOutputWithContext(ctx context.Context) AwsNodePoolMaxPodsConstraintPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsNodePoolMaxPodsConstraintPtrOutput)
}

type AwsNodePoolMaxPodsConstraintOutput struct{ *pulumi.OutputState }

func (AwsNodePoolMaxPodsConstraintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsNodePoolMaxPodsConstraint)(nil)).Elem()
}

func (o AwsNodePoolMaxPodsConstraintOutput) ToAwsNodePoolMaxPodsConstraintOutput() AwsNodePoolMaxPodsConstraintOutput {
	return o
}

func (o AwsNodePoolMaxPodsConstraintOutput) ToAwsNodePoolMaxPodsConstraintOutputWithContext(ctx context.Context) AwsNodePoolMaxPodsConstraintOutput {
	return o
}

func (o AwsNodePoolMaxPodsConstraintOutput) ToAwsNodePoolMaxPodsConstraintPtrOutput() AwsNodePoolMaxPodsConstraintPtrOutput {
	return o.ToAwsNodePoolMaxPodsConstraintPtrOutputWithContext(context.Background())
}

func (o AwsNodePoolMaxPodsConstraintOutput) ToAwsNodePoolMaxPodsConstraintPtrOutputWithContext(ctx context.Context) AwsNodePoolMaxPodsConstraintPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AwsNodePoolMaxPodsConstraint) *AwsNodePoolMaxPodsConstraint {
		return &v
	}).(AwsNodePoolMaxPodsConstraintPtrOutput)
}

// The maximum number of pods to schedule on a single node.
//
// ***
func (o AwsNodePoolMaxPodsConstraintOutput) MaxPodsPerNode() pulumi.IntOutput {
	return o.ApplyT(func(v AwsNodePoolMaxPodsConstraint) int { return v.MaxPodsPerNode }).(pulumi.IntOutput)
}

type AwsNodePoolMaxPodsConstraintPtrOutput struct{ *pulumi.OutputState }

func (AwsNodePoolMaxPodsConstraintPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsNodePoolMaxPodsConstraint)(nil)).Elem()
}

func (o AwsNodePoolMaxPodsConstraintPtrOutput) ToAwsNodePoolMaxPodsConstraintPtrOutput() AwsNodePoolMaxPodsConstraintPtrOutput {
	return o
}

func (o AwsNodePoolMaxPodsConstraintPtrOutput) ToAwsNodePoolMaxPodsConstraintPtrOutputWithContext(ctx context.Context) AwsNodePoolMaxPodsConstraintPtrOutput {
	return o
}

func (o AwsNodePoolMaxPodsConstraintPtrOutput) Elem() AwsNodePoolMaxPodsConstraintOutput {
	return o.ApplyT(func(v *AwsNodePoolMaxPodsConstraint) AwsNodePoolMaxPodsConstraint {
		if v != nil {
			return *v
		}
		var ret AwsNodePoolMaxPodsConstraint
		return ret
	}).(AwsNodePoolMaxPodsConstraintOutput)
}

// The maximum number of pods to schedule on a single node.
//
// ***
func (o AwsNodePoolMaxPodsConstraintPtrOutput) MaxPodsPerNode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AwsNodePoolMaxPodsConstraint) *int {
		if v == nil {
			return nil
		}
		return &v.MaxPodsPerNode
	}).(pulumi.IntPtrOutput)
}

type AwsNodePoolUpdateSettings struct {
	// Optional. Settings for surge update.
	SurgeSettings *AwsNodePoolUpdateSettingsSurgeSettings `pulumi:"surgeSettings"`
}

// AwsNodePoolUpdateSettingsInput is an input type that accepts AwsNodePoolUpdateSettingsArgs and AwsNodePoolUpdateSettingsOutput values.
// You can construct a concrete instance of `AwsNodePoolUpdateSettingsInput` via:
//
//	AwsNodePoolUpdateSettingsArgs{...}
type AwsNodePoolUpdateSettingsInput interface {
	pulumi.Input

	ToAwsNodePoolUpdateSettingsOutput() AwsNodePoolUpdateSettingsOutput
	ToAwsNodePoolUpdateSettingsOutputWithContext(context.Context) AwsNodePoolUpdateSettingsOutput
}

type AwsNodePoolUpdateSettingsArgs struct {
	// Optional. Settings for surge update.
	SurgeSettings AwsNodePoolUpdateSettingsSurgeSettingsPtrInput `pulumi:"surgeSettings"`
}

func (AwsNodePoolUpdateSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsNodePoolUpdateSettings)(nil)).Elem()
}

func (i AwsNodePoolUpdateSettingsArgs) ToAwsNodePoolUpdateSettingsOutput() AwsNodePoolUpdateSettingsOutput {
	return i.ToAwsNodePoolUpdateSettingsOutputWithContext(context.Background())
}

func (i AwsNodePoolUpdateSettingsArgs) ToAwsNodePoolUpdateSettingsOutputWithContext(ctx context.Context) AwsNodePoolUpdateSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsNodePoolUpdateSettingsOutput)
}

func (i AwsNodePoolUpdateSettingsArgs) ToAwsNodePoolUpdateSettingsPtrOutput() AwsNodePoolUpdateSettingsPtrOutput {
	return i.ToAwsNodePoolUpdateSettingsPtrOutputWithContext(context.Background())
}

func (i AwsNodePoolUpdateSettingsArgs) ToAwsNodePoolUpdateSettingsPtrOutputWithContext(ctx context.Context) AwsNodePoolUpdateSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsNodePoolUpdateSettingsOutput).ToAwsNodePoolUpdateSettingsPtrOutputWithContext(ctx)
}

// AwsNodePoolUpdateSettingsPtrInput is an input type that accepts AwsNodePoolUpdateSettingsArgs, AwsNodePoolUpdateSettingsPtr and AwsNodePoolUpdateSettingsPtrOutput values.
// You can construct a concrete instance of `AwsNodePoolUpdateSettingsPtrInput` via:
//
//	        AwsNodePoolUpdateSettingsArgs{...}
//
//	or:
//
//	        nil
type AwsNodePoolUpdateSettingsPtrInput interface {
	pulumi.Input

	ToAwsNodePoolUpdateSettingsPtrOutput() AwsNodePoolUpdateSettingsPtrOutput
	ToAwsNodePoolUpdateSettingsPtrOutputWithContext(context.Context) AwsNodePoolUpdateSettingsPtrOutput
}

type awsNodePoolUpdateSettingsPtrType AwsNodePoolUpdateSettingsArgs

func AwsNodePoolUpdateSettingsPtr(v *AwsNodePoolUpdateSettingsArgs) AwsNodePoolUpdateSettingsPtrInput {
	return (*awsNodePoolUpdateSettingsPtrType)(v)
}

func (*awsNodePoolUpdateSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsNodePoolUpdateSettings)(nil)).Elem()
}

func (i *awsNodePoolUpdateSettingsPtrType) ToAwsNodePoolUpdateSettingsPtrOutput() AwsNodePoolUpdateSettingsPtrOutput {
	return i.ToAwsNodePoolUpdateSettingsPtrOutputWithContext(context.Background())
}

func (i *awsNodePoolUpdateSettingsPtrType) ToAwsNodePoolUpdateSettingsPtrOutputWithContext(ctx context.Context) AwsNodePoolUpdateSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsNodePoolUpdateSettingsPtrOutput)
}

type AwsNodePoolUpdateSettingsOutput struct{ *pulumi.OutputState }

func (AwsNodePoolUpdateSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsNodePoolUpdateSettings)(nil)).Elem()
}

func (o AwsNodePoolUpdateSettingsOutput) ToAwsNodePoolUpdateSettingsOutput() AwsNodePoolUpdateSettingsOutput {
	return o
}

func (o AwsNodePoolUpdateSettingsOutput) ToAwsNodePoolUpdateSettingsOutputWithContext(ctx context.Context) AwsNodePoolUpdateSettingsOutput {
	return o
}

func (o AwsNodePoolUpdateSettingsOutput) ToAwsNodePoolUpdateSettingsPtrOutput() AwsNodePoolUpdateSettingsPtrOutput {
	return o.ToAwsNodePoolUpdateSettingsPtrOutputWithContext(context.Background())
}

func (o AwsNodePoolUpdateSettingsOutput) ToAwsNodePoolUpdateSettingsPtrOutputWithContext(ctx context.Context) AwsNodePoolUpdateSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AwsNodePoolUpdateSettings) *AwsNodePoolUpdateSettings {
		return &v
	}).(AwsNodePoolUpdateSettingsPtrOutput)
}

// Optional. Settings for surge update.
func (o AwsNodePoolUpdateSettingsOutput) SurgeSettings() AwsNodePoolUpdateSettingsSurgeSettingsPtrOutput {
	return o.ApplyT(func(v AwsNodePoolUpdateSettings) *AwsNodePoolUpdateSettingsSurgeSettings { return v.SurgeSettings }).(AwsNodePoolUpdateSettingsSurgeSettingsPtrOutput)
}

type AwsNodePoolUpdateSettingsPtrOutput struct{ *pulumi.OutputState }

func (AwsNodePoolUpdateSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsNodePoolUpdateSettings)(nil)).Elem()
}

func (o AwsNodePoolUpdateSettingsPtrOutput) ToAwsNodePoolUpdateSettingsPtrOutput() AwsNodePoolUpdateSettingsPtrOutput {
	return o
}

func (o AwsNodePoolUpdateSettingsPtrOutput) ToAwsNodePoolUpdateSettingsPtrOutputWithContext(ctx context.Context) AwsNodePoolUpdateSettingsPtrOutput {
	return o
}

func (o AwsNodePoolUpdateSettingsPtrOutput) Elem() AwsNodePoolUpdateSettingsOutput {
	return o.ApplyT(func(v *AwsNodePoolUpdateSettings) AwsNodePoolUpdateSettings {
		if v != nil {
			return *v
		}
		var ret AwsNodePoolUpdateSettings
		return ret
	}).(AwsNodePoolUpdateSettingsOutput)
}

// Optional. Settings for surge update.
func (o AwsNodePoolUpdateSettingsPtrOutput) SurgeSettings() AwsNodePoolUpdateSettingsSurgeSettingsPtrOutput {
	return o.ApplyT(func(v *AwsNodePoolUpdateSettings) *AwsNodePoolUpdateSettingsSurgeSettings {
		if v == nil {
			return nil
		}
		return v.SurgeSettings
	}).(AwsNodePoolUpdateSettingsSurgeSettingsPtrOutput)
}

type AwsNodePoolUpdateSettingsSurgeSettings struct {
	// Optional. The maximum number of nodes that can be created beyond the current size of the node pool during the update process.
	MaxSurge *int `pulumi:"maxSurge"`
	// Optional. The maximum number of nodes that can be simultaneously unavailable during the update process. A node is considered unavailable if its status is not Ready.
	MaxUnavailable *int `pulumi:"maxUnavailable"`
}

// AwsNodePoolUpdateSettingsSurgeSettingsInput is an input type that accepts AwsNodePoolUpdateSettingsSurgeSettingsArgs and AwsNodePoolUpdateSettingsSurgeSettingsOutput values.
// You can construct a concrete instance of `AwsNodePoolUpdateSettingsSurgeSettingsInput` via:
//
//	AwsNodePoolUpdateSettingsSurgeSettingsArgs{...}
type AwsNodePoolUpdateSettingsSurgeSettingsInput interface {
	pulumi.Input

	ToAwsNodePoolUpdateSettingsSurgeSettingsOutput() AwsNodePoolUpdateSettingsSurgeSettingsOutput
	ToAwsNodePoolUpdateSettingsSurgeSettingsOutputWithContext(context.Context) AwsNodePoolUpdateSettingsSurgeSettingsOutput
}

type AwsNodePoolUpdateSettingsSurgeSettingsArgs struct {
	// Optional. The maximum number of nodes that can be created beyond the current size of the node pool during the update process.
	MaxSurge pulumi.IntPtrInput `pulumi:"maxSurge"`
	// Optional. The maximum number of nodes that can be simultaneously unavailable during the update process. A node is considered unavailable if its status is not Ready.
	MaxUnavailable pulumi.IntPtrInput `pulumi:"maxUnavailable"`
}

func (AwsNodePoolUpdateSettingsSurgeSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsNodePoolUpdateSettingsSurgeSettings)(nil)).Elem()
}

func (i AwsNodePoolUpdateSettingsSurgeSettingsArgs) ToAwsNodePoolUpdateSettingsSurgeSettingsOutput() AwsNodePoolUpdateSettingsSurgeSettingsOutput {
	return i.ToAwsNodePoolUpdateSettingsSurgeSettingsOutputWithContext(context.Background())
}

func (i AwsNodePoolUpdateSettingsSurgeSettingsArgs) ToAwsNodePoolUpdateSettingsSurgeSettingsOutputWithContext(ctx context.Context) AwsNodePoolUpdateSettingsSurgeSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsNodePoolUpdateSettingsSurgeSettingsOutput)
}

func (i AwsNodePoolUpdateSettingsSurgeSettingsArgs) ToAwsNodePoolUpdateSettingsSurgeSettingsPtrOutput() AwsNodePoolUpdateSettingsSurgeSettingsPtrOutput {
	return i.ToAwsNodePoolUpdateSettingsSurgeSettingsPtrOutputWithContext(context.Background())
}

func (i AwsNodePoolUpdateSettingsSurgeSettingsArgs) ToAwsNodePoolUpdateSettingsSurgeSettingsPtrOutputWithContext(ctx context.Context) AwsNodePoolUpdateSettingsSurgeSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsNodePoolUpdateSettingsSurgeSettingsOutput).ToAwsNodePoolUpdateSettingsSurgeSettingsPtrOutputWithContext(ctx)
}

// AwsNodePoolUpdateSettingsSurgeSettingsPtrInput is an input type that accepts AwsNodePoolUpdateSettingsSurgeSettingsArgs, AwsNodePoolUpdateSettingsSurgeSettingsPtr and AwsNodePoolUpdateSettingsSurgeSettingsPtrOutput values.
// You can construct a concrete instance of `AwsNodePoolUpdateSettingsSurgeSettingsPtrInput` via:
//
//	        AwsNodePoolUpdateSettingsSurgeSettingsArgs{...}
//
//	or:
//
//	        nil
type AwsNodePoolUpdateSettingsSurgeSettingsPtrInput interface {
	pulumi.Input

	ToAwsNodePoolUpdateSettingsSurgeSettingsPtrOutput() AwsNodePoolUpdateSettingsSurgeSettingsPtrOutput
	ToAwsNodePoolUpdateSettingsSurgeSettingsPtrOutputWithContext(context.Context) AwsNodePoolUpdateSettingsSurgeSettingsPtrOutput
}

type awsNodePoolUpdateSettingsSurgeSettingsPtrType AwsNodePoolUpdateSettingsSurgeSettingsArgs

func AwsNodePoolUpdateSettingsSurgeSettingsPtr(v *AwsNodePoolUpdateSettingsSurgeSettingsArgs) AwsNodePoolUpdateSettingsSurgeSettingsPtrInput {
	return (*awsNodePoolUpdateSettingsSurgeSettingsPtrType)(v)
}

func (*awsNodePoolUpdateSettingsSurgeSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsNodePoolUpdateSettingsSurgeSettings)(nil)).Elem()
}

func (i *awsNodePoolUpdateSettingsSurgeSettingsPtrType) ToAwsNodePoolUpdateSettingsSurgeSettingsPtrOutput() AwsNodePoolUpdateSettingsSurgeSettingsPtrOutput {
	return i.ToAwsNodePoolUpdateSettingsSurgeSettingsPtrOutputWithContext(context.Background())
}

func (i *awsNodePoolUpdateSettingsSurgeSettingsPtrType) ToAwsNodePoolUpdateSettingsSurgeSettingsPtrOutputWithContext(ctx context.Context) AwsNodePoolUpdateSettingsSurgeSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsNodePoolUpdateSettingsSurgeSettingsPtrOutput)
}

type AwsNodePoolUpdateSettingsSurgeSettingsOutput struct{ *pulumi.OutputState }

func (AwsNodePoolUpdateSettingsSurgeSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsNodePoolUpdateSettingsSurgeSettings)(nil)).Elem()
}

func (o AwsNodePoolUpdateSettingsSurgeSettingsOutput) ToAwsNodePoolUpdateSettingsSurgeSettingsOutput() AwsNodePoolUpdateSettingsSurgeSettingsOutput {
	return o
}

func (o AwsNodePoolUpdateSettingsSurgeSettingsOutput) ToAwsNodePoolUpdateSettingsSurgeSettingsOutputWithContext(ctx context.Context) AwsNodePoolUpdateSettingsSurgeSettingsOutput {
	return o
}

func (o AwsNodePoolUpdateSettingsSurgeSettingsOutput) ToAwsNodePoolUpdateSettingsSurgeSettingsPtrOutput() AwsNodePoolUpdateSettingsSurgeSettingsPtrOutput {
	return o.ToAwsNodePoolUpdateSettingsSurgeSettingsPtrOutputWithContext(context.Background())
}

func (o AwsNodePoolUpdateSettingsSurgeSettingsOutput) ToAwsNodePoolUpdateSettingsSurgeSettingsPtrOutputWithContext(ctx context.Context) AwsNodePoolUpdateSettingsSurgeSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AwsNodePoolUpdateSettingsSurgeSettings) *AwsNodePoolUpdateSettingsSurgeSettings {
		return &v
	}).(AwsNodePoolUpdateSettingsSurgeSettingsPtrOutput)
}

// Optional. The maximum number of nodes that can be created beyond the current size of the node pool during the update process.
func (o AwsNodePoolUpdateSettingsSurgeSettingsOutput) MaxSurge() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AwsNodePoolUpdateSettingsSurgeSettings) *int { return v.MaxSurge }).(pulumi.IntPtrOutput)
}

// Optional. The maximum number of nodes that can be simultaneously unavailable during the update process. A node is considered unavailable if its status is not Ready.
func (o AwsNodePoolUpdateSettingsSurgeSettingsOutput) MaxUnavailable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AwsNodePoolUpdateSettingsSurgeSettings) *int { return v.MaxUnavailable }).(pulumi.IntPtrOutput)
}

type AwsNodePoolUpdateSettingsSurgeSettingsPtrOutput struct{ *pulumi.OutputState }

func (AwsNodePoolUpdateSettingsSurgeSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsNodePoolUpdateSettingsSurgeSettings)(nil)).Elem()
}

func (o AwsNodePoolUpdateSettingsSurgeSettingsPtrOutput) ToAwsNodePoolUpdateSettingsSurgeSettingsPtrOutput() AwsNodePoolUpdateSettingsSurgeSettingsPtrOutput {
	return o
}

func (o AwsNodePoolUpdateSettingsSurgeSettingsPtrOutput) ToAwsNodePoolUpdateSettingsSurgeSettingsPtrOutputWithContext(ctx context.Context) AwsNodePoolUpdateSettingsSurgeSettingsPtrOutput {
	return o
}

func (o AwsNodePoolUpdateSettingsSurgeSettingsPtrOutput) Elem() AwsNodePoolUpdateSettingsSurgeSettingsOutput {
	return o.ApplyT(func(v *AwsNodePoolUpdateSettingsSurgeSettings) AwsNodePoolUpdateSettingsSurgeSettings {
		if v != nil {
			return *v
		}
		var ret AwsNodePoolUpdateSettingsSurgeSettings
		return ret
	}).(AwsNodePoolUpdateSettingsSurgeSettingsOutput)
}

// Optional. The maximum number of nodes that can be created beyond the current size of the node pool during the update process.
func (o AwsNodePoolUpdateSettingsSurgeSettingsPtrOutput) MaxSurge() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AwsNodePoolUpdateSettingsSurgeSettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxSurge
	}).(pulumi.IntPtrOutput)
}

// Optional. The maximum number of nodes that can be simultaneously unavailable during the update process. A node is considered unavailable if its status is not Ready.
func (o AwsNodePoolUpdateSettingsSurgeSettingsPtrOutput) MaxUnavailable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AwsNodePoolUpdateSettingsSurgeSettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxUnavailable
	}).(pulumi.IntPtrOutput)
}

type AzureClusterAuthorization struct {
	// Groups of users that can perform operations as a cluster admin. A managed ClusterRoleBinding will be created to grant the `cluster-admin` ClusterRole to the groups. Up to ten admin groups can be provided. For more info on RBAC, see https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles
	AdminGroups []AzureClusterAuthorizationAdminGroup `pulumi:"adminGroups"`
	// Users that can perform operations as a cluster admin. A new ClusterRoleBinding will be created to grant the cluster-admin ClusterRole to the users. Up to ten admin users can be provided. For more info on RBAC, see https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles
	AdminUsers []AzureClusterAuthorizationAdminUser `pulumi:"adminUsers"`
}

// AzureClusterAuthorizationInput is an input type that accepts AzureClusterAuthorizationArgs and AzureClusterAuthorizationOutput values.
// You can construct a concrete instance of `AzureClusterAuthorizationInput` via:
//
//	AzureClusterAuthorizationArgs{...}
type AzureClusterAuthorizationInput interface {
	pulumi.Input

	ToAzureClusterAuthorizationOutput() AzureClusterAuthorizationOutput
	ToAzureClusterAuthorizationOutputWithContext(context.Context) AzureClusterAuthorizationOutput
}

type AzureClusterAuthorizationArgs struct {
	// Groups of users that can perform operations as a cluster admin. A managed ClusterRoleBinding will be created to grant the `cluster-admin` ClusterRole to the groups. Up to ten admin groups can be provided. For more info on RBAC, see https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles
	AdminGroups AzureClusterAuthorizationAdminGroupArrayInput `pulumi:"adminGroups"`
	// Users that can perform operations as a cluster admin. A new ClusterRoleBinding will be created to grant the cluster-admin ClusterRole to the users. Up to ten admin users can be provided. For more info on RBAC, see https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles
	AdminUsers AzureClusterAuthorizationAdminUserArrayInput `pulumi:"adminUsers"`
}

func (AzureClusterAuthorizationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureClusterAuthorization)(nil)).Elem()
}

func (i AzureClusterAuthorizationArgs) ToAzureClusterAuthorizationOutput() AzureClusterAuthorizationOutput {
	return i.ToAzureClusterAuthorizationOutputWithContext(context.Background())
}

func (i AzureClusterAuthorizationArgs) ToAzureClusterAuthorizationOutputWithContext(ctx context.Context) AzureClusterAuthorizationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureClusterAuthorizationOutput)
}

func (i AzureClusterAuthorizationArgs) ToAzureClusterAuthorizationPtrOutput() AzureClusterAuthorizationPtrOutput {
	return i.ToAzureClusterAuthorizationPtrOutputWithContext(context.Background())
}

func (i AzureClusterAuthorizationArgs) ToAzureClusterAuthorizationPtrOutputWithContext(ctx context.Context) AzureClusterAuthorizationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureClusterAuthorizationOutput).ToAzureClusterAuthorizationPtrOutputWithContext(ctx)
}

// AzureClusterAuthorizationPtrInput is an input type that accepts AzureClusterAuthorizationArgs, AzureClusterAuthorizationPtr and AzureClusterAuthorizationPtrOutput values.
// You can construct a concrete instance of `AzureClusterAuthorizationPtrInput` via:
//
//	        AzureClusterAuthorizationArgs{...}
//
//	or:
//
//	        nil
type AzureClusterAuthorizationPtrInput interface {
	pulumi.Input

	ToAzureClusterAuthorizationPtrOutput() AzureClusterAuthorizationPtrOutput
	ToAzureClusterAuthorizationPtrOutputWithContext(context.Context) AzureClusterAuthorizationPtrOutput
}

type azureClusterAuthorizationPtrType AzureClusterAuthorizationArgs

func AzureClusterAuthorizationPtr(v *AzureClusterAuthorizationArgs) AzureClusterAuthorizationPtrInput {
	return (*azureClusterAuthorizationPtrType)(v)
}

func (*azureClusterAuthorizationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureClusterAuthorization)(nil)).Elem()
}

func (i *azureClusterAuthorizationPtrType) ToAzureClusterAuthorizationPtrOutput() AzureClusterAuthorizationPtrOutput {
	return i.ToAzureClusterAuthorizationPtrOutputWithContext(context.Background())
}

func (i *azureClusterAuthorizationPtrType) ToAzureClusterAuthorizationPtrOutputWithContext(ctx context.Context) AzureClusterAuthorizationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureClusterAuthorizationPtrOutput)
}

type AzureClusterAuthorizationOutput struct{ *pulumi.OutputState }

func (AzureClusterAuthorizationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureClusterAuthorization)(nil)).Elem()
}

func (o AzureClusterAuthorizationOutput) ToAzureClusterAuthorizationOutput() AzureClusterAuthorizationOutput {
	return o
}

func (o AzureClusterAuthorizationOutput) ToAzureClusterAuthorizationOutputWithContext(ctx context.Context) AzureClusterAuthorizationOutput {
	return o
}

func (o AzureClusterAuthorizationOutput) ToAzureClusterAuthorizationPtrOutput() AzureClusterAuthorizationPtrOutput {
	return o.ToAzureClusterAuthorizationPtrOutputWithContext(context.Background())
}

func (o AzureClusterAuthorizationOutput) ToAzureClusterAuthorizationPtrOutputWithContext(ctx context.Context) AzureClusterAuthorizationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureClusterAuthorization) *AzureClusterAuthorization {
		return &v
	}).(AzureClusterAuthorizationPtrOutput)
}

// Groups of users that can perform operations as a cluster admin. A managed ClusterRoleBinding will be created to grant the `cluster-admin` ClusterRole to the groups. Up to ten admin groups can be provided. For more info on RBAC, see https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles
func (o AzureClusterAuthorizationOutput) AdminGroups() AzureClusterAuthorizationAdminGroupArrayOutput {
	return o.ApplyT(func(v AzureClusterAuthorization) []AzureClusterAuthorizationAdminGroup { return v.AdminGroups }).(AzureClusterAuthorizationAdminGroupArrayOutput)
}

// Users that can perform operations as a cluster admin. A new ClusterRoleBinding will be created to grant the cluster-admin ClusterRole to the users. Up to ten admin users can be provided. For more info on RBAC, see https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles
func (o AzureClusterAuthorizationOutput) AdminUsers() AzureClusterAuthorizationAdminUserArrayOutput {
	return o.ApplyT(func(v AzureClusterAuthorization) []AzureClusterAuthorizationAdminUser { return v.AdminUsers }).(AzureClusterAuthorizationAdminUserArrayOutput)
}

type AzureClusterAuthorizationPtrOutput struct{ *pulumi.OutputState }

func (AzureClusterAuthorizationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureClusterAuthorization)(nil)).Elem()
}

func (o AzureClusterAuthorizationPtrOutput) ToAzureClusterAuthorizationPtrOutput() AzureClusterAuthorizationPtrOutput {
	return o
}

func (o AzureClusterAuthorizationPtrOutput) ToAzureClusterAuthorizationPtrOutputWithContext(ctx context.Context) AzureClusterAuthorizationPtrOutput {
	return o
}

func (o AzureClusterAuthorizationPtrOutput) Elem() AzureClusterAuthorizationOutput {
	return o.ApplyT(func(v *AzureClusterAuthorization) AzureClusterAuthorization {
		if v != nil {
			return *v
		}
		var ret AzureClusterAuthorization
		return ret
	}).(AzureClusterAuthorizationOutput)
}

// Groups of users that can perform operations as a cluster admin. A managed ClusterRoleBinding will be created to grant the `cluster-admin` ClusterRole to the groups. Up to ten admin groups can be provided. For more info on RBAC, see https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles
func (o AzureClusterAuthorizationPtrOutput) AdminGroups() AzureClusterAuthorizationAdminGroupArrayOutput {
	return o.ApplyT(func(v *AzureClusterAuthorization) []AzureClusterAuthorizationAdminGroup {
		if v == nil {
			return nil
		}
		return v.AdminGroups
	}).(AzureClusterAuthorizationAdminGroupArrayOutput)
}

// Users that can perform operations as a cluster admin. A new ClusterRoleBinding will be created to grant the cluster-admin ClusterRole to the users. Up to ten admin users can be provided. For more info on RBAC, see https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles
func (o AzureClusterAuthorizationPtrOutput) AdminUsers() AzureClusterAuthorizationAdminUserArrayOutput {
	return o.ApplyT(func(v *AzureClusterAuthorization) []AzureClusterAuthorizationAdminUser {
		if v == nil {
			return nil
		}
		return v.AdminUsers
	}).(AzureClusterAuthorizationAdminUserArrayOutput)
}

type AzureClusterAuthorizationAdminGroup struct {
	// The name of the group, e.g. `my-group@domain.com`.
	Group string `pulumi:"group"`
}

// AzureClusterAuthorizationAdminGroupInput is an input type that accepts AzureClusterAuthorizationAdminGroupArgs and AzureClusterAuthorizationAdminGroupOutput values.
// You can construct a concrete instance of `AzureClusterAuthorizationAdminGroupInput` via:
//
//	AzureClusterAuthorizationAdminGroupArgs{...}
type AzureClusterAuthorizationAdminGroupInput interface {
	pulumi.Input

	ToAzureClusterAuthorizationAdminGroupOutput() AzureClusterAuthorizationAdminGroupOutput
	ToAzureClusterAuthorizationAdminGroupOutputWithContext(context.Context) AzureClusterAuthorizationAdminGroupOutput
}

type AzureClusterAuthorizationAdminGroupArgs struct {
	// The name of the group, e.g. `my-group@domain.com`.
	Group pulumi.StringInput `pulumi:"group"`
}

func (AzureClusterAuthorizationAdminGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureClusterAuthorizationAdminGroup)(nil)).Elem()
}

func (i AzureClusterAuthorizationAdminGroupArgs) ToAzureClusterAuthorizationAdminGroupOutput() AzureClusterAuthorizationAdminGroupOutput {
	return i.ToAzureClusterAuthorizationAdminGroupOutputWithContext(context.Background())
}

func (i AzureClusterAuthorizationAdminGroupArgs) ToAzureClusterAuthorizationAdminGroupOutputWithContext(ctx context.Context) AzureClusterAuthorizationAdminGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureClusterAuthorizationAdminGroupOutput)
}

// AzureClusterAuthorizationAdminGroupArrayInput is an input type that accepts AzureClusterAuthorizationAdminGroupArray and AzureClusterAuthorizationAdminGroupArrayOutput values.
// You can construct a concrete instance of `AzureClusterAuthorizationAdminGroupArrayInput` via:
//
//	AzureClusterAuthorizationAdminGroupArray{ AzureClusterAuthorizationAdminGroupArgs{...} }
type AzureClusterAuthorizationAdminGroupArrayInput interface {
	pulumi.Input

	ToAzureClusterAuthorizationAdminGroupArrayOutput() AzureClusterAuthorizationAdminGroupArrayOutput
	ToAzureClusterAuthorizationAdminGroupArrayOutputWithContext(context.Context) AzureClusterAuthorizationAdminGroupArrayOutput
}

type AzureClusterAuthorizationAdminGroupArray []AzureClusterAuthorizationAdminGroupInput

func (AzureClusterAuthorizationAdminGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureClusterAuthorizationAdminGroup)(nil)).Elem()
}

func (i AzureClusterAuthorizationAdminGroupArray) ToAzureClusterAuthorizationAdminGroupArrayOutput() AzureClusterAuthorizationAdminGroupArrayOutput {
	return i.ToAzureClusterAuthorizationAdminGroupArrayOutputWithContext(context.Background())
}

func (i AzureClusterAuthorizationAdminGroupArray) ToAzureClusterAuthorizationAdminGroupArrayOutputWithContext(ctx context.Context) AzureClusterAuthorizationAdminGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureClusterAuthorizationAdminGroupArrayOutput)
}

type AzureClusterAuthorizationAdminGroupOutput struct{ *pulumi.OutputState }

func (AzureClusterAuthorizationAdminGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureClusterAuthorizationAdminGroup)(nil)).Elem()
}

func (o AzureClusterAuthorizationAdminGroupOutput) ToAzureClusterAuthorizationAdminGroupOutput() AzureClusterAuthorizationAdminGroupOutput {
	return o
}

func (o AzureClusterAuthorizationAdminGroupOutput) ToAzureClusterAuthorizationAdminGroupOutputWithContext(ctx context.Context) AzureClusterAuthorizationAdminGroupOutput {
	return o
}

// The name of the group, e.g. `my-group@domain.com`.
func (o AzureClusterAuthorizationAdminGroupOutput) Group() pulumi.StringOutput {
	return o.ApplyT(func(v AzureClusterAuthorizationAdminGroup) string { return v.Group }).(pulumi.StringOutput)
}

type AzureClusterAuthorizationAdminGroupArrayOutput struct{ *pulumi.OutputState }

func (AzureClusterAuthorizationAdminGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureClusterAuthorizationAdminGroup)(nil)).Elem()
}

func (o AzureClusterAuthorizationAdminGroupArrayOutput) ToAzureClusterAuthorizationAdminGroupArrayOutput() AzureClusterAuthorizationAdminGroupArrayOutput {
	return o
}

func (o AzureClusterAuthorizationAdminGroupArrayOutput) ToAzureClusterAuthorizationAdminGroupArrayOutputWithContext(ctx context.Context) AzureClusterAuthorizationAdminGroupArrayOutput {
	return o
}

func (o AzureClusterAuthorizationAdminGroupArrayOutput) Index(i pulumi.IntInput) AzureClusterAuthorizationAdminGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureClusterAuthorizationAdminGroup {
		return vs[0].([]AzureClusterAuthorizationAdminGroup)[vs[1].(int)]
	}).(AzureClusterAuthorizationAdminGroupOutput)
}

type AzureClusterAuthorizationAdminUser struct {
	// The name of the user, e.g. `my-gcp-id@gmail.com`.
	Username string `pulumi:"username"`
}

// AzureClusterAuthorizationAdminUserInput is an input type that accepts AzureClusterAuthorizationAdminUserArgs and AzureClusterAuthorizationAdminUserOutput values.
// You can construct a concrete instance of `AzureClusterAuthorizationAdminUserInput` via:
//
//	AzureClusterAuthorizationAdminUserArgs{...}
type AzureClusterAuthorizationAdminUserInput interface {
	pulumi.Input

	ToAzureClusterAuthorizationAdminUserOutput() AzureClusterAuthorizationAdminUserOutput
	ToAzureClusterAuthorizationAdminUserOutputWithContext(context.Context) AzureClusterAuthorizationAdminUserOutput
}

type AzureClusterAuthorizationAdminUserArgs struct {
	// The name of the user, e.g. `my-gcp-id@gmail.com`.
	Username pulumi.StringInput `pulumi:"username"`
}

func (AzureClusterAuthorizationAdminUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureClusterAuthorizationAdminUser)(nil)).Elem()
}

func (i AzureClusterAuthorizationAdminUserArgs) ToAzureClusterAuthorizationAdminUserOutput() AzureClusterAuthorizationAdminUserOutput {
	return i.ToAzureClusterAuthorizationAdminUserOutputWithContext(context.Background())
}

func (i AzureClusterAuthorizationAdminUserArgs) ToAzureClusterAuthorizationAdminUserOutputWithContext(ctx context.Context) AzureClusterAuthorizationAdminUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureClusterAuthorizationAdminUserOutput)
}

// AzureClusterAuthorizationAdminUserArrayInput is an input type that accepts AzureClusterAuthorizationAdminUserArray and AzureClusterAuthorizationAdminUserArrayOutput values.
// You can construct a concrete instance of `AzureClusterAuthorizationAdminUserArrayInput` via:
//
//	AzureClusterAuthorizationAdminUserArray{ AzureClusterAuthorizationAdminUserArgs{...} }
type AzureClusterAuthorizationAdminUserArrayInput interface {
	pulumi.Input

	ToAzureClusterAuthorizationAdminUserArrayOutput() AzureClusterAuthorizationAdminUserArrayOutput
	ToAzureClusterAuthorizationAdminUserArrayOutputWithContext(context.Context) AzureClusterAuthorizationAdminUserArrayOutput
}

type AzureClusterAuthorizationAdminUserArray []AzureClusterAuthorizationAdminUserInput

func (AzureClusterAuthorizationAdminUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureClusterAuthorizationAdminUser)(nil)).Elem()
}

func (i AzureClusterAuthorizationAdminUserArray) ToAzureClusterAuthorizationAdminUserArrayOutput() AzureClusterAuthorizationAdminUserArrayOutput {
	return i.ToAzureClusterAuthorizationAdminUserArrayOutputWithContext(context.Background())
}

func (i AzureClusterAuthorizationAdminUserArray) ToAzureClusterAuthorizationAdminUserArrayOutputWithContext(ctx context.Context) AzureClusterAuthorizationAdminUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureClusterAuthorizationAdminUserArrayOutput)
}

type AzureClusterAuthorizationAdminUserOutput struct{ *pulumi.OutputState }

func (AzureClusterAuthorizationAdminUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureClusterAuthorizationAdminUser)(nil)).Elem()
}

func (o AzureClusterAuthorizationAdminUserOutput) ToAzureClusterAuthorizationAdminUserOutput() AzureClusterAuthorizationAdminUserOutput {
	return o
}

func (o AzureClusterAuthorizationAdminUserOutput) ToAzureClusterAuthorizationAdminUserOutputWithContext(ctx context.Context) AzureClusterAuthorizationAdminUserOutput {
	return o
}

// The name of the user, e.g. `my-gcp-id@gmail.com`.
func (o AzureClusterAuthorizationAdminUserOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v AzureClusterAuthorizationAdminUser) string { return v.Username }).(pulumi.StringOutput)
}

type AzureClusterAuthorizationAdminUserArrayOutput struct{ *pulumi.OutputState }

func (AzureClusterAuthorizationAdminUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureClusterAuthorizationAdminUser)(nil)).Elem()
}

func (o AzureClusterAuthorizationAdminUserArrayOutput) ToAzureClusterAuthorizationAdminUserArrayOutput() AzureClusterAuthorizationAdminUserArrayOutput {
	return o
}

func (o AzureClusterAuthorizationAdminUserArrayOutput) ToAzureClusterAuthorizationAdminUserArrayOutputWithContext(ctx context.Context) AzureClusterAuthorizationAdminUserArrayOutput {
	return o
}

func (o AzureClusterAuthorizationAdminUserArrayOutput) Index(i pulumi.IntInput) AzureClusterAuthorizationAdminUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureClusterAuthorizationAdminUser {
		return vs[0].([]AzureClusterAuthorizationAdminUser)[vs[1].(int)]
	}).(AzureClusterAuthorizationAdminUserOutput)
}

type AzureClusterAzureServicesAuthentication struct {
	// The Azure Active Directory Application ID for Authentication configuration.
	ApplicationId string `pulumi:"applicationId"`
	// The Azure Active Directory Tenant ID for Authentication configuration.
	TenantId string `pulumi:"tenantId"`
}

// AzureClusterAzureServicesAuthenticationInput is an input type that accepts AzureClusterAzureServicesAuthenticationArgs and AzureClusterAzureServicesAuthenticationOutput values.
// You can construct a concrete instance of `AzureClusterAzureServicesAuthenticationInput` via:
//
//	AzureClusterAzureServicesAuthenticationArgs{...}
type AzureClusterAzureServicesAuthenticationInput interface {
	pulumi.Input

	ToAzureClusterAzureServicesAuthenticationOutput() AzureClusterAzureServicesAuthenticationOutput
	ToAzureClusterAzureServicesAuthenticationOutputWithContext(context.Context) AzureClusterAzureServicesAuthenticationOutput
}

type AzureClusterAzureServicesAuthenticationArgs struct {
	// The Azure Active Directory Application ID for Authentication configuration.
	ApplicationId pulumi.StringInput `pulumi:"applicationId"`
	// The Azure Active Directory Tenant ID for Authentication configuration.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
}

func (AzureClusterAzureServicesAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureClusterAzureServicesAuthentication)(nil)).Elem()
}

func (i AzureClusterAzureServicesAuthenticationArgs) ToAzureClusterAzureServicesAuthenticationOutput() AzureClusterAzureServicesAuthenticationOutput {
	return i.ToAzureClusterAzureServicesAuthenticationOutputWithContext(context.Background())
}

func (i AzureClusterAzureServicesAuthenticationArgs) ToAzureClusterAzureServicesAuthenticationOutputWithContext(ctx context.Context) AzureClusterAzureServicesAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureClusterAzureServicesAuthenticationOutput)
}

func (i AzureClusterAzureServicesAuthenticationArgs) ToAzureClusterAzureServicesAuthenticationPtrOutput() AzureClusterAzureServicesAuthenticationPtrOutput {
	return i.ToAzureClusterAzureServicesAuthenticationPtrOutputWithContext(context.Background())
}

func (i AzureClusterAzureServicesAuthenticationArgs) ToAzureClusterAzureServicesAuthenticationPtrOutputWithContext(ctx context.Context) AzureClusterAzureServicesAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureClusterAzureServicesAuthenticationOutput).ToAzureClusterAzureServicesAuthenticationPtrOutputWithContext(ctx)
}

// AzureClusterAzureServicesAuthenticationPtrInput is an input type that accepts AzureClusterAzureServicesAuthenticationArgs, AzureClusterAzureServicesAuthenticationPtr and AzureClusterAzureServicesAuthenticationPtrOutput values.
// You can construct a concrete instance of `AzureClusterAzureServicesAuthenticationPtrInput` via:
//
//	        AzureClusterAzureServicesAuthenticationArgs{...}
//
//	or:
//
//	        nil
type AzureClusterAzureServicesAuthenticationPtrInput interface {
	pulumi.Input

	ToAzureClusterAzureServicesAuthenticationPtrOutput() AzureClusterAzureServicesAuthenticationPtrOutput
	ToAzureClusterAzureServicesAuthenticationPtrOutputWithContext(context.Context) AzureClusterAzureServicesAuthenticationPtrOutput
}

type azureClusterAzureServicesAuthenticationPtrType AzureClusterAzureServicesAuthenticationArgs

func AzureClusterAzureServicesAuthenticationPtr(v *AzureClusterAzureServicesAuthenticationArgs) AzureClusterAzureServicesAuthenticationPtrInput {
	return (*azureClusterAzureServicesAuthenticationPtrType)(v)
}

func (*azureClusterAzureServicesAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureClusterAzureServicesAuthentication)(nil)).Elem()
}

func (i *azureClusterAzureServicesAuthenticationPtrType) ToAzureClusterAzureServicesAuthenticationPtrOutput() AzureClusterAzureServicesAuthenticationPtrOutput {
	return i.ToAzureClusterAzureServicesAuthenticationPtrOutputWithContext(context.Background())
}

func (i *azureClusterAzureServicesAuthenticationPtrType) ToAzureClusterAzureServicesAuthenticationPtrOutputWithContext(ctx context.Context) AzureClusterAzureServicesAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureClusterAzureServicesAuthenticationPtrOutput)
}

type AzureClusterAzureServicesAuthenticationOutput struct{ *pulumi.OutputState }

func (AzureClusterAzureServicesAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureClusterAzureServicesAuthentication)(nil)).Elem()
}

func (o AzureClusterAzureServicesAuthenticationOutput) ToAzureClusterAzureServicesAuthenticationOutput() AzureClusterAzureServicesAuthenticationOutput {
	return o
}

func (o AzureClusterAzureServicesAuthenticationOutput) ToAzureClusterAzureServicesAuthenticationOutputWithContext(ctx context.Context) AzureClusterAzureServicesAuthenticationOutput {
	return o
}

func (o AzureClusterAzureServicesAuthenticationOutput) ToAzureClusterAzureServicesAuthenticationPtrOutput() AzureClusterAzureServicesAuthenticationPtrOutput {
	return o.ToAzureClusterAzureServicesAuthenticationPtrOutputWithContext(context.Background())
}

func (o AzureClusterAzureServicesAuthenticationOutput) ToAzureClusterAzureServicesAuthenticationPtrOutputWithContext(ctx context.Context) AzureClusterAzureServicesAuthenticationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureClusterAzureServicesAuthentication) *AzureClusterAzureServicesAuthentication {
		return &v
	}).(AzureClusterAzureServicesAuthenticationPtrOutput)
}

// The Azure Active Directory Application ID for Authentication configuration.
func (o AzureClusterAzureServicesAuthenticationOutput) ApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v AzureClusterAzureServicesAuthentication) string { return v.ApplicationId }).(pulumi.StringOutput)
}

// The Azure Active Directory Tenant ID for Authentication configuration.
func (o AzureClusterAzureServicesAuthenticationOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v AzureClusterAzureServicesAuthentication) string { return v.TenantId }).(pulumi.StringOutput)
}

type AzureClusterAzureServicesAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (AzureClusterAzureServicesAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureClusterAzureServicesAuthentication)(nil)).Elem()
}

func (o AzureClusterAzureServicesAuthenticationPtrOutput) ToAzureClusterAzureServicesAuthenticationPtrOutput() AzureClusterAzureServicesAuthenticationPtrOutput {
	return o
}

func (o AzureClusterAzureServicesAuthenticationPtrOutput) ToAzureClusterAzureServicesAuthenticationPtrOutputWithContext(ctx context.Context) AzureClusterAzureServicesAuthenticationPtrOutput {
	return o
}

func (o AzureClusterAzureServicesAuthenticationPtrOutput) Elem() AzureClusterAzureServicesAuthenticationOutput {
	return o.ApplyT(func(v *AzureClusterAzureServicesAuthentication) AzureClusterAzureServicesAuthentication {
		if v != nil {
			return *v
		}
		var ret AzureClusterAzureServicesAuthentication
		return ret
	}).(AzureClusterAzureServicesAuthenticationOutput)
}

// The Azure Active Directory Application ID for Authentication configuration.
func (o AzureClusterAzureServicesAuthenticationPtrOutput) ApplicationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureClusterAzureServicesAuthentication) *string {
		if v == nil {
			return nil
		}
		return &v.ApplicationId
	}).(pulumi.StringPtrOutput)
}

// The Azure Active Directory Tenant ID for Authentication configuration.
func (o AzureClusterAzureServicesAuthenticationPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureClusterAzureServicesAuthentication) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

type AzureClusterControlPlane struct {
	// Optional. Configuration related to application-layer secrets encryption.
	DatabaseEncryption *AzureClusterControlPlaneDatabaseEncryption `pulumi:"databaseEncryption"`
	// Optional. Configuration related to the main volume provisioned for each control plane replica. The main volume is in charge of storing all of the cluster's etcd state. When unspecified, it defaults to a 8-GiB Azure Disk.
	MainVolume *AzureClusterControlPlaneMainVolume `pulumi:"mainVolume"`
	// Proxy configuration for outbound HTTP(S) traffic.
	ProxyConfig *AzureClusterControlPlaneProxyConfig `pulumi:"proxyConfig"`
	// Configuration for where to place the control plane replicas. Up to three replica placement instances can be specified. If replicaPlacements is set, the replica placement instances will be applied to the three control plane replicas as evenly as possible.
	ReplicaPlacements []AzureClusterControlPlaneReplicaPlacement `pulumi:"replicaPlacements"`
	// Optional. Configuration related to the root volume provisioned for each control plane replica. When unspecified, it defaults to 32-GiB Azure Disk.
	RootVolume *AzureClusterControlPlaneRootVolume `pulumi:"rootVolume"`
	// SSH configuration for how to access the underlying control plane machines.
	SshConfig AzureClusterControlPlaneSshConfig `pulumi:"sshConfig"`
	// The ARM ID of the subnet where the control plane VMs are deployed. Example: `/subscriptions//resourceGroups//providers/Microsoft.Network/virtualNetworks//subnets/default`.
	SubnetId string `pulumi:"subnetId"`
	// Optional. A set of tags to apply to all underlying control plane Azure resources.
	Tags map[string]string `pulumi:"tags"`
	// The Kubernetes version to run on control plane replicas (e.g. `1.19.10-gke.1000`). You can list all supported versions on a given Google Cloud region by calling GetAzureServerConfig.
	Version string `pulumi:"version"`
	// Optional. The Azure VM size name. Example: `Standard_DS2_v2`. For available VM sizes, see https://docs.microsoft.com/en-us/azure/virtual-machines/vm-naming-conventions. When unspecified, it defaults to `Standard_DS2_v2`.
	VmSize *string `pulumi:"vmSize"`
}

// AzureClusterControlPlaneInput is an input type that accepts AzureClusterControlPlaneArgs and AzureClusterControlPlaneOutput values.
// You can construct a concrete instance of `AzureClusterControlPlaneInput` via:
//
//	AzureClusterControlPlaneArgs{...}
type AzureClusterControlPlaneInput interface {
	pulumi.Input

	ToAzureClusterControlPlaneOutput() AzureClusterControlPlaneOutput
	ToAzureClusterControlPlaneOutputWithContext(context.Context) AzureClusterControlPlaneOutput
}

type AzureClusterControlPlaneArgs struct {
	// Optional. Configuration related to application-layer secrets encryption.
	DatabaseEncryption AzureClusterControlPlaneDatabaseEncryptionPtrInput `pulumi:"databaseEncryption"`
	// Optional. Configuration related to the main volume provisioned for each control plane replica. The main volume is in charge of storing all of the cluster's etcd state. When unspecified, it defaults to a 8-GiB Azure Disk.
	MainVolume AzureClusterControlPlaneMainVolumePtrInput `pulumi:"mainVolume"`
	// Proxy configuration for outbound HTTP(S) traffic.
	ProxyConfig AzureClusterControlPlaneProxyConfigPtrInput `pulumi:"proxyConfig"`
	// Configuration for where to place the control plane replicas. Up to three replica placement instances can be specified. If replicaPlacements is set, the replica placement instances will be applied to the three control plane replicas as evenly as possible.
	ReplicaPlacements AzureClusterControlPlaneReplicaPlacementArrayInput `pulumi:"replicaPlacements"`
	// Optional. Configuration related to the root volume provisioned for each control plane replica. When unspecified, it defaults to 32-GiB Azure Disk.
	RootVolume AzureClusterControlPlaneRootVolumePtrInput `pulumi:"rootVolume"`
	// SSH configuration for how to access the underlying control plane machines.
	SshConfig AzureClusterControlPlaneSshConfigInput `pulumi:"sshConfig"`
	// The ARM ID of the subnet where the control plane VMs are deployed. Example: `/subscriptions//resourceGroups//providers/Microsoft.Network/virtualNetworks//subnets/default`.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
	// Optional. A set of tags to apply to all underlying control plane Azure resources.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// The Kubernetes version to run on control plane replicas (e.g. `1.19.10-gke.1000`). You can list all supported versions on a given Google Cloud region by calling GetAzureServerConfig.
	Version pulumi.StringInput `pulumi:"version"`
	// Optional. The Azure VM size name. Example: `Standard_DS2_v2`. For available VM sizes, see https://docs.microsoft.com/en-us/azure/virtual-machines/vm-naming-conventions. When unspecified, it defaults to `Standard_DS2_v2`.
	VmSize pulumi.StringPtrInput `pulumi:"vmSize"`
}

func (AzureClusterControlPlaneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureClusterControlPlane)(nil)).Elem()
}

func (i AzureClusterControlPlaneArgs) ToAzureClusterControlPlaneOutput() AzureClusterControlPlaneOutput {
	return i.ToAzureClusterControlPlaneOutputWithContext(context.Background())
}

func (i AzureClusterControlPlaneArgs) ToAzureClusterControlPlaneOutputWithContext(ctx context.Context) AzureClusterControlPlaneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureClusterControlPlaneOutput)
}

func (i AzureClusterControlPlaneArgs) ToAzureClusterControlPlanePtrOutput() AzureClusterControlPlanePtrOutput {
	return i.ToAzureClusterControlPlanePtrOutputWithContext(context.Background())
}

func (i AzureClusterControlPlaneArgs) ToAzureClusterControlPlanePtrOutputWithContext(ctx context.Context) AzureClusterControlPlanePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureClusterControlPlaneOutput).ToAzureClusterControlPlanePtrOutputWithContext(ctx)
}

// AzureClusterControlPlanePtrInput is an input type that accepts AzureClusterControlPlaneArgs, AzureClusterControlPlanePtr and AzureClusterControlPlanePtrOutput values.
// You can construct a concrete instance of `AzureClusterControlPlanePtrInput` via:
//
//	        AzureClusterControlPlaneArgs{...}
//
//	or:
//
//	        nil
type AzureClusterControlPlanePtrInput interface {
	pulumi.Input

	ToAzureClusterControlPlanePtrOutput() AzureClusterControlPlanePtrOutput
	ToAzureClusterControlPlanePtrOutputWithContext(context.Context) AzureClusterControlPlanePtrOutput
}

type azureClusterControlPlanePtrType AzureClusterControlPlaneArgs

func AzureClusterControlPlanePtr(v *AzureClusterControlPlaneArgs) AzureClusterControlPlanePtrInput {
	return (*azureClusterControlPlanePtrType)(v)
}

func (*azureClusterControlPlanePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureClusterControlPlane)(nil)).Elem()
}

func (i *azureClusterControlPlanePtrType) ToAzureClusterControlPlanePtrOutput() AzureClusterControlPlanePtrOutput {
	return i.ToAzureClusterControlPlanePtrOutputWithContext(context.Background())
}

func (i *azureClusterControlPlanePtrType) ToAzureClusterControlPlanePtrOutputWithContext(ctx context.Context) AzureClusterControlPlanePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureClusterControlPlanePtrOutput)
}

type AzureClusterControlPlaneOutput struct{ *pulumi.OutputState }

func (AzureClusterControlPlaneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureClusterControlPlane)(nil)).Elem()
}

func (o AzureClusterControlPlaneOutput) ToAzureClusterControlPlaneOutput() AzureClusterControlPlaneOutput {
	return o
}

func (o AzureClusterControlPlaneOutput) ToAzureClusterControlPlaneOutputWithContext(ctx context.Context) AzureClusterControlPlaneOutput {
	return o
}

func (o AzureClusterControlPlaneOutput) ToAzureClusterControlPlanePtrOutput() AzureClusterControlPlanePtrOutput {
	return o.ToAzureClusterControlPlanePtrOutputWithContext(context.Background())
}

func (o AzureClusterControlPlaneOutput) ToAzureClusterControlPlanePtrOutputWithContext(ctx context.Context) AzureClusterControlPlanePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureClusterControlPlane) *AzureClusterControlPlane {
		return &v
	}).(AzureClusterControlPlanePtrOutput)
}

// Optional. Configuration related to application-layer secrets encryption.
func (o AzureClusterControlPlaneOutput) DatabaseEncryption() AzureClusterControlPlaneDatabaseEncryptionPtrOutput {
	return o.ApplyT(func(v AzureClusterControlPlane) *AzureClusterControlPlaneDatabaseEncryption {
		return v.DatabaseEncryption
	}).(AzureClusterControlPlaneDatabaseEncryptionPtrOutput)
}

// Optional. Configuration related to the main volume provisioned for each control plane replica. The main volume is in charge of storing all of the cluster's etcd state. When unspecified, it defaults to a 8-GiB Azure Disk.
func (o AzureClusterControlPlaneOutput) MainVolume() AzureClusterControlPlaneMainVolumePtrOutput {
	return o.ApplyT(func(v AzureClusterControlPlane) *AzureClusterControlPlaneMainVolume { return v.MainVolume }).(AzureClusterControlPlaneMainVolumePtrOutput)
}

// Proxy configuration for outbound HTTP(S) traffic.
func (o AzureClusterControlPlaneOutput) ProxyConfig() AzureClusterControlPlaneProxyConfigPtrOutput {
	return o.ApplyT(func(v AzureClusterControlPlane) *AzureClusterControlPlaneProxyConfig { return v.ProxyConfig }).(AzureClusterControlPlaneProxyConfigPtrOutput)
}

// Configuration for where to place the control plane replicas. Up to three replica placement instances can be specified. If replicaPlacements is set, the replica placement instances will be applied to the three control plane replicas as evenly as possible.
func (o AzureClusterControlPlaneOutput) ReplicaPlacements() AzureClusterControlPlaneReplicaPlacementArrayOutput {
	return o.ApplyT(func(v AzureClusterControlPlane) []AzureClusterControlPlaneReplicaPlacement {
		return v.ReplicaPlacements
	}).(AzureClusterControlPlaneReplicaPlacementArrayOutput)
}

// Optional. Configuration related to the root volume provisioned for each control plane replica. When unspecified, it defaults to 32-GiB Azure Disk.
func (o AzureClusterControlPlaneOutput) RootVolume() AzureClusterControlPlaneRootVolumePtrOutput {
	return o.ApplyT(func(v AzureClusterControlPlane) *AzureClusterControlPlaneRootVolume { return v.RootVolume }).(AzureClusterControlPlaneRootVolumePtrOutput)
}

// SSH configuration for how to access the underlying control plane machines.
func (o AzureClusterControlPlaneOutput) SshConfig() AzureClusterControlPlaneSshConfigOutput {
	return o.ApplyT(func(v AzureClusterControlPlane) AzureClusterControlPlaneSshConfig { return v.SshConfig }).(AzureClusterControlPlaneSshConfigOutput)
}

// The ARM ID of the subnet where the control plane VMs are deployed. Example: `/subscriptions//resourceGroups//providers/Microsoft.Network/virtualNetworks//subnets/default`.
func (o AzureClusterControlPlaneOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v AzureClusterControlPlane) string { return v.SubnetId }).(pulumi.StringOutput)
}

// Optional. A set of tags to apply to all underlying control plane Azure resources.
func (o AzureClusterControlPlaneOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v AzureClusterControlPlane) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The Kubernetes version to run on control plane replicas (e.g. `1.19.10-gke.1000`). You can list all supported versions on a given Google Cloud region by calling GetAzureServerConfig.
func (o AzureClusterControlPlaneOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v AzureClusterControlPlane) string { return v.Version }).(pulumi.StringOutput)
}

// Optional. The Azure VM size name. Example: `Standard_DS2_v2`. For available VM sizes, see https://docs.microsoft.com/en-us/azure/virtual-machines/vm-naming-conventions. When unspecified, it defaults to `Standard_DS2_v2`.
func (o AzureClusterControlPlaneOutput) VmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureClusterControlPlane) *string { return v.VmSize }).(pulumi.StringPtrOutput)
}

type AzureClusterControlPlanePtrOutput struct{ *pulumi.OutputState }

func (AzureClusterControlPlanePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureClusterControlPlane)(nil)).Elem()
}

func (o AzureClusterControlPlanePtrOutput) ToAzureClusterControlPlanePtrOutput() AzureClusterControlPlanePtrOutput {
	return o
}

func (o AzureClusterControlPlanePtrOutput) ToAzureClusterControlPlanePtrOutputWithContext(ctx context.Context) AzureClusterControlPlanePtrOutput {
	return o
}

func (o AzureClusterControlPlanePtrOutput) Elem() AzureClusterControlPlaneOutput {
	return o.ApplyT(func(v *AzureClusterControlPlane) AzureClusterControlPlane {
		if v != nil {
			return *v
		}
		var ret AzureClusterControlPlane
		return ret
	}).(AzureClusterControlPlaneOutput)
}

// Optional. Configuration related to application-layer secrets encryption.
func (o AzureClusterControlPlanePtrOutput) DatabaseEncryption() AzureClusterControlPlaneDatabaseEncryptionPtrOutput {
	return o.ApplyT(func(v *AzureClusterControlPlane) *AzureClusterControlPlaneDatabaseEncryption {
		if v == nil {
			return nil
		}
		return v.DatabaseEncryption
	}).(AzureClusterControlPlaneDatabaseEncryptionPtrOutput)
}

// Optional. Configuration related to the main volume provisioned for each control plane replica. The main volume is in charge of storing all of the cluster's etcd state. When unspecified, it defaults to a 8-GiB Azure Disk.
func (o AzureClusterControlPlanePtrOutput) MainVolume() AzureClusterControlPlaneMainVolumePtrOutput {
	return o.ApplyT(func(v *AzureClusterControlPlane) *AzureClusterControlPlaneMainVolume {
		if v == nil {
			return nil
		}
		return v.MainVolume
	}).(AzureClusterControlPlaneMainVolumePtrOutput)
}

// Proxy configuration for outbound HTTP(S) traffic.
func (o AzureClusterControlPlanePtrOutput) ProxyConfig() AzureClusterControlPlaneProxyConfigPtrOutput {
	return o.ApplyT(func(v *AzureClusterControlPlane) *AzureClusterControlPlaneProxyConfig {
		if v == nil {
			return nil
		}
		return v.ProxyConfig
	}).(AzureClusterControlPlaneProxyConfigPtrOutput)
}

// Configuration for where to place the control plane replicas. Up to three replica placement instances can be specified. If replicaPlacements is set, the replica placement instances will be applied to the three control plane replicas as evenly as possible.
func (o AzureClusterControlPlanePtrOutput) ReplicaPlacements() AzureClusterControlPlaneReplicaPlacementArrayOutput {
	return o.ApplyT(func(v *AzureClusterControlPlane) []AzureClusterControlPlaneReplicaPlacement {
		if v == nil {
			return nil
		}
		return v.ReplicaPlacements
	}).(AzureClusterControlPlaneReplicaPlacementArrayOutput)
}

// Optional. Configuration related to the root volume provisioned for each control plane replica. When unspecified, it defaults to 32-GiB Azure Disk.
func (o AzureClusterControlPlanePtrOutput) RootVolume() AzureClusterControlPlaneRootVolumePtrOutput {
	return o.ApplyT(func(v *AzureClusterControlPlane) *AzureClusterControlPlaneRootVolume {
		if v == nil {
			return nil
		}
		return v.RootVolume
	}).(AzureClusterControlPlaneRootVolumePtrOutput)
}

// SSH configuration for how to access the underlying control plane machines.
func (o AzureClusterControlPlanePtrOutput) SshConfig() AzureClusterControlPlaneSshConfigPtrOutput {
	return o.ApplyT(func(v *AzureClusterControlPlane) *AzureClusterControlPlaneSshConfig {
		if v == nil {
			return nil
		}
		return &v.SshConfig
	}).(AzureClusterControlPlaneSshConfigPtrOutput)
}

// The ARM ID of the subnet where the control plane VMs are deployed. Example: `/subscriptions//resourceGroups//providers/Microsoft.Network/virtualNetworks//subnets/default`.
func (o AzureClusterControlPlanePtrOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureClusterControlPlane) *string {
		if v == nil {
			return nil
		}
		return &v.SubnetId
	}).(pulumi.StringPtrOutput)
}

// Optional. A set of tags to apply to all underlying control plane Azure resources.
func (o AzureClusterControlPlanePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AzureClusterControlPlane) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// The Kubernetes version to run on control plane replicas (e.g. `1.19.10-gke.1000`). You can list all supported versions on a given Google Cloud region by calling GetAzureServerConfig.
func (o AzureClusterControlPlanePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureClusterControlPlane) *string {
		if v == nil {
			return nil
		}
		return &v.Version
	}).(pulumi.StringPtrOutput)
}

// Optional. The Azure VM size name. Example: `Standard_DS2_v2`. For available VM sizes, see https://docs.microsoft.com/en-us/azure/virtual-machines/vm-naming-conventions. When unspecified, it defaults to `Standard_DS2_v2`.
func (o AzureClusterControlPlanePtrOutput) VmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureClusterControlPlane) *string {
		if v == nil {
			return nil
		}
		return v.VmSize
	}).(pulumi.StringPtrOutput)
}

type AzureClusterControlPlaneDatabaseEncryption struct {
	// The ARM ID of the Azure Key Vault key to encrypt / decrypt data. For example: `/subscriptions/<subscription-id>/resourceGroups/<resource-group-id>/providers/Microsoft.KeyVault/vaults/<key-vault-id>/keys/<key-name>` Encryption will always take the latest version of the key and hence specific version is not supported.
	KeyId string `pulumi:"keyId"`
}

// AzureClusterControlPlaneDatabaseEncryptionInput is an input type that accepts AzureClusterControlPlaneDatabaseEncryptionArgs and AzureClusterControlPlaneDatabaseEncryptionOutput values.
// You can construct a concrete instance of `AzureClusterControlPlaneDatabaseEncryptionInput` via:
//
//	AzureClusterControlPlaneDatabaseEncryptionArgs{...}
type AzureClusterControlPlaneDatabaseEncryptionInput interface {
	pulumi.Input

	ToAzureClusterControlPlaneDatabaseEncryptionOutput() AzureClusterControlPlaneDatabaseEncryptionOutput
	ToAzureClusterControlPlaneDatabaseEncryptionOutputWithContext(context.Context) AzureClusterControlPlaneDatabaseEncryptionOutput
}

type AzureClusterControlPlaneDatabaseEncryptionArgs struct {
	// The ARM ID of the Azure Key Vault key to encrypt / decrypt data. For example: `/subscriptions/<subscription-id>/resourceGroups/<resource-group-id>/providers/Microsoft.KeyVault/vaults/<key-vault-id>/keys/<key-name>` Encryption will always take the latest version of the key and hence specific version is not supported.
	KeyId pulumi.StringInput `pulumi:"keyId"`
}

func (AzureClusterControlPlaneDatabaseEncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureClusterControlPlaneDatabaseEncryption)(nil)).Elem()
}

func (i AzureClusterControlPlaneDatabaseEncryptionArgs) ToAzureClusterControlPlaneDatabaseEncryptionOutput() AzureClusterControlPlaneDatabaseEncryptionOutput {
	return i.ToAzureClusterControlPlaneDatabaseEncryptionOutputWithContext(context.Background())
}

func (i AzureClusterControlPlaneDatabaseEncryptionArgs) ToAzureClusterControlPlaneDatabaseEncryptionOutputWithContext(ctx context.Context) AzureClusterControlPlaneDatabaseEncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureClusterControlPlaneDatabaseEncryptionOutput)
}

func (i AzureClusterControlPlaneDatabaseEncryptionArgs) ToAzureClusterControlPlaneDatabaseEncryptionPtrOutput() AzureClusterControlPlaneDatabaseEncryptionPtrOutput {
	return i.ToAzureClusterControlPlaneDatabaseEncryptionPtrOutputWithContext(context.Background())
}

func (i AzureClusterControlPlaneDatabaseEncryptionArgs) ToAzureClusterControlPlaneDatabaseEncryptionPtrOutputWithContext(ctx context.Context) AzureClusterControlPlaneDatabaseEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureClusterControlPlaneDatabaseEncryptionOutput).ToAzureClusterControlPlaneDatabaseEncryptionPtrOutputWithContext(ctx)
}

// AzureClusterControlPlaneDatabaseEncryptionPtrInput is an input type that accepts AzureClusterControlPlaneDatabaseEncryptionArgs, AzureClusterControlPlaneDatabaseEncryptionPtr and AzureClusterControlPlaneDatabaseEncryptionPtrOutput values.
// You can construct a concrete instance of `AzureClusterControlPlaneDatabaseEncryptionPtrInput` via:
//
//	        AzureClusterControlPlaneDatabaseEncryptionArgs{...}
//
//	or:
//
//	        nil
type AzureClusterControlPlaneDatabaseEncryptionPtrInput interface {
	pulumi.Input

	ToAzureClusterControlPlaneDatabaseEncryptionPtrOutput() AzureClusterControlPlaneDatabaseEncryptionPtrOutput
	ToAzureClusterControlPlaneDatabaseEncryptionPtrOutputWithContext(context.Context) AzureClusterControlPlaneDatabaseEncryptionPtrOutput
}

type azureClusterControlPlaneDatabaseEncryptionPtrType AzureClusterControlPlaneDatabaseEncryptionArgs

func AzureClusterControlPlaneDatabaseEncryptionPtr(v *AzureClusterControlPlaneDatabaseEncryptionArgs) AzureClusterControlPlaneDatabaseEncryptionPtrInput {
	return (*azureClusterControlPlaneDatabaseEncryptionPtrType)(v)
}

func (*azureClusterControlPlaneDatabaseEncryptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureClusterControlPlaneDatabaseEncryption)(nil)).Elem()
}

func (i *azureClusterControlPlaneDatabaseEncryptionPtrType) ToAzureClusterControlPlaneDatabaseEncryptionPtrOutput() AzureClusterControlPlaneDatabaseEncryptionPtrOutput {
	return i.ToAzureClusterControlPlaneDatabaseEncryptionPtrOutputWithContext(context.Background())
}

func (i *azureClusterControlPlaneDatabaseEncryptionPtrType) ToAzureClusterControlPlaneDatabaseEncryptionPtrOutputWithContext(ctx context.Context) AzureClusterControlPlaneDatabaseEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureClusterControlPlaneDatabaseEncryptionPtrOutput)
}

type AzureClusterControlPlaneDatabaseEncryptionOutput struct{ *pulumi.OutputState }

func (AzureClusterControlPlaneDatabaseEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureClusterControlPlaneDatabaseEncryption)(nil)).Elem()
}

func (o AzureClusterControlPlaneDatabaseEncryptionOutput) ToAzureClusterControlPlaneDatabaseEncryptionOutput() AzureClusterControlPlaneDatabaseEncryptionOutput {
	return o
}

func (o AzureClusterControlPlaneDatabaseEncryptionOutput) ToAzureClusterControlPlaneDatabaseEncryptionOutputWithContext(ctx context.Context) AzureClusterControlPlaneDatabaseEncryptionOutput {
	return o
}

func (o AzureClusterControlPlaneDatabaseEncryptionOutput) ToAzureClusterControlPlaneDatabaseEncryptionPtrOutput() AzureClusterControlPlaneDatabaseEncryptionPtrOutput {
	return o.ToAzureClusterControlPlaneDatabaseEncryptionPtrOutputWithContext(context.Background())
}

func (o AzureClusterControlPlaneDatabaseEncryptionOutput) ToAzureClusterControlPlaneDatabaseEncryptionPtrOutputWithContext(ctx context.Context) AzureClusterControlPlaneDatabaseEncryptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureClusterControlPlaneDatabaseEncryption) *AzureClusterControlPlaneDatabaseEncryption {
		return &v
	}).(AzureClusterControlPlaneDatabaseEncryptionPtrOutput)
}

// The ARM ID of the Azure Key Vault key to encrypt / decrypt data. For example: `/subscriptions/<subscription-id>/resourceGroups/<resource-group-id>/providers/Microsoft.KeyVault/vaults/<key-vault-id>/keys/<key-name>` Encryption will always take the latest version of the key and hence specific version is not supported.
func (o AzureClusterControlPlaneDatabaseEncryptionOutput) KeyId() pulumi.StringOutput {
	return o.ApplyT(func(v AzureClusterControlPlaneDatabaseEncryption) string { return v.KeyId }).(pulumi.StringOutput)
}

type AzureClusterControlPlaneDatabaseEncryptionPtrOutput struct{ *pulumi.OutputState }

func (AzureClusterControlPlaneDatabaseEncryptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureClusterControlPlaneDatabaseEncryption)(nil)).Elem()
}

func (o AzureClusterControlPlaneDatabaseEncryptionPtrOutput) ToAzureClusterControlPlaneDatabaseEncryptionPtrOutput() AzureClusterControlPlaneDatabaseEncryptionPtrOutput {
	return o
}

func (o AzureClusterControlPlaneDatabaseEncryptionPtrOutput) ToAzureClusterControlPlaneDatabaseEncryptionPtrOutputWithContext(ctx context.Context) AzureClusterControlPlaneDatabaseEncryptionPtrOutput {
	return o
}

func (o AzureClusterControlPlaneDatabaseEncryptionPtrOutput) Elem() AzureClusterControlPlaneDatabaseEncryptionOutput {
	return o.ApplyT(func(v *AzureClusterControlPlaneDatabaseEncryption) AzureClusterControlPlaneDatabaseEncryption {
		if v != nil {
			return *v
		}
		var ret AzureClusterControlPlaneDatabaseEncryption
		return ret
	}).(AzureClusterControlPlaneDatabaseEncryptionOutput)
}

// The ARM ID of the Azure Key Vault key to encrypt / decrypt data. For example: `/subscriptions/<subscription-id>/resourceGroups/<resource-group-id>/providers/Microsoft.KeyVault/vaults/<key-vault-id>/keys/<key-name>` Encryption will always take the latest version of the key and hence specific version is not supported.
func (o AzureClusterControlPlaneDatabaseEncryptionPtrOutput) KeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureClusterControlPlaneDatabaseEncryption) *string {
		if v == nil {
			return nil
		}
		return &v.KeyId
	}).(pulumi.StringPtrOutput)
}

type AzureClusterControlPlaneMainVolume struct {
	// Optional. The size of the disk, in GiBs. When unspecified, a default value is provided. See the specific reference in the parent resource.
	SizeGib *int `pulumi:"sizeGib"`
}

// AzureClusterControlPlaneMainVolumeInput is an input type that accepts AzureClusterControlPlaneMainVolumeArgs and AzureClusterControlPlaneMainVolumeOutput values.
// You can construct a concrete instance of `AzureClusterControlPlaneMainVolumeInput` via:
//
//	AzureClusterControlPlaneMainVolumeArgs{...}
type AzureClusterControlPlaneMainVolumeInput interface {
	pulumi.Input

	ToAzureClusterControlPlaneMainVolumeOutput() AzureClusterControlPlaneMainVolumeOutput
	ToAzureClusterControlPlaneMainVolumeOutputWithContext(context.Context) AzureClusterControlPlaneMainVolumeOutput
}

type AzureClusterControlPlaneMainVolumeArgs struct {
	// Optional. The size of the disk, in GiBs. When unspecified, a default value is provided. See the specific reference in the parent resource.
	SizeGib pulumi.IntPtrInput `pulumi:"sizeGib"`
}

func (AzureClusterControlPlaneMainVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureClusterControlPlaneMainVolume)(nil)).Elem()
}

func (i AzureClusterControlPlaneMainVolumeArgs) ToAzureClusterControlPlaneMainVolumeOutput() AzureClusterControlPlaneMainVolumeOutput {
	return i.ToAzureClusterControlPlaneMainVolumeOutputWithContext(context.Background())
}

func (i AzureClusterControlPlaneMainVolumeArgs) ToAzureClusterControlPlaneMainVolumeOutputWithContext(ctx context.Context) AzureClusterControlPlaneMainVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureClusterControlPlaneMainVolumeOutput)
}

func (i AzureClusterControlPlaneMainVolumeArgs) ToAzureClusterControlPlaneMainVolumePtrOutput() AzureClusterControlPlaneMainVolumePtrOutput {
	return i.ToAzureClusterControlPlaneMainVolumePtrOutputWithContext(context.Background())
}

func (i AzureClusterControlPlaneMainVolumeArgs) ToAzureClusterControlPlaneMainVolumePtrOutputWithContext(ctx context.Context) AzureClusterControlPlaneMainVolumePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureClusterControlPlaneMainVolumeOutput).ToAzureClusterControlPlaneMainVolumePtrOutputWithContext(ctx)
}

// AzureClusterControlPlaneMainVolumePtrInput is an input type that accepts AzureClusterControlPlaneMainVolumeArgs, AzureClusterControlPlaneMainVolumePtr and AzureClusterControlPlaneMainVolumePtrOutput values.
// You can construct a concrete instance of `AzureClusterControlPlaneMainVolumePtrInput` via:
//
//	        AzureClusterControlPlaneMainVolumeArgs{...}
//
//	or:
//
//	        nil
type AzureClusterControlPlaneMainVolumePtrInput interface {
	pulumi.Input

	ToAzureClusterControlPlaneMainVolumePtrOutput() AzureClusterControlPlaneMainVolumePtrOutput
	ToAzureClusterControlPlaneMainVolumePtrOutputWithContext(context.Context) AzureClusterControlPlaneMainVolumePtrOutput
}

type azureClusterControlPlaneMainVolumePtrType AzureClusterControlPlaneMainVolumeArgs

func AzureClusterControlPlaneMainVolumePtr(v *AzureClusterControlPlaneMainVolumeArgs) AzureClusterControlPlaneMainVolumePtrInput {
	return (*azureClusterControlPlaneMainVolumePtrType)(v)
}

func (*azureClusterControlPlaneMainVolumePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureClusterControlPlaneMainVolume)(nil)).Elem()
}

func (i *azureClusterControlPlaneMainVolumePtrType) ToAzureClusterControlPlaneMainVolumePtrOutput() AzureClusterControlPlaneMainVolumePtrOutput {
	return i.ToAzureClusterControlPlaneMainVolumePtrOutputWithContext(context.Background())
}

func (i *azureClusterControlPlaneMainVolumePtrType) ToAzureClusterControlPlaneMainVolumePtrOutputWithContext(ctx context.Context) AzureClusterControlPlaneMainVolumePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureClusterControlPlaneMainVolumePtrOutput)
}

type AzureClusterControlPlaneMainVolumeOutput struct{ *pulumi.OutputState }

func (AzureClusterControlPlaneMainVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureClusterControlPlaneMainVolume)(nil)).Elem()
}

func (o AzureClusterControlPlaneMainVolumeOutput) ToAzureClusterControlPlaneMainVolumeOutput() AzureClusterControlPlaneMainVolumeOutput {
	return o
}

func (o AzureClusterControlPlaneMainVolumeOutput) ToAzureClusterControlPlaneMainVolumeOutputWithContext(ctx context.Context) AzureClusterControlPlaneMainVolumeOutput {
	return o
}

func (o AzureClusterControlPlaneMainVolumeOutput) ToAzureClusterControlPlaneMainVolumePtrOutput() AzureClusterControlPlaneMainVolumePtrOutput {
	return o.ToAzureClusterControlPlaneMainVolumePtrOutputWithContext(context.Background())
}

func (o AzureClusterControlPlaneMainVolumeOutput) ToAzureClusterControlPlaneMainVolumePtrOutputWithContext(ctx context.Context) AzureClusterControlPlaneMainVolumePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureClusterControlPlaneMainVolume) *AzureClusterControlPlaneMainVolume {
		return &v
	}).(AzureClusterControlPlaneMainVolumePtrOutput)
}

// Optional. The size of the disk, in GiBs. When unspecified, a default value is provided. See the specific reference in the parent resource.
func (o AzureClusterControlPlaneMainVolumeOutput) SizeGib() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureClusterControlPlaneMainVolume) *int { return v.SizeGib }).(pulumi.IntPtrOutput)
}

type AzureClusterControlPlaneMainVolumePtrOutput struct{ *pulumi.OutputState }

func (AzureClusterControlPlaneMainVolumePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureClusterControlPlaneMainVolume)(nil)).Elem()
}

func (o AzureClusterControlPlaneMainVolumePtrOutput) ToAzureClusterControlPlaneMainVolumePtrOutput() AzureClusterControlPlaneMainVolumePtrOutput {
	return o
}

func (o AzureClusterControlPlaneMainVolumePtrOutput) ToAzureClusterControlPlaneMainVolumePtrOutputWithContext(ctx context.Context) AzureClusterControlPlaneMainVolumePtrOutput {
	return o
}

func (o AzureClusterControlPlaneMainVolumePtrOutput) Elem() AzureClusterControlPlaneMainVolumeOutput {
	return o.ApplyT(func(v *AzureClusterControlPlaneMainVolume) AzureClusterControlPlaneMainVolume {
		if v != nil {
			return *v
		}
		var ret AzureClusterControlPlaneMainVolume
		return ret
	}).(AzureClusterControlPlaneMainVolumeOutput)
}

// Optional. The size of the disk, in GiBs. When unspecified, a default value is provided. See the specific reference in the parent resource.
func (o AzureClusterControlPlaneMainVolumePtrOutput) SizeGib() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AzureClusterControlPlaneMainVolume) *int {
		if v == nil {
			return nil
		}
		return v.SizeGib
	}).(pulumi.IntPtrOutput)
}

type AzureClusterControlPlaneProxyConfig struct {
	// The ARM ID the of the resource group containing proxy keyvault. Resource group ids are formatted as `/subscriptions/<subscription-id>/resourceGroups/<resource-group-name>`
	ResourceGroupId string `pulumi:"resourceGroupId"`
	// The URL the of the proxy setting secret with its version. Secret ids are formatted as `https:<key-vault-name>.vault.azure.net/secrets/<secret-name>/<secret-version>`.
	SecretId string `pulumi:"secretId"`
}

// AzureClusterControlPlaneProxyConfigInput is an input type that accepts AzureClusterControlPlaneProxyConfigArgs and AzureClusterControlPlaneProxyConfigOutput values.
// You can construct a concrete instance of `AzureClusterControlPlaneProxyConfigInput` via:
//
//	AzureClusterControlPlaneProxyConfigArgs{...}
type AzureClusterControlPlaneProxyConfigInput interface {
	pulumi.Input

	ToAzureClusterControlPlaneProxyConfigOutput() AzureClusterControlPlaneProxyConfigOutput
	ToAzureClusterControlPlaneProxyConfigOutputWithContext(context.Context) AzureClusterControlPlaneProxyConfigOutput
}

type AzureClusterControlPlaneProxyConfigArgs struct {
	// The ARM ID the of the resource group containing proxy keyvault. Resource group ids are formatted as `/subscriptions/<subscription-id>/resourceGroups/<resource-group-name>`
	ResourceGroupId pulumi.StringInput `pulumi:"resourceGroupId"`
	// The URL the of the proxy setting secret with its version. Secret ids are formatted as `https:<key-vault-name>.vault.azure.net/secrets/<secret-name>/<secret-version>`.
	SecretId pulumi.StringInput `pulumi:"secretId"`
}

func (AzureClusterControlPlaneProxyConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureClusterControlPlaneProxyConfig)(nil)).Elem()
}

func (i AzureClusterControlPlaneProxyConfigArgs) ToAzureClusterControlPlaneProxyConfigOutput() AzureClusterControlPlaneProxyConfigOutput {
	return i.ToAzureClusterControlPlaneProxyConfigOutputWithContext(context.Background())
}

func (i AzureClusterControlPlaneProxyConfigArgs) ToAzureClusterControlPlaneProxyConfigOutputWithContext(ctx context.Context) AzureClusterControlPlaneProxyConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureClusterControlPlaneProxyConfigOutput)
}

func (i AzureClusterControlPlaneProxyConfigArgs) ToAzureClusterControlPlaneProxyConfigPtrOutput() AzureClusterControlPlaneProxyConfigPtrOutput {
	return i.ToAzureClusterControlPlaneProxyConfigPtrOutputWithContext(context.Background())
}

func (i AzureClusterControlPlaneProxyConfigArgs) ToAzureClusterControlPlaneProxyConfigPtrOutputWithContext(ctx context.Context) AzureClusterControlPlaneProxyConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureClusterControlPlaneProxyConfigOutput).ToAzureClusterControlPlaneProxyConfigPtrOutputWithContext(ctx)
}

// AzureClusterControlPlaneProxyConfigPtrInput is an input type that accepts AzureClusterControlPlaneProxyConfigArgs, AzureClusterControlPlaneProxyConfigPtr and AzureClusterControlPlaneProxyConfigPtrOutput values.
// You can construct a concrete instance of `AzureClusterControlPlaneProxyConfigPtrInput` via:
//
//	        AzureClusterControlPlaneProxyConfigArgs{...}
//
//	or:
//
//	        nil
type AzureClusterControlPlaneProxyConfigPtrInput interface {
	pulumi.Input

	ToAzureClusterControlPlaneProxyConfigPtrOutput() AzureClusterControlPlaneProxyConfigPtrOutput
	ToAzureClusterControlPlaneProxyConfigPtrOutputWithContext(context.Context) AzureClusterControlPlaneProxyConfigPtrOutput
}

type azureClusterControlPlaneProxyConfigPtrType AzureClusterControlPlaneProxyConfigArgs

func AzureClusterControlPlaneProxyConfigPtr(v *AzureClusterControlPlaneProxyConfigArgs) AzureClusterControlPlaneProxyConfigPtrInput {
	return (*azureClusterControlPlaneProxyConfigPtrType)(v)
}

func (*azureClusterControlPlaneProxyConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureClusterControlPlaneProxyConfig)(nil)).Elem()
}

func (i *azureClusterControlPlaneProxyConfigPtrType) ToAzureClusterControlPlaneProxyConfigPtrOutput() AzureClusterControlPlaneProxyConfigPtrOutput {
	return i.ToAzureClusterControlPlaneProxyConfigPtrOutputWithContext(context.Background())
}

func (i *azureClusterControlPlaneProxyConfigPtrType) ToAzureClusterControlPlaneProxyConfigPtrOutputWithContext(ctx context.Context) AzureClusterControlPlaneProxyConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureClusterControlPlaneProxyConfigPtrOutput)
}

type AzureClusterControlPlaneProxyConfigOutput struct{ *pulumi.OutputState }

func (AzureClusterControlPlaneProxyConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureClusterControlPlaneProxyConfig)(nil)).Elem()
}

func (o AzureClusterControlPlaneProxyConfigOutput) ToAzureClusterControlPlaneProxyConfigOutput() AzureClusterControlPlaneProxyConfigOutput {
	return o
}

func (o AzureClusterControlPlaneProxyConfigOutput) ToAzureClusterControlPlaneProxyConfigOutputWithContext(ctx context.Context) AzureClusterControlPlaneProxyConfigOutput {
	return o
}

func (o AzureClusterControlPlaneProxyConfigOutput) ToAzureClusterControlPlaneProxyConfigPtrOutput() AzureClusterControlPlaneProxyConfigPtrOutput {
	return o.ToAzureClusterControlPlaneProxyConfigPtrOutputWithContext(context.Background())
}

func (o AzureClusterControlPlaneProxyConfigOutput) ToAzureClusterControlPlaneProxyConfigPtrOutputWithContext(ctx context.Context) AzureClusterControlPlaneProxyConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureClusterControlPlaneProxyConfig) *AzureClusterControlPlaneProxyConfig {
		return &v
	}).(AzureClusterControlPlaneProxyConfigPtrOutput)
}

// The ARM ID the of the resource group containing proxy keyvault. Resource group ids are formatted as `/subscriptions/<subscription-id>/resourceGroups/<resource-group-name>`
func (o AzureClusterControlPlaneProxyConfigOutput) ResourceGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v AzureClusterControlPlaneProxyConfig) string { return v.ResourceGroupId }).(pulumi.StringOutput)
}

// The URL the of the proxy setting secret with its version. Secret ids are formatted as `https:<key-vault-name>.vault.azure.net/secrets/<secret-name>/<secret-version>`.
func (o AzureClusterControlPlaneProxyConfigOutput) SecretId() pulumi.StringOutput {
	return o.ApplyT(func(v AzureClusterControlPlaneProxyConfig) string { return v.SecretId }).(pulumi.StringOutput)
}

type AzureClusterControlPlaneProxyConfigPtrOutput struct{ *pulumi.OutputState }

func (AzureClusterControlPlaneProxyConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureClusterControlPlaneProxyConfig)(nil)).Elem()
}

func (o AzureClusterControlPlaneProxyConfigPtrOutput) ToAzureClusterControlPlaneProxyConfigPtrOutput() AzureClusterControlPlaneProxyConfigPtrOutput {
	return o
}

func (o AzureClusterControlPlaneProxyConfigPtrOutput) ToAzureClusterControlPlaneProxyConfigPtrOutputWithContext(ctx context.Context) AzureClusterControlPlaneProxyConfigPtrOutput {
	return o
}

func (o AzureClusterControlPlaneProxyConfigPtrOutput) Elem() AzureClusterControlPlaneProxyConfigOutput {
	return o.ApplyT(func(v *AzureClusterControlPlaneProxyConfig) AzureClusterControlPlaneProxyConfig {
		if v != nil {
			return *v
		}
		var ret AzureClusterControlPlaneProxyConfig
		return ret
	}).(AzureClusterControlPlaneProxyConfigOutput)
}

// The ARM ID the of the resource group containing proxy keyvault. Resource group ids are formatted as `/subscriptions/<subscription-id>/resourceGroups/<resource-group-name>`
func (o AzureClusterControlPlaneProxyConfigPtrOutput) ResourceGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureClusterControlPlaneProxyConfig) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceGroupId
	}).(pulumi.StringPtrOutput)
}

// The URL the of the proxy setting secret with its version. Secret ids are formatted as `https:<key-vault-name>.vault.azure.net/secrets/<secret-name>/<secret-version>`.
func (o AzureClusterControlPlaneProxyConfigPtrOutput) SecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureClusterControlPlaneProxyConfig) *string {
		if v == nil {
			return nil
		}
		return &v.SecretId
	}).(pulumi.StringPtrOutput)
}

type AzureClusterControlPlaneReplicaPlacement struct {
	// For a given replica, the Azure availability zone where to provision the control plane VM and the ETCD disk.
	AzureAvailabilityZone string `pulumi:"azureAvailabilityZone"`
	// For a given replica, the ARM ID of the subnet where the control plane VM is deployed. Make sure it's a subnet under the virtual network in the cluster configuration.
	SubnetId string `pulumi:"subnetId"`
}

// AzureClusterControlPlaneReplicaPlacementInput is an input type that accepts AzureClusterControlPlaneReplicaPlacementArgs and AzureClusterControlPlaneReplicaPlacementOutput values.
// You can construct a concrete instance of `AzureClusterControlPlaneReplicaPlacementInput` via:
//
//	AzureClusterControlPlaneReplicaPlacementArgs{...}
type AzureClusterControlPlaneReplicaPlacementInput interface {
	pulumi.Input

	ToAzureClusterControlPlaneReplicaPlacementOutput() AzureClusterControlPlaneReplicaPlacementOutput
	ToAzureClusterControlPlaneReplicaPlacementOutputWithContext(context.Context) AzureClusterControlPlaneReplicaPlacementOutput
}

type AzureClusterControlPlaneReplicaPlacementArgs struct {
	// For a given replica, the Azure availability zone where to provision the control plane VM and the ETCD disk.
	AzureAvailabilityZone pulumi.StringInput `pulumi:"azureAvailabilityZone"`
	// For a given replica, the ARM ID of the subnet where the control plane VM is deployed. Make sure it's a subnet under the virtual network in the cluster configuration.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
}

func (AzureClusterControlPlaneReplicaPlacementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureClusterControlPlaneReplicaPlacement)(nil)).Elem()
}

func (i AzureClusterControlPlaneReplicaPlacementArgs) ToAzureClusterControlPlaneReplicaPlacementOutput() AzureClusterControlPlaneReplicaPlacementOutput {
	return i.ToAzureClusterControlPlaneReplicaPlacementOutputWithContext(context.Background())
}

func (i AzureClusterControlPlaneReplicaPlacementArgs) ToAzureClusterControlPlaneReplicaPlacementOutputWithContext(ctx context.Context) AzureClusterControlPlaneReplicaPlacementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureClusterControlPlaneReplicaPlacementOutput)
}

// AzureClusterControlPlaneReplicaPlacementArrayInput is an input type that accepts AzureClusterControlPlaneReplicaPlacementArray and AzureClusterControlPlaneReplicaPlacementArrayOutput values.
// You can construct a concrete instance of `AzureClusterControlPlaneReplicaPlacementArrayInput` via:
//
//	AzureClusterControlPlaneReplicaPlacementArray{ AzureClusterControlPlaneReplicaPlacementArgs{...} }
type AzureClusterControlPlaneReplicaPlacementArrayInput interface {
	pulumi.Input

	ToAzureClusterControlPlaneReplicaPlacementArrayOutput() AzureClusterControlPlaneReplicaPlacementArrayOutput
	ToAzureClusterControlPlaneReplicaPlacementArrayOutputWithContext(context.Context) AzureClusterControlPlaneReplicaPlacementArrayOutput
}

type AzureClusterControlPlaneReplicaPlacementArray []AzureClusterControlPlaneReplicaPlacementInput

func (AzureClusterControlPlaneReplicaPlacementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureClusterControlPlaneReplicaPlacement)(nil)).Elem()
}

func (i AzureClusterControlPlaneReplicaPlacementArray) ToAzureClusterControlPlaneReplicaPlacementArrayOutput() AzureClusterControlPlaneReplicaPlacementArrayOutput {
	return i.ToAzureClusterControlPlaneReplicaPlacementArrayOutputWithContext(context.Background())
}

func (i AzureClusterControlPlaneReplicaPlacementArray) ToAzureClusterControlPlaneReplicaPlacementArrayOutputWithContext(ctx context.Context) AzureClusterControlPlaneReplicaPlacementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureClusterControlPlaneReplicaPlacementArrayOutput)
}

type AzureClusterControlPlaneReplicaPlacementOutput struct{ *pulumi.OutputState }

func (AzureClusterControlPlaneReplicaPlacementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureClusterControlPlaneReplicaPlacement)(nil)).Elem()
}

func (o AzureClusterControlPlaneReplicaPlacementOutput) ToAzureClusterControlPlaneReplicaPlacementOutput() AzureClusterControlPlaneReplicaPlacementOutput {
	return o
}

func (o AzureClusterControlPlaneReplicaPlacementOutput) ToAzureClusterControlPlaneReplicaPlacementOutputWithContext(ctx context.Context) AzureClusterControlPlaneReplicaPlacementOutput {
	return o
}

// For a given replica, the Azure availability zone where to provision the control plane VM and the ETCD disk.
func (o AzureClusterControlPlaneReplicaPlacementOutput) AzureAvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v AzureClusterControlPlaneReplicaPlacement) string { return v.AzureAvailabilityZone }).(pulumi.StringOutput)
}

// For a given replica, the ARM ID of the subnet where the control plane VM is deployed. Make sure it's a subnet under the virtual network in the cluster configuration.
func (o AzureClusterControlPlaneReplicaPlacementOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v AzureClusterControlPlaneReplicaPlacement) string { return v.SubnetId }).(pulumi.StringOutput)
}

type AzureClusterControlPlaneReplicaPlacementArrayOutput struct{ *pulumi.OutputState }

func (AzureClusterControlPlaneReplicaPlacementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureClusterControlPlaneReplicaPlacement)(nil)).Elem()
}

func (o AzureClusterControlPlaneReplicaPlacementArrayOutput) ToAzureClusterControlPlaneReplicaPlacementArrayOutput() AzureClusterControlPlaneReplicaPlacementArrayOutput {
	return o
}

func (o AzureClusterControlPlaneReplicaPlacementArrayOutput) ToAzureClusterControlPlaneReplicaPlacementArrayOutputWithContext(ctx context.Context) AzureClusterControlPlaneReplicaPlacementArrayOutput {
	return o
}

func (o AzureClusterControlPlaneReplicaPlacementArrayOutput) Index(i pulumi.IntInput) AzureClusterControlPlaneReplicaPlacementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureClusterControlPlaneReplicaPlacement {
		return vs[0].([]AzureClusterControlPlaneReplicaPlacement)[vs[1].(int)]
	}).(AzureClusterControlPlaneReplicaPlacementOutput)
}

type AzureClusterControlPlaneRootVolume struct {
	// Optional. The size of the disk, in GiBs. When unspecified, a default value is provided. See the specific reference in the parent resource.
	SizeGib *int `pulumi:"sizeGib"`
}

// AzureClusterControlPlaneRootVolumeInput is an input type that accepts AzureClusterControlPlaneRootVolumeArgs and AzureClusterControlPlaneRootVolumeOutput values.
// You can construct a concrete instance of `AzureClusterControlPlaneRootVolumeInput` via:
//
//	AzureClusterControlPlaneRootVolumeArgs{...}
type AzureClusterControlPlaneRootVolumeInput interface {
	pulumi.Input

	ToAzureClusterControlPlaneRootVolumeOutput() AzureClusterControlPlaneRootVolumeOutput
	ToAzureClusterControlPlaneRootVolumeOutputWithContext(context.Context) AzureClusterControlPlaneRootVolumeOutput
}

type AzureClusterControlPlaneRootVolumeArgs struct {
	// Optional. The size of the disk, in GiBs. When unspecified, a default value is provided. See the specific reference in the parent resource.
	SizeGib pulumi.IntPtrInput `pulumi:"sizeGib"`
}

func (AzureClusterControlPlaneRootVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureClusterControlPlaneRootVolume)(nil)).Elem()
}

func (i AzureClusterControlPlaneRootVolumeArgs) ToAzureClusterControlPlaneRootVolumeOutput() AzureClusterControlPlaneRootVolumeOutput {
	return i.ToAzureClusterControlPlaneRootVolumeOutputWithContext(context.Background())
}

func (i AzureClusterControlPlaneRootVolumeArgs) ToAzureClusterControlPlaneRootVolumeOutputWithContext(ctx context.Context) AzureClusterControlPlaneRootVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureClusterControlPlaneRootVolumeOutput)
}

func (i AzureClusterControlPlaneRootVolumeArgs) ToAzureClusterControlPlaneRootVolumePtrOutput() AzureClusterControlPlaneRootVolumePtrOutput {
	return i.ToAzureClusterControlPlaneRootVolumePtrOutputWithContext(context.Background())
}

func (i AzureClusterControlPlaneRootVolumeArgs) ToAzureClusterControlPlaneRootVolumePtrOutputWithContext(ctx context.Context) AzureClusterControlPlaneRootVolumePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureClusterControlPlaneRootVolumeOutput).ToAzureClusterControlPlaneRootVolumePtrOutputWithContext(ctx)
}

// AzureClusterControlPlaneRootVolumePtrInput is an input type that accepts AzureClusterControlPlaneRootVolumeArgs, AzureClusterControlPlaneRootVolumePtr and AzureClusterControlPlaneRootVolumePtrOutput values.
// You can construct a concrete instance of `AzureClusterControlPlaneRootVolumePtrInput` via:
//
//	        AzureClusterControlPlaneRootVolumeArgs{...}
//
//	or:
//
//	        nil
type AzureClusterControlPlaneRootVolumePtrInput interface {
	pulumi.Input

	ToAzureClusterControlPlaneRootVolumePtrOutput() AzureClusterControlPlaneRootVolumePtrOutput
	ToAzureClusterControlPlaneRootVolumePtrOutputWithContext(context.Context) AzureClusterControlPlaneRootVolumePtrOutput
}

type azureClusterControlPlaneRootVolumePtrType AzureClusterControlPlaneRootVolumeArgs

func AzureClusterControlPlaneRootVolumePtr(v *AzureClusterControlPlaneRootVolumeArgs) AzureClusterControlPlaneRootVolumePtrInput {
	return (*azureClusterControlPlaneRootVolumePtrType)(v)
}

func (*azureClusterControlPlaneRootVolumePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureClusterControlPlaneRootVolume)(nil)).Elem()
}

func (i *azureClusterControlPlaneRootVolumePtrType) ToAzureClusterControlPlaneRootVolumePtrOutput() AzureClusterControlPlaneRootVolumePtrOutput {
	return i.ToAzureClusterControlPlaneRootVolumePtrOutputWithContext(context.Background())
}

func (i *azureClusterControlPlaneRootVolumePtrType) ToAzureClusterControlPlaneRootVolumePtrOutputWithContext(ctx context.Context) AzureClusterControlPlaneRootVolumePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureClusterControlPlaneRootVolumePtrOutput)
}

type AzureClusterControlPlaneRootVolumeOutput struct{ *pulumi.OutputState }

func (AzureClusterControlPlaneRootVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureClusterControlPlaneRootVolume)(nil)).Elem()
}

func (o AzureClusterControlPlaneRootVolumeOutput) ToAzureClusterControlPlaneRootVolumeOutput() AzureClusterControlPlaneRootVolumeOutput {
	return o
}

func (o AzureClusterControlPlaneRootVolumeOutput) ToAzureClusterControlPlaneRootVolumeOutputWithContext(ctx context.Context) AzureClusterControlPlaneRootVolumeOutput {
	return o
}

func (o AzureClusterControlPlaneRootVolumeOutput) ToAzureClusterControlPlaneRootVolumePtrOutput() AzureClusterControlPlaneRootVolumePtrOutput {
	return o.ToAzureClusterControlPlaneRootVolumePtrOutputWithContext(context.Background())
}

func (o AzureClusterControlPlaneRootVolumeOutput) ToAzureClusterControlPlaneRootVolumePtrOutputWithContext(ctx context.Context) AzureClusterControlPlaneRootVolumePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureClusterControlPlaneRootVolume) *AzureClusterControlPlaneRootVolume {
		return &v
	}).(AzureClusterControlPlaneRootVolumePtrOutput)
}

// Optional. The size of the disk, in GiBs. When unspecified, a default value is provided. See the specific reference in the parent resource.
func (o AzureClusterControlPlaneRootVolumeOutput) SizeGib() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureClusterControlPlaneRootVolume) *int { return v.SizeGib }).(pulumi.IntPtrOutput)
}

type AzureClusterControlPlaneRootVolumePtrOutput struct{ *pulumi.OutputState }

func (AzureClusterControlPlaneRootVolumePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureClusterControlPlaneRootVolume)(nil)).Elem()
}

func (o AzureClusterControlPlaneRootVolumePtrOutput) ToAzureClusterControlPlaneRootVolumePtrOutput() AzureClusterControlPlaneRootVolumePtrOutput {
	return o
}

func (o AzureClusterControlPlaneRootVolumePtrOutput) ToAzureClusterControlPlaneRootVolumePtrOutputWithContext(ctx context.Context) AzureClusterControlPlaneRootVolumePtrOutput {
	return o
}

func (o AzureClusterControlPlaneRootVolumePtrOutput) Elem() AzureClusterControlPlaneRootVolumeOutput {
	return o.ApplyT(func(v *AzureClusterControlPlaneRootVolume) AzureClusterControlPlaneRootVolume {
		if v != nil {
			return *v
		}
		var ret AzureClusterControlPlaneRootVolume
		return ret
	}).(AzureClusterControlPlaneRootVolumeOutput)
}

// Optional. The size of the disk, in GiBs. When unspecified, a default value is provided. See the specific reference in the parent resource.
func (o AzureClusterControlPlaneRootVolumePtrOutput) SizeGib() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AzureClusterControlPlaneRootVolume) *int {
		if v == nil {
			return nil
		}
		return v.SizeGib
	}).(pulumi.IntPtrOutput)
}

type AzureClusterControlPlaneSshConfig struct {
	// The SSH public key data for VMs managed by Anthos. This accepts the authorizedKeys file format used in OpenSSH according to the sshd(8) manual page.
	AuthorizedKey string `pulumi:"authorizedKey"`
}

// AzureClusterControlPlaneSshConfigInput is an input type that accepts AzureClusterControlPlaneSshConfigArgs and AzureClusterControlPlaneSshConfigOutput values.
// You can construct a concrete instance of `AzureClusterControlPlaneSshConfigInput` via:
//
//	AzureClusterControlPlaneSshConfigArgs{...}
type AzureClusterControlPlaneSshConfigInput interface {
	pulumi.Input

	ToAzureClusterControlPlaneSshConfigOutput() AzureClusterControlPlaneSshConfigOutput
	ToAzureClusterControlPlaneSshConfigOutputWithContext(context.Context) AzureClusterControlPlaneSshConfigOutput
}

type AzureClusterControlPlaneSshConfigArgs struct {
	// The SSH public key data for VMs managed by Anthos. This accepts the authorizedKeys file format used in OpenSSH according to the sshd(8) manual page.
	AuthorizedKey pulumi.StringInput `pulumi:"authorizedKey"`
}

func (AzureClusterControlPlaneSshConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureClusterControlPlaneSshConfig)(nil)).Elem()
}

func (i AzureClusterControlPlaneSshConfigArgs) ToAzureClusterControlPlaneSshConfigOutput() AzureClusterControlPlaneSshConfigOutput {
	return i.ToAzureClusterControlPlaneSshConfigOutputWithContext(context.Background())
}

func (i AzureClusterControlPlaneSshConfigArgs) ToAzureClusterControlPlaneSshConfigOutputWithContext(ctx context.Context) AzureClusterControlPlaneSshConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureClusterControlPlaneSshConfigOutput)
}

func (i AzureClusterControlPlaneSshConfigArgs) ToAzureClusterControlPlaneSshConfigPtrOutput() AzureClusterControlPlaneSshConfigPtrOutput {
	return i.ToAzureClusterControlPlaneSshConfigPtrOutputWithContext(context.Background())
}

func (i AzureClusterControlPlaneSshConfigArgs) ToAzureClusterControlPlaneSshConfigPtrOutputWithContext(ctx context.Context) AzureClusterControlPlaneSshConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureClusterControlPlaneSshConfigOutput).ToAzureClusterControlPlaneSshConfigPtrOutputWithContext(ctx)
}

// AzureClusterControlPlaneSshConfigPtrInput is an input type that accepts AzureClusterControlPlaneSshConfigArgs, AzureClusterControlPlaneSshConfigPtr and AzureClusterControlPlaneSshConfigPtrOutput values.
// You can construct a concrete instance of `AzureClusterControlPlaneSshConfigPtrInput` via:
//
//	        AzureClusterControlPlaneSshConfigArgs{...}
//
//	or:
//
//	        nil
type AzureClusterControlPlaneSshConfigPtrInput interface {
	pulumi.Input

	ToAzureClusterControlPlaneSshConfigPtrOutput() AzureClusterControlPlaneSshConfigPtrOutput
	ToAzureClusterControlPlaneSshConfigPtrOutputWithContext(context.Context) AzureClusterControlPlaneSshConfigPtrOutput
}

type azureClusterControlPlaneSshConfigPtrType AzureClusterControlPlaneSshConfigArgs

func AzureClusterControlPlaneSshConfigPtr(v *AzureClusterControlPlaneSshConfigArgs) AzureClusterControlPlaneSshConfigPtrInput {
	return (*azureClusterControlPlaneSshConfigPtrType)(v)
}

func (*azureClusterControlPlaneSshConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureClusterControlPlaneSshConfig)(nil)).Elem()
}

func (i *azureClusterControlPlaneSshConfigPtrType) ToAzureClusterControlPlaneSshConfigPtrOutput() AzureClusterControlPlaneSshConfigPtrOutput {
	return i.ToAzureClusterControlPlaneSshConfigPtrOutputWithContext(context.Background())
}

func (i *azureClusterControlPlaneSshConfigPtrType) ToAzureClusterControlPlaneSshConfigPtrOutputWithContext(ctx context.Context) AzureClusterControlPlaneSshConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureClusterControlPlaneSshConfigPtrOutput)
}

type AzureClusterControlPlaneSshConfigOutput struct{ *pulumi.OutputState }

func (AzureClusterControlPlaneSshConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureClusterControlPlaneSshConfig)(nil)).Elem()
}

func (o AzureClusterControlPlaneSshConfigOutput) ToAzureClusterControlPlaneSshConfigOutput() AzureClusterControlPlaneSshConfigOutput {
	return o
}

func (o AzureClusterControlPlaneSshConfigOutput) ToAzureClusterControlPlaneSshConfigOutputWithContext(ctx context.Context) AzureClusterControlPlaneSshConfigOutput {
	return o
}

func (o AzureClusterControlPlaneSshConfigOutput) ToAzureClusterControlPlaneSshConfigPtrOutput() AzureClusterControlPlaneSshConfigPtrOutput {
	return o.ToAzureClusterControlPlaneSshConfigPtrOutputWithContext(context.Background())
}

func (o AzureClusterControlPlaneSshConfigOutput) ToAzureClusterControlPlaneSshConfigPtrOutputWithContext(ctx context.Context) AzureClusterControlPlaneSshConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureClusterControlPlaneSshConfig) *AzureClusterControlPlaneSshConfig {
		return &v
	}).(AzureClusterControlPlaneSshConfigPtrOutput)
}

// The SSH public key data for VMs managed by Anthos. This accepts the authorizedKeys file format used in OpenSSH according to the sshd(8) manual page.
func (o AzureClusterControlPlaneSshConfigOutput) AuthorizedKey() pulumi.StringOutput {
	return o.ApplyT(func(v AzureClusterControlPlaneSshConfig) string { return v.AuthorizedKey }).(pulumi.StringOutput)
}

type AzureClusterControlPlaneSshConfigPtrOutput struct{ *pulumi.OutputState }

func (AzureClusterControlPlaneSshConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureClusterControlPlaneSshConfig)(nil)).Elem()
}

func (o AzureClusterControlPlaneSshConfigPtrOutput) ToAzureClusterControlPlaneSshConfigPtrOutput() AzureClusterControlPlaneSshConfigPtrOutput {
	return o
}

func (o AzureClusterControlPlaneSshConfigPtrOutput) ToAzureClusterControlPlaneSshConfigPtrOutputWithContext(ctx context.Context) AzureClusterControlPlaneSshConfigPtrOutput {
	return o
}

func (o AzureClusterControlPlaneSshConfigPtrOutput) Elem() AzureClusterControlPlaneSshConfigOutput {
	return o.ApplyT(func(v *AzureClusterControlPlaneSshConfig) AzureClusterControlPlaneSshConfig {
		if v != nil {
			return *v
		}
		var ret AzureClusterControlPlaneSshConfig
		return ret
	}).(AzureClusterControlPlaneSshConfigOutput)
}

// The SSH public key data for VMs managed by Anthos. This accepts the authorizedKeys file format used in OpenSSH according to the sshd(8) manual page.
func (o AzureClusterControlPlaneSshConfigPtrOutput) AuthorizedKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureClusterControlPlaneSshConfig) *string {
		if v == nil {
			return nil
		}
		return &v.AuthorizedKey
	}).(pulumi.StringPtrOutput)
}

type AzureClusterFleet struct {
	// The name of the managed Hub Membership resource associated to this cluster. Membership names are formatted as projects/<project-number>/locations/global/membership/<cluster-id>.
	Membership *string `pulumi:"membership"`
	// The number of the Fleet host project where this cluster will be registered.
	Project *string `pulumi:"project"`
}

// AzureClusterFleetInput is an input type that accepts AzureClusterFleetArgs and AzureClusterFleetOutput values.
// You can construct a concrete instance of `AzureClusterFleetInput` via:
//
//	AzureClusterFleetArgs{...}
type AzureClusterFleetInput interface {
	pulumi.Input

	ToAzureClusterFleetOutput() AzureClusterFleetOutput
	ToAzureClusterFleetOutputWithContext(context.Context) AzureClusterFleetOutput
}

type AzureClusterFleetArgs struct {
	// The name of the managed Hub Membership resource associated to this cluster. Membership names are formatted as projects/<project-number>/locations/global/membership/<cluster-id>.
	Membership pulumi.StringPtrInput `pulumi:"membership"`
	// The number of the Fleet host project where this cluster will be registered.
	Project pulumi.StringPtrInput `pulumi:"project"`
}

func (AzureClusterFleetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureClusterFleet)(nil)).Elem()
}

func (i AzureClusterFleetArgs) ToAzureClusterFleetOutput() AzureClusterFleetOutput {
	return i.ToAzureClusterFleetOutputWithContext(context.Background())
}

func (i AzureClusterFleetArgs) ToAzureClusterFleetOutputWithContext(ctx context.Context) AzureClusterFleetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureClusterFleetOutput)
}

func (i AzureClusterFleetArgs) ToAzureClusterFleetPtrOutput() AzureClusterFleetPtrOutput {
	return i.ToAzureClusterFleetPtrOutputWithContext(context.Background())
}

func (i AzureClusterFleetArgs) ToAzureClusterFleetPtrOutputWithContext(ctx context.Context) AzureClusterFleetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureClusterFleetOutput).ToAzureClusterFleetPtrOutputWithContext(ctx)
}

// AzureClusterFleetPtrInput is an input type that accepts AzureClusterFleetArgs, AzureClusterFleetPtr and AzureClusterFleetPtrOutput values.
// You can construct a concrete instance of `AzureClusterFleetPtrInput` via:
//
//	        AzureClusterFleetArgs{...}
//
//	or:
//
//	        nil
type AzureClusterFleetPtrInput interface {
	pulumi.Input

	ToAzureClusterFleetPtrOutput() AzureClusterFleetPtrOutput
	ToAzureClusterFleetPtrOutputWithContext(context.Context) AzureClusterFleetPtrOutput
}

type azureClusterFleetPtrType AzureClusterFleetArgs

func AzureClusterFleetPtr(v *AzureClusterFleetArgs) AzureClusterFleetPtrInput {
	return (*azureClusterFleetPtrType)(v)
}

func (*azureClusterFleetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureClusterFleet)(nil)).Elem()
}

func (i *azureClusterFleetPtrType) ToAzureClusterFleetPtrOutput() AzureClusterFleetPtrOutput {
	return i.ToAzureClusterFleetPtrOutputWithContext(context.Background())
}

func (i *azureClusterFleetPtrType) ToAzureClusterFleetPtrOutputWithContext(ctx context.Context) AzureClusterFleetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureClusterFleetPtrOutput)
}

type AzureClusterFleetOutput struct{ *pulumi.OutputState }

func (AzureClusterFleetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureClusterFleet)(nil)).Elem()
}

func (o AzureClusterFleetOutput) ToAzureClusterFleetOutput() AzureClusterFleetOutput {
	return o
}

func (o AzureClusterFleetOutput) ToAzureClusterFleetOutputWithContext(ctx context.Context) AzureClusterFleetOutput {
	return o
}

func (o AzureClusterFleetOutput) ToAzureClusterFleetPtrOutput() AzureClusterFleetPtrOutput {
	return o.ToAzureClusterFleetPtrOutputWithContext(context.Background())
}

func (o AzureClusterFleetOutput) ToAzureClusterFleetPtrOutputWithContext(ctx context.Context) AzureClusterFleetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureClusterFleet) *AzureClusterFleet {
		return &v
	}).(AzureClusterFleetPtrOutput)
}

// The name of the managed Hub Membership resource associated to this cluster. Membership names are formatted as projects/<project-number>/locations/global/membership/<cluster-id>.
func (o AzureClusterFleetOutput) Membership() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureClusterFleet) *string { return v.Membership }).(pulumi.StringPtrOutput)
}

// The number of the Fleet host project where this cluster will be registered.
func (o AzureClusterFleetOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureClusterFleet) *string { return v.Project }).(pulumi.StringPtrOutput)
}

type AzureClusterFleetPtrOutput struct{ *pulumi.OutputState }

func (AzureClusterFleetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureClusterFleet)(nil)).Elem()
}

func (o AzureClusterFleetPtrOutput) ToAzureClusterFleetPtrOutput() AzureClusterFleetPtrOutput {
	return o
}

func (o AzureClusterFleetPtrOutput) ToAzureClusterFleetPtrOutputWithContext(ctx context.Context) AzureClusterFleetPtrOutput {
	return o
}

func (o AzureClusterFleetPtrOutput) Elem() AzureClusterFleetOutput {
	return o.ApplyT(func(v *AzureClusterFleet) AzureClusterFleet {
		if v != nil {
			return *v
		}
		var ret AzureClusterFleet
		return ret
	}).(AzureClusterFleetOutput)
}

// The name of the managed Hub Membership resource associated to this cluster. Membership names are formatted as projects/<project-number>/locations/global/membership/<cluster-id>.
func (o AzureClusterFleetPtrOutput) Membership() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureClusterFleet) *string {
		if v == nil {
			return nil
		}
		return v.Membership
	}).(pulumi.StringPtrOutput)
}

// The number of the Fleet host project where this cluster will be registered.
func (o AzureClusterFleetPtrOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureClusterFleet) *string {
		if v == nil {
			return nil
		}
		return v.Project
	}).(pulumi.StringPtrOutput)
}

type AzureClusterLoggingConfig struct {
	// Configuration of the logging components.
	ComponentConfig *AzureClusterLoggingConfigComponentConfig `pulumi:"componentConfig"`
}

// AzureClusterLoggingConfigInput is an input type that accepts AzureClusterLoggingConfigArgs and AzureClusterLoggingConfigOutput values.
// You can construct a concrete instance of `AzureClusterLoggingConfigInput` via:
//
//	AzureClusterLoggingConfigArgs{...}
type AzureClusterLoggingConfigInput interface {
	pulumi.Input

	ToAzureClusterLoggingConfigOutput() AzureClusterLoggingConfigOutput
	ToAzureClusterLoggingConfigOutputWithContext(context.Context) AzureClusterLoggingConfigOutput
}

type AzureClusterLoggingConfigArgs struct {
	// Configuration of the logging components.
	ComponentConfig AzureClusterLoggingConfigComponentConfigPtrInput `pulumi:"componentConfig"`
}

func (AzureClusterLoggingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureClusterLoggingConfig)(nil)).Elem()
}

func (i AzureClusterLoggingConfigArgs) ToAzureClusterLoggingConfigOutput() AzureClusterLoggingConfigOutput {
	return i.ToAzureClusterLoggingConfigOutputWithContext(context.Background())
}

func (i AzureClusterLoggingConfigArgs) ToAzureClusterLoggingConfigOutputWithContext(ctx context.Context) AzureClusterLoggingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureClusterLoggingConfigOutput)
}

func (i AzureClusterLoggingConfigArgs) ToAzureClusterLoggingConfigPtrOutput() AzureClusterLoggingConfigPtrOutput {
	return i.ToAzureClusterLoggingConfigPtrOutputWithContext(context.Background())
}

func (i AzureClusterLoggingConfigArgs) ToAzureClusterLoggingConfigPtrOutputWithContext(ctx context.Context) AzureClusterLoggingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureClusterLoggingConfigOutput).ToAzureClusterLoggingConfigPtrOutputWithContext(ctx)
}

// AzureClusterLoggingConfigPtrInput is an input type that accepts AzureClusterLoggingConfigArgs, AzureClusterLoggingConfigPtr and AzureClusterLoggingConfigPtrOutput values.
// You can construct a concrete instance of `AzureClusterLoggingConfigPtrInput` via:
//
//	        AzureClusterLoggingConfigArgs{...}
//
//	or:
//
//	        nil
type AzureClusterLoggingConfigPtrInput interface {
	pulumi.Input

	ToAzureClusterLoggingConfigPtrOutput() AzureClusterLoggingConfigPtrOutput
	ToAzureClusterLoggingConfigPtrOutputWithContext(context.Context) AzureClusterLoggingConfigPtrOutput
}

type azureClusterLoggingConfigPtrType AzureClusterLoggingConfigArgs

func AzureClusterLoggingConfigPtr(v *AzureClusterLoggingConfigArgs) AzureClusterLoggingConfigPtrInput {
	return (*azureClusterLoggingConfigPtrType)(v)
}

func (*azureClusterLoggingConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureClusterLoggingConfig)(nil)).Elem()
}

func (i *azureClusterLoggingConfigPtrType) ToAzureClusterLoggingConfigPtrOutput() AzureClusterLoggingConfigPtrOutput {
	return i.ToAzureClusterLoggingConfigPtrOutputWithContext(context.Background())
}

func (i *azureClusterLoggingConfigPtrType) ToAzureClusterLoggingConfigPtrOutputWithContext(ctx context.Context) AzureClusterLoggingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureClusterLoggingConfigPtrOutput)
}

type AzureClusterLoggingConfigOutput struct{ *pulumi.OutputState }

func (AzureClusterLoggingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureClusterLoggingConfig)(nil)).Elem()
}

func (o AzureClusterLoggingConfigOutput) ToAzureClusterLoggingConfigOutput() AzureClusterLoggingConfigOutput {
	return o
}

func (o AzureClusterLoggingConfigOutput) ToAzureClusterLoggingConfigOutputWithContext(ctx context.Context) AzureClusterLoggingConfigOutput {
	return o
}

func (o AzureClusterLoggingConfigOutput) ToAzureClusterLoggingConfigPtrOutput() AzureClusterLoggingConfigPtrOutput {
	return o.ToAzureClusterLoggingConfigPtrOutputWithContext(context.Background())
}

func (o AzureClusterLoggingConfigOutput) ToAzureClusterLoggingConfigPtrOutputWithContext(ctx context.Context) AzureClusterLoggingConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureClusterLoggingConfig) *AzureClusterLoggingConfig {
		return &v
	}).(AzureClusterLoggingConfigPtrOutput)
}

// Configuration of the logging components.
func (o AzureClusterLoggingConfigOutput) ComponentConfig() AzureClusterLoggingConfigComponentConfigPtrOutput {
	return o.ApplyT(func(v AzureClusterLoggingConfig) *AzureClusterLoggingConfigComponentConfig { return v.ComponentConfig }).(AzureClusterLoggingConfigComponentConfigPtrOutput)
}

type AzureClusterLoggingConfigPtrOutput struct{ *pulumi.OutputState }

func (AzureClusterLoggingConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureClusterLoggingConfig)(nil)).Elem()
}

func (o AzureClusterLoggingConfigPtrOutput) ToAzureClusterLoggingConfigPtrOutput() AzureClusterLoggingConfigPtrOutput {
	return o
}

func (o AzureClusterLoggingConfigPtrOutput) ToAzureClusterLoggingConfigPtrOutputWithContext(ctx context.Context) AzureClusterLoggingConfigPtrOutput {
	return o
}

func (o AzureClusterLoggingConfigPtrOutput) Elem() AzureClusterLoggingConfigOutput {
	return o.ApplyT(func(v *AzureClusterLoggingConfig) AzureClusterLoggingConfig {
		if v != nil {
			return *v
		}
		var ret AzureClusterLoggingConfig
		return ret
	}).(AzureClusterLoggingConfigOutput)
}

// Configuration of the logging components.
func (o AzureClusterLoggingConfigPtrOutput) ComponentConfig() AzureClusterLoggingConfigComponentConfigPtrOutput {
	return o.ApplyT(func(v *AzureClusterLoggingConfig) *AzureClusterLoggingConfigComponentConfig {
		if v == nil {
			return nil
		}
		return v.ComponentConfig
	}).(AzureClusterLoggingConfigComponentConfigPtrOutput)
}

type AzureClusterLoggingConfigComponentConfig struct {
	// Components of the logging configuration to be enabled.
	EnableComponents []string `pulumi:"enableComponents"`
}

// AzureClusterLoggingConfigComponentConfigInput is an input type that accepts AzureClusterLoggingConfigComponentConfigArgs and AzureClusterLoggingConfigComponentConfigOutput values.
// You can construct a concrete instance of `AzureClusterLoggingConfigComponentConfigInput` via:
//
//	AzureClusterLoggingConfigComponentConfigArgs{...}
type AzureClusterLoggingConfigComponentConfigInput interface {
	pulumi.Input

	ToAzureClusterLoggingConfigComponentConfigOutput() AzureClusterLoggingConfigComponentConfigOutput
	ToAzureClusterLoggingConfigComponentConfigOutputWithContext(context.Context) AzureClusterLoggingConfigComponentConfigOutput
}

type AzureClusterLoggingConfigComponentConfigArgs struct {
	// Components of the logging configuration to be enabled.
	EnableComponents pulumi.StringArrayInput `pulumi:"enableComponents"`
}

func (AzureClusterLoggingConfigComponentConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureClusterLoggingConfigComponentConfig)(nil)).Elem()
}

func (i AzureClusterLoggingConfigComponentConfigArgs) ToAzureClusterLoggingConfigComponentConfigOutput() AzureClusterLoggingConfigComponentConfigOutput {
	return i.ToAzureClusterLoggingConfigComponentConfigOutputWithContext(context.Background())
}

func (i AzureClusterLoggingConfigComponentConfigArgs) ToAzureClusterLoggingConfigComponentConfigOutputWithContext(ctx context.Context) AzureClusterLoggingConfigComponentConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureClusterLoggingConfigComponentConfigOutput)
}

func (i AzureClusterLoggingConfigComponentConfigArgs) ToAzureClusterLoggingConfigComponentConfigPtrOutput() AzureClusterLoggingConfigComponentConfigPtrOutput {
	return i.ToAzureClusterLoggingConfigComponentConfigPtrOutputWithContext(context.Background())
}

func (i AzureClusterLoggingConfigComponentConfigArgs) ToAzureClusterLoggingConfigComponentConfigPtrOutputWithContext(ctx context.Context) AzureClusterLoggingConfigComponentConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureClusterLoggingConfigComponentConfigOutput).ToAzureClusterLoggingConfigComponentConfigPtrOutputWithContext(ctx)
}

// AzureClusterLoggingConfigComponentConfigPtrInput is an input type that accepts AzureClusterLoggingConfigComponentConfigArgs, AzureClusterLoggingConfigComponentConfigPtr and AzureClusterLoggingConfigComponentConfigPtrOutput values.
// You can construct a concrete instance of `AzureClusterLoggingConfigComponentConfigPtrInput` via:
//
//	        AzureClusterLoggingConfigComponentConfigArgs{...}
//
//	or:
//
//	        nil
type AzureClusterLoggingConfigComponentConfigPtrInput interface {
	pulumi.Input

	ToAzureClusterLoggingConfigComponentConfigPtrOutput() AzureClusterLoggingConfigComponentConfigPtrOutput
	ToAzureClusterLoggingConfigComponentConfigPtrOutputWithContext(context.Context) AzureClusterLoggingConfigComponentConfigPtrOutput
}

type azureClusterLoggingConfigComponentConfigPtrType AzureClusterLoggingConfigComponentConfigArgs

func AzureClusterLoggingConfigComponentConfigPtr(v *AzureClusterLoggingConfigComponentConfigArgs) AzureClusterLoggingConfigComponentConfigPtrInput {
	return (*azureClusterLoggingConfigComponentConfigPtrType)(v)
}

func (*azureClusterLoggingConfigComponentConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureClusterLoggingConfigComponentConfig)(nil)).Elem()
}

func (i *azureClusterLoggingConfigComponentConfigPtrType) ToAzureClusterLoggingConfigComponentConfigPtrOutput() AzureClusterLoggingConfigComponentConfigPtrOutput {
	return i.ToAzureClusterLoggingConfigComponentConfigPtrOutputWithContext(context.Background())
}

func (i *azureClusterLoggingConfigComponentConfigPtrType) ToAzureClusterLoggingConfigComponentConfigPtrOutputWithContext(ctx context.Context) AzureClusterLoggingConfigComponentConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureClusterLoggingConfigComponentConfigPtrOutput)
}

type AzureClusterLoggingConfigComponentConfigOutput struct{ *pulumi.OutputState }

func (AzureClusterLoggingConfigComponentConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureClusterLoggingConfigComponentConfig)(nil)).Elem()
}

func (o AzureClusterLoggingConfigComponentConfigOutput) ToAzureClusterLoggingConfigComponentConfigOutput() AzureClusterLoggingConfigComponentConfigOutput {
	return o
}

func (o AzureClusterLoggingConfigComponentConfigOutput) ToAzureClusterLoggingConfigComponentConfigOutputWithContext(ctx context.Context) AzureClusterLoggingConfigComponentConfigOutput {
	return o
}

func (o AzureClusterLoggingConfigComponentConfigOutput) ToAzureClusterLoggingConfigComponentConfigPtrOutput() AzureClusterLoggingConfigComponentConfigPtrOutput {
	return o.ToAzureClusterLoggingConfigComponentConfigPtrOutputWithContext(context.Background())
}

func (o AzureClusterLoggingConfigComponentConfigOutput) ToAzureClusterLoggingConfigComponentConfigPtrOutputWithContext(ctx context.Context) AzureClusterLoggingConfigComponentConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureClusterLoggingConfigComponentConfig) *AzureClusterLoggingConfigComponentConfig {
		return &v
	}).(AzureClusterLoggingConfigComponentConfigPtrOutput)
}

// Components of the logging configuration to be enabled.
func (o AzureClusterLoggingConfigComponentConfigOutput) EnableComponents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureClusterLoggingConfigComponentConfig) []string { return v.EnableComponents }).(pulumi.StringArrayOutput)
}

type AzureClusterLoggingConfigComponentConfigPtrOutput struct{ *pulumi.OutputState }

func (AzureClusterLoggingConfigComponentConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureClusterLoggingConfigComponentConfig)(nil)).Elem()
}

func (o AzureClusterLoggingConfigComponentConfigPtrOutput) ToAzureClusterLoggingConfigComponentConfigPtrOutput() AzureClusterLoggingConfigComponentConfigPtrOutput {
	return o
}

func (o AzureClusterLoggingConfigComponentConfigPtrOutput) ToAzureClusterLoggingConfigComponentConfigPtrOutputWithContext(ctx context.Context) AzureClusterLoggingConfigComponentConfigPtrOutput {
	return o
}

func (o AzureClusterLoggingConfigComponentConfigPtrOutput) Elem() AzureClusterLoggingConfigComponentConfigOutput {
	return o.ApplyT(func(v *AzureClusterLoggingConfigComponentConfig) AzureClusterLoggingConfigComponentConfig {
		if v != nil {
			return *v
		}
		var ret AzureClusterLoggingConfigComponentConfig
		return ret
	}).(AzureClusterLoggingConfigComponentConfigOutput)
}

// Components of the logging configuration to be enabled.
func (o AzureClusterLoggingConfigComponentConfigPtrOutput) EnableComponents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AzureClusterLoggingConfigComponentConfig) []string {
		if v == nil {
			return nil
		}
		return v.EnableComponents
	}).(pulumi.StringArrayOutput)
}

type AzureClusterNetworking struct {
	// The IP address range of the pods in this cluster, in CIDR notation (e.g. `10.96.0.0/14`). All pods in the cluster get assigned a unique RFC1918 IPv4 address from these ranges. Only a single range is supported. This field cannot be changed after creation.
	PodAddressCidrBlocks []string `pulumi:"podAddressCidrBlocks"`
	// The IP address range for services in this cluster, in CIDR notation (e.g. `10.96.0.0/14`). All services in the cluster get assigned a unique RFC1918 IPv4 address from these ranges. Only a single range is supported. This field cannot be changed after creating a cluster.
	ServiceAddressCidrBlocks []string `pulumi:"serviceAddressCidrBlocks"`
	// The Azure Resource Manager (ARM) ID of the VNet associated with your cluster. All components in the cluster (i.e. control plane and node pools) run on a single VNet. Example: `/subscriptions/*/resourceGroups/*/providers/Microsoft.Network/virtualNetworks/*` This field cannot be changed after creation.
	//
	// ***
	VirtualNetworkId string `pulumi:"virtualNetworkId"`
}

// AzureClusterNetworkingInput is an input type that accepts AzureClusterNetworkingArgs and AzureClusterNetworkingOutput values.
// You can construct a concrete instance of `AzureClusterNetworkingInput` via:
//
//	AzureClusterNetworkingArgs{...}
type AzureClusterNetworkingInput interface {
	pulumi.Input

	ToAzureClusterNetworkingOutput() AzureClusterNetworkingOutput
	ToAzureClusterNetworkingOutputWithContext(context.Context) AzureClusterNetworkingOutput
}

type AzureClusterNetworkingArgs struct {
	// The IP address range of the pods in this cluster, in CIDR notation (e.g. `10.96.0.0/14`). All pods in the cluster get assigned a unique RFC1918 IPv4 address from these ranges. Only a single range is supported. This field cannot be changed after creation.
	PodAddressCidrBlocks pulumi.StringArrayInput `pulumi:"podAddressCidrBlocks"`
	// The IP address range for services in this cluster, in CIDR notation (e.g. `10.96.0.0/14`). All services in the cluster get assigned a unique RFC1918 IPv4 address from these ranges. Only a single range is supported. This field cannot be changed after creating a cluster.
	ServiceAddressCidrBlocks pulumi.StringArrayInput `pulumi:"serviceAddressCidrBlocks"`
	// The Azure Resource Manager (ARM) ID of the VNet associated with your cluster. All components in the cluster (i.e. control plane and node pools) run on a single VNet. Example: `/subscriptions/*/resourceGroups/*/providers/Microsoft.Network/virtualNetworks/*` This field cannot be changed after creation.
	//
	// ***
	VirtualNetworkId pulumi.StringInput `pulumi:"virtualNetworkId"`
}

func (AzureClusterNetworkingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureClusterNetworking)(nil)).Elem()
}

func (i AzureClusterNetworkingArgs) ToAzureClusterNetworkingOutput() AzureClusterNetworkingOutput {
	return i.ToAzureClusterNetworkingOutputWithContext(context.Background())
}

func (i AzureClusterNetworkingArgs) ToAzureClusterNetworkingOutputWithContext(ctx context.Context) AzureClusterNetworkingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureClusterNetworkingOutput)
}

func (i AzureClusterNetworkingArgs) ToAzureClusterNetworkingPtrOutput() AzureClusterNetworkingPtrOutput {
	return i.ToAzureClusterNetworkingPtrOutputWithContext(context.Background())
}

func (i AzureClusterNetworkingArgs) ToAzureClusterNetworkingPtrOutputWithContext(ctx context.Context) AzureClusterNetworkingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureClusterNetworkingOutput).ToAzureClusterNetworkingPtrOutputWithContext(ctx)
}

// AzureClusterNetworkingPtrInput is an input type that accepts AzureClusterNetworkingArgs, AzureClusterNetworkingPtr and AzureClusterNetworkingPtrOutput values.
// You can construct a concrete instance of `AzureClusterNetworkingPtrInput` via:
//
//	        AzureClusterNetworkingArgs{...}
//
//	or:
//
//	        nil
type AzureClusterNetworkingPtrInput interface {
	pulumi.Input

	ToAzureClusterNetworkingPtrOutput() AzureClusterNetworkingPtrOutput
	ToAzureClusterNetworkingPtrOutputWithContext(context.Context) AzureClusterNetworkingPtrOutput
}

type azureClusterNetworkingPtrType AzureClusterNetworkingArgs

func AzureClusterNetworkingPtr(v *AzureClusterNetworkingArgs) AzureClusterNetworkingPtrInput {
	return (*azureClusterNetworkingPtrType)(v)
}

func (*azureClusterNetworkingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureClusterNetworking)(nil)).Elem()
}

func (i *azureClusterNetworkingPtrType) ToAzureClusterNetworkingPtrOutput() AzureClusterNetworkingPtrOutput {
	return i.ToAzureClusterNetworkingPtrOutputWithContext(context.Background())
}

func (i *azureClusterNetworkingPtrType) ToAzureClusterNetworkingPtrOutputWithContext(ctx context.Context) AzureClusterNetworkingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureClusterNetworkingPtrOutput)
}

type AzureClusterNetworkingOutput struct{ *pulumi.OutputState }

func (AzureClusterNetworkingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureClusterNetworking)(nil)).Elem()
}

func (o AzureClusterNetworkingOutput) ToAzureClusterNetworkingOutput() AzureClusterNetworkingOutput {
	return o
}

func (o AzureClusterNetworkingOutput) ToAzureClusterNetworkingOutputWithContext(ctx context.Context) AzureClusterNetworkingOutput {
	return o
}

func (o AzureClusterNetworkingOutput) ToAzureClusterNetworkingPtrOutput() AzureClusterNetworkingPtrOutput {
	return o.ToAzureClusterNetworkingPtrOutputWithContext(context.Background())
}

func (o AzureClusterNetworkingOutput) ToAzureClusterNetworkingPtrOutputWithContext(ctx context.Context) AzureClusterNetworkingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureClusterNetworking) *AzureClusterNetworking {
		return &v
	}).(AzureClusterNetworkingPtrOutput)
}

// The IP address range of the pods in this cluster, in CIDR notation (e.g. `10.96.0.0/14`). All pods in the cluster get assigned a unique RFC1918 IPv4 address from these ranges. Only a single range is supported. This field cannot be changed after creation.
func (o AzureClusterNetworkingOutput) PodAddressCidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureClusterNetworking) []string { return v.PodAddressCidrBlocks }).(pulumi.StringArrayOutput)
}

// The IP address range for services in this cluster, in CIDR notation (e.g. `10.96.0.0/14`). All services in the cluster get assigned a unique RFC1918 IPv4 address from these ranges. Only a single range is supported. This field cannot be changed after creating a cluster.
func (o AzureClusterNetworkingOutput) ServiceAddressCidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureClusterNetworking) []string { return v.ServiceAddressCidrBlocks }).(pulumi.StringArrayOutput)
}

// The Azure Resource Manager (ARM) ID of the VNet associated with your cluster. All components in the cluster (i.e. control plane and node pools) run on a single VNet. Example: `/subscriptions/*/resourceGroups/*/providers/Microsoft.Network/virtualNetworks/*` This field cannot be changed after creation.
//
// ***
func (o AzureClusterNetworkingOutput) VirtualNetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v AzureClusterNetworking) string { return v.VirtualNetworkId }).(pulumi.StringOutput)
}

type AzureClusterNetworkingPtrOutput struct{ *pulumi.OutputState }

func (AzureClusterNetworkingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureClusterNetworking)(nil)).Elem()
}

func (o AzureClusterNetworkingPtrOutput) ToAzureClusterNetworkingPtrOutput() AzureClusterNetworkingPtrOutput {
	return o
}

func (o AzureClusterNetworkingPtrOutput) ToAzureClusterNetworkingPtrOutputWithContext(ctx context.Context) AzureClusterNetworkingPtrOutput {
	return o
}

func (o AzureClusterNetworkingPtrOutput) Elem() AzureClusterNetworkingOutput {
	return o.ApplyT(func(v *AzureClusterNetworking) AzureClusterNetworking {
		if v != nil {
			return *v
		}
		var ret AzureClusterNetworking
		return ret
	}).(AzureClusterNetworkingOutput)
}

// The IP address range of the pods in this cluster, in CIDR notation (e.g. `10.96.0.0/14`). All pods in the cluster get assigned a unique RFC1918 IPv4 address from these ranges. Only a single range is supported. This field cannot be changed after creation.
func (o AzureClusterNetworkingPtrOutput) PodAddressCidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AzureClusterNetworking) []string {
		if v == nil {
			return nil
		}
		return v.PodAddressCidrBlocks
	}).(pulumi.StringArrayOutput)
}

// The IP address range for services in this cluster, in CIDR notation (e.g. `10.96.0.0/14`). All services in the cluster get assigned a unique RFC1918 IPv4 address from these ranges. Only a single range is supported. This field cannot be changed after creating a cluster.
func (o AzureClusterNetworkingPtrOutput) ServiceAddressCidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AzureClusterNetworking) []string {
		if v == nil {
			return nil
		}
		return v.ServiceAddressCidrBlocks
	}).(pulumi.StringArrayOutput)
}

// The Azure Resource Manager (ARM) ID of the VNet associated with your cluster. All components in the cluster (i.e. control plane and node pools) run on a single VNet. Example: `/subscriptions/*/resourceGroups/*/providers/Microsoft.Network/virtualNetworks/*` This field cannot be changed after creation.
//
// ***
func (o AzureClusterNetworkingPtrOutput) VirtualNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureClusterNetworking) *string {
		if v == nil {
			return nil
		}
		return &v.VirtualNetworkId
	}).(pulumi.StringPtrOutput)
}

type AzureClusterWorkloadIdentityConfig struct {
	// The ID of the OIDC Identity Provider (IdP) associated to the Workload Identity Pool.
	IdentityProvider *string `pulumi:"identityProvider"`
	// The OIDC issuer URL for this cluster.
	IssuerUri *string `pulumi:"issuerUri"`
	// The Workload Identity Pool associated to the cluster.
	WorkloadPool *string `pulumi:"workloadPool"`
}

// AzureClusterWorkloadIdentityConfigInput is an input type that accepts AzureClusterWorkloadIdentityConfigArgs and AzureClusterWorkloadIdentityConfigOutput values.
// You can construct a concrete instance of `AzureClusterWorkloadIdentityConfigInput` via:
//
//	AzureClusterWorkloadIdentityConfigArgs{...}
type AzureClusterWorkloadIdentityConfigInput interface {
	pulumi.Input

	ToAzureClusterWorkloadIdentityConfigOutput() AzureClusterWorkloadIdentityConfigOutput
	ToAzureClusterWorkloadIdentityConfigOutputWithContext(context.Context) AzureClusterWorkloadIdentityConfigOutput
}

type AzureClusterWorkloadIdentityConfigArgs struct {
	// The ID of the OIDC Identity Provider (IdP) associated to the Workload Identity Pool.
	IdentityProvider pulumi.StringPtrInput `pulumi:"identityProvider"`
	// The OIDC issuer URL for this cluster.
	IssuerUri pulumi.StringPtrInput `pulumi:"issuerUri"`
	// The Workload Identity Pool associated to the cluster.
	WorkloadPool pulumi.StringPtrInput `pulumi:"workloadPool"`
}

func (AzureClusterWorkloadIdentityConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureClusterWorkloadIdentityConfig)(nil)).Elem()
}

func (i AzureClusterWorkloadIdentityConfigArgs) ToAzureClusterWorkloadIdentityConfigOutput() AzureClusterWorkloadIdentityConfigOutput {
	return i.ToAzureClusterWorkloadIdentityConfigOutputWithContext(context.Background())
}

func (i AzureClusterWorkloadIdentityConfigArgs) ToAzureClusterWorkloadIdentityConfigOutputWithContext(ctx context.Context) AzureClusterWorkloadIdentityConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureClusterWorkloadIdentityConfigOutput)
}

// AzureClusterWorkloadIdentityConfigArrayInput is an input type that accepts AzureClusterWorkloadIdentityConfigArray and AzureClusterWorkloadIdentityConfigArrayOutput values.
// You can construct a concrete instance of `AzureClusterWorkloadIdentityConfigArrayInput` via:
//
//	AzureClusterWorkloadIdentityConfigArray{ AzureClusterWorkloadIdentityConfigArgs{...} }
type AzureClusterWorkloadIdentityConfigArrayInput interface {
	pulumi.Input

	ToAzureClusterWorkloadIdentityConfigArrayOutput() AzureClusterWorkloadIdentityConfigArrayOutput
	ToAzureClusterWorkloadIdentityConfigArrayOutputWithContext(context.Context) AzureClusterWorkloadIdentityConfigArrayOutput
}

type AzureClusterWorkloadIdentityConfigArray []AzureClusterWorkloadIdentityConfigInput

func (AzureClusterWorkloadIdentityConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureClusterWorkloadIdentityConfig)(nil)).Elem()
}

func (i AzureClusterWorkloadIdentityConfigArray) ToAzureClusterWorkloadIdentityConfigArrayOutput() AzureClusterWorkloadIdentityConfigArrayOutput {
	return i.ToAzureClusterWorkloadIdentityConfigArrayOutputWithContext(context.Background())
}

func (i AzureClusterWorkloadIdentityConfigArray) ToAzureClusterWorkloadIdentityConfigArrayOutputWithContext(ctx context.Context) AzureClusterWorkloadIdentityConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureClusterWorkloadIdentityConfigArrayOutput)
}

type AzureClusterWorkloadIdentityConfigOutput struct{ *pulumi.OutputState }

func (AzureClusterWorkloadIdentityConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureClusterWorkloadIdentityConfig)(nil)).Elem()
}

func (o AzureClusterWorkloadIdentityConfigOutput) ToAzureClusterWorkloadIdentityConfigOutput() AzureClusterWorkloadIdentityConfigOutput {
	return o
}

func (o AzureClusterWorkloadIdentityConfigOutput) ToAzureClusterWorkloadIdentityConfigOutputWithContext(ctx context.Context) AzureClusterWorkloadIdentityConfigOutput {
	return o
}

// The ID of the OIDC Identity Provider (IdP) associated to the Workload Identity Pool.
func (o AzureClusterWorkloadIdentityConfigOutput) IdentityProvider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureClusterWorkloadIdentityConfig) *string { return v.IdentityProvider }).(pulumi.StringPtrOutput)
}

// The OIDC issuer URL for this cluster.
func (o AzureClusterWorkloadIdentityConfigOutput) IssuerUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureClusterWorkloadIdentityConfig) *string { return v.IssuerUri }).(pulumi.StringPtrOutput)
}

// The Workload Identity Pool associated to the cluster.
func (o AzureClusterWorkloadIdentityConfigOutput) WorkloadPool() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureClusterWorkloadIdentityConfig) *string { return v.WorkloadPool }).(pulumi.StringPtrOutput)
}

type AzureClusterWorkloadIdentityConfigArrayOutput struct{ *pulumi.OutputState }

func (AzureClusterWorkloadIdentityConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureClusterWorkloadIdentityConfig)(nil)).Elem()
}

func (o AzureClusterWorkloadIdentityConfigArrayOutput) ToAzureClusterWorkloadIdentityConfigArrayOutput() AzureClusterWorkloadIdentityConfigArrayOutput {
	return o
}

func (o AzureClusterWorkloadIdentityConfigArrayOutput) ToAzureClusterWorkloadIdentityConfigArrayOutputWithContext(ctx context.Context) AzureClusterWorkloadIdentityConfigArrayOutput {
	return o
}

func (o AzureClusterWorkloadIdentityConfigArrayOutput) Index(i pulumi.IntInput) AzureClusterWorkloadIdentityConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureClusterWorkloadIdentityConfig {
		return vs[0].([]AzureClusterWorkloadIdentityConfig)[vs[1].(int)]
	}).(AzureClusterWorkloadIdentityConfigOutput)
}

type AzureNodePoolAutoscaling struct {
	// Maximum number of nodes in the node pool. Must be >= min_node_count.
	MaxNodeCount int `pulumi:"maxNodeCount"`
	// Minimum number of nodes in the node pool. Must be >= 1 and <= max_node_count.
	MinNodeCount int `pulumi:"minNodeCount"`
}

// AzureNodePoolAutoscalingInput is an input type that accepts AzureNodePoolAutoscalingArgs and AzureNodePoolAutoscalingOutput values.
// You can construct a concrete instance of `AzureNodePoolAutoscalingInput` via:
//
//	AzureNodePoolAutoscalingArgs{...}
type AzureNodePoolAutoscalingInput interface {
	pulumi.Input

	ToAzureNodePoolAutoscalingOutput() AzureNodePoolAutoscalingOutput
	ToAzureNodePoolAutoscalingOutputWithContext(context.Context) AzureNodePoolAutoscalingOutput
}

type AzureNodePoolAutoscalingArgs struct {
	// Maximum number of nodes in the node pool. Must be >= min_node_count.
	MaxNodeCount pulumi.IntInput `pulumi:"maxNodeCount"`
	// Minimum number of nodes in the node pool. Must be >= 1 and <= max_node_count.
	MinNodeCount pulumi.IntInput `pulumi:"minNodeCount"`
}

func (AzureNodePoolAutoscalingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureNodePoolAutoscaling)(nil)).Elem()
}

func (i AzureNodePoolAutoscalingArgs) ToAzureNodePoolAutoscalingOutput() AzureNodePoolAutoscalingOutput {
	return i.ToAzureNodePoolAutoscalingOutputWithContext(context.Background())
}

func (i AzureNodePoolAutoscalingArgs) ToAzureNodePoolAutoscalingOutputWithContext(ctx context.Context) AzureNodePoolAutoscalingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureNodePoolAutoscalingOutput)
}

func (i AzureNodePoolAutoscalingArgs) ToAzureNodePoolAutoscalingPtrOutput() AzureNodePoolAutoscalingPtrOutput {
	return i.ToAzureNodePoolAutoscalingPtrOutputWithContext(context.Background())
}

func (i AzureNodePoolAutoscalingArgs) ToAzureNodePoolAutoscalingPtrOutputWithContext(ctx context.Context) AzureNodePoolAutoscalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureNodePoolAutoscalingOutput).ToAzureNodePoolAutoscalingPtrOutputWithContext(ctx)
}

// AzureNodePoolAutoscalingPtrInput is an input type that accepts AzureNodePoolAutoscalingArgs, AzureNodePoolAutoscalingPtr and AzureNodePoolAutoscalingPtrOutput values.
// You can construct a concrete instance of `AzureNodePoolAutoscalingPtrInput` via:
//
//	        AzureNodePoolAutoscalingArgs{...}
//
//	or:
//
//	        nil
type AzureNodePoolAutoscalingPtrInput interface {
	pulumi.Input

	ToAzureNodePoolAutoscalingPtrOutput() AzureNodePoolAutoscalingPtrOutput
	ToAzureNodePoolAutoscalingPtrOutputWithContext(context.Context) AzureNodePoolAutoscalingPtrOutput
}

type azureNodePoolAutoscalingPtrType AzureNodePoolAutoscalingArgs

func AzureNodePoolAutoscalingPtr(v *AzureNodePoolAutoscalingArgs) AzureNodePoolAutoscalingPtrInput {
	return (*azureNodePoolAutoscalingPtrType)(v)
}

func (*azureNodePoolAutoscalingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureNodePoolAutoscaling)(nil)).Elem()
}

func (i *azureNodePoolAutoscalingPtrType) ToAzureNodePoolAutoscalingPtrOutput() AzureNodePoolAutoscalingPtrOutput {
	return i.ToAzureNodePoolAutoscalingPtrOutputWithContext(context.Background())
}

func (i *azureNodePoolAutoscalingPtrType) ToAzureNodePoolAutoscalingPtrOutputWithContext(ctx context.Context) AzureNodePoolAutoscalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureNodePoolAutoscalingPtrOutput)
}

type AzureNodePoolAutoscalingOutput struct{ *pulumi.OutputState }

func (AzureNodePoolAutoscalingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureNodePoolAutoscaling)(nil)).Elem()
}

func (o AzureNodePoolAutoscalingOutput) ToAzureNodePoolAutoscalingOutput() AzureNodePoolAutoscalingOutput {
	return o
}

func (o AzureNodePoolAutoscalingOutput) ToAzureNodePoolAutoscalingOutputWithContext(ctx context.Context) AzureNodePoolAutoscalingOutput {
	return o
}

func (o AzureNodePoolAutoscalingOutput) ToAzureNodePoolAutoscalingPtrOutput() AzureNodePoolAutoscalingPtrOutput {
	return o.ToAzureNodePoolAutoscalingPtrOutputWithContext(context.Background())
}

func (o AzureNodePoolAutoscalingOutput) ToAzureNodePoolAutoscalingPtrOutputWithContext(ctx context.Context) AzureNodePoolAutoscalingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureNodePoolAutoscaling) *AzureNodePoolAutoscaling {
		return &v
	}).(AzureNodePoolAutoscalingPtrOutput)
}

// Maximum number of nodes in the node pool. Must be >= min_node_count.
func (o AzureNodePoolAutoscalingOutput) MaxNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v AzureNodePoolAutoscaling) int { return v.MaxNodeCount }).(pulumi.IntOutput)
}

// Minimum number of nodes in the node pool. Must be >= 1 and <= max_node_count.
func (o AzureNodePoolAutoscalingOutput) MinNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v AzureNodePoolAutoscaling) int { return v.MinNodeCount }).(pulumi.IntOutput)
}

type AzureNodePoolAutoscalingPtrOutput struct{ *pulumi.OutputState }

func (AzureNodePoolAutoscalingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureNodePoolAutoscaling)(nil)).Elem()
}

func (o AzureNodePoolAutoscalingPtrOutput) ToAzureNodePoolAutoscalingPtrOutput() AzureNodePoolAutoscalingPtrOutput {
	return o
}

func (o AzureNodePoolAutoscalingPtrOutput) ToAzureNodePoolAutoscalingPtrOutputWithContext(ctx context.Context) AzureNodePoolAutoscalingPtrOutput {
	return o
}

func (o AzureNodePoolAutoscalingPtrOutput) Elem() AzureNodePoolAutoscalingOutput {
	return o.ApplyT(func(v *AzureNodePoolAutoscaling) AzureNodePoolAutoscaling {
		if v != nil {
			return *v
		}
		var ret AzureNodePoolAutoscaling
		return ret
	}).(AzureNodePoolAutoscalingOutput)
}

// Maximum number of nodes in the node pool. Must be >= min_node_count.
func (o AzureNodePoolAutoscalingPtrOutput) MaxNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AzureNodePoolAutoscaling) *int {
		if v == nil {
			return nil
		}
		return &v.MaxNodeCount
	}).(pulumi.IntPtrOutput)
}

// Minimum number of nodes in the node pool. Must be >= 1 and <= max_node_count.
func (o AzureNodePoolAutoscalingPtrOutput) MinNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AzureNodePoolAutoscaling) *int {
		if v == nil {
			return nil
		}
		return &v.MinNodeCount
	}).(pulumi.IntPtrOutput)
}

type AzureNodePoolConfig struct {
	// The OS image type to use on node pool instances.
	ImageType *string `pulumi:"imageType"`
	// Optional. The initial labels assigned to nodes of this node pool. An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
	Labels map[string]string `pulumi:"labels"`
	// Proxy configuration for outbound HTTP(S) traffic.
	ProxyConfig *AzureNodePoolConfigProxyConfig `pulumi:"proxyConfig"`
	// Optional. Configuration related to the root volume provisioned for each node pool machine. When unspecified, it defaults to a 32-GiB Azure Disk.
	RootVolume *AzureNodePoolConfigRootVolume `pulumi:"rootVolume"`
	// SSH configuration for how to access the node pool machines.
	SshConfig AzureNodePoolConfigSshConfig `pulumi:"sshConfig"`
	// Optional. A set of tags to apply to all underlying Azure resources for this node pool. This currently only includes Virtual Machine Scale Sets. Specify at most 50 pairs containing alphanumerics, spaces, and symbols (.+-=_:@/). Keys can be up to 127 Unicode characters. Values can be up to 255 Unicode characters.
	Tags map[string]string `pulumi:"tags"`
	// Optional. The Azure VM size name. Example: `Standard_DS2_v2`. See (/anthos/clusters/docs/azure/reference/supported-vms) for options. When unspecified, it defaults to `Standard_DS2_v2`.
	VmSize *string `pulumi:"vmSize"`
}

// AzureNodePoolConfigInput is an input type that accepts AzureNodePoolConfigArgs and AzureNodePoolConfigOutput values.
// You can construct a concrete instance of `AzureNodePoolConfigInput` via:
//
//	AzureNodePoolConfigArgs{...}
type AzureNodePoolConfigInput interface {
	pulumi.Input

	ToAzureNodePoolConfigOutput() AzureNodePoolConfigOutput
	ToAzureNodePoolConfigOutputWithContext(context.Context) AzureNodePoolConfigOutput
}

type AzureNodePoolConfigArgs struct {
	// The OS image type to use on node pool instances.
	ImageType pulumi.StringPtrInput `pulumi:"imageType"`
	// Optional. The initial labels assigned to nodes of this node pool. An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// Proxy configuration for outbound HTTP(S) traffic.
	ProxyConfig AzureNodePoolConfigProxyConfigPtrInput `pulumi:"proxyConfig"`
	// Optional. Configuration related to the root volume provisioned for each node pool machine. When unspecified, it defaults to a 32-GiB Azure Disk.
	RootVolume AzureNodePoolConfigRootVolumePtrInput `pulumi:"rootVolume"`
	// SSH configuration for how to access the node pool machines.
	SshConfig AzureNodePoolConfigSshConfigInput `pulumi:"sshConfig"`
	// Optional. A set of tags to apply to all underlying Azure resources for this node pool. This currently only includes Virtual Machine Scale Sets. Specify at most 50 pairs containing alphanumerics, spaces, and symbols (.+-=_:@/). Keys can be up to 127 Unicode characters. Values can be up to 255 Unicode characters.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Optional. The Azure VM size name. Example: `Standard_DS2_v2`. See (/anthos/clusters/docs/azure/reference/supported-vms) for options. When unspecified, it defaults to `Standard_DS2_v2`.
	VmSize pulumi.StringPtrInput `pulumi:"vmSize"`
}

func (AzureNodePoolConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureNodePoolConfig)(nil)).Elem()
}

func (i AzureNodePoolConfigArgs) ToAzureNodePoolConfigOutput() AzureNodePoolConfigOutput {
	return i.ToAzureNodePoolConfigOutputWithContext(context.Background())
}

func (i AzureNodePoolConfigArgs) ToAzureNodePoolConfigOutputWithContext(ctx context.Context) AzureNodePoolConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureNodePoolConfigOutput)
}

func (i AzureNodePoolConfigArgs) ToAzureNodePoolConfigPtrOutput() AzureNodePoolConfigPtrOutput {
	return i.ToAzureNodePoolConfigPtrOutputWithContext(context.Background())
}

func (i AzureNodePoolConfigArgs) ToAzureNodePoolConfigPtrOutputWithContext(ctx context.Context) AzureNodePoolConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureNodePoolConfigOutput).ToAzureNodePoolConfigPtrOutputWithContext(ctx)
}

// AzureNodePoolConfigPtrInput is an input type that accepts AzureNodePoolConfigArgs, AzureNodePoolConfigPtr and AzureNodePoolConfigPtrOutput values.
// You can construct a concrete instance of `AzureNodePoolConfigPtrInput` via:
//
//	        AzureNodePoolConfigArgs{...}
//
//	or:
//
//	        nil
type AzureNodePoolConfigPtrInput interface {
	pulumi.Input

	ToAzureNodePoolConfigPtrOutput() AzureNodePoolConfigPtrOutput
	ToAzureNodePoolConfigPtrOutputWithContext(context.Context) AzureNodePoolConfigPtrOutput
}

type azureNodePoolConfigPtrType AzureNodePoolConfigArgs

func AzureNodePoolConfigPtr(v *AzureNodePoolConfigArgs) AzureNodePoolConfigPtrInput {
	return (*azureNodePoolConfigPtrType)(v)
}

func (*azureNodePoolConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureNodePoolConfig)(nil)).Elem()
}

func (i *azureNodePoolConfigPtrType) ToAzureNodePoolConfigPtrOutput() AzureNodePoolConfigPtrOutput {
	return i.ToAzureNodePoolConfigPtrOutputWithContext(context.Background())
}

func (i *azureNodePoolConfigPtrType) ToAzureNodePoolConfigPtrOutputWithContext(ctx context.Context) AzureNodePoolConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureNodePoolConfigPtrOutput)
}

type AzureNodePoolConfigOutput struct{ *pulumi.OutputState }

func (AzureNodePoolConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureNodePoolConfig)(nil)).Elem()
}

func (o AzureNodePoolConfigOutput) ToAzureNodePoolConfigOutput() AzureNodePoolConfigOutput {
	return o
}

func (o AzureNodePoolConfigOutput) ToAzureNodePoolConfigOutputWithContext(ctx context.Context) AzureNodePoolConfigOutput {
	return o
}

func (o AzureNodePoolConfigOutput) ToAzureNodePoolConfigPtrOutput() AzureNodePoolConfigPtrOutput {
	return o.ToAzureNodePoolConfigPtrOutputWithContext(context.Background())
}

func (o AzureNodePoolConfigOutput) ToAzureNodePoolConfigPtrOutputWithContext(ctx context.Context) AzureNodePoolConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureNodePoolConfig) *AzureNodePoolConfig {
		return &v
	}).(AzureNodePoolConfigPtrOutput)
}

// The OS image type to use on node pool instances.
func (o AzureNodePoolConfigOutput) ImageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureNodePoolConfig) *string { return v.ImageType }).(pulumi.StringPtrOutput)
}

// Optional. The initial labels assigned to nodes of this node pool. An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
func (o AzureNodePoolConfigOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v AzureNodePoolConfig) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// Proxy configuration for outbound HTTP(S) traffic.
func (o AzureNodePoolConfigOutput) ProxyConfig() AzureNodePoolConfigProxyConfigPtrOutput {
	return o.ApplyT(func(v AzureNodePoolConfig) *AzureNodePoolConfigProxyConfig { return v.ProxyConfig }).(AzureNodePoolConfigProxyConfigPtrOutput)
}

// Optional. Configuration related to the root volume provisioned for each node pool machine. When unspecified, it defaults to a 32-GiB Azure Disk.
func (o AzureNodePoolConfigOutput) RootVolume() AzureNodePoolConfigRootVolumePtrOutput {
	return o.ApplyT(func(v AzureNodePoolConfig) *AzureNodePoolConfigRootVolume { return v.RootVolume }).(AzureNodePoolConfigRootVolumePtrOutput)
}

// SSH configuration for how to access the node pool machines.
func (o AzureNodePoolConfigOutput) SshConfig() AzureNodePoolConfigSshConfigOutput {
	return o.ApplyT(func(v AzureNodePoolConfig) AzureNodePoolConfigSshConfig { return v.SshConfig }).(AzureNodePoolConfigSshConfigOutput)
}

// Optional. A set of tags to apply to all underlying Azure resources for this node pool. This currently only includes Virtual Machine Scale Sets. Specify at most 50 pairs containing alphanumerics, spaces, and symbols (.+-=_:@/). Keys can be up to 127 Unicode characters. Values can be up to 255 Unicode characters.
func (o AzureNodePoolConfigOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v AzureNodePoolConfig) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Optional. The Azure VM size name. Example: `Standard_DS2_v2`. See (/anthos/clusters/docs/azure/reference/supported-vms) for options. When unspecified, it defaults to `Standard_DS2_v2`.
func (o AzureNodePoolConfigOutput) VmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureNodePoolConfig) *string { return v.VmSize }).(pulumi.StringPtrOutput)
}

type AzureNodePoolConfigPtrOutput struct{ *pulumi.OutputState }

func (AzureNodePoolConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureNodePoolConfig)(nil)).Elem()
}

func (o AzureNodePoolConfigPtrOutput) ToAzureNodePoolConfigPtrOutput() AzureNodePoolConfigPtrOutput {
	return o
}

func (o AzureNodePoolConfigPtrOutput) ToAzureNodePoolConfigPtrOutputWithContext(ctx context.Context) AzureNodePoolConfigPtrOutput {
	return o
}

func (o AzureNodePoolConfigPtrOutput) Elem() AzureNodePoolConfigOutput {
	return o.ApplyT(func(v *AzureNodePoolConfig) AzureNodePoolConfig {
		if v != nil {
			return *v
		}
		var ret AzureNodePoolConfig
		return ret
	}).(AzureNodePoolConfigOutput)
}

// The OS image type to use on node pool instances.
func (o AzureNodePoolConfigPtrOutput) ImageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureNodePoolConfig) *string {
		if v == nil {
			return nil
		}
		return v.ImageType
	}).(pulumi.StringPtrOutput)
}

// Optional. The initial labels assigned to nodes of this node pool. An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
func (o AzureNodePoolConfigPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AzureNodePoolConfig) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// Proxy configuration for outbound HTTP(S) traffic.
func (o AzureNodePoolConfigPtrOutput) ProxyConfig() AzureNodePoolConfigProxyConfigPtrOutput {
	return o.ApplyT(func(v *AzureNodePoolConfig) *AzureNodePoolConfigProxyConfig {
		if v == nil {
			return nil
		}
		return v.ProxyConfig
	}).(AzureNodePoolConfigProxyConfigPtrOutput)
}

// Optional. Configuration related to the root volume provisioned for each node pool machine. When unspecified, it defaults to a 32-GiB Azure Disk.
func (o AzureNodePoolConfigPtrOutput) RootVolume() AzureNodePoolConfigRootVolumePtrOutput {
	return o.ApplyT(func(v *AzureNodePoolConfig) *AzureNodePoolConfigRootVolume {
		if v == nil {
			return nil
		}
		return v.RootVolume
	}).(AzureNodePoolConfigRootVolumePtrOutput)
}

// SSH configuration for how to access the node pool machines.
func (o AzureNodePoolConfigPtrOutput) SshConfig() AzureNodePoolConfigSshConfigPtrOutput {
	return o.ApplyT(func(v *AzureNodePoolConfig) *AzureNodePoolConfigSshConfig {
		if v == nil {
			return nil
		}
		return &v.SshConfig
	}).(AzureNodePoolConfigSshConfigPtrOutput)
}

// Optional. A set of tags to apply to all underlying Azure resources for this node pool. This currently only includes Virtual Machine Scale Sets. Specify at most 50 pairs containing alphanumerics, spaces, and symbols (.+-=_:@/). Keys can be up to 127 Unicode characters. Values can be up to 255 Unicode characters.
func (o AzureNodePoolConfigPtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AzureNodePoolConfig) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// Optional. The Azure VM size name. Example: `Standard_DS2_v2`. See (/anthos/clusters/docs/azure/reference/supported-vms) for options. When unspecified, it defaults to `Standard_DS2_v2`.
func (o AzureNodePoolConfigPtrOutput) VmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureNodePoolConfig) *string {
		if v == nil {
			return nil
		}
		return v.VmSize
	}).(pulumi.StringPtrOutput)
}

type AzureNodePoolConfigProxyConfig struct {
	// The ARM ID the of the resource group containing proxy keyvault. Resource group ids are formatted as `/subscriptions/<subscription-id>/resourceGroups/<resource-group-name>`
	ResourceGroupId string `pulumi:"resourceGroupId"`
	// The URL the of the proxy setting secret with its version. Secret ids are formatted as `https:<key-vault-name>.vault.azure.net/secrets/<secret-name>/<secret-version>`.
	SecretId string `pulumi:"secretId"`
}

// AzureNodePoolConfigProxyConfigInput is an input type that accepts AzureNodePoolConfigProxyConfigArgs and AzureNodePoolConfigProxyConfigOutput values.
// You can construct a concrete instance of `AzureNodePoolConfigProxyConfigInput` via:
//
//	AzureNodePoolConfigProxyConfigArgs{...}
type AzureNodePoolConfigProxyConfigInput interface {
	pulumi.Input

	ToAzureNodePoolConfigProxyConfigOutput() AzureNodePoolConfigProxyConfigOutput
	ToAzureNodePoolConfigProxyConfigOutputWithContext(context.Context) AzureNodePoolConfigProxyConfigOutput
}

type AzureNodePoolConfigProxyConfigArgs struct {
	// The ARM ID the of the resource group containing proxy keyvault. Resource group ids are formatted as `/subscriptions/<subscription-id>/resourceGroups/<resource-group-name>`
	ResourceGroupId pulumi.StringInput `pulumi:"resourceGroupId"`
	// The URL the of the proxy setting secret with its version. Secret ids are formatted as `https:<key-vault-name>.vault.azure.net/secrets/<secret-name>/<secret-version>`.
	SecretId pulumi.StringInput `pulumi:"secretId"`
}

func (AzureNodePoolConfigProxyConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureNodePoolConfigProxyConfig)(nil)).Elem()
}

func (i AzureNodePoolConfigProxyConfigArgs) ToAzureNodePoolConfigProxyConfigOutput() AzureNodePoolConfigProxyConfigOutput {
	return i.ToAzureNodePoolConfigProxyConfigOutputWithContext(context.Background())
}

func (i AzureNodePoolConfigProxyConfigArgs) ToAzureNodePoolConfigProxyConfigOutputWithContext(ctx context.Context) AzureNodePoolConfigProxyConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureNodePoolConfigProxyConfigOutput)
}

func (i AzureNodePoolConfigProxyConfigArgs) ToAzureNodePoolConfigProxyConfigPtrOutput() AzureNodePoolConfigProxyConfigPtrOutput {
	return i.ToAzureNodePoolConfigProxyConfigPtrOutputWithContext(context.Background())
}

func (i AzureNodePoolConfigProxyConfigArgs) ToAzureNodePoolConfigProxyConfigPtrOutputWithContext(ctx context.Context) AzureNodePoolConfigProxyConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureNodePoolConfigProxyConfigOutput).ToAzureNodePoolConfigProxyConfigPtrOutputWithContext(ctx)
}

// AzureNodePoolConfigProxyConfigPtrInput is an input type that accepts AzureNodePoolConfigProxyConfigArgs, AzureNodePoolConfigProxyConfigPtr and AzureNodePoolConfigProxyConfigPtrOutput values.
// You can construct a concrete instance of `AzureNodePoolConfigProxyConfigPtrInput` via:
//
//	        AzureNodePoolConfigProxyConfigArgs{...}
//
//	or:
//
//	        nil
type AzureNodePoolConfigProxyConfigPtrInput interface {
	pulumi.Input

	ToAzureNodePoolConfigProxyConfigPtrOutput() AzureNodePoolConfigProxyConfigPtrOutput
	ToAzureNodePoolConfigProxyConfigPtrOutputWithContext(context.Context) AzureNodePoolConfigProxyConfigPtrOutput
}

type azureNodePoolConfigProxyConfigPtrType AzureNodePoolConfigProxyConfigArgs

func AzureNodePoolConfigProxyConfigPtr(v *AzureNodePoolConfigProxyConfigArgs) AzureNodePoolConfigProxyConfigPtrInput {
	return (*azureNodePoolConfigProxyConfigPtrType)(v)
}

func (*azureNodePoolConfigProxyConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureNodePoolConfigProxyConfig)(nil)).Elem()
}

func (i *azureNodePoolConfigProxyConfigPtrType) ToAzureNodePoolConfigProxyConfigPtrOutput() AzureNodePoolConfigProxyConfigPtrOutput {
	return i.ToAzureNodePoolConfigProxyConfigPtrOutputWithContext(context.Background())
}

func (i *azureNodePoolConfigProxyConfigPtrType) ToAzureNodePoolConfigProxyConfigPtrOutputWithContext(ctx context.Context) AzureNodePoolConfigProxyConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureNodePoolConfigProxyConfigPtrOutput)
}

type AzureNodePoolConfigProxyConfigOutput struct{ *pulumi.OutputState }

func (AzureNodePoolConfigProxyConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureNodePoolConfigProxyConfig)(nil)).Elem()
}

func (o AzureNodePoolConfigProxyConfigOutput) ToAzureNodePoolConfigProxyConfigOutput() AzureNodePoolConfigProxyConfigOutput {
	return o
}

func (o AzureNodePoolConfigProxyConfigOutput) ToAzureNodePoolConfigProxyConfigOutputWithContext(ctx context.Context) AzureNodePoolConfigProxyConfigOutput {
	return o
}

func (o AzureNodePoolConfigProxyConfigOutput) ToAzureNodePoolConfigProxyConfigPtrOutput() AzureNodePoolConfigProxyConfigPtrOutput {
	return o.ToAzureNodePoolConfigProxyConfigPtrOutputWithContext(context.Background())
}

func (o AzureNodePoolConfigProxyConfigOutput) ToAzureNodePoolConfigProxyConfigPtrOutputWithContext(ctx context.Context) AzureNodePoolConfigProxyConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureNodePoolConfigProxyConfig) *AzureNodePoolConfigProxyConfig {
		return &v
	}).(AzureNodePoolConfigProxyConfigPtrOutput)
}

// The ARM ID the of the resource group containing proxy keyvault. Resource group ids are formatted as `/subscriptions/<subscription-id>/resourceGroups/<resource-group-name>`
func (o AzureNodePoolConfigProxyConfigOutput) ResourceGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v AzureNodePoolConfigProxyConfig) string { return v.ResourceGroupId }).(pulumi.StringOutput)
}

// The URL the of the proxy setting secret with its version. Secret ids are formatted as `https:<key-vault-name>.vault.azure.net/secrets/<secret-name>/<secret-version>`.
func (o AzureNodePoolConfigProxyConfigOutput) SecretId() pulumi.StringOutput {
	return o.ApplyT(func(v AzureNodePoolConfigProxyConfig) string { return v.SecretId }).(pulumi.StringOutput)
}

type AzureNodePoolConfigProxyConfigPtrOutput struct{ *pulumi.OutputState }

func (AzureNodePoolConfigProxyConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureNodePoolConfigProxyConfig)(nil)).Elem()
}

func (o AzureNodePoolConfigProxyConfigPtrOutput) ToAzureNodePoolConfigProxyConfigPtrOutput() AzureNodePoolConfigProxyConfigPtrOutput {
	return o
}

func (o AzureNodePoolConfigProxyConfigPtrOutput) ToAzureNodePoolConfigProxyConfigPtrOutputWithContext(ctx context.Context) AzureNodePoolConfigProxyConfigPtrOutput {
	return o
}

func (o AzureNodePoolConfigProxyConfigPtrOutput) Elem() AzureNodePoolConfigProxyConfigOutput {
	return o.ApplyT(func(v *AzureNodePoolConfigProxyConfig) AzureNodePoolConfigProxyConfig {
		if v != nil {
			return *v
		}
		var ret AzureNodePoolConfigProxyConfig
		return ret
	}).(AzureNodePoolConfigProxyConfigOutput)
}

// The ARM ID the of the resource group containing proxy keyvault. Resource group ids are formatted as `/subscriptions/<subscription-id>/resourceGroups/<resource-group-name>`
func (o AzureNodePoolConfigProxyConfigPtrOutput) ResourceGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureNodePoolConfigProxyConfig) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceGroupId
	}).(pulumi.StringPtrOutput)
}

// The URL the of the proxy setting secret with its version. Secret ids are formatted as `https:<key-vault-name>.vault.azure.net/secrets/<secret-name>/<secret-version>`.
func (o AzureNodePoolConfigProxyConfigPtrOutput) SecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureNodePoolConfigProxyConfig) *string {
		if v == nil {
			return nil
		}
		return &v.SecretId
	}).(pulumi.StringPtrOutput)
}

type AzureNodePoolConfigRootVolume struct {
	// Optional. The size of the disk, in GiBs. When unspecified, a default value is provided. See the specific reference in the parent resource.
	SizeGib *int `pulumi:"sizeGib"`
}

// AzureNodePoolConfigRootVolumeInput is an input type that accepts AzureNodePoolConfigRootVolumeArgs and AzureNodePoolConfigRootVolumeOutput values.
// You can construct a concrete instance of `AzureNodePoolConfigRootVolumeInput` via:
//
//	AzureNodePoolConfigRootVolumeArgs{...}
type AzureNodePoolConfigRootVolumeInput interface {
	pulumi.Input

	ToAzureNodePoolConfigRootVolumeOutput() AzureNodePoolConfigRootVolumeOutput
	ToAzureNodePoolConfigRootVolumeOutputWithContext(context.Context) AzureNodePoolConfigRootVolumeOutput
}

type AzureNodePoolConfigRootVolumeArgs struct {
	// Optional. The size of the disk, in GiBs. When unspecified, a default value is provided. See the specific reference in the parent resource.
	SizeGib pulumi.IntPtrInput `pulumi:"sizeGib"`
}

func (AzureNodePoolConfigRootVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureNodePoolConfigRootVolume)(nil)).Elem()
}

func (i AzureNodePoolConfigRootVolumeArgs) ToAzureNodePoolConfigRootVolumeOutput() AzureNodePoolConfigRootVolumeOutput {
	return i.ToAzureNodePoolConfigRootVolumeOutputWithContext(context.Background())
}

func (i AzureNodePoolConfigRootVolumeArgs) ToAzureNodePoolConfigRootVolumeOutputWithContext(ctx context.Context) AzureNodePoolConfigRootVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureNodePoolConfigRootVolumeOutput)
}

func (i AzureNodePoolConfigRootVolumeArgs) ToAzureNodePoolConfigRootVolumePtrOutput() AzureNodePoolConfigRootVolumePtrOutput {
	return i.ToAzureNodePoolConfigRootVolumePtrOutputWithContext(context.Background())
}

func (i AzureNodePoolConfigRootVolumeArgs) ToAzureNodePoolConfigRootVolumePtrOutputWithContext(ctx context.Context) AzureNodePoolConfigRootVolumePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureNodePoolConfigRootVolumeOutput).ToAzureNodePoolConfigRootVolumePtrOutputWithContext(ctx)
}

// AzureNodePoolConfigRootVolumePtrInput is an input type that accepts AzureNodePoolConfigRootVolumeArgs, AzureNodePoolConfigRootVolumePtr and AzureNodePoolConfigRootVolumePtrOutput values.
// You can construct a concrete instance of `AzureNodePoolConfigRootVolumePtrInput` via:
//
//	        AzureNodePoolConfigRootVolumeArgs{...}
//
//	or:
//
//	        nil
type AzureNodePoolConfigRootVolumePtrInput interface {
	pulumi.Input

	ToAzureNodePoolConfigRootVolumePtrOutput() AzureNodePoolConfigRootVolumePtrOutput
	ToAzureNodePoolConfigRootVolumePtrOutputWithContext(context.Context) AzureNodePoolConfigRootVolumePtrOutput
}

type azureNodePoolConfigRootVolumePtrType AzureNodePoolConfigRootVolumeArgs

func AzureNodePoolConfigRootVolumePtr(v *AzureNodePoolConfigRootVolumeArgs) AzureNodePoolConfigRootVolumePtrInput {
	return (*azureNodePoolConfigRootVolumePtrType)(v)
}

func (*azureNodePoolConfigRootVolumePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureNodePoolConfigRootVolume)(nil)).Elem()
}

func (i *azureNodePoolConfigRootVolumePtrType) ToAzureNodePoolConfigRootVolumePtrOutput() AzureNodePoolConfigRootVolumePtrOutput {
	return i.ToAzureNodePoolConfigRootVolumePtrOutputWithContext(context.Background())
}

func (i *azureNodePoolConfigRootVolumePtrType) ToAzureNodePoolConfigRootVolumePtrOutputWithContext(ctx context.Context) AzureNodePoolConfigRootVolumePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureNodePoolConfigRootVolumePtrOutput)
}

type AzureNodePoolConfigRootVolumeOutput struct{ *pulumi.OutputState }

func (AzureNodePoolConfigRootVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureNodePoolConfigRootVolume)(nil)).Elem()
}

func (o AzureNodePoolConfigRootVolumeOutput) ToAzureNodePoolConfigRootVolumeOutput() AzureNodePoolConfigRootVolumeOutput {
	return o
}

func (o AzureNodePoolConfigRootVolumeOutput) ToAzureNodePoolConfigRootVolumeOutputWithContext(ctx context.Context) AzureNodePoolConfigRootVolumeOutput {
	return o
}

func (o AzureNodePoolConfigRootVolumeOutput) ToAzureNodePoolConfigRootVolumePtrOutput() AzureNodePoolConfigRootVolumePtrOutput {
	return o.ToAzureNodePoolConfigRootVolumePtrOutputWithContext(context.Background())
}

func (o AzureNodePoolConfigRootVolumeOutput) ToAzureNodePoolConfigRootVolumePtrOutputWithContext(ctx context.Context) AzureNodePoolConfigRootVolumePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureNodePoolConfigRootVolume) *AzureNodePoolConfigRootVolume {
		return &v
	}).(AzureNodePoolConfigRootVolumePtrOutput)
}

// Optional. The size of the disk, in GiBs. When unspecified, a default value is provided. See the specific reference in the parent resource.
func (o AzureNodePoolConfigRootVolumeOutput) SizeGib() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureNodePoolConfigRootVolume) *int { return v.SizeGib }).(pulumi.IntPtrOutput)
}

type AzureNodePoolConfigRootVolumePtrOutput struct{ *pulumi.OutputState }

func (AzureNodePoolConfigRootVolumePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureNodePoolConfigRootVolume)(nil)).Elem()
}

func (o AzureNodePoolConfigRootVolumePtrOutput) ToAzureNodePoolConfigRootVolumePtrOutput() AzureNodePoolConfigRootVolumePtrOutput {
	return o
}

func (o AzureNodePoolConfigRootVolumePtrOutput) ToAzureNodePoolConfigRootVolumePtrOutputWithContext(ctx context.Context) AzureNodePoolConfigRootVolumePtrOutput {
	return o
}

func (o AzureNodePoolConfigRootVolumePtrOutput) Elem() AzureNodePoolConfigRootVolumeOutput {
	return o.ApplyT(func(v *AzureNodePoolConfigRootVolume) AzureNodePoolConfigRootVolume {
		if v != nil {
			return *v
		}
		var ret AzureNodePoolConfigRootVolume
		return ret
	}).(AzureNodePoolConfigRootVolumeOutput)
}

// Optional. The size of the disk, in GiBs. When unspecified, a default value is provided. See the specific reference in the parent resource.
func (o AzureNodePoolConfigRootVolumePtrOutput) SizeGib() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AzureNodePoolConfigRootVolume) *int {
		if v == nil {
			return nil
		}
		return v.SizeGib
	}).(pulumi.IntPtrOutput)
}

type AzureNodePoolConfigSshConfig struct {
	// The SSH public key data for VMs managed by Anthos. This accepts the authorizedKeys file format used in OpenSSH according to the sshd(8) manual page.
	AuthorizedKey string `pulumi:"authorizedKey"`
}

// AzureNodePoolConfigSshConfigInput is an input type that accepts AzureNodePoolConfigSshConfigArgs and AzureNodePoolConfigSshConfigOutput values.
// You can construct a concrete instance of `AzureNodePoolConfigSshConfigInput` via:
//
//	AzureNodePoolConfigSshConfigArgs{...}
type AzureNodePoolConfigSshConfigInput interface {
	pulumi.Input

	ToAzureNodePoolConfigSshConfigOutput() AzureNodePoolConfigSshConfigOutput
	ToAzureNodePoolConfigSshConfigOutputWithContext(context.Context) AzureNodePoolConfigSshConfigOutput
}

type AzureNodePoolConfigSshConfigArgs struct {
	// The SSH public key data for VMs managed by Anthos. This accepts the authorizedKeys file format used in OpenSSH according to the sshd(8) manual page.
	AuthorizedKey pulumi.StringInput `pulumi:"authorizedKey"`
}

func (AzureNodePoolConfigSshConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureNodePoolConfigSshConfig)(nil)).Elem()
}

func (i AzureNodePoolConfigSshConfigArgs) ToAzureNodePoolConfigSshConfigOutput() AzureNodePoolConfigSshConfigOutput {
	return i.ToAzureNodePoolConfigSshConfigOutputWithContext(context.Background())
}

func (i AzureNodePoolConfigSshConfigArgs) ToAzureNodePoolConfigSshConfigOutputWithContext(ctx context.Context) AzureNodePoolConfigSshConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureNodePoolConfigSshConfigOutput)
}

func (i AzureNodePoolConfigSshConfigArgs) ToAzureNodePoolConfigSshConfigPtrOutput() AzureNodePoolConfigSshConfigPtrOutput {
	return i.ToAzureNodePoolConfigSshConfigPtrOutputWithContext(context.Background())
}

func (i AzureNodePoolConfigSshConfigArgs) ToAzureNodePoolConfigSshConfigPtrOutputWithContext(ctx context.Context) AzureNodePoolConfigSshConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureNodePoolConfigSshConfigOutput).ToAzureNodePoolConfigSshConfigPtrOutputWithContext(ctx)
}

// AzureNodePoolConfigSshConfigPtrInput is an input type that accepts AzureNodePoolConfigSshConfigArgs, AzureNodePoolConfigSshConfigPtr and AzureNodePoolConfigSshConfigPtrOutput values.
// You can construct a concrete instance of `AzureNodePoolConfigSshConfigPtrInput` via:
//
//	        AzureNodePoolConfigSshConfigArgs{...}
//
//	or:
//
//	        nil
type AzureNodePoolConfigSshConfigPtrInput interface {
	pulumi.Input

	ToAzureNodePoolConfigSshConfigPtrOutput() AzureNodePoolConfigSshConfigPtrOutput
	ToAzureNodePoolConfigSshConfigPtrOutputWithContext(context.Context) AzureNodePoolConfigSshConfigPtrOutput
}

type azureNodePoolConfigSshConfigPtrType AzureNodePoolConfigSshConfigArgs

func AzureNodePoolConfigSshConfigPtr(v *AzureNodePoolConfigSshConfigArgs) AzureNodePoolConfigSshConfigPtrInput {
	return (*azureNodePoolConfigSshConfigPtrType)(v)
}

func (*azureNodePoolConfigSshConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureNodePoolConfigSshConfig)(nil)).Elem()
}

func (i *azureNodePoolConfigSshConfigPtrType) ToAzureNodePoolConfigSshConfigPtrOutput() AzureNodePoolConfigSshConfigPtrOutput {
	return i.ToAzureNodePoolConfigSshConfigPtrOutputWithContext(context.Background())
}

func (i *azureNodePoolConfigSshConfigPtrType) ToAzureNodePoolConfigSshConfigPtrOutputWithContext(ctx context.Context) AzureNodePoolConfigSshConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureNodePoolConfigSshConfigPtrOutput)
}

type AzureNodePoolConfigSshConfigOutput struct{ *pulumi.OutputState }

func (AzureNodePoolConfigSshConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureNodePoolConfigSshConfig)(nil)).Elem()
}

func (o AzureNodePoolConfigSshConfigOutput) ToAzureNodePoolConfigSshConfigOutput() AzureNodePoolConfigSshConfigOutput {
	return o
}

func (o AzureNodePoolConfigSshConfigOutput) ToAzureNodePoolConfigSshConfigOutputWithContext(ctx context.Context) AzureNodePoolConfigSshConfigOutput {
	return o
}

func (o AzureNodePoolConfigSshConfigOutput) ToAzureNodePoolConfigSshConfigPtrOutput() AzureNodePoolConfigSshConfigPtrOutput {
	return o.ToAzureNodePoolConfigSshConfigPtrOutputWithContext(context.Background())
}

func (o AzureNodePoolConfigSshConfigOutput) ToAzureNodePoolConfigSshConfigPtrOutputWithContext(ctx context.Context) AzureNodePoolConfigSshConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureNodePoolConfigSshConfig) *AzureNodePoolConfigSshConfig {
		return &v
	}).(AzureNodePoolConfigSshConfigPtrOutput)
}

// The SSH public key data for VMs managed by Anthos. This accepts the authorizedKeys file format used in OpenSSH according to the sshd(8) manual page.
func (o AzureNodePoolConfigSshConfigOutput) AuthorizedKey() pulumi.StringOutput {
	return o.ApplyT(func(v AzureNodePoolConfigSshConfig) string { return v.AuthorizedKey }).(pulumi.StringOutput)
}

type AzureNodePoolConfigSshConfigPtrOutput struct{ *pulumi.OutputState }

func (AzureNodePoolConfigSshConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureNodePoolConfigSshConfig)(nil)).Elem()
}

func (o AzureNodePoolConfigSshConfigPtrOutput) ToAzureNodePoolConfigSshConfigPtrOutput() AzureNodePoolConfigSshConfigPtrOutput {
	return o
}

func (o AzureNodePoolConfigSshConfigPtrOutput) ToAzureNodePoolConfigSshConfigPtrOutputWithContext(ctx context.Context) AzureNodePoolConfigSshConfigPtrOutput {
	return o
}

func (o AzureNodePoolConfigSshConfigPtrOutput) Elem() AzureNodePoolConfigSshConfigOutput {
	return o.ApplyT(func(v *AzureNodePoolConfigSshConfig) AzureNodePoolConfigSshConfig {
		if v != nil {
			return *v
		}
		var ret AzureNodePoolConfigSshConfig
		return ret
	}).(AzureNodePoolConfigSshConfigOutput)
}

// The SSH public key data for VMs managed by Anthos. This accepts the authorizedKeys file format used in OpenSSH according to the sshd(8) manual page.
func (o AzureNodePoolConfigSshConfigPtrOutput) AuthorizedKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureNodePoolConfigSshConfig) *string {
		if v == nil {
			return nil
		}
		return &v.AuthorizedKey
	}).(pulumi.StringPtrOutput)
}

type AzureNodePoolManagement struct {
	// Optional. Whether or not the nodes will be automatically repaired.
	AutoRepair *bool `pulumi:"autoRepair"`
}

// AzureNodePoolManagementInput is an input type that accepts AzureNodePoolManagementArgs and AzureNodePoolManagementOutput values.
// You can construct a concrete instance of `AzureNodePoolManagementInput` via:
//
//	AzureNodePoolManagementArgs{...}
type AzureNodePoolManagementInput interface {
	pulumi.Input

	ToAzureNodePoolManagementOutput() AzureNodePoolManagementOutput
	ToAzureNodePoolManagementOutputWithContext(context.Context) AzureNodePoolManagementOutput
}

type AzureNodePoolManagementArgs struct {
	// Optional. Whether or not the nodes will be automatically repaired.
	AutoRepair pulumi.BoolPtrInput `pulumi:"autoRepair"`
}

func (AzureNodePoolManagementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureNodePoolManagement)(nil)).Elem()
}

func (i AzureNodePoolManagementArgs) ToAzureNodePoolManagementOutput() AzureNodePoolManagementOutput {
	return i.ToAzureNodePoolManagementOutputWithContext(context.Background())
}

func (i AzureNodePoolManagementArgs) ToAzureNodePoolManagementOutputWithContext(ctx context.Context) AzureNodePoolManagementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureNodePoolManagementOutput)
}

func (i AzureNodePoolManagementArgs) ToAzureNodePoolManagementPtrOutput() AzureNodePoolManagementPtrOutput {
	return i.ToAzureNodePoolManagementPtrOutputWithContext(context.Background())
}

func (i AzureNodePoolManagementArgs) ToAzureNodePoolManagementPtrOutputWithContext(ctx context.Context) AzureNodePoolManagementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureNodePoolManagementOutput).ToAzureNodePoolManagementPtrOutputWithContext(ctx)
}

// AzureNodePoolManagementPtrInput is an input type that accepts AzureNodePoolManagementArgs, AzureNodePoolManagementPtr and AzureNodePoolManagementPtrOutput values.
// You can construct a concrete instance of `AzureNodePoolManagementPtrInput` via:
//
//	        AzureNodePoolManagementArgs{...}
//
//	or:
//
//	        nil
type AzureNodePoolManagementPtrInput interface {
	pulumi.Input

	ToAzureNodePoolManagementPtrOutput() AzureNodePoolManagementPtrOutput
	ToAzureNodePoolManagementPtrOutputWithContext(context.Context) AzureNodePoolManagementPtrOutput
}

type azureNodePoolManagementPtrType AzureNodePoolManagementArgs

func AzureNodePoolManagementPtr(v *AzureNodePoolManagementArgs) AzureNodePoolManagementPtrInput {
	return (*azureNodePoolManagementPtrType)(v)
}

func (*azureNodePoolManagementPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureNodePoolManagement)(nil)).Elem()
}

func (i *azureNodePoolManagementPtrType) ToAzureNodePoolManagementPtrOutput() AzureNodePoolManagementPtrOutput {
	return i.ToAzureNodePoolManagementPtrOutputWithContext(context.Background())
}

func (i *azureNodePoolManagementPtrType) ToAzureNodePoolManagementPtrOutputWithContext(ctx context.Context) AzureNodePoolManagementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureNodePoolManagementPtrOutput)
}

type AzureNodePoolManagementOutput struct{ *pulumi.OutputState }

func (AzureNodePoolManagementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureNodePoolManagement)(nil)).Elem()
}

func (o AzureNodePoolManagementOutput) ToAzureNodePoolManagementOutput() AzureNodePoolManagementOutput {
	return o
}

func (o AzureNodePoolManagementOutput) ToAzureNodePoolManagementOutputWithContext(ctx context.Context) AzureNodePoolManagementOutput {
	return o
}

func (o AzureNodePoolManagementOutput) ToAzureNodePoolManagementPtrOutput() AzureNodePoolManagementPtrOutput {
	return o.ToAzureNodePoolManagementPtrOutputWithContext(context.Background())
}

func (o AzureNodePoolManagementOutput) ToAzureNodePoolManagementPtrOutputWithContext(ctx context.Context) AzureNodePoolManagementPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureNodePoolManagement) *AzureNodePoolManagement {
		return &v
	}).(AzureNodePoolManagementPtrOutput)
}

// Optional. Whether or not the nodes will be automatically repaired.
func (o AzureNodePoolManagementOutput) AutoRepair() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureNodePoolManagement) *bool { return v.AutoRepair }).(pulumi.BoolPtrOutput)
}

type AzureNodePoolManagementPtrOutput struct{ *pulumi.OutputState }

func (AzureNodePoolManagementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureNodePoolManagement)(nil)).Elem()
}

func (o AzureNodePoolManagementPtrOutput) ToAzureNodePoolManagementPtrOutput() AzureNodePoolManagementPtrOutput {
	return o
}

func (o AzureNodePoolManagementPtrOutput) ToAzureNodePoolManagementPtrOutputWithContext(ctx context.Context) AzureNodePoolManagementPtrOutput {
	return o
}

func (o AzureNodePoolManagementPtrOutput) Elem() AzureNodePoolManagementOutput {
	return o.ApplyT(func(v *AzureNodePoolManagement) AzureNodePoolManagement {
		if v != nil {
			return *v
		}
		var ret AzureNodePoolManagement
		return ret
	}).(AzureNodePoolManagementOutput)
}

// Optional. Whether or not the nodes will be automatically repaired.
func (o AzureNodePoolManagementPtrOutput) AutoRepair() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureNodePoolManagement) *bool {
		if v == nil {
			return nil
		}
		return v.AutoRepair
	}).(pulumi.BoolPtrOutput)
}

type AzureNodePoolMaxPodsConstraint struct {
	// The maximum number of pods to schedule on a single node.
	//
	// ***
	MaxPodsPerNode int `pulumi:"maxPodsPerNode"`
}

// AzureNodePoolMaxPodsConstraintInput is an input type that accepts AzureNodePoolMaxPodsConstraintArgs and AzureNodePoolMaxPodsConstraintOutput values.
// You can construct a concrete instance of `AzureNodePoolMaxPodsConstraintInput` via:
//
//	AzureNodePoolMaxPodsConstraintArgs{...}
type AzureNodePoolMaxPodsConstraintInput interface {
	pulumi.Input

	ToAzureNodePoolMaxPodsConstraintOutput() AzureNodePoolMaxPodsConstraintOutput
	ToAzureNodePoolMaxPodsConstraintOutputWithContext(context.Context) AzureNodePoolMaxPodsConstraintOutput
}

type AzureNodePoolMaxPodsConstraintArgs struct {
	// The maximum number of pods to schedule on a single node.
	//
	// ***
	MaxPodsPerNode pulumi.IntInput `pulumi:"maxPodsPerNode"`
}

func (AzureNodePoolMaxPodsConstraintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureNodePoolMaxPodsConstraint)(nil)).Elem()
}

func (i AzureNodePoolMaxPodsConstraintArgs) ToAzureNodePoolMaxPodsConstraintOutput() AzureNodePoolMaxPodsConstraintOutput {
	return i.ToAzureNodePoolMaxPodsConstraintOutputWithContext(context.Background())
}

func (i AzureNodePoolMaxPodsConstraintArgs) ToAzureNodePoolMaxPodsConstraintOutputWithContext(ctx context.Context) AzureNodePoolMaxPodsConstraintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureNodePoolMaxPodsConstraintOutput)
}

func (i AzureNodePoolMaxPodsConstraintArgs) ToAzureNodePoolMaxPodsConstraintPtrOutput() AzureNodePoolMaxPodsConstraintPtrOutput {
	return i.ToAzureNodePoolMaxPodsConstraintPtrOutputWithContext(context.Background())
}

func (i AzureNodePoolMaxPodsConstraintArgs) ToAzureNodePoolMaxPodsConstraintPtrOutputWithContext(ctx context.Context) AzureNodePoolMaxPodsConstraintPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureNodePoolMaxPodsConstraintOutput).ToAzureNodePoolMaxPodsConstraintPtrOutputWithContext(ctx)
}

// AzureNodePoolMaxPodsConstraintPtrInput is an input type that accepts AzureNodePoolMaxPodsConstraintArgs, AzureNodePoolMaxPodsConstraintPtr and AzureNodePoolMaxPodsConstraintPtrOutput values.
// You can construct a concrete instance of `AzureNodePoolMaxPodsConstraintPtrInput` via:
//
//	        AzureNodePoolMaxPodsConstraintArgs{...}
//
//	or:
//
//	        nil
type AzureNodePoolMaxPodsConstraintPtrInput interface {
	pulumi.Input

	ToAzureNodePoolMaxPodsConstraintPtrOutput() AzureNodePoolMaxPodsConstraintPtrOutput
	ToAzureNodePoolMaxPodsConstraintPtrOutputWithContext(context.Context) AzureNodePoolMaxPodsConstraintPtrOutput
}

type azureNodePoolMaxPodsConstraintPtrType AzureNodePoolMaxPodsConstraintArgs

func AzureNodePoolMaxPodsConstraintPtr(v *AzureNodePoolMaxPodsConstraintArgs) AzureNodePoolMaxPodsConstraintPtrInput {
	return (*azureNodePoolMaxPodsConstraintPtrType)(v)
}

func (*azureNodePoolMaxPodsConstraintPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureNodePoolMaxPodsConstraint)(nil)).Elem()
}

func (i *azureNodePoolMaxPodsConstraintPtrType) ToAzureNodePoolMaxPodsConstraintPtrOutput() AzureNodePoolMaxPodsConstraintPtrOutput {
	return i.ToAzureNodePoolMaxPodsConstraintPtrOutputWithContext(context.Background())
}

func (i *azureNodePoolMaxPodsConstraintPtrType) ToAzureNodePoolMaxPodsConstraintPtrOutputWithContext(ctx context.Context) AzureNodePoolMaxPodsConstraintPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureNodePoolMaxPodsConstraintPtrOutput)
}

type AzureNodePoolMaxPodsConstraintOutput struct{ *pulumi.OutputState }

func (AzureNodePoolMaxPodsConstraintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureNodePoolMaxPodsConstraint)(nil)).Elem()
}

func (o AzureNodePoolMaxPodsConstraintOutput) ToAzureNodePoolMaxPodsConstraintOutput() AzureNodePoolMaxPodsConstraintOutput {
	return o
}

func (o AzureNodePoolMaxPodsConstraintOutput) ToAzureNodePoolMaxPodsConstraintOutputWithContext(ctx context.Context) AzureNodePoolMaxPodsConstraintOutput {
	return o
}

func (o AzureNodePoolMaxPodsConstraintOutput) ToAzureNodePoolMaxPodsConstraintPtrOutput() AzureNodePoolMaxPodsConstraintPtrOutput {
	return o.ToAzureNodePoolMaxPodsConstraintPtrOutputWithContext(context.Background())
}

func (o AzureNodePoolMaxPodsConstraintOutput) ToAzureNodePoolMaxPodsConstraintPtrOutputWithContext(ctx context.Context) AzureNodePoolMaxPodsConstraintPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureNodePoolMaxPodsConstraint) *AzureNodePoolMaxPodsConstraint {
		return &v
	}).(AzureNodePoolMaxPodsConstraintPtrOutput)
}

// The maximum number of pods to schedule on a single node.
//
// ***
func (o AzureNodePoolMaxPodsConstraintOutput) MaxPodsPerNode() pulumi.IntOutput {
	return o.ApplyT(func(v AzureNodePoolMaxPodsConstraint) int { return v.MaxPodsPerNode }).(pulumi.IntOutput)
}

type AzureNodePoolMaxPodsConstraintPtrOutput struct{ *pulumi.OutputState }

func (AzureNodePoolMaxPodsConstraintPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureNodePoolMaxPodsConstraint)(nil)).Elem()
}

func (o AzureNodePoolMaxPodsConstraintPtrOutput) ToAzureNodePoolMaxPodsConstraintPtrOutput() AzureNodePoolMaxPodsConstraintPtrOutput {
	return o
}

func (o AzureNodePoolMaxPodsConstraintPtrOutput) ToAzureNodePoolMaxPodsConstraintPtrOutputWithContext(ctx context.Context) AzureNodePoolMaxPodsConstraintPtrOutput {
	return o
}

func (o AzureNodePoolMaxPodsConstraintPtrOutput) Elem() AzureNodePoolMaxPodsConstraintOutput {
	return o.ApplyT(func(v *AzureNodePoolMaxPodsConstraint) AzureNodePoolMaxPodsConstraint {
		if v != nil {
			return *v
		}
		var ret AzureNodePoolMaxPodsConstraint
		return ret
	}).(AzureNodePoolMaxPodsConstraintOutput)
}

// The maximum number of pods to schedule on a single node.
//
// ***
func (o AzureNodePoolMaxPodsConstraintPtrOutput) MaxPodsPerNode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AzureNodePoolMaxPodsConstraint) *int {
		if v == nil {
			return nil
		}
		return &v.MaxPodsPerNode
	}).(pulumi.IntPtrOutput)
}

type ClusterAddonsConfig struct {
	// . Structure is documented below.
	CloudrunConfig *ClusterAddonsConfigCloudrunConfig `pulumi:"cloudrunConfig"`
	// .
	// The status of the ConfigConnector addon. It is disabled by default; Set `enabled = true` to enable.
	ConfigConnectorConfig *ClusterAddonsConfigConfigConnectorConfig `pulumi:"configConnectorConfig"`
	// .
	// The status of the NodeLocal DNSCache addon. It is disabled by default.
	// Set `enabled = true` to enable.
	//
	// **Enabling/Disabling NodeLocal DNSCache in an existing cluster is a disruptive operation.
	// All cluster nodes running GKE 1.15 and higher are recreated.**
	DnsCacheConfig *ClusterAddonsConfigDnsCacheConfig `pulumi:"dnsCacheConfig"`
	// .
	// Whether this cluster should enable the Google Compute Engine Persistent Disk Container Storage Interface (CSI) Driver. Set `enabled = true` to enable.
	//
	// **Note:** The Compute Engine persistent disk CSI Driver is enabled by default on newly created clusters for the following versions: Linux clusters: GKE version 1.18.10-gke.2100 or later, or 1.19.3-gke.2100 or later.
	GcePersistentDiskCsiDriverConfig *ClusterAddonsConfigGcePersistentDiskCsiDriverConfig `pulumi:"gcePersistentDiskCsiDriverConfig"`
	// The status of the Filestore CSI driver addon,
	// which allows the usage of filestore instance as volumes.
	// It is disabled by default; set `enabled = true` to enable.
	GcpFilestoreCsiDriverConfig *ClusterAddonsConfigGcpFilestoreCsiDriverConfig `pulumi:"gcpFilestoreCsiDriverConfig"`
	// The status of the GCSFuse CSI driver addon,
	// which allows the usage of a gcs bucket as volumes.
	// It is disabled by default for Standard clusters; set `enabled = true` to enable.
	// It is enabled by default for Autopilot clusters with version 1.24 or later; set `enabled = true` to enable it explicitly.
	// See [Enable the Cloud Storage FUSE CSI driver](https://cloud.google.com/kubernetes-engine/docs/how-to/persistent-volumes/cloud-storage-fuse-csi-driver#enable) for more information.
	GcsFuseCsiDriverConfig *ClusterAddonsConfigGcsFuseCsiDriverConfig `pulumi:"gcsFuseCsiDriverConfig"`
	// .
	// The status of the Backup for GKE agent addon. It is disabled by default; Set `enabled = true` to enable.
	GkeBackupAgentConfig *ClusterAddonsConfigGkeBackupAgentConfig `pulumi:"gkeBackupAgentConfig"`
	// The status of the Horizontal Pod Autoscaling
	// addon, which increases or decreases the number of replica pods a replication controller
	// has based on the resource usage of the existing pods.
	// It is enabled by default;
	// set `disabled = true` to disable.
	HorizontalPodAutoscaling *ClusterAddonsConfigHorizontalPodAutoscaling `pulumi:"horizontalPodAutoscaling"`
	// The status of the HTTP (L7) load balancing
	// controller addon, which makes it easy to set up HTTP load balancers for services in a
	// cluster. It is enabled by default; set `disabled = true` to disable.
	HttpLoadBalancing *ClusterAddonsConfigHttpLoadBalancing `pulumi:"httpLoadBalancing"`
	// .
	// Structure is documented below.
	IstioConfig *ClusterAddonsConfigIstioConfig `pulumi:"istioConfig"`
	// .
	// Configuration for the KALM addon, which manages the lifecycle of k8s. It is disabled by default; Set `enabled = true` to enable.
	KalmConfig *ClusterAddonsConfigKalmConfig `pulumi:"kalmConfig"`
	// Whether we should enable the network policy addon
	// for the master.  This must be enabled in order to enable network policy for the nodes.
	// To enable this, you must also define a `networkPolicy` block,
	// otherwise nothing will happen.
	// It can only be disabled if the nodes already do not have network policies enabled.
	// Defaults to disabled; set `disabled = false` to enable.
	NetworkPolicyConfig *ClusterAddonsConfigNetworkPolicyConfig `pulumi:"networkPolicyConfig"`
	// .
	// The status of the Stateful HA addon, which provides automatic configurable failover for stateful applications.
	// It is disabled by default for Standard clusters. Set `enabled = true` to enable.
	//
	// This example `addonsConfig` disables two addons:
	StatefulHaConfig *ClusterAddonsConfigStatefulHaConfig `pulumi:"statefulHaConfig"`
}

// ClusterAddonsConfigInput is an input type that accepts ClusterAddonsConfigArgs and ClusterAddonsConfigOutput values.
// You can construct a concrete instance of `ClusterAddonsConfigInput` via:
//
//	ClusterAddonsConfigArgs{...}
type ClusterAddonsConfigInput interface {
	pulumi.Input

	ToClusterAddonsConfigOutput() ClusterAddonsConfigOutput
	ToClusterAddonsConfigOutputWithContext(context.Context) ClusterAddonsConfigOutput
}

type ClusterAddonsConfigArgs struct {
	// . Structure is documented below.
	CloudrunConfig ClusterAddonsConfigCloudrunConfigPtrInput `pulumi:"cloudrunConfig"`
	// .
	// The status of the ConfigConnector addon. It is disabled by default; Set `enabled = true` to enable.
	ConfigConnectorConfig ClusterAddonsConfigConfigConnectorConfigPtrInput `pulumi:"configConnectorConfig"`
	// .
	// The status of the NodeLocal DNSCache addon. It is disabled by default.
	// Set `enabled = true` to enable.
	//
	// **Enabling/Disabling NodeLocal DNSCache in an existing cluster is a disruptive operation.
	// All cluster nodes running GKE 1.15 and higher are recreated.**
	DnsCacheConfig ClusterAddonsConfigDnsCacheConfigPtrInput `pulumi:"dnsCacheConfig"`
	// .
	// Whether this cluster should enable the Google Compute Engine Persistent Disk Container Storage Interface (CSI) Driver. Set `enabled = true` to enable.
	//
	// **Note:** The Compute Engine persistent disk CSI Driver is enabled by default on newly created clusters for the following versions: Linux clusters: GKE version 1.18.10-gke.2100 or later, or 1.19.3-gke.2100 or later.
	GcePersistentDiskCsiDriverConfig ClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrInput `pulumi:"gcePersistentDiskCsiDriverConfig"`
	// The status of the Filestore CSI driver addon,
	// which allows the usage of filestore instance as volumes.
	// It is disabled by default; set `enabled = true` to enable.
	GcpFilestoreCsiDriverConfig ClusterAddonsConfigGcpFilestoreCsiDriverConfigPtrInput `pulumi:"gcpFilestoreCsiDriverConfig"`
	// The status of the GCSFuse CSI driver addon,
	// which allows the usage of a gcs bucket as volumes.
	// It is disabled by default for Standard clusters; set `enabled = true` to enable.
	// It is enabled by default for Autopilot clusters with version 1.24 or later; set `enabled = true` to enable it explicitly.
	// See [Enable the Cloud Storage FUSE CSI driver](https://cloud.google.com/kubernetes-engine/docs/how-to/persistent-volumes/cloud-storage-fuse-csi-driver#enable) for more information.
	GcsFuseCsiDriverConfig ClusterAddonsConfigGcsFuseCsiDriverConfigPtrInput `pulumi:"gcsFuseCsiDriverConfig"`
	// .
	// The status of the Backup for GKE agent addon. It is disabled by default; Set `enabled = true` to enable.
	GkeBackupAgentConfig ClusterAddonsConfigGkeBackupAgentConfigPtrInput `pulumi:"gkeBackupAgentConfig"`
	// The status of the Horizontal Pod Autoscaling
	// addon, which increases or decreases the number of replica pods a replication controller
	// has based on the resource usage of the existing pods.
	// It is enabled by default;
	// set `disabled = true` to disable.
	HorizontalPodAutoscaling ClusterAddonsConfigHorizontalPodAutoscalingPtrInput `pulumi:"horizontalPodAutoscaling"`
	// The status of the HTTP (L7) load balancing
	// controller addon, which makes it easy to set up HTTP load balancers for services in a
	// cluster. It is enabled by default; set `disabled = true` to disable.
	HttpLoadBalancing ClusterAddonsConfigHttpLoadBalancingPtrInput `pulumi:"httpLoadBalancing"`
	// .
	// Structure is documented below.
	IstioConfig ClusterAddonsConfigIstioConfigPtrInput `pulumi:"istioConfig"`
	// .
	// Configuration for the KALM addon, which manages the lifecycle of k8s. It is disabled by default; Set `enabled = true` to enable.
	KalmConfig ClusterAddonsConfigKalmConfigPtrInput `pulumi:"kalmConfig"`
	// Whether we should enable the network policy addon
	// for the master.  This must be enabled in order to enable network policy for the nodes.
	// To enable this, you must also define a `networkPolicy` block,
	// otherwise nothing will happen.
	// It can only be disabled if the nodes already do not have network policies enabled.
	// Defaults to disabled; set `disabled = false` to enable.
	NetworkPolicyConfig ClusterAddonsConfigNetworkPolicyConfigPtrInput `pulumi:"networkPolicyConfig"`
	// .
	// The status of the Stateful HA addon, which provides automatic configurable failover for stateful applications.
	// It is disabled by default for Standard clusters. Set `enabled = true` to enable.
	//
	// This example `addonsConfig` disables two addons:
	StatefulHaConfig ClusterAddonsConfigStatefulHaConfigPtrInput `pulumi:"statefulHaConfig"`
}

func (ClusterAddonsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfig)(nil)).Elem()
}

func (i ClusterAddonsConfigArgs) ToClusterAddonsConfigOutput() ClusterAddonsConfigOutput {
	return i.ToClusterAddonsConfigOutputWithContext(context.Background())
}

func (i ClusterAddonsConfigArgs) ToClusterAddonsConfigOutputWithContext(ctx context.Context) ClusterAddonsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigOutput)
}

func (i ClusterAddonsConfigArgs) ToClusterAddonsConfigPtrOutput() ClusterAddonsConfigPtrOutput {
	return i.ToClusterAddonsConfigPtrOutputWithContext(context.Background())
}

func (i ClusterAddonsConfigArgs) ToClusterAddonsConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigOutput).ToClusterAddonsConfigPtrOutputWithContext(ctx)
}

// ClusterAddonsConfigPtrInput is an input type that accepts ClusterAddonsConfigArgs, ClusterAddonsConfigPtr and ClusterAddonsConfigPtrOutput values.
// You can construct a concrete instance of `ClusterAddonsConfigPtrInput` via:
//
//	        ClusterAddonsConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterAddonsConfigPtrInput interface {
	pulumi.Input

	ToClusterAddonsConfigPtrOutput() ClusterAddonsConfigPtrOutput
	ToClusterAddonsConfigPtrOutputWithContext(context.Context) ClusterAddonsConfigPtrOutput
}

type clusterAddonsConfigPtrType ClusterAddonsConfigArgs

func ClusterAddonsConfigPtr(v *ClusterAddonsConfigArgs) ClusterAddonsConfigPtrInput {
	return (*clusterAddonsConfigPtrType)(v)
}

func (*clusterAddonsConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAddonsConfig)(nil)).Elem()
}

func (i *clusterAddonsConfigPtrType) ToClusterAddonsConfigPtrOutput() ClusterAddonsConfigPtrOutput {
	return i.ToClusterAddonsConfigPtrOutputWithContext(context.Background())
}

func (i *clusterAddonsConfigPtrType) ToClusterAddonsConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigPtrOutput)
}

type ClusterAddonsConfigOutput struct{ *pulumi.OutputState }

func (ClusterAddonsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfig)(nil)).Elem()
}

func (o ClusterAddonsConfigOutput) ToClusterAddonsConfigOutput() ClusterAddonsConfigOutput {
	return o
}

func (o ClusterAddonsConfigOutput) ToClusterAddonsConfigOutputWithContext(ctx context.Context) ClusterAddonsConfigOutput {
	return o
}

func (o ClusterAddonsConfigOutput) ToClusterAddonsConfigPtrOutput() ClusterAddonsConfigPtrOutput {
	return o.ToClusterAddonsConfigPtrOutputWithContext(context.Background())
}

func (o ClusterAddonsConfigOutput) ToClusterAddonsConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterAddonsConfig) *ClusterAddonsConfig {
		return &v
	}).(ClusterAddonsConfigPtrOutput)
}

// . Structure is documented below.
func (o ClusterAddonsConfigOutput) CloudrunConfig() ClusterAddonsConfigCloudrunConfigPtrOutput {
	return o.ApplyT(func(v ClusterAddonsConfig) *ClusterAddonsConfigCloudrunConfig { return v.CloudrunConfig }).(ClusterAddonsConfigCloudrunConfigPtrOutput)
}

// .
// The status of the ConfigConnector addon. It is disabled by default; Set `enabled = true` to enable.
func (o ClusterAddonsConfigOutput) ConfigConnectorConfig() ClusterAddonsConfigConfigConnectorConfigPtrOutput {
	return o.ApplyT(func(v ClusterAddonsConfig) *ClusterAddonsConfigConfigConnectorConfig { return v.ConfigConnectorConfig }).(ClusterAddonsConfigConfigConnectorConfigPtrOutput)
}

// .
// The status of the NodeLocal DNSCache addon. It is disabled by default.
// Set `enabled = true` to enable.
//
// **Enabling/Disabling NodeLocal DNSCache in an existing cluster is a disruptive operation.
// All cluster nodes running GKE 1.15 and higher are recreated.**
func (o ClusterAddonsConfigOutput) DnsCacheConfig() ClusterAddonsConfigDnsCacheConfigPtrOutput {
	return o.ApplyT(func(v ClusterAddonsConfig) *ClusterAddonsConfigDnsCacheConfig { return v.DnsCacheConfig }).(ClusterAddonsConfigDnsCacheConfigPtrOutput)
}

// .
// Whether this cluster should enable the Google Compute Engine Persistent Disk Container Storage Interface (CSI) Driver. Set `enabled = true` to enable.
//
// **Note:** The Compute Engine persistent disk CSI Driver is enabled by default on newly created clusters for the following versions: Linux clusters: GKE version 1.18.10-gke.2100 or later, or 1.19.3-gke.2100 or later.
func (o ClusterAddonsConfigOutput) GcePersistentDiskCsiDriverConfig() ClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrOutput {
	return o.ApplyT(func(v ClusterAddonsConfig) *ClusterAddonsConfigGcePersistentDiskCsiDriverConfig {
		return v.GcePersistentDiskCsiDriverConfig
	}).(ClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrOutput)
}

// The status of the Filestore CSI driver addon,
// which allows the usage of filestore instance as volumes.
// It is disabled by default; set `enabled = true` to enable.
func (o ClusterAddonsConfigOutput) GcpFilestoreCsiDriverConfig() ClusterAddonsConfigGcpFilestoreCsiDriverConfigPtrOutput {
	return o.ApplyT(func(v ClusterAddonsConfig) *ClusterAddonsConfigGcpFilestoreCsiDriverConfig {
		return v.GcpFilestoreCsiDriverConfig
	}).(ClusterAddonsConfigGcpFilestoreCsiDriverConfigPtrOutput)
}

// The status of the GCSFuse CSI driver addon,
// which allows the usage of a gcs bucket as volumes.
// It is disabled by default for Standard clusters; set `enabled = true` to enable.
// It is enabled by default for Autopilot clusters with version 1.24 or later; set `enabled = true` to enable it explicitly.
// See [Enable the Cloud Storage FUSE CSI driver](https://cloud.google.com/kubernetes-engine/docs/how-to/persistent-volumes/cloud-storage-fuse-csi-driver#enable) for more information.
func (o ClusterAddonsConfigOutput) GcsFuseCsiDriverConfig() ClusterAddonsConfigGcsFuseCsiDriverConfigPtrOutput {
	return o.ApplyT(func(v ClusterAddonsConfig) *ClusterAddonsConfigGcsFuseCsiDriverConfig {
		return v.GcsFuseCsiDriverConfig
	}).(ClusterAddonsConfigGcsFuseCsiDriverConfigPtrOutput)
}

// .
// The status of the Backup for GKE agent addon. It is disabled by default; Set `enabled = true` to enable.
func (o ClusterAddonsConfigOutput) GkeBackupAgentConfig() ClusterAddonsConfigGkeBackupAgentConfigPtrOutput {
	return o.ApplyT(func(v ClusterAddonsConfig) *ClusterAddonsConfigGkeBackupAgentConfig { return v.GkeBackupAgentConfig }).(ClusterAddonsConfigGkeBackupAgentConfigPtrOutput)
}

// The status of the Horizontal Pod Autoscaling
// addon, which increases or decreases the number of replica pods a replication controller
// has based on the resource usage of the existing pods.
// It is enabled by default;
// set `disabled = true` to disable.
func (o ClusterAddonsConfigOutput) HorizontalPodAutoscaling() ClusterAddonsConfigHorizontalPodAutoscalingPtrOutput {
	return o.ApplyT(func(v ClusterAddonsConfig) *ClusterAddonsConfigHorizontalPodAutoscaling {
		return v.HorizontalPodAutoscaling
	}).(ClusterAddonsConfigHorizontalPodAutoscalingPtrOutput)
}

// The status of the HTTP (L7) load balancing
// controller addon, which makes it easy to set up HTTP load balancers for services in a
// cluster. It is enabled by default; set `disabled = true` to disable.
func (o ClusterAddonsConfigOutput) HttpLoadBalancing() ClusterAddonsConfigHttpLoadBalancingPtrOutput {
	return o.ApplyT(func(v ClusterAddonsConfig) *ClusterAddonsConfigHttpLoadBalancing { return v.HttpLoadBalancing }).(ClusterAddonsConfigHttpLoadBalancingPtrOutput)
}

// .
// Structure is documented below.
func (o ClusterAddonsConfigOutput) IstioConfig() ClusterAddonsConfigIstioConfigPtrOutput {
	return o.ApplyT(func(v ClusterAddonsConfig) *ClusterAddonsConfigIstioConfig { return v.IstioConfig }).(ClusterAddonsConfigIstioConfigPtrOutput)
}

// .
// Configuration for the KALM addon, which manages the lifecycle of k8s. It is disabled by default; Set `enabled = true` to enable.
func (o ClusterAddonsConfigOutput) KalmConfig() ClusterAddonsConfigKalmConfigPtrOutput {
	return o.ApplyT(func(v ClusterAddonsConfig) *ClusterAddonsConfigKalmConfig { return v.KalmConfig }).(ClusterAddonsConfigKalmConfigPtrOutput)
}

// Whether we should enable the network policy addon
// for the master.  This must be enabled in order to enable network policy for the nodes.
// To enable this, you must also define a `networkPolicy` block,
// otherwise nothing will happen.
// It can only be disabled if the nodes already do not have network policies enabled.
// Defaults to disabled; set `disabled = false` to enable.
func (o ClusterAddonsConfigOutput) NetworkPolicyConfig() ClusterAddonsConfigNetworkPolicyConfigPtrOutput {
	return o.ApplyT(func(v ClusterAddonsConfig) *ClusterAddonsConfigNetworkPolicyConfig { return v.NetworkPolicyConfig }).(ClusterAddonsConfigNetworkPolicyConfigPtrOutput)
}

// .
// The status of the Stateful HA addon, which provides automatic configurable failover for stateful applications.
// It is disabled by default for Standard clusters. Set `enabled = true` to enable.
//
// This example `addonsConfig` disables two addons:
func (o ClusterAddonsConfigOutput) StatefulHaConfig() ClusterAddonsConfigStatefulHaConfigPtrOutput {
	return o.ApplyT(func(v ClusterAddonsConfig) *ClusterAddonsConfigStatefulHaConfig { return v.StatefulHaConfig }).(ClusterAddonsConfigStatefulHaConfigPtrOutput)
}

type ClusterAddonsConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterAddonsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAddonsConfig)(nil)).Elem()
}

func (o ClusterAddonsConfigPtrOutput) ToClusterAddonsConfigPtrOutput() ClusterAddonsConfigPtrOutput {
	return o
}

func (o ClusterAddonsConfigPtrOutput) ToClusterAddonsConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigPtrOutput {
	return o
}

func (o ClusterAddonsConfigPtrOutput) Elem() ClusterAddonsConfigOutput {
	return o.ApplyT(func(v *ClusterAddonsConfig) ClusterAddonsConfig {
		if v != nil {
			return *v
		}
		var ret ClusterAddonsConfig
		return ret
	}).(ClusterAddonsConfigOutput)
}

// . Structure is documented below.
func (o ClusterAddonsConfigPtrOutput) CloudrunConfig() ClusterAddonsConfigCloudrunConfigPtrOutput {
	return o.ApplyT(func(v *ClusterAddonsConfig) *ClusterAddonsConfigCloudrunConfig {
		if v == nil {
			return nil
		}
		return v.CloudrunConfig
	}).(ClusterAddonsConfigCloudrunConfigPtrOutput)
}

// .
// The status of the ConfigConnector addon. It is disabled by default; Set `enabled = true` to enable.
func (o ClusterAddonsConfigPtrOutput) ConfigConnectorConfig() ClusterAddonsConfigConfigConnectorConfigPtrOutput {
	return o.ApplyT(func(v *ClusterAddonsConfig) *ClusterAddonsConfigConfigConnectorConfig {
		if v == nil {
			return nil
		}
		return v.ConfigConnectorConfig
	}).(ClusterAddonsConfigConfigConnectorConfigPtrOutput)
}

// .
// The status of the NodeLocal DNSCache addon. It is disabled by default.
// Set `enabled = true` to enable.
//
// **Enabling/Disabling NodeLocal DNSCache in an existing cluster is a disruptive operation.
// All cluster nodes running GKE 1.15 and higher are recreated.**
func (o ClusterAddonsConfigPtrOutput) DnsCacheConfig() ClusterAddonsConfigDnsCacheConfigPtrOutput {
	return o.ApplyT(func(v *ClusterAddonsConfig) *ClusterAddonsConfigDnsCacheConfig {
		if v == nil {
			return nil
		}
		return v.DnsCacheConfig
	}).(ClusterAddonsConfigDnsCacheConfigPtrOutput)
}

// .
// Whether this cluster should enable the Google Compute Engine Persistent Disk Container Storage Interface (CSI) Driver. Set `enabled = true` to enable.
//
// **Note:** The Compute Engine persistent disk CSI Driver is enabled by default on newly created clusters for the following versions: Linux clusters: GKE version 1.18.10-gke.2100 or later, or 1.19.3-gke.2100 or later.
func (o ClusterAddonsConfigPtrOutput) GcePersistentDiskCsiDriverConfig() ClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrOutput {
	return o.ApplyT(func(v *ClusterAddonsConfig) *ClusterAddonsConfigGcePersistentDiskCsiDriverConfig {
		if v == nil {
			return nil
		}
		return v.GcePersistentDiskCsiDriverConfig
	}).(ClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrOutput)
}

// The status of the Filestore CSI driver addon,
// which allows the usage of filestore instance as volumes.
// It is disabled by default; set `enabled = true` to enable.
func (o ClusterAddonsConfigPtrOutput) GcpFilestoreCsiDriverConfig() ClusterAddonsConfigGcpFilestoreCsiDriverConfigPtrOutput {
	return o.ApplyT(func(v *ClusterAddonsConfig) *ClusterAddonsConfigGcpFilestoreCsiDriverConfig {
		if v == nil {
			return nil
		}
		return v.GcpFilestoreCsiDriverConfig
	}).(ClusterAddonsConfigGcpFilestoreCsiDriverConfigPtrOutput)
}

// The status of the GCSFuse CSI driver addon,
// which allows the usage of a gcs bucket as volumes.
// It is disabled by default for Standard clusters; set `enabled = true` to enable.
// It is enabled by default for Autopilot clusters with version 1.24 or later; set `enabled = true` to enable it explicitly.
// See [Enable the Cloud Storage FUSE CSI driver](https://cloud.google.com/kubernetes-engine/docs/how-to/persistent-volumes/cloud-storage-fuse-csi-driver#enable) for more information.
func (o ClusterAddonsConfigPtrOutput) GcsFuseCsiDriverConfig() ClusterAddonsConfigGcsFuseCsiDriverConfigPtrOutput {
	return o.ApplyT(func(v *ClusterAddonsConfig) *ClusterAddonsConfigGcsFuseCsiDriverConfig {
		if v == nil {
			return nil
		}
		return v.GcsFuseCsiDriverConfig
	}).(ClusterAddonsConfigGcsFuseCsiDriverConfigPtrOutput)
}

// .
// The status of the Backup for GKE agent addon. It is disabled by default; Set `enabled = true` to enable.
func (o ClusterAddonsConfigPtrOutput) GkeBackupAgentConfig() ClusterAddonsConfigGkeBackupAgentConfigPtrOutput {
	return o.ApplyT(func(v *ClusterAddonsConfig) *ClusterAddonsConfigGkeBackupAgentConfig {
		if v == nil {
			return nil
		}
		return v.GkeBackupAgentConfig
	}).(ClusterAddonsConfigGkeBackupAgentConfigPtrOutput)
}

// The status of the Horizontal Pod Autoscaling
// addon, which increases or decreases the number of replica pods a replication controller
// has based on the resource usage of the existing pods.
// It is enabled by default;
// set `disabled = true` to disable.
func (o ClusterAddonsConfigPtrOutput) HorizontalPodAutoscaling() ClusterAddonsConfigHorizontalPodAutoscalingPtrOutput {
	return o.ApplyT(func(v *ClusterAddonsConfig) *ClusterAddonsConfigHorizontalPodAutoscaling {
		if v == nil {
			return nil
		}
		return v.HorizontalPodAutoscaling
	}).(ClusterAddonsConfigHorizontalPodAutoscalingPtrOutput)
}

// The status of the HTTP (L7) load balancing
// controller addon, which makes it easy to set up HTTP load balancers for services in a
// cluster. It is enabled by default; set `disabled = true` to disable.
func (o ClusterAddonsConfigPtrOutput) HttpLoadBalancing() ClusterAddonsConfigHttpLoadBalancingPtrOutput {
	return o.ApplyT(func(v *ClusterAddonsConfig) *ClusterAddonsConfigHttpLoadBalancing {
		if v == nil {
			return nil
		}
		return v.HttpLoadBalancing
	}).(ClusterAddonsConfigHttpLoadBalancingPtrOutput)
}

// .
// Structure is documented below.
func (o ClusterAddonsConfigPtrOutput) IstioConfig() ClusterAddonsConfigIstioConfigPtrOutput {
	return o.ApplyT(func(v *ClusterAddonsConfig) *ClusterAddonsConfigIstioConfig {
		if v == nil {
			return nil
		}
		return v.IstioConfig
	}).(ClusterAddonsConfigIstioConfigPtrOutput)
}

// .
// Configuration for the KALM addon, which manages the lifecycle of k8s. It is disabled by default; Set `enabled = true` to enable.
func (o ClusterAddonsConfigPtrOutput) KalmConfig() ClusterAddonsConfigKalmConfigPtrOutput {
	return o.ApplyT(func(v *ClusterAddonsConfig) *ClusterAddonsConfigKalmConfig {
		if v == nil {
			return nil
		}
		return v.KalmConfig
	}).(ClusterAddonsConfigKalmConfigPtrOutput)
}

// Whether we should enable the network policy addon
// for the master.  This must be enabled in order to enable network policy for the nodes.
// To enable this, you must also define a `networkPolicy` block,
// otherwise nothing will happen.
// It can only be disabled if the nodes already do not have network policies enabled.
// Defaults to disabled; set `disabled = false` to enable.
func (o ClusterAddonsConfigPtrOutput) NetworkPolicyConfig() ClusterAddonsConfigNetworkPolicyConfigPtrOutput {
	return o.ApplyT(func(v *ClusterAddonsConfig) *ClusterAddonsConfigNetworkPolicyConfig {
		if v == nil {
			return nil
		}
		return v.NetworkPolicyConfig
	}).(ClusterAddonsConfigNetworkPolicyConfigPtrOutput)
}

// .
// The status of the Stateful HA addon, which provides automatic configurable failover for stateful applications.
// It is disabled by default for Standard clusters. Set `enabled = true` to enable.
//
// This example `addonsConfig` disables two addons:
func (o ClusterAddonsConfigPtrOutput) StatefulHaConfig() ClusterAddonsConfigStatefulHaConfigPtrOutput {
	return o.ApplyT(func(v *ClusterAddonsConfig) *ClusterAddonsConfigStatefulHaConfig {
		if v == nil {
			return nil
		}
		return v.StatefulHaConfig
	}).(ClusterAddonsConfigStatefulHaConfigPtrOutput)
}

type ClusterAddonsConfigCloudrunConfig struct {
	// The status of the CloudRun addon. It is disabled by default. Set `disabled=false` to enable.
	Disabled bool `pulumi:"disabled"`
	// The load balancer type of CloudRun ingress service. It is external load balancer by default.
	// Set `load_balancer_type=LOAD_BALANCER_TYPE_INTERNAL` to configure it as internal load balancer.
	LoadBalancerType *string `pulumi:"loadBalancerType"`
}

// ClusterAddonsConfigCloudrunConfigInput is an input type that accepts ClusterAddonsConfigCloudrunConfigArgs and ClusterAddonsConfigCloudrunConfigOutput values.
// You can construct a concrete instance of `ClusterAddonsConfigCloudrunConfigInput` via:
//
//	ClusterAddonsConfigCloudrunConfigArgs{...}
type ClusterAddonsConfigCloudrunConfigInput interface {
	pulumi.Input

	ToClusterAddonsConfigCloudrunConfigOutput() ClusterAddonsConfigCloudrunConfigOutput
	ToClusterAddonsConfigCloudrunConfigOutputWithContext(context.Context) ClusterAddonsConfigCloudrunConfigOutput
}

type ClusterAddonsConfigCloudrunConfigArgs struct {
	// The status of the CloudRun addon. It is disabled by default. Set `disabled=false` to enable.
	Disabled pulumi.BoolInput `pulumi:"disabled"`
	// The load balancer type of CloudRun ingress service. It is external load balancer by default.
	// Set `load_balancer_type=LOAD_BALANCER_TYPE_INTERNAL` to configure it as internal load balancer.
	LoadBalancerType pulumi.StringPtrInput `pulumi:"loadBalancerType"`
}

func (ClusterAddonsConfigCloudrunConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfigCloudrunConfig)(nil)).Elem()
}

func (i ClusterAddonsConfigCloudrunConfigArgs) ToClusterAddonsConfigCloudrunConfigOutput() ClusterAddonsConfigCloudrunConfigOutput {
	return i.ToClusterAddonsConfigCloudrunConfigOutputWithContext(context.Background())
}

func (i ClusterAddonsConfigCloudrunConfigArgs) ToClusterAddonsConfigCloudrunConfigOutputWithContext(ctx context.Context) ClusterAddonsConfigCloudrunConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigCloudrunConfigOutput)
}

func (i ClusterAddonsConfigCloudrunConfigArgs) ToClusterAddonsConfigCloudrunConfigPtrOutput() ClusterAddonsConfigCloudrunConfigPtrOutput {
	return i.ToClusterAddonsConfigCloudrunConfigPtrOutputWithContext(context.Background())
}

func (i ClusterAddonsConfigCloudrunConfigArgs) ToClusterAddonsConfigCloudrunConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigCloudrunConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigCloudrunConfigOutput).ToClusterAddonsConfigCloudrunConfigPtrOutputWithContext(ctx)
}

// ClusterAddonsConfigCloudrunConfigPtrInput is an input type that accepts ClusterAddonsConfigCloudrunConfigArgs, ClusterAddonsConfigCloudrunConfigPtr and ClusterAddonsConfigCloudrunConfigPtrOutput values.
// You can construct a concrete instance of `ClusterAddonsConfigCloudrunConfigPtrInput` via:
//
//	        ClusterAddonsConfigCloudrunConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterAddonsConfigCloudrunConfigPtrInput interface {
	pulumi.Input

	ToClusterAddonsConfigCloudrunConfigPtrOutput() ClusterAddonsConfigCloudrunConfigPtrOutput
	ToClusterAddonsConfigCloudrunConfigPtrOutputWithContext(context.Context) ClusterAddonsConfigCloudrunConfigPtrOutput
}

type clusterAddonsConfigCloudrunConfigPtrType ClusterAddonsConfigCloudrunConfigArgs

func ClusterAddonsConfigCloudrunConfigPtr(v *ClusterAddonsConfigCloudrunConfigArgs) ClusterAddonsConfigCloudrunConfigPtrInput {
	return (*clusterAddonsConfigCloudrunConfigPtrType)(v)
}

func (*clusterAddonsConfigCloudrunConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAddonsConfigCloudrunConfig)(nil)).Elem()
}

func (i *clusterAddonsConfigCloudrunConfigPtrType) ToClusterAddonsConfigCloudrunConfigPtrOutput() ClusterAddonsConfigCloudrunConfigPtrOutput {
	return i.ToClusterAddonsConfigCloudrunConfigPtrOutputWithContext(context.Background())
}

func (i *clusterAddonsConfigCloudrunConfigPtrType) ToClusterAddonsConfigCloudrunConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigCloudrunConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigCloudrunConfigPtrOutput)
}

type ClusterAddonsConfigCloudrunConfigOutput struct{ *pulumi.OutputState }

func (ClusterAddonsConfigCloudrunConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfigCloudrunConfig)(nil)).Elem()
}

func (o ClusterAddonsConfigCloudrunConfigOutput) ToClusterAddonsConfigCloudrunConfigOutput() ClusterAddonsConfigCloudrunConfigOutput {
	return o
}

func (o ClusterAddonsConfigCloudrunConfigOutput) ToClusterAddonsConfigCloudrunConfigOutputWithContext(ctx context.Context) ClusterAddonsConfigCloudrunConfigOutput {
	return o
}

func (o ClusterAddonsConfigCloudrunConfigOutput) ToClusterAddonsConfigCloudrunConfigPtrOutput() ClusterAddonsConfigCloudrunConfigPtrOutput {
	return o.ToClusterAddonsConfigCloudrunConfigPtrOutputWithContext(context.Background())
}

func (o ClusterAddonsConfigCloudrunConfigOutput) ToClusterAddonsConfigCloudrunConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigCloudrunConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterAddonsConfigCloudrunConfig) *ClusterAddonsConfigCloudrunConfig {
		return &v
	}).(ClusterAddonsConfigCloudrunConfigPtrOutput)
}

// The status of the CloudRun addon. It is disabled by default. Set `disabled=false` to enable.
func (o ClusterAddonsConfigCloudrunConfigOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterAddonsConfigCloudrunConfig) bool { return v.Disabled }).(pulumi.BoolOutput)
}

// The load balancer type of CloudRun ingress service. It is external load balancer by default.
// Set `load_balancer_type=LOAD_BALANCER_TYPE_INTERNAL` to configure it as internal load balancer.
func (o ClusterAddonsConfigCloudrunConfigOutput) LoadBalancerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterAddonsConfigCloudrunConfig) *string { return v.LoadBalancerType }).(pulumi.StringPtrOutput)
}

type ClusterAddonsConfigCloudrunConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterAddonsConfigCloudrunConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAddonsConfigCloudrunConfig)(nil)).Elem()
}

func (o ClusterAddonsConfigCloudrunConfigPtrOutput) ToClusterAddonsConfigCloudrunConfigPtrOutput() ClusterAddonsConfigCloudrunConfigPtrOutput {
	return o
}

func (o ClusterAddonsConfigCloudrunConfigPtrOutput) ToClusterAddonsConfigCloudrunConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigCloudrunConfigPtrOutput {
	return o
}

func (o ClusterAddonsConfigCloudrunConfigPtrOutput) Elem() ClusterAddonsConfigCloudrunConfigOutput {
	return o.ApplyT(func(v *ClusterAddonsConfigCloudrunConfig) ClusterAddonsConfigCloudrunConfig {
		if v != nil {
			return *v
		}
		var ret ClusterAddonsConfigCloudrunConfig
		return ret
	}).(ClusterAddonsConfigCloudrunConfigOutput)
}

// The status of the CloudRun addon. It is disabled by default. Set `disabled=false` to enable.
func (o ClusterAddonsConfigCloudrunConfigPtrOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterAddonsConfigCloudrunConfig) *bool {
		if v == nil {
			return nil
		}
		return &v.Disabled
	}).(pulumi.BoolPtrOutput)
}

// The load balancer type of CloudRun ingress service. It is external load balancer by default.
// Set `load_balancer_type=LOAD_BALANCER_TYPE_INTERNAL` to configure it as internal load balancer.
func (o ClusterAddonsConfigCloudrunConfigPtrOutput) LoadBalancerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterAddonsConfigCloudrunConfig) *string {
		if v == nil {
			return nil
		}
		return v.LoadBalancerType
	}).(pulumi.StringPtrOutput)
}

type ClusterAddonsConfigConfigConnectorConfig struct {
	Enabled bool `pulumi:"enabled"`
}

// ClusterAddonsConfigConfigConnectorConfigInput is an input type that accepts ClusterAddonsConfigConfigConnectorConfigArgs and ClusterAddonsConfigConfigConnectorConfigOutput values.
// You can construct a concrete instance of `ClusterAddonsConfigConfigConnectorConfigInput` via:
//
//	ClusterAddonsConfigConfigConnectorConfigArgs{...}
type ClusterAddonsConfigConfigConnectorConfigInput interface {
	pulumi.Input

	ToClusterAddonsConfigConfigConnectorConfigOutput() ClusterAddonsConfigConfigConnectorConfigOutput
	ToClusterAddonsConfigConfigConnectorConfigOutputWithContext(context.Context) ClusterAddonsConfigConfigConnectorConfigOutput
}

type ClusterAddonsConfigConfigConnectorConfigArgs struct {
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (ClusterAddonsConfigConfigConnectorConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfigConfigConnectorConfig)(nil)).Elem()
}

func (i ClusterAddonsConfigConfigConnectorConfigArgs) ToClusterAddonsConfigConfigConnectorConfigOutput() ClusterAddonsConfigConfigConnectorConfigOutput {
	return i.ToClusterAddonsConfigConfigConnectorConfigOutputWithContext(context.Background())
}

func (i ClusterAddonsConfigConfigConnectorConfigArgs) ToClusterAddonsConfigConfigConnectorConfigOutputWithContext(ctx context.Context) ClusterAddonsConfigConfigConnectorConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigConfigConnectorConfigOutput)
}

func (i ClusterAddonsConfigConfigConnectorConfigArgs) ToClusterAddonsConfigConfigConnectorConfigPtrOutput() ClusterAddonsConfigConfigConnectorConfigPtrOutput {
	return i.ToClusterAddonsConfigConfigConnectorConfigPtrOutputWithContext(context.Background())
}

func (i ClusterAddonsConfigConfigConnectorConfigArgs) ToClusterAddonsConfigConfigConnectorConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigConfigConnectorConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigConfigConnectorConfigOutput).ToClusterAddonsConfigConfigConnectorConfigPtrOutputWithContext(ctx)
}

// ClusterAddonsConfigConfigConnectorConfigPtrInput is an input type that accepts ClusterAddonsConfigConfigConnectorConfigArgs, ClusterAddonsConfigConfigConnectorConfigPtr and ClusterAddonsConfigConfigConnectorConfigPtrOutput values.
// You can construct a concrete instance of `ClusterAddonsConfigConfigConnectorConfigPtrInput` via:
//
//	        ClusterAddonsConfigConfigConnectorConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterAddonsConfigConfigConnectorConfigPtrInput interface {
	pulumi.Input

	ToClusterAddonsConfigConfigConnectorConfigPtrOutput() ClusterAddonsConfigConfigConnectorConfigPtrOutput
	ToClusterAddonsConfigConfigConnectorConfigPtrOutputWithContext(context.Context) ClusterAddonsConfigConfigConnectorConfigPtrOutput
}

type clusterAddonsConfigConfigConnectorConfigPtrType ClusterAddonsConfigConfigConnectorConfigArgs

func ClusterAddonsConfigConfigConnectorConfigPtr(v *ClusterAddonsConfigConfigConnectorConfigArgs) ClusterAddonsConfigConfigConnectorConfigPtrInput {
	return (*clusterAddonsConfigConfigConnectorConfigPtrType)(v)
}

func (*clusterAddonsConfigConfigConnectorConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAddonsConfigConfigConnectorConfig)(nil)).Elem()
}

func (i *clusterAddonsConfigConfigConnectorConfigPtrType) ToClusterAddonsConfigConfigConnectorConfigPtrOutput() ClusterAddonsConfigConfigConnectorConfigPtrOutput {
	return i.ToClusterAddonsConfigConfigConnectorConfigPtrOutputWithContext(context.Background())
}

func (i *clusterAddonsConfigConfigConnectorConfigPtrType) ToClusterAddonsConfigConfigConnectorConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigConfigConnectorConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigConfigConnectorConfigPtrOutput)
}

type ClusterAddonsConfigConfigConnectorConfigOutput struct{ *pulumi.OutputState }

func (ClusterAddonsConfigConfigConnectorConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfigConfigConnectorConfig)(nil)).Elem()
}

func (o ClusterAddonsConfigConfigConnectorConfigOutput) ToClusterAddonsConfigConfigConnectorConfigOutput() ClusterAddonsConfigConfigConnectorConfigOutput {
	return o
}

func (o ClusterAddonsConfigConfigConnectorConfigOutput) ToClusterAddonsConfigConfigConnectorConfigOutputWithContext(ctx context.Context) ClusterAddonsConfigConfigConnectorConfigOutput {
	return o
}

func (o ClusterAddonsConfigConfigConnectorConfigOutput) ToClusterAddonsConfigConfigConnectorConfigPtrOutput() ClusterAddonsConfigConfigConnectorConfigPtrOutput {
	return o.ToClusterAddonsConfigConfigConnectorConfigPtrOutputWithContext(context.Background())
}

func (o ClusterAddonsConfigConfigConnectorConfigOutput) ToClusterAddonsConfigConfigConnectorConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigConfigConnectorConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterAddonsConfigConfigConnectorConfig) *ClusterAddonsConfigConfigConnectorConfig {
		return &v
	}).(ClusterAddonsConfigConfigConnectorConfigPtrOutput)
}

func (o ClusterAddonsConfigConfigConnectorConfigOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterAddonsConfigConfigConnectorConfig) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type ClusterAddonsConfigConfigConnectorConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterAddonsConfigConfigConnectorConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAddonsConfigConfigConnectorConfig)(nil)).Elem()
}

func (o ClusterAddonsConfigConfigConnectorConfigPtrOutput) ToClusterAddonsConfigConfigConnectorConfigPtrOutput() ClusterAddonsConfigConfigConnectorConfigPtrOutput {
	return o
}

func (o ClusterAddonsConfigConfigConnectorConfigPtrOutput) ToClusterAddonsConfigConfigConnectorConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigConfigConnectorConfigPtrOutput {
	return o
}

func (o ClusterAddonsConfigConfigConnectorConfigPtrOutput) Elem() ClusterAddonsConfigConfigConnectorConfigOutput {
	return o.ApplyT(func(v *ClusterAddonsConfigConfigConnectorConfig) ClusterAddonsConfigConfigConnectorConfig {
		if v != nil {
			return *v
		}
		var ret ClusterAddonsConfigConfigConnectorConfig
		return ret
	}).(ClusterAddonsConfigConfigConnectorConfigOutput)
}

func (o ClusterAddonsConfigConfigConnectorConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterAddonsConfigConfigConnectorConfig) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type ClusterAddonsConfigDnsCacheConfig struct {
	Enabled bool `pulumi:"enabled"`
}

// ClusterAddonsConfigDnsCacheConfigInput is an input type that accepts ClusterAddonsConfigDnsCacheConfigArgs and ClusterAddonsConfigDnsCacheConfigOutput values.
// You can construct a concrete instance of `ClusterAddonsConfigDnsCacheConfigInput` via:
//
//	ClusterAddonsConfigDnsCacheConfigArgs{...}
type ClusterAddonsConfigDnsCacheConfigInput interface {
	pulumi.Input

	ToClusterAddonsConfigDnsCacheConfigOutput() ClusterAddonsConfigDnsCacheConfigOutput
	ToClusterAddonsConfigDnsCacheConfigOutputWithContext(context.Context) ClusterAddonsConfigDnsCacheConfigOutput
}

type ClusterAddonsConfigDnsCacheConfigArgs struct {
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (ClusterAddonsConfigDnsCacheConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfigDnsCacheConfig)(nil)).Elem()
}

func (i ClusterAddonsConfigDnsCacheConfigArgs) ToClusterAddonsConfigDnsCacheConfigOutput() ClusterAddonsConfigDnsCacheConfigOutput {
	return i.ToClusterAddonsConfigDnsCacheConfigOutputWithContext(context.Background())
}

func (i ClusterAddonsConfigDnsCacheConfigArgs) ToClusterAddonsConfigDnsCacheConfigOutputWithContext(ctx context.Context) ClusterAddonsConfigDnsCacheConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigDnsCacheConfigOutput)
}

func (i ClusterAddonsConfigDnsCacheConfigArgs) ToClusterAddonsConfigDnsCacheConfigPtrOutput() ClusterAddonsConfigDnsCacheConfigPtrOutput {
	return i.ToClusterAddonsConfigDnsCacheConfigPtrOutputWithContext(context.Background())
}

func (i ClusterAddonsConfigDnsCacheConfigArgs) ToClusterAddonsConfigDnsCacheConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigDnsCacheConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigDnsCacheConfigOutput).ToClusterAddonsConfigDnsCacheConfigPtrOutputWithContext(ctx)
}

// ClusterAddonsConfigDnsCacheConfigPtrInput is an input type that accepts ClusterAddonsConfigDnsCacheConfigArgs, ClusterAddonsConfigDnsCacheConfigPtr and ClusterAddonsConfigDnsCacheConfigPtrOutput values.
// You can construct a concrete instance of `ClusterAddonsConfigDnsCacheConfigPtrInput` via:
//
//	        ClusterAddonsConfigDnsCacheConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterAddonsConfigDnsCacheConfigPtrInput interface {
	pulumi.Input

	ToClusterAddonsConfigDnsCacheConfigPtrOutput() ClusterAddonsConfigDnsCacheConfigPtrOutput
	ToClusterAddonsConfigDnsCacheConfigPtrOutputWithContext(context.Context) ClusterAddonsConfigDnsCacheConfigPtrOutput
}

type clusterAddonsConfigDnsCacheConfigPtrType ClusterAddonsConfigDnsCacheConfigArgs

func ClusterAddonsConfigDnsCacheConfigPtr(v *ClusterAddonsConfigDnsCacheConfigArgs) ClusterAddonsConfigDnsCacheConfigPtrInput {
	return (*clusterAddonsConfigDnsCacheConfigPtrType)(v)
}

func (*clusterAddonsConfigDnsCacheConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAddonsConfigDnsCacheConfig)(nil)).Elem()
}

func (i *clusterAddonsConfigDnsCacheConfigPtrType) ToClusterAddonsConfigDnsCacheConfigPtrOutput() ClusterAddonsConfigDnsCacheConfigPtrOutput {
	return i.ToClusterAddonsConfigDnsCacheConfigPtrOutputWithContext(context.Background())
}

func (i *clusterAddonsConfigDnsCacheConfigPtrType) ToClusterAddonsConfigDnsCacheConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigDnsCacheConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigDnsCacheConfigPtrOutput)
}

type ClusterAddonsConfigDnsCacheConfigOutput struct{ *pulumi.OutputState }

func (ClusterAddonsConfigDnsCacheConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfigDnsCacheConfig)(nil)).Elem()
}

func (o ClusterAddonsConfigDnsCacheConfigOutput) ToClusterAddonsConfigDnsCacheConfigOutput() ClusterAddonsConfigDnsCacheConfigOutput {
	return o
}

func (o ClusterAddonsConfigDnsCacheConfigOutput) ToClusterAddonsConfigDnsCacheConfigOutputWithContext(ctx context.Context) ClusterAddonsConfigDnsCacheConfigOutput {
	return o
}

func (o ClusterAddonsConfigDnsCacheConfigOutput) ToClusterAddonsConfigDnsCacheConfigPtrOutput() ClusterAddonsConfigDnsCacheConfigPtrOutput {
	return o.ToClusterAddonsConfigDnsCacheConfigPtrOutputWithContext(context.Background())
}

func (o ClusterAddonsConfigDnsCacheConfigOutput) ToClusterAddonsConfigDnsCacheConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigDnsCacheConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterAddonsConfigDnsCacheConfig) *ClusterAddonsConfigDnsCacheConfig {
		return &v
	}).(ClusterAddonsConfigDnsCacheConfigPtrOutput)
}

func (o ClusterAddonsConfigDnsCacheConfigOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterAddonsConfigDnsCacheConfig) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type ClusterAddonsConfigDnsCacheConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterAddonsConfigDnsCacheConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAddonsConfigDnsCacheConfig)(nil)).Elem()
}

func (o ClusterAddonsConfigDnsCacheConfigPtrOutput) ToClusterAddonsConfigDnsCacheConfigPtrOutput() ClusterAddonsConfigDnsCacheConfigPtrOutput {
	return o
}

func (o ClusterAddonsConfigDnsCacheConfigPtrOutput) ToClusterAddonsConfigDnsCacheConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigDnsCacheConfigPtrOutput {
	return o
}

func (o ClusterAddonsConfigDnsCacheConfigPtrOutput) Elem() ClusterAddonsConfigDnsCacheConfigOutput {
	return o.ApplyT(func(v *ClusterAddonsConfigDnsCacheConfig) ClusterAddonsConfigDnsCacheConfig {
		if v != nil {
			return *v
		}
		var ret ClusterAddonsConfigDnsCacheConfig
		return ret
	}).(ClusterAddonsConfigDnsCacheConfigOutput)
}

func (o ClusterAddonsConfigDnsCacheConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterAddonsConfigDnsCacheConfig) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type ClusterAddonsConfigGcePersistentDiskCsiDriverConfig struct {
	Enabled bool `pulumi:"enabled"`
}

// ClusterAddonsConfigGcePersistentDiskCsiDriverConfigInput is an input type that accepts ClusterAddonsConfigGcePersistentDiskCsiDriverConfigArgs and ClusterAddonsConfigGcePersistentDiskCsiDriverConfigOutput values.
// You can construct a concrete instance of `ClusterAddonsConfigGcePersistentDiskCsiDriverConfigInput` via:
//
//	ClusterAddonsConfigGcePersistentDiskCsiDriverConfigArgs{...}
type ClusterAddonsConfigGcePersistentDiskCsiDriverConfigInput interface {
	pulumi.Input

	ToClusterAddonsConfigGcePersistentDiskCsiDriverConfigOutput() ClusterAddonsConfigGcePersistentDiskCsiDriverConfigOutput
	ToClusterAddonsConfigGcePersistentDiskCsiDriverConfigOutputWithContext(context.Context) ClusterAddonsConfigGcePersistentDiskCsiDriverConfigOutput
}

type ClusterAddonsConfigGcePersistentDiskCsiDriverConfigArgs struct {
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (ClusterAddonsConfigGcePersistentDiskCsiDriverConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfigGcePersistentDiskCsiDriverConfig)(nil)).Elem()
}

func (i ClusterAddonsConfigGcePersistentDiskCsiDriverConfigArgs) ToClusterAddonsConfigGcePersistentDiskCsiDriverConfigOutput() ClusterAddonsConfigGcePersistentDiskCsiDriverConfigOutput {
	return i.ToClusterAddonsConfigGcePersistentDiskCsiDriverConfigOutputWithContext(context.Background())
}

func (i ClusterAddonsConfigGcePersistentDiskCsiDriverConfigArgs) ToClusterAddonsConfigGcePersistentDiskCsiDriverConfigOutputWithContext(ctx context.Context) ClusterAddonsConfigGcePersistentDiskCsiDriverConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigGcePersistentDiskCsiDriverConfigOutput)
}

func (i ClusterAddonsConfigGcePersistentDiskCsiDriverConfigArgs) ToClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrOutput() ClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrOutput {
	return i.ToClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrOutputWithContext(context.Background())
}

func (i ClusterAddonsConfigGcePersistentDiskCsiDriverConfigArgs) ToClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigGcePersistentDiskCsiDriverConfigOutput).ToClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrOutputWithContext(ctx)
}

// ClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrInput is an input type that accepts ClusterAddonsConfigGcePersistentDiskCsiDriverConfigArgs, ClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtr and ClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrOutput values.
// You can construct a concrete instance of `ClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrInput` via:
//
//	        ClusterAddonsConfigGcePersistentDiskCsiDriverConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrInput interface {
	pulumi.Input

	ToClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrOutput() ClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrOutput
	ToClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrOutputWithContext(context.Context) ClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrOutput
}

type clusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrType ClusterAddonsConfigGcePersistentDiskCsiDriverConfigArgs

func ClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtr(v *ClusterAddonsConfigGcePersistentDiskCsiDriverConfigArgs) ClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrInput {
	return (*clusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrType)(v)
}

func (*clusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAddonsConfigGcePersistentDiskCsiDriverConfig)(nil)).Elem()
}

func (i *clusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrType) ToClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrOutput() ClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrOutput {
	return i.ToClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrOutputWithContext(context.Background())
}

func (i *clusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrType) ToClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrOutput)
}

type ClusterAddonsConfigGcePersistentDiskCsiDriverConfigOutput struct{ *pulumi.OutputState }

func (ClusterAddonsConfigGcePersistentDiskCsiDriverConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfigGcePersistentDiskCsiDriverConfig)(nil)).Elem()
}

func (o ClusterAddonsConfigGcePersistentDiskCsiDriverConfigOutput) ToClusterAddonsConfigGcePersistentDiskCsiDriverConfigOutput() ClusterAddonsConfigGcePersistentDiskCsiDriverConfigOutput {
	return o
}

func (o ClusterAddonsConfigGcePersistentDiskCsiDriverConfigOutput) ToClusterAddonsConfigGcePersistentDiskCsiDriverConfigOutputWithContext(ctx context.Context) ClusterAddonsConfigGcePersistentDiskCsiDriverConfigOutput {
	return o
}

func (o ClusterAddonsConfigGcePersistentDiskCsiDriverConfigOutput) ToClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrOutput() ClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrOutput {
	return o.ToClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrOutputWithContext(context.Background())
}

func (o ClusterAddonsConfigGcePersistentDiskCsiDriverConfigOutput) ToClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterAddonsConfigGcePersistentDiskCsiDriverConfig) *ClusterAddonsConfigGcePersistentDiskCsiDriverConfig {
		return &v
	}).(ClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrOutput)
}

func (o ClusterAddonsConfigGcePersistentDiskCsiDriverConfigOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterAddonsConfigGcePersistentDiskCsiDriverConfig) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type ClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAddonsConfigGcePersistentDiskCsiDriverConfig)(nil)).Elem()
}

func (o ClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrOutput) ToClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrOutput() ClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrOutput {
	return o
}

func (o ClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrOutput) ToClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrOutput {
	return o
}

func (o ClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrOutput) Elem() ClusterAddonsConfigGcePersistentDiskCsiDriverConfigOutput {
	return o.ApplyT(func(v *ClusterAddonsConfigGcePersistentDiskCsiDriverConfig) ClusterAddonsConfigGcePersistentDiskCsiDriverConfig {
		if v != nil {
			return *v
		}
		var ret ClusterAddonsConfigGcePersistentDiskCsiDriverConfig
		return ret
	}).(ClusterAddonsConfigGcePersistentDiskCsiDriverConfigOutput)
}

func (o ClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterAddonsConfigGcePersistentDiskCsiDriverConfig) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type ClusterAddonsConfigGcpFilestoreCsiDriverConfig struct {
	Enabled bool `pulumi:"enabled"`
}

// ClusterAddonsConfigGcpFilestoreCsiDriverConfigInput is an input type that accepts ClusterAddonsConfigGcpFilestoreCsiDriverConfigArgs and ClusterAddonsConfigGcpFilestoreCsiDriverConfigOutput values.
// You can construct a concrete instance of `ClusterAddonsConfigGcpFilestoreCsiDriverConfigInput` via:
//
//	ClusterAddonsConfigGcpFilestoreCsiDriverConfigArgs{...}
type ClusterAddonsConfigGcpFilestoreCsiDriverConfigInput interface {
	pulumi.Input

	ToClusterAddonsConfigGcpFilestoreCsiDriverConfigOutput() ClusterAddonsConfigGcpFilestoreCsiDriverConfigOutput
	ToClusterAddonsConfigGcpFilestoreCsiDriverConfigOutputWithContext(context.Context) ClusterAddonsConfigGcpFilestoreCsiDriverConfigOutput
}

type ClusterAddonsConfigGcpFilestoreCsiDriverConfigArgs struct {
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (ClusterAddonsConfigGcpFilestoreCsiDriverConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfigGcpFilestoreCsiDriverConfig)(nil)).Elem()
}

func (i ClusterAddonsConfigGcpFilestoreCsiDriverConfigArgs) ToClusterAddonsConfigGcpFilestoreCsiDriverConfigOutput() ClusterAddonsConfigGcpFilestoreCsiDriverConfigOutput {
	return i.ToClusterAddonsConfigGcpFilestoreCsiDriverConfigOutputWithContext(context.Background())
}

func (i ClusterAddonsConfigGcpFilestoreCsiDriverConfigArgs) ToClusterAddonsConfigGcpFilestoreCsiDriverConfigOutputWithContext(ctx context.Context) ClusterAddonsConfigGcpFilestoreCsiDriverConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigGcpFilestoreCsiDriverConfigOutput)
}

func (i ClusterAddonsConfigGcpFilestoreCsiDriverConfigArgs) ToClusterAddonsConfigGcpFilestoreCsiDriverConfigPtrOutput() ClusterAddonsConfigGcpFilestoreCsiDriverConfigPtrOutput {
	return i.ToClusterAddonsConfigGcpFilestoreCsiDriverConfigPtrOutputWithContext(context.Background())
}

func (i ClusterAddonsConfigGcpFilestoreCsiDriverConfigArgs) ToClusterAddonsConfigGcpFilestoreCsiDriverConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigGcpFilestoreCsiDriverConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigGcpFilestoreCsiDriverConfigOutput).ToClusterAddonsConfigGcpFilestoreCsiDriverConfigPtrOutputWithContext(ctx)
}

// ClusterAddonsConfigGcpFilestoreCsiDriverConfigPtrInput is an input type that accepts ClusterAddonsConfigGcpFilestoreCsiDriverConfigArgs, ClusterAddonsConfigGcpFilestoreCsiDriverConfigPtr and ClusterAddonsConfigGcpFilestoreCsiDriverConfigPtrOutput values.
// You can construct a concrete instance of `ClusterAddonsConfigGcpFilestoreCsiDriverConfigPtrInput` via:
//
//	        ClusterAddonsConfigGcpFilestoreCsiDriverConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterAddonsConfigGcpFilestoreCsiDriverConfigPtrInput interface {
	pulumi.Input

	ToClusterAddonsConfigGcpFilestoreCsiDriverConfigPtrOutput() ClusterAddonsConfigGcpFilestoreCsiDriverConfigPtrOutput
	ToClusterAddonsConfigGcpFilestoreCsiDriverConfigPtrOutputWithContext(context.Context) ClusterAddonsConfigGcpFilestoreCsiDriverConfigPtrOutput
}

type clusterAddonsConfigGcpFilestoreCsiDriverConfigPtrType ClusterAddonsConfigGcpFilestoreCsiDriverConfigArgs

func ClusterAddonsConfigGcpFilestoreCsiDriverConfigPtr(v *ClusterAddonsConfigGcpFilestoreCsiDriverConfigArgs) ClusterAddonsConfigGcpFilestoreCsiDriverConfigPtrInput {
	return (*clusterAddonsConfigGcpFilestoreCsiDriverConfigPtrType)(v)
}

func (*clusterAddonsConfigGcpFilestoreCsiDriverConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAddonsConfigGcpFilestoreCsiDriverConfig)(nil)).Elem()
}

func (i *clusterAddonsConfigGcpFilestoreCsiDriverConfigPtrType) ToClusterAddonsConfigGcpFilestoreCsiDriverConfigPtrOutput() ClusterAddonsConfigGcpFilestoreCsiDriverConfigPtrOutput {
	return i.ToClusterAddonsConfigGcpFilestoreCsiDriverConfigPtrOutputWithContext(context.Background())
}

func (i *clusterAddonsConfigGcpFilestoreCsiDriverConfigPtrType) ToClusterAddonsConfigGcpFilestoreCsiDriverConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigGcpFilestoreCsiDriverConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigGcpFilestoreCsiDriverConfigPtrOutput)
}

type ClusterAddonsConfigGcpFilestoreCsiDriverConfigOutput struct{ *pulumi.OutputState }

func (ClusterAddonsConfigGcpFilestoreCsiDriverConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfigGcpFilestoreCsiDriverConfig)(nil)).Elem()
}

func (o ClusterAddonsConfigGcpFilestoreCsiDriverConfigOutput) ToClusterAddonsConfigGcpFilestoreCsiDriverConfigOutput() ClusterAddonsConfigGcpFilestoreCsiDriverConfigOutput {
	return o
}

func (o ClusterAddonsConfigGcpFilestoreCsiDriverConfigOutput) ToClusterAddonsConfigGcpFilestoreCsiDriverConfigOutputWithContext(ctx context.Context) ClusterAddonsConfigGcpFilestoreCsiDriverConfigOutput {
	return o
}

func (o ClusterAddonsConfigGcpFilestoreCsiDriverConfigOutput) ToClusterAddonsConfigGcpFilestoreCsiDriverConfigPtrOutput() ClusterAddonsConfigGcpFilestoreCsiDriverConfigPtrOutput {
	return o.ToClusterAddonsConfigGcpFilestoreCsiDriverConfigPtrOutputWithContext(context.Background())
}

func (o ClusterAddonsConfigGcpFilestoreCsiDriverConfigOutput) ToClusterAddonsConfigGcpFilestoreCsiDriverConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigGcpFilestoreCsiDriverConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterAddonsConfigGcpFilestoreCsiDriverConfig) *ClusterAddonsConfigGcpFilestoreCsiDriverConfig {
		return &v
	}).(ClusterAddonsConfigGcpFilestoreCsiDriverConfigPtrOutput)
}

func (o ClusterAddonsConfigGcpFilestoreCsiDriverConfigOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterAddonsConfigGcpFilestoreCsiDriverConfig) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type ClusterAddonsConfigGcpFilestoreCsiDriverConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterAddonsConfigGcpFilestoreCsiDriverConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAddonsConfigGcpFilestoreCsiDriverConfig)(nil)).Elem()
}

func (o ClusterAddonsConfigGcpFilestoreCsiDriverConfigPtrOutput) ToClusterAddonsConfigGcpFilestoreCsiDriverConfigPtrOutput() ClusterAddonsConfigGcpFilestoreCsiDriverConfigPtrOutput {
	return o
}

func (o ClusterAddonsConfigGcpFilestoreCsiDriverConfigPtrOutput) ToClusterAddonsConfigGcpFilestoreCsiDriverConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigGcpFilestoreCsiDriverConfigPtrOutput {
	return o
}

func (o ClusterAddonsConfigGcpFilestoreCsiDriverConfigPtrOutput) Elem() ClusterAddonsConfigGcpFilestoreCsiDriverConfigOutput {
	return o.ApplyT(func(v *ClusterAddonsConfigGcpFilestoreCsiDriverConfig) ClusterAddonsConfigGcpFilestoreCsiDriverConfig {
		if v != nil {
			return *v
		}
		var ret ClusterAddonsConfigGcpFilestoreCsiDriverConfig
		return ret
	}).(ClusterAddonsConfigGcpFilestoreCsiDriverConfigOutput)
}

func (o ClusterAddonsConfigGcpFilestoreCsiDriverConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterAddonsConfigGcpFilestoreCsiDriverConfig) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type ClusterAddonsConfigGcsFuseCsiDriverConfig struct {
	Enabled bool `pulumi:"enabled"`
}

// ClusterAddonsConfigGcsFuseCsiDriverConfigInput is an input type that accepts ClusterAddonsConfigGcsFuseCsiDriverConfigArgs and ClusterAddonsConfigGcsFuseCsiDriverConfigOutput values.
// You can construct a concrete instance of `ClusterAddonsConfigGcsFuseCsiDriverConfigInput` via:
//
//	ClusterAddonsConfigGcsFuseCsiDriverConfigArgs{...}
type ClusterAddonsConfigGcsFuseCsiDriverConfigInput interface {
	pulumi.Input

	ToClusterAddonsConfigGcsFuseCsiDriverConfigOutput() ClusterAddonsConfigGcsFuseCsiDriverConfigOutput
	ToClusterAddonsConfigGcsFuseCsiDriverConfigOutputWithContext(context.Context) ClusterAddonsConfigGcsFuseCsiDriverConfigOutput
}

type ClusterAddonsConfigGcsFuseCsiDriverConfigArgs struct {
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (ClusterAddonsConfigGcsFuseCsiDriverConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfigGcsFuseCsiDriverConfig)(nil)).Elem()
}

func (i ClusterAddonsConfigGcsFuseCsiDriverConfigArgs) ToClusterAddonsConfigGcsFuseCsiDriverConfigOutput() ClusterAddonsConfigGcsFuseCsiDriverConfigOutput {
	return i.ToClusterAddonsConfigGcsFuseCsiDriverConfigOutputWithContext(context.Background())
}

func (i ClusterAddonsConfigGcsFuseCsiDriverConfigArgs) ToClusterAddonsConfigGcsFuseCsiDriverConfigOutputWithContext(ctx context.Context) ClusterAddonsConfigGcsFuseCsiDriverConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigGcsFuseCsiDriverConfigOutput)
}

func (i ClusterAddonsConfigGcsFuseCsiDriverConfigArgs) ToClusterAddonsConfigGcsFuseCsiDriverConfigPtrOutput() ClusterAddonsConfigGcsFuseCsiDriverConfigPtrOutput {
	return i.ToClusterAddonsConfigGcsFuseCsiDriverConfigPtrOutputWithContext(context.Background())
}

func (i ClusterAddonsConfigGcsFuseCsiDriverConfigArgs) ToClusterAddonsConfigGcsFuseCsiDriverConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigGcsFuseCsiDriverConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigGcsFuseCsiDriverConfigOutput).ToClusterAddonsConfigGcsFuseCsiDriverConfigPtrOutputWithContext(ctx)
}

// ClusterAddonsConfigGcsFuseCsiDriverConfigPtrInput is an input type that accepts ClusterAddonsConfigGcsFuseCsiDriverConfigArgs, ClusterAddonsConfigGcsFuseCsiDriverConfigPtr and ClusterAddonsConfigGcsFuseCsiDriverConfigPtrOutput values.
// You can construct a concrete instance of `ClusterAddonsConfigGcsFuseCsiDriverConfigPtrInput` via:
//
//	        ClusterAddonsConfigGcsFuseCsiDriverConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterAddonsConfigGcsFuseCsiDriverConfigPtrInput interface {
	pulumi.Input

	ToClusterAddonsConfigGcsFuseCsiDriverConfigPtrOutput() ClusterAddonsConfigGcsFuseCsiDriverConfigPtrOutput
	ToClusterAddonsConfigGcsFuseCsiDriverConfigPtrOutputWithContext(context.Context) ClusterAddonsConfigGcsFuseCsiDriverConfigPtrOutput
}

type clusterAddonsConfigGcsFuseCsiDriverConfigPtrType ClusterAddonsConfigGcsFuseCsiDriverConfigArgs

func ClusterAddonsConfigGcsFuseCsiDriverConfigPtr(v *ClusterAddonsConfigGcsFuseCsiDriverConfigArgs) ClusterAddonsConfigGcsFuseCsiDriverConfigPtrInput {
	return (*clusterAddonsConfigGcsFuseCsiDriverConfigPtrType)(v)
}

func (*clusterAddonsConfigGcsFuseCsiDriverConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAddonsConfigGcsFuseCsiDriverConfig)(nil)).Elem()
}

func (i *clusterAddonsConfigGcsFuseCsiDriverConfigPtrType) ToClusterAddonsConfigGcsFuseCsiDriverConfigPtrOutput() ClusterAddonsConfigGcsFuseCsiDriverConfigPtrOutput {
	return i.ToClusterAddonsConfigGcsFuseCsiDriverConfigPtrOutputWithContext(context.Background())
}

func (i *clusterAddonsConfigGcsFuseCsiDriverConfigPtrType) ToClusterAddonsConfigGcsFuseCsiDriverConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigGcsFuseCsiDriverConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigGcsFuseCsiDriverConfigPtrOutput)
}

type ClusterAddonsConfigGcsFuseCsiDriverConfigOutput struct{ *pulumi.OutputState }

func (ClusterAddonsConfigGcsFuseCsiDriverConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfigGcsFuseCsiDriverConfig)(nil)).Elem()
}

func (o ClusterAddonsConfigGcsFuseCsiDriverConfigOutput) ToClusterAddonsConfigGcsFuseCsiDriverConfigOutput() ClusterAddonsConfigGcsFuseCsiDriverConfigOutput {
	return o
}

func (o ClusterAddonsConfigGcsFuseCsiDriverConfigOutput) ToClusterAddonsConfigGcsFuseCsiDriverConfigOutputWithContext(ctx context.Context) ClusterAddonsConfigGcsFuseCsiDriverConfigOutput {
	return o
}

func (o ClusterAddonsConfigGcsFuseCsiDriverConfigOutput) ToClusterAddonsConfigGcsFuseCsiDriverConfigPtrOutput() ClusterAddonsConfigGcsFuseCsiDriverConfigPtrOutput {
	return o.ToClusterAddonsConfigGcsFuseCsiDriverConfigPtrOutputWithContext(context.Background())
}

func (o ClusterAddonsConfigGcsFuseCsiDriverConfigOutput) ToClusterAddonsConfigGcsFuseCsiDriverConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigGcsFuseCsiDriverConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterAddonsConfigGcsFuseCsiDriverConfig) *ClusterAddonsConfigGcsFuseCsiDriverConfig {
		return &v
	}).(ClusterAddonsConfigGcsFuseCsiDriverConfigPtrOutput)
}

func (o ClusterAddonsConfigGcsFuseCsiDriverConfigOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterAddonsConfigGcsFuseCsiDriverConfig) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type ClusterAddonsConfigGcsFuseCsiDriverConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterAddonsConfigGcsFuseCsiDriverConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAddonsConfigGcsFuseCsiDriverConfig)(nil)).Elem()
}

func (o ClusterAddonsConfigGcsFuseCsiDriverConfigPtrOutput) ToClusterAddonsConfigGcsFuseCsiDriverConfigPtrOutput() ClusterAddonsConfigGcsFuseCsiDriverConfigPtrOutput {
	return o
}

func (o ClusterAddonsConfigGcsFuseCsiDriverConfigPtrOutput) ToClusterAddonsConfigGcsFuseCsiDriverConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigGcsFuseCsiDriverConfigPtrOutput {
	return o
}

func (o ClusterAddonsConfigGcsFuseCsiDriverConfigPtrOutput) Elem() ClusterAddonsConfigGcsFuseCsiDriverConfigOutput {
	return o.ApplyT(func(v *ClusterAddonsConfigGcsFuseCsiDriverConfig) ClusterAddonsConfigGcsFuseCsiDriverConfig {
		if v != nil {
			return *v
		}
		var ret ClusterAddonsConfigGcsFuseCsiDriverConfig
		return ret
	}).(ClusterAddonsConfigGcsFuseCsiDriverConfigOutput)
}

func (o ClusterAddonsConfigGcsFuseCsiDriverConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterAddonsConfigGcsFuseCsiDriverConfig) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type ClusterAddonsConfigGkeBackupAgentConfig struct {
	Enabled bool `pulumi:"enabled"`
}

// ClusterAddonsConfigGkeBackupAgentConfigInput is an input type that accepts ClusterAddonsConfigGkeBackupAgentConfigArgs and ClusterAddonsConfigGkeBackupAgentConfigOutput values.
// You can construct a concrete instance of `ClusterAddonsConfigGkeBackupAgentConfigInput` via:
//
//	ClusterAddonsConfigGkeBackupAgentConfigArgs{...}
type ClusterAddonsConfigGkeBackupAgentConfigInput interface {
	pulumi.Input

	ToClusterAddonsConfigGkeBackupAgentConfigOutput() ClusterAddonsConfigGkeBackupAgentConfigOutput
	ToClusterAddonsConfigGkeBackupAgentConfigOutputWithContext(context.Context) ClusterAddonsConfigGkeBackupAgentConfigOutput
}

type ClusterAddonsConfigGkeBackupAgentConfigArgs struct {
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (ClusterAddonsConfigGkeBackupAgentConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfigGkeBackupAgentConfig)(nil)).Elem()
}

func (i ClusterAddonsConfigGkeBackupAgentConfigArgs) ToClusterAddonsConfigGkeBackupAgentConfigOutput() ClusterAddonsConfigGkeBackupAgentConfigOutput {
	return i.ToClusterAddonsConfigGkeBackupAgentConfigOutputWithContext(context.Background())
}

func (i ClusterAddonsConfigGkeBackupAgentConfigArgs) ToClusterAddonsConfigGkeBackupAgentConfigOutputWithContext(ctx context.Context) ClusterAddonsConfigGkeBackupAgentConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigGkeBackupAgentConfigOutput)
}

func (i ClusterAddonsConfigGkeBackupAgentConfigArgs) ToClusterAddonsConfigGkeBackupAgentConfigPtrOutput() ClusterAddonsConfigGkeBackupAgentConfigPtrOutput {
	return i.ToClusterAddonsConfigGkeBackupAgentConfigPtrOutputWithContext(context.Background())
}

func (i ClusterAddonsConfigGkeBackupAgentConfigArgs) ToClusterAddonsConfigGkeBackupAgentConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigGkeBackupAgentConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigGkeBackupAgentConfigOutput).ToClusterAddonsConfigGkeBackupAgentConfigPtrOutputWithContext(ctx)
}

// ClusterAddonsConfigGkeBackupAgentConfigPtrInput is an input type that accepts ClusterAddonsConfigGkeBackupAgentConfigArgs, ClusterAddonsConfigGkeBackupAgentConfigPtr and ClusterAddonsConfigGkeBackupAgentConfigPtrOutput values.
// You can construct a concrete instance of `ClusterAddonsConfigGkeBackupAgentConfigPtrInput` via:
//
//	        ClusterAddonsConfigGkeBackupAgentConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterAddonsConfigGkeBackupAgentConfigPtrInput interface {
	pulumi.Input

	ToClusterAddonsConfigGkeBackupAgentConfigPtrOutput() ClusterAddonsConfigGkeBackupAgentConfigPtrOutput
	ToClusterAddonsConfigGkeBackupAgentConfigPtrOutputWithContext(context.Context) ClusterAddonsConfigGkeBackupAgentConfigPtrOutput
}

type clusterAddonsConfigGkeBackupAgentConfigPtrType ClusterAddonsConfigGkeBackupAgentConfigArgs

func ClusterAddonsConfigGkeBackupAgentConfigPtr(v *ClusterAddonsConfigGkeBackupAgentConfigArgs) ClusterAddonsConfigGkeBackupAgentConfigPtrInput {
	return (*clusterAddonsConfigGkeBackupAgentConfigPtrType)(v)
}

func (*clusterAddonsConfigGkeBackupAgentConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAddonsConfigGkeBackupAgentConfig)(nil)).Elem()
}

func (i *clusterAddonsConfigGkeBackupAgentConfigPtrType) ToClusterAddonsConfigGkeBackupAgentConfigPtrOutput() ClusterAddonsConfigGkeBackupAgentConfigPtrOutput {
	return i.ToClusterAddonsConfigGkeBackupAgentConfigPtrOutputWithContext(context.Background())
}

func (i *clusterAddonsConfigGkeBackupAgentConfigPtrType) ToClusterAddonsConfigGkeBackupAgentConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigGkeBackupAgentConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigGkeBackupAgentConfigPtrOutput)
}

type ClusterAddonsConfigGkeBackupAgentConfigOutput struct{ *pulumi.OutputState }

func (ClusterAddonsConfigGkeBackupAgentConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfigGkeBackupAgentConfig)(nil)).Elem()
}

func (o ClusterAddonsConfigGkeBackupAgentConfigOutput) ToClusterAddonsConfigGkeBackupAgentConfigOutput() ClusterAddonsConfigGkeBackupAgentConfigOutput {
	return o
}

func (o ClusterAddonsConfigGkeBackupAgentConfigOutput) ToClusterAddonsConfigGkeBackupAgentConfigOutputWithContext(ctx context.Context) ClusterAddonsConfigGkeBackupAgentConfigOutput {
	return o
}

func (o ClusterAddonsConfigGkeBackupAgentConfigOutput) ToClusterAddonsConfigGkeBackupAgentConfigPtrOutput() ClusterAddonsConfigGkeBackupAgentConfigPtrOutput {
	return o.ToClusterAddonsConfigGkeBackupAgentConfigPtrOutputWithContext(context.Background())
}

func (o ClusterAddonsConfigGkeBackupAgentConfigOutput) ToClusterAddonsConfigGkeBackupAgentConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigGkeBackupAgentConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterAddonsConfigGkeBackupAgentConfig) *ClusterAddonsConfigGkeBackupAgentConfig {
		return &v
	}).(ClusterAddonsConfigGkeBackupAgentConfigPtrOutput)
}

func (o ClusterAddonsConfigGkeBackupAgentConfigOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterAddonsConfigGkeBackupAgentConfig) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type ClusterAddonsConfigGkeBackupAgentConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterAddonsConfigGkeBackupAgentConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAddonsConfigGkeBackupAgentConfig)(nil)).Elem()
}

func (o ClusterAddonsConfigGkeBackupAgentConfigPtrOutput) ToClusterAddonsConfigGkeBackupAgentConfigPtrOutput() ClusterAddonsConfigGkeBackupAgentConfigPtrOutput {
	return o
}

func (o ClusterAddonsConfigGkeBackupAgentConfigPtrOutput) ToClusterAddonsConfigGkeBackupAgentConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigGkeBackupAgentConfigPtrOutput {
	return o
}

func (o ClusterAddonsConfigGkeBackupAgentConfigPtrOutput) Elem() ClusterAddonsConfigGkeBackupAgentConfigOutput {
	return o.ApplyT(func(v *ClusterAddonsConfigGkeBackupAgentConfig) ClusterAddonsConfigGkeBackupAgentConfig {
		if v != nil {
			return *v
		}
		var ret ClusterAddonsConfigGkeBackupAgentConfig
		return ret
	}).(ClusterAddonsConfigGkeBackupAgentConfigOutput)
}

func (o ClusterAddonsConfigGkeBackupAgentConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterAddonsConfigGkeBackupAgentConfig) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type ClusterAddonsConfigHorizontalPodAutoscaling struct {
	// Whether the cluster disables default in-node sNAT rules. In-node sNAT rules will be disabled when defaultSnatStatus is disabled.When disabled is set to false, default IP masquerade rules will be applied to the nodes to prevent sNAT on cluster internal traffic
	//
	// <a name="nestedClusterTelemetry"></a>The `clusterTelemetry` block supports
	Disabled bool `pulumi:"disabled"`
}

// ClusterAddonsConfigHorizontalPodAutoscalingInput is an input type that accepts ClusterAddonsConfigHorizontalPodAutoscalingArgs and ClusterAddonsConfigHorizontalPodAutoscalingOutput values.
// You can construct a concrete instance of `ClusterAddonsConfigHorizontalPodAutoscalingInput` via:
//
//	ClusterAddonsConfigHorizontalPodAutoscalingArgs{...}
type ClusterAddonsConfigHorizontalPodAutoscalingInput interface {
	pulumi.Input

	ToClusterAddonsConfigHorizontalPodAutoscalingOutput() ClusterAddonsConfigHorizontalPodAutoscalingOutput
	ToClusterAddonsConfigHorizontalPodAutoscalingOutputWithContext(context.Context) ClusterAddonsConfigHorizontalPodAutoscalingOutput
}

type ClusterAddonsConfigHorizontalPodAutoscalingArgs struct {
	// Whether the cluster disables default in-node sNAT rules. In-node sNAT rules will be disabled when defaultSnatStatus is disabled.When disabled is set to false, default IP masquerade rules will be applied to the nodes to prevent sNAT on cluster internal traffic
	//
	// <a name="nestedClusterTelemetry"></a>The `clusterTelemetry` block supports
	Disabled pulumi.BoolInput `pulumi:"disabled"`
}

func (ClusterAddonsConfigHorizontalPodAutoscalingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfigHorizontalPodAutoscaling)(nil)).Elem()
}

func (i ClusterAddonsConfigHorizontalPodAutoscalingArgs) ToClusterAddonsConfigHorizontalPodAutoscalingOutput() ClusterAddonsConfigHorizontalPodAutoscalingOutput {
	return i.ToClusterAddonsConfigHorizontalPodAutoscalingOutputWithContext(context.Background())
}

func (i ClusterAddonsConfigHorizontalPodAutoscalingArgs) ToClusterAddonsConfigHorizontalPodAutoscalingOutputWithContext(ctx context.Context) ClusterAddonsConfigHorizontalPodAutoscalingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigHorizontalPodAutoscalingOutput)
}

func (i ClusterAddonsConfigHorizontalPodAutoscalingArgs) ToClusterAddonsConfigHorizontalPodAutoscalingPtrOutput() ClusterAddonsConfigHorizontalPodAutoscalingPtrOutput {
	return i.ToClusterAddonsConfigHorizontalPodAutoscalingPtrOutputWithContext(context.Background())
}

func (i ClusterAddonsConfigHorizontalPodAutoscalingArgs) ToClusterAddonsConfigHorizontalPodAutoscalingPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigHorizontalPodAutoscalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigHorizontalPodAutoscalingOutput).ToClusterAddonsConfigHorizontalPodAutoscalingPtrOutputWithContext(ctx)
}

// ClusterAddonsConfigHorizontalPodAutoscalingPtrInput is an input type that accepts ClusterAddonsConfigHorizontalPodAutoscalingArgs, ClusterAddonsConfigHorizontalPodAutoscalingPtr and ClusterAddonsConfigHorizontalPodAutoscalingPtrOutput values.
// You can construct a concrete instance of `ClusterAddonsConfigHorizontalPodAutoscalingPtrInput` via:
//
//	        ClusterAddonsConfigHorizontalPodAutoscalingArgs{...}
//
//	or:
//
//	        nil
type ClusterAddonsConfigHorizontalPodAutoscalingPtrInput interface {
	pulumi.Input

	ToClusterAddonsConfigHorizontalPodAutoscalingPtrOutput() ClusterAddonsConfigHorizontalPodAutoscalingPtrOutput
	ToClusterAddonsConfigHorizontalPodAutoscalingPtrOutputWithContext(context.Context) ClusterAddonsConfigHorizontalPodAutoscalingPtrOutput
}

type clusterAddonsConfigHorizontalPodAutoscalingPtrType ClusterAddonsConfigHorizontalPodAutoscalingArgs

func ClusterAddonsConfigHorizontalPodAutoscalingPtr(v *ClusterAddonsConfigHorizontalPodAutoscalingArgs) ClusterAddonsConfigHorizontalPodAutoscalingPtrInput {
	return (*clusterAddonsConfigHorizontalPodAutoscalingPtrType)(v)
}

func (*clusterAddonsConfigHorizontalPodAutoscalingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAddonsConfigHorizontalPodAutoscaling)(nil)).Elem()
}

func (i *clusterAddonsConfigHorizontalPodAutoscalingPtrType) ToClusterAddonsConfigHorizontalPodAutoscalingPtrOutput() ClusterAddonsConfigHorizontalPodAutoscalingPtrOutput {
	return i.ToClusterAddonsConfigHorizontalPodAutoscalingPtrOutputWithContext(context.Background())
}

func (i *clusterAddonsConfigHorizontalPodAutoscalingPtrType) ToClusterAddonsConfigHorizontalPodAutoscalingPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigHorizontalPodAutoscalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigHorizontalPodAutoscalingPtrOutput)
}

type ClusterAddonsConfigHorizontalPodAutoscalingOutput struct{ *pulumi.OutputState }

func (ClusterAddonsConfigHorizontalPodAutoscalingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfigHorizontalPodAutoscaling)(nil)).Elem()
}

func (o ClusterAddonsConfigHorizontalPodAutoscalingOutput) ToClusterAddonsConfigHorizontalPodAutoscalingOutput() ClusterAddonsConfigHorizontalPodAutoscalingOutput {
	return o
}

func (o ClusterAddonsConfigHorizontalPodAutoscalingOutput) ToClusterAddonsConfigHorizontalPodAutoscalingOutputWithContext(ctx context.Context) ClusterAddonsConfigHorizontalPodAutoscalingOutput {
	return o
}

func (o ClusterAddonsConfigHorizontalPodAutoscalingOutput) ToClusterAddonsConfigHorizontalPodAutoscalingPtrOutput() ClusterAddonsConfigHorizontalPodAutoscalingPtrOutput {
	return o.ToClusterAddonsConfigHorizontalPodAutoscalingPtrOutputWithContext(context.Background())
}

func (o ClusterAddonsConfigHorizontalPodAutoscalingOutput) ToClusterAddonsConfigHorizontalPodAutoscalingPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigHorizontalPodAutoscalingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterAddonsConfigHorizontalPodAutoscaling) *ClusterAddonsConfigHorizontalPodAutoscaling {
		return &v
	}).(ClusterAddonsConfigHorizontalPodAutoscalingPtrOutput)
}

// Whether the cluster disables default in-node sNAT rules. In-node sNAT rules will be disabled when defaultSnatStatus is disabled.When disabled is set to false, default IP masquerade rules will be applied to the nodes to prevent sNAT on cluster internal traffic
//
// <a name="nestedClusterTelemetry"></a>The `clusterTelemetry` block supports
func (o ClusterAddonsConfigHorizontalPodAutoscalingOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterAddonsConfigHorizontalPodAutoscaling) bool { return v.Disabled }).(pulumi.BoolOutput)
}

type ClusterAddonsConfigHorizontalPodAutoscalingPtrOutput struct{ *pulumi.OutputState }

func (ClusterAddonsConfigHorizontalPodAutoscalingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAddonsConfigHorizontalPodAutoscaling)(nil)).Elem()
}

func (o ClusterAddonsConfigHorizontalPodAutoscalingPtrOutput) ToClusterAddonsConfigHorizontalPodAutoscalingPtrOutput() ClusterAddonsConfigHorizontalPodAutoscalingPtrOutput {
	return o
}

func (o ClusterAddonsConfigHorizontalPodAutoscalingPtrOutput) ToClusterAddonsConfigHorizontalPodAutoscalingPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigHorizontalPodAutoscalingPtrOutput {
	return o
}

func (o ClusterAddonsConfigHorizontalPodAutoscalingPtrOutput) Elem() ClusterAddonsConfigHorizontalPodAutoscalingOutput {
	return o.ApplyT(func(v *ClusterAddonsConfigHorizontalPodAutoscaling) ClusterAddonsConfigHorizontalPodAutoscaling {
		if v != nil {
			return *v
		}
		var ret ClusterAddonsConfigHorizontalPodAutoscaling
		return ret
	}).(ClusterAddonsConfigHorizontalPodAutoscalingOutput)
}

// Whether the cluster disables default in-node sNAT rules. In-node sNAT rules will be disabled when defaultSnatStatus is disabled.When disabled is set to false, default IP masquerade rules will be applied to the nodes to prevent sNAT on cluster internal traffic
//
// <a name="nestedClusterTelemetry"></a>The `clusterTelemetry` block supports
func (o ClusterAddonsConfigHorizontalPodAutoscalingPtrOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterAddonsConfigHorizontalPodAutoscaling) *bool {
		if v == nil {
			return nil
		}
		return &v.Disabled
	}).(pulumi.BoolPtrOutput)
}

type ClusterAddonsConfigHttpLoadBalancing struct {
	// Whether the cluster disables default in-node sNAT rules. In-node sNAT rules will be disabled when defaultSnatStatus is disabled.When disabled is set to false, default IP masquerade rules will be applied to the nodes to prevent sNAT on cluster internal traffic
	//
	// <a name="nestedClusterTelemetry"></a>The `clusterTelemetry` block supports
	Disabled bool `pulumi:"disabled"`
}

// ClusterAddonsConfigHttpLoadBalancingInput is an input type that accepts ClusterAddonsConfigHttpLoadBalancingArgs and ClusterAddonsConfigHttpLoadBalancingOutput values.
// You can construct a concrete instance of `ClusterAddonsConfigHttpLoadBalancingInput` via:
//
//	ClusterAddonsConfigHttpLoadBalancingArgs{...}
type ClusterAddonsConfigHttpLoadBalancingInput interface {
	pulumi.Input

	ToClusterAddonsConfigHttpLoadBalancingOutput() ClusterAddonsConfigHttpLoadBalancingOutput
	ToClusterAddonsConfigHttpLoadBalancingOutputWithContext(context.Context) ClusterAddonsConfigHttpLoadBalancingOutput
}

type ClusterAddonsConfigHttpLoadBalancingArgs struct {
	// Whether the cluster disables default in-node sNAT rules. In-node sNAT rules will be disabled when defaultSnatStatus is disabled.When disabled is set to false, default IP masquerade rules will be applied to the nodes to prevent sNAT on cluster internal traffic
	//
	// <a name="nestedClusterTelemetry"></a>The `clusterTelemetry` block supports
	Disabled pulumi.BoolInput `pulumi:"disabled"`
}

func (ClusterAddonsConfigHttpLoadBalancingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfigHttpLoadBalancing)(nil)).Elem()
}

func (i ClusterAddonsConfigHttpLoadBalancingArgs) ToClusterAddonsConfigHttpLoadBalancingOutput() ClusterAddonsConfigHttpLoadBalancingOutput {
	return i.ToClusterAddonsConfigHttpLoadBalancingOutputWithContext(context.Background())
}

func (i ClusterAddonsConfigHttpLoadBalancingArgs) ToClusterAddonsConfigHttpLoadBalancingOutputWithContext(ctx context.Context) ClusterAddonsConfigHttpLoadBalancingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigHttpLoadBalancingOutput)
}

func (i ClusterAddonsConfigHttpLoadBalancingArgs) ToClusterAddonsConfigHttpLoadBalancingPtrOutput() ClusterAddonsConfigHttpLoadBalancingPtrOutput {
	return i.ToClusterAddonsConfigHttpLoadBalancingPtrOutputWithContext(context.Background())
}

func (i ClusterAddonsConfigHttpLoadBalancingArgs) ToClusterAddonsConfigHttpLoadBalancingPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigHttpLoadBalancingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigHttpLoadBalancingOutput).ToClusterAddonsConfigHttpLoadBalancingPtrOutputWithContext(ctx)
}

// ClusterAddonsConfigHttpLoadBalancingPtrInput is an input type that accepts ClusterAddonsConfigHttpLoadBalancingArgs, ClusterAddonsConfigHttpLoadBalancingPtr and ClusterAddonsConfigHttpLoadBalancingPtrOutput values.
// You can construct a concrete instance of `ClusterAddonsConfigHttpLoadBalancingPtrInput` via:
//
//	        ClusterAddonsConfigHttpLoadBalancingArgs{...}
//
//	or:
//
//	        nil
type ClusterAddonsConfigHttpLoadBalancingPtrInput interface {
	pulumi.Input

	ToClusterAddonsConfigHttpLoadBalancingPtrOutput() ClusterAddonsConfigHttpLoadBalancingPtrOutput
	ToClusterAddonsConfigHttpLoadBalancingPtrOutputWithContext(context.Context) ClusterAddonsConfigHttpLoadBalancingPtrOutput
}

type clusterAddonsConfigHttpLoadBalancingPtrType ClusterAddonsConfigHttpLoadBalancingArgs

func ClusterAddonsConfigHttpLoadBalancingPtr(v *ClusterAddonsConfigHttpLoadBalancingArgs) ClusterAddonsConfigHttpLoadBalancingPtrInput {
	return (*clusterAddonsConfigHttpLoadBalancingPtrType)(v)
}

func (*clusterAddonsConfigHttpLoadBalancingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAddonsConfigHttpLoadBalancing)(nil)).Elem()
}

func (i *clusterAddonsConfigHttpLoadBalancingPtrType) ToClusterAddonsConfigHttpLoadBalancingPtrOutput() ClusterAddonsConfigHttpLoadBalancingPtrOutput {
	return i.ToClusterAddonsConfigHttpLoadBalancingPtrOutputWithContext(context.Background())
}

func (i *clusterAddonsConfigHttpLoadBalancingPtrType) ToClusterAddonsConfigHttpLoadBalancingPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigHttpLoadBalancingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigHttpLoadBalancingPtrOutput)
}

type ClusterAddonsConfigHttpLoadBalancingOutput struct{ *pulumi.OutputState }

func (ClusterAddonsConfigHttpLoadBalancingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfigHttpLoadBalancing)(nil)).Elem()
}

func (o ClusterAddonsConfigHttpLoadBalancingOutput) ToClusterAddonsConfigHttpLoadBalancingOutput() ClusterAddonsConfigHttpLoadBalancingOutput {
	return o
}

func (o ClusterAddonsConfigHttpLoadBalancingOutput) ToClusterAddonsConfigHttpLoadBalancingOutputWithContext(ctx context.Context) ClusterAddonsConfigHttpLoadBalancingOutput {
	return o
}

func (o ClusterAddonsConfigHttpLoadBalancingOutput) ToClusterAddonsConfigHttpLoadBalancingPtrOutput() ClusterAddonsConfigHttpLoadBalancingPtrOutput {
	return o.ToClusterAddonsConfigHttpLoadBalancingPtrOutputWithContext(context.Background())
}

func (o ClusterAddonsConfigHttpLoadBalancingOutput) ToClusterAddonsConfigHttpLoadBalancingPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigHttpLoadBalancingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterAddonsConfigHttpLoadBalancing) *ClusterAddonsConfigHttpLoadBalancing {
		return &v
	}).(ClusterAddonsConfigHttpLoadBalancingPtrOutput)
}

// Whether the cluster disables default in-node sNAT rules. In-node sNAT rules will be disabled when defaultSnatStatus is disabled.When disabled is set to false, default IP masquerade rules will be applied to the nodes to prevent sNAT on cluster internal traffic
//
// <a name="nestedClusterTelemetry"></a>The `clusterTelemetry` block supports
func (o ClusterAddonsConfigHttpLoadBalancingOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterAddonsConfigHttpLoadBalancing) bool { return v.Disabled }).(pulumi.BoolOutput)
}

type ClusterAddonsConfigHttpLoadBalancingPtrOutput struct{ *pulumi.OutputState }

func (ClusterAddonsConfigHttpLoadBalancingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAddonsConfigHttpLoadBalancing)(nil)).Elem()
}

func (o ClusterAddonsConfigHttpLoadBalancingPtrOutput) ToClusterAddonsConfigHttpLoadBalancingPtrOutput() ClusterAddonsConfigHttpLoadBalancingPtrOutput {
	return o
}

func (o ClusterAddonsConfigHttpLoadBalancingPtrOutput) ToClusterAddonsConfigHttpLoadBalancingPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigHttpLoadBalancingPtrOutput {
	return o
}

func (o ClusterAddonsConfigHttpLoadBalancingPtrOutput) Elem() ClusterAddonsConfigHttpLoadBalancingOutput {
	return o.ApplyT(func(v *ClusterAddonsConfigHttpLoadBalancing) ClusterAddonsConfigHttpLoadBalancing {
		if v != nil {
			return *v
		}
		var ret ClusterAddonsConfigHttpLoadBalancing
		return ret
	}).(ClusterAddonsConfigHttpLoadBalancingOutput)
}

// Whether the cluster disables default in-node sNAT rules. In-node sNAT rules will be disabled when defaultSnatStatus is disabled.When disabled is set to false, default IP masquerade rules will be applied to the nodes to prevent sNAT on cluster internal traffic
//
// <a name="nestedClusterTelemetry"></a>The `clusterTelemetry` block supports
func (o ClusterAddonsConfigHttpLoadBalancingPtrOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterAddonsConfigHttpLoadBalancing) *bool {
		if v == nil {
			return nil
		}
		return &v.Disabled
	}).(pulumi.BoolPtrOutput)
}

type ClusterAddonsConfigIstioConfig struct {
	// The authentication type between services in Istio. Available options include `AUTH_MUTUAL_TLS`.
	Auth *string `pulumi:"auth"`
	// The status of the Istio addon, which makes it easy to set up Istio for services in a
	// cluster. It is disabled by default. Set `disabled = false` to enable.
	Disabled bool `pulumi:"disabled"`
}

// ClusterAddonsConfigIstioConfigInput is an input type that accepts ClusterAddonsConfigIstioConfigArgs and ClusterAddonsConfigIstioConfigOutput values.
// You can construct a concrete instance of `ClusterAddonsConfigIstioConfigInput` via:
//
//	ClusterAddonsConfigIstioConfigArgs{...}
type ClusterAddonsConfigIstioConfigInput interface {
	pulumi.Input

	ToClusterAddonsConfigIstioConfigOutput() ClusterAddonsConfigIstioConfigOutput
	ToClusterAddonsConfigIstioConfigOutputWithContext(context.Context) ClusterAddonsConfigIstioConfigOutput
}

type ClusterAddonsConfigIstioConfigArgs struct {
	// The authentication type between services in Istio. Available options include `AUTH_MUTUAL_TLS`.
	Auth pulumi.StringPtrInput `pulumi:"auth"`
	// The status of the Istio addon, which makes it easy to set up Istio for services in a
	// cluster. It is disabled by default. Set `disabled = false` to enable.
	Disabled pulumi.BoolInput `pulumi:"disabled"`
}

func (ClusterAddonsConfigIstioConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfigIstioConfig)(nil)).Elem()
}

func (i ClusterAddonsConfigIstioConfigArgs) ToClusterAddonsConfigIstioConfigOutput() ClusterAddonsConfigIstioConfigOutput {
	return i.ToClusterAddonsConfigIstioConfigOutputWithContext(context.Background())
}

func (i ClusterAddonsConfigIstioConfigArgs) ToClusterAddonsConfigIstioConfigOutputWithContext(ctx context.Context) ClusterAddonsConfigIstioConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigIstioConfigOutput)
}

func (i ClusterAddonsConfigIstioConfigArgs) ToClusterAddonsConfigIstioConfigPtrOutput() ClusterAddonsConfigIstioConfigPtrOutput {
	return i.ToClusterAddonsConfigIstioConfigPtrOutputWithContext(context.Background())
}

func (i ClusterAddonsConfigIstioConfigArgs) ToClusterAddonsConfigIstioConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigIstioConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigIstioConfigOutput).ToClusterAddonsConfigIstioConfigPtrOutputWithContext(ctx)
}

// ClusterAddonsConfigIstioConfigPtrInput is an input type that accepts ClusterAddonsConfigIstioConfigArgs, ClusterAddonsConfigIstioConfigPtr and ClusterAddonsConfigIstioConfigPtrOutput values.
// You can construct a concrete instance of `ClusterAddonsConfigIstioConfigPtrInput` via:
//
//	        ClusterAddonsConfigIstioConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterAddonsConfigIstioConfigPtrInput interface {
	pulumi.Input

	ToClusterAddonsConfigIstioConfigPtrOutput() ClusterAddonsConfigIstioConfigPtrOutput
	ToClusterAddonsConfigIstioConfigPtrOutputWithContext(context.Context) ClusterAddonsConfigIstioConfigPtrOutput
}

type clusterAddonsConfigIstioConfigPtrType ClusterAddonsConfigIstioConfigArgs

func ClusterAddonsConfigIstioConfigPtr(v *ClusterAddonsConfigIstioConfigArgs) ClusterAddonsConfigIstioConfigPtrInput {
	return (*clusterAddonsConfigIstioConfigPtrType)(v)
}

func (*clusterAddonsConfigIstioConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAddonsConfigIstioConfig)(nil)).Elem()
}

func (i *clusterAddonsConfigIstioConfigPtrType) ToClusterAddonsConfigIstioConfigPtrOutput() ClusterAddonsConfigIstioConfigPtrOutput {
	return i.ToClusterAddonsConfigIstioConfigPtrOutputWithContext(context.Background())
}

func (i *clusterAddonsConfigIstioConfigPtrType) ToClusterAddonsConfigIstioConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigIstioConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigIstioConfigPtrOutput)
}

type ClusterAddonsConfigIstioConfigOutput struct{ *pulumi.OutputState }

func (ClusterAddonsConfigIstioConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfigIstioConfig)(nil)).Elem()
}

func (o ClusterAddonsConfigIstioConfigOutput) ToClusterAddonsConfigIstioConfigOutput() ClusterAddonsConfigIstioConfigOutput {
	return o
}

func (o ClusterAddonsConfigIstioConfigOutput) ToClusterAddonsConfigIstioConfigOutputWithContext(ctx context.Context) ClusterAddonsConfigIstioConfigOutput {
	return o
}

func (o ClusterAddonsConfigIstioConfigOutput) ToClusterAddonsConfigIstioConfigPtrOutput() ClusterAddonsConfigIstioConfigPtrOutput {
	return o.ToClusterAddonsConfigIstioConfigPtrOutputWithContext(context.Background())
}

func (o ClusterAddonsConfigIstioConfigOutput) ToClusterAddonsConfigIstioConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigIstioConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterAddonsConfigIstioConfig) *ClusterAddonsConfigIstioConfig {
		return &v
	}).(ClusterAddonsConfigIstioConfigPtrOutput)
}

// The authentication type between services in Istio. Available options include `AUTH_MUTUAL_TLS`.
func (o ClusterAddonsConfigIstioConfigOutput) Auth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterAddonsConfigIstioConfig) *string { return v.Auth }).(pulumi.StringPtrOutput)
}

// The status of the Istio addon, which makes it easy to set up Istio for services in a
// cluster. It is disabled by default. Set `disabled = false` to enable.
func (o ClusterAddonsConfigIstioConfigOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterAddonsConfigIstioConfig) bool { return v.Disabled }).(pulumi.BoolOutput)
}

type ClusterAddonsConfigIstioConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterAddonsConfigIstioConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAddonsConfigIstioConfig)(nil)).Elem()
}

func (o ClusterAddonsConfigIstioConfigPtrOutput) ToClusterAddonsConfigIstioConfigPtrOutput() ClusterAddonsConfigIstioConfigPtrOutput {
	return o
}

func (o ClusterAddonsConfigIstioConfigPtrOutput) ToClusterAddonsConfigIstioConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigIstioConfigPtrOutput {
	return o
}

func (o ClusterAddonsConfigIstioConfigPtrOutput) Elem() ClusterAddonsConfigIstioConfigOutput {
	return o.ApplyT(func(v *ClusterAddonsConfigIstioConfig) ClusterAddonsConfigIstioConfig {
		if v != nil {
			return *v
		}
		var ret ClusterAddonsConfigIstioConfig
		return ret
	}).(ClusterAddonsConfigIstioConfigOutput)
}

// The authentication type between services in Istio. Available options include `AUTH_MUTUAL_TLS`.
func (o ClusterAddonsConfigIstioConfigPtrOutput) Auth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterAddonsConfigIstioConfig) *string {
		if v == nil {
			return nil
		}
		return v.Auth
	}).(pulumi.StringPtrOutput)
}

// The status of the Istio addon, which makes it easy to set up Istio for services in a
// cluster. It is disabled by default. Set `disabled = false` to enable.
func (o ClusterAddonsConfigIstioConfigPtrOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterAddonsConfigIstioConfig) *bool {
		if v == nil {
			return nil
		}
		return &v.Disabled
	}).(pulumi.BoolPtrOutput)
}

type ClusterAddonsConfigKalmConfig struct {
	Enabled bool `pulumi:"enabled"`
}

// ClusterAddonsConfigKalmConfigInput is an input type that accepts ClusterAddonsConfigKalmConfigArgs and ClusterAddonsConfigKalmConfigOutput values.
// You can construct a concrete instance of `ClusterAddonsConfigKalmConfigInput` via:
//
//	ClusterAddonsConfigKalmConfigArgs{...}
type ClusterAddonsConfigKalmConfigInput interface {
	pulumi.Input

	ToClusterAddonsConfigKalmConfigOutput() ClusterAddonsConfigKalmConfigOutput
	ToClusterAddonsConfigKalmConfigOutputWithContext(context.Context) ClusterAddonsConfigKalmConfigOutput
}

type ClusterAddonsConfigKalmConfigArgs struct {
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (ClusterAddonsConfigKalmConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfigKalmConfig)(nil)).Elem()
}

func (i ClusterAddonsConfigKalmConfigArgs) ToClusterAddonsConfigKalmConfigOutput() ClusterAddonsConfigKalmConfigOutput {
	return i.ToClusterAddonsConfigKalmConfigOutputWithContext(context.Background())
}

func (i ClusterAddonsConfigKalmConfigArgs) ToClusterAddonsConfigKalmConfigOutputWithContext(ctx context.Context) ClusterAddonsConfigKalmConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigKalmConfigOutput)
}

func (i ClusterAddonsConfigKalmConfigArgs) ToClusterAddonsConfigKalmConfigPtrOutput() ClusterAddonsConfigKalmConfigPtrOutput {
	return i.ToClusterAddonsConfigKalmConfigPtrOutputWithContext(context.Background())
}

func (i ClusterAddonsConfigKalmConfigArgs) ToClusterAddonsConfigKalmConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigKalmConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigKalmConfigOutput).ToClusterAddonsConfigKalmConfigPtrOutputWithContext(ctx)
}

// ClusterAddonsConfigKalmConfigPtrInput is an input type that accepts ClusterAddonsConfigKalmConfigArgs, ClusterAddonsConfigKalmConfigPtr and ClusterAddonsConfigKalmConfigPtrOutput values.
// You can construct a concrete instance of `ClusterAddonsConfigKalmConfigPtrInput` via:
//
//	        ClusterAddonsConfigKalmConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterAddonsConfigKalmConfigPtrInput interface {
	pulumi.Input

	ToClusterAddonsConfigKalmConfigPtrOutput() ClusterAddonsConfigKalmConfigPtrOutput
	ToClusterAddonsConfigKalmConfigPtrOutputWithContext(context.Context) ClusterAddonsConfigKalmConfigPtrOutput
}

type clusterAddonsConfigKalmConfigPtrType ClusterAddonsConfigKalmConfigArgs

func ClusterAddonsConfigKalmConfigPtr(v *ClusterAddonsConfigKalmConfigArgs) ClusterAddonsConfigKalmConfigPtrInput {
	return (*clusterAddonsConfigKalmConfigPtrType)(v)
}

func (*clusterAddonsConfigKalmConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAddonsConfigKalmConfig)(nil)).Elem()
}

func (i *clusterAddonsConfigKalmConfigPtrType) ToClusterAddonsConfigKalmConfigPtrOutput() ClusterAddonsConfigKalmConfigPtrOutput {
	return i.ToClusterAddonsConfigKalmConfigPtrOutputWithContext(context.Background())
}

func (i *clusterAddonsConfigKalmConfigPtrType) ToClusterAddonsConfigKalmConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigKalmConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigKalmConfigPtrOutput)
}

type ClusterAddonsConfigKalmConfigOutput struct{ *pulumi.OutputState }

func (ClusterAddonsConfigKalmConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfigKalmConfig)(nil)).Elem()
}

func (o ClusterAddonsConfigKalmConfigOutput) ToClusterAddonsConfigKalmConfigOutput() ClusterAddonsConfigKalmConfigOutput {
	return o
}

func (o ClusterAddonsConfigKalmConfigOutput) ToClusterAddonsConfigKalmConfigOutputWithContext(ctx context.Context) ClusterAddonsConfigKalmConfigOutput {
	return o
}

func (o ClusterAddonsConfigKalmConfigOutput) ToClusterAddonsConfigKalmConfigPtrOutput() ClusterAddonsConfigKalmConfigPtrOutput {
	return o.ToClusterAddonsConfigKalmConfigPtrOutputWithContext(context.Background())
}

func (o ClusterAddonsConfigKalmConfigOutput) ToClusterAddonsConfigKalmConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigKalmConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterAddonsConfigKalmConfig) *ClusterAddonsConfigKalmConfig {
		return &v
	}).(ClusterAddonsConfigKalmConfigPtrOutput)
}

func (o ClusterAddonsConfigKalmConfigOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterAddonsConfigKalmConfig) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type ClusterAddonsConfigKalmConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterAddonsConfigKalmConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAddonsConfigKalmConfig)(nil)).Elem()
}

func (o ClusterAddonsConfigKalmConfigPtrOutput) ToClusterAddonsConfigKalmConfigPtrOutput() ClusterAddonsConfigKalmConfigPtrOutput {
	return o
}

func (o ClusterAddonsConfigKalmConfigPtrOutput) ToClusterAddonsConfigKalmConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigKalmConfigPtrOutput {
	return o
}

func (o ClusterAddonsConfigKalmConfigPtrOutput) Elem() ClusterAddonsConfigKalmConfigOutput {
	return o.ApplyT(func(v *ClusterAddonsConfigKalmConfig) ClusterAddonsConfigKalmConfig {
		if v != nil {
			return *v
		}
		var ret ClusterAddonsConfigKalmConfig
		return ret
	}).(ClusterAddonsConfigKalmConfigOutput)
}

func (o ClusterAddonsConfigKalmConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterAddonsConfigKalmConfig) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type ClusterAddonsConfigNetworkPolicyConfig struct {
	// Whether the cluster disables default in-node sNAT rules. In-node sNAT rules will be disabled when defaultSnatStatus is disabled.When disabled is set to false, default IP masquerade rules will be applied to the nodes to prevent sNAT on cluster internal traffic
	//
	// <a name="nestedClusterTelemetry"></a>The `clusterTelemetry` block supports
	Disabled bool `pulumi:"disabled"`
}

// ClusterAddonsConfigNetworkPolicyConfigInput is an input type that accepts ClusterAddonsConfigNetworkPolicyConfigArgs and ClusterAddonsConfigNetworkPolicyConfigOutput values.
// You can construct a concrete instance of `ClusterAddonsConfigNetworkPolicyConfigInput` via:
//
//	ClusterAddonsConfigNetworkPolicyConfigArgs{...}
type ClusterAddonsConfigNetworkPolicyConfigInput interface {
	pulumi.Input

	ToClusterAddonsConfigNetworkPolicyConfigOutput() ClusterAddonsConfigNetworkPolicyConfigOutput
	ToClusterAddonsConfigNetworkPolicyConfigOutputWithContext(context.Context) ClusterAddonsConfigNetworkPolicyConfigOutput
}

type ClusterAddonsConfigNetworkPolicyConfigArgs struct {
	// Whether the cluster disables default in-node sNAT rules. In-node sNAT rules will be disabled when defaultSnatStatus is disabled.When disabled is set to false, default IP masquerade rules will be applied to the nodes to prevent sNAT on cluster internal traffic
	//
	// <a name="nestedClusterTelemetry"></a>The `clusterTelemetry` block supports
	Disabled pulumi.BoolInput `pulumi:"disabled"`
}

func (ClusterAddonsConfigNetworkPolicyConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfigNetworkPolicyConfig)(nil)).Elem()
}

func (i ClusterAddonsConfigNetworkPolicyConfigArgs) ToClusterAddonsConfigNetworkPolicyConfigOutput() ClusterAddonsConfigNetworkPolicyConfigOutput {
	return i.ToClusterAddonsConfigNetworkPolicyConfigOutputWithContext(context.Background())
}

func (i ClusterAddonsConfigNetworkPolicyConfigArgs) ToClusterAddonsConfigNetworkPolicyConfigOutputWithContext(ctx context.Context) ClusterAddonsConfigNetworkPolicyConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigNetworkPolicyConfigOutput)
}

func (i ClusterAddonsConfigNetworkPolicyConfigArgs) ToClusterAddonsConfigNetworkPolicyConfigPtrOutput() ClusterAddonsConfigNetworkPolicyConfigPtrOutput {
	return i.ToClusterAddonsConfigNetworkPolicyConfigPtrOutputWithContext(context.Background())
}

func (i ClusterAddonsConfigNetworkPolicyConfigArgs) ToClusterAddonsConfigNetworkPolicyConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigNetworkPolicyConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigNetworkPolicyConfigOutput).ToClusterAddonsConfigNetworkPolicyConfigPtrOutputWithContext(ctx)
}

// ClusterAddonsConfigNetworkPolicyConfigPtrInput is an input type that accepts ClusterAddonsConfigNetworkPolicyConfigArgs, ClusterAddonsConfigNetworkPolicyConfigPtr and ClusterAddonsConfigNetworkPolicyConfigPtrOutput values.
// You can construct a concrete instance of `ClusterAddonsConfigNetworkPolicyConfigPtrInput` via:
//
//	        ClusterAddonsConfigNetworkPolicyConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterAddonsConfigNetworkPolicyConfigPtrInput interface {
	pulumi.Input

	ToClusterAddonsConfigNetworkPolicyConfigPtrOutput() ClusterAddonsConfigNetworkPolicyConfigPtrOutput
	ToClusterAddonsConfigNetworkPolicyConfigPtrOutputWithContext(context.Context) ClusterAddonsConfigNetworkPolicyConfigPtrOutput
}

type clusterAddonsConfigNetworkPolicyConfigPtrType ClusterAddonsConfigNetworkPolicyConfigArgs

func ClusterAddonsConfigNetworkPolicyConfigPtr(v *ClusterAddonsConfigNetworkPolicyConfigArgs) ClusterAddonsConfigNetworkPolicyConfigPtrInput {
	return (*clusterAddonsConfigNetworkPolicyConfigPtrType)(v)
}

func (*clusterAddonsConfigNetworkPolicyConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAddonsConfigNetworkPolicyConfig)(nil)).Elem()
}

func (i *clusterAddonsConfigNetworkPolicyConfigPtrType) ToClusterAddonsConfigNetworkPolicyConfigPtrOutput() ClusterAddonsConfigNetworkPolicyConfigPtrOutput {
	return i.ToClusterAddonsConfigNetworkPolicyConfigPtrOutputWithContext(context.Background())
}

func (i *clusterAddonsConfigNetworkPolicyConfigPtrType) ToClusterAddonsConfigNetworkPolicyConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigNetworkPolicyConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigNetworkPolicyConfigPtrOutput)
}

type ClusterAddonsConfigNetworkPolicyConfigOutput struct{ *pulumi.OutputState }

func (ClusterAddonsConfigNetworkPolicyConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfigNetworkPolicyConfig)(nil)).Elem()
}

func (o ClusterAddonsConfigNetworkPolicyConfigOutput) ToClusterAddonsConfigNetworkPolicyConfigOutput() ClusterAddonsConfigNetworkPolicyConfigOutput {
	return o
}

func (o ClusterAddonsConfigNetworkPolicyConfigOutput) ToClusterAddonsConfigNetworkPolicyConfigOutputWithContext(ctx context.Context) ClusterAddonsConfigNetworkPolicyConfigOutput {
	return o
}

func (o ClusterAddonsConfigNetworkPolicyConfigOutput) ToClusterAddonsConfigNetworkPolicyConfigPtrOutput() ClusterAddonsConfigNetworkPolicyConfigPtrOutput {
	return o.ToClusterAddonsConfigNetworkPolicyConfigPtrOutputWithContext(context.Background())
}

func (o ClusterAddonsConfigNetworkPolicyConfigOutput) ToClusterAddonsConfigNetworkPolicyConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigNetworkPolicyConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterAddonsConfigNetworkPolicyConfig) *ClusterAddonsConfigNetworkPolicyConfig {
		return &v
	}).(ClusterAddonsConfigNetworkPolicyConfigPtrOutput)
}

// Whether the cluster disables default in-node sNAT rules. In-node sNAT rules will be disabled when defaultSnatStatus is disabled.When disabled is set to false, default IP masquerade rules will be applied to the nodes to prevent sNAT on cluster internal traffic
//
// <a name="nestedClusterTelemetry"></a>The `clusterTelemetry` block supports
func (o ClusterAddonsConfigNetworkPolicyConfigOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterAddonsConfigNetworkPolicyConfig) bool { return v.Disabled }).(pulumi.BoolOutput)
}

type ClusterAddonsConfigNetworkPolicyConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterAddonsConfigNetworkPolicyConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAddonsConfigNetworkPolicyConfig)(nil)).Elem()
}

func (o ClusterAddonsConfigNetworkPolicyConfigPtrOutput) ToClusterAddonsConfigNetworkPolicyConfigPtrOutput() ClusterAddonsConfigNetworkPolicyConfigPtrOutput {
	return o
}

func (o ClusterAddonsConfigNetworkPolicyConfigPtrOutput) ToClusterAddonsConfigNetworkPolicyConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigNetworkPolicyConfigPtrOutput {
	return o
}

func (o ClusterAddonsConfigNetworkPolicyConfigPtrOutput) Elem() ClusterAddonsConfigNetworkPolicyConfigOutput {
	return o.ApplyT(func(v *ClusterAddonsConfigNetworkPolicyConfig) ClusterAddonsConfigNetworkPolicyConfig {
		if v != nil {
			return *v
		}
		var ret ClusterAddonsConfigNetworkPolicyConfig
		return ret
	}).(ClusterAddonsConfigNetworkPolicyConfigOutput)
}

// Whether the cluster disables default in-node sNAT rules. In-node sNAT rules will be disabled when defaultSnatStatus is disabled.When disabled is set to false, default IP masquerade rules will be applied to the nodes to prevent sNAT on cluster internal traffic
//
// <a name="nestedClusterTelemetry"></a>The `clusterTelemetry` block supports
func (o ClusterAddonsConfigNetworkPolicyConfigPtrOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterAddonsConfigNetworkPolicyConfig) *bool {
		if v == nil {
			return nil
		}
		return &v.Disabled
	}).(pulumi.BoolPtrOutput)
}

type ClusterAddonsConfigStatefulHaConfig struct {
	Enabled bool `pulumi:"enabled"`
}

// ClusterAddonsConfigStatefulHaConfigInput is an input type that accepts ClusterAddonsConfigStatefulHaConfigArgs and ClusterAddonsConfigStatefulHaConfigOutput values.
// You can construct a concrete instance of `ClusterAddonsConfigStatefulHaConfigInput` via:
//
//	ClusterAddonsConfigStatefulHaConfigArgs{...}
type ClusterAddonsConfigStatefulHaConfigInput interface {
	pulumi.Input

	ToClusterAddonsConfigStatefulHaConfigOutput() ClusterAddonsConfigStatefulHaConfigOutput
	ToClusterAddonsConfigStatefulHaConfigOutputWithContext(context.Context) ClusterAddonsConfigStatefulHaConfigOutput
}

type ClusterAddonsConfigStatefulHaConfigArgs struct {
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (ClusterAddonsConfigStatefulHaConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfigStatefulHaConfig)(nil)).Elem()
}

func (i ClusterAddonsConfigStatefulHaConfigArgs) ToClusterAddonsConfigStatefulHaConfigOutput() ClusterAddonsConfigStatefulHaConfigOutput {
	return i.ToClusterAddonsConfigStatefulHaConfigOutputWithContext(context.Background())
}

func (i ClusterAddonsConfigStatefulHaConfigArgs) ToClusterAddonsConfigStatefulHaConfigOutputWithContext(ctx context.Context) ClusterAddonsConfigStatefulHaConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigStatefulHaConfigOutput)
}

func (i ClusterAddonsConfigStatefulHaConfigArgs) ToClusterAddonsConfigStatefulHaConfigPtrOutput() ClusterAddonsConfigStatefulHaConfigPtrOutput {
	return i.ToClusterAddonsConfigStatefulHaConfigPtrOutputWithContext(context.Background())
}

func (i ClusterAddonsConfigStatefulHaConfigArgs) ToClusterAddonsConfigStatefulHaConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigStatefulHaConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigStatefulHaConfigOutput).ToClusterAddonsConfigStatefulHaConfigPtrOutputWithContext(ctx)
}

// ClusterAddonsConfigStatefulHaConfigPtrInput is an input type that accepts ClusterAddonsConfigStatefulHaConfigArgs, ClusterAddonsConfigStatefulHaConfigPtr and ClusterAddonsConfigStatefulHaConfigPtrOutput values.
// You can construct a concrete instance of `ClusterAddonsConfigStatefulHaConfigPtrInput` via:
//
//	        ClusterAddonsConfigStatefulHaConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterAddonsConfigStatefulHaConfigPtrInput interface {
	pulumi.Input

	ToClusterAddonsConfigStatefulHaConfigPtrOutput() ClusterAddonsConfigStatefulHaConfigPtrOutput
	ToClusterAddonsConfigStatefulHaConfigPtrOutputWithContext(context.Context) ClusterAddonsConfigStatefulHaConfigPtrOutput
}

type clusterAddonsConfigStatefulHaConfigPtrType ClusterAddonsConfigStatefulHaConfigArgs

func ClusterAddonsConfigStatefulHaConfigPtr(v *ClusterAddonsConfigStatefulHaConfigArgs) ClusterAddonsConfigStatefulHaConfigPtrInput {
	return (*clusterAddonsConfigStatefulHaConfigPtrType)(v)
}

func (*clusterAddonsConfigStatefulHaConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAddonsConfigStatefulHaConfig)(nil)).Elem()
}

func (i *clusterAddonsConfigStatefulHaConfigPtrType) ToClusterAddonsConfigStatefulHaConfigPtrOutput() ClusterAddonsConfigStatefulHaConfigPtrOutput {
	return i.ToClusterAddonsConfigStatefulHaConfigPtrOutputWithContext(context.Background())
}

func (i *clusterAddonsConfigStatefulHaConfigPtrType) ToClusterAddonsConfigStatefulHaConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigStatefulHaConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigStatefulHaConfigPtrOutput)
}

type ClusterAddonsConfigStatefulHaConfigOutput struct{ *pulumi.OutputState }

func (ClusterAddonsConfigStatefulHaConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfigStatefulHaConfig)(nil)).Elem()
}

func (o ClusterAddonsConfigStatefulHaConfigOutput) ToClusterAddonsConfigStatefulHaConfigOutput() ClusterAddonsConfigStatefulHaConfigOutput {
	return o
}

func (o ClusterAddonsConfigStatefulHaConfigOutput) ToClusterAddonsConfigStatefulHaConfigOutputWithContext(ctx context.Context) ClusterAddonsConfigStatefulHaConfigOutput {
	return o
}

func (o ClusterAddonsConfigStatefulHaConfigOutput) ToClusterAddonsConfigStatefulHaConfigPtrOutput() ClusterAddonsConfigStatefulHaConfigPtrOutput {
	return o.ToClusterAddonsConfigStatefulHaConfigPtrOutputWithContext(context.Background())
}

func (o ClusterAddonsConfigStatefulHaConfigOutput) ToClusterAddonsConfigStatefulHaConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigStatefulHaConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterAddonsConfigStatefulHaConfig) *ClusterAddonsConfigStatefulHaConfig {
		return &v
	}).(ClusterAddonsConfigStatefulHaConfigPtrOutput)
}

func (o ClusterAddonsConfigStatefulHaConfigOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterAddonsConfigStatefulHaConfig) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type ClusterAddonsConfigStatefulHaConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterAddonsConfigStatefulHaConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAddonsConfigStatefulHaConfig)(nil)).Elem()
}

func (o ClusterAddonsConfigStatefulHaConfigPtrOutput) ToClusterAddonsConfigStatefulHaConfigPtrOutput() ClusterAddonsConfigStatefulHaConfigPtrOutput {
	return o
}

func (o ClusterAddonsConfigStatefulHaConfigPtrOutput) ToClusterAddonsConfigStatefulHaConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigStatefulHaConfigPtrOutput {
	return o
}

func (o ClusterAddonsConfigStatefulHaConfigPtrOutput) Elem() ClusterAddonsConfigStatefulHaConfigOutput {
	return o.ApplyT(func(v *ClusterAddonsConfigStatefulHaConfig) ClusterAddonsConfigStatefulHaConfig {
		if v != nil {
			return *v
		}
		var ret ClusterAddonsConfigStatefulHaConfig
		return ret
	}).(ClusterAddonsConfigStatefulHaConfigOutput)
}

func (o ClusterAddonsConfigStatefulHaConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterAddonsConfigStatefulHaConfig) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type ClusterAuthenticatorGroupsConfig struct {
	// The name of the RBAC security group for use with Google security groups in Kubernetes RBAC. Group name must be in format `gke-security-groups@yourdomain.com`.
	SecurityGroup string `pulumi:"securityGroup"`
}

// ClusterAuthenticatorGroupsConfigInput is an input type that accepts ClusterAuthenticatorGroupsConfigArgs and ClusterAuthenticatorGroupsConfigOutput values.
// You can construct a concrete instance of `ClusterAuthenticatorGroupsConfigInput` via:
//
//	ClusterAuthenticatorGroupsConfigArgs{...}
type ClusterAuthenticatorGroupsConfigInput interface {
	pulumi.Input

	ToClusterAuthenticatorGroupsConfigOutput() ClusterAuthenticatorGroupsConfigOutput
	ToClusterAuthenticatorGroupsConfigOutputWithContext(context.Context) ClusterAuthenticatorGroupsConfigOutput
}

type ClusterAuthenticatorGroupsConfigArgs struct {
	// The name of the RBAC security group for use with Google security groups in Kubernetes RBAC. Group name must be in format `gke-security-groups@yourdomain.com`.
	SecurityGroup pulumi.StringInput `pulumi:"securityGroup"`
}

func (ClusterAuthenticatorGroupsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAuthenticatorGroupsConfig)(nil)).Elem()
}

func (i ClusterAuthenticatorGroupsConfigArgs) ToClusterAuthenticatorGroupsConfigOutput() ClusterAuthenticatorGroupsConfigOutput {
	return i.ToClusterAuthenticatorGroupsConfigOutputWithContext(context.Background())
}

func (i ClusterAuthenticatorGroupsConfigArgs) ToClusterAuthenticatorGroupsConfigOutputWithContext(ctx context.Context) ClusterAuthenticatorGroupsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAuthenticatorGroupsConfigOutput)
}

func (i ClusterAuthenticatorGroupsConfigArgs) ToClusterAuthenticatorGroupsConfigPtrOutput() ClusterAuthenticatorGroupsConfigPtrOutput {
	return i.ToClusterAuthenticatorGroupsConfigPtrOutputWithContext(context.Background())
}

func (i ClusterAuthenticatorGroupsConfigArgs) ToClusterAuthenticatorGroupsConfigPtrOutputWithContext(ctx context.Context) ClusterAuthenticatorGroupsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAuthenticatorGroupsConfigOutput).ToClusterAuthenticatorGroupsConfigPtrOutputWithContext(ctx)
}

// ClusterAuthenticatorGroupsConfigPtrInput is an input type that accepts ClusterAuthenticatorGroupsConfigArgs, ClusterAuthenticatorGroupsConfigPtr and ClusterAuthenticatorGroupsConfigPtrOutput values.
// You can construct a concrete instance of `ClusterAuthenticatorGroupsConfigPtrInput` via:
//
//	        ClusterAuthenticatorGroupsConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterAuthenticatorGroupsConfigPtrInput interface {
	pulumi.Input

	ToClusterAuthenticatorGroupsConfigPtrOutput() ClusterAuthenticatorGroupsConfigPtrOutput
	ToClusterAuthenticatorGroupsConfigPtrOutputWithContext(context.Context) ClusterAuthenticatorGroupsConfigPtrOutput
}

type clusterAuthenticatorGroupsConfigPtrType ClusterAuthenticatorGroupsConfigArgs

func ClusterAuthenticatorGroupsConfigPtr(v *ClusterAuthenticatorGroupsConfigArgs) ClusterAuthenticatorGroupsConfigPtrInput {
	return (*clusterAuthenticatorGroupsConfigPtrType)(v)
}

func (*clusterAuthenticatorGroupsConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAuthenticatorGroupsConfig)(nil)).Elem()
}

func (i *clusterAuthenticatorGroupsConfigPtrType) ToClusterAuthenticatorGroupsConfigPtrOutput() ClusterAuthenticatorGroupsConfigPtrOutput {
	return i.ToClusterAuthenticatorGroupsConfigPtrOutputWithContext(context.Background())
}

func (i *clusterAuthenticatorGroupsConfigPtrType) ToClusterAuthenticatorGroupsConfigPtrOutputWithContext(ctx context.Context) ClusterAuthenticatorGroupsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAuthenticatorGroupsConfigPtrOutput)
}

type ClusterAuthenticatorGroupsConfigOutput struct{ *pulumi.OutputState }

func (ClusterAuthenticatorGroupsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAuthenticatorGroupsConfig)(nil)).Elem()
}

func (o ClusterAuthenticatorGroupsConfigOutput) ToClusterAuthenticatorGroupsConfigOutput() ClusterAuthenticatorGroupsConfigOutput {
	return o
}

func (o ClusterAuthenticatorGroupsConfigOutput) ToClusterAuthenticatorGroupsConfigOutputWithContext(ctx context.Context) ClusterAuthenticatorGroupsConfigOutput {
	return o
}

func (o ClusterAuthenticatorGroupsConfigOutput) ToClusterAuthenticatorGroupsConfigPtrOutput() ClusterAuthenticatorGroupsConfigPtrOutput {
	return o.ToClusterAuthenticatorGroupsConfigPtrOutputWithContext(context.Background())
}

func (o ClusterAuthenticatorGroupsConfigOutput) ToClusterAuthenticatorGroupsConfigPtrOutputWithContext(ctx context.Context) ClusterAuthenticatorGroupsConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterAuthenticatorGroupsConfig) *ClusterAuthenticatorGroupsConfig {
		return &v
	}).(ClusterAuthenticatorGroupsConfigPtrOutput)
}

// The name of the RBAC security group for use with Google security groups in Kubernetes RBAC. Group name must be in format `gke-security-groups@yourdomain.com`.
func (o ClusterAuthenticatorGroupsConfigOutput) SecurityGroup() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterAuthenticatorGroupsConfig) string { return v.SecurityGroup }).(pulumi.StringOutput)
}

type ClusterAuthenticatorGroupsConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterAuthenticatorGroupsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAuthenticatorGroupsConfig)(nil)).Elem()
}

func (o ClusterAuthenticatorGroupsConfigPtrOutput) ToClusterAuthenticatorGroupsConfigPtrOutput() ClusterAuthenticatorGroupsConfigPtrOutput {
	return o
}

func (o ClusterAuthenticatorGroupsConfigPtrOutput) ToClusterAuthenticatorGroupsConfigPtrOutputWithContext(ctx context.Context) ClusterAuthenticatorGroupsConfigPtrOutput {
	return o
}

func (o ClusterAuthenticatorGroupsConfigPtrOutput) Elem() ClusterAuthenticatorGroupsConfigOutput {
	return o.ApplyT(func(v *ClusterAuthenticatorGroupsConfig) ClusterAuthenticatorGroupsConfig {
		if v != nil {
			return *v
		}
		var ret ClusterAuthenticatorGroupsConfig
		return ret
	}).(ClusterAuthenticatorGroupsConfigOutput)
}

// The name of the RBAC security group for use with Google security groups in Kubernetes RBAC. Group name must be in format `gke-security-groups@yourdomain.com`.
func (o ClusterAuthenticatorGroupsConfigPtrOutput) SecurityGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterAuthenticatorGroupsConfig) *string {
		if v == nil {
			return nil
		}
		return &v.SecurityGroup
	}).(pulumi.StringPtrOutput)
}

type ClusterBinaryAuthorization struct {
	// Enable Binary Authorization for this cluster.
	//
	// Deprecated: Deprecated in favor of evaluation_mode.
	Enabled *bool `pulumi:"enabled"`
	// Mode of operation for Binary Authorization policy evaluation.
	EvaluationMode *string `pulumi:"evaluationMode"`
}

// ClusterBinaryAuthorizationInput is an input type that accepts ClusterBinaryAuthorizationArgs and ClusterBinaryAuthorizationOutput values.
// You can construct a concrete instance of `ClusterBinaryAuthorizationInput` via:
//
//	ClusterBinaryAuthorizationArgs{...}
type ClusterBinaryAuthorizationInput interface {
	pulumi.Input

	ToClusterBinaryAuthorizationOutput() ClusterBinaryAuthorizationOutput
	ToClusterBinaryAuthorizationOutputWithContext(context.Context) ClusterBinaryAuthorizationOutput
}

type ClusterBinaryAuthorizationArgs struct {
	// Enable Binary Authorization for this cluster.
	//
	// Deprecated: Deprecated in favor of evaluation_mode.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Mode of operation for Binary Authorization policy evaluation.
	EvaluationMode pulumi.StringPtrInput `pulumi:"evaluationMode"`
}

func (ClusterBinaryAuthorizationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBinaryAuthorization)(nil)).Elem()
}

func (i ClusterBinaryAuthorizationArgs) ToClusterBinaryAuthorizationOutput() ClusterBinaryAuthorizationOutput {
	return i.ToClusterBinaryAuthorizationOutputWithContext(context.Background())
}

func (i ClusterBinaryAuthorizationArgs) ToClusterBinaryAuthorizationOutputWithContext(ctx context.Context) ClusterBinaryAuthorizationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBinaryAuthorizationOutput)
}

func (i ClusterBinaryAuthorizationArgs) ToClusterBinaryAuthorizationPtrOutput() ClusterBinaryAuthorizationPtrOutput {
	return i.ToClusterBinaryAuthorizationPtrOutputWithContext(context.Background())
}

func (i ClusterBinaryAuthorizationArgs) ToClusterBinaryAuthorizationPtrOutputWithContext(ctx context.Context) ClusterBinaryAuthorizationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBinaryAuthorizationOutput).ToClusterBinaryAuthorizationPtrOutputWithContext(ctx)
}

// ClusterBinaryAuthorizationPtrInput is an input type that accepts ClusterBinaryAuthorizationArgs, ClusterBinaryAuthorizationPtr and ClusterBinaryAuthorizationPtrOutput values.
// You can construct a concrete instance of `ClusterBinaryAuthorizationPtrInput` via:
//
//	        ClusterBinaryAuthorizationArgs{...}
//
//	or:
//
//	        nil
type ClusterBinaryAuthorizationPtrInput interface {
	pulumi.Input

	ToClusterBinaryAuthorizationPtrOutput() ClusterBinaryAuthorizationPtrOutput
	ToClusterBinaryAuthorizationPtrOutputWithContext(context.Context) ClusterBinaryAuthorizationPtrOutput
}

type clusterBinaryAuthorizationPtrType ClusterBinaryAuthorizationArgs

func ClusterBinaryAuthorizationPtr(v *ClusterBinaryAuthorizationArgs) ClusterBinaryAuthorizationPtrInput {
	return (*clusterBinaryAuthorizationPtrType)(v)
}

func (*clusterBinaryAuthorizationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBinaryAuthorization)(nil)).Elem()
}

func (i *clusterBinaryAuthorizationPtrType) ToClusterBinaryAuthorizationPtrOutput() ClusterBinaryAuthorizationPtrOutput {
	return i.ToClusterBinaryAuthorizationPtrOutputWithContext(context.Background())
}

func (i *clusterBinaryAuthorizationPtrType) ToClusterBinaryAuthorizationPtrOutputWithContext(ctx context.Context) ClusterBinaryAuthorizationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBinaryAuthorizationPtrOutput)
}

type ClusterBinaryAuthorizationOutput struct{ *pulumi.OutputState }

func (ClusterBinaryAuthorizationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBinaryAuthorization)(nil)).Elem()
}

func (o ClusterBinaryAuthorizationOutput) ToClusterBinaryAuthorizationOutput() ClusterBinaryAuthorizationOutput {
	return o
}

func (o ClusterBinaryAuthorizationOutput) ToClusterBinaryAuthorizationOutputWithContext(ctx context.Context) ClusterBinaryAuthorizationOutput {
	return o
}

func (o ClusterBinaryAuthorizationOutput) ToClusterBinaryAuthorizationPtrOutput() ClusterBinaryAuthorizationPtrOutput {
	return o.ToClusterBinaryAuthorizationPtrOutputWithContext(context.Background())
}

func (o ClusterBinaryAuthorizationOutput) ToClusterBinaryAuthorizationPtrOutputWithContext(ctx context.Context) ClusterBinaryAuthorizationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterBinaryAuthorization) *ClusterBinaryAuthorization {
		return &v
	}).(ClusterBinaryAuthorizationPtrOutput)
}

// Enable Binary Authorization for this cluster.
//
// Deprecated: Deprecated in favor of evaluation_mode.
func (o ClusterBinaryAuthorizationOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterBinaryAuthorization) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Mode of operation for Binary Authorization policy evaluation.
func (o ClusterBinaryAuthorizationOutput) EvaluationMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterBinaryAuthorization) *string { return v.EvaluationMode }).(pulumi.StringPtrOutput)
}

type ClusterBinaryAuthorizationPtrOutput struct{ *pulumi.OutputState }

func (ClusterBinaryAuthorizationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBinaryAuthorization)(nil)).Elem()
}

func (o ClusterBinaryAuthorizationPtrOutput) ToClusterBinaryAuthorizationPtrOutput() ClusterBinaryAuthorizationPtrOutput {
	return o
}

func (o ClusterBinaryAuthorizationPtrOutput) ToClusterBinaryAuthorizationPtrOutputWithContext(ctx context.Context) ClusterBinaryAuthorizationPtrOutput {
	return o
}

func (o ClusterBinaryAuthorizationPtrOutput) Elem() ClusterBinaryAuthorizationOutput {
	return o.ApplyT(func(v *ClusterBinaryAuthorization) ClusterBinaryAuthorization {
		if v != nil {
			return *v
		}
		var ret ClusterBinaryAuthorization
		return ret
	}).(ClusterBinaryAuthorizationOutput)
}

// Enable Binary Authorization for this cluster.
//
// Deprecated: Deprecated in favor of evaluation_mode.
func (o ClusterBinaryAuthorizationPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterBinaryAuthorization) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Mode of operation for Binary Authorization policy evaluation.
func (o ClusterBinaryAuthorizationPtrOutput) EvaluationMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterBinaryAuthorization) *string {
		if v == nil {
			return nil
		}
		return v.EvaluationMode
	}).(pulumi.StringPtrOutput)
}

type ClusterClusterAutoscaling struct {
	// Contains defaults for a node pool created by NAP. A subset of fields also apply to
	// GKE Autopilot clusters.
	// Structure is documented below.
	AutoProvisioningDefaults *ClusterClusterAutoscalingAutoProvisioningDefaults `pulumi:"autoProvisioningDefaults"`
	// Configuration
	// options for the [Autoscaling profile](https://cloud.google.com/kubernetes-engine/docs/concepts/cluster-autoscaler#autoscaling_profiles)
	// feature, which lets you choose whether the cluster autoscaler should optimize for resource utilization or resource availability
	// when deciding to remove nodes from a cluster. Can be `BALANCED` or `OPTIMIZE_UTILIZATION`. Defaults to `BALANCED`.
	AutoscalingProfile *string `pulumi:"autoscalingProfile"`
	// Whether node auto-provisioning is enabled. Must be supplied for GKE Standard clusters, `true` is implied
	// for autopilot clusters. Resource limits for `cpu` and `memory` must be defined to enable node auto-provisioning for GKE Standard.
	Enabled *bool `pulumi:"enabled"`
	// Global constraints for machine resources in the
	// cluster. Configuring the `cpu` and `memory` types is required if node
	// auto-provisioning is enabled. These limits will apply to node pool autoscaling
	// in addition to node auto-provisioning. Structure is documented below.
	ResourceLimits []ClusterClusterAutoscalingResourceLimit `pulumi:"resourceLimits"`
}

// ClusterClusterAutoscalingInput is an input type that accepts ClusterClusterAutoscalingArgs and ClusterClusterAutoscalingOutput values.
// You can construct a concrete instance of `ClusterClusterAutoscalingInput` via:
//
//	ClusterClusterAutoscalingArgs{...}
type ClusterClusterAutoscalingInput interface {
	pulumi.Input

	ToClusterClusterAutoscalingOutput() ClusterClusterAutoscalingOutput
	ToClusterClusterAutoscalingOutputWithContext(context.Context) ClusterClusterAutoscalingOutput
}

type ClusterClusterAutoscalingArgs struct {
	// Contains defaults for a node pool created by NAP. A subset of fields also apply to
	// GKE Autopilot clusters.
	// Structure is documented below.
	AutoProvisioningDefaults ClusterClusterAutoscalingAutoProvisioningDefaultsPtrInput `pulumi:"autoProvisioningDefaults"`
	// Configuration
	// options for the [Autoscaling profile](https://cloud.google.com/kubernetes-engine/docs/concepts/cluster-autoscaler#autoscaling_profiles)
	// feature, which lets you choose whether the cluster autoscaler should optimize for resource utilization or resource availability
	// when deciding to remove nodes from a cluster. Can be `BALANCED` or `OPTIMIZE_UTILIZATION`. Defaults to `BALANCED`.
	AutoscalingProfile pulumi.StringPtrInput `pulumi:"autoscalingProfile"`
	// Whether node auto-provisioning is enabled. Must be supplied for GKE Standard clusters, `true` is implied
	// for autopilot clusters. Resource limits for `cpu` and `memory` must be defined to enable node auto-provisioning for GKE Standard.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Global constraints for machine resources in the
	// cluster. Configuring the `cpu` and `memory` types is required if node
	// auto-provisioning is enabled. These limits will apply to node pool autoscaling
	// in addition to node auto-provisioning. Structure is documented below.
	ResourceLimits ClusterClusterAutoscalingResourceLimitArrayInput `pulumi:"resourceLimits"`
}

func (ClusterClusterAutoscalingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterAutoscaling)(nil)).Elem()
}

func (i ClusterClusterAutoscalingArgs) ToClusterClusterAutoscalingOutput() ClusterClusterAutoscalingOutput {
	return i.ToClusterClusterAutoscalingOutputWithContext(context.Background())
}

func (i ClusterClusterAutoscalingArgs) ToClusterClusterAutoscalingOutputWithContext(ctx context.Context) ClusterClusterAutoscalingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterAutoscalingOutput)
}

func (i ClusterClusterAutoscalingArgs) ToClusterClusterAutoscalingPtrOutput() ClusterClusterAutoscalingPtrOutput {
	return i.ToClusterClusterAutoscalingPtrOutputWithContext(context.Background())
}

func (i ClusterClusterAutoscalingArgs) ToClusterClusterAutoscalingPtrOutputWithContext(ctx context.Context) ClusterClusterAutoscalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterAutoscalingOutput).ToClusterClusterAutoscalingPtrOutputWithContext(ctx)
}

// ClusterClusterAutoscalingPtrInput is an input type that accepts ClusterClusterAutoscalingArgs, ClusterClusterAutoscalingPtr and ClusterClusterAutoscalingPtrOutput values.
// You can construct a concrete instance of `ClusterClusterAutoscalingPtrInput` via:
//
//	        ClusterClusterAutoscalingArgs{...}
//
//	or:
//
//	        nil
type ClusterClusterAutoscalingPtrInput interface {
	pulumi.Input

	ToClusterClusterAutoscalingPtrOutput() ClusterClusterAutoscalingPtrOutput
	ToClusterClusterAutoscalingPtrOutputWithContext(context.Context) ClusterClusterAutoscalingPtrOutput
}

type clusterClusterAutoscalingPtrType ClusterClusterAutoscalingArgs

func ClusterClusterAutoscalingPtr(v *ClusterClusterAutoscalingArgs) ClusterClusterAutoscalingPtrInput {
	return (*clusterClusterAutoscalingPtrType)(v)
}

func (*clusterClusterAutoscalingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterAutoscaling)(nil)).Elem()
}

func (i *clusterClusterAutoscalingPtrType) ToClusterClusterAutoscalingPtrOutput() ClusterClusterAutoscalingPtrOutput {
	return i.ToClusterClusterAutoscalingPtrOutputWithContext(context.Background())
}

func (i *clusterClusterAutoscalingPtrType) ToClusterClusterAutoscalingPtrOutputWithContext(ctx context.Context) ClusterClusterAutoscalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterAutoscalingPtrOutput)
}

type ClusterClusterAutoscalingOutput struct{ *pulumi.OutputState }

func (ClusterClusterAutoscalingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterAutoscaling)(nil)).Elem()
}

func (o ClusterClusterAutoscalingOutput) ToClusterClusterAutoscalingOutput() ClusterClusterAutoscalingOutput {
	return o
}

func (o ClusterClusterAutoscalingOutput) ToClusterClusterAutoscalingOutputWithContext(ctx context.Context) ClusterClusterAutoscalingOutput {
	return o
}

func (o ClusterClusterAutoscalingOutput) ToClusterClusterAutoscalingPtrOutput() ClusterClusterAutoscalingPtrOutput {
	return o.ToClusterClusterAutoscalingPtrOutputWithContext(context.Background())
}

func (o ClusterClusterAutoscalingOutput) ToClusterClusterAutoscalingPtrOutputWithContext(ctx context.Context) ClusterClusterAutoscalingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterClusterAutoscaling) *ClusterClusterAutoscaling {
		return &v
	}).(ClusterClusterAutoscalingPtrOutput)
}

// Contains defaults for a node pool created by NAP. A subset of fields also apply to
// GKE Autopilot clusters.
// Structure is documented below.
func (o ClusterClusterAutoscalingOutput) AutoProvisioningDefaults() ClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutput {
	return o.ApplyT(func(v ClusterClusterAutoscaling) *ClusterClusterAutoscalingAutoProvisioningDefaults {
		return v.AutoProvisioningDefaults
	}).(ClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutput)
}

// Configuration
// options for the [Autoscaling profile](https://cloud.google.com/kubernetes-engine/docs/concepts/cluster-autoscaler#autoscaling_profiles)
// feature, which lets you choose whether the cluster autoscaler should optimize for resource utilization or resource availability
// when deciding to remove nodes from a cluster. Can be `BALANCED` or `OPTIMIZE_UTILIZATION`. Defaults to `BALANCED`.
func (o ClusterClusterAutoscalingOutput) AutoscalingProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterAutoscaling) *string { return v.AutoscalingProfile }).(pulumi.StringPtrOutput)
}

// Whether node auto-provisioning is enabled. Must be supplied for GKE Standard clusters, `true` is implied
// for autopilot clusters. Resource limits for `cpu` and `memory` must be defined to enable node auto-provisioning for GKE Standard.
func (o ClusterClusterAutoscalingOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterClusterAutoscaling) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Global constraints for machine resources in the
// cluster. Configuring the `cpu` and `memory` types is required if node
// auto-provisioning is enabled. These limits will apply to node pool autoscaling
// in addition to node auto-provisioning. Structure is documented below.
func (o ClusterClusterAutoscalingOutput) ResourceLimits() ClusterClusterAutoscalingResourceLimitArrayOutput {
	return o.ApplyT(func(v ClusterClusterAutoscaling) []ClusterClusterAutoscalingResourceLimit { return v.ResourceLimits }).(ClusterClusterAutoscalingResourceLimitArrayOutput)
}

type ClusterClusterAutoscalingPtrOutput struct{ *pulumi.OutputState }

func (ClusterClusterAutoscalingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterAutoscaling)(nil)).Elem()
}

func (o ClusterClusterAutoscalingPtrOutput) ToClusterClusterAutoscalingPtrOutput() ClusterClusterAutoscalingPtrOutput {
	return o
}

func (o ClusterClusterAutoscalingPtrOutput) ToClusterClusterAutoscalingPtrOutputWithContext(ctx context.Context) ClusterClusterAutoscalingPtrOutput {
	return o
}

func (o ClusterClusterAutoscalingPtrOutput) Elem() ClusterClusterAutoscalingOutput {
	return o.ApplyT(func(v *ClusterClusterAutoscaling) ClusterClusterAutoscaling {
		if v != nil {
			return *v
		}
		var ret ClusterClusterAutoscaling
		return ret
	}).(ClusterClusterAutoscalingOutput)
}

// Contains defaults for a node pool created by NAP. A subset of fields also apply to
// GKE Autopilot clusters.
// Structure is documented below.
func (o ClusterClusterAutoscalingPtrOutput) AutoProvisioningDefaults() ClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutput {
	return o.ApplyT(func(v *ClusterClusterAutoscaling) *ClusterClusterAutoscalingAutoProvisioningDefaults {
		if v == nil {
			return nil
		}
		return v.AutoProvisioningDefaults
	}).(ClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutput)
}

// Configuration
// options for the [Autoscaling profile](https://cloud.google.com/kubernetes-engine/docs/concepts/cluster-autoscaler#autoscaling_profiles)
// feature, which lets you choose whether the cluster autoscaler should optimize for resource utilization or resource availability
// when deciding to remove nodes from a cluster. Can be `BALANCED` or `OPTIMIZE_UTILIZATION`. Defaults to `BALANCED`.
func (o ClusterClusterAutoscalingPtrOutput) AutoscalingProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterClusterAutoscaling) *string {
		if v == nil {
			return nil
		}
		return v.AutoscalingProfile
	}).(pulumi.StringPtrOutput)
}

// Whether node auto-provisioning is enabled. Must be supplied for GKE Standard clusters, `true` is implied
// for autopilot clusters. Resource limits for `cpu` and `memory` must be defined to enable node auto-provisioning for GKE Standard.
func (o ClusterClusterAutoscalingPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterClusterAutoscaling) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Global constraints for machine resources in the
// cluster. Configuring the `cpu` and `memory` types is required if node
// auto-provisioning is enabled. These limits will apply to node pool autoscaling
// in addition to node auto-provisioning. Structure is documented below.
func (o ClusterClusterAutoscalingPtrOutput) ResourceLimits() ClusterClusterAutoscalingResourceLimitArrayOutput {
	return o.ApplyT(func(v *ClusterClusterAutoscaling) []ClusterClusterAutoscalingResourceLimit {
		if v == nil {
			return nil
		}
		return v.ResourceLimits
	}).(ClusterClusterAutoscalingResourceLimitArrayOutput)
}

type ClusterClusterAutoscalingAutoProvisioningDefaults struct {
	// The Customer Managed Encryption Key used to encrypt the boot disk attached to each node in the node pool. This should be of the form projects/[KEY_PROJECT_ID]/locations/[LOCATION]/keyRings/[RING_NAME]/cryptoKeys/[KEY_NAME]. For more information about protecting resources with Cloud KMS Keys please see: https://cloud.google.com/compute/docs/disks/customer-managed-encryption
	BootDiskKmsKey *string `pulumi:"bootDiskKmsKey"`
	// Size of the disk attached to each node, specified in GB. The smallest allowed disk size is 10GB. Defaults to `100`
	DiskSize *int `pulumi:"diskSize"`
	// Type of the disk attached to each node (e.g. 'pd-standard', 'pd-ssd' or 'pd-balanced'). Defaults to `pd-standard`
	DiskType *string `pulumi:"diskType"`
	// The default image type used by NAP once a new node pool is being created. Please note that according to the [official documentation](https://cloud.google.com/kubernetes-engine/docs/how-to/node-auto-provisioning#default-image-type) the value must be one of the [COS_CONTAINERD, COS, UBUNTU_CONTAINERD, UBUNTU]. __NOTE__ : COS AND UBUNTU are deprecated as of `GKE 1.24`
	ImageType *string `pulumi:"imageType"`
	// NodeManagement configuration for this NodePool. Structure is documented below.
	Management *ClusterClusterAutoscalingAutoProvisioningDefaultsManagement `pulumi:"management"`
	// Minimum CPU platform to be used for NAP created node pools. The instance may be scheduled on the
	// specified or newer CPU platform. Applicable values are the friendly names of CPU platforms, such
	// as "Intel Haswell" or "Intel Sandy Bridge".
	MinCpuPlatform *string `pulumi:"minCpuPlatform"`
	// Scopes that are used by NAP and GKE Autopilot when creating node pools. Use the "https://www.googleapis.com/auth/cloud-platform" scope to grant access to all APIs. It is recommended that you set `serviceAccount` to a non-default service account and grant IAM roles to that service account for only the resources that it needs.
	//
	// > `monitoring.write` is always enabled regardless of user input.  `monitoring` and `logging.write` may also be enabled depending on the values for `monitoringService` and `loggingService`.
	OauthScopes []string `pulumi:"oauthScopes"`
	// The Google Cloud Platform Service Account to be used by the node VMs created by GKE Autopilot or NAP.
	ServiceAccount *string `pulumi:"serviceAccount"`
	// Shielded Instance options. Structure is documented below.
	ShieldedInstanceConfig *ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfig `pulumi:"shieldedInstanceConfig"`
	// Specifies the upgrade settings for NAP created node pools
	UpgradeSettings *ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettings `pulumi:"upgradeSettings"`
}

// ClusterClusterAutoscalingAutoProvisioningDefaultsInput is an input type that accepts ClusterClusterAutoscalingAutoProvisioningDefaultsArgs and ClusterClusterAutoscalingAutoProvisioningDefaultsOutput values.
// You can construct a concrete instance of `ClusterClusterAutoscalingAutoProvisioningDefaultsInput` via:
//
//	ClusterClusterAutoscalingAutoProvisioningDefaultsArgs{...}
type ClusterClusterAutoscalingAutoProvisioningDefaultsInput interface {
	pulumi.Input

	ToClusterClusterAutoscalingAutoProvisioningDefaultsOutput() ClusterClusterAutoscalingAutoProvisioningDefaultsOutput
	ToClusterClusterAutoscalingAutoProvisioningDefaultsOutputWithContext(context.Context) ClusterClusterAutoscalingAutoProvisioningDefaultsOutput
}

type ClusterClusterAutoscalingAutoProvisioningDefaultsArgs struct {
	// The Customer Managed Encryption Key used to encrypt the boot disk attached to each node in the node pool. This should be of the form projects/[KEY_PROJECT_ID]/locations/[LOCATION]/keyRings/[RING_NAME]/cryptoKeys/[KEY_NAME]. For more information about protecting resources with Cloud KMS Keys please see: https://cloud.google.com/compute/docs/disks/customer-managed-encryption
	BootDiskKmsKey pulumi.StringPtrInput `pulumi:"bootDiskKmsKey"`
	// Size of the disk attached to each node, specified in GB. The smallest allowed disk size is 10GB. Defaults to `100`
	DiskSize pulumi.IntPtrInput `pulumi:"diskSize"`
	// Type of the disk attached to each node (e.g. 'pd-standard', 'pd-ssd' or 'pd-balanced'). Defaults to `pd-standard`
	DiskType pulumi.StringPtrInput `pulumi:"diskType"`
	// The default image type used by NAP once a new node pool is being created. Please note that according to the [official documentation](https://cloud.google.com/kubernetes-engine/docs/how-to/node-auto-provisioning#default-image-type) the value must be one of the [COS_CONTAINERD, COS, UBUNTU_CONTAINERD, UBUNTU]. __NOTE__ : COS AND UBUNTU are deprecated as of `GKE 1.24`
	ImageType pulumi.StringPtrInput `pulumi:"imageType"`
	// NodeManagement configuration for this NodePool. Structure is documented below.
	Management ClusterClusterAutoscalingAutoProvisioningDefaultsManagementPtrInput `pulumi:"management"`
	// Minimum CPU platform to be used for NAP created node pools. The instance may be scheduled on the
	// specified or newer CPU platform. Applicable values are the friendly names of CPU platforms, such
	// as "Intel Haswell" or "Intel Sandy Bridge".
	MinCpuPlatform pulumi.StringPtrInput `pulumi:"minCpuPlatform"`
	// Scopes that are used by NAP and GKE Autopilot when creating node pools. Use the "https://www.googleapis.com/auth/cloud-platform" scope to grant access to all APIs. It is recommended that you set `serviceAccount` to a non-default service account and grant IAM roles to that service account for only the resources that it needs.
	//
	// > `monitoring.write` is always enabled regardless of user input.  `monitoring` and `logging.write` may also be enabled depending on the values for `monitoringService` and `loggingService`.
	OauthScopes pulumi.StringArrayInput `pulumi:"oauthScopes"`
	// The Google Cloud Platform Service Account to be used by the node VMs created by GKE Autopilot or NAP.
	ServiceAccount pulumi.StringPtrInput `pulumi:"serviceAccount"`
	// Shielded Instance options. Structure is documented below.
	ShieldedInstanceConfig ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigPtrInput `pulumi:"shieldedInstanceConfig"`
	// Specifies the upgrade settings for NAP created node pools
	UpgradeSettings ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsPtrInput `pulumi:"upgradeSettings"`
}

func (ClusterClusterAutoscalingAutoProvisioningDefaultsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterAutoscalingAutoProvisioningDefaults)(nil)).Elem()
}

func (i ClusterClusterAutoscalingAutoProvisioningDefaultsArgs) ToClusterClusterAutoscalingAutoProvisioningDefaultsOutput() ClusterClusterAutoscalingAutoProvisioningDefaultsOutput {
	return i.ToClusterClusterAutoscalingAutoProvisioningDefaultsOutputWithContext(context.Background())
}

func (i ClusterClusterAutoscalingAutoProvisioningDefaultsArgs) ToClusterClusterAutoscalingAutoProvisioningDefaultsOutputWithContext(ctx context.Context) ClusterClusterAutoscalingAutoProvisioningDefaultsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterAutoscalingAutoProvisioningDefaultsOutput)
}

func (i ClusterClusterAutoscalingAutoProvisioningDefaultsArgs) ToClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutput() ClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutput {
	return i.ToClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutputWithContext(context.Background())
}

func (i ClusterClusterAutoscalingAutoProvisioningDefaultsArgs) ToClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutputWithContext(ctx context.Context) ClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterAutoscalingAutoProvisioningDefaultsOutput).ToClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutputWithContext(ctx)
}

// ClusterClusterAutoscalingAutoProvisioningDefaultsPtrInput is an input type that accepts ClusterClusterAutoscalingAutoProvisioningDefaultsArgs, ClusterClusterAutoscalingAutoProvisioningDefaultsPtr and ClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutput values.
// You can construct a concrete instance of `ClusterClusterAutoscalingAutoProvisioningDefaultsPtrInput` via:
//
//	        ClusterClusterAutoscalingAutoProvisioningDefaultsArgs{...}
//
//	or:
//
//	        nil
type ClusterClusterAutoscalingAutoProvisioningDefaultsPtrInput interface {
	pulumi.Input

	ToClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutput() ClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutput
	ToClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutputWithContext(context.Context) ClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutput
}

type clusterClusterAutoscalingAutoProvisioningDefaultsPtrType ClusterClusterAutoscalingAutoProvisioningDefaultsArgs

func ClusterClusterAutoscalingAutoProvisioningDefaultsPtr(v *ClusterClusterAutoscalingAutoProvisioningDefaultsArgs) ClusterClusterAutoscalingAutoProvisioningDefaultsPtrInput {
	return (*clusterClusterAutoscalingAutoProvisioningDefaultsPtrType)(v)
}

func (*clusterClusterAutoscalingAutoProvisioningDefaultsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterAutoscalingAutoProvisioningDefaults)(nil)).Elem()
}

func (i *clusterClusterAutoscalingAutoProvisioningDefaultsPtrType) ToClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutput() ClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutput {
	return i.ToClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutputWithContext(context.Background())
}

func (i *clusterClusterAutoscalingAutoProvisioningDefaultsPtrType) ToClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutputWithContext(ctx context.Context) ClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutput)
}

type ClusterClusterAutoscalingAutoProvisioningDefaultsOutput struct{ *pulumi.OutputState }

func (ClusterClusterAutoscalingAutoProvisioningDefaultsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterAutoscalingAutoProvisioningDefaults)(nil)).Elem()
}

func (o ClusterClusterAutoscalingAutoProvisioningDefaultsOutput) ToClusterClusterAutoscalingAutoProvisioningDefaultsOutput() ClusterClusterAutoscalingAutoProvisioningDefaultsOutput {
	return o
}

func (o ClusterClusterAutoscalingAutoProvisioningDefaultsOutput) ToClusterClusterAutoscalingAutoProvisioningDefaultsOutputWithContext(ctx context.Context) ClusterClusterAutoscalingAutoProvisioningDefaultsOutput {
	return o
}

func (o ClusterClusterAutoscalingAutoProvisioningDefaultsOutput) ToClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutput() ClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutput {
	return o.ToClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutputWithContext(context.Background())
}

func (o ClusterClusterAutoscalingAutoProvisioningDefaultsOutput) ToClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutputWithContext(ctx context.Context) ClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterClusterAutoscalingAutoProvisioningDefaults) *ClusterClusterAutoscalingAutoProvisioningDefaults {
		return &v
	}).(ClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutput)
}

// The Customer Managed Encryption Key used to encrypt the boot disk attached to each node in the node pool. This should be of the form projects/[KEY_PROJECT_ID]/locations/[LOCATION]/keyRings/[RING_NAME]/cryptoKeys/[KEY_NAME]. For more information about protecting resources with Cloud KMS Keys please see: https://cloud.google.com/compute/docs/disks/customer-managed-encryption
func (o ClusterClusterAutoscalingAutoProvisioningDefaultsOutput) BootDiskKmsKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterAutoscalingAutoProvisioningDefaults) *string { return v.BootDiskKmsKey }).(pulumi.StringPtrOutput)
}

// Size of the disk attached to each node, specified in GB. The smallest allowed disk size is 10GB. Defaults to `100`
func (o ClusterClusterAutoscalingAutoProvisioningDefaultsOutput) DiskSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterClusterAutoscalingAutoProvisioningDefaults) *int { return v.DiskSize }).(pulumi.IntPtrOutput)
}

// Type of the disk attached to each node (e.g. 'pd-standard', 'pd-ssd' or 'pd-balanced'). Defaults to `pd-standard`
func (o ClusterClusterAutoscalingAutoProvisioningDefaultsOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterAutoscalingAutoProvisioningDefaults) *string { return v.DiskType }).(pulumi.StringPtrOutput)
}

// The default image type used by NAP once a new node pool is being created. Please note that according to the [official documentation](https://cloud.google.com/kubernetes-engine/docs/how-to/node-auto-provisioning#default-image-type) the value must be one of the [COS_CONTAINERD, COS, UBUNTU_CONTAINERD, UBUNTU]. __NOTE__ : COS AND UBUNTU are deprecated as of `GKE 1.24`
func (o ClusterClusterAutoscalingAutoProvisioningDefaultsOutput) ImageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterAutoscalingAutoProvisioningDefaults) *string { return v.ImageType }).(pulumi.StringPtrOutput)
}

// NodeManagement configuration for this NodePool. Structure is documented below.
func (o ClusterClusterAutoscalingAutoProvisioningDefaultsOutput) Management() ClusterClusterAutoscalingAutoProvisioningDefaultsManagementPtrOutput {
	return o.ApplyT(func(v ClusterClusterAutoscalingAutoProvisioningDefaults) *ClusterClusterAutoscalingAutoProvisioningDefaultsManagement {
		return v.Management
	}).(ClusterClusterAutoscalingAutoProvisioningDefaultsManagementPtrOutput)
}

// Minimum CPU platform to be used for NAP created node pools. The instance may be scheduled on the
// specified or newer CPU platform. Applicable values are the friendly names of CPU platforms, such
// as "Intel Haswell" or "Intel Sandy Bridge".
func (o ClusterClusterAutoscalingAutoProvisioningDefaultsOutput) MinCpuPlatform() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterAutoscalingAutoProvisioningDefaults) *string { return v.MinCpuPlatform }).(pulumi.StringPtrOutput)
}

// Scopes that are used by NAP and GKE Autopilot when creating node pools. Use the "https://www.googleapis.com/auth/cloud-platform" scope to grant access to all APIs. It is recommended that you set `serviceAccount` to a non-default service account and grant IAM roles to that service account for only the resources that it needs.
//
// > `monitoring.write` is always enabled regardless of user input.  `monitoring` and `logging.write` may also be enabled depending on the values for `monitoringService` and `loggingService`.
func (o ClusterClusterAutoscalingAutoProvisioningDefaultsOutput) OauthScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterClusterAutoscalingAutoProvisioningDefaults) []string { return v.OauthScopes }).(pulumi.StringArrayOutput)
}

// The Google Cloud Platform Service Account to be used by the node VMs created by GKE Autopilot or NAP.
func (o ClusterClusterAutoscalingAutoProvisioningDefaultsOutput) ServiceAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterAutoscalingAutoProvisioningDefaults) *string { return v.ServiceAccount }).(pulumi.StringPtrOutput)
}

// Shielded Instance options. Structure is documented below.
func (o ClusterClusterAutoscalingAutoProvisioningDefaultsOutput) ShieldedInstanceConfig() ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigPtrOutput {
	return o.ApplyT(func(v ClusterClusterAutoscalingAutoProvisioningDefaults) *ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfig {
		return v.ShieldedInstanceConfig
	}).(ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigPtrOutput)
}

// Specifies the upgrade settings for NAP created node pools
func (o ClusterClusterAutoscalingAutoProvisioningDefaultsOutput) UpgradeSettings() ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsPtrOutput {
	return o.ApplyT(func(v ClusterClusterAutoscalingAutoProvisioningDefaults) *ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettings {
		return v.UpgradeSettings
	}).(ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsPtrOutput)
}

type ClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutput struct{ *pulumi.OutputState }

func (ClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterAutoscalingAutoProvisioningDefaults)(nil)).Elem()
}

func (o ClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutput) ToClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutput() ClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutput {
	return o
}

func (o ClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutput) ToClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutputWithContext(ctx context.Context) ClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutput {
	return o
}

func (o ClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutput) Elem() ClusterClusterAutoscalingAutoProvisioningDefaultsOutput {
	return o.ApplyT(func(v *ClusterClusterAutoscalingAutoProvisioningDefaults) ClusterClusterAutoscalingAutoProvisioningDefaults {
		if v != nil {
			return *v
		}
		var ret ClusterClusterAutoscalingAutoProvisioningDefaults
		return ret
	}).(ClusterClusterAutoscalingAutoProvisioningDefaultsOutput)
}

// The Customer Managed Encryption Key used to encrypt the boot disk attached to each node in the node pool. This should be of the form projects/[KEY_PROJECT_ID]/locations/[LOCATION]/keyRings/[RING_NAME]/cryptoKeys/[KEY_NAME]. For more information about protecting resources with Cloud KMS Keys please see: https://cloud.google.com/compute/docs/disks/customer-managed-encryption
func (o ClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutput) BootDiskKmsKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterClusterAutoscalingAutoProvisioningDefaults) *string {
		if v == nil {
			return nil
		}
		return v.BootDiskKmsKey
	}).(pulumi.StringPtrOutput)
}

// Size of the disk attached to each node, specified in GB. The smallest allowed disk size is 10GB. Defaults to `100`
func (o ClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutput) DiskSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterClusterAutoscalingAutoProvisioningDefaults) *int {
		if v == nil {
			return nil
		}
		return v.DiskSize
	}).(pulumi.IntPtrOutput)
}

// Type of the disk attached to each node (e.g. 'pd-standard', 'pd-ssd' or 'pd-balanced'). Defaults to `pd-standard`
func (o ClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterClusterAutoscalingAutoProvisioningDefaults) *string {
		if v == nil {
			return nil
		}
		return v.DiskType
	}).(pulumi.StringPtrOutput)
}

// The default image type used by NAP once a new node pool is being created. Please note that according to the [official documentation](https://cloud.google.com/kubernetes-engine/docs/how-to/node-auto-provisioning#default-image-type) the value must be one of the [COS_CONTAINERD, COS, UBUNTU_CONTAINERD, UBUNTU]. __NOTE__ : COS AND UBUNTU are deprecated as of `GKE 1.24`
func (o ClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutput) ImageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterClusterAutoscalingAutoProvisioningDefaults) *string {
		if v == nil {
			return nil
		}
		return v.ImageType
	}).(pulumi.StringPtrOutput)
}

// NodeManagement configuration for this NodePool. Structure is documented below.
func (o ClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutput) Management() ClusterClusterAutoscalingAutoProvisioningDefaultsManagementPtrOutput {
	return o.ApplyT(func(v *ClusterClusterAutoscalingAutoProvisioningDefaults) *ClusterClusterAutoscalingAutoProvisioningDefaultsManagement {
		if v == nil {
			return nil
		}
		return v.Management
	}).(ClusterClusterAutoscalingAutoProvisioningDefaultsManagementPtrOutput)
}

// Minimum CPU platform to be used for NAP created node pools. The instance may be scheduled on the
// specified or newer CPU platform. Applicable values are the friendly names of CPU platforms, such
// as "Intel Haswell" or "Intel Sandy Bridge".
func (o ClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutput) MinCpuPlatform() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterClusterAutoscalingAutoProvisioningDefaults) *string {
		if v == nil {
			return nil
		}
		return v.MinCpuPlatform
	}).(pulumi.StringPtrOutput)
}

// Scopes that are used by NAP and GKE Autopilot when creating node pools. Use the "https://www.googleapis.com/auth/cloud-platform" scope to grant access to all APIs. It is recommended that you set `serviceAccount` to a non-default service account and grant IAM roles to that service account for only the resources that it needs.
//
// > `monitoring.write` is always enabled regardless of user input.  `monitoring` and `logging.write` may also be enabled depending on the values for `monitoringService` and `loggingService`.
func (o ClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutput) OauthScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterClusterAutoscalingAutoProvisioningDefaults) []string {
		if v == nil {
			return nil
		}
		return v.OauthScopes
	}).(pulumi.StringArrayOutput)
}

// The Google Cloud Platform Service Account to be used by the node VMs created by GKE Autopilot or NAP.
func (o ClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutput) ServiceAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterClusterAutoscalingAutoProvisioningDefaults) *string {
		if v == nil {
			return nil
		}
		return v.ServiceAccount
	}).(pulumi.StringPtrOutput)
}

// Shielded Instance options. Structure is documented below.
func (o ClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutput) ShieldedInstanceConfig() ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigPtrOutput {
	return o.ApplyT(func(v *ClusterClusterAutoscalingAutoProvisioningDefaults) *ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfig {
		if v == nil {
			return nil
		}
		return v.ShieldedInstanceConfig
	}).(ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigPtrOutput)
}

// Specifies the upgrade settings for NAP created node pools
func (o ClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutput) UpgradeSettings() ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsPtrOutput {
	return o.ApplyT(func(v *ClusterClusterAutoscalingAutoProvisioningDefaults) *ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettings {
		if v == nil {
			return nil
		}
		return v.UpgradeSettings
	}).(ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsPtrOutput)
}

type ClusterClusterAutoscalingAutoProvisioningDefaultsManagement struct {
	// Specifies whether the node auto-repair is enabled for the node pool. If enabled, the nodes in this node pool will be monitored and, if they fail health checks too many times, an automatic repair action will be triggered.
	//
	// This block also contains several computed attributes, documented below.
	AutoRepair *bool `pulumi:"autoRepair"`
	// Specifies whether node auto-upgrade is enabled for the node pool. If enabled, node auto-upgrade helps keep the nodes in your node pool up to date with the latest release version of Kubernetes.
	AutoUpgrade *bool `pulumi:"autoUpgrade"`
	// Specifies the [Auto Upgrade knobs](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1beta1/NodeManagement#AutoUpgradeOptions) for the node pool.
	UpgradeOptions []ClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOption `pulumi:"upgradeOptions"`
}

// ClusterClusterAutoscalingAutoProvisioningDefaultsManagementInput is an input type that accepts ClusterClusterAutoscalingAutoProvisioningDefaultsManagementArgs and ClusterClusterAutoscalingAutoProvisioningDefaultsManagementOutput values.
// You can construct a concrete instance of `ClusterClusterAutoscalingAutoProvisioningDefaultsManagementInput` via:
//
//	ClusterClusterAutoscalingAutoProvisioningDefaultsManagementArgs{...}
type ClusterClusterAutoscalingAutoProvisioningDefaultsManagementInput interface {
	pulumi.Input

	ToClusterClusterAutoscalingAutoProvisioningDefaultsManagementOutput() ClusterClusterAutoscalingAutoProvisioningDefaultsManagementOutput
	ToClusterClusterAutoscalingAutoProvisioningDefaultsManagementOutputWithContext(context.Context) ClusterClusterAutoscalingAutoProvisioningDefaultsManagementOutput
}

type ClusterClusterAutoscalingAutoProvisioningDefaultsManagementArgs struct {
	// Specifies whether the node auto-repair is enabled for the node pool. If enabled, the nodes in this node pool will be monitored and, if they fail health checks too many times, an automatic repair action will be triggered.
	//
	// This block also contains several computed attributes, documented below.
	AutoRepair pulumi.BoolPtrInput `pulumi:"autoRepair"`
	// Specifies whether node auto-upgrade is enabled for the node pool. If enabled, node auto-upgrade helps keep the nodes in your node pool up to date with the latest release version of Kubernetes.
	AutoUpgrade pulumi.BoolPtrInput `pulumi:"autoUpgrade"`
	// Specifies the [Auto Upgrade knobs](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1beta1/NodeManagement#AutoUpgradeOptions) for the node pool.
	UpgradeOptions ClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionArrayInput `pulumi:"upgradeOptions"`
}

func (ClusterClusterAutoscalingAutoProvisioningDefaultsManagementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterAutoscalingAutoProvisioningDefaultsManagement)(nil)).Elem()
}

func (i ClusterClusterAutoscalingAutoProvisioningDefaultsManagementArgs) ToClusterClusterAutoscalingAutoProvisioningDefaultsManagementOutput() ClusterClusterAutoscalingAutoProvisioningDefaultsManagementOutput {
	return i.ToClusterClusterAutoscalingAutoProvisioningDefaultsManagementOutputWithContext(context.Background())
}

func (i ClusterClusterAutoscalingAutoProvisioningDefaultsManagementArgs) ToClusterClusterAutoscalingAutoProvisioningDefaultsManagementOutputWithContext(ctx context.Context) ClusterClusterAutoscalingAutoProvisioningDefaultsManagementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterAutoscalingAutoProvisioningDefaultsManagementOutput)
}

func (i ClusterClusterAutoscalingAutoProvisioningDefaultsManagementArgs) ToClusterClusterAutoscalingAutoProvisioningDefaultsManagementPtrOutput() ClusterClusterAutoscalingAutoProvisioningDefaultsManagementPtrOutput {
	return i.ToClusterClusterAutoscalingAutoProvisioningDefaultsManagementPtrOutputWithContext(context.Background())
}

func (i ClusterClusterAutoscalingAutoProvisioningDefaultsManagementArgs) ToClusterClusterAutoscalingAutoProvisioningDefaultsManagementPtrOutputWithContext(ctx context.Context) ClusterClusterAutoscalingAutoProvisioningDefaultsManagementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterAutoscalingAutoProvisioningDefaultsManagementOutput).ToClusterClusterAutoscalingAutoProvisioningDefaultsManagementPtrOutputWithContext(ctx)
}

// ClusterClusterAutoscalingAutoProvisioningDefaultsManagementPtrInput is an input type that accepts ClusterClusterAutoscalingAutoProvisioningDefaultsManagementArgs, ClusterClusterAutoscalingAutoProvisioningDefaultsManagementPtr and ClusterClusterAutoscalingAutoProvisioningDefaultsManagementPtrOutput values.
// You can construct a concrete instance of `ClusterClusterAutoscalingAutoProvisioningDefaultsManagementPtrInput` via:
//
//	        ClusterClusterAutoscalingAutoProvisioningDefaultsManagementArgs{...}
//
//	or:
//
//	        nil
type ClusterClusterAutoscalingAutoProvisioningDefaultsManagementPtrInput interface {
	pulumi.Input

	ToClusterClusterAutoscalingAutoProvisioningDefaultsManagementPtrOutput() ClusterClusterAutoscalingAutoProvisioningDefaultsManagementPtrOutput
	ToClusterClusterAutoscalingAutoProvisioningDefaultsManagementPtrOutputWithContext(context.Context) ClusterClusterAutoscalingAutoProvisioningDefaultsManagementPtrOutput
}

type clusterClusterAutoscalingAutoProvisioningDefaultsManagementPtrType ClusterClusterAutoscalingAutoProvisioningDefaultsManagementArgs

func ClusterClusterAutoscalingAutoProvisioningDefaultsManagementPtr(v *ClusterClusterAutoscalingAutoProvisioningDefaultsManagementArgs) ClusterClusterAutoscalingAutoProvisioningDefaultsManagementPtrInput {
	return (*clusterClusterAutoscalingAutoProvisioningDefaultsManagementPtrType)(v)
}

func (*clusterClusterAutoscalingAutoProvisioningDefaultsManagementPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterAutoscalingAutoProvisioningDefaultsManagement)(nil)).Elem()
}

func (i *clusterClusterAutoscalingAutoProvisioningDefaultsManagementPtrType) ToClusterClusterAutoscalingAutoProvisioningDefaultsManagementPtrOutput() ClusterClusterAutoscalingAutoProvisioningDefaultsManagementPtrOutput {
	return i.ToClusterClusterAutoscalingAutoProvisioningDefaultsManagementPtrOutputWithContext(context.Background())
}

func (i *clusterClusterAutoscalingAutoProvisioningDefaultsManagementPtrType) ToClusterClusterAutoscalingAutoProvisioningDefaultsManagementPtrOutputWithContext(ctx context.Context) ClusterClusterAutoscalingAutoProvisioningDefaultsManagementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterAutoscalingAutoProvisioningDefaultsManagementPtrOutput)
}

type ClusterClusterAutoscalingAutoProvisioningDefaultsManagementOutput struct{ *pulumi.OutputState }

func (ClusterClusterAutoscalingAutoProvisioningDefaultsManagementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterAutoscalingAutoProvisioningDefaultsManagement)(nil)).Elem()
}

func (o ClusterClusterAutoscalingAutoProvisioningDefaultsManagementOutput) ToClusterClusterAutoscalingAutoProvisioningDefaultsManagementOutput() ClusterClusterAutoscalingAutoProvisioningDefaultsManagementOutput {
	return o
}

func (o ClusterClusterAutoscalingAutoProvisioningDefaultsManagementOutput) ToClusterClusterAutoscalingAutoProvisioningDefaultsManagementOutputWithContext(ctx context.Context) ClusterClusterAutoscalingAutoProvisioningDefaultsManagementOutput {
	return o
}

func (o ClusterClusterAutoscalingAutoProvisioningDefaultsManagementOutput) ToClusterClusterAutoscalingAutoProvisioningDefaultsManagementPtrOutput() ClusterClusterAutoscalingAutoProvisioningDefaultsManagementPtrOutput {
	return o.ToClusterClusterAutoscalingAutoProvisioningDefaultsManagementPtrOutputWithContext(context.Background())
}

func (o ClusterClusterAutoscalingAutoProvisioningDefaultsManagementOutput) ToClusterClusterAutoscalingAutoProvisioningDefaultsManagementPtrOutputWithContext(ctx context.Context) ClusterClusterAutoscalingAutoProvisioningDefaultsManagementPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterClusterAutoscalingAutoProvisioningDefaultsManagement) *ClusterClusterAutoscalingAutoProvisioningDefaultsManagement {
		return &v
	}).(ClusterClusterAutoscalingAutoProvisioningDefaultsManagementPtrOutput)
}

// Specifies whether the node auto-repair is enabled for the node pool. If enabled, the nodes in this node pool will be monitored and, if they fail health checks too many times, an automatic repair action will be triggered.
//
// This block also contains several computed attributes, documented below.
func (o ClusterClusterAutoscalingAutoProvisioningDefaultsManagementOutput) AutoRepair() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterClusterAutoscalingAutoProvisioningDefaultsManagement) *bool { return v.AutoRepair }).(pulumi.BoolPtrOutput)
}

// Specifies whether node auto-upgrade is enabled for the node pool. If enabled, node auto-upgrade helps keep the nodes in your node pool up to date with the latest release version of Kubernetes.
func (o ClusterClusterAutoscalingAutoProvisioningDefaultsManagementOutput) AutoUpgrade() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterClusterAutoscalingAutoProvisioningDefaultsManagement) *bool { return v.AutoUpgrade }).(pulumi.BoolPtrOutput)
}

// Specifies the [Auto Upgrade knobs](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1beta1/NodeManagement#AutoUpgradeOptions) for the node pool.
func (o ClusterClusterAutoscalingAutoProvisioningDefaultsManagementOutput) UpgradeOptions() ClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionArrayOutput {
	return o.ApplyT(func(v ClusterClusterAutoscalingAutoProvisioningDefaultsManagement) []ClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOption {
		return v.UpgradeOptions
	}).(ClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionArrayOutput)
}

type ClusterClusterAutoscalingAutoProvisioningDefaultsManagementPtrOutput struct{ *pulumi.OutputState }

func (ClusterClusterAutoscalingAutoProvisioningDefaultsManagementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterAutoscalingAutoProvisioningDefaultsManagement)(nil)).Elem()
}

func (o ClusterClusterAutoscalingAutoProvisioningDefaultsManagementPtrOutput) ToClusterClusterAutoscalingAutoProvisioningDefaultsManagementPtrOutput() ClusterClusterAutoscalingAutoProvisioningDefaultsManagementPtrOutput {
	return o
}

func (o ClusterClusterAutoscalingAutoProvisioningDefaultsManagementPtrOutput) ToClusterClusterAutoscalingAutoProvisioningDefaultsManagementPtrOutputWithContext(ctx context.Context) ClusterClusterAutoscalingAutoProvisioningDefaultsManagementPtrOutput {
	return o
}

func (o ClusterClusterAutoscalingAutoProvisioningDefaultsManagementPtrOutput) Elem() ClusterClusterAutoscalingAutoProvisioningDefaultsManagementOutput {
	return o.ApplyT(func(v *ClusterClusterAutoscalingAutoProvisioningDefaultsManagement) ClusterClusterAutoscalingAutoProvisioningDefaultsManagement {
		if v != nil {
			return *v
		}
		var ret ClusterClusterAutoscalingAutoProvisioningDefaultsManagement
		return ret
	}).(ClusterClusterAutoscalingAutoProvisioningDefaultsManagementOutput)
}

// Specifies whether the node auto-repair is enabled for the node pool. If enabled, the nodes in this node pool will be monitored and, if they fail health checks too many times, an automatic repair action will be triggered.
//
// This block also contains several computed attributes, documented below.
func (o ClusterClusterAutoscalingAutoProvisioningDefaultsManagementPtrOutput) AutoRepair() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterClusterAutoscalingAutoProvisioningDefaultsManagement) *bool {
		if v == nil {
			return nil
		}
		return v.AutoRepair
	}).(pulumi.BoolPtrOutput)
}

// Specifies whether node auto-upgrade is enabled for the node pool. If enabled, node auto-upgrade helps keep the nodes in your node pool up to date with the latest release version of Kubernetes.
func (o ClusterClusterAutoscalingAutoProvisioningDefaultsManagementPtrOutput) AutoUpgrade() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterClusterAutoscalingAutoProvisioningDefaultsManagement) *bool {
		if v == nil {
			return nil
		}
		return v.AutoUpgrade
	}).(pulumi.BoolPtrOutput)
}

// Specifies the [Auto Upgrade knobs](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1beta1/NodeManagement#AutoUpgradeOptions) for the node pool.
func (o ClusterClusterAutoscalingAutoProvisioningDefaultsManagementPtrOutput) UpgradeOptions() ClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionArrayOutput {
	return o.ApplyT(func(v *ClusterClusterAutoscalingAutoProvisioningDefaultsManagement) []ClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOption {
		if v == nil {
			return nil
		}
		return v.UpgradeOptions
	}).(ClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionArrayOutput)
}

type ClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOption struct {
	// This field is set when upgrades are about to commence with the approximate start time for the upgrades, in RFC3339 text format.
	AutoUpgradeStartTime *string `pulumi:"autoUpgradeStartTime"`
	// Description of the cluster.
	Description *string `pulumi:"description"`
}

// ClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionInput is an input type that accepts ClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionArgs and ClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionOutput values.
// You can construct a concrete instance of `ClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionInput` via:
//
//	ClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionArgs{...}
type ClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionInput interface {
	pulumi.Input

	ToClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionOutput() ClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionOutput
	ToClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionOutputWithContext(context.Context) ClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionOutput
}

type ClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionArgs struct {
	// This field is set when upgrades are about to commence with the approximate start time for the upgrades, in RFC3339 text format.
	AutoUpgradeStartTime pulumi.StringPtrInput `pulumi:"autoUpgradeStartTime"`
	// Description of the cluster.
	Description pulumi.StringPtrInput `pulumi:"description"`
}

func (ClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOption)(nil)).Elem()
}

func (i ClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionArgs) ToClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionOutput() ClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionOutput {
	return i.ToClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionOutputWithContext(context.Background())
}

func (i ClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionArgs) ToClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionOutputWithContext(ctx context.Context) ClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionOutput)
}

// ClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionArrayInput is an input type that accepts ClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionArray and ClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionArrayOutput values.
// You can construct a concrete instance of `ClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionArrayInput` via:
//
//	ClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionArray{ ClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionArgs{...} }
type ClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionArrayInput interface {
	pulumi.Input

	ToClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionArrayOutput() ClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionArrayOutput
	ToClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionArrayOutputWithContext(context.Context) ClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionArrayOutput
}

type ClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionArray []ClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionInput

func (ClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOption)(nil)).Elem()
}

func (i ClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionArray) ToClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionArrayOutput() ClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionArrayOutput {
	return i.ToClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionArrayOutputWithContext(context.Background())
}

func (i ClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionArray) ToClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionArrayOutputWithContext(ctx context.Context) ClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionArrayOutput)
}

type ClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionOutput struct{ *pulumi.OutputState }

func (ClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOption)(nil)).Elem()
}

func (o ClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionOutput) ToClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionOutput() ClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionOutput {
	return o
}

func (o ClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionOutput) ToClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionOutputWithContext(ctx context.Context) ClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionOutput {
	return o
}

// This field is set when upgrades are about to commence with the approximate start time for the upgrades, in RFC3339 text format.
func (o ClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionOutput) AutoUpgradeStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOption) *string {
		return v.AutoUpgradeStartTime
	}).(pulumi.StringPtrOutput)
}

// Description of the cluster.
func (o ClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOption) *string {
		return v.Description
	}).(pulumi.StringPtrOutput)
}

type ClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionArrayOutput struct{ *pulumi.OutputState }

func (ClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOption)(nil)).Elem()
}

func (o ClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionArrayOutput) ToClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionArrayOutput() ClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionArrayOutput {
	return o
}

func (o ClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionArrayOutput) ToClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionArrayOutputWithContext(ctx context.Context) ClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionArrayOutput {
	return o
}

func (o ClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionArrayOutput) Index(i pulumi.IntInput) ClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOption {
		return vs[0].([]ClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOption)[vs[1].(int)]
	}).(ClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionOutput)
}

type ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfig struct {
	// Defines if the instance has integrity monitoring enabled.
	//
	// Enables monitoring and attestation of the boot integrity of the instance. The attestation is performed against the integrity policy baseline. This baseline is initially derived from the implicitly trusted boot image when the instance is created.  Defaults to `true`.
	EnableIntegrityMonitoring *bool `pulumi:"enableIntegrityMonitoring"`
	// Defines if the instance has Secure Boot enabled.
	//
	// Secure Boot helps ensure that the system only runs authentic software by verifying the digital signature of all boot components, and halting the boot process if signature verification fails.  Defaults to `false`.
	EnableSecureBoot *bool `pulumi:"enableSecureBoot"`
}

// ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigInput is an input type that accepts ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigArgs and ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigOutput values.
// You can construct a concrete instance of `ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigInput` via:
//
//	ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigArgs{...}
type ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigInput interface {
	pulumi.Input

	ToClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigOutput() ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigOutput
	ToClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigOutputWithContext(context.Context) ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigOutput
}

type ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigArgs struct {
	// Defines if the instance has integrity monitoring enabled.
	//
	// Enables monitoring and attestation of the boot integrity of the instance. The attestation is performed against the integrity policy baseline. This baseline is initially derived from the implicitly trusted boot image when the instance is created.  Defaults to `true`.
	EnableIntegrityMonitoring pulumi.BoolPtrInput `pulumi:"enableIntegrityMonitoring"`
	// Defines if the instance has Secure Boot enabled.
	//
	// Secure Boot helps ensure that the system only runs authentic software by verifying the digital signature of all boot components, and halting the boot process if signature verification fails.  Defaults to `false`.
	EnableSecureBoot pulumi.BoolPtrInput `pulumi:"enableSecureBoot"`
}

func (ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfig)(nil)).Elem()
}

func (i ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigArgs) ToClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigOutput() ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigOutput {
	return i.ToClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigOutputWithContext(context.Background())
}

func (i ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigArgs) ToClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigOutputWithContext(ctx context.Context) ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigOutput)
}

func (i ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigArgs) ToClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigPtrOutput() ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigPtrOutput {
	return i.ToClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigPtrOutputWithContext(context.Background())
}

func (i ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigArgs) ToClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigPtrOutputWithContext(ctx context.Context) ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigOutput).ToClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigPtrOutputWithContext(ctx)
}

// ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigPtrInput is an input type that accepts ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigArgs, ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigPtr and ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigPtrOutput values.
// You can construct a concrete instance of `ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigPtrInput` via:
//
//	        ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigPtrInput interface {
	pulumi.Input

	ToClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigPtrOutput() ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigPtrOutput
	ToClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigPtrOutputWithContext(context.Context) ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigPtrOutput
}

type clusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigPtrType ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigArgs

func ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigPtr(v *ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigArgs) ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigPtrInput {
	return (*clusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigPtrType)(v)
}

func (*clusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfig)(nil)).Elem()
}

func (i *clusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigPtrType) ToClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigPtrOutput() ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigPtrOutput {
	return i.ToClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigPtrOutputWithContext(context.Background())
}

func (i *clusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigPtrType) ToClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigPtrOutputWithContext(ctx context.Context) ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigPtrOutput)
}

type ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigOutput struct{ *pulumi.OutputState }

func (ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfig)(nil)).Elem()
}

func (o ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigOutput) ToClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigOutput() ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigOutput {
	return o
}

func (o ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigOutput) ToClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigOutputWithContext(ctx context.Context) ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigOutput {
	return o
}

func (o ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigOutput) ToClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigPtrOutput() ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigPtrOutput {
	return o.ToClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigPtrOutputWithContext(context.Background())
}

func (o ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigOutput) ToClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigPtrOutputWithContext(ctx context.Context) ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfig) *ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfig {
		return &v
	}).(ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigPtrOutput)
}

// Defines if the instance has integrity monitoring enabled.
//
// Enables monitoring and attestation of the boot integrity of the instance. The attestation is performed against the integrity policy baseline. This baseline is initially derived from the implicitly trusted boot image when the instance is created.  Defaults to `true`.
func (o ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigOutput) EnableIntegrityMonitoring() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfig) *bool {
		return v.EnableIntegrityMonitoring
	}).(pulumi.BoolPtrOutput)
}

// Defines if the instance has Secure Boot enabled.
//
// Secure Boot helps ensure that the system only runs authentic software by verifying the digital signature of all boot components, and halting the boot process if signature verification fails.  Defaults to `false`.
func (o ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigOutput) EnableSecureBoot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfig) *bool {
		return v.EnableSecureBoot
	}).(pulumi.BoolPtrOutput)
}

type ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfig)(nil)).Elem()
}

func (o ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigPtrOutput) ToClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigPtrOutput() ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigPtrOutput {
	return o
}

func (o ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigPtrOutput) ToClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigPtrOutputWithContext(ctx context.Context) ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigPtrOutput {
	return o
}

func (o ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigPtrOutput) Elem() ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigOutput {
	return o.ApplyT(func(v *ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfig) ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfig {
		if v != nil {
			return *v
		}
		var ret ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfig
		return ret
	}).(ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigOutput)
}

// Defines if the instance has integrity monitoring enabled.
//
// Enables monitoring and attestation of the boot integrity of the instance. The attestation is performed against the integrity policy baseline. This baseline is initially derived from the implicitly trusted boot image when the instance is created.  Defaults to `true`.
func (o ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigPtrOutput) EnableIntegrityMonitoring() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EnableIntegrityMonitoring
	}).(pulumi.BoolPtrOutput)
}

// Defines if the instance has Secure Boot enabled.
//
// Secure Boot helps ensure that the system only runs authentic software by verifying the digital signature of all boot components, and halting the boot process if signature verification fails.  Defaults to `false`.
func (o ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigPtrOutput) EnableSecureBoot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EnableSecureBoot
	}).(pulumi.BoolPtrOutput)
}

type ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettings struct {
	// Settings for blue-green upgrade strategy. To be specified when strategy is set to BLUE_GREEN. Structure is documented below.
	BlueGreenSettings *ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettings `pulumi:"blueGreenSettings"`
	// The maximum number of nodes that can be created beyond the current size of the node pool during the upgrade process. To be used when strategy is set to SURGE. Default is 0.
	MaxSurge *int `pulumi:"maxSurge"`
	// The maximum number of nodes that can be simultaneously unavailable during the upgrade process. To be used when strategy is set to SURGE. Default is 0.
	MaxUnavailable *int `pulumi:"maxUnavailable"`
	// Strategy used for node pool update. Strategy can only be one of BLUE_GREEN or SURGE. The default is value is SURGE.
	Strategy *string `pulumi:"strategy"`
}

// ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsInput is an input type that accepts ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsArgs and ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsOutput values.
// You can construct a concrete instance of `ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsInput` via:
//
//	ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsArgs{...}
type ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsInput interface {
	pulumi.Input

	ToClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsOutput() ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsOutput
	ToClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsOutputWithContext(context.Context) ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsOutput
}

type ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsArgs struct {
	// Settings for blue-green upgrade strategy. To be specified when strategy is set to BLUE_GREEN. Structure is documented below.
	BlueGreenSettings ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsPtrInput `pulumi:"blueGreenSettings"`
	// The maximum number of nodes that can be created beyond the current size of the node pool during the upgrade process. To be used when strategy is set to SURGE. Default is 0.
	MaxSurge pulumi.IntPtrInput `pulumi:"maxSurge"`
	// The maximum number of nodes that can be simultaneously unavailable during the upgrade process. To be used when strategy is set to SURGE. Default is 0.
	MaxUnavailable pulumi.IntPtrInput `pulumi:"maxUnavailable"`
	// Strategy used for node pool update. Strategy can only be one of BLUE_GREEN or SURGE. The default is value is SURGE.
	Strategy pulumi.StringPtrInput `pulumi:"strategy"`
}

func (ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettings)(nil)).Elem()
}

func (i ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsArgs) ToClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsOutput() ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsOutput {
	return i.ToClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsOutputWithContext(context.Background())
}

func (i ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsArgs) ToClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsOutputWithContext(ctx context.Context) ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsOutput)
}

func (i ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsArgs) ToClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsPtrOutput() ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsPtrOutput {
	return i.ToClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsPtrOutputWithContext(context.Background())
}

func (i ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsArgs) ToClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsPtrOutputWithContext(ctx context.Context) ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsOutput).ToClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsPtrOutputWithContext(ctx)
}

// ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsPtrInput is an input type that accepts ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsArgs, ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsPtr and ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsPtrOutput values.
// You can construct a concrete instance of `ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsPtrInput` via:
//
//	        ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsArgs{...}
//
//	or:
//
//	        nil
type ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsPtrInput interface {
	pulumi.Input

	ToClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsPtrOutput() ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsPtrOutput
	ToClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsPtrOutputWithContext(context.Context) ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsPtrOutput
}

type clusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsPtrType ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsArgs

func ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsPtr(v *ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsArgs) ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsPtrInput {
	return (*clusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsPtrType)(v)
}

func (*clusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettings)(nil)).Elem()
}

func (i *clusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsPtrType) ToClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsPtrOutput() ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsPtrOutput {
	return i.ToClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsPtrOutputWithContext(context.Background())
}

func (i *clusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsPtrType) ToClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsPtrOutputWithContext(ctx context.Context) ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsPtrOutput)
}

type ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsOutput struct{ *pulumi.OutputState }

func (ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettings)(nil)).Elem()
}

func (o ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsOutput) ToClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsOutput() ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsOutput {
	return o
}

func (o ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsOutput) ToClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsOutputWithContext(ctx context.Context) ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsOutput {
	return o
}

func (o ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsOutput) ToClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsPtrOutput() ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsPtrOutput {
	return o.ToClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsPtrOutputWithContext(context.Background())
}

func (o ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsOutput) ToClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsPtrOutputWithContext(ctx context.Context) ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettings) *ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettings {
		return &v
	}).(ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsPtrOutput)
}

// Settings for blue-green upgrade strategy. To be specified when strategy is set to BLUE_GREEN. Structure is documented below.
func (o ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsOutput) BlueGreenSettings() ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsPtrOutput {
	return o.ApplyT(func(v ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettings) *ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettings {
		return v.BlueGreenSettings
	}).(ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsPtrOutput)
}

// The maximum number of nodes that can be created beyond the current size of the node pool during the upgrade process. To be used when strategy is set to SURGE. Default is 0.
func (o ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsOutput) MaxSurge() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettings) *int { return v.MaxSurge }).(pulumi.IntPtrOutput)
}

// The maximum number of nodes that can be simultaneously unavailable during the upgrade process. To be used when strategy is set to SURGE. Default is 0.
func (o ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsOutput) MaxUnavailable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettings) *int { return v.MaxUnavailable }).(pulumi.IntPtrOutput)
}

// Strategy used for node pool update. Strategy can only be one of BLUE_GREEN or SURGE. The default is value is SURGE.
func (o ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsOutput) Strategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettings) *string { return v.Strategy }).(pulumi.StringPtrOutput)
}

type ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsPtrOutput struct{ *pulumi.OutputState }

func (ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettings)(nil)).Elem()
}

func (o ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsPtrOutput) ToClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsPtrOutput() ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsPtrOutput {
	return o
}

func (o ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsPtrOutput) ToClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsPtrOutputWithContext(ctx context.Context) ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsPtrOutput {
	return o
}

func (o ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsPtrOutput) Elem() ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsOutput {
	return o.ApplyT(func(v *ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettings) ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettings {
		if v != nil {
			return *v
		}
		var ret ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettings
		return ret
	}).(ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsOutput)
}

// Settings for blue-green upgrade strategy. To be specified when strategy is set to BLUE_GREEN. Structure is documented below.
func (o ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsPtrOutput) BlueGreenSettings() ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsPtrOutput {
	return o.ApplyT(func(v *ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettings) *ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettings {
		if v == nil {
			return nil
		}
		return v.BlueGreenSettings
	}).(ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsPtrOutput)
}

// The maximum number of nodes that can be created beyond the current size of the node pool during the upgrade process. To be used when strategy is set to SURGE. Default is 0.
func (o ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsPtrOutput) MaxSurge() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxSurge
	}).(pulumi.IntPtrOutput)
}

// The maximum number of nodes that can be simultaneously unavailable during the upgrade process. To be used when strategy is set to SURGE. Default is 0.
func (o ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsPtrOutput) MaxUnavailable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxUnavailable
	}).(pulumi.IntPtrOutput)
}

// Strategy used for node pool update. Strategy can only be one of BLUE_GREEN or SURGE. The default is value is SURGE.
func (o ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsPtrOutput) Strategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettings) *string {
		if v == nil {
			return nil
		}
		return v.Strategy
	}).(pulumi.StringPtrOutput)
}

type ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettings struct {
	// Time needed after draining entire blue pool. After this period, blue pool will be cleaned up. A duration in seconds with up to nine fractional digits, ending with 's'. Example: "3.5s".
	NodePoolSoakDuration *string `pulumi:"nodePoolSoakDuration"`
	// Standard policy for the blue-green upgrade. To be specified when strategy is set to BLUE_GREEN. Structure is documented below.
	StandardRolloutPolicy *ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicy `pulumi:"standardRolloutPolicy"`
}

// ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsInput is an input type that accepts ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsArgs and ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsOutput values.
// You can construct a concrete instance of `ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsInput` via:
//
//	ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsArgs{...}
type ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsInput interface {
	pulumi.Input

	ToClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsOutput() ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsOutput
	ToClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsOutputWithContext(context.Context) ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsOutput
}

type ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsArgs struct {
	// Time needed after draining entire blue pool. After this period, blue pool will be cleaned up. A duration in seconds with up to nine fractional digits, ending with 's'. Example: "3.5s".
	NodePoolSoakDuration pulumi.StringPtrInput `pulumi:"nodePoolSoakDuration"`
	// Standard policy for the blue-green upgrade. To be specified when strategy is set to BLUE_GREEN. Structure is documented below.
	StandardRolloutPolicy ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrInput `pulumi:"standardRolloutPolicy"`
}

func (ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettings)(nil)).Elem()
}

func (i ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsArgs) ToClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsOutput() ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsOutput {
	return i.ToClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsOutputWithContext(context.Background())
}

func (i ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsArgs) ToClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsOutputWithContext(ctx context.Context) ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsOutput)
}

func (i ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsArgs) ToClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsPtrOutput() ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsPtrOutput {
	return i.ToClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsPtrOutputWithContext(context.Background())
}

func (i ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsArgs) ToClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsPtrOutputWithContext(ctx context.Context) ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsOutput).ToClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsPtrOutputWithContext(ctx)
}

// ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsPtrInput is an input type that accepts ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsArgs, ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsPtr and ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsPtrOutput values.
// You can construct a concrete instance of `ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsPtrInput` via:
//
//	        ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsArgs{...}
//
//	or:
//
//	        nil
type ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsPtrInput interface {
	pulumi.Input

	ToClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsPtrOutput() ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsPtrOutput
	ToClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsPtrOutputWithContext(context.Context) ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsPtrOutput
}

type clusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsPtrType ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsArgs

func ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsPtr(v *ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsArgs) ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsPtrInput {
	return (*clusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsPtrType)(v)
}

func (*clusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettings)(nil)).Elem()
}

func (i *clusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsPtrType) ToClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsPtrOutput() ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsPtrOutput {
	return i.ToClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsPtrOutputWithContext(context.Background())
}

func (i *clusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsPtrType) ToClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsPtrOutputWithContext(ctx context.Context) ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsPtrOutput)
}

type ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsOutput struct{ *pulumi.OutputState }

func (ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettings)(nil)).Elem()
}

func (o ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsOutput) ToClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsOutput() ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsOutput {
	return o
}

func (o ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsOutput) ToClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsOutputWithContext(ctx context.Context) ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsOutput {
	return o
}

func (o ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsOutput) ToClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsPtrOutput() ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsPtrOutput {
	return o.ToClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsPtrOutputWithContext(context.Background())
}

func (o ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsOutput) ToClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsPtrOutputWithContext(ctx context.Context) ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettings) *ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettings {
		return &v
	}).(ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsPtrOutput)
}

// Time needed after draining entire blue pool. After this period, blue pool will be cleaned up. A duration in seconds with up to nine fractional digits, ending with 's'. Example: "3.5s".
func (o ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsOutput) NodePoolSoakDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettings) *string {
		return v.NodePoolSoakDuration
	}).(pulumi.StringPtrOutput)
}

// Standard policy for the blue-green upgrade. To be specified when strategy is set to BLUE_GREEN. Structure is documented below.
func (o ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsOutput) StandardRolloutPolicy() ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput {
	return o.ApplyT(func(v ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettings) *ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicy {
		return v.StandardRolloutPolicy
	}).(ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput)
}

type ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsPtrOutput struct{ *pulumi.OutputState }

func (ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettings)(nil)).Elem()
}

func (o ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsPtrOutput) ToClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsPtrOutput() ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsPtrOutput {
	return o
}

func (o ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsPtrOutput) ToClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsPtrOutputWithContext(ctx context.Context) ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsPtrOutput {
	return o
}

func (o ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsPtrOutput) Elem() ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsOutput {
	return o.ApplyT(func(v *ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettings) ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettings {
		if v != nil {
			return *v
		}
		var ret ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettings
		return ret
	}).(ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsOutput)
}

// Time needed after draining entire blue pool. After this period, blue pool will be cleaned up. A duration in seconds with up to nine fractional digits, ending with 's'. Example: "3.5s".
func (o ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsPtrOutput) NodePoolSoakDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettings) *string {
		if v == nil {
			return nil
		}
		return v.NodePoolSoakDuration
	}).(pulumi.StringPtrOutput)
}

// Standard policy for the blue-green upgrade. To be specified when strategy is set to BLUE_GREEN. Structure is documented below.
func (o ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsPtrOutput) StandardRolloutPolicy() ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput {
	return o.ApplyT(func(v *ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettings) *ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicy {
		if v == nil {
			return nil
		}
		return v.StandardRolloutPolicy
	}).(ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput)
}

type ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicy struct {
	// Number of blue nodes to drain in a batch. Only one of the batchPercentage or batchNodeCount can be specified.
	BatchNodeCount *int `pulumi:"batchNodeCount"`
	// Percentage of the bool pool nodes to drain in a batch. The range of this field should be (0.0, 1.0). Only one of the batchPercentage or batchNodeCount can be specified.
	BatchPercentage *float64 `pulumi:"batchPercentage"`
	// Soak time after each batch gets drained. A duration in seconds with up to nine fractional digits, ending with 's'. Example: "3.5s".`.
	BatchSoakDuration *string `pulumi:"batchSoakDuration"`
}

// ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyInput is an input type that accepts ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyArgs and ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutput values.
// You can construct a concrete instance of `ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyInput` via:
//
//	ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyArgs{...}
type ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyInput interface {
	pulumi.Input

	ToClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutput() ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutput
	ToClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutputWithContext(context.Context) ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutput
}

type ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyArgs struct {
	// Number of blue nodes to drain in a batch. Only one of the batchPercentage or batchNodeCount can be specified.
	BatchNodeCount pulumi.IntPtrInput `pulumi:"batchNodeCount"`
	// Percentage of the bool pool nodes to drain in a batch. The range of this field should be (0.0, 1.0). Only one of the batchPercentage or batchNodeCount can be specified.
	BatchPercentage pulumi.Float64PtrInput `pulumi:"batchPercentage"`
	// Soak time after each batch gets drained. A duration in seconds with up to nine fractional digits, ending with 's'. Example: "3.5s".`.
	BatchSoakDuration pulumi.StringPtrInput `pulumi:"batchSoakDuration"`
}

func (ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicy)(nil)).Elem()
}

func (i ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyArgs) ToClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutput() ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutput {
	return i.ToClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutputWithContext(context.Background())
}

func (i ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyArgs) ToClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutputWithContext(ctx context.Context) ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutput)
}

func (i ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyArgs) ToClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput() ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput {
	return i.ToClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutputWithContext(context.Background())
}

func (i ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyArgs) ToClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutputWithContext(ctx context.Context) ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutput).ToClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutputWithContext(ctx)
}

// ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrInput is an input type that accepts ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyArgs, ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtr and ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput values.
// You can construct a concrete instance of `ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrInput` via:
//
//	        ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyArgs{...}
//
//	or:
//
//	        nil
type ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrInput interface {
	pulumi.Input

	ToClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput() ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput
	ToClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutputWithContext(context.Context) ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput
}

type clusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrType ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyArgs

func ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtr(v *ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyArgs) ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrInput {
	return (*clusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrType)(v)
}

func (*clusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicy)(nil)).Elem()
}

func (i *clusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrType) ToClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput() ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput {
	return i.ToClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutputWithContext(context.Background())
}

func (i *clusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrType) ToClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutputWithContext(ctx context.Context) ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput)
}

type ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutput struct{ *pulumi.OutputState }

func (ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicy)(nil)).Elem()
}

func (o ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutput) ToClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutput() ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutput {
	return o
}

func (o ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutput) ToClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutputWithContext(ctx context.Context) ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutput {
	return o
}

func (o ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutput) ToClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput() ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput {
	return o.ToClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutputWithContext(context.Background())
}

func (o ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutput) ToClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutputWithContext(ctx context.Context) ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicy) *ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicy {
		return &v
	}).(ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput)
}

// Number of blue nodes to drain in a batch. Only one of the batchPercentage or batchNodeCount can be specified.
func (o ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutput) BatchNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicy) *int {
		return v.BatchNodeCount
	}).(pulumi.IntPtrOutput)
}

// Percentage of the bool pool nodes to drain in a batch. The range of this field should be (0.0, 1.0). Only one of the batchPercentage or batchNodeCount can be specified.
func (o ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutput) BatchPercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicy) *float64 {
		return v.BatchPercentage
	}).(pulumi.Float64PtrOutput)
}

// Soak time after each batch gets drained. A duration in seconds with up to nine fractional digits, ending with 's'. Example: "3.5s".`.
func (o ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutput) BatchSoakDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicy) *string {
		return v.BatchSoakDuration
	}).(pulumi.StringPtrOutput)
}

type ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput struct{ *pulumi.OutputState }

func (ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicy)(nil)).Elem()
}

func (o ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput) ToClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput() ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput {
	return o
}

func (o ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput) ToClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutputWithContext(ctx context.Context) ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput {
	return o
}

func (o ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput) Elem() ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutput {
	return o.ApplyT(func(v *ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicy) ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicy {
		if v != nil {
			return *v
		}
		var ret ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicy
		return ret
	}).(ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutput)
}

// Number of blue nodes to drain in a batch. Only one of the batchPercentage or batchNodeCount can be specified.
func (o ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput) BatchNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicy) *int {
		if v == nil {
			return nil
		}
		return v.BatchNodeCount
	}).(pulumi.IntPtrOutput)
}

// Percentage of the bool pool nodes to drain in a batch. The range of this field should be (0.0, 1.0). Only one of the batchPercentage or batchNodeCount can be specified.
func (o ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput) BatchPercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicy) *float64 {
		if v == nil {
			return nil
		}
		return v.BatchPercentage
	}).(pulumi.Float64PtrOutput)
}

// Soak time after each batch gets drained. A duration in seconds with up to nine fractional digits, ending with 's'. Example: "3.5s".`.
func (o ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput) BatchSoakDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicy) *string {
		if v == nil {
			return nil
		}
		return v.BatchSoakDuration
	}).(pulumi.StringPtrOutput)
}

type ClusterClusterAutoscalingResourceLimit struct {
	// Maximum amount of the resource in the cluster.
	Maximum *int `pulumi:"maximum"`
	// Minimum amount of the resource in the cluster.
	Minimum *int `pulumi:"minimum"`
	// The type of the resource. For example, `cpu` and
	// `memory`.  See the [guide to using Node Auto-Provisioning](https://cloud.google.com/kubernetes-engine/docs/how-to/node-auto-provisioning)
	// for a list of types.
	ResourceType string `pulumi:"resourceType"`
}

// ClusterClusterAutoscalingResourceLimitInput is an input type that accepts ClusterClusterAutoscalingResourceLimitArgs and ClusterClusterAutoscalingResourceLimitOutput values.
// You can construct a concrete instance of `ClusterClusterAutoscalingResourceLimitInput` via:
//
//	ClusterClusterAutoscalingResourceLimitArgs{...}
type ClusterClusterAutoscalingResourceLimitInput interface {
	pulumi.Input

	ToClusterClusterAutoscalingResourceLimitOutput() ClusterClusterAutoscalingResourceLimitOutput
	ToClusterClusterAutoscalingResourceLimitOutputWithContext(context.Context) ClusterClusterAutoscalingResourceLimitOutput
}

type ClusterClusterAutoscalingResourceLimitArgs struct {
	// Maximum amount of the resource in the cluster.
	Maximum pulumi.IntPtrInput `pulumi:"maximum"`
	// Minimum amount of the resource in the cluster.
	Minimum pulumi.IntPtrInput `pulumi:"minimum"`
	// The type of the resource. For example, `cpu` and
	// `memory`.  See the [guide to using Node Auto-Provisioning](https://cloud.google.com/kubernetes-engine/docs/how-to/node-auto-provisioning)
	// for a list of types.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
}

func (ClusterClusterAutoscalingResourceLimitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterAutoscalingResourceLimit)(nil)).Elem()
}

func (i ClusterClusterAutoscalingResourceLimitArgs) ToClusterClusterAutoscalingResourceLimitOutput() ClusterClusterAutoscalingResourceLimitOutput {
	return i.ToClusterClusterAutoscalingResourceLimitOutputWithContext(context.Background())
}

func (i ClusterClusterAutoscalingResourceLimitArgs) ToClusterClusterAutoscalingResourceLimitOutputWithContext(ctx context.Context) ClusterClusterAutoscalingResourceLimitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterAutoscalingResourceLimitOutput)
}

// ClusterClusterAutoscalingResourceLimitArrayInput is an input type that accepts ClusterClusterAutoscalingResourceLimitArray and ClusterClusterAutoscalingResourceLimitArrayOutput values.
// You can construct a concrete instance of `ClusterClusterAutoscalingResourceLimitArrayInput` via:
//
//	ClusterClusterAutoscalingResourceLimitArray{ ClusterClusterAutoscalingResourceLimitArgs{...} }
type ClusterClusterAutoscalingResourceLimitArrayInput interface {
	pulumi.Input

	ToClusterClusterAutoscalingResourceLimitArrayOutput() ClusterClusterAutoscalingResourceLimitArrayOutput
	ToClusterClusterAutoscalingResourceLimitArrayOutputWithContext(context.Context) ClusterClusterAutoscalingResourceLimitArrayOutput
}

type ClusterClusterAutoscalingResourceLimitArray []ClusterClusterAutoscalingResourceLimitInput

func (ClusterClusterAutoscalingResourceLimitArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterClusterAutoscalingResourceLimit)(nil)).Elem()
}

func (i ClusterClusterAutoscalingResourceLimitArray) ToClusterClusterAutoscalingResourceLimitArrayOutput() ClusterClusterAutoscalingResourceLimitArrayOutput {
	return i.ToClusterClusterAutoscalingResourceLimitArrayOutputWithContext(context.Background())
}

func (i ClusterClusterAutoscalingResourceLimitArray) ToClusterClusterAutoscalingResourceLimitArrayOutputWithContext(ctx context.Context) ClusterClusterAutoscalingResourceLimitArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterAutoscalingResourceLimitArrayOutput)
}

type ClusterClusterAutoscalingResourceLimitOutput struct{ *pulumi.OutputState }

func (ClusterClusterAutoscalingResourceLimitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterAutoscalingResourceLimit)(nil)).Elem()
}

func (o ClusterClusterAutoscalingResourceLimitOutput) ToClusterClusterAutoscalingResourceLimitOutput() ClusterClusterAutoscalingResourceLimitOutput {
	return o
}

func (o ClusterClusterAutoscalingResourceLimitOutput) ToClusterClusterAutoscalingResourceLimitOutputWithContext(ctx context.Context) ClusterClusterAutoscalingResourceLimitOutput {
	return o
}

// Maximum amount of the resource in the cluster.
func (o ClusterClusterAutoscalingResourceLimitOutput) Maximum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterClusterAutoscalingResourceLimit) *int { return v.Maximum }).(pulumi.IntPtrOutput)
}

// Minimum amount of the resource in the cluster.
func (o ClusterClusterAutoscalingResourceLimitOutput) Minimum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterClusterAutoscalingResourceLimit) *int { return v.Minimum }).(pulumi.IntPtrOutput)
}

// The type of the resource. For example, `cpu` and
// `memory`.  See the [guide to using Node Auto-Provisioning](https://cloud.google.com/kubernetes-engine/docs/how-to/node-auto-provisioning)
// for a list of types.
func (o ClusterClusterAutoscalingResourceLimitOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterClusterAutoscalingResourceLimit) string { return v.ResourceType }).(pulumi.StringOutput)
}

type ClusterClusterAutoscalingResourceLimitArrayOutput struct{ *pulumi.OutputState }

func (ClusterClusterAutoscalingResourceLimitArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterClusterAutoscalingResourceLimit)(nil)).Elem()
}

func (o ClusterClusterAutoscalingResourceLimitArrayOutput) ToClusterClusterAutoscalingResourceLimitArrayOutput() ClusterClusterAutoscalingResourceLimitArrayOutput {
	return o
}

func (o ClusterClusterAutoscalingResourceLimitArrayOutput) ToClusterClusterAutoscalingResourceLimitArrayOutputWithContext(ctx context.Context) ClusterClusterAutoscalingResourceLimitArrayOutput {
	return o
}

func (o ClusterClusterAutoscalingResourceLimitArrayOutput) Index(i pulumi.IntInput) ClusterClusterAutoscalingResourceLimitOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterClusterAutoscalingResourceLimit {
		return vs[0].([]ClusterClusterAutoscalingResourceLimit)[vs[1].(int)]
	}).(ClusterClusterAutoscalingResourceLimitOutput)
}

type ClusterClusterTelemetry struct {
	// Telemetry integration for the cluster. Supported values (`ENABLED, DISABLED, SYSTEM_ONLY`);
	// `SYSTEM_ONLY` (Only system components are monitored and logged) is only available in GKE versions 1.15 and later.
	Type string `pulumi:"type"`
}

// ClusterClusterTelemetryInput is an input type that accepts ClusterClusterTelemetryArgs and ClusterClusterTelemetryOutput values.
// You can construct a concrete instance of `ClusterClusterTelemetryInput` via:
//
//	ClusterClusterTelemetryArgs{...}
type ClusterClusterTelemetryInput interface {
	pulumi.Input

	ToClusterClusterTelemetryOutput() ClusterClusterTelemetryOutput
	ToClusterClusterTelemetryOutputWithContext(context.Context) ClusterClusterTelemetryOutput
}

type ClusterClusterTelemetryArgs struct {
	// Telemetry integration for the cluster. Supported values (`ENABLED, DISABLED, SYSTEM_ONLY`);
	// `SYSTEM_ONLY` (Only system components are monitored and logged) is only available in GKE versions 1.15 and later.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ClusterClusterTelemetryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterTelemetry)(nil)).Elem()
}

func (i ClusterClusterTelemetryArgs) ToClusterClusterTelemetryOutput() ClusterClusterTelemetryOutput {
	return i.ToClusterClusterTelemetryOutputWithContext(context.Background())
}

func (i ClusterClusterTelemetryArgs) ToClusterClusterTelemetryOutputWithContext(ctx context.Context) ClusterClusterTelemetryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterTelemetryOutput)
}

func (i ClusterClusterTelemetryArgs) ToClusterClusterTelemetryPtrOutput() ClusterClusterTelemetryPtrOutput {
	return i.ToClusterClusterTelemetryPtrOutputWithContext(context.Background())
}

func (i ClusterClusterTelemetryArgs) ToClusterClusterTelemetryPtrOutputWithContext(ctx context.Context) ClusterClusterTelemetryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterTelemetryOutput).ToClusterClusterTelemetryPtrOutputWithContext(ctx)
}

// ClusterClusterTelemetryPtrInput is an input type that accepts ClusterClusterTelemetryArgs, ClusterClusterTelemetryPtr and ClusterClusterTelemetryPtrOutput values.
// You can construct a concrete instance of `ClusterClusterTelemetryPtrInput` via:
//
//	        ClusterClusterTelemetryArgs{...}
//
//	or:
//
//	        nil
type ClusterClusterTelemetryPtrInput interface {
	pulumi.Input

	ToClusterClusterTelemetryPtrOutput() ClusterClusterTelemetryPtrOutput
	ToClusterClusterTelemetryPtrOutputWithContext(context.Context) ClusterClusterTelemetryPtrOutput
}

type clusterClusterTelemetryPtrType ClusterClusterTelemetryArgs

func ClusterClusterTelemetryPtr(v *ClusterClusterTelemetryArgs) ClusterClusterTelemetryPtrInput {
	return (*clusterClusterTelemetryPtrType)(v)
}

func (*clusterClusterTelemetryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterTelemetry)(nil)).Elem()
}

func (i *clusterClusterTelemetryPtrType) ToClusterClusterTelemetryPtrOutput() ClusterClusterTelemetryPtrOutput {
	return i.ToClusterClusterTelemetryPtrOutputWithContext(context.Background())
}

func (i *clusterClusterTelemetryPtrType) ToClusterClusterTelemetryPtrOutputWithContext(ctx context.Context) ClusterClusterTelemetryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterTelemetryPtrOutput)
}

type ClusterClusterTelemetryOutput struct{ *pulumi.OutputState }

func (ClusterClusterTelemetryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterTelemetry)(nil)).Elem()
}

func (o ClusterClusterTelemetryOutput) ToClusterClusterTelemetryOutput() ClusterClusterTelemetryOutput {
	return o
}

func (o ClusterClusterTelemetryOutput) ToClusterClusterTelemetryOutputWithContext(ctx context.Context) ClusterClusterTelemetryOutput {
	return o
}

func (o ClusterClusterTelemetryOutput) ToClusterClusterTelemetryPtrOutput() ClusterClusterTelemetryPtrOutput {
	return o.ToClusterClusterTelemetryPtrOutputWithContext(context.Background())
}

func (o ClusterClusterTelemetryOutput) ToClusterClusterTelemetryPtrOutputWithContext(ctx context.Context) ClusterClusterTelemetryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterClusterTelemetry) *ClusterClusterTelemetry {
		return &v
	}).(ClusterClusterTelemetryPtrOutput)
}

// Telemetry integration for the cluster. Supported values (`ENABLED, DISABLED, SYSTEM_ONLY`);
// `SYSTEM_ONLY` (Only system components are monitored and logged) is only available in GKE versions 1.15 and later.
func (o ClusterClusterTelemetryOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterClusterTelemetry) string { return v.Type }).(pulumi.StringOutput)
}

type ClusterClusterTelemetryPtrOutput struct{ *pulumi.OutputState }

func (ClusterClusterTelemetryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterTelemetry)(nil)).Elem()
}

func (o ClusterClusterTelemetryPtrOutput) ToClusterClusterTelemetryPtrOutput() ClusterClusterTelemetryPtrOutput {
	return o
}

func (o ClusterClusterTelemetryPtrOutput) ToClusterClusterTelemetryPtrOutputWithContext(ctx context.Context) ClusterClusterTelemetryPtrOutput {
	return o
}

func (o ClusterClusterTelemetryPtrOutput) Elem() ClusterClusterTelemetryOutput {
	return o.ApplyT(func(v *ClusterClusterTelemetry) ClusterClusterTelemetry {
		if v != nil {
			return *v
		}
		var ret ClusterClusterTelemetry
		return ret
	}).(ClusterClusterTelemetryOutput)
}

// Telemetry integration for the cluster. Supported values (`ENABLED, DISABLED, SYSTEM_ONLY`);
// `SYSTEM_ONLY` (Only system components are monitored and logged) is only available in GKE versions 1.15 and later.
func (o ClusterClusterTelemetryPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterClusterTelemetry) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type ClusterConfidentialNodes struct {
	// Enable Confidential GKE Nodes for this cluster, to
	// enforce encryption of data in-use.
	Enabled bool `pulumi:"enabled"`
}

// ClusterConfidentialNodesInput is an input type that accepts ClusterConfidentialNodesArgs and ClusterConfidentialNodesOutput values.
// You can construct a concrete instance of `ClusterConfidentialNodesInput` via:
//
//	ClusterConfidentialNodesArgs{...}
type ClusterConfidentialNodesInput interface {
	pulumi.Input

	ToClusterConfidentialNodesOutput() ClusterConfidentialNodesOutput
	ToClusterConfidentialNodesOutputWithContext(context.Context) ClusterConfidentialNodesOutput
}

type ClusterConfidentialNodesArgs struct {
	// Enable Confidential GKE Nodes for this cluster, to
	// enforce encryption of data in-use.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (ClusterConfidentialNodesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterConfidentialNodes)(nil)).Elem()
}

func (i ClusterConfidentialNodesArgs) ToClusterConfidentialNodesOutput() ClusterConfidentialNodesOutput {
	return i.ToClusterConfidentialNodesOutputWithContext(context.Background())
}

func (i ClusterConfidentialNodesArgs) ToClusterConfidentialNodesOutputWithContext(ctx context.Context) ClusterConfidentialNodesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterConfidentialNodesOutput)
}

func (i ClusterConfidentialNodesArgs) ToClusterConfidentialNodesPtrOutput() ClusterConfidentialNodesPtrOutput {
	return i.ToClusterConfidentialNodesPtrOutputWithContext(context.Background())
}

func (i ClusterConfidentialNodesArgs) ToClusterConfidentialNodesPtrOutputWithContext(ctx context.Context) ClusterConfidentialNodesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterConfidentialNodesOutput).ToClusterConfidentialNodesPtrOutputWithContext(ctx)
}

// ClusterConfidentialNodesPtrInput is an input type that accepts ClusterConfidentialNodesArgs, ClusterConfidentialNodesPtr and ClusterConfidentialNodesPtrOutput values.
// You can construct a concrete instance of `ClusterConfidentialNodesPtrInput` via:
//
//	        ClusterConfidentialNodesArgs{...}
//
//	or:
//
//	        nil
type ClusterConfidentialNodesPtrInput interface {
	pulumi.Input

	ToClusterConfidentialNodesPtrOutput() ClusterConfidentialNodesPtrOutput
	ToClusterConfidentialNodesPtrOutputWithContext(context.Context) ClusterConfidentialNodesPtrOutput
}

type clusterConfidentialNodesPtrType ClusterConfidentialNodesArgs

func ClusterConfidentialNodesPtr(v *ClusterConfidentialNodesArgs) ClusterConfidentialNodesPtrInput {
	return (*clusterConfidentialNodesPtrType)(v)
}

func (*clusterConfidentialNodesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterConfidentialNodes)(nil)).Elem()
}

func (i *clusterConfidentialNodesPtrType) ToClusterConfidentialNodesPtrOutput() ClusterConfidentialNodesPtrOutput {
	return i.ToClusterConfidentialNodesPtrOutputWithContext(context.Background())
}

func (i *clusterConfidentialNodesPtrType) ToClusterConfidentialNodesPtrOutputWithContext(ctx context.Context) ClusterConfidentialNodesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterConfidentialNodesPtrOutput)
}

type ClusterConfidentialNodesOutput struct{ *pulumi.OutputState }

func (ClusterConfidentialNodesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterConfidentialNodes)(nil)).Elem()
}

func (o ClusterConfidentialNodesOutput) ToClusterConfidentialNodesOutput() ClusterConfidentialNodesOutput {
	return o
}

func (o ClusterConfidentialNodesOutput) ToClusterConfidentialNodesOutputWithContext(ctx context.Context) ClusterConfidentialNodesOutput {
	return o
}

func (o ClusterConfidentialNodesOutput) ToClusterConfidentialNodesPtrOutput() ClusterConfidentialNodesPtrOutput {
	return o.ToClusterConfidentialNodesPtrOutputWithContext(context.Background())
}

func (o ClusterConfidentialNodesOutput) ToClusterConfidentialNodesPtrOutputWithContext(ctx context.Context) ClusterConfidentialNodesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterConfidentialNodes) *ClusterConfidentialNodes {
		return &v
	}).(ClusterConfidentialNodesPtrOutput)
}

// Enable Confidential GKE Nodes for this cluster, to
// enforce encryption of data in-use.
func (o ClusterConfidentialNodesOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterConfidentialNodes) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type ClusterConfidentialNodesPtrOutput struct{ *pulumi.OutputState }

func (ClusterConfidentialNodesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterConfidentialNodes)(nil)).Elem()
}

func (o ClusterConfidentialNodesPtrOutput) ToClusterConfidentialNodesPtrOutput() ClusterConfidentialNodesPtrOutput {
	return o
}

func (o ClusterConfidentialNodesPtrOutput) ToClusterConfidentialNodesPtrOutputWithContext(ctx context.Context) ClusterConfidentialNodesPtrOutput {
	return o
}

func (o ClusterConfidentialNodesPtrOutput) Elem() ClusterConfidentialNodesOutput {
	return o.ApplyT(func(v *ClusterConfidentialNodes) ClusterConfidentialNodes {
		if v != nil {
			return *v
		}
		var ret ClusterConfidentialNodes
		return ret
	}).(ClusterConfidentialNodesOutput)
}

// Enable Confidential GKE Nodes for this cluster, to
// enforce encryption of data in-use.
func (o ClusterConfidentialNodesPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterConfidentialNodes) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type ClusterCostManagementConfig struct {
	// Whether to enable the [cost allocation](https://cloud.google.com/kubernetes-engine/docs/how-to/cost-allocations) feature.
	Enabled bool `pulumi:"enabled"`
}

// ClusterCostManagementConfigInput is an input type that accepts ClusterCostManagementConfigArgs and ClusterCostManagementConfigOutput values.
// You can construct a concrete instance of `ClusterCostManagementConfigInput` via:
//
//	ClusterCostManagementConfigArgs{...}
type ClusterCostManagementConfigInput interface {
	pulumi.Input

	ToClusterCostManagementConfigOutput() ClusterCostManagementConfigOutput
	ToClusterCostManagementConfigOutputWithContext(context.Context) ClusterCostManagementConfigOutput
}

type ClusterCostManagementConfigArgs struct {
	// Whether to enable the [cost allocation](https://cloud.google.com/kubernetes-engine/docs/how-to/cost-allocations) feature.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (ClusterCostManagementConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCostManagementConfig)(nil)).Elem()
}

func (i ClusterCostManagementConfigArgs) ToClusterCostManagementConfigOutput() ClusterCostManagementConfigOutput {
	return i.ToClusterCostManagementConfigOutputWithContext(context.Background())
}

func (i ClusterCostManagementConfigArgs) ToClusterCostManagementConfigOutputWithContext(ctx context.Context) ClusterCostManagementConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCostManagementConfigOutput)
}

func (i ClusterCostManagementConfigArgs) ToClusterCostManagementConfigPtrOutput() ClusterCostManagementConfigPtrOutput {
	return i.ToClusterCostManagementConfigPtrOutputWithContext(context.Background())
}

func (i ClusterCostManagementConfigArgs) ToClusterCostManagementConfigPtrOutputWithContext(ctx context.Context) ClusterCostManagementConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCostManagementConfigOutput).ToClusterCostManagementConfigPtrOutputWithContext(ctx)
}

// ClusterCostManagementConfigPtrInput is an input type that accepts ClusterCostManagementConfigArgs, ClusterCostManagementConfigPtr and ClusterCostManagementConfigPtrOutput values.
// You can construct a concrete instance of `ClusterCostManagementConfigPtrInput` via:
//
//	        ClusterCostManagementConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterCostManagementConfigPtrInput interface {
	pulumi.Input

	ToClusterCostManagementConfigPtrOutput() ClusterCostManagementConfigPtrOutput
	ToClusterCostManagementConfigPtrOutputWithContext(context.Context) ClusterCostManagementConfigPtrOutput
}

type clusterCostManagementConfigPtrType ClusterCostManagementConfigArgs

func ClusterCostManagementConfigPtr(v *ClusterCostManagementConfigArgs) ClusterCostManagementConfigPtrInput {
	return (*clusterCostManagementConfigPtrType)(v)
}

func (*clusterCostManagementConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterCostManagementConfig)(nil)).Elem()
}

func (i *clusterCostManagementConfigPtrType) ToClusterCostManagementConfigPtrOutput() ClusterCostManagementConfigPtrOutput {
	return i.ToClusterCostManagementConfigPtrOutputWithContext(context.Background())
}

func (i *clusterCostManagementConfigPtrType) ToClusterCostManagementConfigPtrOutputWithContext(ctx context.Context) ClusterCostManagementConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCostManagementConfigPtrOutput)
}

type ClusterCostManagementConfigOutput struct{ *pulumi.OutputState }

func (ClusterCostManagementConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCostManagementConfig)(nil)).Elem()
}

func (o ClusterCostManagementConfigOutput) ToClusterCostManagementConfigOutput() ClusterCostManagementConfigOutput {
	return o
}

func (o ClusterCostManagementConfigOutput) ToClusterCostManagementConfigOutputWithContext(ctx context.Context) ClusterCostManagementConfigOutput {
	return o
}

func (o ClusterCostManagementConfigOutput) ToClusterCostManagementConfigPtrOutput() ClusterCostManagementConfigPtrOutput {
	return o.ToClusterCostManagementConfigPtrOutputWithContext(context.Background())
}

func (o ClusterCostManagementConfigOutput) ToClusterCostManagementConfigPtrOutputWithContext(ctx context.Context) ClusterCostManagementConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterCostManagementConfig) *ClusterCostManagementConfig {
		return &v
	}).(ClusterCostManagementConfigPtrOutput)
}

// Whether to enable the [cost allocation](https://cloud.google.com/kubernetes-engine/docs/how-to/cost-allocations) feature.
func (o ClusterCostManagementConfigOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterCostManagementConfig) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type ClusterCostManagementConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterCostManagementConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterCostManagementConfig)(nil)).Elem()
}

func (o ClusterCostManagementConfigPtrOutput) ToClusterCostManagementConfigPtrOutput() ClusterCostManagementConfigPtrOutput {
	return o
}

func (o ClusterCostManagementConfigPtrOutput) ToClusterCostManagementConfigPtrOutputWithContext(ctx context.Context) ClusterCostManagementConfigPtrOutput {
	return o
}

func (o ClusterCostManagementConfigPtrOutput) Elem() ClusterCostManagementConfigOutput {
	return o.ApplyT(func(v *ClusterCostManagementConfig) ClusterCostManagementConfig {
		if v != nil {
			return *v
		}
		var ret ClusterCostManagementConfig
		return ret
	}).(ClusterCostManagementConfigOutput)
}

// Whether to enable the [cost allocation](https://cloud.google.com/kubernetes-engine/docs/how-to/cost-allocations) feature.
func (o ClusterCostManagementConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterCostManagementConfig) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type ClusterDatabaseEncryption struct {
	// the key to use to encrypt/decrypt secrets.  See the [DatabaseEncryption definition](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1beta1/projects.locations.clusters#Cluster.DatabaseEncryption) for more information.
	//
	// <a name="nestedEnableK8sBetaApis"></a>The `enableK8sBetaApis` block supports:
	KeyName *string `pulumi:"keyName"`
	// `ENCRYPTED` or `DECRYPTED`
	State string `pulumi:"state"`
}

// ClusterDatabaseEncryptionInput is an input type that accepts ClusterDatabaseEncryptionArgs and ClusterDatabaseEncryptionOutput values.
// You can construct a concrete instance of `ClusterDatabaseEncryptionInput` via:
//
//	ClusterDatabaseEncryptionArgs{...}
type ClusterDatabaseEncryptionInput interface {
	pulumi.Input

	ToClusterDatabaseEncryptionOutput() ClusterDatabaseEncryptionOutput
	ToClusterDatabaseEncryptionOutputWithContext(context.Context) ClusterDatabaseEncryptionOutput
}

type ClusterDatabaseEncryptionArgs struct {
	// the key to use to encrypt/decrypt secrets.  See the [DatabaseEncryption definition](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1beta1/projects.locations.clusters#Cluster.DatabaseEncryption) for more information.
	//
	// <a name="nestedEnableK8sBetaApis"></a>The `enableK8sBetaApis` block supports:
	KeyName pulumi.StringPtrInput `pulumi:"keyName"`
	// `ENCRYPTED` or `DECRYPTED`
	State pulumi.StringInput `pulumi:"state"`
}

func (ClusterDatabaseEncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterDatabaseEncryption)(nil)).Elem()
}

func (i ClusterDatabaseEncryptionArgs) ToClusterDatabaseEncryptionOutput() ClusterDatabaseEncryptionOutput {
	return i.ToClusterDatabaseEncryptionOutputWithContext(context.Background())
}

func (i ClusterDatabaseEncryptionArgs) ToClusterDatabaseEncryptionOutputWithContext(ctx context.Context) ClusterDatabaseEncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterDatabaseEncryptionOutput)
}

func (i ClusterDatabaseEncryptionArgs) ToClusterDatabaseEncryptionPtrOutput() ClusterDatabaseEncryptionPtrOutput {
	return i.ToClusterDatabaseEncryptionPtrOutputWithContext(context.Background())
}

func (i ClusterDatabaseEncryptionArgs) ToClusterDatabaseEncryptionPtrOutputWithContext(ctx context.Context) ClusterDatabaseEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterDatabaseEncryptionOutput).ToClusterDatabaseEncryptionPtrOutputWithContext(ctx)
}

// ClusterDatabaseEncryptionPtrInput is an input type that accepts ClusterDatabaseEncryptionArgs, ClusterDatabaseEncryptionPtr and ClusterDatabaseEncryptionPtrOutput values.
// You can construct a concrete instance of `ClusterDatabaseEncryptionPtrInput` via:
//
//	        ClusterDatabaseEncryptionArgs{...}
//
//	or:
//
//	        nil
type ClusterDatabaseEncryptionPtrInput interface {
	pulumi.Input

	ToClusterDatabaseEncryptionPtrOutput() ClusterDatabaseEncryptionPtrOutput
	ToClusterDatabaseEncryptionPtrOutputWithContext(context.Context) ClusterDatabaseEncryptionPtrOutput
}

type clusterDatabaseEncryptionPtrType ClusterDatabaseEncryptionArgs

func ClusterDatabaseEncryptionPtr(v *ClusterDatabaseEncryptionArgs) ClusterDatabaseEncryptionPtrInput {
	return (*clusterDatabaseEncryptionPtrType)(v)
}

func (*clusterDatabaseEncryptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterDatabaseEncryption)(nil)).Elem()
}

func (i *clusterDatabaseEncryptionPtrType) ToClusterDatabaseEncryptionPtrOutput() ClusterDatabaseEncryptionPtrOutput {
	return i.ToClusterDatabaseEncryptionPtrOutputWithContext(context.Background())
}

func (i *clusterDatabaseEncryptionPtrType) ToClusterDatabaseEncryptionPtrOutputWithContext(ctx context.Context) ClusterDatabaseEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterDatabaseEncryptionPtrOutput)
}

type ClusterDatabaseEncryptionOutput struct{ *pulumi.OutputState }

func (ClusterDatabaseEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterDatabaseEncryption)(nil)).Elem()
}

func (o ClusterDatabaseEncryptionOutput) ToClusterDatabaseEncryptionOutput() ClusterDatabaseEncryptionOutput {
	return o
}

func (o ClusterDatabaseEncryptionOutput) ToClusterDatabaseEncryptionOutputWithContext(ctx context.Context) ClusterDatabaseEncryptionOutput {
	return o
}

func (o ClusterDatabaseEncryptionOutput) ToClusterDatabaseEncryptionPtrOutput() ClusterDatabaseEncryptionPtrOutput {
	return o.ToClusterDatabaseEncryptionPtrOutputWithContext(context.Background())
}

func (o ClusterDatabaseEncryptionOutput) ToClusterDatabaseEncryptionPtrOutputWithContext(ctx context.Context) ClusterDatabaseEncryptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterDatabaseEncryption) *ClusterDatabaseEncryption {
		return &v
	}).(ClusterDatabaseEncryptionPtrOutput)
}

// the key to use to encrypt/decrypt secrets.  See the [DatabaseEncryption definition](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1beta1/projects.locations.clusters#Cluster.DatabaseEncryption) for more information.
//
// <a name="nestedEnableK8sBetaApis"></a>The `enableK8sBetaApis` block supports:
func (o ClusterDatabaseEncryptionOutput) KeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterDatabaseEncryption) *string { return v.KeyName }).(pulumi.StringPtrOutput)
}

// `ENCRYPTED` or `DECRYPTED`
func (o ClusterDatabaseEncryptionOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterDatabaseEncryption) string { return v.State }).(pulumi.StringOutput)
}

type ClusterDatabaseEncryptionPtrOutput struct{ *pulumi.OutputState }

func (ClusterDatabaseEncryptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterDatabaseEncryption)(nil)).Elem()
}

func (o ClusterDatabaseEncryptionPtrOutput) ToClusterDatabaseEncryptionPtrOutput() ClusterDatabaseEncryptionPtrOutput {
	return o
}

func (o ClusterDatabaseEncryptionPtrOutput) ToClusterDatabaseEncryptionPtrOutputWithContext(ctx context.Context) ClusterDatabaseEncryptionPtrOutput {
	return o
}

func (o ClusterDatabaseEncryptionPtrOutput) Elem() ClusterDatabaseEncryptionOutput {
	return o.ApplyT(func(v *ClusterDatabaseEncryption) ClusterDatabaseEncryption {
		if v != nil {
			return *v
		}
		var ret ClusterDatabaseEncryption
		return ret
	}).(ClusterDatabaseEncryptionOutput)
}

// the key to use to encrypt/decrypt secrets.  See the [DatabaseEncryption definition](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1beta1/projects.locations.clusters#Cluster.DatabaseEncryption) for more information.
//
// <a name="nestedEnableK8sBetaApis"></a>The `enableK8sBetaApis` block supports:
func (o ClusterDatabaseEncryptionPtrOutput) KeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterDatabaseEncryption) *string {
		if v == nil {
			return nil
		}
		return v.KeyName
	}).(pulumi.StringPtrOutput)
}

// `ENCRYPTED` or `DECRYPTED`
func (o ClusterDatabaseEncryptionPtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterDatabaseEncryption) *string {
		if v == nil {
			return nil
		}
		return &v.State
	}).(pulumi.StringPtrOutput)
}

type ClusterDefaultSnatStatus struct {
	// Whether the cluster disables default in-node sNAT rules. In-node sNAT rules will be disabled when defaultSnatStatus is disabled.When disabled is set to false, default IP masquerade rules will be applied to the nodes to prevent sNAT on cluster internal traffic
	//
	// <a name="nestedClusterTelemetry"></a>The `clusterTelemetry` block supports
	Disabled bool `pulumi:"disabled"`
}

// ClusterDefaultSnatStatusInput is an input type that accepts ClusterDefaultSnatStatusArgs and ClusterDefaultSnatStatusOutput values.
// You can construct a concrete instance of `ClusterDefaultSnatStatusInput` via:
//
//	ClusterDefaultSnatStatusArgs{...}
type ClusterDefaultSnatStatusInput interface {
	pulumi.Input

	ToClusterDefaultSnatStatusOutput() ClusterDefaultSnatStatusOutput
	ToClusterDefaultSnatStatusOutputWithContext(context.Context) ClusterDefaultSnatStatusOutput
}

type ClusterDefaultSnatStatusArgs struct {
	// Whether the cluster disables default in-node sNAT rules. In-node sNAT rules will be disabled when defaultSnatStatus is disabled.When disabled is set to false, default IP masquerade rules will be applied to the nodes to prevent sNAT on cluster internal traffic
	//
	// <a name="nestedClusterTelemetry"></a>The `clusterTelemetry` block supports
	Disabled pulumi.BoolInput `pulumi:"disabled"`
}

func (ClusterDefaultSnatStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterDefaultSnatStatus)(nil)).Elem()
}

func (i ClusterDefaultSnatStatusArgs) ToClusterDefaultSnatStatusOutput() ClusterDefaultSnatStatusOutput {
	return i.ToClusterDefaultSnatStatusOutputWithContext(context.Background())
}

func (i ClusterDefaultSnatStatusArgs) ToClusterDefaultSnatStatusOutputWithContext(ctx context.Context) ClusterDefaultSnatStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterDefaultSnatStatusOutput)
}

func (i ClusterDefaultSnatStatusArgs) ToClusterDefaultSnatStatusPtrOutput() ClusterDefaultSnatStatusPtrOutput {
	return i.ToClusterDefaultSnatStatusPtrOutputWithContext(context.Background())
}

func (i ClusterDefaultSnatStatusArgs) ToClusterDefaultSnatStatusPtrOutputWithContext(ctx context.Context) ClusterDefaultSnatStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterDefaultSnatStatusOutput).ToClusterDefaultSnatStatusPtrOutputWithContext(ctx)
}

// ClusterDefaultSnatStatusPtrInput is an input type that accepts ClusterDefaultSnatStatusArgs, ClusterDefaultSnatStatusPtr and ClusterDefaultSnatStatusPtrOutput values.
// You can construct a concrete instance of `ClusterDefaultSnatStatusPtrInput` via:
//
//	        ClusterDefaultSnatStatusArgs{...}
//
//	or:
//
//	        nil
type ClusterDefaultSnatStatusPtrInput interface {
	pulumi.Input

	ToClusterDefaultSnatStatusPtrOutput() ClusterDefaultSnatStatusPtrOutput
	ToClusterDefaultSnatStatusPtrOutputWithContext(context.Context) ClusterDefaultSnatStatusPtrOutput
}

type clusterDefaultSnatStatusPtrType ClusterDefaultSnatStatusArgs

func ClusterDefaultSnatStatusPtr(v *ClusterDefaultSnatStatusArgs) ClusterDefaultSnatStatusPtrInput {
	return (*clusterDefaultSnatStatusPtrType)(v)
}

func (*clusterDefaultSnatStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterDefaultSnatStatus)(nil)).Elem()
}

func (i *clusterDefaultSnatStatusPtrType) ToClusterDefaultSnatStatusPtrOutput() ClusterDefaultSnatStatusPtrOutput {
	return i.ToClusterDefaultSnatStatusPtrOutputWithContext(context.Background())
}

func (i *clusterDefaultSnatStatusPtrType) ToClusterDefaultSnatStatusPtrOutputWithContext(ctx context.Context) ClusterDefaultSnatStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterDefaultSnatStatusPtrOutput)
}

type ClusterDefaultSnatStatusOutput struct{ *pulumi.OutputState }

func (ClusterDefaultSnatStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterDefaultSnatStatus)(nil)).Elem()
}

func (o ClusterDefaultSnatStatusOutput) ToClusterDefaultSnatStatusOutput() ClusterDefaultSnatStatusOutput {
	return o
}

func (o ClusterDefaultSnatStatusOutput) ToClusterDefaultSnatStatusOutputWithContext(ctx context.Context) ClusterDefaultSnatStatusOutput {
	return o
}

func (o ClusterDefaultSnatStatusOutput) ToClusterDefaultSnatStatusPtrOutput() ClusterDefaultSnatStatusPtrOutput {
	return o.ToClusterDefaultSnatStatusPtrOutputWithContext(context.Background())
}

func (o ClusterDefaultSnatStatusOutput) ToClusterDefaultSnatStatusPtrOutputWithContext(ctx context.Context) ClusterDefaultSnatStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterDefaultSnatStatus) *ClusterDefaultSnatStatus {
		return &v
	}).(ClusterDefaultSnatStatusPtrOutput)
}

// Whether the cluster disables default in-node sNAT rules. In-node sNAT rules will be disabled when defaultSnatStatus is disabled.When disabled is set to false, default IP masquerade rules will be applied to the nodes to prevent sNAT on cluster internal traffic
//
// <a name="nestedClusterTelemetry"></a>The `clusterTelemetry` block supports
func (o ClusterDefaultSnatStatusOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterDefaultSnatStatus) bool { return v.Disabled }).(pulumi.BoolOutput)
}

type ClusterDefaultSnatStatusPtrOutput struct{ *pulumi.OutputState }

func (ClusterDefaultSnatStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterDefaultSnatStatus)(nil)).Elem()
}

func (o ClusterDefaultSnatStatusPtrOutput) ToClusterDefaultSnatStatusPtrOutput() ClusterDefaultSnatStatusPtrOutput {
	return o
}

func (o ClusterDefaultSnatStatusPtrOutput) ToClusterDefaultSnatStatusPtrOutputWithContext(ctx context.Context) ClusterDefaultSnatStatusPtrOutput {
	return o
}

func (o ClusterDefaultSnatStatusPtrOutput) Elem() ClusterDefaultSnatStatusOutput {
	return o.ApplyT(func(v *ClusterDefaultSnatStatus) ClusterDefaultSnatStatus {
		if v != nil {
			return *v
		}
		var ret ClusterDefaultSnatStatus
		return ret
	}).(ClusterDefaultSnatStatusOutput)
}

// Whether the cluster disables default in-node sNAT rules. In-node sNAT rules will be disabled when defaultSnatStatus is disabled.When disabled is set to false, default IP masquerade rules will be applied to the nodes to prevent sNAT on cluster internal traffic
//
// <a name="nestedClusterTelemetry"></a>The `clusterTelemetry` block supports
func (o ClusterDefaultSnatStatusPtrOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterDefaultSnatStatus) *bool {
		if v == nil {
			return nil
		}
		return &v.Disabled
	}).(pulumi.BoolPtrOutput)
}

type ClusterDnsConfig struct {
	// This will enable Cloud DNS additive VPC scope. Must provide a domain name that is unique within the VPC. For this to work `clusterDns = "CLOUD_DNS"` and `clusterDnsScope = "CLUSTER_SCOPE"` must both be set as well.
	AdditiveVpcScopeDnsDomain *string `pulumi:"additiveVpcScopeDnsDomain"`
	// Which in-cluster DNS provider should be used. `PROVIDER_UNSPECIFIED` (default) or `PLATFORM_DEFAULT` or `CLOUD_DNS`.
	ClusterDns *string `pulumi:"clusterDns"`
	// The suffix used for all cluster service records.
	ClusterDnsDomain *string `pulumi:"clusterDnsDomain"`
	// The scope of access to cluster DNS records. `DNS_SCOPE_UNSPECIFIED` (default) or `CLUSTER_SCOPE` or `VPC_SCOPE`.
	ClusterDnsScope *string `pulumi:"clusterDnsScope"`
}

// ClusterDnsConfigInput is an input type that accepts ClusterDnsConfigArgs and ClusterDnsConfigOutput values.
// You can construct a concrete instance of `ClusterDnsConfigInput` via:
//
//	ClusterDnsConfigArgs{...}
type ClusterDnsConfigInput interface {
	pulumi.Input

	ToClusterDnsConfigOutput() ClusterDnsConfigOutput
	ToClusterDnsConfigOutputWithContext(context.Context) ClusterDnsConfigOutput
}

type ClusterDnsConfigArgs struct {
	// This will enable Cloud DNS additive VPC scope. Must provide a domain name that is unique within the VPC. For this to work `clusterDns = "CLOUD_DNS"` and `clusterDnsScope = "CLUSTER_SCOPE"` must both be set as well.
	AdditiveVpcScopeDnsDomain pulumi.StringPtrInput `pulumi:"additiveVpcScopeDnsDomain"`
	// Which in-cluster DNS provider should be used. `PROVIDER_UNSPECIFIED` (default) or `PLATFORM_DEFAULT` or `CLOUD_DNS`.
	ClusterDns pulumi.StringPtrInput `pulumi:"clusterDns"`
	// The suffix used for all cluster service records.
	ClusterDnsDomain pulumi.StringPtrInput `pulumi:"clusterDnsDomain"`
	// The scope of access to cluster DNS records. `DNS_SCOPE_UNSPECIFIED` (default) or `CLUSTER_SCOPE` or `VPC_SCOPE`.
	ClusterDnsScope pulumi.StringPtrInput `pulumi:"clusterDnsScope"`
}

func (ClusterDnsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterDnsConfig)(nil)).Elem()
}

func (i ClusterDnsConfigArgs) ToClusterDnsConfigOutput() ClusterDnsConfigOutput {
	return i.ToClusterDnsConfigOutputWithContext(context.Background())
}

func (i ClusterDnsConfigArgs) ToClusterDnsConfigOutputWithContext(ctx context.Context) ClusterDnsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterDnsConfigOutput)
}

func (i ClusterDnsConfigArgs) ToClusterDnsConfigPtrOutput() ClusterDnsConfigPtrOutput {
	return i.ToClusterDnsConfigPtrOutputWithContext(context.Background())
}

func (i ClusterDnsConfigArgs) ToClusterDnsConfigPtrOutputWithContext(ctx context.Context) ClusterDnsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterDnsConfigOutput).ToClusterDnsConfigPtrOutputWithContext(ctx)
}

// ClusterDnsConfigPtrInput is an input type that accepts ClusterDnsConfigArgs, ClusterDnsConfigPtr and ClusterDnsConfigPtrOutput values.
// You can construct a concrete instance of `ClusterDnsConfigPtrInput` via:
//
//	        ClusterDnsConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterDnsConfigPtrInput interface {
	pulumi.Input

	ToClusterDnsConfigPtrOutput() ClusterDnsConfigPtrOutput
	ToClusterDnsConfigPtrOutputWithContext(context.Context) ClusterDnsConfigPtrOutput
}

type clusterDnsConfigPtrType ClusterDnsConfigArgs

func ClusterDnsConfigPtr(v *ClusterDnsConfigArgs) ClusterDnsConfigPtrInput {
	return (*clusterDnsConfigPtrType)(v)
}

func (*clusterDnsConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterDnsConfig)(nil)).Elem()
}

func (i *clusterDnsConfigPtrType) ToClusterDnsConfigPtrOutput() ClusterDnsConfigPtrOutput {
	return i.ToClusterDnsConfigPtrOutputWithContext(context.Background())
}

func (i *clusterDnsConfigPtrType) ToClusterDnsConfigPtrOutputWithContext(ctx context.Context) ClusterDnsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterDnsConfigPtrOutput)
}

type ClusterDnsConfigOutput struct{ *pulumi.OutputState }

func (ClusterDnsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterDnsConfig)(nil)).Elem()
}

func (o ClusterDnsConfigOutput) ToClusterDnsConfigOutput() ClusterDnsConfigOutput {
	return o
}

func (o ClusterDnsConfigOutput) ToClusterDnsConfigOutputWithContext(ctx context.Context) ClusterDnsConfigOutput {
	return o
}

func (o ClusterDnsConfigOutput) ToClusterDnsConfigPtrOutput() ClusterDnsConfigPtrOutput {
	return o.ToClusterDnsConfigPtrOutputWithContext(context.Background())
}

func (o ClusterDnsConfigOutput) ToClusterDnsConfigPtrOutputWithContext(ctx context.Context) ClusterDnsConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterDnsConfig) *ClusterDnsConfig {
		return &v
	}).(ClusterDnsConfigPtrOutput)
}

// This will enable Cloud DNS additive VPC scope. Must provide a domain name that is unique within the VPC. For this to work `clusterDns = "CLOUD_DNS"` and `clusterDnsScope = "CLUSTER_SCOPE"` must both be set as well.
func (o ClusterDnsConfigOutput) AdditiveVpcScopeDnsDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterDnsConfig) *string { return v.AdditiveVpcScopeDnsDomain }).(pulumi.StringPtrOutput)
}

// Which in-cluster DNS provider should be used. `PROVIDER_UNSPECIFIED` (default) or `PLATFORM_DEFAULT` or `CLOUD_DNS`.
func (o ClusterDnsConfigOutput) ClusterDns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterDnsConfig) *string { return v.ClusterDns }).(pulumi.StringPtrOutput)
}

// The suffix used for all cluster service records.
func (o ClusterDnsConfigOutput) ClusterDnsDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterDnsConfig) *string { return v.ClusterDnsDomain }).(pulumi.StringPtrOutput)
}

// The scope of access to cluster DNS records. `DNS_SCOPE_UNSPECIFIED` (default) or `CLUSTER_SCOPE` or `VPC_SCOPE`.
func (o ClusterDnsConfigOutput) ClusterDnsScope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterDnsConfig) *string { return v.ClusterDnsScope }).(pulumi.StringPtrOutput)
}

type ClusterDnsConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterDnsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterDnsConfig)(nil)).Elem()
}

func (o ClusterDnsConfigPtrOutput) ToClusterDnsConfigPtrOutput() ClusterDnsConfigPtrOutput {
	return o
}

func (o ClusterDnsConfigPtrOutput) ToClusterDnsConfigPtrOutputWithContext(ctx context.Context) ClusterDnsConfigPtrOutput {
	return o
}

func (o ClusterDnsConfigPtrOutput) Elem() ClusterDnsConfigOutput {
	return o.ApplyT(func(v *ClusterDnsConfig) ClusterDnsConfig {
		if v != nil {
			return *v
		}
		var ret ClusterDnsConfig
		return ret
	}).(ClusterDnsConfigOutput)
}

// This will enable Cloud DNS additive VPC scope. Must provide a domain name that is unique within the VPC. For this to work `clusterDns = "CLOUD_DNS"` and `clusterDnsScope = "CLUSTER_SCOPE"` must both be set as well.
func (o ClusterDnsConfigPtrOutput) AdditiveVpcScopeDnsDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterDnsConfig) *string {
		if v == nil {
			return nil
		}
		return v.AdditiveVpcScopeDnsDomain
	}).(pulumi.StringPtrOutput)
}

// Which in-cluster DNS provider should be used. `PROVIDER_UNSPECIFIED` (default) or `PLATFORM_DEFAULT` or `CLOUD_DNS`.
func (o ClusterDnsConfigPtrOutput) ClusterDns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterDnsConfig) *string {
		if v == nil {
			return nil
		}
		return v.ClusterDns
	}).(pulumi.StringPtrOutput)
}

// The suffix used for all cluster service records.
func (o ClusterDnsConfigPtrOutput) ClusterDnsDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterDnsConfig) *string {
		if v == nil {
			return nil
		}
		return v.ClusterDnsDomain
	}).(pulumi.StringPtrOutput)
}

// The scope of access to cluster DNS records. `DNS_SCOPE_UNSPECIFIED` (default) or `CLUSTER_SCOPE` or `VPC_SCOPE`.
func (o ClusterDnsConfigPtrOutput) ClusterDnsScope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterDnsConfig) *string {
		if v == nil {
			return nil
		}
		return v.ClusterDnsScope
	}).(pulumi.StringPtrOutput)
}

type ClusterEnableK8sBetaApis struct {
	// Enabled Kubernetes Beta APIs.
	EnabledApis []string `pulumi:"enabledApis"`
}

// ClusterEnableK8sBetaApisInput is an input type that accepts ClusterEnableK8sBetaApisArgs and ClusterEnableK8sBetaApisOutput values.
// You can construct a concrete instance of `ClusterEnableK8sBetaApisInput` via:
//
//	ClusterEnableK8sBetaApisArgs{...}
type ClusterEnableK8sBetaApisInput interface {
	pulumi.Input

	ToClusterEnableK8sBetaApisOutput() ClusterEnableK8sBetaApisOutput
	ToClusterEnableK8sBetaApisOutputWithContext(context.Context) ClusterEnableK8sBetaApisOutput
}

type ClusterEnableK8sBetaApisArgs struct {
	// Enabled Kubernetes Beta APIs.
	EnabledApis pulumi.StringArrayInput `pulumi:"enabledApis"`
}

func (ClusterEnableK8sBetaApisArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterEnableK8sBetaApis)(nil)).Elem()
}

func (i ClusterEnableK8sBetaApisArgs) ToClusterEnableK8sBetaApisOutput() ClusterEnableK8sBetaApisOutput {
	return i.ToClusterEnableK8sBetaApisOutputWithContext(context.Background())
}

func (i ClusterEnableK8sBetaApisArgs) ToClusterEnableK8sBetaApisOutputWithContext(ctx context.Context) ClusterEnableK8sBetaApisOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterEnableK8sBetaApisOutput)
}

func (i ClusterEnableK8sBetaApisArgs) ToClusterEnableK8sBetaApisPtrOutput() ClusterEnableK8sBetaApisPtrOutput {
	return i.ToClusterEnableK8sBetaApisPtrOutputWithContext(context.Background())
}

func (i ClusterEnableK8sBetaApisArgs) ToClusterEnableK8sBetaApisPtrOutputWithContext(ctx context.Context) ClusterEnableK8sBetaApisPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterEnableK8sBetaApisOutput).ToClusterEnableK8sBetaApisPtrOutputWithContext(ctx)
}

// ClusterEnableK8sBetaApisPtrInput is an input type that accepts ClusterEnableK8sBetaApisArgs, ClusterEnableK8sBetaApisPtr and ClusterEnableK8sBetaApisPtrOutput values.
// You can construct a concrete instance of `ClusterEnableK8sBetaApisPtrInput` via:
//
//	        ClusterEnableK8sBetaApisArgs{...}
//
//	or:
//
//	        nil
type ClusterEnableK8sBetaApisPtrInput interface {
	pulumi.Input

	ToClusterEnableK8sBetaApisPtrOutput() ClusterEnableK8sBetaApisPtrOutput
	ToClusterEnableK8sBetaApisPtrOutputWithContext(context.Context) ClusterEnableK8sBetaApisPtrOutput
}

type clusterEnableK8sBetaApisPtrType ClusterEnableK8sBetaApisArgs

func ClusterEnableK8sBetaApisPtr(v *ClusterEnableK8sBetaApisArgs) ClusterEnableK8sBetaApisPtrInput {
	return (*clusterEnableK8sBetaApisPtrType)(v)
}

func (*clusterEnableK8sBetaApisPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterEnableK8sBetaApis)(nil)).Elem()
}

func (i *clusterEnableK8sBetaApisPtrType) ToClusterEnableK8sBetaApisPtrOutput() ClusterEnableK8sBetaApisPtrOutput {
	return i.ToClusterEnableK8sBetaApisPtrOutputWithContext(context.Background())
}

func (i *clusterEnableK8sBetaApisPtrType) ToClusterEnableK8sBetaApisPtrOutputWithContext(ctx context.Context) ClusterEnableK8sBetaApisPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterEnableK8sBetaApisPtrOutput)
}

type ClusterEnableK8sBetaApisOutput struct{ *pulumi.OutputState }

func (ClusterEnableK8sBetaApisOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterEnableK8sBetaApis)(nil)).Elem()
}

func (o ClusterEnableK8sBetaApisOutput) ToClusterEnableK8sBetaApisOutput() ClusterEnableK8sBetaApisOutput {
	return o
}

func (o ClusterEnableK8sBetaApisOutput) ToClusterEnableK8sBetaApisOutputWithContext(ctx context.Context) ClusterEnableK8sBetaApisOutput {
	return o
}

func (o ClusterEnableK8sBetaApisOutput) ToClusterEnableK8sBetaApisPtrOutput() ClusterEnableK8sBetaApisPtrOutput {
	return o.ToClusterEnableK8sBetaApisPtrOutputWithContext(context.Background())
}

func (o ClusterEnableK8sBetaApisOutput) ToClusterEnableK8sBetaApisPtrOutputWithContext(ctx context.Context) ClusterEnableK8sBetaApisPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterEnableK8sBetaApis) *ClusterEnableK8sBetaApis {
		return &v
	}).(ClusterEnableK8sBetaApisPtrOutput)
}

// Enabled Kubernetes Beta APIs.
func (o ClusterEnableK8sBetaApisOutput) EnabledApis() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterEnableK8sBetaApis) []string { return v.EnabledApis }).(pulumi.StringArrayOutput)
}

type ClusterEnableK8sBetaApisPtrOutput struct{ *pulumi.OutputState }

func (ClusterEnableK8sBetaApisPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterEnableK8sBetaApis)(nil)).Elem()
}

func (o ClusterEnableK8sBetaApisPtrOutput) ToClusterEnableK8sBetaApisPtrOutput() ClusterEnableK8sBetaApisPtrOutput {
	return o
}

func (o ClusterEnableK8sBetaApisPtrOutput) ToClusterEnableK8sBetaApisPtrOutputWithContext(ctx context.Context) ClusterEnableK8sBetaApisPtrOutput {
	return o
}

func (o ClusterEnableK8sBetaApisPtrOutput) Elem() ClusterEnableK8sBetaApisOutput {
	return o.ApplyT(func(v *ClusterEnableK8sBetaApis) ClusterEnableK8sBetaApis {
		if v != nil {
			return *v
		}
		var ret ClusterEnableK8sBetaApis
		return ret
	}).(ClusterEnableK8sBetaApisOutput)
}

// Enabled Kubernetes Beta APIs.
func (o ClusterEnableK8sBetaApisPtrOutput) EnabledApis() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterEnableK8sBetaApis) []string {
		if v == nil {
			return nil
		}
		return v.EnabledApis
	}).(pulumi.StringArrayOutput)
}

type ClusterFleet struct {
	// The resource name of the fleet Membership resource associated to this cluster with format `//gkehub.googleapis.com/projects/{{project}}/locations/{{location}}/memberships/{{name}}`. See the official doc for [fleet management](https://cloud.google.com/kubernetes-engine/docs/fleets-overview).
	Membership *string `pulumi:"membership"`
	// The short name of the fleet membership, extracted from `fleet.0.membership`. You can use this field to configure `membershipId` under google_gkehub_feature_membership.
	MembershipId *string `pulumi:"membershipId"`
	// The location of the fleet membership,  extracted from `fleet.0.membership`. You can use this field to configure `membershipLocation` under google_gkehub_feature_membership.
	MembershipLocation *string `pulumi:"membershipLocation"`
	// Whether the cluster has been registered via the fleet API.
	PreRegistered *bool `pulumi:"preRegistered"`
	// The name of the Fleet host project where this cluster will be registered.
	Project *string `pulumi:"project"`
}

// ClusterFleetInput is an input type that accepts ClusterFleetArgs and ClusterFleetOutput values.
// You can construct a concrete instance of `ClusterFleetInput` via:
//
//	ClusterFleetArgs{...}
type ClusterFleetInput interface {
	pulumi.Input

	ToClusterFleetOutput() ClusterFleetOutput
	ToClusterFleetOutputWithContext(context.Context) ClusterFleetOutput
}

type ClusterFleetArgs struct {
	// The resource name of the fleet Membership resource associated to this cluster with format `//gkehub.googleapis.com/projects/{{project}}/locations/{{location}}/memberships/{{name}}`. See the official doc for [fleet management](https://cloud.google.com/kubernetes-engine/docs/fleets-overview).
	Membership pulumi.StringPtrInput `pulumi:"membership"`
	// The short name of the fleet membership, extracted from `fleet.0.membership`. You can use this field to configure `membershipId` under google_gkehub_feature_membership.
	MembershipId pulumi.StringPtrInput `pulumi:"membershipId"`
	// The location of the fleet membership,  extracted from `fleet.0.membership`. You can use this field to configure `membershipLocation` under google_gkehub_feature_membership.
	MembershipLocation pulumi.StringPtrInput `pulumi:"membershipLocation"`
	// Whether the cluster has been registered via the fleet API.
	PreRegistered pulumi.BoolPtrInput `pulumi:"preRegistered"`
	// The name of the Fleet host project where this cluster will be registered.
	Project pulumi.StringPtrInput `pulumi:"project"`
}

func (ClusterFleetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterFleet)(nil)).Elem()
}

func (i ClusterFleetArgs) ToClusterFleetOutput() ClusterFleetOutput {
	return i.ToClusterFleetOutputWithContext(context.Background())
}

func (i ClusterFleetArgs) ToClusterFleetOutputWithContext(ctx context.Context) ClusterFleetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterFleetOutput)
}

func (i ClusterFleetArgs) ToClusterFleetPtrOutput() ClusterFleetPtrOutput {
	return i.ToClusterFleetPtrOutputWithContext(context.Background())
}

func (i ClusterFleetArgs) ToClusterFleetPtrOutputWithContext(ctx context.Context) ClusterFleetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterFleetOutput).ToClusterFleetPtrOutputWithContext(ctx)
}

// ClusterFleetPtrInput is an input type that accepts ClusterFleetArgs, ClusterFleetPtr and ClusterFleetPtrOutput values.
// You can construct a concrete instance of `ClusterFleetPtrInput` via:
//
//	        ClusterFleetArgs{...}
//
//	or:
//
//	        nil
type ClusterFleetPtrInput interface {
	pulumi.Input

	ToClusterFleetPtrOutput() ClusterFleetPtrOutput
	ToClusterFleetPtrOutputWithContext(context.Context) ClusterFleetPtrOutput
}

type clusterFleetPtrType ClusterFleetArgs

func ClusterFleetPtr(v *ClusterFleetArgs) ClusterFleetPtrInput {
	return (*clusterFleetPtrType)(v)
}

func (*clusterFleetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterFleet)(nil)).Elem()
}

func (i *clusterFleetPtrType) ToClusterFleetPtrOutput() ClusterFleetPtrOutput {
	return i.ToClusterFleetPtrOutputWithContext(context.Background())
}

func (i *clusterFleetPtrType) ToClusterFleetPtrOutputWithContext(ctx context.Context) ClusterFleetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterFleetPtrOutput)
}

type ClusterFleetOutput struct{ *pulumi.OutputState }

func (ClusterFleetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterFleet)(nil)).Elem()
}

func (o ClusterFleetOutput) ToClusterFleetOutput() ClusterFleetOutput {
	return o
}

func (o ClusterFleetOutput) ToClusterFleetOutputWithContext(ctx context.Context) ClusterFleetOutput {
	return o
}

func (o ClusterFleetOutput) ToClusterFleetPtrOutput() ClusterFleetPtrOutput {
	return o.ToClusterFleetPtrOutputWithContext(context.Background())
}

func (o ClusterFleetOutput) ToClusterFleetPtrOutputWithContext(ctx context.Context) ClusterFleetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterFleet) *ClusterFleet {
		return &v
	}).(ClusterFleetPtrOutput)
}

// The resource name of the fleet Membership resource associated to this cluster with format `//gkehub.googleapis.com/projects/{{project}}/locations/{{location}}/memberships/{{name}}`. See the official doc for [fleet management](https://cloud.google.com/kubernetes-engine/docs/fleets-overview).
func (o ClusterFleetOutput) Membership() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterFleet) *string { return v.Membership }).(pulumi.StringPtrOutput)
}

// The short name of the fleet membership, extracted from `fleet.0.membership`. You can use this field to configure `membershipId` under google_gkehub_feature_membership.
func (o ClusterFleetOutput) MembershipId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterFleet) *string { return v.MembershipId }).(pulumi.StringPtrOutput)
}

// The location of the fleet membership,  extracted from `fleet.0.membership`. You can use this field to configure `membershipLocation` under google_gkehub_feature_membership.
func (o ClusterFleetOutput) MembershipLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterFleet) *string { return v.MembershipLocation }).(pulumi.StringPtrOutput)
}

// Whether the cluster has been registered via the fleet API.
func (o ClusterFleetOutput) PreRegistered() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterFleet) *bool { return v.PreRegistered }).(pulumi.BoolPtrOutput)
}

// The name of the Fleet host project where this cluster will be registered.
func (o ClusterFleetOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterFleet) *string { return v.Project }).(pulumi.StringPtrOutput)
}

type ClusterFleetPtrOutput struct{ *pulumi.OutputState }

func (ClusterFleetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterFleet)(nil)).Elem()
}

func (o ClusterFleetPtrOutput) ToClusterFleetPtrOutput() ClusterFleetPtrOutput {
	return o
}

func (o ClusterFleetPtrOutput) ToClusterFleetPtrOutputWithContext(ctx context.Context) ClusterFleetPtrOutput {
	return o
}

func (o ClusterFleetPtrOutput) Elem() ClusterFleetOutput {
	return o.ApplyT(func(v *ClusterFleet) ClusterFleet {
		if v != nil {
			return *v
		}
		var ret ClusterFleet
		return ret
	}).(ClusterFleetOutput)
}

// The resource name of the fleet Membership resource associated to this cluster with format `//gkehub.googleapis.com/projects/{{project}}/locations/{{location}}/memberships/{{name}}`. See the official doc for [fleet management](https://cloud.google.com/kubernetes-engine/docs/fleets-overview).
func (o ClusterFleetPtrOutput) Membership() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterFleet) *string {
		if v == nil {
			return nil
		}
		return v.Membership
	}).(pulumi.StringPtrOutput)
}

// The short name of the fleet membership, extracted from `fleet.0.membership`. You can use this field to configure `membershipId` under google_gkehub_feature_membership.
func (o ClusterFleetPtrOutput) MembershipId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterFleet) *string {
		if v == nil {
			return nil
		}
		return v.MembershipId
	}).(pulumi.StringPtrOutput)
}

// The location of the fleet membership,  extracted from `fleet.0.membership`. You can use this field to configure `membershipLocation` under google_gkehub_feature_membership.
func (o ClusterFleetPtrOutput) MembershipLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterFleet) *string {
		if v == nil {
			return nil
		}
		return v.MembershipLocation
	}).(pulumi.StringPtrOutput)
}

// Whether the cluster has been registered via the fleet API.
func (o ClusterFleetPtrOutput) PreRegistered() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterFleet) *bool {
		if v == nil {
			return nil
		}
		return v.PreRegistered
	}).(pulumi.BoolPtrOutput)
}

// The name of the Fleet host project where this cluster will be registered.
func (o ClusterFleetPtrOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterFleet) *string {
		if v == nil {
			return nil
		}
		return v.Project
	}).(pulumi.StringPtrOutput)
}

type ClusterGatewayApiConfig struct {
	// Which Gateway Api channel should be used. `CHANNEL_DISABLED`, `CHANNEL_EXPERIMENTAL` or `CHANNEL_STANDARD`.
	Channel string `pulumi:"channel"`
}

// ClusterGatewayApiConfigInput is an input type that accepts ClusterGatewayApiConfigArgs and ClusterGatewayApiConfigOutput values.
// You can construct a concrete instance of `ClusterGatewayApiConfigInput` via:
//
//	ClusterGatewayApiConfigArgs{...}
type ClusterGatewayApiConfigInput interface {
	pulumi.Input

	ToClusterGatewayApiConfigOutput() ClusterGatewayApiConfigOutput
	ToClusterGatewayApiConfigOutputWithContext(context.Context) ClusterGatewayApiConfigOutput
}

type ClusterGatewayApiConfigArgs struct {
	// Which Gateway Api channel should be used. `CHANNEL_DISABLED`, `CHANNEL_EXPERIMENTAL` or `CHANNEL_STANDARD`.
	Channel pulumi.StringInput `pulumi:"channel"`
}

func (ClusterGatewayApiConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterGatewayApiConfig)(nil)).Elem()
}

func (i ClusterGatewayApiConfigArgs) ToClusterGatewayApiConfigOutput() ClusterGatewayApiConfigOutput {
	return i.ToClusterGatewayApiConfigOutputWithContext(context.Background())
}

func (i ClusterGatewayApiConfigArgs) ToClusterGatewayApiConfigOutputWithContext(ctx context.Context) ClusterGatewayApiConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterGatewayApiConfigOutput)
}

func (i ClusterGatewayApiConfigArgs) ToClusterGatewayApiConfigPtrOutput() ClusterGatewayApiConfigPtrOutput {
	return i.ToClusterGatewayApiConfigPtrOutputWithContext(context.Background())
}

func (i ClusterGatewayApiConfigArgs) ToClusterGatewayApiConfigPtrOutputWithContext(ctx context.Context) ClusterGatewayApiConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterGatewayApiConfigOutput).ToClusterGatewayApiConfigPtrOutputWithContext(ctx)
}

// ClusterGatewayApiConfigPtrInput is an input type that accepts ClusterGatewayApiConfigArgs, ClusterGatewayApiConfigPtr and ClusterGatewayApiConfigPtrOutput values.
// You can construct a concrete instance of `ClusterGatewayApiConfigPtrInput` via:
//
//	        ClusterGatewayApiConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterGatewayApiConfigPtrInput interface {
	pulumi.Input

	ToClusterGatewayApiConfigPtrOutput() ClusterGatewayApiConfigPtrOutput
	ToClusterGatewayApiConfigPtrOutputWithContext(context.Context) ClusterGatewayApiConfigPtrOutput
}

type clusterGatewayApiConfigPtrType ClusterGatewayApiConfigArgs

func ClusterGatewayApiConfigPtr(v *ClusterGatewayApiConfigArgs) ClusterGatewayApiConfigPtrInput {
	return (*clusterGatewayApiConfigPtrType)(v)
}

func (*clusterGatewayApiConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterGatewayApiConfig)(nil)).Elem()
}

func (i *clusterGatewayApiConfigPtrType) ToClusterGatewayApiConfigPtrOutput() ClusterGatewayApiConfigPtrOutput {
	return i.ToClusterGatewayApiConfigPtrOutputWithContext(context.Background())
}

func (i *clusterGatewayApiConfigPtrType) ToClusterGatewayApiConfigPtrOutputWithContext(ctx context.Context) ClusterGatewayApiConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterGatewayApiConfigPtrOutput)
}

type ClusterGatewayApiConfigOutput struct{ *pulumi.OutputState }

func (ClusterGatewayApiConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterGatewayApiConfig)(nil)).Elem()
}

func (o ClusterGatewayApiConfigOutput) ToClusterGatewayApiConfigOutput() ClusterGatewayApiConfigOutput {
	return o
}

func (o ClusterGatewayApiConfigOutput) ToClusterGatewayApiConfigOutputWithContext(ctx context.Context) ClusterGatewayApiConfigOutput {
	return o
}

func (o ClusterGatewayApiConfigOutput) ToClusterGatewayApiConfigPtrOutput() ClusterGatewayApiConfigPtrOutput {
	return o.ToClusterGatewayApiConfigPtrOutputWithContext(context.Background())
}

func (o ClusterGatewayApiConfigOutput) ToClusterGatewayApiConfigPtrOutputWithContext(ctx context.Context) ClusterGatewayApiConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterGatewayApiConfig) *ClusterGatewayApiConfig {
		return &v
	}).(ClusterGatewayApiConfigPtrOutput)
}

// Which Gateway Api channel should be used. `CHANNEL_DISABLED`, `CHANNEL_EXPERIMENTAL` or `CHANNEL_STANDARD`.
func (o ClusterGatewayApiConfigOutput) Channel() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterGatewayApiConfig) string { return v.Channel }).(pulumi.StringOutput)
}

type ClusterGatewayApiConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterGatewayApiConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterGatewayApiConfig)(nil)).Elem()
}

func (o ClusterGatewayApiConfigPtrOutput) ToClusterGatewayApiConfigPtrOutput() ClusterGatewayApiConfigPtrOutput {
	return o
}

func (o ClusterGatewayApiConfigPtrOutput) ToClusterGatewayApiConfigPtrOutputWithContext(ctx context.Context) ClusterGatewayApiConfigPtrOutput {
	return o
}

func (o ClusterGatewayApiConfigPtrOutput) Elem() ClusterGatewayApiConfigOutput {
	return o.ApplyT(func(v *ClusterGatewayApiConfig) ClusterGatewayApiConfig {
		if v != nil {
			return *v
		}
		var ret ClusterGatewayApiConfig
		return ret
	}).(ClusterGatewayApiConfigOutput)
}

// Which Gateway Api channel should be used. `CHANNEL_DISABLED`, `CHANNEL_EXPERIMENTAL` or `CHANNEL_STANDARD`.
func (o ClusterGatewayApiConfigPtrOutput) Channel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterGatewayApiConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Channel
	}).(pulumi.StringPtrOutput)
}

type ClusterIdentityServiceConfig struct {
	// Whether to enable the Identity Service component. It is disabled by default. Set `enabled=true` to enable.
	Enabled *bool `pulumi:"enabled"`
}

// ClusterIdentityServiceConfigInput is an input type that accepts ClusterIdentityServiceConfigArgs and ClusterIdentityServiceConfigOutput values.
// You can construct a concrete instance of `ClusterIdentityServiceConfigInput` via:
//
//	ClusterIdentityServiceConfigArgs{...}
type ClusterIdentityServiceConfigInput interface {
	pulumi.Input

	ToClusterIdentityServiceConfigOutput() ClusterIdentityServiceConfigOutput
	ToClusterIdentityServiceConfigOutputWithContext(context.Context) ClusterIdentityServiceConfigOutput
}

type ClusterIdentityServiceConfigArgs struct {
	// Whether to enable the Identity Service component. It is disabled by default. Set `enabled=true` to enable.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (ClusterIdentityServiceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIdentityServiceConfig)(nil)).Elem()
}

func (i ClusterIdentityServiceConfigArgs) ToClusterIdentityServiceConfigOutput() ClusterIdentityServiceConfigOutput {
	return i.ToClusterIdentityServiceConfigOutputWithContext(context.Background())
}

func (i ClusterIdentityServiceConfigArgs) ToClusterIdentityServiceConfigOutputWithContext(ctx context.Context) ClusterIdentityServiceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIdentityServiceConfigOutput)
}

func (i ClusterIdentityServiceConfigArgs) ToClusterIdentityServiceConfigPtrOutput() ClusterIdentityServiceConfigPtrOutput {
	return i.ToClusterIdentityServiceConfigPtrOutputWithContext(context.Background())
}

func (i ClusterIdentityServiceConfigArgs) ToClusterIdentityServiceConfigPtrOutputWithContext(ctx context.Context) ClusterIdentityServiceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIdentityServiceConfigOutput).ToClusterIdentityServiceConfigPtrOutputWithContext(ctx)
}

// ClusterIdentityServiceConfigPtrInput is an input type that accepts ClusterIdentityServiceConfigArgs, ClusterIdentityServiceConfigPtr and ClusterIdentityServiceConfigPtrOutput values.
// You can construct a concrete instance of `ClusterIdentityServiceConfigPtrInput` via:
//
//	        ClusterIdentityServiceConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterIdentityServiceConfigPtrInput interface {
	pulumi.Input

	ToClusterIdentityServiceConfigPtrOutput() ClusterIdentityServiceConfigPtrOutput
	ToClusterIdentityServiceConfigPtrOutputWithContext(context.Context) ClusterIdentityServiceConfigPtrOutput
}

type clusterIdentityServiceConfigPtrType ClusterIdentityServiceConfigArgs

func ClusterIdentityServiceConfigPtr(v *ClusterIdentityServiceConfigArgs) ClusterIdentityServiceConfigPtrInput {
	return (*clusterIdentityServiceConfigPtrType)(v)
}

func (*clusterIdentityServiceConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIdentityServiceConfig)(nil)).Elem()
}

func (i *clusterIdentityServiceConfigPtrType) ToClusterIdentityServiceConfigPtrOutput() ClusterIdentityServiceConfigPtrOutput {
	return i.ToClusterIdentityServiceConfigPtrOutputWithContext(context.Background())
}

func (i *clusterIdentityServiceConfigPtrType) ToClusterIdentityServiceConfigPtrOutputWithContext(ctx context.Context) ClusterIdentityServiceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIdentityServiceConfigPtrOutput)
}

type ClusterIdentityServiceConfigOutput struct{ *pulumi.OutputState }

func (ClusterIdentityServiceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIdentityServiceConfig)(nil)).Elem()
}

func (o ClusterIdentityServiceConfigOutput) ToClusterIdentityServiceConfigOutput() ClusterIdentityServiceConfigOutput {
	return o
}

func (o ClusterIdentityServiceConfigOutput) ToClusterIdentityServiceConfigOutputWithContext(ctx context.Context) ClusterIdentityServiceConfigOutput {
	return o
}

func (o ClusterIdentityServiceConfigOutput) ToClusterIdentityServiceConfigPtrOutput() ClusterIdentityServiceConfigPtrOutput {
	return o.ToClusterIdentityServiceConfigPtrOutputWithContext(context.Background())
}

func (o ClusterIdentityServiceConfigOutput) ToClusterIdentityServiceConfigPtrOutputWithContext(ctx context.Context) ClusterIdentityServiceConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterIdentityServiceConfig) *ClusterIdentityServiceConfig {
		return &v
	}).(ClusterIdentityServiceConfigPtrOutput)
}

// Whether to enable the Identity Service component. It is disabled by default. Set `enabled=true` to enable.
func (o ClusterIdentityServiceConfigOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterIdentityServiceConfig) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type ClusterIdentityServiceConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterIdentityServiceConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIdentityServiceConfig)(nil)).Elem()
}

func (o ClusterIdentityServiceConfigPtrOutput) ToClusterIdentityServiceConfigPtrOutput() ClusterIdentityServiceConfigPtrOutput {
	return o
}

func (o ClusterIdentityServiceConfigPtrOutput) ToClusterIdentityServiceConfigPtrOutputWithContext(ctx context.Context) ClusterIdentityServiceConfigPtrOutput {
	return o
}

func (o ClusterIdentityServiceConfigPtrOutput) Elem() ClusterIdentityServiceConfigOutput {
	return o.ApplyT(func(v *ClusterIdentityServiceConfig) ClusterIdentityServiceConfig {
		if v != nil {
			return *v
		}
		var ret ClusterIdentityServiceConfig
		return ret
	}).(ClusterIdentityServiceConfigOutput)
}

// Whether to enable the Identity Service component. It is disabled by default. Set `enabled=true` to enable.
func (o ClusterIdentityServiceConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterIdentityServiceConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type ClusterIpAllocationPolicy struct {
	// The configuration for additional pod secondary ranges at
	// the cluster level. Used for Autopilot clusters and Standard clusters with which control of the
	// secondary Pod IP address assignment to node pools isn't needed. Structure is documented below.
	AdditionalPodRangesConfig *ClusterIpAllocationPolicyAdditionalPodRangesConfig `pulumi:"additionalPodRangesConfig"`
	// The IP address range for the cluster pod IPs.
	// Set to blank to have a range chosen with the default size. Set to /netmask (e.g. /14)
	// to have a range chosen with a specific netmask. Set to a CIDR notation (e.g. 10.96.0.0/14)
	// from the RFC-1918 private networks (e.g. 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16) to
	// pick a specific range to use.
	ClusterIpv4CidrBlock *string `pulumi:"clusterIpv4CidrBlock"`
	// The name of the existing secondary
	// range in the cluster's subnetwork to use for pod IP addresses. Alternatively,
	// `clusterIpv4CidrBlock` can be used to automatically create a GKE-managed one.
	ClusterSecondaryRangeName *string `pulumi:"clusterSecondaryRangeName"`
	// Configuration for cluster level pod cidr overprovision. Default is disabled=false.
	PodCidrOverprovisionConfig *ClusterIpAllocationPolicyPodCidrOverprovisionConfig `pulumi:"podCidrOverprovisionConfig"`
	// The IP address range of the services IPs in this cluster.
	// Set to blank to have a range chosen with the default size. Set to /netmask (e.g. /14)
	// to have a range chosen with a specific netmask. Set to a CIDR notation (e.g. 10.96.0.0/14)
	// from the RFC-1918 private networks (e.g. 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16) to
	// pick a specific range to use.
	ServicesIpv4CidrBlock *string `pulumi:"servicesIpv4CidrBlock"`
	// The name of the existing
	// secondary range in the cluster's subnetwork to use for service `ClusterIP`s.
	// Alternatively, `servicesIpv4CidrBlock` can be used to automatically create a
	// GKE-managed one.
	ServicesSecondaryRangeName *string `pulumi:"servicesSecondaryRangeName"`
	// The IP Stack Type of the cluster.
	// Default value is `IPV4`.
	// Possible values are `IPV4` and `IPV4_IPV6`.
	StackType *string `pulumi:"stackType"`
}

// ClusterIpAllocationPolicyInput is an input type that accepts ClusterIpAllocationPolicyArgs and ClusterIpAllocationPolicyOutput values.
// You can construct a concrete instance of `ClusterIpAllocationPolicyInput` via:
//
//	ClusterIpAllocationPolicyArgs{...}
type ClusterIpAllocationPolicyInput interface {
	pulumi.Input

	ToClusterIpAllocationPolicyOutput() ClusterIpAllocationPolicyOutput
	ToClusterIpAllocationPolicyOutputWithContext(context.Context) ClusterIpAllocationPolicyOutput
}

type ClusterIpAllocationPolicyArgs struct {
	// The configuration for additional pod secondary ranges at
	// the cluster level. Used for Autopilot clusters and Standard clusters with which control of the
	// secondary Pod IP address assignment to node pools isn't needed. Structure is documented below.
	AdditionalPodRangesConfig ClusterIpAllocationPolicyAdditionalPodRangesConfigPtrInput `pulumi:"additionalPodRangesConfig"`
	// The IP address range for the cluster pod IPs.
	// Set to blank to have a range chosen with the default size. Set to /netmask (e.g. /14)
	// to have a range chosen with a specific netmask. Set to a CIDR notation (e.g. 10.96.0.0/14)
	// from the RFC-1918 private networks (e.g. 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16) to
	// pick a specific range to use.
	ClusterIpv4CidrBlock pulumi.StringPtrInput `pulumi:"clusterIpv4CidrBlock"`
	// The name of the existing secondary
	// range in the cluster's subnetwork to use for pod IP addresses. Alternatively,
	// `clusterIpv4CidrBlock` can be used to automatically create a GKE-managed one.
	ClusterSecondaryRangeName pulumi.StringPtrInput `pulumi:"clusterSecondaryRangeName"`
	// Configuration for cluster level pod cidr overprovision. Default is disabled=false.
	PodCidrOverprovisionConfig ClusterIpAllocationPolicyPodCidrOverprovisionConfigPtrInput `pulumi:"podCidrOverprovisionConfig"`
	// The IP address range of the services IPs in this cluster.
	// Set to blank to have a range chosen with the default size. Set to /netmask (e.g. /14)
	// to have a range chosen with a specific netmask. Set to a CIDR notation (e.g. 10.96.0.0/14)
	// from the RFC-1918 private networks (e.g. 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16) to
	// pick a specific range to use.
	ServicesIpv4CidrBlock pulumi.StringPtrInput `pulumi:"servicesIpv4CidrBlock"`
	// The name of the existing
	// secondary range in the cluster's subnetwork to use for service `ClusterIP`s.
	// Alternatively, `servicesIpv4CidrBlock` can be used to automatically create a
	// GKE-managed one.
	ServicesSecondaryRangeName pulumi.StringPtrInput `pulumi:"servicesSecondaryRangeName"`
	// The IP Stack Type of the cluster.
	// Default value is `IPV4`.
	// Possible values are `IPV4` and `IPV4_IPV6`.
	StackType pulumi.StringPtrInput `pulumi:"stackType"`
}

func (ClusterIpAllocationPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIpAllocationPolicy)(nil)).Elem()
}

func (i ClusterIpAllocationPolicyArgs) ToClusterIpAllocationPolicyOutput() ClusterIpAllocationPolicyOutput {
	return i.ToClusterIpAllocationPolicyOutputWithContext(context.Background())
}

func (i ClusterIpAllocationPolicyArgs) ToClusterIpAllocationPolicyOutputWithContext(ctx context.Context) ClusterIpAllocationPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIpAllocationPolicyOutput)
}

func (i ClusterIpAllocationPolicyArgs) ToClusterIpAllocationPolicyPtrOutput() ClusterIpAllocationPolicyPtrOutput {
	return i.ToClusterIpAllocationPolicyPtrOutputWithContext(context.Background())
}

func (i ClusterIpAllocationPolicyArgs) ToClusterIpAllocationPolicyPtrOutputWithContext(ctx context.Context) ClusterIpAllocationPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIpAllocationPolicyOutput).ToClusterIpAllocationPolicyPtrOutputWithContext(ctx)
}

// ClusterIpAllocationPolicyPtrInput is an input type that accepts ClusterIpAllocationPolicyArgs, ClusterIpAllocationPolicyPtr and ClusterIpAllocationPolicyPtrOutput values.
// You can construct a concrete instance of `ClusterIpAllocationPolicyPtrInput` via:
//
//	        ClusterIpAllocationPolicyArgs{...}
//
//	or:
//
//	        nil
type ClusterIpAllocationPolicyPtrInput interface {
	pulumi.Input

	ToClusterIpAllocationPolicyPtrOutput() ClusterIpAllocationPolicyPtrOutput
	ToClusterIpAllocationPolicyPtrOutputWithContext(context.Context) ClusterIpAllocationPolicyPtrOutput
}

type clusterIpAllocationPolicyPtrType ClusterIpAllocationPolicyArgs

func ClusterIpAllocationPolicyPtr(v *ClusterIpAllocationPolicyArgs) ClusterIpAllocationPolicyPtrInput {
	return (*clusterIpAllocationPolicyPtrType)(v)
}

func (*clusterIpAllocationPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIpAllocationPolicy)(nil)).Elem()
}

func (i *clusterIpAllocationPolicyPtrType) ToClusterIpAllocationPolicyPtrOutput() ClusterIpAllocationPolicyPtrOutput {
	return i.ToClusterIpAllocationPolicyPtrOutputWithContext(context.Background())
}

func (i *clusterIpAllocationPolicyPtrType) ToClusterIpAllocationPolicyPtrOutputWithContext(ctx context.Context) ClusterIpAllocationPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIpAllocationPolicyPtrOutput)
}

type ClusterIpAllocationPolicyOutput struct{ *pulumi.OutputState }

func (ClusterIpAllocationPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIpAllocationPolicy)(nil)).Elem()
}

func (o ClusterIpAllocationPolicyOutput) ToClusterIpAllocationPolicyOutput() ClusterIpAllocationPolicyOutput {
	return o
}

func (o ClusterIpAllocationPolicyOutput) ToClusterIpAllocationPolicyOutputWithContext(ctx context.Context) ClusterIpAllocationPolicyOutput {
	return o
}

func (o ClusterIpAllocationPolicyOutput) ToClusterIpAllocationPolicyPtrOutput() ClusterIpAllocationPolicyPtrOutput {
	return o.ToClusterIpAllocationPolicyPtrOutputWithContext(context.Background())
}

func (o ClusterIpAllocationPolicyOutput) ToClusterIpAllocationPolicyPtrOutputWithContext(ctx context.Context) ClusterIpAllocationPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterIpAllocationPolicy) *ClusterIpAllocationPolicy {
		return &v
	}).(ClusterIpAllocationPolicyPtrOutput)
}

// The configuration for additional pod secondary ranges at
// the cluster level. Used for Autopilot clusters and Standard clusters with which control of the
// secondary Pod IP address assignment to node pools isn't needed. Structure is documented below.
func (o ClusterIpAllocationPolicyOutput) AdditionalPodRangesConfig() ClusterIpAllocationPolicyAdditionalPodRangesConfigPtrOutput {
	return o.ApplyT(func(v ClusterIpAllocationPolicy) *ClusterIpAllocationPolicyAdditionalPodRangesConfig {
		return v.AdditionalPodRangesConfig
	}).(ClusterIpAllocationPolicyAdditionalPodRangesConfigPtrOutput)
}

// The IP address range for the cluster pod IPs.
// Set to blank to have a range chosen with the default size. Set to /netmask (e.g. /14)
// to have a range chosen with a specific netmask. Set to a CIDR notation (e.g. 10.96.0.0/14)
// from the RFC-1918 private networks (e.g. 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16) to
// pick a specific range to use.
func (o ClusterIpAllocationPolicyOutput) ClusterIpv4CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIpAllocationPolicy) *string { return v.ClusterIpv4CidrBlock }).(pulumi.StringPtrOutput)
}

// The name of the existing secondary
// range in the cluster's subnetwork to use for pod IP addresses. Alternatively,
// `clusterIpv4CidrBlock` can be used to automatically create a GKE-managed one.
func (o ClusterIpAllocationPolicyOutput) ClusterSecondaryRangeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIpAllocationPolicy) *string { return v.ClusterSecondaryRangeName }).(pulumi.StringPtrOutput)
}

// Configuration for cluster level pod cidr overprovision. Default is disabled=false.
func (o ClusterIpAllocationPolicyOutput) PodCidrOverprovisionConfig() ClusterIpAllocationPolicyPodCidrOverprovisionConfigPtrOutput {
	return o.ApplyT(func(v ClusterIpAllocationPolicy) *ClusterIpAllocationPolicyPodCidrOverprovisionConfig {
		return v.PodCidrOverprovisionConfig
	}).(ClusterIpAllocationPolicyPodCidrOverprovisionConfigPtrOutput)
}

// The IP address range of the services IPs in this cluster.
// Set to blank to have a range chosen with the default size. Set to /netmask (e.g. /14)
// to have a range chosen with a specific netmask. Set to a CIDR notation (e.g. 10.96.0.0/14)
// from the RFC-1918 private networks (e.g. 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16) to
// pick a specific range to use.
func (o ClusterIpAllocationPolicyOutput) ServicesIpv4CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIpAllocationPolicy) *string { return v.ServicesIpv4CidrBlock }).(pulumi.StringPtrOutput)
}

// The name of the existing
// secondary range in the cluster's subnetwork to use for service `ClusterIP`s.
// Alternatively, `servicesIpv4CidrBlock` can be used to automatically create a
// GKE-managed one.
func (o ClusterIpAllocationPolicyOutput) ServicesSecondaryRangeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIpAllocationPolicy) *string { return v.ServicesSecondaryRangeName }).(pulumi.StringPtrOutput)
}

// The IP Stack Type of the cluster.
// Default value is `IPV4`.
// Possible values are `IPV4` and `IPV4_IPV6`.
func (o ClusterIpAllocationPolicyOutput) StackType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIpAllocationPolicy) *string { return v.StackType }).(pulumi.StringPtrOutput)
}

type ClusterIpAllocationPolicyPtrOutput struct{ *pulumi.OutputState }

func (ClusterIpAllocationPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIpAllocationPolicy)(nil)).Elem()
}

func (o ClusterIpAllocationPolicyPtrOutput) ToClusterIpAllocationPolicyPtrOutput() ClusterIpAllocationPolicyPtrOutput {
	return o
}

func (o ClusterIpAllocationPolicyPtrOutput) ToClusterIpAllocationPolicyPtrOutputWithContext(ctx context.Context) ClusterIpAllocationPolicyPtrOutput {
	return o
}

func (o ClusterIpAllocationPolicyPtrOutput) Elem() ClusterIpAllocationPolicyOutput {
	return o.ApplyT(func(v *ClusterIpAllocationPolicy) ClusterIpAllocationPolicy {
		if v != nil {
			return *v
		}
		var ret ClusterIpAllocationPolicy
		return ret
	}).(ClusterIpAllocationPolicyOutput)
}

// The configuration for additional pod secondary ranges at
// the cluster level. Used for Autopilot clusters and Standard clusters with which control of the
// secondary Pod IP address assignment to node pools isn't needed. Structure is documented below.
func (o ClusterIpAllocationPolicyPtrOutput) AdditionalPodRangesConfig() ClusterIpAllocationPolicyAdditionalPodRangesConfigPtrOutput {
	return o.ApplyT(func(v *ClusterIpAllocationPolicy) *ClusterIpAllocationPolicyAdditionalPodRangesConfig {
		if v == nil {
			return nil
		}
		return v.AdditionalPodRangesConfig
	}).(ClusterIpAllocationPolicyAdditionalPodRangesConfigPtrOutput)
}

// The IP address range for the cluster pod IPs.
// Set to blank to have a range chosen with the default size. Set to /netmask (e.g. /14)
// to have a range chosen with a specific netmask. Set to a CIDR notation (e.g. 10.96.0.0/14)
// from the RFC-1918 private networks (e.g. 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16) to
// pick a specific range to use.
func (o ClusterIpAllocationPolicyPtrOutput) ClusterIpv4CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIpAllocationPolicy) *string {
		if v == nil {
			return nil
		}
		return v.ClusterIpv4CidrBlock
	}).(pulumi.StringPtrOutput)
}

// The name of the existing secondary
// range in the cluster's subnetwork to use for pod IP addresses. Alternatively,
// `clusterIpv4CidrBlock` can be used to automatically create a GKE-managed one.
func (o ClusterIpAllocationPolicyPtrOutput) ClusterSecondaryRangeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIpAllocationPolicy) *string {
		if v == nil {
			return nil
		}
		return v.ClusterSecondaryRangeName
	}).(pulumi.StringPtrOutput)
}

// Configuration for cluster level pod cidr overprovision. Default is disabled=false.
func (o ClusterIpAllocationPolicyPtrOutput) PodCidrOverprovisionConfig() ClusterIpAllocationPolicyPodCidrOverprovisionConfigPtrOutput {
	return o.ApplyT(func(v *ClusterIpAllocationPolicy) *ClusterIpAllocationPolicyPodCidrOverprovisionConfig {
		if v == nil {
			return nil
		}
		return v.PodCidrOverprovisionConfig
	}).(ClusterIpAllocationPolicyPodCidrOverprovisionConfigPtrOutput)
}

// The IP address range of the services IPs in this cluster.
// Set to blank to have a range chosen with the default size. Set to /netmask (e.g. /14)
// to have a range chosen with a specific netmask. Set to a CIDR notation (e.g. 10.96.0.0/14)
// from the RFC-1918 private networks (e.g. 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16) to
// pick a specific range to use.
func (o ClusterIpAllocationPolicyPtrOutput) ServicesIpv4CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIpAllocationPolicy) *string {
		if v == nil {
			return nil
		}
		return v.ServicesIpv4CidrBlock
	}).(pulumi.StringPtrOutput)
}

// The name of the existing
// secondary range in the cluster's subnetwork to use for service `ClusterIP`s.
// Alternatively, `servicesIpv4CidrBlock` can be used to automatically create a
// GKE-managed one.
func (o ClusterIpAllocationPolicyPtrOutput) ServicesSecondaryRangeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIpAllocationPolicy) *string {
		if v == nil {
			return nil
		}
		return v.ServicesSecondaryRangeName
	}).(pulumi.StringPtrOutput)
}

// The IP Stack Type of the cluster.
// Default value is `IPV4`.
// Possible values are `IPV4` and `IPV4_IPV6`.
func (o ClusterIpAllocationPolicyPtrOutput) StackType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIpAllocationPolicy) *string {
		if v == nil {
			return nil
		}
		return v.StackType
	}).(pulumi.StringPtrOutput)
}

type ClusterIpAllocationPolicyAdditionalPodRangesConfig struct {
	// The names of the Pod ranges to add to the cluster.
	PodRangeNames []string `pulumi:"podRangeNames"`
}

// ClusterIpAllocationPolicyAdditionalPodRangesConfigInput is an input type that accepts ClusterIpAllocationPolicyAdditionalPodRangesConfigArgs and ClusterIpAllocationPolicyAdditionalPodRangesConfigOutput values.
// You can construct a concrete instance of `ClusterIpAllocationPolicyAdditionalPodRangesConfigInput` via:
//
//	ClusterIpAllocationPolicyAdditionalPodRangesConfigArgs{...}
type ClusterIpAllocationPolicyAdditionalPodRangesConfigInput interface {
	pulumi.Input

	ToClusterIpAllocationPolicyAdditionalPodRangesConfigOutput() ClusterIpAllocationPolicyAdditionalPodRangesConfigOutput
	ToClusterIpAllocationPolicyAdditionalPodRangesConfigOutputWithContext(context.Context) ClusterIpAllocationPolicyAdditionalPodRangesConfigOutput
}

type ClusterIpAllocationPolicyAdditionalPodRangesConfigArgs struct {
	// The names of the Pod ranges to add to the cluster.
	PodRangeNames pulumi.StringArrayInput `pulumi:"podRangeNames"`
}

func (ClusterIpAllocationPolicyAdditionalPodRangesConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIpAllocationPolicyAdditionalPodRangesConfig)(nil)).Elem()
}

func (i ClusterIpAllocationPolicyAdditionalPodRangesConfigArgs) ToClusterIpAllocationPolicyAdditionalPodRangesConfigOutput() ClusterIpAllocationPolicyAdditionalPodRangesConfigOutput {
	return i.ToClusterIpAllocationPolicyAdditionalPodRangesConfigOutputWithContext(context.Background())
}

func (i ClusterIpAllocationPolicyAdditionalPodRangesConfigArgs) ToClusterIpAllocationPolicyAdditionalPodRangesConfigOutputWithContext(ctx context.Context) ClusterIpAllocationPolicyAdditionalPodRangesConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIpAllocationPolicyAdditionalPodRangesConfigOutput)
}

func (i ClusterIpAllocationPolicyAdditionalPodRangesConfigArgs) ToClusterIpAllocationPolicyAdditionalPodRangesConfigPtrOutput() ClusterIpAllocationPolicyAdditionalPodRangesConfigPtrOutput {
	return i.ToClusterIpAllocationPolicyAdditionalPodRangesConfigPtrOutputWithContext(context.Background())
}

func (i ClusterIpAllocationPolicyAdditionalPodRangesConfigArgs) ToClusterIpAllocationPolicyAdditionalPodRangesConfigPtrOutputWithContext(ctx context.Context) ClusterIpAllocationPolicyAdditionalPodRangesConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIpAllocationPolicyAdditionalPodRangesConfigOutput).ToClusterIpAllocationPolicyAdditionalPodRangesConfigPtrOutputWithContext(ctx)
}

// ClusterIpAllocationPolicyAdditionalPodRangesConfigPtrInput is an input type that accepts ClusterIpAllocationPolicyAdditionalPodRangesConfigArgs, ClusterIpAllocationPolicyAdditionalPodRangesConfigPtr and ClusterIpAllocationPolicyAdditionalPodRangesConfigPtrOutput values.
// You can construct a concrete instance of `ClusterIpAllocationPolicyAdditionalPodRangesConfigPtrInput` via:
//
//	        ClusterIpAllocationPolicyAdditionalPodRangesConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterIpAllocationPolicyAdditionalPodRangesConfigPtrInput interface {
	pulumi.Input

	ToClusterIpAllocationPolicyAdditionalPodRangesConfigPtrOutput() ClusterIpAllocationPolicyAdditionalPodRangesConfigPtrOutput
	ToClusterIpAllocationPolicyAdditionalPodRangesConfigPtrOutputWithContext(context.Context) ClusterIpAllocationPolicyAdditionalPodRangesConfigPtrOutput
}

type clusterIpAllocationPolicyAdditionalPodRangesConfigPtrType ClusterIpAllocationPolicyAdditionalPodRangesConfigArgs

func ClusterIpAllocationPolicyAdditionalPodRangesConfigPtr(v *ClusterIpAllocationPolicyAdditionalPodRangesConfigArgs) ClusterIpAllocationPolicyAdditionalPodRangesConfigPtrInput {
	return (*clusterIpAllocationPolicyAdditionalPodRangesConfigPtrType)(v)
}

func (*clusterIpAllocationPolicyAdditionalPodRangesConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIpAllocationPolicyAdditionalPodRangesConfig)(nil)).Elem()
}

func (i *clusterIpAllocationPolicyAdditionalPodRangesConfigPtrType) ToClusterIpAllocationPolicyAdditionalPodRangesConfigPtrOutput() ClusterIpAllocationPolicyAdditionalPodRangesConfigPtrOutput {
	return i.ToClusterIpAllocationPolicyAdditionalPodRangesConfigPtrOutputWithContext(context.Background())
}

func (i *clusterIpAllocationPolicyAdditionalPodRangesConfigPtrType) ToClusterIpAllocationPolicyAdditionalPodRangesConfigPtrOutputWithContext(ctx context.Context) ClusterIpAllocationPolicyAdditionalPodRangesConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIpAllocationPolicyAdditionalPodRangesConfigPtrOutput)
}

type ClusterIpAllocationPolicyAdditionalPodRangesConfigOutput struct{ *pulumi.OutputState }

func (ClusterIpAllocationPolicyAdditionalPodRangesConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIpAllocationPolicyAdditionalPodRangesConfig)(nil)).Elem()
}

func (o ClusterIpAllocationPolicyAdditionalPodRangesConfigOutput) ToClusterIpAllocationPolicyAdditionalPodRangesConfigOutput() ClusterIpAllocationPolicyAdditionalPodRangesConfigOutput {
	return o
}

func (o ClusterIpAllocationPolicyAdditionalPodRangesConfigOutput) ToClusterIpAllocationPolicyAdditionalPodRangesConfigOutputWithContext(ctx context.Context) ClusterIpAllocationPolicyAdditionalPodRangesConfigOutput {
	return o
}

func (o ClusterIpAllocationPolicyAdditionalPodRangesConfigOutput) ToClusterIpAllocationPolicyAdditionalPodRangesConfigPtrOutput() ClusterIpAllocationPolicyAdditionalPodRangesConfigPtrOutput {
	return o.ToClusterIpAllocationPolicyAdditionalPodRangesConfigPtrOutputWithContext(context.Background())
}

func (o ClusterIpAllocationPolicyAdditionalPodRangesConfigOutput) ToClusterIpAllocationPolicyAdditionalPodRangesConfigPtrOutputWithContext(ctx context.Context) ClusterIpAllocationPolicyAdditionalPodRangesConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterIpAllocationPolicyAdditionalPodRangesConfig) *ClusterIpAllocationPolicyAdditionalPodRangesConfig {
		return &v
	}).(ClusterIpAllocationPolicyAdditionalPodRangesConfigPtrOutput)
}

// The names of the Pod ranges to add to the cluster.
func (o ClusterIpAllocationPolicyAdditionalPodRangesConfigOutput) PodRangeNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterIpAllocationPolicyAdditionalPodRangesConfig) []string { return v.PodRangeNames }).(pulumi.StringArrayOutput)
}

type ClusterIpAllocationPolicyAdditionalPodRangesConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterIpAllocationPolicyAdditionalPodRangesConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIpAllocationPolicyAdditionalPodRangesConfig)(nil)).Elem()
}

func (o ClusterIpAllocationPolicyAdditionalPodRangesConfigPtrOutput) ToClusterIpAllocationPolicyAdditionalPodRangesConfigPtrOutput() ClusterIpAllocationPolicyAdditionalPodRangesConfigPtrOutput {
	return o
}

func (o ClusterIpAllocationPolicyAdditionalPodRangesConfigPtrOutput) ToClusterIpAllocationPolicyAdditionalPodRangesConfigPtrOutputWithContext(ctx context.Context) ClusterIpAllocationPolicyAdditionalPodRangesConfigPtrOutput {
	return o
}

func (o ClusterIpAllocationPolicyAdditionalPodRangesConfigPtrOutput) Elem() ClusterIpAllocationPolicyAdditionalPodRangesConfigOutput {
	return o.ApplyT(func(v *ClusterIpAllocationPolicyAdditionalPodRangesConfig) ClusterIpAllocationPolicyAdditionalPodRangesConfig {
		if v != nil {
			return *v
		}
		var ret ClusterIpAllocationPolicyAdditionalPodRangesConfig
		return ret
	}).(ClusterIpAllocationPolicyAdditionalPodRangesConfigOutput)
}

// The names of the Pod ranges to add to the cluster.
func (o ClusterIpAllocationPolicyAdditionalPodRangesConfigPtrOutput) PodRangeNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterIpAllocationPolicyAdditionalPodRangesConfig) []string {
		if v == nil {
			return nil
		}
		return v.PodRangeNames
	}).(pulumi.StringArrayOutput)
}

type ClusterIpAllocationPolicyPodCidrOverprovisionConfig struct {
	// Whether the cluster disables default in-node sNAT rules. In-node sNAT rules will be disabled when defaultSnatStatus is disabled.When disabled is set to false, default IP masquerade rules will be applied to the nodes to prevent sNAT on cluster internal traffic
	//
	// <a name="nestedClusterTelemetry"></a>The `clusterTelemetry` block supports
	Disabled bool `pulumi:"disabled"`
}

// ClusterIpAllocationPolicyPodCidrOverprovisionConfigInput is an input type that accepts ClusterIpAllocationPolicyPodCidrOverprovisionConfigArgs and ClusterIpAllocationPolicyPodCidrOverprovisionConfigOutput values.
// You can construct a concrete instance of `ClusterIpAllocationPolicyPodCidrOverprovisionConfigInput` via:
//
//	ClusterIpAllocationPolicyPodCidrOverprovisionConfigArgs{...}
type ClusterIpAllocationPolicyPodCidrOverprovisionConfigInput interface {
	pulumi.Input

	ToClusterIpAllocationPolicyPodCidrOverprovisionConfigOutput() ClusterIpAllocationPolicyPodCidrOverprovisionConfigOutput
	ToClusterIpAllocationPolicyPodCidrOverprovisionConfigOutputWithContext(context.Context) ClusterIpAllocationPolicyPodCidrOverprovisionConfigOutput
}

type ClusterIpAllocationPolicyPodCidrOverprovisionConfigArgs struct {
	// Whether the cluster disables default in-node sNAT rules. In-node sNAT rules will be disabled when defaultSnatStatus is disabled.When disabled is set to false, default IP masquerade rules will be applied to the nodes to prevent sNAT on cluster internal traffic
	//
	// <a name="nestedClusterTelemetry"></a>The `clusterTelemetry` block supports
	Disabled pulumi.BoolInput `pulumi:"disabled"`
}

func (ClusterIpAllocationPolicyPodCidrOverprovisionConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIpAllocationPolicyPodCidrOverprovisionConfig)(nil)).Elem()
}

func (i ClusterIpAllocationPolicyPodCidrOverprovisionConfigArgs) ToClusterIpAllocationPolicyPodCidrOverprovisionConfigOutput() ClusterIpAllocationPolicyPodCidrOverprovisionConfigOutput {
	return i.ToClusterIpAllocationPolicyPodCidrOverprovisionConfigOutputWithContext(context.Background())
}

func (i ClusterIpAllocationPolicyPodCidrOverprovisionConfigArgs) ToClusterIpAllocationPolicyPodCidrOverprovisionConfigOutputWithContext(ctx context.Context) ClusterIpAllocationPolicyPodCidrOverprovisionConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIpAllocationPolicyPodCidrOverprovisionConfigOutput)
}

func (i ClusterIpAllocationPolicyPodCidrOverprovisionConfigArgs) ToClusterIpAllocationPolicyPodCidrOverprovisionConfigPtrOutput() ClusterIpAllocationPolicyPodCidrOverprovisionConfigPtrOutput {
	return i.ToClusterIpAllocationPolicyPodCidrOverprovisionConfigPtrOutputWithContext(context.Background())
}

func (i ClusterIpAllocationPolicyPodCidrOverprovisionConfigArgs) ToClusterIpAllocationPolicyPodCidrOverprovisionConfigPtrOutputWithContext(ctx context.Context) ClusterIpAllocationPolicyPodCidrOverprovisionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIpAllocationPolicyPodCidrOverprovisionConfigOutput).ToClusterIpAllocationPolicyPodCidrOverprovisionConfigPtrOutputWithContext(ctx)
}

// ClusterIpAllocationPolicyPodCidrOverprovisionConfigPtrInput is an input type that accepts ClusterIpAllocationPolicyPodCidrOverprovisionConfigArgs, ClusterIpAllocationPolicyPodCidrOverprovisionConfigPtr and ClusterIpAllocationPolicyPodCidrOverprovisionConfigPtrOutput values.
// You can construct a concrete instance of `ClusterIpAllocationPolicyPodCidrOverprovisionConfigPtrInput` via:
//
//	        ClusterIpAllocationPolicyPodCidrOverprovisionConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterIpAllocationPolicyPodCidrOverprovisionConfigPtrInput interface {
	pulumi.Input

	ToClusterIpAllocationPolicyPodCidrOverprovisionConfigPtrOutput() ClusterIpAllocationPolicyPodCidrOverprovisionConfigPtrOutput
	ToClusterIpAllocationPolicyPodCidrOverprovisionConfigPtrOutputWithContext(context.Context) ClusterIpAllocationPolicyPodCidrOverprovisionConfigPtrOutput
}

type clusterIpAllocationPolicyPodCidrOverprovisionConfigPtrType ClusterIpAllocationPolicyPodCidrOverprovisionConfigArgs

func ClusterIpAllocationPolicyPodCidrOverprovisionConfigPtr(v *ClusterIpAllocationPolicyPodCidrOverprovisionConfigArgs) ClusterIpAllocationPolicyPodCidrOverprovisionConfigPtrInput {
	return (*clusterIpAllocationPolicyPodCidrOverprovisionConfigPtrType)(v)
}

func (*clusterIpAllocationPolicyPodCidrOverprovisionConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIpAllocationPolicyPodCidrOverprovisionConfig)(nil)).Elem()
}

func (i *clusterIpAllocationPolicyPodCidrOverprovisionConfigPtrType) ToClusterIpAllocationPolicyPodCidrOverprovisionConfigPtrOutput() ClusterIpAllocationPolicyPodCidrOverprovisionConfigPtrOutput {
	return i.ToClusterIpAllocationPolicyPodCidrOverprovisionConfigPtrOutputWithContext(context.Background())
}

func (i *clusterIpAllocationPolicyPodCidrOverprovisionConfigPtrType) ToClusterIpAllocationPolicyPodCidrOverprovisionConfigPtrOutputWithContext(ctx context.Context) ClusterIpAllocationPolicyPodCidrOverprovisionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIpAllocationPolicyPodCidrOverprovisionConfigPtrOutput)
}

type ClusterIpAllocationPolicyPodCidrOverprovisionConfigOutput struct{ *pulumi.OutputState }

func (ClusterIpAllocationPolicyPodCidrOverprovisionConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIpAllocationPolicyPodCidrOverprovisionConfig)(nil)).Elem()
}

func (o ClusterIpAllocationPolicyPodCidrOverprovisionConfigOutput) ToClusterIpAllocationPolicyPodCidrOverprovisionConfigOutput() ClusterIpAllocationPolicyPodCidrOverprovisionConfigOutput {
	return o
}

func (o ClusterIpAllocationPolicyPodCidrOverprovisionConfigOutput) ToClusterIpAllocationPolicyPodCidrOverprovisionConfigOutputWithContext(ctx context.Context) ClusterIpAllocationPolicyPodCidrOverprovisionConfigOutput {
	return o
}

func (o ClusterIpAllocationPolicyPodCidrOverprovisionConfigOutput) ToClusterIpAllocationPolicyPodCidrOverprovisionConfigPtrOutput() ClusterIpAllocationPolicyPodCidrOverprovisionConfigPtrOutput {
	return o.ToClusterIpAllocationPolicyPodCidrOverprovisionConfigPtrOutputWithContext(context.Background())
}

func (o ClusterIpAllocationPolicyPodCidrOverprovisionConfigOutput) ToClusterIpAllocationPolicyPodCidrOverprovisionConfigPtrOutputWithContext(ctx context.Context) ClusterIpAllocationPolicyPodCidrOverprovisionConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterIpAllocationPolicyPodCidrOverprovisionConfig) *ClusterIpAllocationPolicyPodCidrOverprovisionConfig {
		return &v
	}).(ClusterIpAllocationPolicyPodCidrOverprovisionConfigPtrOutput)
}

// Whether the cluster disables default in-node sNAT rules. In-node sNAT rules will be disabled when defaultSnatStatus is disabled.When disabled is set to false, default IP masquerade rules will be applied to the nodes to prevent sNAT on cluster internal traffic
//
// <a name="nestedClusterTelemetry"></a>The `clusterTelemetry` block supports
func (o ClusterIpAllocationPolicyPodCidrOverprovisionConfigOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterIpAllocationPolicyPodCidrOverprovisionConfig) bool { return v.Disabled }).(pulumi.BoolOutput)
}

type ClusterIpAllocationPolicyPodCidrOverprovisionConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterIpAllocationPolicyPodCidrOverprovisionConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIpAllocationPolicyPodCidrOverprovisionConfig)(nil)).Elem()
}

func (o ClusterIpAllocationPolicyPodCidrOverprovisionConfigPtrOutput) ToClusterIpAllocationPolicyPodCidrOverprovisionConfigPtrOutput() ClusterIpAllocationPolicyPodCidrOverprovisionConfigPtrOutput {
	return o
}

func (o ClusterIpAllocationPolicyPodCidrOverprovisionConfigPtrOutput) ToClusterIpAllocationPolicyPodCidrOverprovisionConfigPtrOutputWithContext(ctx context.Context) ClusterIpAllocationPolicyPodCidrOverprovisionConfigPtrOutput {
	return o
}

func (o ClusterIpAllocationPolicyPodCidrOverprovisionConfigPtrOutput) Elem() ClusterIpAllocationPolicyPodCidrOverprovisionConfigOutput {
	return o.ApplyT(func(v *ClusterIpAllocationPolicyPodCidrOverprovisionConfig) ClusterIpAllocationPolicyPodCidrOverprovisionConfig {
		if v != nil {
			return *v
		}
		var ret ClusterIpAllocationPolicyPodCidrOverprovisionConfig
		return ret
	}).(ClusterIpAllocationPolicyPodCidrOverprovisionConfigOutput)
}

// Whether the cluster disables default in-node sNAT rules. In-node sNAT rules will be disabled when defaultSnatStatus is disabled.When disabled is set to false, default IP masquerade rules will be applied to the nodes to prevent sNAT on cluster internal traffic
//
// <a name="nestedClusterTelemetry"></a>The `clusterTelemetry` block supports
func (o ClusterIpAllocationPolicyPodCidrOverprovisionConfigPtrOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterIpAllocationPolicyPodCidrOverprovisionConfig) *bool {
		if v == nil {
			return nil
		}
		return &v.Disabled
	}).(pulumi.BoolPtrOutput)
}

type ClusterLoggingConfig struct {
	// The GKE components exposing logs. Supported values include:
	// `SYSTEM_COMPONENTS`, `APISERVER`, `CONTROLLER_MANAGER`, `SCHEDULER`, and `WORKLOADS`.
	EnableComponents []string `pulumi:"enableComponents"`
}

// ClusterLoggingConfigInput is an input type that accepts ClusterLoggingConfigArgs and ClusterLoggingConfigOutput values.
// You can construct a concrete instance of `ClusterLoggingConfigInput` via:
//
//	ClusterLoggingConfigArgs{...}
type ClusterLoggingConfigInput interface {
	pulumi.Input

	ToClusterLoggingConfigOutput() ClusterLoggingConfigOutput
	ToClusterLoggingConfigOutputWithContext(context.Context) ClusterLoggingConfigOutput
}

type ClusterLoggingConfigArgs struct {
	// The GKE components exposing logs. Supported values include:
	// `SYSTEM_COMPONENTS`, `APISERVER`, `CONTROLLER_MANAGER`, `SCHEDULER`, and `WORKLOADS`.
	EnableComponents pulumi.StringArrayInput `pulumi:"enableComponents"`
}

func (ClusterLoggingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterLoggingConfig)(nil)).Elem()
}

func (i ClusterLoggingConfigArgs) ToClusterLoggingConfigOutput() ClusterLoggingConfigOutput {
	return i.ToClusterLoggingConfigOutputWithContext(context.Background())
}

func (i ClusterLoggingConfigArgs) ToClusterLoggingConfigOutputWithContext(ctx context.Context) ClusterLoggingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterLoggingConfigOutput)
}

func (i ClusterLoggingConfigArgs) ToClusterLoggingConfigPtrOutput() ClusterLoggingConfigPtrOutput {
	return i.ToClusterLoggingConfigPtrOutputWithContext(context.Background())
}

func (i ClusterLoggingConfigArgs) ToClusterLoggingConfigPtrOutputWithContext(ctx context.Context) ClusterLoggingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterLoggingConfigOutput).ToClusterLoggingConfigPtrOutputWithContext(ctx)
}

// ClusterLoggingConfigPtrInput is an input type that accepts ClusterLoggingConfigArgs, ClusterLoggingConfigPtr and ClusterLoggingConfigPtrOutput values.
// You can construct a concrete instance of `ClusterLoggingConfigPtrInput` via:
//
//	        ClusterLoggingConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterLoggingConfigPtrInput interface {
	pulumi.Input

	ToClusterLoggingConfigPtrOutput() ClusterLoggingConfigPtrOutput
	ToClusterLoggingConfigPtrOutputWithContext(context.Context) ClusterLoggingConfigPtrOutput
}

type clusterLoggingConfigPtrType ClusterLoggingConfigArgs

func ClusterLoggingConfigPtr(v *ClusterLoggingConfigArgs) ClusterLoggingConfigPtrInput {
	return (*clusterLoggingConfigPtrType)(v)
}

func (*clusterLoggingConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterLoggingConfig)(nil)).Elem()
}

func (i *clusterLoggingConfigPtrType) ToClusterLoggingConfigPtrOutput() ClusterLoggingConfigPtrOutput {
	return i.ToClusterLoggingConfigPtrOutputWithContext(context.Background())
}

func (i *clusterLoggingConfigPtrType) ToClusterLoggingConfigPtrOutputWithContext(ctx context.Context) ClusterLoggingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterLoggingConfigPtrOutput)
}

type ClusterLoggingConfigOutput struct{ *pulumi.OutputState }

func (ClusterLoggingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterLoggingConfig)(nil)).Elem()
}

func (o ClusterLoggingConfigOutput) ToClusterLoggingConfigOutput() ClusterLoggingConfigOutput {
	return o
}

func (o ClusterLoggingConfigOutput) ToClusterLoggingConfigOutputWithContext(ctx context.Context) ClusterLoggingConfigOutput {
	return o
}

func (o ClusterLoggingConfigOutput) ToClusterLoggingConfigPtrOutput() ClusterLoggingConfigPtrOutput {
	return o.ToClusterLoggingConfigPtrOutputWithContext(context.Background())
}

func (o ClusterLoggingConfigOutput) ToClusterLoggingConfigPtrOutputWithContext(ctx context.Context) ClusterLoggingConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterLoggingConfig) *ClusterLoggingConfig {
		return &v
	}).(ClusterLoggingConfigPtrOutput)
}

// The GKE components exposing logs. Supported values include:
// `SYSTEM_COMPONENTS`, `APISERVER`, `CONTROLLER_MANAGER`, `SCHEDULER`, and `WORKLOADS`.
func (o ClusterLoggingConfigOutput) EnableComponents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterLoggingConfig) []string { return v.EnableComponents }).(pulumi.StringArrayOutput)
}

type ClusterLoggingConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterLoggingConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterLoggingConfig)(nil)).Elem()
}

func (o ClusterLoggingConfigPtrOutput) ToClusterLoggingConfigPtrOutput() ClusterLoggingConfigPtrOutput {
	return o
}

func (o ClusterLoggingConfigPtrOutput) ToClusterLoggingConfigPtrOutputWithContext(ctx context.Context) ClusterLoggingConfigPtrOutput {
	return o
}

func (o ClusterLoggingConfigPtrOutput) Elem() ClusterLoggingConfigOutput {
	return o.ApplyT(func(v *ClusterLoggingConfig) ClusterLoggingConfig {
		if v != nil {
			return *v
		}
		var ret ClusterLoggingConfig
		return ret
	}).(ClusterLoggingConfigOutput)
}

// The GKE components exposing logs. Supported values include:
// `SYSTEM_COMPONENTS`, `APISERVER`, `CONTROLLER_MANAGER`, `SCHEDULER`, and `WORKLOADS`.
func (o ClusterLoggingConfigPtrOutput) EnableComponents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterLoggingConfig) []string {
		if v == nil {
			return nil
		}
		return v.EnableComponents
	}).(pulumi.StringArrayOutput)
}

type ClusterMaintenancePolicy struct {
	// Time window specified for daily maintenance operations.
	// Specify `startTime` in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format "HH:MM”,
	// where HH : \[00-23\] and MM : \[00-59\] GMT. For example:
	//
	// Examples:
	DailyMaintenanceWindow *ClusterMaintenancePolicyDailyMaintenanceWindow `pulumi:"dailyMaintenanceWindow"`
	// Exceptions to maintenance window. Non-emergency maintenance should not occur in these windows. A cluster can have up to 20 maintenance exclusions at a time [Maintenance Window and Exclusions](https://cloud.google.com/kubernetes-engine/docs/concepts/maintenance-windows-and-exclusions)
	MaintenanceExclusions []ClusterMaintenancePolicyMaintenanceExclusion `pulumi:"maintenanceExclusions"`
	// Time window for recurring maintenance operations.
	//
	// Specify `startTime` and `endTime` in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) "Zulu" date format.  The start time's date is
	// the initial date that the window starts, and the end time is used for calculating duration.  Specify `recurrence` in
	// [RFC5545](https://tools.ietf.org/html/rfc5545#section-3.8.5.3) RRULE format, to specify when this recurs.
	// Note that GKE may accept other formats, but will return values in UTC, causing a permanent diff.
	//
	// Examples:
	RecurringWindow *ClusterMaintenancePolicyRecurringWindow `pulumi:"recurringWindow"`
}

// ClusterMaintenancePolicyInput is an input type that accepts ClusterMaintenancePolicyArgs and ClusterMaintenancePolicyOutput values.
// You can construct a concrete instance of `ClusterMaintenancePolicyInput` via:
//
//	ClusterMaintenancePolicyArgs{...}
type ClusterMaintenancePolicyInput interface {
	pulumi.Input

	ToClusterMaintenancePolicyOutput() ClusterMaintenancePolicyOutput
	ToClusterMaintenancePolicyOutputWithContext(context.Context) ClusterMaintenancePolicyOutput
}

type ClusterMaintenancePolicyArgs struct {
	// Time window specified for daily maintenance operations.
	// Specify `startTime` in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format "HH:MM”,
	// where HH : \[00-23\] and MM : \[00-59\] GMT. For example:
	//
	// Examples:
	DailyMaintenanceWindow ClusterMaintenancePolicyDailyMaintenanceWindowPtrInput `pulumi:"dailyMaintenanceWindow"`
	// Exceptions to maintenance window. Non-emergency maintenance should not occur in these windows. A cluster can have up to 20 maintenance exclusions at a time [Maintenance Window and Exclusions](https://cloud.google.com/kubernetes-engine/docs/concepts/maintenance-windows-and-exclusions)
	MaintenanceExclusions ClusterMaintenancePolicyMaintenanceExclusionArrayInput `pulumi:"maintenanceExclusions"`
	// Time window for recurring maintenance operations.
	//
	// Specify `startTime` and `endTime` in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) "Zulu" date format.  The start time's date is
	// the initial date that the window starts, and the end time is used for calculating duration.  Specify `recurrence` in
	// [RFC5545](https://tools.ietf.org/html/rfc5545#section-3.8.5.3) RRULE format, to specify when this recurs.
	// Note that GKE may accept other formats, but will return values in UTC, causing a permanent diff.
	//
	// Examples:
	RecurringWindow ClusterMaintenancePolicyRecurringWindowPtrInput `pulumi:"recurringWindow"`
}

func (ClusterMaintenancePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMaintenancePolicy)(nil)).Elem()
}

func (i ClusterMaintenancePolicyArgs) ToClusterMaintenancePolicyOutput() ClusterMaintenancePolicyOutput {
	return i.ToClusterMaintenancePolicyOutputWithContext(context.Background())
}

func (i ClusterMaintenancePolicyArgs) ToClusterMaintenancePolicyOutputWithContext(ctx context.Context) ClusterMaintenancePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenancePolicyOutput)
}

func (i ClusterMaintenancePolicyArgs) ToClusterMaintenancePolicyPtrOutput() ClusterMaintenancePolicyPtrOutput {
	return i.ToClusterMaintenancePolicyPtrOutputWithContext(context.Background())
}

func (i ClusterMaintenancePolicyArgs) ToClusterMaintenancePolicyPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenancePolicyOutput).ToClusterMaintenancePolicyPtrOutputWithContext(ctx)
}

// ClusterMaintenancePolicyPtrInput is an input type that accepts ClusterMaintenancePolicyArgs, ClusterMaintenancePolicyPtr and ClusterMaintenancePolicyPtrOutput values.
// You can construct a concrete instance of `ClusterMaintenancePolicyPtrInput` via:
//
//	        ClusterMaintenancePolicyArgs{...}
//
//	or:
//
//	        nil
type ClusterMaintenancePolicyPtrInput interface {
	pulumi.Input

	ToClusterMaintenancePolicyPtrOutput() ClusterMaintenancePolicyPtrOutput
	ToClusterMaintenancePolicyPtrOutputWithContext(context.Context) ClusterMaintenancePolicyPtrOutput
}

type clusterMaintenancePolicyPtrType ClusterMaintenancePolicyArgs

func ClusterMaintenancePolicyPtr(v *ClusterMaintenancePolicyArgs) ClusterMaintenancePolicyPtrInput {
	return (*clusterMaintenancePolicyPtrType)(v)
}

func (*clusterMaintenancePolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMaintenancePolicy)(nil)).Elem()
}

func (i *clusterMaintenancePolicyPtrType) ToClusterMaintenancePolicyPtrOutput() ClusterMaintenancePolicyPtrOutput {
	return i.ToClusterMaintenancePolicyPtrOutputWithContext(context.Background())
}

func (i *clusterMaintenancePolicyPtrType) ToClusterMaintenancePolicyPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenancePolicyPtrOutput)
}

type ClusterMaintenancePolicyOutput struct{ *pulumi.OutputState }

func (ClusterMaintenancePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMaintenancePolicy)(nil)).Elem()
}

func (o ClusterMaintenancePolicyOutput) ToClusterMaintenancePolicyOutput() ClusterMaintenancePolicyOutput {
	return o
}

func (o ClusterMaintenancePolicyOutput) ToClusterMaintenancePolicyOutputWithContext(ctx context.Context) ClusterMaintenancePolicyOutput {
	return o
}

func (o ClusterMaintenancePolicyOutput) ToClusterMaintenancePolicyPtrOutput() ClusterMaintenancePolicyPtrOutput {
	return o.ToClusterMaintenancePolicyPtrOutputWithContext(context.Background())
}

func (o ClusterMaintenancePolicyOutput) ToClusterMaintenancePolicyPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterMaintenancePolicy) *ClusterMaintenancePolicy {
		return &v
	}).(ClusterMaintenancePolicyPtrOutput)
}

// Time window specified for daily maintenance operations.
// Specify `startTime` in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format "HH:MM”,
// where HH : \[00-23\] and MM : \[00-59\] GMT. For example:
//
// Examples:
func (o ClusterMaintenancePolicyOutput) DailyMaintenanceWindow() ClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicy) *ClusterMaintenancePolicyDailyMaintenanceWindow {
		return v.DailyMaintenanceWindow
	}).(ClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput)
}

// Exceptions to maintenance window. Non-emergency maintenance should not occur in these windows. A cluster can have up to 20 maintenance exclusions at a time [Maintenance Window and Exclusions](https://cloud.google.com/kubernetes-engine/docs/concepts/maintenance-windows-and-exclusions)
func (o ClusterMaintenancePolicyOutput) MaintenanceExclusions() ClusterMaintenancePolicyMaintenanceExclusionArrayOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicy) []ClusterMaintenancePolicyMaintenanceExclusion {
		return v.MaintenanceExclusions
	}).(ClusterMaintenancePolicyMaintenanceExclusionArrayOutput)
}

// Time window for recurring maintenance operations.
//
// Specify `startTime` and `endTime` in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) "Zulu" date format.  The start time's date is
// the initial date that the window starts, and the end time is used for calculating duration.  Specify `recurrence` in
// [RFC5545](https://tools.ietf.org/html/rfc5545#section-3.8.5.3) RRULE format, to specify when this recurs.
// Note that GKE may accept other formats, but will return values in UTC, causing a permanent diff.
//
// Examples:
func (o ClusterMaintenancePolicyOutput) RecurringWindow() ClusterMaintenancePolicyRecurringWindowPtrOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicy) *ClusterMaintenancePolicyRecurringWindow { return v.RecurringWindow }).(ClusterMaintenancePolicyRecurringWindowPtrOutput)
}

type ClusterMaintenancePolicyPtrOutput struct{ *pulumi.OutputState }

func (ClusterMaintenancePolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMaintenancePolicy)(nil)).Elem()
}

func (o ClusterMaintenancePolicyPtrOutput) ToClusterMaintenancePolicyPtrOutput() ClusterMaintenancePolicyPtrOutput {
	return o
}

func (o ClusterMaintenancePolicyPtrOutput) ToClusterMaintenancePolicyPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyPtrOutput {
	return o
}

func (o ClusterMaintenancePolicyPtrOutput) Elem() ClusterMaintenancePolicyOutput {
	return o.ApplyT(func(v *ClusterMaintenancePolicy) ClusterMaintenancePolicy {
		if v != nil {
			return *v
		}
		var ret ClusterMaintenancePolicy
		return ret
	}).(ClusterMaintenancePolicyOutput)
}

// Time window specified for daily maintenance operations.
// Specify `startTime` in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format "HH:MM”,
// where HH : \[00-23\] and MM : \[00-59\] GMT. For example:
//
// Examples:
func (o ClusterMaintenancePolicyPtrOutput) DailyMaintenanceWindow() ClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput {
	return o.ApplyT(func(v *ClusterMaintenancePolicy) *ClusterMaintenancePolicyDailyMaintenanceWindow {
		if v == nil {
			return nil
		}
		return v.DailyMaintenanceWindow
	}).(ClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput)
}

// Exceptions to maintenance window. Non-emergency maintenance should not occur in these windows. A cluster can have up to 20 maintenance exclusions at a time [Maintenance Window and Exclusions](https://cloud.google.com/kubernetes-engine/docs/concepts/maintenance-windows-and-exclusions)
func (o ClusterMaintenancePolicyPtrOutput) MaintenanceExclusions() ClusterMaintenancePolicyMaintenanceExclusionArrayOutput {
	return o.ApplyT(func(v *ClusterMaintenancePolicy) []ClusterMaintenancePolicyMaintenanceExclusion {
		if v == nil {
			return nil
		}
		return v.MaintenanceExclusions
	}).(ClusterMaintenancePolicyMaintenanceExclusionArrayOutput)
}

// Time window for recurring maintenance operations.
//
// Specify `startTime` and `endTime` in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) "Zulu" date format.  The start time's date is
// the initial date that the window starts, and the end time is used for calculating duration.  Specify `recurrence` in
// [RFC5545](https://tools.ietf.org/html/rfc5545#section-3.8.5.3) RRULE format, to specify when this recurs.
// Note that GKE may accept other formats, but will return values in UTC, causing a permanent diff.
//
// Examples:
func (o ClusterMaintenancePolicyPtrOutput) RecurringWindow() ClusterMaintenancePolicyRecurringWindowPtrOutput {
	return o.ApplyT(func(v *ClusterMaintenancePolicy) *ClusterMaintenancePolicyRecurringWindow {
		if v == nil {
			return nil
		}
		return v.RecurringWindow
	}).(ClusterMaintenancePolicyRecurringWindowPtrOutput)
}

type ClusterMaintenancePolicyDailyMaintenanceWindow struct {
	// Duration of the time window, automatically chosen to be
	// smallest possible in the given scenario.
	// Duration will be in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format "PTnHnMnS".
	Duration  *string `pulumi:"duration"`
	StartTime string  `pulumi:"startTime"`
}

// ClusterMaintenancePolicyDailyMaintenanceWindowInput is an input type that accepts ClusterMaintenancePolicyDailyMaintenanceWindowArgs and ClusterMaintenancePolicyDailyMaintenanceWindowOutput values.
// You can construct a concrete instance of `ClusterMaintenancePolicyDailyMaintenanceWindowInput` via:
//
//	ClusterMaintenancePolicyDailyMaintenanceWindowArgs{...}
type ClusterMaintenancePolicyDailyMaintenanceWindowInput interface {
	pulumi.Input

	ToClusterMaintenancePolicyDailyMaintenanceWindowOutput() ClusterMaintenancePolicyDailyMaintenanceWindowOutput
	ToClusterMaintenancePolicyDailyMaintenanceWindowOutputWithContext(context.Context) ClusterMaintenancePolicyDailyMaintenanceWindowOutput
}

type ClusterMaintenancePolicyDailyMaintenanceWindowArgs struct {
	// Duration of the time window, automatically chosen to be
	// smallest possible in the given scenario.
	// Duration will be in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format "PTnHnMnS".
	Duration  pulumi.StringPtrInput `pulumi:"duration"`
	StartTime pulumi.StringInput    `pulumi:"startTime"`
}

func (ClusterMaintenancePolicyDailyMaintenanceWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMaintenancePolicyDailyMaintenanceWindow)(nil)).Elem()
}

func (i ClusterMaintenancePolicyDailyMaintenanceWindowArgs) ToClusterMaintenancePolicyDailyMaintenanceWindowOutput() ClusterMaintenancePolicyDailyMaintenanceWindowOutput {
	return i.ToClusterMaintenancePolicyDailyMaintenanceWindowOutputWithContext(context.Background())
}

func (i ClusterMaintenancePolicyDailyMaintenanceWindowArgs) ToClusterMaintenancePolicyDailyMaintenanceWindowOutputWithContext(ctx context.Context) ClusterMaintenancePolicyDailyMaintenanceWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenancePolicyDailyMaintenanceWindowOutput)
}

func (i ClusterMaintenancePolicyDailyMaintenanceWindowArgs) ToClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput() ClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput {
	return i.ToClusterMaintenancePolicyDailyMaintenanceWindowPtrOutputWithContext(context.Background())
}

func (i ClusterMaintenancePolicyDailyMaintenanceWindowArgs) ToClusterMaintenancePolicyDailyMaintenanceWindowPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenancePolicyDailyMaintenanceWindowOutput).ToClusterMaintenancePolicyDailyMaintenanceWindowPtrOutputWithContext(ctx)
}

// ClusterMaintenancePolicyDailyMaintenanceWindowPtrInput is an input type that accepts ClusterMaintenancePolicyDailyMaintenanceWindowArgs, ClusterMaintenancePolicyDailyMaintenanceWindowPtr and ClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput values.
// You can construct a concrete instance of `ClusterMaintenancePolicyDailyMaintenanceWindowPtrInput` via:
//
//	        ClusterMaintenancePolicyDailyMaintenanceWindowArgs{...}
//
//	or:
//
//	        nil
type ClusterMaintenancePolicyDailyMaintenanceWindowPtrInput interface {
	pulumi.Input

	ToClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput() ClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput
	ToClusterMaintenancePolicyDailyMaintenanceWindowPtrOutputWithContext(context.Context) ClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput
}

type clusterMaintenancePolicyDailyMaintenanceWindowPtrType ClusterMaintenancePolicyDailyMaintenanceWindowArgs

func ClusterMaintenancePolicyDailyMaintenanceWindowPtr(v *ClusterMaintenancePolicyDailyMaintenanceWindowArgs) ClusterMaintenancePolicyDailyMaintenanceWindowPtrInput {
	return (*clusterMaintenancePolicyDailyMaintenanceWindowPtrType)(v)
}

func (*clusterMaintenancePolicyDailyMaintenanceWindowPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMaintenancePolicyDailyMaintenanceWindow)(nil)).Elem()
}

func (i *clusterMaintenancePolicyDailyMaintenanceWindowPtrType) ToClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput() ClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput {
	return i.ToClusterMaintenancePolicyDailyMaintenanceWindowPtrOutputWithContext(context.Background())
}

func (i *clusterMaintenancePolicyDailyMaintenanceWindowPtrType) ToClusterMaintenancePolicyDailyMaintenanceWindowPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput)
}

type ClusterMaintenancePolicyDailyMaintenanceWindowOutput struct{ *pulumi.OutputState }

func (ClusterMaintenancePolicyDailyMaintenanceWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMaintenancePolicyDailyMaintenanceWindow)(nil)).Elem()
}

func (o ClusterMaintenancePolicyDailyMaintenanceWindowOutput) ToClusterMaintenancePolicyDailyMaintenanceWindowOutput() ClusterMaintenancePolicyDailyMaintenanceWindowOutput {
	return o
}

func (o ClusterMaintenancePolicyDailyMaintenanceWindowOutput) ToClusterMaintenancePolicyDailyMaintenanceWindowOutputWithContext(ctx context.Context) ClusterMaintenancePolicyDailyMaintenanceWindowOutput {
	return o
}

func (o ClusterMaintenancePolicyDailyMaintenanceWindowOutput) ToClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput() ClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput {
	return o.ToClusterMaintenancePolicyDailyMaintenanceWindowPtrOutputWithContext(context.Background())
}

func (o ClusterMaintenancePolicyDailyMaintenanceWindowOutput) ToClusterMaintenancePolicyDailyMaintenanceWindowPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterMaintenancePolicyDailyMaintenanceWindow) *ClusterMaintenancePolicyDailyMaintenanceWindow {
		return &v
	}).(ClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput)
}

// Duration of the time window, automatically chosen to be
// smallest possible in the given scenario.
// Duration will be in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format "PTnHnMnS".
func (o ClusterMaintenancePolicyDailyMaintenanceWindowOutput) Duration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicyDailyMaintenanceWindow) *string { return v.Duration }).(pulumi.StringPtrOutput)
}

func (o ClusterMaintenancePolicyDailyMaintenanceWindowOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicyDailyMaintenanceWindow) string { return v.StartTime }).(pulumi.StringOutput)
}

type ClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput struct{ *pulumi.OutputState }

func (ClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMaintenancePolicyDailyMaintenanceWindow)(nil)).Elem()
}

func (o ClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput) ToClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput() ClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput {
	return o
}

func (o ClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput) ToClusterMaintenancePolicyDailyMaintenanceWindowPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput {
	return o
}

func (o ClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput) Elem() ClusterMaintenancePolicyDailyMaintenanceWindowOutput {
	return o.ApplyT(func(v *ClusterMaintenancePolicyDailyMaintenanceWindow) ClusterMaintenancePolicyDailyMaintenanceWindow {
		if v != nil {
			return *v
		}
		var ret ClusterMaintenancePolicyDailyMaintenanceWindow
		return ret
	}).(ClusterMaintenancePolicyDailyMaintenanceWindowOutput)
}

// Duration of the time window, automatically chosen to be
// smallest possible in the given scenario.
// Duration will be in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format "PTnHnMnS".
func (o ClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput) Duration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterMaintenancePolicyDailyMaintenanceWindow) *string {
		if v == nil {
			return nil
		}
		return v.Duration
	}).(pulumi.StringPtrOutput)
}

func (o ClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterMaintenancePolicyDailyMaintenanceWindow) *string {
		if v == nil {
			return nil
		}
		return &v.StartTime
	}).(pulumi.StringPtrOutput)
}

type ClusterMaintenancePolicyMaintenanceExclusion struct {
	EndTime       string `pulumi:"endTime"`
	ExclusionName string `pulumi:"exclusionName"`
	// MaintenanceExclusionOptions provides maintenance exclusion related options.
	ExclusionOptions *ClusterMaintenancePolicyMaintenanceExclusionExclusionOptions `pulumi:"exclusionOptions"`
	StartTime        string                                                        `pulumi:"startTime"`
}

// ClusterMaintenancePolicyMaintenanceExclusionInput is an input type that accepts ClusterMaintenancePolicyMaintenanceExclusionArgs and ClusterMaintenancePolicyMaintenanceExclusionOutput values.
// You can construct a concrete instance of `ClusterMaintenancePolicyMaintenanceExclusionInput` via:
//
//	ClusterMaintenancePolicyMaintenanceExclusionArgs{...}
type ClusterMaintenancePolicyMaintenanceExclusionInput interface {
	pulumi.Input

	ToClusterMaintenancePolicyMaintenanceExclusionOutput() ClusterMaintenancePolicyMaintenanceExclusionOutput
	ToClusterMaintenancePolicyMaintenanceExclusionOutputWithContext(context.Context) ClusterMaintenancePolicyMaintenanceExclusionOutput
}

type ClusterMaintenancePolicyMaintenanceExclusionArgs struct {
	EndTime       pulumi.StringInput `pulumi:"endTime"`
	ExclusionName pulumi.StringInput `pulumi:"exclusionName"`
	// MaintenanceExclusionOptions provides maintenance exclusion related options.
	ExclusionOptions ClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsPtrInput `pulumi:"exclusionOptions"`
	StartTime        pulumi.StringInput                                                   `pulumi:"startTime"`
}

func (ClusterMaintenancePolicyMaintenanceExclusionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMaintenancePolicyMaintenanceExclusion)(nil)).Elem()
}

func (i ClusterMaintenancePolicyMaintenanceExclusionArgs) ToClusterMaintenancePolicyMaintenanceExclusionOutput() ClusterMaintenancePolicyMaintenanceExclusionOutput {
	return i.ToClusterMaintenancePolicyMaintenanceExclusionOutputWithContext(context.Background())
}

func (i ClusterMaintenancePolicyMaintenanceExclusionArgs) ToClusterMaintenancePolicyMaintenanceExclusionOutputWithContext(ctx context.Context) ClusterMaintenancePolicyMaintenanceExclusionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenancePolicyMaintenanceExclusionOutput)
}

// ClusterMaintenancePolicyMaintenanceExclusionArrayInput is an input type that accepts ClusterMaintenancePolicyMaintenanceExclusionArray and ClusterMaintenancePolicyMaintenanceExclusionArrayOutput values.
// You can construct a concrete instance of `ClusterMaintenancePolicyMaintenanceExclusionArrayInput` via:
//
//	ClusterMaintenancePolicyMaintenanceExclusionArray{ ClusterMaintenancePolicyMaintenanceExclusionArgs{...} }
type ClusterMaintenancePolicyMaintenanceExclusionArrayInput interface {
	pulumi.Input

	ToClusterMaintenancePolicyMaintenanceExclusionArrayOutput() ClusterMaintenancePolicyMaintenanceExclusionArrayOutput
	ToClusterMaintenancePolicyMaintenanceExclusionArrayOutputWithContext(context.Context) ClusterMaintenancePolicyMaintenanceExclusionArrayOutput
}

type ClusterMaintenancePolicyMaintenanceExclusionArray []ClusterMaintenancePolicyMaintenanceExclusionInput

func (ClusterMaintenancePolicyMaintenanceExclusionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterMaintenancePolicyMaintenanceExclusion)(nil)).Elem()
}

func (i ClusterMaintenancePolicyMaintenanceExclusionArray) ToClusterMaintenancePolicyMaintenanceExclusionArrayOutput() ClusterMaintenancePolicyMaintenanceExclusionArrayOutput {
	return i.ToClusterMaintenancePolicyMaintenanceExclusionArrayOutputWithContext(context.Background())
}

func (i ClusterMaintenancePolicyMaintenanceExclusionArray) ToClusterMaintenancePolicyMaintenanceExclusionArrayOutputWithContext(ctx context.Context) ClusterMaintenancePolicyMaintenanceExclusionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenancePolicyMaintenanceExclusionArrayOutput)
}

type ClusterMaintenancePolicyMaintenanceExclusionOutput struct{ *pulumi.OutputState }

func (ClusterMaintenancePolicyMaintenanceExclusionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMaintenancePolicyMaintenanceExclusion)(nil)).Elem()
}

func (o ClusterMaintenancePolicyMaintenanceExclusionOutput) ToClusterMaintenancePolicyMaintenanceExclusionOutput() ClusterMaintenancePolicyMaintenanceExclusionOutput {
	return o
}

func (o ClusterMaintenancePolicyMaintenanceExclusionOutput) ToClusterMaintenancePolicyMaintenanceExclusionOutputWithContext(ctx context.Context) ClusterMaintenancePolicyMaintenanceExclusionOutput {
	return o
}

func (o ClusterMaintenancePolicyMaintenanceExclusionOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicyMaintenanceExclusion) string { return v.EndTime }).(pulumi.StringOutput)
}

func (o ClusterMaintenancePolicyMaintenanceExclusionOutput) ExclusionName() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicyMaintenanceExclusion) string { return v.ExclusionName }).(pulumi.StringOutput)
}

// MaintenanceExclusionOptions provides maintenance exclusion related options.
func (o ClusterMaintenancePolicyMaintenanceExclusionOutput) ExclusionOptions() ClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsPtrOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicyMaintenanceExclusion) *ClusterMaintenancePolicyMaintenanceExclusionExclusionOptions {
		return v.ExclusionOptions
	}).(ClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsPtrOutput)
}

func (o ClusterMaintenancePolicyMaintenanceExclusionOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicyMaintenanceExclusion) string { return v.StartTime }).(pulumi.StringOutput)
}

type ClusterMaintenancePolicyMaintenanceExclusionArrayOutput struct{ *pulumi.OutputState }

func (ClusterMaintenancePolicyMaintenanceExclusionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterMaintenancePolicyMaintenanceExclusion)(nil)).Elem()
}

func (o ClusterMaintenancePolicyMaintenanceExclusionArrayOutput) ToClusterMaintenancePolicyMaintenanceExclusionArrayOutput() ClusterMaintenancePolicyMaintenanceExclusionArrayOutput {
	return o
}

func (o ClusterMaintenancePolicyMaintenanceExclusionArrayOutput) ToClusterMaintenancePolicyMaintenanceExclusionArrayOutputWithContext(ctx context.Context) ClusterMaintenancePolicyMaintenanceExclusionArrayOutput {
	return o
}

func (o ClusterMaintenancePolicyMaintenanceExclusionArrayOutput) Index(i pulumi.IntInput) ClusterMaintenancePolicyMaintenanceExclusionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterMaintenancePolicyMaintenanceExclusion {
		return vs[0].([]ClusterMaintenancePolicyMaintenanceExclusion)[vs[1].(int)]
	}).(ClusterMaintenancePolicyMaintenanceExclusionOutput)
}

type ClusterMaintenancePolicyMaintenanceExclusionExclusionOptions struct {
	// The scope of automatic upgrades to restrict in the exclusion window. One of: **NO_UPGRADES | NO_MINOR_UPGRADES | NO_MINOR_OR_NODE_UPGRADES**
	//
	// Specify `startTime` and `endTime` in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) "Zulu" date format.  The start time's date is
	// the initial date that the window starts, and the end time is used for calculating duration.Specify `recurrence` in
	// [RFC5545](https://tools.ietf.org/html/rfc5545#section-3.8.5.3) RRULE format, to specify when this recurs.
	// Note that GKE may accept other formats, but will return values in UTC, causing a permanent diff.
	//
	// Examples:
	Scope string `pulumi:"scope"`
}

// ClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsInput is an input type that accepts ClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsArgs and ClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsOutput values.
// You can construct a concrete instance of `ClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsInput` via:
//
//	ClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsArgs{...}
type ClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsInput interface {
	pulumi.Input

	ToClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsOutput() ClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsOutput
	ToClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsOutputWithContext(context.Context) ClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsOutput
}

type ClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsArgs struct {
	// The scope of automatic upgrades to restrict in the exclusion window. One of: **NO_UPGRADES | NO_MINOR_UPGRADES | NO_MINOR_OR_NODE_UPGRADES**
	//
	// Specify `startTime` and `endTime` in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) "Zulu" date format.  The start time's date is
	// the initial date that the window starts, and the end time is used for calculating duration.Specify `recurrence` in
	// [RFC5545](https://tools.ietf.org/html/rfc5545#section-3.8.5.3) RRULE format, to specify when this recurs.
	// Note that GKE may accept other formats, but will return values in UTC, causing a permanent diff.
	//
	// Examples:
	Scope pulumi.StringInput `pulumi:"scope"`
}

func (ClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMaintenancePolicyMaintenanceExclusionExclusionOptions)(nil)).Elem()
}

func (i ClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsArgs) ToClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsOutput() ClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsOutput {
	return i.ToClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsOutputWithContext(context.Background())
}

func (i ClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsArgs) ToClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsOutputWithContext(ctx context.Context) ClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsOutput)
}

func (i ClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsArgs) ToClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsPtrOutput() ClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsPtrOutput {
	return i.ToClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsPtrOutputWithContext(context.Background())
}

func (i ClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsArgs) ToClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsOutput).ToClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsPtrOutputWithContext(ctx)
}

// ClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsPtrInput is an input type that accepts ClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsArgs, ClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsPtr and ClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsPtrOutput values.
// You can construct a concrete instance of `ClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsPtrInput` via:
//
//	        ClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsArgs{...}
//
//	or:
//
//	        nil
type ClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsPtrInput interface {
	pulumi.Input

	ToClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsPtrOutput() ClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsPtrOutput
	ToClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsPtrOutputWithContext(context.Context) ClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsPtrOutput
}

type clusterMaintenancePolicyMaintenanceExclusionExclusionOptionsPtrType ClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsArgs

func ClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsPtr(v *ClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsArgs) ClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsPtrInput {
	return (*clusterMaintenancePolicyMaintenanceExclusionExclusionOptionsPtrType)(v)
}

func (*clusterMaintenancePolicyMaintenanceExclusionExclusionOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMaintenancePolicyMaintenanceExclusionExclusionOptions)(nil)).Elem()
}

func (i *clusterMaintenancePolicyMaintenanceExclusionExclusionOptionsPtrType) ToClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsPtrOutput() ClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsPtrOutput {
	return i.ToClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsPtrOutputWithContext(context.Background())
}

func (i *clusterMaintenancePolicyMaintenanceExclusionExclusionOptionsPtrType) ToClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsPtrOutput)
}

type ClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsOutput struct{ *pulumi.OutputState }

func (ClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMaintenancePolicyMaintenanceExclusionExclusionOptions)(nil)).Elem()
}

func (o ClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsOutput) ToClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsOutput() ClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsOutput {
	return o
}

func (o ClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsOutput) ToClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsOutputWithContext(ctx context.Context) ClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsOutput {
	return o
}

func (o ClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsOutput) ToClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsPtrOutput() ClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsPtrOutput {
	return o.ToClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsPtrOutputWithContext(context.Background())
}

func (o ClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsOutput) ToClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterMaintenancePolicyMaintenanceExclusionExclusionOptions) *ClusterMaintenancePolicyMaintenanceExclusionExclusionOptions {
		return &v
	}).(ClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsPtrOutput)
}

// The scope of automatic upgrades to restrict in the exclusion window. One of: **NO_UPGRADES | NO_MINOR_UPGRADES | NO_MINOR_OR_NODE_UPGRADES**
//
// Specify `startTime` and `endTime` in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) "Zulu" date format.  The start time's date is
// the initial date that the window starts, and the end time is used for calculating duration.Specify `recurrence` in
// [RFC5545](https://tools.ietf.org/html/rfc5545#section-3.8.5.3) RRULE format, to specify when this recurs.
// Note that GKE may accept other formats, but will return values in UTC, causing a permanent diff.
//
// Examples:
func (o ClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsOutput) Scope() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicyMaintenanceExclusionExclusionOptions) string { return v.Scope }).(pulumi.StringOutput)
}

type ClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsPtrOutput struct{ *pulumi.OutputState }

func (ClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMaintenancePolicyMaintenanceExclusionExclusionOptions)(nil)).Elem()
}

func (o ClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsPtrOutput) ToClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsPtrOutput() ClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsPtrOutput {
	return o
}

func (o ClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsPtrOutput) ToClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsPtrOutput {
	return o
}

func (o ClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsPtrOutput) Elem() ClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsOutput {
	return o.ApplyT(func(v *ClusterMaintenancePolicyMaintenanceExclusionExclusionOptions) ClusterMaintenancePolicyMaintenanceExclusionExclusionOptions {
		if v != nil {
			return *v
		}
		var ret ClusterMaintenancePolicyMaintenanceExclusionExclusionOptions
		return ret
	}).(ClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsOutput)
}

// The scope of automatic upgrades to restrict in the exclusion window. One of: **NO_UPGRADES | NO_MINOR_UPGRADES | NO_MINOR_OR_NODE_UPGRADES**
//
// Specify `startTime` and `endTime` in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) "Zulu" date format.  The start time's date is
// the initial date that the window starts, and the end time is used for calculating duration.Specify `recurrence` in
// [RFC5545](https://tools.ietf.org/html/rfc5545#section-3.8.5.3) RRULE format, to specify when this recurs.
// Note that GKE may accept other formats, but will return values in UTC, causing a permanent diff.
//
// Examples:
func (o ClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsPtrOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterMaintenancePolicyMaintenanceExclusionExclusionOptions) *string {
		if v == nil {
			return nil
		}
		return &v.Scope
	}).(pulumi.StringPtrOutput)
}

type ClusterMaintenancePolicyRecurringWindow struct {
	EndTime    string `pulumi:"endTime"`
	Recurrence string `pulumi:"recurrence"`
	StartTime  string `pulumi:"startTime"`
}

// ClusterMaintenancePolicyRecurringWindowInput is an input type that accepts ClusterMaintenancePolicyRecurringWindowArgs and ClusterMaintenancePolicyRecurringWindowOutput values.
// You can construct a concrete instance of `ClusterMaintenancePolicyRecurringWindowInput` via:
//
//	ClusterMaintenancePolicyRecurringWindowArgs{...}
type ClusterMaintenancePolicyRecurringWindowInput interface {
	pulumi.Input

	ToClusterMaintenancePolicyRecurringWindowOutput() ClusterMaintenancePolicyRecurringWindowOutput
	ToClusterMaintenancePolicyRecurringWindowOutputWithContext(context.Context) ClusterMaintenancePolicyRecurringWindowOutput
}

type ClusterMaintenancePolicyRecurringWindowArgs struct {
	EndTime    pulumi.StringInput `pulumi:"endTime"`
	Recurrence pulumi.StringInput `pulumi:"recurrence"`
	StartTime  pulumi.StringInput `pulumi:"startTime"`
}

func (ClusterMaintenancePolicyRecurringWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMaintenancePolicyRecurringWindow)(nil)).Elem()
}

func (i ClusterMaintenancePolicyRecurringWindowArgs) ToClusterMaintenancePolicyRecurringWindowOutput() ClusterMaintenancePolicyRecurringWindowOutput {
	return i.ToClusterMaintenancePolicyRecurringWindowOutputWithContext(context.Background())
}

func (i ClusterMaintenancePolicyRecurringWindowArgs) ToClusterMaintenancePolicyRecurringWindowOutputWithContext(ctx context.Context) ClusterMaintenancePolicyRecurringWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenancePolicyRecurringWindowOutput)
}

func (i ClusterMaintenancePolicyRecurringWindowArgs) ToClusterMaintenancePolicyRecurringWindowPtrOutput() ClusterMaintenancePolicyRecurringWindowPtrOutput {
	return i.ToClusterMaintenancePolicyRecurringWindowPtrOutputWithContext(context.Background())
}

func (i ClusterMaintenancePolicyRecurringWindowArgs) ToClusterMaintenancePolicyRecurringWindowPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyRecurringWindowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenancePolicyRecurringWindowOutput).ToClusterMaintenancePolicyRecurringWindowPtrOutputWithContext(ctx)
}

// ClusterMaintenancePolicyRecurringWindowPtrInput is an input type that accepts ClusterMaintenancePolicyRecurringWindowArgs, ClusterMaintenancePolicyRecurringWindowPtr and ClusterMaintenancePolicyRecurringWindowPtrOutput values.
// You can construct a concrete instance of `ClusterMaintenancePolicyRecurringWindowPtrInput` via:
//
//	        ClusterMaintenancePolicyRecurringWindowArgs{...}
//
//	or:
//
//	        nil
type ClusterMaintenancePolicyRecurringWindowPtrInput interface {
	pulumi.Input

	ToClusterMaintenancePolicyRecurringWindowPtrOutput() ClusterMaintenancePolicyRecurringWindowPtrOutput
	ToClusterMaintenancePolicyRecurringWindowPtrOutputWithContext(context.Context) ClusterMaintenancePolicyRecurringWindowPtrOutput
}

type clusterMaintenancePolicyRecurringWindowPtrType ClusterMaintenancePolicyRecurringWindowArgs

func ClusterMaintenancePolicyRecurringWindowPtr(v *ClusterMaintenancePolicyRecurringWindowArgs) ClusterMaintenancePolicyRecurringWindowPtrInput {
	return (*clusterMaintenancePolicyRecurringWindowPtrType)(v)
}

func (*clusterMaintenancePolicyRecurringWindowPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMaintenancePolicyRecurringWindow)(nil)).Elem()
}

func (i *clusterMaintenancePolicyRecurringWindowPtrType) ToClusterMaintenancePolicyRecurringWindowPtrOutput() ClusterMaintenancePolicyRecurringWindowPtrOutput {
	return i.ToClusterMaintenancePolicyRecurringWindowPtrOutputWithContext(context.Background())
}

func (i *clusterMaintenancePolicyRecurringWindowPtrType) ToClusterMaintenancePolicyRecurringWindowPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyRecurringWindowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenancePolicyRecurringWindowPtrOutput)
}

type ClusterMaintenancePolicyRecurringWindowOutput struct{ *pulumi.OutputState }

func (ClusterMaintenancePolicyRecurringWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMaintenancePolicyRecurringWindow)(nil)).Elem()
}

func (o ClusterMaintenancePolicyRecurringWindowOutput) ToClusterMaintenancePolicyRecurringWindowOutput() ClusterMaintenancePolicyRecurringWindowOutput {
	return o
}

func (o ClusterMaintenancePolicyRecurringWindowOutput) ToClusterMaintenancePolicyRecurringWindowOutputWithContext(ctx context.Context) ClusterMaintenancePolicyRecurringWindowOutput {
	return o
}

func (o ClusterMaintenancePolicyRecurringWindowOutput) ToClusterMaintenancePolicyRecurringWindowPtrOutput() ClusterMaintenancePolicyRecurringWindowPtrOutput {
	return o.ToClusterMaintenancePolicyRecurringWindowPtrOutputWithContext(context.Background())
}

func (o ClusterMaintenancePolicyRecurringWindowOutput) ToClusterMaintenancePolicyRecurringWindowPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyRecurringWindowPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterMaintenancePolicyRecurringWindow) *ClusterMaintenancePolicyRecurringWindow {
		return &v
	}).(ClusterMaintenancePolicyRecurringWindowPtrOutput)
}

func (o ClusterMaintenancePolicyRecurringWindowOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicyRecurringWindow) string { return v.EndTime }).(pulumi.StringOutput)
}

func (o ClusterMaintenancePolicyRecurringWindowOutput) Recurrence() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicyRecurringWindow) string { return v.Recurrence }).(pulumi.StringOutput)
}

func (o ClusterMaintenancePolicyRecurringWindowOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicyRecurringWindow) string { return v.StartTime }).(pulumi.StringOutput)
}

type ClusterMaintenancePolicyRecurringWindowPtrOutput struct{ *pulumi.OutputState }

func (ClusterMaintenancePolicyRecurringWindowPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMaintenancePolicyRecurringWindow)(nil)).Elem()
}

func (o ClusterMaintenancePolicyRecurringWindowPtrOutput) ToClusterMaintenancePolicyRecurringWindowPtrOutput() ClusterMaintenancePolicyRecurringWindowPtrOutput {
	return o
}

func (o ClusterMaintenancePolicyRecurringWindowPtrOutput) ToClusterMaintenancePolicyRecurringWindowPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyRecurringWindowPtrOutput {
	return o
}

func (o ClusterMaintenancePolicyRecurringWindowPtrOutput) Elem() ClusterMaintenancePolicyRecurringWindowOutput {
	return o.ApplyT(func(v *ClusterMaintenancePolicyRecurringWindow) ClusterMaintenancePolicyRecurringWindow {
		if v != nil {
			return *v
		}
		var ret ClusterMaintenancePolicyRecurringWindow
		return ret
	}).(ClusterMaintenancePolicyRecurringWindowOutput)
}

func (o ClusterMaintenancePolicyRecurringWindowPtrOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterMaintenancePolicyRecurringWindow) *string {
		if v == nil {
			return nil
		}
		return &v.EndTime
	}).(pulumi.StringPtrOutput)
}

func (o ClusterMaintenancePolicyRecurringWindowPtrOutput) Recurrence() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterMaintenancePolicyRecurringWindow) *string {
		if v == nil {
			return nil
		}
		return &v.Recurrence
	}).(pulumi.StringPtrOutput)
}

func (o ClusterMaintenancePolicyRecurringWindowPtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterMaintenancePolicyRecurringWindow) *string {
		if v == nil {
			return nil
		}
		return &v.StartTime
	}).(pulumi.StringPtrOutput)
}

type ClusterMasterAuth struct {
	// Base64 encoded public certificate
	// used by clients to authenticate to the cluster endpoint.
	ClientCertificate *string `pulumi:"clientCertificate"`
	// Whether client certificate authorization is enabled for this cluster.  For example:
	ClientCertificateConfig ClusterMasterAuthClientCertificateConfig `pulumi:"clientCertificateConfig"`
	// Base64 encoded private key used by clients
	// to authenticate to the cluster endpoint.
	ClientKey *string `pulumi:"clientKey"`
	// Base64 encoded public certificate
	// that is the root certificate of the cluster.
	ClusterCaCertificate *string `pulumi:"clusterCaCertificate"`
}

// ClusterMasterAuthInput is an input type that accepts ClusterMasterAuthArgs and ClusterMasterAuthOutput values.
// You can construct a concrete instance of `ClusterMasterAuthInput` via:
//
//	ClusterMasterAuthArgs{...}
type ClusterMasterAuthInput interface {
	pulumi.Input

	ToClusterMasterAuthOutput() ClusterMasterAuthOutput
	ToClusterMasterAuthOutputWithContext(context.Context) ClusterMasterAuthOutput
}

type ClusterMasterAuthArgs struct {
	// Base64 encoded public certificate
	// used by clients to authenticate to the cluster endpoint.
	ClientCertificate pulumi.StringPtrInput `pulumi:"clientCertificate"`
	// Whether client certificate authorization is enabled for this cluster.  For example:
	ClientCertificateConfig ClusterMasterAuthClientCertificateConfigInput `pulumi:"clientCertificateConfig"`
	// Base64 encoded private key used by clients
	// to authenticate to the cluster endpoint.
	ClientKey pulumi.StringPtrInput `pulumi:"clientKey"`
	// Base64 encoded public certificate
	// that is the root certificate of the cluster.
	ClusterCaCertificate pulumi.StringPtrInput `pulumi:"clusterCaCertificate"`
}

func (ClusterMasterAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMasterAuth)(nil)).Elem()
}

func (i ClusterMasterAuthArgs) ToClusterMasterAuthOutput() ClusterMasterAuthOutput {
	return i.ToClusterMasterAuthOutputWithContext(context.Background())
}

func (i ClusterMasterAuthArgs) ToClusterMasterAuthOutputWithContext(ctx context.Context) ClusterMasterAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMasterAuthOutput)
}

func (i ClusterMasterAuthArgs) ToClusterMasterAuthPtrOutput() ClusterMasterAuthPtrOutput {
	return i.ToClusterMasterAuthPtrOutputWithContext(context.Background())
}

func (i ClusterMasterAuthArgs) ToClusterMasterAuthPtrOutputWithContext(ctx context.Context) ClusterMasterAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMasterAuthOutput).ToClusterMasterAuthPtrOutputWithContext(ctx)
}

// ClusterMasterAuthPtrInput is an input type that accepts ClusterMasterAuthArgs, ClusterMasterAuthPtr and ClusterMasterAuthPtrOutput values.
// You can construct a concrete instance of `ClusterMasterAuthPtrInput` via:
//
//	        ClusterMasterAuthArgs{...}
//
//	or:
//
//	        nil
type ClusterMasterAuthPtrInput interface {
	pulumi.Input

	ToClusterMasterAuthPtrOutput() ClusterMasterAuthPtrOutput
	ToClusterMasterAuthPtrOutputWithContext(context.Context) ClusterMasterAuthPtrOutput
}

type clusterMasterAuthPtrType ClusterMasterAuthArgs

func ClusterMasterAuthPtr(v *ClusterMasterAuthArgs) ClusterMasterAuthPtrInput {
	return (*clusterMasterAuthPtrType)(v)
}

func (*clusterMasterAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMasterAuth)(nil)).Elem()
}

func (i *clusterMasterAuthPtrType) ToClusterMasterAuthPtrOutput() ClusterMasterAuthPtrOutput {
	return i.ToClusterMasterAuthPtrOutputWithContext(context.Background())
}

func (i *clusterMasterAuthPtrType) ToClusterMasterAuthPtrOutputWithContext(ctx context.Context) ClusterMasterAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMasterAuthPtrOutput)
}

type ClusterMasterAuthOutput struct{ *pulumi.OutputState }

func (ClusterMasterAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMasterAuth)(nil)).Elem()
}

func (o ClusterMasterAuthOutput) ToClusterMasterAuthOutput() ClusterMasterAuthOutput {
	return o
}

func (o ClusterMasterAuthOutput) ToClusterMasterAuthOutputWithContext(ctx context.Context) ClusterMasterAuthOutput {
	return o
}

func (o ClusterMasterAuthOutput) ToClusterMasterAuthPtrOutput() ClusterMasterAuthPtrOutput {
	return o.ToClusterMasterAuthPtrOutputWithContext(context.Background())
}

func (o ClusterMasterAuthOutput) ToClusterMasterAuthPtrOutputWithContext(ctx context.Context) ClusterMasterAuthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterMasterAuth) *ClusterMasterAuth {
		return &v
	}).(ClusterMasterAuthPtrOutput)
}

// Base64 encoded public certificate
// used by clients to authenticate to the cluster endpoint.
func (o ClusterMasterAuthOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMasterAuth) *string { return v.ClientCertificate }).(pulumi.StringPtrOutput)
}

// Whether client certificate authorization is enabled for this cluster.  For example:
func (o ClusterMasterAuthOutput) ClientCertificateConfig() ClusterMasterAuthClientCertificateConfigOutput {
	return o.ApplyT(func(v ClusterMasterAuth) ClusterMasterAuthClientCertificateConfig { return v.ClientCertificateConfig }).(ClusterMasterAuthClientCertificateConfigOutput)
}

// Base64 encoded private key used by clients
// to authenticate to the cluster endpoint.
func (o ClusterMasterAuthOutput) ClientKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMasterAuth) *string { return v.ClientKey }).(pulumi.StringPtrOutput)
}

// Base64 encoded public certificate
// that is the root certificate of the cluster.
func (o ClusterMasterAuthOutput) ClusterCaCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMasterAuth) *string { return v.ClusterCaCertificate }).(pulumi.StringPtrOutput)
}

type ClusterMasterAuthPtrOutput struct{ *pulumi.OutputState }

func (ClusterMasterAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMasterAuth)(nil)).Elem()
}

func (o ClusterMasterAuthPtrOutput) ToClusterMasterAuthPtrOutput() ClusterMasterAuthPtrOutput {
	return o
}

func (o ClusterMasterAuthPtrOutput) ToClusterMasterAuthPtrOutputWithContext(ctx context.Context) ClusterMasterAuthPtrOutput {
	return o
}

func (o ClusterMasterAuthPtrOutput) Elem() ClusterMasterAuthOutput {
	return o.ApplyT(func(v *ClusterMasterAuth) ClusterMasterAuth {
		if v != nil {
			return *v
		}
		var ret ClusterMasterAuth
		return ret
	}).(ClusterMasterAuthOutput)
}

// Base64 encoded public certificate
// used by clients to authenticate to the cluster endpoint.
func (o ClusterMasterAuthPtrOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterMasterAuth) *string {
		if v == nil {
			return nil
		}
		return v.ClientCertificate
	}).(pulumi.StringPtrOutput)
}

// Whether client certificate authorization is enabled for this cluster.  For example:
func (o ClusterMasterAuthPtrOutput) ClientCertificateConfig() ClusterMasterAuthClientCertificateConfigPtrOutput {
	return o.ApplyT(func(v *ClusterMasterAuth) *ClusterMasterAuthClientCertificateConfig {
		if v == nil {
			return nil
		}
		return &v.ClientCertificateConfig
	}).(ClusterMasterAuthClientCertificateConfigPtrOutput)
}

// Base64 encoded private key used by clients
// to authenticate to the cluster endpoint.
func (o ClusterMasterAuthPtrOutput) ClientKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterMasterAuth) *string {
		if v == nil {
			return nil
		}
		return v.ClientKey
	}).(pulumi.StringPtrOutput)
}

// Base64 encoded public certificate
// that is the root certificate of the cluster.
func (o ClusterMasterAuthPtrOutput) ClusterCaCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterMasterAuth) *string {
		if v == nil {
			return nil
		}
		return v.ClusterCaCertificate
	}).(pulumi.StringPtrOutput)
}

type ClusterMasterAuthClientCertificateConfig struct {
	// Whether client certificate authorization is enabled for this cluster.
	IssueClientCertificate bool `pulumi:"issueClientCertificate"`
}

// ClusterMasterAuthClientCertificateConfigInput is an input type that accepts ClusterMasterAuthClientCertificateConfigArgs and ClusterMasterAuthClientCertificateConfigOutput values.
// You can construct a concrete instance of `ClusterMasterAuthClientCertificateConfigInput` via:
//
//	ClusterMasterAuthClientCertificateConfigArgs{...}
type ClusterMasterAuthClientCertificateConfigInput interface {
	pulumi.Input

	ToClusterMasterAuthClientCertificateConfigOutput() ClusterMasterAuthClientCertificateConfigOutput
	ToClusterMasterAuthClientCertificateConfigOutputWithContext(context.Context) ClusterMasterAuthClientCertificateConfigOutput
}

type ClusterMasterAuthClientCertificateConfigArgs struct {
	// Whether client certificate authorization is enabled for this cluster.
	IssueClientCertificate pulumi.BoolInput `pulumi:"issueClientCertificate"`
}

func (ClusterMasterAuthClientCertificateConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMasterAuthClientCertificateConfig)(nil)).Elem()
}

func (i ClusterMasterAuthClientCertificateConfigArgs) ToClusterMasterAuthClientCertificateConfigOutput() ClusterMasterAuthClientCertificateConfigOutput {
	return i.ToClusterMasterAuthClientCertificateConfigOutputWithContext(context.Background())
}

func (i ClusterMasterAuthClientCertificateConfigArgs) ToClusterMasterAuthClientCertificateConfigOutputWithContext(ctx context.Context) ClusterMasterAuthClientCertificateConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMasterAuthClientCertificateConfigOutput)
}

func (i ClusterMasterAuthClientCertificateConfigArgs) ToClusterMasterAuthClientCertificateConfigPtrOutput() ClusterMasterAuthClientCertificateConfigPtrOutput {
	return i.ToClusterMasterAuthClientCertificateConfigPtrOutputWithContext(context.Background())
}

func (i ClusterMasterAuthClientCertificateConfigArgs) ToClusterMasterAuthClientCertificateConfigPtrOutputWithContext(ctx context.Context) ClusterMasterAuthClientCertificateConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMasterAuthClientCertificateConfigOutput).ToClusterMasterAuthClientCertificateConfigPtrOutputWithContext(ctx)
}

// ClusterMasterAuthClientCertificateConfigPtrInput is an input type that accepts ClusterMasterAuthClientCertificateConfigArgs, ClusterMasterAuthClientCertificateConfigPtr and ClusterMasterAuthClientCertificateConfigPtrOutput values.
// You can construct a concrete instance of `ClusterMasterAuthClientCertificateConfigPtrInput` via:
//
//	        ClusterMasterAuthClientCertificateConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterMasterAuthClientCertificateConfigPtrInput interface {
	pulumi.Input

	ToClusterMasterAuthClientCertificateConfigPtrOutput() ClusterMasterAuthClientCertificateConfigPtrOutput
	ToClusterMasterAuthClientCertificateConfigPtrOutputWithContext(context.Context) ClusterMasterAuthClientCertificateConfigPtrOutput
}

type clusterMasterAuthClientCertificateConfigPtrType ClusterMasterAuthClientCertificateConfigArgs

func ClusterMasterAuthClientCertificateConfigPtr(v *ClusterMasterAuthClientCertificateConfigArgs) ClusterMasterAuthClientCertificateConfigPtrInput {
	return (*clusterMasterAuthClientCertificateConfigPtrType)(v)
}

func (*clusterMasterAuthClientCertificateConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMasterAuthClientCertificateConfig)(nil)).Elem()
}

func (i *clusterMasterAuthClientCertificateConfigPtrType) ToClusterMasterAuthClientCertificateConfigPtrOutput() ClusterMasterAuthClientCertificateConfigPtrOutput {
	return i.ToClusterMasterAuthClientCertificateConfigPtrOutputWithContext(context.Background())
}

func (i *clusterMasterAuthClientCertificateConfigPtrType) ToClusterMasterAuthClientCertificateConfigPtrOutputWithContext(ctx context.Context) ClusterMasterAuthClientCertificateConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMasterAuthClientCertificateConfigPtrOutput)
}

type ClusterMasterAuthClientCertificateConfigOutput struct{ *pulumi.OutputState }

func (ClusterMasterAuthClientCertificateConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMasterAuthClientCertificateConfig)(nil)).Elem()
}

func (o ClusterMasterAuthClientCertificateConfigOutput) ToClusterMasterAuthClientCertificateConfigOutput() ClusterMasterAuthClientCertificateConfigOutput {
	return o
}

func (o ClusterMasterAuthClientCertificateConfigOutput) ToClusterMasterAuthClientCertificateConfigOutputWithContext(ctx context.Context) ClusterMasterAuthClientCertificateConfigOutput {
	return o
}

func (o ClusterMasterAuthClientCertificateConfigOutput) ToClusterMasterAuthClientCertificateConfigPtrOutput() ClusterMasterAuthClientCertificateConfigPtrOutput {
	return o.ToClusterMasterAuthClientCertificateConfigPtrOutputWithContext(context.Background())
}

func (o ClusterMasterAuthClientCertificateConfigOutput) ToClusterMasterAuthClientCertificateConfigPtrOutputWithContext(ctx context.Context) ClusterMasterAuthClientCertificateConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterMasterAuthClientCertificateConfig) *ClusterMasterAuthClientCertificateConfig {
		return &v
	}).(ClusterMasterAuthClientCertificateConfigPtrOutput)
}

// Whether client certificate authorization is enabled for this cluster.
func (o ClusterMasterAuthClientCertificateConfigOutput) IssueClientCertificate() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterMasterAuthClientCertificateConfig) bool { return v.IssueClientCertificate }).(pulumi.BoolOutput)
}

type ClusterMasterAuthClientCertificateConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterMasterAuthClientCertificateConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMasterAuthClientCertificateConfig)(nil)).Elem()
}

func (o ClusterMasterAuthClientCertificateConfigPtrOutput) ToClusterMasterAuthClientCertificateConfigPtrOutput() ClusterMasterAuthClientCertificateConfigPtrOutput {
	return o
}

func (o ClusterMasterAuthClientCertificateConfigPtrOutput) ToClusterMasterAuthClientCertificateConfigPtrOutputWithContext(ctx context.Context) ClusterMasterAuthClientCertificateConfigPtrOutput {
	return o
}

func (o ClusterMasterAuthClientCertificateConfigPtrOutput) Elem() ClusterMasterAuthClientCertificateConfigOutput {
	return o.ApplyT(func(v *ClusterMasterAuthClientCertificateConfig) ClusterMasterAuthClientCertificateConfig {
		if v != nil {
			return *v
		}
		var ret ClusterMasterAuthClientCertificateConfig
		return ret
	}).(ClusterMasterAuthClientCertificateConfigOutput)
}

// Whether client certificate authorization is enabled for this cluster.
func (o ClusterMasterAuthClientCertificateConfigPtrOutput) IssueClientCertificate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterMasterAuthClientCertificateConfig) *bool {
		if v == nil {
			return nil
		}
		return &v.IssueClientCertificate
	}).(pulumi.BoolPtrOutput)
}

type ClusterMasterAuthorizedNetworksConfig struct {
	// External networks that can access the
	// Kubernetes cluster master through HTTPS.
	CidrBlocks []ClusterMasterAuthorizedNetworksConfigCidrBlock `pulumi:"cidrBlocks"`
	// Whether Kubernetes master is
	// accessible via Google Compute Engine Public IPs.
	GcpPublicCidrsAccessEnabled *bool `pulumi:"gcpPublicCidrsAccessEnabled"`
}

// ClusterMasterAuthorizedNetworksConfigInput is an input type that accepts ClusterMasterAuthorizedNetworksConfigArgs and ClusterMasterAuthorizedNetworksConfigOutput values.
// You can construct a concrete instance of `ClusterMasterAuthorizedNetworksConfigInput` via:
//
//	ClusterMasterAuthorizedNetworksConfigArgs{...}
type ClusterMasterAuthorizedNetworksConfigInput interface {
	pulumi.Input

	ToClusterMasterAuthorizedNetworksConfigOutput() ClusterMasterAuthorizedNetworksConfigOutput
	ToClusterMasterAuthorizedNetworksConfigOutputWithContext(context.Context) ClusterMasterAuthorizedNetworksConfigOutput
}

type ClusterMasterAuthorizedNetworksConfigArgs struct {
	// External networks that can access the
	// Kubernetes cluster master through HTTPS.
	CidrBlocks ClusterMasterAuthorizedNetworksConfigCidrBlockArrayInput `pulumi:"cidrBlocks"`
	// Whether Kubernetes master is
	// accessible via Google Compute Engine Public IPs.
	GcpPublicCidrsAccessEnabled pulumi.BoolPtrInput `pulumi:"gcpPublicCidrsAccessEnabled"`
}

func (ClusterMasterAuthorizedNetworksConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMasterAuthorizedNetworksConfig)(nil)).Elem()
}

func (i ClusterMasterAuthorizedNetworksConfigArgs) ToClusterMasterAuthorizedNetworksConfigOutput() ClusterMasterAuthorizedNetworksConfigOutput {
	return i.ToClusterMasterAuthorizedNetworksConfigOutputWithContext(context.Background())
}

func (i ClusterMasterAuthorizedNetworksConfigArgs) ToClusterMasterAuthorizedNetworksConfigOutputWithContext(ctx context.Context) ClusterMasterAuthorizedNetworksConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMasterAuthorizedNetworksConfigOutput)
}

func (i ClusterMasterAuthorizedNetworksConfigArgs) ToClusterMasterAuthorizedNetworksConfigPtrOutput() ClusterMasterAuthorizedNetworksConfigPtrOutput {
	return i.ToClusterMasterAuthorizedNetworksConfigPtrOutputWithContext(context.Background())
}

func (i ClusterMasterAuthorizedNetworksConfigArgs) ToClusterMasterAuthorizedNetworksConfigPtrOutputWithContext(ctx context.Context) ClusterMasterAuthorizedNetworksConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMasterAuthorizedNetworksConfigOutput).ToClusterMasterAuthorizedNetworksConfigPtrOutputWithContext(ctx)
}

// ClusterMasterAuthorizedNetworksConfigPtrInput is an input type that accepts ClusterMasterAuthorizedNetworksConfigArgs, ClusterMasterAuthorizedNetworksConfigPtr and ClusterMasterAuthorizedNetworksConfigPtrOutput values.
// You can construct a concrete instance of `ClusterMasterAuthorizedNetworksConfigPtrInput` via:
//
//	        ClusterMasterAuthorizedNetworksConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterMasterAuthorizedNetworksConfigPtrInput interface {
	pulumi.Input

	ToClusterMasterAuthorizedNetworksConfigPtrOutput() ClusterMasterAuthorizedNetworksConfigPtrOutput
	ToClusterMasterAuthorizedNetworksConfigPtrOutputWithContext(context.Context) ClusterMasterAuthorizedNetworksConfigPtrOutput
}

type clusterMasterAuthorizedNetworksConfigPtrType ClusterMasterAuthorizedNetworksConfigArgs

func ClusterMasterAuthorizedNetworksConfigPtr(v *ClusterMasterAuthorizedNetworksConfigArgs) ClusterMasterAuthorizedNetworksConfigPtrInput {
	return (*clusterMasterAuthorizedNetworksConfigPtrType)(v)
}

func (*clusterMasterAuthorizedNetworksConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMasterAuthorizedNetworksConfig)(nil)).Elem()
}

func (i *clusterMasterAuthorizedNetworksConfigPtrType) ToClusterMasterAuthorizedNetworksConfigPtrOutput() ClusterMasterAuthorizedNetworksConfigPtrOutput {
	return i.ToClusterMasterAuthorizedNetworksConfigPtrOutputWithContext(context.Background())
}

func (i *clusterMasterAuthorizedNetworksConfigPtrType) ToClusterMasterAuthorizedNetworksConfigPtrOutputWithContext(ctx context.Context) ClusterMasterAuthorizedNetworksConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMasterAuthorizedNetworksConfigPtrOutput)
}

type ClusterMasterAuthorizedNetworksConfigOutput struct{ *pulumi.OutputState }

func (ClusterMasterAuthorizedNetworksConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMasterAuthorizedNetworksConfig)(nil)).Elem()
}

func (o ClusterMasterAuthorizedNetworksConfigOutput) ToClusterMasterAuthorizedNetworksConfigOutput() ClusterMasterAuthorizedNetworksConfigOutput {
	return o
}

func (o ClusterMasterAuthorizedNetworksConfigOutput) ToClusterMasterAuthorizedNetworksConfigOutputWithContext(ctx context.Context) ClusterMasterAuthorizedNetworksConfigOutput {
	return o
}

func (o ClusterMasterAuthorizedNetworksConfigOutput) ToClusterMasterAuthorizedNetworksConfigPtrOutput() ClusterMasterAuthorizedNetworksConfigPtrOutput {
	return o.ToClusterMasterAuthorizedNetworksConfigPtrOutputWithContext(context.Background())
}

func (o ClusterMasterAuthorizedNetworksConfigOutput) ToClusterMasterAuthorizedNetworksConfigPtrOutputWithContext(ctx context.Context) ClusterMasterAuthorizedNetworksConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterMasterAuthorizedNetworksConfig) *ClusterMasterAuthorizedNetworksConfig {
		return &v
	}).(ClusterMasterAuthorizedNetworksConfigPtrOutput)
}

// External networks that can access the
// Kubernetes cluster master through HTTPS.
func (o ClusterMasterAuthorizedNetworksConfigOutput) CidrBlocks() ClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput {
	return o.ApplyT(func(v ClusterMasterAuthorizedNetworksConfig) []ClusterMasterAuthorizedNetworksConfigCidrBlock {
		return v.CidrBlocks
	}).(ClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput)
}

// Whether Kubernetes master is
// accessible via Google Compute Engine Public IPs.
func (o ClusterMasterAuthorizedNetworksConfigOutput) GcpPublicCidrsAccessEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterMasterAuthorizedNetworksConfig) *bool { return v.GcpPublicCidrsAccessEnabled }).(pulumi.BoolPtrOutput)
}

type ClusterMasterAuthorizedNetworksConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterMasterAuthorizedNetworksConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMasterAuthorizedNetworksConfig)(nil)).Elem()
}

func (o ClusterMasterAuthorizedNetworksConfigPtrOutput) ToClusterMasterAuthorizedNetworksConfigPtrOutput() ClusterMasterAuthorizedNetworksConfigPtrOutput {
	return o
}

func (o ClusterMasterAuthorizedNetworksConfigPtrOutput) ToClusterMasterAuthorizedNetworksConfigPtrOutputWithContext(ctx context.Context) ClusterMasterAuthorizedNetworksConfigPtrOutput {
	return o
}

func (o ClusterMasterAuthorizedNetworksConfigPtrOutput) Elem() ClusterMasterAuthorizedNetworksConfigOutput {
	return o.ApplyT(func(v *ClusterMasterAuthorizedNetworksConfig) ClusterMasterAuthorizedNetworksConfig {
		if v != nil {
			return *v
		}
		var ret ClusterMasterAuthorizedNetworksConfig
		return ret
	}).(ClusterMasterAuthorizedNetworksConfigOutput)
}

// External networks that can access the
// Kubernetes cluster master through HTTPS.
func (o ClusterMasterAuthorizedNetworksConfigPtrOutput) CidrBlocks() ClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput {
	return o.ApplyT(func(v *ClusterMasterAuthorizedNetworksConfig) []ClusterMasterAuthorizedNetworksConfigCidrBlock {
		if v == nil {
			return nil
		}
		return v.CidrBlocks
	}).(ClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput)
}

// Whether Kubernetes master is
// accessible via Google Compute Engine Public IPs.
func (o ClusterMasterAuthorizedNetworksConfigPtrOutput) GcpPublicCidrsAccessEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterMasterAuthorizedNetworksConfig) *bool {
		if v == nil {
			return nil
		}
		return v.GcpPublicCidrsAccessEnabled
	}).(pulumi.BoolPtrOutput)
}

type ClusterMasterAuthorizedNetworksConfigCidrBlock struct {
	// External network that can access Kubernetes master through HTTPS.
	// Must be specified in CIDR notation.
	CidrBlock string `pulumi:"cidrBlock"`
	// Field for users to identify CIDR blocks.
	DisplayName *string `pulumi:"displayName"`
}

// ClusterMasterAuthorizedNetworksConfigCidrBlockInput is an input type that accepts ClusterMasterAuthorizedNetworksConfigCidrBlockArgs and ClusterMasterAuthorizedNetworksConfigCidrBlockOutput values.
// You can construct a concrete instance of `ClusterMasterAuthorizedNetworksConfigCidrBlockInput` via:
//
//	ClusterMasterAuthorizedNetworksConfigCidrBlockArgs{...}
type ClusterMasterAuthorizedNetworksConfigCidrBlockInput interface {
	pulumi.Input

	ToClusterMasterAuthorizedNetworksConfigCidrBlockOutput() ClusterMasterAuthorizedNetworksConfigCidrBlockOutput
	ToClusterMasterAuthorizedNetworksConfigCidrBlockOutputWithContext(context.Context) ClusterMasterAuthorizedNetworksConfigCidrBlockOutput
}

type ClusterMasterAuthorizedNetworksConfigCidrBlockArgs struct {
	// External network that can access Kubernetes master through HTTPS.
	// Must be specified in CIDR notation.
	CidrBlock pulumi.StringInput `pulumi:"cidrBlock"`
	// Field for users to identify CIDR blocks.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
}

func (ClusterMasterAuthorizedNetworksConfigCidrBlockArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMasterAuthorizedNetworksConfigCidrBlock)(nil)).Elem()
}

func (i ClusterMasterAuthorizedNetworksConfigCidrBlockArgs) ToClusterMasterAuthorizedNetworksConfigCidrBlockOutput() ClusterMasterAuthorizedNetworksConfigCidrBlockOutput {
	return i.ToClusterMasterAuthorizedNetworksConfigCidrBlockOutputWithContext(context.Background())
}

func (i ClusterMasterAuthorizedNetworksConfigCidrBlockArgs) ToClusterMasterAuthorizedNetworksConfigCidrBlockOutputWithContext(ctx context.Context) ClusterMasterAuthorizedNetworksConfigCidrBlockOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMasterAuthorizedNetworksConfigCidrBlockOutput)
}

// ClusterMasterAuthorizedNetworksConfigCidrBlockArrayInput is an input type that accepts ClusterMasterAuthorizedNetworksConfigCidrBlockArray and ClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput values.
// You can construct a concrete instance of `ClusterMasterAuthorizedNetworksConfigCidrBlockArrayInput` via:
//
//	ClusterMasterAuthorizedNetworksConfigCidrBlockArray{ ClusterMasterAuthorizedNetworksConfigCidrBlockArgs{...} }
type ClusterMasterAuthorizedNetworksConfigCidrBlockArrayInput interface {
	pulumi.Input

	ToClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput() ClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput
	ToClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutputWithContext(context.Context) ClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput
}

type ClusterMasterAuthorizedNetworksConfigCidrBlockArray []ClusterMasterAuthorizedNetworksConfigCidrBlockInput

func (ClusterMasterAuthorizedNetworksConfigCidrBlockArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterMasterAuthorizedNetworksConfigCidrBlock)(nil)).Elem()
}

func (i ClusterMasterAuthorizedNetworksConfigCidrBlockArray) ToClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput() ClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput {
	return i.ToClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutputWithContext(context.Background())
}

func (i ClusterMasterAuthorizedNetworksConfigCidrBlockArray) ToClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutputWithContext(ctx context.Context) ClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput)
}

type ClusterMasterAuthorizedNetworksConfigCidrBlockOutput struct{ *pulumi.OutputState }

func (ClusterMasterAuthorizedNetworksConfigCidrBlockOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMasterAuthorizedNetworksConfigCidrBlock)(nil)).Elem()
}

func (o ClusterMasterAuthorizedNetworksConfigCidrBlockOutput) ToClusterMasterAuthorizedNetworksConfigCidrBlockOutput() ClusterMasterAuthorizedNetworksConfigCidrBlockOutput {
	return o
}

func (o ClusterMasterAuthorizedNetworksConfigCidrBlockOutput) ToClusterMasterAuthorizedNetworksConfigCidrBlockOutputWithContext(ctx context.Context) ClusterMasterAuthorizedNetworksConfigCidrBlockOutput {
	return o
}

// External network that can access Kubernetes master through HTTPS.
// Must be specified in CIDR notation.
func (o ClusterMasterAuthorizedNetworksConfigCidrBlockOutput) CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterMasterAuthorizedNetworksConfigCidrBlock) string { return v.CidrBlock }).(pulumi.StringOutput)
}

// Field for users to identify CIDR blocks.
func (o ClusterMasterAuthorizedNetworksConfigCidrBlockOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMasterAuthorizedNetworksConfigCidrBlock) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

type ClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput struct{ *pulumi.OutputState }

func (ClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterMasterAuthorizedNetworksConfigCidrBlock)(nil)).Elem()
}

func (o ClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput) ToClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput() ClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput {
	return o
}

func (o ClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput) ToClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutputWithContext(ctx context.Context) ClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput {
	return o
}

func (o ClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput) Index(i pulumi.IntInput) ClusterMasterAuthorizedNetworksConfigCidrBlockOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterMasterAuthorizedNetworksConfigCidrBlock {
		return vs[0].([]ClusterMasterAuthorizedNetworksConfigCidrBlock)[vs[1].(int)]
	}).(ClusterMasterAuthorizedNetworksConfigCidrBlockOutput)
}

type ClusterMeshCertificates struct {
	// Controls the issuance of workload mTLS certificates. It is enabled by default. Workload Identity is required, see workload_config.
	EnableCertificates bool `pulumi:"enableCertificates"`
}

// ClusterMeshCertificatesInput is an input type that accepts ClusterMeshCertificatesArgs and ClusterMeshCertificatesOutput values.
// You can construct a concrete instance of `ClusterMeshCertificatesInput` via:
//
//	ClusterMeshCertificatesArgs{...}
type ClusterMeshCertificatesInput interface {
	pulumi.Input

	ToClusterMeshCertificatesOutput() ClusterMeshCertificatesOutput
	ToClusterMeshCertificatesOutputWithContext(context.Context) ClusterMeshCertificatesOutput
}

type ClusterMeshCertificatesArgs struct {
	// Controls the issuance of workload mTLS certificates. It is enabled by default. Workload Identity is required, see workload_config.
	EnableCertificates pulumi.BoolInput `pulumi:"enableCertificates"`
}

func (ClusterMeshCertificatesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMeshCertificates)(nil)).Elem()
}

func (i ClusterMeshCertificatesArgs) ToClusterMeshCertificatesOutput() ClusterMeshCertificatesOutput {
	return i.ToClusterMeshCertificatesOutputWithContext(context.Background())
}

func (i ClusterMeshCertificatesArgs) ToClusterMeshCertificatesOutputWithContext(ctx context.Context) ClusterMeshCertificatesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMeshCertificatesOutput)
}

func (i ClusterMeshCertificatesArgs) ToClusterMeshCertificatesPtrOutput() ClusterMeshCertificatesPtrOutput {
	return i.ToClusterMeshCertificatesPtrOutputWithContext(context.Background())
}

func (i ClusterMeshCertificatesArgs) ToClusterMeshCertificatesPtrOutputWithContext(ctx context.Context) ClusterMeshCertificatesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMeshCertificatesOutput).ToClusterMeshCertificatesPtrOutputWithContext(ctx)
}

// ClusterMeshCertificatesPtrInput is an input type that accepts ClusterMeshCertificatesArgs, ClusterMeshCertificatesPtr and ClusterMeshCertificatesPtrOutput values.
// You can construct a concrete instance of `ClusterMeshCertificatesPtrInput` via:
//
//	        ClusterMeshCertificatesArgs{...}
//
//	or:
//
//	        nil
type ClusterMeshCertificatesPtrInput interface {
	pulumi.Input

	ToClusterMeshCertificatesPtrOutput() ClusterMeshCertificatesPtrOutput
	ToClusterMeshCertificatesPtrOutputWithContext(context.Context) ClusterMeshCertificatesPtrOutput
}

type clusterMeshCertificatesPtrType ClusterMeshCertificatesArgs

func ClusterMeshCertificatesPtr(v *ClusterMeshCertificatesArgs) ClusterMeshCertificatesPtrInput {
	return (*clusterMeshCertificatesPtrType)(v)
}

func (*clusterMeshCertificatesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMeshCertificates)(nil)).Elem()
}

func (i *clusterMeshCertificatesPtrType) ToClusterMeshCertificatesPtrOutput() ClusterMeshCertificatesPtrOutput {
	return i.ToClusterMeshCertificatesPtrOutputWithContext(context.Background())
}

func (i *clusterMeshCertificatesPtrType) ToClusterMeshCertificatesPtrOutputWithContext(ctx context.Context) ClusterMeshCertificatesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMeshCertificatesPtrOutput)
}

type ClusterMeshCertificatesOutput struct{ *pulumi.OutputState }

func (ClusterMeshCertificatesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMeshCertificates)(nil)).Elem()
}

func (o ClusterMeshCertificatesOutput) ToClusterMeshCertificatesOutput() ClusterMeshCertificatesOutput {
	return o
}

func (o ClusterMeshCertificatesOutput) ToClusterMeshCertificatesOutputWithContext(ctx context.Context) ClusterMeshCertificatesOutput {
	return o
}

func (o ClusterMeshCertificatesOutput) ToClusterMeshCertificatesPtrOutput() ClusterMeshCertificatesPtrOutput {
	return o.ToClusterMeshCertificatesPtrOutputWithContext(context.Background())
}

func (o ClusterMeshCertificatesOutput) ToClusterMeshCertificatesPtrOutputWithContext(ctx context.Context) ClusterMeshCertificatesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterMeshCertificates) *ClusterMeshCertificates {
		return &v
	}).(ClusterMeshCertificatesPtrOutput)
}

// Controls the issuance of workload mTLS certificates. It is enabled by default. Workload Identity is required, see workload_config.
func (o ClusterMeshCertificatesOutput) EnableCertificates() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterMeshCertificates) bool { return v.EnableCertificates }).(pulumi.BoolOutput)
}

type ClusterMeshCertificatesPtrOutput struct{ *pulumi.OutputState }

func (ClusterMeshCertificatesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMeshCertificates)(nil)).Elem()
}

func (o ClusterMeshCertificatesPtrOutput) ToClusterMeshCertificatesPtrOutput() ClusterMeshCertificatesPtrOutput {
	return o
}

func (o ClusterMeshCertificatesPtrOutput) ToClusterMeshCertificatesPtrOutputWithContext(ctx context.Context) ClusterMeshCertificatesPtrOutput {
	return o
}

func (o ClusterMeshCertificatesPtrOutput) Elem() ClusterMeshCertificatesOutput {
	return o.ApplyT(func(v *ClusterMeshCertificates) ClusterMeshCertificates {
		if v != nil {
			return *v
		}
		var ret ClusterMeshCertificates
		return ret
	}).(ClusterMeshCertificatesOutput)
}

// Controls the issuance of workload mTLS certificates. It is enabled by default. Workload Identity is required, see workload_config.
func (o ClusterMeshCertificatesPtrOutput) EnableCertificates() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterMeshCertificates) *bool {
		if v == nil {
			return nil
		}
		return &v.EnableCertificates
	}).(pulumi.BoolPtrOutput)
}

type ClusterMonitoringConfig struct {
	// Configuration for Advanced Datapath Monitoring. Structure is documented below.
	AdvancedDatapathObservabilityConfigs []ClusterMonitoringConfigAdvancedDatapathObservabilityConfig `pulumi:"advancedDatapathObservabilityConfigs"`
	// The GKE components exposing metrics. Supported values include: `SYSTEM_COMPONENTS`, `APISERVER`, `SCHEDULER`, `CONTROLLER_MANAGER`, `STORAGE`, `HPA`, `POD`, `DAEMONSET`, `DEPLOYMENT` and `STATEFULSET`. In beta provider, `WORKLOADS` is supported on top of those 10 values. (`WORKLOADS` is deprecated and removed in GKE 1.24.)
	EnableComponents []string `pulumi:"enableComponents"`
	// Configuration for Managed Service for Prometheus. Structure is documented below.
	ManagedPrometheus *ClusterMonitoringConfigManagedPrometheus `pulumi:"managedPrometheus"`
}

// ClusterMonitoringConfigInput is an input type that accepts ClusterMonitoringConfigArgs and ClusterMonitoringConfigOutput values.
// You can construct a concrete instance of `ClusterMonitoringConfigInput` via:
//
//	ClusterMonitoringConfigArgs{...}
type ClusterMonitoringConfigInput interface {
	pulumi.Input

	ToClusterMonitoringConfigOutput() ClusterMonitoringConfigOutput
	ToClusterMonitoringConfigOutputWithContext(context.Context) ClusterMonitoringConfigOutput
}

type ClusterMonitoringConfigArgs struct {
	// Configuration for Advanced Datapath Monitoring. Structure is documented below.
	AdvancedDatapathObservabilityConfigs ClusterMonitoringConfigAdvancedDatapathObservabilityConfigArrayInput `pulumi:"advancedDatapathObservabilityConfigs"`
	// The GKE components exposing metrics. Supported values include: `SYSTEM_COMPONENTS`, `APISERVER`, `SCHEDULER`, `CONTROLLER_MANAGER`, `STORAGE`, `HPA`, `POD`, `DAEMONSET`, `DEPLOYMENT` and `STATEFULSET`. In beta provider, `WORKLOADS` is supported on top of those 10 values. (`WORKLOADS` is deprecated and removed in GKE 1.24.)
	EnableComponents pulumi.StringArrayInput `pulumi:"enableComponents"`
	// Configuration for Managed Service for Prometheus. Structure is documented below.
	ManagedPrometheus ClusterMonitoringConfigManagedPrometheusPtrInput `pulumi:"managedPrometheus"`
}

func (ClusterMonitoringConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMonitoringConfig)(nil)).Elem()
}

func (i ClusterMonitoringConfigArgs) ToClusterMonitoringConfigOutput() ClusterMonitoringConfigOutput {
	return i.ToClusterMonitoringConfigOutputWithContext(context.Background())
}

func (i ClusterMonitoringConfigArgs) ToClusterMonitoringConfigOutputWithContext(ctx context.Context) ClusterMonitoringConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMonitoringConfigOutput)
}

func (i ClusterMonitoringConfigArgs) ToClusterMonitoringConfigPtrOutput() ClusterMonitoringConfigPtrOutput {
	return i.ToClusterMonitoringConfigPtrOutputWithContext(context.Background())
}

func (i ClusterMonitoringConfigArgs) ToClusterMonitoringConfigPtrOutputWithContext(ctx context.Context) ClusterMonitoringConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMonitoringConfigOutput).ToClusterMonitoringConfigPtrOutputWithContext(ctx)
}

// ClusterMonitoringConfigPtrInput is an input type that accepts ClusterMonitoringConfigArgs, ClusterMonitoringConfigPtr and ClusterMonitoringConfigPtrOutput values.
// You can construct a concrete instance of `ClusterMonitoringConfigPtrInput` via:
//
//	        ClusterMonitoringConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterMonitoringConfigPtrInput interface {
	pulumi.Input

	ToClusterMonitoringConfigPtrOutput() ClusterMonitoringConfigPtrOutput
	ToClusterMonitoringConfigPtrOutputWithContext(context.Context) ClusterMonitoringConfigPtrOutput
}

type clusterMonitoringConfigPtrType ClusterMonitoringConfigArgs

func ClusterMonitoringConfigPtr(v *ClusterMonitoringConfigArgs) ClusterMonitoringConfigPtrInput {
	return (*clusterMonitoringConfigPtrType)(v)
}

func (*clusterMonitoringConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMonitoringConfig)(nil)).Elem()
}

func (i *clusterMonitoringConfigPtrType) ToClusterMonitoringConfigPtrOutput() ClusterMonitoringConfigPtrOutput {
	return i.ToClusterMonitoringConfigPtrOutputWithContext(context.Background())
}

func (i *clusterMonitoringConfigPtrType) ToClusterMonitoringConfigPtrOutputWithContext(ctx context.Context) ClusterMonitoringConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMonitoringConfigPtrOutput)
}

type ClusterMonitoringConfigOutput struct{ *pulumi.OutputState }

func (ClusterMonitoringConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMonitoringConfig)(nil)).Elem()
}

func (o ClusterMonitoringConfigOutput) ToClusterMonitoringConfigOutput() ClusterMonitoringConfigOutput {
	return o
}

func (o ClusterMonitoringConfigOutput) ToClusterMonitoringConfigOutputWithContext(ctx context.Context) ClusterMonitoringConfigOutput {
	return o
}

func (o ClusterMonitoringConfigOutput) ToClusterMonitoringConfigPtrOutput() ClusterMonitoringConfigPtrOutput {
	return o.ToClusterMonitoringConfigPtrOutputWithContext(context.Background())
}

func (o ClusterMonitoringConfigOutput) ToClusterMonitoringConfigPtrOutputWithContext(ctx context.Context) ClusterMonitoringConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterMonitoringConfig) *ClusterMonitoringConfig {
		return &v
	}).(ClusterMonitoringConfigPtrOutput)
}

// Configuration for Advanced Datapath Monitoring. Structure is documented below.
func (o ClusterMonitoringConfigOutput) AdvancedDatapathObservabilityConfigs() ClusterMonitoringConfigAdvancedDatapathObservabilityConfigArrayOutput {
	return o.ApplyT(func(v ClusterMonitoringConfig) []ClusterMonitoringConfigAdvancedDatapathObservabilityConfig {
		return v.AdvancedDatapathObservabilityConfigs
	}).(ClusterMonitoringConfigAdvancedDatapathObservabilityConfigArrayOutput)
}

// The GKE components exposing metrics. Supported values include: `SYSTEM_COMPONENTS`, `APISERVER`, `SCHEDULER`, `CONTROLLER_MANAGER`, `STORAGE`, `HPA`, `POD`, `DAEMONSET`, `DEPLOYMENT` and `STATEFULSET`. In beta provider, `WORKLOADS` is supported on top of those 10 values. (`WORKLOADS` is deprecated and removed in GKE 1.24.)
func (o ClusterMonitoringConfigOutput) EnableComponents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterMonitoringConfig) []string { return v.EnableComponents }).(pulumi.StringArrayOutput)
}

// Configuration for Managed Service for Prometheus. Structure is documented below.
func (o ClusterMonitoringConfigOutput) ManagedPrometheus() ClusterMonitoringConfigManagedPrometheusPtrOutput {
	return o.ApplyT(func(v ClusterMonitoringConfig) *ClusterMonitoringConfigManagedPrometheus { return v.ManagedPrometheus }).(ClusterMonitoringConfigManagedPrometheusPtrOutput)
}

type ClusterMonitoringConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterMonitoringConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMonitoringConfig)(nil)).Elem()
}

func (o ClusterMonitoringConfigPtrOutput) ToClusterMonitoringConfigPtrOutput() ClusterMonitoringConfigPtrOutput {
	return o
}

func (o ClusterMonitoringConfigPtrOutput) ToClusterMonitoringConfigPtrOutputWithContext(ctx context.Context) ClusterMonitoringConfigPtrOutput {
	return o
}

func (o ClusterMonitoringConfigPtrOutput) Elem() ClusterMonitoringConfigOutput {
	return o.ApplyT(func(v *ClusterMonitoringConfig) ClusterMonitoringConfig {
		if v != nil {
			return *v
		}
		var ret ClusterMonitoringConfig
		return ret
	}).(ClusterMonitoringConfigOutput)
}

// Configuration for Advanced Datapath Monitoring. Structure is documented below.
func (o ClusterMonitoringConfigPtrOutput) AdvancedDatapathObservabilityConfigs() ClusterMonitoringConfigAdvancedDatapathObservabilityConfigArrayOutput {
	return o.ApplyT(func(v *ClusterMonitoringConfig) []ClusterMonitoringConfigAdvancedDatapathObservabilityConfig {
		if v == nil {
			return nil
		}
		return v.AdvancedDatapathObservabilityConfigs
	}).(ClusterMonitoringConfigAdvancedDatapathObservabilityConfigArrayOutput)
}

// The GKE components exposing metrics. Supported values include: `SYSTEM_COMPONENTS`, `APISERVER`, `SCHEDULER`, `CONTROLLER_MANAGER`, `STORAGE`, `HPA`, `POD`, `DAEMONSET`, `DEPLOYMENT` and `STATEFULSET`. In beta provider, `WORKLOADS` is supported on top of those 10 values. (`WORKLOADS` is deprecated and removed in GKE 1.24.)
func (o ClusterMonitoringConfigPtrOutput) EnableComponents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterMonitoringConfig) []string {
		if v == nil {
			return nil
		}
		return v.EnableComponents
	}).(pulumi.StringArrayOutput)
}

// Configuration for Managed Service for Prometheus. Structure is documented below.
func (o ClusterMonitoringConfigPtrOutput) ManagedPrometheus() ClusterMonitoringConfigManagedPrometheusPtrOutput {
	return o.ApplyT(func(v *ClusterMonitoringConfig) *ClusterMonitoringConfigManagedPrometheus {
		if v == nil {
			return nil
		}
		return v.ManagedPrometheus
	}).(ClusterMonitoringConfigManagedPrometheusPtrOutput)
}

type ClusterMonitoringConfigAdvancedDatapathObservabilityConfig struct {
	// Whether or not to enable advanced datapath metrics.
	EnableMetrics bool `pulumi:"enableMetrics"`
	// Whether or not Relay is enabled.
	EnableRelay *bool `pulumi:"enableRelay"`
	// Mode used to make Relay available.
	//
	// Deprecated: Deprecated in favor of enableRelay field. Remove this attribute's configuration as this field will be removed in the next major release and enableRelay will become a required field.
	RelayMode *string `pulumi:"relayMode"`
}

// ClusterMonitoringConfigAdvancedDatapathObservabilityConfigInput is an input type that accepts ClusterMonitoringConfigAdvancedDatapathObservabilityConfigArgs and ClusterMonitoringConfigAdvancedDatapathObservabilityConfigOutput values.
// You can construct a concrete instance of `ClusterMonitoringConfigAdvancedDatapathObservabilityConfigInput` via:
//
//	ClusterMonitoringConfigAdvancedDatapathObservabilityConfigArgs{...}
type ClusterMonitoringConfigAdvancedDatapathObservabilityConfigInput interface {
	pulumi.Input

	ToClusterMonitoringConfigAdvancedDatapathObservabilityConfigOutput() ClusterMonitoringConfigAdvancedDatapathObservabilityConfigOutput
	ToClusterMonitoringConfigAdvancedDatapathObservabilityConfigOutputWithContext(context.Context) ClusterMonitoringConfigAdvancedDatapathObservabilityConfigOutput
}

type ClusterMonitoringConfigAdvancedDatapathObservabilityConfigArgs struct {
	// Whether or not to enable advanced datapath metrics.
	EnableMetrics pulumi.BoolInput `pulumi:"enableMetrics"`
	// Whether or not Relay is enabled.
	EnableRelay pulumi.BoolPtrInput `pulumi:"enableRelay"`
	// Mode used to make Relay available.
	//
	// Deprecated: Deprecated in favor of enableRelay field. Remove this attribute's configuration as this field will be removed in the next major release and enableRelay will become a required field.
	RelayMode pulumi.StringPtrInput `pulumi:"relayMode"`
}

func (ClusterMonitoringConfigAdvancedDatapathObservabilityConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMonitoringConfigAdvancedDatapathObservabilityConfig)(nil)).Elem()
}

func (i ClusterMonitoringConfigAdvancedDatapathObservabilityConfigArgs) ToClusterMonitoringConfigAdvancedDatapathObservabilityConfigOutput() ClusterMonitoringConfigAdvancedDatapathObservabilityConfigOutput {
	return i.ToClusterMonitoringConfigAdvancedDatapathObservabilityConfigOutputWithContext(context.Background())
}

func (i ClusterMonitoringConfigAdvancedDatapathObservabilityConfigArgs) ToClusterMonitoringConfigAdvancedDatapathObservabilityConfigOutputWithContext(ctx context.Context) ClusterMonitoringConfigAdvancedDatapathObservabilityConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMonitoringConfigAdvancedDatapathObservabilityConfigOutput)
}

// ClusterMonitoringConfigAdvancedDatapathObservabilityConfigArrayInput is an input type that accepts ClusterMonitoringConfigAdvancedDatapathObservabilityConfigArray and ClusterMonitoringConfigAdvancedDatapathObservabilityConfigArrayOutput values.
// You can construct a concrete instance of `ClusterMonitoringConfigAdvancedDatapathObservabilityConfigArrayInput` via:
//
//	ClusterMonitoringConfigAdvancedDatapathObservabilityConfigArray{ ClusterMonitoringConfigAdvancedDatapathObservabilityConfigArgs{...} }
type ClusterMonitoringConfigAdvancedDatapathObservabilityConfigArrayInput interface {
	pulumi.Input

	ToClusterMonitoringConfigAdvancedDatapathObservabilityConfigArrayOutput() ClusterMonitoringConfigAdvancedDatapathObservabilityConfigArrayOutput
	ToClusterMonitoringConfigAdvancedDatapathObservabilityConfigArrayOutputWithContext(context.Context) ClusterMonitoringConfigAdvancedDatapathObservabilityConfigArrayOutput
}

type ClusterMonitoringConfigAdvancedDatapathObservabilityConfigArray []ClusterMonitoringConfigAdvancedDatapathObservabilityConfigInput

func (ClusterMonitoringConfigAdvancedDatapathObservabilityConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterMonitoringConfigAdvancedDatapathObservabilityConfig)(nil)).Elem()
}

func (i ClusterMonitoringConfigAdvancedDatapathObservabilityConfigArray) ToClusterMonitoringConfigAdvancedDatapathObservabilityConfigArrayOutput() ClusterMonitoringConfigAdvancedDatapathObservabilityConfigArrayOutput {
	return i.ToClusterMonitoringConfigAdvancedDatapathObservabilityConfigArrayOutputWithContext(context.Background())
}

func (i ClusterMonitoringConfigAdvancedDatapathObservabilityConfigArray) ToClusterMonitoringConfigAdvancedDatapathObservabilityConfigArrayOutputWithContext(ctx context.Context) ClusterMonitoringConfigAdvancedDatapathObservabilityConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMonitoringConfigAdvancedDatapathObservabilityConfigArrayOutput)
}

type ClusterMonitoringConfigAdvancedDatapathObservabilityConfigOutput struct{ *pulumi.OutputState }

func (ClusterMonitoringConfigAdvancedDatapathObservabilityConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMonitoringConfigAdvancedDatapathObservabilityConfig)(nil)).Elem()
}

func (o ClusterMonitoringConfigAdvancedDatapathObservabilityConfigOutput) ToClusterMonitoringConfigAdvancedDatapathObservabilityConfigOutput() ClusterMonitoringConfigAdvancedDatapathObservabilityConfigOutput {
	return o
}

func (o ClusterMonitoringConfigAdvancedDatapathObservabilityConfigOutput) ToClusterMonitoringConfigAdvancedDatapathObservabilityConfigOutputWithContext(ctx context.Context) ClusterMonitoringConfigAdvancedDatapathObservabilityConfigOutput {
	return o
}

// Whether or not to enable advanced datapath metrics.
func (o ClusterMonitoringConfigAdvancedDatapathObservabilityConfigOutput) EnableMetrics() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterMonitoringConfigAdvancedDatapathObservabilityConfig) bool { return v.EnableMetrics }).(pulumi.BoolOutput)
}

// Whether or not Relay is enabled.
func (o ClusterMonitoringConfigAdvancedDatapathObservabilityConfigOutput) EnableRelay() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterMonitoringConfigAdvancedDatapathObservabilityConfig) *bool { return v.EnableRelay }).(pulumi.BoolPtrOutput)
}

// Mode used to make Relay available.
//
// Deprecated: Deprecated in favor of enableRelay field. Remove this attribute's configuration as this field will be removed in the next major release and enableRelay will become a required field.
func (o ClusterMonitoringConfigAdvancedDatapathObservabilityConfigOutput) RelayMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMonitoringConfigAdvancedDatapathObservabilityConfig) *string { return v.RelayMode }).(pulumi.StringPtrOutput)
}

type ClusterMonitoringConfigAdvancedDatapathObservabilityConfigArrayOutput struct{ *pulumi.OutputState }

func (ClusterMonitoringConfigAdvancedDatapathObservabilityConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterMonitoringConfigAdvancedDatapathObservabilityConfig)(nil)).Elem()
}

func (o ClusterMonitoringConfigAdvancedDatapathObservabilityConfigArrayOutput) ToClusterMonitoringConfigAdvancedDatapathObservabilityConfigArrayOutput() ClusterMonitoringConfigAdvancedDatapathObservabilityConfigArrayOutput {
	return o
}

func (o ClusterMonitoringConfigAdvancedDatapathObservabilityConfigArrayOutput) ToClusterMonitoringConfigAdvancedDatapathObservabilityConfigArrayOutputWithContext(ctx context.Context) ClusterMonitoringConfigAdvancedDatapathObservabilityConfigArrayOutput {
	return o
}

func (o ClusterMonitoringConfigAdvancedDatapathObservabilityConfigArrayOutput) Index(i pulumi.IntInput) ClusterMonitoringConfigAdvancedDatapathObservabilityConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterMonitoringConfigAdvancedDatapathObservabilityConfig {
		return vs[0].([]ClusterMonitoringConfigAdvancedDatapathObservabilityConfig)[vs[1].(int)]
	}).(ClusterMonitoringConfigAdvancedDatapathObservabilityConfigOutput)
}

type ClusterMonitoringConfigManagedPrometheus struct {
	// Whether or not the managed collection is enabled.
	Enabled bool `pulumi:"enabled"`
}

// ClusterMonitoringConfigManagedPrometheusInput is an input type that accepts ClusterMonitoringConfigManagedPrometheusArgs and ClusterMonitoringConfigManagedPrometheusOutput values.
// You can construct a concrete instance of `ClusterMonitoringConfigManagedPrometheusInput` via:
//
//	ClusterMonitoringConfigManagedPrometheusArgs{...}
type ClusterMonitoringConfigManagedPrometheusInput interface {
	pulumi.Input

	ToClusterMonitoringConfigManagedPrometheusOutput() ClusterMonitoringConfigManagedPrometheusOutput
	ToClusterMonitoringConfigManagedPrometheusOutputWithContext(context.Context) ClusterMonitoringConfigManagedPrometheusOutput
}

type ClusterMonitoringConfigManagedPrometheusArgs struct {
	// Whether or not the managed collection is enabled.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (ClusterMonitoringConfigManagedPrometheusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMonitoringConfigManagedPrometheus)(nil)).Elem()
}

func (i ClusterMonitoringConfigManagedPrometheusArgs) ToClusterMonitoringConfigManagedPrometheusOutput() ClusterMonitoringConfigManagedPrometheusOutput {
	return i.ToClusterMonitoringConfigManagedPrometheusOutputWithContext(context.Background())
}

func (i ClusterMonitoringConfigManagedPrometheusArgs) ToClusterMonitoringConfigManagedPrometheusOutputWithContext(ctx context.Context) ClusterMonitoringConfigManagedPrometheusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMonitoringConfigManagedPrometheusOutput)
}

func (i ClusterMonitoringConfigManagedPrometheusArgs) ToClusterMonitoringConfigManagedPrometheusPtrOutput() ClusterMonitoringConfigManagedPrometheusPtrOutput {
	return i.ToClusterMonitoringConfigManagedPrometheusPtrOutputWithContext(context.Background())
}

func (i ClusterMonitoringConfigManagedPrometheusArgs) ToClusterMonitoringConfigManagedPrometheusPtrOutputWithContext(ctx context.Context) ClusterMonitoringConfigManagedPrometheusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMonitoringConfigManagedPrometheusOutput).ToClusterMonitoringConfigManagedPrometheusPtrOutputWithContext(ctx)
}

// ClusterMonitoringConfigManagedPrometheusPtrInput is an input type that accepts ClusterMonitoringConfigManagedPrometheusArgs, ClusterMonitoringConfigManagedPrometheusPtr and ClusterMonitoringConfigManagedPrometheusPtrOutput values.
// You can construct a concrete instance of `ClusterMonitoringConfigManagedPrometheusPtrInput` via:
//
//	        ClusterMonitoringConfigManagedPrometheusArgs{...}
//
//	or:
//
//	        nil
type ClusterMonitoringConfigManagedPrometheusPtrInput interface {
	pulumi.Input

	ToClusterMonitoringConfigManagedPrometheusPtrOutput() ClusterMonitoringConfigManagedPrometheusPtrOutput
	ToClusterMonitoringConfigManagedPrometheusPtrOutputWithContext(context.Context) ClusterMonitoringConfigManagedPrometheusPtrOutput
}

type clusterMonitoringConfigManagedPrometheusPtrType ClusterMonitoringConfigManagedPrometheusArgs

func ClusterMonitoringConfigManagedPrometheusPtr(v *ClusterMonitoringConfigManagedPrometheusArgs) ClusterMonitoringConfigManagedPrometheusPtrInput {
	return (*clusterMonitoringConfigManagedPrometheusPtrType)(v)
}

func (*clusterMonitoringConfigManagedPrometheusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMonitoringConfigManagedPrometheus)(nil)).Elem()
}

func (i *clusterMonitoringConfigManagedPrometheusPtrType) ToClusterMonitoringConfigManagedPrometheusPtrOutput() ClusterMonitoringConfigManagedPrometheusPtrOutput {
	return i.ToClusterMonitoringConfigManagedPrometheusPtrOutputWithContext(context.Background())
}

func (i *clusterMonitoringConfigManagedPrometheusPtrType) ToClusterMonitoringConfigManagedPrometheusPtrOutputWithContext(ctx context.Context) ClusterMonitoringConfigManagedPrometheusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMonitoringConfigManagedPrometheusPtrOutput)
}

type ClusterMonitoringConfigManagedPrometheusOutput struct{ *pulumi.OutputState }

func (ClusterMonitoringConfigManagedPrometheusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMonitoringConfigManagedPrometheus)(nil)).Elem()
}

func (o ClusterMonitoringConfigManagedPrometheusOutput) ToClusterMonitoringConfigManagedPrometheusOutput() ClusterMonitoringConfigManagedPrometheusOutput {
	return o
}

func (o ClusterMonitoringConfigManagedPrometheusOutput) ToClusterMonitoringConfigManagedPrometheusOutputWithContext(ctx context.Context) ClusterMonitoringConfigManagedPrometheusOutput {
	return o
}

func (o ClusterMonitoringConfigManagedPrometheusOutput) ToClusterMonitoringConfigManagedPrometheusPtrOutput() ClusterMonitoringConfigManagedPrometheusPtrOutput {
	return o.ToClusterMonitoringConfigManagedPrometheusPtrOutputWithContext(context.Background())
}

func (o ClusterMonitoringConfigManagedPrometheusOutput) ToClusterMonitoringConfigManagedPrometheusPtrOutputWithContext(ctx context.Context) ClusterMonitoringConfigManagedPrometheusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterMonitoringConfigManagedPrometheus) *ClusterMonitoringConfigManagedPrometheus {
		return &v
	}).(ClusterMonitoringConfigManagedPrometheusPtrOutput)
}

// Whether or not the managed collection is enabled.
func (o ClusterMonitoringConfigManagedPrometheusOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterMonitoringConfigManagedPrometheus) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type ClusterMonitoringConfigManagedPrometheusPtrOutput struct{ *pulumi.OutputState }

func (ClusterMonitoringConfigManagedPrometheusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMonitoringConfigManagedPrometheus)(nil)).Elem()
}

func (o ClusterMonitoringConfigManagedPrometheusPtrOutput) ToClusterMonitoringConfigManagedPrometheusPtrOutput() ClusterMonitoringConfigManagedPrometheusPtrOutput {
	return o
}

func (o ClusterMonitoringConfigManagedPrometheusPtrOutput) ToClusterMonitoringConfigManagedPrometheusPtrOutputWithContext(ctx context.Context) ClusterMonitoringConfigManagedPrometheusPtrOutput {
	return o
}

func (o ClusterMonitoringConfigManagedPrometheusPtrOutput) Elem() ClusterMonitoringConfigManagedPrometheusOutput {
	return o.ApplyT(func(v *ClusterMonitoringConfigManagedPrometheus) ClusterMonitoringConfigManagedPrometheus {
		if v != nil {
			return *v
		}
		var ret ClusterMonitoringConfigManagedPrometheus
		return ret
	}).(ClusterMonitoringConfigManagedPrometheusOutput)
}

// Whether or not the managed collection is enabled.
func (o ClusterMonitoringConfigManagedPrometheusPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterMonitoringConfigManagedPrometheus) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type ClusterNetworkPolicy struct {
	// Whether network policy is enabled on the cluster.
	Enabled bool `pulumi:"enabled"`
	// The selected network policy provider. Defaults to PROVIDER_UNSPECIFIED.
	Provider *string `pulumi:"provider"`
}

// ClusterNetworkPolicyInput is an input type that accepts ClusterNetworkPolicyArgs and ClusterNetworkPolicyOutput values.
// You can construct a concrete instance of `ClusterNetworkPolicyInput` via:
//
//	ClusterNetworkPolicyArgs{...}
type ClusterNetworkPolicyInput interface {
	pulumi.Input

	ToClusterNetworkPolicyOutput() ClusterNetworkPolicyOutput
	ToClusterNetworkPolicyOutputWithContext(context.Context) ClusterNetworkPolicyOutput
}

type ClusterNetworkPolicyArgs struct {
	// Whether network policy is enabled on the cluster.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The selected network policy provider. Defaults to PROVIDER_UNSPECIFIED.
	Provider pulumi.StringPtrInput `pulumi:"provider"`
}

func (ClusterNetworkPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNetworkPolicy)(nil)).Elem()
}

func (i ClusterNetworkPolicyArgs) ToClusterNetworkPolicyOutput() ClusterNetworkPolicyOutput {
	return i.ToClusterNetworkPolicyOutputWithContext(context.Background())
}

func (i ClusterNetworkPolicyArgs) ToClusterNetworkPolicyOutputWithContext(ctx context.Context) ClusterNetworkPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNetworkPolicyOutput)
}

func (i ClusterNetworkPolicyArgs) ToClusterNetworkPolicyPtrOutput() ClusterNetworkPolicyPtrOutput {
	return i.ToClusterNetworkPolicyPtrOutputWithContext(context.Background())
}

func (i ClusterNetworkPolicyArgs) ToClusterNetworkPolicyPtrOutputWithContext(ctx context.Context) ClusterNetworkPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNetworkPolicyOutput).ToClusterNetworkPolicyPtrOutputWithContext(ctx)
}

// ClusterNetworkPolicyPtrInput is an input type that accepts ClusterNetworkPolicyArgs, ClusterNetworkPolicyPtr and ClusterNetworkPolicyPtrOutput values.
// You can construct a concrete instance of `ClusterNetworkPolicyPtrInput` via:
//
//	        ClusterNetworkPolicyArgs{...}
//
//	or:
//
//	        nil
type ClusterNetworkPolicyPtrInput interface {
	pulumi.Input

	ToClusterNetworkPolicyPtrOutput() ClusterNetworkPolicyPtrOutput
	ToClusterNetworkPolicyPtrOutputWithContext(context.Context) ClusterNetworkPolicyPtrOutput
}

type clusterNetworkPolicyPtrType ClusterNetworkPolicyArgs

func ClusterNetworkPolicyPtr(v *ClusterNetworkPolicyArgs) ClusterNetworkPolicyPtrInput {
	return (*clusterNetworkPolicyPtrType)(v)
}

func (*clusterNetworkPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNetworkPolicy)(nil)).Elem()
}

func (i *clusterNetworkPolicyPtrType) ToClusterNetworkPolicyPtrOutput() ClusterNetworkPolicyPtrOutput {
	return i.ToClusterNetworkPolicyPtrOutputWithContext(context.Background())
}

func (i *clusterNetworkPolicyPtrType) ToClusterNetworkPolicyPtrOutputWithContext(ctx context.Context) ClusterNetworkPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNetworkPolicyPtrOutput)
}

type ClusterNetworkPolicyOutput struct{ *pulumi.OutputState }

func (ClusterNetworkPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNetworkPolicy)(nil)).Elem()
}

func (o ClusterNetworkPolicyOutput) ToClusterNetworkPolicyOutput() ClusterNetworkPolicyOutput {
	return o
}

func (o ClusterNetworkPolicyOutput) ToClusterNetworkPolicyOutputWithContext(ctx context.Context) ClusterNetworkPolicyOutput {
	return o
}

func (o ClusterNetworkPolicyOutput) ToClusterNetworkPolicyPtrOutput() ClusterNetworkPolicyPtrOutput {
	return o.ToClusterNetworkPolicyPtrOutputWithContext(context.Background())
}

func (o ClusterNetworkPolicyOutput) ToClusterNetworkPolicyPtrOutputWithContext(ctx context.Context) ClusterNetworkPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterNetworkPolicy) *ClusterNetworkPolicy {
		return &v
	}).(ClusterNetworkPolicyPtrOutput)
}

// Whether network policy is enabled on the cluster.
func (o ClusterNetworkPolicyOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterNetworkPolicy) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The selected network policy provider. Defaults to PROVIDER_UNSPECIFIED.
func (o ClusterNetworkPolicyOutput) Provider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNetworkPolicy) *string { return v.Provider }).(pulumi.StringPtrOutput)
}

type ClusterNetworkPolicyPtrOutput struct{ *pulumi.OutputState }

func (ClusterNetworkPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNetworkPolicy)(nil)).Elem()
}

func (o ClusterNetworkPolicyPtrOutput) ToClusterNetworkPolicyPtrOutput() ClusterNetworkPolicyPtrOutput {
	return o
}

func (o ClusterNetworkPolicyPtrOutput) ToClusterNetworkPolicyPtrOutputWithContext(ctx context.Context) ClusterNetworkPolicyPtrOutput {
	return o
}

func (o ClusterNetworkPolicyPtrOutput) Elem() ClusterNetworkPolicyOutput {
	return o.ApplyT(func(v *ClusterNetworkPolicy) ClusterNetworkPolicy {
		if v != nil {
			return *v
		}
		var ret ClusterNetworkPolicy
		return ret
	}).(ClusterNetworkPolicyOutput)
}

// Whether network policy is enabled on the cluster.
func (o ClusterNetworkPolicyPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterNetworkPolicy) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The selected network policy provider. Defaults to PROVIDER_UNSPECIFIED.
func (o ClusterNetworkPolicyPtrOutput) Provider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNetworkPolicy) *string {
		if v == nil {
			return nil
		}
		return v.Provider
	}).(pulumi.StringPtrOutput)
}

type ClusterNodeConfig struct {
	// Specifies options for controlling
	// advanced machine features. Structure is documented below.
	AdvancedMachineFeatures *ClusterNodeConfigAdvancedMachineFeatures `pulumi:"advancedMachineFeatures"`
	// The Customer Managed Encryption Key used to encrypt the boot disk attached to each node in the node pool. This should be of the form projects/[KEY_PROJECT_ID]/locations/[LOCATION]/keyRings/[RING_NAME]/cryptoKeys/[KEY_NAME]. For more information about protecting resources with Cloud KMS Keys please see: <https://cloud.google.com/compute/docs/disks/customer-managed-encryption>
	BootDiskKmsKey *string `pulumi:"bootDiskKmsKey"`
	// Configuration for [Confidential Nodes](https://cloud.google.com/kubernetes-engine/docs/how-to/confidential-gke-nodes) feature. Structure is documented below documented below.
	ConfidentialNodes *ClusterNodeConfigConfidentialNodes `pulumi:"confidentialNodes"`
	// Size of the disk attached to each node, specified
	// in GB. The smallest allowed disk size is 10GB. Defaults to 100GB.
	DiskSizeGb *int `pulumi:"diskSizeGb"`
	// Type of the disk attached to each node
	// (e.g. 'pd-standard', 'pd-balanced' or 'pd-ssd'). If unspecified, the default disk type is 'pd-standard'
	DiskType *string `pulumi:"diskType"`
	// List of kubernetes taints applied to each node. Structure is documented above.
	EffectiveTaints []ClusterNodeConfigEffectiveTaint `pulumi:"effectiveTaints"`
	// Enabling Confidential Storage will create boot disk with confidential mode. It is disabled by default.
	EnableConfidentialStorage *bool `pulumi:"enableConfidentialStorage"`
	// Parameters for the ephemeral storage filesystem. If unspecified, ephemeral storage is backed by the boot disk. Structure is documented below.
	EphemeralStorageConfig *ClusterNodeConfigEphemeralStorageConfig `pulumi:"ephemeralStorageConfig"`
	// Parameters for the ephemeral storage filesystem. If unspecified, ephemeral storage is backed by the boot disk. Structure is documented below.
	EphemeralStorageLocalSsdConfig *ClusterNodeConfigEphemeralStorageLocalSsdConfig `pulumi:"ephemeralStorageLocalSsdConfig"`
	// Parameters for the NCCL Fast Socket feature. If unspecified, NCCL Fast Socket will not be enabled on the node pool.
	// Node Pool must enable gvnic.
	// GKE version 1.25.2-gke.1700 or later.
	// Structure is documented below.
	FastSocket *ClusterNodeConfigFastSocket `pulumi:"fastSocket"`
	// Parameters for the Google Container Filesystem (GCFS).
	// If unspecified, GCFS will not be enabled on the node pool. When enabling this feature you must specify `imageType = "COS_CONTAINERD"` and `nodeVersion` from GKE versions 1.19 or later to use it.
	// For GKE versions 1.19, 1.20, and 1.21, the recommended minimum `nodeVersion` would be 1.19.15-gke.1300, 1.20.11-gke.1300, and 1.21.5-gke.1300 respectively.
	// A `machineType` that has more than 16 GiB of memory is also recommended.
	// GCFS must be enabled in order to use [image streaming](https://cloud.google.com/kubernetes-engine/docs/how-to/image-streaming).
	// Structure is documented below.
	GcfsConfig *ClusterNodeConfigGcfsConfig `pulumi:"gcfsConfig"`
	// List of the type and count of accelerator cards attached to the instance.
	// Structure documented below.
	GuestAccelerators []ClusterNodeConfigGuestAccelerator `pulumi:"guestAccelerators"`
	// Google Virtual NIC (gVNIC) is a virtual network interface.
	// Installing the gVNIC driver allows for more efficient traffic transmission across the Google network infrastructure.
	// gVNIC is an alternative to the virtIO-based ethernet driver. GKE nodes must use a Container-Optimized OS node image.
	// GKE node version 1.15.11-gke.15 or later
	// Structure is documented below.
	Gvnic *ClusterNodeConfigGvnic `pulumi:"gvnic"`
	// The maintenance policy for the hosts on which the GKE VMs run on.
	HostMaintenancePolicy *ClusterNodeConfigHostMaintenancePolicy `pulumi:"hostMaintenancePolicy"`
	// The image type to use for this node. Note that changing the image type
	// will delete and recreate all nodes in the node pool.
	ImageType *string `pulumi:"imageType"`
	// Kubelet configuration, currently supported attributes can be found [here](https://cloud.google.com/sdk/gcloud/reference/beta/container/node-pools/create#--system-config-from-file).
	// Structure is documented below.
	KubeletConfig *ClusterNodeConfigKubeletConfig `pulumi:"kubeletConfig"`
	// The Kubernetes labels (key/value pairs) to be applied to each node. The kubernetes.io/ and k8s.io/ prefixes are
	// reserved by Kubernetes Core components and cannot be specified.
	Labels map[string]string `pulumi:"labels"`
	// Parameters that can be configured on Linux nodes. Structure is documented below.
	LinuxNodeConfig *ClusterNodeConfigLinuxNodeConfig `pulumi:"linuxNodeConfig"`
	// Parameters for the local NVMe SSDs. Structure is documented below.
	LocalNvmeSsdBlockConfig *ClusterNodeConfigLocalNvmeSsdBlockConfig `pulumi:"localNvmeSsdBlockConfig"`
	// The amount of local SSD disks that will be
	// attached to each cluster node. Defaults to 0.
	LocalSsdCount *int `pulumi:"localSsdCount"`
	// Parameter for specifying the type of logging agent used in a node pool. This will override any cluster-wide default value. Valid values include DEFAULT and MAX_THROUGHPUT. See [Increasing logging agent throughput](https://cloud.google.com/stackdriver/docs/solutions/gke/managing-logs#throughput) for more information.
	LoggingVariant *string `pulumi:"loggingVariant"`
	// The name of a Google Compute Engine machine type.
	// Defaults to `e2-medium`. To create a custom machine type, value should be set as specified
	// [here](https://cloud.google.com/compute/docs/reference/latest/instances#machineType).
	MachineType *string `pulumi:"machineType"`
	// The metadata key/value pairs assigned to instances in
	// the cluster. From GKE `1.12` onwards, `disable-legacy-endpoints` is set to
	// `true` by the API; if `metadata` is set but that default value is not
	// included, the provider will attempt to unset the value. To avoid this, set the
	// value in your config.
	Metadata map[string]string `pulumi:"metadata"`
	// Minimum CPU platform to be used by this instance.
	// The instance may be scheduled on the specified or newer CPU platform. Applicable
	// values are the friendly names of CPU platforms, such as `Intel Haswell`. See the
	// [official documentation](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
	// for more information.
	MinCpuPlatform *string `pulumi:"minCpuPlatform"`
	// Setting this field will assign instances of this pool to run on the specified node group. This is useful for running workloads on [sole tenant nodes](https://cloud.google.com/compute/docs/nodes/sole-tenant-nodes).
	NodeGroup *string `pulumi:"nodeGroup"`
	// The set of Google API scopes to be made available
	// on all of the node VMs under the "default" service account.
	// Use the "https://www.googleapis.com/auth/cloud-platform" scope to grant access to all APIs. It is recommended that you set `serviceAccount` to a non-default service account and grant IAM roles to that service account for only the resources that it needs.
	//
	// See the [official documentation](https://cloud.google.com/kubernetes-engine/docs/how-to/access-scopes) for information on migrating off of legacy access scopes.
	OauthScopes []string `pulumi:"oauthScopes"`
	// A boolean that represents whether or not the underlying node VMs
	// are preemptible. See the [official documentation](https://cloud.google.com/container-engine/docs/preemptible-vm)
	// for more information. Defaults to false.
	Preemptible *bool `pulumi:"preemptible"`
	// The configuration of the desired reservation which instances could take capacity from. Structure is documented below.
	ReservationAffinity *ClusterNodeConfigReservationAffinity `pulumi:"reservationAffinity"`
	// The GCP labels (key/value pairs) to be applied to each node. Refer [here](https://cloud.google.com/kubernetes-engine/docs/how-to/creating-managing-labels)
	// for how these labels are applied to clusters, node pools and nodes.
	ResourceLabels map[string]string `pulumi:"resourceLabels"`
	// A map of resource manager tag keys and values to be attached to the nodes for managing Compute Engine firewalls using Network Firewall Policies. Tags must be according to specifications found [here](https://cloud.google.com/vpc/docs/tags-firewalls-overview#specifications). A maximum of 5 tag key-value pairs can be specified. Existing tags will be replaced with new values. Tags must be in one of the following formats ([KEY]=[VALUE]) 1. `tagKeys/{tag_key_id}=tagValues/{tag_value_id}` 2. `{org_id}/{tag_key_name}={tag_value_name}` 3. `{project_id}/{tag_key_name}={tag_value_name}`.
	ResourceManagerTags map[string]interface{} `pulumi:"resourceManagerTags"`
	// Sandbox configuration for this node.
	SandboxConfig *ClusterNodeConfigSandboxConfig `pulumi:"sandboxConfig"`
	// Parameters for secondary boot disks to preload container images and data on new nodes. Structure is documented below. `gcfsConfig` must be `enabled=true` for this feature to work. `minMasterVersion` must also be set to use GKE 1.28.3-gke.106700 or later versions.
	SecondaryBootDisks []ClusterNodeConfigSecondaryBootDisk `pulumi:"secondaryBootDisks"`
	// The service account to be used by the Node VMs.
	// If not specified, the "default" service account is used.
	ServiceAccount *string `pulumi:"serviceAccount"`
	// Shielded Instance options. Structure is documented below.
	ShieldedInstanceConfig *ClusterNodeConfigShieldedInstanceConfig `pulumi:"shieldedInstanceConfig"`
	// Allows specifying multiple [node affinities](https://cloud.google.com/compute/docs/nodes/sole-tenant-nodes#node_affinity_and_anti-affinity) useful for running workloads on [sole tenant nodes](https://cloud.google.com/kubernetes-engine/docs/how-to/sole-tenancy). `nodeAffinity` structure is documented below.
	SoleTenantConfig *ClusterNodeConfigSoleTenantConfig `pulumi:"soleTenantConfig"`
	// A boolean that represents whether the underlying node VMs are spot.
	// See the [official documentation](https://cloud.google.com/kubernetes-engine/docs/concepts/spot-vms)
	// for more information. Defaults to false.
	Spot *bool `pulumi:"spot"`
	// The list of instance tags applied to all nodes. Tags are used to identify
	// valid sources or targets for network firewalls.
	Tags []string `pulumi:"tags"`
	// A list of [Kubernetes taints](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
	// to apply to nodes. GKE's API can only set this field on cluster creation.
	// However, GKE will add taints to your nodes if you enable certain features such
	// as GPUs. If this field is set, any diffs on this field will cause the provider to
	// recreate the underlying resource. Taint values can be updated safely in
	// Kubernetes (eg. through `kubectl`), and it's recommended that you do not use
	// this field to manage taints. If you do, `lifecycle.ignore_changes` is
	// recommended. Structure is documented below.
	Taints []ClusterNodeConfigTaint `pulumi:"taints"`
	// Metadata configuration to expose to workloads on the node pool.
	// Structure is documented below.
	WorkloadMetadataConfig *ClusterNodeConfigWorkloadMetadataConfig `pulumi:"workloadMetadataConfig"`
}

// ClusterNodeConfigInput is an input type that accepts ClusterNodeConfigArgs and ClusterNodeConfigOutput values.
// You can construct a concrete instance of `ClusterNodeConfigInput` via:
//
//	ClusterNodeConfigArgs{...}
type ClusterNodeConfigInput interface {
	pulumi.Input

	ToClusterNodeConfigOutput() ClusterNodeConfigOutput
	ToClusterNodeConfigOutputWithContext(context.Context) ClusterNodeConfigOutput
}

type ClusterNodeConfigArgs struct {
	// Specifies options for controlling
	// advanced machine features. Structure is documented below.
	AdvancedMachineFeatures ClusterNodeConfigAdvancedMachineFeaturesPtrInput `pulumi:"advancedMachineFeatures"`
	// The Customer Managed Encryption Key used to encrypt the boot disk attached to each node in the node pool. This should be of the form projects/[KEY_PROJECT_ID]/locations/[LOCATION]/keyRings/[RING_NAME]/cryptoKeys/[KEY_NAME]. For more information about protecting resources with Cloud KMS Keys please see: <https://cloud.google.com/compute/docs/disks/customer-managed-encryption>
	BootDiskKmsKey pulumi.StringPtrInput `pulumi:"bootDiskKmsKey"`
	// Configuration for [Confidential Nodes](https://cloud.google.com/kubernetes-engine/docs/how-to/confidential-gke-nodes) feature. Structure is documented below documented below.
	ConfidentialNodes ClusterNodeConfigConfidentialNodesPtrInput `pulumi:"confidentialNodes"`
	// Size of the disk attached to each node, specified
	// in GB. The smallest allowed disk size is 10GB. Defaults to 100GB.
	DiskSizeGb pulumi.IntPtrInput `pulumi:"diskSizeGb"`
	// Type of the disk attached to each node
	// (e.g. 'pd-standard', 'pd-balanced' or 'pd-ssd'). If unspecified, the default disk type is 'pd-standard'
	DiskType pulumi.StringPtrInput `pulumi:"diskType"`
	// List of kubernetes taints applied to each node. Structure is documented above.
	EffectiveTaints ClusterNodeConfigEffectiveTaintArrayInput `pulumi:"effectiveTaints"`
	// Enabling Confidential Storage will create boot disk with confidential mode. It is disabled by default.
	EnableConfidentialStorage pulumi.BoolPtrInput `pulumi:"enableConfidentialStorage"`
	// Parameters for the ephemeral storage filesystem. If unspecified, ephemeral storage is backed by the boot disk. Structure is documented below.
	EphemeralStorageConfig ClusterNodeConfigEphemeralStorageConfigPtrInput `pulumi:"ephemeralStorageConfig"`
	// Parameters for the ephemeral storage filesystem. If unspecified, ephemeral storage is backed by the boot disk. Structure is documented below.
	EphemeralStorageLocalSsdConfig ClusterNodeConfigEphemeralStorageLocalSsdConfigPtrInput `pulumi:"ephemeralStorageLocalSsdConfig"`
	// Parameters for the NCCL Fast Socket feature. If unspecified, NCCL Fast Socket will not be enabled on the node pool.
	// Node Pool must enable gvnic.
	// GKE version 1.25.2-gke.1700 or later.
	// Structure is documented below.
	FastSocket ClusterNodeConfigFastSocketPtrInput `pulumi:"fastSocket"`
	// Parameters for the Google Container Filesystem (GCFS).
	// If unspecified, GCFS will not be enabled on the node pool. When enabling this feature you must specify `imageType = "COS_CONTAINERD"` and `nodeVersion` from GKE versions 1.19 or later to use it.
	// For GKE versions 1.19, 1.20, and 1.21, the recommended minimum `nodeVersion` would be 1.19.15-gke.1300, 1.20.11-gke.1300, and 1.21.5-gke.1300 respectively.
	// A `machineType` that has more than 16 GiB of memory is also recommended.
	// GCFS must be enabled in order to use [image streaming](https://cloud.google.com/kubernetes-engine/docs/how-to/image-streaming).
	// Structure is documented below.
	GcfsConfig ClusterNodeConfigGcfsConfigPtrInput `pulumi:"gcfsConfig"`
	// List of the type and count of accelerator cards attached to the instance.
	// Structure documented below.
	GuestAccelerators ClusterNodeConfigGuestAcceleratorArrayInput `pulumi:"guestAccelerators"`
	// Google Virtual NIC (gVNIC) is a virtual network interface.
	// Installing the gVNIC driver allows for more efficient traffic transmission across the Google network infrastructure.
	// gVNIC is an alternative to the virtIO-based ethernet driver. GKE nodes must use a Container-Optimized OS node image.
	// GKE node version 1.15.11-gke.15 or later
	// Structure is documented below.
	Gvnic ClusterNodeConfigGvnicPtrInput `pulumi:"gvnic"`
	// The maintenance policy for the hosts on which the GKE VMs run on.
	HostMaintenancePolicy ClusterNodeConfigHostMaintenancePolicyPtrInput `pulumi:"hostMaintenancePolicy"`
	// The image type to use for this node. Note that changing the image type
	// will delete and recreate all nodes in the node pool.
	ImageType pulumi.StringPtrInput `pulumi:"imageType"`
	// Kubelet configuration, currently supported attributes can be found [here](https://cloud.google.com/sdk/gcloud/reference/beta/container/node-pools/create#--system-config-from-file).
	// Structure is documented below.
	KubeletConfig ClusterNodeConfigKubeletConfigPtrInput `pulumi:"kubeletConfig"`
	// The Kubernetes labels (key/value pairs) to be applied to each node. The kubernetes.io/ and k8s.io/ prefixes are
	// reserved by Kubernetes Core components and cannot be specified.
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// Parameters that can be configured on Linux nodes. Structure is documented below.
	LinuxNodeConfig ClusterNodeConfigLinuxNodeConfigPtrInput `pulumi:"linuxNodeConfig"`
	// Parameters for the local NVMe SSDs. Structure is documented below.
	LocalNvmeSsdBlockConfig ClusterNodeConfigLocalNvmeSsdBlockConfigPtrInput `pulumi:"localNvmeSsdBlockConfig"`
	// The amount of local SSD disks that will be
	// attached to each cluster node. Defaults to 0.
	LocalSsdCount pulumi.IntPtrInput `pulumi:"localSsdCount"`
	// Parameter for specifying the type of logging agent used in a node pool. This will override any cluster-wide default value. Valid values include DEFAULT and MAX_THROUGHPUT. See [Increasing logging agent throughput](https://cloud.google.com/stackdriver/docs/solutions/gke/managing-logs#throughput) for more information.
	LoggingVariant pulumi.StringPtrInput `pulumi:"loggingVariant"`
	// The name of a Google Compute Engine machine type.
	// Defaults to `e2-medium`. To create a custom machine type, value should be set as specified
	// [here](https://cloud.google.com/compute/docs/reference/latest/instances#machineType).
	MachineType pulumi.StringPtrInput `pulumi:"machineType"`
	// The metadata key/value pairs assigned to instances in
	// the cluster. From GKE `1.12` onwards, `disable-legacy-endpoints` is set to
	// `true` by the API; if `metadata` is set but that default value is not
	// included, the provider will attempt to unset the value. To avoid this, set the
	// value in your config.
	Metadata pulumi.StringMapInput `pulumi:"metadata"`
	// Minimum CPU platform to be used by this instance.
	// The instance may be scheduled on the specified or newer CPU platform. Applicable
	// values are the friendly names of CPU platforms, such as `Intel Haswell`. See the
	// [official documentation](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
	// for more information.
	MinCpuPlatform pulumi.StringPtrInput `pulumi:"minCpuPlatform"`
	// Setting this field will assign instances of this pool to run on the specified node group. This is useful for running workloads on [sole tenant nodes](https://cloud.google.com/compute/docs/nodes/sole-tenant-nodes).
	NodeGroup pulumi.StringPtrInput `pulumi:"nodeGroup"`
	// The set of Google API scopes to be made available
	// on all of the node VMs under the "default" service account.
	// Use the "https://www.googleapis.com/auth/cloud-platform" scope to grant access to all APIs. It is recommended that you set `serviceAccount` to a non-default service account and grant IAM roles to that service account for only the resources that it needs.
	//
	// See the [official documentation](https://cloud.google.com/kubernetes-engine/docs/how-to/access-scopes) for information on migrating off of legacy access scopes.
	OauthScopes pulumi.StringArrayInput `pulumi:"oauthScopes"`
	// A boolean that represents whether or not the underlying node VMs
	// are preemptible. See the [official documentation](https://cloud.google.com/container-engine/docs/preemptible-vm)
	// for more information. Defaults to false.
	Preemptible pulumi.BoolPtrInput `pulumi:"preemptible"`
	// The configuration of the desired reservation which instances could take capacity from. Structure is documented below.
	ReservationAffinity ClusterNodeConfigReservationAffinityPtrInput `pulumi:"reservationAffinity"`
	// The GCP labels (key/value pairs) to be applied to each node. Refer [here](https://cloud.google.com/kubernetes-engine/docs/how-to/creating-managing-labels)
	// for how these labels are applied to clusters, node pools and nodes.
	ResourceLabels pulumi.StringMapInput `pulumi:"resourceLabels"`
	// A map of resource manager tag keys and values to be attached to the nodes for managing Compute Engine firewalls using Network Firewall Policies. Tags must be according to specifications found [here](https://cloud.google.com/vpc/docs/tags-firewalls-overview#specifications). A maximum of 5 tag key-value pairs can be specified. Existing tags will be replaced with new values. Tags must be in one of the following formats ([KEY]=[VALUE]) 1. `tagKeys/{tag_key_id}=tagValues/{tag_value_id}` 2. `{org_id}/{tag_key_name}={tag_value_name}` 3. `{project_id}/{tag_key_name}={tag_value_name}`.
	ResourceManagerTags pulumi.MapInput `pulumi:"resourceManagerTags"`
	// Sandbox configuration for this node.
	SandboxConfig ClusterNodeConfigSandboxConfigPtrInput `pulumi:"sandboxConfig"`
	// Parameters for secondary boot disks to preload container images and data on new nodes. Structure is documented below. `gcfsConfig` must be `enabled=true` for this feature to work. `minMasterVersion` must also be set to use GKE 1.28.3-gke.106700 or later versions.
	SecondaryBootDisks ClusterNodeConfigSecondaryBootDiskArrayInput `pulumi:"secondaryBootDisks"`
	// The service account to be used by the Node VMs.
	// If not specified, the "default" service account is used.
	ServiceAccount pulumi.StringPtrInput `pulumi:"serviceAccount"`
	// Shielded Instance options. Structure is documented below.
	ShieldedInstanceConfig ClusterNodeConfigShieldedInstanceConfigPtrInput `pulumi:"shieldedInstanceConfig"`
	// Allows specifying multiple [node affinities](https://cloud.google.com/compute/docs/nodes/sole-tenant-nodes#node_affinity_and_anti-affinity) useful for running workloads on [sole tenant nodes](https://cloud.google.com/kubernetes-engine/docs/how-to/sole-tenancy). `nodeAffinity` structure is documented below.
	SoleTenantConfig ClusterNodeConfigSoleTenantConfigPtrInput `pulumi:"soleTenantConfig"`
	// A boolean that represents whether the underlying node VMs are spot.
	// See the [official documentation](https://cloud.google.com/kubernetes-engine/docs/concepts/spot-vms)
	// for more information. Defaults to false.
	Spot pulumi.BoolPtrInput `pulumi:"spot"`
	// The list of instance tags applied to all nodes. Tags are used to identify
	// valid sources or targets for network firewalls.
	Tags pulumi.StringArrayInput `pulumi:"tags"`
	// A list of [Kubernetes taints](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
	// to apply to nodes. GKE's API can only set this field on cluster creation.
	// However, GKE will add taints to your nodes if you enable certain features such
	// as GPUs. If this field is set, any diffs on this field will cause the provider to
	// recreate the underlying resource. Taint values can be updated safely in
	// Kubernetes (eg. through `kubectl`), and it's recommended that you do not use
	// this field to manage taints. If you do, `lifecycle.ignore_changes` is
	// recommended. Structure is documented below.
	Taints ClusterNodeConfigTaintArrayInput `pulumi:"taints"`
	// Metadata configuration to expose to workloads on the node pool.
	// Structure is documented below.
	WorkloadMetadataConfig ClusterNodeConfigWorkloadMetadataConfigPtrInput `pulumi:"workloadMetadataConfig"`
}

func (ClusterNodeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfig)(nil)).Elem()
}

func (i ClusterNodeConfigArgs) ToClusterNodeConfigOutput() ClusterNodeConfigOutput {
	return i.ToClusterNodeConfigOutputWithContext(context.Background())
}

func (i ClusterNodeConfigArgs) ToClusterNodeConfigOutputWithContext(ctx context.Context) ClusterNodeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigOutput)
}

func (i ClusterNodeConfigArgs) ToClusterNodeConfigPtrOutput() ClusterNodeConfigPtrOutput {
	return i.ToClusterNodeConfigPtrOutputWithContext(context.Background())
}

func (i ClusterNodeConfigArgs) ToClusterNodeConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigOutput).ToClusterNodeConfigPtrOutputWithContext(ctx)
}

// ClusterNodeConfigPtrInput is an input type that accepts ClusterNodeConfigArgs, ClusterNodeConfigPtr and ClusterNodeConfigPtrOutput values.
// You can construct a concrete instance of `ClusterNodeConfigPtrInput` via:
//
//	        ClusterNodeConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterNodeConfigPtrInput interface {
	pulumi.Input

	ToClusterNodeConfigPtrOutput() ClusterNodeConfigPtrOutput
	ToClusterNodeConfigPtrOutputWithContext(context.Context) ClusterNodeConfigPtrOutput
}

type clusterNodeConfigPtrType ClusterNodeConfigArgs

func ClusterNodeConfigPtr(v *ClusterNodeConfigArgs) ClusterNodeConfigPtrInput {
	return (*clusterNodeConfigPtrType)(v)
}

func (*clusterNodeConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodeConfig)(nil)).Elem()
}

func (i *clusterNodeConfigPtrType) ToClusterNodeConfigPtrOutput() ClusterNodeConfigPtrOutput {
	return i.ToClusterNodeConfigPtrOutputWithContext(context.Background())
}

func (i *clusterNodeConfigPtrType) ToClusterNodeConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigPtrOutput)
}

type ClusterNodeConfigOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfig)(nil)).Elem()
}

func (o ClusterNodeConfigOutput) ToClusterNodeConfigOutput() ClusterNodeConfigOutput {
	return o
}

func (o ClusterNodeConfigOutput) ToClusterNodeConfigOutputWithContext(ctx context.Context) ClusterNodeConfigOutput {
	return o
}

func (o ClusterNodeConfigOutput) ToClusterNodeConfigPtrOutput() ClusterNodeConfigPtrOutput {
	return o.ToClusterNodeConfigPtrOutputWithContext(context.Background())
}

func (o ClusterNodeConfigOutput) ToClusterNodeConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterNodeConfig) *ClusterNodeConfig {
		return &v
	}).(ClusterNodeConfigPtrOutput)
}

// Specifies options for controlling
// advanced machine features. Structure is documented below.
func (o ClusterNodeConfigOutput) AdvancedMachineFeatures() ClusterNodeConfigAdvancedMachineFeaturesPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfig) *ClusterNodeConfigAdvancedMachineFeatures { return v.AdvancedMachineFeatures }).(ClusterNodeConfigAdvancedMachineFeaturesPtrOutput)
}

// The Customer Managed Encryption Key used to encrypt the boot disk attached to each node in the node pool. This should be of the form projects/[KEY_PROJECT_ID]/locations/[LOCATION]/keyRings/[RING_NAME]/cryptoKeys/[KEY_NAME]. For more information about protecting resources with Cloud KMS Keys please see: <https://cloud.google.com/compute/docs/disks/customer-managed-encryption>
func (o ClusterNodeConfigOutput) BootDiskKmsKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfig) *string { return v.BootDiskKmsKey }).(pulumi.StringPtrOutput)
}

// Configuration for [Confidential Nodes](https://cloud.google.com/kubernetes-engine/docs/how-to/confidential-gke-nodes) feature. Structure is documented below documented below.
func (o ClusterNodeConfigOutput) ConfidentialNodes() ClusterNodeConfigConfidentialNodesPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfig) *ClusterNodeConfigConfidentialNodes { return v.ConfidentialNodes }).(ClusterNodeConfigConfidentialNodesPtrOutput)
}

// Size of the disk attached to each node, specified
// in GB. The smallest allowed disk size is 10GB. Defaults to 100GB.
func (o ClusterNodeConfigOutput) DiskSizeGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfig) *int { return v.DiskSizeGb }).(pulumi.IntPtrOutput)
}

// Type of the disk attached to each node
// (e.g. 'pd-standard', 'pd-balanced' or 'pd-ssd'). If unspecified, the default disk type is 'pd-standard'
func (o ClusterNodeConfigOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfig) *string { return v.DiskType }).(pulumi.StringPtrOutput)
}

// List of kubernetes taints applied to each node. Structure is documented above.
func (o ClusterNodeConfigOutput) EffectiveTaints() ClusterNodeConfigEffectiveTaintArrayOutput {
	return o.ApplyT(func(v ClusterNodeConfig) []ClusterNodeConfigEffectiveTaint { return v.EffectiveTaints }).(ClusterNodeConfigEffectiveTaintArrayOutput)
}

// Enabling Confidential Storage will create boot disk with confidential mode. It is disabled by default.
func (o ClusterNodeConfigOutput) EnableConfidentialStorage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfig) *bool { return v.EnableConfidentialStorage }).(pulumi.BoolPtrOutput)
}

// Parameters for the ephemeral storage filesystem. If unspecified, ephemeral storage is backed by the boot disk. Structure is documented below.
func (o ClusterNodeConfigOutput) EphemeralStorageConfig() ClusterNodeConfigEphemeralStorageConfigPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfig) *ClusterNodeConfigEphemeralStorageConfig { return v.EphemeralStorageConfig }).(ClusterNodeConfigEphemeralStorageConfigPtrOutput)
}

// Parameters for the ephemeral storage filesystem. If unspecified, ephemeral storage is backed by the boot disk. Structure is documented below.
func (o ClusterNodeConfigOutput) EphemeralStorageLocalSsdConfig() ClusterNodeConfigEphemeralStorageLocalSsdConfigPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfig) *ClusterNodeConfigEphemeralStorageLocalSsdConfig {
		return v.EphemeralStorageLocalSsdConfig
	}).(ClusterNodeConfigEphemeralStorageLocalSsdConfigPtrOutput)
}

// Parameters for the NCCL Fast Socket feature. If unspecified, NCCL Fast Socket will not be enabled on the node pool.
// Node Pool must enable gvnic.
// GKE version 1.25.2-gke.1700 or later.
// Structure is documented below.
func (o ClusterNodeConfigOutput) FastSocket() ClusterNodeConfigFastSocketPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfig) *ClusterNodeConfigFastSocket { return v.FastSocket }).(ClusterNodeConfigFastSocketPtrOutput)
}

// Parameters for the Google Container Filesystem (GCFS).
// If unspecified, GCFS will not be enabled on the node pool. When enabling this feature you must specify `imageType = "COS_CONTAINERD"` and `nodeVersion` from GKE versions 1.19 or later to use it.
// For GKE versions 1.19, 1.20, and 1.21, the recommended minimum `nodeVersion` would be 1.19.15-gke.1300, 1.20.11-gke.1300, and 1.21.5-gke.1300 respectively.
// A `machineType` that has more than 16 GiB of memory is also recommended.
// GCFS must be enabled in order to use [image streaming](https://cloud.google.com/kubernetes-engine/docs/how-to/image-streaming).
// Structure is documented below.
func (o ClusterNodeConfigOutput) GcfsConfig() ClusterNodeConfigGcfsConfigPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfig) *ClusterNodeConfigGcfsConfig { return v.GcfsConfig }).(ClusterNodeConfigGcfsConfigPtrOutput)
}

// List of the type and count of accelerator cards attached to the instance.
// Structure documented below.
func (o ClusterNodeConfigOutput) GuestAccelerators() ClusterNodeConfigGuestAcceleratorArrayOutput {
	return o.ApplyT(func(v ClusterNodeConfig) []ClusterNodeConfigGuestAccelerator { return v.GuestAccelerators }).(ClusterNodeConfigGuestAcceleratorArrayOutput)
}

// Google Virtual NIC (gVNIC) is a virtual network interface.
// Installing the gVNIC driver allows for more efficient traffic transmission across the Google network infrastructure.
// gVNIC is an alternative to the virtIO-based ethernet driver. GKE nodes must use a Container-Optimized OS node image.
// GKE node version 1.15.11-gke.15 or later
// Structure is documented below.
func (o ClusterNodeConfigOutput) Gvnic() ClusterNodeConfigGvnicPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfig) *ClusterNodeConfigGvnic { return v.Gvnic }).(ClusterNodeConfigGvnicPtrOutput)
}

// The maintenance policy for the hosts on which the GKE VMs run on.
func (o ClusterNodeConfigOutput) HostMaintenancePolicy() ClusterNodeConfigHostMaintenancePolicyPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfig) *ClusterNodeConfigHostMaintenancePolicy { return v.HostMaintenancePolicy }).(ClusterNodeConfigHostMaintenancePolicyPtrOutput)
}

// The image type to use for this node. Note that changing the image type
// will delete and recreate all nodes in the node pool.
func (o ClusterNodeConfigOutput) ImageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfig) *string { return v.ImageType }).(pulumi.StringPtrOutput)
}

// Kubelet configuration, currently supported attributes can be found [here](https://cloud.google.com/sdk/gcloud/reference/beta/container/node-pools/create#--system-config-from-file).
// Structure is documented below.
func (o ClusterNodeConfigOutput) KubeletConfig() ClusterNodeConfigKubeletConfigPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfig) *ClusterNodeConfigKubeletConfig { return v.KubeletConfig }).(ClusterNodeConfigKubeletConfigPtrOutput)
}

// The Kubernetes labels (key/value pairs) to be applied to each node. The kubernetes.io/ and k8s.io/ prefixes are
// reserved by Kubernetes Core components and cannot be specified.
func (o ClusterNodeConfigOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterNodeConfig) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// Parameters that can be configured on Linux nodes. Structure is documented below.
func (o ClusterNodeConfigOutput) LinuxNodeConfig() ClusterNodeConfigLinuxNodeConfigPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfig) *ClusterNodeConfigLinuxNodeConfig { return v.LinuxNodeConfig }).(ClusterNodeConfigLinuxNodeConfigPtrOutput)
}

// Parameters for the local NVMe SSDs. Structure is documented below.
func (o ClusterNodeConfigOutput) LocalNvmeSsdBlockConfig() ClusterNodeConfigLocalNvmeSsdBlockConfigPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfig) *ClusterNodeConfigLocalNvmeSsdBlockConfig { return v.LocalNvmeSsdBlockConfig }).(ClusterNodeConfigLocalNvmeSsdBlockConfigPtrOutput)
}

// The amount of local SSD disks that will be
// attached to each cluster node. Defaults to 0.
func (o ClusterNodeConfigOutput) LocalSsdCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfig) *int { return v.LocalSsdCount }).(pulumi.IntPtrOutput)
}

// Parameter for specifying the type of logging agent used in a node pool. This will override any cluster-wide default value. Valid values include DEFAULT and MAX_THROUGHPUT. See [Increasing logging agent throughput](https://cloud.google.com/stackdriver/docs/solutions/gke/managing-logs#throughput) for more information.
func (o ClusterNodeConfigOutput) LoggingVariant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfig) *string { return v.LoggingVariant }).(pulumi.StringPtrOutput)
}

// The name of a Google Compute Engine machine type.
// Defaults to `e2-medium`. To create a custom machine type, value should be set as specified
// [here](https://cloud.google.com/compute/docs/reference/latest/instances#machineType).
func (o ClusterNodeConfigOutput) MachineType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfig) *string { return v.MachineType }).(pulumi.StringPtrOutput)
}

// The metadata key/value pairs assigned to instances in
// the cluster. From GKE `1.12` onwards, `disable-legacy-endpoints` is set to
// `true` by the API; if `metadata` is set but that default value is not
// included, the provider will attempt to unset the value. To avoid this, set the
// value in your config.
func (o ClusterNodeConfigOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterNodeConfig) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

// Minimum CPU platform to be used by this instance.
// The instance may be scheduled on the specified or newer CPU platform. Applicable
// values are the friendly names of CPU platforms, such as `Intel Haswell`. See the
// [official documentation](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
// for more information.
func (o ClusterNodeConfigOutput) MinCpuPlatform() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfig) *string { return v.MinCpuPlatform }).(pulumi.StringPtrOutput)
}

// Setting this field will assign instances of this pool to run on the specified node group. This is useful for running workloads on [sole tenant nodes](https://cloud.google.com/compute/docs/nodes/sole-tenant-nodes).
func (o ClusterNodeConfigOutput) NodeGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfig) *string { return v.NodeGroup }).(pulumi.StringPtrOutput)
}

// The set of Google API scopes to be made available
// on all of the node VMs under the "default" service account.
// Use the "https://www.googleapis.com/auth/cloud-platform" scope to grant access to all APIs. It is recommended that you set `serviceAccount` to a non-default service account and grant IAM roles to that service account for only the resources that it needs.
//
// See the [official documentation](https://cloud.google.com/kubernetes-engine/docs/how-to/access-scopes) for information on migrating off of legacy access scopes.
func (o ClusterNodeConfigOutput) OauthScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterNodeConfig) []string { return v.OauthScopes }).(pulumi.StringArrayOutput)
}

// A boolean that represents whether or not the underlying node VMs
// are preemptible. See the [official documentation](https://cloud.google.com/container-engine/docs/preemptible-vm)
// for more information. Defaults to false.
func (o ClusterNodeConfigOutput) Preemptible() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfig) *bool { return v.Preemptible }).(pulumi.BoolPtrOutput)
}

// The configuration of the desired reservation which instances could take capacity from. Structure is documented below.
func (o ClusterNodeConfigOutput) ReservationAffinity() ClusterNodeConfigReservationAffinityPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfig) *ClusterNodeConfigReservationAffinity { return v.ReservationAffinity }).(ClusterNodeConfigReservationAffinityPtrOutput)
}

// The GCP labels (key/value pairs) to be applied to each node. Refer [here](https://cloud.google.com/kubernetes-engine/docs/how-to/creating-managing-labels)
// for how these labels are applied to clusters, node pools and nodes.
func (o ClusterNodeConfigOutput) ResourceLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterNodeConfig) map[string]string { return v.ResourceLabels }).(pulumi.StringMapOutput)
}

// A map of resource manager tag keys and values to be attached to the nodes for managing Compute Engine firewalls using Network Firewall Policies. Tags must be according to specifications found [here](https://cloud.google.com/vpc/docs/tags-firewalls-overview#specifications). A maximum of 5 tag key-value pairs can be specified. Existing tags will be replaced with new values. Tags must be in one of the following formats ([KEY]=[VALUE]) 1. `tagKeys/{tag_key_id}=tagValues/{tag_value_id}` 2. `{org_id}/{tag_key_name}={tag_value_name}` 3. `{project_id}/{tag_key_name}={tag_value_name}`.
func (o ClusterNodeConfigOutput) ResourceManagerTags() pulumi.MapOutput {
	return o.ApplyT(func(v ClusterNodeConfig) map[string]interface{} { return v.ResourceManagerTags }).(pulumi.MapOutput)
}

// Sandbox configuration for this node.
func (o ClusterNodeConfigOutput) SandboxConfig() ClusterNodeConfigSandboxConfigPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfig) *ClusterNodeConfigSandboxConfig { return v.SandboxConfig }).(ClusterNodeConfigSandboxConfigPtrOutput)
}

// Parameters for secondary boot disks to preload container images and data on new nodes. Structure is documented below. `gcfsConfig` must be `enabled=true` for this feature to work. `minMasterVersion` must also be set to use GKE 1.28.3-gke.106700 or later versions.
func (o ClusterNodeConfigOutput) SecondaryBootDisks() ClusterNodeConfigSecondaryBootDiskArrayOutput {
	return o.ApplyT(func(v ClusterNodeConfig) []ClusterNodeConfigSecondaryBootDisk { return v.SecondaryBootDisks }).(ClusterNodeConfigSecondaryBootDiskArrayOutput)
}

// The service account to be used by the Node VMs.
// If not specified, the "default" service account is used.
func (o ClusterNodeConfigOutput) ServiceAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfig) *string { return v.ServiceAccount }).(pulumi.StringPtrOutput)
}

// Shielded Instance options. Structure is documented below.
func (o ClusterNodeConfigOutput) ShieldedInstanceConfig() ClusterNodeConfigShieldedInstanceConfigPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfig) *ClusterNodeConfigShieldedInstanceConfig { return v.ShieldedInstanceConfig }).(ClusterNodeConfigShieldedInstanceConfigPtrOutput)
}

// Allows specifying multiple [node affinities](https://cloud.google.com/compute/docs/nodes/sole-tenant-nodes#node_affinity_and_anti-affinity) useful for running workloads on [sole tenant nodes](https://cloud.google.com/kubernetes-engine/docs/how-to/sole-tenancy). `nodeAffinity` structure is documented below.
func (o ClusterNodeConfigOutput) SoleTenantConfig() ClusterNodeConfigSoleTenantConfigPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfig) *ClusterNodeConfigSoleTenantConfig { return v.SoleTenantConfig }).(ClusterNodeConfigSoleTenantConfigPtrOutput)
}

// A boolean that represents whether the underlying node VMs are spot.
// See the [official documentation](https://cloud.google.com/kubernetes-engine/docs/concepts/spot-vms)
// for more information. Defaults to false.
func (o ClusterNodeConfigOutput) Spot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfig) *bool { return v.Spot }).(pulumi.BoolPtrOutput)
}

// The list of instance tags applied to all nodes. Tags are used to identify
// valid sources or targets for network firewalls.
func (o ClusterNodeConfigOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterNodeConfig) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// A list of [Kubernetes taints](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
// to apply to nodes. GKE's API can only set this field on cluster creation.
// However, GKE will add taints to your nodes if you enable certain features such
// as GPUs. If this field is set, any diffs on this field will cause the provider to
// recreate the underlying resource. Taint values can be updated safely in
// Kubernetes (eg. through `kubectl`), and it's recommended that you do not use
// this field to manage taints. If you do, `lifecycle.ignore_changes` is
// recommended. Structure is documented below.
func (o ClusterNodeConfigOutput) Taints() ClusterNodeConfigTaintArrayOutput {
	return o.ApplyT(func(v ClusterNodeConfig) []ClusterNodeConfigTaint { return v.Taints }).(ClusterNodeConfigTaintArrayOutput)
}

// Metadata configuration to expose to workloads on the node pool.
// Structure is documented below.
func (o ClusterNodeConfigOutput) WorkloadMetadataConfig() ClusterNodeConfigWorkloadMetadataConfigPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfig) *ClusterNodeConfigWorkloadMetadataConfig { return v.WorkloadMetadataConfig }).(ClusterNodeConfigWorkloadMetadataConfigPtrOutput)
}

type ClusterNodeConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodeConfig)(nil)).Elem()
}

func (o ClusterNodeConfigPtrOutput) ToClusterNodeConfigPtrOutput() ClusterNodeConfigPtrOutput {
	return o
}

func (o ClusterNodeConfigPtrOutput) ToClusterNodeConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigPtrOutput {
	return o
}

func (o ClusterNodeConfigPtrOutput) Elem() ClusterNodeConfigOutput {
	return o.ApplyT(func(v *ClusterNodeConfig) ClusterNodeConfig {
		if v != nil {
			return *v
		}
		var ret ClusterNodeConfig
		return ret
	}).(ClusterNodeConfigOutput)
}

// Specifies options for controlling
// advanced machine features. Structure is documented below.
func (o ClusterNodeConfigPtrOutput) AdvancedMachineFeatures() ClusterNodeConfigAdvancedMachineFeaturesPtrOutput {
	return o.ApplyT(func(v *ClusterNodeConfig) *ClusterNodeConfigAdvancedMachineFeatures {
		if v == nil {
			return nil
		}
		return v.AdvancedMachineFeatures
	}).(ClusterNodeConfigAdvancedMachineFeaturesPtrOutput)
}

// The Customer Managed Encryption Key used to encrypt the boot disk attached to each node in the node pool. This should be of the form projects/[KEY_PROJECT_ID]/locations/[LOCATION]/keyRings/[RING_NAME]/cryptoKeys/[KEY_NAME]. For more information about protecting resources with Cloud KMS Keys please see: <https://cloud.google.com/compute/docs/disks/customer-managed-encryption>
func (o ClusterNodeConfigPtrOutput) BootDiskKmsKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNodeConfig) *string {
		if v == nil {
			return nil
		}
		return v.BootDiskKmsKey
	}).(pulumi.StringPtrOutput)
}

// Configuration for [Confidential Nodes](https://cloud.google.com/kubernetes-engine/docs/how-to/confidential-gke-nodes) feature. Structure is documented below documented below.
func (o ClusterNodeConfigPtrOutput) ConfidentialNodes() ClusterNodeConfigConfidentialNodesPtrOutput {
	return o.ApplyT(func(v *ClusterNodeConfig) *ClusterNodeConfigConfidentialNodes {
		if v == nil {
			return nil
		}
		return v.ConfidentialNodes
	}).(ClusterNodeConfigConfidentialNodesPtrOutput)
}

// Size of the disk attached to each node, specified
// in GB. The smallest allowed disk size is 10GB. Defaults to 100GB.
func (o ClusterNodeConfigPtrOutput) DiskSizeGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterNodeConfig) *int {
		if v == nil {
			return nil
		}
		return v.DiskSizeGb
	}).(pulumi.IntPtrOutput)
}

// Type of the disk attached to each node
// (e.g. 'pd-standard', 'pd-balanced' or 'pd-ssd'). If unspecified, the default disk type is 'pd-standard'
func (o ClusterNodeConfigPtrOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNodeConfig) *string {
		if v == nil {
			return nil
		}
		return v.DiskType
	}).(pulumi.StringPtrOutput)
}

// List of kubernetes taints applied to each node. Structure is documented above.
func (o ClusterNodeConfigPtrOutput) EffectiveTaints() ClusterNodeConfigEffectiveTaintArrayOutput {
	return o.ApplyT(func(v *ClusterNodeConfig) []ClusterNodeConfigEffectiveTaint {
		if v == nil {
			return nil
		}
		return v.EffectiveTaints
	}).(ClusterNodeConfigEffectiveTaintArrayOutput)
}

// Enabling Confidential Storage will create boot disk with confidential mode. It is disabled by default.
func (o ClusterNodeConfigPtrOutput) EnableConfidentialStorage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterNodeConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EnableConfidentialStorage
	}).(pulumi.BoolPtrOutput)
}

// Parameters for the ephemeral storage filesystem. If unspecified, ephemeral storage is backed by the boot disk. Structure is documented below.
func (o ClusterNodeConfigPtrOutput) EphemeralStorageConfig() ClusterNodeConfigEphemeralStorageConfigPtrOutput {
	return o.ApplyT(func(v *ClusterNodeConfig) *ClusterNodeConfigEphemeralStorageConfig {
		if v == nil {
			return nil
		}
		return v.EphemeralStorageConfig
	}).(ClusterNodeConfigEphemeralStorageConfigPtrOutput)
}

// Parameters for the ephemeral storage filesystem. If unspecified, ephemeral storage is backed by the boot disk. Structure is documented below.
func (o ClusterNodeConfigPtrOutput) EphemeralStorageLocalSsdConfig() ClusterNodeConfigEphemeralStorageLocalSsdConfigPtrOutput {
	return o.ApplyT(func(v *ClusterNodeConfig) *ClusterNodeConfigEphemeralStorageLocalSsdConfig {
		if v == nil {
			return nil
		}
		return v.EphemeralStorageLocalSsdConfig
	}).(ClusterNodeConfigEphemeralStorageLocalSsdConfigPtrOutput)
}

// Parameters for the NCCL Fast Socket feature. If unspecified, NCCL Fast Socket will not be enabled on the node pool.
// Node Pool must enable gvnic.
// GKE version 1.25.2-gke.1700 or later.
// Structure is documented below.
func (o ClusterNodeConfigPtrOutput) FastSocket() ClusterNodeConfigFastSocketPtrOutput {
	return o.ApplyT(func(v *ClusterNodeConfig) *ClusterNodeConfigFastSocket {
		if v == nil {
			return nil
		}
		return v.FastSocket
	}).(ClusterNodeConfigFastSocketPtrOutput)
}

// Parameters for the Google Container Filesystem (GCFS).
// If unspecified, GCFS will not be enabled on the node pool. When enabling this feature you must specify `imageType = "COS_CONTAINERD"` and `nodeVersion` from GKE versions 1.19 or later to use it.
// For GKE versions 1.19, 1.20, and 1.21, the recommended minimum `nodeVersion` would be 1.19.15-gke.1300, 1.20.11-gke.1300, and 1.21.5-gke.1300 respectively.
// A `machineType` that has more than 16 GiB of memory is also recommended.
// GCFS must be enabled in order to use [image streaming](https://cloud.google.com/kubernetes-engine/docs/how-to/image-streaming).
// Structure is documented below.
func (o ClusterNodeConfigPtrOutput) GcfsConfig() ClusterNodeConfigGcfsConfigPtrOutput {
	return o.ApplyT(func(v *ClusterNodeConfig) *ClusterNodeConfigGcfsConfig {
		if v == nil {
			return nil
		}
		return v.GcfsConfig
	}).(ClusterNodeConfigGcfsConfigPtrOutput)
}

// List of the type and count of accelerator cards attached to the instance.
// Structure documented below.
func (o ClusterNodeConfigPtrOutput) GuestAccelerators() ClusterNodeConfigGuestAcceleratorArrayOutput {
	return o.ApplyT(func(v *ClusterNodeConfig) []ClusterNodeConfigGuestAccelerator {
		if v == nil {
			return nil
		}
		return v.GuestAccelerators
	}).(ClusterNodeConfigGuestAcceleratorArrayOutput)
}

// Google Virtual NIC (gVNIC) is a virtual network interface.
// Installing the gVNIC driver allows for more efficient traffic transmission across the Google network infrastructure.
// gVNIC is an alternative to the virtIO-based ethernet driver. GKE nodes must use a Container-Optimized OS node image.
// GKE node version 1.15.11-gke.15 or later
// Structure is documented below.
func (o ClusterNodeConfigPtrOutput) Gvnic() ClusterNodeConfigGvnicPtrOutput {
	return o.ApplyT(func(v *ClusterNodeConfig) *ClusterNodeConfigGvnic {
		if v == nil {
			return nil
		}
		return v.Gvnic
	}).(ClusterNodeConfigGvnicPtrOutput)
}

// The maintenance policy for the hosts on which the GKE VMs run on.
func (o ClusterNodeConfigPtrOutput) HostMaintenancePolicy() ClusterNodeConfigHostMaintenancePolicyPtrOutput {
	return o.ApplyT(func(v *ClusterNodeConfig) *ClusterNodeConfigHostMaintenancePolicy {
		if v == nil {
			return nil
		}
		return v.HostMaintenancePolicy
	}).(ClusterNodeConfigHostMaintenancePolicyPtrOutput)
}

// The image type to use for this node. Note that changing the image type
// will delete and recreate all nodes in the node pool.
func (o ClusterNodeConfigPtrOutput) ImageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNodeConfig) *string {
		if v == nil {
			return nil
		}
		return v.ImageType
	}).(pulumi.StringPtrOutput)
}

// Kubelet configuration, currently supported attributes can be found [here](https://cloud.google.com/sdk/gcloud/reference/beta/container/node-pools/create#--system-config-from-file).
// Structure is documented below.
func (o ClusterNodeConfigPtrOutput) KubeletConfig() ClusterNodeConfigKubeletConfigPtrOutput {
	return o.ApplyT(func(v *ClusterNodeConfig) *ClusterNodeConfigKubeletConfig {
		if v == nil {
			return nil
		}
		return v.KubeletConfig
	}).(ClusterNodeConfigKubeletConfigPtrOutput)
}

// The Kubernetes labels (key/value pairs) to be applied to each node. The kubernetes.io/ and k8s.io/ prefixes are
// reserved by Kubernetes Core components and cannot be specified.
func (o ClusterNodeConfigPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ClusterNodeConfig) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// Parameters that can be configured on Linux nodes. Structure is documented below.
func (o ClusterNodeConfigPtrOutput) LinuxNodeConfig() ClusterNodeConfigLinuxNodeConfigPtrOutput {
	return o.ApplyT(func(v *ClusterNodeConfig) *ClusterNodeConfigLinuxNodeConfig {
		if v == nil {
			return nil
		}
		return v.LinuxNodeConfig
	}).(ClusterNodeConfigLinuxNodeConfigPtrOutput)
}

// Parameters for the local NVMe SSDs. Structure is documented below.
func (o ClusterNodeConfigPtrOutput) LocalNvmeSsdBlockConfig() ClusterNodeConfigLocalNvmeSsdBlockConfigPtrOutput {
	return o.ApplyT(func(v *ClusterNodeConfig) *ClusterNodeConfigLocalNvmeSsdBlockConfig {
		if v == nil {
			return nil
		}
		return v.LocalNvmeSsdBlockConfig
	}).(ClusterNodeConfigLocalNvmeSsdBlockConfigPtrOutput)
}

// The amount of local SSD disks that will be
// attached to each cluster node. Defaults to 0.
func (o ClusterNodeConfigPtrOutput) LocalSsdCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterNodeConfig) *int {
		if v == nil {
			return nil
		}
		return v.LocalSsdCount
	}).(pulumi.IntPtrOutput)
}

// Parameter for specifying the type of logging agent used in a node pool. This will override any cluster-wide default value. Valid values include DEFAULT and MAX_THROUGHPUT. See [Increasing logging agent throughput](https://cloud.google.com/stackdriver/docs/solutions/gke/managing-logs#throughput) for more information.
func (o ClusterNodeConfigPtrOutput) LoggingVariant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNodeConfig) *string {
		if v == nil {
			return nil
		}
		return v.LoggingVariant
	}).(pulumi.StringPtrOutput)
}

// The name of a Google Compute Engine machine type.
// Defaults to `e2-medium`. To create a custom machine type, value should be set as specified
// [here](https://cloud.google.com/compute/docs/reference/latest/instances#machineType).
func (o ClusterNodeConfigPtrOutput) MachineType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNodeConfig) *string {
		if v == nil {
			return nil
		}
		return v.MachineType
	}).(pulumi.StringPtrOutput)
}

// The metadata key/value pairs assigned to instances in
// the cluster. From GKE `1.12` onwards, `disable-legacy-endpoints` is set to
// `true` by the API; if `metadata` is set but that default value is not
// included, the provider will attempt to unset the value. To avoid this, set the
// value in your config.
func (o ClusterNodeConfigPtrOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ClusterNodeConfig) map[string]string {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(pulumi.StringMapOutput)
}

// Minimum CPU platform to be used by this instance.
// The instance may be scheduled on the specified or newer CPU platform. Applicable
// values are the friendly names of CPU platforms, such as `Intel Haswell`. See the
// [official documentation](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
// for more information.
func (o ClusterNodeConfigPtrOutput) MinCpuPlatform() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNodeConfig) *string {
		if v == nil {
			return nil
		}
		return v.MinCpuPlatform
	}).(pulumi.StringPtrOutput)
}

// Setting this field will assign instances of this pool to run on the specified node group. This is useful for running workloads on [sole tenant nodes](https://cloud.google.com/compute/docs/nodes/sole-tenant-nodes).
func (o ClusterNodeConfigPtrOutput) NodeGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNodeConfig) *string {
		if v == nil {
			return nil
		}
		return v.NodeGroup
	}).(pulumi.StringPtrOutput)
}

// The set of Google API scopes to be made available
// on all of the node VMs under the "default" service account.
// Use the "https://www.googleapis.com/auth/cloud-platform" scope to grant access to all APIs. It is recommended that you set `serviceAccount` to a non-default service account and grant IAM roles to that service account for only the resources that it needs.
//
// See the [official documentation](https://cloud.google.com/kubernetes-engine/docs/how-to/access-scopes) for information on migrating off of legacy access scopes.
func (o ClusterNodeConfigPtrOutput) OauthScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterNodeConfig) []string {
		if v == nil {
			return nil
		}
		return v.OauthScopes
	}).(pulumi.StringArrayOutput)
}

// A boolean that represents whether or not the underlying node VMs
// are preemptible. See the [official documentation](https://cloud.google.com/container-engine/docs/preemptible-vm)
// for more information. Defaults to false.
func (o ClusterNodeConfigPtrOutput) Preemptible() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterNodeConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Preemptible
	}).(pulumi.BoolPtrOutput)
}

// The configuration of the desired reservation which instances could take capacity from. Structure is documented below.
func (o ClusterNodeConfigPtrOutput) ReservationAffinity() ClusterNodeConfigReservationAffinityPtrOutput {
	return o.ApplyT(func(v *ClusterNodeConfig) *ClusterNodeConfigReservationAffinity {
		if v == nil {
			return nil
		}
		return v.ReservationAffinity
	}).(ClusterNodeConfigReservationAffinityPtrOutput)
}

// The GCP labels (key/value pairs) to be applied to each node. Refer [here](https://cloud.google.com/kubernetes-engine/docs/how-to/creating-managing-labels)
// for how these labels are applied to clusters, node pools and nodes.
func (o ClusterNodeConfigPtrOutput) ResourceLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ClusterNodeConfig) map[string]string {
		if v == nil {
			return nil
		}
		return v.ResourceLabels
	}).(pulumi.StringMapOutput)
}

// A map of resource manager tag keys and values to be attached to the nodes for managing Compute Engine firewalls using Network Firewall Policies. Tags must be according to specifications found [here](https://cloud.google.com/vpc/docs/tags-firewalls-overview#specifications). A maximum of 5 tag key-value pairs can be specified. Existing tags will be replaced with new values. Tags must be in one of the following formats ([KEY]=[VALUE]) 1. `tagKeys/{tag_key_id}=tagValues/{tag_value_id}` 2. `{org_id}/{tag_key_name}={tag_value_name}` 3. `{project_id}/{tag_key_name}={tag_value_name}`.
func (o ClusterNodeConfigPtrOutput) ResourceManagerTags() pulumi.MapOutput {
	return o.ApplyT(func(v *ClusterNodeConfig) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.ResourceManagerTags
	}).(pulumi.MapOutput)
}

// Sandbox configuration for this node.
func (o ClusterNodeConfigPtrOutput) SandboxConfig() ClusterNodeConfigSandboxConfigPtrOutput {
	return o.ApplyT(func(v *ClusterNodeConfig) *ClusterNodeConfigSandboxConfig {
		if v == nil {
			return nil
		}
		return v.SandboxConfig
	}).(ClusterNodeConfigSandboxConfigPtrOutput)
}

// Parameters for secondary boot disks to preload container images and data on new nodes. Structure is documented below. `gcfsConfig` must be `enabled=true` for this feature to work. `minMasterVersion` must also be set to use GKE 1.28.3-gke.106700 or later versions.
func (o ClusterNodeConfigPtrOutput) SecondaryBootDisks() ClusterNodeConfigSecondaryBootDiskArrayOutput {
	return o.ApplyT(func(v *ClusterNodeConfig) []ClusterNodeConfigSecondaryBootDisk {
		if v == nil {
			return nil
		}
		return v.SecondaryBootDisks
	}).(ClusterNodeConfigSecondaryBootDiskArrayOutput)
}

// The service account to be used by the Node VMs.
// If not specified, the "default" service account is used.
func (o ClusterNodeConfigPtrOutput) ServiceAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNodeConfig) *string {
		if v == nil {
			return nil
		}
		return v.ServiceAccount
	}).(pulumi.StringPtrOutput)
}

// Shielded Instance options. Structure is documented below.
func (o ClusterNodeConfigPtrOutput) ShieldedInstanceConfig() ClusterNodeConfigShieldedInstanceConfigPtrOutput {
	return o.ApplyT(func(v *ClusterNodeConfig) *ClusterNodeConfigShieldedInstanceConfig {
		if v == nil {
			return nil
		}
		return v.ShieldedInstanceConfig
	}).(ClusterNodeConfigShieldedInstanceConfigPtrOutput)
}

// Allows specifying multiple [node affinities](https://cloud.google.com/compute/docs/nodes/sole-tenant-nodes#node_affinity_and_anti-affinity) useful for running workloads on [sole tenant nodes](https://cloud.google.com/kubernetes-engine/docs/how-to/sole-tenancy). `nodeAffinity` structure is documented below.
func (o ClusterNodeConfigPtrOutput) SoleTenantConfig() ClusterNodeConfigSoleTenantConfigPtrOutput {
	return o.ApplyT(func(v *ClusterNodeConfig) *ClusterNodeConfigSoleTenantConfig {
		if v == nil {
			return nil
		}
		return v.SoleTenantConfig
	}).(ClusterNodeConfigSoleTenantConfigPtrOutput)
}

// A boolean that represents whether the underlying node VMs are spot.
// See the [official documentation](https://cloud.google.com/kubernetes-engine/docs/concepts/spot-vms)
// for more information. Defaults to false.
func (o ClusterNodeConfigPtrOutput) Spot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterNodeConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Spot
	}).(pulumi.BoolPtrOutput)
}

// The list of instance tags applied to all nodes. Tags are used to identify
// valid sources or targets for network firewalls.
func (o ClusterNodeConfigPtrOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterNodeConfig) []string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringArrayOutput)
}

// A list of [Kubernetes taints](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
// to apply to nodes. GKE's API can only set this field on cluster creation.
// However, GKE will add taints to your nodes if you enable certain features such
// as GPUs. If this field is set, any diffs on this field will cause the provider to
// recreate the underlying resource. Taint values can be updated safely in
// Kubernetes (eg. through `kubectl`), and it's recommended that you do not use
// this field to manage taints. If you do, `lifecycle.ignore_changes` is
// recommended. Structure is documented below.
func (o ClusterNodeConfigPtrOutput) Taints() ClusterNodeConfigTaintArrayOutput {
	return o.ApplyT(func(v *ClusterNodeConfig) []ClusterNodeConfigTaint {
		if v == nil {
			return nil
		}
		return v.Taints
	}).(ClusterNodeConfigTaintArrayOutput)
}

// Metadata configuration to expose to workloads on the node pool.
// Structure is documented below.
func (o ClusterNodeConfigPtrOutput) WorkloadMetadataConfig() ClusterNodeConfigWorkloadMetadataConfigPtrOutput {
	return o.ApplyT(func(v *ClusterNodeConfig) *ClusterNodeConfigWorkloadMetadataConfig {
		if v == nil {
			return nil
		}
		return v.WorkloadMetadataConfig
	}).(ClusterNodeConfigWorkloadMetadataConfigPtrOutput)
}

type ClusterNodeConfigAdvancedMachineFeatures struct {
	// Defines whether the instance should have nested virtualization enabled. Defaults to false.
	EnableNestedVirtualization *bool `pulumi:"enableNestedVirtualization"`
	// The number of threads per physical core. To disable simultaneous multithreading (SMT) set this to 1. If unset, the maximum number of threads supported per core by the underlying processor is assumed.
	ThreadsPerCore int `pulumi:"threadsPerCore"`
}

// ClusterNodeConfigAdvancedMachineFeaturesInput is an input type that accepts ClusterNodeConfigAdvancedMachineFeaturesArgs and ClusterNodeConfigAdvancedMachineFeaturesOutput values.
// You can construct a concrete instance of `ClusterNodeConfigAdvancedMachineFeaturesInput` via:
//
//	ClusterNodeConfigAdvancedMachineFeaturesArgs{...}
type ClusterNodeConfigAdvancedMachineFeaturesInput interface {
	pulumi.Input

	ToClusterNodeConfigAdvancedMachineFeaturesOutput() ClusterNodeConfigAdvancedMachineFeaturesOutput
	ToClusterNodeConfigAdvancedMachineFeaturesOutputWithContext(context.Context) ClusterNodeConfigAdvancedMachineFeaturesOutput
}

type ClusterNodeConfigAdvancedMachineFeaturesArgs struct {
	// Defines whether the instance should have nested virtualization enabled. Defaults to false.
	EnableNestedVirtualization pulumi.BoolPtrInput `pulumi:"enableNestedVirtualization"`
	// The number of threads per physical core. To disable simultaneous multithreading (SMT) set this to 1. If unset, the maximum number of threads supported per core by the underlying processor is assumed.
	ThreadsPerCore pulumi.IntInput `pulumi:"threadsPerCore"`
}

func (ClusterNodeConfigAdvancedMachineFeaturesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigAdvancedMachineFeatures)(nil)).Elem()
}

func (i ClusterNodeConfigAdvancedMachineFeaturesArgs) ToClusterNodeConfigAdvancedMachineFeaturesOutput() ClusterNodeConfigAdvancedMachineFeaturesOutput {
	return i.ToClusterNodeConfigAdvancedMachineFeaturesOutputWithContext(context.Background())
}

func (i ClusterNodeConfigAdvancedMachineFeaturesArgs) ToClusterNodeConfigAdvancedMachineFeaturesOutputWithContext(ctx context.Context) ClusterNodeConfigAdvancedMachineFeaturesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigAdvancedMachineFeaturesOutput)
}

func (i ClusterNodeConfigAdvancedMachineFeaturesArgs) ToClusterNodeConfigAdvancedMachineFeaturesPtrOutput() ClusterNodeConfigAdvancedMachineFeaturesPtrOutput {
	return i.ToClusterNodeConfigAdvancedMachineFeaturesPtrOutputWithContext(context.Background())
}

func (i ClusterNodeConfigAdvancedMachineFeaturesArgs) ToClusterNodeConfigAdvancedMachineFeaturesPtrOutputWithContext(ctx context.Context) ClusterNodeConfigAdvancedMachineFeaturesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigAdvancedMachineFeaturesOutput).ToClusterNodeConfigAdvancedMachineFeaturesPtrOutputWithContext(ctx)
}

// ClusterNodeConfigAdvancedMachineFeaturesPtrInput is an input type that accepts ClusterNodeConfigAdvancedMachineFeaturesArgs, ClusterNodeConfigAdvancedMachineFeaturesPtr and ClusterNodeConfigAdvancedMachineFeaturesPtrOutput values.
// You can construct a concrete instance of `ClusterNodeConfigAdvancedMachineFeaturesPtrInput` via:
//
//	        ClusterNodeConfigAdvancedMachineFeaturesArgs{...}
//
//	or:
//
//	        nil
type ClusterNodeConfigAdvancedMachineFeaturesPtrInput interface {
	pulumi.Input

	ToClusterNodeConfigAdvancedMachineFeaturesPtrOutput() ClusterNodeConfigAdvancedMachineFeaturesPtrOutput
	ToClusterNodeConfigAdvancedMachineFeaturesPtrOutputWithContext(context.Context) ClusterNodeConfigAdvancedMachineFeaturesPtrOutput
}

type clusterNodeConfigAdvancedMachineFeaturesPtrType ClusterNodeConfigAdvancedMachineFeaturesArgs

func ClusterNodeConfigAdvancedMachineFeaturesPtr(v *ClusterNodeConfigAdvancedMachineFeaturesArgs) ClusterNodeConfigAdvancedMachineFeaturesPtrInput {
	return (*clusterNodeConfigAdvancedMachineFeaturesPtrType)(v)
}

func (*clusterNodeConfigAdvancedMachineFeaturesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodeConfigAdvancedMachineFeatures)(nil)).Elem()
}

func (i *clusterNodeConfigAdvancedMachineFeaturesPtrType) ToClusterNodeConfigAdvancedMachineFeaturesPtrOutput() ClusterNodeConfigAdvancedMachineFeaturesPtrOutput {
	return i.ToClusterNodeConfigAdvancedMachineFeaturesPtrOutputWithContext(context.Background())
}

func (i *clusterNodeConfigAdvancedMachineFeaturesPtrType) ToClusterNodeConfigAdvancedMachineFeaturesPtrOutputWithContext(ctx context.Context) ClusterNodeConfigAdvancedMachineFeaturesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigAdvancedMachineFeaturesPtrOutput)
}

type ClusterNodeConfigAdvancedMachineFeaturesOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigAdvancedMachineFeaturesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigAdvancedMachineFeatures)(nil)).Elem()
}

func (o ClusterNodeConfigAdvancedMachineFeaturesOutput) ToClusterNodeConfigAdvancedMachineFeaturesOutput() ClusterNodeConfigAdvancedMachineFeaturesOutput {
	return o
}

func (o ClusterNodeConfigAdvancedMachineFeaturesOutput) ToClusterNodeConfigAdvancedMachineFeaturesOutputWithContext(ctx context.Context) ClusterNodeConfigAdvancedMachineFeaturesOutput {
	return o
}

func (o ClusterNodeConfigAdvancedMachineFeaturesOutput) ToClusterNodeConfigAdvancedMachineFeaturesPtrOutput() ClusterNodeConfigAdvancedMachineFeaturesPtrOutput {
	return o.ToClusterNodeConfigAdvancedMachineFeaturesPtrOutputWithContext(context.Background())
}

func (o ClusterNodeConfigAdvancedMachineFeaturesOutput) ToClusterNodeConfigAdvancedMachineFeaturesPtrOutputWithContext(ctx context.Context) ClusterNodeConfigAdvancedMachineFeaturesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterNodeConfigAdvancedMachineFeatures) *ClusterNodeConfigAdvancedMachineFeatures {
		return &v
	}).(ClusterNodeConfigAdvancedMachineFeaturesPtrOutput)
}

// Defines whether the instance should have nested virtualization enabled. Defaults to false.
func (o ClusterNodeConfigAdvancedMachineFeaturesOutput) EnableNestedVirtualization() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfigAdvancedMachineFeatures) *bool { return v.EnableNestedVirtualization }).(pulumi.BoolPtrOutput)
}

// The number of threads per physical core. To disable simultaneous multithreading (SMT) set this to 1. If unset, the maximum number of threads supported per core by the underlying processor is assumed.
func (o ClusterNodeConfigAdvancedMachineFeaturesOutput) ThreadsPerCore() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterNodeConfigAdvancedMachineFeatures) int { return v.ThreadsPerCore }).(pulumi.IntOutput)
}

type ClusterNodeConfigAdvancedMachineFeaturesPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigAdvancedMachineFeaturesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodeConfigAdvancedMachineFeatures)(nil)).Elem()
}

func (o ClusterNodeConfigAdvancedMachineFeaturesPtrOutput) ToClusterNodeConfigAdvancedMachineFeaturesPtrOutput() ClusterNodeConfigAdvancedMachineFeaturesPtrOutput {
	return o
}

func (o ClusterNodeConfigAdvancedMachineFeaturesPtrOutput) ToClusterNodeConfigAdvancedMachineFeaturesPtrOutputWithContext(ctx context.Context) ClusterNodeConfigAdvancedMachineFeaturesPtrOutput {
	return o
}

func (o ClusterNodeConfigAdvancedMachineFeaturesPtrOutput) Elem() ClusterNodeConfigAdvancedMachineFeaturesOutput {
	return o.ApplyT(func(v *ClusterNodeConfigAdvancedMachineFeatures) ClusterNodeConfigAdvancedMachineFeatures {
		if v != nil {
			return *v
		}
		var ret ClusterNodeConfigAdvancedMachineFeatures
		return ret
	}).(ClusterNodeConfigAdvancedMachineFeaturesOutput)
}

// Defines whether the instance should have nested virtualization enabled. Defaults to false.
func (o ClusterNodeConfigAdvancedMachineFeaturesPtrOutput) EnableNestedVirtualization() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterNodeConfigAdvancedMachineFeatures) *bool {
		if v == nil {
			return nil
		}
		return v.EnableNestedVirtualization
	}).(pulumi.BoolPtrOutput)
}

// The number of threads per physical core. To disable simultaneous multithreading (SMT) set this to 1. If unset, the maximum number of threads supported per core by the underlying processor is assumed.
func (o ClusterNodeConfigAdvancedMachineFeaturesPtrOutput) ThreadsPerCore() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterNodeConfigAdvancedMachineFeatures) *int {
		if v == nil {
			return nil
		}
		return &v.ThreadsPerCore
	}).(pulumi.IntPtrOutput)
}

type ClusterNodeConfigConfidentialNodes struct {
	// Enable Confidential GKE Nodes for this cluster, to
	// enforce encryption of data in-use.
	Enabled bool `pulumi:"enabled"`
}

// ClusterNodeConfigConfidentialNodesInput is an input type that accepts ClusterNodeConfigConfidentialNodesArgs and ClusterNodeConfigConfidentialNodesOutput values.
// You can construct a concrete instance of `ClusterNodeConfigConfidentialNodesInput` via:
//
//	ClusterNodeConfigConfidentialNodesArgs{...}
type ClusterNodeConfigConfidentialNodesInput interface {
	pulumi.Input

	ToClusterNodeConfigConfidentialNodesOutput() ClusterNodeConfigConfidentialNodesOutput
	ToClusterNodeConfigConfidentialNodesOutputWithContext(context.Context) ClusterNodeConfigConfidentialNodesOutput
}

type ClusterNodeConfigConfidentialNodesArgs struct {
	// Enable Confidential GKE Nodes for this cluster, to
	// enforce encryption of data in-use.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (ClusterNodeConfigConfidentialNodesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigConfidentialNodes)(nil)).Elem()
}

func (i ClusterNodeConfigConfidentialNodesArgs) ToClusterNodeConfigConfidentialNodesOutput() ClusterNodeConfigConfidentialNodesOutput {
	return i.ToClusterNodeConfigConfidentialNodesOutputWithContext(context.Background())
}

func (i ClusterNodeConfigConfidentialNodesArgs) ToClusterNodeConfigConfidentialNodesOutputWithContext(ctx context.Context) ClusterNodeConfigConfidentialNodesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigConfidentialNodesOutput)
}

func (i ClusterNodeConfigConfidentialNodesArgs) ToClusterNodeConfigConfidentialNodesPtrOutput() ClusterNodeConfigConfidentialNodesPtrOutput {
	return i.ToClusterNodeConfigConfidentialNodesPtrOutputWithContext(context.Background())
}

func (i ClusterNodeConfigConfidentialNodesArgs) ToClusterNodeConfigConfidentialNodesPtrOutputWithContext(ctx context.Context) ClusterNodeConfigConfidentialNodesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigConfidentialNodesOutput).ToClusterNodeConfigConfidentialNodesPtrOutputWithContext(ctx)
}

// ClusterNodeConfigConfidentialNodesPtrInput is an input type that accepts ClusterNodeConfigConfidentialNodesArgs, ClusterNodeConfigConfidentialNodesPtr and ClusterNodeConfigConfidentialNodesPtrOutput values.
// You can construct a concrete instance of `ClusterNodeConfigConfidentialNodesPtrInput` via:
//
//	        ClusterNodeConfigConfidentialNodesArgs{...}
//
//	or:
//
//	        nil
type ClusterNodeConfigConfidentialNodesPtrInput interface {
	pulumi.Input

	ToClusterNodeConfigConfidentialNodesPtrOutput() ClusterNodeConfigConfidentialNodesPtrOutput
	ToClusterNodeConfigConfidentialNodesPtrOutputWithContext(context.Context) ClusterNodeConfigConfidentialNodesPtrOutput
}

type clusterNodeConfigConfidentialNodesPtrType ClusterNodeConfigConfidentialNodesArgs

func ClusterNodeConfigConfidentialNodesPtr(v *ClusterNodeConfigConfidentialNodesArgs) ClusterNodeConfigConfidentialNodesPtrInput {
	return (*clusterNodeConfigConfidentialNodesPtrType)(v)
}

func (*clusterNodeConfigConfidentialNodesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodeConfigConfidentialNodes)(nil)).Elem()
}

func (i *clusterNodeConfigConfidentialNodesPtrType) ToClusterNodeConfigConfidentialNodesPtrOutput() ClusterNodeConfigConfidentialNodesPtrOutput {
	return i.ToClusterNodeConfigConfidentialNodesPtrOutputWithContext(context.Background())
}

func (i *clusterNodeConfigConfidentialNodesPtrType) ToClusterNodeConfigConfidentialNodesPtrOutputWithContext(ctx context.Context) ClusterNodeConfigConfidentialNodesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigConfidentialNodesPtrOutput)
}

type ClusterNodeConfigConfidentialNodesOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigConfidentialNodesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigConfidentialNodes)(nil)).Elem()
}

func (o ClusterNodeConfigConfidentialNodesOutput) ToClusterNodeConfigConfidentialNodesOutput() ClusterNodeConfigConfidentialNodesOutput {
	return o
}

func (o ClusterNodeConfigConfidentialNodesOutput) ToClusterNodeConfigConfidentialNodesOutputWithContext(ctx context.Context) ClusterNodeConfigConfidentialNodesOutput {
	return o
}

func (o ClusterNodeConfigConfidentialNodesOutput) ToClusterNodeConfigConfidentialNodesPtrOutput() ClusterNodeConfigConfidentialNodesPtrOutput {
	return o.ToClusterNodeConfigConfidentialNodesPtrOutputWithContext(context.Background())
}

func (o ClusterNodeConfigConfidentialNodesOutput) ToClusterNodeConfigConfidentialNodesPtrOutputWithContext(ctx context.Context) ClusterNodeConfigConfidentialNodesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterNodeConfigConfidentialNodes) *ClusterNodeConfigConfidentialNodes {
		return &v
	}).(ClusterNodeConfigConfidentialNodesPtrOutput)
}

// Enable Confidential GKE Nodes for this cluster, to
// enforce encryption of data in-use.
func (o ClusterNodeConfigConfidentialNodesOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterNodeConfigConfidentialNodes) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type ClusterNodeConfigConfidentialNodesPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigConfidentialNodesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodeConfigConfidentialNodes)(nil)).Elem()
}

func (o ClusterNodeConfigConfidentialNodesPtrOutput) ToClusterNodeConfigConfidentialNodesPtrOutput() ClusterNodeConfigConfidentialNodesPtrOutput {
	return o
}

func (o ClusterNodeConfigConfidentialNodesPtrOutput) ToClusterNodeConfigConfidentialNodesPtrOutputWithContext(ctx context.Context) ClusterNodeConfigConfidentialNodesPtrOutput {
	return o
}

func (o ClusterNodeConfigConfidentialNodesPtrOutput) Elem() ClusterNodeConfigConfidentialNodesOutput {
	return o.ApplyT(func(v *ClusterNodeConfigConfidentialNodes) ClusterNodeConfigConfidentialNodes {
		if v != nil {
			return *v
		}
		var ret ClusterNodeConfigConfidentialNodes
		return ret
	}).(ClusterNodeConfigConfidentialNodesOutput)
}

// Enable Confidential GKE Nodes for this cluster, to
// enforce encryption of data in-use.
func (o ClusterNodeConfigConfidentialNodesPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterNodeConfigConfidentialNodes) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type ClusterNodeConfigEffectiveTaint struct {
	// Effect for taint.
	Effect *string `pulumi:"effect"`
	// Key for taint.
	Key *string `pulumi:"key"`
	// Value for taint.
	Value *string `pulumi:"value"`
}

// ClusterNodeConfigEffectiveTaintInput is an input type that accepts ClusterNodeConfigEffectiveTaintArgs and ClusterNodeConfigEffectiveTaintOutput values.
// You can construct a concrete instance of `ClusterNodeConfigEffectiveTaintInput` via:
//
//	ClusterNodeConfigEffectiveTaintArgs{...}
type ClusterNodeConfigEffectiveTaintInput interface {
	pulumi.Input

	ToClusterNodeConfigEffectiveTaintOutput() ClusterNodeConfigEffectiveTaintOutput
	ToClusterNodeConfigEffectiveTaintOutputWithContext(context.Context) ClusterNodeConfigEffectiveTaintOutput
}

type ClusterNodeConfigEffectiveTaintArgs struct {
	// Effect for taint.
	Effect pulumi.StringPtrInput `pulumi:"effect"`
	// Key for taint.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Value for taint.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ClusterNodeConfigEffectiveTaintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigEffectiveTaint)(nil)).Elem()
}

func (i ClusterNodeConfigEffectiveTaintArgs) ToClusterNodeConfigEffectiveTaintOutput() ClusterNodeConfigEffectiveTaintOutput {
	return i.ToClusterNodeConfigEffectiveTaintOutputWithContext(context.Background())
}

func (i ClusterNodeConfigEffectiveTaintArgs) ToClusterNodeConfigEffectiveTaintOutputWithContext(ctx context.Context) ClusterNodeConfigEffectiveTaintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigEffectiveTaintOutput)
}

// ClusterNodeConfigEffectiveTaintArrayInput is an input type that accepts ClusterNodeConfigEffectiveTaintArray and ClusterNodeConfigEffectiveTaintArrayOutput values.
// You can construct a concrete instance of `ClusterNodeConfigEffectiveTaintArrayInput` via:
//
//	ClusterNodeConfigEffectiveTaintArray{ ClusterNodeConfigEffectiveTaintArgs{...} }
type ClusterNodeConfigEffectiveTaintArrayInput interface {
	pulumi.Input

	ToClusterNodeConfigEffectiveTaintArrayOutput() ClusterNodeConfigEffectiveTaintArrayOutput
	ToClusterNodeConfigEffectiveTaintArrayOutputWithContext(context.Context) ClusterNodeConfigEffectiveTaintArrayOutput
}

type ClusterNodeConfigEffectiveTaintArray []ClusterNodeConfigEffectiveTaintInput

func (ClusterNodeConfigEffectiveTaintArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodeConfigEffectiveTaint)(nil)).Elem()
}

func (i ClusterNodeConfigEffectiveTaintArray) ToClusterNodeConfigEffectiveTaintArrayOutput() ClusterNodeConfigEffectiveTaintArrayOutput {
	return i.ToClusterNodeConfigEffectiveTaintArrayOutputWithContext(context.Background())
}

func (i ClusterNodeConfigEffectiveTaintArray) ToClusterNodeConfigEffectiveTaintArrayOutputWithContext(ctx context.Context) ClusterNodeConfigEffectiveTaintArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigEffectiveTaintArrayOutput)
}

type ClusterNodeConfigEffectiveTaintOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigEffectiveTaintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigEffectiveTaint)(nil)).Elem()
}

func (o ClusterNodeConfigEffectiveTaintOutput) ToClusterNodeConfigEffectiveTaintOutput() ClusterNodeConfigEffectiveTaintOutput {
	return o
}

func (o ClusterNodeConfigEffectiveTaintOutput) ToClusterNodeConfigEffectiveTaintOutputWithContext(ctx context.Context) ClusterNodeConfigEffectiveTaintOutput {
	return o
}

// Effect for taint.
func (o ClusterNodeConfigEffectiveTaintOutput) Effect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfigEffectiveTaint) *string { return v.Effect }).(pulumi.StringPtrOutput)
}

// Key for taint.
func (o ClusterNodeConfigEffectiveTaintOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfigEffectiveTaint) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Value for taint.
func (o ClusterNodeConfigEffectiveTaintOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfigEffectiveTaint) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ClusterNodeConfigEffectiveTaintArrayOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigEffectiveTaintArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodeConfigEffectiveTaint)(nil)).Elem()
}

func (o ClusterNodeConfigEffectiveTaintArrayOutput) ToClusterNodeConfigEffectiveTaintArrayOutput() ClusterNodeConfigEffectiveTaintArrayOutput {
	return o
}

func (o ClusterNodeConfigEffectiveTaintArrayOutput) ToClusterNodeConfigEffectiveTaintArrayOutputWithContext(ctx context.Context) ClusterNodeConfigEffectiveTaintArrayOutput {
	return o
}

func (o ClusterNodeConfigEffectiveTaintArrayOutput) Index(i pulumi.IntInput) ClusterNodeConfigEffectiveTaintOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterNodeConfigEffectiveTaint {
		return vs[0].([]ClusterNodeConfigEffectiveTaint)[vs[1].(int)]
	}).(ClusterNodeConfigEffectiveTaintOutput)
}

type ClusterNodeConfigEphemeralStorageConfig struct {
	// Number of local SSDs to use to back ephemeral storage. Uses NVMe interfaces. Each local SSD is 375 GB in size. If zero, it means to disable using local SSDs as ephemeral storage.
	LocalSsdCount int `pulumi:"localSsdCount"`
}

// ClusterNodeConfigEphemeralStorageConfigInput is an input type that accepts ClusterNodeConfigEphemeralStorageConfigArgs and ClusterNodeConfigEphemeralStorageConfigOutput values.
// You can construct a concrete instance of `ClusterNodeConfigEphemeralStorageConfigInput` via:
//
//	ClusterNodeConfigEphemeralStorageConfigArgs{...}
type ClusterNodeConfigEphemeralStorageConfigInput interface {
	pulumi.Input

	ToClusterNodeConfigEphemeralStorageConfigOutput() ClusterNodeConfigEphemeralStorageConfigOutput
	ToClusterNodeConfigEphemeralStorageConfigOutputWithContext(context.Context) ClusterNodeConfigEphemeralStorageConfigOutput
}

type ClusterNodeConfigEphemeralStorageConfigArgs struct {
	// Number of local SSDs to use to back ephemeral storage. Uses NVMe interfaces. Each local SSD is 375 GB in size. If zero, it means to disable using local SSDs as ephemeral storage.
	LocalSsdCount pulumi.IntInput `pulumi:"localSsdCount"`
}

func (ClusterNodeConfigEphemeralStorageConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigEphemeralStorageConfig)(nil)).Elem()
}

func (i ClusterNodeConfigEphemeralStorageConfigArgs) ToClusterNodeConfigEphemeralStorageConfigOutput() ClusterNodeConfigEphemeralStorageConfigOutput {
	return i.ToClusterNodeConfigEphemeralStorageConfigOutputWithContext(context.Background())
}

func (i ClusterNodeConfigEphemeralStorageConfigArgs) ToClusterNodeConfigEphemeralStorageConfigOutputWithContext(ctx context.Context) ClusterNodeConfigEphemeralStorageConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigEphemeralStorageConfigOutput)
}

func (i ClusterNodeConfigEphemeralStorageConfigArgs) ToClusterNodeConfigEphemeralStorageConfigPtrOutput() ClusterNodeConfigEphemeralStorageConfigPtrOutput {
	return i.ToClusterNodeConfigEphemeralStorageConfigPtrOutputWithContext(context.Background())
}

func (i ClusterNodeConfigEphemeralStorageConfigArgs) ToClusterNodeConfigEphemeralStorageConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigEphemeralStorageConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigEphemeralStorageConfigOutput).ToClusterNodeConfigEphemeralStorageConfigPtrOutputWithContext(ctx)
}

// ClusterNodeConfigEphemeralStorageConfigPtrInput is an input type that accepts ClusterNodeConfigEphemeralStorageConfigArgs, ClusterNodeConfigEphemeralStorageConfigPtr and ClusterNodeConfigEphemeralStorageConfigPtrOutput values.
// You can construct a concrete instance of `ClusterNodeConfigEphemeralStorageConfigPtrInput` via:
//
//	        ClusterNodeConfigEphemeralStorageConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterNodeConfigEphemeralStorageConfigPtrInput interface {
	pulumi.Input

	ToClusterNodeConfigEphemeralStorageConfigPtrOutput() ClusterNodeConfigEphemeralStorageConfigPtrOutput
	ToClusterNodeConfigEphemeralStorageConfigPtrOutputWithContext(context.Context) ClusterNodeConfigEphemeralStorageConfigPtrOutput
}

type clusterNodeConfigEphemeralStorageConfigPtrType ClusterNodeConfigEphemeralStorageConfigArgs

func ClusterNodeConfigEphemeralStorageConfigPtr(v *ClusterNodeConfigEphemeralStorageConfigArgs) ClusterNodeConfigEphemeralStorageConfigPtrInput {
	return (*clusterNodeConfigEphemeralStorageConfigPtrType)(v)
}

func (*clusterNodeConfigEphemeralStorageConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodeConfigEphemeralStorageConfig)(nil)).Elem()
}

func (i *clusterNodeConfigEphemeralStorageConfigPtrType) ToClusterNodeConfigEphemeralStorageConfigPtrOutput() ClusterNodeConfigEphemeralStorageConfigPtrOutput {
	return i.ToClusterNodeConfigEphemeralStorageConfigPtrOutputWithContext(context.Background())
}

func (i *clusterNodeConfigEphemeralStorageConfigPtrType) ToClusterNodeConfigEphemeralStorageConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigEphemeralStorageConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigEphemeralStorageConfigPtrOutput)
}

type ClusterNodeConfigEphemeralStorageConfigOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigEphemeralStorageConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigEphemeralStorageConfig)(nil)).Elem()
}

func (o ClusterNodeConfigEphemeralStorageConfigOutput) ToClusterNodeConfigEphemeralStorageConfigOutput() ClusterNodeConfigEphemeralStorageConfigOutput {
	return o
}

func (o ClusterNodeConfigEphemeralStorageConfigOutput) ToClusterNodeConfigEphemeralStorageConfigOutputWithContext(ctx context.Context) ClusterNodeConfigEphemeralStorageConfigOutput {
	return o
}

func (o ClusterNodeConfigEphemeralStorageConfigOutput) ToClusterNodeConfigEphemeralStorageConfigPtrOutput() ClusterNodeConfigEphemeralStorageConfigPtrOutput {
	return o.ToClusterNodeConfigEphemeralStorageConfigPtrOutputWithContext(context.Background())
}

func (o ClusterNodeConfigEphemeralStorageConfigOutput) ToClusterNodeConfigEphemeralStorageConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigEphemeralStorageConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterNodeConfigEphemeralStorageConfig) *ClusterNodeConfigEphemeralStorageConfig {
		return &v
	}).(ClusterNodeConfigEphemeralStorageConfigPtrOutput)
}

// Number of local SSDs to use to back ephemeral storage. Uses NVMe interfaces. Each local SSD is 375 GB in size. If zero, it means to disable using local SSDs as ephemeral storage.
func (o ClusterNodeConfigEphemeralStorageConfigOutput) LocalSsdCount() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterNodeConfigEphemeralStorageConfig) int { return v.LocalSsdCount }).(pulumi.IntOutput)
}

type ClusterNodeConfigEphemeralStorageConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigEphemeralStorageConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodeConfigEphemeralStorageConfig)(nil)).Elem()
}

func (o ClusterNodeConfigEphemeralStorageConfigPtrOutput) ToClusterNodeConfigEphemeralStorageConfigPtrOutput() ClusterNodeConfigEphemeralStorageConfigPtrOutput {
	return o
}

func (o ClusterNodeConfigEphemeralStorageConfigPtrOutput) ToClusterNodeConfigEphemeralStorageConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigEphemeralStorageConfigPtrOutput {
	return o
}

func (o ClusterNodeConfigEphemeralStorageConfigPtrOutput) Elem() ClusterNodeConfigEphemeralStorageConfigOutput {
	return o.ApplyT(func(v *ClusterNodeConfigEphemeralStorageConfig) ClusterNodeConfigEphemeralStorageConfig {
		if v != nil {
			return *v
		}
		var ret ClusterNodeConfigEphemeralStorageConfig
		return ret
	}).(ClusterNodeConfigEphemeralStorageConfigOutput)
}

// Number of local SSDs to use to back ephemeral storage. Uses NVMe interfaces. Each local SSD is 375 GB in size. If zero, it means to disable using local SSDs as ephemeral storage.
func (o ClusterNodeConfigEphemeralStorageConfigPtrOutput) LocalSsdCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterNodeConfigEphemeralStorageConfig) *int {
		if v == nil {
			return nil
		}
		return &v.LocalSsdCount
	}).(pulumi.IntPtrOutput)
}

type ClusterNodeConfigEphemeralStorageLocalSsdConfig struct {
	// Number of local SSDs to use to back ephemeral storage. Uses NVMe interfaces. Each local SSD is 375 GB in size. If zero, it means to disable using local SSDs as ephemeral storage.
	LocalSsdCount int `pulumi:"localSsdCount"`
}

// ClusterNodeConfigEphemeralStorageLocalSsdConfigInput is an input type that accepts ClusterNodeConfigEphemeralStorageLocalSsdConfigArgs and ClusterNodeConfigEphemeralStorageLocalSsdConfigOutput values.
// You can construct a concrete instance of `ClusterNodeConfigEphemeralStorageLocalSsdConfigInput` via:
//
//	ClusterNodeConfigEphemeralStorageLocalSsdConfigArgs{...}
type ClusterNodeConfigEphemeralStorageLocalSsdConfigInput interface {
	pulumi.Input

	ToClusterNodeConfigEphemeralStorageLocalSsdConfigOutput() ClusterNodeConfigEphemeralStorageLocalSsdConfigOutput
	ToClusterNodeConfigEphemeralStorageLocalSsdConfigOutputWithContext(context.Context) ClusterNodeConfigEphemeralStorageLocalSsdConfigOutput
}

type ClusterNodeConfigEphemeralStorageLocalSsdConfigArgs struct {
	// Number of local SSDs to use to back ephemeral storage. Uses NVMe interfaces. Each local SSD is 375 GB in size. If zero, it means to disable using local SSDs as ephemeral storage.
	LocalSsdCount pulumi.IntInput `pulumi:"localSsdCount"`
}

func (ClusterNodeConfigEphemeralStorageLocalSsdConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigEphemeralStorageLocalSsdConfig)(nil)).Elem()
}

func (i ClusterNodeConfigEphemeralStorageLocalSsdConfigArgs) ToClusterNodeConfigEphemeralStorageLocalSsdConfigOutput() ClusterNodeConfigEphemeralStorageLocalSsdConfigOutput {
	return i.ToClusterNodeConfigEphemeralStorageLocalSsdConfigOutputWithContext(context.Background())
}

func (i ClusterNodeConfigEphemeralStorageLocalSsdConfigArgs) ToClusterNodeConfigEphemeralStorageLocalSsdConfigOutputWithContext(ctx context.Context) ClusterNodeConfigEphemeralStorageLocalSsdConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigEphemeralStorageLocalSsdConfigOutput)
}

func (i ClusterNodeConfigEphemeralStorageLocalSsdConfigArgs) ToClusterNodeConfigEphemeralStorageLocalSsdConfigPtrOutput() ClusterNodeConfigEphemeralStorageLocalSsdConfigPtrOutput {
	return i.ToClusterNodeConfigEphemeralStorageLocalSsdConfigPtrOutputWithContext(context.Background())
}

func (i ClusterNodeConfigEphemeralStorageLocalSsdConfigArgs) ToClusterNodeConfigEphemeralStorageLocalSsdConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigEphemeralStorageLocalSsdConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigEphemeralStorageLocalSsdConfigOutput).ToClusterNodeConfigEphemeralStorageLocalSsdConfigPtrOutputWithContext(ctx)
}

// ClusterNodeConfigEphemeralStorageLocalSsdConfigPtrInput is an input type that accepts ClusterNodeConfigEphemeralStorageLocalSsdConfigArgs, ClusterNodeConfigEphemeralStorageLocalSsdConfigPtr and ClusterNodeConfigEphemeralStorageLocalSsdConfigPtrOutput values.
// You can construct a concrete instance of `ClusterNodeConfigEphemeralStorageLocalSsdConfigPtrInput` via:
//
//	        ClusterNodeConfigEphemeralStorageLocalSsdConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterNodeConfigEphemeralStorageLocalSsdConfigPtrInput interface {
	pulumi.Input

	ToClusterNodeConfigEphemeralStorageLocalSsdConfigPtrOutput() ClusterNodeConfigEphemeralStorageLocalSsdConfigPtrOutput
	ToClusterNodeConfigEphemeralStorageLocalSsdConfigPtrOutputWithContext(context.Context) ClusterNodeConfigEphemeralStorageLocalSsdConfigPtrOutput
}

type clusterNodeConfigEphemeralStorageLocalSsdConfigPtrType ClusterNodeConfigEphemeralStorageLocalSsdConfigArgs

func ClusterNodeConfigEphemeralStorageLocalSsdConfigPtr(v *ClusterNodeConfigEphemeralStorageLocalSsdConfigArgs) ClusterNodeConfigEphemeralStorageLocalSsdConfigPtrInput {
	return (*clusterNodeConfigEphemeralStorageLocalSsdConfigPtrType)(v)
}

func (*clusterNodeConfigEphemeralStorageLocalSsdConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodeConfigEphemeralStorageLocalSsdConfig)(nil)).Elem()
}

func (i *clusterNodeConfigEphemeralStorageLocalSsdConfigPtrType) ToClusterNodeConfigEphemeralStorageLocalSsdConfigPtrOutput() ClusterNodeConfigEphemeralStorageLocalSsdConfigPtrOutput {
	return i.ToClusterNodeConfigEphemeralStorageLocalSsdConfigPtrOutputWithContext(context.Background())
}

func (i *clusterNodeConfigEphemeralStorageLocalSsdConfigPtrType) ToClusterNodeConfigEphemeralStorageLocalSsdConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigEphemeralStorageLocalSsdConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigEphemeralStorageLocalSsdConfigPtrOutput)
}

type ClusterNodeConfigEphemeralStorageLocalSsdConfigOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigEphemeralStorageLocalSsdConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigEphemeralStorageLocalSsdConfig)(nil)).Elem()
}

func (o ClusterNodeConfigEphemeralStorageLocalSsdConfigOutput) ToClusterNodeConfigEphemeralStorageLocalSsdConfigOutput() ClusterNodeConfigEphemeralStorageLocalSsdConfigOutput {
	return o
}

func (o ClusterNodeConfigEphemeralStorageLocalSsdConfigOutput) ToClusterNodeConfigEphemeralStorageLocalSsdConfigOutputWithContext(ctx context.Context) ClusterNodeConfigEphemeralStorageLocalSsdConfigOutput {
	return o
}

func (o ClusterNodeConfigEphemeralStorageLocalSsdConfigOutput) ToClusterNodeConfigEphemeralStorageLocalSsdConfigPtrOutput() ClusterNodeConfigEphemeralStorageLocalSsdConfigPtrOutput {
	return o.ToClusterNodeConfigEphemeralStorageLocalSsdConfigPtrOutputWithContext(context.Background())
}

func (o ClusterNodeConfigEphemeralStorageLocalSsdConfigOutput) ToClusterNodeConfigEphemeralStorageLocalSsdConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigEphemeralStorageLocalSsdConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterNodeConfigEphemeralStorageLocalSsdConfig) *ClusterNodeConfigEphemeralStorageLocalSsdConfig {
		return &v
	}).(ClusterNodeConfigEphemeralStorageLocalSsdConfigPtrOutput)
}

// Number of local SSDs to use to back ephemeral storage. Uses NVMe interfaces. Each local SSD is 375 GB in size. If zero, it means to disable using local SSDs as ephemeral storage.
func (o ClusterNodeConfigEphemeralStorageLocalSsdConfigOutput) LocalSsdCount() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterNodeConfigEphemeralStorageLocalSsdConfig) int { return v.LocalSsdCount }).(pulumi.IntOutput)
}

type ClusterNodeConfigEphemeralStorageLocalSsdConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigEphemeralStorageLocalSsdConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodeConfigEphemeralStorageLocalSsdConfig)(nil)).Elem()
}

func (o ClusterNodeConfigEphemeralStorageLocalSsdConfigPtrOutput) ToClusterNodeConfigEphemeralStorageLocalSsdConfigPtrOutput() ClusterNodeConfigEphemeralStorageLocalSsdConfigPtrOutput {
	return o
}

func (o ClusterNodeConfigEphemeralStorageLocalSsdConfigPtrOutput) ToClusterNodeConfigEphemeralStorageLocalSsdConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigEphemeralStorageLocalSsdConfigPtrOutput {
	return o
}

func (o ClusterNodeConfigEphemeralStorageLocalSsdConfigPtrOutput) Elem() ClusterNodeConfigEphemeralStorageLocalSsdConfigOutput {
	return o.ApplyT(func(v *ClusterNodeConfigEphemeralStorageLocalSsdConfig) ClusterNodeConfigEphemeralStorageLocalSsdConfig {
		if v != nil {
			return *v
		}
		var ret ClusterNodeConfigEphemeralStorageLocalSsdConfig
		return ret
	}).(ClusterNodeConfigEphemeralStorageLocalSsdConfigOutput)
}

// Number of local SSDs to use to back ephemeral storage. Uses NVMe interfaces. Each local SSD is 375 GB in size. If zero, it means to disable using local SSDs as ephemeral storage.
func (o ClusterNodeConfigEphemeralStorageLocalSsdConfigPtrOutput) LocalSsdCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterNodeConfigEphemeralStorageLocalSsdConfig) *int {
		if v == nil {
			return nil
		}
		return &v.LocalSsdCount
	}).(pulumi.IntPtrOutput)
}

type ClusterNodeConfigFastSocket struct {
	// Whether or not the NCCL Fast Socket is enabled
	Enabled bool `pulumi:"enabled"`
}

// ClusterNodeConfigFastSocketInput is an input type that accepts ClusterNodeConfigFastSocketArgs and ClusterNodeConfigFastSocketOutput values.
// You can construct a concrete instance of `ClusterNodeConfigFastSocketInput` via:
//
//	ClusterNodeConfigFastSocketArgs{...}
type ClusterNodeConfigFastSocketInput interface {
	pulumi.Input

	ToClusterNodeConfigFastSocketOutput() ClusterNodeConfigFastSocketOutput
	ToClusterNodeConfigFastSocketOutputWithContext(context.Context) ClusterNodeConfigFastSocketOutput
}

type ClusterNodeConfigFastSocketArgs struct {
	// Whether or not the NCCL Fast Socket is enabled
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (ClusterNodeConfigFastSocketArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigFastSocket)(nil)).Elem()
}

func (i ClusterNodeConfigFastSocketArgs) ToClusterNodeConfigFastSocketOutput() ClusterNodeConfigFastSocketOutput {
	return i.ToClusterNodeConfigFastSocketOutputWithContext(context.Background())
}

func (i ClusterNodeConfigFastSocketArgs) ToClusterNodeConfigFastSocketOutputWithContext(ctx context.Context) ClusterNodeConfigFastSocketOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigFastSocketOutput)
}

func (i ClusterNodeConfigFastSocketArgs) ToClusterNodeConfigFastSocketPtrOutput() ClusterNodeConfigFastSocketPtrOutput {
	return i.ToClusterNodeConfigFastSocketPtrOutputWithContext(context.Background())
}

func (i ClusterNodeConfigFastSocketArgs) ToClusterNodeConfigFastSocketPtrOutputWithContext(ctx context.Context) ClusterNodeConfigFastSocketPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigFastSocketOutput).ToClusterNodeConfigFastSocketPtrOutputWithContext(ctx)
}

// ClusterNodeConfigFastSocketPtrInput is an input type that accepts ClusterNodeConfigFastSocketArgs, ClusterNodeConfigFastSocketPtr and ClusterNodeConfigFastSocketPtrOutput values.
// You can construct a concrete instance of `ClusterNodeConfigFastSocketPtrInput` via:
//
//	        ClusterNodeConfigFastSocketArgs{...}
//
//	or:
//
//	        nil
type ClusterNodeConfigFastSocketPtrInput interface {
	pulumi.Input

	ToClusterNodeConfigFastSocketPtrOutput() ClusterNodeConfigFastSocketPtrOutput
	ToClusterNodeConfigFastSocketPtrOutputWithContext(context.Context) ClusterNodeConfigFastSocketPtrOutput
}

type clusterNodeConfigFastSocketPtrType ClusterNodeConfigFastSocketArgs

func ClusterNodeConfigFastSocketPtr(v *ClusterNodeConfigFastSocketArgs) ClusterNodeConfigFastSocketPtrInput {
	return (*clusterNodeConfigFastSocketPtrType)(v)
}

func (*clusterNodeConfigFastSocketPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodeConfigFastSocket)(nil)).Elem()
}

func (i *clusterNodeConfigFastSocketPtrType) ToClusterNodeConfigFastSocketPtrOutput() ClusterNodeConfigFastSocketPtrOutput {
	return i.ToClusterNodeConfigFastSocketPtrOutputWithContext(context.Background())
}

func (i *clusterNodeConfigFastSocketPtrType) ToClusterNodeConfigFastSocketPtrOutputWithContext(ctx context.Context) ClusterNodeConfigFastSocketPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigFastSocketPtrOutput)
}

type ClusterNodeConfigFastSocketOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigFastSocketOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigFastSocket)(nil)).Elem()
}

func (o ClusterNodeConfigFastSocketOutput) ToClusterNodeConfigFastSocketOutput() ClusterNodeConfigFastSocketOutput {
	return o
}

func (o ClusterNodeConfigFastSocketOutput) ToClusterNodeConfigFastSocketOutputWithContext(ctx context.Context) ClusterNodeConfigFastSocketOutput {
	return o
}

func (o ClusterNodeConfigFastSocketOutput) ToClusterNodeConfigFastSocketPtrOutput() ClusterNodeConfigFastSocketPtrOutput {
	return o.ToClusterNodeConfigFastSocketPtrOutputWithContext(context.Background())
}

func (o ClusterNodeConfigFastSocketOutput) ToClusterNodeConfigFastSocketPtrOutputWithContext(ctx context.Context) ClusterNodeConfigFastSocketPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterNodeConfigFastSocket) *ClusterNodeConfigFastSocket {
		return &v
	}).(ClusterNodeConfigFastSocketPtrOutput)
}

// Whether or not the NCCL Fast Socket is enabled
func (o ClusterNodeConfigFastSocketOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterNodeConfigFastSocket) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type ClusterNodeConfigFastSocketPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigFastSocketPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodeConfigFastSocket)(nil)).Elem()
}

func (o ClusterNodeConfigFastSocketPtrOutput) ToClusterNodeConfigFastSocketPtrOutput() ClusterNodeConfigFastSocketPtrOutput {
	return o
}

func (o ClusterNodeConfigFastSocketPtrOutput) ToClusterNodeConfigFastSocketPtrOutputWithContext(ctx context.Context) ClusterNodeConfigFastSocketPtrOutput {
	return o
}

func (o ClusterNodeConfigFastSocketPtrOutput) Elem() ClusterNodeConfigFastSocketOutput {
	return o.ApplyT(func(v *ClusterNodeConfigFastSocket) ClusterNodeConfigFastSocket {
		if v != nil {
			return *v
		}
		var ret ClusterNodeConfigFastSocket
		return ret
	}).(ClusterNodeConfigFastSocketOutput)
}

// Whether or not the NCCL Fast Socket is enabled
func (o ClusterNodeConfigFastSocketPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterNodeConfigFastSocket) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type ClusterNodeConfigGcfsConfig struct {
	// Whether or not the Google Container Filesystem (GCFS) is enabled
	Enabled bool `pulumi:"enabled"`
}

// ClusterNodeConfigGcfsConfigInput is an input type that accepts ClusterNodeConfigGcfsConfigArgs and ClusterNodeConfigGcfsConfigOutput values.
// You can construct a concrete instance of `ClusterNodeConfigGcfsConfigInput` via:
//
//	ClusterNodeConfigGcfsConfigArgs{...}
type ClusterNodeConfigGcfsConfigInput interface {
	pulumi.Input

	ToClusterNodeConfigGcfsConfigOutput() ClusterNodeConfigGcfsConfigOutput
	ToClusterNodeConfigGcfsConfigOutputWithContext(context.Context) ClusterNodeConfigGcfsConfigOutput
}

type ClusterNodeConfigGcfsConfigArgs struct {
	// Whether or not the Google Container Filesystem (GCFS) is enabled
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (ClusterNodeConfigGcfsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigGcfsConfig)(nil)).Elem()
}

func (i ClusterNodeConfigGcfsConfigArgs) ToClusterNodeConfigGcfsConfigOutput() ClusterNodeConfigGcfsConfigOutput {
	return i.ToClusterNodeConfigGcfsConfigOutputWithContext(context.Background())
}

func (i ClusterNodeConfigGcfsConfigArgs) ToClusterNodeConfigGcfsConfigOutputWithContext(ctx context.Context) ClusterNodeConfigGcfsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigGcfsConfigOutput)
}

func (i ClusterNodeConfigGcfsConfigArgs) ToClusterNodeConfigGcfsConfigPtrOutput() ClusterNodeConfigGcfsConfigPtrOutput {
	return i.ToClusterNodeConfigGcfsConfigPtrOutputWithContext(context.Background())
}

func (i ClusterNodeConfigGcfsConfigArgs) ToClusterNodeConfigGcfsConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigGcfsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigGcfsConfigOutput).ToClusterNodeConfigGcfsConfigPtrOutputWithContext(ctx)
}

// ClusterNodeConfigGcfsConfigPtrInput is an input type that accepts ClusterNodeConfigGcfsConfigArgs, ClusterNodeConfigGcfsConfigPtr and ClusterNodeConfigGcfsConfigPtrOutput values.
// You can construct a concrete instance of `ClusterNodeConfigGcfsConfigPtrInput` via:
//
//	        ClusterNodeConfigGcfsConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterNodeConfigGcfsConfigPtrInput interface {
	pulumi.Input

	ToClusterNodeConfigGcfsConfigPtrOutput() ClusterNodeConfigGcfsConfigPtrOutput
	ToClusterNodeConfigGcfsConfigPtrOutputWithContext(context.Context) ClusterNodeConfigGcfsConfigPtrOutput
}

type clusterNodeConfigGcfsConfigPtrType ClusterNodeConfigGcfsConfigArgs

func ClusterNodeConfigGcfsConfigPtr(v *ClusterNodeConfigGcfsConfigArgs) ClusterNodeConfigGcfsConfigPtrInput {
	return (*clusterNodeConfigGcfsConfigPtrType)(v)
}

func (*clusterNodeConfigGcfsConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodeConfigGcfsConfig)(nil)).Elem()
}

func (i *clusterNodeConfigGcfsConfigPtrType) ToClusterNodeConfigGcfsConfigPtrOutput() ClusterNodeConfigGcfsConfigPtrOutput {
	return i.ToClusterNodeConfigGcfsConfigPtrOutputWithContext(context.Background())
}

func (i *clusterNodeConfigGcfsConfigPtrType) ToClusterNodeConfigGcfsConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigGcfsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigGcfsConfigPtrOutput)
}

type ClusterNodeConfigGcfsConfigOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigGcfsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigGcfsConfig)(nil)).Elem()
}

func (o ClusterNodeConfigGcfsConfigOutput) ToClusterNodeConfigGcfsConfigOutput() ClusterNodeConfigGcfsConfigOutput {
	return o
}

func (o ClusterNodeConfigGcfsConfigOutput) ToClusterNodeConfigGcfsConfigOutputWithContext(ctx context.Context) ClusterNodeConfigGcfsConfigOutput {
	return o
}

func (o ClusterNodeConfigGcfsConfigOutput) ToClusterNodeConfigGcfsConfigPtrOutput() ClusterNodeConfigGcfsConfigPtrOutput {
	return o.ToClusterNodeConfigGcfsConfigPtrOutputWithContext(context.Background())
}

func (o ClusterNodeConfigGcfsConfigOutput) ToClusterNodeConfigGcfsConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigGcfsConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterNodeConfigGcfsConfig) *ClusterNodeConfigGcfsConfig {
		return &v
	}).(ClusterNodeConfigGcfsConfigPtrOutput)
}

// Whether or not the Google Container Filesystem (GCFS) is enabled
func (o ClusterNodeConfigGcfsConfigOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterNodeConfigGcfsConfig) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type ClusterNodeConfigGcfsConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigGcfsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodeConfigGcfsConfig)(nil)).Elem()
}

func (o ClusterNodeConfigGcfsConfigPtrOutput) ToClusterNodeConfigGcfsConfigPtrOutput() ClusterNodeConfigGcfsConfigPtrOutput {
	return o
}

func (o ClusterNodeConfigGcfsConfigPtrOutput) ToClusterNodeConfigGcfsConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigGcfsConfigPtrOutput {
	return o
}

func (o ClusterNodeConfigGcfsConfigPtrOutput) Elem() ClusterNodeConfigGcfsConfigOutput {
	return o.ApplyT(func(v *ClusterNodeConfigGcfsConfig) ClusterNodeConfigGcfsConfig {
		if v != nil {
			return *v
		}
		var ret ClusterNodeConfigGcfsConfig
		return ret
	}).(ClusterNodeConfigGcfsConfigOutput)
}

// Whether or not the Google Container Filesystem (GCFS) is enabled
func (o ClusterNodeConfigGcfsConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterNodeConfigGcfsConfig) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type ClusterNodeConfigGuestAccelerator struct {
	// The number of the guest accelerator cards exposed to this instance.
	Count int `pulumi:"count"`
	// Configuration for auto installation of GPU driver. Structure is documented below.
	GpuDriverInstallationConfig *ClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfig `pulumi:"gpuDriverInstallationConfig"`
	// Size of partitions to create on the GPU. Valid values are described in the NVIDIA mig [user guide](https://docs.nvidia.com/datacenter/tesla/mig-user-guide/#partitioning).
	GpuPartitionSize *string `pulumi:"gpuPartitionSize"`
	// Configuration for GPU sharing. Structure is documented below.
	GpuSharingConfig *ClusterNodeConfigGuestAcceleratorGpuSharingConfig `pulumi:"gpuSharingConfig"`
	// The accelerator type resource to expose to this instance. E.g. `nvidia-tesla-k80`.
	Type string `pulumi:"type"`
}

// ClusterNodeConfigGuestAcceleratorInput is an input type that accepts ClusterNodeConfigGuestAcceleratorArgs and ClusterNodeConfigGuestAcceleratorOutput values.
// You can construct a concrete instance of `ClusterNodeConfigGuestAcceleratorInput` via:
//
//	ClusterNodeConfigGuestAcceleratorArgs{...}
type ClusterNodeConfigGuestAcceleratorInput interface {
	pulumi.Input

	ToClusterNodeConfigGuestAcceleratorOutput() ClusterNodeConfigGuestAcceleratorOutput
	ToClusterNodeConfigGuestAcceleratorOutputWithContext(context.Context) ClusterNodeConfigGuestAcceleratorOutput
}

type ClusterNodeConfigGuestAcceleratorArgs struct {
	// The number of the guest accelerator cards exposed to this instance.
	Count pulumi.IntInput `pulumi:"count"`
	// Configuration for auto installation of GPU driver. Structure is documented below.
	GpuDriverInstallationConfig ClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrInput `pulumi:"gpuDriverInstallationConfig"`
	// Size of partitions to create on the GPU. Valid values are described in the NVIDIA mig [user guide](https://docs.nvidia.com/datacenter/tesla/mig-user-guide/#partitioning).
	GpuPartitionSize pulumi.StringPtrInput `pulumi:"gpuPartitionSize"`
	// Configuration for GPU sharing. Structure is documented below.
	GpuSharingConfig ClusterNodeConfigGuestAcceleratorGpuSharingConfigPtrInput `pulumi:"gpuSharingConfig"`
	// The accelerator type resource to expose to this instance. E.g. `nvidia-tesla-k80`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ClusterNodeConfigGuestAcceleratorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigGuestAccelerator)(nil)).Elem()
}

func (i ClusterNodeConfigGuestAcceleratorArgs) ToClusterNodeConfigGuestAcceleratorOutput() ClusterNodeConfigGuestAcceleratorOutput {
	return i.ToClusterNodeConfigGuestAcceleratorOutputWithContext(context.Background())
}

func (i ClusterNodeConfigGuestAcceleratorArgs) ToClusterNodeConfigGuestAcceleratorOutputWithContext(ctx context.Context) ClusterNodeConfigGuestAcceleratorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigGuestAcceleratorOutput)
}

// ClusterNodeConfigGuestAcceleratorArrayInput is an input type that accepts ClusterNodeConfigGuestAcceleratorArray and ClusterNodeConfigGuestAcceleratorArrayOutput values.
// You can construct a concrete instance of `ClusterNodeConfigGuestAcceleratorArrayInput` via:
//
//	ClusterNodeConfigGuestAcceleratorArray{ ClusterNodeConfigGuestAcceleratorArgs{...} }
type ClusterNodeConfigGuestAcceleratorArrayInput interface {
	pulumi.Input

	ToClusterNodeConfigGuestAcceleratorArrayOutput() ClusterNodeConfigGuestAcceleratorArrayOutput
	ToClusterNodeConfigGuestAcceleratorArrayOutputWithContext(context.Context) ClusterNodeConfigGuestAcceleratorArrayOutput
}

type ClusterNodeConfigGuestAcceleratorArray []ClusterNodeConfigGuestAcceleratorInput

func (ClusterNodeConfigGuestAcceleratorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodeConfigGuestAccelerator)(nil)).Elem()
}

func (i ClusterNodeConfigGuestAcceleratorArray) ToClusterNodeConfigGuestAcceleratorArrayOutput() ClusterNodeConfigGuestAcceleratorArrayOutput {
	return i.ToClusterNodeConfigGuestAcceleratorArrayOutputWithContext(context.Background())
}

func (i ClusterNodeConfigGuestAcceleratorArray) ToClusterNodeConfigGuestAcceleratorArrayOutputWithContext(ctx context.Context) ClusterNodeConfigGuestAcceleratorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigGuestAcceleratorArrayOutput)
}

type ClusterNodeConfigGuestAcceleratorOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigGuestAcceleratorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigGuestAccelerator)(nil)).Elem()
}

func (o ClusterNodeConfigGuestAcceleratorOutput) ToClusterNodeConfigGuestAcceleratorOutput() ClusterNodeConfigGuestAcceleratorOutput {
	return o
}

func (o ClusterNodeConfigGuestAcceleratorOutput) ToClusterNodeConfigGuestAcceleratorOutputWithContext(ctx context.Context) ClusterNodeConfigGuestAcceleratorOutput {
	return o
}

// The number of the guest accelerator cards exposed to this instance.
func (o ClusterNodeConfigGuestAcceleratorOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterNodeConfigGuestAccelerator) int { return v.Count }).(pulumi.IntOutput)
}

// Configuration for auto installation of GPU driver. Structure is documented below.
func (o ClusterNodeConfigGuestAcceleratorOutput) GpuDriverInstallationConfig() ClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfigGuestAccelerator) *ClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfig {
		return v.GpuDriverInstallationConfig
	}).(ClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutput)
}

// Size of partitions to create on the GPU. Valid values are described in the NVIDIA mig [user guide](https://docs.nvidia.com/datacenter/tesla/mig-user-guide/#partitioning).
func (o ClusterNodeConfigGuestAcceleratorOutput) GpuPartitionSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfigGuestAccelerator) *string { return v.GpuPartitionSize }).(pulumi.StringPtrOutput)
}

// Configuration for GPU sharing. Structure is documented below.
func (o ClusterNodeConfigGuestAcceleratorOutput) GpuSharingConfig() ClusterNodeConfigGuestAcceleratorGpuSharingConfigPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfigGuestAccelerator) *ClusterNodeConfigGuestAcceleratorGpuSharingConfig {
		return v.GpuSharingConfig
	}).(ClusterNodeConfigGuestAcceleratorGpuSharingConfigPtrOutput)
}

// The accelerator type resource to expose to this instance. E.g. `nvidia-tesla-k80`.
func (o ClusterNodeConfigGuestAcceleratorOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodeConfigGuestAccelerator) string { return v.Type }).(pulumi.StringOutput)
}

type ClusterNodeConfigGuestAcceleratorArrayOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigGuestAcceleratorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodeConfigGuestAccelerator)(nil)).Elem()
}

func (o ClusterNodeConfigGuestAcceleratorArrayOutput) ToClusterNodeConfigGuestAcceleratorArrayOutput() ClusterNodeConfigGuestAcceleratorArrayOutput {
	return o
}

func (o ClusterNodeConfigGuestAcceleratorArrayOutput) ToClusterNodeConfigGuestAcceleratorArrayOutputWithContext(ctx context.Context) ClusterNodeConfigGuestAcceleratorArrayOutput {
	return o
}

func (o ClusterNodeConfigGuestAcceleratorArrayOutput) Index(i pulumi.IntInput) ClusterNodeConfigGuestAcceleratorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterNodeConfigGuestAccelerator {
		return vs[0].([]ClusterNodeConfigGuestAccelerator)[vs[1].(int)]
	}).(ClusterNodeConfigGuestAcceleratorOutput)
}

type ClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfig struct {
	// Mode for how the GPU driver is installed.
	// Accepted values are:
	// * `"GPU_DRIVER_VERSION_UNSPECIFIED"`: Default value is to not install any GPU driver.
	// * `"INSTALLATION_DISABLED"`: Disable GPU driver auto installation and needs manual installation.
	// * `"DEFAULT"`: "Default" GPU driver in COS and Ubuntu.
	// * `"LATEST"`: "Latest" GPU driver in COS.
	GpuDriverVersion string `pulumi:"gpuDriverVersion"`
}

// ClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigInput is an input type that accepts ClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigArgs and ClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput values.
// You can construct a concrete instance of `ClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigInput` via:
//
//	ClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigArgs{...}
type ClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigInput interface {
	pulumi.Input

	ToClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput() ClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput
	ToClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutputWithContext(context.Context) ClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput
}

type ClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigArgs struct {
	// Mode for how the GPU driver is installed.
	// Accepted values are:
	// * `"GPU_DRIVER_VERSION_UNSPECIFIED"`: Default value is to not install any GPU driver.
	// * `"INSTALLATION_DISABLED"`: Disable GPU driver auto installation and needs manual installation.
	// * `"DEFAULT"`: "Default" GPU driver in COS and Ubuntu.
	// * `"LATEST"`: "Latest" GPU driver in COS.
	GpuDriverVersion pulumi.StringInput `pulumi:"gpuDriverVersion"`
}

func (ClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfig)(nil)).Elem()
}

func (i ClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigArgs) ToClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput() ClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput {
	return i.ToClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutputWithContext(context.Background())
}

func (i ClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigArgs) ToClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutputWithContext(ctx context.Context) ClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput)
}

func (i ClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigArgs) ToClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutput() ClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutput {
	return i.ToClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutputWithContext(context.Background())
}

func (i ClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigArgs) ToClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput).ToClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutputWithContext(ctx)
}

// ClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrInput is an input type that accepts ClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigArgs, ClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtr and ClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutput values.
// You can construct a concrete instance of `ClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrInput` via:
//
//	        ClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrInput interface {
	pulumi.Input

	ToClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutput() ClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutput
	ToClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutputWithContext(context.Context) ClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutput
}

type clusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrType ClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigArgs

func ClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtr(v *ClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigArgs) ClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrInput {
	return (*clusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrType)(v)
}

func (*clusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfig)(nil)).Elem()
}

func (i *clusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrType) ToClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutput() ClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutput {
	return i.ToClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutputWithContext(context.Background())
}

func (i *clusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrType) ToClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutput)
}

type ClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfig)(nil)).Elem()
}

func (o ClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput) ToClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput() ClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput {
	return o
}

func (o ClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput) ToClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutputWithContext(ctx context.Context) ClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput {
	return o
}

func (o ClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput) ToClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutput() ClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutput {
	return o.ToClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutputWithContext(context.Background())
}

func (o ClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput) ToClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfig) *ClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfig {
		return &v
	}).(ClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutput)
}

// Mode for how the GPU driver is installed.
// Accepted values are:
// * `"GPU_DRIVER_VERSION_UNSPECIFIED"`: Default value is to not install any GPU driver.
// * `"INSTALLATION_DISABLED"`: Disable GPU driver auto installation and needs manual installation.
// * `"DEFAULT"`: "Default" GPU driver in COS and Ubuntu.
// * `"LATEST"`: "Latest" GPU driver in COS.
func (o ClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput) GpuDriverVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfig) string { return v.GpuDriverVersion }).(pulumi.StringOutput)
}

type ClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfig)(nil)).Elem()
}

func (o ClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutput) ToClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutput() ClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutput {
	return o
}

func (o ClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutput) ToClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutput {
	return o
}

func (o ClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutput) Elem() ClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput {
	return o.ApplyT(func(v *ClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfig) ClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfig {
		if v != nil {
			return *v
		}
		var ret ClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfig
		return ret
	}).(ClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput)
}

// Mode for how the GPU driver is installed.
// Accepted values are:
// * `"GPU_DRIVER_VERSION_UNSPECIFIED"`: Default value is to not install any GPU driver.
// * `"INSTALLATION_DISABLED"`: Disable GPU driver auto installation and needs manual installation.
// * `"DEFAULT"`: "Default" GPU driver in COS and Ubuntu.
// * `"LATEST"`: "Latest" GPU driver in COS.
func (o ClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutput) GpuDriverVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfig) *string {
		if v == nil {
			return nil
		}
		return &v.GpuDriverVersion
	}).(pulumi.StringPtrOutput)
}

type ClusterNodeConfigGuestAcceleratorGpuSharingConfig struct {
	// The type of GPU sharing strategy to enable on the GPU node.
	// Accepted values are:
	// * `"TIME_SHARING"`: Allow multiple containers to have [time-shared](https://cloud.google.com/kubernetes-engine/docs/concepts/timesharing-gpus) access to a single GPU device.
	// * `"MPS"`: Enable co-operative multi-process CUDA workloads to run concurrently on a single GPU device with [MPS](https://cloud.google.com/kubernetes-engine/docs/how-to/nvidia-mps-gpus)
	GpuSharingStrategy string `pulumi:"gpuSharingStrategy"`
	// The maximum number of containers that can share a GPU.
	MaxSharedClientsPerGpu int `pulumi:"maxSharedClientsPerGpu"`
}

// ClusterNodeConfigGuestAcceleratorGpuSharingConfigInput is an input type that accepts ClusterNodeConfigGuestAcceleratorGpuSharingConfigArgs and ClusterNodeConfigGuestAcceleratorGpuSharingConfigOutput values.
// You can construct a concrete instance of `ClusterNodeConfigGuestAcceleratorGpuSharingConfigInput` via:
//
//	ClusterNodeConfigGuestAcceleratorGpuSharingConfigArgs{...}
type ClusterNodeConfigGuestAcceleratorGpuSharingConfigInput interface {
	pulumi.Input

	ToClusterNodeConfigGuestAcceleratorGpuSharingConfigOutput() ClusterNodeConfigGuestAcceleratorGpuSharingConfigOutput
	ToClusterNodeConfigGuestAcceleratorGpuSharingConfigOutputWithContext(context.Context) ClusterNodeConfigGuestAcceleratorGpuSharingConfigOutput
}

type ClusterNodeConfigGuestAcceleratorGpuSharingConfigArgs struct {
	// The type of GPU sharing strategy to enable on the GPU node.
	// Accepted values are:
	// * `"TIME_SHARING"`: Allow multiple containers to have [time-shared](https://cloud.google.com/kubernetes-engine/docs/concepts/timesharing-gpus) access to a single GPU device.
	// * `"MPS"`: Enable co-operative multi-process CUDA workloads to run concurrently on a single GPU device with [MPS](https://cloud.google.com/kubernetes-engine/docs/how-to/nvidia-mps-gpus)
	GpuSharingStrategy pulumi.StringInput `pulumi:"gpuSharingStrategy"`
	// The maximum number of containers that can share a GPU.
	MaxSharedClientsPerGpu pulumi.IntInput `pulumi:"maxSharedClientsPerGpu"`
}

func (ClusterNodeConfigGuestAcceleratorGpuSharingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigGuestAcceleratorGpuSharingConfig)(nil)).Elem()
}

func (i ClusterNodeConfigGuestAcceleratorGpuSharingConfigArgs) ToClusterNodeConfigGuestAcceleratorGpuSharingConfigOutput() ClusterNodeConfigGuestAcceleratorGpuSharingConfigOutput {
	return i.ToClusterNodeConfigGuestAcceleratorGpuSharingConfigOutputWithContext(context.Background())
}

func (i ClusterNodeConfigGuestAcceleratorGpuSharingConfigArgs) ToClusterNodeConfigGuestAcceleratorGpuSharingConfigOutputWithContext(ctx context.Context) ClusterNodeConfigGuestAcceleratorGpuSharingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigGuestAcceleratorGpuSharingConfigOutput)
}

func (i ClusterNodeConfigGuestAcceleratorGpuSharingConfigArgs) ToClusterNodeConfigGuestAcceleratorGpuSharingConfigPtrOutput() ClusterNodeConfigGuestAcceleratorGpuSharingConfigPtrOutput {
	return i.ToClusterNodeConfigGuestAcceleratorGpuSharingConfigPtrOutputWithContext(context.Background())
}

func (i ClusterNodeConfigGuestAcceleratorGpuSharingConfigArgs) ToClusterNodeConfigGuestAcceleratorGpuSharingConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigGuestAcceleratorGpuSharingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigGuestAcceleratorGpuSharingConfigOutput).ToClusterNodeConfigGuestAcceleratorGpuSharingConfigPtrOutputWithContext(ctx)
}

// ClusterNodeConfigGuestAcceleratorGpuSharingConfigPtrInput is an input type that accepts ClusterNodeConfigGuestAcceleratorGpuSharingConfigArgs, ClusterNodeConfigGuestAcceleratorGpuSharingConfigPtr and ClusterNodeConfigGuestAcceleratorGpuSharingConfigPtrOutput values.
// You can construct a concrete instance of `ClusterNodeConfigGuestAcceleratorGpuSharingConfigPtrInput` via:
//
//	        ClusterNodeConfigGuestAcceleratorGpuSharingConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterNodeConfigGuestAcceleratorGpuSharingConfigPtrInput interface {
	pulumi.Input

	ToClusterNodeConfigGuestAcceleratorGpuSharingConfigPtrOutput() ClusterNodeConfigGuestAcceleratorGpuSharingConfigPtrOutput
	ToClusterNodeConfigGuestAcceleratorGpuSharingConfigPtrOutputWithContext(context.Context) ClusterNodeConfigGuestAcceleratorGpuSharingConfigPtrOutput
}

type clusterNodeConfigGuestAcceleratorGpuSharingConfigPtrType ClusterNodeConfigGuestAcceleratorGpuSharingConfigArgs

func ClusterNodeConfigGuestAcceleratorGpuSharingConfigPtr(v *ClusterNodeConfigGuestAcceleratorGpuSharingConfigArgs) ClusterNodeConfigGuestAcceleratorGpuSharingConfigPtrInput {
	return (*clusterNodeConfigGuestAcceleratorGpuSharingConfigPtrType)(v)
}

func (*clusterNodeConfigGuestAcceleratorGpuSharingConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodeConfigGuestAcceleratorGpuSharingConfig)(nil)).Elem()
}

func (i *clusterNodeConfigGuestAcceleratorGpuSharingConfigPtrType) ToClusterNodeConfigGuestAcceleratorGpuSharingConfigPtrOutput() ClusterNodeConfigGuestAcceleratorGpuSharingConfigPtrOutput {
	return i.ToClusterNodeConfigGuestAcceleratorGpuSharingConfigPtrOutputWithContext(context.Background())
}

func (i *clusterNodeConfigGuestAcceleratorGpuSharingConfigPtrType) ToClusterNodeConfigGuestAcceleratorGpuSharingConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigGuestAcceleratorGpuSharingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigGuestAcceleratorGpuSharingConfigPtrOutput)
}

type ClusterNodeConfigGuestAcceleratorGpuSharingConfigOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigGuestAcceleratorGpuSharingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigGuestAcceleratorGpuSharingConfig)(nil)).Elem()
}

func (o ClusterNodeConfigGuestAcceleratorGpuSharingConfigOutput) ToClusterNodeConfigGuestAcceleratorGpuSharingConfigOutput() ClusterNodeConfigGuestAcceleratorGpuSharingConfigOutput {
	return o
}

func (o ClusterNodeConfigGuestAcceleratorGpuSharingConfigOutput) ToClusterNodeConfigGuestAcceleratorGpuSharingConfigOutputWithContext(ctx context.Context) ClusterNodeConfigGuestAcceleratorGpuSharingConfigOutput {
	return o
}

func (o ClusterNodeConfigGuestAcceleratorGpuSharingConfigOutput) ToClusterNodeConfigGuestAcceleratorGpuSharingConfigPtrOutput() ClusterNodeConfigGuestAcceleratorGpuSharingConfigPtrOutput {
	return o.ToClusterNodeConfigGuestAcceleratorGpuSharingConfigPtrOutputWithContext(context.Background())
}

func (o ClusterNodeConfigGuestAcceleratorGpuSharingConfigOutput) ToClusterNodeConfigGuestAcceleratorGpuSharingConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigGuestAcceleratorGpuSharingConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterNodeConfigGuestAcceleratorGpuSharingConfig) *ClusterNodeConfigGuestAcceleratorGpuSharingConfig {
		return &v
	}).(ClusterNodeConfigGuestAcceleratorGpuSharingConfigPtrOutput)
}

// The type of GPU sharing strategy to enable on the GPU node.
// Accepted values are:
// * `"TIME_SHARING"`: Allow multiple containers to have [time-shared](https://cloud.google.com/kubernetes-engine/docs/concepts/timesharing-gpus) access to a single GPU device.
// * `"MPS"`: Enable co-operative multi-process CUDA workloads to run concurrently on a single GPU device with [MPS](https://cloud.google.com/kubernetes-engine/docs/how-to/nvidia-mps-gpus)
func (o ClusterNodeConfigGuestAcceleratorGpuSharingConfigOutput) GpuSharingStrategy() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodeConfigGuestAcceleratorGpuSharingConfig) string { return v.GpuSharingStrategy }).(pulumi.StringOutput)
}

// The maximum number of containers that can share a GPU.
func (o ClusterNodeConfigGuestAcceleratorGpuSharingConfigOutput) MaxSharedClientsPerGpu() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterNodeConfigGuestAcceleratorGpuSharingConfig) int { return v.MaxSharedClientsPerGpu }).(pulumi.IntOutput)
}

type ClusterNodeConfigGuestAcceleratorGpuSharingConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigGuestAcceleratorGpuSharingConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodeConfigGuestAcceleratorGpuSharingConfig)(nil)).Elem()
}

func (o ClusterNodeConfigGuestAcceleratorGpuSharingConfigPtrOutput) ToClusterNodeConfigGuestAcceleratorGpuSharingConfigPtrOutput() ClusterNodeConfigGuestAcceleratorGpuSharingConfigPtrOutput {
	return o
}

func (o ClusterNodeConfigGuestAcceleratorGpuSharingConfigPtrOutput) ToClusterNodeConfigGuestAcceleratorGpuSharingConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigGuestAcceleratorGpuSharingConfigPtrOutput {
	return o
}

func (o ClusterNodeConfigGuestAcceleratorGpuSharingConfigPtrOutput) Elem() ClusterNodeConfigGuestAcceleratorGpuSharingConfigOutput {
	return o.ApplyT(func(v *ClusterNodeConfigGuestAcceleratorGpuSharingConfig) ClusterNodeConfigGuestAcceleratorGpuSharingConfig {
		if v != nil {
			return *v
		}
		var ret ClusterNodeConfigGuestAcceleratorGpuSharingConfig
		return ret
	}).(ClusterNodeConfigGuestAcceleratorGpuSharingConfigOutput)
}

// The type of GPU sharing strategy to enable on the GPU node.
// Accepted values are:
// * `"TIME_SHARING"`: Allow multiple containers to have [time-shared](https://cloud.google.com/kubernetes-engine/docs/concepts/timesharing-gpus) access to a single GPU device.
// * `"MPS"`: Enable co-operative multi-process CUDA workloads to run concurrently on a single GPU device with [MPS](https://cloud.google.com/kubernetes-engine/docs/how-to/nvidia-mps-gpus)
func (o ClusterNodeConfigGuestAcceleratorGpuSharingConfigPtrOutput) GpuSharingStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNodeConfigGuestAcceleratorGpuSharingConfig) *string {
		if v == nil {
			return nil
		}
		return &v.GpuSharingStrategy
	}).(pulumi.StringPtrOutput)
}

// The maximum number of containers that can share a GPU.
func (o ClusterNodeConfigGuestAcceleratorGpuSharingConfigPtrOutput) MaxSharedClientsPerGpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterNodeConfigGuestAcceleratorGpuSharingConfig) *int {
		if v == nil {
			return nil
		}
		return &v.MaxSharedClientsPerGpu
	}).(pulumi.IntPtrOutput)
}

type ClusterNodeConfigGvnic struct {
	// Whether or not the Google Virtual NIC (gVNIC) is enabled
	Enabled bool `pulumi:"enabled"`
}

// ClusterNodeConfigGvnicInput is an input type that accepts ClusterNodeConfigGvnicArgs and ClusterNodeConfigGvnicOutput values.
// You can construct a concrete instance of `ClusterNodeConfigGvnicInput` via:
//
//	ClusterNodeConfigGvnicArgs{...}
type ClusterNodeConfigGvnicInput interface {
	pulumi.Input

	ToClusterNodeConfigGvnicOutput() ClusterNodeConfigGvnicOutput
	ToClusterNodeConfigGvnicOutputWithContext(context.Context) ClusterNodeConfigGvnicOutput
}

type ClusterNodeConfigGvnicArgs struct {
	// Whether or not the Google Virtual NIC (gVNIC) is enabled
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (ClusterNodeConfigGvnicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigGvnic)(nil)).Elem()
}

func (i ClusterNodeConfigGvnicArgs) ToClusterNodeConfigGvnicOutput() ClusterNodeConfigGvnicOutput {
	return i.ToClusterNodeConfigGvnicOutputWithContext(context.Background())
}

func (i ClusterNodeConfigGvnicArgs) ToClusterNodeConfigGvnicOutputWithContext(ctx context.Context) ClusterNodeConfigGvnicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigGvnicOutput)
}

func (i ClusterNodeConfigGvnicArgs) ToClusterNodeConfigGvnicPtrOutput() ClusterNodeConfigGvnicPtrOutput {
	return i.ToClusterNodeConfigGvnicPtrOutputWithContext(context.Background())
}

func (i ClusterNodeConfigGvnicArgs) ToClusterNodeConfigGvnicPtrOutputWithContext(ctx context.Context) ClusterNodeConfigGvnicPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigGvnicOutput).ToClusterNodeConfigGvnicPtrOutputWithContext(ctx)
}

// ClusterNodeConfigGvnicPtrInput is an input type that accepts ClusterNodeConfigGvnicArgs, ClusterNodeConfigGvnicPtr and ClusterNodeConfigGvnicPtrOutput values.
// You can construct a concrete instance of `ClusterNodeConfigGvnicPtrInput` via:
//
//	        ClusterNodeConfigGvnicArgs{...}
//
//	or:
//
//	        nil
type ClusterNodeConfigGvnicPtrInput interface {
	pulumi.Input

	ToClusterNodeConfigGvnicPtrOutput() ClusterNodeConfigGvnicPtrOutput
	ToClusterNodeConfigGvnicPtrOutputWithContext(context.Context) ClusterNodeConfigGvnicPtrOutput
}

type clusterNodeConfigGvnicPtrType ClusterNodeConfigGvnicArgs

func ClusterNodeConfigGvnicPtr(v *ClusterNodeConfigGvnicArgs) ClusterNodeConfigGvnicPtrInput {
	return (*clusterNodeConfigGvnicPtrType)(v)
}

func (*clusterNodeConfigGvnicPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodeConfigGvnic)(nil)).Elem()
}

func (i *clusterNodeConfigGvnicPtrType) ToClusterNodeConfigGvnicPtrOutput() ClusterNodeConfigGvnicPtrOutput {
	return i.ToClusterNodeConfigGvnicPtrOutputWithContext(context.Background())
}

func (i *clusterNodeConfigGvnicPtrType) ToClusterNodeConfigGvnicPtrOutputWithContext(ctx context.Context) ClusterNodeConfigGvnicPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigGvnicPtrOutput)
}

type ClusterNodeConfigGvnicOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigGvnicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigGvnic)(nil)).Elem()
}

func (o ClusterNodeConfigGvnicOutput) ToClusterNodeConfigGvnicOutput() ClusterNodeConfigGvnicOutput {
	return o
}

func (o ClusterNodeConfigGvnicOutput) ToClusterNodeConfigGvnicOutputWithContext(ctx context.Context) ClusterNodeConfigGvnicOutput {
	return o
}

func (o ClusterNodeConfigGvnicOutput) ToClusterNodeConfigGvnicPtrOutput() ClusterNodeConfigGvnicPtrOutput {
	return o.ToClusterNodeConfigGvnicPtrOutputWithContext(context.Background())
}

func (o ClusterNodeConfigGvnicOutput) ToClusterNodeConfigGvnicPtrOutputWithContext(ctx context.Context) ClusterNodeConfigGvnicPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterNodeConfigGvnic) *ClusterNodeConfigGvnic {
		return &v
	}).(ClusterNodeConfigGvnicPtrOutput)
}

// Whether or not the Google Virtual NIC (gVNIC) is enabled
func (o ClusterNodeConfigGvnicOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterNodeConfigGvnic) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type ClusterNodeConfigGvnicPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigGvnicPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodeConfigGvnic)(nil)).Elem()
}

func (o ClusterNodeConfigGvnicPtrOutput) ToClusterNodeConfigGvnicPtrOutput() ClusterNodeConfigGvnicPtrOutput {
	return o
}

func (o ClusterNodeConfigGvnicPtrOutput) ToClusterNodeConfigGvnicPtrOutputWithContext(ctx context.Context) ClusterNodeConfigGvnicPtrOutput {
	return o
}

func (o ClusterNodeConfigGvnicPtrOutput) Elem() ClusterNodeConfigGvnicOutput {
	return o.ApplyT(func(v *ClusterNodeConfigGvnic) ClusterNodeConfigGvnic {
		if v != nil {
			return *v
		}
		var ret ClusterNodeConfigGvnic
		return ret
	}).(ClusterNodeConfigGvnicOutput)
}

// Whether or not the Google Virtual NIC (gVNIC) is enabled
func (o ClusterNodeConfigGvnicPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterNodeConfigGvnic) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type ClusterNodeConfigHostMaintenancePolicy struct {
	// .
	MaintenanceInterval string `pulumi:"maintenanceInterval"`
}

// ClusterNodeConfigHostMaintenancePolicyInput is an input type that accepts ClusterNodeConfigHostMaintenancePolicyArgs and ClusterNodeConfigHostMaintenancePolicyOutput values.
// You can construct a concrete instance of `ClusterNodeConfigHostMaintenancePolicyInput` via:
//
//	ClusterNodeConfigHostMaintenancePolicyArgs{...}
type ClusterNodeConfigHostMaintenancePolicyInput interface {
	pulumi.Input

	ToClusterNodeConfigHostMaintenancePolicyOutput() ClusterNodeConfigHostMaintenancePolicyOutput
	ToClusterNodeConfigHostMaintenancePolicyOutputWithContext(context.Context) ClusterNodeConfigHostMaintenancePolicyOutput
}

type ClusterNodeConfigHostMaintenancePolicyArgs struct {
	// .
	MaintenanceInterval pulumi.StringInput `pulumi:"maintenanceInterval"`
}

func (ClusterNodeConfigHostMaintenancePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigHostMaintenancePolicy)(nil)).Elem()
}

func (i ClusterNodeConfigHostMaintenancePolicyArgs) ToClusterNodeConfigHostMaintenancePolicyOutput() ClusterNodeConfigHostMaintenancePolicyOutput {
	return i.ToClusterNodeConfigHostMaintenancePolicyOutputWithContext(context.Background())
}

func (i ClusterNodeConfigHostMaintenancePolicyArgs) ToClusterNodeConfigHostMaintenancePolicyOutputWithContext(ctx context.Context) ClusterNodeConfigHostMaintenancePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigHostMaintenancePolicyOutput)
}

func (i ClusterNodeConfigHostMaintenancePolicyArgs) ToClusterNodeConfigHostMaintenancePolicyPtrOutput() ClusterNodeConfigHostMaintenancePolicyPtrOutput {
	return i.ToClusterNodeConfigHostMaintenancePolicyPtrOutputWithContext(context.Background())
}

func (i ClusterNodeConfigHostMaintenancePolicyArgs) ToClusterNodeConfigHostMaintenancePolicyPtrOutputWithContext(ctx context.Context) ClusterNodeConfigHostMaintenancePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigHostMaintenancePolicyOutput).ToClusterNodeConfigHostMaintenancePolicyPtrOutputWithContext(ctx)
}

// ClusterNodeConfigHostMaintenancePolicyPtrInput is an input type that accepts ClusterNodeConfigHostMaintenancePolicyArgs, ClusterNodeConfigHostMaintenancePolicyPtr and ClusterNodeConfigHostMaintenancePolicyPtrOutput values.
// You can construct a concrete instance of `ClusterNodeConfigHostMaintenancePolicyPtrInput` via:
//
//	        ClusterNodeConfigHostMaintenancePolicyArgs{...}
//
//	or:
//
//	        nil
type ClusterNodeConfigHostMaintenancePolicyPtrInput interface {
	pulumi.Input

	ToClusterNodeConfigHostMaintenancePolicyPtrOutput() ClusterNodeConfigHostMaintenancePolicyPtrOutput
	ToClusterNodeConfigHostMaintenancePolicyPtrOutputWithContext(context.Context) ClusterNodeConfigHostMaintenancePolicyPtrOutput
}

type clusterNodeConfigHostMaintenancePolicyPtrType ClusterNodeConfigHostMaintenancePolicyArgs

func ClusterNodeConfigHostMaintenancePolicyPtr(v *ClusterNodeConfigHostMaintenancePolicyArgs) ClusterNodeConfigHostMaintenancePolicyPtrInput {
	return (*clusterNodeConfigHostMaintenancePolicyPtrType)(v)
}

func (*clusterNodeConfigHostMaintenancePolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodeConfigHostMaintenancePolicy)(nil)).Elem()
}

func (i *clusterNodeConfigHostMaintenancePolicyPtrType) ToClusterNodeConfigHostMaintenancePolicyPtrOutput() ClusterNodeConfigHostMaintenancePolicyPtrOutput {
	return i.ToClusterNodeConfigHostMaintenancePolicyPtrOutputWithContext(context.Background())
}

func (i *clusterNodeConfigHostMaintenancePolicyPtrType) ToClusterNodeConfigHostMaintenancePolicyPtrOutputWithContext(ctx context.Context) ClusterNodeConfigHostMaintenancePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigHostMaintenancePolicyPtrOutput)
}

type ClusterNodeConfigHostMaintenancePolicyOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigHostMaintenancePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigHostMaintenancePolicy)(nil)).Elem()
}

func (o ClusterNodeConfigHostMaintenancePolicyOutput) ToClusterNodeConfigHostMaintenancePolicyOutput() ClusterNodeConfigHostMaintenancePolicyOutput {
	return o
}

func (o ClusterNodeConfigHostMaintenancePolicyOutput) ToClusterNodeConfigHostMaintenancePolicyOutputWithContext(ctx context.Context) ClusterNodeConfigHostMaintenancePolicyOutput {
	return o
}

func (o ClusterNodeConfigHostMaintenancePolicyOutput) ToClusterNodeConfigHostMaintenancePolicyPtrOutput() ClusterNodeConfigHostMaintenancePolicyPtrOutput {
	return o.ToClusterNodeConfigHostMaintenancePolicyPtrOutputWithContext(context.Background())
}

func (o ClusterNodeConfigHostMaintenancePolicyOutput) ToClusterNodeConfigHostMaintenancePolicyPtrOutputWithContext(ctx context.Context) ClusterNodeConfigHostMaintenancePolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterNodeConfigHostMaintenancePolicy) *ClusterNodeConfigHostMaintenancePolicy {
		return &v
	}).(ClusterNodeConfigHostMaintenancePolicyPtrOutput)
}

// .
func (o ClusterNodeConfigHostMaintenancePolicyOutput) MaintenanceInterval() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodeConfigHostMaintenancePolicy) string { return v.MaintenanceInterval }).(pulumi.StringOutput)
}

type ClusterNodeConfigHostMaintenancePolicyPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigHostMaintenancePolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodeConfigHostMaintenancePolicy)(nil)).Elem()
}

func (o ClusterNodeConfigHostMaintenancePolicyPtrOutput) ToClusterNodeConfigHostMaintenancePolicyPtrOutput() ClusterNodeConfigHostMaintenancePolicyPtrOutput {
	return o
}

func (o ClusterNodeConfigHostMaintenancePolicyPtrOutput) ToClusterNodeConfigHostMaintenancePolicyPtrOutputWithContext(ctx context.Context) ClusterNodeConfigHostMaintenancePolicyPtrOutput {
	return o
}

func (o ClusterNodeConfigHostMaintenancePolicyPtrOutput) Elem() ClusterNodeConfigHostMaintenancePolicyOutput {
	return o.ApplyT(func(v *ClusterNodeConfigHostMaintenancePolicy) ClusterNodeConfigHostMaintenancePolicy {
		if v != nil {
			return *v
		}
		var ret ClusterNodeConfigHostMaintenancePolicy
		return ret
	}).(ClusterNodeConfigHostMaintenancePolicyOutput)
}

// .
func (o ClusterNodeConfigHostMaintenancePolicyPtrOutput) MaintenanceInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNodeConfigHostMaintenancePolicy) *string {
		if v == nil {
			return nil
		}
		return &v.MaintenanceInterval
	}).(pulumi.StringPtrOutput)
}

type ClusterNodeConfigKubeletConfig struct {
	// If true, enables CPU CFS quota enforcement for
	// containers that specify CPU limits.
	CpuCfsQuota *bool `pulumi:"cpuCfsQuota"`
	// The CPU CFS quota period value. Specified
	// as a sequence of decimal numbers, each with optional fraction and a unit suffix,
	// such as `"300ms"`. Valid time units are "ns", "us" (or "µs"), "ms", "s", "m",
	// "h". The value must be a positive duration.
	//
	// > Note: At the time of writing (2020/08/18) the GKE API rejects the `none`
	// value and accepts an invalid `default` value instead. While this remains true,
	// not specifying the `kubeletConfig` block should be the equivalent of specifying
	// `none`.
	CpuCfsQuotaPeriod *string `pulumi:"cpuCfsQuotaPeriod"`
	// The CPU management policy on the node. See
	// [K8S CPU Management Policies](https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/).
	// One of `"none"` or `"static"`. Defaults to `none` when `kubeletConfig` is unset.
	CpuManagerPolicy string `pulumi:"cpuManagerPolicy"`
	// Controls the maximum number of processes allowed to run in a pod. The value must be greater than or equal to 1024 and less than 4194304.
	PodPidsLimit *int `pulumi:"podPidsLimit"`
}

// ClusterNodeConfigKubeletConfigInput is an input type that accepts ClusterNodeConfigKubeletConfigArgs and ClusterNodeConfigKubeletConfigOutput values.
// You can construct a concrete instance of `ClusterNodeConfigKubeletConfigInput` via:
//
//	ClusterNodeConfigKubeletConfigArgs{...}
type ClusterNodeConfigKubeletConfigInput interface {
	pulumi.Input

	ToClusterNodeConfigKubeletConfigOutput() ClusterNodeConfigKubeletConfigOutput
	ToClusterNodeConfigKubeletConfigOutputWithContext(context.Context) ClusterNodeConfigKubeletConfigOutput
}

type ClusterNodeConfigKubeletConfigArgs struct {
	// If true, enables CPU CFS quota enforcement for
	// containers that specify CPU limits.
	CpuCfsQuota pulumi.BoolPtrInput `pulumi:"cpuCfsQuota"`
	// The CPU CFS quota period value. Specified
	// as a sequence of decimal numbers, each with optional fraction and a unit suffix,
	// such as `"300ms"`. Valid time units are "ns", "us" (or "µs"), "ms", "s", "m",
	// "h". The value must be a positive duration.
	//
	// > Note: At the time of writing (2020/08/18) the GKE API rejects the `none`
	// value and accepts an invalid `default` value instead. While this remains true,
	// not specifying the `kubeletConfig` block should be the equivalent of specifying
	// `none`.
	CpuCfsQuotaPeriod pulumi.StringPtrInput `pulumi:"cpuCfsQuotaPeriod"`
	// The CPU management policy on the node. See
	// [K8S CPU Management Policies](https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/).
	// One of `"none"` or `"static"`. Defaults to `none` when `kubeletConfig` is unset.
	CpuManagerPolicy pulumi.StringInput `pulumi:"cpuManagerPolicy"`
	// Controls the maximum number of processes allowed to run in a pod. The value must be greater than or equal to 1024 and less than 4194304.
	PodPidsLimit pulumi.IntPtrInput `pulumi:"podPidsLimit"`
}

func (ClusterNodeConfigKubeletConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigKubeletConfig)(nil)).Elem()
}

func (i ClusterNodeConfigKubeletConfigArgs) ToClusterNodeConfigKubeletConfigOutput() ClusterNodeConfigKubeletConfigOutput {
	return i.ToClusterNodeConfigKubeletConfigOutputWithContext(context.Background())
}

func (i ClusterNodeConfigKubeletConfigArgs) ToClusterNodeConfigKubeletConfigOutputWithContext(ctx context.Context) ClusterNodeConfigKubeletConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigKubeletConfigOutput)
}

func (i ClusterNodeConfigKubeletConfigArgs) ToClusterNodeConfigKubeletConfigPtrOutput() ClusterNodeConfigKubeletConfigPtrOutput {
	return i.ToClusterNodeConfigKubeletConfigPtrOutputWithContext(context.Background())
}

func (i ClusterNodeConfigKubeletConfigArgs) ToClusterNodeConfigKubeletConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigKubeletConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigKubeletConfigOutput).ToClusterNodeConfigKubeletConfigPtrOutputWithContext(ctx)
}

// ClusterNodeConfigKubeletConfigPtrInput is an input type that accepts ClusterNodeConfigKubeletConfigArgs, ClusterNodeConfigKubeletConfigPtr and ClusterNodeConfigKubeletConfigPtrOutput values.
// You can construct a concrete instance of `ClusterNodeConfigKubeletConfigPtrInput` via:
//
//	        ClusterNodeConfigKubeletConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterNodeConfigKubeletConfigPtrInput interface {
	pulumi.Input

	ToClusterNodeConfigKubeletConfigPtrOutput() ClusterNodeConfigKubeletConfigPtrOutput
	ToClusterNodeConfigKubeletConfigPtrOutputWithContext(context.Context) ClusterNodeConfigKubeletConfigPtrOutput
}

type clusterNodeConfigKubeletConfigPtrType ClusterNodeConfigKubeletConfigArgs

func ClusterNodeConfigKubeletConfigPtr(v *ClusterNodeConfigKubeletConfigArgs) ClusterNodeConfigKubeletConfigPtrInput {
	return (*clusterNodeConfigKubeletConfigPtrType)(v)
}

func (*clusterNodeConfigKubeletConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodeConfigKubeletConfig)(nil)).Elem()
}

func (i *clusterNodeConfigKubeletConfigPtrType) ToClusterNodeConfigKubeletConfigPtrOutput() ClusterNodeConfigKubeletConfigPtrOutput {
	return i.ToClusterNodeConfigKubeletConfigPtrOutputWithContext(context.Background())
}

func (i *clusterNodeConfigKubeletConfigPtrType) ToClusterNodeConfigKubeletConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigKubeletConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigKubeletConfigPtrOutput)
}

type ClusterNodeConfigKubeletConfigOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigKubeletConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigKubeletConfig)(nil)).Elem()
}

func (o ClusterNodeConfigKubeletConfigOutput) ToClusterNodeConfigKubeletConfigOutput() ClusterNodeConfigKubeletConfigOutput {
	return o
}

func (o ClusterNodeConfigKubeletConfigOutput) ToClusterNodeConfigKubeletConfigOutputWithContext(ctx context.Context) ClusterNodeConfigKubeletConfigOutput {
	return o
}

func (o ClusterNodeConfigKubeletConfigOutput) ToClusterNodeConfigKubeletConfigPtrOutput() ClusterNodeConfigKubeletConfigPtrOutput {
	return o.ToClusterNodeConfigKubeletConfigPtrOutputWithContext(context.Background())
}

func (o ClusterNodeConfigKubeletConfigOutput) ToClusterNodeConfigKubeletConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigKubeletConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterNodeConfigKubeletConfig) *ClusterNodeConfigKubeletConfig {
		return &v
	}).(ClusterNodeConfigKubeletConfigPtrOutput)
}

// If true, enables CPU CFS quota enforcement for
// containers that specify CPU limits.
func (o ClusterNodeConfigKubeletConfigOutput) CpuCfsQuota() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfigKubeletConfig) *bool { return v.CpuCfsQuota }).(pulumi.BoolPtrOutput)
}

// The CPU CFS quota period value. Specified
// as a sequence of decimal numbers, each with optional fraction and a unit suffix,
// such as `"300ms"`. Valid time units are "ns", "us" (or "µs"), "ms", "s", "m",
// "h". The value must be a positive duration.
//
// > Note: At the time of writing (2020/08/18) the GKE API rejects the `none`
// value and accepts an invalid `default` value instead. While this remains true,
// not specifying the `kubeletConfig` block should be the equivalent of specifying
// `none`.
func (o ClusterNodeConfigKubeletConfigOutput) CpuCfsQuotaPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfigKubeletConfig) *string { return v.CpuCfsQuotaPeriod }).(pulumi.StringPtrOutput)
}

// The CPU management policy on the node. See
// [K8S CPU Management Policies](https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/).
// One of `"none"` or `"static"`. Defaults to `none` when `kubeletConfig` is unset.
func (o ClusterNodeConfigKubeletConfigOutput) CpuManagerPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodeConfigKubeletConfig) string { return v.CpuManagerPolicy }).(pulumi.StringOutput)
}

// Controls the maximum number of processes allowed to run in a pod. The value must be greater than or equal to 1024 and less than 4194304.
func (o ClusterNodeConfigKubeletConfigOutput) PodPidsLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfigKubeletConfig) *int { return v.PodPidsLimit }).(pulumi.IntPtrOutput)
}

type ClusterNodeConfigKubeletConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigKubeletConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodeConfigKubeletConfig)(nil)).Elem()
}

func (o ClusterNodeConfigKubeletConfigPtrOutput) ToClusterNodeConfigKubeletConfigPtrOutput() ClusterNodeConfigKubeletConfigPtrOutput {
	return o
}

func (o ClusterNodeConfigKubeletConfigPtrOutput) ToClusterNodeConfigKubeletConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigKubeletConfigPtrOutput {
	return o
}

func (o ClusterNodeConfigKubeletConfigPtrOutput) Elem() ClusterNodeConfigKubeletConfigOutput {
	return o.ApplyT(func(v *ClusterNodeConfigKubeletConfig) ClusterNodeConfigKubeletConfig {
		if v != nil {
			return *v
		}
		var ret ClusterNodeConfigKubeletConfig
		return ret
	}).(ClusterNodeConfigKubeletConfigOutput)
}

// If true, enables CPU CFS quota enforcement for
// containers that specify CPU limits.
func (o ClusterNodeConfigKubeletConfigPtrOutput) CpuCfsQuota() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterNodeConfigKubeletConfig) *bool {
		if v == nil {
			return nil
		}
		return v.CpuCfsQuota
	}).(pulumi.BoolPtrOutput)
}

// The CPU CFS quota period value. Specified
// as a sequence of decimal numbers, each with optional fraction and a unit suffix,
// such as `"300ms"`. Valid time units are "ns", "us" (or "µs"), "ms", "s", "m",
// "h". The value must be a positive duration.
//
// > Note: At the time of writing (2020/08/18) the GKE API rejects the `none`
// value and accepts an invalid `default` value instead. While this remains true,
// not specifying the `kubeletConfig` block should be the equivalent of specifying
// `none`.
func (o ClusterNodeConfigKubeletConfigPtrOutput) CpuCfsQuotaPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNodeConfigKubeletConfig) *string {
		if v == nil {
			return nil
		}
		return v.CpuCfsQuotaPeriod
	}).(pulumi.StringPtrOutput)
}

// The CPU management policy on the node. See
// [K8S CPU Management Policies](https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/).
// One of `"none"` or `"static"`. Defaults to `none` when `kubeletConfig` is unset.
func (o ClusterNodeConfigKubeletConfigPtrOutput) CpuManagerPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNodeConfigKubeletConfig) *string {
		if v == nil {
			return nil
		}
		return &v.CpuManagerPolicy
	}).(pulumi.StringPtrOutput)
}

// Controls the maximum number of processes allowed to run in a pod. The value must be greater than or equal to 1024 and less than 4194304.
func (o ClusterNodeConfigKubeletConfigPtrOutput) PodPidsLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterNodeConfigKubeletConfig) *int {
		if v == nil {
			return nil
		}
		return v.PodPidsLimit
	}).(pulumi.IntPtrOutput)
}

type ClusterNodeConfigLinuxNodeConfig struct {
	// Possible cgroup modes that can be used.
	// Accepted values are:
	CgroupMode *string `pulumi:"cgroupMode"`
	// The Linux kernel parameters to be applied to the nodes
	// and all pods running on the nodes. Specified as a map from the key, such as
	// `net.core.wmem_max`, to a string value. Currently supported attributes can be found [here](https://cloud.google.com/sdk/gcloud/reference/beta/container/node-pools/create#--system-config-from-file).
	// Note that validations happen all server side. All attributes are optional.
	Sysctls map[string]string `pulumi:"sysctls"`
}

// ClusterNodeConfigLinuxNodeConfigInput is an input type that accepts ClusterNodeConfigLinuxNodeConfigArgs and ClusterNodeConfigLinuxNodeConfigOutput values.
// You can construct a concrete instance of `ClusterNodeConfigLinuxNodeConfigInput` via:
//
//	ClusterNodeConfigLinuxNodeConfigArgs{...}
type ClusterNodeConfigLinuxNodeConfigInput interface {
	pulumi.Input

	ToClusterNodeConfigLinuxNodeConfigOutput() ClusterNodeConfigLinuxNodeConfigOutput
	ToClusterNodeConfigLinuxNodeConfigOutputWithContext(context.Context) ClusterNodeConfigLinuxNodeConfigOutput
}

type ClusterNodeConfigLinuxNodeConfigArgs struct {
	// Possible cgroup modes that can be used.
	// Accepted values are:
	CgroupMode pulumi.StringPtrInput `pulumi:"cgroupMode"`
	// The Linux kernel parameters to be applied to the nodes
	// and all pods running on the nodes. Specified as a map from the key, such as
	// `net.core.wmem_max`, to a string value. Currently supported attributes can be found [here](https://cloud.google.com/sdk/gcloud/reference/beta/container/node-pools/create#--system-config-from-file).
	// Note that validations happen all server side. All attributes are optional.
	Sysctls pulumi.StringMapInput `pulumi:"sysctls"`
}

func (ClusterNodeConfigLinuxNodeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigLinuxNodeConfig)(nil)).Elem()
}

func (i ClusterNodeConfigLinuxNodeConfigArgs) ToClusterNodeConfigLinuxNodeConfigOutput() ClusterNodeConfigLinuxNodeConfigOutput {
	return i.ToClusterNodeConfigLinuxNodeConfigOutputWithContext(context.Background())
}

func (i ClusterNodeConfigLinuxNodeConfigArgs) ToClusterNodeConfigLinuxNodeConfigOutputWithContext(ctx context.Context) ClusterNodeConfigLinuxNodeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigLinuxNodeConfigOutput)
}

func (i ClusterNodeConfigLinuxNodeConfigArgs) ToClusterNodeConfigLinuxNodeConfigPtrOutput() ClusterNodeConfigLinuxNodeConfigPtrOutput {
	return i.ToClusterNodeConfigLinuxNodeConfigPtrOutputWithContext(context.Background())
}

func (i ClusterNodeConfigLinuxNodeConfigArgs) ToClusterNodeConfigLinuxNodeConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigLinuxNodeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigLinuxNodeConfigOutput).ToClusterNodeConfigLinuxNodeConfigPtrOutputWithContext(ctx)
}

// ClusterNodeConfigLinuxNodeConfigPtrInput is an input type that accepts ClusterNodeConfigLinuxNodeConfigArgs, ClusterNodeConfigLinuxNodeConfigPtr and ClusterNodeConfigLinuxNodeConfigPtrOutput values.
// You can construct a concrete instance of `ClusterNodeConfigLinuxNodeConfigPtrInput` via:
//
//	        ClusterNodeConfigLinuxNodeConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterNodeConfigLinuxNodeConfigPtrInput interface {
	pulumi.Input

	ToClusterNodeConfigLinuxNodeConfigPtrOutput() ClusterNodeConfigLinuxNodeConfigPtrOutput
	ToClusterNodeConfigLinuxNodeConfigPtrOutputWithContext(context.Context) ClusterNodeConfigLinuxNodeConfigPtrOutput
}

type clusterNodeConfigLinuxNodeConfigPtrType ClusterNodeConfigLinuxNodeConfigArgs

func ClusterNodeConfigLinuxNodeConfigPtr(v *ClusterNodeConfigLinuxNodeConfigArgs) ClusterNodeConfigLinuxNodeConfigPtrInput {
	return (*clusterNodeConfigLinuxNodeConfigPtrType)(v)
}

func (*clusterNodeConfigLinuxNodeConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodeConfigLinuxNodeConfig)(nil)).Elem()
}

func (i *clusterNodeConfigLinuxNodeConfigPtrType) ToClusterNodeConfigLinuxNodeConfigPtrOutput() ClusterNodeConfigLinuxNodeConfigPtrOutput {
	return i.ToClusterNodeConfigLinuxNodeConfigPtrOutputWithContext(context.Background())
}

func (i *clusterNodeConfigLinuxNodeConfigPtrType) ToClusterNodeConfigLinuxNodeConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigLinuxNodeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigLinuxNodeConfigPtrOutput)
}

type ClusterNodeConfigLinuxNodeConfigOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigLinuxNodeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigLinuxNodeConfig)(nil)).Elem()
}

func (o ClusterNodeConfigLinuxNodeConfigOutput) ToClusterNodeConfigLinuxNodeConfigOutput() ClusterNodeConfigLinuxNodeConfigOutput {
	return o
}

func (o ClusterNodeConfigLinuxNodeConfigOutput) ToClusterNodeConfigLinuxNodeConfigOutputWithContext(ctx context.Context) ClusterNodeConfigLinuxNodeConfigOutput {
	return o
}

func (o ClusterNodeConfigLinuxNodeConfigOutput) ToClusterNodeConfigLinuxNodeConfigPtrOutput() ClusterNodeConfigLinuxNodeConfigPtrOutput {
	return o.ToClusterNodeConfigLinuxNodeConfigPtrOutputWithContext(context.Background())
}

func (o ClusterNodeConfigLinuxNodeConfigOutput) ToClusterNodeConfigLinuxNodeConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigLinuxNodeConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterNodeConfigLinuxNodeConfig) *ClusterNodeConfigLinuxNodeConfig {
		return &v
	}).(ClusterNodeConfigLinuxNodeConfigPtrOutput)
}

// Possible cgroup modes that can be used.
// Accepted values are:
func (o ClusterNodeConfigLinuxNodeConfigOutput) CgroupMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfigLinuxNodeConfig) *string { return v.CgroupMode }).(pulumi.StringPtrOutput)
}

// The Linux kernel parameters to be applied to the nodes
// and all pods running on the nodes. Specified as a map from the key, such as
// `net.core.wmem_max`, to a string value. Currently supported attributes can be found [here](https://cloud.google.com/sdk/gcloud/reference/beta/container/node-pools/create#--system-config-from-file).
// Note that validations happen all server side. All attributes are optional.
func (o ClusterNodeConfigLinuxNodeConfigOutput) Sysctls() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterNodeConfigLinuxNodeConfig) map[string]string { return v.Sysctls }).(pulumi.StringMapOutput)
}

type ClusterNodeConfigLinuxNodeConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigLinuxNodeConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodeConfigLinuxNodeConfig)(nil)).Elem()
}

func (o ClusterNodeConfigLinuxNodeConfigPtrOutput) ToClusterNodeConfigLinuxNodeConfigPtrOutput() ClusterNodeConfigLinuxNodeConfigPtrOutput {
	return o
}

func (o ClusterNodeConfigLinuxNodeConfigPtrOutput) ToClusterNodeConfigLinuxNodeConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigLinuxNodeConfigPtrOutput {
	return o
}

func (o ClusterNodeConfigLinuxNodeConfigPtrOutput) Elem() ClusterNodeConfigLinuxNodeConfigOutput {
	return o.ApplyT(func(v *ClusterNodeConfigLinuxNodeConfig) ClusterNodeConfigLinuxNodeConfig {
		if v != nil {
			return *v
		}
		var ret ClusterNodeConfigLinuxNodeConfig
		return ret
	}).(ClusterNodeConfigLinuxNodeConfigOutput)
}

// Possible cgroup modes that can be used.
// Accepted values are:
func (o ClusterNodeConfigLinuxNodeConfigPtrOutput) CgroupMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNodeConfigLinuxNodeConfig) *string {
		if v == nil {
			return nil
		}
		return v.CgroupMode
	}).(pulumi.StringPtrOutput)
}

// The Linux kernel parameters to be applied to the nodes
// and all pods running on the nodes. Specified as a map from the key, such as
// `net.core.wmem_max`, to a string value. Currently supported attributes can be found [here](https://cloud.google.com/sdk/gcloud/reference/beta/container/node-pools/create#--system-config-from-file).
// Note that validations happen all server side. All attributes are optional.
func (o ClusterNodeConfigLinuxNodeConfigPtrOutput) Sysctls() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ClusterNodeConfigLinuxNodeConfig) map[string]string {
		if v == nil {
			return nil
		}
		return v.Sysctls
	}).(pulumi.StringMapOutput)
}

type ClusterNodeConfigLocalNvmeSsdBlockConfig struct {
	// Number of raw-block local NVMe SSD disks to be attached to the node. Each local SSD is 375 GB in size. If zero, it means no raw-block local NVMe SSD disks to be attached to the node.
	// > Note: Local NVMe SSD storage available in GKE versions v1.25.3-gke.1800 and later.
	LocalSsdCount int `pulumi:"localSsdCount"`
}

// ClusterNodeConfigLocalNvmeSsdBlockConfigInput is an input type that accepts ClusterNodeConfigLocalNvmeSsdBlockConfigArgs and ClusterNodeConfigLocalNvmeSsdBlockConfigOutput values.
// You can construct a concrete instance of `ClusterNodeConfigLocalNvmeSsdBlockConfigInput` via:
//
//	ClusterNodeConfigLocalNvmeSsdBlockConfigArgs{...}
type ClusterNodeConfigLocalNvmeSsdBlockConfigInput interface {
	pulumi.Input

	ToClusterNodeConfigLocalNvmeSsdBlockConfigOutput() ClusterNodeConfigLocalNvmeSsdBlockConfigOutput
	ToClusterNodeConfigLocalNvmeSsdBlockConfigOutputWithContext(context.Context) ClusterNodeConfigLocalNvmeSsdBlockConfigOutput
}

type ClusterNodeConfigLocalNvmeSsdBlockConfigArgs struct {
	// Number of raw-block local NVMe SSD disks to be attached to the node. Each local SSD is 375 GB in size. If zero, it means no raw-block local NVMe SSD disks to be attached to the node.
	// > Note: Local NVMe SSD storage available in GKE versions v1.25.3-gke.1800 and later.
	LocalSsdCount pulumi.IntInput `pulumi:"localSsdCount"`
}

func (ClusterNodeConfigLocalNvmeSsdBlockConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigLocalNvmeSsdBlockConfig)(nil)).Elem()
}

func (i ClusterNodeConfigLocalNvmeSsdBlockConfigArgs) ToClusterNodeConfigLocalNvmeSsdBlockConfigOutput() ClusterNodeConfigLocalNvmeSsdBlockConfigOutput {
	return i.ToClusterNodeConfigLocalNvmeSsdBlockConfigOutputWithContext(context.Background())
}

func (i ClusterNodeConfigLocalNvmeSsdBlockConfigArgs) ToClusterNodeConfigLocalNvmeSsdBlockConfigOutputWithContext(ctx context.Context) ClusterNodeConfigLocalNvmeSsdBlockConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigLocalNvmeSsdBlockConfigOutput)
}

func (i ClusterNodeConfigLocalNvmeSsdBlockConfigArgs) ToClusterNodeConfigLocalNvmeSsdBlockConfigPtrOutput() ClusterNodeConfigLocalNvmeSsdBlockConfigPtrOutput {
	return i.ToClusterNodeConfigLocalNvmeSsdBlockConfigPtrOutputWithContext(context.Background())
}

func (i ClusterNodeConfigLocalNvmeSsdBlockConfigArgs) ToClusterNodeConfigLocalNvmeSsdBlockConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigLocalNvmeSsdBlockConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigLocalNvmeSsdBlockConfigOutput).ToClusterNodeConfigLocalNvmeSsdBlockConfigPtrOutputWithContext(ctx)
}

// ClusterNodeConfigLocalNvmeSsdBlockConfigPtrInput is an input type that accepts ClusterNodeConfigLocalNvmeSsdBlockConfigArgs, ClusterNodeConfigLocalNvmeSsdBlockConfigPtr and ClusterNodeConfigLocalNvmeSsdBlockConfigPtrOutput values.
// You can construct a concrete instance of `ClusterNodeConfigLocalNvmeSsdBlockConfigPtrInput` via:
//
//	        ClusterNodeConfigLocalNvmeSsdBlockConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterNodeConfigLocalNvmeSsdBlockConfigPtrInput interface {
	pulumi.Input

	ToClusterNodeConfigLocalNvmeSsdBlockConfigPtrOutput() ClusterNodeConfigLocalNvmeSsdBlockConfigPtrOutput
	ToClusterNodeConfigLocalNvmeSsdBlockConfigPtrOutputWithContext(context.Context) ClusterNodeConfigLocalNvmeSsdBlockConfigPtrOutput
}

type clusterNodeConfigLocalNvmeSsdBlockConfigPtrType ClusterNodeConfigLocalNvmeSsdBlockConfigArgs

func ClusterNodeConfigLocalNvmeSsdBlockConfigPtr(v *ClusterNodeConfigLocalNvmeSsdBlockConfigArgs) ClusterNodeConfigLocalNvmeSsdBlockConfigPtrInput {
	return (*clusterNodeConfigLocalNvmeSsdBlockConfigPtrType)(v)
}

func (*clusterNodeConfigLocalNvmeSsdBlockConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodeConfigLocalNvmeSsdBlockConfig)(nil)).Elem()
}

func (i *clusterNodeConfigLocalNvmeSsdBlockConfigPtrType) ToClusterNodeConfigLocalNvmeSsdBlockConfigPtrOutput() ClusterNodeConfigLocalNvmeSsdBlockConfigPtrOutput {
	return i.ToClusterNodeConfigLocalNvmeSsdBlockConfigPtrOutputWithContext(context.Background())
}

func (i *clusterNodeConfigLocalNvmeSsdBlockConfigPtrType) ToClusterNodeConfigLocalNvmeSsdBlockConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigLocalNvmeSsdBlockConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigLocalNvmeSsdBlockConfigPtrOutput)
}

type ClusterNodeConfigLocalNvmeSsdBlockConfigOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigLocalNvmeSsdBlockConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigLocalNvmeSsdBlockConfig)(nil)).Elem()
}

func (o ClusterNodeConfigLocalNvmeSsdBlockConfigOutput) ToClusterNodeConfigLocalNvmeSsdBlockConfigOutput() ClusterNodeConfigLocalNvmeSsdBlockConfigOutput {
	return o
}

func (o ClusterNodeConfigLocalNvmeSsdBlockConfigOutput) ToClusterNodeConfigLocalNvmeSsdBlockConfigOutputWithContext(ctx context.Context) ClusterNodeConfigLocalNvmeSsdBlockConfigOutput {
	return o
}

func (o ClusterNodeConfigLocalNvmeSsdBlockConfigOutput) ToClusterNodeConfigLocalNvmeSsdBlockConfigPtrOutput() ClusterNodeConfigLocalNvmeSsdBlockConfigPtrOutput {
	return o.ToClusterNodeConfigLocalNvmeSsdBlockConfigPtrOutputWithContext(context.Background())
}

func (o ClusterNodeConfigLocalNvmeSsdBlockConfigOutput) ToClusterNodeConfigLocalNvmeSsdBlockConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigLocalNvmeSsdBlockConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterNodeConfigLocalNvmeSsdBlockConfig) *ClusterNodeConfigLocalNvmeSsdBlockConfig {
		return &v
	}).(ClusterNodeConfigLocalNvmeSsdBlockConfigPtrOutput)
}

// Number of raw-block local NVMe SSD disks to be attached to the node. Each local SSD is 375 GB in size. If zero, it means no raw-block local NVMe SSD disks to be attached to the node.
// > Note: Local NVMe SSD storage available in GKE versions v1.25.3-gke.1800 and later.
func (o ClusterNodeConfigLocalNvmeSsdBlockConfigOutput) LocalSsdCount() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterNodeConfigLocalNvmeSsdBlockConfig) int { return v.LocalSsdCount }).(pulumi.IntOutput)
}

type ClusterNodeConfigLocalNvmeSsdBlockConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigLocalNvmeSsdBlockConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodeConfigLocalNvmeSsdBlockConfig)(nil)).Elem()
}

func (o ClusterNodeConfigLocalNvmeSsdBlockConfigPtrOutput) ToClusterNodeConfigLocalNvmeSsdBlockConfigPtrOutput() ClusterNodeConfigLocalNvmeSsdBlockConfigPtrOutput {
	return o
}

func (o ClusterNodeConfigLocalNvmeSsdBlockConfigPtrOutput) ToClusterNodeConfigLocalNvmeSsdBlockConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigLocalNvmeSsdBlockConfigPtrOutput {
	return o
}

func (o ClusterNodeConfigLocalNvmeSsdBlockConfigPtrOutput) Elem() ClusterNodeConfigLocalNvmeSsdBlockConfigOutput {
	return o.ApplyT(func(v *ClusterNodeConfigLocalNvmeSsdBlockConfig) ClusterNodeConfigLocalNvmeSsdBlockConfig {
		if v != nil {
			return *v
		}
		var ret ClusterNodeConfigLocalNvmeSsdBlockConfig
		return ret
	}).(ClusterNodeConfigLocalNvmeSsdBlockConfigOutput)
}

// Number of raw-block local NVMe SSD disks to be attached to the node. Each local SSD is 375 GB in size. If zero, it means no raw-block local NVMe SSD disks to be attached to the node.
// > Note: Local NVMe SSD storage available in GKE versions v1.25.3-gke.1800 and later.
func (o ClusterNodeConfigLocalNvmeSsdBlockConfigPtrOutput) LocalSsdCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterNodeConfigLocalNvmeSsdBlockConfig) *int {
		if v == nil {
			return nil
		}
		return &v.LocalSsdCount
	}).(pulumi.IntPtrOutput)
}

type ClusterNodeConfigReservationAffinity struct {
	// The type of reservation consumption
	// Accepted values are:
	//
	// * `"UNSPECIFIED"`: Default value. This should not be used.
	// * `"NO_RESERVATION"`: Do not consume from any reserved capacity.
	// * `"ANY_RESERVATION"`: Consume any reservation available.
	// * `"SPECIFIC_RESERVATION"`: Must consume from a specific reservation. Must specify key value fields for specifying the reservations.
	ConsumeReservationType string `pulumi:"consumeReservationType"`
	// The label key of a reservation resource. To target a SPECIFIC_RESERVATION by name, specify "compute.googleapis.com/reservation-name" as the key and specify the name of your reservation as its value.
	Key *string `pulumi:"key"`
	// The list of label values of reservation resources. For example: the name of the specific reservation when using a key of "compute.googleapis.com/reservation-name"
	Values []string `pulumi:"values"`
}

// ClusterNodeConfigReservationAffinityInput is an input type that accepts ClusterNodeConfigReservationAffinityArgs and ClusterNodeConfigReservationAffinityOutput values.
// You can construct a concrete instance of `ClusterNodeConfigReservationAffinityInput` via:
//
//	ClusterNodeConfigReservationAffinityArgs{...}
type ClusterNodeConfigReservationAffinityInput interface {
	pulumi.Input

	ToClusterNodeConfigReservationAffinityOutput() ClusterNodeConfigReservationAffinityOutput
	ToClusterNodeConfigReservationAffinityOutputWithContext(context.Context) ClusterNodeConfigReservationAffinityOutput
}

type ClusterNodeConfigReservationAffinityArgs struct {
	// The type of reservation consumption
	// Accepted values are:
	//
	// * `"UNSPECIFIED"`: Default value. This should not be used.
	// * `"NO_RESERVATION"`: Do not consume from any reserved capacity.
	// * `"ANY_RESERVATION"`: Consume any reservation available.
	// * `"SPECIFIC_RESERVATION"`: Must consume from a specific reservation. Must specify key value fields for specifying the reservations.
	ConsumeReservationType pulumi.StringInput `pulumi:"consumeReservationType"`
	// The label key of a reservation resource. To target a SPECIFIC_RESERVATION by name, specify "compute.googleapis.com/reservation-name" as the key and specify the name of your reservation as its value.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The list of label values of reservation resources. For example: the name of the specific reservation when using a key of "compute.googleapis.com/reservation-name"
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ClusterNodeConfigReservationAffinityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigReservationAffinity)(nil)).Elem()
}

func (i ClusterNodeConfigReservationAffinityArgs) ToClusterNodeConfigReservationAffinityOutput() ClusterNodeConfigReservationAffinityOutput {
	return i.ToClusterNodeConfigReservationAffinityOutputWithContext(context.Background())
}

func (i ClusterNodeConfigReservationAffinityArgs) ToClusterNodeConfigReservationAffinityOutputWithContext(ctx context.Context) ClusterNodeConfigReservationAffinityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigReservationAffinityOutput)
}

func (i ClusterNodeConfigReservationAffinityArgs) ToClusterNodeConfigReservationAffinityPtrOutput() ClusterNodeConfigReservationAffinityPtrOutput {
	return i.ToClusterNodeConfigReservationAffinityPtrOutputWithContext(context.Background())
}

func (i ClusterNodeConfigReservationAffinityArgs) ToClusterNodeConfigReservationAffinityPtrOutputWithContext(ctx context.Context) ClusterNodeConfigReservationAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigReservationAffinityOutput).ToClusterNodeConfigReservationAffinityPtrOutputWithContext(ctx)
}

// ClusterNodeConfigReservationAffinityPtrInput is an input type that accepts ClusterNodeConfigReservationAffinityArgs, ClusterNodeConfigReservationAffinityPtr and ClusterNodeConfigReservationAffinityPtrOutput values.
// You can construct a concrete instance of `ClusterNodeConfigReservationAffinityPtrInput` via:
//
//	        ClusterNodeConfigReservationAffinityArgs{...}
//
//	or:
//
//	        nil
type ClusterNodeConfigReservationAffinityPtrInput interface {
	pulumi.Input

	ToClusterNodeConfigReservationAffinityPtrOutput() ClusterNodeConfigReservationAffinityPtrOutput
	ToClusterNodeConfigReservationAffinityPtrOutputWithContext(context.Context) ClusterNodeConfigReservationAffinityPtrOutput
}

type clusterNodeConfigReservationAffinityPtrType ClusterNodeConfigReservationAffinityArgs

func ClusterNodeConfigReservationAffinityPtr(v *ClusterNodeConfigReservationAffinityArgs) ClusterNodeConfigReservationAffinityPtrInput {
	return (*clusterNodeConfigReservationAffinityPtrType)(v)
}

func (*clusterNodeConfigReservationAffinityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodeConfigReservationAffinity)(nil)).Elem()
}

func (i *clusterNodeConfigReservationAffinityPtrType) ToClusterNodeConfigReservationAffinityPtrOutput() ClusterNodeConfigReservationAffinityPtrOutput {
	return i.ToClusterNodeConfigReservationAffinityPtrOutputWithContext(context.Background())
}

func (i *clusterNodeConfigReservationAffinityPtrType) ToClusterNodeConfigReservationAffinityPtrOutputWithContext(ctx context.Context) ClusterNodeConfigReservationAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigReservationAffinityPtrOutput)
}

type ClusterNodeConfigReservationAffinityOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigReservationAffinityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigReservationAffinity)(nil)).Elem()
}

func (o ClusterNodeConfigReservationAffinityOutput) ToClusterNodeConfigReservationAffinityOutput() ClusterNodeConfigReservationAffinityOutput {
	return o
}

func (o ClusterNodeConfigReservationAffinityOutput) ToClusterNodeConfigReservationAffinityOutputWithContext(ctx context.Context) ClusterNodeConfigReservationAffinityOutput {
	return o
}

func (o ClusterNodeConfigReservationAffinityOutput) ToClusterNodeConfigReservationAffinityPtrOutput() ClusterNodeConfigReservationAffinityPtrOutput {
	return o.ToClusterNodeConfigReservationAffinityPtrOutputWithContext(context.Background())
}

func (o ClusterNodeConfigReservationAffinityOutput) ToClusterNodeConfigReservationAffinityPtrOutputWithContext(ctx context.Context) ClusterNodeConfigReservationAffinityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterNodeConfigReservationAffinity) *ClusterNodeConfigReservationAffinity {
		return &v
	}).(ClusterNodeConfigReservationAffinityPtrOutput)
}

// The type of reservation consumption
// Accepted values are:
//
// * `"UNSPECIFIED"`: Default value. This should not be used.
// * `"NO_RESERVATION"`: Do not consume from any reserved capacity.
// * `"ANY_RESERVATION"`: Consume any reservation available.
// * `"SPECIFIC_RESERVATION"`: Must consume from a specific reservation. Must specify key value fields for specifying the reservations.
func (o ClusterNodeConfigReservationAffinityOutput) ConsumeReservationType() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodeConfigReservationAffinity) string { return v.ConsumeReservationType }).(pulumi.StringOutput)
}

// The label key of a reservation resource. To target a SPECIFIC_RESERVATION by name, specify "compute.googleapis.com/reservation-name" as the key and specify the name of your reservation as its value.
func (o ClusterNodeConfigReservationAffinityOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfigReservationAffinity) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The list of label values of reservation resources. For example: the name of the specific reservation when using a key of "compute.googleapis.com/reservation-name"
func (o ClusterNodeConfigReservationAffinityOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterNodeConfigReservationAffinity) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type ClusterNodeConfigReservationAffinityPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigReservationAffinityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodeConfigReservationAffinity)(nil)).Elem()
}

func (o ClusterNodeConfigReservationAffinityPtrOutput) ToClusterNodeConfigReservationAffinityPtrOutput() ClusterNodeConfigReservationAffinityPtrOutput {
	return o
}

func (o ClusterNodeConfigReservationAffinityPtrOutput) ToClusterNodeConfigReservationAffinityPtrOutputWithContext(ctx context.Context) ClusterNodeConfigReservationAffinityPtrOutput {
	return o
}

func (o ClusterNodeConfigReservationAffinityPtrOutput) Elem() ClusterNodeConfigReservationAffinityOutput {
	return o.ApplyT(func(v *ClusterNodeConfigReservationAffinity) ClusterNodeConfigReservationAffinity {
		if v != nil {
			return *v
		}
		var ret ClusterNodeConfigReservationAffinity
		return ret
	}).(ClusterNodeConfigReservationAffinityOutput)
}

// The type of reservation consumption
// Accepted values are:
//
// * `"UNSPECIFIED"`: Default value. This should not be used.
// * `"NO_RESERVATION"`: Do not consume from any reserved capacity.
// * `"ANY_RESERVATION"`: Consume any reservation available.
// * `"SPECIFIC_RESERVATION"`: Must consume from a specific reservation. Must specify key value fields for specifying the reservations.
func (o ClusterNodeConfigReservationAffinityPtrOutput) ConsumeReservationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNodeConfigReservationAffinity) *string {
		if v == nil {
			return nil
		}
		return &v.ConsumeReservationType
	}).(pulumi.StringPtrOutput)
}

// The label key of a reservation resource. To target a SPECIFIC_RESERVATION by name, specify "compute.googleapis.com/reservation-name" as the key and specify the name of your reservation as its value.
func (o ClusterNodeConfigReservationAffinityPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNodeConfigReservationAffinity) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The list of label values of reservation resources. For example: the name of the specific reservation when using a key of "compute.googleapis.com/reservation-name"
func (o ClusterNodeConfigReservationAffinityPtrOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterNodeConfigReservationAffinity) []string {
		if v == nil {
			return nil
		}
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type ClusterNodeConfigSandboxConfig struct {
	// Which sandbox to use for pods in the node pool.
	// Accepted values are:
	//
	// * `"gvisor"`: Pods run within a gVisor sandbox.
	SandboxType string `pulumi:"sandboxType"`
}

// ClusterNodeConfigSandboxConfigInput is an input type that accepts ClusterNodeConfigSandboxConfigArgs and ClusterNodeConfigSandboxConfigOutput values.
// You can construct a concrete instance of `ClusterNodeConfigSandboxConfigInput` via:
//
//	ClusterNodeConfigSandboxConfigArgs{...}
type ClusterNodeConfigSandboxConfigInput interface {
	pulumi.Input

	ToClusterNodeConfigSandboxConfigOutput() ClusterNodeConfigSandboxConfigOutput
	ToClusterNodeConfigSandboxConfigOutputWithContext(context.Context) ClusterNodeConfigSandboxConfigOutput
}

type ClusterNodeConfigSandboxConfigArgs struct {
	// Which sandbox to use for pods in the node pool.
	// Accepted values are:
	//
	// * `"gvisor"`: Pods run within a gVisor sandbox.
	SandboxType pulumi.StringInput `pulumi:"sandboxType"`
}

func (ClusterNodeConfigSandboxConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigSandboxConfig)(nil)).Elem()
}

func (i ClusterNodeConfigSandboxConfigArgs) ToClusterNodeConfigSandboxConfigOutput() ClusterNodeConfigSandboxConfigOutput {
	return i.ToClusterNodeConfigSandboxConfigOutputWithContext(context.Background())
}

func (i ClusterNodeConfigSandboxConfigArgs) ToClusterNodeConfigSandboxConfigOutputWithContext(ctx context.Context) ClusterNodeConfigSandboxConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigSandboxConfigOutput)
}

func (i ClusterNodeConfigSandboxConfigArgs) ToClusterNodeConfigSandboxConfigPtrOutput() ClusterNodeConfigSandboxConfigPtrOutput {
	return i.ToClusterNodeConfigSandboxConfigPtrOutputWithContext(context.Background())
}

func (i ClusterNodeConfigSandboxConfigArgs) ToClusterNodeConfigSandboxConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigSandboxConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigSandboxConfigOutput).ToClusterNodeConfigSandboxConfigPtrOutputWithContext(ctx)
}

// ClusterNodeConfigSandboxConfigPtrInput is an input type that accepts ClusterNodeConfigSandboxConfigArgs, ClusterNodeConfigSandboxConfigPtr and ClusterNodeConfigSandboxConfigPtrOutput values.
// You can construct a concrete instance of `ClusterNodeConfigSandboxConfigPtrInput` via:
//
//	        ClusterNodeConfigSandboxConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterNodeConfigSandboxConfigPtrInput interface {
	pulumi.Input

	ToClusterNodeConfigSandboxConfigPtrOutput() ClusterNodeConfigSandboxConfigPtrOutput
	ToClusterNodeConfigSandboxConfigPtrOutputWithContext(context.Context) ClusterNodeConfigSandboxConfigPtrOutput
}

type clusterNodeConfigSandboxConfigPtrType ClusterNodeConfigSandboxConfigArgs

func ClusterNodeConfigSandboxConfigPtr(v *ClusterNodeConfigSandboxConfigArgs) ClusterNodeConfigSandboxConfigPtrInput {
	return (*clusterNodeConfigSandboxConfigPtrType)(v)
}

func (*clusterNodeConfigSandboxConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodeConfigSandboxConfig)(nil)).Elem()
}

func (i *clusterNodeConfigSandboxConfigPtrType) ToClusterNodeConfigSandboxConfigPtrOutput() ClusterNodeConfigSandboxConfigPtrOutput {
	return i.ToClusterNodeConfigSandboxConfigPtrOutputWithContext(context.Background())
}

func (i *clusterNodeConfigSandboxConfigPtrType) ToClusterNodeConfigSandboxConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigSandboxConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigSandboxConfigPtrOutput)
}

type ClusterNodeConfigSandboxConfigOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigSandboxConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigSandboxConfig)(nil)).Elem()
}

func (o ClusterNodeConfigSandboxConfigOutput) ToClusterNodeConfigSandboxConfigOutput() ClusterNodeConfigSandboxConfigOutput {
	return o
}

func (o ClusterNodeConfigSandboxConfigOutput) ToClusterNodeConfigSandboxConfigOutputWithContext(ctx context.Context) ClusterNodeConfigSandboxConfigOutput {
	return o
}

func (o ClusterNodeConfigSandboxConfigOutput) ToClusterNodeConfigSandboxConfigPtrOutput() ClusterNodeConfigSandboxConfigPtrOutput {
	return o.ToClusterNodeConfigSandboxConfigPtrOutputWithContext(context.Background())
}

func (o ClusterNodeConfigSandboxConfigOutput) ToClusterNodeConfigSandboxConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigSandboxConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterNodeConfigSandboxConfig) *ClusterNodeConfigSandboxConfig {
		return &v
	}).(ClusterNodeConfigSandboxConfigPtrOutput)
}

// Which sandbox to use for pods in the node pool.
// Accepted values are:
//
// * `"gvisor"`: Pods run within a gVisor sandbox.
func (o ClusterNodeConfigSandboxConfigOutput) SandboxType() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodeConfigSandboxConfig) string { return v.SandboxType }).(pulumi.StringOutput)
}

type ClusterNodeConfigSandboxConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigSandboxConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodeConfigSandboxConfig)(nil)).Elem()
}

func (o ClusterNodeConfigSandboxConfigPtrOutput) ToClusterNodeConfigSandboxConfigPtrOutput() ClusterNodeConfigSandboxConfigPtrOutput {
	return o
}

func (o ClusterNodeConfigSandboxConfigPtrOutput) ToClusterNodeConfigSandboxConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigSandboxConfigPtrOutput {
	return o
}

func (o ClusterNodeConfigSandboxConfigPtrOutput) Elem() ClusterNodeConfigSandboxConfigOutput {
	return o.ApplyT(func(v *ClusterNodeConfigSandboxConfig) ClusterNodeConfigSandboxConfig {
		if v != nil {
			return *v
		}
		var ret ClusterNodeConfigSandboxConfig
		return ret
	}).(ClusterNodeConfigSandboxConfigOutput)
}

// Which sandbox to use for pods in the node pool.
// Accepted values are:
//
// * `"gvisor"`: Pods run within a gVisor sandbox.
func (o ClusterNodeConfigSandboxConfigPtrOutput) SandboxType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNodeConfigSandboxConfig) *string {
		if v == nil {
			return nil
		}
		return &v.SandboxType
	}).(pulumi.StringPtrOutput)
}

type ClusterNodeConfigSecondaryBootDisk struct {
	// Path to disk image to create the secondary boot disk from. After using the [gke-disk-image-builder](https://github.com/GoogleCloudPlatform/ai-on-gke/tree/main/tools/gke-disk-image-builder), this argument should be `global/images/DISK_IMAGE_NAME`.
	DiskImage string `pulumi:"diskImage"`
	// Mode for how the secondary boot disk is used. An example mode is `CONTAINER_IMAGE_CACHE`.
	Mode *string `pulumi:"mode"`
}

// ClusterNodeConfigSecondaryBootDiskInput is an input type that accepts ClusterNodeConfigSecondaryBootDiskArgs and ClusterNodeConfigSecondaryBootDiskOutput values.
// You can construct a concrete instance of `ClusterNodeConfigSecondaryBootDiskInput` via:
//
//	ClusterNodeConfigSecondaryBootDiskArgs{...}
type ClusterNodeConfigSecondaryBootDiskInput interface {
	pulumi.Input

	ToClusterNodeConfigSecondaryBootDiskOutput() ClusterNodeConfigSecondaryBootDiskOutput
	ToClusterNodeConfigSecondaryBootDiskOutputWithContext(context.Context) ClusterNodeConfigSecondaryBootDiskOutput
}

type ClusterNodeConfigSecondaryBootDiskArgs struct {
	// Path to disk image to create the secondary boot disk from. After using the [gke-disk-image-builder](https://github.com/GoogleCloudPlatform/ai-on-gke/tree/main/tools/gke-disk-image-builder), this argument should be `global/images/DISK_IMAGE_NAME`.
	DiskImage pulumi.StringInput `pulumi:"diskImage"`
	// Mode for how the secondary boot disk is used. An example mode is `CONTAINER_IMAGE_CACHE`.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (ClusterNodeConfigSecondaryBootDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigSecondaryBootDisk)(nil)).Elem()
}

func (i ClusterNodeConfigSecondaryBootDiskArgs) ToClusterNodeConfigSecondaryBootDiskOutput() ClusterNodeConfigSecondaryBootDiskOutput {
	return i.ToClusterNodeConfigSecondaryBootDiskOutputWithContext(context.Background())
}

func (i ClusterNodeConfigSecondaryBootDiskArgs) ToClusterNodeConfigSecondaryBootDiskOutputWithContext(ctx context.Context) ClusterNodeConfigSecondaryBootDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigSecondaryBootDiskOutput)
}

// ClusterNodeConfigSecondaryBootDiskArrayInput is an input type that accepts ClusterNodeConfigSecondaryBootDiskArray and ClusterNodeConfigSecondaryBootDiskArrayOutput values.
// You can construct a concrete instance of `ClusterNodeConfigSecondaryBootDiskArrayInput` via:
//
//	ClusterNodeConfigSecondaryBootDiskArray{ ClusterNodeConfigSecondaryBootDiskArgs{...} }
type ClusterNodeConfigSecondaryBootDiskArrayInput interface {
	pulumi.Input

	ToClusterNodeConfigSecondaryBootDiskArrayOutput() ClusterNodeConfigSecondaryBootDiskArrayOutput
	ToClusterNodeConfigSecondaryBootDiskArrayOutputWithContext(context.Context) ClusterNodeConfigSecondaryBootDiskArrayOutput
}

type ClusterNodeConfigSecondaryBootDiskArray []ClusterNodeConfigSecondaryBootDiskInput

func (ClusterNodeConfigSecondaryBootDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodeConfigSecondaryBootDisk)(nil)).Elem()
}

func (i ClusterNodeConfigSecondaryBootDiskArray) ToClusterNodeConfigSecondaryBootDiskArrayOutput() ClusterNodeConfigSecondaryBootDiskArrayOutput {
	return i.ToClusterNodeConfigSecondaryBootDiskArrayOutputWithContext(context.Background())
}

func (i ClusterNodeConfigSecondaryBootDiskArray) ToClusterNodeConfigSecondaryBootDiskArrayOutputWithContext(ctx context.Context) ClusterNodeConfigSecondaryBootDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigSecondaryBootDiskArrayOutput)
}

type ClusterNodeConfigSecondaryBootDiskOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigSecondaryBootDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigSecondaryBootDisk)(nil)).Elem()
}

func (o ClusterNodeConfigSecondaryBootDiskOutput) ToClusterNodeConfigSecondaryBootDiskOutput() ClusterNodeConfigSecondaryBootDiskOutput {
	return o
}

func (o ClusterNodeConfigSecondaryBootDiskOutput) ToClusterNodeConfigSecondaryBootDiskOutputWithContext(ctx context.Context) ClusterNodeConfigSecondaryBootDiskOutput {
	return o
}

// Path to disk image to create the secondary boot disk from. After using the [gke-disk-image-builder](https://github.com/GoogleCloudPlatform/ai-on-gke/tree/main/tools/gke-disk-image-builder), this argument should be `global/images/DISK_IMAGE_NAME`.
func (o ClusterNodeConfigSecondaryBootDiskOutput) DiskImage() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodeConfigSecondaryBootDisk) string { return v.DiskImage }).(pulumi.StringOutput)
}

// Mode for how the secondary boot disk is used. An example mode is `CONTAINER_IMAGE_CACHE`.
func (o ClusterNodeConfigSecondaryBootDiskOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfigSecondaryBootDisk) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type ClusterNodeConfigSecondaryBootDiskArrayOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigSecondaryBootDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodeConfigSecondaryBootDisk)(nil)).Elem()
}

func (o ClusterNodeConfigSecondaryBootDiskArrayOutput) ToClusterNodeConfigSecondaryBootDiskArrayOutput() ClusterNodeConfigSecondaryBootDiskArrayOutput {
	return o
}

func (o ClusterNodeConfigSecondaryBootDiskArrayOutput) ToClusterNodeConfigSecondaryBootDiskArrayOutputWithContext(ctx context.Context) ClusterNodeConfigSecondaryBootDiskArrayOutput {
	return o
}

func (o ClusterNodeConfigSecondaryBootDiskArrayOutput) Index(i pulumi.IntInput) ClusterNodeConfigSecondaryBootDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterNodeConfigSecondaryBootDisk {
		return vs[0].([]ClusterNodeConfigSecondaryBootDisk)[vs[1].(int)]
	}).(ClusterNodeConfigSecondaryBootDiskOutput)
}

type ClusterNodeConfigShieldedInstanceConfig struct {
	// Defines if the instance has integrity monitoring enabled.
	//
	// Enables monitoring and attestation of the boot integrity of the instance. The attestation is performed against the integrity policy baseline. This baseline is initially derived from the implicitly trusted boot image when the instance is created.  Defaults to `true`.
	EnableIntegrityMonitoring *bool `pulumi:"enableIntegrityMonitoring"`
	// Defines if the instance has Secure Boot enabled.
	//
	// Secure Boot helps ensure that the system only runs authentic software by verifying the digital signature of all boot components, and halting the boot process if signature verification fails.  Defaults to `false`.
	EnableSecureBoot *bool `pulumi:"enableSecureBoot"`
}

// ClusterNodeConfigShieldedInstanceConfigInput is an input type that accepts ClusterNodeConfigShieldedInstanceConfigArgs and ClusterNodeConfigShieldedInstanceConfigOutput values.
// You can construct a concrete instance of `ClusterNodeConfigShieldedInstanceConfigInput` via:
//
//	ClusterNodeConfigShieldedInstanceConfigArgs{...}
type ClusterNodeConfigShieldedInstanceConfigInput interface {
	pulumi.Input

	ToClusterNodeConfigShieldedInstanceConfigOutput() ClusterNodeConfigShieldedInstanceConfigOutput
	ToClusterNodeConfigShieldedInstanceConfigOutputWithContext(context.Context) ClusterNodeConfigShieldedInstanceConfigOutput
}

type ClusterNodeConfigShieldedInstanceConfigArgs struct {
	// Defines if the instance has integrity monitoring enabled.
	//
	// Enables monitoring and attestation of the boot integrity of the instance. The attestation is performed against the integrity policy baseline. This baseline is initially derived from the implicitly trusted boot image when the instance is created.  Defaults to `true`.
	EnableIntegrityMonitoring pulumi.BoolPtrInput `pulumi:"enableIntegrityMonitoring"`
	// Defines if the instance has Secure Boot enabled.
	//
	// Secure Boot helps ensure that the system only runs authentic software by verifying the digital signature of all boot components, and halting the boot process if signature verification fails.  Defaults to `false`.
	EnableSecureBoot pulumi.BoolPtrInput `pulumi:"enableSecureBoot"`
}

func (ClusterNodeConfigShieldedInstanceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigShieldedInstanceConfig)(nil)).Elem()
}

func (i ClusterNodeConfigShieldedInstanceConfigArgs) ToClusterNodeConfigShieldedInstanceConfigOutput() ClusterNodeConfigShieldedInstanceConfigOutput {
	return i.ToClusterNodeConfigShieldedInstanceConfigOutputWithContext(context.Background())
}

func (i ClusterNodeConfigShieldedInstanceConfigArgs) ToClusterNodeConfigShieldedInstanceConfigOutputWithContext(ctx context.Context) ClusterNodeConfigShieldedInstanceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigShieldedInstanceConfigOutput)
}

func (i ClusterNodeConfigShieldedInstanceConfigArgs) ToClusterNodeConfigShieldedInstanceConfigPtrOutput() ClusterNodeConfigShieldedInstanceConfigPtrOutput {
	return i.ToClusterNodeConfigShieldedInstanceConfigPtrOutputWithContext(context.Background())
}

func (i ClusterNodeConfigShieldedInstanceConfigArgs) ToClusterNodeConfigShieldedInstanceConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigShieldedInstanceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigShieldedInstanceConfigOutput).ToClusterNodeConfigShieldedInstanceConfigPtrOutputWithContext(ctx)
}

// ClusterNodeConfigShieldedInstanceConfigPtrInput is an input type that accepts ClusterNodeConfigShieldedInstanceConfigArgs, ClusterNodeConfigShieldedInstanceConfigPtr and ClusterNodeConfigShieldedInstanceConfigPtrOutput values.
// You can construct a concrete instance of `ClusterNodeConfigShieldedInstanceConfigPtrInput` via:
//
//	        ClusterNodeConfigShieldedInstanceConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterNodeConfigShieldedInstanceConfigPtrInput interface {
	pulumi.Input

	ToClusterNodeConfigShieldedInstanceConfigPtrOutput() ClusterNodeConfigShieldedInstanceConfigPtrOutput
	ToClusterNodeConfigShieldedInstanceConfigPtrOutputWithContext(context.Context) ClusterNodeConfigShieldedInstanceConfigPtrOutput
}

type clusterNodeConfigShieldedInstanceConfigPtrType ClusterNodeConfigShieldedInstanceConfigArgs

func ClusterNodeConfigShieldedInstanceConfigPtr(v *ClusterNodeConfigShieldedInstanceConfigArgs) ClusterNodeConfigShieldedInstanceConfigPtrInput {
	return (*clusterNodeConfigShieldedInstanceConfigPtrType)(v)
}

func (*clusterNodeConfigShieldedInstanceConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodeConfigShieldedInstanceConfig)(nil)).Elem()
}

func (i *clusterNodeConfigShieldedInstanceConfigPtrType) ToClusterNodeConfigShieldedInstanceConfigPtrOutput() ClusterNodeConfigShieldedInstanceConfigPtrOutput {
	return i.ToClusterNodeConfigShieldedInstanceConfigPtrOutputWithContext(context.Background())
}

func (i *clusterNodeConfigShieldedInstanceConfigPtrType) ToClusterNodeConfigShieldedInstanceConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigShieldedInstanceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigShieldedInstanceConfigPtrOutput)
}

type ClusterNodeConfigShieldedInstanceConfigOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigShieldedInstanceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigShieldedInstanceConfig)(nil)).Elem()
}

func (o ClusterNodeConfigShieldedInstanceConfigOutput) ToClusterNodeConfigShieldedInstanceConfigOutput() ClusterNodeConfigShieldedInstanceConfigOutput {
	return o
}

func (o ClusterNodeConfigShieldedInstanceConfigOutput) ToClusterNodeConfigShieldedInstanceConfigOutputWithContext(ctx context.Context) ClusterNodeConfigShieldedInstanceConfigOutput {
	return o
}

func (o ClusterNodeConfigShieldedInstanceConfigOutput) ToClusterNodeConfigShieldedInstanceConfigPtrOutput() ClusterNodeConfigShieldedInstanceConfigPtrOutput {
	return o.ToClusterNodeConfigShieldedInstanceConfigPtrOutputWithContext(context.Background())
}

func (o ClusterNodeConfigShieldedInstanceConfigOutput) ToClusterNodeConfigShieldedInstanceConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigShieldedInstanceConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterNodeConfigShieldedInstanceConfig) *ClusterNodeConfigShieldedInstanceConfig {
		return &v
	}).(ClusterNodeConfigShieldedInstanceConfigPtrOutput)
}

// Defines if the instance has integrity monitoring enabled.
//
// Enables monitoring and attestation of the boot integrity of the instance. The attestation is performed against the integrity policy baseline. This baseline is initially derived from the implicitly trusted boot image when the instance is created.  Defaults to `true`.
func (o ClusterNodeConfigShieldedInstanceConfigOutput) EnableIntegrityMonitoring() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfigShieldedInstanceConfig) *bool { return v.EnableIntegrityMonitoring }).(pulumi.BoolPtrOutput)
}

// Defines if the instance has Secure Boot enabled.
//
// Secure Boot helps ensure that the system only runs authentic software by verifying the digital signature of all boot components, and halting the boot process if signature verification fails.  Defaults to `false`.
func (o ClusterNodeConfigShieldedInstanceConfigOutput) EnableSecureBoot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfigShieldedInstanceConfig) *bool { return v.EnableSecureBoot }).(pulumi.BoolPtrOutput)
}

type ClusterNodeConfigShieldedInstanceConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigShieldedInstanceConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodeConfigShieldedInstanceConfig)(nil)).Elem()
}

func (o ClusterNodeConfigShieldedInstanceConfigPtrOutput) ToClusterNodeConfigShieldedInstanceConfigPtrOutput() ClusterNodeConfigShieldedInstanceConfigPtrOutput {
	return o
}

func (o ClusterNodeConfigShieldedInstanceConfigPtrOutput) ToClusterNodeConfigShieldedInstanceConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigShieldedInstanceConfigPtrOutput {
	return o
}

func (o ClusterNodeConfigShieldedInstanceConfigPtrOutput) Elem() ClusterNodeConfigShieldedInstanceConfigOutput {
	return o.ApplyT(func(v *ClusterNodeConfigShieldedInstanceConfig) ClusterNodeConfigShieldedInstanceConfig {
		if v != nil {
			return *v
		}
		var ret ClusterNodeConfigShieldedInstanceConfig
		return ret
	}).(ClusterNodeConfigShieldedInstanceConfigOutput)
}

// Defines if the instance has integrity monitoring enabled.
//
// Enables monitoring and attestation of the boot integrity of the instance. The attestation is performed against the integrity policy baseline. This baseline is initially derived from the implicitly trusted boot image when the instance is created.  Defaults to `true`.
func (o ClusterNodeConfigShieldedInstanceConfigPtrOutput) EnableIntegrityMonitoring() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterNodeConfigShieldedInstanceConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EnableIntegrityMonitoring
	}).(pulumi.BoolPtrOutput)
}

// Defines if the instance has Secure Boot enabled.
//
// Secure Boot helps ensure that the system only runs authentic software by verifying the digital signature of all boot components, and halting the boot process if signature verification fails.  Defaults to `false`.
func (o ClusterNodeConfigShieldedInstanceConfigPtrOutput) EnableSecureBoot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterNodeConfigShieldedInstanceConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EnableSecureBoot
	}).(pulumi.BoolPtrOutput)
}

type ClusterNodeConfigSoleTenantConfig struct {
	// .
	NodeAffinities []ClusterNodeConfigSoleTenantConfigNodeAffinity `pulumi:"nodeAffinities"`
}

// ClusterNodeConfigSoleTenantConfigInput is an input type that accepts ClusterNodeConfigSoleTenantConfigArgs and ClusterNodeConfigSoleTenantConfigOutput values.
// You can construct a concrete instance of `ClusterNodeConfigSoleTenantConfigInput` via:
//
//	ClusterNodeConfigSoleTenantConfigArgs{...}
type ClusterNodeConfigSoleTenantConfigInput interface {
	pulumi.Input

	ToClusterNodeConfigSoleTenantConfigOutput() ClusterNodeConfigSoleTenantConfigOutput
	ToClusterNodeConfigSoleTenantConfigOutputWithContext(context.Context) ClusterNodeConfigSoleTenantConfigOutput
}

type ClusterNodeConfigSoleTenantConfigArgs struct {
	// .
	NodeAffinities ClusterNodeConfigSoleTenantConfigNodeAffinityArrayInput `pulumi:"nodeAffinities"`
}

func (ClusterNodeConfigSoleTenantConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigSoleTenantConfig)(nil)).Elem()
}

func (i ClusterNodeConfigSoleTenantConfigArgs) ToClusterNodeConfigSoleTenantConfigOutput() ClusterNodeConfigSoleTenantConfigOutput {
	return i.ToClusterNodeConfigSoleTenantConfigOutputWithContext(context.Background())
}

func (i ClusterNodeConfigSoleTenantConfigArgs) ToClusterNodeConfigSoleTenantConfigOutputWithContext(ctx context.Context) ClusterNodeConfigSoleTenantConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigSoleTenantConfigOutput)
}

func (i ClusterNodeConfigSoleTenantConfigArgs) ToClusterNodeConfigSoleTenantConfigPtrOutput() ClusterNodeConfigSoleTenantConfigPtrOutput {
	return i.ToClusterNodeConfigSoleTenantConfigPtrOutputWithContext(context.Background())
}

func (i ClusterNodeConfigSoleTenantConfigArgs) ToClusterNodeConfigSoleTenantConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigSoleTenantConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigSoleTenantConfigOutput).ToClusterNodeConfigSoleTenantConfigPtrOutputWithContext(ctx)
}

// ClusterNodeConfigSoleTenantConfigPtrInput is an input type that accepts ClusterNodeConfigSoleTenantConfigArgs, ClusterNodeConfigSoleTenantConfigPtr and ClusterNodeConfigSoleTenantConfigPtrOutput values.
// You can construct a concrete instance of `ClusterNodeConfigSoleTenantConfigPtrInput` via:
//
//	        ClusterNodeConfigSoleTenantConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterNodeConfigSoleTenantConfigPtrInput interface {
	pulumi.Input

	ToClusterNodeConfigSoleTenantConfigPtrOutput() ClusterNodeConfigSoleTenantConfigPtrOutput
	ToClusterNodeConfigSoleTenantConfigPtrOutputWithContext(context.Context) ClusterNodeConfigSoleTenantConfigPtrOutput
}

type clusterNodeConfigSoleTenantConfigPtrType ClusterNodeConfigSoleTenantConfigArgs

func ClusterNodeConfigSoleTenantConfigPtr(v *ClusterNodeConfigSoleTenantConfigArgs) ClusterNodeConfigSoleTenantConfigPtrInput {
	return (*clusterNodeConfigSoleTenantConfigPtrType)(v)
}

func (*clusterNodeConfigSoleTenantConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodeConfigSoleTenantConfig)(nil)).Elem()
}

func (i *clusterNodeConfigSoleTenantConfigPtrType) ToClusterNodeConfigSoleTenantConfigPtrOutput() ClusterNodeConfigSoleTenantConfigPtrOutput {
	return i.ToClusterNodeConfigSoleTenantConfigPtrOutputWithContext(context.Background())
}

func (i *clusterNodeConfigSoleTenantConfigPtrType) ToClusterNodeConfigSoleTenantConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigSoleTenantConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigSoleTenantConfigPtrOutput)
}

type ClusterNodeConfigSoleTenantConfigOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigSoleTenantConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigSoleTenantConfig)(nil)).Elem()
}

func (o ClusterNodeConfigSoleTenantConfigOutput) ToClusterNodeConfigSoleTenantConfigOutput() ClusterNodeConfigSoleTenantConfigOutput {
	return o
}

func (o ClusterNodeConfigSoleTenantConfigOutput) ToClusterNodeConfigSoleTenantConfigOutputWithContext(ctx context.Context) ClusterNodeConfigSoleTenantConfigOutput {
	return o
}

func (o ClusterNodeConfigSoleTenantConfigOutput) ToClusterNodeConfigSoleTenantConfigPtrOutput() ClusterNodeConfigSoleTenantConfigPtrOutput {
	return o.ToClusterNodeConfigSoleTenantConfigPtrOutputWithContext(context.Background())
}

func (o ClusterNodeConfigSoleTenantConfigOutput) ToClusterNodeConfigSoleTenantConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigSoleTenantConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterNodeConfigSoleTenantConfig) *ClusterNodeConfigSoleTenantConfig {
		return &v
	}).(ClusterNodeConfigSoleTenantConfigPtrOutput)
}

// .
func (o ClusterNodeConfigSoleTenantConfigOutput) NodeAffinities() ClusterNodeConfigSoleTenantConfigNodeAffinityArrayOutput {
	return o.ApplyT(func(v ClusterNodeConfigSoleTenantConfig) []ClusterNodeConfigSoleTenantConfigNodeAffinity {
		return v.NodeAffinities
	}).(ClusterNodeConfigSoleTenantConfigNodeAffinityArrayOutput)
}

type ClusterNodeConfigSoleTenantConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigSoleTenantConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodeConfigSoleTenantConfig)(nil)).Elem()
}

func (o ClusterNodeConfigSoleTenantConfigPtrOutput) ToClusterNodeConfigSoleTenantConfigPtrOutput() ClusterNodeConfigSoleTenantConfigPtrOutput {
	return o
}

func (o ClusterNodeConfigSoleTenantConfigPtrOutput) ToClusterNodeConfigSoleTenantConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigSoleTenantConfigPtrOutput {
	return o
}

func (o ClusterNodeConfigSoleTenantConfigPtrOutput) Elem() ClusterNodeConfigSoleTenantConfigOutput {
	return o.ApplyT(func(v *ClusterNodeConfigSoleTenantConfig) ClusterNodeConfigSoleTenantConfig {
		if v != nil {
			return *v
		}
		var ret ClusterNodeConfigSoleTenantConfig
		return ret
	}).(ClusterNodeConfigSoleTenantConfigOutput)
}

// .
func (o ClusterNodeConfigSoleTenantConfigPtrOutput) NodeAffinities() ClusterNodeConfigSoleTenantConfigNodeAffinityArrayOutput {
	return o.ApplyT(func(v *ClusterNodeConfigSoleTenantConfig) []ClusterNodeConfigSoleTenantConfigNodeAffinity {
		if v == nil {
			return nil
		}
		return v.NodeAffinities
	}).(ClusterNodeConfigSoleTenantConfigNodeAffinityArrayOutput)
}

type ClusterNodeConfigSoleTenantConfigNodeAffinity struct {
	// The default or custom node affinity label key name.
	Key string `pulumi:"key"`
	// Specifies affinity or anti-affinity. Accepted values are `"IN"` or `"NOT_IN"`
	Operator string `pulumi:"operator"`
	// List of node affinity label values as strings.
	Values []string `pulumi:"values"`
}

// ClusterNodeConfigSoleTenantConfigNodeAffinityInput is an input type that accepts ClusterNodeConfigSoleTenantConfigNodeAffinityArgs and ClusterNodeConfigSoleTenantConfigNodeAffinityOutput values.
// You can construct a concrete instance of `ClusterNodeConfigSoleTenantConfigNodeAffinityInput` via:
//
//	ClusterNodeConfigSoleTenantConfigNodeAffinityArgs{...}
type ClusterNodeConfigSoleTenantConfigNodeAffinityInput interface {
	pulumi.Input

	ToClusterNodeConfigSoleTenantConfigNodeAffinityOutput() ClusterNodeConfigSoleTenantConfigNodeAffinityOutput
	ToClusterNodeConfigSoleTenantConfigNodeAffinityOutputWithContext(context.Context) ClusterNodeConfigSoleTenantConfigNodeAffinityOutput
}

type ClusterNodeConfigSoleTenantConfigNodeAffinityArgs struct {
	// The default or custom node affinity label key name.
	Key pulumi.StringInput `pulumi:"key"`
	// Specifies affinity or anti-affinity. Accepted values are `"IN"` or `"NOT_IN"`
	Operator pulumi.StringInput `pulumi:"operator"`
	// List of node affinity label values as strings.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ClusterNodeConfigSoleTenantConfigNodeAffinityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigSoleTenantConfigNodeAffinity)(nil)).Elem()
}

func (i ClusterNodeConfigSoleTenantConfigNodeAffinityArgs) ToClusterNodeConfigSoleTenantConfigNodeAffinityOutput() ClusterNodeConfigSoleTenantConfigNodeAffinityOutput {
	return i.ToClusterNodeConfigSoleTenantConfigNodeAffinityOutputWithContext(context.Background())
}

func (i ClusterNodeConfigSoleTenantConfigNodeAffinityArgs) ToClusterNodeConfigSoleTenantConfigNodeAffinityOutputWithContext(ctx context.Context) ClusterNodeConfigSoleTenantConfigNodeAffinityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigSoleTenantConfigNodeAffinityOutput)
}

// ClusterNodeConfigSoleTenantConfigNodeAffinityArrayInput is an input type that accepts ClusterNodeConfigSoleTenantConfigNodeAffinityArray and ClusterNodeConfigSoleTenantConfigNodeAffinityArrayOutput values.
// You can construct a concrete instance of `ClusterNodeConfigSoleTenantConfigNodeAffinityArrayInput` via:
//
//	ClusterNodeConfigSoleTenantConfigNodeAffinityArray{ ClusterNodeConfigSoleTenantConfigNodeAffinityArgs{...} }
type ClusterNodeConfigSoleTenantConfigNodeAffinityArrayInput interface {
	pulumi.Input

	ToClusterNodeConfigSoleTenantConfigNodeAffinityArrayOutput() ClusterNodeConfigSoleTenantConfigNodeAffinityArrayOutput
	ToClusterNodeConfigSoleTenantConfigNodeAffinityArrayOutputWithContext(context.Context) ClusterNodeConfigSoleTenantConfigNodeAffinityArrayOutput
}

type ClusterNodeConfigSoleTenantConfigNodeAffinityArray []ClusterNodeConfigSoleTenantConfigNodeAffinityInput

func (ClusterNodeConfigSoleTenantConfigNodeAffinityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodeConfigSoleTenantConfigNodeAffinity)(nil)).Elem()
}

func (i ClusterNodeConfigSoleTenantConfigNodeAffinityArray) ToClusterNodeConfigSoleTenantConfigNodeAffinityArrayOutput() ClusterNodeConfigSoleTenantConfigNodeAffinityArrayOutput {
	return i.ToClusterNodeConfigSoleTenantConfigNodeAffinityArrayOutputWithContext(context.Background())
}

func (i ClusterNodeConfigSoleTenantConfigNodeAffinityArray) ToClusterNodeConfigSoleTenantConfigNodeAffinityArrayOutputWithContext(ctx context.Context) ClusterNodeConfigSoleTenantConfigNodeAffinityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigSoleTenantConfigNodeAffinityArrayOutput)
}

type ClusterNodeConfigSoleTenantConfigNodeAffinityOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigSoleTenantConfigNodeAffinityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigSoleTenantConfigNodeAffinity)(nil)).Elem()
}

func (o ClusterNodeConfigSoleTenantConfigNodeAffinityOutput) ToClusterNodeConfigSoleTenantConfigNodeAffinityOutput() ClusterNodeConfigSoleTenantConfigNodeAffinityOutput {
	return o
}

func (o ClusterNodeConfigSoleTenantConfigNodeAffinityOutput) ToClusterNodeConfigSoleTenantConfigNodeAffinityOutputWithContext(ctx context.Context) ClusterNodeConfigSoleTenantConfigNodeAffinityOutput {
	return o
}

// The default or custom node affinity label key name.
func (o ClusterNodeConfigSoleTenantConfigNodeAffinityOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodeConfigSoleTenantConfigNodeAffinity) string { return v.Key }).(pulumi.StringOutput)
}

// Specifies affinity or anti-affinity. Accepted values are `"IN"` or `"NOT_IN"`
func (o ClusterNodeConfigSoleTenantConfigNodeAffinityOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodeConfigSoleTenantConfigNodeAffinity) string { return v.Operator }).(pulumi.StringOutput)
}

// List of node affinity label values as strings.
func (o ClusterNodeConfigSoleTenantConfigNodeAffinityOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterNodeConfigSoleTenantConfigNodeAffinity) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type ClusterNodeConfigSoleTenantConfigNodeAffinityArrayOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigSoleTenantConfigNodeAffinityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodeConfigSoleTenantConfigNodeAffinity)(nil)).Elem()
}

func (o ClusterNodeConfigSoleTenantConfigNodeAffinityArrayOutput) ToClusterNodeConfigSoleTenantConfigNodeAffinityArrayOutput() ClusterNodeConfigSoleTenantConfigNodeAffinityArrayOutput {
	return o
}

func (o ClusterNodeConfigSoleTenantConfigNodeAffinityArrayOutput) ToClusterNodeConfigSoleTenantConfigNodeAffinityArrayOutputWithContext(ctx context.Context) ClusterNodeConfigSoleTenantConfigNodeAffinityArrayOutput {
	return o
}

func (o ClusterNodeConfigSoleTenantConfigNodeAffinityArrayOutput) Index(i pulumi.IntInput) ClusterNodeConfigSoleTenantConfigNodeAffinityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterNodeConfigSoleTenantConfigNodeAffinity {
		return vs[0].([]ClusterNodeConfigSoleTenantConfigNodeAffinity)[vs[1].(int)]
	}).(ClusterNodeConfigSoleTenantConfigNodeAffinityOutput)
}

type ClusterNodeConfigTaint struct {
	// Effect for taint. Accepted values are `NO_SCHEDULE`, `PREFER_NO_SCHEDULE`, and `NO_EXECUTE`.
	Effect string `pulumi:"effect"`
	// Key for taint.
	Key string `pulumi:"key"`
	// Value for taint.
	Value string `pulumi:"value"`
}

// ClusterNodeConfigTaintInput is an input type that accepts ClusterNodeConfigTaintArgs and ClusterNodeConfigTaintOutput values.
// You can construct a concrete instance of `ClusterNodeConfigTaintInput` via:
//
//	ClusterNodeConfigTaintArgs{...}
type ClusterNodeConfigTaintInput interface {
	pulumi.Input

	ToClusterNodeConfigTaintOutput() ClusterNodeConfigTaintOutput
	ToClusterNodeConfigTaintOutputWithContext(context.Context) ClusterNodeConfigTaintOutput
}

type ClusterNodeConfigTaintArgs struct {
	// Effect for taint. Accepted values are `NO_SCHEDULE`, `PREFER_NO_SCHEDULE`, and `NO_EXECUTE`.
	Effect pulumi.StringInput `pulumi:"effect"`
	// Key for taint.
	Key pulumi.StringInput `pulumi:"key"`
	// Value for taint.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ClusterNodeConfigTaintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigTaint)(nil)).Elem()
}

func (i ClusterNodeConfigTaintArgs) ToClusterNodeConfigTaintOutput() ClusterNodeConfigTaintOutput {
	return i.ToClusterNodeConfigTaintOutputWithContext(context.Background())
}

func (i ClusterNodeConfigTaintArgs) ToClusterNodeConfigTaintOutputWithContext(ctx context.Context) ClusterNodeConfigTaintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigTaintOutput)
}

// ClusterNodeConfigTaintArrayInput is an input type that accepts ClusterNodeConfigTaintArray and ClusterNodeConfigTaintArrayOutput values.
// You can construct a concrete instance of `ClusterNodeConfigTaintArrayInput` via:
//
//	ClusterNodeConfigTaintArray{ ClusterNodeConfigTaintArgs{...} }
type ClusterNodeConfigTaintArrayInput interface {
	pulumi.Input

	ToClusterNodeConfigTaintArrayOutput() ClusterNodeConfigTaintArrayOutput
	ToClusterNodeConfigTaintArrayOutputWithContext(context.Context) ClusterNodeConfigTaintArrayOutput
}

type ClusterNodeConfigTaintArray []ClusterNodeConfigTaintInput

func (ClusterNodeConfigTaintArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodeConfigTaint)(nil)).Elem()
}

func (i ClusterNodeConfigTaintArray) ToClusterNodeConfigTaintArrayOutput() ClusterNodeConfigTaintArrayOutput {
	return i.ToClusterNodeConfigTaintArrayOutputWithContext(context.Background())
}

func (i ClusterNodeConfigTaintArray) ToClusterNodeConfigTaintArrayOutputWithContext(ctx context.Context) ClusterNodeConfigTaintArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigTaintArrayOutput)
}

type ClusterNodeConfigTaintOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigTaintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigTaint)(nil)).Elem()
}

func (o ClusterNodeConfigTaintOutput) ToClusterNodeConfigTaintOutput() ClusterNodeConfigTaintOutput {
	return o
}

func (o ClusterNodeConfigTaintOutput) ToClusterNodeConfigTaintOutputWithContext(ctx context.Context) ClusterNodeConfigTaintOutput {
	return o
}

// Effect for taint. Accepted values are `NO_SCHEDULE`, `PREFER_NO_SCHEDULE`, and `NO_EXECUTE`.
func (o ClusterNodeConfigTaintOutput) Effect() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodeConfigTaint) string { return v.Effect }).(pulumi.StringOutput)
}

// Key for taint.
func (o ClusterNodeConfigTaintOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodeConfigTaint) string { return v.Key }).(pulumi.StringOutput)
}

// Value for taint.
func (o ClusterNodeConfigTaintOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodeConfigTaint) string { return v.Value }).(pulumi.StringOutput)
}

type ClusterNodeConfigTaintArrayOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigTaintArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodeConfigTaint)(nil)).Elem()
}

func (o ClusterNodeConfigTaintArrayOutput) ToClusterNodeConfigTaintArrayOutput() ClusterNodeConfigTaintArrayOutput {
	return o
}

func (o ClusterNodeConfigTaintArrayOutput) ToClusterNodeConfigTaintArrayOutputWithContext(ctx context.Context) ClusterNodeConfigTaintArrayOutput {
	return o
}

func (o ClusterNodeConfigTaintArrayOutput) Index(i pulumi.IntInput) ClusterNodeConfigTaintOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterNodeConfigTaint {
		return vs[0].([]ClusterNodeConfigTaint)[vs[1].(int)]
	}).(ClusterNodeConfigTaintOutput)
}

type ClusterNodeConfigWorkloadMetadataConfig struct {
	// How to expose the node metadata to the workload running on the node.
	// Accepted values are:
	// * UNSPECIFIED: Not Set
	// * GCE_METADATA: Expose all Compute Engine metadata to pods.
	// * GKE_METADATA: Run the GKE Metadata Server on this node. The GKE Metadata Server exposes a metadata API to workloads that is compatible with the V1 Compute Metadata APIs exposed by the Compute Engine and App Engine Metadata Servers. This feature can only be enabled if [workload identity](https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity) is enabled at the cluster level.
	Mode string `pulumi:"mode"`
}

// ClusterNodeConfigWorkloadMetadataConfigInput is an input type that accepts ClusterNodeConfigWorkloadMetadataConfigArgs and ClusterNodeConfigWorkloadMetadataConfigOutput values.
// You can construct a concrete instance of `ClusterNodeConfigWorkloadMetadataConfigInput` via:
//
//	ClusterNodeConfigWorkloadMetadataConfigArgs{...}
type ClusterNodeConfigWorkloadMetadataConfigInput interface {
	pulumi.Input

	ToClusterNodeConfigWorkloadMetadataConfigOutput() ClusterNodeConfigWorkloadMetadataConfigOutput
	ToClusterNodeConfigWorkloadMetadataConfigOutputWithContext(context.Context) ClusterNodeConfigWorkloadMetadataConfigOutput
}

type ClusterNodeConfigWorkloadMetadataConfigArgs struct {
	// How to expose the node metadata to the workload running on the node.
	// Accepted values are:
	// * UNSPECIFIED: Not Set
	// * GCE_METADATA: Expose all Compute Engine metadata to pods.
	// * GKE_METADATA: Run the GKE Metadata Server on this node. The GKE Metadata Server exposes a metadata API to workloads that is compatible with the V1 Compute Metadata APIs exposed by the Compute Engine and App Engine Metadata Servers. This feature can only be enabled if [workload identity](https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity) is enabled at the cluster level.
	Mode pulumi.StringInput `pulumi:"mode"`
}

func (ClusterNodeConfigWorkloadMetadataConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigWorkloadMetadataConfig)(nil)).Elem()
}

func (i ClusterNodeConfigWorkloadMetadataConfigArgs) ToClusterNodeConfigWorkloadMetadataConfigOutput() ClusterNodeConfigWorkloadMetadataConfigOutput {
	return i.ToClusterNodeConfigWorkloadMetadataConfigOutputWithContext(context.Background())
}

func (i ClusterNodeConfigWorkloadMetadataConfigArgs) ToClusterNodeConfigWorkloadMetadataConfigOutputWithContext(ctx context.Context) ClusterNodeConfigWorkloadMetadataConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigWorkloadMetadataConfigOutput)
}

func (i ClusterNodeConfigWorkloadMetadataConfigArgs) ToClusterNodeConfigWorkloadMetadataConfigPtrOutput() ClusterNodeConfigWorkloadMetadataConfigPtrOutput {
	return i.ToClusterNodeConfigWorkloadMetadataConfigPtrOutputWithContext(context.Background())
}

func (i ClusterNodeConfigWorkloadMetadataConfigArgs) ToClusterNodeConfigWorkloadMetadataConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigWorkloadMetadataConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigWorkloadMetadataConfigOutput).ToClusterNodeConfigWorkloadMetadataConfigPtrOutputWithContext(ctx)
}

// ClusterNodeConfigWorkloadMetadataConfigPtrInput is an input type that accepts ClusterNodeConfigWorkloadMetadataConfigArgs, ClusterNodeConfigWorkloadMetadataConfigPtr and ClusterNodeConfigWorkloadMetadataConfigPtrOutput values.
// You can construct a concrete instance of `ClusterNodeConfigWorkloadMetadataConfigPtrInput` via:
//
//	        ClusterNodeConfigWorkloadMetadataConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterNodeConfigWorkloadMetadataConfigPtrInput interface {
	pulumi.Input

	ToClusterNodeConfigWorkloadMetadataConfigPtrOutput() ClusterNodeConfigWorkloadMetadataConfigPtrOutput
	ToClusterNodeConfigWorkloadMetadataConfigPtrOutputWithContext(context.Context) ClusterNodeConfigWorkloadMetadataConfigPtrOutput
}

type clusterNodeConfigWorkloadMetadataConfigPtrType ClusterNodeConfigWorkloadMetadataConfigArgs

func ClusterNodeConfigWorkloadMetadataConfigPtr(v *ClusterNodeConfigWorkloadMetadataConfigArgs) ClusterNodeConfigWorkloadMetadataConfigPtrInput {
	return (*clusterNodeConfigWorkloadMetadataConfigPtrType)(v)
}

func (*clusterNodeConfigWorkloadMetadataConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodeConfigWorkloadMetadataConfig)(nil)).Elem()
}

func (i *clusterNodeConfigWorkloadMetadataConfigPtrType) ToClusterNodeConfigWorkloadMetadataConfigPtrOutput() ClusterNodeConfigWorkloadMetadataConfigPtrOutput {
	return i.ToClusterNodeConfigWorkloadMetadataConfigPtrOutputWithContext(context.Background())
}

func (i *clusterNodeConfigWorkloadMetadataConfigPtrType) ToClusterNodeConfigWorkloadMetadataConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigWorkloadMetadataConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigWorkloadMetadataConfigPtrOutput)
}

type ClusterNodeConfigWorkloadMetadataConfigOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigWorkloadMetadataConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigWorkloadMetadataConfig)(nil)).Elem()
}

func (o ClusterNodeConfigWorkloadMetadataConfigOutput) ToClusterNodeConfigWorkloadMetadataConfigOutput() ClusterNodeConfigWorkloadMetadataConfigOutput {
	return o
}

func (o ClusterNodeConfigWorkloadMetadataConfigOutput) ToClusterNodeConfigWorkloadMetadataConfigOutputWithContext(ctx context.Context) ClusterNodeConfigWorkloadMetadataConfigOutput {
	return o
}

func (o ClusterNodeConfigWorkloadMetadataConfigOutput) ToClusterNodeConfigWorkloadMetadataConfigPtrOutput() ClusterNodeConfigWorkloadMetadataConfigPtrOutput {
	return o.ToClusterNodeConfigWorkloadMetadataConfigPtrOutputWithContext(context.Background())
}

func (o ClusterNodeConfigWorkloadMetadataConfigOutput) ToClusterNodeConfigWorkloadMetadataConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigWorkloadMetadataConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterNodeConfigWorkloadMetadataConfig) *ClusterNodeConfigWorkloadMetadataConfig {
		return &v
	}).(ClusterNodeConfigWorkloadMetadataConfigPtrOutput)
}

// How to expose the node metadata to the workload running on the node.
// Accepted values are:
// * UNSPECIFIED: Not Set
// * GCE_METADATA: Expose all Compute Engine metadata to pods.
// * GKE_METADATA: Run the GKE Metadata Server on this node. The GKE Metadata Server exposes a metadata API to workloads that is compatible with the V1 Compute Metadata APIs exposed by the Compute Engine and App Engine Metadata Servers. This feature can only be enabled if [workload identity](https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity) is enabled at the cluster level.
func (o ClusterNodeConfigWorkloadMetadataConfigOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodeConfigWorkloadMetadataConfig) string { return v.Mode }).(pulumi.StringOutput)
}

type ClusterNodeConfigWorkloadMetadataConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigWorkloadMetadataConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodeConfigWorkloadMetadataConfig)(nil)).Elem()
}

func (o ClusterNodeConfigWorkloadMetadataConfigPtrOutput) ToClusterNodeConfigWorkloadMetadataConfigPtrOutput() ClusterNodeConfigWorkloadMetadataConfigPtrOutput {
	return o
}

func (o ClusterNodeConfigWorkloadMetadataConfigPtrOutput) ToClusterNodeConfigWorkloadMetadataConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigWorkloadMetadataConfigPtrOutput {
	return o
}

func (o ClusterNodeConfigWorkloadMetadataConfigPtrOutput) Elem() ClusterNodeConfigWorkloadMetadataConfigOutput {
	return o.ApplyT(func(v *ClusterNodeConfigWorkloadMetadataConfig) ClusterNodeConfigWorkloadMetadataConfig {
		if v != nil {
			return *v
		}
		var ret ClusterNodeConfigWorkloadMetadataConfig
		return ret
	}).(ClusterNodeConfigWorkloadMetadataConfigOutput)
}

// How to expose the node metadata to the workload running on the node.
// Accepted values are:
// * UNSPECIFIED: Not Set
// * GCE_METADATA: Expose all Compute Engine metadata to pods.
// * GKE_METADATA: Run the GKE Metadata Server on this node. The GKE Metadata Server exposes a metadata API to workloads that is compatible with the V1 Compute Metadata APIs exposed by the Compute Engine and App Engine Metadata Servers. This feature can only be enabled if [workload identity](https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity) is enabled at the cluster level.
func (o ClusterNodeConfigWorkloadMetadataConfigPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNodeConfigWorkloadMetadataConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Mode
	}).(pulumi.StringPtrOutput)
}

type ClusterNodePool struct {
	// Configuration required by cluster autoscaler to adjust the size of the node pool to the current cluster usage.
	Autoscaling *ClusterNodePoolAutoscaling `pulumi:"autoscaling"`
	// The number of nodes to create in this
	// cluster's default node pool. In regional or multi-zonal clusters, this is the
	// number of nodes per zone. Must be set if `nodePool` is not set. If you're using
	// `container.NodePool` objects with no default node pool, you'll need to
	// set this to a value of at least `1`, alongside setting
	// `removeDefaultNodePool` to `true`.
	InitialNodeCount *int `pulumi:"initialNodeCount"`
	// The resource URLs of the managed instance groups associated with this node pool.
	InstanceGroupUrls []string `pulumi:"instanceGroupUrls"`
	// List of instance group URLs which have been assigned to this node pool.
	ManagedInstanceGroupUrls []string `pulumi:"managedInstanceGroupUrls"`
	// Node management configuration, wherein auto-repair and auto-upgrade is configured.
	Management *ClusterNodePoolManagement `pulumi:"management"`
	// The maximum number of pods per node in this node pool. Note that this does not work on node pools which are "route-based" - that is, node pools belonging to clusters that do not have IP Aliasing enabled.
	MaxPodsPerNode *int `pulumi:"maxPodsPerNode"`
	// The name of the cluster, unique within the project and
	// location.
	//
	// ***
	Name *string `pulumi:"name"`
	// Creates a unique name for the node pool beginning with the specified prefix. Conflicts with name.
	NamePrefix *string `pulumi:"namePrefix"`
	// Configuration for
	// [Adding Pod IP address ranges](https://cloud.google.com/kubernetes-engine/docs/how-to/multi-pod-cidr)) to the node pool. Structure is documented below
	NetworkConfig *ClusterNodePoolNetworkConfig `pulumi:"networkConfig"`
	// Parameters used in creating the default node pool.
	// Generally, this field should not be used at the same time as a
	// `container.NodePool` or a `nodePool` block; this configuration
	// manages the default node pool, which isn't recommended to be used.
	// Structure is documented below.
	NodeConfig *ClusterNodePoolNodeConfig `pulumi:"nodeConfig"`
	// The number of nodes per instance group. This field can be used to update the number of nodes per instance group but should not be used alongside autoscaling.
	NodeCount *int `pulumi:"nodeCount"`
	// The list of zones in which the cluster's nodes
	// are located. Nodes must be in the region of their regional cluster or in the
	// same region as their cluster's zone for zonal clusters. If this is specified for
	// a zonal cluster, omit the cluster's zone.
	//
	// > A "multi-zonal" cluster is a zonal cluster with at least one additional zone
	// defined; in a multi-zonal cluster, the cluster master is only present in a
	// single zone while nodes are present in each of the primary zone and the node
	// locations. In contrast, in a regional cluster, cluster master nodes are present
	// in multiple zones in the region. For that reason, regional clusters should be
	// preferred.
	NodeLocations []string `pulumi:"nodeLocations"`
	// Specifies the node placement policy
	PlacementPolicy *ClusterNodePoolPlacementPolicy `pulumi:"placementPolicy"`
	// Specifies the configuration of queued provisioning
	QueuedProvisioning *ClusterNodePoolQueuedProvisioning `pulumi:"queuedProvisioning"`
	// Specify node upgrade settings to change how many nodes GKE attempts to upgrade at once. The number of nodes upgraded simultaneously is the sum of maxSurge and max_unavailable. The maximum number of nodes upgraded simultaneously is limited to 20.
	UpgradeSettings *ClusterNodePoolUpgradeSettings `pulumi:"upgradeSettings"`
	Version         *string                         `pulumi:"version"`
}

// ClusterNodePoolInput is an input type that accepts ClusterNodePoolArgs and ClusterNodePoolOutput values.
// You can construct a concrete instance of `ClusterNodePoolInput` via:
//
//	ClusterNodePoolArgs{...}
type ClusterNodePoolInput interface {
	pulumi.Input

	ToClusterNodePoolOutput() ClusterNodePoolOutput
	ToClusterNodePoolOutputWithContext(context.Context) ClusterNodePoolOutput
}

type ClusterNodePoolArgs struct {
	// Configuration required by cluster autoscaler to adjust the size of the node pool to the current cluster usage.
	Autoscaling ClusterNodePoolAutoscalingPtrInput `pulumi:"autoscaling"`
	// The number of nodes to create in this
	// cluster's default node pool. In regional or multi-zonal clusters, this is the
	// number of nodes per zone. Must be set if `nodePool` is not set. If you're using
	// `container.NodePool` objects with no default node pool, you'll need to
	// set this to a value of at least `1`, alongside setting
	// `removeDefaultNodePool` to `true`.
	InitialNodeCount pulumi.IntPtrInput `pulumi:"initialNodeCount"`
	// The resource URLs of the managed instance groups associated with this node pool.
	InstanceGroupUrls pulumi.StringArrayInput `pulumi:"instanceGroupUrls"`
	// List of instance group URLs which have been assigned to this node pool.
	ManagedInstanceGroupUrls pulumi.StringArrayInput `pulumi:"managedInstanceGroupUrls"`
	// Node management configuration, wherein auto-repair and auto-upgrade is configured.
	Management ClusterNodePoolManagementPtrInput `pulumi:"management"`
	// The maximum number of pods per node in this node pool. Note that this does not work on node pools which are "route-based" - that is, node pools belonging to clusters that do not have IP Aliasing enabled.
	MaxPodsPerNode pulumi.IntPtrInput `pulumi:"maxPodsPerNode"`
	// The name of the cluster, unique within the project and
	// location.
	//
	// ***
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Creates a unique name for the node pool beginning with the specified prefix. Conflicts with name.
	NamePrefix pulumi.StringPtrInput `pulumi:"namePrefix"`
	// Configuration for
	// [Adding Pod IP address ranges](https://cloud.google.com/kubernetes-engine/docs/how-to/multi-pod-cidr)) to the node pool. Structure is documented below
	NetworkConfig ClusterNodePoolNetworkConfigPtrInput `pulumi:"networkConfig"`
	// Parameters used in creating the default node pool.
	// Generally, this field should not be used at the same time as a
	// `container.NodePool` or a `nodePool` block; this configuration
	// manages the default node pool, which isn't recommended to be used.
	// Structure is documented below.
	NodeConfig ClusterNodePoolNodeConfigPtrInput `pulumi:"nodeConfig"`
	// The number of nodes per instance group. This field can be used to update the number of nodes per instance group but should not be used alongside autoscaling.
	NodeCount pulumi.IntPtrInput `pulumi:"nodeCount"`
	// The list of zones in which the cluster's nodes
	// are located. Nodes must be in the region of their regional cluster or in the
	// same region as their cluster's zone for zonal clusters. If this is specified for
	// a zonal cluster, omit the cluster's zone.
	//
	// > A "multi-zonal" cluster is a zonal cluster with at least one additional zone
	// defined; in a multi-zonal cluster, the cluster master is only present in a
	// single zone while nodes are present in each of the primary zone and the node
	// locations. In contrast, in a regional cluster, cluster master nodes are present
	// in multiple zones in the region. For that reason, regional clusters should be
	// preferred.
	NodeLocations pulumi.StringArrayInput `pulumi:"nodeLocations"`
	// Specifies the node placement policy
	PlacementPolicy ClusterNodePoolPlacementPolicyPtrInput `pulumi:"placementPolicy"`
	// Specifies the configuration of queued provisioning
	QueuedProvisioning ClusterNodePoolQueuedProvisioningPtrInput `pulumi:"queuedProvisioning"`
	// Specify node upgrade settings to change how many nodes GKE attempts to upgrade at once. The number of nodes upgraded simultaneously is the sum of maxSurge and max_unavailable. The maximum number of nodes upgraded simultaneously is limited to 20.
	UpgradeSettings ClusterNodePoolUpgradeSettingsPtrInput `pulumi:"upgradeSettings"`
	Version         pulumi.StringPtrInput                  `pulumi:"version"`
}

func (ClusterNodePoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePool)(nil)).Elem()
}

func (i ClusterNodePoolArgs) ToClusterNodePoolOutput() ClusterNodePoolOutput {
	return i.ToClusterNodePoolOutputWithContext(context.Background())
}

func (i ClusterNodePoolArgs) ToClusterNodePoolOutputWithContext(ctx context.Context) ClusterNodePoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolOutput)
}

// ClusterNodePoolArrayInput is an input type that accepts ClusterNodePoolArray and ClusterNodePoolArrayOutput values.
// You can construct a concrete instance of `ClusterNodePoolArrayInput` via:
//
//	ClusterNodePoolArray{ ClusterNodePoolArgs{...} }
type ClusterNodePoolArrayInput interface {
	pulumi.Input

	ToClusterNodePoolArrayOutput() ClusterNodePoolArrayOutput
	ToClusterNodePoolArrayOutputWithContext(context.Context) ClusterNodePoolArrayOutput
}

type ClusterNodePoolArray []ClusterNodePoolInput

func (ClusterNodePoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodePool)(nil)).Elem()
}

func (i ClusterNodePoolArray) ToClusterNodePoolArrayOutput() ClusterNodePoolArrayOutput {
	return i.ToClusterNodePoolArrayOutputWithContext(context.Background())
}

func (i ClusterNodePoolArray) ToClusterNodePoolArrayOutputWithContext(ctx context.Context) ClusterNodePoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolArrayOutput)
}

type ClusterNodePoolOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePool)(nil)).Elem()
}

func (o ClusterNodePoolOutput) ToClusterNodePoolOutput() ClusterNodePoolOutput {
	return o
}

func (o ClusterNodePoolOutput) ToClusterNodePoolOutputWithContext(ctx context.Context) ClusterNodePoolOutput {
	return o
}

// Configuration required by cluster autoscaler to adjust the size of the node pool to the current cluster usage.
func (o ClusterNodePoolOutput) Autoscaling() ClusterNodePoolAutoscalingPtrOutput {
	return o.ApplyT(func(v ClusterNodePool) *ClusterNodePoolAutoscaling { return v.Autoscaling }).(ClusterNodePoolAutoscalingPtrOutput)
}

// The number of nodes to create in this
// cluster's default node pool. In regional or multi-zonal clusters, this is the
// number of nodes per zone. Must be set if `nodePool` is not set. If you're using
// `container.NodePool` objects with no default node pool, you'll need to
// set this to a value of at least `1`, alongside setting
// `removeDefaultNodePool` to `true`.
func (o ClusterNodePoolOutput) InitialNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterNodePool) *int { return v.InitialNodeCount }).(pulumi.IntPtrOutput)
}

// The resource URLs of the managed instance groups associated with this node pool.
func (o ClusterNodePoolOutput) InstanceGroupUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterNodePool) []string { return v.InstanceGroupUrls }).(pulumi.StringArrayOutput)
}

// List of instance group URLs which have been assigned to this node pool.
func (o ClusterNodePoolOutput) ManagedInstanceGroupUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterNodePool) []string { return v.ManagedInstanceGroupUrls }).(pulumi.StringArrayOutput)
}

// Node management configuration, wherein auto-repair and auto-upgrade is configured.
func (o ClusterNodePoolOutput) Management() ClusterNodePoolManagementPtrOutput {
	return o.ApplyT(func(v ClusterNodePool) *ClusterNodePoolManagement { return v.Management }).(ClusterNodePoolManagementPtrOutput)
}

// The maximum number of pods per node in this node pool. Note that this does not work on node pools which are "route-based" - that is, node pools belonging to clusters that do not have IP Aliasing enabled.
func (o ClusterNodePoolOutput) MaxPodsPerNode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterNodePool) *int { return v.MaxPodsPerNode }).(pulumi.IntPtrOutput)
}

// The name of the cluster, unique within the project and
// location.
//
// ***
func (o ClusterNodePoolOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodePool) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Creates a unique name for the node pool beginning with the specified prefix. Conflicts with name.
func (o ClusterNodePoolOutput) NamePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodePool) *string { return v.NamePrefix }).(pulumi.StringPtrOutput)
}

// Configuration for
// [Adding Pod IP address ranges](https://cloud.google.com/kubernetes-engine/docs/how-to/multi-pod-cidr)) to the node pool. Structure is documented below
func (o ClusterNodePoolOutput) NetworkConfig() ClusterNodePoolNetworkConfigPtrOutput {
	return o.ApplyT(func(v ClusterNodePool) *ClusterNodePoolNetworkConfig { return v.NetworkConfig }).(ClusterNodePoolNetworkConfigPtrOutput)
}

// Parameters used in creating the default node pool.
// Generally, this field should not be used at the same time as a
// `container.NodePool` or a `nodePool` block; this configuration
// manages the default node pool, which isn't recommended to be used.
// Structure is documented below.
func (o ClusterNodePoolOutput) NodeConfig() ClusterNodePoolNodeConfigPtrOutput {
	return o.ApplyT(func(v ClusterNodePool) *ClusterNodePoolNodeConfig { return v.NodeConfig }).(ClusterNodePoolNodeConfigPtrOutput)
}

// The number of nodes per instance group. This field can be used to update the number of nodes per instance group but should not be used alongside autoscaling.
func (o ClusterNodePoolOutput) NodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterNodePool) *int { return v.NodeCount }).(pulumi.IntPtrOutput)
}

// The list of zones in which the cluster's nodes
// are located. Nodes must be in the region of their regional cluster or in the
// same region as their cluster's zone for zonal clusters. If this is specified for
// a zonal cluster, omit the cluster's zone.
//
// > A "multi-zonal" cluster is a zonal cluster with at least one additional zone
// defined; in a multi-zonal cluster, the cluster master is only present in a
// single zone while nodes are present in each of the primary zone and the node
// locations. In contrast, in a regional cluster, cluster master nodes are present
// in multiple zones in the region. For that reason, regional clusters should be
// preferred.
func (o ClusterNodePoolOutput) NodeLocations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterNodePool) []string { return v.NodeLocations }).(pulumi.StringArrayOutput)
}

// Specifies the node placement policy
func (o ClusterNodePoolOutput) PlacementPolicy() ClusterNodePoolPlacementPolicyPtrOutput {
	return o.ApplyT(func(v ClusterNodePool) *ClusterNodePoolPlacementPolicy { return v.PlacementPolicy }).(ClusterNodePoolPlacementPolicyPtrOutput)
}

// Specifies the configuration of queued provisioning
func (o ClusterNodePoolOutput) QueuedProvisioning() ClusterNodePoolQueuedProvisioningPtrOutput {
	return o.ApplyT(func(v ClusterNodePool) *ClusterNodePoolQueuedProvisioning { return v.QueuedProvisioning }).(ClusterNodePoolQueuedProvisioningPtrOutput)
}

// Specify node upgrade settings to change how many nodes GKE attempts to upgrade at once. The number of nodes upgraded simultaneously is the sum of maxSurge and max_unavailable. The maximum number of nodes upgraded simultaneously is limited to 20.
func (o ClusterNodePoolOutput) UpgradeSettings() ClusterNodePoolUpgradeSettingsPtrOutput {
	return o.ApplyT(func(v ClusterNodePool) *ClusterNodePoolUpgradeSettings { return v.UpgradeSettings }).(ClusterNodePoolUpgradeSettingsPtrOutput)
}

func (o ClusterNodePoolOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodePool) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type ClusterNodePoolArrayOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodePool)(nil)).Elem()
}

func (o ClusterNodePoolArrayOutput) ToClusterNodePoolArrayOutput() ClusterNodePoolArrayOutput {
	return o
}

func (o ClusterNodePoolArrayOutput) ToClusterNodePoolArrayOutputWithContext(ctx context.Context) ClusterNodePoolArrayOutput {
	return o
}

func (o ClusterNodePoolArrayOutput) Index(i pulumi.IntInput) ClusterNodePoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterNodePool {
		return vs[0].([]ClusterNodePool)[vs[1].(int)]
	}).(ClusterNodePoolOutput)
}

type ClusterNodePoolAutoConfig struct {
	// The network tag config for the cluster's automatically provisioned node pools.
	NetworkTags *ClusterNodePoolAutoConfigNetworkTags `pulumi:"networkTags"`
	// A map of resource manager tag keys and values to be attached to the nodes for managing Compute Engine firewalls using Network Firewall Policies. Tags must be according to specifications found [here](https://cloud.google.com/vpc/docs/tags-firewalls-overview#specifications). A maximum of 5 tag key-value pairs can be specified. Existing tags will be replaced with new values. Tags must be in one of the following formats ([KEY]=[VALUE]) 1. `tagKeys/{tag_key_id}=tagValues/{tag_value_id}` 2. `{org_id}/{tag_key_name}={tag_value_name}` 3. `{project_id}/{tag_key_name}={tag_value_name}`.
	ResourceManagerTags map[string]interface{} `pulumi:"resourceManagerTags"`
}

// ClusterNodePoolAutoConfigInput is an input type that accepts ClusterNodePoolAutoConfigArgs and ClusterNodePoolAutoConfigOutput values.
// You can construct a concrete instance of `ClusterNodePoolAutoConfigInput` via:
//
//	ClusterNodePoolAutoConfigArgs{...}
type ClusterNodePoolAutoConfigInput interface {
	pulumi.Input

	ToClusterNodePoolAutoConfigOutput() ClusterNodePoolAutoConfigOutput
	ToClusterNodePoolAutoConfigOutputWithContext(context.Context) ClusterNodePoolAutoConfigOutput
}

type ClusterNodePoolAutoConfigArgs struct {
	// The network tag config for the cluster's automatically provisioned node pools.
	NetworkTags ClusterNodePoolAutoConfigNetworkTagsPtrInput `pulumi:"networkTags"`
	// A map of resource manager tag keys and values to be attached to the nodes for managing Compute Engine firewalls using Network Firewall Policies. Tags must be according to specifications found [here](https://cloud.google.com/vpc/docs/tags-firewalls-overview#specifications). A maximum of 5 tag key-value pairs can be specified. Existing tags will be replaced with new values. Tags must be in one of the following formats ([KEY]=[VALUE]) 1. `tagKeys/{tag_key_id}=tagValues/{tag_value_id}` 2. `{org_id}/{tag_key_name}={tag_value_name}` 3. `{project_id}/{tag_key_name}={tag_value_name}`.
	ResourceManagerTags pulumi.MapInput `pulumi:"resourceManagerTags"`
}

func (ClusterNodePoolAutoConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolAutoConfig)(nil)).Elem()
}

func (i ClusterNodePoolAutoConfigArgs) ToClusterNodePoolAutoConfigOutput() ClusterNodePoolAutoConfigOutput {
	return i.ToClusterNodePoolAutoConfigOutputWithContext(context.Background())
}

func (i ClusterNodePoolAutoConfigArgs) ToClusterNodePoolAutoConfigOutputWithContext(ctx context.Context) ClusterNodePoolAutoConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolAutoConfigOutput)
}

func (i ClusterNodePoolAutoConfigArgs) ToClusterNodePoolAutoConfigPtrOutput() ClusterNodePoolAutoConfigPtrOutput {
	return i.ToClusterNodePoolAutoConfigPtrOutputWithContext(context.Background())
}

func (i ClusterNodePoolAutoConfigArgs) ToClusterNodePoolAutoConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolAutoConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolAutoConfigOutput).ToClusterNodePoolAutoConfigPtrOutputWithContext(ctx)
}

// ClusterNodePoolAutoConfigPtrInput is an input type that accepts ClusterNodePoolAutoConfigArgs, ClusterNodePoolAutoConfigPtr and ClusterNodePoolAutoConfigPtrOutput values.
// You can construct a concrete instance of `ClusterNodePoolAutoConfigPtrInput` via:
//
//	        ClusterNodePoolAutoConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterNodePoolAutoConfigPtrInput interface {
	pulumi.Input

	ToClusterNodePoolAutoConfigPtrOutput() ClusterNodePoolAutoConfigPtrOutput
	ToClusterNodePoolAutoConfigPtrOutputWithContext(context.Context) ClusterNodePoolAutoConfigPtrOutput
}

type clusterNodePoolAutoConfigPtrType ClusterNodePoolAutoConfigArgs

func ClusterNodePoolAutoConfigPtr(v *ClusterNodePoolAutoConfigArgs) ClusterNodePoolAutoConfigPtrInput {
	return (*clusterNodePoolAutoConfigPtrType)(v)
}

func (*clusterNodePoolAutoConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolAutoConfig)(nil)).Elem()
}

func (i *clusterNodePoolAutoConfigPtrType) ToClusterNodePoolAutoConfigPtrOutput() ClusterNodePoolAutoConfigPtrOutput {
	return i.ToClusterNodePoolAutoConfigPtrOutputWithContext(context.Background())
}

func (i *clusterNodePoolAutoConfigPtrType) ToClusterNodePoolAutoConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolAutoConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolAutoConfigPtrOutput)
}

type ClusterNodePoolAutoConfigOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolAutoConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolAutoConfig)(nil)).Elem()
}

func (o ClusterNodePoolAutoConfigOutput) ToClusterNodePoolAutoConfigOutput() ClusterNodePoolAutoConfigOutput {
	return o
}

func (o ClusterNodePoolAutoConfigOutput) ToClusterNodePoolAutoConfigOutputWithContext(ctx context.Context) ClusterNodePoolAutoConfigOutput {
	return o
}

func (o ClusterNodePoolAutoConfigOutput) ToClusterNodePoolAutoConfigPtrOutput() ClusterNodePoolAutoConfigPtrOutput {
	return o.ToClusterNodePoolAutoConfigPtrOutputWithContext(context.Background())
}

func (o ClusterNodePoolAutoConfigOutput) ToClusterNodePoolAutoConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolAutoConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterNodePoolAutoConfig) *ClusterNodePoolAutoConfig {
		return &v
	}).(ClusterNodePoolAutoConfigPtrOutput)
}

// The network tag config for the cluster's automatically provisioned node pools.
func (o ClusterNodePoolAutoConfigOutput) NetworkTags() ClusterNodePoolAutoConfigNetworkTagsPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolAutoConfig) *ClusterNodePoolAutoConfigNetworkTags { return v.NetworkTags }).(ClusterNodePoolAutoConfigNetworkTagsPtrOutput)
}

// A map of resource manager tag keys and values to be attached to the nodes for managing Compute Engine firewalls using Network Firewall Policies. Tags must be according to specifications found [here](https://cloud.google.com/vpc/docs/tags-firewalls-overview#specifications). A maximum of 5 tag key-value pairs can be specified. Existing tags will be replaced with new values. Tags must be in one of the following formats ([KEY]=[VALUE]) 1. `tagKeys/{tag_key_id}=tagValues/{tag_value_id}` 2. `{org_id}/{tag_key_name}={tag_value_name}` 3. `{project_id}/{tag_key_name}={tag_value_name}`.
func (o ClusterNodePoolAutoConfigOutput) ResourceManagerTags() pulumi.MapOutput {
	return o.ApplyT(func(v ClusterNodePoolAutoConfig) map[string]interface{} { return v.ResourceManagerTags }).(pulumi.MapOutput)
}

type ClusterNodePoolAutoConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolAutoConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolAutoConfig)(nil)).Elem()
}

func (o ClusterNodePoolAutoConfigPtrOutput) ToClusterNodePoolAutoConfigPtrOutput() ClusterNodePoolAutoConfigPtrOutput {
	return o
}

func (o ClusterNodePoolAutoConfigPtrOutput) ToClusterNodePoolAutoConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolAutoConfigPtrOutput {
	return o
}

func (o ClusterNodePoolAutoConfigPtrOutput) Elem() ClusterNodePoolAutoConfigOutput {
	return o.ApplyT(func(v *ClusterNodePoolAutoConfig) ClusterNodePoolAutoConfig {
		if v != nil {
			return *v
		}
		var ret ClusterNodePoolAutoConfig
		return ret
	}).(ClusterNodePoolAutoConfigOutput)
}

// The network tag config for the cluster's automatically provisioned node pools.
func (o ClusterNodePoolAutoConfigPtrOutput) NetworkTags() ClusterNodePoolAutoConfigNetworkTagsPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolAutoConfig) *ClusterNodePoolAutoConfigNetworkTags {
		if v == nil {
			return nil
		}
		return v.NetworkTags
	}).(ClusterNodePoolAutoConfigNetworkTagsPtrOutput)
}

// A map of resource manager tag keys and values to be attached to the nodes for managing Compute Engine firewalls using Network Firewall Policies. Tags must be according to specifications found [here](https://cloud.google.com/vpc/docs/tags-firewalls-overview#specifications). A maximum of 5 tag key-value pairs can be specified. Existing tags will be replaced with new values. Tags must be in one of the following formats ([KEY]=[VALUE]) 1. `tagKeys/{tag_key_id}=tagValues/{tag_value_id}` 2. `{org_id}/{tag_key_name}={tag_value_name}` 3. `{project_id}/{tag_key_name}={tag_value_name}`.
func (o ClusterNodePoolAutoConfigPtrOutput) ResourceManagerTags() pulumi.MapOutput {
	return o.ApplyT(func(v *ClusterNodePoolAutoConfig) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.ResourceManagerTags
	}).(pulumi.MapOutput)
}

type ClusterNodePoolAutoConfigNetworkTags struct {
	// List of network tags applied to auto-provisioned node pools.
	Tags []string `pulumi:"tags"`
}

// ClusterNodePoolAutoConfigNetworkTagsInput is an input type that accepts ClusterNodePoolAutoConfigNetworkTagsArgs and ClusterNodePoolAutoConfigNetworkTagsOutput values.
// You can construct a concrete instance of `ClusterNodePoolAutoConfigNetworkTagsInput` via:
//
//	ClusterNodePoolAutoConfigNetworkTagsArgs{...}
type ClusterNodePoolAutoConfigNetworkTagsInput interface {
	pulumi.Input

	ToClusterNodePoolAutoConfigNetworkTagsOutput() ClusterNodePoolAutoConfigNetworkTagsOutput
	ToClusterNodePoolAutoConfigNetworkTagsOutputWithContext(context.Context) ClusterNodePoolAutoConfigNetworkTagsOutput
}

type ClusterNodePoolAutoConfigNetworkTagsArgs struct {
	// List of network tags applied to auto-provisioned node pools.
	Tags pulumi.StringArrayInput `pulumi:"tags"`
}

func (ClusterNodePoolAutoConfigNetworkTagsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolAutoConfigNetworkTags)(nil)).Elem()
}

func (i ClusterNodePoolAutoConfigNetworkTagsArgs) ToClusterNodePoolAutoConfigNetworkTagsOutput() ClusterNodePoolAutoConfigNetworkTagsOutput {
	return i.ToClusterNodePoolAutoConfigNetworkTagsOutputWithContext(context.Background())
}

func (i ClusterNodePoolAutoConfigNetworkTagsArgs) ToClusterNodePoolAutoConfigNetworkTagsOutputWithContext(ctx context.Context) ClusterNodePoolAutoConfigNetworkTagsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolAutoConfigNetworkTagsOutput)
}

func (i ClusterNodePoolAutoConfigNetworkTagsArgs) ToClusterNodePoolAutoConfigNetworkTagsPtrOutput() ClusterNodePoolAutoConfigNetworkTagsPtrOutput {
	return i.ToClusterNodePoolAutoConfigNetworkTagsPtrOutputWithContext(context.Background())
}

func (i ClusterNodePoolAutoConfigNetworkTagsArgs) ToClusterNodePoolAutoConfigNetworkTagsPtrOutputWithContext(ctx context.Context) ClusterNodePoolAutoConfigNetworkTagsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolAutoConfigNetworkTagsOutput).ToClusterNodePoolAutoConfigNetworkTagsPtrOutputWithContext(ctx)
}

// ClusterNodePoolAutoConfigNetworkTagsPtrInput is an input type that accepts ClusterNodePoolAutoConfigNetworkTagsArgs, ClusterNodePoolAutoConfigNetworkTagsPtr and ClusterNodePoolAutoConfigNetworkTagsPtrOutput values.
// You can construct a concrete instance of `ClusterNodePoolAutoConfigNetworkTagsPtrInput` via:
//
//	        ClusterNodePoolAutoConfigNetworkTagsArgs{...}
//
//	or:
//
//	        nil
type ClusterNodePoolAutoConfigNetworkTagsPtrInput interface {
	pulumi.Input

	ToClusterNodePoolAutoConfigNetworkTagsPtrOutput() ClusterNodePoolAutoConfigNetworkTagsPtrOutput
	ToClusterNodePoolAutoConfigNetworkTagsPtrOutputWithContext(context.Context) ClusterNodePoolAutoConfigNetworkTagsPtrOutput
}

type clusterNodePoolAutoConfigNetworkTagsPtrType ClusterNodePoolAutoConfigNetworkTagsArgs

func ClusterNodePoolAutoConfigNetworkTagsPtr(v *ClusterNodePoolAutoConfigNetworkTagsArgs) ClusterNodePoolAutoConfigNetworkTagsPtrInput {
	return (*clusterNodePoolAutoConfigNetworkTagsPtrType)(v)
}

func (*clusterNodePoolAutoConfigNetworkTagsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolAutoConfigNetworkTags)(nil)).Elem()
}

func (i *clusterNodePoolAutoConfigNetworkTagsPtrType) ToClusterNodePoolAutoConfigNetworkTagsPtrOutput() ClusterNodePoolAutoConfigNetworkTagsPtrOutput {
	return i.ToClusterNodePoolAutoConfigNetworkTagsPtrOutputWithContext(context.Background())
}

func (i *clusterNodePoolAutoConfigNetworkTagsPtrType) ToClusterNodePoolAutoConfigNetworkTagsPtrOutputWithContext(ctx context.Context) ClusterNodePoolAutoConfigNetworkTagsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolAutoConfigNetworkTagsPtrOutput)
}

type ClusterNodePoolAutoConfigNetworkTagsOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolAutoConfigNetworkTagsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolAutoConfigNetworkTags)(nil)).Elem()
}

func (o ClusterNodePoolAutoConfigNetworkTagsOutput) ToClusterNodePoolAutoConfigNetworkTagsOutput() ClusterNodePoolAutoConfigNetworkTagsOutput {
	return o
}

func (o ClusterNodePoolAutoConfigNetworkTagsOutput) ToClusterNodePoolAutoConfigNetworkTagsOutputWithContext(ctx context.Context) ClusterNodePoolAutoConfigNetworkTagsOutput {
	return o
}

func (o ClusterNodePoolAutoConfigNetworkTagsOutput) ToClusterNodePoolAutoConfigNetworkTagsPtrOutput() ClusterNodePoolAutoConfigNetworkTagsPtrOutput {
	return o.ToClusterNodePoolAutoConfigNetworkTagsPtrOutputWithContext(context.Background())
}

func (o ClusterNodePoolAutoConfigNetworkTagsOutput) ToClusterNodePoolAutoConfigNetworkTagsPtrOutputWithContext(ctx context.Context) ClusterNodePoolAutoConfigNetworkTagsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterNodePoolAutoConfigNetworkTags) *ClusterNodePoolAutoConfigNetworkTags {
		return &v
	}).(ClusterNodePoolAutoConfigNetworkTagsPtrOutput)
}

// List of network tags applied to auto-provisioned node pools.
func (o ClusterNodePoolAutoConfigNetworkTagsOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterNodePoolAutoConfigNetworkTags) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

type ClusterNodePoolAutoConfigNetworkTagsPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolAutoConfigNetworkTagsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolAutoConfigNetworkTags)(nil)).Elem()
}

func (o ClusterNodePoolAutoConfigNetworkTagsPtrOutput) ToClusterNodePoolAutoConfigNetworkTagsPtrOutput() ClusterNodePoolAutoConfigNetworkTagsPtrOutput {
	return o
}

func (o ClusterNodePoolAutoConfigNetworkTagsPtrOutput) ToClusterNodePoolAutoConfigNetworkTagsPtrOutputWithContext(ctx context.Context) ClusterNodePoolAutoConfigNetworkTagsPtrOutput {
	return o
}

func (o ClusterNodePoolAutoConfigNetworkTagsPtrOutput) Elem() ClusterNodePoolAutoConfigNetworkTagsOutput {
	return o.ApplyT(func(v *ClusterNodePoolAutoConfigNetworkTags) ClusterNodePoolAutoConfigNetworkTags {
		if v != nil {
			return *v
		}
		var ret ClusterNodePoolAutoConfigNetworkTags
		return ret
	}).(ClusterNodePoolAutoConfigNetworkTagsOutput)
}

// List of network tags applied to auto-provisioned node pools.
func (o ClusterNodePoolAutoConfigNetworkTagsPtrOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterNodePoolAutoConfigNetworkTags) []string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringArrayOutput)
}

type ClusterNodePoolAutoscaling struct {
	// Location policy specifies the algorithm used when scaling-up the node pool. "BALANCED" - Is a best effort policy that aims to balance the sizes of available zones. "ANY" - Instructs the cluster autoscaler to prioritize utilization of unused reservations, and reduces preemption risk for Spot VMs.
	LocationPolicy *string `pulumi:"locationPolicy"`
	// Maximum number of nodes per zone in the node pool. Must be >= min_node_count. Cannot be used with total limits.
	MaxNodeCount *int `pulumi:"maxNodeCount"`
	// Minimum number of nodes per zone in the node pool. Must be >=0 and <= max_node_count. Cannot be used with total limits.
	MinNodeCount *int `pulumi:"minNodeCount"`
	// Maximum number of all nodes in the node pool. Must be >= total_min_node_count. Cannot be used with per zone limits.
	TotalMaxNodeCount *int `pulumi:"totalMaxNodeCount"`
	// Minimum number of all nodes in the node pool. Must be >=0 and <= total_max_node_count. Cannot be used with per zone limits.
	TotalMinNodeCount *int `pulumi:"totalMinNodeCount"`
}

// ClusterNodePoolAutoscalingInput is an input type that accepts ClusterNodePoolAutoscalingArgs and ClusterNodePoolAutoscalingOutput values.
// You can construct a concrete instance of `ClusterNodePoolAutoscalingInput` via:
//
//	ClusterNodePoolAutoscalingArgs{...}
type ClusterNodePoolAutoscalingInput interface {
	pulumi.Input

	ToClusterNodePoolAutoscalingOutput() ClusterNodePoolAutoscalingOutput
	ToClusterNodePoolAutoscalingOutputWithContext(context.Context) ClusterNodePoolAutoscalingOutput
}

type ClusterNodePoolAutoscalingArgs struct {
	// Location policy specifies the algorithm used when scaling-up the node pool. "BALANCED" - Is a best effort policy that aims to balance the sizes of available zones. "ANY" - Instructs the cluster autoscaler to prioritize utilization of unused reservations, and reduces preemption risk for Spot VMs.
	LocationPolicy pulumi.StringPtrInput `pulumi:"locationPolicy"`
	// Maximum number of nodes per zone in the node pool. Must be >= min_node_count. Cannot be used with total limits.
	MaxNodeCount pulumi.IntPtrInput `pulumi:"maxNodeCount"`
	// Minimum number of nodes per zone in the node pool. Must be >=0 and <= max_node_count. Cannot be used with total limits.
	MinNodeCount pulumi.IntPtrInput `pulumi:"minNodeCount"`
	// Maximum number of all nodes in the node pool. Must be >= total_min_node_count. Cannot be used with per zone limits.
	TotalMaxNodeCount pulumi.IntPtrInput `pulumi:"totalMaxNodeCount"`
	// Minimum number of all nodes in the node pool. Must be >=0 and <= total_max_node_count. Cannot be used with per zone limits.
	TotalMinNodeCount pulumi.IntPtrInput `pulumi:"totalMinNodeCount"`
}

func (ClusterNodePoolAutoscalingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolAutoscaling)(nil)).Elem()
}

func (i ClusterNodePoolAutoscalingArgs) ToClusterNodePoolAutoscalingOutput() ClusterNodePoolAutoscalingOutput {
	return i.ToClusterNodePoolAutoscalingOutputWithContext(context.Background())
}

func (i ClusterNodePoolAutoscalingArgs) ToClusterNodePoolAutoscalingOutputWithContext(ctx context.Context) ClusterNodePoolAutoscalingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolAutoscalingOutput)
}

func (i ClusterNodePoolAutoscalingArgs) ToClusterNodePoolAutoscalingPtrOutput() ClusterNodePoolAutoscalingPtrOutput {
	return i.ToClusterNodePoolAutoscalingPtrOutputWithContext(context.Background())
}

func (i ClusterNodePoolAutoscalingArgs) ToClusterNodePoolAutoscalingPtrOutputWithContext(ctx context.Context) ClusterNodePoolAutoscalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolAutoscalingOutput).ToClusterNodePoolAutoscalingPtrOutputWithContext(ctx)
}

// ClusterNodePoolAutoscalingPtrInput is an input type that accepts ClusterNodePoolAutoscalingArgs, ClusterNodePoolAutoscalingPtr and ClusterNodePoolAutoscalingPtrOutput values.
// You can construct a concrete instance of `ClusterNodePoolAutoscalingPtrInput` via:
//
//	        ClusterNodePoolAutoscalingArgs{...}
//
//	or:
//
//	        nil
type ClusterNodePoolAutoscalingPtrInput interface {
	pulumi.Input

	ToClusterNodePoolAutoscalingPtrOutput() ClusterNodePoolAutoscalingPtrOutput
	ToClusterNodePoolAutoscalingPtrOutputWithContext(context.Context) ClusterNodePoolAutoscalingPtrOutput
}

type clusterNodePoolAutoscalingPtrType ClusterNodePoolAutoscalingArgs

func ClusterNodePoolAutoscalingPtr(v *ClusterNodePoolAutoscalingArgs) ClusterNodePoolAutoscalingPtrInput {
	return (*clusterNodePoolAutoscalingPtrType)(v)
}

func (*clusterNodePoolAutoscalingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolAutoscaling)(nil)).Elem()
}

func (i *clusterNodePoolAutoscalingPtrType) ToClusterNodePoolAutoscalingPtrOutput() ClusterNodePoolAutoscalingPtrOutput {
	return i.ToClusterNodePoolAutoscalingPtrOutputWithContext(context.Background())
}

func (i *clusterNodePoolAutoscalingPtrType) ToClusterNodePoolAutoscalingPtrOutputWithContext(ctx context.Context) ClusterNodePoolAutoscalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolAutoscalingPtrOutput)
}

type ClusterNodePoolAutoscalingOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolAutoscalingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolAutoscaling)(nil)).Elem()
}

func (o ClusterNodePoolAutoscalingOutput) ToClusterNodePoolAutoscalingOutput() ClusterNodePoolAutoscalingOutput {
	return o
}

func (o ClusterNodePoolAutoscalingOutput) ToClusterNodePoolAutoscalingOutputWithContext(ctx context.Context) ClusterNodePoolAutoscalingOutput {
	return o
}

func (o ClusterNodePoolAutoscalingOutput) ToClusterNodePoolAutoscalingPtrOutput() ClusterNodePoolAutoscalingPtrOutput {
	return o.ToClusterNodePoolAutoscalingPtrOutputWithContext(context.Background())
}

func (o ClusterNodePoolAutoscalingOutput) ToClusterNodePoolAutoscalingPtrOutputWithContext(ctx context.Context) ClusterNodePoolAutoscalingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterNodePoolAutoscaling) *ClusterNodePoolAutoscaling {
		return &v
	}).(ClusterNodePoolAutoscalingPtrOutput)
}

// Location policy specifies the algorithm used when scaling-up the node pool. "BALANCED" - Is a best effort policy that aims to balance the sizes of available zones. "ANY" - Instructs the cluster autoscaler to prioritize utilization of unused reservations, and reduces preemption risk for Spot VMs.
func (o ClusterNodePoolAutoscalingOutput) LocationPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolAutoscaling) *string { return v.LocationPolicy }).(pulumi.StringPtrOutput)
}

// Maximum number of nodes per zone in the node pool. Must be >= min_node_count. Cannot be used with total limits.
func (o ClusterNodePoolAutoscalingOutput) MaxNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolAutoscaling) *int { return v.MaxNodeCount }).(pulumi.IntPtrOutput)
}

// Minimum number of nodes per zone in the node pool. Must be >=0 and <= max_node_count. Cannot be used with total limits.
func (o ClusterNodePoolAutoscalingOutput) MinNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolAutoscaling) *int { return v.MinNodeCount }).(pulumi.IntPtrOutput)
}

// Maximum number of all nodes in the node pool. Must be >= total_min_node_count. Cannot be used with per zone limits.
func (o ClusterNodePoolAutoscalingOutput) TotalMaxNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolAutoscaling) *int { return v.TotalMaxNodeCount }).(pulumi.IntPtrOutput)
}

// Minimum number of all nodes in the node pool. Must be >=0 and <= total_max_node_count. Cannot be used with per zone limits.
func (o ClusterNodePoolAutoscalingOutput) TotalMinNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolAutoscaling) *int { return v.TotalMinNodeCount }).(pulumi.IntPtrOutput)
}

type ClusterNodePoolAutoscalingPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolAutoscalingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolAutoscaling)(nil)).Elem()
}

func (o ClusterNodePoolAutoscalingPtrOutput) ToClusterNodePoolAutoscalingPtrOutput() ClusterNodePoolAutoscalingPtrOutput {
	return o
}

func (o ClusterNodePoolAutoscalingPtrOutput) ToClusterNodePoolAutoscalingPtrOutputWithContext(ctx context.Context) ClusterNodePoolAutoscalingPtrOutput {
	return o
}

func (o ClusterNodePoolAutoscalingPtrOutput) Elem() ClusterNodePoolAutoscalingOutput {
	return o.ApplyT(func(v *ClusterNodePoolAutoscaling) ClusterNodePoolAutoscaling {
		if v != nil {
			return *v
		}
		var ret ClusterNodePoolAutoscaling
		return ret
	}).(ClusterNodePoolAutoscalingOutput)
}

// Location policy specifies the algorithm used when scaling-up the node pool. "BALANCED" - Is a best effort policy that aims to balance the sizes of available zones. "ANY" - Instructs the cluster autoscaler to prioritize utilization of unused reservations, and reduces preemption risk for Spot VMs.
func (o ClusterNodePoolAutoscalingPtrOutput) LocationPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolAutoscaling) *string {
		if v == nil {
			return nil
		}
		return v.LocationPolicy
	}).(pulumi.StringPtrOutput)
}

// Maximum number of nodes per zone in the node pool. Must be >= min_node_count. Cannot be used with total limits.
func (o ClusterNodePoolAutoscalingPtrOutput) MaxNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolAutoscaling) *int {
		if v == nil {
			return nil
		}
		return v.MaxNodeCount
	}).(pulumi.IntPtrOutput)
}

// Minimum number of nodes per zone in the node pool. Must be >=0 and <= max_node_count. Cannot be used with total limits.
func (o ClusterNodePoolAutoscalingPtrOutput) MinNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolAutoscaling) *int {
		if v == nil {
			return nil
		}
		return v.MinNodeCount
	}).(pulumi.IntPtrOutput)
}

// Maximum number of all nodes in the node pool. Must be >= total_min_node_count. Cannot be used with per zone limits.
func (o ClusterNodePoolAutoscalingPtrOutput) TotalMaxNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolAutoscaling) *int {
		if v == nil {
			return nil
		}
		return v.TotalMaxNodeCount
	}).(pulumi.IntPtrOutput)
}

// Minimum number of all nodes in the node pool. Must be >=0 and <= total_max_node_count. Cannot be used with per zone limits.
func (o ClusterNodePoolAutoscalingPtrOutput) TotalMinNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolAutoscaling) *int {
		if v == nil {
			return nil
		}
		return v.TotalMinNodeCount
	}).(pulumi.IntPtrOutput)
}

type ClusterNodePoolDefaults struct {
	// Subset of NodeConfig message that has defaults.
	NodeConfigDefaults *ClusterNodePoolDefaultsNodeConfigDefaults `pulumi:"nodeConfigDefaults"`
}

// ClusterNodePoolDefaultsInput is an input type that accepts ClusterNodePoolDefaultsArgs and ClusterNodePoolDefaultsOutput values.
// You can construct a concrete instance of `ClusterNodePoolDefaultsInput` via:
//
//	ClusterNodePoolDefaultsArgs{...}
type ClusterNodePoolDefaultsInput interface {
	pulumi.Input

	ToClusterNodePoolDefaultsOutput() ClusterNodePoolDefaultsOutput
	ToClusterNodePoolDefaultsOutputWithContext(context.Context) ClusterNodePoolDefaultsOutput
}

type ClusterNodePoolDefaultsArgs struct {
	// Subset of NodeConfig message that has defaults.
	NodeConfigDefaults ClusterNodePoolDefaultsNodeConfigDefaultsPtrInput `pulumi:"nodeConfigDefaults"`
}

func (ClusterNodePoolDefaultsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolDefaults)(nil)).Elem()
}

func (i ClusterNodePoolDefaultsArgs) ToClusterNodePoolDefaultsOutput() ClusterNodePoolDefaultsOutput {
	return i.ToClusterNodePoolDefaultsOutputWithContext(context.Background())
}

func (i ClusterNodePoolDefaultsArgs) ToClusterNodePoolDefaultsOutputWithContext(ctx context.Context) ClusterNodePoolDefaultsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolDefaultsOutput)
}

func (i ClusterNodePoolDefaultsArgs) ToClusterNodePoolDefaultsPtrOutput() ClusterNodePoolDefaultsPtrOutput {
	return i.ToClusterNodePoolDefaultsPtrOutputWithContext(context.Background())
}

func (i ClusterNodePoolDefaultsArgs) ToClusterNodePoolDefaultsPtrOutputWithContext(ctx context.Context) ClusterNodePoolDefaultsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolDefaultsOutput).ToClusterNodePoolDefaultsPtrOutputWithContext(ctx)
}

// ClusterNodePoolDefaultsPtrInput is an input type that accepts ClusterNodePoolDefaultsArgs, ClusterNodePoolDefaultsPtr and ClusterNodePoolDefaultsPtrOutput values.
// You can construct a concrete instance of `ClusterNodePoolDefaultsPtrInput` via:
//
//	        ClusterNodePoolDefaultsArgs{...}
//
//	or:
//
//	        nil
type ClusterNodePoolDefaultsPtrInput interface {
	pulumi.Input

	ToClusterNodePoolDefaultsPtrOutput() ClusterNodePoolDefaultsPtrOutput
	ToClusterNodePoolDefaultsPtrOutputWithContext(context.Context) ClusterNodePoolDefaultsPtrOutput
}

type clusterNodePoolDefaultsPtrType ClusterNodePoolDefaultsArgs

func ClusterNodePoolDefaultsPtr(v *ClusterNodePoolDefaultsArgs) ClusterNodePoolDefaultsPtrInput {
	return (*clusterNodePoolDefaultsPtrType)(v)
}

func (*clusterNodePoolDefaultsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolDefaults)(nil)).Elem()
}

func (i *clusterNodePoolDefaultsPtrType) ToClusterNodePoolDefaultsPtrOutput() ClusterNodePoolDefaultsPtrOutput {
	return i.ToClusterNodePoolDefaultsPtrOutputWithContext(context.Background())
}

func (i *clusterNodePoolDefaultsPtrType) ToClusterNodePoolDefaultsPtrOutputWithContext(ctx context.Context) ClusterNodePoolDefaultsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolDefaultsPtrOutput)
}

type ClusterNodePoolDefaultsOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolDefaultsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolDefaults)(nil)).Elem()
}

func (o ClusterNodePoolDefaultsOutput) ToClusterNodePoolDefaultsOutput() ClusterNodePoolDefaultsOutput {
	return o
}

func (o ClusterNodePoolDefaultsOutput) ToClusterNodePoolDefaultsOutputWithContext(ctx context.Context) ClusterNodePoolDefaultsOutput {
	return o
}

func (o ClusterNodePoolDefaultsOutput) ToClusterNodePoolDefaultsPtrOutput() ClusterNodePoolDefaultsPtrOutput {
	return o.ToClusterNodePoolDefaultsPtrOutputWithContext(context.Background())
}

func (o ClusterNodePoolDefaultsOutput) ToClusterNodePoolDefaultsPtrOutputWithContext(ctx context.Context) ClusterNodePoolDefaultsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterNodePoolDefaults) *ClusterNodePoolDefaults {
		return &v
	}).(ClusterNodePoolDefaultsPtrOutput)
}

// Subset of NodeConfig message that has defaults.
func (o ClusterNodePoolDefaultsOutput) NodeConfigDefaults() ClusterNodePoolDefaultsNodeConfigDefaultsPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolDefaults) *ClusterNodePoolDefaultsNodeConfigDefaults {
		return v.NodeConfigDefaults
	}).(ClusterNodePoolDefaultsNodeConfigDefaultsPtrOutput)
}

type ClusterNodePoolDefaultsPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolDefaultsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolDefaults)(nil)).Elem()
}

func (o ClusterNodePoolDefaultsPtrOutput) ToClusterNodePoolDefaultsPtrOutput() ClusterNodePoolDefaultsPtrOutput {
	return o
}

func (o ClusterNodePoolDefaultsPtrOutput) ToClusterNodePoolDefaultsPtrOutputWithContext(ctx context.Context) ClusterNodePoolDefaultsPtrOutput {
	return o
}

func (o ClusterNodePoolDefaultsPtrOutput) Elem() ClusterNodePoolDefaultsOutput {
	return o.ApplyT(func(v *ClusterNodePoolDefaults) ClusterNodePoolDefaults {
		if v != nil {
			return *v
		}
		var ret ClusterNodePoolDefaults
		return ret
	}).(ClusterNodePoolDefaultsOutput)
}

// Subset of NodeConfig message that has defaults.
func (o ClusterNodePoolDefaultsPtrOutput) NodeConfigDefaults() ClusterNodePoolDefaultsNodeConfigDefaultsPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolDefaults) *ClusterNodePoolDefaultsNodeConfigDefaults {
		if v == nil {
			return nil
		}
		return v.NodeConfigDefaults
	}).(ClusterNodePoolDefaultsNodeConfigDefaultsPtrOutput)
}

type ClusterNodePoolDefaultsNodeConfigDefaults struct {
	// The default Google Container Filesystem (GCFS) configuration at the cluster level. e.g. enable [image streaming](https://cloud.google.com/kubernetes-engine/docs/how-to/image-streaming) across all the node pools within the cluster. Structure is documented below.
	GcfsConfig *ClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfig `pulumi:"gcfsConfig"`
	// The type of logging agent that is deployed by default for newly created node pools in the cluster. Valid values include DEFAULT and MAX_THROUGHPUT. See [Increasing logging agent throughput](https://cloud.google.com/stackdriver/docs/solutions/gke/managing-logs#throughput) for more information.
	LoggingVariant *string `pulumi:"loggingVariant"`
}

// ClusterNodePoolDefaultsNodeConfigDefaultsInput is an input type that accepts ClusterNodePoolDefaultsNodeConfigDefaultsArgs and ClusterNodePoolDefaultsNodeConfigDefaultsOutput values.
// You can construct a concrete instance of `ClusterNodePoolDefaultsNodeConfigDefaultsInput` via:
//
//	ClusterNodePoolDefaultsNodeConfigDefaultsArgs{...}
type ClusterNodePoolDefaultsNodeConfigDefaultsInput interface {
	pulumi.Input

	ToClusterNodePoolDefaultsNodeConfigDefaultsOutput() ClusterNodePoolDefaultsNodeConfigDefaultsOutput
	ToClusterNodePoolDefaultsNodeConfigDefaultsOutputWithContext(context.Context) ClusterNodePoolDefaultsNodeConfigDefaultsOutput
}

type ClusterNodePoolDefaultsNodeConfigDefaultsArgs struct {
	// The default Google Container Filesystem (GCFS) configuration at the cluster level. e.g. enable [image streaming](https://cloud.google.com/kubernetes-engine/docs/how-to/image-streaming) across all the node pools within the cluster. Structure is documented below.
	GcfsConfig ClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigPtrInput `pulumi:"gcfsConfig"`
	// The type of logging agent that is deployed by default for newly created node pools in the cluster. Valid values include DEFAULT and MAX_THROUGHPUT. See [Increasing logging agent throughput](https://cloud.google.com/stackdriver/docs/solutions/gke/managing-logs#throughput) for more information.
	LoggingVariant pulumi.StringPtrInput `pulumi:"loggingVariant"`
}

func (ClusterNodePoolDefaultsNodeConfigDefaultsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolDefaultsNodeConfigDefaults)(nil)).Elem()
}

func (i ClusterNodePoolDefaultsNodeConfigDefaultsArgs) ToClusterNodePoolDefaultsNodeConfigDefaultsOutput() ClusterNodePoolDefaultsNodeConfigDefaultsOutput {
	return i.ToClusterNodePoolDefaultsNodeConfigDefaultsOutputWithContext(context.Background())
}

func (i ClusterNodePoolDefaultsNodeConfigDefaultsArgs) ToClusterNodePoolDefaultsNodeConfigDefaultsOutputWithContext(ctx context.Context) ClusterNodePoolDefaultsNodeConfigDefaultsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolDefaultsNodeConfigDefaultsOutput)
}

func (i ClusterNodePoolDefaultsNodeConfigDefaultsArgs) ToClusterNodePoolDefaultsNodeConfigDefaultsPtrOutput() ClusterNodePoolDefaultsNodeConfigDefaultsPtrOutput {
	return i.ToClusterNodePoolDefaultsNodeConfigDefaultsPtrOutputWithContext(context.Background())
}

func (i ClusterNodePoolDefaultsNodeConfigDefaultsArgs) ToClusterNodePoolDefaultsNodeConfigDefaultsPtrOutputWithContext(ctx context.Context) ClusterNodePoolDefaultsNodeConfigDefaultsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolDefaultsNodeConfigDefaultsOutput).ToClusterNodePoolDefaultsNodeConfigDefaultsPtrOutputWithContext(ctx)
}

// ClusterNodePoolDefaultsNodeConfigDefaultsPtrInput is an input type that accepts ClusterNodePoolDefaultsNodeConfigDefaultsArgs, ClusterNodePoolDefaultsNodeConfigDefaultsPtr and ClusterNodePoolDefaultsNodeConfigDefaultsPtrOutput values.
// You can construct a concrete instance of `ClusterNodePoolDefaultsNodeConfigDefaultsPtrInput` via:
//
//	        ClusterNodePoolDefaultsNodeConfigDefaultsArgs{...}
//
//	or:
//
//	        nil
type ClusterNodePoolDefaultsNodeConfigDefaultsPtrInput interface {
	pulumi.Input

	ToClusterNodePoolDefaultsNodeConfigDefaultsPtrOutput() ClusterNodePoolDefaultsNodeConfigDefaultsPtrOutput
	ToClusterNodePoolDefaultsNodeConfigDefaultsPtrOutputWithContext(context.Context) ClusterNodePoolDefaultsNodeConfigDefaultsPtrOutput
}

type clusterNodePoolDefaultsNodeConfigDefaultsPtrType ClusterNodePoolDefaultsNodeConfigDefaultsArgs

func ClusterNodePoolDefaultsNodeConfigDefaultsPtr(v *ClusterNodePoolDefaultsNodeConfigDefaultsArgs) ClusterNodePoolDefaultsNodeConfigDefaultsPtrInput {
	return (*clusterNodePoolDefaultsNodeConfigDefaultsPtrType)(v)
}

func (*clusterNodePoolDefaultsNodeConfigDefaultsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolDefaultsNodeConfigDefaults)(nil)).Elem()
}

func (i *clusterNodePoolDefaultsNodeConfigDefaultsPtrType) ToClusterNodePoolDefaultsNodeConfigDefaultsPtrOutput() ClusterNodePoolDefaultsNodeConfigDefaultsPtrOutput {
	return i.ToClusterNodePoolDefaultsNodeConfigDefaultsPtrOutputWithContext(context.Background())
}

func (i *clusterNodePoolDefaultsNodeConfigDefaultsPtrType) ToClusterNodePoolDefaultsNodeConfigDefaultsPtrOutputWithContext(ctx context.Context) ClusterNodePoolDefaultsNodeConfigDefaultsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolDefaultsNodeConfigDefaultsPtrOutput)
}

type ClusterNodePoolDefaultsNodeConfigDefaultsOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolDefaultsNodeConfigDefaultsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolDefaultsNodeConfigDefaults)(nil)).Elem()
}

func (o ClusterNodePoolDefaultsNodeConfigDefaultsOutput) ToClusterNodePoolDefaultsNodeConfigDefaultsOutput() ClusterNodePoolDefaultsNodeConfigDefaultsOutput {
	return o
}

func (o ClusterNodePoolDefaultsNodeConfigDefaultsOutput) ToClusterNodePoolDefaultsNodeConfigDefaultsOutputWithContext(ctx context.Context) ClusterNodePoolDefaultsNodeConfigDefaultsOutput {
	return o
}

func (o ClusterNodePoolDefaultsNodeConfigDefaultsOutput) ToClusterNodePoolDefaultsNodeConfigDefaultsPtrOutput() ClusterNodePoolDefaultsNodeConfigDefaultsPtrOutput {
	return o.ToClusterNodePoolDefaultsNodeConfigDefaultsPtrOutputWithContext(context.Background())
}

func (o ClusterNodePoolDefaultsNodeConfigDefaultsOutput) ToClusterNodePoolDefaultsNodeConfigDefaultsPtrOutputWithContext(ctx context.Context) ClusterNodePoolDefaultsNodeConfigDefaultsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterNodePoolDefaultsNodeConfigDefaults) *ClusterNodePoolDefaultsNodeConfigDefaults {
		return &v
	}).(ClusterNodePoolDefaultsNodeConfigDefaultsPtrOutput)
}

// The default Google Container Filesystem (GCFS) configuration at the cluster level. e.g. enable [image streaming](https://cloud.google.com/kubernetes-engine/docs/how-to/image-streaming) across all the node pools within the cluster. Structure is documented below.
func (o ClusterNodePoolDefaultsNodeConfigDefaultsOutput) GcfsConfig() ClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolDefaultsNodeConfigDefaults) *ClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfig {
		return v.GcfsConfig
	}).(ClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigPtrOutput)
}

// The type of logging agent that is deployed by default for newly created node pools in the cluster. Valid values include DEFAULT and MAX_THROUGHPUT. See [Increasing logging agent throughput](https://cloud.google.com/stackdriver/docs/solutions/gke/managing-logs#throughput) for more information.
func (o ClusterNodePoolDefaultsNodeConfigDefaultsOutput) LoggingVariant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolDefaultsNodeConfigDefaults) *string { return v.LoggingVariant }).(pulumi.StringPtrOutput)
}

type ClusterNodePoolDefaultsNodeConfigDefaultsPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolDefaultsNodeConfigDefaultsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolDefaultsNodeConfigDefaults)(nil)).Elem()
}

func (o ClusterNodePoolDefaultsNodeConfigDefaultsPtrOutput) ToClusterNodePoolDefaultsNodeConfigDefaultsPtrOutput() ClusterNodePoolDefaultsNodeConfigDefaultsPtrOutput {
	return o
}

func (o ClusterNodePoolDefaultsNodeConfigDefaultsPtrOutput) ToClusterNodePoolDefaultsNodeConfigDefaultsPtrOutputWithContext(ctx context.Context) ClusterNodePoolDefaultsNodeConfigDefaultsPtrOutput {
	return o
}

func (o ClusterNodePoolDefaultsNodeConfigDefaultsPtrOutput) Elem() ClusterNodePoolDefaultsNodeConfigDefaultsOutput {
	return o.ApplyT(func(v *ClusterNodePoolDefaultsNodeConfigDefaults) ClusterNodePoolDefaultsNodeConfigDefaults {
		if v != nil {
			return *v
		}
		var ret ClusterNodePoolDefaultsNodeConfigDefaults
		return ret
	}).(ClusterNodePoolDefaultsNodeConfigDefaultsOutput)
}

// The default Google Container Filesystem (GCFS) configuration at the cluster level. e.g. enable [image streaming](https://cloud.google.com/kubernetes-engine/docs/how-to/image-streaming) across all the node pools within the cluster. Structure is documented below.
func (o ClusterNodePoolDefaultsNodeConfigDefaultsPtrOutput) GcfsConfig() ClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolDefaultsNodeConfigDefaults) *ClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfig {
		if v == nil {
			return nil
		}
		return v.GcfsConfig
	}).(ClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigPtrOutput)
}

// The type of logging agent that is deployed by default for newly created node pools in the cluster. Valid values include DEFAULT and MAX_THROUGHPUT. See [Increasing logging agent throughput](https://cloud.google.com/stackdriver/docs/solutions/gke/managing-logs#throughput) for more information.
func (o ClusterNodePoolDefaultsNodeConfigDefaultsPtrOutput) LoggingVariant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolDefaultsNodeConfigDefaults) *string {
		if v == nil {
			return nil
		}
		return v.LoggingVariant
	}).(pulumi.StringPtrOutput)
}

type ClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfig struct {
	// Whether or not the Google Container Filesystem (GCFS) is enabled
	Enabled bool `pulumi:"enabled"`
}

// ClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigInput is an input type that accepts ClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigArgs and ClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigOutput values.
// You can construct a concrete instance of `ClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigInput` via:
//
//	ClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigArgs{...}
type ClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigInput interface {
	pulumi.Input

	ToClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigOutput() ClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigOutput
	ToClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigOutputWithContext(context.Context) ClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigOutput
}

type ClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigArgs struct {
	// Whether or not the Google Container Filesystem (GCFS) is enabled
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (ClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfig)(nil)).Elem()
}

func (i ClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigArgs) ToClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigOutput() ClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigOutput {
	return i.ToClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigOutputWithContext(context.Background())
}

func (i ClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigArgs) ToClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigOutputWithContext(ctx context.Context) ClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigOutput)
}

func (i ClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigArgs) ToClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigPtrOutput() ClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigPtrOutput {
	return i.ToClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigPtrOutputWithContext(context.Background())
}

func (i ClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigArgs) ToClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigOutput).ToClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigPtrOutputWithContext(ctx)
}

// ClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigPtrInput is an input type that accepts ClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigArgs, ClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigPtr and ClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigPtrOutput values.
// You can construct a concrete instance of `ClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigPtrInput` via:
//
//	        ClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigPtrInput interface {
	pulumi.Input

	ToClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigPtrOutput() ClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigPtrOutput
	ToClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigPtrOutputWithContext(context.Context) ClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigPtrOutput
}

type clusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigPtrType ClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigArgs

func ClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigPtr(v *ClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigArgs) ClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigPtrInput {
	return (*clusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigPtrType)(v)
}

func (*clusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfig)(nil)).Elem()
}

func (i *clusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigPtrType) ToClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigPtrOutput() ClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigPtrOutput {
	return i.ToClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigPtrOutputWithContext(context.Background())
}

func (i *clusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigPtrType) ToClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigPtrOutput)
}

type ClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfig)(nil)).Elem()
}

func (o ClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigOutput) ToClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigOutput() ClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigOutput {
	return o
}

func (o ClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigOutput) ToClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigOutputWithContext(ctx context.Context) ClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigOutput {
	return o
}

func (o ClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigOutput) ToClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigPtrOutput() ClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigPtrOutput {
	return o.ToClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigPtrOutputWithContext(context.Background())
}

func (o ClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigOutput) ToClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfig) *ClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfig {
		return &v
	}).(ClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigPtrOutput)
}

// Whether or not the Google Container Filesystem (GCFS) is enabled
func (o ClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfig) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type ClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfig)(nil)).Elem()
}

func (o ClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigPtrOutput) ToClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigPtrOutput() ClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigPtrOutput {
	return o
}

func (o ClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigPtrOutput) ToClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigPtrOutput {
	return o
}

func (o ClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigPtrOutput) Elem() ClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigOutput {
	return o.ApplyT(func(v *ClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfig) ClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfig {
		if v != nil {
			return *v
		}
		var ret ClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfig
		return ret
	}).(ClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigOutput)
}

// Whether or not the Google Container Filesystem (GCFS) is enabled
func (o ClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfig) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type ClusterNodePoolManagement struct {
	// Specifies whether the node auto-repair is enabled for the node pool. If enabled, the nodes in this node pool will be monitored and, if they fail health checks too many times, an automatic repair action will be triggered.
	//
	// This block also contains several computed attributes, documented below.
	AutoRepair *bool `pulumi:"autoRepair"`
	// Specifies whether node auto-upgrade is enabled for the node pool. If enabled, node auto-upgrade helps keep the nodes in your node pool up to date with the latest release version of Kubernetes.
	AutoUpgrade *bool `pulumi:"autoUpgrade"`
}

// ClusterNodePoolManagementInput is an input type that accepts ClusterNodePoolManagementArgs and ClusterNodePoolManagementOutput values.
// You can construct a concrete instance of `ClusterNodePoolManagementInput` via:
//
//	ClusterNodePoolManagementArgs{...}
type ClusterNodePoolManagementInput interface {
	pulumi.Input

	ToClusterNodePoolManagementOutput() ClusterNodePoolManagementOutput
	ToClusterNodePoolManagementOutputWithContext(context.Context) ClusterNodePoolManagementOutput
}

type ClusterNodePoolManagementArgs struct {
	// Specifies whether the node auto-repair is enabled for the node pool. If enabled, the nodes in this node pool will be monitored and, if they fail health checks too many times, an automatic repair action will be triggered.
	//
	// This block also contains several computed attributes, documented below.
	AutoRepair pulumi.BoolPtrInput `pulumi:"autoRepair"`
	// Specifies whether node auto-upgrade is enabled for the node pool. If enabled, node auto-upgrade helps keep the nodes in your node pool up to date with the latest release version of Kubernetes.
	AutoUpgrade pulumi.BoolPtrInput `pulumi:"autoUpgrade"`
}

func (ClusterNodePoolManagementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolManagement)(nil)).Elem()
}

func (i ClusterNodePoolManagementArgs) ToClusterNodePoolManagementOutput() ClusterNodePoolManagementOutput {
	return i.ToClusterNodePoolManagementOutputWithContext(context.Background())
}

func (i ClusterNodePoolManagementArgs) ToClusterNodePoolManagementOutputWithContext(ctx context.Context) ClusterNodePoolManagementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolManagementOutput)
}

func (i ClusterNodePoolManagementArgs) ToClusterNodePoolManagementPtrOutput() ClusterNodePoolManagementPtrOutput {
	return i.ToClusterNodePoolManagementPtrOutputWithContext(context.Background())
}

func (i ClusterNodePoolManagementArgs) ToClusterNodePoolManagementPtrOutputWithContext(ctx context.Context) ClusterNodePoolManagementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolManagementOutput).ToClusterNodePoolManagementPtrOutputWithContext(ctx)
}

// ClusterNodePoolManagementPtrInput is an input type that accepts ClusterNodePoolManagementArgs, ClusterNodePoolManagementPtr and ClusterNodePoolManagementPtrOutput values.
// You can construct a concrete instance of `ClusterNodePoolManagementPtrInput` via:
//
//	        ClusterNodePoolManagementArgs{...}
//
//	or:
//
//	        nil
type ClusterNodePoolManagementPtrInput interface {
	pulumi.Input

	ToClusterNodePoolManagementPtrOutput() ClusterNodePoolManagementPtrOutput
	ToClusterNodePoolManagementPtrOutputWithContext(context.Context) ClusterNodePoolManagementPtrOutput
}

type clusterNodePoolManagementPtrType ClusterNodePoolManagementArgs

func ClusterNodePoolManagementPtr(v *ClusterNodePoolManagementArgs) ClusterNodePoolManagementPtrInput {
	return (*clusterNodePoolManagementPtrType)(v)
}

func (*clusterNodePoolManagementPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolManagement)(nil)).Elem()
}

func (i *clusterNodePoolManagementPtrType) ToClusterNodePoolManagementPtrOutput() ClusterNodePoolManagementPtrOutput {
	return i.ToClusterNodePoolManagementPtrOutputWithContext(context.Background())
}

func (i *clusterNodePoolManagementPtrType) ToClusterNodePoolManagementPtrOutputWithContext(ctx context.Context) ClusterNodePoolManagementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolManagementPtrOutput)
}

type ClusterNodePoolManagementOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolManagementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolManagement)(nil)).Elem()
}

func (o ClusterNodePoolManagementOutput) ToClusterNodePoolManagementOutput() ClusterNodePoolManagementOutput {
	return o
}

func (o ClusterNodePoolManagementOutput) ToClusterNodePoolManagementOutputWithContext(ctx context.Context) ClusterNodePoolManagementOutput {
	return o
}

func (o ClusterNodePoolManagementOutput) ToClusterNodePoolManagementPtrOutput() ClusterNodePoolManagementPtrOutput {
	return o.ToClusterNodePoolManagementPtrOutputWithContext(context.Background())
}

func (o ClusterNodePoolManagementOutput) ToClusterNodePoolManagementPtrOutputWithContext(ctx context.Context) ClusterNodePoolManagementPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterNodePoolManagement) *ClusterNodePoolManagement {
		return &v
	}).(ClusterNodePoolManagementPtrOutput)
}

// Specifies whether the node auto-repair is enabled for the node pool. If enabled, the nodes in this node pool will be monitored and, if they fail health checks too many times, an automatic repair action will be triggered.
//
// This block also contains several computed attributes, documented below.
func (o ClusterNodePoolManagementOutput) AutoRepair() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolManagement) *bool { return v.AutoRepair }).(pulumi.BoolPtrOutput)
}

// Specifies whether node auto-upgrade is enabled for the node pool. If enabled, node auto-upgrade helps keep the nodes in your node pool up to date with the latest release version of Kubernetes.
func (o ClusterNodePoolManagementOutput) AutoUpgrade() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolManagement) *bool { return v.AutoUpgrade }).(pulumi.BoolPtrOutput)
}

type ClusterNodePoolManagementPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolManagementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolManagement)(nil)).Elem()
}

func (o ClusterNodePoolManagementPtrOutput) ToClusterNodePoolManagementPtrOutput() ClusterNodePoolManagementPtrOutput {
	return o
}

func (o ClusterNodePoolManagementPtrOutput) ToClusterNodePoolManagementPtrOutputWithContext(ctx context.Context) ClusterNodePoolManagementPtrOutput {
	return o
}

func (o ClusterNodePoolManagementPtrOutput) Elem() ClusterNodePoolManagementOutput {
	return o.ApplyT(func(v *ClusterNodePoolManagement) ClusterNodePoolManagement {
		if v != nil {
			return *v
		}
		var ret ClusterNodePoolManagement
		return ret
	}).(ClusterNodePoolManagementOutput)
}

// Specifies whether the node auto-repair is enabled for the node pool. If enabled, the nodes in this node pool will be monitored and, if they fail health checks too many times, an automatic repair action will be triggered.
//
// This block also contains several computed attributes, documented below.
func (o ClusterNodePoolManagementPtrOutput) AutoRepair() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolManagement) *bool {
		if v == nil {
			return nil
		}
		return v.AutoRepair
	}).(pulumi.BoolPtrOutput)
}

// Specifies whether node auto-upgrade is enabled for the node pool. If enabled, node auto-upgrade helps keep the nodes in your node pool up to date with the latest release version of Kubernetes.
func (o ClusterNodePoolManagementPtrOutput) AutoUpgrade() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolManagement) *bool {
		if v == nil {
			return nil
		}
		return v.AutoUpgrade
	}).(pulumi.BoolPtrOutput)
}

type ClusterNodePoolNetworkConfig struct {
	// We specify the additional node networks for this node pool using this list. Each node network corresponds to an additional interface
	AdditionalNodeNetworkConfigs []ClusterNodePoolNetworkConfigAdditionalNodeNetworkConfig `pulumi:"additionalNodeNetworkConfigs"`
	// We specify the additional pod networks for this node pool using this list. Each pod network corresponds to an additional alias IP range for the node
	AdditionalPodNetworkConfigs []ClusterNodePoolNetworkConfigAdditionalPodNetworkConfig `pulumi:"additionalPodNetworkConfigs"`
	// Whether to create a new range for pod IPs in this node pool. Defaults are provided for `podRange` and `podIpv4CidrBlock` if they are not specified.
	CreatePodRange *bool `pulumi:"createPodRange"`
	// Whether nodes have internal IP addresses only.
	EnablePrivateNodes *bool `pulumi:"enablePrivateNodes"`
	// Network bandwidth tier configuration.
	NetworkPerformanceConfig *ClusterNodePoolNetworkConfigNetworkPerformanceConfig `pulumi:"networkPerformanceConfig"`
	// Configuration for node-pool level pod cidr overprovision. If not set, the cluster level setting will be inherited
	PodCidrOverprovisionConfig *ClusterNodePoolNetworkConfigPodCidrOverprovisionConfig `pulumi:"podCidrOverprovisionConfig"`
	// The IP address range for pod IPs in this node pool. Only applicable if createPodRange is true. Set to blank to have a range chosen with the default size. Set to /netmask (e.g. /14) to have a range chosen with a specific netmask. Set to a CIDR notation (e.g. 10.96.0.0/14) to pick a specific range to use.
	PodIpv4CidrBlock *string `pulumi:"podIpv4CidrBlock"`
	// The ID of the secondary range for pod IPs. If `createPodRange` is true, this ID is used for the new range. If `createPodRange` is false, uses an existing secondary range with this ID.
	PodRange *string `pulumi:"podRange"`
}

// ClusterNodePoolNetworkConfigInput is an input type that accepts ClusterNodePoolNetworkConfigArgs and ClusterNodePoolNetworkConfigOutput values.
// You can construct a concrete instance of `ClusterNodePoolNetworkConfigInput` via:
//
//	ClusterNodePoolNetworkConfigArgs{...}
type ClusterNodePoolNetworkConfigInput interface {
	pulumi.Input

	ToClusterNodePoolNetworkConfigOutput() ClusterNodePoolNetworkConfigOutput
	ToClusterNodePoolNetworkConfigOutputWithContext(context.Context) ClusterNodePoolNetworkConfigOutput
}

type ClusterNodePoolNetworkConfigArgs struct {
	// We specify the additional node networks for this node pool using this list. Each node network corresponds to an additional interface
	AdditionalNodeNetworkConfigs ClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArrayInput `pulumi:"additionalNodeNetworkConfigs"`
	// We specify the additional pod networks for this node pool using this list. Each pod network corresponds to an additional alias IP range for the node
	AdditionalPodNetworkConfigs ClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArrayInput `pulumi:"additionalPodNetworkConfigs"`
	// Whether to create a new range for pod IPs in this node pool. Defaults are provided for `podRange` and `podIpv4CidrBlock` if they are not specified.
	CreatePodRange pulumi.BoolPtrInput `pulumi:"createPodRange"`
	// Whether nodes have internal IP addresses only.
	EnablePrivateNodes pulumi.BoolPtrInput `pulumi:"enablePrivateNodes"`
	// Network bandwidth tier configuration.
	NetworkPerformanceConfig ClusterNodePoolNetworkConfigNetworkPerformanceConfigPtrInput `pulumi:"networkPerformanceConfig"`
	// Configuration for node-pool level pod cidr overprovision. If not set, the cluster level setting will be inherited
	PodCidrOverprovisionConfig ClusterNodePoolNetworkConfigPodCidrOverprovisionConfigPtrInput `pulumi:"podCidrOverprovisionConfig"`
	// The IP address range for pod IPs in this node pool. Only applicable if createPodRange is true. Set to blank to have a range chosen with the default size. Set to /netmask (e.g. /14) to have a range chosen with a specific netmask. Set to a CIDR notation (e.g. 10.96.0.0/14) to pick a specific range to use.
	PodIpv4CidrBlock pulumi.StringPtrInput `pulumi:"podIpv4CidrBlock"`
	// The ID of the secondary range for pod IPs. If `createPodRange` is true, this ID is used for the new range. If `createPodRange` is false, uses an existing secondary range with this ID.
	PodRange pulumi.StringPtrInput `pulumi:"podRange"`
}

func (ClusterNodePoolNetworkConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNetworkConfig)(nil)).Elem()
}

func (i ClusterNodePoolNetworkConfigArgs) ToClusterNodePoolNetworkConfigOutput() ClusterNodePoolNetworkConfigOutput {
	return i.ToClusterNodePoolNetworkConfigOutputWithContext(context.Background())
}

func (i ClusterNodePoolNetworkConfigArgs) ToClusterNodePoolNetworkConfigOutputWithContext(ctx context.Context) ClusterNodePoolNetworkConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNetworkConfigOutput)
}

func (i ClusterNodePoolNetworkConfigArgs) ToClusterNodePoolNetworkConfigPtrOutput() ClusterNodePoolNetworkConfigPtrOutput {
	return i.ToClusterNodePoolNetworkConfigPtrOutputWithContext(context.Background())
}

func (i ClusterNodePoolNetworkConfigArgs) ToClusterNodePoolNetworkConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNetworkConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNetworkConfigOutput).ToClusterNodePoolNetworkConfigPtrOutputWithContext(ctx)
}

// ClusterNodePoolNetworkConfigPtrInput is an input type that accepts ClusterNodePoolNetworkConfigArgs, ClusterNodePoolNetworkConfigPtr and ClusterNodePoolNetworkConfigPtrOutput values.
// You can construct a concrete instance of `ClusterNodePoolNetworkConfigPtrInput` via:
//
//	        ClusterNodePoolNetworkConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterNodePoolNetworkConfigPtrInput interface {
	pulumi.Input

	ToClusterNodePoolNetworkConfigPtrOutput() ClusterNodePoolNetworkConfigPtrOutput
	ToClusterNodePoolNetworkConfigPtrOutputWithContext(context.Context) ClusterNodePoolNetworkConfigPtrOutput
}

type clusterNodePoolNetworkConfigPtrType ClusterNodePoolNetworkConfigArgs

func ClusterNodePoolNetworkConfigPtr(v *ClusterNodePoolNetworkConfigArgs) ClusterNodePoolNetworkConfigPtrInput {
	return (*clusterNodePoolNetworkConfigPtrType)(v)
}

func (*clusterNodePoolNetworkConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolNetworkConfig)(nil)).Elem()
}

func (i *clusterNodePoolNetworkConfigPtrType) ToClusterNodePoolNetworkConfigPtrOutput() ClusterNodePoolNetworkConfigPtrOutput {
	return i.ToClusterNodePoolNetworkConfigPtrOutputWithContext(context.Background())
}

func (i *clusterNodePoolNetworkConfigPtrType) ToClusterNodePoolNetworkConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNetworkConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNetworkConfigPtrOutput)
}

type ClusterNodePoolNetworkConfigOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNetworkConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNetworkConfig)(nil)).Elem()
}

func (o ClusterNodePoolNetworkConfigOutput) ToClusterNodePoolNetworkConfigOutput() ClusterNodePoolNetworkConfigOutput {
	return o
}

func (o ClusterNodePoolNetworkConfigOutput) ToClusterNodePoolNetworkConfigOutputWithContext(ctx context.Context) ClusterNodePoolNetworkConfigOutput {
	return o
}

func (o ClusterNodePoolNetworkConfigOutput) ToClusterNodePoolNetworkConfigPtrOutput() ClusterNodePoolNetworkConfigPtrOutput {
	return o.ToClusterNodePoolNetworkConfigPtrOutputWithContext(context.Background())
}

func (o ClusterNodePoolNetworkConfigOutput) ToClusterNodePoolNetworkConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNetworkConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterNodePoolNetworkConfig) *ClusterNodePoolNetworkConfig {
		return &v
	}).(ClusterNodePoolNetworkConfigPtrOutput)
}

// We specify the additional node networks for this node pool using this list. Each node network corresponds to an additional interface
func (o ClusterNodePoolNetworkConfigOutput) AdditionalNodeNetworkConfigs() ClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArrayOutput {
	return o.ApplyT(func(v ClusterNodePoolNetworkConfig) []ClusterNodePoolNetworkConfigAdditionalNodeNetworkConfig {
		return v.AdditionalNodeNetworkConfigs
	}).(ClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArrayOutput)
}

// We specify the additional pod networks for this node pool using this list. Each pod network corresponds to an additional alias IP range for the node
func (o ClusterNodePoolNetworkConfigOutput) AdditionalPodNetworkConfigs() ClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArrayOutput {
	return o.ApplyT(func(v ClusterNodePoolNetworkConfig) []ClusterNodePoolNetworkConfigAdditionalPodNetworkConfig {
		return v.AdditionalPodNetworkConfigs
	}).(ClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArrayOutput)
}

// Whether to create a new range for pod IPs in this node pool. Defaults are provided for `podRange` and `podIpv4CidrBlock` if they are not specified.
func (o ClusterNodePoolNetworkConfigOutput) CreatePodRange() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNetworkConfig) *bool { return v.CreatePodRange }).(pulumi.BoolPtrOutput)
}

// Whether nodes have internal IP addresses only.
func (o ClusterNodePoolNetworkConfigOutput) EnablePrivateNodes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNetworkConfig) *bool { return v.EnablePrivateNodes }).(pulumi.BoolPtrOutput)
}

// Network bandwidth tier configuration.
func (o ClusterNodePoolNetworkConfigOutput) NetworkPerformanceConfig() ClusterNodePoolNetworkConfigNetworkPerformanceConfigPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNetworkConfig) *ClusterNodePoolNetworkConfigNetworkPerformanceConfig {
		return v.NetworkPerformanceConfig
	}).(ClusterNodePoolNetworkConfigNetworkPerformanceConfigPtrOutput)
}

// Configuration for node-pool level pod cidr overprovision. If not set, the cluster level setting will be inherited
func (o ClusterNodePoolNetworkConfigOutput) PodCidrOverprovisionConfig() ClusterNodePoolNetworkConfigPodCidrOverprovisionConfigPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNetworkConfig) *ClusterNodePoolNetworkConfigPodCidrOverprovisionConfig {
		return v.PodCidrOverprovisionConfig
	}).(ClusterNodePoolNetworkConfigPodCidrOverprovisionConfigPtrOutput)
}

// The IP address range for pod IPs in this node pool. Only applicable if createPodRange is true. Set to blank to have a range chosen with the default size. Set to /netmask (e.g. /14) to have a range chosen with a specific netmask. Set to a CIDR notation (e.g. 10.96.0.0/14) to pick a specific range to use.
func (o ClusterNodePoolNetworkConfigOutput) PodIpv4CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNetworkConfig) *string { return v.PodIpv4CidrBlock }).(pulumi.StringPtrOutput)
}

// The ID of the secondary range for pod IPs. If `createPodRange` is true, this ID is used for the new range. If `createPodRange` is false, uses an existing secondary range with this ID.
func (o ClusterNodePoolNetworkConfigOutput) PodRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNetworkConfig) *string { return v.PodRange }).(pulumi.StringPtrOutput)
}

type ClusterNodePoolNetworkConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNetworkConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolNetworkConfig)(nil)).Elem()
}

func (o ClusterNodePoolNetworkConfigPtrOutput) ToClusterNodePoolNetworkConfigPtrOutput() ClusterNodePoolNetworkConfigPtrOutput {
	return o
}

func (o ClusterNodePoolNetworkConfigPtrOutput) ToClusterNodePoolNetworkConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNetworkConfigPtrOutput {
	return o
}

func (o ClusterNodePoolNetworkConfigPtrOutput) Elem() ClusterNodePoolNetworkConfigOutput {
	return o.ApplyT(func(v *ClusterNodePoolNetworkConfig) ClusterNodePoolNetworkConfig {
		if v != nil {
			return *v
		}
		var ret ClusterNodePoolNetworkConfig
		return ret
	}).(ClusterNodePoolNetworkConfigOutput)
}

// We specify the additional node networks for this node pool using this list. Each node network corresponds to an additional interface
func (o ClusterNodePoolNetworkConfigPtrOutput) AdditionalNodeNetworkConfigs() ClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArrayOutput {
	return o.ApplyT(func(v *ClusterNodePoolNetworkConfig) []ClusterNodePoolNetworkConfigAdditionalNodeNetworkConfig {
		if v == nil {
			return nil
		}
		return v.AdditionalNodeNetworkConfigs
	}).(ClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArrayOutput)
}

// We specify the additional pod networks for this node pool using this list. Each pod network corresponds to an additional alias IP range for the node
func (o ClusterNodePoolNetworkConfigPtrOutput) AdditionalPodNetworkConfigs() ClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArrayOutput {
	return o.ApplyT(func(v *ClusterNodePoolNetworkConfig) []ClusterNodePoolNetworkConfigAdditionalPodNetworkConfig {
		if v == nil {
			return nil
		}
		return v.AdditionalPodNetworkConfigs
	}).(ClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArrayOutput)
}

// Whether to create a new range for pod IPs in this node pool. Defaults are provided for `podRange` and `podIpv4CidrBlock` if they are not specified.
func (o ClusterNodePoolNetworkConfigPtrOutput) CreatePodRange() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolNetworkConfig) *bool {
		if v == nil {
			return nil
		}
		return v.CreatePodRange
	}).(pulumi.BoolPtrOutput)
}

// Whether nodes have internal IP addresses only.
func (o ClusterNodePoolNetworkConfigPtrOutput) EnablePrivateNodes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolNetworkConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EnablePrivateNodes
	}).(pulumi.BoolPtrOutput)
}

// Network bandwidth tier configuration.
func (o ClusterNodePoolNetworkConfigPtrOutput) NetworkPerformanceConfig() ClusterNodePoolNetworkConfigNetworkPerformanceConfigPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolNetworkConfig) *ClusterNodePoolNetworkConfigNetworkPerformanceConfig {
		if v == nil {
			return nil
		}
		return v.NetworkPerformanceConfig
	}).(ClusterNodePoolNetworkConfigNetworkPerformanceConfigPtrOutput)
}

// Configuration for node-pool level pod cidr overprovision. If not set, the cluster level setting will be inherited
func (o ClusterNodePoolNetworkConfigPtrOutput) PodCidrOverprovisionConfig() ClusterNodePoolNetworkConfigPodCidrOverprovisionConfigPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolNetworkConfig) *ClusterNodePoolNetworkConfigPodCidrOverprovisionConfig {
		if v == nil {
			return nil
		}
		return v.PodCidrOverprovisionConfig
	}).(ClusterNodePoolNetworkConfigPodCidrOverprovisionConfigPtrOutput)
}

// The IP address range for pod IPs in this node pool. Only applicable if createPodRange is true. Set to blank to have a range chosen with the default size. Set to /netmask (e.g. /14) to have a range chosen with a specific netmask. Set to a CIDR notation (e.g. 10.96.0.0/14) to pick a specific range to use.
func (o ClusterNodePoolNetworkConfigPtrOutput) PodIpv4CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolNetworkConfig) *string {
		if v == nil {
			return nil
		}
		return v.PodIpv4CidrBlock
	}).(pulumi.StringPtrOutput)
}

// The ID of the secondary range for pod IPs. If `createPodRange` is true, this ID is used for the new range. If `createPodRange` is false, uses an existing secondary range with this ID.
func (o ClusterNodePoolNetworkConfigPtrOutput) PodRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolNetworkConfig) *string {
		if v == nil {
			return nil
		}
		return v.PodRange
	}).(pulumi.StringPtrOutput)
}

type ClusterNodePoolNetworkConfigAdditionalNodeNetworkConfig struct {
	// The name or selfLink of the Google Compute Engine
	// network to which the cluster is connected. For Shared VPC, set this to the self link of the
	// shared network.
	Network *string `pulumi:"network"`
	// The name or selfLink of the Google Compute Engine
	// subnetwork in which the cluster's instances are launched.
	Subnetwork *string `pulumi:"subnetwork"`
}

// ClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigInput is an input type that accepts ClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArgs and ClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigOutput values.
// You can construct a concrete instance of `ClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigInput` via:
//
//	ClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArgs{...}
type ClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigInput interface {
	pulumi.Input

	ToClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigOutput() ClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigOutput
	ToClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigOutputWithContext(context.Context) ClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigOutput
}

type ClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArgs struct {
	// The name or selfLink of the Google Compute Engine
	// network to which the cluster is connected. For Shared VPC, set this to the self link of the
	// shared network.
	Network pulumi.StringPtrInput `pulumi:"network"`
	// The name or selfLink of the Google Compute Engine
	// subnetwork in which the cluster's instances are launched.
	Subnetwork pulumi.StringPtrInput `pulumi:"subnetwork"`
}

func (ClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNetworkConfigAdditionalNodeNetworkConfig)(nil)).Elem()
}

func (i ClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArgs) ToClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigOutput() ClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigOutput {
	return i.ToClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigOutputWithContext(context.Background())
}

func (i ClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArgs) ToClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigOutputWithContext(ctx context.Context) ClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigOutput)
}

// ClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArrayInput is an input type that accepts ClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArray and ClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArrayOutput values.
// You can construct a concrete instance of `ClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArrayInput` via:
//
//	ClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArray{ ClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArgs{...} }
type ClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArrayInput interface {
	pulumi.Input

	ToClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArrayOutput() ClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArrayOutput
	ToClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArrayOutputWithContext(context.Context) ClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArrayOutput
}

type ClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArray []ClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigInput

func (ClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodePoolNetworkConfigAdditionalNodeNetworkConfig)(nil)).Elem()
}

func (i ClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArray) ToClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArrayOutput() ClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArrayOutput {
	return i.ToClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArrayOutputWithContext(context.Background())
}

func (i ClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArray) ToClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArrayOutputWithContext(ctx context.Context) ClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArrayOutput)
}

type ClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNetworkConfigAdditionalNodeNetworkConfig)(nil)).Elem()
}

func (o ClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigOutput) ToClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigOutput() ClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigOutput {
	return o
}

func (o ClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigOutput) ToClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigOutputWithContext(ctx context.Context) ClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigOutput {
	return o
}

// The name or selfLink of the Google Compute Engine
// network to which the cluster is connected. For Shared VPC, set this to the self link of the
// shared network.
func (o ClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigOutput) Network() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNetworkConfigAdditionalNodeNetworkConfig) *string { return v.Network }).(pulumi.StringPtrOutput)
}

// The name or selfLink of the Google Compute Engine
// subnetwork in which the cluster's instances are launched.
func (o ClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigOutput) Subnetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNetworkConfigAdditionalNodeNetworkConfig) *string { return v.Subnetwork }).(pulumi.StringPtrOutput)
}

type ClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArrayOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodePoolNetworkConfigAdditionalNodeNetworkConfig)(nil)).Elem()
}

func (o ClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArrayOutput) ToClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArrayOutput() ClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArrayOutput {
	return o
}

func (o ClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArrayOutput) ToClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArrayOutputWithContext(ctx context.Context) ClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArrayOutput {
	return o
}

func (o ClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArrayOutput) Index(i pulumi.IntInput) ClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterNodePoolNetworkConfigAdditionalNodeNetworkConfig {
		return vs[0].([]ClusterNodePoolNetworkConfigAdditionalNodeNetworkConfig)[vs[1].(int)]
	}).(ClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigOutput)
}

type ClusterNodePoolNetworkConfigAdditionalPodNetworkConfig struct {
	// The maximum number of pods per node which use this pod network.
	MaxPodsPerNode *int `pulumi:"maxPodsPerNode"`
	// The name of the secondary range on the subnet which provides IP address for this pod range.
	SecondaryPodRange *string `pulumi:"secondaryPodRange"`
	// The name or selfLink of the Google Compute Engine
	// subnetwork in which the cluster's instances are launched.
	Subnetwork *string `pulumi:"subnetwork"`
}

// ClusterNodePoolNetworkConfigAdditionalPodNetworkConfigInput is an input type that accepts ClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArgs and ClusterNodePoolNetworkConfigAdditionalPodNetworkConfigOutput values.
// You can construct a concrete instance of `ClusterNodePoolNetworkConfigAdditionalPodNetworkConfigInput` via:
//
//	ClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArgs{...}
type ClusterNodePoolNetworkConfigAdditionalPodNetworkConfigInput interface {
	pulumi.Input

	ToClusterNodePoolNetworkConfigAdditionalPodNetworkConfigOutput() ClusterNodePoolNetworkConfigAdditionalPodNetworkConfigOutput
	ToClusterNodePoolNetworkConfigAdditionalPodNetworkConfigOutputWithContext(context.Context) ClusterNodePoolNetworkConfigAdditionalPodNetworkConfigOutput
}

type ClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArgs struct {
	// The maximum number of pods per node which use this pod network.
	MaxPodsPerNode pulumi.IntPtrInput `pulumi:"maxPodsPerNode"`
	// The name of the secondary range on the subnet which provides IP address for this pod range.
	SecondaryPodRange pulumi.StringPtrInput `pulumi:"secondaryPodRange"`
	// The name or selfLink of the Google Compute Engine
	// subnetwork in which the cluster's instances are launched.
	Subnetwork pulumi.StringPtrInput `pulumi:"subnetwork"`
}

func (ClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNetworkConfigAdditionalPodNetworkConfig)(nil)).Elem()
}

func (i ClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArgs) ToClusterNodePoolNetworkConfigAdditionalPodNetworkConfigOutput() ClusterNodePoolNetworkConfigAdditionalPodNetworkConfigOutput {
	return i.ToClusterNodePoolNetworkConfigAdditionalPodNetworkConfigOutputWithContext(context.Background())
}

func (i ClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArgs) ToClusterNodePoolNetworkConfigAdditionalPodNetworkConfigOutputWithContext(ctx context.Context) ClusterNodePoolNetworkConfigAdditionalPodNetworkConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNetworkConfigAdditionalPodNetworkConfigOutput)
}

// ClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArrayInput is an input type that accepts ClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArray and ClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArrayOutput values.
// You can construct a concrete instance of `ClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArrayInput` via:
//
//	ClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArray{ ClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArgs{...} }
type ClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArrayInput interface {
	pulumi.Input

	ToClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArrayOutput() ClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArrayOutput
	ToClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArrayOutputWithContext(context.Context) ClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArrayOutput
}

type ClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArray []ClusterNodePoolNetworkConfigAdditionalPodNetworkConfigInput

func (ClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodePoolNetworkConfigAdditionalPodNetworkConfig)(nil)).Elem()
}

func (i ClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArray) ToClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArrayOutput() ClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArrayOutput {
	return i.ToClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArrayOutputWithContext(context.Background())
}

func (i ClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArray) ToClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArrayOutputWithContext(ctx context.Context) ClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArrayOutput)
}

type ClusterNodePoolNetworkConfigAdditionalPodNetworkConfigOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNetworkConfigAdditionalPodNetworkConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNetworkConfigAdditionalPodNetworkConfig)(nil)).Elem()
}

func (o ClusterNodePoolNetworkConfigAdditionalPodNetworkConfigOutput) ToClusterNodePoolNetworkConfigAdditionalPodNetworkConfigOutput() ClusterNodePoolNetworkConfigAdditionalPodNetworkConfigOutput {
	return o
}

func (o ClusterNodePoolNetworkConfigAdditionalPodNetworkConfigOutput) ToClusterNodePoolNetworkConfigAdditionalPodNetworkConfigOutputWithContext(ctx context.Context) ClusterNodePoolNetworkConfigAdditionalPodNetworkConfigOutput {
	return o
}

// The maximum number of pods per node which use this pod network.
func (o ClusterNodePoolNetworkConfigAdditionalPodNetworkConfigOutput) MaxPodsPerNode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNetworkConfigAdditionalPodNetworkConfig) *int { return v.MaxPodsPerNode }).(pulumi.IntPtrOutput)
}

// The name of the secondary range on the subnet which provides IP address for this pod range.
func (o ClusterNodePoolNetworkConfigAdditionalPodNetworkConfigOutput) SecondaryPodRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNetworkConfigAdditionalPodNetworkConfig) *string { return v.SecondaryPodRange }).(pulumi.StringPtrOutput)
}

// The name or selfLink of the Google Compute Engine
// subnetwork in which the cluster's instances are launched.
func (o ClusterNodePoolNetworkConfigAdditionalPodNetworkConfigOutput) Subnetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNetworkConfigAdditionalPodNetworkConfig) *string { return v.Subnetwork }).(pulumi.StringPtrOutput)
}

type ClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArrayOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodePoolNetworkConfigAdditionalPodNetworkConfig)(nil)).Elem()
}

func (o ClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArrayOutput) ToClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArrayOutput() ClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArrayOutput {
	return o
}

func (o ClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArrayOutput) ToClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArrayOutputWithContext(ctx context.Context) ClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArrayOutput {
	return o
}

func (o ClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArrayOutput) Index(i pulumi.IntInput) ClusterNodePoolNetworkConfigAdditionalPodNetworkConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterNodePoolNetworkConfigAdditionalPodNetworkConfig {
		return vs[0].([]ClusterNodePoolNetworkConfigAdditionalPodNetworkConfig)[vs[1].(int)]
	}).(ClusterNodePoolNetworkConfigAdditionalPodNetworkConfigOutput)
}

type ClusterNodePoolNetworkConfigNetworkPerformanceConfig struct {
	// Specifies the total network bandwidth tier for the NodePool.
	TotalEgressBandwidthTier string `pulumi:"totalEgressBandwidthTier"`
}

// ClusterNodePoolNetworkConfigNetworkPerformanceConfigInput is an input type that accepts ClusterNodePoolNetworkConfigNetworkPerformanceConfigArgs and ClusterNodePoolNetworkConfigNetworkPerformanceConfigOutput values.
// You can construct a concrete instance of `ClusterNodePoolNetworkConfigNetworkPerformanceConfigInput` via:
//
//	ClusterNodePoolNetworkConfigNetworkPerformanceConfigArgs{...}
type ClusterNodePoolNetworkConfigNetworkPerformanceConfigInput interface {
	pulumi.Input

	ToClusterNodePoolNetworkConfigNetworkPerformanceConfigOutput() ClusterNodePoolNetworkConfigNetworkPerformanceConfigOutput
	ToClusterNodePoolNetworkConfigNetworkPerformanceConfigOutputWithContext(context.Context) ClusterNodePoolNetworkConfigNetworkPerformanceConfigOutput
}

type ClusterNodePoolNetworkConfigNetworkPerformanceConfigArgs struct {
	// Specifies the total network bandwidth tier for the NodePool.
	TotalEgressBandwidthTier pulumi.StringInput `pulumi:"totalEgressBandwidthTier"`
}

func (ClusterNodePoolNetworkConfigNetworkPerformanceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNetworkConfigNetworkPerformanceConfig)(nil)).Elem()
}

func (i ClusterNodePoolNetworkConfigNetworkPerformanceConfigArgs) ToClusterNodePoolNetworkConfigNetworkPerformanceConfigOutput() ClusterNodePoolNetworkConfigNetworkPerformanceConfigOutput {
	return i.ToClusterNodePoolNetworkConfigNetworkPerformanceConfigOutputWithContext(context.Background())
}

func (i ClusterNodePoolNetworkConfigNetworkPerformanceConfigArgs) ToClusterNodePoolNetworkConfigNetworkPerformanceConfigOutputWithContext(ctx context.Context) ClusterNodePoolNetworkConfigNetworkPerformanceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNetworkConfigNetworkPerformanceConfigOutput)
}

func (i ClusterNodePoolNetworkConfigNetworkPerformanceConfigArgs) ToClusterNodePoolNetworkConfigNetworkPerformanceConfigPtrOutput() ClusterNodePoolNetworkConfigNetworkPerformanceConfigPtrOutput {
	return i.ToClusterNodePoolNetworkConfigNetworkPerformanceConfigPtrOutputWithContext(context.Background())
}

func (i ClusterNodePoolNetworkConfigNetworkPerformanceConfigArgs) ToClusterNodePoolNetworkConfigNetworkPerformanceConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNetworkConfigNetworkPerformanceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNetworkConfigNetworkPerformanceConfigOutput).ToClusterNodePoolNetworkConfigNetworkPerformanceConfigPtrOutputWithContext(ctx)
}

// ClusterNodePoolNetworkConfigNetworkPerformanceConfigPtrInput is an input type that accepts ClusterNodePoolNetworkConfigNetworkPerformanceConfigArgs, ClusterNodePoolNetworkConfigNetworkPerformanceConfigPtr and ClusterNodePoolNetworkConfigNetworkPerformanceConfigPtrOutput values.
// You can construct a concrete instance of `ClusterNodePoolNetworkConfigNetworkPerformanceConfigPtrInput` via:
//
//	        ClusterNodePoolNetworkConfigNetworkPerformanceConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterNodePoolNetworkConfigNetworkPerformanceConfigPtrInput interface {
	pulumi.Input

	ToClusterNodePoolNetworkConfigNetworkPerformanceConfigPtrOutput() ClusterNodePoolNetworkConfigNetworkPerformanceConfigPtrOutput
	ToClusterNodePoolNetworkConfigNetworkPerformanceConfigPtrOutputWithContext(context.Context) ClusterNodePoolNetworkConfigNetworkPerformanceConfigPtrOutput
}

type clusterNodePoolNetworkConfigNetworkPerformanceConfigPtrType ClusterNodePoolNetworkConfigNetworkPerformanceConfigArgs

func ClusterNodePoolNetworkConfigNetworkPerformanceConfigPtr(v *ClusterNodePoolNetworkConfigNetworkPerformanceConfigArgs) ClusterNodePoolNetworkConfigNetworkPerformanceConfigPtrInput {
	return (*clusterNodePoolNetworkConfigNetworkPerformanceConfigPtrType)(v)
}

func (*clusterNodePoolNetworkConfigNetworkPerformanceConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolNetworkConfigNetworkPerformanceConfig)(nil)).Elem()
}

func (i *clusterNodePoolNetworkConfigNetworkPerformanceConfigPtrType) ToClusterNodePoolNetworkConfigNetworkPerformanceConfigPtrOutput() ClusterNodePoolNetworkConfigNetworkPerformanceConfigPtrOutput {
	return i.ToClusterNodePoolNetworkConfigNetworkPerformanceConfigPtrOutputWithContext(context.Background())
}

func (i *clusterNodePoolNetworkConfigNetworkPerformanceConfigPtrType) ToClusterNodePoolNetworkConfigNetworkPerformanceConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNetworkConfigNetworkPerformanceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNetworkConfigNetworkPerformanceConfigPtrOutput)
}

type ClusterNodePoolNetworkConfigNetworkPerformanceConfigOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNetworkConfigNetworkPerformanceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNetworkConfigNetworkPerformanceConfig)(nil)).Elem()
}

func (o ClusterNodePoolNetworkConfigNetworkPerformanceConfigOutput) ToClusterNodePoolNetworkConfigNetworkPerformanceConfigOutput() ClusterNodePoolNetworkConfigNetworkPerformanceConfigOutput {
	return o
}

func (o ClusterNodePoolNetworkConfigNetworkPerformanceConfigOutput) ToClusterNodePoolNetworkConfigNetworkPerformanceConfigOutputWithContext(ctx context.Context) ClusterNodePoolNetworkConfigNetworkPerformanceConfigOutput {
	return o
}

func (o ClusterNodePoolNetworkConfigNetworkPerformanceConfigOutput) ToClusterNodePoolNetworkConfigNetworkPerformanceConfigPtrOutput() ClusterNodePoolNetworkConfigNetworkPerformanceConfigPtrOutput {
	return o.ToClusterNodePoolNetworkConfigNetworkPerformanceConfigPtrOutputWithContext(context.Background())
}

func (o ClusterNodePoolNetworkConfigNetworkPerformanceConfigOutput) ToClusterNodePoolNetworkConfigNetworkPerformanceConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNetworkConfigNetworkPerformanceConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterNodePoolNetworkConfigNetworkPerformanceConfig) *ClusterNodePoolNetworkConfigNetworkPerformanceConfig {
		return &v
	}).(ClusterNodePoolNetworkConfigNetworkPerformanceConfigPtrOutput)
}

// Specifies the total network bandwidth tier for the NodePool.
func (o ClusterNodePoolNetworkConfigNetworkPerformanceConfigOutput) TotalEgressBandwidthTier() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodePoolNetworkConfigNetworkPerformanceConfig) string { return v.TotalEgressBandwidthTier }).(pulumi.StringOutput)
}

type ClusterNodePoolNetworkConfigNetworkPerformanceConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNetworkConfigNetworkPerformanceConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolNetworkConfigNetworkPerformanceConfig)(nil)).Elem()
}

func (o ClusterNodePoolNetworkConfigNetworkPerformanceConfigPtrOutput) ToClusterNodePoolNetworkConfigNetworkPerformanceConfigPtrOutput() ClusterNodePoolNetworkConfigNetworkPerformanceConfigPtrOutput {
	return o
}

func (o ClusterNodePoolNetworkConfigNetworkPerformanceConfigPtrOutput) ToClusterNodePoolNetworkConfigNetworkPerformanceConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNetworkConfigNetworkPerformanceConfigPtrOutput {
	return o
}

func (o ClusterNodePoolNetworkConfigNetworkPerformanceConfigPtrOutput) Elem() ClusterNodePoolNetworkConfigNetworkPerformanceConfigOutput {
	return o.ApplyT(func(v *ClusterNodePoolNetworkConfigNetworkPerformanceConfig) ClusterNodePoolNetworkConfigNetworkPerformanceConfig {
		if v != nil {
			return *v
		}
		var ret ClusterNodePoolNetworkConfigNetworkPerformanceConfig
		return ret
	}).(ClusterNodePoolNetworkConfigNetworkPerformanceConfigOutput)
}

// Specifies the total network bandwidth tier for the NodePool.
func (o ClusterNodePoolNetworkConfigNetworkPerformanceConfigPtrOutput) TotalEgressBandwidthTier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolNetworkConfigNetworkPerformanceConfig) *string {
		if v == nil {
			return nil
		}
		return &v.TotalEgressBandwidthTier
	}).(pulumi.StringPtrOutput)
}

type ClusterNodePoolNetworkConfigPodCidrOverprovisionConfig struct {
	// Whether the cluster disables default in-node sNAT rules. In-node sNAT rules will be disabled when defaultSnatStatus is disabled.When disabled is set to false, default IP masquerade rules will be applied to the nodes to prevent sNAT on cluster internal traffic
	//
	// <a name="nestedClusterTelemetry"></a>The `clusterTelemetry` block supports
	Disabled bool `pulumi:"disabled"`
}

// ClusterNodePoolNetworkConfigPodCidrOverprovisionConfigInput is an input type that accepts ClusterNodePoolNetworkConfigPodCidrOverprovisionConfigArgs and ClusterNodePoolNetworkConfigPodCidrOverprovisionConfigOutput values.
// You can construct a concrete instance of `ClusterNodePoolNetworkConfigPodCidrOverprovisionConfigInput` via:
//
//	ClusterNodePoolNetworkConfigPodCidrOverprovisionConfigArgs{...}
type ClusterNodePoolNetworkConfigPodCidrOverprovisionConfigInput interface {
	pulumi.Input

	ToClusterNodePoolNetworkConfigPodCidrOverprovisionConfigOutput() ClusterNodePoolNetworkConfigPodCidrOverprovisionConfigOutput
	ToClusterNodePoolNetworkConfigPodCidrOverprovisionConfigOutputWithContext(context.Context) ClusterNodePoolNetworkConfigPodCidrOverprovisionConfigOutput
}

type ClusterNodePoolNetworkConfigPodCidrOverprovisionConfigArgs struct {
	// Whether the cluster disables default in-node sNAT rules. In-node sNAT rules will be disabled when defaultSnatStatus is disabled.When disabled is set to false, default IP masquerade rules will be applied to the nodes to prevent sNAT on cluster internal traffic
	//
	// <a name="nestedClusterTelemetry"></a>The `clusterTelemetry` block supports
	Disabled pulumi.BoolInput `pulumi:"disabled"`
}

func (ClusterNodePoolNetworkConfigPodCidrOverprovisionConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNetworkConfigPodCidrOverprovisionConfig)(nil)).Elem()
}

func (i ClusterNodePoolNetworkConfigPodCidrOverprovisionConfigArgs) ToClusterNodePoolNetworkConfigPodCidrOverprovisionConfigOutput() ClusterNodePoolNetworkConfigPodCidrOverprovisionConfigOutput {
	return i.ToClusterNodePoolNetworkConfigPodCidrOverprovisionConfigOutputWithContext(context.Background())
}

func (i ClusterNodePoolNetworkConfigPodCidrOverprovisionConfigArgs) ToClusterNodePoolNetworkConfigPodCidrOverprovisionConfigOutputWithContext(ctx context.Context) ClusterNodePoolNetworkConfigPodCidrOverprovisionConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNetworkConfigPodCidrOverprovisionConfigOutput)
}

func (i ClusterNodePoolNetworkConfigPodCidrOverprovisionConfigArgs) ToClusterNodePoolNetworkConfigPodCidrOverprovisionConfigPtrOutput() ClusterNodePoolNetworkConfigPodCidrOverprovisionConfigPtrOutput {
	return i.ToClusterNodePoolNetworkConfigPodCidrOverprovisionConfigPtrOutputWithContext(context.Background())
}

func (i ClusterNodePoolNetworkConfigPodCidrOverprovisionConfigArgs) ToClusterNodePoolNetworkConfigPodCidrOverprovisionConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNetworkConfigPodCidrOverprovisionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNetworkConfigPodCidrOverprovisionConfigOutput).ToClusterNodePoolNetworkConfigPodCidrOverprovisionConfigPtrOutputWithContext(ctx)
}

// ClusterNodePoolNetworkConfigPodCidrOverprovisionConfigPtrInput is an input type that accepts ClusterNodePoolNetworkConfigPodCidrOverprovisionConfigArgs, ClusterNodePoolNetworkConfigPodCidrOverprovisionConfigPtr and ClusterNodePoolNetworkConfigPodCidrOverprovisionConfigPtrOutput values.
// You can construct a concrete instance of `ClusterNodePoolNetworkConfigPodCidrOverprovisionConfigPtrInput` via:
//
//	        ClusterNodePoolNetworkConfigPodCidrOverprovisionConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterNodePoolNetworkConfigPodCidrOverprovisionConfigPtrInput interface {
	pulumi.Input

	ToClusterNodePoolNetworkConfigPodCidrOverprovisionConfigPtrOutput() ClusterNodePoolNetworkConfigPodCidrOverprovisionConfigPtrOutput
	ToClusterNodePoolNetworkConfigPodCidrOverprovisionConfigPtrOutputWithContext(context.Context) ClusterNodePoolNetworkConfigPodCidrOverprovisionConfigPtrOutput
}

type clusterNodePoolNetworkConfigPodCidrOverprovisionConfigPtrType ClusterNodePoolNetworkConfigPodCidrOverprovisionConfigArgs

func ClusterNodePoolNetworkConfigPodCidrOverprovisionConfigPtr(v *ClusterNodePoolNetworkConfigPodCidrOverprovisionConfigArgs) ClusterNodePoolNetworkConfigPodCidrOverprovisionConfigPtrInput {
	return (*clusterNodePoolNetworkConfigPodCidrOverprovisionConfigPtrType)(v)
}

func (*clusterNodePoolNetworkConfigPodCidrOverprovisionConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolNetworkConfigPodCidrOverprovisionConfig)(nil)).Elem()
}

func (i *clusterNodePoolNetworkConfigPodCidrOverprovisionConfigPtrType) ToClusterNodePoolNetworkConfigPodCidrOverprovisionConfigPtrOutput() ClusterNodePoolNetworkConfigPodCidrOverprovisionConfigPtrOutput {
	return i.ToClusterNodePoolNetworkConfigPodCidrOverprovisionConfigPtrOutputWithContext(context.Background())
}

func (i *clusterNodePoolNetworkConfigPodCidrOverprovisionConfigPtrType) ToClusterNodePoolNetworkConfigPodCidrOverprovisionConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNetworkConfigPodCidrOverprovisionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNetworkConfigPodCidrOverprovisionConfigPtrOutput)
}

type ClusterNodePoolNetworkConfigPodCidrOverprovisionConfigOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNetworkConfigPodCidrOverprovisionConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNetworkConfigPodCidrOverprovisionConfig)(nil)).Elem()
}

func (o ClusterNodePoolNetworkConfigPodCidrOverprovisionConfigOutput) ToClusterNodePoolNetworkConfigPodCidrOverprovisionConfigOutput() ClusterNodePoolNetworkConfigPodCidrOverprovisionConfigOutput {
	return o
}

func (o ClusterNodePoolNetworkConfigPodCidrOverprovisionConfigOutput) ToClusterNodePoolNetworkConfigPodCidrOverprovisionConfigOutputWithContext(ctx context.Context) ClusterNodePoolNetworkConfigPodCidrOverprovisionConfigOutput {
	return o
}

func (o ClusterNodePoolNetworkConfigPodCidrOverprovisionConfigOutput) ToClusterNodePoolNetworkConfigPodCidrOverprovisionConfigPtrOutput() ClusterNodePoolNetworkConfigPodCidrOverprovisionConfigPtrOutput {
	return o.ToClusterNodePoolNetworkConfigPodCidrOverprovisionConfigPtrOutputWithContext(context.Background())
}

func (o ClusterNodePoolNetworkConfigPodCidrOverprovisionConfigOutput) ToClusterNodePoolNetworkConfigPodCidrOverprovisionConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNetworkConfigPodCidrOverprovisionConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterNodePoolNetworkConfigPodCidrOverprovisionConfig) *ClusterNodePoolNetworkConfigPodCidrOverprovisionConfig {
		return &v
	}).(ClusterNodePoolNetworkConfigPodCidrOverprovisionConfigPtrOutput)
}

// Whether the cluster disables default in-node sNAT rules. In-node sNAT rules will be disabled when defaultSnatStatus is disabled.When disabled is set to false, default IP masquerade rules will be applied to the nodes to prevent sNAT on cluster internal traffic
//
// <a name="nestedClusterTelemetry"></a>The `clusterTelemetry` block supports
func (o ClusterNodePoolNetworkConfigPodCidrOverprovisionConfigOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterNodePoolNetworkConfigPodCidrOverprovisionConfig) bool { return v.Disabled }).(pulumi.BoolOutput)
}

type ClusterNodePoolNetworkConfigPodCidrOverprovisionConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNetworkConfigPodCidrOverprovisionConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolNetworkConfigPodCidrOverprovisionConfig)(nil)).Elem()
}

func (o ClusterNodePoolNetworkConfigPodCidrOverprovisionConfigPtrOutput) ToClusterNodePoolNetworkConfigPodCidrOverprovisionConfigPtrOutput() ClusterNodePoolNetworkConfigPodCidrOverprovisionConfigPtrOutput {
	return o
}

func (o ClusterNodePoolNetworkConfigPodCidrOverprovisionConfigPtrOutput) ToClusterNodePoolNetworkConfigPodCidrOverprovisionConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNetworkConfigPodCidrOverprovisionConfigPtrOutput {
	return o
}

func (o ClusterNodePoolNetworkConfigPodCidrOverprovisionConfigPtrOutput) Elem() ClusterNodePoolNetworkConfigPodCidrOverprovisionConfigOutput {
	return o.ApplyT(func(v *ClusterNodePoolNetworkConfigPodCidrOverprovisionConfig) ClusterNodePoolNetworkConfigPodCidrOverprovisionConfig {
		if v != nil {
			return *v
		}
		var ret ClusterNodePoolNetworkConfigPodCidrOverprovisionConfig
		return ret
	}).(ClusterNodePoolNetworkConfigPodCidrOverprovisionConfigOutput)
}

// Whether the cluster disables default in-node sNAT rules. In-node sNAT rules will be disabled when defaultSnatStatus is disabled.When disabled is set to false, default IP masquerade rules will be applied to the nodes to prevent sNAT on cluster internal traffic
//
// <a name="nestedClusterTelemetry"></a>The `clusterTelemetry` block supports
func (o ClusterNodePoolNetworkConfigPodCidrOverprovisionConfigPtrOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolNetworkConfigPodCidrOverprovisionConfig) *bool {
		if v == nil {
			return nil
		}
		return &v.Disabled
	}).(pulumi.BoolPtrOutput)
}

type ClusterNodePoolNodeConfig struct {
	// Specifies options for controlling
	// advanced machine features. Structure is documented below.
	AdvancedMachineFeatures *ClusterNodePoolNodeConfigAdvancedMachineFeatures `pulumi:"advancedMachineFeatures"`
	// The Customer Managed Encryption Key used to encrypt the boot disk attached to each node in the node pool. This should be of the form projects/[KEY_PROJECT_ID]/locations/[LOCATION]/keyRings/[RING_NAME]/cryptoKeys/[KEY_NAME]. For more information about protecting resources with Cloud KMS Keys please see: <https://cloud.google.com/compute/docs/disks/customer-managed-encryption>
	BootDiskKmsKey *string `pulumi:"bootDiskKmsKey"`
	// Configuration for [Confidential Nodes](https://cloud.google.com/kubernetes-engine/docs/how-to/confidential-gke-nodes) feature. Structure is documented below documented below.
	ConfidentialNodes *ClusterNodePoolNodeConfigConfidentialNodes `pulumi:"confidentialNodes"`
	// Size of the disk attached to each node, specified
	// in GB. The smallest allowed disk size is 10GB. Defaults to 100GB.
	DiskSizeGb *int `pulumi:"diskSizeGb"`
	// Type of the disk attached to each node
	// (e.g. 'pd-standard', 'pd-balanced' or 'pd-ssd'). If unspecified, the default disk type is 'pd-standard'
	DiskType *string `pulumi:"diskType"`
	// List of kubernetes taints applied to each node. Structure is documented above.
	EffectiveTaints []ClusterNodePoolNodeConfigEffectiveTaint `pulumi:"effectiveTaints"`
	// Enabling Confidential Storage will create boot disk with confidential mode. It is disabled by default.
	EnableConfidentialStorage *bool `pulumi:"enableConfidentialStorage"`
	// Parameters for the ephemeral storage filesystem. If unspecified, ephemeral storage is backed by the boot disk. Structure is documented below.
	EphemeralStorageConfig *ClusterNodePoolNodeConfigEphemeralStorageConfig `pulumi:"ephemeralStorageConfig"`
	// Parameters for the ephemeral storage filesystem. If unspecified, ephemeral storage is backed by the boot disk. Structure is documented below.
	EphemeralStorageLocalSsdConfig *ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfig `pulumi:"ephemeralStorageLocalSsdConfig"`
	// Parameters for the NCCL Fast Socket feature. If unspecified, NCCL Fast Socket will not be enabled on the node pool.
	// Node Pool must enable gvnic.
	// GKE version 1.25.2-gke.1700 or later.
	// Structure is documented below.
	FastSocket *ClusterNodePoolNodeConfigFastSocket `pulumi:"fastSocket"`
	// Parameters for the Google Container Filesystem (GCFS).
	// If unspecified, GCFS will not be enabled on the node pool. When enabling this feature you must specify `imageType = "COS_CONTAINERD"` and `nodeVersion` from GKE versions 1.19 or later to use it.
	// For GKE versions 1.19, 1.20, and 1.21, the recommended minimum `nodeVersion` would be 1.19.15-gke.1300, 1.20.11-gke.1300, and 1.21.5-gke.1300 respectively.
	// A `machineType` that has more than 16 GiB of memory is also recommended.
	// GCFS must be enabled in order to use [image streaming](https://cloud.google.com/kubernetes-engine/docs/how-to/image-streaming).
	// Structure is documented below.
	GcfsConfig *ClusterNodePoolNodeConfigGcfsConfig `pulumi:"gcfsConfig"`
	// List of the type and count of accelerator cards attached to the instance.
	// Structure documented below.
	GuestAccelerators []ClusterNodePoolNodeConfigGuestAccelerator `pulumi:"guestAccelerators"`
	// Google Virtual NIC (gVNIC) is a virtual network interface.
	// Installing the gVNIC driver allows for more efficient traffic transmission across the Google network infrastructure.
	// gVNIC is an alternative to the virtIO-based ethernet driver. GKE nodes must use a Container-Optimized OS node image.
	// GKE node version 1.15.11-gke.15 or later
	// Structure is documented below.
	Gvnic *ClusterNodePoolNodeConfigGvnic `pulumi:"gvnic"`
	// The maintenance policy for the hosts on which the GKE VMs run on.
	HostMaintenancePolicy *ClusterNodePoolNodeConfigHostMaintenancePolicy `pulumi:"hostMaintenancePolicy"`
	// The image type to use for this node. Note that changing the image type
	// will delete and recreate all nodes in the node pool.
	ImageType *string `pulumi:"imageType"`
	// Kubelet configuration, currently supported attributes can be found [here](https://cloud.google.com/sdk/gcloud/reference/beta/container/node-pools/create#--system-config-from-file).
	// Structure is documented below.
	KubeletConfig *ClusterNodePoolNodeConfigKubeletConfig `pulumi:"kubeletConfig"`
	// The Kubernetes labels (key/value pairs) to be applied to each node. The kubernetes.io/ and k8s.io/ prefixes are
	// reserved by Kubernetes Core components and cannot be specified.
	Labels map[string]string `pulumi:"labels"`
	// Parameters that can be configured on Linux nodes. Structure is documented below.
	LinuxNodeConfig *ClusterNodePoolNodeConfigLinuxNodeConfig `pulumi:"linuxNodeConfig"`
	// Parameters for the local NVMe SSDs. Structure is documented below.
	LocalNvmeSsdBlockConfig *ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfig `pulumi:"localNvmeSsdBlockConfig"`
	// The amount of local SSD disks that will be
	// attached to each cluster node. Defaults to 0.
	LocalSsdCount *int `pulumi:"localSsdCount"`
	// Parameter for specifying the type of logging agent used in a node pool. This will override any cluster-wide default value. Valid values include DEFAULT and MAX_THROUGHPUT. See [Increasing logging agent throughput](https://cloud.google.com/stackdriver/docs/solutions/gke/managing-logs#throughput) for more information.
	LoggingVariant *string `pulumi:"loggingVariant"`
	// The name of a Google Compute Engine machine type.
	// Defaults to `e2-medium`. To create a custom machine type, value should be set as specified
	// [here](https://cloud.google.com/compute/docs/reference/latest/instances#machineType).
	MachineType *string `pulumi:"machineType"`
	// The metadata key/value pairs assigned to instances in
	// the cluster. From GKE `1.12` onwards, `disable-legacy-endpoints` is set to
	// `true` by the API; if `metadata` is set but that default value is not
	// included, the provider will attempt to unset the value. To avoid this, set the
	// value in your config.
	Metadata map[string]string `pulumi:"metadata"`
	// Minimum CPU platform to be used by this instance.
	// The instance may be scheduled on the specified or newer CPU platform. Applicable
	// values are the friendly names of CPU platforms, such as `Intel Haswell`. See the
	// [official documentation](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
	// for more information.
	MinCpuPlatform *string `pulumi:"minCpuPlatform"`
	// Setting this field will assign instances of this pool to run on the specified node group. This is useful for running workloads on [sole tenant nodes](https://cloud.google.com/compute/docs/nodes/sole-tenant-nodes).
	NodeGroup *string `pulumi:"nodeGroup"`
	// The set of Google API scopes to be made available
	// on all of the node VMs under the "default" service account.
	// Use the "https://www.googleapis.com/auth/cloud-platform" scope to grant access to all APIs. It is recommended that you set `serviceAccount` to a non-default service account and grant IAM roles to that service account for only the resources that it needs.
	//
	// See the [official documentation](https://cloud.google.com/kubernetes-engine/docs/how-to/access-scopes) for information on migrating off of legacy access scopes.
	OauthScopes []string `pulumi:"oauthScopes"`
	// A boolean that represents whether or not the underlying node VMs
	// are preemptible. See the [official documentation](https://cloud.google.com/container-engine/docs/preemptible-vm)
	// for more information. Defaults to false.
	Preemptible *bool `pulumi:"preemptible"`
	// The configuration of the desired reservation which instances could take capacity from. Structure is documented below.
	ReservationAffinity *ClusterNodePoolNodeConfigReservationAffinity `pulumi:"reservationAffinity"`
	// The GCP labels (key/value pairs) to be applied to each node. Refer [here](https://cloud.google.com/kubernetes-engine/docs/how-to/creating-managing-labels)
	// for how these labels are applied to clusters, node pools and nodes.
	ResourceLabels map[string]string `pulumi:"resourceLabels"`
	// A map of resource manager tag keys and values to be attached to the nodes for managing Compute Engine firewalls using Network Firewall Policies. Tags must be according to specifications found [here](https://cloud.google.com/vpc/docs/tags-firewalls-overview#specifications). A maximum of 5 tag key-value pairs can be specified. Existing tags will be replaced with new values. Tags must be in one of the following formats ([KEY]=[VALUE]) 1. `tagKeys/{tag_key_id}=tagValues/{tag_value_id}` 2. `{org_id}/{tag_key_name}={tag_value_name}` 3. `{project_id}/{tag_key_name}={tag_value_name}`.
	ResourceManagerTags map[string]interface{} `pulumi:"resourceManagerTags"`
	// Sandbox configuration for this node.
	SandboxConfig *ClusterNodePoolNodeConfigSandboxConfig `pulumi:"sandboxConfig"`
	// Parameters for secondary boot disks to preload container images and data on new nodes. Structure is documented below. `gcfsConfig` must be `enabled=true` for this feature to work. `minMasterVersion` must also be set to use GKE 1.28.3-gke.106700 or later versions.
	SecondaryBootDisks []ClusterNodePoolNodeConfigSecondaryBootDisk `pulumi:"secondaryBootDisks"`
	// The service account to be used by the Node VMs.
	// If not specified, the "default" service account is used.
	ServiceAccount *string `pulumi:"serviceAccount"`
	// Shielded Instance options. Structure is documented below.
	ShieldedInstanceConfig *ClusterNodePoolNodeConfigShieldedInstanceConfig `pulumi:"shieldedInstanceConfig"`
	// Allows specifying multiple [node affinities](https://cloud.google.com/compute/docs/nodes/sole-tenant-nodes#node_affinity_and_anti-affinity) useful for running workloads on [sole tenant nodes](https://cloud.google.com/kubernetes-engine/docs/how-to/sole-tenancy). `nodeAffinity` structure is documented below.
	SoleTenantConfig *ClusterNodePoolNodeConfigSoleTenantConfig `pulumi:"soleTenantConfig"`
	// A boolean that represents whether the underlying node VMs are spot.
	// See the [official documentation](https://cloud.google.com/kubernetes-engine/docs/concepts/spot-vms)
	// for more information. Defaults to false.
	Spot *bool `pulumi:"spot"`
	// The list of instance tags applied to all nodes. Tags are used to identify
	// valid sources or targets for network firewalls.
	Tags []string `pulumi:"tags"`
	// A list of [Kubernetes taints](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
	// to apply to nodes. GKE's API can only set this field on cluster creation.
	// However, GKE will add taints to your nodes if you enable certain features such
	// as GPUs. If this field is set, any diffs on this field will cause the provider to
	// recreate the underlying resource. Taint values can be updated safely in
	// Kubernetes (eg. through `kubectl`), and it's recommended that you do not use
	// this field to manage taints. If you do, `lifecycle.ignore_changes` is
	// recommended. Structure is documented below.
	Taints []ClusterNodePoolNodeConfigTaint `pulumi:"taints"`
	// Metadata configuration to expose to workloads on the node pool.
	// Structure is documented below.
	WorkloadMetadataConfig *ClusterNodePoolNodeConfigWorkloadMetadataConfig `pulumi:"workloadMetadataConfig"`
}

// ClusterNodePoolNodeConfigInput is an input type that accepts ClusterNodePoolNodeConfigArgs and ClusterNodePoolNodeConfigOutput values.
// You can construct a concrete instance of `ClusterNodePoolNodeConfigInput` via:
//
//	ClusterNodePoolNodeConfigArgs{...}
type ClusterNodePoolNodeConfigInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigOutput() ClusterNodePoolNodeConfigOutput
	ToClusterNodePoolNodeConfigOutputWithContext(context.Context) ClusterNodePoolNodeConfigOutput
}

type ClusterNodePoolNodeConfigArgs struct {
	// Specifies options for controlling
	// advanced machine features. Structure is documented below.
	AdvancedMachineFeatures ClusterNodePoolNodeConfigAdvancedMachineFeaturesPtrInput `pulumi:"advancedMachineFeatures"`
	// The Customer Managed Encryption Key used to encrypt the boot disk attached to each node in the node pool. This should be of the form projects/[KEY_PROJECT_ID]/locations/[LOCATION]/keyRings/[RING_NAME]/cryptoKeys/[KEY_NAME]. For more information about protecting resources with Cloud KMS Keys please see: <https://cloud.google.com/compute/docs/disks/customer-managed-encryption>
	BootDiskKmsKey pulumi.StringPtrInput `pulumi:"bootDiskKmsKey"`
	// Configuration for [Confidential Nodes](https://cloud.google.com/kubernetes-engine/docs/how-to/confidential-gke-nodes) feature. Structure is documented below documented below.
	ConfidentialNodes ClusterNodePoolNodeConfigConfidentialNodesPtrInput `pulumi:"confidentialNodes"`
	// Size of the disk attached to each node, specified
	// in GB. The smallest allowed disk size is 10GB. Defaults to 100GB.
	DiskSizeGb pulumi.IntPtrInput `pulumi:"diskSizeGb"`
	// Type of the disk attached to each node
	// (e.g. 'pd-standard', 'pd-balanced' or 'pd-ssd'). If unspecified, the default disk type is 'pd-standard'
	DiskType pulumi.StringPtrInput `pulumi:"diskType"`
	// List of kubernetes taints applied to each node. Structure is documented above.
	EffectiveTaints ClusterNodePoolNodeConfigEffectiveTaintArrayInput `pulumi:"effectiveTaints"`
	// Enabling Confidential Storage will create boot disk with confidential mode. It is disabled by default.
	EnableConfidentialStorage pulumi.BoolPtrInput `pulumi:"enableConfidentialStorage"`
	// Parameters for the ephemeral storage filesystem. If unspecified, ephemeral storage is backed by the boot disk. Structure is documented below.
	EphemeralStorageConfig ClusterNodePoolNodeConfigEphemeralStorageConfigPtrInput `pulumi:"ephemeralStorageConfig"`
	// Parameters for the ephemeral storage filesystem. If unspecified, ephemeral storage is backed by the boot disk. Structure is documented below.
	EphemeralStorageLocalSsdConfig ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrInput `pulumi:"ephemeralStorageLocalSsdConfig"`
	// Parameters for the NCCL Fast Socket feature. If unspecified, NCCL Fast Socket will not be enabled on the node pool.
	// Node Pool must enable gvnic.
	// GKE version 1.25.2-gke.1700 or later.
	// Structure is documented below.
	FastSocket ClusterNodePoolNodeConfigFastSocketPtrInput `pulumi:"fastSocket"`
	// Parameters for the Google Container Filesystem (GCFS).
	// If unspecified, GCFS will not be enabled on the node pool. When enabling this feature you must specify `imageType = "COS_CONTAINERD"` and `nodeVersion` from GKE versions 1.19 or later to use it.
	// For GKE versions 1.19, 1.20, and 1.21, the recommended minimum `nodeVersion` would be 1.19.15-gke.1300, 1.20.11-gke.1300, and 1.21.5-gke.1300 respectively.
	// A `machineType` that has more than 16 GiB of memory is also recommended.
	// GCFS must be enabled in order to use [image streaming](https://cloud.google.com/kubernetes-engine/docs/how-to/image-streaming).
	// Structure is documented below.
	GcfsConfig ClusterNodePoolNodeConfigGcfsConfigPtrInput `pulumi:"gcfsConfig"`
	// List of the type and count of accelerator cards attached to the instance.
	// Structure documented below.
	GuestAccelerators ClusterNodePoolNodeConfigGuestAcceleratorArrayInput `pulumi:"guestAccelerators"`
	// Google Virtual NIC (gVNIC) is a virtual network interface.
	// Installing the gVNIC driver allows for more efficient traffic transmission across the Google network infrastructure.
	// gVNIC is an alternative to the virtIO-based ethernet driver. GKE nodes must use a Container-Optimized OS node image.
	// GKE node version 1.15.11-gke.15 or later
	// Structure is documented below.
	Gvnic ClusterNodePoolNodeConfigGvnicPtrInput `pulumi:"gvnic"`
	// The maintenance policy for the hosts on which the GKE VMs run on.
	HostMaintenancePolicy ClusterNodePoolNodeConfigHostMaintenancePolicyPtrInput `pulumi:"hostMaintenancePolicy"`
	// The image type to use for this node. Note that changing the image type
	// will delete and recreate all nodes in the node pool.
	ImageType pulumi.StringPtrInput `pulumi:"imageType"`
	// Kubelet configuration, currently supported attributes can be found [here](https://cloud.google.com/sdk/gcloud/reference/beta/container/node-pools/create#--system-config-from-file).
	// Structure is documented below.
	KubeletConfig ClusterNodePoolNodeConfigKubeletConfigPtrInput `pulumi:"kubeletConfig"`
	// The Kubernetes labels (key/value pairs) to be applied to each node. The kubernetes.io/ and k8s.io/ prefixes are
	// reserved by Kubernetes Core components and cannot be specified.
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// Parameters that can be configured on Linux nodes. Structure is documented below.
	LinuxNodeConfig ClusterNodePoolNodeConfigLinuxNodeConfigPtrInput `pulumi:"linuxNodeConfig"`
	// Parameters for the local NVMe SSDs. Structure is documented below.
	LocalNvmeSsdBlockConfig ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigPtrInput `pulumi:"localNvmeSsdBlockConfig"`
	// The amount of local SSD disks that will be
	// attached to each cluster node. Defaults to 0.
	LocalSsdCount pulumi.IntPtrInput `pulumi:"localSsdCount"`
	// Parameter for specifying the type of logging agent used in a node pool. This will override any cluster-wide default value. Valid values include DEFAULT and MAX_THROUGHPUT. See [Increasing logging agent throughput](https://cloud.google.com/stackdriver/docs/solutions/gke/managing-logs#throughput) for more information.
	LoggingVariant pulumi.StringPtrInput `pulumi:"loggingVariant"`
	// The name of a Google Compute Engine machine type.
	// Defaults to `e2-medium`. To create a custom machine type, value should be set as specified
	// [here](https://cloud.google.com/compute/docs/reference/latest/instances#machineType).
	MachineType pulumi.StringPtrInput `pulumi:"machineType"`
	// The metadata key/value pairs assigned to instances in
	// the cluster. From GKE `1.12` onwards, `disable-legacy-endpoints` is set to
	// `true` by the API; if `metadata` is set but that default value is not
	// included, the provider will attempt to unset the value. To avoid this, set the
	// value in your config.
	Metadata pulumi.StringMapInput `pulumi:"metadata"`
	// Minimum CPU platform to be used by this instance.
	// The instance may be scheduled on the specified or newer CPU platform. Applicable
	// values are the friendly names of CPU platforms, such as `Intel Haswell`. See the
	// [official documentation](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
	// for more information.
	MinCpuPlatform pulumi.StringPtrInput `pulumi:"minCpuPlatform"`
	// Setting this field will assign instances of this pool to run on the specified node group. This is useful for running workloads on [sole tenant nodes](https://cloud.google.com/compute/docs/nodes/sole-tenant-nodes).
	NodeGroup pulumi.StringPtrInput `pulumi:"nodeGroup"`
	// The set of Google API scopes to be made available
	// on all of the node VMs under the "default" service account.
	// Use the "https://www.googleapis.com/auth/cloud-platform" scope to grant access to all APIs. It is recommended that you set `serviceAccount` to a non-default service account and grant IAM roles to that service account for only the resources that it needs.
	//
	// See the [official documentation](https://cloud.google.com/kubernetes-engine/docs/how-to/access-scopes) for information on migrating off of legacy access scopes.
	OauthScopes pulumi.StringArrayInput `pulumi:"oauthScopes"`
	// A boolean that represents whether or not the underlying node VMs
	// are preemptible. See the [official documentation](https://cloud.google.com/container-engine/docs/preemptible-vm)
	// for more information. Defaults to false.
	Preemptible pulumi.BoolPtrInput `pulumi:"preemptible"`
	// The configuration of the desired reservation which instances could take capacity from. Structure is documented below.
	ReservationAffinity ClusterNodePoolNodeConfigReservationAffinityPtrInput `pulumi:"reservationAffinity"`
	// The GCP labels (key/value pairs) to be applied to each node. Refer [here](https://cloud.google.com/kubernetes-engine/docs/how-to/creating-managing-labels)
	// for how these labels are applied to clusters, node pools and nodes.
	ResourceLabels pulumi.StringMapInput `pulumi:"resourceLabels"`
	// A map of resource manager tag keys and values to be attached to the nodes for managing Compute Engine firewalls using Network Firewall Policies. Tags must be according to specifications found [here](https://cloud.google.com/vpc/docs/tags-firewalls-overview#specifications). A maximum of 5 tag key-value pairs can be specified. Existing tags will be replaced with new values. Tags must be in one of the following formats ([KEY]=[VALUE]) 1. `tagKeys/{tag_key_id}=tagValues/{tag_value_id}` 2. `{org_id}/{tag_key_name}={tag_value_name}` 3. `{project_id}/{tag_key_name}={tag_value_name}`.
	ResourceManagerTags pulumi.MapInput `pulumi:"resourceManagerTags"`
	// Sandbox configuration for this node.
	SandboxConfig ClusterNodePoolNodeConfigSandboxConfigPtrInput `pulumi:"sandboxConfig"`
	// Parameters for secondary boot disks to preload container images and data on new nodes. Structure is documented below. `gcfsConfig` must be `enabled=true` for this feature to work. `minMasterVersion` must also be set to use GKE 1.28.3-gke.106700 or later versions.
	SecondaryBootDisks ClusterNodePoolNodeConfigSecondaryBootDiskArrayInput `pulumi:"secondaryBootDisks"`
	// The service account to be used by the Node VMs.
	// If not specified, the "default" service account is used.
	ServiceAccount pulumi.StringPtrInput `pulumi:"serviceAccount"`
	// Shielded Instance options. Structure is documented below.
	ShieldedInstanceConfig ClusterNodePoolNodeConfigShieldedInstanceConfigPtrInput `pulumi:"shieldedInstanceConfig"`
	// Allows specifying multiple [node affinities](https://cloud.google.com/compute/docs/nodes/sole-tenant-nodes#node_affinity_and_anti-affinity) useful for running workloads on [sole tenant nodes](https://cloud.google.com/kubernetes-engine/docs/how-to/sole-tenancy). `nodeAffinity` structure is documented below.
	SoleTenantConfig ClusterNodePoolNodeConfigSoleTenantConfigPtrInput `pulumi:"soleTenantConfig"`
	// A boolean that represents whether the underlying node VMs are spot.
	// See the [official documentation](https://cloud.google.com/kubernetes-engine/docs/concepts/spot-vms)
	// for more information. Defaults to false.
	Spot pulumi.BoolPtrInput `pulumi:"spot"`
	// The list of instance tags applied to all nodes. Tags are used to identify
	// valid sources or targets for network firewalls.
	Tags pulumi.StringArrayInput `pulumi:"tags"`
	// A list of [Kubernetes taints](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
	// to apply to nodes. GKE's API can only set this field on cluster creation.
	// However, GKE will add taints to your nodes if you enable certain features such
	// as GPUs. If this field is set, any diffs on this field will cause the provider to
	// recreate the underlying resource. Taint values can be updated safely in
	// Kubernetes (eg. through `kubectl`), and it's recommended that you do not use
	// this field to manage taints. If you do, `lifecycle.ignore_changes` is
	// recommended. Structure is documented below.
	Taints ClusterNodePoolNodeConfigTaintArrayInput `pulumi:"taints"`
	// Metadata configuration to expose to workloads on the node pool.
	// Structure is documented below.
	WorkloadMetadataConfig ClusterNodePoolNodeConfigWorkloadMetadataConfigPtrInput `pulumi:"workloadMetadataConfig"`
}

func (ClusterNodePoolNodeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfig)(nil)).Elem()
}

func (i ClusterNodePoolNodeConfigArgs) ToClusterNodePoolNodeConfigOutput() ClusterNodePoolNodeConfigOutput {
	return i.ToClusterNodePoolNodeConfigOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigArgs) ToClusterNodePoolNodeConfigOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigOutput)
}

func (i ClusterNodePoolNodeConfigArgs) ToClusterNodePoolNodeConfigPtrOutput() ClusterNodePoolNodeConfigPtrOutput {
	return i.ToClusterNodePoolNodeConfigPtrOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigArgs) ToClusterNodePoolNodeConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigOutput).ToClusterNodePoolNodeConfigPtrOutputWithContext(ctx)
}

// ClusterNodePoolNodeConfigPtrInput is an input type that accepts ClusterNodePoolNodeConfigArgs, ClusterNodePoolNodeConfigPtr and ClusterNodePoolNodeConfigPtrOutput values.
// You can construct a concrete instance of `ClusterNodePoolNodeConfigPtrInput` via:
//
//	        ClusterNodePoolNodeConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterNodePoolNodeConfigPtrInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigPtrOutput() ClusterNodePoolNodeConfigPtrOutput
	ToClusterNodePoolNodeConfigPtrOutputWithContext(context.Context) ClusterNodePoolNodeConfigPtrOutput
}

type clusterNodePoolNodeConfigPtrType ClusterNodePoolNodeConfigArgs

func ClusterNodePoolNodeConfigPtr(v *ClusterNodePoolNodeConfigArgs) ClusterNodePoolNodeConfigPtrInput {
	return (*clusterNodePoolNodeConfigPtrType)(v)
}

func (*clusterNodePoolNodeConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolNodeConfig)(nil)).Elem()
}

func (i *clusterNodePoolNodeConfigPtrType) ToClusterNodePoolNodeConfigPtrOutput() ClusterNodePoolNodeConfigPtrOutput {
	return i.ToClusterNodePoolNodeConfigPtrOutputWithContext(context.Background())
}

func (i *clusterNodePoolNodeConfigPtrType) ToClusterNodePoolNodeConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigPtrOutput)
}

type ClusterNodePoolNodeConfigOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfig)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigOutput) ToClusterNodePoolNodeConfigOutput() ClusterNodePoolNodeConfigOutput {
	return o
}

func (o ClusterNodePoolNodeConfigOutput) ToClusterNodePoolNodeConfigOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigOutput {
	return o
}

func (o ClusterNodePoolNodeConfigOutput) ToClusterNodePoolNodeConfigPtrOutput() ClusterNodePoolNodeConfigPtrOutput {
	return o.ToClusterNodePoolNodeConfigPtrOutputWithContext(context.Background())
}

func (o ClusterNodePoolNodeConfigOutput) ToClusterNodePoolNodeConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterNodePoolNodeConfig) *ClusterNodePoolNodeConfig {
		return &v
	}).(ClusterNodePoolNodeConfigPtrOutput)
}

// Specifies options for controlling
// advanced machine features. Structure is documented below.
func (o ClusterNodePoolNodeConfigOutput) AdvancedMachineFeatures() ClusterNodePoolNodeConfigAdvancedMachineFeaturesPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfig) *ClusterNodePoolNodeConfigAdvancedMachineFeatures {
		return v.AdvancedMachineFeatures
	}).(ClusterNodePoolNodeConfigAdvancedMachineFeaturesPtrOutput)
}

// The Customer Managed Encryption Key used to encrypt the boot disk attached to each node in the node pool. This should be of the form projects/[KEY_PROJECT_ID]/locations/[LOCATION]/keyRings/[RING_NAME]/cryptoKeys/[KEY_NAME]. For more information about protecting resources with Cloud KMS Keys please see: <https://cloud.google.com/compute/docs/disks/customer-managed-encryption>
func (o ClusterNodePoolNodeConfigOutput) BootDiskKmsKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfig) *string { return v.BootDiskKmsKey }).(pulumi.StringPtrOutput)
}

// Configuration for [Confidential Nodes](https://cloud.google.com/kubernetes-engine/docs/how-to/confidential-gke-nodes) feature. Structure is documented below documented below.
func (o ClusterNodePoolNodeConfigOutput) ConfidentialNodes() ClusterNodePoolNodeConfigConfidentialNodesPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfig) *ClusterNodePoolNodeConfigConfidentialNodes {
		return v.ConfidentialNodes
	}).(ClusterNodePoolNodeConfigConfidentialNodesPtrOutput)
}

// Size of the disk attached to each node, specified
// in GB. The smallest allowed disk size is 10GB. Defaults to 100GB.
func (o ClusterNodePoolNodeConfigOutput) DiskSizeGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfig) *int { return v.DiskSizeGb }).(pulumi.IntPtrOutput)
}

// Type of the disk attached to each node
// (e.g. 'pd-standard', 'pd-balanced' or 'pd-ssd'). If unspecified, the default disk type is 'pd-standard'
func (o ClusterNodePoolNodeConfigOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfig) *string { return v.DiskType }).(pulumi.StringPtrOutput)
}

// List of kubernetes taints applied to each node. Structure is documented above.
func (o ClusterNodePoolNodeConfigOutput) EffectiveTaints() ClusterNodePoolNodeConfigEffectiveTaintArrayOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfig) []ClusterNodePoolNodeConfigEffectiveTaint { return v.EffectiveTaints }).(ClusterNodePoolNodeConfigEffectiveTaintArrayOutput)
}

// Enabling Confidential Storage will create boot disk with confidential mode. It is disabled by default.
func (o ClusterNodePoolNodeConfigOutput) EnableConfidentialStorage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfig) *bool { return v.EnableConfidentialStorage }).(pulumi.BoolPtrOutput)
}

// Parameters for the ephemeral storage filesystem. If unspecified, ephemeral storage is backed by the boot disk. Structure is documented below.
func (o ClusterNodePoolNodeConfigOutput) EphemeralStorageConfig() ClusterNodePoolNodeConfigEphemeralStorageConfigPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfig) *ClusterNodePoolNodeConfigEphemeralStorageConfig {
		return v.EphemeralStorageConfig
	}).(ClusterNodePoolNodeConfigEphemeralStorageConfigPtrOutput)
}

// Parameters for the ephemeral storage filesystem. If unspecified, ephemeral storage is backed by the boot disk. Structure is documented below.
func (o ClusterNodePoolNodeConfigOutput) EphemeralStorageLocalSsdConfig() ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfig) *ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfig {
		return v.EphemeralStorageLocalSsdConfig
	}).(ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrOutput)
}

// Parameters for the NCCL Fast Socket feature. If unspecified, NCCL Fast Socket will not be enabled on the node pool.
// Node Pool must enable gvnic.
// GKE version 1.25.2-gke.1700 or later.
// Structure is documented below.
func (o ClusterNodePoolNodeConfigOutput) FastSocket() ClusterNodePoolNodeConfigFastSocketPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfig) *ClusterNodePoolNodeConfigFastSocket { return v.FastSocket }).(ClusterNodePoolNodeConfigFastSocketPtrOutput)
}

// Parameters for the Google Container Filesystem (GCFS).
// If unspecified, GCFS will not be enabled on the node pool. When enabling this feature you must specify `imageType = "COS_CONTAINERD"` and `nodeVersion` from GKE versions 1.19 or later to use it.
// For GKE versions 1.19, 1.20, and 1.21, the recommended minimum `nodeVersion` would be 1.19.15-gke.1300, 1.20.11-gke.1300, and 1.21.5-gke.1300 respectively.
// A `machineType` that has more than 16 GiB of memory is also recommended.
// GCFS must be enabled in order to use [image streaming](https://cloud.google.com/kubernetes-engine/docs/how-to/image-streaming).
// Structure is documented below.
func (o ClusterNodePoolNodeConfigOutput) GcfsConfig() ClusterNodePoolNodeConfigGcfsConfigPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfig) *ClusterNodePoolNodeConfigGcfsConfig { return v.GcfsConfig }).(ClusterNodePoolNodeConfigGcfsConfigPtrOutput)
}

// List of the type and count of accelerator cards attached to the instance.
// Structure documented below.
func (o ClusterNodePoolNodeConfigOutput) GuestAccelerators() ClusterNodePoolNodeConfigGuestAcceleratorArrayOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfig) []ClusterNodePoolNodeConfigGuestAccelerator {
		return v.GuestAccelerators
	}).(ClusterNodePoolNodeConfigGuestAcceleratorArrayOutput)
}

// Google Virtual NIC (gVNIC) is a virtual network interface.
// Installing the gVNIC driver allows for more efficient traffic transmission across the Google network infrastructure.
// gVNIC is an alternative to the virtIO-based ethernet driver. GKE nodes must use a Container-Optimized OS node image.
// GKE node version 1.15.11-gke.15 or later
// Structure is documented below.
func (o ClusterNodePoolNodeConfigOutput) Gvnic() ClusterNodePoolNodeConfigGvnicPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfig) *ClusterNodePoolNodeConfigGvnic { return v.Gvnic }).(ClusterNodePoolNodeConfigGvnicPtrOutput)
}

// The maintenance policy for the hosts on which the GKE VMs run on.
func (o ClusterNodePoolNodeConfigOutput) HostMaintenancePolicy() ClusterNodePoolNodeConfigHostMaintenancePolicyPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfig) *ClusterNodePoolNodeConfigHostMaintenancePolicy {
		return v.HostMaintenancePolicy
	}).(ClusterNodePoolNodeConfigHostMaintenancePolicyPtrOutput)
}

// The image type to use for this node. Note that changing the image type
// will delete and recreate all nodes in the node pool.
func (o ClusterNodePoolNodeConfigOutput) ImageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfig) *string { return v.ImageType }).(pulumi.StringPtrOutput)
}

// Kubelet configuration, currently supported attributes can be found [here](https://cloud.google.com/sdk/gcloud/reference/beta/container/node-pools/create#--system-config-from-file).
// Structure is documented below.
func (o ClusterNodePoolNodeConfigOutput) KubeletConfig() ClusterNodePoolNodeConfigKubeletConfigPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfig) *ClusterNodePoolNodeConfigKubeletConfig { return v.KubeletConfig }).(ClusterNodePoolNodeConfigKubeletConfigPtrOutput)
}

// The Kubernetes labels (key/value pairs) to be applied to each node. The kubernetes.io/ and k8s.io/ prefixes are
// reserved by Kubernetes Core components and cannot be specified.
func (o ClusterNodePoolNodeConfigOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfig) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// Parameters that can be configured on Linux nodes. Structure is documented below.
func (o ClusterNodePoolNodeConfigOutput) LinuxNodeConfig() ClusterNodePoolNodeConfigLinuxNodeConfigPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfig) *ClusterNodePoolNodeConfigLinuxNodeConfig { return v.LinuxNodeConfig }).(ClusterNodePoolNodeConfigLinuxNodeConfigPtrOutput)
}

// Parameters for the local NVMe SSDs. Structure is documented below.
func (o ClusterNodePoolNodeConfigOutput) LocalNvmeSsdBlockConfig() ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfig) *ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfig {
		return v.LocalNvmeSsdBlockConfig
	}).(ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigPtrOutput)
}

// The amount of local SSD disks that will be
// attached to each cluster node. Defaults to 0.
func (o ClusterNodePoolNodeConfigOutput) LocalSsdCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfig) *int { return v.LocalSsdCount }).(pulumi.IntPtrOutput)
}

// Parameter for specifying the type of logging agent used in a node pool. This will override any cluster-wide default value. Valid values include DEFAULT and MAX_THROUGHPUT. See [Increasing logging agent throughput](https://cloud.google.com/stackdriver/docs/solutions/gke/managing-logs#throughput) for more information.
func (o ClusterNodePoolNodeConfigOutput) LoggingVariant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfig) *string { return v.LoggingVariant }).(pulumi.StringPtrOutput)
}

// The name of a Google Compute Engine machine type.
// Defaults to `e2-medium`. To create a custom machine type, value should be set as specified
// [here](https://cloud.google.com/compute/docs/reference/latest/instances#machineType).
func (o ClusterNodePoolNodeConfigOutput) MachineType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfig) *string { return v.MachineType }).(pulumi.StringPtrOutput)
}

// The metadata key/value pairs assigned to instances in
// the cluster. From GKE `1.12` onwards, `disable-legacy-endpoints` is set to
// `true` by the API; if `metadata` is set but that default value is not
// included, the provider will attempt to unset the value. To avoid this, set the
// value in your config.
func (o ClusterNodePoolNodeConfigOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfig) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

// Minimum CPU platform to be used by this instance.
// The instance may be scheduled on the specified or newer CPU platform. Applicable
// values are the friendly names of CPU platforms, such as `Intel Haswell`. See the
// [official documentation](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
// for more information.
func (o ClusterNodePoolNodeConfigOutput) MinCpuPlatform() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfig) *string { return v.MinCpuPlatform }).(pulumi.StringPtrOutput)
}

// Setting this field will assign instances of this pool to run on the specified node group. This is useful for running workloads on [sole tenant nodes](https://cloud.google.com/compute/docs/nodes/sole-tenant-nodes).
func (o ClusterNodePoolNodeConfigOutput) NodeGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfig) *string { return v.NodeGroup }).(pulumi.StringPtrOutput)
}

// The set of Google API scopes to be made available
// on all of the node VMs under the "default" service account.
// Use the "https://www.googleapis.com/auth/cloud-platform" scope to grant access to all APIs. It is recommended that you set `serviceAccount` to a non-default service account and grant IAM roles to that service account for only the resources that it needs.
//
// See the [official documentation](https://cloud.google.com/kubernetes-engine/docs/how-to/access-scopes) for information on migrating off of legacy access scopes.
func (o ClusterNodePoolNodeConfigOutput) OauthScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfig) []string { return v.OauthScopes }).(pulumi.StringArrayOutput)
}

// A boolean that represents whether or not the underlying node VMs
// are preemptible. See the [official documentation](https://cloud.google.com/container-engine/docs/preemptible-vm)
// for more information. Defaults to false.
func (o ClusterNodePoolNodeConfigOutput) Preemptible() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfig) *bool { return v.Preemptible }).(pulumi.BoolPtrOutput)
}

// The configuration of the desired reservation which instances could take capacity from. Structure is documented below.
func (o ClusterNodePoolNodeConfigOutput) ReservationAffinity() ClusterNodePoolNodeConfigReservationAffinityPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfig) *ClusterNodePoolNodeConfigReservationAffinity {
		return v.ReservationAffinity
	}).(ClusterNodePoolNodeConfigReservationAffinityPtrOutput)
}

// The GCP labels (key/value pairs) to be applied to each node. Refer [here](https://cloud.google.com/kubernetes-engine/docs/how-to/creating-managing-labels)
// for how these labels are applied to clusters, node pools and nodes.
func (o ClusterNodePoolNodeConfigOutput) ResourceLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfig) map[string]string { return v.ResourceLabels }).(pulumi.StringMapOutput)
}

// A map of resource manager tag keys and values to be attached to the nodes for managing Compute Engine firewalls using Network Firewall Policies. Tags must be according to specifications found [here](https://cloud.google.com/vpc/docs/tags-firewalls-overview#specifications). A maximum of 5 tag key-value pairs can be specified. Existing tags will be replaced with new values. Tags must be in one of the following formats ([KEY]=[VALUE]) 1. `tagKeys/{tag_key_id}=tagValues/{tag_value_id}` 2. `{org_id}/{tag_key_name}={tag_value_name}` 3. `{project_id}/{tag_key_name}={tag_value_name}`.
func (o ClusterNodePoolNodeConfigOutput) ResourceManagerTags() pulumi.MapOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfig) map[string]interface{} { return v.ResourceManagerTags }).(pulumi.MapOutput)
}

// Sandbox configuration for this node.
func (o ClusterNodePoolNodeConfigOutput) SandboxConfig() ClusterNodePoolNodeConfigSandboxConfigPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfig) *ClusterNodePoolNodeConfigSandboxConfig { return v.SandboxConfig }).(ClusterNodePoolNodeConfigSandboxConfigPtrOutput)
}

// Parameters for secondary boot disks to preload container images and data on new nodes. Structure is documented below. `gcfsConfig` must be `enabled=true` for this feature to work. `minMasterVersion` must also be set to use GKE 1.28.3-gke.106700 or later versions.
func (o ClusterNodePoolNodeConfigOutput) SecondaryBootDisks() ClusterNodePoolNodeConfigSecondaryBootDiskArrayOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfig) []ClusterNodePoolNodeConfigSecondaryBootDisk {
		return v.SecondaryBootDisks
	}).(ClusterNodePoolNodeConfigSecondaryBootDiskArrayOutput)
}

// The service account to be used by the Node VMs.
// If not specified, the "default" service account is used.
func (o ClusterNodePoolNodeConfigOutput) ServiceAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfig) *string { return v.ServiceAccount }).(pulumi.StringPtrOutput)
}

// Shielded Instance options. Structure is documented below.
func (o ClusterNodePoolNodeConfigOutput) ShieldedInstanceConfig() ClusterNodePoolNodeConfigShieldedInstanceConfigPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfig) *ClusterNodePoolNodeConfigShieldedInstanceConfig {
		return v.ShieldedInstanceConfig
	}).(ClusterNodePoolNodeConfigShieldedInstanceConfigPtrOutput)
}

// Allows specifying multiple [node affinities](https://cloud.google.com/compute/docs/nodes/sole-tenant-nodes#node_affinity_and_anti-affinity) useful for running workloads on [sole tenant nodes](https://cloud.google.com/kubernetes-engine/docs/how-to/sole-tenancy). `nodeAffinity` structure is documented below.
func (o ClusterNodePoolNodeConfigOutput) SoleTenantConfig() ClusterNodePoolNodeConfigSoleTenantConfigPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfig) *ClusterNodePoolNodeConfigSoleTenantConfig {
		return v.SoleTenantConfig
	}).(ClusterNodePoolNodeConfigSoleTenantConfigPtrOutput)
}

// A boolean that represents whether the underlying node VMs are spot.
// See the [official documentation](https://cloud.google.com/kubernetes-engine/docs/concepts/spot-vms)
// for more information. Defaults to false.
func (o ClusterNodePoolNodeConfigOutput) Spot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfig) *bool { return v.Spot }).(pulumi.BoolPtrOutput)
}

// The list of instance tags applied to all nodes. Tags are used to identify
// valid sources or targets for network firewalls.
func (o ClusterNodePoolNodeConfigOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfig) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// A list of [Kubernetes taints](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
// to apply to nodes. GKE's API can only set this field on cluster creation.
// However, GKE will add taints to your nodes if you enable certain features such
// as GPUs. If this field is set, any diffs on this field will cause the provider to
// recreate the underlying resource. Taint values can be updated safely in
// Kubernetes (eg. through `kubectl`), and it's recommended that you do not use
// this field to manage taints. If you do, `lifecycle.ignore_changes` is
// recommended. Structure is documented below.
func (o ClusterNodePoolNodeConfigOutput) Taints() ClusterNodePoolNodeConfigTaintArrayOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfig) []ClusterNodePoolNodeConfigTaint { return v.Taints }).(ClusterNodePoolNodeConfigTaintArrayOutput)
}

// Metadata configuration to expose to workloads on the node pool.
// Structure is documented below.
func (o ClusterNodePoolNodeConfigOutput) WorkloadMetadataConfig() ClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfig) *ClusterNodePoolNodeConfigWorkloadMetadataConfig {
		return v.WorkloadMetadataConfig
	}).(ClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutput)
}

type ClusterNodePoolNodeConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolNodeConfig)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigPtrOutput) ToClusterNodePoolNodeConfigPtrOutput() ClusterNodePoolNodeConfigPtrOutput {
	return o
}

func (o ClusterNodePoolNodeConfigPtrOutput) ToClusterNodePoolNodeConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigPtrOutput {
	return o
}

func (o ClusterNodePoolNodeConfigPtrOutput) Elem() ClusterNodePoolNodeConfigOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfig) ClusterNodePoolNodeConfig {
		if v != nil {
			return *v
		}
		var ret ClusterNodePoolNodeConfig
		return ret
	}).(ClusterNodePoolNodeConfigOutput)
}

// Specifies options for controlling
// advanced machine features. Structure is documented below.
func (o ClusterNodePoolNodeConfigPtrOutput) AdvancedMachineFeatures() ClusterNodePoolNodeConfigAdvancedMachineFeaturesPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfig) *ClusterNodePoolNodeConfigAdvancedMachineFeatures {
		if v == nil {
			return nil
		}
		return v.AdvancedMachineFeatures
	}).(ClusterNodePoolNodeConfigAdvancedMachineFeaturesPtrOutput)
}

// The Customer Managed Encryption Key used to encrypt the boot disk attached to each node in the node pool. This should be of the form projects/[KEY_PROJECT_ID]/locations/[LOCATION]/keyRings/[RING_NAME]/cryptoKeys/[KEY_NAME]. For more information about protecting resources with Cloud KMS Keys please see: <https://cloud.google.com/compute/docs/disks/customer-managed-encryption>
func (o ClusterNodePoolNodeConfigPtrOutput) BootDiskKmsKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfig) *string {
		if v == nil {
			return nil
		}
		return v.BootDiskKmsKey
	}).(pulumi.StringPtrOutput)
}

// Configuration for [Confidential Nodes](https://cloud.google.com/kubernetes-engine/docs/how-to/confidential-gke-nodes) feature. Structure is documented below documented below.
func (o ClusterNodePoolNodeConfigPtrOutput) ConfidentialNodes() ClusterNodePoolNodeConfigConfidentialNodesPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfig) *ClusterNodePoolNodeConfigConfidentialNodes {
		if v == nil {
			return nil
		}
		return v.ConfidentialNodes
	}).(ClusterNodePoolNodeConfigConfidentialNodesPtrOutput)
}

// Size of the disk attached to each node, specified
// in GB. The smallest allowed disk size is 10GB. Defaults to 100GB.
func (o ClusterNodePoolNodeConfigPtrOutput) DiskSizeGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfig) *int {
		if v == nil {
			return nil
		}
		return v.DiskSizeGb
	}).(pulumi.IntPtrOutput)
}

// Type of the disk attached to each node
// (e.g. 'pd-standard', 'pd-balanced' or 'pd-ssd'). If unspecified, the default disk type is 'pd-standard'
func (o ClusterNodePoolNodeConfigPtrOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfig) *string {
		if v == nil {
			return nil
		}
		return v.DiskType
	}).(pulumi.StringPtrOutput)
}

// List of kubernetes taints applied to each node. Structure is documented above.
func (o ClusterNodePoolNodeConfigPtrOutput) EffectiveTaints() ClusterNodePoolNodeConfigEffectiveTaintArrayOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfig) []ClusterNodePoolNodeConfigEffectiveTaint {
		if v == nil {
			return nil
		}
		return v.EffectiveTaints
	}).(ClusterNodePoolNodeConfigEffectiveTaintArrayOutput)
}

// Enabling Confidential Storage will create boot disk with confidential mode. It is disabled by default.
func (o ClusterNodePoolNodeConfigPtrOutput) EnableConfidentialStorage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EnableConfidentialStorage
	}).(pulumi.BoolPtrOutput)
}

// Parameters for the ephemeral storage filesystem. If unspecified, ephemeral storage is backed by the boot disk. Structure is documented below.
func (o ClusterNodePoolNodeConfigPtrOutput) EphemeralStorageConfig() ClusterNodePoolNodeConfigEphemeralStorageConfigPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfig) *ClusterNodePoolNodeConfigEphemeralStorageConfig {
		if v == nil {
			return nil
		}
		return v.EphemeralStorageConfig
	}).(ClusterNodePoolNodeConfigEphemeralStorageConfigPtrOutput)
}

// Parameters for the ephemeral storage filesystem. If unspecified, ephemeral storage is backed by the boot disk. Structure is documented below.
func (o ClusterNodePoolNodeConfigPtrOutput) EphemeralStorageLocalSsdConfig() ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfig) *ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfig {
		if v == nil {
			return nil
		}
		return v.EphemeralStorageLocalSsdConfig
	}).(ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrOutput)
}

// Parameters for the NCCL Fast Socket feature. If unspecified, NCCL Fast Socket will not be enabled on the node pool.
// Node Pool must enable gvnic.
// GKE version 1.25.2-gke.1700 or later.
// Structure is documented below.
func (o ClusterNodePoolNodeConfigPtrOutput) FastSocket() ClusterNodePoolNodeConfigFastSocketPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfig) *ClusterNodePoolNodeConfigFastSocket {
		if v == nil {
			return nil
		}
		return v.FastSocket
	}).(ClusterNodePoolNodeConfigFastSocketPtrOutput)
}

// Parameters for the Google Container Filesystem (GCFS).
// If unspecified, GCFS will not be enabled on the node pool. When enabling this feature you must specify `imageType = "COS_CONTAINERD"` and `nodeVersion` from GKE versions 1.19 or later to use it.
// For GKE versions 1.19, 1.20, and 1.21, the recommended minimum `nodeVersion` would be 1.19.15-gke.1300, 1.20.11-gke.1300, and 1.21.5-gke.1300 respectively.
// A `machineType` that has more than 16 GiB of memory is also recommended.
// GCFS must be enabled in order to use [image streaming](https://cloud.google.com/kubernetes-engine/docs/how-to/image-streaming).
// Structure is documented below.
func (o ClusterNodePoolNodeConfigPtrOutput) GcfsConfig() ClusterNodePoolNodeConfigGcfsConfigPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfig) *ClusterNodePoolNodeConfigGcfsConfig {
		if v == nil {
			return nil
		}
		return v.GcfsConfig
	}).(ClusterNodePoolNodeConfigGcfsConfigPtrOutput)
}

// List of the type and count of accelerator cards attached to the instance.
// Structure documented below.
func (o ClusterNodePoolNodeConfigPtrOutput) GuestAccelerators() ClusterNodePoolNodeConfigGuestAcceleratorArrayOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfig) []ClusterNodePoolNodeConfigGuestAccelerator {
		if v == nil {
			return nil
		}
		return v.GuestAccelerators
	}).(ClusterNodePoolNodeConfigGuestAcceleratorArrayOutput)
}

// Google Virtual NIC (gVNIC) is a virtual network interface.
// Installing the gVNIC driver allows for more efficient traffic transmission across the Google network infrastructure.
// gVNIC is an alternative to the virtIO-based ethernet driver. GKE nodes must use a Container-Optimized OS node image.
// GKE node version 1.15.11-gke.15 or later
// Structure is documented below.
func (o ClusterNodePoolNodeConfigPtrOutput) Gvnic() ClusterNodePoolNodeConfigGvnicPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfig) *ClusterNodePoolNodeConfigGvnic {
		if v == nil {
			return nil
		}
		return v.Gvnic
	}).(ClusterNodePoolNodeConfigGvnicPtrOutput)
}

// The maintenance policy for the hosts on which the GKE VMs run on.
func (o ClusterNodePoolNodeConfigPtrOutput) HostMaintenancePolicy() ClusterNodePoolNodeConfigHostMaintenancePolicyPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfig) *ClusterNodePoolNodeConfigHostMaintenancePolicy {
		if v == nil {
			return nil
		}
		return v.HostMaintenancePolicy
	}).(ClusterNodePoolNodeConfigHostMaintenancePolicyPtrOutput)
}

// The image type to use for this node. Note that changing the image type
// will delete and recreate all nodes in the node pool.
func (o ClusterNodePoolNodeConfigPtrOutput) ImageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfig) *string {
		if v == nil {
			return nil
		}
		return v.ImageType
	}).(pulumi.StringPtrOutput)
}

// Kubelet configuration, currently supported attributes can be found [here](https://cloud.google.com/sdk/gcloud/reference/beta/container/node-pools/create#--system-config-from-file).
// Structure is documented below.
func (o ClusterNodePoolNodeConfigPtrOutput) KubeletConfig() ClusterNodePoolNodeConfigKubeletConfigPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfig) *ClusterNodePoolNodeConfigKubeletConfig {
		if v == nil {
			return nil
		}
		return v.KubeletConfig
	}).(ClusterNodePoolNodeConfigKubeletConfigPtrOutput)
}

// The Kubernetes labels (key/value pairs) to be applied to each node. The kubernetes.io/ and k8s.io/ prefixes are
// reserved by Kubernetes Core components and cannot be specified.
func (o ClusterNodePoolNodeConfigPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfig) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// Parameters that can be configured on Linux nodes. Structure is documented below.
func (o ClusterNodePoolNodeConfigPtrOutput) LinuxNodeConfig() ClusterNodePoolNodeConfigLinuxNodeConfigPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfig) *ClusterNodePoolNodeConfigLinuxNodeConfig {
		if v == nil {
			return nil
		}
		return v.LinuxNodeConfig
	}).(ClusterNodePoolNodeConfigLinuxNodeConfigPtrOutput)
}

// Parameters for the local NVMe SSDs. Structure is documented below.
func (o ClusterNodePoolNodeConfigPtrOutput) LocalNvmeSsdBlockConfig() ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfig) *ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfig {
		if v == nil {
			return nil
		}
		return v.LocalNvmeSsdBlockConfig
	}).(ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigPtrOutput)
}

// The amount of local SSD disks that will be
// attached to each cluster node. Defaults to 0.
func (o ClusterNodePoolNodeConfigPtrOutput) LocalSsdCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfig) *int {
		if v == nil {
			return nil
		}
		return v.LocalSsdCount
	}).(pulumi.IntPtrOutput)
}

// Parameter for specifying the type of logging agent used in a node pool. This will override any cluster-wide default value. Valid values include DEFAULT and MAX_THROUGHPUT. See [Increasing logging agent throughput](https://cloud.google.com/stackdriver/docs/solutions/gke/managing-logs#throughput) for more information.
func (o ClusterNodePoolNodeConfigPtrOutput) LoggingVariant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfig) *string {
		if v == nil {
			return nil
		}
		return v.LoggingVariant
	}).(pulumi.StringPtrOutput)
}

// The name of a Google Compute Engine machine type.
// Defaults to `e2-medium`. To create a custom machine type, value should be set as specified
// [here](https://cloud.google.com/compute/docs/reference/latest/instances#machineType).
func (o ClusterNodePoolNodeConfigPtrOutput) MachineType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfig) *string {
		if v == nil {
			return nil
		}
		return v.MachineType
	}).(pulumi.StringPtrOutput)
}

// The metadata key/value pairs assigned to instances in
// the cluster. From GKE `1.12` onwards, `disable-legacy-endpoints` is set to
// `true` by the API; if `metadata` is set but that default value is not
// included, the provider will attempt to unset the value. To avoid this, set the
// value in your config.
func (o ClusterNodePoolNodeConfigPtrOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfig) map[string]string {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(pulumi.StringMapOutput)
}

// Minimum CPU platform to be used by this instance.
// The instance may be scheduled on the specified or newer CPU platform. Applicable
// values are the friendly names of CPU platforms, such as `Intel Haswell`. See the
// [official documentation](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
// for more information.
func (o ClusterNodePoolNodeConfigPtrOutput) MinCpuPlatform() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfig) *string {
		if v == nil {
			return nil
		}
		return v.MinCpuPlatform
	}).(pulumi.StringPtrOutput)
}

// Setting this field will assign instances of this pool to run on the specified node group. This is useful for running workloads on [sole tenant nodes](https://cloud.google.com/compute/docs/nodes/sole-tenant-nodes).
func (o ClusterNodePoolNodeConfigPtrOutput) NodeGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfig) *string {
		if v == nil {
			return nil
		}
		return v.NodeGroup
	}).(pulumi.StringPtrOutput)
}

// The set of Google API scopes to be made available
// on all of the node VMs under the "default" service account.
// Use the "https://www.googleapis.com/auth/cloud-platform" scope to grant access to all APIs. It is recommended that you set `serviceAccount` to a non-default service account and grant IAM roles to that service account for only the resources that it needs.
//
// See the [official documentation](https://cloud.google.com/kubernetes-engine/docs/how-to/access-scopes) for information on migrating off of legacy access scopes.
func (o ClusterNodePoolNodeConfigPtrOutput) OauthScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfig) []string {
		if v == nil {
			return nil
		}
		return v.OauthScopes
	}).(pulumi.StringArrayOutput)
}

// A boolean that represents whether or not the underlying node VMs
// are preemptible. See the [official documentation](https://cloud.google.com/container-engine/docs/preemptible-vm)
// for more information. Defaults to false.
func (o ClusterNodePoolNodeConfigPtrOutput) Preemptible() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Preemptible
	}).(pulumi.BoolPtrOutput)
}

// The configuration of the desired reservation which instances could take capacity from. Structure is documented below.
func (o ClusterNodePoolNodeConfigPtrOutput) ReservationAffinity() ClusterNodePoolNodeConfigReservationAffinityPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfig) *ClusterNodePoolNodeConfigReservationAffinity {
		if v == nil {
			return nil
		}
		return v.ReservationAffinity
	}).(ClusterNodePoolNodeConfigReservationAffinityPtrOutput)
}

// The GCP labels (key/value pairs) to be applied to each node. Refer [here](https://cloud.google.com/kubernetes-engine/docs/how-to/creating-managing-labels)
// for how these labels are applied to clusters, node pools and nodes.
func (o ClusterNodePoolNodeConfigPtrOutput) ResourceLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfig) map[string]string {
		if v == nil {
			return nil
		}
		return v.ResourceLabels
	}).(pulumi.StringMapOutput)
}

// A map of resource manager tag keys and values to be attached to the nodes for managing Compute Engine firewalls using Network Firewall Policies. Tags must be according to specifications found [here](https://cloud.google.com/vpc/docs/tags-firewalls-overview#specifications). A maximum of 5 tag key-value pairs can be specified. Existing tags will be replaced with new values. Tags must be in one of the following formats ([KEY]=[VALUE]) 1. `tagKeys/{tag_key_id}=tagValues/{tag_value_id}` 2. `{org_id}/{tag_key_name}={tag_value_name}` 3. `{project_id}/{tag_key_name}={tag_value_name}`.
func (o ClusterNodePoolNodeConfigPtrOutput) ResourceManagerTags() pulumi.MapOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfig) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.ResourceManagerTags
	}).(pulumi.MapOutput)
}

// Sandbox configuration for this node.
func (o ClusterNodePoolNodeConfigPtrOutput) SandboxConfig() ClusterNodePoolNodeConfigSandboxConfigPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfig) *ClusterNodePoolNodeConfigSandboxConfig {
		if v == nil {
			return nil
		}
		return v.SandboxConfig
	}).(ClusterNodePoolNodeConfigSandboxConfigPtrOutput)
}

// Parameters for secondary boot disks to preload container images and data on new nodes. Structure is documented below. `gcfsConfig` must be `enabled=true` for this feature to work. `minMasterVersion` must also be set to use GKE 1.28.3-gke.106700 or later versions.
func (o ClusterNodePoolNodeConfigPtrOutput) SecondaryBootDisks() ClusterNodePoolNodeConfigSecondaryBootDiskArrayOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfig) []ClusterNodePoolNodeConfigSecondaryBootDisk {
		if v == nil {
			return nil
		}
		return v.SecondaryBootDisks
	}).(ClusterNodePoolNodeConfigSecondaryBootDiskArrayOutput)
}

// The service account to be used by the Node VMs.
// If not specified, the "default" service account is used.
func (o ClusterNodePoolNodeConfigPtrOutput) ServiceAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfig) *string {
		if v == nil {
			return nil
		}
		return v.ServiceAccount
	}).(pulumi.StringPtrOutput)
}

// Shielded Instance options. Structure is documented below.
func (o ClusterNodePoolNodeConfigPtrOutput) ShieldedInstanceConfig() ClusterNodePoolNodeConfigShieldedInstanceConfigPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfig) *ClusterNodePoolNodeConfigShieldedInstanceConfig {
		if v == nil {
			return nil
		}
		return v.ShieldedInstanceConfig
	}).(ClusterNodePoolNodeConfigShieldedInstanceConfigPtrOutput)
}

// Allows specifying multiple [node affinities](https://cloud.google.com/compute/docs/nodes/sole-tenant-nodes#node_affinity_and_anti-affinity) useful for running workloads on [sole tenant nodes](https://cloud.google.com/kubernetes-engine/docs/how-to/sole-tenancy). `nodeAffinity` structure is documented below.
func (o ClusterNodePoolNodeConfigPtrOutput) SoleTenantConfig() ClusterNodePoolNodeConfigSoleTenantConfigPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfig) *ClusterNodePoolNodeConfigSoleTenantConfig {
		if v == nil {
			return nil
		}
		return v.SoleTenantConfig
	}).(ClusterNodePoolNodeConfigSoleTenantConfigPtrOutput)
}

// A boolean that represents whether the underlying node VMs are spot.
// See the [official documentation](https://cloud.google.com/kubernetes-engine/docs/concepts/spot-vms)
// for more information. Defaults to false.
func (o ClusterNodePoolNodeConfigPtrOutput) Spot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Spot
	}).(pulumi.BoolPtrOutput)
}

// The list of instance tags applied to all nodes. Tags are used to identify
// valid sources or targets for network firewalls.
func (o ClusterNodePoolNodeConfigPtrOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfig) []string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringArrayOutput)
}

// A list of [Kubernetes taints](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
// to apply to nodes. GKE's API can only set this field on cluster creation.
// However, GKE will add taints to your nodes if you enable certain features such
// as GPUs. If this field is set, any diffs on this field will cause the provider to
// recreate the underlying resource. Taint values can be updated safely in
// Kubernetes (eg. through `kubectl`), and it's recommended that you do not use
// this field to manage taints. If you do, `lifecycle.ignore_changes` is
// recommended. Structure is documented below.
func (o ClusterNodePoolNodeConfigPtrOutput) Taints() ClusterNodePoolNodeConfigTaintArrayOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfig) []ClusterNodePoolNodeConfigTaint {
		if v == nil {
			return nil
		}
		return v.Taints
	}).(ClusterNodePoolNodeConfigTaintArrayOutput)
}

// Metadata configuration to expose to workloads on the node pool.
// Structure is documented below.
func (o ClusterNodePoolNodeConfigPtrOutput) WorkloadMetadataConfig() ClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfig) *ClusterNodePoolNodeConfigWorkloadMetadataConfig {
		if v == nil {
			return nil
		}
		return v.WorkloadMetadataConfig
	}).(ClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutput)
}

type ClusterNodePoolNodeConfigAdvancedMachineFeatures struct {
	// Defines whether the instance should have nested virtualization enabled. Defaults to false.
	EnableNestedVirtualization *bool `pulumi:"enableNestedVirtualization"`
	// The number of threads per physical core. To disable simultaneous multithreading (SMT) set this to 1. If unset, the maximum number of threads supported per core by the underlying processor is assumed.
	ThreadsPerCore int `pulumi:"threadsPerCore"`
}

// ClusterNodePoolNodeConfigAdvancedMachineFeaturesInput is an input type that accepts ClusterNodePoolNodeConfigAdvancedMachineFeaturesArgs and ClusterNodePoolNodeConfigAdvancedMachineFeaturesOutput values.
// You can construct a concrete instance of `ClusterNodePoolNodeConfigAdvancedMachineFeaturesInput` via:
//
//	ClusterNodePoolNodeConfigAdvancedMachineFeaturesArgs{...}
type ClusterNodePoolNodeConfigAdvancedMachineFeaturesInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigAdvancedMachineFeaturesOutput() ClusterNodePoolNodeConfigAdvancedMachineFeaturesOutput
	ToClusterNodePoolNodeConfigAdvancedMachineFeaturesOutputWithContext(context.Context) ClusterNodePoolNodeConfigAdvancedMachineFeaturesOutput
}

type ClusterNodePoolNodeConfigAdvancedMachineFeaturesArgs struct {
	// Defines whether the instance should have nested virtualization enabled. Defaults to false.
	EnableNestedVirtualization pulumi.BoolPtrInput `pulumi:"enableNestedVirtualization"`
	// The number of threads per physical core. To disable simultaneous multithreading (SMT) set this to 1. If unset, the maximum number of threads supported per core by the underlying processor is assumed.
	ThreadsPerCore pulumi.IntInput `pulumi:"threadsPerCore"`
}

func (ClusterNodePoolNodeConfigAdvancedMachineFeaturesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfigAdvancedMachineFeatures)(nil)).Elem()
}

func (i ClusterNodePoolNodeConfigAdvancedMachineFeaturesArgs) ToClusterNodePoolNodeConfigAdvancedMachineFeaturesOutput() ClusterNodePoolNodeConfigAdvancedMachineFeaturesOutput {
	return i.ToClusterNodePoolNodeConfigAdvancedMachineFeaturesOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigAdvancedMachineFeaturesArgs) ToClusterNodePoolNodeConfigAdvancedMachineFeaturesOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigAdvancedMachineFeaturesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigAdvancedMachineFeaturesOutput)
}

func (i ClusterNodePoolNodeConfigAdvancedMachineFeaturesArgs) ToClusterNodePoolNodeConfigAdvancedMachineFeaturesPtrOutput() ClusterNodePoolNodeConfigAdvancedMachineFeaturesPtrOutput {
	return i.ToClusterNodePoolNodeConfigAdvancedMachineFeaturesPtrOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigAdvancedMachineFeaturesArgs) ToClusterNodePoolNodeConfigAdvancedMachineFeaturesPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigAdvancedMachineFeaturesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigAdvancedMachineFeaturesOutput).ToClusterNodePoolNodeConfigAdvancedMachineFeaturesPtrOutputWithContext(ctx)
}

// ClusterNodePoolNodeConfigAdvancedMachineFeaturesPtrInput is an input type that accepts ClusterNodePoolNodeConfigAdvancedMachineFeaturesArgs, ClusterNodePoolNodeConfigAdvancedMachineFeaturesPtr and ClusterNodePoolNodeConfigAdvancedMachineFeaturesPtrOutput values.
// You can construct a concrete instance of `ClusterNodePoolNodeConfigAdvancedMachineFeaturesPtrInput` via:
//
//	        ClusterNodePoolNodeConfigAdvancedMachineFeaturesArgs{...}
//
//	or:
//
//	        nil
type ClusterNodePoolNodeConfigAdvancedMachineFeaturesPtrInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigAdvancedMachineFeaturesPtrOutput() ClusterNodePoolNodeConfigAdvancedMachineFeaturesPtrOutput
	ToClusterNodePoolNodeConfigAdvancedMachineFeaturesPtrOutputWithContext(context.Context) ClusterNodePoolNodeConfigAdvancedMachineFeaturesPtrOutput
}

type clusterNodePoolNodeConfigAdvancedMachineFeaturesPtrType ClusterNodePoolNodeConfigAdvancedMachineFeaturesArgs

func ClusterNodePoolNodeConfigAdvancedMachineFeaturesPtr(v *ClusterNodePoolNodeConfigAdvancedMachineFeaturesArgs) ClusterNodePoolNodeConfigAdvancedMachineFeaturesPtrInput {
	return (*clusterNodePoolNodeConfigAdvancedMachineFeaturesPtrType)(v)
}

func (*clusterNodePoolNodeConfigAdvancedMachineFeaturesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolNodeConfigAdvancedMachineFeatures)(nil)).Elem()
}

func (i *clusterNodePoolNodeConfigAdvancedMachineFeaturesPtrType) ToClusterNodePoolNodeConfigAdvancedMachineFeaturesPtrOutput() ClusterNodePoolNodeConfigAdvancedMachineFeaturesPtrOutput {
	return i.ToClusterNodePoolNodeConfigAdvancedMachineFeaturesPtrOutputWithContext(context.Background())
}

func (i *clusterNodePoolNodeConfigAdvancedMachineFeaturesPtrType) ToClusterNodePoolNodeConfigAdvancedMachineFeaturesPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigAdvancedMachineFeaturesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigAdvancedMachineFeaturesPtrOutput)
}

type ClusterNodePoolNodeConfigAdvancedMachineFeaturesOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigAdvancedMachineFeaturesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfigAdvancedMachineFeatures)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigAdvancedMachineFeaturesOutput) ToClusterNodePoolNodeConfigAdvancedMachineFeaturesOutput() ClusterNodePoolNodeConfigAdvancedMachineFeaturesOutput {
	return o
}

func (o ClusterNodePoolNodeConfigAdvancedMachineFeaturesOutput) ToClusterNodePoolNodeConfigAdvancedMachineFeaturesOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigAdvancedMachineFeaturesOutput {
	return o
}

func (o ClusterNodePoolNodeConfigAdvancedMachineFeaturesOutput) ToClusterNodePoolNodeConfigAdvancedMachineFeaturesPtrOutput() ClusterNodePoolNodeConfigAdvancedMachineFeaturesPtrOutput {
	return o.ToClusterNodePoolNodeConfigAdvancedMachineFeaturesPtrOutputWithContext(context.Background())
}

func (o ClusterNodePoolNodeConfigAdvancedMachineFeaturesOutput) ToClusterNodePoolNodeConfigAdvancedMachineFeaturesPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigAdvancedMachineFeaturesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterNodePoolNodeConfigAdvancedMachineFeatures) *ClusterNodePoolNodeConfigAdvancedMachineFeatures {
		return &v
	}).(ClusterNodePoolNodeConfigAdvancedMachineFeaturesPtrOutput)
}

// Defines whether the instance should have nested virtualization enabled. Defaults to false.
func (o ClusterNodePoolNodeConfigAdvancedMachineFeaturesOutput) EnableNestedVirtualization() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigAdvancedMachineFeatures) *bool { return v.EnableNestedVirtualization }).(pulumi.BoolPtrOutput)
}

// The number of threads per physical core. To disable simultaneous multithreading (SMT) set this to 1. If unset, the maximum number of threads supported per core by the underlying processor is assumed.
func (o ClusterNodePoolNodeConfigAdvancedMachineFeaturesOutput) ThreadsPerCore() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigAdvancedMachineFeatures) int { return v.ThreadsPerCore }).(pulumi.IntOutput)
}

type ClusterNodePoolNodeConfigAdvancedMachineFeaturesPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigAdvancedMachineFeaturesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolNodeConfigAdvancedMachineFeatures)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigAdvancedMachineFeaturesPtrOutput) ToClusterNodePoolNodeConfigAdvancedMachineFeaturesPtrOutput() ClusterNodePoolNodeConfigAdvancedMachineFeaturesPtrOutput {
	return o
}

func (o ClusterNodePoolNodeConfigAdvancedMachineFeaturesPtrOutput) ToClusterNodePoolNodeConfigAdvancedMachineFeaturesPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigAdvancedMachineFeaturesPtrOutput {
	return o
}

func (o ClusterNodePoolNodeConfigAdvancedMachineFeaturesPtrOutput) Elem() ClusterNodePoolNodeConfigAdvancedMachineFeaturesOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfigAdvancedMachineFeatures) ClusterNodePoolNodeConfigAdvancedMachineFeatures {
		if v != nil {
			return *v
		}
		var ret ClusterNodePoolNodeConfigAdvancedMachineFeatures
		return ret
	}).(ClusterNodePoolNodeConfigAdvancedMachineFeaturesOutput)
}

// Defines whether the instance should have nested virtualization enabled. Defaults to false.
func (o ClusterNodePoolNodeConfigAdvancedMachineFeaturesPtrOutput) EnableNestedVirtualization() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfigAdvancedMachineFeatures) *bool {
		if v == nil {
			return nil
		}
		return v.EnableNestedVirtualization
	}).(pulumi.BoolPtrOutput)
}

// The number of threads per physical core. To disable simultaneous multithreading (SMT) set this to 1. If unset, the maximum number of threads supported per core by the underlying processor is assumed.
func (o ClusterNodePoolNodeConfigAdvancedMachineFeaturesPtrOutput) ThreadsPerCore() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfigAdvancedMachineFeatures) *int {
		if v == nil {
			return nil
		}
		return &v.ThreadsPerCore
	}).(pulumi.IntPtrOutput)
}

type ClusterNodePoolNodeConfigConfidentialNodes struct {
	// Enable Confidential GKE Nodes for this cluster, to
	// enforce encryption of data in-use.
	Enabled bool `pulumi:"enabled"`
}

// ClusterNodePoolNodeConfigConfidentialNodesInput is an input type that accepts ClusterNodePoolNodeConfigConfidentialNodesArgs and ClusterNodePoolNodeConfigConfidentialNodesOutput values.
// You can construct a concrete instance of `ClusterNodePoolNodeConfigConfidentialNodesInput` via:
//
//	ClusterNodePoolNodeConfigConfidentialNodesArgs{...}
type ClusterNodePoolNodeConfigConfidentialNodesInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigConfidentialNodesOutput() ClusterNodePoolNodeConfigConfidentialNodesOutput
	ToClusterNodePoolNodeConfigConfidentialNodesOutputWithContext(context.Context) ClusterNodePoolNodeConfigConfidentialNodesOutput
}

type ClusterNodePoolNodeConfigConfidentialNodesArgs struct {
	// Enable Confidential GKE Nodes for this cluster, to
	// enforce encryption of data in-use.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (ClusterNodePoolNodeConfigConfidentialNodesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfigConfidentialNodes)(nil)).Elem()
}

func (i ClusterNodePoolNodeConfigConfidentialNodesArgs) ToClusterNodePoolNodeConfigConfidentialNodesOutput() ClusterNodePoolNodeConfigConfidentialNodesOutput {
	return i.ToClusterNodePoolNodeConfigConfidentialNodesOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigConfidentialNodesArgs) ToClusterNodePoolNodeConfigConfidentialNodesOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigConfidentialNodesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigConfidentialNodesOutput)
}

func (i ClusterNodePoolNodeConfigConfidentialNodesArgs) ToClusterNodePoolNodeConfigConfidentialNodesPtrOutput() ClusterNodePoolNodeConfigConfidentialNodesPtrOutput {
	return i.ToClusterNodePoolNodeConfigConfidentialNodesPtrOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigConfidentialNodesArgs) ToClusterNodePoolNodeConfigConfidentialNodesPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigConfidentialNodesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigConfidentialNodesOutput).ToClusterNodePoolNodeConfigConfidentialNodesPtrOutputWithContext(ctx)
}

// ClusterNodePoolNodeConfigConfidentialNodesPtrInput is an input type that accepts ClusterNodePoolNodeConfigConfidentialNodesArgs, ClusterNodePoolNodeConfigConfidentialNodesPtr and ClusterNodePoolNodeConfigConfidentialNodesPtrOutput values.
// You can construct a concrete instance of `ClusterNodePoolNodeConfigConfidentialNodesPtrInput` via:
//
//	        ClusterNodePoolNodeConfigConfidentialNodesArgs{...}
//
//	or:
//
//	        nil
type ClusterNodePoolNodeConfigConfidentialNodesPtrInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigConfidentialNodesPtrOutput() ClusterNodePoolNodeConfigConfidentialNodesPtrOutput
	ToClusterNodePoolNodeConfigConfidentialNodesPtrOutputWithContext(context.Context) ClusterNodePoolNodeConfigConfidentialNodesPtrOutput
}

type clusterNodePoolNodeConfigConfidentialNodesPtrType ClusterNodePoolNodeConfigConfidentialNodesArgs

func ClusterNodePoolNodeConfigConfidentialNodesPtr(v *ClusterNodePoolNodeConfigConfidentialNodesArgs) ClusterNodePoolNodeConfigConfidentialNodesPtrInput {
	return (*clusterNodePoolNodeConfigConfidentialNodesPtrType)(v)
}

func (*clusterNodePoolNodeConfigConfidentialNodesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolNodeConfigConfidentialNodes)(nil)).Elem()
}

func (i *clusterNodePoolNodeConfigConfidentialNodesPtrType) ToClusterNodePoolNodeConfigConfidentialNodesPtrOutput() ClusterNodePoolNodeConfigConfidentialNodesPtrOutput {
	return i.ToClusterNodePoolNodeConfigConfidentialNodesPtrOutputWithContext(context.Background())
}

func (i *clusterNodePoolNodeConfigConfidentialNodesPtrType) ToClusterNodePoolNodeConfigConfidentialNodesPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigConfidentialNodesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigConfidentialNodesPtrOutput)
}

type ClusterNodePoolNodeConfigConfidentialNodesOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigConfidentialNodesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfigConfidentialNodes)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigConfidentialNodesOutput) ToClusterNodePoolNodeConfigConfidentialNodesOutput() ClusterNodePoolNodeConfigConfidentialNodesOutput {
	return o
}

func (o ClusterNodePoolNodeConfigConfidentialNodesOutput) ToClusterNodePoolNodeConfigConfidentialNodesOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigConfidentialNodesOutput {
	return o
}

func (o ClusterNodePoolNodeConfigConfidentialNodesOutput) ToClusterNodePoolNodeConfigConfidentialNodesPtrOutput() ClusterNodePoolNodeConfigConfidentialNodesPtrOutput {
	return o.ToClusterNodePoolNodeConfigConfidentialNodesPtrOutputWithContext(context.Background())
}

func (o ClusterNodePoolNodeConfigConfidentialNodesOutput) ToClusterNodePoolNodeConfigConfidentialNodesPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigConfidentialNodesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterNodePoolNodeConfigConfidentialNodes) *ClusterNodePoolNodeConfigConfidentialNodes {
		return &v
	}).(ClusterNodePoolNodeConfigConfidentialNodesPtrOutput)
}

// Enable Confidential GKE Nodes for this cluster, to
// enforce encryption of data in-use.
func (o ClusterNodePoolNodeConfigConfidentialNodesOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigConfidentialNodes) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type ClusterNodePoolNodeConfigConfidentialNodesPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigConfidentialNodesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolNodeConfigConfidentialNodes)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigConfidentialNodesPtrOutput) ToClusterNodePoolNodeConfigConfidentialNodesPtrOutput() ClusterNodePoolNodeConfigConfidentialNodesPtrOutput {
	return o
}

func (o ClusterNodePoolNodeConfigConfidentialNodesPtrOutput) ToClusterNodePoolNodeConfigConfidentialNodesPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigConfidentialNodesPtrOutput {
	return o
}

func (o ClusterNodePoolNodeConfigConfidentialNodesPtrOutput) Elem() ClusterNodePoolNodeConfigConfidentialNodesOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfigConfidentialNodes) ClusterNodePoolNodeConfigConfidentialNodes {
		if v != nil {
			return *v
		}
		var ret ClusterNodePoolNodeConfigConfidentialNodes
		return ret
	}).(ClusterNodePoolNodeConfigConfidentialNodesOutput)
}

// Enable Confidential GKE Nodes for this cluster, to
// enforce encryption of data in-use.
func (o ClusterNodePoolNodeConfigConfidentialNodesPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfigConfidentialNodes) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type ClusterNodePoolNodeConfigEffectiveTaint struct {
	// Effect for taint.
	Effect *string `pulumi:"effect"`
	// Key for taint.
	Key *string `pulumi:"key"`
	// Value for taint.
	Value *string `pulumi:"value"`
}

// ClusterNodePoolNodeConfigEffectiveTaintInput is an input type that accepts ClusterNodePoolNodeConfigEffectiveTaintArgs and ClusterNodePoolNodeConfigEffectiveTaintOutput values.
// You can construct a concrete instance of `ClusterNodePoolNodeConfigEffectiveTaintInput` via:
//
//	ClusterNodePoolNodeConfigEffectiveTaintArgs{...}
type ClusterNodePoolNodeConfigEffectiveTaintInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigEffectiveTaintOutput() ClusterNodePoolNodeConfigEffectiveTaintOutput
	ToClusterNodePoolNodeConfigEffectiveTaintOutputWithContext(context.Context) ClusterNodePoolNodeConfigEffectiveTaintOutput
}

type ClusterNodePoolNodeConfigEffectiveTaintArgs struct {
	// Effect for taint.
	Effect pulumi.StringPtrInput `pulumi:"effect"`
	// Key for taint.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Value for taint.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ClusterNodePoolNodeConfigEffectiveTaintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfigEffectiveTaint)(nil)).Elem()
}

func (i ClusterNodePoolNodeConfigEffectiveTaintArgs) ToClusterNodePoolNodeConfigEffectiveTaintOutput() ClusterNodePoolNodeConfigEffectiveTaintOutput {
	return i.ToClusterNodePoolNodeConfigEffectiveTaintOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigEffectiveTaintArgs) ToClusterNodePoolNodeConfigEffectiveTaintOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigEffectiveTaintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigEffectiveTaintOutput)
}

// ClusterNodePoolNodeConfigEffectiveTaintArrayInput is an input type that accepts ClusterNodePoolNodeConfigEffectiveTaintArray and ClusterNodePoolNodeConfigEffectiveTaintArrayOutput values.
// You can construct a concrete instance of `ClusterNodePoolNodeConfigEffectiveTaintArrayInput` via:
//
//	ClusterNodePoolNodeConfigEffectiveTaintArray{ ClusterNodePoolNodeConfigEffectiveTaintArgs{...} }
type ClusterNodePoolNodeConfigEffectiveTaintArrayInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigEffectiveTaintArrayOutput() ClusterNodePoolNodeConfigEffectiveTaintArrayOutput
	ToClusterNodePoolNodeConfigEffectiveTaintArrayOutputWithContext(context.Context) ClusterNodePoolNodeConfigEffectiveTaintArrayOutput
}

type ClusterNodePoolNodeConfigEffectiveTaintArray []ClusterNodePoolNodeConfigEffectiveTaintInput

func (ClusterNodePoolNodeConfigEffectiveTaintArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodePoolNodeConfigEffectiveTaint)(nil)).Elem()
}

func (i ClusterNodePoolNodeConfigEffectiveTaintArray) ToClusterNodePoolNodeConfigEffectiveTaintArrayOutput() ClusterNodePoolNodeConfigEffectiveTaintArrayOutput {
	return i.ToClusterNodePoolNodeConfigEffectiveTaintArrayOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigEffectiveTaintArray) ToClusterNodePoolNodeConfigEffectiveTaintArrayOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigEffectiveTaintArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigEffectiveTaintArrayOutput)
}

type ClusterNodePoolNodeConfigEffectiveTaintOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigEffectiveTaintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfigEffectiveTaint)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigEffectiveTaintOutput) ToClusterNodePoolNodeConfigEffectiveTaintOutput() ClusterNodePoolNodeConfigEffectiveTaintOutput {
	return o
}

func (o ClusterNodePoolNodeConfigEffectiveTaintOutput) ToClusterNodePoolNodeConfigEffectiveTaintOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigEffectiveTaintOutput {
	return o
}

// Effect for taint.
func (o ClusterNodePoolNodeConfigEffectiveTaintOutput) Effect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigEffectiveTaint) *string { return v.Effect }).(pulumi.StringPtrOutput)
}

// Key for taint.
func (o ClusterNodePoolNodeConfigEffectiveTaintOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigEffectiveTaint) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Value for taint.
func (o ClusterNodePoolNodeConfigEffectiveTaintOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigEffectiveTaint) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ClusterNodePoolNodeConfigEffectiveTaintArrayOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigEffectiveTaintArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodePoolNodeConfigEffectiveTaint)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigEffectiveTaintArrayOutput) ToClusterNodePoolNodeConfigEffectiveTaintArrayOutput() ClusterNodePoolNodeConfigEffectiveTaintArrayOutput {
	return o
}

func (o ClusterNodePoolNodeConfigEffectiveTaintArrayOutput) ToClusterNodePoolNodeConfigEffectiveTaintArrayOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigEffectiveTaintArrayOutput {
	return o
}

func (o ClusterNodePoolNodeConfigEffectiveTaintArrayOutput) Index(i pulumi.IntInput) ClusterNodePoolNodeConfigEffectiveTaintOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterNodePoolNodeConfigEffectiveTaint {
		return vs[0].([]ClusterNodePoolNodeConfigEffectiveTaint)[vs[1].(int)]
	}).(ClusterNodePoolNodeConfigEffectiveTaintOutput)
}

type ClusterNodePoolNodeConfigEphemeralStorageConfig struct {
	// Number of local SSDs to use to back ephemeral storage. Uses NVMe interfaces. Each local SSD is 375 GB in size. If zero, it means to disable using local SSDs as ephemeral storage.
	LocalSsdCount int `pulumi:"localSsdCount"`
}

// ClusterNodePoolNodeConfigEphemeralStorageConfigInput is an input type that accepts ClusterNodePoolNodeConfigEphemeralStorageConfigArgs and ClusterNodePoolNodeConfigEphemeralStorageConfigOutput values.
// You can construct a concrete instance of `ClusterNodePoolNodeConfigEphemeralStorageConfigInput` via:
//
//	ClusterNodePoolNodeConfigEphemeralStorageConfigArgs{...}
type ClusterNodePoolNodeConfigEphemeralStorageConfigInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigEphemeralStorageConfigOutput() ClusterNodePoolNodeConfigEphemeralStorageConfigOutput
	ToClusterNodePoolNodeConfigEphemeralStorageConfigOutputWithContext(context.Context) ClusterNodePoolNodeConfigEphemeralStorageConfigOutput
}

type ClusterNodePoolNodeConfigEphemeralStorageConfigArgs struct {
	// Number of local SSDs to use to back ephemeral storage. Uses NVMe interfaces. Each local SSD is 375 GB in size. If zero, it means to disable using local SSDs as ephemeral storage.
	LocalSsdCount pulumi.IntInput `pulumi:"localSsdCount"`
}

func (ClusterNodePoolNodeConfigEphemeralStorageConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfigEphemeralStorageConfig)(nil)).Elem()
}

func (i ClusterNodePoolNodeConfigEphemeralStorageConfigArgs) ToClusterNodePoolNodeConfigEphemeralStorageConfigOutput() ClusterNodePoolNodeConfigEphemeralStorageConfigOutput {
	return i.ToClusterNodePoolNodeConfigEphemeralStorageConfigOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigEphemeralStorageConfigArgs) ToClusterNodePoolNodeConfigEphemeralStorageConfigOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigEphemeralStorageConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigEphemeralStorageConfigOutput)
}

func (i ClusterNodePoolNodeConfigEphemeralStorageConfigArgs) ToClusterNodePoolNodeConfigEphemeralStorageConfigPtrOutput() ClusterNodePoolNodeConfigEphemeralStorageConfigPtrOutput {
	return i.ToClusterNodePoolNodeConfigEphemeralStorageConfigPtrOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigEphemeralStorageConfigArgs) ToClusterNodePoolNodeConfigEphemeralStorageConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigEphemeralStorageConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigEphemeralStorageConfigOutput).ToClusterNodePoolNodeConfigEphemeralStorageConfigPtrOutputWithContext(ctx)
}

// ClusterNodePoolNodeConfigEphemeralStorageConfigPtrInput is an input type that accepts ClusterNodePoolNodeConfigEphemeralStorageConfigArgs, ClusterNodePoolNodeConfigEphemeralStorageConfigPtr and ClusterNodePoolNodeConfigEphemeralStorageConfigPtrOutput values.
// You can construct a concrete instance of `ClusterNodePoolNodeConfigEphemeralStorageConfigPtrInput` via:
//
//	        ClusterNodePoolNodeConfigEphemeralStorageConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterNodePoolNodeConfigEphemeralStorageConfigPtrInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigEphemeralStorageConfigPtrOutput() ClusterNodePoolNodeConfigEphemeralStorageConfigPtrOutput
	ToClusterNodePoolNodeConfigEphemeralStorageConfigPtrOutputWithContext(context.Context) ClusterNodePoolNodeConfigEphemeralStorageConfigPtrOutput
}

type clusterNodePoolNodeConfigEphemeralStorageConfigPtrType ClusterNodePoolNodeConfigEphemeralStorageConfigArgs

func ClusterNodePoolNodeConfigEphemeralStorageConfigPtr(v *ClusterNodePoolNodeConfigEphemeralStorageConfigArgs) ClusterNodePoolNodeConfigEphemeralStorageConfigPtrInput {
	return (*clusterNodePoolNodeConfigEphemeralStorageConfigPtrType)(v)
}

func (*clusterNodePoolNodeConfigEphemeralStorageConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolNodeConfigEphemeralStorageConfig)(nil)).Elem()
}

func (i *clusterNodePoolNodeConfigEphemeralStorageConfigPtrType) ToClusterNodePoolNodeConfigEphemeralStorageConfigPtrOutput() ClusterNodePoolNodeConfigEphemeralStorageConfigPtrOutput {
	return i.ToClusterNodePoolNodeConfigEphemeralStorageConfigPtrOutputWithContext(context.Background())
}

func (i *clusterNodePoolNodeConfigEphemeralStorageConfigPtrType) ToClusterNodePoolNodeConfigEphemeralStorageConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigEphemeralStorageConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigEphemeralStorageConfigPtrOutput)
}

type ClusterNodePoolNodeConfigEphemeralStorageConfigOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigEphemeralStorageConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfigEphemeralStorageConfig)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigEphemeralStorageConfigOutput) ToClusterNodePoolNodeConfigEphemeralStorageConfigOutput() ClusterNodePoolNodeConfigEphemeralStorageConfigOutput {
	return o
}

func (o ClusterNodePoolNodeConfigEphemeralStorageConfigOutput) ToClusterNodePoolNodeConfigEphemeralStorageConfigOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigEphemeralStorageConfigOutput {
	return o
}

func (o ClusterNodePoolNodeConfigEphemeralStorageConfigOutput) ToClusterNodePoolNodeConfigEphemeralStorageConfigPtrOutput() ClusterNodePoolNodeConfigEphemeralStorageConfigPtrOutput {
	return o.ToClusterNodePoolNodeConfigEphemeralStorageConfigPtrOutputWithContext(context.Background())
}

func (o ClusterNodePoolNodeConfigEphemeralStorageConfigOutput) ToClusterNodePoolNodeConfigEphemeralStorageConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigEphemeralStorageConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterNodePoolNodeConfigEphemeralStorageConfig) *ClusterNodePoolNodeConfigEphemeralStorageConfig {
		return &v
	}).(ClusterNodePoolNodeConfigEphemeralStorageConfigPtrOutput)
}

// Number of local SSDs to use to back ephemeral storage. Uses NVMe interfaces. Each local SSD is 375 GB in size. If zero, it means to disable using local SSDs as ephemeral storage.
func (o ClusterNodePoolNodeConfigEphemeralStorageConfigOutput) LocalSsdCount() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigEphemeralStorageConfig) int { return v.LocalSsdCount }).(pulumi.IntOutput)
}

type ClusterNodePoolNodeConfigEphemeralStorageConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigEphemeralStorageConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolNodeConfigEphemeralStorageConfig)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigEphemeralStorageConfigPtrOutput) ToClusterNodePoolNodeConfigEphemeralStorageConfigPtrOutput() ClusterNodePoolNodeConfigEphemeralStorageConfigPtrOutput {
	return o
}

func (o ClusterNodePoolNodeConfigEphemeralStorageConfigPtrOutput) ToClusterNodePoolNodeConfigEphemeralStorageConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigEphemeralStorageConfigPtrOutput {
	return o
}

func (o ClusterNodePoolNodeConfigEphemeralStorageConfigPtrOutput) Elem() ClusterNodePoolNodeConfigEphemeralStorageConfigOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfigEphemeralStorageConfig) ClusterNodePoolNodeConfigEphemeralStorageConfig {
		if v != nil {
			return *v
		}
		var ret ClusterNodePoolNodeConfigEphemeralStorageConfig
		return ret
	}).(ClusterNodePoolNodeConfigEphemeralStorageConfigOutput)
}

// Number of local SSDs to use to back ephemeral storage. Uses NVMe interfaces. Each local SSD is 375 GB in size. If zero, it means to disable using local SSDs as ephemeral storage.
func (o ClusterNodePoolNodeConfigEphemeralStorageConfigPtrOutput) LocalSsdCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfigEphemeralStorageConfig) *int {
		if v == nil {
			return nil
		}
		return &v.LocalSsdCount
	}).(pulumi.IntPtrOutput)
}

type ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfig struct {
	// Number of local SSDs to use to back ephemeral storage. Uses NVMe interfaces. Each local SSD is 375 GB in size. If zero, it means to disable using local SSDs as ephemeral storage.
	LocalSsdCount int `pulumi:"localSsdCount"`
}

// ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigInput is an input type that accepts ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigArgs and ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigOutput values.
// You can construct a concrete instance of `ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigInput` via:
//
//	ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigArgs{...}
type ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigOutput() ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigOutput
	ToClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigOutputWithContext(context.Context) ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigOutput
}

type ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigArgs struct {
	// Number of local SSDs to use to back ephemeral storage. Uses NVMe interfaces. Each local SSD is 375 GB in size. If zero, it means to disable using local SSDs as ephemeral storage.
	LocalSsdCount pulumi.IntInput `pulumi:"localSsdCount"`
}

func (ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfig)(nil)).Elem()
}

func (i ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigArgs) ToClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigOutput() ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigOutput {
	return i.ToClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigArgs) ToClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigOutput)
}

func (i ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigArgs) ToClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrOutput() ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrOutput {
	return i.ToClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigArgs) ToClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigOutput).ToClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrOutputWithContext(ctx)
}

// ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrInput is an input type that accepts ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigArgs, ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigPtr and ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrOutput values.
// You can construct a concrete instance of `ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrInput` via:
//
//	        ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrOutput() ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrOutput
	ToClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrOutputWithContext(context.Context) ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrOutput
}

type clusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrType ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigArgs

func ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigPtr(v *ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigArgs) ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrInput {
	return (*clusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrType)(v)
}

func (*clusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfig)(nil)).Elem()
}

func (i *clusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrType) ToClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrOutput() ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrOutput {
	return i.ToClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrOutputWithContext(context.Background())
}

func (i *clusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrType) ToClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrOutput)
}

type ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfig)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigOutput) ToClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigOutput() ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigOutput {
	return o
}

func (o ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigOutput) ToClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigOutput {
	return o
}

func (o ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigOutput) ToClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrOutput() ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrOutput {
	return o.ToClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrOutputWithContext(context.Background())
}

func (o ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigOutput) ToClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfig) *ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfig {
		return &v
	}).(ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrOutput)
}

// Number of local SSDs to use to back ephemeral storage. Uses NVMe interfaces. Each local SSD is 375 GB in size. If zero, it means to disable using local SSDs as ephemeral storage.
func (o ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigOutput) LocalSsdCount() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfig) int { return v.LocalSsdCount }).(pulumi.IntOutput)
}

type ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfig)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrOutput) ToClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrOutput() ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrOutput {
	return o
}

func (o ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrOutput) ToClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrOutput {
	return o
}

func (o ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrOutput) Elem() ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfig) ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfig {
		if v != nil {
			return *v
		}
		var ret ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfig
		return ret
	}).(ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigOutput)
}

// Number of local SSDs to use to back ephemeral storage. Uses NVMe interfaces. Each local SSD is 375 GB in size. If zero, it means to disable using local SSDs as ephemeral storage.
func (o ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrOutput) LocalSsdCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfig) *int {
		if v == nil {
			return nil
		}
		return &v.LocalSsdCount
	}).(pulumi.IntPtrOutput)
}

type ClusterNodePoolNodeConfigFastSocket struct {
	// Whether or not the NCCL Fast Socket is enabled
	Enabled bool `pulumi:"enabled"`
}

// ClusterNodePoolNodeConfigFastSocketInput is an input type that accepts ClusterNodePoolNodeConfigFastSocketArgs and ClusterNodePoolNodeConfigFastSocketOutput values.
// You can construct a concrete instance of `ClusterNodePoolNodeConfigFastSocketInput` via:
//
//	ClusterNodePoolNodeConfigFastSocketArgs{...}
type ClusterNodePoolNodeConfigFastSocketInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigFastSocketOutput() ClusterNodePoolNodeConfigFastSocketOutput
	ToClusterNodePoolNodeConfigFastSocketOutputWithContext(context.Context) ClusterNodePoolNodeConfigFastSocketOutput
}

type ClusterNodePoolNodeConfigFastSocketArgs struct {
	// Whether or not the NCCL Fast Socket is enabled
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (ClusterNodePoolNodeConfigFastSocketArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfigFastSocket)(nil)).Elem()
}

func (i ClusterNodePoolNodeConfigFastSocketArgs) ToClusterNodePoolNodeConfigFastSocketOutput() ClusterNodePoolNodeConfigFastSocketOutput {
	return i.ToClusterNodePoolNodeConfigFastSocketOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigFastSocketArgs) ToClusterNodePoolNodeConfigFastSocketOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigFastSocketOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigFastSocketOutput)
}

func (i ClusterNodePoolNodeConfigFastSocketArgs) ToClusterNodePoolNodeConfigFastSocketPtrOutput() ClusterNodePoolNodeConfigFastSocketPtrOutput {
	return i.ToClusterNodePoolNodeConfigFastSocketPtrOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigFastSocketArgs) ToClusterNodePoolNodeConfigFastSocketPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigFastSocketPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigFastSocketOutput).ToClusterNodePoolNodeConfigFastSocketPtrOutputWithContext(ctx)
}

// ClusterNodePoolNodeConfigFastSocketPtrInput is an input type that accepts ClusterNodePoolNodeConfigFastSocketArgs, ClusterNodePoolNodeConfigFastSocketPtr and ClusterNodePoolNodeConfigFastSocketPtrOutput values.
// You can construct a concrete instance of `ClusterNodePoolNodeConfigFastSocketPtrInput` via:
//
//	        ClusterNodePoolNodeConfigFastSocketArgs{...}
//
//	or:
//
//	        nil
type ClusterNodePoolNodeConfigFastSocketPtrInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigFastSocketPtrOutput() ClusterNodePoolNodeConfigFastSocketPtrOutput
	ToClusterNodePoolNodeConfigFastSocketPtrOutputWithContext(context.Context) ClusterNodePoolNodeConfigFastSocketPtrOutput
}

type clusterNodePoolNodeConfigFastSocketPtrType ClusterNodePoolNodeConfigFastSocketArgs

func ClusterNodePoolNodeConfigFastSocketPtr(v *ClusterNodePoolNodeConfigFastSocketArgs) ClusterNodePoolNodeConfigFastSocketPtrInput {
	return (*clusterNodePoolNodeConfigFastSocketPtrType)(v)
}

func (*clusterNodePoolNodeConfigFastSocketPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolNodeConfigFastSocket)(nil)).Elem()
}

func (i *clusterNodePoolNodeConfigFastSocketPtrType) ToClusterNodePoolNodeConfigFastSocketPtrOutput() ClusterNodePoolNodeConfigFastSocketPtrOutput {
	return i.ToClusterNodePoolNodeConfigFastSocketPtrOutputWithContext(context.Background())
}

func (i *clusterNodePoolNodeConfigFastSocketPtrType) ToClusterNodePoolNodeConfigFastSocketPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigFastSocketPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigFastSocketPtrOutput)
}

type ClusterNodePoolNodeConfigFastSocketOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigFastSocketOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfigFastSocket)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigFastSocketOutput) ToClusterNodePoolNodeConfigFastSocketOutput() ClusterNodePoolNodeConfigFastSocketOutput {
	return o
}

func (o ClusterNodePoolNodeConfigFastSocketOutput) ToClusterNodePoolNodeConfigFastSocketOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigFastSocketOutput {
	return o
}

func (o ClusterNodePoolNodeConfigFastSocketOutput) ToClusterNodePoolNodeConfigFastSocketPtrOutput() ClusterNodePoolNodeConfigFastSocketPtrOutput {
	return o.ToClusterNodePoolNodeConfigFastSocketPtrOutputWithContext(context.Background())
}

func (o ClusterNodePoolNodeConfigFastSocketOutput) ToClusterNodePoolNodeConfigFastSocketPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigFastSocketPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterNodePoolNodeConfigFastSocket) *ClusterNodePoolNodeConfigFastSocket {
		return &v
	}).(ClusterNodePoolNodeConfigFastSocketPtrOutput)
}

// Whether or not the NCCL Fast Socket is enabled
func (o ClusterNodePoolNodeConfigFastSocketOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigFastSocket) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type ClusterNodePoolNodeConfigFastSocketPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigFastSocketPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolNodeConfigFastSocket)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigFastSocketPtrOutput) ToClusterNodePoolNodeConfigFastSocketPtrOutput() ClusterNodePoolNodeConfigFastSocketPtrOutput {
	return o
}

func (o ClusterNodePoolNodeConfigFastSocketPtrOutput) ToClusterNodePoolNodeConfigFastSocketPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigFastSocketPtrOutput {
	return o
}

func (o ClusterNodePoolNodeConfigFastSocketPtrOutput) Elem() ClusterNodePoolNodeConfigFastSocketOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfigFastSocket) ClusterNodePoolNodeConfigFastSocket {
		if v != nil {
			return *v
		}
		var ret ClusterNodePoolNodeConfigFastSocket
		return ret
	}).(ClusterNodePoolNodeConfigFastSocketOutput)
}

// Whether or not the NCCL Fast Socket is enabled
func (o ClusterNodePoolNodeConfigFastSocketPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfigFastSocket) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type ClusterNodePoolNodeConfigGcfsConfig struct {
	// Whether or not the Google Container Filesystem (GCFS) is enabled
	Enabled bool `pulumi:"enabled"`
}

// ClusterNodePoolNodeConfigGcfsConfigInput is an input type that accepts ClusterNodePoolNodeConfigGcfsConfigArgs and ClusterNodePoolNodeConfigGcfsConfigOutput values.
// You can construct a concrete instance of `ClusterNodePoolNodeConfigGcfsConfigInput` via:
//
//	ClusterNodePoolNodeConfigGcfsConfigArgs{...}
type ClusterNodePoolNodeConfigGcfsConfigInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigGcfsConfigOutput() ClusterNodePoolNodeConfigGcfsConfigOutput
	ToClusterNodePoolNodeConfigGcfsConfigOutputWithContext(context.Context) ClusterNodePoolNodeConfigGcfsConfigOutput
}

type ClusterNodePoolNodeConfigGcfsConfigArgs struct {
	// Whether or not the Google Container Filesystem (GCFS) is enabled
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (ClusterNodePoolNodeConfigGcfsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfigGcfsConfig)(nil)).Elem()
}

func (i ClusterNodePoolNodeConfigGcfsConfigArgs) ToClusterNodePoolNodeConfigGcfsConfigOutput() ClusterNodePoolNodeConfigGcfsConfigOutput {
	return i.ToClusterNodePoolNodeConfigGcfsConfigOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigGcfsConfigArgs) ToClusterNodePoolNodeConfigGcfsConfigOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigGcfsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigGcfsConfigOutput)
}

func (i ClusterNodePoolNodeConfigGcfsConfigArgs) ToClusterNodePoolNodeConfigGcfsConfigPtrOutput() ClusterNodePoolNodeConfigGcfsConfigPtrOutput {
	return i.ToClusterNodePoolNodeConfigGcfsConfigPtrOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigGcfsConfigArgs) ToClusterNodePoolNodeConfigGcfsConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigGcfsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigGcfsConfigOutput).ToClusterNodePoolNodeConfigGcfsConfigPtrOutputWithContext(ctx)
}

// ClusterNodePoolNodeConfigGcfsConfigPtrInput is an input type that accepts ClusterNodePoolNodeConfigGcfsConfigArgs, ClusterNodePoolNodeConfigGcfsConfigPtr and ClusterNodePoolNodeConfigGcfsConfigPtrOutput values.
// You can construct a concrete instance of `ClusterNodePoolNodeConfigGcfsConfigPtrInput` via:
//
//	        ClusterNodePoolNodeConfigGcfsConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterNodePoolNodeConfigGcfsConfigPtrInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigGcfsConfigPtrOutput() ClusterNodePoolNodeConfigGcfsConfigPtrOutput
	ToClusterNodePoolNodeConfigGcfsConfigPtrOutputWithContext(context.Context) ClusterNodePoolNodeConfigGcfsConfigPtrOutput
}

type clusterNodePoolNodeConfigGcfsConfigPtrType ClusterNodePoolNodeConfigGcfsConfigArgs

func ClusterNodePoolNodeConfigGcfsConfigPtr(v *ClusterNodePoolNodeConfigGcfsConfigArgs) ClusterNodePoolNodeConfigGcfsConfigPtrInput {
	return (*clusterNodePoolNodeConfigGcfsConfigPtrType)(v)
}

func (*clusterNodePoolNodeConfigGcfsConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolNodeConfigGcfsConfig)(nil)).Elem()
}

func (i *clusterNodePoolNodeConfigGcfsConfigPtrType) ToClusterNodePoolNodeConfigGcfsConfigPtrOutput() ClusterNodePoolNodeConfigGcfsConfigPtrOutput {
	return i.ToClusterNodePoolNodeConfigGcfsConfigPtrOutputWithContext(context.Background())
}

func (i *clusterNodePoolNodeConfigGcfsConfigPtrType) ToClusterNodePoolNodeConfigGcfsConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigGcfsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigGcfsConfigPtrOutput)
}

type ClusterNodePoolNodeConfigGcfsConfigOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigGcfsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfigGcfsConfig)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigGcfsConfigOutput) ToClusterNodePoolNodeConfigGcfsConfigOutput() ClusterNodePoolNodeConfigGcfsConfigOutput {
	return o
}

func (o ClusterNodePoolNodeConfigGcfsConfigOutput) ToClusterNodePoolNodeConfigGcfsConfigOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigGcfsConfigOutput {
	return o
}

func (o ClusterNodePoolNodeConfigGcfsConfigOutput) ToClusterNodePoolNodeConfigGcfsConfigPtrOutput() ClusterNodePoolNodeConfigGcfsConfigPtrOutput {
	return o.ToClusterNodePoolNodeConfigGcfsConfigPtrOutputWithContext(context.Background())
}

func (o ClusterNodePoolNodeConfigGcfsConfigOutput) ToClusterNodePoolNodeConfigGcfsConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigGcfsConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterNodePoolNodeConfigGcfsConfig) *ClusterNodePoolNodeConfigGcfsConfig {
		return &v
	}).(ClusterNodePoolNodeConfigGcfsConfigPtrOutput)
}

// Whether or not the Google Container Filesystem (GCFS) is enabled
func (o ClusterNodePoolNodeConfigGcfsConfigOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigGcfsConfig) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type ClusterNodePoolNodeConfigGcfsConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigGcfsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolNodeConfigGcfsConfig)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigGcfsConfigPtrOutput) ToClusterNodePoolNodeConfigGcfsConfigPtrOutput() ClusterNodePoolNodeConfigGcfsConfigPtrOutput {
	return o
}

func (o ClusterNodePoolNodeConfigGcfsConfigPtrOutput) ToClusterNodePoolNodeConfigGcfsConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigGcfsConfigPtrOutput {
	return o
}

func (o ClusterNodePoolNodeConfigGcfsConfigPtrOutput) Elem() ClusterNodePoolNodeConfigGcfsConfigOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfigGcfsConfig) ClusterNodePoolNodeConfigGcfsConfig {
		if v != nil {
			return *v
		}
		var ret ClusterNodePoolNodeConfigGcfsConfig
		return ret
	}).(ClusterNodePoolNodeConfigGcfsConfigOutput)
}

// Whether or not the Google Container Filesystem (GCFS) is enabled
func (o ClusterNodePoolNodeConfigGcfsConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfigGcfsConfig) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type ClusterNodePoolNodeConfigGuestAccelerator struct {
	// The number of the guest accelerator cards exposed to this instance.
	Count int `pulumi:"count"`
	// Configuration for auto installation of GPU driver. Structure is documented below.
	GpuDriverInstallationConfig *ClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfig `pulumi:"gpuDriverInstallationConfig"`
	// Size of partitions to create on the GPU. Valid values are described in the NVIDIA mig [user guide](https://docs.nvidia.com/datacenter/tesla/mig-user-guide/#partitioning).
	GpuPartitionSize *string `pulumi:"gpuPartitionSize"`
	// Configuration for GPU sharing. Structure is documented below.
	GpuSharingConfig *ClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfig `pulumi:"gpuSharingConfig"`
	// The accelerator type resource to expose to this instance. E.g. `nvidia-tesla-k80`.
	Type string `pulumi:"type"`
}

// ClusterNodePoolNodeConfigGuestAcceleratorInput is an input type that accepts ClusterNodePoolNodeConfigGuestAcceleratorArgs and ClusterNodePoolNodeConfigGuestAcceleratorOutput values.
// You can construct a concrete instance of `ClusterNodePoolNodeConfigGuestAcceleratorInput` via:
//
//	ClusterNodePoolNodeConfigGuestAcceleratorArgs{...}
type ClusterNodePoolNodeConfigGuestAcceleratorInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigGuestAcceleratorOutput() ClusterNodePoolNodeConfigGuestAcceleratorOutput
	ToClusterNodePoolNodeConfigGuestAcceleratorOutputWithContext(context.Context) ClusterNodePoolNodeConfigGuestAcceleratorOutput
}

type ClusterNodePoolNodeConfigGuestAcceleratorArgs struct {
	// The number of the guest accelerator cards exposed to this instance.
	Count pulumi.IntInput `pulumi:"count"`
	// Configuration for auto installation of GPU driver. Structure is documented below.
	GpuDriverInstallationConfig ClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrInput `pulumi:"gpuDriverInstallationConfig"`
	// Size of partitions to create on the GPU. Valid values are described in the NVIDIA mig [user guide](https://docs.nvidia.com/datacenter/tesla/mig-user-guide/#partitioning).
	GpuPartitionSize pulumi.StringPtrInput `pulumi:"gpuPartitionSize"`
	// Configuration for GPU sharing. Structure is documented below.
	GpuSharingConfig ClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrInput `pulumi:"gpuSharingConfig"`
	// The accelerator type resource to expose to this instance. E.g. `nvidia-tesla-k80`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ClusterNodePoolNodeConfigGuestAcceleratorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfigGuestAccelerator)(nil)).Elem()
}

func (i ClusterNodePoolNodeConfigGuestAcceleratorArgs) ToClusterNodePoolNodeConfigGuestAcceleratorOutput() ClusterNodePoolNodeConfigGuestAcceleratorOutput {
	return i.ToClusterNodePoolNodeConfigGuestAcceleratorOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigGuestAcceleratorArgs) ToClusterNodePoolNodeConfigGuestAcceleratorOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigGuestAcceleratorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigGuestAcceleratorOutput)
}

// ClusterNodePoolNodeConfigGuestAcceleratorArrayInput is an input type that accepts ClusterNodePoolNodeConfigGuestAcceleratorArray and ClusterNodePoolNodeConfigGuestAcceleratorArrayOutput values.
// You can construct a concrete instance of `ClusterNodePoolNodeConfigGuestAcceleratorArrayInput` via:
//
//	ClusterNodePoolNodeConfigGuestAcceleratorArray{ ClusterNodePoolNodeConfigGuestAcceleratorArgs{...} }
type ClusterNodePoolNodeConfigGuestAcceleratorArrayInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigGuestAcceleratorArrayOutput() ClusterNodePoolNodeConfigGuestAcceleratorArrayOutput
	ToClusterNodePoolNodeConfigGuestAcceleratorArrayOutputWithContext(context.Context) ClusterNodePoolNodeConfigGuestAcceleratorArrayOutput
}

type ClusterNodePoolNodeConfigGuestAcceleratorArray []ClusterNodePoolNodeConfigGuestAcceleratorInput

func (ClusterNodePoolNodeConfigGuestAcceleratorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodePoolNodeConfigGuestAccelerator)(nil)).Elem()
}

func (i ClusterNodePoolNodeConfigGuestAcceleratorArray) ToClusterNodePoolNodeConfigGuestAcceleratorArrayOutput() ClusterNodePoolNodeConfigGuestAcceleratorArrayOutput {
	return i.ToClusterNodePoolNodeConfigGuestAcceleratorArrayOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigGuestAcceleratorArray) ToClusterNodePoolNodeConfigGuestAcceleratorArrayOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigGuestAcceleratorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigGuestAcceleratorArrayOutput)
}

type ClusterNodePoolNodeConfigGuestAcceleratorOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigGuestAcceleratorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfigGuestAccelerator)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigGuestAcceleratorOutput) ToClusterNodePoolNodeConfigGuestAcceleratorOutput() ClusterNodePoolNodeConfigGuestAcceleratorOutput {
	return o
}

func (o ClusterNodePoolNodeConfigGuestAcceleratorOutput) ToClusterNodePoolNodeConfigGuestAcceleratorOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigGuestAcceleratorOutput {
	return o
}

// The number of the guest accelerator cards exposed to this instance.
func (o ClusterNodePoolNodeConfigGuestAcceleratorOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigGuestAccelerator) int { return v.Count }).(pulumi.IntOutput)
}

// Configuration for auto installation of GPU driver. Structure is documented below.
func (o ClusterNodePoolNodeConfigGuestAcceleratorOutput) GpuDriverInstallationConfig() ClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigGuestAccelerator) *ClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfig {
		return v.GpuDriverInstallationConfig
	}).(ClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutput)
}

// Size of partitions to create on the GPU. Valid values are described in the NVIDIA mig [user guide](https://docs.nvidia.com/datacenter/tesla/mig-user-guide/#partitioning).
func (o ClusterNodePoolNodeConfigGuestAcceleratorOutput) GpuPartitionSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigGuestAccelerator) *string { return v.GpuPartitionSize }).(pulumi.StringPtrOutput)
}

// Configuration for GPU sharing. Structure is documented below.
func (o ClusterNodePoolNodeConfigGuestAcceleratorOutput) GpuSharingConfig() ClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigGuestAccelerator) *ClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfig {
		return v.GpuSharingConfig
	}).(ClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrOutput)
}

// The accelerator type resource to expose to this instance. E.g. `nvidia-tesla-k80`.
func (o ClusterNodePoolNodeConfigGuestAcceleratorOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigGuestAccelerator) string { return v.Type }).(pulumi.StringOutput)
}

type ClusterNodePoolNodeConfigGuestAcceleratorArrayOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigGuestAcceleratorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodePoolNodeConfigGuestAccelerator)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigGuestAcceleratorArrayOutput) ToClusterNodePoolNodeConfigGuestAcceleratorArrayOutput() ClusterNodePoolNodeConfigGuestAcceleratorArrayOutput {
	return o
}

func (o ClusterNodePoolNodeConfigGuestAcceleratorArrayOutput) ToClusterNodePoolNodeConfigGuestAcceleratorArrayOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigGuestAcceleratorArrayOutput {
	return o
}

func (o ClusterNodePoolNodeConfigGuestAcceleratorArrayOutput) Index(i pulumi.IntInput) ClusterNodePoolNodeConfigGuestAcceleratorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterNodePoolNodeConfigGuestAccelerator {
		return vs[0].([]ClusterNodePoolNodeConfigGuestAccelerator)[vs[1].(int)]
	}).(ClusterNodePoolNodeConfigGuestAcceleratorOutput)
}

type ClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfig struct {
	// Mode for how the GPU driver is installed.
	// Accepted values are:
	// * `"GPU_DRIVER_VERSION_UNSPECIFIED"`: Default value is to not install any GPU driver.
	// * `"INSTALLATION_DISABLED"`: Disable GPU driver auto installation and needs manual installation.
	// * `"DEFAULT"`: "Default" GPU driver in COS and Ubuntu.
	// * `"LATEST"`: "Latest" GPU driver in COS.
	GpuDriverVersion string `pulumi:"gpuDriverVersion"`
}

// ClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigInput is an input type that accepts ClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigArgs and ClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput values.
// You can construct a concrete instance of `ClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigInput` via:
//
//	ClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigArgs{...}
type ClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput() ClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput
	ToClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutputWithContext(context.Context) ClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput
}

type ClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigArgs struct {
	// Mode for how the GPU driver is installed.
	// Accepted values are:
	// * `"GPU_DRIVER_VERSION_UNSPECIFIED"`: Default value is to not install any GPU driver.
	// * `"INSTALLATION_DISABLED"`: Disable GPU driver auto installation and needs manual installation.
	// * `"DEFAULT"`: "Default" GPU driver in COS and Ubuntu.
	// * `"LATEST"`: "Latest" GPU driver in COS.
	GpuDriverVersion pulumi.StringInput `pulumi:"gpuDriverVersion"`
}

func (ClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfig)(nil)).Elem()
}

func (i ClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigArgs) ToClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput() ClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput {
	return i.ToClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigArgs) ToClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput)
}

func (i ClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigArgs) ToClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutput() ClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutput {
	return i.ToClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigArgs) ToClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput).ToClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutputWithContext(ctx)
}

// ClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrInput is an input type that accepts ClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigArgs, ClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtr and ClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutput values.
// You can construct a concrete instance of `ClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrInput` via:
//
//	        ClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutput() ClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutput
	ToClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutputWithContext(context.Context) ClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutput
}

type clusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrType ClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigArgs

func ClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtr(v *ClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigArgs) ClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrInput {
	return (*clusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrType)(v)
}

func (*clusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfig)(nil)).Elem()
}

func (i *clusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrType) ToClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutput() ClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutput {
	return i.ToClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutputWithContext(context.Background())
}

func (i *clusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrType) ToClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutput)
}

type ClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfig)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput) ToClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput() ClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput {
	return o
}

func (o ClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput) ToClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput {
	return o
}

func (o ClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput) ToClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutput() ClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutput {
	return o.ToClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutputWithContext(context.Background())
}

func (o ClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput) ToClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfig) *ClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfig {
		return &v
	}).(ClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutput)
}

// Mode for how the GPU driver is installed.
// Accepted values are:
// * `"GPU_DRIVER_VERSION_UNSPECIFIED"`: Default value is to not install any GPU driver.
// * `"INSTALLATION_DISABLED"`: Disable GPU driver auto installation and needs manual installation.
// * `"DEFAULT"`: "Default" GPU driver in COS and Ubuntu.
// * `"LATEST"`: "Latest" GPU driver in COS.
func (o ClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput) GpuDriverVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfig) string {
		return v.GpuDriverVersion
	}).(pulumi.StringOutput)
}

type ClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfig)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutput) ToClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutput() ClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutput {
	return o
}

func (o ClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutput) ToClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutput {
	return o
}

func (o ClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutput) Elem() ClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfig) ClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfig {
		if v != nil {
			return *v
		}
		var ret ClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfig
		return ret
	}).(ClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput)
}

// Mode for how the GPU driver is installed.
// Accepted values are:
// * `"GPU_DRIVER_VERSION_UNSPECIFIED"`: Default value is to not install any GPU driver.
// * `"INSTALLATION_DISABLED"`: Disable GPU driver auto installation and needs manual installation.
// * `"DEFAULT"`: "Default" GPU driver in COS and Ubuntu.
// * `"LATEST"`: "Latest" GPU driver in COS.
func (o ClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutput) GpuDriverVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfig) *string {
		if v == nil {
			return nil
		}
		return &v.GpuDriverVersion
	}).(pulumi.StringPtrOutput)
}

type ClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfig struct {
	// The type of GPU sharing strategy to enable on the GPU node.
	// Accepted values are:
	// * `"TIME_SHARING"`: Allow multiple containers to have [time-shared](https://cloud.google.com/kubernetes-engine/docs/concepts/timesharing-gpus) access to a single GPU device.
	// * `"MPS"`: Enable co-operative multi-process CUDA workloads to run concurrently on a single GPU device with [MPS](https://cloud.google.com/kubernetes-engine/docs/how-to/nvidia-mps-gpus)
	GpuSharingStrategy string `pulumi:"gpuSharingStrategy"`
	// The maximum number of containers that can share a GPU.
	MaxSharedClientsPerGpu int `pulumi:"maxSharedClientsPerGpu"`
}

// ClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigInput is an input type that accepts ClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigArgs and ClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigOutput values.
// You can construct a concrete instance of `ClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigInput` via:
//
//	ClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigArgs{...}
type ClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigOutput() ClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigOutput
	ToClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigOutputWithContext(context.Context) ClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigOutput
}

type ClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigArgs struct {
	// The type of GPU sharing strategy to enable on the GPU node.
	// Accepted values are:
	// * `"TIME_SHARING"`: Allow multiple containers to have [time-shared](https://cloud.google.com/kubernetes-engine/docs/concepts/timesharing-gpus) access to a single GPU device.
	// * `"MPS"`: Enable co-operative multi-process CUDA workloads to run concurrently on a single GPU device with [MPS](https://cloud.google.com/kubernetes-engine/docs/how-to/nvidia-mps-gpus)
	GpuSharingStrategy pulumi.StringInput `pulumi:"gpuSharingStrategy"`
	// The maximum number of containers that can share a GPU.
	MaxSharedClientsPerGpu pulumi.IntInput `pulumi:"maxSharedClientsPerGpu"`
}

func (ClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfig)(nil)).Elem()
}

func (i ClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigArgs) ToClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigOutput() ClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigOutput {
	return i.ToClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigArgs) ToClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigOutput)
}

func (i ClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigArgs) ToClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrOutput() ClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrOutput {
	return i.ToClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigArgs) ToClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigOutput).ToClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrOutputWithContext(ctx)
}

// ClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrInput is an input type that accepts ClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigArgs, ClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtr and ClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrOutput values.
// You can construct a concrete instance of `ClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrInput` via:
//
//	        ClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrOutput() ClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrOutput
	ToClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrOutputWithContext(context.Context) ClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrOutput
}

type clusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrType ClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigArgs

func ClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtr(v *ClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigArgs) ClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrInput {
	return (*clusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrType)(v)
}

func (*clusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfig)(nil)).Elem()
}

func (i *clusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrType) ToClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrOutput() ClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrOutput {
	return i.ToClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrOutputWithContext(context.Background())
}

func (i *clusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrType) ToClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrOutput)
}

type ClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfig)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigOutput) ToClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigOutput() ClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigOutput {
	return o
}

func (o ClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigOutput) ToClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigOutput {
	return o
}

func (o ClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigOutput) ToClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrOutput() ClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrOutput {
	return o.ToClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrOutputWithContext(context.Background())
}

func (o ClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigOutput) ToClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfig) *ClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfig {
		return &v
	}).(ClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrOutput)
}

// The type of GPU sharing strategy to enable on the GPU node.
// Accepted values are:
// * `"TIME_SHARING"`: Allow multiple containers to have [time-shared](https://cloud.google.com/kubernetes-engine/docs/concepts/timesharing-gpus) access to a single GPU device.
// * `"MPS"`: Enable co-operative multi-process CUDA workloads to run concurrently on a single GPU device with [MPS](https://cloud.google.com/kubernetes-engine/docs/how-to/nvidia-mps-gpus)
func (o ClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigOutput) GpuSharingStrategy() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfig) string { return v.GpuSharingStrategy }).(pulumi.StringOutput)
}

// The maximum number of containers that can share a GPU.
func (o ClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigOutput) MaxSharedClientsPerGpu() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfig) int { return v.MaxSharedClientsPerGpu }).(pulumi.IntOutput)
}

type ClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfig)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrOutput) ToClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrOutput() ClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrOutput {
	return o
}

func (o ClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrOutput) ToClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrOutput {
	return o
}

func (o ClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrOutput) Elem() ClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfig) ClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfig {
		if v != nil {
			return *v
		}
		var ret ClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfig
		return ret
	}).(ClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigOutput)
}

// The type of GPU sharing strategy to enable on the GPU node.
// Accepted values are:
// * `"TIME_SHARING"`: Allow multiple containers to have [time-shared](https://cloud.google.com/kubernetes-engine/docs/concepts/timesharing-gpus) access to a single GPU device.
// * `"MPS"`: Enable co-operative multi-process CUDA workloads to run concurrently on a single GPU device with [MPS](https://cloud.google.com/kubernetes-engine/docs/how-to/nvidia-mps-gpus)
func (o ClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrOutput) GpuSharingStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfig) *string {
		if v == nil {
			return nil
		}
		return &v.GpuSharingStrategy
	}).(pulumi.StringPtrOutput)
}

// The maximum number of containers that can share a GPU.
func (o ClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrOutput) MaxSharedClientsPerGpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfig) *int {
		if v == nil {
			return nil
		}
		return &v.MaxSharedClientsPerGpu
	}).(pulumi.IntPtrOutput)
}

type ClusterNodePoolNodeConfigGvnic struct {
	// Whether or not the Google Virtual NIC (gVNIC) is enabled
	Enabled bool `pulumi:"enabled"`
}

// ClusterNodePoolNodeConfigGvnicInput is an input type that accepts ClusterNodePoolNodeConfigGvnicArgs and ClusterNodePoolNodeConfigGvnicOutput values.
// You can construct a concrete instance of `ClusterNodePoolNodeConfigGvnicInput` via:
//
//	ClusterNodePoolNodeConfigGvnicArgs{...}
type ClusterNodePoolNodeConfigGvnicInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigGvnicOutput() ClusterNodePoolNodeConfigGvnicOutput
	ToClusterNodePoolNodeConfigGvnicOutputWithContext(context.Context) ClusterNodePoolNodeConfigGvnicOutput
}

type ClusterNodePoolNodeConfigGvnicArgs struct {
	// Whether or not the Google Virtual NIC (gVNIC) is enabled
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (ClusterNodePoolNodeConfigGvnicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfigGvnic)(nil)).Elem()
}

func (i ClusterNodePoolNodeConfigGvnicArgs) ToClusterNodePoolNodeConfigGvnicOutput() ClusterNodePoolNodeConfigGvnicOutput {
	return i.ToClusterNodePoolNodeConfigGvnicOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigGvnicArgs) ToClusterNodePoolNodeConfigGvnicOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigGvnicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigGvnicOutput)
}

func (i ClusterNodePoolNodeConfigGvnicArgs) ToClusterNodePoolNodeConfigGvnicPtrOutput() ClusterNodePoolNodeConfigGvnicPtrOutput {
	return i.ToClusterNodePoolNodeConfigGvnicPtrOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigGvnicArgs) ToClusterNodePoolNodeConfigGvnicPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigGvnicPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigGvnicOutput).ToClusterNodePoolNodeConfigGvnicPtrOutputWithContext(ctx)
}

// ClusterNodePoolNodeConfigGvnicPtrInput is an input type that accepts ClusterNodePoolNodeConfigGvnicArgs, ClusterNodePoolNodeConfigGvnicPtr and ClusterNodePoolNodeConfigGvnicPtrOutput values.
// You can construct a concrete instance of `ClusterNodePoolNodeConfigGvnicPtrInput` via:
//
//	        ClusterNodePoolNodeConfigGvnicArgs{...}
//
//	or:
//
//	        nil
type ClusterNodePoolNodeConfigGvnicPtrInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigGvnicPtrOutput() ClusterNodePoolNodeConfigGvnicPtrOutput
	ToClusterNodePoolNodeConfigGvnicPtrOutputWithContext(context.Context) ClusterNodePoolNodeConfigGvnicPtrOutput
}

type clusterNodePoolNodeConfigGvnicPtrType ClusterNodePoolNodeConfigGvnicArgs

func ClusterNodePoolNodeConfigGvnicPtr(v *ClusterNodePoolNodeConfigGvnicArgs) ClusterNodePoolNodeConfigGvnicPtrInput {
	return (*clusterNodePoolNodeConfigGvnicPtrType)(v)
}

func (*clusterNodePoolNodeConfigGvnicPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolNodeConfigGvnic)(nil)).Elem()
}

func (i *clusterNodePoolNodeConfigGvnicPtrType) ToClusterNodePoolNodeConfigGvnicPtrOutput() ClusterNodePoolNodeConfigGvnicPtrOutput {
	return i.ToClusterNodePoolNodeConfigGvnicPtrOutputWithContext(context.Background())
}

func (i *clusterNodePoolNodeConfigGvnicPtrType) ToClusterNodePoolNodeConfigGvnicPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigGvnicPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigGvnicPtrOutput)
}

type ClusterNodePoolNodeConfigGvnicOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigGvnicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfigGvnic)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigGvnicOutput) ToClusterNodePoolNodeConfigGvnicOutput() ClusterNodePoolNodeConfigGvnicOutput {
	return o
}

func (o ClusterNodePoolNodeConfigGvnicOutput) ToClusterNodePoolNodeConfigGvnicOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigGvnicOutput {
	return o
}

func (o ClusterNodePoolNodeConfigGvnicOutput) ToClusterNodePoolNodeConfigGvnicPtrOutput() ClusterNodePoolNodeConfigGvnicPtrOutput {
	return o.ToClusterNodePoolNodeConfigGvnicPtrOutputWithContext(context.Background())
}

func (o ClusterNodePoolNodeConfigGvnicOutput) ToClusterNodePoolNodeConfigGvnicPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigGvnicPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterNodePoolNodeConfigGvnic) *ClusterNodePoolNodeConfigGvnic {
		return &v
	}).(ClusterNodePoolNodeConfigGvnicPtrOutput)
}

// Whether or not the Google Virtual NIC (gVNIC) is enabled
func (o ClusterNodePoolNodeConfigGvnicOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigGvnic) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type ClusterNodePoolNodeConfigGvnicPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigGvnicPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolNodeConfigGvnic)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigGvnicPtrOutput) ToClusterNodePoolNodeConfigGvnicPtrOutput() ClusterNodePoolNodeConfigGvnicPtrOutput {
	return o
}

func (o ClusterNodePoolNodeConfigGvnicPtrOutput) ToClusterNodePoolNodeConfigGvnicPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigGvnicPtrOutput {
	return o
}

func (o ClusterNodePoolNodeConfigGvnicPtrOutput) Elem() ClusterNodePoolNodeConfigGvnicOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfigGvnic) ClusterNodePoolNodeConfigGvnic {
		if v != nil {
			return *v
		}
		var ret ClusterNodePoolNodeConfigGvnic
		return ret
	}).(ClusterNodePoolNodeConfigGvnicOutput)
}

// Whether or not the Google Virtual NIC (gVNIC) is enabled
func (o ClusterNodePoolNodeConfigGvnicPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfigGvnic) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type ClusterNodePoolNodeConfigHostMaintenancePolicy struct {
	// .
	MaintenanceInterval string `pulumi:"maintenanceInterval"`
}

// ClusterNodePoolNodeConfigHostMaintenancePolicyInput is an input type that accepts ClusterNodePoolNodeConfigHostMaintenancePolicyArgs and ClusterNodePoolNodeConfigHostMaintenancePolicyOutput values.
// You can construct a concrete instance of `ClusterNodePoolNodeConfigHostMaintenancePolicyInput` via:
//
//	ClusterNodePoolNodeConfigHostMaintenancePolicyArgs{...}
type ClusterNodePoolNodeConfigHostMaintenancePolicyInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigHostMaintenancePolicyOutput() ClusterNodePoolNodeConfigHostMaintenancePolicyOutput
	ToClusterNodePoolNodeConfigHostMaintenancePolicyOutputWithContext(context.Context) ClusterNodePoolNodeConfigHostMaintenancePolicyOutput
}

type ClusterNodePoolNodeConfigHostMaintenancePolicyArgs struct {
	// .
	MaintenanceInterval pulumi.StringInput `pulumi:"maintenanceInterval"`
}

func (ClusterNodePoolNodeConfigHostMaintenancePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfigHostMaintenancePolicy)(nil)).Elem()
}

func (i ClusterNodePoolNodeConfigHostMaintenancePolicyArgs) ToClusterNodePoolNodeConfigHostMaintenancePolicyOutput() ClusterNodePoolNodeConfigHostMaintenancePolicyOutput {
	return i.ToClusterNodePoolNodeConfigHostMaintenancePolicyOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigHostMaintenancePolicyArgs) ToClusterNodePoolNodeConfigHostMaintenancePolicyOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigHostMaintenancePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigHostMaintenancePolicyOutput)
}

func (i ClusterNodePoolNodeConfigHostMaintenancePolicyArgs) ToClusterNodePoolNodeConfigHostMaintenancePolicyPtrOutput() ClusterNodePoolNodeConfigHostMaintenancePolicyPtrOutput {
	return i.ToClusterNodePoolNodeConfigHostMaintenancePolicyPtrOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigHostMaintenancePolicyArgs) ToClusterNodePoolNodeConfigHostMaintenancePolicyPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigHostMaintenancePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigHostMaintenancePolicyOutput).ToClusterNodePoolNodeConfigHostMaintenancePolicyPtrOutputWithContext(ctx)
}

// ClusterNodePoolNodeConfigHostMaintenancePolicyPtrInput is an input type that accepts ClusterNodePoolNodeConfigHostMaintenancePolicyArgs, ClusterNodePoolNodeConfigHostMaintenancePolicyPtr and ClusterNodePoolNodeConfigHostMaintenancePolicyPtrOutput values.
// You can construct a concrete instance of `ClusterNodePoolNodeConfigHostMaintenancePolicyPtrInput` via:
//
//	        ClusterNodePoolNodeConfigHostMaintenancePolicyArgs{...}
//
//	or:
//
//	        nil
type ClusterNodePoolNodeConfigHostMaintenancePolicyPtrInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigHostMaintenancePolicyPtrOutput() ClusterNodePoolNodeConfigHostMaintenancePolicyPtrOutput
	ToClusterNodePoolNodeConfigHostMaintenancePolicyPtrOutputWithContext(context.Context) ClusterNodePoolNodeConfigHostMaintenancePolicyPtrOutput
}

type clusterNodePoolNodeConfigHostMaintenancePolicyPtrType ClusterNodePoolNodeConfigHostMaintenancePolicyArgs

func ClusterNodePoolNodeConfigHostMaintenancePolicyPtr(v *ClusterNodePoolNodeConfigHostMaintenancePolicyArgs) ClusterNodePoolNodeConfigHostMaintenancePolicyPtrInput {
	return (*clusterNodePoolNodeConfigHostMaintenancePolicyPtrType)(v)
}

func (*clusterNodePoolNodeConfigHostMaintenancePolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolNodeConfigHostMaintenancePolicy)(nil)).Elem()
}

func (i *clusterNodePoolNodeConfigHostMaintenancePolicyPtrType) ToClusterNodePoolNodeConfigHostMaintenancePolicyPtrOutput() ClusterNodePoolNodeConfigHostMaintenancePolicyPtrOutput {
	return i.ToClusterNodePoolNodeConfigHostMaintenancePolicyPtrOutputWithContext(context.Background())
}

func (i *clusterNodePoolNodeConfigHostMaintenancePolicyPtrType) ToClusterNodePoolNodeConfigHostMaintenancePolicyPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigHostMaintenancePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigHostMaintenancePolicyPtrOutput)
}

type ClusterNodePoolNodeConfigHostMaintenancePolicyOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigHostMaintenancePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfigHostMaintenancePolicy)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigHostMaintenancePolicyOutput) ToClusterNodePoolNodeConfigHostMaintenancePolicyOutput() ClusterNodePoolNodeConfigHostMaintenancePolicyOutput {
	return o
}

func (o ClusterNodePoolNodeConfigHostMaintenancePolicyOutput) ToClusterNodePoolNodeConfigHostMaintenancePolicyOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigHostMaintenancePolicyOutput {
	return o
}

func (o ClusterNodePoolNodeConfigHostMaintenancePolicyOutput) ToClusterNodePoolNodeConfigHostMaintenancePolicyPtrOutput() ClusterNodePoolNodeConfigHostMaintenancePolicyPtrOutput {
	return o.ToClusterNodePoolNodeConfigHostMaintenancePolicyPtrOutputWithContext(context.Background())
}

func (o ClusterNodePoolNodeConfigHostMaintenancePolicyOutput) ToClusterNodePoolNodeConfigHostMaintenancePolicyPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigHostMaintenancePolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterNodePoolNodeConfigHostMaintenancePolicy) *ClusterNodePoolNodeConfigHostMaintenancePolicy {
		return &v
	}).(ClusterNodePoolNodeConfigHostMaintenancePolicyPtrOutput)
}

// .
func (o ClusterNodePoolNodeConfigHostMaintenancePolicyOutput) MaintenanceInterval() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigHostMaintenancePolicy) string { return v.MaintenanceInterval }).(pulumi.StringOutput)
}

type ClusterNodePoolNodeConfigHostMaintenancePolicyPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigHostMaintenancePolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolNodeConfigHostMaintenancePolicy)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigHostMaintenancePolicyPtrOutput) ToClusterNodePoolNodeConfigHostMaintenancePolicyPtrOutput() ClusterNodePoolNodeConfigHostMaintenancePolicyPtrOutput {
	return o
}

func (o ClusterNodePoolNodeConfigHostMaintenancePolicyPtrOutput) ToClusterNodePoolNodeConfigHostMaintenancePolicyPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigHostMaintenancePolicyPtrOutput {
	return o
}

func (o ClusterNodePoolNodeConfigHostMaintenancePolicyPtrOutput) Elem() ClusterNodePoolNodeConfigHostMaintenancePolicyOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfigHostMaintenancePolicy) ClusterNodePoolNodeConfigHostMaintenancePolicy {
		if v != nil {
			return *v
		}
		var ret ClusterNodePoolNodeConfigHostMaintenancePolicy
		return ret
	}).(ClusterNodePoolNodeConfigHostMaintenancePolicyOutput)
}

// .
func (o ClusterNodePoolNodeConfigHostMaintenancePolicyPtrOutput) MaintenanceInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfigHostMaintenancePolicy) *string {
		if v == nil {
			return nil
		}
		return &v.MaintenanceInterval
	}).(pulumi.StringPtrOutput)
}

type ClusterNodePoolNodeConfigKubeletConfig struct {
	// If true, enables CPU CFS quota enforcement for
	// containers that specify CPU limits.
	CpuCfsQuota *bool `pulumi:"cpuCfsQuota"`
	// The CPU CFS quota period value. Specified
	// as a sequence of decimal numbers, each with optional fraction and a unit suffix,
	// such as `"300ms"`. Valid time units are "ns", "us" (or "µs"), "ms", "s", "m",
	// "h". The value must be a positive duration.
	//
	// > Note: At the time of writing (2020/08/18) the GKE API rejects the `none`
	// value and accepts an invalid `default` value instead. While this remains true,
	// not specifying the `kubeletConfig` block should be the equivalent of specifying
	// `none`.
	CpuCfsQuotaPeriod *string `pulumi:"cpuCfsQuotaPeriod"`
	// The CPU management policy on the node. See
	// [K8S CPU Management Policies](https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/).
	// One of `"none"` or `"static"`. Defaults to `none` when `kubeletConfig` is unset.
	CpuManagerPolicy string `pulumi:"cpuManagerPolicy"`
	// Controls the maximum number of processes allowed to run in a pod. The value must be greater than or equal to 1024 and less than 4194304.
	PodPidsLimit *int `pulumi:"podPidsLimit"`
}

// ClusterNodePoolNodeConfigKubeletConfigInput is an input type that accepts ClusterNodePoolNodeConfigKubeletConfigArgs and ClusterNodePoolNodeConfigKubeletConfigOutput values.
// You can construct a concrete instance of `ClusterNodePoolNodeConfigKubeletConfigInput` via:
//
//	ClusterNodePoolNodeConfigKubeletConfigArgs{...}
type ClusterNodePoolNodeConfigKubeletConfigInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigKubeletConfigOutput() ClusterNodePoolNodeConfigKubeletConfigOutput
	ToClusterNodePoolNodeConfigKubeletConfigOutputWithContext(context.Context) ClusterNodePoolNodeConfigKubeletConfigOutput
}

type ClusterNodePoolNodeConfigKubeletConfigArgs struct {
	// If true, enables CPU CFS quota enforcement for
	// containers that specify CPU limits.
	CpuCfsQuota pulumi.BoolPtrInput `pulumi:"cpuCfsQuota"`
	// The CPU CFS quota period value. Specified
	// as a sequence of decimal numbers, each with optional fraction and a unit suffix,
	// such as `"300ms"`. Valid time units are "ns", "us" (or "µs"), "ms", "s", "m",
	// "h". The value must be a positive duration.
	//
	// > Note: At the time of writing (2020/08/18) the GKE API rejects the `none`
	// value and accepts an invalid `default` value instead. While this remains true,
	// not specifying the `kubeletConfig` block should be the equivalent of specifying
	// `none`.
	CpuCfsQuotaPeriod pulumi.StringPtrInput `pulumi:"cpuCfsQuotaPeriod"`
	// The CPU management policy on the node. See
	// [K8S CPU Management Policies](https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/).
	// One of `"none"` or `"static"`. Defaults to `none` when `kubeletConfig` is unset.
	CpuManagerPolicy pulumi.StringInput `pulumi:"cpuManagerPolicy"`
	// Controls the maximum number of processes allowed to run in a pod. The value must be greater than or equal to 1024 and less than 4194304.
	PodPidsLimit pulumi.IntPtrInput `pulumi:"podPidsLimit"`
}

func (ClusterNodePoolNodeConfigKubeletConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfigKubeletConfig)(nil)).Elem()
}

func (i ClusterNodePoolNodeConfigKubeletConfigArgs) ToClusterNodePoolNodeConfigKubeletConfigOutput() ClusterNodePoolNodeConfigKubeletConfigOutput {
	return i.ToClusterNodePoolNodeConfigKubeletConfigOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigKubeletConfigArgs) ToClusterNodePoolNodeConfigKubeletConfigOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigKubeletConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigKubeletConfigOutput)
}

func (i ClusterNodePoolNodeConfigKubeletConfigArgs) ToClusterNodePoolNodeConfigKubeletConfigPtrOutput() ClusterNodePoolNodeConfigKubeletConfigPtrOutput {
	return i.ToClusterNodePoolNodeConfigKubeletConfigPtrOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigKubeletConfigArgs) ToClusterNodePoolNodeConfigKubeletConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigKubeletConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigKubeletConfigOutput).ToClusterNodePoolNodeConfigKubeletConfigPtrOutputWithContext(ctx)
}

// ClusterNodePoolNodeConfigKubeletConfigPtrInput is an input type that accepts ClusterNodePoolNodeConfigKubeletConfigArgs, ClusterNodePoolNodeConfigKubeletConfigPtr and ClusterNodePoolNodeConfigKubeletConfigPtrOutput values.
// You can construct a concrete instance of `ClusterNodePoolNodeConfigKubeletConfigPtrInput` via:
//
//	        ClusterNodePoolNodeConfigKubeletConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterNodePoolNodeConfigKubeletConfigPtrInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigKubeletConfigPtrOutput() ClusterNodePoolNodeConfigKubeletConfigPtrOutput
	ToClusterNodePoolNodeConfigKubeletConfigPtrOutputWithContext(context.Context) ClusterNodePoolNodeConfigKubeletConfigPtrOutput
}

type clusterNodePoolNodeConfigKubeletConfigPtrType ClusterNodePoolNodeConfigKubeletConfigArgs

func ClusterNodePoolNodeConfigKubeletConfigPtr(v *ClusterNodePoolNodeConfigKubeletConfigArgs) ClusterNodePoolNodeConfigKubeletConfigPtrInput {
	return (*clusterNodePoolNodeConfigKubeletConfigPtrType)(v)
}

func (*clusterNodePoolNodeConfigKubeletConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolNodeConfigKubeletConfig)(nil)).Elem()
}

func (i *clusterNodePoolNodeConfigKubeletConfigPtrType) ToClusterNodePoolNodeConfigKubeletConfigPtrOutput() ClusterNodePoolNodeConfigKubeletConfigPtrOutput {
	return i.ToClusterNodePoolNodeConfigKubeletConfigPtrOutputWithContext(context.Background())
}

func (i *clusterNodePoolNodeConfigKubeletConfigPtrType) ToClusterNodePoolNodeConfigKubeletConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigKubeletConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigKubeletConfigPtrOutput)
}

type ClusterNodePoolNodeConfigKubeletConfigOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigKubeletConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfigKubeletConfig)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigKubeletConfigOutput) ToClusterNodePoolNodeConfigKubeletConfigOutput() ClusterNodePoolNodeConfigKubeletConfigOutput {
	return o
}

func (o ClusterNodePoolNodeConfigKubeletConfigOutput) ToClusterNodePoolNodeConfigKubeletConfigOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigKubeletConfigOutput {
	return o
}

func (o ClusterNodePoolNodeConfigKubeletConfigOutput) ToClusterNodePoolNodeConfigKubeletConfigPtrOutput() ClusterNodePoolNodeConfigKubeletConfigPtrOutput {
	return o.ToClusterNodePoolNodeConfigKubeletConfigPtrOutputWithContext(context.Background())
}

func (o ClusterNodePoolNodeConfigKubeletConfigOutput) ToClusterNodePoolNodeConfigKubeletConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigKubeletConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterNodePoolNodeConfigKubeletConfig) *ClusterNodePoolNodeConfigKubeletConfig {
		return &v
	}).(ClusterNodePoolNodeConfigKubeletConfigPtrOutput)
}

// If true, enables CPU CFS quota enforcement for
// containers that specify CPU limits.
func (o ClusterNodePoolNodeConfigKubeletConfigOutput) CpuCfsQuota() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigKubeletConfig) *bool { return v.CpuCfsQuota }).(pulumi.BoolPtrOutput)
}

// The CPU CFS quota period value. Specified
// as a sequence of decimal numbers, each with optional fraction and a unit suffix,
// such as `"300ms"`. Valid time units are "ns", "us" (or "µs"), "ms", "s", "m",
// "h". The value must be a positive duration.
//
// > Note: At the time of writing (2020/08/18) the GKE API rejects the `none`
// value and accepts an invalid `default` value instead. While this remains true,
// not specifying the `kubeletConfig` block should be the equivalent of specifying
// `none`.
func (o ClusterNodePoolNodeConfigKubeletConfigOutput) CpuCfsQuotaPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigKubeletConfig) *string { return v.CpuCfsQuotaPeriod }).(pulumi.StringPtrOutput)
}

// The CPU management policy on the node. See
// [K8S CPU Management Policies](https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/).
// One of `"none"` or `"static"`. Defaults to `none` when `kubeletConfig` is unset.
func (o ClusterNodePoolNodeConfigKubeletConfigOutput) CpuManagerPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigKubeletConfig) string { return v.CpuManagerPolicy }).(pulumi.StringOutput)
}

// Controls the maximum number of processes allowed to run in a pod. The value must be greater than or equal to 1024 and less than 4194304.
func (o ClusterNodePoolNodeConfigKubeletConfigOutput) PodPidsLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigKubeletConfig) *int { return v.PodPidsLimit }).(pulumi.IntPtrOutput)
}

type ClusterNodePoolNodeConfigKubeletConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigKubeletConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolNodeConfigKubeletConfig)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigKubeletConfigPtrOutput) ToClusterNodePoolNodeConfigKubeletConfigPtrOutput() ClusterNodePoolNodeConfigKubeletConfigPtrOutput {
	return o
}

func (o ClusterNodePoolNodeConfigKubeletConfigPtrOutput) ToClusterNodePoolNodeConfigKubeletConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigKubeletConfigPtrOutput {
	return o
}

func (o ClusterNodePoolNodeConfigKubeletConfigPtrOutput) Elem() ClusterNodePoolNodeConfigKubeletConfigOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfigKubeletConfig) ClusterNodePoolNodeConfigKubeletConfig {
		if v != nil {
			return *v
		}
		var ret ClusterNodePoolNodeConfigKubeletConfig
		return ret
	}).(ClusterNodePoolNodeConfigKubeletConfigOutput)
}

// If true, enables CPU CFS quota enforcement for
// containers that specify CPU limits.
func (o ClusterNodePoolNodeConfigKubeletConfigPtrOutput) CpuCfsQuota() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfigKubeletConfig) *bool {
		if v == nil {
			return nil
		}
		return v.CpuCfsQuota
	}).(pulumi.BoolPtrOutput)
}

// The CPU CFS quota period value. Specified
// as a sequence of decimal numbers, each with optional fraction and a unit suffix,
// such as `"300ms"`. Valid time units are "ns", "us" (or "µs"), "ms", "s", "m",
// "h". The value must be a positive duration.
//
// > Note: At the time of writing (2020/08/18) the GKE API rejects the `none`
// value and accepts an invalid `default` value instead. While this remains true,
// not specifying the `kubeletConfig` block should be the equivalent of specifying
// `none`.
func (o ClusterNodePoolNodeConfigKubeletConfigPtrOutput) CpuCfsQuotaPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfigKubeletConfig) *string {
		if v == nil {
			return nil
		}
		return v.CpuCfsQuotaPeriod
	}).(pulumi.StringPtrOutput)
}

// The CPU management policy on the node. See
// [K8S CPU Management Policies](https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/).
// One of `"none"` or `"static"`. Defaults to `none` when `kubeletConfig` is unset.
func (o ClusterNodePoolNodeConfigKubeletConfigPtrOutput) CpuManagerPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfigKubeletConfig) *string {
		if v == nil {
			return nil
		}
		return &v.CpuManagerPolicy
	}).(pulumi.StringPtrOutput)
}

// Controls the maximum number of processes allowed to run in a pod. The value must be greater than or equal to 1024 and less than 4194304.
func (o ClusterNodePoolNodeConfigKubeletConfigPtrOutput) PodPidsLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfigKubeletConfig) *int {
		if v == nil {
			return nil
		}
		return v.PodPidsLimit
	}).(pulumi.IntPtrOutput)
}

type ClusterNodePoolNodeConfigLinuxNodeConfig struct {
	// Possible cgroup modes that can be used.
	// Accepted values are:
	CgroupMode *string `pulumi:"cgroupMode"`
	// The Linux kernel parameters to be applied to the nodes
	// and all pods running on the nodes. Specified as a map from the key, such as
	// `net.core.wmem_max`, to a string value. Currently supported attributes can be found [here](https://cloud.google.com/sdk/gcloud/reference/beta/container/node-pools/create#--system-config-from-file).
	// Note that validations happen all server side. All attributes are optional.
	Sysctls map[string]string `pulumi:"sysctls"`
}

// ClusterNodePoolNodeConfigLinuxNodeConfigInput is an input type that accepts ClusterNodePoolNodeConfigLinuxNodeConfigArgs and ClusterNodePoolNodeConfigLinuxNodeConfigOutput values.
// You can construct a concrete instance of `ClusterNodePoolNodeConfigLinuxNodeConfigInput` via:
//
//	ClusterNodePoolNodeConfigLinuxNodeConfigArgs{...}
type ClusterNodePoolNodeConfigLinuxNodeConfigInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigLinuxNodeConfigOutput() ClusterNodePoolNodeConfigLinuxNodeConfigOutput
	ToClusterNodePoolNodeConfigLinuxNodeConfigOutputWithContext(context.Context) ClusterNodePoolNodeConfigLinuxNodeConfigOutput
}

type ClusterNodePoolNodeConfigLinuxNodeConfigArgs struct {
	// Possible cgroup modes that can be used.
	// Accepted values are:
	CgroupMode pulumi.StringPtrInput `pulumi:"cgroupMode"`
	// The Linux kernel parameters to be applied to the nodes
	// and all pods running on the nodes. Specified as a map from the key, such as
	// `net.core.wmem_max`, to a string value. Currently supported attributes can be found [here](https://cloud.google.com/sdk/gcloud/reference/beta/container/node-pools/create#--system-config-from-file).
	// Note that validations happen all server side. All attributes are optional.
	Sysctls pulumi.StringMapInput `pulumi:"sysctls"`
}

func (ClusterNodePoolNodeConfigLinuxNodeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfigLinuxNodeConfig)(nil)).Elem()
}

func (i ClusterNodePoolNodeConfigLinuxNodeConfigArgs) ToClusterNodePoolNodeConfigLinuxNodeConfigOutput() ClusterNodePoolNodeConfigLinuxNodeConfigOutput {
	return i.ToClusterNodePoolNodeConfigLinuxNodeConfigOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigLinuxNodeConfigArgs) ToClusterNodePoolNodeConfigLinuxNodeConfigOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigLinuxNodeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigLinuxNodeConfigOutput)
}

func (i ClusterNodePoolNodeConfigLinuxNodeConfigArgs) ToClusterNodePoolNodeConfigLinuxNodeConfigPtrOutput() ClusterNodePoolNodeConfigLinuxNodeConfigPtrOutput {
	return i.ToClusterNodePoolNodeConfigLinuxNodeConfigPtrOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigLinuxNodeConfigArgs) ToClusterNodePoolNodeConfigLinuxNodeConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigLinuxNodeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigLinuxNodeConfigOutput).ToClusterNodePoolNodeConfigLinuxNodeConfigPtrOutputWithContext(ctx)
}

// ClusterNodePoolNodeConfigLinuxNodeConfigPtrInput is an input type that accepts ClusterNodePoolNodeConfigLinuxNodeConfigArgs, ClusterNodePoolNodeConfigLinuxNodeConfigPtr and ClusterNodePoolNodeConfigLinuxNodeConfigPtrOutput values.
// You can construct a concrete instance of `ClusterNodePoolNodeConfigLinuxNodeConfigPtrInput` via:
//
//	        ClusterNodePoolNodeConfigLinuxNodeConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterNodePoolNodeConfigLinuxNodeConfigPtrInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigLinuxNodeConfigPtrOutput() ClusterNodePoolNodeConfigLinuxNodeConfigPtrOutput
	ToClusterNodePoolNodeConfigLinuxNodeConfigPtrOutputWithContext(context.Context) ClusterNodePoolNodeConfigLinuxNodeConfigPtrOutput
}

type clusterNodePoolNodeConfigLinuxNodeConfigPtrType ClusterNodePoolNodeConfigLinuxNodeConfigArgs

func ClusterNodePoolNodeConfigLinuxNodeConfigPtr(v *ClusterNodePoolNodeConfigLinuxNodeConfigArgs) ClusterNodePoolNodeConfigLinuxNodeConfigPtrInput {
	return (*clusterNodePoolNodeConfigLinuxNodeConfigPtrType)(v)
}

func (*clusterNodePoolNodeConfigLinuxNodeConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolNodeConfigLinuxNodeConfig)(nil)).Elem()
}

func (i *clusterNodePoolNodeConfigLinuxNodeConfigPtrType) ToClusterNodePoolNodeConfigLinuxNodeConfigPtrOutput() ClusterNodePoolNodeConfigLinuxNodeConfigPtrOutput {
	return i.ToClusterNodePoolNodeConfigLinuxNodeConfigPtrOutputWithContext(context.Background())
}

func (i *clusterNodePoolNodeConfigLinuxNodeConfigPtrType) ToClusterNodePoolNodeConfigLinuxNodeConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigLinuxNodeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigLinuxNodeConfigPtrOutput)
}

type ClusterNodePoolNodeConfigLinuxNodeConfigOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigLinuxNodeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfigLinuxNodeConfig)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigLinuxNodeConfigOutput) ToClusterNodePoolNodeConfigLinuxNodeConfigOutput() ClusterNodePoolNodeConfigLinuxNodeConfigOutput {
	return o
}

func (o ClusterNodePoolNodeConfigLinuxNodeConfigOutput) ToClusterNodePoolNodeConfigLinuxNodeConfigOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigLinuxNodeConfigOutput {
	return o
}

func (o ClusterNodePoolNodeConfigLinuxNodeConfigOutput) ToClusterNodePoolNodeConfigLinuxNodeConfigPtrOutput() ClusterNodePoolNodeConfigLinuxNodeConfigPtrOutput {
	return o.ToClusterNodePoolNodeConfigLinuxNodeConfigPtrOutputWithContext(context.Background())
}

func (o ClusterNodePoolNodeConfigLinuxNodeConfigOutput) ToClusterNodePoolNodeConfigLinuxNodeConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigLinuxNodeConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterNodePoolNodeConfigLinuxNodeConfig) *ClusterNodePoolNodeConfigLinuxNodeConfig {
		return &v
	}).(ClusterNodePoolNodeConfigLinuxNodeConfigPtrOutput)
}

// Possible cgroup modes that can be used.
// Accepted values are:
func (o ClusterNodePoolNodeConfigLinuxNodeConfigOutput) CgroupMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigLinuxNodeConfig) *string { return v.CgroupMode }).(pulumi.StringPtrOutput)
}

// The Linux kernel parameters to be applied to the nodes
// and all pods running on the nodes. Specified as a map from the key, such as
// `net.core.wmem_max`, to a string value. Currently supported attributes can be found [here](https://cloud.google.com/sdk/gcloud/reference/beta/container/node-pools/create#--system-config-from-file).
// Note that validations happen all server side. All attributes are optional.
func (o ClusterNodePoolNodeConfigLinuxNodeConfigOutput) Sysctls() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigLinuxNodeConfig) map[string]string { return v.Sysctls }).(pulumi.StringMapOutput)
}

type ClusterNodePoolNodeConfigLinuxNodeConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigLinuxNodeConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolNodeConfigLinuxNodeConfig)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigLinuxNodeConfigPtrOutput) ToClusterNodePoolNodeConfigLinuxNodeConfigPtrOutput() ClusterNodePoolNodeConfigLinuxNodeConfigPtrOutput {
	return o
}

func (o ClusterNodePoolNodeConfigLinuxNodeConfigPtrOutput) ToClusterNodePoolNodeConfigLinuxNodeConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigLinuxNodeConfigPtrOutput {
	return o
}

func (o ClusterNodePoolNodeConfigLinuxNodeConfigPtrOutput) Elem() ClusterNodePoolNodeConfigLinuxNodeConfigOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfigLinuxNodeConfig) ClusterNodePoolNodeConfigLinuxNodeConfig {
		if v != nil {
			return *v
		}
		var ret ClusterNodePoolNodeConfigLinuxNodeConfig
		return ret
	}).(ClusterNodePoolNodeConfigLinuxNodeConfigOutput)
}

// Possible cgroup modes that can be used.
// Accepted values are:
func (o ClusterNodePoolNodeConfigLinuxNodeConfigPtrOutput) CgroupMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfigLinuxNodeConfig) *string {
		if v == nil {
			return nil
		}
		return v.CgroupMode
	}).(pulumi.StringPtrOutput)
}

// The Linux kernel parameters to be applied to the nodes
// and all pods running on the nodes. Specified as a map from the key, such as
// `net.core.wmem_max`, to a string value. Currently supported attributes can be found [here](https://cloud.google.com/sdk/gcloud/reference/beta/container/node-pools/create#--system-config-from-file).
// Note that validations happen all server side. All attributes are optional.
func (o ClusterNodePoolNodeConfigLinuxNodeConfigPtrOutput) Sysctls() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfigLinuxNodeConfig) map[string]string {
		if v == nil {
			return nil
		}
		return v.Sysctls
	}).(pulumi.StringMapOutput)
}

type ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfig struct {
	// Number of raw-block local NVMe SSD disks to be attached to the node. Each local SSD is 375 GB in size. If zero, it means no raw-block local NVMe SSD disks to be attached to the node.
	// > Note: Local NVMe SSD storage available in GKE versions v1.25.3-gke.1800 and later.
	LocalSsdCount int `pulumi:"localSsdCount"`
}

// ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigInput is an input type that accepts ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigArgs and ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigOutput values.
// You can construct a concrete instance of `ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigInput` via:
//
//	ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigArgs{...}
type ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigOutput() ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigOutput
	ToClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigOutputWithContext(context.Context) ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigOutput
}

type ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigArgs struct {
	// Number of raw-block local NVMe SSD disks to be attached to the node. Each local SSD is 375 GB in size. If zero, it means no raw-block local NVMe SSD disks to be attached to the node.
	// > Note: Local NVMe SSD storage available in GKE versions v1.25.3-gke.1800 and later.
	LocalSsdCount pulumi.IntInput `pulumi:"localSsdCount"`
}

func (ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfig)(nil)).Elem()
}

func (i ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigArgs) ToClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigOutput() ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigOutput {
	return i.ToClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigArgs) ToClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigOutput)
}

func (i ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigArgs) ToClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigPtrOutput() ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigPtrOutput {
	return i.ToClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigPtrOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigArgs) ToClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigOutput).ToClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigPtrOutputWithContext(ctx)
}

// ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigPtrInput is an input type that accepts ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigArgs, ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigPtr and ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigPtrOutput values.
// You can construct a concrete instance of `ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigPtrInput` via:
//
//	        ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigPtrInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigPtrOutput() ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigPtrOutput
	ToClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigPtrOutputWithContext(context.Context) ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigPtrOutput
}

type clusterNodePoolNodeConfigLocalNvmeSsdBlockConfigPtrType ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigArgs

func ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigPtr(v *ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigArgs) ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigPtrInput {
	return (*clusterNodePoolNodeConfigLocalNvmeSsdBlockConfigPtrType)(v)
}

func (*clusterNodePoolNodeConfigLocalNvmeSsdBlockConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfig)(nil)).Elem()
}

func (i *clusterNodePoolNodeConfigLocalNvmeSsdBlockConfigPtrType) ToClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigPtrOutput() ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigPtrOutput {
	return i.ToClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigPtrOutputWithContext(context.Background())
}

func (i *clusterNodePoolNodeConfigLocalNvmeSsdBlockConfigPtrType) ToClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigPtrOutput)
}

type ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfig)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigOutput) ToClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigOutput() ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigOutput {
	return o
}

func (o ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigOutput) ToClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigOutput {
	return o
}

func (o ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigOutput) ToClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigPtrOutput() ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigPtrOutput {
	return o.ToClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigPtrOutputWithContext(context.Background())
}

func (o ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigOutput) ToClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfig) *ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfig {
		return &v
	}).(ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigPtrOutput)
}

// Number of raw-block local NVMe SSD disks to be attached to the node. Each local SSD is 375 GB in size. If zero, it means no raw-block local NVMe SSD disks to be attached to the node.
// > Note: Local NVMe SSD storage available in GKE versions v1.25.3-gke.1800 and later.
func (o ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigOutput) LocalSsdCount() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfig) int { return v.LocalSsdCount }).(pulumi.IntOutput)
}

type ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfig)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigPtrOutput) ToClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigPtrOutput() ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigPtrOutput {
	return o
}

func (o ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigPtrOutput) ToClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigPtrOutput {
	return o
}

func (o ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigPtrOutput) Elem() ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfig) ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfig {
		if v != nil {
			return *v
		}
		var ret ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfig
		return ret
	}).(ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigOutput)
}

// Number of raw-block local NVMe SSD disks to be attached to the node. Each local SSD is 375 GB in size. If zero, it means no raw-block local NVMe SSD disks to be attached to the node.
// > Note: Local NVMe SSD storage available in GKE versions v1.25.3-gke.1800 and later.
func (o ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigPtrOutput) LocalSsdCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfig) *int {
		if v == nil {
			return nil
		}
		return &v.LocalSsdCount
	}).(pulumi.IntPtrOutput)
}

type ClusterNodePoolNodeConfigReservationAffinity struct {
	// The type of reservation consumption
	// Accepted values are:
	//
	// * `"UNSPECIFIED"`: Default value. This should not be used.
	// * `"NO_RESERVATION"`: Do not consume from any reserved capacity.
	// * `"ANY_RESERVATION"`: Consume any reservation available.
	// * `"SPECIFIC_RESERVATION"`: Must consume from a specific reservation. Must specify key value fields for specifying the reservations.
	ConsumeReservationType string `pulumi:"consumeReservationType"`
	// The label key of a reservation resource. To target a SPECIFIC_RESERVATION by name, specify "compute.googleapis.com/reservation-name" as the key and specify the name of your reservation as its value.
	Key *string `pulumi:"key"`
	// The list of label values of reservation resources. For example: the name of the specific reservation when using a key of "compute.googleapis.com/reservation-name"
	Values []string `pulumi:"values"`
}

// ClusterNodePoolNodeConfigReservationAffinityInput is an input type that accepts ClusterNodePoolNodeConfigReservationAffinityArgs and ClusterNodePoolNodeConfigReservationAffinityOutput values.
// You can construct a concrete instance of `ClusterNodePoolNodeConfigReservationAffinityInput` via:
//
//	ClusterNodePoolNodeConfigReservationAffinityArgs{...}
type ClusterNodePoolNodeConfigReservationAffinityInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigReservationAffinityOutput() ClusterNodePoolNodeConfigReservationAffinityOutput
	ToClusterNodePoolNodeConfigReservationAffinityOutputWithContext(context.Context) ClusterNodePoolNodeConfigReservationAffinityOutput
}

type ClusterNodePoolNodeConfigReservationAffinityArgs struct {
	// The type of reservation consumption
	// Accepted values are:
	//
	// * `"UNSPECIFIED"`: Default value. This should not be used.
	// * `"NO_RESERVATION"`: Do not consume from any reserved capacity.
	// * `"ANY_RESERVATION"`: Consume any reservation available.
	// * `"SPECIFIC_RESERVATION"`: Must consume from a specific reservation. Must specify key value fields for specifying the reservations.
	ConsumeReservationType pulumi.StringInput `pulumi:"consumeReservationType"`
	// The label key of a reservation resource. To target a SPECIFIC_RESERVATION by name, specify "compute.googleapis.com/reservation-name" as the key and specify the name of your reservation as its value.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The list of label values of reservation resources. For example: the name of the specific reservation when using a key of "compute.googleapis.com/reservation-name"
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ClusterNodePoolNodeConfigReservationAffinityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfigReservationAffinity)(nil)).Elem()
}

func (i ClusterNodePoolNodeConfigReservationAffinityArgs) ToClusterNodePoolNodeConfigReservationAffinityOutput() ClusterNodePoolNodeConfigReservationAffinityOutput {
	return i.ToClusterNodePoolNodeConfigReservationAffinityOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigReservationAffinityArgs) ToClusterNodePoolNodeConfigReservationAffinityOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigReservationAffinityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigReservationAffinityOutput)
}

func (i ClusterNodePoolNodeConfigReservationAffinityArgs) ToClusterNodePoolNodeConfigReservationAffinityPtrOutput() ClusterNodePoolNodeConfigReservationAffinityPtrOutput {
	return i.ToClusterNodePoolNodeConfigReservationAffinityPtrOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigReservationAffinityArgs) ToClusterNodePoolNodeConfigReservationAffinityPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigReservationAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigReservationAffinityOutput).ToClusterNodePoolNodeConfigReservationAffinityPtrOutputWithContext(ctx)
}

// ClusterNodePoolNodeConfigReservationAffinityPtrInput is an input type that accepts ClusterNodePoolNodeConfigReservationAffinityArgs, ClusterNodePoolNodeConfigReservationAffinityPtr and ClusterNodePoolNodeConfigReservationAffinityPtrOutput values.
// You can construct a concrete instance of `ClusterNodePoolNodeConfigReservationAffinityPtrInput` via:
//
//	        ClusterNodePoolNodeConfigReservationAffinityArgs{...}
//
//	or:
//
//	        nil
type ClusterNodePoolNodeConfigReservationAffinityPtrInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigReservationAffinityPtrOutput() ClusterNodePoolNodeConfigReservationAffinityPtrOutput
	ToClusterNodePoolNodeConfigReservationAffinityPtrOutputWithContext(context.Context) ClusterNodePoolNodeConfigReservationAffinityPtrOutput
}

type clusterNodePoolNodeConfigReservationAffinityPtrType ClusterNodePoolNodeConfigReservationAffinityArgs

func ClusterNodePoolNodeConfigReservationAffinityPtr(v *ClusterNodePoolNodeConfigReservationAffinityArgs) ClusterNodePoolNodeConfigReservationAffinityPtrInput {
	return (*clusterNodePoolNodeConfigReservationAffinityPtrType)(v)
}

func (*clusterNodePoolNodeConfigReservationAffinityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolNodeConfigReservationAffinity)(nil)).Elem()
}

func (i *clusterNodePoolNodeConfigReservationAffinityPtrType) ToClusterNodePoolNodeConfigReservationAffinityPtrOutput() ClusterNodePoolNodeConfigReservationAffinityPtrOutput {
	return i.ToClusterNodePoolNodeConfigReservationAffinityPtrOutputWithContext(context.Background())
}

func (i *clusterNodePoolNodeConfigReservationAffinityPtrType) ToClusterNodePoolNodeConfigReservationAffinityPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigReservationAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigReservationAffinityPtrOutput)
}

type ClusterNodePoolNodeConfigReservationAffinityOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigReservationAffinityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfigReservationAffinity)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigReservationAffinityOutput) ToClusterNodePoolNodeConfigReservationAffinityOutput() ClusterNodePoolNodeConfigReservationAffinityOutput {
	return o
}

func (o ClusterNodePoolNodeConfigReservationAffinityOutput) ToClusterNodePoolNodeConfigReservationAffinityOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigReservationAffinityOutput {
	return o
}

func (o ClusterNodePoolNodeConfigReservationAffinityOutput) ToClusterNodePoolNodeConfigReservationAffinityPtrOutput() ClusterNodePoolNodeConfigReservationAffinityPtrOutput {
	return o.ToClusterNodePoolNodeConfigReservationAffinityPtrOutputWithContext(context.Background())
}

func (o ClusterNodePoolNodeConfigReservationAffinityOutput) ToClusterNodePoolNodeConfigReservationAffinityPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigReservationAffinityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterNodePoolNodeConfigReservationAffinity) *ClusterNodePoolNodeConfigReservationAffinity {
		return &v
	}).(ClusterNodePoolNodeConfigReservationAffinityPtrOutput)
}

// The type of reservation consumption
// Accepted values are:
//
// * `"UNSPECIFIED"`: Default value. This should not be used.
// * `"NO_RESERVATION"`: Do not consume from any reserved capacity.
// * `"ANY_RESERVATION"`: Consume any reservation available.
// * `"SPECIFIC_RESERVATION"`: Must consume from a specific reservation. Must specify key value fields for specifying the reservations.
func (o ClusterNodePoolNodeConfigReservationAffinityOutput) ConsumeReservationType() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigReservationAffinity) string { return v.ConsumeReservationType }).(pulumi.StringOutput)
}

// The label key of a reservation resource. To target a SPECIFIC_RESERVATION by name, specify "compute.googleapis.com/reservation-name" as the key and specify the name of your reservation as its value.
func (o ClusterNodePoolNodeConfigReservationAffinityOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigReservationAffinity) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The list of label values of reservation resources. For example: the name of the specific reservation when using a key of "compute.googleapis.com/reservation-name"
func (o ClusterNodePoolNodeConfigReservationAffinityOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigReservationAffinity) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type ClusterNodePoolNodeConfigReservationAffinityPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigReservationAffinityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolNodeConfigReservationAffinity)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigReservationAffinityPtrOutput) ToClusterNodePoolNodeConfigReservationAffinityPtrOutput() ClusterNodePoolNodeConfigReservationAffinityPtrOutput {
	return o
}

func (o ClusterNodePoolNodeConfigReservationAffinityPtrOutput) ToClusterNodePoolNodeConfigReservationAffinityPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigReservationAffinityPtrOutput {
	return o
}

func (o ClusterNodePoolNodeConfigReservationAffinityPtrOutput) Elem() ClusterNodePoolNodeConfigReservationAffinityOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfigReservationAffinity) ClusterNodePoolNodeConfigReservationAffinity {
		if v != nil {
			return *v
		}
		var ret ClusterNodePoolNodeConfigReservationAffinity
		return ret
	}).(ClusterNodePoolNodeConfigReservationAffinityOutput)
}

// The type of reservation consumption
// Accepted values are:
//
// * `"UNSPECIFIED"`: Default value. This should not be used.
// * `"NO_RESERVATION"`: Do not consume from any reserved capacity.
// * `"ANY_RESERVATION"`: Consume any reservation available.
// * `"SPECIFIC_RESERVATION"`: Must consume from a specific reservation. Must specify key value fields for specifying the reservations.
func (o ClusterNodePoolNodeConfigReservationAffinityPtrOutput) ConsumeReservationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfigReservationAffinity) *string {
		if v == nil {
			return nil
		}
		return &v.ConsumeReservationType
	}).(pulumi.StringPtrOutput)
}

// The label key of a reservation resource. To target a SPECIFIC_RESERVATION by name, specify "compute.googleapis.com/reservation-name" as the key and specify the name of your reservation as its value.
func (o ClusterNodePoolNodeConfigReservationAffinityPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfigReservationAffinity) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The list of label values of reservation resources. For example: the name of the specific reservation when using a key of "compute.googleapis.com/reservation-name"
func (o ClusterNodePoolNodeConfigReservationAffinityPtrOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfigReservationAffinity) []string {
		if v == nil {
			return nil
		}
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type ClusterNodePoolNodeConfigSandboxConfig struct {
	// Which sandbox to use for pods in the node pool.
	// Accepted values are:
	//
	// * `"gvisor"`: Pods run within a gVisor sandbox.
	SandboxType string `pulumi:"sandboxType"`
}

// ClusterNodePoolNodeConfigSandboxConfigInput is an input type that accepts ClusterNodePoolNodeConfigSandboxConfigArgs and ClusterNodePoolNodeConfigSandboxConfigOutput values.
// You can construct a concrete instance of `ClusterNodePoolNodeConfigSandboxConfigInput` via:
//
//	ClusterNodePoolNodeConfigSandboxConfigArgs{...}
type ClusterNodePoolNodeConfigSandboxConfigInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigSandboxConfigOutput() ClusterNodePoolNodeConfigSandboxConfigOutput
	ToClusterNodePoolNodeConfigSandboxConfigOutputWithContext(context.Context) ClusterNodePoolNodeConfigSandboxConfigOutput
}

type ClusterNodePoolNodeConfigSandboxConfigArgs struct {
	// Which sandbox to use for pods in the node pool.
	// Accepted values are:
	//
	// * `"gvisor"`: Pods run within a gVisor sandbox.
	SandboxType pulumi.StringInput `pulumi:"sandboxType"`
}

func (ClusterNodePoolNodeConfigSandboxConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfigSandboxConfig)(nil)).Elem()
}

func (i ClusterNodePoolNodeConfigSandboxConfigArgs) ToClusterNodePoolNodeConfigSandboxConfigOutput() ClusterNodePoolNodeConfigSandboxConfigOutput {
	return i.ToClusterNodePoolNodeConfigSandboxConfigOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigSandboxConfigArgs) ToClusterNodePoolNodeConfigSandboxConfigOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigSandboxConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigSandboxConfigOutput)
}

func (i ClusterNodePoolNodeConfigSandboxConfigArgs) ToClusterNodePoolNodeConfigSandboxConfigPtrOutput() ClusterNodePoolNodeConfigSandboxConfigPtrOutput {
	return i.ToClusterNodePoolNodeConfigSandboxConfigPtrOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigSandboxConfigArgs) ToClusterNodePoolNodeConfigSandboxConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigSandboxConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigSandboxConfigOutput).ToClusterNodePoolNodeConfigSandboxConfigPtrOutputWithContext(ctx)
}

// ClusterNodePoolNodeConfigSandboxConfigPtrInput is an input type that accepts ClusterNodePoolNodeConfigSandboxConfigArgs, ClusterNodePoolNodeConfigSandboxConfigPtr and ClusterNodePoolNodeConfigSandboxConfigPtrOutput values.
// You can construct a concrete instance of `ClusterNodePoolNodeConfigSandboxConfigPtrInput` via:
//
//	        ClusterNodePoolNodeConfigSandboxConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterNodePoolNodeConfigSandboxConfigPtrInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigSandboxConfigPtrOutput() ClusterNodePoolNodeConfigSandboxConfigPtrOutput
	ToClusterNodePoolNodeConfigSandboxConfigPtrOutputWithContext(context.Context) ClusterNodePoolNodeConfigSandboxConfigPtrOutput
}

type clusterNodePoolNodeConfigSandboxConfigPtrType ClusterNodePoolNodeConfigSandboxConfigArgs

func ClusterNodePoolNodeConfigSandboxConfigPtr(v *ClusterNodePoolNodeConfigSandboxConfigArgs) ClusterNodePoolNodeConfigSandboxConfigPtrInput {
	return (*clusterNodePoolNodeConfigSandboxConfigPtrType)(v)
}

func (*clusterNodePoolNodeConfigSandboxConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolNodeConfigSandboxConfig)(nil)).Elem()
}

func (i *clusterNodePoolNodeConfigSandboxConfigPtrType) ToClusterNodePoolNodeConfigSandboxConfigPtrOutput() ClusterNodePoolNodeConfigSandboxConfigPtrOutput {
	return i.ToClusterNodePoolNodeConfigSandboxConfigPtrOutputWithContext(context.Background())
}

func (i *clusterNodePoolNodeConfigSandboxConfigPtrType) ToClusterNodePoolNodeConfigSandboxConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigSandboxConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigSandboxConfigPtrOutput)
}

type ClusterNodePoolNodeConfigSandboxConfigOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigSandboxConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfigSandboxConfig)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigSandboxConfigOutput) ToClusterNodePoolNodeConfigSandboxConfigOutput() ClusterNodePoolNodeConfigSandboxConfigOutput {
	return o
}

func (o ClusterNodePoolNodeConfigSandboxConfigOutput) ToClusterNodePoolNodeConfigSandboxConfigOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigSandboxConfigOutput {
	return o
}

func (o ClusterNodePoolNodeConfigSandboxConfigOutput) ToClusterNodePoolNodeConfigSandboxConfigPtrOutput() ClusterNodePoolNodeConfigSandboxConfigPtrOutput {
	return o.ToClusterNodePoolNodeConfigSandboxConfigPtrOutputWithContext(context.Background())
}

func (o ClusterNodePoolNodeConfigSandboxConfigOutput) ToClusterNodePoolNodeConfigSandboxConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigSandboxConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterNodePoolNodeConfigSandboxConfig) *ClusterNodePoolNodeConfigSandboxConfig {
		return &v
	}).(ClusterNodePoolNodeConfigSandboxConfigPtrOutput)
}

// Which sandbox to use for pods in the node pool.
// Accepted values are:
//
// * `"gvisor"`: Pods run within a gVisor sandbox.
func (o ClusterNodePoolNodeConfigSandboxConfigOutput) SandboxType() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigSandboxConfig) string { return v.SandboxType }).(pulumi.StringOutput)
}

type ClusterNodePoolNodeConfigSandboxConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigSandboxConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolNodeConfigSandboxConfig)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigSandboxConfigPtrOutput) ToClusterNodePoolNodeConfigSandboxConfigPtrOutput() ClusterNodePoolNodeConfigSandboxConfigPtrOutput {
	return o
}

func (o ClusterNodePoolNodeConfigSandboxConfigPtrOutput) ToClusterNodePoolNodeConfigSandboxConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigSandboxConfigPtrOutput {
	return o
}

func (o ClusterNodePoolNodeConfigSandboxConfigPtrOutput) Elem() ClusterNodePoolNodeConfigSandboxConfigOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfigSandboxConfig) ClusterNodePoolNodeConfigSandboxConfig {
		if v != nil {
			return *v
		}
		var ret ClusterNodePoolNodeConfigSandboxConfig
		return ret
	}).(ClusterNodePoolNodeConfigSandboxConfigOutput)
}

// Which sandbox to use for pods in the node pool.
// Accepted values are:
//
// * `"gvisor"`: Pods run within a gVisor sandbox.
func (o ClusterNodePoolNodeConfigSandboxConfigPtrOutput) SandboxType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfigSandboxConfig) *string {
		if v == nil {
			return nil
		}
		return &v.SandboxType
	}).(pulumi.StringPtrOutput)
}

type ClusterNodePoolNodeConfigSecondaryBootDisk struct {
	// Path to disk image to create the secondary boot disk from. After using the [gke-disk-image-builder](https://github.com/GoogleCloudPlatform/ai-on-gke/tree/main/tools/gke-disk-image-builder), this argument should be `global/images/DISK_IMAGE_NAME`.
	DiskImage string `pulumi:"diskImage"`
	// Mode for how the secondary boot disk is used. An example mode is `CONTAINER_IMAGE_CACHE`.
	Mode *string `pulumi:"mode"`
}

// ClusterNodePoolNodeConfigSecondaryBootDiskInput is an input type that accepts ClusterNodePoolNodeConfigSecondaryBootDiskArgs and ClusterNodePoolNodeConfigSecondaryBootDiskOutput values.
// You can construct a concrete instance of `ClusterNodePoolNodeConfigSecondaryBootDiskInput` via:
//
//	ClusterNodePoolNodeConfigSecondaryBootDiskArgs{...}
type ClusterNodePoolNodeConfigSecondaryBootDiskInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigSecondaryBootDiskOutput() ClusterNodePoolNodeConfigSecondaryBootDiskOutput
	ToClusterNodePoolNodeConfigSecondaryBootDiskOutputWithContext(context.Context) ClusterNodePoolNodeConfigSecondaryBootDiskOutput
}

type ClusterNodePoolNodeConfigSecondaryBootDiskArgs struct {
	// Path to disk image to create the secondary boot disk from. After using the [gke-disk-image-builder](https://github.com/GoogleCloudPlatform/ai-on-gke/tree/main/tools/gke-disk-image-builder), this argument should be `global/images/DISK_IMAGE_NAME`.
	DiskImage pulumi.StringInput `pulumi:"diskImage"`
	// Mode for how the secondary boot disk is used. An example mode is `CONTAINER_IMAGE_CACHE`.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (ClusterNodePoolNodeConfigSecondaryBootDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfigSecondaryBootDisk)(nil)).Elem()
}

func (i ClusterNodePoolNodeConfigSecondaryBootDiskArgs) ToClusterNodePoolNodeConfigSecondaryBootDiskOutput() ClusterNodePoolNodeConfigSecondaryBootDiskOutput {
	return i.ToClusterNodePoolNodeConfigSecondaryBootDiskOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigSecondaryBootDiskArgs) ToClusterNodePoolNodeConfigSecondaryBootDiskOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigSecondaryBootDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigSecondaryBootDiskOutput)
}

// ClusterNodePoolNodeConfigSecondaryBootDiskArrayInput is an input type that accepts ClusterNodePoolNodeConfigSecondaryBootDiskArray and ClusterNodePoolNodeConfigSecondaryBootDiskArrayOutput values.
// You can construct a concrete instance of `ClusterNodePoolNodeConfigSecondaryBootDiskArrayInput` via:
//
//	ClusterNodePoolNodeConfigSecondaryBootDiskArray{ ClusterNodePoolNodeConfigSecondaryBootDiskArgs{...} }
type ClusterNodePoolNodeConfigSecondaryBootDiskArrayInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigSecondaryBootDiskArrayOutput() ClusterNodePoolNodeConfigSecondaryBootDiskArrayOutput
	ToClusterNodePoolNodeConfigSecondaryBootDiskArrayOutputWithContext(context.Context) ClusterNodePoolNodeConfigSecondaryBootDiskArrayOutput
}

type ClusterNodePoolNodeConfigSecondaryBootDiskArray []ClusterNodePoolNodeConfigSecondaryBootDiskInput

func (ClusterNodePoolNodeConfigSecondaryBootDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodePoolNodeConfigSecondaryBootDisk)(nil)).Elem()
}

func (i ClusterNodePoolNodeConfigSecondaryBootDiskArray) ToClusterNodePoolNodeConfigSecondaryBootDiskArrayOutput() ClusterNodePoolNodeConfigSecondaryBootDiskArrayOutput {
	return i.ToClusterNodePoolNodeConfigSecondaryBootDiskArrayOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigSecondaryBootDiskArray) ToClusterNodePoolNodeConfigSecondaryBootDiskArrayOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigSecondaryBootDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigSecondaryBootDiskArrayOutput)
}

type ClusterNodePoolNodeConfigSecondaryBootDiskOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigSecondaryBootDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfigSecondaryBootDisk)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigSecondaryBootDiskOutput) ToClusterNodePoolNodeConfigSecondaryBootDiskOutput() ClusterNodePoolNodeConfigSecondaryBootDiskOutput {
	return o
}

func (o ClusterNodePoolNodeConfigSecondaryBootDiskOutput) ToClusterNodePoolNodeConfigSecondaryBootDiskOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigSecondaryBootDiskOutput {
	return o
}

// Path to disk image to create the secondary boot disk from. After using the [gke-disk-image-builder](https://github.com/GoogleCloudPlatform/ai-on-gke/tree/main/tools/gke-disk-image-builder), this argument should be `global/images/DISK_IMAGE_NAME`.
func (o ClusterNodePoolNodeConfigSecondaryBootDiskOutput) DiskImage() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigSecondaryBootDisk) string { return v.DiskImage }).(pulumi.StringOutput)
}

// Mode for how the secondary boot disk is used. An example mode is `CONTAINER_IMAGE_CACHE`.
func (o ClusterNodePoolNodeConfigSecondaryBootDiskOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigSecondaryBootDisk) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type ClusterNodePoolNodeConfigSecondaryBootDiskArrayOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigSecondaryBootDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodePoolNodeConfigSecondaryBootDisk)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigSecondaryBootDiskArrayOutput) ToClusterNodePoolNodeConfigSecondaryBootDiskArrayOutput() ClusterNodePoolNodeConfigSecondaryBootDiskArrayOutput {
	return o
}

func (o ClusterNodePoolNodeConfigSecondaryBootDiskArrayOutput) ToClusterNodePoolNodeConfigSecondaryBootDiskArrayOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigSecondaryBootDiskArrayOutput {
	return o
}

func (o ClusterNodePoolNodeConfigSecondaryBootDiskArrayOutput) Index(i pulumi.IntInput) ClusterNodePoolNodeConfigSecondaryBootDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterNodePoolNodeConfigSecondaryBootDisk {
		return vs[0].([]ClusterNodePoolNodeConfigSecondaryBootDisk)[vs[1].(int)]
	}).(ClusterNodePoolNodeConfigSecondaryBootDiskOutput)
}

type ClusterNodePoolNodeConfigShieldedInstanceConfig struct {
	// Defines if the instance has integrity monitoring enabled.
	//
	// Enables monitoring and attestation of the boot integrity of the instance. The attestation is performed against the integrity policy baseline. This baseline is initially derived from the implicitly trusted boot image when the instance is created.  Defaults to `true`.
	EnableIntegrityMonitoring *bool `pulumi:"enableIntegrityMonitoring"`
	// Defines if the instance has Secure Boot enabled.
	//
	// Secure Boot helps ensure that the system only runs authentic software by verifying the digital signature of all boot components, and halting the boot process if signature verification fails.  Defaults to `false`.
	EnableSecureBoot *bool `pulumi:"enableSecureBoot"`
}

// ClusterNodePoolNodeConfigShieldedInstanceConfigInput is an input type that accepts ClusterNodePoolNodeConfigShieldedInstanceConfigArgs and ClusterNodePoolNodeConfigShieldedInstanceConfigOutput values.
// You can construct a concrete instance of `ClusterNodePoolNodeConfigShieldedInstanceConfigInput` via:
//
//	ClusterNodePoolNodeConfigShieldedInstanceConfigArgs{...}
type ClusterNodePoolNodeConfigShieldedInstanceConfigInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigShieldedInstanceConfigOutput() ClusterNodePoolNodeConfigShieldedInstanceConfigOutput
	ToClusterNodePoolNodeConfigShieldedInstanceConfigOutputWithContext(context.Context) ClusterNodePoolNodeConfigShieldedInstanceConfigOutput
}

type ClusterNodePoolNodeConfigShieldedInstanceConfigArgs struct {
	// Defines if the instance has integrity monitoring enabled.
	//
	// Enables monitoring and attestation of the boot integrity of the instance. The attestation is performed against the integrity policy baseline. This baseline is initially derived from the implicitly trusted boot image when the instance is created.  Defaults to `true`.
	EnableIntegrityMonitoring pulumi.BoolPtrInput `pulumi:"enableIntegrityMonitoring"`
	// Defines if the instance has Secure Boot enabled.
	//
	// Secure Boot helps ensure that the system only runs authentic software by verifying the digital signature of all boot components, and halting the boot process if signature verification fails.  Defaults to `false`.
	EnableSecureBoot pulumi.BoolPtrInput `pulumi:"enableSecureBoot"`
}

func (ClusterNodePoolNodeConfigShieldedInstanceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfigShieldedInstanceConfig)(nil)).Elem()
}

func (i ClusterNodePoolNodeConfigShieldedInstanceConfigArgs) ToClusterNodePoolNodeConfigShieldedInstanceConfigOutput() ClusterNodePoolNodeConfigShieldedInstanceConfigOutput {
	return i.ToClusterNodePoolNodeConfigShieldedInstanceConfigOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigShieldedInstanceConfigArgs) ToClusterNodePoolNodeConfigShieldedInstanceConfigOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigShieldedInstanceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigShieldedInstanceConfigOutput)
}

func (i ClusterNodePoolNodeConfigShieldedInstanceConfigArgs) ToClusterNodePoolNodeConfigShieldedInstanceConfigPtrOutput() ClusterNodePoolNodeConfigShieldedInstanceConfigPtrOutput {
	return i.ToClusterNodePoolNodeConfigShieldedInstanceConfigPtrOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigShieldedInstanceConfigArgs) ToClusterNodePoolNodeConfigShieldedInstanceConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigShieldedInstanceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigShieldedInstanceConfigOutput).ToClusterNodePoolNodeConfigShieldedInstanceConfigPtrOutputWithContext(ctx)
}

// ClusterNodePoolNodeConfigShieldedInstanceConfigPtrInput is an input type that accepts ClusterNodePoolNodeConfigShieldedInstanceConfigArgs, ClusterNodePoolNodeConfigShieldedInstanceConfigPtr and ClusterNodePoolNodeConfigShieldedInstanceConfigPtrOutput values.
// You can construct a concrete instance of `ClusterNodePoolNodeConfigShieldedInstanceConfigPtrInput` via:
//
//	        ClusterNodePoolNodeConfigShieldedInstanceConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterNodePoolNodeConfigShieldedInstanceConfigPtrInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigShieldedInstanceConfigPtrOutput() ClusterNodePoolNodeConfigShieldedInstanceConfigPtrOutput
	ToClusterNodePoolNodeConfigShieldedInstanceConfigPtrOutputWithContext(context.Context) ClusterNodePoolNodeConfigShieldedInstanceConfigPtrOutput
}

type clusterNodePoolNodeConfigShieldedInstanceConfigPtrType ClusterNodePoolNodeConfigShieldedInstanceConfigArgs

func ClusterNodePoolNodeConfigShieldedInstanceConfigPtr(v *ClusterNodePoolNodeConfigShieldedInstanceConfigArgs) ClusterNodePoolNodeConfigShieldedInstanceConfigPtrInput {
	return (*clusterNodePoolNodeConfigShieldedInstanceConfigPtrType)(v)
}

func (*clusterNodePoolNodeConfigShieldedInstanceConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolNodeConfigShieldedInstanceConfig)(nil)).Elem()
}

func (i *clusterNodePoolNodeConfigShieldedInstanceConfigPtrType) ToClusterNodePoolNodeConfigShieldedInstanceConfigPtrOutput() ClusterNodePoolNodeConfigShieldedInstanceConfigPtrOutput {
	return i.ToClusterNodePoolNodeConfigShieldedInstanceConfigPtrOutputWithContext(context.Background())
}

func (i *clusterNodePoolNodeConfigShieldedInstanceConfigPtrType) ToClusterNodePoolNodeConfigShieldedInstanceConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigShieldedInstanceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigShieldedInstanceConfigPtrOutput)
}

type ClusterNodePoolNodeConfigShieldedInstanceConfigOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigShieldedInstanceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfigShieldedInstanceConfig)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigShieldedInstanceConfigOutput) ToClusterNodePoolNodeConfigShieldedInstanceConfigOutput() ClusterNodePoolNodeConfigShieldedInstanceConfigOutput {
	return o
}

func (o ClusterNodePoolNodeConfigShieldedInstanceConfigOutput) ToClusterNodePoolNodeConfigShieldedInstanceConfigOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigShieldedInstanceConfigOutput {
	return o
}

func (o ClusterNodePoolNodeConfigShieldedInstanceConfigOutput) ToClusterNodePoolNodeConfigShieldedInstanceConfigPtrOutput() ClusterNodePoolNodeConfigShieldedInstanceConfigPtrOutput {
	return o.ToClusterNodePoolNodeConfigShieldedInstanceConfigPtrOutputWithContext(context.Background())
}

func (o ClusterNodePoolNodeConfigShieldedInstanceConfigOutput) ToClusterNodePoolNodeConfigShieldedInstanceConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigShieldedInstanceConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterNodePoolNodeConfigShieldedInstanceConfig) *ClusterNodePoolNodeConfigShieldedInstanceConfig {
		return &v
	}).(ClusterNodePoolNodeConfigShieldedInstanceConfigPtrOutput)
}

// Defines if the instance has integrity monitoring enabled.
//
// Enables monitoring and attestation of the boot integrity of the instance. The attestation is performed against the integrity policy baseline. This baseline is initially derived from the implicitly trusted boot image when the instance is created.  Defaults to `true`.
func (o ClusterNodePoolNodeConfigShieldedInstanceConfigOutput) EnableIntegrityMonitoring() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigShieldedInstanceConfig) *bool { return v.EnableIntegrityMonitoring }).(pulumi.BoolPtrOutput)
}

// Defines if the instance has Secure Boot enabled.
//
// Secure Boot helps ensure that the system only runs authentic software by verifying the digital signature of all boot components, and halting the boot process if signature verification fails.  Defaults to `false`.
func (o ClusterNodePoolNodeConfigShieldedInstanceConfigOutput) EnableSecureBoot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigShieldedInstanceConfig) *bool { return v.EnableSecureBoot }).(pulumi.BoolPtrOutput)
}

type ClusterNodePoolNodeConfigShieldedInstanceConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigShieldedInstanceConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolNodeConfigShieldedInstanceConfig)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigShieldedInstanceConfigPtrOutput) ToClusterNodePoolNodeConfigShieldedInstanceConfigPtrOutput() ClusterNodePoolNodeConfigShieldedInstanceConfigPtrOutput {
	return o
}

func (o ClusterNodePoolNodeConfigShieldedInstanceConfigPtrOutput) ToClusterNodePoolNodeConfigShieldedInstanceConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigShieldedInstanceConfigPtrOutput {
	return o
}

func (o ClusterNodePoolNodeConfigShieldedInstanceConfigPtrOutput) Elem() ClusterNodePoolNodeConfigShieldedInstanceConfigOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfigShieldedInstanceConfig) ClusterNodePoolNodeConfigShieldedInstanceConfig {
		if v != nil {
			return *v
		}
		var ret ClusterNodePoolNodeConfigShieldedInstanceConfig
		return ret
	}).(ClusterNodePoolNodeConfigShieldedInstanceConfigOutput)
}

// Defines if the instance has integrity monitoring enabled.
//
// Enables monitoring and attestation of the boot integrity of the instance. The attestation is performed against the integrity policy baseline. This baseline is initially derived from the implicitly trusted boot image when the instance is created.  Defaults to `true`.
func (o ClusterNodePoolNodeConfigShieldedInstanceConfigPtrOutput) EnableIntegrityMonitoring() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfigShieldedInstanceConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EnableIntegrityMonitoring
	}).(pulumi.BoolPtrOutput)
}

// Defines if the instance has Secure Boot enabled.
//
// Secure Boot helps ensure that the system only runs authentic software by verifying the digital signature of all boot components, and halting the boot process if signature verification fails.  Defaults to `false`.
func (o ClusterNodePoolNodeConfigShieldedInstanceConfigPtrOutput) EnableSecureBoot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfigShieldedInstanceConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EnableSecureBoot
	}).(pulumi.BoolPtrOutput)
}

type ClusterNodePoolNodeConfigSoleTenantConfig struct {
	// .
	NodeAffinities []ClusterNodePoolNodeConfigSoleTenantConfigNodeAffinity `pulumi:"nodeAffinities"`
}

// ClusterNodePoolNodeConfigSoleTenantConfigInput is an input type that accepts ClusterNodePoolNodeConfigSoleTenantConfigArgs and ClusterNodePoolNodeConfigSoleTenantConfigOutput values.
// You can construct a concrete instance of `ClusterNodePoolNodeConfigSoleTenantConfigInput` via:
//
//	ClusterNodePoolNodeConfigSoleTenantConfigArgs{...}
type ClusterNodePoolNodeConfigSoleTenantConfigInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigSoleTenantConfigOutput() ClusterNodePoolNodeConfigSoleTenantConfigOutput
	ToClusterNodePoolNodeConfigSoleTenantConfigOutputWithContext(context.Context) ClusterNodePoolNodeConfigSoleTenantConfigOutput
}

type ClusterNodePoolNodeConfigSoleTenantConfigArgs struct {
	// .
	NodeAffinities ClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArrayInput `pulumi:"nodeAffinities"`
}

func (ClusterNodePoolNodeConfigSoleTenantConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfigSoleTenantConfig)(nil)).Elem()
}

func (i ClusterNodePoolNodeConfigSoleTenantConfigArgs) ToClusterNodePoolNodeConfigSoleTenantConfigOutput() ClusterNodePoolNodeConfigSoleTenantConfigOutput {
	return i.ToClusterNodePoolNodeConfigSoleTenantConfigOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigSoleTenantConfigArgs) ToClusterNodePoolNodeConfigSoleTenantConfigOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigSoleTenantConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigSoleTenantConfigOutput)
}

func (i ClusterNodePoolNodeConfigSoleTenantConfigArgs) ToClusterNodePoolNodeConfigSoleTenantConfigPtrOutput() ClusterNodePoolNodeConfigSoleTenantConfigPtrOutput {
	return i.ToClusterNodePoolNodeConfigSoleTenantConfigPtrOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigSoleTenantConfigArgs) ToClusterNodePoolNodeConfigSoleTenantConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigSoleTenantConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigSoleTenantConfigOutput).ToClusterNodePoolNodeConfigSoleTenantConfigPtrOutputWithContext(ctx)
}

// ClusterNodePoolNodeConfigSoleTenantConfigPtrInput is an input type that accepts ClusterNodePoolNodeConfigSoleTenantConfigArgs, ClusterNodePoolNodeConfigSoleTenantConfigPtr and ClusterNodePoolNodeConfigSoleTenantConfigPtrOutput values.
// You can construct a concrete instance of `ClusterNodePoolNodeConfigSoleTenantConfigPtrInput` via:
//
//	        ClusterNodePoolNodeConfigSoleTenantConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterNodePoolNodeConfigSoleTenantConfigPtrInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigSoleTenantConfigPtrOutput() ClusterNodePoolNodeConfigSoleTenantConfigPtrOutput
	ToClusterNodePoolNodeConfigSoleTenantConfigPtrOutputWithContext(context.Context) ClusterNodePoolNodeConfigSoleTenantConfigPtrOutput
}

type clusterNodePoolNodeConfigSoleTenantConfigPtrType ClusterNodePoolNodeConfigSoleTenantConfigArgs

func ClusterNodePoolNodeConfigSoleTenantConfigPtr(v *ClusterNodePoolNodeConfigSoleTenantConfigArgs) ClusterNodePoolNodeConfigSoleTenantConfigPtrInput {
	return (*clusterNodePoolNodeConfigSoleTenantConfigPtrType)(v)
}

func (*clusterNodePoolNodeConfigSoleTenantConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolNodeConfigSoleTenantConfig)(nil)).Elem()
}

func (i *clusterNodePoolNodeConfigSoleTenantConfigPtrType) ToClusterNodePoolNodeConfigSoleTenantConfigPtrOutput() ClusterNodePoolNodeConfigSoleTenantConfigPtrOutput {
	return i.ToClusterNodePoolNodeConfigSoleTenantConfigPtrOutputWithContext(context.Background())
}

func (i *clusterNodePoolNodeConfigSoleTenantConfigPtrType) ToClusterNodePoolNodeConfigSoleTenantConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigSoleTenantConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigSoleTenantConfigPtrOutput)
}

type ClusterNodePoolNodeConfigSoleTenantConfigOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigSoleTenantConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfigSoleTenantConfig)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigSoleTenantConfigOutput) ToClusterNodePoolNodeConfigSoleTenantConfigOutput() ClusterNodePoolNodeConfigSoleTenantConfigOutput {
	return o
}

func (o ClusterNodePoolNodeConfigSoleTenantConfigOutput) ToClusterNodePoolNodeConfigSoleTenantConfigOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigSoleTenantConfigOutput {
	return o
}

func (o ClusterNodePoolNodeConfigSoleTenantConfigOutput) ToClusterNodePoolNodeConfigSoleTenantConfigPtrOutput() ClusterNodePoolNodeConfigSoleTenantConfigPtrOutput {
	return o.ToClusterNodePoolNodeConfigSoleTenantConfigPtrOutputWithContext(context.Background())
}

func (o ClusterNodePoolNodeConfigSoleTenantConfigOutput) ToClusterNodePoolNodeConfigSoleTenantConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigSoleTenantConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterNodePoolNodeConfigSoleTenantConfig) *ClusterNodePoolNodeConfigSoleTenantConfig {
		return &v
	}).(ClusterNodePoolNodeConfigSoleTenantConfigPtrOutput)
}

// .
func (o ClusterNodePoolNodeConfigSoleTenantConfigOutput) NodeAffinities() ClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArrayOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigSoleTenantConfig) []ClusterNodePoolNodeConfigSoleTenantConfigNodeAffinity {
		return v.NodeAffinities
	}).(ClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArrayOutput)
}

type ClusterNodePoolNodeConfigSoleTenantConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigSoleTenantConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolNodeConfigSoleTenantConfig)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigSoleTenantConfigPtrOutput) ToClusterNodePoolNodeConfigSoleTenantConfigPtrOutput() ClusterNodePoolNodeConfigSoleTenantConfigPtrOutput {
	return o
}

func (o ClusterNodePoolNodeConfigSoleTenantConfigPtrOutput) ToClusterNodePoolNodeConfigSoleTenantConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigSoleTenantConfigPtrOutput {
	return o
}

func (o ClusterNodePoolNodeConfigSoleTenantConfigPtrOutput) Elem() ClusterNodePoolNodeConfigSoleTenantConfigOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfigSoleTenantConfig) ClusterNodePoolNodeConfigSoleTenantConfig {
		if v != nil {
			return *v
		}
		var ret ClusterNodePoolNodeConfigSoleTenantConfig
		return ret
	}).(ClusterNodePoolNodeConfigSoleTenantConfigOutput)
}

// .
func (o ClusterNodePoolNodeConfigSoleTenantConfigPtrOutput) NodeAffinities() ClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArrayOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfigSoleTenantConfig) []ClusterNodePoolNodeConfigSoleTenantConfigNodeAffinity {
		if v == nil {
			return nil
		}
		return v.NodeAffinities
	}).(ClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArrayOutput)
}

type ClusterNodePoolNodeConfigSoleTenantConfigNodeAffinity struct {
	// The default or custom node affinity label key name.
	Key string `pulumi:"key"`
	// Specifies affinity or anti-affinity. Accepted values are `"IN"` or `"NOT_IN"`
	Operator string `pulumi:"operator"`
	// List of node affinity label values as strings.
	Values []string `pulumi:"values"`
}

// ClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityInput is an input type that accepts ClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArgs and ClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityOutput values.
// You can construct a concrete instance of `ClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityInput` via:
//
//	ClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArgs{...}
type ClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityOutput() ClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityOutput
	ToClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityOutputWithContext(context.Context) ClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityOutput
}

type ClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArgs struct {
	// The default or custom node affinity label key name.
	Key pulumi.StringInput `pulumi:"key"`
	// Specifies affinity or anti-affinity. Accepted values are `"IN"` or `"NOT_IN"`
	Operator pulumi.StringInput `pulumi:"operator"`
	// List of node affinity label values as strings.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfigSoleTenantConfigNodeAffinity)(nil)).Elem()
}

func (i ClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArgs) ToClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityOutput() ClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityOutput {
	return i.ToClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArgs) ToClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityOutput)
}

// ClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArrayInput is an input type that accepts ClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArray and ClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArrayOutput values.
// You can construct a concrete instance of `ClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArrayInput` via:
//
//	ClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArray{ ClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArgs{...} }
type ClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArrayInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArrayOutput() ClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArrayOutput
	ToClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArrayOutputWithContext(context.Context) ClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArrayOutput
}

type ClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArray []ClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityInput

func (ClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodePoolNodeConfigSoleTenantConfigNodeAffinity)(nil)).Elem()
}

func (i ClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArray) ToClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArrayOutput() ClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArrayOutput {
	return i.ToClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArrayOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArray) ToClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArrayOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArrayOutput)
}

type ClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfigSoleTenantConfigNodeAffinity)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityOutput) ToClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityOutput() ClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityOutput {
	return o
}

func (o ClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityOutput) ToClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityOutput {
	return o
}

// The default or custom node affinity label key name.
func (o ClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigSoleTenantConfigNodeAffinity) string { return v.Key }).(pulumi.StringOutput)
}

// Specifies affinity or anti-affinity. Accepted values are `"IN"` or `"NOT_IN"`
func (o ClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigSoleTenantConfigNodeAffinity) string { return v.Operator }).(pulumi.StringOutput)
}

// List of node affinity label values as strings.
func (o ClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigSoleTenantConfigNodeAffinity) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type ClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArrayOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodePoolNodeConfigSoleTenantConfigNodeAffinity)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArrayOutput) ToClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArrayOutput() ClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArrayOutput {
	return o
}

func (o ClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArrayOutput) ToClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArrayOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArrayOutput {
	return o
}

func (o ClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArrayOutput) Index(i pulumi.IntInput) ClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterNodePoolNodeConfigSoleTenantConfigNodeAffinity {
		return vs[0].([]ClusterNodePoolNodeConfigSoleTenantConfigNodeAffinity)[vs[1].(int)]
	}).(ClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityOutput)
}

type ClusterNodePoolNodeConfigTaint struct {
	// Effect for taint. Accepted values are `NO_SCHEDULE`, `PREFER_NO_SCHEDULE`, and `NO_EXECUTE`.
	Effect string `pulumi:"effect"`
	// Key for taint.
	Key string `pulumi:"key"`
	// Value for taint.
	Value string `pulumi:"value"`
}

// ClusterNodePoolNodeConfigTaintInput is an input type that accepts ClusterNodePoolNodeConfigTaintArgs and ClusterNodePoolNodeConfigTaintOutput values.
// You can construct a concrete instance of `ClusterNodePoolNodeConfigTaintInput` via:
//
//	ClusterNodePoolNodeConfigTaintArgs{...}
type ClusterNodePoolNodeConfigTaintInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigTaintOutput() ClusterNodePoolNodeConfigTaintOutput
	ToClusterNodePoolNodeConfigTaintOutputWithContext(context.Context) ClusterNodePoolNodeConfigTaintOutput
}

type ClusterNodePoolNodeConfigTaintArgs struct {
	// Effect for taint. Accepted values are `NO_SCHEDULE`, `PREFER_NO_SCHEDULE`, and `NO_EXECUTE`.
	Effect pulumi.StringInput `pulumi:"effect"`
	// Key for taint.
	Key pulumi.StringInput `pulumi:"key"`
	// Value for taint.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ClusterNodePoolNodeConfigTaintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfigTaint)(nil)).Elem()
}

func (i ClusterNodePoolNodeConfigTaintArgs) ToClusterNodePoolNodeConfigTaintOutput() ClusterNodePoolNodeConfigTaintOutput {
	return i.ToClusterNodePoolNodeConfigTaintOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigTaintArgs) ToClusterNodePoolNodeConfigTaintOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigTaintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigTaintOutput)
}

// ClusterNodePoolNodeConfigTaintArrayInput is an input type that accepts ClusterNodePoolNodeConfigTaintArray and ClusterNodePoolNodeConfigTaintArrayOutput values.
// You can construct a concrete instance of `ClusterNodePoolNodeConfigTaintArrayInput` via:
//
//	ClusterNodePoolNodeConfigTaintArray{ ClusterNodePoolNodeConfigTaintArgs{...} }
type ClusterNodePoolNodeConfigTaintArrayInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigTaintArrayOutput() ClusterNodePoolNodeConfigTaintArrayOutput
	ToClusterNodePoolNodeConfigTaintArrayOutputWithContext(context.Context) ClusterNodePoolNodeConfigTaintArrayOutput
}

type ClusterNodePoolNodeConfigTaintArray []ClusterNodePoolNodeConfigTaintInput

func (ClusterNodePoolNodeConfigTaintArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodePoolNodeConfigTaint)(nil)).Elem()
}

func (i ClusterNodePoolNodeConfigTaintArray) ToClusterNodePoolNodeConfigTaintArrayOutput() ClusterNodePoolNodeConfigTaintArrayOutput {
	return i.ToClusterNodePoolNodeConfigTaintArrayOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigTaintArray) ToClusterNodePoolNodeConfigTaintArrayOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigTaintArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigTaintArrayOutput)
}

type ClusterNodePoolNodeConfigTaintOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigTaintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfigTaint)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigTaintOutput) ToClusterNodePoolNodeConfigTaintOutput() ClusterNodePoolNodeConfigTaintOutput {
	return o
}

func (o ClusterNodePoolNodeConfigTaintOutput) ToClusterNodePoolNodeConfigTaintOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigTaintOutput {
	return o
}

// Effect for taint. Accepted values are `NO_SCHEDULE`, `PREFER_NO_SCHEDULE`, and `NO_EXECUTE`.
func (o ClusterNodePoolNodeConfigTaintOutput) Effect() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigTaint) string { return v.Effect }).(pulumi.StringOutput)
}

// Key for taint.
func (o ClusterNodePoolNodeConfigTaintOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigTaint) string { return v.Key }).(pulumi.StringOutput)
}

// Value for taint.
func (o ClusterNodePoolNodeConfigTaintOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigTaint) string { return v.Value }).(pulumi.StringOutput)
}

type ClusterNodePoolNodeConfigTaintArrayOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigTaintArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodePoolNodeConfigTaint)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigTaintArrayOutput) ToClusterNodePoolNodeConfigTaintArrayOutput() ClusterNodePoolNodeConfigTaintArrayOutput {
	return o
}

func (o ClusterNodePoolNodeConfigTaintArrayOutput) ToClusterNodePoolNodeConfigTaintArrayOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigTaintArrayOutput {
	return o
}

func (o ClusterNodePoolNodeConfigTaintArrayOutput) Index(i pulumi.IntInput) ClusterNodePoolNodeConfigTaintOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterNodePoolNodeConfigTaint {
		return vs[0].([]ClusterNodePoolNodeConfigTaint)[vs[1].(int)]
	}).(ClusterNodePoolNodeConfigTaintOutput)
}

type ClusterNodePoolNodeConfigWorkloadMetadataConfig struct {
	// How to expose the node metadata to the workload running on the node.
	// Accepted values are:
	// * UNSPECIFIED: Not Set
	// * GCE_METADATA: Expose all Compute Engine metadata to pods.
	// * GKE_METADATA: Run the GKE Metadata Server on this node. The GKE Metadata Server exposes a metadata API to workloads that is compatible with the V1 Compute Metadata APIs exposed by the Compute Engine and App Engine Metadata Servers. This feature can only be enabled if [workload identity](https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity) is enabled at the cluster level.
	Mode string `pulumi:"mode"`
}

// ClusterNodePoolNodeConfigWorkloadMetadataConfigInput is an input type that accepts ClusterNodePoolNodeConfigWorkloadMetadataConfigArgs and ClusterNodePoolNodeConfigWorkloadMetadataConfigOutput values.
// You can construct a concrete instance of `ClusterNodePoolNodeConfigWorkloadMetadataConfigInput` via:
//
//	ClusterNodePoolNodeConfigWorkloadMetadataConfigArgs{...}
type ClusterNodePoolNodeConfigWorkloadMetadataConfigInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigWorkloadMetadataConfigOutput() ClusterNodePoolNodeConfigWorkloadMetadataConfigOutput
	ToClusterNodePoolNodeConfigWorkloadMetadataConfigOutputWithContext(context.Context) ClusterNodePoolNodeConfigWorkloadMetadataConfigOutput
}

type ClusterNodePoolNodeConfigWorkloadMetadataConfigArgs struct {
	// How to expose the node metadata to the workload running on the node.
	// Accepted values are:
	// * UNSPECIFIED: Not Set
	// * GCE_METADATA: Expose all Compute Engine metadata to pods.
	// * GKE_METADATA: Run the GKE Metadata Server on this node. The GKE Metadata Server exposes a metadata API to workloads that is compatible with the V1 Compute Metadata APIs exposed by the Compute Engine and App Engine Metadata Servers. This feature can only be enabled if [workload identity](https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity) is enabled at the cluster level.
	Mode pulumi.StringInput `pulumi:"mode"`
}

func (ClusterNodePoolNodeConfigWorkloadMetadataConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfigWorkloadMetadataConfig)(nil)).Elem()
}

func (i ClusterNodePoolNodeConfigWorkloadMetadataConfigArgs) ToClusterNodePoolNodeConfigWorkloadMetadataConfigOutput() ClusterNodePoolNodeConfigWorkloadMetadataConfigOutput {
	return i.ToClusterNodePoolNodeConfigWorkloadMetadataConfigOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigWorkloadMetadataConfigArgs) ToClusterNodePoolNodeConfigWorkloadMetadataConfigOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigWorkloadMetadataConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigWorkloadMetadataConfigOutput)
}

func (i ClusterNodePoolNodeConfigWorkloadMetadataConfigArgs) ToClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutput() ClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutput {
	return i.ToClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigWorkloadMetadataConfigArgs) ToClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigWorkloadMetadataConfigOutput).ToClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutputWithContext(ctx)
}

// ClusterNodePoolNodeConfigWorkloadMetadataConfigPtrInput is an input type that accepts ClusterNodePoolNodeConfigWorkloadMetadataConfigArgs, ClusterNodePoolNodeConfigWorkloadMetadataConfigPtr and ClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutput values.
// You can construct a concrete instance of `ClusterNodePoolNodeConfigWorkloadMetadataConfigPtrInput` via:
//
//	        ClusterNodePoolNodeConfigWorkloadMetadataConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterNodePoolNodeConfigWorkloadMetadataConfigPtrInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutput() ClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutput
	ToClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutputWithContext(context.Context) ClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutput
}

type clusterNodePoolNodeConfigWorkloadMetadataConfigPtrType ClusterNodePoolNodeConfigWorkloadMetadataConfigArgs

func ClusterNodePoolNodeConfigWorkloadMetadataConfigPtr(v *ClusterNodePoolNodeConfigWorkloadMetadataConfigArgs) ClusterNodePoolNodeConfigWorkloadMetadataConfigPtrInput {
	return (*clusterNodePoolNodeConfigWorkloadMetadataConfigPtrType)(v)
}

func (*clusterNodePoolNodeConfigWorkloadMetadataConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolNodeConfigWorkloadMetadataConfig)(nil)).Elem()
}

func (i *clusterNodePoolNodeConfigWorkloadMetadataConfigPtrType) ToClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutput() ClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutput {
	return i.ToClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutputWithContext(context.Background())
}

func (i *clusterNodePoolNodeConfigWorkloadMetadataConfigPtrType) ToClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutput)
}

type ClusterNodePoolNodeConfigWorkloadMetadataConfigOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigWorkloadMetadataConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfigWorkloadMetadataConfig)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigWorkloadMetadataConfigOutput) ToClusterNodePoolNodeConfigWorkloadMetadataConfigOutput() ClusterNodePoolNodeConfigWorkloadMetadataConfigOutput {
	return o
}

func (o ClusterNodePoolNodeConfigWorkloadMetadataConfigOutput) ToClusterNodePoolNodeConfigWorkloadMetadataConfigOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigWorkloadMetadataConfigOutput {
	return o
}

func (o ClusterNodePoolNodeConfigWorkloadMetadataConfigOutput) ToClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutput() ClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutput {
	return o.ToClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutputWithContext(context.Background())
}

func (o ClusterNodePoolNodeConfigWorkloadMetadataConfigOutput) ToClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterNodePoolNodeConfigWorkloadMetadataConfig) *ClusterNodePoolNodeConfigWorkloadMetadataConfig {
		return &v
	}).(ClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutput)
}

// How to expose the node metadata to the workload running on the node.
// Accepted values are:
// * UNSPECIFIED: Not Set
// * GCE_METADATA: Expose all Compute Engine metadata to pods.
// * GKE_METADATA: Run the GKE Metadata Server on this node. The GKE Metadata Server exposes a metadata API to workloads that is compatible with the V1 Compute Metadata APIs exposed by the Compute Engine and App Engine Metadata Servers. This feature can only be enabled if [workload identity](https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity) is enabled at the cluster level.
func (o ClusterNodePoolNodeConfigWorkloadMetadataConfigOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigWorkloadMetadataConfig) string { return v.Mode }).(pulumi.StringOutput)
}

type ClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolNodeConfigWorkloadMetadataConfig)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutput) ToClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutput() ClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutput {
	return o
}

func (o ClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutput) ToClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutput {
	return o
}

func (o ClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutput) Elem() ClusterNodePoolNodeConfigWorkloadMetadataConfigOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfigWorkloadMetadataConfig) ClusterNodePoolNodeConfigWorkloadMetadataConfig {
		if v != nil {
			return *v
		}
		var ret ClusterNodePoolNodeConfigWorkloadMetadataConfig
		return ret
	}).(ClusterNodePoolNodeConfigWorkloadMetadataConfigOutput)
}

// How to expose the node metadata to the workload running on the node.
// Accepted values are:
// * UNSPECIFIED: Not Set
// * GCE_METADATA: Expose all Compute Engine metadata to pods.
// * GKE_METADATA: Run the GKE Metadata Server on this node. The GKE Metadata Server exposes a metadata API to workloads that is compatible with the V1 Compute Metadata APIs exposed by the Compute Engine and App Engine Metadata Servers. This feature can only be enabled if [workload identity](https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity) is enabled at the cluster level.
func (o ClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfigWorkloadMetadataConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Mode
	}).(pulumi.StringPtrOutput)
}

type ClusterNodePoolPlacementPolicy struct {
	// If set, refers to the name of a custom resource policy supplied by the user. The resource policy must be in the same project and region as the node pool. If not found, InvalidArgument error is returned.
	PolicyName *string `pulumi:"policyName"`
	// TPU placement topology for pod slice node pool. https://cloud.google.com/tpu/docs/types-topologies#tpu_topologies
	TpuTopology *string `pulumi:"tpuTopology"`
	// Telemetry integration for the cluster. Supported values (`ENABLED, DISABLED, SYSTEM_ONLY`);
	// `SYSTEM_ONLY` (Only system components are monitored and logged) is only available in GKE versions 1.15 and later.
	Type string `pulumi:"type"`
}

// ClusterNodePoolPlacementPolicyInput is an input type that accepts ClusterNodePoolPlacementPolicyArgs and ClusterNodePoolPlacementPolicyOutput values.
// You can construct a concrete instance of `ClusterNodePoolPlacementPolicyInput` via:
//
//	ClusterNodePoolPlacementPolicyArgs{...}
type ClusterNodePoolPlacementPolicyInput interface {
	pulumi.Input

	ToClusterNodePoolPlacementPolicyOutput() ClusterNodePoolPlacementPolicyOutput
	ToClusterNodePoolPlacementPolicyOutputWithContext(context.Context) ClusterNodePoolPlacementPolicyOutput
}

type ClusterNodePoolPlacementPolicyArgs struct {
	// If set, refers to the name of a custom resource policy supplied by the user. The resource policy must be in the same project and region as the node pool. If not found, InvalidArgument error is returned.
	PolicyName pulumi.StringPtrInput `pulumi:"policyName"`
	// TPU placement topology for pod slice node pool. https://cloud.google.com/tpu/docs/types-topologies#tpu_topologies
	TpuTopology pulumi.StringPtrInput `pulumi:"tpuTopology"`
	// Telemetry integration for the cluster. Supported values (`ENABLED, DISABLED, SYSTEM_ONLY`);
	// `SYSTEM_ONLY` (Only system components are monitored and logged) is only available in GKE versions 1.15 and later.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ClusterNodePoolPlacementPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolPlacementPolicy)(nil)).Elem()
}

func (i ClusterNodePoolPlacementPolicyArgs) ToClusterNodePoolPlacementPolicyOutput() ClusterNodePoolPlacementPolicyOutput {
	return i.ToClusterNodePoolPlacementPolicyOutputWithContext(context.Background())
}

func (i ClusterNodePoolPlacementPolicyArgs) ToClusterNodePoolPlacementPolicyOutputWithContext(ctx context.Context) ClusterNodePoolPlacementPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolPlacementPolicyOutput)
}

func (i ClusterNodePoolPlacementPolicyArgs) ToClusterNodePoolPlacementPolicyPtrOutput() ClusterNodePoolPlacementPolicyPtrOutput {
	return i.ToClusterNodePoolPlacementPolicyPtrOutputWithContext(context.Background())
}

func (i ClusterNodePoolPlacementPolicyArgs) ToClusterNodePoolPlacementPolicyPtrOutputWithContext(ctx context.Context) ClusterNodePoolPlacementPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolPlacementPolicyOutput).ToClusterNodePoolPlacementPolicyPtrOutputWithContext(ctx)
}

// ClusterNodePoolPlacementPolicyPtrInput is an input type that accepts ClusterNodePoolPlacementPolicyArgs, ClusterNodePoolPlacementPolicyPtr and ClusterNodePoolPlacementPolicyPtrOutput values.
// You can construct a concrete instance of `ClusterNodePoolPlacementPolicyPtrInput` via:
//
//	        ClusterNodePoolPlacementPolicyArgs{...}
//
//	or:
//
//	        nil
type ClusterNodePoolPlacementPolicyPtrInput interface {
	pulumi.Input

	ToClusterNodePoolPlacementPolicyPtrOutput() ClusterNodePoolPlacementPolicyPtrOutput
	ToClusterNodePoolPlacementPolicyPtrOutputWithContext(context.Context) ClusterNodePoolPlacementPolicyPtrOutput
}

type clusterNodePoolPlacementPolicyPtrType ClusterNodePoolPlacementPolicyArgs

func ClusterNodePoolPlacementPolicyPtr(v *ClusterNodePoolPlacementPolicyArgs) ClusterNodePoolPlacementPolicyPtrInput {
	return (*clusterNodePoolPlacementPolicyPtrType)(v)
}

func (*clusterNodePoolPlacementPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolPlacementPolicy)(nil)).Elem()
}

func (i *clusterNodePoolPlacementPolicyPtrType) ToClusterNodePoolPlacementPolicyPtrOutput() ClusterNodePoolPlacementPolicyPtrOutput {
	return i.ToClusterNodePoolPlacementPolicyPtrOutputWithContext(context.Background())
}

func (i *clusterNodePoolPlacementPolicyPtrType) ToClusterNodePoolPlacementPolicyPtrOutputWithContext(ctx context.Context) ClusterNodePoolPlacementPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolPlacementPolicyPtrOutput)
}

type ClusterNodePoolPlacementPolicyOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolPlacementPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolPlacementPolicy)(nil)).Elem()
}

func (o ClusterNodePoolPlacementPolicyOutput) ToClusterNodePoolPlacementPolicyOutput() ClusterNodePoolPlacementPolicyOutput {
	return o
}

func (o ClusterNodePoolPlacementPolicyOutput) ToClusterNodePoolPlacementPolicyOutputWithContext(ctx context.Context) ClusterNodePoolPlacementPolicyOutput {
	return o
}

func (o ClusterNodePoolPlacementPolicyOutput) ToClusterNodePoolPlacementPolicyPtrOutput() ClusterNodePoolPlacementPolicyPtrOutput {
	return o.ToClusterNodePoolPlacementPolicyPtrOutputWithContext(context.Background())
}

func (o ClusterNodePoolPlacementPolicyOutput) ToClusterNodePoolPlacementPolicyPtrOutputWithContext(ctx context.Context) ClusterNodePoolPlacementPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterNodePoolPlacementPolicy) *ClusterNodePoolPlacementPolicy {
		return &v
	}).(ClusterNodePoolPlacementPolicyPtrOutput)
}

// If set, refers to the name of a custom resource policy supplied by the user. The resource policy must be in the same project and region as the node pool. If not found, InvalidArgument error is returned.
func (o ClusterNodePoolPlacementPolicyOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolPlacementPolicy) *string { return v.PolicyName }).(pulumi.StringPtrOutput)
}

// TPU placement topology for pod slice node pool. https://cloud.google.com/tpu/docs/types-topologies#tpu_topologies
func (o ClusterNodePoolPlacementPolicyOutput) TpuTopology() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolPlacementPolicy) *string { return v.TpuTopology }).(pulumi.StringPtrOutput)
}

// Telemetry integration for the cluster. Supported values (`ENABLED, DISABLED, SYSTEM_ONLY`);
// `SYSTEM_ONLY` (Only system components are monitored and logged) is only available in GKE versions 1.15 and later.
func (o ClusterNodePoolPlacementPolicyOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodePoolPlacementPolicy) string { return v.Type }).(pulumi.StringOutput)
}

type ClusterNodePoolPlacementPolicyPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolPlacementPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolPlacementPolicy)(nil)).Elem()
}

func (o ClusterNodePoolPlacementPolicyPtrOutput) ToClusterNodePoolPlacementPolicyPtrOutput() ClusterNodePoolPlacementPolicyPtrOutput {
	return o
}

func (o ClusterNodePoolPlacementPolicyPtrOutput) ToClusterNodePoolPlacementPolicyPtrOutputWithContext(ctx context.Context) ClusterNodePoolPlacementPolicyPtrOutput {
	return o
}

func (o ClusterNodePoolPlacementPolicyPtrOutput) Elem() ClusterNodePoolPlacementPolicyOutput {
	return o.ApplyT(func(v *ClusterNodePoolPlacementPolicy) ClusterNodePoolPlacementPolicy {
		if v != nil {
			return *v
		}
		var ret ClusterNodePoolPlacementPolicy
		return ret
	}).(ClusterNodePoolPlacementPolicyOutput)
}

// If set, refers to the name of a custom resource policy supplied by the user. The resource policy must be in the same project and region as the node pool. If not found, InvalidArgument error is returned.
func (o ClusterNodePoolPlacementPolicyPtrOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolPlacementPolicy) *string {
		if v == nil {
			return nil
		}
		return v.PolicyName
	}).(pulumi.StringPtrOutput)
}

// TPU placement topology for pod slice node pool. https://cloud.google.com/tpu/docs/types-topologies#tpu_topologies
func (o ClusterNodePoolPlacementPolicyPtrOutput) TpuTopology() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolPlacementPolicy) *string {
		if v == nil {
			return nil
		}
		return v.TpuTopology
	}).(pulumi.StringPtrOutput)
}

// Telemetry integration for the cluster. Supported values (`ENABLED, DISABLED, SYSTEM_ONLY`);
// `SYSTEM_ONLY` (Only system components are monitored and logged) is only available in GKE versions 1.15 and later.
func (o ClusterNodePoolPlacementPolicyPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolPlacementPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type ClusterNodePoolQueuedProvisioning struct {
	// Whether nodes in this node pool are obtainable solely through the ProvisioningRequest API
	Enabled bool `pulumi:"enabled"`
}

// ClusterNodePoolQueuedProvisioningInput is an input type that accepts ClusterNodePoolQueuedProvisioningArgs and ClusterNodePoolQueuedProvisioningOutput values.
// You can construct a concrete instance of `ClusterNodePoolQueuedProvisioningInput` via:
//
//	ClusterNodePoolQueuedProvisioningArgs{...}
type ClusterNodePoolQueuedProvisioningInput interface {
	pulumi.Input

	ToClusterNodePoolQueuedProvisioningOutput() ClusterNodePoolQueuedProvisioningOutput
	ToClusterNodePoolQueuedProvisioningOutputWithContext(context.Context) ClusterNodePoolQueuedProvisioningOutput
}

type ClusterNodePoolQueuedProvisioningArgs struct {
	// Whether nodes in this node pool are obtainable solely through the ProvisioningRequest API
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (ClusterNodePoolQueuedProvisioningArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolQueuedProvisioning)(nil)).Elem()
}

func (i ClusterNodePoolQueuedProvisioningArgs) ToClusterNodePoolQueuedProvisioningOutput() ClusterNodePoolQueuedProvisioningOutput {
	return i.ToClusterNodePoolQueuedProvisioningOutputWithContext(context.Background())
}

func (i ClusterNodePoolQueuedProvisioningArgs) ToClusterNodePoolQueuedProvisioningOutputWithContext(ctx context.Context) ClusterNodePoolQueuedProvisioningOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolQueuedProvisioningOutput)
}

func (i ClusterNodePoolQueuedProvisioningArgs) ToClusterNodePoolQueuedProvisioningPtrOutput() ClusterNodePoolQueuedProvisioningPtrOutput {
	return i.ToClusterNodePoolQueuedProvisioningPtrOutputWithContext(context.Background())
}

func (i ClusterNodePoolQueuedProvisioningArgs) ToClusterNodePoolQueuedProvisioningPtrOutputWithContext(ctx context.Context) ClusterNodePoolQueuedProvisioningPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolQueuedProvisioningOutput).ToClusterNodePoolQueuedProvisioningPtrOutputWithContext(ctx)
}

// ClusterNodePoolQueuedProvisioningPtrInput is an input type that accepts ClusterNodePoolQueuedProvisioningArgs, ClusterNodePoolQueuedProvisioningPtr and ClusterNodePoolQueuedProvisioningPtrOutput values.
// You can construct a concrete instance of `ClusterNodePoolQueuedProvisioningPtrInput` via:
//
//	        ClusterNodePoolQueuedProvisioningArgs{...}
//
//	or:
//
//	        nil
type ClusterNodePoolQueuedProvisioningPtrInput interface {
	pulumi.Input

	ToClusterNodePoolQueuedProvisioningPtrOutput() ClusterNodePoolQueuedProvisioningPtrOutput
	ToClusterNodePoolQueuedProvisioningPtrOutputWithContext(context.Context) ClusterNodePoolQueuedProvisioningPtrOutput
}

type clusterNodePoolQueuedProvisioningPtrType ClusterNodePoolQueuedProvisioningArgs

func ClusterNodePoolQueuedProvisioningPtr(v *ClusterNodePoolQueuedProvisioningArgs) ClusterNodePoolQueuedProvisioningPtrInput {
	return (*clusterNodePoolQueuedProvisioningPtrType)(v)
}

func (*clusterNodePoolQueuedProvisioningPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolQueuedProvisioning)(nil)).Elem()
}

func (i *clusterNodePoolQueuedProvisioningPtrType) ToClusterNodePoolQueuedProvisioningPtrOutput() ClusterNodePoolQueuedProvisioningPtrOutput {
	return i.ToClusterNodePoolQueuedProvisioningPtrOutputWithContext(context.Background())
}

func (i *clusterNodePoolQueuedProvisioningPtrType) ToClusterNodePoolQueuedProvisioningPtrOutputWithContext(ctx context.Context) ClusterNodePoolQueuedProvisioningPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolQueuedProvisioningPtrOutput)
}

type ClusterNodePoolQueuedProvisioningOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolQueuedProvisioningOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolQueuedProvisioning)(nil)).Elem()
}

func (o ClusterNodePoolQueuedProvisioningOutput) ToClusterNodePoolQueuedProvisioningOutput() ClusterNodePoolQueuedProvisioningOutput {
	return o
}

func (o ClusterNodePoolQueuedProvisioningOutput) ToClusterNodePoolQueuedProvisioningOutputWithContext(ctx context.Context) ClusterNodePoolQueuedProvisioningOutput {
	return o
}

func (o ClusterNodePoolQueuedProvisioningOutput) ToClusterNodePoolQueuedProvisioningPtrOutput() ClusterNodePoolQueuedProvisioningPtrOutput {
	return o.ToClusterNodePoolQueuedProvisioningPtrOutputWithContext(context.Background())
}

func (o ClusterNodePoolQueuedProvisioningOutput) ToClusterNodePoolQueuedProvisioningPtrOutputWithContext(ctx context.Context) ClusterNodePoolQueuedProvisioningPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterNodePoolQueuedProvisioning) *ClusterNodePoolQueuedProvisioning {
		return &v
	}).(ClusterNodePoolQueuedProvisioningPtrOutput)
}

// Whether nodes in this node pool are obtainable solely through the ProvisioningRequest API
func (o ClusterNodePoolQueuedProvisioningOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterNodePoolQueuedProvisioning) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type ClusterNodePoolQueuedProvisioningPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolQueuedProvisioningPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolQueuedProvisioning)(nil)).Elem()
}

func (o ClusterNodePoolQueuedProvisioningPtrOutput) ToClusterNodePoolQueuedProvisioningPtrOutput() ClusterNodePoolQueuedProvisioningPtrOutput {
	return o
}

func (o ClusterNodePoolQueuedProvisioningPtrOutput) ToClusterNodePoolQueuedProvisioningPtrOutputWithContext(ctx context.Context) ClusterNodePoolQueuedProvisioningPtrOutput {
	return o
}

func (o ClusterNodePoolQueuedProvisioningPtrOutput) Elem() ClusterNodePoolQueuedProvisioningOutput {
	return o.ApplyT(func(v *ClusterNodePoolQueuedProvisioning) ClusterNodePoolQueuedProvisioning {
		if v != nil {
			return *v
		}
		var ret ClusterNodePoolQueuedProvisioning
		return ret
	}).(ClusterNodePoolQueuedProvisioningOutput)
}

// Whether nodes in this node pool are obtainable solely through the ProvisioningRequest API
func (o ClusterNodePoolQueuedProvisioningPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolQueuedProvisioning) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type ClusterNodePoolUpgradeSettings struct {
	// Settings for blue-green upgrade strategy. To be specified when strategy is set to BLUE_GREEN. Structure is documented below.
	BlueGreenSettings *ClusterNodePoolUpgradeSettingsBlueGreenSettings `pulumi:"blueGreenSettings"`
	// The maximum number of nodes that can be created beyond the current size of the node pool during the upgrade process. To be used when strategy is set to SURGE. Default is 0.
	MaxSurge *int `pulumi:"maxSurge"`
	// The maximum number of nodes that can be simultaneously unavailable during the upgrade process. To be used when strategy is set to SURGE. Default is 0.
	MaxUnavailable *int `pulumi:"maxUnavailable"`
	// Strategy used for node pool update. Strategy can only be one of BLUE_GREEN or SURGE. The default is value is SURGE.
	Strategy *string `pulumi:"strategy"`
}

// ClusterNodePoolUpgradeSettingsInput is an input type that accepts ClusterNodePoolUpgradeSettingsArgs and ClusterNodePoolUpgradeSettingsOutput values.
// You can construct a concrete instance of `ClusterNodePoolUpgradeSettingsInput` via:
//
//	ClusterNodePoolUpgradeSettingsArgs{...}
type ClusterNodePoolUpgradeSettingsInput interface {
	pulumi.Input

	ToClusterNodePoolUpgradeSettingsOutput() ClusterNodePoolUpgradeSettingsOutput
	ToClusterNodePoolUpgradeSettingsOutputWithContext(context.Context) ClusterNodePoolUpgradeSettingsOutput
}

type ClusterNodePoolUpgradeSettingsArgs struct {
	// Settings for blue-green upgrade strategy. To be specified when strategy is set to BLUE_GREEN. Structure is documented below.
	BlueGreenSettings ClusterNodePoolUpgradeSettingsBlueGreenSettingsPtrInput `pulumi:"blueGreenSettings"`
	// The maximum number of nodes that can be created beyond the current size of the node pool during the upgrade process. To be used when strategy is set to SURGE. Default is 0.
	MaxSurge pulumi.IntPtrInput `pulumi:"maxSurge"`
	// The maximum number of nodes that can be simultaneously unavailable during the upgrade process. To be used when strategy is set to SURGE. Default is 0.
	MaxUnavailable pulumi.IntPtrInput `pulumi:"maxUnavailable"`
	// Strategy used for node pool update. Strategy can only be one of BLUE_GREEN or SURGE. The default is value is SURGE.
	Strategy pulumi.StringPtrInput `pulumi:"strategy"`
}

func (ClusterNodePoolUpgradeSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolUpgradeSettings)(nil)).Elem()
}

func (i ClusterNodePoolUpgradeSettingsArgs) ToClusterNodePoolUpgradeSettingsOutput() ClusterNodePoolUpgradeSettingsOutput {
	return i.ToClusterNodePoolUpgradeSettingsOutputWithContext(context.Background())
}

func (i ClusterNodePoolUpgradeSettingsArgs) ToClusterNodePoolUpgradeSettingsOutputWithContext(ctx context.Context) ClusterNodePoolUpgradeSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolUpgradeSettingsOutput)
}

func (i ClusterNodePoolUpgradeSettingsArgs) ToClusterNodePoolUpgradeSettingsPtrOutput() ClusterNodePoolUpgradeSettingsPtrOutput {
	return i.ToClusterNodePoolUpgradeSettingsPtrOutputWithContext(context.Background())
}

func (i ClusterNodePoolUpgradeSettingsArgs) ToClusterNodePoolUpgradeSettingsPtrOutputWithContext(ctx context.Context) ClusterNodePoolUpgradeSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolUpgradeSettingsOutput).ToClusterNodePoolUpgradeSettingsPtrOutputWithContext(ctx)
}

// ClusterNodePoolUpgradeSettingsPtrInput is an input type that accepts ClusterNodePoolUpgradeSettingsArgs, ClusterNodePoolUpgradeSettingsPtr and ClusterNodePoolUpgradeSettingsPtrOutput values.
// You can construct a concrete instance of `ClusterNodePoolUpgradeSettingsPtrInput` via:
//
//	        ClusterNodePoolUpgradeSettingsArgs{...}
//
//	or:
//
//	        nil
type ClusterNodePoolUpgradeSettingsPtrInput interface {
	pulumi.Input

	ToClusterNodePoolUpgradeSettingsPtrOutput() ClusterNodePoolUpgradeSettingsPtrOutput
	ToClusterNodePoolUpgradeSettingsPtrOutputWithContext(context.Context) ClusterNodePoolUpgradeSettingsPtrOutput
}

type clusterNodePoolUpgradeSettingsPtrType ClusterNodePoolUpgradeSettingsArgs

func ClusterNodePoolUpgradeSettingsPtr(v *ClusterNodePoolUpgradeSettingsArgs) ClusterNodePoolUpgradeSettingsPtrInput {
	return (*clusterNodePoolUpgradeSettingsPtrType)(v)
}

func (*clusterNodePoolUpgradeSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolUpgradeSettings)(nil)).Elem()
}

func (i *clusterNodePoolUpgradeSettingsPtrType) ToClusterNodePoolUpgradeSettingsPtrOutput() ClusterNodePoolUpgradeSettingsPtrOutput {
	return i.ToClusterNodePoolUpgradeSettingsPtrOutputWithContext(context.Background())
}

func (i *clusterNodePoolUpgradeSettingsPtrType) ToClusterNodePoolUpgradeSettingsPtrOutputWithContext(ctx context.Context) ClusterNodePoolUpgradeSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolUpgradeSettingsPtrOutput)
}

type ClusterNodePoolUpgradeSettingsOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolUpgradeSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolUpgradeSettings)(nil)).Elem()
}

func (o ClusterNodePoolUpgradeSettingsOutput) ToClusterNodePoolUpgradeSettingsOutput() ClusterNodePoolUpgradeSettingsOutput {
	return o
}

func (o ClusterNodePoolUpgradeSettingsOutput) ToClusterNodePoolUpgradeSettingsOutputWithContext(ctx context.Context) ClusterNodePoolUpgradeSettingsOutput {
	return o
}

func (o ClusterNodePoolUpgradeSettingsOutput) ToClusterNodePoolUpgradeSettingsPtrOutput() ClusterNodePoolUpgradeSettingsPtrOutput {
	return o.ToClusterNodePoolUpgradeSettingsPtrOutputWithContext(context.Background())
}

func (o ClusterNodePoolUpgradeSettingsOutput) ToClusterNodePoolUpgradeSettingsPtrOutputWithContext(ctx context.Context) ClusterNodePoolUpgradeSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterNodePoolUpgradeSettings) *ClusterNodePoolUpgradeSettings {
		return &v
	}).(ClusterNodePoolUpgradeSettingsPtrOutput)
}

// Settings for blue-green upgrade strategy. To be specified when strategy is set to BLUE_GREEN. Structure is documented below.
func (o ClusterNodePoolUpgradeSettingsOutput) BlueGreenSettings() ClusterNodePoolUpgradeSettingsBlueGreenSettingsPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolUpgradeSettings) *ClusterNodePoolUpgradeSettingsBlueGreenSettings {
		return v.BlueGreenSettings
	}).(ClusterNodePoolUpgradeSettingsBlueGreenSettingsPtrOutput)
}

// The maximum number of nodes that can be created beyond the current size of the node pool during the upgrade process. To be used when strategy is set to SURGE. Default is 0.
func (o ClusterNodePoolUpgradeSettingsOutput) MaxSurge() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolUpgradeSettings) *int { return v.MaxSurge }).(pulumi.IntPtrOutput)
}

// The maximum number of nodes that can be simultaneously unavailable during the upgrade process. To be used when strategy is set to SURGE. Default is 0.
func (o ClusterNodePoolUpgradeSettingsOutput) MaxUnavailable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolUpgradeSettings) *int { return v.MaxUnavailable }).(pulumi.IntPtrOutput)
}

// Strategy used for node pool update. Strategy can only be one of BLUE_GREEN or SURGE. The default is value is SURGE.
func (o ClusterNodePoolUpgradeSettingsOutput) Strategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolUpgradeSettings) *string { return v.Strategy }).(pulumi.StringPtrOutput)
}

type ClusterNodePoolUpgradeSettingsPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolUpgradeSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolUpgradeSettings)(nil)).Elem()
}

func (o ClusterNodePoolUpgradeSettingsPtrOutput) ToClusterNodePoolUpgradeSettingsPtrOutput() ClusterNodePoolUpgradeSettingsPtrOutput {
	return o
}

func (o ClusterNodePoolUpgradeSettingsPtrOutput) ToClusterNodePoolUpgradeSettingsPtrOutputWithContext(ctx context.Context) ClusterNodePoolUpgradeSettingsPtrOutput {
	return o
}

func (o ClusterNodePoolUpgradeSettingsPtrOutput) Elem() ClusterNodePoolUpgradeSettingsOutput {
	return o.ApplyT(func(v *ClusterNodePoolUpgradeSettings) ClusterNodePoolUpgradeSettings {
		if v != nil {
			return *v
		}
		var ret ClusterNodePoolUpgradeSettings
		return ret
	}).(ClusterNodePoolUpgradeSettingsOutput)
}

// Settings for blue-green upgrade strategy. To be specified when strategy is set to BLUE_GREEN. Structure is documented below.
func (o ClusterNodePoolUpgradeSettingsPtrOutput) BlueGreenSettings() ClusterNodePoolUpgradeSettingsBlueGreenSettingsPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolUpgradeSettings) *ClusterNodePoolUpgradeSettingsBlueGreenSettings {
		if v == nil {
			return nil
		}
		return v.BlueGreenSettings
	}).(ClusterNodePoolUpgradeSettingsBlueGreenSettingsPtrOutput)
}

// The maximum number of nodes that can be created beyond the current size of the node pool during the upgrade process. To be used when strategy is set to SURGE. Default is 0.
func (o ClusterNodePoolUpgradeSettingsPtrOutput) MaxSurge() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolUpgradeSettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxSurge
	}).(pulumi.IntPtrOutput)
}

// The maximum number of nodes that can be simultaneously unavailable during the upgrade process. To be used when strategy is set to SURGE. Default is 0.
func (o ClusterNodePoolUpgradeSettingsPtrOutput) MaxUnavailable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolUpgradeSettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxUnavailable
	}).(pulumi.IntPtrOutput)
}

// Strategy used for node pool update. Strategy can only be one of BLUE_GREEN or SURGE. The default is value is SURGE.
func (o ClusterNodePoolUpgradeSettingsPtrOutput) Strategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolUpgradeSettings) *string {
		if v == nil {
			return nil
		}
		return v.Strategy
	}).(pulumi.StringPtrOutput)
}

type ClusterNodePoolUpgradeSettingsBlueGreenSettings struct {
	// Time needed after draining entire blue pool. After this period, blue pool will be cleaned up. A duration in seconds with up to nine fractional digits, ending with 's'. Example: "3.5s".
	NodePoolSoakDuration *string `pulumi:"nodePoolSoakDuration"`
	// Standard policy for the blue-green upgrade. To be specified when strategy is set to BLUE_GREEN. Structure is documented below.
	StandardRolloutPolicy ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicy `pulumi:"standardRolloutPolicy"`
}

// ClusterNodePoolUpgradeSettingsBlueGreenSettingsInput is an input type that accepts ClusterNodePoolUpgradeSettingsBlueGreenSettingsArgs and ClusterNodePoolUpgradeSettingsBlueGreenSettingsOutput values.
// You can construct a concrete instance of `ClusterNodePoolUpgradeSettingsBlueGreenSettingsInput` via:
//
//	ClusterNodePoolUpgradeSettingsBlueGreenSettingsArgs{...}
type ClusterNodePoolUpgradeSettingsBlueGreenSettingsInput interface {
	pulumi.Input

	ToClusterNodePoolUpgradeSettingsBlueGreenSettingsOutput() ClusterNodePoolUpgradeSettingsBlueGreenSettingsOutput
	ToClusterNodePoolUpgradeSettingsBlueGreenSettingsOutputWithContext(context.Context) ClusterNodePoolUpgradeSettingsBlueGreenSettingsOutput
}

type ClusterNodePoolUpgradeSettingsBlueGreenSettingsArgs struct {
	// Time needed after draining entire blue pool. After this period, blue pool will be cleaned up. A duration in seconds with up to nine fractional digits, ending with 's'. Example: "3.5s".
	NodePoolSoakDuration pulumi.StringPtrInput `pulumi:"nodePoolSoakDuration"`
	// Standard policy for the blue-green upgrade. To be specified when strategy is set to BLUE_GREEN. Structure is documented below.
	StandardRolloutPolicy ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyInput `pulumi:"standardRolloutPolicy"`
}

func (ClusterNodePoolUpgradeSettingsBlueGreenSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolUpgradeSettingsBlueGreenSettings)(nil)).Elem()
}

func (i ClusterNodePoolUpgradeSettingsBlueGreenSettingsArgs) ToClusterNodePoolUpgradeSettingsBlueGreenSettingsOutput() ClusterNodePoolUpgradeSettingsBlueGreenSettingsOutput {
	return i.ToClusterNodePoolUpgradeSettingsBlueGreenSettingsOutputWithContext(context.Background())
}

func (i ClusterNodePoolUpgradeSettingsBlueGreenSettingsArgs) ToClusterNodePoolUpgradeSettingsBlueGreenSettingsOutputWithContext(ctx context.Context) ClusterNodePoolUpgradeSettingsBlueGreenSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolUpgradeSettingsBlueGreenSettingsOutput)
}

func (i ClusterNodePoolUpgradeSettingsBlueGreenSettingsArgs) ToClusterNodePoolUpgradeSettingsBlueGreenSettingsPtrOutput() ClusterNodePoolUpgradeSettingsBlueGreenSettingsPtrOutput {
	return i.ToClusterNodePoolUpgradeSettingsBlueGreenSettingsPtrOutputWithContext(context.Background())
}

func (i ClusterNodePoolUpgradeSettingsBlueGreenSettingsArgs) ToClusterNodePoolUpgradeSettingsBlueGreenSettingsPtrOutputWithContext(ctx context.Context) ClusterNodePoolUpgradeSettingsBlueGreenSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolUpgradeSettingsBlueGreenSettingsOutput).ToClusterNodePoolUpgradeSettingsBlueGreenSettingsPtrOutputWithContext(ctx)
}

// ClusterNodePoolUpgradeSettingsBlueGreenSettingsPtrInput is an input type that accepts ClusterNodePoolUpgradeSettingsBlueGreenSettingsArgs, ClusterNodePoolUpgradeSettingsBlueGreenSettingsPtr and ClusterNodePoolUpgradeSettingsBlueGreenSettingsPtrOutput values.
// You can construct a concrete instance of `ClusterNodePoolUpgradeSettingsBlueGreenSettingsPtrInput` via:
//
//	        ClusterNodePoolUpgradeSettingsBlueGreenSettingsArgs{...}
//
//	or:
//
//	        nil
type ClusterNodePoolUpgradeSettingsBlueGreenSettingsPtrInput interface {
	pulumi.Input

	ToClusterNodePoolUpgradeSettingsBlueGreenSettingsPtrOutput() ClusterNodePoolUpgradeSettingsBlueGreenSettingsPtrOutput
	ToClusterNodePoolUpgradeSettingsBlueGreenSettingsPtrOutputWithContext(context.Context) ClusterNodePoolUpgradeSettingsBlueGreenSettingsPtrOutput
}

type clusterNodePoolUpgradeSettingsBlueGreenSettingsPtrType ClusterNodePoolUpgradeSettingsBlueGreenSettingsArgs

func ClusterNodePoolUpgradeSettingsBlueGreenSettingsPtr(v *ClusterNodePoolUpgradeSettingsBlueGreenSettingsArgs) ClusterNodePoolUpgradeSettingsBlueGreenSettingsPtrInput {
	return (*clusterNodePoolUpgradeSettingsBlueGreenSettingsPtrType)(v)
}

func (*clusterNodePoolUpgradeSettingsBlueGreenSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolUpgradeSettingsBlueGreenSettings)(nil)).Elem()
}

func (i *clusterNodePoolUpgradeSettingsBlueGreenSettingsPtrType) ToClusterNodePoolUpgradeSettingsBlueGreenSettingsPtrOutput() ClusterNodePoolUpgradeSettingsBlueGreenSettingsPtrOutput {
	return i.ToClusterNodePoolUpgradeSettingsBlueGreenSettingsPtrOutputWithContext(context.Background())
}

func (i *clusterNodePoolUpgradeSettingsBlueGreenSettingsPtrType) ToClusterNodePoolUpgradeSettingsBlueGreenSettingsPtrOutputWithContext(ctx context.Context) ClusterNodePoolUpgradeSettingsBlueGreenSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolUpgradeSettingsBlueGreenSettingsPtrOutput)
}

type ClusterNodePoolUpgradeSettingsBlueGreenSettingsOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolUpgradeSettingsBlueGreenSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolUpgradeSettingsBlueGreenSettings)(nil)).Elem()
}

func (o ClusterNodePoolUpgradeSettingsBlueGreenSettingsOutput) ToClusterNodePoolUpgradeSettingsBlueGreenSettingsOutput() ClusterNodePoolUpgradeSettingsBlueGreenSettingsOutput {
	return o
}

func (o ClusterNodePoolUpgradeSettingsBlueGreenSettingsOutput) ToClusterNodePoolUpgradeSettingsBlueGreenSettingsOutputWithContext(ctx context.Context) ClusterNodePoolUpgradeSettingsBlueGreenSettingsOutput {
	return o
}

func (o ClusterNodePoolUpgradeSettingsBlueGreenSettingsOutput) ToClusterNodePoolUpgradeSettingsBlueGreenSettingsPtrOutput() ClusterNodePoolUpgradeSettingsBlueGreenSettingsPtrOutput {
	return o.ToClusterNodePoolUpgradeSettingsBlueGreenSettingsPtrOutputWithContext(context.Background())
}

func (o ClusterNodePoolUpgradeSettingsBlueGreenSettingsOutput) ToClusterNodePoolUpgradeSettingsBlueGreenSettingsPtrOutputWithContext(ctx context.Context) ClusterNodePoolUpgradeSettingsBlueGreenSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterNodePoolUpgradeSettingsBlueGreenSettings) *ClusterNodePoolUpgradeSettingsBlueGreenSettings {
		return &v
	}).(ClusterNodePoolUpgradeSettingsBlueGreenSettingsPtrOutput)
}

// Time needed after draining entire blue pool. After this period, blue pool will be cleaned up. A duration in seconds with up to nine fractional digits, ending with 's'. Example: "3.5s".
func (o ClusterNodePoolUpgradeSettingsBlueGreenSettingsOutput) NodePoolSoakDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolUpgradeSettingsBlueGreenSettings) *string { return v.NodePoolSoakDuration }).(pulumi.StringPtrOutput)
}

// Standard policy for the blue-green upgrade. To be specified when strategy is set to BLUE_GREEN. Structure is documented below.
func (o ClusterNodePoolUpgradeSettingsBlueGreenSettingsOutput) StandardRolloutPolicy() ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutput {
	return o.ApplyT(func(v ClusterNodePoolUpgradeSettingsBlueGreenSettings) ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicy {
		return v.StandardRolloutPolicy
	}).(ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutput)
}

type ClusterNodePoolUpgradeSettingsBlueGreenSettingsPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolUpgradeSettingsBlueGreenSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolUpgradeSettingsBlueGreenSettings)(nil)).Elem()
}

func (o ClusterNodePoolUpgradeSettingsBlueGreenSettingsPtrOutput) ToClusterNodePoolUpgradeSettingsBlueGreenSettingsPtrOutput() ClusterNodePoolUpgradeSettingsBlueGreenSettingsPtrOutput {
	return o
}

func (o ClusterNodePoolUpgradeSettingsBlueGreenSettingsPtrOutput) ToClusterNodePoolUpgradeSettingsBlueGreenSettingsPtrOutputWithContext(ctx context.Context) ClusterNodePoolUpgradeSettingsBlueGreenSettingsPtrOutput {
	return o
}

func (o ClusterNodePoolUpgradeSettingsBlueGreenSettingsPtrOutput) Elem() ClusterNodePoolUpgradeSettingsBlueGreenSettingsOutput {
	return o.ApplyT(func(v *ClusterNodePoolUpgradeSettingsBlueGreenSettings) ClusterNodePoolUpgradeSettingsBlueGreenSettings {
		if v != nil {
			return *v
		}
		var ret ClusterNodePoolUpgradeSettingsBlueGreenSettings
		return ret
	}).(ClusterNodePoolUpgradeSettingsBlueGreenSettingsOutput)
}

// Time needed after draining entire blue pool. After this period, blue pool will be cleaned up. A duration in seconds with up to nine fractional digits, ending with 's'. Example: "3.5s".
func (o ClusterNodePoolUpgradeSettingsBlueGreenSettingsPtrOutput) NodePoolSoakDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolUpgradeSettingsBlueGreenSettings) *string {
		if v == nil {
			return nil
		}
		return v.NodePoolSoakDuration
	}).(pulumi.StringPtrOutput)
}

// Standard policy for the blue-green upgrade. To be specified when strategy is set to BLUE_GREEN. Structure is documented below.
func (o ClusterNodePoolUpgradeSettingsBlueGreenSettingsPtrOutput) StandardRolloutPolicy() ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolUpgradeSettingsBlueGreenSettings) *ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicy {
		if v == nil {
			return nil
		}
		return &v.StandardRolloutPolicy
	}).(ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput)
}

type ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicy struct {
	// Number of blue nodes to drain in a batch. Only one of the batchPercentage or batchNodeCount can be specified.
	BatchNodeCount *int `pulumi:"batchNodeCount"`
	// Percentage of the bool pool nodes to drain in a batch. The range of this field should be (0.0, 1.0). Only one of the batchPercentage or batchNodeCount can be specified.
	BatchPercentage *float64 `pulumi:"batchPercentage"`
	// Soak time after each batch gets drained. A duration in seconds with up to nine fractional digits, ending with 's'. Example: "3.5s".`.
	BatchSoakDuration *string `pulumi:"batchSoakDuration"`
}

// ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyInput is an input type that accepts ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyArgs and ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutput values.
// You can construct a concrete instance of `ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyInput` via:
//
//	ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyArgs{...}
type ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyInput interface {
	pulumi.Input

	ToClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutput() ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutput
	ToClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutputWithContext(context.Context) ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutput
}

type ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyArgs struct {
	// Number of blue nodes to drain in a batch. Only one of the batchPercentage or batchNodeCount can be specified.
	BatchNodeCount pulumi.IntPtrInput `pulumi:"batchNodeCount"`
	// Percentage of the bool pool nodes to drain in a batch. The range of this field should be (0.0, 1.0). Only one of the batchPercentage or batchNodeCount can be specified.
	BatchPercentage pulumi.Float64PtrInput `pulumi:"batchPercentage"`
	// Soak time after each batch gets drained. A duration in seconds with up to nine fractional digits, ending with 's'. Example: "3.5s".`.
	BatchSoakDuration pulumi.StringPtrInput `pulumi:"batchSoakDuration"`
}

func (ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicy)(nil)).Elem()
}

func (i ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyArgs) ToClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutput() ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutput {
	return i.ToClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutputWithContext(context.Background())
}

func (i ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyArgs) ToClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutputWithContext(ctx context.Context) ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutput)
}

func (i ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyArgs) ToClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput() ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput {
	return i.ToClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutputWithContext(context.Background())
}

func (i ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyArgs) ToClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutputWithContext(ctx context.Context) ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutput).ToClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutputWithContext(ctx)
}

// ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrInput is an input type that accepts ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyArgs, ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtr and ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput values.
// You can construct a concrete instance of `ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrInput` via:
//
//	        ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyArgs{...}
//
//	or:
//
//	        nil
type ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrInput interface {
	pulumi.Input

	ToClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput() ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput
	ToClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutputWithContext(context.Context) ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput
}

type clusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrType ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyArgs

func ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtr(v *ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyArgs) ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrInput {
	return (*clusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrType)(v)
}

func (*clusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicy)(nil)).Elem()
}

func (i *clusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrType) ToClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput() ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput {
	return i.ToClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutputWithContext(context.Background())
}

func (i *clusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrType) ToClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutputWithContext(ctx context.Context) ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput)
}

type ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicy)(nil)).Elem()
}

func (o ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutput) ToClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutput() ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutput {
	return o
}

func (o ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutput) ToClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutputWithContext(ctx context.Context) ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutput {
	return o
}

func (o ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutput) ToClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput() ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput {
	return o.ToClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutputWithContext(context.Background())
}

func (o ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutput) ToClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutputWithContext(ctx context.Context) ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicy) *ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicy {
		return &v
	}).(ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput)
}

// Number of blue nodes to drain in a batch. Only one of the batchPercentage or batchNodeCount can be specified.
func (o ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutput) BatchNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicy) *int {
		return v.BatchNodeCount
	}).(pulumi.IntPtrOutput)
}

// Percentage of the bool pool nodes to drain in a batch. The range of this field should be (0.0, 1.0). Only one of the batchPercentage or batchNodeCount can be specified.
func (o ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutput) BatchPercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicy) *float64 {
		return v.BatchPercentage
	}).(pulumi.Float64PtrOutput)
}

// Soak time after each batch gets drained. A duration in seconds with up to nine fractional digits, ending with 's'. Example: "3.5s".`.
func (o ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutput) BatchSoakDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicy) *string {
		return v.BatchSoakDuration
	}).(pulumi.StringPtrOutput)
}

type ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicy)(nil)).Elem()
}

func (o ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput) ToClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput() ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput {
	return o
}

func (o ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput) ToClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutputWithContext(ctx context.Context) ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput {
	return o
}

func (o ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput) Elem() ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutput {
	return o.ApplyT(func(v *ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicy) ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicy {
		if v != nil {
			return *v
		}
		var ret ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicy
		return ret
	}).(ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutput)
}

// Number of blue nodes to drain in a batch. Only one of the batchPercentage or batchNodeCount can be specified.
func (o ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput) BatchNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicy) *int {
		if v == nil {
			return nil
		}
		return v.BatchNodeCount
	}).(pulumi.IntPtrOutput)
}

// Percentage of the bool pool nodes to drain in a batch. The range of this field should be (0.0, 1.0). Only one of the batchPercentage or batchNodeCount can be specified.
func (o ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput) BatchPercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicy) *float64 {
		if v == nil {
			return nil
		}
		return v.BatchPercentage
	}).(pulumi.Float64PtrOutput)
}

// Soak time after each batch gets drained. A duration in seconds with up to nine fractional digits, ending with 's'. Example: "3.5s".`.
func (o ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput) BatchSoakDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicy) *string {
		if v == nil {
			return nil
		}
		return v.BatchSoakDuration
	}).(pulumi.StringPtrOutput)
}

type ClusterNotificationConfig struct {
	// The pubsub config for the cluster's upgrade notifications.
	Pubsub ClusterNotificationConfigPubsub `pulumi:"pubsub"`
}

// ClusterNotificationConfigInput is an input type that accepts ClusterNotificationConfigArgs and ClusterNotificationConfigOutput values.
// You can construct a concrete instance of `ClusterNotificationConfigInput` via:
//
//	ClusterNotificationConfigArgs{...}
type ClusterNotificationConfigInput interface {
	pulumi.Input

	ToClusterNotificationConfigOutput() ClusterNotificationConfigOutput
	ToClusterNotificationConfigOutputWithContext(context.Context) ClusterNotificationConfigOutput
}

type ClusterNotificationConfigArgs struct {
	// The pubsub config for the cluster's upgrade notifications.
	Pubsub ClusterNotificationConfigPubsubInput `pulumi:"pubsub"`
}

func (ClusterNotificationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNotificationConfig)(nil)).Elem()
}

func (i ClusterNotificationConfigArgs) ToClusterNotificationConfigOutput() ClusterNotificationConfigOutput {
	return i.ToClusterNotificationConfigOutputWithContext(context.Background())
}

func (i ClusterNotificationConfigArgs) ToClusterNotificationConfigOutputWithContext(ctx context.Context) ClusterNotificationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNotificationConfigOutput)
}

func (i ClusterNotificationConfigArgs) ToClusterNotificationConfigPtrOutput() ClusterNotificationConfigPtrOutput {
	return i.ToClusterNotificationConfigPtrOutputWithContext(context.Background())
}

func (i ClusterNotificationConfigArgs) ToClusterNotificationConfigPtrOutputWithContext(ctx context.Context) ClusterNotificationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNotificationConfigOutput).ToClusterNotificationConfigPtrOutputWithContext(ctx)
}

// ClusterNotificationConfigPtrInput is an input type that accepts ClusterNotificationConfigArgs, ClusterNotificationConfigPtr and ClusterNotificationConfigPtrOutput values.
// You can construct a concrete instance of `ClusterNotificationConfigPtrInput` via:
//
//	        ClusterNotificationConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterNotificationConfigPtrInput interface {
	pulumi.Input

	ToClusterNotificationConfigPtrOutput() ClusterNotificationConfigPtrOutput
	ToClusterNotificationConfigPtrOutputWithContext(context.Context) ClusterNotificationConfigPtrOutput
}

type clusterNotificationConfigPtrType ClusterNotificationConfigArgs

func ClusterNotificationConfigPtr(v *ClusterNotificationConfigArgs) ClusterNotificationConfigPtrInput {
	return (*clusterNotificationConfigPtrType)(v)
}

func (*clusterNotificationConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNotificationConfig)(nil)).Elem()
}

func (i *clusterNotificationConfigPtrType) ToClusterNotificationConfigPtrOutput() ClusterNotificationConfigPtrOutput {
	return i.ToClusterNotificationConfigPtrOutputWithContext(context.Background())
}

func (i *clusterNotificationConfigPtrType) ToClusterNotificationConfigPtrOutputWithContext(ctx context.Context) ClusterNotificationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNotificationConfigPtrOutput)
}

type ClusterNotificationConfigOutput struct{ *pulumi.OutputState }

func (ClusterNotificationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNotificationConfig)(nil)).Elem()
}

func (o ClusterNotificationConfigOutput) ToClusterNotificationConfigOutput() ClusterNotificationConfigOutput {
	return o
}

func (o ClusterNotificationConfigOutput) ToClusterNotificationConfigOutputWithContext(ctx context.Context) ClusterNotificationConfigOutput {
	return o
}

func (o ClusterNotificationConfigOutput) ToClusterNotificationConfigPtrOutput() ClusterNotificationConfigPtrOutput {
	return o.ToClusterNotificationConfigPtrOutputWithContext(context.Background())
}

func (o ClusterNotificationConfigOutput) ToClusterNotificationConfigPtrOutputWithContext(ctx context.Context) ClusterNotificationConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterNotificationConfig) *ClusterNotificationConfig {
		return &v
	}).(ClusterNotificationConfigPtrOutput)
}

// The pubsub config for the cluster's upgrade notifications.
func (o ClusterNotificationConfigOutput) Pubsub() ClusterNotificationConfigPubsubOutput {
	return o.ApplyT(func(v ClusterNotificationConfig) ClusterNotificationConfigPubsub { return v.Pubsub }).(ClusterNotificationConfigPubsubOutput)
}

type ClusterNotificationConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterNotificationConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNotificationConfig)(nil)).Elem()
}

func (o ClusterNotificationConfigPtrOutput) ToClusterNotificationConfigPtrOutput() ClusterNotificationConfigPtrOutput {
	return o
}

func (o ClusterNotificationConfigPtrOutput) ToClusterNotificationConfigPtrOutputWithContext(ctx context.Context) ClusterNotificationConfigPtrOutput {
	return o
}

func (o ClusterNotificationConfigPtrOutput) Elem() ClusterNotificationConfigOutput {
	return o.ApplyT(func(v *ClusterNotificationConfig) ClusterNotificationConfig {
		if v != nil {
			return *v
		}
		var ret ClusterNotificationConfig
		return ret
	}).(ClusterNotificationConfigOutput)
}

// The pubsub config for the cluster's upgrade notifications.
func (o ClusterNotificationConfigPtrOutput) Pubsub() ClusterNotificationConfigPubsubPtrOutput {
	return o.ApplyT(func(v *ClusterNotificationConfig) *ClusterNotificationConfigPubsub {
		if v == nil {
			return nil
		}
		return &v.Pubsub
	}).(ClusterNotificationConfigPubsubPtrOutput)
}

type ClusterNotificationConfigPubsub struct {
	// Whether or not the notification config is enabled
	Enabled bool `pulumi:"enabled"`
	// Choose what type of notifications you want to receive. If no filters are applied, you'll receive all notification types. Structure is documented below.
	Filter *ClusterNotificationConfigPubsubFilter `pulumi:"filter"`
	// The pubsub topic to push upgrade notifications to. Must be in the same project as the cluster. Must be in the format: `projects/{project}/topics/{topic}`.
	Topic *string `pulumi:"topic"`
}

// ClusterNotificationConfigPubsubInput is an input type that accepts ClusterNotificationConfigPubsubArgs and ClusterNotificationConfigPubsubOutput values.
// You can construct a concrete instance of `ClusterNotificationConfigPubsubInput` via:
//
//	ClusterNotificationConfigPubsubArgs{...}
type ClusterNotificationConfigPubsubInput interface {
	pulumi.Input

	ToClusterNotificationConfigPubsubOutput() ClusterNotificationConfigPubsubOutput
	ToClusterNotificationConfigPubsubOutputWithContext(context.Context) ClusterNotificationConfigPubsubOutput
}

type ClusterNotificationConfigPubsubArgs struct {
	// Whether or not the notification config is enabled
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Choose what type of notifications you want to receive. If no filters are applied, you'll receive all notification types. Structure is documented below.
	Filter ClusterNotificationConfigPubsubFilterPtrInput `pulumi:"filter"`
	// The pubsub topic to push upgrade notifications to. Must be in the same project as the cluster. Must be in the format: `projects/{project}/topics/{topic}`.
	Topic pulumi.StringPtrInput `pulumi:"topic"`
}

func (ClusterNotificationConfigPubsubArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNotificationConfigPubsub)(nil)).Elem()
}

func (i ClusterNotificationConfigPubsubArgs) ToClusterNotificationConfigPubsubOutput() ClusterNotificationConfigPubsubOutput {
	return i.ToClusterNotificationConfigPubsubOutputWithContext(context.Background())
}

func (i ClusterNotificationConfigPubsubArgs) ToClusterNotificationConfigPubsubOutputWithContext(ctx context.Context) ClusterNotificationConfigPubsubOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNotificationConfigPubsubOutput)
}

func (i ClusterNotificationConfigPubsubArgs) ToClusterNotificationConfigPubsubPtrOutput() ClusterNotificationConfigPubsubPtrOutput {
	return i.ToClusterNotificationConfigPubsubPtrOutputWithContext(context.Background())
}

func (i ClusterNotificationConfigPubsubArgs) ToClusterNotificationConfigPubsubPtrOutputWithContext(ctx context.Context) ClusterNotificationConfigPubsubPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNotificationConfigPubsubOutput).ToClusterNotificationConfigPubsubPtrOutputWithContext(ctx)
}

// ClusterNotificationConfigPubsubPtrInput is an input type that accepts ClusterNotificationConfigPubsubArgs, ClusterNotificationConfigPubsubPtr and ClusterNotificationConfigPubsubPtrOutput values.
// You can construct a concrete instance of `ClusterNotificationConfigPubsubPtrInput` via:
//
//	        ClusterNotificationConfigPubsubArgs{...}
//
//	or:
//
//	        nil
type ClusterNotificationConfigPubsubPtrInput interface {
	pulumi.Input

	ToClusterNotificationConfigPubsubPtrOutput() ClusterNotificationConfigPubsubPtrOutput
	ToClusterNotificationConfigPubsubPtrOutputWithContext(context.Context) ClusterNotificationConfigPubsubPtrOutput
}

type clusterNotificationConfigPubsubPtrType ClusterNotificationConfigPubsubArgs

func ClusterNotificationConfigPubsubPtr(v *ClusterNotificationConfigPubsubArgs) ClusterNotificationConfigPubsubPtrInput {
	return (*clusterNotificationConfigPubsubPtrType)(v)
}

func (*clusterNotificationConfigPubsubPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNotificationConfigPubsub)(nil)).Elem()
}

func (i *clusterNotificationConfigPubsubPtrType) ToClusterNotificationConfigPubsubPtrOutput() ClusterNotificationConfigPubsubPtrOutput {
	return i.ToClusterNotificationConfigPubsubPtrOutputWithContext(context.Background())
}

func (i *clusterNotificationConfigPubsubPtrType) ToClusterNotificationConfigPubsubPtrOutputWithContext(ctx context.Context) ClusterNotificationConfigPubsubPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNotificationConfigPubsubPtrOutput)
}

type ClusterNotificationConfigPubsubOutput struct{ *pulumi.OutputState }

func (ClusterNotificationConfigPubsubOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNotificationConfigPubsub)(nil)).Elem()
}

func (o ClusterNotificationConfigPubsubOutput) ToClusterNotificationConfigPubsubOutput() ClusterNotificationConfigPubsubOutput {
	return o
}

func (o ClusterNotificationConfigPubsubOutput) ToClusterNotificationConfigPubsubOutputWithContext(ctx context.Context) ClusterNotificationConfigPubsubOutput {
	return o
}

func (o ClusterNotificationConfigPubsubOutput) ToClusterNotificationConfigPubsubPtrOutput() ClusterNotificationConfigPubsubPtrOutput {
	return o.ToClusterNotificationConfigPubsubPtrOutputWithContext(context.Background())
}

func (o ClusterNotificationConfigPubsubOutput) ToClusterNotificationConfigPubsubPtrOutputWithContext(ctx context.Context) ClusterNotificationConfigPubsubPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterNotificationConfigPubsub) *ClusterNotificationConfigPubsub {
		return &v
	}).(ClusterNotificationConfigPubsubPtrOutput)
}

// Whether or not the notification config is enabled
func (o ClusterNotificationConfigPubsubOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterNotificationConfigPubsub) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Choose what type of notifications you want to receive. If no filters are applied, you'll receive all notification types. Structure is documented below.
func (o ClusterNotificationConfigPubsubOutput) Filter() ClusterNotificationConfigPubsubFilterPtrOutput {
	return o.ApplyT(func(v ClusterNotificationConfigPubsub) *ClusterNotificationConfigPubsubFilter { return v.Filter }).(ClusterNotificationConfigPubsubFilterPtrOutput)
}

// The pubsub topic to push upgrade notifications to. Must be in the same project as the cluster. Must be in the format: `projects/{project}/topics/{topic}`.
func (o ClusterNotificationConfigPubsubOutput) Topic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNotificationConfigPubsub) *string { return v.Topic }).(pulumi.StringPtrOutput)
}

type ClusterNotificationConfigPubsubPtrOutput struct{ *pulumi.OutputState }

func (ClusterNotificationConfigPubsubPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNotificationConfigPubsub)(nil)).Elem()
}

func (o ClusterNotificationConfigPubsubPtrOutput) ToClusterNotificationConfigPubsubPtrOutput() ClusterNotificationConfigPubsubPtrOutput {
	return o
}

func (o ClusterNotificationConfigPubsubPtrOutput) ToClusterNotificationConfigPubsubPtrOutputWithContext(ctx context.Context) ClusterNotificationConfigPubsubPtrOutput {
	return o
}

func (o ClusterNotificationConfigPubsubPtrOutput) Elem() ClusterNotificationConfigPubsubOutput {
	return o.ApplyT(func(v *ClusterNotificationConfigPubsub) ClusterNotificationConfigPubsub {
		if v != nil {
			return *v
		}
		var ret ClusterNotificationConfigPubsub
		return ret
	}).(ClusterNotificationConfigPubsubOutput)
}

// Whether or not the notification config is enabled
func (o ClusterNotificationConfigPubsubPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterNotificationConfigPubsub) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Choose what type of notifications you want to receive. If no filters are applied, you'll receive all notification types. Structure is documented below.
func (o ClusterNotificationConfigPubsubPtrOutput) Filter() ClusterNotificationConfigPubsubFilterPtrOutput {
	return o.ApplyT(func(v *ClusterNotificationConfigPubsub) *ClusterNotificationConfigPubsubFilter {
		if v == nil {
			return nil
		}
		return v.Filter
	}).(ClusterNotificationConfigPubsubFilterPtrOutput)
}

// The pubsub topic to push upgrade notifications to. Must be in the same project as the cluster. Must be in the format: `projects/{project}/topics/{topic}`.
func (o ClusterNotificationConfigPubsubPtrOutput) Topic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNotificationConfigPubsub) *string {
		if v == nil {
			return nil
		}
		return v.Topic
	}).(pulumi.StringPtrOutput)
}

type ClusterNotificationConfigPubsubFilter struct {
	// Can be used to filter what notifications are sent. Accepted values are `UPGRADE_AVAILABLE_EVENT`, `UPGRADE_EVENT` and `SECURITY_BULLETIN_EVENT`. See [Filtering notifications](https://cloud.google.com/kubernetes-engine/docs/concepts/cluster-notifications#filtering) for more details.
	EventTypes []string `pulumi:"eventTypes"`
}

// ClusterNotificationConfigPubsubFilterInput is an input type that accepts ClusterNotificationConfigPubsubFilterArgs and ClusterNotificationConfigPubsubFilterOutput values.
// You can construct a concrete instance of `ClusterNotificationConfigPubsubFilterInput` via:
//
//	ClusterNotificationConfigPubsubFilterArgs{...}
type ClusterNotificationConfigPubsubFilterInput interface {
	pulumi.Input

	ToClusterNotificationConfigPubsubFilterOutput() ClusterNotificationConfigPubsubFilterOutput
	ToClusterNotificationConfigPubsubFilterOutputWithContext(context.Context) ClusterNotificationConfigPubsubFilterOutput
}

type ClusterNotificationConfigPubsubFilterArgs struct {
	// Can be used to filter what notifications are sent. Accepted values are `UPGRADE_AVAILABLE_EVENT`, `UPGRADE_EVENT` and `SECURITY_BULLETIN_EVENT`. See [Filtering notifications](https://cloud.google.com/kubernetes-engine/docs/concepts/cluster-notifications#filtering) for more details.
	EventTypes pulumi.StringArrayInput `pulumi:"eventTypes"`
}

func (ClusterNotificationConfigPubsubFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNotificationConfigPubsubFilter)(nil)).Elem()
}

func (i ClusterNotificationConfigPubsubFilterArgs) ToClusterNotificationConfigPubsubFilterOutput() ClusterNotificationConfigPubsubFilterOutput {
	return i.ToClusterNotificationConfigPubsubFilterOutputWithContext(context.Background())
}

func (i ClusterNotificationConfigPubsubFilterArgs) ToClusterNotificationConfigPubsubFilterOutputWithContext(ctx context.Context) ClusterNotificationConfigPubsubFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNotificationConfigPubsubFilterOutput)
}

func (i ClusterNotificationConfigPubsubFilterArgs) ToClusterNotificationConfigPubsubFilterPtrOutput() ClusterNotificationConfigPubsubFilterPtrOutput {
	return i.ToClusterNotificationConfigPubsubFilterPtrOutputWithContext(context.Background())
}

func (i ClusterNotificationConfigPubsubFilterArgs) ToClusterNotificationConfigPubsubFilterPtrOutputWithContext(ctx context.Context) ClusterNotificationConfigPubsubFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNotificationConfigPubsubFilterOutput).ToClusterNotificationConfigPubsubFilterPtrOutputWithContext(ctx)
}

// ClusterNotificationConfigPubsubFilterPtrInput is an input type that accepts ClusterNotificationConfigPubsubFilterArgs, ClusterNotificationConfigPubsubFilterPtr and ClusterNotificationConfigPubsubFilterPtrOutput values.
// You can construct a concrete instance of `ClusterNotificationConfigPubsubFilterPtrInput` via:
//
//	        ClusterNotificationConfigPubsubFilterArgs{...}
//
//	or:
//
//	        nil
type ClusterNotificationConfigPubsubFilterPtrInput interface {
	pulumi.Input

	ToClusterNotificationConfigPubsubFilterPtrOutput() ClusterNotificationConfigPubsubFilterPtrOutput
	ToClusterNotificationConfigPubsubFilterPtrOutputWithContext(context.Context) ClusterNotificationConfigPubsubFilterPtrOutput
}

type clusterNotificationConfigPubsubFilterPtrType ClusterNotificationConfigPubsubFilterArgs

func ClusterNotificationConfigPubsubFilterPtr(v *ClusterNotificationConfigPubsubFilterArgs) ClusterNotificationConfigPubsubFilterPtrInput {
	return (*clusterNotificationConfigPubsubFilterPtrType)(v)
}

func (*clusterNotificationConfigPubsubFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNotificationConfigPubsubFilter)(nil)).Elem()
}

func (i *clusterNotificationConfigPubsubFilterPtrType) ToClusterNotificationConfigPubsubFilterPtrOutput() ClusterNotificationConfigPubsubFilterPtrOutput {
	return i.ToClusterNotificationConfigPubsubFilterPtrOutputWithContext(context.Background())
}

func (i *clusterNotificationConfigPubsubFilterPtrType) ToClusterNotificationConfigPubsubFilterPtrOutputWithContext(ctx context.Context) ClusterNotificationConfigPubsubFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNotificationConfigPubsubFilterPtrOutput)
}

type ClusterNotificationConfigPubsubFilterOutput struct{ *pulumi.OutputState }

func (ClusterNotificationConfigPubsubFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNotificationConfigPubsubFilter)(nil)).Elem()
}

func (o ClusterNotificationConfigPubsubFilterOutput) ToClusterNotificationConfigPubsubFilterOutput() ClusterNotificationConfigPubsubFilterOutput {
	return o
}

func (o ClusterNotificationConfigPubsubFilterOutput) ToClusterNotificationConfigPubsubFilterOutputWithContext(ctx context.Context) ClusterNotificationConfigPubsubFilterOutput {
	return o
}

func (o ClusterNotificationConfigPubsubFilterOutput) ToClusterNotificationConfigPubsubFilterPtrOutput() ClusterNotificationConfigPubsubFilterPtrOutput {
	return o.ToClusterNotificationConfigPubsubFilterPtrOutputWithContext(context.Background())
}

func (o ClusterNotificationConfigPubsubFilterOutput) ToClusterNotificationConfigPubsubFilterPtrOutputWithContext(ctx context.Context) ClusterNotificationConfigPubsubFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterNotificationConfigPubsubFilter) *ClusterNotificationConfigPubsubFilter {
		return &v
	}).(ClusterNotificationConfigPubsubFilterPtrOutput)
}

// Can be used to filter what notifications are sent. Accepted values are `UPGRADE_AVAILABLE_EVENT`, `UPGRADE_EVENT` and `SECURITY_BULLETIN_EVENT`. See [Filtering notifications](https://cloud.google.com/kubernetes-engine/docs/concepts/cluster-notifications#filtering) for more details.
func (o ClusterNotificationConfigPubsubFilterOutput) EventTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterNotificationConfigPubsubFilter) []string { return v.EventTypes }).(pulumi.StringArrayOutput)
}

type ClusterNotificationConfigPubsubFilterPtrOutput struct{ *pulumi.OutputState }

func (ClusterNotificationConfigPubsubFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNotificationConfigPubsubFilter)(nil)).Elem()
}

func (o ClusterNotificationConfigPubsubFilterPtrOutput) ToClusterNotificationConfigPubsubFilterPtrOutput() ClusterNotificationConfigPubsubFilterPtrOutput {
	return o
}

func (o ClusterNotificationConfigPubsubFilterPtrOutput) ToClusterNotificationConfigPubsubFilterPtrOutputWithContext(ctx context.Context) ClusterNotificationConfigPubsubFilterPtrOutput {
	return o
}

func (o ClusterNotificationConfigPubsubFilterPtrOutput) Elem() ClusterNotificationConfigPubsubFilterOutput {
	return o.ApplyT(func(v *ClusterNotificationConfigPubsubFilter) ClusterNotificationConfigPubsubFilter {
		if v != nil {
			return *v
		}
		var ret ClusterNotificationConfigPubsubFilter
		return ret
	}).(ClusterNotificationConfigPubsubFilterOutput)
}

// Can be used to filter what notifications are sent. Accepted values are `UPGRADE_AVAILABLE_EVENT`, `UPGRADE_EVENT` and `SECURITY_BULLETIN_EVENT`. See [Filtering notifications](https://cloud.google.com/kubernetes-engine/docs/concepts/cluster-notifications#filtering) for more details.
func (o ClusterNotificationConfigPubsubFilterPtrOutput) EventTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterNotificationConfigPubsubFilter) []string {
		if v == nil {
			return nil
		}
		return v.EventTypes
	}).(pulumi.StringArrayOutput)
}

type ClusterPodSecurityPolicyConfig struct {
	// Enable the PodSecurityPolicy controller for this cluster.
	// If enabled, pods must be valid under a PodSecurityPolicy to be created.
	Enabled bool `pulumi:"enabled"`
}

// ClusterPodSecurityPolicyConfigInput is an input type that accepts ClusterPodSecurityPolicyConfigArgs and ClusterPodSecurityPolicyConfigOutput values.
// You can construct a concrete instance of `ClusterPodSecurityPolicyConfigInput` via:
//
//	ClusterPodSecurityPolicyConfigArgs{...}
type ClusterPodSecurityPolicyConfigInput interface {
	pulumi.Input

	ToClusterPodSecurityPolicyConfigOutput() ClusterPodSecurityPolicyConfigOutput
	ToClusterPodSecurityPolicyConfigOutputWithContext(context.Context) ClusterPodSecurityPolicyConfigOutput
}

type ClusterPodSecurityPolicyConfigArgs struct {
	// Enable the PodSecurityPolicy controller for this cluster.
	// If enabled, pods must be valid under a PodSecurityPolicy to be created.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (ClusterPodSecurityPolicyConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPodSecurityPolicyConfig)(nil)).Elem()
}

func (i ClusterPodSecurityPolicyConfigArgs) ToClusterPodSecurityPolicyConfigOutput() ClusterPodSecurityPolicyConfigOutput {
	return i.ToClusterPodSecurityPolicyConfigOutputWithContext(context.Background())
}

func (i ClusterPodSecurityPolicyConfigArgs) ToClusterPodSecurityPolicyConfigOutputWithContext(ctx context.Context) ClusterPodSecurityPolicyConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPodSecurityPolicyConfigOutput)
}

func (i ClusterPodSecurityPolicyConfigArgs) ToClusterPodSecurityPolicyConfigPtrOutput() ClusterPodSecurityPolicyConfigPtrOutput {
	return i.ToClusterPodSecurityPolicyConfigPtrOutputWithContext(context.Background())
}

func (i ClusterPodSecurityPolicyConfigArgs) ToClusterPodSecurityPolicyConfigPtrOutputWithContext(ctx context.Context) ClusterPodSecurityPolicyConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPodSecurityPolicyConfigOutput).ToClusterPodSecurityPolicyConfigPtrOutputWithContext(ctx)
}

// ClusterPodSecurityPolicyConfigPtrInput is an input type that accepts ClusterPodSecurityPolicyConfigArgs, ClusterPodSecurityPolicyConfigPtr and ClusterPodSecurityPolicyConfigPtrOutput values.
// You can construct a concrete instance of `ClusterPodSecurityPolicyConfigPtrInput` via:
//
//	        ClusterPodSecurityPolicyConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterPodSecurityPolicyConfigPtrInput interface {
	pulumi.Input

	ToClusterPodSecurityPolicyConfigPtrOutput() ClusterPodSecurityPolicyConfigPtrOutput
	ToClusterPodSecurityPolicyConfigPtrOutputWithContext(context.Context) ClusterPodSecurityPolicyConfigPtrOutput
}

type clusterPodSecurityPolicyConfigPtrType ClusterPodSecurityPolicyConfigArgs

func ClusterPodSecurityPolicyConfigPtr(v *ClusterPodSecurityPolicyConfigArgs) ClusterPodSecurityPolicyConfigPtrInput {
	return (*clusterPodSecurityPolicyConfigPtrType)(v)
}

func (*clusterPodSecurityPolicyConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterPodSecurityPolicyConfig)(nil)).Elem()
}

func (i *clusterPodSecurityPolicyConfigPtrType) ToClusterPodSecurityPolicyConfigPtrOutput() ClusterPodSecurityPolicyConfigPtrOutput {
	return i.ToClusterPodSecurityPolicyConfigPtrOutputWithContext(context.Background())
}

func (i *clusterPodSecurityPolicyConfigPtrType) ToClusterPodSecurityPolicyConfigPtrOutputWithContext(ctx context.Context) ClusterPodSecurityPolicyConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPodSecurityPolicyConfigPtrOutput)
}

type ClusterPodSecurityPolicyConfigOutput struct{ *pulumi.OutputState }

func (ClusterPodSecurityPolicyConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPodSecurityPolicyConfig)(nil)).Elem()
}

func (o ClusterPodSecurityPolicyConfigOutput) ToClusterPodSecurityPolicyConfigOutput() ClusterPodSecurityPolicyConfigOutput {
	return o
}

func (o ClusterPodSecurityPolicyConfigOutput) ToClusterPodSecurityPolicyConfigOutputWithContext(ctx context.Context) ClusterPodSecurityPolicyConfigOutput {
	return o
}

func (o ClusterPodSecurityPolicyConfigOutput) ToClusterPodSecurityPolicyConfigPtrOutput() ClusterPodSecurityPolicyConfigPtrOutput {
	return o.ToClusterPodSecurityPolicyConfigPtrOutputWithContext(context.Background())
}

func (o ClusterPodSecurityPolicyConfigOutput) ToClusterPodSecurityPolicyConfigPtrOutputWithContext(ctx context.Context) ClusterPodSecurityPolicyConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterPodSecurityPolicyConfig) *ClusterPodSecurityPolicyConfig {
		return &v
	}).(ClusterPodSecurityPolicyConfigPtrOutput)
}

// Enable the PodSecurityPolicy controller for this cluster.
// If enabled, pods must be valid under a PodSecurityPolicy to be created.
func (o ClusterPodSecurityPolicyConfigOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterPodSecurityPolicyConfig) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type ClusterPodSecurityPolicyConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterPodSecurityPolicyConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterPodSecurityPolicyConfig)(nil)).Elem()
}

func (o ClusterPodSecurityPolicyConfigPtrOutput) ToClusterPodSecurityPolicyConfigPtrOutput() ClusterPodSecurityPolicyConfigPtrOutput {
	return o
}

func (o ClusterPodSecurityPolicyConfigPtrOutput) ToClusterPodSecurityPolicyConfigPtrOutputWithContext(ctx context.Context) ClusterPodSecurityPolicyConfigPtrOutput {
	return o
}

func (o ClusterPodSecurityPolicyConfigPtrOutput) Elem() ClusterPodSecurityPolicyConfigOutput {
	return o.ApplyT(func(v *ClusterPodSecurityPolicyConfig) ClusterPodSecurityPolicyConfig {
		if v != nil {
			return *v
		}
		var ret ClusterPodSecurityPolicyConfig
		return ret
	}).(ClusterPodSecurityPolicyConfigOutput)
}

// Enable the PodSecurityPolicy controller for this cluster.
// If enabled, pods must be valid under a PodSecurityPolicy to be created.
func (o ClusterPodSecurityPolicyConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterPodSecurityPolicyConfig) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type ClusterPrivateClusterConfig struct {
	// When `true`, the cluster's private
	// endpoint is used as the cluster endpoint and access through the public endpoint
	// is disabled. When `false`, either endpoint can be used. This field only applies
	// to private clusters, when `enablePrivateNodes` is `true`.
	EnablePrivateEndpoint *bool `pulumi:"enablePrivateEndpoint"`
	// Enables the private cluster feature,
	// creating a private endpoint on the cluster. In a private cluster, nodes only
	// have RFC 1918 private addresses and communicate with the master's private
	// endpoint via private networking.
	EnablePrivateNodes *bool `pulumi:"enablePrivateNodes"`
	// Controls cluster master global
	// access settings. If unset, the provider will no longer manage this field and will
	// not modify the previously-set value. Structure is documented below.
	MasterGlobalAccessConfig *ClusterPrivateClusterConfigMasterGlobalAccessConfig `pulumi:"masterGlobalAccessConfig"`
	// The IP range in CIDR notation to use for
	// the hosted master network. This range will be used for assigning private IP
	// addresses to the cluster master(s) and the ILB VIP. This range must not overlap
	// with any other ranges in use within the cluster's network, and it must be a /28
	// subnet. See [Private Cluster Limitations](https://cloud.google.com/kubernetes-engine/docs/how-to/private-clusters#req_res_lim)
	// for more details. This field only applies to private clusters, when
	// `enablePrivateNodes` is `true`.
	MasterIpv4CidrBlock *string `pulumi:"masterIpv4CidrBlock"`
	// The name of the peering between this cluster and the Google owned VPC.
	PeeringName *string `pulumi:"peeringName"`
	// The internal IP address of this cluster's master endpoint.
	PrivateEndpoint *string `pulumi:"privateEndpoint"`
	// Subnetwork in cluster's network where master's endpoint will be provisioned.
	PrivateEndpointSubnetwork *string `pulumi:"privateEndpointSubnetwork"`
	// The external IP address of this cluster's master endpoint.
	//
	// !> The Google provider is unable to validate certain configurations of
	// `privateClusterConfig` when `enablePrivateNodes` is `false`. It's
	// recommended that you omit the block entirely if the field is not set to `true`.
	PublicEndpoint *string `pulumi:"publicEndpoint"`
}

// ClusterPrivateClusterConfigInput is an input type that accepts ClusterPrivateClusterConfigArgs and ClusterPrivateClusterConfigOutput values.
// You can construct a concrete instance of `ClusterPrivateClusterConfigInput` via:
//
//	ClusterPrivateClusterConfigArgs{...}
type ClusterPrivateClusterConfigInput interface {
	pulumi.Input

	ToClusterPrivateClusterConfigOutput() ClusterPrivateClusterConfigOutput
	ToClusterPrivateClusterConfigOutputWithContext(context.Context) ClusterPrivateClusterConfigOutput
}

type ClusterPrivateClusterConfigArgs struct {
	// When `true`, the cluster's private
	// endpoint is used as the cluster endpoint and access through the public endpoint
	// is disabled. When `false`, either endpoint can be used. This field only applies
	// to private clusters, when `enablePrivateNodes` is `true`.
	EnablePrivateEndpoint pulumi.BoolPtrInput `pulumi:"enablePrivateEndpoint"`
	// Enables the private cluster feature,
	// creating a private endpoint on the cluster. In a private cluster, nodes only
	// have RFC 1918 private addresses and communicate with the master's private
	// endpoint via private networking.
	EnablePrivateNodes pulumi.BoolPtrInput `pulumi:"enablePrivateNodes"`
	// Controls cluster master global
	// access settings. If unset, the provider will no longer manage this field and will
	// not modify the previously-set value. Structure is documented below.
	MasterGlobalAccessConfig ClusterPrivateClusterConfigMasterGlobalAccessConfigPtrInput `pulumi:"masterGlobalAccessConfig"`
	// The IP range in CIDR notation to use for
	// the hosted master network. This range will be used for assigning private IP
	// addresses to the cluster master(s) and the ILB VIP. This range must not overlap
	// with any other ranges in use within the cluster's network, and it must be a /28
	// subnet. See [Private Cluster Limitations](https://cloud.google.com/kubernetes-engine/docs/how-to/private-clusters#req_res_lim)
	// for more details. This field only applies to private clusters, when
	// `enablePrivateNodes` is `true`.
	MasterIpv4CidrBlock pulumi.StringPtrInput `pulumi:"masterIpv4CidrBlock"`
	// The name of the peering between this cluster and the Google owned VPC.
	PeeringName pulumi.StringPtrInput `pulumi:"peeringName"`
	// The internal IP address of this cluster's master endpoint.
	PrivateEndpoint pulumi.StringPtrInput `pulumi:"privateEndpoint"`
	// Subnetwork in cluster's network where master's endpoint will be provisioned.
	PrivateEndpointSubnetwork pulumi.StringPtrInput `pulumi:"privateEndpointSubnetwork"`
	// The external IP address of this cluster's master endpoint.
	//
	// !> The Google provider is unable to validate certain configurations of
	// `privateClusterConfig` when `enablePrivateNodes` is `false`. It's
	// recommended that you omit the block entirely if the field is not set to `true`.
	PublicEndpoint pulumi.StringPtrInput `pulumi:"publicEndpoint"`
}

func (ClusterPrivateClusterConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPrivateClusterConfig)(nil)).Elem()
}

func (i ClusterPrivateClusterConfigArgs) ToClusterPrivateClusterConfigOutput() ClusterPrivateClusterConfigOutput {
	return i.ToClusterPrivateClusterConfigOutputWithContext(context.Background())
}

func (i ClusterPrivateClusterConfigArgs) ToClusterPrivateClusterConfigOutputWithContext(ctx context.Context) ClusterPrivateClusterConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPrivateClusterConfigOutput)
}

func (i ClusterPrivateClusterConfigArgs) ToClusterPrivateClusterConfigPtrOutput() ClusterPrivateClusterConfigPtrOutput {
	return i.ToClusterPrivateClusterConfigPtrOutputWithContext(context.Background())
}

func (i ClusterPrivateClusterConfigArgs) ToClusterPrivateClusterConfigPtrOutputWithContext(ctx context.Context) ClusterPrivateClusterConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPrivateClusterConfigOutput).ToClusterPrivateClusterConfigPtrOutputWithContext(ctx)
}

// ClusterPrivateClusterConfigPtrInput is an input type that accepts ClusterPrivateClusterConfigArgs, ClusterPrivateClusterConfigPtr and ClusterPrivateClusterConfigPtrOutput values.
// You can construct a concrete instance of `ClusterPrivateClusterConfigPtrInput` via:
//
//	        ClusterPrivateClusterConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterPrivateClusterConfigPtrInput interface {
	pulumi.Input

	ToClusterPrivateClusterConfigPtrOutput() ClusterPrivateClusterConfigPtrOutput
	ToClusterPrivateClusterConfigPtrOutputWithContext(context.Context) ClusterPrivateClusterConfigPtrOutput
}

type clusterPrivateClusterConfigPtrType ClusterPrivateClusterConfigArgs

func ClusterPrivateClusterConfigPtr(v *ClusterPrivateClusterConfigArgs) ClusterPrivateClusterConfigPtrInput {
	return (*clusterPrivateClusterConfigPtrType)(v)
}

func (*clusterPrivateClusterConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterPrivateClusterConfig)(nil)).Elem()
}

func (i *clusterPrivateClusterConfigPtrType) ToClusterPrivateClusterConfigPtrOutput() ClusterPrivateClusterConfigPtrOutput {
	return i.ToClusterPrivateClusterConfigPtrOutputWithContext(context.Background())
}

func (i *clusterPrivateClusterConfigPtrType) ToClusterPrivateClusterConfigPtrOutputWithContext(ctx context.Context) ClusterPrivateClusterConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPrivateClusterConfigPtrOutput)
}

type ClusterPrivateClusterConfigOutput struct{ *pulumi.OutputState }

func (ClusterPrivateClusterConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPrivateClusterConfig)(nil)).Elem()
}

func (o ClusterPrivateClusterConfigOutput) ToClusterPrivateClusterConfigOutput() ClusterPrivateClusterConfigOutput {
	return o
}

func (o ClusterPrivateClusterConfigOutput) ToClusterPrivateClusterConfigOutputWithContext(ctx context.Context) ClusterPrivateClusterConfigOutput {
	return o
}

func (o ClusterPrivateClusterConfigOutput) ToClusterPrivateClusterConfigPtrOutput() ClusterPrivateClusterConfigPtrOutput {
	return o.ToClusterPrivateClusterConfigPtrOutputWithContext(context.Background())
}

func (o ClusterPrivateClusterConfigOutput) ToClusterPrivateClusterConfigPtrOutputWithContext(ctx context.Context) ClusterPrivateClusterConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterPrivateClusterConfig) *ClusterPrivateClusterConfig {
		return &v
	}).(ClusterPrivateClusterConfigPtrOutput)
}

// When `true`, the cluster's private
// endpoint is used as the cluster endpoint and access through the public endpoint
// is disabled. When `false`, either endpoint can be used. This field only applies
// to private clusters, when `enablePrivateNodes` is `true`.
func (o ClusterPrivateClusterConfigOutput) EnablePrivateEndpoint() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterPrivateClusterConfig) *bool { return v.EnablePrivateEndpoint }).(pulumi.BoolPtrOutput)
}

// Enables the private cluster feature,
// creating a private endpoint on the cluster. In a private cluster, nodes only
// have RFC 1918 private addresses and communicate with the master's private
// endpoint via private networking.
func (o ClusterPrivateClusterConfigOutput) EnablePrivateNodes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterPrivateClusterConfig) *bool { return v.EnablePrivateNodes }).(pulumi.BoolPtrOutput)
}

// Controls cluster master global
// access settings. If unset, the provider will no longer manage this field and will
// not modify the previously-set value. Structure is documented below.
func (o ClusterPrivateClusterConfigOutput) MasterGlobalAccessConfig() ClusterPrivateClusterConfigMasterGlobalAccessConfigPtrOutput {
	return o.ApplyT(func(v ClusterPrivateClusterConfig) *ClusterPrivateClusterConfigMasterGlobalAccessConfig {
		return v.MasterGlobalAccessConfig
	}).(ClusterPrivateClusterConfigMasterGlobalAccessConfigPtrOutput)
}

// The IP range in CIDR notation to use for
// the hosted master network. This range will be used for assigning private IP
// addresses to the cluster master(s) and the ILB VIP. This range must not overlap
// with any other ranges in use within the cluster's network, and it must be a /28
// subnet. See [Private Cluster Limitations](https://cloud.google.com/kubernetes-engine/docs/how-to/private-clusters#req_res_lim)
// for more details. This field only applies to private clusters, when
// `enablePrivateNodes` is `true`.
func (o ClusterPrivateClusterConfigOutput) MasterIpv4CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPrivateClusterConfig) *string { return v.MasterIpv4CidrBlock }).(pulumi.StringPtrOutput)
}

// The name of the peering between this cluster and the Google owned VPC.
func (o ClusterPrivateClusterConfigOutput) PeeringName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPrivateClusterConfig) *string { return v.PeeringName }).(pulumi.StringPtrOutput)
}

// The internal IP address of this cluster's master endpoint.
func (o ClusterPrivateClusterConfigOutput) PrivateEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPrivateClusterConfig) *string { return v.PrivateEndpoint }).(pulumi.StringPtrOutput)
}

// Subnetwork in cluster's network where master's endpoint will be provisioned.
func (o ClusterPrivateClusterConfigOutput) PrivateEndpointSubnetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPrivateClusterConfig) *string { return v.PrivateEndpointSubnetwork }).(pulumi.StringPtrOutput)
}

// The external IP address of this cluster's master endpoint.
//
// !> The Google provider is unable to validate certain configurations of
// `privateClusterConfig` when `enablePrivateNodes` is `false`. It's
// recommended that you omit the block entirely if the field is not set to `true`.
func (o ClusterPrivateClusterConfigOutput) PublicEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPrivateClusterConfig) *string { return v.PublicEndpoint }).(pulumi.StringPtrOutput)
}

type ClusterPrivateClusterConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterPrivateClusterConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterPrivateClusterConfig)(nil)).Elem()
}

func (o ClusterPrivateClusterConfigPtrOutput) ToClusterPrivateClusterConfigPtrOutput() ClusterPrivateClusterConfigPtrOutput {
	return o
}

func (o ClusterPrivateClusterConfigPtrOutput) ToClusterPrivateClusterConfigPtrOutputWithContext(ctx context.Context) ClusterPrivateClusterConfigPtrOutput {
	return o
}

func (o ClusterPrivateClusterConfigPtrOutput) Elem() ClusterPrivateClusterConfigOutput {
	return o.ApplyT(func(v *ClusterPrivateClusterConfig) ClusterPrivateClusterConfig {
		if v != nil {
			return *v
		}
		var ret ClusterPrivateClusterConfig
		return ret
	}).(ClusterPrivateClusterConfigOutput)
}

// When `true`, the cluster's private
// endpoint is used as the cluster endpoint and access through the public endpoint
// is disabled. When `false`, either endpoint can be used. This field only applies
// to private clusters, when `enablePrivateNodes` is `true`.
func (o ClusterPrivateClusterConfigPtrOutput) EnablePrivateEndpoint() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterPrivateClusterConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EnablePrivateEndpoint
	}).(pulumi.BoolPtrOutput)
}

// Enables the private cluster feature,
// creating a private endpoint on the cluster. In a private cluster, nodes only
// have RFC 1918 private addresses and communicate with the master's private
// endpoint via private networking.
func (o ClusterPrivateClusterConfigPtrOutput) EnablePrivateNodes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterPrivateClusterConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EnablePrivateNodes
	}).(pulumi.BoolPtrOutput)
}

// Controls cluster master global
// access settings. If unset, the provider will no longer manage this field and will
// not modify the previously-set value. Structure is documented below.
func (o ClusterPrivateClusterConfigPtrOutput) MasterGlobalAccessConfig() ClusterPrivateClusterConfigMasterGlobalAccessConfigPtrOutput {
	return o.ApplyT(func(v *ClusterPrivateClusterConfig) *ClusterPrivateClusterConfigMasterGlobalAccessConfig {
		if v == nil {
			return nil
		}
		return v.MasterGlobalAccessConfig
	}).(ClusterPrivateClusterConfigMasterGlobalAccessConfigPtrOutput)
}

// The IP range in CIDR notation to use for
// the hosted master network. This range will be used for assigning private IP
// addresses to the cluster master(s) and the ILB VIP. This range must not overlap
// with any other ranges in use within the cluster's network, and it must be a /28
// subnet. See [Private Cluster Limitations](https://cloud.google.com/kubernetes-engine/docs/how-to/private-clusters#req_res_lim)
// for more details. This field only applies to private clusters, when
// `enablePrivateNodes` is `true`.
func (o ClusterPrivateClusterConfigPtrOutput) MasterIpv4CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterPrivateClusterConfig) *string {
		if v == nil {
			return nil
		}
		return v.MasterIpv4CidrBlock
	}).(pulumi.StringPtrOutput)
}

// The name of the peering between this cluster and the Google owned VPC.
func (o ClusterPrivateClusterConfigPtrOutput) PeeringName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterPrivateClusterConfig) *string {
		if v == nil {
			return nil
		}
		return v.PeeringName
	}).(pulumi.StringPtrOutput)
}

// The internal IP address of this cluster's master endpoint.
func (o ClusterPrivateClusterConfigPtrOutput) PrivateEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterPrivateClusterConfig) *string {
		if v == nil {
			return nil
		}
		return v.PrivateEndpoint
	}).(pulumi.StringPtrOutput)
}

// Subnetwork in cluster's network where master's endpoint will be provisioned.
func (o ClusterPrivateClusterConfigPtrOutput) PrivateEndpointSubnetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterPrivateClusterConfig) *string {
		if v == nil {
			return nil
		}
		return v.PrivateEndpointSubnetwork
	}).(pulumi.StringPtrOutput)
}

// The external IP address of this cluster's master endpoint.
//
// !> The Google provider is unable to validate certain configurations of
// `privateClusterConfig` when `enablePrivateNodes` is `false`. It's
// recommended that you omit the block entirely if the field is not set to `true`.
func (o ClusterPrivateClusterConfigPtrOutput) PublicEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterPrivateClusterConfig) *string {
		if v == nil {
			return nil
		}
		return v.PublicEndpoint
	}).(pulumi.StringPtrOutput)
}

type ClusterPrivateClusterConfigMasterGlobalAccessConfig struct {
	// Whether the cluster master is accessible globally or
	// not.
	Enabled bool `pulumi:"enabled"`
}

// ClusterPrivateClusterConfigMasterGlobalAccessConfigInput is an input type that accepts ClusterPrivateClusterConfigMasterGlobalAccessConfigArgs and ClusterPrivateClusterConfigMasterGlobalAccessConfigOutput values.
// You can construct a concrete instance of `ClusterPrivateClusterConfigMasterGlobalAccessConfigInput` via:
//
//	ClusterPrivateClusterConfigMasterGlobalAccessConfigArgs{...}
type ClusterPrivateClusterConfigMasterGlobalAccessConfigInput interface {
	pulumi.Input

	ToClusterPrivateClusterConfigMasterGlobalAccessConfigOutput() ClusterPrivateClusterConfigMasterGlobalAccessConfigOutput
	ToClusterPrivateClusterConfigMasterGlobalAccessConfigOutputWithContext(context.Context) ClusterPrivateClusterConfigMasterGlobalAccessConfigOutput
}

type ClusterPrivateClusterConfigMasterGlobalAccessConfigArgs struct {
	// Whether the cluster master is accessible globally or
	// not.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (ClusterPrivateClusterConfigMasterGlobalAccessConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPrivateClusterConfigMasterGlobalAccessConfig)(nil)).Elem()
}

func (i ClusterPrivateClusterConfigMasterGlobalAccessConfigArgs) ToClusterPrivateClusterConfigMasterGlobalAccessConfigOutput() ClusterPrivateClusterConfigMasterGlobalAccessConfigOutput {
	return i.ToClusterPrivateClusterConfigMasterGlobalAccessConfigOutputWithContext(context.Background())
}

func (i ClusterPrivateClusterConfigMasterGlobalAccessConfigArgs) ToClusterPrivateClusterConfigMasterGlobalAccessConfigOutputWithContext(ctx context.Context) ClusterPrivateClusterConfigMasterGlobalAccessConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPrivateClusterConfigMasterGlobalAccessConfigOutput)
}

func (i ClusterPrivateClusterConfigMasterGlobalAccessConfigArgs) ToClusterPrivateClusterConfigMasterGlobalAccessConfigPtrOutput() ClusterPrivateClusterConfigMasterGlobalAccessConfigPtrOutput {
	return i.ToClusterPrivateClusterConfigMasterGlobalAccessConfigPtrOutputWithContext(context.Background())
}

func (i ClusterPrivateClusterConfigMasterGlobalAccessConfigArgs) ToClusterPrivateClusterConfigMasterGlobalAccessConfigPtrOutputWithContext(ctx context.Context) ClusterPrivateClusterConfigMasterGlobalAccessConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPrivateClusterConfigMasterGlobalAccessConfigOutput).ToClusterPrivateClusterConfigMasterGlobalAccessConfigPtrOutputWithContext(ctx)
}

// ClusterPrivateClusterConfigMasterGlobalAccessConfigPtrInput is an input type that accepts ClusterPrivateClusterConfigMasterGlobalAccessConfigArgs, ClusterPrivateClusterConfigMasterGlobalAccessConfigPtr and ClusterPrivateClusterConfigMasterGlobalAccessConfigPtrOutput values.
// You can construct a concrete instance of `ClusterPrivateClusterConfigMasterGlobalAccessConfigPtrInput` via:
//
//	        ClusterPrivateClusterConfigMasterGlobalAccessConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterPrivateClusterConfigMasterGlobalAccessConfigPtrInput interface {
	pulumi.Input

	ToClusterPrivateClusterConfigMasterGlobalAccessConfigPtrOutput() ClusterPrivateClusterConfigMasterGlobalAccessConfigPtrOutput
	ToClusterPrivateClusterConfigMasterGlobalAccessConfigPtrOutputWithContext(context.Context) ClusterPrivateClusterConfigMasterGlobalAccessConfigPtrOutput
}

type clusterPrivateClusterConfigMasterGlobalAccessConfigPtrType ClusterPrivateClusterConfigMasterGlobalAccessConfigArgs

func ClusterPrivateClusterConfigMasterGlobalAccessConfigPtr(v *ClusterPrivateClusterConfigMasterGlobalAccessConfigArgs) ClusterPrivateClusterConfigMasterGlobalAccessConfigPtrInput {
	return (*clusterPrivateClusterConfigMasterGlobalAccessConfigPtrType)(v)
}

func (*clusterPrivateClusterConfigMasterGlobalAccessConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterPrivateClusterConfigMasterGlobalAccessConfig)(nil)).Elem()
}

func (i *clusterPrivateClusterConfigMasterGlobalAccessConfigPtrType) ToClusterPrivateClusterConfigMasterGlobalAccessConfigPtrOutput() ClusterPrivateClusterConfigMasterGlobalAccessConfigPtrOutput {
	return i.ToClusterPrivateClusterConfigMasterGlobalAccessConfigPtrOutputWithContext(context.Background())
}

func (i *clusterPrivateClusterConfigMasterGlobalAccessConfigPtrType) ToClusterPrivateClusterConfigMasterGlobalAccessConfigPtrOutputWithContext(ctx context.Context) ClusterPrivateClusterConfigMasterGlobalAccessConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPrivateClusterConfigMasterGlobalAccessConfigPtrOutput)
}

type ClusterPrivateClusterConfigMasterGlobalAccessConfigOutput struct{ *pulumi.OutputState }

func (ClusterPrivateClusterConfigMasterGlobalAccessConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPrivateClusterConfigMasterGlobalAccessConfig)(nil)).Elem()
}

func (o ClusterPrivateClusterConfigMasterGlobalAccessConfigOutput) ToClusterPrivateClusterConfigMasterGlobalAccessConfigOutput() ClusterPrivateClusterConfigMasterGlobalAccessConfigOutput {
	return o
}

func (o ClusterPrivateClusterConfigMasterGlobalAccessConfigOutput) ToClusterPrivateClusterConfigMasterGlobalAccessConfigOutputWithContext(ctx context.Context) ClusterPrivateClusterConfigMasterGlobalAccessConfigOutput {
	return o
}

func (o ClusterPrivateClusterConfigMasterGlobalAccessConfigOutput) ToClusterPrivateClusterConfigMasterGlobalAccessConfigPtrOutput() ClusterPrivateClusterConfigMasterGlobalAccessConfigPtrOutput {
	return o.ToClusterPrivateClusterConfigMasterGlobalAccessConfigPtrOutputWithContext(context.Background())
}

func (o ClusterPrivateClusterConfigMasterGlobalAccessConfigOutput) ToClusterPrivateClusterConfigMasterGlobalAccessConfigPtrOutputWithContext(ctx context.Context) ClusterPrivateClusterConfigMasterGlobalAccessConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterPrivateClusterConfigMasterGlobalAccessConfig) *ClusterPrivateClusterConfigMasterGlobalAccessConfig {
		return &v
	}).(ClusterPrivateClusterConfigMasterGlobalAccessConfigPtrOutput)
}

// Whether the cluster master is accessible globally or
// not.
func (o ClusterPrivateClusterConfigMasterGlobalAccessConfigOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterPrivateClusterConfigMasterGlobalAccessConfig) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type ClusterPrivateClusterConfigMasterGlobalAccessConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterPrivateClusterConfigMasterGlobalAccessConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterPrivateClusterConfigMasterGlobalAccessConfig)(nil)).Elem()
}

func (o ClusterPrivateClusterConfigMasterGlobalAccessConfigPtrOutput) ToClusterPrivateClusterConfigMasterGlobalAccessConfigPtrOutput() ClusterPrivateClusterConfigMasterGlobalAccessConfigPtrOutput {
	return o
}

func (o ClusterPrivateClusterConfigMasterGlobalAccessConfigPtrOutput) ToClusterPrivateClusterConfigMasterGlobalAccessConfigPtrOutputWithContext(ctx context.Context) ClusterPrivateClusterConfigMasterGlobalAccessConfigPtrOutput {
	return o
}

func (o ClusterPrivateClusterConfigMasterGlobalAccessConfigPtrOutput) Elem() ClusterPrivateClusterConfigMasterGlobalAccessConfigOutput {
	return o.ApplyT(func(v *ClusterPrivateClusterConfigMasterGlobalAccessConfig) ClusterPrivateClusterConfigMasterGlobalAccessConfig {
		if v != nil {
			return *v
		}
		var ret ClusterPrivateClusterConfigMasterGlobalAccessConfig
		return ret
	}).(ClusterPrivateClusterConfigMasterGlobalAccessConfigOutput)
}

// Whether the cluster master is accessible globally or
// not.
func (o ClusterPrivateClusterConfigMasterGlobalAccessConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterPrivateClusterConfigMasterGlobalAccessConfig) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type ClusterProtectConfig struct {
	// WorkloadConfig defines which actions are enabled for a cluster's workload configurations. Structure is documented below
	WorkloadConfig *ClusterProtectConfigWorkloadConfig `pulumi:"workloadConfig"`
	// Sets which mode to use for Protect workload vulnerability scanning feature. Accepted values are DISABLED, BASIC.
	WorkloadVulnerabilityMode *string `pulumi:"workloadVulnerabilityMode"`
}

// ClusterProtectConfigInput is an input type that accepts ClusterProtectConfigArgs and ClusterProtectConfigOutput values.
// You can construct a concrete instance of `ClusterProtectConfigInput` via:
//
//	ClusterProtectConfigArgs{...}
type ClusterProtectConfigInput interface {
	pulumi.Input

	ToClusterProtectConfigOutput() ClusterProtectConfigOutput
	ToClusterProtectConfigOutputWithContext(context.Context) ClusterProtectConfigOutput
}

type ClusterProtectConfigArgs struct {
	// WorkloadConfig defines which actions are enabled for a cluster's workload configurations. Structure is documented below
	WorkloadConfig ClusterProtectConfigWorkloadConfigPtrInput `pulumi:"workloadConfig"`
	// Sets which mode to use for Protect workload vulnerability scanning feature. Accepted values are DISABLED, BASIC.
	WorkloadVulnerabilityMode pulumi.StringPtrInput `pulumi:"workloadVulnerabilityMode"`
}

func (ClusterProtectConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterProtectConfig)(nil)).Elem()
}

func (i ClusterProtectConfigArgs) ToClusterProtectConfigOutput() ClusterProtectConfigOutput {
	return i.ToClusterProtectConfigOutputWithContext(context.Background())
}

func (i ClusterProtectConfigArgs) ToClusterProtectConfigOutputWithContext(ctx context.Context) ClusterProtectConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterProtectConfigOutput)
}

func (i ClusterProtectConfigArgs) ToClusterProtectConfigPtrOutput() ClusterProtectConfigPtrOutput {
	return i.ToClusterProtectConfigPtrOutputWithContext(context.Background())
}

func (i ClusterProtectConfigArgs) ToClusterProtectConfigPtrOutputWithContext(ctx context.Context) ClusterProtectConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterProtectConfigOutput).ToClusterProtectConfigPtrOutputWithContext(ctx)
}

// ClusterProtectConfigPtrInput is an input type that accepts ClusterProtectConfigArgs, ClusterProtectConfigPtr and ClusterProtectConfigPtrOutput values.
// You can construct a concrete instance of `ClusterProtectConfigPtrInput` via:
//
//	        ClusterProtectConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterProtectConfigPtrInput interface {
	pulumi.Input

	ToClusterProtectConfigPtrOutput() ClusterProtectConfigPtrOutput
	ToClusterProtectConfigPtrOutputWithContext(context.Context) ClusterProtectConfigPtrOutput
}

type clusterProtectConfigPtrType ClusterProtectConfigArgs

func ClusterProtectConfigPtr(v *ClusterProtectConfigArgs) ClusterProtectConfigPtrInput {
	return (*clusterProtectConfigPtrType)(v)
}

func (*clusterProtectConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterProtectConfig)(nil)).Elem()
}

func (i *clusterProtectConfigPtrType) ToClusterProtectConfigPtrOutput() ClusterProtectConfigPtrOutput {
	return i.ToClusterProtectConfigPtrOutputWithContext(context.Background())
}

func (i *clusterProtectConfigPtrType) ToClusterProtectConfigPtrOutputWithContext(ctx context.Context) ClusterProtectConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterProtectConfigPtrOutput)
}

type ClusterProtectConfigOutput struct{ *pulumi.OutputState }

func (ClusterProtectConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterProtectConfig)(nil)).Elem()
}

func (o ClusterProtectConfigOutput) ToClusterProtectConfigOutput() ClusterProtectConfigOutput {
	return o
}

func (o ClusterProtectConfigOutput) ToClusterProtectConfigOutputWithContext(ctx context.Context) ClusterProtectConfigOutput {
	return o
}

func (o ClusterProtectConfigOutput) ToClusterProtectConfigPtrOutput() ClusterProtectConfigPtrOutput {
	return o.ToClusterProtectConfigPtrOutputWithContext(context.Background())
}

func (o ClusterProtectConfigOutput) ToClusterProtectConfigPtrOutputWithContext(ctx context.Context) ClusterProtectConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterProtectConfig) *ClusterProtectConfig {
		return &v
	}).(ClusterProtectConfigPtrOutput)
}

// WorkloadConfig defines which actions are enabled for a cluster's workload configurations. Structure is documented below
func (o ClusterProtectConfigOutput) WorkloadConfig() ClusterProtectConfigWorkloadConfigPtrOutput {
	return o.ApplyT(func(v ClusterProtectConfig) *ClusterProtectConfigWorkloadConfig { return v.WorkloadConfig }).(ClusterProtectConfigWorkloadConfigPtrOutput)
}

// Sets which mode to use for Protect workload vulnerability scanning feature. Accepted values are DISABLED, BASIC.
func (o ClusterProtectConfigOutput) WorkloadVulnerabilityMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterProtectConfig) *string { return v.WorkloadVulnerabilityMode }).(pulumi.StringPtrOutput)
}

type ClusterProtectConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterProtectConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterProtectConfig)(nil)).Elem()
}

func (o ClusterProtectConfigPtrOutput) ToClusterProtectConfigPtrOutput() ClusterProtectConfigPtrOutput {
	return o
}

func (o ClusterProtectConfigPtrOutput) ToClusterProtectConfigPtrOutputWithContext(ctx context.Context) ClusterProtectConfigPtrOutput {
	return o
}

func (o ClusterProtectConfigPtrOutput) Elem() ClusterProtectConfigOutput {
	return o.ApplyT(func(v *ClusterProtectConfig) ClusterProtectConfig {
		if v != nil {
			return *v
		}
		var ret ClusterProtectConfig
		return ret
	}).(ClusterProtectConfigOutput)
}

// WorkloadConfig defines which actions are enabled for a cluster's workload configurations. Structure is documented below
func (o ClusterProtectConfigPtrOutput) WorkloadConfig() ClusterProtectConfigWorkloadConfigPtrOutput {
	return o.ApplyT(func(v *ClusterProtectConfig) *ClusterProtectConfigWorkloadConfig {
		if v == nil {
			return nil
		}
		return v.WorkloadConfig
	}).(ClusterProtectConfigWorkloadConfigPtrOutput)
}

// Sets which mode to use for Protect workload vulnerability scanning feature. Accepted values are DISABLED, BASIC.
func (o ClusterProtectConfigPtrOutput) WorkloadVulnerabilityMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterProtectConfig) *string {
		if v == nil {
			return nil
		}
		return v.WorkloadVulnerabilityMode
	}).(pulumi.StringPtrOutput)
}

type ClusterProtectConfigWorkloadConfig struct {
	// Sets which mode of auditing should be used for the cluster's workloads. Accepted values are DISABLED, BASIC.
	AuditMode string `pulumi:"auditMode"`
}

// ClusterProtectConfigWorkloadConfigInput is an input type that accepts ClusterProtectConfigWorkloadConfigArgs and ClusterProtectConfigWorkloadConfigOutput values.
// You can construct a concrete instance of `ClusterProtectConfigWorkloadConfigInput` via:
//
//	ClusterProtectConfigWorkloadConfigArgs{...}
type ClusterProtectConfigWorkloadConfigInput interface {
	pulumi.Input

	ToClusterProtectConfigWorkloadConfigOutput() ClusterProtectConfigWorkloadConfigOutput
	ToClusterProtectConfigWorkloadConfigOutputWithContext(context.Context) ClusterProtectConfigWorkloadConfigOutput
}

type ClusterProtectConfigWorkloadConfigArgs struct {
	// Sets which mode of auditing should be used for the cluster's workloads. Accepted values are DISABLED, BASIC.
	AuditMode pulumi.StringInput `pulumi:"auditMode"`
}

func (ClusterProtectConfigWorkloadConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterProtectConfigWorkloadConfig)(nil)).Elem()
}

func (i ClusterProtectConfigWorkloadConfigArgs) ToClusterProtectConfigWorkloadConfigOutput() ClusterProtectConfigWorkloadConfigOutput {
	return i.ToClusterProtectConfigWorkloadConfigOutputWithContext(context.Background())
}

func (i ClusterProtectConfigWorkloadConfigArgs) ToClusterProtectConfigWorkloadConfigOutputWithContext(ctx context.Context) ClusterProtectConfigWorkloadConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterProtectConfigWorkloadConfigOutput)
}

func (i ClusterProtectConfigWorkloadConfigArgs) ToClusterProtectConfigWorkloadConfigPtrOutput() ClusterProtectConfigWorkloadConfigPtrOutput {
	return i.ToClusterProtectConfigWorkloadConfigPtrOutputWithContext(context.Background())
}

func (i ClusterProtectConfigWorkloadConfigArgs) ToClusterProtectConfigWorkloadConfigPtrOutputWithContext(ctx context.Context) ClusterProtectConfigWorkloadConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterProtectConfigWorkloadConfigOutput).ToClusterProtectConfigWorkloadConfigPtrOutputWithContext(ctx)
}

// ClusterProtectConfigWorkloadConfigPtrInput is an input type that accepts ClusterProtectConfigWorkloadConfigArgs, ClusterProtectConfigWorkloadConfigPtr and ClusterProtectConfigWorkloadConfigPtrOutput values.
// You can construct a concrete instance of `ClusterProtectConfigWorkloadConfigPtrInput` via:
//
//	        ClusterProtectConfigWorkloadConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterProtectConfigWorkloadConfigPtrInput interface {
	pulumi.Input

	ToClusterProtectConfigWorkloadConfigPtrOutput() ClusterProtectConfigWorkloadConfigPtrOutput
	ToClusterProtectConfigWorkloadConfigPtrOutputWithContext(context.Context) ClusterProtectConfigWorkloadConfigPtrOutput
}

type clusterProtectConfigWorkloadConfigPtrType ClusterProtectConfigWorkloadConfigArgs

func ClusterProtectConfigWorkloadConfigPtr(v *ClusterProtectConfigWorkloadConfigArgs) ClusterProtectConfigWorkloadConfigPtrInput {
	return (*clusterProtectConfigWorkloadConfigPtrType)(v)
}

func (*clusterProtectConfigWorkloadConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterProtectConfigWorkloadConfig)(nil)).Elem()
}

func (i *clusterProtectConfigWorkloadConfigPtrType) ToClusterProtectConfigWorkloadConfigPtrOutput() ClusterProtectConfigWorkloadConfigPtrOutput {
	return i.ToClusterProtectConfigWorkloadConfigPtrOutputWithContext(context.Background())
}

func (i *clusterProtectConfigWorkloadConfigPtrType) ToClusterProtectConfigWorkloadConfigPtrOutputWithContext(ctx context.Context) ClusterProtectConfigWorkloadConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterProtectConfigWorkloadConfigPtrOutput)
}

type ClusterProtectConfigWorkloadConfigOutput struct{ *pulumi.OutputState }

func (ClusterProtectConfigWorkloadConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterProtectConfigWorkloadConfig)(nil)).Elem()
}

func (o ClusterProtectConfigWorkloadConfigOutput) ToClusterProtectConfigWorkloadConfigOutput() ClusterProtectConfigWorkloadConfigOutput {
	return o
}

func (o ClusterProtectConfigWorkloadConfigOutput) ToClusterProtectConfigWorkloadConfigOutputWithContext(ctx context.Context) ClusterProtectConfigWorkloadConfigOutput {
	return o
}

func (o ClusterProtectConfigWorkloadConfigOutput) ToClusterProtectConfigWorkloadConfigPtrOutput() ClusterProtectConfigWorkloadConfigPtrOutput {
	return o.ToClusterProtectConfigWorkloadConfigPtrOutputWithContext(context.Background())
}

func (o ClusterProtectConfigWorkloadConfigOutput) ToClusterProtectConfigWorkloadConfigPtrOutputWithContext(ctx context.Context) ClusterProtectConfigWorkloadConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterProtectConfigWorkloadConfig) *ClusterProtectConfigWorkloadConfig {
		return &v
	}).(ClusterProtectConfigWorkloadConfigPtrOutput)
}

// Sets which mode of auditing should be used for the cluster's workloads. Accepted values are DISABLED, BASIC.
func (o ClusterProtectConfigWorkloadConfigOutput) AuditMode() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterProtectConfigWorkloadConfig) string { return v.AuditMode }).(pulumi.StringOutput)
}

type ClusterProtectConfigWorkloadConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterProtectConfigWorkloadConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterProtectConfigWorkloadConfig)(nil)).Elem()
}

func (o ClusterProtectConfigWorkloadConfigPtrOutput) ToClusterProtectConfigWorkloadConfigPtrOutput() ClusterProtectConfigWorkloadConfigPtrOutput {
	return o
}

func (o ClusterProtectConfigWorkloadConfigPtrOutput) ToClusterProtectConfigWorkloadConfigPtrOutputWithContext(ctx context.Context) ClusterProtectConfigWorkloadConfigPtrOutput {
	return o
}

func (o ClusterProtectConfigWorkloadConfigPtrOutput) Elem() ClusterProtectConfigWorkloadConfigOutput {
	return o.ApplyT(func(v *ClusterProtectConfigWorkloadConfig) ClusterProtectConfigWorkloadConfig {
		if v != nil {
			return *v
		}
		var ret ClusterProtectConfigWorkloadConfig
		return ret
	}).(ClusterProtectConfigWorkloadConfigOutput)
}

// Sets which mode of auditing should be used for the cluster's workloads. Accepted values are DISABLED, BASIC.
func (o ClusterProtectConfigWorkloadConfigPtrOutput) AuditMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterProtectConfigWorkloadConfig) *string {
		if v == nil {
			return nil
		}
		return &v.AuditMode
	}).(pulumi.StringPtrOutput)
}

type ClusterReleaseChannel struct {
	// The selected release channel.
	// Accepted values are:
	// * UNSPECIFIED: Not set.
	// * RAPID: Weekly upgrade cadence; Early testers and developers who requires new features.
	// * REGULAR: Multiple per month upgrade cadence; Production users who need features not yet offered in the Stable channel.
	// * STABLE: Every few months upgrade cadence; Production users who need stability above all else, and for whom frequent upgrades are too risky.
	Channel string `pulumi:"channel"`
}

// ClusterReleaseChannelInput is an input type that accepts ClusterReleaseChannelArgs and ClusterReleaseChannelOutput values.
// You can construct a concrete instance of `ClusterReleaseChannelInput` via:
//
//	ClusterReleaseChannelArgs{...}
type ClusterReleaseChannelInput interface {
	pulumi.Input

	ToClusterReleaseChannelOutput() ClusterReleaseChannelOutput
	ToClusterReleaseChannelOutputWithContext(context.Context) ClusterReleaseChannelOutput
}

type ClusterReleaseChannelArgs struct {
	// The selected release channel.
	// Accepted values are:
	// * UNSPECIFIED: Not set.
	// * RAPID: Weekly upgrade cadence; Early testers and developers who requires new features.
	// * REGULAR: Multiple per month upgrade cadence; Production users who need features not yet offered in the Stable channel.
	// * STABLE: Every few months upgrade cadence; Production users who need stability above all else, and for whom frequent upgrades are too risky.
	Channel pulumi.StringInput `pulumi:"channel"`
}

func (ClusterReleaseChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterReleaseChannel)(nil)).Elem()
}

func (i ClusterReleaseChannelArgs) ToClusterReleaseChannelOutput() ClusterReleaseChannelOutput {
	return i.ToClusterReleaseChannelOutputWithContext(context.Background())
}

func (i ClusterReleaseChannelArgs) ToClusterReleaseChannelOutputWithContext(ctx context.Context) ClusterReleaseChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterReleaseChannelOutput)
}

func (i ClusterReleaseChannelArgs) ToClusterReleaseChannelPtrOutput() ClusterReleaseChannelPtrOutput {
	return i.ToClusterReleaseChannelPtrOutputWithContext(context.Background())
}

func (i ClusterReleaseChannelArgs) ToClusterReleaseChannelPtrOutputWithContext(ctx context.Context) ClusterReleaseChannelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterReleaseChannelOutput).ToClusterReleaseChannelPtrOutputWithContext(ctx)
}

// ClusterReleaseChannelPtrInput is an input type that accepts ClusterReleaseChannelArgs, ClusterReleaseChannelPtr and ClusterReleaseChannelPtrOutput values.
// You can construct a concrete instance of `ClusterReleaseChannelPtrInput` via:
//
//	        ClusterReleaseChannelArgs{...}
//
//	or:
//
//	        nil
type ClusterReleaseChannelPtrInput interface {
	pulumi.Input

	ToClusterReleaseChannelPtrOutput() ClusterReleaseChannelPtrOutput
	ToClusterReleaseChannelPtrOutputWithContext(context.Context) ClusterReleaseChannelPtrOutput
}

type clusterReleaseChannelPtrType ClusterReleaseChannelArgs

func ClusterReleaseChannelPtr(v *ClusterReleaseChannelArgs) ClusterReleaseChannelPtrInput {
	return (*clusterReleaseChannelPtrType)(v)
}

func (*clusterReleaseChannelPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterReleaseChannel)(nil)).Elem()
}

func (i *clusterReleaseChannelPtrType) ToClusterReleaseChannelPtrOutput() ClusterReleaseChannelPtrOutput {
	return i.ToClusterReleaseChannelPtrOutputWithContext(context.Background())
}

func (i *clusterReleaseChannelPtrType) ToClusterReleaseChannelPtrOutputWithContext(ctx context.Context) ClusterReleaseChannelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterReleaseChannelPtrOutput)
}

type ClusterReleaseChannelOutput struct{ *pulumi.OutputState }

func (ClusterReleaseChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterReleaseChannel)(nil)).Elem()
}

func (o ClusterReleaseChannelOutput) ToClusterReleaseChannelOutput() ClusterReleaseChannelOutput {
	return o
}

func (o ClusterReleaseChannelOutput) ToClusterReleaseChannelOutputWithContext(ctx context.Context) ClusterReleaseChannelOutput {
	return o
}

func (o ClusterReleaseChannelOutput) ToClusterReleaseChannelPtrOutput() ClusterReleaseChannelPtrOutput {
	return o.ToClusterReleaseChannelPtrOutputWithContext(context.Background())
}

func (o ClusterReleaseChannelOutput) ToClusterReleaseChannelPtrOutputWithContext(ctx context.Context) ClusterReleaseChannelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterReleaseChannel) *ClusterReleaseChannel {
		return &v
	}).(ClusterReleaseChannelPtrOutput)
}

// The selected release channel.
// Accepted values are:
// * UNSPECIFIED: Not set.
// * RAPID: Weekly upgrade cadence; Early testers and developers who requires new features.
// * REGULAR: Multiple per month upgrade cadence; Production users who need features not yet offered in the Stable channel.
// * STABLE: Every few months upgrade cadence; Production users who need stability above all else, and for whom frequent upgrades are too risky.
func (o ClusterReleaseChannelOutput) Channel() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterReleaseChannel) string { return v.Channel }).(pulumi.StringOutput)
}

type ClusterReleaseChannelPtrOutput struct{ *pulumi.OutputState }

func (ClusterReleaseChannelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterReleaseChannel)(nil)).Elem()
}

func (o ClusterReleaseChannelPtrOutput) ToClusterReleaseChannelPtrOutput() ClusterReleaseChannelPtrOutput {
	return o
}

func (o ClusterReleaseChannelPtrOutput) ToClusterReleaseChannelPtrOutputWithContext(ctx context.Context) ClusterReleaseChannelPtrOutput {
	return o
}

func (o ClusterReleaseChannelPtrOutput) Elem() ClusterReleaseChannelOutput {
	return o.ApplyT(func(v *ClusterReleaseChannel) ClusterReleaseChannel {
		if v != nil {
			return *v
		}
		var ret ClusterReleaseChannel
		return ret
	}).(ClusterReleaseChannelOutput)
}

// The selected release channel.
// Accepted values are:
// * UNSPECIFIED: Not set.
// * RAPID: Weekly upgrade cadence; Early testers and developers who requires new features.
// * REGULAR: Multiple per month upgrade cadence; Production users who need features not yet offered in the Stable channel.
// * STABLE: Every few months upgrade cadence; Production users who need stability above all else, and for whom frequent upgrades are too risky.
func (o ClusterReleaseChannelPtrOutput) Channel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterReleaseChannel) *string {
		if v == nil {
			return nil
		}
		return &v.Channel
	}).(pulumi.StringPtrOutput)
}

type ClusterResourceUsageExportConfig struct {
	// Parameters for using BigQuery as the destination of resource usage export.
	//
	// * `bigquery_destination.dataset_id` (Required) - The ID of a BigQuery Dataset. For Example:
	BigqueryDestination ClusterResourceUsageExportConfigBigqueryDestination `pulumi:"bigqueryDestination"`
	// Whether to enable network egress metering for this cluster. If enabled, a daemonset will be created
	// in the cluster to meter network egress traffic.
	EnableNetworkEgressMetering *bool `pulumi:"enableNetworkEgressMetering"`
	// Whether to enable resource
	// consumption metering on this cluster. When enabled, a table will be created in
	// the resource export BigQuery dataset to store resource consumption data. The
	// resulting table can be joined with the resource usage table or with BigQuery
	// billing export. Defaults to `true`.
	EnableResourceConsumptionMetering *bool `pulumi:"enableResourceConsumptionMetering"`
}

// ClusterResourceUsageExportConfigInput is an input type that accepts ClusterResourceUsageExportConfigArgs and ClusterResourceUsageExportConfigOutput values.
// You can construct a concrete instance of `ClusterResourceUsageExportConfigInput` via:
//
//	ClusterResourceUsageExportConfigArgs{...}
type ClusterResourceUsageExportConfigInput interface {
	pulumi.Input

	ToClusterResourceUsageExportConfigOutput() ClusterResourceUsageExportConfigOutput
	ToClusterResourceUsageExportConfigOutputWithContext(context.Context) ClusterResourceUsageExportConfigOutput
}

type ClusterResourceUsageExportConfigArgs struct {
	// Parameters for using BigQuery as the destination of resource usage export.
	//
	// * `bigquery_destination.dataset_id` (Required) - The ID of a BigQuery Dataset. For Example:
	BigqueryDestination ClusterResourceUsageExportConfigBigqueryDestinationInput `pulumi:"bigqueryDestination"`
	// Whether to enable network egress metering for this cluster. If enabled, a daemonset will be created
	// in the cluster to meter network egress traffic.
	EnableNetworkEgressMetering pulumi.BoolPtrInput `pulumi:"enableNetworkEgressMetering"`
	// Whether to enable resource
	// consumption metering on this cluster. When enabled, a table will be created in
	// the resource export BigQuery dataset to store resource consumption data. The
	// resulting table can be joined with the resource usage table or with BigQuery
	// billing export. Defaults to `true`.
	EnableResourceConsumptionMetering pulumi.BoolPtrInput `pulumi:"enableResourceConsumptionMetering"`
}

func (ClusterResourceUsageExportConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterResourceUsageExportConfig)(nil)).Elem()
}

func (i ClusterResourceUsageExportConfigArgs) ToClusterResourceUsageExportConfigOutput() ClusterResourceUsageExportConfigOutput {
	return i.ToClusterResourceUsageExportConfigOutputWithContext(context.Background())
}

func (i ClusterResourceUsageExportConfigArgs) ToClusterResourceUsageExportConfigOutputWithContext(ctx context.Context) ClusterResourceUsageExportConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterResourceUsageExportConfigOutput)
}

func (i ClusterResourceUsageExportConfigArgs) ToClusterResourceUsageExportConfigPtrOutput() ClusterResourceUsageExportConfigPtrOutput {
	return i.ToClusterResourceUsageExportConfigPtrOutputWithContext(context.Background())
}

func (i ClusterResourceUsageExportConfigArgs) ToClusterResourceUsageExportConfigPtrOutputWithContext(ctx context.Context) ClusterResourceUsageExportConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterResourceUsageExportConfigOutput).ToClusterResourceUsageExportConfigPtrOutputWithContext(ctx)
}

// ClusterResourceUsageExportConfigPtrInput is an input type that accepts ClusterResourceUsageExportConfigArgs, ClusterResourceUsageExportConfigPtr and ClusterResourceUsageExportConfigPtrOutput values.
// You can construct a concrete instance of `ClusterResourceUsageExportConfigPtrInput` via:
//
//	        ClusterResourceUsageExportConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterResourceUsageExportConfigPtrInput interface {
	pulumi.Input

	ToClusterResourceUsageExportConfigPtrOutput() ClusterResourceUsageExportConfigPtrOutput
	ToClusterResourceUsageExportConfigPtrOutputWithContext(context.Context) ClusterResourceUsageExportConfigPtrOutput
}

type clusterResourceUsageExportConfigPtrType ClusterResourceUsageExportConfigArgs

func ClusterResourceUsageExportConfigPtr(v *ClusterResourceUsageExportConfigArgs) ClusterResourceUsageExportConfigPtrInput {
	return (*clusterResourceUsageExportConfigPtrType)(v)
}

func (*clusterResourceUsageExportConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterResourceUsageExportConfig)(nil)).Elem()
}

func (i *clusterResourceUsageExportConfigPtrType) ToClusterResourceUsageExportConfigPtrOutput() ClusterResourceUsageExportConfigPtrOutput {
	return i.ToClusterResourceUsageExportConfigPtrOutputWithContext(context.Background())
}

func (i *clusterResourceUsageExportConfigPtrType) ToClusterResourceUsageExportConfigPtrOutputWithContext(ctx context.Context) ClusterResourceUsageExportConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterResourceUsageExportConfigPtrOutput)
}

type ClusterResourceUsageExportConfigOutput struct{ *pulumi.OutputState }

func (ClusterResourceUsageExportConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterResourceUsageExportConfig)(nil)).Elem()
}

func (o ClusterResourceUsageExportConfigOutput) ToClusterResourceUsageExportConfigOutput() ClusterResourceUsageExportConfigOutput {
	return o
}

func (o ClusterResourceUsageExportConfigOutput) ToClusterResourceUsageExportConfigOutputWithContext(ctx context.Context) ClusterResourceUsageExportConfigOutput {
	return o
}

func (o ClusterResourceUsageExportConfigOutput) ToClusterResourceUsageExportConfigPtrOutput() ClusterResourceUsageExportConfigPtrOutput {
	return o.ToClusterResourceUsageExportConfigPtrOutputWithContext(context.Background())
}

func (o ClusterResourceUsageExportConfigOutput) ToClusterResourceUsageExportConfigPtrOutputWithContext(ctx context.Context) ClusterResourceUsageExportConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterResourceUsageExportConfig) *ClusterResourceUsageExportConfig {
		return &v
	}).(ClusterResourceUsageExportConfigPtrOutput)
}

// Parameters for using BigQuery as the destination of resource usage export.
//
// * `bigquery_destination.dataset_id` (Required) - The ID of a BigQuery Dataset. For Example:
func (o ClusterResourceUsageExportConfigOutput) BigqueryDestination() ClusterResourceUsageExportConfigBigqueryDestinationOutput {
	return o.ApplyT(func(v ClusterResourceUsageExportConfig) ClusterResourceUsageExportConfigBigqueryDestination {
		return v.BigqueryDestination
	}).(ClusterResourceUsageExportConfigBigqueryDestinationOutput)
}

// Whether to enable network egress metering for this cluster. If enabled, a daemonset will be created
// in the cluster to meter network egress traffic.
func (o ClusterResourceUsageExportConfigOutput) EnableNetworkEgressMetering() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterResourceUsageExportConfig) *bool { return v.EnableNetworkEgressMetering }).(pulumi.BoolPtrOutput)
}

// Whether to enable resource
// consumption metering on this cluster. When enabled, a table will be created in
// the resource export BigQuery dataset to store resource consumption data. The
// resulting table can be joined with the resource usage table or with BigQuery
// billing export. Defaults to `true`.
func (o ClusterResourceUsageExportConfigOutput) EnableResourceConsumptionMetering() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterResourceUsageExportConfig) *bool { return v.EnableResourceConsumptionMetering }).(pulumi.BoolPtrOutput)
}

type ClusterResourceUsageExportConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterResourceUsageExportConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterResourceUsageExportConfig)(nil)).Elem()
}

func (o ClusterResourceUsageExportConfigPtrOutput) ToClusterResourceUsageExportConfigPtrOutput() ClusterResourceUsageExportConfigPtrOutput {
	return o
}

func (o ClusterResourceUsageExportConfigPtrOutput) ToClusterResourceUsageExportConfigPtrOutputWithContext(ctx context.Context) ClusterResourceUsageExportConfigPtrOutput {
	return o
}

func (o ClusterResourceUsageExportConfigPtrOutput) Elem() ClusterResourceUsageExportConfigOutput {
	return o.ApplyT(func(v *ClusterResourceUsageExportConfig) ClusterResourceUsageExportConfig {
		if v != nil {
			return *v
		}
		var ret ClusterResourceUsageExportConfig
		return ret
	}).(ClusterResourceUsageExportConfigOutput)
}

// Parameters for using BigQuery as the destination of resource usage export.
//
// * `bigquery_destination.dataset_id` (Required) - The ID of a BigQuery Dataset. For Example:
func (o ClusterResourceUsageExportConfigPtrOutput) BigqueryDestination() ClusterResourceUsageExportConfigBigqueryDestinationPtrOutput {
	return o.ApplyT(func(v *ClusterResourceUsageExportConfig) *ClusterResourceUsageExportConfigBigqueryDestination {
		if v == nil {
			return nil
		}
		return &v.BigqueryDestination
	}).(ClusterResourceUsageExportConfigBigqueryDestinationPtrOutput)
}

// Whether to enable network egress metering for this cluster. If enabled, a daemonset will be created
// in the cluster to meter network egress traffic.
func (o ClusterResourceUsageExportConfigPtrOutput) EnableNetworkEgressMetering() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterResourceUsageExportConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EnableNetworkEgressMetering
	}).(pulumi.BoolPtrOutput)
}

// Whether to enable resource
// consumption metering on this cluster. When enabled, a table will be created in
// the resource export BigQuery dataset to store resource consumption data. The
// resulting table can be joined with the resource usage table or with BigQuery
// billing export. Defaults to `true`.
func (o ClusterResourceUsageExportConfigPtrOutput) EnableResourceConsumptionMetering() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterResourceUsageExportConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EnableResourceConsumptionMetering
	}).(pulumi.BoolPtrOutput)
}

type ClusterResourceUsageExportConfigBigqueryDestination struct {
	// The ID of a BigQuery Dataset.
	DatasetId string `pulumi:"datasetId"`
}

// ClusterResourceUsageExportConfigBigqueryDestinationInput is an input type that accepts ClusterResourceUsageExportConfigBigqueryDestinationArgs and ClusterResourceUsageExportConfigBigqueryDestinationOutput values.
// You can construct a concrete instance of `ClusterResourceUsageExportConfigBigqueryDestinationInput` via:
//
//	ClusterResourceUsageExportConfigBigqueryDestinationArgs{...}
type ClusterResourceUsageExportConfigBigqueryDestinationInput interface {
	pulumi.Input

	ToClusterResourceUsageExportConfigBigqueryDestinationOutput() ClusterResourceUsageExportConfigBigqueryDestinationOutput
	ToClusterResourceUsageExportConfigBigqueryDestinationOutputWithContext(context.Context) ClusterResourceUsageExportConfigBigqueryDestinationOutput
}

type ClusterResourceUsageExportConfigBigqueryDestinationArgs struct {
	// The ID of a BigQuery Dataset.
	DatasetId pulumi.StringInput `pulumi:"datasetId"`
}

func (ClusterResourceUsageExportConfigBigqueryDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterResourceUsageExportConfigBigqueryDestination)(nil)).Elem()
}

func (i ClusterResourceUsageExportConfigBigqueryDestinationArgs) ToClusterResourceUsageExportConfigBigqueryDestinationOutput() ClusterResourceUsageExportConfigBigqueryDestinationOutput {
	return i.ToClusterResourceUsageExportConfigBigqueryDestinationOutputWithContext(context.Background())
}

func (i ClusterResourceUsageExportConfigBigqueryDestinationArgs) ToClusterResourceUsageExportConfigBigqueryDestinationOutputWithContext(ctx context.Context) ClusterResourceUsageExportConfigBigqueryDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterResourceUsageExportConfigBigqueryDestinationOutput)
}

func (i ClusterResourceUsageExportConfigBigqueryDestinationArgs) ToClusterResourceUsageExportConfigBigqueryDestinationPtrOutput() ClusterResourceUsageExportConfigBigqueryDestinationPtrOutput {
	return i.ToClusterResourceUsageExportConfigBigqueryDestinationPtrOutputWithContext(context.Background())
}

func (i ClusterResourceUsageExportConfigBigqueryDestinationArgs) ToClusterResourceUsageExportConfigBigqueryDestinationPtrOutputWithContext(ctx context.Context) ClusterResourceUsageExportConfigBigqueryDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterResourceUsageExportConfigBigqueryDestinationOutput).ToClusterResourceUsageExportConfigBigqueryDestinationPtrOutputWithContext(ctx)
}

// ClusterResourceUsageExportConfigBigqueryDestinationPtrInput is an input type that accepts ClusterResourceUsageExportConfigBigqueryDestinationArgs, ClusterResourceUsageExportConfigBigqueryDestinationPtr and ClusterResourceUsageExportConfigBigqueryDestinationPtrOutput values.
// You can construct a concrete instance of `ClusterResourceUsageExportConfigBigqueryDestinationPtrInput` via:
//
//	        ClusterResourceUsageExportConfigBigqueryDestinationArgs{...}
//
//	or:
//
//	        nil
type ClusterResourceUsageExportConfigBigqueryDestinationPtrInput interface {
	pulumi.Input

	ToClusterResourceUsageExportConfigBigqueryDestinationPtrOutput() ClusterResourceUsageExportConfigBigqueryDestinationPtrOutput
	ToClusterResourceUsageExportConfigBigqueryDestinationPtrOutputWithContext(context.Context) ClusterResourceUsageExportConfigBigqueryDestinationPtrOutput
}

type clusterResourceUsageExportConfigBigqueryDestinationPtrType ClusterResourceUsageExportConfigBigqueryDestinationArgs

func ClusterResourceUsageExportConfigBigqueryDestinationPtr(v *ClusterResourceUsageExportConfigBigqueryDestinationArgs) ClusterResourceUsageExportConfigBigqueryDestinationPtrInput {
	return (*clusterResourceUsageExportConfigBigqueryDestinationPtrType)(v)
}

func (*clusterResourceUsageExportConfigBigqueryDestinationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterResourceUsageExportConfigBigqueryDestination)(nil)).Elem()
}

func (i *clusterResourceUsageExportConfigBigqueryDestinationPtrType) ToClusterResourceUsageExportConfigBigqueryDestinationPtrOutput() ClusterResourceUsageExportConfigBigqueryDestinationPtrOutput {
	return i.ToClusterResourceUsageExportConfigBigqueryDestinationPtrOutputWithContext(context.Background())
}

func (i *clusterResourceUsageExportConfigBigqueryDestinationPtrType) ToClusterResourceUsageExportConfigBigqueryDestinationPtrOutputWithContext(ctx context.Context) ClusterResourceUsageExportConfigBigqueryDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterResourceUsageExportConfigBigqueryDestinationPtrOutput)
}

type ClusterResourceUsageExportConfigBigqueryDestinationOutput struct{ *pulumi.OutputState }

func (ClusterResourceUsageExportConfigBigqueryDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterResourceUsageExportConfigBigqueryDestination)(nil)).Elem()
}

func (o ClusterResourceUsageExportConfigBigqueryDestinationOutput) ToClusterResourceUsageExportConfigBigqueryDestinationOutput() ClusterResourceUsageExportConfigBigqueryDestinationOutput {
	return o
}

func (o ClusterResourceUsageExportConfigBigqueryDestinationOutput) ToClusterResourceUsageExportConfigBigqueryDestinationOutputWithContext(ctx context.Context) ClusterResourceUsageExportConfigBigqueryDestinationOutput {
	return o
}

func (o ClusterResourceUsageExportConfigBigqueryDestinationOutput) ToClusterResourceUsageExportConfigBigqueryDestinationPtrOutput() ClusterResourceUsageExportConfigBigqueryDestinationPtrOutput {
	return o.ToClusterResourceUsageExportConfigBigqueryDestinationPtrOutputWithContext(context.Background())
}

func (o ClusterResourceUsageExportConfigBigqueryDestinationOutput) ToClusterResourceUsageExportConfigBigqueryDestinationPtrOutputWithContext(ctx context.Context) ClusterResourceUsageExportConfigBigqueryDestinationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterResourceUsageExportConfigBigqueryDestination) *ClusterResourceUsageExportConfigBigqueryDestination {
		return &v
	}).(ClusterResourceUsageExportConfigBigqueryDestinationPtrOutput)
}

// The ID of a BigQuery Dataset.
func (o ClusterResourceUsageExportConfigBigqueryDestinationOutput) DatasetId() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterResourceUsageExportConfigBigqueryDestination) string { return v.DatasetId }).(pulumi.StringOutput)
}

type ClusterResourceUsageExportConfigBigqueryDestinationPtrOutput struct{ *pulumi.OutputState }

func (ClusterResourceUsageExportConfigBigqueryDestinationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterResourceUsageExportConfigBigqueryDestination)(nil)).Elem()
}

func (o ClusterResourceUsageExportConfigBigqueryDestinationPtrOutput) ToClusterResourceUsageExportConfigBigqueryDestinationPtrOutput() ClusterResourceUsageExportConfigBigqueryDestinationPtrOutput {
	return o
}

func (o ClusterResourceUsageExportConfigBigqueryDestinationPtrOutput) ToClusterResourceUsageExportConfigBigqueryDestinationPtrOutputWithContext(ctx context.Context) ClusterResourceUsageExportConfigBigqueryDestinationPtrOutput {
	return o
}

func (o ClusterResourceUsageExportConfigBigqueryDestinationPtrOutput) Elem() ClusterResourceUsageExportConfigBigqueryDestinationOutput {
	return o.ApplyT(func(v *ClusterResourceUsageExportConfigBigqueryDestination) ClusterResourceUsageExportConfigBigqueryDestination {
		if v != nil {
			return *v
		}
		var ret ClusterResourceUsageExportConfigBigqueryDestination
		return ret
	}).(ClusterResourceUsageExportConfigBigqueryDestinationOutput)
}

// The ID of a BigQuery Dataset.
func (o ClusterResourceUsageExportConfigBigqueryDestinationPtrOutput) DatasetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterResourceUsageExportConfigBigqueryDestination) *string {
		if v == nil {
			return nil
		}
		return &v.DatasetId
	}).(pulumi.StringPtrOutput)
}

type ClusterSecurityPostureConfig struct {
	// Sets the mode of the Kubernetes security posture API's off-cluster features. Available options include `DISABLED` and `BASIC`.
	Mode *string `pulumi:"mode"`
	// Sets the mode of the Kubernetes security posture API's workload vulnerability scanning. Available options include `VULNERABILITY_DISABLED`, `VULNERABILITY_BASIC` and `VULNERABILITY_ENTERPRISE`.
	VulnerabilityMode *string `pulumi:"vulnerabilityMode"`
}

// ClusterSecurityPostureConfigInput is an input type that accepts ClusterSecurityPostureConfigArgs and ClusterSecurityPostureConfigOutput values.
// You can construct a concrete instance of `ClusterSecurityPostureConfigInput` via:
//
//	ClusterSecurityPostureConfigArgs{...}
type ClusterSecurityPostureConfigInput interface {
	pulumi.Input

	ToClusterSecurityPostureConfigOutput() ClusterSecurityPostureConfigOutput
	ToClusterSecurityPostureConfigOutputWithContext(context.Context) ClusterSecurityPostureConfigOutput
}

type ClusterSecurityPostureConfigArgs struct {
	// Sets the mode of the Kubernetes security posture API's off-cluster features. Available options include `DISABLED` and `BASIC`.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// Sets the mode of the Kubernetes security posture API's workload vulnerability scanning. Available options include `VULNERABILITY_DISABLED`, `VULNERABILITY_BASIC` and `VULNERABILITY_ENTERPRISE`.
	VulnerabilityMode pulumi.StringPtrInput `pulumi:"vulnerabilityMode"`
}

func (ClusterSecurityPostureConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecurityPostureConfig)(nil)).Elem()
}

func (i ClusterSecurityPostureConfigArgs) ToClusterSecurityPostureConfigOutput() ClusterSecurityPostureConfigOutput {
	return i.ToClusterSecurityPostureConfigOutputWithContext(context.Background())
}

func (i ClusterSecurityPostureConfigArgs) ToClusterSecurityPostureConfigOutputWithContext(ctx context.Context) ClusterSecurityPostureConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecurityPostureConfigOutput)
}

func (i ClusterSecurityPostureConfigArgs) ToClusterSecurityPostureConfigPtrOutput() ClusterSecurityPostureConfigPtrOutput {
	return i.ToClusterSecurityPostureConfigPtrOutputWithContext(context.Background())
}

func (i ClusterSecurityPostureConfigArgs) ToClusterSecurityPostureConfigPtrOutputWithContext(ctx context.Context) ClusterSecurityPostureConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecurityPostureConfigOutput).ToClusterSecurityPostureConfigPtrOutputWithContext(ctx)
}

// ClusterSecurityPostureConfigPtrInput is an input type that accepts ClusterSecurityPostureConfigArgs, ClusterSecurityPostureConfigPtr and ClusterSecurityPostureConfigPtrOutput values.
// You can construct a concrete instance of `ClusterSecurityPostureConfigPtrInput` via:
//
//	        ClusterSecurityPostureConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterSecurityPostureConfigPtrInput interface {
	pulumi.Input

	ToClusterSecurityPostureConfigPtrOutput() ClusterSecurityPostureConfigPtrOutput
	ToClusterSecurityPostureConfigPtrOutputWithContext(context.Context) ClusterSecurityPostureConfigPtrOutput
}

type clusterSecurityPostureConfigPtrType ClusterSecurityPostureConfigArgs

func ClusterSecurityPostureConfigPtr(v *ClusterSecurityPostureConfigArgs) ClusterSecurityPostureConfigPtrInput {
	return (*clusterSecurityPostureConfigPtrType)(v)
}

func (*clusterSecurityPostureConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecurityPostureConfig)(nil)).Elem()
}

func (i *clusterSecurityPostureConfigPtrType) ToClusterSecurityPostureConfigPtrOutput() ClusterSecurityPostureConfigPtrOutput {
	return i.ToClusterSecurityPostureConfigPtrOutputWithContext(context.Background())
}

func (i *clusterSecurityPostureConfigPtrType) ToClusterSecurityPostureConfigPtrOutputWithContext(ctx context.Context) ClusterSecurityPostureConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecurityPostureConfigPtrOutput)
}

type ClusterSecurityPostureConfigOutput struct{ *pulumi.OutputState }

func (ClusterSecurityPostureConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecurityPostureConfig)(nil)).Elem()
}

func (o ClusterSecurityPostureConfigOutput) ToClusterSecurityPostureConfigOutput() ClusterSecurityPostureConfigOutput {
	return o
}

func (o ClusterSecurityPostureConfigOutput) ToClusterSecurityPostureConfigOutputWithContext(ctx context.Context) ClusterSecurityPostureConfigOutput {
	return o
}

func (o ClusterSecurityPostureConfigOutput) ToClusterSecurityPostureConfigPtrOutput() ClusterSecurityPostureConfigPtrOutput {
	return o.ToClusterSecurityPostureConfigPtrOutputWithContext(context.Background())
}

func (o ClusterSecurityPostureConfigOutput) ToClusterSecurityPostureConfigPtrOutputWithContext(ctx context.Context) ClusterSecurityPostureConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecurityPostureConfig) *ClusterSecurityPostureConfig {
		return &v
	}).(ClusterSecurityPostureConfigPtrOutput)
}

// Sets the mode of the Kubernetes security posture API's off-cluster features. Available options include `DISABLED` and `BASIC`.
func (o ClusterSecurityPostureConfigOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecurityPostureConfig) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// Sets the mode of the Kubernetes security posture API's workload vulnerability scanning. Available options include `VULNERABILITY_DISABLED`, `VULNERABILITY_BASIC` and `VULNERABILITY_ENTERPRISE`.
func (o ClusterSecurityPostureConfigOutput) VulnerabilityMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecurityPostureConfig) *string { return v.VulnerabilityMode }).(pulumi.StringPtrOutput)
}

type ClusterSecurityPostureConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecurityPostureConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecurityPostureConfig)(nil)).Elem()
}

func (o ClusterSecurityPostureConfigPtrOutput) ToClusterSecurityPostureConfigPtrOutput() ClusterSecurityPostureConfigPtrOutput {
	return o
}

func (o ClusterSecurityPostureConfigPtrOutput) ToClusterSecurityPostureConfigPtrOutputWithContext(ctx context.Context) ClusterSecurityPostureConfigPtrOutput {
	return o
}

func (o ClusterSecurityPostureConfigPtrOutput) Elem() ClusterSecurityPostureConfigOutput {
	return o.ApplyT(func(v *ClusterSecurityPostureConfig) ClusterSecurityPostureConfig {
		if v != nil {
			return *v
		}
		var ret ClusterSecurityPostureConfig
		return ret
	}).(ClusterSecurityPostureConfigOutput)
}

// Sets the mode of the Kubernetes security posture API's off-cluster features. Available options include `DISABLED` and `BASIC`.
func (o ClusterSecurityPostureConfigPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecurityPostureConfig) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// Sets the mode of the Kubernetes security posture API's workload vulnerability scanning. Available options include `VULNERABILITY_DISABLED`, `VULNERABILITY_BASIC` and `VULNERABILITY_ENTERPRISE`.
func (o ClusterSecurityPostureConfigPtrOutput) VulnerabilityMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecurityPostureConfig) *string {
		if v == nil {
			return nil
		}
		return v.VulnerabilityMode
	}).(pulumi.StringPtrOutput)
}

type ClusterServiceExternalIpsConfig struct {
	// Controls whether external ips specified by a service will be allowed. It is enabled by default.
	Enabled bool `pulumi:"enabled"`
}

// ClusterServiceExternalIpsConfigInput is an input type that accepts ClusterServiceExternalIpsConfigArgs and ClusterServiceExternalIpsConfigOutput values.
// You can construct a concrete instance of `ClusterServiceExternalIpsConfigInput` via:
//
//	ClusterServiceExternalIpsConfigArgs{...}
type ClusterServiceExternalIpsConfigInput interface {
	pulumi.Input

	ToClusterServiceExternalIpsConfigOutput() ClusterServiceExternalIpsConfigOutput
	ToClusterServiceExternalIpsConfigOutputWithContext(context.Context) ClusterServiceExternalIpsConfigOutput
}

type ClusterServiceExternalIpsConfigArgs struct {
	// Controls whether external ips specified by a service will be allowed. It is enabled by default.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (ClusterServiceExternalIpsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterServiceExternalIpsConfig)(nil)).Elem()
}

func (i ClusterServiceExternalIpsConfigArgs) ToClusterServiceExternalIpsConfigOutput() ClusterServiceExternalIpsConfigOutput {
	return i.ToClusterServiceExternalIpsConfigOutputWithContext(context.Background())
}

func (i ClusterServiceExternalIpsConfigArgs) ToClusterServiceExternalIpsConfigOutputWithContext(ctx context.Context) ClusterServiceExternalIpsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterServiceExternalIpsConfigOutput)
}

func (i ClusterServiceExternalIpsConfigArgs) ToClusterServiceExternalIpsConfigPtrOutput() ClusterServiceExternalIpsConfigPtrOutput {
	return i.ToClusterServiceExternalIpsConfigPtrOutputWithContext(context.Background())
}

func (i ClusterServiceExternalIpsConfigArgs) ToClusterServiceExternalIpsConfigPtrOutputWithContext(ctx context.Context) ClusterServiceExternalIpsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterServiceExternalIpsConfigOutput).ToClusterServiceExternalIpsConfigPtrOutputWithContext(ctx)
}

// ClusterServiceExternalIpsConfigPtrInput is an input type that accepts ClusterServiceExternalIpsConfigArgs, ClusterServiceExternalIpsConfigPtr and ClusterServiceExternalIpsConfigPtrOutput values.
// You can construct a concrete instance of `ClusterServiceExternalIpsConfigPtrInput` via:
//
//	        ClusterServiceExternalIpsConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterServiceExternalIpsConfigPtrInput interface {
	pulumi.Input

	ToClusterServiceExternalIpsConfigPtrOutput() ClusterServiceExternalIpsConfigPtrOutput
	ToClusterServiceExternalIpsConfigPtrOutputWithContext(context.Context) ClusterServiceExternalIpsConfigPtrOutput
}

type clusterServiceExternalIpsConfigPtrType ClusterServiceExternalIpsConfigArgs

func ClusterServiceExternalIpsConfigPtr(v *ClusterServiceExternalIpsConfigArgs) ClusterServiceExternalIpsConfigPtrInput {
	return (*clusterServiceExternalIpsConfigPtrType)(v)
}

func (*clusterServiceExternalIpsConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterServiceExternalIpsConfig)(nil)).Elem()
}

func (i *clusterServiceExternalIpsConfigPtrType) ToClusterServiceExternalIpsConfigPtrOutput() ClusterServiceExternalIpsConfigPtrOutput {
	return i.ToClusterServiceExternalIpsConfigPtrOutputWithContext(context.Background())
}

func (i *clusterServiceExternalIpsConfigPtrType) ToClusterServiceExternalIpsConfigPtrOutputWithContext(ctx context.Context) ClusterServiceExternalIpsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterServiceExternalIpsConfigPtrOutput)
}

type ClusterServiceExternalIpsConfigOutput struct{ *pulumi.OutputState }

func (ClusterServiceExternalIpsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterServiceExternalIpsConfig)(nil)).Elem()
}

func (o ClusterServiceExternalIpsConfigOutput) ToClusterServiceExternalIpsConfigOutput() ClusterServiceExternalIpsConfigOutput {
	return o
}

func (o ClusterServiceExternalIpsConfigOutput) ToClusterServiceExternalIpsConfigOutputWithContext(ctx context.Context) ClusterServiceExternalIpsConfigOutput {
	return o
}

func (o ClusterServiceExternalIpsConfigOutput) ToClusterServiceExternalIpsConfigPtrOutput() ClusterServiceExternalIpsConfigPtrOutput {
	return o.ToClusterServiceExternalIpsConfigPtrOutputWithContext(context.Background())
}

func (o ClusterServiceExternalIpsConfigOutput) ToClusterServiceExternalIpsConfigPtrOutputWithContext(ctx context.Context) ClusterServiceExternalIpsConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterServiceExternalIpsConfig) *ClusterServiceExternalIpsConfig {
		return &v
	}).(ClusterServiceExternalIpsConfigPtrOutput)
}

// Controls whether external ips specified by a service will be allowed. It is enabled by default.
func (o ClusterServiceExternalIpsConfigOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterServiceExternalIpsConfig) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type ClusterServiceExternalIpsConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterServiceExternalIpsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterServiceExternalIpsConfig)(nil)).Elem()
}

func (o ClusterServiceExternalIpsConfigPtrOutput) ToClusterServiceExternalIpsConfigPtrOutput() ClusterServiceExternalIpsConfigPtrOutput {
	return o
}

func (o ClusterServiceExternalIpsConfigPtrOutput) ToClusterServiceExternalIpsConfigPtrOutputWithContext(ctx context.Context) ClusterServiceExternalIpsConfigPtrOutput {
	return o
}

func (o ClusterServiceExternalIpsConfigPtrOutput) Elem() ClusterServiceExternalIpsConfigOutput {
	return o.ApplyT(func(v *ClusterServiceExternalIpsConfig) ClusterServiceExternalIpsConfig {
		if v != nil {
			return *v
		}
		var ret ClusterServiceExternalIpsConfig
		return ret
	}).(ClusterServiceExternalIpsConfigOutput)
}

// Controls whether external ips specified by a service will be allowed. It is enabled by default.
func (o ClusterServiceExternalIpsConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterServiceExternalIpsConfig) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type ClusterTpuConfig struct {
	// Whether Cloud TPU integration is enabled or not
	Enabled bool `pulumi:"enabled"`
	// IPv4 CIDR block reserved for Cloud TPU in the VPC.
	Ipv4CidrBlock *string `pulumi:"ipv4CidrBlock"`
	// Whether to use service networking for Cloud TPU or not
	UseServiceNetworking *bool `pulumi:"useServiceNetworking"`
}

// ClusterTpuConfigInput is an input type that accepts ClusterTpuConfigArgs and ClusterTpuConfigOutput values.
// You can construct a concrete instance of `ClusterTpuConfigInput` via:
//
//	ClusterTpuConfigArgs{...}
type ClusterTpuConfigInput interface {
	pulumi.Input

	ToClusterTpuConfigOutput() ClusterTpuConfigOutput
	ToClusterTpuConfigOutputWithContext(context.Context) ClusterTpuConfigOutput
}

type ClusterTpuConfigArgs struct {
	// Whether Cloud TPU integration is enabled or not
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// IPv4 CIDR block reserved for Cloud TPU in the VPC.
	Ipv4CidrBlock pulumi.StringPtrInput `pulumi:"ipv4CidrBlock"`
	// Whether to use service networking for Cloud TPU or not
	UseServiceNetworking pulumi.BoolPtrInput `pulumi:"useServiceNetworking"`
}

func (ClusterTpuConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterTpuConfig)(nil)).Elem()
}

func (i ClusterTpuConfigArgs) ToClusterTpuConfigOutput() ClusterTpuConfigOutput {
	return i.ToClusterTpuConfigOutputWithContext(context.Background())
}

func (i ClusterTpuConfigArgs) ToClusterTpuConfigOutputWithContext(ctx context.Context) ClusterTpuConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterTpuConfigOutput)
}

func (i ClusterTpuConfigArgs) ToClusterTpuConfigPtrOutput() ClusterTpuConfigPtrOutput {
	return i.ToClusterTpuConfigPtrOutputWithContext(context.Background())
}

func (i ClusterTpuConfigArgs) ToClusterTpuConfigPtrOutputWithContext(ctx context.Context) ClusterTpuConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterTpuConfigOutput).ToClusterTpuConfigPtrOutputWithContext(ctx)
}

// ClusterTpuConfigPtrInput is an input type that accepts ClusterTpuConfigArgs, ClusterTpuConfigPtr and ClusterTpuConfigPtrOutput values.
// You can construct a concrete instance of `ClusterTpuConfigPtrInput` via:
//
//	        ClusterTpuConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterTpuConfigPtrInput interface {
	pulumi.Input

	ToClusterTpuConfigPtrOutput() ClusterTpuConfigPtrOutput
	ToClusterTpuConfigPtrOutputWithContext(context.Context) ClusterTpuConfigPtrOutput
}

type clusterTpuConfigPtrType ClusterTpuConfigArgs

func ClusterTpuConfigPtr(v *ClusterTpuConfigArgs) ClusterTpuConfigPtrInput {
	return (*clusterTpuConfigPtrType)(v)
}

func (*clusterTpuConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterTpuConfig)(nil)).Elem()
}

func (i *clusterTpuConfigPtrType) ToClusterTpuConfigPtrOutput() ClusterTpuConfigPtrOutput {
	return i.ToClusterTpuConfigPtrOutputWithContext(context.Background())
}

func (i *clusterTpuConfigPtrType) ToClusterTpuConfigPtrOutputWithContext(ctx context.Context) ClusterTpuConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterTpuConfigPtrOutput)
}

type ClusterTpuConfigOutput struct{ *pulumi.OutputState }

func (ClusterTpuConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterTpuConfig)(nil)).Elem()
}

func (o ClusterTpuConfigOutput) ToClusterTpuConfigOutput() ClusterTpuConfigOutput {
	return o
}

func (o ClusterTpuConfigOutput) ToClusterTpuConfigOutputWithContext(ctx context.Context) ClusterTpuConfigOutput {
	return o
}

func (o ClusterTpuConfigOutput) ToClusterTpuConfigPtrOutput() ClusterTpuConfigPtrOutput {
	return o.ToClusterTpuConfigPtrOutputWithContext(context.Background())
}

func (o ClusterTpuConfigOutput) ToClusterTpuConfigPtrOutputWithContext(ctx context.Context) ClusterTpuConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterTpuConfig) *ClusterTpuConfig {
		return &v
	}).(ClusterTpuConfigPtrOutput)
}

// Whether Cloud TPU integration is enabled or not
func (o ClusterTpuConfigOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterTpuConfig) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// IPv4 CIDR block reserved for Cloud TPU in the VPC.
func (o ClusterTpuConfigOutput) Ipv4CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterTpuConfig) *string { return v.Ipv4CidrBlock }).(pulumi.StringPtrOutput)
}

// Whether to use service networking for Cloud TPU or not
func (o ClusterTpuConfigOutput) UseServiceNetworking() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterTpuConfig) *bool { return v.UseServiceNetworking }).(pulumi.BoolPtrOutput)
}

type ClusterTpuConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterTpuConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterTpuConfig)(nil)).Elem()
}

func (o ClusterTpuConfigPtrOutput) ToClusterTpuConfigPtrOutput() ClusterTpuConfigPtrOutput {
	return o
}

func (o ClusterTpuConfigPtrOutput) ToClusterTpuConfigPtrOutputWithContext(ctx context.Context) ClusterTpuConfigPtrOutput {
	return o
}

func (o ClusterTpuConfigPtrOutput) Elem() ClusterTpuConfigOutput {
	return o.ApplyT(func(v *ClusterTpuConfig) ClusterTpuConfig {
		if v != nil {
			return *v
		}
		var ret ClusterTpuConfig
		return ret
	}).(ClusterTpuConfigOutput)
}

// Whether Cloud TPU integration is enabled or not
func (o ClusterTpuConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterTpuConfig) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// IPv4 CIDR block reserved for Cloud TPU in the VPC.
func (o ClusterTpuConfigPtrOutput) Ipv4CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterTpuConfig) *string {
		if v == nil {
			return nil
		}
		return v.Ipv4CidrBlock
	}).(pulumi.StringPtrOutput)
}

// Whether to use service networking for Cloud TPU or not
func (o ClusterTpuConfigPtrOutput) UseServiceNetworking() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterTpuConfig) *bool {
		if v == nil {
			return nil
		}
		return v.UseServiceNetworking
	}).(pulumi.BoolPtrOutput)
}

type ClusterVerticalPodAutoscaling struct {
	// Enables vertical pod autoscaling
	Enabled bool `pulumi:"enabled"`
}

// ClusterVerticalPodAutoscalingInput is an input type that accepts ClusterVerticalPodAutoscalingArgs and ClusterVerticalPodAutoscalingOutput values.
// You can construct a concrete instance of `ClusterVerticalPodAutoscalingInput` via:
//
//	ClusterVerticalPodAutoscalingArgs{...}
type ClusterVerticalPodAutoscalingInput interface {
	pulumi.Input

	ToClusterVerticalPodAutoscalingOutput() ClusterVerticalPodAutoscalingOutput
	ToClusterVerticalPodAutoscalingOutputWithContext(context.Context) ClusterVerticalPodAutoscalingOutput
}

type ClusterVerticalPodAutoscalingArgs struct {
	// Enables vertical pod autoscaling
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (ClusterVerticalPodAutoscalingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterVerticalPodAutoscaling)(nil)).Elem()
}

func (i ClusterVerticalPodAutoscalingArgs) ToClusterVerticalPodAutoscalingOutput() ClusterVerticalPodAutoscalingOutput {
	return i.ToClusterVerticalPodAutoscalingOutputWithContext(context.Background())
}

func (i ClusterVerticalPodAutoscalingArgs) ToClusterVerticalPodAutoscalingOutputWithContext(ctx context.Context) ClusterVerticalPodAutoscalingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterVerticalPodAutoscalingOutput)
}

func (i ClusterVerticalPodAutoscalingArgs) ToClusterVerticalPodAutoscalingPtrOutput() ClusterVerticalPodAutoscalingPtrOutput {
	return i.ToClusterVerticalPodAutoscalingPtrOutputWithContext(context.Background())
}

func (i ClusterVerticalPodAutoscalingArgs) ToClusterVerticalPodAutoscalingPtrOutputWithContext(ctx context.Context) ClusterVerticalPodAutoscalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterVerticalPodAutoscalingOutput).ToClusterVerticalPodAutoscalingPtrOutputWithContext(ctx)
}

// ClusterVerticalPodAutoscalingPtrInput is an input type that accepts ClusterVerticalPodAutoscalingArgs, ClusterVerticalPodAutoscalingPtr and ClusterVerticalPodAutoscalingPtrOutput values.
// You can construct a concrete instance of `ClusterVerticalPodAutoscalingPtrInput` via:
//
//	        ClusterVerticalPodAutoscalingArgs{...}
//
//	or:
//
//	        nil
type ClusterVerticalPodAutoscalingPtrInput interface {
	pulumi.Input

	ToClusterVerticalPodAutoscalingPtrOutput() ClusterVerticalPodAutoscalingPtrOutput
	ToClusterVerticalPodAutoscalingPtrOutputWithContext(context.Context) ClusterVerticalPodAutoscalingPtrOutput
}

type clusterVerticalPodAutoscalingPtrType ClusterVerticalPodAutoscalingArgs

func ClusterVerticalPodAutoscalingPtr(v *ClusterVerticalPodAutoscalingArgs) ClusterVerticalPodAutoscalingPtrInput {
	return (*clusterVerticalPodAutoscalingPtrType)(v)
}

func (*clusterVerticalPodAutoscalingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterVerticalPodAutoscaling)(nil)).Elem()
}

func (i *clusterVerticalPodAutoscalingPtrType) ToClusterVerticalPodAutoscalingPtrOutput() ClusterVerticalPodAutoscalingPtrOutput {
	return i.ToClusterVerticalPodAutoscalingPtrOutputWithContext(context.Background())
}

func (i *clusterVerticalPodAutoscalingPtrType) ToClusterVerticalPodAutoscalingPtrOutputWithContext(ctx context.Context) ClusterVerticalPodAutoscalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterVerticalPodAutoscalingPtrOutput)
}

type ClusterVerticalPodAutoscalingOutput struct{ *pulumi.OutputState }

func (ClusterVerticalPodAutoscalingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterVerticalPodAutoscaling)(nil)).Elem()
}

func (o ClusterVerticalPodAutoscalingOutput) ToClusterVerticalPodAutoscalingOutput() ClusterVerticalPodAutoscalingOutput {
	return o
}

func (o ClusterVerticalPodAutoscalingOutput) ToClusterVerticalPodAutoscalingOutputWithContext(ctx context.Context) ClusterVerticalPodAutoscalingOutput {
	return o
}

func (o ClusterVerticalPodAutoscalingOutput) ToClusterVerticalPodAutoscalingPtrOutput() ClusterVerticalPodAutoscalingPtrOutput {
	return o.ToClusterVerticalPodAutoscalingPtrOutputWithContext(context.Background())
}

func (o ClusterVerticalPodAutoscalingOutput) ToClusterVerticalPodAutoscalingPtrOutputWithContext(ctx context.Context) ClusterVerticalPodAutoscalingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterVerticalPodAutoscaling) *ClusterVerticalPodAutoscaling {
		return &v
	}).(ClusterVerticalPodAutoscalingPtrOutput)
}

// Enables vertical pod autoscaling
func (o ClusterVerticalPodAutoscalingOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterVerticalPodAutoscaling) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type ClusterVerticalPodAutoscalingPtrOutput struct{ *pulumi.OutputState }

func (ClusterVerticalPodAutoscalingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterVerticalPodAutoscaling)(nil)).Elem()
}

func (o ClusterVerticalPodAutoscalingPtrOutput) ToClusterVerticalPodAutoscalingPtrOutput() ClusterVerticalPodAutoscalingPtrOutput {
	return o
}

func (o ClusterVerticalPodAutoscalingPtrOutput) ToClusterVerticalPodAutoscalingPtrOutputWithContext(ctx context.Context) ClusterVerticalPodAutoscalingPtrOutput {
	return o
}

func (o ClusterVerticalPodAutoscalingPtrOutput) Elem() ClusterVerticalPodAutoscalingOutput {
	return o.ApplyT(func(v *ClusterVerticalPodAutoscaling) ClusterVerticalPodAutoscaling {
		if v != nil {
			return *v
		}
		var ret ClusterVerticalPodAutoscaling
		return ret
	}).(ClusterVerticalPodAutoscalingOutput)
}

// Enables vertical pod autoscaling
func (o ClusterVerticalPodAutoscalingPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterVerticalPodAutoscaling) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type ClusterWorkloadAltsConfig struct {
	// Whether the alts handshaker should be enabled or not for direct-path. Requires Workload Identity (workloadPool) must be non-empty).
	EnableAlts bool `pulumi:"enableAlts"`
}

// ClusterWorkloadAltsConfigInput is an input type that accepts ClusterWorkloadAltsConfigArgs and ClusterWorkloadAltsConfigOutput values.
// You can construct a concrete instance of `ClusterWorkloadAltsConfigInput` via:
//
//	ClusterWorkloadAltsConfigArgs{...}
type ClusterWorkloadAltsConfigInput interface {
	pulumi.Input

	ToClusterWorkloadAltsConfigOutput() ClusterWorkloadAltsConfigOutput
	ToClusterWorkloadAltsConfigOutputWithContext(context.Context) ClusterWorkloadAltsConfigOutput
}

type ClusterWorkloadAltsConfigArgs struct {
	// Whether the alts handshaker should be enabled or not for direct-path. Requires Workload Identity (workloadPool) must be non-empty).
	EnableAlts pulumi.BoolInput `pulumi:"enableAlts"`
}

func (ClusterWorkloadAltsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterWorkloadAltsConfig)(nil)).Elem()
}

func (i ClusterWorkloadAltsConfigArgs) ToClusterWorkloadAltsConfigOutput() ClusterWorkloadAltsConfigOutput {
	return i.ToClusterWorkloadAltsConfigOutputWithContext(context.Background())
}

func (i ClusterWorkloadAltsConfigArgs) ToClusterWorkloadAltsConfigOutputWithContext(ctx context.Context) ClusterWorkloadAltsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterWorkloadAltsConfigOutput)
}

func (i ClusterWorkloadAltsConfigArgs) ToClusterWorkloadAltsConfigPtrOutput() ClusterWorkloadAltsConfigPtrOutput {
	return i.ToClusterWorkloadAltsConfigPtrOutputWithContext(context.Background())
}

func (i ClusterWorkloadAltsConfigArgs) ToClusterWorkloadAltsConfigPtrOutputWithContext(ctx context.Context) ClusterWorkloadAltsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterWorkloadAltsConfigOutput).ToClusterWorkloadAltsConfigPtrOutputWithContext(ctx)
}

// ClusterWorkloadAltsConfigPtrInput is an input type that accepts ClusterWorkloadAltsConfigArgs, ClusterWorkloadAltsConfigPtr and ClusterWorkloadAltsConfigPtrOutput values.
// You can construct a concrete instance of `ClusterWorkloadAltsConfigPtrInput` via:
//
//	        ClusterWorkloadAltsConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterWorkloadAltsConfigPtrInput interface {
	pulumi.Input

	ToClusterWorkloadAltsConfigPtrOutput() ClusterWorkloadAltsConfigPtrOutput
	ToClusterWorkloadAltsConfigPtrOutputWithContext(context.Context) ClusterWorkloadAltsConfigPtrOutput
}

type clusterWorkloadAltsConfigPtrType ClusterWorkloadAltsConfigArgs

func ClusterWorkloadAltsConfigPtr(v *ClusterWorkloadAltsConfigArgs) ClusterWorkloadAltsConfigPtrInput {
	return (*clusterWorkloadAltsConfigPtrType)(v)
}

func (*clusterWorkloadAltsConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterWorkloadAltsConfig)(nil)).Elem()
}

func (i *clusterWorkloadAltsConfigPtrType) ToClusterWorkloadAltsConfigPtrOutput() ClusterWorkloadAltsConfigPtrOutput {
	return i.ToClusterWorkloadAltsConfigPtrOutputWithContext(context.Background())
}

func (i *clusterWorkloadAltsConfigPtrType) ToClusterWorkloadAltsConfigPtrOutputWithContext(ctx context.Context) ClusterWorkloadAltsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterWorkloadAltsConfigPtrOutput)
}

type ClusterWorkloadAltsConfigOutput struct{ *pulumi.OutputState }

func (ClusterWorkloadAltsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterWorkloadAltsConfig)(nil)).Elem()
}

func (o ClusterWorkloadAltsConfigOutput) ToClusterWorkloadAltsConfigOutput() ClusterWorkloadAltsConfigOutput {
	return o
}

func (o ClusterWorkloadAltsConfigOutput) ToClusterWorkloadAltsConfigOutputWithContext(ctx context.Context) ClusterWorkloadAltsConfigOutput {
	return o
}

func (o ClusterWorkloadAltsConfigOutput) ToClusterWorkloadAltsConfigPtrOutput() ClusterWorkloadAltsConfigPtrOutput {
	return o.ToClusterWorkloadAltsConfigPtrOutputWithContext(context.Background())
}

func (o ClusterWorkloadAltsConfigOutput) ToClusterWorkloadAltsConfigPtrOutputWithContext(ctx context.Context) ClusterWorkloadAltsConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterWorkloadAltsConfig) *ClusterWorkloadAltsConfig {
		return &v
	}).(ClusterWorkloadAltsConfigPtrOutput)
}

// Whether the alts handshaker should be enabled or not for direct-path. Requires Workload Identity (workloadPool) must be non-empty).
func (o ClusterWorkloadAltsConfigOutput) EnableAlts() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterWorkloadAltsConfig) bool { return v.EnableAlts }).(pulumi.BoolOutput)
}

type ClusterWorkloadAltsConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterWorkloadAltsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterWorkloadAltsConfig)(nil)).Elem()
}

func (o ClusterWorkloadAltsConfigPtrOutput) ToClusterWorkloadAltsConfigPtrOutput() ClusterWorkloadAltsConfigPtrOutput {
	return o
}

func (o ClusterWorkloadAltsConfigPtrOutput) ToClusterWorkloadAltsConfigPtrOutputWithContext(ctx context.Context) ClusterWorkloadAltsConfigPtrOutput {
	return o
}

func (o ClusterWorkloadAltsConfigPtrOutput) Elem() ClusterWorkloadAltsConfigOutput {
	return o.ApplyT(func(v *ClusterWorkloadAltsConfig) ClusterWorkloadAltsConfig {
		if v != nil {
			return *v
		}
		var ret ClusterWorkloadAltsConfig
		return ret
	}).(ClusterWorkloadAltsConfigOutput)
}

// Whether the alts handshaker should be enabled or not for direct-path. Requires Workload Identity (workloadPool) must be non-empty).
func (o ClusterWorkloadAltsConfigPtrOutput) EnableAlts() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterWorkloadAltsConfig) *bool {
		if v == nil {
			return nil
		}
		return &v.EnableAlts
	}).(pulumi.BoolPtrOutput)
}

type ClusterWorkloadIdentityConfig struct {
	// The workload pool to attach all Kubernetes service accounts to.
	WorkloadPool *string `pulumi:"workloadPool"`
}

// ClusterWorkloadIdentityConfigInput is an input type that accepts ClusterWorkloadIdentityConfigArgs and ClusterWorkloadIdentityConfigOutput values.
// You can construct a concrete instance of `ClusterWorkloadIdentityConfigInput` via:
//
//	ClusterWorkloadIdentityConfigArgs{...}
type ClusterWorkloadIdentityConfigInput interface {
	pulumi.Input

	ToClusterWorkloadIdentityConfigOutput() ClusterWorkloadIdentityConfigOutput
	ToClusterWorkloadIdentityConfigOutputWithContext(context.Context) ClusterWorkloadIdentityConfigOutput
}

type ClusterWorkloadIdentityConfigArgs struct {
	// The workload pool to attach all Kubernetes service accounts to.
	WorkloadPool pulumi.StringPtrInput `pulumi:"workloadPool"`
}

func (ClusterWorkloadIdentityConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterWorkloadIdentityConfig)(nil)).Elem()
}

func (i ClusterWorkloadIdentityConfigArgs) ToClusterWorkloadIdentityConfigOutput() ClusterWorkloadIdentityConfigOutput {
	return i.ToClusterWorkloadIdentityConfigOutputWithContext(context.Background())
}

func (i ClusterWorkloadIdentityConfigArgs) ToClusterWorkloadIdentityConfigOutputWithContext(ctx context.Context) ClusterWorkloadIdentityConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterWorkloadIdentityConfigOutput)
}

func (i ClusterWorkloadIdentityConfigArgs) ToClusterWorkloadIdentityConfigPtrOutput() ClusterWorkloadIdentityConfigPtrOutput {
	return i.ToClusterWorkloadIdentityConfigPtrOutputWithContext(context.Background())
}

func (i ClusterWorkloadIdentityConfigArgs) ToClusterWorkloadIdentityConfigPtrOutputWithContext(ctx context.Context) ClusterWorkloadIdentityConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterWorkloadIdentityConfigOutput).ToClusterWorkloadIdentityConfigPtrOutputWithContext(ctx)
}

// ClusterWorkloadIdentityConfigPtrInput is an input type that accepts ClusterWorkloadIdentityConfigArgs, ClusterWorkloadIdentityConfigPtr and ClusterWorkloadIdentityConfigPtrOutput values.
// You can construct a concrete instance of `ClusterWorkloadIdentityConfigPtrInput` via:
//
//	        ClusterWorkloadIdentityConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterWorkloadIdentityConfigPtrInput interface {
	pulumi.Input

	ToClusterWorkloadIdentityConfigPtrOutput() ClusterWorkloadIdentityConfigPtrOutput
	ToClusterWorkloadIdentityConfigPtrOutputWithContext(context.Context) ClusterWorkloadIdentityConfigPtrOutput
}

type clusterWorkloadIdentityConfigPtrType ClusterWorkloadIdentityConfigArgs

func ClusterWorkloadIdentityConfigPtr(v *ClusterWorkloadIdentityConfigArgs) ClusterWorkloadIdentityConfigPtrInput {
	return (*clusterWorkloadIdentityConfigPtrType)(v)
}

func (*clusterWorkloadIdentityConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterWorkloadIdentityConfig)(nil)).Elem()
}

func (i *clusterWorkloadIdentityConfigPtrType) ToClusterWorkloadIdentityConfigPtrOutput() ClusterWorkloadIdentityConfigPtrOutput {
	return i.ToClusterWorkloadIdentityConfigPtrOutputWithContext(context.Background())
}

func (i *clusterWorkloadIdentityConfigPtrType) ToClusterWorkloadIdentityConfigPtrOutputWithContext(ctx context.Context) ClusterWorkloadIdentityConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterWorkloadIdentityConfigPtrOutput)
}

type ClusterWorkloadIdentityConfigOutput struct{ *pulumi.OutputState }

func (ClusterWorkloadIdentityConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterWorkloadIdentityConfig)(nil)).Elem()
}

func (o ClusterWorkloadIdentityConfigOutput) ToClusterWorkloadIdentityConfigOutput() ClusterWorkloadIdentityConfigOutput {
	return o
}

func (o ClusterWorkloadIdentityConfigOutput) ToClusterWorkloadIdentityConfigOutputWithContext(ctx context.Context) ClusterWorkloadIdentityConfigOutput {
	return o
}

func (o ClusterWorkloadIdentityConfigOutput) ToClusterWorkloadIdentityConfigPtrOutput() ClusterWorkloadIdentityConfigPtrOutput {
	return o.ToClusterWorkloadIdentityConfigPtrOutputWithContext(context.Background())
}

func (o ClusterWorkloadIdentityConfigOutput) ToClusterWorkloadIdentityConfigPtrOutputWithContext(ctx context.Context) ClusterWorkloadIdentityConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterWorkloadIdentityConfig) *ClusterWorkloadIdentityConfig {
		return &v
	}).(ClusterWorkloadIdentityConfigPtrOutput)
}

// The workload pool to attach all Kubernetes service accounts to.
func (o ClusterWorkloadIdentityConfigOutput) WorkloadPool() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterWorkloadIdentityConfig) *string { return v.WorkloadPool }).(pulumi.StringPtrOutput)
}

type ClusterWorkloadIdentityConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterWorkloadIdentityConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterWorkloadIdentityConfig)(nil)).Elem()
}

func (o ClusterWorkloadIdentityConfigPtrOutput) ToClusterWorkloadIdentityConfigPtrOutput() ClusterWorkloadIdentityConfigPtrOutput {
	return o
}

func (o ClusterWorkloadIdentityConfigPtrOutput) ToClusterWorkloadIdentityConfigPtrOutputWithContext(ctx context.Context) ClusterWorkloadIdentityConfigPtrOutput {
	return o
}

func (o ClusterWorkloadIdentityConfigPtrOutput) Elem() ClusterWorkloadIdentityConfigOutput {
	return o.ApplyT(func(v *ClusterWorkloadIdentityConfig) ClusterWorkloadIdentityConfig {
		if v != nil {
			return *v
		}
		var ret ClusterWorkloadIdentityConfig
		return ret
	}).(ClusterWorkloadIdentityConfigOutput)
}

// The workload pool to attach all Kubernetes service accounts to.
func (o ClusterWorkloadIdentityConfigPtrOutput) WorkloadPool() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterWorkloadIdentityConfig) *string {
		if v == nil {
			return nil
		}
		return v.WorkloadPool
	}).(pulumi.StringPtrOutput)
}

type NodePoolAutoscaling struct {
	// Location policy specifies the algorithm used when
	// scaling-up the node pool. Location policy is supported only in 1.24.1+ clusters.
	// * "BALANCED" - Is a best effort policy that aims to balance the sizes of available zones.
	// * "ANY" - Instructs the cluster autoscaler to prioritize utilization of unused reservations,
	//   and reduce preemption risk for Spot VMs.
	LocationPolicy *string `pulumi:"locationPolicy"`
	// Maximum number of nodes per zone in the NodePool.
	// Must be >= min_node_count. Cannot be used with total limits.
	MaxNodeCount *int `pulumi:"maxNodeCount"`
	// Minimum number of nodes per zone in the NodePool.
	// Must be >=0 and <= `maxNodeCount`. Cannot be used with total limits.
	MinNodeCount *int `pulumi:"minNodeCount"`
	// Total maximum number of nodes in the NodePool.
	// Must be >= total_min_node_count. Cannot be used with per zone limits.
	// Total size limits are supported only in 1.24.1+ clusters.
	TotalMaxNodeCount *int `pulumi:"totalMaxNodeCount"`
	// Total minimum number of nodes in the NodePool.
	// Must be >=0 and <= `totalMaxNodeCount`. Cannot be used with per zone limits.
	// Total size limits are supported only in 1.24.1+ clusters.
	TotalMinNodeCount *int `pulumi:"totalMinNodeCount"`
}

// NodePoolAutoscalingInput is an input type that accepts NodePoolAutoscalingArgs and NodePoolAutoscalingOutput values.
// You can construct a concrete instance of `NodePoolAutoscalingInput` via:
//
//	NodePoolAutoscalingArgs{...}
type NodePoolAutoscalingInput interface {
	pulumi.Input

	ToNodePoolAutoscalingOutput() NodePoolAutoscalingOutput
	ToNodePoolAutoscalingOutputWithContext(context.Context) NodePoolAutoscalingOutput
}

type NodePoolAutoscalingArgs struct {
	// Location policy specifies the algorithm used when
	// scaling-up the node pool. Location policy is supported only in 1.24.1+ clusters.
	// * "BALANCED" - Is a best effort policy that aims to balance the sizes of available zones.
	// * "ANY" - Instructs the cluster autoscaler to prioritize utilization of unused reservations,
	//   and reduce preemption risk for Spot VMs.
	LocationPolicy pulumi.StringPtrInput `pulumi:"locationPolicy"`
	// Maximum number of nodes per zone in the NodePool.
	// Must be >= min_node_count. Cannot be used with total limits.
	MaxNodeCount pulumi.IntPtrInput `pulumi:"maxNodeCount"`
	// Minimum number of nodes per zone in the NodePool.
	// Must be >=0 and <= `maxNodeCount`. Cannot be used with total limits.
	MinNodeCount pulumi.IntPtrInput `pulumi:"minNodeCount"`
	// Total maximum number of nodes in the NodePool.
	// Must be >= total_min_node_count. Cannot be used with per zone limits.
	// Total size limits are supported only in 1.24.1+ clusters.
	TotalMaxNodeCount pulumi.IntPtrInput `pulumi:"totalMaxNodeCount"`
	// Total minimum number of nodes in the NodePool.
	// Must be >=0 and <= `totalMaxNodeCount`. Cannot be used with per zone limits.
	// Total size limits are supported only in 1.24.1+ clusters.
	TotalMinNodeCount pulumi.IntPtrInput `pulumi:"totalMinNodeCount"`
}

func (NodePoolAutoscalingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolAutoscaling)(nil)).Elem()
}

func (i NodePoolAutoscalingArgs) ToNodePoolAutoscalingOutput() NodePoolAutoscalingOutput {
	return i.ToNodePoolAutoscalingOutputWithContext(context.Background())
}

func (i NodePoolAutoscalingArgs) ToNodePoolAutoscalingOutputWithContext(ctx context.Context) NodePoolAutoscalingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolAutoscalingOutput)
}

func (i NodePoolAutoscalingArgs) ToNodePoolAutoscalingPtrOutput() NodePoolAutoscalingPtrOutput {
	return i.ToNodePoolAutoscalingPtrOutputWithContext(context.Background())
}

func (i NodePoolAutoscalingArgs) ToNodePoolAutoscalingPtrOutputWithContext(ctx context.Context) NodePoolAutoscalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolAutoscalingOutput).ToNodePoolAutoscalingPtrOutputWithContext(ctx)
}

// NodePoolAutoscalingPtrInput is an input type that accepts NodePoolAutoscalingArgs, NodePoolAutoscalingPtr and NodePoolAutoscalingPtrOutput values.
// You can construct a concrete instance of `NodePoolAutoscalingPtrInput` via:
//
//	        NodePoolAutoscalingArgs{...}
//
//	or:
//
//	        nil
type NodePoolAutoscalingPtrInput interface {
	pulumi.Input

	ToNodePoolAutoscalingPtrOutput() NodePoolAutoscalingPtrOutput
	ToNodePoolAutoscalingPtrOutputWithContext(context.Context) NodePoolAutoscalingPtrOutput
}

type nodePoolAutoscalingPtrType NodePoolAutoscalingArgs

func NodePoolAutoscalingPtr(v *NodePoolAutoscalingArgs) NodePoolAutoscalingPtrInput {
	return (*nodePoolAutoscalingPtrType)(v)
}

func (*nodePoolAutoscalingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolAutoscaling)(nil)).Elem()
}

func (i *nodePoolAutoscalingPtrType) ToNodePoolAutoscalingPtrOutput() NodePoolAutoscalingPtrOutput {
	return i.ToNodePoolAutoscalingPtrOutputWithContext(context.Background())
}

func (i *nodePoolAutoscalingPtrType) ToNodePoolAutoscalingPtrOutputWithContext(ctx context.Context) NodePoolAutoscalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolAutoscalingPtrOutput)
}

type NodePoolAutoscalingOutput struct{ *pulumi.OutputState }

func (NodePoolAutoscalingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolAutoscaling)(nil)).Elem()
}

func (o NodePoolAutoscalingOutput) ToNodePoolAutoscalingOutput() NodePoolAutoscalingOutput {
	return o
}

func (o NodePoolAutoscalingOutput) ToNodePoolAutoscalingOutputWithContext(ctx context.Context) NodePoolAutoscalingOutput {
	return o
}

func (o NodePoolAutoscalingOutput) ToNodePoolAutoscalingPtrOutput() NodePoolAutoscalingPtrOutput {
	return o.ToNodePoolAutoscalingPtrOutputWithContext(context.Background())
}

func (o NodePoolAutoscalingOutput) ToNodePoolAutoscalingPtrOutputWithContext(ctx context.Context) NodePoolAutoscalingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NodePoolAutoscaling) *NodePoolAutoscaling {
		return &v
	}).(NodePoolAutoscalingPtrOutput)
}

// Location policy specifies the algorithm used when
// scaling-up the node pool. Location policy is supported only in 1.24.1+ clusters.
//   - "BALANCED" - Is a best effort policy that aims to balance the sizes of available zones.
//   - "ANY" - Instructs the cluster autoscaler to prioritize utilization of unused reservations,
//     and reduce preemption risk for Spot VMs.
func (o NodePoolAutoscalingOutput) LocationPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodePoolAutoscaling) *string { return v.LocationPolicy }).(pulumi.StringPtrOutput)
}

// Maximum number of nodes per zone in the NodePool.
// Must be >= min_node_count. Cannot be used with total limits.
func (o NodePoolAutoscalingOutput) MaxNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NodePoolAutoscaling) *int { return v.MaxNodeCount }).(pulumi.IntPtrOutput)
}

// Minimum number of nodes per zone in the NodePool.
// Must be >=0 and <= `maxNodeCount`. Cannot be used with total limits.
func (o NodePoolAutoscalingOutput) MinNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NodePoolAutoscaling) *int { return v.MinNodeCount }).(pulumi.IntPtrOutput)
}

// Total maximum number of nodes in the NodePool.
// Must be >= total_min_node_count. Cannot be used with per zone limits.
// Total size limits are supported only in 1.24.1+ clusters.
func (o NodePoolAutoscalingOutput) TotalMaxNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NodePoolAutoscaling) *int { return v.TotalMaxNodeCount }).(pulumi.IntPtrOutput)
}

// Total minimum number of nodes in the NodePool.
// Must be >=0 and <= `totalMaxNodeCount`. Cannot be used with per zone limits.
// Total size limits are supported only in 1.24.1+ clusters.
func (o NodePoolAutoscalingOutput) TotalMinNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NodePoolAutoscaling) *int { return v.TotalMinNodeCount }).(pulumi.IntPtrOutput)
}

type NodePoolAutoscalingPtrOutput struct{ *pulumi.OutputState }

func (NodePoolAutoscalingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolAutoscaling)(nil)).Elem()
}

func (o NodePoolAutoscalingPtrOutput) ToNodePoolAutoscalingPtrOutput() NodePoolAutoscalingPtrOutput {
	return o
}

func (o NodePoolAutoscalingPtrOutput) ToNodePoolAutoscalingPtrOutputWithContext(ctx context.Context) NodePoolAutoscalingPtrOutput {
	return o
}

func (o NodePoolAutoscalingPtrOutput) Elem() NodePoolAutoscalingOutput {
	return o.ApplyT(func(v *NodePoolAutoscaling) NodePoolAutoscaling {
		if v != nil {
			return *v
		}
		var ret NodePoolAutoscaling
		return ret
	}).(NodePoolAutoscalingOutput)
}

// Location policy specifies the algorithm used when
// scaling-up the node pool. Location policy is supported only in 1.24.1+ clusters.
//   - "BALANCED" - Is a best effort policy that aims to balance the sizes of available zones.
//   - "ANY" - Instructs the cluster autoscaler to prioritize utilization of unused reservations,
//     and reduce preemption risk for Spot VMs.
func (o NodePoolAutoscalingPtrOutput) LocationPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodePoolAutoscaling) *string {
		if v == nil {
			return nil
		}
		return v.LocationPolicy
	}).(pulumi.StringPtrOutput)
}

// Maximum number of nodes per zone in the NodePool.
// Must be >= min_node_count. Cannot be used with total limits.
func (o NodePoolAutoscalingPtrOutput) MaxNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodePoolAutoscaling) *int {
		if v == nil {
			return nil
		}
		return v.MaxNodeCount
	}).(pulumi.IntPtrOutput)
}

// Minimum number of nodes per zone in the NodePool.
// Must be >=0 and <= `maxNodeCount`. Cannot be used with total limits.
func (o NodePoolAutoscalingPtrOutput) MinNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodePoolAutoscaling) *int {
		if v == nil {
			return nil
		}
		return v.MinNodeCount
	}).(pulumi.IntPtrOutput)
}

// Total maximum number of nodes in the NodePool.
// Must be >= total_min_node_count. Cannot be used with per zone limits.
// Total size limits are supported only in 1.24.1+ clusters.
func (o NodePoolAutoscalingPtrOutput) TotalMaxNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodePoolAutoscaling) *int {
		if v == nil {
			return nil
		}
		return v.TotalMaxNodeCount
	}).(pulumi.IntPtrOutput)
}

// Total minimum number of nodes in the NodePool.
// Must be >=0 and <= `totalMaxNodeCount`. Cannot be used with per zone limits.
// Total size limits are supported only in 1.24.1+ clusters.
func (o NodePoolAutoscalingPtrOutput) TotalMinNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodePoolAutoscaling) *int {
		if v == nil {
			return nil
		}
		return v.TotalMinNodeCount
	}).(pulumi.IntPtrOutput)
}

type NodePoolManagement struct {
	// Whether the nodes will be automatically repaired. Enabled by default.
	AutoRepair *bool `pulumi:"autoRepair"`
	// Whether the nodes will be automatically upgraded. Enabled by default.
	AutoUpgrade *bool `pulumi:"autoUpgrade"`
}

// NodePoolManagementInput is an input type that accepts NodePoolManagementArgs and NodePoolManagementOutput values.
// You can construct a concrete instance of `NodePoolManagementInput` via:
//
//	NodePoolManagementArgs{...}
type NodePoolManagementInput interface {
	pulumi.Input

	ToNodePoolManagementOutput() NodePoolManagementOutput
	ToNodePoolManagementOutputWithContext(context.Context) NodePoolManagementOutput
}

type NodePoolManagementArgs struct {
	// Whether the nodes will be automatically repaired. Enabled by default.
	AutoRepair pulumi.BoolPtrInput `pulumi:"autoRepair"`
	// Whether the nodes will be automatically upgraded. Enabled by default.
	AutoUpgrade pulumi.BoolPtrInput `pulumi:"autoUpgrade"`
}

func (NodePoolManagementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolManagement)(nil)).Elem()
}

func (i NodePoolManagementArgs) ToNodePoolManagementOutput() NodePoolManagementOutput {
	return i.ToNodePoolManagementOutputWithContext(context.Background())
}

func (i NodePoolManagementArgs) ToNodePoolManagementOutputWithContext(ctx context.Context) NodePoolManagementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolManagementOutput)
}

func (i NodePoolManagementArgs) ToNodePoolManagementPtrOutput() NodePoolManagementPtrOutput {
	return i.ToNodePoolManagementPtrOutputWithContext(context.Background())
}

func (i NodePoolManagementArgs) ToNodePoolManagementPtrOutputWithContext(ctx context.Context) NodePoolManagementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolManagementOutput).ToNodePoolManagementPtrOutputWithContext(ctx)
}

// NodePoolManagementPtrInput is an input type that accepts NodePoolManagementArgs, NodePoolManagementPtr and NodePoolManagementPtrOutput values.
// You can construct a concrete instance of `NodePoolManagementPtrInput` via:
//
//	        NodePoolManagementArgs{...}
//
//	or:
//
//	        nil
type NodePoolManagementPtrInput interface {
	pulumi.Input

	ToNodePoolManagementPtrOutput() NodePoolManagementPtrOutput
	ToNodePoolManagementPtrOutputWithContext(context.Context) NodePoolManagementPtrOutput
}

type nodePoolManagementPtrType NodePoolManagementArgs

func NodePoolManagementPtr(v *NodePoolManagementArgs) NodePoolManagementPtrInput {
	return (*nodePoolManagementPtrType)(v)
}

func (*nodePoolManagementPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolManagement)(nil)).Elem()
}

func (i *nodePoolManagementPtrType) ToNodePoolManagementPtrOutput() NodePoolManagementPtrOutput {
	return i.ToNodePoolManagementPtrOutputWithContext(context.Background())
}

func (i *nodePoolManagementPtrType) ToNodePoolManagementPtrOutputWithContext(ctx context.Context) NodePoolManagementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolManagementPtrOutput)
}

type NodePoolManagementOutput struct{ *pulumi.OutputState }

func (NodePoolManagementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolManagement)(nil)).Elem()
}

func (o NodePoolManagementOutput) ToNodePoolManagementOutput() NodePoolManagementOutput {
	return o
}

func (o NodePoolManagementOutput) ToNodePoolManagementOutputWithContext(ctx context.Context) NodePoolManagementOutput {
	return o
}

func (o NodePoolManagementOutput) ToNodePoolManagementPtrOutput() NodePoolManagementPtrOutput {
	return o.ToNodePoolManagementPtrOutputWithContext(context.Background())
}

func (o NodePoolManagementOutput) ToNodePoolManagementPtrOutputWithContext(ctx context.Context) NodePoolManagementPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NodePoolManagement) *NodePoolManagement {
		return &v
	}).(NodePoolManagementPtrOutput)
}

// Whether the nodes will be automatically repaired. Enabled by default.
func (o NodePoolManagementOutput) AutoRepair() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NodePoolManagement) *bool { return v.AutoRepair }).(pulumi.BoolPtrOutput)
}

// Whether the nodes will be automatically upgraded. Enabled by default.
func (o NodePoolManagementOutput) AutoUpgrade() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NodePoolManagement) *bool { return v.AutoUpgrade }).(pulumi.BoolPtrOutput)
}

type NodePoolManagementPtrOutput struct{ *pulumi.OutputState }

func (NodePoolManagementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolManagement)(nil)).Elem()
}

func (o NodePoolManagementPtrOutput) ToNodePoolManagementPtrOutput() NodePoolManagementPtrOutput {
	return o
}

func (o NodePoolManagementPtrOutput) ToNodePoolManagementPtrOutputWithContext(ctx context.Context) NodePoolManagementPtrOutput {
	return o
}

func (o NodePoolManagementPtrOutput) Elem() NodePoolManagementOutput {
	return o.ApplyT(func(v *NodePoolManagement) NodePoolManagement {
		if v != nil {
			return *v
		}
		var ret NodePoolManagement
		return ret
	}).(NodePoolManagementOutput)
}

// Whether the nodes will be automatically repaired. Enabled by default.
func (o NodePoolManagementPtrOutput) AutoRepair() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NodePoolManagement) *bool {
		if v == nil {
			return nil
		}
		return v.AutoRepair
	}).(pulumi.BoolPtrOutput)
}

// Whether the nodes will be automatically upgraded. Enabled by default.
func (o NodePoolManagementPtrOutput) AutoUpgrade() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NodePoolManagement) *bool {
		if v == nil {
			return nil
		}
		return v.AutoUpgrade
	}).(pulumi.BoolPtrOutput)
}

type NodePoolNetworkConfig struct {
	// We specify the additional node networks for this node pool using this list. Each node network corresponds to an additional interface.
	// Structure is documented below
	AdditionalNodeNetworkConfigs []NodePoolNetworkConfigAdditionalNodeNetworkConfig `pulumi:"additionalNodeNetworkConfigs"`
	// We specify the additional pod networks for this node pool using this list. Each pod network corresponds to an additional alias IP range for the node.
	// Structure is documented below
	AdditionalPodNetworkConfigs []NodePoolNetworkConfigAdditionalPodNetworkConfig `pulumi:"additionalPodNetworkConfigs"`
	// Whether to create a new range for pod IPs in this node pool. Defaults are provided for `podRange` and `podIpv4CidrBlock` if they are not specified.
	CreatePodRange *bool `pulumi:"createPodRange"`
	// Whether nodes have internal IP addresses only.
	EnablePrivateNodes *bool `pulumi:"enablePrivateNodes"`
	// Network bandwidth tier configuration.
	NetworkPerformanceConfig *NodePoolNetworkConfigNetworkPerformanceConfig `pulumi:"networkPerformanceConfig"`
	// Configuration for node-pool level pod cidr overprovision. If not set, the cluster level setting will be inherited
	PodCidrOverprovisionConfig *NodePoolNetworkConfigPodCidrOverprovisionConfig `pulumi:"podCidrOverprovisionConfig"`
	// The IP address range for pod IPs in this node pool. Only applicable if createPodRange is true. Set to blank to have a range chosen with the default size. Set to /netmask (e.g. /14) to have a range chosen with a specific netmask. Set to a CIDR notation (e.g. 10.96.0.0/14) to pick a specific range to use.
	PodIpv4CidrBlock *string `pulumi:"podIpv4CidrBlock"`
	// The ID of the secondary range for pod IPs. If `createPodRange` is true, this ID is used for the new range. If `createPodRange` is false, uses an existing secondary range with this ID.
	PodRange *string `pulumi:"podRange"`
}

// NodePoolNetworkConfigInput is an input type that accepts NodePoolNetworkConfigArgs and NodePoolNetworkConfigOutput values.
// You can construct a concrete instance of `NodePoolNetworkConfigInput` via:
//
//	NodePoolNetworkConfigArgs{...}
type NodePoolNetworkConfigInput interface {
	pulumi.Input

	ToNodePoolNetworkConfigOutput() NodePoolNetworkConfigOutput
	ToNodePoolNetworkConfigOutputWithContext(context.Context) NodePoolNetworkConfigOutput
}

type NodePoolNetworkConfigArgs struct {
	// We specify the additional node networks for this node pool using this list. Each node network corresponds to an additional interface.
	// Structure is documented below
	AdditionalNodeNetworkConfigs NodePoolNetworkConfigAdditionalNodeNetworkConfigArrayInput `pulumi:"additionalNodeNetworkConfigs"`
	// We specify the additional pod networks for this node pool using this list. Each pod network corresponds to an additional alias IP range for the node.
	// Structure is documented below
	AdditionalPodNetworkConfigs NodePoolNetworkConfigAdditionalPodNetworkConfigArrayInput `pulumi:"additionalPodNetworkConfigs"`
	// Whether to create a new range for pod IPs in this node pool. Defaults are provided for `podRange` and `podIpv4CidrBlock` if they are not specified.
	CreatePodRange pulumi.BoolPtrInput `pulumi:"createPodRange"`
	// Whether nodes have internal IP addresses only.
	EnablePrivateNodes pulumi.BoolPtrInput `pulumi:"enablePrivateNodes"`
	// Network bandwidth tier configuration.
	NetworkPerformanceConfig NodePoolNetworkConfigNetworkPerformanceConfigPtrInput `pulumi:"networkPerformanceConfig"`
	// Configuration for node-pool level pod cidr overprovision. If not set, the cluster level setting will be inherited
	PodCidrOverprovisionConfig NodePoolNetworkConfigPodCidrOverprovisionConfigPtrInput `pulumi:"podCidrOverprovisionConfig"`
	// The IP address range for pod IPs in this node pool. Only applicable if createPodRange is true. Set to blank to have a range chosen with the default size. Set to /netmask (e.g. /14) to have a range chosen with a specific netmask. Set to a CIDR notation (e.g. 10.96.0.0/14) to pick a specific range to use.
	PodIpv4CidrBlock pulumi.StringPtrInput `pulumi:"podIpv4CidrBlock"`
	// The ID of the secondary range for pod IPs. If `createPodRange` is true, this ID is used for the new range. If `createPodRange` is false, uses an existing secondary range with this ID.
	PodRange pulumi.StringPtrInput `pulumi:"podRange"`
}

func (NodePoolNetworkConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNetworkConfig)(nil)).Elem()
}

func (i NodePoolNetworkConfigArgs) ToNodePoolNetworkConfigOutput() NodePoolNetworkConfigOutput {
	return i.ToNodePoolNetworkConfigOutputWithContext(context.Background())
}

func (i NodePoolNetworkConfigArgs) ToNodePoolNetworkConfigOutputWithContext(ctx context.Context) NodePoolNetworkConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNetworkConfigOutput)
}

func (i NodePoolNetworkConfigArgs) ToNodePoolNetworkConfigPtrOutput() NodePoolNetworkConfigPtrOutput {
	return i.ToNodePoolNetworkConfigPtrOutputWithContext(context.Background())
}

func (i NodePoolNetworkConfigArgs) ToNodePoolNetworkConfigPtrOutputWithContext(ctx context.Context) NodePoolNetworkConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNetworkConfigOutput).ToNodePoolNetworkConfigPtrOutputWithContext(ctx)
}

// NodePoolNetworkConfigPtrInput is an input type that accepts NodePoolNetworkConfigArgs, NodePoolNetworkConfigPtr and NodePoolNetworkConfigPtrOutput values.
// You can construct a concrete instance of `NodePoolNetworkConfigPtrInput` via:
//
//	        NodePoolNetworkConfigArgs{...}
//
//	or:
//
//	        nil
type NodePoolNetworkConfigPtrInput interface {
	pulumi.Input

	ToNodePoolNetworkConfigPtrOutput() NodePoolNetworkConfigPtrOutput
	ToNodePoolNetworkConfigPtrOutputWithContext(context.Context) NodePoolNetworkConfigPtrOutput
}

type nodePoolNetworkConfigPtrType NodePoolNetworkConfigArgs

func NodePoolNetworkConfigPtr(v *NodePoolNetworkConfigArgs) NodePoolNetworkConfigPtrInput {
	return (*nodePoolNetworkConfigPtrType)(v)
}

func (*nodePoolNetworkConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolNetworkConfig)(nil)).Elem()
}

func (i *nodePoolNetworkConfigPtrType) ToNodePoolNetworkConfigPtrOutput() NodePoolNetworkConfigPtrOutput {
	return i.ToNodePoolNetworkConfigPtrOutputWithContext(context.Background())
}

func (i *nodePoolNetworkConfigPtrType) ToNodePoolNetworkConfigPtrOutputWithContext(ctx context.Context) NodePoolNetworkConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNetworkConfigPtrOutput)
}

type NodePoolNetworkConfigOutput struct{ *pulumi.OutputState }

func (NodePoolNetworkConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNetworkConfig)(nil)).Elem()
}

func (o NodePoolNetworkConfigOutput) ToNodePoolNetworkConfigOutput() NodePoolNetworkConfigOutput {
	return o
}

func (o NodePoolNetworkConfigOutput) ToNodePoolNetworkConfigOutputWithContext(ctx context.Context) NodePoolNetworkConfigOutput {
	return o
}

func (o NodePoolNetworkConfigOutput) ToNodePoolNetworkConfigPtrOutput() NodePoolNetworkConfigPtrOutput {
	return o.ToNodePoolNetworkConfigPtrOutputWithContext(context.Background())
}

func (o NodePoolNetworkConfigOutput) ToNodePoolNetworkConfigPtrOutputWithContext(ctx context.Context) NodePoolNetworkConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NodePoolNetworkConfig) *NodePoolNetworkConfig {
		return &v
	}).(NodePoolNetworkConfigPtrOutput)
}

// We specify the additional node networks for this node pool using this list. Each node network corresponds to an additional interface.
// Structure is documented below
func (o NodePoolNetworkConfigOutput) AdditionalNodeNetworkConfigs() NodePoolNetworkConfigAdditionalNodeNetworkConfigArrayOutput {
	return o.ApplyT(func(v NodePoolNetworkConfig) []NodePoolNetworkConfigAdditionalNodeNetworkConfig {
		return v.AdditionalNodeNetworkConfigs
	}).(NodePoolNetworkConfigAdditionalNodeNetworkConfigArrayOutput)
}

// We specify the additional pod networks for this node pool using this list. Each pod network corresponds to an additional alias IP range for the node.
// Structure is documented below
func (o NodePoolNetworkConfigOutput) AdditionalPodNetworkConfigs() NodePoolNetworkConfigAdditionalPodNetworkConfigArrayOutput {
	return o.ApplyT(func(v NodePoolNetworkConfig) []NodePoolNetworkConfigAdditionalPodNetworkConfig {
		return v.AdditionalPodNetworkConfigs
	}).(NodePoolNetworkConfigAdditionalPodNetworkConfigArrayOutput)
}

// Whether to create a new range for pod IPs in this node pool. Defaults are provided for `podRange` and `podIpv4CidrBlock` if they are not specified.
func (o NodePoolNetworkConfigOutput) CreatePodRange() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NodePoolNetworkConfig) *bool { return v.CreatePodRange }).(pulumi.BoolPtrOutput)
}

// Whether nodes have internal IP addresses only.
func (o NodePoolNetworkConfigOutput) EnablePrivateNodes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NodePoolNetworkConfig) *bool { return v.EnablePrivateNodes }).(pulumi.BoolPtrOutput)
}

// Network bandwidth tier configuration.
func (o NodePoolNetworkConfigOutput) NetworkPerformanceConfig() NodePoolNetworkConfigNetworkPerformanceConfigPtrOutput {
	return o.ApplyT(func(v NodePoolNetworkConfig) *NodePoolNetworkConfigNetworkPerformanceConfig {
		return v.NetworkPerformanceConfig
	}).(NodePoolNetworkConfigNetworkPerformanceConfigPtrOutput)
}

// Configuration for node-pool level pod cidr overprovision. If not set, the cluster level setting will be inherited
func (o NodePoolNetworkConfigOutput) PodCidrOverprovisionConfig() NodePoolNetworkConfigPodCidrOverprovisionConfigPtrOutput {
	return o.ApplyT(func(v NodePoolNetworkConfig) *NodePoolNetworkConfigPodCidrOverprovisionConfig {
		return v.PodCidrOverprovisionConfig
	}).(NodePoolNetworkConfigPodCidrOverprovisionConfigPtrOutput)
}

// The IP address range for pod IPs in this node pool. Only applicable if createPodRange is true. Set to blank to have a range chosen with the default size. Set to /netmask (e.g. /14) to have a range chosen with a specific netmask. Set to a CIDR notation (e.g. 10.96.0.0/14) to pick a specific range to use.
func (o NodePoolNetworkConfigOutput) PodIpv4CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodePoolNetworkConfig) *string { return v.PodIpv4CidrBlock }).(pulumi.StringPtrOutput)
}

// The ID of the secondary range for pod IPs. If `createPodRange` is true, this ID is used for the new range. If `createPodRange` is false, uses an existing secondary range with this ID.
func (o NodePoolNetworkConfigOutput) PodRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodePoolNetworkConfig) *string { return v.PodRange }).(pulumi.StringPtrOutput)
}

type NodePoolNetworkConfigPtrOutput struct{ *pulumi.OutputState }

func (NodePoolNetworkConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolNetworkConfig)(nil)).Elem()
}

func (o NodePoolNetworkConfigPtrOutput) ToNodePoolNetworkConfigPtrOutput() NodePoolNetworkConfigPtrOutput {
	return o
}

func (o NodePoolNetworkConfigPtrOutput) ToNodePoolNetworkConfigPtrOutputWithContext(ctx context.Context) NodePoolNetworkConfigPtrOutput {
	return o
}

func (o NodePoolNetworkConfigPtrOutput) Elem() NodePoolNetworkConfigOutput {
	return o.ApplyT(func(v *NodePoolNetworkConfig) NodePoolNetworkConfig {
		if v != nil {
			return *v
		}
		var ret NodePoolNetworkConfig
		return ret
	}).(NodePoolNetworkConfigOutput)
}

// We specify the additional node networks for this node pool using this list. Each node network corresponds to an additional interface.
// Structure is documented below
func (o NodePoolNetworkConfigPtrOutput) AdditionalNodeNetworkConfigs() NodePoolNetworkConfigAdditionalNodeNetworkConfigArrayOutput {
	return o.ApplyT(func(v *NodePoolNetworkConfig) []NodePoolNetworkConfigAdditionalNodeNetworkConfig {
		if v == nil {
			return nil
		}
		return v.AdditionalNodeNetworkConfigs
	}).(NodePoolNetworkConfigAdditionalNodeNetworkConfigArrayOutput)
}

// We specify the additional pod networks for this node pool using this list. Each pod network corresponds to an additional alias IP range for the node.
// Structure is documented below
func (o NodePoolNetworkConfigPtrOutput) AdditionalPodNetworkConfigs() NodePoolNetworkConfigAdditionalPodNetworkConfigArrayOutput {
	return o.ApplyT(func(v *NodePoolNetworkConfig) []NodePoolNetworkConfigAdditionalPodNetworkConfig {
		if v == nil {
			return nil
		}
		return v.AdditionalPodNetworkConfigs
	}).(NodePoolNetworkConfigAdditionalPodNetworkConfigArrayOutput)
}

// Whether to create a new range for pod IPs in this node pool. Defaults are provided for `podRange` and `podIpv4CidrBlock` if they are not specified.
func (o NodePoolNetworkConfigPtrOutput) CreatePodRange() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NodePoolNetworkConfig) *bool {
		if v == nil {
			return nil
		}
		return v.CreatePodRange
	}).(pulumi.BoolPtrOutput)
}

// Whether nodes have internal IP addresses only.
func (o NodePoolNetworkConfigPtrOutput) EnablePrivateNodes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NodePoolNetworkConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EnablePrivateNodes
	}).(pulumi.BoolPtrOutput)
}

// Network bandwidth tier configuration.
func (o NodePoolNetworkConfigPtrOutput) NetworkPerformanceConfig() NodePoolNetworkConfigNetworkPerformanceConfigPtrOutput {
	return o.ApplyT(func(v *NodePoolNetworkConfig) *NodePoolNetworkConfigNetworkPerformanceConfig {
		if v == nil {
			return nil
		}
		return v.NetworkPerformanceConfig
	}).(NodePoolNetworkConfigNetworkPerformanceConfigPtrOutput)
}

// Configuration for node-pool level pod cidr overprovision. If not set, the cluster level setting will be inherited
func (o NodePoolNetworkConfigPtrOutput) PodCidrOverprovisionConfig() NodePoolNetworkConfigPodCidrOverprovisionConfigPtrOutput {
	return o.ApplyT(func(v *NodePoolNetworkConfig) *NodePoolNetworkConfigPodCidrOverprovisionConfig {
		if v == nil {
			return nil
		}
		return v.PodCidrOverprovisionConfig
	}).(NodePoolNetworkConfigPodCidrOverprovisionConfigPtrOutput)
}

// The IP address range for pod IPs in this node pool. Only applicable if createPodRange is true. Set to blank to have a range chosen with the default size. Set to /netmask (e.g. /14) to have a range chosen with a specific netmask. Set to a CIDR notation (e.g. 10.96.0.0/14) to pick a specific range to use.
func (o NodePoolNetworkConfigPtrOutput) PodIpv4CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodePoolNetworkConfig) *string {
		if v == nil {
			return nil
		}
		return v.PodIpv4CidrBlock
	}).(pulumi.StringPtrOutput)
}

// The ID of the secondary range for pod IPs. If `createPodRange` is true, this ID is used for the new range. If `createPodRange` is false, uses an existing secondary range with this ID.
func (o NodePoolNetworkConfigPtrOutput) PodRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodePoolNetworkConfig) *string {
		if v == nil {
			return nil
		}
		return v.PodRange
	}).(pulumi.StringPtrOutput)
}

type NodePoolNetworkConfigAdditionalNodeNetworkConfig struct {
	// Name of the VPC where the additional interface belongs.
	Network *string `pulumi:"network"`
	// Name of the subnetwork where the additional interface belongs.
	Subnetwork *string `pulumi:"subnetwork"`
}

// NodePoolNetworkConfigAdditionalNodeNetworkConfigInput is an input type that accepts NodePoolNetworkConfigAdditionalNodeNetworkConfigArgs and NodePoolNetworkConfigAdditionalNodeNetworkConfigOutput values.
// You can construct a concrete instance of `NodePoolNetworkConfigAdditionalNodeNetworkConfigInput` via:
//
//	NodePoolNetworkConfigAdditionalNodeNetworkConfigArgs{...}
type NodePoolNetworkConfigAdditionalNodeNetworkConfigInput interface {
	pulumi.Input

	ToNodePoolNetworkConfigAdditionalNodeNetworkConfigOutput() NodePoolNetworkConfigAdditionalNodeNetworkConfigOutput
	ToNodePoolNetworkConfigAdditionalNodeNetworkConfigOutputWithContext(context.Context) NodePoolNetworkConfigAdditionalNodeNetworkConfigOutput
}

type NodePoolNetworkConfigAdditionalNodeNetworkConfigArgs struct {
	// Name of the VPC where the additional interface belongs.
	Network pulumi.StringPtrInput `pulumi:"network"`
	// Name of the subnetwork where the additional interface belongs.
	Subnetwork pulumi.StringPtrInput `pulumi:"subnetwork"`
}

func (NodePoolNetworkConfigAdditionalNodeNetworkConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNetworkConfigAdditionalNodeNetworkConfig)(nil)).Elem()
}

func (i NodePoolNetworkConfigAdditionalNodeNetworkConfigArgs) ToNodePoolNetworkConfigAdditionalNodeNetworkConfigOutput() NodePoolNetworkConfigAdditionalNodeNetworkConfigOutput {
	return i.ToNodePoolNetworkConfigAdditionalNodeNetworkConfigOutputWithContext(context.Background())
}

func (i NodePoolNetworkConfigAdditionalNodeNetworkConfigArgs) ToNodePoolNetworkConfigAdditionalNodeNetworkConfigOutputWithContext(ctx context.Context) NodePoolNetworkConfigAdditionalNodeNetworkConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNetworkConfigAdditionalNodeNetworkConfigOutput)
}

// NodePoolNetworkConfigAdditionalNodeNetworkConfigArrayInput is an input type that accepts NodePoolNetworkConfigAdditionalNodeNetworkConfigArray and NodePoolNetworkConfigAdditionalNodeNetworkConfigArrayOutput values.
// You can construct a concrete instance of `NodePoolNetworkConfigAdditionalNodeNetworkConfigArrayInput` via:
//
//	NodePoolNetworkConfigAdditionalNodeNetworkConfigArray{ NodePoolNetworkConfigAdditionalNodeNetworkConfigArgs{...} }
type NodePoolNetworkConfigAdditionalNodeNetworkConfigArrayInput interface {
	pulumi.Input

	ToNodePoolNetworkConfigAdditionalNodeNetworkConfigArrayOutput() NodePoolNetworkConfigAdditionalNodeNetworkConfigArrayOutput
	ToNodePoolNetworkConfigAdditionalNodeNetworkConfigArrayOutputWithContext(context.Context) NodePoolNetworkConfigAdditionalNodeNetworkConfigArrayOutput
}

type NodePoolNetworkConfigAdditionalNodeNetworkConfigArray []NodePoolNetworkConfigAdditionalNodeNetworkConfigInput

func (NodePoolNetworkConfigAdditionalNodeNetworkConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodePoolNetworkConfigAdditionalNodeNetworkConfig)(nil)).Elem()
}

func (i NodePoolNetworkConfigAdditionalNodeNetworkConfigArray) ToNodePoolNetworkConfigAdditionalNodeNetworkConfigArrayOutput() NodePoolNetworkConfigAdditionalNodeNetworkConfigArrayOutput {
	return i.ToNodePoolNetworkConfigAdditionalNodeNetworkConfigArrayOutputWithContext(context.Background())
}

func (i NodePoolNetworkConfigAdditionalNodeNetworkConfigArray) ToNodePoolNetworkConfigAdditionalNodeNetworkConfigArrayOutputWithContext(ctx context.Context) NodePoolNetworkConfigAdditionalNodeNetworkConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNetworkConfigAdditionalNodeNetworkConfigArrayOutput)
}

type NodePoolNetworkConfigAdditionalNodeNetworkConfigOutput struct{ *pulumi.OutputState }

func (NodePoolNetworkConfigAdditionalNodeNetworkConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNetworkConfigAdditionalNodeNetworkConfig)(nil)).Elem()
}

func (o NodePoolNetworkConfigAdditionalNodeNetworkConfigOutput) ToNodePoolNetworkConfigAdditionalNodeNetworkConfigOutput() NodePoolNetworkConfigAdditionalNodeNetworkConfigOutput {
	return o
}

func (o NodePoolNetworkConfigAdditionalNodeNetworkConfigOutput) ToNodePoolNetworkConfigAdditionalNodeNetworkConfigOutputWithContext(ctx context.Context) NodePoolNetworkConfigAdditionalNodeNetworkConfigOutput {
	return o
}

// Name of the VPC where the additional interface belongs.
func (o NodePoolNetworkConfigAdditionalNodeNetworkConfigOutput) Network() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodePoolNetworkConfigAdditionalNodeNetworkConfig) *string { return v.Network }).(pulumi.StringPtrOutput)
}

// Name of the subnetwork where the additional interface belongs.
func (o NodePoolNetworkConfigAdditionalNodeNetworkConfigOutput) Subnetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodePoolNetworkConfigAdditionalNodeNetworkConfig) *string { return v.Subnetwork }).(pulumi.StringPtrOutput)
}

type NodePoolNetworkConfigAdditionalNodeNetworkConfigArrayOutput struct{ *pulumi.OutputState }

func (NodePoolNetworkConfigAdditionalNodeNetworkConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodePoolNetworkConfigAdditionalNodeNetworkConfig)(nil)).Elem()
}

func (o NodePoolNetworkConfigAdditionalNodeNetworkConfigArrayOutput) ToNodePoolNetworkConfigAdditionalNodeNetworkConfigArrayOutput() NodePoolNetworkConfigAdditionalNodeNetworkConfigArrayOutput {
	return o
}

func (o NodePoolNetworkConfigAdditionalNodeNetworkConfigArrayOutput) ToNodePoolNetworkConfigAdditionalNodeNetworkConfigArrayOutputWithContext(ctx context.Context) NodePoolNetworkConfigAdditionalNodeNetworkConfigArrayOutput {
	return o
}

func (o NodePoolNetworkConfigAdditionalNodeNetworkConfigArrayOutput) Index(i pulumi.IntInput) NodePoolNetworkConfigAdditionalNodeNetworkConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NodePoolNetworkConfigAdditionalNodeNetworkConfig {
		return vs[0].([]NodePoolNetworkConfigAdditionalNodeNetworkConfig)[vs[1].(int)]
	}).(NodePoolNetworkConfigAdditionalNodeNetworkConfigOutput)
}

type NodePoolNetworkConfigAdditionalPodNetworkConfig struct {
	// The maximum number of pods per node which use this pod network.
	MaxPodsPerNode *int `pulumi:"maxPodsPerNode"`
	// The name of the secondary range on the subnet which provides IP address for this pod range.
	SecondaryPodRange *string `pulumi:"secondaryPodRange"`
	// Name of the subnetwork where the additional pod network belongs.
	Subnetwork *string `pulumi:"subnetwork"`
}

// NodePoolNetworkConfigAdditionalPodNetworkConfigInput is an input type that accepts NodePoolNetworkConfigAdditionalPodNetworkConfigArgs and NodePoolNetworkConfigAdditionalPodNetworkConfigOutput values.
// You can construct a concrete instance of `NodePoolNetworkConfigAdditionalPodNetworkConfigInput` via:
//
//	NodePoolNetworkConfigAdditionalPodNetworkConfigArgs{...}
type NodePoolNetworkConfigAdditionalPodNetworkConfigInput interface {
	pulumi.Input

	ToNodePoolNetworkConfigAdditionalPodNetworkConfigOutput() NodePoolNetworkConfigAdditionalPodNetworkConfigOutput
	ToNodePoolNetworkConfigAdditionalPodNetworkConfigOutputWithContext(context.Context) NodePoolNetworkConfigAdditionalPodNetworkConfigOutput
}

type NodePoolNetworkConfigAdditionalPodNetworkConfigArgs struct {
	// The maximum number of pods per node which use this pod network.
	MaxPodsPerNode pulumi.IntPtrInput `pulumi:"maxPodsPerNode"`
	// The name of the secondary range on the subnet which provides IP address for this pod range.
	SecondaryPodRange pulumi.StringPtrInput `pulumi:"secondaryPodRange"`
	// Name of the subnetwork where the additional pod network belongs.
	Subnetwork pulumi.StringPtrInput `pulumi:"subnetwork"`
}

func (NodePoolNetworkConfigAdditionalPodNetworkConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNetworkConfigAdditionalPodNetworkConfig)(nil)).Elem()
}

func (i NodePoolNetworkConfigAdditionalPodNetworkConfigArgs) ToNodePoolNetworkConfigAdditionalPodNetworkConfigOutput() NodePoolNetworkConfigAdditionalPodNetworkConfigOutput {
	return i.ToNodePoolNetworkConfigAdditionalPodNetworkConfigOutputWithContext(context.Background())
}

func (i NodePoolNetworkConfigAdditionalPodNetworkConfigArgs) ToNodePoolNetworkConfigAdditionalPodNetworkConfigOutputWithContext(ctx context.Context) NodePoolNetworkConfigAdditionalPodNetworkConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNetworkConfigAdditionalPodNetworkConfigOutput)
}

// NodePoolNetworkConfigAdditionalPodNetworkConfigArrayInput is an input type that accepts NodePoolNetworkConfigAdditionalPodNetworkConfigArray and NodePoolNetworkConfigAdditionalPodNetworkConfigArrayOutput values.
// You can construct a concrete instance of `NodePoolNetworkConfigAdditionalPodNetworkConfigArrayInput` via:
//
//	NodePoolNetworkConfigAdditionalPodNetworkConfigArray{ NodePoolNetworkConfigAdditionalPodNetworkConfigArgs{...} }
type NodePoolNetworkConfigAdditionalPodNetworkConfigArrayInput interface {
	pulumi.Input

	ToNodePoolNetworkConfigAdditionalPodNetworkConfigArrayOutput() NodePoolNetworkConfigAdditionalPodNetworkConfigArrayOutput
	ToNodePoolNetworkConfigAdditionalPodNetworkConfigArrayOutputWithContext(context.Context) NodePoolNetworkConfigAdditionalPodNetworkConfigArrayOutput
}

type NodePoolNetworkConfigAdditionalPodNetworkConfigArray []NodePoolNetworkConfigAdditionalPodNetworkConfigInput

func (NodePoolNetworkConfigAdditionalPodNetworkConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodePoolNetworkConfigAdditionalPodNetworkConfig)(nil)).Elem()
}

func (i NodePoolNetworkConfigAdditionalPodNetworkConfigArray) ToNodePoolNetworkConfigAdditionalPodNetworkConfigArrayOutput() NodePoolNetworkConfigAdditionalPodNetworkConfigArrayOutput {
	return i.ToNodePoolNetworkConfigAdditionalPodNetworkConfigArrayOutputWithContext(context.Background())
}

func (i NodePoolNetworkConfigAdditionalPodNetworkConfigArray) ToNodePoolNetworkConfigAdditionalPodNetworkConfigArrayOutputWithContext(ctx context.Context) NodePoolNetworkConfigAdditionalPodNetworkConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNetworkConfigAdditionalPodNetworkConfigArrayOutput)
}

type NodePoolNetworkConfigAdditionalPodNetworkConfigOutput struct{ *pulumi.OutputState }

func (NodePoolNetworkConfigAdditionalPodNetworkConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNetworkConfigAdditionalPodNetworkConfig)(nil)).Elem()
}

func (o NodePoolNetworkConfigAdditionalPodNetworkConfigOutput) ToNodePoolNetworkConfigAdditionalPodNetworkConfigOutput() NodePoolNetworkConfigAdditionalPodNetworkConfigOutput {
	return o
}

func (o NodePoolNetworkConfigAdditionalPodNetworkConfigOutput) ToNodePoolNetworkConfigAdditionalPodNetworkConfigOutputWithContext(ctx context.Context) NodePoolNetworkConfigAdditionalPodNetworkConfigOutput {
	return o
}

// The maximum number of pods per node which use this pod network.
func (o NodePoolNetworkConfigAdditionalPodNetworkConfigOutput) MaxPodsPerNode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NodePoolNetworkConfigAdditionalPodNetworkConfig) *int { return v.MaxPodsPerNode }).(pulumi.IntPtrOutput)
}

// The name of the secondary range on the subnet which provides IP address for this pod range.
func (o NodePoolNetworkConfigAdditionalPodNetworkConfigOutput) SecondaryPodRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodePoolNetworkConfigAdditionalPodNetworkConfig) *string { return v.SecondaryPodRange }).(pulumi.StringPtrOutput)
}

// Name of the subnetwork where the additional pod network belongs.
func (o NodePoolNetworkConfigAdditionalPodNetworkConfigOutput) Subnetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodePoolNetworkConfigAdditionalPodNetworkConfig) *string { return v.Subnetwork }).(pulumi.StringPtrOutput)
}

type NodePoolNetworkConfigAdditionalPodNetworkConfigArrayOutput struct{ *pulumi.OutputState }

func (NodePoolNetworkConfigAdditionalPodNetworkConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodePoolNetworkConfigAdditionalPodNetworkConfig)(nil)).Elem()
}

func (o NodePoolNetworkConfigAdditionalPodNetworkConfigArrayOutput) ToNodePoolNetworkConfigAdditionalPodNetworkConfigArrayOutput() NodePoolNetworkConfigAdditionalPodNetworkConfigArrayOutput {
	return o
}

func (o NodePoolNetworkConfigAdditionalPodNetworkConfigArrayOutput) ToNodePoolNetworkConfigAdditionalPodNetworkConfigArrayOutputWithContext(ctx context.Context) NodePoolNetworkConfigAdditionalPodNetworkConfigArrayOutput {
	return o
}

func (o NodePoolNetworkConfigAdditionalPodNetworkConfigArrayOutput) Index(i pulumi.IntInput) NodePoolNetworkConfigAdditionalPodNetworkConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NodePoolNetworkConfigAdditionalPodNetworkConfig {
		return vs[0].([]NodePoolNetworkConfigAdditionalPodNetworkConfig)[vs[1].(int)]
	}).(NodePoolNetworkConfigAdditionalPodNetworkConfigOutput)
}

type NodePoolNetworkConfigNetworkPerformanceConfig struct {
	// Specifies the total network bandwidth tier for the NodePool.
	TotalEgressBandwidthTier string `pulumi:"totalEgressBandwidthTier"`
}

// NodePoolNetworkConfigNetworkPerformanceConfigInput is an input type that accepts NodePoolNetworkConfigNetworkPerformanceConfigArgs and NodePoolNetworkConfigNetworkPerformanceConfigOutput values.
// You can construct a concrete instance of `NodePoolNetworkConfigNetworkPerformanceConfigInput` via:
//
//	NodePoolNetworkConfigNetworkPerformanceConfigArgs{...}
type NodePoolNetworkConfigNetworkPerformanceConfigInput interface {
	pulumi.Input

	ToNodePoolNetworkConfigNetworkPerformanceConfigOutput() NodePoolNetworkConfigNetworkPerformanceConfigOutput
	ToNodePoolNetworkConfigNetworkPerformanceConfigOutputWithContext(context.Context) NodePoolNetworkConfigNetworkPerformanceConfigOutput
}

type NodePoolNetworkConfigNetworkPerformanceConfigArgs struct {
	// Specifies the total network bandwidth tier for the NodePool.
	TotalEgressBandwidthTier pulumi.StringInput `pulumi:"totalEgressBandwidthTier"`
}

func (NodePoolNetworkConfigNetworkPerformanceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNetworkConfigNetworkPerformanceConfig)(nil)).Elem()
}

func (i NodePoolNetworkConfigNetworkPerformanceConfigArgs) ToNodePoolNetworkConfigNetworkPerformanceConfigOutput() NodePoolNetworkConfigNetworkPerformanceConfigOutput {
	return i.ToNodePoolNetworkConfigNetworkPerformanceConfigOutputWithContext(context.Background())
}

func (i NodePoolNetworkConfigNetworkPerformanceConfigArgs) ToNodePoolNetworkConfigNetworkPerformanceConfigOutputWithContext(ctx context.Context) NodePoolNetworkConfigNetworkPerformanceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNetworkConfigNetworkPerformanceConfigOutput)
}

func (i NodePoolNetworkConfigNetworkPerformanceConfigArgs) ToNodePoolNetworkConfigNetworkPerformanceConfigPtrOutput() NodePoolNetworkConfigNetworkPerformanceConfigPtrOutput {
	return i.ToNodePoolNetworkConfigNetworkPerformanceConfigPtrOutputWithContext(context.Background())
}

func (i NodePoolNetworkConfigNetworkPerformanceConfigArgs) ToNodePoolNetworkConfigNetworkPerformanceConfigPtrOutputWithContext(ctx context.Context) NodePoolNetworkConfigNetworkPerformanceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNetworkConfigNetworkPerformanceConfigOutput).ToNodePoolNetworkConfigNetworkPerformanceConfigPtrOutputWithContext(ctx)
}

// NodePoolNetworkConfigNetworkPerformanceConfigPtrInput is an input type that accepts NodePoolNetworkConfigNetworkPerformanceConfigArgs, NodePoolNetworkConfigNetworkPerformanceConfigPtr and NodePoolNetworkConfigNetworkPerformanceConfigPtrOutput values.
// You can construct a concrete instance of `NodePoolNetworkConfigNetworkPerformanceConfigPtrInput` via:
//
//	        NodePoolNetworkConfigNetworkPerformanceConfigArgs{...}
//
//	or:
//
//	        nil
type NodePoolNetworkConfigNetworkPerformanceConfigPtrInput interface {
	pulumi.Input

	ToNodePoolNetworkConfigNetworkPerformanceConfigPtrOutput() NodePoolNetworkConfigNetworkPerformanceConfigPtrOutput
	ToNodePoolNetworkConfigNetworkPerformanceConfigPtrOutputWithContext(context.Context) NodePoolNetworkConfigNetworkPerformanceConfigPtrOutput
}

type nodePoolNetworkConfigNetworkPerformanceConfigPtrType NodePoolNetworkConfigNetworkPerformanceConfigArgs

func NodePoolNetworkConfigNetworkPerformanceConfigPtr(v *NodePoolNetworkConfigNetworkPerformanceConfigArgs) NodePoolNetworkConfigNetworkPerformanceConfigPtrInput {
	return (*nodePoolNetworkConfigNetworkPerformanceConfigPtrType)(v)
}

func (*nodePoolNetworkConfigNetworkPerformanceConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolNetworkConfigNetworkPerformanceConfig)(nil)).Elem()
}

func (i *nodePoolNetworkConfigNetworkPerformanceConfigPtrType) ToNodePoolNetworkConfigNetworkPerformanceConfigPtrOutput() NodePoolNetworkConfigNetworkPerformanceConfigPtrOutput {
	return i.ToNodePoolNetworkConfigNetworkPerformanceConfigPtrOutputWithContext(context.Background())
}

func (i *nodePoolNetworkConfigNetworkPerformanceConfigPtrType) ToNodePoolNetworkConfigNetworkPerformanceConfigPtrOutputWithContext(ctx context.Context) NodePoolNetworkConfigNetworkPerformanceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNetworkConfigNetworkPerformanceConfigPtrOutput)
}

type NodePoolNetworkConfigNetworkPerformanceConfigOutput struct{ *pulumi.OutputState }

func (NodePoolNetworkConfigNetworkPerformanceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNetworkConfigNetworkPerformanceConfig)(nil)).Elem()
}

func (o NodePoolNetworkConfigNetworkPerformanceConfigOutput) ToNodePoolNetworkConfigNetworkPerformanceConfigOutput() NodePoolNetworkConfigNetworkPerformanceConfigOutput {
	return o
}

func (o NodePoolNetworkConfigNetworkPerformanceConfigOutput) ToNodePoolNetworkConfigNetworkPerformanceConfigOutputWithContext(ctx context.Context) NodePoolNetworkConfigNetworkPerformanceConfigOutput {
	return o
}

func (o NodePoolNetworkConfigNetworkPerformanceConfigOutput) ToNodePoolNetworkConfigNetworkPerformanceConfigPtrOutput() NodePoolNetworkConfigNetworkPerformanceConfigPtrOutput {
	return o.ToNodePoolNetworkConfigNetworkPerformanceConfigPtrOutputWithContext(context.Background())
}

func (o NodePoolNetworkConfigNetworkPerformanceConfigOutput) ToNodePoolNetworkConfigNetworkPerformanceConfigPtrOutputWithContext(ctx context.Context) NodePoolNetworkConfigNetworkPerformanceConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NodePoolNetworkConfigNetworkPerformanceConfig) *NodePoolNetworkConfigNetworkPerformanceConfig {
		return &v
	}).(NodePoolNetworkConfigNetworkPerformanceConfigPtrOutput)
}

// Specifies the total network bandwidth tier for the NodePool.
func (o NodePoolNetworkConfigNetworkPerformanceConfigOutput) TotalEgressBandwidthTier() pulumi.StringOutput {
	return o.ApplyT(func(v NodePoolNetworkConfigNetworkPerformanceConfig) string { return v.TotalEgressBandwidthTier }).(pulumi.StringOutput)
}

type NodePoolNetworkConfigNetworkPerformanceConfigPtrOutput struct{ *pulumi.OutputState }

func (NodePoolNetworkConfigNetworkPerformanceConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolNetworkConfigNetworkPerformanceConfig)(nil)).Elem()
}

func (o NodePoolNetworkConfigNetworkPerformanceConfigPtrOutput) ToNodePoolNetworkConfigNetworkPerformanceConfigPtrOutput() NodePoolNetworkConfigNetworkPerformanceConfigPtrOutput {
	return o
}

func (o NodePoolNetworkConfigNetworkPerformanceConfigPtrOutput) ToNodePoolNetworkConfigNetworkPerformanceConfigPtrOutputWithContext(ctx context.Context) NodePoolNetworkConfigNetworkPerformanceConfigPtrOutput {
	return o
}

func (o NodePoolNetworkConfigNetworkPerformanceConfigPtrOutput) Elem() NodePoolNetworkConfigNetworkPerformanceConfigOutput {
	return o.ApplyT(func(v *NodePoolNetworkConfigNetworkPerformanceConfig) NodePoolNetworkConfigNetworkPerformanceConfig {
		if v != nil {
			return *v
		}
		var ret NodePoolNetworkConfigNetworkPerformanceConfig
		return ret
	}).(NodePoolNetworkConfigNetworkPerformanceConfigOutput)
}

// Specifies the total network bandwidth tier for the NodePool.
func (o NodePoolNetworkConfigNetworkPerformanceConfigPtrOutput) TotalEgressBandwidthTier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodePoolNetworkConfigNetworkPerformanceConfig) *string {
		if v == nil {
			return nil
		}
		return &v.TotalEgressBandwidthTier
	}).(pulumi.StringPtrOutput)
}

type NodePoolNetworkConfigPodCidrOverprovisionConfig struct {
	Disabled bool `pulumi:"disabled"`
}

// NodePoolNetworkConfigPodCidrOverprovisionConfigInput is an input type that accepts NodePoolNetworkConfigPodCidrOverprovisionConfigArgs and NodePoolNetworkConfigPodCidrOverprovisionConfigOutput values.
// You can construct a concrete instance of `NodePoolNetworkConfigPodCidrOverprovisionConfigInput` via:
//
//	NodePoolNetworkConfigPodCidrOverprovisionConfigArgs{...}
type NodePoolNetworkConfigPodCidrOverprovisionConfigInput interface {
	pulumi.Input

	ToNodePoolNetworkConfigPodCidrOverprovisionConfigOutput() NodePoolNetworkConfigPodCidrOverprovisionConfigOutput
	ToNodePoolNetworkConfigPodCidrOverprovisionConfigOutputWithContext(context.Context) NodePoolNetworkConfigPodCidrOverprovisionConfigOutput
}

type NodePoolNetworkConfigPodCidrOverprovisionConfigArgs struct {
	Disabled pulumi.BoolInput `pulumi:"disabled"`
}

func (NodePoolNetworkConfigPodCidrOverprovisionConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNetworkConfigPodCidrOverprovisionConfig)(nil)).Elem()
}

func (i NodePoolNetworkConfigPodCidrOverprovisionConfigArgs) ToNodePoolNetworkConfigPodCidrOverprovisionConfigOutput() NodePoolNetworkConfigPodCidrOverprovisionConfigOutput {
	return i.ToNodePoolNetworkConfigPodCidrOverprovisionConfigOutputWithContext(context.Background())
}

func (i NodePoolNetworkConfigPodCidrOverprovisionConfigArgs) ToNodePoolNetworkConfigPodCidrOverprovisionConfigOutputWithContext(ctx context.Context) NodePoolNetworkConfigPodCidrOverprovisionConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNetworkConfigPodCidrOverprovisionConfigOutput)
}

func (i NodePoolNetworkConfigPodCidrOverprovisionConfigArgs) ToNodePoolNetworkConfigPodCidrOverprovisionConfigPtrOutput() NodePoolNetworkConfigPodCidrOverprovisionConfigPtrOutput {
	return i.ToNodePoolNetworkConfigPodCidrOverprovisionConfigPtrOutputWithContext(context.Background())
}

func (i NodePoolNetworkConfigPodCidrOverprovisionConfigArgs) ToNodePoolNetworkConfigPodCidrOverprovisionConfigPtrOutputWithContext(ctx context.Context) NodePoolNetworkConfigPodCidrOverprovisionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNetworkConfigPodCidrOverprovisionConfigOutput).ToNodePoolNetworkConfigPodCidrOverprovisionConfigPtrOutputWithContext(ctx)
}

// NodePoolNetworkConfigPodCidrOverprovisionConfigPtrInput is an input type that accepts NodePoolNetworkConfigPodCidrOverprovisionConfigArgs, NodePoolNetworkConfigPodCidrOverprovisionConfigPtr and NodePoolNetworkConfigPodCidrOverprovisionConfigPtrOutput values.
// You can construct a concrete instance of `NodePoolNetworkConfigPodCidrOverprovisionConfigPtrInput` via:
//
//	        NodePoolNetworkConfigPodCidrOverprovisionConfigArgs{...}
//
//	or:
//
//	        nil
type NodePoolNetworkConfigPodCidrOverprovisionConfigPtrInput interface {
	pulumi.Input

	ToNodePoolNetworkConfigPodCidrOverprovisionConfigPtrOutput() NodePoolNetworkConfigPodCidrOverprovisionConfigPtrOutput
	ToNodePoolNetworkConfigPodCidrOverprovisionConfigPtrOutputWithContext(context.Context) NodePoolNetworkConfigPodCidrOverprovisionConfigPtrOutput
}

type nodePoolNetworkConfigPodCidrOverprovisionConfigPtrType NodePoolNetworkConfigPodCidrOverprovisionConfigArgs

func NodePoolNetworkConfigPodCidrOverprovisionConfigPtr(v *NodePoolNetworkConfigPodCidrOverprovisionConfigArgs) NodePoolNetworkConfigPodCidrOverprovisionConfigPtrInput {
	return (*nodePoolNetworkConfigPodCidrOverprovisionConfigPtrType)(v)
}

func (*nodePoolNetworkConfigPodCidrOverprovisionConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolNetworkConfigPodCidrOverprovisionConfig)(nil)).Elem()
}

func (i *nodePoolNetworkConfigPodCidrOverprovisionConfigPtrType) ToNodePoolNetworkConfigPodCidrOverprovisionConfigPtrOutput() NodePoolNetworkConfigPodCidrOverprovisionConfigPtrOutput {
	return i.ToNodePoolNetworkConfigPodCidrOverprovisionConfigPtrOutputWithContext(context.Background())
}

func (i *nodePoolNetworkConfigPodCidrOverprovisionConfigPtrType) ToNodePoolNetworkConfigPodCidrOverprovisionConfigPtrOutputWithContext(ctx context.Context) NodePoolNetworkConfigPodCidrOverprovisionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNetworkConfigPodCidrOverprovisionConfigPtrOutput)
}

type NodePoolNetworkConfigPodCidrOverprovisionConfigOutput struct{ *pulumi.OutputState }

func (NodePoolNetworkConfigPodCidrOverprovisionConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNetworkConfigPodCidrOverprovisionConfig)(nil)).Elem()
}

func (o NodePoolNetworkConfigPodCidrOverprovisionConfigOutput) ToNodePoolNetworkConfigPodCidrOverprovisionConfigOutput() NodePoolNetworkConfigPodCidrOverprovisionConfigOutput {
	return o
}

func (o NodePoolNetworkConfigPodCidrOverprovisionConfigOutput) ToNodePoolNetworkConfigPodCidrOverprovisionConfigOutputWithContext(ctx context.Context) NodePoolNetworkConfigPodCidrOverprovisionConfigOutput {
	return o
}

func (o NodePoolNetworkConfigPodCidrOverprovisionConfigOutput) ToNodePoolNetworkConfigPodCidrOverprovisionConfigPtrOutput() NodePoolNetworkConfigPodCidrOverprovisionConfigPtrOutput {
	return o.ToNodePoolNetworkConfigPodCidrOverprovisionConfigPtrOutputWithContext(context.Background())
}

func (o NodePoolNetworkConfigPodCidrOverprovisionConfigOutput) ToNodePoolNetworkConfigPodCidrOverprovisionConfigPtrOutputWithContext(ctx context.Context) NodePoolNetworkConfigPodCidrOverprovisionConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NodePoolNetworkConfigPodCidrOverprovisionConfig) *NodePoolNetworkConfigPodCidrOverprovisionConfig {
		return &v
	}).(NodePoolNetworkConfigPodCidrOverprovisionConfigPtrOutput)
}

func (o NodePoolNetworkConfigPodCidrOverprovisionConfigOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v NodePoolNetworkConfigPodCidrOverprovisionConfig) bool { return v.Disabled }).(pulumi.BoolOutput)
}

type NodePoolNetworkConfigPodCidrOverprovisionConfigPtrOutput struct{ *pulumi.OutputState }

func (NodePoolNetworkConfigPodCidrOverprovisionConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolNetworkConfigPodCidrOverprovisionConfig)(nil)).Elem()
}

func (o NodePoolNetworkConfigPodCidrOverprovisionConfigPtrOutput) ToNodePoolNetworkConfigPodCidrOverprovisionConfigPtrOutput() NodePoolNetworkConfigPodCidrOverprovisionConfigPtrOutput {
	return o
}

func (o NodePoolNetworkConfigPodCidrOverprovisionConfigPtrOutput) ToNodePoolNetworkConfigPodCidrOverprovisionConfigPtrOutputWithContext(ctx context.Context) NodePoolNetworkConfigPodCidrOverprovisionConfigPtrOutput {
	return o
}

func (o NodePoolNetworkConfigPodCidrOverprovisionConfigPtrOutput) Elem() NodePoolNetworkConfigPodCidrOverprovisionConfigOutput {
	return o.ApplyT(func(v *NodePoolNetworkConfigPodCidrOverprovisionConfig) NodePoolNetworkConfigPodCidrOverprovisionConfig {
		if v != nil {
			return *v
		}
		var ret NodePoolNetworkConfigPodCidrOverprovisionConfig
		return ret
	}).(NodePoolNetworkConfigPodCidrOverprovisionConfigOutput)
}

func (o NodePoolNetworkConfigPodCidrOverprovisionConfigPtrOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NodePoolNetworkConfigPodCidrOverprovisionConfig) *bool {
		if v == nil {
			return nil
		}
		return &v.Disabled
	}).(pulumi.BoolPtrOutput)
}

type NodePoolNodeConfig struct {
	// Specifies options for controlling advanced machine features.
	AdvancedMachineFeatures *NodePoolNodeConfigAdvancedMachineFeatures `pulumi:"advancedMachineFeatures"`
	// The Customer Managed Encryption Key used to encrypt the boot disk attached to each node in the node pool.
	BootDiskKmsKey *string `pulumi:"bootDiskKmsKey"`
	// Configuration for Confidential Nodes feature. Structure is documented below.
	ConfidentialNodes *NodePoolNodeConfigConfidentialNodes `pulumi:"confidentialNodes"`
	// Size of the disk attached to each node, specified in GB. The smallest allowed disk size is 10GB.
	DiskSizeGb *int `pulumi:"diskSizeGb"`
	// Type of the disk attached to each node. Such as pd-standard, pd-balanced or pd-ssd
	DiskType *string `pulumi:"diskType"`
	// List of kubernetes taints applied to each node.
	EffectiveTaints []NodePoolNodeConfigEffectiveTaint `pulumi:"effectiveTaints"`
	// If enabled boot disks are configured with confidential mode.
	EnableConfidentialStorage *bool `pulumi:"enableConfidentialStorage"`
	// Parameters for the ephemeral storage filesystem. If unspecified, ephemeral storage is backed by the boot disk.
	EphemeralStorageConfig *NodePoolNodeConfigEphemeralStorageConfig `pulumi:"ephemeralStorageConfig"`
	// Parameters for the ephemeral storage filesystem. If unspecified, ephemeral storage is backed by the boot disk.
	EphemeralStorageLocalSsdConfig *NodePoolNodeConfigEphemeralStorageLocalSsdConfig `pulumi:"ephemeralStorageLocalSsdConfig"`
	// Enable or disable NCCL Fast Socket in the node pool.
	FastSocket *NodePoolNodeConfigFastSocket `pulumi:"fastSocket"`
	// GCFS configuration for this node.
	GcfsConfig *NodePoolNodeConfigGcfsConfig `pulumi:"gcfsConfig"`
	// List of the type and count of accelerator cards attached to the instance.
	GuestAccelerators []NodePoolNodeConfigGuestAccelerator `pulumi:"guestAccelerators"`
	// Enable or disable gvnic in the node pool.
	Gvnic *NodePoolNodeConfigGvnic `pulumi:"gvnic"`
	// The maintenance policy for the hosts on which the GKE VMs run on.
	HostMaintenancePolicy *NodePoolNodeConfigHostMaintenancePolicy `pulumi:"hostMaintenancePolicy"`
	// The image type to use for this node. Note that for a given image type, the latest version of it will be used.
	ImageType *string `pulumi:"imageType"`
	// Node kubelet configs.
	KubeletConfig *NodePoolNodeConfigKubeletConfig `pulumi:"kubeletConfig"`
	// The map of Kubernetes labels (key/value pairs) to be applied to each node. These will added in addition to any default label(s) that Kubernetes may apply to the node.
	Labels map[string]string `pulumi:"labels"`
	// Parameters that can be configured on Linux nodes.
	LinuxNodeConfig *NodePoolNodeConfigLinuxNodeConfig `pulumi:"linuxNodeConfig"`
	// Parameters for raw-block local NVMe SSDs.
	LocalNvmeSsdBlockConfig *NodePoolNodeConfigLocalNvmeSsdBlockConfig `pulumi:"localNvmeSsdBlockConfig"`
	// The number of local SSD disks to be attached to the node.
	LocalSsdCount *int `pulumi:"localSsdCount"`
	// Type of logging agent that is used as the default value for node pools in the cluster. Valid values include DEFAULT and MAX_THROUGHPUT.
	LoggingVariant *string `pulumi:"loggingVariant"`
	// The name of a Google Compute Engine machine type.
	MachineType *string `pulumi:"machineType"`
	// The metadata key/value pairs assigned to instances in the cluster.
	Metadata map[string]string `pulumi:"metadata"`
	// Minimum CPU platform to be used by this instance. The instance may be scheduled on the specified or newer CPU platform.
	MinCpuPlatform *string `pulumi:"minCpuPlatform"`
	// Setting this field will assign instances of this pool to run on the specified node group. This is useful for running workloads on sole tenant nodes.
	NodeGroup *string `pulumi:"nodeGroup"`
	// The set of Google API scopes to be made available on all of the node VMs.
	OauthScopes []string `pulumi:"oauthScopes"`
	// Whether the nodes are created as preemptible VM instances.
	Preemptible *bool `pulumi:"preemptible"`
	// The reservation affinity configuration for the node pool.
	ReservationAffinity *NodePoolNodeConfigReservationAffinity `pulumi:"reservationAffinity"`
	// The GCE resource labels (a map of key/value pairs) to be applied to the node pool.
	ResourceLabels map[string]string `pulumi:"resourceLabels"`
	// A map of resource manager tags. Resource manager tag keys and values have the same definition as resource manager tags. Keys must be in the format tagKeys/{tag_key_id}, and values are in the format tagValues/456. The field is ignored (both PUT & PATCH) when empty.
	ResourceManagerTags map[string]interface{} `pulumi:"resourceManagerTags"`
	// Sandbox configuration for this node.
	SandboxConfig *NodePoolNodeConfigSandboxConfig `pulumi:"sandboxConfig"`
	// Secondary boot disks for preloading data or container images.
	SecondaryBootDisks []NodePoolNodeConfigSecondaryBootDisk `pulumi:"secondaryBootDisks"`
	// The Google Cloud Platform Service Account to be used by the node VMs.
	ServiceAccount *string `pulumi:"serviceAccount"`
	// Shielded Instance options.
	ShieldedInstanceConfig *NodePoolNodeConfigShieldedInstanceConfig `pulumi:"shieldedInstanceConfig"`
	// Node affinity options for sole tenant node pools.
	SoleTenantConfig *NodePoolNodeConfigSoleTenantConfig `pulumi:"soleTenantConfig"`
	// Whether the nodes are created as spot VM instances.
	Spot *bool `pulumi:"spot"`
	// The list of instance tags applied to all nodes.
	Tags []string `pulumi:"tags"`
	// List of Kubernetes taints to be applied to each node.
	Taints []NodePoolNodeConfigTaint `pulumi:"taints"`
	// The workload metadata configuration for this node.
	WorkloadMetadataConfig *NodePoolNodeConfigWorkloadMetadataConfig `pulumi:"workloadMetadataConfig"`
}

// NodePoolNodeConfigInput is an input type that accepts NodePoolNodeConfigArgs and NodePoolNodeConfigOutput values.
// You can construct a concrete instance of `NodePoolNodeConfigInput` via:
//
//	NodePoolNodeConfigArgs{...}
type NodePoolNodeConfigInput interface {
	pulumi.Input

	ToNodePoolNodeConfigOutput() NodePoolNodeConfigOutput
	ToNodePoolNodeConfigOutputWithContext(context.Context) NodePoolNodeConfigOutput
}

type NodePoolNodeConfigArgs struct {
	// Specifies options for controlling advanced machine features.
	AdvancedMachineFeatures NodePoolNodeConfigAdvancedMachineFeaturesPtrInput `pulumi:"advancedMachineFeatures"`
	// The Customer Managed Encryption Key used to encrypt the boot disk attached to each node in the node pool.
	BootDiskKmsKey pulumi.StringPtrInput `pulumi:"bootDiskKmsKey"`
	// Configuration for Confidential Nodes feature. Structure is documented below.
	ConfidentialNodes NodePoolNodeConfigConfidentialNodesPtrInput `pulumi:"confidentialNodes"`
	// Size of the disk attached to each node, specified in GB. The smallest allowed disk size is 10GB.
	DiskSizeGb pulumi.IntPtrInput `pulumi:"diskSizeGb"`
	// Type of the disk attached to each node. Such as pd-standard, pd-balanced or pd-ssd
	DiskType pulumi.StringPtrInput `pulumi:"diskType"`
	// List of kubernetes taints applied to each node.
	EffectiveTaints NodePoolNodeConfigEffectiveTaintArrayInput `pulumi:"effectiveTaints"`
	// If enabled boot disks are configured with confidential mode.
	EnableConfidentialStorage pulumi.BoolPtrInput `pulumi:"enableConfidentialStorage"`
	// Parameters for the ephemeral storage filesystem. If unspecified, ephemeral storage is backed by the boot disk.
	EphemeralStorageConfig NodePoolNodeConfigEphemeralStorageConfigPtrInput `pulumi:"ephemeralStorageConfig"`
	// Parameters for the ephemeral storage filesystem. If unspecified, ephemeral storage is backed by the boot disk.
	EphemeralStorageLocalSsdConfig NodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrInput `pulumi:"ephemeralStorageLocalSsdConfig"`
	// Enable or disable NCCL Fast Socket in the node pool.
	FastSocket NodePoolNodeConfigFastSocketPtrInput `pulumi:"fastSocket"`
	// GCFS configuration for this node.
	GcfsConfig NodePoolNodeConfigGcfsConfigPtrInput `pulumi:"gcfsConfig"`
	// List of the type and count of accelerator cards attached to the instance.
	GuestAccelerators NodePoolNodeConfigGuestAcceleratorArrayInput `pulumi:"guestAccelerators"`
	// Enable or disable gvnic in the node pool.
	Gvnic NodePoolNodeConfigGvnicPtrInput `pulumi:"gvnic"`
	// The maintenance policy for the hosts on which the GKE VMs run on.
	HostMaintenancePolicy NodePoolNodeConfigHostMaintenancePolicyPtrInput `pulumi:"hostMaintenancePolicy"`
	// The image type to use for this node. Note that for a given image type, the latest version of it will be used.
	ImageType pulumi.StringPtrInput `pulumi:"imageType"`
	// Node kubelet configs.
	KubeletConfig NodePoolNodeConfigKubeletConfigPtrInput `pulumi:"kubeletConfig"`
	// The map of Kubernetes labels (key/value pairs) to be applied to each node. These will added in addition to any default label(s) that Kubernetes may apply to the node.
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// Parameters that can be configured on Linux nodes.
	LinuxNodeConfig NodePoolNodeConfigLinuxNodeConfigPtrInput `pulumi:"linuxNodeConfig"`
	// Parameters for raw-block local NVMe SSDs.
	LocalNvmeSsdBlockConfig NodePoolNodeConfigLocalNvmeSsdBlockConfigPtrInput `pulumi:"localNvmeSsdBlockConfig"`
	// The number of local SSD disks to be attached to the node.
	LocalSsdCount pulumi.IntPtrInput `pulumi:"localSsdCount"`
	// Type of logging agent that is used as the default value for node pools in the cluster. Valid values include DEFAULT and MAX_THROUGHPUT.
	LoggingVariant pulumi.StringPtrInput `pulumi:"loggingVariant"`
	// The name of a Google Compute Engine machine type.
	MachineType pulumi.StringPtrInput `pulumi:"machineType"`
	// The metadata key/value pairs assigned to instances in the cluster.
	Metadata pulumi.StringMapInput `pulumi:"metadata"`
	// Minimum CPU platform to be used by this instance. The instance may be scheduled on the specified or newer CPU platform.
	MinCpuPlatform pulumi.StringPtrInput `pulumi:"minCpuPlatform"`
	// Setting this field will assign instances of this pool to run on the specified node group. This is useful for running workloads on sole tenant nodes.
	NodeGroup pulumi.StringPtrInput `pulumi:"nodeGroup"`
	// The set of Google API scopes to be made available on all of the node VMs.
	OauthScopes pulumi.StringArrayInput `pulumi:"oauthScopes"`
	// Whether the nodes are created as preemptible VM instances.
	Preemptible pulumi.BoolPtrInput `pulumi:"preemptible"`
	// The reservation affinity configuration for the node pool.
	ReservationAffinity NodePoolNodeConfigReservationAffinityPtrInput `pulumi:"reservationAffinity"`
	// The GCE resource labels (a map of key/value pairs) to be applied to the node pool.
	ResourceLabels pulumi.StringMapInput `pulumi:"resourceLabels"`
	// A map of resource manager tags. Resource manager tag keys and values have the same definition as resource manager tags. Keys must be in the format tagKeys/{tag_key_id}, and values are in the format tagValues/456. The field is ignored (both PUT & PATCH) when empty.
	ResourceManagerTags pulumi.MapInput `pulumi:"resourceManagerTags"`
	// Sandbox configuration for this node.
	SandboxConfig NodePoolNodeConfigSandboxConfigPtrInput `pulumi:"sandboxConfig"`
	// Secondary boot disks for preloading data or container images.
	SecondaryBootDisks NodePoolNodeConfigSecondaryBootDiskArrayInput `pulumi:"secondaryBootDisks"`
	// The Google Cloud Platform Service Account to be used by the node VMs.
	ServiceAccount pulumi.StringPtrInput `pulumi:"serviceAccount"`
	// Shielded Instance options.
	ShieldedInstanceConfig NodePoolNodeConfigShieldedInstanceConfigPtrInput `pulumi:"shieldedInstanceConfig"`
	// Node affinity options for sole tenant node pools.
	SoleTenantConfig NodePoolNodeConfigSoleTenantConfigPtrInput `pulumi:"soleTenantConfig"`
	// Whether the nodes are created as spot VM instances.
	Spot pulumi.BoolPtrInput `pulumi:"spot"`
	// The list of instance tags applied to all nodes.
	Tags pulumi.StringArrayInput `pulumi:"tags"`
	// List of Kubernetes taints to be applied to each node.
	Taints NodePoolNodeConfigTaintArrayInput `pulumi:"taints"`
	// The workload metadata configuration for this node.
	WorkloadMetadataConfig NodePoolNodeConfigWorkloadMetadataConfigPtrInput `pulumi:"workloadMetadataConfig"`
}

func (NodePoolNodeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfig)(nil)).Elem()
}

func (i NodePoolNodeConfigArgs) ToNodePoolNodeConfigOutput() NodePoolNodeConfigOutput {
	return i.ToNodePoolNodeConfigOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigArgs) ToNodePoolNodeConfigOutputWithContext(ctx context.Context) NodePoolNodeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigOutput)
}

func (i NodePoolNodeConfigArgs) ToNodePoolNodeConfigPtrOutput() NodePoolNodeConfigPtrOutput {
	return i.ToNodePoolNodeConfigPtrOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigArgs) ToNodePoolNodeConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigOutput).ToNodePoolNodeConfigPtrOutputWithContext(ctx)
}

// NodePoolNodeConfigPtrInput is an input type that accepts NodePoolNodeConfigArgs, NodePoolNodeConfigPtr and NodePoolNodeConfigPtrOutput values.
// You can construct a concrete instance of `NodePoolNodeConfigPtrInput` via:
//
//	        NodePoolNodeConfigArgs{...}
//
//	or:
//
//	        nil
type NodePoolNodeConfigPtrInput interface {
	pulumi.Input

	ToNodePoolNodeConfigPtrOutput() NodePoolNodeConfigPtrOutput
	ToNodePoolNodeConfigPtrOutputWithContext(context.Context) NodePoolNodeConfigPtrOutput
}

type nodePoolNodeConfigPtrType NodePoolNodeConfigArgs

func NodePoolNodeConfigPtr(v *NodePoolNodeConfigArgs) NodePoolNodeConfigPtrInput {
	return (*nodePoolNodeConfigPtrType)(v)
}

func (*nodePoolNodeConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolNodeConfig)(nil)).Elem()
}

func (i *nodePoolNodeConfigPtrType) ToNodePoolNodeConfigPtrOutput() NodePoolNodeConfigPtrOutput {
	return i.ToNodePoolNodeConfigPtrOutputWithContext(context.Background())
}

func (i *nodePoolNodeConfigPtrType) ToNodePoolNodeConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigPtrOutput)
}

type NodePoolNodeConfigOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfig)(nil)).Elem()
}

func (o NodePoolNodeConfigOutput) ToNodePoolNodeConfigOutput() NodePoolNodeConfigOutput {
	return o
}

func (o NodePoolNodeConfigOutput) ToNodePoolNodeConfigOutputWithContext(ctx context.Context) NodePoolNodeConfigOutput {
	return o
}

func (o NodePoolNodeConfigOutput) ToNodePoolNodeConfigPtrOutput() NodePoolNodeConfigPtrOutput {
	return o.ToNodePoolNodeConfigPtrOutputWithContext(context.Background())
}

func (o NodePoolNodeConfigOutput) ToNodePoolNodeConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NodePoolNodeConfig) *NodePoolNodeConfig {
		return &v
	}).(NodePoolNodeConfigPtrOutput)
}

// Specifies options for controlling advanced machine features.
func (o NodePoolNodeConfigOutput) AdvancedMachineFeatures() NodePoolNodeConfigAdvancedMachineFeaturesPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) *NodePoolNodeConfigAdvancedMachineFeatures {
		return v.AdvancedMachineFeatures
	}).(NodePoolNodeConfigAdvancedMachineFeaturesPtrOutput)
}

// The Customer Managed Encryption Key used to encrypt the boot disk attached to each node in the node pool.
func (o NodePoolNodeConfigOutput) BootDiskKmsKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) *string { return v.BootDiskKmsKey }).(pulumi.StringPtrOutput)
}

// Configuration for Confidential Nodes feature. Structure is documented below.
func (o NodePoolNodeConfigOutput) ConfidentialNodes() NodePoolNodeConfigConfidentialNodesPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) *NodePoolNodeConfigConfidentialNodes { return v.ConfidentialNodes }).(NodePoolNodeConfigConfidentialNodesPtrOutput)
}

// Size of the disk attached to each node, specified in GB. The smallest allowed disk size is 10GB.
func (o NodePoolNodeConfigOutput) DiskSizeGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) *int { return v.DiskSizeGb }).(pulumi.IntPtrOutput)
}

// Type of the disk attached to each node. Such as pd-standard, pd-balanced or pd-ssd
func (o NodePoolNodeConfigOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) *string { return v.DiskType }).(pulumi.StringPtrOutput)
}

// List of kubernetes taints applied to each node.
func (o NodePoolNodeConfigOutput) EffectiveTaints() NodePoolNodeConfigEffectiveTaintArrayOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) []NodePoolNodeConfigEffectiveTaint { return v.EffectiveTaints }).(NodePoolNodeConfigEffectiveTaintArrayOutput)
}

// If enabled boot disks are configured with confidential mode.
func (o NodePoolNodeConfigOutput) EnableConfidentialStorage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) *bool { return v.EnableConfidentialStorage }).(pulumi.BoolPtrOutput)
}

// Parameters for the ephemeral storage filesystem. If unspecified, ephemeral storage is backed by the boot disk.
func (o NodePoolNodeConfigOutput) EphemeralStorageConfig() NodePoolNodeConfigEphemeralStorageConfigPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) *NodePoolNodeConfigEphemeralStorageConfig { return v.EphemeralStorageConfig }).(NodePoolNodeConfigEphemeralStorageConfigPtrOutput)
}

// Parameters for the ephemeral storage filesystem. If unspecified, ephemeral storage is backed by the boot disk.
func (o NodePoolNodeConfigOutput) EphemeralStorageLocalSsdConfig() NodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) *NodePoolNodeConfigEphemeralStorageLocalSsdConfig {
		return v.EphemeralStorageLocalSsdConfig
	}).(NodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrOutput)
}

// Enable or disable NCCL Fast Socket in the node pool.
func (o NodePoolNodeConfigOutput) FastSocket() NodePoolNodeConfigFastSocketPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) *NodePoolNodeConfigFastSocket { return v.FastSocket }).(NodePoolNodeConfigFastSocketPtrOutput)
}

// GCFS configuration for this node.
func (o NodePoolNodeConfigOutput) GcfsConfig() NodePoolNodeConfigGcfsConfigPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) *NodePoolNodeConfigGcfsConfig { return v.GcfsConfig }).(NodePoolNodeConfigGcfsConfigPtrOutput)
}

// List of the type and count of accelerator cards attached to the instance.
func (o NodePoolNodeConfigOutput) GuestAccelerators() NodePoolNodeConfigGuestAcceleratorArrayOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) []NodePoolNodeConfigGuestAccelerator { return v.GuestAccelerators }).(NodePoolNodeConfigGuestAcceleratorArrayOutput)
}

// Enable or disable gvnic in the node pool.
func (o NodePoolNodeConfigOutput) Gvnic() NodePoolNodeConfigGvnicPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) *NodePoolNodeConfigGvnic { return v.Gvnic }).(NodePoolNodeConfigGvnicPtrOutput)
}

// The maintenance policy for the hosts on which the GKE VMs run on.
func (o NodePoolNodeConfigOutput) HostMaintenancePolicy() NodePoolNodeConfigHostMaintenancePolicyPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) *NodePoolNodeConfigHostMaintenancePolicy { return v.HostMaintenancePolicy }).(NodePoolNodeConfigHostMaintenancePolicyPtrOutput)
}

// The image type to use for this node. Note that for a given image type, the latest version of it will be used.
func (o NodePoolNodeConfigOutput) ImageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) *string { return v.ImageType }).(pulumi.StringPtrOutput)
}

// Node kubelet configs.
func (o NodePoolNodeConfigOutput) KubeletConfig() NodePoolNodeConfigKubeletConfigPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) *NodePoolNodeConfigKubeletConfig { return v.KubeletConfig }).(NodePoolNodeConfigKubeletConfigPtrOutput)
}

// The map of Kubernetes labels (key/value pairs) to be applied to each node. These will added in addition to any default label(s) that Kubernetes may apply to the node.
func (o NodePoolNodeConfigOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// Parameters that can be configured on Linux nodes.
func (o NodePoolNodeConfigOutput) LinuxNodeConfig() NodePoolNodeConfigLinuxNodeConfigPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) *NodePoolNodeConfigLinuxNodeConfig { return v.LinuxNodeConfig }).(NodePoolNodeConfigLinuxNodeConfigPtrOutput)
}

// Parameters for raw-block local NVMe SSDs.
func (o NodePoolNodeConfigOutput) LocalNvmeSsdBlockConfig() NodePoolNodeConfigLocalNvmeSsdBlockConfigPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) *NodePoolNodeConfigLocalNvmeSsdBlockConfig {
		return v.LocalNvmeSsdBlockConfig
	}).(NodePoolNodeConfigLocalNvmeSsdBlockConfigPtrOutput)
}

// The number of local SSD disks to be attached to the node.
func (o NodePoolNodeConfigOutput) LocalSsdCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) *int { return v.LocalSsdCount }).(pulumi.IntPtrOutput)
}

// Type of logging agent that is used as the default value for node pools in the cluster. Valid values include DEFAULT and MAX_THROUGHPUT.
func (o NodePoolNodeConfigOutput) LoggingVariant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) *string { return v.LoggingVariant }).(pulumi.StringPtrOutput)
}

// The name of a Google Compute Engine machine type.
func (o NodePoolNodeConfigOutput) MachineType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) *string { return v.MachineType }).(pulumi.StringPtrOutput)
}

// The metadata key/value pairs assigned to instances in the cluster.
func (o NodePoolNodeConfigOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

// Minimum CPU platform to be used by this instance. The instance may be scheduled on the specified or newer CPU platform.
func (o NodePoolNodeConfigOutput) MinCpuPlatform() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) *string { return v.MinCpuPlatform }).(pulumi.StringPtrOutput)
}

// Setting this field will assign instances of this pool to run on the specified node group. This is useful for running workloads on sole tenant nodes.
func (o NodePoolNodeConfigOutput) NodeGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) *string { return v.NodeGroup }).(pulumi.StringPtrOutput)
}

// The set of Google API scopes to be made available on all of the node VMs.
func (o NodePoolNodeConfigOutput) OauthScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) []string { return v.OauthScopes }).(pulumi.StringArrayOutput)
}

// Whether the nodes are created as preemptible VM instances.
func (o NodePoolNodeConfigOutput) Preemptible() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) *bool { return v.Preemptible }).(pulumi.BoolPtrOutput)
}

// The reservation affinity configuration for the node pool.
func (o NodePoolNodeConfigOutput) ReservationAffinity() NodePoolNodeConfigReservationAffinityPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) *NodePoolNodeConfigReservationAffinity { return v.ReservationAffinity }).(NodePoolNodeConfigReservationAffinityPtrOutput)
}

// The GCE resource labels (a map of key/value pairs) to be applied to the node pool.
func (o NodePoolNodeConfigOutput) ResourceLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) map[string]string { return v.ResourceLabels }).(pulumi.StringMapOutput)
}

// A map of resource manager tags. Resource manager tag keys and values have the same definition as resource manager tags. Keys must be in the format tagKeys/{tag_key_id}, and values are in the format tagValues/456. The field is ignored (both PUT & PATCH) when empty.
func (o NodePoolNodeConfigOutput) ResourceManagerTags() pulumi.MapOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) map[string]interface{} { return v.ResourceManagerTags }).(pulumi.MapOutput)
}

// Sandbox configuration for this node.
func (o NodePoolNodeConfigOutput) SandboxConfig() NodePoolNodeConfigSandboxConfigPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) *NodePoolNodeConfigSandboxConfig { return v.SandboxConfig }).(NodePoolNodeConfigSandboxConfigPtrOutput)
}

// Secondary boot disks for preloading data or container images.
func (o NodePoolNodeConfigOutput) SecondaryBootDisks() NodePoolNodeConfigSecondaryBootDiskArrayOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) []NodePoolNodeConfigSecondaryBootDisk { return v.SecondaryBootDisks }).(NodePoolNodeConfigSecondaryBootDiskArrayOutput)
}

// The Google Cloud Platform Service Account to be used by the node VMs.
func (o NodePoolNodeConfigOutput) ServiceAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) *string { return v.ServiceAccount }).(pulumi.StringPtrOutput)
}

// Shielded Instance options.
func (o NodePoolNodeConfigOutput) ShieldedInstanceConfig() NodePoolNodeConfigShieldedInstanceConfigPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) *NodePoolNodeConfigShieldedInstanceConfig { return v.ShieldedInstanceConfig }).(NodePoolNodeConfigShieldedInstanceConfigPtrOutput)
}

// Node affinity options for sole tenant node pools.
func (o NodePoolNodeConfigOutput) SoleTenantConfig() NodePoolNodeConfigSoleTenantConfigPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) *NodePoolNodeConfigSoleTenantConfig { return v.SoleTenantConfig }).(NodePoolNodeConfigSoleTenantConfigPtrOutput)
}

// Whether the nodes are created as spot VM instances.
func (o NodePoolNodeConfigOutput) Spot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) *bool { return v.Spot }).(pulumi.BoolPtrOutput)
}

// The list of instance tags applied to all nodes.
func (o NodePoolNodeConfigOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// List of Kubernetes taints to be applied to each node.
func (o NodePoolNodeConfigOutput) Taints() NodePoolNodeConfigTaintArrayOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) []NodePoolNodeConfigTaint { return v.Taints }).(NodePoolNodeConfigTaintArrayOutput)
}

// The workload metadata configuration for this node.
func (o NodePoolNodeConfigOutput) WorkloadMetadataConfig() NodePoolNodeConfigWorkloadMetadataConfigPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) *NodePoolNodeConfigWorkloadMetadataConfig { return v.WorkloadMetadataConfig }).(NodePoolNodeConfigWorkloadMetadataConfigPtrOutput)
}

type NodePoolNodeConfigPtrOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolNodeConfig)(nil)).Elem()
}

func (o NodePoolNodeConfigPtrOutput) ToNodePoolNodeConfigPtrOutput() NodePoolNodeConfigPtrOutput {
	return o
}

func (o NodePoolNodeConfigPtrOutput) ToNodePoolNodeConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigPtrOutput {
	return o
}

func (o NodePoolNodeConfigPtrOutput) Elem() NodePoolNodeConfigOutput {
	return o.ApplyT(func(v *NodePoolNodeConfig) NodePoolNodeConfig {
		if v != nil {
			return *v
		}
		var ret NodePoolNodeConfig
		return ret
	}).(NodePoolNodeConfigOutput)
}

// Specifies options for controlling advanced machine features.
func (o NodePoolNodeConfigPtrOutput) AdvancedMachineFeatures() NodePoolNodeConfigAdvancedMachineFeaturesPtrOutput {
	return o.ApplyT(func(v *NodePoolNodeConfig) *NodePoolNodeConfigAdvancedMachineFeatures {
		if v == nil {
			return nil
		}
		return v.AdvancedMachineFeatures
	}).(NodePoolNodeConfigAdvancedMachineFeaturesPtrOutput)
}

// The Customer Managed Encryption Key used to encrypt the boot disk attached to each node in the node pool.
func (o NodePoolNodeConfigPtrOutput) BootDiskKmsKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodePoolNodeConfig) *string {
		if v == nil {
			return nil
		}
		return v.BootDiskKmsKey
	}).(pulumi.StringPtrOutput)
}

// Configuration for Confidential Nodes feature. Structure is documented below.
func (o NodePoolNodeConfigPtrOutput) ConfidentialNodes() NodePoolNodeConfigConfidentialNodesPtrOutput {
	return o.ApplyT(func(v *NodePoolNodeConfig) *NodePoolNodeConfigConfidentialNodes {
		if v == nil {
			return nil
		}
		return v.ConfidentialNodes
	}).(NodePoolNodeConfigConfidentialNodesPtrOutput)
}

// Size of the disk attached to each node, specified in GB. The smallest allowed disk size is 10GB.
func (o NodePoolNodeConfigPtrOutput) DiskSizeGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodePoolNodeConfig) *int {
		if v == nil {
			return nil
		}
		return v.DiskSizeGb
	}).(pulumi.IntPtrOutput)
}

// Type of the disk attached to each node. Such as pd-standard, pd-balanced or pd-ssd
func (o NodePoolNodeConfigPtrOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodePoolNodeConfig) *string {
		if v == nil {
			return nil
		}
		return v.DiskType
	}).(pulumi.StringPtrOutput)
}

// List of kubernetes taints applied to each node.
func (o NodePoolNodeConfigPtrOutput) EffectiveTaints() NodePoolNodeConfigEffectiveTaintArrayOutput {
	return o.ApplyT(func(v *NodePoolNodeConfig) []NodePoolNodeConfigEffectiveTaint {
		if v == nil {
			return nil
		}
		return v.EffectiveTaints
	}).(NodePoolNodeConfigEffectiveTaintArrayOutput)
}

// If enabled boot disks are configured with confidential mode.
func (o NodePoolNodeConfigPtrOutput) EnableConfidentialStorage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NodePoolNodeConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EnableConfidentialStorage
	}).(pulumi.BoolPtrOutput)
}

// Parameters for the ephemeral storage filesystem. If unspecified, ephemeral storage is backed by the boot disk.
func (o NodePoolNodeConfigPtrOutput) EphemeralStorageConfig() NodePoolNodeConfigEphemeralStorageConfigPtrOutput {
	return o.ApplyT(func(v *NodePoolNodeConfig) *NodePoolNodeConfigEphemeralStorageConfig {
		if v == nil {
			return nil
		}
		return v.EphemeralStorageConfig
	}).(NodePoolNodeConfigEphemeralStorageConfigPtrOutput)
}

// Parameters for the ephemeral storage filesystem. If unspecified, ephemeral storage is backed by the boot disk.
func (o NodePoolNodeConfigPtrOutput) EphemeralStorageLocalSsdConfig() NodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrOutput {
	return o.ApplyT(func(v *NodePoolNodeConfig) *NodePoolNodeConfigEphemeralStorageLocalSsdConfig {
		if v == nil {
			return nil
		}
		return v.EphemeralStorageLocalSsdConfig
	}).(NodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrOutput)
}

// Enable or disable NCCL Fast Socket in the node pool.
func (o NodePoolNodeConfigPtrOutput) FastSocket() NodePoolNodeConfigFastSocketPtrOutput {
	return o.ApplyT(func(v *NodePoolNodeConfig) *NodePoolNodeConfigFastSocket {
		if v == nil {
			return nil
		}
		return v.FastSocket
	}).(NodePoolNodeConfigFastSocketPtrOutput)
}

// GCFS configuration for this node.
func (o NodePoolNodeConfigPtrOutput) GcfsConfig() NodePoolNodeConfigGcfsConfigPtrOutput {
	return o.ApplyT(func(v *NodePoolNodeConfig) *NodePoolNodeConfigGcfsConfig {
		if v == nil {
			return nil
		}
		return v.GcfsConfig
	}).(NodePoolNodeConfigGcfsConfigPtrOutput)
}

// List of the type and count of accelerator cards attached to the instance.
func (o NodePoolNodeConfigPtrOutput) GuestAccelerators() NodePoolNodeConfigGuestAcceleratorArrayOutput {
	return o.ApplyT(func(v *NodePoolNodeConfig) []NodePoolNodeConfigGuestAccelerator {
		if v == nil {
			return nil
		}
		return v.GuestAccelerators
	}).(NodePoolNodeConfigGuestAcceleratorArrayOutput)
}

// Enable or disable gvnic in the node pool.
func (o NodePoolNodeConfigPtrOutput) Gvnic() NodePoolNodeConfigGvnicPtrOutput {
	return o.ApplyT(func(v *NodePoolNodeConfig) *NodePoolNodeConfigGvnic {
		if v == nil {
			return nil
		}
		return v.Gvnic
	}).(NodePoolNodeConfigGvnicPtrOutput)
}

// The maintenance policy for the hosts on which the GKE VMs run on.
func (o NodePoolNodeConfigPtrOutput) HostMaintenancePolicy() NodePoolNodeConfigHostMaintenancePolicyPtrOutput {
	return o.ApplyT(func(v *NodePoolNodeConfig) *NodePoolNodeConfigHostMaintenancePolicy {
		if v == nil {
			return nil
		}
		return v.HostMaintenancePolicy
	}).(NodePoolNodeConfigHostMaintenancePolicyPtrOutput)
}

// The image type to use for this node. Note that for a given image type, the latest version of it will be used.
func (o NodePoolNodeConfigPtrOutput) ImageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodePoolNodeConfig) *string {
		if v == nil {
			return nil
		}
		return v.ImageType
	}).(pulumi.StringPtrOutput)
}

// Node kubelet configs.
func (o NodePoolNodeConfigPtrOutput) KubeletConfig() NodePoolNodeConfigKubeletConfigPtrOutput {
	return o.ApplyT(func(v *NodePoolNodeConfig) *NodePoolNodeConfigKubeletConfig {
		if v == nil {
			return nil
		}
		return v.KubeletConfig
	}).(NodePoolNodeConfigKubeletConfigPtrOutput)
}

// The map of Kubernetes labels (key/value pairs) to be applied to each node. These will added in addition to any default label(s) that Kubernetes may apply to the node.
func (o NodePoolNodeConfigPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NodePoolNodeConfig) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// Parameters that can be configured on Linux nodes.
func (o NodePoolNodeConfigPtrOutput) LinuxNodeConfig() NodePoolNodeConfigLinuxNodeConfigPtrOutput {
	return o.ApplyT(func(v *NodePoolNodeConfig) *NodePoolNodeConfigLinuxNodeConfig {
		if v == nil {
			return nil
		}
		return v.LinuxNodeConfig
	}).(NodePoolNodeConfigLinuxNodeConfigPtrOutput)
}

// Parameters for raw-block local NVMe SSDs.
func (o NodePoolNodeConfigPtrOutput) LocalNvmeSsdBlockConfig() NodePoolNodeConfigLocalNvmeSsdBlockConfigPtrOutput {
	return o.ApplyT(func(v *NodePoolNodeConfig) *NodePoolNodeConfigLocalNvmeSsdBlockConfig {
		if v == nil {
			return nil
		}
		return v.LocalNvmeSsdBlockConfig
	}).(NodePoolNodeConfigLocalNvmeSsdBlockConfigPtrOutput)
}

// The number of local SSD disks to be attached to the node.
func (o NodePoolNodeConfigPtrOutput) LocalSsdCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodePoolNodeConfig) *int {
		if v == nil {
			return nil
		}
		return v.LocalSsdCount
	}).(pulumi.IntPtrOutput)
}

// Type of logging agent that is used as the default value for node pools in the cluster. Valid values include DEFAULT and MAX_THROUGHPUT.
func (o NodePoolNodeConfigPtrOutput) LoggingVariant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodePoolNodeConfig) *string {
		if v == nil {
			return nil
		}
		return v.LoggingVariant
	}).(pulumi.StringPtrOutput)
}

// The name of a Google Compute Engine machine type.
func (o NodePoolNodeConfigPtrOutput) MachineType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodePoolNodeConfig) *string {
		if v == nil {
			return nil
		}
		return v.MachineType
	}).(pulumi.StringPtrOutput)
}

// The metadata key/value pairs assigned to instances in the cluster.
func (o NodePoolNodeConfigPtrOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NodePoolNodeConfig) map[string]string {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(pulumi.StringMapOutput)
}

// Minimum CPU platform to be used by this instance. The instance may be scheduled on the specified or newer CPU platform.
func (o NodePoolNodeConfigPtrOutput) MinCpuPlatform() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodePoolNodeConfig) *string {
		if v == nil {
			return nil
		}
		return v.MinCpuPlatform
	}).(pulumi.StringPtrOutput)
}

// Setting this field will assign instances of this pool to run on the specified node group. This is useful for running workloads on sole tenant nodes.
func (o NodePoolNodeConfigPtrOutput) NodeGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodePoolNodeConfig) *string {
		if v == nil {
			return nil
		}
		return v.NodeGroup
	}).(pulumi.StringPtrOutput)
}

// The set of Google API scopes to be made available on all of the node VMs.
func (o NodePoolNodeConfigPtrOutput) OauthScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NodePoolNodeConfig) []string {
		if v == nil {
			return nil
		}
		return v.OauthScopes
	}).(pulumi.StringArrayOutput)
}

// Whether the nodes are created as preemptible VM instances.
func (o NodePoolNodeConfigPtrOutput) Preemptible() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NodePoolNodeConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Preemptible
	}).(pulumi.BoolPtrOutput)
}

// The reservation affinity configuration for the node pool.
func (o NodePoolNodeConfigPtrOutput) ReservationAffinity() NodePoolNodeConfigReservationAffinityPtrOutput {
	return o.ApplyT(func(v *NodePoolNodeConfig) *NodePoolNodeConfigReservationAffinity {
		if v == nil {
			return nil
		}
		return v.ReservationAffinity
	}).(NodePoolNodeConfigReservationAffinityPtrOutput)
}

// The GCE resource labels (a map of key/value pairs) to be applied to the node pool.
func (o NodePoolNodeConfigPtrOutput) ResourceLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NodePoolNodeConfig) map[string]string {
		if v == nil {
			return nil
		}
		return v.ResourceLabels
	}).(pulumi.StringMapOutput)
}

// A map of resource manager tags. Resource manager tag keys and values have the same definition as resource manager tags. Keys must be in the format tagKeys/{tag_key_id}, and values are in the format tagValues/456. The field is ignored (both PUT & PATCH) when empty.
func (o NodePoolNodeConfigPtrOutput) ResourceManagerTags() pulumi.MapOutput {
	return o.ApplyT(func(v *NodePoolNodeConfig) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.ResourceManagerTags
	}).(pulumi.MapOutput)
}

// Sandbox configuration for this node.
func (o NodePoolNodeConfigPtrOutput) SandboxConfig() NodePoolNodeConfigSandboxConfigPtrOutput {
	return o.ApplyT(func(v *NodePoolNodeConfig) *NodePoolNodeConfigSandboxConfig {
		if v == nil {
			return nil
		}
		return v.SandboxConfig
	}).(NodePoolNodeConfigSandboxConfigPtrOutput)
}

// Secondary boot disks for preloading data or container images.
func (o NodePoolNodeConfigPtrOutput) SecondaryBootDisks() NodePoolNodeConfigSecondaryBootDiskArrayOutput {
	return o.ApplyT(func(v *NodePoolNodeConfig) []NodePoolNodeConfigSecondaryBootDisk {
		if v == nil {
			return nil
		}
		return v.SecondaryBootDisks
	}).(NodePoolNodeConfigSecondaryBootDiskArrayOutput)
}

// The Google Cloud Platform Service Account to be used by the node VMs.
func (o NodePoolNodeConfigPtrOutput) ServiceAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodePoolNodeConfig) *string {
		if v == nil {
			return nil
		}
		return v.ServiceAccount
	}).(pulumi.StringPtrOutput)
}

// Shielded Instance options.
func (o NodePoolNodeConfigPtrOutput) ShieldedInstanceConfig() NodePoolNodeConfigShieldedInstanceConfigPtrOutput {
	return o.ApplyT(func(v *NodePoolNodeConfig) *NodePoolNodeConfigShieldedInstanceConfig {
		if v == nil {
			return nil
		}
		return v.ShieldedInstanceConfig
	}).(NodePoolNodeConfigShieldedInstanceConfigPtrOutput)
}

// Node affinity options for sole tenant node pools.
func (o NodePoolNodeConfigPtrOutput) SoleTenantConfig() NodePoolNodeConfigSoleTenantConfigPtrOutput {
	return o.ApplyT(func(v *NodePoolNodeConfig) *NodePoolNodeConfigSoleTenantConfig {
		if v == nil {
			return nil
		}
		return v.SoleTenantConfig
	}).(NodePoolNodeConfigSoleTenantConfigPtrOutput)
}

// Whether the nodes are created as spot VM instances.
func (o NodePoolNodeConfigPtrOutput) Spot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NodePoolNodeConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Spot
	}).(pulumi.BoolPtrOutput)
}

// The list of instance tags applied to all nodes.
func (o NodePoolNodeConfigPtrOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NodePoolNodeConfig) []string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringArrayOutput)
}

// List of Kubernetes taints to be applied to each node.
func (o NodePoolNodeConfigPtrOutput) Taints() NodePoolNodeConfigTaintArrayOutput {
	return o.ApplyT(func(v *NodePoolNodeConfig) []NodePoolNodeConfigTaint {
		if v == nil {
			return nil
		}
		return v.Taints
	}).(NodePoolNodeConfigTaintArrayOutput)
}

// The workload metadata configuration for this node.
func (o NodePoolNodeConfigPtrOutput) WorkloadMetadataConfig() NodePoolNodeConfigWorkloadMetadataConfigPtrOutput {
	return o.ApplyT(func(v *NodePoolNodeConfig) *NodePoolNodeConfigWorkloadMetadataConfig {
		if v == nil {
			return nil
		}
		return v.WorkloadMetadataConfig
	}).(NodePoolNodeConfigWorkloadMetadataConfigPtrOutput)
}

type NodePoolNodeConfigAdvancedMachineFeatures struct {
	// Whether the node should have nested virtualization enabled.
	EnableNestedVirtualization *bool `pulumi:"enableNestedVirtualization"`
	// The number of threads per physical core. To disable simultaneous multithreading (SMT) set this to 1. If unset, the maximum number of threads supported per core by the underlying processor is assumed.
	ThreadsPerCore int `pulumi:"threadsPerCore"`
}

// NodePoolNodeConfigAdvancedMachineFeaturesInput is an input type that accepts NodePoolNodeConfigAdvancedMachineFeaturesArgs and NodePoolNodeConfigAdvancedMachineFeaturesOutput values.
// You can construct a concrete instance of `NodePoolNodeConfigAdvancedMachineFeaturesInput` via:
//
//	NodePoolNodeConfigAdvancedMachineFeaturesArgs{...}
type NodePoolNodeConfigAdvancedMachineFeaturesInput interface {
	pulumi.Input

	ToNodePoolNodeConfigAdvancedMachineFeaturesOutput() NodePoolNodeConfigAdvancedMachineFeaturesOutput
	ToNodePoolNodeConfigAdvancedMachineFeaturesOutputWithContext(context.Context) NodePoolNodeConfigAdvancedMachineFeaturesOutput
}

type NodePoolNodeConfigAdvancedMachineFeaturesArgs struct {
	// Whether the node should have nested virtualization enabled.
	EnableNestedVirtualization pulumi.BoolPtrInput `pulumi:"enableNestedVirtualization"`
	// The number of threads per physical core. To disable simultaneous multithreading (SMT) set this to 1. If unset, the maximum number of threads supported per core by the underlying processor is assumed.
	ThreadsPerCore pulumi.IntInput `pulumi:"threadsPerCore"`
}

func (NodePoolNodeConfigAdvancedMachineFeaturesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigAdvancedMachineFeatures)(nil)).Elem()
}

func (i NodePoolNodeConfigAdvancedMachineFeaturesArgs) ToNodePoolNodeConfigAdvancedMachineFeaturesOutput() NodePoolNodeConfigAdvancedMachineFeaturesOutput {
	return i.ToNodePoolNodeConfigAdvancedMachineFeaturesOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigAdvancedMachineFeaturesArgs) ToNodePoolNodeConfigAdvancedMachineFeaturesOutputWithContext(ctx context.Context) NodePoolNodeConfigAdvancedMachineFeaturesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigAdvancedMachineFeaturesOutput)
}

func (i NodePoolNodeConfigAdvancedMachineFeaturesArgs) ToNodePoolNodeConfigAdvancedMachineFeaturesPtrOutput() NodePoolNodeConfigAdvancedMachineFeaturesPtrOutput {
	return i.ToNodePoolNodeConfigAdvancedMachineFeaturesPtrOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigAdvancedMachineFeaturesArgs) ToNodePoolNodeConfigAdvancedMachineFeaturesPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigAdvancedMachineFeaturesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigAdvancedMachineFeaturesOutput).ToNodePoolNodeConfigAdvancedMachineFeaturesPtrOutputWithContext(ctx)
}

// NodePoolNodeConfigAdvancedMachineFeaturesPtrInput is an input type that accepts NodePoolNodeConfigAdvancedMachineFeaturesArgs, NodePoolNodeConfigAdvancedMachineFeaturesPtr and NodePoolNodeConfigAdvancedMachineFeaturesPtrOutput values.
// You can construct a concrete instance of `NodePoolNodeConfigAdvancedMachineFeaturesPtrInput` via:
//
//	        NodePoolNodeConfigAdvancedMachineFeaturesArgs{...}
//
//	or:
//
//	        nil
type NodePoolNodeConfigAdvancedMachineFeaturesPtrInput interface {
	pulumi.Input

	ToNodePoolNodeConfigAdvancedMachineFeaturesPtrOutput() NodePoolNodeConfigAdvancedMachineFeaturesPtrOutput
	ToNodePoolNodeConfigAdvancedMachineFeaturesPtrOutputWithContext(context.Context) NodePoolNodeConfigAdvancedMachineFeaturesPtrOutput
}

type nodePoolNodeConfigAdvancedMachineFeaturesPtrType NodePoolNodeConfigAdvancedMachineFeaturesArgs

func NodePoolNodeConfigAdvancedMachineFeaturesPtr(v *NodePoolNodeConfigAdvancedMachineFeaturesArgs) NodePoolNodeConfigAdvancedMachineFeaturesPtrInput {
	return (*nodePoolNodeConfigAdvancedMachineFeaturesPtrType)(v)
}

func (*nodePoolNodeConfigAdvancedMachineFeaturesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolNodeConfigAdvancedMachineFeatures)(nil)).Elem()
}

func (i *nodePoolNodeConfigAdvancedMachineFeaturesPtrType) ToNodePoolNodeConfigAdvancedMachineFeaturesPtrOutput() NodePoolNodeConfigAdvancedMachineFeaturesPtrOutput {
	return i.ToNodePoolNodeConfigAdvancedMachineFeaturesPtrOutputWithContext(context.Background())
}

func (i *nodePoolNodeConfigAdvancedMachineFeaturesPtrType) ToNodePoolNodeConfigAdvancedMachineFeaturesPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigAdvancedMachineFeaturesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigAdvancedMachineFeaturesPtrOutput)
}

type NodePoolNodeConfigAdvancedMachineFeaturesOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigAdvancedMachineFeaturesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigAdvancedMachineFeatures)(nil)).Elem()
}

func (o NodePoolNodeConfigAdvancedMachineFeaturesOutput) ToNodePoolNodeConfigAdvancedMachineFeaturesOutput() NodePoolNodeConfigAdvancedMachineFeaturesOutput {
	return o
}

func (o NodePoolNodeConfigAdvancedMachineFeaturesOutput) ToNodePoolNodeConfigAdvancedMachineFeaturesOutputWithContext(ctx context.Context) NodePoolNodeConfigAdvancedMachineFeaturesOutput {
	return o
}

func (o NodePoolNodeConfigAdvancedMachineFeaturesOutput) ToNodePoolNodeConfigAdvancedMachineFeaturesPtrOutput() NodePoolNodeConfigAdvancedMachineFeaturesPtrOutput {
	return o.ToNodePoolNodeConfigAdvancedMachineFeaturesPtrOutputWithContext(context.Background())
}

func (o NodePoolNodeConfigAdvancedMachineFeaturesOutput) ToNodePoolNodeConfigAdvancedMachineFeaturesPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigAdvancedMachineFeaturesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NodePoolNodeConfigAdvancedMachineFeatures) *NodePoolNodeConfigAdvancedMachineFeatures {
		return &v
	}).(NodePoolNodeConfigAdvancedMachineFeaturesPtrOutput)
}

// Whether the node should have nested virtualization enabled.
func (o NodePoolNodeConfigAdvancedMachineFeaturesOutput) EnableNestedVirtualization() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigAdvancedMachineFeatures) *bool { return v.EnableNestedVirtualization }).(pulumi.BoolPtrOutput)
}

// The number of threads per physical core. To disable simultaneous multithreading (SMT) set this to 1. If unset, the maximum number of threads supported per core by the underlying processor is assumed.
func (o NodePoolNodeConfigAdvancedMachineFeaturesOutput) ThreadsPerCore() pulumi.IntOutput {
	return o.ApplyT(func(v NodePoolNodeConfigAdvancedMachineFeatures) int { return v.ThreadsPerCore }).(pulumi.IntOutput)
}

type NodePoolNodeConfigAdvancedMachineFeaturesPtrOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigAdvancedMachineFeaturesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolNodeConfigAdvancedMachineFeatures)(nil)).Elem()
}

func (o NodePoolNodeConfigAdvancedMachineFeaturesPtrOutput) ToNodePoolNodeConfigAdvancedMachineFeaturesPtrOutput() NodePoolNodeConfigAdvancedMachineFeaturesPtrOutput {
	return o
}

func (o NodePoolNodeConfigAdvancedMachineFeaturesPtrOutput) ToNodePoolNodeConfigAdvancedMachineFeaturesPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigAdvancedMachineFeaturesPtrOutput {
	return o
}

func (o NodePoolNodeConfigAdvancedMachineFeaturesPtrOutput) Elem() NodePoolNodeConfigAdvancedMachineFeaturesOutput {
	return o.ApplyT(func(v *NodePoolNodeConfigAdvancedMachineFeatures) NodePoolNodeConfigAdvancedMachineFeatures {
		if v != nil {
			return *v
		}
		var ret NodePoolNodeConfigAdvancedMachineFeatures
		return ret
	}).(NodePoolNodeConfigAdvancedMachineFeaturesOutput)
}

// Whether the node should have nested virtualization enabled.
func (o NodePoolNodeConfigAdvancedMachineFeaturesPtrOutput) EnableNestedVirtualization() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NodePoolNodeConfigAdvancedMachineFeatures) *bool {
		if v == nil {
			return nil
		}
		return v.EnableNestedVirtualization
	}).(pulumi.BoolPtrOutput)
}

// The number of threads per physical core. To disable simultaneous multithreading (SMT) set this to 1. If unset, the maximum number of threads supported per core by the underlying processor is assumed.
func (o NodePoolNodeConfigAdvancedMachineFeaturesPtrOutput) ThreadsPerCore() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodePoolNodeConfigAdvancedMachineFeatures) *int {
		if v == nil {
			return nil
		}
		return &v.ThreadsPerCore
	}).(pulumi.IntPtrOutput)
}

type NodePoolNodeConfigConfidentialNodes struct {
	// Enable Confidential GKE Nodes for this cluster, to
	// enforce encryption of data in-use.
	Enabled bool `pulumi:"enabled"`
}

// NodePoolNodeConfigConfidentialNodesInput is an input type that accepts NodePoolNodeConfigConfidentialNodesArgs and NodePoolNodeConfigConfidentialNodesOutput values.
// You can construct a concrete instance of `NodePoolNodeConfigConfidentialNodesInput` via:
//
//	NodePoolNodeConfigConfidentialNodesArgs{...}
type NodePoolNodeConfigConfidentialNodesInput interface {
	pulumi.Input

	ToNodePoolNodeConfigConfidentialNodesOutput() NodePoolNodeConfigConfidentialNodesOutput
	ToNodePoolNodeConfigConfidentialNodesOutputWithContext(context.Context) NodePoolNodeConfigConfidentialNodesOutput
}

type NodePoolNodeConfigConfidentialNodesArgs struct {
	// Enable Confidential GKE Nodes for this cluster, to
	// enforce encryption of data in-use.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (NodePoolNodeConfigConfidentialNodesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigConfidentialNodes)(nil)).Elem()
}

func (i NodePoolNodeConfigConfidentialNodesArgs) ToNodePoolNodeConfigConfidentialNodesOutput() NodePoolNodeConfigConfidentialNodesOutput {
	return i.ToNodePoolNodeConfigConfidentialNodesOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigConfidentialNodesArgs) ToNodePoolNodeConfigConfidentialNodesOutputWithContext(ctx context.Context) NodePoolNodeConfigConfidentialNodesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigConfidentialNodesOutput)
}

func (i NodePoolNodeConfigConfidentialNodesArgs) ToNodePoolNodeConfigConfidentialNodesPtrOutput() NodePoolNodeConfigConfidentialNodesPtrOutput {
	return i.ToNodePoolNodeConfigConfidentialNodesPtrOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigConfidentialNodesArgs) ToNodePoolNodeConfigConfidentialNodesPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigConfidentialNodesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigConfidentialNodesOutput).ToNodePoolNodeConfigConfidentialNodesPtrOutputWithContext(ctx)
}

// NodePoolNodeConfigConfidentialNodesPtrInput is an input type that accepts NodePoolNodeConfigConfidentialNodesArgs, NodePoolNodeConfigConfidentialNodesPtr and NodePoolNodeConfigConfidentialNodesPtrOutput values.
// You can construct a concrete instance of `NodePoolNodeConfigConfidentialNodesPtrInput` via:
//
//	        NodePoolNodeConfigConfidentialNodesArgs{...}
//
//	or:
//
//	        nil
type NodePoolNodeConfigConfidentialNodesPtrInput interface {
	pulumi.Input

	ToNodePoolNodeConfigConfidentialNodesPtrOutput() NodePoolNodeConfigConfidentialNodesPtrOutput
	ToNodePoolNodeConfigConfidentialNodesPtrOutputWithContext(context.Context) NodePoolNodeConfigConfidentialNodesPtrOutput
}

type nodePoolNodeConfigConfidentialNodesPtrType NodePoolNodeConfigConfidentialNodesArgs

func NodePoolNodeConfigConfidentialNodesPtr(v *NodePoolNodeConfigConfidentialNodesArgs) NodePoolNodeConfigConfidentialNodesPtrInput {
	return (*nodePoolNodeConfigConfidentialNodesPtrType)(v)
}

func (*nodePoolNodeConfigConfidentialNodesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolNodeConfigConfidentialNodes)(nil)).Elem()
}

func (i *nodePoolNodeConfigConfidentialNodesPtrType) ToNodePoolNodeConfigConfidentialNodesPtrOutput() NodePoolNodeConfigConfidentialNodesPtrOutput {
	return i.ToNodePoolNodeConfigConfidentialNodesPtrOutputWithContext(context.Background())
}

func (i *nodePoolNodeConfigConfidentialNodesPtrType) ToNodePoolNodeConfigConfidentialNodesPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigConfidentialNodesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigConfidentialNodesPtrOutput)
}

type NodePoolNodeConfigConfidentialNodesOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigConfidentialNodesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigConfidentialNodes)(nil)).Elem()
}

func (o NodePoolNodeConfigConfidentialNodesOutput) ToNodePoolNodeConfigConfidentialNodesOutput() NodePoolNodeConfigConfidentialNodesOutput {
	return o
}

func (o NodePoolNodeConfigConfidentialNodesOutput) ToNodePoolNodeConfigConfidentialNodesOutputWithContext(ctx context.Context) NodePoolNodeConfigConfidentialNodesOutput {
	return o
}

func (o NodePoolNodeConfigConfidentialNodesOutput) ToNodePoolNodeConfigConfidentialNodesPtrOutput() NodePoolNodeConfigConfidentialNodesPtrOutput {
	return o.ToNodePoolNodeConfigConfidentialNodesPtrOutputWithContext(context.Background())
}

func (o NodePoolNodeConfigConfidentialNodesOutput) ToNodePoolNodeConfigConfidentialNodesPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigConfidentialNodesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NodePoolNodeConfigConfidentialNodes) *NodePoolNodeConfigConfidentialNodes {
		return &v
	}).(NodePoolNodeConfigConfidentialNodesPtrOutput)
}

// Enable Confidential GKE Nodes for this cluster, to
// enforce encryption of data in-use.
func (o NodePoolNodeConfigConfidentialNodesOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v NodePoolNodeConfigConfidentialNodes) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type NodePoolNodeConfigConfidentialNodesPtrOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigConfidentialNodesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolNodeConfigConfidentialNodes)(nil)).Elem()
}

func (o NodePoolNodeConfigConfidentialNodesPtrOutput) ToNodePoolNodeConfigConfidentialNodesPtrOutput() NodePoolNodeConfigConfidentialNodesPtrOutput {
	return o
}

func (o NodePoolNodeConfigConfidentialNodesPtrOutput) ToNodePoolNodeConfigConfidentialNodesPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigConfidentialNodesPtrOutput {
	return o
}

func (o NodePoolNodeConfigConfidentialNodesPtrOutput) Elem() NodePoolNodeConfigConfidentialNodesOutput {
	return o.ApplyT(func(v *NodePoolNodeConfigConfidentialNodes) NodePoolNodeConfigConfidentialNodes {
		if v != nil {
			return *v
		}
		var ret NodePoolNodeConfigConfidentialNodes
		return ret
	}).(NodePoolNodeConfigConfidentialNodesOutput)
}

// Enable Confidential GKE Nodes for this cluster, to
// enforce encryption of data in-use.
func (o NodePoolNodeConfigConfidentialNodesPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NodePoolNodeConfigConfidentialNodes) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type NodePoolNodeConfigEffectiveTaint struct {
	// Effect for taint.
	Effect *string `pulumi:"effect"`
	// Key for taint.
	Key *string `pulumi:"key"`
	// Value for taint.
	Value *string `pulumi:"value"`
}

// NodePoolNodeConfigEffectiveTaintInput is an input type that accepts NodePoolNodeConfigEffectiveTaintArgs and NodePoolNodeConfigEffectiveTaintOutput values.
// You can construct a concrete instance of `NodePoolNodeConfigEffectiveTaintInput` via:
//
//	NodePoolNodeConfigEffectiveTaintArgs{...}
type NodePoolNodeConfigEffectiveTaintInput interface {
	pulumi.Input

	ToNodePoolNodeConfigEffectiveTaintOutput() NodePoolNodeConfigEffectiveTaintOutput
	ToNodePoolNodeConfigEffectiveTaintOutputWithContext(context.Context) NodePoolNodeConfigEffectiveTaintOutput
}

type NodePoolNodeConfigEffectiveTaintArgs struct {
	// Effect for taint.
	Effect pulumi.StringPtrInput `pulumi:"effect"`
	// Key for taint.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Value for taint.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (NodePoolNodeConfigEffectiveTaintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigEffectiveTaint)(nil)).Elem()
}

func (i NodePoolNodeConfigEffectiveTaintArgs) ToNodePoolNodeConfigEffectiveTaintOutput() NodePoolNodeConfigEffectiveTaintOutput {
	return i.ToNodePoolNodeConfigEffectiveTaintOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigEffectiveTaintArgs) ToNodePoolNodeConfigEffectiveTaintOutputWithContext(ctx context.Context) NodePoolNodeConfigEffectiveTaintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigEffectiveTaintOutput)
}

// NodePoolNodeConfigEffectiveTaintArrayInput is an input type that accepts NodePoolNodeConfigEffectiveTaintArray and NodePoolNodeConfigEffectiveTaintArrayOutput values.
// You can construct a concrete instance of `NodePoolNodeConfigEffectiveTaintArrayInput` via:
//
//	NodePoolNodeConfigEffectiveTaintArray{ NodePoolNodeConfigEffectiveTaintArgs{...} }
type NodePoolNodeConfigEffectiveTaintArrayInput interface {
	pulumi.Input

	ToNodePoolNodeConfigEffectiveTaintArrayOutput() NodePoolNodeConfigEffectiveTaintArrayOutput
	ToNodePoolNodeConfigEffectiveTaintArrayOutputWithContext(context.Context) NodePoolNodeConfigEffectiveTaintArrayOutput
}

type NodePoolNodeConfigEffectiveTaintArray []NodePoolNodeConfigEffectiveTaintInput

func (NodePoolNodeConfigEffectiveTaintArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodePoolNodeConfigEffectiveTaint)(nil)).Elem()
}

func (i NodePoolNodeConfigEffectiveTaintArray) ToNodePoolNodeConfigEffectiveTaintArrayOutput() NodePoolNodeConfigEffectiveTaintArrayOutput {
	return i.ToNodePoolNodeConfigEffectiveTaintArrayOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigEffectiveTaintArray) ToNodePoolNodeConfigEffectiveTaintArrayOutputWithContext(ctx context.Context) NodePoolNodeConfigEffectiveTaintArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigEffectiveTaintArrayOutput)
}

type NodePoolNodeConfigEffectiveTaintOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigEffectiveTaintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigEffectiveTaint)(nil)).Elem()
}

func (o NodePoolNodeConfigEffectiveTaintOutput) ToNodePoolNodeConfigEffectiveTaintOutput() NodePoolNodeConfigEffectiveTaintOutput {
	return o
}

func (o NodePoolNodeConfigEffectiveTaintOutput) ToNodePoolNodeConfigEffectiveTaintOutputWithContext(ctx context.Context) NodePoolNodeConfigEffectiveTaintOutput {
	return o
}

// Effect for taint.
func (o NodePoolNodeConfigEffectiveTaintOutput) Effect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigEffectiveTaint) *string { return v.Effect }).(pulumi.StringPtrOutput)
}

// Key for taint.
func (o NodePoolNodeConfigEffectiveTaintOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigEffectiveTaint) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Value for taint.
func (o NodePoolNodeConfigEffectiveTaintOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigEffectiveTaint) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NodePoolNodeConfigEffectiveTaintArrayOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigEffectiveTaintArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodePoolNodeConfigEffectiveTaint)(nil)).Elem()
}

func (o NodePoolNodeConfigEffectiveTaintArrayOutput) ToNodePoolNodeConfigEffectiveTaintArrayOutput() NodePoolNodeConfigEffectiveTaintArrayOutput {
	return o
}

func (o NodePoolNodeConfigEffectiveTaintArrayOutput) ToNodePoolNodeConfigEffectiveTaintArrayOutputWithContext(ctx context.Context) NodePoolNodeConfigEffectiveTaintArrayOutput {
	return o
}

func (o NodePoolNodeConfigEffectiveTaintArrayOutput) Index(i pulumi.IntInput) NodePoolNodeConfigEffectiveTaintOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NodePoolNodeConfigEffectiveTaint {
		return vs[0].([]NodePoolNodeConfigEffectiveTaint)[vs[1].(int)]
	}).(NodePoolNodeConfigEffectiveTaintOutput)
}

type NodePoolNodeConfigEphemeralStorageConfig struct {
	// Number of local SSDs to use to back ephemeral storage. Uses NVMe interfaces. Each local SSD must be 375 or 3000 GB in size, and all local SSDs must share the same size.
	LocalSsdCount int `pulumi:"localSsdCount"`
}

// NodePoolNodeConfigEphemeralStorageConfigInput is an input type that accepts NodePoolNodeConfigEphemeralStorageConfigArgs and NodePoolNodeConfigEphemeralStorageConfigOutput values.
// You can construct a concrete instance of `NodePoolNodeConfigEphemeralStorageConfigInput` via:
//
//	NodePoolNodeConfigEphemeralStorageConfigArgs{...}
type NodePoolNodeConfigEphemeralStorageConfigInput interface {
	pulumi.Input

	ToNodePoolNodeConfigEphemeralStorageConfigOutput() NodePoolNodeConfigEphemeralStorageConfigOutput
	ToNodePoolNodeConfigEphemeralStorageConfigOutputWithContext(context.Context) NodePoolNodeConfigEphemeralStorageConfigOutput
}

type NodePoolNodeConfigEphemeralStorageConfigArgs struct {
	// Number of local SSDs to use to back ephemeral storage. Uses NVMe interfaces. Each local SSD must be 375 or 3000 GB in size, and all local SSDs must share the same size.
	LocalSsdCount pulumi.IntInput `pulumi:"localSsdCount"`
}

func (NodePoolNodeConfigEphemeralStorageConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigEphemeralStorageConfig)(nil)).Elem()
}

func (i NodePoolNodeConfigEphemeralStorageConfigArgs) ToNodePoolNodeConfigEphemeralStorageConfigOutput() NodePoolNodeConfigEphemeralStorageConfigOutput {
	return i.ToNodePoolNodeConfigEphemeralStorageConfigOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigEphemeralStorageConfigArgs) ToNodePoolNodeConfigEphemeralStorageConfigOutputWithContext(ctx context.Context) NodePoolNodeConfigEphemeralStorageConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigEphemeralStorageConfigOutput)
}

func (i NodePoolNodeConfigEphemeralStorageConfigArgs) ToNodePoolNodeConfigEphemeralStorageConfigPtrOutput() NodePoolNodeConfigEphemeralStorageConfigPtrOutput {
	return i.ToNodePoolNodeConfigEphemeralStorageConfigPtrOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigEphemeralStorageConfigArgs) ToNodePoolNodeConfigEphemeralStorageConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigEphemeralStorageConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigEphemeralStorageConfigOutput).ToNodePoolNodeConfigEphemeralStorageConfigPtrOutputWithContext(ctx)
}

// NodePoolNodeConfigEphemeralStorageConfigPtrInput is an input type that accepts NodePoolNodeConfigEphemeralStorageConfigArgs, NodePoolNodeConfigEphemeralStorageConfigPtr and NodePoolNodeConfigEphemeralStorageConfigPtrOutput values.
// You can construct a concrete instance of `NodePoolNodeConfigEphemeralStorageConfigPtrInput` via:
//
//	        NodePoolNodeConfigEphemeralStorageConfigArgs{...}
//
//	or:
//
//	        nil
type NodePoolNodeConfigEphemeralStorageConfigPtrInput interface {
	pulumi.Input

	ToNodePoolNodeConfigEphemeralStorageConfigPtrOutput() NodePoolNodeConfigEphemeralStorageConfigPtrOutput
	ToNodePoolNodeConfigEphemeralStorageConfigPtrOutputWithContext(context.Context) NodePoolNodeConfigEphemeralStorageConfigPtrOutput
}

type nodePoolNodeConfigEphemeralStorageConfigPtrType NodePoolNodeConfigEphemeralStorageConfigArgs

func NodePoolNodeConfigEphemeralStorageConfigPtr(v *NodePoolNodeConfigEphemeralStorageConfigArgs) NodePoolNodeConfigEphemeralStorageConfigPtrInput {
	return (*nodePoolNodeConfigEphemeralStorageConfigPtrType)(v)
}

func (*nodePoolNodeConfigEphemeralStorageConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolNodeConfigEphemeralStorageConfig)(nil)).Elem()
}

func (i *nodePoolNodeConfigEphemeralStorageConfigPtrType) ToNodePoolNodeConfigEphemeralStorageConfigPtrOutput() NodePoolNodeConfigEphemeralStorageConfigPtrOutput {
	return i.ToNodePoolNodeConfigEphemeralStorageConfigPtrOutputWithContext(context.Background())
}

func (i *nodePoolNodeConfigEphemeralStorageConfigPtrType) ToNodePoolNodeConfigEphemeralStorageConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigEphemeralStorageConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigEphemeralStorageConfigPtrOutput)
}

type NodePoolNodeConfigEphemeralStorageConfigOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigEphemeralStorageConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigEphemeralStorageConfig)(nil)).Elem()
}

func (o NodePoolNodeConfigEphemeralStorageConfigOutput) ToNodePoolNodeConfigEphemeralStorageConfigOutput() NodePoolNodeConfigEphemeralStorageConfigOutput {
	return o
}

func (o NodePoolNodeConfigEphemeralStorageConfigOutput) ToNodePoolNodeConfigEphemeralStorageConfigOutputWithContext(ctx context.Context) NodePoolNodeConfigEphemeralStorageConfigOutput {
	return o
}

func (o NodePoolNodeConfigEphemeralStorageConfigOutput) ToNodePoolNodeConfigEphemeralStorageConfigPtrOutput() NodePoolNodeConfigEphemeralStorageConfigPtrOutput {
	return o.ToNodePoolNodeConfigEphemeralStorageConfigPtrOutputWithContext(context.Background())
}

func (o NodePoolNodeConfigEphemeralStorageConfigOutput) ToNodePoolNodeConfigEphemeralStorageConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigEphemeralStorageConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NodePoolNodeConfigEphemeralStorageConfig) *NodePoolNodeConfigEphemeralStorageConfig {
		return &v
	}).(NodePoolNodeConfigEphemeralStorageConfigPtrOutput)
}

// Number of local SSDs to use to back ephemeral storage. Uses NVMe interfaces. Each local SSD must be 375 or 3000 GB in size, and all local SSDs must share the same size.
func (o NodePoolNodeConfigEphemeralStorageConfigOutput) LocalSsdCount() pulumi.IntOutput {
	return o.ApplyT(func(v NodePoolNodeConfigEphemeralStorageConfig) int { return v.LocalSsdCount }).(pulumi.IntOutput)
}

type NodePoolNodeConfigEphemeralStorageConfigPtrOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigEphemeralStorageConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolNodeConfigEphemeralStorageConfig)(nil)).Elem()
}

func (o NodePoolNodeConfigEphemeralStorageConfigPtrOutput) ToNodePoolNodeConfigEphemeralStorageConfigPtrOutput() NodePoolNodeConfigEphemeralStorageConfigPtrOutput {
	return o
}

func (o NodePoolNodeConfigEphemeralStorageConfigPtrOutput) ToNodePoolNodeConfigEphemeralStorageConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigEphemeralStorageConfigPtrOutput {
	return o
}

func (o NodePoolNodeConfigEphemeralStorageConfigPtrOutput) Elem() NodePoolNodeConfigEphemeralStorageConfigOutput {
	return o.ApplyT(func(v *NodePoolNodeConfigEphemeralStorageConfig) NodePoolNodeConfigEphemeralStorageConfig {
		if v != nil {
			return *v
		}
		var ret NodePoolNodeConfigEphemeralStorageConfig
		return ret
	}).(NodePoolNodeConfigEphemeralStorageConfigOutput)
}

// Number of local SSDs to use to back ephemeral storage. Uses NVMe interfaces. Each local SSD must be 375 or 3000 GB in size, and all local SSDs must share the same size.
func (o NodePoolNodeConfigEphemeralStorageConfigPtrOutput) LocalSsdCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodePoolNodeConfigEphemeralStorageConfig) *int {
		if v == nil {
			return nil
		}
		return &v.LocalSsdCount
	}).(pulumi.IntPtrOutput)
}

type NodePoolNodeConfigEphemeralStorageLocalSsdConfig struct {
	// Number of local SSDs to use to back ephemeral storage. Uses NVMe interfaces. Each local SSD must be 375 or 3000 GB in size, and all local SSDs must share the same size.
	LocalSsdCount int `pulumi:"localSsdCount"`
}

// NodePoolNodeConfigEphemeralStorageLocalSsdConfigInput is an input type that accepts NodePoolNodeConfigEphemeralStorageLocalSsdConfigArgs and NodePoolNodeConfigEphemeralStorageLocalSsdConfigOutput values.
// You can construct a concrete instance of `NodePoolNodeConfigEphemeralStorageLocalSsdConfigInput` via:
//
//	NodePoolNodeConfigEphemeralStorageLocalSsdConfigArgs{...}
type NodePoolNodeConfigEphemeralStorageLocalSsdConfigInput interface {
	pulumi.Input

	ToNodePoolNodeConfigEphemeralStorageLocalSsdConfigOutput() NodePoolNodeConfigEphemeralStorageLocalSsdConfigOutput
	ToNodePoolNodeConfigEphemeralStorageLocalSsdConfigOutputWithContext(context.Context) NodePoolNodeConfigEphemeralStorageLocalSsdConfigOutput
}

type NodePoolNodeConfigEphemeralStorageLocalSsdConfigArgs struct {
	// Number of local SSDs to use to back ephemeral storage. Uses NVMe interfaces. Each local SSD must be 375 or 3000 GB in size, and all local SSDs must share the same size.
	LocalSsdCount pulumi.IntInput `pulumi:"localSsdCount"`
}

func (NodePoolNodeConfigEphemeralStorageLocalSsdConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigEphemeralStorageLocalSsdConfig)(nil)).Elem()
}

func (i NodePoolNodeConfigEphemeralStorageLocalSsdConfigArgs) ToNodePoolNodeConfigEphemeralStorageLocalSsdConfigOutput() NodePoolNodeConfigEphemeralStorageLocalSsdConfigOutput {
	return i.ToNodePoolNodeConfigEphemeralStorageLocalSsdConfigOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigEphemeralStorageLocalSsdConfigArgs) ToNodePoolNodeConfigEphemeralStorageLocalSsdConfigOutputWithContext(ctx context.Context) NodePoolNodeConfigEphemeralStorageLocalSsdConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigEphemeralStorageLocalSsdConfigOutput)
}

func (i NodePoolNodeConfigEphemeralStorageLocalSsdConfigArgs) ToNodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrOutput() NodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrOutput {
	return i.ToNodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigEphemeralStorageLocalSsdConfigArgs) ToNodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigEphemeralStorageLocalSsdConfigOutput).ToNodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrOutputWithContext(ctx)
}

// NodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrInput is an input type that accepts NodePoolNodeConfigEphemeralStorageLocalSsdConfigArgs, NodePoolNodeConfigEphemeralStorageLocalSsdConfigPtr and NodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrOutput values.
// You can construct a concrete instance of `NodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrInput` via:
//
//	        NodePoolNodeConfigEphemeralStorageLocalSsdConfigArgs{...}
//
//	or:
//
//	        nil
type NodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrInput interface {
	pulumi.Input

	ToNodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrOutput() NodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrOutput
	ToNodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrOutputWithContext(context.Context) NodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrOutput
}

type nodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrType NodePoolNodeConfigEphemeralStorageLocalSsdConfigArgs

func NodePoolNodeConfigEphemeralStorageLocalSsdConfigPtr(v *NodePoolNodeConfigEphemeralStorageLocalSsdConfigArgs) NodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrInput {
	return (*nodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrType)(v)
}

func (*nodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolNodeConfigEphemeralStorageLocalSsdConfig)(nil)).Elem()
}

func (i *nodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrType) ToNodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrOutput() NodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrOutput {
	return i.ToNodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrOutputWithContext(context.Background())
}

func (i *nodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrType) ToNodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrOutput)
}

type NodePoolNodeConfigEphemeralStorageLocalSsdConfigOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigEphemeralStorageLocalSsdConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigEphemeralStorageLocalSsdConfig)(nil)).Elem()
}

func (o NodePoolNodeConfigEphemeralStorageLocalSsdConfigOutput) ToNodePoolNodeConfigEphemeralStorageLocalSsdConfigOutput() NodePoolNodeConfigEphemeralStorageLocalSsdConfigOutput {
	return o
}

func (o NodePoolNodeConfigEphemeralStorageLocalSsdConfigOutput) ToNodePoolNodeConfigEphemeralStorageLocalSsdConfigOutputWithContext(ctx context.Context) NodePoolNodeConfigEphemeralStorageLocalSsdConfigOutput {
	return o
}

func (o NodePoolNodeConfigEphemeralStorageLocalSsdConfigOutput) ToNodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrOutput() NodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrOutput {
	return o.ToNodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrOutputWithContext(context.Background())
}

func (o NodePoolNodeConfigEphemeralStorageLocalSsdConfigOutput) ToNodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NodePoolNodeConfigEphemeralStorageLocalSsdConfig) *NodePoolNodeConfigEphemeralStorageLocalSsdConfig {
		return &v
	}).(NodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrOutput)
}

// Number of local SSDs to use to back ephemeral storage. Uses NVMe interfaces. Each local SSD must be 375 or 3000 GB in size, and all local SSDs must share the same size.
func (o NodePoolNodeConfigEphemeralStorageLocalSsdConfigOutput) LocalSsdCount() pulumi.IntOutput {
	return o.ApplyT(func(v NodePoolNodeConfigEphemeralStorageLocalSsdConfig) int { return v.LocalSsdCount }).(pulumi.IntOutput)
}

type NodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolNodeConfigEphemeralStorageLocalSsdConfig)(nil)).Elem()
}

func (o NodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrOutput) ToNodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrOutput() NodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrOutput {
	return o
}

func (o NodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrOutput) ToNodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrOutput {
	return o
}

func (o NodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrOutput) Elem() NodePoolNodeConfigEphemeralStorageLocalSsdConfigOutput {
	return o.ApplyT(func(v *NodePoolNodeConfigEphemeralStorageLocalSsdConfig) NodePoolNodeConfigEphemeralStorageLocalSsdConfig {
		if v != nil {
			return *v
		}
		var ret NodePoolNodeConfigEphemeralStorageLocalSsdConfig
		return ret
	}).(NodePoolNodeConfigEphemeralStorageLocalSsdConfigOutput)
}

// Number of local SSDs to use to back ephemeral storage. Uses NVMe interfaces. Each local SSD must be 375 or 3000 GB in size, and all local SSDs must share the same size.
func (o NodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrOutput) LocalSsdCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodePoolNodeConfigEphemeralStorageLocalSsdConfig) *int {
		if v == nil {
			return nil
		}
		return &v.LocalSsdCount
	}).(pulumi.IntPtrOutput)
}

type NodePoolNodeConfigFastSocket struct {
	// Whether or not NCCL Fast Socket is enabled
	Enabled bool `pulumi:"enabled"`
}

// NodePoolNodeConfigFastSocketInput is an input type that accepts NodePoolNodeConfigFastSocketArgs and NodePoolNodeConfigFastSocketOutput values.
// You can construct a concrete instance of `NodePoolNodeConfigFastSocketInput` via:
//
//	NodePoolNodeConfigFastSocketArgs{...}
type NodePoolNodeConfigFastSocketInput interface {
	pulumi.Input

	ToNodePoolNodeConfigFastSocketOutput() NodePoolNodeConfigFastSocketOutput
	ToNodePoolNodeConfigFastSocketOutputWithContext(context.Context) NodePoolNodeConfigFastSocketOutput
}

type NodePoolNodeConfigFastSocketArgs struct {
	// Whether or not NCCL Fast Socket is enabled
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (NodePoolNodeConfigFastSocketArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigFastSocket)(nil)).Elem()
}

func (i NodePoolNodeConfigFastSocketArgs) ToNodePoolNodeConfigFastSocketOutput() NodePoolNodeConfigFastSocketOutput {
	return i.ToNodePoolNodeConfigFastSocketOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigFastSocketArgs) ToNodePoolNodeConfigFastSocketOutputWithContext(ctx context.Context) NodePoolNodeConfigFastSocketOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigFastSocketOutput)
}

func (i NodePoolNodeConfigFastSocketArgs) ToNodePoolNodeConfigFastSocketPtrOutput() NodePoolNodeConfigFastSocketPtrOutput {
	return i.ToNodePoolNodeConfigFastSocketPtrOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigFastSocketArgs) ToNodePoolNodeConfigFastSocketPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigFastSocketPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigFastSocketOutput).ToNodePoolNodeConfigFastSocketPtrOutputWithContext(ctx)
}

// NodePoolNodeConfigFastSocketPtrInput is an input type that accepts NodePoolNodeConfigFastSocketArgs, NodePoolNodeConfigFastSocketPtr and NodePoolNodeConfigFastSocketPtrOutput values.
// You can construct a concrete instance of `NodePoolNodeConfigFastSocketPtrInput` via:
//
//	        NodePoolNodeConfigFastSocketArgs{...}
//
//	or:
//
//	        nil
type NodePoolNodeConfigFastSocketPtrInput interface {
	pulumi.Input

	ToNodePoolNodeConfigFastSocketPtrOutput() NodePoolNodeConfigFastSocketPtrOutput
	ToNodePoolNodeConfigFastSocketPtrOutputWithContext(context.Context) NodePoolNodeConfigFastSocketPtrOutput
}

type nodePoolNodeConfigFastSocketPtrType NodePoolNodeConfigFastSocketArgs

func NodePoolNodeConfigFastSocketPtr(v *NodePoolNodeConfigFastSocketArgs) NodePoolNodeConfigFastSocketPtrInput {
	return (*nodePoolNodeConfigFastSocketPtrType)(v)
}

func (*nodePoolNodeConfigFastSocketPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolNodeConfigFastSocket)(nil)).Elem()
}

func (i *nodePoolNodeConfigFastSocketPtrType) ToNodePoolNodeConfigFastSocketPtrOutput() NodePoolNodeConfigFastSocketPtrOutput {
	return i.ToNodePoolNodeConfigFastSocketPtrOutputWithContext(context.Background())
}

func (i *nodePoolNodeConfigFastSocketPtrType) ToNodePoolNodeConfigFastSocketPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigFastSocketPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigFastSocketPtrOutput)
}

type NodePoolNodeConfigFastSocketOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigFastSocketOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigFastSocket)(nil)).Elem()
}

func (o NodePoolNodeConfigFastSocketOutput) ToNodePoolNodeConfigFastSocketOutput() NodePoolNodeConfigFastSocketOutput {
	return o
}

func (o NodePoolNodeConfigFastSocketOutput) ToNodePoolNodeConfigFastSocketOutputWithContext(ctx context.Context) NodePoolNodeConfigFastSocketOutput {
	return o
}

func (o NodePoolNodeConfigFastSocketOutput) ToNodePoolNodeConfigFastSocketPtrOutput() NodePoolNodeConfigFastSocketPtrOutput {
	return o.ToNodePoolNodeConfigFastSocketPtrOutputWithContext(context.Background())
}

func (o NodePoolNodeConfigFastSocketOutput) ToNodePoolNodeConfigFastSocketPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigFastSocketPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NodePoolNodeConfigFastSocket) *NodePoolNodeConfigFastSocket {
		return &v
	}).(NodePoolNodeConfigFastSocketPtrOutput)
}

// Whether or not NCCL Fast Socket is enabled
func (o NodePoolNodeConfigFastSocketOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v NodePoolNodeConfigFastSocket) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type NodePoolNodeConfigFastSocketPtrOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigFastSocketPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolNodeConfigFastSocket)(nil)).Elem()
}

func (o NodePoolNodeConfigFastSocketPtrOutput) ToNodePoolNodeConfigFastSocketPtrOutput() NodePoolNodeConfigFastSocketPtrOutput {
	return o
}

func (o NodePoolNodeConfigFastSocketPtrOutput) ToNodePoolNodeConfigFastSocketPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigFastSocketPtrOutput {
	return o
}

func (o NodePoolNodeConfigFastSocketPtrOutput) Elem() NodePoolNodeConfigFastSocketOutput {
	return o.ApplyT(func(v *NodePoolNodeConfigFastSocket) NodePoolNodeConfigFastSocket {
		if v != nil {
			return *v
		}
		var ret NodePoolNodeConfigFastSocket
		return ret
	}).(NodePoolNodeConfigFastSocketOutput)
}

// Whether or not NCCL Fast Socket is enabled
func (o NodePoolNodeConfigFastSocketPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NodePoolNodeConfigFastSocket) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type NodePoolNodeConfigGcfsConfig struct {
	// Whether or not GCFS is enabled
	Enabled bool `pulumi:"enabled"`
}

// NodePoolNodeConfigGcfsConfigInput is an input type that accepts NodePoolNodeConfigGcfsConfigArgs and NodePoolNodeConfigGcfsConfigOutput values.
// You can construct a concrete instance of `NodePoolNodeConfigGcfsConfigInput` via:
//
//	NodePoolNodeConfigGcfsConfigArgs{...}
type NodePoolNodeConfigGcfsConfigInput interface {
	pulumi.Input

	ToNodePoolNodeConfigGcfsConfigOutput() NodePoolNodeConfigGcfsConfigOutput
	ToNodePoolNodeConfigGcfsConfigOutputWithContext(context.Context) NodePoolNodeConfigGcfsConfigOutput
}

type NodePoolNodeConfigGcfsConfigArgs struct {
	// Whether or not GCFS is enabled
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (NodePoolNodeConfigGcfsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigGcfsConfig)(nil)).Elem()
}

func (i NodePoolNodeConfigGcfsConfigArgs) ToNodePoolNodeConfigGcfsConfigOutput() NodePoolNodeConfigGcfsConfigOutput {
	return i.ToNodePoolNodeConfigGcfsConfigOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigGcfsConfigArgs) ToNodePoolNodeConfigGcfsConfigOutputWithContext(ctx context.Context) NodePoolNodeConfigGcfsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigGcfsConfigOutput)
}

func (i NodePoolNodeConfigGcfsConfigArgs) ToNodePoolNodeConfigGcfsConfigPtrOutput() NodePoolNodeConfigGcfsConfigPtrOutput {
	return i.ToNodePoolNodeConfigGcfsConfigPtrOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigGcfsConfigArgs) ToNodePoolNodeConfigGcfsConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigGcfsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigGcfsConfigOutput).ToNodePoolNodeConfigGcfsConfigPtrOutputWithContext(ctx)
}

// NodePoolNodeConfigGcfsConfigPtrInput is an input type that accepts NodePoolNodeConfigGcfsConfigArgs, NodePoolNodeConfigGcfsConfigPtr and NodePoolNodeConfigGcfsConfigPtrOutput values.
// You can construct a concrete instance of `NodePoolNodeConfigGcfsConfigPtrInput` via:
//
//	        NodePoolNodeConfigGcfsConfigArgs{...}
//
//	or:
//
//	        nil
type NodePoolNodeConfigGcfsConfigPtrInput interface {
	pulumi.Input

	ToNodePoolNodeConfigGcfsConfigPtrOutput() NodePoolNodeConfigGcfsConfigPtrOutput
	ToNodePoolNodeConfigGcfsConfigPtrOutputWithContext(context.Context) NodePoolNodeConfigGcfsConfigPtrOutput
}

type nodePoolNodeConfigGcfsConfigPtrType NodePoolNodeConfigGcfsConfigArgs

func NodePoolNodeConfigGcfsConfigPtr(v *NodePoolNodeConfigGcfsConfigArgs) NodePoolNodeConfigGcfsConfigPtrInput {
	return (*nodePoolNodeConfigGcfsConfigPtrType)(v)
}

func (*nodePoolNodeConfigGcfsConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolNodeConfigGcfsConfig)(nil)).Elem()
}

func (i *nodePoolNodeConfigGcfsConfigPtrType) ToNodePoolNodeConfigGcfsConfigPtrOutput() NodePoolNodeConfigGcfsConfigPtrOutput {
	return i.ToNodePoolNodeConfigGcfsConfigPtrOutputWithContext(context.Background())
}

func (i *nodePoolNodeConfigGcfsConfigPtrType) ToNodePoolNodeConfigGcfsConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigGcfsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigGcfsConfigPtrOutput)
}

type NodePoolNodeConfigGcfsConfigOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigGcfsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigGcfsConfig)(nil)).Elem()
}

func (o NodePoolNodeConfigGcfsConfigOutput) ToNodePoolNodeConfigGcfsConfigOutput() NodePoolNodeConfigGcfsConfigOutput {
	return o
}

func (o NodePoolNodeConfigGcfsConfigOutput) ToNodePoolNodeConfigGcfsConfigOutputWithContext(ctx context.Context) NodePoolNodeConfigGcfsConfigOutput {
	return o
}

func (o NodePoolNodeConfigGcfsConfigOutput) ToNodePoolNodeConfigGcfsConfigPtrOutput() NodePoolNodeConfigGcfsConfigPtrOutput {
	return o.ToNodePoolNodeConfigGcfsConfigPtrOutputWithContext(context.Background())
}

func (o NodePoolNodeConfigGcfsConfigOutput) ToNodePoolNodeConfigGcfsConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigGcfsConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NodePoolNodeConfigGcfsConfig) *NodePoolNodeConfigGcfsConfig {
		return &v
	}).(NodePoolNodeConfigGcfsConfigPtrOutput)
}

// Whether or not GCFS is enabled
func (o NodePoolNodeConfigGcfsConfigOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v NodePoolNodeConfigGcfsConfig) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type NodePoolNodeConfigGcfsConfigPtrOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigGcfsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolNodeConfigGcfsConfig)(nil)).Elem()
}

func (o NodePoolNodeConfigGcfsConfigPtrOutput) ToNodePoolNodeConfigGcfsConfigPtrOutput() NodePoolNodeConfigGcfsConfigPtrOutput {
	return o
}

func (o NodePoolNodeConfigGcfsConfigPtrOutput) ToNodePoolNodeConfigGcfsConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigGcfsConfigPtrOutput {
	return o
}

func (o NodePoolNodeConfigGcfsConfigPtrOutput) Elem() NodePoolNodeConfigGcfsConfigOutput {
	return o.ApplyT(func(v *NodePoolNodeConfigGcfsConfig) NodePoolNodeConfigGcfsConfig {
		if v != nil {
			return *v
		}
		var ret NodePoolNodeConfigGcfsConfig
		return ret
	}).(NodePoolNodeConfigGcfsConfigOutput)
}

// Whether or not GCFS is enabled
func (o NodePoolNodeConfigGcfsConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NodePoolNodeConfigGcfsConfig) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type NodePoolNodeConfigGuestAccelerator struct {
	// The number of the accelerator cards exposed to an instance.
	Count int `pulumi:"count"`
	// Configuration for auto installation of GPU driver.
	GpuDriverInstallationConfig *NodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfig `pulumi:"gpuDriverInstallationConfig"`
	// Size of partitions to create on the GPU. Valid values are described in the NVIDIA mig user guide (https://docs.nvidia.com/datacenter/tesla/mig-user-guide/#partitioning)
	GpuPartitionSize *string `pulumi:"gpuPartitionSize"`
	// Configuration for GPU sharing.
	GpuSharingConfig *NodePoolNodeConfigGuestAcceleratorGpuSharingConfig `pulumi:"gpuSharingConfig"`
	// The accelerator type resource name.
	Type string `pulumi:"type"`
}

// NodePoolNodeConfigGuestAcceleratorInput is an input type that accepts NodePoolNodeConfigGuestAcceleratorArgs and NodePoolNodeConfigGuestAcceleratorOutput values.
// You can construct a concrete instance of `NodePoolNodeConfigGuestAcceleratorInput` via:
//
//	NodePoolNodeConfigGuestAcceleratorArgs{...}
type NodePoolNodeConfigGuestAcceleratorInput interface {
	pulumi.Input

	ToNodePoolNodeConfigGuestAcceleratorOutput() NodePoolNodeConfigGuestAcceleratorOutput
	ToNodePoolNodeConfigGuestAcceleratorOutputWithContext(context.Context) NodePoolNodeConfigGuestAcceleratorOutput
}

type NodePoolNodeConfigGuestAcceleratorArgs struct {
	// The number of the accelerator cards exposed to an instance.
	Count pulumi.IntInput `pulumi:"count"`
	// Configuration for auto installation of GPU driver.
	GpuDriverInstallationConfig NodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrInput `pulumi:"gpuDriverInstallationConfig"`
	// Size of partitions to create on the GPU. Valid values are described in the NVIDIA mig user guide (https://docs.nvidia.com/datacenter/tesla/mig-user-guide/#partitioning)
	GpuPartitionSize pulumi.StringPtrInput `pulumi:"gpuPartitionSize"`
	// Configuration for GPU sharing.
	GpuSharingConfig NodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrInput `pulumi:"gpuSharingConfig"`
	// The accelerator type resource name.
	Type pulumi.StringInput `pulumi:"type"`
}

func (NodePoolNodeConfigGuestAcceleratorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigGuestAccelerator)(nil)).Elem()
}

func (i NodePoolNodeConfigGuestAcceleratorArgs) ToNodePoolNodeConfigGuestAcceleratorOutput() NodePoolNodeConfigGuestAcceleratorOutput {
	return i.ToNodePoolNodeConfigGuestAcceleratorOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigGuestAcceleratorArgs) ToNodePoolNodeConfigGuestAcceleratorOutputWithContext(ctx context.Context) NodePoolNodeConfigGuestAcceleratorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigGuestAcceleratorOutput)
}

// NodePoolNodeConfigGuestAcceleratorArrayInput is an input type that accepts NodePoolNodeConfigGuestAcceleratorArray and NodePoolNodeConfigGuestAcceleratorArrayOutput values.
// You can construct a concrete instance of `NodePoolNodeConfigGuestAcceleratorArrayInput` via:
//
//	NodePoolNodeConfigGuestAcceleratorArray{ NodePoolNodeConfigGuestAcceleratorArgs{...} }
type NodePoolNodeConfigGuestAcceleratorArrayInput interface {
	pulumi.Input

	ToNodePoolNodeConfigGuestAcceleratorArrayOutput() NodePoolNodeConfigGuestAcceleratorArrayOutput
	ToNodePoolNodeConfigGuestAcceleratorArrayOutputWithContext(context.Context) NodePoolNodeConfigGuestAcceleratorArrayOutput
}

type NodePoolNodeConfigGuestAcceleratorArray []NodePoolNodeConfigGuestAcceleratorInput

func (NodePoolNodeConfigGuestAcceleratorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodePoolNodeConfigGuestAccelerator)(nil)).Elem()
}

func (i NodePoolNodeConfigGuestAcceleratorArray) ToNodePoolNodeConfigGuestAcceleratorArrayOutput() NodePoolNodeConfigGuestAcceleratorArrayOutput {
	return i.ToNodePoolNodeConfigGuestAcceleratorArrayOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigGuestAcceleratorArray) ToNodePoolNodeConfigGuestAcceleratorArrayOutputWithContext(ctx context.Context) NodePoolNodeConfigGuestAcceleratorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigGuestAcceleratorArrayOutput)
}

type NodePoolNodeConfigGuestAcceleratorOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigGuestAcceleratorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigGuestAccelerator)(nil)).Elem()
}

func (o NodePoolNodeConfigGuestAcceleratorOutput) ToNodePoolNodeConfigGuestAcceleratorOutput() NodePoolNodeConfigGuestAcceleratorOutput {
	return o
}

func (o NodePoolNodeConfigGuestAcceleratorOutput) ToNodePoolNodeConfigGuestAcceleratorOutputWithContext(ctx context.Context) NodePoolNodeConfigGuestAcceleratorOutput {
	return o
}

// The number of the accelerator cards exposed to an instance.
func (o NodePoolNodeConfigGuestAcceleratorOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v NodePoolNodeConfigGuestAccelerator) int { return v.Count }).(pulumi.IntOutput)
}

// Configuration for auto installation of GPU driver.
func (o NodePoolNodeConfigGuestAcceleratorOutput) GpuDriverInstallationConfig() NodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigGuestAccelerator) *NodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfig {
		return v.GpuDriverInstallationConfig
	}).(NodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutput)
}

// Size of partitions to create on the GPU. Valid values are described in the NVIDIA mig user guide (https://docs.nvidia.com/datacenter/tesla/mig-user-guide/#partitioning)
func (o NodePoolNodeConfigGuestAcceleratorOutput) GpuPartitionSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigGuestAccelerator) *string { return v.GpuPartitionSize }).(pulumi.StringPtrOutput)
}

// Configuration for GPU sharing.
func (o NodePoolNodeConfigGuestAcceleratorOutput) GpuSharingConfig() NodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigGuestAccelerator) *NodePoolNodeConfigGuestAcceleratorGpuSharingConfig {
		return v.GpuSharingConfig
	}).(NodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrOutput)
}

// The accelerator type resource name.
func (o NodePoolNodeConfigGuestAcceleratorOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v NodePoolNodeConfigGuestAccelerator) string { return v.Type }).(pulumi.StringOutput)
}

type NodePoolNodeConfigGuestAcceleratorArrayOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigGuestAcceleratorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodePoolNodeConfigGuestAccelerator)(nil)).Elem()
}

func (o NodePoolNodeConfigGuestAcceleratorArrayOutput) ToNodePoolNodeConfigGuestAcceleratorArrayOutput() NodePoolNodeConfigGuestAcceleratorArrayOutput {
	return o
}

func (o NodePoolNodeConfigGuestAcceleratorArrayOutput) ToNodePoolNodeConfigGuestAcceleratorArrayOutputWithContext(ctx context.Context) NodePoolNodeConfigGuestAcceleratorArrayOutput {
	return o
}

func (o NodePoolNodeConfigGuestAcceleratorArrayOutput) Index(i pulumi.IntInput) NodePoolNodeConfigGuestAcceleratorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NodePoolNodeConfigGuestAccelerator {
		return vs[0].([]NodePoolNodeConfigGuestAccelerator)[vs[1].(int)]
	}).(NodePoolNodeConfigGuestAcceleratorOutput)
}

type NodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfig struct {
	// Mode for how the GPU driver is installed.
	GpuDriverVersion string `pulumi:"gpuDriverVersion"`
}

// NodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigInput is an input type that accepts NodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigArgs and NodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput values.
// You can construct a concrete instance of `NodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigInput` via:
//
//	NodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigArgs{...}
type NodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigInput interface {
	pulumi.Input

	ToNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput() NodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput
	ToNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutputWithContext(context.Context) NodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput
}

type NodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigArgs struct {
	// Mode for how the GPU driver is installed.
	GpuDriverVersion pulumi.StringInput `pulumi:"gpuDriverVersion"`
}

func (NodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfig)(nil)).Elem()
}

func (i NodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigArgs) ToNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput() NodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput {
	return i.ToNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigArgs) ToNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutputWithContext(ctx context.Context) NodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput)
}

func (i NodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigArgs) ToNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutput() NodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutput {
	return i.ToNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigArgs) ToNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput).ToNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutputWithContext(ctx)
}

// NodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrInput is an input type that accepts NodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigArgs, NodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtr and NodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutput values.
// You can construct a concrete instance of `NodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrInput` via:
//
//	        NodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigArgs{...}
//
//	or:
//
//	        nil
type NodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrInput interface {
	pulumi.Input

	ToNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutput() NodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutput
	ToNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutputWithContext(context.Context) NodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutput
}

type nodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrType NodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigArgs

func NodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtr(v *NodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigArgs) NodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrInput {
	return (*nodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrType)(v)
}

func (*nodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfig)(nil)).Elem()
}

func (i *nodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrType) ToNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutput() NodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutput {
	return i.ToNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutputWithContext(context.Background())
}

func (i *nodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrType) ToNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutput)
}

type NodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfig)(nil)).Elem()
}

func (o NodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput) ToNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput() NodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput {
	return o
}

func (o NodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput) ToNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutputWithContext(ctx context.Context) NodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput {
	return o
}

func (o NodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput) ToNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutput() NodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutput {
	return o.ToNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutputWithContext(context.Background())
}

func (o NodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput) ToNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfig) *NodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfig {
		return &v
	}).(NodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutput)
}

// Mode for how the GPU driver is installed.
func (o NodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput) GpuDriverVersion() pulumi.StringOutput {
	return o.ApplyT(func(v NodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfig) string {
		return v.GpuDriverVersion
	}).(pulumi.StringOutput)
}

type NodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfig)(nil)).Elem()
}

func (o NodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutput) ToNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutput() NodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutput {
	return o
}

func (o NodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutput) ToNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutput {
	return o
}

func (o NodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutput) Elem() NodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput {
	return o.ApplyT(func(v *NodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfig) NodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfig {
		if v != nil {
			return *v
		}
		var ret NodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfig
		return ret
	}).(NodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput)
}

// Mode for how the GPU driver is installed.
func (o NodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutput) GpuDriverVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfig) *string {
		if v == nil {
			return nil
		}
		return &v.GpuDriverVersion
	}).(pulumi.StringPtrOutput)
}

type NodePoolNodeConfigGuestAcceleratorGpuSharingConfig struct {
	// The type of GPU sharing strategy to enable on the GPU node. Possible values are described in the API package (https://pkg.go.dev/google.golang.org/api/container/v1#GPUSharingConfig)
	GpuSharingStrategy string `pulumi:"gpuSharingStrategy"`
	// The maximum number of containers that can share a GPU.
	MaxSharedClientsPerGpu int `pulumi:"maxSharedClientsPerGpu"`
}

// NodePoolNodeConfigGuestAcceleratorGpuSharingConfigInput is an input type that accepts NodePoolNodeConfigGuestAcceleratorGpuSharingConfigArgs and NodePoolNodeConfigGuestAcceleratorGpuSharingConfigOutput values.
// You can construct a concrete instance of `NodePoolNodeConfigGuestAcceleratorGpuSharingConfigInput` via:
//
//	NodePoolNodeConfigGuestAcceleratorGpuSharingConfigArgs{...}
type NodePoolNodeConfigGuestAcceleratorGpuSharingConfigInput interface {
	pulumi.Input

	ToNodePoolNodeConfigGuestAcceleratorGpuSharingConfigOutput() NodePoolNodeConfigGuestAcceleratorGpuSharingConfigOutput
	ToNodePoolNodeConfigGuestAcceleratorGpuSharingConfigOutputWithContext(context.Context) NodePoolNodeConfigGuestAcceleratorGpuSharingConfigOutput
}

type NodePoolNodeConfigGuestAcceleratorGpuSharingConfigArgs struct {
	// The type of GPU sharing strategy to enable on the GPU node. Possible values are described in the API package (https://pkg.go.dev/google.golang.org/api/container/v1#GPUSharingConfig)
	GpuSharingStrategy pulumi.StringInput `pulumi:"gpuSharingStrategy"`
	// The maximum number of containers that can share a GPU.
	MaxSharedClientsPerGpu pulumi.IntInput `pulumi:"maxSharedClientsPerGpu"`
}

func (NodePoolNodeConfigGuestAcceleratorGpuSharingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigGuestAcceleratorGpuSharingConfig)(nil)).Elem()
}

func (i NodePoolNodeConfigGuestAcceleratorGpuSharingConfigArgs) ToNodePoolNodeConfigGuestAcceleratorGpuSharingConfigOutput() NodePoolNodeConfigGuestAcceleratorGpuSharingConfigOutput {
	return i.ToNodePoolNodeConfigGuestAcceleratorGpuSharingConfigOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigGuestAcceleratorGpuSharingConfigArgs) ToNodePoolNodeConfigGuestAcceleratorGpuSharingConfigOutputWithContext(ctx context.Context) NodePoolNodeConfigGuestAcceleratorGpuSharingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigGuestAcceleratorGpuSharingConfigOutput)
}

func (i NodePoolNodeConfigGuestAcceleratorGpuSharingConfigArgs) ToNodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrOutput() NodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrOutput {
	return i.ToNodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigGuestAcceleratorGpuSharingConfigArgs) ToNodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigGuestAcceleratorGpuSharingConfigOutput).ToNodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrOutputWithContext(ctx)
}

// NodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrInput is an input type that accepts NodePoolNodeConfigGuestAcceleratorGpuSharingConfigArgs, NodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtr and NodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrOutput values.
// You can construct a concrete instance of `NodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrInput` via:
//
//	        NodePoolNodeConfigGuestAcceleratorGpuSharingConfigArgs{...}
//
//	or:
//
//	        nil
type NodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrInput interface {
	pulumi.Input

	ToNodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrOutput() NodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrOutput
	ToNodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrOutputWithContext(context.Context) NodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrOutput
}

type nodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrType NodePoolNodeConfigGuestAcceleratorGpuSharingConfigArgs

func NodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtr(v *NodePoolNodeConfigGuestAcceleratorGpuSharingConfigArgs) NodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrInput {
	return (*nodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrType)(v)
}

func (*nodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolNodeConfigGuestAcceleratorGpuSharingConfig)(nil)).Elem()
}

func (i *nodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrType) ToNodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrOutput() NodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrOutput {
	return i.ToNodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrOutputWithContext(context.Background())
}

func (i *nodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrType) ToNodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrOutput)
}

type NodePoolNodeConfigGuestAcceleratorGpuSharingConfigOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigGuestAcceleratorGpuSharingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigGuestAcceleratorGpuSharingConfig)(nil)).Elem()
}

func (o NodePoolNodeConfigGuestAcceleratorGpuSharingConfigOutput) ToNodePoolNodeConfigGuestAcceleratorGpuSharingConfigOutput() NodePoolNodeConfigGuestAcceleratorGpuSharingConfigOutput {
	return o
}

func (o NodePoolNodeConfigGuestAcceleratorGpuSharingConfigOutput) ToNodePoolNodeConfigGuestAcceleratorGpuSharingConfigOutputWithContext(ctx context.Context) NodePoolNodeConfigGuestAcceleratorGpuSharingConfigOutput {
	return o
}

func (o NodePoolNodeConfigGuestAcceleratorGpuSharingConfigOutput) ToNodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrOutput() NodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrOutput {
	return o.ToNodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrOutputWithContext(context.Background())
}

func (o NodePoolNodeConfigGuestAcceleratorGpuSharingConfigOutput) ToNodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NodePoolNodeConfigGuestAcceleratorGpuSharingConfig) *NodePoolNodeConfigGuestAcceleratorGpuSharingConfig {
		return &v
	}).(NodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrOutput)
}

// The type of GPU sharing strategy to enable on the GPU node. Possible values are described in the API package (https://pkg.go.dev/google.golang.org/api/container/v1#GPUSharingConfig)
func (o NodePoolNodeConfigGuestAcceleratorGpuSharingConfigOutput) GpuSharingStrategy() pulumi.StringOutput {
	return o.ApplyT(func(v NodePoolNodeConfigGuestAcceleratorGpuSharingConfig) string { return v.GpuSharingStrategy }).(pulumi.StringOutput)
}

// The maximum number of containers that can share a GPU.
func (o NodePoolNodeConfigGuestAcceleratorGpuSharingConfigOutput) MaxSharedClientsPerGpu() pulumi.IntOutput {
	return o.ApplyT(func(v NodePoolNodeConfigGuestAcceleratorGpuSharingConfig) int { return v.MaxSharedClientsPerGpu }).(pulumi.IntOutput)
}

type NodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolNodeConfigGuestAcceleratorGpuSharingConfig)(nil)).Elem()
}

func (o NodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrOutput) ToNodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrOutput() NodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrOutput {
	return o
}

func (o NodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrOutput) ToNodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrOutput {
	return o
}

func (o NodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrOutput) Elem() NodePoolNodeConfigGuestAcceleratorGpuSharingConfigOutput {
	return o.ApplyT(func(v *NodePoolNodeConfigGuestAcceleratorGpuSharingConfig) NodePoolNodeConfigGuestAcceleratorGpuSharingConfig {
		if v != nil {
			return *v
		}
		var ret NodePoolNodeConfigGuestAcceleratorGpuSharingConfig
		return ret
	}).(NodePoolNodeConfigGuestAcceleratorGpuSharingConfigOutput)
}

// The type of GPU sharing strategy to enable on the GPU node. Possible values are described in the API package (https://pkg.go.dev/google.golang.org/api/container/v1#GPUSharingConfig)
func (o NodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrOutput) GpuSharingStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodePoolNodeConfigGuestAcceleratorGpuSharingConfig) *string {
		if v == nil {
			return nil
		}
		return &v.GpuSharingStrategy
	}).(pulumi.StringPtrOutput)
}

// The maximum number of containers that can share a GPU.
func (o NodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrOutput) MaxSharedClientsPerGpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodePoolNodeConfigGuestAcceleratorGpuSharingConfig) *int {
		if v == nil {
			return nil
		}
		return &v.MaxSharedClientsPerGpu
	}).(pulumi.IntPtrOutput)
}

type NodePoolNodeConfigGvnic struct {
	// Whether or not gvnic is enabled
	Enabled bool `pulumi:"enabled"`
}

// NodePoolNodeConfigGvnicInput is an input type that accepts NodePoolNodeConfigGvnicArgs and NodePoolNodeConfigGvnicOutput values.
// You can construct a concrete instance of `NodePoolNodeConfigGvnicInput` via:
//
//	NodePoolNodeConfigGvnicArgs{...}
type NodePoolNodeConfigGvnicInput interface {
	pulumi.Input

	ToNodePoolNodeConfigGvnicOutput() NodePoolNodeConfigGvnicOutput
	ToNodePoolNodeConfigGvnicOutputWithContext(context.Context) NodePoolNodeConfigGvnicOutput
}

type NodePoolNodeConfigGvnicArgs struct {
	// Whether or not gvnic is enabled
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (NodePoolNodeConfigGvnicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigGvnic)(nil)).Elem()
}

func (i NodePoolNodeConfigGvnicArgs) ToNodePoolNodeConfigGvnicOutput() NodePoolNodeConfigGvnicOutput {
	return i.ToNodePoolNodeConfigGvnicOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigGvnicArgs) ToNodePoolNodeConfigGvnicOutputWithContext(ctx context.Context) NodePoolNodeConfigGvnicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigGvnicOutput)
}

func (i NodePoolNodeConfigGvnicArgs) ToNodePoolNodeConfigGvnicPtrOutput() NodePoolNodeConfigGvnicPtrOutput {
	return i.ToNodePoolNodeConfigGvnicPtrOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigGvnicArgs) ToNodePoolNodeConfigGvnicPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigGvnicPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigGvnicOutput).ToNodePoolNodeConfigGvnicPtrOutputWithContext(ctx)
}

// NodePoolNodeConfigGvnicPtrInput is an input type that accepts NodePoolNodeConfigGvnicArgs, NodePoolNodeConfigGvnicPtr and NodePoolNodeConfigGvnicPtrOutput values.
// You can construct a concrete instance of `NodePoolNodeConfigGvnicPtrInput` via:
//
//	        NodePoolNodeConfigGvnicArgs{...}
//
//	or:
//
//	        nil
type NodePoolNodeConfigGvnicPtrInput interface {
	pulumi.Input

	ToNodePoolNodeConfigGvnicPtrOutput() NodePoolNodeConfigGvnicPtrOutput
	ToNodePoolNodeConfigGvnicPtrOutputWithContext(context.Context) NodePoolNodeConfigGvnicPtrOutput
}

type nodePoolNodeConfigGvnicPtrType NodePoolNodeConfigGvnicArgs

func NodePoolNodeConfigGvnicPtr(v *NodePoolNodeConfigGvnicArgs) NodePoolNodeConfigGvnicPtrInput {
	return (*nodePoolNodeConfigGvnicPtrType)(v)
}

func (*nodePoolNodeConfigGvnicPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolNodeConfigGvnic)(nil)).Elem()
}

func (i *nodePoolNodeConfigGvnicPtrType) ToNodePoolNodeConfigGvnicPtrOutput() NodePoolNodeConfigGvnicPtrOutput {
	return i.ToNodePoolNodeConfigGvnicPtrOutputWithContext(context.Background())
}

func (i *nodePoolNodeConfigGvnicPtrType) ToNodePoolNodeConfigGvnicPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigGvnicPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigGvnicPtrOutput)
}

type NodePoolNodeConfigGvnicOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigGvnicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigGvnic)(nil)).Elem()
}

func (o NodePoolNodeConfigGvnicOutput) ToNodePoolNodeConfigGvnicOutput() NodePoolNodeConfigGvnicOutput {
	return o
}

func (o NodePoolNodeConfigGvnicOutput) ToNodePoolNodeConfigGvnicOutputWithContext(ctx context.Context) NodePoolNodeConfigGvnicOutput {
	return o
}

func (o NodePoolNodeConfigGvnicOutput) ToNodePoolNodeConfigGvnicPtrOutput() NodePoolNodeConfigGvnicPtrOutput {
	return o.ToNodePoolNodeConfigGvnicPtrOutputWithContext(context.Background())
}

func (o NodePoolNodeConfigGvnicOutput) ToNodePoolNodeConfigGvnicPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigGvnicPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NodePoolNodeConfigGvnic) *NodePoolNodeConfigGvnic {
		return &v
	}).(NodePoolNodeConfigGvnicPtrOutput)
}

// Whether or not gvnic is enabled
func (o NodePoolNodeConfigGvnicOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v NodePoolNodeConfigGvnic) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type NodePoolNodeConfigGvnicPtrOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigGvnicPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolNodeConfigGvnic)(nil)).Elem()
}

func (o NodePoolNodeConfigGvnicPtrOutput) ToNodePoolNodeConfigGvnicPtrOutput() NodePoolNodeConfigGvnicPtrOutput {
	return o
}

func (o NodePoolNodeConfigGvnicPtrOutput) ToNodePoolNodeConfigGvnicPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigGvnicPtrOutput {
	return o
}

func (o NodePoolNodeConfigGvnicPtrOutput) Elem() NodePoolNodeConfigGvnicOutput {
	return o.ApplyT(func(v *NodePoolNodeConfigGvnic) NodePoolNodeConfigGvnic {
		if v != nil {
			return *v
		}
		var ret NodePoolNodeConfigGvnic
		return ret
	}).(NodePoolNodeConfigGvnicOutput)
}

// Whether or not gvnic is enabled
func (o NodePoolNodeConfigGvnicPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NodePoolNodeConfigGvnic) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type NodePoolNodeConfigHostMaintenancePolicy struct {
	// .
	MaintenanceInterval string `pulumi:"maintenanceInterval"`
}

// NodePoolNodeConfigHostMaintenancePolicyInput is an input type that accepts NodePoolNodeConfigHostMaintenancePolicyArgs and NodePoolNodeConfigHostMaintenancePolicyOutput values.
// You can construct a concrete instance of `NodePoolNodeConfigHostMaintenancePolicyInput` via:
//
//	NodePoolNodeConfigHostMaintenancePolicyArgs{...}
type NodePoolNodeConfigHostMaintenancePolicyInput interface {
	pulumi.Input

	ToNodePoolNodeConfigHostMaintenancePolicyOutput() NodePoolNodeConfigHostMaintenancePolicyOutput
	ToNodePoolNodeConfigHostMaintenancePolicyOutputWithContext(context.Context) NodePoolNodeConfigHostMaintenancePolicyOutput
}

type NodePoolNodeConfigHostMaintenancePolicyArgs struct {
	// .
	MaintenanceInterval pulumi.StringInput `pulumi:"maintenanceInterval"`
}

func (NodePoolNodeConfigHostMaintenancePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigHostMaintenancePolicy)(nil)).Elem()
}

func (i NodePoolNodeConfigHostMaintenancePolicyArgs) ToNodePoolNodeConfigHostMaintenancePolicyOutput() NodePoolNodeConfigHostMaintenancePolicyOutput {
	return i.ToNodePoolNodeConfigHostMaintenancePolicyOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigHostMaintenancePolicyArgs) ToNodePoolNodeConfigHostMaintenancePolicyOutputWithContext(ctx context.Context) NodePoolNodeConfigHostMaintenancePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigHostMaintenancePolicyOutput)
}

func (i NodePoolNodeConfigHostMaintenancePolicyArgs) ToNodePoolNodeConfigHostMaintenancePolicyPtrOutput() NodePoolNodeConfigHostMaintenancePolicyPtrOutput {
	return i.ToNodePoolNodeConfigHostMaintenancePolicyPtrOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigHostMaintenancePolicyArgs) ToNodePoolNodeConfigHostMaintenancePolicyPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigHostMaintenancePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigHostMaintenancePolicyOutput).ToNodePoolNodeConfigHostMaintenancePolicyPtrOutputWithContext(ctx)
}

// NodePoolNodeConfigHostMaintenancePolicyPtrInput is an input type that accepts NodePoolNodeConfigHostMaintenancePolicyArgs, NodePoolNodeConfigHostMaintenancePolicyPtr and NodePoolNodeConfigHostMaintenancePolicyPtrOutput values.
// You can construct a concrete instance of `NodePoolNodeConfigHostMaintenancePolicyPtrInput` via:
//
//	        NodePoolNodeConfigHostMaintenancePolicyArgs{...}
//
//	or:
//
//	        nil
type NodePoolNodeConfigHostMaintenancePolicyPtrInput interface {
	pulumi.Input

	ToNodePoolNodeConfigHostMaintenancePolicyPtrOutput() NodePoolNodeConfigHostMaintenancePolicyPtrOutput
	ToNodePoolNodeConfigHostMaintenancePolicyPtrOutputWithContext(context.Context) NodePoolNodeConfigHostMaintenancePolicyPtrOutput
}

type nodePoolNodeConfigHostMaintenancePolicyPtrType NodePoolNodeConfigHostMaintenancePolicyArgs

func NodePoolNodeConfigHostMaintenancePolicyPtr(v *NodePoolNodeConfigHostMaintenancePolicyArgs) NodePoolNodeConfigHostMaintenancePolicyPtrInput {
	return (*nodePoolNodeConfigHostMaintenancePolicyPtrType)(v)
}

func (*nodePoolNodeConfigHostMaintenancePolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolNodeConfigHostMaintenancePolicy)(nil)).Elem()
}

func (i *nodePoolNodeConfigHostMaintenancePolicyPtrType) ToNodePoolNodeConfigHostMaintenancePolicyPtrOutput() NodePoolNodeConfigHostMaintenancePolicyPtrOutput {
	return i.ToNodePoolNodeConfigHostMaintenancePolicyPtrOutputWithContext(context.Background())
}

func (i *nodePoolNodeConfigHostMaintenancePolicyPtrType) ToNodePoolNodeConfigHostMaintenancePolicyPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigHostMaintenancePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigHostMaintenancePolicyPtrOutput)
}

type NodePoolNodeConfigHostMaintenancePolicyOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigHostMaintenancePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigHostMaintenancePolicy)(nil)).Elem()
}

func (o NodePoolNodeConfigHostMaintenancePolicyOutput) ToNodePoolNodeConfigHostMaintenancePolicyOutput() NodePoolNodeConfigHostMaintenancePolicyOutput {
	return o
}

func (o NodePoolNodeConfigHostMaintenancePolicyOutput) ToNodePoolNodeConfigHostMaintenancePolicyOutputWithContext(ctx context.Context) NodePoolNodeConfigHostMaintenancePolicyOutput {
	return o
}

func (o NodePoolNodeConfigHostMaintenancePolicyOutput) ToNodePoolNodeConfigHostMaintenancePolicyPtrOutput() NodePoolNodeConfigHostMaintenancePolicyPtrOutput {
	return o.ToNodePoolNodeConfigHostMaintenancePolicyPtrOutputWithContext(context.Background())
}

func (o NodePoolNodeConfigHostMaintenancePolicyOutput) ToNodePoolNodeConfigHostMaintenancePolicyPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigHostMaintenancePolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NodePoolNodeConfigHostMaintenancePolicy) *NodePoolNodeConfigHostMaintenancePolicy {
		return &v
	}).(NodePoolNodeConfigHostMaintenancePolicyPtrOutput)
}

// .
func (o NodePoolNodeConfigHostMaintenancePolicyOutput) MaintenanceInterval() pulumi.StringOutput {
	return o.ApplyT(func(v NodePoolNodeConfigHostMaintenancePolicy) string { return v.MaintenanceInterval }).(pulumi.StringOutput)
}

type NodePoolNodeConfigHostMaintenancePolicyPtrOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigHostMaintenancePolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolNodeConfigHostMaintenancePolicy)(nil)).Elem()
}

func (o NodePoolNodeConfigHostMaintenancePolicyPtrOutput) ToNodePoolNodeConfigHostMaintenancePolicyPtrOutput() NodePoolNodeConfigHostMaintenancePolicyPtrOutput {
	return o
}

func (o NodePoolNodeConfigHostMaintenancePolicyPtrOutput) ToNodePoolNodeConfigHostMaintenancePolicyPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigHostMaintenancePolicyPtrOutput {
	return o
}

func (o NodePoolNodeConfigHostMaintenancePolicyPtrOutput) Elem() NodePoolNodeConfigHostMaintenancePolicyOutput {
	return o.ApplyT(func(v *NodePoolNodeConfigHostMaintenancePolicy) NodePoolNodeConfigHostMaintenancePolicy {
		if v != nil {
			return *v
		}
		var ret NodePoolNodeConfigHostMaintenancePolicy
		return ret
	}).(NodePoolNodeConfigHostMaintenancePolicyOutput)
}

// .
func (o NodePoolNodeConfigHostMaintenancePolicyPtrOutput) MaintenanceInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodePoolNodeConfigHostMaintenancePolicy) *string {
		if v == nil {
			return nil
		}
		return &v.MaintenanceInterval
	}).(pulumi.StringPtrOutput)
}

type NodePoolNodeConfigKubeletConfig struct {
	// Enable CPU CFS quota enforcement for containers that specify CPU limits.
	CpuCfsQuota *bool `pulumi:"cpuCfsQuota"`
	// Set the CPU CFS quota period value 'cpu.cfs_period_us'.
	CpuCfsQuotaPeriod *string `pulumi:"cpuCfsQuotaPeriod"`
	// Control the CPU management policy on the node.
	CpuManagerPolicy string `pulumi:"cpuManagerPolicy"`
	// Controls the maximum number of processes allowed to run in a pod.
	PodPidsLimit *int `pulumi:"podPidsLimit"`
}

// NodePoolNodeConfigKubeletConfigInput is an input type that accepts NodePoolNodeConfigKubeletConfigArgs and NodePoolNodeConfigKubeletConfigOutput values.
// You can construct a concrete instance of `NodePoolNodeConfigKubeletConfigInput` via:
//
//	NodePoolNodeConfigKubeletConfigArgs{...}
type NodePoolNodeConfigKubeletConfigInput interface {
	pulumi.Input

	ToNodePoolNodeConfigKubeletConfigOutput() NodePoolNodeConfigKubeletConfigOutput
	ToNodePoolNodeConfigKubeletConfigOutputWithContext(context.Context) NodePoolNodeConfigKubeletConfigOutput
}

type NodePoolNodeConfigKubeletConfigArgs struct {
	// Enable CPU CFS quota enforcement for containers that specify CPU limits.
	CpuCfsQuota pulumi.BoolPtrInput `pulumi:"cpuCfsQuota"`
	// Set the CPU CFS quota period value 'cpu.cfs_period_us'.
	CpuCfsQuotaPeriod pulumi.StringPtrInput `pulumi:"cpuCfsQuotaPeriod"`
	// Control the CPU management policy on the node.
	CpuManagerPolicy pulumi.StringInput `pulumi:"cpuManagerPolicy"`
	// Controls the maximum number of processes allowed to run in a pod.
	PodPidsLimit pulumi.IntPtrInput `pulumi:"podPidsLimit"`
}

func (NodePoolNodeConfigKubeletConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigKubeletConfig)(nil)).Elem()
}

func (i NodePoolNodeConfigKubeletConfigArgs) ToNodePoolNodeConfigKubeletConfigOutput() NodePoolNodeConfigKubeletConfigOutput {
	return i.ToNodePoolNodeConfigKubeletConfigOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigKubeletConfigArgs) ToNodePoolNodeConfigKubeletConfigOutputWithContext(ctx context.Context) NodePoolNodeConfigKubeletConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigKubeletConfigOutput)
}

func (i NodePoolNodeConfigKubeletConfigArgs) ToNodePoolNodeConfigKubeletConfigPtrOutput() NodePoolNodeConfigKubeletConfigPtrOutput {
	return i.ToNodePoolNodeConfigKubeletConfigPtrOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigKubeletConfigArgs) ToNodePoolNodeConfigKubeletConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigKubeletConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigKubeletConfigOutput).ToNodePoolNodeConfigKubeletConfigPtrOutputWithContext(ctx)
}

// NodePoolNodeConfigKubeletConfigPtrInput is an input type that accepts NodePoolNodeConfigKubeletConfigArgs, NodePoolNodeConfigKubeletConfigPtr and NodePoolNodeConfigKubeletConfigPtrOutput values.
// You can construct a concrete instance of `NodePoolNodeConfigKubeletConfigPtrInput` via:
//
//	        NodePoolNodeConfigKubeletConfigArgs{...}
//
//	or:
//
//	        nil
type NodePoolNodeConfigKubeletConfigPtrInput interface {
	pulumi.Input

	ToNodePoolNodeConfigKubeletConfigPtrOutput() NodePoolNodeConfigKubeletConfigPtrOutput
	ToNodePoolNodeConfigKubeletConfigPtrOutputWithContext(context.Context) NodePoolNodeConfigKubeletConfigPtrOutput
}

type nodePoolNodeConfigKubeletConfigPtrType NodePoolNodeConfigKubeletConfigArgs

func NodePoolNodeConfigKubeletConfigPtr(v *NodePoolNodeConfigKubeletConfigArgs) NodePoolNodeConfigKubeletConfigPtrInput {
	return (*nodePoolNodeConfigKubeletConfigPtrType)(v)
}

func (*nodePoolNodeConfigKubeletConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolNodeConfigKubeletConfig)(nil)).Elem()
}

func (i *nodePoolNodeConfigKubeletConfigPtrType) ToNodePoolNodeConfigKubeletConfigPtrOutput() NodePoolNodeConfigKubeletConfigPtrOutput {
	return i.ToNodePoolNodeConfigKubeletConfigPtrOutputWithContext(context.Background())
}

func (i *nodePoolNodeConfigKubeletConfigPtrType) ToNodePoolNodeConfigKubeletConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigKubeletConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigKubeletConfigPtrOutput)
}

type NodePoolNodeConfigKubeletConfigOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigKubeletConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigKubeletConfig)(nil)).Elem()
}

func (o NodePoolNodeConfigKubeletConfigOutput) ToNodePoolNodeConfigKubeletConfigOutput() NodePoolNodeConfigKubeletConfigOutput {
	return o
}

func (o NodePoolNodeConfigKubeletConfigOutput) ToNodePoolNodeConfigKubeletConfigOutputWithContext(ctx context.Context) NodePoolNodeConfigKubeletConfigOutput {
	return o
}

func (o NodePoolNodeConfigKubeletConfigOutput) ToNodePoolNodeConfigKubeletConfigPtrOutput() NodePoolNodeConfigKubeletConfigPtrOutput {
	return o.ToNodePoolNodeConfigKubeletConfigPtrOutputWithContext(context.Background())
}

func (o NodePoolNodeConfigKubeletConfigOutput) ToNodePoolNodeConfigKubeletConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigKubeletConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NodePoolNodeConfigKubeletConfig) *NodePoolNodeConfigKubeletConfig {
		return &v
	}).(NodePoolNodeConfigKubeletConfigPtrOutput)
}

// Enable CPU CFS quota enforcement for containers that specify CPU limits.
func (o NodePoolNodeConfigKubeletConfigOutput) CpuCfsQuota() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigKubeletConfig) *bool { return v.CpuCfsQuota }).(pulumi.BoolPtrOutput)
}

// Set the CPU CFS quota period value 'cpu.cfs_period_us'.
func (o NodePoolNodeConfigKubeletConfigOutput) CpuCfsQuotaPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigKubeletConfig) *string { return v.CpuCfsQuotaPeriod }).(pulumi.StringPtrOutput)
}

// Control the CPU management policy on the node.
func (o NodePoolNodeConfigKubeletConfigOutput) CpuManagerPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v NodePoolNodeConfigKubeletConfig) string { return v.CpuManagerPolicy }).(pulumi.StringOutput)
}

// Controls the maximum number of processes allowed to run in a pod.
func (o NodePoolNodeConfigKubeletConfigOutput) PodPidsLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigKubeletConfig) *int { return v.PodPidsLimit }).(pulumi.IntPtrOutput)
}

type NodePoolNodeConfigKubeletConfigPtrOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigKubeletConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolNodeConfigKubeletConfig)(nil)).Elem()
}

func (o NodePoolNodeConfigKubeletConfigPtrOutput) ToNodePoolNodeConfigKubeletConfigPtrOutput() NodePoolNodeConfigKubeletConfigPtrOutput {
	return o
}

func (o NodePoolNodeConfigKubeletConfigPtrOutput) ToNodePoolNodeConfigKubeletConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigKubeletConfigPtrOutput {
	return o
}

func (o NodePoolNodeConfigKubeletConfigPtrOutput) Elem() NodePoolNodeConfigKubeletConfigOutput {
	return o.ApplyT(func(v *NodePoolNodeConfigKubeletConfig) NodePoolNodeConfigKubeletConfig {
		if v != nil {
			return *v
		}
		var ret NodePoolNodeConfigKubeletConfig
		return ret
	}).(NodePoolNodeConfigKubeletConfigOutput)
}

// Enable CPU CFS quota enforcement for containers that specify CPU limits.
func (o NodePoolNodeConfigKubeletConfigPtrOutput) CpuCfsQuota() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NodePoolNodeConfigKubeletConfig) *bool {
		if v == nil {
			return nil
		}
		return v.CpuCfsQuota
	}).(pulumi.BoolPtrOutput)
}

// Set the CPU CFS quota period value 'cpu.cfs_period_us'.
func (o NodePoolNodeConfigKubeletConfigPtrOutput) CpuCfsQuotaPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodePoolNodeConfigKubeletConfig) *string {
		if v == nil {
			return nil
		}
		return v.CpuCfsQuotaPeriod
	}).(pulumi.StringPtrOutput)
}

// Control the CPU management policy on the node.
func (o NodePoolNodeConfigKubeletConfigPtrOutput) CpuManagerPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodePoolNodeConfigKubeletConfig) *string {
		if v == nil {
			return nil
		}
		return &v.CpuManagerPolicy
	}).(pulumi.StringPtrOutput)
}

// Controls the maximum number of processes allowed to run in a pod.
func (o NodePoolNodeConfigKubeletConfigPtrOutput) PodPidsLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodePoolNodeConfigKubeletConfig) *int {
		if v == nil {
			return nil
		}
		return v.PodPidsLimit
	}).(pulumi.IntPtrOutput)
}

type NodePoolNodeConfigLinuxNodeConfig struct {
	// cgroupMode specifies the cgroup mode to be used on the node.
	CgroupMode *string `pulumi:"cgroupMode"`
	// The Linux kernel parameters to be applied to the nodes and all pods running on the nodes.
	Sysctls map[string]string `pulumi:"sysctls"`
}

// NodePoolNodeConfigLinuxNodeConfigInput is an input type that accepts NodePoolNodeConfigLinuxNodeConfigArgs and NodePoolNodeConfigLinuxNodeConfigOutput values.
// You can construct a concrete instance of `NodePoolNodeConfigLinuxNodeConfigInput` via:
//
//	NodePoolNodeConfigLinuxNodeConfigArgs{...}
type NodePoolNodeConfigLinuxNodeConfigInput interface {
	pulumi.Input

	ToNodePoolNodeConfigLinuxNodeConfigOutput() NodePoolNodeConfigLinuxNodeConfigOutput
	ToNodePoolNodeConfigLinuxNodeConfigOutputWithContext(context.Context) NodePoolNodeConfigLinuxNodeConfigOutput
}

type NodePoolNodeConfigLinuxNodeConfigArgs struct {
	// cgroupMode specifies the cgroup mode to be used on the node.
	CgroupMode pulumi.StringPtrInput `pulumi:"cgroupMode"`
	// The Linux kernel parameters to be applied to the nodes and all pods running on the nodes.
	Sysctls pulumi.StringMapInput `pulumi:"sysctls"`
}

func (NodePoolNodeConfigLinuxNodeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigLinuxNodeConfig)(nil)).Elem()
}

func (i NodePoolNodeConfigLinuxNodeConfigArgs) ToNodePoolNodeConfigLinuxNodeConfigOutput() NodePoolNodeConfigLinuxNodeConfigOutput {
	return i.ToNodePoolNodeConfigLinuxNodeConfigOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigLinuxNodeConfigArgs) ToNodePoolNodeConfigLinuxNodeConfigOutputWithContext(ctx context.Context) NodePoolNodeConfigLinuxNodeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigLinuxNodeConfigOutput)
}

func (i NodePoolNodeConfigLinuxNodeConfigArgs) ToNodePoolNodeConfigLinuxNodeConfigPtrOutput() NodePoolNodeConfigLinuxNodeConfigPtrOutput {
	return i.ToNodePoolNodeConfigLinuxNodeConfigPtrOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigLinuxNodeConfigArgs) ToNodePoolNodeConfigLinuxNodeConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigLinuxNodeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigLinuxNodeConfigOutput).ToNodePoolNodeConfigLinuxNodeConfigPtrOutputWithContext(ctx)
}

// NodePoolNodeConfigLinuxNodeConfigPtrInput is an input type that accepts NodePoolNodeConfigLinuxNodeConfigArgs, NodePoolNodeConfigLinuxNodeConfigPtr and NodePoolNodeConfigLinuxNodeConfigPtrOutput values.
// You can construct a concrete instance of `NodePoolNodeConfigLinuxNodeConfigPtrInput` via:
//
//	        NodePoolNodeConfigLinuxNodeConfigArgs{...}
//
//	or:
//
//	        nil
type NodePoolNodeConfigLinuxNodeConfigPtrInput interface {
	pulumi.Input

	ToNodePoolNodeConfigLinuxNodeConfigPtrOutput() NodePoolNodeConfigLinuxNodeConfigPtrOutput
	ToNodePoolNodeConfigLinuxNodeConfigPtrOutputWithContext(context.Context) NodePoolNodeConfigLinuxNodeConfigPtrOutput
}

type nodePoolNodeConfigLinuxNodeConfigPtrType NodePoolNodeConfigLinuxNodeConfigArgs

func NodePoolNodeConfigLinuxNodeConfigPtr(v *NodePoolNodeConfigLinuxNodeConfigArgs) NodePoolNodeConfigLinuxNodeConfigPtrInput {
	return (*nodePoolNodeConfigLinuxNodeConfigPtrType)(v)
}

func (*nodePoolNodeConfigLinuxNodeConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolNodeConfigLinuxNodeConfig)(nil)).Elem()
}

func (i *nodePoolNodeConfigLinuxNodeConfigPtrType) ToNodePoolNodeConfigLinuxNodeConfigPtrOutput() NodePoolNodeConfigLinuxNodeConfigPtrOutput {
	return i.ToNodePoolNodeConfigLinuxNodeConfigPtrOutputWithContext(context.Background())
}

func (i *nodePoolNodeConfigLinuxNodeConfigPtrType) ToNodePoolNodeConfigLinuxNodeConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigLinuxNodeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigLinuxNodeConfigPtrOutput)
}

type NodePoolNodeConfigLinuxNodeConfigOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigLinuxNodeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigLinuxNodeConfig)(nil)).Elem()
}

func (o NodePoolNodeConfigLinuxNodeConfigOutput) ToNodePoolNodeConfigLinuxNodeConfigOutput() NodePoolNodeConfigLinuxNodeConfigOutput {
	return o
}

func (o NodePoolNodeConfigLinuxNodeConfigOutput) ToNodePoolNodeConfigLinuxNodeConfigOutputWithContext(ctx context.Context) NodePoolNodeConfigLinuxNodeConfigOutput {
	return o
}

func (o NodePoolNodeConfigLinuxNodeConfigOutput) ToNodePoolNodeConfigLinuxNodeConfigPtrOutput() NodePoolNodeConfigLinuxNodeConfigPtrOutput {
	return o.ToNodePoolNodeConfigLinuxNodeConfigPtrOutputWithContext(context.Background())
}

func (o NodePoolNodeConfigLinuxNodeConfigOutput) ToNodePoolNodeConfigLinuxNodeConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigLinuxNodeConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NodePoolNodeConfigLinuxNodeConfig) *NodePoolNodeConfigLinuxNodeConfig {
		return &v
	}).(NodePoolNodeConfigLinuxNodeConfigPtrOutput)
}

// cgroupMode specifies the cgroup mode to be used on the node.
func (o NodePoolNodeConfigLinuxNodeConfigOutput) CgroupMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigLinuxNodeConfig) *string { return v.CgroupMode }).(pulumi.StringPtrOutput)
}

// The Linux kernel parameters to be applied to the nodes and all pods running on the nodes.
func (o NodePoolNodeConfigLinuxNodeConfigOutput) Sysctls() pulumi.StringMapOutput {
	return o.ApplyT(func(v NodePoolNodeConfigLinuxNodeConfig) map[string]string { return v.Sysctls }).(pulumi.StringMapOutput)
}

type NodePoolNodeConfigLinuxNodeConfigPtrOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigLinuxNodeConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolNodeConfigLinuxNodeConfig)(nil)).Elem()
}

func (o NodePoolNodeConfigLinuxNodeConfigPtrOutput) ToNodePoolNodeConfigLinuxNodeConfigPtrOutput() NodePoolNodeConfigLinuxNodeConfigPtrOutput {
	return o
}

func (o NodePoolNodeConfigLinuxNodeConfigPtrOutput) ToNodePoolNodeConfigLinuxNodeConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigLinuxNodeConfigPtrOutput {
	return o
}

func (o NodePoolNodeConfigLinuxNodeConfigPtrOutput) Elem() NodePoolNodeConfigLinuxNodeConfigOutput {
	return o.ApplyT(func(v *NodePoolNodeConfigLinuxNodeConfig) NodePoolNodeConfigLinuxNodeConfig {
		if v != nil {
			return *v
		}
		var ret NodePoolNodeConfigLinuxNodeConfig
		return ret
	}).(NodePoolNodeConfigLinuxNodeConfigOutput)
}

// cgroupMode specifies the cgroup mode to be used on the node.
func (o NodePoolNodeConfigLinuxNodeConfigPtrOutput) CgroupMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodePoolNodeConfigLinuxNodeConfig) *string {
		if v == nil {
			return nil
		}
		return v.CgroupMode
	}).(pulumi.StringPtrOutput)
}

// The Linux kernel parameters to be applied to the nodes and all pods running on the nodes.
func (o NodePoolNodeConfigLinuxNodeConfigPtrOutput) Sysctls() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NodePoolNodeConfigLinuxNodeConfig) map[string]string {
		if v == nil {
			return nil
		}
		return v.Sysctls
	}).(pulumi.StringMapOutput)
}

type NodePoolNodeConfigLocalNvmeSsdBlockConfig struct {
	// Number of raw-block local NVMe SSD disks to be attached to the node. Each local SSD is 375 GB in size.
	LocalSsdCount int `pulumi:"localSsdCount"`
}

// NodePoolNodeConfigLocalNvmeSsdBlockConfigInput is an input type that accepts NodePoolNodeConfigLocalNvmeSsdBlockConfigArgs and NodePoolNodeConfigLocalNvmeSsdBlockConfigOutput values.
// You can construct a concrete instance of `NodePoolNodeConfigLocalNvmeSsdBlockConfigInput` via:
//
//	NodePoolNodeConfigLocalNvmeSsdBlockConfigArgs{...}
type NodePoolNodeConfigLocalNvmeSsdBlockConfigInput interface {
	pulumi.Input

	ToNodePoolNodeConfigLocalNvmeSsdBlockConfigOutput() NodePoolNodeConfigLocalNvmeSsdBlockConfigOutput
	ToNodePoolNodeConfigLocalNvmeSsdBlockConfigOutputWithContext(context.Context) NodePoolNodeConfigLocalNvmeSsdBlockConfigOutput
}

type NodePoolNodeConfigLocalNvmeSsdBlockConfigArgs struct {
	// Number of raw-block local NVMe SSD disks to be attached to the node. Each local SSD is 375 GB in size.
	LocalSsdCount pulumi.IntInput `pulumi:"localSsdCount"`
}

func (NodePoolNodeConfigLocalNvmeSsdBlockConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigLocalNvmeSsdBlockConfig)(nil)).Elem()
}

func (i NodePoolNodeConfigLocalNvmeSsdBlockConfigArgs) ToNodePoolNodeConfigLocalNvmeSsdBlockConfigOutput() NodePoolNodeConfigLocalNvmeSsdBlockConfigOutput {
	return i.ToNodePoolNodeConfigLocalNvmeSsdBlockConfigOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigLocalNvmeSsdBlockConfigArgs) ToNodePoolNodeConfigLocalNvmeSsdBlockConfigOutputWithContext(ctx context.Context) NodePoolNodeConfigLocalNvmeSsdBlockConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigLocalNvmeSsdBlockConfigOutput)
}

func (i NodePoolNodeConfigLocalNvmeSsdBlockConfigArgs) ToNodePoolNodeConfigLocalNvmeSsdBlockConfigPtrOutput() NodePoolNodeConfigLocalNvmeSsdBlockConfigPtrOutput {
	return i.ToNodePoolNodeConfigLocalNvmeSsdBlockConfigPtrOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigLocalNvmeSsdBlockConfigArgs) ToNodePoolNodeConfigLocalNvmeSsdBlockConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigLocalNvmeSsdBlockConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigLocalNvmeSsdBlockConfigOutput).ToNodePoolNodeConfigLocalNvmeSsdBlockConfigPtrOutputWithContext(ctx)
}

// NodePoolNodeConfigLocalNvmeSsdBlockConfigPtrInput is an input type that accepts NodePoolNodeConfigLocalNvmeSsdBlockConfigArgs, NodePoolNodeConfigLocalNvmeSsdBlockConfigPtr and NodePoolNodeConfigLocalNvmeSsdBlockConfigPtrOutput values.
// You can construct a concrete instance of `NodePoolNodeConfigLocalNvmeSsdBlockConfigPtrInput` via:
//
//	        NodePoolNodeConfigLocalNvmeSsdBlockConfigArgs{...}
//
//	or:
//
//	        nil
type NodePoolNodeConfigLocalNvmeSsdBlockConfigPtrInput interface {
	pulumi.Input

	ToNodePoolNodeConfigLocalNvmeSsdBlockConfigPtrOutput() NodePoolNodeConfigLocalNvmeSsdBlockConfigPtrOutput
	ToNodePoolNodeConfigLocalNvmeSsdBlockConfigPtrOutputWithContext(context.Context) NodePoolNodeConfigLocalNvmeSsdBlockConfigPtrOutput
}

type nodePoolNodeConfigLocalNvmeSsdBlockConfigPtrType NodePoolNodeConfigLocalNvmeSsdBlockConfigArgs

func NodePoolNodeConfigLocalNvmeSsdBlockConfigPtr(v *NodePoolNodeConfigLocalNvmeSsdBlockConfigArgs) NodePoolNodeConfigLocalNvmeSsdBlockConfigPtrInput {
	return (*nodePoolNodeConfigLocalNvmeSsdBlockConfigPtrType)(v)
}

func (*nodePoolNodeConfigLocalNvmeSsdBlockConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolNodeConfigLocalNvmeSsdBlockConfig)(nil)).Elem()
}

func (i *nodePoolNodeConfigLocalNvmeSsdBlockConfigPtrType) ToNodePoolNodeConfigLocalNvmeSsdBlockConfigPtrOutput() NodePoolNodeConfigLocalNvmeSsdBlockConfigPtrOutput {
	return i.ToNodePoolNodeConfigLocalNvmeSsdBlockConfigPtrOutputWithContext(context.Background())
}

func (i *nodePoolNodeConfigLocalNvmeSsdBlockConfigPtrType) ToNodePoolNodeConfigLocalNvmeSsdBlockConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigLocalNvmeSsdBlockConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigLocalNvmeSsdBlockConfigPtrOutput)
}

type NodePoolNodeConfigLocalNvmeSsdBlockConfigOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigLocalNvmeSsdBlockConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigLocalNvmeSsdBlockConfig)(nil)).Elem()
}

func (o NodePoolNodeConfigLocalNvmeSsdBlockConfigOutput) ToNodePoolNodeConfigLocalNvmeSsdBlockConfigOutput() NodePoolNodeConfigLocalNvmeSsdBlockConfigOutput {
	return o
}

func (o NodePoolNodeConfigLocalNvmeSsdBlockConfigOutput) ToNodePoolNodeConfigLocalNvmeSsdBlockConfigOutputWithContext(ctx context.Context) NodePoolNodeConfigLocalNvmeSsdBlockConfigOutput {
	return o
}

func (o NodePoolNodeConfigLocalNvmeSsdBlockConfigOutput) ToNodePoolNodeConfigLocalNvmeSsdBlockConfigPtrOutput() NodePoolNodeConfigLocalNvmeSsdBlockConfigPtrOutput {
	return o.ToNodePoolNodeConfigLocalNvmeSsdBlockConfigPtrOutputWithContext(context.Background())
}

func (o NodePoolNodeConfigLocalNvmeSsdBlockConfigOutput) ToNodePoolNodeConfigLocalNvmeSsdBlockConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigLocalNvmeSsdBlockConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NodePoolNodeConfigLocalNvmeSsdBlockConfig) *NodePoolNodeConfigLocalNvmeSsdBlockConfig {
		return &v
	}).(NodePoolNodeConfigLocalNvmeSsdBlockConfigPtrOutput)
}

// Number of raw-block local NVMe SSD disks to be attached to the node. Each local SSD is 375 GB in size.
func (o NodePoolNodeConfigLocalNvmeSsdBlockConfigOutput) LocalSsdCount() pulumi.IntOutput {
	return o.ApplyT(func(v NodePoolNodeConfigLocalNvmeSsdBlockConfig) int { return v.LocalSsdCount }).(pulumi.IntOutput)
}

type NodePoolNodeConfigLocalNvmeSsdBlockConfigPtrOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigLocalNvmeSsdBlockConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolNodeConfigLocalNvmeSsdBlockConfig)(nil)).Elem()
}

func (o NodePoolNodeConfigLocalNvmeSsdBlockConfigPtrOutput) ToNodePoolNodeConfigLocalNvmeSsdBlockConfigPtrOutput() NodePoolNodeConfigLocalNvmeSsdBlockConfigPtrOutput {
	return o
}

func (o NodePoolNodeConfigLocalNvmeSsdBlockConfigPtrOutput) ToNodePoolNodeConfigLocalNvmeSsdBlockConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigLocalNvmeSsdBlockConfigPtrOutput {
	return o
}

func (o NodePoolNodeConfigLocalNvmeSsdBlockConfigPtrOutput) Elem() NodePoolNodeConfigLocalNvmeSsdBlockConfigOutput {
	return o.ApplyT(func(v *NodePoolNodeConfigLocalNvmeSsdBlockConfig) NodePoolNodeConfigLocalNvmeSsdBlockConfig {
		if v != nil {
			return *v
		}
		var ret NodePoolNodeConfigLocalNvmeSsdBlockConfig
		return ret
	}).(NodePoolNodeConfigLocalNvmeSsdBlockConfigOutput)
}

// Number of raw-block local NVMe SSD disks to be attached to the node. Each local SSD is 375 GB in size.
func (o NodePoolNodeConfigLocalNvmeSsdBlockConfigPtrOutput) LocalSsdCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodePoolNodeConfigLocalNvmeSsdBlockConfig) *int {
		if v == nil {
			return nil
		}
		return &v.LocalSsdCount
	}).(pulumi.IntPtrOutput)
}

type NodePoolNodeConfigReservationAffinity struct {
	// Corresponds to the type of reservation consumption.
	ConsumeReservationType string `pulumi:"consumeReservationType"`
	// The label key of a reservation resource.
	Key *string `pulumi:"key"`
	// The label values of the reservation resource.
	Values []string `pulumi:"values"`
}

// NodePoolNodeConfigReservationAffinityInput is an input type that accepts NodePoolNodeConfigReservationAffinityArgs and NodePoolNodeConfigReservationAffinityOutput values.
// You can construct a concrete instance of `NodePoolNodeConfigReservationAffinityInput` via:
//
//	NodePoolNodeConfigReservationAffinityArgs{...}
type NodePoolNodeConfigReservationAffinityInput interface {
	pulumi.Input

	ToNodePoolNodeConfigReservationAffinityOutput() NodePoolNodeConfigReservationAffinityOutput
	ToNodePoolNodeConfigReservationAffinityOutputWithContext(context.Context) NodePoolNodeConfigReservationAffinityOutput
}

type NodePoolNodeConfigReservationAffinityArgs struct {
	// Corresponds to the type of reservation consumption.
	ConsumeReservationType pulumi.StringInput `pulumi:"consumeReservationType"`
	// The label key of a reservation resource.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The label values of the reservation resource.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (NodePoolNodeConfigReservationAffinityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigReservationAffinity)(nil)).Elem()
}

func (i NodePoolNodeConfigReservationAffinityArgs) ToNodePoolNodeConfigReservationAffinityOutput() NodePoolNodeConfigReservationAffinityOutput {
	return i.ToNodePoolNodeConfigReservationAffinityOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigReservationAffinityArgs) ToNodePoolNodeConfigReservationAffinityOutputWithContext(ctx context.Context) NodePoolNodeConfigReservationAffinityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigReservationAffinityOutput)
}

func (i NodePoolNodeConfigReservationAffinityArgs) ToNodePoolNodeConfigReservationAffinityPtrOutput() NodePoolNodeConfigReservationAffinityPtrOutput {
	return i.ToNodePoolNodeConfigReservationAffinityPtrOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigReservationAffinityArgs) ToNodePoolNodeConfigReservationAffinityPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigReservationAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigReservationAffinityOutput).ToNodePoolNodeConfigReservationAffinityPtrOutputWithContext(ctx)
}

// NodePoolNodeConfigReservationAffinityPtrInput is an input type that accepts NodePoolNodeConfigReservationAffinityArgs, NodePoolNodeConfigReservationAffinityPtr and NodePoolNodeConfigReservationAffinityPtrOutput values.
// You can construct a concrete instance of `NodePoolNodeConfigReservationAffinityPtrInput` via:
//
//	        NodePoolNodeConfigReservationAffinityArgs{...}
//
//	or:
//
//	        nil
type NodePoolNodeConfigReservationAffinityPtrInput interface {
	pulumi.Input

	ToNodePoolNodeConfigReservationAffinityPtrOutput() NodePoolNodeConfigReservationAffinityPtrOutput
	ToNodePoolNodeConfigReservationAffinityPtrOutputWithContext(context.Context) NodePoolNodeConfigReservationAffinityPtrOutput
}

type nodePoolNodeConfigReservationAffinityPtrType NodePoolNodeConfigReservationAffinityArgs

func NodePoolNodeConfigReservationAffinityPtr(v *NodePoolNodeConfigReservationAffinityArgs) NodePoolNodeConfigReservationAffinityPtrInput {
	return (*nodePoolNodeConfigReservationAffinityPtrType)(v)
}

func (*nodePoolNodeConfigReservationAffinityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolNodeConfigReservationAffinity)(nil)).Elem()
}

func (i *nodePoolNodeConfigReservationAffinityPtrType) ToNodePoolNodeConfigReservationAffinityPtrOutput() NodePoolNodeConfigReservationAffinityPtrOutput {
	return i.ToNodePoolNodeConfigReservationAffinityPtrOutputWithContext(context.Background())
}

func (i *nodePoolNodeConfigReservationAffinityPtrType) ToNodePoolNodeConfigReservationAffinityPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigReservationAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigReservationAffinityPtrOutput)
}

type NodePoolNodeConfigReservationAffinityOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigReservationAffinityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigReservationAffinity)(nil)).Elem()
}

func (o NodePoolNodeConfigReservationAffinityOutput) ToNodePoolNodeConfigReservationAffinityOutput() NodePoolNodeConfigReservationAffinityOutput {
	return o
}

func (o NodePoolNodeConfigReservationAffinityOutput) ToNodePoolNodeConfigReservationAffinityOutputWithContext(ctx context.Context) NodePoolNodeConfigReservationAffinityOutput {
	return o
}

func (o NodePoolNodeConfigReservationAffinityOutput) ToNodePoolNodeConfigReservationAffinityPtrOutput() NodePoolNodeConfigReservationAffinityPtrOutput {
	return o.ToNodePoolNodeConfigReservationAffinityPtrOutputWithContext(context.Background())
}

func (o NodePoolNodeConfigReservationAffinityOutput) ToNodePoolNodeConfigReservationAffinityPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigReservationAffinityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NodePoolNodeConfigReservationAffinity) *NodePoolNodeConfigReservationAffinity {
		return &v
	}).(NodePoolNodeConfigReservationAffinityPtrOutput)
}

// Corresponds to the type of reservation consumption.
func (o NodePoolNodeConfigReservationAffinityOutput) ConsumeReservationType() pulumi.StringOutput {
	return o.ApplyT(func(v NodePoolNodeConfigReservationAffinity) string { return v.ConsumeReservationType }).(pulumi.StringOutput)
}

// The label key of a reservation resource.
func (o NodePoolNodeConfigReservationAffinityOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigReservationAffinity) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The label values of the reservation resource.
func (o NodePoolNodeConfigReservationAffinityOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NodePoolNodeConfigReservationAffinity) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type NodePoolNodeConfigReservationAffinityPtrOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigReservationAffinityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolNodeConfigReservationAffinity)(nil)).Elem()
}

func (o NodePoolNodeConfigReservationAffinityPtrOutput) ToNodePoolNodeConfigReservationAffinityPtrOutput() NodePoolNodeConfigReservationAffinityPtrOutput {
	return o
}

func (o NodePoolNodeConfigReservationAffinityPtrOutput) ToNodePoolNodeConfigReservationAffinityPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigReservationAffinityPtrOutput {
	return o
}

func (o NodePoolNodeConfigReservationAffinityPtrOutput) Elem() NodePoolNodeConfigReservationAffinityOutput {
	return o.ApplyT(func(v *NodePoolNodeConfigReservationAffinity) NodePoolNodeConfigReservationAffinity {
		if v != nil {
			return *v
		}
		var ret NodePoolNodeConfigReservationAffinity
		return ret
	}).(NodePoolNodeConfigReservationAffinityOutput)
}

// Corresponds to the type of reservation consumption.
func (o NodePoolNodeConfigReservationAffinityPtrOutput) ConsumeReservationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodePoolNodeConfigReservationAffinity) *string {
		if v == nil {
			return nil
		}
		return &v.ConsumeReservationType
	}).(pulumi.StringPtrOutput)
}

// The label key of a reservation resource.
func (o NodePoolNodeConfigReservationAffinityPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodePoolNodeConfigReservationAffinity) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The label values of the reservation resource.
func (o NodePoolNodeConfigReservationAffinityPtrOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NodePoolNodeConfigReservationAffinity) []string {
		if v == nil {
			return nil
		}
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type NodePoolNodeConfigSandboxConfig struct {
	// Type of the sandbox to use for the node (e.g. 'gvisor')
	SandboxType string `pulumi:"sandboxType"`
}

// NodePoolNodeConfigSandboxConfigInput is an input type that accepts NodePoolNodeConfigSandboxConfigArgs and NodePoolNodeConfigSandboxConfigOutput values.
// You can construct a concrete instance of `NodePoolNodeConfigSandboxConfigInput` via:
//
//	NodePoolNodeConfigSandboxConfigArgs{...}
type NodePoolNodeConfigSandboxConfigInput interface {
	pulumi.Input

	ToNodePoolNodeConfigSandboxConfigOutput() NodePoolNodeConfigSandboxConfigOutput
	ToNodePoolNodeConfigSandboxConfigOutputWithContext(context.Context) NodePoolNodeConfigSandboxConfigOutput
}

type NodePoolNodeConfigSandboxConfigArgs struct {
	// Type of the sandbox to use for the node (e.g. 'gvisor')
	SandboxType pulumi.StringInput `pulumi:"sandboxType"`
}

func (NodePoolNodeConfigSandboxConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigSandboxConfig)(nil)).Elem()
}

func (i NodePoolNodeConfigSandboxConfigArgs) ToNodePoolNodeConfigSandboxConfigOutput() NodePoolNodeConfigSandboxConfigOutput {
	return i.ToNodePoolNodeConfigSandboxConfigOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigSandboxConfigArgs) ToNodePoolNodeConfigSandboxConfigOutputWithContext(ctx context.Context) NodePoolNodeConfigSandboxConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigSandboxConfigOutput)
}

func (i NodePoolNodeConfigSandboxConfigArgs) ToNodePoolNodeConfigSandboxConfigPtrOutput() NodePoolNodeConfigSandboxConfigPtrOutput {
	return i.ToNodePoolNodeConfigSandboxConfigPtrOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigSandboxConfigArgs) ToNodePoolNodeConfigSandboxConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigSandboxConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigSandboxConfigOutput).ToNodePoolNodeConfigSandboxConfigPtrOutputWithContext(ctx)
}

// NodePoolNodeConfigSandboxConfigPtrInput is an input type that accepts NodePoolNodeConfigSandboxConfigArgs, NodePoolNodeConfigSandboxConfigPtr and NodePoolNodeConfigSandboxConfigPtrOutput values.
// You can construct a concrete instance of `NodePoolNodeConfigSandboxConfigPtrInput` via:
//
//	        NodePoolNodeConfigSandboxConfigArgs{...}
//
//	or:
//
//	        nil
type NodePoolNodeConfigSandboxConfigPtrInput interface {
	pulumi.Input

	ToNodePoolNodeConfigSandboxConfigPtrOutput() NodePoolNodeConfigSandboxConfigPtrOutput
	ToNodePoolNodeConfigSandboxConfigPtrOutputWithContext(context.Context) NodePoolNodeConfigSandboxConfigPtrOutput
}

type nodePoolNodeConfigSandboxConfigPtrType NodePoolNodeConfigSandboxConfigArgs

func NodePoolNodeConfigSandboxConfigPtr(v *NodePoolNodeConfigSandboxConfigArgs) NodePoolNodeConfigSandboxConfigPtrInput {
	return (*nodePoolNodeConfigSandboxConfigPtrType)(v)
}

func (*nodePoolNodeConfigSandboxConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolNodeConfigSandboxConfig)(nil)).Elem()
}

func (i *nodePoolNodeConfigSandboxConfigPtrType) ToNodePoolNodeConfigSandboxConfigPtrOutput() NodePoolNodeConfigSandboxConfigPtrOutput {
	return i.ToNodePoolNodeConfigSandboxConfigPtrOutputWithContext(context.Background())
}

func (i *nodePoolNodeConfigSandboxConfigPtrType) ToNodePoolNodeConfigSandboxConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigSandboxConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigSandboxConfigPtrOutput)
}

type NodePoolNodeConfigSandboxConfigOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigSandboxConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigSandboxConfig)(nil)).Elem()
}

func (o NodePoolNodeConfigSandboxConfigOutput) ToNodePoolNodeConfigSandboxConfigOutput() NodePoolNodeConfigSandboxConfigOutput {
	return o
}

func (o NodePoolNodeConfigSandboxConfigOutput) ToNodePoolNodeConfigSandboxConfigOutputWithContext(ctx context.Context) NodePoolNodeConfigSandboxConfigOutput {
	return o
}

func (o NodePoolNodeConfigSandboxConfigOutput) ToNodePoolNodeConfigSandboxConfigPtrOutput() NodePoolNodeConfigSandboxConfigPtrOutput {
	return o.ToNodePoolNodeConfigSandboxConfigPtrOutputWithContext(context.Background())
}

func (o NodePoolNodeConfigSandboxConfigOutput) ToNodePoolNodeConfigSandboxConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigSandboxConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NodePoolNodeConfigSandboxConfig) *NodePoolNodeConfigSandboxConfig {
		return &v
	}).(NodePoolNodeConfigSandboxConfigPtrOutput)
}

// Type of the sandbox to use for the node (e.g. 'gvisor')
func (o NodePoolNodeConfigSandboxConfigOutput) SandboxType() pulumi.StringOutput {
	return o.ApplyT(func(v NodePoolNodeConfigSandboxConfig) string { return v.SandboxType }).(pulumi.StringOutput)
}

type NodePoolNodeConfigSandboxConfigPtrOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigSandboxConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolNodeConfigSandboxConfig)(nil)).Elem()
}

func (o NodePoolNodeConfigSandboxConfigPtrOutput) ToNodePoolNodeConfigSandboxConfigPtrOutput() NodePoolNodeConfigSandboxConfigPtrOutput {
	return o
}

func (o NodePoolNodeConfigSandboxConfigPtrOutput) ToNodePoolNodeConfigSandboxConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigSandboxConfigPtrOutput {
	return o
}

func (o NodePoolNodeConfigSandboxConfigPtrOutput) Elem() NodePoolNodeConfigSandboxConfigOutput {
	return o.ApplyT(func(v *NodePoolNodeConfigSandboxConfig) NodePoolNodeConfigSandboxConfig {
		if v != nil {
			return *v
		}
		var ret NodePoolNodeConfigSandboxConfig
		return ret
	}).(NodePoolNodeConfigSandboxConfigOutput)
}

// Type of the sandbox to use for the node (e.g. 'gvisor')
func (o NodePoolNodeConfigSandboxConfigPtrOutput) SandboxType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodePoolNodeConfigSandboxConfig) *string {
		if v == nil {
			return nil
		}
		return &v.SandboxType
	}).(pulumi.StringPtrOutput)
}

type NodePoolNodeConfigSecondaryBootDisk struct {
	// Disk image to create the secondary boot disk from
	DiskImage string `pulumi:"diskImage"`
	// Mode for how the secondary boot disk is used.
	Mode *string `pulumi:"mode"`
}

// NodePoolNodeConfigSecondaryBootDiskInput is an input type that accepts NodePoolNodeConfigSecondaryBootDiskArgs and NodePoolNodeConfigSecondaryBootDiskOutput values.
// You can construct a concrete instance of `NodePoolNodeConfigSecondaryBootDiskInput` via:
//
//	NodePoolNodeConfigSecondaryBootDiskArgs{...}
type NodePoolNodeConfigSecondaryBootDiskInput interface {
	pulumi.Input

	ToNodePoolNodeConfigSecondaryBootDiskOutput() NodePoolNodeConfigSecondaryBootDiskOutput
	ToNodePoolNodeConfigSecondaryBootDiskOutputWithContext(context.Context) NodePoolNodeConfigSecondaryBootDiskOutput
}

type NodePoolNodeConfigSecondaryBootDiskArgs struct {
	// Disk image to create the secondary boot disk from
	DiskImage pulumi.StringInput `pulumi:"diskImage"`
	// Mode for how the secondary boot disk is used.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (NodePoolNodeConfigSecondaryBootDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigSecondaryBootDisk)(nil)).Elem()
}

func (i NodePoolNodeConfigSecondaryBootDiskArgs) ToNodePoolNodeConfigSecondaryBootDiskOutput() NodePoolNodeConfigSecondaryBootDiskOutput {
	return i.ToNodePoolNodeConfigSecondaryBootDiskOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigSecondaryBootDiskArgs) ToNodePoolNodeConfigSecondaryBootDiskOutputWithContext(ctx context.Context) NodePoolNodeConfigSecondaryBootDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigSecondaryBootDiskOutput)
}

// NodePoolNodeConfigSecondaryBootDiskArrayInput is an input type that accepts NodePoolNodeConfigSecondaryBootDiskArray and NodePoolNodeConfigSecondaryBootDiskArrayOutput values.
// You can construct a concrete instance of `NodePoolNodeConfigSecondaryBootDiskArrayInput` via:
//
//	NodePoolNodeConfigSecondaryBootDiskArray{ NodePoolNodeConfigSecondaryBootDiskArgs{...} }
type NodePoolNodeConfigSecondaryBootDiskArrayInput interface {
	pulumi.Input

	ToNodePoolNodeConfigSecondaryBootDiskArrayOutput() NodePoolNodeConfigSecondaryBootDiskArrayOutput
	ToNodePoolNodeConfigSecondaryBootDiskArrayOutputWithContext(context.Context) NodePoolNodeConfigSecondaryBootDiskArrayOutput
}

type NodePoolNodeConfigSecondaryBootDiskArray []NodePoolNodeConfigSecondaryBootDiskInput

func (NodePoolNodeConfigSecondaryBootDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodePoolNodeConfigSecondaryBootDisk)(nil)).Elem()
}

func (i NodePoolNodeConfigSecondaryBootDiskArray) ToNodePoolNodeConfigSecondaryBootDiskArrayOutput() NodePoolNodeConfigSecondaryBootDiskArrayOutput {
	return i.ToNodePoolNodeConfigSecondaryBootDiskArrayOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigSecondaryBootDiskArray) ToNodePoolNodeConfigSecondaryBootDiskArrayOutputWithContext(ctx context.Context) NodePoolNodeConfigSecondaryBootDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigSecondaryBootDiskArrayOutput)
}

type NodePoolNodeConfigSecondaryBootDiskOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigSecondaryBootDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigSecondaryBootDisk)(nil)).Elem()
}

func (o NodePoolNodeConfigSecondaryBootDiskOutput) ToNodePoolNodeConfigSecondaryBootDiskOutput() NodePoolNodeConfigSecondaryBootDiskOutput {
	return o
}

func (o NodePoolNodeConfigSecondaryBootDiskOutput) ToNodePoolNodeConfigSecondaryBootDiskOutputWithContext(ctx context.Context) NodePoolNodeConfigSecondaryBootDiskOutput {
	return o
}

// Disk image to create the secondary boot disk from
func (o NodePoolNodeConfigSecondaryBootDiskOutput) DiskImage() pulumi.StringOutput {
	return o.ApplyT(func(v NodePoolNodeConfigSecondaryBootDisk) string { return v.DiskImage }).(pulumi.StringOutput)
}

// Mode for how the secondary boot disk is used.
func (o NodePoolNodeConfigSecondaryBootDiskOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigSecondaryBootDisk) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type NodePoolNodeConfigSecondaryBootDiskArrayOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigSecondaryBootDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodePoolNodeConfigSecondaryBootDisk)(nil)).Elem()
}

func (o NodePoolNodeConfigSecondaryBootDiskArrayOutput) ToNodePoolNodeConfigSecondaryBootDiskArrayOutput() NodePoolNodeConfigSecondaryBootDiskArrayOutput {
	return o
}

func (o NodePoolNodeConfigSecondaryBootDiskArrayOutput) ToNodePoolNodeConfigSecondaryBootDiskArrayOutputWithContext(ctx context.Context) NodePoolNodeConfigSecondaryBootDiskArrayOutput {
	return o
}

func (o NodePoolNodeConfigSecondaryBootDiskArrayOutput) Index(i pulumi.IntInput) NodePoolNodeConfigSecondaryBootDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NodePoolNodeConfigSecondaryBootDisk {
		return vs[0].([]NodePoolNodeConfigSecondaryBootDisk)[vs[1].(int)]
	}).(NodePoolNodeConfigSecondaryBootDiskOutput)
}

type NodePoolNodeConfigShieldedInstanceConfig struct {
	// Defines whether the instance has integrity monitoring enabled.
	EnableIntegrityMonitoring *bool `pulumi:"enableIntegrityMonitoring"`
	// Defines whether the instance has Secure Boot enabled.
	EnableSecureBoot *bool `pulumi:"enableSecureBoot"`
}

// NodePoolNodeConfigShieldedInstanceConfigInput is an input type that accepts NodePoolNodeConfigShieldedInstanceConfigArgs and NodePoolNodeConfigShieldedInstanceConfigOutput values.
// You can construct a concrete instance of `NodePoolNodeConfigShieldedInstanceConfigInput` via:
//
//	NodePoolNodeConfigShieldedInstanceConfigArgs{...}
type NodePoolNodeConfigShieldedInstanceConfigInput interface {
	pulumi.Input

	ToNodePoolNodeConfigShieldedInstanceConfigOutput() NodePoolNodeConfigShieldedInstanceConfigOutput
	ToNodePoolNodeConfigShieldedInstanceConfigOutputWithContext(context.Context) NodePoolNodeConfigShieldedInstanceConfigOutput
}

type NodePoolNodeConfigShieldedInstanceConfigArgs struct {
	// Defines whether the instance has integrity monitoring enabled.
	EnableIntegrityMonitoring pulumi.BoolPtrInput `pulumi:"enableIntegrityMonitoring"`
	// Defines whether the instance has Secure Boot enabled.
	EnableSecureBoot pulumi.BoolPtrInput `pulumi:"enableSecureBoot"`
}

func (NodePoolNodeConfigShieldedInstanceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigShieldedInstanceConfig)(nil)).Elem()
}

func (i NodePoolNodeConfigShieldedInstanceConfigArgs) ToNodePoolNodeConfigShieldedInstanceConfigOutput() NodePoolNodeConfigShieldedInstanceConfigOutput {
	return i.ToNodePoolNodeConfigShieldedInstanceConfigOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigShieldedInstanceConfigArgs) ToNodePoolNodeConfigShieldedInstanceConfigOutputWithContext(ctx context.Context) NodePoolNodeConfigShieldedInstanceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigShieldedInstanceConfigOutput)
}

func (i NodePoolNodeConfigShieldedInstanceConfigArgs) ToNodePoolNodeConfigShieldedInstanceConfigPtrOutput() NodePoolNodeConfigShieldedInstanceConfigPtrOutput {
	return i.ToNodePoolNodeConfigShieldedInstanceConfigPtrOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigShieldedInstanceConfigArgs) ToNodePoolNodeConfigShieldedInstanceConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigShieldedInstanceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigShieldedInstanceConfigOutput).ToNodePoolNodeConfigShieldedInstanceConfigPtrOutputWithContext(ctx)
}

// NodePoolNodeConfigShieldedInstanceConfigPtrInput is an input type that accepts NodePoolNodeConfigShieldedInstanceConfigArgs, NodePoolNodeConfigShieldedInstanceConfigPtr and NodePoolNodeConfigShieldedInstanceConfigPtrOutput values.
// You can construct a concrete instance of `NodePoolNodeConfigShieldedInstanceConfigPtrInput` via:
//
//	        NodePoolNodeConfigShieldedInstanceConfigArgs{...}
//
//	or:
//
//	        nil
type NodePoolNodeConfigShieldedInstanceConfigPtrInput interface {
	pulumi.Input

	ToNodePoolNodeConfigShieldedInstanceConfigPtrOutput() NodePoolNodeConfigShieldedInstanceConfigPtrOutput
	ToNodePoolNodeConfigShieldedInstanceConfigPtrOutputWithContext(context.Context) NodePoolNodeConfigShieldedInstanceConfigPtrOutput
}

type nodePoolNodeConfigShieldedInstanceConfigPtrType NodePoolNodeConfigShieldedInstanceConfigArgs

func NodePoolNodeConfigShieldedInstanceConfigPtr(v *NodePoolNodeConfigShieldedInstanceConfigArgs) NodePoolNodeConfigShieldedInstanceConfigPtrInput {
	return (*nodePoolNodeConfigShieldedInstanceConfigPtrType)(v)
}

func (*nodePoolNodeConfigShieldedInstanceConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolNodeConfigShieldedInstanceConfig)(nil)).Elem()
}

func (i *nodePoolNodeConfigShieldedInstanceConfigPtrType) ToNodePoolNodeConfigShieldedInstanceConfigPtrOutput() NodePoolNodeConfigShieldedInstanceConfigPtrOutput {
	return i.ToNodePoolNodeConfigShieldedInstanceConfigPtrOutputWithContext(context.Background())
}

func (i *nodePoolNodeConfigShieldedInstanceConfigPtrType) ToNodePoolNodeConfigShieldedInstanceConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigShieldedInstanceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigShieldedInstanceConfigPtrOutput)
}

type NodePoolNodeConfigShieldedInstanceConfigOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigShieldedInstanceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigShieldedInstanceConfig)(nil)).Elem()
}

func (o NodePoolNodeConfigShieldedInstanceConfigOutput) ToNodePoolNodeConfigShieldedInstanceConfigOutput() NodePoolNodeConfigShieldedInstanceConfigOutput {
	return o
}

func (o NodePoolNodeConfigShieldedInstanceConfigOutput) ToNodePoolNodeConfigShieldedInstanceConfigOutputWithContext(ctx context.Context) NodePoolNodeConfigShieldedInstanceConfigOutput {
	return o
}

func (o NodePoolNodeConfigShieldedInstanceConfigOutput) ToNodePoolNodeConfigShieldedInstanceConfigPtrOutput() NodePoolNodeConfigShieldedInstanceConfigPtrOutput {
	return o.ToNodePoolNodeConfigShieldedInstanceConfigPtrOutputWithContext(context.Background())
}

func (o NodePoolNodeConfigShieldedInstanceConfigOutput) ToNodePoolNodeConfigShieldedInstanceConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigShieldedInstanceConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NodePoolNodeConfigShieldedInstanceConfig) *NodePoolNodeConfigShieldedInstanceConfig {
		return &v
	}).(NodePoolNodeConfigShieldedInstanceConfigPtrOutput)
}

// Defines whether the instance has integrity monitoring enabled.
func (o NodePoolNodeConfigShieldedInstanceConfigOutput) EnableIntegrityMonitoring() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigShieldedInstanceConfig) *bool { return v.EnableIntegrityMonitoring }).(pulumi.BoolPtrOutput)
}

// Defines whether the instance has Secure Boot enabled.
func (o NodePoolNodeConfigShieldedInstanceConfigOutput) EnableSecureBoot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigShieldedInstanceConfig) *bool { return v.EnableSecureBoot }).(pulumi.BoolPtrOutput)
}

type NodePoolNodeConfigShieldedInstanceConfigPtrOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigShieldedInstanceConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolNodeConfigShieldedInstanceConfig)(nil)).Elem()
}

func (o NodePoolNodeConfigShieldedInstanceConfigPtrOutput) ToNodePoolNodeConfigShieldedInstanceConfigPtrOutput() NodePoolNodeConfigShieldedInstanceConfigPtrOutput {
	return o
}

func (o NodePoolNodeConfigShieldedInstanceConfigPtrOutput) ToNodePoolNodeConfigShieldedInstanceConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigShieldedInstanceConfigPtrOutput {
	return o
}

func (o NodePoolNodeConfigShieldedInstanceConfigPtrOutput) Elem() NodePoolNodeConfigShieldedInstanceConfigOutput {
	return o.ApplyT(func(v *NodePoolNodeConfigShieldedInstanceConfig) NodePoolNodeConfigShieldedInstanceConfig {
		if v != nil {
			return *v
		}
		var ret NodePoolNodeConfigShieldedInstanceConfig
		return ret
	}).(NodePoolNodeConfigShieldedInstanceConfigOutput)
}

// Defines whether the instance has integrity monitoring enabled.
func (o NodePoolNodeConfigShieldedInstanceConfigPtrOutput) EnableIntegrityMonitoring() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NodePoolNodeConfigShieldedInstanceConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EnableIntegrityMonitoring
	}).(pulumi.BoolPtrOutput)
}

// Defines whether the instance has Secure Boot enabled.
func (o NodePoolNodeConfigShieldedInstanceConfigPtrOutput) EnableSecureBoot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NodePoolNodeConfigShieldedInstanceConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EnableSecureBoot
	}).(pulumi.BoolPtrOutput)
}

type NodePoolNodeConfigSoleTenantConfig struct {
	// .
	NodeAffinities []NodePoolNodeConfigSoleTenantConfigNodeAffinity `pulumi:"nodeAffinities"`
}

// NodePoolNodeConfigSoleTenantConfigInput is an input type that accepts NodePoolNodeConfigSoleTenantConfigArgs and NodePoolNodeConfigSoleTenantConfigOutput values.
// You can construct a concrete instance of `NodePoolNodeConfigSoleTenantConfigInput` via:
//
//	NodePoolNodeConfigSoleTenantConfigArgs{...}
type NodePoolNodeConfigSoleTenantConfigInput interface {
	pulumi.Input

	ToNodePoolNodeConfigSoleTenantConfigOutput() NodePoolNodeConfigSoleTenantConfigOutput
	ToNodePoolNodeConfigSoleTenantConfigOutputWithContext(context.Context) NodePoolNodeConfigSoleTenantConfigOutput
}

type NodePoolNodeConfigSoleTenantConfigArgs struct {
	// .
	NodeAffinities NodePoolNodeConfigSoleTenantConfigNodeAffinityArrayInput `pulumi:"nodeAffinities"`
}

func (NodePoolNodeConfigSoleTenantConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigSoleTenantConfig)(nil)).Elem()
}

func (i NodePoolNodeConfigSoleTenantConfigArgs) ToNodePoolNodeConfigSoleTenantConfigOutput() NodePoolNodeConfigSoleTenantConfigOutput {
	return i.ToNodePoolNodeConfigSoleTenantConfigOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigSoleTenantConfigArgs) ToNodePoolNodeConfigSoleTenantConfigOutputWithContext(ctx context.Context) NodePoolNodeConfigSoleTenantConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigSoleTenantConfigOutput)
}

func (i NodePoolNodeConfigSoleTenantConfigArgs) ToNodePoolNodeConfigSoleTenantConfigPtrOutput() NodePoolNodeConfigSoleTenantConfigPtrOutput {
	return i.ToNodePoolNodeConfigSoleTenantConfigPtrOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigSoleTenantConfigArgs) ToNodePoolNodeConfigSoleTenantConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigSoleTenantConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigSoleTenantConfigOutput).ToNodePoolNodeConfigSoleTenantConfigPtrOutputWithContext(ctx)
}

// NodePoolNodeConfigSoleTenantConfigPtrInput is an input type that accepts NodePoolNodeConfigSoleTenantConfigArgs, NodePoolNodeConfigSoleTenantConfigPtr and NodePoolNodeConfigSoleTenantConfigPtrOutput values.
// You can construct a concrete instance of `NodePoolNodeConfigSoleTenantConfigPtrInput` via:
//
//	        NodePoolNodeConfigSoleTenantConfigArgs{...}
//
//	or:
//
//	        nil
type NodePoolNodeConfigSoleTenantConfigPtrInput interface {
	pulumi.Input

	ToNodePoolNodeConfigSoleTenantConfigPtrOutput() NodePoolNodeConfigSoleTenantConfigPtrOutput
	ToNodePoolNodeConfigSoleTenantConfigPtrOutputWithContext(context.Context) NodePoolNodeConfigSoleTenantConfigPtrOutput
}

type nodePoolNodeConfigSoleTenantConfigPtrType NodePoolNodeConfigSoleTenantConfigArgs

func NodePoolNodeConfigSoleTenantConfigPtr(v *NodePoolNodeConfigSoleTenantConfigArgs) NodePoolNodeConfigSoleTenantConfigPtrInput {
	return (*nodePoolNodeConfigSoleTenantConfigPtrType)(v)
}

func (*nodePoolNodeConfigSoleTenantConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolNodeConfigSoleTenantConfig)(nil)).Elem()
}

func (i *nodePoolNodeConfigSoleTenantConfigPtrType) ToNodePoolNodeConfigSoleTenantConfigPtrOutput() NodePoolNodeConfigSoleTenantConfigPtrOutput {
	return i.ToNodePoolNodeConfigSoleTenantConfigPtrOutputWithContext(context.Background())
}

func (i *nodePoolNodeConfigSoleTenantConfigPtrType) ToNodePoolNodeConfigSoleTenantConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigSoleTenantConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigSoleTenantConfigPtrOutput)
}

type NodePoolNodeConfigSoleTenantConfigOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigSoleTenantConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigSoleTenantConfig)(nil)).Elem()
}

func (o NodePoolNodeConfigSoleTenantConfigOutput) ToNodePoolNodeConfigSoleTenantConfigOutput() NodePoolNodeConfigSoleTenantConfigOutput {
	return o
}

func (o NodePoolNodeConfigSoleTenantConfigOutput) ToNodePoolNodeConfigSoleTenantConfigOutputWithContext(ctx context.Context) NodePoolNodeConfigSoleTenantConfigOutput {
	return o
}

func (o NodePoolNodeConfigSoleTenantConfigOutput) ToNodePoolNodeConfigSoleTenantConfigPtrOutput() NodePoolNodeConfigSoleTenantConfigPtrOutput {
	return o.ToNodePoolNodeConfigSoleTenantConfigPtrOutputWithContext(context.Background())
}

func (o NodePoolNodeConfigSoleTenantConfigOutput) ToNodePoolNodeConfigSoleTenantConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigSoleTenantConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NodePoolNodeConfigSoleTenantConfig) *NodePoolNodeConfigSoleTenantConfig {
		return &v
	}).(NodePoolNodeConfigSoleTenantConfigPtrOutput)
}

// .
func (o NodePoolNodeConfigSoleTenantConfigOutput) NodeAffinities() NodePoolNodeConfigSoleTenantConfigNodeAffinityArrayOutput {
	return o.ApplyT(func(v NodePoolNodeConfigSoleTenantConfig) []NodePoolNodeConfigSoleTenantConfigNodeAffinity {
		return v.NodeAffinities
	}).(NodePoolNodeConfigSoleTenantConfigNodeAffinityArrayOutput)
}

type NodePoolNodeConfigSoleTenantConfigPtrOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigSoleTenantConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolNodeConfigSoleTenantConfig)(nil)).Elem()
}

func (o NodePoolNodeConfigSoleTenantConfigPtrOutput) ToNodePoolNodeConfigSoleTenantConfigPtrOutput() NodePoolNodeConfigSoleTenantConfigPtrOutput {
	return o
}

func (o NodePoolNodeConfigSoleTenantConfigPtrOutput) ToNodePoolNodeConfigSoleTenantConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigSoleTenantConfigPtrOutput {
	return o
}

func (o NodePoolNodeConfigSoleTenantConfigPtrOutput) Elem() NodePoolNodeConfigSoleTenantConfigOutput {
	return o.ApplyT(func(v *NodePoolNodeConfigSoleTenantConfig) NodePoolNodeConfigSoleTenantConfig {
		if v != nil {
			return *v
		}
		var ret NodePoolNodeConfigSoleTenantConfig
		return ret
	}).(NodePoolNodeConfigSoleTenantConfigOutput)
}

// .
func (o NodePoolNodeConfigSoleTenantConfigPtrOutput) NodeAffinities() NodePoolNodeConfigSoleTenantConfigNodeAffinityArrayOutput {
	return o.ApplyT(func(v *NodePoolNodeConfigSoleTenantConfig) []NodePoolNodeConfigSoleTenantConfigNodeAffinity {
		if v == nil {
			return nil
		}
		return v.NodeAffinities
	}).(NodePoolNodeConfigSoleTenantConfigNodeAffinityArrayOutput)
}

type NodePoolNodeConfigSoleTenantConfigNodeAffinity struct {
	// .
	Key string `pulumi:"key"`
	// .
	Operator string `pulumi:"operator"`
	// .
	Values []string `pulumi:"values"`
}

// NodePoolNodeConfigSoleTenantConfigNodeAffinityInput is an input type that accepts NodePoolNodeConfigSoleTenantConfigNodeAffinityArgs and NodePoolNodeConfigSoleTenantConfigNodeAffinityOutput values.
// You can construct a concrete instance of `NodePoolNodeConfigSoleTenantConfigNodeAffinityInput` via:
//
//	NodePoolNodeConfigSoleTenantConfigNodeAffinityArgs{...}
type NodePoolNodeConfigSoleTenantConfigNodeAffinityInput interface {
	pulumi.Input

	ToNodePoolNodeConfigSoleTenantConfigNodeAffinityOutput() NodePoolNodeConfigSoleTenantConfigNodeAffinityOutput
	ToNodePoolNodeConfigSoleTenantConfigNodeAffinityOutputWithContext(context.Context) NodePoolNodeConfigSoleTenantConfigNodeAffinityOutput
}

type NodePoolNodeConfigSoleTenantConfigNodeAffinityArgs struct {
	// .
	Key pulumi.StringInput `pulumi:"key"`
	// .
	Operator pulumi.StringInput `pulumi:"operator"`
	// .
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (NodePoolNodeConfigSoleTenantConfigNodeAffinityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigSoleTenantConfigNodeAffinity)(nil)).Elem()
}

func (i NodePoolNodeConfigSoleTenantConfigNodeAffinityArgs) ToNodePoolNodeConfigSoleTenantConfigNodeAffinityOutput() NodePoolNodeConfigSoleTenantConfigNodeAffinityOutput {
	return i.ToNodePoolNodeConfigSoleTenantConfigNodeAffinityOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigSoleTenantConfigNodeAffinityArgs) ToNodePoolNodeConfigSoleTenantConfigNodeAffinityOutputWithContext(ctx context.Context) NodePoolNodeConfigSoleTenantConfigNodeAffinityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigSoleTenantConfigNodeAffinityOutput)
}

// NodePoolNodeConfigSoleTenantConfigNodeAffinityArrayInput is an input type that accepts NodePoolNodeConfigSoleTenantConfigNodeAffinityArray and NodePoolNodeConfigSoleTenantConfigNodeAffinityArrayOutput values.
// You can construct a concrete instance of `NodePoolNodeConfigSoleTenantConfigNodeAffinityArrayInput` via:
//
//	NodePoolNodeConfigSoleTenantConfigNodeAffinityArray{ NodePoolNodeConfigSoleTenantConfigNodeAffinityArgs{...} }
type NodePoolNodeConfigSoleTenantConfigNodeAffinityArrayInput interface {
	pulumi.Input

	ToNodePoolNodeConfigSoleTenantConfigNodeAffinityArrayOutput() NodePoolNodeConfigSoleTenantConfigNodeAffinityArrayOutput
	ToNodePoolNodeConfigSoleTenantConfigNodeAffinityArrayOutputWithContext(context.Context) NodePoolNodeConfigSoleTenantConfigNodeAffinityArrayOutput
}

type NodePoolNodeConfigSoleTenantConfigNodeAffinityArray []NodePoolNodeConfigSoleTenantConfigNodeAffinityInput

func (NodePoolNodeConfigSoleTenantConfigNodeAffinityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodePoolNodeConfigSoleTenantConfigNodeAffinity)(nil)).Elem()
}

func (i NodePoolNodeConfigSoleTenantConfigNodeAffinityArray) ToNodePoolNodeConfigSoleTenantConfigNodeAffinityArrayOutput() NodePoolNodeConfigSoleTenantConfigNodeAffinityArrayOutput {
	return i.ToNodePoolNodeConfigSoleTenantConfigNodeAffinityArrayOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigSoleTenantConfigNodeAffinityArray) ToNodePoolNodeConfigSoleTenantConfigNodeAffinityArrayOutputWithContext(ctx context.Context) NodePoolNodeConfigSoleTenantConfigNodeAffinityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigSoleTenantConfigNodeAffinityArrayOutput)
}

type NodePoolNodeConfigSoleTenantConfigNodeAffinityOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigSoleTenantConfigNodeAffinityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigSoleTenantConfigNodeAffinity)(nil)).Elem()
}

func (o NodePoolNodeConfigSoleTenantConfigNodeAffinityOutput) ToNodePoolNodeConfigSoleTenantConfigNodeAffinityOutput() NodePoolNodeConfigSoleTenantConfigNodeAffinityOutput {
	return o
}

func (o NodePoolNodeConfigSoleTenantConfigNodeAffinityOutput) ToNodePoolNodeConfigSoleTenantConfigNodeAffinityOutputWithContext(ctx context.Context) NodePoolNodeConfigSoleTenantConfigNodeAffinityOutput {
	return o
}

// .
func (o NodePoolNodeConfigSoleTenantConfigNodeAffinityOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v NodePoolNodeConfigSoleTenantConfigNodeAffinity) string { return v.Key }).(pulumi.StringOutput)
}

// .
func (o NodePoolNodeConfigSoleTenantConfigNodeAffinityOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v NodePoolNodeConfigSoleTenantConfigNodeAffinity) string { return v.Operator }).(pulumi.StringOutput)
}

// .
func (o NodePoolNodeConfigSoleTenantConfigNodeAffinityOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NodePoolNodeConfigSoleTenantConfigNodeAffinity) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type NodePoolNodeConfigSoleTenantConfigNodeAffinityArrayOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigSoleTenantConfigNodeAffinityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodePoolNodeConfigSoleTenantConfigNodeAffinity)(nil)).Elem()
}

func (o NodePoolNodeConfigSoleTenantConfigNodeAffinityArrayOutput) ToNodePoolNodeConfigSoleTenantConfigNodeAffinityArrayOutput() NodePoolNodeConfigSoleTenantConfigNodeAffinityArrayOutput {
	return o
}

func (o NodePoolNodeConfigSoleTenantConfigNodeAffinityArrayOutput) ToNodePoolNodeConfigSoleTenantConfigNodeAffinityArrayOutputWithContext(ctx context.Context) NodePoolNodeConfigSoleTenantConfigNodeAffinityArrayOutput {
	return o
}

func (o NodePoolNodeConfigSoleTenantConfigNodeAffinityArrayOutput) Index(i pulumi.IntInput) NodePoolNodeConfigSoleTenantConfigNodeAffinityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NodePoolNodeConfigSoleTenantConfigNodeAffinity {
		return vs[0].([]NodePoolNodeConfigSoleTenantConfigNodeAffinity)[vs[1].(int)]
	}).(NodePoolNodeConfigSoleTenantConfigNodeAffinityOutput)
}

type NodePoolNodeConfigTaint struct {
	// Effect for taint.
	Effect string `pulumi:"effect"`
	// Key for taint.
	Key string `pulumi:"key"`
	// Value for taint.
	Value string `pulumi:"value"`
}

// NodePoolNodeConfigTaintInput is an input type that accepts NodePoolNodeConfigTaintArgs and NodePoolNodeConfigTaintOutput values.
// You can construct a concrete instance of `NodePoolNodeConfigTaintInput` via:
//
//	NodePoolNodeConfigTaintArgs{...}
type NodePoolNodeConfigTaintInput interface {
	pulumi.Input

	ToNodePoolNodeConfigTaintOutput() NodePoolNodeConfigTaintOutput
	ToNodePoolNodeConfigTaintOutputWithContext(context.Context) NodePoolNodeConfigTaintOutput
}

type NodePoolNodeConfigTaintArgs struct {
	// Effect for taint.
	Effect pulumi.StringInput `pulumi:"effect"`
	// Key for taint.
	Key pulumi.StringInput `pulumi:"key"`
	// Value for taint.
	Value pulumi.StringInput `pulumi:"value"`
}

func (NodePoolNodeConfigTaintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigTaint)(nil)).Elem()
}

func (i NodePoolNodeConfigTaintArgs) ToNodePoolNodeConfigTaintOutput() NodePoolNodeConfigTaintOutput {
	return i.ToNodePoolNodeConfigTaintOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigTaintArgs) ToNodePoolNodeConfigTaintOutputWithContext(ctx context.Context) NodePoolNodeConfigTaintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigTaintOutput)
}

// NodePoolNodeConfigTaintArrayInput is an input type that accepts NodePoolNodeConfigTaintArray and NodePoolNodeConfigTaintArrayOutput values.
// You can construct a concrete instance of `NodePoolNodeConfigTaintArrayInput` via:
//
//	NodePoolNodeConfigTaintArray{ NodePoolNodeConfigTaintArgs{...} }
type NodePoolNodeConfigTaintArrayInput interface {
	pulumi.Input

	ToNodePoolNodeConfigTaintArrayOutput() NodePoolNodeConfigTaintArrayOutput
	ToNodePoolNodeConfigTaintArrayOutputWithContext(context.Context) NodePoolNodeConfigTaintArrayOutput
}

type NodePoolNodeConfigTaintArray []NodePoolNodeConfigTaintInput

func (NodePoolNodeConfigTaintArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodePoolNodeConfigTaint)(nil)).Elem()
}

func (i NodePoolNodeConfigTaintArray) ToNodePoolNodeConfigTaintArrayOutput() NodePoolNodeConfigTaintArrayOutput {
	return i.ToNodePoolNodeConfigTaintArrayOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigTaintArray) ToNodePoolNodeConfigTaintArrayOutputWithContext(ctx context.Context) NodePoolNodeConfigTaintArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigTaintArrayOutput)
}

type NodePoolNodeConfigTaintOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigTaintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigTaint)(nil)).Elem()
}

func (o NodePoolNodeConfigTaintOutput) ToNodePoolNodeConfigTaintOutput() NodePoolNodeConfigTaintOutput {
	return o
}

func (o NodePoolNodeConfigTaintOutput) ToNodePoolNodeConfigTaintOutputWithContext(ctx context.Context) NodePoolNodeConfigTaintOutput {
	return o
}

// Effect for taint.
func (o NodePoolNodeConfigTaintOutput) Effect() pulumi.StringOutput {
	return o.ApplyT(func(v NodePoolNodeConfigTaint) string { return v.Effect }).(pulumi.StringOutput)
}

// Key for taint.
func (o NodePoolNodeConfigTaintOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v NodePoolNodeConfigTaint) string { return v.Key }).(pulumi.StringOutput)
}

// Value for taint.
func (o NodePoolNodeConfigTaintOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v NodePoolNodeConfigTaint) string { return v.Value }).(pulumi.StringOutput)
}

type NodePoolNodeConfigTaintArrayOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigTaintArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodePoolNodeConfigTaint)(nil)).Elem()
}

func (o NodePoolNodeConfigTaintArrayOutput) ToNodePoolNodeConfigTaintArrayOutput() NodePoolNodeConfigTaintArrayOutput {
	return o
}

func (o NodePoolNodeConfigTaintArrayOutput) ToNodePoolNodeConfigTaintArrayOutputWithContext(ctx context.Context) NodePoolNodeConfigTaintArrayOutput {
	return o
}

func (o NodePoolNodeConfigTaintArrayOutput) Index(i pulumi.IntInput) NodePoolNodeConfigTaintOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NodePoolNodeConfigTaint {
		return vs[0].([]NodePoolNodeConfigTaint)[vs[1].(int)]
	}).(NodePoolNodeConfigTaintOutput)
}

type NodePoolNodeConfigWorkloadMetadataConfig struct {
	// Mode is the configuration for how to expose metadata to workloads running on the node.
	Mode string `pulumi:"mode"`
}

// NodePoolNodeConfigWorkloadMetadataConfigInput is an input type that accepts NodePoolNodeConfigWorkloadMetadataConfigArgs and NodePoolNodeConfigWorkloadMetadataConfigOutput values.
// You can construct a concrete instance of `NodePoolNodeConfigWorkloadMetadataConfigInput` via:
//
//	NodePoolNodeConfigWorkloadMetadataConfigArgs{...}
type NodePoolNodeConfigWorkloadMetadataConfigInput interface {
	pulumi.Input

	ToNodePoolNodeConfigWorkloadMetadataConfigOutput() NodePoolNodeConfigWorkloadMetadataConfigOutput
	ToNodePoolNodeConfigWorkloadMetadataConfigOutputWithContext(context.Context) NodePoolNodeConfigWorkloadMetadataConfigOutput
}

type NodePoolNodeConfigWorkloadMetadataConfigArgs struct {
	// Mode is the configuration for how to expose metadata to workloads running on the node.
	Mode pulumi.StringInput `pulumi:"mode"`
}

func (NodePoolNodeConfigWorkloadMetadataConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigWorkloadMetadataConfig)(nil)).Elem()
}

func (i NodePoolNodeConfigWorkloadMetadataConfigArgs) ToNodePoolNodeConfigWorkloadMetadataConfigOutput() NodePoolNodeConfigWorkloadMetadataConfigOutput {
	return i.ToNodePoolNodeConfigWorkloadMetadataConfigOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigWorkloadMetadataConfigArgs) ToNodePoolNodeConfigWorkloadMetadataConfigOutputWithContext(ctx context.Context) NodePoolNodeConfigWorkloadMetadataConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigWorkloadMetadataConfigOutput)
}

func (i NodePoolNodeConfigWorkloadMetadataConfigArgs) ToNodePoolNodeConfigWorkloadMetadataConfigPtrOutput() NodePoolNodeConfigWorkloadMetadataConfigPtrOutput {
	return i.ToNodePoolNodeConfigWorkloadMetadataConfigPtrOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigWorkloadMetadataConfigArgs) ToNodePoolNodeConfigWorkloadMetadataConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigWorkloadMetadataConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigWorkloadMetadataConfigOutput).ToNodePoolNodeConfigWorkloadMetadataConfigPtrOutputWithContext(ctx)
}

// NodePoolNodeConfigWorkloadMetadataConfigPtrInput is an input type that accepts NodePoolNodeConfigWorkloadMetadataConfigArgs, NodePoolNodeConfigWorkloadMetadataConfigPtr and NodePoolNodeConfigWorkloadMetadataConfigPtrOutput values.
// You can construct a concrete instance of `NodePoolNodeConfigWorkloadMetadataConfigPtrInput` via:
//
//	        NodePoolNodeConfigWorkloadMetadataConfigArgs{...}
//
//	or:
//
//	        nil
type NodePoolNodeConfigWorkloadMetadataConfigPtrInput interface {
	pulumi.Input

	ToNodePoolNodeConfigWorkloadMetadataConfigPtrOutput() NodePoolNodeConfigWorkloadMetadataConfigPtrOutput
	ToNodePoolNodeConfigWorkloadMetadataConfigPtrOutputWithContext(context.Context) NodePoolNodeConfigWorkloadMetadataConfigPtrOutput
}

type nodePoolNodeConfigWorkloadMetadataConfigPtrType NodePoolNodeConfigWorkloadMetadataConfigArgs

func NodePoolNodeConfigWorkloadMetadataConfigPtr(v *NodePoolNodeConfigWorkloadMetadataConfigArgs) NodePoolNodeConfigWorkloadMetadataConfigPtrInput {
	return (*nodePoolNodeConfigWorkloadMetadataConfigPtrType)(v)
}

func (*nodePoolNodeConfigWorkloadMetadataConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolNodeConfigWorkloadMetadataConfig)(nil)).Elem()
}

func (i *nodePoolNodeConfigWorkloadMetadataConfigPtrType) ToNodePoolNodeConfigWorkloadMetadataConfigPtrOutput() NodePoolNodeConfigWorkloadMetadataConfigPtrOutput {
	return i.ToNodePoolNodeConfigWorkloadMetadataConfigPtrOutputWithContext(context.Background())
}

func (i *nodePoolNodeConfigWorkloadMetadataConfigPtrType) ToNodePoolNodeConfigWorkloadMetadataConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigWorkloadMetadataConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigWorkloadMetadataConfigPtrOutput)
}

type NodePoolNodeConfigWorkloadMetadataConfigOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigWorkloadMetadataConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigWorkloadMetadataConfig)(nil)).Elem()
}

func (o NodePoolNodeConfigWorkloadMetadataConfigOutput) ToNodePoolNodeConfigWorkloadMetadataConfigOutput() NodePoolNodeConfigWorkloadMetadataConfigOutput {
	return o
}

func (o NodePoolNodeConfigWorkloadMetadataConfigOutput) ToNodePoolNodeConfigWorkloadMetadataConfigOutputWithContext(ctx context.Context) NodePoolNodeConfigWorkloadMetadataConfigOutput {
	return o
}

func (o NodePoolNodeConfigWorkloadMetadataConfigOutput) ToNodePoolNodeConfigWorkloadMetadataConfigPtrOutput() NodePoolNodeConfigWorkloadMetadataConfigPtrOutput {
	return o.ToNodePoolNodeConfigWorkloadMetadataConfigPtrOutputWithContext(context.Background())
}

func (o NodePoolNodeConfigWorkloadMetadataConfigOutput) ToNodePoolNodeConfigWorkloadMetadataConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigWorkloadMetadataConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NodePoolNodeConfigWorkloadMetadataConfig) *NodePoolNodeConfigWorkloadMetadataConfig {
		return &v
	}).(NodePoolNodeConfigWorkloadMetadataConfigPtrOutput)
}

// Mode is the configuration for how to expose metadata to workloads running on the node.
func (o NodePoolNodeConfigWorkloadMetadataConfigOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v NodePoolNodeConfigWorkloadMetadataConfig) string { return v.Mode }).(pulumi.StringOutput)
}

type NodePoolNodeConfigWorkloadMetadataConfigPtrOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigWorkloadMetadataConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolNodeConfigWorkloadMetadataConfig)(nil)).Elem()
}

func (o NodePoolNodeConfigWorkloadMetadataConfigPtrOutput) ToNodePoolNodeConfigWorkloadMetadataConfigPtrOutput() NodePoolNodeConfigWorkloadMetadataConfigPtrOutput {
	return o
}

func (o NodePoolNodeConfigWorkloadMetadataConfigPtrOutput) ToNodePoolNodeConfigWorkloadMetadataConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigWorkloadMetadataConfigPtrOutput {
	return o
}

func (o NodePoolNodeConfigWorkloadMetadataConfigPtrOutput) Elem() NodePoolNodeConfigWorkloadMetadataConfigOutput {
	return o.ApplyT(func(v *NodePoolNodeConfigWorkloadMetadataConfig) NodePoolNodeConfigWorkloadMetadataConfig {
		if v != nil {
			return *v
		}
		var ret NodePoolNodeConfigWorkloadMetadataConfig
		return ret
	}).(NodePoolNodeConfigWorkloadMetadataConfigOutput)
}

// Mode is the configuration for how to expose metadata to workloads running on the node.
func (o NodePoolNodeConfigWorkloadMetadataConfigPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodePoolNodeConfigWorkloadMetadataConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Mode
	}).(pulumi.StringPtrOutput)
}

type NodePoolPlacementPolicy struct {
	// If set, refers to the name of a custom resource policy supplied by the user.
	// The resource policy must be in the same project and region as the node pool.
	// If not found, InvalidArgument error is returned.
	PolicyName *string `pulumi:"policyName"`
	// The [TPU placement topology](https://cloud.google.com/tpu/docs/types-topologies#tpu_topologies) for pod slice node pool.
	TpuTopology *string `pulumi:"tpuTopology"`
	// The type of the policy. Supports a single value: COMPACT.
	// Specifying COMPACT placement policy type places node pool's nodes in a closer
	// physical proximity in order to reduce network latency between nodes.
	Type string `pulumi:"type"`
}

// NodePoolPlacementPolicyInput is an input type that accepts NodePoolPlacementPolicyArgs and NodePoolPlacementPolicyOutput values.
// You can construct a concrete instance of `NodePoolPlacementPolicyInput` via:
//
//	NodePoolPlacementPolicyArgs{...}
type NodePoolPlacementPolicyInput interface {
	pulumi.Input

	ToNodePoolPlacementPolicyOutput() NodePoolPlacementPolicyOutput
	ToNodePoolPlacementPolicyOutputWithContext(context.Context) NodePoolPlacementPolicyOutput
}

type NodePoolPlacementPolicyArgs struct {
	// If set, refers to the name of a custom resource policy supplied by the user.
	// The resource policy must be in the same project and region as the node pool.
	// If not found, InvalidArgument error is returned.
	PolicyName pulumi.StringPtrInput `pulumi:"policyName"`
	// The [TPU placement topology](https://cloud.google.com/tpu/docs/types-topologies#tpu_topologies) for pod slice node pool.
	TpuTopology pulumi.StringPtrInput `pulumi:"tpuTopology"`
	// The type of the policy. Supports a single value: COMPACT.
	// Specifying COMPACT placement policy type places node pool's nodes in a closer
	// physical proximity in order to reduce network latency between nodes.
	Type pulumi.StringInput `pulumi:"type"`
}

func (NodePoolPlacementPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolPlacementPolicy)(nil)).Elem()
}

func (i NodePoolPlacementPolicyArgs) ToNodePoolPlacementPolicyOutput() NodePoolPlacementPolicyOutput {
	return i.ToNodePoolPlacementPolicyOutputWithContext(context.Background())
}

func (i NodePoolPlacementPolicyArgs) ToNodePoolPlacementPolicyOutputWithContext(ctx context.Context) NodePoolPlacementPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolPlacementPolicyOutput)
}

func (i NodePoolPlacementPolicyArgs) ToNodePoolPlacementPolicyPtrOutput() NodePoolPlacementPolicyPtrOutput {
	return i.ToNodePoolPlacementPolicyPtrOutputWithContext(context.Background())
}

func (i NodePoolPlacementPolicyArgs) ToNodePoolPlacementPolicyPtrOutputWithContext(ctx context.Context) NodePoolPlacementPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolPlacementPolicyOutput).ToNodePoolPlacementPolicyPtrOutputWithContext(ctx)
}

// NodePoolPlacementPolicyPtrInput is an input type that accepts NodePoolPlacementPolicyArgs, NodePoolPlacementPolicyPtr and NodePoolPlacementPolicyPtrOutput values.
// You can construct a concrete instance of `NodePoolPlacementPolicyPtrInput` via:
//
//	        NodePoolPlacementPolicyArgs{...}
//
//	or:
//
//	        nil
type NodePoolPlacementPolicyPtrInput interface {
	pulumi.Input

	ToNodePoolPlacementPolicyPtrOutput() NodePoolPlacementPolicyPtrOutput
	ToNodePoolPlacementPolicyPtrOutputWithContext(context.Context) NodePoolPlacementPolicyPtrOutput
}

type nodePoolPlacementPolicyPtrType NodePoolPlacementPolicyArgs

func NodePoolPlacementPolicyPtr(v *NodePoolPlacementPolicyArgs) NodePoolPlacementPolicyPtrInput {
	return (*nodePoolPlacementPolicyPtrType)(v)
}

func (*nodePoolPlacementPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolPlacementPolicy)(nil)).Elem()
}

func (i *nodePoolPlacementPolicyPtrType) ToNodePoolPlacementPolicyPtrOutput() NodePoolPlacementPolicyPtrOutput {
	return i.ToNodePoolPlacementPolicyPtrOutputWithContext(context.Background())
}

func (i *nodePoolPlacementPolicyPtrType) ToNodePoolPlacementPolicyPtrOutputWithContext(ctx context.Context) NodePoolPlacementPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolPlacementPolicyPtrOutput)
}

type NodePoolPlacementPolicyOutput struct{ *pulumi.OutputState }

func (NodePoolPlacementPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolPlacementPolicy)(nil)).Elem()
}

func (o NodePoolPlacementPolicyOutput) ToNodePoolPlacementPolicyOutput() NodePoolPlacementPolicyOutput {
	return o
}

func (o NodePoolPlacementPolicyOutput) ToNodePoolPlacementPolicyOutputWithContext(ctx context.Context) NodePoolPlacementPolicyOutput {
	return o
}

func (o NodePoolPlacementPolicyOutput) ToNodePoolPlacementPolicyPtrOutput() NodePoolPlacementPolicyPtrOutput {
	return o.ToNodePoolPlacementPolicyPtrOutputWithContext(context.Background())
}

func (o NodePoolPlacementPolicyOutput) ToNodePoolPlacementPolicyPtrOutputWithContext(ctx context.Context) NodePoolPlacementPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NodePoolPlacementPolicy) *NodePoolPlacementPolicy {
		return &v
	}).(NodePoolPlacementPolicyPtrOutput)
}

// If set, refers to the name of a custom resource policy supplied by the user.
// The resource policy must be in the same project and region as the node pool.
// If not found, InvalidArgument error is returned.
func (o NodePoolPlacementPolicyOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodePoolPlacementPolicy) *string { return v.PolicyName }).(pulumi.StringPtrOutput)
}

// The [TPU placement topology](https://cloud.google.com/tpu/docs/types-topologies#tpu_topologies) for pod slice node pool.
func (o NodePoolPlacementPolicyOutput) TpuTopology() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodePoolPlacementPolicy) *string { return v.TpuTopology }).(pulumi.StringPtrOutput)
}

// The type of the policy. Supports a single value: COMPACT.
// Specifying COMPACT placement policy type places node pool's nodes in a closer
// physical proximity in order to reduce network latency between nodes.
func (o NodePoolPlacementPolicyOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v NodePoolPlacementPolicy) string { return v.Type }).(pulumi.StringOutput)
}

type NodePoolPlacementPolicyPtrOutput struct{ *pulumi.OutputState }

func (NodePoolPlacementPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolPlacementPolicy)(nil)).Elem()
}

func (o NodePoolPlacementPolicyPtrOutput) ToNodePoolPlacementPolicyPtrOutput() NodePoolPlacementPolicyPtrOutput {
	return o
}

func (o NodePoolPlacementPolicyPtrOutput) ToNodePoolPlacementPolicyPtrOutputWithContext(ctx context.Context) NodePoolPlacementPolicyPtrOutput {
	return o
}

func (o NodePoolPlacementPolicyPtrOutput) Elem() NodePoolPlacementPolicyOutput {
	return o.ApplyT(func(v *NodePoolPlacementPolicy) NodePoolPlacementPolicy {
		if v != nil {
			return *v
		}
		var ret NodePoolPlacementPolicy
		return ret
	}).(NodePoolPlacementPolicyOutput)
}

// If set, refers to the name of a custom resource policy supplied by the user.
// The resource policy must be in the same project and region as the node pool.
// If not found, InvalidArgument error is returned.
func (o NodePoolPlacementPolicyPtrOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodePoolPlacementPolicy) *string {
		if v == nil {
			return nil
		}
		return v.PolicyName
	}).(pulumi.StringPtrOutput)
}

// The [TPU placement topology](https://cloud.google.com/tpu/docs/types-topologies#tpu_topologies) for pod slice node pool.
func (o NodePoolPlacementPolicyPtrOutput) TpuTopology() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodePoolPlacementPolicy) *string {
		if v == nil {
			return nil
		}
		return v.TpuTopology
	}).(pulumi.StringPtrOutput)
}

// The type of the policy. Supports a single value: COMPACT.
// Specifying COMPACT placement policy type places node pool's nodes in a closer
// physical proximity in order to reduce network latency between nodes.
func (o NodePoolPlacementPolicyPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodePoolPlacementPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type NodePoolQueuedProvisioning struct {
	// Makes nodes obtainable through the [ProvisioningRequest API](https://cloud.google.com/kubernetes-engine/docs/how-to/provisioningrequest) exclusively.
	Enabled bool `pulumi:"enabled"`
}

// NodePoolQueuedProvisioningInput is an input type that accepts NodePoolQueuedProvisioningArgs and NodePoolQueuedProvisioningOutput values.
// You can construct a concrete instance of `NodePoolQueuedProvisioningInput` via:
//
//	NodePoolQueuedProvisioningArgs{...}
type NodePoolQueuedProvisioningInput interface {
	pulumi.Input

	ToNodePoolQueuedProvisioningOutput() NodePoolQueuedProvisioningOutput
	ToNodePoolQueuedProvisioningOutputWithContext(context.Context) NodePoolQueuedProvisioningOutput
}

type NodePoolQueuedProvisioningArgs struct {
	// Makes nodes obtainable through the [ProvisioningRequest API](https://cloud.google.com/kubernetes-engine/docs/how-to/provisioningrequest) exclusively.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (NodePoolQueuedProvisioningArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolQueuedProvisioning)(nil)).Elem()
}

func (i NodePoolQueuedProvisioningArgs) ToNodePoolQueuedProvisioningOutput() NodePoolQueuedProvisioningOutput {
	return i.ToNodePoolQueuedProvisioningOutputWithContext(context.Background())
}

func (i NodePoolQueuedProvisioningArgs) ToNodePoolQueuedProvisioningOutputWithContext(ctx context.Context) NodePoolQueuedProvisioningOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolQueuedProvisioningOutput)
}

func (i NodePoolQueuedProvisioningArgs) ToNodePoolQueuedProvisioningPtrOutput() NodePoolQueuedProvisioningPtrOutput {
	return i.ToNodePoolQueuedProvisioningPtrOutputWithContext(context.Background())
}

func (i NodePoolQueuedProvisioningArgs) ToNodePoolQueuedProvisioningPtrOutputWithContext(ctx context.Context) NodePoolQueuedProvisioningPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolQueuedProvisioningOutput).ToNodePoolQueuedProvisioningPtrOutputWithContext(ctx)
}

// NodePoolQueuedProvisioningPtrInput is an input type that accepts NodePoolQueuedProvisioningArgs, NodePoolQueuedProvisioningPtr and NodePoolQueuedProvisioningPtrOutput values.
// You can construct a concrete instance of `NodePoolQueuedProvisioningPtrInput` via:
//
//	        NodePoolQueuedProvisioningArgs{...}
//
//	or:
//
//	        nil
type NodePoolQueuedProvisioningPtrInput interface {
	pulumi.Input

	ToNodePoolQueuedProvisioningPtrOutput() NodePoolQueuedProvisioningPtrOutput
	ToNodePoolQueuedProvisioningPtrOutputWithContext(context.Context) NodePoolQueuedProvisioningPtrOutput
}

type nodePoolQueuedProvisioningPtrType NodePoolQueuedProvisioningArgs

func NodePoolQueuedProvisioningPtr(v *NodePoolQueuedProvisioningArgs) NodePoolQueuedProvisioningPtrInput {
	return (*nodePoolQueuedProvisioningPtrType)(v)
}

func (*nodePoolQueuedProvisioningPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolQueuedProvisioning)(nil)).Elem()
}

func (i *nodePoolQueuedProvisioningPtrType) ToNodePoolQueuedProvisioningPtrOutput() NodePoolQueuedProvisioningPtrOutput {
	return i.ToNodePoolQueuedProvisioningPtrOutputWithContext(context.Background())
}

func (i *nodePoolQueuedProvisioningPtrType) ToNodePoolQueuedProvisioningPtrOutputWithContext(ctx context.Context) NodePoolQueuedProvisioningPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolQueuedProvisioningPtrOutput)
}

type NodePoolQueuedProvisioningOutput struct{ *pulumi.OutputState }

func (NodePoolQueuedProvisioningOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolQueuedProvisioning)(nil)).Elem()
}

func (o NodePoolQueuedProvisioningOutput) ToNodePoolQueuedProvisioningOutput() NodePoolQueuedProvisioningOutput {
	return o
}

func (o NodePoolQueuedProvisioningOutput) ToNodePoolQueuedProvisioningOutputWithContext(ctx context.Context) NodePoolQueuedProvisioningOutput {
	return o
}

func (o NodePoolQueuedProvisioningOutput) ToNodePoolQueuedProvisioningPtrOutput() NodePoolQueuedProvisioningPtrOutput {
	return o.ToNodePoolQueuedProvisioningPtrOutputWithContext(context.Background())
}

func (o NodePoolQueuedProvisioningOutput) ToNodePoolQueuedProvisioningPtrOutputWithContext(ctx context.Context) NodePoolQueuedProvisioningPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NodePoolQueuedProvisioning) *NodePoolQueuedProvisioning {
		return &v
	}).(NodePoolQueuedProvisioningPtrOutput)
}

// Makes nodes obtainable through the [ProvisioningRequest API](https://cloud.google.com/kubernetes-engine/docs/how-to/provisioningrequest) exclusively.
func (o NodePoolQueuedProvisioningOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v NodePoolQueuedProvisioning) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type NodePoolQueuedProvisioningPtrOutput struct{ *pulumi.OutputState }

func (NodePoolQueuedProvisioningPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolQueuedProvisioning)(nil)).Elem()
}

func (o NodePoolQueuedProvisioningPtrOutput) ToNodePoolQueuedProvisioningPtrOutput() NodePoolQueuedProvisioningPtrOutput {
	return o
}

func (o NodePoolQueuedProvisioningPtrOutput) ToNodePoolQueuedProvisioningPtrOutputWithContext(ctx context.Context) NodePoolQueuedProvisioningPtrOutput {
	return o
}

func (o NodePoolQueuedProvisioningPtrOutput) Elem() NodePoolQueuedProvisioningOutput {
	return o.ApplyT(func(v *NodePoolQueuedProvisioning) NodePoolQueuedProvisioning {
		if v != nil {
			return *v
		}
		var ret NodePoolQueuedProvisioning
		return ret
	}).(NodePoolQueuedProvisioningOutput)
}

// Makes nodes obtainable through the [ProvisioningRequest API](https://cloud.google.com/kubernetes-engine/docs/how-to/provisioningrequest) exclusively.
func (o NodePoolQueuedProvisioningPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NodePoolQueuedProvisioning) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type NodePoolUpgradeSettings struct {
	// The settings to adjust [blue green upgrades](https://cloud.google.com/kubernetes-engine/docs/concepts/node-pool-upgrade-strategies#blue-green-upgrade-strategy).
	// Structure is documented below
	BlueGreenSettings *NodePoolUpgradeSettingsBlueGreenSettings `pulumi:"blueGreenSettings"`
	// The number of additional nodes that can be added to the node pool during
	// an upgrade. Increasing `maxSurge` raises the number of nodes that can be upgraded simultaneously.
	// Can be set to 0 or greater.
	MaxSurge *int `pulumi:"maxSurge"`
	// The number of nodes that can be simultaneously unavailable during
	// an upgrade. Increasing `maxUnavailable` raises the number of nodes that can be upgraded in
	// parallel. Can be set to 0 or greater.
	//
	// `maxSurge` and `maxUnavailable` must not be negative and at least one of them must be greater than zero.
	MaxUnavailable *int `pulumi:"maxUnavailable"`
	// The upgrade stragey to be used for upgrading the nodes.
	Strategy *string `pulumi:"strategy"`
}

// NodePoolUpgradeSettingsInput is an input type that accepts NodePoolUpgradeSettingsArgs and NodePoolUpgradeSettingsOutput values.
// You can construct a concrete instance of `NodePoolUpgradeSettingsInput` via:
//
//	NodePoolUpgradeSettingsArgs{...}
type NodePoolUpgradeSettingsInput interface {
	pulumi.Input

	ToNodePoolUpgradeSettingsOutput() NodePoolUpgradeSettingsOutput
	ToNodePoolUpgradeSettingsOutputWithContext(context.Context) NodePoolUpgradeSettingsOutput
}

type NodePoolUpgradeSettingsArgs struct {
	// The settings to adjust [blue green upgrades](https://cloud.google.com/kubernetes-engine/docs/concepts/node-pool-upgrade-strategies#blue-green-upgrade-strategy).
	// Structure is documented below
	BlueGreenSettings NodePoolUpgradeSettingsBlueGreenSettingsPtrInput `pulumi:"blueGreenSettings"`
	// The number of additional nodes that can be added to the node pool during
	// an upgrade. Increasing `maxSurge` raises the number of nodes that can be upgraded simultaneously.
	// Can be set to 0 or greater.
	MaxSurge pulumi.IntPtrInput `pulumi:"maxSurge"`
	// The number of nodes that can be simultaneously unavailable during
	// an upgrade. Increasing `maxUnavailable` raises the number of nodes that can be upgraded in
	// parallel. Can be set to 0 or greater.
	//
	// `maxSurge` and `maxUnavailable` must not be negative and at least one of them must be greater than zero.
	MaxUnavailable pulumi.IntPtrInput `pulumi:"maxUnavailable"`
	// The upgrade stragey to be used for upgrading the nodes.
	Strategy pulumi.StringPtrInput `pulumi:"strategy"`
}

func (NodePoolUpgradeSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolUpgradeSettings)(nil)).Elem()
}

func (i NodePoolUpgradeSettingsArgs) ToNodePoolUpgradeSettingsOutput() NodePoolUpgradeSettingsOutput {
	return i.ToNodePoolUpgradeSettingsOutputWithContext(context.Background())
}

func (i NodePoolUpgradeSettingsArgs) ToNodePoolUpgradeSettingsOutputWithContext(ctx context.Context) NodePoolUpgradeSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolUpgradeSettingsOutput)
}

func (i NodePoolUpgradeSettingsArgs) ToNodePoolUpgradeSettingsPtrOutput() NodePoolUpgradeSettingsPtrOutput {
	return i.ToNodePoolUpgradeSettingsPtrOutputWithContext(context.Background())
}

func (i NodePoolUpgradeSettingsArgs) ToNodePoolUpgradeSettingsPtrOutputWithContext(ctx context.Context) NodePoolUpgradeSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolUpgradeSettingsOutput).ToNodePoolUpgradeSettingsPtrOutputWithContext(ctx)
}

// NodePoolUpgradeSettingsPtrInput is an input type that accepts NodePoolUpgradeSettingsArgs, NodePoolUpgradeSettingsPtr and NodePoolUpgradeSettingsPtrOutput values.
// You can construct a concrete instance of `NodePoolUpgradeSettingsPtrInput` via:
//
//	        NodePoolUpgradeSettingsArgs{...}
//
//	or:
//
//	        nil
type NodePoolUpgradeSettingsPtrInput interface {
	pulumi.Input

	ToNodePoolUpgradeSettingsPtrOutput() NodePoolUpgradeSettingsPtrOutput
	ToNodePoolUpgradeSettingsPtrOutputWithContext(context.Context) NodePoolUpgradeSettingsPtrOutput
}

type nodePoolUpgradeSettingsPtrType NodePoolUpgradeSettingsArgs

func NodePoolUpgradeSettingsPtr(v *NodePoolUpgradeSettingsArgs) NodePoolUpgradeSettingsPtrInput {
	return (*nodePoolUpgradeSettingsPtrType)(v)
}

func (*nodePoolUpgradeSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolUpgradeSettings)(nil)).Elem()
}

func (i *nodePoolUpgradeSettingsPtrType) ToNodePoolUpgradeSettingsPtrOutput() NodePoolUpgradeSettingsPtrOutput {
	return i.ToNodePoolUpgradeSettingsPtrOutputWithContext(context.Background())
}

func (i *nodePoolUpgradeSettingsPtrType) ToNodePoolUpgradeSettingsPtrOutputWithContext(ctx context.Context) NodePoolUpgradeSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolUpgradeSettingsPtrOutput)
}

type NodePoolUpgradeSettingsOutput struct{ *pulumi.OutputState }

func (NodePoolUpgradeSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolUpgradeSettings)(nil)).Elem()
}

func (o NodePoolUpgradeSettingsOutput) ToNodePoolUpgradeSettingsOutput() NodePoolUpgradeSettingsOutput {
	return o
}

func (o NodePoolUpgradeSettingsOutput) ToNodePoolUpgradeSettingsOutputWithContext(ctx context.Context) NodePoolUpgradeSettingsOutput {
	return o
}

func (o NodePoolUpgradeSettingsOutput) ToNodePoolUpgradeSettingsPtrOutput() NodePoolUpgradeSettingsPtrOutput {
	return o.ToNodePoolUpgradeSettingsPtrOutputWithContext(context.Background())
}

func (o NodePoolUpgradeSettingsOutput) ToNodePoolUpgradeSettingsPtrOutputWithContext(ctx context.Context) NodePoolUpgradeSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NodePoolUpgradeSettings) *NodePoolUpgradeSettings {
		return &v
	}).(NodePoolUpgradeSettingsPtrOutput)
}

// The settings to adjust [blue green upgrades](https://cloud.google.com/kubernetes-engine/docs/concepts/node-pool-upgrade-strategies#blue-green-upgrade-strategy).
// Structure is documented below
func (o NodePoolUpgradeSettingsOutput) BlueGreenSettings() NodePoolUpgradeSettingsBlueGreenSettingsPtrOutput {
	return o.ApplyT(func(v NodePoolUpgradeSettings) *NodePoolUpgradeSettingsBlueGreenSettings { return v.BlueGreenSettings }).(NodePoolUpgradeSettingsBlueGreenSettingsPtrOutput)
}

// The number of additional nodes that can be added to the node pool during
// an upgrade. Increasing `maxSurge` raises the number of nodes that can be upgraded simultaneously.
// Can be set to 0 or greater.
func (o NodePoolUpgradeSettingsOutput) MaxSurge() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NodePoolUpgradeSettings) *int { return v.MaxSurge }).(pulumi.IntPtrOutput)
}

// The number of nodes that can be simultaneously unavailable during
// an upgrade. Increasing `maxUnavailable` raises the number of nodes that can be upgraded in
// parallel. Can be set to 0 or greater.
//
// `maxSurge` and `maxUnavailable` must not be negative and at least one of them must be greater than zero.
func (o NodePoolUpgradeSettingsOutput) MaxUnavailable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NodePoolUpgradeSettings) *int { return v.MaxUnavailable }).(pulumi.IntPtrOutput)
}

// The upgrade stragey to be used for upgrading the nodes.
func (o NodePoolUpgradeSettingsOutput) Strategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodePoolUpgradeSettings) *string { return v.Strategy }).(pulumi.StringPtrOutput)
}

type NodePoolUpgradeSettingsPtrOutput struct{ *pulumi.OutputState }

func (NodePoolUpgradeSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolUpgradeSettings)(nil)).Elem()
}

func (o NodePoolUpgradeSettingsPtrOutput) ToNodePoolUpgradeSettingsPtrOutput() NodePoolUpgradeSettingsPtrOutput {
	return o
}

func (o NodePoolUpgradeSettingsPtrOutput) ToNodePoolUpgradeSettingsPtrOutputWithContext(ctx context.Context) NodePoolUpgradeSettingsPtrOutput {
	return o
}

func (o NodePoolUpgradeSettingsPtrOutput) Elem() NodePoolUpgradeSettingsOutput {
	return o.ApplyT(func(v *NodePoolUpgradeSettings) NodePoolUpgradeSettings {
		if v != nil {
			return *v
		}
		var ret NodePoolUpgradeSettings
		return ret
	}).(NodePoolUpgradeSettingsOutput)
}

// The settings to adjust [blue green upgrades](https://cloud.google.com/kubernetes-engine/docs/concepts/node-pool-upgrade-strategies#blue-green-upgrade-strategy).
// Structure is documented below
func (o NodePoolUpgradeSettingsPtrOutput) BlueGreenSettings() NodePoolUpgradeSettingsBlueGreenSettingsPtrOutput {
	return o.ApplyT(func(v *NodePoolUpgradeSettings) *NodePoolUpgradeSettingsBlueGreenSettings {
		if v == nil {
			return nil
		}
		return v.BlueGreenSettings
	}).(NodePoolUpgradeSettingsBlueGreenSettingsPtrOutput)
}

// The number of additional nodes that can be added to the node pool during
// an upgrade. Increasing `maxSurge` raises the number of nodes that can be upgraded simultaneously.
// Can be set to 0 or greater.
func (o NodePoolUpgradeSettingsPtrOutput) MaxSurge() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodePoolUpgradeSettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxSurge
	}).(pulumi.IntPtrOutput)
}

// The number of nodes that can be simultaneously unavailable during
// an upgrade. Increasing `maxUnavailable` raises the number of nodes that can be upgraded in
// parallel. Can be set to 0 or greater.
//
// `maxSurge` and `maxUnavailable` must not be negative and at least one of them must be greater than zero.
func (o NodePoolUpgradeSettingsPtrOutput) MaxUnavailable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodePoolUpgradeSettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxUnavailable
	}).(pulumi.IntPtrOutput)
}

// The upgrade stragey to be used for upgrading the nodes.
func (o NodePoolUpgradeSettingsPtrOutput) Strategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodePoolUpgradeSettings) *string {
		if v == nil {
			return nil
		}
		return v.Strategy
	}).(pulumi.StringPtrOutput)
}

type NodePoolUpgradeSettingsBlueGreenSettings struct {
	// Time needed after draining the entire blue pool.
	// After this period, the blue pool will be cleaned up.
	NodePoolSoakDuration *string `pulumi:"nodePoolSoakDuration"`
	// Specifies the standard policy settings for blue-green upgrades.
	StandardRolloutPolicy NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicy `pulumi:"standardRolloutPolicy"`
}

// NodePoolUpgradeSettingsBlueGreenSettingsInput is an input type that accepts NodePoolUpgradeSettingsBlueGreenSettingsArgs and NodePoolUpgradeSettingsBlueGreenSettingsOutput values.
// You can construct a concrete instance of `NodePoolUpgradeSettingsBlueGreenSettingsInput` via:
//
//	NodePoolUpgradeSettingsBlueGreenSettingsArgs{...}
type NodePoolUpgradeSettingsBlueGreenSettingsInput interface {
	pulumi.Input

	ToNodePoolUpgradeSettingsBlueGreenSettingsOutput() NodePoolUpgradeSettingsBlueGreenSettingsOutput
	ToNodePoolUpgradeSettingsBlueGreenSettingsOutputWithContext(context.Context) NodePoolUpgradeSettingsBlueGreenSettingsOutput
}

type NodePoolUpgradeSettingsBlueGreenSettingsArgs struct {
	// Time needed after draining the entire blue pool.
	// After this period, the blue pool will be cleaned up.
	NodePoolSoakDuration pulumi.StringPtrInput `pulumi:"nodePoolSoakDuration"`
	// Specifies the standard policy settings for blue-green upgrades.
	StandardRolloutPolicy NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyInput `pulumi:"standardRolloutPolicy"`
}

func (NodePoolUpgradeSettingsBlueGreenSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolUpgradeSettingsBlueGreenSettings)(nil)).Elem()
}

func (i NodePoolUpgradeSettingsBlueGreenSettingsArgs) ToNodePoolUpgradeSettingsBlueGreenSettingsOutput() NodePoolUpgradeSettingsBlueGreenSettingsOutput {
	return i.ToNodePoolUpgradeSettingsBlueGreenSettingsOutputWithContext(context.Background())
}

func (i NodePoolUpgradeSettingsBlueGreenSettingsArgs) ToNodePoolUpgradeSettingsBlueGreenSettingsOutputWithContext(ctx context.Context) NodePoolUpgradeSettingsBlueGreenSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolUpgradeSettingsBlueGreenSettingsOutput)
}

func (i NodePoolUpgradeSettingsBlueGreenSettingsArgs) ToNodePoolUpgradeSettingsBlueGreenSettingsPtrOutput() NodePoolUpgradeSettingsBlueGreenSettingsPtrOutput {
	return i.ToNodePoolUpgradeSettingsBlueGreenSettingsPtrOutputWithContext(context.Background())
}

func (i NodePoolUpgradeSettingsBlueGreenSettingsArgs) ToNodePoolUpgradeSettingsBlueGreenSettingsPtrOutputWithContext(ctx context.Context) NodePoolUpgradeSettingsBlueGreenSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolUpgradeSettingsBlueGreenSettingsOutput).ToNodePoolUpgradeSettingsBlueGreenSettingsPtrOutputWithContext(ctx)
}

// NodePoolUpgradeSettingsBlueGreenSettingsPtrInput is an input type that accepts NodePoolUpgradeSettingsBlueGreenSettingsArgs, NodePoolUpgradeSettingsBlueGreenSettingsPtr and NodePoolUpgradeSettingsBlueGreenSettingsPtrOutput values.
// You can construct a concrete instance of `NodePoolUpgradeSettingsBlueGreenSettingsPtrInput` via:
//
//	        NodePoolUpgradeSettingsBlueGreenSettingsArgs{...}
//
//	or:
//
//	        nil
type NodePoolUpgradeSettingsBlueGreenSettingsPtrInput interface {
	pulumi.Input

	ToNodePoolUpgradeSettingsBlueGreenSettingsPtrOutput() NodePoolUpgradeSettingsBlueGreenSettingsPtrOutput
	ToNodePoolUpgradeSettingsBlueGreenSettingsPtrOutputWithContext(context.Context) NodePoolUpgradeSettingsBlueGreenSettingsPtrOutput
}

type nodePoolUpgradeSettingsBlueGreenSettingsPtrType NodePoolUpgradeSettingsBlueGreenSettingsArgs

func NodePoolUpgradeSettingsBlueGreenSettingsPtr(v *NodePoolUpgradeSettingsBlueGreenSettingsArgs) NodePoolUpgradeSettingsBlueGreenSettingsPtrInput {
	return (*nodePoolUpgradeSettingsBlueGreenSettingsPtrType)(v)
}

func (*nodePoolUpgradeSettingsBlueGreenSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolUpgradeSettingsBlueGreenSettings)(nil)).Elem()
}

func (i *nodePoolUpgradeSettingsBlueGreenSettingsPtrType) ToNodePoolUpgradeSettingsBlueGreenSettingsPtrOutput() NodePoolUpgradeSettingsBlueGreenSettingsPtrOutput {
	return i.ToNodePoolUpgradeSettingsBlueGreenSettingsPtrOutputWithContext(context.Background())
}

func (i *nodePoolUpgradeSettingsBlueGreenSettingsPtrType) ToNodePoolUpgradeSettingsBlueGreenSettingsPtrOutputWithContext(ctx context.Context) NodePoolUpgradeSettingsBlueGreenSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolUpgradeSettingsBlueGreenSettingsPtrOutput)
}

type NodePoolUpgradeSettingsBlueGreenSettingsOutput struct{ *pulumi.OutputState }

func (NodePoolUpgradeSettingsBlueGreenSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolUpgradeSettingsBlueGreenSettings)(nil)).Elem()
}

func (o NodePoolUpgradeSettingsBlueGreenSettingsOutput) ToNodePoolUpgradeSettingsBlueGreenSettingsOutput() NodePoolUpgradeSettingsBlueGreenSettingsOutput {
	return o
}

func (o NodePoolUpgradeSettingsBlueGreenSettingsOutput) ToNodePoolUpgradeSettingsBlueGreenSettingsOutputWithContext(ctx context.Context) NodePoolUpgradeSettingsBlueGreenSettingsOutput {
	return o
}

func (o NodePoolUpgradeSettingsBlueGreenSettingsOutput) ToNodePoolUpgradeSettingsBlueGreenSettingsPtrOutput() NodePoolUpgradeSettingsBlueGreenSettingsPtrOutput {
	return o.ToNodePoolUpgradeSettingsBlueGreenSettingsPtrOutputWithContext(context.Background())
}

func (o NodePoolUpgradeSettingsBlueGreenSettingsOutput) ToNodePoolUpgradeSettingsBlueGreenSettingsPtrOutputWithContext(ctx context.Context) NodePoolUpgradeSettingsBlueGreenSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NodePoolUpgradeSettingsBlueGreenSettings) *NodePoolUpgradeSettingsBlueGreenSettings {
		return &v
	}).(NodePoolUpgradeSettingsBlueGreenSettingsPtrOutput)
}

// Time needed after draining the entire blue pool.
// After this period, the blue pool will be cleaned up.
func (o NodePoolUpgradeSettingsBlueGreenSettingsOutput) NodePoolSoakDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodePoolUpgradeSettingsBlueGreenSettings) *string { return v.NodePoolSoakDuration }).(pulumi.StringPtrOutput)
}

// Specifies the standard policy settings for blue-green upgrades.
func (o NodePoolUpgradeSettingsBlueGreenSettingsOutput) StandardRolloutPolicy() NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutput {
	return o.ApplyT(func(v NodePoolUpgradeSettingsBlueGreenSettings) NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicy {
		return v.StandardRolloutPolicy
	}).(NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutput)
}

type NodePoolUpgradeSettingsBlueGreenSettingsPtrOutput struct{ *pulumi.OutputState }

func (NodePoolUpgradeSettingsBlueGreenSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolUpgradeSettingsBlueGreenSettings)(nil)).Elem()
}

func (o NodePoolUpgradeSettingsBlueGreenSettingsPtrOutput) ToNodePoolUpgradeSettingsBlueGreenSettingsPtrOutput() NodePoolUpgradeSettingsBlueGreenSettingsPtrOutput {
	return o
}

func (o NodePoolUpgradeSettingsBlueGreenSettingsPtrOutput) ToNodePoolUpgradeSettingsBlueGreenSettingsPtrOutputWithContext(ctx context.Context) NodePoolUpgradeSettingsBlueGreenSettingsPtrOutput {
	return o
}

func (o NodePoolUpgradeSettingsBlueGreenSettingsPtrOutput) Elem() NodePoolUpgradeSettingsBlueGreenSettingsOutput {
	return o.ApplyT(func(v *NodePoolUpgradeSettingsBlueGreenSettings) NodePoolUpgradeSettingsBlueGreenSettings {
		if v != nil {
			return *v
		}
		var ret NodePoolUpgradeSettingsBlueGreenSettings
		return ret
	}).(NodePoolUpgradeSettingsBlueGreenSettingsOutput)
}

// Time needed after draining the entire blue pool.
// After this period, the blue pool will be cleaned up.
func (o NodePoolUpgradeSettingsBlueGreenSettingsPtrOutput) NodePoolSoakDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodePoolUpgradeSettingsBlueGreenSettings) *string {
		if v == nil {
			return nil
		}
		return v.NodePoolSoakDuration
	}).(pulumi.StringPtrOutput)
}

// Specifies the standard policy settings for blue-green upgrades.
func (o NodePoolUpgradeSettingsBlueGreenSettingsPtrOutput) StandardRolloutPolicy() NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput {
	return o.ApplyT(func(v *NodePoolUpgradeSettingsBlueGreenSettings) *NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicy {
		if v == nil {
			return nil
		}
		return &v.StandardRolloutPolicy
	}).(NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput)
}

type NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicy struct {
	// Number of blue nodes to drain in a batch.
	BatchNodeCount *int `pulumi:"batchNodeCount"`
	// Percentage of the blue pool nodes to drain in a batch.
	BatchPercentage *float64 `pulumi:"batchPercentage"`
	// Soak time after each batch gets drained.
	BatchSoakDuration *string `pulumi:"batchSoakDuration"`
}

// NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyInput is an input type that accepts NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyArgs and NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutput values.
// You can construct a concrete instance of `NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyInput` via:
//
//	NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyArgs{...}
type NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyInput interface {
	pulumi.Input

	ToNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutput() NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutput
	ToNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutputWithContext(context.Context) NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutput
}

type NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyArgs struct {
	// Number of blue nodes to drain in a batch.
	BatchNodeCount pulumi.IntPtrInput `pulumi:"batchNodeCount"`
	// Percentage of the blue pool nodes to drain in a batch.
	BatchPercentage pulumi.Float64PtrInput `pulumi:"batchPercentage"`
	// Soak time after each batch gets drained.
	BatchSoakDuration pulumi.StringPtrInput `pulumi:"batchSoakDuration"`
}

func (NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicy)(nil)).Elem()
}

func (i NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyArgs) ToNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutput() NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutput {
	return i.ToNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutputWithContext(context.Background())
}

func (i NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyArgs) ToNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutputWithContext(ctx context.Context) NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutput)
}

func (i NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyArgs) ToNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput() NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput {
	return i.ToNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutputWithContext(context.Background())
}

func (i NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyArgs) ToNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutputWithContext(ctx context.Context) NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutput).ToNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutputWithContext(ctx)
}

// NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrInput is an input type that accepts NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyArgs, NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtr and NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput values.
// You can construct a concrete instance of `NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrInput` via:
//
//	        NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyArgs{...}
//
//	or:
//
//	        nil
type NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrInput interface {
	pulumi.Input

	ToNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput() NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput
	ToNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutputWithContext(context.Context) NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput
}

type nodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrType NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyArgs

func NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtr(v *NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyArgs) NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrInput {
	return (*nodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrType)(v)
}

func (*nodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicy)(nil)).Elem()
}

func (i *nodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrType) ToNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput() NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput {
	return i.ToNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutputWithContext(context.Background())
}

func (i *nodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrType) ToNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutputWithContext(ctx context.Context) NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput)
}

type NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutput struct{ *pulumi.OutputState }

func (NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicy)(nil)).Elem()
}

func (o NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutput) ToNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutput() NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutput {
	return o
}

func (o NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutput) ToNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutputWithContext(ctx context.Context) NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutput {
	return o
}

func (o NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutput) ToNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput() NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput {
	return o.ToNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutputWithContext(context.Background())
}

func (o NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutput) ToNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutputWithContext(ctx context.Context) NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicy) *NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicy {
		return &v
	}).(NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput)
}

// Number of blue nodes to drain in a batch.
func (o NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutput) BatchNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicy) *int { return v.BatchNodeCount }).(pulumi.IntPtrOutput)
}

// Percentage of the blue pool nodes to drain in a batch.
func (o NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutput) BatchPercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicy) *float64 {
		return v.BatchPercentage
	}).(pulumi.Float64PtrOutput)
}

// Soak time after each batch gets drained.
func (o NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutput) BatchSoakDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicy) *string {
		return v.BatchSoakDuration
	}).(pulumi.StringPtrOutput)
}

type NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput struct{ *pulumi.OutputState }

func (NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicy)(nil)).Elem()
}

func (o NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput) ToNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput() NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput {
	return o
}

func (o NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput) ToNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutputWithContext(ctx context.Context) NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput {
	return o
}

func (o NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput) Elem() NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutput {
	return o.ApplyT(func(v *NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicy) NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicy {
		if v != nil {
			return *v
		}
		var ret NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicy
		return ret
	}).(NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutput)
}

// Number of blue nodes to drain in a batch.
func (o NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput) BatchNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicy) *int {
		if v == nil {
			return nil
		}
		return v.BatchNodeCount
	}).(pulumi.IntPtrOutput)
}

// Percentage of the blue pool nodes to drain in a batch.
func (o NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput) BatchPercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicy) *float64 {
		if v == nil {
			return nil
		}
		return v.BatchPercentage
	}).(pulumi.Float64PtrOutput)
}

// Soak time after each batch gets drained.
func (o NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput) BatchSoakDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicy) *string {
		if v == nil {
			return nil
		}
		return v.BatchSoakDuration
	}).(pulumi.StringPtrOutput)
}

type GetClusterAddonsConfig struct {
	// The status of the CloudRun addon. It is disabled by default. Set disabled = false to enable.
	CloudrunConfigs []GetClusterAddonsConfigCloudrunConfig `pulumi:"cloudrunConfigs"`
	// The of the Config Connector addon.
	ConfigConnectorConfigs []GetClusterAddonsConfigConfigConnectorConfig `pulumi:"configConnectorConfigs"`
	// The status of the NodeLocal DNSCache addon. It is disabled by default. Set enabled = true to enable.
	DnsCacheConfigs []GetClusterAddonsConfigDnsCacheConfig `pulumi:"dnsCacheConfigs"`
	// Whether this cluster should enable the Google Compute Engine Persistent Disk Container Storage Interface (CSI) Driver. Set enabled = true to enable. The Compute Engine persistent disk CSI Driver is enabled by default on newly created clusters for the following versions: Linux clusters: GKE version 1.18.10-gke.2100 or later, or 1.19.3-gke.2100 or later.
	GcePersistentDiskCsiDriverConfigs []GetClusterAddonsConfigGcePersistentDiskCsiDriverConfig `pulumi:"gcePersistentDiskCsiDriverConfigs"`
	// The status of the Filestore CSI driver addon, which allows the usage of filestore instance as volumes. Defaults to disabled; set enabled = true to enable.
	GcpFilestoreCsiDriverConfigs []GetClusterAddonsConfigGcpFilestoreCsiDriverConfig `pulumi:"gcpFilestoreCsiDriverConfigs"`
	// The status of the GCS Fuse CSI driver addon, which allows the usage of gcs bucket as volumes. Defaults to disabled; set enabled = true to enable.
	GcsFuseCsiDriverConfigs []GetClusterAddonsConfigGcsFuseCsiDriverConfig `pulumi:"gcsFuseCsiDriverConfigs"`
	// The status of the Backup for GKE Agent addon. It is disabled by default. Set enabled = true to enable.
	GkeBackupAgentConfigs []GetClusterAddonsConfigGkeBackupAgentConfig `pulumi:"gkeBackupAgentConfigs"`
	// The status of the Horizontal Pod Autoscaling addon, which increases or decreases the number of replica pods a replication controller has based on the resource usage of the existing pods. It ensures that a Heapster pod is running in the cluster, which is also used by the Cloud Monitoring service. It is enabled by default; set disabled = true to disable.
	HorizontalPodAutoscalings []GetClusterAddonsConfigHorizontalPodAutoscaling `pulumi:"horizontalPodAutoscalings"`
	// The status of the HTTP (L7) load balancing controller addon, which makes it easy to set up HTTP load balancers for services in a cluster. It is enabled by default; set disabled = true to disable.
	HttpLoadBalancings []GetClusterAddonsConfigHttpLoadBalancing `pulumi:"httpLoadBalancings"`
	// The status of the Istio addon.
	IstioConfigs []GetClusterAddonsConfigIstioConfig `pulumi:"istioConfigs"`
	// Configuration for the KALM addon, which manages the lifecycle of k8s. It is disabled by default; Set enabled = true to enable.
	KalmConfigs []GetClusterAddonsConfigKalmConfig `pulumi:"kalmConfigs"`
	// Whether we should enable the network policy addon for the master. This must be enabled in order to enable network policy for the nodes. To enable this, you must also define a networkPolicy block, otherwise nothing will happen. It can only be disabled if the nodes already do not have network policies enabled. Defaults to disabled; set disabled = false to enable.
	NetworkPolicyConfigs []GetClusterAddonsConfigNetworkPolicyConfig `pulumi:"networkPolicyConfigs"`
	// The status of the Stateful HA addon, which provides automatic configurable failover for stateful applications. Defaults to disabled; set enabled = true to enable.
	StatefulHaConfigs []GetClusterAddonsConfigStatefulHaConfig `pulumi:"statefulHaConfigs"`
}

// GetClusterAddonsConfigInput is an input type that accepts GetClusterAddonsConfigArgs and GetClusterAddonsConfigOutput values.
// You can construct a concrete instance of `GetClusterAddonsConfigInput` via:
//
//	GetClusterAddonsConfigArgs{...}
type GetClusterAddonsConfigInput interface {
	pulumi.Input

	ToGetClusterAddonsConfigOutput() GetClusterAddonsConfigOutput
	ToGetClusterAddonsConfigOutputWithContext(context.Context) GetClusterAddonsConfigOutput
}

type GetClusterAddonsConfigArgs struct {
	// The status of the CloudRun addon. It is disabled by default. Set disabled = false to enable.
	CloudrunConfigs GetClusterAddonsConfigCloudrunConfigArrayInput `pulumi:"cloudrunConfigs"`
	// The of the Config Connector addon.
	ConfigConnectorConfigs GetClusterAddonsConfigConfigConnectorConfigArrayInput `pulumi:"configConnectorConfigs"`
	// The status of the NodeLocal DNSCache addon. It is disabled by default. Set enabled = true to enable.
	DnsCacheConfigs GetClusterAddonsConfigDnsCacheConfigArrayInput `pulumi:"dnsCacheConfigs"`
	// Whether this cluster should enable the Google Compute Engine Persistent Disk Container Storage Interface (CSI) Driver. Set enabled = true to enable. The Compute Engine persistent disk CSI Driver is enabled by default on newly created clusters for the following versions: Linux clusters: GKE version 1.18.10-gke.2100 or later, or 1.19.3-gke.2100 or later.
	GcePersistentDiskCsiDriverConfigs GetClusterAddonsConfigGcePersistentDiskCsiDriverConfigArrayInput `pulumi:"gcePersistentDiskCsiDriverConfigs"`
	// The status of the Filestore CSI driver addon, which allows the usage of filestore instance as volumes. Defaults to disabled; set enabled = true to enable.
	GcpFilestoreCsiDriverConfigs GetClusterAddonsConfigGcpFilestoreCsiDriverConfigArrayInput `pulumi:"gcpFilestoreCsiDriverConfigs"`
	// The status of the GCS Fuse CSI driver addon, which allows the usage of gcs bucket as volumes. Defaults to disabled; set enabled = true to enable.
	GcsFuseCsiDriverConfigs GetClusterAddonsConfigGcsFuseCsiDriverConfigArrayInput `pulumi:"gcsFuseCsiDriverConfigs"`
	// The status of the Backup for GKE Agent addon. It is disabled by default. Set enabled = true to enable.
	GkeBackupAgentConfigs GetClusterAddonsConfigGkeBackupAgentConfigArrayInput `pulumi:"gkeBackupAgentConfigs"`
	// The status of the Horizontal Pod Autoscaling addon, which increases or decreases the number of replica pods a replication controller has based on the resource usage of the existing pods. It ensures that a Heapster pod is running in the cluster, which is also used by the Cloud Monitoring service. It is enabled by default; set disabled = true to disable.
	HorizontalPodAutoscalings GetClusterAddonsConfigHorizontalPodAutoscalingArrayInput `pulumi:"horizontalPodAutoscalings"`
	// The status of the HTTP (L7) load balancing controller addon, which makes it easy to set up HTTP load balancers for services in a cluster. It is enabled by default; set disabled = true to disable.
	HttpLoadBalancings GetClusterAddonsConfigHttpLoadBalancingArrayInput `pulumi:"httpLoadBalancings"`
	// The status of the Istio addon.
	IstioConfigs GetClusterAddonsConfigIstioConfigArrayInput `pulumi:"istioConfigs"`
	// Configuration for the KALM addon, which manages the lifecycle of k8s. It is disabled by default; Set enabled = true to enable.
	KalmConfigs GetClusterAddonsConfigKalmConfigArrayInput `pulumi:"kalmConfigs"`
	// Whether we should enable the network policy addon for the master. This must be enabled in order to enable network policy for the nodes. To enable this, you must also define a networkPolicy block, otherwise nothing will happen. It can only be disabled if the nodes already do not have network policies enabled. Defaults to disabled; set disabled = false to enable.
	NetworkPolicyConfigs GetClusterAddonsConfigNetworkPolicyConfigArrayInput `pulumi:"networkPolicyConfigs"`
	// The status of the Stateful HA addon, which provides automatic configurable failover for stateful applications. Defaults to disabled; set enabled = true to enable.
	StatefulHaConfigs GetClusterAddonsConfigStatefulHaConfigArrayInput `pulumi:"statefulHaConfigs"`
}

func (GetClusterAddonsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterAddonsConfig)(nil)).Elem()
}

func (i GetClusterAddonsConfigArgs) ToGetClusterAddonsConfigOutput() GetClusterAddonsConfigOutput {
	return i.ToGetClusterAddonsConfigOutputWithContext(context.Background())
}

func (i GetClusterAddonsConfigArgs) ToGetClusterAddonsConfigOutputWithContext(ctx context.Context) GetClusterAddonsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterAddonsConfigOutput)
}

// GetClusterAddonsConfigArrayInput is an input type that accepts GetClusterAddonsConfigArray and GetClusterAddonsConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterAddonsConfigArrayInput` via:
//
//	GetClusterAddonsConfigArray{ GetClusterAddonsConfigArgs{...} }
type GetClusterAddonsConfigArrayInput interface {
	pulumi.Input

	ToGetClusterAddonsConfigArrayOutput() GetClusterAddonsConfigArrayOutput
	ToGetClusterAddonsConfigArrayOutputWithContext(context.Context) GetClusterAddonsConfigArrayOutput
}

type GetClusterAddonsConfigArray []GetClusterAddonsConfigInput

func (GetClusterAddonsConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterAddonsConfig)(nil)).Elem()
}

func (i GetClusterAddonsConfigArray) ToGetClusterAddonsConfigArrayOutput() GetClusterAddonsConfigArrayOutput {
	return i.ToGetClusterAddonsConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterAddonsConfigArray) ToGetClusterAddonsConfigArrayOutputWithContext(ctx context.Context) GetClusterAddonsConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterAddonsConfigArrayOutput)
}

type GetClusterAddonsConfigOutput struct{ *pulumi.OutputState }

func (GetClusterAddonsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterAddonsConfig)(nil)).Elem()
}

func (o GetClusterAddonsConfigOutput) ToGetClusterAddonsConfigOutput() GetClusterAddonsConfigOutput {
	return o
}

func (o GetClusterAddonsConfigOutput) ToGetClusterAddonsConfigOutputWithContext(ctx context.Context) GetClusterAddonsConfigOutput {
	return o
}

// The status of the CloudRun addon. It is disabled by default. Set disabled = false to enable.
func (o GetClusterAddonsConfigOutput) CloudrunConfigs() GetClusterAddonsConfigCloudrunConfigArrayOutput {
	return o.ApplyT(func(v GetClusterAddonsConfig) []GetClusterAddonsConfigCloudrunConfig { return v.CloudrunConfigs }).(GetClusterAddonsConfigCloudrunConfigArrayOutput)
}

// The of the Config Connector addon.
func (o GetClusterAddonsConfigOutput) ConfigConnectorConfigs() GetClusterAddonsConfigConfigConnectorConfigArrayOutput {
	return o.ApplyT(func(v GetClusterAddonsConfig) []GetClusterAddonsConfigConfigConnectorConfig {
		return v.ConfigConnectorConfigs
	}).(GetClusterAddonsConfigConfigConnectorConfigArrayOutput)
}

// The status of the NodeLocal DNSCache addon. It is disabled by default. Set enabled = true to enable.
func (o GetClusterAddonsConfigOutput) DnsCacheConfigs() GetClusterAddonsConfigDnsCacheConfigArrayOutput {
	return o.ApplyT(func(v GetClusterAddonsConfig) []GetClusterAddonsConfigDnsCacheConfig { return v.DnsCacheConfigs }).(GetClusterAddonsConfigDnsCacheConfigArrayOutput)
}

// Whether this cluster should enable the Google Compute Engine Persistent Disk Container Storage Interface (CSI) Driver. Set enabled = true to enable. The Compute Engine persistent disk CSI Driver is enabled by default on newly created clusters for the following versions: Linux clusters: GKE version 1.18.10-gke.2100 or later, or 1.19.3-gke.2100 or later.
func (o GetClusterAddonsConfigOutput) GcePersistentDiskCsiDriverConfigs() GetClusterAddonsConfigGcePersistentDiskCsiDriverConfigArrayOutput {
	return o.ApplyT(func(v GetClusterAddonsConfig) []GetClusterAddonsConfigGcePersistentDiskCsiDriverConfig {
		return v.GcePersistentDiskCsiDriverConfigs
	}).(GetClusterAddonsConfigGcePersistentDiskCsiDriverConfigArrayOutput)
}

// The status of the Filestore CSI driver addon, which allows the usage of filestore instance as volumes. Defaults to disabled; set enabled = true to enable.
func (o GetClusterAddonsConfigOutput) GcpFilestoreCsiDriverConfigs() GetClusterAddonsConfigGcpFilestoreCsiDriverConfigArrayOutput {
	return o.ApplyT(func(v GetClusterAddonsConfig) []GetClusterAddonsConfigGcpFilestoreCsiDriverConfig {
		return v.GcpFilestoreCsiDriverConfigs
	}).(GetClusterAddonsConfigGcpFilestoreCsiDriverConfigArrayOutput)
}

// The status of the GCS Fuse CSI driver addon, which allows the usage of gcs bucket as volumes. Defaults to disabled; set enabled = true to enable.
func (o GetClusterAddonsConfigOutput) GcsFuseCsiDriverConfigs() GetClusterAddonsConfigGcsFuseCsiDriverConfigArrayOutput {
	return o.ApplyT(func(v GetClusterAddonsConfig) []GetClusterAddonsConfigGcsFuseCsiDriverConfig {
		return v.GcsFuseCsiDriverConfigs
	}).(GetClusterAddonsConfigGcsFuseCsiDriverConfigArrayOutput)
}

// The status of the Backup for GKE Agent addon. It is disabled by default. Set enabled = true to enable.
func (o GetClusterAddonsConfigOutput) GkeBackupAgentConfigs() GetClusterAddonsConfigGkeBackupAgentConfigArrayOutput {
	return o.ApplyT(func(v GetClusterAddonsConfig) []GetClusterAddonsConfigGkeBackupAgentConfig {
		return v.GkeBackupAgentConfigs
	}).(GetClusterAddonsConfigGkeBackupAgentConfigArrayOutput)
}

// The status of the Horizontal Pod Autoscaling addon, which increases or decreases the number of replica pods a replication controller has based on the resource usage of the existing pods. It ensures that a Heapster pod is running in the cluster, which is also used by the Cloud Monitoring service. It is enabled by default; set disabled = true to disable.
func (o GetClusterAddonsConfigOutput) HorizontalPodAutoscalings() GetClusterAddonsConfigHorizontalPodAutoscalingArrayOutput {
	return o.ApplyT(func(v GetClusterAddonsConfig) []GetClusterAddonsConfigHorizontalPodAutoscaling {
		return v.HorizontalPodAutoscalings
	}).(GetClusterAddonsConfigHorizontalPodAutoscalingArrayOutput)
}

// The status of the HTTP (L7) load balancing controller addon, which makes it easy to set up HTTP load balancers for services in a cluster. It is enabled by default; set disabled = true to disable.
func (o GetClusterAddonsConfigOutput) HttpLoadBalancings() GetClusterAddonsConfigHttpLoadBalancingArrayOutput {
	return o.ApplyT(func(v GetClusterAddonsConfig) []GetClusterAddonsConfigHttpLoadBalancing { return v.HttpLoadBalancings }).(GetClusterAddonsConfigHttpLoadBalancingArrayOutput)
}

// The status of the Istio addon.
func (o GetClusterAddonsConfigOutput) IstioConfigs() GetClusterAddonsConfigIstioConfigArrayOutput {
	return o.ApplyT(func(v GetClusterAddonsConfig) []GetClusterAddonsConfigIstioConfig { return v.IstioConfigs }).(GetClusterAddonsConfigIstioConfigArrayOutput)
}

// Configuration for the KALM addon, which manages the lifecycle of k8s. It is disabled by default; Set enabled = true to enable.
func (o GetClusterAddonsConfigOutput) KalmConfigs() GetClusterAddonsConfigKalmConfigArrayOutput {
	return o.ApplyT(func(v GetClusterAddonsConfig) []GetClusterAddonsConfigKalmConfig { return v.KalmConfigs }).(GetClusterAddonsConfigKalmConfigArrayOutput)
}

// Whether we should enable the network policy addon for the master. This must be enabled in order to enable network policy for the nodes. To enable this, you must also define a networkPolicy block, otherwise nothing will happen. It can only be disabled if the nodes already do not have network policies enabled. Defaults to disabled; set disabled = false to enable.
func (o GetClusterAddonsConfigOutput) NetworkPolicyConfigs() GetClusterAddonsConfigNetworkPolicyConfigArrayOutput {
	return o.ApplyT(func(v GetClusterAddonsConfig) []GetClusterAddonsConfigNetworkPolicyConfig {
		return v.NetworkPolicyConfigs
	}).(GetClusterAddonsConfigNetworkPolicyConfigArrayOutput)
}

// The status of the Stateful HA addon, which provides automatic configurable failover for stateful applications. Defaults to disabled; set enabled = true to enable.
func (o GetClusterAddonsConfigOutput) StatefulHaConfigs() GetClusterAddonsConfigStatefulHaConfigArrayOutput {
	return o.ApplyT(func(v GetClusterAddonsConfig) []GetClusterAddonsConfigStatefulHaConfig { return v.StatefulHaConfigs }).(GetClusterAddonsConfigStatefulHaConfigArrayOutput)
}

type GetClusterAddonsConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterAddonsConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterAddonsConfig)(nil)).Elem()
}

func (o GetClusterAddonsConfigArrayOutput) ToGetClusterAddonsConfigArrayOutput() GetClusterAddonsConfigArrayOutput {
	return o
}

func (o GetClusterAddonsConfigArrayOutput) ToGetClusterAddonsConfigArrayOutputWithContext(ctx context.Context) GetClusterAddonsConfigArrayOutput {
	return o
}

func (o GetClusterAddonsConfigArrayOutput) Index(i pulumi.IntInput) GetClusterAddonsConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterAddonsConfig {
		return vs[0].([]GetClusterAddonsConfig)[vs[1].(int)]
	}).(GetClusterAddonsConfigOutput)
}

type GetClusterAddonsConfigCloudrunConfig struct {
	Disabled         bool   `pulumi:"disabled"`
	LoadBalancerType string `pulumi:"loadBalancerType"`
}

// GetClusterAddonsConfigCloudrunConfigInput is an input type that accepts GetClusterAddonsConfigCloudrunConfigArgs and GetClusterAddonsConfigCloudrunConfigOutput values.
// You can construct a concrete instance of `GetClusterAddonsConfigCloudrunConfigInput` via:
//
//	GetClusterAddonsConfigCloudrunConfigArgs{...}
type GetClusterAddonsConfigCloudrunConfigInput interface {
	pulumi.Input

	ToGetClusterAddonsConfigCloudrunConfigOutput() GetClusterAddonsConfigCloudrunConfigOutput
	ToGetClusterAddonsConfigCloudrunConfigOutputWithContext(context.Context) GetClusterAddonsConfigCloudrunConfigOutput
}

type GetClusterAddonsConfigCloudrunConfigArgs struct {
	Disabled         pulumi.BoolInput   `pulumi:"disabled"`
	LoadBalancerType pulumi.StringInput `pulumi:"loadBalancerType"`
}

func (GetClusterAddonsConfigCloudrunConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterAddonsConfigCloudrunConfig)(nil)).Elem()
}

func (i GetClusterAddonsConfigCloudrunConfigArgs) ToGetClusterAddonsConfigCloudrunConfigOutput() GetClusterAddonsConfigCloudrunConfigOutput {
	return i.ToGetClusterAddonsConfigCloudrunConfigOutputWithContext(context.Background())
}

func (i GetClusterAddonsConfigCloudrunConfigArgs) ToGetClusterAddonsConfigCloudrunConfigOutputWithContext(ctx context.Context) GetClusterAddonsConfigCloudrunConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterAddonsConfigCloudrunConfigOutput)
}

// GetClusterAddonsConfigCloudrunConfigArrayInput is an input type that accepts GetClusterAddonsConfigCloudrunConfigArray and GetClusterAddonsConfigCloudrunConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterAddonsConfigCloudrunConfigArrayInput` via:
//
//	GetClusterAddonsConfigCloudrunConfigArray{ GetClusterAddonsConfigCloudrunConfigArgs{...} }
type GetClusterAddonsConfigCloudrunConfigArrayInput interface {
	pulumi.Input

	ToGetClusterAddonsConfigCloudrunConfigArrayOutput() GetClusterAddonsConfigCloudrunConfigArrayOutput
	ToGetClusterAddonsConfigCloudrunConfigArrayOutputWithContext(context.Context) GetClusterAddonsConfigCloudrunConfigArrayOutput
}

type GetClusterAddonsConfigCloudrunConfigArray []GetClusterAddonsConfigCloudrunConfigInput

func (GetClusterAddonsConfigCloudrunConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterAddonsConfigCloudrunConfig)(nil)).Elem()
}

func (i GetClusterAddonsConfigCloudrunConfigArray) ToGetClusterAddonsConfigCloudrunConfigArrayOutput() GetClusterAddonsConfigCloudrunConfigArrayOutput {
	return i.ToGetClusterAddonsConfigCloudrunConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterAddonsConfigCloudrunConfigArray) ToGetClusterAddonsConfigCloudrunConfigArrayOutputWithContext(ctx context.Context) GetClusterAddonsConfigCloudrunConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterAddonsConfigCloudrunConfigArrayOutput)
}

type GetClusterAddonsConfigCloudrunConfigOutput struct{ *pulumi.OutputState }

func (GetClusterAddonsConfigCloudrunConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterAddonsConfigCloudrunConfig)(nil)).Elem()
}

func (o GetClusterAddonsConfigCloudrunConfigOutput) ToGetClusterAddonsConfigCloudrunConfigOutput() GetClusterAddonsConfigCloudrunConfigOutput {
	return o
}

func (o GetClusterAddonsConfigCloudrunConfigOutput) ToGetClusterAddonsConfigCloudrunConfigOutputWithContext(ctx context.Context) GetClusterAddonsConfigCloudrunConfigOutput {
	return o
}

func (o GetClusterAddonsConfigCloudrunConfigOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterAddonsConfigCloudrunConfig) bool { return v.Disabled }).(pulumi.BoolOutput)
}

func (o GetClusterAddonsConfigCloudrunConfigOutput) LoadBalancerType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterAddonsConfigCloudrunConfig) string { return v.LoadBalancerType }).(pulumi.StringOutput)
}

type GetClusterAddonsConfigCloudrunConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterAddonsConfigCloudrunConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterAddonsConfigCloudrunConfig)(nil)).Elem()
}

func (o GetClusterAddonsConfigCloudrunConfigArrayOutput) ToGetClusterAddonsConfigCloudrunConfigArrayOutput() GetClusterAddonsConfigCloudrunConfigArrayOutput {
	return o
}

func (o GetClusterAddonsConfigCloudrunConfigArrayOutput) ToGetClusterAddonsConfigCloudrunConfigArrayOutputWithContext(ctx context.Context) GetClusterAddonsConfigCloudrunConfigArrayOutput {
	return o
}

func (o GetClusterAddonsConfigCloudrunConfigArrayOutput) Index(i pulumi.IntInput) GetClusterAddonsConfigCloudrunConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterAddonsConfigCloudrunConfig {
		return vs[0].([]GetClusterAddonsConfigCloudrunConfig)[vs[1].(int)]
	}).(GetClusterAddonsConfigCloudrunConfigOutput)
}

type GetClusterAddonsConfigConfigConnectorConfig struct {
	Enabled bool `pulumi:"enabled"`
}

// GetClusterAddonsConfigConfigConnectorConfigInput is an input type that accepts GetClusterAddonsConfigConfigConnectorConfigArgs and GetClusterAddonsConfigConfigConnectorConfigOutput values.
// You can construct a concrete instance of `GetClusterAddonsConfigConfigConnectorConfigInput` via:
//
//	GetClusterAddonsConfigConfigConnectorConfigArgs{...}
type GetClusterAddonsConfigConfigConnectorConfigInput interface {
	pulumi.Input

	ToGetClusterAddonsConfigConfigConnectorConfigOutput() GetClusterAddonsConfigConfigConnectorConfigOutput
	ToGetClusterAddonsConfigConfigConnectorConfigOutputWithContext(context.Context) GetClusterAddonsConfigConfigConnectorConfigOutput
}

type GetClusterAddonsConfigConfigConnectorConfigArgs struct {
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (GetClusterAddonsConfigConfigConnectorConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterAddonsConfigConfigConnectorConfig)(nil)).Elem()
}

func (i GetClusterAddonsConfigConfigConnectorConfigArgs) ToGetClusterAddonsConfigConfigConnectorConfigOutput() GetClusterAddonsConfigConfigConnectorConfigOutput {
	return i.ToGetClusterAddonsConfigConfigConnectorConfigOutputWithContext(context.Background())
}

func (i GetClusterAddonsConfigConfigConnectorConfigArgs) ToGetClusterAddonsConfigConfigConnectorConfigOutputWithContext(ctx context.Context) GetClusterAddonsConfigConfigConnectorConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterAddonsConfigConfigConnectorConfigOutput)
}

// GetClusterAddonsConfigConfigConnectorConfigArrayInput is an input type that accepts GetClusterAddonsConfigConfigConnectorConfigArray and GetClusterAddonsConfigConfigConnectorConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterAddonsConfigConfigConnectorConfigArrayInput` via:
//
//	GetClusterAddonsConfigConfigConnectorConfigArray{ GetClusterAddonsConfigConfigConnectorConfigArgs{...} }
type GetClusterAddonsConfigConfigConnectorConfigArrayInput interface {
	pulumi.Input

	ToGetClusterAddonsConfigConfigConnectorConfigArrayOutput() GetClusterAddonsConfigConfigConnectorConfigArrayOutput
	ToGetClusterAddonsConfigConfigConnectorConfigArrayOutputWithContext(context.Context) GetClusterAddonsConfigConfigConnectorConfigArrayOutput
}

type GetClusterAddonsConfigConfigConnectorConfigArray []GetClusterAddonsConfigConfigConnectorConfigInput

func (GetClusterAddonsConfigConfigConnectorConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterAddonsConfigConfigConnectorConfig)(nil)).Elem()
}

func (i GetClusterAddonsConfigConfigConnectorConfigArray) ToGetClusterAddonsConfigConfigConnectorConfigArrayOutput() GetClusterAddonsConfigConfigConnectorConfigArrayOutput {
	return i.ToGetClusterAddonsConfigConfigConnectorConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterAddonsConfigConfigConnectorConfigArray) ToGetClusterAddonsConfigConfigConnectorConfigArrayOutputWithContext(ctx context.Context) GetClusterAddonsConfigConfigConnectorConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterAddonsConfigConfigConnectorConfigArrayOutput)
}

type GetClusterAddonsConfigConfigConnectorConfigOutput struct{ *pulumi.OutputState }

func (GetClusterAddonsConfigConfigConnectorConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterAddonsConfigConfigConnectorConfig)(nil)).Elem()
}

func (o GetClusterAddonsConfigConfigConnectorConfigOutput) ToGetClusterAddonsConfigConfigConnectorConfigOutput() GetClusterAddonsConfigConfigConnectorConfigOutput {
	return o
}

func (o GetClusterAddonsConfigConfigConnectorConfigOutput) ToGetClusterAddonsConfigConfigConnectorConfigOutputWithContext(ctx context.Context) GetClusterAddonsConfigConfigConnectorConfigOutput {
	return o
}

func (o GetClusterAddonsConfigConfigConnectorConfigOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterAddonsConfigConfigConnectorConfig) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type GetClusterAddonsConfigConfigConnectorConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterAddonsConfigConfigConnectorConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterAddonsConfigConfigConnectorConfig)(nil)).Elem()
}

func (o GetClusterAddonsConfigConfigConnectorConfigArrayOutput) ToGetClusterAddonsConfigConfigConnectorConfigArrayOutput() GetClusterAddonsConfigConfigConnectorConfigArrayOutput {
	return o
}

func (o GetClusterAddonsConfigConfigConnectorConfigArrayOutput) ToGetClusterAddonsConfigConfigConnectorConfigArrayOutputWithContext(ctx context.Context) GetClusterAddonsConfigConfigConnectorConfigArrayOutput {
	return o
}

func (o GetClusterAddonsConfigConfigConnectorConfigArrayOutput) Index(i pulumi.IntInput) GetClusterAddonsConfigConfigConnectorConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterAddonsConfigConfigConnectorConfig {
		return vs[0].([]GetClusterAddonsConfigConfigConnectorConfig)[vs[1].(int)]
	}).(GetClusterAddonsConfigConfigConnectorConfigOutput)
}

type GetClusterAddonsConfigDnsCacheConfig struct {
	Enabled bool `pulumi:"enabled"`
}

// GetClusterAddonsConfigDnsCacheConfigInput is an input type that accepts GetClusterAddonsConfigDnsCacheConfigArgs and GetClusterAddonsConfigDnsCacheConfigOutput values.
// You can construct a concrete instance of `GetClusterAddonsConfigDnsCacheConfigInput` via:
//
//	GetClusterAddonsConfigDnsCacheConfigArgs{...}
type GetClusterAddonsConfigDnsCacheConfigInput interface {
	pulumi.Input

	ToGetClusterAddonsConfigDnsCacheConfigOutput() GetClusterAddonsConfigDnsCacheConfigOutput
	ToGetClusterAddonsConfigDnsCacheConfigOutputWithContext(context.Context) GetClusterAddonsConfigDnsCacheConfigOutput
}

type GetClusterAddonsConfigDnsCacheConfigArgs struct {
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (GetClusterAddonsConfigDnsCacheConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterAddonsConfigDnsCacheConfig)(nil)).Elem()
}

func (i GetClusterAddonsConfigDnsCacheConfigArgs) ToGetClusterAddonsConfigDnsCacheConfigOutput() GetClusterAddonsConfigDnsCacheConfigOutput {
	return i.ToGetClusterAddonsConfigDnsCacheConfigOutputWithContext(context.Background())
}

func (i GetClusterAddonsConfigDnsCacheConfigArgs) ToGetClusterAddonsConfigDnsCacheConfigOutputWithContext(ctx context.Context) GetClusterAddonsConfigDnsCacheConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterAddonsConfigDnsCacheConfigOutput)
}

// GetClusterAddonsConfigDnsCacheConfigArrayInput is an input type that accepts GetClusterAddonsConfigDnsCacheConfigArray and GetClusterAddonsConfigDnsCacheConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterAddonsConfigDnsCacheConfigArrayInput` via:
//
//	GetClusterAddonsConfigDnsCacheConfigArray{ GetClusterAddonsConfigDnsCacheConfigArgs{...} }
type GetClusterAddonsConfigDnsCacheConfigArrayInput interface {
	pulumi.Input

	ToGetClusterAddonsConfigDnsCacheConfigArrayOutput() GetClusterAddonsConfigDnsCacheConfigArrayOutput
	ToGetClusterAddonsConfigDnsCacheConfigArrayOutputWithContext(context.Context) GetClusterAddonsConfigDnsCacheConfigArrayOutput
}

type GetClusterAddonsConfigDnsCacheConfigArray []GetClusterAddonsConfigDnsCacheConfigInput

func (GetClusterAddonsConfigDnsCacheConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterAddonsConfigDnsCacheConfig)(nil)).Elem()
}

func (i GetClusterAddonsConfigDnsCacheConfigArray) ToGetClusterAddonsConfigDnsCacheConfigArrayOutput() GetClusterAddonsConfigDnsCacheConfigArrayOutput {
	return i.ToGetClusterAddonsConfigDnsCacheConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterAddonsConfigDnsCacheConfigArray) ToGetClusterAddonsConfigDnsCacheConfigArrayOutputWithContext(ctx context.Context) GetClusterAddonsConfigDnsCacheConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterAddonsConfigDnsCacheConfigArrayOutput)
}

type GetClusterAddonsConfigDnsCacheConfigOutput struct{ *pulumi.OutputState }

func (GetClusterAddonsConfigDnsCacheConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterAddonsConfigDnsCacheConfig)(nil)).Elem()
}

func (o GetClusterAddonsConfigDnsCacheConfigOutput) ToGetClusterAddonsConfigDnsCacheConfigOutput() GetClusterAddonsConfigDnsCacheConfigOutput {
	return o
}

func (o GetClusterAddonsConfigDnsCacheConfigOutput) ToGetClusterAddonsConfigDnsCacheConfigOutputWithContext(ctx context.Context) GetClusterAddonsConfigDnsCacheConfigOutput {
	return o
}

func (o GetClusterAddonsConfigDnsCacheConfigOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterAddonsConfigDnsCacheConfig) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type GetClusterAddonsConfigDnsCacheConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterAddonsConfigDnsCacheConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterAddonsConfigDnsCacheConfig)(nil)).Elem()
}

func (o GetClusterAddonsConfigDnsCacheConfigArrayOutput) ToGetClusterAddonsConfigDnsCacheConfigArrayOutput() GetClusterAddonsConfigDnsCacheConfigArrayOutput {
	return o
}

func (o GetClusterAddonsConfigDnsCacheConfigArrayOutput) ToGetClusterAddonsConfigDnsCacheConfigArrayOutputWithContext(ctx context.Context) GetClusterAddonsConfigDnsCacheConfigArrayOutput {
	return o
}

func (o GetClusterAddonsConfigDnsCacheConfigArrayOutput) Index(i pulumi.IntInput) GetClusterAddonsConfigDnsCacheConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterAddonsConfigDnsCacheConfig {
		return vs[0].([]GetClusterAddonsConfigDnsCacheConfig)[vs[1].(int)]
	}).(GetClusterAddonsConfigDnsCacheConfigOutput)
}

type GetClusterAddonsConfigGcePersistentDiskCsiDriverConfig struct {
	Enabled bool `pulumi:"enabled"`
}

// GetClusterAddonsConfigGcePersistentDiskCsiDriverConfigInput is an input type that accepts GetClusterAddonsConfigGcePersistentDiskCsiDriverConfigArgs and GetClusterAddonsConfigGcePersistentDiskCsiDriverConfigOutput values.
// You can construct a concrete instance of `GetClusterAddonsConfigGcePersistentDiskCsiDriverConfigInput` via:
//
//	GetClusterAddonsConfigGcePersistentDiskCsiDriverConfigArgs{...}
type GetClusterAddonsConfigGcePersistentDiskCsiDriverConfigInput interface {
	pulumi.Input

	ToGetClusterAddonsConfigGcePersistentDiskCsiDriverConfigOutput() GetClusterAddonsConfigGcePersistentDiskCsiDriverConfigOutput
	ToGetClusterAddonsConfigGcePersistentDiskCsiDriverConfigOutputWithContext(context.Context) GetClusterAddonsConfigGcePersistentDiskCsiDriverConfigOutput
}

type GetClusterAddonsConfigGcePersistentDiskCsiDriverConfigArgs struct {
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (GetClusterAddonsConfigGcePersistentDiskCsiDriverConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterAddonsConfigGcePersistentDiskCsiDriverConfig)(nil)).Elem()
}

func (i GetClusterAddonsConfigGcePersistentDiskCsiDriverConfigArgs) ToGetClusterAddonsConfigGcePersistentDiskCsiDriverConfigOutput() GetClusterAddonsConfigGcePersistentDiskCsiDriverConfigOutput {
	return i.ToGetClusterAddonsConfigGcePersistentDiskCsiDriverConfigOutputWithContext(context.Background())
}

func (i GetClusterAddonsConfigGcePersistentDiskCsiDriverConfigArgs) ToGetClusterAddonsConfigGcePersistentDiskCsiDriverConfigOutputWithContext(ctx context.Context) GetClusterAddonsConfigGcePersistentDiskCsiDriverConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterAddonsConfigGcePersistentDiskCsiDriverConfigOutput)
}

// GetClusterAddonsConfigGcePersistentDiskCsiDriverConfigArrayInput is an input type that accepts GetClusterAddonsConfigGcePersistentDiskCsiDriverConfigArray and GetClusterAddonsConfigGcePersistentDiskCsiDriverConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterAddonsConfigGcePersistentDiskCsiDriverConfigArrayInput` via:
//
//	GetClusterAddonsConfigGcePersistentDiskCsiDriverConfigArray{ GetClusterAddonsConfigGcePersistentDiskCsiDriverConfigArgs{...} }
type GetClusterAddonsConfigGcePersistentDiskCsiDriverConfigArrayInput interface {
	pulumi.Input

	ToGetClusterAddonsConfigGcePersistentDiskCsiDriverConfigArrayOutput() GetClusterAddonsConfigGcePersistentDiskCsiDriverConfigArrayOutput
	ToGetClusterAddonsConfigGcePersistentDiskCsiDriverConfigArrayOutputWithContext(context.Context) GetClusterAddonsConfigGcePersistentDiskCsiDriverConfigArrayOutput
}

type GetClusterAddonsConfigGcePersistentDiskCsiDriverConfigArray []GetClusterAddonsConfigGcePersistentDiskCsiDriverConfigInput

func (GetClusterAddonsConfigGcePersistentDiskCsiDriverConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterAddonsConfigGcePersistentDiskCsiDriverConfig)(nil)).Elem()
}

func (i GetClusterAddonsConfigGcePersistentDiskCsiDriverConfigArray) ToGetClusterAddonsConfigGcePersistentDiskCsiDriverConfigArrayOutput() GetClusterAddonsConfigGcePersistentDiskCsiDriverConfigArrayOutput {
	return i.ToGetClusterAddonsConfigGcePersistentDiskCsiDriverConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterAddonsConfigGcePersistentDiskCsiDriverConfigArray) ToGetClusterAddonsConfigGcePersistentDiskCsiDriverConfigArrayOutputWithContext(ctx context.Context) GetClusterAddonsConfigGcePersistentDiskCsiDriverConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterAddonsConfigGcePersistentDiskCsiDriverConfigArrayOutput)
}

type GetClusterAddonsConfigGcePersistentDiskCsiDriverConfigOutput struct{ *pulumi.OutputState }

func (GetClusterAddonsConfigGcePersistentDiskCsiDriverConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterAddonsConfigGcePersistentDiskCsiDriverConfig)(nil)).Elem()
}

func (o GetClusterAddonsConfigGcePersistentDiskCsiDriverConfigOutput) ToGetClusterAddonsConfigGcePersistentDiskCsiDriverConfigOutput() GetClusterAddonsConfigGcePersistentDiskCsiDriverConfigOutput {
	return o
}

func (o GetClusterAddonsConfigGcePersistentDiskCsiDriverConfigOutput) ToGetClusterAddonsConfigGcePersistentDiskCsiDriverConfigOutputWithContext(ctx context.Context) GetClusterAddonsConfigGcePersistentDiskCsiDriverConfigOutput {
	return o
}

func (o GetClusterAddonsConfigGcePersistentDiskCsiDriverConfigOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterAddonsConfigGcePersistentDiskCsiDriverConfig) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type GetClusterAddonsConfigGcePersistentDiskCsiDriverConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterAddonsConfigGcePersistentDiskCsiDriverConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterAddonsConfigGcePersistentDiskCsiDriverConfig)(nil)).Elem()
}

func (o GetClusterAddonsConfigGcePersistentDiskCsiDriverConfigArrayOutput) ToGetClusterAddonsConfigGcePersistentDiskCsiDriverConfigArrayOutput() GetClusterAddonsConfigGcePersistentDiskCsiDriverConfigArrayOutput {
	return o
}

func (o GetClusterAddonsConfigGcePersistentDiskCsiDriverConfigArrayOutput) ToGetClusterAddonsConfigGcePersistentDiskCsiDriverConfigArrayOutputWithContext(ctx context.Context) GetClusterAddonsConfigGcePersistentDiskCsiDriverConfigArrayOutput {
	return o
}

func (o GetClusterAddonsConfigGcePersistentDiskCsiDriverConfigArrayOutput) Index(i pulumi.IntInput) GetClusterAddonsConfigGcePersistentDiskCsiDriverConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterAddonsConfigGcePersistentDiskCsiDriverConfig {
		return vs[0].([]GetClusterAddonsConfigGcePersistentDiskCsiDriverConfig)[vs[1].(int)]
	}).(GetClusterAddonsConfigGcePersistentDiskCsiDriverConfigOutput)
}

type GetClusterAddonsConfigGcpFilestoreCsiDriverConfig struct {
	Enabled bool `pulumi:"enabled"`
}

// GetClusterAddonsConfigGcpFilestoreCsiDriverConfigInput is an input type that accepts GetClusterAddonsConfigGcpFilestoreCsiDriverConfigArgs and GetClusterAddonsConfigGcpFilestoreCsiDriverConfigOutput values.
// You can construct a concrete instance of `GetClusterAddonsConfigGcpFilestoreCsiDriverConfigInput` via:
//
//	GetClusterAddonsConfigGcpFilestoreCsiDriverConfigArgs{...}
type GetClusterAddonsConfigGcpFilestoreCsiDriverConfigInput interface {
	pulumi.Input

	ToGetClusterAddonsConfigGcpFilestoreCsiDriverConfigOutput() GetClusterAddonsConfigGcpFilestoreCsiDriverConfigOutput
	ToGetClusterAddonsConfigGcpFilestoreCsiDriverConfigOutputWithContext(context.Context) GetClusterAddonsConfigGcpFilestoreCsiDriverConfigOutput
}

type GetClusterAddonsConfigGcpFilestoreCsiDriverConfigArgs struct {
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (GetClusterAddonsConfigGcpFilestoreCsiDriverConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterAddonsConfigGcpFilestoreCsiDriverConfig)(nil)).Elem()
}

func (i GetClusterAddonsConfigGcpFilestoreCsiDriverConfigArgs) ToGetClusterAddonsConfigGcpFilestoreCsiDriverConfigOutput() GetClusterAddonsConfigGcpFilestoreCsiDriverConfigOutput {
	return i.ToGetClusterAddonsConfigGcpFilestoreCsiDriverConfigOutputWithContext(context.Background())
}

func (i GetClusterAddonsConfigGcpFilestoreCsiDriverConfigArgs) ToGetClusterAddonsConfigGcpFilestoreCsiDriverConfigOutputWithContext(ctx context.Context) GetClusterAddonsConfigGcpFilestoreCsiDriverConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterAddonsConfigGcpFilestoreCsiDriverConfigOutput)
}

// GetClusterAddonsConfigGcpFilestoreCsiDriverConfigArrayInput is an input type that accepts GetClusterAddonsConfigGcpFilestoreCsiDriverConfigArray and GetClusterAddonsConfigGcpFilestoreCsiDriverConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterAddonsConfigGcpFilestoreCsiDriverConfigArrayInput` via:
//
//	GetClusterAddonsConfigGcpFilestoreCsiDriverConfigArray{ GetClusterAddonsConfigGcpFilestoreCsiDriverConfigArgs{...} }
type GetClusterAddonsConfigGcpFilestoreCsiDriverConfigArrayInput interface {
	pulumi.Input

	ToGetClusterAddonsConfigGcpFilestoreCsiDriverConfigArrayOutput() GetClusterAddonsConfigGcpFilestoreCsiDriverConfigArrayOutput
	ToGetClusterAddonsConfigGcpFilestoreCsiDriverConfigArrayOutputWithContext(context.Context) GetClusterAddonsConfigGcpFilestoreCsiDriverConfigArrayOutput
}

type GetClusterAddonsConfigGcpFilestoreCsiDriverConfigArray []GetClusterAddonsConfigGcpFilestoreCsiDriverConfigInput

func (GetClusterAddonsConfigGcpFilestoreCsiDriverConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterAddonsConfigGcpFilestoreCsiDriverConfig)(nil)).Elem()
}

func (i GetClusterAddonsConfigGcpFilestoreCsiDriverConfigArray) ToGetClusterAddonsConfigGcpFilestoreCsiDriverConfigArrayOutput() GetClusterAddonsConfigGcpFilestoreCsiDriverConfigArrayOutput {
	return i.ToGetClusterAddonsConfigGcpFilestoreCsiDriverConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterAddonsConfigGcpFilestoreCsiDriverConfigArray) ToGetClusterAddonsConfigGcpFilestoreCsiDriverConfigArrayOutputWithContext(ctx context.Context) GetClusterAddonsConfigGcpFilestoreCsiDriverConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterAddonsConfigGcpFilestoreCsiDriverConfigArrayOutput)
}

type GetClusterAddonsConfigGcpFilestoreCsiDriverConfigOutput struct{ *pulumi.OutputState }

func (GetClusterAddonsConfigGcpFilestoreCsiDriverConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterAddonsConfigGcpFilestoreCsiDriverConfig)(nil)).Elem()
}

func (o GetClusterAddonsConfigGcpFilestoreCsiDriverConfigOutput) ToGetClusterAddonsConfigGcpFilestoreCsiDriverConfigOutput() GetClusterAddonsConfigGcpFilestoreCsiDriverConfigOutput {
	return o
}

func (o GetClusterAddonsConfigGcpFilestoreCsiDriverConfigOutput) ToGetClusterAddonsConfigGcpFilestoreCsiDriverConfigOutputWithContext(ctx context.Context) GetClusterAddonsConfigGcpFilestoreCsiDriverConfigOutput {
	return o
}

func (o GetClusterAddonsConfigGcpFilestoreCsiDriverConfigOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterAddonsConfigGcpFilestoreCsiDriverConfig) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type GetClusterAddonsConfigGcpFilestoreCsiDriverConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterAddonsConfigGcpFilestoreCsiDriverConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterAddonsConfigGcpFilestoreCsiDriverConfig)(nil)).Elem()
}

func (o GetClusterAddonsConfigGcpFilestoreCsiDriverConfigArrayOutput) ToGetClusterAddonsConfigGcpFilestoreCsiDriverConfigArrayOutput() GetClusterAddonsConfigGcpFilestoreCsiDriverConfigArrayOutput {
	return o
}

func (o GetClusterAddonsConfigGcpFilestoreCsiDriverConfigArrayOutput) ToGetClusterAddonsConfigGcpFilestoreCsiDriverConfigArrayOutputWithContext(ctx context.Context) GetClusterAddonsConfigGcpFilestoreCsiDriverConfigArrayOutput {
	return o
}

func (o GetClusterAddonsConfigGcpFilestoreCsiDriverConfigArrayOutput) Index(i pulumi.IntInput) GetClusterAddonsConfigGcpFilestoreCsiDriverConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterAddonsConfigGcpFilestoreCsiDriverConfig {
		return vs[0].([]GetClusterAddonsConfigGcpFilestoreCsiDriverConfig)[vs[1].(int)]
	}).(GetClusterAddonsConfigGcpFilestoreCsiDriverConfigOutput)
}

type GetClusterAddonsConfigGcsFuseCsiDriverConfig struct {
	Enabled bool `pulumi:"enabled"`
}

// GetClusterAddonsConfigGcsFuseCsiDriverConfigInput is an input type that accepts GetClusterAddonsConfigGcsFuseCsiDriverConfigArgs and GetClusterAddonsConfigGcsFuseCsiDriverConfigOutput values.
// You can construct a concrete instance of `GetClusterAddonsConfigGcsFuseCsiDriverConfigInput` via:
//
//	GetClusterAddonsConfigGcsFuseCsiDriverConfigArgs{...}
type GetClusterAddonsConfigGcsFuseCsiDriverConfigInput interface {
	pulumi.Input

	ToGetClusterAddonsConfigGcsFuseCsiDriverConfigOutput() GetClusterAddonsConfigGcsFuseCsiDriverConfigOutput
	ToGetClusterAddonsConfigGcsFuseCsiDriverConfigOutputWithContext(context.Context) GetClusterAddonsConfigGcsFuseCsiDriverConfigOutput
}

type GetClusterAddonsConfigGcsFuseCsiDriverConfigArgs struct {
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (GetClusterAddonsConfigGcsFuseCsiDriverConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterAddonsConfigGcsFuseCsiDriverConfig)(nil)).Elem()
}

func (i GetClusterAddonsConfigGcsFuseCsiDriverConfigArgs) ToGetClusterAddonsConfigGcsFuseCsiDriverConfigOutput() GetClusterAddonsConfigGcsFuseCsiDriverConfigOutput {
	return i.ToGetClusterAddonsConfigGcsFuseCsiDriverConfigOutputWithContext(context.Background())
}

func (i GetClusterAddonsConfigGcsFuseCsiDriverConfigArgs) ToGetClusterAddonsConfigGcsFuseCsiDriverConfigOutputWithContext(ctx context.Context) GetClusterAddonsConfigGcsFuseCsiDriverConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterAddonsConfigGcsFuseCsiDriverConfigOutput)
}

// GetClusterAddonsConfigGcsFuseCsiDriverConfigArrayInput is an input type that accepts GetClusterAddonsConfigGcsFuseCsiDriverConfigArray and GetClusterAddonsConfigGcsFuseCsiDriverConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterAddonsConfigGcsFuseCsiDriverConfigArrayInput` via:
//
//	GetClusterAddonsConfigGcsFuseCsiDriverConfigArray{ GetClusterAddonsConfigGcsFuseCsiDriverConfigArgs{...} }
type GetClusterAddonsConfigGcsFuseCsiDriverConfigArrayInput interface {
	pulumi.Input

	ToGetClusterAddonsConfigGcsFuseCsiDriverConfigArrayOutput() GetClusterAddonsConfigGcsFuseCsiDriverConfigArrayOutput
	ToGetClusterAddonsConfigGcsFuseCsiDriverConfigArrayOutputWithContext(context.Context) GetClusterAddonsConfigGcsFuseCsiDriverConfigArrayOutput
}

type GetClusterAddonsConfigGcsFuseCsiDriverConfigArray []GetClusterAddonsConfigGcsFuseCsiDriverConfigInput

func (GetClusterAddonsConfigGcsFuseCsiDriverConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterAddonsConfigGcsFuseCsiDriverConfig)(nil)).Elem()
}

func (i GetClusterAddonsConfigGcsFuseCsiDriverConfigArray) ToGetClusterAddonsConfigGcsFuseCsiDriverConfigArrayOutput() GetClusterAddonsConfigGcsFuseCsiDriverConfigArrayOutput {
	return i.ToGetClusterAddonsConfigGcsFuseCsiDriverConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterAddonsConfigGcsFuseCsiDriverConfigArray) ToGetClusterAddonsConfigGcsFuseCsiDriverConfigArrayOutputWithContext(ctx context.Context) GetClusterAddonsConfigGcsFuseCsiDriverConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterAddonsConfigGcsFuseCsiDriverConfigArrayOutput)
}

type GetClusterAddonsConfigGcsFuseCsiDriverConfigOutput struct{ *pulumi.OutputState }

func (GetClusterAddonsConfigGcsFuseCsiDriverConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterAddonsConfigGcsFuseCsiDriverConfig)(nil)).Elem()
}

func (o GetClusterAddonsConfigGcsFuseCsiDriverConfigOutput) ToGetClusterAddonsConfigGcsFuseCsiDriverConfigOutput() GetClusterAddonsConfigGcsFuseCsiDriverConfigOutput {
	return o
}

func (o GetClusterAddonsConfigGcsFuseCsiDriverConfigOutput) ToGetClusterAddonsConfigGcsFuseCsiDriverConfigOutputWithContext(ctx context.Context) GetClusterAddonsConfigGcsFuseCsiDriverConfigOutput {
	return o
}

func (o GetClusterAddonsConfigGcsFuseCsiDriverConfigOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterAddonsConfigGcsFuseCsiDriverConfig) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type GetClusterAddonsConfigGcsFuseCsiDriverConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterAddonsConfigGcsFuseCsiDriverConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterAddonsConfigGcsFuseCsiDriverConfig)(nil)).Elem()
}

func (o GetClusterAddonsConfigGcsFuseCsiDriverConfigArrayOutput) ToGetClusterAddonsConfigGcsFuseCsiDriverConfigArrayOutput() GetClusterAddonsConfigGcsFuseCsiDriverConfigArrayOutput {
	return o
}

func (o GetClusterAddonsConfigGcsFuseCsiDriverConfigArrayOutput) ToGetClusterAddonsConfigGcsFuseCsiDriverConfigArrayOutputWithContext(ctx context.Context) GetClusterAddonsConfigGcsFuseCsiDriverConfigArrayOutput {
	return o
}

func (o GetClusterAddonsConfigGcsFuseCsiDriverConfigArrayOutput) Index(i pulumi.IntInput) GetClusterAddonsConfigGcsFuseCsiDriverConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterAddonsConfigGcsFuseCsiDriverConfig {
		return vs[0].([]GetClusterAddonsConfigGcsFuseCsiDriverConfig)[vs[1].(int)]
	}).(GetClusterAddonsConfigGcsFuseCsiDriverConfigOutput)
}

type GetClusterAddonsConfigGkeBackupAgentConfig struct {
	Enabled bool `pulumi:"enabled"`
}

// GetClusterAddonsConfigGkeBackupAgentConfigInput is an input type that accepts GetClusterAddonsConfigGkeBackupAgentConfigArgs and GetClusterAddonsConfigGkeBackupAgentConfigOutput values.
// You can construct a concrete instance of `GetClusterAddonsConfigGkeBackupAgentConfigInput` via:
//
//	GetClusterAddonsConfigGkeBackupAgentConfigArgs{...}
type GetClusterAddonsConfigGkeBackupAgentConfigInput interface {
	pulumi.Input

	ToGetClusterAddonsConfigGkeBackupAgentConfigOutput() GetClusterAddonsConfigGkeBackupAgentConfigOutput
	ToGetClusterAddonsConfigGkeBackupAgentConfigOutputWithContext(context.Context) GetClusterAddonsConfigGkeBackupAgentConfigOutput
}

type GetClusterAddonsConfigGkeBackupAgentConfigArgs struct {
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (GetClusterAddonsConfigGkeBackupAgentConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterAddonsConfigGkeBackupAgentConfig)(nil)).Elem()
}

func (i GetClusterAddonsConfigGkeBackupAgentConfigArgs) ToGetClusterAddonsConfigGkeBackupAgentConfigOutput() GetClusterAddonsConfigGkeBackupAgentConfigOutput {
	return i.ToGetClusterAddonsConfigGkeBackupAgentConfigOutputWithContext(context.Background())
}

func (i GetClusterAddonsConfigGkeBackupAgentConfigArgs) ToGetClusterAddonsConfigGkeBackupAgentConfigOutputWithContext(ctx context.Context) GetClusterAddonsConfigGkeBackupAgentConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterAddonsConfigGkeBackupAgentConfigOutput)
}

// GetClusterAddonsConfigGkeBackupAgentConfigArrayInput is an input type that accepts GetClusterAddonsConfigGkeBackupAgentConfigArray and GetClusterAddonsConfigGkeBackupAgentConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterAddonsConfigGkeBackupAgentConfigArrayInput` via:
//
//	GetClusterAddonsConfigGkeBackupAgentConfigArray{ GetClusterAddonsConfigGkeBackupAgentConfigArgs{...} }
type GetClusterAddonsConfigGkeBackupAgentConfigArrayInput interface {
	pulumi.Input

	ToGetClusterAddonsConfigGkeBackupAgentConfigArrayOutput() GetClusterAddonsConfigGkeBackupAgentConfigArrayOutput
	ToGetClusterAddonsConfigGkeBackupAgentConfigArrayOutputWithContext(context.Context) GetClusterAddonsConfigGkeBackupAgentConfigArrayOutput
}

type GetClusterAddonsConfigGkeBackupAgentConfigArray []GetClusterAddonsConfigGkeBackupAgentConfigInput

func (GetClusterAddonsConfigGkeBackupAgentConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterAddonsConfigGkeBackupAgentConfig)(nil)).Elem()
}

func (i GetClusterAddonsConfigGkeBackupAgentConfigArray) ToGetClusterAddonsConfigGkeBackupAgentConfigArrayOutput() GetClusterAddonsConfigGkeBackupAgentConfigArrayOutput {
	return i.ToGetClusterAddonsConfigGkeBackupAgentConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterAddonsConfigGkeBackupAgentConfigArray) ToGetClusterAddonsConfigGkeBackupAgentConfigArrayOutputWithContext(ctx context.Context) GetClusterAddonsConfigGkeBackupAgentConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterAddonsConfigGkeBackupAgentConfigArrayOutput)
}

type GetClusterAddonsConfigGkeBackupAgentConfigOutput struct{ *pulumi.OutputState }

func (GetClusterAddonsConfigGkeBackupAgentConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterAddonsConfigGkeBackupAgentConfig)(nil)).Elem()
}

func (o GetClusterAddonsConfigGkeBackupAgentConfigOutput) ToGetClusterAddonsConfigGkeBackupAgentConfigOutput() GetClusterAddonsConfigGkeBackupAgentConfigOutput {
	return o
}

func (o GetClusterAddonsConfigGkeBackupAgentConfigOutput) ToGetClusterAddonsConfigGkeBackupAgentConfigOutputWithContext(ctx context.Context) GetClusterAddonsConfigGkeBackupAgentConfigOutput {
	return o
}

func (o GetClusterAddonsConfigGkeBackupAgentConfigOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterAddonsConfigGkeBackupAgentConfig) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type GetClusterAddonsConfigGkeBackupAgentConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterAddonsConfigGkeBackupAgentConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterAddonsConfigGkeBackupAgentConfig)(nil)).Elem()
}

func (o GetClusterAddonsConfigGkeBackupAgentConfigArrayOutput) ToGetClusterAddonsConfigGkeBackupAgentConfigArrayOutput() GetClusterAddonsConfigGkeBackupAgentConfigArrayOutput {
	return o
}

func (o GetClusterAddonsConfigGkeBackupAgentConfigArrayOutput) ToGetClusterAddonsConfigGkeBackupAgentConfigArrayOutputWithContext(ctx context.Context) GetClusterAddonsConfigGkeBackupAgentConfigArrayOutput {
	return o
}

func (o GetClusterAddonsConfigGkeBackupAgentConfigArrayOutput) Index(i pulumi.IntInput) GetClusterAddonsConfigGkeBackupAgentConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterAddonsConfigGkeBackupAgentConfig {
		return vs[0].([]GetClusterAddonsConfigGkeBackupAgentConfig)[vs[1].(int)]
	}).(GetClusterAddonsConfigGkeBackupAgentConfigOutput)
}

type GetClusterAddonsConfigHorizontalPodAutoscaling struct {
	Disabled bool `pulumi:"disabled"`
}

// GetClusterAddonsConfigHorizontalPodAutoscalingInput is an input type that accepts GetClusterAddonsConfigHorizontalPodAutoscalingArgs and GetClusterAddonsConfigHorizontalPodAutoscalingOutput values.
// You can construct a concrete instance of `GetClusterAddonsConfigHorizontalPodAutoscalingInput` via:
//
//	GetClusterAddonsConfigHorizontalPodAutoscalingArgs{...}
type GetClusterAddonsConfigHorizontalPodAutoscalingInput interface {
	pulumi.Input

	ToGetClusterAddonsConfigHorizontalPodAutoscalingOutput() GetClusterAddonsConfigHorizontalPodAutoscalingOutput
	ToGetClusterAddonsConfigHorizontalPodAutoscalingOutputWithContext(context.Context) GetClusterAddonsConfigHorizontalPodAutoscalingOutput
}

type GetClusterAddonsConfigHorizontalPodAutoscalingArgs struct {
	Disabled pulumi.BoolInput `pulumi:"disabled"`
}

func (GetClusterAddonsConfigHorizontalPodAutoscalingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterAddonsConfigHorizontalPodAutoscaling)(nil)).Elem()
}

func (i GetClusterAddonsConfigHorizontalPodAutoscalingArgs) ToGetClusterAddonsConfigHorizontalPodAutoscalingOutput() GetClusterAddonsConfigHorizontalPodAutoscalingOutput {
	return i.ToGetClusterAddonsConfigHorizontalPodAutoscalingOutputWithContext(context.Background())
}

func (i GetClusterAddonsConfigHorizontalPodAutoscalingArgs) ToGetClusterAddonsConfigHorizontalPodAutoscalingOutputWithContext(ctx context.Context) GetClusterAddonsConfigHorizontalPodAutoscalingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterAddonsConfigHorizontalPodAutoscalingOutput)
}

// GetClusterAddonsConfigHorizontalPodAutoscalingArrayInput is an input type that accepts GetClusterAddonsConfigHorizontalPodAutoscalingArray and GetClusterAddonsConfigHorizontalPodAutoscalingArrayOutput values.
// You can construct a concrete instance of `GetClusterAddonsConfigHorizontalPodAutoscalingArrayInput` via:
//
//	GetClusterAddonsConfigHorizontalPodAutoscalingArray{ GetClusterAddonsConfigHorizontalPodAutoscalingArgs{...} }
type GetClusterAddonsConfigHorizontalPodAutoscalingArrayInput interface {
	pulumi.Input

	ToGetClusterAddonsConfigHorizontalPodAutoscalingArrayOutput() GetClusterAddonsConfigHorizontalPodAutoscalingArrayOutput
	ToGetClusterAddonsConfigHorizontalPodAutoscalingArrayOutputWithContext(context.Context) GetClusterAddonsConfigHorizontalPodAutoscalingArrayOutput
}

type GetClusterAddonsConfigHorizontalPodAutoscalingArray []GetClusterAddonsConfigHorizontalPodAutoscalingInput

func (GetClusterAddonsConfigHorizontalPodAutoscalingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterAddonsConfigHorizontalPodAutoscaling)(nil)).Elem()
}

func (i GetClusterAddonsConfigHorizontalPodAutoscalingArray) ToGetClusterAddonsConfigHorizontalPodAutoscalingArrayOutput() GetClusterAddonsConfigHorizontalPodAutoscalingArrayOutput {
	return i.ToGetClusterAddonsConfigHorizontalPodAutoscalingArrayOutputWithContext(context.Background())
}

func (i GetClusterAddonsConfigHorizontalPodAutoscalingArray) ToGetClusterAddonsConfigHorizontalPodAutoscalingArrayOutputWithContext(ctx context.Context) GetClusterAddonsConfigHorizontalPodAutoscalingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterAddonsConfigHorizontalPodAutoscalingArrayOutput)
}

type GetClusterAddonsConfigHorizontalPodAutoscalingOutput struct{ *pulumi.OutputState }

func (GetClusterAddonsConfigHorizontalPodAutoscalingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterAddonsConfigHorizontalPodAutoscaling)(nil)).Elem()
}

func (o GetClusterAddonsConfigHorizontalPodAutoscalingOutput) ToGetClusterAddonsConfigHorizontalPodAutoscalingOutput() GetClusterAddonsConfigHorizontalPodAutoscalingOutput {
	return o
}

func (o GetClusterAddonsConfigHorizontalPodAutoscalingOutput) ToGetClusterAddonsConfigHorizontalPodAutoscalingOutputWithContext(ctx context.Context) GetClusterAddonsConfigHorizontalPodAutoscalingOutput {
	return o
}

func (o GetClusterAddonsConfigHorizontalPodAutoscalingOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterAddonsConfigHorizontalPodAutoscaling) bool { return v.Disabled }).(pulumi.BoolOutput)
}

type GetClusterAddonsConfigHorizontalPodAutoscalingArrayOutput struct{ *pulumi.OutputState }

func (GetClusterAddonsConfigHorizontalPodAutoscalingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterAddonsConfigHorizontalPodAutoscaling)(nil)).Elem()
}

func (o GetClusterAddonsConfigHorizontalPodAutoscalingArrayOutput) ToGetClusterAddonsConfigHorizontalPodAutoscalingArrayOutput() GetClusterAddonsConfigHorizontalPodAutoscalingArrayOutput {
	return o
}

func (o GetClusterAddonsConfigHorizontalPodAutoscalingArrayOutput) ToGetClusterAddonsConfigHorizontalPodAutoscalingArrayOutputWithContext(ctx context.Context) GetClusterAddonsConfigHorizontalPodAutoscalingArrayOutput {
	return o
}

func (o GetClusterAddonsConfigHorizontalPodAutoscalingArrayOutput) Index(i pulumi.IntInput) GetClusterAddonsConfigHorizontalPodAutoscalingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterAddonsConfigHorizontalPodAutoscaling {
		return vs[0].([]GetClusterAddonsConfigHorizontalPodAutoscaling)[vs[1].(int)]
	}).(GetClusterAddonsConfigHorizontalPodAutoscalingOutput)
}

type GetClusterAddonsConfigHttpLoadBalancing struct {
	Disabled bool `pulumi:"disabled"`
}

// GetClusterAddonsConfigHttpLoadBalancingInput is an input type that accepts GetClusterAddonsConfigHttpLoadBalancingArgs and GetClusterAddonsConfigHttpLoadBalancingOutput values.
// You can construct a concrete instance of `GetClusterAddonsConfigHttpLoadBalancingInput` via:
//
//	GetClusterAddonsConfigHttpLoadBalancingArgs{...}
type GetClusterAddonsConfigHttpLoadBalancingInput interface {
	pulumi.Input

	ToGetClusterAddonsConfigHttpLoadBalancingOutput() GetClusterAddonsConfigHttpLoadBalancingOutput
	ToGetClusterAddonsConfigHttpLoadBalancingOutputWithContext(context.Context) GetClusterAddonsConfigHttpLoadBalancingOutput
}

type GetClusterAddonsConfigHttpLoadBalancingArgs struct {
	Disabled pulumi.BoolInput `pulumi:"disabled"`
}

func (GetClusterAddonsConfigHttpLoadBalancingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterAddonsConfigHttpLoadBalancing)(nil)).Elem()
}

func (i GetClusterAddonsConfigHttpLoadBalancingArgs) ToGetClusterAddonsConfigHttpLoadBalancingOutput() GetClusterAddonsConfigHttpLoadBalancingOutput {
	return i.ToGetClusterAddonsConfigHttpLoadBalancingOutputWithContext(context.Background())
}

func (i GetClusterAddonsConfigHttpLoadBalancingArgs) ToGetClusterAddonsConfigHttpLoadBalancingOutputWithContext(ctx context.Context) GetClusterAddonsConfigHttpLoadBalancingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterAddonsConfigHttpLoadBalancingOutput)
}

// GetClusterAddonsConfigHttpLoadBalancingArrayInput is an input type that accepts GetClusterAddonsConfigHttpLoadBalancingArray and GetClusterAddonsConfigHttpLoadBalancingArrayOutput values.
// You can construct a concrete instance of `GetClusterAddonsConfigHttpLoadBalancingArrayInput` via:
//
//	GetClusterAddonsConfigHttpLoadBalancingArray{ GetClusterAddonsConfigHttpLoadBalancingArgs{...} }
type GetClusterAddonsConfigHttpLoadBalancingArrayInput interface {
	pulumi.Input

	ToGetClusterAddonsConfigHttpLoadBalancingArrayOutput() GetClusterAddonsConfigHttpLoadBalancingArrayOutput
	ToGetClusterAddonsConfigHttpLoadBalancingArrayOutputWithContext(context.Context) GetClusterAddonsConfigHttpLoadBalancingArrayOutput
}

type GetClusterAddonsConfigHttpLoadBalancingArray []GetClusterAddonsConfigHttpLoadBalancingInput

func (GetClusterAddonsConfigHttpLoadBalancingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterAddonsConfigHttpLoadBalancing)(nil)).Elem()
}

func (i GetClusterAddonsConfigHttpLoadBalancingArray) ToGetClusterAddonsConfigHttpLoadBalancingArrayOutput() GetClusterAddonsConfigHttpLoadBalancingArrayOutput {
	return i.ToGetClusterAddonsConfigHttpLoadBalancingArrayOutputWithContext(context.Background())
}

func (i GetClusterAddonsConfigHttpLoadBalancingArray) ToGetClusterAddonsConfigHttpLoadBalancingArrayOutputWithContext(ctx context.Context) GetClusterAddonsConfigHttpLoadBalancingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterAddonsConfigHttpLoadBalancingArrayOutput)
}

type GetClusterAddonsConfigHttpLoadBalancingOutput struct{ *pulumi.OutputState }

func (GetClusterAddonsConfigHttpLoadBalancingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterAddonsConfigHttpLoadBalancing)(nil)).Elem()
}

func (o GetClusterAddonsConfigHttpLoadBalancingOutput) ToGetClusterAddonsConfigHttpLoadBalancingOutput() GetClusterAddonsConfigHttpLoadBalancingOutput {
	return o
}

func (o GetClusterAddonsConfigHttpLoadBalancingOutput) ToGetClusterAddonsConfigHttpLoadBalancingOutputWithContext(ctx context.Context) GetClusterAddonsConfigHttpLoadBalancingOutput {
	return o
}

func (o GetClusterAddonsConfigHttpLoadBalancingOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterAddonsConfigHttpLoadBalancing) bool { return v.Disabled }).(pulumi.BoolOutput)
}

type GetClusterAddonsConfigHttpLoadBalancingArrayOutput struct{ *pulumi.OutputState }

func (GetClusterAddonsConfigHttpLoadBalancingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterAddonsConfigHttpLoadBalancing)(nil)).Elem()
}

func (o GetClusterAddonsConfigHttpLoadBalancingArrayOutput) ToGetClusterAddonsConfigHttpLoadBalancingArrayOutput() GetClusterAddonsConfigHttpLoadBalancingArrayOutput {
	return o
}

func (o GetClusterAddonsConfigHttpLoadBalancingArrayOutput) ToGetClusterAddonsConfigHttpLoadBalancingArrayOutputWithContext(ctx context.Context) GetClusterAddonsConfigHttpLoadBalancingArrayOutput {
	return o
}

func (o GetClusterAddonsConfigHttpLoadBalancingArrayOutput) Index(i pulumi.IntInput) GetClusterAddonsConfigHttpLoadBalancingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterAddonsConfigHttpLoadBalancing {
		return vs[0].([]GetClusterAddonsConfigHttpLoadBalancing)[vs[1].(int)]
	}).(GetClusterAddonsConfigHttpLoadBalancingOutput)
}

type GetClusterAddonsConfigIstioConfig struct {
	// The authentication type between services in Istio. Available options include AUTH_MUTUAL_TLS.
	Auth string `pulumi:"auth"`
	// The status of the Istio addon, which makes it easy to set up Istio for services in a cluster. It is disabled by default. Set disabled = false to enable.
	Disabled bool `pulumi:"disabled"`
}

// GetClusterAddonsConfigIstioConfigInput is an input type that accepts GetClusterAddonsConfigIstioConfigArgs and GetClusterAddonsConfigIstioConfigOutput values.
// You can construct a concrete instance of `GetClusterAddonsConfigIstioConfigInput` via:
//
//	GetClusterAddonsConfigIstioConfigArgs{...}
type GetClusterAddonsConfigIstioConfigInput interface {
	pulumi.Input

	ToGetClusterAddonsConfigIstioConfigOutput() GetClusterAddonsConfigIstioConfigOutput
	ToGetClusterAddonsConfigIstioConfigOutputWithContext(context.Context) GetClusterAddonsConfigIstioConfigOutput
}

type GetClusterAddonsConfigIstioConfigArgs struct {
	// The authentication type between services in Istio. Available options include AUTH_MUTUAL_TLS.
	Auth pulumi.StringInput `pulumi:"auth"`
	// The status of the Istio addon, which makes it easy to set up Istio for services in a cluster. It is disabled by default. Set disabled = false to enable.
	Disabled pulumi.BoolInput `pulumi:"disabled"`
}

func (GetClusterAddonsConfigIstioConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterAddonsConfigIstioConfig)(nil)).Elem()
}

func (i GetClusterAddonsConfigIstioConfigArgs) ToGetClusterAddonsConfigIstioConfigOutput() GetClusterAddonsConfigIstioConfigOutput {
	return i.ToGetClusterAddonsConfigIstioConfigOutputWithContext(context.Background())
}

func (i GetClusterAddonsConfigIstioConfigArgs) ToGetClusterAddonsConfigIstioConfigOutputWithContext(ctx context.Context) GetClusterAddonsConfigIstioConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterAddonsConfigIstioConfigOutput)
}

// GetClusterAddonsConfigIstioConfigArrayInput is an input type that accepts GetClusterAddonsConfigIstioConfigArray and GetClusterAddonsConfigIstioConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterAddonsConfigIstioConfigArrayInput` via:
//
//	GetClusterAddonsConfigIstioConfigArray{ GetClusterAddonsConfigIstioConfigArgs{...} }
type GetClusterAddonsConfigIstioConfigArrayInput interface {
	pulumi.Input

	ToGetClusterAddonsConfigIstioConfigArrayOutput() GetClusterAddonsConfigIstioConfigArrayOutput
	ToGetClusterAddonsConfigIstioConfigArrayOutputWithContext(context.Context) GetClusterAddonsConfigIstioConfigArrayOutput
}

type GetClusterAddonsConfigIstioConfigArray []GetClusterAddonsConfigIstioConfigInput

func (GetClusterAddonsConfigIstioConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterAddonsConfigIstioConfig)(nil)).Elem()
}

func (i GetClusterAddonsConfigIstioConfigArray) ToGetClusterAddonsConfigIstioConfigArrayOutput() GetClusterAddonsConfigIstioConfigArrayOutput {
	return i.ToGetClusterAddonsConfigIstioConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterAddonsConfigIstioConfigArray) ToGetClusterAddonsConfigIstioConfigArrayOutputWithContext(ctx context.Context) GetClusterAddonsConfigIstioConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterAddonsConfigIstioConfigArrayOutput)
}

type GetClusterAddonsConfigIstioConfigOutput struct{ *pulumi.OutputState }

func (GetClusterAddonsConfigIstioConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterAddonsConfigIstioConfig)(nil)).Elem()
}

func (o GetClusterAddonsConfigIstioConfigOutput) ToGetClusterAddonsConfigIstioConfigOutput() GetClusterAddonsConfigIstioConfigOutput {
	return o
}

func (o GetClusterAddonsConfigIstioConfigOutput) ToGetClusterAddonsConfigIstioConfigOutputWithContext(ctx context.Context) GetClusterAddonsConfigIstioConfigOutput {
	return o
}

// The authentication type between services in Istio. Available options include AUTH_MUTUAL_TLS.
func (o GetClusterAddonsConfigIstioConfigOutput) Auth() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterAddonsConfigIstioConfig) string { return v.Auth }).(pulumi.StringOutput)
}

// The status of the Istio addon, which makes it easy to set up Istio for services in a cluster. It is disabled by default. Set disabled = false to enable.
func (o GetClusterAddonsConfigIstioConfigOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterAddonsConfigIstioConfig) bool { return v.Disabled }).(pulumi.BoolOutput)
}

type GetClusterAddonsConfigIstioConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterAddonsConfigIstioConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterAddonsConfigIstioConfig)(nil)).Elem()
}

func (o GetClusterAddonsConfigIstioConfigArrayOutput) ToGetClusterAddonsConfigIstioConfigArrayOutput() GetClusterAddonsConfigIstioConfigArrayOutput {
	return o
}

func (o GetClusterAddonsConfigIstioConfigArrayOutput) ToGetClusterAddonsConfigIstioConfigArrayOutputWithContext(ctx context.Context) GetClusterAddonsConfigIstioConfigArrayOutput {
	return o
}

func (o GetClusterAddonsConfigIstioConfigArrayOutput) Index(i pulumi.IntInput) GetClusterAddonsConfigIstioConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterAddonsConfigIstioConfig {
		return vs[0].([]GetClusterAddonsConfigIstioConfig)[vs[1].(int)]
	}).(GetClusterAddonsConfigIstioConfigOutput)
}

type GetClusterAddonsConfigKalmConfig struct {
	Enabled bool `pulumi:"enabled"`
}

// GetClusterAddonsConfigKalmConfigInput is an input type that accepts GetClusterAddonsConfigKalmConfigArgs and GetClusterAddonsConfigKalmConfigOutput values.
// You can construct a concrete instance of `GetClusterAddonsConfigKalmConfigInput` via:
//
//	GetClusterAddonsConfigKalmConfigArgs{...}
type GetClusterAddonsConfigKalmConfigInput interface {
	pulumi.Input

	ToGetClusterAddonsConfigKalmConfigOutput() GetClusterAddonsConfigKalmConfigOutput
	ToGetClusterAddonsConfigKalmConfigOutputWithContext(context.Context) GetClusterAddonsConfigKalmConfigOutput
}

type GetClusterAddonsConfigKalmConfigArgs struct {
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (GetClusterAddonsConfigKalmConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterAddonsConfigKalmConfig)(nil)).Elem()
}

func (i GetClusterAddonsConfigKalmConfigArgs) ToGetClusterAddonsConfigKalmConfigOutput() GetClusterAddonsConfigKalmConfigOutput {
	return i.ToGetClusterAddonsConfigKalmConfigOutputWithContext(context.Background())
}

func (i GetClusterAddonsConfigKalmConfigArgs) ToGetClusterAddonsConfigKalmConfigOutputWithContext(ctx context.Context) GetClusterAddonsConfigKalmConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterAddonsConfigKalmConfigOutput)
}

// GetClusterAddonsConfigKalmConfigArrayInput is an input type that accepts GetClusterAddonsConfigKalmConfigArray and GetClusterAddonsConfigKalmConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterAddonsConfigKalmConfigArrayInput` via:
//
//	GetClusterAddonsConfigKalmConfigArray{ GetClusterAddonsConfigKalmConfigArgs{...} }
type GetClusterAddonsConfigKalmConfigArrayInput interface {
	pulumi.Input

	ToGetClusterAddonsConfigKalmConfigArrayOutput() GetClusterAddonsConfigKalmConfigArrayOutput
	ToGetClusterAddonsConfigKalmConfigArrayOutputWithContext(context.Context) GetClusterAddonsConfigKalmConfigArrayOutput
}

type GetClusterAddonsConfigKalmConfigArray []GetClusterAddonsConfigKalmConfigInput

func (GetClusterAddonsConfigKalmConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterAddonsConfigKalmConfig)(nil)).Elem()
}

func (i GetClusterAddonsConfigKalmConfigArray) ToGetClusterAddonsConfigKalmConfigArrayOutput() GetClusterAddonsConfigKalmConfigArrayOutput {
	return i.ToGetClusterAddonsConfigKalmConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterAddonsConfigKalmConfigArray) ToGetClusterAddonsConfigKalmConfigArrayOutputWithContext(ctx context.Context) GetClusterAddonsConfigKalmConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterAddonsConfigKalmConfigArrayOutput)
}

type GetClusterAddonsConfigKalmConfigOutput struct{ *pulumi.OutputState }

func (GetClusterAddonsConfigKalmConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterAddonsConfigKalmConfig)(nil)).Elem()
}

func (o GetClusterAddonsConfigKalmConfigOutput) ToGetClusterAddonsConfigKalmConfigOutput() GetClusterAddonsConfigKalmConfigOutput {
	return o
}

func (o GetClusterAddonsConfigKalmConfigOutput) ToGetClusterAddonsConfigKalmConfigOutputWithContext(ctx context.Context) GetClusterAddonsConfigKalmConfigOutput {
	return o
}

func (o GetClusterAddonsConfigKalmConfigOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterAddonsConfigKalmConfig) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type GetClusterAddonsConfigKalmConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterAddonsConfigKalmConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterAddonsConfigKalmConfig)(nil)).Elem()
}

func (o GetClusterAddonsConfigKalmConfigArrayOutput) ToGetClusterAddonsConfigKalmConfigArrayOutput() GetClusterAddonsConfigKalmConfigArrayOutput {
	return o
}

func (o GetClusterAddonsConfigKalmConfigArrayOutput) ToGetClusterAddonsConfigKalmConfigArrayOutputWithContext(ctx context.Context) GetClusterAddonsConfigKalmConfigArrayOutput {
	return o
}

func (o GetClusterAddonsConfigKalmConfigArrayOutput) Index(i pulumi.IntInput) GetClusterAddonsConfigKalmConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterAddonsConfigKalmConfig {
		return vs[0].([]GetClusterAddonsConfigKalmConfig)[vs[1].(int)]
	}).(GetClusterAddonsConfigKalmConfigOutput)
}

type GetClusterAddonsConfigNetworkPolicyConfig struct {
	Disabled bool `pulumi:"disabled"`
}

// GetClusterAddonsConfigNetworkPolicyConfigInput is an input type that accepts GetClusterAddonsConfigNetworkPolicyConfigArgs and GetClusterAddonsConfigNetworkPolicyConfigOutput values.
// You can construct a concrete instance of `GetClusterAddonsConfigNetworkPolicyConfigInput` via:
//
//	GetClusterAddonsConfigNetworkPolicyConfigArgs{...}
type GetClusterAddonsConfigNetworkPolicyConfigInput interface {
	pulumi.Input

	ToGetClusterAddonsConfigNetworkPolicyConfigOutput() GetClusterAddonsConfigNetworkPolicyConfigOutput
	ToGetClusterAddonsConfigNetworkPolicyConfigOutputWithContext(context.Context) GetClusterAddonsConfigNetworkPolicyConfigOutput
}

type GetClusterAddonsConfigNetworkPolicyConfigArgs struct {
	Disabled pulumi.BoolInput `pulumi:"disabled"`
}

func (GetClusterAddonsConfigNetworkPolicyConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterAddonsConfigNetworkPolicyConfig)(nil)).Elem()
}

func (i GetClusterAddonsConfigNetworkPolicyConfigArgs) ToGetClusterAddonsConfigNetworkPolicyConfigOutput() GetClusterAddonsConfigNetworkPolicyConfigOutput {
	return i.ToGetClusterAddonsConfigNetworkPolicyConfigOutputWithContext(context.Background())
}

func (i GetClusterAddonsConfigNetworkPolicyConfigArgs) ToGetClusterAddonsConfigNetworkPolicyConfigOutputWithContext(ctx context.Context) GetClusterAddonsConfigNetworkPolicyConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterAddonsConfigNetworkPolicyConfigOutput)
}

// GetClusterAddonsConfigNetworkPolicyConfigArrayInput is an input type that accepts GetClusterAddonsConfigNetworkPolicyConfigArray and GetClusterAddonsConfigNetworkPolicyConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterAddonsConfigNetworkPolicyConfigArrayInput` via:
//
//	GetClusterAddonsConfigNetworkPolicyConfigArray{ GetClusterAddonsConfigNetworkPolicyConfigArgs{...} }
type GetClusterAddonsConfigNetworkPolicyConfigArrayInput interface {
	pulumi.Input

	ToGetClusterAddonsConfigNetworkPolicyConfigArrayOutput() GetClusterAddonsConfigNetworkPolicyConfigArrayOutput
	ToGetClusterAddonsConfigNetworkPolicyConfigArrayOutputWithContext(context.Context) GetClusterAddonsConfigNetworkPolicyConfigArrayOutput
}

type GetClusterAddonsConfigNetworkPolicyConfigArray []GetClusterAddonsConfigNetworkPolicyConfigInput

func (GetClusterAddonsConfigNetworkPolicyConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterAddonsConfigNetworkPolicyConfig)(nil)).Elem()
}

func (i GetClusterAddonsConfigNetworkPolicyConfigArray) ToGetClusterAddonsConfigNetworkPolicyConfigArrayOutput() GetClusterAddonsConfigNetworkPolicyConfigArrayOutput {
	return i.ToGetClusterAddonsConfigNetworkPolicyConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterAddonsConfigNetworkPolicyConfigArray) ToGetClusterAddonsConfigNetworkPolicyConfigArrayOutputWithContext(ctx context.Context) GetClusterAddonsConfigNetworkPolicyConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterAddonsConfigNetworkPolicyConfigArrayOutput)
}

type GetClusterAddonsConfigNetworkPolicyConfigOutput struct{ *pulumi.OutputState }

func (GetClusterAddonsConfigNetworkPolicyConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterAddonsConfigNetworkPolicyConfig)(nil)).Elem()
}

func (o GetClusterAddonsConfigNetworkPolicyConfigOutput) ToGetClusterAddonsConfigNetworkPolicyConfigOutput() GetClusterAddonsConfigNetworkPolicyConfigOutput {
	return o
}

func (o GetClusterAddonsConfigNetworkPolicyConfigOutput) ToGetClusterAddonsConfigNetworkPolicyConfigOutputWithContext(ctx context.Context) GetClusterAddonsConfigNetworkPolicyConfigOutput {
	return o
}

func (o GetClusterAddonsConfigNetworkPolicyConfigOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterAddonsConfigNetworkPolicyConfig) bool { return v.Disabled }).(pulumi.BoolOutput)
}

type GetClusterAddonsConfigNetworkPolicyConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterAddonsConfigNetworkPolicyConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterAddonsConfigNetworkPolicyConfig)(nil)).Elem()
}

func (o GetClusterAddonsConfigNetworkPolicyConfigArrayOutput) ToGetClusterAddonsConfigNetworkPolicyConfigArrayOutput() GetClusterAddonsConfigNetworkPolicyConfigArrayOutput {
	return o
}

func (o GetClusterAddonsConfigNetworkPolicyConfigArrayOutput) ToGetClusterAddonsConfigNetworkPolicyConfigArrayOutputWithContext(ctx context.Context) GetClusterAddonsConfigNetworkPolicyConfigArrayOutput {
	return o
}

func (o GetClusterAddonsConfigNetworkPolicyConfigArrayOutput) Index(i pulumi.IntInput) GetClusterAddonsConfigNetworkPolicyConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterAddonsConfigNetworkPolicyConfig {
		return vs[0].([]GetClusterAddonsConfigNetworkPolicyConfig)[vs[1].(int)]
	}).(GetClusterAddonsConfigNetworkPolicyConfigOutput)
}

type GetClusterAddonsConfigStatefulHaConfig struct {
	Enabled bool `pulumi:"enabled"`
}

// GetClusterAddonsConfigStatefulHaConfigInput is an input type that accepts GetClusterAddonsConfigStatefulHaConfigArgs and GetClusterAddonsConfigStatefulHaConfigOutput values.
// You can construct a concrete instance of `GetClusterAddonsConfigStatefulHaConfigInput` via:
//
//	GetClusterAddonsConfigStatefulHaConfigArgs{...}
type GetClusterAddonsConfigStatefulHaConfigInput interface {
	pulumi.Input

	ToGetClusterAddonsConfigStatefulHaConfigOutput() GetClusterAddonsConfigStatefulHaConfigOutput
	ToGetClusterAddonsConfigStatefulHaConfigOutputWithContext(context.Context) GetClusterAddonsConfigStatefulHaConfigOutput
}

type GetClusterAddonsConfigStatefulHaConfigArgs struct {
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (GetClusterAddonsConfigStatefulHaConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterAddonsConfigStatefulHaConfig)(nil)).Elem()
}

func (i GetClusterAddonsConfigStatefulHaConfigArgs) ToGetClusterAddonsConfigStatefulHaConfigOutput() GetClusterAddonsConfigStatefulHaConfigOutput {
	return i.ToGetClusterAddonsConfigStatefulHaConfigOutputWithContext(context.Background())
}

func (i GetClusterAddonsConfigStatefulHaConfigArgs) ToGetClusterAddonsConfigStatefulHaConfigOutputWithContext(ctx context.Context) GetClusterAddonsConfigStatefulHaConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterAddonsConfigStatefulHaConfigOutput)
}

// GetClusterAddonsConfigStatefulHaConfigArrayInput is an input type that accepts GetClusterAddonsConfigStatefulHaConfigArray and GetClusterAddonsConfigStatefulHaConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterAddonsConfigStatefulHaConfigArrayInput` via:
//
//	GetClusterAddonsConfigStatefulHaConfigArray{ GetClusterAddonsConfigStatefulHaConfigArgs{...} }
type GetClusterAddonsConfigStatefulHaConfigArrayInput interface {
	pulumi.Input

	ToGetClusterAddonsConfigStatefulHaConfigArrayOutput() GetClusterAddonsConfigStatefulHaConfigArrayOutput
	ToGetClusterAddonsConfigStatefulHaConfigArrayOutputWithContext(context.Context) GetClusterAddonsConfigStatefulHaConfigArrayOutput
}

type GetClusterAddonsConfigStatefulHaConfigArray []GetClusterAddonsConfigStatefulHaConfigInput

func (GetClusterAddonsConfigStatefulHaConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterAddonsConfigStatefulHaConfig)(nil)).Elem()
}

func (i GetClusterAddonsConfigStatefulHaConfigArray) ToGetClusterAddonsConfigStatefulHaConfigArrayOutput() GetClusterAddonsConfigStatefulHaConfigArrayOutput {
	return i.ToGetClusterAddonsConfigStatefulHaConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterAddonsConfigStatefulHaConfigArray) ToGetClusterAddonsConfigStatefulHaConfigArrayOutputWithContext(ctx context.Context) GetClusterAddonsConfigStatefulHaConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterAddonsConfigStatefulHaConfigArrayOutput)
}

type GetClusterAddonsConfigStatefulHaConfigOutput struct{ *pulumi.OutputState }

func (GetClusterAddonsConfigStatefulHaConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterAddonsConfigStatefulHaConfig)(nil)).Elem()
}

func (o GetClusterAddonsConfigStatefulHaConfigOutput) ToGetClusterAddonsConfigStatefulHaConfigOutput() GetClusterAddonsConfigStatefulHaConfigOutput {
	return o
}

func (o GetClusterAddonsConfigStatefulHaConfigOutput) ToGetClusterAddonsConfigStatefulHaConfigOutputWithContext(ctx context.Context) GetClusterAddonsConfigStatefulHaConfigOutput {
	return o
}

func (o GetClusterAddonsConfigStatefulHaConfigOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterAddonsConfigStatefulHaConfig) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type GetClusterAddonsConfigStatefulHaConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterAddonsConfigStatefulHaConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterAddonsConfigStatefulHaConfig)(nil)).Elem()
}

func (o GetClusterAddonsConfigStatefulHaConfigArrayOutput) ToGetClusterAddonsConfigStatefulHaConfigArrayOutput() GetClusterAddonsConfigStatefulHaConfigArrayOutput {
	return o
}

func (o GetClusterAddonsConfigStatefulHaConfigArrayOutput) ToGetClusterAddonsConfigStatefulHaConfigArrayOutputWithContext(ctx context.Context) GetClusterAddonsConfigStatefulHaConfigArrayOutput {
	return o
}

func (o GetClusterAddonsConfigStatefulHaConfigArrayOutput) Index(i pulumi.IntInput) GetClusterAddonsConfigStatefulHaConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterAddonsConfigStatefulHaConfig {
		return vs[0].([]GetClusterAddonsConfigStatefulHaConfig)[vs[1].(int)]
	}).(GetClusterAddonsConfigStatefulHaConfigOutput)
}

type GetClusterAuthenticatorGroupsConfig struct {
	// The name of the RBAC security group for use with Google security groups in Kubernetes RBAC. Group name must be in format gke-security-groups@yourdomain.com.
	SecurityGroup string `pulumi:"securityGroup"`
}

// GetClusterAuthenticatorGroupsConfigInput is an input type that accepts GetClusterAuthenticatorGroupsConfigArgs and GetClusterAuthenticatorGroupsConfigOutput values.
// You can construct a concrete instance of `GetClusterAuthenticatorGroupsConfigInput` via:
//
//	GetClusterAuthenticatorGroupsConfigArgs{...}
type GetClusterAuthenticatorGroupsConfigInput interface {
	pulumi.Input

	ToGetClusterAuthenticatorGroupsConfigOutput() GetClusterAuthenticatorGroupsConfigOutput
	ToGetClusterAuthenticatorGroupsConfigOutputWithContext(context.Context) GetClusterAuthenticatorGroupsConfigOutput
}

type GetClusterAuthenticatorGroupsConfigArgs struct {
	// The name of the RBAC security group for use with Google security groups in Kubernetes RBAC. Group name must be in format gke-security-groups@yourdomain.com.
	SecurityGroup pulumi.StringInput `pulumi:"securityGroup"`
}

func (GetClusterAuthenticatorGroupsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterAuthenticatorGroupsConfig)(nil)).Elem()
}

func (i GetClusterAuthenticatorGroupsConfigArgs) ToGetClusterAuthenticatorGroupsConfigOutput() GetClusterAuthenticatorGroupsConfigOutput {
	return i.ToGetClusterAuthenticatorGroupsConfigOutputWithContext(context.Background())
}

func (i GetClusterAuthenticatorGroupsConfigArgs) ToGetClusterAuthenticatorGroupsConfigOutputWithContext(ctx context.Context) GetClusterAuthenticatorGroupsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterAuthenticatorGroupsConfigOutput)
}

// GetClusterAuthenticatorGroupsConfigArrayInput is an input type that accepts GetClusterAuthenticatorGroupsConfigArray and GetClusterAuthenticatorGroupsConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterAuthenticatorGroupsConfigArrayInput` via:
//
//	GetClusterAuthenticatorGroupsConfigArray{ GetClusterAuthenticatorGroupsConfigArgs{...} }
type GetClusterAuthenticatorGroupsConfigArrayInput interface {
	pulumi.Input

	ToGetClusterAuthenticatorGroupsConfigArrayOutput() GetClusterAuthenticatorGroupsConfigArrayOutput
	ToGetClusterAuthenticatorGroupsConfigArrayOutputWithContext(context.Context) GetClusterAuthenticatorGroupsConfigArrayOutput
}

type GetClusterAuthenticatorGroupsConfigArray []GetClusterAuthenticatorGroupsConfigInput

func (GetClusterAuthenticatorGroupsConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterAuthenticatorGroupsConfig)(nil)).Elem()
}

func (i GetClusterAuthenticatorGroupsConfigArray) ToGetClusterAuthenticatorGroupsConfigArrayOutput() GetClusterAuthenticatorGroupsConfigArrayOutput {
	return i.ToGetClusterAuthenticatorGroupsConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterAuthenticatorGroupsConfigArray) ToGetClusterAuthenticatorGroupsConfigArrayOutputWithContext(ctx context.Context) GetClusterAuthenticatorGroupsConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterAuthenticatorGroupsConfigArrayOutput)
}

type GetClusterAuthenticatorGroupsConfigOutput struct{ *pulumi.OutputState }

func (GetClusterAuthenticatorGroupsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterAuthenticatorGroupsConfig)(nil)).Elem()
}

func (o GetClusterAuthenticatorGroupsConfigOutput) ToGetClusterAuthenticatorGroupsConfigOutput() GetClusterAuthenticatorGroupsConfigOutput {
	return o
}

func (o GetClusterAuthenticatorGroupsConfigOutput) ToGetClusterAuthenticatorGroupsConfigOutputWithContext(ctx context.Context) GetClusterAuthenticatorGroupsConfigOutput {
	return o
}

// The name of the RBAC security group for use with Google security groups in Kubernetes RBAC. Group name must be in format gke-security-groups@yourdomain.com.
func (o GetClusterAuthenticatorGroupsConfigOutput) SecurityGroup() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterAuthenticatorGroupsConfig) string { return v.SecurityGroup }).(pulumi.StringOutput)
}

type GetClusterAuthenticatorGroupsConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterAuthenticatorGroupsConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterAuthenticatorGroupsConfig)(nil)).Elem()
}

func (o GetClusterAuthenticatorGroupsConfigArrayOutput) ToGetClusterAuthenticatorGroupsConfigArrayOutput() GetClusterAuthenticatorGroupsConfigArrayOutput {
	return o
}

func (o GetClusterAuthenticatorGroupsConfigArrayOutput) ToGetClusterAuthenticatorGroupsConfigArrayOutputWithContext(ctx context.Context) GetClusterAuthenticatorGroupsConfigArrayOutput {
	return o
}

func (o GetClusterAuthenticatorGroupsConfigArrayOutput) Index(i pulumi.IntInput) GetClusterAuthenticatorGroupsConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterAuthenticatorGroupsConfig {
		return vs[0].([]GetClusterAuthenticatorGroupsConfig)[vs[1].(int)]
	}).(GetClusterAuthenticatorGroupsConfigOutput)
}

type GetClusterBinaryAuthorization struct {
	// Enable Binary Authorization for this cluster.
	Enabled bool `pulumi:"enabled"`
	// Mode of operation for Binary Authorization policy evaluation.
	EvaluationMode string `pulumi:"evaluationMode"`
}

// GetClusterBinaryAuthorizationInput is an input type that accepts GetClusterBinaryAuthorizationArgs and GetClusterBinaryAuthorizationOutput values.
// You can construct a concrete instance of `GetClusterBinaryAuthorizationInput` via:
//
//	GetClusterBinaryAuthorizationArgs{...}
type GetClusterBinaryAuthorizationInput interface {
	pulumi.Input

	ToGetClusterBinaryAuthorizationOutput() GetClusterBinaryAuthorizationOutput
	ToGetClusterBinaryAuthorizationOutputWithContext(context.Context) GetClusterBinaryAuthorizationOutput
}

type GetClusterBinaryAuthorizationArgs struct {
	// Enable Binary Authorization for this cluster.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Mode of operation for Binary Authorization policy evaluation.
	EvaluationMode pulumi.StringInput `pulumi:"evaluationMode"`
}

func (GetClusterBinaryAuthorizationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterBinaryAuthorization)(nil)).Elem()
}

func (i GetClusterBinaryAuthorizationArgs) ToGetClusterBinaryAuthorizationOutput() GetClusterBinaryAuthorizationOutput {
	return i.ToGetClusterBinaryAuthorizationOutputWithContext(context.Background())
}

func (i GetClusterBinaryAuthorizationArgs) ToGetClusterBinaryAuthorizationOutputWithContext(ctx context.Context) GetClusterBinaryAuthorizationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterBinaryAuthorizationOutput)
}

// GetClusterBinaryAuthorizationArrayInput is an input type that accepts GetClusterBinaryAuthorizationArray and GetClusterBinaryAuthorizationArrayOutput values.
// You can construct a concrete instance of `GetClusterBinaryAuthorizationArrayInput` via:
//
//	GetClusterBinaryAuthorizationArray{ GetClusterBinaryAuthorizationArgs{...} }
type GetClusterBinaryAuthorizationArrayInput interface {
	pulumi.Input

	ToGetClusterBinaryAuthorizationArrayOutput() GetClusterBinaryAuthorizationArrayOutput
	ToGetClusterBinaryAuthorizationArrayOutputWithContext(context.Context) GetClusterBinaryAuthorizationArrayOutput
}

type GetClusterBinaryAuthorizationArray []GetClusterBinaryAuthorizationInput

func (GetClusterBinaryAuthorizationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterBinaryAuthorization)(nil)).Elem()
}

func (i GetClusterBinaryAuthorizationArray) ToGetClusterBinaryAuthorizationArrayOutput() GetClusterBinaryAuthorizationArrayOutput {
	return i.ToGetClusterBinaryAuthorizationArrayOutputWithContext(context.Background())
}

func (i GetClusterBinaryAuthorizationArray) ToGetClusterBinaryAuthorizationArrayOutputWithContext(ctx context.Context) GetClusterBinaryAuthorizationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterBinaryAuthorizationArrayOutput)
}

type GetClusterBinaryAuthorizationOutput struct{ *pulumi.OutputState }

func (GetClusterBinaryAuthorizationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterBinaryAuthorization)(nil)).Elem()
}

func (o GetClusterBinaryAuthorizationOutput) ToGetClusterBinaryAuthorizationOutput() GetClusterBinaryAuthorizationOutput {
	return o
}

func (o GetClusterBinaryAuthorizationOutput) ToGetClusterBinaryAuthorizationOutputWithContext(ctx context.Context) GetClusterBinaryAuthorizationOutput {
	return o
}

// Enable Binary Authorization for this cluster.
func (o GetClusterBinaryAuthorizationOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterBinaryAuthorization) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Mode of operation for Binary Authorization policy evaluation.
func (o GetClusterBinaryAuthorizationOutput) EvaluationMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterBinaryAuthorization) string { return v.EvaluationMode }).(pulumi.StringOutput)
}

type GetClusterBinaryAuthorizationArrayOutput struct{ *pulumi.OutputState }

func (GetClusterBinaryAuthorizationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterBinaryAuthorization)(nil)).Elem()
}

func (o GetClusterBinaryAuthorizationArrayOutput) ToGetClusterBinaryAuthorizationArrayOutput() GetClusterBinaryAuthorizationArrayOutput {
	return o
}

func (o GetClusterBinaryAuthorizationArrayOutput) ToGetClusterBinaryAuthorizationArrayOutputWithContext(ctx context.Context) GetClusterBinaryAuthorizationArrayOutput {
	return o
}

func (o GetClusterBinaryAuthorizationArrayOutput) Index(i pulumi.IntInput) GetClusterBinaryAuthorizationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterBinaryAuthorization {
		return vs[0].([]GetClusterBinaryAuthorization)[vs[1].(int)]
	}).(GetClusterBinaryAuthorizationOutput)
}

type GetClusterClusterAutoscaling struct {
	// Contains defaults for a node pool created by NAP.
	AutoProvisioningDefaults []GetClusterClusterAutoscalingAutoProvisioningDefault `pulumi:"autoProvisioningDefaults"`
	// Configuration options for the Autoscaling profile feature, which lets you choose whether the cluster autoscaler should optimize for resource utilization or resource availability when deciding to remove nodes from a cluster. Can be BALANCED or OPTIMIZE_UTILIZATION. Defaults to BALANCED.
	AutoscalingProfile string `pulumi:"autoscalingProfile"`
	// Whether node auto-provisioning is enabled. Resource limits for cpu and memory must be defined to enable node auto-provisioning.
	Enabled bool `pulumi:"enabled"`
	// Global constraints for machine resources in the cluster. Configuring the cpu and memory types is required if node auto-provisioning is enabled. These limits will apply to node pool autoscaling in addition to node auto-provisioning.
	ResourceLimits []GetClusterClusterAutoscalingResourceLimit `pulumi:"resourceLimits"`
}

// GetClusterClusterAutoscalingInput is an input type that accepts GetClusterClusterAutoscalingArgs and GetClusterClusterAutoscalingOutput values.
// You can construct a concrete instance of `GetClusterClusterAutoscalingInput` via:
//
//	GetClusterClusterAutoscalingArgs{...}
type GetClusterClusterAutoscalingInput interface {
	pulumi.Input

	ToGetClusterClusterAutoscalingOutput() GetClusterClusterAutoscalingOutput
	ToGetClusterClusterAutoscalingOutputWithContext(context.Context) GetClusterClusterAutoscalingOutput
}

type GetClusterClusterAutoscalingArgs struct {
	// Contains defaults for a node pool created by NAP.
	AutoProvisioningDefaults GetClusterClusterAutoscalingAutoProvisioningDefaultArrayInput `pulumi:"autoProvisioningDefaults"`
	// Configuration options for the Autoscaling profile feature, which lets you choose whether the cluster autoscaler should optimize for resource utilization or resource availability when deciding to remove nodes from a cluster. Can be BALANCED or OPTIMIZE_UTILIZATION. Defaults to BALANCED.
	AutoscalingProfile pulumi.StringInput `pulumi:"autoscalingProfile"`
	// Whether node auto-provisioning is enabled. Resource limits for cpu and memory must be defined to enable node auto-provisioning.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Global constraints for machine resources in the cluster. Configuring the cpu and memory types is required if node auto-provisioning is enabled. These limits will apply to node pool autoscaling in addition to node auto-provisioning.
	ResourceLimits GetClusterClusterAutoscalingResourceLimitArrayInput `pulumi:"resourceLimits"`
}

func (GetClusterClusterAutoscalingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterClusterAutoscaling)(nil)).Elem()
}

func (i GetClusterClusterAutoscalingArgs) ToGetClusterClusterAutoscalingOutput() GetClusterClusterAutoscalingOutput {
	return i.ToGetClusterClusterAutoscalingOutputWithContext(context.Background())
}

func (i GetClusterClusterAutoscalingArgs) ToGetClusterClusterAutoscalingOutputWithContext(ctx context.Context) GetClusterClusterAutoscalingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterClusterAutoscalingOutput)
}

// GetClusterClusterAutoscalingArrayInput is an input type that accepts GetClusterClusterAutoscalingArray and GetClusterClusterAutoscalingArrayOutput values.
// You can construct a concrete instance of `GetClusterClusterAutoscalingArrayInput` via:
//
//	GetClusterClusterAutoscalingArray{ GetClusterClusterAutoscalingArgs{...} }
type GetClusterClusterAutoscalingArrayInput interface {
	pulumi.Input

	ToGetClusterClusterAutoscalingArrayOutput() GetClusterClusterAutoscalingArrayOutput
	ToGetClusterClusterAutoscalingArrayOutputWithContext(context.Context) GetClusterClusterAutoscalingArrayOutput
}

type GetClusterClusterAutoscalingArray []GetClusterClusterAutoscalingInput

func (GetClusterClusterAutoscalingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterClusterAutoscaling)(nil)).Elem()
}

func (i GetClusterClusterAutoscalingArray) ToGetClusterClusterAutoscalingArrayOutput() GetClusterClusterAutoscalingArrayOutput {
	return i.ToGetClusterClusterAutoscalingArrayOutputWithContext(context.Background())
}

func (i GetClusterClusterAutoscalingArray) ToGetClusterClusterAutoscalingArrayOutputWithContext(ctx context.Context) GetClusterClusterAutoscalingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterClusterAutoscalingArrayOutput)
}

type GetClusterClusterAutoscalingOutput struct{ *pulumi.OutputState }

func (GetClusterClusterAutoscalingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterClusterAutoscaling)(nil)).Elem()
}

func (o GetClusterClusterAutoscalingOutput) ToGetClusterClusterAutoscalingOutput() GetClusterClusterAutoscalingOutput {
	return o
}

func (o GetClusterClusterAutoscalingOutput) ToGetClusterClusterAutoscalingOutputWithContext(ctx context.Context) GetClusterClusterAutoscalingOutput {
	return o
}

// Contains defaults for a node pool created by NAP.
func (o GetClusterClusterAutoscalingOutput) AutoProvisioningDefaults() GetClusterClusterAutoscalingAutoProvisioningDefaultArrayOutput {
	return o.ApplyT(func(v GetClusterClusterAutoscaling) []GetClusterClusterAutoscalingAutoProvisioningDefault {
		return v.AutoProvisioningDefaults
	}).(GetClusterClusterAutoscalingAutoProvisioningDefaultArrayOutput)
}

// Configuration options for the Autoscaling profile feature, which lets you choose whether the cluster autoscaler should optimize for resource utilization or resource availability when deciding to remove nodes from a cluster. Can be BALANCED or OPTIMIZE_UTILIZATION. Defaults to BALANCED.
func (o GetClusterClusterAutoscalingOutput) AutoscalingProfile() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterClusterAutoscaling) string { return v.AutoscalingProfile }).(pulumi.StringOutput)
}

// Whether node auto-provisioning is enabled. Resource limits for cpu and memory must be defined to enable node auto-provisioning.
func (o GetClusterClusterAutoscalingOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterClusterAutoscaling) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Global constraints for machine resources in the cluster. Configuring the cpu and memory types is required if node auto-provisioning is enabled. These limits will apply to node pool autoscaling in addition to node auto-provisioning.
func (o GetClusterClusterAutoscalingOutput) ResourceLimits() GetClusterClusterAutoscalingResourceLimitArrayOutput {
	return o.ApplyT(func(v GetClusterClusterAutoscaling) []GetClusterClusterAutoscalingResourceLimit {
		return v.ResourceLimits
	}).(GetClusterClusterAutoscalingResourceLimitArrayOutput)
}

type GetClusterClusterAutoscalingArrayOutput struct{ *pulumi.OutputState }

func (GetClusterClusterAutoscalingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterClusterAutoscaling)(nil)).Elem()
}

func (o GetClusterClusterAutoscalingArrayOutput) ToGetClusterClusterAutoscalingArrayOutput() GetClusterClusterAutoscalingArrayOutput {
	return o
}

func (o GetClusterClusterAutoscalingArrayOutput) ToGetClusterClusterAutoscalingArrayOutputWithContext(ctx context.Context) GetClusterClusterAutoscalingArrayOutput {
	return o
}

func (o GetClusterClusterAutoscalingArrayOutput) Index(i pulumi.IntInput) GetClusterClusterAutoscalingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterClusterAutoscaling {
		return vs[0].([]GetClusterClusterAutoscaling)[vs[1].(int)]
	}).(GetClusterClusterAutoscalingOutput)
}

type GetClusterClusterAutoscalingAutoProvisioningDefault struct {
	// The Customer Managed Encryption Key used to encrypt the boot disk attached to each node in the node pool.
	BootDiskKmsKey string `pulumi:"bootDiskKmsKey"`
	// Size of the disk attached to each node, specified in GB. The smallest allowed disk size is 10GB.
	DiskSize int `pulumi:"diskSize"`
	// Type of the disk attached to each node.
	DiskType string `pulumi:"diskType"`
	// The default image type used by NAP once a new node pool is being created.
	ImageType string `pulumi:"imageType"`
	// NodeManagement configuration for this NodePool.
	Managements []GetClusterClusterAutoscalingAutoProvisioningDefaultManagement `pulumi:"managements"`
	// Minimum CPU platform to be used by this instance. The instance may be scheduled on the specified or newer CPU platform. Applicable values are the friendly names of CPU platforms, such as Intel Haswell.
	MinCpuPlatform string `pulumi:"minCpuPlatform"`
	// Scopes that are used by NAP when creating node pools.
	OauthScopes []string `pulumi:"oauthScopes"`
	// The Google Cloud Platform Service Account to be used by the node VMs.
	ServiceAccount string `pulumi:"serviceAccount"`
	// Shielded Instance options.
	ShieldedInstanceConfigs []GetClusterClusterAutoscalingAutoProvisioningDefaultShieldedInstanceConfig `pulumi:"shieldedInstanceConfigs"`
	// Specifies the upgrade settings for NAP created node pools
	UpgradeSettings []GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSetting `pulumi:"upgradeSettings"`
}

// GetClusterClusterAutoscalingAutoProvisioningDefaultInput is an input type that accepts GetClusterClusterAutoscalingAutoProvisioningDefaultArgs and GetClusterClusterAutoscalingAutoProvisioningDefaultOutput values.
// You can construct a concrete instance of `GetClusterClusterAutoscalingAutoProvisioningDefaultInput` via:
//
//	GetClusterClusterAutoscalingAutoProvisioningDefaultArgs{...}
type GetClusterClusterAutoscalingAutoProvisioningDefaultInput interface {
	pulumi.Input

	ToGetClusterClusterAutoscalingAutoProvisioningDefaultOutput() GetClusterClusterAutoscalingAutoProvisioningDefaultOutput
	ToGetClusterClusterAutoscalingAutoProvisioningDefaultOutputWithContext(context.Context) GetClusterClusterAutoscalingAutoProvisioningDefaultOutput
}

type GetClusterClusterAutoscalingAutoProvisioningDefaultArgs struct {
	// The Customer Managed Encryption Key used to encrypt the boot disk attached to each node in the node pool.
	BootDiskKmsKey pulumi.StringInput `pulumi:"bootDiskKmsKey"`
	// Size of the disk attached to each node, specified in GB. The smallest allowed disk size is 10GB.
	DiskSize pulumi.IntInput `pulumi:"diskSize"`
	// Type of the disk attached to each node.
	DiskType pulumi.StringInput `pulumi:"diskType"`
	// The default image type used by NAP once a new node pool is being created.
	ImageType pulumi.StringInput `pulumi:"imageType"`
	// NodeManagement configuration for this NodePool.
	Managements GetClusterClusterAutoscalingAutoProvisioningDefaultManagementArrayInput `pulumi:"managements"`
	// Minimum CPU platform to be used by this instance. The instance may be scheduled on the specified or newer CPU platform. Applicable values are the friendly names of CPU platforms, such as Intel Haswell.
	MinCpuPlatform pulumi.StringInput `pulumi:"minCpuPlatform"`
	// Scopes that are used by NAP when creating node pools.
	OauthScopes pulumi.StringArrayInput `pulumi:"oauthScopes"`
	// The Google Cloud Platform Service Account to be used by the node VMs.
	ServiceAccount pulumi.StringInput `pulumi:"serviceAccount"`
	// Shielded Instance options.
	ShieldedInstanceConfigs GetClusterClusterAutoscalingAutoProvisioningDefaultShieldedInstanceConfigArrayInput `pulumi:"shieldedInstanceConfigs"`
	// Specifies the upgrade settings for NAP created node pools
	UpgradeSettings GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingArrayInput `pulumi:"upgradeSettings"`
}

func (GetClusterClusterAutoscalingAutoProvisioningDefaultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterClusterAutoscalingAutoProvisioningDefault)(nil)).Elem()
}

func (i GetClusterClusterAutoscalingAutoProvisioningDefaultArgs) ToGetClusterClusterAutoscalingAutoProvisioningDefaultOutput() GetClusterClusterAutoscalingAutoProvisioningDefaultOutput {
	return i.ToGetClusterClusterAutoscalingAutoProvisioningDefaultOutputWithContext(context.Background())
}

func (i GetClusterClusterAutoscalingAutoProvisioningDefaultArgs) ToGetClusterClusterAutoscalingAutoProvisioningDefaultOutputWithContext(ctx context.Context) GetClusterClusterAutoscalingAutoProvisioningDefaultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterClusterAutoscalingAutoProvisioningDefaultOutput)
}

// GetClusterClusterAutoscalingAutoProvisioningDefaultArrayInput is an input type that accepts GetClusterClusterAutoscalingAutoProvisioningDefaultArray and GetClusterClusterAutoscalingAutoProvisioningDefaultArrayOutput values.
// You can construct a concrete instance of `GetClusterClusterAutoscalingAutoProvisioningDefaultArrayInput` via:
//
//	GetClusterClusterAutoscalingAutoProvisioningDefaultArray{ GetClusterClusterAutoscalingAutoProvisioningDefaultArgs{...} }
type GetClusterClusterAutoscalingAutoProvisioningDefaultArrayInput interface {
	pulumi.Input

	ToGetClusterClusterAutoscalingAutoProvisioningDefaultArrayOutput() GetClusterClusterAutoscalingAutoProvisioningDefaultArrayOutput
	ToGetClusterClusterAutoscalingAutoProvisioningDefaultArrayOutputWithContext(context.Context) GetClusterClusterAutoscalingAutoProvisioningDefaultArrayOutput
}

type GetClusterClusterAutoscalingAutoProvisioningDefaultArray []GetClusterClusterAutoscalingAutoProvisioningDefaultInput

func (GetClusterClusterAutoscalingAutoProvisioningDefaultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterClusterAutoscalingAutoProvisioningDefault)(nil)).Elem()
}

func (i GetClusterClusterAutoscalingAutoProvisioningDefaultArray) ToGetClusterClusterAutoscalingAutoProvisioningDefaultArrayOutput() GetClusterClusterAutoscalingAutoProvisioningDefaultArrayOutput {
	return i.ToGetClusterClusterAutoscalingAutoProvisioningDefaultArrayOutputWithContext(context.Background())
}

func (i GetClusterClusterAutoscalingAutoProvisioningDefaultArray) ToGetClusterClusterAutoscalingAutoProvisioningDefaultArrayOutputWithContext(ctx context.Context) GetClusterClusterAutoscalingAutoProvisioningDefaultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterClusterAutoscalingAutoProvisioningDefaultArrayOutput)
}

type GetClusterClusterAutoscalingAutoProvisioningDefaultOutput struct{ *pulumi.OutputState }

func (GetClusterClusterAutoscalingAutoProvisioningDefaultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterClusterAutoscalingAutoProvisioningDefault)(nil)).Elem()
}

func (o GetClusterClusterAutoscalingAutoProvisioningDefaultOutput) ToGetClusterClusterAutoscalingAutoProvisioningDefaultOutput() GetClusterClusterAutoscalingAutoProvisioningDefaultOutput {
	return o
}

func (o GetClusterClusterAutoscalingAutoProvisioningDefaultOutput) ToGetClusterClusterAutoscalingAutoProvisioningDefaultOutputWithContext(ctx context.Context) GetClusterClusterAutoscalingAutoProvisioningDefaultOutput {
	return o
}

// The Customer Managed Encryption Key used to encrypt the boot disk attached to each node in the node pool.
func (o GetClusterClusterAutoscalingAutoProvisioningDefaultOutput) BootDiskKmsKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterClusterAutoscalingAutoProvisioningDefault) string { return v.BootDiskKmsKey }).(pulumi.StringOutput)
}

// Size of the disk attached to each node, specified in GB. The smallest allowed disk size is 10GB.
func (o GetClusterClusterAutoscalingAutoProvisioningDefaultOutput) DiskSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterClusterAutoscalingAutoProvisioningDefault) int { return v.DiskSize }).(pulumi.IntOutput)
}

// Type of the disk attached to each node.
func (o GetClusterClusterAutoscalingAutoProvisioningDefaultOutput) DiskType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterClusterAutoscalingAutoProvisioningDefault) string { return v.DiskType }).(pulumi.StringOutput)
}

// The default image type used by NAP once a new node pool is being created.
func (o GetClusterClusterAutoscalingAutoProvisioningDefaultOutput) ImageType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterClusterAutoscalingAutoProvisioningDefault) string { return v.ImageType }).(pulumi.StringOutput)
}

// NodeManagement configuration for this NodePool.
func (o GetClusterClusterAutoscalingAutoProvisioningDefaultOutput) Managements() GetClusterClusterAutoscalingAutoProvisioningDefaultManagementArrayOutput {
	return o.ApplyT(func(v GetClusterClusterAutoscalingAutoProvisioningDefault) []GetClusterClusterAutoscalingAutoProvisioningDefaultManagement {
		return v.Managements
	}).(GetClusterClusterAutoscalingAutoProvisioningDefaultManagementArrayOutput)
}

// Minimum CPU platform to be used by this instance. The instance may be scheduled on the specified or newer CPU platform. Applicable values are the friendly names of CPU platforms, such as Intel Haswell.
func (o GetClusterClusterAutoscalingAutoProvisioningDefaultOutput) MinCpuPlatform() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterClusterAutoscalingAutoProvisioningDefault) string { return v.MinCpuPlatform }).(pulumi.StringOutput)
}

// Scopes that are used by NAP when creating node pools.
func (o GetClusterClusterAutoscalingAutoProvisioningDefaultOutput) OauthScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClusterClusterAutoscalingAutoProvisioningDefault) []string { return v.OauthScopes }).(pulumi.StringArrayOutput)
}

// The Google Cloud Platform Service Account to be used by the node VMs.
func (o GetClusterClusterAutoscalingAutoProvisioningDefaultOutput) ServiceAccount() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterClusterAutoscalingAutoProvisioningDefault) string { return v.ServiceAccount }).(pulumi.StringOutput)
}

// Shielded Instance options.
func (o GetClusterClusterAutoscalingAutoProvisioningDefaultOutput) ShieldedInstanceConfigs() GetClusterClusterAutoscalingAutoProvisioningDefaultShieldedInstanceConfigArrayOutput {
	return o.ApplyT(func(v GetClusterClusterAutoscalingAutoProvisioningDefault) []GetClusterClusterAutoscalingAutoProvisioningDefaultShieldedInstanceConfig {
		return v.ShieldedInstanceConfigs
	}).(GetClusterClusterAutoscalingAutoProvisioningDefaultShieldedInstanceConfigArrayOutput)
}

// Specifies the upgrade settings for NAP created node pools
func (o GetClusterClusterAutoscalingAutoProvisioningDefaultOutput) UpgradeSettings() GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingArrayOutput {
	return o.ApplyT(func(v GetClusterClusterAutoscalingAutoProvisioningDefault) []GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSetting {
		return v.UpgradeSettings
	}).(GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingArrayOutput)
}

type GetClusterClusterAutoscalingAutoProvisioningDefaultArrayOutput struct{ *pulumi.OutputState }

func (GetClusterClusterAutoscalingAutoProvisioningDefaultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterClusterAutoscalingAutoProvisioningDefault)(nil)).Elem()
}

func (o GetClusterClusterAutoscalingAutoProvisioningDefaultArrayOutput) ToGetClusterClusterAutoscalingAutoProvisioningDefaultArrayOutput() GetClusterClusterAutoscalingAutoProvisioningDefaultArrayOutput {
	return o
}

func (o GetClusterClusterAutoscalingAutoProvisioningDefaultArrayOutput) ToGetClusterClusterAutoscalingAutoProvisioningDefaultArrayOutputWithContext(ctx context.Context) GetClusterClusterAutoscalingAutoProvisioningDefaultArrayOutput {
	return o
}

func (o GetClusterClusterAutoscalingAutoProvisioningDefaultArrayOutput) Index(i pulumi.IntInput) GetClusterClusterAutoscalingAutoProvisioningDefaultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterClusterAutoscalingAutoProvisioningDefault {
		return vs[0].([]GetClusterClusterAutoscalingAutoProvisioningDefault)[vs[1].(int)]
	}).(GetClusterClusterAutoscalingAutoProvisioningDefaultOutput)
}

type GetClusterClusterAutoscalingAutoProvisioningDefaultManagement struct {
	// Specifies whether the node auto-repair is enabled for the node pool. If enabled, the nodes in this node pool will be monitored and, if they fail health checks too many times, an automatic repair action will be triggered.
	AutoRepair bool `pulumi:"autoRepair"`
	// Specifies whether node auto-upgrade is enabled for the node pool. If enabled, node auto-upgrade helps keep the nodes in your node pool up to date with the latest release version of Kubernetes.
	AutoUpgrade bool `pulumi:"autoUpgrade"`
	// Specifies the Auto Upgrade knobs for the node pool.
	UpgradeOptions []GetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOption `pulumi:"upgradeOptions"`
}

// GetClusterClusterAutoscalingAutoProvisioningDefaultManagementInput is an input type that accepts GetClusterClusterAutoscalingAutoProvisioningDefaultManagementArgs and GetClusterClusterAutoscalingAutoProvisioningDefaultManagementOutput values.
// You can construct a concrete instance of `GetClusterClusterAutoscalingAutoProvisioningDefaultManagementInput` via:
//
//	GetClusterClusterAutoscalingAutoProvisioningDefaultManagementArgs{...}
type GetClusterClusterAutoscalingAutoProvisioningDefaultManagementInput interface {
	pulumi.Input

	ToGetClusterClusterAutoscalingAutoProvisioningDefaultManagementOutput() GetClusterClusterAutoscalingAutoProvisioningDefaultManagementOutput
	ToGetClusterClusterAutoscalingAutoProvisioningDefaultManagementOutputWithContext(context.Context) GetClusterClusterAutoscalingAutoProvisioningDefaultManagementOutput
}

type GetClusterClusterAutoscalingAutoProvisioningDefaultManagementArgs struct {
	// Specifies whether the node auto-repair is enabled for the node pool. If enabled, the nodes in this node pool will be monitored and, if they fail health checks too many times, an automatic repair action will be triggered.
	AutoRepair pulumi.BoolInput `pulumi:"autoRepair"`
	// Specifies whether node auto-upgrade is enabled for the node pool. If enabled, node auto-upgrade helps keep the nodes in your node pool up to date with the latest release version of Kubernetes.
	AutoUpgrade pulumi.BoolInput `pulumi:"autoUpgrade"`
	// Specifies the Auto Upgrade knobs for the node pool.
	UpgradeOptions GetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOptionArrayInput `pulumi:"upgradeOptions"`
}

func (GetClusterClusterAutoscalingAutoProvisioningDefaultManagementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterClusterAutoscalingAutoProvisioningDefaultManagement)(nil)).Elem()
}

func (i GetClusterClusterAutoscalingAutoProvisioningDefaultManagementArgs) ToGetClusterClusterAutoscalingAutoProvisioningDefaultManagementOutput() GetClusterClusterAutoscalingAutoProvisioningDefaultManagementOutput {
	return i.ToGetClusterClusterAutoscalingAutoProvisioningDefaultManagementOutputWithContext(context.Background())
}

func (i GetClusterClusterAutoscalingAutoProvisioningDefaultManagementArgs) ToGetClusterClusterAutoscalingAutoProvisioningDefaultManagementOutputWithContext(ctx context.Context) GetClusterClusterAutoscalingAutoProvisioningDefaultManagementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterClusterAutoscalingAutoProvisioningDefaultManagementOutput)
}

// GetClusterClusterAutoscalingAutoProvisioningDefaultManagementArrayInput is an input type that accepts GetClusterClusterAutoscalingAutoProvisioningDefaultManagementArray and GetClusterClusterAutoscalingAutoProvisioningDefaultManagementArrayOutput values.
// You can construct a concrete instance of `GetClusterClusterAutoscalingAutoProvisioningDefaultManagementArrayInput` via:
//
//	GetClusterClusterAutoscalingAutoProvisioningDefaultManagementArray{ GetClusterClusterAutoscalingAutoProvisioningDefaultManagementArgs{...} }
type GetClusterClusterAutoscalingAutoProvisioningDefaultManagementArrayInput interface {
	pulumi.Input

	ToGetClusterClusterAutoscalingAutoProvisioningDefaultManagementArrayOutput() GetClusterClusterAutoscalingAutoProvisioningDefaultManagementArrayOutput
	ToGetClusterClusterAutoscalingAutoProvisioningDefaultManagementArrayOutputWithContext(context.Context) GetClusterClusterAutoscalingAutoProvisioningDefaultManagementArrayOutput
}

type GetClusterClusterAutoscalingAutoProvisioningDefaultManagementArray []GetClusterClusterAutoscalingAutoProvisioningDefaultManagementInput

func (GetClusterClusterAutoscalingAutoProvisioningDefaultManagementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterClusterAutoscalingAutoProvisioningDefaultManagement)(nil)).Elem()
}

func (i GetClusterClusterAutoscalingAutoProvisioningDefaultManagementArray) ToGetClusterClusterAutoscalingAutoProvisioningDefaultManagementArrayOutput() GetClusterClusterAutoscalingAutoProvisioningDefaultManagementArrayOutput {
	return i.ToGetClusterClusterAutoscalingAutoProvisioningDefaultManagementArrayOutputWithContext(context.Background())
}

func (i GetClusterClusterAutoscalingAutoProvisioningDefaultManagementArray) ToGetClusterClusterAutoscalingAutoProvisioningDefaultManagementArrayOutputWithContext(ctx context.Context) GetClusterClusterAutoscalingAutoProvisioningDefaultManagementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterClusterAutoscalingAutoProvisioningDefaultManagementArrayOutput)
}

type GetClusterClusterAutoscalingAutoProvisioningDefaultManagementOutput struct{ *pulumi.OutputState }

func (GetClusterClusterAutoscalingAutoProvisioningDefaultManagementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterClusterAutoscalingAutoProvisioningDefaultManagement)(nil)).Elem()
}

func (o GetClusterClusterAutoscalingAutoProvisioningDefaultManagementOutput) ToGetClusterClusterAutoscalingAutoProvisioningDefaultManagementOutput() GetClusterClusterAutoscalingAutoProvisioningDefaultManagementOutput {
	return o
}

func (o GetClusterClusterAutoscalingAutoProvisioningDefaultManagementOutput) ToGetClusterClusterAutoscalingAutoProvisioningDefaultManagementOutputWithContext(ctx context.Context) GetClusterClusterAutoscalingAutoProvisioningDefaultManagementOutput {
	return o
}

// Specifies whether the node auto-repair is enabled for the node pool. If enabled, the nodes in this node pool will be monitored and, if they fail health checks too many times, an automatic repair action will be triggered.
func (o GetClusterClusterAutoscalingAutoProvisioningDefaultManagementOutput) AutoRepair() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterClusterAutoscalingAutoProvisioningDefaultManagement) bool { return v.AutoRepair }).(pulumi.BoolOutput)
}

// Specifies whether node auto-upgrade is enabled for the node pool. If enabled, node auto-upgrade helps keep the nodes in your node pool up to date with the latest release version of Kubernetes.
func (o GetClusterClusterAutoscalingAutoProvisioningDefaultManagementOutput) AutoUpgrade() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterClusterAutoscalingAutoProvisioningDefaultManagement) bool { return v.AutoUpgrade }).(pulumi.BoolOutput)
}

// Specifies the Auto Upgrade knobs for the node pool.
func (o GetClusterClusterAutoscalingAutoProvisioningDefaultManagementOutput) UpgradeOptions() GetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOptionArrayOutput {
	return o.ApplyT(func(v GetClusterClusterAutoscalingAutoProvisioningDefaultManagement) []GetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOption {
		return v.UpgradeOptions
	}).(GetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOptionArrayOutput)
}

type GetClusterClusterAutoscalingAutoProvisioningDefaultManagementArrayOutput struct{ *pulumi.OutputState }

func (GetClusterClusterAutoscalingAutoProvisioningDefaultManagementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterClusterAutoscalingAutoProvisioningDefaultManagement)(nil)).Elem()
}

func (o GetClusterClusterAutoscalingAutoProvisioningDefaultManagementArrayOutput) ToGetClusterClusterAutoscalingAutoProvisioningDefaultManagementArrayOutput() GetClusterClusterAutoscalingAutoProvisioningDefaultManagementArrayOutput {
	return o
}

func (o GetClusterClusterAutoscalingAutoProvisioningDefaultManagementArrayOutput) ToGetClusterClusterAutoscalingAutoProvisioningDefaultManagementArrayOutputWithContext(ctx context.Context) GetClusterClusterAutoscalingAutoProvisioningDefaultManagementArrayOutput {
	return o
}

func (o GetClusterClusterAutoscalingAutoProvisioningDefaultManagementArrayOutput) Index(i pulumi.IntInput) GetClusterClusterAutoscalingAutoProvisioningDefaultManagementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterClusterAutoscalingAutoProvisioningDefaultManagement {
		return vs[0].([]GetClusterClusterAutoscalingAutoProvisioningDefaultManagement)[vs[1].(int)]
	}).(GetClusterClusterAutoscalingAutoProvisioningDefaultManagementOutput)
}

type GetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOption struct {
	// This field is set when upgrades are about to commence with the approximate start time for the upgrades, in RFC3339 text format.
	AutoUpgradeStartTime string `pulumi:"autoUpgradeStartTime"`
	// This field is set when upgrades are about to commence with the description of the upgrade.
	Description string `pulumi:"description"`
}

// GetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOptionInput is an input type that accepts GetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOptionArgs and GetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOptionOutput values.
// You can construct a concrete instance of `GetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOptionInput` via:
//
//	GetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOptionArgs{...}
type GetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOptionInput interface {
	pulumi.Input

	ToGetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOptionOutput() GetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOptionOutput
	ToGetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOptionOutputWithContext(context.Context) GetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOptionOutput
}

type GetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOptionArgs struct {
	// This field is set when upgrades are about to commence with the approximate start time for the upgrades, in RFC3339 text format.
	AutoUpgradeStartTime pulumi.StringInput `pulumi:"autoUpgradeStartTime"`
	// This field is set when upgrades are about to commence with the description of the upgrade.
	Description pulumi.StringInput `pulumi:"description"`
}

func (GetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOption)(nil)).Elem()
}

func (i GetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOptionArgs) ToGetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOptionOutput() GetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOptionOutput {
	return i.ToGetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOptionOutputWithContext(context.Background())
}

func (i GetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOptionArgs) ToGetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOptionOutputWithContext(ctx context.Context) GetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOptionOutput)
}

// GetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOptionArrayInput is an input type that accepts GetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOptionArray and GetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOptionArrayOutput values.
// You can construct a concrete instance of `GetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOptionArrayInput` via:
//
//	GetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOptionArray{ GetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOptionArgs{...} }
type GetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOptionArrayInput interface {
	pulumi.Input

	ToGetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOptionArrayOutput() GetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOptionArrayOutput
	ToGetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOptionArrayOutputWithContext(context.Context) GetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOptionArrayOutput
}

type GetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOptionArray []GetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOptionInput

func (GetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOption)(nil)).Elem()
}

func (i GetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOptionArray) ToGetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOptionArrayOutput() GetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOptionArrayOutput {
	return i.ToGetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOptionArrayOutputWithContext(context.Background())
}

func (i GetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOptionArray) ToGetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOptionArrayOutputWithContext(ctx context.Context) GetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOptionArrayOutput)
}

type GetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOptionOutput struct{ *pulumi.OutputState }

func (GetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOption)(nil)).Elem()
}

func (o GetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOptionOutput) ToGetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOptionOutput() GetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOptionOutput {
	return o
}

func (o GetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOptionOutput) ToGetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOptionOutputWithContext(ctx context.Context) GetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOptionOutput {
	return o
}

// This field is set when upgrades are about to commence with the approximate start time for the upgrades, in RFC3339 text format.
func (o GetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOptionOutput) AutoUpgradeStartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOption) string {
		return v.AutoUpgradeStartTime
	}).(pulumi.StringOutput)
}

// This field is set when upgrades are about to commence with the description of the upgrade.
func (o GetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOptionOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOption) string {
		return v.Description
	}).(pulumi.StringOutput)
}

type GetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOptionArrayOutput struct{ *pulumi.OutputState }

func (GetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOption)(nil)).Elem()
}

func (o GetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOptionArrayOutput) ToGetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOptionArrayOutput() GetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOptionArrayOutput {
	return o
}

func (o GetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOptionArrayOutput) ToGetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOptionArrayOutputWithContext(ctx context.Context) GetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOptionArrayOutput {
	return o
}

func (o GetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOptionArrayOutput) Index(i pulumi.IntInput) GetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOption {
		return vs[0].([]GetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOption)[vs[1].(int)]
	}).(GetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOptionOutput)
}

type GetClusterClusterAutoscalingAutoProvisioningDefaultShieldedInstanceConfig struct {
	// Defines whether the instance has integrity monitoring enabled.
	EnableIntegrityMonitoring bool `pulumi:"enableIntegrityMonitoring"`
	// Defines whether the instance has Secure Boot enabled.
	EnableSecureBoot bool `pulumi:"enableSecureBoot"`
}

// GetClusterClusterAutoscalingAutoProvisioningDefaultShieldedInstanceConfigInput is an input type that accepts GetClusterClusterAutoscalingAutoProvisioningDefaultShieldedInstanceConfigArgs and GetClusterClusterAutoscalingAutoProvisioningDefaultShieldedInstanceConfigOutput values.
// You can construct a concrete instance of `GetClusterClusterAutoscalingAutoProvisioningDefaultShieldedInstanceConfigInput` via:
//
//	GetClusterClusterAutoscalingAutoProvisioningDefaultShieldedInstanceConfigArgs{...}
type GetClusterClusterAutoscalingAutoProvisioningDefaultShieldedInstanceConfigInput interface {
	pulumi.Input

	ToGetClusterClusterAutoscalingAutoProvisioningDefaultShieldedInstanceConfigOutput() GetClusterClusterAutoscalingAutoProvisioningDefaultShieldedInstanceConfigOutput
	ToGetClusterClusterAutoscalingAutoProvisioningDefaultShieldedInstanceConfigOutputWithContext(context.Context) GetClusterClusterAutoscalingAutoProvisioningDefaultShieldedInstanceConfigOutput
}

type GetClusterClusterAutoscalingAutoProvisioningDefaultShieldedInstanceConfigArgs struct {
	// Defines whether the instance has integrity monitoring enabled.
	EnableIntegrityMonitoring pulumi.BoolInput `pulumi:"enableIntegrityMonitoring"`
	// Defines whether the instance has Secure Boot enabled.
	EnableSecureBoot pulumi.BoolInput `pulumi:"enableSecureBoot"`
}

func (GetClusterClusterAutoscalingAutoProvisioningDefaultShieldedInstanceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterClusterAutoscalingAutoProvisioningDefaultShieldedInstanceConfig)(nil)).Elem()
}

func (i GetClusterClusterAutoscalingAutoProvisioningDefaultShieldedInstanceConfigArgs) ToGetClusterClusterAutoscalingAutoProvisioningDefaultShieldedInstanceConfigOutput() GetClusterClusterAutoscalingAutoProvisioningDefaultShieldedInstanceConfigOutput {
	return i.ToGetClusterClusterAutoscalingAutoProvisioningDefaultShieldedInstanceConfigOutputWithContext(context.Background())
}

func (i GetClusterClusterAutoscalingAutoProvisioningDefaultShieldedInstanceConfigArgs) ToGetClusterClusterAutoscalingAutoProvisioningDefaultShieldedInstanceConfigOutputWithContext(ctx context.Context) GetClusterClusterAutoscalingAutoProvisioningDefaultShieldedInstanceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterClusterAutoscalingAutoProvisioningDefaultShieldedInstanceConfigOutput)
}

// GetClusterClusterAutoscalingAutoProvisioningDefaultShieldedInstanceConfigArrayInput is an input type that accepts GetClusterClusterAutoscalingAutoProvisioningDefaultShieldedInstanceConfigArray and GetClusterClusterAutoscalingAutoProvisioningDefaultShieldedInstanceConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterClusterAutoscalingAutoProvisioningDefaultShieldedInstanceConfigArrayInput` via:
//
//	GetClusterClusterAutoscalingAutoProvisioningDefaultShieldedInstanceConfigArray{ GetClusterClusterAutoscalingAutoProvisioningDefaultShieldedInstanceConfigArgs{...} }
type GetClusterClusterAutoscalingAutoProvisioningDefaultShieldedInstanceConfigArrayInput interface {
	pulumi.Input

	ToGetClusterClusterAutoscalingAutoProvisioningDefaultShieldedInstanceConfigArrayOutput() GetClusterClusterAutoscalingAutoProvisioningDefaultShieldedInstanceConfigArrayOutput
	ToGetClusterClusterAutoscalingAutoProvisioningDefaultShieldedInstanceConfigArrayOutputWithContext(context.Context) GetClusterClusterAutoscalingAutoProvisioningDefaultShieldedInstanceConfigArrayOutput
}

type GetClusterClusterAutoscalingAutoProvisioningDefaultShieldedInstanceConfigArray []GetClusterClusterAutoscalingAutoProvisioningDefaultShieldedInstanceConfigInput

func (GetClusterClusterAutoscalingAutoProvisioningDefaultShieldedInstanceConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterClusterAutoscalingAutoProvisioningDefaultShieldedInstanceConfig)(nil)).Elem()
}

func (i GetClusterClusterAutoscalingAutoProvisioningDefaultShieldedInstanceConfigArray) ToGetClusterClusterAutoscalingAutoProvisioningDefaultShieldedInstanceConfigArrayOutput() GetClusterClusterAutoscalingAutoProvisioningDefaultShieldedInstanceConfigArrayOutput {
	return i.ToGetClusterClusterAutoscalingAutoProvisioningDefaultShieldedInstanceConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterClusterAutoscalingAutoProvisioningDefaultShieldedInstanceConfigArray) ToGetClusterClusterAutoscalingAutoProvisioningDefaultShieldedInstanceConfigArrayOutputWithContext(ctx context.Context) GetClusterClusterAutoscalingAutoProvisioningDefaultShieldedInstanceConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterClusterAutoscalingAutoProvisioningDefaultShieldedInstanceConfigArrayOutput)
}

type GetClusterClusterAutoscalingAutoProvisioningDefaultShieldedInstanceConfigOutput struct{ *pulumi.OutputState }

func (GetClusterClusterAutoscalingAutoProvisioningDefaultShieldedInstanceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterClusterAutoscalingAutoProvisioningDefaultShieldedInstanceConfig)(nil)).Elem()
}

func (o GetClusterClusterAutoscalingAutoProvisioningDefaultShieldedInstanceConfigOutput) ToGetClusterClusterAutoscalingAutoProvisioningDefaultShieldedInstanceConfigOutput() GetClusterClusterAutoscalingAutoProvisioningDefaultShieldedInstanceConfigOutput {
	return o
}

func (o GetClusterClusterAutoscalingAutoProvisioningDefaultShieldedInstanceConfigOutput) ToGetClusterClusterAutoscalingAutoProvisioningDefaultShieldedInstanceConfigOutputWithContext(ctx context.Context) GetClusterClusterAutoscalingAutoProvisioningDefaultShieldedInstanceConfigOutput {
	return o
}

// Defines whether the instance has integrity monitoring enabled.
func (o GetClusterClusterAutoscalingAutoProvisioningDefaultShieldedInstanceConfigOutput) EnableIntegrityMonitoring() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterClusterAutoscalingAutoProvisioningDefaultShieldedInstanceConfig) bool {
		return v.EnableIntegrityMonitoring
	}).(pulumi.BoolOutput)
}

// Defines whether the instance has Secure Boot enabled.
func (o GetClusterClusterAutoscalingAutoProvisioningDefaultShieldedInstanceConfigOutput) EnableSecureBoot() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterClusterAutoscalingAutoProvisioningDefaultShieldedInstanceConfig) bool {
		return v.EnableSecureBoot
	}).(pulumi.BoolOutput)
}

type GetClusterClusterAutoscalingAutoProvisioningDefaultShieldedInstanceConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterClusterAutoscalingAutoProvisioningDefaultShieldedInstanceConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterClusterAutoscalingAutoProvisioningDefaultShieldedInstanceConfig)(nil)).Elem()
}

func (o GetClusterClusterAutoscalingAutoProvisioningDefaultShieldedInstanceConfigArrayOutput) ToGetClusterClusterAutoscalingAutoProvisioningDefaultShieldedInstanceConfigArrayOutput() GetClusterClusterAutoscalingAutoProvisioningDefaultShieldedInstanceConfigArrayOutput {
	return o
}

func (o GetClusterClusterAutoscalingAutoProvisioningDefaultShieldedInstanceConfigArrayOutput) ToGetClusterClusterAutoscalingAutoProvisioningDefaultShieldedInstanceConfigArrayOutputWithContext(ctx context.Context) GetClusterClusterAutoscalingAutoProvisioningDefaultShieldedInstanceConfigArrayOutput {
	return o
}

func (o GetClusterClusterAutoscalingAutoProvisioningDefaultShieldedInstanceConfigArrayOutput) Index(i pulumi.IntInput) GetClusterClusterAutoscalingAutoProvisioningDefaultShieldedInstanceConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterClusterAutoscalingAutoProvisioningDefaultShieldedInstanceConfig {
		return vs[0].([]GetClusterClusterAutoscalingAutoProvisioningDefaultShieldedInstanceConfig)[vs[1].(int)]
	}).(GetClusterClusterAutoscalingAutoProvisioningDefaultShieldedInstanceConfigOutput)
}

type GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSetting struct {
	// Settings for blue-green upgrade strategy.
	BlueGreenSettings []GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSetting `pulumi:"blueGreenSettings"`
	// The maximum number of nodes that can be created beyond the current size of the node pool during the upgrade process.
	MaxSurge int `pulumi:"maxSurge"`
	// The maximum number of nodes that can be simultaneously unavailable during the upgrade process.
	MaxUnavailable int `pulumi:"maxUnavailable"`
	// Update strategy of the node pool.
	Strategy string `pulumi:"strategy"`
}

// GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingInput is an input type that accepts GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingArgs and GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingOutput values.
// You can construct a concrete instance of `GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingInput` via:
//
//	GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingArgs{...}
type GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingInput interface {
	pulumi.Input

	ToGetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingOutput() GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingOutput
	ToGetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingOutputWithContext(context.Context) GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingOutput
}

type GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingArgs struct {
	// Settings for blue-green upgrade strategy.
	BlueGreenSettings GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingArrayInput `pulumi:"blueGreenSettings"`
	// The maximum number of nodes that can be created beyond the current size of the node pool during the upgrade process.
	MaxSurge pulumi.IntInput `pulumi:"maxSurge"`
	// The maximum number of nodes that can be simultaneously unavailable during the upgrade process.
	MaxUnavailable pulumi.IntInput `pulumi:"maxUnavailable"`
	// Update strategy of the node pool.
	Strategy pulumi.StringInput `pulumi:"strategy"`
}

func (GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSetting)(nil)).Elem()
}

func (i GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingArgs) ToGetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingOutput() GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingOutput {
	return i.ToGetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingOutputWithContext(context.Background())
}

func (i GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingArgs) ToGetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingOutputWithContext(ctx context.Context) GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingOutput)
}

// GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingArrayInput is an input type that accepts GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingArray and GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingArrayOutput values.
// You can construct a concrete instance of `GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingArrayInput` via:
//
//	GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingArray{ GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingArgs{...} }
type GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingArrayInput interface {
	pulumi.Input

	ToGetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingArrayOutput() GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingArrayOutput
	ToGetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingArrayOutputWithContext(context.Context) GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingArrayOutput
}

type GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingArray []GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingInput

func (GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSetting)(nil)).Elem()
}

func (i GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingArray) ToGetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingArrayOutput() GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingArrayOutput {
	return i.ToGetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingArrayOutputWithContext(context.Background())
}

func (i GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingArray) ToGetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingArrayOutputWithContext(ctx context.Context) GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingArrayOutput)
}

type GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingOutput struct{ *pulumi.OutputState }

func (GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSetting)(nil)).Elem()
}

func (o GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingOutput) ToGetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingOutput() GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingOutput {
	return o
}

func (o GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingOutput) ToGetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingOutputWithContext(ctx context.Context) GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingOutput {
	return o
}

// Settings for blue-green upgrade strategy.
func (o GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingOutput) BlueGreenSettings() GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingArrayOutput {
	return o.ApplyT(func(v GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSetting) []GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSetting {
		return v.BlueGreenSettings
	}).(GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingArrayOutput)
}

// The maximum number of nodes that can be created beyond the current size of the node pool during the upgrade process.
func (o GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingOutput) MaxSurge() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSetting) int { return v.MaxSurge }).(pulumi.IntOutput)
}

// The maximum number of nodes that can be simultaneously unavailable during the upgrade process.
func (o GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingOutput) MaxUnavailable() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSetting) int { return v.MaxUnavailable }).(pulumi.IntOutput)
}

// Update strategy of the node pool.
func (o GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingOutput) Strategy() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSetting) string { return v.Strategy }).(pulumi.StringOutput)
}

type GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingArrayOutput struct{ *pulumi.OutputState }

func (GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSetting)(nil)).Elem()
}

func (o GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingArrayOutput) ToGetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingArrayOutput() GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingArrayOutput {
	return o
}

func (o GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingArrayOutput) ToGetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingArrayOutputWithContext(ctx context.Context) GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingArrayOutput {
	return o
}

func (o GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingArrayOutput) Index(i pulumi.IntInput) GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSetting {
		return vs[0].([]GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSetting)[vs[1].(int)]
	}).(GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingOutput)
}

type GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSetting struct {
	// Time needed after draining entire blue pool. After this period, blue pool will be cleaned up.
	//
	//                                                                 A duration in seconds with up to nine fractional digits, ending with 's'. Example: "3.5s".
	NodePoolSoakDuration string `pulumi:"nodePoolSoakDuration"`
	// Standard policy for the blue-green upgrade.
	StandardRolloutPolicies []GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingStandardRolloutPolicy `pulumi:"standardRolloutPolicies"`
}

// GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingInput is an input type that accepts GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingArgs and GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingOutput values.
// You can construct a concrete instance of `GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingInput` via:
//
//	GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingArgs{...}
type GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingInput interface {
	pulumi.Input

	ToGetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingOutput() GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingOutput
	ToGetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingOutputWithContext(context.Context) GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingOutput
}

type GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingArgs struct {
	// Time needed after draining entire blue pool. After this period, blue pool will be cleaned up.
	//
	//                                                                 A duration in seconds with up to nine fractional digits, ending with 's'. Example: "3.5s".
	NodePoolSoakDuration pulumi.StringInput `pulumi:"nodePoolSoakDuration"`
	// Standard policy for the blue-green upgrade.
	StandardRolloutPolicies GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingStandardRolloutPolicyArrayInput `pulumi:"standardRolloutPolicies"`
}

func (GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSetting)(nil)).Elem()
}

func (i GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingArgs) ToGetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingOutput() GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingOutput {
	return i.ToGetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingOutputWithContext(context.Background())
}

func (i GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingArgs) ToGetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingOutputWithContext(ctx context.Context) GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingOutput)
}

// GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingArrayInput is an input type that accepts GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingArray and GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingArrayOutput values.
// You can construct a concrete instance of `GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingArrayInput` via:
//
//	GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingArray{ GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingArgs{...} }
type GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingArrayInput interface {
	pulumi.Input

	ToGetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingArrayOutput() GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingArrayOutput
	ToGetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingArrayOutputWithContext(context.Context) GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingArrayOutput
}

type GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingArray []GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingInput

func (GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSetting)(nil)).Elem()
}

func (i GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingArray) ToGetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingArrayOutput() GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingArrayOutput {
	return i.ToGetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingArrayOutputWithContext(context.Background())
}

func (i GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingArray) ToGetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingArrayOutputWithContext(ctx context.Context) GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingArrayOutput)
}

type GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingOutput struct{ *pulumi.OutputState }

func (GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSetting)(nil)).Elem()
}

func (o GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingOutput) ToGetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingOutput() GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingOutput {
	return o
}

func (o GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingOutput) ToGetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingOutputWithContext(ctx context.Context) GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingOutput {
	return o
}

// Time needed after draining entire blue pool. After this period, blue pool will be cleaned up.
//
//	A duration in seconds with up to nine fractional digits, ending with 's'. Example: "3.5s".
func (o GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingOutput) NodePoolSoakDuration() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSetting) string {
		return v.NodePoolSoakDuration
	}).(pulumi.StringOutput)
}

// Standard policy for the blue-green upgrade.
func (o GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingOutput) StandardRolloutPolicies() GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingStandardRolloutPolicyArrayOutput {
	return o.ApplyT(func(v GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSetting) []GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingStandardRolloutPolicy {
		return v.StandardRolloutPolicies
	}).(GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingStandardRolloutPolicyArrayOutput)
}

type GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingArrayOutput struct{ *pulumi.OutputState }

func (GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSetting)(nil)).Elem()
}

func (o GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingArrayOutput) ToGetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingArrayOutput() GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingArrayOutput {
	return o
}

func (o GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingArrayOutput) ToGetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingArrayOutputWithContext(ctx context.Context) GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingArrayOutput {
	return o
}

func (o GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingArrayOutput) Index(i pulumi.IntInput) GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSetting {
		return vs[0].([]GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSetting)[vs[1].(int)]
	}).(GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingOutput)
}

type GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingStandardRolloutPolicy struct {
	// Number of blue nodes to drain in a batch.
	BatchNodeCount int `pulumi:"batchNodeCount"`
	// Percentage of the bool pool nodes to drain in a batch. The range of this field should be (0.0, 1.0].
	BatchPercentage float64 `pulumi:"batchPercentage"`
	// Soak time after each batch gets drained.
	//
	//                                                                             A duration in seconds with up to nine fractional digits, ending with 's'. Example: "3.5s".
	BatchSoakDuration string `pulumi:"batchSoakDuration"`
}

// GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingStandardRolloutPolicyInput is an input type that accepts GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingStandardRolloutPolicyArgs and GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingStandardRolloutPolicyOutput values.
// You can construct a concrete instance of `GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingStandardRolloutPolicyInput` via:
//
//	GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingStandardRolloutPolicyArgs{...}
type GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingStandardRolloutPolicyInput interface {
	pulumi.Input

	ToGetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingStandardRolloutPolicyOutput() GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingStandardRolloutPolicyOutput
	ToGetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingStandardRolloutPolicyOutputWithContext(context.Context) GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingStandardRolloutPolicyOutput
}

type GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingStandardRolloutPolicyArgs struct {
	// Number of blue nodes to drain in a batch.
	BatchNodeCount pulumi.IntInput `pulumi:"batchNodeCount"`
	// Percentage of the bool pool nodes to drain in a batch. The range of this field should be (0.0, 1.0].
	BatchPercentage pulumi.Float64Input `pulumi:"batchPercentage"`
	// Soak time after each batch gets drained.
	//
	//                                                                             A duration in seconds with up to nine fractional digits, ending with 's'. Example: "3.5s".
	BatchSoakDuration pulumi.StringInput `pulumi:"batchSoakDuration"`
}

func (GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingStandardRolloutPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingStandardRolloutPolicy)(nil)).Elem()
}

func (i GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingStandardRolloutPolicyArgs) ToGetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingStandardRolloutPolicyOutput() GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingStandardRolloutPolicyOutput {
	return i.ToGetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingStandardRolloutPolicyOutputWithContext(context.Background())
}

func (i GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingStandardRolloutPolicyArgs) ToGetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingStandardRolloutPolicyOutputWithContext(ctx context.Context) GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingStandardRolloutPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingStandardRolloutPolicyOutput)
}

// GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingStandardRolloutPolicyArrayInput is an input type that accepts GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingStandardRolloutPolicyArray and GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingStandardRolloutPolicyArrayOutput values.
// You can construct a concrete instance of `GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingStandardRolloutPolicyArrayInput` via:
//
//	GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingStandardRolloutPolicyArray{ GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingStandardRolloutPolicyArgs{...} }
type GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingStandardRolloutPolicyArrayInput interface {
	pulumi.Input

	ToGetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingStandardRolloutPolicyArrayOutput() GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingStandardRolloutPolicyArrayOutput
	ToGetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingStandardRolloutPolicyArrayOutputWithContext(context.Context) GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingStandardRolloutPolicyArrayOutput
}

type GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingStandardRolloutPolicyArray []GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingStandardRolloutPolicyInput

func (GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingStandardRolloutPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingStandardRolloutPolicy)(nil)).Elem()
}

func (i GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingStandardRolloutPolicyArray) ToGetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingStandardRolloutPolicyArrayOutput() GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingStandardRolloutPolicyArrayOutput {
	return i.ToGetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingStandardRolloutPolicyArrayOutputWithContext(context.Background())
}

func (i GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingStandardRolloutPolicyArray) ToGetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingStandardRolloutPolicyArrayOutputWithContext(ctx context.Context) GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingStandardRolloutPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingStandardRolloutPolicyArrayOutput)
}

type GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingStandardRolloutPolicyOutput struct{ *pulumi.OutputState }

func (GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingStandardRolloutPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingStandardRolloutPolicy)(nil)).Elem()
}

func (o GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingStandardRolloutPolicyOutput) ToGetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingStandardRolloutPolicyOutput() GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingStandardRolloutPolicyOutput {
	return o
}

func (o GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingStandardRolloutPolicyOutput) ToGetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingStandardRolloutPolicyOutputWithContext(ctx context.Context) GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingStandardRolloutPolicyOutput {
	return o
}

// Number of blue nodes to drain in a batch.
func (o GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingStandardRolloutPolicyOutput) BatchNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingStandardRolloutPolicy) int {
		return v.BatchNodeCount
	}).(pulumi.IntOutput)
}

// Percentage of the bool pool nodes to drain in a batch. The range of this field should be (0.0, 1.0].
func (o GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingStandardRolloutPolicyOutput) BatchPercentage() pulumi.Float64Output {
	return o.ApplyT(func(v GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingStandardRolloutPolicy) float64 {
		return v.BatchPercentage
	}).(pulumi.Float64Output)
}

// Soak time after each batch gets drained.
//
//	A duration in seconds with up to nine fractional digits, ending with 's'. Example: "3.5s".
func (o GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingStandardRolloutPolicyOutput) BatchSoakDuration() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingStandardRolloutPolicy) string {
		return v.BatchSoakDuration
	}).(pulumi.StringOutput)
}

type GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingStandardRolloutPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingStandardRolloutPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingStandardRolloutPolicy)(nil)).Elem()
}

func (o GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingStandardRolloutPolicyArrayOutput) ToGetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingStandardRolloutPolicyArrayOutput() GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingStandardRolloutPolicyArrayOutput {
	return o
}

func (o GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingStandardRolloutPolicyArrayOutput) ToGetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingStandardRolloutPolicyArrayOutputWithContext(ctx context.Context) GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingStandardRolloutPolicyArrayOutput {
	return o
}

func (o GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingStandardRolloutPolicyArrayOutput) Index(i pulumi.IntInput) GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingStandardRolloutPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingStandardRolloutPolicy {
		return vs[0].([]GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingStandardRolloutPolicy)[vs[1].(int)]
	}).(GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingStandardRolloutPolicyOutput)
}

type GetClusterClusterAutoscalingResourceLimit struct {
	// Maximum amount of the resource in the cluster.
	Maximum int `pulumi:"maximum"`
	// Minimum amount of the resource in the cluster.
	Minimum int `pulumi:"minimum"`
	// The type of the resource. For example, cpu and memory. See the guide to using Node Auto-Provisioning for a list of types.
	ResourceType string `pulumi:"resourceType"`
}

// GetClusterClusterAutoscalingResourceLimitInput is an input type that accepts GetClusterClusterAutoscalingResourceLimitArgs and GetClusterClusterAutoscalingResourceLimitOutput values.
// You can construct a concrete instance of `GetClusterClusterAutoscalingResourceLimitInput` via:
//
//	GetClusterClusterAutoscalingResourceLimitArgs{...}
type GetClusterClusterAutoscalingResourceLimitInput interface {
	pulumi.Input

	ToGetClusterClusterAutoscalingResourceLimitOutput() GetClusterClusterAutoscalingResourceLimitOutput
	ToGetClusterClusterAutoscalingResourceLimitOutputWithContext(context.Context) GetClusterClusterAutoscalingResourceLimitOutput
}

type GetClusterClusterAutoscalingResourceLimitArgs struct {
	// Maximum amount of the resource in the cluster.
	Maximum pulumi.IntInput `pulumi:"maximum"`
	// Minimum amount of the resource in the cluster.
	Minimum pulumi.IntInput `pulumi:"minimum"`
	// The type of the resource. For example, cpu and memory. See the guide to using Node Auto-Provisioning for a list of types.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
}

func (GetClusterClusterAutoscalingResourceLimitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterClusterAutoscalingResourceLimit)(nil)).Elem()
}

func (i GetClusterClusterAutoscalingResourceLimitArgs) ToGetClusterClusterAutoscalingResourceLimitOutput() GetClusterClusterAutoscalingResourceLimitOutput {
	return i.ToGetClusterClusterAutoscalingResourceLimitOutputWithContext(context.Background())
}

func (i GetClusterClusterAutoscalingResourceLimitArgs) ToGetClusterClusterAutoscalingResourceLimitOutputWithContext(ctx context.Context) GetClusterClusterAutoscalingResourceLimitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterClusterAutoscalingResourceLimitOutput)
}

// GetClusterClusterAutoscalingResourceLimitArrayInput is an input type that accepts GetClusterClusterAutoscalingResourceLimitArray and GetClusterClusterAutoscalingResourceLimitArrayOutput values.
// You can construct a concrete instance of `GetClusterClusterAutoscalingResourceLimitArrayInput` via:
//
//	GetClusterClusterAutoscalingResourceLimitArray{ GetClusterClusterAutoscalingResourceLimitArgs{...} }
type GetClusterClusterAutoscalingResourceLimitArrayInput interface {
	pulumi.Input

	ToGetClusterClusterAutoscalingResourceLimitArrayOutput() GetClusterClusterAutoscalingResourceLimitArrayOutput
	ToGetClusterClusterAutoscalingResourceLimitArrayOutputWithContext(context.Context) GetClusterClusterAutoscalingResourceLimitArrayOutput
}

type GetClusterClusterAutoscalingResourceLimitArray []GetClusterClusterAutoscalingResourceLimitInput

func (GetClusterClusterAutoscalingResourceLimitArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterClusterAutoscalingResourceLimit)(nil)).Elem()
}

func (i GetClusterClusterAutoscalingResourceLimitArray) ToGetClusterClusterAutoscalingResourceLimitArrayOutput() GetClusterClusterAutoscalingResourceLimitArrayOutput {
	return i.ToGetClusterClusterAutoscalingResourceLimitArrayOutputWithContext(context.Background())
}

func (i GetClusterClusterAutoscalingResourceLimitArray) ToGetClusterClusterAutoscalingResourceLimitArrayOutputWithContext(ctx context.Context) GetClusterClusterAutoscalingResourceLimitArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterClusterAutoscalingResourceLimitArrayOutput)
}

type GetClusterClusterAutoscalingResourceLimitOutput struct{ *pulumi.OutputState }

func (GetClusterClusterAutoscalingResourceLimitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterClusterAutoscalingResourceLimit)(nil)).Elem()
}

func (o GetClusterClusterAutoscalingResourceLimitOutput) ToGetClusterClusterAutoscalingResourceLimitOutput() GetClusterClusterAutoscalingResourceLimitOutput {
	return o
}

func (o GetClusterClusterAutoscalingResourceLimitOutput) ToGetClusterClusterAutoscalingResourceLimitOutputWithContext(ctx context.Context) GetClusterClusterAutoscalingResourceLimitOutput {
	return o
}

// Maximum amount of the resource in the cluster.
func (o GetClusterClusterAutoscalingResourceLimitOutput) Maximum() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterClusterAutoscalingResourceLimit) int { return v.Maximum }).(pulumi.IntOutput)
}

// Minimum amount of the resource in the cluster.
func (o GetClusterClusterAutoscalingResourceLimitOutput) Minimum() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterClusterAutoscalingResourceLimit) int { return v.Minimum }).(pulumi.IntOutput)
}

// The type of the resource. For example, cpu and memory. See the guide to using Node Auto-Provisioning for a list of types.
func (o GetClusterClusterAutoscalingResourceLimitOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterClusterAutoscalingResourceLimit) string { return v.ResourceType }).(pulumi.StringOutput)
}

type GetClusterClusterAutoscalingResourceLimitArrayOutput struct{ *pulumi.OutputState }

func (GetClusterClusterAutoscalingResourceLimitArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterClusterAutoscalingResourceLimit)(nil)).Elem()
}

func (o GetClusterClusterAutoscalingResourceLimitArrayOutput) ToGetClusterClusterAutoscalingResourceLimitArrayOutput() GetClusterClusterAutoscalingResourceLimitArrayOutput {
	return o
}

func (o GetClusterClusterAutoscalingResourceLimitArrayOutput) ToGetClusterClusterAutoscalingResourceLimitArrayOutputWithContext(ctx context.Context) GetClusterClusterAutoscalingResourceLimitArrayOutput {
	return o
}

func (o GetClusterClusterAutoscalingResourceLimitArrayOutput) Index(i pulumi.IntInput) GetClusterClusterAutoscalingResourceLimitOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterClusterAutoscalingResourceLimit {
		return vs[0].([]GetClusterClusterAutoscalingResourceLimit)[vs[1].(int)]
	}).(GetClusterClusterAutoscalingResourceLimitOutput)
}

type GetClusterClusterTelemetry struct {
	// Type of the integration.
	Type string `pulumi:"type"`
}

// GetClusterClusterTelemetryInput is an input type that accepts GetClusterClusterTelemetryArgs and GetClusterClusterTelemetryOutput values.
// You can construct a concrete instance of `GetClusterClusterTelemetryInput` via:
//
//	GetClusterClusterTelemetryArgs{...}
type GetClusterClusterTelemetryInput interface {
	pulumi.Input

	ToGetClusterClusterTelemetryOutput() GetClusterClusterTelemetryOutput
	ToGetClusterClusterTelemetryOutputWithContext(context.Context) GetClusterClusterTelemetryOutput
}

type GetClusterClusterTelemetryArgs struct {
	// Type of the integration.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetClusterClusterTelemetryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterClusterTelemetry)(nil)).Elem()
}

func (i GetClusterClusterTelemetryArgs) ToGetClusterClusterTelemetryOutput() GetClusterClusterTelemetryOutput {
	return i.ToGetClusterClusterTelemetryOutputWithContext(context.Background())
}

func (i GetClusterClusterTelemetryArgs) ToGetClusterClusterTelemetryOutputWithContext(ctx context.Context) GetClusterClusterTelemetryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterClusterTelemetryOutput)
}

// GetClusterClusterTelemetryArrayInput is an input type that accepts GetClusterClusterTelemetryArray and GetClusterClusterTelemetryArrayOutput values.
// You can construct a concrete instance of `GetClusterClusterTelemetryArrayInput` via:
//
//	GetClusterClusterTelemetryArray{ GetClusterClusterTelemetryArgs{...} }
type GetClusterClusterTelemetryArrayInput interface {
	pulumi.Input

	ToGetClusterClusterTelemetryArrayOutput() GetClusterClusterTelemetryArrayOutput
	ToGetClusterClusterTelemetryArrayOutputWithContext(context.Context) GetClusterClusterTelemetryArrayOutput
}

type GetClusterClusterTelemetryArray []GetClusterClusterTelemetryInput

func (GetClusterClusterTelemetryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterClusterTelemetry)(nil)).Elem()
}

func (i GetClusterClusterTelemetryArray) ToGetClusterClusterTelemetryArrayOutput() GetClusterClusterTelemetryArrayOutput {
	return i.ToGetClusterClusterTelemetryArrayOutputWithContext(context.Background())
}

func (i GetClusterClusterTelemetryArray) ToGetClusterClusterTelemetryArrayOutputWithContext(ctx context.Context) GetClusterClusterTelemetryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterClusterTelemetryArrayOutput)
}

type GetClusterClusterTelemetryOutput struct{ *pulumi.OutputState }

func (GetClusterClusterTelemetryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterClusterTelemetry)(nil)).Elem()
}

func (o GetClusterClusterTelemetryOutput) ToGetClusterClusterTelemetryOutput() GetClusterClusterTelemetryOutput {
	return o
}

func (o GetClusterClusterTelemetryOutput) ToGetClusterClusterTelemetryOutputWithContext(ctx context.Context) GetClusterClusterTelemetryOutput {
	return o
}

// Type of the integration.
func (o GetClusterClusterTelemetryOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterClusterTelemetry) string { return v.Type }).(pulumi.StringOutput)
}

type GetClusterClusterTelemetryArrayOutput struct{ *pulumi.OutputState }

func (GetClusterClusterTelemetryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterClusterTelemetry)(nil)).Elem()
}

func (o GetClusterClusterTelemetryArrayOutput) ToGetClusterClusterTelemetryArrayOutput() GetClusterClusterTelemetryArrayOutput {
	return o
}

func (o GetClusterClusterTelemetryArrayOutput) ToGetClusterClusterTelemetryArrayOutputWithContext(ctx context.Context) GetClusterClusterTelemetryArrayOutput {
	return o
}

func (o GetClusterClusterTelemetryArrayOutput) Index(i pulumi.IntInput) GetClusterClusterTelemetryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterClusterTelemetry {
		return vs[0].([]GetClusterClusterTelemetry)[vs[1].(int)]
	}).(GetClusterClusterTelemetryOutput)
}

type GetClusterConfidentialNode struct {
	// Whether Confidential Nodes feature is enabled for all nodes in this cluster.
	Enabled bool `pulumi:"enabled"`
}

// GetClusterConfidentialNodeInput is an input type that accepts GetClusterConfidentialNodeArgs and GetClusterConfidentialNodeOutput values.
// You can construct a concrete instance of `GetClusterConfidentialNodeInput` via:
//
//	GetClusterConfidentialNodeArgs{...}
type GetClusterConfidentialNodeInput interface {
	pulumi.Input

	ToGetClusterConfidentialNodeOutput() GetClusterConfidentialNodeOutput
	ToGetClusterConfidentialNodeOutputWithContext(context.Context) GetClusterConfidentialNodeOutput
}

type GetClusterConfidentialNodeArgs struct {
	// Whether Confidential Nodes feature is enabled for all nodes in this cluster.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (GetClusterConfidentialNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterConfidentialNode)(nil)).Elem()
}

func (i GetClusterConfidentialNodeArgs) ToGetClusterConfidentialNodeOutput() GetClusterConfidentialNodeOutput {
	return i.ToGetClusterConfidentialNodeOutputWithContext(context.Background())
}

func (i GetClusterConfidentialNodeArgs) ToGetClusterConfidentialNodeOutputWithContext(ctx context.Context) GetClusterConfidentialNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterConfidentialNodeOutput)
}

// GetClusterConfidentialNodeArrayInput is an input type that accepts GetClusterConfidentialNodeArray and GetClusterConfidentialNodeArrayOutput values.
// You can construct a concrete instance of `GetClusterConfidentialNodeArrayInput` via:
//
//	GetClusterConfidentialNodeArray{ GetClusterConfidentialNodeArgs{...} }
type GetClusterConfidentialNodeArrayInput interface {
	pulumi.Input

	ToGetClusterConfidentialNodeArrayOutput() GetClusterConfidentialNodeArrayOutput
	ToGetClusterConfidentialNodeArrayOutputWithContext(context.Context) GetClusterConfidentialNodeArrayOutput
}

type GetClusterConfidentialNodeArray []GetClusterConfidentialNodeInput

func (GetClusterConfidentialNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterConfidentialNode)(nil)).Elem()
}

func (i GetClusterConfidentialNodeArray) ToGetClusterConfidentialNodeArrayOutput() GetClusterConfidentialNodeArrayOutput {
	return i.ToGetClusterConfidentialNodeArrayOutputWithContext(context.Background())
}

func (i GetClusterConfidentialNodeArray) ToGetClusterConfidentialNodeArrayOutputWithContext(ctx context.Context) GetClusterConfidentialNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterConfidentialNodeArrayOutput)
}

type GetClusterConfidentialNodeOutput struct{ *pulumi.OutputState }

func (GetClusterConfidentialNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterConfidentialNode)(nil)).Elem()
}

func (o GetClusterConfidentialNodeOutput) ToGetClusterConfidentialNodeOutput() GetClusterConfidentialNodeOutput {
	return o
}

func (o GetClusterConfidentialNodeOutput) ToGetClusterConfidentialNodeOutputWithContext(ctx context.Context) GetClusterConfidentialNodeOutput {
	return o
}

// Whether Confidential Nodes feature is enabled for all nodes in this cluster.
func (o GetClusterConfidentialNodeOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterConfidentialNode) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type GetClusterConfidentialNodeArrayOutput struct{ *pulumi.OutputState }

func (GetClusterConfidentialNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterConfidentialNode)(nil)).Elem()
}

func (o GetClusterConfidentialNodeArrayOutput) ToGetClusterConfidentialNodeArrayOutput() GetClusterConfidentialNodeArrayOutput {
	return o
}

func (o GetClusterConfidentialNodeArrayOutput) ToGetClusterConfidentialNodeArrayOutputWithContext(ctx context.Context) GetClusterConfidentialNodeArrayOutput {
	return o
}

func (o GetClusterConfidentialNodeArrayOutput) Index(i pulumi.IntInput) GetClusterConfidentialNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterConfidentialNode {
		return vs[0].([]GetClusterConfidentialNode)[vs[1].(int)]
	}).(GetClusterConfidentialNodeOutput)
}

type GetClusterCostManagementConfig struct {
	// Whether to enable GKE cost allocation. When you enable GKE cost allocation, the cluster name and namespace of your GKE workloads appear in the labels field of the billing export to BigQuery. Defaults to false.
	Enabled bool `pulumi:"enabled"`
}

// GetClusterCostManagementConfigInput is an input type that accepts GetClusterCostManagementConfigArgs and GetClusterCostManagementConfigOutput values.
// You can construct a concrete instance of `GetClusterCostManagementConfigInput` via:
//
//	GetClusterCostManagementConfigArgs{...}
type GetClusterCostManagementConfigInput interface {
	pulumi.Input

	ToGetClusterCostManagementConfigOutput() GetClusterCostManagementConfigOutput
	ToGetClusterCostManagementConfigOutputWithContext(context.Context) GetClusterCostManagementConfigOutput
}

type GetClusterCostManagementConfigArgs struct {
	// Whether to enable GKE cost allocation. When you enable GKE cost allocation, the cluster name and namespace of your GKE workloads appear in the labels field of the billing export to BigQuery. Defaults to false.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (GetClusterCostManagementConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterCostManagementConfig)(nil)).Elem()
}

func (i GetClusterCostManagementConfigArgs) ToGetClusterCostManagementConfigOutput() GetClusterCostManagementConfigOutput {
	return i.ToGetClusterCostManagementConfigOutputWithContext(context.Background())
}

func (i GetClusterCostManagementConfigArgs) ToGetClusterCostManagementConfigOutputWithContext(ctx context.Context) GetClusterCostManagementConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterCostManagementConfigOutput)
}

// GetClusterCostManagementConfigArrayInput is an input type that accepts GetClusterCostManagementConfigArray and GetClusterCostManagementConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterCostManagementConfigArrayInput` via:
//
//	GetClusterCostManagementConfigArray{ GetClusterCostManagementConfigArgs{...} }
type GetClusterCostManagementConfigArrayInput interface {
	pulumi.Input

	ToGetClusterCostManagementConfigArrayOutput() GetClusterCostManagementConfigArrayOutput
	ToGetClusterCostManagementConfigArrayOutputWithContext(context.Context) GetClusterCostManagementConfigArrayOutput
}

type GetClusterCostManagementConfigArray []GetClusterCostManagementConfigInput

func (GetClusterCostManagementConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterCostManagementConfig)(nil)).Elem()
}

func (i GetClusterCostManagementConfigArray) ToGetClusterCostManagementConfigArrayOutput() GetClusterCostManagementConfigArrayOutput {
	return i.ToGetClusterCostManagementConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterCostManagementConfigArray) ToGetClusterCostManagementConfigArrayOutputWithContext(ctx context.Context) GetClusterCostManagementConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterCostManagementConfigArrayOutput)
}

type GetClusterCostManagementConfigOutput struct{ *pulumi.OutputState }

func (GetClusterCostManagementConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterCostManagementConfig)(nil)).Elem()
}

func (o GetClusterCostManagementConfigOutput) ToGetClusterCostManagementConfigOutput() GetClusterCostManagementConfigOutput {
	return o
}

func (o GetClusterCostManagementConfigOutput) ToGetClusterCostManagementConfigOutputWithContext(ctx context.Context) GetClusterCostManagementConfigOutput {
	return o
}

// Whether to enable GKE cost allocation. When you enable GKE cost allocation, the cluster name and namespace of your GKE workloads appear in the labels field of the billing export to BigQuery. Defaults to false.
func (o GetClusterCostManagementConfigOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterCostManagementConfig) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type GetClusterCostManagementConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterCostManagementConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterCostManagementConfig)(nil)).Elem()
}

func (o GetClusterCostManagementConfigArrayOutput) ToGetClusterCostManagementConfigArrayOutput() GetClusterCostManagementConfigArrayOutput {
	return o
}

func (o GetClusterCostManagementConfigArrayOutput) ToGetClusterCostManagementConfigArrayOutputWithContext(ctx context.Context) GetClusterCostManagementConfigArrayOutput {
	return o
}

func (o GetClusterCostManagementConfigArrayOutput) Index(i pulumi.IntInput) GetClusterCostManagementConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterCostManagementConfig {
		return vs[0].([]GetClusterCostManagementConfig)[vs[1].(int)]
	}).(GetClusterCostManagementConfigOutput)
}

type GetClusterDatabaseEncryption struct {
	// The key to use to encrypt/decrypt secrets.
	KeyName string `pulumi:"keyName"`
	// ENCRYPTED or DECRYPTED.
	State string `pulumi:"state"`
}

// GetClusterDatabaseEncryptionInput is an input type that accepts GetClusterDatabaseEncryptionArgs and GetClusterDatabaseEncryptionOutput values.
// You can construct a concrete instance of `GetClusterDatabaseEncryptionInput` via:
//
//	GetClusterDatabaseEncryptionArgs{...}
type GetClusterDatabaseEncryptionInput interface {
	pulumi.Input

	ToGetClusterDatabaseEncryptionOutput() GetClusterDatabaseEncryptionOutput
	ToGetClusterDatabaseEncryptionOutputWithContext(context.Context) GetClusterDatabaseEncryptionOutput
}

type GetClusterDatabaseEncryptionArgs struct {
	// The key to use to encrypt/decrypt secrets.
	KeyName pulumi.StringInput `pulumi:"keyName"`
	// ENCRYPTED or DECRYPTED.
	State pulumi.StringInput `pulumi:"state"`
}

func (GetClusterDatabaseEncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterDatabaseEncryption)(nil)).Elem()
}

func (i GetClusterDatabaseEncryptionArgs) ToGetClusterDatabaseEncryptionOutput() GetClusterDatabaseEncryptionOutput {
	return i.ToGetClusterDatabaseEncryptionOutputWithContext(context.Background())
}

func (i GetClusterDatabaseEncryptionArgs) ToGetClusterDatabaseEncryptionOutputWithContext(ctx context.Context) GetClusterDatabaseEncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterDatabaseEncryptionOutput)
}

// GetClusterDatabaseEncryptionArrayInput is an input type that accepts GetClusterDatabaseEncryptionArray and GetClusterDatabaseEncryptionArrayOutput values.
// You can construct a concrete instance of `GetClusterDatabaseEncryptionArrayInput` via:
//
//	GetClusterDatabaseEncryptionArray{ GetClusterDatabaseEncryptionArgs{...} }
type GetClusterDatabaseEncryptionArrayInput interface {
	pulumi.Input

	ToGetClusterDatabaseEncryptionArrayOutput() GetClusterDatabaseEncryptionArrayOutput
	ToGetClusterDatabaseEncryptionArrayOutputWithContext(context.Context) GetClusterDatabaseEncryptionArrayOutput
}

type GetClusterDatabaseEncryptionArray []GetClusterDatabaseEncryptionInput

func (GetClusterDatabaseEncryptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterDatabaseEncryption)(nil)).Elem()
}

func (i GetClusterDatabaseEncryptionArray) ToGetClusterDatabaseEncryptionArrayOutput() GetClusterDatabaseEncryptionArrayOutput {
	return i.ToGetClusterDatabaseEncryptionArrayOutputWithContext(context.Background())
}

func (i GetClusterDatabaseEncryptionArray) ToGetClusterDatabaseEncryptionArrayOutputWithContext(ctx context.Context) GetClusterDatabaseEncryptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterDatabaseEncryptionArrayOutput)
}

type GetClusterDatabaseEncryptionOutput struct{ *pulumi.OutputState }

func (GetClusterDatabaseEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterDatabaseEncryption)(nil)).Elem()
}

func (o GetClusterDatabaseEncryptionOutput) ToGetClusterDatabaseEncryptionOutput() GetClusterDatabaseEncryptionOutput {
	return o
}

func (o GetClusterDatabaseEncryptionOutput) ToGetClusterDatabaseEncryptionOutputWithContext(ctx context.Context) GetClusterDatabaseEncryptionOutput {
	return o
}

// The key to use to encrypt/decrypt secrets.
func (o GetClusterDatabaseEncryptionOutput) KeyName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterDatabaseEncryption) string { return v.KeyName }).(pulumi.StringOutput)
}

// ENCRYPTED or DECRYPTED.
func (o GetClusterDatabaseEncryptionOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterDatabaseEncryption) string { return v.State }).(pulumi.StringOutput)
}

type GetClusterDatabaseEncryptionArrayOutput struct{ *pulumi.OutputState }

func (GetClusterDatabaseEncryptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterDatabaseEncryption)(nil)).Elem()
}

func (o GetClusterDatabaseEncryptionArrayOutput) ToGetClusterDatabaseEncryptionArrayOutput() GetClusterDatabaseEncryptionArrayOutput {
	return o
}

func (o GetClusterDatabaseEncryptionArrayOutput) ToGetClusterDatabaseEncryptionArrayOutputWithContext(ctx context.Context) GetClusterDatabaseEncryptionArrayOutput {
	return o
}

func (o GetClusterDatabaseEncryptionArrayOutput) Index(i pulumi.IntInput) GetClusterDatabaseEncryptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterDatabaseEncryption {
		return vs[0].([]GetClusterDatabaseEncryption)[vs[1].(int)]
	}).(GetClusterDatabaseEncryptionOutput)
}

type GetClusterDefaultSnatStatus struct {
	// When disabled is set to false, default IP masquerade rules will be applied to the nodes to prevent sNAT on cluster internal traffic.
	Disabled bool `pulumi:"disabled"`
}

// GetClusterDefaultSnatStatusInput is an input type that accepts GetClusterDefaultSnatStatusArgs and GetClusterDefaultSnatStatusOutput values.
// You can construct a concrete instance of `GetClusterDefaultSnatStatusInput` via:
//
//	GetClusterDefaultSnatStatusArgs{...}
type GetClusterDefaultSnatStatusInput interface {
	pulumi.Input

	ToGetClusterDefaultSnatStatusOutput() GetClusterDefaultSnatStatusOutput
	ToGetClusterDefaultSnatStatusOutputWithContext(context.Context) GetClusterDefaultSnatStatusOutput
}

type GetClusterDefaultSnatStatusArgs struct {
	// When disabled is set to false, default IP masquerade rules will be applied to the nodes to prevent sNAT on cluster internal traffic.
	Disabled pulumi.BoolInput `pulumi:"disabled"`
}

func (GetClusterDefaultSnatStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterDefaultSnatStatus)(nil)).Elem()
}

func (i GetClusterDefaultSnatStatusArgs) ToGetClusterDefaultSnatStatusOutput() GetClusterDefaultSnatStatusOutput {
	return i.ToGetClusterDefaultSnatStatusOutputWithContext(context.Background())
}

func (i GetClusterDefaultSnatStatusArgs) ToGetClusterDefaultSnatStatusOutputWithContext(ctx context.Context) GetClusterDefaultSnatStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterDefaultSnatStatusOutput)
}

// GetClusterDefaultSnatStatusArrayInput is an input type that accepts GetClusterDefaultSnatStatusArray and GetClusterDefaultSnatStatusArrayOutput values.
// You can construct a concrete instance of `GetClusterDefaultSnatStatusArrayInput` via:
//
//	GetClusterDefaultSnatStatusArray{ GetClusterDefaultSnatStatusArgs{...} }
type GetClusterDefaultSnatStatusArrayInput interface {
	pulumi.Input

	ToGetClusterDefaultSnatStatusArrayOutput() GetClusterDefaultSnatStatusArrayOutput
	ToGetClusterDefaultSnatStatusArrayOutputWithContext(context.Context) GetClusterDefaultSnatStatusArrayOutput
}

type GetClusterDefaultSnatStatusArray []GetClusterDefaultSnatStatusInput

func (GetClusterDefaultSnatStatusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterDefaultSnatStatus)(nil)).Elem()
}

func (i GetClusterDefaultSnatStatusArray) ToGetClusterDefaultSnatStatusArrayOutput() GetClusterDefaultSnatStatusArrayOutput {
	return i.ToGetClusterDefaultSnatStatusArrayOutputWithContext(context.Background())
}

func (i GetClusterDefaultSnatStatusArray) ToGetClusterDefaultSnatStatusArrayOutputWithContext(ctx context.Context) GetClusterDefaultSnatStatusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterDefaultSnatStatusArrayOutput)
}

type GetClusterDefaultSnatStatusOutput struct{ *pulumi.OutputState }

func (GetClusterDefaultSnatStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterDefaultSnatStatus)(nil)).Elem()
}

func (o GetClusterDefaultSnatStatusOutput) ToGetClusterDefaultSnatStatusOutput() GetClusterDefaultSnatStatusOutput {
	return o
}

func (o GetClusterDefaultSnatStatusOutput) ToGetClusterDefaultSnatStatusOutputWithContext(ctx context.Context) GetClusterDefaultSnatStatusOutput {
	return o
}

// When disabled is set to false, default IP masquerade rules will be applied to the nodes to prevent sNAT on cluster internal traffic.
func (o GetClusterDefaultSnatStatusOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterDefaultSnatStatus) bool { return v.Disabled }).(pulumi.BoolOutput)
}

type GetClusterDefaultSnatStatusArrayOutput struct{ *pulumi.OutputState }

func (GetClusterDefaultSnatStatusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterDefaultSnatStatus)(nil)).Elem()
}

func (o GetClusterDefaultSnatStatusArrayOutput) ToGetClusterDefaultSnatStatusArrayOutput() GetClusterDefaultSnatStatusArrayOutput {
	return o
}

func (o GetClusterDefaultSnatStatusArrayOutput) ToGetClusterDefaultSnatStatusArrayOutputWithContext(ctx context.Context) GetClusterDefaultSnatStatusArrayOutput {
	return o
}

func (o GetClusterDefaultSnatStatusArrayOutput) Index(i pulumi.IntInput) GetClusterDefaultSnatStatusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterDefaultSnatStatus {
		return vs[0].([]GetClusterDefaultSnatStatus)[vs[1].(int)]
	}).(GetClusterDefaultSnatStatusOutput)
}

type GetClusterDnsConfig struct {
	// Enable additive VPC scope DNS in a GKE cluster.
	AdditiveVpcScopeDnsDomain string `pulumi:"additiveVpcScopeDnsDomain"`
	// Which in-cluster DNS provider should be used.
	ClusterDns string `pulumi:"clusterDns"`
	// The suffix used for all cluster service records.
	ClusterDnsDomain string `pulumi:"clusterDnsDomain"`
	// The scope of access to cluster DNS records.
	ClusterDnsScope string `pulumi:"clusterDnsScope"`
}

// GetClusterDnsConfigInput is an input type that accepts GetClusterDnsConfigArgs and GetClusterDnsConfigOutput values.
// You can construct a concrete instance of `GetClusterDnsConfigInput` via:
//
//	GetClusterDnsConfigArgs{...}
type GetClusterDnsConfigInput interface {
	pulumi.Input

	ToGetClusterDnsConfigOutput() GetClusterDnsConfigOutput
	ToGetClusterDnsConfigOutputWithContext(context.Context) GetClusterDnsConfigOutput
}

type GetClusterDnsConfigArgs struct {
	// Enable additive VPC scope DNS in a GKE cluster.
	AdditiveVpcScopeDnsDomain pulumi.StringInput `pulumi:"additiveVpcScopeDnsDomain"`
	// Which in-cluster DNS provider should be used.
	ClusterDns pulumi.StringInput `pulumi:"clusterDns"`
	// The suffix used for all cluster service records.
	ClusterDnsDomain pulumi.StringInput `pulumi:"clusterDnsDomain"`
	// The scope of access to cluster DNS records.
	ClusterDnsScope pulumi.StringInput `pulumi:"clusterDnsScope"`
}

func (GetClusterDnsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterDnsConfig)(nil)).Elem()
}

func (i GetClusterDnsConfigArgs) ToGetClusterDnsConfigOutput() GetClusterDnsConfigOutput {
	return i.ToGetClusterDnsConfigOutputWithContext(context.Background())
}

func (i GetClusterDnsConfigArgs) ToGetClusterDnsConfigOutputWithContext(ctx context.Context) GetClusterDnsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterDnsConfigOutput)
}

// GetClusterDnsConfigArrayInput is an input type that accepts GetClusterDnsConfigArray and GetClusterDnsConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterDnsConfigArrayInput` via:
//
//	GetClusterDnsConfigArray{ GetClusterDnsConfigArgs{...} }
type GetClusterDnsConfigArrayInput interface {
	pulumi.Input

	ToGetClusterDnsConfigArrayOutput() GetClusterDnsConfigArrayOutput
	ToGetClusterDnsConfigArrayOutputWithContext(context.Context) GetClusterDnsConfigArrayOutput
}

type GetClusterDnsConfigArray []GetClusterDnsConfigInput

func (GetClusterDnsConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterDnsConfig)(nil)).Elem()
}

func (i GetClusterDnsConfigArray) ToGetClusterDnsConfigArrayOutput() GetClusterDnsConfigArrayOutput {
	return i.ToGetClusterDnsConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterDnsConfigArray) ToGetClusterDnsConfigArrayOutputWithContext(ctx context.Context) GetClusterDnsConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterDnsConfigArrayOutput)
}

type GetClusterDnsConfigOutput struct{ *pulumi.OutputState }

func (GetClusterDnsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterDnsConfig)(nil)).Elem()
}

func (o GetClusterDnsConfigOutput) ToGetClusterDnsConfigOutput() GetClusterDnsConfigOutput {
	return o
}

func (o GetClusterDnsConfigOutput) ToGetClusterDnsConfigOutputWithContext(ctx context.Context) GetClusterDnsConfigOutput {
	return o
}

// Enable additive VPC scope DNS in a GKE cluster.
func (o GetClusterDnsConfigOutput) AdditiveVpcScopeDnsDomain() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterDnsConfig) string { return v.AdditiveVpcScopeDnsDomain }).(pulumi.StringOutput)
}

// Which in-cluster DNS provider should be used.
func (o GetClusterDnsConfigOutput) ClusterDns() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterDnsConfig) string { return v.ClusterDns }).(pulumi.StringOutput)
}

// The suffix used for all cluster service records.
func (o GetClusterDnsConfigOutput) ClusterDnsDomain() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterDnsConfig) string { return v.ClusterDnsDomain }).(pulumi.StringOutput)
}

// The scope of access to cluster DNS records.
func (o GetClusterDnsConfigOutput) ClusterDnsScope() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterDnsConfig) string { return v.ClusterDnsScope }).(pulumi.StringOutput)
}

type GetClusterDnsConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterDnsConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterDnsConfig)(nil)).Elem()
}

func (o GetClusterDnsConfigArrayOutput) ToGetClusterDnsConfigArrayOutput() GetClusterDnsConfigArrayOutput {
	return o
}

func (o GetClusterDnsConfigArrayOutput) ToGetClusterDnsConfigArrayOutputWithContext(ctx context.Context) GetClusterDnsConfigArrayOutput {
	return o
}

func (o GetClusterDnsConfigArrayOutput) Index(i pulumi.IntInput) GetClusterDnsConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterDnsConfig {
		return vs[0].([]GetClusterDnsConfig)[vs[1].(int)]
	}).(GetClusterDnsConfigOutput)
}

type GetClusterEnableK8sBetaApi struct {
	// Enabled Kubernetes Beta APIs.
	EnabledApis []string `pulumi:"enabledApis"`
}

// GetClusterEnableK8sBetaApiInput is an input type that accepts GetClusterEnableK8sBetaApiArgs and GetClusterEnableK8sBetaApiOutput values.
// You can construct a concrete instance of `GetClusterEnableK8sBetaApiInput` via:
//
//	GetClusterEnableK8sBetaApiArgs{...}
type GetClusterEnableK8sBetaApiInput interface {
	pulumi.Input

	ToGetClusterEnableK8sBetaApiOutput() GetClusterEnableK8sBetaApiOutput
	ToGetClusterEnableK8sBetaApiOutputWithContext(context.Context) GetClusterEnableK8sBetaApiOutput
}

type GetClusterEnableK8sBetaApiArgs struct {
	// Enabled Kubernetes Beta APIs.
	EnabledApis pulumi.StringArrayInput `pulumi:"enabledApis"`
}

func (GetClusterEnableK8sBetaApiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterEnableK8sBetaApi)(nil)).Elem()
}

func (i GetClusterEnableK8sBetaApiArgs) ToGetClusterEnableK8sBetaApiOutput() GetClusterEnableK8sBetaApiOutput {
	return i.ToGetClusterEnableK8sBetaApiOutputWithContext(context.Background())
}

func (i GetClusterEnableK8sBetaApiArgs) ToGetClusterEnableK8sBetaApiOutputWithContext(ctx context.Context) GetClusterEnableK8sBetaApiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterEnableK8sBetaApiOutput)
}

// GetClusterEnableK8sBetaApiArrayInput is an input type that accepts GetClusterEnableK8sBetaApiArray and GetClusterEnableK8sBetaApiArrayOutput values.
// You can construct a concrete instance of `GetClusterEnableK8sBetaApiArrayInput` via:
//
//	GetClusterEnableK8sBetaApiArray{ GetClusterEnableK8sBetaApiArgs{...} }
type GetClusterEnableK8sBetaApiArrayInput interface {
	pulumi.Input

	ToGetClusterEnableK8sBetaApiArrayOutput() GetClusterEnableK8sBetaApiArrayOutput
	ToGetClusterEnableK8sBetaApiArrayOutputWithContext(context.Context) GetClusterEnableK8sBetaApiArrayOutput
}

type GetClusterEnableK8sBetaApiArray []GetClusterEnableK8sBetaApiInput

func (GetClusterEnableK8sBetaApiArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterEnableK8sBetaApi)(nil)).Elem()
}

func (i GetClusterEnableK8sBetaApiArray) ToGetClusterEnableK8sBetaApiArrayOutput() GetClusterEnableK8sBetaApiArrayOutput {
	return i.ToGetClusterEnableK8sBetaApiArrayOutputWithContext(context.Background())
}

func (i GetClusterEnableK8sBetaApiArray) ToGetClusterEnableK8sBetaApiArrayOutputWithContext(ctx context.Context) GetClusterEnableK8sBetaApiArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterEnableK8sBetaApiArrayOutput)
}

type GetClusterEnableK8sBetaApiOutput struct{ *pulumi.OutputState }

func (GetClusterEnableK8sBetaApiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterEnableK8sBetaApi)(nil)).Elem()
}

func (o GetClusterEnableK8sBetaApiOutput) ToGetClusterEnableK8sBetaApiOutput() GetClusterEnableK8sBetaApiOutput {
	return o
}

func (o GetClusterEnableK8sBetaApiOutput) ToGetClusterEnableK8sBetaApiOutputWithContext(ctx context.Context) GetClusterEnableK8sBetaApiOutput {
	return o
}

// Enabled Kubernetes Beta APIs.
func (o GetClusterEnableK8sBetaApiOutput) EnabledApis() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClusterEnableK8sBetaApi) []string { return v.EnabledApis }).(pulumi.StringArrayOutput)
}

type GetClusterEnableK8sBetaApiArrayOutput struct{ *pulumi.OutputState }

func (GetClusterEnableK8sBetaApiArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterEnableK8sBetaApi)(nil)).Elem()
}

func (o GetClusterEnableK8sBetaApiArrayOutput) ToGetClusterEnableK8sBetaApiArrayOutput() GetClusterEnableK8sBetaApiArrayOutput {
	return o
}

func (o GetClusterEnableK8sBetaApiArrayOutput) ToGetClusterEnableK8sBetaApiArrayOutputWithContext(ctx context.Context) GetClusterEnableK8sBetaApiArrayOutput {
	return o
}

func (o GetClusterEnableK8sBetaApiArrayOutput) Index(i pulumi.IntInput) GetClusterEnableK8sBetaApiOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterEnableK8sBetaApi {
		return vs[0].([]GetClusterEnableK8sBetaApi)[vs[1].(int)]
	}).(GetClusterEnableK8sBetaApiOutput)
}

type GetClusterFleet struct {
	// Full resource name of the registered fleet membership of the cluster.
	Membership string `pulumi:"membership"`
	// Short name of the fleet membership, for example "member-1".
	MembershipId string `pulumi:"membershipId"`
	// Location of the fleet membership, for example "us-central1".
	MembershipLocation string `pulumi:"membershipLocation"`
	// Whether the cluster has been registered via the fleet API.
	PreRegistered bool `pulumi:"preRegistered"`
	// The project in which the resource belongs. If it
	// is not provided, the provider project is used.
	Project string `pulumi:"project"`
}

// GetClusterFleetInput is an input type that accepts GetClusterFleetArgs and GetClusterFleetOutput values.
// You can construct a concrete instance of `GetClusterFleetInput` via:
//
//	GetClusterFleetArgs{...}
type GetClusterFleetInput interface {
	pulumi.Input

	ToGetClusterFleetOutput() GetClusterFleetOutput
	ToGetClusterFleetOutputWithContext(context.Context) GetClusterFleetOutput
}

type GetClusterFleetArgs struct {
	// Full resource name of the registered fleet membership of the cluster.
	Membership pulumi.StringInput `pulumi:"membership"`
	// Short name of the fleet membership, for example "member-1".
	MembershipId pulumi.StringInput `pulumi:"membershipId"`
	// Location of the fleet membership, for example "us-central1".
	MembershipLocation pulumi.StringInput `pulumi:"membershipLocation"`
	// Whether the cluster has been registered via the fleet API.
	PreRegistered pulumi.BoolInput `pulumi:"preRegistered"`
	// The project in which the resource belongs. If it
	// is not provided, the provider project is used.
	Project pulumi.StringInput `pulumi:"project"`
}

func (GetClusterFleetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterFleet)(nil)).Elem()
}

func (i GetClusterFleetArgs) ToGetClusterFleetOutput() GetClusterFleetOutput {
	return i.ToGetClusterFleetOutputWithContext(context.Background())
}

func (i GetClusterFleetArgs) ToGetClusterFleetOutputWithContext(ctx context.Context) GetClusterFleetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterFleetOutput)
}

// GetClusterFleetArrayInput is an input type that accepts GetClusterFleetArray and GetClusterFleetArrayOutput values.
// You can construct a concrete instance of `GetClusterFleetArrayInput` via:
//
//	GetClusterFleetArray{ GetClusterFleetArgs{...} }
type GetClusterFleetArrayInput interface {
	pulumi.Input

	ToGetClusterFleetArrayOutput() GetClusterFleetArrayOutput
	ToGetClusterFleetArrayOutputWithContext(context.Context) GetClusterFleetArrayOutput
}

type GetClusterFleetArray []GetClusterFleetInput

func (GetClusterFleetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterFleet)(nil)).Elem()
}

func (i GetClusterFleetArray) ToGetClusterFleetArrayOutput() GetClusterFleetArrayOutput {
	return i.ToGetClusterFleetArrayOutputWithContext(context.Background())
}

func (i GetClusterFleetArray) ToGetClusterFleetArrayOutputWithContext(ctx context.Context) GetClusterFleetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterFleetArrayOutput)
}

type GetClusterFleetOutput struct{ *pulumi.OutputState }

func (GetClusterFleetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterFleet)(nil)).Elem()
}

func (o GetClusterFleetOutput) ToGetClusterFleetOutput() GetClusterFleetOutput {
	return o
}

func (o GetClusterFleetOutput) ToGetClusterFleetOutputWithContext(ctx context.Context) GetClusterFleetOutput {
	return o
}

// Full resource name of the registered fleet membership of the cluster.
func (o GetClusterFleetOutput) Membership() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterFleet) string { return v.Membership }).(pulumi.StringOutput)
}

// Short name of the fleet membership, for example "member-1".
func (o GetClusterFleetOutput) MembershipId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterFleet) string { return v.MembershipId }).(pulumi.StringOutput)
}

// Location of the fleet membership, for example "us-central1".
func (o GetClusterFleetOutput) MembershipLocation() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterFleet) string { return v.MembershipLocation }).(pulumi.StringOutput)
}

// Whether the cluster has been registered via the fleet API.
func (o GetClusterFleetOutput) PreRegistered() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterFleet) bool { return v.PreRegistered }).(pulumi.BoolOutput)
}

// The project in which the resource belongs. If it
// is not provided, the provider project is used.
func (o GetClusterFleetOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterFleet) string { return v.Project }).(pulumi.StringOutput)
}

type GetClusterFleetArrayOutput struct{ *pulumi.OutputState }

func (GetClusterFleetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterFleet)(nil)).Elem()
}

func (o GetClusterFleetArrayOutput) ToGetClusterFleetArrayOutput() GetClusterFleetArrayOutput {
	return o
}

func (o GetClusterFleetArrayOutput) ToGetClusterFleetArrayOutputWithContext(ctx context.Context) GetClusterFleetArrayOutput {
	return o
}

func (o GetClusterFleetArrayOutput) Index(i pulumi.IntInput) GetClusterFleetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterFleet {
		return vs[0].([]GetClusterFleet)[vs[1].(int)]
	}).(GetClusterFleetOutput)
}

type GetClusterGatewayApiConfig struct {
	// The Gateway API release channel to use for Gateway API.
	Channel string `pulumi:"channel"`
}

// GetClusterGatewayApiConfigInput is an input type that accepts GetClusterGatewayApiConfigArgs and GetClusterGatewayApiConfigOutput values.
// You can construct a concrete instance of `GetClusterGatewayApiConfigInput` via:
//
//	GetClusterGatewayApiConfigArgs{...}
type GetClusterGatewayApiConfigInput interface {
	pulumi.Input

	ToGetClusterGatewayApiConfigOutput() GetClusterGatewayApiConfigOutput
	ToGetClusterGatewayApiConfigOutputWithContext(context.Context) GetClusterGatewayApiConfigOutput
}

type GetClusterGatewayApiConfigArgs struct {
	// The Gateway API release channel to use for Gateway API.
	Channel pulumi.StringInput `pulumi:"channel"`
}

func (GetClusterGatewayApiConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterGatewayApiConfig)(nil)).Elem()
}

func (i GetClusterGatewayApiConfigArgs) ToGetClusterGatewayApiConfigOutput() GetClusterGatewayApiConfigOutput {
	return i.ToGetClusterGatewayApiConfigOutputWithContext(context.Background())
}

func (i GetClusterGatewayApiConfigArgs) ToGetClusterGatewayApiConfigOutputWithContext(ctx context.Context) GetClusterGatewayApiConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterGatewayApiConfigOutput)
}

// GetClusterGatewayApiConfigArrayInput is an input type that accepts GetClusterGatewayApiConfigArray and GetClusterGatewayApiConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterGatewayApiConfigArrayInput` via:
//
//	GetClusterGatewayApiConfigArray{ GetClusterGatewayApiConfigArgs{...} }
type GetClusterGatewayApiConfigArrayInput interface {
	pulumi.Input

	ToGetClusterGatewayApiConfigArrayOutput() GetClusterGatewayApiConfigArrayOutput
	ToGetClusterGatewayApiConfigArrayOutputWithContext(context.Context) GetClusterGatewayApiConfigArrayOutput
}

type GetClusterGatewayApiConfigArray []GetClusterGatewayApiConfigInput

func (GetClusterGatewayApiConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterGatewayApiConfig)(nil)).Elem()
}

func (i GetClusterGatewayApiConfigArray) ToGetClusterGatewayApiConfigArrayOutput() GetClusterGatewayApiConfigArrayOutput {
	return i.ToGetClusterGatewayApiConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterGatewayApiConfigArray) ToGetClusterGatewayApiConfigArrayOutputWithContext(ctx context.Context) GetClusterGatewayApiConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterGatewayApiConfigArrayOutput)
}

type GetClusterGatewayApiConfigOutput struct{ *pulumi.OutputState }

func (GetClusterGatewayApiConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterGatewayApiConfig)(nil)).Elem()
}

func (o GetClusterGatewayApiConfigOutput) ToGetClusterGatewayApiConfigOutput() GetClusterGatewayApiConfigOutput {
	return o
}

func (o GetClusterGatewayApiConfigOutput) ToGetClusterGatewayApiConfigOutputWithContext(ctx context.Context) GetClusterGatewayApiConfigOutput {
	return o
}

// The Gateway API release channel to use for Gateway API.
func (o GetClusterGatewayApiConfigOutput) Channel() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterGatewayApiConfig) string { return v.Channel }).(pulumi.StringOutput)
}

type GetClusterGatewayApiConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterGatewayApiConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterGatewayApiConfig)(nil)).Elem()
}

func (o GetClusterGatewayApiConfigArrayOutput) ToGetClusterGatewayApiConfigArrayOutput() GetClusterGatewayApiConfigArrayOutput {
	return o
}

func (o GetClusterGatewayApiConfigArrayOutput) ToGetClusterGatewayApiConfigArrayOutputWithContext(ctx context.Context) GetClusterGatewayApiConfigArrayOutput {
	return o
}

func (o GetClusterGatewayApiConfigArrayOutput) Index(i pulumi.IntInput) GetClusterGatewayApiConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterGatewayApiConfig {
		return vs[0].([]GetClusterGatewayApiConfig)[vs[1].(int)]
	}).(GetClusterGatewayApiConfigOutput)
}

type GetClusterIdentityServiceConfig struct {
	// Whether to enable the Identity Service component.
	Enabled bool `pulumi:"enabled"`
}

// GetClusterIdentityServiceConfigInput is an input type that accepts GetClusterIdentityServiceConfigArgs and GetClusterIdentityServiceConfigOutput values.
// You can construct a concrete instance of `GetClusterIdentityServiceConfigInput` via:
//
//	GetClusterIdentityServiceConfigArgs{...}
type GetClusterIdentityServiceConfigInput interface {
	pulumi.Input

	ToGetClusterIdentityServiceConfigOutput() GetClusterIdentityServiceConfigOutput
	ToGetClusterIdentityServiceConfigOutputWithContext(context.Context) GetClusterIdentityServiceConfigOutput
}

type GetClusterIdentityServiceConfigArgs struct {
	// Whether to enable the Identity Service component.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (GetClusterIdentityServiceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterIdentityServiceConfig)(nil)).Elem()
}

func (i GetClusterIdentityServiceConfigArgs) ToGetClusterIdentityServiceConfigOutput() GetClusterIdentityServiceConfigOutput {
	return i.ToGetClusterIdentityServiceConfigOutputWithContext(context.Background())
}

func (i GetClusterIdentityServiceConfigArgs) ToGetClusterIdentityServiceConfigOutputWithContext(ctx context.Context) GetClusterIdentityServiceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterIdentityServiceConfigOutput)
}

// GetClusterIdentityServiceConfigArrayInput is an input type that accepts GetClusterIdentityServiceConfigArray and GetClusterIdentityServiceConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterIdentityServiceConfigArrayInput` via:
//
//	GetClusterIdentityServiceConfigArray{ GetClusterIdentityServiceConfigArgs{...} }
type GetClusterIdentityServiceConfigArrayInput interface {
	pulumi.Input

	ToGetClusterIdentityServiceConfigArrayOutput() GetClusterIdentityServiceConfigArrayOutput
	ToGetClusterIdentityServiceConfigArrayOutputWithContext(context.Context) GetClusterIdentityServiceConfigArrayOutput
}

type GetClusterIdentityServiceConfigArray []GetClusterIdentityServiceConfigInput

func (GetClusterIdentityServiceConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterIdentityServiceConfig)(nil)).Elem()
}

func (i GetClusterIdentityServiceConfigArray) ToGetClusterIdentityServiceConfigArrayOutput() GetClusterIdentityServiceConfigArrayOutput {
	return i.ToGetClusterIdentityServiceConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterIdentityServiceConfigArray) ToGetClusterIdentityServiceConfigArrayOutputWithContext(ctx context.Context) GetClusterIdentityServiceConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterIdentityServiceConfigArrayOutput)
}

type GetClusterIdentityServiceConfigOutput struct{ *pulumi.OutputState }

func (GetClusterIdentityServiceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterIdentityServiceConfig)(nil)).Elem()
}

func (o GetClusterIdentityServiceConfigOutput) ToGetClusterIdentityServiceConfigOutput() GetClusterIdentityServiceConfigOutput {
	return o
}

func (o GetClusterIdentityServiceConfigOutput) ToGetClusterIdentityServiceConfigOutputWithContext(ctx context.Context) GetClusterIdentityServiceConfigOutput {
	return o
}

// Whether to enable the Identity Service component.
func (o GetClusterIdentityServiceConfigOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterIdentityServiceConfig) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type GetClusterIdentityServiceConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterIdentityServiceConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterIdentityServiceConfig)(nil)).Elem()
}

func (o GetClusterIdentityServiceConfigArrayOutput) ToGetClusterIdentityServiceConfigArrayOutput() GetClusterIdentityServiceConfigArrayOutput {
	return o
}

func (o GetClusterIdentityServiceConfigArrayOutput) ToGetClusterIdentityServiceConfigArrayOutputWithContext(ctx context.Context) GetClusterIdentityServiceConfigArrayOutput {
	return o
}

func (o GetClusterIdentityServiceConfigArrayOutput) Index(i pulumi.IntInput) GetClusterIdentityServiceConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterIdentityServiceConfig {
		return vs[0].([]GetClusterIdentityServiceConfig)[vs[1].(int)]
	}).(GetClusterIdentityServiceConfigOutput)
}

type GetClusterIpAllocationPolicy struct {
	// AdditionalPodRangesConfig is the configuration for additional pod secondary ranges supporting the ClusterUpdate message.
	AdditionalPodRangesConfigs []GetClusterIpAllocationPolicyAdditionalPodRangesConfig `pulumi:"additionalPodRangesConfigs"`
	// The IP address range for the cluster pod IPs. Set to blank to have a range chosen with the default size. Set to /netmask (e.g. /14) to have a range chosen with a specific netmask. Set to a CIDR notation (e.g. 10.96.0.0/14) from the RFC-1918 private networks (e.g. 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16) to pick a specific range to use.
	ClusterIpv4CidrBlock string `pulumi:"clusterIpv4CidrBlock"`
	// The name of the existing secondary range in the cluster's subnetwork to use for pod IP addresses. Alternatively, clusterIpv4CidrBlock can be used to automatically create a GKE-managed one.
	ClusterSecondaryRangeName string `pulumi:"clusterSecondaryRangeName"`
	// Configuration for cluster level pod cidr overprovision. Default is disabled=false.
	PodCidrOverprovisionConfigs []GetClusterIpAllocationPolicyPodCidrOverprovisionConfig `pulumi:"podCidrOverprovisionConfigs"`
	// The IP address range of the services IPs in this cluster. Set to blank to have a range chosen with the default size. Set to /netmask (e.g. /14) to have a range chosen with a specific netmask. Set to a CIDR notation (e.g. 10.96.0.0/14) from the RFC-1918 private networks (e.g. 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16) to pick a specific range to use.
	ServicesIpv4CidrBlock string `pulumi:"servicesIpv4CidrBlock"`
	// The name of the existing secondary range in the cluster's subnetwork to use for service ClusterIPs. Alternatively, servicesIpv4CidrBlock can be used to automatically create a GKE-managed one.
	ServicesSecondaryRangeName string `pulumi:"servicesSecondaryRangeName"`
	// The IP Stack type of the cluster. Choose between IPV4 and IPV4_IPV6. Default type is IPV4 Only if not set
	StackType string `pulumi:"stackType"`
}

// GetClusterIpAllocationPolicyInput is an input type that accepts GetClusterIpAllocationPolicyArgs and GetClusterIpAllocationPolicyOutput values.
// You can construct a concrete instance of `GetClusterIpAllocationPolicyInput` via:
//
//	GetClusterIpAllocationPolicyArgs{...}
type GetClusterIpAllocationPolicyInput interface {
	pulumi.Input

	ToGetClusterIpAllocationPolicyOutput() GetClusterIpAllocationPolicyOutput
	ToGetClusterIpAllocationPolicyOutputWithContext(context.Context) GetClusterIpAllocationPolicyOutput
}

type GetClusterIpAllocationPolicyArgs struct {
	// AdditionalPodRangesConfig is the configuration for additional pod secondary ranges supporting the ClusterUpdate message.
	AdditionalPodRangesConfigs GetClusterIpAllocationPolicyAdditionalPodRangesConfigArrayInput `pulumi:"additionalPodRangesConfigs"`
	// The IP address range for the cluster pod IPs. Set to blank to have a range chosen with the default size. Set to /netmask (e.g. /14) to have a range chosen with a specific netmask. Set to a CIDR notation (e.g. 10.96.0.0/14) from the RFC-1918 private networks (e.g. 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16) to pick a specific range to use.
	ClusterIpv4CidrBlock pulumi.StringInput `pulumi:"clusterIpv4CidrBlock"`
	// The name of the existing secondary range in the cluster's subnetwork to use for pod IP addresses. Alternatively, clusterIpv4CidrBlock can be used to automatically create a GKE-managed one.
	ClusterSecondaryRangeName pulumi.StringInput `pulumi:"clusterSecondaryRangeName"`
	// Configuration for cluster level pod cidr overprovision. Default is disabled=false.
	PodCidrOverprovisionConfigs GetClusterIpAllocationPolicyPodCidrOverprovisionConfigArrayInput `pulumi:"podCidrOverprovisionConfigs"`
	// The IP address range of the services IPs in this cluster. Set to blank to have a range chosen with the default size. Set to /netmask (e.g. /14) to have a range chosen with a specific netmask. Set to a CIDR notation (e.g. 10.96.0.0/14) from the RFC-1918 private networks (e.g. 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16) to pick a specific range to use.
	ServicesIpv4CidrBlock pulumi.StringInput `pulumi:"servicesIpv4CidrBlock"`
	// The name of the existing secondary range in the cluster's subnetwork to use for service ClusterIPs. Alternatively, servicesIpv4CidrBlock can be used to automatically create a GKE-managed one.
	ServicesSecondaryRangeName pulumi.StringInput `pulumi:"servicesSecondaryRangeName"`
	// The IP Stack type of the cluster. Choose between IPV4 and IPV4_IPV6. Default type is IPV4 Only if not set
	StackType pulumi.StringInput `pulumi:"stackType"`
}

func (GetClusterIpAllocationPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterIpAllocationPolicy)(nil)).Elem()
}

func (i GetClusterIpAllocationPolicyArgs) ToGetClusterIpAllocationPolicyOutput() GetClusterIpAllocationPolicyOutput {
	return i.ToGetClusterIpAllocationPolicyOutputWithContext(context.Background())
}

func (i GetClusterIpAllocationPolicyArgs) ToGetClusterIpAllocationPolicyOutputWithContext(ctx context.Context) GetClusterIpAllocationPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterIpAllocationPolicyOutput)
}

// GetClusterIpAllocationPolicyArrayInput is an input type that accepts GetClusterIpAllocationPolicyArray and GetClusterIpAllocationPolicyArrayOutput values.
// You can construct a concrete instance of `GetClusterIpAllocationPolicyArrayInput` via:
//
//	GetClusterIpAllocationPolicyArray{ GetClusterIpAllocationPolicyArgs{...} }
type GetClusterIpAllocationPolicyArrayInput interface {
	pulumi.Input

	ToGetClusterIpAllocationPolicyArrayOutput() GetClusterIpAllocationPolicyArrayOutput
	ToGetClusterIpAllocationPolicyArrayOutputWithContext(context.Context) GetClusterIpAllocationPolicyArrayOutput
}

type GetClusterIpAllocationPolicyArray []GetClusterIpAllocationPolicyInput

func (GetClusterIpAllocationPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterIpAllocationPolicy)(nil)).Elem()
}

func (i GetClusterIpAllocationPolicyArray) ToGetClusterIpAllocationPolicyArrayOutput() GetClusterIpAllocationPolicyArrayOutput {
	return i.ToGetClusterIpAllocationPolicyArrayOutputWithContext(context.Background())
}

func (i GetClusterIpAllocationPolicyArray) ToGetClusterIpAllocationPolicyArrayOutputWithContext(ctx context.Context) GetClusterIpAllocationPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterIpAllocationPolicyArrayOutput)
}

type GetClusterIpAllocationPolicyOutput struct{ *pulumi.OutputState }

func (GetClusterIpAllocationPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterIpAllocationPolicy)(nil)).Elem()
}

func (o GetClusterIpAllocationPolicyOutput) ToGetClusterIpAllocationPolicyOutput() GetClusterIpAllocationPolicyOutput {
	return o
}

func (o GetClusterIpAllocationPolicyOutput) ToGetClusterIpAllocationPolicyOutputWithContext(ctx context.Context) GetClusterIpAllocationPolicyOutput {
	return o
}

// AdditionalPodRangesConfig is the configuration for additional pod secondary ranges supporting the ClusterUpdate message.
func (o GetClusterIpAllocationPolicyOutput) AdditionalPodRangesConfigs() GetClusterIpAllocationPolicyAdditionalPodRangesConfigArrayOutput {
	return o.ApplyT(func(v GetClusterIpAllocationPolicy) []GetClusterIpAllocationPolicyAdditionalPodRangesConfig {
		return v.AdditionalPodRangesConfigs
	}).(GetClusterIpAllocationPolicyAdditionalPodRangesConfigArrayOutput)
}

// The IP address range for the cluster pod IPs. Set to blank to have a range chosen with the default size. Set to /netmask (e.g. /14) to have a range chosen with a specific netmask. Set to a CIDR notation (e.g. 10.96.0.0/14) from the RFC-1918 private networks (e.g. 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16) to pick a specific range to use.
func (o GetClusterIpAllocationPolicyOutput) ClusterIpv4CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterIpAllocationPolicy) string { return v.ClusterIpv4CidrBlock }).(pulumi.StringOutput)
}

// The name of the existing secondary range in the cluster's subnetwork to use for pod IP addresses. Alternatively, clusterIpv4CidrBlock can be used to automatically create a GKE-managed one.
func (o GetClusterIpAllocationPolicyOutput) ClusterSecondaryRangeName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterIpAllocationPolicy) string { return v.ClusterSecondaryRangeName }).(pulumi.StringOutput)
}

// Configuration for cluster level pod cidr overprovision. Default is disabled=false.
func (o GetClusterIpAllocationPolicyOutput) PodCidrOverprovisionConfigs() GetClusterIpAllocationPolicyPodCidrOverprovisionConfigArrayOutput {
	return o.ApplyT(func(v GetClusterIpAllocationPolicy) []GetClusterIpAllocationPolicyPodCidrOverprovisionConfig {
		return v.PodCidrOverprovisionConfigs
	}).(GetClusterIpAllocationPolicyPodCidrOverprovisionConfigArrayOutput)
}

// The IP address range of the services IPs in this cluster. Set to blank to have a range chosen with the default size. Set to /netmask (e.g. /14) to have a range chosen with a specific netmask. Set to a CIDR notation (e.g. 10.96.0.0/14) from the RFC-1918 private networks (e.g. 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16) to pick a specific range to use.
func (o GetClusterIpAllocationPolicyOutput) ServicesIpv4CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterIpAllocationPolicy) string { return v.ServicesIpv4CidrBlock }).(pulumi.StringOutput)
}

// The name of the existing secondary range in the cluster's subnetwork to use for service ClusterIPs. Alternatively, servicesIpv4CidrBlock can be used to automatically create a GKE-managed one.
func (o GetClusterIpAllocationPolicyOutput) ServicesSecondaryRangeName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterIpAllocationPolicy) string { return v.ServicesSecondaryRangeName }).(pulumi.StringOutput)
}

// The IP Stack type of the cluster. Choose between IPV4 and IPV4_IPV6. Default type is IPV4 Only if not set
func (o GetClusterIpAllocationPolicyOutput) StackType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterIpAllocationPolicy) string { return v.StackType }).(pulumi.StringOutput)
}

type GetClusterIpAllocationPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetClusterIpAllocationPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterIpAllocationPolicy)(nil)).Elem()
}

func (o GetClusterIpAllocationPolicyArrayOutput) ToGetClusterIpAllocationPolicyArrayOutput() GetClusterIpAllocationPolicyArrayOutput {
	return o
}

func (o GetClusterIpAllocationPolicyArrayOutput) ToGetClusterIpAllocationPolicyArrayOutputWithContext(ctx context.Context) GetClusterIpAllocationPolicyArrayOutput {
	return o
}

func (o GetClusterIpAllocationPolicyArrayOutput) Index(i pulumi.IntInput) GetClusterIpAllocationPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterIpAllocationPolicy {
		return vs[0].([]GetClusterIpAllocationPolicy)[vs[1].(int)]
	}).(GetClusterIpAllocationPolicyOutput)
}

type GetClusterIpAllocationPolicyAdditionalPodRangesConfig struct {
	// Name for pod secondary ipv4 range which has the actual range defined ahead.
	PodRangeNames []string `pulumi:"podRangeNames"`
}

// GetClusterIpAllocationPolicyAdditionalPodRangesConfigInput is an input type that accepts GetClusterIpAllocationPolicyAdditionalPodRangesConfigArgs and GetClusterIpAllocationPolicyAdditionalPodRangesConfigOutput values.
// You can construct a concrete instance of `GetClusterIpAllocationPolicyAdditionalPodRangesConfigInput` via:
//
//	GetClusterIpAllocationPolicyAdditionalPodRangesConfigArgs{...}
type GetClusterIpAllocationPolicyAdditionalPodRangesConfigInput interface {
	pulumi.Input

	ToGetClusterIpAllocationPolicyAdditionalPodRangesConfigOutput() GetClusterIpAllocationPolicyAdditionalPodRangesConfigOutput
	ToGetClusterIpAllocationPolicyAdditionalPodRangesConfigOutputWithContext(context.Context) GetClusterIpAllocationPolicyAdditionalPodRangesConfigOutput
}

type GetClusterIpAllocationPolicyAdditionalPodRangesConfigArgs struct {
	// Name for pod secondary ipv4 range which has the actual range defined ahead.
	PodRangeNames pulumi.StringArrayInput `pulumi:"podRangeNames"`
}

func (GetClusterIpAllocationPolicyAdditionalPodRangesConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterIpAllocationPolicyAdditionalPodRangesConfig)(nil)).Elem()
}

func (i GetClusterIpAllocationPolicyAdditionalPodRangesConfigArgs) ToGetClusterIpAllocationPolicyAdditionalPodRangesConfigOutput() GetClusterIpAllocationPolicyAdditionalPodRangesConfigOutput {
	return i.ToGetClusterIpAllocationPolicyAdditionalPodRangesConfigOutputWithContext(context.Background())
}

func (i GetClusterIpAllocationPolicyAdditionalPodRangesConfigArgs) ToGetClusterIpAllocationPolicyAdditionalPodRangesConfigOutputWithContext(ctx context.Context) GetClusterIpAllocationPolicyAdditionalPodRangesConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterIpAllocationPolicyAdditionalPodRangesConfigOutput)
}

// GetClusterIpAllocationPolicyAdditionalPodRangesConfigArrayInput is an input type that accepts GetClusterIpAllocationPolicyAdditionalPodRangesConfigArray and GetClusterIpAllocationPolicyAdditionalPodRangesConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterIpAllocationPolicyAdditionalPodRangesConfigArrayInput` via:
//
//	GetClusterIpAllocationPolicyAdditionalPodRangesConfigArray{ GetClusterIpAllocationPolicyAdditionalPodRangesConfigArgs{...} }
type GetClusterIpAllocationPolicyAdditionalPodRangesConfigArrayInput interface {
	pulumi.Input

	ToGetClusterIpAllocationPolicyAdditionalPodRangesConfigArrayOutput() GetClusterIpAllocationPolicyAdditionalPodRangesConfigArrayOutput
	ToGetClusterIpAllocationPolicyAdditionalPodRangesConfigArrayOutputWithContext(context.Context) GetClusterIpAllocationPolicyAdditionalPodRangesConfigArrayOutput
}

type GetClusterIpAllocationPolicyAdditionalPodRangesConfigArray []GetClusterIpAllocationPolicyAdditionalPodRangesConfigInput

func (GetClusterIpAllocationPolicyAdditionalPodRangesConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterIpAllocationPolicyAdditionalPodRangesConfig)(nil)).Elem()
}

func (i GetClusterIpAllocationPolicyAdditionalPodRangesConfigArray) ToGetClusterIpAllocationPolicyAdditionalPodRangesConfigArrayOutput() GetClusterIpAllocationPolicyAdditionalPodRangesConfigArrayOutput {
	return i.ToGetClusterIpAllocationPolicyAdditionalPodRangesConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterIpAllocationPolicyAdditionalPodRangesConfigArray) ToGetClusterIpAllocationPolicyAdditionalPodRangesConfigArrayOutputWithContext(ctx context.Context) GetClusterIpAllocationPolicyAdditionalPodRangesConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterIpAllocationPolicyAdditionalPodRangesConfigArrayOutput)
}

type GetClusterIpAllocationPolicyAdditionalPodRangesConfigOutput struct{ *pulumi.OutputState }

func (GetClusterIpAllocationPolicyAdditionalPodRangesConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterIpAllocationPolicyAdditionalPodRangesConfig)(nil)).Elem()
}

func (o GetClusterIpAllocationPolicyAdditionalPodRangesConfigOutput) ToGetClusterIpAllocationPolicyAdditionalPodRangesConfigOutput() GetClusterIpAllocationPolicyAdditionalPodRangesConfigOutput {
	return o
}

func (o GetClusterIpAllocationPolicyAdditionalPodRangesConfigOutput) ToGetClusterIpAllocationPolicyAdditionalPodRangesConfigOutputWithContext(ctx context.Context) GetClusterIpAllocationPolicyAdditionalPodRangesConfigOutput {
	return o
}

// Name for pod secondary ipv4 range which has the actual range defined ahead.
func (o GetClusterIpAllocationPolicyAdditionalPodRangesConfigOutput) PodRangeNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClusterIpAllocationPolicyAdditionalPodRangesConfig) []string { return v.PodRangeNames }).(pulumi.StringArrayOutput)
}

type GetClusterIpAllocationPolicyAdditionalPodRangesConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterIpAllocationPolicyAdditionalPodRangesConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterIpAllocationPolicyAdditionalPodRangesConfig)(nil)).Elem()
}

func (o GetClusterIpAllocationPolicyAdditionalPodRangesConfigArrayOutput) ToGetClusterIpAllocationPolicyAdditionalPodRangesConfigArrayOutput() GetClusterIpAllocationPolicyAdditionalPodRangesConfigArrayOutput {
	return o
}

func (o GetClusterIpAllocationPolicyAdditionalPodRangesConfigArrayOutput) ToGetClusterIpAllocationPolicyAdditionalPodRangesConfigArrayOutputWithContext(ctx context.Context) GetClusterIpAllocationPolicyAdditionalPodRangesConfigArrayOutput {
	return o
}

func (o GetClusterIpAllocationPolicyAdditionalPodRangesConfigArrayOutput) Index(i pulumi.IntInput) GetClusterIpAllocationPolicyAdditionalPodRangesConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterIpAllocationPolicyAdditionalPodRangesConfig {
		return vs[0].([]GetClusterIpAllocationPolicyAdditionalPodRangesConfig)[vs[1].(int)]
	}).(GetClusterIpAllocationPolicyAdditionalPodRangesConfigOutput)
}

type GetClusterIpAllocationPolicyPodCidrOverprovisionConfig struct {
	Disabled bool `pulumi:"disabled"`
}

// GetClusterIpAllocationPolicyPodCidrOverprovisionConfigInput is an input type that accepts GetClusterIpAllocationPolicyPodCidrOverprovisionConfigArgs and GetClusterIpAllocationPolicyPodCidrOverprovisionConfigOutput values.
// You can construct a concrete instance of `GetClusterIpAllocationPolicyPodCidrOverprovisionConfigInput` via:
//
//	GetClusterIpAllocationPolicyPodCidrOverprovisionConfigArgs{...}
type GetClusterIpAllocationPolicyPodCidrOverprovisionConfigInput interface {
	pulumi.Input

	ToGetClusterIpAllocationPolicyPodCidrOverprovisionConfigOutput() GetClusterIpAllocationPolicyPodCidrOverprovisionConfigOutput
	ToGetClusterIpAllocationPolicyPodCidrOverprovisionConfigOutputWithContext(context.Context) GetClusterIpAllocationPolicyPodCidrOverprovisionConfigOutput
}

type GetClusterIpAllocationPolicyPodCidrOverprovisionConfigArgs struct {
	Disabled pulumi.BoolInput `pulumi:"disabled"`
}

func (GetClusterIpAllocationPolicyPodCidrOverprovisionConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterIpAllocationPolicyPodCidrOverprovisionConfig)(nil)).Elem()
}

func (i GetClusterIpAllocationPolicyPodCidrOverprovisionConfigArgs) ToGetClusterIpAllocationPolicyPodCidrOverprovisionConfigOutput() GetClusterIpAllocationPolicyPodCidrOverprovisionConfigOutput {
	return i.ToGetClusterIpAllocationPolicyPodCidrOverprovisionConfigOutputWithContext(context.Background())
}

func (i GetClusterIpAllocationPolicyPodCidrOverprovisionConfigArgs) ToGetClusterIpAllocationPolicyPodCidrOverprovisionConfigOutputWithContext(ctx context.Context) GetClusterIpAllocationPolicyPodCidrOverprovisionConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterIpAllocationPolicyPodCidrOverprovisionConfigOutput)
}

// GetClusterIpAllocationPolicyPodCidrOverprovisionConfigArrayInput is an input type that accepts GetClusterIpAllocationPolicyPodCidrOverprovisionConfigArray and GetClusterIpAllocationPolicyPodCidrOverprovisionConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterIpAllocationPolicyPodCidrOverprovisionConfigArrayInput` via:
//
//	GetClusterIpAllocationPolicyPodCidrOverprovisionConfigArray{ GetClusterIpAllocationPolicyPodCidrOverprovisionConfigArgs{...} }
type GetClusterIpAllocationPolicyPodCidrOverprovisionConfigArrayInput interface {
	pulumi.Input

	ToGetClusterIpAllocationPolicyPodCidrOverprovisionConfigArrayOutput() GetClusterIpAllocationPolicyPodCidrOverprovisionConfigArrayOutput
	ToGetClusterIpAllocationPolicyPodCidrOverprovisionConfigArrayOutputWithContext(context.Context) GetClusterIpAllocationPolicyPodCidrOverprovisionConfigArrayOutput
}

type GetClusterIpAllocationPolicyPodCidrOverprovisionConfigArray []GetClusterIpAllocationPolicyPodCidrOverprovisionConfigInput

func (GetClusterIpAllocationPolicyPodCidrOverprovisionConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterIpAllocationPolicyPodCidrOverprovisionConfig)(nil)).Elem()
}

func (i GetClusterIpAllocationPolicyPodCidrOverprovisionConfigArray) ToGetClusterIpAllocationPolicyPodCidrOverprovisionConfigArrayOutput() GetClusterIpAllocationPolicyPodCidrOverprovisionConfigArrayOutput {
	return i.ToGetClusterIpAllocationPolicyPodCidrOverprovisionConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterIpAllocationPolicyPodCidrOverprovisionConfigArray) ToGetClusterIpAllocationPolicyPodCidrOverprovisionConfigArrayOutputWithContext(ctx context.Context) GetClusterIpAllocationPolicyPodCidrOverprovisionConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterIpAllocationPolicyPodCidrOverprovisionConfigArrayOutput)
}

type GetClusterIpAllocationPolicyPodCidrOverprovisionConfigOutput struct{ *pulumi.OutputState }

func (GetClusterIpAllocationPolicyPodCidrOverprovisionConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterIpAllocationPolicyPodCidrOverprovisionConfig)(nil)).Elem()
}

func (o GetClusterIpAllocationPolicyPodCidrOverprovisionConfigOutput) ToGetClusterIpAllocationPolicyPodCidrOverprovisionConfigOutput() GetClusterIpAllocationPolicyPodCidrOverprovisionConfigOutput {
	return o
}

func (o GetClusterIpAllocationPolicyPodCidrOverprovisionConfigOutput) ToGetClusterIpAllocationPolicyPodCidrOverprovisionConfigOutputWithContext(ctx context.Context) GetClusterIpAllocationPolicyPodCidrOverprovisionConfigOutput {
	return o
}

func (o GetClusterIpAllocationPolicyPodCidrOverprovisionConfigOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterIpAllocationPolicyPodCidrOverprovisionConfig) bool { return v.Disabled }).(pulumi.BoolOutput)
}

type GetClusterIpAllocationPolicyPodCidrOverprovisionConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterIpAllocationPolicyPodCidrOverprovisionConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterIpAllocationPolicyPodCidrOverprovisionConfig)(nil)).Elem()
}

func (o GetClusterIpAllocationPolicyPodCidrOverprovisionConfigArrayOutput) ToGetClusterIpAllocationPolicyPodCidrOverprovisionConfigArrayOutput() GetClusterIpAllocationPolicyPodCidrOverprovisionConfigArrayOutput {
	return o
}

func (o GetClusterIpAllocationPolicyPodCidrOverprovisionConfigArrayOutput) ToGetClusterIpAllocationPolicyPodCidrOverprovisionConfigArrayOutputWithContext(ctx context.Context) GetClusterIpAllocationPolicyPodCidrOverprovisionConfigArrayOutput {
	return o
}

func (o GetClusterIpAllocationPolicyPodCidrOverprovisionConfigArrayOutput) Index(i pulumi.IntInput) GetClusterIpAllocationPolicyPodCidrOverprovisionConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterIpAllocationPolicyPodCidrOverprovisionConfig {
		return vs[0].([]GetClusterIpAllocationPolicyPodCidrOverprovisionConfig)[vs[1].(int)]
	}).(GetClusterIpAllocationPolicyPodCidrOverprovisionConfigOutput)
}

type GetClusterLoggingConfig struct {
	// GKE components exposing logs. Valid values include SYSTEM_COMPONENTS, APISERVER, CONTROLLER_MANAGER, SCHEDULER, and WORKLOADS.
	EnableComponents []string `pulumi:"enableComponents"`
}

// GetClusterLoggingConfigInput is an input type that accepts GetClusterLoggingConfigArgs and GetClusterLoggingConfigOutput values.
// You can construct a concrete instance of `GetClusterLoggingConfigInput` via:
//
//	GetClusterLoggingConfigArgs{...}
type GetClusterLoggingConfigInput interface {
	pulumi.Input

	ToGetClusterLoggingConfigOutput() GetClusterLoggingConfigOutput
	ToGetClusterLoggingConfigOutputWithContext(context.Context) GetClusterLoggingConfigOutput
}

type GetClusterLoggingConfigArgs struct {
	// GKE components exposing logs. Valid values include SYSTEM_COMPONENTS, APISERVER, CONTROLLER_MANAGER, SCHEDULER, and WORKLOADS.
	EnableComponents pulumi.StringArrayInput `pulumi:"enableComponents"`
}

func (GetClusterLoggingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterLoggingConfig)(nil)).Elem()
}

func (i GetClusterLoggingConfigArgs) ToGetClusterLoggingConfigOutput() GetClusterLoggingConfigOutput {
	return i.ToGetClusterLoggingConfigOutputWithContext(context.Background())
}

func (i GetClusterLoggingConfigArgs) ToGetClusterLoggingConfigOutputWithContext(ctx context.Context) GetClusterLoggingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterLoggingConfigOutput)
}

// GetClusterLoggingConfigArrayInput is an input type that accepts GetClusterLoggingConfigArray and GetClusterLoggingConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterLoggingConfigArrayInput` via:
//
//	GetClusterLoggingConfigArray{ GetClusterLoggingConfigArgs{...} }
type GetClusterLoggingConfigArrayInput interface {
	pulumi.Input

	ToGetClusterLoggingConfigArrayOutput() GetClusterLoggingConfigArrayOutput
	ToGetClusterLoggingConfigArrayOutputWithContext(context.Context) GetClusterLoggingConfigArrayOutput
}

type GetClusterLoggingConfigArray []GetClusterLoggingConfigInput

func (GetClusterLoggingConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterLoggingConfig)(nil)).Elem()
}

func (i GetClusterLoggingConfigArray) ToGetClusterLoggingConfigArrayOutput() GetClusterLoggingConfigArrayOutput {
	return i.ToGetClusterLoggingConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterLoggingConfigArray) ToGetClusterLoggingConfigArrayOutputWithContext(ctx context.Context) GetClusterLoggingConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterLoggingConfigArrayOutput)
}

type GetClusterLoggingConfigOutput struct{ *pulumi.OutputState }

func (GetClusterLoggingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterLoggingConfig)(nil)).Elem()
}

func (o GetClusterLoggingConfigOutput) ToGetClusterLoggingConfigOutput() GetClusterLoggingConfigOutput {
	return o
}

func (o GetClusterLoggingConfigOutput) ToGetClusterLoggingConfigOutputWithContext(ctx context.Context) GetClusterLoggingConfigOutput {
	return o
}

// GKE components exposing logs. Valid values include SYSTEM_COMPONENTS, APISERVER, CONTROLLER_MANAGER, SCHEDULER, and WORKLOADS.
func (o GetClusterLoggingConfigOutput) EnableComponents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClusterLoggingConfig) []string { return v.EnableComponents }).(pulumi.StringArrayOutput)
}

type GetClusterLoggingConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterLoggingConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterLoggingConfig)(nil)).Elem()
}

func (o GetClusterLoggingConfigArrayOutput) ToGetClusterLoggingConfigArrayOutput() GetClusterLoggingConfigArrayOutput {
	return o
}

func (o GetClusterLoggingConfigArrayOutput) ToGetClusterLoggingConfigArrayOutputWithContext(ctx context.Context) GetClusterLoggingConfigArrayOutput {
	return o
}

func (o GetClusterLoggingConfigArrayOutput) Index(i pulumi.IntInput) GetClusterLoggingConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterLoggingConfig {
		return vs[0].([]GetClusterLoggingConfig)[vs[1].(int)]
	}).(GetClusterLoggingConfigOutput)
}

type GetClusterMaintenancePolicy struct {
	// Time window specified for daily maintenance operations. Specify startTime in RFC3339 format "HH:MM”, where HH : [00-23] and MM : [00-59] GMT.
	DailyMaintenanceWindows []GetClusterMaintenancePolicyDailyMaintenanceWindow `pulumi:"dailyMaintenanceWindows"`
	// Exceptions to maintenance window. Non-emergency maintenance should not occur in these windows.
	MaintenanceExclusions []GetClusterMaintenancePolicyMaintenanceExclusion `pulumi:"maintenanceExclusions"`
	// Time window for recurring maintenance operations.
	RecurringWindows []GetClusterMaintenancePolicyRecurringWindow `pulumi:"recurringWindows"`
}

// GetClusterMaintenancePolicyInput is an input type that accepts GetClusterMaintenancePolicyArgs and GetClusterMaintenancePolicyOutput values.
// You can construct a concrete instance of `GetClusterMaintenancePolicyInput` via:
//
//	GetClusterMaintenancePolicyArgs{...}
type GetClusterMaintenancePolicyInput interface {
	pulumi.Input

	ToGetClusterMaintenancePolicyOutput() GetClusterMaintenancePolicyOutput
	ToGetClusterMaintenancePolicyOutputWithContext(context.Context) GetClusterMaintenancePolicyOutput
}

type GetClusterMaintenancePolicyArgs struct {
	// Time window specified for daily maintenance operations. Specify startTime in RFC3339 format "HH:MM”, where HH : [00-23] and MM : [00-59] GMT.
	DailyMaintenanceWindows GetClusterMaintenancePolicyDailyMaintenanceWindowArrayInput `pulumi:"dailyMaintenanceWindows"`
	// Exceptions to maintenance window. Non-emergency maintenance should not occur in these windows.
	MaintenanceExclusions GetClusterMaintenancePolicyMaintenanceExclusionArrayInput `pulumi:"maintenanceExclusions"`
	// Time window for recurring maintenance operations.
	RecurringWindows GetClusterMaintenancePolicyRecurringWindowArrayInput `pulumi:"recurringWindows"`
}

func (GetClusterMaintenancePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterMaintenancePolicy)(nil)).Elem()
}

func (i GetClusterMaintenancePolicyArgs) ToGetClusterMaintenancePolicyOutput() GetClusterMaintenancePolicyOutput {
	return i.ToGetClusterMaintenancePolicyOutputWithContext(context.Background())
}

func (i GetClusterMaintenancePolicyArgs) ToGetClusterMaintenancePolicyOutputWithContext(ctx context.Context) GetClusterMaintenancePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterMaintenancePolicyOutput)
}

// GetClusterMaintenancePolicyArrayInput is an input type that accepts GetClusterMaintenancePolicyArray and GetClusterMaintenancePolicyArrayOutput values.
// You can construct a concrete instance of `GetClusterMaintenancePolicyArrayInput` via:
//
//	GetClusterMaintenancePolicyArray{ GetClusterMaintenancePolicyArgs{...} }
type GetClusterMaintenancePolicyArrayInput interface {
	pulumi.Input

	ToGetClusterMaintenancePolicyArrayOutput() GetClusterMaintenancePolicyArrayOutput
	ToGetClusterMaintenancePolicyArrayOutputWithContext(context.Context) GetClusterMaintenancePolicyArrayOutput
}

type GetClusterMaintenancePolicyArray []GetClusterMaintenancePolicyInput

func (GetClusterMaintenancePolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterMaintenancePolicy)(nil)).Elem()
}

func (i GetClusterMaintenancePolicyArray) ToGetClusterMaintenancePolicyArrayOutput() GetClusterMaintenancePolicyArrayOutput {
	return i.ToGetClusterMaintenancePolicyArrayOutputWithContext(context.Background())
}

func (i GetClusterMaintenancePolicyArray) ToGetClusterMaintenancePolicyArrayOutputWithContext(ctx context.Context) GetClusterMaintenancePolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterMaintenancePolicyArrayOutput)
}

type GetClusterMaintenancePolicyOutput struct{ *pulumi.OutputState }

func (GetClusterMaintenancePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterMaintenancePolicy)(nil)).Elem()
}

func (o GetClusterMaintenancePolicyOutput) ToGetClusterMaintenancePolicyOutput() GetClusterMaintenancePolicyOutput {
	return o
}

func (o GetClusterMaintenancePolicyOutput) ToGetClusterMaintenancePolicyOutputWithContext(ctx context.Context) GetClusterMaintenancePolicyOutput {
	return o
}

// Time window specified for daily maintenance operations. Specify startTime in RFC3339 format "HH:MM”, where HH : [00-23] and MM : [00-59] GMT.
func (o GetClusterMaintenancePolicyOutput) DailyMaintenanceWindows() GetClusterMaintenancePolicyDailyMaintenanceWindowArrayOutput {
	return o.ApplyT(func(v GetClusterMaintenancePolicy) []GetClusterMaintenancePolicyDailyMaintenanceWindow {
		return v.DailyMaintenanceWindows
	}).(GetClusterMaintenancePolicyDailyMaintenanceWindowArrayOutput)
}

// Exceptions to maintenance window. Non-emergency maintenance should not occur in these windows.
func (o GetClusterMaintenancePolicyOutput) MaintenanceExclusions() GetClusterMaintenancePolicyMaintenanceExclusionArrayOutput {
	return o.ApplyT(func(v GetClusterMaintenancePolicy) []GetClusterMaintenancePolicyMaintenanceExclusion {
		return v.MaintenanceExclusions
	}).(GetClusterMaintenancePolicyMaintenanceExclusionArrayOutput)
}

// Time window for recurring maintenance operations.
func (o GetClusterMaintenancePolicyOutput) RecurringWindows() GetClusterMaintenancePolicyRecurringWindowArrayOutput {
	return o.ApplyT(func(v GetClusterMaintenancePolicy) []GetClusterMaintenancePolicyRecurringWindow {
		return v.RecurringWindows
	}).(GetClusterMaintenancePolicyRecurringWindowArrayOutput)
}

type GetClusterMaintenancePolicyArrayOutput struct{ *pulumi.OutputState }

func (GetClusterMaintenancePolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterMaintenancePolicy)(nil)).Elem()
}

func (o GetClusterMaintenancePolicyArrayOutput) ToGetClusterMaintenancePolicyArrayOutput() GetClusterMaintenancePolicyArrayOutput {
	return o
}

func (o GetClusterMaintenancePolicyArrayOutput) ToGetClusterMaintenancePolicyArrayOutputWithContext(ctx context.Context) GetClusterMaintenancePolicyArrayOutput {
	return o
}

func (o GetClusterMaintenancePolicyArrayOutput) Index(i pulumi.IntInput) GetClusterMaintenancePolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterMaintenancePolicy {
		return vs[0].([]GetClusterMaintenancePolicy)[vs[1].(int)]
	}).(GetClusterMaintenancePolicyOutput)
}

type GetClusterMaintenancePolicyDailyMaintenanceWindow struct {
	Duration  string `pulumi:"duration"`
	StartTime string `pulumi:"startTime"`
}

// GetClusterMaintenancePolicyDailyMaintenanceWindowInput is an input type that accepts GetClusterMaintenancePolicyDailyMaintenanceWindowArgs and GetClusterMaintenancePolicyDailyMaintenanceWindowOutput values.
// You can construct a concrete instance of `GetClusterMaintenancePolicyDailyMaintenanceWindowInput` via:
//
//	GetClusterMaintenancePolicyDailyMaintenanceWindowArgs{...}
type GetClusterMaintenancePolicyDailyMaintenanceWindowInput interface {
	pulumi.Input

	ToGetClusterMaintenancePolicyDailyMaintenanceWindowOutput() GetClusterMaintenancePolicyDailyMaintenanceWindowOutput
	ToGetClusterMaintenancePolicyDailyMaintenanceWindowOutputWithContext(context.Context) GetClusterMaintenancePolicyDailyMaintenanceWindowOutput
}

type GetClusterMaintenancePolicyDailyMaintenanceWindowArgs struct {
	Duration  pulumi.StringInput `pulumi:"duration"`
	StartTime pulumi.StringInput `pulumi:"startTime"`
}

func (GetClusterMaintenancePolicyDailyMaintenanceWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterMaintenancePolicyDailyMaintenanceWindow)(nil)).Elem()
}

func (i GetClusterMaintenancePolicyDailyMaintenanceWindowArgs) ToGetClusterMaintenancePolicyDailyMaintenanceWindowOutput() GetClusterMaintenancePolicyDailyMaintenanceWindowOutput {
	return i.ToGetClusterMaintenancePolicyDailyMaintenanceWindowOutputWithContext(context.Background())
}

func (i GetClusterMaintenancePolicyDailyMaintenanceWindowArgs) ToGetClusterMaintenancePolicyDailyMaintenanceWindowOutputWithContext(ctx context.Context) GetClusterMaintenancePolicyDailyMaintenanceWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterMaintenancePolicyDailyMaintenanceWindowOutput)
}

// GetClusterMaintenancePolicyDailyMaintenanceWindowArrayInput is an input type that accepts GetClusterMaintenancePolicyDailyMaintenanceWindowArray and GetClusterMaintenancePolicyDailyMaintenanceWindowArrayOutput values.
// You can construct a concrete instance of `GetClusterMaintenancePolicyDailyMaintenanceWindowArrayInput` via:
//
//	GetClusterMaintenancePolicyDailyMaintenanceWindowArray{ GetClusterMaintenancePolicyDailyMaintenanceWindowArgs{...} }
type GetClusterMaintenancePolicyDailyMaintenanceWindowArrayInput interface {
	pulumi.Input

	ToGetClusterMaintenancePolicyDailyMaintenanceWindowArrayOutput() GetClusterMaintenancePolicyDailyMaintenanceWindowArrayOutput
	ToGetClusterMaintenancePolicyDailyMaintenanceWindowArrayOutputWithContext(context.Context) GetClusterMaintenancePolicyDailyMaintenanceWindowArrayOutput
}

type GetClusterMaintenancePolicyDailyMaintenanceWindowArray []GetClusterMaintenancePolicyDailyMaintenanceWindowInput

func (GetClusterMaintenancePolicyDailyMaintenanceWindowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterMaintenancePolicyDailyMaintenanceWindow)(nil)).Elem()
}

func (i GetClusterMaintenancePolicyDailyMaintenanceWindowArray) ToGetClusterMaintenancePolicyDailyMaintenanceWindowArrayOutput() GetClusterMaintenancePolicyDailyMaintenanceWindowArrayOutput {
	return i.ToGetClusterMaintenancePolicyDailyMaintenanceWindowArrayOutputWithContext(context.Background())
}

func (i GetClusterMaintenancePolicyDailyMaintenanceWindowArray) ToGetClusterMaintenancePolicyDailyMaintenanceWindowArrayOutputWithContext(ctx context.Context) GetClusterMaintenancePolicyDailyMaintenanceWindowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterMaintenancePolicyDailyMaintenanceWindowArrayOutput)
}

type GetClusterMaintenancePolicyDailyMaintenanceWindowOutput struct{ *pulumi.OutputState }

func (GetClusterMaintenancePolicyDailyMaintenanceWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterMaintenancePolicyDailyMaintenanceWindow)(nil)).Elem()
}

func (o GetClusterMaintenancePolicyDailyMaintenanceWindowOutput) ToGetClusterMaintenancePolicyDailyMaintenanceWindowOutput() GetClusterMaintenancePolicyDailyMaintenanceWindowOutput {
	return o
}

func (o GetClusterMaintenancePolicyDailyMaintenanceWindowOutput) ToGetClusterMaintenancePolicyDailyMaintenanceWindowOutputWithContext(ctx context.Context) GetClusterMaintenancePolicyDailyMaintenanceWindowOutput {
	return o
}

func (o GetClusterMaintenancePolicyDailyMaintenanceWindowOutput) Duration() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterMaintenancePolicyDailyMaintenanceWindow) string { return v.Duration }).(pulumi.StringOutput)
}

func (o GetClusterMaintenancePolicyDailyMaintenanceWindowOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterMaintenancePolicyDailyMaintenanceWindow) string { return v.StartTime }).(pulumi.StringOutput)
}

type GetClusterMaintenancePolicyDailyMaintenanceWindowArrayOutput struct{ *pulumi.OutputState }

func (GetClusterMaintenancePolicyDailyMaintenanceWindowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterMaintenancePolicyDailyMaintenanceWindow)(nil)).Elem()
}

func (o GetClusterMaintenancePolicyDailyMaintenanceWindowArrayOutput) ToGetClusterMaintenancePolicyDailyMaintenanceWindowArrayOutput() GetClusterMaintenancePolicyDailyMaintenanceWindowArrayOutput {
	return o
}

func (o GetClusterMaintenancePolicyDailyMaintenanceWindowArrayOutput) ToGetClusterMaintenancePolicyDailyMaintenanceWindowArrayOutputWithContext(ctx context.Context) GetClusterMaintenancePolicyDailyMaintenanceWindowArrayOutput {
	return o
}

func (o GetClusterMaintenancePolicyDailyMaintenanceWindowArrayOutput) Index(i pulumi.IntInput) GetClusterMaintenancePolicyDailyMaintenanceWindowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterMaintenancePolicyDailyMaintenanceWindow {
		return vs[0].([]GetClusterMaintenancePolicyDailyMaintenanceWindow)[vs[1].(int)]
	}).(GetClusterMaintenancePolicyDailyMaintenanceWindowOutput)
}

type GetClusterMaintenancePolicyMaintenanceExclusion struct {
	EndTime       string `pulumi:"endTime"`
	ExclusionName string `pulumi:"exclusionName"`
	// Maintenance exclusion related options.
	ExclusionOptions []GetClusterMaintenancePolicyMaintenanceExclusionExclusionOption `pulumi:"exclusionOptions"`
	StartTime        string                                                           `pulumi:"startTime"`
}

// GetClusterMaintenancePolicyMaintenanceExclusionInput is an input type that accepts GetClusterMaintenancePolicyMaintenanceExclusionArgs and GetClusterMaintenancePolicyMaintenanceExclusionOutput values.
// You can construct a concrete instance of `GetClusterMaintenancePolicyMaintenanceExclusionInput` via:
//
//	GetClusterMaintenancePolicyMaintenanceExclusionArgs{...}
type GetClusterMaintenancePolicyMaintenanceExclusionInput interface {
	pulumi.Input

	ToGetClusterMaintenancePolicyMaintenanceExclusionOutput() GetClusterMaintenancePolicyMaintenanceExclusionOutput
	ToGetClusterMaintenancePolicyMaintenanceExclusionOutputWithContext(context.Context) GetClusterMaintenancePolicyMaintenanceExclusionOutput
}

type GetClusterMaintenancePolicyMaintenanceExclusionArgs struct {
	EndTime       pulumi.StringInput `pulumi:"endTime"`
	ExclusionName pulumi.StringInput `pulumi:"exclusionName"`
	// Maintenance exclusion related options.
	ExclusionOptions GetClusterMaintenancePolicyMaintenanceExclusionExclusionOptionArrayInput `pulumi:"exclusionOptions"`
	StartTime        pulumi.StringInput                                                       `pulumi:"startTime"`
}

func (GetClusterMaintenancePolicyMaintenanceExclusionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterMaintenancePolicyMaintenanceExclusion)(nil)).Elem()
}

func (i GetClusterMaintenancePolicyMaintenanceExclusionArgs) ToGetClusterMaintenancePolicyMaintenanceExclusionOutput() GetClusterMaintenancePolicyMaintenanceExclusionOutput {
	return i.ToGetClusterMaintenancePolicyMaintenanceExclusionOutputWithContext(context.Background())
}

func (i GetClusterMaintenancePolicyMaintenanceExclusionArgs) ToGetClusterMaintenancePolicyMaintenanceExclusionOutputWithContext(ctx context.Context) GetClusterMaintenancePolicyMaintenanceExclusionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterMaintenancePolicyMaintenanceExclusionOutput)
}

// GetClusterMaintenancePolicyMaintenanceExclusionArrayInput is an input type that accepts GetClusterMaintenancePolicyMaintenanceExclusionArray and GetClusterMaintenancePolicyMaintenanceExclusionArrayOutput values.
// You can construct a concrete instance of `GetClusterMaintenancePolicyMaintenanceExclusionArrayInput` via:
//
//	GetClusterMaintenancePolicyMaintenanceExclusionArray{ GetClusterMaintenancePolicyMaintenanceExclusionArgs{...} }
type GetClusterMaintenancePolicyMaintenanceExclusionArrayInput interface {
	pulumi.Input

	ToGetClusterMaintenancePolicyMaintenanceExclusionArrayOutput() GetClusterMaintenancePolicyMaintenanceExclusionArrayOutput
	ToGetClusterMaintenancePolicyMaintenanceExclusionArrayOutputWithContext(context.Context) GetClusterMaintenancePolicyMaintenanceExclusionArrayOutput
}

type GetClusterMaintenancePolicyMaintenanceExclusionArray []GetClusterMaintenancePolicyMaintenanceExclusionInput

func (GetClusterMaintenancePolicyMaintenanceExclusionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterMaintenancePolicyMaintenanceExclusion)(nil)).Elem()
}

func (i GetClusterMaintenancePolicyMaintenanceExclusionArray) ToGetClusterMaintenancePolicyMaintenanceExclusionArrayOutput() GetClusterMaintenancePolicyMaintenanceExclusionArrayOutput {
	return i.ToGetClusterMaintenancePolicyMaintenanceExclusionArrayOutputWithContext(context.Background())
}

func (i GetClusterMaintenancePolicyMaintenanceExclusionArray) ToGetClusterMaintenancePolicyMaintenanceExclusionArrayOutputWithContext(ctx context.Context) GetClusterMaintenancePolicyMaintenanceExclusionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterMaintenancePolicyMaintenanceExclusionArrayOutput)
}

type GetClusterMaintenancePolicyMaintenanceExclusionOutput struct{ *pulumi.OutputState }

func (GetClusterMaintenancePolicyMaintenanceExclusionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterMaintenancePolicyMaintenanceExclusion)(nil)).Elem()
}

func (o GetClusterMaintenancePolicyMaintenanceExclusionOutput) ToGetClusterMaintenancePolicyMaintenanceExclusionOutput() GetClusterMaintenancePolicyMaintenanceExclusionOutput {
	return o
}

func (o GetClusterMaintenancePolicyMaintenanceExclusionOutput) ToGetClusterMaintenancePolicyMaintenanceExclusionOutputWithContext(ctx context.Context) GetClusterMaintenancePolicyMaintenanceExclusionOutput {
	return o
}

func (o GetClusterMaintenancePolicyMaintenanceExclusionOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterMaintenancePolicyMaintenanceExclusion) string { return v.EndTime }).(pulumi.StringOutput)
}

func (o GetClusterMaintenancePolicyMaintenanceExclusionOutput) ExclusionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterMaintenancePolicyMaintenanceExclusion) string { return v.ExclusionName }).(pulumi.StringOutput)
}

// Maintenance exclusion related options.
func (o GetClusterMaintenancePolicyMaintenanceExclusionOutput) ExclusionOptions() GetClusterMaintenancePolicyMaintenanceExclusionExclusionOptionArrayOutput {
	return o.ApplyT(func(v GetClusterMaintenancePolicyMaintenanceExclusion) []GetClusterMaintenancePolicyMaintenanceExclusionExclusionOption {
		return v.ExclusionOptions
	}).(GetClusterMaintenancePolicyMaintenanceExclusionExclusionOptionArrayOutput)
}

func (o GetClusterMaintenancePolicyMaintenanceExclusionOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterMaintenancePolicyMaintenanceExclusion) string { return v.StartTime }).(pulumi.StringOutput)
}

type GetClusterMaintenancePolicyMaintenanceExclusionArrayOutput struct{ *pulumi.OutputState }

func (GetClusterMaintenancePolicyMaintenanceExclusionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterMaintenancePolicyMaintenanceExclusion)(nil)).Elem()
}

func (o GetClusterMaintenancePolicyMaintenanceExclusionArrayOutput) ToGetClusterMaintenancePolicyMaintenanceExclusionArrayOutput() GetClusterMaintenancePolicyMaintenanceExclusionArrayOutput {
	return o
}

func (o GetClusterMaintenancePolicyMaintenanceExclusionArrayOutput) ToGetClusterMaintenancePolicyMaintenanceExclusionArrayOutputWithContext(ctx context.Context) GetClusterMaintenancePolicyMaintenanceExclusionArrayOutput {
	return o
}

func (o GetClusterMaintenancePolicyMaintenanceExclusionArrayOutput) Index(i pulumi.IntInput) GetClusterMaintenancePolicyMaintenanceExclusionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterMaintenancePolicyMaintenanceExclusion {
		return vs[0].([]GetClusterMaintenancePolicyMaintenanceExclusion)[vs[1].(int)]
	}).(GetClusterMaintenancePolicyMaintenanceExclusionOutput)
}

type GetClusterMaintenancePolicyMaintenanceExclusionExclusionOption struct {
	// The scope of automatic upgrades to restrict in the exclusion window.
	Scope string `pulumi:"scope"`
}

// GetClusterMaintenancePolicyMaintenanceExclusionExclusionOptionInput is an input type that accepts GetClusterMaintenancePolicyMaintenanceExclusionExclusionOptionArgs and GetClusterMaintenancePolicyMaintenanceExclusionExclusionOptionOutput values.
// You can construct a concrete instance of `GetClusterMaintenancePolicyMaintenanceExclusionExclusionOptionInput` via:
//
//	GetClusterMaintenancePolicyMaintenanceExclusionExclusionOptionArgs{...}
type GetClusterMaintenancePolicyMaintenanceExclusionExclusionOptionInput interface {
	pulumi.Input

	ToGetClusterMaintenancePolicyMaintenanceExclusionExclusionOptionOutput() GetClusterMaintenancePolicyMaintenanceExclusionExclusionOptionOutput
	ToGetClusterMaintenancePolicyMaintenanceExclusionExclusionOptionOutputWithContext(context.Context) GetClusterMaintenancePolicyMaintenanceExclusionExclusionOptionOutput
}

type GetClusterMaintenancePolicyMaintenanceExclusionExclusionOptionArgs struct {
	// The scope of automatic upgrades to restrict in the exclusion window.
	Scope pulumi.StringInput `pulumi:"scope"`
}

func (GetClusterMaintenancePolicyMaintenanceExclusionExclusionOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterMaintenancePolicyMaintenanceExclusionExclusionOption)(nil)).Elem()
}

func (i GetClusterMaintenancePolicyMaintenanceExclusionExclusionOptionArgs) ToGetClusterMaintenancePolicyMaintenanceExclusionExclusionOptionOutput() GetClusterMaintenancePolicyMaintenanceExclusionExclusionOptionOutput {
	return i.ToGetClusterMaintenancePolicyMaintenanceExclusionExclusionOptionOutputWithContext(context.Background())
}

func (i GetClusterMaintenancePolicyMaintenanceExclusionExclusionOptionArgs) ToGetClusterMaintenancePolicyMaintenanceExclusionExclusionOptionOutputWithContext(ctx context.Context) GetClusterMaintenancePolicyMaintenanceExclusionExclusionOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterMaintenancePolicyMaintenanceExclusionExclusionOptionOutput)
}

// GetClusterMaintenancePolicyMaintenanceExclusionExclusionOptionArrayInput is an input type that accepts GetClusterMaintenancePolicyMaintenanceExclusionExclusionOptionArray and GetClusterMaintenancePolicyMaintenanceExclusionExclusionOptionArrayOutput values.
// You can construct a concrete instance of `GetClusterMaintenancePolicyMaintenanceExclusionExclusionOptionArrayInput` via:
//
//	GetClusterMaintenancePolicyMaintenanceExclusionExclusionOptionArray{ GetClusterMaintenancePolicyMaintenanceExclusionExclusionOptionArgs{...} }
type GetClusterMaintenancePolicyMaintenanceExclusionExclusionOptionArrayInput interface {
	pulumi.Input

	ToGetClusterMaintenancePolicyMaintenanceExclusionExclusionOptionArrayOutput() GetClusterMaintenancePolicyMaintenanceExclusionExclusionOptionArrayOutput
	ToGetClusterMaintenancePolicyMaintenanceExclusionExclusionOptionArrayOutputWithContext(context.Context) GetClusterMaintenancePolicyMaintenanceExclusionExclusionOptionArrayOutput
}

type GetClusterMaintenancePolicyMaintenanceExclusionExclusionOptionArray []GetClusterMaintenancePolicyMaintenanceExclusionExclusionOptionInput

func (GetClusterMaintenancePolicyMaintenanceExclusionExclusionOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterMaintenancePolicyMaintenanceExclusionExclusionOption)(nil)).Elem()
}

func (i GetClusterMaintenancePolicyMaintenanceExclusionExclusionOptionArray) ToGetClusterMaintenancePolicyMaintenanceExclusionExclusionOptionArrayOutput() GetClusterMaintenancePolicyMaintenanceExclusionExclusionOptionArrayOutput {
	return i.ToGetClusterMaintenancePolicyMaintenanceExclusionExclusionOptionArrayOutputWithContext(context.Background())
}

func (i GetClusterMaintenancePolicyMaintenanceExclusionExclusionOptionArray) ToGetClusterMaintenancePolicyMaintenanceExclusionExclusionOptionArrayOutputWithContext(ctx context.Context) GetClusterMaintenancePolicyMaintenanceExclusionExclusionOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterMaintenancePolicyMaintenanceExclusionExclusionOptionArrayOutput)
}

type GetClusterMaintenancePolicyMaintenanceExclusionExclusionOptionOutput struct{ *pulumi.OutputState }

func (GetClusterMaintenancePolicyMaintenanceExclusionExclusionOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterMaintenancePolicyMaintenanceExclusionExclusionOption)(nil)).Elem()
}

func (o GetClusterMaintenancePolicyMaintenanceExclusionExclusionOptionOutput) ToGetClusterMaintenancePolicyMaintenanceExclusionExclusionOptionOutput() GetClusterMaintenancePolicyMaintenanceExclusionExclusionOptionOutput {
	return o
}

func (o GetClusterMaintenancePolicyMaintenanceExclusionExclusionOptionOutput) ToGetClusterMaintenancePolicyMaintenanceExclusionExclusionOptionOutputWithContext(ctx context.Context) GetClusterMaintenancePolicyMaintenanceExclusionExclusionOptionOutput {
	return o
}

// The scope of automatic upgrades to restrict in the exclusion window.
func (o GetClusterMaintenancePolicyMaintenanceExclusionExclusionOptionOutput) Scope() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterMaintenancePolicyMaintenanceExclusionExclusionOption) string { return v.Scope }).(pulumi.StringOutput)
}

type GetClusterMaintenancePolicyMaintenanceExclusionExclusionOptionArrayOutput struct{ *pulumi.OutputState }

func (GetClusterMaintenancePolicyMaintenanceExclusionExclusionOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterMaintenancePolicyMaintenanceExclusionExclusionOption)(nil)).Elem()
}

func (o GetClusterMaintenancePolicyMaintenanceExclusionExclusionOptionArrayOutput) ToGetClusterMaintenancePolicyMaintenanceExclusionExclusionOptionArrayOutput() GetClusterMaintenancePolicyMaintenanceExclusionExclusionOptionArrayOutput {
	return o
}

func (o GetClusterMaintenancePolicyMaintenanceExclusionExclusionOptionArrayOutput) ToGetClusterMaintenancePolicyMaintenanceExclusionExclusionOptionArrayOutputWithContext(ctx context.Context) GetClusterMaintenancePolicyMaintenanceExclusionExclusionOptionArrayOutput {
	return o
}

func (o GetClusterMaintenancePolicyMaintenanceExclusionExclusionOptionArrayOutput) Index(i pulumi.IntInput) GetClusterMaintenancePolicyMaintenanceExclusionExclusionOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterMaintenancePolicyMaintenanceExclusionExclusionOption {
		return vs[0].([]GetClusterMaintenancePolicyMaintenanceExclusionExclusionOption)[vs[1].(int)]
	}).(GetClusterMaintenancePolicyMaintenanceExclusionExclusionOptionOutput)
}

type GetClusterMaintenancePolicyRecurringWindow struct {
	EndTime    string `pulumi:"endTime"`
	Recurrence string `pulumi:"recurrence"`
	StartTime  string `pulumi:"startTime"`
}

// GetClusterMaintenancePolicyRecurringWindowInput is an input type that accepts GetClusterMaintenancePolicyRecurringWindowArgs and GetClusterMaintenancePolicyRecurringWindowOutput values.
// You can construct a concrete instance of `GetClusterMaintenancePolicyRecurringWindowInput` via:
//
//	GetClusterMaintenancePolicyRecurringWindowArgs{...}
type GetClusterMaintenancePolicyRecurringWindowInput interface {
	pulumi.Input

	ToGetClusterMaintenancePolicyRecurringWindowOutput() GetClusterMaintenancePolicyRecurringWindowOutput
	ToGetClusterMaintenancePolicyRecurringWindowOutputWithContext(context.Context) GetClusterMaintenancePolicyRecurringWindowOutput
}

type GetClusterMaintenancePolicyRecurringWindowArgs struct {
	EndTime    pulumi.StringInput `pulumi:"endTime"`
	Recurrence pulumi.StringInput `pulumi:"recurrence"`
	StartTime  pulumi.StringInput `pulumi:"startTime"`
}

func (GetClusterMaintenancePolicyRecurringWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterMaintenancePolicyRecurringWindow)(nil)).Elem()
}

func (i GetClusterMaintenancePolicyRecurringWindowArgs) ToGetClusterMaintenancePolicyRecurringWindowOutput() GetClusterMaintenancePolicyRecurringWindowOutput {
	return i.ToGetClusterMaintenancePolicyRecurringWindowOutputWithContext(context.Background())
}

func (i GetClusterMaintenancePolicyRecurringWindowArgs) ToGetClusterMaintenancePolicyRecurringWindowOutputWithContext(ctx context.Context) GetClusterMaintenancePolicyRecurringWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterMaintenancePolicyRecurringWindowOutput)
}

// GetClusterMaintenancePolicyRecurringWindowArrayInput is an input type that accepts GetClusterMaintenancePolicyRecurringWindowArray and GetClusterMaintenancePolicyRecurringWindowArrayOutput values.
// You can construct a concrete instance of `GetClusterMaintenancePolicyRecurringWindowArrayInput` via:
//
//	GetClusterMaintenancePolicyRecurringWindowArray{ GetClusterMaintenancePolicyRecurringWindowArgs{...} }
type GetClusterMaintenancePolicyRecurringWindowArrayInput interface {
	pulumi.Input

	ToGetClusterMaintenancePolicyRecurringWindowArrayOutput() GetClusterMaintenancePolicyRecurringWindowArrayOutput
	ToGetClusterMaintenancePolicyRecurringWindowArrayOutputWithContext(context.Context) GetClusterMaintenancePolicyRecurringWindowArrayOutput
}

type GetClusterMaintenancePolicyRecurringWindowArray []GetClusterMaintenancePolicyRecurringWindowInput

func (GetClusterMaintenancePolicyRecurringWindowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterMaintenancePolicyRecurringWindow)(nil)).Elem()
}

func (i GetClusterMaintenancePolicyRecurringWindowArray) ToGetClusterMaintenancePolicyRecurringWindowArrayOutput() GetClusterMaintenancePolicyRecurringWindowArrayOutput {
	return i.ToGetClusterMaintenancePolicyRecurringWindowArrayOutputWithContext(context.Background())
}

func (i GetClusterMaintenancePolicyRecurringWindowArray) ToGetClusterMaintenancePolicyRecurringWindowArrayOutputWithContext(ctx context.Context) GetClusterMaintenancePolicyRecurringWindowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterMaintenancePolicyRecurringWindowArrayOutput)
}

type GetClusterMaintenancePolicyRecurringWindowOutput struct{ *pulumi.OutputState }

func (GetClusterMaintenancePolicyRecurringWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterMaintenancePolicyRecurringWindow)(nil)).Elem()
}

func (o GetClusterMaintenancePolicyRecurringWindowOutput) ToGetClusterMaintenancePolicyRecurringWindowOutput() GetClusterMaintenancePolicyRecurringWindowOutput {
	return o
}

func (o GetClusterMaintenancePolicyRecurringWindowOutput) ToGetClusterMaintenancePolicyRecurringWindowOutputWithContext(ctx context.Context) GetClusterMaintenancePolicyRecurringWindowOutput {
	return o
}

func (o GetClusterMaintenancePolicyRecurringWindowOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterMaintenancePolicyRecurringWindow) string { return v.EndTime }).(pulumi.StringOutput)
}

func (o GetClusterMaintenancePolicyRecurringWindowOutput) Recurrence() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterMaintenancePolicyRecurringWindow) string { return v.Recurrence }).(pulumi.StringOutput)
}

func (o GetClusterMaintenancePolicyRecurringWindowOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterMaintenancePolicyRecurringWindow) string { return v.StartTime }).(pulumi.StringOutput)
}

type GetClusterMaintenancePolicyRecurringWindowArrayOutput struct{ *pulumi.OutputState }

func (GetClusterMaintenancePolicyRecurringWindowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterMaintenancePolicyRecurringWindow)(nil)).Elem()
}

func (o GetClusterMaintenancePolicyRecurringWindowArrayOutput) ToGetClusterMaintenancePolicyRecurringWindowArrayOutput() GetClusterMaintenancePolicyRecurringWindowArrayOutput {
	return o
}

func (o GetClusterMaintenancePolicyRecurringWindowArrayOutput) ToGetClusterMaintenancePolicyRecurringWindowArrayOutputWithContext(ctx context.Context) GetClusterMaintenancePolicyRecurringWindowArrayOutput {
	return o
}

func (o GetClusterMaintenancePolicyRecurringWindowArrayOutput) Index(i pulumi.IntInput) GetClusterMaintenancePolicyRecurringWindowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterMaintenancePolicyRecurringWindow {
		return vs[0].([]GetClusterMaintenancePolicyRecurringWindow)[vs[1].(int)]
	}).(GetClusterMaintenancePolicyRecurringWindowOutput)
}

type GetClusterMasterAuth struct {
	// Base64 encoded public certificate used by clients to authenticate to the cluster endpoint.
	ClientCertificate string `pulumi:"clientCertificate"`
	// Whether client certificate authorization is enabled for this cluster.
	ClientCertificateConfigs []GetClusterMasterAuthClientCertificateConfig `pulumi:"clientCertificateConfigs"`
	// Base64 encoded private key used by clients to authenticate to the cluster endpoint.
	ClientKey string `pulumi:"clientKey"`
	// Base64 encoded public certificate that is the root of trust for the cluster.
	ClusterCaCertificate string `pulumi:"clusterCaCertificate"`
}

// GetClusterMasterAuthInput is an input type that accepts GetClusterMasterAuthArgs and GetClusterMasterAuthOutput values.
// You can construct a concrete instance of `GetClusterMasterAuthInput` via:
//
//	GetClusterMasterAuthArgs{...}
type GetClusterMasterAuthInput interface {
	pulumi.Input

	ToGetClusterMasterAuthOutput() GetClusterMasterAuthOutput
	ToGetClusterMasterAuthOutputWithContext(context.Context) GetClusterMasterAuthOutput
}

type GetClusterMasterAuthArgs struct {
	// Base64 encoded public certificate used by clients to authenticate to the cluster endpoint.
	ClientCertificate pulumi.StringInput `pulumi:"clientCertificate"`
	// Whether client certificate authorization is enabled for this cluster.
	ClientCertificateConfigs GetClusterMasterAuthClientCertificateConfigArrayInput `pulumi:"clientCertificateConfigs"`
	// Base64 encoded private key used by clients to authenticate to the cluster endpoint.
	ClientKey pulumi.StringInput `pulumi:"clientKey"`
	// Base64 encoded public certificate that is the root of trust for the cluster.
	ClusterCaCertificate pulumi.StringInput `pulumi:"clusterCaCertificate"`
}

func (GetClusterMasterAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterMasterAuth)(nil)).Elem()
}

func (i GetClusterMasterAuthArgs) ToGetClusterMasterAuthOutput() GetClusterMasterAuthOutput {
	return i.ToGetClusterMasterAuthOutputWithContext(context.Background())
}

func (i GetClusterMasterAuthArgs) ToGetClusterMasterAuthOutputWithContext(ctx context.Context) GetClusterMasterAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterMasterAuthOutput)
}

// GetClusterMasterAuthArrayInput is an input type that accepts GetClusterMasterAuthArray and GetClusterMasterAuthArrayOutput values.
// You can construct a concrete instance of `GetClusterMasterAuthArrayInput` via:
//
//	GetClusterMasterAuthArray{ GetClusterMasterAuthArgs{...} }
type GetClusterMasterAuthArrayInput interface {
	pulumi.Input

	ToGetClusterMasterAuthArrayOutput() GetClusterMasterAuthArrayOutput
	ToGetClusterMasterAuthArrayOutputWithContext(context.Context) GetClusterMasterAuthArrayOutput
}

type GetClusterMasterAuthArray []GetClusterMasterAuthInput

func (GetClusterMasterAuthArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterMasterAuth)(nil)).Elem()
}

func (i GetClusterMasterAuthArray) ToGetClusterMasterAuthArrayOutput() GetClusterMasterAuthArrayOutput {
	return i.ToGetClusterMasterAuthArrayOutputWithContext(context.Background())
}

func (i GetClusterMasterAuthArray) ToGetClusterMasterAuthArrayOutputWithContext(ctx context.Context) GetClusterMasterAuthArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterMasterAuthArrayOutput)
}

type GetClusterMasterAuthOutput struct{ *pulumi.OutputState }

func (GetClusterMasterAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterMasterAuth)(nil)).Elem()
}

func (o GetClusterMasterAuthOutput) ToGetClusterMasterAuthOutput() GetClusterMasterAuthOutput {
	return o
}

func (o GetClusterMasterAuthOutput) ToGetClusterMasterAuthOutputWithContext(ctx context.Context) GetClusterMasterAuthOutput {
	return o
}

// Base64 encoded public certificate used by clients to authenticate to the cluster endpoint.
func (o GetClusterMasterAuthOutput) ClientCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterMasterAuth) string { return v.ClientCertificate }).(pulumi.StringOutput)
}

// Whether client certificate authorization is enabled for this cluster.
func (o GetClusterMasterAuthOutput) ClientCertificateConfigs() GetClusterMasterAuthClientCertificateConfigArrayOutput {
	return o.ApplyT(func(v GetClusterMasterAuth) []GetClusterMasterAuthClientCertificateConfig {
		return v.ClientCertificateConfigs
	}).(GetClusterMasterAuthClientCertificateConfigArrayOutput)
}

// Base64 encoded private key used by clients to authenticate to the cluster endpoint.
func (o GetClusterMasterAuthOutput) ClientKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterMasterAuth) string { return v.ClientKey }).(pulumi.StringOutput)
}

// Base64 encoded public certificate that is the root of trust for the cluster.
func (o GetClusterMasterAuthOutput) ClusterCaCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterMasterAuth) string { return v.ClusterCaCertificate }).(pulumi.StringOutput)
}

type GetClusterMasterAuthArrayOutput struct{ *pulumi.OutputState }

func (GetClusterMasterAuthArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterMasterAuth)(nil)).Elem()
}

func (o GetClusterMasterAuthArrayOutput) ToGetClusterMasterAuthArrayOutput() GetClusterMasterAuthArrayOutput {
	return o
}

func (o GetClusterMasterAuthArrayOutput) ToGetClusterMasterAuthArrayOutputWithContext(ctx context.Context) GetClusterMasterAuthArrayOutput {
	return o
}

func (o GetClusterMasterAuthArrayOutput) Index(i pulumi.IntInput) GetClusterMasterAuthOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterMasterAuth {
		return vs[0].([]GetClusterMasterAuth)[vs[1].(int)]
	}).(GetClusterMasterAuthOutput)
}

type GetClusterMasterAuthClientCertificateConfig struct {
	// Whether client certificate authorization is enabled for this cluster.
	IssueClientCertificate bool `pulumi:"issueClientCertificate"`
}

// GetClusterMasterAuthClientCertificateConfigInput is an input type that accepts GetClusterMasterAuthClientCertificateConfigArgs and GetClusterMasterAuthClientCertificateConfigOutput values.
// You can construct a concrete instance of `GetClusterMasterAuthClientCertificateConfigInput` via:
//
//	GetClusterMasterAuthClientCertificateConfigArgs{...}
type GetClusterMasterAuthClientCertificateConfigInput interface {
	pulumi.Input

	ToGetClusterMasterAuthClientCertificateConfigOutput() GetClusterMasterAuthClientCertificateConfigOutput
	ToGetClusterMasterAuthClientCertificateConfigOutputWithContext(context.Context) GetClusterMasterAuthClientCertificateConfigOutput
}

type GetClusterMasterAuthClientCertificateConfigArgs struct {
	// Whether client certificate authorization is enabled for this cluster.
	IssueClientCertificate pulumi.BoolInput `pulumi:"issueClientCertificate"`
}

func (GetClusterMasterAuthClientCertificateConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterMasterAuthClientCertificateConfig)(nil)).Elem()
}

func (i GetClusterMasterAuthClientCertificateConfigArgs) ToGetClusterMasterAuthClientCertificateConfigOutput() GetClusterMasterAuthClientCertificateConfigOutput {
	return i.ToGetClusterMasterAuthClientCertificateConfigOutputWithContext(context.Background())
}

func (i GetClusterMasterAuthClientCertificateConfigArgs) ToGetClusterMasterAuthClientCertificateConfigOutputWithContext(ctx context.Context) GetClusterMasterAuthClientCertificateConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterMasterAuthClientCertificateConfigOutput)
}

// GetClusterMasterAuthClientCertificateConfigArrayInput is an input type that accepts GetClusterMasterAuthClientCertificateConfigArray and GetClusterMasterAuthClientCertificateConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterMasterAuthClientCertificateConfigArrayInput` via:
//
//	GetClusterMasterAuthClientCertificateConfigArray{ GetClusterMasterAuthClientCertificateConfigArgs{...} }
type GetClusterMasterAuthClientCertificateConfigArrayInput interface {
	pulumi.Input

	ToGetClusterMasterAuthClientCertificateConfigArrayOutput() GetClusterMasterAuthClientCertificateConfigArrayOutput
	ToGetClusterMasterAuthClientCertificateConfigArrayOutputWithContext(context.Context) GetClusterMasterAuthClientCertificateConfigArrayOutput
}

type GetClusterMasterAuthClientCertificateConfigArray []GetClusterMasterAuthClientCertificateConfigInput

func (GetClusterMasterAuthClientCertificateConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterMasterAuthClientCertificateConfig)(nil)).Elem()
}

func (i GetClusterMasterAuthClientCertificateConfigArray) ToGetClusterMasterAuthClientCertificateConfigArrayOutput() GetClusterMasterAuthClientCertificateConfigArrayOutput {
	return i.ToGetClusterMasterAuthClientCertificateConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterMasterAuthClientCertificateConfigArray) ToGetClusterMasterAuthClientCertificateConfigArrayOutputWithContext(ctx context.Context) GetClusterMasterAuthClientCertificateConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterMasterAuthClientCertificateConfigArrayOutput)
}

type GetClusterMasterAuthClientCertificateConfigOutput struct{ *pulumi.OutputState }

func (GetClusterMasterAuthClientCertificateConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterMasterAuthClientCertificateConfig)(nil)).Elem()
}

func (o GetClusterMasterAuthClientCertificateConfigOutput) ToGetClusterMasterAuthClientCertificateConfigOutput() GetClusterMasterAuthClientCertificateConfigOutput {
	return o
}

func (o GetClusterMasterAuthClientCertificateConfigOutput) ToGetClusterMasterAuthClientCertificateConfigOutputWithContext(ctx context.Context) GetClusterMasterAuthClientCertificateConfigOutput {
	return o
}

// Whether client certificate authorization is enabled for this cluster.
func (o GetClusterMasterAuthClientCertificateConfigOutput) IssueClientCertificate() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterMasterAuthClientCertificateConfig) bool { return v.IssueClientCertificate }).(pulumi.BoolOutput)
}

type GetClusterMasterAuthClientCertificateConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterMasterAuthClientCertificateConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterMasterAuthClientCertificateConfig)(nil)).Elem()
}

func (o GetClusterMasterAuthClientCertificateConfigArrayOutput) ToGetClusterMasterAuthClientCertificateConfigArrayOutput() GetClusterMasterAuthClientCertificateConfigArrayOutput {
	return o
}

func (o GetClusterMasterAuthClientCertificateConfigArrayOutput) ToGetClusterMasterAuthClientCertificateConfigArrayOutputWithContext(ctx context.Context) GetClusterMasterAuthClientCertificateConfigArrayOutput {
	return o
}

func (o GetClusterMasterAuthClientCertificateConfigArrayOutput) Index(i pulumi.IntInput) GetClusterMasterAuthClientCertificateConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterMasterAuthClientCertificateConfig {
		return vs[0].([]GetClusterMasterAuthClientCertificateConfig)[vs[1].(int)]
	}).(GetClusterMasterAuthClientCertificateConfigOutput)
}

type GetClusterMasterAuthorizedNetworksConfig struct {
	// External networks that can access the Kubernetes cluster master through HTTPS.
	CidrBlocks []GetClusterMasterAuthorizedNetworksConfigCidrBlock `pulumi:"cidrBlocks"`
	// Whether Kubernetes master is accessible via Google Compute Engine Public IPs.
	GcpPublicCidrsAccessEnabled bool `pulumi:"gcpPublicCidrsAccessEnabled"`
}

// GetClusterMasterAuthorizedNetworksConfigInput is an input type that accepts GetClusterMasterAuthorizedNetworksConfigArgs and GetClusterMasterAuthorizedNetworksConfigOutput values.
// You can construct a concrete instance of `GetClusterMasterAuthorizedNetworksConfigInput` via:
//
//	GetClusterMasterAuthorizedNetworksConfigArgs{...}
type GetClusterMasterAuthorizedNetworksConfigInput interface {
	pulumi.Input

	ToGetClusterMasterAuthorizedNetworksConfigOutput() GetClusterMasterAuthorizedNetworksConfigOutput
	ToGetClusterMasterAuthorizedNetworksConfigOutputWithContext(context.Context) GetClusterMasterAuthorizedNetworksConfigOutput
}

type GetClusterMasterAuthorizedNetworksConfigArgs struct {
	// External networks that can access the Kubernetes cluster master through HTTPS.
	CidrBlocks GetClusterMasterAuthorizedNetworksConfigCidrBlockArrayInput `pulumi:"cidrBlocks"`
	// Whether Kubernetes master is accessible via Google Compute Engine Public IPs.
	GcpPublicCidrsAccessEnabled pulumi.BoolInput `pulumi:"gcpPublicCidrsAccessEnabled"`
}

func (GetClusterMasterAuthorizedNetworksConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterMasterAuthorizedNetworksConfig)(nil)).Elem()
}

func (i GetClusterMasterAuthorizedNetworksConfigArgs) ToGetClusterMasterAuthorizedNetworksConfigOutput() GetClusterMasterAuthorizedNetworksConfigOutput {
	return i.ToGetClusterMasterAuthorizedNetworksConfigOutputWithContext(context.Background())
}

func (i GetClusterMasterAuthorizedNetworksConfigArgs) ToGetClusterMasterAuthorizedNetworksConfigOutputWithContext(ctx context.Context) GetClusterMasterAuthorizedNetworksConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterMasterAuthorizedNetworksConfigOutput)
}

// GetClusterMasterAuthorizedNetworksConfigArrayInput is an input type that accepts GetClusterMasterAuthorizedNetworksConfigArray and GetClusterMasterAuthorizedNetworksConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterMasterAuthorizedNetworksConfigArrayInput` via:
//
//	GetClusterMasterAuthorizedNetworksConfigArray{ GetClusterMasterAuthorizedNetworksConfigArgs{...} }
type GetClusterMasterAuthorizedNetworksConfigArrayInput interface {
	pulumi.Input

	ToGetClusterMasterAuthorizedNetworksConfigArrayOutput() GetClusterMasterAuthorizedNetworksConfigArrayOutput
	ToGetClusterMasterAuthorizedNetworksConfigArrayOutputWithContext(context.Context) GetClusterMasterAuthorizedNetworksConfigArrayOutput
}

type GetClusterMasterAuthorizedNetworksConfigArray []GetClusterMasterAuthorizedNetworksConfigInput

func (GetClusterMasterAuthorizedNetworksConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterMasterAuthorizedNetworksConfig)(nil)).Elem()
}

func (i GetClusterMasterAuthorizedNetworksConfigArray) ToGetClusterMasterAuthorizedNetworksConfigArrayOutput() GetClusterMasterAuthorizedNetworksConfigArrayOutput {
	return i.ToGetClusterMasterAuthorizedNetworksConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterMasterAuthorizedNetworksConfigArray) ToGetClusterMasterAuthorizedNetworksConfigArrayOutputWithContext(ctx context.Context) GetClusterMasterAuthorizedNetworksConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterMasterAuthorizedNetworksConfigArrayOutput)
}

type GetClusterMasterAuthorizedNetworksConfigOutput struct{ *pulumi.OutputState }

func (GetClusterMasterAuthorizedNetworksConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterMasterAuthorizedNetworksConfig)(nil)).Elem()
}

func (o GetClusterMasterAuthorizedNetworksConfigOutput) ToGetClusterMasterAuthorizedNetworksConfigOutput() GetClusterMasterAuthorizedNetworksConfigOutput {
	return o
}

func (o GetClusterMasterAuthorizedNetworksConfigOutput) ToGetClusterMasterAuthorizedNetworksConfigOutputWithContext(ctx context.Context) GetClusterMasterAuthorizedNetworksConfigOutput {
	return o
}

// External networks that can access the Kubernetes cluster master through HTTPS.
func (o GetClusterMasterAuthorizedNetworksConfigOutput) CidrBlocks() GetClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput {
	return o.ApplyT(func(v GetClusterMasterAuthorizedNetworksConfig) []GetClusterMasterAuthorizedNetworksConfigCidrBlock {
		return v.CidrBlocks
	}).(GetClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput)
}

// Whether Kubernetes master is accessible via Google Compute Engine Public IPs.
func (o GetClusterMasterAuthorizedNetworksConfigOutput) GcpPublicCidrsAccessEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterMasterAuthorizedNetworksConfig) bool { return v.GcpPublicCidrsAccessEnabled }).(pulumi.BoolOutput)
}

type GetClusterMasterAuthorizedNetworksConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterMasterAuthorizedNetworksConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterMasterAuthorizedNetworksConfig)(nil)).Elem()
}

func (o GetClusterMasterAuthorizedNetworksConfigArrayOutput) ToGetClusterMasterAuthorizedNetworksConfigArrayOutput() GetClusterMasterAuthorizedNetworksConfigArrayOutput {
	return o
}

func (o GetClusterMasterAuthorizedNetworksConfigArrayOutput) ToGetClusterMasterAuthorizedNetworksConfigArrayOutputWithContext(ctx context.Context) GetClusterMasterAuthorizedNetworksConfigArrayOutput {
	return o
}

func (o GetClusterMasterAuthorizedNetworksConfigArrayOutput) Index(i pulumi.IntInput) GetClusterMasterAuthorizedNetworksConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterMasterAuthorizedNetworksConfig {
		return vs[0].([]GetClusterMasterAuthorizedNetworksConfig)[vs[1].(int)]
	}).(GetClusterMasterAuthorizedNetworksConfigOutput)
}

type GetClusterMasterAuthorizedNetworksConfigCidrBlock struct {
	// External network that can access Kubernetes master through HTTPS. Must be specified in CIDR notation.
	CidrBlock string `pulumi:"cidrBlock"`
	// Field for users to identify CIDR blocks.
	DisplayName string `pulumi:"displayName"`
}

// GetClusterMasterAuthorizedNetworksConfigCidrBlockInput is an input type that accepts GetClusterMasterAuthorizedNetworksConfigCidrBlockArgs and GetClusterMasterAuthorizedNetworksConfigCidrBlockOutput values.
// You can construct a concrete instance of `GetClusterMasterAuthorizedNetworksConfigCidrBlockInput` via:
//
//	GetClusterMasterAuthorizedNetworksConfigCidrBlockArgs{...}
type GetClusterMasterAuthorizedNetworksConfigCidrBlockInput interface {
	pulumi.Input

	ToGetClusterMasterAuthorizedNetworksConfigCidrBlockOutput() GetClusterMasterAuthorizedNetworksConfigCidrBlockOutput
	ToGetClusterMasterAuthorizedNetworksConfigCidrBlockOutputWithContext(context.Context) GetClusterMasterAuthorizedNetworksConfigCidrBlockOutput
}

type GetClusterMasterAuthorizedNetworksConfigCidrBlockArgs struct {
	// External network that can access Kubernetes master through HTTPS. Must be specified in CIDR notation.
	CidrBlock pulumi.StringInput `pulumi:"cidrBlock"`
	// Field for users to identify CIDR blocks.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
}

func (GetClusterMasterAuthorizedNetworksConfigCidrBlockArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterMasterAuthorizedNetworksConfigCidrBlock)(nil)).Elem()
}

func (i GetClusterMasterAuthorizedNetworksConfigCidrBlockArgs) ToGetClusterMasterAuthorizedNetworksConfigCidrBlockOutput() GetClusterMasterAuthorizedNetworksConfigCidrBlockOutput {
	return i.ToGetClusterMasterAuthorizedNetworksConfigCidrBlockOutputWithContext(context.Background())
}

func (i GetClusterMasterAuthorizedNetworksConfigCidrBlockArgs) ToGetClusterMasterAuthorizedNetworksConfigCidrBlockOutputWithContext(ctx context.Context) GetClusterMasterAuthorizedNetworksConfigCidrBlockOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterMasterAuthorizedNetworksConfigCidrBlockOutput)
}

// GetClusterMasterAuthorizedNetworksConfigCidrBlockArrayInput is an input type that accepts GetClusterMasterAuthorizedNetworksConfigCidrBlockArray and GetClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput values.
// You can construct a concrete instance of `GetClusterMasterAuthorizedNetworksConfigCidrBlockArrayInput` via:
//
//	GetClusterMasterAuthorizedNetworksConfigCidrBlockArray{ GetClusterMasterAuthorizedNetworksConfigCidrBlockArgs{...} }
type GetClusterMasterAuthorizedNetworksConfigCidrBlockArrayInput interface {
	pulumi.Input

	ToGetClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput() GetClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput
	ToGetClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutputWithContext(context.Context) GetClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput
}

type GetClusterMasterAuthorizedNetworksConfigCidrBlockArray []GetClusterMasterAuthorizedNetworksConfigCidrBlockInput

func (GetClusterMasterAuthorizedNetworksConfigCidrBlockArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterMasterAuthorizedNetworksConfigCidrBlock)(nil)).Elem()
}

func (i GetClusterMasterAuthorizedNetworksConfigCidrBlockArray) ToGetClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput() GetClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput {
	return i.ToGetClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutputWithContext(context.Background())
}

func (i GetClusterMasterAuthorizedNetworksConfigCidrBlockArray) ToGetClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutputWithContext(ctx context.Context) GetClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput)
}

type GetClusterMasterAuthorizedNetworksConfigCidrBlockOutput struct{ *pulumi.OutputState }

func (GetClusterMasterAuthorizedNetworksConfigCidrBlockOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterMasterAuthorizedNetworksConfigCidrBlock)(nil)).Elem()
}

func (o GetClusterMasterAuthorizedNetworksConfigCidrBlockOutput) ToGetClusterMasterAuthorizedNetworksConfigCidrBlockOutput() GetClusterMasterAuthorizedNetworksConfigCidrBlockOutput {
	return o
}

func (o GetClusterMasterAuthorizedNetworksConfigCidrBlockOutput) ToGetClusterMasterAuthorizedNetworksConfigCidrBlockOutputWithContext(ctx context.Context) GetClusterMasterAuthorizedNetworksConfigCidrBlockOutput {
	return o
}

// External network that can access Kubernetes master through HTTPS. Must be specified in CIDR notation.
func (o GetClusterMasterAuthorizedNetworksConfigCidrBlockOutput) CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterMasterAuthorizedNetworksConfigCidrBlock) string { return v.CidrBlock }).(pulumi.StringOutput)
}

// Field for users to identify CIDR blocks.
func (o GetClusterMasterAuthorizedNetworksConfigCidrBlockOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterMasterAuthorizedNetworksConfigCidrBlock) string { return v.DisplayName }).(pulumi.StringOutput)
}

type GetClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput struct{ *pulumi.OutputState }

func (GetClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterMasterAuthorizedNetworksConfigCidrBlock)(nil)).Elem()
}

func (o GetClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput) ToGetClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput() GetClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput {
	return o
}

func (o GetClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput) ToGetClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutputWithContext(ctx context.Context) GetClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput {
	return o
}

func (o GetClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput) Index(i pulumi.IntInput) GetClusterMasterAuthorizedNetworksConfigCidrBlockOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterMasterAuthorizedNetworksConfigCidrBlock {
		return vs[0].([]GetClusterMasterAuthorizedNetworksConfigCidrBlock)[vs[1].(int)]
	}).(GetClusterMasterAuthorizedNetworksConfigCidrBlockOutput)
}

type GetClusterMeshCertificate struct {
	// When enabled the GKE Workload Identity Certificates controller and node agent will be deployed in the cluster.
	EnableCertificates bool `pulumi:"enableCertificates"`
}

// GetClusterMeshCertificateInput is an input type that accepts GetClusterMeshCertificateArgs and GetClusterMeshCertificateOutput values.
// You can construct a concrete instance of `GetClusterMeshCertificateInput` via:
//
//	GetClusterMeshCertificateArgs{...}
type GetClusterMeshCertificateInput interface {
	pulumi.Input

	ToGetClusterMeshCertificateOutput() GetClusterMeshCertificateOutput
	ToGetClusterMeshCertificateOutputWithContext(context.Context) GetClusterMeshCertificateOutput
}

type GetClusterMeshCertificateArgs struct {
	// When enabled the GKE Workload Identity Certificates controller and node agent will be deployed in the cluster.
	EnableCertificates pulumi.BoolInput `pulumi:"enableCertificates"`
}

func (GetClusterMeshCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterMeshCertificate)(nil)).Elem()
}

func (i GetClusterMeshCertificateArgs) ToGetClusterMeshCertificateOutput() GetClusterMeshCertificateOutput {
	return i.ToGetClusterMeshCertificateOutputWithContext(context.Background())
}

func (i GetClusterMeshCertificateArgs) ToGetClusterMeshCertificateOutputWithContext(ctx context.Context) GetClusterMeshCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterMeshCertificateOutput)
}

// GetClusterMeshCertificateArrayInput is an input type that accepts GetClusterMeshCertificateArray and GetClusterMeshCertificateArrayOutput values.
// You can construct a concrete instance of `GetClusterMeshCertificateArrayInput` via:
//
//	GetClusterMeshCertificateArray{ GetClusterMeshCertificateArgs{...} }
type GetClusterMeshCertificateArrayInput interface {
	pulumi.Input

	ToGetClusterMeshCertificateArrayOutput() GetClusterMeshCertificateArrayOutput
	ToGetClusterMeshCertificateArrayOutputWithContext(context.Context) GetClusterMeshCertificateArrayOutput
}

type GetClusterMeshCertificateArray []GetClusterMeshCertificateInput

func (GetClusterMeshCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterMeshCertificate)(nil)).Elem()
}

func (i GetClusterMeshCertificateArray) ToGetClusterMeshCertificateArrayOutput() GetClusterMeshCertificateArrayOutput {
	return i.ToGetClusterMeshCertificateArrayOutputWithContext(context.Background())
}

func (i GetClusterMeshCertificateArray) ToGetClusterMeshCertificateArrayOutputWithContext(ctx context.Context) GetClusterMeshCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterMeshCertificateArrayOutput)
}

type GetClusterMeshCertificateOutput struct{ *pulumi.OutputState }

func (GetClusterMeshCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterMeshCertificate)(nil)).Elem()
}

func (o GetClusterMeshCertificateOutput) ToGetClusterMeshCertificateOutput() GetClusterMeshCertificateOutput {
	return o
}

func (o GetClusterMeshCertificateOutput) ToGetClusterMeshCertificateOutputWithContext(ctx context.Context) GetClusterMeshCertificateOutput {
	return o
}

// When enabled the GKE Workload Identity Certificates controller and node agent will be deployed in the cluster.
func (o GetClusterMeshCertificateOutput) EnableCertificates() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterMeshCertificate) bool { return v.EnableCertificates }).(pulumi.BoolOutput)
}

type GetClusterMeshCertificateArrayOutput struct{ *pulumi.OutputState }

func (GetClusterMeshCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterMeshCertificate)(nil)).Elem()
}

func (o GetClusterMeshCertificateArrayOutput) ToGetClusterMeshCertificateArrayOutput() GetClusterMeshCertificateArrayOutput {
	return o
}

func (o GetClusterMeshCertificateArrayOutput) ToGetClusterMeshCertificateArrayOutputWithContext(ctx context.Context) GetClusterMeshCertificateArrayOutput {
	return o
}

func (o GetClusterMeshCertificateArrayOutput) Index(i pulumi.IntInput) GetClusterMeshCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterMeshCertificate {
		return vs[0].([]GetClusterMeshCertificate)[vs[1].(int)]
	}).(GetClusterMeshCertificateOutput)
}

type GetClusterMonitoringConfig struct {
	// Configuration of Advanced Datapath Observability features.
	AdvancedDatapathObservabilityConfigs []GetClusterMonitoringConfigAdvancedDatapathObservabilityConfig `pulumi:"advancedDatapathObservabilityConfigs"`
	// GKE components exposing metrics. Valid values include SYSTEM_COMPONENTS, APISERVER, SCHEDULER, CONTROLLER_MANAGER, STORAGE, HPA, POD, DAEMONSET, DEPLOYMENT, STATEFULSET and WORKLOADS.
	EnableComponents []string `pulumi:"enableComponents"`
	// Configuration for Google Cloud Managed Services for Prometheus.
	ManagedPrometheuses []GetClusterMonitoringConfigManagedPrometheus `pulumi:"managedPrometheuses"`
}

// GetClusterMonitoringConfigInput is an input type that accepts GetClusterMonitoringConfigArgs and GetClusterMonitoringConfigOutput values.
// You can construct a concrete instance of `GetClusterMonitoringConfigInput` via:
//
//	GetClusterMonitoringConfigArgs{...}
type GetClusterMonitoringConfigInput interface {
	pulumi.Input

	ToGetClusterMonitoringConfigOutput() GetClusterMonitoringConfigOutput
	ToGetClusterMonitoringConfigOutputWithContext(context.Context) GetClusterMonitoringConfigOutput
}

type GetClusterMonitoringConfigArgs struct {
	// Configuration of Advanced Datapath Observability features.
	AdvancedDatapathObservabilityConfigs GetClusterMonitoringConfigAdvancedDatapathObservabilityConfigArrayInput `pulumi:"advancedDatapathObservabilityConfigs"`
	// GKE components exposing metrics. Valid values include SYSTEM_COMPONENTS, APISERVER, SCHEDULER, CONTROLLER_MANAGER, STORAGE, HPA, POD, DAEMONSET, DEPLOYMENT, STATEFULSET and WORKLOADS.
	EnableComponents pulumi.StringArrayInput `pulumi:"enableComponents"`
	// Configuration for Google Cloud Managed Services for Prometheus.
	ManagedPrometheuses GetClusterMonitoringConfigManagedPrometheusArrayInput `pulumi:"managedPrometheuses"`
}

func (GetClusterMonitoringConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterMonitoringConfig)(nil)).Elem()
}

func (i GetClusterMonitoringConfigArgs) ToGetClusterMonitoringConfigOutput() GetClusterMonitoringConfigOutput {
	return i.ToGetClusterMonitoringConfigOutputWithContext(context.Background())
}

func (i GetClusterMonitoringConfigArgs) ToGetClusterMonitoringConfigOutputWithContext(ctx context.Context) GetClusterMonitoringConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterMonitoringConfigOutput)
}

// GetClusterMonitoringConfigArrayInput is an input type that accepts GetClusterMonitoringConfigArray and GetClusterMonitoringConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterMonitoringConfigArrayInput` via:
//
//	GetClusterMonitoringConfigArray{ GetClusterMonitoringConfigArgs{...} }
type GetClusterMonitoringConfigArrayInput interface {
	pulumi.Input

	ToGetClusterMonitoringConfigArrayOutput() GetClusterMonitoringConfigArrayOutput
	ToGetClusterMonitoringConfigArrayOutputWithContext(context.Context) GetClusterMonitoringConfigArrayOutput
}

type GetClusterMonitoringConfigArray []GetClusterMonitoringConfigInput

func (GetClusterMonitoringConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterMonitoringConfig)(nil)).Elem()
}

func (i GetClusterMonitoringConfigArray) ToGetClusterMonitoringConfigArrayOutput() GetClusterMonitoringConfigArrayOutput {
	return i.ToGetClusterMonitoringConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterMonitoringConfigArray) ToGetClusterMonitoringConfigArrayOutputWithContext(ctx context.Context) GetClusterMonitoringConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterMonitoringConfigArrayOutput)
}

type GetClusterMonitoringConfigOutput struct{ *pulumi.OutputState }

func (GetClusterMonitoringConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterMonitoringConfig)(nil)).Elem()
}

func (o GetClusterMonitoringConfigOutput) ToGetClusterMonitoringConfigOutput() GetClusterMonitoringConfigOutput {
	return o
}

func (o GetClusterMonitoringConfigOutput) ToGetClusterMonitoringConfigOutputWithContext(ctx context.Context) GetClusterMonitoringConfigOutput {
	return o
}

// Configuration of Advanced Datapath Observability features.
func (o GetClusterMonitoringConfigOutput) AdvancedDatapathObservabilityConfigs() GetClusterMonitoringConfigAdvancedDatapathObservabilityConfigArrayOutput {
	return o.ApplyT(func(v GetClusterMonitoringConfig) []GetClusterMonitoringConfigAdvancedDatapathObservabilityConfig {
		return v.AdvancedDatapathObservabilityConfigs
	}).(GetClusterMonitoringConfigAdvancedDatapathObservabilityConfigArrayOutput)
}

// GKE components exposing metrics. Valid values include SYSTEM_COMPONENTS, APISERVER, SCHEDULER, CONTROLLER_MANAGER, STORAGE, HPA, POD, DAEMONSET, DEPLOYMENT, STATEFULSET and WORKLOADS.
func (o GetClusterMonitoringConfigOutput) EnableComponents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClusterMonitoringConfig) []string { return v.EnableComponents }).(pulumi.StringArrayOutput)
}

// Configuration for Google Cloud Managed Services for Prometheus.
func (o GetClusterMonitoringConfigOutput) ManagedPrometheuses() GetClusterMonitoringConfigManagedPrometheusArrayOutput {
	return o.ApplyT(func(v GetClusterMonitoringConfig) []GetClusterMonitoringConfigManagedPrometheus {
		return v.ManagedPrometheuses
	}).(GetClusterMonitoringConfigManagedPrometheusArrayOutput)
}

type GetClusterMonitoringConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterMonitoringConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterMonitoringConfig)(nil)).Elem()
}

func (o GetClusterMonitoringConfigArrayOutput) ToGetClusterMonitoringConfigArrayOutput() GetClusterMonitoringConfigArrayOutput {
	return o
}

func (o GetClusterMonitoringConfigArrayOutput) ToGetClusterMonitoringConfigArrayOutputWithContext(ctx context.Context) GetClusterMonitoringConfigArrayOutput {
	return o
}

func (o GetClusterMonitoringConfigArrayOutput) Index(i pulumi.IntInput) GetClusterMonitoringConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterMonitoringConfig {
		return vs[0].([]GetClusterMonitoringConfig)[vs[1].(int)]
	}).(GetClusterMonitoringConfigOutput)
}

type GetClusterMonitoringConfigAdvancedDatapathObservabilityConfig struct {
	// Whether or not the advanced datapath metrics are enabled.
	EnableMetrics bool `pulumi:"enableMetrics"`
	// Whether or not Relay is enabled.
	EnableRelay bool `pulumi:"enableRelay"`
	// Mode used to make Relay available.
	RelayMode string `pulumi:"relayMode"`
}

// GetClusterMonitoringConfigAdvancedDatapathObservabilityConfigInput is an input type that accepts GetClusterMonitoringConfigAdvancedDatapathObservabilityConfigArgs and GetClusterMonitoringConfigAdvancedDatapathObservabilityConfigOutput values.
// You can construct a concrete instance of `GetClusterMonitoringConfigAdvancedDatapathObservabilityConfigInput` via:
//
//	GetClusterMonitoringConfigAdvancedDatapathObservabilityConfigArgs{...}
type GetClusterMonitoringConfigAdvancedDatapathObservabilityConfigInput interface {
	pulumi.Input

	ToGetClusterMonitoringConfigAdvancedDatapathObservabilityConfigOutput() GetClusterMonitoringConfigAdvancedDatapathObservabilityConfigOutput
	ToGetClusterMonitoringConfigAdvancedDatapathObservabilityConfigOutputWithContext(context.Context) GetClusterMonitoringConfigAdvancedDatapathObservabilityConfigOutput
}

type GetClusterMonitoringConfigAdvancedDatapathObservabilityConfigArgs struct {
	// Whether or not the advanced datapath metrics are enabled.
	EnableMetrics pulumi.BoolInput `pulumi:"enableMetrics"`
	// Whether or not Relay is enabled.
	EnableRelay pulumi.BoolInput `pulumi:"enableRelay"`
	// Mode used to make Relay available.
	RelayMode pulumi.StringInput `pulumi:"relayMode"`
}

func (GetClusterMonitoringConfigAdvancedDatapathObservabilityConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterMonitoringConfigAdvancedDatapathObservabilityConfig)(nil)).Elem()
}

func (i GetClusterMonitoringConfigAdvancedDatapathObservabilityConfigArgs) ToGetClusterMonitoringConfigAdvancedDatapathObservabilityConfigOutput() GetClusterMonitoringConfigAdvancedDatapathObservabilityConfigOutput {
	return i.ToGetClusterMonitoringConfigAdvancedDatapathObservabilityConfigOutputWithContext(context.Background())
}

func (i GetClusterMonitoringConfigAdvancedDatapathObservabilityConfigArgs) ToGetClusterMonitoringConfigAdvancedDatapathObservabilityConfigOutputWithContext(ctx context.Context) GetClusterMonitoringConfigAdvancedDatapathObservabilityConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterMonitoringConfigAdvancedDatapathObservabilityConfigOutput)
}

// GetClusterMonitoringConfigAdvancedDatapathObservabilityConfigArrayInput is an input type that accepts GetClusterMonitoringConfigAdvancedDatapathObservabilityConfigArray and GetClusterMonitoringConfigAdvancedDatapathObservabilityConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterMonitoringConfigAdvancedDatapathObservabilityConfigArrayInput` via:
//
//	GetClusterMonitoringConfigAdvancedDatapathObservabilityConfigArray{ GetClusterMonitoringConfigAdvancedDatapathObservabilityConfigArgs{...} }
type GetClusterMonitoringConfigAdvancedDatapathObservabilityConfigArrayInput interface {
	pulumi.Input

	ToGetClusterMonitoringConfigAdvancedDatapathObservabilityConfigArrayOutput() GetClusterMonitoringConfigAdvancedDatapathObservabilityConfigArrayOutput
	ToGetClusterMonitoringConfigAdvancedDatapathObservabilityConfigArrayOutputWithContext(context.Context) GetClusterMonitoringConfigAdvancedDatapathObservabilityConfigArrayOutput
}

type GetClusterMonitoringConfigAdvancedDatapathObservabilityConfigArray []GetClusterMonitoringConfigAdvancedDatapathObservabilityConfigInput

func (GetClusterMonitoringConfigAdvancedDatapathObservabilityConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterMonitoringConfigAdvancedDatapathObservabilityConfig)(nil)).Elem()
}

func (i GetClusterMonitoringConfigAdvancedDatapathObservabilityConfigArray) ToGetClusterMonitoringConfigAdvancedDatapathObservabilityConfigArrayOutput() GetClusterMonitoringConfigAdvancedDatapathObservabilityConfigArrayOutput {
	return i.ToGetClusterMonitoringConfigAdvancedDatapathObservabilityConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterMonitoringConfigAdvancedDatapathObservabilityConfigArray) ToGetClusterMonitoringConfigAdvancedDatapathObservabilityConfigArrayOutputWithContext(ctx context.Context) GetClusterMonitoringConfigAdvancedDatapathObservabilityConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterMonitoringConfigAdvancedDatapathObservabilityConfigArrayOutput)
}

type GetClusterMonitoringConfigAdvancedDatapathObservabilityConfigOutput struct{ *pulumi.OutputState }

func (GetClusterMonitoringConfigAdvancedDatapathObservabilityConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterMonitoringConfigAdvancedDatapathObservabilityConfig)(nil)).Elem()
}

func (o GetClusterMonitoringConfigAdvancedDatapathObservabilityConfigOutput) ToGetClusterMonitoringConfigAdvancedDatapathObservabilityConfigOutput() GetClusterMonitoringConfigAdvancedDatapathObservabilityConfigOutput {
	return o
}

func (o GetClusterMonitoringConfigAdvancedDatapathObservabilityConfigOutput) ToGetClusterMonitoringConfigAdvancedDatapathObservabilityConfigOutputWithContext(ctx context.Context) GetClusterMonitoringConfigAdvancedDatapathObservabilityConfigOutput {
	return o
}

// Whether or not the advanced datapath metrics are enabled.
func (o GetClusterMonitoringConfigAdvancedDatapathObservabilityConfigOutput) EnableMetrics() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterMonitoringConfigAdvancedDatapathObservabilityConfig) bool { return v.EnableMetrics }).(pulumi.BoolOutput)
}

// Whether or not Relay is enabled.
func (o GetClusterMonitoringConfigAdvancedDatapathObservabilityConfigOutput) EnableRelay() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterMonitoringConfigAdvancedDatapathObservabilityConfig) bool { return v.EnableRelay }).(pulumi.BoolOutput)
}

// Mode used to make Relay available.
func (o GetClusterMonitoringConfigAdvancedDatapathObservabilityConfigOutput) RelayMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterMonitoringConfigAdvancedDatapathObservabilityConfig) string { return v.RelayMode }).(pulumi.StringOutput)
}

type GetClusterMonitoringConfigAdvancedDatapathObservabilityConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterMonitoringConfigAdvancedDatapathObservabilityConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterMonitoringConfigAdvancedDatapathObservabilityConfig)(nil)).Elem()
}

func (o GetClusterMonitoringConfigAdvancedDatapathObservabilityConfigArrayOutput) ToGetClusterMonitoringConfigAdvancedDatapathObservabilityConfigArrayOutput() GetClusterMonitoringConfigAdvancedDatapathObservabilityConfigArrayOutput {
	return o
}

func (o GetClusterMonitoringConfigAdvancedDatapathObservabilityConfigArrayOutput) ToGetClusterMonitoringConfigAdvancedDatapathObservabilityConfigArrayOutputWithContext(ctx context.Context) GetClusterMonitoringConfigAdvancedDatapathObservabilityConfigArrayOutput {
	return o
}

func (o GetClusterMonitoringConfigAdvancedDatapathObservabilityConfigArrayOutput) Index(i pulumi.IntInput) GetClusterMonitoringConfigAdvancedDatapathObservabilityConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterMonitoringConfigAdvancedDatapathObservabilityConfig {
		return vs[0].([]GetClusterMonitoringConfigAdvancedDatapathObservabilityConfig)[vs[1].(int)]
	}).(GetClusterMonitoringConfigAdvancedDatapathObservabilityConfigOutput)
}

type GetClusterMonitoringConfigManagedPrometheus struct {
	// Whether or not the managed collection is enabled.
	Enabled bool `pulumi:"enabled"`
}

// GetClusterMonitoringConfigManagedPrometheusInput is an input type that accepts GetClusterMonitoringConfigManagedPrometheusArgs and GetClusterMonitoringConfigManagedPrometheusOutput values.
// You can construct a concrete instance of `GetClusterMonitoringConfigManagedPrometheusInput` via:
//
//	GetClusterMonitoringConfigManagedPrometheusArgs{...}
type GetClusterMonitoringConfigManagedPrometheusInput interface {
	pulumi.Input

	ToGetClusterMonitoringConfigManagedPrometheusOutput() GetClusterMonitoringConfigManagedPrometheusOutput
	ToGetClusterMonitoringConfigManagedPrometheusOutputWithContext(context.Context) GetClusterMonitoringConfigManagedPrometheusOutput
}

type GetClusterMonitoringConfigManagedPrometheusArgs struct {
	// Whether or not the managed collection is enabled.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (GetClusterMonitoringConfigManagedPrometheusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterMonitoringConfigManagedPrometheus)(nil)).Elem()
}

func (i GetClusterMonitoringConfigManagedPrometheusArgs) ToGetClusterMonitoringConfigManagedPrometheusOutput() GetClusterMonitoringConfigManagedPrometheusOutput {
	return i.ToGetClusterMonitoringConfigManagedPrometheusOutputWithContext(context.Background())
}

func (i GetClusterMonitoringConfigManagedPrometheusArgs) ToGetClusterMonitoringConfigManagedPrometheusOutputWithContext(ctx context.Context) GetClusterMonitoringConfigManagedPrometheusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterMonitoringConfigManagedPrometheusOutput)
}

// GetClusterMonitoringConfigManagedPrometheusArrayInput is an input type that accepts GetClusterMonitoringConfigManagedPrometheusArray and GetClusterMonitoringConfigManagedPrometheusArrayOutput values.
// You can construct a concrete instance of `GetClusterMonitoringConfigManagedPrometheusArrayInput` via:
//
//	GetClusterMonitoringConfigManagedPrometheusArray{ GetClusterMonitoringConfigManagedPrometheusArgs{...} }
type GetClusterMonitoringConfigManagedPrometheusArrayInput interface {
	pulumi.Input

	ToGetClusterMonitoringConfigManagedPrometheusArrayOutput() GetClusterMonitoringConfigManagedPrometheusArrayOutput
	ToGetClusterMonitoringConfigManagedPrometheusArrayOutputWithContext(context.Context) GetClusterMonitoringConfigManagedPrometheusArrayOutput
}

type GetClusterMonitoringConfigManagedPrometheusArray []GetClusterMonitoringConfigManagedPrometheusInput

func (GetClusterMonitoringConfigManagedPrometheusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterMonitoringConfigManagedPrometheus)(nil)).Elem()
}

func (i GetClusterMonitoringConfigManagedPrometheusArray) ToGetClusterMonitoringConfigManagedPrometheusArrayOutput() GetClusterMonitoringConfigManagedPrometheusArrayOutput {
	return i.ToGetClusterMonitoringConfigManagedPrometheusArrayOutputWithContext(context.Background())
}

func (i GetClusterMonitoringConfigManagedPrometheusArray) ToGetClusterMonitoringConfigManagedPrometheusArrayOutputWithContext(ctx context.Context) GetClusterMonitoringConfigManagedPrometheusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterMonitoringConfigManagedPrometheusArrayOutput)
}

type GetClusterMonitoringConfigManagedPrometheusOutput struct{ *pulumi.OutputState }

func (GetClusterMonitoringConfigManagedPrometheusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterMonitoringConfigManagedPrometheus)(nil)).Elem()
}

func (o GetClusterMonitoringConfigManagedPrometheusOutput) ToGetClusterMonitoringConfigManagedPrometheusOutput() GetClusterMonitoringConfigManagedPrometheusOutput {
	return o
}

func (o GetClusterMonitoringConfigManagedPrometheusOutput) ToGetClusterMonitoringConfigManagedPrometheusOutputWithContext(ctx context.Context) GetClusterMonitoringConfigManagedPrometheusOutput {
	return o
}

// Whether or not the managed collection is enabled.
func (o GetClusterMonitoringConfigManagedPrometheusOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterMonitoringConfigManagedPrometheus) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type GetClusterMonitoringConfigManagedPrometheusArrayOutput struct{ *pulumi.OutputState }

func (GetClusterMonitoringConfigManagedPrometheusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterMonitoringConfigManagedPrometheus)(nil)).Elem()
}

func (o GetClusterMonitoringConfigManagedPrometheusArrayOutput) ToGetClusterMonitoringConfigManagedPrometheusArrayOutput() GetClusterMonitoringConfigManagedPrometheusArrayOutput {
	return o
}

func (o GetClusterMonitoringConfigManagedPrometheusArrayOutput) ToGetClusterMonitoringConfigManagedPrometheusArrayOutputWithContext(ctx context.Context) GetClusterMonitoringConfigManagedPrometheusArrayOutput {
	return o
}

func (o GetClusterMonitoringConfigManagedPrometheusArrayOutput) Index(i pulumi.IntInput) GetClusterMonitoringConfigManagedPrometheusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterMonitoringConfigManagedPrometheus {
		return vs[0].([]GetClusterMonitoringConfigManagedPrometheus)[vs[1].(int)]
	}).(GetClusterMonitoringConfigManagedPrometheusOutput)
}

type GetClusterNetworkPolicy struct {
	// Whether network policy is enabled on the cluster.
	Enabled bool `pulumi:"enabled"`
	// The selected network policy provider.
	Provider string `pulumi:"provider"`
}

// GetClusterNetworkPolicyInput is an input type that accepts GetClusterNetworkPolicyArgs and GetClusterNetworkPolicyOutput values.
// You can construct a concrete instance of `GetClusterNetworkPolicyInput` via:
//
//	GetClusterNetworkPolicyArgs{...}
type GetClusterNetworkPolicyInput interface {
	pulumi.Input

	ToGetClusterNetworkPolicyOutput() GetClusterNetworkPolicyOutput
	ToGetClusterNetworkPolicyOutputWithContext(context.Context) GetClusterNetworkPolicyOutput
}

type GetClusterNetworkPolicyArgs struct {
	// Whether network policy is enabled on the cluster.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The selected network policy provider.
	Provider pulumi.StringInput `pulumi:"provider"`
}

func (GetClusterNetworkPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNetworkPolicy)(nil)).Elem()
}

func (i GetClusterNetworkPolicyArgs) ToGetClusterNetworkPolicyOutput() GetClusterNetworkPolicyOutput {
	return i.ToGetClusterNetworkPolicyOutputWithContext(context.Background())
}

func (i GetClusterNetworkPolicyArgs) ToGetClusterNetworkPolicyOutputWithContext(ctx context.Context) GetClusterNetworkPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNetworkPolicyOutput)
}

// GetClusterNetworkPolicyArrayInput is an input type that accepts GetClusterNetworkPolicyArray and GetClusterNetworkPolicyArrayOutput values.
// You can construct a concrete instance of `GetClusterNetworkPolicyArrayInput` via:
//
//	GetClusterNetworkPolicyArray{ GetClusterNetworkPolicyArgs{...} }
type GetClusterNetworkPolicyArrayInput interface {
	pulumi.Input

	ToGetClusterNetworkPolicyArrayOutput() GetClusterNetworkPolicyArrayOutput
	ToGetClusterNetworkPolicyArrayOutputWithContext(context.Context) GetClusterNetworkPolicyArrayOutput
}

type GetClusterNetworkPolicyArray []GetClusterNetworkPolicyInput

func (GetClusterNetworkPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNetworkPolicy)(nil)).Elem()
}

func (i GetClusterNetworkPolicyArray) ToGetClusterNetworkPolicyArrayOutput() GetClusterNetworkPolicyArrayOutput {
	return i.ToGetClusterNetworkPolicyArrayOutputWithContext(context.Background())
}

func (i GetClusterNetworkPolicyArray) ToGetClusterNetworkPolicyArrayOutputWithContext(ctx context.Context) GetClusterNetworkPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNetworkPolicyArrayOutput)
}

type GetClusterNetworkPolicyOutput struct{ *pulumi.OutputState }

func (GetClusterNetworkPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNetworkPolicy)(nil)).Elem()
}

func (o GetClusterNetworkPolicyOutput) ToGetClusterNetworkPolicyOutput() GetClusterNetworkPolicyOutput {
	return o
}

func (o GetClusterNetworkPolicyOutput) ToGetClusterNetworkPolicyOutputWithContext(ctx context.Context) GetClusterNetworkPolicyOutput {
	return o
}

// Whether network policy is enabled on the cluster.
func (o GetClusterNetworkPolicyOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterNetworkPolicy) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The selected network policy provider.
func (o GetClusterNetworkPolicyOutput) Provider() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNetworkPolicy) string { return v.Provider }).(pulumi.StringOutput)
}

type GetClusterNetworkPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNetworkPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNetworkPolicy)(nil)).Elem()
}

func (o GetClusterNetworkPolicyArrayOutput) ToGetClusterNetworkPolicyArrayOutput() GetClusterNetworkPolicyArrayOutput {
	return o
}

func (o GetClusterNetworkPolicyArrayOutput) ToGetClusterNetworkPolicyArrayOutputWithContext(ctx context.Context) GetClusterNetworkPolicyArrayOutput {
	return o
}

func (o GetClusterNetworkPolicyArrayOutput) Index(i pulumi.IntInput) GetClusterNetworkPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNetworkPolicy {
		return vs[0].([]GetClusterNetworkPolicy)[vs[1].(int)]
	}).(GetClusterNetworkPolicyOutput)
}

type GetClusterNodeConfig struct {
	// Specifies options for controlling advanced machine features.
	AdvancedMachineFeatures []GetClusterNodeConfigAdvancedMachineFeature `pulumi:"advancedMachineFeatures"`
	// The Customer Managed Encryption Key used to encrypt the boot disk attached to each node in the node pool.
	BootDiskKmsKey string `pulumi:"bootDiskKmsKey"`
	// Configuration for the confidential nodes feature, which makes nodes run on confidential VMs. Warning: This configuration can't be changed (or added/removed) after pool creation without deleting and recreating the entire pool.
	ConfidentialNodes []GetClusterNodeConfigConfidentialNode `pulumi:"confidentialNodes"`
	// Size of the disk attached to each node, specified in GB. The smallest allowed disk size is 10GB.
	DiskSizeGb int `pulumi:"diskSizeGb"`
	// Type of the disk attached to each node. Such as pd-standard, pd-balanced or pd-ssd
	DiskType string `pulumi:"diskType"`
	// List of kubernetes taints applied to each node.
	EffectiveTaints []GetClusterNodeConfigEffectiveTaint `pulumi:"effectiveTaints"`
	// If enabled boot disks are configured with confidential mode.
	EnableConfidentialStorage bool `pulumi:"enableConfidentialStorage"`
	// Parameters for the ephemeral storage filesystem. If unspecified, ephemeral storage is backed by the boot disk.
	EphemeralStorageConfigs []GetClusterNodeConfigEphemeralStorageConfig `pulumi:"ephemeralStorageConfigs"`
	// Parameters for the ephemeral storage filesystem. If unspecified, ephemeral storage is backed by the boot disk.
	EphemeralStorageLocalSsdConfigs []GetClusterNodeConfigEphemeralStorageLocalSsdConfig `pulumi:"ephemeralStorageLocalSsdConfigs"`
	// Enable or disable NCCL Fast Socket in the node pool.
	FastSockets []GetClusterNodeConfigFastSocket `pulumi:"fastSockets"`
	// GCFS configuration for this node.
	GcfsConfigs []GetClusterNodeConfigGcfsConfig `pulumi:"gcfsConfigs"`
	// List of the type and count of accelerator cards attached to the instance.
	GuestAccelerators []GetClusterNodeConfigGuestAccelerator `pulumi:"guestAccelerators"`
	// Enable or disable gvnic in the node pool.
	Gvnics []GetClusterNodeConfigGvnic `pulumi:"gvnics"`
	// The maintenance policy for the hosts on which the GKE VMs run on.
	HostMaintenancePolicies []GetClusterNodeConfigHostMaintenancePolicy `pulumi:"hostMaintenancePolicies"`
	// The image type to use for this node. Note that for a given image type, the latest version of it will be used.
	ImageType string `pulumi:"imageType"`
	// Node kubelet configs.
	KubeletConfigs []GetClusterNodeConfigKubeletConfig `pulumi:"kubeletConfigs"`
	// The map of Kubernetes labels (key/value pairs) to be applied to each node. These will added in addition to any default label(s) that Kubernetes may apply to the node.
	Labels map[string]string `pulumi:"labels"`
	// Parameters that can be configured on Linux nodes.
	LinuxNodeConfigs []GetClusterNodeConfigLinuxNodeConfig `pulumi:"linuxNodeConfigs"`
	// Parameters for raw-block local NVMe SSDs.
	LocalNvmeSsdBlockConfigs []GetClusterNodeConfigLocalNvmeSsdBlockConfig `pulumi:"localNvmeSsdBlockConfigs"`
	// The number of local SSD disks to be attached to the node.
	LocalSsdCount int `pulumi:"localSsdCount"`
	// Type of logging agent that is used as the default value for node pools in the cluster. Valid values include DEFAULT and MAX_THROUGHPUT.
	LoggingVariant string `pulumi:"loggingVariant"`
	// The name of a Google Compute Engine machine type.
	MachineType string `pulumi:"machineType"`
	// The metadata key/value pairs assigned to instances in the cluster.
	Metadata map[string]string `pulumi:"metadata"`
	// Minimum CPU platform to be used by this instance. The instance may be scheduled on the specified or newer CPU platform.
	MinCpuPlatform string `pulumi:"minCpuPlatform"`
	// Setting this field will assign instances of this pool to run on the specified node group. This is useful for running workloads on sole tenant nodes.
	NodeGroup string `pulumi:"nodeGroup"`
	// The set of Google API scopes to be made available on all of the node VMs.
	OauthScopes []string `pulumi:"oauthScopes"`
	// Whether the nodes are created as preemptible VM instances.
	Preemptible bool `pulumi:"preemptible"`
	// The reservation affinity configuration for the node pool.
	ReservationAffinities []GetClusterNodeConfigReservationAffinity `pulumi:"reservationAffinities"`
	// The GCE resource labels (a map of key/value pairs) to be applied to the node pool.
	ResourceLabels map[string]string `pulumi:"resourceLabels"`
	// A map of resource manager tags. Resource manager tag keys and values have the same definition as resource manager tags. Keys must be in the format tagKeys/{tag_key_id}, and values are in the format tagValues/456. The field is ignored (both PUT & PATCH) when empty.
	ResourceManagerTags map[string]interface{} `pulumi:"resourceManagerTags"`
	// Sandbox configuration for this node.
	SandboxConfigs []GetClusterNodeConfigSandboxConfig `pulumi:"sandboxConfigs"`
	// Secondary boot disks for preloading data or container images.
	SecondaryBootDisks []GetClusterNodeConfigSecondaryBootDisk `pulumi:"secondaryBootDisks"`
	// The Google Cloud Platform Service Account to be used by the node VMs.
	ServiceAccount string `pulumi:"serviceAccount"`
	// Shielded Instance options.
	ShieldedInstanceConfigs []GetClusterNodeConfigShieldedInstanceConfig `pulumi:"shieldedInstanceConfigs"`
	// Node affinity options for sole tenant node pools.
	SoleTenantConfigs []GetClusterNodeConfigSoleTenantConfig `pulumi:"soleTenantConfigs"`
	// Whether the nodes are created as spot VM instances.
	Spot bool `pulumi:"spot"`
	// The list of instance tags applied to all nodes.
	Tags []string `pulumi:"tags"`
	// List of Kubernetes taints to be applied to each node.
	Taints []GetClusterNodeConfigTaint `pulumi:"taints"`
	// The workload metadata configuration for this node.
	WorkloadMetadataConfigs []GetClusterNodeConfigWorkloadMetadataConfig `pulumi:"workloadMetadataConfigs"`
}

// GetClusterNodeConfigInput is an input type that accepts GetClusterNodeConfigArgs and GetClusterNodeConfigOutput values.
// You can construct a concrete instance of `GetClusterNodeConfigInput` via:
//
//	GetClusterNodeConfigArgs{...}
type GetClusterNodeConfigInput interface {
	pulumi.Input

	ToGetClusterNodeConfigOutput() GetClusterNodeConfigOutput
	ToGetClusterNodeConfigOutputWithContext(context.Context) GetClusterNodeConfigOutput
}

type GetClusterNodeConfigArgs struct {
	// Specifies options for controlling advanced machine features.
	AdvancedMachineFeatures GetClusterNodeConfigAdvancedMachineFeatureArrayInput `pulumi:"advancedMachineFeatures"`
	// The Customer Managed Encryption Key used to encrypt the boot disk attached to each node in the node pool.
	BootDiskKmsKey pulumi.StringInput `pulumi:"bootDiskKmsKey"`
	// Configuration for the confidential nodes feature, which makes nodes run on confidential VMs. Warning: This configuration can't be changed (or added/removed) after pool creation without deleting and recreating the entire pool.
	ConfidentialNodes GetClusterNodeConfigConfidentialNodeArrayInput `pulumi:"confidentialNodes"`
	// Size of the disk attached to each node, specified in GB. The smallest allowed disk size is 10GB.
	DiskSizeGb pulumi.IntInput `pulumi:"diskSizeGb"`
	// Type of the disk attached to each node. Such as pd-standard, pd-balanced or pd-ssd
	DiskType pulumi.StringInput `pulumi:"diskType"`
	// List of kubernetes taints applied to each node.
	EffectiveTaints GetClusterNodeConfigEffectiveTaintArrayInput `pulumi:"effectiveTaints"`
	// If enabled boot disks are configured with confidential mode.
	EnableConfidentialStorage pulumi.BoolInput `pulumi:"enableConfidentialStorage"`
	// Parameters for the ephemeral storage filesystem. If unspecified, ephemeral storage is backed by the boot disk.
	EphemeralStorageConfigs GetClusterNodeConfigEphemeralStorageConfigArrayInput `pulumi:"ephemeralStorageConfigs"`
	// Parameters for the ephemeral storage filesystem. If unspecified, ephemeral storage is backed by the boot disk.
	EphemeralStorageLocalSsdConfigs GetClusterNodeConfigEphemeralStorageLocalSsdConfigArrayInput `pulumi:"ephemeralStorageLocalSsdConfigs"`
	// Enable or disable NCCL Fast Socket in the node pool.
	FastSockets GetClusterNodeConfigFastSocketArrayInput `pulumi:"fastSockets"`
	// GCFS configuration for this node.
	GcfsConfigs GetClusterNodeConfigGcfsConfigArrayInput `pulumi:"gcfsConfigs"`
	// List of the type and count of accelerator cards attached to the instance.
	GuestAccelerators GetClusterNodeConfigGuestAcceleratorArrayInput `pulumi:"guestAccelerators"`
	// Enable or disable gvnic in the node pool.
	Gvnics GetClusterNodeConfigGvnicArrayInput `pulumi:"gvnics"`
	// The maintenance policy for the hosts on which the GKE VMs run on.
	HostMaintenancePolicies GetClusterNodeConfigHostMaintenancePolicyArrayInput `pulumi:"hostMaintenancePolicies"`
	// The image type to use for this node. Note that for a given image type, the latest version of it will be used.
	ImageType pulumi.StringInput `pulumi:"imageType"`
	// Node kubelet configs.
	KubeletConfigs GetClusterNodeConfigKubeletConfigArrayInput `pulumi:"kubeletConfigs"`
	// The map of Kubernetes labels (key/value pairs) to be applied to each node. These will added in addition to any default label(s) that Kubernetes may apply to the node.
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// Parameters that can be configured on Linux nodes.
	LinuxNodeConfigs GetClusterNodeConfigLinuxNodeConfigArrayInput `pulumi:"linuxNodeConfigs"`
	// Parameters for raw-block local NVMe SSDs.
	LocalNvmeSsdBlockConfigs GetClusterNodeConfigLocalNvmeSsdBlockConfigArrayInput `pulumi:"localNvmeSsdBlockConfigs"`
	// The number of local SSD disks to be attached to the node.
	LocalSsdCount pulumi.IntInput `pulumi:"localSsdCount"`
	// Type of logging agent that is used as the default value for node pools in the cluster. Valid values include DEFAULT and MAX_THROUGHPUT.
	LoggingVariant pulumi.StringInput `pulumi:"loggingVariant"`
	// The name of a Google Compute Engine machine type.
	MachineType pulumi.StringInput `pulumi:"machineType"`
	// The metadata key/value pairs assigned to instances in the cluster.
	Metadata pulumi.StringMapInput `pulumi:"metadata"`
	// Minimum CPU platform to be used by this instance. The instance may be scheduled on the specified or newer CPU platform.
	MinCpuPlatform pulumi.StringInput `pulumi:"minCpuPlatform"`
	// Setting this field will assign instances of this pool to run on the specified node group. This is useful for running workloads on sole tenant nodes.
	NodeGroup pulumi.StringInput `pulumi:"nodeGroup"`
	// The set of Google API scopes to be made available on all of the node VMs.
	OauthScopes pulumi.StringArrayInput `pulumi:"oauthScopes"`
	// Whether the nodes are created as preemptible VM instances.
	Preemptible pulumi.BoolInput `pulumi:"preemptible"`
	// The reservation affinity configuration for the node pool.
	ReservationAffinities GetClusterNodeConfigReservationAffinityArrayInput `pulumi:"reservationAffinities"`
	// The GCE resource labels (a map of key/value pairs) to be applied to the node pool.
	ResourceLabels pulumi.StringMapInput `pulumi:"resourceLabels"`
	// A map of resource manager tags. Resource manager tag keys and values have the same definition as resource manager tags. Keys must be in the format tagKeys/{tag_key_id}, and values are in the format tagValues/456. The field is ignored (both PUT & PATCH) when empty.
	ResourceManagerTags pulumi.MapInput `pulumi:"resourceManagerTags"`
	// Sandbox configuration for this node.
	SandboxConfigs GetClusterNodeConfigSandboxConfigArrayInput `pulumi:"sandboxConfigs"`
	// Secondary boot disks for preloading data or container images.
	SecondaryBootDisks GetClusterNodeConfigSecondaryBootDiskArrayInput `pulumi:"secondaryBootDisks"`
	// The Google Cloud Platform Service Account to be used by the node VMs.
	ServiceAccount pulumi.StringInput `pulumi:"serviceAccount"`
	// Shielded Instance options.
	ShieldedInstanceConfigs GetClusterNodeConfigShieldedInstanceConfigArrayInput `pulumi:"shieldedInstanceConfigs"`
	// Node affinity options for sole tenant node pools.
	SoleTenantConfigs GetClusterNodeConfigSoleTenantConfigArrayInput `pulumi:"soleTenantConfigs"`
	// Whether the nodes are created as spot VM instances.
	Spot pulumi.BoolInput `pulumi:"spot"`
	// The list of instance tags applied to all nodes.
	Tags pulumi.StringArrayInput `pulumi:"tags"`
	// List of Kubernetes taints to be applied to each node.
	Taints GetClusterNodeConfigTaintArrayInput `pulumi:"taints"`
	// The workload metadata configuration for this node.
	WorkloadMetadataConfigs GetClusterNodeConfigWorkloadMetadataConfigArrayInput `pulumi:"workloadMetadataConfigs"`
}

func (GetClusterNodeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodeConfig)(nil)).Elem()
}

func (i GetClusterNodeConfigArgs) ToGetClusterNodeConfigOutput() GetClusterNodeConfigOutput {
	return i.ToGetClusterNodeConfigOutputWithContext(context.Background())
}

func (i GetClusterNodeConfigArgs) ToGetClusterNodeConfigOutputWithContext(ctx context.Context) GetClusterNodeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodeConfigOutput)
}

// GetClusterNodeConfigArrayInput is an input type that accepts GetClusterNodeConfigArray and GetClusterNodeConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterNodeConfigArrayInput` via:
//
//	GetClusterNodeConfigArray{ GetClusterNodeConfigArgs{...} }
type GetClusterNodeConfigArrayInput interface {
	pulumi.Input

	ToGetClusterNodeConfigArrayOutput() GetClusterNodeConfigArrayOutput
	ToGetClusterNodeConfigArrayOutputWithContext(context.Context) GetClusterNodeConfigArrayOutput
}

type GetClusterNodeConfigArray []GetClusterNodeConfigInput

func (GetClusterNodeConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodeConfig)(nil)).Elem()
}

func (i GetClusterNodeConfigArray) ToGetClusterNodeConfigArrayOutput() GetClusterNodeConfigArrayOutput {
	return i.ToGetClusterNodeConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterNodeConfigArray) ToGetClusterNodeConfigArrayOutputWithContext(ctx context.Context) GetClusterNodeConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodeConfigArrayOutput)
}

type GetClusterNodeConfigOutput struct{ *pulumi.OutputState }

func (GetClusterNodeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodeConfig)(nil)).Elem()
}

func (o GetClusterNodeConfigOutput) ToGetClusterNodeConfigOutput() GetClusterNodeConfigOutput {
	return o
}

func (o GetClusterNodeConfigOutput) ToGetClusterNodeConfigOutputWithContext(ctx context.Context) GetClusterNodeConfigOutput {
	return o
}

// Specifies options for controlling advanced machine features.
func (o GetClusterNodeConfigOutput) AdvancedMachineFeatures() GetClusterNodeConfigAdvancedMachineFeatureArrayOutput {
	return o.ApplyT(func(v GetClusterNodeConfig) []GetClusterNodeConfigAdvancedMachineFeature {
		return v.AdvancedMachineFeatures
	}).(GetClusterNodeConfigAdvancedMachineFeatureArrayOutput)
}

// The Customer Managed Encryption Key used to encrypt the boot disk attached to each node in the node pool.
func (o GetClusterNodeConfigOutput) BootDiskKmsKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodeConfig) string { return v.BootDiskKmsKey }).(pulumi.StringOutput)
}

// Configuration for the confidential nodes feature, which makes nodes run on confidential VMs. Warning: This configuration can't be changed (or added/removed) after pool creation without deleting and recreating the entire pool.
func (o GetClusterNodeConfigOutput) ConfidentialNodes() GetClusterNodeConfigConfidentialNodeArrayOutput {
	return o.ApplyT(func(v GetClusterNodeConfig) []GetClusterNodeConfigConfidentialNode { return v.ConfidentialNodes }).(GetClusterNodeConfigConfidentialNodeArrayOutput)
}

// Size of the disk attached to each node, specified in GB. The smallest allowed disk size is 10GB.
func (o GetClusterNodeConfigOutput) DiskSizeGb() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterNodeConfig) int { return v.DiskSizeGb }).(pulumi.IntOutput)
}

// Type of the disk attached to each node. Such as pd-standard, pd-balanced or pd-ssd
func (o GetClusterNodeConfigOutput) DiskType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodeConfig) string { return v.DiskType }).(pulumi.StringOutput)
}

// List of kubernetes taints applied to each node.
func (o GetClusterNodeConfigOutput) EffectiveTaints() GetClusterNodeConfigEffectiveTaintArrayOutput {
	return o.ApplyT(func(v GetClusterNodeConfig) []GetClusterNodeConfigEffectiveTaint { return v.EffectiveTaints }).(GetClusterNodeConfigEffectiveTaintArrayOutput)
}

// If enabled boot disks are configured with confidential mode.
func (o GetClusterNodeConfigOutput) EnableConfidentialStorage() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterNodeConfig) bool { return v.EnableConfidentialStorage }).(pulumi.BoolOutput)
}

// Parameters for the ephemeral storage filesystem. If unspecified, ephemeral storage is backed by the boot disk.
func (o GetClusterNodeConfigOutput) EphemeralStorageConfigs() GetClusterNodeConfigEphemeralStorageConfigArrayOutput {
	return o.ApplyT(func(v GetClusterNodeConfig) []GetClusterNodeConfigEphemeralStorageConfig {
		return v.EphemeralStorageConfigs
	}).(GetClusterNodeConfigEphemeralStorageConfigArrayOutput)
}

// Parameters for the ephemeral storage filesystem. If unspecified, ephemeral storage is backed by the boot disk.
func (o GetClusterNodeConfigOutput) EphemeralStorageLocalSsdConfigs() GetClusterNodeConfigEphemeralStorageLocalSsdConfigArrayOutput {
	return o.ApplyT(func(v GetClusterNodeConfig) []GetClusterNodeConfigEphemeralStorageLocalSsdConfig {
		return v.EphemeralStorageLocalSsdConfigs
	}).(GetClusterNodeConfigEphemeralStorageLocalSsdConfigArrayOutput)
}

// Enable or disable NCCL Fast Socket in the node pool.
func (o GetClusterNodeConfigOutput) FastSockets() GetClusterNodeConfigFastSocketArrayOutput {
	return o.ApplyT(func(v GetClusterNodeConfig) []GetClusterNodeConfigFastSocket { return v.FastSockets }).(GetClusterNodeConfigFastSocketArrayOutput)
}

// GCFS configuration for this node.
func (o GetClusterNodeConfigOutput) GcfsConfigs() GetClusterNodeConfigGcfsConfigArrayOutput {
	return o.ApplyT(func(v GetClusterNodeConfig) []GetClusterNodeConfigGcfsConfig { return v.GcfsConfigs }).(GetClusterNodeConfigGcfsConfigArrayOutput)
}

// List of the type and count of accelerator cards attached to the instance.
func (o GetClusterNodeConfigOutput) GuestAccelerators() GetClusterNodeConfigGuestAcceleratorArrayOutput {
	return o.ApplyT(func(v GetClusterNodeConfig) []GetClusterNodeConfigGuestAccelerator { return v.GuestAccelerators }).(GetClusterNodeConfigGuestAcceleratorArrayOutput)
}

// Enable or disable gvnic in the node pool.
func (o GetClusterNodeConfigOutput) Gvnics() GetClusterNodeConfigGvnicArrayOutput {
	return o.ApplyT(func(v GetClusterNodeConfig) []GetClusterNodeConfigGvnic { return v.Gvnics }).(GetClusterNodeConfigGvnicArrayOutput)
}

// The maintenance policy for the hosts on which the GKE VMs run on.
func (o GetClusterNodeConfigOutput) HostMaintenancePolicies() GetClusterNodeConfigHostMaintenancePolicyArrayOutput {
	return o.ApplyT(func(v GetClusterNodeConfig) []GetClusterNodeConfigHostMaintenancePolicy {
		return v.HostMaintenancePolicies
	}).(GetClusterNodeConfigHostMaintenancePolicyArrayOutput)
}

// The image type to use for this node. Note that for a given image type, the latest version of it will be used.
func (o GetClusterNodeConfigOutput) ImageType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodeConfig) string { return v.ImageType }).(pulumi.StringOutput)
}

// Node kubelet configs.
func (o GetClusterNodeConfigOutput) KubeletConfigs() GetClusterNodeConfigKubeletConfigArrayOutput {
	return o.ApplyT(func(v GetClusterNodeConfig) []GetClusterNodeConfigKubeletConfig { return v.KubeletConfigs }).(GetClusterNodeConfigKubeletConfigArrayOutput)
}

// The map of Kubernetes labels (key/value pairs) to be applied to each node. These will added in addition to any default label(s) that Kubernetes may apply to the node.
func (o GetClusterNodeConfigOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetClusterNodeConfig) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// Parameters that can be configured on Linux nodes.
func (o GetClusterNodeConfigOutput) LinuxNodeConfigs() GetClusterNodeConfigLinuxNodeConfigArrayOutput {
	return o.ApplyT(func(v GetClusterNodeConfig) []GetClusterNodeConfigLinuxNodeConfig { return v.LinuxNodeConfigs }).(GetClusterNodeConfigLinuxNodeConfigArrayOutput)
}

// Parameters for raw-block local NVMe SSDs.
func (o GetClusterNodeConfigOutput) LocalNvmeSsdBlockConfigs() GetClusterNodeConfigLocalNvmeSsdBlockConfigArrayOutput {
	return o.ApplyT(func(v GetClusterNodeConfig) []GetClusterNodeConfigLocalNvmeSsdBlockConfig {
		return v.LocalNvmeSsdBlockConfigs
	}).(GetClusterNodeConfigLocalNvmeSsdBlockConfigArrayOutput)
}

// The number of local SSD disks to be attached to the node.
func (o GetClusterNodeConfigOutput) LocalSsdCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterNodeConfig) int { return v.LocalSsdCount }).(pulumi.IntOutput)
}

// Type of logging agent that is used as the default value for node pools in the cluster. Valid values include DEFAULT and MAX_THROUGHPUT.
func (o GetClusterNodeConfigOutput) LoggingVariant() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodeConfig) string { return v.LoggingVariant }).(pulumi.StringOutput)
}

// The name of a Google Compute Engine machine type.
func (o GetClusterNodeConfigOutput) MachineType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodeConfig) string { return v.MachineType }).(pulumi.StringOutput)
}

// The metadata key/value pairs assigned to instances in the cluster.
func (o GetClusterNodeConfigOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetClusterNodeConfig) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

// Minimum CPU platform to be used by this instance. The instance may be scheduled on the specified or newer CPU platform.
func (o GetClusterNodeConfigOutput) MinCpuPlatform() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodeConfig) string { return v.MinCpuPlatform }).(pulumi.StringOutput)
}

// Setting this field will assign instances of this pool to run on the specified node group. This is useful for running workloads on sole tenant nodes.
func (o GetClusterNodeConfigOutput) NodeGroup() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodeConfig) string { return v.NodeGroup }).(pulumi.StringOutput)
}

// The set of Google API scopes to be made available on all of the node VMs.
func (o GetClusterNodeConfigOutput) OauthScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClusterNodeConfig) []string { return v.OauthScopes }).(pulumi.StringArrayOutput)
}

// Whether the nodes are created as preemptible VM instances.
func (o GetClusterNodeConfigOutput) Preemptible() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterNodeConfig) bool { return v.Preemptible }).(pulumi.BoolOutput)
}

// The reservation affinity configuration for the node pool.
func (o GetClusterNodeConfigOutput) ReservationAffinities() GetClusterNodeConfigReservationAffinityArrayOutput {
	return o.ApplyT(func(v GetClusterNodeConfig) []GetClusterNodeConfigReservationAffinity { return v.ReservationAffinities }).(GetClusterNodeConfigReservationAffinityArrayOutput)
}

// The GCE resource labels (a map of key/value pairs) to be applied to the node pool.
func (o GetClusterNodeConfigOutput) ResourceLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetClusterNodeConfig) map[string]string { return v.ResourceLabels }).(pulumi.StringMapOutput)
}

// A map of resource manager tags. Resource manager tag keys and values have the same definition as resource manager tags. Keys must be in the format tagKeys/{tag_key_id}, and values are in the format tagValues/456. The field is ignored (both PUT & PATCH) when empty.
func (o GetClusterNodeConfigOutput) ResourceManagerTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetClusterNodeConfig) map[string]interface{} { return v.ResourceManagerTags }).(pulumi.MapOutput)
}

// Sandbox configuration for this node.
func (o GetClusterNodeConfigOutput) SandboxConfigs() GetClusterNodeConfigSandboxConfigArrayOutput {
	return o.ApplyT(func(v GetClusterNodeConfig) []GetClusterNodeConfigSandboxConfig { return v.SandboxConfigs }).(GetClusterNodeConfigSandboxConfigArrayOutput)
}

// Secondary boot disks for preloading data or container images.
func (o GetClusterNodeConfigOutput) SecondaryBootDisks() GetClusterNodeConfigSecondaryBootDiskArrayOutput {
	return o.ApplyT(func(v GetClusterNodeConfig) []GetClusterNodeConfigSecondaryBootDisk { return v.SecondaryBootDisks }).(GetClusterNodeConfigSecondaryBootDiskArrayOutput)
}

// The Google Cloud Platform Service Account to be used by the node VMs.
func (o GetClusterNodeConfigOutput) ServiceAccount() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodeConfig) string { return v.ServiceAccount }).(pulumi.StringOutput)
}

// Shielded Instance options.
func (o GetClusterNodeConfigOutput) ShieldedInstanceConfigs() GetClusterNodeConfigShieldedInstanceConfigArrayOutput {
	return o.ApplyT(func(v GetClusterNodeConfig) []GetClusterNodeConfigShieldedInstanceConfig {
		return v.ShieldedInstanceConfigs
	}).(GetClusterNodeConfigShieldedInstanceConfigArrayOutput)
}

// Node affinity options for sole tenant node pools.
func (o GetClusterNodeConfigOutput) SoleTenantConfigs() GetClusterNodeConfigSoleTenantConfigArrayOutput {
	return o.ApplyT(func(v GetClusterNodeConfig) []GetClusterNodeConfigSoleTenantConfig { return v.SoleTenantConfigs }).(GetClusterNodeConfigSoleTenantConfigArrayOutput)
}

// Whether the nodes are created as spot VM instances.
func (o GetClusterNodeConfigOutput) Spot() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterNodeConfig) bool { return v.Spot }).(pulumi.BoolOutput)
}

// The list of instance tags applied to all nodes.
func (o GetClusterNodeConfigOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClusterNodeConfig) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// List of Kubernetes taints to be applied to each node.
func (o GetClusterNodeConfigOutput) Taints() GetClusterNodeConfigTaintArrayOutput {
	return o.ApplyT(func(v GetClusterNodeConfig) []GetClusterNodeConfigTaint { return v.Taints }).(GetClusterNodeConfigTaintArrayOutput)
}

// The workload metadata configuration for this node.
func (o GetClusterNodeConfigOutput) WorkloadMetadataConfigs() GetClusterNodeConfigWorkloadMetadataConfigArrayOutput {
	return o.ApplyT(func(v GetClusterNodeConfig) []GetClusterNodeConfigWorkloadMetadataConfig {
		return v.WorkloadMetadataConfigs
	}).(GetClusterNodeConfigWorkloadMetadataConfigArrayOutput)
}

type GetClusterNodeConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNodeConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodeConfig)(nil)).Elem()
}

func (o GetClusterNodeConfigArrayOutput) ToGetClusterNodeConfigArrayOutput() GetClusterNodeConfigArrayOutput {
	return o
}

func (o GetClusterNodeConfigArrayOutput) ToGetClusterNodeConfigArrayOutputWithContext(ctx context.Context) GetClusterNodeConfigArrayOutput {
	return o
}

func (o GetClusterNodeConfigArrayOutput) Index(i pulumi.IntInput) GetClusterNodeConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNodeConfig {
		return vs[0].([]GetClusterNodeConfig)[vs[1].(int)]
	}).(GetClusterNodeConfigOutput)
}

type GetClusterNodeConfigAdvancedMachineFeature struct {
	// Whether the node should have nested virtualization enabled.
	EnableNestedVirtualization bool `pulumi:"enableNestedVirtualization"`
	// The number of threads per physical core. To disable simultaneous multithreading (SMT) set this to 1. If unset, the maximum number of threads supported per core by the underlying processor is assumed.
	ThreadsPerCore int `pulumi:"threadsPerCore"`
}

// GetClusterNodeConfigAdvancedMachineFeatureInput is an input type that accepts GetClusterNodeConfigAdvancedMachineFeatureArgs and GetClusterNodeConfigAdvancedMachineFeatureOutput values.
// You can construct a concrete instance of `GetClusterNodeConfigAdvancedMachineFeatureInput` via:
//
//	GetClusterNodeConfigAdvancedMachineFeatureArgs{...}
type GetClusterNodeConfigAdvancedMachineFeatureInput interface {
	pulumi.Input

	ToGetClusterNodeConfigAdvancedMachineFeatureOutput() GetClusterNodeConfigAdvancedMachineFeatureOutput
	ToGetClusterNodeConfigAdvancedMachineFeatureOutputWithContext(context.Context) GetClusterNodeConfigAdvancedMachineFeatureOutput
}

type GetClusterNodeConfigAdvancedMachineFeatureArgs struct {
	// Whether the node should have nested virtualization enabled.
	EnableNestedVirtualization pulumi.BoolInput `pulumi:"enableNestedVirtualization"`
	// The number of threads per physical core. To disable simultaneous multithreading (SMT) set this to 1. If unset, the maximum number of threads supported per core by the underlying processor is assumed.
	ThreadsPerCore pulumi.IntInput `pulumi:"threadsPerCore"`
}

func (GetClusterNodeConfigAdvancedMachineFeatureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodeConfigAdvancedMachineFeature)(nil)).Elem()
}

func (i GetClusterNodeConfigAdvancedMachineFeatureArgs) ToGetClusterNodeConfigAdvancedMachineFeatureOutput() GetClusterNodeConfigAdvancedMachineFeatureOutput {
	return i.ToGetClusterNodeConfigAdvancedMachineFeatureOutputWithContext(context.Background())
}

func (i GetClusterNodeConfigAdvancedMachineFeatureArgs) ToGetClusterNodeConfigAdvancedMachineFeatureOutputWithContext(ctx context.Context) GetClusterNodeConfigAdvancedMachineFeatureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodeConfigAdvancedMachineFeatureOutput)
}

// GetClusterNodeConfigAdvancedMachineFeatureArrayInput is an input type that accepts GetClusterNodeConfigAdvancedMachineFeatureArray and GetClusterNodeConfigAdvancedMachineFeatureArrayOutput values.
// You can construct a concrete instance of `GetClusterNodeConfigAdvancedMachineFeatureArrayInput` via:
//
//	GetClusterNodeConfigAdvancedMachineFeatureArray{ GetClusterNodeConfigAdvancedMachineFeatureArgs{...} }
type GetClusterNodeConfigAdvancedMachineFeatureArrayInput interface {
	pulumi.Input

	ToGetClusterNodeConfigAdvancedMachineFeatureArrayOutput() GetClusterNodeConfigAdvancedMachineFeatureArrayOutput
	ToGetClusterNodeConfigAdvancedMachineFeatureArrayOutputWithContext(context.Context) GetClusterNodeConfigAdvancedMachineFeatureArrayOutput
}

type GetClusterNodeConfigAdvancedMachineFeatureArray []GetClusterNodeConfigAdvancedMachineFeatureInput

func (GetClusterNodeConfigAdvancedMachineFeatureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodeConfigAdvancedMachineFeature)(nil)).Elem()
}

func (i GetClusterNodeConfigAdvancedMachineFeatureArray) ToGetClusterNodeConfigAdvancedMachineFeatureArrayOutput() GetClusterNodeConfigAdvancedMachineFeatureArrayOutput {
	return i.ToGetClusterNodeConfigAdvancedMachineFeatureArrayOutputWithContext(context.Background())
}

func (i GetClusterNodeConfigAdvancedMachineFeatureArray) ToGetClusterNodeConfigAdvancedMachineFeatureArrayOutputWithContext(ctx context.Context) GetClusterNodeConfigAdvancedMachineFeatureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodeConfigAdvancedMachineFeatureArrayOutput)
}

type GetClusterNodeConfigAdvancedMachineFeatureOutput struct{ *pulumi.OutputState }

func (GetClusterNodeConfigAdvancedMachineFeatureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodeConfigAdvancedMachineFeature)(nil)).Elem()
}

func (o GetClusterNodeConfigAdvancedMachineFeatureOutput) ToGetClusterNodeConfigAdvancedMachineFeatureOutput() GetClusterNodeConfigAdvancedMachineFeatureOutput {
	return o
}

func (o GetClusterNodeConfigAdvancedMachineFeatureOutput) ToGetClusterNodeConfigAdvancedMachineFeatureOutputWithContext(ctx context.Context) GetClusterNodeConfigAdvancedMachineFeatureOutput {
	return o
}

// Whether the node should have nested virtualization enabled.
func (o GetClusterNodeConfigAdvancedMachineFeatureOutput) EnableNestedVirtualization() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterNodeConfigAdvancedMachineFeature) bool { return v.EnableNestedVirtualization }).(pulumi.BoolOutput)
}

// The number of threads per physical core. To disable simultaneous multithreading (SMT) set this to 1. If unset, the maximum number of threads supported per core by the underlying processor is assumed.
func (o GetClusterNodeConfigAdvancedMachineFeatureOutput) ThreadsPerCore() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterNodeConfigAdvancedMachineFeature) int { return v.ThreadsPerCore }).(pulumi.IntOutput)
}

type GetClusterNodeConfigAdvancedMachineFeatureArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNodeConfigAdvancedMachineFeatureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodeConfigAdvancedMachineFeature)(nil)).Elem()
}

func (o GetClusterNodeConfigAdvancedMachineFeatureArrayOutput) ToGetClusterNodeConfigAdvancedMachineFeatureArrayOutput() GetClusterNodeConfigAdvancedMachineFeatureArrayOutput {
	return o
}

func (o GetClusterNodeConfigAdvancedMachineFeatureArrayOutput) ToGetClusterNodeConfigAdvancedMachineFeatureArrayOutputWithContext(ctx context.Context) GetClusterNodeConfigAdvancedMachineFeatureArrayOutput {
	return o
}

func (o GetClusterNodeConfigAdvancedMachineFeatureArrayOutput) Index(i pulumi.IntInput) GetClusterNodeConfigAdvancedMachineFeatureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNodeConfigAdvancedMachineFeature {
		return vs[0].([]GetClusterNodeConfigAdvancedMachineFeature)[vs[1].(int)]
	}).(GetClusterNodeConfigAdvancedMachineFeatureOutput)
}

type GetClusterNodeConfigConfidentialNode struct {
	// Whether Confidential Nodes feature is enabled for all nodes in this pool.
	Enabled bool `pulumi:"enabled"`
}

// GetClusterNodeConfigConfidentialNodeInput is an input type that accepts GetClusterNodeConfigConfidentialNodeArgs and GetClusterNodeConfigConfidentialNodeOutput values.
// You can construct a concrete instance of `GetClusterNodeConfigConfidentialNodeInput` via:
//
//	GetClusterNodeConfigConfidentialNodeArgs{...}
type GetClusterNodeConfigConfidentialNodeInput interface {
	pulumi.Input

	ToGetClusterNodeConfigConfidentialNodeOutput() GetClusterNodeConfigConfidentialNodeOutput
	ToGetClusterNodeConfigConfidentialNodeOutputWithContext(context.Context) GetClusterNodeConfigConfidentialNodeOutput
}

type GetClusterNodeConfigConfidentialNodeArgs struct {
	// Whether Confidential Nodes feature is enabled for all nodes in this pool.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (GetClusterNodeConfigConfidentialNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodeConfigConfidentialNode)(nil)).Elem()
}

func (i GetClusterNodeConfigConfidentialNodeArgs) ToGetClusterNodeConfigConfidentialNodeOutput() GetClusterNodeConfigConfidentialNodeOutput {
	return i.ToGetClusterNodeConfigConfidentialNodeOutputWithContext(context.Background())
}

func (i GetClusterNodeConfigConfidentialNodeArgs) ToGetClusterNodeConfigConfidentialNodeOutputWithContext(ctx context.Context) GetClusterNodeConfigConfidentialNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodeConfigConfidentialNodeOutput)
}

// GetClusterNodeConfigConfidentialNodeArrayInput is an input type that accepts GetClusterNodeConfigConfidentialNodeArray and GetClusterNodeConfigConfidentialNodeArrayOutput values.
// You can construct a concrete instance of `GetClusterNodeConfigConfidentialNodeArrayInput` via:
//
//	GetClusterNodeConfigConfidentialNodeArray{ GetClusterNodeConfigConfidentialNodeArgs{...} }
type GetClusterNodeConfigConfidentialNodeArrayInput interface {
	pulumi.Input

	ToGetClusterNodeConfigConfidentialNodeArrayOutput() GetClusterNodeConfigConfidentialNodeArrayOutput
	ToGetClusterNodeConfigConfidentialNodeArrayOutputWithContext(context.Context) GetClusterNodeConfigConfidentialNodeArrayOutput
}

type GetClusterNodeConfigConfidentialNodeArray []GetClusterNodeConfigConfidentialNodeInput

func (GetClusterNodeConfigConfidentialNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodeConfigConfidentialNode)(nil)).Elem()
}

func (i GetClusterNodeConfigConfidentialNodeArray) ToGetClusterNodeConfigConfidentialNodeArrayOutput() GetClusterNodeConfigConfidentialNodeArrayOutput {
	return i.ToGetClusterNodeConfigConfidentialNodeArrayOutputWithContext(context.Background())
}

func (i GetClusterNodeConfigConfidentialNodeArray) ToGetClusterNodeConfigConfidentialNodeArrayOutputWithContext(ctx context.Context) GetClusterNodeConfigConfidentialNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodeConfigConfidentialNodeArrayOutput)
}

type GetClusterNodeConfigConfidentialNodeOutput struct{ *pulumi.OutputState }

func (GetClusterNodeConfigConfidentialNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodeConfigConfidentialNode)(nil)).Elem()
}

func (o GetClusterNodeConfigConfidentialNodeOutput) ToGetClusterNodeConfigConfidentialNodeOutput() GetClusterNodeConfigConfidentialNodeOutput {
	return o
}

func (o GetClusterNodeConfigConfidentialNodeOutput) ToGetClusterNodeConfigConfidentialNodeOutputWithContext(ctx context.Context) GetClusterNodeConfigConfidentialNodeOutput {
	return o
}

// Whether Confidential Nodes feature is enabled for all nodes in this pool.
func (o GetClusterNodeConfigConfidentialNodeOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterNodeConfigConfidentialNode) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type GetClusterNodeConfigConfidentialNodeArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNodeConfigConfidentialNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodeConfigConfidentialNode)(nil)).Elem()
}

func (o GetClusterNodeConfigConfidentialNodeArrayOutput) ToGetClusterNodeConfigConfidentialNodeArrayOutput() GetClusterNodeConfigConfidentialNodeArrayOutput {
	return o
}

func (o GetClusterNodeConfigConfidentialNodeArrayOutput) ToGetClusterNodeConfigConfidentialNodeArrayOutputWithContext(ctx context.Context) GetClusterNodeConfigConfidentialNodeArrayOutput {
	return o
}

func (o GetClusterNodeConfigConfidentialNodeArrayOutput) Index(i pulumi.IntInput) GetClusterNodeConfigConfidentialNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNodeConfigConfidentialNode {
		return vs[0].([]GetClusterNodeConfigConfidentialNode)[vs[1].(int)]
	}).(GetClusterNodeConfigConfidentialNodeOutput)
}

type GetClusterNodeConfigEffectiveTaint struct {
	// Effect for taint.
	Effect string `pulumi:"effect"`
	// Key for taint.
	Key string `pulumi:"key"`
	// Value for taint.
	Value string `pulumi:"value"`
}

// GetClusterNodeConfigEffectiveTaintInput is an input type that accepts GetClusterNodeConfigEffectiveTaintArgs and GetClusterNodeConfigEffectiveTaintOutput values.
// You can construct a concrete instance of `GetClusterNodeConfigEffectiveTaintInput` via:
//
//	GetClusterNodeConfigEffectiveTaintArgs{...}
type GetClusterNodeConfigEffectiveTaintInput interface {
	pulumi.Input

	ToGetClusterNodeConfigEffectiveTaintOutput() GetClusterNodeConfigEffectiveTaintOutput
	ToGetClusterNodeConfigEffectiveTaintOutputWithContext(context.Context) GetClusterNodeConfigEffectiveTaintOutput
}

type GetClusterNodeConfigEffectiveTaintArgs struct {
	// Effect for taint.
	Effect pulumi.StringInput `pulumi:"effect"`
	// Key for taint.
	Key pulumi.StringInput `pulumi:"key"`
	// Value for taint.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetClusterNodeConfigEffectiveTaintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodeConfigEffectiveTaint)(nil)).Elem()
}

func (i GetClusterNodeConfigEffectiveTaintArgs) ToGetClusterNodeConfigEffectiveTaintOutput() GetClusterNodeConfigEffectiveTaintOutput {
	return i.ToGetClusterNodeConfigEffectiveTaintOutputWithContext(context.Background())
}

func (i GetClusterNodeConfigEffectiveTaintArgs) ToGetClusterNodeConfigEffectiveTaintOutputWithContext(ctx context.Context) GetClusterNodeConfigEffectiveTaintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodeConfigEffectiveTaintOutput)
}

// GetClusterNodeConfigEffectiveTaintArrayInput is an input type that accepts GetClusterNodeConfigEffectiveTaintArray and GetClusterNodeConfigEffectiveTaintArrayOutput values.
// You can construct a concrete instance of `GetClusterNodeConfigEffectiveTaintArrayInput` via:
//
//	GetClusterNodeConfigEffectiveTaintArray{ GetClusterNodeConfigEffectiveTaintArgs{...} }
type GetClusterNodeConfigEffectiveTaintArrayInput interface {
	pulumi.Input

	ToGetClusterNodeConfigEffectiveTaintArrayOutput() GetClusterNodeConfigEffectiveTaintArrayOutput
	ToGetClusterNodeConfigEffectiveTaintArrayOutputWithContext(context.Context) GetClusterNodeConfigEffectiveTaintArrayOutput
}

type GetClusterNodeConfigEffectiveTaintArray []GetClusterNodeConfigEffectiveTaintInput

func (GetClusterNodeConfigEffectiveTaintArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodeConfigEffectiveTaint)(nil)).Elem()
}

func (i GetClusterNodeConfigEffectiveTaintArray) ToGetClusterNodeConfigEffectiveTaintArrayOutput() GetClusterNodeConfigEffectiveTaintArrayOutput {
	return i.ToGetClusterNodeConfigEffectiveTaintArrayOutputWithContext(context.Background())
}

func (i GetClusterNodeConfigEffectiveTaintArray) ToGetClusterNodeConfigEffectiveTaintArrayOutputWithContext(ctx context.Context) GetClusterNodeConfigEffectiveTaintArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodeConfigEffectiveTaintArrayOutput)
}

type GetClusterNodeConfigEffectiveTaintOutput struct{ *pulumi.OutputState }

func (GetClusterNodeConfigEffectiveTaintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodeConfigEffectiveTaint)(nil)).Elem()
}

func (o GetClusterNodeConfigEffectiveTaintOutput) ToGetClusterNodeConfigEffectiveTaintOutput() GetClusterNodeConfigEffectiveTaintOutput {
	return o
}

func (o GetClusterNodeConfigEffectiveTaintOutput) ToGetClusterNodeConfigEffectiveTaintOutputWithContext(ctx context.Context) GetClusterNodeConfigEffectiveTaintOutput {
	return o
}

// Effect for taint.
func (o GetClusterNodeConfigEffectiveTaintOutput) Effect() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodeConfigEffectiveTaint) string { return v.Effect }).(pulumi.StringOutput)
}

// Key for taint.
func (o GetClusterNodeConfigEffectiveTaintOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodeConfigEffectiveTaint) string { return v.Key }).(pulumi.StringOutput)
}

// Value for taint.
func (o GetClusterNodeConfigEffectiveTaintOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodeConfigEffectiveTaint) string { return v.Value }).(pulumi.StringOutput)
}

type GetClusterNodeConfigEffectiveTaintArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNodeConfigEffectiveTaintArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodeConfigEffectiveTaint)(nil)).Elem()
}

func (o GetClusterNodeConfigEffectiveTaintArrayOutput) ToGetClusterNodeConfigEffectiveTaintArrayOutput() GetClusterNodeConfigEffectiveTaintArrayOutput {
	return o
}

func (o GetClusterNodeConfigEffectiveTaintArrayOutput) ToGetClusterNodeConfigEffectiveTaintArrayOutputWithContext(ctx context.Context) GetClusterNodeConfigEffectiveTaintArrayOutput {
	return o
}

func (o GetClusterNodeConfigEffectiveTaintArrayOutput) Index(i pulumi.IntInput) GetClusterNodeConfigEffectiveTaintOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNodeConfigEffectiveTaint {
		return vs[0].([]GetClusterNodeConfigEffectiveTaint)[vs[1].(int)]
	}).(GetClusterNodeConfigEffectiveTaintOutput)
}

type GetClusterNodeConfigEphemeralStorageConfig struct {
	// Number of local SSDs to use to back ephemeral storage. Uses NVMe interfaces. Each local SSD must be 375 or 3000 GB in size, and all local SSDs must share the same size.
	LocalSsdCount int `pulumi:"localSsdCount"`
}

// GetClusterNodeConfigEphemeralStorageConfigInput is an input type that accepts GetClusterNodeConfigEphemeralStorageConfigArgs and GetClusterNodeConfigEphemeralStorageConfigOutput values.
// You can construct a concrete instance of `GetClusterNodeConfigEphemeralStorageConfigInput` via:
//
//	GetClusterNodeConfigEphemeralStorageConfigArgs{...}
type GetClusterNodeConfigEphemeralStorageConfigInput interface {
	pulumi.Input

	ToGetClusterNodeConfigEphemeralStorageConfigOutput() GetClusterNodeConfigEphemeralStorageConfigOutput
	ToGetClusterNodeConfigEphemeralStorageConfigOutputWithContext(context.Context) GetClusterNodeConfigEphemeralStorageConfigOutput
}

type GetClusterNodeConfigEphemeralStorageConfigArgs struct {
	// Number of local SSDs to use to back ephemeral storage. Uses NVMe interfaces. Each local SSD must be 375 or 3000 GB in size, and all local SSDs must share the same size.
	LocalSsdCount pulumi.IntInput `pulumi:"localSsdCount"`
}

func (GetClusterNodeConfigEphemeralStorageConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodeConfigEphemeralStorageConfig)(nil)).Elem()
}

func (i GetClusterNodeConfigEphemeralStorageConfigArgs) ToGetClusterNodeConfigEphemeralStorageConfigOutput() GetClusterNodeConfigEphemeralStorageConfigOutput {
	return i.ToGetClusterNodeConfigEphemeralStorageConfigOutputWithContext(context.Background())
}

func (i GetClusterNodeConfigEphemeralStorageConfigArgs) ToGetClusterNodeConfigEphemeralStorageConfigOutputWithContext(ctx context.Context) GetClusterNodeConfigEphemeralStorageConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodeConfigEphemeralStorageConfigOutput)
}

// GetClusterNodeConfigEphemeralStorageConfigArrayInput is an input type that accepts GetClusterNodeConfigEphemeralStorageConfigArray and GetClusterNodeConfigEphemeralStorageConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterNodeConfigEphemeralStorageConfigArrayInput` via:
//
//	GetClusterNodeConfigEphemeralStorageConfigArray{ GetClusterNodeConfigEphemeralStorageConfigArgs{...} }
type GetClusterNodeConfigEphemeralStorageConfigArrayInput interface {
	pulumi.Input

	ToGetClusterNodeConfigEphemeralStorageConfigArrayOutput() GetClusterNodeConfigEphemeralStorageConfigArrayOutput
	ToGetClusterNodeConfigEphemeralStorageConfigArrayOutputWithContext(context.Context) GetClusterNodeConfigEphemeralStorageConfigArrayOutput
}

type GetClusterNodeConfigEphemeralStorageConfigArray []GetClusterNodeConfigEphemeralStorageConfigInput

func (GetClusterNodeConfigEphemeralStorageConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodeConfigEphemeralStorageConfig)(nil)).Elem()
}

func (i GetClusterNodeConfigEphemeralStorageConfigArray) ToGetClusterNodeConfigEphemeralStorageConfigArrayOutput() GetClusterNodeConfigEphemeralStorageConfigArrayOutput {
	return i.ToGetClusterNodeConfigEphemeralStorageConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterNodeConfigEphemeralStorageConfigArray) ToGetClusterNodeConfigEphemeralStorageConfigArrayOutputWithContext(ctx context.Context) GetClusterNodeConfigEphemeralStorageConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodeConfigEphemeralStorageConfigArrayOutput)
}

type GetClusterNodeConfigEphemeralStorageConfigOutput struct{ *pulumi.OutputState }

func (GetClusterNodeConfigEphemeralStorageConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodeConfigEphemeralStorageConfig)(nil)).Elem()
}

func (o GetClusterNodeConfigEphemeralStorageConfigOutput) ToGetClusterNodeConfigEphemeralStorageConfigOutput() GetClusterNodeConfigEphemeralStorageConfigOutput {
	return o
}

func (o GetClusterNodeConfigEphemeralStorageConfigOutput) ToGetClusterNodeConfigEphemeralStorageConfigOutputWithContext(ctx context.Context) GetClusterNodeConfigEphemeralStorageConfigOutput {
	return o
}

// Number of local SSDs to use to back ephemeral storage. Uses NVMe interfaces. Each local SSD must be 375 or 3000 GB in size, and all local SSDs must share the same size.
func (o GetClusterNodeConfigEphemeralStorageConfigOutput) LocalSsdCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterNodeConfigEphemeralStorageConfig) int { return v.LocalSsdCount }).(pulumi.IntOutput)
}

type GetClusterNodeConfigEphemeralStorageConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNodeConfigEphemeralStorageConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodeConfigEphemeralStorageConfig)(nil)).Elem()
}

func (o GetClusterNodeConfigEphemeralStorageConfigArrayOutput) ToGetClusterNodeConfigEphemeralStorageConfigArrayOutput() GetClusterNodeConfigEphemeralStorageConfigArrayOutput {
	return o
}

func (o GetClusterNodeConfigEphemeralStorageConfigArrayOutput) ToGetClusterNodeConfigEphemeralStorageConfigArrayOutputWithContext(ctx context.Context) GetClusterNodeConfigEphemeralStorageConfigArrayOutput {
	return o
}

func (o GetClusterNodeConfigEphemeralStorageConfigArrayOutput) Index(i pulumi.IntInput) GetClusterNodeConfigEphemeralStorageConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNodeConfigEphemeralStorageConfig {
		return vs[0].([]GetClusterNodeConfigEphemeralStorageConfig)[vs[1].(int)]
	}).(GetClusterNodeConfigEphemeralStorageConfigOutput)
}

type GetClusterNodeConfigEphemeralStorageLocalSsdConfig struct {
	// Number of local SSDs to use to back ephemeral storage. Uses NVMe interfaces. Each local SSD must be 375 or 3000 GB in size, and all local SSDs must share the same size.
	LocalSsdCount int `pulumi:"localSsdCount"`
}

// GetClusterNodeConfigEphemeralStorageLocalSsdConfigInput is an input type that accepts GetClusterNodeConfigEphemeralStorageLocalSsdConfigArgs and GetClusterNodeConfigEphemeralStorageLocalSsdConfigOutput values.
// You can construct a concrete instance of `GetClusterNodeConfigEphemeralStorageLocalSsdConfigInput` via:
//
//	GetClusterNodeConfigEphemeralStorageLocalSsdConfigArgs{...}
type GetClusterNodeConfigEphemeralStorageLocalSsdConfigInput interface {
	pulumi.Input

	ToGetClusterNodeConfigEphemeralStorageLocalSsdConfigOutput() GetClusterNodeConfigEphemeralStorageLocalSsdConfigOutput
	ToGetClusterNodeConfigEphemeralStorageLocalSsdConfigOutputWithContext(context.Context) GetClusterNodeConfigEphemeralStorageLocalSsdConfigOutput
}

type GetClusterNodeConfigEphemeralStorageLocalSsdConfigArgs struct {
	// Number of local SSDs to use to back ephemeral storage. Uses NVMe interfaces. Each local SSD must be 375 or 3000 GB in size, and all local SSDs must share the same size.
	LocalSsdCount pulumi.IntInput `pulumi:"localSsdCount"`
}

func (GetClusterNodeConfigEphemeralStorageLocalSsdConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodeConfigEphemeralStorageLocalSsdConfig)(nil)).Elem()
}

func (i GetClusterNodeConfigEphemeralStorageLocalSsdConfigArgs) ToGetClusterNodeConfigEphemeralStorageLocalSsdConfigOutput() GetClusterNodeConfigEphemeralStorageLocalSsdConfigOutput {
	return i.ToGetClusterNodeConfigEphemeralStorageLocalSsdConfigOutputWithContext(context.Background())
}

func (i GetClusterNodeConfigEphemeralStorageLocalSsdConfigArgs) ToGetClusterNodeConfigEphemeralStorageLocalSsdConfigOutputWithContext(ctx context.Context) GetClusterNodeConfigEphemeralStorageLocalSsdConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodeConfigEphemeralStorageLocalSsdConfigOutput)
}

// GetClusterNodeConfigEphemeralStorageLocalSsdConfigArrayInput is an input type that accepts GetClusterNodeConfigEphemeralStorageLocalSsdConfigArray and GetClusterNodeConfigEphemeralStorageLocalSsdConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterNodeConfigEphemeralStorageLocalSsdConfigArrayInput` via:
//
//	GetClusterNodeConfigEphemeralStorageLocalSsdConfigArray{ GetClusterNodeConfigEphemeralStorageLocalSsdConfigArgs{...} }
type GetClusterNodeConfigEphemeralStorageLocalSsdConfigArrayInput interface {
	pulumi.Input

	ToGetClusterNodeConfigEphemeralStorageLocalSsdConfigArrayOutput() GetClusterNodeConfigEphemeralStorageLocalSsdConfigArrayOutput
	ToGetClusterNodeConfigEphemeralStorageLocalSsdConfigArrayOutputWithContext(context.Context) GetClusterNodeConfigEphemeralStorageLocalSsdConfigArrayOutput
}

type GetClusterNodeConfigEphemeralStorageLocalSsdConfigArray []GetClusterNodeConfigEphemeralStorageLocalSsdConfigInput

func (GetClusterNodeConfigEphemeralStorageLocalSsdConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodeConfigEphemeralStorageLocalSsdConfig)(nil)).Elem()
}

func (i GetClusterNodeConfigEphemeralStorageLocalSsdConfigArray) ToGetClusterNodeConfigEphemeralStorageLocalSsdConfigArrayOutput() GetClusterNodeConfigEphemeralStorageLocalSsdConfigArrayOutput {
	return i.ToGetClusterNodeConfigEphemeralStorageLocalSsdConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterNodeConfigEphemeralStorageLocalSsdConfigArray) ToGetClusterNodeConfigEphemeralStorageLocalSsdConfigArrayOutputWithContext(ctx context.Context) GetClusterNodeConfigEphemeralStorageLocalSsdConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodeConfigEphemeralStorageLocalSsdConfigArrayOutput)
}

type GetClusterNodeConfigEphemeralStorageLocalSsdConfigOutput struct{ *pulumi.OutputState }

func (GetClusterNodeConfigEphemeralStorageLocalSsdConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodeConfigEphemeralStorageLocalSsdConfig)(nil)).Elem()
}

func (o GetClusterNodeConfigEphemeralStorageLocalSsdConfigOutput) ToGetClusterNodeConfigEphemeralStorageLocalSsdConfigOutput() GetClusterNodeConfigEphemeralStorageLocalSsdConfigOutput {
	return o
}

func (o GetClusterNodeConfigEphemeralStorageLocalSsdConfigOutput) ToGetClusterNodeConfigEphemeralStorageLocalSsdConfigOutputWithContext(ctx context.Context) GetClusterNodeConfigEphemeralStorageLocalSsdConfigOutput {
	return o
}

// Number of local SSDs to use to back ephemeral storage. Uses NVMe interfaces. Each local SSD must be 375 or 3000 GB in size, and all local SSDs must share the same size.
func (o GetClusterNodeConfigEphemeralStorageLocalSsdConfigOutput) LocalSsdCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterNodeConfigEphemeralStorageLocalSsdConfig) int { return v.LocalSsdCount }).(pulumi.IntOutput)
}

type GetClusterNodeConfigEphemeralStorageLocalSsdConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNodeConfigEphemeralStorageLocalSsdConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodeConfigEphemeralStorageLocalSsdConfig)(nil)).Elem()
}

func (o GetClusterNodeConfigEphemeralStorageLocalSsdConfigArrayOutput) ToGetClusterNodeConfigEphemeralStorageLocalSsdConfigArrayOutput() GetClusterNodeConfigEphemeralStorageLocalSsdConfigArrayOutput {
	return o
}

func (o GetClusterNodeConfigEphemeralStorageLocalSsdConfigArrayOutput) ToGetClusterNodeConfigEphemeralStorageLocalSsdConfigArrayOutputWithContext(ctx context.Context) GetClusterNodeConfigEphemeralStorageLocalSsdConfigArrayOutput {
	return o
}

func (o GetClusterNodeConfigEphemeralStorageLocalSsdConfigArrayOutput) Index(i pulumi.IntInput) GetClusterNodeConfigEphemeralStorageLocalSsdConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNodeConfigEphemeralStorageLocalSsdConfig {
		return vs[0].([]GetClusterNodeConfigEphemeralStorageLocalSsdConfig)[vs[1].(int)]
	}).(GetClusterNodeConfigEphemeralStorageLocalSsdConfigOutput)
}

type GetClusterNodeConfigFastSocket struct {
	// Whether or not NCCL Fast Socket is enabled
	Enabled bool `pulumi:"enabled"`
}

// GetClusterNodeConfigFastSocketInput is an input type that accepts GetClusterNodeConfigFastSocketArgs and GetClusterNodeConfigFastSocketOutput values.
// You can construct a concrete instance of `GetClusterNodeConfigFastSocketInput` via:
//
//	GetClusterNodeConfigFastSocketArgs{...}
type GetClusterNodeConfigFastSocketInput interface {
	pulumi.Input

	ToGetClusterNodeConfigFastSocketOutput() GetClusterNodeConfigFastSocketOutput
	ToGetClusterNodeConfigFastSocketOutputWithContext(context.Context) GetClusterNodeConfigFastSocketOutput
}

type GetClusterNodeConfigFastSocketArgs struct {
	// Whether or not NCCL Fast Socket is enabled
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (GetClusterNodeConfigFastSocketArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodeConfigFastSocket)(nil)).Elem()
}

func (i GetClusterNodeConfigFastSocketArgs) ToGetClusterNodeConfigFastSocketOutput() GetClusterNodeConfigFastSocketOutput {
	return i.ToGetClusterNodeConfigFastSocketOutputWithContext(context.Background())
}

func (i GetClusterNodeConfigFastSocketArgs) ToGetClusterNodeConfigFastSocketOutputWithContext(ctx context.Context) GetClusterNodeConfigFastSocketOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodeConfigFastSocketOutput)
}

// GetClusterNodeConfigFastSocketArrayInput is an input type that accepts GetClusterNodeConfigFastSocketArray and GetClusterNodeConfigFastSocketArrayOutput values.
// You can construct a concrete instance of `GetClusterNodeConfigFastSocketArrayInput` via:
//
//	GetClusterNodeConfigFastSocketArray{ GetClusterNodeConfigFastSocketArgs{...} }
type GetClusterNodeConfigFastSocketArrayInput interface {
	pulumi.Input

	ToGetClusterNodeConfigFastSocketArrayOutput() GetClusterNodeConfigFastSocketArrayOutput
	ToGetClusterNodeConfigFastSocketArrayOutputWithContext(context.Context) GetClusterNodeConfigFastSocketArrayOutput
}

type GetClusterNodeConfigFastSocketArray []GetClusterNodeConfigFastSocketInput

func (GetClusterNodeConfigFastSocketArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodeConfigFastSocket)(nil)).Elem()
}

func (i GetClusterNodeConfigFastSocketArray) ToGetClusterNodeConfigFastSocketArrayOutput() GetClusterNodeConfigFastSocketArrayOutput {
	return i.ToGetClusterNodeConfigFastSocketArrayOutputWithContext(context.Background())
}

func (i GetClusterNodeConfigFastSocketArray) ToGetClusterNodeConfigFastSocketArrayOutputWithContext(ctx context.Context) GetClusterNodeConfigFastSocketArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodeConfigFastSocketArrayOutput)
}

type GetClusterNodeConfigFastSocketOutput struct{ *pulumi.OutputState }

func (GetClusterNodeConfigFastSocketOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodeConfigFastSocket)(nil)).Elem()
}

func (o GetClusterNodeConfigFastSocketOutput) ToGetClusterNodeConfigFastSocketOutput() GetClusterNodeConfigFastSocketOutput {
	return o
}

func (o GetClusterNodeConfigFastSocketOutput) ToGetClusterNodeConfigFastSocketOutputWithContext(ctx context.Context) GetClusterNodeConfigFastSocketOutput {
	return o
}

// Whether or not NCCL Fast Socket is enabled
func (o GetClusterNodeConfigFastSocketOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterNodeConfigFastSocket) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type GetClusterNodeConfigFastSocketArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNodeConfigFastSocketArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodeConfigFastSocket)(nil)).Elem()
}

func (o GetClusterNodeConfigFastSocketArrayOutput) ToGetClusterNodeConfigFastSocketArrayOutput() GetClusterNodeConfigFastSocketArrayOutput {
	return o
}

func (o GetClusterNodeConfigFastSocketArrayOutput) ToGetClusterNodeConfigFastSocketArrayOutputWithContext(ctx context.Context) GetClusterNodeConfigFastSocketArrayOutput {
	return o
}

func (o GetClusterNodeConfigFastSocketArrayOutput) Index(i pulumi.IntInput) GetClusterNodeConfigFastSocketOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNodeConfigFastSocket {
		return vs[0].([]GetClusterNodeConfigFastSocket)[vs[1].(int)]
	}).(GetClusterNodeConfigFastSocketOutput)
}

type GetClusterNodeConfigGcfsConfig struct {
	// Whether or not GCFS is enabled
	Enabled bool `pulumi:"enabled"`
}

// GetClusterNodeConfigGcfsConfigInput is an input type that accepts GetClusterNodeConfigGcfsConfigArgs and GetClusterNodeConfigGcfsConfigOutput values.
// You can construct a concrete instance of `GetClusterNodeConfigGcfsConfigInput` via:
//
//	GetClusterNodeConfigGcfsConfigArgs{...}
type GetClusterNodeConfigGcfsConfigInput interface {
	pulumi.Input

	ToGetClusterNodeConfigGcfsConfigOutput() GetClusterNodeConfigGcfsConfigOutput
	ToGetClusterNodeConfigGcfsConfigOutputWithContext(context.Context) GetClusterNodeConfigGcfsConfigOutput
}

type GetClusterNodeConfigGcfsConfigArgs struct {
	// Whether or not GCFS is enabled
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (GetClusterNodeConfigGcfsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodeConfigGcfsConfig)(nil)).Elem()
}

func (i GetClusterNodeConfigGcfsConfigArgs) ToGetClusterNodeConfigGcfsConfigOutput() GetClusterNodeConfigGcfsConfigOutput {
	return i.ToGetClusterNodeConfigGcfsConfigOutputWithContext(context.Background())
}

func (i GetClusterNodeConfigGcfsConfigArgs) ToGetClusterNodeConfigGcfsConfigOutputWithContext(ctx context.Context) GetClusterNodeConfigGcfsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodeConfigGcfsConfigOutput)
}

// GetClusterNodeConfigGcfsConfigArrayInput is an input type that accepts GetClusterNodeConfigGcfsConfigArray and GetClusterNodeConfigGcfsConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterNodeConfigGcfsConfigArrayInput` via:
//
//	GetClusterNodeConfigGcfsConfigArray{ GetClusterNodeConfigGcfsConfigArgs{...} }
type GetClusterNodeConfigGcfsConfigArrayInput interface {
	pulumi.Input

	ToGetClusterNodeConfigGcfsConfigArrayOutput() GetClusterNodeConfigGcfsConfigArrayOutput
	ToGetClusterNodeConfigGcfsConfigArrayOutputWithContext(context.Context) GetClusterNodeConfigGcfsConfigArrayOutput
}

type GetClusterNodeConfigGcfsConfigArray []GetClusterNodeConfigGcfsConfigInput

func (GetClusterNodeConfigGcfsConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodeConfigGcfsConfig)(nil)).Elem()
}

func (i GetClusterNodeConfigGcfsConfigArray) ToGetClusterNodeConfigGcfsConfigArrayOutput() GetClusterNodeConfigGcfsConfigArrayOutput {
	return i.ToGetClusterNodeConfigGcfsConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterNodeConfigGcfsConfigArray) ToGetClusterNodeConfigGcfsConfigArrayOutputWithContext(ctx context.Context) GetClusterNodeConfigGcfsConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodeConfigGcfsConfigArrayOutput)
}

type GetClusterNodeConfigGcfsConfigOutput struct{ *pulumi.OutputState }

func (GetClusterNodeConfigGcfsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodeConfigGcfsConfig)(nil)).Elem()
}

func (o GetClusterNodeConfigGcfsConfigOutput) ToGetClusterNodeConfigGcfsConfigOutput() GetClusterNodeConfigGcfsConfigOutput {
	return o
}

func (o GetClusterNodeConfigGcfsConfigOutput) ToGetClusterNodeConfigGcfsConfigOutputWithContext(ctx context.Context) GetClusterNodeConfigGcfsConfigOutput {
	return o
}

// Whether or not GCFS is enabled
func (o GetClusterNodeConfigGcfsConfigOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterNodeConfigGcfsConfig) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type GetClusterNodeConfigGcfsConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNodeConfigGcfsConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodeConfigGcfsConfig)(nil)).Elem()
}

func (o GetClusterNodeConfigGcfsConfigArrayOutput) ToGetClusterNodeConfigGcfsConfigArrayOutput() GetClusterNodeConfigGcfsConfigArrayOutput {
	return o
}

func (o GetClusterNodeConfigGcfsConfigArrayOutput) ToGetClusterNodeConfigGcfsConfigArrayOutputWithContext(ctx context.Context) GetClusterNodeConfigGcfsConfigArrayOutput {
	return o
}

func (o GetClusterNodeConfigGcfsConfigArrayOutput) Index(i pulumi.IntInput) GetClusterNodeConfigGcfsConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNodeConfigGcfsConfig {
		return vs[0].([]GetClusterNodeConfigGcfsConfig)[vs[1].(int)]
	}).(GetClusterNodeConfigGcfsConfigOutput)
}

type GetClusterNodeConfigGuestAccelerator struct {
	// The number of the accelerator cards exposed to an instance.
	Count int `pulumi:"count"`
	// Configuration for auto installation of GPU driver.
	GpuDriverInstallationConfigs []GetClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfig `pulumi:"gpuDriverInstallationConfigs"`
	// Size of partitions to create on the GPU. Valid values are described in the NVIDIA mig user guide (https://docs.nvidia.com/datacenter/tesla/mig-user-guide/#partitioning)
	GpuPartitionSize string `pulumi:"gpuPartitionSize"`
	// Configuration for GPU sharing.
	GpuSharingConfigs []GetClusterNodeConfigGuestAcceleratorGpuSharingConfig `pulumi:"gpuSharingConfigs"`
	// The accelerator type resource name.
	Type string `pulumi:"type"`
}

// GetClusterNodeConfigGuestAcceleratorInput is an input type that accepts GetClusterNodeConfigGuestAcceleratorArgs and GetClusterNodeConfigGuestAcceleratorOutput values.
// You can construct a concrete instance of `GetClusterNodeConfigGuestAcceleratorInput` via:
//
//	GetClusterNodeConfigGuestAcceleratorArgs{...}
type GetClusterNodeConfigGuestAcceleratorInput interface {
	pulumi.Input

	ToGetClusterNodeConfigGuestAcceleratorOutput() GetClusterNodeConfigGuestAcceleratorOutput
	ToGetClusterNodeConfigGuestAcceleratorOutputWithContext(context.Context) GetClusterNodeConfigGuestAcceleratorOutput
}

type GetClusterNodeConfigGuestAcceleratorArgs struct {
	// The number of the accelerator cards exposed to an instance.
	Count pulumi.IntInput `pulumi:"count"`
	// Configuration for auto installation of GPU driver.
	GpuDriverInstallationConfigs GetClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigArrayInput `pulumi:"gpuDriverInstallationConfigs"`
	// Size of partitions to create on the GPU. Valid values are described in the NVIDIA mig user guide (https://docs.nvidia.com/datacenter/tesla/mig-user-guide/#partitioning)
	GpuPartitionSize pulumi.StringInput `pulumi:"gpuPartitionSize"`
	// Configuration for GPU sharing.
	GpuSharingConfigs GetClusterNodeConfigGuestAcceleratorGpuSharingConfigArrayInput `pulumi:"gpuSharingConfigs"`
	// The accelerator type resource name.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetClusterNodeConfigGuestAcceleratorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodeConfigGuestAccelerator)(nil)).Elem()
}

func (i GetClusterNodeConfigGuestAcceleratorArgs) ToGetClusterNodeConfigGuestAcceleratorOutput() GetClusterNodeConfigGuestAcceleratorOutput {
	return i.ToGetClusterNodeConfigGuestAcceleratorOutputWithContext(context.Background())
}

func (i GetClusterNodeConfigGuestAcceleratorArgs) ToGetClusterNodeConfigGuestAcceleratorOutputWithContext(ctx context.Context) GetClusterNodeConfigGuestAcceleratorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodeConfigGuestAcceleratorOutput)
}

// GetClusterNodeConfigGuestAcceleratorArrayInput is an input type that accepts GetClusterNodeConfigGuestAcceleratorArray and GetClusterNodeConfigGuestAcceleratorArrayOutput values.
// You can construct a concrete instance of `GetClusterNodeConfigGuestAcceleratorArrayInput` via:
//
//	GetClusterNodeConfigGuestAcceleratorArray{ GetClusterNodeConfigGuestAcceleratorArgs{...} }
type GetClusterNodeConfigGuestAcceleratorArrayInput interface {
	pulumi.Input

	ToGetClusterNodeConfigGuestAcceleratorArrayOutput() GetClusterNodeConfigGuestAcceleratorArrayOutput
	ToGetClusterNodeConfigGuestAcceleratorArrayOutputWithContext(context.Context) GetClusterNodeConfigGuestAcceleratorArrayOutput
}

type GetClusterNodeConfigGuestAcceleratorArray []GetClusterNodeConfigGuestAcceleratorInput

func (GetClusterNodeConfigGuestAcceleratorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodeConfigGuestAccelerator)(nil)).Elem()
}

func (i GetClusterNodeConfigGuestAcceleratorArray) ToGetClusterNodeConfigGuestAcceleratorArrayOutput() GetClusterNodeConfigGuestAcceleratorArrayOutput {
	return i.ToGetClusterNodeConfigGuestAcceleratorArrayOutputWithContext(context.Background())
}

func (i GetClusterNodeConfigGuestAcceleratorArray) ToGetClusterNodeConfigGuestAcceleratorArrayOutputWithContext(ctx context.Context) GetClusterNodeConfigGuestAcceleratorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodeConfigGuestAcceleratorArrayOutput)
}

type GetClusterNodeConfigGuestAcceleratorOutput struct{ *pulumi.OutputState }

func (GetClusterNodeConfigGuestAcceleratorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodeConfigGuestAccelerator)(nil)).Elem()
}

func (o GetClusterNodeConfigGuestAcceleratorOutput) ToGetClusterNodeConfigGuestAcceleratorOutput() GetClusterNodeConfigGuestAcceleratorOutput {
	return o
}

func (o GetClusterNodeConfigGuestAcceleratorOutput) ToGetClusterNodeConfigGuestAcceleratorOutputWithContext(ctx context.Context) GetClusterNodeConfigGuestAcceleratorOutput {
	return o
}

// The number of the accelerator cards exposed to an instance.
func (o GetClusterNodeConfigGuestAcceleratorOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterNodeConfigGuestAccelerator) int { return v.Count }).(pulumi.IntOutput)
}

// Configuration for auto installation of GPU driver.
func (o GetClusterNodeConfigGuestAcceleratorOutput) GpuDriverInstallationConfigs() GetClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigArrayOutput {
	return o.ApplyT(func(v GetClusterNodeConfigGuestAccelerator) []GetClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfig {
		return v.GpuDriverInstallationConfigs
	}).(GetClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigArrayOutput)
}

// Size of partitions to create on the GPU. Valid values are described in the NVIDIA mig user guide (https://docs.nvidia.com/datacenter/tesla/mig-user-guide/#partitioning)
func (o GetClusterNodeConfigGuestAcceleratorOutput) GpuPartitionSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodeConfigGuestAccelerator) string { return v.GpuPartitionSize }).(pulumi.StringOutput)
}

// Configuration for GPU sharing.
func (o GetClusterNodeConfigGuestAcceleratorOutput) GpuSharingConfigs() GetClusterNodeConfigGuestAcceleratorGpuSharingConfigArrayOutput {
	return o.ApplyT(func(v GetClusterNodeConfigGuestAccelerator) []GetClusterNodeConfigGuestAcceleratorGpuSharingConfig {
		return v.GpuSharingConfigs
	}).(GetClusterNodeConfigGuestAcceleratorGpuSharingConfigArrayOutput)
}

// The accelerator type resource name.
func (o GetClusterNodeConfigGuestAcceleratorOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodeConfigGuestAccelerator) string { return v.Type }).(pulumi.StringOutput)
}

type GetClusterNodeConfigGuestAcceleratorArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNodeConfigGuestAcceleratorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodeConfigGuestAccelerator)(nil)).Elem()
}

func (o GetClusterNodeConfigGuestAcceleratorArrayOutput) ToGetClusterNodeConfigGuestAcceleratorArrayOutput() GetClusterNodeConfigGuestAcceleratorArrayOutput {
	return o
}

func (o GetClusterNodeConfigGuestAcceleratorArrayOutput) ToGetClusterNodeConfigGuestAcceleratorArrayOutputWithContext(ctx context.Context) GetClusterNodeConfigGuestAcceleratorArrayOutput {
	return o
}

func (o GetClusterNodeConfigGuestAcceleratorArrayOutput) Index(i pulumi.IntInput) GetClusterNodeConfigGuestAcceleratorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNodeConfigGuestAccelerator {
		return vs[0].([]GetClusterNodeConfigGuestAccelerator)[vs[1].(int)]
	}).(GetClusterNodeConfigGuestAcceleratorOutput)
}

type GetClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfig struct {
	// Mode for how the GPU driver is installed.
	GpuDriverVersion string `pulumi:"gpuDriverVersion"`
}

// GetClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigInput is an input type that accepts GetClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigArgs and GetClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput values.
// You can construct a concrete instance of `GetClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigInput` via:
//
//	GetClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigArgs{...}
type GetClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigInput interface {
	pulumi.Input

	ToGetClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput() GetClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput
	ToGetClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutputWithContext(context.Context) GetClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput
}

type GetClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigArgs struct {
	// Mode for how the GPU driver is installed.
	GpuDriverVersion pulumi.StringInput `pulumi:"gpuDriverVersion"`
}

func (GetClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfig)(nil)).Elem()
}

func (i GetClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigArgs) ToGetClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput() GetClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput {
	return i.ToGetClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutputWithContext(context.Background())
}

func (i GetClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigArgs) ToGetClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutputWithContext(ctx context.Context) GetClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput)
}

// GetClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigArrayInput is an input type that accepts GetClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigArray and GetClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigArrayInput` via:
//
//	GetClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigArray{ GetClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigArgs{...} }
type GetClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigArrayInput interface {
	pulumi.Input

	ToGetClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigArrayOutput() GetClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigArrayOutput
	ToGetClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigArrayOutputWithContext(context.Context) GetClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigArrayOutput
}

type GetClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigArray []GetClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigInput

func (GetClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfig)(nil)).Elem()
}

func (i GetClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigArray) ToGetClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigArrayOutput() GetClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigArrayOutput {
	return i.ToGetClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigArray) ToGetClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigArrayOutputWithContext(ctx context.Context) GetClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigArrayOutput)
}

type GetClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput struct{ *pulumi.OutputState }

func (GetClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfig)(nil)).Elem()
}

func (o GetClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput) ToGetClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput() GetClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput {
	return o
}

func (o GetClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput) ToGetClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutputWithContext(ctx context.Context) GetClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput {
	return o
}

// Mode for how the GPU driver is installed.
func (o GetClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput) GpuDriverVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfig) string {
		return v.GpuDriverVersion
	}).(pulumi.StringOutput)
}

type GetClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfig)(nil)).Elem()
}

func (o GetClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigArrayOutput) ToGetClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigArrayOutput() GetClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigArrayOutput {
	return o
}

func (o GetClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigArrayOutput) ToGetClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigArrayOutputWithContext(ctx context.Context) GetClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigArrayOutput {
	return o
}

func (o GetClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigArrayOutput) Index(i pulumi.IntInput) GetClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfig {
		return vs[0].([]GetClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfig)[vs[1].(int)]
	}).(GetClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput)
}

type GetClusterNodeConfigGuestAcceleratorGpuSharingConfig struct {
	// The type of GPU sharing strategy to enable on the GPU node. Possible values are described in the API package (https://pkg.go.dev/google.golang.org/api/container/v1#GPUSharingConfig)
	GpuSharingStrategy string `pulumi:"gpuSharingStrategy"`
	// The maximum number of containers that can share a GPU.
	MaxSharedClientsPerGpu int `pulumi:"maxSharedClientsPerGpu"`
}

// GetClusterNodeConfigGuestAcceleratorGpuSharingConfigInput is an input type that accepts GetClusterNodeConfigGuestAcceleratorGpuSharingConfigArgs and GetClusterNodeConfigGuestAcceleratorGpuSharingConfigOutput values.
// You can construct a concrete instance of `GetClusterNodeConfigGuestAcceleratorGpuSharingConfigInput` via:
//
//	GetClusterNodeConfigGuestAcceleratorGpuSharingConfigArgs{...}
type GetClusterNodeConfigGuestAcceleratorGpuSharingConfigInput interface {
	pulumi.Input

	ToGetClusterNodeConfigGuestAcceleratorGpuSharingConfigOutput() GetClusterNodeConfigGuestAcceleratorGpuSharingConfigOutput
	ToGetClusterNodeConfigGuestAcceleratorGpuSharingConfigOutputWithContext(context.Context) GetClusterNodeConfigGuestAcceleratorGpuSharingConfigOutput
}

type GetClusterNodeConfigGuestAcceleratorGpuSharingConfigArgs struct {
	// The type of GPU sharing strategy to enable on the GPU node. Possible values are described in the API package (https://pkg.go.dev/google.golang.org/api/container/v1#GPUSharingConfig)
	GpuSharingStrategy pulumi.StringInput `pulumi:"gpuSharingStrategy"`
	// The maximum number of containers that can share a GPU.
	MaxSharedClientsPerGpu pulumi.IntInput `pulumi:"maxSharedClientsPerGpu"`
}

func (GetClusterNodeConfigGuestAcceleratorGpuSharingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodeConfigGuestAcceleratorGpuSharingConfig)(nil)).Elem()
}

func (i GetClusterNodeConfigGuestAcceleratorGpuSharingConfigArgs) ToGetClusterNodeConfigGuestAcceleratorGpuSharingConfigOutput() GetClusterNodeConfigGuestAcceleratorGpuSharingConfigOutput {
	return i.ToGetClusterNodeConfigGuestAcceleratorGpuSharingConfigOutputWithContext(context.Background())
}

func (i GetClusterNodeConfigGuestAcceleratorGpuSharingConfigArgs) ToGetClusterNodeConfigGuestAcceleratorGpuSharingConfigOutputWithContext(ctx context.Context) GetClusterNodeConfigGuestAcceleratorGpuSharingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodeConfigGuestAcceleratorGpuSharingConfigOutput)
}

// GetClusterNodeConfigGuestAcceleratorGpuSharingConfigArrayInput is an input type that accepts GetClusterNodeConfigGuestAcceleratorGpuSharingConfigArray and GetClusterNodeConfigGuestAcceleratorGpuSharingConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterNodeConfigGuestAcceleratorGpuSharingConfigArrayInput` via:
//
//	GetClusterNodeConfigGuestAcceleratorGpuSharingConfigArray{ GetClusterNodeConfigGuestAcceleratorGpuSharingConfigArgs{...} }
type GetClusterNodeConfigGuestAcceleratorGpuSharingConfigArrayInput interface {
	pulumi.Input

	ToGetClusterNodeConfigGuestAcceleratorGpuSharingConfigArrayOutput() GetClusterNodeConfigGuestAcceleratorGpuSharingConfigArrayOutput
	ToGetClusterNodeConfigGuestAcceleratorGpuSharingConfigArrayOutputWithContext(context.Context) GetClusterNodeConfigGuestAcceleratorGpuSharingConfigArrayOutput
}

type GetClusterNodeConfigGuestAcceleratorGpuSharingConfigArray []GetClusterNodeConfigGuestAcceleratorGpuSharingConfigInput

func (GetClusterNodeConfigGuestAcceleratorGpuSharingConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodeConfigGuestAcceleratorGpuSharingConfig)(nil)).Elem()
}

func (i GetClusterNodeConfigGuestAcceleratorGpuSharingConfigArray) ToGetClusterNodeConfigGuestAcceleratorGpuSharingConfigArrayOutput() GetClusterNodeConfigGuestAcceleratorGpuSharingConfigArrayOutput {
	return i.ToGetClusterNodeConfigGuestAcceleratorGpuSharingConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterNodeConfigGuestAcceleratorGpuSharingConfigArray) ToGetClusterNodeConfigGuestAcceleratorGpuSharingConfigArrayOutputWithContext(ctx context.Context) GetClusterNodeConfigGuestAcceleratorGpuSharingConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodeConfigGuestAcceleratorGpuSharingConfigArrayOutput)
}

type GetClusterNodeConfigGuestAcceleratorGpuSharingConfigOutput struct{ *pulumi.OutputState }

func (GetClusterNodeConfigGuestAcceleratorGpuSharingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodeConfigGuestAcceleratorGpuSharingConfig)(nil)).Elem()
}

func (o GetClusterNodeConfigGuestAcceleratorGpuSharingConfigOutput) ToGetClusterNodeConfigGuestAcceleratorGpuSharingConfigOutput() GetClusterNodeConfigGuestAcceleratorGpuSharingConfigOutput {
	return o
}

func (o GetClusterNodeConfigGuestAcceleratorGpuSharingConfigOutput) ToGetClusterNodeConfigGuestAcceleratorGpuSharingConfigOutputWithContext(ctx context.Context) GetClusterNodeConfigGuestAcceleratorGpuSharingConfigOutput {
	return o
}

// The type of GPU sharing strategy to enable on the GPU node. Possible values are described in the API package (https://pkg.go.dev/google.golang.org/api/container/v1#GPUSharingConfig)
func (o GetClusterNodeConfigGuestAcceleratorGpuSharingConfigOutput) GpuSharingStrategy() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodeConfigGuestAcceleratorGpuSharingConfig) string { return v.GpuSharingStrategy }).(pulumi.StringOutput)
}

// The maximum number of containers that can share a GPU.
func (o GetClusterNodeConfigGuestAcceleratorGpuSharingConfigOutput) MaxSharedClientsPerGpu() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterNodeConfigGuestAcceleratorGpuSharingConfig) int { return v.MaxSharedClientsPerGpu }).(pulumi.IntOutput)
}

type GetClusterNodeConfigGuestAcceleratorGpuSharingConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNodeConfigGuestAcceleratorGpuSharingConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodeConfigGuestAcceleratorGpuSharingConfig)(nil)).Elem()
}

func (o GetClusterNodeConfigGuestAcceleratorGpuSharingConfigArrayOutput) ToGetClusterNodeConfigGuestAcceleratorGpuSharingConfigArrayOutput() GetClusterNodeConfigGuestAcceleratorGpuSharingConfigArrayOutput {
	return o
}

func (o GetClusterNodeConfigGuestAcceleratorGpuSharingConfigArrayOutput) ToGetClusterNodeConfigGuestAcceleratorGpuSharingConfigArrayOutputWithContext(ctx context.Context) GetClusterNodeConfigGuestAcceleratorGpuSharingConfigArrayOutput {
	return o
}

func (o GetClusterNodeConfigGuestAcceleratorGpuSharingConfigArrayOutput) Index(i pulumi.IntInput) GetClusterNodeConfigGuestAcceleratorGpuSharingConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNodeConfigGuestAcceleratorGpuSharingConfig {
		return vs[0].([]GetClusterNodeConfigGuestAcceleratorGpuSharingConfig)[vs[1].(int)]
	}).(GetClusterNodeConfigGuestAcceleratorGpuSharingConfigOutput)
}

type GetClusterNodeConfigGvnic struct {
	// Whether or not gvnic is enabled
	Enabled bool `pulumi:"enabled"`
}

// GetClusterNodeConfigGvnicInput is an input type that accepts GetClusterNodeConfigGvnicArgs and GetClusterNodeConfigGvnicOutput values.
// You can construct a concrete instance of `GetClusterNodeConfigGvnicInput` via:
//
//	GetClusterNodeConfigGvnicArgs{...}
type GetClusterNodeConfigGvnicInput interface {
	pulumi.Input

	ToGetClusterNodeConfigGvnicOutput() GetClusterNodeConfigGvnicOutput
	ToGetClusterNodeConfigGvnicOutputWithContext(context.Context) GetClusterNodeConfigGvnicOutput
}

type GetClusterNodeConfigGvnicArgs struct {
	// Whether or not gvnic is enabled
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (GetClusterNodeConfigGvnicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodeConfigGvnic)(nil)).Elem()
}

func (i GetClusterNodeConfigGvnicArgs) ToGetClusterNodeConfigGvnicOutput() GetClusterNodeConfigGvnicOutput {
	return i.ToGetClusterNodeConfigGvnicOutputWithContext(context.Background())
}

func (i GetClusterNodeConfigGvnicArgs) ToGetClusterNodeConfigGvnicOutputWithContext(ctx context.Context) GetClusterNodeConfigGvnicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodeConfigGvnicOutput)
}

// GetClusterNodeConfigGvnicArrayInput is an input type that accepts GetClusterNodeConfigGvnicArray and GetClusterNodeConfigGvnicArrayOutput values.
// You can construct a concrete instance of `GetClusterNodeConfigGvnicArrayInput` via:
//
//	GetClusterNodeConfigGvnicArray{ GetClusterNodeConfigGvnicArgs{...} }
type GetClusterNodeConfigGvnicArrayInput interface {
	pulumi.Input

	ToGetClusterNodeConfigGvnicArrayOutput() GetClusterNodeConfigGvnicArrayOutput
	ToGetClusterNodeConfigGvnicArrayOutputWithContext(context.Context) GetClusterNodeConfigGvnicArrayOutput
}

type GetClusterNodeConfigGvnicArray []GetClusterNodeConfigGvnicInput

func (GetClusterNodeConfigGvnicArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodeConfigGvnic)(nil)).Elem()
}

func (i GetClusterNodeConfigGvnicArray) ToGetClusterNodeConfigGvnicArrayOutput() GetClusterNodeConfigGvnicArrayOutput {
	return i.ToGetClusterNodeConfigGvnicArrayOutputWithContext(context.Background())
}

func (i GetClusterNodeConfigGvnicArray) ToGetClusterNodeConfigGvnicArrayOutputWithContext(ctx context.Context) GetClusterNodeConfigGvnicArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodeConfigGvnicArrayOutput)
}

type GetClusterNodeConfigGvnicOutput struct{ *pulumi.OutputState }

func (GetClusterNodeConfigGvnicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodeConfigGvnic)(nil)).Elem()
}

func (o GetClusterNodeConfigGvnicOutput) ToGetClusterNodeConfigGvnicOutput() GetClusterNodeConfigGvnicOutput {
	return o
}

func (o GetClusterNodeConfigGvnicOutput) ToGetClusterNodeConfigGvnicOutputWithContext(ctx context.Context) GetClusterNodeConfigGvnicOutput {
	return o
}

// Whether or not gvnic is enabled
func (o GetClusterNodeConfigGvnicOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterNodeConfigGvnic) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type GetClusterNodeConfigGvnicArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNodeConfigGvnicArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodeConfigGvnic)(nil)).Elem()
}

func (o GetClusterNodeConfigGvnicArrayOutput) ToGetClusterNodeConfigGvnicArrayOutput() GetClusterNodeConfigGvnicArrayOutput {
	return o
}

func (o GetClusterNodeConfigGvnicArrayOutput) ToGetClusterNodeConfigGvnicArrayOutputWithContext(ctx context.Context) GetClusterNodeConfigGvnicArrayOutput {
	return o
}

func (o GetClusterNodeConfigGvnicArrayOutput) Index(i pulumi.IntInput) GetClusterNodeConfigGvnicOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNodeConfigGvnic {
		return vs[0].([]GetClusterNodeConfigGvnic)[vs[1].(int)]
	}).(GetClusterNodeConfigGvnicOutput)
}

type GetClusterNodeConfigHostMaintenancePolicy struct {
	// .
	MaintenanceInterval string `pulumi:"maintenanceInterval"`
}

// GetClusterNodeConfigHostMaintenancePolicyInput is an input type that accepts GetClusterNodeConfigHostMaintenancePolicyArgs and GetClusterNodeConfigHostMaintenancePolicyOutput values.
// You can construct a concrete instance of `GetClusterNodeConfigHostMaintenancePolicyInput` via:
//
//	GetClusterNodeConfigHostMaintenancePolicyArgs{...}
type GetClusterNodeConfigHostMaintenancePolicyInput interface {
	pulumi.Input

	ToGetClusterNodeConfigHostMaintenancePolicyOutput() GetClusterNodeConfigHostMaintenancePolicyOutput
	ToGetClusterNodeConfigHostMaintenancePolicyOutputWithContext(context.Context) GetClusterNodeConfigHostMaintenancePolicyOutput
}

type GetClusterNodeConfigHostMaintenancePolicyArgs struct {
	// .
	MaintenanceInterval pulumi.StringInput `pulumi:"maintenanceInterval"`
}

func (GetClusterNodeConfigHostMaintenancePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodeConfigHostMaintenancePolicy)(nil)).Elem()
}

func (i GetClusterNodeConfigHostMaintenancePolicyArgs) ToGetClusterNodeConfigHostMaintenancePolicyOutput() GetClusterNodeConfigHostMaintenancePolicyOutput {
	return i.ToGetClusterNodeConfigHostMaintenancePolicyOutputWithContext(context.Background())
}

func (i GetClusterNodeConfigHostMaintenancePolicyArgs) ToGetClusterNodeConfigHostMaintenancePolicyOutputWithContext(ctx context.Context) GetClusterNodeConfigHostMaintenancePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodeConfigHostMaintenancePolicyOutput)
}

// GetClusterNodeConfigHostMaintenancePolicyArrayInput is an input type that accepts GetClusterNodeConfigHostMaintenancePolicyArray and GetClusterNodeConfigHostMaintenancePolicyArrayOutput values.
// You can construct a concrete instance of `GetClusterNodeConfigHostMaintenancePolicyArrayInput` via:
//
//	GetClusterNodeConfigHostMaintenancePolicyArray{ GetClusterNodeConfigHostMaintenancePolicyArgs{...} }
type GetClusterNodeConfigHostMaintenancePolicyArrayInput interface {
	pulumi.Input

	ToGetClusterNodeConfigHostMaintenancePolicyArrayOutput() GetClusterNodeConfigHostMaintenancePolicyArrayOutput
	ToGetClusterNodeConfigHostMaintenancePolicyArrayOutputWithContext(context.Context) GetClusterNodeConfigHostMaintenancePolicyArrayOutput
}

type GetClusterNodeConfigHostMaintenancePolicyArray []GetClusterNodeConfigHostMaintenancePolicyInput

func (GetClusterNodeConfigHostMaintenancePolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodeConfigHostMaintenancePolicy)(nil)).Elem()
}

func (i GetClusterNodeConfigHostMaintenancePolicyArray) ToGetClusterNodeConfigHostMaintenancePolicyArrayOutput() GetClusterNodeConfigHostMaintenancePolicyArrayOutput {
	return i.ToGetClusterNodeConfigHostMaintenancePolicyArrayOutputWithContext(context.Background())
}

func (i GetClusterNodeConfigHostMaintenancePolicyArray) ToGetClusterNodeConfigHostMaintenancePolicyArrayOutputWithContext(ctx context.Context) GetClusterNodeConfigHostMaintenancePolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodeConfigHostMaintenancePolicyArrayOutput)
}

type GetClusterNodeConfigHostMaintenancePolicyOutput struct{ *pulumi.OutputState }

func (GetClusterNodeConfigHostMaintenancePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodeConfigHostMaintenancePolicy)(nil)).Elem()
}

func (o GetClusterNodeConfigHostMaintenancePolicyOutput) ToGetClusterNodeConfigHostMaintenancePolicyOutput() GetClusterNodeConfigHostMaintenancePolicyOutput {
	return o
}

func (o GetClusterNodeConfigHostMaintenancePolicyOutput) ToGetClusterNodeConfigHostMaintenancePolicyOutputWithContext(ctx context.Context) GetClusterNodeConfigHostMaintenancePolicyOutput {
	return o
}

// .
func (o GetClusterNodeConfigHostMaintenancePolicyOutput) MaintenanceInterval() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodeConfigHostMaintenancePolicy) string { return v.MaintenanceInterval }).(pulumi.StringOutput)
}

type GetClusterNodeConfigHostMaintenancePolicyArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNodeConfigHostMaintenancePolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodeConfigHostMaintenancePolicy)(nil)).Elem()
}

func (o GetClusterNodeConfigHostMaintenancePolicyArrayOutput) ToGetClusterNodeConfigHostMaintenancePolicyArrayOutput() GetClusterNodeConfigHostMaintenancePolicyArrayOutput {
	return o
}

func (o GetClusterNodeConfigHostMaintenancePolicyArrayOutput) ToGetClusterNodeConfigHostMaintenancePolicyArrayOutputWithContext(ctx context.Context) GetClusterNodeConfigHostMaintenancePolicyArrayOutput {
	return o
}

func (o GetClusterNodeConfigHostMaintenancePolicyArrayOutput) Index(i pulumi.IntInput) GetClusterNodeConfigHostMaintenancePolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNodeConfigHostMaintenancePolicy {
		return vs[0].([]GetClusterNodeConfigHostMaintenancePolicy)[vs[1].(int)]
	}).(GetClusterNodeConfigHostMaintenancePolicyOutput)
}

type GetClusterNodeConfigKubeletConfig struct {
	// Enable CPU CFS quota enforcement for containers that specify CPU limits.
	CpuCfsQuota bool `pulumi:"cpuCfsQuota"`
	// Set the CPU CFS quota period value 'cpu.cfs_period_us'.
	CpuCfsQuotaPeriod string `pulumi:"cpuCfsQuotaPeriod"`
	// Control the CPU management policy on the node.
	CpuManagerPolicy string `pulumi:"cpuManagerPolicy"`
	// Controls the maximum number of processes allowed to run in a pod.
	PodPidsLimit int `pulumi:"podPidsLimit"`
}

// GetClusterNodeConfigKubeletConfigInput is an input type that accepts GetClusterNodeConfigKubeletConfigArgs and GetClusterNodeConfigKubeletConfigOutput values.
// You can construct a concrete instance of `GetClusterNodeConfigKubeletConfigInput` via:
//
//	GetClusterNodeConfigKubeletConfigArgs{...}
type GetClusterNodeConfigKubeletConfigInput interface {
	pulumi.Input

	ToGetClusterNodeConfigKubeletConfigOutput() GetClusterNodeConfigKubeletConfigOutput
	ToGetClusterNodeConfigKubeletConfigOutputWithContext(context.Context) GetClusterNodeConfigKubeletConfigOutput
}

type GetClusterNodeConfigKubeletConfigArgs struct {
	// Enable CPU CFS quota enforcement for containers that specify CPU limits.
	CpuCfsQuota pulumi.BoolInput `pulumi:"cpuCfsQuota"`
	// Set the CPU CFS quota period value 'cpu.cfs_period_us'.
	CpuCfsQuotaPeriod pulumi.StringInput `pulumi:"cpuCfsQuotaPeriod"`
	// Control the CPU management policy on the node.
	CpuManagerPolicy pulumi.StringInput `pulumi:"cpuManagerPolicy"`
	// Controls the maximum number of processes allowed to run in a pod.
	PodPidsLimit pulumi.IntInput `pulumi:"podPidsLimit"`
}

func (GetClusterNodeConfigKubeletConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodeConfigKubeletConfig)(nil)).Elem()
}

func (i GetClusterNodeConfigKubeletConfigArgs) ToGetClusterNodeConfigKubeletConfigOutput() GetClusterNodeConfigKubeletConfigOutput {
	return i.ToGetClusterNodeConfigKubeletConfigOutputWithContext(context.Background())
}

func (i GetClusterNodeConfigKubeletConfigArgs) ToGetClusterNodeConfigKubeletConfigOutputWithContext(ctx context.Context) GetClusterNodeConfigKubeletConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodeConfigKubeletConfigOutput)
}

// GetClusterNodeConfigKubeletConfigArrayInput is an input type that accepts GetClusterNodeConfigKubeletConfigArray and GetClusterNodeConfigKubeletConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterNodeConfigKubeletConfigArrayInput` via:
//
//	GetClusterNodeConfigKubeletConfigArray{ GetClusterNodeConfigKubeletConfigArgs{...} }
type GetClusterNodeConfigKubeletConfigArrayInput interface {
	pulumi.Input

	ToGetClusterNodeConfigKubeletConfigArrayOutput() GetClusterNodeConfigKubeletConfigArrayOutput
	ToGetClusterNodeConfigKubeletConfigArrayOutputWithContext(context.Context) GetClusterNodeConfigKubeletConfigArrayOutput
}

type GetClusterNodeConfigKubeletConfigArray []GetClusterNodeConfigKubeletConfigInput

func (GetClusterNodeConfigKubeletConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodeConfigKubeletConfig)(nil)).Elem()
}

func (i GetClusterNodeConfigKubeletConfigArray) ToGetClusterNodeConfigKubeletConfigArrayOutput() GetClusterNodeConfigKubeletConfigArrayOutput {
	return i.ToGetClusterNodeConfigKubeletConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterNodeConfigKubeletConfigArray) ToGetClusterNodeConfigKubeletConfigArrayOutputWithContext(ctx context.Context) GetClusterNodeConfigKubeletConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodeConfigKubeletConfigArrayOutput)
}

type GetClusterNodeConfigKubeletConfigOutput struct{ *pulumi.OutputState }

func (GetClusterNodeConfigKubeletConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodeConfigKubeletConfig)(nil)).Elem()
}

func (o GetClusterNodeConfigKubeletConfigOutput) ToGetClusterNodeConfigKubeletConfigOutput() GetClusterNodeConfigKubeletConfigOutput {
	return o
}

func (o GetClusterNodeConfigKubeletConfigOutput) ToGetClusterNodeConfigKubeletConfigOutputWithContext(ctx context.Context) GetClusterNodeConfigKubeletConfigOutput {
	return o
}

// Enable CPU CFS quota enforcement for containers that specify CPU limits.
func (o GetClusterNodeConfigKubeletConfigOutput) CpuCfsQuota() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterNodeConfigKubeletConfig) bool { return v.CpuCfsQuota }).(pulumi.BoolOutput)
}

// Set the CPU CFS quota period value 'cpu.cfs_period_us'.
func (o GetClusterNodeConfigKubeletConfigOutput) CpuCfsQuotaPeriod() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodeConfigKubeletConfig) string { return v.CpuCfsQuotaPeriod }).(pulumi.StringOutput)
}

// Control the CPU management policy on the node.
func (o GetClusterNodeConfigKubeletConfigOutput) CpuManagerPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodeConfigKubeletConfig) string { return v.CpuManagerPolicy }).(pulumi.StringOutput)
}

// Controls the maximum number of processes allowed to run in a pod.
func (o GetClusterNodeConfigKubeletConfigOutput) PodPidsLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterNodeConfigKubeletConfig) int { return v.PodPidsLimit }).(pulumi.IntOutput)
}

type GetClusterNodeConfigKubeletConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNodeConfigKubeletConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodeConfigKubeletConfig)(nil)).Elem()
}

func (o GetClusterNodeConfigKubeletConfigArrayOutput) ToGetClusterNodeConfigKubeletConfigArrayOutput() GetClusterNodeConfigKubeletConfigArrayOutput {
	return o
}

func (o GetClusterNodeConfigKubeletConfigArrayOutput) ToGetClusterNodeConfigKubeletConfigArrayOutputWithContext(ctx context.Context) GetClusterNodeConfigKubeletConfigArrayOutput {
	return o
}

func (o GetClusterNodeConfigKubeletConfigArrayOutput) Index(i pulumi.IntInput) GetClusterNodeConfigKubeletConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNodeConfigKubeletConfig {
		return vs[0].([]GetClusterNodeConfigKubeletConfig)[vs[1].(int)]
	}).(GetClusterNodeConfigKubeletConfigOutput)
}

type GetClusterNodeConfigLinuxNodeConfig struct {
	// cgroupMode specifies the cgroup mode to be used on the node.
	CgroupMode string `pulumi:"cgroupMode"`
	// The Linux kernel parameters to be applied to the nodes and all pods running on the nodes.
	Sysctls map[string]string `pulumi:"sysctls"`
}

// GetClusterNodeConfigLinuxNodeConfigInput is an input type that accepts GetClusterNodeConfigLinuxNodeConfigArgs and GetClusterNodeConfigLinuxNodeConfigOutput values.
// You can construct a concrete instance of `GetClusterNodeConfigLinuxNodeConfigInput` via:
//
//	GetClusterNodeConfigLinuxNodeConfigArgs{...}
type GetClusterNodeConfigLinuxNodeConfigInput interface {
	pulumi.Input

	ToGetClusterNodeConfigLinuxNodeConfigOutput() GetClusterNodeConfigLinuxNodeConfigOutput
	ToGetClusterNodeConfigLinuxNodeConfigOutputWithContext(context.Context) GetClusterNodeConfigLinuxNodeConfigOutput
}

type GetClusterNodeConfigLinuxNodeConfigArgs struct {
	// cgroupMode specifies the cgroup mode to be used on the node.
	CgroupMode pulumi.StringInput `pulumi:"cgroupMode"`
	// The Linux kernel parameters to be applied to the nodes and all pods running on the nodes.
	Sysctls pulumi.StringMapInput `pulumi:"sysctls"`
}

func (GetClusterNodeConfigLinuxNodeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodeConfigLinuxNodeConfig)(nil)).Elem()
}

func (i GetClusterNodeConfigLinuxNodeConfigArgs) ToGetClusterNodeConfigLinuxNodeConfigOutput() GetClusterNodeConfigLinuxNodeConfigOutput {
	return i.ToGetClusterNodeConfigLinuxNodeConfigOutputWithContext(context.Background())
}

func (i GetClusterNodeConfigLinuxNodeConfigArgs) ToGetClusterNodeConfigLinuxNodeConfigOutputWithContext(ctx context.Context) GetClusterNodeConfigLinuxNodeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodeConfigLinuxNodeConfigOutput)
}

// GetClusterNodeConfigLinuxNodeConfigArrayInput is an input type that accepts GetClusterNodeConfigLinuxNodeConfigArray and GetClusterNodeConfigLinuxNodeConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterNodeConfigLinuxNodeConfigArrayInput` via:
//
//	GetClusterNodeConfigLinuxNodeConfigArray{ GetClusterNodeConfigLinuxNodeConfigArgs{...} }
type GetClusterNodeConfigLinuxNodeConfigArrayInput interface {
	pulumi.Input

	ToGetClusterNodeConfigLinuxNodeConfigArrayOutput() GetClusterNodeConfigLinuxNodeConfigArrayOutput
	ToGetClusterNodeConfigLinuxNodeConfigArrayOutputWithContext(context.Context) GetClusterNodeConfigLinuxNodeConfigArrayOutput
}

type GetClusterNodeConfigLinuxNodeConfigArray []GetClusterNodeConfigLinuxNodeConfigInput

func (GetClusterNodeConfigLinuxNodeConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodeConfigLinuxNodeConfig)(nil)).Elem()
}

func (i GetClusterNodeConfigLinuxNodeConfigArray) ToGetClusterNodeConfigLinuxNodeConfigArrayOutput() GetClusterNodeConfigLinuxNodeConfigArrayOutput {
	return i.ToGetClusterNodeConfigLinuxNodeConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterNodeConfigLinuxNodeConfigArray) ToGetClusterNodeConfigLinuxNodeConfigArrayOutputWithContext(ctx context.Context) GetClusterNodeConfigLinuxNodeConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodeConfigLinuxNodeConfigArrayOutput)
}

type GetClusterNodeConfigLinuxNodeConfigOutput struct{ *pulumi.OutputState }

func (GetClusterNodeConfigLinuxNodeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodeConfigLinuxNodeConfig)(nil)).Elem()
}

func (o GetClusterNodeConfigLinuxNodeConfigOutput) ToGetClusterNodeConfigLinuxNodeConfigOutput() GetClusterNodeConfigLinuxNodeConfigOutput {
	return o
}

func (o GetClusterNodeConfigLinuxNodeConfigOutput) ToGetClusterNodeConfigLinuxNodeConfigOutputWithContext(ctx context.Context) GetClusterNodeConfigLinuxNodeConfigOutput {
	return o
}

// cgroupMode specifies the cgroup mode to be used on the node.
func (o GetClusterNodeConfigLinuxNodeConfigOutput) CgroupMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodeConfigLinuxNodeConfig) string { return v.CgroupMode }).(pulumi.StringOutput)
}

// The Linux kernel parameters to be applied to the nodes and all pods running on the nodes.
func (o GetClusterNodeConfigLinuxNodeConfigOutput) Sysctls() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetClusterNodeConfigLinuxNodeConfig) map[string]string { return v.Sysctls }).(pulumi.StringMapOutput)
}

type GetClusterNodeConfigLinuxNodeConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNodeConfigLinuxNodeConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodeConfigLinuxNodeConfig)(nil)).Elem()
}

func (o GetClusterNodeConfigLinuxNodeConfigArrayOutput) ToGetClusterNodeConfigLinuxNodeConfigArrayOutput() GetClusterNodeConfigLinuxNodeConfigArrayOutput {
	return o
}

func (o GetClusterNodeConfigLinuxNodeConfigArrayOutput) ToGetClusterNodeConfigLinuxNodeConfigArrayOutputWithContext(ctx context.Context) GetClusterNodeConfigLinuxNodeConfigArrayOutput {
	return o
}

func (o GetClusterNodeConfigLinuxNodeConfigArrayOutput) Index(i pulumi.IntInput) GetClusterNodeConfigLinuxNodeConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNodeConfigLinuxNodeConfig {
		return vs[0].([]GetClusterNodeConfigLinuxNodeConfig)[vs[1].(int)]
	}).(GetClusterNodeConfigLinuxNodeConfigOutput)
}

type GetClusterNodeConfigLocalNvmeSsdBlockConfig struct {
	// Number of raw-block local NVMe SSD disks to be attached to the node. Each local SSD is 375 GB in size.
	LocalSsdCount int `pulumi:"localSsdCount"`
}

// GetClusterNodeConfigLocalNvmeSsdBlockConfigInput is an input type that accepts GetClusterNodeConfigLocalNvmeSsdBlockConfigArgs and GetClusterNodeConfigLocalNvmeSsdBlockConfigOutput values.
// You can construct a concrete instance of `GetClusterNodeConfigLocalNvmeSsdBlockConfigInput` via:
//
//	GetClusterNodeConfigLocalNvmeSsdBlockConfigArgs{...}
type GetClusterNodeConfigLocalNvmeSsdBlockConfigInput interface {
	pulumi.Input

	ToGetClusterNodeConfigLocalNvmeSsdBlockConfigOutput() GetClusterNodeConfigLocalNvmeSsdBlockConfigOutput
	ToGetClusterNodeConfigLocalNvmeSsdBlockConfigOutputWithContext(context.Context) GetClusterNodeConfigLocalNvmeSsdBlockConfigOutput
}

type GetClusterNodeConfigLocalNvmeSsdBlockConfigArgs struct {
	// Number of raw-block local NVMe SSD disks to be attached to the node. Each local SSD is 375 GB in size.
	LocalSsdCount pulumi.IntInput `pulumi:"localSsdCount"`
}

func (GetClusterNodeConfigLocalNvmeSsdBlockConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodeConfigLocalNvmeSsdBlockConfig)(nil)).Elem()
}

func (i GetClusterNodeConfigLocalNvmeSsdBlockConfigArgs) ToGetClusterNodeConfigLocalNvmeSsdBlockConfigOutput() GetClusterNodeConfigLocalNvmeSsdBlockConfigOutput {
	return i.ToGetClusterNodeConfigLocalNvmeSsdBlockConfigOutputWithContext(context.Background())
}

func (i GetClusterNodeConfigLocalNvmeSsdBlockConfigArgs) ToGetClusterNodeConfigLocalNvmeSsdBlockConfigOutputWithContext(ctx context.Context) GetClusterNodeConfigLocalNvmeSsdBlockConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodeConfigLocalNvmeSsdBlockConfigOutput)
}

// GetClusterNodeConfigLocalNvmeSsdBlockConfigArrayInput is an input type that accepts GetClusterNodeConfigLocalNvmeSsdBlockConfigArray and GetClusterNodeConfigLocalNvmeSsdBlockConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterNodeConfigLocalNvmeSsdBlockConfigArrayInput` via:
//
//	GetClusterNodeConfigLocalNvmeSsdBlockConfigArray{ GetClusterNodeConfigLocalNvmeSsdBlockConfigArgs{...} }
type GetClusterNodeConfigLocalNvmeSsdBlockConfigArrayInput interface {
	pulumi.Input

	ToGetClusterNodeConfigLocalNvmeSsdBlockConfigArrayOutput() GetClusterNodeConfigLocalNvmeSsdBlockConfigArrayOutput
	ToGetClusterNodeConfigLocalNvmeSsdBlockConfigArrayOutputWithContext(context.Context) GetClusterNodeConfigLocalNvmeSsdBlockConfigArrayOutput
}

type GetClusterNodeConfigLocalNvmeSsdBlockConfigArray []GetClusterNodeConfigLocalNvmeSsdBlockConfigInput

func (GetClusterNodeConfigLocalNvmeSsdBlockConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodeConfigLocalNvmeSsdBlockConfig)(nil)).Elem()
}

func (i GetClusterNodeConfigLocalNvmeSsdBlockConfigArray) ToGetClusterNodeConfigLocalNvmeSsdBlockConfigArrayOutput() GetClusterNodeConfigLocalNvmeSsdBlockConfigArrayOutput {
	return i.ToGetClusterNodeConfigLocalNvmeSsdBlockConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterNodeConfigLocalNvmeSsdBlockConfigArray) ToGetClusterNodeConfigLocalNvmeSsdBlockConfigArrayOutputWithContext(ctx context.Context) GetClusterNodeConfigLocalNvmeSsdBlockConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodeConfigLocalNvmeSsdBlockConfigArrayOutput)
}

type GetClusterNodeConfigLocalNvmeSsdBlockConfigOutput struct{ *pulumi.OutputState }

func (GetClusterNodeConfigLocalNvmeSsdBlockConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodeConfigLocalNvmeSsdBlockConfig)(nil)).Elem()
}

func (o GetClusterNodeConfigLocalNvmeSsdBlockConfigOutput) ToGetClusterNodeConfigLocalNvmeSsdBlockConfigOutput() GetClusterNodeConfigLocalNvmeSsdBlockConfigOutput {
	return o
}

func (o GetClusterNodeConfigLocalNvmeSsdBlockConfigOutput) ToGetClusterNodeConfigLocalNvmeSsdBlockConfigOutputWithContext(ctx context.Context) GetClusterNodeConfigLocalNvmeSsdBlockConfigOutput {
	return o
}

// Number of raw-block local NVMe SSD disks to be attached to the node. Each local SSD is 375 GB in size.
func (o GetClusterNodeConfigLocalNvmeSsdBlockConfigOutput) LocalSsdCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterNodeConfigLocalNvmeSsdBlockConfig) int { return v.LocalSsdCount }).(pulumi.IntOutput)
}

type GetClusterNodeConfigLocalNvmeSsdBlockConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNodeConfigLocalNvmeSsdBlockConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodeConfigLocalNvmeSsdBlockConfig)(nil)).Elem()
}

func (o GetClusterNodeConfigLocalNvmeSsdBlockConfigArrayOutput) ToGetClusterNodeConfigLocalNvmeSsdBlockConfigArrayOutput() GetClusterNodeConfigLocalNvmeSsdBlockConfigArrayOutput {
	return o
}

func (o GetClusterNodeConfigLocalNvmeSsdBlockConfigArrayOutput) ToGetClusterNodeConfigLocalNvmeSsdBlockConfigArrayOutputWithContext(ctx context.Context) GetClusterNodeConfigLocalNvmeSsdBlockConfigArrayOutput {
	return o
}

func (o GetClusterNodeConfigLocalNvmeSsdBlockConfigArrayOutput) Index(i pulumi.IntInput) GetClusterNodeConfigLocalNvmeSsdBlockConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNodeConfigLocalNvmeSsdBlockConfig {
		return vs[0].([]GetClusterNodeConfigLocalNvmeSsdBlockConfig)[vs[1].(int)]
	}).(GetClusterNodeConfigLocalNvmeSsdBlockConfigOutput)
}

type GetClusterNodeConfigReservationAffinity struct {
	// Corresponds to the type of reservation consumption.
	ConsumeReservationType string `pulumi:"consumeReservationType"`
	// The label key of a reservation resource.
	Key string `pulumi:"key"`
	// The label values of the reservation resource.
	Values []string `pulumi:"values"`
}

// GetClusterNodeConfigReservationAffinityInput is an input type that accepts GetClusterNodeConfigReservationAffinityArgs and GetClusterNodeConfigReservationAffinityOutput values.
// You can construct a concrete instance of `GetClusterNodeConfigReservationAffinityInput` via:
//
//	GetClusterNodeConfigReservationAffinityArgs{...}
type GetClusterNodeConfigReservationAffinityInput interface {
	pulumi.Input

	ToGetClusterNodeConfigReservationAffinityOutput() GetClusterNodeConfigReservationAffinityOutput
	ToGetClusterNodeConfigReservationAffinityOutputWithContext(context.Context) GetClusterNodeConfigReservationAffinityOutput
}

type GetClusterNodeConfigReservationAffinityArgs struct {
	// Corresponds to the type of reservation consumption.
	ConsumeReservationType pulumi.StringInput `pulumi:"consumeReservationType"`
	// The label key of a reservation resource.
	Key pulumi.StringInput `pulumi:"key"`
	// The label values of the reservation resource.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetClusterNodeConfigReservationAffinityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodeConfigReservationAffinity)(nil)).Elem()
}

func (i GetClusterNodeConfigReservationAffinityArgs) ToGetClusterNodeConfigReservationAffinityOutput() GetClusterNodeConfigReservationAffinityOutput {
	return i.ToGetClusterNodeConfigReservationAffinityOutputWithContext(context.Background())
}

func (i GetClusterNodeConfigReservationAffinityArgs) ToGetClusterNodeConfigReservationAffinityOutputWithContext(ctx context.Context) GetClusterNodeConfigReservationAffinityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodeConfigReservationAffinityOutput)
}

// GetClusterNodeConfigReservationAffinityArrayInput is an input type that accepts GetClusterNodeConfigReservationAffinityArray and GetClusterNodeConfigReservationAffinityArrayOutput values.
// You can construct a concrete instance of `GetClusterNodeConfigReservationAffinityArrayInput` via:
//
//	GetClusterNodeConfigReservationAffinityArray{ GetClusterNodeConfigReservationAffinityArgs{...} }
type GetClusterNodeConfigReservationAffinityArrayInput interface {
	pulumi.Input

	ToGetClusterNodeConfigReservationAffinityArrayOutput() GetClusterNodeConfigReservationAffinityArrayOutput
	ToGetClusterNodeConfigReservationAffinityArrayOutputWithContext(context.Context) GetClusterNodeConfigReservationAffinityArrayOutput
}

type GetClusterNodeConfigReservationAffinityArray []GetClusterNodeConfigReservationAffinityInput

func (GetClusterNodeConfigReservationAffinityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodeConfigReservationAffinity)(nil)).Elem()
}

func (i GetClusterNodeConfigReservationAffinityArray) ToGetClusterNodeConfigReservationAffinityArrayOutput() GetClusterNodeConfigReservationAffinityArrayOutput {
	return i.ToGetClusterNodeConfigReservationAffinityArrayOutputWithContext(context.Background())
}

func (i GetClusterNodeConfigReservationAffinityArray) ToGetClusterNodeConfigReservationAffinityArrayOutputWithContext(ctx context.Context) GetClusterNodeConfigReservationAffinityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodeConfigReservationAffinityArrayOutput)
}

type GetClusterNodeConfigReservationAffinityOutput struct{ *pulumi.OutputState }

func (GetClusterNodeConfigReservationAffinityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodeConfigReservationAffinity)(nil)).Elem()
}

func (o GetClusterNodeConfigReservationAffinityOutput) ToGetClusterNodeConfigReservationAffinityOutput() GetClusterNodeConfigReservationAffinityOutput {
	return o
}

func (o GetClusterNodeConfigReservationAffinityOutput) ToGetClusterNodeConfigReservationAffinityOutputWithContext(ctx context.Context) GetClusterNodeConfigReservationAffinityOutput {
	return o
}

// Corresponds to the type of reservation consumption.
func (o GetClusterNodeConfigReservationAffinityOutput) ConsumeReservationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodeConfigReservationAffinity) string { return v.ConsumeReservationType }).(pulumi.StringOutput)
}

// The label key of a reservation resource.
func (o GetClusterNodeConfigReservationAffinityOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodeConfigReservationAffinity) string { return v.Key }).(pulumi.StringOutput)
}

// The label values of the reservation resource.
func (o GetClusterNodeConfigReservationAffinityOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClusterNodeConfigReservationAffinity) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetClusterNodeConfigReservationAffinityArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNodeConfigReservationAffinityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodeConfigReservationAffinity)(nil)).Elem()
}

func (o GetClusterNodeConfigReservationAffinityArrayOutput) ToGetClusterNodeConfigReservationAffinityArrayOutput() GetClusterNodeConfigReservationAffinityArrayOutput {
	return o
}

func (o GetClusterNodeConfigReservationAffinityArrayOutput) ToGetClusterNodeConfigReservationAffinityArrayOutputWithContext(ctx context.Context) GetClusterNodeConfigReservationAffinityArrayOutput {
	return o
}

func (o GetClusterNodeConfigReservationAffinityArrayOutput) Index(i pulumi.IntInput) GetClusterNodeConfigReservationAffinityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNodeConfigReservationAffinity {
		return vs[0].([]GetClusterNodeConfigReservationAffinity)[vs[1].(int)]
	}).(GetClusterNodeConfigReservationAffinityOutput)
}

type GetClusterNodeConfigSandboxConfig struct {
	// Type of the sandbox to use for the node (e.g. 'gvisor')
	SandboxType string `pulumi:"sandboxType"`
}

// GetClusterNodeConfigSandboxConfigInput is an input type that accepts GetClusterNodeConfigSandboxConfigArgs and GetClusterNodeConfigSandboxConfigOutput values.
// You can construct a concrete instance of `GetClusterNodeConfigSandboxConfigInput` via:
//
//	GetClusterNodeConfigSandboxConfigArgs{...}
type GetClusterNodeConfigSandboxConfigInput interface {
	pulumi.Input

	ToGetClusterNodeConfigSandboxConfigOutput() GetClusterNodeConfigSandboxConfigOutput
	ToGetClusterNodeConfigSandboxConfigOutputWithContext(context.Context) GetClusterNodeConfigSandboxConfigOutput
}

type GetClusterNodeConfigSandboxConfigArgs struct {
	// Type of the sandbox to use for the node (e.g. 'gvisor')
	SandboxType pulumi.StringInput `pulumi:"sandboxType"`
}

func (GetClusterNodeConfigSandboxConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodeConfigSandboxConfig)(nil)).Elem()
}

func (i GetClusterNodeConfigSandboxConfigArgs) ToGetClusterNodeConfigSandboxConfigOutput() GetClusterNodeConfigSandboxConfigOutput {
	return i.ToGetClusterNodeConfigSandboxConfigOutputWithContext(context.Background())
}

func (i GetClusterNodeConfigSandboxConfigArgs) ToGetClusterNodeConfigSandboxConfigOutputWithContext(ctx context.Context) GetClusterNodeConfigSandboxConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodeConfigSandboxConfigOutput)
}

// GetClusterNodeConfigSandboxConfigArrayInput is an input type that accepts GetClusterNodeConfigSandboxConfigArray and GetClusterNodeConfigSandboxConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterNodeConfigSandboxConfigArrayInput` via:
//
//	GetClusterNodeConfigSandboxConfigArray{ GetClusterNodeConfigSandboxConfigArgs{...} }
type GetClusterNodeConfigSandboxConfigArrayInput interface {
	pulumi.Input

	ToGetClusterNodeConfigSandboxConfigArrayOutput() GetClusterNodeConfigSandboxConfigArrayOutput
	ToGetClusterNodeConfigSandboxConfigArrayOutputWithContext(context.Context) GetClusterNodeConfigSandboxConfigArrayOutput
}

type GetClusterNodeConfigSandboxConfigArray []GetClusterNodeConfigSandboxConfigInput

func (GetClusterNodeConfigSandboxConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodeConfigSandboxConfig)(nil)).Elem()
}

func (i GetClusterNodeConfigSandboxConfigArray) ToGetClusterNodeConfigSandboxConfigArrayOutput() GetClusterNodeConfigSandboxConfigArrayOutput {
	return i.ToGetClusterNodeConfigSandboxConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterNodeConfigSandboxConfigArray) ToGetClusterNodeConfigSandboxConfigArrayOutputWithContext(ctx context.Context) GetClusterNodeConfigSandboxConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodeConfigSandboxConfigArrayOutput)
}

type GetClusterNodeConfigSandboxConfigOutput struct{ *pulumi.OutputState }

func (GetClusterNodeConfigSandboxConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodeConfigSandboxConfig)(nil)).Elem()
}

func (o GetClusterNodeConfigSandboxConfigOutput) ToGetClusterNodeConfigSandboxConfigOutput() GetClusterNodeConfigSandboxConfigOutput {
	return o
}

func (o GetClusterNodeConfigSandboxConfigOutput) ToGetClusterNodeConfigSandboxConfigOutputWithContext(ctx context.Context) GetClusterNodeConfigSandboxConfigOutput {
	return o
}

// Type of the sandbox to use for the node (e.g. 'gvisor')
func (o GetClusterNodeConfigSandboxConfigOutput) SandboxType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodeConfigSandboxConfig) string { return v.SandboxType }).(pulumi.StringOutput)
}

type GetClusterNodeConfigSandboxConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNodeConfigSandboxConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodeConfigSandboxConfig)(nil)).Elem()
}

func (o GetClusterNodeConfigSandboxConfigArrayOutput) ToGetClusterNodeConfigSandboxConfigArrayOutput() GetClusterNodeConfigSandboxConfigArrayOutput {
	return o
}

func (o GetClusterNodeConfigSandboxConfigArrayOutput) ToGetClusterNodeConfigSandboxConfigArrayOutputWithContext(ctx context.Context) GetClusterNodeConfigSandboxConfigArrayOutput {
	return o
}

func (o GetClusterNodeConfigSandboxConfigArrayOutput) Index(i pulumi.IntInput) GetClusterNodeConfigSandboxConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNodeConfigSandboxConfig {
		return vs[0].([]GetClusterNodeConfigSandboxConfig)[vs[1].(int)]
	}).(GetClusterNodeConfigSandboxConfigOutput)
}

type GetClusterNodeConfigSecondaryBootDisk struct {
	// Disk image to create the secondary boot disk from
	DiskImage string `pulumi:"diskImage"`
	// Mode for how the secondary boot disk is used.
	Mode string `pulumi:"mode"`
}

// GetClusterNodeConfigSecondaryBootDiskInput is an input type that accepts GetClusterNodeConfigSecondaryBootDiskArgs and GetClusterNodeConfigSecondaryBootDiskOutput values.
// You can construct a concrete instance of `GetClusterNodeConfigSecondaryBootDiskInput` via:
//
//	GetClusterNodeConfigSecondaryBootDiskArgs{...}
type GetClusterNodeConfigSecondaryBootDiskInput interface {
	pulumi.Input

	ToGetClusterNodeConfigSecondaryBootDiskOutput() GetClusterNodeConfigSecondaryBootDiskOutput
	ToGetClusterNodeConfigSecondaryBootDiskOutputWithContext(context.Context) GetClusterNodeConfigSecondaryBootDiskOutput
}

type GetClusterNodeConfigSecondaryBootDiskArgs struct {
	// Disk image to create the secondary boot disk from
	DiskImage pulumi.StringInput `pulumi:"diskImage"`
	// Mode for how the secondary boot disk is used.
	Mode pulumi.StringInput `pulumi:"mode"`
}

func (GetClusterNodeConfigSecondaryBootDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodeConfigSecondaryBootDisk)(nil)).Elem()
}

func (i GetClusterNodeConfigSecondaryBootDiskArgs) ToGetClusterNodeConfigSecondaryBootDiskOutput() GetClusterNodeConfigSecondaryBootDiskOutput {
	return i.ToGetClusterNodeConfigSecondaryBootDiskOutputWithContext(context.Background())
}

func (i GetClusterNodeConfigSecondaryBootDiskArgs) ToGetClusterNodeConfigSecondaryBootDiskOutputWithContext(ctx context.Context) GetClusterNodeConfigSecondaryBootDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodeConfigSecondaryBootDiskOutput)
}

// GetClusterNodeConfigSecondaryBootDiskArrayInput is an input type that accepts GetClusterNodeConfigSecondaryBootDiskArray and GetClusterNodeConfigSecondaryBootDiskArrayOutput values.
// You can construct a concrete instance of `GetClusterNodeConfigSecondaryBootDiskArrayInput` via:
//
//	GetClusterNodeConfigSecondaryBootDiskArray{ GetClusterNodeConfigSecondaryBootDiskArgs{...} }
type GetClusterNodeConfigSecondaryBootDiskArrayInput interface {
	pulumi.Input

	ToGetClusterNodeConfigSecondaryBootDiskArrayOutput() GetClusterNodeConfigSecondaryBootDiskArrayOutput
	ToGetClusterNodeConfigSecondaryBootDiskArrayOutputWithContext(context.Context) GetClusterNodeConfigSecondaryBootDiskArrayOutput
}

type GetClusterNodeConfigSecondaryBootDiskArray []GetClusterNodeConfigSecondaryBootDiskInput

func (GetClusterNodeConfigSecondaryBootDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodeConfigSecondaryBootDisk)(nil)).Elem()
}

func (i GetClusterNodeConfigSecondaryBootDiskArray) ToGetClusterNodeConfigSecondaryBootDiskArrayOutput() GetClusterNodeConfigSecondaryBootDiskArrayOutput {
	return i.ToGetClusterNodeConfigSecondaryBootDiskArrayOutputWithContext(context.Background())
}

func (i GetClusterNodeConfigSecondaryBootDiskArray) ToGetClusterNodeConfigSecondaryBootDiskArrayOutputWithContext(ctx context.Context) GetClusterNodeConfigSecondaryBootDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodeConfigSecondaryBootDiskArrayOutput)
}

type GetClusterNodeConfigSecondaryBootDiskOutput struct{ *pulumi.OutputState }

func (GetClusterNodeConfigSecondaryBootDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodeConfigSecondaryBootDisk)(nil)).Elem()
}

func (o GetClusterNodeConfigSecondaryBootDiskOutput) ToGetClusterNodeConfigSecondaryBootDiskOutput() GetClusterNodeConfigSecondaryBootDiskOutput {
	return o
}

func (o GetClusterNodeConfigSecondaryBootDiskOutput) ToGetClusterNodeConfigSecondaryBootDiskOutputWithContext(ctx context.Context) GetClusterNodeConfigSecondaryBootDiskOutput {
	return o
}

// Disk image to create the secondary boot disk from
func (o GetClusterNodeConfigSecondaryBootDiskOutput) DiskImage() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodeConfigSecondaryBootDisk) string { return v.DiskImage }).(pulumi.StringOutput)
}

// Mode for how the secondary boot disk is used.
func (o GetClusterNodeConfigSecondaryBootDiskOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodeConfigSecondaryBootDisk) string { return v.Mode }).(pulumi.StringOutput)
}

type GetClusterNodeConfigSecondaryBootDiskArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNodeConfigSecondaryBootDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodeConfigSecondaryBootDisk)(nil)).Elem()
}

func (o GetClusterNodeConfigSecondaryBootDiskArrayOutput) ToGetClusterNodeConfigSecondaryBootDiskArrayOutput() GetClusterNodeConfigSecondaryBootDiskArrayOutput {
	return o
}

func (o GetClusterNodeConfigSecondaryBootDiskArrayOutput) ToGetClusterNodeConfigSecondaryBootDiskArrayOutputWithContext(ctx context.Context) GetClusterNodeConfigSecondaryBootDiskArrayOutput {
	return o
}

func (o GetClusterNodeConfigSecondaryBootDiskArrayOutput) Index(i pulumi.IntInput) GetClusterNodeConfigSecondaryBootDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNodeConfigSecondaryBootDisk {
		return vs[0].([]GetClusterNodeConfigSecondaryBootDisk)[vs[1].(int)]
	}).(GetClusterNodeConfigSecondaryBootDiskOutput)
}

type GetClusterNodeConfigShieldedInstanceConfig struct {
	// Defines whether the instance has integrity monitoring enabled.
	EnableIntegrityMonitoring bool `pulumi:"enableIntegrityMonitoring"`
	// Defines whether the instance has Secure Boot enabled.
	EnableSecureBoot bool `pulumi:"enableSecureBoot"`
}

// GetClusterNodeConfigShieldedInstanceConfigInput is an input type that accepts GetClusterNodeConfigShieldedInstanceConfigArgs and GetClusterNodeConfigShieldedInstanceConfigOutput values.
// You can construct a concrete instance of `GetClusterNodeConfigShieldedInstanceConfigInput` via:
//
//	GetClusterNodeConfigShieldedInstanceConfigArgs{...}
type GetClusterNodeConfigShieldedInstanceConfigInput interface {
	pulumi.Input

	ToGetClusterNodeConfigShieldedInstanceConfigOutput() GetClusterNodeConfigShieldedInstanceConfigOutput
	ToGetClusterNodeConfigShieldedInstanceConfigOutputWithContext(context.Context) GetClusterNodeConfigShieldedInstanceConfigOutput
}

type GetClusterNodeConfigShieldedInstanceConfigArgs struct {
	// Defines whether the instance has integrity monitoring enabled.
	EnableIntegrityMonitoring pulumi.BoolInput `pulumi:"enableIntegrityMonitoring"`
	// Defines whether the instance has Secure Boot enabled.
	EnableSecureBoot pulumi.BoolInput `pulumi:"enableSecureBoot"`
}

func (GetClusterNodeConfigShieldedInstanceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodeConfigShieldedInstanceConfig)(nil)).Elem()
}

func (i GetClusterNodeConfigShieldedInstanceConfigArgs) ToGetClusterNodeConfigShieldedInstanceConfigOutput() GetClusterNodeConfigShieldedInstanceConfigOutput {
	return i.ToGetClusterNodeConfigShieldedInstanceConfigOutputWithContext(context.Background())
}

func (i GetClusterNodeConfigShieldedInstanceConfigArgs) ToGetClusterNodeConfigShieldedInstanceConfigOutputWithContext(ctx context.Context) GetClusterNodeConfigShieldedInstanceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodeConfigShieldedInstanceConfigOutput)
}

// GetClusterNodeConfigShieldedInstanceConfigArrayInput is an input type that accepts GetClusterNodeConfigShieldedInstanceConfigArray and GetClusterNodeConfigShieldedInstanceConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterNodeConfigShieldedInstanceConfigArrayInput` via:
//
//	GetClusterNodeConfigShieldedInstanceConfigArray{ GetClusterNodeConfigShieldedInstanceConfigArgs{...} }
type GetClusterNodeConfigShieldedInstanceConfigArrayInput interface {
	pulumi.Input

	ToGetClusterNodeConfigShieldedInstanceConfigArrayOutput() GetClusterNodeConfigShieldedInstanceConfigArrayOutput
	ToGetClusterNodeConfigShieldedInstanceConfigArrayOutputWithContext(context.Context) GetClusterNodeConfigShieldedInstanceConfigArrayOutput
}

type GetClusterNodeConfigShieldedInstanceConfigArray []GetClusterNodeConfigShieldedInstanceConfigInput

func (GetClusterNodeConfigShieldedInstanceConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodeConfigShieldedInstanceConfig)(nil)).Elem()
}

func (i GetClusterNodeConfigShieldedInstanceConfigArray) ToGetClusterNodeConfigShieldedInstanceConfigArrayOutput() GetClusterNodeConfigShieldedInstanceConfigArrayOutput {
	return i.ToGetClusterNodeConfigShieldedInstanceConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterNodeConfigShieldedInstanceConfigArray) ToGetClusterNodeConfigShieldedInstanceConfigArrayOutputWithContext(ctx context.Context) GetClusterNodeConfigShieldedInstanceConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodeConfigShieldedInstanceConfigArrayOutput)
}

type GetClusterNodeConfigShieldedInstanceConfigOutput struct{ *pulumi.OutputState }

func (GetClusterNodeConfigShieldedInstanceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodeConfigShieldedInstanceConfig)(nil)).Elem()
}

func (o GetClusterNodeConfigShieldedInstanceConfigOutput) ToGetClusterNodeConfigShieldedInstanceConfigOutput() GetClusterNodeConfigShieldedInstanceConfigOutput {
	return o
}

func (o GetClusterNodeConfigShieldedInstanceConfigOutput) ToGetClusterNodeConfigShieldedInstanceConfigOutputWithContext(ctx context.Context) GetClusterNodeConfigShieldedInstanceConfigOutput {
	return o
}

// Defines whether the instance has integrity monitoring enabled.
func (o GetClusterNodeConfigShieldedInstanceConfigOutput) EnableIntegrityMonitoring() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterNodeConfigShieldedInstanceConfig) bool { return v.EnableIntegrityMonitoring }).(pulumi.BoolOutput)
}

// Defines whether the instance has Secure Boot enabled.
func (o GetClusterNodeConfigShieldedInstanceConfigOutput) EnableSecureBoot() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterNodeConfigShieldedInstanceConfig) bool { return v.EnableSecureBoot }).(pulumi.BoolOutput)
}

type GetClusterNodeConfigShieldedInstanceConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNodeConfigShieldedInstanceConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodeConfigShieldedInstanceConfig)(nil)).Elem()
}

func (o GetClusterNodeConfigShieldedInstanceConfigArrayOutput) ToGetClusterNodeConfigShieldedInstanceConfigArrayOutput() GetClusterNodeConfigShieldedInstanceConfigArrayOutput {
	return o
}

func (o GetClusterNodeConfigShieldedInstanceConfigArrayOutput) ToGetClusterNodeConfigShieldedInstanceConfigArrayOutputWithContext(ctx context.Context) GetClusterNodeConfigShieldedInstanceConfigArrayOutput {
	return o
}

func (o GetClusterNodeConfigShieldedInstanceConfigArrayOutput) Index(i pulumi.IntInput) GetClusterNodeConfigShieldedInstanceConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNodeConfigShieldedInstanceConfig {
		return vs[0].([]GetClusterNodeConfigShieldedInstanceConfig)[vs[1].(int)]
	}).(GetClusterNodeConfigShieldedInstanceConfigOutput)
}

type GetClusterNodeConfigSoleTenantConfig struct {
	// .
	NodeAffinities []GetClusterNodeConfigSoleTenantConfigNodeAffinity `pulumi:"nodeAffinities"`
}

// GetClusterNodeConfigSoleTenantConfigInput is an input type that accepts GetClusterNodeConfigSoleTenantConfigArgs and GetClusterNodeConfigSoleTenantConfigOutput values.
// You can construct a concrete instance of `GetClusterNodeConfigSoleTenantConfigInput` via:
//
//	GetClusterNodeConfigSoleTenantConfigArgs{...}
type GetClusterNodeConfigSoleTenantConfigInput interface {
	pulumi.Input

	ToGetClusterNodeConfigSoleTenantConfigOutput() GetClusterNodeConfigSoleTenantConfigOutput
	ToGetClusterNodeConfigSoleTenantConfigOutputWithContext(context.Context) GetClusterNodeConfigSoleTenantConfigOutput
}

type GetClusterNodeConfigSoleTenantConfigArgs struct {
	// .
	NodeAffinities GetClusterNodeConfigSoleTenantConfigNodeAffinityArrayInput `pulumi:"nodeAffinities"`
}

func (GetClusterNodeConfigSoleTenantConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodeConfigSoleTenantConfig)(nil)).Elem()
}

func (i GetClusterNodeConfigSoleTenantConfigArgs) ToGetClusterNodeConfigSoleTenantConfigOutput() GetClusterNodeConfigSoleTenantConfigOutput {
	return i.ToGetClusterNodeConfigSoleTenantConfigOutputWithContext(context.Background())
}

func (i GetClusterNodeConfigSoleTenantConfigArgs) ToGetClusterNodeConfigSoleTenantConfigOutputWithContext(ctx context.Context) GetClusterNodeConfigSoleTenantConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodeConfigSoleTenantConfigOutput)
}

// GetClusterNodeConfigSoleTenantConfigArrayInput is an input type that accepts GetClusterNodeConfigSoleTenantConfigArray and GetClusterNodeConfigSoleTenantConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterNodeConfigSoleTenantConfigArrayInput` via:
//
//	GetClusterNodeConfigSoleTenantConfigArray{ GetClusterNodeConfigSoleTenantConfigArgs{...} }
type GetClusterNodeConfigSoleTenantConfigArrayInput interface {
	pulumi.Input

	ToGetClusterNodeConfigSoleTenantConfigArrayOutput() GetClusterNodeConfigSoleTenantConfigArrayOutput
	ToGetClusterNodeConfigSoleTenantConfigArrayOutputWithContext(context.Context) GetClusterNodeConfigSoleTenantConfigArrayOutput
}

type GetClusterNodeConfigSoleTenantConfigArray []GetClusterNodeConfigSoleTenantConfigInput

func (GetClusterNodeConfigSoleTenantConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodeConfigSoleTenantConfig)(nil)).Elem()
}

func (i GetClusterNodeConfigSoleTenantConfigArray) ToGetClusterNodeConfigSoleTenantConfigArrayOutput() GetClusterNodeConfigSoleTenantConfigArrayOutput {
	return i.ToGetClusterNodeConfigSoleTenantConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterNodeConfigSoleTenantConfigArray) ToGetClusterNodeConfigSoleTenantConfigArrayOutputWithContext(ctx context.Context) GetClusterNodeConfigSoleTenantConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodeConfigSoleTenantConfigArrayOutput)
}

type GetClusterNodeConfigSoleTenantConfigOutput struct{ *pulumi.OutputState }

func (GetClusterNodeConfigSoleTenantConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodeConfigSoleTenantConfig)(nil)).Elem()
}

func (o GetClusterNodeConfigSoleTenantConfigOutput) ToGetClusterNodeConfigSoleTenantConfigOutput() GetClusterNodeConfigSoleTenantConfigOutput {
	return o
}

func (o GetClusterNodeConfigSoleTenantConfigOutput) ToGetClusterNodeConfigSoleTenantConfigOutputWithContext(ctx context.Context) GetClusterNodeConfigSoleTenantConfigOutput {
	return o
}

// .
func (o GetClusterNodeConfigSoleTenantConfigOutput) NodeAffinities() GetClusterNodeConfigSoleTenantConfigNodeAffinityArrayOutput {
	return o.ApplyT(func(v GetClusterNodeConfigSoleTenantConfig) []GetClusterNodeConfigSoleTenantConfigNodeAffinity {
		return v.NodeAffinities
	}).(GetClusterNodeConfigSoleTenantConfigNodeAffinityArrayOutput)
}

type GetClusterNodeConfigSoleTenantConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNodeConfigSoleTenantConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodeConfigSoleTenantConfig)(nil)).Elem()
}

func (o GetClusterNodeConfigSoleTenantConfigArrayOutput) ToGetClusterNodeConfigSoleTenantConfigArrayOutput() GetClusterNodeConfigSoleTenantConfigArrayOutput {
	return o
}

func (o GetClusterNodeConfigSoleTenantConfigArrayOutput) ToGetClusterNodeConfigSoleTenantConfigArrayOutputWithContext(ctx context.Context) GetClusterNodeConfigSoleTenantConfigArrayOutput {
	return o
}

func (o GetClusterNodeConfigSoleTenantConfigArrayOutput) Index(i pulumi.IntInput) GetClusterNodeConfigSoleTenantConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNodeConfigSoleTenantConfig {
		return vs[0].([]GetClusterNodeConfigSoleTenantConfig)[vs[1].(int)]
	}).(GetClusterNodeConfigSoleTenantConfigOutput)
}

type GetClusterNodeConfigSoleTenantConfigNodeAffinity struct {
	// .
	Key string `pulumi:"key"`
	// .
	Operator string `pulumi:"operator"`
	// .
	Values []string `pulumi:"values"`
}

// GetClusterNodeConfigSoleTenantConfigNodeAffinityInput is an input type that accepts GetClusterNodeConfigSoleTenantConfigNodeAffinityArgs and GetClusterNodeConfigSoleTenantConfigNodeAffinityOutput values.
// You can construct a concrete instance of `GetClusterNodeConfigSoleTenantConfigNodeAffinityInput` via:
//
//	GetClusterNodeConfigSoleTenantConfigNodeAffinityArgs{...}
type GetClusterNodeConfigSoleTenantConfigNodeAffinityInput interface {
	pulumi.Input

	ToGetClusterNodeConfigSoleTenantConfigNodeAffinityOutput() GetClusterNodeConfigSoleTenantConfigNodeAffinityOutput
	ToGetClusterNodeConfigSoleTenantConfigNodeAffinityOutputWithContext(context.Context) GetClusterNodeConfigSoleTenantConfigNodeAffinityOutput
}

type GetClusterNodeConfigSoleTenantConfigNodeAffinityArgs struct {
	// .
	Key pulumi.StringInput `pulumi:"key"`
	// .
	Operator pulumi.StringInput `pulumi:"operator"`
	// .
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetClusterNodeConfigSoleTenantConfigNodeAffinityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodeConfigSoleTenantConfigNodeAffinity)(nil)).Elem()
}

func (i GetClusterNodeConfigSoleTenantConfigNodeAffinityArgs) ToGetClusterNodeConfigSoleTenantConfigNodeAffinityOutput() GetClusterNodeConfigSoleTenantConfigNodeAffinityOutput {
	return i.ToGetClusterNodeConfigSoleTenantConfigNodeAffinityOutputWithContext(context.Background())
}

func (i GetClusterNodeConfigSoleTenantConfigNodeAffinityArgs) ToGetClusterNodeConfigSoleTenantConfigNodeAffinityOutputWithContext(ctx context.Context) GetClusterNodeConfigSoleTenantConfigNodeAffinityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodeConfigSoleTenantConfigNodeAffinityOutput)
}

// GetClusterNodeConfigSoleTenantConfigNodeAffinityArrayInput is an input type that accepts GetClusterNodeConfigSoleTenantConfigNodeAffinityArray and GetClusterNodeConfigSoleTenantConfigNodeAffinityArrayOutput values.
// You can construct a concrete instance of `GetClusterNodeConfigSoleTenantConfigNodeAffinityArrayInput` via:
//
//	GetClusterNodeConfigSoleTenantConfigNodeAffinityArray{ GetClusterNodeConfigSoleTenantConfigNodeAffinityArgs{...} }
type GetClusterNodeConfigSoleTenantConfigNodeAffinityArrayInput interface {
	pulumi.Input

	ToGetClusterNodeConfigSoleTenantConfigNodeAffinityArrayOutput() GetClusterNodeConfigSoleTenantConfigNodeAffinityArrayOutput
	ToGetClusterNodeConfigSoleTenantConfigNodeAffinityArrayOutputWithContext(context.Context) GetClusterNodeConfigSoleTenantConfigNodeAffinityArrayOutput
}

type GetClusterNodeConfigSoleTenantConfigNodeAffinityArray []GetClusterNodeConfigSoleTenantConfigNodeAffinityInput

func (GetClusterNodeConfigSoleTenantConfigNodeAffinityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodeConfigSoleTenantConfigNodeAffinity)(nil)).Elem()
}

func (i GetClusterNodeConfigSoleTenantConfigNodeAffinityArray) ToGetClusterNodeConfigSoleTenantConfigNodeAffinityArrayOutput() GetClusterNodeConfigSoleTenantConfigNodeAffinityArrayOutput {
	return i.ToGetClusterNodeConfigSoleTenantConfigNodeAffinityArrayOutputWithContext(context.Background())
}

func (i GetClusterNodeConfigSoleTenantConfigNodeAffinityArray) ToGetClusterNodeConfigSoleTenantConfigNodeAffinityArrayOutputWithContext(ctx context.Context) GetClusterNodeConfigSoleTenantConfigNodeAffinityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodeConfigSoleTenantConfigNodeAffinityArrayOutput)
}

type GetClusterNodeConfigSoleTenantConfigNodeAffinityOutput struct{ *pulumi.OutputState }

func (GetClusterNodeConfigSoleTenantConfigNodeAffinityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodeConfigSoleTenantConfigNodeAffinity)(nil)).Elem()
}

func (o GetClusterNodeConfigSoleTenantConfigNodeAffinityOutput) ToGetClusterNodeConfigSoleTenantConfigNodeAffinityOutput() GetClusterNodeConfigSoleTenantConfigNodeAffinityOutput {
	return o
}

func (o GetClusterNodeConfigSoleTenantConfigNodeAffinityOutput) ToGetClusterNodeConfigSoleTenantConfigNodeAffinityOutputWithContext(ctx context.Context) GetClusterNodeConfigSoleTenantConfigNodeAffinityOutput {
	return o
}

// .
func (o GetClusterNodeConfigSoleTenantConfigNodeAffinityOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodeConfigSoleTenantConfigNodeAffinity) string { return v.Key }).(pulumi.StringOutput)
}

// .
func (o GetClusterNodeConfigSoleTenantConfigNodeAffinityOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodeConfigSoleTenantConfigNodeAffinity) string { return v.Operator }).(pulumi.StringOutput)
}

// .
func (o GetClusterNodeConfigSoleTenantConfigNodeAffinityOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClusterNodeConfigSoleTenantConfigNodeAffinity) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetClusterNodeConfigSoleTenantConfigNodeAffinityArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNodeConfigSoleTenantConfigNodeAffinityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodeConfigSoleTenantConfigNodeAffinity)(nil)).Elem()
}

func (o GetClusterNodeConfigSoleTenantConfigNodeAffinityArrayOutput) ToGetClusterNodeConfigSoleTenantConfigNodeAffinityArrayOutput() GetClusterNodeConfigSoleTenantConfigNodeAffinityArrayOutput {
	return o
}

func (o GetClusterNodeConfigSoleTenantConfigNodeAffinityArrayOutput) ToGetClusterNodeConfigSoleTenantConfigNodeAffinityArrayOutputWithContext(ctx context.Context) GetClusterNodeConfigSoleTenantConfigNodeAffinityArrayOutput {
	return o
}

func (o GetClusterNodeConfigSoleTenantConfigNodeAffinityArrayOutput) Index(i pulumi.IntInput) GetClusterNodeConfigSoleTenantConfigNodeAffinityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNodeConfigSoleTenantConfigNodeAffinity {
		return vs[0].([]GetClusterNodeConfigSoleTenantConfigNodeAffinity)[vs[1].(int)]
	}).(GetClusterNodeConfigSoleTenantConfigNodeAffinityOutput)
}

type GetClusterNodeConfigTaint struct {
	// Effect for taint.
	Effect string `pulumi:"effect"`
	// Key for taint.
	Key string `pulumi:"key"`
	// Value for taint.
	Value string `pulumi:"value"`
}

// GetClusterNodeConfigTaintInput is an input type that accepts GetClusterNodeConfigTaintArgs and GetClusterNodeConfigTaintOutput values.
// You can construct a concrete instance of `GetClusterNodeConfigTaintInput` via:
//
//	GetClusterNodeConfigTaintArgs{...}
type GetClusterNodeConfigTaintInput interface {
	pulumi.Input

	ToGetClusterNodeConfigTaintOutput() GetClusterNodeConfigTaintOutput
	ToGetClusterNodeConfigTaintOutputWithContext(context.Context) GetClusterNodeConfigTaintOutput
}

type GetClusterNodeConfigTaintArgs struct {
	// Effect for taint.
	Effect pulumi.StringInput `pulumi:"effect"`
	// Key for taint.
	Key pulumi.StringInput `pulumi:"key"`
	// Value for taint.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetClusterNodeConfigTaintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodeConfigTaint)(nil)).Elem()
}

func (i GetClusterNodeConfigTaintArgs) ToGetClusterNodeConfigTaintOutput() GetClusterNodeConfigTaintOutput {
	return i.ToGetClusterNodeConfigTaintOutputWithContext(context.Background())
}

func (i GetClusterNodeConfigTaintArgs) ToGetClusterNodeConfigTaintOutputWithContext(ctx context.Context) GetClusterNodeConfigTaintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodeConfigTaintOutput)
}

// GetClusterNodeConfigTaintArrayInput is an input type that accepts GetClusterNodeConfigTaintArray and GetClusterNodeConfigTaintArrayOutput values.
// You can construct a concrete instance of `GetClusterNodeConfigTaintArrayInput` via:
//
//	GetClusterNodeConfigTaintArray{ GetClusterNodeConfigTaintArgs{...} }
type GetClusterNodeConfigTaintArrayInput interface {
	pulumi.Input

	ToGetClusterNodeConfigTaintArrayOutput() GetClusterNodeConfigTaintArrayOutput
	ToGetClusterNodeConfigTaintArrayOutputWithContext(context.Context) GetClusterNodeConfigTaintArrayOutput
}

type GetClusterNodeConfigTaintArray []GetClusterNodeConfigTaintInput

func (GetClusterNodeConfigTaintArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodeConfigTaint)(nil)).Elem()
}

func (i GetClusterNodeConfigTaintArray) ToGetClusterNodeConfigTaintArrayOutput() GetClusterNodeConfigTaintArrayOutput {
	return i.ToGetClusterNodeConfigTaintArrayOutputWithContext(context.Background())
}

func (i GetClusterNodeConfigTaintArray) ToGetClusterNodeConfigTaintArrayOutputWithContext(ctx context.Context) GetClusterNodeConfigTaintArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodeConfigTaintArrayOutput)
}

type GetClusterNodeConfigTaintOutput struct{ *pulumi.OutputState }

func (GetClusterNodeConfigTaintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodeConfigTaint)(nil)).Elem()
}

func (o GetClusterNodeConfigTaintOutput) ToGetClusterNodeConfigTaintOutput() GetClusterNodeConfigTaintOutput {
	return o
}

func (o GetClusterNodeConfigTaintOutput) ToGetClusterNodeConfigTaintOutputWithContext(ctx context.Context) GetClusterNodeConfigTaintOutput {
	return o
}

// Effect for taint.
func (o GetClusterNodeConfigTaintOutput) Effect() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodeConfigTaint) string { return v.Effect }).(pulumi.StringOutput)
}

// Key for taint.
func (o GetClusterNodeConfigTaintOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodeConfigTaint) string { return v.Key }).(pulumi.StringOutput)
}

// Value for taint.
func (o GetClusterNodeConfigTaintOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodeConfigTaint) string { return v.Value }).(pulumi.StringOutput)
}

type GetClusterNodeConfigTaintArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNodeConfigTaintArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodeConfigTaint)(nil)).Elem()
}

func (o GetClusterNodeConfigTaintArrayOutput) ToGetClusterNodeConfigTaintArrayOutput() GetClusterNodeConfigTaintArrayOutput {
	return o
}

func (o GetClusterNodeConfigTaintArrayOutput) ToGetClusterNodeConfigTaintArrayOutputWithContext(ctx context.Context) GetClusterNodeConfigTaintArrayOutput {
	return o
}

func (o GetClusterNodeConfigTaintArrayOutput) Index(i pulumi.IntInput) GetClusterNodeConfigTaintOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNodeConfigTaint {
		return vs[0].([]GetClusterNodeConfigTaint)[vs[1].(int)]
	}).(GetClusterNodeConfigTaintOutput)
}

type GetClusterNodeConfigWorkloadMetadataConfig struct {
	// Mode is the configuration for how to expose metadata to workloads running on the node.
	Mode string `pulumi:"mode"`
}

// GetClusterNodeConfigWorkloadMetadataConfigInput is an input type that accepts GetClusterNodeConfigWorkloadMetadataConfigArgs and GetClusterNodeConfigWorkloadMetadataConfigOutput values.
// You can construct a concrete instance of `GetClusterNodeConfigWorkloadMetadataConfigInput` via:
//
//	GetClusterNodeConfigWorkloadMetadataConfigArgs{...}
type GetClusterNodeConfigWorkloadMetadataConfigInput interface {
	pulumi.Input

	ToGetClusterNodeConfigWorkloadMetadataConfigOutput() GetClusterNodeConfigWorkloadMetadataConfigOutput
	ToGetClusterNodeConfigWorkloadMetadataConfigOutputWithContext(context.Context) GetClusterNodeConfigWorkloadMetadataConfigOutput
}

type GetClusterNodeConfigWorkloadMetadataConfigArgs struct {
	// Mode is the configuration for how to expose metadata to workloads running on the node.
	Mode pulumi.StringInput `pulumi:"mode"`
}

func (GetClusterNodeConfigWorkloadMetadataConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodeConfigWorkloadMetadataConfig)(nil)).Elem()
}

func (i GetClusterNodeConfigWorkloadMetadataConfigArgs) ToGetClusterNodeConfigWorkloadMetadataConfigOutput() GetClusterNodeConfigWorkloadMetadataConfigOutput {
	return i.ToGetClusterNodeConfigWorkloadMetadataConfigOutputWithContext(context.Background())
}

func (i GetClusterNodeConfigWorkloadMetadataConfigArgs) ToGetClusterNodeConfigWorkloadMetadataConfigOutputWithContext(ctx context.Context) GetClusterNodeConfigWorkloadMetadataConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodeConfigWorkloadMetadataConfigOutput)
}

// GetClusterNodeConfigWorkloadMetadataConfigArrayInput is an input type that accepts GetClusterNodeConfigWorkloadMetadataConfigArray and GetClusterNodeConfigWorkloadMetadataConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterNodeConfigWorkloadMetadataConfigArrayInput` via:
//
//	GetClusterNodeConfigWorkloadMetadataConfigArray{ GetClusterNodeConfigWorkloadMetadataConfigArgs{...} }
type GetClusterNodeConfigWorkloadMetadataConfigArrayInput interface {
	pulumi.Input

	ToGetClusterNodeConfigWorkloadMetadataConfigArrayOutput() GetClusterNodeConfigWorkloadMetadataConfigArrayOutput
	ToGetClusterNodeConfigWorkloadMetadataConfigArrayOutputWithContext(context.Context) GetClusterNodeConfigWorkloadMetadataConfigArrayOutput
}

type GetClusterNodeConfigWorkloadMetadataConfigArray []GetClusterNodeConfigWorkloadMetadataConfigInput

func (GetClusterNodeConfigWorkloadMetadataConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodeConfigWorkloadMetadataConfig)(nil)).Elem()
}

func (i GetClusterNodeConfigWorkloadMetadataConfigArray) ToGetClusterNodeConfigWorkloadMetadataConfigArrayOutput() GetClusterNodeConfigWorkloadMetadataConfigArrayOutput {
	return i.ToGetClusterNodeConfigWorkloadMetadataConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterNodeConfigWorkloadMetadataConfigArray) ToGetClusterNodeConfigWorkloadMetadataConfigArrayOutputWithContext(ctx context.Context) GetClusterNodeConfigWorkloadMetadataConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodeConfigWorkloadMetadataConfigArrayOutput)
}

type GetClusterNodeConfigWorkloadMetadataConfigOutput struct{ *pulumi.OutputState }

func (GetClusterNodeConfigWorkloadMetadataConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodeConfigWorkloadMetadataConfig)(nil)).Elem()
}

func (o GetClusterNodeConfigWorkloadMetadataConfigOutput) ToGetClusterNodeConfigWorkloadMetadataConfigOutput() GetClusterNodeConfigWorkloadMetadataConfigOutput {
	return o
}

func (o GetClusterNodeConfigWorkloadMetadataConfigOutput) ToGetClusterNodeConfigWorkloadMetadataConfigOutputWithContext(ctx context.Context) GetClusterNodeConfigWorkloadMetadataConfigOutput {
	return o
}

// Mode is the configuration for how to expose metadata to workloads running on the node.
func (o GetClusterNodeConfigWorkloadMetadataConfigOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodeConfigWorkloadMetadataConfig) string { return v.Mode }).(pulumi.StringOutput)
}

type GetClusterNodeConfigWorkloadMetadataConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNodeConfigWorkloadMetadataConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodeConfigWorkloadMetadataConfig)(nil)).Elem()
}

func (o GetClusterNodeConfigWorkloadMetadataConfigArrayOutput) ToGetClusterNodeConfigWorkloadMetadataConfigArrayOutput() GetClusterNodeConfigWorkloadMetadataConfigArrayOutput {
	return o
}

func (o GetClusterNodeConfigWorkloadMetadataConfigArrayOutput) ToGetClusterNodeConfigWorkloadMetadataConfigArrayOutputWithContext(ctx context.Context) GetClusterNodeConfigWorkloadMetadataConfigArrayOutput {
	return o
}

func (o GetClusterNodeConfigWorkloadMetadataConfigArrayOutput) Index(i pulumi.IntInput) GetClusterNodeConfigWorkloadMetadataConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNodeConfigWorkloadMetadataConfig {
		return vs[0].([]GetClusterNodeConfigWorkloadMetadataConfig)[vs[1].(int)]
	}).(GetClusterNodeConfigWorkloadMetadataConfigOutput)
}

type GetClusterNodePool struct {
	// Configuration required by cluster autoscaler to adjust the size of the node pool to the current cluster usage.
	Autoscalings []GetClusterNodePoolAutoscaling `pulumi:"autoscalings"`
	// The initial number of nodes for the pool. In regional or multi-zonal clusters, this is the number of nodes per zone. Changing this will force recreation of the resource.
	InitialNodeCount int `pulumi:"initialNodeCount"`
	// The resource URLs of the managed instance groups associated with this node pool.
	InstanceGroupUrls []string `pulumi:"instanceGroupUrls"`
	// List of instance group URLs which have been assigned to this node pool.
	ManagedInstanceGroupUrls []string `pulumi:"managedInstanceGroupUrls"`
	// Node management configuration, wherein auto-repair and auto-upgrade is configured.
	Managements []GetClusterNodePoolManagement `pulumi:"managements"`
	// The maximum number of pods per node in this node pool. Note that this does not work on node pools which are "route-based" - that is, node pools belonging to clusters that do not have IP Aliasing enabled.
	MaxPodsPerNode int `pulumi:"maxPodsPerNode"`
	// The name of the cluster.
	Name string `pulumi:"name"`
	// Creates a unique name for the node pool beginning with the specified prefix. Conflicts with name.
	NamePrefix string `pulumi:"namePrefix"`
	// Networking configuration for this NodePool. If specified, it overrides the cluster-level defaults.
	NetworkConfigs []GetClusterNodePoolNetworkConfig `pulumi:"networkConfigs"`
	// The configuration of the nodepool
	NodeConfigs []GetClusterNodePoolNodeConfig `pulumi:"nodeConfigs"`
	// The number of nodes per instance group. This field can be used to update the number of nodes per instance group but should not be used alongside autoscaling.
	NodeCount int `pulumi:"nodeCount"`
	// The list of zones in which the node pool's nodes should be located. Nodes must be in the region of their regional cluster or in the same region as their cluster's zone for zonal clusters. If unspecified, the cluster-level nodeLocations will be used.
	NodeLocations []string `pulumi:"nodeLocations"`
	// Specifies the node placement policy
	PlacementPolicies []GetClusterNodePoolPlacementPolicy `pulumi:"placementPolicies"`
	// Specifies the configuration of queued provisioning
	QueuedProvisionings []GetClusterNodePoolQueuedProvisioning `pulumi:"queuedProvisionings"`
	// Specify node upgrade settings to change how many nodes GKE attempts to upgrade at once. The number of nodes upgraded simultaneously is the sum of maxSurge and max_unavailable. The maximum number of nodes upgraded simultaneously is limited to 20.
	UpgradeSettings []GetClusterNodePoolUpgradeSetting `pulumi:"upgradeSettings"`
	Version         string                             `pulumi:"version"`
}

// GetClusterNodePoolInput is an input type that accepts GetClusterNodePoolArgs and GetClusterNodePoolOutput values.
// You can construct a concrete instance of `GetClusterNodePoolInput` via:
//
//	GetClusterNodePoolArgs{...}
type GetClusterNodePoolInput interface {
	pulumi.Input

	ToGetClusterNodePoolOutput() GetClusterNodePoolOutput
	ToGetClusterNodePoolOutputWithContext(context.Context) GetClusterNodePoolOutput
}

type GetClusterNodePoolArgs struct {
	// Configuration required by cluster autoscaler to adjust the size of the node pool to the current cluster usage.
	Autoscalings GetClusterNodePoolAutoscalingArrayInput `pulumi:"autoscalings"`
	// The initial number of nodes for the pool. In regional or multi-zonal clusters, this is the number of nodes per zone. Changing this will force recreation of the resource.
	InitialNodeCount pulumi.IntInput `pulumi:"initialNodeCount"`
	// The resource URLs of the managed instance groups associated with this node pool.
	InstanceGroupUrls pulumi.StringArrayInput `pulumi:"instanceGroupUrls"`
	// List of instance group URLs which have been assigned to this node pool.
	ManagedInstanceGroupUrls pulumi.StringArrayInput `pulumi:"managedInstanceGroupUrls"`
	// Node management configuration, wherein auto-repair and auto-upgrade is configured.
	Managements GetClusterNodePoolManagementArrayInput `pulumi:"managements"`
	// The maximum number of pods per node in this node pool. Note that this does not work on node pools which are "route-based" - that is, node pools belonging to clusters that do not have IP Aliasing enabled.
	MaxPodsPerNode pulumi.IntInput `pulumi:"maxPodsPerNode"`
	// The name of the cluster.
	Name pulumi.StringInput `pulumi:"name"`
	// Creates a unique name for the node pool beginning with the specified prefix. Conflicts with name.
	NamePrefix pulumi.StringInput `pulumi:"namePrefix"`
	// Networking configuration for this NodePool. If specified, it overrides the cluster-level defaults.
	NetworkConfigs GetClusterNodePoolNetworkConfigArrayInput `pulumi:"networkConfigs"`
	// The configuration of the nodepool
	NodeConfigs GetClusterNodePoolNodeConfigArrayInput `pulumi:"nodeConfigs"`
	// The number of nodes per instance group. This field can be used to update the number of nodes per instance group but should not be used alongside autoscaling.
	NodeCount pulumi.IntInput `pulumi:"nodeCount"`
	// The list of zones in which the node pool's nodes should be located. Nodes must be in the region of their regional cluster or in the same region as their cluster's zone for zonal clusters. If unspecified, the cluster-level nodeLocations will be used.
	NodeLocations pulumi.StringArrayInput `pulumi:"nodeLocations"`
	// Specifies the node placement policy
	PlacementPolicies GetClusterNodePoolPlacementPolicyArrayInput `pulumi:"placementPolicies"`
	// Specifies the configuration of queued provisioning
	QueuedProvisionings GetClusterNodePoolQueuedProvisioningArrayInput `pulumi:"queuedProvisionings"`
	// Specify node upgrade settings to change how many nodes GKE attempts to upgrade at once. The number of nodes upgraded simultaneously is the sum of maxSurge and max_unavailable. The maximum number of nodes upgraded simultaneously is limited to 20.
	UpgradeSettings GetClusterNodePoolUpgradeSettingArrayInput `pulumi:"upgradeSettings"`
	Version         pulumi.StringInput                         `pulumi:"version"`
}

func (GetClusterNodePoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePool)(nil)).Elem()
}

func (i GetClusterNodePoolArgs) ToGetClusterNodePoolOutput() GetClusterNodePoolOutput {
	return i.ToGetClusterNodePoolOutputWithContext(context.Background())
}

func (i GetClusterNodePoolArgs) ToGetClusterNodePoolOutputWithContext(ctx context.Context) GetClusterNodePoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolOutput)
}

// GetClusterNodePoolArrayInput is an input type that accepts GetClusterNodePoolArray and GetClusterNodePoolArrayOutput values.
// You can construct a concrete instance of `GetClusterNodePoolArrayInput` via:
//
//	GetClusterNodePoolArray{ GetClusterNodePoolArgs{...} }
type GetClusterNodePoolArrayInput interface {
	pulumi.Input

	ToGetClusterNodePoolArrayOutput() GetClusterNodePoolArrayOutput
	ToGetClusterNodePoolArrayOutputWithContext(context.Context) GetClusterNodePoolArrayOutput
}

type GetClusterNodePoolArray []GetClusterNodePoolInput

func (GetClusterNodePoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePool)(nil)).Elem()
}

func (i GetClusterNodePoolArray) ToGetClusterNodePoolArrayOutput() GetClusterNodePoolArrayOutput {
	return i.ToGetClusterNodePoolArrayOutputWithContext(context.Background())
}

func (i GetClusterNodePoolArray) ToGetClusterNodePoolArrayOutputWithContext(ctx context.Context) GetClusterNodePoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolArrayOutput)
}

type GetClusterNodePoolOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePool)(nil)).Elem()
}

func (o GetClusterNodePoolOutput) ToGetClusterNodePoolOutput() GetClusterNodePoolOutput {
	return o
}

func (o GetClusterNodePoolOutput) ToGetClusterNodePoolOutputWithContext(ctx context.Context) GetClusterNodePoolOutput {
	return o
}

// Configuration required by cluster autoscaler to adjust the size of the node pool to the current cluster usage.
func (o GetClusterNodePoolOutput) Autoscalings() GetClusterNodePoolAutoscalingArrayOutput {
	return o.ApplyT(func(v GetClusterNodePool) []GetClusterNodePoolAutoscaling { return v.Autoscalings }).(GetClusterNodePoolAutoscalingArrayOutput)
}

// The initial number of nodes for the pool. In regional or multi-zonal clusters, this is the number of nodes per zone. Changing this will force recreation of the resource.
func (o GetClusterNodePoolOutput) InitialNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterNodePool) int { return v.InitialNodeCount }).(pulumi.IntOutput)
}

// The resource URLs of the managed instance groups associated with this node pool.
func (o GetClusterNodePoolOutput) InstanceGroupUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClusterNodePool) []string { return v.InstanceGroupUrls }).(pulumi.StringArrayOutput)
}

// List of instance group URLs which have been assigned to this node pool.
func (o GetClusterNodePoolOutput) ManagedInstanceGroupUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClusterNodePool) []string { return v.ManagedInstanceGroupUrls }).(pulumi.StringArrayOutput)
}

// Node management configuration, wherein auto-repair and auto-upgrade is configured.
func (o GetClusterNodePoolOutput) Managements() GetClusterNodePoolManagementArrayOutput {
	return o.ApplyT(func(v GetClusterNodePool) []GetClusterNodePoolManagement { return v.Managements }).(GetClusterNodePoolManagementArrayOutput)
}

// The maximum number of pods per node in this node pool. Note that this does not work on node pools which are "route-based" - that is, node pools belonging to clusters that do not have IP Aliasing enabled.
func (o GetClusterNodePoolOutput) MaxPodsPerNode() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterNodePool) int { return v.MaxPodsPerNode }).(pulumi.IntOutput)
}

// The name of the cluster.
func (o GetClusterNodePoolOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodePool) string { return v.Name }).(pulumi.StringOutput)
}

// Creates a unique name for the node pool beginning with the specified prefix. Conflicts with name.
func (o GetClusterNodePoolOutput) NamePrefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodePool) string { return v.NamePrefix }).(pulumi.StringOutput)
}

// Networking configuration for this NodePool. If specified, it overrides the cluster-level defaults.
func (o GetClusterNodePoolOutput) NetworkConfigs() GetClusterNodePoolNetworkConfigArrayOutput {
	return o.ApplyT(func(v GetClusterNodePool) []GetClusterNodePoolNetworkConfig { return v.NetworkConfigs }).(GetClusterNodePoolNetworkConfigArrayOutput)
}

// The configuration of the nodepool
func (o GetClusterNodePoolOutput) NodeConfigs() GetClusterNodePoolNodeConfigArrayOutput {
	return o.ApplyT(func(v GetClusterNodePool) []GetClusterNodePoolNodeConfig { return v.NodeConfigs }).(GetClusterNodePoolNodeConfigArrayOutput)
}

// The number of nodes per instance group. This field can be used to update the number of nodes per instance group but should not be used alongside autoscaling.
func (o GetClusterNodePoolOutput) NodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterNodePool) int { return v.NodeCount }).(pulumi.IntOutput)
}

// The list of zones in which the node pool's nodes should be located. Nodes must be in the region of their regional cluster or in the same region as their cluster's zone for zonal clusters. If unspecified, the cluster-level nodeLocations will be used.
func (o GetClusterNodePoolOutput) NodeLocations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClusterNodePool) []string { return v.NodeLocations }).(pulumi.StringArrayOutput)
}

// Specifies the node placement policy
func (o GetClusterNodePoolOutput) PlacementPolicies() GetClusterNodePoolPlacementPolicyArrayOutput {
	return o.ApplyT(func(v GetClusterNodePool) []GetClusterNodePoolPlacementPolicy { return v.PlacementPolicies }).(GetClusterNodePoolPlacementPolicyArrayOutput)
}

// Specifies the configuration of queued provisioning
func (o GetClusterNodePoolOutput) QueuedProvisionings() GetClusterNodePoolQueuedProvisioningArrayOutput {
	return o.ApplyT(func(v GetClusterNodePool) []GetClusterNodePoolQueuedProvisioning { return v.QueuedProvisionings }).(GetClusterNodePoolQueuedProvisioningArrayOutput)
}

// Specify node upgrade settings to change how many nodes GKE attempts to upgrade at once. The number of nodes upgraded simultaneously is the sum of maxSurge and max_unavailable. The maximum number of nodes upgraded simultaneously is limited to 20.
func (o GetClusterNodePoolOutput) UpgradeSettings() GetClusterNodePoolUpgradeSettingArrayOutput {
	return o.ApplyT(func(v GetClusterNodePool) []GetClusterNodePoolUpgradeSetting { return v.UpgradeSettings }).(GetClusterNodePoolUpgradeSettingArrayOutput)
}

func (o GetClusterNodePoolOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodePool) string { return v.Version }).(pulumi.StringOutput)
}

type GetClusterNodePoolArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePool)(nil)).Elem()
}

func (o GetClusterNodePoolArrayOutput) ToGetClusterNodePoolArrayOutput() GetClusterNodePoolArrayOutput {
	return o
}

func (o GetClusterNodePoolArrayOutput) ToGetClusterNodePoolArrayOutputWithContext(ctx context.Context) GetClusterNodePoolArrayOutput {
	return o
}

func (o GetClusterNodePoolArrayOutput) Index(i pulumi.IntInput) GetClusterNodePoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNodePool {
		return vs[0].([]GetClusterNodePool)[vs[1].(int)]
	}).(GetClusterNodePoolOutput)
}

type GetClusterNodePoolAutoConfig struct {
	// Collection of Compute Engine network tags that can be applied to a node's underlying VM instance.
	NetworkTags []GetClusterNodePoolAutoConfigNetworkTag `pulumi:"networkTags"`
	// A map of resource manager tags. Resource manager tag keys and values have the same definition as resource manager tags. Keys must be in the format tagKeys/{tag_key_id}, and values are in the format tagValues/456. The field is ignored (both PUT & PATCH) when empty.
	ResourceManagerTags map[string]interface{} `pulumi:"resourceManagerTags"`
}

// GetClusterNodePoolAutoConfigInput is an input type that accepts GetClusterNodePoolAutoConfigArgs and GetClusterNodePoolAutoConfigOutput values.
// You can construct a concrete instance of `GetClusterNodePoolAutoConfigInput` via:
//
//	GetClusterNodePoolAutoConfigArgs{...}
type GetClusterNodePoolAutoConfigInput interface {
	pulumi.Input

	ToGetClusterNodePoolAutoConfigOutput() GetClusterNodePoolAutoConfigOutput
	ToGetClusterNodePoolAutoConfigOutputWithContext(context.Context) GetClusterNodePoolAutoConfigOutput
}

type GetClusterNodePoolAutoConfigArgs struct {
	// Collection of Compute Engine network tags that can be applied to a node's underlying VM instance.
	NetworkTags GetClusterNodePoolAutoConfigNetworkTagArrayInput `pulumi:"networkTags"`
	// A map of resource manager tags. Resource manager tag keys and values have the same definition as resource manager tags. Keys must be in the format tagKeys/{tag_key_id}, and values are in the format tagValues/456. The field is ignored (both PUT & PATCH) when empty.
	ResourceManagerTags pulumi.MapInput `pulumi:"resourceManagerTags"`
}

func (GetClusterNodePoolAutoConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolAutoConfig)(nil)).Elem()
}

func (i GetClusterNodePoolAutoConfigArgs) ToGetClusterNodePoolAutoConfigOutput() GetClusterNodePoolAutoConfigOutput {
	return i.ToGetClusterNodePoolAutoConfigOutputWithContext(context.Background())
}

func (i GetClusterNodePoolAutoConfigArgs) ToGetClusterNodePoolAutoConfigOutputWithContext(ctx context.Context) GetClusterNodePoolAutoConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolAutoConfigOutput)
}

// GetClusterNodePoolAutoConfigArrayInput is an input type that accepts GetClusterNodePoolAutoConfigArray and GetClusterNodePoolAutoConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterNodePoolAutoConfigArrayInput` via:
//
//	GetClusterNodePoolAutoConfigArray{ GetClusterNodePoolAutoConfigArgs{...} }
type GetClusterNodePoolAutoConfigArrayInput interface {
	pulumi.Input

	ToGetClusterNodePoolAutoConfigArrayOutput() GetClusterNodePoolAutoConfigArrayOutput
	ToGetClusterNodePoolAutoConfigArrayOutputWithContext(context.Context) GetClusterNodePoolAutoConfigArrayOutput
}

type GetClusterNodePoolAutoConfigArray []GetClusterNodePoolAutoConfigInput

func (GetClusterNodePoolAutoConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolAutoConfig)(nil)).Elem()
}

func (i GetClusterNodePoolAutoConfigArray) ToGetClusterNodePoolAutoConfigArrayOutput() GetClusterNodePoolAutoConfigArrayOutput {
	return i.ToGetClusterNodePoolAutoConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterNodePoolAutoConfigArray) ToGetClusterNodePoolAutoConfigArrayOutputWithContext(ctx context.Context) GetClusterNodePoolAutoConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolAutoConfigArrayOutput)
}

type GetClusterNodePoolAutoConfigOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolAutoConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolAutoConfig)(nil)).Elem()
}

func (o GetClusterNodePoolAutoConfigOutput) ToGetClusterNodePoolAutoConfigOutput() GetClusterNodePoolAutoConfigOutput {
	return o
}

func (o GetClusterNodePoolAutoConfigOutput) ToGetClusterNodePoolAutoConfigOutputWithContext(ctx context.Context) GetClusterNodePoolAutoConfigOutput {
	return o
}

// Collection of Compute Engine network tags that can be applied to a node's underlying VM instance.
func (o GetClusterNodePoolAutoConfigOutput) NetworkTags() GetClusterNodePoolAutoConfigNetworkTagArrayOutput {
	return o.ApplyT(func(v GetClusterNodePoolAutoConfig) []GetClusterNodePoolAutoConfigNetworkTag { return v.NetworkTags }).(GetClusterNodePoolAutoConfigNetworkTagArrayOutput)
}

// A map of resource manager tags. Resource manager tag keys and values have the same definition as resource manager tags. Keys must be in the format tagKeys/{tag_key_id}, and values are in the format tagValues/456. The field is ignored (both PUT & PATCH) when empty.
func (o GetClusterNodePoolAutoConfigOutput) ResourceManagerTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetClusterNodePoolAutoConfig) map[string]interface{} { return v.ResourceManagerTags }).(pulumi.MapOutput)
}

type GetClusterNodePoolAutoConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolAutoConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolAutoConfig)(nil)).Elem()
}

func (o GetClusterNodePoolAutoConfigArrayOutput) ToGetClusterNodePoolAutoConfigArrayOutput() GetClusterNodePoolAutoConfigArrayOutput {
	return o
}

func (o GetClusterNodePoolAutoConfigArrayOutput) ToGetClusterNodePoolAutoConfigArrayOutputWithContext(ctx context.Context) GetClusterNodePoolAutoConfigArrayOutput {
	return o
}

func (o GetClusterNodePoolAutoConfigArrayOutput) Index(i pulumi.IntInput) GetClusterNodePoolAutoConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNodePoolAutoConfig {
		return vs[0].([]GetClusterNodePoolAutoConfig)[vs[1].(int)]
	}).(GetClusterNodePoolAutoConfigOutput)
}

type GetClusterNodePoolAutoConfigNetworkTag struct {
	// List of network tags applied to auto-provisioned node pools.
	Tags []string `pulumi:"tags"`
}

// GetClusterNodePoolAutoConfigNetworkTagInput is an input type that accepts GetClusterNodePoolAutoConfigNetworkTagArgs and GetClusterNodePoolAutoConfigNetworkTagOutput values.
// You can construct a concrete instance of `GetClusterNodePoolAutoConfigNetworkTagInput` via:
//
//	GetClusterNodePoolAutoConfigNetworkTagArgs{...}
type GetClusterNodePoolAutoConfigNetworkTagInput interface {
	pulumi.Input

	ToGetClusterNodePoolAutoConfigNetworkTagOutput() GetClusterNodePoolAutoConfigNetworkTagOutput
	ToGetClusterNodePoolAutoConfigNetworkTagOutputWithContext(context.Context) GetClusterNodePoolAutoConfigNetworkTagOutput
}

type GetClusterNodePoolAutoConfigNetworkTagArgs struct {
	// List of network tags applied to auto-provisioned node pools.
	Tags pulumi.StringArrayInput `pulumi:"tags"`
}

func (GetClusterNodePoolAutoConfigNetworkTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolAutoConfigNetworkTag)(nil)).Elem()
}

func (i GetClusterNodePoolAutoConfigNetworkTagArgs) ToGetClusterNodePoolAutoConfigNetworkTagOutput() GetClusterNodePoolAutoConfigNetworkTagOutput {
	return i.ToGetClusterNodePoolAutoConfigNetworkTagOutputWithContext(context.Background())
}

func (i GetClusterNodePoolAutoConfigNetworkTagArgs) ToGetClusterNodePoolAutoConfigNetworkTagOutputWithContext(ctx context.Context) GetClusterNodePoolAutoConfigNetworkTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolAutoConfigNetworkTagOutput)
}

// GetClusterNodePoolAutoConfigNetworkTagArrayInput is an input type that accepts GetClusterNodePoolAutoConfigNetworkTagArray and GetClusterNodePoolAutoConfigNetworkTagArrayOutput values.
// You can construct a concrete instance of `GetClusterNodePoolAutoConfigNetworkTagArrayInput` via:
//
//	GetClusterNodePoolAutoConfigNetworkTagArray{ GetClusterNodePoolAutoConfigNetworkTagArgs{...} }
type GetClusterNodePoolAutoConfigNetworkTagArrayInput interface {
	pulumi.Input

	ToGetClusterNodePoolAutoConfigNetworkTagArrayOutput() GetClusterNodePoolAutoConfigNetworkTagArrayOutput
	ToGetClusterNodePoolAutoConfigNetworkTagArrayOutputWithContext(context.Context) GetClusterNodePoolAutoConfigNetworkTagArrayOutput
}

type GetClusterNodePoolAutoConfigNetworkTagArray []GetClusterNodePoolAutoConfigNetworkTagInput

func (GetClusterNodePoolAutoConfigNetworkTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolAutoConfigNetworkTag)(nil)).Elem()
}

func (i GetClusterNodePoolAutoConfigNetworkTagArray) ToGetClusterNodePoolAutoConfigNetworkTagArrayOutput() GetClusterNodePoolAutoConfigNetworkTagArrayOutput {
	return i.ToGetClusterNodePoolAutoConfigNetworkTagArrayOutputWithContext(context.Background())
}

func (i GetClusterNodePoolAutoConfigNetworkTagArray) ToGetClusterNodePoolAutoConfigNetworkTagArrayOutputWithContext(ctx context.Context) GetClusterNodePoolAutoConfigNetworkTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolAutoConfigNetworkTagArrayOutput)
}

type GetClusterNodePoolAutoConfigNetworkTagOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolAutoConfigNetworkTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolAutoConfigNetworkTag)(nil)).Elem()
}

func (o GetClusterNodePoolAutoConfigNetworkTagOutput) ToGetClusterNodePoolAutoConfigNetworkTagOutput() GetClusterNodePoolAutoConfigNetworkTagOutput {
	return o
}

func (o GetClusterNodePoolAutoConfigNetworkTagOutput) ToGetClusterNodePoolAutoConfigNetworkTagOutputWithContext(ctx context.Context) GetClusterNodePoolAutoConfigNetworkTagOutput {
	return o
}

// List of network tags applied to auto-provisioned node pools.
func (o GetClusterNodePoolAutoConfigNetworkTagOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClusterNodePoolAutoConfigNetworkTag) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

type GetClusterNodePoolAutoConfigNetworkTagArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolAutoConfigNetworkTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolAutoConfigNetworkTag)(nil)).Elem()
}

func (o GetClusterNodePoolAutoConfigNetworkTagArrayOutput) ToGetClusterNodePoolAutoConfigNetworkTagArrayOutput() GetClusterNodePoolAutoConfigNetworkTagArrayOutput {
	return o
}

func (o GetClusterNodePoolAutoConfigNetworkTagArrayOutput) ToGetClusterNodePoolAutoConfigNetworkTagArrayOutputWithContext(ctx context.Context) GetClusterNodePoolAutoConfigNetworkTagArrayOutput {
	return o
}

func (o GetClusterNodePoolAutoConfigNetworkTagArrayOutput) Index(i pulumi.IntInput) GetClusterNodePoolAutoConfigNetworkTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNodePoolAutoConfigNetworkTag {
		return vs[0].([]GetClusterNodePoolAutoConfigNetworkTag)[vs[1].(int)]
	}).(GetClusterNodePoolAutoConfigNetworkTagOutput)
}

type GetClusterNodePoolAutoscaling struct {
	// Location policy specifies the algorithm used when scaling-up the node pool. "BALANCED" - Is a best effort policy that aims to balance the sizes of available zones. "ANY" - Instructs the cluster autoscaler to prioritize utilization of unused reservations, and reduces preemption risk for Spot VMs.
	LocationPolicy string `pulumi:"locationPolicy"`
	// Maximum number of nodes per zone in the node pool. Must be >= min_node_count. Cannot be used with total limits.
	MaxNodeCount int `pulumi:"maxNodeCount"`
	// Minimum number of nodes per zone in the node pool. Must be >=0 and <= max_node_count. Cannot be used with total limits.
	MinNodeCount int `pulumi:"minNodeCount"`
	// Maximum number of all nodes in the node pool. Must be >= total_min_node_count. Cannot be used with per zone limits.
	TotalMaxNodeCount int `pulumi:"totalMaxNodeCount"`
	// Minimum number of all nodes in the node pool. Must be >=0 and <= total_max_node_count. Cannot be used with per zone limits.
	TotalMinNodeCount int `pulumi:"totalMinNodeCount"`
}

// GetClusterNodePoolAutoscalingInput is an input type that accepts GetClusterNodePoolAutoscalingArgs and GetClusterNodePoolAutoscalingOutput values.
// You can construct a concrete instance of `GetClusterNodePoolAutoscalingInput` via:
//
//	GetClusterNodePoolAutoscalingArgs{...}
type GetClusterNodePoolAutoscalingInput interface {
	pulumi.Input

	ToGetClusterNodePoolAutoscalingOutput() GetClusterNodePoolAutoscalingOutput
	ToGetClusterNodePoolAutoscalingOutputWithContext(context.Context) GetClusterNodePoolAutoscalingOutput
}

type GetClusterNodePoolAutoscalingArgs struct {
	// Location policy specifies the algorithm used when scaling-up the node pool. "BALANCED" - Is a best effort policy that aims to balance the sizes of available zones. "ANY" - Instructs the cluster autoscaler to prioritize utilization of unused reservations, and reduces preemption risk for Spot VMs.
	LocationPolicy pulumi.StringInput `pulumi:"locationPolicy"`
	// Maximum number of nodes per zone in the node pool. Must be >= min_node_count. Cannot be used with total limits.
	MaxNodeCount pulumi.IntInput `pulumi:"maxNodeCount"`
	// Minimum number of nodes per zone in the node pool. Must be >=0 and <= max_node_count. Cannot be used with total limits.
	MinNodeCount pulumi.IntInput `pulumi:"minNodeCount"`
	// Maximum number of all nodes in the node pool. Must be >= total_min_node_count. Cannot be used with per zone limits.
	TotalMaxNodeCount pulumi.IntInput `pulumi:"totalMaxNodeCount"`
	// Minimum number of all nodes in the node pool. Must be >=0 and <= total_max_node_count. Cannot be used with per zone limits.
	TotalMinNodeCount pulumi.IntInput `pulumi:"totalMinNodeCount"`
}

func (GetClusterNodePoolAutoscalingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolAutoscaling)(nil)).Elem()
}

func (i GetClusterNodePoolAutoscalingArgs) ToGetClusterNodePoolAutoscalingOutput() GetClusterNodePoolAutoscalingOutput {
	return i.ToGetClusterNodePoolAutoscalingOutputWithContext(context.Background())
}

func (i GetClusterNodePoolAutoscalingArgs) ToGetClusterNodePoolAutoscalingOutputWithContext(ctx context.Context) GetClusterNodePoolAutoscalingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolAutoscalingOutput)
}

// GetClusterNodePoolAutoscalingArrayInput is an input type that accepts GetClusterNodePoolAutoscalingArray and GetClusterNodePoolAutoscalingArrayOutput values.
// You can construct a concrete instance of `GetClusterNodePoolAutoscalingArrayInput` via:
//
//	GetClusterNodePoolAutoscalingArray{ GetClusterNodePoolAutoscalingArgs{...} }
type GetClusterNodePoolAutoscalingArrayInput interface {
	pulumi.Input

	ToGetClusterNodePoolAutoscalingArrayOutput() GetClusterNodePoolAutoscalingArrayOutput
	ToGetClusterNodePoolAutoscalingArrayOutputWithContext(context.Context) GetClusterNodePoolAutoscalingArrayOutput
}

type GetClusterNodePoolAutoscalingArray []GetClusterNodePoolAutoscalingInput

func (GetClusterNodePoolAutoscalingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolAutoscaling)(nil)).Elem()
}

func (i GetClusterNodePoolAutoscalingArray) ToGetClusterNodePoolAutoscalingArrayOutput() GetClusterNodePoolAutoscalingArrayOutput {
	return i.ToGetClusterNodePoolAutoscalingArrayOutputWithContext(context.Background())
}

func (i GetClusterNodePoolAutoscalingArray) ToGetClusterNodePoolAutoscalingArrayOutputWithContext(ctx context.Context) GetClusterNodePoolAutoscalingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolAutoscalingArrayOutput)
}

type GetClusterNodePoolAutoscalingOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolAutoscalingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolAutoscaling)(nil)).Elem()
}

func (o GetClusterNodePoolAutoscalingOutput) ToGetClusterNodePoolAutoscalingOutput() GetClusterNodePoolAutoscalingOutput {
	return o
}

func (o GetClusterNodePoolAutoscalingOutput) ToGetClusterNodePoolAutoscalingOutputWithContext(ctx context.Context) GetClusterNodePoolAutoscalingOutput {
	return o
}

// Location policy specifies the algorithm used when scaling-up the node pool. "BALANCED" - Is a best effort policy that aims to balance the sizes of available zones. "ANY" - Instructs the cluster autoscaler to prioritize utilization of unused reservations, and reduces preemption risk for Spot VMs.
func (o GetClusterNodePoolAutoscalingOutput) LocationPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodePoolAutoscaling) string { return v.LocationPolicy }).(pulumi.StringOutput)
}

// Maximum number of nodes per zone in the node pool. Must be >= min_node_count. Cannot be used with total limits.
func (o GetClusterNodePoolAutoscalingOutput) MaxNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterNodePoolAutoscaling) int { return v.MaxNodeCount }).(pulumi.IntOutput)
}

// Minimum number of nodes per zone in the node pool. Must be >=0 and <= max_node_count. Cannot be used with total limits.
func (o GetClusterNodePoolAutoscalingOutput) MinNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterNodePoolAutoscaling) int { return v.MinNodeCount }).(pulumi.IntOutput)
}

// Maximum number of all nodes in the node pool. Must be >= total_min_node_count. Cannot be used with per zone limits.
func (o GetClusterNodePoolAutoscalingOutput) TotalMaxNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterNodePoolAutoscaling) int { return v.TotalMaxNodeCount }).(pulumi.IntOutput)
}

// Minimum number of all nodes in the node pool. Must be >=0 and <= total_max_node_count. Cannot be used with per zone limits.
func (o GetClusterNodePoolAutoscalingOutput) TotalMinNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterNodePoolAutoscaling) int { return v.TotalMinNodeCount }).(pulumi.IntOutput)
}

type GetClusterNodePoolAutoscalingArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolAutoscalingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolAutoscaling)(nil)).Elem()
}

func (o GetClusterNodePoolAutoscalingArrayOutput) ToGetClusterNodePoolAutoscalingArrayOutput() GetClusterNodePoolAutoscalingArrayOutput {
	return o
}

func (o GetClusterNodePoolAutoscalingArrayOutput) ToGetClusterNodePoolAutoscalingArrayOutputWithContext(ctx context.Context) GetClusterNodePoolAutoscalingArrayOutput {
	return o
}

func (o GetClusterNodePoolAutoscalingArrayOutput) Index(i pulumi.IntInput) GetClusterNodePoolAutoscalingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNodePoolAutoscaling {
		return vs[0].([]GetClusterNodePoolAutoscaling)[vs[1].(int)]
	}).(GetClusterNodePoolAutoscalingOutput)
}

type GetClusterNodePoolDefault struct {
	// Subset of NodeConfig message that has defaults.
	NodeConfigDefaults []GetClusterNodePoolDefaultNodeConfigDefault `pulumi:"nodeConfigDefaults"`
}

// GetClusterNodePoolDefaultInput is an input type that accepts GetClusterNodePoolDefaultArgs and GetClusterNodePoolDefaultOutput values.
// You can construct a concrete instance of `GetClusterNodePoolDefaultInput` via:
//
//	GetClusterNodePoolDefaultArgs{...}
type GetClusterNodePoolDefaultInput interface {
	pulumi.Input

	ToGetClusterNodePoolDefaultOutput() GetClusterNodePoolDefaultOutput
	ToGetClusterNodePoolDefaultOutputWithContext(context.Context) GetClusterNodePoolDefaultOutput
}

type GetClusterNodePoolDefaultArgs struct {
	// Subset of NodeConfig message that has defaults.
	NodeConfigDefaults GetClusterNodePoolDefaultNodeConfigDefaultArrayInput `pulumi:"nodeConfigDefaults"`
}

func (GetClusterNodePoolDefaultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolDefault)(nil)).Elem()
}

func (i GetClusterNodePoolDefaultArgs) ToGetClusterNodePoolDefaultOutput() GetClusterNodePoolDefaultOutput {
	return i.ToGetClusterNodePoolDefaultOutputWithContext(context.Background())
}

func (i GetClusterNodePoolDefaultArgs) ToGetClusterNodePoolDefaultOutputWithContext(ctx context.Context) GetClusterNodePoolDefaultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolDefaultOutput)
}

// GetClusterNodePoolDefaultArrayInput is an input type that accepts GetClusterNodePoolDefaultArray and GetClusterNodePoolDefaultArrayOutput values.
// You can construct a concrete instance of `GetClusterNodePoolDefaultArrayInput` via:
//
//	GetClusterNodePoolDefaultArray{ GetClusterNodePoolDefaultArgs{...} }
type GetClusterNodePoolDefaultArrayInput interface {
	pulumi.Input

	ToGetClusterNodePoolDefaultArrayOutput() GetClusterNodePoolDefaultArrayOutput
	ToGetClusterNodePoolDefaultArrayOutputWithContext(context.Context) GetClusterNodePoolDefaultArrayOutput
}

type GetClusterNodePoolDefaultArray []GetClusterNodePoolDefaultInput

func (GetClusterNodePoolDefaultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolDefault)(nil)).Elem()
}

func (i GetClusterNodePoolDefaultArray) ToGetClusterNodePoolDefaultArrayOutput() GetClusterNodePoolDefaultArrayOutput {
	return i.ToGetClusterNodePoolDefaultArrayOutputWithContext(context.Background())
}

func (i GetClusterNodePoolDefaultArray) ToGetClusterNodePoolDefaultArrayOutputWithContext(ctx context.Context) GetClusterNodePoolDefaultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolDefaultArrayOutput)
}

type GetClusterNodePoolDefaultOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolDefaultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolDefault)(nil)).Elem()
}

func (o GetClusterNodePoolDefaultOutput) ToGetClusterNodePoolDefaultOutput() GetClusterNodePoolDefaultOutput {
	return o
}

func (o GetClusterNodePoolDefaultOutput) ToGetClusterNodePoolDefaultOutputWithContext(ctx context.Context) GetClusterNodePoolDefaultOutput {
	return o
}

// Subset of NodeConfig message that has defaults.
func (o GetClusterNodePoolDefaultOutput) NodeConfigDefaults() GetClusterNodePoolDefaultNodeConfigDefaultArrayOutput {
	return o.ApplyT(func(v GetClusterNodePoolDefault) []GetClusterNodePoolDefaultNodeConfigDefault {
		return v.NodeConfigDefaults
	}).(GetClusterNodePoolDefaultNodeConfigDefaultArrayOutput)
}

type GetClusterNodePoolDefaultArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolDefaultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolDefault)(nil)).Elem()
}

func (o GetClusterNodePoolDefaultArrayOutput) ToGetClusterNodePoolDefaultArrayOutput() GetClusterNodePoolDefaultArrayOutput {
	return o
}

func (o GetClusterNodePoolDefaultArrayOutput) ToGetClusterNodePoolDefaultArrayOutputWithContext(ctx context.Context) GetClusterNodePoolDefaultArrayOutput {
	return o
}

func (o GetClusterNodePoolDefaultArrayOutput) Index(i pulumi.IntInput) GetClusterNodePoolDefaultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNodePoolDefault {
		return vs[0].([]GetClusterNodePoolDefault)[vs[1].(int)]
	}).(GetClusterNodePoolDefaultOutput)
}

type GetClusterNodePoolDefaultNodeConfigDefault struct {
	// GCFS configuration for this node.
	GcfsConfigs []GetClusterNodePoolDefaultNodeConfigDefaultGcfsConfig `pulumi:"gcfsConfigs"`
	// Type of logging agent that is used as the default value for node pools in the cluster. Valid values include DEFAULT and MAX_THROUGHPUT.
	LoggingVariant string `pulumi:"loggingVariant"`
}

// GetClusterNodePoolDefaultNodeConfigDefaultInput is an input type that accepts GetClusterNodePoolDefaultNodeConfigDefaultArgs and GetClusterNodePoolDefaultNodeConfigDefaultOutput values.
// You can construct a concrete instance of `GetClusterNodePoolDefaultNodeConfigDefaultInput` via:
//
//	GetClusterNodePoolDefaultNodeConfigDefaultArgs{...}
type GetClusterNodePoolDefaultNodeConfigDefaultInput interface {
	pulumi.Input

	ToGetClusterNodePoolDefaultNodeConfigDefaultOutput() GetClusterNodePoolDefaultNodeConfigDefaultOutput
	ToGetClusterNodePoolDefaultNodeConfigDefaultOutputWithContext(context.Context) GetClusterNodePoolDefaultNodeConfigDefaultOutput
}

type GetClusterNodePoolDefaultNodeConfigDefaultArgs struct {
	// GCFS configuration for this node.
	GcfsConfigs GetClusterNodePoolDefaultNodeConfigDefaultGcfsConfigArrayInput `pulumi:"gcfsConfigs"`
	// Type of logging agent that is used as the default value for node pools in the cluster. Valid values include DEFAULT and MAX_THROUGHPUT.
	LoggingVariant pulumi.StringInput `pulumi:"loggingVariant"`
}

func (GetClusterNodePoolDefaultNodeConfigDefaultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolDefaultNodeConfigDefault)(nil)).Elem()
}

func (i GetClusterNodePoolDefaultNodeConfigDefaultArgs) ToGetClusterNodePoolDefaultNodeConfigDefaultOutput() GetClusterNodePoolDefaultNodeConfigDefaultOutput {
	return i.ToGetClusterNodePoolDefaultNodeConfigDefaultOutputWithContext(context.Background())
}

func (i GetClusterNodePoolDefaultNodeConfigDefaultArgs) ToGetClusterNodePoolDefaultNodeConfigDefaultOutputWithContext(ctx context.Context) GetClusterNodePoolDefaultNodeConfigDefaultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolDefaultNodeConfigDefaultOutput)
}

// GetClusterNodePoolDefaultNodeConfigDefaultArrayInput is an input type that accepts GetClusterNodePoolDefaultNodeConfigDefaultArray and GetClusterNodePoolDefaultNodeConfigDefaultArrayOutput values.
// You can construct a concrete instance of `GetClusterNodePoolDefaultNodeConfigDefaultArrayInput` via:
//
//	GetClusterNodePoolDefaultNodeConfigDefaultArray{ GetClusterNodePoolDefaultNodeConfigDefaultArgs{...} }
type GetClusterNodePoolDefaultNodeConfigDefaultArrayInput interface {
	pulumi.Input

	ToGetClusterNodePoolDefaultNodeConfigDefaultArrayOutput() GetClusterNodePoolDefaultNodeConfigDefaultArrayOutput
	ToGetClusterNodePoolDefaultNodeConfigDefaultArrayOutputWithContext(context.Context) GetClusterNodePoolDefaultNodeConfigDefaultArrayOutput
}

type GetClusterNodePoolDefaultNodeConfigDefaultArray []GetClusterNodePoolDefaultNodeConfigDefaultInput

func (GetClusterNodePoolDefaultNodeConfigDefaultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolDefaultNodeConfigDefault)(nil)).Elem()
}

func (i GetClusterNodePoolDefaultNodeConfigDefaultArray) ToGetClusterNodePoolDefaultNodeConfigDefaultArrayOutput() GetClusterNodePoolDefaultNodeConfigDefaultArrayOutput {
	return i.ToGetClusterNodePoolDefaultNodeConfigDefaultArrayOutputWithContext(context.Background())
}

func (i GetClusterNodePoolDefaultNodeConfigDefaultArray) ToGetClusterNodePoolDefaultNodeConfigDefaultArrayOutputWithContext(ctx context.Context) GetClusterNodePoolDefaultNodeConfigDefaultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolDefaultNodeConfigDefaultArrayOutput)
}

type GetClusterNodePoolDefaultNodeConfigDefaultOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolDefaultNodeConfigDefaultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolDefaultNodeConfigDefault)(nil)).Elem()
}

func (o GetClusterNodePoolDefaultNodeConfigDefaultOutput) ToGetClusterNodePoolDefaultNodeConfigDefaultOutput() GetClusterNodePoolDefaultNodeConfigDefaultOutput {
	return o
}

func (o GetClusterNodePoolDefaultNodeConfigDefaultOutput) ToGetClusterNodePoolDefaultNodeConfigDefaultOutputWithContext(ctx context.Context) GetClusterNodePoolDefaultNodeConfigDefaultOutput {
	return o
}

// GCFS configuration for this node.
func (o GetClusterNodePoolDefaultNodeConfigDefaultOutput) GcfsConfigs() GetClusterNodePoolDefaultNodeConfigDefaultGcfsConfigArrayOutput {
	return o.ApplyT(func(v GetClusterNodePoolDefaultNodeConfigDefault) []GetClusterNodePoolDefaultNodeConfigDefaultGcfsConfig {
		return v.GcfsConfigs
	}).(GetClusterNodePoolDefaultNodeConfigDefaultGcfsConfigArrayOutput)
}

// Type of logging agent that is used as the default value for node pools in the cluster. Valid values include DEFAULT and MAX_THROUGHPUT.
func (o GetClusterNodePoolDefaultNodeConfigDefaultOutput) LoggingVariant() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodePoolDefaultNodeConfigDefault) string { return v.LoggingVariant }).(pulumi.StringOutput)
}

type GetClusterNodePoolDefaultNodeConfigDefaultArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolDefaultNodeConfigDefaultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolDefaultNodeConfigDefault)(nil)).Elem()
}

func (o GetClusterNodePoolDefaultNodeConfigDefaultArrayOutput) ToGetClusterNodePoolDefaultNodeConfigDefaultArrayOutput() GetClusterNodePoolDefaultNodeConfigDefaultArrayOutput {
	return o
}

func (o GetClusterNodePoolDefaultNodeConfigDefaultArrayOutput) ToGetClusterNodePoolDefaultNodeConfigDefaultArrayOutputWithContext(ctx context.Context) GetClusterNodePoolDefaultNodeConfigDefaultArrayOutput {
	return o
}

func (o GetClusterNodePoolDefaultNodeConfigDefaultArrayOutput) Index(i pulumi.IntInput) GetClusterNodePoolDefaultNodeConfigDefaultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNodePoolDefaultNodeConfigDefault {
		return vs[0].([]GetClusterNodePoolDefaultNodeConfigDefault)[vs[1].(int)]
	}).(GetClusterNodePoolDefaultNodeConfigDefaultOutput)
}

type GetClusterNodePoolDefaultNodeConfigDefaultGcfsConfig struct {
	// Whether or not GCFS is enabled
	Enabled bool `pulumi:"enabled"`
}

// GetClusterNodePoolDefaultNodeConfigDefaultGcfsConfigInput is an input type that accepts GetClusterNodePoolDefaultNodeConfigDefaultGcfsConfigArgs and GetClusterNodePoolDefaultNodeConfigDefaultGcfsConfigOutput values.
// You can construct a concrete instance of `GetClusterNodePoolDefaultNodeConfigDefaultGcfsConfigInput` via:
//
//	GetClusterNodePoolDefaultNodeConfigDefaultGcfsConfigArgs{...}
type GetClusterNodePoolDefaultNodeConfigDefaultGcfsConfigInput interface {
	pulumi.Input

	ToGetClusterNodePoolDefaultNodeConfigDefaultGcfsConfigOutput() GetClusterNodePoolDefaultNodeConfigDefaultGcfsConfigOutput
	ToGetClusterNodePoolDefaultNodeConfigDefaultGcfsConfigOutputWithContext(context.Context) GetClusterNodePoolDefaultNodeConfigDefaultGcfsConfigOutput
}

type GetClusterNodePoolDefaultNodeConfigDefaultGcfsConfigArgs struct {
	// Whether or not GCFS is enabled
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (GetClusterNodePoolDefaultNodeConfigDefaultGcfsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolDefaultNodeConfigDefaultGcfsConfig)(nil)).Elem()
}

func (i GetClusterNodePoolDefaultNodeConfigDefaultGcfsConfigArgs) ToGetClusterNodePoolDefaultNodeConfigDefaultGcfsConfigOutput() GetClusterNodePoolDefaultNodeConfigDefaultGcfsConfigOutput {
	return i.ToGetClusterNodePoolDefaultNodeConfigDefaultGcfsConfigOutputWithContext(context.Background())
}

func (i GetClusterNodePoolDefaultNodeConfigDefaultGcfsConfigArgs) ToGetClusterNodePoolDefaultNodeConfigDefaultGcfsConfigOutputWithContext(ctx context.Context) GetClusterNodePoolDefaultNodeConfigDefaultGcfsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolDefaultNodeConfigDefaultGcfsConfigOutput)
}

// GetClusterNodePoolDefaultNodeConfigDefaultGcfsConfigArrayInput is an input type that accepts GetClusterNodePoolDefaultNodeConfigDefaultGcfsConfigArray and GetClusterNodePoolDefaultNodeConfigDefaultGcfsConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterNodePoolDefaultNodeConfigDefaultGcfsConfigArrayInput` via:
//
//	GetClusterNodePoolDefaultNodeConfigDefaultGcfsConfigArray{ GetClusterNodePoolDefaultNodeConfigDefaultGcfsConfigArgs{...} }
type GetClusterNodePoolDefaultNodeConfigDefaultGcfsConfigArrayInput interface {
	pulumi.Input

	ToGetClusterNodePoolDefaultNodeConfigDefaultGcfsConfigArrayOutput() GetClusterNodePoolDefaultNodeConfigDefaultGcfsConfigArrayOutput
	ToGetClusterNodePoolDefaultNodeConfigDefaultGcfsConfigArrayOutputWithContext(context.Context) GetClusterNodePoolDefaultNodeConfigDefaultGcfsConfigArrayOutput
}

type GetClusterNodePoolDefaultNodeConfigDefaultGcfsConfigArray []GetClusterNodePoolDefaultNodeConfigDefaultGcfsConfigInput

func (GetClusterNodePoolDefaultNodeConfigDefaultGcfsConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolDefaultNodeConfigDefaultGcfsConfig)(nil)).Elem()
}

func (i GetClusterNodePoolDefaultNodeConfigDefaultGcfsConfigArray) ToGetClusterNodePoolDefaultNodeConfigDefaultGcfsConfigArrayOutput() GetClusterNodePoolDefaultNodeConfigDefaultGcfsConfigArrayOutput {
	return i.ToGetClusterNodePoolDefaultNodeConfigDefaultGcfsConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterNodePoolDefaultNodeConfigDefaultGcfsConfigArray) ToGetClusterNodePoolDefaultNodeConfigDefaultGcfsConfigArrayOutputWithContext(ctx context.Context) GetClusterNodePoolDefaultNodeConfigDefaultGcfsConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolDefaultNodeConfigDefaultGcfsConfigArrayOutput)
}

type GetClusterNodePoolDefaultNodeConfigDefaultGcfsConfigOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolDefaultNodeConfigDefaultGcfsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolDefaultNodeConfigDefaultGcfsConfig)(nil)).Elem()
}

func (o GetClusterNodePoolDefaultNodeConfigDefaultGcfsConfigOutput) ToGetClusterNodePoolDefaultNodeConfigDefaultGcfsConfigOutput() GetClusterNodePoolDefaultNodeConfigDefaultGcfsConfigOutput {
	return o
}

func (o GetClusterNodePoolDefaultNodeConfigDefaultGcfsConfigOutput) ToGetClusterNodePoolDefaultNodeConfigDefaultGcfsConfigOutputWithContext(ctx context.Context) GetClusterNodePoolDefaultNodeConfigDefaultGcfsConfigOutput {
	return o
}

// Whether or not GCFS is enabled
func (o GetClusterNodePoolDefaultNodeConfigDefaultGcfsConfigOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterNodePoolDefaultNodeConfigDefaultGcfsConfig) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type GetClusterNodePoolDefaultNodeConfigDefaultGcfsConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolDefaultNodeConfigDefaultGcfsConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolDefaultNodeConfigDefaultGcfsConfig)(nil)).Elem()
}

func (o GetClusterNodePoolDefaultNodeConfigDefaultGcfsConfigArrayOutput) ToGetClusterNodePoolDefaultNodeConfigDefaultGcfsConfigArrayOutput() GetClusterNodePoolDefaultNodeConfigDefaultGcfsConfigArrayOutput {
	return o
}

func (o GetClusterNodePoolDefaultNodeConfigDefaultGcfsConfigArrayOutput) ToGetClusterNodePoolDefaultNodeConfigDefaultGcfsConfigArrayOutputWithContext(ctx context.Context) GetClusterNodePoolDefaultNodeConfigDefaultGcfsConfigArrayOutput {
	return o
}

func (o GetClusterNodePoolDefaultNodeConfigDefaultGcfsConfigArrayOutput) Index(i pulumi.IntInput) GetClusterNodePoolDefaultNodeConfigDefaultGcfsConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNodePoolDefaultNodeConfigDefaultGcfsConfig {
		return vs[0].([]GetClusterNodePoolDefaultNodeConfigDefaultGcfsConfig)[vs[1].(int)]
	}).(GetClusterNodePoolDefaultNodeConfigDefaultGcfsConfigOutput)
}

type GetClusterNodePoolManagement struct {
	// Whether the nodes will be automatically repaired. Enabled by default.
	AutoRepair bool `pulumi:"autoRepair"`
	// Whether the nodes will be automatically upgraded. Enabled by default.
	AutoUpgrade bool `pulumi:"autoUpgrade"`
}

// GetClusterNodePoolManagementInput is an input type that accepts GetClusterNodePoolManagementArgs and GetClusterNodePoolManagementOutput values.
// You can construct a concrete instance of `GetClusterNodePoolManagementInput` via:
//
//	GetClusterNodePoolManagementArgs{...}
type GetClusterNodePoolManagementInput interface {
	pulumi.Input

	ToGetClusterNodePoolManagementOutput() GetClusterNodePoolManagementOutput
	ToGetClusterNodePoolManagementOutputWithContext(context.Context) GetClusterNodePoolManagementOutput
}

type GetClusterNodePoolManagementArgs struct {
	// Whether the nodes will be automatically repaired. Enabled by default.
	AutoRepair pulumi.BoolInput `pulumi:"autoRepair"`
	// Whether the nodes will be automatically upgraded. Enabled by default.
	AutoUpgrade pulumi.BoolInput `pulumi:"autoUpgrade"`
}

func (GetClusterNodePoolManagementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolManagement)(nil)).Elem()
}

func (i GetClusterNodePoolManagementArgs) ToGetClusterNodePoolManagementOutput() GetClusterNodePoolManagementOutput {
	return i.ToGetClusterNodePoolManagementOutputWithContext(context.Background())
}

func (i GetClusterNodePoolManagementArgs) ToGetClusterNodePoolManagementOutputWithContext(ctx context.Context) GetClusterNodePoolManagementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolManagementOutput)
}

// GetClusterNodePoolManagementArrayInput is an input type that accepts GetClusterNodePoolManagementArray and GetClusterNodePoolManagementArrayOutput values.
// You can construct a concrete instance of `GetClusterNodePoolManagementArrayInput` via:
//
//	GetClusterNodePoolManagementArray{ GetClusterNodePoolManagementArgs{...} }
type GetClusterNodePoolManagementArrayInput interface {
	pulumi.Input

	ToGetClusterNodePoolManagementArrayOutput() GetClusterNodePoolManagementArrayOutput
	ToGetClusterNodePoolManagementArrayOutputWithContext(context.Context) GetClusterNodePoolManagementArrayOutput
}

type GetClusterNodePoolManagementArray []GetClusterNodePoolManagementInput

func (GetClusterNodePoolManagementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolManagement)(nil)).Elem()
}

func (i GetClusterNodePoolManagementArray) ToGetClusterNodePoolManagementArrayOutput() GetClusterNodePoolManagementArrayOutput {
	return i.ToGetClusterNodePoolManagementArrayOutputWithContext(context.Background())
}

func (i GetClusterNodePoolManagementArray) ToGetClusterNodePoolManagementArrayOutputWithContext(ctx context.Context) GetClusterNodePoolManagementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolManagementArrayOutput)
}

type GetClusterNodePoolManagementOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolManagementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolManagement)(nil)).Elem()
}

func (o GetClusterNodePoolManagementOutput) ToGetClusterNodePoolManagementOutput() GetClusterNodePoolManagementOutput {
	return o
}

func (o GetClusterNodePoolManagementOutput) ToGetClusterNodePoolManagementOutputWithContext(ctx context.Context) GetClusterNodePoolManagementOutput {
	return o
}

// Whether the nodes will be automatically repaired. Enabled by default.
func (o GetClusterNodePoolManagementOutput) AutoRepair() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterNodePoolManagement) bool { return v.AutoRepair }).(pulumi.BoolOutput)
}

// Whether the nodes will be automatically upgraded. Enabled by default.
func (o GetClusterNodePoolManagementOutput) AutoUpgrade() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterNodePoolManagement) bool { return v.AutoUpgrade }).(pulumi.BoolOutput)
}

type GetClusterNodePoolManagementArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolManagementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolManagement)(nil)).Elem()
}

func (o GetClusterNodePoolManagementArrayOutput) ToGetClusterNodePoolManagementArrayOutput() GetClusterNodePoolManagementArrayOutput {
	return o
}

func (o GetClusterNodePoolManagementArrayOutput) ToGetClusterNodePoolManagementArrayOutputWithContext(ctx context.Context) GetClusterNodePoolManagementArrayOutput {
	return o
}

func (o GetClusterNodePoolManagementArrayOutput) Index(i pulumi.IntInput) GetClusterNodePoolManagementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNodePoolManagement {
		return vs[0].([]GetClusterNodePoolManagement)[vs[1].(int)]
	}).(GetClusterNodePoolManagementOutput)
}

type GetClusterNodePoolNetworkConfig struct {
	// We specify the additional node networks for this node pool using this list. Each node network corresponds to an additional interface
	AdditionalNodeNetworkConfigs []GetClusterNodePoolNetworkConfigAdditionalNodeNetworkConfig `pulumi:"additionalNodeNetworkConfigs"`
	// We specify the additional pod networks for this node pool using this list. Each pod network corresponds to an additional alias IP range for the node
	AdditionalPodNetworkConfigs []GetClusterNodePoolNetworkConfigAdditionalPodNetworkConfig `pulumi:"additionalPodNetworkConfigs"`
	// Whether to create a new range for pod IPs in this node pool. Defaults are provided for podRange and podIpv4CidrBlock if they are not specified.
	CreatePodRange bool `pulumi:"createPodRange"`
	// Whether nodes have internal IP addresses only.
	EnablePrivateNodes bool `pulumi:"enablePrivateNodes"`
	// Network bandwidth tier configuration.
	NetworkPerformanceConfigs []GetClusterNodePoolNetworkConfigNetworkPerformanceConfig `pulumi:"networkPerformanceConfigs"`
	// Configuration for node-pool level pod cidr overprovision. If not set, the cluster level setting will be inherited
	PodCidrOverprovisionConfigs []GetClusterNodePoolNetworkConfigPodCidrOverprovisionConfig `pulumi:"podCidrOverprovisionConfigs"`
	// The IP address range for pod IPs in this node pool. Only applicable if createPodRange is true. Set to blank to have a range chosen with the default size. Set to /netmask (e.g. /14) to have a range chosen with a specific netmask. Set to a CIDR notation (e.g. 10.96.0.0/14) to pick a specific range to use.
	PodIpv4CidrBlock string `pulumi:"podIpv4CidrBlock"`
	// The ID of the secondary range for pod IPs. If createPodRange is true, this ID is used for the new range. If createPodRange is false, uses an existing secondary range with this ID.
	PodRange string `pulumi:"podRange"`
}

// GetClusterNodePoolNetworkConfigInput is an input type that accepts GetClusterNodePoolNetworkConfigArgs and GetClusterNodePoolNetworkConfigOutput values.
// You can construct a concrete instance of `GetClusterNodePoolNetworkConfigInput` via:
//
//	GetClusterNodePoolNetworkConfigArgs{...}
type GetClusterNodePoolNetworkConfigInput interface {
	pulumi.Input

	ToGetClusterNodePoolNetworkConfigOutput() GetClusterNodePoolNetworkConfigOutput
	ToGetClusterNodePoolNetworkConfigOutputWithContext(context.Context) GetClusterNodePoolNetworkConfigOutput
}

type GetClusterNodePoolNetworkConfigArgs struct {
	// We specify the additional node networks for this node pool using this list. Each node network corresponds to an additional interface
	AdditionalNodeNetworkConfigs GetClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArrayInput `pulumi:"additionalNodeNetworkConfigs"`
	// We specify the additional pod networks for this node pool using this list. Each pod network corresponds to an additional alias IP range for the node
	AdditionalPodNetworkConfigs GetClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArrayInput `pulumi:"additionalPodNetworkConfigs"`
	// Whether to create a new range for pod IPs in this node pool. Defaults are provided for podRange and podIpv4CidrBlock if they are not specified.
	CreatePodRange pulumi.BoolInput `pulumi:"createPodRange"`
	// Whether nodes have internal IP addresses only.
	EnablePrivateNodes pulumi.BoolInput `pulumi:"enablePrivateNodes"`
	// Network bandwidth tier configuration.
	NetworkPerformanceConfigs GetClusterNodePoolNetworkConfigNetworkPerformanceConfigArrayInput `pulumi:"networkPerformanceConfigs"`
	// Configuration for node-pool level pod cidr overprovision. If not set, the cluster level setting will be inherited
	PodCidrOverprovisionConfigs GetClusterNodePoolNetworkConfigPodCidrOverprovisionConfigArrayInput `pulumi:"podCidrOverprovisionConfigs"`
	// The IP address range for pod IPs in this node pool. Only applicable if createPodRange is true. Set to blank to have a range chosen with the default size. Set to /netmask (e.g. /14) to have a range chosen with a specific netmask. Set to a CIDR notation (e.g. 10.96.0.0/14) to pick a specific range to use.
	PodIpv4CidrBlock pulumi.StringInput `pulumi:"podIpv4CidrBlock"`
	// The ID of the secondary range for pod IPs. If createPodRange is true, this ID is used for the new range. If createPodRange is false, uses an existing secondary range with this ID.
	PodRange pulumi.StringInput `pulumi:"podRange"`
}

func (GetClusterNodePoolNetworkConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolNetworkConfig)(nil)).Elem()
}

func (i GetClusterNodePoolNetworkConfigArgs) ToGetClusterNodePoolNetworkConfigOutput() GetClusterNodePoolNetworkConfigOutput {
	return i.ToGetClusterNodePoolNetworkConfigOutputWithContext(context.Background())
}

func (i GetClusterNodePoolNetworkConfigArgs) ToGetClusterNodePoolNetworkConfigOutputWithContext(ctx context.Context) GetClusterNodePoolNetworkConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolNetworkConfigOutput)
}

// GetClusterNodePoolNetworkConfigArrayInput is an input type that accepts GetClusterNodePoolNetworkConfigArray and GetClusterNodePoolNetworkConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterNodePoolNetworkConfigArrayInput` via:
//
//	GetClusterNodePoolNetworkConfigArray{ GetClusterNodePoolNetworkConfigArgs{...} }
type GetClusterNodePoolNetworkConfigArrayInput interface {
	pulumi.Input

	ToGetClusterNodePoolNetworkConfigArrayOutput() GetClusterNodePoolNetworkConfigArrayOutput
	ToGetClusterNodePoolNetworkConfigArrayOutputWithContext(context.Context) GetClusterNodePoolNetworkConfigArrayOutput
}

type GetClusterNodePoolNetworkConfigArray []GetClusterNodePoolNetworkConfigInput

func (GetClusterNodePoolNetworkConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolNetworkConfig)(nil)).Elem()
}

func (i GetClusterNodePoolNetworkConfigArray) ToGetClusterNodePoolNetworkConfigArrayOutput() GetClusterNodePoolNetworkConfigArrayOutput {
	return i.ToGetClusterNodePoolNetworkConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterNodePoolNetworkConfigArray) ToGetClusterNodePoolNetworkConfigArrayOutputWithContext(ctx context.Context) GetClusterNodePoolNetworkConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolNetworkConfigArrayOutput)
}

type GetClusterNodePoolNetworkConfigOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolNetworkConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolNetworkConfig)(nil)).Elem()
}

func (o GetClusterNodePoolNetworkConfigOutput) ToGetClusterNodePoolNetworkConfigOutput() GetClusterNodePoolNetworkConfigOutput {
	return o
}

func (o GetClusterNodePoolNetworkConfigOutput) ToGetClusterNodePoolNetworkConfigOutputWithContext(ctx context.Context) GetClusterNodePoolNetworkConfigOutput {
	return o
}

// We specify the additional node networks for this node pool using this list. Each node network corresponds to an additional interface
func (o GetClusterNodePoolNetworkConfigOutput) AdditionalNodeNetworkConfigs() GetClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArrayOutput {
	return o.ApplyT(func(v GetClusterNodePoolNetworkConfig) []GetClusterNodePoolNetworkConfigAdditionalNodeNetworkConfig {
		return v.AdditionalNodeNetworkConfigs
	}).(GetClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArrayOutput)
}

// We specify the additional pod networks for this node pool using this list. Each pod network corresponds to an additional alias IP range for the node
func (o GetClusterNodePoolNetworkConfigOutput) AdditionalPodNetworkConfigs() GetClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArrayOutput {
	return o.ApplyT(func(v GetClusterNodePoolNetworkConfig) []GetClusterNodePoolNetworkConfigAdditionalPodNetworkConfig {
		return v.AdditionalPodNetworkConfigs
	}).(GetClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArrayOutput)
}

// Whether to create a new range for pod IPs in this node pool. Defaults are provided for podRange and podIpv4CidrBlock if they are not specified.
func (o GetClusterNodePoolNetworkConfigOutput) CreatePodRange() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterNodePoolNetworkConfig) bool { return v.CreatePodRange }).(pulumi.BoolOutput)
}

// Whether nodes have internal IP addresses only.
func (o GetClusterNodePoolNetworkConfigOutput) EnablePrivateNodes() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterNodePoolNetworkConfig) bool { return v.EnablePrivateNodes }).(pulumi.BoolOutput)
}

// Network bandwidth tier configuration.
func (o GetClusterNodePoolNetworkConfigOutput) NetworkPerformanceConfigs() GetClusterNodePoolNetworkConfigNetworkPerformanceConfigArrayOutput {
	return o.ApplyT(func(v GetClusterNodePoolNetworkConfig) []GetClusterNodePoolNetworkConfigNetworkPerformanceConfig {
		return v.NetworkPerformanceConfigs
	}).(GetClusterNodePoolNetworkConfigNetworkPerformanceConfigArrayOutput)
}

// Configuration for node-pool level pod cidr overprovision. If not set, the cluster level setting will be inherited
func (o GetClusterNodePoolNetworkConfigOutput) PodCidrOverprovisionConfigs() GetClusterNodePoolNetworkConfigPodCidrOverprovisionConfigArrayOutput {
	return o.ApplyT(func(v GetClusterNodePoolNetworkConfig) []GetClusterNodePoolNetworkConfigPodCidrOverprovisionConfig {
		return v.PodCidrOverprovisionConfigs
	}).(GetClusterNodePoolNetworkConfigPodCidrOverprovisionConfigArrayOutput)
}

// The IP address range for pod IPs in this node pool. Only applicable if createPodRange is true. Set to blank to have a range chosen with the default size. Set to /netmask (e.g. /14) to have a range chosen with a specific netmask. Set to a CIDR notation (e.g. 10.96.0.0/14) to pick a specific range to use.
func (o GetClusterNodePoolNetworkConfigOutput) PodIpv4CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodePoolNetworkConfig) string { return v.PodIpv4CidrBlock }).(pulumi.StringOutput)
}

// The ID of the secondary range for pod IPs. If createPodRange is true, this ID is used for the new range. If createPodRange is false, uses an existing secondary range with this ID.
func (o GetClusterNodePoolNetworkConfigOutput) PodRange() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodePoolNetworkConfig) string { return v.PodRange }).(pulumi.StringOutput)
}

type GetClusterNodePoolNetworkConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolNetworkConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolNetworkConfig)(nil)).Elem()
}

func (o GetClusterNodePoolNetworkConfigArrayOutput) ToGetClusterNodePoolNetworkConfigArrayOutput() GetClusterNodePoolNetworkConfigArrayOutput {
	return o
}

func (o GetClusterNodePoolNetworkConfigArrayOutput) ToGetClusterNodePoolNetworkConfigArrayOutputWithContext(ctx context.Context) GetClusterNodePoolNetworkConfigArrayOutput {
	return o
}

func (o GetClusterNodePoolNetworkConfigArrayOutput) Index(i pulumi.IntInput) GetClusterNodePoolNetworkConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNodePoolNetworkConfig {
		return vs[0].([]GetClusterNodePoolNetworkConfig)[vs[1].(int)]
	}).(GetClusterNodePoolNetworkConfigOutput)
}

type GetClusterNodePoolNetworkConfigAdditionalNodeNetworkConfig struct {
	// Name of the VPC where the additional interface belongs.
	Network string `pulumi:"network"`
	// Name of the subnetwork where the additional interface belongs.
	Subnetwork string `pulumi:"subnetwork"`
}

// GetClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigInput is an input type that accepts GetClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArgs and GetClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigOutput values.
// You can construct a concrete instance of `GetClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigInput` via:
//
//	GetClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArgs{...}
type GetClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigInput interface {
	pulumi.Input

	ToGetClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigOutput() GetClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigOutput
	ToGetClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigOutputWithContext(context.Context) GetClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigOutput
}

type GetClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArgs struct {
	// Name of the VPC where the additional interface belongs.
	Network pulumi.StringInput `pulumi:"network"`
	// Name of the subnetwork where the additional interface belongs.
	Subnetwork pulumi.StringInput `pulumi:"subnetwork"`
}

func (GetClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolNetworkConfigAdditionalNodeNetworkConfig)(nil)).Elem()
}

func (i GetClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArgs) ToGetClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigOutput() GetClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigOutput {
	return i.ToGetClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigOutputWithContext(context.Background())
}

func (i GetClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArgs) ToGetClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigOutputWithContext(ctx context.Context) GetClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigOutput)
}

// GetClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArrayInput is an input type that accepts GetClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArray and GetClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArrayInput` via:
//
//	GetClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArray{ GetClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArgs{...} }
type GetClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArrayInput interface {
	pulumi.Input

	ToGetClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArrayOutput() GetClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArrayOutput
	ToGetClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArrayOutputWithContext(context.Context) GetClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArrayOutput
}

type GetClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArray []GetClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigInput

func (GetClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolNetworkConfigAdditionalNodeNetworkConfig)(nil)).Elem()
}

func (i GetClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArray) ToGetClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArrayOutput() GetClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArrayOutput {
	return i.ToGetClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArray) ToGetClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArrayOutputWithContext(ctx context.Context) GetClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArrayOutput)
}

type GetClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolNetworkConfigAdditionalNodeNetworkConfig)(nil)).Elem()
}

func (o GetClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigOutput) ToGetClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigOutput() GetClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigOutput {
	return o
}

func (o GetClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigOutput) ToGetClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigOutputWithContext(ctx context.Context) GetClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigOutput {
	return o
}

// Name of the VPC where the additional interface belongs.
func (o GetClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigOutput) Network() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodePoolNetworkConfigAdditionalNodeNetworkConfig) string { return v.Network }).(pulumi.StringOutput)
}

// Name of the subnetwork where the additional interface belongs.
func (o GetClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigOutput) Subnetwork() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodePoolNetworkConfigAdditionalNodeNetworkConfig) string { return v.Subnetwork }).(pulumi.StringOutput)
}

type GetClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolNetworkConfigAdditionalNodeNetworkConfig)(nil)).Elem()
}

func (o GetClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArrayOutput) ToGetClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArrayOutput() GetClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArrayOutput {
	return o
}

func (o GetClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArrayOutput) ToGetClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArrayOutputWithContext(ctx context.Context) GetClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArrayOutput {
	return o
}

func (o GetClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArrayOutput) Index(i pulumi.IntInput) GetClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNodePoolNetworkConfigAdditionalNodeNetworkConfig {
		return vs[0].([]GetClusterNodePoolNetworkConfigAdditionalNodeNetworkConfig)[vs[1].(int)]
	}).(GetClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigOutput)
}

type GetClusterNodePoolNetworkConfigAdditionalPodNetworkConfig struct {
	// The maximum number of pods per node which use this pod network.
	MaxPodsPerNode int `pulumi:"maxPodsPerNode"`
	// The name of the secondary range on the subnet which provides IP address for this pod range.
	SecondaryPodRange string `pulumi:"secondaryPodRange"`
	// Name of the subnetwork where the additional pod network belongs.
	Subnetwork string `pulumi:"subnetwork"`
}

// GetClusterNodePoolNetworkConfigAdditionalPodNetworkConfigInput is an input type that accepts GetClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArgs and GetClusterNodePoolNetworkConfigAdditionalPodNetworkConfigOutput values.
// You can construct a concrete instance of `GetClusterNodePoolNetworkConfigAdditionalPodNetworkConfigInput` via:
//
//	GetClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArgs{...}
type GetClusterNodePoolNetworkConfigAdditionalPodNetworkConfigInput interface {
	pulumi.Input

	ToGetClusterNodePoolNetworkConfigAdditionalPodNetworkConfigOutput() GetClusterNodePoolNetworkConfigAdditionalPodNetworkConfigOutput
	ToGetClusterNodePoolNetworkConfigAdditionalPodNetworkConfigOutputWithContext(context.Context) GetClusterNodePoolNetworkConfigAdditionalPodNetworkConfigOutput
}

type GetClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArgs struct {
	// The maximum number of pods per node which use this pod network.
	MaxPodsPerNode pulumi.IntInput `pulumi:"maxPodsPerNode"`
	// The name of the secondary range on the subnet which provides IP address for this pod range.
	SecondaryPodRange pulumi.StringInput `pulumi:"secondaryPodRange"`
	// Name of the subnetwork where the additional pod network belongs.
	Subnetwork pulumi.StringInput `pulumi:"subnetwork"`
}

func (GetClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolNetworkConfigAdditionalPodNetworkConfig)(nil)).Elem()
}

func (i GetClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArgs) ToGetClusterNodePoolNetworkConfigAdditionalPodNetworkConfigOutput() GetClusterNodePoolNetworkConfigAdditionalPodNetworkConfigOutput {
	return i.ToGetClusterNodePoolNetworkConfigAdditionalPodNetworkConfigOutputWithContext(context.Background())
}

func (i GetClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArgs) ToGetClusterNodePoolNetworkConfigAdditionalPodNetworkConfigOutputWithContext(ctx context.Context) GetClusterNodePoolNetworkConfigAdditionalPodNetworkConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolNetworkConfigAdditionalPodNetworkConfigOutput)
}

// GetClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArrayInput is an input type that accepts GetClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArray and GetClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArrayInput` via:
//
//	GetClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArray{ GetClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArgs{...} }
type GetClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArrayInput interface {
	pulumi.Input

	ToGetClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArrayOutput() GetClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArrayOutput
	ToGetClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArrayOutputWithContext(context.Context) GetClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArrayOutput
}

type GetClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArray []GetClusterNodePoolNetworkConfigAdditionalPodNetworkConfigInput

func (GetClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolNetworkConfigAdditionalPodNetworkConfig)(nil)).Elem()
}

func (i GetClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArray) ToGetClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArrayOutput() GetClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArrayOutput {
	return i.ToGetClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArray) ToGetClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArrayOutputWithContext(ctx context.Context) GetClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArrayOutput)
}

type GetClusterNodePoolNetworkConfigAdditionalPodNetworkConfigOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolNetworkConfigAdditionalPodNetworkConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolNetworkConfigAdditionalPodNetworkConfig)(nil)).Elem()
}

func (o GetClusterNodePoolNetworkConfigAdditionalPodNetworkConfigOutput) ToGetClusterNodePoolNetworkConfigAdditionalPodNetworkConfigOutput() GetClusterNodePoolNetworkConfigAdditionalPodNetworkConfigOutput {
	return o
}

func (o GetClusterNodePoolNetworkConfigAdditionalPodNetworkConfigOutput) ToGetClusterNodePoolNetworkConfigAdditionalPodNetworkConfigOutputWithContext(ctx context.Context) GetClusterNodePoolNetworkConfigAdditionalPodNetworkConfigOutput {
	return o
}

// The maximum number of pods per node which use this pod network.
func (o GetClusterNodePoolNetworkConfigAdditionalPodNetworkConfigOutput) MaxPodsPerNode() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterNodePoolNetworkConfigAdditionalPodNetworkConfig) int { return v.MaxPodsPerNode }).(pulumi.IntOutput)
}

// The name of the secondary range on the subnet which provides IP address for this pod range.
func (o GetClusterNodePoolNetworkConfigAdditionalPodNetworkConfigOutput) SecondaryPodRange() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodePoolNetworkConfigAdditionalPodNetworkConfig) string { return v.SecondaryPodRange }).(pulumi.StringOutput)
}

// Name of the subnetwork where the additional pod network belongs.
func (o GetClusterNodePoolNetworkConfigAdditionalPodNetworkConfigOutput) Subnetwork() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodePoolNetworkConfigAdditionalPodNetworkConfig) string { return v.Subnetwork }).(pulumi.StringOutput)
}

type GetClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolNetworkConfigAdditionalPodNetworkConfig)(nil)).Elem()
}

func (o GetClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArrayOutput) ToGetClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArrayOutput() GetClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArrayOutput {
	return o
}

func (o GetClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArrayOutput) ToGetClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArrayOutputWithContext(ctx context.Context) GetClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArrayOutput {
	return o
}

func (o GetClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArrayOutput) Index(i pulumi.IntInput) GetClusterNodePoolNetworkConfigAdditionalPodNetworkConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNodePoolNetworkConfigAdditionalPodNetworkConfig {
		return vs[0].([]GetClusterNodePoolNetworkConfigAdditionalPodNetworkConfig)[vs[1].(int)]
	}).(GetClusterNodePoolNetworkConfigAdditionalPodNetworkConfigOutput)
}

type GetClusterNodePoolNetworkConfigNetworkPerformanceConfig struct {
	// Specifies the total network bandwidth tier for the NodePool.
	TotalEgressBandwidthTier string `pulumi:"totalEgressBandwidthTier"`
}

// GetClusterNodePoolNetworkConfigNetworkPerformanceConfigInput is an input type that accepts GetClusterNodePoolNetworkConfigNetworkPerformanceConfigArgs and GetClusterNodePoolNetworkConfigNetworkPerformanceConfigOutput values.
// You can construct a concrete instance of `GetClusterNodePoolNetworkConfigNetworkPerformanceConfigInput` via:
//
//	GetClusterNodePoolNetworkConfigNetworkPerformanceConfigArgs{...}
type GetClusterNodePoolNetworkConfigNetworkPerformanceConfigInput interface {
	pulumi.Input

	ToGetClusterNodePoolNetworkConfigNetworkPerformanceConfigOutput() GetClusterNodePoolNetworkConfigNetworkPerformanceConfigOutput
	ToGetClusterNodePoolNetworkConfigNetworkPerformanceConfigOutputWithContext(context.Context) GetClusterNodePoolNetworkConfigNetworkPerformanceConfigOutput
}

type GetClusterNodePoolNetworkConfigNetworkPerformanceConfigArgs struct {
	// Specifies the total network bandwidth tier for the NodePool.
	TotalEgressBandwidthTier pulumi.StringInput `pulumi:"totalEgressBandwidthTier"`
}

func (GetClusterNodePoolNetworkConfigNetworkPerformanceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolNetworkConfigNetworkPerformanceConfig)(nil)).Elem()
}

func (i GetClusterNodePoolNetworkConfigNetworkPerformanceConfigArgs) ToGetClusterNodePoolNetworkConfigNetworkPerformanceConfigOutput() GetClusterNodePoolNetworkConfigNetworkPerformanceConfigOutput {
	return i.ToGetClusterNodePoolNetworkConfigNetworkPerformanceConfigOutputWithContext(context.Background())
}

func (i GetClusterNodePoolNetworkConfigNetworkPerformanceConfigArgs) ToGetClusterNodePoolNetworkConfigNetworkPerformanceConfigOutputWithContext(ctx context.Context) GetClusterNodePoolNetworkConfigNetworkPerformanceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolNetworkConfigNetworkPerformanceConfigOutput)
}

// GetClusterNodePoolNetworkConfigNetworkPerformanceConfigArrayInput is an input type that accepts GetClusterNodePoolNetworkConfigNetworkPerformanceConfigArray and GetClusterNodePoolNetworkConfigNetworkPerformanceConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterNodePoolNetworkConfigNetworkPerformanceConfigArrayInput` via:
//
//	GetClusterNodePoolNetworkConfigNetworkPerformanceConfigArray{ GetClusterNodePoolNetworkConfigNetworkPerformanceConfigArgs{...} }
type GetClusterNodePoolNetworkConfigNetworkPerformanceConfigArrayInput interface {
	pulumi.Input

	ToGetClusterNodePoolNetworkConfigNetworkPerformanceConfigArrayOutput() GetClusterNodePoolNetworkConfigNetworkPerformanceConfigArrayOutput
	ToGetClusterNodePoolNetworkConfigNetworkPerformanceConfigArrayOutputWithContext(context.Context) GetClusterNodePoolNetworkConfigNetworkPerformanceConfigArrayOutput
}

type GetClusterNodePoolNetworkConfigNetworkPerformanceConfigArray []GetClusterNodePoolNetworkConfigNetworkPerformanceConfigInput

func (GetClusterNodePoolNetworkConfigNetworkPerformanceConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolNetworkConfigNetworkPerformanceConfig)(nil)).Elem()
}

func (i GetClusterNodePoolNetworkConfigNetworkPerformanceConfigArray) ToGetClusterNodePoolNetworkConfigNetworkPerformanceConfigArrayOutput() GetClusterNodePoolNetworkConfigNetworkPerformanceConfigArrayOutput {
	return i.ToGetClusterNodePoolNetworkConfigNetworkPerformanceConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterNodePoolNetworkConfigNetworkPerformanceConfigArray) ToGetClusterNodePoolNetworkConfigNetworkPerformanceConfigArrayOutputWithContext(ctx context.Context) GetClusterNodePoolNetworkConfigNetworkPerformanceConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolNetworkConfigNetworkPerformanceConfigArrayOutput)
}

type GetClusterNodePoolNetworkConfigNetworkPerformanceConfigOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolNetworkConfigNetworkPerformanceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolNetworkConfigNetworkPerformanceConfig)(nil)).Elem()
}

func (o GetClusterNodePoolNetworkConfigNetworkPerformanceConfigOutput) ToGetClusterNodePoolNetworkConfigNetworkPerformanceConfigOutput() GetClusterNodePoolNetworkConfigNetworkPerformanceConfigOutput {
	return o
}

func (o GetClusterNodePoolNetworkConfigNetworkPerformanceConfigOutput) ToGetClusterNodePoolNetworkConfigNetworkPerformanceConfigOutputWithContext(ctx context.Context) GetClusterNodePoolNetworkConfigNetworkPerformanceConfigOutput {
	return o
}

// Specifies the total network bandwidth tier for the NodePool.
func (o GetClusterNodePoolNetworkConfigNetworkPerformanceConfigOutput) TotalEgressBandwidthTier() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodePoolNetworkConfigNetworkPerformanceConfig) string {
		return v.TotalEgressBandwidthTier
	}).(pulumi.StringOutput)
}

type GetClusterNodePoolNetworkConfigNetworkPerformanceConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolNetworkConfigNetworkPerformanceConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolNetworkConfigNetworkPerformanceConfig)(nil)).Elem()
}

func (o GetClusterNodePoolNetworkConfigNetworkPerformanceConfigArrayOutput) ToGetClusterNodePoolNetworkConfigNetworkPerformanceConfigArrayOutput() GetClusterNodePoolNetworkConfigNetworkPerformanceConfigArrayOutput {
	return o
}

func (o GetClusterNodePoolNetworkConfigNetworkPerformanceConfigArrayOutput) ToGetClusterNodePoolNetworkConfigNetworkPerformanceConfigArrayOutputWithContext(ctx context.Context) GetClusterNodePoolNetworkConfigNetworkPerformanceConfigArrayOutput {
	return o
}

func (o GetClusterNodePoolNetworkConfigNetworkPerformanceConfigArrayOutput) Index(i pulumi.IntInput) GetClusterNodePoolNetworkConfigNetworkPerformanceConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNodePoolNetworkConfigNetworkPerformanceConfig {
		return vs[0].([]GetClusterNodePoolNetworkConfigNetworkPerformanceConfig)[vs[1].(int)]
	}).(GetClusterNodePoolNetworkConfigNetworkPerformanceConfigOutput)
}

type GetClusterNodePoolNetworkConfigPodCidrOverprovisionConfig struct {
	Disabled bool `pulumi:"disabled"`
}

// GetClusterNodePoolNetworkConfigPodCidrOverprovisionConfigInput is an input type that accepts GetClusterNodePoolNetworkConfigPodCidrOverprovisionConfigArgs and GetClusterNodePoolNetworkConfigPodCidrOverprovisionConfigOutput values.
// You can construct a concrete instance of `GetClusterNodePoolNetworkConfigPodCidrOverprovisionConfigInput` via:
//
//	GetClusterNodePoolNetworkConfigPodCidrOverprovisionConfigArgs{...}
type GetClusterNodePoolNetworkConfigPodCidrOverprovisionConfigInput interface {
	pulumi.Input

	ToGetClusterNodePoolNetworkConfigPodCidrOverprovisionConfigOutput() GetClusterNodePoolNetworkConfigPodCidrOverprovisionConfigOutput
	ToGetClusterNodePoolNetworkConfigPodCidrOverprovisionConfigOutputWithContext(context.Context) GetClusterNodePoolNetworkConfigPodCidrOverprovisionConfigOutput
}

type GetClusterNodePoolNetworkConfigPodCidrOverprovisionConfigArgs struct {
	Disabled pulumi.BoolInput `pulumi:"disabled"`
}

func (GetClusterNodePoolNetworkConfigPodCidrOverprovisionConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolNetworkConfigPodCidrOverprovisionConfig)(nil)).Elem()
}

func (i GetClusterNodePoolNetworkConfigPodCidrOverprovisionConfigArgs) ToGetClusterNodePoolNetworkConfigPodCidrOverprovisionConfigOutput() GetClusterNodePoolNetworkConfigPodCidrOverprovisionConfigOutput {
	return i.ToGetClusterNodePoolNetworkConfigPodCidrOverprovisionConfigOutputWithContext(context.Background())
}

func (i GetClusterNodePoolNetworkConfigPodCidrOverprovisionConfigArgs) ToGetClusterNodePoolNetworkConfigPodCidrOverprovisionConfigOutputWithContext(ctx context.Context) GetClusterNodePoolNetworkConfigPodCidrOverprovisionConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolNetworkConfigPodCidrOverprovisionConfigOutput)
}

// GetClusterNodePoolNetworkConfigPodCidrOverprovisionConfigArrayInput is an input type that accepts GetClusterNodePoolNetworkConfigPodCidrOverprovisionConfigArray and GetClusterNodePoolNetworkConfigPodCidrOverprovisionConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterNodePoolNetworkConfigPodCidrOverprovisionConfigArrayInput` via:
//
//	GetClusterNodePoolNetworkConfigPodCidrOverprovisionConfigArray{ GetClusterNodePoolNetworkConfigPodCidrOverprovisionConfigArgs{...} }
type GetClusterNodePoolNetworkConfigPodCidrOverprovisionConfigArrayInput interface {
	pulumi.Input

	ToGetClusterNodePoolNetworkConfigPodCidrOverprovisionConfigArrayOutput() GetClusterNodePoolNetworkConfigPodCidrOverprovisionConfigArrayOutput
	ToGetClusterNodePoolNetworkConfigPodCidrOverprovisionConfigArrayOutputWithContext(context.Context) GetClusterNodePoolNetworkConfigPodCidrOverprovisionConfigArrayOutput
}

type GetClusterNodePoolNetworkConfigPodCidrOverprovisionConfigArray []GetClusterNodePoolNetworkConfigPodCidrOverprovisionConfigInput

func (GetClusterNodePoolNetworkConfigPodCidrOverprovisionConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolNetworkConfigPodCidrOverprovisionConfig)(nil)).Elem()
}

func (i GetClusterNodePoolNetworkConfigPodCidrOverprovisionConfigArray) ToGetClusterNodePoolNetworkConfigPodCidrOverprovisionConfigArrayOutput() GetClusterNodePoolNetworkConfigPodCidrOverprovisionConfigArrayOutput {
	return i.ToGetClusterNodePoolNetworkConfigPodCidrOverprovisionConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterNodePoolNetworkConfigPodCidrOverprovisionConfigArray) ToGetClusterNodePoolNetworkConfigPodCidrOverprovisionConfigArrayOutputWithContext(ctx context.Context) GetClusterNodePoolNetworkConfigPodCidrOverprovisionConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolNetworkConfigPodCidrOverprovisionConfigArrayOutput)
}

type GetClusterNodePoolNetworkConfigPodCidrOverprovisionConfigOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolNetworkConfigPodCidrOverprovisionConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolNetworkConfigPodCidrOverprovisionConfig)(nil)).Elem()
}

func (o GetClusterNodePoolNetworkConfigPodCidrOverprovisionConfigOutput) ToGetClusterNodePoolNetworkConfigPodCidrOverprovisionConfigOutput() GetClusterNodePoolNetworkConfigPodCidrOverprovisionConfigOutput {
	return o
}

func (o GetClusterNodePoolNetworkConfigPodCidrOverprovisionConfigOutput) ToGetClusterNodePoolNetworkConfigPodCidrOverprovisionConfigOutputWithContext(ctx context.Context) GetClusterNodePoolNetworkConfigPodCidrOverprovisionConfigOutput {
	return o
}

func (o GetClusterNodePoolNetworkConfigPodCidrOverprovisionConfigOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterNodePoolNetworkConfigPodCidrOverprovisionConfig) bool { return v.Disabled }).(pulumi.BoolOutput)
}

type GetClusterNodePoolNetworkConfigPodCidrOverprovisionConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolNetworkConfigPodCidrOverprovisionConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolNetworkConfigPodCidrOverprovisionConfig)(nil)).Elem()
}

func (o GetClusterNodePoolNetworkConfigPodCidrOverprovisionConfigArrayOutput) ToGetClusterNodePoolNetworkConfigPodCidrOverprovisionConfigArrayOutput() GetClusterNodePoolNetworkConfigPodCidrOverprovisionConfigArrayOutput {
	return o
}

func (o GetClusterNodePoolNetworkConfigPodCidrOverprovisionConfigArrayOutput) ToGetClusterNodePoolNetworkConfigPodCidrOverprovisionConfigArrayOutputWithContext(ctx context.Context) GetClusterNodePoolNetworkConfigPodCidrOverprovisionConfigArrayOutput {
	return o
}

func (o GetClusterNodePoolNetworkConfigPodCidrOverprovisionConfigArrayOutput) Index(i pulumi.IntInput) GetClusterNodePoolNetworkConfigPodCidrOverprovisionConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNodePoolNetworkConfigPodCidrOverprovisionConfig {
		return vs[0].([]GetClusterNodePoolNetworkConfigPodCidrOverprovisionConfig)[vs[1].(int)]
	}).(GetClusterNodePoolNetworkConfigPodCidrOverprovisionConfigOutput)
}

type GetClusterNodePoolNodeConfig struct {
	// Specifies options for controlling advanced machine features.
	AdvancedMachineFeatures []GetClusterNodePoolNodeConfigAdvancedMachineFeature `pulumi:"advancedMachineFeatures"`
	// The Customer Managed Encryption Key used to encrypt the boot disk attached to each node in the node pool.
	BootDiskKmsKey string `pulumi:"bootDiskKmsKey"`
	// Configuration for the confidential nodes feature, which makes nodes run on confidential VMs. Warning: This configuration can't be changed (or added/removed) after pool creation without deleting and recreating the entire pool.
	ConfidentialNodes []GetClusterNodePoolNodeConfigConfidentialNode `pulumi:"confidentialNodes"`
	// Size of the disk attached to each node, specified in GB. The smallest allowed disk size is 10GB.
	DiskSizeGb int `pulumi:"diskSizeGb"`
	// Type of the disk attached to each node. Such as pd-standard, pd-balanced or pd-ssd
	DiskType string `pulumi:"diskType"`
	// List of kubernetes taints applied to each node.
	EffectiveTaints []GetClusterNodePoolNodeConfigEffectiveTaint `pulumi:"effectiveTaints"`
	// If enabled boot disks are configured with confidential mode.
	EnableConfidentialStorage bool `pulumi:"enableConfidentialStorage"`
	// Parameters for the ephemeral storage filesystem. If unspecified, ephemeral storage is backed by the boot disk.
	EphemeralStorageConfigs []GetClusterNodePoolNodeConfigEphemeralStorageConfig `pulumi:"ephemeralStorageConfigs"`
	// Parameters for the ephemeral storage filesystem. If unspecified, ephemeral storage is backed by the boot disk.
	EphemeralStorageLocalSsdConfigs []GetClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfig `pulumi:"ephemeralStorageLocalSsdConfigs"`
	// Enable or disable NCCL Fast Socket in the node pool.
	FastSockets []GetClusterNodePoolNodeConfigFastSocket `pulumi:"fastSockets"`
	// GCFS configuration for this node.
	GcfsConfigs []GetClusterNodePoolNodeConfigGcfsConfig `pulumi:"gcfsConfigs"`
	// List of the type and count of accelerator cards attached to the instance.
	GuestAccelerators []GetClusterNodePoolNodeConfigGuestAccelerator `pulumi:"guestAccelerators"`
	// Enable or disable gvnic in the node pool.
	Gvnics []GetClusterNodePoolNodeConfigGvnic `pulumi:"gvnics"`
	// The maintenance policy for the hosts on which the GKE VMs run on.
	HostMaintenancePolicies []GetClusterNodePoolNodeConfigHostMaintenancePolicy `pulumi:"hostMaintenancePolicies"`
	// The image type to use for this node. Note that for a given image type, the latest version of it will be used.
	ImageType string `pulumi:"imageType"`
	// Node kubelet configs.
	KubeletConfigs []GetClusterNodePoolNodeConfigKubeletConfig `pulumi:"kubeletConfigs"`
	// The map of Kubernetes labels (key/value pairs) to be applied to each node. These will added in addition to any default label(s) that Kubernetes may apply to the node.
	Labels map[string]string `pulumi:"labels"`
	// Parameters that can be configured on Linux nodes.
	LinuxNodeConfigs []GetClusterNodePoolNodeConfigLinuxNodeConfig `pulumi:"linuxNodeConfigs"`
	// Parameters for raw-block local NVMe SSDs.
	LocalNvmeSsdBlockConfigs []GetClusterNodePoolNodeConfigLocalNvmeSsdBlockConfig `pulumi:"localNvmeSsdBlockConfigs"`
	// The number of local SSD disks to be attached to the node.
	LocalSsdCount int `pulumi:"localSsdCount"`
	// Type of logging agent that is used as the default value for node pools in the cluster. Valid values include DEFAULT and MAX_THROUGHPUT.
	LoggingVariant string `pulumi:"loggingVariant"`
	// The name of a Google Compute Engine machine type.
	MachineType string `pulumi:"machineType"`
	// The metadata key/value pairs assigned to instances in the cluster.
	Metadata map[string]string `pulumi:"metadata"`
	// Minimum CPU platform to be used by this instance. The instance may be scheduled on the specified or newer CPU platform.
	MinCpuPlatform string `pulumi:"minCpuPlatform"`
	// Setting this field will assign instances of this pool to run on the specified node group. This is useful for running workloads on sole tenant nodes.
	NodeGroup string `pulumi:"nodeGroup"`
	// The set of Google API scopes to be made available on all of the node VMs.
	OauthScopes []string `pulumi:"oauthScopes"`
	// Whether the nodes are created as preemptible VM instances.
	Preemptible bool `pulumi:"preemptible"`
	// The reservation affinity configuration for the node pool.
	ReservationAffinities []GetClusterNodePoolNodeConfigReservationAffinity `pulumi:"reservationAffinities"`
	// The GCE resource labels (a map of key/value pairs) to be applied to the node pool.
	ResourceLabels map[string]string `pulumi:"resourceLabels"`
	// A map of resource manager tags. Resource manager tag keys and values have the same definition as resource manager tags. Keys must be in the format tagKeys/{tag_key_id}, and values are in the format tagValues/456. The field is ignored (both PUT & PATCH) when empty.
	ResourceManagerTags map[string]interface{} `pulumi:"resourceManagerTags"`
	// Sandbox configuration for this node.
	SandboxConfigs []GetClusterNodePoolNodeConfigSandboxConfig `pulumi:"sandboxConfigs"`
	// Secondary boot disks for preloading data or container images.
	SecondaryBootDisks []GetClusterNodePoolNodeConfigSecondaryBootDisk `pulumi:"secondaryBootDisks"`
	// The Google Cloud Platform Service Account to be used by the node VMs.
	ServiceAccount string `pulumi:"serviceAccount"`
	// Shielded Instance options.
	ShieldedInstanceConfigs []GetClusterNodePoolNodeConfigShieldedInstanceConfig `pulumi:"shieldedInstanceConfigs"`
	// Node affinity options for sole tenant node pools.
	SoleTenantConfigs []GetClusterNodePoolNodeConfigSoleTenantConfig `pulumi:"soleTenantConfigs"`
	// Whether the nodes are created as spot VM instances.
	Spot bool `pulumi:"spot"`
	// The list of instance tags applied to all nodes.
	Tags []string `pulumi:"tags"`
	// List of Kubernetes taints to be applied to each node.
	Taints []GetClusterNodePoolNodeConfigTaint `pulumi:"taints"`
	// The workload metadata configuration for this node.
	WorkloadMetadataConfigs []GetClusterNodePoolNodeConfigWorkloadMetadataConfig `pulumi:"workloadMetadataConfigs"`
}

// GetClusterNodePoolNodeConfigInput is an input type that accepts GetClusterNodePoolNodeConfigArgs and GetClusterNodePoolNodeConfigOutput values.
// You can construct a concrete instance of `GetClusterNodePoolNodeConfigInput` via:
//
//	GetClusterNodePoolNodeConfigArgs{...}
type GetClusterNodePoolNodeConfigInput interface {
	pulumi.Input

	ToGetClusterNodePoolNodeConfigOutput() GetClusterNodePoolNodeConfigOutput
	ToGetClusterNodePoolNodeConfigOutputWithContext(context.Context) GetClusterNodePoolNodeConfigOutput
}

type GetClusterNodePoolNodeConfigArgs struct {
	// Specifies options for controlling advanced machine features.
	AdvancedMachineFeatures GetClusterNodePoolNodeConfigAdvancedMachineFeatureArrayInput `pulumi:"advancedMachineFeatures"`
	// The Customer Managed Encryption Key used to encrypt the boot disk attached to each node in the node pool.
	BootDiskKmsKey pulumi.StringInput `pulumi:"bootDiskKmsKey"`
	// Configuration for the confidential nodes feature, which makes nodes run on confidential VMs. Warning: This configuration can't be changed (or added/removed) after pool creation without deleting and recreating the entire pool.
	ConfidentialNodes GetClusterNodePoolNodeConfigConfidentialNodeArrayInput `pulumi:"confidentialNodes"`
	// Size of the disk attached to each node, specified in GB. The smallest allowed disk size is 10GB.
	DiskSizeGb pulumi.IntInput `pulumi:"diskSizeGb"`
	// Type of the disk attached to each node. Such as pd-standard, pd-balanced or pd-ssd
	DiskType pulumi.StringInput `pulumi:"diskType"`
	// List of kubernetes taints applied to each node.
	EffectiveTaints GetClusterNodePoolNodeConfigEffectiveTaintArrayInput `pulumi:"effectiveTaints"`
	// If enabled boot disks are configured with confidential mode.
	EnableConfidentialStorage pulumi.BoolInput `pulumi:"enableConfidentialStorage"`
	// Parameters for the ephemeral storage filesystem. If unspecified, ephemeral storage is backed by the boot disk.
	EphemeralStorageConfigs GetClusterNodePoolNodeConfigEphemeralStorageConfigArrayInput `pulumi:"ephemeralStorageConfigs"`
	// Parameters for the ephemeral storage filesystem. If unspecified, ephemeral storage is backed by the boot disk.
	EphemeralStorageLocalSsdConfigs GetClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigArrayInput `pulumi:"ephemeralStorageLocalSsdConfigs"`
	// Enable or disable NCCL Fast Socket in the node pool.
	FastSockets GetClusterNodePoolNodeConfigFastSocketArrayInput `pulumi:"fastSockets"`
	// GCFS configuration for this node.
	GcfsConfigs GetClusterNodePoolNodeConfigGcfsConfigArrayInput `pulumi:"gcfsConfigs"`
	// List of the type and count of accelerator cards attached to the instance.
	GuestAccelerators GetClusterNodePoolNodeConfigGuestAcceleratorArrayInput `pulumi:"guestAccelerators"`
	// Enable or disable gvnic in the node pool.
	Gvnics GetClusterNodePoolNodeConfigGvnicArrayInput `pulumi:"gvnics"`
	// The maintenance policy for the hosts on which the GKE VMs run on.
	HostMaintenancePolicies GetClusterNodePoolNodeConfigHostMaintenancePolicyArrayInput `pulumi:"hostMaintenancePolicies"`
	// The image type to use for this node. Note that for a given image type, the latest version of it will be used.
	ImageType pulumi.StringInput `pulumi:"imageType"`
	// Node kubelet configs.
	KubeletConfigs GetClusterNodePoolNodeConfigKubeletConfigArrayInput `pulumi:"kubeletConfigs"`
	// The map of Kubernetes labels (key/value pairs) to be applied to each node. These will added in addition to any default label(s) that Kubernetes may apply to the node.
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// Parameters that can be configured on Linux nodes.
	LinuxNodeConfigs GetClusterNodePoolNodeConfigLinuxNodeConfigArrayInput `pulumi:"linuxNodeConfigs"`
	// Parameters for raw-block local NVMe SSDs.
	LocalNvmeSsdBlockConfigs GetClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigArrayInput `pulumi:"localNvmeSsdBlockConfigs"`
	// The number of local SSD disks to be attached to the node.
	LocalSsdCount pulumi.IntInput `pulumi:"localSsdCount"`
	// Type of logging agent that is used as the default value for node pools in the cluster. Valid values include DEFAULT and MAX_THROUGHPUT.
	LoggingVariant pulumi.StringInput `pulumi:"loggingVariant"`
	// The name of a Google Compute Engine machine type.
	MachineType pulumi.StringInput `pulumi:"machineType"`
	// The metadata key/value pairs assigned to instances in the cluster.
	Metadata pulumi.StringMapInput `pulumi:"metadata"`
	// Minimum CPU platform to be used by this instance. The instance may be scheduled on the specified or newer CPU platform.
	MinCpuPlatform pulumi.StringInput `pulumi:"minCpuPlatform"`
	// Setting this field will assign instances of this pool to run on the specified node group. This is useful for running workloads on sole tenant nodes.
	NodeGroup pulumi.StringInput `pulumi:"nodeGroup"`
	// The set of Google API scopes to be made available on all of the node VMs.
	OauthScopes pulumi.StringArrayInput `pulumi:"oauthScopes"`
	// Whether the nodes are created as preemptible VM instances.
	Preemptible pulumi.BoolInput `pulumi:"preemptible"`
	// The reservation affinity configuration for the node pool.
	ReservationAffinities GetClusterNodePoolNodeConfigReservationAffinityArrayInput `pulumi:"reservationAffinities"`
	// The GCE resource labels (a map of key/value pairs) to be applied to the node pool.
	ResourceLabels pulumi.StringMapInput `pulumi:"resourceLabels"`
	// A map of resource manager tags. Resource manager tag keys and values have the same definition as resource manager tags. Keys must be in the format tagKeys/{tag_key_id}, and values are in the format tagValues/456. The field is ignored (both PUT & PATCH) when empty.
	ResourceManagerTags pulumi.MapInput `pulumi:"resourceManagerTags"`
	// Sandbox configuration for this node.
	SandboxConfigs GetClusterNodePoolNodeConfigSandboxConfigArrayInput `pulumi:"sandboxConfigs"`
	// Secondary boot disks for preloading data or container images.
	SecondaryBootDisks GetClusterNodePoolNodeConfigSecondaryBootDiskArrayInput `pulumi:"secondaryBootDisks"`
	// The Google Cloud Platform Service Account to be used by the node VMs.
	ServiceAccount pulumi.StringInput `pulumi:"serviceAccount"`
	// Shielded Instance options.
	ShieldedInstanceConfigs GetClusterNodePoolNodeConfigShieldedInstanceConfigArrayInput `pulumi:"shieldedInstanceConfigs"`
	// Node affinity options for sole tenant node pools.
	SoleTenantConfigs GetClusterNodePoolNodeConfigSoleTenantConfigArrayInput `pulumi:"soleTenantConfigs"`
	// Whether the nodes are created as spot VM instances.
	Spot pulumi.BoolInput `pulumi:"spot"`
	// The list of instance tags applied to all nodes.
	Tags pulumi.StringArrayInput `pulumi:"tags"`
	// List of Kubernetes taints to be applied to each node.
	Taints GetClusterNodePoolNodeConfigTaintArrayInput `pulumi:"taints"`
	// The workload metadata configuration for this node.
	WorkloadMetadataConfigs GetClusterNodePoolNodeConfigWorkloadMetadataConfigArrayInput `pulumi:"workloadMetadataConfigs"`
}

func (GetClusterNodePoolNodeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolNodeConfig)(nil)).Elem()
}

func (i GetClusterNodePoolNodeConfigArgs) ToGetClusterNodePoolNodeConfigOutput() GetClusterNodePoolNodeConfigOutput {
	return i.ToGetClusterNodePoolNodeConfigOutputWithContext(context.Background())
}

func (i GetClusterNodePoolNodeConfigArgs) ToGetClusterNodePoolNodeConfigOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolNodeConfigOutput)
}

// GetClusterNodePoolNodeConfigArrayInput is an input type that accepts GetClusterNodePoolNodeConfigArray and GetClusterNodePoolNodeConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterNodePoolNodeConfigArrayInput` via:
//
//	GetClusterNodePoolNodeConfigArray{ GetClusterNodePoolNodeConfigArgs{...} }
type GetClusterNodePoolNodeConfigArrayInput interface {
	pulumi.Input

	ToGetClusterNodePoolNodeConfigArrayOutput() GetClusterNodePoolNodeConfigArrayOutput
	ToGetClusterNodePoolNodeConfigArrayOutputWithContext(context.Context) GetClusterNodePoolNodeConfigArrayOutput
}

type GetClusterNodePoolNodeConfigArray []GetClusterNodePoolNodeConfigInput

func (GetClusterNodePoolNodeConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolNodeConfig)(nil)).Elem()
}

func (i GetClusterNodePoolNodeConfigArray) ToGetClusterNodePoolNodeConfigArrayOutput() GetClusterNodePoolNodeConfigArrayOutput {
	return i.ToGetClusterNodePoolNodeConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterNodePoolNodeConfigArray) ToGetClusterNodePoolNodeConfigArrayOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolNodeConfigArrayOutput)
}

type GetClusterNodePoolNodeConfigOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolNodeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolNodeConfig)(nil)).Elem()
}

func (o GetClusterNodePoolNodeConfigOutput) ToGetClusterNodePoolNodeConfigOutput() GetClusterNodePoolNodeConfigOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigOutput) ToGetClusterNodePoolNodeConfigOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigOutput {
	return o
}

// Specifies options for controlling advanced machine features.
func (o GetClusterNodePoolNodeConfigOutput) AdvancedMachineFeatures() GetClusterNodePoolNodeConfigAdvancedMachineFeatureArrayOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfig) []GetClusterNodePoolNodeConfigAdvancedMachineFeature {
		return v.AdvancedMachineFeatures
	}).(GetClusterNodePoolNodeConfigAdvancedMachineFeatureArrayOutput)
}

// The Customer Managed Encryption Key used to encrypt the boot disk attached to each node in the node pool.
func (o GetClusterNodePoolNodeConfigOutput) BootDiskKmsKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfig) string { return v.BootDiskKmsKey }).(pulumi.StringOutput)
}

// Configuration for the confidential nodes feature, which makes nodes run on confidential VMs. Warning: This configuration can't be changed (or added/removed) after pool creation without deleting and recreating the entire pool.
func (o GetClusterNodePoolNodeConfigOutput) ConfidentialNodes() GetClusterNodePoolNodeConfigConfidentialNodeArrayOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfig) []GetClusterNodePoolNodeConfigConfidentialNode {
		return v.ConfidentialNodes
	}).(GetClusterNodePoolNodeConfigConfidentialNodeArrayOutput)
}

// Size of the disk attached to each node, specified in GB. The smallest allowed disk size is 10GB.
func (o GetClusterNodePoolNodeConfigOutput) DiskSizeGb() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfig) int { return v.DiskSizeGb }).(pulumi.IntOutput)
}

// Type of the disk attached to each node. Such as pd-standard, pd-balanced or pd-ssd
func (o GetClusterNodePoolNodeConfigOutput) DiskType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfig) string { return v.DiskType }).(pulumi.StringOutput)
}

// List of kubernetes taints applied to each node.
func (o GetClusterNodePoolNodeConfigOutput) EffectiveTaints() GetClusterNodePoolNodeConfigEffectiveTaintArrayOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfig) []GetClusterNodePoolNodeConfigEffectiveTaint {
		return v.EffectiveTaints
	}).(GetClusterNodePoolNodeConfigEffectiveTaintArrayOutput)
}

// If enabled boot disks are configured with confidential mode.
func (o GetClusterNodePoolNodeConfigOutput) EnableConfidentialStorage() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfig) bool { return v.EnableConfidentialStorage }).(pulumi.BoolOutput)
}

// Parameters for the ephemeral storage filesystem. If unspecified, ephemeral storage is backed by the boot disk.
func (o GetClusterNodePoolNodeConfigOutput) EphemeralStorageConfigs() GetClusterNodePoolNodeConfigEphemeralStorageConfigArrayOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfig) []GetClusterNodePoolNodeConfigEphemeralStorageConfig {
		return v.EphemeralStorageConfigs
	}).(GetClusterNodePoolNodeConfigEphemeralStorageConfigArrayOutput)
}

// Parameters for the ephemeral storage filesystem. If unspecified, ephemeral storage is backed by the boot disk.
func (o GetClusterNodePoolNodeConfigOutput) EphemeralStorageLocalSsdConfigs() GetClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigArrayOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfig) []GetClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfig {
		return v.EphemeralStorageLocalSsdConfigs
	}).(GetClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigArrayOutput)
}

// Enable or disable NCCL Fast Socket in the node pool.
func (o GetClusterNodePoolNodeConfigOutput) FastSockets() GetClusterNodePoolNodeConfigFastSocketArrayOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfig) []GetClusterNodePoolNodeConfigFastSocket { return v.FastSockets }).(GetClusterNodePoolNodeConfigFastSocketArrayOutput)
}

// GCFS configuration for this node.
func (o GetClusterNodePoolNodeConfigOutput) GcfsConfigs() GetClusterNodePoolNodeConfigGcfsConfigArrayOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfig) []GetClusterNodePoolNodeConfigGcfsConfig { return v.GcfsConfigs }).(GetClusterNodePoolNodeConfigGcfsConfigArrayOutput)
}

// List of the type and count of accelerator cards attached to the instance.
func (o GetClusterNodePoolNodeConfigOutput) GuestAccelerators() GetClusterNodePoolNodeConfigGuestAcceleratorArrayOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfig) []GetClusterNodePoolNodeConfigGuestAccelerator {
		return v.GuestAccelerators
	}).(GetClusterNodePoolNodeConfigGuestAcceleratorArrayOutput)
}

// Enable or disable gvnic in the node pool.
func (o GetClusterNodePoolNodeConfigOutput) Gvnics() GetClusterNodePoolNodeConfigGvnicArrayOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfig) []GetClusterNodePoolNodeConfigGvnic { return v.Gvnics }).(GetClusterNodePoolNodeConfigGvnicArrayOutput)
}

// The maintenance policy for the hosts on which the GKE VMs run on.
func (o GetClusterNodePoolNodeConfigOutput) HostMaintenancePolicies() GetClusterNodePoolNodeConfigHostMaintenancePolicyArrayOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfig) []GetClusterNodePoolNodeConfigHostMaintenancePolicy {
		return v.HostMaintenancePolicies
	}).(GetClusterNodePoolNodeConfigHostMaintenancePolicyArrayOutput)
}

// The image type to use for this node. Note that for a given image type, the latest version of it will be used.
func (o GetClusterNodePoolNodeConfigOutput) ImageType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfig) string { return v.ImageType }).(pulumi.StringOutput)
}

// Node kubelet configs.
func (o GetClusterNodePoolNodeConfigOutput) KubeletConfigs() GetClusterNodePoolNodeConfigKubeletConfigArrayOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfig) []GetClusterNodePoolNodeConfigKubeletConfig {
		return v.KubeletConfigs
	}).(GetClusterNodePoolNodeConfigKubeletConfigArrayOutput)
}

// The map of Kubernetes labels (key/value pairs) to be applied to each node. These will added in addition to any default label(s) that Kubernetes may apply to the node.
func (o GetClusterNodePoolNodeConfigOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfig) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// Parameters that can be configured on Linux nodes.
func (o GetClusterNodePoolNodeConfigOutput) LinuxNodeConfigs() GetClusterNodePoolNodeConfigLinuxNodeConfigArrayOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfig) []GetClusterNodePoolNodeConfigLinuxNodeConfig {
		return v.LinuxNodeConfigs
	}).(GetClusterNodePoolNodeConfigLinuxNodeConfigArrayOutput)
}

// Parameters for raw-block local NVMe SSDs.
func (o GetClusterNodePoolNodeConfigOutput) LocalNvmeSsdBlockConfigs() GetClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigArrayOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfig) []GetClusterNodePoolNodeConfigLocalNvmeSsdBlockConfig {
		return v.LocalNvmeSsdBlockConfigs
	}).(GetClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigArrayOutput)
}

// The number of local SSD disks to be attached to the node.
func (o GetClusterNodePoolNodeConfigOutput) LocalSsdCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfig) int { return v.LocalSsdCount }).(pulumi.IntOutput)
}

// Type of logging agent that is used as the default value for node pools in the cluster. Valid values include DEFAULT and MAX_THROUGHPUT.
func (o GetClusterNodePoolNodeConfigOutput) LoggingVariant() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfig) string { return v.LoggingVariant }).(pulumi.StringOutput)
}

// The name of a Google Compute Engine machine type.
func (o GetClusterNodePoolNodeConfigOutput) MachineType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfig) string { return v.MachineType }).(pulumi.StringOutput)
}

// The metadata key/value pairs assigned to instances in the cluster.
func (o GetClusterNodePoolNodeConfigOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfig) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

// Minimum CPU platform to be used by this instance. The instance may be scheduled on the specified or newer CPU platform.
func (o GetClusterNodePoolNodeConfigOutput) MinCpuPlatform() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfig) string { return v.MinCpuPlatform }).(pulumi.StringOutput)
}

// Setting this field will assign instances of this pool to run on the specified node group. This is useful for running workloads on sole tenant nodes.
func (o GetClusterNodePoolNodeConfigOutput) NodeGroup() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfig) string { return v.NodeGroup }).(pulumi.StringOutput)
}

// The set of Google API scopes to be made available on all of the node VMs.
func (o GetClusterNodePoolNodeConfigOutput) OauthScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfig) []string { return v.OauthScopes }).(pulumi.StringArrayOutput)
}

// Whether the nodes are created as preemptible VM instances.
func (o GetClusterNodePoolNodeConfigOutput) Preemptible() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfig) bool { return v.Preemptible }).(pulumi.BoolOutput)
}

// The reservation affinity configuration for the node pool.
func (o GetClusterNodePoolNodeConfigOutput) ReservationAffinities() GetClusterNodePoolNodeConfigReservationAffinityArrayOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfig) []GetClusterNodePoolNodeConfigReservationAffinity {
		return v.ReservationAffinities
	}).(GetClusterNodePoolNodeConfigReservationAffinityArrayOutput)
}

// The GCE resource labels (a map of key/value pairs) to be applied to the node pool.
func (o GetClusterNodePoolNodeConfigOutput) ResourceLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfig) map[string]string { return v.ResourceLabels }).(pulumi.StringMapOutput)
}

// A map of resource manager tags. Resource manager tag keys and values have the same definition as resource manager tags. Keys must be in the format tagKeys/{tag_key_id}, and values are in the format tagValues/456. The field is ignored (both PUT & PATCH) when empty.
func (o GetClusterNodePoolNodeConfigOutput) ResourceManagerTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfig) map[string]interface{} { return v.ResourceManagerTags }).(pulumi.MapOutput)
}

// Sandbox configuration for this node.
func (o GetClusterNodePoolNodeConfigOutput) SandboxConfigs() GetClusterNodePoolNodeConfigSandboxConfigArrayOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfig) []GetClusterNodePoolNodeConfigSandboxConfig {
		return v.SandboxConfigs
	}).(GetClusterNodePoolNodeConfigSandboxConfigArrayOutput)
}

// Secondary boot disks for preloading data or container images.
func (o GetClusterNodePoolNodeConfigOutput) SecondaryBootDisks() GetClusterNodePoolNodeConfigSecondaryBootDiskArrayOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfig) []GetClusterNodePoolNodeConfigSecondaryBootDisk {
		return v.SecondaryBootDisks
	}).(GetClusterNodePoolNodeConfigSecondaryBootDiskArrayOutput)
}

// The Google Cloud Platform Service Account to be used by the node VMs.
func (o GetClusterNodePoolNodeConfigOutput) ServiceAccount() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfig) string { return v.ServiceAccount }).(pulumi.StringOutput)
}

// Shielded Instance options.
func (o GetClusterNodePoolNodeConfigOutput) ShieldedInstanceConfigs() GetClusterNodePoolNodeConfigShieldedInstanceConfigArrayOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfig) []GetClusterNodePoolNodeConfigShieldedInstanceConfig {
		return v.ShieldedInstanceConfigs
	}).(GetClusterNodePoolNodeConfigShieldedInstanceConfigArrayOutput)
}

// Node affinity options for sole tenant node pools.
func (o GetClusterNodePoolNodeConfigOutput) SoleTenantConfigs() GetClusterNodePoolNodeConfigSoleTenantConfigArrayOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfig) []GetClusterNodePoolNodeConfigSoleTenantConfig {
		return v.SoleTenantConfigs
	}).(GetClusterNodePoolNodeConfigSoleTenantConfigArrayOutput)
}

// Whether the nodes are created as spot VM instances.
func (o GetClusterNodePoolNodeConfigOutput) Spot() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfig) bool { return v.Spot }).(pulumi.BoolOutput)
}

// The list of instance tags applied to all nodes.
func (o GetClusterNodePoolNodeConfigOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfig) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// List of Kubernetes taints to be applied to each node.
func (o GetClusterNodePoolNodeConfigOutput) Taints() GetClusterNodePoolNodeConfigTaintArrayOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfig) []GetClusterNodePoolNodeConfigTaint { return v.Taints }).(GetClusterNodePoolNodeConfigTaintArrayOutput)
}

// The workload metadata configuration for this node.
func (o GetClusterNodePoolNodeConfigOutput) WorkloadMetadataConfigs() GetClusterNodePoolNodeConfigWorkloadMetadataConfigArrayOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfig) []GetClusterNodePoolNodeConfigWorkloadMetadataConfig {
		return v.WorkloadMetadataConfigs
	}).(GetClusterNodePoolNodeConfigWorkloadMetadataConfigArrayOutput)
}

type GetClusterNodePoolNodeConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolNodeConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolNodeConfig)(nil)).Elem()
}

func (o GetClusterNodePoolNodeConfigArrayOutput) ToGetClusterNodePoolNodeConfigArrayOutput() GetClusterNodePoolNodeConfigArrayOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigArrayOutput) ToGetClusterNodePoolNodeConfigArrayOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigArrayOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigArrayOutput) Index(i pulumi.IntInput) GetClusterNodePoolNodeConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNodePoolNodeConfig {
		return vs[0].([]GetClusterNodePoolNodeConfig)[vs[1].(int)]
	}).(GetClusterNodePoolNodeConfigOutput)
}

type GetClusterNodePoolNodeConfigAdvancedMachineFeature struct {
	// Whether the node should have nested virtualization enabled.
	EnableNestedVirtualization bool `pulumi:"enableNestedVirtualization"`
	// The number of threads per physical core. To disable simultaneous multithreading (SMT) set this to 1. If unset, the maximum number of threads supported per core by the underlying processor is assumed.
	ThreadsPerCore int `pulumi:"threadsPerCore"`
}

// GetClusterNodePoolNodeConfigAdvancedMachineFeatureInput is an input type that accepts GetClusterNodePoolNodeConfigAdvancedMachineFeatureArgs and GetClusterNodePoolNodeConfigAdvancedMachineFeatureOutput values.
// You can construct a concrete instance of `GetClusterNodePoolNodeConfigAdvancedMachineFeatureInput` via:
//
//	GetClusterNodePoolNodeConfigAdvancedMachineFeatureArgs{...}
type GetClusterNodePoolNodeConfigAdvancedMachineFeatureInput interface {
	pulumi.Input

	ToGetClusterNodePoolNodeConfigAdvancedMachineFeatureOutput() GetClusterNodePoolNodeConfigAdvancedMachineFeatureOutput
	ToGetClusterNodePoolNodeConfigAdvancedMachineFeatureOutputWithContext(context.Context) GetClusterNodePoolNodeConfigAdvancedMachineFeatureOutput
}

type GetClusterNodePoolNodeConfigAdvancedMachineFeatureArgs struct {
	// Whether the node should have nested virtualization enabled.
	EnableNestedVirtualization pulumi.BoolInput `pulumi:"enableNestedVirtualization"`
	// The number of threads per physical core. To disable simultaneous multithreading (SMT) set this to 1. If unset, the maximum number of threads supported per core by the underlying processor is assumed.
	ThreadsPerCore pulumi.IntInput `pulumi:"threadsPerCore"`
}

func (GetClusterNodePoolNodeConfigAdvancedMachineFeatureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolNodeConfigAdvancedMachineFeature)(nil)).Elem()
}

func (i GetClusterNodePoolNodeConfigAdvancedMachineFeatureArgs) ToGetClusterNodePoolNodeConfigAdvancedMachineFeatureOutput() GetClusterNodePoolNodeConfigAdvancedMachineFeatureOutput {
	return i.ToGetClusterNodePoolNodeConfigAdvancedMachineFeatureOutputWithContext(context.Background())
}

func (i GetClusterNodePoolNodeConfigAdvancedMachineFeatureArgs) ToGetClusterNodePoolNodeConfigAdvancedMachineFeatureOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigAdvancedMachineFeatureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolNodeConfigAdvancedMachineFeatureOutput)
}

// GetClusterNodePoolNodeConfigAdvancedMachineFeatureArrayInput is an input type that accepts GetClusterNodePoolNodeConfigAdvancedMachineFeatureArray and GetClusterNodePoolNodeConfigAdvancedMachineFeatureArrayOutput values.
// You can construct a concrete instance of `GetClusterNodePoolNodeConfigAdvancedMachineFeatureArrayInput` via:
//
//	GetClusterNodePoolNodeConfigAdvancedMachineFeatureArray{ GetClusterNodePoolNodeConfigAdvancedMachineFeatureArgs{...} }
type GetClusterNodePoolNodeConfigAdvancedMachineFeatureArrayInput interface {
	pulumi.Input

	ToGetClusterNodePoolNodeConfigAdvancedMachineFeatureArrayOutput() GetClusterNodePoolNodeConfigAdvancedMachineFeatureArrayOutput
	ToGetClusterNodePoolNodeConfigAdvancedMachineFeatureArrayOutputWithContext(context.Context) GetClusterNodePoolNodeConfigAdvancedMachineFeatureArrayOutput
}

type GetClusterNodePoolNodeConfigAdvancedMachineFeatureArray []GetClusterNodePoolNodeConfigAdvancedMachineFeatureInput

func (GetClusterNodePoolNodeConfigAdvancedMachineFeatureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolNodeConfigAdvancedMachineFeature)(nil)).Elem()
}

func (i GetClusterNodePoolNodeConfigAdvancedMachineFeatureArray) ToGetClusterNodePoolNodeConfigAdvancedMachineFeatureArrayOutput() GetClusterNodePoolNodeConfigAdvancedMachineFeatureArrayOutput {
	return i.ToGetClusterNodePoolNodeConfigAdvancedMachineFeatureArrayOutputWithContext(context.Background())
}

func (i GetClusterNodePoolNodeConfigAdvancedMachineFeatureArray) ToGetClusterNodePoolNodeConfigAdvancedMachineFeatureArrayOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigAdvancedMachineFeatureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolNodeConfigAdvancedMachineFeatureArrayOutput)
}

type GetClusterNodePoolNodeConfigAdvancedMachineFeatureOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolNodeConfigAdvancedMachineFeatureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolNodeConfigAdvancedMachineFeature)(nil)).Elem()
}

func (o GetClusterNodePoolNodeConfigAdvancedMachineFeatureOutput) ToGetClusterNodePoolNodeConfigAdvancedMachineFeatureOutput() GetClusterNodePoolNodeConfigAdvancedMachineFeatureOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigAdvancedMachineFeatureOutput) ToGetClusterNodePoolNodeConfigAdvancedMachineFeatureOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigAdvancedMachineFeatureOutput {
	return o
}

// Whether the node should have nested virtualization enabled.
func (o GetClusterNodePoolNodeConfigAdvancedMachineFeatureOutput) EnableNestedVirtualization() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfigAdvancedMachineFeature) bool { return v.EnableNestedVirtualization }).(pulumi.BoolOutput)
}

// The number of threads per physical core. To disable simultaneous multithreading (SMT) set this to 1. If unset, the maximum number of threads supported per core by the underlying processor is assumed.
func (o GetClusterNodePoolNodeConfigAdvancedMachineFeatureOutput) ThreadsPerCore() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfigAdvancedMachineFeature) int { return v.ThreadsPerCore }).(pulumi.IntOutput)
}

type GetClusterNodePoolNodeConfigAdvancedMachineFeatureArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolNodeConfigAdvancedMachineFeatureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolNodeConfigAdvancedMachineFeature)(nil)).Elem()
}

func (o GetClusterNodePoolNodeConfigAdvancedMachineFeatureArrayOutput) ToGetClusterNodePoolNodeConfigAdvancedMachineFeatureArrayOutput() GetClusterNodePoolNodeConfigAdvancedMachineFeatureArrayOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigAdvancedMachineFeatureArrayOutput) ToGetClusterNodePoolNodeConfigAdvancedMachineFeatureArrayOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigAdvancedMachineFeatureArrayOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigAdvancedMachineFeatureArrayOutput) Index(i pulumi.IntInput) GetClusterNodePoolNodeConfigAdvancedMachineFeatureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNodePoolNodeConfigAdvancedMachineFeature {
		return vs[0].([]GetClusterNodePoolNodeConfigAdvancedMachineFeature)[vs[1].(int)]
	}).(GetClusterNodePoolNodeConfigAdvancedMachineFeatureOutput)
}

type GetClusterNodePoolNodeConfigConfidentialNode struct {
	// Whether Confidential Nodes feature is enabled for all nodes in this pool.
	Enabled bool `pulumi:"enabled"`
}

// GetClusterNodePoolNodeConfigConfidentialNodeInput is an input type that accepts GetClusterNodePoolNodeConfigConfidentialNodeArgs and GetClusterNodePoolNodeConfigConfidentialNodeOutput values.
// You can construct a concrete instance of `GetClusterNodePoolNodeConfigConfidentialNodeInput` via:
//
//	GetClusterNodePoolNodeConfigConfidentialNodeArgs{...}
type GetClusterNodePoolNodeConfigConfidentialNodeInput interface {
	pulumi.Input

	ToGetClusterNodePoolNodeConfigConfidentialNodeOutput() GetClusterNodePoolNodeConfigConfidentialNodeOutput
	ToGetClusterNodePoolNodeConfigConfidentialNodeOutputWithContext(context.Context) GetClusterNodePoolNodeConfigConfidentialNodeOutput
}

type GetClusterNodePoolNodeConfigConfidentialNodeArgs struct {
	// Whether Confidential Nodes feature is enabled for all nodes in this pool.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (GetClusterNodePoolNodeConfigConfidentialNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolNodeConfigConfidentialNode)(nil)).Elem()
}

func (i GetClusterNodePoolNodeConfigConfidentialNodeArgs) ToGetClusterNodePoolNodeConfigConfidentialNodeOutput() GetClusterNodePoolNodeConfigConfidentialNodeOutput {
	return i.ToGetClusterNodePoolNodeConfigConfidentialNodeOutputWithContext(context.Background())
}

func (i GetClusterNodePoolNodeConfigConfidentialNodeArgs) ToGetClusterNodePoolNodeConfigConfidentialNodeOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigConfidentialNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolNodeConfigConfidentialNodeOutput)
}

// GetClusterNodePoolNodeConfigConfidentialNodeArrayInput is an input type that accepts GetClusterNodePoolNodeConfigConfidentialNodeArray and GetClusterNodePoolNodeConfigConfidentialNodeArrayOutput values.
// You can construct a concrete instance of `GetClusterNodePoolNodeConfigConfidentialNodeArrayInput` via:
//
//	GetClusterNodePoolNodeConfigConfidentialNodeArray{ GetClusterNodePoolNodeConfigConfidentialNodeArgs{...} }
type GetClusterNodePoolNodeConfigConfidentialNodeArrayInput interface {
	pulumi.Input

	ToGetClusterNodePoolNodeConfigConfidentialNodeArrayOutput() GetClusterNodePoolNodeConfigConfidentialNodeArrayOutput
	ToGetClusterNodePoolNodeConfigConfidentialNodeArrayOutputWithContext(context.Context) GetClusterNodePoolNodeConfigConfidentialNodeArrayOutput
}

type GetClusterNodePoolNodeConfigConfidentialNodeArray []GetClusterNodePoolNodeConfigConfidentialNodeInput

func (GetClusterNodePoolNodeConfigConfidentialNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolNodeConfigConfidentialNode)(nil)).Elem()
}

func (i GetClusterNodePoolNodeConfigConfidentialNodeArray) ToGetClusterNodePoolNodeConfigConfidentialNodeArrayOutput() GetClusterNodePoolNodeConfigConfidentialNodeArrayOutput {
	return i.ToGetClusterNodePoolNodeConfigConfidentialNodeArrayOutputWithContext(context.Background())
}

func (i GetClusterNodePoolNodeConfigConfidentialNodeArray) ToGetClusterNodePoolNodeConfigConfidentialNodeArrayOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigConfidentialNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolNodeConfigConfidentialNodeArrayOutput)
}

type GetClusterNodePoolNodeConfigConfidentialNodeOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolNodeConfigConfidentialNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolNodeConfigConfidentialNode)(nil)).Elem()
}

func (o GetClusterNodePoolNodeConfigConfidentialNodeOutput) ToGetClusterNodePoolNodeConfigConfidentialNodeOutput() GetClusterNodePoolNodeConfigConfidentialNodeOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigConfidentialNodeOutput) ToGetClusterNodePoolNodeConfigConfidentialNodeOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigConfidentialNodeOutput {
	return o
}

// Whether Confidential Nodes feature is enabled for all nodes in this pool.
func (o GetClusterNodePoolNodeConfigConfidentialNodeOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfigConfidentialNode) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type GetClusterNodePoolNodeConfigConfidentialNodeArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolNodeConfigConfidentialNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolNodeConfigConfidentialNode)(nil)).Elem()
}

func (o GetClusterNodePoolNodeConfigConfidentialNodeArrayOutput) ToGetClusterNodePoolNodeConfigConfidentialNodeArrayOutput() GetClusterNodePoolNodeConfigConfidentialNodeArrayOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigConfidentialNodeArrayOutput) ToGetClusterNodePoolNodeConfigConfidentialNodeArrayOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigConfidentialNodeArrayOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigConfidentialNodeArrayOutput) Index(i pulumi.IntInput) GetClusterNodePoolNodeConfigConfidentialNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNodePoolNodeConfigConfidentialNode {
		return vs[0].([]GetClusterNodePoolNodeConfigConfidentialNode)[vs[1].(int)]
	}).(GetClusterNodePoolNodeConfigConfidentialNodeOutput)
}

type GetClusterNodePoolNodeConfigEffectiveTaint struct {
	// Effect for taint.
	Effect string `pulumi:"effect"`
	// Key for taint.
	Key string `pulumi:"key"`
	// Value for taint.
	Value string `pulumi:"value"`
}

// GetClusterNodePoolNodeConfigEffectiveTaintInput is an input type that accepts GetClusterNodePoolNodeConfigEffectiveTaintArgs and GetClusterNodePoolNodeConfigEffectiveTaintOutput values.
// You can construct a concrete instance of `GetClusterNodePoolNodeConfigEffectiveTaintInput` via:
//
//	GetClusterNodePoolNodeConfigEffectiveTaintArgs{...}
type GetClusterNodePoolNodeConfigEffectiveTaintInput interface {
	pulumi.Input

	ToGetClusterNodePoolNodeConfigEffectiveTaintOutput() GetClusterNodePoolNodeConfigEffectiveTaintOutput
	ToGetClusterNodePoolNodeConfigEffectiveTaintOutputWithContext(context.Context) GetClusterNodePoolNodeConfigEffectiveTaintOutput
}

type GetClusterNodePoolNodeConfigEffectiveTaintArgs struct {
	// Effect for taint.
	Effect pulumi.StringInput `pulumi:"effect"`
	// Key for taint.
	Key pulumi.StringInput `pulumi:"key"`
	// Value for taint.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetClusterNodePoolNodeConfigEffectiveTaintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolNodeConfigEffectiveTaint)(nil)).Elem()
}

func (i GetClusterNodePoolNodeConfigEffectiveTaintArgs) ToGetClusterNodePoolNodeConfigEffectiveTaintOutput() GetClusterNodePoolNodeConfigEffectiveTaintOutput {
	return i.ToGetClusterNodePoolNodeConfigEffectiveTaintOutputWithContext(context.Background())
}

func (i GetClusterNodePoolNodeConfigEffectiveTaintArgs) ToGetClusterNodePoolNodeConfigEffectiveTaintOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigEffectiveTaintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolNodeConfigEffectiveTaintOutput)
}

// GetClusterNodePoolNodeConfigEffectiveTaintArrayInput is an input type that accepts GetClusterNodePoolNodeConfigEffectiveTaintArray and GetClusterNodePoolNodeConfigEffectiveTaintArrayOutput values.
// You can construct a concrete instance of `GetClusterNodePoolNodeConfigEffectiveTaintArrayInput` via:
//
//	GetClusterNodePoolNodeConfigEffectiveTaintArray{ GetClusterNodePoolNodeConfigEffectiveTaintArgs{...} }
type GetClusterNodePoolNodeConfigEffectiveTaintArrayInput interface {
	pulumi.Input

	ToGetClusterNodePoolNodeConfigEffectiveTaintArrayOutput() GetClusterNodePoolNodeConfigEffectiveTaintArrayOutput
	ToGetClusterNodePoolNodeConfigEffectiveTaintArrayOutputWithContext(context.Context) GetClusterNodePoolNodeConfigEffectiveTaintArrayOutput
}

type GetClusterNodePoolNodeConfigEffectiveTaintArray []GetClusterNodePoolNodeConfigEffectiveTaintInput

func (GetClusterNodePoolNodeConfigEffectiveTaintArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolNodeConfigEffectiveTaint)(nil)).Elem()
}

func (i GetClusterNodePoolNodeConfigEffectiveTaintArray) ToGetClusterNodePoolNodeConfigEffectiveTaintArrayOutput() GetClusterNodePoolNodeConfigEffectiveTaintArrayOutput {
	return i.ToGetClusterNodePoolNodeConfigEffectiveTaintArrayOutputWithContext(context.Background())
}

func (i GetClusterNodePoolNodeConfigEffectiveTaintArray) ToGetClusterNodePoolNodeConfigEffectiveTaintArrayOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigEffectiveTaintArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolNodeConfigEffectiveTaintArrayOutput)
}

type GetClusterNodePoolNodeConfigEffectiveTaintOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolNodeConfigEffectiveTaintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolNodeConfigEffectiveTaint)(nil)).Elem()
}

func (o GetClusterNodePoolNodeConfigEffectiveTaintOutput) ToGetClusterNodePoolNodeConfigEffectiveTaintOutput() GetClusterNodePoolNodeConfigEffectiveTaintOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigEffectiveTaintOutput) ToGetClusterNodePoolNodeConfigEffectiveTaintOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigEffectiveTaintOutput {
	return o
}

// Effect for taint.
func (o GetClusterNodePoolNodeConfigEffectiveTaintOutput) Effect() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfigEffectiveTaint) string { return v.Effect }).(pulumi.StringOutput)
}

// Key for taint.
func (o GetClusterNodePoolNodeConfigEffectiveTaintOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfigEffectiveTaint) string { return v.Key }).(pulumi.StringOutput)
}

// Value for taint.
func (o GetClusterNodePoolNodeConfigEffectiveTaintOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfigEffectiveTaint) string { return v.Value }).(pulumi.StringOutput)
}

type GetClusterNodePoolNodeConfigEffectiveTaintArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolNodeConfigEffectiveTaintArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolNodeConfigEffectiveTaint)(nil)).Elem()
}

func (o GetClusterNodePoolNodeConfigEffectiveTaintArrayOutput) ToGetClusterNodePoolNodeConfigEffectiveTaintArrayOutput() GetClusterNodePoolNodeConfigEffectiveTaintArrayOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigEffectiveTaintArrayOutput) ToGetClusterNodePoolNodeConfigEffectiveTaintArrayOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigEffectiveTaintArrayOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigEffectiveTaintArrayOutput) Index(i pulumi.IntInput) GetClusterNodePoolNodeConfigEffectiveTaintOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNodePoolNodeConfigEffectiveTaint {
		return vs[0].([]GetClusterNodePoolNodeConfigEffectiveTaint)[vs[1].(int)]
	}).(GetClusterNodePoolNodeConfigEffectiveTaintOutput)
}

type GetClusterNodePoolNodeConfigEphemeralStorageConfig struct {
	// Number of local SSDs to use to back ephemeral storage. Uses NVMe interfaces. Each local SSD must be 375 or 3000 GB in size, and all local SSDs must share the same size.
	LocalSsdCount int `pulumi:"localSsdCount"`
}

// GetClusterNodePoolNodeConfigEphemeralStorageConfigInput is an input type that accepts GetClusterNodePoolNodeConfigEphemeralStorageConfigArgs and GetClusterNodePoolNodeConfigEphemeralStorageConfigOutput values.
// You can construct a concrete instance of `GetClusterNodePoolNodeConfigEphemeralStorageConfigInput` via:
//
//	GetClusterNodePoolNodeConfigEphemeralStorageConfigArgs{...}
type GetClusterNodePoolNodeConfigEphemeralStorageConfigInput interface {
	pulumi.Input

	ToGetClusterNodePoolNodeConfigEphemeralStorageConfigOutput() GetClusterNodePoolNodeConfigEphemeralStorageConfigOutput
	ToGetClusterNodePoolNodeConfigEphemeralStorageConfigOutputWithContext(context.Context) GetClusterNodePoolNodeConfigEphemeralStorageConfigOutput
}

type GetClusterNodePoolNodeConfigEphemeralStorageConfigArgs struct {
	// Number of local SSDs to use to back ephemeral storage. Uses NVMe interfaces. Each local SSD must be 375 or 3000 GB in size, and all local SSDs must share the same size.
	LocalSsdCount pulumi.IntInput `pulumi:"localSsdCount"`
}

func (GetClusterNodePoolNodeConfigEphemeralStorageConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolNodeConfigEphemeralStorageConfig)(nil)).Elem()
}

func (i GetClusterNodePoolNodeConfigEphemeralStorageConfigArgs) ToGetClusterNodePoolNodeConfigEphemeralStorageConfigOutput() GetClusterNodePoolNodeConfigEphemeralStorageConfigOutput {
	return i.ToGetClusterNodePoolNodeConfigEphemeralStorageConfigOutputWithContext(context.Background())
}

func (i GetClusterNodePoolNodeConfigEphemeralStorageConfigArgs) ToGetClusterNodePoolNodeConfigEphemeralStorageConfigOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigEphemeralStorageConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolNodeConfigEphemeralStorageConfigOutput)
}

// GetClusterNodePoolNodeConfigEphemeralStorageConfigArrayInput is an input type that accepts GetClusterNodePoolNodeConfigEphemeralStorageConfigArray and GetClusterNodePoolNodeConfigEphemeralStorageConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterNodePoolNodeConfigEphemeralStorageConfigArrayInput` via:
//
//	GetClusterNodePoolNodeConfigEphemeralStorageConfigArray{ GetClusterNodePoolNodeConfigEphemeralStorageConfigArgs{...} }
type GetClusterNodePoolNodeConfigEphemeralStorageConfigArrayInput interface {
	pulumi.Input

	ToGetClusterNodePoolNodeConfigEphemeralStorageConfigArrayOutput() GetClusterNodePoolNodeConfigEphemeralStorageConfigArrayOutput
	ToGetClusterNodePoolNodeConfigEphemeralStorageConfigArrayOutputWithContext(context.Context) GetClusterNodePoolNodeConfigEphemeralStorageConfigArrayOutput
}

type GetClusterNodePoolNodeConfigEphemeralStorageConfigArray []GetClusterNodePoolNodeConfigEphemeralStorageConfigInput

func (GetClusterNodePoolNodeConfigEphemeralStorageConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolNodeConfigEphemeralStorageConfig)(nil)).Elem()
}

func (i GetClusterNodePoolNodeConfigEphemeralStorageConfigArray) ToGetClusterNodePoolNodeConfigEphemeralStorageConfigArrayOutput() GetClusterNodePoolNodeConfigEphemeralStorageConfigArrayOutput {
	return i.ToGetClusterNodePoolNodeConfigEphemeralStorageConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterNodePoolNodeConfigEphemeralStorageConfigArray) ToGetClusterNodePoolNodeConfigEphemeralStorageConfigArrayOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigEphemeralStorageConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolNodeConfigEphemeralStorageConfigArrayOutput)
}

type GetClusterNodePoolNodeConfigEphemeralStorageConfigOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolNodeConfigEphemeralStorageConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolNodeConfigEphemeralStorageConfig)(nil)).Elem()
}

func (o GetClusterNodePoolNodeConfigEphemeralStorageConfigOutput) ToGetClusterNodePoolNodeConfigEphemeralStorageConfigOutput() GetClusterNodePoolNodeConfigEphemeralStorageConfigOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigEphemeralStorageConfigOutput) ToGetClusterNodePoolNodeConfigEphemeralStorageConfigOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigEphemeralStorageConfigOutput {
	return o
}

// Number of local SSDs to use to back ephemeral storage. Uses NVMe interfaces. Each local SSD must be 375 or 3000 GB in size, and all local SSDs must share the same size.
func (o GetClusterNodePoolNodeConfigEphemeralStorageConfigOutput) LocalSsdCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfigEphemeralStorageConfig) int { return v.LocalSsdCount }).(pulumi.IntOutput)
}

type GetClusterNodePoolNodeConfigEphemeralStorageConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolNodeConfigEphemeralStorageConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolNodeConfigEphemeralStorageConfig)(nil)).Elem()
}

func (o GetClusterNodePoolNodeConfigEphemeralStorageConfigArrayOutput) ToGetClusterNodePoolNodeConfigEphemeralStorageConfigArrayOutput() GetClusterNodePoolNodeConfigEphemeralStorageConfigArrayOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigEphemeralStorageConfigArrayOutput) ToGetClusterNodePoolNodeConfigEphemeralStorageConfigArrayOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigEphemeralStorageConfigArrayOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigEphemeralStorageConfigArrayOutput) Index(i pulumi.IntInput) GetClusterNodePoolNodeConfigEphemeralStorageConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNodePoolNodeConfigEphemeralStorageConfig {
		return vs[0].([]GetClusterNodePoolNodeConfigEphemeralStorageConfig)[vs[1].(int)]
	}).(GetClusterNodePoolNodeConfigEphemeralStorageConfigOutput)
}

type GetClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfig struct {
	// Number of local SSDs to use to back ephemeral storage. Uses NVMe interfaces. Each local SSD must be 375 or 3000 GB in size, and all local SSDs must share the same size.
	LocalSsdCount int `pulumi:"localSsdCount"`
}

// GetClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigInput is an input type that accepts GetClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigArgs and GetClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigOutput values.
// You can construct a concrete instance of `GetClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigInput` via:
//
//	GetClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigArgs{...}
type GetClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigInput interface {
	pulumi.Input

	ToGetClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigOutput() GetClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigOutput
	ToGetClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigOutputWithContext(context.Context) GetClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigOutput
}

type GetClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigArgs struct {
	// Number of local SSDs to use to back ephemeral storage. Uses NVMe interfaces. Each local SSD must be 375 or 3000 GB in size, and all local SSDs must share the same size.
	LocalSsdCount pulumi.IntInput `pulumi:"localSsdCount"`
}

func (GetClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfig)(nil)).Elem()
}

func (i GetClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigArgs) ToGetClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigOutput() GetClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigOutput {
	return i.ToGetClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigOutputWithContext(context.Background())
}

func (i GetClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigArgs) ToGetClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigOutput)
}

// GetClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigArrayInput is an input type that accepts GetClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigArray and GetClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigArrayInput` via:
//
//	GetClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigArray{ GetClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigArgs{...} }
type GetClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigArrayInput interface {
	pulumi.Input

	ToGetClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigArrayOutput() GetClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigArrayOutput
	ToGetClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigArrayOutputWithContext(context.Context) GetClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigArrayOutput
}

type GetClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigArray []GetClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigInput

func (GetClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfig)(nil)).Elem()
}

func (i GetClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigArray) ToGetClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigArrayOutput() GetClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigArrayOutput {
	return i.ToGetClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigArray) ToGetClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigArrayOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigArrayOutput)
}

type GetClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfig)(nil)).Elem()
}

func (o GetClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigOutput) ToGetClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigOutput() GetClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigOutput) ToGetClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigOutput {
	return o
}

// Number of local SSDs to use to back ephemeral storage. Uses NVMe interfaces. Each local SSD must be 375 or 3000 GB in size, and all local SSDs must share the same size.
func (o GetClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigOutput) LocalSsdCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfig) int { return v.LocalSsdCount }).(pulumi.IntOutput)
}

type GetClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfig)(nil)).Elem()
}

func (o GetClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigArrayOutput) ToGetClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigArrayOutput() GetClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigArrayOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigArrayOutput) ToGetClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigArrayOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigArrayOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigArrayOutput) Index(i pulumi.IntInput) GetClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfig {
		return vs[0].([]GetClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfig)[vs[1].(int)]
	}).(GetClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigOutput)
}

type GetClusterNodePoolNodeConfigFastSocket struct {
	// Whether or not NCCL Fast Socket is enabled
	Enabled bool `pulumi:"enabled"`
}

// GetClusterNodePoolNodeConfigFastSocketInput is an input type that accepts GetClusterNodePoolNodeConfigFastSocketArgs and GetClusterNodePoolNodeConfigFastSocketOutput values.
// You can construct a concrete instance of `GetClusterNodePoolNodeConfigFastSocketInput` via:
//
//	GetClusterNodePoolNodeConfigFastSocketArgs{...}
type GetClusterNodePoolNodeConfigFastSocketInput interface {
	pulumi.Input

	ToGetClusterNodePoolNodeConfigFastSocketOutput() GetClusterNodePoolNodeConfigFastSocketOutput
	ToGetClusterNodePoolNodeConfigFastSocketOutputWithContext(context.Context) GetClusterNodePoolNodeConfigFastSocketOutput
}

type GetClusterNodePoolNodeConfigFastSocketArgs struct {
	// Whether or not NCCL Fast Socket is enabled
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (GetClusterNodePoolNodeConfigFastSocketArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolNodeConfigFastSocket)(nil)).Elem()
}

func (i GetClusterNodePoolNodeConfigFastSocketArgs) ToGetClusterNodePoolNodeConfigFastSocketOutput() GetClusterNodePoolNodeConfigFastSocketOutput {
	return i.ToGetClusterNodePoolNodeConfigFastSocketOutputWithContext(context.Background())
}

func (i GetClusterNodePoolNodeConfigFastSocketArgs) ToGetClusterNodePoolNodeConfigFastSocketOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigFastSocketOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolNodeConfigFastSocketOutput)
}

// GetClusterNodePoolNodeConfigFastSocketArrayInput is an input type that accepts GetClusterNodePoolNodeConfigFastSocketArray and GetClusterNodePoolNodeConfigFastSocketArrayOutput values.
// You can construct a concrete instance of `GetClusterNodePoolNodeConfigFastSocketArrayInput` via:
//
//	GetClusterNodePoolNodeConfigFastSocketArray{ GetClusterNodePoolNodeConfigFastSocketArgs{...} }
type GetClusterNodePoolNodeConfigFastSocketArrayInput interface {
	pulumi.Input

	ToGetClusterNodePoolNodeConfigFastSocketArrayOutput() GetClusterNodePoolNodeConfigFastSocketArrayOutput
	ToGetClusterNodePoolNodeConfigFastSocketArrayOutputWithContext(context.Context) GetClusterNodePoolNodeConfigFastSocketArrayOutput
}

type GetClusterNodePoolNodeConfigFastSocketArray []GetClusterNodePoolNodeConfigFastSocketInput

func (GetClusterNodePoolNodeConfigFastSocketArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolNodeConfigFastSocket)(nil)).Elem()
}

func (i GetClusterNodePoolNodeConfigFastSocketArray) ToGetClusterNodePoolNodeConfigFastSocketArrayOutput() GetClusterNodePoolNodeConfigFastSocketArrayOutput {
	return i.ToGetClusterNodePoolNodeConfigFastSocketArrayOutputWithContext(context.Background())
}

func (i GetClusterNodePoolNodeConfigFastSocketArray) ToGetClusterNodePoolNodeConfigFastSocketArrayOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigFastSocketArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolNodeConfigFastSocketArrayOutput)
}

type GetClusterNodePoolNodeConfigFastSocketOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolNodeConfigFastSocketOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolNodeConfigFastSocket)(nil)).Elem()
}

func (o GetClusterNodePoolNodeConfigFastSocketOutput) ToGetClusterNodePoolNodeConfigFastSocketOutput() GetClusterNodePoolNodeConfigFastSocketOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigFastSocketOutput) ToGetClusterNodePoolNodeConfigFastSocketOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigFastSocketOutput {
	return o
}

// Whether or not NCCL Fast Socket is enabled
func (o GetClusterNodePoolNodeConfigFastSocketOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfigFastSocket) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type GetClusterNodePoolNodeConfigFastSocketArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolNodeConfigFastSocketArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolNodeConfigFastSocket)(nil)).Elem()
}

func (o GetClusterNodePoolNodeConfigFastSocketArrayOutput) ToGetClusterNodePoolNodeConfigFastSocketArrayOutput() GetClusterNodePoolNodeConfigFastSocketArrayOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigFastSocketArrayOutput) ToGetClusterNodePoolNodeConfigFastSocketArrayOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigFastSocketArrayOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigFastSocketArrayOutput) Index(i pulumi.IntInput) GetClusterNodePoolNodeConfigFastSocketOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNodePoolNodeConfigFastSocket {
		return vs[0].([]GetClusterNodePoolNodeConfigFastSocket)[vs[1].(int)]
	}).(GetClusterNodePoolNodeConfigFastSocketOutput)
}

type GetClusterNodePoolNodeConfigGcfsConfig struct {
	// Whether or not GCFS is enabled
	Enabled bool `pulumi:"enabled"`
}

// GetClusterNodePoolNodeConfigGcfsConfigInput is an input type that accepts GetClusterNodePoolNodeConfigGcfsConfigArgs and GetClusterNodePoolNodeConfigGcfsConfigOutput values.
// You can construct a concrete instance of `GetClusterNodePoolNodeConfigGcfsConfigInput` via:
//
//	GetClusterNodePoolNodeConfigGcfsConfigArgs{...}
type GetClusterNodePoolNodeConfigGcfsConfigInput interface {
	pulumi.Input

	ToGetClusterNodePoolNodeConfigGcfsConfigOutput() GetClusterNodePoolNodeConfigGcfsConfigOutput
	ToGetClusterNodePoolNodeConfigGcfsConfigOutputWithContext(context.Context) GetClusterNodePoolNodeConfigGcfsConfigOutput
}

type GetClusterNodePoolNodeConfigGcfsConfigArgs struct {
	// Whether or not GCFS is enabled
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (GetClusterNodePoolNodeConfigGcfsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolNodeConfigGcfsConfig)(nil)).Elem()
}

func (i GetClusterNodePoolNodeConfigGcfsConfigArgs) ToGetClusterNodePoolNodeConfigGcfsConfigOutput() GetClusterNodePoolNodeConfigGcfsConfigOutput {
	return i.ToGetClusterNodePoolNodeConfigGcfsConfigOutputWithContext(context.Background())
}

func (i GetClusterNodePoolNodeConfigGcfsConfigArgs) ToGetClusterNodePoolNodeConfigGcfsConfigOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigGcfsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolNodeConfigGcfsConfigOutput)
}

// GetClusterNodePoolNodeConfigGcfsConfigArrayInput is an input type that accepts GetClusterNodePoolNodeConfigGcfsConfigArray and GetClusterNodePoolNodeConfigGcfsConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterNodePoolNodeConfigGcfsConfigArrayInput` via:
//
//	GetClusterNodePoolNodeConfigGcfsConfigArray{ GetClusterNodePoolNodeConfigGcfsConfigArgs{...} }
type GetClusterNodePoolNodeConfigGcfsConfigArrayInput interface {
	pulumi.Input

	ToGetClusterNodePoolNodeConfigGcfsConfigArrayOutput() GetClusterNodePoolNodeConfigGcfsConfigArrayOutput
	ToGetClusterNodePoolNodeConfigGcfsConfigArrayOutputWithContext(context.Context) GetClusterNodePoolNodeConfigGcfsConfigArrayOutput
}

type GetClusterNodePoolNodeConfigGcfsConfigArray []GetClusterNodePoolNodeConfigGcfsConfigInput

func (GetClusterNodePoolNodeConfigGcfsConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolNodeConfigGcfsConfig)(nil)).Elem()
}

func (i GetClusterNodePoolNodeConfigGcfsConfigArray) ToGetClusterNodePoolNodeConfigGcfsConfigArrayOutput() GetClusterNodePoolNodeConfigGcfsConfigArrayOutput {
	return i.ToGetClusterNodePoolNodeConfigGcfsConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterNodePoolNodeConfigGcfsConfigArray) ToGetClusterNodePoolNodeConfigGcfsConfigArrayOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigGcfsConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolNodeConfigGcfsConfigArrayOutput)
}

type GetClusterNodePoolNodeConfigGcfsConfigOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolNodeConfigGcfsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolNodeConfigGcfsConfig)(nil)).Elem()
}

func (o GetClusterNodePoolNodeConfigGcfsConfigOutput) ToGetClusterNodePoolNodeConfigGcfsConfigOutput() GetClusterNodePoolNodeConfigGcfsConfigOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigGcfsConfigOutput) ToGetClusterNodePoolNodeConfigGcfsConfigOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigGcfsConfigOutput {
	return o
}

// Whether or not GCFS is enabled
func (o GetClusterNodePoolNodeConfigGcfsConfigOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfigGcfsConfig) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type GetClusterNodePoolNodeConfigGcfsConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolNodeConfigGcfsConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolNodeConfigGcfsConfig)(nil)).Elem()
}

func (o GetClusterNodePoolNodeConfigGcfsConfigArrayOutput) ToGetClusterNodePoolNodeConfigGcfsConfigArrayOutput() GetClusterNodePoolNodeConfigGcfsConfigArrayOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigGcfsConfigArrayOutput) ToGetClusterNodePoolNodeConfigGcfsConfigArrayOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigGcfsConfigArrayOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigGcfsConfigArrayOutput) Index(i pulumi.IntInput) GetClusterNodePoolNodeConfigGcfsConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNodePoolNodeConfigGcfsConfig {
		return vs[0].([]GetClusterNodePoolNodeConfigGcfsConfig)[vs[1].(int)]
	}).(GetClusterNodePoolNodeConfigGcfsConfigOutput)
}

type GetClusterNodePoolNodeConfigGuestAccelerator struct {
	// The number of the accelerator cards exposed to an instance.
	Count int `pulumi:"count"`
	// Configuration for auto installation of GPU driver.
	GpuDriverInstallationConfigs []GetClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfig `pulumi:"gpuDriverInstallationConfigs"`
	// Size of partitions to create on the GPU. Valid values are described in the NVIDIA mig user guide (https://docs.nvidia.com/datacenter/tesla/mig-user-guide/#partitioning)
	GpuPartitionSize string `pulumi:"gpuPartitionSize"`
	// Configuration for GPU sharing.
	GpuSharingConfigs []GetClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfig `pulumi:"gpuSharingConfigs"`
	// The accelerator type resource name.
	Type string `pulumi:"type"`
}

// GetClusterNodePoolNodeConfigGuestAcceleratorInput is an input type that accepts GetClusterNodePoolNodeConfigGuestAcceleratorArgs and GetClusterNodePoolNodeConfigGuestAcceleratorOutput values.
// You can construct a concrete instance of `GetClusterNodePoolNodeConfigGuestAcceleratorInput` via:
//
//	GetClusterNodePoolNodeConfigGuestAcceleratorArgs{...}
type GetClusterNodePoolNodeConfigGuestAcceleratorInput interface {
	pulumi.Input

	ToGetClusterNodePoolNodeConfigGuestAcceleratorOutput() GetClusterNodePoolNodeConfigGuestAcceleratorOutput
	ToGetClusterNodePoolNodeConfigGuestAcceleratorOutputWithContext(context.Context) GetClusterNodePoolNodeConfigGuestAcceleratorOutput
}

type GetClusterNodePoolNodeConfigGuestAcceleratorArgs struct {
	// The number of the accelerator cards exposed to an instance.
	Count pulumi.IntInput `pulumi:"count"`
	// Configuration for auto installation of GPU driver.
	GpuDriverInstallationConfigs GetClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigArrayInput `pulumi:"gpuDriverInstallationConfigs"`
	// Size of partitions to create on the GPU. Valid values are described in the NVIDIA mig user guide (https://docs.nvidia.com/datacenter/tesla/mig-user-guide/#partitioning)
	GpuPartitionSize pulumi.StringInput `pulumi:"gpuPartitionSize"`
	// Configuration for GPU sharing.
	GpuSharingConfigs GetClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigArrayInput `pulumi:"gpuSharingConfigs"`
	// The accelerator type resource name.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetClusterNodePoolNodeConfigGuestAcceleratorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolNodeConfigGuestAccelerator)(nil)).Elem()
}

func (i GetClusterNodePoolNodeConfigGuestAcceleratorArgs) ToGetClusterNodePoolNodeConfigGuestAcceleratorOutput() GetClusterNodePoolNodeConfigGuestAcceleratorOutput {
	return i.ToGetClusterNodePoolNodeConfigGuestAcceleratorOutputWithContext(context.Background())
}

func (i GetClusterNodePoolNodeConfigGuestAcceleratorArgs) ToGetClusterNodePoolNodeConfigGuestAcceleratorOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigGuestAcceleratorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolNodeConfigGuestAcceleratorOutput)
}

// GetClusterNodePoolNodeConfigGuestAcceleratorArrayInput is an input type that accepts GetClusterNodePoolNodeConfigGuestAcceleratorArray and GetClusterNodePoolNodeConfigGuestAcceleratorArrayOutput values.
// You can construct a concrete instance of `GetClusterNodePoolNodeConfigGuestAcceleratorArrayInput` via:
//
//	GetClusterNodePoolNodeConfigGuestAcceleratorArray{ GetClusterNodePoolNodeConfigGuestAcceleratorArgs{...} }
type GetClusterNodePoolNodeConfigGuestAcceleratorArrayInput interface {
	pulumi.Input

	ToGetClusterNodePoolNodeConfigGuestAcceleratorArrayOutput() GetClusterNodePoolNodeConfigGuestAcceleratorArrayOutput
	ToGetClusterNodePoolNodeConfigGuestAcceleratorArrayOutputWithContext(context.Context) GetClusterNodePoolNodeConfigGuestAcceleratorArrayOutput
}

type GetClusterNodePoolNodeConfigGuestAcceleratorArray []GetClusterNodePoolNodeConfigGuestAcceleratorInput

func (GetClusterNodePoolNodeConfigGuestAcceleratorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolNodeConfigGuestAccelerator)(nil)).Elem()
}

func (i GetClusterNodePoolNodeConfigGuestAcceleratorArray) ToGetClusterNodePoolNodeConfigGuestAcceleratorArrayOutput() GetClusterNodePoolNodeConfigGuestAcceleratorArrayOutput {
	return i.ToGetClusterNodePoolNodeConfigGuestAcceleratorArrayOutputWithContext(context.Background())
}

func (i GetClusterNodePoolNodeConfigGuestAcceleratorArray) ToGetClusterNodePoolNodeConfigGuestAcceleratorArrayOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigGuestAcceleratorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolNodeConfigGuestAcceleratorArrayOutput)
}

type GetClusterNodePoolNodeConfigGuestAcceleratorOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolNodeConfigGuestAcceleratorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolNodeConfigGuestAccelerator)(nil)).Elem()
}

func (o GetClusterNodePoolNodeConfigGuestAcceleratorOutput) ToGetClusterNodePoolNodeConfigGuestAcceleratorOutput() GetClusterNodePoolNodeConfigGuestAcceleratorOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigGuestAcceleratorOutput) ToGetClusterNodePoolNodeConfigGuestAcceleratorOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigGuestAcceleratorOutput {
	return o
}

// The number of the accelerator cards exposed to an instance.
func (o GetClusterNodePoolNodeConfigGuestAcceleratorOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfigGuestAccelerator) int { return v.Count }).(pulumi.IntOutput)
}

// Configuration for auto installation of GPU driver.
func (o GetClusterNodePoolNodeConfigGuestAcceleratorOutput) GpuDriverInstallationConfigs() GetClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigArrayOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfigGuestAccelerator) []GetClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfig {
		return v.GpuDriverInstallationConfigs
	}).(GetClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigArrayOutput)
}

// Size of partitions to create on the GPU. Valid values are described in the NVIDIA mig user guide (https://docs.nvidia.com/datacenter/tesla/mig-user-guide/#partitioning)
func (o GetClusterNodePoolNodeConfigGuestAcceleratorOutput) GpuPartitionSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfigGuestAccelerator) string { return v.GpuPartitionSize }).(pulumi.StringOutput)
}

// Configuration for GPU sharing.
func (o GetClusterNodePoolNodeConfigGuestAcceleratorOutput) GpuSharingConfigs() GetClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigArrayOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfigGuestAccelerator) []GetClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfig {
		return v.GpuSharingConfigs
	}).(GetClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigArrayOutput)
}

// The accelerator type resource name.
func (o GetClusterNodePoolNodeConfigGuestAcceleratorOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfigGuestAccelerator) string { return v.Type }).(pulumi.StringOutput)
}

type GetClusterNodePoolNodeConfigGuestAcceleratorArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolNodeConfigGuestAcceleratorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolNodeConfigGuestAccelerator)(nil)).Elem()
}

func (o GetClusterNodePoolNodeConfigGuestAcceleratorArrayOutput) ToGetClusterNodePoolNodeConfigGuestAcceleratorArrayOutput() GetClusterNodePoolNodeConfigGuestAcceleratorArrayOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigGuestAcceleratorArrayOutput) ToGetClusterNodePoolNodeConfigGuestAcceleratorArrayOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigGuestAcceleratorArrayOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigGuestAcceleratorArrayOutput) Index(i pulumi.IntInput) GetClusterNodePoolNodeConfigGuestAcceleratorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNodePoolNodeConfigGuestAccelerator {
		return vs[0].([]GetClusterNodePoolNodeConfigGuestAccelerator)[vs[1].(int)]
	}).(GetClusterNodePoolNodeConfigGuestAcceleratorOutput)
}

type GetClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfig struct {
	// Mode for how the GPU driver is installed.
	GpuDriverVersion string `pulumi:"gpuDriverVersion"`
}

// GetClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigInput is an input type that accepts GetClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigArgs and GetClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput values.
// You can construct a concrete instance of `GetClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigInput` via:
//
//	GetClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigArgs{...}
type GetClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigInput interface {
	pulumi.Input

	ToGetClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput() GetClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput
	ToGetClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutputWithContext(context.Context) GetClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput
}

type GetClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigArgs struct {
	// Mode for how the GPU driver is installed.
	GpuDriverVersion pulumi.StringInput `pulumi:"gpuDriverVersion"`
}

func (GetClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfig)(nil)).Elem()
}

func (i GetClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigArgs) ToGetClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput() GetClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput {
	return i.ToGetClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutputWithContext(context.Background())
}

func (i GetClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigArgs) ToGetClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput)
}

// GetClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigArrayInput is an input type that accepts GetClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigArray and GetClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigArrayInput` via:
//
//	GetClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigArray{ GetClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigArgs{...} }
type GetClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigArrayInput interface {
	pulumi.Input

	ToGetClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigArrayOutput() GetClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigArrayOutput
	ToGetClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigArrayOutputWithContext(context.Context) GetClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigArrayOutput
}

type GetClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigArray []GetClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigInput

func (GetClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfig)(nil)).Elem()
}

func (i GetClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigArray) ToGetClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigArrayOutput() GetClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigArrayOutput {
	return i.ToGetClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigArray) ToGetClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigArrayOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigArrayOutput)
}

type GetClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfig)(nil)).Elem()
}

func (o GetClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput) ToGetClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput() GetClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput) ToGetClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput {
	return o
}

// Mode for how the GPU driver is installed.
func (o GetClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput) GpuDriverVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfig) string {
		return v.GpuDriverVersion
	}).(pulumi.StringOutput)
}

type GetClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfig)(nil)).Elem()
}

func (o GetClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigArrayOutput) ToGetClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigArrayOutput() GetClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigArrayOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigArrayOutput) ToGetClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigArrayOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigArrayOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigArrayOutput) Index(i pulumi.IntInput) GetClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfig {
		return vs[0].([]GetClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfig)[vs[1].(int)]
	}).(GetClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput)
}

type GetClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfig struct {
	// The type of GPU sharing strategy to enable on the GPU node. Possible values are described in the API package (https://pkg.go.dev/google.golang.org/api/container/v1#GPUSharingConfig)
	GpuSharingStrategy string `pulumi:"gpuSharingStrategy"`
	// The maximum number of containers that can share a GPU.
	MaxSharedClientsPerGpu int `pulumi:"maxSharedClientsPerGpu"`
}

// GetClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigInput is an input type that accepts GetClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigArgs and GetClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigOutput values.
// You can construct a concrete instance of `GetClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigInput` via:
//
//	GetClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigArgs{...}
type GetClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigInput interface {
	pulumi.Input

	ToGetClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigOutput() GetClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigOutput
	ToGetClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigOutputWithContext(context.Context) GetClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigOutput
}

type GetClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigArgs struct {
	// The type of GPU sharing strategy to enable on the GPU node. Possible values are described in the API package (https://pkg.go.dev/google.golang.org/api/container/v1#GPUSharingConfig)
	GpuSharingStrategy pulumi.StringInput `pulumi:"gpuSharingStrategy"`
	// The maximum number of containers that can share a GPU.
	MaxSharedClientsPerGpu pulumi.IntInput `pulumi:"maxSharedClientsPerGpu"`
}

func (GetClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfig)(nil)).Elem()
}

func (i GetClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigArgs) ToGetClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigOutput() GetClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigOutput {
	return i.ToGetClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigOutputWithContext(context.Background())
}

func (i GetClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigArgs) ToGetClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigOutput)
}

// GetClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigArrayInput is an input type that accepts GetClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigArray and GetClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigArrayInput` via:
//
//	GetClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigArray{ GetClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigArgs{...} }
type GetClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigArrayInput interface {
	pulumi.Input

	ToGetClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigArrayOutput() GetClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigArrayOutput
	ToGetClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigArrayOutputWithContext(context.Context) GetClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigArrayOutput
}

type GetClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigArray []GetClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigInput

func (GetClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfig)(nil)).Elem()
}

func (i GetClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigArray) ToGetClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigArrayOutput() GetClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigArrayOutput {
	return i.ToGetClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigArray) ToGetClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigArrayOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigArrayOutput)
}

type GetClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfig)(nil)).Elem()
}

func (o GetClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigOutput) ToGetClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigOutput() GetClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigOutput) ToGetClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigOutput {
	return o
}

// The type of GPU sharing strategy to enable on the GPU node. Possible values are described in the API package (https://pkg.go.dev/google.golang.org/api/container/v1#GPUSharingConfig)
func (o GetClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigOutput) GpuSharingStrategy() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfig) string {
		return v.GpuSharingStrategy
	}).(pulumi.StringOutput)
}

// The maximum number of containers that can share a GPU.
func (o GetClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigOutput) MaxSharedClientsPerGpu() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfig) int {
		return v.MaxSharedClientsPerGpu
	}).(pulumi.IntOutput)
}

type GetClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfig)(nil)).Elem()
}

func (o GetClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigArrayOutput) ToGetClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigArrayOutput() GetClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigArrayOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigArrayOutput) ToGetClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigArrayOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigArrayOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigArrayOutput) Index(i pulumi.IntInput) GetClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfig {
		return vs[0].([]GetClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfig)[vs[1].(int)]
	}).(GetClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigOutput)
}

type GetClusterNodePoolNodeConfigGvnic struct {
	// Whether or not gvnic is enabled
	Enabled bool `pulumi:"enabled"`
}

// GetClusterNodePoolNodeConfigGvnicInput is an input type that accepts GetClusterNodePoolNodeConfigGvnicArgs and GetClusterNodePoolNodeConfigGvnicOutput values.
// You can construct a concrete instance of `GetClusterNodePoolNodeConfigGvnicInput` via:
//
//	GetClusterNodePoolNodeConfigGvnicArgs{...}
type GetClusterNodePoolNodeConfigGvnicInput interface {
	pulumi.Input

	ToGetClusterNodePoolNodeConfigGvnicOutput() GetClusterNodePoolNodeConfigGvnicOutput
	ToGetClusterNodePoolNodeConfigGvnicOutputWithContext(context.Context) GetClusterNodePoolNodeConfigGvnicOutput
}

type GetClusterNodePoolNodeConfigGvnicArgs struct {
	// Whether or not gvnic is enabled
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (GetClusterNodePoolNodeConfigGvnicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolNodeConfigGvnic)(nil)).Elem()
}

func (i GetClusterNodePoolNodeConfigGvnicArgs) ToGetClusterNodePoolNodeConfigGvnicOutput() GetClusterNodePoolNodeConfigGvnicOutput {
	return i.ToGetClusterNodePoolNodeConfigGvnicOutputWithContext(context.Background())
}

func (i GetClusterNodePoolNodeConfigGvnicArgs) ToGetClusterNodePoolNodeConfigGvnicOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigGvnicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolNodeConfigGvnicOutput)
}

// GetClusterNodePoolNodeConfigGvnicArrayInput is an input type that accepts GetClusterNodePoolNodeConfigGvnicArray and GetClusterNodePoolNodeConfigGvnicArrayOutput values.
// You can construct a concrete instance of `GetClusterNodePoolNodeConfigGvnicArrayInput` via:
//
//	GetClusterNodePoolNodeConfigGvnicArray{ GetClusterNodePoolNodeConfigGvnicArgs{...} }
type GetClusterNodePoolNodeConfigGvnicArrayInput interface {
	pulumi.Input

	ToGetClusterNodePoolNodeConfigGvnicArrayOutput() GetClusterNodePoolNodeConfigGvnicArrayOutput
	ToGetClusterNodePoolNodeConfigGvnicArrayOutputWithContext(context.Context) GetClusterNodePoolNodeConfigGvnicArrayOutput
}

type GetClusterNodePoolNodeConfigGvnicArray []GetClusterNodePoolNodeConfigGvnicInput

func (GetClusterNodePoolNodeConfigGvnicArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolNodeConfigGvnic)(nil)).Elem()
}

func (i GetClusterNodePoolNodeConfigGvnicArray) ToGetClusterNodePoolNodeConfigGvnicArrayOutput() GetClusterNodePoolNodeConfigGvnicArrayOutput {
	return i.ToGetClusterNodePoolNodeConfigGvnicArrayOutputWithContext(context.Background())
}

func (i GetClusterNodePoolNodeConfigGvnicArray) ToGetClusterNodePoolNodeConfigGvnicArrayOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigGvnicArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolNodeConfigGvnicArrayOutput)
}

type GetClusterNodePoolNodeConfigGvnicOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolNodeConfigGvnicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolNodeConfigGvnic)(nil)).Elem()
}

func (o GetClusterNodePoolNodeConfigGvnicOutput) ToGetClusterNodePoolNodeConfigGvnicOutput() GetClusterNodePoolNodeConfigGvnicOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigGvnicOutput) ToGetClusterNodePoolNodeConfigGvnicOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigGvnicOutput {
	return o
}

// Whether or not gvnic is enabled
func (o GetClusterNodePoolNodeConfigGvnicOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfigGvnic) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type GetClusterNodePoolNodeConfigGvnicArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolNodeConfigGvnicArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolNodeConfigGvnic)(nil)).Elem()
}

func (o GetClusterNodePoolNodeConfigGvnicArrayOutput) ToGetClusterNodePoolNodeConfigGvnicArrayOutput() GetClusterNodePoolNodeConfigGvnicArrayOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigGvnicArrayOutput) ToGetClusterNodePoolNodeConfigGvnicArrayOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigGvnicArrayOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigGvnicArrayOutput) Index(i pulumi.IntInput) GetClusterNodePoolNodeConfigGvnicOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNodePoolNodeConfigGvnic {
		return vs[0].([]GetClusterNodePoolNodeConfigGvnic)[vs[1].(int)]
	}).(GetClusterNodePoolNodeConfigGvnicOutput)
}

type GetClusterNodePoolNodeConfigHostMaintenancePolicy struct {
	// .
	MaintenanceInterval string `pulumi:"maintenanceInterval"`
}

// GetClusterNodePoolNodeConfigHostMaintenancePolicyInput is an input type that accepts GetClusterNodePoolNodeConfigHostMaintenancePolicyArgs and GetClusterNodePoolNodeConfigHostMaintenancePolicyOutput values.
// You can construct a concrete instance of `GetClusterNodePoolNodeConfigHostMaintenancePolicyInput` via:
//
//	GetClusterNodePoolNodeConfigHostMaintenancePolicyArgs{...}
type GetClusterNodePoolNodeConfigHostMaintenancePolicyInput interface {
	pulumi.Input

	ToGetClusterNodePoolNodeConfigHostMaintenancePolicyOutput() GetClusterNodePoolNodeConfigHostMaintenancePolicyOutput
	ToGetClusterNodePoolNodeConfigHostMaintenancePolicyOutputWithContext(context.Context) GetClusterNodePoolNodeConfigHostMaintenancePolicyOutput
}

type GetClusterNodePoolNodeConfigHostMaintenancePolicyArgs struct {
	// .
	MaintenanceInterval pulumi.StringInput `pulumi:"maintenanceInterval"`
}

func (GetClusterNodePoolNodeConfigHostMaintenancePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolNodeConfigHostMaintenancePolicy)(nil)).Elem()
}

func (i GetClusterNodePoolNodeConfigHostMaintenancePolicyArgs) ToGetClusterNodePoolNodeConfigHostMaintenancePolicyOutput() GetClusterNodePoolNodeConfigHostMaintenancePolicyOutput {
	return i.ToGetClusterNodePoolNodeConfigHostMaintenancePolicyOutputWithContext(context.Background())
}

func (i GetClusterNodePoolNodeConfigHostMaintenancePolicyArgs) ToGetClusterNodePoolNodeConfigHostMaintenancePolicyOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigHostMaintenancePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolNodeConfigHostMaintenancePolicyOutput)
}

// GetClusterNodePoolNodeConfigHostMaintenancePolicyArrayInput is an input type that accepts GetClusterNodePoolNodeConfigHostMaintenancePolicyArray and GetClusterNodePoolNodeConfigHostMaintenancePolicyArrayOutput values.
// You can construct a concrete instance of `GetClusterNodePoolNodeConfigHostMaintenancePolicyArrayInput` via:
//
//	GetClusterNodePoolNodeConfigHostMaintenancePolicyArray{ GetClusterNodePoolNodeConfigHostMaintenancePolicyArgs{...} }
type GetClusterNodePoolNodeConfigHostMaintenancePolicyArrayInput interface {
	pulumi.Input

	ToGetClusterNodePoolNodeConfigHostMaintenancePolicyArrayOutput() GetClusterNodePoolNodeConfigHostMaintenancePolicyArrayOutput
	ToGetClusterNodePoolNodeConfigHostMaintenancePolicyArrayOutputWithContext(context.Context) GetClusterNodePoolNodeConfigHostMaintenancePolicyArrayOutput
}

type GetClusterNodePoolNodeConfigHostMaintenancePolicyArray []GetClusterNodePoolNodeConfigHostMaintenancePolicyInput

func (GetClusterNodePoolNodeConfigHostMaintenancePolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolNodeConfigHostMaintenancePolicy)(nil)).Elem()
}

func (i GetClusterNodePoolNodeConfigHostMaintenancePolicyArray) ToGetClusterNodePoolNodeConfigHostMaintenancePolicyArrayOutput() GetClusterNodePoolNodeConfigHostMaintenancePolicyArrayOutput {
	return i.ToGetClusterNodePoolNodeConfigHostMaintenancePolicyArrayOutputWithContext(context.Background())
}

func (i GetClusterNodePoolNodeConfigHostMaintenancePolicyArray) ToGetClusterNodePoolNodeConfigHostMaintenancePolicyArrayOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigHostMaintenancePolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolNodeConfigHostMaintenancePolicyArrayOutput)
}

type GetClusterNodePoolNodeConfigHostMaintenancePolicyOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolNodeConfigHostMaintenancePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolNodeConfigHostMaintenancePolicy)(nil)).Elem()
}

func (o GetClusterNodePoolNodeConfigHostMaintenancePolicyOutput) ToGetClusterNodePoolNodeConfigHostMaintenancePolicyOutput() GetClusterNodePoolNodeConfigHostMaintenancePolicyOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigHostMaintenancePolicyOutput) ToGetClusterNodePoolNodeConfigHostMaintenancePolicyOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigHostMaintenancePolicyOutput {
	return o
}

// .
func (o GetClusterNodePoolNodeConfigHostMaintenancePolicyOutput) MaintenanceInterval() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfigHostMaintenancePolicy) string { return v.MaintenanceInterval }).(pulumi.StringOutput)
}

type GetClusterNodePoolNodeConfigHostMaintenancePolicyArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolNodeConfigHostMaintenancePolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolNodeConfigHostMaintenancePolicy)(nil)).Elem()
}

func (o GetClusterNodePoolNodeConfigHostMaintenancePolicyArrayOutput) ToGetClusterNodePoolNodeConfigHostMaintenancePolicyArrayOutput() GetClusterNodePoolNodeConfigHostMaintenancePolicyArrayOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigHostMaintenancePolicyArrayOutput) ToGetClusterNodePoolNodeConfigHostMaintenancePolicyArrayOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigHostMaintenancePolicyArrayOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigHostMaintenancePolicyArrayOutput) Index(i pulumi.IntInput) GetClusterNodePoolNodeConfigHostMaintenancePolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNodePoolNodeConfigHostMaintenancePolicy {
		return vs[0].([]GetClusterNodePoolNodeConfigHostMaintenancePolicy)[vs[1].(int)]
	}).(GetClusterNodePoolNodeConfigHostMaintenancePolicyOutput)
}

type GetClusterNodePoolNodeConfigKubeletConfig struct {
	// Enable CPU CFS quota enforcement for containers that specify CPU limits.
	CpuCfsQuota bool `pulumi:"cpuCfsQuota"`
	// Set the CPU CFS quota period value 'cpu.cfs_period_us'.
	CpuCfsQuotaPeriod string `pulumi:"cpuCfsQuotaPeriod"`
	// Control the CPU management policy on the node.
	CpuManagerPolicy string `pulumi:"cpuManagerPolicy"`
	// Controls the maximum number of processes allowed to run in a pod.
	PodPidsLimit int `pulumi:"podPidsLimit"`
}

// GetClusterNodePoolNodeConfigKubeletConfigInput is an input type that accepts GetClusterNodePoolNodeConfigKubeletConfigArgs and GetClusterNodePoolNodeConfigKubeletConfigOutput values.
// You can construct a concrete instance of `GetClusterNodePoolNodeConfigKubeletConfigInput` via:
//
//	GetClusterNodePoolNodeConfigKubeletConfigArgs{...}
type GetClusterNodePoolNodeConfigKubeletConfigInput interface {
	pulumi.Input

	ToGetClusterNodePoolNodeConfigKubeletConfigOutput() GetClusterNodePoolNodeConfigKubeletConfigOutput
	ToGetClusterNodePoolNodeConfigKubeletConfigOutputWithContext(context.Context) GetClusterNodePoolNodeConfigKubeletConfigOutput
}

type GetClusterNodePoolNodeConfigKubeletConfigArgs struct {
	// Enable CPU CFS quota enforcement for containers that specify CPU limits.
	CpuCfsQuota pulumi.BoolInput `pulumi:"cpuCfsQuota"`
	// Set the CPU CFS quota period value 'cpu.cfs_period_us'.
	CpuCfsQuotaPeriod pulumi.StringInput `pulumi:"cpuCfsQuotaPeriod"`
	// Control the CPU management policy on the node.
	CpuManagerPolicy pulumi.StringInput `pulumi:"cpuManagerPolicy"`
	// Controls the maximum number of processes allowed to run in a pod.
	PodPidsLimit pulumi.IntInput `pulumi:"podPidsLimit"`
}

func (GetClusterNodePoolNodeConfigKubeletConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolNodeConfigKubeletConfig)(nil)).Elem()
}

func (i GetClusterNodePoolNodeConfigKubeletConfigArgs) ToGetClusterNodePoolNodeConfigKubeletConfigOutput() GetClusterNodePoolNodeConfigKubeletConfigOutput {
	return i.ToGetClusterNodePoolNodeConfigKubeletConfigOutputWithContext(context.Background())
}

func (i GetClusterNodePoolNodeConfigKubeletConfigArgs) ToGetClusterNodePoolNodeConfigKubeletConfigOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigKubeletConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolNodeConfigKubeletConfigOutput)
}

// GetClusterNodePoolNodeConfigKubeletConfigArrayInput is an input type that accepts GetClusterNodePoolNodeConfigKubeletConfigArray and GetClusterNodePoolNodeConfigKubeletConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterNodePoolNodeConfigKubeletConfigArrayInput` via:
//
//	GetClusterNodePoolNodeConfigKubeletConfigArray{ GetClusterNodePoolNodeConfigKubeletConfigArgs{...} }
type GetClusterNodePoolNodeConfigKubeletConfigArrayInput interface {
	pulumi.Input

	ToGetClusterNodePoolNodeConfigKubeletConfigArrayOutput() GetClusterNodePoolNodeConfigKubeletConfigArrayOutput
	ToGetClusterNodePoolNodeConfigKubeletConfigArrayOutputWithContext(context.Context) GetClusterNodePoolNodeConfigKubeletConfigArrayOutput
}

type GetClusterNodePoolNodeConfigKubeletConfigArray []GetClusterNodePoolNodeConfigKubeletConfigInput

func (GetClusterNodePoolNodeConfigKubeletConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolNodeConfigKubeletConfig)(nil)).Elem()
}

func (i GetClusterNodePoolNodeConfigKubeletConfigArray) ToGetClusterNodePoolNodeConfigKubeletConfigArrayOutput() GetClusterNodePoolNodeConfigKubeletConfigArrayOutput {
	return i.ToGetClusterNodePoolNodeConfigKubeletConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterNodePoolNodeConfigKubeletConfigArray) ToGetClusterNodePoolNodeConfigKubeletConfigArrayOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigKubeletConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolNodeConfigKubeletConfigArrayOutput)
}

type GetClusterNodePoolNodeConfigKubeletConfigOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolNodeConfigKubeletConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolNodeConfigKubeletConfig)(nil)).Elem()
}

func (o GetClusterNodePoolNodeConfigKubeletConfigOutput) ToGetClusterNodePoolNodeConfigKubeletConfigOutput() GetClusterNodePoolNodeConfigKubeletConfigOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigKubeletConfigOutput) ToGetClusterNodePoolNodeConfigKubeletConfigOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigKubeletConfigOutput {
	return o
}

// Enable CPU CFS quota enforcement for containers that specify CPU limits.
func (o GetClusterNodePoolNodeConfigKubeletConfigOutput) CpuCfsQuota() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfigKubeletConfig) bool { return v.CpuCfsQuota }).(pulumi.BoolOutput)
}

// Set the CPU CFS quota period value 'cpu.cfs_period_us'.
func (o GetClusterNodePoolNodeConfigKubeletConfigOutput) CpuCfsQuotaPeriod() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfigKubeletConfig) string { return v.CpuCfsQuotaPeriod }).(pulumi.StringOutput)
}

// Control the CPU management policy on the node.
func (o GetClusterNodePoolNodeConfigKubeletConfigOutput) CpuManagerPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfigKubeletConfig) string { return v.CpuManagerPolicy }).(pulumi.StringOutput)
}

// Controls the maximum number of processes allowed to run in a pod.
func (o GetClusterNodePoolNodeConfigKubeletConfigOutput) PodPidsLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfigKubeletConfig) int { return v.PodPidsLimit }).(pulumi.IntOutput)
}

type GetClusterNodePoolNodeConfigKubeletConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolNodeConfigKubeletConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolNodeConfigKubeletConfig)(nil)).Elem()
}

func (o GetClusterNodePoolNodeConfigKubeletConfigArrayOutput) ToGetClusterNodePoolNodeConfigKubeletConfigArrayOutput() GetClusterNodePoolNodeConfigKubeletConfigArrayOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigKubeletConfigArrayOutput) ToGetClusterNodePoolNodeConfigKubeletConfigArrayOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigKubeletConfigArrayOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigKubeletConfigArrayOutput) Index(i pulumi.IntInput) GetClusterNodePoolNodeConfigKubeletConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNodePoolNodeConfigKubeletConfig {
		return vs[0].([]GetClusterNodePoolNodeConfigKubeletConfig)[vs[1].(int)]
	}).(GetClusterNodePoolNodeConfigKubeletConfigOutput)
}

type GetClusterNodePoolNodeConfigLinuxNodeConfig struct {
	// cgroupMode specifies the cgroup mode to be used on the node.
	CgroupMode string `pulumi:"cgroupMode"`
	// The Linux kernel parameters to be applied to the nodes and all pods running on the nodes.
	Sysctls map[string]string `pulumi:"sysctls"`
}

// GetClusterNodePoolNodeConfigLinuxNodeConfigInput is an input type that accepts GetClusterNodePoolNodeConfigLinuxNodeConfigArgs and GetClusterNodePoolNodeConfigLinuxNodeConfigOutput values.
// You can construct a concrete instance of `GetClusterNodePoolNodeConfigLinuxNodeConfigInput` via:
//
//	GetClusterNodePoolNodeConfigLinuxNodeConfigArgs{...}
type GetClusterNodePoolNodeConfigLinuxNodeConfigInput interface {
	pulumi.Input

	ToGetClusterNodePoolNodeConfigLinuxNodeConfigOutput() GetClusterNodePoolNodeConfigLinuxNodeConfigOutput
	ToGetClusterNodePoolNodeConfigLinuxNodeConfigOutputWithContext(context.Context) GetClusterNodePoolNodeConfigLinuxNodeConfigOutput
}

type GetClusterNodePoolNodeConfigLinuxNodeConfigArgs struct {
	// cgroupMode specifies the cgroup mode to be used on the node.
	CgroupMode pulumi.StringInput `pulumi:"cgroupMode"`
	// The Linux kernel parameters to be applied to the nodes and all pods running on the nodes.
	Sysctls pulumi.StringMapInput `pulumi:"sysctls"`
}

func (GetClusterNodePoolNodeConfigLinuxNodeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolNodeConfigLinuxNodeConfig)(nil)).Elem()
}

func (i GetClusterNodePoolNodeConfigLinuxNodeConfigArgs) ToGetClusterNodePoolNodeConfigLinuxNodeConfigOutput() GetClusterNodePoolNodeConfigLinuxNodeConfigOutput {
	return i.ToGetClusterNodePoolNodeConfigLinuxNodeConfigOutputWithContext(context.Background())
}

func (i GetClusterNodePoolNodeConfigLinuxNodeConfigArgs) ToGetClusterNodePoolNodeConfigLinuxNodeConfigOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigLinuxNodeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolNodeConfigLinuxNodeConfigOutput)
}

// GetClusterNodePoolNodeConfigLinuxNodeConfigArrayInput is an input type that accepts GetClusterNodePoolNodeConfigLinuxNodeConfigArray and GetClusterNodePoolNodeConfigLinuxNodeConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterNodePoolNodeConfigLinuxNodeConfigArrayInput` via:
//
//	GetClusterNodePoolNodeConfigLinuxNodeConfigArray{ GetClusterNodePoolNodeConfigLinuxNodeConfigArgs{...} }
type GetClusterNodePoolNodeConfigLinuxNodeConfigArrayInput interface {
	pulumi.Input

	ToGetClusterNodePoolNodeConfigLinuxNodeConfigArrayOutput() GetClusterNodePoolNodeConfigLinuxNodeConfigArrayOutput
	ToGetClusterNodePoolNodeConfigLinuxNodeConfigArrayOutputWithContext(context.Context) GetClusterNodePoolNodeConfigLinuxNodeConfigArrayOutput
}

type GetClusterNodePoolNodeConfigLinuxNodeConfigArray []GetClusterNodePoolNodeConfigLinuxNodeConfigInput

func (GetClusterNodePoolNodeConfigLinuxNodeConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolNodeConfigLinuxNodeConfig)(nil)).Elem()
}

func (i GetClusterNodePoolNodeConfigLinuxNodeConfigArray) ToGetClusterNodePoolNodeConfigLinuxNodeConfigArrayOutput() GetClusterNodePoolNodeConfigLinuxNodeConfigArrayOutput {
	return i.ToGetClusterNodePoolNodeConfigLinuxNodeConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterNodePoolNodeConfigLinuxNodeConfigArray) ToGetClusterNodePoolNodeConfigLinuxNodeConfigArrayOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigLinuxNodeConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolNodeConfigLinuxNodeConfigArrayOutput)
}

type GetClusterNodePoolNodeConfigLinuxNodeConfigOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolNodeConfigLinuxNodeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolNodeConfigLinuxNodeConfig)(nil)).Elem()
}

func (o GetClusterNodePoolNodeConfigLinuxNodeConfigOutput) ToGetClusterNodePoolNodeConfigLinuxNodeConfigOutput() GetClusterNodePoolNodeConfigLinuxNodeConfigOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigLinuxNodeConfigOutput) ToGetClusterNodePoolNodeConfigLinuxNodeConfigOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigLinuxNodeConfigOutput {
	return o
}

// cgroupMode specifies the cgroup mode to be used on the node.
func (o GetClusterNodePoolNodeConfigLinuxNodeConfigOutput) CgroupMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfigLinuxNodeConfig) string { return v.CgroupMode }).(pulumi.StringOutput)
}

// The Linux kernel parameters to be applied to the nodes and all pods running on the nodes.
func (o GetClusterNodePoolNodeConfigLinuxNodeConfigOutput) Sysctls() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfigLinuxNodeConfig) map[string]string { return v.Sysctls }).(pulumi.StringMapOutput)
}

type GetClusterNodePoolNodeConfigLinuxNodeConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolNodeConfigLinuxNodeConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolNodeConfigLinuxNodeConfig)(nil)).Elem()
}

func (o GetClusterNodePoolNodeConfigLinuxNodeConfigArrayOutput) ToGetClusterNodePoolNodeConfigLinuxNodeConfigArrayOutput() GetClusterNodePoolNodeConfigLinuxNodeConfigArrayOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigLinuxNodeConfigArrayOutput) ToGetClusterNodePoolNodeConfigLinuxNodeConfigArrayOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigLinuxNodeConfigArrayOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigLinuxNodeConfigArrayOutput) Index(i pulumi.IntInput) GetClusterNodePoolNodeConfigLinuxNodeConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNodePoolNodeConfigLinuxNodeConfig {
		return vs[0].([]GetClusterNodePoolNodeConfigLinuxNodeConfig)[vs[1].(int)]
	}).(GetClusterNodePoolNodeConfigLinuxNodeConfigOutput)
}

type GetClusterNodePoolNodeConfigLocalNvmeSsdBlockConfig struct {
	// Number of raw-block local NVMe SSD disks to be attached to the node. Each local SSD is 375 GB in size.
	LocalSsdCount int `pulumi:"localSsdCount"`
}

// GetClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigInput is an input type that accepts GetClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigArgs and GetClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigOutput values.
// You can construct a concrete instance of `GetClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigInput` via:
//
//	GetClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigArgs{...}
type GetClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigInput interface {
	pulumi.Input

	ToGetClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigOutput() GetClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigOutput
	ToGetClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigOutputWithContext(context.Context) GetClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigOutput
}

type GetClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigArgs struct {
	// Number of raw-block local NVMe SSD disks to be attached to the node. Each local SSD is 375 GB in size.
	LocalSsdCount pulumi.IntInput `pulumi:"localSsdCount"`
}

func (GetClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolNodeConfigLocalNvmeSsdBlockConfig)(nil)).Elem()
}

func (i GetClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigArgs) ToGetClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigOutput() GetClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigOutput {
	return i.ToGetClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigOutputWithContext(context.Background())
}

func (i GetClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigArgs) ToGetClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigOutput)
}

// GetClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigArrayInput is an input type that accepts GetClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigArray and GetClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigArrayInput` via:
//
//	GetClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigArray{ GetClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigArgs{...} }
type GetClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigArrayInput interface {
	pulumi.Input

	ToGetClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigArrayOutput() GetClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigArrayOutput
	ToGetClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigArrayOutputWithContext(context.Context) GetClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigArrayOutput
}

type GetClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigArray []GetClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigInput

func (GetClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolNodeConfigLocalNvmeSsdBlockConfig)(nil)).Elem()
}

func (i GetClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigArray) ToGetClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigArrayOutput() GetClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigArrayOutput {
	return i.ToGetClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigArray) ToGetClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigArrayOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigArrayOutput)
}

type GetClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolNodeConfigLocalNvmeSsdBlockConfig)(nil)).Elem()
}

func (o GetClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigOutput) ToGetClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigOutput() GetClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigOutput) ToGetClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigOutput {
	return o
}

// Number of raw-block local NVMe SSD disks to be attached to the node. Each local SSD is 375 GB in size.
func (o GetClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigOutput) LocalSsdCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfigLocalNvmeSsdBlockConfig) int { return v.LocalSsdCount }).(pulumi.IntOutput)
}

type GetClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolNodeConfigLocalNvmeSsdBlockConfig)(nil)).Elem()
}

func (o GetClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigArrayOutput) ToGetClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigArrayOutput() GetClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigArrayOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigArrayOutput) ToGetClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigArrayOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigArrayOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigArrayOutput) Index(i pulumi.IntInput) GetClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNodePoolNodeConfigLocalNvmeSsdBlockConfig {
		return vs[0].([]GetClusterNodePoolNodeConfigLocalNvmeSsdBlockConfig)[vs[1].(int)]
	}).(GetClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigOutput)
}

type GetClusterNodePoolNodeConfigReservationAffinity struct {
	// Corresponds to the type of reservation consumption.
	ConsumeReservationType string `pulumi:"consumeReservationType"`
	// The label key of a reservation resource.
	Key string `pulumi:"key"`
	// The label values of the reservation resource.
	Values []string `pulumi:"values"`
}

// GetClusterNodePoolNodeConfigReservationAffinityInput is an input type that accepts GetClusterNodePoolNodeConfigReservationAffinityArgs and GetClusterNodePoolNodeConfigReservationAffinityOutput values.
// You can construct a concrete instance of `GetClusterNodePoolNodeConfigReservationAffinityInput` via:
//
//	GetClusterNodePoolNodeConfigReservationAffinityArgs{...}
type GetClusterNodePoolNodeConfigReservationAffinityInput interface {
	pulumi.Input

	ToGetClusterNodePoolNodeConfigReservationAffinityOutput() GetClusterNodePoolNodeConfigReservationAffinityOutput
	ToGetClusterNodePoolNodeConfigReservationAffinityOutputWithContext(context.Context) GetClusterNodePoolNodeConfigReservationAffinityOutput
}

type GetClusterNodePoolNodeConfigReservationAffinityArgs struct {
	// Corresponds to the type of reservation consumption.
	ConsumeReservationType pulumi.StringInput `pulumi:"consumeReservationType"`
	// The label key of a reservation resource.
	Key pulumi.StringInput `pulumi:"key"`
	// The label values of the reservation resource.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetClusterNodePoolNodeConfigReservationAffinityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolNodeConfigReservationAffinity)(nil)).Elem()
}

func (i GetClusterNodePoolNodeConfigReservationAffinityArgs) ToGetClusterNodePoolNodeConfigReservationAffinityOutput() GetClusterNodePoolNodeConfigReservationAffinityOutput {
	return i.ToGetClusterNodePoolNodeConfigReservationAffinityOutputWithContext(context.Background())
}

func (i GetClusterNodePoolNodeConfigReservationAffinityArgs) ToGetClusterNodePoolNodeConfigReservationAffinityOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigReservationAffinityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolNodeConfigReservationAffinityOutput)
}

// GetClusterNodePoolNodeConfigReservationAffinityArrayInput is an input type that accepts GetClusterNodePoolNodeConfigReservationAffinityArray and GetClusterNodePoolNodeConfigReservationAffinityArrayOutput values.
// You can construct a concrete instance of `GetClusterNodePoolNodeConfigReservationAffinityArrayInput` via:
//
//	GetClusterNodePoolNodeConfigReservationAffinityArray{ GetClusterNodePoolNodeConfigReservationAffinityArgs{...} }
type GetClusterNodePoolNodeConfigReservationAffinityArrayInput interface {
	pulumi.Input

	ToGetClusterNodePoolNodeConfigReservationAffinityArrayOutput() GetClusterNodePoolNodeConfigReservationAffinityArrayOutput
	ToGetClusterNodePoolNodeConfigReservationAffinityArrayOutputWithContext(context.Context) GetClusterNodePoolNodeConfigReservationAffinityArrayOutput
}

type GetClusterNodePoolNodeConfigReservationAffinityArray []GetClusterNodePoolNodeConfigReservationAffinityInput

func (GetClusterNodePoolNodeConfigReservationAffinityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolNodeConfigReservationAffinity)(nil)).Elem()
}

func (i GetClusterNodePoolNodeConfigReservationAffinityArray) ToGetClusterNodePoolNodeConfigReservationAffinityArrayOutput() GetClusterNodePoolNodeConfigReservationAffinityArrayOutput {
	return i.ToGetClusterNodePoolNodeConfigReservationAffinityArrayOutputWithContext(context.Background())
}

func (i GetClusterNodePoolNodeConfigReservationAffinityArray) ToGetClusterNodePoolNodeConfigReservationAffinityArrayOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigReservationAffinityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolNodeConfigReservationAffinityArrayOutput)
}

type GetClusterNodePoolNodeConfigReservationAffinityOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolNodeConfigReservationAffinityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolNodeConfigReservationAffinity)(nil)).Elem()
}

func (o GetClusterNodePoolNodeConfigReservationAffinityOutput) ToGetClusterNodePoolNodeConfigReservationAffinityOutput() GetClusterNodePoolNodeConfigReservationAffinityOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigReservationAffinityOutput) ToGetClusterNodePoolNodeConfigReservationAffinityOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigReservationAffinityOutput {
	return o
}

// Corresponds to the type of reservation consumption.
func (o GetClusterNodePoolNodeConfigReservationAffinityOutput) ConsumeReservationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfigReservationAffinity) string { return v.ConsumeReservationType }).(pulumi.StringOutput)
}

// The label key of a reservation resource.
func (o GetClusterNodePoolNodeConfigReservationAffinityOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfigReservationAffinity) string { return v.Key }).(pulumi.StringOutput)
}

// The label values of the reservation resource.
func (o GetClusterNodePoolNodeConfigReservationAffinityOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfigReservationAffinity) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetClusterNodePoolNodeConfigReservationAffinityArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolNodeConfigReservationAffinityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolNodeConfigReservationAffinity)(nil)).Elem()
}

func (o GetClusterNodePoolNodeConfigReservationAffinityArrayOutput) ToGetClusterNodePoolNodeConfigReservationAffinityArrayOutput() GetClusterNodePoolNodeConfigReservationAffinityArrayOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigReservationAffinityArrayOutput) ToGetClusterNodePoolNodeConfigReservationAffinityArrayOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigReservationAffinityArrayOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigReservationAffinityArrayOutput) Index(i pulumi.IntInput) GetClusterNodePoolNodeConfigReservationAffinityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNodePoolNodeConfigReservationAffinity {
		return vs[0].([]GetClusterNodePoolNodeConfigReservationAffinity)[vs[1].(int)]
	}).(GetClusterNodePoolNodeConfigReservationAffinityOutput)
}

type GetClusterNodePoolNodeConfigSandboxConfig struct {
	// Type of the sandbox to use for the node (e.g. 'gvisor')
	SandboxType string `pulumi:"sandboxType"`
}

// GetClusterNodePoolNodeConfigSandboxConfigInput is an input type that accepts GetClusterNodePoolNodeConfigSandboxConfigArgs and GetClusterNodePoolNodeConfigSandboxConfigOutput values.
// You can construct a concrete instance of `GetClusterNodePoolNodeConfigSandboxConfigInput` via:
//
//	GetClusterNodePoolNodeConfigSandboxConfigArgs{...}
type GetClusterNodePoolNodeConfigSandboxConfigInput interface {
	pulumi.Input

	ToGetClusterNodePoolNodeConfigSandboxConfigOutput() GetClusterNodePoolNodeConfigSandboxConfigOutput
	ToGetClusterNodePoolNodeConfigSandboxConfigOutputWithContext(context.Context) GetClusterNodePoolNodeConfigSandboxConfigOutput
}

type GetClusterNodePoolNodeConfigSandboxConfigArgs struct {
	// Type of the sandbox to use for the node (e.g. 'gvisor')
	SandboxType pulumi.StringInput `pulumi:"sandboxType"`
}

func (GetClusterNodePoolNodeConfigSandboxConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolNodeConfigSandboxConfig)(nil)).Elem()
}

func (i GetClusterNodePoolNodeConfigSandboxConfigArgs) ToGetClusterNodePoolNodeConfigSandboxConfigOutput() GetClusterNodePoolNodeConfigSandboxConfigOutput {
	return i.ToGetClusterNodePoolNodeConfigSandboxConfigOutputWithContext(context.Background())
}

func (i GetClusterNodePoolNodeConfigSandboxConfigArgs) ToGetClusterNodePoolNodeConfigSandboxConfigOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigSandboxConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolNodeConfigSandboxConfigOutput)
}

// GetClusterNodePoolNodeConfigSandboxConfigArrayInput is an input type that accepts GetClusterNodePoolNodeConfigSandboxConfigArray and GetClusterNodePoolNodeConfigSandboxConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterNodePoolNodeConfigSandboxConfigArrayInput` via:
//
//	GetClusterNodePoolNodeConfigSandboxConfigArray{ GetClusterNodePoolNodeConfigSandboxConfigArgs{...} }
type GetClusterNodePoolNodeConfigSandboxConfigArrayInput interface {
	pulumi.Input

	ToGetClusterNodePoolNodeConfigSandboxConfigArrayOutput() GetClusterNodePoolNodeConfigSandboxConfigArrayOutput
	ToGetClusterNodePoolNodeConfigSandboxConfigArrayOutputWithContext(context.Context) GetClusterNodePoolNodeConfigSandboxConfigArrayOutput
}

type GetClusterNodePoolNodeConfigSandboxConfigArray []GetClusterNodePoolNodeConfigSandboxConfigInput

func (GetClusterNodePoolNodeConfigSandboxConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolNodeConfigSandboxConfig)(nil)).Elem()
}

func (i GetClusterNodePoolNodeConfigSandboxConfigArray) ToGetClusterNodePoolNodeConfigSandboxConfigArrayOutput() GetClusterNodePoolNodeConfigSandboxConfigArrayOutput {
	return i.ToGetClusterNodePoolNodeConfigSandboxConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterNodePoolNodeConfigSandboxConfigArray) ToGetClusterNodePoolNodeConfigSandboxConfigArrayOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigSandboxConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolNodeConfigSandboxConfigArrayOutput)
}

type GetClusterNodePoolNodeConfigSandboxConfigOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolNodeConfigSandboxConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolNodeConfigSandboxConfig)(nil)).Elem()
}

func (o GetClusterNodePoolNodeConfigSandboxConfigOutput) ToGetClusterNodePoolNodeConfigSandboxConfigOutput() GetClusterNodePoolNodeConfigSandboxConfigOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigSandboxConfigOutput) ToGetClusterNodePoolNodeConfigSandboxConfigOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigSandboxConfigOutput {
	return o
}

// Type of the sandbox to use for the node (e.g. 'gvisor')
func (o GetClusterNodePoolNodeConfigSandboxConfigOutput) SandboxType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfigSandboxConfig) string { return v.SandboxType }).(pulumi.StringOutput)
}

type GetClusterNodePoolNodeConfigSandboxConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolNodeConfigSandboxConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolNodeConfigSandboxConfig)(nil)).Elem()
}

func (o GetClusterNodePoolNodeConfigSandboxConfigArrayOutput) ToGetClusterNodePoolNodeConfigSandboxConfigArrayOutput() GetClusterNodePoolNodeConfigSandboxConfigArrayOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigSandboxConfigArrayOutput) ToGetClusterNodePoolNodeConfigSandboxConfigArrayOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigSandboxConfigArrayOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigSandboxConfigArrayOutput) Index(i pulumi.IntInput) GetClusterNodePoolNodeConfigSandboxConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNodePoolNodeConfigSandboxConfig {
		return vs[0].([]GetClusterNodePoolNodeConfigSandboxConfig)[vs[1].(int)]
	}).(GetClusterNodePoolNodeConfigSandboxConfigOutput)
}

type GetClusterNodePoolNodeConfigSecondaryBootDisk struct {
	// Disk image to create the secondary boot disk from
	DiskImage string `pulumi:"diskImage"`
	// Mode for how the secondary boot disk is used.
	Mode string `pulumi:"mode"`
}

// GetClusterNodePoolNodeConfigSecondaryBootDiskInput is an input type that accepts GetClusterNodePoolNodeConfigSecondaryBootDiskArgs and GetClusterNodePoolNodeConfigSecondaryBootDiskOutput values.
// You can construct a concrete instance of `GetClusterNodePoolNodeConfigSecondaryBootDiskInput` via:
//
//	GetClusterNodePoolNodeConfigSecondaryBootDiskArgs{...}
type GetClusterNodePoolNodeConfigSecondaryBootDiskInput interface {
	pulumi.Input

	ToGetClusterNodePoolNodeConfigSecondaryBootDiskOutput() GetClusterNodePoolNodeConfigSecondaryBootDiskOutput
	ToGetClusterNodePoolNodeConfigSecondaryBootDiskOutputWithContext(context.Context) GetClusterNodePoolNodeConfigSecondaryBootDiskOutput
}

type GetClusterNodePoolNodeConfigSecondaryBootDiskArgs struct {
	// Disk image to create the secondary boot disk from
	DiskImage pulumi.StringInput `pulumi:"diskImage"`
	// Mode for how the secondary boot disk is used.
	Mode pulumi.StringInput `pulumi:"mode"`
}

func (GetClusterNodePoolNodeConfigSecondaryBootDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolNodeConfigSecondaryBootDisk)(nil)).Elem()
}

func (i GetClusterNodePoolNodeConfigSecondaryBootDiskArgs) ToGetClusterNodePoolNodeConfigSecondaryBootDiskOutput() GetClusterNodePoolNodeConfigSecondaryBootDiskOutput {
	return i.ToGetClusterNodePoolNodeConfigSecondaryBootDiskOutputWithContext(context.Background())
}

func (i GetClusterNodePoolNodeConfigSecondaryBootDiskArgs) ToGetClusterNodePoolNodeConfigSecondaryBootDiskOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigSecondaryBootDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolNodeConfigSecondaryBootDiskOutput)
}

// GetClusterNodePoolNodeConfigSecondaryBootDiskArrayInput is an input type that accepts GetClusterNodePoolNodeConfigSecondaryBootDiskArray and GetClusterNodePoolNodeConfigSecondaryBootDiskArrayOutput values.
// You can construct a concrete instance of `GetClusterNodePoolNodeConfigSecondaryBootDiskArrayInput` via:
//
//	GetClusterNodePoolNodeConfigSecondaryBootDiskArray{ GetClusterNodePoolNodeConfigSecondaryBootDiskArgs{...} }
type GetClusterNodePoolNodeConfigSecondaryBootDiskArrayInput interface {
	pulumi.Input

	ToGetClusterNodePoolNodeConfigSecondaryBootDiskArrayOutput() GetClusterNodePoolNodeConfigSecondaryBootDiskArrayOutput
	ToGetClusterNodePoolNodeConfigSecondaryBootDiskArrayOutputWithContext(context.Context) GetClusterNodePoolNodeConfigSecondaryBootDiskArrayOutput
}

type GetClusterNodePoolNodeConfigSecondaryBootDiskArray []GetClusterNodePoolNodeConfigSecondaryBootDiskInput

func (GetClusterNodePoolNodeConfigSecondaryBootDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolNodeConfigSecondaryBootDisk)(nil)).Elem()
}

func (i GetClusterNodePoolNodeConfigSecondaryBootDiskArray) ToGetClusterNodePoolNodeConfigSecondaryBootDiskArrayOutput() GetClusterNodePoolNodeConfigSecondaryBootDiskArrayOutput {
	return i.ToGetClusterNodePoolNodeConfigSecondaryBootDiskArrayOutputWithContext(context.Background())
}

func (i GetClusterNodePoolNodeConfigSecondaryBootDiskArray) ToGetClusterNodePoolNodeConfigSecondaryBootDiskArrayOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigSecondaryBootDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolNodeConfigSecondaryBootDiskArrayOutput)
}

type GetClusterNodePoolNodeConfigSecondaryBootDiskOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolNodeConfigSecondaryBootDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolNodeConfigSecondaryBootDisk)(nil)).Elem()
}

func (o GetClusterNodePoolNodeConfigSecondaryBootDiskOutput) ToGetClusterNodePoolNodeConfigSecondaryBootDiskOutput() GetClusterNodePoolNodeConfigSecondaryBootDiskOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigSecondaryBootDiskOutput) ToGetClusterNodePoolNodeConfigSecondaryBootDiskOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigSecondaryBootDiskOutput {
	return o
}

// Disk image to create the secondary boot disk from
func (o GetClusterNodePoolNodeConfigSecondaryBootDiskOutput) DiskImage() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfigSecondaryBootDisk) string { return v.DiskImage }).(pulumi.StringOutput)
}

// Mode for how the secondary boot disk is used.
func (o GetClusterNodePoolNodeConfigSecondaryBootDiskOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfigSecondaryBootDisk) string { return v.Mode }).(pulumi.StringOutput)
}

type GetClusterNodePoolNodeConfigSecondaryBootDiskArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolNodeConfigSecondaryBootDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolNodeConfigSecondaryBootDisk)(nil)).Elem()
}

func (o GetClusterNodePoolNodeConfigSecondaryBootDiskArrayOutput) ToGetClusterNodePoolNodeConfigSecondaryBootDiskArrayOutput() GetClusterNodePoolNodeConfigSecondaryBootDiskArrayOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigSecondaryBootDiskArrayOutput) ToGetClusterNodePoolNodeConfigSecondaryBootDiskArrayOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigSecondaryBootDiskArrayOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigSecondaryBootDiskArrayOutput) Index(i pulumi.IntInput) GetClusterNodePoolNodeConfigSecondaryBootDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNodePoolNodeConfigSecondaryBootDisk {
		return vs[0].([]GetClusterNodePoolNodeConfigSecondaryBootDisk)[vs[1].(int)]
	}).(GetClusterNodePoolNodeConfigSecondaryBootDiskOutput)
}

type GetClusterNodePoolNodeConfigShieldedInstanceConfig struct {
	// Defines whether the instance has integrity monitoring enabled.
	EnableIntegrityMonitoring bool `pulumi:"enableIntegrityMonitoring"`
	// Defines whether the instance has Secure Boot enabled.
	EnableSecureBoot bool `pulumi:"enableSecureBoot"`
}

// GetClusterNodePoolNodeConfigShieldedInstanceConfigInput is an input type that accepts GetClusterNodePoolNodeConfigShieldedInstanceConfigArgs and GetClusterNodePoolNodeConfigShieldedInstanceConfigOutput values.
// You can construct a concrete instance of `GetClusterNodePoolNodeConfigShieldedInstanceConfigInput` via:
//
//	GetClusterNodePoolNodeConfigShieldedInstanceConfigArgs{...}
type GetClusterNodePoolNodeConfigShieldedInstanceConfigInput interface {
	pulumi.Input

	ToGetClusterNodePoolNodeConfigShieldedInstanceConfigOutput() GetClusterNodePoolNodeConfigShieldedInstanceConfigOutput
	ToGetClusterNodePoolNodeConfigShieldedInstanceConfigOutputWithContext(context.Context) GetClusterNodePoolNodeConfigShieldedInstanceConfigOutput
}

type GetClusterNodePoolNodeConfigShieldedInstanceConfigArgs struct {
	// Defines whether the instance has integrity monitoring enabled.
	EnableIntegrityMonitoring pulumi.BoolInput `pulumi:"enableIntegrityMonitoring"`
	// Defines whether the instance has Secure Boot enabled.
	EnableSecureBoot pulumi.BoolInput `pulumi:"enableSecureBoot"`
}

func (GetClusterNodePoolNodeConfigShieldedInstanceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolNodeConfigShieldedInstanceConfig)(nil)).Elem()
}

func (i GetClusterNodePoolNodeConfigShieldedInstanceConfigArgs) ToGetClusterNodePoolNodeConfigShieldedInstanceConfigOutput() GetClusterNodePoolNodeConfigShieldedInstanceConfigOutput {
	return i.ToGetClusterNodePoolNodeConfigShieldedInstanceConfigOutputWithContext(context.Background())
}

func (i GetClusterNodePoolNodeConfigShieldedInstanceConfigArgs) ToGetClusterNodePoolNodeConfigShieldedInstanceConfigOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigShieldedInstanceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolNodeConfigShieldedInstanceConfigOutput)
}

// GetClusterNodePoolNodeConfigShieldedInstanceConfigArrayInput is an input type that accepts GetClusterNodePoolNodeConfigShieldedInstanceConfigArray and GetClusterNodePoolNodeConfigShieldedInstanceConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterNodePoolNodeConfigShieldedInstanceConfigArrayInput` via:
//
//	GetClusterNodePoolNodeConfigShieldedInstanceConfigArray{ GetClusterNodePoolNodeConfigShieldedInstanceConfigArgs{...} }
type GetClusterNodePoolNodeConfigShieldedInstanceConfigArrayInput interface {
	pulumi.Input

	ToGetClusterNodePoolNodeConfigShieldedInstanceConfigArrayOutput() GetClusterNodePoolNodeConfigShieldedInstanceConfigArrayOutput
	ToGetClusterNodePoolNodeConfigShieldedInstanceConfigArrayOutputWithContext(context.Context) GetClusterNodePoolNodeConfigShieldedInstanceConfigArrayOutput
}

type GetClusterNodePoolNodeConfigShieldedInstanceConfigArray []GetClusterNodePoolNodeConfigShieldedInstanceConfigInput

func (GetClusterNodePoolNodeConfigShieldedInstanceConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolNodeConfigShieldedInstanceConfig)(nil)).Elem()
}

func (i GetClusterNodePoolNodeConfigShieldedInstanceConfigArray) ToGetClusterNodePoolNodeConfigShieldedInstanceConfigArrayOutput() GetClusterNodePoolNodeConfigShieldedInstanceConfigArrayOutput {
	return i.ToGetClusterNodePoolNodeConfigShieldedInstanceConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterNodePoolNodeConfigShieldedInstanceConfigArray) ToGetClusterNodePoolNodeConfigShieldedInstanceConfigArrayOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigShieldedInstanceConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolNodeConfigShieldedInstanceConfigArrayOutput)
}

type GetClusterNodePoolNodeConfigShieldedInstanceConfigOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolNodeConfigShieldedInstanceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolNodeConfigShieldedInstanceConfig)(nil)).Elem()
}

func (o GetClusterNodePoolNodeConfigShieldedInstanceConfigOutput) ToGetClusterNodePoolNodeConfigShieldedInstanceConfigOutput() GetClusterNodePoolNodeConfigShieldedInstanceConfigOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigShieldedInstanceConfigOutput) ToGetClusterNodePoolNodeConfigShieldedInstanceConfigOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigShieldedInstanceConfigOutput {
	return o
}

// Defines whether the instance has integrity monitoring enabled.
func (o GetClusterNodePoolNodeConfigShieldedInstanceConfigOutput) EnableIntegrityMonitoring() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfigShieldedInstanceConfig) bool { return v.EnableIntegrityMonitoring }).(pulumi.BoolOutput)
}

// Defines whether the instance has Secure Boot enabled.
func (o GetClusterNodePoolNodeConfigShieldedInstanceConfigOutput) EnableSecureBoot() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfigShieldedInstanceConfig) bool { return v.EnableSecureBoot }).(pulumi.BoolOutput)
}

type GetClusterNodePoolNodeConfigShieldedInstanceConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolNodeConfigShieldedInstanceConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolNodeConfigShieldedInstanceConfig)(nil)).Elem()
}

func (o GetClusterNodePoolNodeConfigShieldedInstanceConfigArrayOutput) ToGetClusterNodePoolNodeConfigShieldedInstanceConfigArrayOutput() GetClusterNodePoolNodeConfigShieldedInstanceConfigArrayOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigShieldedInstanceConfigArrayOutput) ToGetClusterNodePoolNodeConfigShieldedInstanceConfigArrayOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigShieldedInstanceConfigArrayOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigShieldedInstanceConfigArrayOutput) Index(i pulumi.IntInput) GetClusterNodePoolNodeConfigShieldedInstanceConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNodePoolNodeConfigShieldedInstanceConfig {
		return vs[0].([]GetClusterNodePoolNodeConfigShieldedInstanceConfig)[vs[1].(int)]
	}).(GetClusterNodePoolNodeConfigShieldedInstanceConfigOutput)
}

type GetClusterNodePoolNodeConfigSoleTenantConfig struct {
	// .
	NodeAffinities []GetClusterNodePoolNodeConfigSoleTenantConfigNodeAffinity `pulumi:"nodeAffinities"`
}

// GetClusterNodePoolNodeConfigSoleTenantConfigInput is an input type that accepts GetClusterNodePoolNodeConfigSoleTenantConfigArgs and GetClusterNodePoolNodeConfigSoleTenantConfigOutput values.
// You can construct a concrete instance of `GetClusterNodePoolNodeConfigSoleTenantConfigInput` via:
//
//	GetClusterNodePoolNodeConfigSoleTenantConfigArgs{...}
type GetClusterNodePoolNodeConfigSoleTenantConfigInput interface {
	pulumi.Input

	ToGetClusterNodePoolNodeConfigSoleTenantConfigOutput() GetClusterNodePoolNodeConfigSoleTenantConfigOutput
	ToGetClusterNodePoolNodeConfigSoleTenantConfigOutputWithContext(context.Context) GetClusterNodePoolNodeConfigSoleTenantConfigOutput
}

type GetClusterNodePoolNodeConfigSoleTenantConfigArgs struct {
	// .
	NodeAffinities GetClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArrayInput `pulumi:"nodeAffinities"`
}

func (GetClusterNodePoolNodeConfigSoleTenantConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolNodeConfigSoleTenantConfig)(nil)).Elem()
}

func (i GetClusterNodePoolNodeConfigSoleTenantConfigArgs) ToGetClusterNodePoolNodeConfigSoleTenantConfigOutput() GetClusterNodePoolNodeConfigSoleTenantConfigOutput {
	return i.ToGetClusterNodePoolNodeConfigSoleTenantConfigOutputWithContext(context.Background())
}

func (i GetClusterNodePoolNodeConfigSoleTenantConfigArgs) ToGetClusterNodePoolNodeConfigSoleTenantConfigOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigSoleTenantConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolNodeConfigSoleTenantConfigOutput)
}

// GetClusterNodePoolNodeConfigSoleTenantConfigArrayInput is an input type that accepts GetClusterNodePoolNodeConfigSoleTenantConfigArray and GetClusterNodePoolNodeConfigSoleTenantConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterNodePoolNodeConfigSoleTenantConfigArrayInput` via:
//
//	GetClusterNodePoolNodeConfigSoleTenantConfigArray{ GetClusterNodePoolNodeConfigSoleTenantConfigArgs{...} }
type GetClusterNodePoolNodeConfigSoleTenantConfigArrayInput interface {
	pulumi.Input

	ToGetClusterNodePoolNodeConfigSoleTenantConfigArrayOutput() GetClusterNodePoolNodeConfigSoleTenantConfigArrayOutput
	ToGetClusterNodePoolNodeConfigSoleTenantConfigArrayOutputWithContext(context.Context) GetClusterNodePoolNodeConfigSoleTenantConfigArrayOutput
}

type GetClusterNodePoolNodeConfigSoleTenantConfigArray []GetClusterNodePoolNodeConfigSoleTenantConfigInput

func (GetClusterNodePoolNodeConfigSoleTenantConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolNodeConfigSoleTenantConfig)(nil)).Elem()
}

func (i GetClusterNodePoolNodeConfigSoleTenantConfigArray) ToGetClusterNodePoolNodeConfigSoleTenantConfigArrayOutput() GetClusterNodePoolNodeConfigSoleTenantConfigArrayOutput {
	return i.ToGetClusterNodePoolNodeConfigSoleTenantConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterNodePoolNodeConfigSoleTenantConfigArray) ToGetClusterNodePoolNodeConfigSoleTenantConfigArrayOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigSoleTenantConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolNodeConfigSoleTenantConfigArrayOutput)
}

type GetClusterNodePoolNodeConfigSoleTenantConfigOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolNodeConfigSoleTenantConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolNodeConfigSoleTenantConfig)(nil)).Elem()
}

func (o GetClusterNodePoolNodeConfigSoleTenantConfigOutput) ToGetClusterNodePoolNodeConfigSoleTenantConfigOutput() GetClusterNodePoolNodeConfigSoleTenantConfigOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigSoleTenantConfigOutput) ToGetClusterNodePoolNodeConfigSoleTenantConfigOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigSoleTenantConfigOutput {
	return o
}

// .
func (o GetClusterNodePoolNodeConfigSoleTenantConfigOutput) NodeAffinities() GetClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArrayOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfigSoleTenantConfig) []GetClusterNodePoolNodeConfigSoleTenantConfigNodeAffinity {
		return v.NodeAffinities
	}).(GetClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArrayOutput)
}

type GetClusterNodePoolNodeConfigSoleTenantConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolNodeConfigSoleTenantConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolNodeConfigSoleTenantConfig)(nil)).Elem()
}

func (o GetClusterNodePoolNodeConfigSoleTenantConfigArrayOutput) ToGetClusterNodePoolNodeConfigSoleTenantConfigArrayOutput() GetClusterNodePoolNodeConfigSoleTenantConfigArrayOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigSoleTenantConfigArrayOutput) ToGetClusterNodePoolNodeConfigSoleTenantConfigArrayOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigSoleTenantConfigArrayOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigSoleTenantConfigArrayOutput) Index(i pulumi.IntInput) GetClusterNodePoolNodeConfigSoleTenantConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNodePoolNodeConfigSoleTenantConfig {
		return vs[0].([]GetClusterNodePoolNodeConfigSoleTenantConfig)[vs[1].(int)]
	}).(GetClusterNodePoolNodeConfigSoleTenantConfigOutput)
}

type GetClusterNodePoolNodeConfigSoleTenantConfigNodeAffinity struct {
	// .
	Key string `pulumi:"key"`
	// .
	Operator string `pulumi:"operator"`
	// .
	Values []string `pulumi:"values"`
}

// GetClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityInput is an input type that accepts GetClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArgs and GetClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityOutput values.
// You can construct a concrete instance of `GetClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityInput` via:
//
//	GetClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArgs{...}
type GetClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityInput interface {
	pulumi.Input

	ToGetClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityOutput() GetClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityOutput
	ToGetClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityOutputWithContext(context.Context) GetClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityOutput
}

type GetClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArgs struct {
	// .
	Key pulumi.StringInput `pulumi:"key"`
	// .
	Operator pulumi.StringInput `pulumi:"operator"`
	// .
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolNodeConfigSoleTenantConfigNodeAffinity)(nil)).Elem()
}

func (i GetClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArgs) ToGetClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityOutput() GetClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityOutput {
	return i.ToGetClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityOutputWithContext(context.Background())
}

func (i GetClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArgs) ToGetClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityOutput)
}

// GetClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArrayInput is an input type that accepts GetClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArray and GetClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArrayOutput values.
// You can construct a concrete instance of `GetClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArrayInput` via:
//
//	GetClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArray{ GetClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArgs{...} }
type GetClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArrayInput interface {
	pulumi.Input

	ToGetClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArrayOutput() GetClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArrayOutput
	ToGetClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArrayOutputWithContext(context.Context) GetClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArrayOutput
}

type GetClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArray []GetClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityInput

func (GetClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolNodeConfigSoleTenantConfigNodeAffinity)(nil)).Elem()
}

func (i GetClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArray) ToGetClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArrayOutput() GetClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArrayOutput {
	return i.ToGetClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArrayOutputWithContext(context.Background())
}

func (i GetClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArray) ToGetClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArrayOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArrayOutput)
}

type GetClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolNodeConfigSoleTenantConfigNodeAffinity)(nil)).Elem()
}

func (o GetClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityOutput) ToGetClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityOutput() GetClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityOutput) ToGetClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityOutput {
	return o
}

// .
func (o GetClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfigSoleTenantConfigNodeAffinity) string { return v.Key }).(pulumi.StringOutput)
}

// .
func (o GetClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfigSoleTenantConfigNodeAffinity) string { return v.Operator }).(pulumi.StringOutput)
}

// .
func (o GetClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfigSoleTenantConfigNodeAffinity) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolNodeConfigSoleTenantConfigNodeAffinity)(nil)).Elem()
}

func (o GetClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArrayOutput) ToGetClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArrayOutput() GetClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArrayOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArrayOutput) ToGetClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArrayOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArrayOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArrayOutput) Index(i pulumi.IntInput) GetClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNodePoolNodeConfigSoleTenantConfigNodeAffinity {
		return vs[0].([]GetClusterNodePoolNodeConfigSoleTenantConfigNodeAffinity)[vs[1].(int)]
	}).(GetClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityOutput)
}

type GetClusterNodePoolNodeConfigTaint struct {
	// Effect for taint.
	Effect string `pulumi:"effect"`
	// Key for taint.
	Key string `pulumi:"key"`
	// Value for taint.
	Value string `pulumi:"value"`
}

// GetClusterNodePoolNodeConfigTaintInput is an input type that accepts GetClusterNodePoolNodeConfigTaintArgs and GetClusterNodePoolNodeConfigTaintOutput values.
// You can construct a concrete instance of `GetClusterNodePoolNodeConfigTaintInput` via:
//
//	GetClusterNodePoolNodeConfigTaintArgs{...}
type GetClusterNodePoolNodeConfigTaintInput interface {
	pulumi.Input

	ToGetClusterNodePoolNodeConfigTaintOutput() GetClusterNodePoolNodeConfigTaintOutput
	ToGetClusterNodePoolNodeConfigTaintOutputWithContext(context.Context) GetClusterNodePoolNodeConfigTaintOutput
}

type GetClusterNodePoolNodeConfigTaintArgs struct {
	// Effect for taint.
	Effect pulumi.StringInput `pulumi:"effect"`
	// Key for taint.
	Key pulumi.StringInput `pulumi:"key"`
	// Value for taint.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetClusterNodePoolNodeConfigTaintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolNodeConfigTaint)(nil)).Elem()
}

func (i GetClusterNodePoolNodeConfigTaintArgs) ToGetClusterNodePoolNodeConfigTaintOutput() GetClusterNodePoolNodeConfigTaintOutput {
	return i.ToGetClusterNodePoolNodeConfigTaintOutputWithContext(context.Background())
}

func (i GetClusterNodePoolNodeConfigTaintArgs) ToGetClusterNodePoolNodeConfigTaintOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigTaintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolNodeConfigTaintOutput)
}

// GetClusterNodePoolNodeConfigTaintArrayInput is an input type that accepts GetClusterNodePoolNodeConfigTaintArray and GetClusterNodePoolNodeConfigTaintArrayOutput values.
// You can construct a concrete instance of `GetClusterNodePoolNodeConfigTaintArrayInput` via:
//
//	GetClusterNodePoolNodeConfigTaintArray{ GetClusterNodePoolNodeConfigTaintArgs{...} }
type GetClusterNodePoolNodeConfigTaintArrayInput interface {
	pulumi.Input

	ToGetClusterNodePoolNodeConfigTaintArrayOutput() GetClusterNodePoolNodeConfigTaintArrayOutput
	ToGetClusterNodePoolNodeConfigTaintArrayOutputWithContext(context.Context) GetClusterNodePoolNodeConfigTaintArrayOutput
}

type GetClusterNodePoolNodeConfigTaintArray []GetClusterNodePoolNodeConfigTaintInput

func (GetClusterNodePoolNodeConfigTaintArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolNodeConfigTaint)(nil)).Elem()
}

func (i GetClusterNodePoolNodeConfigTaintArray) ToGetClusterNodePoolNodeConfigTaintArrayOutput() GetClusterNodePoolNodeConfigTaintArrayOutput {
	return i.ToGetClusterNodePoolNodeConfigTaintArrayOutputWithContext(context.Background())
}

func (i GetClusterNodePoolNodeConfigTaintArray) ToGetClusterNodePoolNodeConfigTaintArrayOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigTaintArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolNodeConfigTaintArrayOutput)
}

type GetClusterNodePoolNodeConfigTaintOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolNodeConfigTaintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolNodeConfigTaint)(nil)).Elem()
}

func (o GetClusterNodePoolNodeConfigTaintOutput) ToGetClusterNodePoolNodeConfigTaintOutput() GetClusterNodePoolNodeConfigTaintOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigTaintOutput) ToGetClusterNodePoolNodeConfigTaintOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigTaintOutput {
	return o
}

// Effect for taint.
func (o GetClusterNodePoolNodeConfigTaintOutput) Effect() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfigTaint) string { return v.Effect }).(pulumi.StringOutput)
}

// Key for taint.
func (o GetClusterNodePoolNodeConfigTaintOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfigTaint) string { return v.Key }).(pulumi.StringOutput)
}

// Value for taint.
func (o GetClusterNodePoolNodeConfigTaintOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfigTaint) string { return v.Value }).(pulumi.StringOutput)
}

type GetClusterNodePoolNodeConfigTaintArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolNodeConfigTaintArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolNodeConfigTaint)(nil)).Elem()
}

func (o GetClusterNodePoolNodeConfigTaintArrayOutput) ToGetClusterNodePoolNodeConfigTaintArrayOutput() GetClusterNodePoolNodeConfigTaintArrayOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigTaintArrayOutput) ToGetClusterNodePoolNodeConfigTaintArrayOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigTaintArrayOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigTaintArrayOutput) Index(i pulumi.IntInput) GetClusterNodePoolNodeConfigTaintOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNodePoolNodeConfigTaint {
		return vs[0].([]GetClusterNodePoolNodeConfigTaint)[vs[1].(int)]
	}).(GetClusterNodePoolNodeConfigTaintOutput)
}

type GetClusterNodePoolNodeConfigWorkloadMetadataConfig struct {
	// Mode is the configuration for how to expose metadata to workloads running on the node.
	Mode string `pulumi:"mode"`
}

// GetClusterNodePoolNodeConfigWorkloadMetadataConfigInput is an input type that accepts GetClusterNodePoolNodeConfigWorkloadMetadataConfigArgs and GetClusterNodePoolNodeConfigWorkloadMetadataConfigOutput values.
// You can construct a concrete instance of `GetClusterNodePoolNodeConfigWorkloadMetadataConfigInput` via:
//
//	GetClusterNodePoolNodeConfigWorkloadMetadataConfigArgs{...}
type GetClusterNodePoolNodeConfigWorkloadMetadataConfigInput interface {
	pulumi.Input

	ToGetClusterNodePoolNodeConfigWorkloadMetadataConfigOutput() GetClusterNodePoolNodeConfigWorkloadMetadataConfigOutput
	ToGetClusterNodePoolNodeConfigWorkloadMetadataConfigOutputWithContext(context.Context) GetClusterNodePoolNodeConfigWorkloadMetadataConfigOutput
}

type GetClusterNodePoolNodeConfigWorkloadMetadataConfigArgs struct {
	// Mode is the configuration for how to expose metadata to workloads running on the node.
	Mode pulumi.StringInput `pulumi:"mode"`
}

func (GetClusterNodePoolNodeConfigWorkloadMetadataConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolNodeConfigWorkloadMetadataConfig)(nil)).Elem()
}

func (i GetClusterNodePoolNodeConfigWorkloadMetadataConfigArgs) ToGetClusterNodePoolNodeConfigWorkloadMetadataConfigOutput() GetClusterNodePoolNodeConfigWorkloadMetadataConfigOutput {
	return i.ToGetClusterNodePoolNodeConfigWorkloadMetadataConfigOutputWithContext(context.Background())
}

func (i GetClusterNodePoolNodeConfigWorkloadMetadataConfigArgs) ToGetClusterNodePoolNodeConfigWorkloadMetadataConfigOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigWorkloadMetadataConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolNodeConfigWorkloadMetadataConfigOutput)
}

// GetClusterNodePoolNodeConfigWorkloadMetadataConfigArrayInput is an input type that accepts GetClusterNodePoolNodeConfigWorkloadMetadataConfigArray and GetClusterNodePoolNodeConfigWorkloadMetadataConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterNodePoolNodeConfigWorkloadMetadataConfigArrayInput` via:
//
//	GetClusterNodePoolNodeConfigWorkloadMetadataConfigArray{ GetClusterNodePoolNodeConfigWorkloadMetadataConfigArgs{...} }
type GetClusterNodePoolNodeConfigWorkloadMetadataConfigArrayInput interface {
	pulumi.Input

	ToGetClusterNodePoolNodeConfigWorkloadMetadataConfigArrayOutput() GetClusterNodePoolNodeConfigWorkloadMetadataConfigArrayOutput
	ToGetClusterNodePoolNodeConfigWorkloadMetadataConfigArrayOutputWithContext(context.Context) GetClusterNodePoolNodeConfigWorkloadMetadataConfigArrayOutput
}

type GetClusterNodePoolNodeConfigWorkloadMetadataConfigArray []GetClusterNodePoolNodeConfigWorkloadMetadataConfigInput

func (GetClusterNodePoolNodeConfigWorkloadMetadataConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolNodeConfigWorkloadMetadataConfig)(nil)).Elem()
}

func (i GetClusterNodePoolNodeConfigWorkloadMetadataConfigArray) ToGetClusterNodePoolNodeConfigWorkloadMetadataConfigArrayOutput() GetClusterNodePoolNodeConfigWorkloadMetadataConfigArrayOutput {
	return i.ToGetClusterNodePoolNodeConfigWorkloadMetadataConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterNodePoolNodeConfigWorkloadMetadataConfigArray) ToGetClusterNodePoolNodeConfigWorkloadMetadataConfigArrayOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigWorkloadMetadataConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolNodeConfigWorkloadMetadataConfigArrayOutput)
}

type GetClusterNodePoolNodeConfigWorkloadMetadataConfigOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolNodeConfigWorkloadMetadataConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolNodeConfigWorkloadMetadataConfig)(nil)).Elem()
}

func (o GetClusterNodePoolNodeConfigWorkloadMetadataConfigOutput) ToGetClusterNodePoolNodeConfigWorkloadMetadataConfigOutput() GetClusterNodePoolNodeConfigWorkloadMetadataConfigOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigWorkloadMetadataConfigOutput) ToGetClusterNodePoolNodeConfigWorkloadMetadataConfigOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigWorkloadMetadataConfigOutput {
	return o
}

// Mode is the configuration for how to expose metadata to workloads running on the node.
func (o GetClusterNodePoolNodeConfigWorkloadMetadataConfigOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfigWorkloadMetadataConfig) string { return v.Mode }).(pulumi.StringOutput)
}

type GetClusterNodePoolNodeConfigWorkloadMetadataConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolNodeConfigWorkloadMetadataConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolNodeConfigWorkloadMetadataConfig)(nil)).Elem()
}

func (o GetClusterNodePoolNodeConfigWorkloadMetadataConfigArrayOutput) ToGetClusterNodePoolNodeConfigWorkloadMetadataConfigArrayOutput() GetClusterNodePoolNodeConfigWorkloadMetadataConfigArrayOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigWorkloadMetadataConfigArrayOutput) ToGetClusterNodePoolNodeConfigWorkloadMetadataConfigArrayOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigWorkloadMetadataConfigArrayOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigWorkloadMetadataConfigArrayOutput) Index(i pulumi.IntInput) GetClusterNodePoolNodeConfigWorkloadMetadataConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNodePoolNodeConfigWorkloadMetadataConfig {
		return vs[0].([]GetClusterNodePoolNodeConfigWorkloadMetadataConfig)[vs[1].(int)]
	}).(GetClusterNodePoolNodeConfigWorkloadMetadataConfigOutput)
}

type GetClusterNodePoolPlacementPolicy struct {
	// If set, refers to the name of a custom resource policy supplied by the user. The resource policy must be in the same project and region as the node pool. If not found, InvalidArgument error is returned.
	PolicyName string `pulumi:"policyName"`
	// TPU placement topology for pod slice node pool. https://cloud.google.com/tpu/docs/types-topologies#tpu_topologies
	TpuTopology string `pulumi:"tpuTopology"`
	// Type defines the type of placement policy
	Type string `pulumi:"type"`
}

// GetClusterNodePoolPlacementPolicyInput is an input type that accepts GetClusterNodePoolPlacementPolicyArgs and GetClusterNodePoolPlacementPolicyOutput values.
// You can construct a concrete instance of `GetClusterNodePoolPlacementPolicyInput` via:
//
//	GetClusterNodePoolPlacementPolicyArgs{...}
type GetClusterNodePoolPlacementPolicyInput interface {
	pulumi.Input

	ToGetClusterNodePoolPlacementPolicyOutput() GetClusterNodePoolPlacementPolicyOutput
	ToGetClusterNodePoolPlacementPolicyOutputWithContext(context.Context) GetClusterNodePoolPlacementPolicyOutput
}

type GetClusterNodePoolPlacementPolicyArgs struct {
	// If set, refers to the name of a custom resource policy supplied by the user. The resource policy must be in the same project and region as the node pool. If not found, InvalidArgument error is returned.
	PolicyName pulumi.StringInput `pulumi:"policyName"`
	// TPU placement topology for pod slice node pool. https://cloud.google.com/tpu/docs/types-topologies#tpu_topologies
	TpuTopology pulumi.StringInput `pulumi:"tpuTopology"`
	// Type defines the type of placement policy
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetClusterNodePoolPlacementPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolPlacementPolicy)(nil)).Elem()
}

func (i GetClusterNodePoolPlacementPolicyArgs) ToGetClusterNodePoolPlacementPolicyOutput() GetClusterNodePoolPlacementPolicyOutput {
	return i.ToGetClusterNodePoolPlacementPolicyOutputWithContext(context.Background())
}

func (i GetClusterNodePoolPlacementPolicyArgs) ToGetClusterNodePoolPlacementPolicyOutputWithContext(ctx context.Context) GetClusterNodePoolPlacementPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolPlacementPolicyOutput)
}

// GetClusterNodePoolPlacementPolicyArrayInput is an input type that accepts GetClusterNodePoolPlacementPolicyArray and GetClusterNodePoolPlacementPolicyArrayOutput values.
// You can construct a concrete instance of `GetClusterNodePoolPlacementPolicyArrayInput` via:
//
//	GetClusterNodePoolPlacementPolicyArray{ GetClusterNodePoolPlacementPolicyArgs{...} }
type GetClusterNodePoolPlacementPolicyArrayInput interface {
	pulumi.Input

	ToGetClusterNodePoolPlacementPolicyArrayOutput() GetClusterNodePoolPlacementPolicyArrayOutput
	ToGetClusterNodePoolPlacementPolicyArrayOutputWithContext(context.Context) GetClusterNodePoolPlacementPolicyArrayOutput
}

type GetClusterNodePoolPlacementPolicyArray []GetClusterNodePoolPlacementPolicyInput

func (GetClusterNodePoolPlacementPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolPlacementPolicy)(nil)).Elem()
}

func (i GetClusterNodePoolPlacementPolicyArray) ToGetClusterNodePoolPlacementPolicyArrayOutput() GetClusterNodePoolPlacementPolicyArrayOutput {
	return i.ToGetClusterNodePoolPlacementPolicyArrayOutputWithContext(context.Background())
}

func (i GetClusterNodePoolPlacementPolicyArray) ToGetClusterNodePoolPlacementPolicyArrayOutputWithContext(ctx context.Context) GetClusterNodePoolPlacementPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolPlacementPolicyArrayOutput)
}

type GetClusterNodePoolPlacementPolicyOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolPlacementPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolPlacementPolicy)(nil)).Elem()
}

func (o GetClusterNodePoolPlacementPolicyOutput) ToGetClusterNodePoolPlacementPolicyOutput() GetClusterNodePoolPlacementPolicyOutput {
	return o
}

func (o GetClusterNodePoolPlacementPolicyOutput) ToGetClusterNodePoolPlacementPolicyOutputWithContext(ctx context.Context) GetClusterNodePoolPlacementPolicyOutput {
	return o
}

// If set, refers to the name of a custom resource policy supplied by the user. The resource policy must be in the same project and region as the node pool. If not found, InvalidArgument error is returned.
func (o GetClusterNodePoolPlacementPolicyOutput) PolicyName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodePoolPlacementPolicy) string { return v.PolicyName }).(pulumi.StringOutput)
}

// TPU placement topology for pod slice node pool. https://cloud.google.com/tpu/docs/types-topologies#tpu_topologies
func (o GetClusterNodePoolPlacementPolicyOutput) TpuTopology() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodePoolPlacementPolicy) string { return v.TpuTopology }).(pulumi.StringOutput)
}

// Type defines the type of placement policy
func (o GetClusterNodePoolPlacementPolicyOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodePoolPlacementPolicy) string { return v.Type }).(pulumi.StringOutput)
}

type GetClusterNodePoolPlacementPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolPlacementPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolPlacementPolicy)(nil)).Elem()
}

func (o GetClusterNodePoolPlacementPolicyArrayOutput) ToGetClusterNodePoolPlacementPolicyArrayOutput() GetClusterNodePoolPlacementPolicyArrayOutput {
	return o
}

func (o GetClusterNodePoolPlacementPolicyArrayOutput) ToGetClusterNodePoolPlacementPolicyArrayOutputWithContext(ctx context.Context) GetClusterNodePoolPlacementPolicyArrayOutput {
	return o
}

func (o GetClusterNodePoolPlacementPolicyArrayOutput) Index(i pulumi.IntInput) GetClusterNodePoolPlacementPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNodePoolPlacementPolicy {
		return vs[0].([]GetClusterNodePoolPlacementPolicy)[vs[1].(int)]
	}).(GetClusterNodePoolPlacementPolicyOutput)
}

type GetClusterNodePoolQueuedProvisioning struct {
	// Whether nodes in this node pool are obtainable solely through the ProvisioningRequest API
	Enabled bool `pulumi:"enabled"`
}

// GetClusterNodePoolQueuedProvisioningInput is an input type that accepts GetClusterNodePoolQueuedProvisioningArgs and GetClusterNodePoolQueuedProvisioningOutput values.
// You can construct a concrete instance of `GetClusterNodePoolQueuedProvisioningInput` via:
//
//	GetClusterNodePoolQueuedProvisioningArgs{...}
type GetClusterNodePoolQueuedProvisioningInput interface {
	pulumi.Input

	ToGetClusterNodePoolQueuedProvisioningOutput() GetClusterNodePoolQueuedProvisioningOutput
	ToGetClusterNodePoolQueuedProvisioningOutputWithContext(context.Context) GetClusterNodePoolQueuedProvisioningOutput
}

type GetClusterNodePoolQueuedProvisioningArgs struct {
	// Whether nodes in this node pool are obtainable solely through the ProvisioningRequest API
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (GetClusterNodePoolQueuedProvisioningArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolQueuedProvisioning)(nil)).Elem()
}

func (i GetClusterNodePoolQueuedProvisioningArgs) ToGetClusterNodePoolQueuedProvisioningOutput() GetClusterNodePoolQueuedProvisioningOutput {
	return i.ToGetClusterNodePoolQueuedProvisioningOutputWithContext(context.Background())
}

func (i GetClusterNodePoolQueuedProvisioningArgs) ToGetClusterNodePoolQueuedProvisioningOutputWithContext(ctx context.Context) GetClusterNodePoolQueuedProvisioningOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolQueuedProvisioningOutput)
}

// GetClusterNodePoolQueuedProvisioningArrayInput is an input type that accepts GetClusterNodePoolQueuedProvisioningArray and GetClusterNodePoolQueuedProvisioningArrayOutput values.
// You can construct a concrete instance of `GetClusterNodePoolQueuedProvisioningArrayInput` via:
//
//	GetClusterNodePoolQueuedProvisioningArray{ GetClusterNodePoolQueuedProvisioningArgs{...} }
type GetClusterNodePoolQueuedProvisioningArrayInput interface {
	pulumi.Input

	ToGetClusterNodePoolQueuedProvisioningArrayOutput() GetClusterNodePoolQueuedProvisioningArrayOutput
	ToGetClusterNodePoolQueuedProvisioningArrayOutputWithContext(context.Context) GetClusterNodePoolQueuedProvisioningArrayOutput
}

type GetClusterNodePoolQueuedProvisioningArray []GetClusterNodePoolQueuedProvisioningInput

func (GetClusterNodePoolQueuedProvisioningArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolQueuedProvisioning)(nil)).Elem()
}

func (i GetClusterNodePoolQueuedProvisioningArray) ToGetClusterNodePoolQueuedProvisioningArrayOutput() GetClusterNodePoolQueuedProvisioningArrayOutput {
	return i.ToGetClusterNodePoolQueuedProvisioningArrayOutputWithContext(context.Background())
}

func (i GetClusterNodePoolQueuedProvisioningArray) ToGetClusterNodePoolQueuedProvisioningArrayOutputWithContext(ctx context.Context) GetClusterNodePoolQueuedProvisioningArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolQueuedProvisioningArrayOutput)
}

type GetClusterNodePoolQueuedProvisioningOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolQueuedProvisioningOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolQueuedProvisioning)(nil)).Elem()
}

func (o GetClusterNodePoolQueuedProvisioningOutput) ToGetClusterNodePoolQueuedProvisioningOutput() GetClusterNodePoolQueuedProvisioningOutput {
	return o
}

func (o GetClusterNodePoolQueuedProvisioningOutput) ToGetClusterNodePoolQueuedProvisioningOutputWithContext(ctx context.Context) GetClusterNodePoolQueuedProvisioningOutput {
	return o
}

// Whether nodes in this node pool are obtainable solely through the ProvisioningRequest API
func (o GetClusterNodePoolQueuedProvisioningOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterNodePoolQueuedProvisioning) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type GetClusterNodePoolQueuedProvisioningArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolQueuedProvisioningArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolQueuedProvisioning)(nil)).Elem()
}

func (o GetClusterNodePoolQueuedProvisioningArrayOutput) ToGetClusterNodePoolQueuedProvisioningArrayOutput() GetClusterNodePoolQueuedProvisioningArrayOutput {
	return o
}

func (o GetClusterNodePoolQueuedProvisioningArrayOutput) ToGetClusterNodePoolQueuedProvisioningArrayOutputWithContext(ctx context.Context) GetClusterNodePoolQueuedProvisioningArrayOutput {
	return o
}

func (o GetClusterNodePoolQueuedProvisioningArrayOutput) Index(i pulumi.IntInput) GetClusterNodePoolQueuedProvisioningOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNodePoolQueuedProvisioning {
		return vs[0].([]GetClusterNodePoolQueuedProvisioning)[vs[1].(int)]
	}).(GetClusterNodePoolQueuedProvisioningOutput)
}

type GetClusterNodePoolUpgradeSetting struct {
	// Settings for BlueGreen node pool upgrade.
	BlueGreenSettings []GetClusterNodePoolUpgradeSettingBlueGreenSetting `pulumi:"blueGreenSettings"`
	// The number of additional nodes that can be added to the node pool during an upgrade. Increasing maxSurge raises the number of nodes that can be upgraded simultaneously. Can be set to 0 or greater.
	MaxSurge int `pulumi:"maxSurge"`
	// The number of nodes that can be simultaneously unavailable during an upgrade. Increasing maxUnavailable raises the number of nodes that can be upgraded in parallel. Can be set to 0 or greater.
	MaxUnavailable int `pulumi:"maxUnavailable"`
	// Update strategy for the given nodepool.
	Strategy string `pulumi:"strategy"`
}

// GetClusterNodePoolUpgradeSettingInput is an input type that accepts GetClusterNodePoolUpgradeSettingArgs and GetClusterNodePoolUpgradeSettingOutput values.
// You can construct a concrete instance of `GetClusterNodePoolUpgradeSettingInput` via:
//
//	GetClusterNodePoolUpgradeSettingArgs{...}
type GetClusterNodePoolUpgradeSettingInput interface {
	pulumi.Input

	ToGetClusterNodePoolUpgradeSettingOutput() GetClusterNodePoolUpgradeSettingOutput
	ToGetClusterNodePoolUpgradeSettingOutputWithContext(context.Context) GetClusterNodePoolUpgradeSettingOutput
}

type GetClusterNodePoolUpgradeSettingArgs struct {
	// Settings for BlueGreen node pool upgrade.
	BlueGreenSettings GetClusterNodePoolUpgradeSettingBlueGreenSettingArrayInput `pulumi:"blueGreenSettings"`
	// The number of additional nodes that can be added to the node pool during an upgrade. Increasing maxSurge raises the number of nodes that can be upgraded simultaneously. Can be set to 0 or greater.
	MaxSurge pulumi.IntInput `pulumi:"maxSurge"`
	// The number of nodes that can be simultaneously unavailable during an upgrade. Increasing maxUnavailable raises the number of nodes that can be upgraded in parallel. Can be set to 0 or greater.
	MaxUnavailable pulumi.IntInput `pulumi:"maxUnavailable"`
	// Update strategy for the given nodepool.
	Strategy pulumi.StringInput `pulumi:"strategy"`
}

func (GetClusterNodePoolUpgradeSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolUpgradeSetting)(nil)).Elem()
}

func (i GetClusterNodePoolUpgradeSettingArgs) ToGetClusterNodePoolUpgradeSettingOutput() GetClusterNodePoolUpgradeSettingOutput {
	return i.ToGetClusterNodePoolUpgradeSettingOutputWithContext(context.Background())
}

func (i GetClusterNodePoolUpgradeSettingArgs) ToGetClusterNodePoolUpgradeSettingOutputWithContext(ctx context.Context) GetClusterNodePoolUpgradeSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolUpgradeSettingOutput)
}

// GetClusterNodePoolUpgradeSettingArrayInput is an input type that accepts GetClusterNodePoolUpgradeSettingArray and GetClusterNodePoolUpgradeSettingArrayOutput values.
// You can construct a concrete instance of `GetClusterNodePoolUpgradeSettingArrayInput` via:
//
//	GetClusterNodePoolUpgradeSettingArray{ GetClusterNodePoolUpgradeSettingArgs{...} }
type GetClusterNodePoolUpgradeSettingArrayInput interface {
	pulumi.Input

	ToGetClusterNodePoolUpgradeSettingArrayOutput() GetClusterNodePoolUpgradeSettingArrayOutput
	ToGetClusterNodePoolUpgradeSettingArrayOutputWithContext(context.Context) GetClusterNodePoolUpgradeSettingArrayOutput
}

type GetClusterNodePoolUpgradeSettingArray []GetClusterNodePoolUpgradeSettingInput

func (GetClusterNodePoolUpgradeSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolUpgradeSetting)(nil)).Elem()
}

func (i GetClusterNodePoolUpgradeSettingArray) ToGetClusterNodePoolUpgradeSettingArrayOutput() GetClusterNodePoolUpgradeSettingArrayOutput {
	return i.ToGetClusterNodePoolUpgradeSettingArrayOutputWithContext(context.Background())
}

func (i GetClusterNodePoolUpgradeSettingArray) ToGetClusterNodePoolUpgradeSettingArrayOutputWithContext(ctx context.Context) GetClusterNodePoolUpgradeSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolUpgradeSettingArrayOutput)
}

type GetClusterNodePoolUpgradeSettingOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolUpgradeSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolUpgradeSetting)(nil)).Elem()
}

func (o GetClusterNodePoolUpgradeSettingOutput) ToGetClusterNodePoolUpgradeSettingOutput() GetClusterNodePoolUpgradeSettingOutput {
	return o
}

func (o GetClusterNodePoolUpgradeSettingOutput) ToGetClusterNodePoolUpgradeSettingOutputWithContext(ctx context.Context) GetClusterNodePoolUpgradeSettingOutput {
	return o
}

// Settings for BlueGreen node pool upgrade.
func (o GetClusterNodePoolUpgradeSettingOutput) BlueGreenSettings() GetClusterNodePoolUpgradeSettingBlueGreenSettingArrayOutput {
	return o.ApplyT(func(v GetClusterNodePoolUpgradeSetting) []GetClusterNodePoolUpgradeSettingBlueGreenSetting {
		return v.BlueGreenSettings
	}).(GetClusterNodePoolUpgradeSettingBlueGreenSettingArrayOutput)
}

// The number of additional nodes that can be added to the node pool during an upgrade. Increasing maxSurge raises the number of nodes that can be upgraded simultaneously. Can be set to 0 or greater.
func (o GetClusterNodePoolUpgradeSettingOutput) MaxSurge() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterNodePoolUpgradeSetting) int { return v.MaxSurge }).(pulumi.IntOutput)
}

// The number of nodes that can be simultaneously unavailable during an upgrade. Increasing maxUnavailable raises the number of nodes that can be upgraded in parallel. Can be set to 0 or greater.
func (o GetClusterNodePoolUpgradeSettingOutput) MaxUnavailable() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterNodePoolUpgradeSetting) int { return v.MaxUnavailable }).(pulumi.IntOutput)
}

// Update strategy for the given nodepool.
func (o GetClusterNodePoolUpgradeSettingOutput) Strategy() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodePoolUpgradeSetting) string { return v.Strategy }).(pulumi.StringOutput)
}

type GetClusterNodePoolUpgradeSettingArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolUpgradeSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolUpgradeSetting)(nil)).Elem()
}

func (o GetClusterNodePoolUpgradeSettingArrayOutput) ToGetClusterNodePoolUpgradeSettingArrayOutput() GetClusterNodePoolUpgradeSettingArrayOutput {
	return o
}

func (o GetClusterNodePoolUpgradeSettingArrayOutput) ToGetClusterNodePoolUpgradeSettingArrayOutputWithContext(ctx context.Context) GetClusterNodePoolUpgradeSettingArrayOutput {
	return o
}

func (o GetClusterNodePoolUpgradeSettingArrayOutput) Index(i pulumi.IntInput) GetClusterNodePoolUpgradeSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNodePoolUpgradeSetting {
		return vs[0].([]GetClusterNodePoolUpgradeSetting)[vs[1].(int)]
	}).(GetClusterNodePoolUpgradeSettingOutput)
}

type GetClusterNodePoolUpgradeSettingBlueGreenSetting struct {
	// Time needed after draining entire blue pool. After this period, blue pool will be cleaned up.
	NodePoolSoakDuration string `pulumi:"nodePoolSoakDuration"`
	// Standard rollout policy is the default policy for blue-green.
	StandardRolloutPolicies []GetClusterNodePoolUpgradeSettingBlueGreenSettingStandardRolloutPolicy `pulumi:"standardRolloutPolicies"`
}

// GetClusterNodePoolUpgradeSettingBlueGreenSettingInput is an input type that accepts GetClusterNodePoolUpgradeSettingBlueGreenSettingArgs and GetClusterNodePoolUpgradeSettingBlueGreenSettingOutput values.
// You can construct a concrete instance of `GetClusterNodePoolUpgradeSettingBlueGreenSettingInput` via:
//
//	GetClusterNodePoolUpgradeSettingBlueGreenSettingArgs{...}
type GetClusterNodePoolUpgradeSettingBlueGreenSettingInput interface {
	pulumi.Input

	ToGetClusterNodePoolUpgradeSettingBlueGreenSettingOutput() GetClusterNodePoolUpgradeSettingBlueGreenSettingOutput
	ToGetClusterNodePoolUpgradeSettingBlueGreenSettingOutputWithContext(context.Context) GetClusterNodePoolUpgradeSettingBlueGreenSettingOutput
}

type GetClusterNodePoolUpgradeSettingBlueGreenSettingArgs struct {
	// Time needed after draining entire blue pool. After this period, blue pool will be cleaned up.
	NodePoolSoakDuration pulumi.StringInput `pulumi:"nodePoolSoakDuration"`
	// Standard rollout policy is the default policy for blue-green.
	StandardRolloutPolicies GetClusterNodePoolUpgradeSettingBlueGreenSettingStandardRolloutPolicyArrayInput `pulumi:"standardRolloutPolicies"`
}

func (GetClusterNodePoolUpgradeSettingBlueGreenSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolUpgradeSettingBlueGreenSetting)(nil)).Elem()
}

func (i GetClusterNodePoolUpgradeSettingBlueGreenSettingArgs) ToGetClusterNodePoolUpgradeSettingBlueGreenSettingOutput() GetClusterNodePoolUpgradeSettingBlueGreenSettingOutput {
	return i.ToGetClusterNodePoolUpgradeSettingBlueGreenSettingOutputWithContext(context.Background())
}

func (i GetClusterNodePoolUpgradeSettingBlueGreenSettingArgs) ToGetClusterNodePoolUpgradeSettingBlueGreenSettingOutputWithContext(ctx context.Context) GetClusterNodePoolUpgradeSettingBlueGreenSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolUpgradeSettingBlueGreenSettingOutput)
}

// GetClusterNodePoolUpgradeSettingBlueGreenSettingArrayInput is an input type that accepts GetClusterNodePoolUpgradeSettingBlueGreenSettingArray and GetClusterNodePoolUpgradeSettingBlueGreenSettingArrayOutput values.
// You can construct a concrete instance of `GetClusterNodePoolUpgradeSettingBlueGreenSettingArrayInput` via:
//
//	GetClusterNodePoolUpgradeSettingBlueGreenSettingArray{ GetClusterNodePoolUpgradeSettingBlueGreenSettingArgs{...} }
type GetClusterNodePoolUpgradeSettingBlueGreenSettingArrayInput interface {
	pulumi.Input

	ToGetClusterNodePoolUpgradeSettingBlueGreenSettingArrayOutput() GetClusterNodePoolUpgradeSettingBlueGreenSettingArrayOutput
	ToGetClusterNodePoolUpgradeSettingBlueGreenSettingArrayOutputWithContext(context.Context) GetClusterNodePoolUpgradeSettingBlueGreenSettingArrayOutput
}

type GetClusterNodePoolUpgradeSettingBlueGreenSettingArray []GetClusterNodePoolUpgradeSettingBlueGreenSettingInput

func (GetClusterNodePoolUpgradeSettingBlueGreenSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolUpgradeSettingBlueGreenSetting)(nil)).Elem()
}

func (i GetClusterNodePoolUpgradeSettingBlueGreenSettingArray) ToGetClusterNodePoolUpgradeSettingBlueGreenSettingArrayOutput() GetClusterNodePoolUpgradeSettingBlueGreenSettingArrayOutput {
	return i.ToGetClusterNodePoolUpgradeSettingBlueGreenSettingArrayOutputWithContext(context.Background())
}

func (i GetClusterNodePoolUpgradeSettingBlueGreenSettingArray) ToGetClusterNodePoolUpgradeSettingBlueGreenSettingArrayOutputWithContext(ctx context.Context) GetClusterNodePoolUpgradeSettingBlueGreenSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolUpgradeSettingBlueGreenSettingArrayOutput)
}

type GetClusterNodePoolUpgradeSettingBlueGreenSettingOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolUpgradeSettingBlueGreenSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolUpgradeSettingBlueGreenSetting)(nil)).Elem()
}

func (o GetClusterNodePoolUpgradeSettingBlueGreenSettingOutput) ToGetClusterNodePoolUpgradeSettingBlueGreenSettingOutput() GetClusterNodePoolUpgradeSettingBlueGreenSettingOutput {
	return o
}

func (o GetClusterNodePoolUpgradeSettingBlueGreenSettingOutput) ToGetClusterNodePoolUpgradeSettingBlueGreenSettingOutputWithContext(ctx context.Context) GetClusterNodePoolUpgradeSettingBlueGreenSettingOutput {
	return o
}

// Time needed after draining entire blue pool. After this period, blue pool will be cleaned up.
func (o GetClusterNodePoolUpgradeSettingBlueGreenSettingOutput) NodePoolSoakDuration() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodePoolUpgradeSettingBlueGreenSetting) string { return v.NodePoolSoakDuration }).(pulumi.StringOutput)
}

// Standard rollout policy is the default policy for blue-green.
func (o GetClusterNodePoolUpgradeSettingBlueGreenSettingOutput) StandardRolloutPolicies() GetClusterNodePoolUpgradeSettingBlueGreenSettingStandardRolloutPolicyArrayOutput {
	return o.ApplyT(func(v GetClusterNodePoolUpgradeSettingBlueGreenSetting) []GetClusterNodePoolUpgradeSettingBlueGreenSettingStandardRolloutPolicy {
		return v.StandardRolloutPolicies
	}).(GetClusterNodePoolUpgradeSettingBlueGreenSettingStandardRolloutPolicyArrayOutput)
}

type GetClusterNodePoolUpgradeSettingBlueGreenSettingArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolUpgradeSettingBlueGreenSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolUpgradeSettingBlueGreenSetting)(nil)).Elem()
}

func (o GetClusterNodePoolUpgradeSettingBlueGreenSettingArrayOutput) ToGetClusterNodePoolUpgradeSettingBlueGreenSettingArrayOutput() GetClusterNodePoolUpgradeSettingBlueGreenSettingArrayOutput {
	return o
}

func (o GetClusterNodePoolUpgradeSettingBlueGreenSettingArrayOutput) ToGetClusterNodePoolUpgradeSettingBlueGreenSettingArrayOutputWithContext(ctx context.Context) GetClusterNodePoolUpgradeSettingBlueGreenSettingArrayOutput {
	return o
}

func (o GetClusterNodePoolUpgradeSettingBlueGreenSettingArrayOutput) Index(i pulumi.IntInput) GetClusterNodePoolUpgradeSettingBlueGreenSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNodePoolUpgradeSettingBlueGreenSetting {
		return vs[0].([]GetClusterNodePoolUpgradeSettingBlueGreenSetting)[vs[1].(int)]
	}).(GetClusterNodePoolUpgradeSettingBlueGreenSettingOutput)
}

type GetClusterNodePoolUpgradeSettingBlueGreenSettingStandardRolloutPolicy struct {
	// Number of blue nodes to drain in a batch.
	BatchNodeCount int `pulumi:"batchNodeCount"`
	// Percentage of the blue pool nodes to drain in a batch.
	BatchPercentage float64 `pulumi:"batchPercentage"`
	// Soak time after each batch gets drained.
	BatchSoakDuration string `pulumi:"batchSoakDuration"`
}

// GetClusterNodePoolUpgradeSettingBlueGreenSettingStandardRolloutPolicyInput is an input type that accepts GetClusterNodePoolUpgradeSettingBlueGreenSettingStandardRolloutPolicyArgs and GetClusterNodePoolUpgradeSettingBlueGreenSettingStandardRolloutPolicyOutput values.
// You can construct a concrete instance of `GetClusterNodePoolUpgradeSettingBlueGreenSettingStandardRolloutPolicyInput` via:
//
//	GetClusterNodePoolUpgradeSettingBlueGreenSettingStandardRolloutPolicyArgs{...}
type GetClusterNodePoolUpgradeSettingBlueGreenSettingStandardRolloutPolicyInput interface {
	pulumi.Input

	ToGetClusterNodePoolUpgradeSettingBlueGreenSettingStandardRolloutPolicyOutput() GetClusterNodePoolUpgradeSettingBlueGreenSettingStandardRolloutPolicyOutput
	ToGetClusterNodePoolUpgradeSettingBlueGreenSettingStandardRolloutPolicyOutputWithContext(context.Context) GetClusterNodePoolUpgradeSettingBlueGreenSettingStandardRolloutPolicyOutput
}

type GetClusterNodePoolUpgradeSettingBlueGreenSettingStandardRolloutPolicyArgs struct {
	// Number of blue nodes to drain in a batch.
	BatchNodeCount pulumi.IntInput `pulumi:"batchNodeCount"`
	// Percentage of the blue pool nodes to drain in a batch.
	BatchPercentage pulumi.Float64Input `pulumi:"batchPercentage"`
	// Soak time after each batch gets drained.
	BatchSoakDuration pulumi.StringInput `pulumi:"batchSoakDuration"`
}

func (GetClusterNodePoolUpgradeSettingBlueGreenSettingStandardRolloutPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolUpgradeSettingBlueGreenSettingStandardRolloutPolicy)(nil)).Elem()
}

func (i GetClusterNodePoolUpgradeSettingBlueGreenSettingStandardRolloutPolicyArgs) ToGetClusterNodePoolUpgradeSettingBlueGreenSettingStandardRolloutPolicyOutput() GetClusterNodePoolUpgradeSettingBlueGreenSettingStandardRolloutPolicyOutput {
	return i.ToGetClusterNodePoolUpgradeSettingBlueGreenSettingStandardRolloutPolicyOutputWithContext(context.Background())
}

func (i GetClusterNodePoolUpgradeSettingBlueGreenSettingStandardRolloutPolicyArgs) ToGetClusterNodePoolUpgradeSettingBlueGreenSettingStandardRolloutPolicyOutputWithContext(ctx context.Context) GetClusterNodePoolUpgradeSettingBlueGreenSettingStandardRolloutPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolUpgradeSettingBlueGreenSettingStandardRolloutPolicyOutput)
}

// GetClusterNodePoolUpgradeSettingBlueGreenSettingStandardRolloutPolicyArrayInput is an input type that accepts GetClusterNodePoolUpgradeSettingBlueGreenSettingStandardRolloutPolicyArray and GetClusterNodePoolUpgradeSettingBlueGreenSettingStandardRolloutPolicyArrayOutput values.
// You can construct a concrete instance of `GetClusterNodePoolUpgradeSettingBlueGreenSettingStandardRolloutPolicyArrayInput` via:
//
//	GetClusterNodePoolUpgradeSettingBlueGreenSettingStandardRolloutPolicyArray{ GetClusterNodePoolUpgradeSettingBlueGreenSettingStandardRolloutPolicyArgs{...} }
type GetClusterNodePoolUpgradeSettingBlueGreenSettingStandardRolloutPolicyArrayInput interface {
	pulumi.Input

	ToGetClusterNodePoolUpgradeSettingBlueGreenSettingStandardRolloutPolicyArrayOutput() GetClusterNodePoolUpgradeSettingBlueGreenSettingStandardRolloutPolicyArrayOutput
	ToGetClusterNodePoolUpgradeSettingBlueGreenSettingStandardRolloutPolicyArrayOutputWithContext(context.Context) GetClusterNodePoolUpgradeSettingBlueGreenSettingStandardRolloutPolicyArrayOutput
}

type GetClusterNodePoolUpgradeSettingBlueGreenSettingStandardRolloutPolicyArray []GetClusterNodePoolUpgradeSettingBlueGreenSettingStandardRolloutPolicyInput

func (GetClusterNodePoolUpgradeSettingBlueGreenSettingStandardRolloutPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolUpgradeSettingBlueGreenSettingStandardRolloutPolicy)(nil)).Elem()
}

func (i GetClusterNodePoolUpgradeSettingBlueGreenSettingStandardRolloutPolicyArray) ToGetClusterNodePoolUpgradeSettingBlueGreenSettingStandardRolloutPolicyArrayOutput() GetClusterNodePoolUpgradeSettingBlueGreenSettingStandardRolloutPolicyArrayOutput {
	return i.ToGetClusterNodePoolUpgradeSettingBlueGreenSettingStandardRolloutPolicyArrayOutputWithContext(context.Background())
}

func (i GetClusterNodePoolUpgradeSettingBlueGreenSettingStandardRolloutPolicyArray) ToGetClusterNodePoolUpgradeSettingBlueGreenSettingStandardRolloutPolicyArrayOutputWithContext(ctx context.Context) GetClusterNodePoolUpgradeSettingBlueGreenSettingStandardRolloutPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolUpgradeSettingBlueGreenSettingStandardRolloutPolicyArrayOutput)
}

type GetClusterNodePoolUpgradeSettingBlueGreenSettingStandardRolloutPolicyOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolUpgradeSettingBlueGreenSettingStandardRolloutPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolUpgradeSettingBlueGreenSettingStandardRolloutPolicy)(nil)).Elem()
}

func (o GetClusterNodePoolUpgradeSettingBlueGreenSettingStandardRolloutPolicyOutput) ToGetClusterNodePoolUpgradeSettingBlueGreenSettingStandardRolloutPolicyOutput() GetClusterNodePoolUpgradeSettingBlueGreenSettingStandardRolloutPolicyOutput {
	return o
}

func (o GetClusterNodePoolUpgradeSettingBlueGreenSettingStandardRolloutPolicyOutput) ToGetClusterNodePoolUpgradeSettingBlueGreenSettingStandardRolloutPolicyOutputWithContext(ctx context.Context) GetClusterNodePoolUpgradeSettingBlueGreenSettingStandardRolloutPolicyOutput {
	return o
}

// Number of blue nodes to drain in a batch.
func (o GetClusterNodePoolUpgradeSettingBlueGreenSettingStandardRolloutPolicyOutput) BatchNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterNodePoolUpgradeSettingBlueGreenSettingStandardRolloutPolicy) int {
		return v.BatchNodeCount
	}).(pulumi.IntOutput)
}

// Percentage of the blue pool nodes to drain in a batch.
func (o GetClusterNodePoolUpgradeSettingBlueGreenSettingStandardRolloutPolicyOutput) BatchPercentage() pulumi.Float64Output {
	return o.ApplyT(func(v GetClusterNodePoolUpgradeSettingBlueGreenSettingStandardRolloutPolicy) float64 {
		return v.BatchPercentage
	}).(pulumi.Float64Output)
}

// Soak time after each batch gets drained.
func (o GetClusterNodePoolUpgradeSettingBlueGreenSettingStandardRolloutPolicyOutput) BatchSoakDuration() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodePoolUpgradeSettingBlueGreenSettingStandardRolloutPolicy) string {
		return v.BatchSoakDuration
	}).(pulumi.StringOutput)
}

type GetClusterNodePoolUpgradeSettingBlueGreenSettingStandardRolloutPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolUpgradeSettingBlueGreenSettingStandardRolloutPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolUpgradeSettingBlueGreenSettingStandardRolloutPolicy)(nil)).Elem()
}

func (o GetClusterNodePoolUpgradeSettingBlueGreenSettingStandardRolloutPolicyArrayOutput) ToGetClusterNodePoolUpgradeSettingBlueGreenSettingStandardRolloutPolicyArrayOutput() GetClusterNodePoolUpgradeSettingBlueGreenSettingStandardRolloutPolicyArrayOutput {
	return o
}

func (o GetClusterNodePoolUpgradeSettingBlueGreenSettingStandardRolloutPolicyArrayOutput) ToGetClusterNodePoolUpgradeSettingBlueGreenSettingStandardRolloutPolicyArrayOutputWithContext(ctx context.Context) GetClusterNodePoolUpgradeSettingBlueGreenSettingStandardRolloutPolicyArrayOutput {
	return o
}

func (o GetClusterNodePoolUpgradeSettingBlueGreenSettingStandardRolloutPolicyArrayOutput) Index(i pulumi.IntInput) GetClusterNodePoolUpgradeSettingBlueGreenSettingStandardRolloutPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNodePoolUpgradeSettingBlueGreenSettingStandardRolloutPolicy {
		return vs[0].([]GetClusterNodePoolUpgradeSettingBlueGreenSettingStandardRolloutPolicy)[vs[1].(int)]
	}).(GetClusterNodePoolUpgradeSettingBlueGreenSettingStandardRolloutPolicyOutput)
}

type GetClusterNotificationConfig struct {
	// Notification config for Cloud Pub/Sub
	Pubsubs []GetClusterNotificationConfigPubsub `pulumi:"pubsubs"`
}

// GetClusterNotificationConfigInput is an input type that accepts GetClusterNotificationConfigArgs and GetClusterNotificationConfigOutput values.
// You can construct a concrete instance of `GetClusterNotificationConfigInput` via:
//
//	GetClusterNotificationConfigArgs{...}
type GetClusterNotificationConfigInput interface {
	pulumi.Input

	ToGetClusterNotificationConfigOutput() GetClusterNotificationConfigOutput
	ToGetClusterNotificationConfigOutputWithContext(context.Context) GetClusterNotificationConfigOutput
}

type GetClusterNotificationConfigArgs struct {
	// Notification config for Cloud Pub/Sub
	Pubsubs GetClusterNotificationConfigPubsubArrayInput `pulumi:"pubsubs"`
}

func (GetClusterNotificationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNotificationConfig)(nil)).Elem()
}

func (i GetClusterNotificationConfigArgs) ToGetClusterNotificationConfigOutput() GetClusterNotificationConfigOutput {
	return i.ToGetClusterNotificationConfigOutputWithContext(context.Background())
}

func (i GetClusterNotificationConfigArgs) ToGetClusterNotificationConfigOutputWithContext(ctx context.Context) GetClusterNotificationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNotificationConfigOutput)
}

// GetClusterNotificationConfigArrayInput is an input type that accepts GetClusterNotificationConfigArray and GetClusterNotificationConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterNotificationConfigArrayInput` via:
//
//	GetClusterNotificationConfigArray{ GetClusterNotificationConfigArgs{...} }
type GetClusterNotificationConfigArrayInput interface {
	pulumi.Input

	ToGetClusterNotificationConfigArrayOutput() GetClusterNotificationConfigArrayOutput
	ToGetClusterNotificationConfigArrayOutputWithContext(context.Context) GetClusterNotificationConfigArrayOutput
}

type GetClusterNotificationConfigArray []GetClusterNotificationConfigInput

func (GetClusterNotificationConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNotificationConfig)(nil)).Elem()
}

func (i GetClusterNotificationConfigArray) ToGetClusterNotificationConfigArrayOutput() GetClusterNotificationConfigArrayOutput {
	return i.ToGetClusterNotificationConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterNotificationConfigArray) ToGetClusterNotificationConfigArrayOutputWithContext(ctx context.Context) GetClusterNotificationConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNotificationConfigArrayOutput)
}

type GetClusterNotificationConfigOutput struct{ *pulumi.OutputState }

func (GetClusterNotificationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNotificationConfig)(nil)).Elem()
}

func (o GetClusterNotificationConfigOutput) ToGetClusterNotificationConfigOutput() GetClusterNotificationConfigOutput {
	return o
}

func (o GetClusterNotificationConfigOutput) ToGetClusterNotificationConfigOutputWithContext(ctx context.Context) GetClusterNotificationConfigOutput {
	return o
}

// Notification config for Cloud Pub/Sub
func (o GetClusterNotificationConfigOutput) Pubsubs() GetClusterNotificationConfigPubsubArrayOutput {
	return o.ApplyT(func(v GetClusterNotificationConfig) []GetClusterNotificationConfigPubsub { return v.Pubsubs }).(GetClusterNotificationConfigPubsubArrayOutput)
}

type GetClusterNotificationConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNotificationConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNotificationConfig)(nil)).Elem()
}

func (o GetClusterNotificationConfigArrayOutput) ToGetClusterNotificationConfigArrayOutput() GetClusterNotificationConfigArrayOutput {
	return o
}

func (o GetClusterNotificationConfigArrayOutput) ToGetClusterNotificationConfigArrayOutputWithContext(ctx context.Context) GetClusterNotificationConfigArrayOutput {
	return o
}

func (o GetClusterNotificationConfigArrayOutput) Index(i pulumi.IntInput) GetClusterNotificationConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNotificationConfig {
		return vs[0].([]GetClusterNotificationConfig)[vs[1].(int)]
	}).(GetClusterNotificationConfigOutput)
}

type GetClusterNotificationConfigPubsub struct {
	// Whether or not the notification config is enabled
	Enabled bool `pulumi:"enabled"`
	// Allows filtering to one or more specific event types. If event types are present, those and only those event types will be transmitted to the cluster. Other types will be skipped. If no filter is specified, or no event types are present, all event types will be sent
	Filters []GetClusterNotificationConfigPubsubFilter `pulumi:"filters"`
	// The pubsub topic to push upgrade notifications to. Must be in the same project as the cluster. Must be in the format: projects/{project}/topics/{topic}.
	Topic string `pulumi:"topic"`
}

// GetClusterNotificationConfigPubsubInput is an input type that accepts GetClusterNotificationConfigPubsubArgs and GetClusterNotificationConfigPubsubOutput values.
// You can construct a concrete instance of `GetClusterNotificationConfigPubsubInput` via:
//
//	GetClusterNotificationConfigPubsubArgs{...}
type GetClusterNotificationConfigPubsubInput interface {
	pulumi.Input

	ToGetClusterNotificationConfigPubsubOutput() GetClusterNotificationConfigPubsubOutput
	ToGetClusterNotificationConfigPubsubOutputWithContext(context.Context) GetClusterNotificationConfigPubsubOutput
}

type GetClusterNotificationConfigPubsubArgs struct {
	// Whether or not the notification config is enabled
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Allows filtering to one or more specific event types. If event types are present, those and only those event types will be transmitted to the cluster. Other types will be skipped. If no filter is specified, or no event types are present, all event types will be sent
	Filters GetClusterNotificationConfigPubsubFilterArrayInput `pulumi:"filters"`
	// The pubsub topic to push upgrade notifications to. Must be in the same project as the cluster. Must be in the format: projects/{project}/topics/{topic}.
	Topic pulumi.StringInput `pulumi:"topic"`
}

func (GetClusterNotificationConfigPubsubArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNotificationConfigPubsub)(nil)).Elem()
}

func (i GetClusterNotificationConfigPubsubArgs) ToGetClusterNotificationConfigPubsubOutput() GetClusterNotificationConfigPubsubOutput {
	return i.ToGetClusterNotificationConfigPubsubOutputWithContext(context.Background())
}

func (i GetClusterNotificationConfigPubsubArgs) ToGetClusterNotificationConfigPubsubOutputWithContext(ctx context.Context) GetClusterNotificationConfigPubsubOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNotificationConfigPubsubOutput)
}

// GetClusterNotificationConfigPubsubArrayInput is an input type that accepts GetClusterNotificationConfigPubsubArray and GetClusterNotificationConfigPubsubArrayOutput values.
// You can construct a concrete instance of `GetClusterNotificationConfigPubsubArrayInput` via:
//
//	GetClusterNotificationConfigPubsubArray{ GetClusterNotificationConfigPubsubArgs{...} }
type GetClusterNotificationConfigPubsubArrayInput interface {
	pulumi.Input

	ToGetClusterNotificationConfigPubsubArrayOutput() GetClusterNotificationConfigPubsubArrayOutput
	ToGetClusterNotificationConfigPubsubArrayOutputWithContext(context.Context) GetClusterNotificationConfigPubsubArrayOutput
}

type GetClusterNotificationConfigPubsubArray []GetClusterNotificationConfigPubsubInput

func (GetClusterNotificationConfigPubsubArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNotificationConfigPubsub)(nil)).Elem()
}

func (i GetClusterNotificationConfigPubsubArray) ToGetClusterNotificationConfigPubsubArrayOutput() GetClusterNotificationConfigPubsubArrayOutput {
	return i.ToGetClusterNotificationConfigPubsubArrayOutputWithContext(context.Background())
}

func (i GetClusterNotificationConfigPubsubArray) ToGetClusterNotificationConfigPubsubArrayOutputWithContext(ctx context.Context) GetClusterNotificationConfigPubsubArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNotificationConfigPubsubArrayOutput)
}

type GetClusterNotificationConfigPubsubOutput struct{ *pulumi.OutputState }

func (GetClusterNotificationConfigPubsubOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNotificationConfigPubsub)(nil)).Elem()
}

func (o GetClusterNotificationConfigPubsubOutput) ToGetClusterNotificationConfigPubsubOutput() GetClusterNotificationConfigPubsubOutput {
	return o
}

func (o GetClusterNotificationConfigPubsubOutput) ToGetClusterNotificationConfigPubsubOutputWithContext(ctx context.Context) GetClusterNotificationConfigPubsubOutput {
	return o
}

// Whether or not the notification config is enabled
func (o GetClusterNotificationConfigPubsubOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterNotificationConfigPubsub) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Allows filtering to one or more specific event types. If event types are present, those and only those event types will be transmitted to the cluster. Other types will be skipped. If no filter is specified, or no event types are present, all event types will be sent
func (o GetClusterNotificationConfigPubsubOutput) Filters() GetClusterNotificationConfigPubsubFilterArrayOutput {
	return o.ApplyT(func(v GetClusterNotificationConfigPubsub) []GetClusterNotificationConfigPubsubFilter {
		return v.Filters
	}).(GetClusterNotificationConfigPubsubFilterArrayOutput)
}

// The pubsub topic to push upgrade notifications to. Must be in the same project as the cluster. Must be in the format: projects/{project}/topics/{topic}.
func (o GetClusterNotificationConfigPubsubOutput) Topic() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNotificationConfigPubsub) string { return v.Topic }).(pulumi.StringOutput)
}

type GetClusterNotificationConfigPubsubArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNotificationConfigPubsubArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNotificationConfigPubsub)(nil)).Elem()
}

func (o GetClusterNotificationConfigPubsubArrayOutput) ToGetClusterNotificationConfigPubsubArrayOutput() GetClusterNotificationConfigPubsubArrayOutput {
	return o
}

func (o GetClusterNotificationConfigPubsubArrayOutput) ToGetClusterNotificationConfigPubsubArrayOutputWithContext(ctx context.Context) GetClusterNotificationConfigPubsubArrayOutput {
	return o
}

func (o GetClusterNotificationConfigPubsubArrayOutput) Index(i pulumi.IntInput) GetClusterNotificationConfigPubsubOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNotificationConfigPubsub {
		return vs[0].([]GetClusterNotificationConfigPubsub)[vs[1].(int)]
	}).(GetClusterNotificationConfigPubsubOutput)
}

type GetClusterNotificationConfigPubsubFilter struct {
	// Can be used to filter what notifications are sent. Valid values include include UPGRADE_AVAILABLE_EVENT, UPGRADE_EVENT and SECURITY_BULLETIN_EVENT
	EventTypes []string `pulumi:"eventTypes"`
}

// GetClusterNotificationConfigPubsubFilterInput is an input type that accepts GetClusterNotificationConfigPubsubFilterArgs and GetClusterNotificationConfigPubsubFilterOutput values.
// You can construct a concrete instance of `GetClusterNotificationConfigPubsubFilterInput` via:
//
//	GetClusterNotificationConfigPubsubFilterArgs{...}
type GetClusterNotificationConfigPubsubFilterInput interface {
	pulumi.Input

	ToGetClusterNotificationConfigPubsubFilterOutput() GetClusterNotificationConfigPubsubFilterOutput
	ToGetClusterNotificationConfigPubsubFilterOutputWithContext(context.Context) GetClusterNotificationConfigPubsubFilterOutput
}

type GetClusterNotificationConfigPubsubFilterArgs struct {
	// Can be used to filter what notifications are sent. Valid values include include UPGRADE_AVAILABLE_EVENT, UPGRADE_EVENT and SECURITY_BULLETIN_EVENT
	EventTypes pulumi.StringArrayInput `pulumi:"eventTypes"`
}

func (GetClusterNotificationConfigPubsubFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNotificationConfigPubsubFilter)(nil)).Elem()
}

func (i GetClusterNotificationConfigPubsubFilterArgs) ToGetClusterNotificationConfigPubsubFilterOutput() GetClusterNotificationConfigPubsubFilterOutput {
	return i.ToGetClusterNotificationConfigPubsubFilterOutputWithContext(context.Background())
}

func (i GetClusterNotificationConfigPubsubFilterArgs) ToGetClusterNotificationConfigPubsubFilterOutputWithContext(ctx context.Context) GetClusterNotificationConfigPubsubFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNotificationConfigPubsubFilterOutput)
}

// GetClusterNotificationConfigPubsubFilterArrayInput is an input type that accepts GetClusterNotificationConfigPubsubFilterArray and GetClusterNotificationConfigPubsubFilterArrayOutput values.
// You can construct a concrete instance of `GetClusterNotificationConfigPubsubFilterArrayInput` via:
//
//	GetClusterNotificationConfigPubsubFilterArray{ GetClusterNotificationConfigPubsubFilterArgs{...} }
type GetClusterNotificationConfigPubsubFilterArrayInput interface {
	pulumi.Input

	ToGetClusterNotificationConfigPubsubFilterArrayOutput() GetClusterNotificationConfigPubsubFilterArrayOutput
	ToGetClusterNotificationConfigPubsubFilterArrayOutputWithContext(context.Context) GetClusterNotificationConfigPubsubFilterArrayOutput
}

type GetClusterNotificationConfigPubsubFilterArray []GetClusterNotificationConfigPubsubFilterInput

func (GetClusterNotificationConfigPubsubFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNotificationConfigPubsubFilter)(nil)).Elem()
}

func (i GetClusterNotificationConfigPubsubFilterArray) ToGetClusterNotificationConfigPubsubFilterArrayOutput() GetClusterNotificationConfigPubsubFilterArrayOutput {
	return i.ToGetClusterNotificationConfigPubsubFilterArrayOutputWithContext(context.Background())
}

func (i GetClusterNotificationConfigPubsubFilterArray) ToGetClusterNotificationConfigPubsubFilterArrayOutputWithContext(ctx context.Context) GetClusterNotificationConfigPubsubFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNotificationConfigPubsubFilterArrayOutput)
}

type GetClusterNotificationConfigPubsubFilterOutput struct{ *pulumi.OutputState }

func (GetClusterNotificationConfigPubsubFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNotificationConfigPubsubFilter)(nil)).Elem()
}

func (o GetClusterNotificationConfigPubsubFilterOutput) ToGetClusterNotificationConfigPubsubFilterOutput() GetClusterNotificationConfigPubsubFilterOutput {
	return o
}

func (o GetClusterNotificationConfigPubsubFilterOutput) ToGetClusterNotificationConfigPubsubFilterOutputWithContext(ctx context.Context) GetClusterNotificationConfigPubsubFilterOutput {
	return o
}

// Can be used to filter what notifications are sent. Valid values include include UPGRADE_AVAILABLE_EVENT, UPGRADE_EVENT and SECURITY_BULLETIN_EVENT
func (o GetClusterNotificationConfigPubsubFilterOutput) EventTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClusterNotificationConfigPubsubFilter) []string { return v.EventTypes }).(pulumi.StringArrayOutput)
}

type GetClusterNotificationConfigPubsubFilterArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNotificationConfigPubsubFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNotificationConfigPubsubFilter)(nil)).Elem()
}

func (o GetClusterNotificationConfigPubsubFilterArrayOutput) ToGetClusterNotificationConfigPubsubFilterArrayOutput() GetClusterNotificationConfigPubsubFilterArrayOutput {
	return o
}

func (o GetClusterNotificationConfigPubsubFilterArrayOutput) ToGetClusterNotificationConfigPubsubFilterArrayOutputWithContext(ctx context.Context) GetClusterNotificationConfigPubsubFilterArrayOutput {
	return o
}

func (o GetClusterNotificationConfigPubsubFilterArrayOutput) Index(i pulumi.IntInput) GetClusterNotificationConfigPubsubFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNotificationConfigPubsubFilter {
		return vs[0].([]GetClusterNotificationConfigPubsubFilter)[vs[1].(int)]
	}).(GetClusterNotificationConfigPubsubFilterOutput)
}

type GetClusterPodSecurityPolicyConfig struct {
	// Enable the PodSecurityPolicy controller for this cluster. If enabled, pods must be valid under a PodSecurityPolicy to be created.
	Enabled bool `pulumi:"enabled"`
}

// GetClusterPodSecurityPolicyConfigInput is an input type that accepts GetClusterPodSecurityPolicyConfigArgs and GetClusterPodSecurityPolicyConfigOutput values.
// You can construct a concrete instance of `GetClusterPodSecurityPolicyConfigInput` via:
//
//	GetClusterPodSecurityPolicyConfigArgs{...}
type GetClusterPodSecurityPolicyConfigInput interface {
	pulumi.Input

	ToGetClusterPodSecurityPolicyConfigOutput() GetClusterPodSecurityPolicyConfigOutput
	ToGetClusterPodSecurityPolicyConfigOutputWithContext(context.Context) GetClusterPodSecurityPolicyConfigOutput
}

type GetClusterPodSecurityPolicyConfigArgs struct {
	// Enable the PodSecurityPolicy controller for this cluster. If enabled, pods must be valid under a PodSecurityPolicy to be created.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (GetClusterPodSecurityPolicyConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterPodSecurityPolicyConfig)(nil)).Elem()
}

func (i GetClusterPodSecurityPolicyConfigArgs) ToGetClusterPodSecurityPolicyConfigOutput() GetClusterPodSecurityPolicyConfigOutput {
	return i.ToGetClusterPodSecurityPolicyConfigOutputWithContext(context.Background())
}

func (i GetClusterPodSecurityPolicyConfigArgs) ToGetClusterPodSecurityPolicyConfigOutputWithContext(ctx context.Context) GetClusterPodSecurityPolicyConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterPodSecurityPolicyConfigOutput)
}

// GetClusterPodSecurityPolicyConfigArrayInput is an input type that accepts GetClusterPodSecurityPolicyConfigArray and GetClusterPodSecurityPolicyConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterPodSecurityPolicyConfigArrayInput` via:
//
//	GetClusterPodSecurityPolicyConfigArray{ GetClusterPodSecurityPolicyConfigArgs{...} }
type GetClusterPodSecurityPolicyConfigArrayInput interface {
	pulumi.Input

	ToGetClusterPodSecurityPolicyConfigArrayOutput() GetClusterPodSecurityPolicyConfigArrayOutput
	ToGetClusterPodSecurityPolicyConfigArrayOutputWithContext(context.Context) GetClusterPodSecurityPolicyConfigArrayOutput
}

type GetClusterPodSecurityPolicyConfigArray []GetClusterPodSecurityPolicyConfigInput

func (GetClusterPodSecurityPolicyConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterPodSecurityPolicyConfig)(nil)).Elem()
}

func (i GetClusterPodSecurityPolicyConfigArray) ToGetClusterPodSecurityPolicyConfigArrayOutput() GetClusterPodSecurityPolicyConfigArrayOutput {
	return i.ToGetClusterPodSecurityPolicyConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterPodSecurityPolicyConfigArray) ToGetClusterPodSecurityPolicyConfigArrayOutputWithContext(ctx context.Context) GetClusterPodSecurityPolicyConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterPodSecurityPolicyConfigArrayOutput)
}

type GetClusterPodSecurityPolicyConfigOutput struct{ *pulumi.OutputState }

func (GetClusterPodSecurityPolicyConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterPodSecurityPolicyConfig)(nil)).Elem()
}

func (o GetClusterPodSecurityPolicyConfigOutput) ToGetClusterPodSecurityPolicyConfigOutput() GetClusterPodSecurityPolicyConfigOutput {
	return o
}

func (o GetClusterPodSecurityPolicyConfigOutput) ToGetClusterPodSecurityPolicyConfigOutputWithContext(ctx context.Context) GetClusterPodSecurityPolicyConfigOutput {
	return o
}

// Enable the PodSecurityPolicy controller for this cluster. If enabled, pods must be valid under a PodSecurityPolicy to be created.
func (o GetClusterPodSecurityPolicyConfigOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterPodSecurityPolicyConfig) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type GetClusterPodSecurityPolicyConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterPodSecurityPolicyConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterPodSecurityPolicyConfig)(nil)).Elem()
}

func (o GetClusterPodSecurityPolicyConfigArrayOutput) ToGetClusterPodSecurityPolicyConfigArrayOutput() GetClusterPodSecurityPolicyConfigArrayOutput {
	return o
}

func (o GetClusterPodSecurityPolicyConfigArrayOutput) ToGetClusterPodSecurityPolicyConfigArrayOutputWithContext(ctx context.Context) GetClusterPodSecurityPolicyConfigArrayOutput {
	return o
}

func (o GetClusterPodSecurityPolicyConfigArrayOutput) Index(i pulumi.IntInput) GetClusterPodSecurityPolicyConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterPodSecurityPolicyConfig {
		return vs[0].([]GetClusterPodSecurityPolicyConfig)[vs[1].(int)]
	}).(GetClusterPodSecurityPolicyConfigOutput)
}

type GetClusterPrivateClusterConfig struct {
	// When true, the cluster's private endpoint is used as the cluster endpoint and access through the public endpoint is disabled. When false, either endpoint can be used.
	EnablePrivateEndpoint bool `pulumi:"enablePrivateEndpoint"`
	// Enables the private cluster feature, creating a private endpoint on the cluster. In a private cluster, nodes only have RFC 1918 private addresses and communicate with the master's private endpoint via private networking.
	EnablePrivateNodes bool `pulumi:"enablePrivateNodes"`
	// Controls cluster master global access settings.
	MasterGlobalAccessConfigs []GetClusterPrivateClusterConfigMasterGlobalAccessConfig `pulumi:"masterGlobalAccessConfigs"`
	// The IP range in CIDR notation to use for the hosted master network. This range will be used for assigning private IP addresses to the cluster master(s) and the ILB VIP. This range must not overlap with any other ranges in use within the cluster's network, and it must be a /28 subnet. See Private Cluster Limitations for more details. This field only applies to private clusters, when enablePrivateNodes is true.
	MasterIpv4CidrBlock string `pulumi:"masterIpv4CidrBlock"`
	// The name of the peering between this cluster and the Google owned VPC.
	PeeringName string `pulumi:"peeringName"`
	// The internal IP address of this cluster's master endpoint.
	PrivateEndpoint string `pulumi:"privateEndpoint"`
	// Subnetwork in cluster's network where master's endpoint will be provisioned.
	PrivateEndpointSubnetwork string `pulumi:"privateEndpointSubnetwork"`
	// The external IP address of this cluster's master endpoint.
	PublicEndpoint string `pulumi:"publicEndpoint"`
}

// GetClusterPrivateClusterConfigInput is an input type that accepts GetClusterPrivateClusterConfigArgs and GetClusterPrivateClusterConfigOutput values.
// You can construct a concrete instance of `GetClusterPrivateClusterConfigInput` via:
//
//	GetClusterPrivateClusterConfigArgs{...}
type GetClusterPrivateClusterConfigInput interface {
	pulumi.Input

	ToGetClusterPrivateClusterConfigOutput() GetClusterPrivateClusterConfigOutput
	ToGetClusterPrivateClusterConfigOutputWithContext(context.Context) GetClusterPrivateClusterConfigOutput
}

type GetClusterPrivateClusterConfigArgs struct {
	// When true, the cluster's private endpoint is used as the cluster endpoint and access through the public endpoint is disabled. When false, either endpoint can be used.
	EnablePrivateEndpoint pulumi.BoolInput `pulumi:"enablePrivateEndpoint"`
	// Enables the private cluster feature, creating a private endpoint on the cluster. In a private cluster, nodes only have RFC 1918 private addresses and communicate with the master's private endpoint via private networking.
	EnablePrivateNodes pulumi.BoolInput `pulumi:"enablePrivateNodes"`
	// Controls cluster master global access settings.
	MasterGlobalAccessConfigs GetClusterPrivateClusterConfigMasterGlobalAccessConfigArrayInput `pulumi:"masterGlobalAccessConfigs"`
	// The IP range in CIDR notation to use for the hosted master network. This range will be used for assigning private IP addresses to the cluster master(s) and the ILB VIP. This range must not overlap with any other ranges in use within the cluster's network, and it must be a /28 subnet. See Private Cluster Limitations for more details. This field only applies to private clusters, when enablePrivateNodes is true.
	MasterIpv4CidrBlock pulumi.StringInput `pulumi:"masterIpv4CidrBlock"`
	// The name of the peering between this cluster and the Google owned VPC.
	PeeringName pulumi.StringInput `pulumi:"peeringName"`
	// The internal IP address of this cluster's master endpoint.
	PrivateEndpoint pulumi.StringInput `pulumi:"privateEndpoint"`
	// Subnetwork in cluster's network where master's endpoint will be provisioned.
	PrivateEndpointSubnetwork pulumi.StringInput `pulumi:"privateEndpointSubnetwork"`
	// The external IP address of this cluster's master endpoint.
	PublicEndpoint pulumi.StringInput `pulumi:"publicEndpoint"`
}

func (GetClusterPrivateClusterConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterPrivateClusterConfig)(nil)).Elem()
}

func (i GetClusterPrivateClusterConfigArgs) ToGetClusterPrivateClusterConfigOutput() GetClusterPrivateClusterConfigOutput {
	return i.ToGetClusterPrivateClusterConfigOutputWithContext(context.Background())
}

func (i GetClusterPrivateClusterConfigArgs) ToGetClusterPrivateClusterConfigOutputWithContext(ctx context.Context) GetClusterPrivateClusterConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterPrivateClusterConfigOutput)
}

// GetClusterPrivateClusterConfigArrayInput is an input type that accepts GetClusterPrivateClusterConfigArray and GetClusterPrivateClusterConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterPrivateClusterConfigArrayInput` via:
//
//	GetClusterPrivateClusterConfigArray{ GetClusterPrivateClusterConfigArgs{...} }
type GetClusterPrivateClusterConfigArrayInput interface {
	pulumi.Input

	ToGetClusterPrivateClusterConfigArrayOutput() GetClusterPrivateClusterConfigArrayOutput
	ToGetClusterPrivateClusterConfigArrayOutputWithContext(context.Context) GetClusterPrivateClusterConfigArrayOutput
}

type GetClusterPrivateClusterConfigArray []GetClusterPrivateClusterConfigInput

func (GetClusterPrivateClusterConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterPrivateClusterConfig)(nil)).Elem()
}

func (i GetClusterPrivateClusterConfigArray) ToGetClusterPrivateClusterConfigArrayOutput() GetClusterPrivateClusterConfigArrayOutput {
	return i.ToGetClusterPrivateClusterConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterPrivateClusterConfigArray) ToGetClusterPrivateClusterConfigArrayOutputWithContext(ctx context.Context) GetClusterPrivateClusterConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterPrivateClusterConfigArrayOutput)
}

type GetClusterPrivateClusterConfigOutput struct{ *pulumi.OutputState }

func (GetClusterPrivateClusterConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterPrivateClusterConfig)(nil)).Elem()
}

func (o GetClusterPrivateClusterConfigOutput) ToGetClusterPrivateClusterConfigOutput() GetClusterPrivateClusterConfigOutput {
	return o
}

func (o GetClusterPrivateClusterConfigOutput) ToGetClusterPrivateClusterConfigOutputWithContext(ctx context.Context) GetClusterPrivateClusterConfigOutput {
	return o
}

// When true, the cluster's private endpoint is used as the cluster endpoint and access through the public endpoint is disabled. When false, either endpoint can be used.
func (o GetClusterPrivateClusterConfigOutput) EnablePrivateEndpoint() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterPrivateClusterConfig) bool { return v.EnablePrivateEndpoint }).(pulumi.BoolOutput)
}

// Enables the private cluster feature, creating a private endpoint on the cluster. In a private cluster, nodes only have RFC 1918 private addresses and communicate with the master's private endpoint via private networking.
func (o GetClusterPrivateClusterConfigOutput) EnablePrivateNodes() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterPrivateClusterConfig) bool { return v.EnablePrivateNodes }).(pulumi.BoolOutput)
}

// Controls cluster master global access settings.
func (o GetClusterPrivateClusterConfigOutput) MasterGlobalAccessConfigs() GetClusterPrivateClusterConfigMasterGlobalAccessConfigArrayOutput {
	return o.ApplyT(func(v GetClusterPrivateClusterConfig) []GetClusterPrivateClusterConfigMasterGlobalAccessConfig {
		return v.MasterGlobalAccessConfigs
	}).(GetClusterPrivateClusterConfigMasterGlobalAccessConfigArrayOutput)
}

// The IP range in CIDR notation to use for the hosted master network. This range will be used for assigning private IP addresses to the cluster master(s) and the ILB VIP. This range must not overlap with any other ranges in use within the cluster's network, and it must be a /28 subnet. See Private Cluster Limitations for more details. This field only applies to private clusters, when enablePrivateNodes is true.
func (o GetClusterPrivateClusterConfigOutput) MasterIpv4CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterPrivateClusterConfig) string { return v.MasterIpv4CidrBlock }).(pulumi.StringOutput)
}

// The name of the peering between this cluster and the Google owned VPC.
func (o GetClusterPrivateClusterConfigOutput) PeeringName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterPrivateClusterConfig) string { return v.PeeringName }).(pulumi.StringOutput)
}

// The internal IP address of this cluster's master endpoint.
func (o GetClusterPrivateClusterConfigOutput) PrivateEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterPrivateClusterConfig) string { return v.PrivateEndpoint }).(pulumi.StringOutput)
}

// Subnetwork in cluster's network where master's endpoint will be provisioned.
func (o GetClusterPrivateClusterConfigOutput) PrivateEndpointSubnetwork() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterPrivateClusterConfig) string { return v.PrivateEndpointSubnetwork }).(pulumi.StringOutput)
}

// The external IP address of this cluster's master endpoint.
func (o GetClusterPrivateClusterConfigOutput) PublicEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterPrivateClusterConfig) string { return v.PublicEndpoint }).(pulumi.StringOutput)
}

type GetClusterPrivateClusterConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterPrivateClusterConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterPrivateClusterConfig)(nil)).Elem()
}

func (o GetClusterPrivateClusterConfigArrayOutput) ToGetClusterPrivateClusterConfigArrayOutput() GetClusterPrivateClusterConfigArrayOutput {
	return o
}

func (o GetClusterPrivateClusterConfigArrayOutput) ToGetClusterPrivateClusterConfigArrayOutputWithContext(ctx context.Context) GetClusterPrivateClusterConfigArrayOutput {
	return o
}

func (o GetClusterPrivateClusterConfigArrayOutput) Index(i pulumi.IntInput) GetClusterPrivateClusterConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterPrivateClusterConfig {
		return vs[0].([]GetClusterPrivateClusterConfig)[vs[1].(int)]
	}).(GetClusterPrivateClusterConfigOutput)
}

type GetClusterPrivateClusterConfigMasterGlobalAccessConfig struct {
	// Whether the cluster master is accessible globally or not.
	Enabled bool `pulumi:"enabled"`
}

// GetClusterPrivateClusterConfigMasterGlobalAccessConfigInput is an input type that accepts GetClusterPrivateClusterConfigMasterGlobalAccessConfigArgs and GetClusterPrivateClusterConfigMasterGlobalAccessConfigOutput values.
// You can construct a concrete instance of `GetClusterPrivateClusterConfigMasterGlobalAccessConfigInput` via:
//
//	GetClusterPrivateClusterConfigMasterGlobalAccessConfigArgs{...}
type GetClusterPrivateClusterConfigMasterGlobalAccessConfigInput interface {
	pulumi.Input

	ToGetClusterPrivateClusterConfigMasterGlobalAccessConfigOutput() GetClusterPrivateClusterConfigMasterGlobalAccessConfigOutput
	ToGetClusterPrivateClusterConfigMasterGlobalAccessConfigOutputWithContext(context.Context) GetClusterPrivateClusterConfigMasterGlobalAccessConfigOutput
}

type GetClusterPrivateClusterConfigMasterGlobalAccessConfigArgs struct {
	// Whether the cluster master is accessible globally or not.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (GetClusterPrivateClusterConfigMasterGlobalAccessConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterPrivateClusterConfigMasterGlobalAccessConfig)(nil)).Elem()
}

func (i GetClusterPrivateClusterConfigMasterGlobalAccessConfigArgs) ToGetClusterPrivateClusterConfigMasterGlobalAccessConfigOutput() GetClusterPrivateClusterConfigMasterGlobalAccessConfigOutput {
	return i.ToGetClusterPrivateClusterConfigMasterGlobalAccessConfigOutputWithContext(context.Background())
}

func (i GetClusterPrivateClusterConfigMasterGlobalAccessConfigArgs) ToGetClusterPrivateClusterConfigMasterGlobalAccessConfigOutputWithContext(ctx context.Context) GetClusterPrivateClusterConfigMasterGlobalAccessConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterPrivateClusterConfigMasterGlobalAccessConfigOutput)
}

// GetClusterPrivateClusterConfigMasterGlobalAccessConfigArrayInput is an input type that accepts GetClusterPrivateClusterConfigMasterGlobalAccessConfigArray and GetClusterPrivateClusterConfigMasterGlobalAccessConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterPrivateClusterConfigMasterGlobalAccessConfigArrayInput` via:
//
//	GetClusterPrivateClusterConfigMasterGlobalAccessConfigArray{ GetClusterPrivateClusterConfigMasterGlobalAccessConfigArgs{...} }
type GetClusterPrivateClusterConfigMasterGlobalAccessConfigArrayInput interface {
	pulumi.Input

	ToGetClusterPrivateClusterConfigMasterGlobalAccessConfigArrayOutput() GetClusterPrivateClusterConfigMasterGlobalAccessConfigArrayOutput
	ToGetClusterPrivateClusterConfigMasterGlobalAccessConfigArrayOutputWithContext(context.Context) GetClusterPrivateClusterConfigMasterGlobalAccessConfigArrayOutput
}

type GetClusterPrivateClusterConfigMasterGlobalAccessConfigArray []GetClusterPrivateClusterConfigMasterGlobalAccessConfigInput

func (GetClusterPrivateClusterConfigMasterGlobalAccessConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterPrivateClusterConfigMasterGlobalAccessConfig)(nil)).Elem()
}

func (i GetClusterPrivateClusterConfigMasterGlobalAccessConfigArray) ToGetClusterPrivateClusterConfigMasterGlobalAccessConfigArrayOutput() GetClusterPrivateClusterConfigMasterGlobalAccessConfigArrayOutput {
	return i.ToGetClusterPrivateClusterConfigMasterGlobalAccessConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterPrivateClusterConfigMasterGlobalAccessConfigArray) ToGetClusterPrivateClusterConfigMasterGlobalAccessConfigArrayOutputWithContext(ctx context.Context) GetClusterPrivateClusterConfigMasterGlobalAccessConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterPrivateClusterConfigMasterGlobalAccessConfigArrayOutput)
}

type GetClusterPrivateClusterConfigMasterGlobalAccessConfigOutput struct{ *pulumi.OutputState }

func (GetClusterPrivateClusterConfigMasterGlobalAccessConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterPrivateClusterConfigMasterGlobalAccessConfig)(nil)).Elem()
}

func (o GetClusterPrivateClusterConfigMasterGlobalAccessConfigOutput) ToGetClusterPrivateClusterConfigMasterGlobalAccessConfigOutput() GetClusterPrivateClusterConfigMasterGlobalAccessConfigOutput {
	return o
}

func (o GetClusterPrivateClusterConfigMasterGlobalAccessConfigOutput) ToGetClusterPrivateClusterConfigMasterGlobalAccessConfigOutputWithContext(ctx context.Context) GetClusterPrivateClusterConfigMasterGlobalAccessConfigOutput {
	return o
}

// Whether the cluster master is accessible globally or not.
func (o GetClusterPrivateClusterConfigMasterGlobalAccessConfigOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterPrivateClusterConfigMasterGlobalAccessConfig) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type GetClusterPrivateClusterConfigMasterGlobalAccessConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterPrivateClusterConfigMasterGlobalAccessConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterPrivateClusterConfigMasterGlobalAccessConfig)(nil)).Elem()
}

func (o GetClusterPrivateClusterConfigMasterGlobalAccessConfigArrayOutput) ToGetClusterPrivateClusterConfigMasterGlobalAccessConfigArrayOutput() GetClusterPrivateClusterConfigMasterGlobalAccessConfigArrayOutput {
	return o
}

func (o GetClusterPrivateClusterConfigMasterGlobalAccessConfigArrayOutput) ToGetClusterPrivateClusterConfigMasterGlobalAccessConfigArrayOutputWithContext(ctx context.Context) GetClusterPrivateClusterConfigMasterGlobalAccessConfigArrayOutput {
	return o
}

func (o GetClusterPrivateClusterConfigMasterGlobalAccessConfigArrayOutput) Index(i pulumi.IntInput) GetClusterPrivateClusterConfigMasterGlobalAccessConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterPrivateClusterConfigMasterGlobalAccessConfig {
		return vs[0].([]GetClusterPrivateClusterConfigMasterGlobalAccessConfig)[vs[1].(int)]
	}).(GetClusterPrivateClusterConfigMasterGlobalAccessConfigOutput)
}

type GetClusterProtectConfig struct {
	// WorkloadConfig defines which actions are enabled for a cluster's workload configurations.
	WorkloadConfigs []GetClusterProtectConfigWorkloadConfig `pulumi:"workloadConfigs"`
	// Sets which mode to use for Protect workload vulnerability scanning feature. Accepted values are DISABLED, BASIC.
	WorkloadVulnerabilityMode string `pulumi:"workloadVulnerabilityMode"`
}

// GetClusterProtectConfigInput is an input type that accepts GetClusterProtectConfigArgs and GetClusterProtectConfigOutput values.
// You can construct a concrete instance of `GetClusterProtectConfigInput` via:
//
//	GetClusterProtectConfigArgs{...}
type GetClusterProtectConfigInput interface {
	pulumi.Input

	ToGetClusterProtectConfigOutput() GetClusterProtectConfigOutput
	ToGetClusterProtectConfigOutputWithContext(context.Context) GetClusterProtectConfigOutput
}

type GetClusterProtectConfigArgs struct {
	// WorkloadConfig defines which actions are enabled for a cluster's workload configurations.
	WorkloadConfigs GetClusterProtectConfigWorkloadConfigArrayInput `pulumi:"workloadConfigs"`
	// Sets which mode to use for Protect workload vulnerability scanning feature. Accepted values are DISABLED, BASIC.
	WorkloadVulnerabilityMode pulumi.StringInput `pulumi:"workloadVulnerabilityMode"`
}

func (GetClusterProtectConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterProtectConfig)(nil)).Elem()
}

func (i GetClusterProtectConfigArgs) ToGetClusterProtectConfigOutput() GetClusterProtectConfigOutput {
	return i.ToGetClusterProtectConfigOutputWithContext(context.Background())
}

func (i GetClusterProtectConfigArgs) ToGetClusterProtectConfigOutputWithContext(ctx context.Context) GetClusterProtectConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterProtectConfigOutput)
}

// GetClusterProtectConfigArrayInput is an input type that accepts GetClusterProtectConfigArray and GetClusterProtectConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterProtectConfigArrayInput` via:
//
//	GetClusterProtectConfigArray{ GetClusterProtectConfigArgs{...} }
type GetClusterProtectConfigArrayInput interface {
	pulumi.Input

	ToGetClusterProtectConfigArrayOutput() GetClusterProtectConfigArrayOutput
	ToGetClusterProtectConfigArrayOutputWithContext(context.Context) GetClusterProtectConfigArrayOutput
}

type GetClusterProtectConfigArray []GetClusterProtectConfigInput

func (GetClusterProtectConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterProtectConfig)(nil)).Elem()
}

func (i GetClusterProtectConfigArray) ToGetClusterProtectConfigArrayOutput() GetClusterProtectConfigArrayOutput {
	return i.ToGetClusterProtectConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterProtectConfigArray) ToGetClusterProtectConfigArrayOutputWithContext(ctx context.Context) GetClusterProtectConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterProtectConfigArrayOutput)
}

type GetClusterProtectConfigOutput struct{ *pulumi.OutputState }

func (GetClusterProtectConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterProtectConfig)(nil)).Elem()
}

func (o GetClusterProtectConfigOutput) ToGetClusterProtectConfigOutput() GetClusterProtectConfigOutput {
	return o
}

func (o GetClusterProtectConfigOutput) ToGetClusterProtectConfigOutputWithContext(ctx context.Context) GetClusterProtectConfigOutput {
	return o
}

// WorkloadConfig defines which actions are enabled for a cluster's workload configurations.
func (o GetClusterProtectConfigOutput) WorkloadConfigs() GetClusterProtectConfigWorkloadConfigArrayOutput {
	return o.ApplyT(func(v GetClusterProtectConfig) []GetClusterProtectConfigWorkloadConfig { return v.WorkloadConfigs }).(GetClusterProtectConfigWorkloadConfigArrayOutput)
}

// Sets which mode to use for Protect workload vulnerability scanning feature. Accepted values are DISABLED, BASIC.
func (o GetClusterProtectConfigOutput) WorkloadVulnerabilityMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterProtectConfig) string { return v.WorkloadVulnerabilityMode }).(pulumi.StringOutput)
}

type GetClusterProtectConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterProtectConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterProtectConfig)(nil)).Elem()
}

func (o GetClusterProtectConfigArrayOutput) ToGetClusterProtectConfigArrayOutput() GetClusterProtectConfigArrayOutput {
	return o
}

func (o GetClusterProtectConfigArrayOutput) ToGetClusterProtectConfigArrayOutputWithContext(ctx context.Context) GetClusterProtectConfigArrayOutput {
	return o
}

func (o GetClusterProtectConfigArrayOutput) Index(i pulumi.IntInput) GetClusterProtectConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterProtectConfig {
		return vs[0].([]GetClusterProtectConfig)[vs[1].(int)]
	}).(GetClusterProtectConfigOutput)
}

type GetClusterProtectConfigWorkloadConfig struct {
	// Sets which mode of auditing should be used for the cluster's workloads. Accepted values are DISABLED, BASIC.
	AuditMode string `pulumi:"auditMode"`
}

// GetClusterProtectConfigWorkloadConfigInput is an input type that accepts GetClusterProtectConfigWorkloadConfigArgs and GetClusterProtectConfigWorkloadConfigOutput values.
// You can construct a concrete instance of `GetClusterProtectConfigWorkloadConfigInput` via:
//
//	GetClusterProtectConfigWorkloadConfigArgs{...}
type GetClusterProtectConfigWorkloadConfigInput interface {
	pulumi.Input

	ToGetClusterProtectConfigWorkloadConfigOutput() GetClusterProtectConfigWorkloadConfigOutput
	ToGetClusterProtectConfigWorkloadConfigOutputWithContext(context.Context) GetClusterProtectConfigWorkloadConfigOutput
}

type GetClusterProtectConfigWorkloadConfigArgs struct {
	// Sets which mode of auditing should be used for the cluster's workloads. Accepted values are DISABLED, BASIC.
	AuditMode pulumi.StringInput `pulumi:"auditMode"`
}

func (GetClusterProtectConfigWorkloadConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterProtectConfigWorkloadConfig)(nil)).Elem()
}

func (i GetClusterProtectConfigWorkloadConfigArgs) ToGetClusterProtectConfigWorkloadConfigOutput() GetClusterProtectConfigWorkloadConfigOutput {
	return i.ToGetClusterProtectConfigWorkloadConfigOutputWithContext(context.Background())
}

func (i GetClusterProtectConfigWorkloadConfigArgs) ToGetClusterProtectConfigWorkloadConfigOutputWithContext(ctx context.Context) GetClusterProtectConfigWorkloadConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterProtectConfigWorkloadConfigOutput)
}

// GetClusterProtectConfigWorkloadConfigArrayInput is an input type that accepts GetClusterProtectConfigWorkloadConfigArray and GetClusterProtectConfigWorkloadConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterProtectConfigWorkloadConfigArrayInput` via:
//
//	GetClusterProtectConfigWorkloadConfigArray{ GetClusterProtectConfigWorkloadConfigArgs{...} }
type GetClusterProtectConfigWorkloadConfigArrayInput interface {
	pulumi.Input

	ToGetClusterProtectConfigWorkloadConfigArrayOutput() GetClusterProtectConfigWorkloadConfigArrayOutput
	ToGetClusterProtectConfigWorkloadConfigArrayOutputWithContext(context.Context) GetClusterProtectConfigWorkloadConfigArrayOutput
}

type GetClusterProtectConfigWorkloadConfigArray []GetClusterProtectConfigWorkloadConfigInput

func (GetClusterProtectConfigWorkloadConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterProtectConfigWorkloadConfig)(nil)).Elem()
}

func (i GetClusterProtectConfigWorkloadConfigArray) ToGetClusterProtectConfigWorkloadConfigArrayOutput() GetClusterProtectConfigWorkloadConfigArrayOutput {
	return i.ToGetClusterProtectConfigWorkloadConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterProtectConfigWorkloadConfigArray) ToGetClusterProtectConfigWorkloadConfigArrayOutputWithContext(ctx context.Context) GetClusterProtectConfigWorkloadConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterProtectConfigWorkloadConfigArrayOutput)
}

type GetClusterProtectConfigWorkloadConfigOutput struct{ *pulumi.OutputState }

func (GetClusterProtectConfigWorkloadConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterProtectConfigWorkloadConfig)(nil)).Elem()
}

func (o GetClusterProtectConfigWorkloadConfigOutput) ToGetClusterProtectConfigWorkloadConfigOutput() GetClusterProtectConfigWorkloadConfigOutput {
	return o
}

func (o GetClusterProtectConfigWorkloadConfigOutput) ToGetClusterProtectConfigWorkloadConfigOutputWithContext(ctx context.Context) GetClusterProtectConfigWorkloadConfigOutput {
	return o
}

// Sets which mode of auditing should be used for the cluster's workloads. Accepted values are DISABLED, BASIC.
func (o GetClusterProtectConfigWorkloadConfigOutput) AuditMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterProtectConfigWorkloadConfig) string { return v.AuditMode }).(pulumi.StringOutput)
}

type GetClusterProtectConfigWorkloadConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterProtectConfigWorkloadConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterProtectConfigWorkloadConfig)(nil)).Elem()
}

func (o GetClusterProtectConfigWorkloadConfigArrayOutput) ToGetClusterProtectConfigWorkloadConfigArrayOutput() GetClusterProtectConfigWorkloadConfigArrayOutput {
	return o
}

func (o GetClusterProtectConfigWorkloadConfigArrayOutput) ToGetClusterProtectConfigWorkloadConfigArrayOutputWithContext(ctx context.Context) GetClusterProtectConfigWorkloadConfigArrayOutput {
	return o
}

func (o GetClusterProtectConfigWorkloadConfigArrayOutput) Index(i pulumi.IntInput) GetClusterProtectConfigWorkloadConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterProtectConfigWorkloadConfig {
		return vs[0].([]GetClusterProtectConfigWorkloadConfig)[vs[1].(int)]
	}).(GetClusterProtectConfigWorkloadConfigOutput)
}

type GetClusterReleaseChannel struct {
	// The selected release channel. Accepted values are:
	// * UNSPECIFIED: Not set.
	// * RAPID: Weekly upgrade cadence; Early testers and developers who requires new features.
	// * REGULAR: Multiple per month upgrade cadence; Production users who need features not yet offered in the Stable channel.
	// * STABLE: Every few months upgrade cadence; Production users who need stability above all else, and for whom frequent upgrades are too risky.
	Channel string `pulumi:"channel"`
}

// GetClusterReleaseChannelInput is an input type that accepts GetClusterReleaseChannelArgs and GetClusterReleaseChannelOutput values.
// You can construct a concrete instance of `GetClusterReleaseChannelInput` via:
//
//	GetClusterReleaseChannelArgs{...}
type GetClusterReleaseChannelInput interface {
	pulumi.Input

	ToGetClusterReleaseChannelOutput() GetClusterReleaseChannelOutput
	ToGetClusterReleaseChannelOutputWithContext(context.Context) GetClusterReleaseChannelOutput
}

type GetClusterReleaseChannelArgs struct {
	// The selected release channel. Accepted values are:
	// * UNSPECIFIED: Not set.
	// * RAPID: Weekly upgrade cadence; Early testers and developers who requires new features.
	// * REGULAR: Multiple per month upgrade cadence; Production users who need features not yet offered in the Stable channel.
	// * STABLE: Every few months upgrade cadence; Production users who need stability above all else, and for whom frequent upgrades are too risky.
	Channel pulumi.StringInput `pulumi:"channel"`
}

func (GetClusterReleaseChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterReleaseChannel)(nil)).Elem()
}

func (i GetClusterReleaseChannelArgs) ToGetClusterReleaseChannelOutput() GetClusterReleaseChannelOutput {
	return i.ToGetClusterReleaseChannelOutputWithContext(context.Background())
}

func (i GetClusterReleaseChannelArgs) ToGetClusterReleaseChannelOutputWithContext(ctx context.Context) GetClusterReleaseChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterReleaseChannelOutput)
}

// GetClusterReleaseChannelArrayInput is an input type that accepts GetClusterReleaseChannelArray and GetClusterReleaseChannelArrayOutput values.
// You can construct a concrete instance of `GetClusterReleaseChannelArrayInput` via:
//
//	GetClusterReleaseChannelArray{ GetClusterReleaseChannelArgs{...} }
type GetClusterReleaseChannelArrayInput interface {
	pulumi.Input

	ToGetClusterReleaseChannelArrayOutput() GetClusterReleaseChannelArrayOutput
	ToGetClusterReleaseChannelArrayOutputWithContext(context.Context) GetClusterReleaseChannelArrayOutput
}

type GetClusterReleaseChannelArray []GetClusterReleaseChannelInput

func (GetClusterReleaseChannelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterReleaseChannel)(nil)).Elem()
}

func (i GetClusterReleaseChannelArray) ToGetClusterReleaseChannelArrayOutput() GetClusterReleaseChannelArrayOutput {
	return i.ToGetClusterReleaseChannelArrayOutputWithContext(context.Background())
}

func (i GetClusterReleaseChannelArray) ToGetClusterReleaseChannelArrayOutputWithContext(ctx context.Context) GetClusterReleaseChannelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterReleaseChannelArrayOutput)
}

type GetClusterReleaseChannelOutput struct{ *pulumi.OutputState }

func (GetClusterReleaseChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterReleaseChannel)(nil)).Elem()
}

func (o GetClusterReleaseChannelOutput) ToGetClusterReleaseChannelOutput() GetClusterReleaseChannelOutput {
	return o
}

func (o GetClusterReleaseChannelOutput) ToGetClusterReleaseChannelOutputWithContext(ctx context.Context) GetClusterReleaseChannelOutput {
	return o
}

// The selected release channel. Accepted values are:
// * UNSPECIFIED: Not set.
// * RAPID: Weekly upgrade cadence; Early testers and developers who requires new features.
// * REGULAR: Multiple per month upgrade cadence; Production users who need features not yet offered in the Stable channel.
// * STABLE: Every few months upgrade cadence; Production users who need stability above all else, and for whom frequent upgrades are too risky.
func (o GetClusterReleaseChannelOutput) Channel() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterReleaseChannel) string { return v.Channel }).(pulumi.StringOutput)
}

type GetClusterReleaseChannelArrayOutput struct{ *pulumi.OutputState }

func (GetClusterReleaseChannelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterReleaseChannel)(nil)).Elem()
}

func (o GetClusterReleaseChannelArrayOutput) ToGetClusterReleaseChannelArrayOutput() GetClusterReleaseChannelArrayOutput {
	return o
}

func (o GetClusterReleaseChannelArrayOutput) ToGetClusterReleaseChannelArrayOutputWithContext(ctx context.Context) GetClusterReleaseChannelArrayOutput {
	return o
}

func (o GetClusterReleaseChannelArrayOutput) Index(i pulumi.IntInput) GetClusterReleaseChannelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterReleaseChannel {
		return vs[0].([]GetClusterReleaseChannel)[vs[1].(int)]
	}).(GetClusterReleaseChannelOutput)
}

type GetClusterResourceUsageExportConfig struct {
	// Parameters for using BigQuery as the destination of resource usage export.
	BigqueryDestinations []GetClusterResourceUsageExportConfigBigqueryDestination `pulumi:"bigqueryDestinations"`
	// Whether to enable network egress metering for this cluster. If enabled, a daemonset will be created in the cluster to meter network egress traffic.
	EnableNetworkEgressMetering bool `pulumi:"enableNetworkEgressMetering"`
	// Whether to enable resource consumption metering on this cluster. When enabled, a table will be created in the resource export BigQuery dataset to store resource consumption data. The resulting table can be joined with the resource usage table or with BigQuery billing export. Defaults to true.
	EnableResourceConsumptionMetering bool `pulumi:"enableResourceConsumptionMetering"`
}

// GetClusterResourceUsageExportConfigInput is an input type that accepts GetClusterResourceUsageExportConfigArgs and GetClusterResourceUsageExportConfigOutput values.
// You can construct a concrete instance of `GetClusterResourceUsageExportConfigInput` via:
//
//	GetClusterResourceUsageExportConfigArgs{...}
type GetClusterResourceUsageExportConfigInput interface {
	pulumi.Input

	ToGetClusterResourceUsageExportConfigOutput() GetClusterResourceUsageExportConfigOutput
	ToGetClusterResourceUsageExportConfigOutputWithContext(context.Context) GetClusterResourceUsageExportConfigOutput
}

type GetClusterResourceUsageExportConfigArgs struct {
	// Parameters for using BigQuery as the destination of resource usage export.
	BigqueryDestinations GetClusterResourceUsageExportConfigBigqueryDestinationArrayInput `pulumi:"bigqueryDestinations"`
	// Whether to enable network egress metering for this cluster. If enabled, a daemonset will be created in the cluster to meter network egress traffic.
	EnableNetworkEgressMetering pulumi.BoolInput `pulumi:"enableNetworkEgressMetering"`
	// Whether to enable resource consumption metering on this cluster. When enabled, a table will be created in the resource export BigQuery dataset to store resource consumption data. The resulting table can be joined with the resource usage table or with BigQuery billing export. Defaults to true.
	EnableResourceConsumptionMetering pulumi.BoolInput `pulumi:"enableResourceConsumptionMetering"`
}

func (GetClusterResourceUsageExportConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterResourceUsageExportConfig)(nil)).Elem()
}

func (i GetClusterResourceUsageExportConfigArgs) ToGetClusterResourceUsageExportConfigOutput() GetClusterResourceUsageExportConfigOutput {
	return i.ToGetClusterResourceUsageExportConfigOutputWithContext(context.Background())
}

func (i GetClusterResourceUsageExportConfigArgs) ToGetClusterResourceUsageExportConfigOutputWithContext(ctx context.Context) GetClusterResourceUsageExportConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterResourceUsageExportConfigOutput)
}

// GetClusterResourceUsageExportConfigArrayInput is an input type that accepts GetClusterResourceUsageExportConfigArray and GetClusterResourceUsageExportConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterResourceUsageExportConfigArrayInput` via:
//
//	GetClusterResourceUsageExportConfigArray{ GetClusterResourceUsageExportConfigArgs{...} }
type GetClusterResourceUsageExportConfigArrayInput interface {
	pulumi.Input

	ToGetClusterResourceUsageExportConfigArrayOutput() GetClusterResourceUsageExportConfigArrayOutput
	ToGetClusterResourceUsageExportConfigArrayOutputWithContext(context.Context) GetClusterResourceUsageExportConfigArrayOutput
}

type GetClusterResourceUsageExportConfigArray []GetClusterResourceUsageExportConfigInput

func (GetClusterResourceUsageExportConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterResourceUsageExportConfig)(nil)).Elem()
}

func (i GetClusterResourceUsageExportConfigArray) ToGetClusterResourceUsageExportConfigArrayOutput() GetClusterResourceUsageExportConfigArrayOutput {
	return i.ToGetClusterResourceUsageExportConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterResourceUsageExportConfigArray) ToGetClusterResourceUsageExportConfigArrayOutputWithContext(ctx context.Context) GetClusterResourceUsageExportConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterResourceUsageExportConfigArrayOutput)
}

type GetClusterResourceUsageExportConfigOutput struct{ *pulumi.OutputState }

func (GetClusterResourceUsageExportConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterResourceUsageExportConfig)(nil)).Elem()
}

func (o GetClusterResourceUsageExportConfigOutput) ToGetClusterResourceUsageExportConfigOutput() GetClusterResourceUsageExportConfigOutput {
	return o
}

func (o GetClusterResourceUsageExportConfigOutput) ToGetClusterResourceUsageExportConfigOutputWithContext(ctx context.Context) GetClusterResourceUsageExportConfigOutput {
	return o
}

// Parameters for using BigQuery as the destination of resource usage export.
func (o GetClusterResourceUsageExportConfigOutput) BigqueryDestinations() GetClusterResourceUsageExportConfigBigqueryDestinationArrayOutput {
	return o.ApplyT(func(v GetClusterResourceUsageExportConfig) []GetClusterResourceUsageExportConfigBigqueryDestination {
		return v.BigqueryDestinations
	}).(GetClusterResourceUsageExportConfigBigqueryDestinationArrayOutput)
}

// Whether to enable network egress metering for this cluster. If enabled, a daemonset will be created in the cluster to meter network egress traffic.
func (o GetClusterResourceUsageExportConfigOutput) EnableNetworkEgressMetering() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterResourceUsageExportConfig) bool { return v.EnableNetworkEgressMetering }).(pulumi.BoolOutput)
}

// Whether to enable resource consumption metering on this cluster. When enabled, a table will be created in the resource export BigQuery dataset to store resource consumption data. The resulting table can be joined with the resource usage table or with BigQuery billing export. Defaults to true.
func (o GetClusterResourceUsageExportConfigOutput) EnableResourceConsumptionMetering() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterResourceUsageExportConfig) bool { return v.EnableResourceConsumptionMetering }).(pulumi.BoolOutput)
}

type GetClusterResourceUsageExportConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterResourceUsageExportConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterResourceUsageExportConfig)(nil)).Elem()
}

func (o GetClusterResourceUsageExportConfigArrayOutput) ToGetClusterResourceUsageExportConfigArrayOutput() GetClusterResourceUsageExportConfigArrayOutput {
	return o
}

func (o GetClusterResourceUsageExportConfigArrayOutput) ToGetClusterResourceUsageExportConfigArrayOutputWithContext(ctx context.Context) GetClusterResourceUsageExportConfigArrayOutput {
	return o
}

func (o GetClusterResourceUsageExportConfigArrayOutput) Index(i pulumi.IntInput) GetClusterResourceUsageExportConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterResourceUsageExportConfig {
		return vs[0].([]GetClusterResourceUsageExportConfig)[vs[1].(int)]
	}).(GetClusterResourceUsageExportConfigOutput)
}

type GetClusterResourceUsageExportConfigBigqueryDestination struct {
	// The ID of a BigQuery Dataset.
	DatasetId string `pulumi:"datasetId"`
}

// GetClusterResourceUsageExportConfigBigqueryDestinationInput is an input type that accepts GetClusterResourceUsageExportConfigBigqueryDestinationArgs and GetClusterResourceUsageExportConfigBigqueryDestinationOutput values.
// You can construct a concrete instance of `GetClusterResourceUsageExportConfigBigqueryDestinationInput` via:
//
//	GetClusterResourceUsageExportConfigBigqueryDestinationArgs{...}
type GetClusterResourceUsageExportConfigBigqueryDestinationInput interface {
	pulumi.Input

	ToGetClusterResourceUsageExportConfigBigqueryDestinationOutput() GetClusterResourceUsageExportConfigBigqueryDestinationOutput
	ToGetClusterResourceUsageExportConfigBigqueryDestinationOutputWithContext(context.Context) GetClusterResourceUsageExportConfigBigqueryDestinationOutput
}

type GetClusterResourceUsageExportConfigBigqueryDestinationArgs struct {
	// The ID of a BigQuery Dataset.
	DatasetId pulumi.StringInput `pulumi:"datasetId"`
}

func (GetClusterResourceUsageExportConfigBigqueryDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterResourceUsageExportConfigBigqueryDestination)(nil)).Elem()
}

func (i GetClusterResourceUsageExportConfigBigqueryDestinationArgs) ToGetClusterResourceUsageExportConfigBigqueryDestinationOutput() GetClusterResourceUsageExportConfigBigqueryDestinationOutput {
	return i.ToGetClusterResourceUsageExportConfigBigqueryDestinationOutputWithContext(context.Background())
}

func (i GetClusterResourceUsageExportConfigBigqueryDestinationArgs) ToGetClusterResourceUsageExportConfigBigqueryDestinationOutputWithContext(ctx context.Context) GetClusterResourceUsageExportConfigBigqueryDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterResourceUsageExportConfigBigqueryDestinationOutput)
}

// GetClusterResourceUsageExportConfigBigqueryDestinationArrayInput is an input type that accepts GetClusterResourceUsageExportConfigBigqueryDestinationArray and GetClusterResourceUsageExportConfigBigqueryDestinationArrayOutput values.
// You can construct a concrete instance of `GetClusterResourceUsageExportConfigBigqueryDestinationArrayInput` via:
//
//	GetClusterResourceUsageExportConfigBigqueryDestinationArray{ GetClusterResourceUsageExportConfigBigqueryDestinationArgs{...} }
type GetClusterResourceUsageExportConfigBigqueryDestinationArrayInput interface {
	pulumi.Input

	ToGetClusterResourceUsageExportConfigBigqueryDestinationArrayOutput() GetClusterResourceUsageExportConfigBigqueryDestinationArrayOutput
	ToGetClusterResourceUsageExportConfigBigqueryDestinationArrayOutputWithContext(context.Context) GetClusterResourceUsageExportConfigBigqueryDestinationArrayOutput
}

type GetClusterResourceUsageExportConfigBigqueryDestinationArray []GetClusterResourceUsageExportConfigBigqueryDestinationInput

func (GetClusterResourceUsageExportConfigBigqueryDestinationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterResourceUsageExportConfigBigqueryDestination)(nil)).Elem()
}

func (i GetClusterResourceUsageExportConfigBigqueryDestinationArray) ToGetClusterResourceUsageExportConfigBigqueryDestinationArrayOutput() GetClusterResourceUsageExportConfigBigqueryDestinationArrayOutput {
	return i.ToGetClusterResourceUsageExportConfigBigqueryDestinationArrayOutputWithContext(context.Background())
}

func (i GetClusterResourceUsageExportConfigBigqueryDestinationArray) ToGetClusterResourceUsageExportConfigBigqueryDestinationArrayOutputWithContext(ctx context.Context) GetClusterResourceUsageExportConfigBigqueryDestinationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterResourceUsageExportConfigBigqueryDestinationArrayOutput)
}

type GetClusterResourceUsageExportConfigBigqueryDestinationOutput struct{ *pulumi.OutputState }

func (GetClusterResourceUsageExportConfigBigqueryDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterResourceUsageExportConfigBigqueryDestination)(nil)).Elem()
}

func (o GetClusterResourceUsageExportConfigBigqueryDestinationOutput) ToGetClusterResourceUsageExportConfigBigqueryDestinationOutput() GetClusterResourceUsageExportConfigBigqueryDestinationOutput {
	return o
}

func (o GetClusterResourceUsageExportConfigBigqueryDestinationOutput) ToGetClusterResourceUsageExportConfigBigqueryDestinationOutputWithContext(ctx context.Context) GetClusterResourceUsageExportConfigBigqueryDestinationOutput {
	return o
}

// The ID of a BigQuery Dataset.
func (o GetClusterResourceUsageExportConfigBigqueryDestinationOutput) DatasetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterResourceUsageExportConfigBigqueryDestination) string { return v.DatasetId }).(pulumi.StringOutput)
}

type GetClusterResourceUsageExportConfigBigqueryDestinationArrayOutput struct{ *pulumi.OutputState }

func (GetClusterResourceUsageExportConfigBigqueryDestinationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterResourceUsageExportConfigBigqueryDestination)(nil)).Elem()
}

func (o GetClusterResourceUsageExportConfigBigqueryDestinationArrayOutput) ToGetClusterResourceUsageExportConfigBigqueryDestinationArrayOutput() GetClusterResourceUsageExportConfigBigqueryDestinationArrayOutput {
	return o
}

func (o GetClusterResourceUsageExportConfigBigqueryDestinationArrayOutput) ToGetClusterResourceUsageExportConfigBigqueryDestinationArrayOutputWithContext(ctx context.Context) GetClusterResourceUsageExportConfigBigqueryDestinationArrayOutput {
	return o
}

func (o GetClusterResourceUsageExportConfigBigqueryDestinationArrayOutput) Index(i pulumi.IntInput) GetClusterResourceUsageExportConfigBigqueryDestinationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterResourceUsageExportConfigBigqueryDestination {
		return vs[0].([]GetClusterResourceUsageExportConfigBigqueryDestination)[vs[1].(int)]
	}).(GetClusterResourceUsageExportConfigBigqueryDestinationOutput)
}

type GetClusterSecurityPostureConfig struct {
	// Sets the mode of the Kubernetes security posture API's off-cluster features. Available options include DISABLED and BASIC.
	Mode string `pulumi:"mode"`
	// Sets the mode of the Kubernetes security posture API's workload vulnerability scanning. Available options include VULNERABILITY_DISABLED, VULNERABILITY_BASIC and VULNERABILITY_ENTERPRISE.
	VulnerabilityMode string `pulumi:"vulnerabilityMode"`
}

// GetClusterSecurityPostureConfigInput is an input type that accepts GetClusterSecurityPostureConfigArgs and GetClusterSecurityPostureConfigOutput values.
// You can construct a concrete instance of `GetClusterSecurityPostureConfigInput` via:
//
//	GetClusterSecurityPostureConfigArgs{...}
type GetClusterSecurityPostureConfigInput interface {
	pulumi.Input

	ToGetClusterSecurityPostureConfigOutput() GetClusterSecurityPostureConfigOutput
	ToGetClusterSecurityPostureConfigOutputWithContext(context.Context) GetClusterSecurityPostureConfigOutput
}

type GetClusterSecurityPostureConfigArgs struct {
	// Sets the mode of the Kubernetes security posture API's off-cluster features. Available options include DISABLED and BASIC.
	Mode pulumi.StringInput `pulumi:"mode"`
	// Sets the mode of the Kubernetes security posture API's workload vulnerability scanning. Available options include VULNERABILITY_DISABLED, VULNERABILITY_BASIC and VULNERABILITY_ENTERPRISE.
	VulnerabilityMode pulumi.StringInput `pulumi:"vulnerabilityMode"`
}

func (GetClusterSecurityPostureConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterSecurityPostureConfig)(nil)).Elem()
}

func (i GetClusterSecurityPostureConfigArgs) ToGetClusterSecurityPostureConfigOutput() GetClusterSecurityPostureConfigOutput {
	return i.ToGetClusterSecurityPostureConfigOutputWithContext(context.Background())
}

func (i GetClusterSecurityPostureConfigArgs) ToGetClusterSecurityPostureConfigOutputWithContext(ctx context.Context) GetClusterSecurityPostureConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterSecurityPostureConfigOutput)
}

// GetClusterSecurityPostureConfigArrayInput is an input type that accepts GetClusterSecurityPostureConfigArray and GetClusterSecurityPostureConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterSecurityPostureConfigArrayInput` via:
//
//	GetClusterSecurityPostureConfigArray{ GetClusterSecurityPostureConfigArgs{...} }
type GetClusterSecurityPostureConfigArrayInput interface {
	pulumi.Input

	ToGetClusterSecurityPostureConfigArrayOutput() GetClusterSecurityPostureConfigArrayOutput
	ToGetClusterSecurityPostureConfigArrayOutputWithContext(context.Context) GetClusterSecurityPostureConfigArrayOutput
}

type GetClusterSecurityPostureConfigArray []GetClusterSecurityPostureConfigInput

func (GetClusterSecurityPostureConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterSecurityPostureConfig)(nil)).Elem()
}

func (i GetClusterSecurityPostureConfigArray) ToGetClusterSecurityPostureConfigArrayOutput() GetClusterSecurityPostureConfigArrayOutput {
	return i.ToGetClusterSecurityPostureConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterSecurityPostureConfigArray) ToGetClusterSecurityPostureConfigArrayOutputWithContext(ctx context.Context) GetClusterSecurityPostureConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterSecurityPostureConfigArrayOutput)
}

type GetClusterSecurityPostureConfigOutput struct{ *pulumi.OutputState }

func (GetClusterSecurityPostureConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterSecurityPostureConfig)(nil)).Elem()
}

func (o GetClusterSecurityPostureConfigOutput) ToGetClusterSecurityPostureConfigOutput() GetClusterSecurityPostureConfigOutput {
	return o
}

func (o GetClusterSecurityPostureConfigOutput) ToGetClusterSecurityPostureConfigOutputWithContext(ctx context.Context) GetClusterSecurityPostureConfigOutput {
	return o
}

// Sets the mode of the Kubernetes security posture API's off-cluster features. Available options include DISABLED and BASIC.
func (o GetClusterSecurityPostureConfigOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterSecurityPostureConfig) string { return v.Mode }).(pulumi.StringOutput)
}

// Sets the mode of the Kubernetes security posture API's workload vulnerability scanning. Available options include VULNERABILITY_DISABLED, VULNERABILITY_BASIC and VULNERABILITY_ENTERPRISE.
func (o GetClusterSecurityPostureConfigOutput) VulnerabilityMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterSecurityPostureConfig) string { return v.VulnerabilityMode }).(pulumi.StringOutput)
}

type GetClusterSecurityPostureConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterSecurityPostureConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterSecurityPostureConfig)(nil)).Elem()
}

func (o GetClusterSecurityPostureConfigArrayOutput) ToGetClusterSecurityPostureConfigArrayOutput() GetClusterSecurityPostureConfigArrayOutput {
	return o
}

func (o GetClusterSecurityPostureConfigArrayOutput) ToGetClusterSecurityPostureConfigArrayOutputWithContext(ctx context.Context) GetClusterSecurityPostureConfigArrayOutput {
	return o
}

func (o GetClusterSecurityPostureConfigArrayOutput) Index(i pulumi.IntInput) GetClusterSecurityPostureConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterSecurityPostureConfig {
		return vs[0].([]GetClusterSecurityPostureConfig)[vs[1].(int)]
	}).(GetClusterSecurityPostureConfigOutput)
}

type GetClusterServiceExternalIpsConfig struct {
	// When enabled, services with external ips specified will be allowed.
	Enabled bool `pulumi:"enabled"`
}

// GetClusterServiceExternalIpsConfigInput is an input type that accepts GetClusterServiceExternalIpsConfigArgs and GetClusterServiceExternalIpsConfigOutput values.
// You can construct a concrete instance of `GetClusterServiceExternalIpsConfigInput` via:
//
//	GetClusterServiceExternalIpsConfigArgs{...}
type GetClusterServiceExternalIpsConfigInput interface {
	pulumi.Input

	ToGetClusterServiceExternalIpsConfigOutput() GetClusterServiceExternalIpsConfigOutput
	ToGetClusterServiceExternalIpsConfigOutputWithContext(context.Context) GetClusterServiceExternalIpsConfigOutput
}

type GetClusterServiceExternalIpsConfigArgs struct {
	// When enabled, services with external ips specified will be allowed.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (GetClusterServiceExternalIpsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterServiceExternalIpsConfig)(nil)).Elem()
}

func (i GetClusterServiceExternalIpsConfigArgs) ToGetClusterServiceExternalIpsConfigOutput() GetClusterServiceExternalIpsConfigOutput {
	return i.ToGetClusterServiceExternalIpsConfigOutputWithContext(context.Background())
}

func (i GetClusterServiceExternalIpsConfigArgs) ToGetClusterServiceExternalIpsConfigOutputWithContext(ctx context.Context) GetClusterServiceExternalIpsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterServiceExternalIpsConfigOutput)
}

// GetClusterServiceExternalIpsConfigArrayInput is an input type that accepts GetClusterServiceExternalIpsConfigArray and GetClusterServiceExternalIpsConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterServiceExternalIpsConfigArrayInput` via:
//
//	GetClusterServiceExternalIpsConfigArray{ GetClusterServiceExternalIpsConfigArgs{...} }
type GetClusterServiceExternalIpsConfigArrayInput interface {
	pulumi.Input

	ToGetClusterServiceExternalIpsConfigArrayOutput() GetClusterServiceExternalIpsConfigArrayOutput
	ToGetClusterServiceExternalIpsConfigArrayOutputWithContext(context.Context) GetClusterServiceExternalIpsConfigArrayOutput
}

type GetClusterServiceExternalIpsConfigArray []GetClusterServiceExternalIpsConfigInput

func (GetClusterServiceExternalIpsConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterServiceExternalIpsConfig)(nil)).Elem()
}

func (i GetClusterServiceExternalIpsConfigArray) ToGetClusterServiceExternalIpsConfigArrayOutput() GetClusterServiceExternalIpsConfigArrayOutput {
	return i.ToGetClusterServiceExternalIpsConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterServiceExternalIpsConfigArray) ToGetClusterServiceExternalIpsConfigArrayOutputWithContext(ctx context.Context) GetClusterServiceExternalIpsConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterServiceExternalIpsConfigArrayOutput)
}

type GetClusterServiceExternalIpsConfigOutput struct{ *pulumi.OutputState }

func (GetClusterServiceExternalIpsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterServiceExternalIpsConfig)(nil)).Elem()
}

func (o GetClusterServiceExternalIpsConfigOutput) ToGetClusterServiceExternalIpsConfigOutput() GetClusterServiceExternalIpsConfigOutput {
	return o
}

func (o GetClusterServiceExternalIpsConfigOutput) ToGetClusterServiceExternalIpsConfigOutputWithContext(ctx context.Context) GetClusterServiceExternalIpsConfigOutput {
	return o
}

// When enabled, services with external ips specified will be allowed.
func (o GetClusterServiceExternalIpsConfigOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterServiceExternalIpsConfig) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type GetClusterServiceExternalIpsConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterServiceExternalIpsConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterServiceExternalIpsConfig)(nil)).Elem()
}

func (o GetClusterServiceExternalIpsConfigArrayOutput) ToGetClusterServiceExternalIpsConfigArrayOutput() GetClusterServiceExternalIpsConfigArrayOutput {
	return o
}

func (o GetClusterServiceExternalIpsConfigArrayOutput) ToGetClusterServiceExternalIpsConfigArrayOutputWithContext(ctx context.Context) GetClusterServiceExternalIpsConfigArrayOutput {
	return o
}

func (o GetClusterServiceExternalIpsConfigArrayOutput) Index(i pulumi.IntInput) GetClusterServiceExternalIpsConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterServiceExternalIpsConfig {
		return vs[0].([]GetClusterServiceExternalIpsConfig)[vs[1].(int)]
	}).(GetClusterServiceExternalIpsConfigOutput)
}

type GetClusterTpuConfig struct {
	// Whether Cloud TPU integration is enabled or not
	Enabled bool `pulumi:"enabled"`
	// IPv4 CIDR block reserved for Cloud TPU in the VPC.
	Ipv4CidrBlock string `pulumi:"ipv4CidrBlock"`
	// Whether to use service networking for Cloud TPU or not
	UseServiceNetworking bool `pulumi:"useServiceNetworking"`
}

// GetClusterTpuConfigInput is an input type that accepts GetClusterTpuConfigArgs and GetClusterTpuConfigOutput values.
// You can construct a concrete instance of `GetClusterTpuConfigInput` via:
//
//	GetClusterTpuConfigArgs{...}
type GetClusterTpuConfigInput interface {
	pulumi.Input

	ToGetClusterTpuConfigOutput() GetClusterTpuConfigOutput
	ToGetClusterTpuConfigOutputWithContext(context.Context) GetClusterTpuConfigOutput
}

type GetClusterTpuConfigArgs struct {
	// Whether Cloud TPU integration is enabled or not
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// IPv4 CIDR block reserved for Cloud TPU in the VPC.
	Ipv4CidrBlock pulumi.StringInput `pulumi:"ipv4CidrBlock"`
	// Whether to use service networking for Cloud TPU or not
	UseServiceNetworking pulumi.BoolInput `pulumi:"useServiceNetworking"`
}

func (GetClusterTpuConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterTpuConfig)(nil)).Elem()
}

func (i GetClusterTpuConfigArgs) ToGetClusterTpuConfigOutput() GetClusterTpuConfigOutput {
	return i.ToGetClusterTpuConfigOutputWithContext(context.Background())
}

func (i GetClusterTpuConfigArgs) ToGetClusterTpuConfigOutputWithContext(ctx context.Context) GetClusterTpuConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterTpuConfigOutput)
}

// GetClusterTpuConfigArrayInput is an input type that accepts GetClusterTpuConfigArray and GetClusterTpuConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterTpuConfigArrayInput` via:
//
//	GetClusterTpuConfigArray{ GetClusterTpuConfigArgs{...} }
type GetClusterTpuConfigArrayInput interface {
	pulumi.Input

	ToGetClusterTpuConfigArrayOutput() GetClusterTpuConfigArrayOutput
	ToGetClusterTpuConfigArrayOutputWithContext(context.Context) GetClusterTpuConfigArrayOutput
}

type GetClusterTpuConfigArray []GetClusterTpuConfigInput

func (GetClusterTpuConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterTpuConfig)(nil)).Elem()
}

func (i GetClusterTpuConfigArray) ToGetClusterTpuConfigArrayOutput() GetClusterTpuConfigArrayOutput {
	return i.ToGetClusterTpuConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterTpuConfigArray) ToGetClusterTpuConfigArrayOutputWithContext(ctx context.Context) GetClusterTpuConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterTpuConfigArrayOutput)
}

type GetClusterTpuConfigOutput struct{ *pulumi.OutputState }

func (GetClusterTpuConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterTpuConfig)(nil)).Elem()
}

func (o GetClusterTpuConfigOutput) ToGetClusterTpuConfigOutput() GetClusterTpuConfigOutput {
	return o
}

func (o GetClusterTpuConfigOutput) ToGetClusterTpuConfigOutputWithContext(ctx context.Context) GetClusterTpuConfigOutput {
	return o
}

// Whether Cloud TPU integration is enabled or not
func (o GetClusterTpuConfigOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterTpuConfig) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// IPv4 CIDR block reserved for Cloud TPU in the VPC.
func (o GetClusterTpuConfigOutput) Ipv4CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterTpuConfig) string { return v.Ipv4CidrBlock }).(pulumi.StringOutput)
}

// Whether to use service networking for Cloud TPU or not
func (o GetClusterTpuConfigOutput) UseServiceNetworking() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterTpuConfig) bool { return v.UseServiceNetworking }).(pulumi.BoolOutput)
}

type GetClusterTpuConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterTpuConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterTpuConfig)(nil)).Elem()
}

func (o GetClusterTpuConfigArrayOutput) ToGetClusterTpuConfigArrayOutput() GetClusterTpuConfigArrayOutput {
	return o
}

func (o GetClusterTpuConfigArrayOutput) ToGetClusterTpuConfigArrayOutputWithContext(ctx context.Context) GetClusterTpuConfigArrayOutput {
	return o
}

func (o GetClusterTpuConfigArrayOutput) Index(i pulumi.IntInput) GetClusterTpuConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterTpuConfig {
		return vs[0].([]GetClusterTpuConfig)[vs[1].(int)]
	}).(GetClusterTpuConfigOutput)
}

type GetClusterVerticalPodAutoscaling struct {
	// Enables vertical pod autoscaling.
	Enabled bool `pulumi:"enabled"`
}

// GetClusterVerticalPodAutoscalingInput is an input type that accepts GetClusterVerticalPodAutoscalingArgs and GetClusterVerticalPodAutoscalingOutput values.
// You can construct a concrete instance of `GetClusterVerticalPodAutoscalingInput` via:
//
//	GetClusterVerticalPodAutoscalingArgs{...}
type GetClusterVerticalPodAutoscalingInput interface {
	pulumi.Input

	ToGetClusterVerticalPodAutoscalingOutput() GetClusterVerticalPodAutoscalingOutput
	ToGetClusterVerticalPodAutoscalingOutputWithContext(context.Context) GetClusterVerticalPodAutoscalingOutput
}

type GetClusterVerticalPodAutoscalingArgs struct {
	// Enables vertical pod autoscaling.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (GetClusterVerticalPodAutoscalingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterVerticalPodAutoscaling)(nil)).Elem()
}

func (i GetClusterVerticalPodAutoscalingArgs) ToGetClusterVerticalPodAutoscalingOutput() GetClusterVerticalPodAutoscalingOutput {
	return i.ToGetClusterVerticalPodAutoscalingOutputWithContext(context.Background())
}

func (i GetClusterVerticalPodAutoscalingArgs) ToGetClusterVerticalPodAutoscalingOutputWithContext(ctx context.Context) GetClusterVerticalPodAutoscalingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterVerticalPodAutoscalingOutput)
}

// GetClusterVerticalPodAutoscalingArrayInput is an input type that accepts GetClusterVerticalPodAutoscalingArray and GetClusterVerticalPodAutoscalingArrayOutput values.
// You can construct a concrete instance of `GetClusterVerticalPodAutoscalingArrayInput` via:
//
//	GetClusterVerticalPodAutoscalingArray{ GetClusterVerticalPodAutoscalingArgs{...} }
type GetClusterVerticalPodAutoscalingArrayInput interface {
	pulumi.Input

	ToGetClusterVerticalPodAutoscalingArrayOutput() GetClusterVerticalPodAutoscalingArrayOutput
	ToGetClusterVerticalPodAutoscalingArrayOutputWithContext(context.Context) GetClusterVerticalPodAutoscalingArrayOutput
}

type GetClusterVerticalPodAutoscalingArray []GetClusterVerticalPodAutoscalingInput

func (GetClusterVerticalPodAutoscalingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterVerticalPodAutoscaling)(nil)).Elem()
}

func (i GetClusterVerticalPodAutoscalingArray) ToGetClusterVerticalPodAutoscalingArrayOutput() GetClusterVerticalPodAutoscalingArrayOutput {
	return i.ToGetClusterVerticalPodAutoscalingArrayOutputWithContext(context.Background())
}

func (i GetClusterVerticalPodAutoscalingArray) ToGetClusterVerticalPodAutoscalingArrayOutputWithContext(ctx context.Context) GetClusterVerticalPodAutoscalingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterVerticalPodAutoscalingArrayOutput)
}

type GetClusterVerticalPodAutoscalingOutput struct{ *pulumi.OutputState }

func (GetClusterVerticalPodAutoscalingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterVerticalPodAutoscaling)(nil)).Elem()
}

func (o GetClusterVerticalPodAutoscalingOutput) ToGetClusterVerticalPodAutoscalingOutput() GetClusterVerticalPodAutoscalingOutput {
	return o
}

func (o GetClusterVerticalPodAutoscalingOutput) ToGetClusterVerticalPodAutoscalingOutputWithContext(ctx context.Context) GetClusterVerticalPodAutoscalingOutput {
	return o
}

// Enables vertical pod autoscaling.
func (o GetClusterVerticalPodAutoscalingOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterVerticalPodAutoscaling) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type GetClusterVerticalPodAutoscalingArrayOutput struct{ *pulumi.OutputState }

func (GetClusterVerticalPodAutoscalingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterVerticalPodAutoscaling)(nil)).Elem()
}

func (o GetClusterVerticalPodAutoscalingArrayOutput) ToGetClusterVerticalPodAutoscalingArrayOutput() GetClusterVerticalPodAutoscalingArrayOutput {
	return o
}

func (o GetClusterVerticalPodAutoscalingArrayOutput) ToGetClusterVerticalPodAutoscalingArrayOutputWithContext(ctx context.Context) GetClusterVerticalPodAutoscalingArrayOutput {
	return o
}

func (o GetClusterVerticalPodAutoscalingArrayOutput) Index(i pulumi.IntInput) GetClusterVerticalPodAutoscalingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterVerticalPodAutoscaling {
		return vs[0].([]GetClusterVerticalPodAutoscaling)[vs[1].(int)]
	}).(GetClusterVerticalPodAutoscalingOutput)
}

type GetClusterWorkloadAltsConfig struct {
	// Whether the alts handshaker should be enabled or not for direct-path. Requires Workload Identity (workloadPool must be non-empty).
	EnableAlts bool `pulumi:"enableAlts"`
}

// GetClusterWorkloadAltsConfigInput is an input type that accepts GetClusterWorkloadAltsConfigArgs and GetClusterWorkloadAltsConfigOutput values.
// You can construct a concrete instance of `GetClusterWorkloadAltsConfigInput` via:
//
//	GetClusterWorkloadAltsConfigArgs{...}
type GetClusterWorkloadAltsConfigInput interface {
	pulumi.Input

	ToGetClusterWorkloadAltsConfigOutput() GetClusterWorkloadAltsConfigOutput
	ToGetClusterWorkloadAltsConfigOutputWithContext(context.Context) GetClusterWorkloadAltsConfigOutput
}

type GetClusterWorkloadAltsConfigArgs struct {
	// Whether the alts handshaker should be enabled or not for direct-path. Requires Workload Identity (workloadPool must be non-empty).
	EnableAlts pulumi.BoolInput `pulumi:"enableAlts"`
}

func (GetClusterWorkloadAltsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterWorkloadAltsConfig)(nil)).Elem()
}

func (i GetClusterWorkloadAltsConfigArgs) ToGetClusterWorkloadAltsConfigOutput() GetClusterWorkloadAltsConfigOutput {
	return i.ToGetClusterWorkloadAltsConfigOutputWithContext(context.Background())
}

func (i GetClusterWorkloadAltsConfigArgs) ToGetClusterWorkloadAltsConfigOutputWithContext(ctx context.Context) GetClusterWorkloadAltsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterWorkloadAltsConfigOutput)
}

// GetClusterWorkloadAltsConfigArrayInput is an input type that accepts GetClusterWorkloadAltsConfigArray and GetClusterWorkloadAltsConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterWorkloadAltsConfigArrayInput` via:
//
//	GetClusterWorkloadAltsConfigArray{ GetClusterWorkloadAltsConfigArgs{...} }
type GetClusterWorkloadAltsConfigArrayInput interface {
	pulumi.Input

	ToGetClusterWorkloadAltsConfigArrayOutput() GetClusterWorkloadAltsConfigArrayOutput
	ToGetClusterWorkloadAltsConfigArrayOutputWithContext(context.Context) GetClusterWorkloadAltsConfigArrayOutput
}

type GetClusterWorkloadAltsConfigArray []GetClusterWorkloadAltsConfigInput

func (GetClusterWorkloadAltsConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterWorkloadAltsConfig)(nil)).Elem()
}

func (i GetClusterWorkloadAltsConfigArray) ToGetClusterWorkloadAltsConfigArrayOutput() GetClusterWorkloadAltsConfigArrayOutput {
	return i.ToGetClusterWorkloadAltsConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterWorkloadAltsConfigArray) ToGetClusterWorkloadAltsConfigArrayOutputWithContext(ctx context.Context) GetClusterWorkloadAltsConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterWorkloadAltsConfigArrayOutput)
}

type GetClusterWorkloadAltsConfigOutput struct{ *pulumi.OutputState }

func (GetClusterWorkloadAltsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterWorkloadAltsConfig)(nil)).Elem()
}

func (o GetClusterWorkloadAltsConfigOutput) ToGetClusterWorkloadAltsConfigOutput() GetClusterWorkloadAltsConfigOutput {
	return o
}

func (o GetClusterWorkloadAltsConfigOutput) ToGetClusterWorkloadAltsConfigOutputWithContext(ctx context.Context) GetClusterWorkloadAltsConfigOutput {
	return o
}

// Whether the alts handshaker should be enabled or not for direct-path. Requires Workload Identity (workloadPool must be non-empty).
func (o GetClusterWorkloadAltsConfigOutput) EnableAlts() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterWorkloadAltsConfig) bool { return v.EnableAlts }).(pulumi.BoolOutput)
}

type GetClusterWorkloadAltsConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterWorkloadAltsConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterWorkloadAltsConfig)(nil)).Elem()
}

func (o GetClusterWorkloadAltsConfigArrayOutput) ToGetClusterWorkloadAltsConfigArrayOutput() GetClusterWorkloadAltsConfigArrayOutput {
	return o
}

func (o GetClusterWorkloadAltsConfigArrayOutput) ToGetClusterWorkloadAltsConfigArrayOutputWithContext(ctx context.Context) GetClusterWorkloadAltsConfigArrayOutput {
	return o
}

func (o GetClusterWorkloadAltsConfigArrayOutput) Index(i pulumi.IntInput) GetClusterWorkloadAltsConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterWorkloadAltsConfig {
		return vs[0].([]GetClusterWorkloadAltsConfig)[vs[1].(int)]
	}).(GetClusterWorkloadAltsConfigOutput)
}

type GetClusterWorkloadIdentityConfig struct {
	// The workload pool to attach all Kubernetes service accounts to.
	WorkloadPool string `pulumi:"workloadPool"`
}

// GetClusterWorkloadIdentityConfigInput is an input type that accepts GetClusterWorkloadIdentityConfigArgs and GetClusterWorkloadIdentityConfigOutput values.
// You can construct a concrete instance of `GetClusterWorkloadIdentityConfigInput` via:
//
//	GetClusterWorkloadIdentityConfigArgs{...}
type GetClusterWorkloadIdentityConfigInput interface {
	pulumi.Input

	ToGetClusterWorkloadIdentityConfigOutput() GetClusterWorkloadIdentityConfigOutput
	ToGetClusterWorkloadIdentityConfigOutputWithContext(context.Context) GetClusterWorkloadIdentityConfigOutput
}

type GetClusterWorkloadIdentityConfigArgs struct {
	// The workload pool to attach all Kubernetes service accounts to.
	WorkloadPool pulumi.StringInput `pulumi:"workloadPool"`
}

func (GetClusterWorkloadIdentityConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterWorkloadIdentityConfig)(nil)).Elem()
}

func (i GetClusterWorkloadIdentityConfigArgs) ToGetClusterWorkloadIdentityConfigOutput() GetClusterWorkloadIdentityConfigOutput {
	return i.ToGetClusterWorkloadIdentityConfigOutputWithContext(context.Background())
}

func (i GetClusterWorkloadIdentityConfigArgs) ToGetClusterWorkloadIdentityConfigOutputWithContext(ctx context.Context) GetClusterWorkloadIdentityConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterWorkloadIdentityConfigOutput)
}

// GetClusterWorkloadIdentityConfigArrayInput is an input type that accepts GetClusterWorkloadIdentityConfigArray and GetClusterWorkloadIdentityConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterWorkloadIdentityConfigArrayInput` via:
//
//	GetClusterWorkloadIdentityConfigArray{ GetClusterWorkloadIdentityConfigArgs{...} }
type GetClusterWorkloadIdentityConfigArrayInput interface {
	pulumi.Input

	ToGetClusterWorkloadIdentityConfigArrayOutput() GetClusterWorkloadIdentityConfigArrayOutput
	ToGetClusterWorkloadIdentityConfigArrayOutputWithContext(context.Context) GetClusterWorkloadIdentityConfigArrayOutput
}

type GetClusterWorkloadIdentityConfigArray []GetClusterWorkloadIdentityConfigInput

func (GetClusterWorkloadIdentityConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterWorkloadIdentityConfig)(nil)).Elem()
}

func (i GetClusterWorkloadIdentityConfigArray) ToGetClusterWorkloadIdentityConfigArrayOutput() GetClusterWorkloadIdentityConfigArrayOutput {
	return i.ToGetClusterWorkloadIdentityConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterWorkloadIdentityConfigArray) ToGetClusterWorkloadIdentityConfigArrayOutputWithContext(ctx context.Context) GetClusterWorkloadIdentityConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterWorkloadIdentityConfigArrayOutput)
}

type GetClusterWorkloadIdentityConfigOutput struct{ *pulumi.OutputState }

func (GetClusterWorkloadIdentityConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterWorkloadIdentityConfig)(nil)).Elem()
}

func (o GetClusterWorkloadIdentityConfigOutput) ToGetClusterWorkloadIdentityConfigOutput() GetClusterWorkloadIdentityConfigOutput {
	return o
}

func (o GetClusterWorkloadIdentityConfigOutput) ToGetClusterWorkloadIdentityConfigOutputWithContext(ctx context.Context) GetClusterWorkloadIdentityConfigOutput {
	return o
}

// The workload pool to attach all Kubernetes service accounts to.
func (o GetClusterWorkloadIdentityConfigOutput) WorkloadPool() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterWorkloadIdentityConfig) string { return v.WorkloadPool }).(pulumi.StringOutput)
}

type GetClusterWorkloadIdentityConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterWorkloadIdentityConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterWorkloadIdentityConfig)(nil)).Elem()
}

func (o GetClusterWorkloadIdentityConfigArrayOutput) ToGetClusterWorkloadIdentityConfigArrayOutput() GetClusterWorkloadIdentityConfigArrayOutput {
	return o
}

func (o GetClusterWorkloadIdentityConfigArrayOutput) ToGetClusterWorkloadIdentityConfigArrayOutputWithContext(ctx context.Context) GetClusterWorkloadIdentityConfigArrayOutput {
	return o
}

func (o GetClusterWorkloadIdentityConfigArrayOutput) Index(i pulumi.IntInput) GetClusterWorkloadIdentityConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterWorkloadIdentityConfig {
		return vs[0].([]GetClusterWorkloadIdentityConfig)[vs[1].(int)]
	}).(GetClusterWorkloadIdentityConfigOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AttachedClusterAuthorizationInput)(nil)).Elem(), AttachedClusterAuthorizationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AttachedClusterAuthorizationPtrInput)(nil)).Elem(), AttachedClusterAuthorizationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AttachedClusterBinaryAuthorizationInput)(nil)).Elem(), AttachedClusterBinaryAuthorizationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AttachedClusterBinaryAuthorizationPtrInput)(nil)).Elem(), AttachedClusterBinaryAuthorizationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AttachedClusterErrorInput)(nil)).Elem(), AttachedClusterErrorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AttachedClusterErrorArrayInput)(nil)).Elem(), AttachedClusterErrorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AttachedClusterFleetInput)(nil)).Elem(), AttachedClusterFleetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AttachedClusterFleetPtrInput)(nil)).Elem(), AttachedClusterFleetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AttachedClusterLoggingConfigInput)(nil)).Elem(), AttachedClusterLoggingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AttachedClusterLoggingConfigPtrInput)(nil)).Elem(), AttachedClusterLoggingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AttachedClusterLoggingConfigComponentConfigInput)(nil)).Elem(), AttachedClusterLoggingConfigComponentConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AttachedClusterLoggingConfigComponentConfigPtrInput)(nil)).Elem(), AttachedClusterLoggingConfigComponentConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AttachedClusterMonitoringConfigInput)(nil)).Elem(), AttachedClusterMonitoringConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AttachedClusterMonitoringConfigPtrInput)(nil)).Elem(), AttachedClusterMonitoringConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AttachedClusterMonitoringConfigManagedPrometheusConfigInput)(nil)).Elem(), AttachedClusterMonitoringConfigManagedPrometheusConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AttachedClusterMonitoringConfigManagedPrometheusConfigPtrInput)(nil)).Elem(), AttachedClusterMonitoringConfigManagedPrometheusConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AttachedClusterOidcConfigInput)(nil)).Elem(), AttachedClusterOidcConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AttachedClusterOidcConfigPtrInput)(nil)).Elem(), AttachedClusterOidcConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AttachedClusterProxyConfigInput)(nil)).Elem(), AttachedClusterProxyConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AttachedClusterProxyConfigPtrInput)(nil)).Elem(), AttachedClusterProxyConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AttachedClusterProxyConfigKubernetesSecretInput)(nil)).Elem(), AttachedClusterProxyConfigKubernetesSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AttachedClusterProxyConfigKubernetesSecretPtrInput)(nil)).Elem(), AttachedClusterProxyConfigKubernetesSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AttachedClusterWorkloadIdentityConfigInput)(nil)).Elem(), AttachedClusterWorkloadIdentityConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AttachedClusterWorkloadIdentityConfigArrayInput)(nil)).Elem(), AttachedClusterWorkloadIdentityConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsClusterAuthorizationInput)(nil)).Elem(), AwsClusterAuthorizationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsClusterAuthorizationPtrInput)(nil)).Elem(), AwsClusterAuthorizationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsClusterAuthorizationAdminGroupInput)(nil)).Elem(), AwsClusterAuthorizationAdminGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsClusterAuthorizationAdminGroupArrayInput)(nil)).Elem(), AwsClusterAuthorizationAdminGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsClusterAuthorizationAdminUserInput)(nil)).Elem(), AwsClusterAuthorizationAdminUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsClusterAuthorizationAdminUserArrayInput)(nil)).Elem(), AwsClusterAuthorizationAdminUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsClusterBinaryAuthorizationInput)(nil)).Elem(), AwsClusterBinaryAuthorizationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsClusterBinaryAuthorizationPtrInput)(nil)).Elem(), AwsClusterBinaryAuthorizationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsClusterControlPlaneInput)(nil)).Elem(), AwsClusterControlPlaneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsClusterControlPlanePtrInput)(nil)).Elem(), AwsClusterControlPlaneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsClusterControlPlaneAwsServicesAuthenticationInput)(nil)).Elem(), AwsClusterControlPlaneAwsServicesAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsClusterControlPlaneAwsServicesAuthenticationPtrInput)(nil)).Elem(), AwsClusterControlPlaneAwsServicesAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsClusterControlPlaneConfigEncryptionInput)(nil)).Elem(), AwsClusterControlPlaneConfigEncryptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsClusterControlPlaneConfigEncryptionPtrInput)(nil)).Elem(), AwsClusterControlPlaneConfigEncryptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsClusterControlPlaneDatabaseEncryptionInput)(nil)).Elem(), AwsClusterControlPlaneDatabaseEncryptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsClusterControlPlaneDatabaseEncryptionPtrInput)(nil)).Elem(), AwsClusterControlPlaneDatabaseEncryptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsClusterControlPlaneInstancePlacementInput)(nil)).Elem(), AwsClusterControlPlaneInstancePlacementArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsClusterControlPlaneInstancePlacementPtrInput)(nil)).Elem(), AwsClusterControlPlaneInstancePlacementArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsClusterControlPlaneMainVolumeInput)(nil)).Elem(), AwsClusterControlPlaneMainVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsClusterControlPlaneMainVolumePtrInput)(nil)).Elem(), AwsClusterControlPlaneMainVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsClusterControlPlaneProxyConfigInput)(nil)).Elem(), AwsClusterControlPlaneProxyConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsClusterControlPlaneProxyConfigPtrInput)(nil)).Elem(), AwsClusterControlPlaneProxyConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsClusterControlPlaneRootVolumeInput)(nil)).Elem(), AwsClusterControlPlaneRootVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsClusterControlPlaneRootVolumePtrInput)(nil)).Elem(), AwsClusterControlPlaneRootVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsClusterControlPlaneSshConfigInput)(nil)).Elem(), AwsClusterControlPlaneSshConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsClusterControlPlaneSshConfigPtrInput)(nil)).Elem(), AwsClusterControlPlaneSshConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsClusterFleetInput)(nil)).Elem(), AwsClusterFleetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsClusterFleetPtrInput)(nil)).Elem(), AwsClusterFleetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsClusterLoggingConfigInput)(nil)).Elem(), AwsClusterLoggingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsClusterLoggingConfigPtrInput)(nil)).Elem(), AwsClusterLoggingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsClusterLoggingConfigComponentConfigInput)(nil)).Elem(), AwsClusterLoggingConfigComponentConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsClusterLoggingConfigComponentConfigPtrInput)(nil)).Elem(), AwsClusterLoggingConfigComponentConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsClusterNetworkingInput)(nil)).Elem(), AwsClusterNetworkingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsClusterNetworkingPtrInput)(nil)).Elem(), AwsClusterNetworkingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsClusterWorkloadIdentityConfigInput)(nil)).Elem(), AwsClusterWorkloadIdentityConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsClusterWorkloadIdentityConfigArrayInput)(nil)).Elem(), AwsClusterWorkloadIdentityConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsNodePoolAutoscalingInput)(nil)).Elem(), AwsNodePoolAutoscalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsNodePoolAutoscalingPtrInput)(nil)).Elem(), AwsNodePoolAutoscalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsNodePoolConfigInput)(nil)).Elem(), AwsNodePoolConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsNodePoolConfigPtrInput)(nil)).Elem(), AwsNodePoolConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsNodePoolConfigAutoscalingMetricsCollectionInput)(nil)).Elem(), AwsNodePoolConfigAutoscalingMetricsCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsNodePoolConfigAutoscalingMetricsCollectionPtrInput)(nil)).Elem(), AwsNodePoolConfigAutoscalingMetricsCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsNodePoolConfigConfigEncryptionInput)(nil)).Elem(), AwsNodePoolConfigConfigEncryptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsNodePoolConfigConfigEncryptionPtrInput)(nil)).Elem(), AwsNodePoolConfigConfigEncryptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsNodePoolConfigInstancePlacementInput)(nil)).Elem(), AwsNodePoolConfigInstancePlacementArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsNodePoolConfigInstancePlacementPtrInput)(nil)).Elem(), AwsNodePoolConfigInstancePlacementArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsNodePoolConfigProxyConfigInput)(nil)).Elem(), AwsNodePoolConfigProxyConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsNodePoolConfigProxyConfigPtrInput)(nil)).Elem(), AwsNodePoolConfigProxyConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsNodePoolConfigRootVolumeInput)(nil)).Elem(), AwsNodePoolConfigRootVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsNodePoolConfigRootVolumePtrInput)(nil)).Elem(), AwsNodePoolConfigRootVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsNodePoolConfigSpotConfigInput)(nil)).Elem(), AwsNodePoolConfigSpotConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsNodePoolConfigSpotConfigPtrInput)(nil)).Elem(), AwsNodePoolConfigSpotConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsNodePoolConfigSshConfigInput)(nil)).Elem(), AwsNodePoolConfigSshConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsNodePoolConfigSshConfigPtrInput)(nil)).Elem(), AwsNodePoolConfigSshConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsNodePoolConfigTaintInput)(nil)).Elem(), AwsNodePoolConfigTaintArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsNodePoolConfigTaintArrayInput)(nil)).Elem(), AwsNodePoolConfigTaintArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsNodePoolManagementInput)(nil)).Elem(), AwsNodePoolManagementArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsNodePoolManagementPtrInput)(nil)).Elem(), AwsNodePoolManagementArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsNodePoolMaxPodsConstraintInput)(nil)).Elem(), AwsNodePoolMaxPodsConstraintArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsNodePoolMaxPodsConstraintPtrInput)(nil)).Elem(), AwsNodePoolMaxPodsConstraintArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsNodePoolUpdateSettingsInput)(nil)).Elem(), AwsNodePoolUpdateSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsNodePoolUpdateSettingsPtrInput)(nil)).Elem(), AwsNodePoolUpdateSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsNodePoolUpdateSettingsSurgeSettingsInput)(nil)).Elem(), AwsNodePoolUpdateSettingsSurgeSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsNodePoolUpdateSettingsSurgeSettingsPtrInput)(nil)).Elem(), AwsNodePoolUpdateSettingsSurgeSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureClusterAuthorizationInput)(nil)).Elem(), AzureClusterAuthorizationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureClusterAuthorizationPtrInput)(nil)).Elem(), AzureClusterAuthorizationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureClusterAuthorizationAdminGroupInput)(nil)).Elem(), AzureClusterAuthorizationAdminGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureClusterAuthorizationAdminGroupArrayInput)(nil)).Elem(), AzureClusterAuthorizationAdminGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureClusterAuthorizationAdminUserInput)(nil)).Elem(), AzureClusterAuthorizationAdminUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureClusterAuthorizationAdminUserArrayInput)(nil)).Elem(), AzureClusterAuthorizationAdminUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureClusterAzureServicesAuthenticationInput)(nil)).Elem(), AzureClusterAzureServicesAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureClusterAzureServicesAuthenticationPtrInput)(nil)).Elem(), AzureClusterAzureServicesAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureClusterControlPlaneInput)(nil)).Elem(), AzureClusterControlPlaneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureClusterControlPlanePtrInput)(nil)).Elem(), AzureClusterControlPlaneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureClusterControlPlaneDatabaseEncryptionInput)(nil)).Elem(), AzureClusterControlPlaneDatabaseEncryptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureClusterControlPlaneDatabaseEncryptionPtrInput)(nil)).Elem(), AzureClusterControlPlaneDatabaseEncryptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureClusterControlPlaneMainVolumeInput)(nil)).Elem(), AzureClusterControlPlaneMainVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureClusterControlPlaneMainVolumePtrInput)(nil)).Elem(), AzureClusterControlPlaneMainVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureClusterControlPlaneProxyConfigInput)(nil)).Elem(), AzureClusterControlPlaneProxyConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureClusterControlPlaneProxyConfigPtrInput)(nil)).Elem(), AzureClusterControlPlaneProxyConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureClusterControlPlaneReplicaPlacementInput)(nil)).Elem(), AzureClusterControlPlaneReplicaPlacementArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureClusterControlPlaneReplicaPlacementArrayInput)(nil)).Elem(), AzureClusterControlPlaneReplicaPlacementArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureClusterControlPlaneRootVolumeInput)(nil)).Elem(), AzureClusterControlPlaneRootVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureClusterControlPlaneRootVolumePtrInput)(nil)).Elem(), AzureClusterControlPlaneRootVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureClusterControlPlaneSshConfigInput)(nil)).Elem(), AzureClusterControlPlaneSshConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureClusterControlPlaneSshConfigPtrInput)(nil)).Elem(), AzureClusterControlPlaneSshConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureClusterFleetInput)(nil)).Elem(), AzureClusterFleetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureClusterFleetPtrInput)(nil)).Elem(), AzureClusterFleetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureClusterLoggingConfigInput)(nil)).Elem(), AzureClusterLoggingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureClusterLoggingConfigPtrInput)(nil)).Elem(), AzureClusterLoggingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureClusterLoggingConfigComponentConfigInput)(nil)).Elem(), AzureClusterLoggingConfigComponentConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureClusterLoggingConfigComponentConfigPtrInput)(nil)).Elem(), AzureClusterLoggingConfigComponentConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureClusterNetworkingInput)(nil)).Elem(), AzureClusterNetworkingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureClusterNetworkingPtrInput)(nil)).Elem(), AzureClusterNetworkingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureClusterWorkloadIdentityConfigInput)(nil)).Elem(), AzureClusterWorkloadIdentityConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureClusterWorkloadIdentityConfigArrayInput)(nil)).Elem(), AzureClusterWorkloadIdentityConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureNodePoolAutoscalingInput)(nil)).Elem(), AzureNodePoolAutoscalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureNodePoolAutoscalingPtrInput)(nil)).Elem(), AzureNodePoolAutoscalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureNodePoolConfigInput)(nil)).Elem(), AzureNodePoolConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureNodePoolConfigPtrInput)(nil)).Elem(), AzureNodePoolConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureNodePoolConfigProxyConfigInput)(nil)).Elem(), AzureNodePoolConfigProxyConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureNodePoolConfigProxyConfigPtrInput)(nil)).Elem(), AzureNodePoolConfigProxyConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureNodePoolConfigRootVolumeInput)(nil)).Elem(), AzureNodePoolConfigRootVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureNodePoolConfigRootVolumePtrInput)(nil)).Elem(), AzureNodePoolConfigRootVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureNodePoolConfigSshConfigInput)(nil)).Elem(), AzureNodePoolConfigSshConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureNodePoolConfigSshConfigPtrInput)(nil)).Elem(), AzureNodePoolConfigSshConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureNodePoolManagementInput)(nil)).Elem(), AzureNodePoolManagementArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureNodePoolManagementPtrInput)(nil)).Elem(), AzureNodePoolManagementArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureNodePoolMaxPodsConstraintInput)(nil)).Elem(), AzureNodePoolMaxPodsConstraintArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureNodePoolMaxPodsConstraintPtrInput)(nil)).Elem(), AzureNodePoolMaxPodsConstraintArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAddonsConfigInput)(nil)).Elem(), ClusterAddonsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAddonsConfigPtrInput)(nil)).Elem(), ClusterAddonsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAddonsConfigCloudrunConfigInput)(nil)).Elem(), ClusterAddonsConfigCloudrunConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAddonsConfigCloudrunConfigPtrInput)(nil)).Elem(), ClusterAddonsConfigCloudrunConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAddonsConfigConfigConnectorConfigInput)(nil)).Elem(), ClusterAddonsConfigConfigConnectorConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAddonsConfigConfigConnectorConfigPtrInput)(nil)).Elem(), ClusterAddonsConfigConfigConnectorConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAddonsConfigDnsCacheConfigInput)(nil)).Elem(), ClusterAddonsConfigDnsCacheConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAddonsConfigDnsCacheConfigPtrInput)(nil)).Elem(), ClusterAddonsConfigDnsCacheConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAddonsConfigGcePersistentDiskCsiDriverConfigInput)(nil)).Elem(), ClusterAddonsConfigGcePersistentDiskCsiDriverConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrInput)(nil)).Elem(), ClusterAddonsConfigGcePersistentDiskCsiDriverConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAddonsConfigGcpFilestoreCsiDriverConfigInput)(nil)).Elem(), ClusterAddonsConfigGcpFilestoreCsiDriverConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAddonsConfigGcpFilestoreCsiDriverConfigPtrInput)(nil)).Elem(), ClusterAddonsConfigGcpFilestoreCsiDriverConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAddonsConfigGcsFuseCsiDriverConfigInput)(nil)).Elem(), ClusterAddonsConfigGcsFuseCsiDriverConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAddonsConfigGcsFuseCsiDriverConfigPtrInput)(nil)).Elem(), ClusterAddonsConfigGcsFuseCsiDriverConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAddonsConfigGkeBackupAgentConfigInput)(nil)).Elem(), ClusterAddonsConfigGkeBackupAgentConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAddonsConfigGkeBackupAgentConfigPtrInput)(nil)).Elem(), ClusterAddonsConfigGkeBackupAgentConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAddonsConfigHorizontalPodAutoscalingInput)(nil)).Elem(), ClusterAddonsConfigHorizontalPodAutoscalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAddonsConfigHorizontalPodAutoscalingPtrInput)(nil)).Elem(), ClusterAddonsConfigHorizontalPodAutoscalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAddonsConfigHttpLoadBalancingInput)(nil)).Elem(), ClusterAddonsConfigHttpLoadBalancingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAddonsConfigHttpLoadBalancingPtrInput)(nil)).Elem(), ClusterAddonsConfigHttpLoadBalancingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAddonsConfigIstioConfigInput)(nil)).Elem(), ClusterAddonsConfigIstioConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAddonsConfigIstioConfigPtrInput)(nil)).Elem(), ClusterAddonsConfigIstioConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAddonsConfigKalmConfigInput)(nil)).Elem(), ClusterAddonsConfigKalmConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAddonsConfigKalmConfigPtrInput)(nil)).Elem(), ClusterAddonsConfigKalmConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAddonsConfigNetworkPolicyConfigInput)(nil)).Elem(), ClusterAddonsConfigNetworkPolicyConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAddonsConfigNetworkPolicyConfigPtrInput)(nil)).Elem(), ClusterAddonsConfigNetworkPolicyConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAddonsConfigStatefulHaConfigInput)(nil)).Elem(), ClusterAddonsConfigStatefulHaConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAddonsConfigStatefulHaConfigPtrInput)(nil)).Elem(), ClusterAddonsConfigStatefulHaConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAuthenticatorGroupsConfigInput)(nil)).Elem(), ClusterAuthenticatorGroupsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAuthenticatorGroupsConfigPtrInput)(nil)).Elem(), ClusterAuthenticatorGroupsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterBinaryAuthorizationInput)(nil)).Elem(), ClusterBinaryAuthorizationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterBinaryAuthorizationPtrInput)(nil)).Elem(), ClusterBinaryAuthorizationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClusterAutoscalingInput)(nil)).Elem(), ClusterClusterAutoscalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClusterAutoscalingPtrInput)(nil)).Elem(), ClusterClusterAutoscalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClusterAutoscalingAutoProvisioningDefaultsInput)(nil)).Elem(), ClusterClusterAutoscalingAutoProvisioningDefaultsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClusterAutoscalingAutoProvisioningDefaultsPtrInput)(nil)).Elem(), ClusterClusterAutoscalingAutoProvisioningDefaultsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClusterAutoscalingAutoProvisioningDefaultsManagementInput)(nil)).Elem(), ClusterClusterAutoscalingAutoProvisioningDefaultsManagementArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClusterAutoscalingAutoProvisioningDefaultsManagementPtrInput)(nil)).Elem(), ClusterClusterAutoscalingAutoProvisioningDefaultsManagementArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionInput)(nil)).Elem(), ClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionArrayInput)(nil)).Elem(), ClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigInput)(nil)).Elem(), ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigPtrInput)(nil)).Elem(), ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsInput)(nil)).Elem(), ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsPtrInput)(nil)).Elem(), ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsInput)(nil)).Elem(), ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsPtrInput)(nil)).Elem(), ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyInput)(nil)).Elem(), ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrInput)(nil)).Elem(), ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClusterAutoscalingResourceLimitInput)(nil)).Elem(), ClusterClusterAutoscalingResourceLimitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClusterAutoscalingResourceLimitArrayInput)(nil)).Elem(), ClusterClusterAutoscalingResourceLimitArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClusterTelemetryInput)(nil)).Elem(), ClusterClusterTelemetryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClusterTelemetryPtrInput)(nil)).Elem(), ClusterClusterTelemetryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterConfidentialNodesInput)(nil)).Elem(), ClusterConfidentialNodesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterConfidentialNodesPtrInput)(nil)).Elem(), ClusterConfidentialNodesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterCostManagementConfigInput)(nil)).Elem(), ClusterCostManagementConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterCostManagementConfigPtrInput)(nil)).Elem(), ClusterCostManagementConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterDatabaseEncryptionInput)(nil)).Elem(), ClusterDatabaseEncryptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterDatabaseEncryptionPtrInput)(nil)).Elem(), ClusterDatabaseEncryptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterDefaultSnatStatusInput)(nil)).Elem(), ClusterDefaultSnatStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterDefaultSnatStatusPtrInput)(nil)).Elem(), ClusterDefaultSnatStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterDnsConfigInput)(nil)).Elem(), ClusterDnsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterDnsConfigPtrInput)(nil)).Elem(), ClusterDnsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterEnableK8sBetaApisInput)(nil)).Elem(), ClusterEnableK8sBetaApisArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterEnableK8sBetaApisPtrInput)(nil)).Elem(), ClusterEnableK8sBetaApisArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterFleetInput)(nil)).Elem(), ClusterFleetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterFleetPtrInput)(nil)).Elem(), ClusterFleetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterGatewayApiConfigInput)(nil)).Elem(), ClusterGatewayApiConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterGatewayApiConfigPtrInput)(nil)).Elem(), ClusterGatewayApiConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterIdentityServiceConfigInput)(nil)).Elem(), ClusterIdentityServiceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterIdentityServiceConfigPtrInput)(nil)).Elem(), ClusterIdentityServiceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterIpAllocationPolicyInput)(nil)).Elem(), ClusterIpAllocationPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterIpAllocationPolicyPtrInput)(nil)).Elem(), ClusterIpAllocationPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterIpAllocationPolicyAdditionalPodRangesConfigInput)(nil)).Elem(), ClusterIpAllocationPolicyAdditionalPodRangesConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterIpAllocationPolicyAdditionalPodRangesConfigPtrInput)(nil)).Elem(), ClusterIpAllocationPolicyAdditionalPodRangesConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterIpAllocationPolicyPodCidrOverprovisionConfigInput)(nil)).Elem(), ClusterIpAllocationPolicyPodCidrOverprovisionConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterIpAllocationPolicyPodCidrOverprovisionConfigPtrInput)(nil)).Elem(), ClusterIpAllocationPolicyPodCidrOverprovisionConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterLoggingConfigInput)(nil)).Elem(), ClusterLoggingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterLoggingConfigPtrInput)(nil)).Elem(), ClusterLoggingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterMaintenancePolicyInput)(nil)).Elem(), ClusterMaintenancePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterMaintenancePolicyPtrInput)(nil)).Elem(), ClusterMaintenancePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterMaintenancePolicyDailyMaintenanceWindowInput)(nil)).Elem(), ClusterMaintenancePolicyDailyMaintenanceWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterMaintenancePolicyDailyMaintenanceWindowPtrInput)(nil)).Elem(), ClusterMaintenancePolicyDailyMaintenanceWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterMaintenancePolicyMaintenanceExclusionInput)(nil)).Elem(), ClusterMaintenancePolicyMaintenanceExclusionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterMaintenancePolicyMaintenanceExclusionArrayInput)(nil)).Elem(), ClusterMaintenancePolicyMaintenanceExclusionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsInput)(nil)).Elem(), ClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsPtrInput)(nil)).Elem(), ClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterMaintenancePolicyRecurringWindowInput)(nil)).Elem(), ClusterMaintenancePolicyRecurringWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterMaintenancePolicyRecurringWindowPtrInput)(nil)).Elem(), ClusterMaintenancePolicyRecurringWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterMasterAuthInput)(nil)).Elem(), ClusterMasterAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterMasterAuthPtrInput)(nil)).Elem(), ClusterMasterAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterMasterAuthClientCertificateConfigInput)(nil)).Elem(), ClusterMasterAuthClientCertificateConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterMasterAuthClientCertificateConfigPtrInput)(nil)).Elem(), ClusterMasterAuthClientCertificateConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterMasterAuthorizedNetworksConfigInput)(nil)).Elem(), ClusterMasterAuthorizedNetworksConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterMasterAuthorizedNetworksConfigPtrInput)(nil)).Elem(), ClusterMasterAuthorizedNetworksConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterMasterAuthorizedNetworksConfigCidrBlockInput)(nil)).Elem(), ClusterMasterAuthorizedNetworksConfigCidrBlockArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterMasterAuthorizedNetworksConfigCidrBlockArrayInput)(nil)).Elem(), ClusterMasterAuthorizedNetworksConfigCidrBlockArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterMeshCertificatesInput)(nil)).Elem(), ClusterMeshCertificatesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterMeshCertificatesPtrInput)(nil)).Elem(), ClusterMeshCertificatesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterMonitoringConfigInput)(nil)).Elem(), ClusterMonitoringConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterMonitoringConfigPtrInput)(nil)).Elem(), ClusterMonitoringConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterMonitoringConfigAdvancedDatapathObservabilityConfigInput)(nil)).Elem(), ClusterMonitoringConfigAdvancedDatapathObservabilityConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterMonitoringConfigAdvancedDatapathObservabilityConfigArrayInput)(nil)).Elem(), ClusterMonitoringConfigAdvancedDatapathObservabilityConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterMonitoringConfigManagedPrometheusInput)(nil)).Elem(), ClusterMonitoringConfigManagedPrometheusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterMonitoringConfigManagedPrometheusPtrInput)(nil)).Elem(), ClusterMonitoringConfigManagedPrometheusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNetworkPolicyInput)(nil)).Elem(), ClusterNetworkPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNetworkPolicyPtrInput)(nil)).Elem(), ClusterNetworkPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodeConfigInput)(nil)).Elem(), ClusterNodeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodeConfigPtrInput)(nil)).Elem(), ClusterNodeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodeConfigAdvancedMachineFeaturesInput)(nil)).Elem(), ClusterNodeConfigAdvancedMachineFeaturesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodeConfigAdvancedMachineFeaturesPtrInput)(nil)).Elem(), ClusterNodeConfigAdvancedMachineFeaturesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodeConfigConfidentialNodesInput)(nil)).Elem(), ClusterNodeConfigConfidentialNodesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodeConfigConfidentialNodesPtrInput)(nil)).Elem(), ClusterNodeConfigConfidentialNodesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodeConfigEffectiveTaintInput)(nil)).Elem(), ClusterNodeConfigEffectiveTaintArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodeConfigEffectiveTaintArrayInput)(nil)).Elem(), ClusterNodeConfigEffectiveTaintArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodeConfigEphemeralStorageConfigInput)(nil)).Elem(), ClusterNodeConfigEphemeralStorageConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodeConfigEphemeralStorageConfigPtrInput)(nil)).Elem(), ClusterNodeConfigEphemeralStorageConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodeConfigEphemeralStorageLocalSsdConfigInput)(nil)).Elem(), ClusterNodeConfigEphemeralStorageLocalSsdConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodeConfigEphemeralStorageLocalSsdConfigPtrInput)(nil)).Elem(), ClusterNodeConfigEphemeralStorageLocalSsdConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodeConfigFastSocketInput)(nil)).Elem(), ClusterNodeConfigFastSocketArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodeConfigFastSocketPtrInput)(nil)).Elem(), ClusterNodeConfigFastSocketArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodeConfigGcfsConfigInput)(nil)).Elem(), ClusterNodeConfigGcfsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodeConfigGcfsConfigPtrInput)(nil)).Elem(), ClusterNodeConfigGcfsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodeConfigGuestAcceleratorInput)(nil)).Elem(), ClusterNodeConfigGuestAcceleratorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodeConfigGuestAcceleratorArrayInput)(nil)).Elem(), ClusterNodeConfigGuestAcceleratorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigInput)(nil)).Elem(), ClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrInput)(nil)).Elem(), ClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodeConfigGuestAcceleratorGpuSharingConfigInput)(nil)).Elem(), ClusterNodeConfigGuestAcceleratorGpuSharingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodeConfigGuestAcceleratorGpuSharingConfigPtrInput)(nil)).Elem(), ClusterNodeConfigGuestAcceleratorGpuSharingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodeConfigGvnicInput)(nil)).Elem(), ClusterNodeConfigGvnicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodeConfigGvnicPtrInput)(nil)).Elem(), ClusterNodeConfigGvnicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodeConfigHostMaintenancePolicyInput)(nil)).Elem(), ClusterNodeConfigHostMaintenancePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodeConfigHostMaintenancePolicyPtrInput)(nil)).Elem(), ClusterNodeConfigHostMaintenancePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodeConfigKubeletConfigInput)(nil)).Elem(), ClusterNodeConfigKubeletConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodeConfigKubeletConfigPtrInput)(nil)).Elem(), ClusterNodeConfigKubeletConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodeConfigLinuxNodeConfigInput)(nil)).Elem(), ClusterNodeConfigLinuxNodeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodeConfigLinuxNodeConfigPtrInput)(nil)).Elem(), ClusterNodeConfigLinuxNodeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodeConfigLocalNvmeSsdBlockConfigInput)(nil)).Elem(), ClusterNodeConfigLocalNvmeSsdBlockConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodeConfigLocalNvmeSsdBlockConfigPtrInput)(nil)).Elem(), ClusterNodeConfigLocalNvmeSsdBlockConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodeConfigReservationAffinityInput)(nil)).Elem(), ClusterNodeConfigReservationAffinityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodeConfigReservationAffinityPtrInput)(nil)).Elem(), ClusterNodeConfigReservationAffinityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodeConfigSandboxConfigInput)(nil)).Elem(), ClusterNodeConfigSandboxConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodeConfigSandboxConfigPtrInput)(nil)).Elem(), ClusterNodeConfigSandboxConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodeConfigSecondaryBootDiskInput)(nil)).Elem(), ClusterNodeConfigSecondaryBootDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodeConfigSecondaryBootDiskArrayInput)(nil)).Elem(), ClusterNodeConfigSecondaryBootDiskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodeConfigShieldedInstanceConfigInput)(nil)).Elem(), ClusterNodeConfigShieldedInstanceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodeConfigShieldedInstanceConfigPtrInput)(nil)).Elem(), ClusterNodeConfigShieldedInstanceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodeConfigSoleTenantConfigInput)(nil)).Elem(), ClusterNodeConfigSoleTenantConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodeConfigSoleTenantConfigPtrInput)(nil)).Elem(), ClusterNodeConfigSoleTenantConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodeConfigSoleTenantConfigNodeAffinityInput)(nil)).Elem(), ClusterNodeConfigSoleTenantConfigNodeAffinityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodeConfigSoleTenantConfigNodeAffinityArrayInput)(nil)).Elem(), ClusterNodeConfigSoleTenantConfigNodeAffinityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodeConfigTaintInput)(nil)).Elem(), ClusterNodeConfigTaintArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodeConfigTaintArrayInput)(nil)).Elem(), ClusterNodeConfigTaintArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodeConfigWorkloadMetadataConfigInput)(nil)).Elem(), ClusterNodeConfigWorkloadMetadataConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodeConfigWorkloadMetadataConfigPtrInput)(nil)).Elem(), ClusterNodeConfigWorkloadMetadataConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolInput)(nil)).Elem(), ClusterNodePoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolArrayInput)(nil)).Elem(), ClusterNodePoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolAutoConfigInput)(nil)).Elem(), ClusterNodePoolAutoConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolAutoConfigPtrInput)(nil)).Elem(), ClusterNodePoolAutoConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolAutoConfigNetworkTagsInput)(nil)).Elem(), ClusterNodePoolAutoConfigNetworkTagsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolAutoConfigNetworkTagsPtrInput)(nil)).Elem(), ClusterNodePoolAutoConfigNetworkTagsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolAutoscalingInput)(nil)).Elem(), ClusterNodePoolAutoscalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolAutoscalingPtrInput)(nil)).Elem(), ClusterNodePoolAutoscalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolDefaultsInput)(nil)).Elem(), ClusterNodePoolDefaultsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolDefaultsPtrInput)(nil)).Elem(), ClusterNodePoolDefaultsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolDefaultsNodeConfigDefaultsInput)(nil)).Elem(), ClusterNodePoolDefaultsNodeConfigDefaultsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolDefaultsNodeConfigDefaultsPtrInput)(nil)).Elem(), ClusterNodePoolDefaultsNodeConfigDefaultsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigInput)(nil)).Elem(), ClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigPtrInput)(nil)).Elem(), ClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolManagementInput)(nil)).Elem(), ClusterNodePoolManagementArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolManagementPtrInput)(nil)).Elem(), ClusterNodePoolManagementArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolNetworkConfigInput)(nil)).Elem(), ClusterNodePoolNetworkConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolNetworkConfigPtrInput)(nil)).Elem(), ClusterNodePoolNetworkConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigInput)(nil)).Elem(), ClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArrayInput)(nil)).Elem(), ClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolNetworkConfigAdditionalPodNetworkConfigInput)(nil)).Elem(), ClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArrayInput)(nil)).Elem(), ClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolNetworkConfigNetworkPerformanceConfigInput)(nil)).Elem(), ClusterNodePoolNetworkConfigNetworkPerformanceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolNetworkConfigNetworkPerformanceConfigPtrInput)(nil)).Elem(), ClusterNodePoolNetworkConfigNetworkPerformanceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolNetworkConfigPodCidrOverprovisionConfigInput)(nil)).Elem(), ClusterNodePoolNetworkConfigPodCidrOverprovisionConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolNetworkConfigPodCidrOverprovisionConfigPtrInput)(nil)).Elem(), ClusterNodePoolNetworkConfigPodCidrOverprovisionConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolNodeConfigInput)(nil)).Elem(), ClusterNodePoolNodeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolNodeConfigPtrInput)(nil)).Elem(), ClusterNodePoolNodeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolNodeConfigAdvancedMachineFeaturesInput)(nil)).Elem(), ClusterNodePoolNodeConfigAdvancedMachineFeaturesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolNodeConfigAdvancedMachineFeaturesPtrInput)(nil)).Elem(), ClusterNodePoolNodeConfigAdvancedMachineFeaturesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolNodeConfigConfidentialNodesInput)(nil)).Elem(), ClusterNodePoolNodeConfigConfidentialNodesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolNodeConfigConfidentialNodesPtrInput)(nil)).Elem(), ClusterNodePoolNodeConfigConfidentialNodesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolNodeConfigEffectiveTaintInput)(nil)).Elem(), ClusterNodePoolNodeConfigEffectiveTaintArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolNodeConfigEffectiveTaintArrayInput)(nil)).Elem(), ClusterNodePoolNodeConfigEffectiveTaintArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolNodeConfigEphemeralStorageConfigInput)(nil)).Elem(), ClusterNodePoolNodeConfigEphemeralStorageConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolNodeConfigEphemeralStorageConfigPtrInput)(nil)).Elem(), ClusterNodePoolNodeConfigEphemeralStorageConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigInput)(nil)).Elem(), ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrInput)(nil)).Elem(), ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolNodeConfigFastSocketInput)(nil)).Elem(), ClusterNodePoolNodeConfigFastSocketArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolNodeConfigFastSocketPtrInput)(nil)).Elem(), ClusterNodePoolNodeConfigFastSocketArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolNodeConfigGcfsConfigInput)(nil)).Elem(), ClusterNodePoolNodeConfigGcfsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolNodeConfigGcfsConfigPtrInput)(nil)).Elem(), ClusterNodePoolNodeConfigGcfsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolNodeConfigGuestAcceleratorInput)(nil)).Elem(), ClusterNodePoolNodeConfigGuestAcceleratorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolNodeConfigGuestAcceleratorArrayInput)(nil)).Elem(), ClusterNodePoolNodeConfigGuestAcceleratorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigInput)(nil)).Elem(), ClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrInput)(nil)).Elem(), ClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigInput)(nil)).Elem(), ClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrInput)(nil)).Elem(), ClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolNodeConfigGvnicInput)(nil)).Elem(), ClusterNodePoolNodeConfigGvnicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolNodeConfigGvnicPtrInput)(nil)).Elem(), ClusterNodePoolNodeConfigGvnicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolNodeConfigHostMaintenancePolicyInput)(nil)).Elem(), ClusterNodePoolNodeConfigHostMaintenancePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolNodeConfigHostMaintenancePolicyPtrInput)(nil)).Elem(), ClusterNodePoolNodeConfigHostMaintenancePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolNodeConfigKubeletConfigInput)(nil)).Elem(), ClusterNodePoolNodeConfigKubeletConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolNodeConfigKubeletConfigPtrInput)(nil)).Elem(), ClusterNodePoolNodeConfigKubeletConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolNodeConfigLinuxNodeConfigInput)(nil)).Elem(), ClusterNodePoolNodeConfigLinuxNodeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolNodeConfigLinuxNodeConfigPtrInput)(nil)).Elem(), ClusterNodePoolNodeConfigLinuxNodeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigInput)(nil)).Elem(), ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigPtrInput)(nil)).Elem(), ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolNodeConfigReservationAffinityInput)(nil)).Elem(), ClusterNodePoolNodeConfigReservationAffinityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolNodeConfigReservationAffinityPtrInput)(nil)).Elem(), ClusterNodePoolNodeConfigReservationAffinityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolNodeConfigSandboxConfigInput)(nil)).Elem(), ClusterNodePoolNodeConfigSandboxConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolNodeConfigSandboxConfigPtrInput)(nil)).Elem(), ClusterNodePoolNodeConfigSandboxConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolNodeConfigSecondaryBootDiskInput)(nil)).Elem(), ClusterNodePoolNodeConfigSecondaryBootDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolNodeConfigSecondaryBootDiskArrayInput)(nil)).Elem(), ClusterNodePoolNodeConfigSecondaryBootDiskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolNodeConfigShieldedInstanceConfigInput)(nil)).Elem(), ClusterNodePoolNodeConfigShieldedInstanceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolNodeConfigShieldedInstanceConfigPtrInput)(nil)).Elem(), ClusterNodePoolNodeConfigShieldedInstanceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolNodeConfigSoleTenantConfigInput)(nil)).Elem(), ClusterNodePoolNodeConfigSoleTenantConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolNodeConfigSoleTenantConfigPtrInput)(nil)).Elem(), ClusterNodePoolNodeConfigSoleTenantConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityInput)(nil)).Elem(), ClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArrayInput)(nil)).Elem(), ClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolNodeConfigTaintInput)(nil)).Elem(), ClusterNodePoolNodeConfigTaintArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolNodeConfigTaintArrayInput)(nil)).Elem(), ClusterNodePoolNodeConfigTaintArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolNodeConfigWorkloadMetadataConfigInput)(nil)).Elem(), ClusterNodePoolNodeConfigWorkloadMetadataConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolNodeConfigWorkloadMetadataConfigPtrInput)(nil)).Elem(), ClusterNodePoolNodeConfigWorkloadMetadataConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolPlacementPolicyInput)(nil)).Elem(), ClusterNodePoolPlacementPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolPlacementPolicyPtrInput)(nil)).Elem(), ClusterNodePoolPlacementPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolQueuedProvisioningInput)(nil)).Elem(), ClusterNodePoolQueuedProvisioningArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolQueuedProvisioningPtrInput)(nil)).Elem(), ClusterNodePoolQueuedProvisioningArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolUpgradeSettingsInput)(nil)).Elem(), ClusterNodePoolUpgradeSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolUpgradeSettingsPtrInput)(nil)).Elem(), ClusterNodePoolUpgradeSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolUpgradeSettingsBlueGreenSettingsInput)(nil)).Elem(), ClusterNodePoolUpgradeSettingsBlueGreenSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolUpgradeSettingsBlueGreenSettingsPtrInput)(nil)).Elem(), ClusterNodePoolUpgradeSettingsBlueGreenSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyInput)(nil)).Elem(), ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrInput)(nil)).Elem(), ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNotificationConfigInput)(nil)).Elem(), ClusterNotificationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNotificationConfigPtrInput)(nil)).Elem(), ClusterNotificationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNotificationConfigPubsubInput)(nil)).Elem(), ClusterNotificationConfigPubsubArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNotificationConfigPubsubPtrInput)(nil)).Elem(), ClusterNotificationConfigPubsubArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNotificationConfigPubsubFilterInput)(nil)).Elem(), ClusterNotificationConfigPubsubFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNotificationConfigPubsubFilterPtrInput)(nil)).Elem(), ClusterNotificationConfigPubsubFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterPodSecurityPolicyConfigInput)(nil)).Elem(), ClusterPodSecurityPolicyConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterPodSecurityPolicyConfigPtrInput)(nil)).Elem(), ClusterPodSecurityPolicyConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterPrivateClusterConfigInput)(nil)).Elem(), ClusterPrivateClusterConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterPrivateClusterConfigPtrInput)(nil)).Elem(), ClusterPrivateClusterConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterPrivateClusterConfigMasterGlobalAccessConfigInput)(nil)).Elem(), ClusterPrivateClusterConfigMasterGlobalAccessConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterPrivateClusterConfigMasterGlobalAccessConfigPtrInput)(nil)).Elem(), ClusterPrivateClusterConfigMasterGlobalAccessConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterProtectConfigInput)(nil)).Elem(), ClusterProtectConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterProtectConfigPtrInput)(nil)).Elem(), ClusterProtectConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterProtectConfigWorkloadConfigInput)(nil)).Elem(), ClusterProtectConfigWorkloadConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterProtectConfigWorkloadConfigPtrInput)(nil)).Elem(), ClusterProtectConfigWorkloadConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterReleaseChannelInput)(nil)).Elem(), ClusterReleaseChannelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterReleaseChannelPtrInput)(nil)).Elem(), ClusterReleaseChannelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterResourceUsageExportConfigInput)(nil)).Elem(), ClusterResourceUsageExportConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterResourceUsageExportConfigPtrInput)(nil)).Elem(), ClusterResourceUsageExportConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterResourceUsageExportConfigBigqueryDestinationInput)(nil)).Elem(), ClusterResourceUsageExportConfigBigqueryDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterResourceUsageExportConfigBigqueryDestinationPtrInput)(nil)).Elem(), ClusterResourceUsageExportConfigBigqueryDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecurityPostureConfigInput)(nil)).Elem(), ClusterSecurityPostureConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecurityPostureConfigPtrInput)(nil)).Elem(), ClusterSecurityPostureConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterServiceExternalIpsConfigInput)(nil)).Elem(), ClusterServiceExternalIpsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterServiceExternalIpsConfigPtrInput)(nil)).Elem(), ClusterServiceExternalIpsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterTpuConfigInput)(nil)).Elem(), ClusterTpuConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterTpuConfigPtrInput)(nil)).Elem(), ClusterTpuConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterVerticalPodAutoscalingInput)(nil)).Elem(), ClusterVerticalPodAutoscalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterVerticalPodAutoscalingPtrInput)(nil)).Elem(), ClusterVerticalPodAutoscalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterWorkloadAltsConfigInput)(nil)).Elem(), ClusterWorkloadAltsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterWorkloadAltsConfigPtrInput)(nil)).Elem(), ClusterWorkloadAltsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterWorkloadIdentityConfigInput)(nil)).Elem(), ClusterWorkloadIdentityConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterWorkloadIdentityConfigPtrInput)(nil)).Elem(), ClusterWorkloadIdentityConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolAutoscalingInput)(nil)).Elem(), NodePoolAutoscalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolAutoscalingPtrInput)(nil)).Elem(), NodePoolAutoscalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolManagementInput)(nil)).Elem(), NodePoolManagementArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolManagementPtrInput)(nil)).Elem(), NodePoolManagementArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolNetworkConfigInput)(nil)).Elem(), NodePoolNetworkConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolNetworkConfigPtrInput)(nil)).Elem(), NodePoolNetworkConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolNetworkConfigAdditionalNodeNetworkConfigInput)(nil)).Elem(), NodePoolNetworkConfigAdditionalNodeNetworkConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolNetworkConfigAdditionalNodeNetworkConfigArrayInput)(nil)).Elem(), NodePoolNetworkConfigAdditionalNodeNetworkConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolNetworkConfigAdditionalPodNetworkConfigInput)(nil)).Elem(), NodePoolNetworkConfigAdditionalPodNetworkConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolNetworkConfigAdditionalPodNetworkConfigArrayInput)(nil)).Elem(), NodePoolNetworkConfigAdditionalPodNetworkConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolNetworkConfigNetworkPerformanceConfigInput)(nil)).Elem(), NodePoolNetworkConfigNetworkPerformanceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolNetworkConfigNetworkPerformanceConfigPtrInput)(nil)).Elem(), NodePoolNetworkConfigNetworkPerformanceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolNetworkConfigPodCidrOverprovisionConfigInput)(nil)).Elem(), NodePoolNetworkConfigPodCidrOverprovisionConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolNetworkConfigPodCidrOverprovisionConfigPtrInput)(nil)).Elem(), NodePoolNetworkConfigPodCidrOverprovisionConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolNodeConfigInput)(nil)).Elem(), NodePoolNodeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolNodeConfigPtrInput)(nil)).Elem(), NodePoolNodeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolNodeConfigAdvancedMachineFeaturesInput)(nil)).Elem(), NodePoolNodeConfigAdvancedMachineFeaturesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolNodeConfigAdvancedMachineFeaturesPtrInput)(nil)).Elem(), NodePoolNodeConfigAdvancedMachineFeaturesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolNodeConfigConfidentialNodesInput)(nil)).Elem(), NodePoolNodeConfigConfidentialNodesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolNodeConfigConfidentialNodesPtrInput)(nil)).Elem(), NodePoolNodeConfigConfidentialNodesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolNodeConfigEffectiveTaintInput)(nil)).Elem(), NodePoolNodeConfigEffectiveTaintArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolNodeConfigEffectiveTaintArrayInput)(nil)).Elem(), NodePoolNodeConfigEffectiveTaintArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolNodeConfigEphemeralStorageConfigInput)(nil)).Elem(), NodePoolNodeConfigEphemeralStorageConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolNodeConfigEphemeralStorageConfigPtrInput)(nil)).Elem(), NodePoolNodeConfigEphemeralStorageConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolNodeConfigEphemeralStorageLocalSsdConfigInput)(nil)).Elem(), NodePoolNodeConfigEphemeralStorageLocalSsdConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrInput)(nil)).Elem(), NodePoolNodeConfigEphemeralStorageLocalSsdConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolNodeConfigFastSocketInput)(nil)).Elem(), NodePoolNodeConfigFastSocketArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolNodeConfigFastSocketPtrInput)(nil)).Elem(), NodePoolNodeConfigFastSocketArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolNodeConfigGcfsConfigInput)(nil)).Elem(), NodePoolNodeConfigGcfsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolNodeConfigGcfsConfigPtrInput)(nil)).Elem(), NodePoolNodeConfigGcfsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolNodeConfigGuestAcceleratorInput)(nil)).Elem(), NodePoolNodeConfigGuestAcceleratorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolNodeConfigGuestAcceleratorArrayInput)(nil)).Elem(), NodePoolNodeConfigGuestAcceleratorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigInput)(nil)).Elem(), NodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrInput)(nil)).Elem(), NodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolNodeConfigGuestAcceleratorGpuSharingConfigInput)(nil)).Elem(), NodePoolNodeConfigGuestAcceleratorGpuSharingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrInput)(nil)).Elem(), NodePoolNodeConfigGuestAcceleratorGpuSharingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolNodeConfigGvnicInput)(nil)).Elem(), NodePoolNodeConfigGvnicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolNodeConfigGvnicPtrInput)(nil)).Elem(), NodePoolNodeConfigGvnicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolNodeConfigHostMaintenancePolicyInput)(nil)).Elem(), NodePoolNodeConfigHostMaintenancePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolNodeConfigHostMaintenancePolicyPtrInput)(nil)).Elem(), NodePoolNodeConfigHostMaintenancePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolNodeConfigKubeletConfigInput)(nil)).Elem(), NodePoolNodeConfigKubeletConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolNodeConfigKubeletConfigPtrInput)(nil)).Elem(), NodePoolNodeConfigKubeletConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolNodeConfigLinuxNodeConfigInput)(nil)).Elem(), NodePoolNodeConfigLinuxNodeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolNodeConfigLinuxNodeConfigPtrInput)(nil)).Elem(), NodePoolNodeConfigLinuxNodeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolNodeConfigLocalNvmeSsdBlockConfigInput)(nil)).Elem(), NodePoolNodeConfigLocalNvmeSsdBlockConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolNodeConfigLocalNvmeSsdBlockConfigPtrInput)(nil)).Elem(), NodePoolNodeConfigLocalNvmeSsdBlockConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolNodeConfigReservationAffinityInput)(nil)).Elem(), NodePoolNodeConfigReservationAffinityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolNodeConfigReservationAffinityPtrInput)(nil)).Elem(), NodePoolNodeConfigReservationAffinityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolNodeConfigSandboxConfigInput)(nil)).Elem(), NodePoolNodeConfigSandboxConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolNodeConfigSandboxConfigPtrInput)(nil)).Elem(), NodePoolNodeConfigSandboxConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolNodeConfigSecondaryBootDiskInput)(nil)).Elem(), NodePoolNodeConfigSecondaryBootDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolNodeConfigSecondaryBootDiskArrayInput)(nil)).Elem(), NodePoolNodeConfigSecondaryBootDiskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolNodeConfigShieldedInstanceConfigInput)(nil)).Elem(), NodePoolNodeConfigShieldedInstanceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolNodeConfigShieldedInstanceConfigPtrInput)(nil)).Elem(), NodePoolNodeConfigShieldedInstanceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolNodeConfigSoleTenantConfigInput)(nil)).Elem(), NodePoolNodeConfigSoleTenantConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolNodeConfigSoleTenantConfigPtrInput)(nil)).Elem(), NodePoolNodeConfigSoleTenantConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolNodeConfigSoleTenantConfigNodeAffinityInput)(nil)).Elem(), NodePoolNodeConfigSoleTenantConfigNodeAffinityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolNodeConfigSoleTenantConfigNodeAffinityArrayInput)(nil)).Elem(), NodePoolNodeConfigSoleTenantConfigNodeAffinityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolNodeConfigTaintInput)(nil)).Elem(), NodePoolNodeConfigTaintArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolNodeConfigTaintArrayInput)(nil)).Elem(), NodePoolNodeConfigTaintArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolNodeConfigWorkloadMetadataConfigInput)(nil)).Elem(), NodePoolNodeConfigWorkloadMetadataConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolNodeConfigWorkloadMetadataConfigPtrInput)(nil)).Elem(), NodePoolNodeConfigWorkloadMetadataConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolPlacementPolicyInput)(nil)).Elem(), NodePoolPlacementPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolPlacementPolicyPtrInput)(nil)).Elem(), NodePoolPlacementPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolQueuedProvisioningInput)(nil)).Elem(), NodePoolQueuedProvisioningArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolQueuedProvisioningPtrInput)(nil)).Elem(), NodePoolQueuedProvisioningArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolUpgradeSettingsInput)(nil)).Elem(), NodePoolUpgradeSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolUpgradeSettingsPtrInput)(nil)).Elem(), NodePoolUpgradeSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolUpgradeSettingsBlueGreenSettingsInput)(nil)).Elem(), NodePoolUpgradeSettingsBlueGreenSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolUpgradeSettingsBlueGreenSettingsPtrInput)(nil)).Elem(), NodePoolUpgradeSettingsBlueGreenSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyInput)(nil)).Elem(), NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrInput)(nil)).Elem(), NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterAddonsConfigInput)(nil)).Elem(), GetClusterAddonsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterAddonsConfigArrayInput)(nil)).Elem(), GetClusterAddonsConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterAddonsConfigCloudrunConfigInput)(nil)).Elem(), GetClusterAddonsConfigCloudrunConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterAddonsConfigCloudrunConfigArrayInput)(nil)).Elem(), GetClusterAddonsConfigCloudrunConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterAddonsConfigConfigConnectorConfigInput)(nil)).Elem(), GetClusterAddonsConfigConfigConnectorConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterAddonsConfigConfigConnectorConfigArrayInput)(nil)).Elem(), GetClusterAddonsConfigConfigConnectorConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterAddonsConfigDnsCacheConfigInput)(nil)).Elem(), GetClusterAddonsConfigDnsCacheConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterAddonsConfigDnsCacheConfigArrayInput)(nil)).Elem(), GetClusterAddonsConfigDnsCacheConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterAddonsConfigGcePersistentDiskCsiDriverConfigInput)(nil)).Elem(), GetClusterAddonsConfigGcePersistentDiskCsiDriverConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterAddonsConfigGcePersistentDiskCsiDriverConfigArrayInput)(nil)).Elem(), GetClusterAddonsConfigGcePersistentDiskCsiDriverConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterAddonsConfigGcpFilestoreCsiDriverConfigInput)(nil)).Elem(), GetClusterAddonsConfigGcpFilestoreCsiDriverConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterAddonsConfigGcpFilestoreCsiDriverConfigArrayInput)(nil)).Elem(), GetClusterAddonsConfigGcpFilestoreCsiDriverConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterAddonsConfigGcsFuseCsiDriverConfigInput)(nil)).Elem(), GetClusterAddonsConfigGcsFuseCsiDriverConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterAddonsConfigGcsFuseCsiDriverConfigArrayInput)(nil)).Elem(), GetClusterAddonsConfigGcsFuseCsiDriverConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterAddonsConfigGkeBackupAgentConfigInput)(nil)).Elem(), GetClusterAddonsConfigGkeBackupAgentConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterAddonsConfigGkeBackupAgentConfigArrayInput)(nil)).Elem(), GetClusterAddonsConfigGkeBackupAgentConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterAddonsConfigHorizontalPodAutoscalingInput)(nil)).Elem(), GetClusterAddonsConfigHorizontalPodAutoscalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterAddonsConfigHorizontalPodAutoscalingArrayInput)(nil)).Elem(), GetClusterAddonsConfigHorizontalPodAutoscalingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterAddonsConfigHttpLoadBalancingInput)(nil)).Elem(), GetClusterAddonsConfigHttpLoadBalancingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterAddonsConfigHttpLoadBalancingArrayInput)(nil)).Elem(), GetClusterAddonsConfigHttpLoadBalancingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterAddonsConfigIstioConfigInput)(nil)).Elem(), GetClusterAddonsConfigIstioConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterAddonsConfigIstioConfigArrayInput)(nil)).Elem(), GetClusterAddonsConfigIstioConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterAddonsConfigKalmConfigInput)(nil)).Elem(), GetClusterAddonsConfigKalmConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterAddonsConfigKalmConfigArrayInput)(nil)).Elem(), GetClusterAddonsConfigKalmConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterAddonsConfigNetworkPolicyConfigInput)(nil)).Elem(), GetClusterAddonsConfigNetworkPolicyConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterAddonsConfigNetworkPolicyConfigArrayInput)(nil)).Elem(), GetClusterAddonsConfigNetworkPolicyConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterAddonsConfigStatefulHaConfigInput)(nil)).Elem(), GetClusterAddonsConfigStatefulHaConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterAddonsConfigStatefulHaConfigArrayInput)(nil)).Elem(), GetClusterAddonsConfigStatefulHaConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterAuthenticatorGroupsConfigInput)(nil)).Elem(), GetClusterAuthenticatorGroupsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterAuthenticatorGroupsConfigArrayInput)(nil)).Elem(), GetClusterAuthenticatorGroupsConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterBinaryAuthorizationInput)(nil)).Elem(), GetClusterBinaryAuthorizationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterBinaryAuthorizationArrayInput)(nil)).Elem(), GetClusterBinaryAuthorizationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterClusterAutoscalingInput)(nil)).Elem(), GetClusterClusterAutoscalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterClusterAutoscalingArrayInput)(nil)).Elem(), GetClusterClusterAutoscalingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterClusterAutoscalingAutoProvisioningDefaultInput)(nil)).Elem(), GetClusterClusterAutoscalingAutoProvisioningDefaultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterClusterAutoscalingAutoProvisioningDefaultArrayInput)(nil)).Elem(), GetClusterClusterAutoscalingAutoProvisioningDefaultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterClusterAutoscalingAutoProvisioningDefaultManagementInput)(nil)).Elem(), GetClusterClusterAutoscalingAutoProvisioningDefaultManagementArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterClusterAutoscalingAutoProvisioningDefaultManagementArrayInput)(nil)).Elem(), GetClusterClusterAutoscalingAutoProvisioningDefaultManagementArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOptionInput)(nil)).Elem(), GetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOptionArrayInput)(nil)).Elem(), GetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterClusterAutoscalingAutoProvisioningDefaultShieldedInstanceConfigInput)(nil)).Elem(), GetClusterClusterAutoscalingAutoProvisioningDefaultShieldedInstanceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterClusterAutoscalingAutoProvisioningDefaultShieldedInstanceConfigArrayInput)(nil)).Elem(), GetClusterClusterAutoscalingAutoProvisioningDefaultShieldedInstanceConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingInput)(nil)).Elem(), GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingArrayInput)(nil)).Elem(), GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingInput)(nil)).Elem(), GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingArrayInput)(nil)).Elem(), GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingStandardRolloutPolicyInput)(nil)).Elem(), GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingStandardRolloutPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingStandardRolloutPolicyArrayInput)(nil)).Elem(), GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingStandardRolloutPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterClusterAutoscalingResourceLimitInput)(nil)).Elem(), GetClusterClusterAutoscalingResourceLimitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterClusterAutoscalingResourceLimitArrayInput)(nil)).Elem(), GetClusterClusterAutoscalingResourceLimitArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterClusterTelemetryInput)(nil)).Elem(), GetClusterClusterTelemetryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterClusterTelemetryArrayInput)(nil)).Elem(), GetClusterClusterTelemetryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterConfidentialNodeInput)(nil)).Elem(), GetClusterConfidentialNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterConfidentialNodeArrayInput)(nil)).Elem(), GetClusterConfidentialNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterCostManagementConfigInput)(nil)).Elem(), GetClusterCostManagementConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterCostManagementConfigArrayInput)(nil)).Elem(), GetClusterCostManagementConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterDatabaseEncryptionInput)(nil)).Elem(), GetClusterDatabaseEncryptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterDatabaseEncryptionArrayInput)(nil)).Elem(), GetClusterDatabaseEncryptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterDefaultSnatStatusInput)(nil)).Elem(), GetClusterDefaultSnatStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterDefaultSnatStatusArrayInput)(nil)).Elem(), GetClusterDefaultSnatStatusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterDnsConfigInput)(nil)).Elem(), GetClusterDnsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterDnsConfigArrayInput)(nil)).Elem(), GetClusterDnsConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterEnableK8sBetaApiInput)(nil)).Elem(), GetClusterEnableK8sBetaApiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterEnableK8sBetaApiArrayInput)(nil)).Elem(), GetClusterEnableK8sBetaApiArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterFleetInput)(nil)).Elem(), GetClusterFleetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterFleetArrayInput)(nil)).Elem(), GetClusterFleetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterGatewayApiConfigInput)(nil)).Elem(), GetClusterGatewayApiConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterGatewayApiConfigArrayInput)(nil)).Elem(), GetClusterGatewayApiConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterIdentityServiceConfigInput)(nil)).Elem(), GetClusterIdentityServiceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterIdentityServiceConfigArrayInput)(nil)).Elem(), GetClusterIdentityServiceConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterIpAllocationPolicyInput)(nil)).Elem(), GetClusterIpAllocationPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterIpAllocationPolicyArrayInput)(nil)).Elem(), GetClusterIpAllocationPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterIpAllocationPolicyAdditionalPodRangesConfigInput)(nil)).Elem(), GetClusterIpAllocationPolicyAdditionalPodRangesConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterIpAllocationPolicyAdditionalPodRangesConfigArrayInput)(nil)).Elem(), GetClusterIpAllocationPolicyAdditionalPodRangesConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterIpAllocationPolicyPodCidrOverprovisionConfigInput)(nil)).Elem(), GetClusterIpAllocationPolicyPodCidrOverprovisionConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterIpAllocationPolicyPodCidrOverprovisionConfigArrayInput)(nil)).Elem(), GetClusterIpAllocationPolicyPodCidrOverprovisionConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterLoggingConfigInput)(nil)).Elem(), GetClusterLoggingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterLoggingConfigArrayInput)(nil)).Elem(), GetClusterLoggingConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterMaintenancePolicyInput)(nil)).Elem(), GetClusterMaintenancePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterMaintenancePolicyArrayInput)(nil)).Elem(), GetClusterMaintenancePolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterMaintenancePolicyDailyMaintenanceWindowInput)(nil)).Elem(), GetClusterMaintenancePolicyDailyMaintenanceWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterMaintenancePolicyDailyMaintenanceWindowArrayInput)(nil)).Elem(), GetClusterMaintenancePolicyDailyMaintenanceWindowArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterMaintenancePolicyMaintenanceExclusionInput)(nil)).Elem(), GetClusterMaintenancePolicyMaintenanceExclusionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterMaintenancePolicyMaintenanceExclusionArrayInput)(nil)).Elem(), GetClusterMaintenancePolicyMaintenanceExclusionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterMaintenancePolicyMaintenanceExclusionExclusionOptionInput)(nil)).Elem(), GetClusterMaintenancePolicyMaintenanceExclusionExclusionOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterMaintenancePolicyMaintenanceExclusionExclusionOptionArrayInput)(nil)).Elem(), GetClusterMaintenancePolicyMaintenanceExclusionExclusionOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterMaintenancePolicyRecurringWindowInput)(nil)).Elem(), GetClusterMaintenancePolicyRecurringWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterMaintenancePolicyRecurringWindowArrayInput)(nil)).Elem(), GetClusterMaintenancePolicyRecurringWindowArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterMasterAuthInput)(nil)).Elem(), GetClusterMasterAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterMasterAuthArrayInput)(nil)).Elem(), GetClusterMasterAuthArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterMasterAuthClientCertificateConfigInput)(nil)).Elem(), GetClusterMasterAuthClientCertificateConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterMasterAuthClientCertificateConfigArrayInput)(nil)).Elem(), GetClusterMasterAuthClientCertificateConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterMasterAuthorizedNetworksConfigInput)(nil)).Elem(), GetClusterMasterAuthorizedNetworksConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterMasterAuthorizedNetworksConfigArrayInput)(nil)).Elem(), GetClusterMasterAuthorizedNetworksConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterMasterAuthorizedNetworksConfigCidrBlockInput)(nil)).Elem(), GetClusterMasterAuthorizedNetworksConfigCidrBlockArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterMasterAuthorizedNetworksConfigCidrBlockArrayInput)(nil)).Elem(), GetClusterMasterAuthorizedNetworksConfigCidrBlockArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterMeshCertificateInput)(nil)).Elem(), GetClusterMeshCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterMeshCertificateArrayInput)(nil)).Elem(), GetClusterMeshCertificateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterMonitoringConfigInput)(nil)).Elem(), GetClusterMonitoringConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterMonitoringConfigArrayInput)(nil)).Elem(), GetClusterMonitoringConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterMonitoringConfigAdvancedDatapathObservabilityConfigInput)(nil)).Elem(), GetClusterMonitoringConfigAdvancedDatapathObservabilityConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterMonitoringConfigAdvancedDatapathObservabilityConfigArrayInput)(nil)).Elem(), GetClusterMonitoringConfigAdvancedDatapathObservabilityConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterMonitoringConfigManagedPrometheusInput)(nil)).Elem(), GetClusterMonitoringConfigManagedPrometheusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterMonitoringConfigManagedPrometheusArrayInput)(nil)).Elem(), GetClusterMonitoringConfigManagedPrometheusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNetworkPolicyInput)(nil)).Elem(), GetClusterNetworkPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNetworkPolicyArrayInput)(nil)).Elem(), GetClusterNetworkPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodeConfigInput)(nil)).Elem(), GetClusterNodeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodeConfigArrayInput)(nil)).Elem(), GetClusterNodeConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodeConfigAdvancedMachineFeatureInput)(nil)).Elem(), GetClusterNodeConfigAdvancedMachineFeatureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodeConfigAdvancedMachineFeatureArrayInput)(nil)).Elem(), GetClusterNodeConfigAdvancedMachineFeatureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodeConfigConfidentialNodeInput)(nil)).Elem(), GetClusterNodeConfigConfidentialNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodeConfigConfidentialNodeArrayInput)(nil)).Elem(), GetClusterNodeConfigConfidentialNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodeConfigEffectiveTaintInput)(nil)).Elem(), GetClusterNodeConfigEffectiveTaintArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodeConfigEffectiveTaintArrayInput)(nil)).Elem(), GetClusterNodeConfigEffectiveTaintArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodeConfigEphemeralStorageConfigInput)(nil)).Elem(), GetClusterNodeConfigEphemeralStorageConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodeConfigEphemeralStorageConfigArrayInput)(nil)).Elem(), GetClusterNodeConfigEphemeralStorageConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodeConfigEphemeralStorageLocalSsdConfigInput)(nil)).Elem(), GetClusterNodeConfigEphemeralStorageLocalSsdConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodeConfigEphemeralStorageLocalSsdConfigArrayInput)(nil)).Elem(), GetClusterNodeConfigEphemeralStorageLocalSsdConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodeConfigFastSocketInput)(nil)).Elem(), GetClusterNodeConfigFastSocketArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodeConfigFastSocketArrayInput)(nil)).Elem(), GetClusterNodeConfigFastSocketArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodeConfigGcfsConfigInput)(nil)).Elem(), GetClusterNodeConfigGcfsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodeConfigGcfsConfigArrayInput)(nil)).Elem(), GetClusterNodeConfigGcfsConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodeConfigGuestAcceleratorInput)(nil)).Elem(), GetClusterNodeConfigGuestAcceleratorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodeConfigGuestAcceleratorArrayInput)(nil)).Elem(), GetClusterNodeConfigGuestAcceleratorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigInput)(nil)).Elem(), GetClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigArrayInput)(nil)).Elem(), GetClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodeConfigGuestAcceleratorGpuSharingConfigInput)(nil)).Elem(), GetClusterNodeConfigGuestAcceleratorGpuSharingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodeConfigGuestAcceleratorGpuSharingConfigArrayInput)(nil)).Elem(), GetClusterNodeConfigGuestAcceleratorGpuSharingConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodeConfigGvnicInput)(nil)).Elem(), GetClusterNodeConfigGvnicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodeConfigGvnicArrayInput)(nil)).Elem(), GetClusterNodeConfigGvnicArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodeConfigHostMaintenancePolicyInput)(nil)).Elem(), GetClusterNodeConfigHostMaintenancePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodeConfigHostMaintenancePolicyArrayInput)(nil)).Elem(), GetClusterNodeConfigHostMaintenancePolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodeConfigKubeletConfigInput)(nil)).Elem(), GetClusterNodeConfigKubeletConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodeConfigKubeletConfigArrayInput)(nil)).Elem(), GetClusterNodeConfigKubeletConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodeConfigLinuxNodeConfigInput)(nil)).Elem(), GetClusterNodeConfigLinuxNodeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodeConfigLinuxNodeConfigArrayInput)(nil)).Elem(), GetClusterNodeConfigLinuxNodeConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodeConfigLocalNvmeSsdBlockConfigInput)(nil)).Elem(), GetClusterNodeConfigLocalNvmeSsdBlockConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodeConfigLocalNvmeSsdBlockConfigArrayInput)(nil)).Elem(), GetClusterNodeConfigLocalNvmeSsdBlockConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodeConfigReservationAffinityInput)(nil)).Elem(), GetClusterNodeConfigReservationAffinityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodeConfigReservationAffinityArrayInput)(nil)).Elem(), GetClusterNodeConfigReservationAffinityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodeConfigSandboxConfigInput)(nil)).Elem(), GetClusterNodeConfigSandboxConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodeConfigSandboxConfigArrayInput)(nil)).Elem(), GetClusterNodeConfigSandboxConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodeConfigSecondaryBootDiskInput)(nil)).Elem(), GetClusterNodeConfigSecondaryBootDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodeConfigSecondaryBootDiskArrayInput)(nil)).Elem(), GetClusterNodeConfigSecondaryBootDiskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodeConfigShieldedInstanceConfigInput)(nil)).Elem(), GetClusterNodeConfigShieldedInstanceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodeConfigShieldedInstanceConfigArrayInput)(nil)).Elem(), GetClusterNodeConfigShieldedInstanceConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodeConfigSoleTenantConfigInput)(nil)).Elem(), GetClusterNodeConfigSoleTenantConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodeConfigSoleTenantConfigArrayInput)(nil)).Elem(), GetClusterNodeConfigSoleTenantConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodeConfigSoleTenantConfigNodeAffinityInput)(nil)).Elem(), GetClusterNodeConfigSoleTenantConfigNodeAffinityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodeConfigSoleTenantConfigNodeAffinityArrayInput)(nil)).Elem(), GetClusterNodeConfigSoleTenantConfigNodeAffinityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodeConfigTaintInput)(nil)).Elem(), GetClusterNodeConfigTaintArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodeConfigTaintArrayInput)(nil)).Elem(), GetClusterNodeConfigTaintArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodeConfigWorkloadMetadataConfigInput)(nil)).Elem(), GetClusterNodeConfigWorkloadMetadataConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodeConfigWorkloadMetadataConfigArrayInput)(nil)).Elem(), GetClusterNodeConfigWorkloadMetadataConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolInput)(nil)).Elem(), GetClusterNodePoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolArrayInput)(nil)).Elem(), GetClusterNodePoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolAutoConfigInput)(nil)).Elem(), GetClusterNodePoolAutoConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolAutoConfigArrayInput)(nil)).Elem(), GetClusterNodePoolAutoConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolAutoConfigNetworkTagInput)(nil)).Elem(), GetClusterNodePoolAutoConfigNetworkTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolAutoConfigNetworkTagArrayInput)(nil)).Elem(), GetClusterNodePoolAutoConfigNetworkTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolAutoscalingInput)(nil)).Elem(), GetClusterNodePoolAutoscalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolAutoscalingArrayInput)(nil)).Elem(), GetClusterNodePoolAutoscalingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolDefaultInput)(nil)).Elem(), GetClusterNodePoolDefaultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolDefaultArrayInput)(nil)).Elem(), GetClusterNodePoolDefaultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolDefaultNodeConfigDefaultInput)(nil)).Elem(), GetClusterNodePoolDefaultNodeConfigDefaultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolDefaultNodeConfigDefaultArrayInput)(nil)).Elem(), GetClusterNodePoolDefaultNodeConfigDefaultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolDefaultNodeConfigDefaultGcfsConfigInput)(nil)).Elem(), GetClusterNodePoolDefaultNodeConfigDefaultGcfsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolDefaultNodeConfigDefaultGcfsConfigArrayInput)(nil)).Elem(), GetClusterNodePoolDefaultNodeConfigDefaultGcfsConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolManagementInput)(nil)).Elem(), GetClusterNodePoolManagementArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolManagementArrayInput)(nil)).Elem(), GetClusterNodePoolManagementArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolNetworkConfigInput)(nil)).Elem(), GetClusterNodePoolNetworkConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolNetworkConfigArrayInput)(nil)).Elem(), GetClusterNodePoolNetworkConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigInput)(nil)).Elem(), GetClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArrayInput)(nil)).Elem(), GetClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolNetworkConfigAdditionalPodNetworkConfigInput)(nil)).Elem(), GetClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArrayInput)(nil)).Elem(), GetClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolNetworkConfigNetworkPerformanceConfigInput)(nil)).Elem(), GetClusterNodePoolNetworkConfigNetworkPerformanceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolNetworkConfigNetworkPerformanceConfigArrayInput)(nil)).Elem(), GetClusterNodePoolNetworkConfigNetworkPerformanceConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolNetworkConfigPodCidrOverprovisionConfigInput)(nil)).Elem(), GetClusterNodePoolNetworkConfigPodCidrOverprovisionConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolNetworkConfigPodCidrOverprovisionConfigArrayInput)(nil)).Elem(), GetClusterNodePoolNetworkConfigPodCidrOverprovisionConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolNodeConfigInput)(nil)).Elem(), GetClusterNodePoolNodeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolNodeConfigArrayInput)(nil)).Elem(), GetClusterNodePoolNodeConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolNodeConfigAdvancedMachineFeatureInput)(nil)).Elem(), GetClusterNodePoolNodeConfigAdvancedMachineFeatureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolNodeConfigAdvancedMachineFeatureArrayInput)(nil)).Elem(), GetClusterNodePoolNodeConfigAdvancedMachineFeatureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolNodeConfigConfidentialNodeInput)(nil)).Elem(), GetClusterNodePoolNodeConfigConfidentialNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolNodeConfigConfidentialNodeArrayInput)(nil)).Elem(), GetClusterNodePoolNodeConfigConfidentialNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolNodeConfigEffectiveTaintInput)(nil)).Elem(), GetClusterNodePoolNodeConfigEffectiveTaintArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolNodeConfigEffectiveTaintArrayInput)(nil)).Elem(), GetClusterNodePoolNodeConfigEffectiveTaintArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolNodeConfigEphemeralStorageConfigInput)(nil)).Elem(), GetClusterNodePoolNodeConfigEphemeralStorageConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolNodeConfigEphemeralStorageConfigArrayInput)(nil)).Elem(), GetClusterNodePoolNodeConfigEphemeralStorageConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigInput)(nil)).Elem(), GetClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigArrayInput)(nil)).Elem(), GetClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolNodeConfigFastSocketInput)(nil)).Elem(), GetClusterNodePoolNodeConfigFastSocketArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolNodeConfigFastSocketArrayInput)(nil)).Elem(), GetClusterNodePoolNodeConfigFastSocketArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolNodeConfigGcfsConfigInput)(nil)).Elem(), GetClusterNodePoolNodeConfigGcfsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolNodeConfigGcfsConfigArrayInput)(nil)).Elem(), GetClusterNodePoolNodeConfigGcfsConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolNodeConfigGuestAcceleratorInput)(nil)).Elem(), GetClusterNodePoolNodeConfigGuestAcceleratorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolNodeConfigGuestAcceleratorArrayInput)(nil)).Elem(), GetClusterNodePoolNodeConfigGuestAcceleratorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigInput)(nil)).Elem(), GetClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigArrayInput)(nil)).Elem(), GetClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigInput)(nil)).Elem(), GetClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigArrayInput)(nil)).Elem(), GetClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolNodeConfigGvnicInput)(nil)).Elem(), GetClusterNodePoolNodeConfigGvnicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolNodeConfigGvnicArrayInput)(nil)).Elem(), GetClusterNodePoolNodeConfigGvnicArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolNodeConfigHostMaintenancePolicyInput)(nil)).Elem(), GetClusterNodePoolNodeConfigHostMaintenancePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolNodeConfigHostMaintenancePolicyArrayInput)(nil)).Elem(), GetClusterNodePoolNodeConfigHostMaintenancePolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolNodeConfigKubeletConfigInput)(nil)).Elem(), GetClusterNodePoolNodeConfigKubeletConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolNodeConfigKubeletConfigArrayInput)(nil)).Elem(), GetClusterNodePoolNodeConfigKubeletConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolNodeConfigLinuxNodeConfigInput)(nil)).Elem(), GetClusterNodePoolNodeConfigLinuxNodeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolNodeConfigLinuxNodeConfigArrayInput)(nil)).Elem(), GetClusterNodePoolNodeConfigLinuxNodeConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigInput)(nil)).Elem(), GetClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigArrayInput)(nil)).Elem(), GetClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolNodeConfigReservationAffinityInput)(nil)).Elem(), GetClusterNodePoolNodeConfigReservationAffinityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolNodeConfigReservationAffinityArrayInput)(nil)).Elem(), GetClusterNodePoolNodeConfigReservationAffinityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolNodeConfigSandboxConfigInput)(nil)).Elem(), GetClusterNodePoolNodeConfigSandboxConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolNodeConfigSandboxConfigArrayInput)(nil)).Elem(), GetClusterNodePoolNodeConfigSandboxConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolNodeConfigSecondaryBootDiskInput)(nil)).Elem(), GetClusterNodePoolNodeConfigSecondaryBootDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolNodeConfigSecondaryBootDiskArrayInput)(nil)).Elem(), GetClusterNodePoolNodeConfigSecondaryBootDiskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolNodeConfigShieldedInstanceConfigInput)(nil)).Elem(), GetClusterNodePoolNodeConfigShieldedInstanceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolNodeConfigShieldedInstanceConfigArrayInput)(nil)).Elem(), GetClusterNodePoolNodeConfigShieldedInstanceConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolNodeConfigSoleTenantConfigInput)(nil)).Elem(), GetClusterNodePoolNodeConfigSoleTenantConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolNodeConfigSoleTenantConfigArrayInput)(nil)).Elem(), GetClusterNodePoolNodeConfigSoleTenantConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityInput)(nil)).Elem(), GetClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArrayInput)(nil)).Elem(), GetClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolNodeConfigTaintInput)(nil)).Elem(), GetClusterNodePoolNodeConfigTaintArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolNodeConfigTaintArrayInput)(nil)).Elem(), GetClusterNodePoolNodeConfigTaintArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolNodeConfigWorkloadMetadataConfigInput)(nil)).Elem(), GetClusterNodePoolNodeConfigWorkloadMetadataConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolNodeConfigWorkloadMetadataConfigArrayInput)(nil)).Elem(), GetClusterNodePoolNodeConfigWorkloadMetadataConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolPlacementPolicyInput)(nil)).Elem(), GetClusterNodePoolPlacementPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolPlacementPolicyArrayInput)(nil)).Elem(), GetClusterNodePoolPlacementPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolQueuedProvisioningInput)(nil)).Elem(), GetClusterNodePoolQueuedProvisioningArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolQueuedProvisioningArrayInput)(nil)).Elem(), GetClusterNodePoolQueuedProvisioningArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolUpgradeSettingInput)(nil)).Elem(), GetClusterNodePoolUpgradeSettingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolUpgradeSettingArrayInput)(nil)).Elem(), GetClusterNodePoolUpgradeSettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolUpgradeSettingBlueGreenSettingInput)(nil)).Elem(), GetClusterNodePoolUpgradeSettingBlueGreenSettingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolUpgradeSettingBlueGreenSettingArrayInput)(nil)).Elem(), GetClusterNodePoolUpgradeSettingBlueGreenSettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolUpgradeSettingBlueGreenSettingStandardRolloutPolicyInput)(nil)).Elem(), GetClusterNodePoolUpgradeSettingBlueGreenSettingStandardRolloutPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolUpgradeSettingBlueGreenSettingStandardRolloutPolicyArrayInput)(nil)).Elem(), GetClusterNodePoolUpgradeSettingBlueGreenSettingStandardRolloutPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNotificationConfigInput)(nil)).Elem(), GetClusterNotificationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNotificationConfigArrayInput)(nil)).Elem(), GetClusterNotificationConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNotificationConfigPubsubInput)(nil)).Elem(), GetClusterNotificationConfigPubsubArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNotificationConfigPubsubArrayInput)(nil)).Elem(), GetClusterNotificationConfigPubsubArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNotificationConfigPubsubFilterInput)(nil)).Elem(), GetClusterNotificationConfigPubsubFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNotificationConfigPubsubFilterArrayInput)(nil)).Elem(), GetClusterNotificationConfigPubsubFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterPodSecurityPolicyConfigInput)(nil)).Elem(), GetClusterPodSecurityPolicyConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterPodSecurityPolicyConfigArrayInput)(nil)).Elem(), GetClusterPodSecurityPolicyConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterPrivateClusterConfigInput)(nil)).Elem(), GetClusterPrivateClusterConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterPrivateClusterConfigArrayInput)(nil)).Elem(), GetClusterPrivateClusterConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterPrivateClusterConfigMasterGlobalAccessConfigInput)(nil)).Elem(), GetClusterPrivateClusterConfigMasterGlobalAccessConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterPrivateClusterConfigMasterGlobalAccessConfigArrayInput)(nil)).Elem(), GetClusterPrivateClusterConfigMasterGlobalAccessConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterProtectConfigInput)(nil)).Elem(), GetClusterProtectConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterProtectConfigArrayInput)(nil)).Elem(), GetClusterProtectConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterProtectConfigWorkloadConfigInput)(nil)).Elem(), GetClusterProtectConfigWorkloadConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterProtectConfigWorkloadConfigArrayInput)(nil)).Elem(), GetClusterProtectConfigWorkloadConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterReleaseChannelInput)(nil)).Elem(), GetClusterReleaseChannelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterReleaseChannelArrayInput)(nil)).Elem(), GetClusterReleaseChannelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterResourceUsageExportConfigInput)(nil)).Elem(), GetClusterResourceUsageExportConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterResourceUsageExportConfigArrayInput)(nil)).Elem(), GetClusterResourceUsageExportConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterResourceUsageExportConfigBigqueryDestinationInput)(nil)).Elem(), GetClusterResourceUsageExportConfigBigqueryDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterResourceUsageExportConfigBigqueryDestinationArrayInput)(nil)).Elem(), GetClusterResourceUsageExportConfigBigqueryDestinationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterSecurityPostureConfigInput)(nil)).Elem(), GetClusterSecurityPostureConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterSecurityPostureConfigArrayInput)(nil)).Elem(), GetClusterSecurityPostureConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterServiceExternalIpsConfigInput)(nil)).Elem(), GetClusterServiceExternalIpsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterServiceExternalIpsConfigArrayInput)(nil)).Elem(), GetClusterServiceExternalIpsConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterTpuConfigInput)(nil)).Elem(), GetClusterTpuConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterTpuConfigArrayInput)(nil)).Elem(), GetClusterTpuConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterVerticalPodAutoscalingInput)(nil)).Elem(), GetClusterVerticalPodAutoscalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterVerticalPodAutoscalingArrayInput)(nil)).Elem(), GetClusterVerticalPodAutoscalingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterWorkloadAltsConfigInput)(nil)).Elem(), GetClusterWorkloadAltsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterWorkloadAltsConfigArrayInput)(nil)).Elem(), GetClusterWorkloadAltsConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterWorkloadIdentityConfigInput)(nil)).Elem(), GetClusterWorkloadIdentityConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterWorkloadIdentityConfigArrayInput)(nil)).Elem(), GetClusterWorkloadIdentityConfigArray{})
	pulumi.RegisterOutputType(AttachedClusterAuthorizationOutput{})
	pulumi.RegisterOutputType(AttachedClusterAuthorizationPtrOutput{})
	pulumi.RegisterOutputType(AttachedClusterBinaryAuthorizationOutput{})
	pulumi.RegisterOutputType(AttachedClusterBinaryAuthorizationPtrOutput{})
	pulumi.RegisterOutputType(AttachedClusterErrorOutput{})
	pulumi.RegisterOutputType(AttachedClusterErrorArrayOutput{})
	pulumi.RegisterOutputType(AttachedClusterFleetOutput{})
	pulumi.RegisterOutputType(AttachedClusterFleetPtrOutput{})
	pulumi.RegisterOutputType(AttachedClusterLoggingConfigOutput{})
	pulumi.RegisterOutputType(AttachedClusterLoggingConfigPtrOutput{})
	pulumi.RegisterOutputType(AttachedClusterLoggingConfigComponentConfigOutput{})
	pulumi.RegisterOutputType(AttachedClusterLoggingConfigComponentConfigPtrOutput{})
	pulumi.RegisterOutputType(AttachedClusterMonitoringConfigOutput{})
	pulumi.RegisterOutputType(AttachedClusterMonitoringConfigPtrOutput{})
	pulumi.RegisterOutputType(AttachedClusterMonitoringConfigManagedPrometheusConfigOutput{})
	pulumi.RegisterOutputType(AttachedClusterMonitoringConfigManagedPrometheusConfigPtrOutput{})
	pulumi.RegisterOutputType(AttachedClusterOidcConfigOutput{})
	pulumi.RegisterOutputType(AttachedClusterOidcConfigPtrOutput{})
	pulumi.RegisterOutputType(AttachedClusterProxyConfigOutput{})
	pulumi.RegisterOutputType(AttachedClusterProxyConfigPtrOutput{})
	pulumi.RegisterOutputType(AttachedClusterProxyConfigKubernetesSecretOutput{})
	pulumi.RegisterOutputType(AttachedClusterProxyConfigKubernetesSecretPtrOutput{})
	pulumi.RegisterOutputType(AttachedClusterWorkloadIdentityConfigOutput{})
	pulumi.RegisterOutputType(AttachedClusterWorkloadIdentityConfigArrayOutput{})
	pulumi.RegisterOutputType(AwsClusterAuthorizationOutput{})
	pulumi.RegisterOutputType(AwsClusterAuthorizationPtrOutput{})
	pulumi.RegisterOutputType(AwsClusterAuthorizationAdminGroupOutput{})
	pulumi.RegisterOutputType(AwsClusterAuthorizationAdminGroupArrayOutput{})
	pulumi.RegisterOutputType(AwsClusterAuthorizationAdminUserOutput{})
	pulumi.RegisterOutputType(AwsClusterAuthorizationAdminUserArrayOutput{})
	pulumi.RegisterOutputType(AwsClusterBinaryAuthorizationOutput{})
	pulumi.RegisterOutputType(AwsClusterBinaryAuthorizationPtrOutput{})
	pulumi.RegisterOutputType(AwsClusterControlPlaneOutput{})
	pulumi.RegisterOutputType(AwsClusterControlPlanePtrOutput{})
	pulumi.RegisterOutputType(AwsClusterControlPlaneAwsServicesAuthenticationOutput{})
	pulumi.RegisterOutputType(AwsClusterControlPlaneAwsServicesAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(AwsClusterControlPlaneConfigEncryptionOutput{})
	pulumi.RegisterOutputType(AwsClusterControlPlaneConfigEncryptionPtrOutput{})
	pulumi.RegisterOutputType(AwsClusterControlPlaneDatabaseEncryptionOutput{})
	pulumi.RegisterOutputType(AwsClusterControlPlaneDatabaseEncryptionPtrOutput{})
	pulumi.RegisterOutputType(AwsClusterControlPlaneInstancePlacementOutput{})
	pulumi.RegisterOutputType(AwsClusterControlPlaneInstancePlacementPtrOutput{})
	pulumi.RegisterOutputType(AwsClusterControlPlaneMainVolumeOutput{})
	pulumi.RegisterOutputType(AwsClusterControlPlaneMainVolumePtrOutput{})
	pulumi.RegisterOutputType(AwsClusterControlPlaneProxyConfigOutput{})
	pulumi.RegisterOutputType(AwsClusterControlPlaneProxyConfigPtrOutput{})
	pulumi.RegisterOutputType(AwsClusterControlPlaneRootVolumeOutput{})
	pulumi.RegisterOutputType(AwsClusterControlPlaneRootVolumePtrOutput{})
	pulumi.RegisterOutputType(AwsClusterControlPlaneSshConfigOutput{})
	pulumi.RegisterOutputType(AwsClusterControlPlaneSshConfigPtrOutput{})
	pulumi.RegisterOutputType(AwsClusterFleetOutput{})
	pulumi.RegisterOutputType(AwsClusterFleetPtrOutput{})
	pulumi.RegisterOutputType(AwsClusterLoggingConfigOutput{})
	pulumi.RegisterOutputType(AwsClusterLoggingConfigPtrOutput{})
	pulumi.RegisterOutputType(AwsClusterLoggingConfigComponentConfigOutput{})
	pulumi.RegisterOutputType(AwsClusterLoggingConfigComponentConfigPtrOutput{})
	pulumi.RegisterOutputType(AwsClusterNetworkingOutput{})
	pulumi.RegisterOutputType(AwsClusterNetworkingPtrOutput{})
	pulumi.RegisterOutputType(AwsClusterWorkloadIdentityConfigOutput{})
	pulumi.RegisterOutputType(AwsClusterWorkloadIdentityConfigArrayOutput{})
	pulumi.RegisterOutputType(AwsNodePoolAutoscalingOutput{})
	pulumi.RegisterOutputType(AwsNodePoolAutoscalingPtrOutput{})
	pulumi.RegisterOutputType(AwsNodePoolConfigOutput{})
	pulumi.RegisterOutputType(AwsNodePoolConfigPtrOutput{})
	pulumi.RegisterOutputType(AwsNodePoolConfigAutoscalingMetricsCollectionOutput{})
	pulumi.RegisterOutputType(AwsNodePoolConfigAutoscalingMetricsCollectionPtrOutput{})
	pulumi.RegisterOutputType(AwsNodePoolConfigConfigEncryptionOutput{})
	pulumi.RegisterOutputType(AwsNodePoolConfigConfigEncryptionPtrOutput{})
	pulumi.RegisterOutputType(AwsNodePoolConfigInstancePlacementOutput{})
	pulumi.RegisterOutputType(AwsNodePoolConfigInstancePlacementPtrOutput{})
	pulumi.RegisterOutputType(AwsNodePoolConfigProxyConfigOutput{})
	pulumi.RegisterOutputType(AwsNodePoolConfigProxyConfigPtrOutput{})
	pulumi.RegisterOutputType(AwsNodePoolConfigRootVolumeOutput{})
	pulumi.RegisterOutputType(AwsNodePoolConfigRootVolumePtrOutput{})
	pulumi.RegisterOutputType(AwsNodePoolConfigSpotConfigOutput{})
	pulumi.RegisterOutputType(AwsNodePoolConfigSpotConfigPtrOutput{})
	pulumi.RegisterOutputType(AwsNodePoolConfigSshConfigOutput{})
	pulumi.RegisterOutputType(AwsNodePoolConfigSshConfigPtrOutput{})
	pulumi.RegisterOutputType(AwsNodePoolConfigTaintOutput{})
	pulumi.RegisterOutputType(AwsNodePoolConfigTaintArrayOutput{})
	pulumi.RegisterOutputType(AwsNodePoolManagementOutput{})
	pulumi.RegisterOutputType(AwsNodePoolManagementPtrOutput{})
	pulumi.RegisterOutputType(AwsNodePoolMaxPodsConstraintOutput{})
	pulumi.RegisterOutputType(AwsNodePoolMaxPodsConstraintPtrOutput{})
	pulumi.RegisterOutputType(AwsNodePoolUpdateSettingsOutput{})
	pulumi.RegisterOutputType(AwsNodePoolUpdateSettingsPtrOutput{})
	pulumi.RegisterOutputType(AwsNodePoolUpdateSettingsSurgeSettingsOutput{})
	pulumi.RegisterOutputType(AwsNodePoolUpdateSettingsSurgeSettingsPtrOutput{})
	pulumi.RegisterOutputType(AzureClusterAuthorizationOutput{})
	pulumi.RegisterOutputType(AzureClusterAuthorizationPtrOutput{})
	pulumi.RegisterOutputType(AzureClusterAuthorizationAdminGroupOutput{})
	pulumi.RegisterOutputType(AzureClusterAuthorizationAdminGroupArrayOutput{})
	pulumi.RegisterOutputType(AzureClusterAuthorizationAdminUserOutput{})
	pulumi.RegisterOutputType(AzureClusterAuthorizationAdminUserArrayOutput{})
	pulumi.RegisterOutputType(AzureClusterAzureServicesAuthenticationOutput{})
	pulumi.RegisterOutputType(AzureClusterAzureServicesAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(AzureClusterControlPlaneOutput{})
	pulumi.RegisterOutputType(AzureClusterControlPlanePtrOutput{})
	pulumi.RegisterOutputType(AzureClusterControlPlaneDatabaseEncryptionOutput{})
	pulumi.RegisterOutputType(AzureClusterControlPlaneDatabaseEncryptionPtrOutput{})
	pulumi.RegisterOutputType(AzureClusterControlPlaneMainVolumeOutput{})
	pulumi.RegisterOutputType(AzureClusterControlPlaneMainVolumePtrOutput{})
	pulumi.RegisterOutputType(AzureClusterControlPlaneProxyConfigOutput{})
	pulumi.RegisterOutputType(AzureClusterControlPlaneProxyConfigPtrOutput{})
	pulumi.RegisterOutputType(AzureClusterControlPlaneReplicaPlacementOutput{})
	pulumi.RegisterOutputType(AzureClusterControlPlaneReplicaPlacementArrayOutput{})
	pulumi.RegisterOutputType(AzureClusterControlPlaneRootVolumeOutput{})
	pulumi.RegisterOutputType(AzureClusterControlPlaneRootVolumePtrOutput{})
	pulumi.RegisterOutputType(AzureClusterControlPlaneSshConfigOutput{})
	pulumi.RegisterOutputType(AzureClusterControlPlaneSshConfigPtrOutput{})
	pulumi.RegisterOutputType(AzureClusterFleetOutput{})
	pulumi.RegisterOutputType(AzureClusterFleetPtrOutput{})
	pulumi.RegisterOutputType(AzureClusterLoggingConfigOutput{})
	pulumi.RegisterOutputType(AzureClusterLoggingConfigPtrOutput{})
	pulumi.RegisterOutputType(AzureClusterLoggingConfigComponentConfigOutput{})
	pulumi.RegisterOutputType(AzureClusterLoggingConfigComponentConfigPtrOutput{})
	pulumi.RegisterOutputType(AzureClusterNetworkingOutput{})
	pulumi.RegisterOutputType(AzureClusterNetworkingPtrOutput{})
	pulumi.RegisterOutputType(AzureClusterWorkloadIdentityConfigOutput{})
	pulumi.RegisterOutputType(AzureClusterWorkloadIdentityConfigArrayOutput{})
	pulumi.RegisterOutputType(AzureNodePoolAutoscalingOutput{})
	pulumi.RegisterOutputType(AzureNodePoolAutoscalingPtrOutput{})
	pulumi.RegisterOutputType(AzureNodePoolConfigOutput{})
	pulumi.RegisterOutputType(AzureNodePoolConfigPtrOutput{})
	pulumi.RegisterOutputType(AzureNodePoolConfigProxyConfigOutput{})
	pulumi.RegisterOutputType(AzureNodePoolConfigProxyConfigPtrOutput{})
	pulumi.RegisterOutputType(AzureNodePoolConfigRootVolumeOutput{})
	pulumi.RegisterOutputType(AzureNodePoolConfigRootVolumePtrOutput{})
	pulumi.RegisterOutputType(AzureNodePoolConfigSshConfigOutput{})
	pulumi.RegisterOutputType(AzureNodePoolConfigSshConfigPtrOutput{})
	pulumi.RegisterOutputType(AzureNodePoolManagementOutput{})
	pulumi.RegisterOutputType(AzureNodePoolManagementPtrOutput{})
	pulumi.RegisterOutputType(AzureNodePoolMaxPodsConstraintOutput{})
	pulumi.RegisterOutputType(AzureNodePoolMaxPodsConstraintPtrOutput{})
	pulumi.RegisterOutputType(ClusterAddonsConfigOutput{})
	pulumi.RegisterOutputType(ClusterAddonsConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterAddonsConfigCloudrunConfigOutput{})
	pulumi.RegisterOutputType(ClusterAddonsConfigCloudrunConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterAddonsConfigConfigConnectorConfigOutput{})
	pulumi.RegisterOutputType(ClusterAddonsConfigConfigConnectorConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterAddonsConfigDnsCacheConfigOutput{})
	pulumi.RegisterOutputType(ClusterAddonsConfigDnsCacheConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterAddonsConfigGcePersistentDiskCsiDriverConfigOutput{})
	pulumi.RegisterOutputType(ClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterAddonsConfigGcpFilestoreCsiDriverConfigOutput{})
	pulumi.RegisterOutputType(ClusterAddonsConfigGcpFilestoreCsiDriverConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterAddonsConfigGcsFuseCsiDriverConfigOutput{})
	pulumi.RegisterOutputType(ClusterAddonsConfigGcsFuseCsiDriverConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterAddonsConfigGkeBackupAgentConfigOutput{})
	pulumi.RegisterOutputType(ClusterAddonsConfigGkeBackupAgentConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterAddonsConfigHorizontalPodAutoscalingOutput{})
	pulumi.RegisterOutputType(ClusterAddonsConfigHorizontalPodAutoscalingPtrOutput{})
	pulumi.RegisterOutputType(ClusterAddonsConfigHttpLoadBalancingOutput{})
	pulumi.RegisterOutputType(ClusterAddonsConfigHttpLoadBalancingPtrOutput{})
	pulumi.RegisterOutputType(ClusterAddonsConfigIstioConfigOutput{})
	pulumi.RegisterOutputType(ClusterAddonsConfigIstioConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterAddonsConfigKalmConfigOutput{})
	pulumi.RegisterOutputType(ClusterAddonsConfigKalmConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterAddonsConfigNetworkPolicyConfigOutput{})
	pulumi.RegisterOutputType(ClusterAddonsConfigNetworkPolicyConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterAddonsConfigStatefulHaConfigOutput{})
	pulumi.RegisterOutputType(ClusterAddonsConfigStatefulHaConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterAuthenticatorGroupsConfigOutput{})
	pulumi.RegisterOutputType(ClusterAuthenticatorGroupsConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterBinaryAuthorizationOutput{})
	pulumi.RegisterOutputType(ClusterBinaryAuthorizationPtrOutput{})
	pulumi.RegisterOutputType(ClusterClusterAutoscalingOutput{})
	pulumi.RegisterOutputType(ClusterClusterAutoscalingPtrOutput{})
	pulumi.RegisterOutputType(ClusterClusterAutoscalingAutoProvisioningDefaultsOutput{})
	pulumi.RegisterOutputType(ClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutput{})
	pulumi.RegisterOutputType(ClusterClusterAutoscalingAutoProvisioningDefaultsManagementOutput{})
	pulumi.RegisterOutputType(ClusterClusterAutoscalingAutoProvisioningDefaultsManagementPtrOutput{})
	pulumi.RegisterOutputType(ClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionOutput{})
	pulumi.RegisterOutputType(ClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionArrayOutput{})
	pulumi.RegisterOutputType(ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigOutput{})
	pulumi.RegisterOutputType(ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsOutput{})
	pulumi.RegisterOutputType(ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsPtrOutput{})
	pulumi.RegisterOutputType(ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsOutput{})
	pulumi.RegisterOutputType(ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsPtrOutput{})
	pulumi.RegisterOutputType(ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutput{})
	pulumi.RegisterOutputType(ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput{})
	pulumi.RegisterOutputType(ClusterClusterAutoscalingResourceLimitOutput{})
	pulumi.RegisterOutputType(ClusterClusterAutoscalingResourceLimitArrayOutput{})
	pulumi.RegisterOutputType(ClusterClusterTelemetryOutput{})
	pulumi.RegisterOutputType(ClusterClusterTelemetryPtrOutput{})
	pulumi.RegisterOutputType(ClusterConfidentialNodesOutput{})
	pulumi.RegisterOutputType(ClusterConfidentialNodesPtrOutput{})
	pulumi.RegisterOutputType(ClusterCostManagementConfigOutput{})
	pulumi.RegisterOutputType(ClusterCostManagementConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterDatabaseEncryptionOutput{})
	pulumi.RegisterOutputType(ClusterDatabaseEncryptionPtrOutput{})
	pulumi.RegisterOutputType(ClusterDefaultSnatStatusOutput{})
	pulumi.RegisterOutputType(ClusterDefaultSnatStatusPtrOutput{})
	pulumi.RegisterOutputType(ClusterDnsConfigOutput{})
	pulumi.RegisterOutputType(ClusterDnsConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterEnableK8sBetaApisOutput{})
	pulumi.RegisterOutputType(ClusterEnableK8sBetaApisPtrOutput{})
	pulumi.RegisterOutputType(ClusterFleetOutput{})
	pulumi.RegisterOutputType(ClusterFleetPtrOutput{})
	pulumi.RegisterOutputType(ClusterGatewayApiConfigOutput{})
	pulumi.RegisterOutputType(ClusterGatewayApiConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterIdentityServiceConfigOutput{})
	pulumi.RegisterOutputType(ClusterIdentityServiceConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterIpAllocationPolicyOutput{})
	pulumi.RegisterOutputType(ClusterIpAllocationPolicyPtrOutput{})
	pulumi.RegisterOutputType(ClusterIpAllocationPolicyAdditionalPodRangesConfigOutput{})
	pulumi.RegisterOutputType(ClusterIpAllocationPolicyAdditionalPodRangesConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterIpAllocationPolicyPodCidrOverprovisionConfigOutput{})
	pulumi.RegisterOutputType(ClusterIpAllocationPolicyPodCidrOverprovisionConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterLoggingConfigOutput{})
	pulumi.RegisterOutputType(ClusterLoggingConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterMaintenancePolicyOutput{})
	pulumi.RegisterOutputType(ClusterMaintenancePolicyPtrOutput{})
	pulumi.RegisterOutputType(ClusterMaintenancePolicyDailyMaintenanceWindowOutput{})
	pulumi.RegisterOutputType(ClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput{})
	pulumi.RegisterOutputType(ClusterMaintenancePolicyMaintenanceExclusionOutput{})
	pulumi.RegisterOutputType(ClusterMaintenancePolicyMaintenanceExclusionArrayOutput{})
	pulumi.RegisterOutputType(ClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsOutput{})
	pulumi.RegisterOutputType(ClusterMaintenancePolicyMaintenanceExclusionExclusionOptionsPtrOutput{})
	pulumi.RegisterOutputType(ClusterMaintenancePolicyRecurringWindowOutput{})
	pulumi.RegisterOutputType(ClusterMaintenancePolicyRecurringWindowPtrOutput{})
	pulumi.RegisterOutputType(ClusterMasterAuthOutput{})
	pulumi.RegisterOutputType(ClusterMasterAuthPtrOutput{})
	pulumi.RegisterOutputType(ClusterMasterAuthClientCertificateConfigOutput{})
	pulumi.RegisterOutputType(ClusterMasterAuthClientCertificateConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterMasterAuthorizedNetworksConfigOutput{})
	pulumi.RegisterOutputType(ClusterMasterAuthorizedNetworksConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterMasterAuthorizedNetworksConfigCidrBlockOutput{})
	pulumi.RegisterOutputType(ClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput{})
	pulumi.RegisterOutputType(ClusterMeshCertificatesOutput{})
	pulumi.RegisterOutputType(ClusterMeshCertificatesPtrOutput{})
	pulumi.RegisterOutputType(ClusterMonitoringConfigOutput{})
	pulumi.RegisterOutputType(ClusterMonitoringConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterMonitoringConfigAdvancedDatapathObservabilityConfigOutput{})
	pulumi.RegisterOutputType(ClusterMonitoringConfigAdvancedDatapathObservabilityConfigArrayOutput{})
	pulumi.RegisterOutputType(ClusterMonitoringConfigManagedPrometheusOutput{})
	pulumi.RegisterOutputType(ClusterMonitoringConfigManagedPrometheusPtrOutput{})
	pulumi.RegisterOutputType(ClusterNetworkPolicyOutput{})
	pulumi.RegisterOutputType(ClusterNetworkPolicyPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigAdvancedMachineFeaturesOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigAdvancedMachineFeaturesPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigConfidentialNodesOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigConfidentialNodesPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigEffectiveTaintOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigEffectiveTaintArrayOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigEphemeralStorageConfigOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigEphemeralStorageConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigEphemeralStorageLocalSsdConfigOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigEphemeralStorageLocalSsdConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigFastSocketOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigFastSocketPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigGcfsConfigOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigGcfsConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigGuestAcceleratorOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigGuestAcceleratorArrayOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigGuestAcceleratorGpuSharingConfigOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigGuestAcceleratorGpuSharingConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigGvnicOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigGvnicPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigHostMaintenancePolicyOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigHostMaintenancePolicyPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigKubeletConfigOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigKubeletConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigLinuxNodeConfigOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigLinuxNodeConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigLocalNvmeSsdBlockConfigOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigLocalNvmeSsdBlockConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigReservationAffinityOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigReservationAffinityPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigSandboxConfigOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigSandboxConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigSecondaryBootDiskOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigSecondaryBootDiskArrayOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigShieldedInstanceConfigOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigShieldedInstanceConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigSoleTenantConfigOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigSoleTenantConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigSoleTenantConfigNodeAffinityOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigSoleTenantConfigNodeAffinityArrayOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigTaintOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigTaintArrayOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigWorkloadMetadataConfigOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigWorkloadMetadataConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolArrayOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolAutoConfigOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolAutoConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolAutoConfigNetworkTagsOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolAutoConfigNetworkTagsPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolAutoscalingOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolAutoscalingPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolDefaultsOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolDefaultsPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolDefaultsNodeConfigDefaultsOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolDefaultsNodeConfigDefaultsPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolDefaultsNodeConfigDefaultsGcfsConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolManagementOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolManagementPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNetworkConfigOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNetworkConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArrayOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNetworkConfigAdditionalPodNetworkConfigOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArrayOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNetworkConfigNetworkPerformanceConfigOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNetworkConfigNetworkPerformanceConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNetworkConfigPodCidrOverprovisionConfigOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNetworkConfigPodCidrOverprovisionConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigAdvancedMachineFeaturesOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigAdvancedMachineFeaturesPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigConfidentialNodesOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigConfidentialNodesPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigEffectiveTaintOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigEffectiveTaintArrayOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigEphemeralStorageConfigOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigEphemeralStorageConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigFastSocketOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigFastSocketPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigGcfsConfigOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigGcfsConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigGuestAcceleratorOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigGuestAcceleratorArrayOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigGvnicOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigGvnicPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigHostMaintenancePolicyOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigHostMaintenancePolicyPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigKubeletConfigOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigKubeletConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigLinuxNodeConfigOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigLinuxNodeConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigReservationAffinityOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigReservationAffinityPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigSandboxConfigOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigSandboxConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigSecondaryBootDiskOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigSecondaryBootDiskArrayOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigShieldedInstanceConfigOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigShieldedInstanceConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigSoleTenantConfigOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigSoleTenantConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArrayOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigTaintOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigTaintArrayOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigWorkloadMetadataConfigOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolPlacementPolicyOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolPlacementPolicyPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolQueuedProvisioningOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolQueuedProvisioningPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolUpgradeSettingsOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolUpgradeSettingsPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolUpgradeSettingsBlueGreenSettingsOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolUpgradeSettingsBlueGreenSettingsPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput{})
	pulumi.RegisterOutputType(ClusterNotificationConfigOutput{})
	pulumi.RegisterOutputType(ClusterNotificationConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterNotificationConfigPubsubOutput{})
	pulumi.RegisterOutputType(ClusterNotificationConfigPubsubPtrOutput{})
	pulumi.RegisterOutputType(ClusterNotificationConfigPubsubFilterOutput{})
	pulumi.RegisterOutputType(ClusterNotificationConfigPubsubFilterPtrOutput{})
	pulumi.RegisterOutputType(ClusterPodSecurityPolicyConfigOutput{})
	pulumi.RegisterOutputType(ClusterPodSecurityPolicyConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterPrivateClusterConfigOutput{})
	pulumi.RegisterOutputType(ClusterPrivateClusterConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterPrivateClusterConfigMasterGlobalAccessConfigOutput{})
	pulumi.RegisterOutputType(ClusterPrivateClusterConfigMasterGlobalAccessConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterProtectConfigOutput{})
	pulumi.RegisterOutputType(ClusterProtectConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterProtectConfigWorkloadConfigOutput{})
	pulumi.RegisterOutputType(ClusterProtectConfigWorkloadConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterReleaseChannelOutput{})
	pulumi.RegisterOutputType(ClusterReleaseChannelPtrOutput{})
	pulumi.RegisterOutputType(ClusterResourceUsageExportConfigOutput{})
	pulumi.RegisterOutputType(ClusterResourceUsageExportConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterResourceUsageExportConfigBigqueryDestinationOutput{})
	pulumi.RegisterOutputType(ClusterResourceUsageExportConfigBigqueryDestinationPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecurityPostureConfigOutput{})
	pulumi.RegisterOutputType(ClusterSecurityPostureConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterServiceExternalIpsConfigOutput{})
	pulumi.RegisterOutputType(ClusterServiceExternalIpsConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterTpuConfigOutput{})
	pulumi.RegisterOutputType(ClusterTpuConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterVerticalPodAutoscalingOutput{})
	pulumi.RegisterOutputType(ClusterVerticalPodAutoscalingPtrOutput{})
	pulumi.RegisterOutputType(ClusterWorkloadAltsConfigOutput{})
	pulumi.RegisterOutputType(ClusterWorkloadAltsConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterWorkloadIdentityConfigOutput{})
	pulumi.RegisterOutputType(ClusterWorkloadIdentityConfigPtrOutput{})
	pulumi.RegisterOutputType(NodePoolAutoscalingOutput{})
	pulumi.RegisterOutputType(NodePoolAutoscalingPtrOutput{})
	pulumi.RegisterOutputType(NodePoolManagementOutput{})
	pulumi.RegisterOutputType(NodePoolManagementPtrOutput{})
	pulumi.RegisterOutputType(NodePoolNetworkConfigOutput{})
	pulumi.RegisterOutputType(NodePoolNetworkConfigPtrOutput{})
	pulumi.RegisterOutputType(NodePoolNetworkConfigAdditionalNodeNetworkConfigOutput{})
	pulumi.RegisterOutputType(NodePoolNetworkConfigAdditionalNodeNetworkConfigArrayOutput{})
	pulumi.RegisterOutputType(NodePoolNetworkConfigAdditionalPodNetworkConfigOutput{})
	pulumi.RegisterOutputType(NodePoolNetworkConfigAdditionalPodNetworkConfigArrayOutput{})
	pulumi.RegisterOutputType(NodePoolNetworkConfigNetworkPerformanceConfigOutput{})
	pulumi.RegisterOutputType(NodePoolNetworkConfigNetworkPerformanceConfigPtrOutput{})
	pulumi.RegisterOutputType(NodePoolNetworkConfigPodCidrOverprovisionConfigOutput{})
	pulumi.RegisterOutputType(NodePoolNetworkConfigPodCidrOverprovisionConfigPtrOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigPtrOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigAdvancedMachineFeaturesOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigAdvancedMachineFeaturesPtrOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigConfidentialNodesOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigConfidentialNodesPtrOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigEffectiveTaintOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigEffectiveTaintArrayOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigEphemeralStorageConfigOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigEphemeralStorageConfigPtrOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigEphemeralStorageLocalSsdConfigOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigEphemeralStorageLocalSsdConfigPtrOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigFastSocketOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigFastSocketPtrOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigGcfsConfigOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigGcfsConfigPtrOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigGuestAcceleratorOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigGuestAcceleratorArrayOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigPtrOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigGuestAcceleratorGpuSharingConfigOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigGuestAcceleratorGpuSharingConfigPtrOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigGvnicOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigGvnicPtrOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigHostMaintenancePolicyOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigHostMaintenancePolicyPtrOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigKubeletConfigOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigKubeletConfigPtrOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigLinuxNodeConfigOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigLinuxNodeConfigPtrOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigLocalNvmeSsdBlockConfigOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigLocalNvmeSsdBlockConfigPtrOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigReservationAffinityOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigReservationAffinityPtrOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigSandboxConfigOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigSandboxConfigPtrOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigSecondaryBootDiskOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigSecondaryBootDiskArrayOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigShieldedInstanceConfigOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigShieldedInstanceConfigPtrOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigSoleTenantConfigOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigSoleTenantConfigPtrOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigSoleTenantConfigNodeAffinityOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigSoleTenantConfigNodeAffinityArrayOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigTaintOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigTaintArrayOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigWorkloadMetadataConfigOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigWorkloadMetadataConfigPtrOutput{})
	pulumi.RegisterOutputType(NodePoolPlacementPolicyOutput{})
	pulumi.RegisterOutputType(NodePoolPlacementPolicyPtrOutput{})
	pulumi.RegisterOutputType(NodePoolQueuedProvisioningOutput{})
	pulumi.RegisterOutputType(NodePoolQueuedProvisioningPtrOutput{})
	pulumi.RegisterOutputType(NodePoolUpgradeSettingsOutput{})
	pulumi.RegisterOutputType(NodePoolUpgradeSettingsPtrOutput{})
	pulumi.RegisterOutputType(NodePoolUpgradeSettingsBlueGreenSettingsOutput{})
	pulumi.RegisterOutputType(NodePoolUpgradeSettingsBlueGreenSettingsPtrOutput{})
	pulumi.RegisterOutputType(NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyOutput{})
	pulumi.RegisterOutputType(NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyPtrOutput{})
	pulumi.RegisterOutputType(GetClusterAddonsConfigOutput{})
	pulumi.RegisterOutputType(GetClusterAddonsConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterAddonsConfigCloudrunConfigOutput{})
	pulumi.RegisterOutputType(GetClusterAddonsConfigCloudrunConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterAddonsConfigConfigConnectorConfigOutput{})
	pulumi.RegisterOutputType(GetClusterAddonsConfigConfigConnectorConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterAddonsConfigDnsCacheConfigOutput{})
	pulumi.RegisterOutputType(GetClusterAddonsConfigDnsCacheConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterAddonsConfigGcePersistentDiskCsiDriverConfigOutput{})
	pulumi.RegisterOutputType(GetClusterAddonsConfigGcePersistentDiskCsiDriverConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterAddonsConfigGcpFilestoreCsiDriverConfigOutput{})
	pulumi.RegisterOutputType(GetClusterAddonsConfigGcpFilestoreCsiDriverConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterAddonsConfigGcsFuseCsiDriverConfigOutput{})
	pulumi.RegisterOutputType(GetClusterAddonsConfigGcsFuseCsiDriverConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterAddonsConfigGkeBackupAgentConfigOutput{})
	pulumi.RegisterOutputType(GetClusterAddonsConfigGkeBackupAgentConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterAddonsConfigHorizontalPodAutoscalingOutput{})
	pulumi.RegisterOutputType(GetClusterAddonsConfigHorizontalPodAutoscalingArrayOutput{})
	pulumi.RegisterOutputType(GetClusterAddonsConfigHttpLoadBalancingOutput{})
	pulumi.RegisterOutputType(GetClusterAddonsConfigHttpLoadBalancingArrayOutput{})
	pulumi.RegisterOutputType(GetClusterAddonsConfigIstioConfigOutput{})
	pulumi.RegisterOutputType(GetClusterAddonsConfigIstioConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterAddonsConfigKalmConfigOutput{})
	pulumi.RegisterOutputType(GetClusterAddonsConfigKalmConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterAddonsConfigNetworkPolicyConfigOutput{})
	pulumi.RegisterOutputType(GetClusterAddonsConfigNetworkPolicyConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterAddonsConfigStatefulHaConfigOutput{})
	pulumi.RegisterOutputType(GetClusterAddonsConfigStatefulHaConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterAuthenticatorGroupsConfigOutput{})
	pulumi.RegisterOutputType(GetClusterAuthenticatorGroupsConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterBinaryAuthorizationOutput{})
	pulumi.RegisterOutputType(GetClusterBinaryAuthorizationArrayOutput{})
	pulumi.RegisterOutputType(GetClusterClusterAutoscalingOutput{})
	pulumi.RegisterOutputType(GetClusterClusterAutoscalingArrayOutput{})
	pulumi.RegisterOutputType(GetClusterClusterAutoscalingAutoProvisioningDefaultOutput{})
	pulumi.RegisterOutputType(GetClusterClusterAutoscalingAutoProvisioningDefaultArrayOutput{})
	pulumi.RegisterOutputType(GetClusterClusterAutoscalingAutoProvisioningDefaultManagementOutput{})
	pulumi.RegisterOutputType(GetClusterClusterAutoscalingAutoProvisioningDefaultManagementArrayOutput{})
	pulumi.RegisterOutputType(GetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOptionOutput{})
	pulumi.RegisterOutputType(GetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOptionArrayOutput{})
	pulumi.RegisterOutputType(GetClusterClusterAutoscalingAutoProvisioningDefaultShieldedInstanceConfigOutput{})
	pulumi.RegisterOutputType(GetClusterClusterAutoscalingAutoProvisioningDefaultShieldedInstanceConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingOutput{})
	pulumi.RegisterOutputType(GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingArrayOutput{})
	pulumi.RegisterOutputType(GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingOutput{})
	pulumi.RegisterOutputType(GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingArrayOutput{})
	pulumi.RegisterOutputType(GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingStandardRolloutPolicyOutput{})
	pulumi.RegisterOutputType(GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSettingStandardRolloutPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetClusterClusterAutoscalingResourceLimitOutput{})
	pulumi.RegisterOutputType(GetClusterClusterAutoscalingResourceLimitArrayOutput{})
	pulumi.RegisterOutputType(GetClusterClusterTelemetryOutput{})
	pulumi.RegisterOutputType(GetClusterClusterTelemetryArrayOutput{})
	pulumi.RegisterOutputType(GetClusterConfidentialNodeOutput{})
	pulumi.RegisterOutputType(GetClusterConfidentialNodeArrayOutput{})
	pulumi.RegisterOutputType(GetClusterCostManagementConfigOutput{})
	pulumi.RegisterOutputType(GetClusterCostManagementConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterDatabaseEncryptionOutput{})
	pulumi.RegisterOutputType(GetClusterDatabaseEncryptionArrayOutput{})
	pulumi.RegisterOutputType(GetClusterDefaultSnatStatusOutput{})
	pulumi.RegisterOutputType(GetClusterDefaultSnatStatusArrayOutput{})
	pulumi.RegisterOutputType(GetClusterDnsConfigOutput{})
	pulumi.RegisterOutputType(GetClusterDnsConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterEnableK8sBetaApiOutput{})
	pulumi.RegisterOutputType(GetClusterEnableK8sBetaApiArrayOutput{})
	pulumi.RegisterOutputType(GetClusterFleetOutput{})
	pulumi.RegisterOutputType(GetClusterFleetArrayOutput{})
	pulumi.RegisterOutputType(GetClusterGatewayApiConfigOutput{})
	pulumi.RegisterOutputType(GetClusterGatewayApiConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterIdentityServiceConfigOutput{})
	pulumi.RegisterOutputType(GetClusterIdentityServiceConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterIpAllocationPolicyOutput{})
	pulumi.RegisterOutputType(GetClusterIpAllocationPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetClusterIpAllocationPolicyAdditionalPodRangesConfigOutput{})
	pulumi.RegisterOutputType(GetClusterIpAllocationPolicyAdditionalPodRangesConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterIpAllocationPolicyPodCidrOverprovisionConfigOutput{})
	pulumi.RegisterOutputType(GetClusterIpAllocationPolicyPodCidrOverprovisionConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterLoggingConfigOutput{})
	pulumi.RegisterOutputType(GetClusterLoggingConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterMaintenancePolicyOutput{})
	pulumi.RegisterOutputType(GetClusterMaintenancePolicyArrayOutput{})
	pulumi.RegisterOutputType(GetClusterMaintenancePolicyDailyMaintenanceWindowOutput{})
	pulumi.RegisterOutputType(GetClusterMaintenancePolicyDailyMaintenanceWindowArrayOutput{})
	pulumi.RegisterOutputType(GetClusterMaintenancePolicyMaintenanceExclusionOutput{})
	pulumi.RegisterOutputType(GetClusterMaintenancePolicyMaintenanceExclusionArrayOutput{})
	pulumi.RegisterOutputType(GetClusterMaintenancePolicyMaintenanceExclusionExclusionOptionOutput{})
	pulumi.RegisterOutputType(GetClusterMaintenancePolicyMaintenanceExclusionExclusionOptionArrayOutput{})
	pulumi.RegisterOutputType(GetClusterMaintenancePolicyRecurringWindowOutput{})
	pulumi.RegisterOutputType(GetClusterMaintenancePolicyRecurringWindowArrayOutput{})
	pulumi.RegisterOutputType(GetClusterMasterAuthOutput{})
	pulumi.RegisterOutputType(GetClusterMasterAuthArrayOutput{})
	pulumi.RegisterOutputType(GetClusterMasterAuthClientCertificateConfigOutput{})
	pulumi.RegisterOutputType(GetClusterMasterAuthClientCertificateConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterMasterAuthorizedNetworksConfigOutput{})
	pulumi.RegisterOutputType(GetClusterMasterAuthorizedNetworksConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterMasterAuthorizedNetworksConfigCidrBlockOutput{})
	pulumi.RegisterOutputType(GetClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput{})
	pulumi.RegisterOutputType(GetClusterMeshCertificateOutput{})
	pulumi.RegisterOutputType(GetClusterMeshCertificateArrayOutput{})
	pulumi.RegisterOutputType(GetClusterMonitoringConfigOutput{})
	pulumi.RegisterOutputType(GetClusterMonitoringConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterMonitoringConfigAdvancedDatapathObservabilityConfigOutput{})
	pulumi.RegisterOutputType(GetClusterMonitoringConfigAdvancedDatapathObservabilityConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterMonitoringConfigManagedPrometheusOutput{})
	pulumi.RegisterOutputType(GetClusterMonitoringConfigManagedPrometheusArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNetworkPolicyOutput{})
	pulumi.RegisterOutputType(GetClusterNetworkPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodeConfigOutput{})
	pulumi.RegisterOutputType(GetClusterNodeConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodeConfigAdvancedMachineFeatureOutput{})
	pulumi.RegisterOutputType(GetClusterNodeConfigAdvancedMachineFeatureArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodeConfigConfidentialNodeOutput{})
	pulumi.RegisterOutputType(GetClusterNodeConfigConfidentialNodeArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodeConfigEffectiveTaintOutput{})
	pulumi.RegisterOutputType(GetClusterNodeConfigEffectiveTaintArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodeConfigEphemeralStorageConfigOutput{})
	pulumi.RegisterOutputType(GetClusterNodeConfigEphemeralStorageConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodeConfigEphemeralStorageLocalSsdConfigOutput{})
	pulumi.RegisterOutputType(GetClusterNodeConfigEphemeralStorageLocalSsdConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodeConfigFastSocketOutput{})
	pulumi.RegisterOutputType(GetClusterNodeConfigFastSocketArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodeConfigGcfsConfigOutput{})
	pulumi.RegisterOutputType(GetClusterNodeConfigGcfsConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodeConfigGuestAcceleratorOutput{})
	pulumi.RegisterOutputType(GetClusterNodeConfigGuestAcceleratorArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput{})
	pulumi.RegisterOutputType(GetClusterNodeConfigGuestAcceleratorGpuDriverInstallationConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodeConfigGuestAcceleratorGpuSharingConfigOutput{})
	pulumi.RegisterOutputType(GetClusterNodeConfigGuestAcceleratorGpuSharingConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodeConfigGvnicOutput{})
	pulumi.RegisterOutputType(GetClusterNodeConfigGvnicArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodeConfigHostMaintenancePolicyOutput{})
	pulumi.RegisterOutputType(GetClusterNodeConfigHostMaintenancePolicyArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodeConfigKubeletConfigOutput{})
	pulumi.RegisterOutputType(GetClusterNodeConfigKubeletConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodeConfigLinuxNodeConfigOutput{})
	pulumi.RegisterOutputType(GetClusterNodeConfigLinuxNodeConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodeConfigLocalNvmeSsdBlockConfigOutput{})
	pulumi.RegisterOutputType(GetClusterNodeConfigLocalNvmeSsdBlockConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodeConfigReservationAffinityOutput{})
	pulumi.RegisterOutputType(GetClusterNodeConfigReservationAffinityArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodeConfigSandboxConfigOutput{})
	pulumi.RegisterOutputType(GetClusterNodeConfigSandboxConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodeConfigSecondaryBootDiskOutput{})
	pulumi.RegisterOutputType(GetClusterNodeConfigSecondaryBootDiskArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodeConfigShieldedInstanceConfigOutput{})
	pulumi.RegisterOutputType(GetClusterNodeConfigShieldedInstanceConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodeConfigSoleTenantConfigOutput{})
	pulumi.RegisterOutputType(GetClusterNodeConfigSoleTenantConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodeConfigSoleTenantConfigNodeAffinityOutput{})
	pulumi.RegisterOutputType(GetClusterNodeConfigSoleTenantConfigNodeAffinityArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodeConfigTaintOutput{})
	pulumi.RegisterOutputType(GetClusterNodeConfigTaintArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodeConfigWorkloadMetadataConfigOutput{})
	pulumi.RegisterOutputType(GetClusterNodeConfigWorkloadMetadataConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolAutoConfigOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolAutoConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolAutoConfigNetworkTagOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolAutoConfigNetworkTagArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolAutoscalingOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolAutoscalingArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolDefaultOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolDefaultArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolDefaultNodeConfigDefaultOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolDefaultNodeConfigDefaultArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolDefaultNodeConfigDefaultGcfsConfigOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolDefaultNodeConfigDefaultGcfsConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolManagementOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolManagementArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNetworkConfigOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNetworkConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNetworkConfigAdditionalPodNetworkConfigOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNetworkConfigNetworkPerformanceConfigOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNetworkConfigNetworkPerformanceConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNetworkConfigPodCidrOverprovisionConfigOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNetworkConfigPodCidrOverprovisionConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNodeConfigOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNodeConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNodeConfigAdvancedMachineFeatureOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNodeConfigAdvancedMachineFeatureArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNodeConfigConfidentialNodeOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNodeConfigConfidentialNodeArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNodeConfigEffectiveTaintOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNodeConfigEffectiveTaintArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNodeConfigEphemeralStorageConfigOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNodeConfigEphemeralStorageConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNodeConfigFastSocketOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNodeConfigFastSocketArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNodeConfigGcfsConfigOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNodeConfigGcfsConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNodeConfigGuestAcceleratorOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNodeConfigGuestAcceleratorArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNodeConfigGuestAcceleratorGpuSharingConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNodeConfigGvnicOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNodeConfigGvnicArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNodeConfigHostMaintenancePolicyOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNodeConfigHostMaintenancePolicyArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNodeConfigKubeletConfigOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNodeConfigKubeletConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNodeConfigLinuxNodeConfigOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNodeConfigLinuxNodeConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNodeConfigLocalNvmeSsdBlockConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNodeConfigReservationAffinityOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNodeConfigReservationAffinityArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNodeConfigSandboxConfigOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNodeConfigSandboxConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNodeConfigSecondaryBootDiskOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNodeConfigSecondaryBootDiskArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNodeConfigShieldedInstanceConfigOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNodeConfigShieldedInstanceConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNodeConfigSoleTenantConfigOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNodeConfigSoleTenantConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNodeConfigSoleTenantConfigNodeAffinityArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNodeConfigTaintOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNodeConfigTaintArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNodeConfigWorkloadMetadataConfigOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNodeConfigWorkloadMetadataConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolPlacementPolicyOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolPlacementPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolQueuedProvisioningOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolQueuedProvisioningArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolUpgradeSettingOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolUpgradeSettingArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolUpgradeSettingBlueGreenSettingOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolUpgradeSettingBlueGreenSettingArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolUpgradeSettingBlueGreenSettingStandardRolloutPolicyOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolUpgradeSettingBlueGreenSettingStandardRolloutPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNotificationConfigOutput{})
	pulumi.RegisterOutputType(GetClusterNotificationConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNotificationConfigPubsubOutput{})
	pulumi.RegisterOutputType(GetClusterNotificationConfigPubsubArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNotificationConfigPubsubFilterOutput{})
	pulumi.RegisterOutputType(GetClusterNotificationConfigPubsubFilterArrayOutput{})
	pulumi.RegisterOutputType(GetClusterPodSecurityPolicyConfigOutput{})
	pulumi.RegisterOutputType(GetClusterPodSecurityPolicyConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterPrivateClusterConfigOutput{})
	pulumi.RegisterOutputType(GetClusterPrivateClusterConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterPrivateClusterConfigMasterGlobalAccessConfigOutput{})
	pulumi.RegisterOutputType(GetClusterPrivateClusterConfigMasterGlobalAccessConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterProtectConfigOutput{})
	pulumi.RegisterOutputType(GetClusterProtectConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterProtectConfigWorkloadConfigOutput{})
	pulumi.RegisterOutputType(GetClusterProtectConfigWorkloadConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterReleaseChannelOutput{})
	pulumi.RegisterOutputType(GetClusterReleaseChannelArrayOutput{})
	pulumi.RegisterOutputType(GetClusterResourceUsageExportConfigOutput{})
	pulumi.RegisterOutputType(GetClusterResourceUsageExportConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterResourceUsageExportConfigBigqueryDestinationOutput{})
	pulumi.RegisterOutputType(GetClusterResourceUsageExportConfigBigqueryDestinationArrayOutput{})
	pulumi.RegisterOutputType(GetClusterSecurityPostureConfigOutput{})
	pulumi.RegisterOutputType(GetClusterSecurityPostureConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterServiceExternalIpsConfigOutput{})
	pulumi.RegisterOutputType(GetClusterServiceExternalIpsConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterTpuConfigOutput{})
	pulumi.RegisterOutputType(GetClusterTpuConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterVerticalPodAutoscalingOutput{})
	pulumi.RegisterOutputType(GetClusterVerticalPodAutoscalingArrayOutput{})
	pulumi.RegisterOutputType(GetClusterWorkloadAltsConfigOutput{})
	pulumi.RegisterOutputType(GetClusterWorkloadAltsConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterWorkloadIdentityConfigOutput{})
	pulumi.RegisterOutputType(GetClusterWorkloadIdentityConfigArrayOutput{})
}
