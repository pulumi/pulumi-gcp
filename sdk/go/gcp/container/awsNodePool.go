// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package container

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// An Anthos node pool running on AWS.
//
// For more information, see:
// * [Multicloud overview](https://cloud.google.com/anthos/clusters/docs/multi-cloud)
// ## Example Usage
//
// ## Import
//
// # NodePool can be imported using any of these accepted formats
//
// ```sh
//
//	$ pulumi import gcp:container/awsNodePool:AwsNodePool default projects/{{project}}/locations/{{location}}/awsClusters/{{cluster}}/awsNodePools/{{name}}
//
// ```
//
// ```sh
//
//	$ pulumi import gcp:container/awsNodePool:AwsNodePool default {{project}}/{{location}}/{{cluster}}/{{name}}
//
// ```
//
// ```sh
//
//	$ pulumi import gcp:container/awsNodePool:AwsNodePool default {{location}}/{{cluster}}/{{name}}
//
// ```
type AwsNodePool struct {
	pulumi.CustomResourceState

	// Optional. Annotations on the node pool. This field has the same restrictions as Kubernetes annotations. The total size of all keys and values combined is limited to 256k. Key can have 2 segments: prefix (optional) and name (required), separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between.
	Annotations pulumi.StringMapOutput `pulumi:"annotations"`
	// Autoscaler configuration for this node pool.
	Autoscaling AwsNodePoolAutoscalingOutput `pulumi:"autoscaling"`
	// The awsCluster for the resource
	Cluster pulumi.StringOutput `pulumi:"cluster"`
	// The configuration of the node pool.
	Config AwsNodePoolConfigOutput `pulumi:"config"`
	// Output only. The time at which this node pool was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Allows clients to perform consistent read-modify-writes through optimistic concurrency control. May be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// The location for the resource
	Location pulumi.StringOutput `pulumi:"location"`
	// The Management configuration for this node pool.
	Management AwsNodePoolManagementOutput `pulumi:"management"`
	// The constraint on the maximum number of pods that can be run simultaneously on a node in the node pool.
	MaxPodsConstraint AwsNodePoolMaxPodsConstraintOutput `pulumi:"maxPodsConstraint"`
	// The name of this resource.
	Name pulumi.StringOutput `pulumi:"name"`
	// The project for the resource
	Project pulumi.StringOutput `pulumi:"project"`
	// Output only. If set, there are currently changes in flight to the node pool.
	Reconciling pulumi.BoolOutput `pulumi:"reconciling"`
	// Output only. The lifecycle state of the node pool. Possible values: STATE_UNSPECIFIED, PROVISIONING, RUNNING, RECONCILING, STOPPING, ERROR, DEGRADED
	State pulumi.StringOutput `pulumi:"state"`
	// The subnet where the node pool node run.
	SubnetId pulumi.StringOutput `pulumi:"subnetId"`
	// Output only. A globally unique identifier for the node pool.
	Uid pulumi.StringOutput `pulumi:"uid"`
	// Output only. The time at which this node pool was last updated.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
	// The Kubernetes version to run on this node pool (e.g. `1.19.10-gke.1000`). You can list all supported versions on a given Google Cloud region by calling GetAwsServerConfig.
	Version pulumi.StringOutput `pulumi:"version"`
}

// NewAwsNodePool registers a new resource with the given unique name, arguments, and options.
func NewAwsNodePool(ctx *pulumi.Context,
	name string, args *AwsNodePoolArgs, opts ...pulumi.ResourceOption) (*AwsNodePool, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Autoscaling == nil {
		return nil, errors.New("invalid value for required argument 'Autoscaling'")
	}
	if args.Cluster == nil {
		return nil, errors.New("invalid value for required argument 'Cluster'")
	}
	if args.Config == nil {
		return nil, errors.New("invalid value for required argument 'Config'")
	}
	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	if args.MaxPodsConstraint == nil {
		return nil, errors.New("invalid value for required argument 'MaxPodsConstraint'")
	}
	if args.SubnetId == nil {
		return nil, errors.New("invalid value for required argument 'SubnetId'")
	}
	if args.Version == nil {
		return nil, errors.New("invalid value for required argument 'Version'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AwsNodePool
	err := ctx.RegisterResource("gcp:container/awsNodePool:AwsNodePool", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAwsNodePool gets an existing AwsNodePool resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAwsNodePool(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AwsNodePoolState, opts ...pulumi.ResourceOption) (*AwsNodePool, error) {
	var resource AwsNodePool
	err := ctx.ReadResource("gcp:container/awsNodePool:AwsNodePool", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AwsNodePool resources.
type awsNodePoolState struct {
	// Optional. Annotations on the node pool. This field has the same restrictions as Kubernetes annotations. The total size of all keys and values combined is limited to 256k. Key can have 2 segments: prefix (optional) and name (required), separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between.
	Annotations map[string]string `pulumi:"annotations"`
	// Autoscaler configuration for this node pool.
	Autoscaling *AwsNodePoolAutoscaling `pulumi:"autoscaling"`
	// The awsCluster for the resource
	Cluster *string `pulumi:"cluster"`
	// The configuration of the node pool.
	Config *AwsNodePoolConfig `pulumi:"config"`
	// Output only. The time at which this node pool was created.
	CreateTime *string `pulumi:"createTime"`
	// Allows clients to perform consistent read-modify-writes through optimistic concurrency control. May be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
	Etag *string `pulumi:"etag"`
	// The location for the resource
	Location *string `pulumi:"location"`
	// The Management configuration for this node pool.
	Management *AwsNodePoolManagement `pulumi:"management"`
	// The constraint on the maximum number of pods that can be run simultaneously on a node in the node pool.
	MaxPodsConstraint *AwsNodePoolMaxPodsConstraint `pulumi:"maxPodsConstraint"`
	// The name of this resource.
	Name *string `pulumi:"name"`
	// The project for the resource
	Project *string `pulumi:"project"`
	// Output only. If set, there are currently changes in flight to the node pool.
	Reconciling *bool `pulumi:"reconciling"`
	// Output only. The lifecycle state of the node pool. Possible values: STATE_UNSPECIFIED, PROVISIONING, RUNNING, RECONCILING, STOPPING, ERROR, DEGRADED
	State *string `pulumi:"state"`
	// The subnet where the node pool node run.
	SubnetId *string `pulumi:"subnetId"`
	// Output only. A globally unique identifier for the node pool.
	Uid *string `pulumi:"uid"`
	// Output only. The time at which this node pool was last updated.
	UpdateTime *string `pulumi:"updateTime"`
	// The Kubernetes version to run on this node pool (e.g. `1.19.10-gke.1000`). You can list all supported versions on a given Google Cloud region by calling GetAwsServerConfig.
	Version *string `pulumi:"version"`
}

type AwsNodePoolState struct {
	// Optional. Annotations on the node pool. This field has the same restrictions as Kubernetes annotations. The total size of all keys and values combined is limited to 256k. Key can have 2 segments: prefix (optional) and name (required), separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between.
	Annotations pulumi.StringMapInput
	// Autoscaler configuration for this node pool.
	Autoscaling AwsNodePoolAutoscalingPtrInput
	// The awsCluster for the resource
	Cluster pulumi.StringPtrInput
	// The configuration of the node pool.
	Config AwsNodePoolConfigPtrInput
	// Output only. The time at which this node pool was created.
	CreateTime pulumi.StringPtrInput
	// Allows clients to perform consistent read-modify-writes through optimistic concurrency control. May be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
	Etag pulumi.StringPtrInput
	// The location for the resource
	Location pulumi.StringPtrInput
	// The Management configuration for this node pool.
	Management AwsNodePoolManagementPtrInput
	// The constraint on the maximum number of pods that can be run simultaneously on a node in the node pool.
	MaxPodsConstraint AwsNodePoolMaxPodsConstraintPtrInput
	// The name of this resource.
	Name pulumi.StringPtrInput
	// The project for the resource
	Project pulumi.StringPtrInput
	// Output only. If set, there are currently changes in flight to the node pool.
	Reconciling pulumi.BoolPtrInput
	// Output only. The lifecycle state of the node pool. Possible values: STATE_UNSPECIFIED, PROVISIONING, RUNNING, RECONCILING, STOPPING, ERROR, DEGRADED
	State pulumi.StringPtrInput
	// The subnet where the node pool node run.
	SubnetId pulumi.StringPtrInput
	// Output only. A globally unique identifier for the node pool.
	Uid pulumi.StringPtrInput
	// Output only. The time at which this node pool was last updated.
	UpdateTime pulumi.StringPtrInput
	// The Kubernetes version to run on this node pool (e.g. `1.19.10-gke.1000`). You can list all supported versions on a given Google Cloud region by calling GetAwsServerConfig.
	Version pulumi.StringPtrInput
}

func (AwsNodePoolState) ElementType() reflect.Type {
	return reflect.TypeOf((*awsNodePoolState)(nil)).Elem()
}

type awsNodePoolArgs struct {
	// Optional. Annotations on the node pool. This field has the same restrictions as Kubernetes annotations. The total size of all keys and values combined is limited to 256k. Key can have 2 segments: prefix (optional) and name (required), separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between.
	Annotations map[string]string `pulumi:"annotations"`
	// Autoscaler configuration for this node pool.
	Autoscaling AwsNodePoolAutoscaling `pulumi:"autoscaling"`
	// The awsCluster for the resource
	Cluster string `pulumi:"cluster"`
	// The configuration of the node pool.
	Config AwsNodePoolConfig `pulumi:"config"`
	// The location for the resource
	Location string `pulumi:"location"`
	// The Management configuration for this node pool.
	Management *AwsNodePoolManagement `pulumi:"management"`
	// The constraint on the maximum number of pods that can be run simultaneously on a node in the node pool.
	MaxPodsConstraint AwsNodePoolMaxPodsConstraint `pulumi:"maxPodsConstraint"`
	// The name of this resource.
	Name *string `pulumi:"name"`
	// The project for the resource
	Project *string `pulumi:"project"`
	// The subnet where the node pool node run.
	SubnetId string `pulumi:"subnetId"`
	// The Kubernetes version to run on this node pool (e.g. `1.19.10-gke.1000`). You can list all supported versions on a given Google Cloud region by calling GetAwsServerConfig.
	Version string `pulumi:"version"`
}

// The set of arguments for constructing a AwsNodePool resource.
type AwsNodePoolArgs struct {
	// Optional. Annotations on the node pool. This field has the same restrictions as Kubernetes annotations. The total size of all keys and values combined is limited to 256k. Key can have 2 segments: prefix (optional) and name (required), separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between.
	Annotations pulumi.StringMapInput
	// Autoscaler configuration for this node pool.
	Autoscaling AwsNodePoolAutoscalingInput
	// The awsCluster for the resource
	Cluster pulumi.StringInput
	// The configuration of the node pool.
	Config AwsNodePoolConfigInput
	// The location for the resource
	Location pulumi.StringInput
	// The Management configuration for this node pool.
	Management AwsNodePoolManagementPtrInput
	// The constraint on the maximum number of pods that can be run simultaneously on a node in the node pool.
	MaxPodsConstraint AwsNodePoolMaxPodsConstraintInput
	// The name of this resource.
	Name pulumi.StringPtrInput
	// The project for the resource
	Project pulumi.StringPtrInput
	// The subnet where the node pool node run.
	SubnetId pulumi.StringInput
	// The Kubernetes version to run on this node pool (e.g. `1.19.10-gke.1000`). You can list all supported versions on a given Google Cloud region by calling GetAwsServerConfig.
	Version pulumi.StringInput
}

func (AwsNodePoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*awsNodePoolArgs)(nil)).Elem()
}

type AwsNodePoolInput interface {
	pulumi.Input

	ToAwsNodePoolOutput() AwsNodePoolOutput
	ToAwsNodePoolOutputWithContext(ctx context.Context) AwsNodePoolOutput
}

func (*AwsNodePool) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsNodePool)(nil)).Elem()
}

func (i *AwsNodePool) ToAwsNodePoolOutput() AwsNodePoolOutput {
	return i.ToAwsNodePoolOutputWithContext(context.Background())
}

func (i *AwsNodePool) ToAwsNodePoolOutputWithContext(ctx context.Context) AwsNodePoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsNodePoolOutput)
}

func (i *AwsNodePool) ToOutput(ctx context.Context) pulumix.Output[*AwsNodePool] {
	return pulumix.Output[*AwsNodePool]{
		OutputState: i.ToAwsNodePoolOutputWithContext(ctx).OutputState,
	}
}

// AwsNodePoolArrayInput is an input type that accepts AwsNodePoolArray and AwsNodePoolArrayOutput values.
// You can construct a concrete instance of `AwsNodePoolArrayInput` via:
//
//	AwsNodePoolArray{ AwsNodePoolArgs{...} }
type AwsNodePoolArrayInput interface {
	pulumi.Input

	ToAwsNodePoolArrayOutput() AwsNodePoolArrayOutput
	ToAwsNodePoolArrayOutputWithContext(context.Context) AwsNodePoolArrayOutput
}

type AwsNodePoolArray []AwsNodePoolInput

func (AwsNodePoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AwsNodePool)(nil)).Elem()
}

func (i AwsNodePoolArray) ToAwsNodePoolArrayOutput() AwsNodePoolArrayOutput {
	return i.ToAwsNodePoolArrayOutputWithContext(context.Background())
}

func (i AwsNodePoolArray) ToAwsNodePoolArrayOutputWithContext(ctx context.Context) AwsNodePoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsNodePoolArrayOutput)
}

func (i AwsNodePoolArray) ToOutput(ctx context.Context) pulumix.Output[[]*AwsNodePool] {
	return pulumix.Output[[]*AwsNodePool]{
		OutputState: i.ToAwsNodePoolArrayOutputWithContext(ctx).OutputState,
	}
}

// AwsNodePoolMapInput is an input type that accepts AwsNodePoolMap and AwsNodePoolMapOutput values.
// You can construct a concrete instance of `AwsNodePoolMapInput` via:
//
//	AwsNodePoolMap{ "key": AwsNodePoolArgs{...} }
type AwsNodePoolMapInput interface {
	pulumi.Input

	ToAwsNodePoolMapOutput() AwsNodePoolMapOutput
	ToAwsNodePoolMapOutputWithContext(context.Context) AwsNodePoolMapOutput
}

type AwsNodePoolMap map[string]AwsNodePoolInput

func (AwsNodePoolMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AwsNodePool)(nil)).Elem()
}

func (i AwsNodePoolMap) ToAwsNodePoolMapOutput() AwsNodePoolMapOutput {
	return i.ToAwsNodePoolMapOutputWithContext(context.Background())
}

func (i AwsNodePoolMap) ToAwsNodePoolMapOutputWithContext(ctx context.Context) AwsNodePoolMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsNodePoolMapOutput)
}

func (i AwsNodePoolMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*AwsNodePool] {
	return pulumix.Output[map[string]*AwsNodePool]{
		OutputState: i.ToAwsNodePoolMapOutputWithContext(ctx).OutputState,
	}
}

type AwsNodePoolOutput struct{ *pulumi.OutputState }

func (AwsNodePoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsNodePool)(nil)).Elem()
}

func (o AwsNodePoolOutput) ToAwsNodePoolOutput() AwsNodePoolOutput {
	return o
}

func (o AwsNodePoolOutput) ToAwsNodePoolOutputWithContext(ctx context.Context) AwsNodePoolOutput {
	return o
}

func (o AwsNodePoolOutput) ToOutput(ctx context.Context) pulumix.Output[*AwsNodePool] {
	return pulumix.Output[*AwsNodePool]{
		OutputState: o.OutputState,
	}
}

// Optional. Annotations on the node pool. This field has the same restrictions as Kubernetes annotations. The total size of all keys and values combined is limited to 256k. Key can have 2 segments: prefix (optional) and name (required), separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between.
func (o AwsNodePoolOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AwsNodePool) pulumi.StringMapOutput { return v.Annotations }).(pulumi.StringMapOutput)
}

// Autoscaler configuration for this node pool.
func (o AwsNodePoolOutput) Autoscaling() AwsNodePoolAutoscalingOutput {
	return o.ApplyT(func(v *AwsNodePool) AwsNodePoolAutoscalingOutput { return v.Autoscaling }).(AwsNodePoolAutoscalingOutput)
}

// The awsCluster for the resource
func (o AwsNodePoolOutput) Cluster() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsNodePool) pulumi.StringOutput { return v.Cluster }).(pulumi.StringOutput)
}

// The configuration of the node pool.
func (o AwsNodePoolOutput) Config() AwsNodePoolConfigOutput {
	return o.ApplyT(func(v *AwsNodePool) AwsNodePoolConfigOutput { return v.Config }).(AwsNodePoolConfigOutput)
}

// Output only. The time at which this node pool was created.
func (o AwsNodePoolOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsNodePool) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Allows clients to perform consistent read-modify-writes through optimistic concurrency control. May be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
func (o AwsNodePoolOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsNodePool) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// The location for the resource
func (o AwsNodePoolOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsNodePool) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The Management configuration for this node pool.
func (o AwsNodePoolOutput) Management() AwsNodePoolManagementOutput {
	return o.ApplyT(func(v *AwsNodePool) AwsNodePoolManagementOutput { return v.Management }).(AwsNodePoolManagementOutput)
}

// The constraint on the maximum number of pods that can be run simultaneously on a node in the node pool.
func (o AwsNodePoolOutput) MaxPodsConstraint() AwsNodePoolMaxPodsConstraintOutput {
	return o.ApplyT(func(v *AwsNodePool) AwsNodePoolMaxPodsConstraintOutput { return v.MaxPodsConstraint }).(AwsNodePoolMaxPodsConstraintOutput)
}

// The name of this resource.
func (o AwsNodePoolOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsNodePool) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The project for the resource
func (o AwsNodePoolOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsNodePool) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Output only. If set, there are currently changes in flight to the node pool.
func (o AwsNodePoolOutput) Reconciling() pulumi.BoolOutput {
	return o.ApplyT(func(v *AwsNodePool) pulumi.BoolOutput { return v.Reconciling }).(pulumi.BoolOutput)
}

// Output only. The lifecycle state of the node pool. Possible values: STATE_UNSPECIFIED, PROVISIONING, RUNNING, RECONCILING, STOPPING, ERROR, DEGRADED
func (o AwsNodePoolOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsNodePool) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// The subnet where the node pool node run.
func (o AwsNodePoolOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsNodePool) pulumi.StringOutput { return v.SubnetId }).(pulumi.StringOutput)
}

// Output only. A globally unique identifier for the node pool.
func (o AwsNodePoolOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsNodePool) pulumi.StringOutput { return v.Uid }).(pulumi.StringOutput)
}

// Output only. The time at which this node pool was last updated.
func (o AwsNodePoolOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsNodePool) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

// The Kubernetes version to run on this node pool (e.g. `1.19.10-gke.1000`). You can list all supported versions on a given Google Cloud region by calling GetAwsServerConfig.
func (o AwsNodePoolOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsNodePool) pulumi.StringOutput { return v.Version }).(pulumi.StringOutput)
}

type AwsNodePoolArrayOutput struct{ *pulumi.OutputState }

func (AwsNodePoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AwsNodePool)(nil)).Elem()
}

func (o AwsNodePoolArrayOutput) ToAwsNodePoolArrayOutput() AwsNodePoolArrayOutput {
	return o
}

func (o AwsNodePoolArrayOutput) ToAwsNodePoolArrayOutputWithContext(ctx context.Context) AwsNodePoolArrayOutput {
	return o
}

func (o AwsNodePoolArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*AwsNodePool] {
	return pulumix.Output[[]*AwsNodePool]{
		OutputState: o.OutputState,
	}
}

func (o AwsNodePoolArrayOutput) Index(i pulumi.IntInput) AwsNodePoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AwsNodePool {
		return vs[0].([]*AwsNodePool)[vs[1].(int)]
	}).(AwsNodePoolOutput)
}

type AwsNodePoolMapOutput struct{ *pulumi.OutputState }

func (AwsNodePoolMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AwsNodePool)(nil)).Elem()
}

func (o AwsNodePoolMapOutput) ToAwsNodePoolMapOutput() AwsNodePoolMapOutput {
	return o
}

func (o AwsNodePoolMapOutput) ToAwsNodePoolMapOutputWithContext(ctx context.Context) AwsNodePoolMapOutput {
	return o
}

func (o AwsNodePoolMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*AwsNodePool] {
	return pulumix.Output[map[string]*AwsNodePool]{
		OutputState: o.OutputState,
	}
}

func (o AwsNodePoolMapOutput) MapIndex(k pulumi.StringInput) AwsNodePoolOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AwsNodePool {
		return vs[0].(map[string]*AwsNodePool)[vs[1].(string)]
	}).(AwsNodePoolOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AwsNodePoolInput)(nil)).Elem(), &AwsNodePool{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsNodePoolArrayInput)(nil)).Elem(), AwsNodePoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsNodePoolMapInput)(nil)).Elem(), AwsNodePoolMap{})
	pulumi.RegisterOutputType(AwsNodePoolOutput{})
	pulumi.RegisterOutputType(AwsNodePoolArrayOutput{})
	pulumi.RegisterOutputType(AwsNodePoolMapOutput{})
}
