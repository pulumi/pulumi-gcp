// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package container

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Get info about a GKE cluster from its name and location.
func LookupCluster(ctx *pulumi.Context, args *GetClusterArgs) (*GetClusterResult, error) {
	inputs := make(map[string]interface{})
	if args != nil {
		inputs["location"] = args.Location
		inputs["name"] = args.Name
		inputs["project"] = args.Project
		inputs["region"] = args.Region
		inputs["zone"] = args.Zone
	}
	outputs, err := ctx.Invoke("gcp:container/getCluster:getCluster", inputs)
	if err != nil {
		return nil, err
	}
	return &GetClusterResult{
		AdditionalZones: outputs["additionalZones"],
		AddonsConfigs: outputs["addonsConfigs"],
		ClusterAutoscalings: outputs["clusterAutoscalings"],
		ClusterIpv4Cidr: outputs["clusterIpv4Cidr"],
		DefaultMaxPodsPerNode: outputs["defaultMaxPodsPerNode"],
		Description: outputs["description"],
		EnableBinaryAuthorization: outputs["enableBinaryAuthorization"],
		EnableKubernetesAlpha: outputs["enableKubernetesAlpha"],
		EnableLegacyAbac: outputs["enableLegacyAbac"],
		EnableTpu: outputs["enableTpu"],
		Endpoint: outputs["endpoint"],
		InitialNodeCount: outputs["initialNodeCount"],
		InstanceGroupUrls: outputs["instanceGroupUrls"],
		IpAllocationPolicies: outputs["ipAllocationPolicies"],
		LoggingService: outputs["loggingService"],
		MaintenancePolicies: outputs["maintenancePolicies"],
		MasterAuths: outputs["masterAuths"],
		MasterAuthorizedNetworksConfigs: outputs["masterAuthorizedNetworksConfigs"],
		MasterIpv4CidrBlock: outputs["masterIpv4CidrBlock"],
		MasterVersion: outputs["masterVersion"],
		MinMasterVersion: outputs["minMasterVersion"],
		MonitoringService: outputs["monitoringService"],
		Network: outputs["network"],
		NetworkPolicies: outputs["networkPolicies"],
		NodeConfigs: outputs["nodeConfigs"],
		NodeLocations: outputs["nodeLocations"],
		NodePools: outputs["nodePools"],
		NodeVersion: outputs["nodeVersion"],
		PodSecurityPolicyConfigs: outputs["podSecurityPolicyConfigs"],
		PrivateCluster: outputs["privateCluster"],
		PrivateClusterConfigs: outputs["privateClusterConfigs"],
		RemoveDefaultNodePool: outputs["removeDefaultNodePool"],
		ResourceLabels: outputs["resourceLabels"],
		Subnetwork: outputs["subnetwork"],
		TpuIpv4CidrBlock: outputs["tpuIpv4CidrBlock"],
		Id: outputs["id"],
	}, nil
}

// A collection of arguments for invoking getCluster.
type GetClusterArgs struct {
	// The location (zone or region) this cluster has been
	// created in. One of `location`, `region`, `zone`, or a provider-level `zone` must
	// be specified.
	Location interface{}
	// The name of the cluster.
	Name interface{}
	// The project in which the resource belongs. If it
	// is not provided, the provider project is used.
	Project interface{}
	// The region this cluster has been created in. Deprecated
	// in favour of `location`.
	Region interface{}
	// The zone this cluster has been created in. Deprecated in
	// favour of `location`.
	Zone interface{}
}

// A collection of values returned by getCluster.
type GetClusterResult struct {
	AdditionalZones interface{}
	AddonsConfigs interface{}
	ClusterAutoscalings interface{}
	ClusterIpv4Cidr interface{}
	DefaultMaxPodsPerNode interface{}
	Description interface{}
	EnableBinaryAuthorization interface{}
	EnableKubernetesAlpha interface{}
	EnableLegacyAbac interface{}
	EnableTpu interface{}
	Endpoint interface{}
	InitialNodeCount interface{}
	InstanceGroupUrls interface{}
	IpAllocationPolicies interface{}
	LoggingService interface{}
	MaintenancePolicies interface{}
	MasterAuths interface{}
	MasterAuthorizedNetworksConfigs interface{}
	MasterIpv4CidrBlock interface{}
	MasterVersion interface{}
	MinMasterVersion interface{}
	MonitoringService interface{}
	Network interface{}
	NetworkPolicies interface{}
	NodeConfigs interface{}
	NodeLocations interface{}
	NodePools interface{}
	NodeVersion interface{}
	PodSecurityPolicyConfigs interface{}
	PrivateCluster interface{}
	PrivateClusterConfigs interface{}
	RemoveDefaultNodePool interface{}
	ResourceLabels interface{}
	Subnetwork interface{}
	TpuIpv4CidrBlock interface{}
	// id is the provider-assigned unique ID for this managed resource.
	Id interface{}
}
