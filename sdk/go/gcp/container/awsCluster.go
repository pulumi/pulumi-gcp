// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package container

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// An Anthos cluster running on AWS.
//
// For more information, see:
// * [Multicloud overview](https://cloud.google.com/anthos/clusters/docs/multi-cloud)
// ## Example Usage
//
// ### Basic_aws_cluster
// A basic example of a containeraws cluster
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/container"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			versions, err := container.GetAwsVersions(ctx, &container.GetAwsVersionsArgs{
//				Project:  pulumi.StringRef("my-project-name"),
//				Location: pulumi.StringRef("us-west1"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = container.NewAwsCluster(ctx, "primary", &container.AwsClusterArgs{
//				Authorization: &container.AwsClusterAuthorizationArgs{
//					AdminUsers: container.AwsClusterAuthorizationAdminUserArray{
//						&container.AwsClusterAuthorizationAdminUserArgs{
//							Username: pulumi.String("my@service-account.com"),
//						},
//					},
//					AdminGroups: container.AwsClusterAuthorizationAdminGroupArray{
//						&container.AwsClusterAuthorizationAdminGroupArgs{
//							Group: pulumi.String("group@domain.com"),
//						},
//					},
//				},
//				AwsRegion: pulumi.String("my-aws-region"),
//				ControlPlane: &container.AwsClusterControlPlaneArgs{
//					AwsServicesAuthentication: &container.AwsClusterControlPlaneAwsServicesAuthenticationArgs{
//						RoleArn:         pulumi.String("arn:aws:iam::012345678910:role/my--1p-dev-oneplatform"),
//						RoleSessionName: pulumi.String("my--1p-dev-session"),
//					},
//					ConfigEncryption: &container.AwsClusterControlPlaneConfigEncryptionArgs{
//						KmsKeyArn: pulumi.String("arn:aws:kms:my-aws-region:012345678910:key/12345678-1234-1234-1234-123456789111"),
//					},
//					DatabaseEncryption: &container.AwsClusterControlPlaneDatabaseEncryptionArgs{
//						KmsKeyArn: pulumi.String("arn:aws:kms:my-aws-region:012345678910:key/12345678-1234-1234-1234-123456789111"),
//					},
//					IamInstanceProfile: pulumi.String("my--1p-dev-controlplane"),
//					SubnetIds: pulumi.StringArray{
//						pulumi.String("subnet-00000000000000000"),
//					},
//					Version:      pulumi.String(versions.ValidVersions[0]),
//					InstanceType: pulumi.String("t3.medium"),
//					MainVolume: &container.AwsClusterControlPlaneMainVolumeArgs{
//						Iops:       pulumi.Int(3000),
//						KmsKeyArn:  pulumi.String("arn:aws:kms:my-aws-region:012345678910:key/12345678-1234-1234-1234-123456789111"),
//						SizeGib:    pulumi.Int(10),
//						VolumeType: pulumi.String("GP3"),
//					},
//					ProxyConfig: &container.AwsClusterControlPlaneProxyConfigArgs{
//						SecretArn:     pulumi.String("arn:aws:secretsmanager:us-west-2:126285863215:secret:proxy_config20210824150329476300000001-ABCDEF"),
//						SecretVersion: pulumi.String("12345678-ABCD-EFGH-IJKL-987654321098"),
//					},
//					RootVolume: &container.AwsClusterControlPlaneRootVolumeArgs{
//						Iops:       pulumi.Int(3000),
//						KmsKeyArn:  pulumi.String("arn:aws:kms:my-aws-region:012345678910:key/12345678-1234-1234-1234-123456789111"),
//						SizeGib:    pulumi.Int(10),
//						VolumeType: pulumi.String("GP3"),
//					},
//					SecurityGroupIds: pulumi.StringArray{
//						pulumi.String("sg-00000000000000000"),
//					},
//					SshConfig: &container.AwsClusterControlPlaneSshConfigArgs{
//						Ec2KeyPair: pulumi.String("my--1p-dev-ssh"),
//					},
//					Tags: pulumi.StringMap{
//						"owner": pulumi.String("my@service-account.com"),
//					},
//				},
//				Fleet: &container.AwsClusterFleetArgs{
//					Project: pulumi.String("my-project-number"),
//				},
//				Location: pulumi.String("us-west1"),
//				Name:     pulumi.String("name"),
//				Networking: &container.AwsClusterNetworkingArgs{
//					PodAddressCidrBlocks: pulumi.StringArray{
//						pulumi.String("10.2.0.0/16"),
//					},
//					ServiceAddressCidrBlocks: pulumi.StringArray{
//						pulumi.String("10.1.0.0/16"),
//					},
//					VpcId: pulumi.String("vpc-00000000000000000"),
//				},
//				Annotations: pulumi.StringMap{
//					"label-one": pulumi.String("value-one"),
//				},
//				Description: pulumi.String("A sample aws cluster"),
//				Project:     pulumi.String("my-project-name"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Basic_enum_aws_cluster
// A basic example of a containeraws cluster with lowercase enums
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/container"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			versions, err := container.GetAwsVersions(ctx, &container.GetAwsVersionsArgs{
//				Project:  pulumi.StringRef("my-project-name"),
//				Location: pulumi.StringRef("us-west1"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = container.NewAwsCluster(ctx, "primary", &container.AwsClusterArgs{
//				Authorization: &container.AwsClusterAuthorizationArgs{
//					AdminUsers: container.AwsClusterAuthorizationAdminUserArray{
//						&container.AwsClusterAuthorizationAdminUserArgs{
//							Username: pulumi.String("my@service-account.com"),
//						},
//					},
//				},
//				AwsRegion: pulumi.String("my-aws-region"),
//				ControlPlane: &container.AwsClusterControlPlaneArgs{
//					AwsServicesAuthentication: &container.AwsClusterControlPlaneAwsServicesAuthenticationArgs{
//						RoleArn:         pulumi.String("arn:aws:iam::012345678910:role/my--1p-dev-oneplatform"),
//						RoleSessionName: pulumi.String("my--1p-dev-session"),
//					},
//					ConfigEncryption: &container.AwsClusterControlPlaneConfigEncryptionArgs{
//						KmsKeyArn: pulumi.String("arn:aws:kms:my-aws-region:012345678910:key/12345678-1234-1234-1234-123456789111"),
//					},
//					DatabaseEncryption: &container.AwsClusterControlPlaneDatabaseEncryptionArgs{
//						KmsKeyArn: pulumi.String("arn:aws:kms:my-aws-region:012345678910:key/12345678-1234-1234-1234-123456789111"),
//					},
//					IamInstanceProfile: pulumi.String("my--1p-dev-controlplane"),
//					SubnetIds: pulumi.StringArray{
//						pulumi.String("subnet-00000000000000000"),
//					},
//					Version:      pulumi.String(versions.ValidVersions[0]),
//					InstanceType: pulumi.String("t3.medium"),
//					MainVolume: &container.AwsClusterControlPlaneMainVolumeArgs{
//						Iops:       pulumi.Int(3000),
//						KmsKeyArn:  pulumi.String("arn:aws:kms:my-aws-region:012345678910:key/12345678-1234-1234-1234-123456789111"),
//						SizeGib:    pulumi.Int(10),
//						VolumeType: pulumi.String("gp3"),
//					},
//					ProxyConfig: &container.AwsClusterControlPlaneProxyConfigArgs{
//						SecretArn:     pulumi.String("arn:aws:secretsmanager:us-west-2:126285863215:secret:proxy_config20210824150329476300000001-ABCDEF"),
//						SecretVersion: pulumi.String("12345678-ABCD-EFGH-IJKL-987654321098"),
//					},
//					RootVolume: &container.AwsClusterControlPlaneRootVolumeArgs{
//						Iops:       pulumi.Int(3000),
//						KmsKeyArn:  pulumi.String("arn:aws:kms:my-aws-region:012345678910:key/12345678-1234-1234-1234-123456789111"),
//						SizeGib:    pulumi.Int(10),
//						VolumeType: pulumi.String("gp3"),
//					},
//					SecurityGroupIds: pulumi.StringArray{
//						pulumi.String("sg-00000000000000000"),
//					},
//					SshConfig: &container.AwsClusterControlPlaneSshConfigArgs{
//						Ec2KeyPair: pulumi.String("my--1p-dev-ssh"),
//					},
//					Tags: pulumi.StringMap{
//						"owner": pulumi.String("my@service-account.com"),
//					},
//				},
//				Fleet: &container.AwsClusterFleetArgs{
//					Project: pulumi.String("my-project-number"),
//				},
//				Location: pulumi.String("us-west1"),
//				Name:     pulumi.String("name"),
//				Networking: &container.AwsClusterNetworkingArgs{
//					PodAddressCidrBlocks: pulumi.StringArray{
//						pulumi.String("10.2.0.0/16"),
//					},
//					ServiceAddressCidrBlocks: pulumi.StringArray{
//						pulumi.String("10.1.0.0/16"),
//					},
//					VpcId: pulumi.String("vpc-00000000000000000"),
//				},
//				Annotations: pulumi.StringMap{
//					"label-one": pulumi.String("value-one"),
//				},
//				Description: pulumi.String("A sample aws cluster"),
//				Project:     pulumi.String("my-project-name"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Beta_basic_enum_aws_cluster
// A basic example of a containeraws cluster with lowercase enums (beta)
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/container"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			versions, err := container.GetAwsVersions(ctx, &container.GetAwsVersionsArgs{
//				Project:  pulumi.StringRef("my-project-name"),
//				Location: pulumi.StringRef("us-west1"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = container.NewAwsCluster(ctx, "primary", &container.AwsClusterArgs{
//				Authorization: &container.AwsClusterAuthorizationArgs{
//					AdminUsers: container.AwsClusterAuthorizationAdminUserArray{
//						&container.AwsClusterAuthorizationAdminUserArgs{
//							Username: pulumi.String("my@service-account.com"),
//						},
//					},
//				},
//				AwsRegion: pulumi.String("my-aws-region"),
//				ControlPlane: &container.AwsClusterControlPlaneArgs{
//					AwsServicesAuthentication: &container.AwsClusterControlPlaneAwsServicesAuthenticationArgs{
//						RoleArn:         pulumi.String("arn:aws:iam::012345678910:role/my--1p-dev-oneplatform"),
//						RoleSessionName: pulumi.String("my--1p-dev-session"),
//					},
//					ConfigEncryption: &container.AwsClusterControlPlaneConfigEncryptionArgs{
//						KmsKeyArn: pulumi.String("arn:aws:kms:my-aws-region:012345678910:key/12345678-1234-1234-1234-123456789111"),
//					},
//					DatabaseEncryption: &container.AwsClusterControlPlaneDatabaseEncryptionArgs{
//						KmsKeyArn: pulumi.String("arn:aws:kms:my-aws-region:012345678910:key/12345678-1234-1234-1234-123456789111"),
//					},
//					IamInstanceProfile: pulumi.String("my--1p-dev-controlplane"),
//					SubnetIds: pulumi.StringArray{
//						pulumi.String("subnet-00000000000000000"),
//					},
//					Version:      pulumi.String(versions.ValidVersions[0]),
//					InstanceType: pulumi.String("t3.medium"),
//					MainVolume: &container.AwsClusterControlPlaneMainVolumeArgs{
//						Iops:       pulumi.Int(3000),
//						KmsKeyArn:  pulumi.String("arn:aws:kms:my-aws-region:012345678910:key/12345678-1234-1234-1234-123456789111"),
//						SizeGib:    pulumi.Int(10),
//						VolumeType: pulumi.String("gp3"),
//					},
//					ProxyConfig: &container.AwsClusterControlPlaneProxyConfigArgs{
//						SecretArn:     pulumi.String("arn:aws:secretsmanager:us-west-2:126285863215:secret:proxy_config20210824150329476300000001-ABCDEF"),
//						SecretVersion: pulumi.String("12345678-ABCD-EFGH-IJKL-987654321098"),
//					},
//					RootVolume: &container.AwsClusterControlPlaneRootVolumeArgs{
//						Iops:       pulumi.Int(3000),
//						KmsKeyArn:  pulumi.String("arn:aws:kms:my-aws-region:012345678910:key/12345678-1234-1234-1234-123456789111"),
//						SizeGib:    pulumi.Int(10),
//						VolumeType: pulumi.String("gp3"),
//					},
//					SecurityGroupIds: pulumi.StringArray{
//						pulumi.String("sg-00000000000000000"),
//					},
//					SshConfig: &container.AwsClusterControlPlaneSshConfigArgs{
//						Ec2KeyPair: pulumi.String("my--1p-dev-ssh"),
//					},
//					Tags: pulumi.StringMap{
//						"owner": pulumi.String("my@service-account.com"),
//					},
//					InstancePlacement: &container.AwsClusterControlPlaneInstancePlacementArgs{
//						Tenancy: pulumi.String("dedicated"),
//					},
//				},
//				Fleet: &container.AwsClusterFleetArgs{
//					Project: pulumi.String("my-project-number"),
//				},
//				Location: pulumi.String("us-west1"),
//				Name:     pulumi.String("name"),
//				Networking: &container.AwsClusterNetworkingArgs{
//					PodAddressCidrBlocks: pulumi.StringArray{
//						pulumi.String("10.2.0.0/16"),
//					},
//					ServiceAddressCidrBlocks: pulumi.StringArray{
//						pulumi.String("10.1.0.0/16"),
//					},
//					VpcId: pulumi.String("vpc-00000000000000000"),
//				},
//				Annotations: pulumi.StringMap{
//					"label-one": pulumi.String("value-one"),
//				},
//				Description: pulumi.String("A sample aws cluster"),
//				Project:     pulumi.String("my-project-name"),
//				LoggingConfig: &container.AwsClusterLoggingConfigArgs{
//					ComponentConfig: &container.AwsClusterLoggingConfigComponentConfigArgs{
//						EnableComponents: pulumi.StringArray{
//							pulumi.String("system_components"),
//							pulumi.String("workloads"),
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Cluster can be imported using any of these accepted formats:
//
// * `projects/{{project}}/locations/{{location}}/awsClusters/{{name}}`
//
// * `{{project}}/{{location}}/{{name}}`
//
// * `{{location}}/{{name}}`
//
// When using the `pulumi import` command, Cluster can be imported using one of the formats above. For example:
//
// ```sh
// $ pulumi import gcp:container/awsCluster:AwsCluster default projects/{{project}}/locations/{{location}}/awsClusters/{{name}}
// ```
//
// ```sh
// $ pulumi import gcp:container/awsCluster:AwsCluster default {{project}}/{{location}}/{{name}}
// ```
//
// ```sh
// $ pulumi import gcp:container/awsCluster:AwsCluster default {{location}}/{{name}}
// ```
type AwsCluster struct {
	pulumi.CustomResourceState

	// Optional. Annotations on the cluster. This field has the same restrictions as Kubernetes annotations. The total size of
	// all keys and values combined is limited to 256k. Key can have 2 segments: prefix (optional) and name (required),
	// separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with
	// alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between. **Note**: This field is
	// non-authoritative, and will only manage the annotations present in your configuration. Please refer to the field
	// `effectiveAnnotations` for all of the annotations present on the resource.
	Annotations pulumi.StringMapOutput `pulumi:"annotations"`
	// Configuration related to the cluster RBAC settings.
	Authorization AwsClusterAuthorizationOutput `pulumi:"authorization"`
	// The AWS region where the cluster runs. Each Google Cloud region supports a subset of nearby AWS regions. You can call to list all supported AWS regions within a given Google Cloud region.
	AwsRegion pulumi.StringOutput `pulumi:"awsRegion"`
	// Configuration options for the Binary Authorization feature.
	BinaryAuthorization AwsClusterBinaryAuthorizationOutput `pulumi:"binaryAuthorization"`
	// Configuration related to the cluster control plane.
	ControlPlane AwsClusterControlPlaneOutput `pulumi:"controlPlane"`
	// Output only. The time at which this cluster was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Optional. A human readable description of this cluster. Cannot be longer than 255 UTF-8 encoded bytes.
	Description          pulumi.StringPtrOutput `pulumi:"description"`
	EffectiveAnnotations pulumi.MapOutput       `pulumi:"effectiveAnnotations"`
	// Output only. The endpoint of the cluster's API server.
	Endpoint pulumi.StringOutput `pulumi:"endpoint"`
	// Allows clients to perform consistent read-modify-writes through optimistic concurrency control. May be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// Fleet configuration.
	Fleet AwsClusterFleetOutput `pulumi:"fleet"`
	// The location for the resource
	Location pulumi.StringOutput `pulumi:"location"`
	// Logging configuration.
	LoggingConfig AwsClusterLoggingConfigOutput `pulumi:"loggingConfig"`
	// The name of this resource.
	Name pulumi.StringOutput `pulumi:"name"`
	// Cluster-wide networking configuration.
	Networking AwsClusterNetworkingOutput `pulumi:"networking"`
	// The project for the resource
	Project pulumi.StringOutput `pulumi:"project"`
	// Output only. If set, there are currently changes in flight to the cluster.
	Reconciling pulumi.BoolOutput `pulumi:"reconciling"`
	// Output only. The current state of the cluster. Possible values: STATE_UNSPECIFIED, PROVISIONING, RUNNING, RECONCILING, STOPPING, ERROR, DEGRADED
	State pulumi.StringOutput `pulumi:"state"`
	// Output only. A globally unique identifier for the cluster.
	Uid pulumi.StringOutput `pulumi:"uid"`
	// Output only. The time at which this cluster was last updated.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
	// Output only. Workload Identity settings.
	WorkloadIdentityConfigs AwsClusterWorkloadIdentityConfigArrayOutput `pulumi:"workloadIdentityConfigs"`
}

// NewAwsCluster registers a new resource with the given unique name, arguments, and options.
func NewAwsCluster(ctx *pulumi.Context,
	name string, args *AwsClusterArgs, opts ...pulumi.ResourceOption) (*AwsCluster, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Authorization == nil {
		return nil, errors.New("invalid value for required argument 'Authorization'")
	}
	if args.AwsRegion == nil {
		return nil, errors.New("invalid value for required argument 'AwsRegion'")
	}
	if args.ControlPlane == nil {
		return nil, errors.New("invalid value for required argument 'ControlPlane'")
	}
	if args.Fleet == nil {
		return nil, errors.New("invalid value for required argument 'Fleet'")
	}
	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	if args.Networking == nil {
		return nil, errors.New("invalid value for required argument 'Networking'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AwsCluster
	err := ctx.RegisterResource("gcp:container/awsCluster:AwsCluster", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAwsCluster gets an existing AwsCluster resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAwsCluster(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AwsClusterState, opts ...pulumi.ResourceOption) (*AwsCluster, error) {
	var resource AwsCluster
	err := ctx.ReadResource("gcp:container/awsCluster:AwsCluster", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AwsCluster resources.
type awsClusterState struct {
	// Optional. Annotations on the cluster. This field has the same restrictions as Kubernetes annotations. The total size of
	// all keys and values combined is limited to 256k. Key can have 2 segments: prefix (optional) and name (required),
	// separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with
	// alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between. **Note**: This field is
	// non-authoritative, and will only manage the annotations present in your configuration. Please refer to the field
	// `effectiveAnnotations` for all of the annotations present on the resource.
	Annotations map[string]string `pulumi:"annotations"`
	// Configuration related to the cluster RBAC settings.
	Authorization *AwsClusterAuthorization `pulumi:"authorization"`
	// The AWS region where the cluster runs. Each Google Cloud region supports a subset of nearby AWS regions. You can call to list all supported AWS regions within a given Google Cloud region.
	AwsRegion *string `pulumi:"awsRegion"`
	// Configuration options for the Binary Authorization feature.
	BinaryAuthorization *AwsClusterBinaryAuthorization `pulumi:"binaryAuthorization"`
	// Configuration related to the cluster control plane.
	ControlPlane *AwsClusterControlPlane `pulumi:"controlPlane"`
	// Output only. The time at which this cluster was created.
	CreateTime *string `pulumi:"createTime"`
	// Optional. A human readable description of this cluster. Cannot be longer than 255 UTF-8 encoded bytes.
	Description          *string                `pulumi:"description"`
	EffectiveAnnotations map[string]interface{} `pulumi:"effectiveAnnotations"`
	// Output only. The endpoint of the cluster's API server.
	Endpoint *string `pulumi:"endpoint"`
	// Allows clients to perform consistent read-modify-writes through optimistic concurrency control. May be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
	Etag *string `pulumi:"etag"`
	// Fleet configuration.
	Fleet *AwsClusterFleet `pulumi:"fleet"`
	// The location for the resource
	Location *string `pulumi:"location"`
	// Logging configuration.
	LoggingConfig *AwsClusterLoggingConfig `pulumi:"loggingConfig"`
	// The name of this resource.
	Name *string `pulumi:"name"`
	// Cluster-wide networking configuration.
	Networking *AwsClusterNetworking `pulumi:"networking"`
	// The project for the resource
	Project *string `pulumi:"project"`
	// Output only. If set, there are currently changes in flight to the cluster.
	Reconciling *bool `pulumi:"reconciling"`
	// Output only. The current state of the cluster. Possible values: STATE_UNSPECIFIED, PROVISIONING, RUNNING, RECONCILING, STOPPING, ERROR, DEGRADED
	State *string `pulumi:"state"`
	// Output only. A globally unique identifier for the cluster.
	Uid *string `pulumi:"uid"`
	// Output only. The time at which this cluster was last updated.
	UpdateTime *string `pulumi:"updateTime"`
	// Output only. Workload Identity settings.
	WorkloadIdentityConfigs []AwsClusterWorkloadIdentityConfig `pulumi:"workloadIdentityConfigs"`
}

type AwsClusterState struct {
	// Optional. Annotations on the cluster. This field has the same restrictions as Kubernetes annotations. The total size of
	// all keys and values combined is limited to 256k. Key can have 2 segments: prefix (optional) and name (required),
	// separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with
	// alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between. **Note**: This field is
	// non-authoritative, and will only manage the annotations present in your configuration. Please refer to the field
	// `effectiveAnnotations` for all of the annotations present on the resource.
	Annotations pulumi.StringMapInput
	// Configuration related to the cluster RBAC settings.
	Authorization AwsClusterAuthorizationPtrInput
	// The AWS region where the cluster runs. Each Google Cloud region supports a subset of nearby AWS regions. You can call to list all supported AWS regions within a given Google Cloud region.
	AwsRegion pulumi.StringPtrInput
	// Configuration options for the Binary Authorization feature.
	BinaryAuthorization AwsClusterBinaryAuthorizationPtrInput
	// Configuration related to the cluster control plane.
	ControlPlane AwsClusterControlPlanePtrInput
	// Output only. The time at which this cluster was created.
	CreateTime pulumi.StringPtrInput
	// Optional. A human readable description of this cluster. Cannot be longer than 255 UTF-8 encoded bytes.
	Description          pulumi.StringPtrInput
	EffectiveAnnotations pulumi.MapInput
	// Output only. The endpoint of the cluster's API server.
	Endpoint pulumi.StringPtrInput
	// Allows clients to perform consistent read-modify-writes through optimistic concurrency control. May be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
	Etag pulumi.StringPtrInput
	// Fleet configuration.
	Fleet AwsClusterFleetPtrInput
	// The location for the resource
	Location pulumi.StringPtrInput
	// Logging configuration.
	LoggingConfig AwsClusterLoggingConfigPtrInput
	// The name of this resource.
	Name pulumi.StringPtrInput
	// Cluster-wide networking configuration.
	Networking AwsClusterNetworkingPtrInput
	// The project for the resource
	Project pulumi.StringPtrInput
	// Output only. If set, there are currently changes in flight to the cluster.
	Reconciling pulumi.BoolPtrInput
	// Output only. The current state of the cluster. Possible values: STATE_UNSPECIFIED, PROVISIONING, RUNNING, RECONCILING, STOPPING, ERROR, DEGRADED
	State pulumi.StringPtrInput
	// Output only. A globally unique identifier for the cluster.
	Uid pulumi.StringPtrInput
	// Output only. The time at which this cluster was last updated.
	UpdateTime pulumi.StringPtrInput
	// Output only. Workload Identity settings.
	WorkloadIdentityConfigs AwsClusterWorkloadIdentityConfigArrayInput
}

func (AwsClusterState) ElementType() reflect.Type {
	return reflect.TypeOf((*awsClusterState)(nil)).Elem()
}

type awsClusterArgs struct {
	// Optional. Annotations on the cluster. This field has the same restrictions as Kubernetes annotations. The total size of
	// all keys and values combined is limited to 256k. Key can have 2 segments: prefix (optional) and name (required),
	// separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with
	// alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between. **Note**: This field is
	// non-authoritative, and will only manage the annotations present in your configuration. Please refer to the field
	// `effectiveAnnotations` for all of the annotations present on the resource.
	Annotations map[string]string `pulumi:"annotations"`
	// Configuration related to the cluster RBAC settings.
	Authorization AwsClusterAuthorization `pulumi:"authorization"`
	// The AWS region where the cluster runs. Each Google Cloud region supports a subset of nearby AWS regions. You can call to list all supported AWS regions within a given Google Cloud region.
	AwsRegion string `pulumi:"awsRegion"`
	// Configuration options for the Binary Authorization feature.
	BinaryAuthorization *AwsClusterBinaryAuthorization `pulumi:"binaryAuthorization"`
	// Configuration related to the cluster control plane.
	ControlPlane AwsClusterControlPlane `pulumi:"controlPlane"`
	// Optional. A human readable description of this cluster. Cannot be longer than 255 UTF-8 encoded bytes.
	Description *string `pulumi:"description"`
	// Fleet configuration.
	Fleet AwsClusterFleet `pulumi:"fleet"`
	// The location for the resource
	Location string `pulumi:"location"`
	// Logging configuration.
	LoggingConfig *AwsClusterLoggingConfig `pulumi:"loggingConfig"`
	// The name of this resource.
	Name *string `pulumi:"name"`
	// Cluster-wide networking configuration.
	Networking AwsClusterNetworking `pulumi:"networking"`
	// The project for the resource
	Project *string `pulumi:"project"`
}

// The set of arguments for constructing a AwsCluster resource.
type AwsClusterArgs struct {
	// Optional. Annotations on the cluster. This field has the same restrictions as Kubernetes annotations. The total size of
	// all keys and values combined is limited to 256k. Key can have 2 segments: prefix (optional) and name (required),
	// separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with
	// alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between. **Note**: This field is
	// non-authoritative, and will only manage the annotations present in your configuration. Please refer to the field
	// `effectiveAnnotations` for all of the annotations present on the resource.
	Annotations pulumi.StringMapInput
	// Configuration related to the cluster RBAC settings.
	Authorization AwsClusterAuthorizationInput
	// The AWS region where the cluster runs. Each Google Cloud region supports a subset of nearby AWS regions. You can call to list all supported AWS regions within a given Google Cloud region.
	AwsRegion pulumi.StringInput
	// Configuration options for the Binary Authorization feature.
	BinaryAuthorization AwsClusterBinaryAuthorizationPtrInput
	// Configuration related to the cluster control plane.
	ControlPlane AwsClusterControlPlaneInput
	// Optional. A human readable description of this cluster. Cannot be longer than 255 UTF-8 encoded bytes.
	Description pulumi.StringPtrInput
	// Fleet configuration.
	Fleet AwsClusterFleetInput
	// The location for the resource
	Location pulumi.StringInput
	// Logging configuration.
	LoggingConfig AwsClusterLoggingConfigPtrInput
	// The name of this resource.
	Name pulumi.StringPtrInput
	// Cluster-wide networking configuration.
	Networking AwsClusterNetworkingInput
	// The project for the resource
	Project pulumi.StringPtrInput
}

func (AwsClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*awsClusterArgs)(nil)).Elem()
}

type AwsClusterInput interface {
	pulumi.Input

	ToAwsClusterOutput() AwsClusterOutput
	ToAwsClusterOutputWithContext(ctx context.Context) AwsClusterOutput
}

func (*AwsCluster) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsCluster)(nil)).Elem()
}

func (i *AwsCluster) ToAwsClusterOutput() AwsClusterOutput {
	return i.ToAwsClusterOutputWithContext(context.Background())
}

func (i *AwsCluster) ToAwsClusterOutputWithContext(ctx context.Context) AwsClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsClusterOutput)
}

// AwsClusterArrayInput is an input type that accepts AwsClusterArray and AwsClusterArrayOutput values.
// You can construct a concrete instance of `AwsClusterArrayInput` via:
//
//	AwsClusterArray{ AwsClusterArgs{...} }
type AwsClusterArrayInput interface {
	pulumi.Input

	ToAwsClusterArrayOutput() AwsClusterArrayOutput
	ToAwsClusterArrayOutputWithContext(context.Context) AwsClusterArrayOutput
}

type AwsClusterArray []AwsClusterInput

func (AwsClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AwsCluster)(nil)).Elem()
}

func (i AwsClusterArray) ToAwsClusterArrayOutput() AwsClusterArrayOutput {
	return i.ToAwsClusterArrayOutputWithContext(context.Background())
}

func (i AwsClusterArray) ToAwsClusterArrayOutputWithContext(ctx context.Context) AwsClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsClusterArrayOutput)
}

// AwsClusterMapInput is an input type that accepts AwsClusterMap and AwsClusterMapOutput values.
// You can construct a concrete instance of `AwsClusterMapInput` via:
//
//	AwsClusterMap{ "key": AwsClusterArgs{...} }
type AwsClusterMapInput interface {
	pulumi.Input

	ToAwsClusterMapOutput() AwsClusterMapOutput
	ToAwsClusterMapOutputWithContext(context.Context) AwsClusterMapOutput
}

type AwsClusterMap map[string]AwsClusterInput

func (AwsClusterMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AwsCluster)(nil)).Elem()
}

func (i AwsClusterMap) ToAwsClusterMapOutput() AwsClusterMapOutput {
	return i.ToAwsClusterMapOutputWithContext(context.Background())
}

func (i AwsClusterMap) ToAwsClusterMapOutputWithContext(ctx context.Context) AwsClusterMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsClusterMapOutput)
}

type AwsClusterOutput struct{ *pulumi.OutputState }

func (AwsClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsCluster)(nil)).Elem()
}

func (o AwsClusterOutput) ToAwsClusterOutput() AwsClusterOutput {
	return o
}

func (o AwsClusterOutput) ToAwsClusterOutputWithContext(ctx context.Context) AwsClusterOutput {
	return o
}

// Optional. Annotations on the cluster. This field has the same restrictions as Kubernetes annotations. The total size of
// all keys and values combined is limited to 256k. Key can have 2 segments: prefix (optional) and name (required),
// separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with
// alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between. **Note**: This field is
// non-authoritative, and will only manage the annotations present in your configuration. Please refer to the field
// `effectiveAnnotations` for all of the annotations present on the resource.
func (o AwsClusterOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AwsCluster) pulumi.StringMapOutput { return v.Annotations }).(pulumi.StringMapOutput)
}

// Configuration related to the cluster RBAC settings.
func (o AwsClusterOutput) Authorization() AwsClusterAuthorizationOutput {
	return o.ApplyT(func(v *AwsCluster) AwsClusterAuthorizationOutput { return v.Authorization }).(AwsClusterAuthorizationOutput)
}

// The AWS region where the cluster runs. Each Google Cloud region supports a subset of nearby AWS regions. You can call to list all supported AWS regions within a given Google Cloud region.
func (o AwsClusterOutput) AwsRegion() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsCluster) pulumi.StringOutput { return v.AwsRegion }).(pulumi.StringOutput)
}

// Configuration options for the Binary Authorization feature.
func (o AwsClusterOutput) BinaryAuthorization() AwsClusterBinaryAuthorizationOutput {
	return o.ApplyT(func(v *AwsCluster) AwsClusterBinaryAuthorizationOutput { return v.BinaryAuthorization }).(AwsClusterBinaryAuthorizationOutput)
}

// Configuration related to the cluster control plane.
func (o AwsClusterOutput) ControlPlane() AwsClusterControlPlaneOutput {
	return o.ApplyT(func(v *AwsCluster) AwsClusterControlPlaneOutput { return v.ControlPlane }).(AwsClusterControlPlaneOutput)
}

// Output only. The time at which this cluster was created.
func (o AwsClusterOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsCluster) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Optional. A human readable description of this cluster. Cannot be longer than 255 UTF-8 encoded bytes.
func (o AwsClusterOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsCluster) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o AwsClusterOutput) EffectiveAnnotations() pulumi.MapOutput {
	return o.ApplyT(func(v *AwsCluster) pulumi.MapOutput { return v.EffectiveAnnotations }).(pulumi.MapOutput)
}

// Output only. The endpoint of the cluster's API server.
func (o AwsClusterOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsCluster) pulumi.StringOutput { return v.Endpoint }).(pulumi.StringOutput)
}

// Allows clients to perform consistent read-modify-writes through optimistic concurrency control. May be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
func (o AwsClusterOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsCluster) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// Fleet configuration.
func (o AwsClusterOutput) Fleet() AwsClusterFleetOutput {
	return o.ApplyT(func(v *AwsCluster) AwsClusterFleetOutput { return v.Fleet }).(AwsClusterFleetOutput)
}

// The location for the resource
func (o AwsClusterOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsCluster) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Logging configuration.
func (o AwsClusterOutput) LoggingConfig() AwsClusterLoggingConfigOutput {
	return o.ApplyT(func(v *AwsCluster) AwsClusterLoggingConfigOutput { return v.LoggingConfig }).(AwsClusterLoggingConfigOutput)
}

// The name of this resource.
func (o AwsClusterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsCluster) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Cluster-wide networking configuration.
func (o AwsClusterOutput) Networking() AwsClusterNetworkingOutput {
	return o.ApplyT(func(v *AwsCluster) AwsClusterNetworkingOutput { return v.Networking }).(AwsClusterNetworkingOutput)
}

// The project for the resource
func (o AwsClusterOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsCluster) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Output only. If set, there are currently changes in flight to the cluster.
func (o AwsClusterOutput) Reconciling() pulumi.BoolOutput {
	return o.ApplyT(func(v *AwsCluster) pulumi.BoolOutput { return v.Reconciling }).(pulumi.BoolOutput)
}

// Output only. The current state of the cluster. Possible values: STATE_UNSPECIFIED, PROVISIONING, RUNNING, RECONCILING, STOPPING, ERROR, DEGRADED
func (o AwsClusterOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsCluster) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// Output only. A globally unique identifier for the cluster.
func (o AwsClusterOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsCluster) pulumi.StringOutput { return v.Uid }).(pulumi.StringOutput)
}

// Output only. The time at which this cluster was last updated.
func (o AwsClusterOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsCluster) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

// Output only. Workload Identity settings.
func (o AwsClusterOutput) WorkloadIdentityConfigs() AwsClusterWorkloadIdentityConfigArrayOutput {
	return o.ApplyT(func(v *AwsCluster) AwsClusterWorkloadIdentityConfigArrayOutput { return v.WorkloadIdentityConfigs }).(AwsClusterWorkloadIdentityConfigArrayOutput)
}

type AwsClusterArrayOutput struct{ *pulumi.OutputState }

func (AwsClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AwsCluster)(nil)).Elem()
}

func (o AwsClusterArrayOutput) ToAwsClusterArrayOutput() AwsClusterArrayOutput {
	return o
}

func (o AwsClusterArrayOutput) ToAwsClusterArrayOutputWithContext(ctx context.Context) AwsClusterArrayOutput {
	return o
}

func (o AwsClusterArrayOutput) Index(i pulumi.IntInput) AwsClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AwsCluster {
		return vs[0].([]*AwsCluster)[vs[1].(int)]
	}).(AwsClusterOutput)
}

type AwsClusterMapOutput struct{ *pulumi.OutputState }

func (AwsClusterMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AwsCluster)(nil)).Elem()
}

func (o AwsClusterMapOutput) ToAwsClusterMapOutput() AwsClusterMapOutput {
	return o
}

func (o AwsClusterMapOutput) ToAwsClusterMapOutputWithContext(ctx context.Context) AwsClusterMapOutput {
	return o
}

func (o AwsClusterMapOutput) MapIndex(k pulumi.StringInput) AwsClusterOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AwsCluster {
		return vs[0].(map[string]*AwsCluster)[vs[1].(string)]
	}).(AwsClusterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AwsClusterInput)(nil)).Elem(), &AwsCluster{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsClusterArrayInput)(nil)).Elem(), AwsClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsClusterMapInput)(nil)).Elem(), AwsClusterMap{})
	pulumi.RegisterOutputType(AwsClusterOutput{})
	pulumi.RegisterOutputType(AwsClusterArrayOutput{})
	pulumi.RegisterOutputType(AwsClusterMapOutput{})
}
