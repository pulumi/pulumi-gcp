// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package blockchainnodeengine

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type BlockchainNodesConnectionInfo struct {
	// (Output)
	// The endpoint information through which to interact with a blockchain node.
	// Structure is documented below.
	EndpointInfos []BlockchainNodesConnectionInfoEndpointInfo `pulumi:"endpointInfos"`
	// (Output)
	// A service attachment that exposes a node, and has the following format: projects/{project}/regions/{region}/serviceAttachments/{service_attachment_name}
	ServiceAttachment *string `pulumi:"serviceAttachment"`
}

// BlockchainNodesConnectionInfoInput is an input type that accepts BlockchainNodesConnectionInfoArgs and BlockchainNodesConnectionInfoOutput values.
// You can construct a concrete instance of `BlockchainNodesConnectionInfoInput` via:
//
//	BlockchainNodesConnectionInfoArgs{...}
type BlockchainNodesConnectionInfoInput interface {
	pulumi.Input

	ToBlockchainNodesConnectionInfoOutput() BlockchainNodesConnectionInfoOutput
	ToBlockchainNodesConnectionInfoOutputWithContext(context.Context) BlockchainNodesConnectionInfoOutput
}

type BlockchainNodesConnectionInfoArgs struct {
	// (Output)
	// The endpoint information through which to interact with a blockchain node.
	// Structure is documented below.
	EndpointInfos BlockchainNodesConnectionInfoEndpointInfoArrayInput `pulumi:"endpointInfos"`
	// (Output)
	// A service attachment that exposes a node, and has the following format: projects/{project}/regions/{region}/serviceAttachments/{service_attachment_name}
	ServiceAttachment pulumi.StringPtrInput `pulumi:"serviceAttachment"`
}

func (BlockchainNodesConnectionInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BlockchainNodesConnectionInfo)(nil)).Elem()
}

func (i BlockchainNodesConnectionInfoArgs) ToBlockchainNodesConnectionInfoOutput() BlockchainNodesConnectionInfoOutput {
	return i.ToBlockchainNodesConnectionInfoOutputWithContext(context.Background())
}

func (i BlockchainNodesConnectionInfoArgs) ToBlockchainNodesConnectionInfoOutputWithContext(ctx context.Context) BlockchainNodesConnectionInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlockchainNodesConnectionInfoOutput)
}

// BlockchainNodesConnectionInfoArrayInput is an input type that accepts BlockchainNodesConnectionInfoArray and BlockchainNodesConnectionInfoArrayOutput values.
// You can construct a concrete instance of `BlockchainNodesConnectionInfoArrayInput` via:
//
//	BlockchainNodesConnectionInfoArray{ BlockchainNodesConnectionInfoArgs{...} }
type BlockchainNodesConnectionInfoArrayInput interface {
	pulumi.Input

	ToBlockchainNodesConnectionInfoArrayOutput() BlockchainNodesConnectionInfoArrayOutput
	ToBlockchainNodesConnectionInfoArrayOutputWithContext(context.Context) BlockchainNodesConnectionInfoArrayOutput
}

type BlockchainNodesConnectionInfoArray []BlockchainNodesConnectionInfoInput

func (BlockchainNodesConnectionInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BlockchainNodesConnectionInfo)(nil)).Elem()
}

func (i BlockchainNodesConnectionInfoArray) ToBlockchainNodesConnectionInfoArrayOutput() BlockchainNodesConnectionInfoArrayOutput {
	return i.ToBlockchainNodesConnectionInfoArrayOutputWithContext(context.Background())
}

func (i BlockchainNodesConnectionInfoArray) ToBlockchainNodesConnectionInfoArrayOutputWithContext(ctx context.Context) BlockchainNodesConnectionInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlockchainNodesConnectionInfoArrayOutput)
}

type BlockchainNodesConnectionInfoOutput struct{ *pulumi.OutputState }

func (BlockchainNodesConnectionInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlockchainNodesConnectionInfo)(nil)).Elem()
}

func (o BlockchainNodesConnectionInfoOutput) ToBlockchainNodesConnectionInfoOutput() BlockchainNodesConnectionInfoOutput {
	return o
}

func (o BlockchainNodesConnectionInfoOutput) ToBlockchainNodesConnectionInfoOutputWithContext(ctx context.Context) BlockchainNodesConnectionInfoOutput {
	return o
}

// (Output)
// The endpoint information through which to interact with a blockchain node.
// Structure is documented below.
func (o BlockchainNodesConnectionInfoOutput) EndpointInfos() BlockchainNodesConnectionInfoEndpointInfoArrayOutput {
	return o.ApplyT(func(v BlockchainNodesConnectionInfo) []BlockchainNodesConnectionInfoEndpointInfo {
		return v.EndpointInfos
	}).(BlockchainNodesConnectionInfoEndpointInfoArrayOutput)
}

// (Output)
// A service attachment that exposes a node, and has the following format: projects/{project}/regions/{region}/serviceAttachments/{service_attachment_name}
func (o BlockchainNodesConnectionInfoOutput) ServiceAttachment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlockchainNodesConnectionInfo) *string { return v.ServiceAttachment }).(pulumi.StringPtrOutput)
}

type BlockchainNodesConnectionInfoArrayOutput struct{ *pulumi.OutputState }

func (BlockchainNodesConnectionInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BlockchainNodesConnectionInfo)(nil)).Elem()
}

func (o BlockchainNodesConnectionInfoArrayOutput) ToBlockchainNodesConnectionInfoArrayOutput() BlockchainNodesConnectionInfoArrayOutput {
	return o
}

func (o BlockchainNodesConnectionInfoArrayOutput) ToBlockchainNodesConnectionInfoArrayOutputWithContext(ctx context.Context) BlockchainNodesConnectionInfoArrayOutput {
	return o
}

func (o BlockchainNodesConnectionInfoArrayOutput) Index(i pulumi.IntInput) BlockchainNodesConnectionInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BlockchainNodesConnectionInfo {
		return vs[0].([]BlockchainNodesConnectionInfo)[vs[1].(int)]
	}).(BlockchainNodesConnectionInfoOutput)
}

type BlockchainNodesConnectionInfoEndpointInfo struct {
	// (Output)
	// The assigned URL for the node JSON-RPC API endpoint.
	JsonRpcApiEndpoint *string `pulumi:"jsonRpcApiEndpoint"`
	// (Output)
	// The assigned URL for the node WebSockets API endpoint.
	WebsocketsApiEndpoint *string `pulumi:"websocketsApiEndpoint"`
}

// BlockchainNodesConnectionInfoEndpointInfoInput is an input type that accepts BlockchainNodesConnectionInfoEndpointInfoArgs and BlockchainNodesConnectionInfoEndpointInfoOutput values.
// You can construct a concrete instance of `BlockchainNodesConnectionInfoEndpointInfoInput` via:
//
//	BlockchainNodesConnectionInfoEndpointInfoArgs{...}
type BlockchainNodesConnectionInfoEndpointInfoInput interface {
	pulumi.Input

	ToBlockchainNodesConnectionInfoEndpointInfoOutput() BlockchainNodesConnectionInfoEndpointInfoOutput
	ToBlockchainNodesConnectionInfoEndpointInfoOutputWithContext(context.Context) BlockchainNodesConnectionInfoEndpointInfoOutput
}

type BlockchainNodesConnectionInfoEndpointInfoArgs struct {
	// (Output)
	// The assigned URL for the node JSON-RPC API endpoint.
	JsonRpcApiEndpoint pulumi.StringPtrInput `pulumi:"jsonRpcApiEndpoint"`
	// (Output)
	// The assigned URL for the node WebSockets API endpoint.
	WebsocketsApiEndpoint pulumi.StringPtrInput `pulumi:"websocketsApiEndpoint"`
}

func (BlockchainNodesConnectionInfoEndpointInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BlockchainNodesConnectionInfoEndpointInfo)(nil)).Elem()
}

func (i BlockchainNodesConnectionInfoEndpointInfoArgs) ToBlockchainNodesConnectionInfoEndpointInfoOutput() BlockchainNodesConnectionInfoEndpointInfoOutput {
	return i.ToBlockchainNodesConnectionInfoEndpointInfoOutputWithContext(context.Background())
}

func (i BlockchainNodesConnectionInfoEndpointInfoArgs) ToBlockchainNodesConnectionInfoEndpointInfoOutputWithContext(ctx context.Context) BlockchainNodesConnectionInfoEndpointInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlockchainNodesConnectionInfoEndpointInfoOutput)
}

// BlockchainNodesConnectionInfoEndpointInfoArrayInput is an input type that accepts BlockchainNodesConnectionInfoEndpointInfoArray and BlockchainNodesConnectionInfoEndpointInfoArrayOutput values.
// You can construct a concrete instance of `BlockchainNodesConnectionInfoEndpointInfoArrayInput` via:
//
//	BlockchainNodesConnectionInfoEndpointInfoArray{ BlockchainNodesConnectionInfoEndpointInfoArgs{...} }
type BlockchainNodesConnectionInfoEndpointInfoArrayInput interface {
	pulumi.Input

	ToBlockchainNodesConnectionInfoEndpointInfoArrayOutput() BlockchainNodesConnectionInfoEndpointInfoArrayOutput
	ToBlockchainNodesConnectionInfoEndpointInfoArrayOutputWithContext(context.Context) BlockchainNodesConnectionInfoEndpointInfoArrayOutput
}

type BlockchainNodesConnectionInfoEndpointInfoArray []BlockchainNodesConnectionInfoEndpointInfoInput

func (BlockchainNodesConnectionInfoEndpointInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BlockchainNodesConnectionInfoEndpointInfo)(nil)).Elem()
}

func (i BlockchainNodesConnectionInfoEndpointInfoArray) ToBlockchainNodesConnectionInfoEndpointInfoArrayOutput() BlockchainNodesConnectionInfoEndpointInfoArrayOutput {
	return i.ToBlockchainNodesConnectionInfoEndpointInfoArrayOutputWithContext(context.Background())
}

func (i BlockchainNodesConnectionInfoEndpointInfoArray) ToBlockchainNodesConnectionInfoEndpointInfoArrayOutputWithContext(ctx context.Context) BlockchainNodesConnectionInfoEndpointInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlockchainNodesConnectionInfoEndpointInfoArrayOutput)
}

type BlockchainNodesConnectionInfoEndpointInfoOutput struct{ *pulumi.OutputState }

func (BlockchainNodesConnectionInfoEndpointInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlockchainNodesConnectionInfoEndpointInfo)(nil)).Elem()
}

func (o BlockchainNodesConnectionInfoEndpointInfoOutput) ToBlockchainNodesConnectionInfoEndpointInfoOutput() BlockchainNodesConnectionInfoEndpointInfoOutput {
	return o
}

func (o BlockchainNodesConnectionInfoEndpointInfoOutput) ToBlockchainNodesConnectionInfoEndpointInfoOutputWithContext(ctx context.Context) BlockchainNodesConnectionInfoEndpointInfoOutput {
	return o
}

// (Output)
// The assigned URL for the node JSON-RPC API endpoint.
func (o BlockchainNodesConnectionInfoEndpointInfoOutput) JsonRpcApiEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlockchainNodesConnectionInfoEndpointInfo) *string { return v.JsonRpcApiEndpoint }).(pulumi.StringPtrOutput)
}

// (Output)
// The assigned URL for the node WebSockets API endpoint.
func (o BlockchainNodesConnectionInfoEndpointInfoOutput) WebsocketsApiEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlockchainNodesConnectionInfoEndpointInfo) *string { return v.WebsocketsApiEndpoint }).(pulumi.StringPtrOutput)
}

type BlockchainNodesConnectionInfoEndpointInfoArrayOutput struct{ *pulumi.OutputState }

func (BlockchainNodesConnectionInfoEndpointInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BlockchainNodesConnectionInfoEndpointInfo)(nil)).Elem()
}

func (o BlockchainNodesConnectionInfoEndpointInfoArrayOutput) ToBlockchainNodesConnectionInfoEndpointInfoArrayOutput() BlockchainNodesConnectionInfoEndpointInfoArrayOutput {
	return o
}

func (o BlockchainNodesConnectionInfoEndpointInfoArrayOutput) ToBlockchainNodesConnectionInfoEndpointInfoArrayOutputWithContext(ctx context.Context) BlockchainNodesConnectionInfoEndpointInfoArrayOutput {
	return o
}

func (o BlockchainNodesConnectionInfoEndpointInfoArrayOutput) Index(i pulumi.IntInput) BlockchainNodesConnectionInfoEndpointInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BlockchainNodesConnectionInfoEndpointInfo {
		return vs[0].([]BlockchainNodesConnectionInfoEndpointInfo)[vs[1].(int)]
	}).(BlockchainNodesConnectionInfoEndpointInfoOutput)
}

type BlockchainNodesEthereumDetails struct {
	// (Output)
	// User-provided key-value pairs
	// Structure is documented below.
	AdditionalEndpoints []BlockchainNodesEthereumDetailsAdditionalEndpoint `pulumi:"additionalEndpoints"`
	// Enables JSON-RPC access to functions in the admin namespace. Defaults to false.
	ApiEnableAdmin *bool `pulumi:"apiEnableAdmin"`
	// Enables JSON-RPC access to functions in the debug namespace. Defaults to false.
	ApiEnableDebug *bool `pulumi:"apiEnableDebug"`
	// The consensus client
	// Possible values are: `CONSENSUS_CLIENT_UNSPECIFIED`, `LIGHTHOUSE`.
	ConsensusClient *string `pulumi:"consensusClient"`
	// The execution client
	// Possible values are: `EXECUTION_CLIENT_UNSPECIFIED`, `GETH`, `ERIGON`.
	ExecutionClient *string `pulumi:"executionClient"`
	// User-provided key-value pairs
	// Structure is documented below.
	GethDetails *BlockchainNodesEthereumDetailsGethDetails `pulumi:"gethDetails"`
	// The Ethereum environment being accessed.
	// Possible values are: `MAINNET`, `TESTNET_GOERLI_PRATER`, `TESTNET_SEPOLIA`.
	Network *string `pulumi:"network"`
	// The type of Ethereum node.
	// Possible values are: `LIGHT`, `FULL`, `ARCHIVE`.
	NodeType *string `pulumi:"nodeType"`
	// Configuration for validator-related parameters on the beacon client, and for any managed validator client.
	// Structure is documented below.
	ValidatorConfig *BlockchainNodesEthereumDetailsValidatorConfig `pulumi:"validatorConfig"`
}

// BlockchainNodesEthereumDetailsInput is an input type that accepts BlockchainNodesEthereumDetailsArgs and BlockchainNodesEthereumDetailsOutput values.
// You can construct a concrete instance of `BlockchainNodesEthereumDetailsInput` via:
//
//	BlockchainNodesEthereumDetailsArgs{...}
type BlockchainNodesEthereumDetailsInput interface {
	pulumi.Input

	ToBlockchainNodesEthereumDetailsOutput() BlockchainNodesEthereumDetailsOutput
	ToBlockchainNodesEthereumDetailsOutputWithContext(context.Context) BlockchainNodesEthereumDetailsOutput
}

type BlockchainNodesEthereumDetailsArgs struct {
	// (Output)
	// User-provided key-value pairs
	// Structure is documented below.
	AdditionalEndpoints BlockchainNodesEthereumDetailsAdditionalEndpointArrayInput `pulumi:"additionalEndpoints"`
	// Enables JSON-RPC access to functions in the admin namespace. Defaults to false.
	ApiEnableAdmin pulumi.BoolPtrInput `pulumi:"apiEnableAdmin"`
	// Enables JSON-RPC access to functions in the debug namespace. Defaults to false.
	ApiEnableDebug pulumi.BoolPtrInput `pulumi:"apiEnableDebug"`
	// The consensus client
	// Possible values are: `CONSENSUS_CLIENT_UNSPECIFIED`, `LIGHTHOUSE`.
	ConsensusClient pulumi.StringPtrInput `pulumi:"consensusClient"`
	// The execution client
	// Possible values are: `EXECUTION_CLIENT_UNSPECIFIED`, `GETH`, `ERIGON`.
	ExecutionClient pulumi.StringPtrInput `pulumi:"executionClient"`
	// User-provided key-value pairs
	// Structure is documented below.
	GethDetails BlockchainNodesEthereumDetailsGethDetailsPtrInput `pulumi:"gethDetails"`
	// The Ethereum environment being accessed.
	// Possible values are: `MAINNET`, `TESTNET_GOERLI_PRATER`, `TESTNET_SEPOLIA`.
	Network pulumi.StringPtrInput `pulumi:"network"`
	// The type of Ethereum node.
	// Possible values are: `LIGHT`, `FULL`, `ARCHIVE`.
	NodeType pulumi.StringPtrInput `pulumi:"nodeType"`
	// Configuration for validator-related parameters on the beacon client, and for any managed validator client.
	// Structure is documented below.
	ValidatorConfig BlockchainNodesEthereumDetailsValidatorConfigPtrInput `pulumi:"validatorConfig"`
}

func (BlockchainNodesEthereumDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BlockchainNodesEthereumDetails)(nil)).Elem()
}

func (i BlockchainNodesEthereumDetailsArgs) ToBlockchainNodesEthereumDetailsOutput() BlockchainNodesEthereumDetailsOutput {
	return i.ToBlockchainNodesEthereumDetailsOutputWithContext(context.Background())
}

func (i BlockchainNodesEthereumDetailsArgs) ToBlockchainNodesEthereumDetailsOutputWithContext(ctx context.Context) BlockchainNodesEthereumDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlockchainNodesEthereumDetailsOutput)
}

func (i BlockchainNodesEthereumDetailsArgs) ToBlockchainNodesEthereumDetailsPtrOutput() BlockchainNodesEthereumDetailsPtrOutput {
	return i.ToBlockchainNodesEthereumDetailsPtrOutputWithContext(context.Background())
}

func (i BlockchainNodesEthereumDetailsArgs) ToBlockchainNodesEthereumDetailsPtrOutputWithContext(ctx context.Context) BlockchainNodesEthereumDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlockchainNodesEthereumDetailsOutput).ToBlockchainNodesEthereumDetailsPtrOutputWithContext(ctx)
}

// BlockchainNodesEthereumDetailsPtrInput is an input type that accepts BlockchainNodesEthereumDetailsArgs, BlockchainNodesEthereumDetailsPtr and BlockchainNodesEthereumDetailsPtrOutput values.
// You can construct a concrete instance of `BlockchainNodesEthereumDetailsPtrInput` via:
//
//	        BlockchainNodesEthereumDetailsArgs{...}
//
//	or:
//
//	        nil
type BlockchainNodesEthereumDetailsPtrInput interface {
	pulumi.Input

	ToBlockchainNodesEthereumDetailsPtrOutput() BlockchainNodesEthereumDetailsPtrOutput
	ToBlockchainNodesEthereumDetailsPtrOutputWithContext(context.Context) BlockchainNodesEthereumDetailsPtrOutput
}

type blockchainNodesEthereumDetailsPtrType BlockchainNodesEthereumDetailsArgs

func BlockchainNodesEthereumDetailsPtr(v *BlockchainNodesEthereumDetailsArgs) BlockchainNodesEthereumDetailsPtrInput {
	return (*blockchainNodesEthereumDetailsPtrType)(v)
}

func (*blockchainNodesEthereumDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BlockchainNodesEthereumDetails)(nil)).Elem()
}

func (i *blockchainNodesEthereumDetailsPtrType) ToBlockchainNodesEthereumDetailsPtrOutput() BlockchainNodesEthereumDetailsPtrOutput {
	return i.ToBlockchainNodesEthereumDetailsPtrOutputWithContext(context.Background())
}

func (i *blockchainNodesEthereumDetailsPtrType) ToBlockchainNodesEthereumDetailsPtrOutputWithContext(ctx context.Context) BlockchainNodesEthereumDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlockchainNodesEthereumDetailsPtrOutput)
}

type BlockchainNodesEthereumDetailsOutput struct{ *pulumi.OutputState }

func (BlockchainNodesEthereumDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlockchainNodesEthereumDetails)(nil)).Elem()
}

func (o BlockchainNodesEthereumDetailsOutput) ToBlockchainNodesEthereumDetailsOutput() BlockchainNodesEthereumDetailsOutput {
	return o
}

func (o BlockchainNodesEthereumDetailsOutput) ToBlockchainNodesEthereumDetailsOutputWithContext(ctx context.Context) BlockchainNodesEthereumDetailsOutput {
	return o
}

func (o BlockchainNodesEthereumDetailsOutput) ToBlockchainNodesEthereumDetailsPtrOutput() BlockchainNodesEthereumDetailsPtrOutput {
	return o.ToBlockchainNodesEthereumDetailsPtrOutputWithContext(context.Background())
}

func (o BlockchainNodesEthereumDetailsOutput) ToBlockchainNodesEthereumDetailsPtrOutputWithContext(ctx context.Context) BlockchainNodesEthereumDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BlockchainNodesEthereumDetails) *BlockchainNodesEthereumDetails {
		return &v
	}).(BlockchainNodesEthereumDetailsPtrOutput)
}

// (Output)
// User-provided key-value pairs
// Structure is documented below.
func (o BlockchainNodesEthereumDetailsOutput) AdditionalEndpoints() BlockchainNodesEthereumDetailsAdditionalEndpointArrayOutput {
	return o.ApplyT(func(v BlockchainNodesEthereumDetails) []BlockchainNodesEthereumDetailsAdditionalEndpoint {
		return v.AdditionalEndpoints
	}).(BlockchainNodesEthereumDetailsAdditionalEndpointArrayOutput)
}

// Enables JSON-RPC access to functions in the admin namespace. Defaults to false.
func (o BlockchainNodesEthereumDetailsOutput) ApiEnableAdmin() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BlockchainNodesEthereumDetails) *bool { return v.ApiEnableAdmin }).(pulumi.BoolPtrOutput)
}

// Enables JSON-RPC access to functions in the debug namespace. Defaults to false.
func (o BlockchainNodesEthereumDetailsOutput) ApiEnableDebug() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BlockchainNodesEthereumDetails) *bool { return v.ApiEnableDebug }).(pulumi.BoolPtrOutput)
}

// The consensus client
// Possible values are: `CONSENSUS_CLIENT_UNSPECIFIED`, `LIGHTHOUSE`.
func (o BlockchainNodesEthereumDetailsOutput) ConsensusClient() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlockchainNodesEthereumDetails) *string { return v.ConsensusClient }).(pulumi.StringPtrOutput)
}

// The execution client
// Possible values are: `EXECUTION_CLIENT_UNSPECIFIED`, `GETH`, `ERIGON`.
func (o BlockchainNodesEthereumDetailsOutput) ExecutionClient() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlockchainNodesEthereumDetails) *string { return v.ExecutionClient }).(pulumi.StringPtrOutput)
}

// User-provided key-value pairs
// Structure is documented below.
func (o BlockchainNodesEthereumDetailsOutput) GethDetails() BlockchainNodesEthereumDetailsGethDetailsPtrOutput {
	return o.ApplyT(func(v BlockchainNodesEthereumDetails) *BlockchainNodesEthereumDetailsGethDetails {
		return v.GethDetails
	}).(BlockchainNodesEthereumDetailsGethDetailsPtrOutput)
}

// The Ethereum environment being accessed.
// Possible values are: `MAINNET`, `TESTNET_GOERLI_PRATER`, `TESTNET_SEPOLIA`.
func (o BlockchainNodesEthereumDetailsOutput) Network() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlockchainNodesEthereumDetails) *string { return v.Network }).(pulumi.StringPtrOutput)
}

// The type of Ethereum node.
// Possible values are: `LIGHT`, `FULL`, `ARCHIVE`.
func (o BlockchainNodesEthereumDetailsOutput) NodeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlockchainNodesEthereumDetails) *string { return v.NodeType }).(pulumi.StringPtrOutput)
}

// Configuration for validator-related parameters on the beacon client, and for any managed validator client.
// Structure is documented below.
func (o BlockchainNodesEthereumDetailsOutput) ValidatorConfig() BlockchainNodesEthereumDetailsValidatorConfigPtrOutput {
	return o.ApplyT(func(v BlockchainNodesEthereumDetails) *BlockchainNodesEthereumDetailsValidatorConfig {
		return v.ValidatorConfig
	}).(BlockchainNodesEthereumDetailsValidatorConfigPtrOutput)
}

type BlockchainNodesEthereumDetailsPtrOutput struct{ *pulumi.OutputState }

func (BlockchainNodesEthereumDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BlockchainNodesEthereumDetails)(nil)).Elem()
}

func (o BlockchainNodesEthereumDetailsPtrOutput) ToBlockchainNodesEthereumDetailsPtrOutput() BlockchainNodesEthereumDetailsPtrOutput {
	return o
}

func (o BlockchainNodesEthereumDetailsPtrOutput) ToBlockchainNodesEthereumDetailsPtrOutputWithContext(ctx context.Context) BlockchainNodesEthereumDetailsPtrOutput {
	return o
}

func (o BlockchainNodesEthereumDetailsPtrOutput) Elem() BlockchainNodesEthereumDetailsOutput {
	return o.ApplyT(func(v *BlockchainNodesEthereumDetails) BlockchainNodesEthereumDetails {
		if v != nil {
			return *v
		}
		var ret BlockchainNodesEthereumDetails
		return ret
	}).(BlockchainNodesEthereumDetailsOutput)
}

// (Output)
// User-provided key-value pairs
// Structure is documented below.
func (o BlockchainNodesEthereumDetailsPtrOutput) AdditionalEndpoints() BlockchainNodesEthereumDetailsAdditionalEndpointArrayOutput {
	return o.ApplyT(func(v *BlockchainNodesEthereumDetails) []BlockchainNodesEthereumDetailsAdditionalEndpoint {
		if v == nil {
			return nil
		}
		return v.AdditionalEndpoints
	}).(BlockchainNodesEthereumDetailsAdditionalEndpointArrayOutput)
}

// Enables JSON-RPC access to functions in the admin namespace. Defaults to false.
func (o BlockchainNodesEthereumDetailsPtrOutput) ApiEnableAdmin() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BlockchainNodesEthereumDetails) *bool {
		if v == nil {
			return nil
		}
		return v.ApiEnableAdmin
	}).(pulumi.BoolPtrOutput)
}

// Enables JSON-RPC access to functions in the debug namespace. Defaults to false.
func (o BlockchainNodesEthereumDetailsPtrOutput) ApiEnableDebug() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BlockchainNodesEthereumDetails) *bool {
		if v == nil {
			return nil
		}
		return v.ApiEnableDebug
	}).(pulumi.BoolPtrOutput)
}

// The consensus client
// Possible values are: `CONSENSUS_CLIENT_UNSPECIFIED`, `LIGHTHOUSE`.
func (o BlockchainNodesEthereumDetailsPtrOutput) ConsensusClient() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BlockchainNodesEthereumDetails) *string {
		if v == nil {
			return nil
		}
		return v.ConsensusClient
	}).(pulumi.StringPtrOutput)
}

// The execution client
// Possible values are: `EXECUTION_CLIENT_UNSPECIFIED`, `GETH`, `ERIGON`.
func (o BlockchainNodesEthereumDetailsPtrOutput) ExecutionClient() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BlockchainNodesEthereumDetails) *string {
		if v == nil {
			return nil
		}
		return v.ExecutionClient
	}).(pulumi.StringPtrOutput)
}

// User-provided key-value pairs
// Structure is documented below.
func (o BlockchainNodesEthereumDetailsPtrOutput) GethDetails() BlockchainNodesEthereumDetailsGethDetailsPtrOutput {
	return o.ApplyT(func(v *BlockchainNodesEthereumDetails) *BlockchainNodesEthereumDetailsGethDetails {
		if v == nil {
			return nil
		}
		return v.GethDetails
	}).(BlockchainNodesEthereumDetailsGethDetailsPtrOutput)
}

// The Ethereum environment being accessed.
// Possible values are: `MAINNET`, `TESTNET_GOERLI_PRATER`, `TESTNET_SEPOLIA`.
func (o BlockchainNodesEthereumDetailsPtrOutput) Network() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BlockchainNodesEthereumDetails) *string {
		if v == nil {
			return nil
		}
		return v.Network
	}).(pulumi.StringPtrOutput)
}

// The type of Ethereum node.
// Possible values are: `LIGHT`, `FULL`, `ARCHIVE`.
func (o BlockchainNodesEthereumDetailsPtrOutput) NodeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BlockchainNodesEthereumDetails) *string {
		if v == nil {
			return nil
		}
		return v.NodeType
	}).(pulumi.StringPtrOutput)
}

// Configuration for validator-related parameters on the beacon client, and for any managed validator client.
// Structure is documented below.
func (o BlockchainNodesEthereumDetailsPtrOutput) ValidatorConfig() BlockchainNodesEthereumDetailsValidatorConfigPtrOutput {
	return o.ApplyT(func(v *BlockchainNodesEthereumDetails) *BlockchainNodesEthereumDetailsValidatorConfig {
		if v == nil {
			return nil
		}
		return v.ValidatorConfig
	}).(BlockchainNodesEthereumDetailsValidatorConfigPtrOutput)
}

type BlockchainNodesEthereumDetailsAdditionalEndpoint struct {
	// The assigned URL for the node's Beacon API endpoint.
	BeaconApiEndpoint *string `pulumi:"beaconApiEndpoint"`
	// The assigned URL for the node's Beacon Prometheus metrics endpoint.
	BeaconPrometheusMetricsApiEndpoint *string `pulumi:"beaconPrometheusMetricsApiEndpoint"`
	// The assigned URL for the node's execution client's Prometheus metrics endpoint.
	ExecutionClientPrometheusMetricsApiEndpoint *string `pulumi:"executionClientPrometheusMetricsApiEndpoint"`
}

// BlockchainNodesEthereumDetailsAdditionalEndpointInput is an input type that accepts BlockchainNodesEthereumDetailsAdditionalEndpointArgs and BlockchainNodesEthereumDetailsAdditionalEndpointOutput values.
// You can construct a concrete instance of `BlockchainNodesEthereumDetailsAdditionalEndpointInput` via:
//
//	BlockchainNodesEthereumDetailsAdditionalEndpointArgs{...}
type BlockchainNodesEthereumDetailsAdditionalEndpointInput interface {
	pulumi.Input

	ToBlockchainNodesEthereumDetailsAdditionalEndpointOutput() BlockchainNodesEthereumDetailsAdditionalEndpointOutput
	ToBlockchainNodesEthereumDetailsAdditionalEndpointOutputWithContext(context.Context) BlockchainNodesEthereumDetailsAdditionalEndpointOutput
}

type BlockchainNodesEthereumDetailsAdditionalEndpointArgs struct {
	// The assigned URL for the node's Beacon API endpoint.
	BeaconApiEndpoint pulumi.StringPtrInput `pulumi:"beaconApiEndpoint"`
	// The assigned URL for the node's Beacon Prometheus metrics endpoint.
	BeaconPrometheusMetricsApiEndpoint pulumi.StringPtrInput `pulumi:"beaconPrometheusMetricsApiEndpoint"`
	// The assigned URL for the node's execution client's Prometheus metrics endpoint.
	ExecutionClientPrometheusMetricsApiEndpoint pulumi.StringPtrInput `pulumi:"executionClientPrometheusMetricsApiEndpoint"`
}

func (BlockchainNodesEthereumDetailsAdditionalEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BlockchainNodesEthereumDetailsAdditionalEndpoint)(nil)).Elem()
}

func (i BlockchainNodesEthereumDetailsAdditionalEndpointArgs) ToBlockchainNodesEthereumDetailsAdditionalEndpointOutput() BlockchainNodesEthereumDetailsAdditionalEndpointOutput {
	return i.ToBlockchainNodesEthereumDetailsAdditionalEndpointOutputWithContext(context.Background())
}

func (i BlockchainNodesEthereumDetailsAdditionalEndpointArgs) ToBlockchainNodesEthereumDetailsAdditionalEndpointOutputWithContext(ctx context.Context) BlockchainNodesEthereumDetailsAdditionalEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlockchainNodesEthereumDetailsAdditionalEndpointOutput)
}

// BlockchainNodesEthereumDetailsAdditionalEndpointArrayInput is an input type that accepts BlockchainNodesEthereumDetailsAdditionalEndpointArray and BlockchainNodesEthereumDetailsAdditionalEndpointArrayOutput values.
// You can construct a concrete instance of `BlockchainNodesEthereumDetailsAdditionalEndpointArrayInput` via:
//
//	BlockchainNodesEthereumDetailsAdditionalEndpointArray{ BlockchainNodesEthereumDetailsAdditionalEndpointArgs{...} }
type BlockchainNodesEthereumDetailsAdditionalEndpointArrayInput interface {
	pulumi.Input

	ToBlockchainNodesEthereumDetailsAdditionalEndpointArrayOutput() BlockchainNodesEthereumDetailsAdditionalEndpointArrayOutput
	ToBlockchainNodesEthereumDetailsAdditionalEndpointArrayOutputWithContext(context.Context) BlockchainNodesEthereumDetailsAdditionalEndpointArrayOutput
}

type BlockchainNodesEthereumDetailsAdditionalEndpointArray []BlockchainNodesEthereumDetailsAdditionalEndpointInput

func (BlockchainNodesEthereumDetailsAdditionalEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BlockchainNodesEthereumDetailsAdditionalEndpoint)(nil)).Elem()
}

func (i BlockchainNodesEthereumDetailsAdditionalEndpointArray) ToBlockchainNodesEthereumDetailsAdditionalEndpointArrayOutput() BlockchainNodesEthereumDetailsAdditionalEndpointArrayOutput {
	return i.ToBlockchainNodesEthereumDetailsAdditionalEndpointArrayOutputWithContext(context.Background())
}

func (i BlockchainNodesEthereumDetailsAdditionalEndpointArray) ToBlockchainNodesEthereumDetailsAdditionalEndpointArrayOutputWithContext(ctx context.Context) BlockchainNodesEthereumDetailsAdditionalEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlockchainNodesEthereumDetailsAdditionalEndpointArrayOutput)
}

type BlockchainNodesEthereumDetailsAdditionalEndpointOutput struct{ *pulumi.OutputState }

func (BlockchainNodesEthereumDetailsAdditionalEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlockchainNodesEthereumDetailsAdditionalEndpoint)(nil)).Elem()
}

func (o BlockchainNodesEthereumDetailsAdditionalEndpointOutput) ToBlockchainNodesEthereumDetailsAdditionalEndpointOutput() BlockchainNodesEthereumDetailsAdditionalEndpointOutput {
	return o
}

func (o BlockchainNodesEthereumDetailsAdditionalEndpointOutput) ToBlockchainNodesEthereumDetailsAdditionalEndpointOutputWithContext(ctx context.Context) BlockchainNodesEthereumDetailsAdditionalEndpointOutput {
	return o
}

// The assigned URL for the node's Beacon API endpoint.
func (o BlockchainNodesEthereumDetailsAdditionalEndpointOutput) BeaconApiEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlockchainNodesEthereumDetailsAdditionalEndpoint) *string { return v.BeaconApiEndpoint }).(pulumi.StringPtrOutput)
}

// The assigned URL for the node's Beacon Prometheus metrics endpoint.
func (o BlockchainNodesEthereumDetailsAdditionalEndpointOutput) BeaconPrometheusMetricsApiEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlockchainNodesEthereumDetailsAdditionalEndpoint) *string {
		return v.BeaconPrometheusMetricsApiEndpoint
	}).(pulumi.StringPtrOutput)
}

// The assigned URL for the node's execution client's Prometheus metrics endpoint.
func (o BlockchainNodesEthereumDetailsAdditionalEndpointOutput) ExecutionClientPrometheusMetricsApiEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlockchainNodesEthereumDetailsAdditionalEndpoint) *string {
		return v.ExecutionClientPrometheusMetricsApiEndpoint
	}).(pulumi.StringPtrOutput)
}

type BlockchainNodesEthereumDetailsAdditionalEndpointArrayOutput struct{ *pulumi.OutputState }

func (BlockchainNodesEthereumDetailsAdditionalEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BlockchainNodesEthereumDetailsAdditionalEndpoint)(nil)).Elem()
}

func (o BlockchainNodesEthereumDetailsAdditionalEndpointArrayOutput) ToBlockchainNodesEthereumDetailsAdditionalEndpointArrayOutput() BlockchainNodesEthereumDetailsAdditionalEndpointArrayOutput {
	return o
}

func (o BlockchainNodesEthereumDetailsAdditionalEndpointArrayOutput) ToBlockchainNodesEthereumDetailsAdditionalEndpointArrayOutputWithContext(ctx context.Context) BlockchainNodesEthereumDetailsAdditionalEndpointArrayOutput {
	return o
}

func (o BlockchainNodesEthereumDetailsAdditionalEndpointArrayOutput) Index(i pulumi.IntInput) BlockchainNodesEthereumDetailsAdditionalEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BlockchainNodesEthereumDetailsAdditionalEndpoint {
		return vs[0].([]BlockchainNodesEthereumDetailsAdditionalEndpoint)[vs[1].(int)]
	}).(BlockchainNodesEthereumDetailsAdditionalEndpointOutput)
}

type BlockchainNodesEthereumDetailsGethDetails struct {
	// Blockchain garbage collection modes. Only applicable when NodeType is FULL or ARCHIVE.
	// Possible values are: `FULL`, `ARCHIVE`.
	//
	// <a name="nestedAdditionalEndpoints"></a>The `additionalEndpoints` block contains:
	GarbageCollectionMode *string `pulumi:"garbageCollectionMode"`
}

// BlockchainNodesEthereumDetailsGethDetailsInput is an input type that accepts BlockchainNodesEthereumDetailsGethDetailsArgs and BlockchainNodesEthereumDetailsGethDetailsOutput values.
// You can construct a concrete instance of `BlockchainNodesEthereumDetailsGethDetailsInput` via:
//
//	BlockchainNodesEthereumDetailsGethDetailsArgs{...}
type BlockchainNodesEthereumDetailsGethDetailsInput interface {
	pulumi.Input

	ToBlockchainNodesEthereumDetailsGethDetailsOutput() BlockchainNodesEthereumDetailsGethDetailsOutput
	ToBlockchainNodesEthereumDetailsGethDetailsOutputWithContext(context.Context) BlockchainNodesEthereumDetailsGethDetailsOutput
}

type BlockchainNodesEthereumDetailsGethDetailsArgs struct {
	// Blockchain garbage collection modes. Only applicable when NodeType is FULL or ARCHIVE.
	// Possible values are: `FULL`, `ARCHIVE`.
	//
	// <a name="nestedAdditionalEndpoints"></a>The `additionalEndpoints` block contains:
	GarbageCollectionMode pulumi.StringPtrInput `pulumi:"garbageCollectionMode"`
}

func (BlockchainNodesEthereumDetailsGethDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BlockchainNodesEthereumDetailsGethDetails)(nil)).Elem()
}

func (i BlockchainNodesEthereumDetailsGethDetailsArgs) ToBlockchainNodesEthereumDetailsGethDetailsOutput() BlockchainNodesEthereumDetailsGethDetailsOutput {
	return i.ToBlockchainNodesEthereumDetailsGethDetailsOutputWithContext(context.Background())
}

func (i BlockchainNodesEthereumDetailsGethDetailsArgs) ToBlockchainNodesEthereumDetailsGethDetailsOutputWithContext(ctx context.Context) BlockchainNodesEthereumDetailsGethDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlockchainNodesEthereumDetailsGethDetailsOutput)
}

func (i BlockchainNodesEthereumDetailsGethDetailsArgs) ToBlockchainNodesEthereumDetailsGethDetailsPtrOutput() BlockchainNodesEthereumDetailsGethDetailsPtrOutput {
	return i.ToBlockchainNodesEthereumDetailsGethDetailsPtrOutputWithContext(context.Background())
}

func (i BlockchainNodesEthereumDetailsGethDetailsArgs) ToBlockchainNodesEthereumDetailsGethDetailsPtrOutputWithContext(ctx context.Context) BlockchainNodesEthereumDetailsGethDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlockchainNodesEthereumDetailsGethDetailsOutput).ToBlockchainNodesEthereumDetailsGethDetailsPtrOutputWithContext(ctx)
}

// BlockchainNodesEthereumDetailsGethDetailsPtrInput is an input type that accepts BlockchainNodesEthereumDetailsGethDetailsArgs, BlockchainNodesEthereumDetailsGethDetailsPtr and BlockchainNodesEthereumDetailsGethDetailsPtrOutput values.
// You can construct a concrete instance of `BlockchainNodesEthereumDetailsGethDetailsPtrInput` via:
//
//	        BlockchainNodesEthereumDetailsGethDetailsArgs{...}
//
//	or:
//
//	        nil
type BlockchainNodesEthereumDetailsGethDetailsPtrInput interface {
	pulumi.Input

	ToBlockchainNodesEthereumDetailsGethDetailsPtrOutput() BlockchainNodesEthereumDetailsGethDetailsPtrOutput
	ToBlockchainNodesEthereumDetailsGethDetailsPtrOutputWithContext(context.Context) BlockchainNodesEthereumDetailsGethDetailsPtrOutput
}

type blockchainNodesEthereumDetailsGethDetailsPtrType BlockchainNodesEthereumDetailsGethDetailsArgs

func BlockchainNodesEthereumDetailsGethDetailsPtr(v *BlockchainNodesEthereumDetailsGethDetailsArgs) BlockchainNodesEthereumDetailsGethDetailsPtrInput {
	return (*blockchainNodesEthereumDetailsGethDetailsPtrType)(v)
}

func (*blockchainNodesEthereumDetailsGethDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BlockchainNodesEthereumDetailsGethDetails)(nil)).Elem()
}

func (i *blockchainNodesEthereumDetailsGethDetailsPtrType) ToBlockchainNodesEthereumDetailsGethDetailsPtrOutput() BlockchainNodesEthereumDetailsGethDetailsPtrOutput {
	return i.ToBlockchainNodesEthereumDetailsGethDetailsPtrOutputWithContext(context.Background())
}

func (i *blockchainNodesEthereumDetailsGethDetailsPtrType) ToBlockchainNodesEthereumDetailsGethDetailsPtrOutputWithContext(ctx context.Context) BlockchainNodesEthereumDetailsGethDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlockchainNodesEthereumDetailsGethDetailsPtrOutput)
}

type BlockchainNodesEthereumDetailsGethDetailsOutput struct{ *pulumi.OutputState }

func (BlockchainNodesEthereumDetailsGethDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlockchainNodesEthereumDetailsGethDetails)(nil)).Elem()
}

func (o BlockchainNodesEthereumDetailsGethDetailsOutput) ToBlockchainNodesEthereumDetailsGethDetailsOutput() BlockchainNodesEthereumDetailsGethDetailsOutput {
	return o
}

func (o BlockchainNodesEthereumDetailsGethDetailsOutput) ToBlockchainNodesEthereumDetailsGethDetailsOutputWithContext(ctx context.Context) BlockchainNodesEthereumDetailsGethDetailsOutput {
	return o
}

func (o BlockchainNodesEthereumDetailsGethDetailsOutput) ToBlockchainNodesEthereumDetailsGethDetailsPtrOutput() BlockchainNodesEthereumDetailsGethDetailsPtrOutput {
	return o.ToBlockchainNodesEthereumDetailsGethDetailsPtrOutputWithContext(context.Background())
}

func (o BlockchainNodesEthereumDetailsGethDetailsOutput) ToBlockchainNodesEthereumDetailsGethDetailsPtrOutputWithContext(ctx context.Context) BlockchainNodesEthereumDetailsGethDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BlockchainNodesEthereumDetailsGethDetails) *BlockchainNodesEthereumDetailsGethDetails {
		return &v
	}).(BlockchainNodesEthereumDetailsGethDetailsPtrOutput)
}

// Blockchain garbage collection modes. Only applicable when NodeType is FULL or ARCHIVE.
// Possible values are: `FULL`, `ARCHIVE`.
//
// <a name="nestedAdditionalEndpoints"></a>The `additionalEndpoints` block contains:
func (o BlockchainNodesEthereumDetailsGethDetailsOutput) GarbageCollectionMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlockchainNodesEthereumDetailsGethDetails) *string { return v.GarbageCollectionMode }).(pulumi.StringPtrOutput)
}

type BlockchainNodesEthereumDetailsGethDetailsPtrOutput struct{ *pulumi.OutputState }

func (BlockchainNodesEthereumDetailsGethDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BlockchainNodesEthereumDetailsGethDetails)(nil)).Elem()
}

func (o BlockchainNodesEthereumDetailsGethDetailsPtrOutput) ToBlockchainNodesEthereumDetailsGethDetailsPtrOutput() BlockchainNodesEthereumDetailsGethDetailsPtrOutput {
	return o
}

func (o BlockchainNodesEthereumDetailsGethDetailsPtrOutput) ToBlockchainNodesEthereumDetailsGethDetailsPtrOutputWithContext(ctx context.Context) BlockchainNodesEthereumDetailsGethDetailsPtrOutput {
	return o
}

func (o BlockchainNodesEthereumDetailsGethDetailsPtrOutput) Elem() BlockchainNodesEthereumDetailsGethDetailsOutput {
	return o.ApplyT(func(v *BlockchainNodesEthereumDetailsGethDetails) BlockchainNodesEthereumDetailsGethDetails {
		if v != nil {
			return *v
		}
		var ret BlockchainNodesEthereumDetailsGethDetails
		return ret
	}).(BlockchainNodesEthereumDetailsGethDetailsOutput)
}

// Blockchain garbage collection modes. Only applicable when NodeType is FULL or ARCHIVE.
// Possible values are: `FULL`, `ARCHIVE`.
//
// <a name="nestedAdditionalEndpoints"></a>The `additionalEndpoints` block contains:
func (o BlockchainNodesEthereumDetailsGethDetailsPtrOutput) GarbageCollectionMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BlockchainNodesEthereumDetailsGethDetails) *string {
		if v == nil {
			return nil
		}
		return v.GarbageCollectionMode
	}).(pulumi.StringPtrOutput)
}

type BlockchainNodesEthereumDetailsValidatorConfig struct {
	// URLs for MEV-relay services to use for block building. When set, a managed MEV-boost service is configured on the beacon client.
	MevRelayUrls []string `pulumi:"mevRelayUrls"`
}

// BlockchainNodesEthereumDetailsValidatorConfigInput is an input type that accepts BlockchainNodesEthereumDetailsValidatorConfigArgs and BlockchainNodesEthereumDetailsValidatorConfigOutput values.
// You can construct a concrete instance of `BlockchainNodesEthereumDetailsValidatorConfigInput` via:
//
//	BlockchainNodesEthereumDetailsValidatorConfigArgs{...}
type BlockchainNodesEthereumDetailsValidatorConfigInput interface {
	pulumi.Input

	ToBlockchainNodesEthereumDetailsValidatorConfigOutput() BlockchainNodesEthereumDetailsValidatorConfigOutput
	ToBlockchainNodesEthereumDetailsValidatorConfigOutputWithContext(context.Context) BlockchainNodesEthereumDetailsValidatorConfigOutput
}

type BlockchainNodesEthereumDetailsValidatorConfigArgs struct {
	// URLs for MEV-relay services to use for block building. When set, a managed MEV-boost service is configured on the beacon client.
	MevRelayUrls pulumi.StringArrayInput `pulumi:"mevRelayUrls"`
}

func (BlockchainNodesEthereumDetailsValidatorConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BlockchainNodesEthereumDetailsValidatorConfig)(nil)).Elem()
}

func (i BlockchainNodesEthereumDetailsValidatorConfigArgs) ToBlockchainNodesEthereumDetailsValidatorConfigOutput() BlockchainNodesEthereumDetailsValidatorConfigOutput {
	return i.ToBlockchainNodesEthereumDetailsValidatorConfigOutputWithContext(context.Background())
}

func (i BlockchainNodesEthereumDetailsValidatorConfigArgs) ToBlockchainNodesEthereumDetailsValidatorConfigOutputWithContext(ctx context.Context) BlockchainNodesEthereumDetailsValidatorConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlockchainNodesEthereumDetailsValidatorConfigOutput)
}

func (i BlockchainNodesEthereumDetailsValidatorConfigArgs) ToBlockchainNodesEthereumDetailsValidatorConfigPtrOutput() BlockchainNodesEthereumDetailsValidatorConfigPtrOutput {
	return i.ToBlockchainNodesEthereumDetailsValidatorConfigPtrOutputWithContext(context.Background())
}

func (i BlockchainNodesEthereumDetailsValidatorConfigArgs) ToBlockchainNodesEthereumDetailsValidatorConfigPtrOutputWithContext(ctx context.Context) BlockchainNodesEthereumDetailsValidatorConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlockchainNodesEthereumDetailsValidatorConfigOutput).ToBlockchainNodesEthereumDetailsValidatorConfigPtrOutputWithContext(ctx)
}

// BlockchainNodesEthereumDetailsValidatorConfigPtrInput is an input type that accepts BlockchainNodesEthereumDetailsValidatorConfigArgs, BlockchainNodesEthereumDetailsValidatorConfigPtr and BlockchainNodesEthereumDetailsValidatorConfigPtrOutput values.
// You can construct a concrete instance of `BlockchainNodesEthereumDetailsValidatorConfigPtrInput` via:
//
//	        BlockchainNodesEthereumDetailsValidatorConfigArgs{...}
//
//	or:
//
//	        nil
type BlockchainNodesEthereumDetailsValidatorConfigPtrInput interface {
	pulumi.Input

	ToBlockchainNodesEthereumDetailsValidatorConfigPtrOutput() BlockchainNodesEthereumDetailsValidatorConfigPtrOutput
	ToBlockchainNodesEthereumDetailsValidatorConfigPtrOutputWithContext(context.Context) BlockchainNodesEthereumDetailsValidatorConfigPtrOutput
}

type blockchainNodesEthereumDetailsValidatorConfigPtrType BlockchainNodesEthereumDetailsValidatorConfigArgs

func BlockchainNodesEthereumDetailsValidatorConfigPtr(v *BlockchainNodesEthereumDetailsValidatorConfigArgs) BlockchainNodesEthereumDetailsValidatorConfigPtrInput {
	return (*blockchainNodesEthereumDetailsValidatorConfigPtrType)(v)
}

func (*blockchainNodesEthereumDetailsValidatorConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BlockchainNodesEthereumDetailsValidatorConfig)(nil)).Elem()
}

func (i *blockchainNodesEthereumDetailsValidatorConfigPtrType) ToBlockchainNodesEthereumDetailsValidatorConfigPtrOutput() BlockchainNodesEthereumDetailsValidatorConfigPtrOutput {
	return i.ToBlockchainNodesEthereumDetailsValidatorConfigPtrOutputWithContext(context.Background())
}

func (i *blockchainNodesEthereumDetailsValidatorConfigPtrType) ToBlockchainNodesEthereumDetailsValidatorConfigPtrOutputWithContext(ctx context.Context) BlockchainNodesEthereumDetailsValidatorConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlockchainNodesEthereumDetailsValidatorConfigPtrOutput)
}

type BlockchainNodesEthereumDetailsValidatorConfigOutput struct{ *pulumi.OutputState }

func (BlockchainNodesEthereumDetailsValidatorConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlockchainNodesEthereumDetailsValidatorConfig)(nil)).Elem()
}

func (o BlockchainNodesEthereumDetailsValidatorConfigOutput) ToBlockchainNodesEthereumDetailsValidatorConfigOutput() BlockchainNodesEthereumDetailsValidatorConfigOutput {
	return o
}

func (o BlockchainNodesEthereumDetailsValidatorConfigOutput) ToBlockchainNodesEthereumDetailsValidatorConfigOutputWithContext(ctx context.Context) BlockchainNodesEthereumDetailsValidatorConfigOutput {
	return o
}

func (o BlockchainNodesEthereumDetailsValidatorConfigOutput) ToBlockchainNodesEthereumDetailsValidatorConfigPtrOutput() BlockchainNodesEthereumDetailsValidatorConfigPtrOutput {
	return o.ToBlockchainNodesEthereumDetailsValidatorConfigPtrOutputWithContext(context.Background())
}

func (o BlockchainNodesEthereumDetailsValidatorConfigOutput) ToBlockchainNodesEthereumDetailsValidatorConfigPtrOutputWithContext(ctx context.Context) BlockchainNodesEthereumDetailsValidatorConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BlockchainNodesEthereumDetailsValidatorConfig) *BlockchainNodesEthereumDetailsValidatorConfig {
		return &v
	}).(BlockchainNodesEthereumDetailsValidatorConfigPtrOutput)
}

// URLs for MEV-relay services to use for block building. When set, a managed MEV-boost service is configured on the beacon client.
func (o BlockchainNodesEthereumDetailsValidatorConfigOutput) MevRelayUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BlockchainNodesEthereumDetailsValidatorConfig) []string { return v.MevRelayUrls }).(pulumi.StringArrayOutput)
}

type BlockchainNodesEthereumDetailsValidatorConfigPtrOutput struct{ *pulumi.OutputState }

func (BlockchainNodesEthereumDetailsValidatorConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BlockchainNodesEthereumDetailsValidatorConfig)(nil)).Elem()
}

func (o BlockchainNodesEthereumDetailsValidatorConfigPtrOutput) ToBlockchainNodesEthereumDetailsValidatorConfigPtrOutput() BlockchainNodesEthereumDetailsValidatorConfigPtrOutput {
	return o
}

func (o BlockchainNodesEthereumDetailsValidatorConfigPtrOutput) ToBlockchainNodesEthereumDetailsValidatorConfigPtrOutputWithContext(ctx context.Context) BlockchainNodesEthereumDetailsValidatorConfigPtrOutput {
	return o
}

func (o BlockchainNodesEthereumDetailsValidatorConfigPtrOutput) Elem() BlockchainNodesEthereumDetailsValidatorConfigOutput {
	return o.ApplyT(func(v *BlockchainNodesEthereumDetailsValidatorConfig) BlockchainNodesEthereumDetailsValidatorConfig {
		if v != nil {
			return *v
		}
		var ret BlockchainNodesEthereumDetailsValidatorConfig
		return ret
	}).(BlockchainNodesEthereumDetailsValidatorConfigOutput)
}

// URLs for MEV-relay services to use for block building. When set, a managed MEV-boost service is configured on the beacon client.
func (o BlockchainNodesEthereumDetailsValidatorConfigPtrOutput) MevRelayUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BlockchainNodesEthereumDetailsValidatorConfig) []string {
		if v == nil {
			return nil
		}
		return v.MevRelayUrls
	}).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BlockchainNodesConnectionInfoInput)(nil)).Elem(), BlockchainNodesConnectionInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BlockchainNodesConnectionInfoArrayInput)(nil)).Elem(), BlockchainNodesConnectionInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BlockchainNodesConnectionInfoEndpointInfoInput)(nil)).Elem(), BlockchainNodesConnectionInfoEndpointInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BlockchainNodesConnectionInfoEndpointInfoArrayInput)(nil)).Elem(), BlockchainNodesConnectionInfoEndpointInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BlockchainNodesEthereumDetailsInput)(nil)).Elem(), BlockchainNodesEthereumDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BlockchainNodesEthereumDetailsPtrInput)(nil)).Elem(), BlockchainNodesEthereumDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BlockchainNodesEthereumDetailsAdditionalEndpointInput)(nil)).Elem(), BlockchainNodesEthereumDetailsAdditionalEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BlockchainNodesEthereumDetailsAdditionalEndpointArrayInput)(nil)).Elem(), BlockchainNodesEthereumDetailsAdditionalEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BlockchainNodesEthereumDetailsGethDetailsInput)(nil)).Elem(), BlockchainNodesEthereumDetailsGethDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BlockchainNodesEthereumDetailsGethDetailsPtrInput)(nil)).Elem(), BlockchainNodesEthereumDetailsGethDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BlockchainNodesEthereumDetailsValidatorConfigInput)(nil)).Elem(), BlockchainNodesEthereumDetailsValidatorConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BlockchainNodesEthereumDetailsValidatorConfigPtrInput)(nil)).Elem(), BlockchainNodesEthereumDetailsValidatorConfigArgs{})
	pulumi.RegisterOutputType(BlockchainNodesConnectionInfoOutput{})
	pulumi.RegisterOutputType(BlockchainNodesConnectionInfoArrayOutput{})
	pulumi.RegisterOutputType(BlockchainNodesConnectionInfoEndpointInfoOutput{})
	pulumi.RegisterOutputType(BlockchainNodesConnectionInfoEndpointInfoArrayOutput{})
	pulumi.RegisterOutputType(BlockchainNodesEthereumDetailsOutput{})
	pulumi.RegisterOutputType(BlockchainNodesEthereumDetailsPtrOutput{})
	pulumi.RegisterOutputType(BlockchainNodesEthereumDetailsAdditionalEndpointOutput{})
	pulumi.RegisterOutputType(BlockchainNodesEthereumDetailsAdditionalEndpointArrayOutput{})
	pulumi.RegisterOutputType(BlockchainNodesEthereumDetailsGethDetailsOutput{})
	pulumi.RegisterOutputType(BlockchainNodesEthereumDetailsGethDetailsPtrOutput{})
	pulumi.RegisterOutputType(BlockchainNodesEthereumDetailsValidatorConfigOutput{})
	pulumi.RegisterOutputType(BlockchainNodesEthereumDetailsValidatorConfigPtrOutput{})
}
