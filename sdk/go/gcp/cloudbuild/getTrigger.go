// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudbuild

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// To get more information about Cloudbuild Trigger, see:
//
// * [API documentation](https://cloud.google.com/build/docs/api/reference/rest/v1/projects.triggers)
// * How-to Guides
//   - [Official Documentation](https://cloud.google.com/build/docs/automating-builds/create-manage-triggers)
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/cloudbuild"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudbuild.LookupTrigger(ctx, &cloudbuild.LookupTriggerArgs{
//				Project:   pulumi.StringRef("your-project-id"),
//				TriggerId: google_cloudbuild_trigger.FilenameTrigger.Trigger_id,
//				Location:  "location of trigger build",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupTrigger(ctx *pulumi.Context, args *LookupTriggerArgs, opts ...pulumi.InvokeOption) (*LookupTriggerResult, error) {
	var rv LookupTriggerResult
	err := ctx.Invoke("gcp:cloudbuild/getTrigger:getTrigger", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTrigger.
type LookupTriggerArgs struct {
	// The Cloud Build location for the trigger.
	Location string `pulumi:"location"`
	// The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// The unique identifier for the trigger..
	TriggerId string `pulumi:"triggerId"`
}

// A collection of values returned by getTrigger.
type LookupTriggerResult struct {
	ApprovalConfigs []GetTriggerApprovalConfig `pulumi:"approvalConfigs"`
	Builds          []GetTriggerBuild          `pulumi:"builds"`
	CreateTime      string                     `pulumi:"createTime"`
	Description     string                     `pulumi:"description"`
	Disabled        bool                       `pulumi:"disabled"`
	Filename        string                     `pulumi:"filename"`
	Filter          string                     `pulumi:"filter"`
	GitFileSources  []GetTriggerGitFileSource  `pulumi:"gitFileSources"`
	Githubs         []GetTriggerGithub         `pulumi:"githubs"`
	// The provider-assigned unique ID for this managed resource.
	Id                     string                            `pulumi:"id"`
	IgnoredFiles           []string                          `pulumi:"ignoredFiles"`
	IncludeBuildLogs       string                            `pulumi:"includeBuildLogs"`
	IncludedFiles          []string                          `pulumi:"includedFiles"`
	Location               string                            `pulumi:"location"`
	Name                   string                            `pulumi:"name"`
	Project                *string                           `pulumi:"project"`
	PubsubConfigs          []GetTriggerPubsubConfig          `pulumi:"pubsubConfigs"`
	RepositoryEventConfigs []GetTriggerRepositoryEventConfig `pulumi:"repositoryEventConfigs"`
	ServiceAccount         string                            `pulumi:"serviceAccount"`
	SourceToBuilds         []GetTriggerSourceToBuild         `pulumi:"sourceToBuilds"`
	Substitutions          map[string]string                 `pulumi:"substitutions"`
	Tags                   []string                          `pulumi:"tags"`
	TriggerId              string                            `pulumi:"triggerId"`
	TriggerTemplates       []GetTriggerTriggerTemplate       `pulumi:"triggerTemplates"`
	WebhookConfigs         []GetTriggerWebhookConfig         `pulumi:"webhookConfigs"`
}

func LookupTriggerOutput(ctx *pulumi.Context, args LookupTriggerOutputArgs, opts ...pulumi.InvokeOption) LookupTriggerResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupTriggerResult, error) {
			args := v.(LookupTriggerArgs)
			r, err := LookupTrigger(ctx, &args, opts...)
			var s LookupTriggerResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupTriggerResultOutput)
}

// A collection of arguments for invoking getTrigger.
type LookupTriggerOutputArgs struct {
	// The Cloud Build location for the trigger.
	Location pulumi.StringInput `pulumi:"location"`
	// The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput `pulumi:"project"`
	// The unique identifier for the trigger..
	TriggerId pulumi.StringInput `pulumi:"triggerId"`
}

func (LookupTriggerOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTriggerArgs)(nil)).Elem()
}

// A collection of values returned by getTrigger.
type LookupTriggerResultOutput struct{ *pulumi.OutputState }

func (LookupTriggerResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTriggerResult)(nil)).Elem()
}

func (o LookupTriggerResultOutput) ToLookupTriggerResultOutput() LookupTriggerResultOutput {
	return o
}

func (o LookupTriggerResultOutput) ToLookupTriggerResultOutputWithContext(ctx context.Context) LookupTriggerResultOutput {
	return o
}

func (o LookupTriggerResultOutput) ApprovalConfigs() GetTriggerApprovalConfigArrayOutput {
	return o.ApplyT(func(v LookupTriggerResult) []GetTriggerApprovalConfig { return v.ApprovalConfigs }).(GetTriggerApprovalConfigArrayOutput)
}

func (o LookupTriggerResultOutput) Builds() GetTriggerBuildArrayOutput {
	return o.ApplyT(func(v LookupTriggerResult) []GetTriggerBuild { return v.Builds }).(GetTriggerBuildArrayOutput)
}

func (o LookupTriggerResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTriggerResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

func (o LookupTriggerResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTriggerResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupTriggerResultOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTriggerResult) bool { return v.Disabled }).(pulumi.BoolOutput)
}

func (o LookupTriggerResultOutput) Filename() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTriggerResult) string { return v.Filename }).(pulumi.StringOutput)
}

func (o LookupTriggerResultOutput) Filter() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTriggerResult) string { return v.Filter }).(pulumi.StringOutput)
}

func (o LookupTriggerResultOutput) GitFileSources() GetTriggerGitFileSourceArrayOutput {
	return o.ApplyT(func(v LookupTriggerResult) []GetTriggerGitFileSource { return v.GitFileSources }).(GetTriggerGitFileSourceArrayOutput)
}

func (o LookupTriggerResultOutput) Githubs() GetTriggerGithubArrayOutput {
	return o.ApplyT(func(v LookupTriggerResult) []GetTriggerGithub { return v.Githubs }).(GetTriggerGithubArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupTriggerResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTriggerResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupTriggerResultOutput) IgnoredFiles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupTriggerResult) []string { return v.IgnoredFiles }).(pulumi.StringArrayOutput)
}

func (o LookupTriggerResultOutput) IncludeBuildLogs() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTriggerResult) string { return v.IncludeBuildLogs }).(pulumi.StringOutput)
}

func (o LookupTriggerResultOutput) IncludedFiles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupTriggerResult) []string { return v.IncludedFiles }).(pulumi.StringArrayOutput)
}

func (o LookupTriggerResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTriggerResult) string { return v.Location }).(pulumi.StringOutput)
}

func (o LookupTriggerResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTriggerResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupTriggerResultOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTriggerResult) *string { return v.Project }).(pulumi.StringPtrOutput)
}

func (o LookupTriggerResultOutput) PubsubConfigs() GetTriggerPubsubConfigArrayOutput {
	return o.ApplyT(func(v LookupTriggerResult) []GetTriggerPubsubConfig { return v.PubsubConfigs }).(GetTriggerPubsubConfigArrayOutput)
}

func (o LookupTriggerResultOutput) RepositoryEventConfigs() GetTriggerRepositoryEventConfigArrayOutput {
	return o.ApplyT(func(v LookupTriggerResult) []GetTriggerRepositoryEventConfig { return v.RepositoryEventConfigs }).(GetTriggerRepositoryEventConfigArrayOutput)
}

func (o LookupTriggerResultOutput) ServiceAccount() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTriggerResult) string { return v.ServiceAccount }).(pulumi.StringOutput)
}

func (o LookupTriggerResultOutput) SourceToBuilds() GetTriggerSourceToBuildArrayOutput {
	return o.ApplyT(func(v LookupTriggerResult) []GetTriggerSourceToBuild { return v.SourceToBuilds }).(GetTriggerSourceToBuildArrayOutput)
}

func (o LookupTriggerResultOutput) Substitutions() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupTriggerResult) map[string]string { return v.Substitutions }).(pulumi.StringMapOutput)
}

func (o LookupTriggerResultOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupTriggerResult) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

func (o LookupTriggerResultOutput) TriggerId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTriggerResult) string { return v.TriggerId }).(pulumi.StringOutput)
}

func (o LookupTriggerResultOutput) TriggerTemplates() GetTriggerTriggerTemplateArrayOutput {
	return o.ApplyT(func(v LookupTriggerResult) []GetTriggerTriggerTemplate { return v.TriggerTemplates }).(GetTriggerTriggerTemplateArrayOutput)
}

func (o LookupTriggerResultOutput) WebhookConfigs() GetTriggerWebhookConfigArrayOutput {
	return o.ApplyT(func(v LookupTriggerResult) []GetTriggerWebhookConfig { return v.WebhookConfigs }).(GetTriggerWebhookConfigArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupTriggerResultOutput{})
}
