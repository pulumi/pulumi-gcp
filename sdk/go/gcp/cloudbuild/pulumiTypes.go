// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudbuild

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type TriggerApprovalConfig struct {
	// Whether or not approval is needed. If this is set on a build, it will become pending when run,
	// and will need to be explicitly approved to start.
	ApprovalRequired *bool `pulumi:"approvalRequired"`
}

// TriggerApprovalConfigInput is an input type that accepts TriggerApprovalConfigArgs and TriggerApprovalConfigOutput values.
// You can construct a concrete instance of `TriggerApprovalConfigInput` via:
//
//	TriggerApprovalConfigArgs{...}
type TriggerApprovalConfigInput interface {
	pulumi.Input

	ToTriggerApprovalConfigOutput() TriggerApprovalConfigOutput
	ToTriggerApprovalConfigOutputWithContext(context.Context) TriggerApprovalConfigOutput
}

type TriggerApprovalConfigArgs struct {
	// Whether or not approval is needed. If this is set on a build, it will become pending when run,
	// and will need to be explicitly approved to start.
	ApprovalRequired pulumi.BoolPtrInput `pulumi:"approvalRequired"`
}

func (TriggerApprovalConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerApprovalConfig)(nil)).Elem()
}

func (i TriggerApprovalConfigArgs) ToTriggerApprovalConfigOutput() TriggerApprovalConfigOutput {
	return i.ToTriggerApprovalConfigOutputWithContext(context.Background())
}

func (i TriggerApprovalConfigArgs) ToTriggerApprovalConfigOutputWithContext(ctx context.Context) TriggerApprovalConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerApprovalConfigOutput)
}

func (i TriggerApprovalConfigArgs) ToTriggerApprovalConfigPtrOutput() TriggerApprovalConfigPtrOutput {
	return i.ToTriggerApprovalConfigPtrOutputWithContext(context.Background())
}

func (i TriggerApprovalConfigArgs) ToTriggerApprovalConfigPtrOutputWithContext(ctx context.Context) TriggerApprovalConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerApprovalConfigOutput).ToTriggerApprovalConfigPtrOutputWithContext(ctx)
}

// TriggerApprovalConfigPtrInput is an input type that accepts TriggerApprovalConfigArgs, TriggerApprovalConfigPtr and TriggerApprovalConfigPtrOutput values.
// You can construct a concrete instance of `TriggerApprovalConfigPtrInput` via:
//
//	        TriggerApprovalConfigArgs{...}
//
//	or:
//
//	        nil
type TriggerApprovalConfigPtrInput interface {
	pulumi.Input

	ToTriggerApprovalConfigPtrOutput() TriggerApprovalConfigPtrOutput
	ToTriggerApprovalConfigPtrOutputWithContext(context.Context) TriggerApprovalConfigPtrOutput
}

type triggerApprovalConfigPtrType TriggerApprovalConfigArgs

func TriggerApprovalConfigPtr(v *TriggerApprovalConfigArgs) TriggerApprovalConfigPtrInput {
	return (*triggerApprovalConfigPtrType)(v)
}

func (*triggerApprovalConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerApprovalConfig)(nil)).Elem()
}

func (i *triggerApprovalConfigPtrType) ToTriggerApprovalConfigPtrOutput() TriggerApprovalConfigPtrOutput {
	return i.ToTriggerApprovalConfigPtrOutputWithContext(context.Background())
}

func (i *triggerApprovalConfigPtrType) ToTriggerApprovalConfigPtrOutputWithContext(ctx context.Context) TriggerApprovalConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerApprovalConfigPtrOutput)
}

type TriggerApprovalConfigOutput struct{ *pulumi.OutputState }

func (TriggerApprovalConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerApprovalConfig)(nil)).Elem()
}

func (o TriggerApprovalConfigOutput) ToTriggerApprovalConfigOutput() TriggerApprovalConfigOutput {
	return o
}

func (o TriggerApprovalConfigOutput) ToTriggerApprovalConfigOutputWithContext(ctx context.Context) TriggerApprovalConfigOutput {
	return o
}

func (o TriggerApprovalConfigOutput) ToTriggerApprovalConfigPtrOutput() TriggerApprovalConfigPtrOutput {
	return o.ToTriggerApprovalConfigPtrOutputWithContext(context.Background())
}

func (o TriggerApprovalConfigOutput) ToTriggerApprovalConfigPtrOutputWithContext(ctx context.Context) TriggerApprovalConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TriggerApprovalConfig) *TriggerApprovalConfig {
		return &v
	}).(TriggerApprovalConfigPtrOutput)
}

// Whether or not approval is needed. If this is set on a build, it will become pending when run,
// and will need to be explicitly approved to start.
func (o TriggerApprovalConfigOutput) ApprovalRequired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TriggerApprovalConfig) *bool { return v.ApprovalRequired }).(pulumi.BoolPtrOutput)
}

type TriggerApprovalConfigPtrOutput struct{ *pulumi.OutputState }

func (TriggerApprovalConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerApprovalConfig)(nil)).Elem()
}

func (o TriggerApprovalConfigPtrOutput) ToTriggerApprovalConfigPtrOutput() TriggerApprovalConfigPtrOutput {
	return o
}

func (o TriggerApprovalConfigPtrOutput) ToTriggerApprovalConfigPtrOutputWithContext(ctx context.Context) TriggerApprovalConfigPtrOutput {
	return o
}

func (o TriggerApprovalConfigPtrOutput) Elem() TriggerApprovalConfigOutput {
	return o.ApplyT(func(v *TriggerApprovalConfig) TriggerApprovalConfig {
		if v != nil {
			return *v
		}
		var ret TriggerApprovalConfig
		return ret
	}).(TriggerApprovalConfigOutput)
}

// Whether or not approval is needed. If this is set on a build, it will become pending when run,
// and will need to be explicitly approved to start.
func (o TriggerApprovalConfigPtrOutput) ApprovalRequired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TriggerApprovalConfig) *bool {
		if v == nil {
			return nil
		}
		return v.ApprovalRequired
	}).(pulumi.BoolPtrOutput)
}

type TriggerBuild struct {
	// Artifacts produced by the build that should be uploaded upon successful completion of all build steps.
	// Structure is documented below.
	Artifacts *TriggerBuildArtifacts `pulumi:"artifacts"`
	// Secrets and secret environment variables.
	// Structure is documented below.
	AvailableSecrets *TriggerBuildAvailableSecrets `pulumi:"availableSecrets"`
	// A list of images to be pushed upon the successful completion of all build steps.
	// The images will be pushed using the builder service account's credentials.
	// The digests of the pushed images will be stored in the Build resource's results field.
	// If any of the images fail to be pushed, the build is marked FAILURE.
	Images []string `pulumi:"images"`
	// Google Cloud Storage bucket where logs should be written.
	// Logs file names will be of the format ${logsBucket}/log-${build_id}.txt.
	LogsBucket *string `pulumi:"logsBucket"`
	// Special options for this build.
	// Structure is documented below.
	Options *TriggerBuildOptions `pulumi:"options"`
	// TTL in queue for this build. If provided and the build is enqueued longer than this value,
	// the build will expire and the build status will be EXPIRED.
	// The TTL starts ticking from createTime.
	// A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
	QueueTtl *string `pulumi:"queueTtl"`
	// Secrets to decrypt using Cloud Key Management Service.
	// Structure is documented below.
	Secrets []TriggerBuildSecret `pulumi:"secrets"`
	// The location of the source files to build.
	// One of `storageSource` or `repoSource` must be provided.
	// Structure is documented below.
	Source *TriggerBuildSource `pulumi:"source"`
	// The operations to be performed on the workspace.
	// Structure is documented below.
	Steps []TriggerBuildStep `pulumi:"steps"`
	// Substitutions to use in a triggered build. Should only be used with triggers.run
	Substitutions map[string]string `pulumi:"substitutions"`
	// Tags for annotation of a Build. These are not docker tags.
	Tags []string `pulumi:"tags"`
	// Time limit for executing this build step. If not defined,
	// the step has no
	// time limit and will be allowed to continue to run until either it
	// completes or the build itself times out.
	Timeout *string `pulumi:"timeout"`
}

// TriggerBuildInput is an input type that accepts TriggerBuildArgs and TriggerBuildOutput values.
// You can construct a concrete instance of `TriggerBuildInput` via:
//
//	TriggerBuildArgs{...}
type TriggerBuildInput interface {
	pulumi.Input

	ToTriggerBuildOutput() TriggerBuildOutput
	ToTriggerBuildOutputWithContext(context.Context) TriggerBuildOutput
}

type TriggerBuildArgs struct {
	// Artifacts produced by the build that should be uploaded upon successful completion of all build steps.
	// Structure is documented below.
	Artifacts TriggerBuildArtifactsPtrInput `pulumi:"artifacts"`
	// Secrets and secret environment variables.
	// Structure is documented below.
	AvailableSecrets TriggerBuildAvailableSecretsPtrInput `pulumi:"availableSecrets"`
	// A list of images to be pushed upon the successful completion of all build steps.
	// The images will be pushed using the builder service account's credentials.
	// The digests of the pushed images will be stored in the Build resource's results field.
	// If any of the images fail to be pushed, the build is marked FAILURE.
	Images pulumi.StringArrayInput `pulumi:"images"`
	// Google Cloud Storage bucket where logs should be written.
	// Logs file names will be of the format ${logsBucket}/log-${build_id}.txt.
	LogsBucket pulumi.StringPtrInput `pulumi:"logsBucket"`
	// Special options for this build.
	// Structure is documented below.
	Options TriggerBuildOptionsPtrInput `pulumi:"options"`
	// TTL in queue for this build. If provided and the build is enqueued longer than this value,
	// the build will expire and the build status will be EXPIRED.
	// The TTL starts ticking from createTime.
	// A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
	QueueTtl pulumi.StringPtrInput `pulumi:"queueTtl"`
	// Secrets to decrypt using Cloud Key Management Service.
	// Structure is documented below.
	Secrets TriggerBuildSecretArrayInput `pulumi:"secrets"`
	// The location of the source files to build.
	// One of `storageSource` or `repoSource` must be provided.
	// Structure is documented below.
	Source TriggerBuildSourcePtrInput `pulumi:"source"`
	// The operations to be performed on the workspace.
	// Structure is documented below.
	Steps TriggerBuildStepArrayInput `pulumi:"steps"`
	// Substitutions to use in a triggered build. Should only be used with triggers.run
	Substitutions pulumi.StringMapInput `pulumi:"substitutions"`
	// Tags for annotation of a Build. These are not docker tags.
	Tags pulumi.StringArrayInput `pulumi:"tags"`
	// Time limit for executing this build step. If not defined,
	// the step has no
	// time limit and will be allowed to continue to run until either it
	// completes or the build itself times out.
	Timeout pulumi.StringPtrInput `pulumi:"timeout"`
}

func (TriggerBuildArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerBuild)(nil)).Elem()
}

func (i TriggerBuildArgs) ToTriggerBuildOutput() TriggerBuildOutput {
	return i.ToTriggerBuildOutputWithContext(context.Background())
}

func (i TriggerBuildArgs) ToTriggerBuildOutputWithContext(ctx context.Context) TriggerBuildOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerBuildOutput)
}

func (i TriggerBuildArgs) ToTriggerBuildPtrOutput() TriggerBuildPtrOutput {
	return i.ToTriggerBuildPtrOutputWithContext(context.Background())
}

func (i TriggerBuildArgs) ToTriggerBuildPtrOutputWithContext(ctx context.Context) TriggerBuildPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerBuildOutput).ToTriggerBuildPtrOutputWithContext(ctx)
}

// TriggerBuildPtrInput is an input type that accepts TriggerBuildArgs, TriggerBuildPtr and TriggerBuildPtrOutput values.
// You can construct a concrete instance of `TriggerBuildPtrInput` via:
//
//	        TriggerBuildArgs{...}
//
//	or:
//
//	        nil
type TriggerBuildPtrInput interface {
	pulumi.Input

	ToTriggerBuildPtrOutput() TriggerBuildPtrOutput
	ToTriggerBuildPtrOutputWithContext(context.Context) TriggerBuildPtrOutput
}

type triggerBuildPtrType TriggerBuildArgs

func TriggerBuildPtr(v *TriggerBuildArgs) TriggerBuildPtrInput {
	return (*triggerBuildPtrType)(v)
}

func (*triggerBuildPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerBuild)(nil)).Elem()
}

func (i *triggerBuildPtrType) ToTriggerBuildPtrOutput() TriggerBuildPtrOutput {
	return i.ToTriggerBuildPtrOutputWithContext(context.Background())
}

func (i *triggerBuildPtrType) ToTriggerBuildPtrOutputWithContext(ctx context.Context) TriggerBuildPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerBuildPtrOutput)
}

type TriggerBuildOutput struct{ *pulumi.OutputState }

func (TriggerBuildOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerBuild)(nil)).Elem()
}

func (o TriggerBuildOutput) ToTriggerBuildOutput() TriggerBuildOutput {
	return o
}

func (o TriggerBuildOutput) ToTriggerBuildOutputWithContext(ctx context.Context) TriggerBuildOutput {
	return o
}

func (o TriggerBuildOutput) ToTriggerBuildPtrOutput() TriggerBuildPtrOutput {
	return o.ToTriggerBuildPtrOutputWithContext(context.Background())
}

func (o TriggerBuildOutput) ToTriggerBuildPtrOutputWithContext(ctx context.Context) TriggerBuildPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TriggerBuild) *TriggerBuild {
		return &v
	}).(TriggerBuildPtrOutput)
}

// Artifacts produced by the build that should be uploaded upon successful completion of all build steps.
// Structure is documented below.
func (o TriggerBuildOutput) Artifacts() TriggerBuildArtifactsPtrOutput {
	return o.ApplyT(func(v TriggerBuild) *TriggerBuildArtifacts { return v.Artifacts }).(TriggerBuildArtifactsPtrOutput)
}

// Secrets and secret environment variables.
// Structure is documented below.
func (o TriggerBuildOutput) AvailableSecrets() TriggerBuildAvailableSecretsPtrOutput {
	return o.ApplyT(func(v TriggerBuild) *TriggerBuildAvailableSecrets { return v.AvailableSecrets }).(TriggerBuildAvailableSecretsPtrOutput)
}

// A list of images to be pushed upon the successful completion of all build steps.
// The images will be pushed using the builder service account's credentials.
// The digests of the pushed images will be stored in the Build resource's results field.
// If any of the images fail to be pushed, the build is marked FAILURE.
func (o TriggerBuildOutput) Images() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TriggerBuild) []string { return v.Images }).(pulumi.StringArrayOutput)
}

// Google Cloud Storage bucket where logs should be written.
// Logs file names will be of the format ${logsBucket}/log-${build_id}.txt.
func (o TriggerBuildOutput) LogsBucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerBuild) *string { return v.LogsBucket }).(pulumi.StringPtrOutput)
}

// Special options for this build.
// Structure is documented below.
func (o TriggerBuildOutput) Options() TriggerBuildOptionsPtrOutput {
	return o.ApplyT(func(v TriggerBuild) *TriggerBuildOptions { return v.Options }).(TriggerBuildOptionsPtrOutput)
}

// TTL in queue for this build. If provided and the build is enqueued longer than this value,
// the build will expire and the build status will be EXPIRED.
// The TTL starts ticking from createTime.
// A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
func (o TriggerBuildOutput) QueueTtl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerBuild) *string { return v.QueueTtl }).(pulumi.StringPtrOutput)
}

// Secrets to decrypt using Cloud Key Management Service.
// Structure is documented below.
func (o TriggerBuildOutput) Secrets() TriggerBuildSecretArrayOutput {
	return o.ApplyT(func(v TriggerBuild) []TriggerBuildSecret { return v.Secrets }).(TriggerBuildSecretArrayOutput)
}

// The location of the source files to build.
// One of `storageSource` or `repoSource` must be provided.
// Structure is documented below.
func (o TriggerBuildOutput) Source() TriggerBuildSourcePtrOutput {
	return o.ApplyT(func(v TriggerBuild) *TriggerBuildSource { return v.Source }).(TriggerBuildSourcePtrOutput)
}

// The operations to be performed on the workspace.
// Structure is documented below.
func (o TriggerBuildOutput) Steps() TriggerBuildStepArrayOutput {
	return o.ApplyT(func(v TriggerBuild) []TriggerBuildStep { return v.Steps }).(TriggerBuildStepArrayOutput)
}

// Substitutions to use in a triggered build. Should only be used with triggers.run
func (o TriggerBuildOutput) Substitutions() pulumi.StringMapOutput {
	return o.ApplyT(func(v TriggerBuild) map[string]string { return v.Substitutions }).(pulumi.StringMapOutput)
}

// Tags for annotation of a Build. These are not docker tags.
func (o TriggerBuildOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TriggerBuild) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// Time limit for executing this build step. If not defined,
// the step has no
// time limit and will be allowed to continue to run until either it
// completes or the build itself times out.
func (o TriggerBuildOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerBuild) *string { return v.Timeout }).(pulumi.StringPtrOutput)
}

type TriggerBuildPtrOutput struct{ *pulumi.OutputState }

func (TriggerBuildPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerBuild)(nil)).Elem()
}

func (o TriggerBuildPtrOutput) ToTriggerBuildPtrOutput() TriggerBuildPtrOutput {
	return o
}

func (o TriggerBuildPtrOutput) ToTriggerBuildPtrOutputWithContext(ctx context.Context) TriggerBuildPtrOutput {
	return o
}

func (o TriggerBuildPtrOutput) Elem() TriggerBuildOutput {
	return o.ApplyT(func(v *TriggerBuild) TriggerBuild {
		if v != nil {
			return *v
		}
		var ret TriggerBuild
		return ret
	}).(TriggerBuildOutput)
}

// Artifacts produced by the build that should be uploaded upon successful completion of all build steps.
// Structure is documented below.
func (o TriggerBuildPtrOutput) Artifacts() TriggerBuildArtifactsPtrOutput {
	return o.ApplyT(func(v *TriggerBuild) *TriggerBuildArtifacts {
		if v == nil {
			return nil
		}
		return v.Artifacts
	}).(TriggerBuildArtifactsPtrOutput)
}

// Secrets and secret environment variables.
// Structure is documented below.
func (o TriggerBuildPtrOutput) AvailableSecrets() TriggerBuildAvailableSecretsPtrOutput {
	return o.ApplyT(func(v *TriggerBuild) *TriggerBuildAvailableSecrets {
		if v == nil {
			return nil
		}
		return v.AvailableSecrets
	}).(TriggerBuildAvailableSecretsPtrOutput)
}

// A list of images to be pushed upon the successful completion of all build steps.
// The images will be pushed using the builder service account's credentials.
// The digests of the pushed images will be stored in the Build resource's results field.
// If any of the images fail to be pushed, the build is marked FAILURE.
func (o TriggerBuildPtrOutput) Images() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TriggerBuild) []string {
		if v == nil {
			return nil
		}
		return v.Images
	}).(pulumi.StringArrayOutput)
}

// Google Cloud Storage bucket where logs should be written.
// Logs file names will be of the format ${logsBucket}/log-${build_id}.txt.
func (o TriggerBuildPtrOutput) LogsBucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TriggerBuild) *string {
		if v == nil {
			return nil
		}
		return v.LogsBucket
	}).(pulumi.StringPtrOutput)
}

// Special options for this build.
// Structure is documented below.
func (o TriggerBuildPtrOutput) Options() TriggerBuildOptionsPtrOutput {
	return o.ApplyT(func(v *TriggerBuild) *TriggerBuildOptions {
		if v == nil {
			return nil
		}
		return v.Options
	}).(TriggerBuildOptionsPtrOutput)
}

// TTL in queue for this build. If provided and the build is enqueued longer than this value,
// the build will expire and the build status will be EXPIRED.
// The TTL starts ticking from createTime.
// A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
func (o TriggerBuildPtrOutput) QueueTtl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TriggerBuild) *string {
		if v == nil {
			return nil
		}
		return v.QueueTtl
	}).(pulumi.StringPtrOutput)
}

// Secrets to decrypt using Cloud Key Management Service.
// Structure is documented below.
func (o TriggerBuildPtrOutput) Secrets() TriggerBuildSecretArrayOutput {
	return o.ApplyT(func(v *TriggerBuild) []TriggerBuildSecret {
		if v == nil {
			return nil
		}
		return v.Secrets
	}).(TriggerBuildSecretArrayOutput)
}

// The location of the source files to build.
// One of `storageSource` or `repoSource` must be provided.
// Structure is documented below.
func (o TriggerBuildPtrOutput) Source() TriggerBuildSourcePtrOutput {
	return o.ApplyT(func(v *TriggerBuild) *TriggerBuildSource {
		if v == nil {
			return nil
		}
		return v.Source
	}).(TriggerBuildSourcePtrOutput)
}

// The operations to be performed on the workspace.
// Structure is documented below.
func (o TriggerBuildPtrOutput) Steps() TriggerBuildStepArrayOutput {
	return o.ApplyT(func(v *TriggerBuild) []TriggerBuildStep {
		if v == nil {
			return nil
		}
		return v.Steps
	}).(TriggerBuildStepArrayOutput)
}

// Substitutions to use in a triggered build. Should only be used with triggers.run
func (o TriggerBuildPtrOutput) Substitutions() pulumi.StringMapOutput {
	return o.ApplyT(func(v *TriggerBuild) map[string]string {
		if v == nil {
			return nil
		}
		return v.Substitutions
	}).(pulumi.StringMapOutput)
}

// Tags for annotation of a Build. These are not docker tags.
func (o TriggerBuildPtrOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TriggerBuild) []string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringArrayOutput)
}

// Time limit for executing this build step. If not defined,
// the step has no
// time limit and will be allowed to continue to run until either it
// completes or the build itself times out.
func (o TriggerBuildPtrOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TriggerBuild) *string {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.StringPtrOutput)
}

type TriggerBuildArtifacts struct {
	// A list of images to be pushed upon the successful completion of all build steps.
	// The images will be pushed using the builder service account's credentials.
	// The digests of the pushed images will be stored in the Build resource's results field.
	// If any of the images fail to be pushed, the build is marked FAILURE.
	Images []string `pulumi:"images"`
	// A list of objects to be uploaded to Cloud Storage upon successful completion of all build steps.
	// Files in the workspace matching specified paths globs will be uploaded to the
	// Cloud Storage location using the builder service account's credentials.
	// The location and generation of the uploaded objects will be stored in the Build resource's results field.
	// If any objects fail to be pushed, the build is marked FAILURE.
	// Structure is documented below.
	Objects *TriggerBuildArtifactsObjects `pulumi:"objects"`
}

// TriggerBuildArtifactsInput is an input type that accepts TriggerBuildArtifactsArgs and TriggerBuildArtifactsOutput values.
// You can construct a concrete instance of `TriggerBuildArtifactsInput` via:
//
//	TriggerBuildArtifactsArgs{...}
type TriggerBuildArtifactsInput interface {
	pulumi.Input

	ToTriggerBuildArtifactsOutput() TriggerBuildArtifactsOutput
	ToTriggerBuildArtifactsOutputWithContext(context.Context) TriggerBuildArtifactsOutput
}

type TriggerBuildArtifactsArgs struct {
	// A list of images to be pushed upon the successful completion of all build steps.
	// The images will be pushed using the builder service account's credentials.
	// The digests of the pushed images will be stored in the Build resource's results field.
	// If any of the images fail to be pushed, the build is marked FAILURE.
	Images pulumi.StringArrayInput `pulumi:"images"`
	// A list of objects to be uploaded to Cloud Storage upon successful completion of all build steps.
	// Files in the workspace matching specified paths globs will be uploaded to the
	// Cloud Storage location using the builder service account's credentials.
	// The location and generation of the uploaded objects will be stored in the Build resource's results field.
	// If any objects fail to be pushed, the build is marked FAILURE.
	// Structure is documented below.
	Objects TriggerBuildArtifactsObjectsPtrInput `pulumi:"objects"`
}

func (TriggerBuildArtifactsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerBuildArtifacts)(nil)).Elem()
}

func (i TriggerBuildArtifactsArgs) ToTriggerBuildArtifactsOutput() TriggerBuildArtifactsOutput {
	return i.ToTriggerBuildArtifactsOutputWithContext(context.Background())
}

func (i TriggerBuildArtifactsArgs) ToTriggerBuildArtifactsOutputWithContext(ctx context.Context) TriggerBuildArtifactsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerBuildArtifactsOutput)
}

func (i TriggerBuildArtifactsArgs) ToTriggerBuildArtifactsPtrOutput() TriggerBuildArtifactsPtrOutput {
	return i.ToTriggerBuildArtifactsPtrOutputWithContext(context.Background())
}

func (i TriggerBuildArtifactsArgs) ToTriggerBuildArtifactsPtrOutputWithContext(ctx context.Context) TriggerBuildArtifactsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerBuildArtifactsOutput).ToTriggerBuildArtifactsPtrOutputWithContext(ctx)
}

// TriggerBuildArtifactsPtrInput is an input type that accepts TriggerBuildArtifactsArgs, TriggerBuildArtifactsPtr and TriggerBuildArtifactsPtrOutput values.
// You can construct a concrete instance of `TriggerBuildArtifactsPtrInput` via:
//
//	        TriggerBuildArtifactsArgs{...}
//
//	or:
//
//	        nil
type TriggerBuildArtifactsPtrInput interface {
	pulumi.Input

	ToTriggerBuildArtifactsPtrOutput() TriggerBuildArtifactsPtrOutput
	ToTriggerBuildArtifactsPtrOutputWithContext(context.Context) TriggerBuildArtifactsPtrOutput
}

type triggerBuildArtifactsPtrType TriggerBuildArtifactsArgs

func TriggerBuildArtifactsPtr(v *TriggerBuildArtifactsArgs) TriggerBuildArtifactsPtrInput {
	return (*triggerBuildArtifactsPtrType)(v)
}

func (*triggerBuildArtifactsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerBuildArtifacts)(nil)).Elem()
}

func (i *triggerBuildArtifactsPtrType) ToTriggerBuildArtifactsPtrOutput() TriggerBuildArtifactsPtrOutput {
	return i.ToTriggerBuildArtifactsPtrOutputWithContext(context.Background())
}

func (i *triggerBuildArtifactsPtrType) ToTriggerBuildArtifactsPtrOutputWithContext(ctx context.Context) TriggerBuildArtifactsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerBuildArtifactsPtrOutput)
}

type TriggerBuildArtifactsOutput struct{ *pulumi.OutputState }

func (TriggerBuildArtifactsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerBuildArtifacts)(nil)).Elem()
}

func (o TriggerBuildArtifactsOutput) ToTriggerBuildArtifactsOutput() TriggerBuildArtifactsOutput {
	return o
}

func (o TriggerBuildArtifactsOutput) ToTriggerBuildArtifactsOutputWithContext(ctx context.Context) TriggerBuildArtifactsOutput {
	return o
}

func (o TriggerBuildArtifactsOutput) ToTriggerBuildArtifactsPtrOutput() TriggerBuildArtifactsPtrOutput {
	return o.ToTriggerBuildArtifactsPtrOutputWithContext(context.Background())
}

func (o TriggerBuildArtifactsOutput) ToTriggerBuildArtifactsPtrOutputWithContext(ctx context.Context) TriggerBuildArtifactsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TriggerBuildArtifacts) *TriggerBuildArtifacts {
		return &v
	}).(TriggerBuildArtifactsPtrOutput)
}

// A list of images to be pushed upon the successful completion of all build steps.
// The images will be pushed using the builder service account's credentials.
// The digests of the pushed images will be stored in the Build resource's results field.
// If any of the images fail to be pushed, the build is marked FAILURE.
func (o TriggerBuildArtifactsOutput) Images() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TriggerBuildArtifacts) []string { return v.Images }).(pulumi.StringArrayOutput)
}

// A list of objects to be uploaded to Cloud Storage upon successful completion of all build steps.
// Files in the workspace matching specified paths globs will be uploaded to the
// Cloud Storage location using the builder service account's credentials.
// The location and generation of the uploaded objects will be stored in the Build resource's results field.
// If any objects fail to be pushed, the build is marked FAILURE.
// Structure is documented below.
func (o TriggerBuildArtifactsOutput) Objects() TriggerBuildArtifactsObjectsPtrOutput {
	return o.ApplyT(func(v TriggerBuildArtifacts) *TriggerBuildArtifactsObjects { return v.Objects }).(TriggerBuildArtifactsObjectsPtrOutput)
}

type TriggerBuildArtifactsPtrOutput struct{ *pulumi.OutputState }

func (TriggerBuildArtifactsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerBuildArtifacts)(nil)).Elem()
}

func (o TriggerBuildArtifactsPtrOutput) ToTriggerBuildArtifactsPtrOutput() TriggerBuildArtifactsPtrOutput {
	return o
}

func (o TriggerBuildArtifactsPtrOutput) ToTriggerBuildArtifactsPtrOutputWithContext(ctx context.Context) TriggerBuildArtifactsPtrOutput {
	return o
}

func (o TriggerBuildArtifactsPtrOutput) Elem() TriggerBuildArtifactsOutput {
	return o.ApplyT(func(v *TriggerBuildArtifacts) TriggerBuildArtifacts {
		if v != nil {
			return *v
		}
		var ret TriggerBuildArtifacts
		return ret
	}).(TriggerBuildArtifactsOutput)
}

// A list of images to be pushed upon the successful completion of all build steps.
// The images will be pushed using the builder service account's credentials.
// The digests of the pushed images will be stored in the Build resource's results field.
// If any of the images fail to be pushed, the build is marked FAILURE.
func (o TriggerBuildArtifactsPtrOutput) Images() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TriggerBuildArtifacts) []string {
		if v == nil {
			return nil
		}
		return v.Images
	}).(pulumi.StringArrayOutput)
}

// A list of objects to be uploaded to Cloud Storage upon successful completion of all build steps.
// Files in the workspace matching specified paths globs will be uploaded to the
// Cloud Storage location using the builder service account's credentials.
// The location and generation of the uploaded objects will be stored in the Build resource's results field.
// If any objects fail to be pushed, the build is marked FAILURE.
// Structure is documented below.
func (o TriggerBuildArtifactsPtrOutput) Objects() TriggerBuildArtifactsObjectsPtrOutput {
	return o.ApplyT(func(v *TriggerBuildArtifacts) *TriggerBuildArtifactsObjects {
		if v == nil {
			return nil
		}
		return v.Objects
	}).(TriggerBuildArtifactsObjectsPtrOutput)
}

type TriggerBuildArtifactsObjects struct {
	// Cloud Storage bucket and optional object path, in the form "gs://bucket/path/to/somewhere/".
	// Files in the workspace matching any path pattern will be uploaded to Cloud Storage with
	// this location as a prefix.
	Location *string `pulumi:"location"`
	// Path globs used to match files in the build's workspace.
	Paths []string `pulumi:"paths"`
	// -
	// Output only. Stores timing information for pushing all artifact objects.
	// Structure is documented below.
	Timings []TriggerBuildArtifactsObjectsTiming `pulumi:"timings"`
}

// TriggerBuildArtifactsObjectsInput is an input type that accepts TriggerBuildArtifactsObjectsArgs and TriggerBuildArtifactsObjectsOutput values.
// You can construct a concrete instance of `TriggerBuildArtifactsObjectsInput` via:
//
//	TriggerBuildArtifactsObjectsArgs{...}
type TriggerBuildArtifactsObjectsInput interface {
	pulumi.Input

	ToTriggerBuildArtifactsObjectsOutput() TriggerBuildArtifactsObjectsOutput
	ToTriggerBuildArtifactsObjectsOutputWithContext(context.Context) TriggerBuildArtifactsObjectsOutput
}

type TriggerBuildArtifactsObjectsArgs struct {
	// Cloud Storage bucket and optional object path, in the form "gs://bucket/path/to/somewhere/".
	// Files in the workspace matching any path pattern will be uploaded to Cloud Storage with
	// this location as a prefix.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Path globs used to match files in the build's workspace.
	Paths pulumi.StringArrayInput `pulumi:"paths"`
	// -
	// Output only. Stores timing information for pushing all artifact objects.
	// Structure is documented below.
	Timings TriggerBuildArtifactsObjectsTimingArrayInput `pulumi:"timings"`
}

func (TriggerBuildArtifactsObjectsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerBuildArtifactsObjects)(nil)).Elem()
}

func (i TriggerBuildArtifactsObjectsArgs) ToTriggerBuildArtifactsObjectsOutput() TriggerBuildArtifactsObjectsOutput {
	return i.ToTriggerBuildArtifactsObjectsOutputWithContext(context.Background())
}

func (i TriggerBuildArtifactsObjectsArgs) ToTriggerBuildArtifactsObjectsOutputWithContext(ctx context.Context) TriggerBuildArtifactsObjectsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerBuildArtifactsObjectsOutput)
}

func (i TriggerBuildArtifactsObjectsArgs) ToTriggerBuildArtifactsObjectsPtrOutput() TriggerBuildArtifactsObjectsPtrOutput {
	return i.ToTriggerBuildArtifactsObjectsPtrOutputWithContext(context.Background())
}

func (i TriggerBuildArtifactsObjectsArgs) ToTriggerBuildArtifactsObjectsPtrOutputWithContext(ctx context.Context) TriggerBuildArtifactsObjectsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerBuildArtifactsObjectsOutput).ToTriggerBuildArtifactsObjectsPtrOutputWithContext(ctx)
}

// TriggerBuildArtifactsObjectsPtrInput is an input type that accepts TriggerBuildArtifactsObjectsArgs, TriggerBuildArtifactsObjectsPtr and TriggerBuildArtifactsObjectsPtrOutput values.
// You can construct a concrete instance of `TriggerBuildArtifactsObjectsPtrInput` via:
//
//	        TriggerBuildArtifactsObjectsArgs{...}
//
//	or:
//
//	        nil
type TriggerBuildArtifactsObjectsPtrInput interface {
	pulumi.Input

	ToTriggerBuildArtifactsObjectsPtrOutput() TriggerBuildArtifactsObjectsPtrOutput
	ToTriggerBuildArtifactsObjectsPtrOutputWithContext(context.Context) TriggerBuildArtifactsObjectsPtrOutput
}

type triggerBuildArtifactsObjectsPtrType TriggerBuildArtifactsObjectsArgs

func TriggerBuildArtifactsObjectsPtr(v *TriggerBuildArtifactsObjectsArgs) TriggerBuildArtifactsObjectsPtrInput {
	return (*triggerBuildArtifactsObjectsPtrType)(v)
}

func (*triggerBuildArtifactsObjectsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerBuildArtifactsObjects)(nil)).Elem()
}

func (i *triggerBuildArtifactsObjectsPtrType) ToTriggerBuildArtifactsObjectsPtrOutput() TriggerBuildArtifactsObjectsPtrOutput {
	return i.ToTriggerBuildArtifactsObjectsPtrOutputWithContext(context.Background())
}

func (i *triggerBuildArtifactsObjectsPtrType) ToTriggerBuildArtifactsObjectsPtrOutputWithContext(ctx context.Context) TriggerBuildArtifactsObjectsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerBuildArtifactsObjectsPtrOutput)
}

type TriggerBuildArtifactsObjectsOutput struct{ *pulumi.OutputState }

func (TriggerBuildArtifactsObjectsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerBuildArtifactsObjects)(nil)).Elem()
}

func (o TriggerBuildArtifactsObjectsOutput) ToTriggerBuildArtifactsObjectsOutput() TriggerBuildArtifactsObjectsOutput {
	return o
}

func (o TriggerBuildArtifactsObjectsOutput) ToTriggerBuildArtifactsObjectsOutputWithContext(ctx context.Context) TriggerBuildArtifactsObjectsOutput {
	return o
}

func (o TriggerBuildArtifactsObjectsOutput) ToTriggerBuildArtifactsObjectsPtrOutput() TriggerBuildArtifactsObjectsPtrOutput {
	return o.ToTriggerBuildArtifactsObjectsPtrOutputWithContext(context.Background())
}

func (o TriggerBuildArtifactsObjectsOutput) ToTriggerBuildArtifactsObjectsPtrOutputWithContext(ctx context.Context) TriggerBuildArtifactsObjectsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TriggerBuildArtifactsObjects) *TriggerBuildArtifactsObjects {
		return &v
	}).(TriggerBuildArtifactsObjectsPtrOutput)
}

// Cloud Storage bucket and optional object path, in the form "gs://bucket/path/to/somewhere/".
// Files in the workspace matching any path pattern will be uploaded to Cloud Storage with
// this location as a prefix.
func (o TriggerBuildArtifactsObjectsOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerBuildArtifactsObjects) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Path globs used to match files in the build's workspace.
func (o TriggerBuildArtifactsObjectsOutput) Paths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TriggerBuildArtifactsObjects) []string { return v.Paths }).(pulumi.StringArrayOutput)
}

// -
// Output only. Stores timing information for pushing all artifact objects.
// Structure is documented below.
func (o TriggerBuildArtifactsObjectsOutput) Timings() TriggerBuildArtifactsObjectsTimingArrayOutput {
	return o.ApplyT(func(v TriggerBuildArtifactsObjects) []TriggerBuildArtifactsObjectsTiming { return v.Timings }).(TriggerBuildArtifactsObjectsTimingArrayOutput)
}

type TriggerBuildArtifactsObjectsPtrOutput struct{ *pulumi.OutputState }

func (TriggerBuildArtifactsObjectsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerBuildArtifactsObjects)(nil)).Elem()
}

func (o TriggerBuildArtifactsObjectsPtrOutput) ToTriggerBuildArtifactsObjectsPtrOutput() TriggerBuildArtifactsObjectsPtrOutput {
	return o
}

func (o TriggerBuildArtifactsObjectsPtrOutput) ToTriggerBuildArtifactsObjectsPtrOutputWithContext(ctx context.Context) TriggerBuildArtifactsObjectsPtrOutput {
	return o
}

func (o TriggerBuildArtifactsObjectsPtrOutput) Elem() TriggerBuildArtifactsObjectsOutput {
	return o.ApplyT(func(v *TriggerBuildArtifactsObjects) TriggerBuildArtifactsObjects {
		if v != nil {
			return *v
		}
		var ret TriggerBuildArtifactsObjects
		return ret
	}).(TriggerBuildArtifactsObjectsOutput)
}

// Cloud Storage bucket and optional object path, in the form "gs://bucket/path/to/somewhere/".
// Files in the workspace matching any path pattern will be uploaded to Cloud Storage with
// this location as a prefix.
func (o TriggerBuildArtifactsObjectsPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TriggerBuildArtifactsObjects) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Path globs used to match files in the build's workspace.
func (o TriggerBuildArtifactsObjectsPtrOutput) Paths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TriggerBuildArtifactsObjects) []string {
		if v == nil {
			return nil
		}
		return v.Paths
	}).(pulumi.StringArrayOutput)
}

// -
// Output only. Stores timing information for pushing all artifact objects.
// Structure is documented below.
func (o TriggerBuildArtifactsObjectsPtrOutput) Timings() TriggerBuildArtifactsObjectsTimingArrayOutput {
	return o.ApplyT(func(v *TriggerBuildArtifactsObjects) []TriggerBuildArtifactsObjectsTiming {
		if v == nil {
			return nil
		}
		return v.Timings
	}).(TriggerBuildArtifactsObjectsTimingArrayOutput)
}

type TriggerBuildArtifactsObjectsTiming struct {
	// End of time span.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to
	// nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	EndTime *string `pulumi:"endTime"`
	// Start of time span.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to
	// nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	StartTime *string `pulumi:"startTime"`
}

// TriggerBuildArtifactsObjectsTimingInput is an input type that accepts TriggerBuildArtifactsObjectsTimingArgs and TriggerBuildArtifactsObjectsTimingOutput values.
// You can construct a concrete instance of `TriggerBuildArtifactsObjectsTimingInput` via:
//
//	TriggerBuildArtifactsObjectsTimingArgs{...}
type TriggerBuildArtifactsObjectsTimingInput interface {
	pulumi.Input

	ToTriggerBuildArtifactsObjectsTimingOutput() TriggerBuildArtifactsObjectsTimingOutput
	ToTriggerBuildArtifactsObjectsTimingOutputWithContext(context.Context) TriggerBuildArtifactsObjectsTimingOutput
}

type TriggerBuildArtifactsObjectsTimingArgs struct {
	// End of time span.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to
	// nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	EndTime pulumi.StringPtrInput `pulumi:"endTime"`
	// Start of time span.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to
	// nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	StartTime pulumi.StringPtrInput `pulumi:"startTime"`
}

func (TriggerBuildArtifactsObjectsTimingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerBuildArtifactsObjectsTiming)(nil)).Elem()
}

func (i TriggerBuildArtifactsObjectsTimingArgs) ToTriggerBuildArtifactsObjectsTimingOutput() TriggerBuildArtifactsObjectsTimingOutput {
	return i.ToTriggerBuildArtifactsObjectsTimingOutputWithContext(context.Background())
}

func (i TriggerBuildArtifactsObjectsTimingArgs) ToTriggerBuildArtifactsObjectsTimingOutputWithContext(ctx context.Context) TriggerBuildArtifactsObjectsTimingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerBuildArtifactsObjectsTimingOutput)
}

// TriggerBuildArtifactsObjectsTimingArrayInput is an input type that accepts TriggerBuildArtifactsObjectsTimingArray and TriggerBuildArtifactsObjectsTimingArrayOutput values.
// You can construct a concrete instance of `TriggerBuildArtifactsObjectsTimingArrayInput` via:
//
//	TriggerBuildArtifactsObjectsTimingArray{ TriggerBuildArtifactsObjectsTimingArgs{...} }
type TriggerBuildArtifactsObjectsTimingArrayInput interface {
	pulumi.Input

	ToTriggerBuildArtifactsObjectsTimingArrayOutput() TriggerBuildArtifactsObjectsTimingArrayOutput
	ToTriggerBuildArtifactsObjectsTimingArrayOutputWithContext(context.Context) TriggerBuildArtifactsObjectsTimingArrayOutput
}

type TriggerBuildArtifactsObjectsTimingArray []TriggerBuildArtifactsObjectsTimingInput

func (TriggerBuildArtifactsObjectsTimingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TriggerBuildArtifactsObjectsTiming)(nil)).Elem()
}

func (i TriggerBuildArtifactsObjectsTimingArray) ToTriggerBuildArtifactsObjectsTimingArrayOutput() TriggerBuildArtifactsObjectsTimingArrayOutput {
	return i.ToTriggerBuildArtifactsObjectsTimingArrayOutputWithContext(context.Background())
}

func (i TriggerBuildArtifactsObjectsTimingArray) ToTriggerBuildArtifactsObjectsTimingArrayOutputWithContext(ctx context.Context) TriggerBuildArtifactsObjectsTimingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerBuildArtifactsObjectsTimingArrayOutput)
}

type TriggerBuildArtifactsObjectsTimingOutput struct{ *pulumi.OutputState }

func (TriggerBuildArtifactsObjectsTimingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerBuildArtifactsObjectsTiming)(nil)).Elem()
}

func (o TriggerBuildArtifactsObjectsTimingOutput) ToTriggerBuildArtifactsObjectsTimingOutput() TriggerBuildArtifactsObjectsTimingOutput {
	return o
}

func (o TriggerBuildArtifactsObjectsTimingOutput) ToTriggerBuildArtifactsObjectsTimingOutputWithContext(ctx context.Context) TriggerBuildArtifactsObjectsTimingOutput {
	return o
}

// End of time span.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to
// nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
func (o TriggerBuildArtifactsObjectsTimingOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerBuildArtifactsObjectsTiming) *string { return v.EndTime }).(pulumi.StringPtrOutput)
}

// Start of time span.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to
// nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
func (o TriggerBuildArtifactsObjectsTimingOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerBuildArtifactsObjectsTiming) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

type TriggerBuildArtifactsObjectsTimingArrayOutput struct{ *pulumi.OutputState }

func (TriggerBuildArtifactsObjectsTimingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TriggerBuildArtifactsObjectsTiming)(nil)).Elem()
}

func (o TriggerBuildArtifactsObjectsTimingArrayOutput) ToTriggerBuildArtifactsObjectsTimingArrayOutput() TriggerBuildArtifactsObjectsTimingArrayOutput {
	return o
}

func (o TriggerBuildArtifactsObjectsTimingArrayOutput) ToTriggerBuildArtifactsObjectsTimingArrayOutputWithContext(ctx context.Context) TriggerBuildArtifactsObjectsTimingArrayOutput {
	return o
}

func (o TriggerBuildArtifactsObjectsTimingArrayOutput) Index(i pulumi.IntInput) TriggerBuildArtifactsObjectsTimingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TriggerBuildArtifactsObjectsTiming {
		return vs[0].([]TriggerBuildArtifactsObjectsTiming)[vs[1].(int)]
	}).(TriggerBuildArtifactsObjectsTimingOutput)
}

type TriggerBuildAvailableSecrets struct {
	// Pairs a secret environment variable with a SecretVersion in Secret Manager.
	// Structure is documented below.
	SecretManagers []TriggerBuildAvailableSecretsSecretManager `pulumi:"secretManagers"`
}

// TriggerBuildAvailableSecretsInput is an input type that accepts TriggerBuildAvailableSecretsArgs and TriggerBuildAvailableSecretsOutput values.
// You can construct a concrete instance of `TriggerBuildAvailableSecretsInput` via:
//
//	TriggerBuildAvailableSecretsArgs{...}
type TriggerBuildAvailableSecretsInput interface {
	pulumi.Input

	ToTriggerBuildAvailableSecretsOutput() TriggerBuildAvailableSecretsOutput
	ToTriggerBuildAvailableSecretsOutputWithContext(context.Context) TriggerBuildAvailableSecretsOutput
}

type TriggerBuildAvailableSecretsArgs struct {
	// Pairs a secret environment variable with a SecretVersion in Secret Manager.
	// Structure is documented below.
	SecretManagers TriggerBuildAvailableSecretsSecretManagerArrayInput `pulumi:"secretManagers"`
}

func (TriggerBuildAvailableSecretsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerBuildAvailableSecrets)(nil)).Elem()
}

func (i TriggerBuildAvailableSecretsArgs) ToTriggerBuildAvailableSecretsOutput() TriggerBuildAvailableSecretsOutput {
	return i.ToTriggerBuildAvailableSecretsOutputWithContext(context.Background())
}

func (i TriggerBuildAvailableSecretsArgs) ToTriggerBuildAvailableSecretsOutputWithContext(ctx context.Context) TriggerBuildAvailableSecretsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerBuildAvailableSecretsOutput)
}

func (i TriggerBuildAvailableSecretsArgs) ToTriggerBuildAvailableSecretsPtrOutput() TriggerBuildAvailableSecretsPtrOutput {
	return i.ToTriggerBuildAvailableSecretsPtrOutputWithContext(context.Background())
}

func (i TriggerBuildAvailableSecretsArgs) ToTriggerBuildAvailableSecretsPtrOutputWithContext(ctx context.Context) TriggerBuildAvailableSecretsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerBuildAvailableSecretsOutput).ToTriggerBuildAvailableSecretsPtrOutputWithContext(ctx)
}

// TriggerBuildAvailableSecretsPtrInput is an input type that accepts TriggerBuildAvailableSecretsArgs, TriggerBuildAvailableSecretsPtr and TriggerBuildAvailableSecretsPtrOutput values.
// You can construct a concrete instance of `TriggerBuildAvailableSecretsPtrInput` via:
//
//	        TriggerBuildAvailableSecretsArgs{...}
//
//	or:
//
//	        nil
type TriggerBuildAvailableSecretsPtrInput interface {
	pulumi.Input

	ToTriggerBuildAvailableSecretsPtrOutput() TriggerBuildAvailableSecretsPtrOutput
	ToTriggerBuildAvailableSecretsPtrOutputWithContext(context.Context) TriggerBuildAvailableSecretsPtrOutput
}

type triggerBuildAvailableSecretsPtrType TriggerBuildAvailableSecretsArgs

func TriggerBuildAvailableSecretsPtr(v *TriggerBuildAvailableSecretsArgs) TriggerBuildAvailableSecretsPtrInput {
	return (*triggerBuildAvailableSecretsPtrType)(v)
}

func (*triggerBuildAvailableSecretsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerBuildAvailableSecrets)(nil)).Elem()
}

func (i *triggerBuildAvailableSecretsPtrType) ToTriggerBuildAvailableSecretsPtrOutput() TriggerBuildAvailableSecretsPtrOutput {
	return i.ToTriggerBuildAvailableSecretsPtrOutputWithContext(context.Background())
}

func (i *triggerBuildAvailableSecretsPtrType) ToTriggerBuildAvailableSecretsPtrOutputWithContext(ctx context.Context) TriggerBuildAvailableSecretsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerBuildAvailableSecretsPtrOutput)
}

type TriggerBuildAvailableSecretsOutput struct{ *pulumi.OutputState }

func (TriggerBuildAvailableSecretsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerBuildAvailableSecrets)(nil)).Elem()
}

func (o TriggerBuildAvailableSecretsOutput) ToTriggerBuildAvailableSecretsOutput() TriggerBuildAvailableSecretsOutput {
	return o
}

func (o TriggerBuildAvailableSecretsOutput) ToTriggerBuildAvailableSecretsOutputWithContext(ctx context.Context) TriggerBuildAvailableSecretsOutput {
	return o
}

func (o TriggerBuildAvailableSecretsOutput) ToTriggerBuildAvailableSecretsPtrOutput() TriggerBuildAvailableSecretsPtrOutput {
	return o.ToTriggerBuildAvailableSecretsPtrOutputWithContext(context.Background())
}

func (o TriggerBuildAvailableSecretsOutput) ToTriggerBuildAvailableSecretsPtrOutputWithContext(ctx context.Context) TriggerBuildAvailableSecretsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TriggerBuildAvailableSecrets) *TriggerBuildAvailableSecrets {
		return &v
	}).(TriggerBuildAvailableSecretsPtrOutput)
}

// Pairs a secret environment variable with a SecretVersion in Secret Manager.
// Structure is documented below.
func (o TriggerBuildAvailableSecretsOutput) SecretManagers() TriggerBuildAvailableSecretsSecretManagerArrayOutput {
	return o.ApplyT(func(v TriggerBuildAvailableSecrets) []TriggerBuildAvailableSecretsSecretManager {
		return v.SecretManagers
	}).(TriggerBuildAvailableSecretsSecretManagerArrayOutput)
}

type TriggerBuildAvailableSecretsPtrOutput struct{ *pulumi.OutputState }

func (TriggerBuildAvailableSecretsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerBuildAvailableSecrets)(nil)).Elem()
}

func (o TriggerBuildAvailableSecretsPtrOutput) ToTriggerBuildAvailableSecretsPtrOutput() TriggerBuildAvailableSecretsPtrOutput {
	return o
}

func (o TriggerBuildAvailableSecretsPtrOutput) ToTriggerBuildAvailableSecretsPtrOutputWithContext(ctx context.Context) TriggerBuildAvailableSecretsPtrOutput {
	return o
}

func (o TriggerBuildAvailableSecretsPtrOutput) Elem() TriggerBuildAvailableSecretsOutput {
	return o.ApplyT(func(v *TriggerBuildAvailableSecrets) TriggerBuildAvailableSecrets {
		if v != nil {
			return *v
		}
		var ret TriggerBuildAvailableSecrets
		return ret
	}).(TriggerBuildAvailableSecretsOutput)
}

// Pairs a secret environment variable with a SecretVersion in Secret Manager.
// Structure is documented below.
func (o TriggerBuildAvailableSecretsPtrOutput) SecretManagers() TriggerBuildAvailableSecretsSecretManagerArrayOutput {
	return o.ApplyT(func(v *TriggerBuildAvailableSecrets) []TriggerBuildAvailableSecretsSecretManager {
		if v == nil {
			return nil
		}
		return v.SecretManagers
	}).(TriggerBuildAvailableSecretsSecretManagerArrayOutput)
}

type TriggerBuildAvailableSecretsSecretManager struct {
	// A list of global environment variable definitions that will exist for all build steps
	// in this build. If a variable is defined in both globally and in a build step,
	// the variable will use the build step value.
	// The elements are of the form "KEY=VALUE" for the environment variable "KEY" being given the value "VALUE".
	Env string `pulumi:"env"`
	// Resource name of the SecretVersion. In format: projects/*/secrets/*/versions/*
	VersionName string `pulumi:"versionName"`
}

// TriggerBuildAvailableSecretsSecretManagerInput is an input type that accepts TriggerBuildAvailableSecretsSecretManagerArgs and TriggerBuildAvailableSecretsSecretManagerOutput values.
// You can construct a concrete instance of `TriggerBuildAvailableSecretsSecretManagerInput` via:
//
//	TriggerBuildAvailableSecretsSecretManagerArgs{...}
type TriggerBuildAvailableSecretsSecretManagerInput interface {
	pulumi.Input

	ToTriggerBuildAvailableSecretsSecretManagerOutput() TriggerBuildAvailableSecretsSecretManagerOutput
	ToTriggerBuildAvailableSecretsSecretManagerOutputWithContext(context.Context) TriggerBuildAvailableSecretsSecretManagerOutput
}

type TriggerBuildAvailableSecretsSecretManagerArgs struct {
	// A list of global environment variable definitions that will exist for all build steps
	// in this build. If a variable is defined in both globally and in a build step,
	// the variable will use the build step value.
	// The elements are of the form "KEY=VALUE" for the environment variable "KEY" being given the value "VALUE".
	Env pulumi.StringInput `pulumi:"env"`
	// Resource name of the SecretVersion. In format: projects/*/secrets/*/versions/*
	VersionName pulumi.StringInput `pulumi:"versionName"`
}

func (TriggerBuildAvailableSecretsSecretManagerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerBuildAvailableSecretsSecretManager)(nil)).Elem()
}

func (i TriggerBuildAvailableSecretsSecretManagerArgs) ToTriggerBuildAvailableSecretsSecretManagerOutput() TriggerBuildAvailableSecretsSecretManagerOutput {
	return i.ToTriggerBuildAvailableSecretsSecretManagerOutputWithContext(context.Background())
}

func (i TriggerBuildAvailableSecretsSecretManagerArgs) ToTriggerBuildAvailableSecretsSecretManagerOutputWithContext(ctx context.Context) TriggerBuildAvailableSecretsSecretManagerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerBuildAvailableSecretsSecretManagerOutput)
}

// TriggerBuildAvailableSecretsSecretManagerArrayInput is an input type that accepts TriggerBuildAvailableSecretsSecretManagerArray and TriggerBuildAvailableSecretsSecretManagerArrayOutput values.
// You can construct a concrete instance of `TriggerBuildAvailableSecretsSecretManagerArrayInput` via:
//
//	TriggerBuildAvailableSecretsSecretManagerArray{ TriggerBuildAvailableSecretsSecretManagerArgs{...} }
type TriggerBuildAvailableSecretsSecretManagerArrayInput interface {
	pulumi.Input

	ToTriggerBuildAvailableSecretsSecretManagerArrayOutput() TriggerBuildAvailableSecretsSecretManagerArrayOutput
	ToTriggerBuildAvailableSecretsSecretManagerArrayOutputWithContext(context.Context) TriggerBuildAvailableSecretsSecretManagerArrayOutput
}

type TriggerBuildAvailableSecretsSecretManagerArray []TriggerBuildAvailableSecretsSecretManagerInput

func (TriggerBuildAvailableSecretsSecretManagerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TriggerBuildAvailableSecretsSecretManager)(nil)).Elem()
}

func (i TriggerBuildAvailableSecretsSecretManagerArray) ToTriggerBuildAvailableSecretsSecretManagerArrayOutput() TriggerBuildAvailableSecretsSecretManagerArrayOutput {
	return i.ToTriggerBuildAvailableSecretsSecretManagerArrayOutputWithContext(context.Background())
}

func (i TriggerBuildAvailableSecretsSecretManagerArray) ToTriggerBuildAvailableSecretsSecretManagerArrayOutputWithContext(ctx context.Context) TriggerBuildAvailableSecretsSecretManagerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerBuildAvailableSecretsSecretManagerArrayOutput)
}

type TriggerBuildAvailableSecretsSecretManagerOutput struct{ *pulumi.OutputState }

func (TriggerBuildAvailableSecretsSecretManagerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerBuildAvailableSecretsSecretManager)(nil)).Elem()
}

func (o TriggerBuildAvailableSecretsSecretManagerOutput) ToTriggerBuildAvailableSecretsSecretManagerOutput() TriggerBuildAvailableSecretsSecretManagerOutput {
	return o
}

func (o TriggerBuildAvailableSecretsSecretManagerOutput) ToTriggerBuildAvailableSecretsSecretManagerOutputWithContext(ctx context.Context) TriggerBuildAvailableSecretsSecretManagerOutput {
	return o
}

// A list of global environment variable definitions that will exist for all build steps
// in this build. If a variable is defined in both globally and in a build step,
// the variable will use the build step value.
// The elements are of the form "KEY=VALUE" for the environment variable "KEY" being given the value "VALUE".
func (o TriggerBuildAvailableSecretsSecretManagerOutput) Env() pulumi.StringOutput {
	return o.ApplyT(func(v TriggerBuildAvailableSecretsSecretManager) string { return v.Env }).(pulumi.StringOutput)
}

// Resource name of the SecretVersion. In format: projects/*/secrets/*/versions/*
func (o TriggerBuildAvailableSecretsSecretManagerOutput) VersionName() pulumi.StringOutput {
	return o.ApplyT(func(v TriggerBuildAvailableSecretsSecretManager) string { return v.VersionName }).(pulumi.StringOutput)
}

type TriggerBuildAvailableSecretsSecretManagerArrayOutput struct{ *pulumi.OutputState }

func (TriggerBuildAvailableSecretsSecretManagerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TriggerBuildAvailableSecretsSecretManager)(nil)).Elem()
}

func (o TriggerBuildAvailableSecretsSecretManagerArrayOutput) ToTriggerBuildAvailableSecretsSecretManagerArrayOutput() TriggerBuildAvailableSecretsSecretManagerArrayOutput {
	return o
}

func (o TriggerBuildAvailableSecretsSecretManagerArrayOutput) ToTriggerBuildAvailableSecretsSecretManagerArrayOutputWithContext(ctx context.Context) TriggerBuildAvailableSecretsSecretManagerArrayOutput {
	return o
}

func (o TriggerBuildAvailableSecretsSecretManagerArrayOutput) Index(i pulumi.IntInput) TriggerBuildAvailableSecretsSecretManagerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TriggerBuildAvailableSecretsSecretManager {
		return vs[0].([]TriggerBuildAvailableSecretsSecretManager)[vs[1].(int)]
	}).(TriggerBuildAvailableSecretsSecretManagerOutput)
}

type TriggerBuildOptions struct {
	// Requested disk size for the VM that runs the build. Note that this is NOT "disk free";
	// some of the space will be used by the operating system and build utilities.
	// Also note that this is the minimum disk size that will be allocated for the build --
	// the build may run with a larger disk than requested. At present, the maximum disk size
	// is 1000GB; builds that request more than the maximum are rejected with an error.
	DiskSizeGb *int `pulumi:"diskSizeGb"`
	// Option to specify whether or not to apply bash style string operations to the substitutions.
	// NOTE this is always enabled for triggered builds and cannot be overridden in the build configuration file.
	DynamicSubstitutions *bool `pulumi:"dynamicSubstitutions"`
	// A list of global environment variable definitions that will exist for all build steps
	// in this build. If a variable is defined in both globally and in a build step,
	// the variable will use the build step value.
	// The elements are of the form "KEY=VALUE" for the environment variable "KEY" being given the value "VALUE".
	Envs []string `pulumi:"envs"`
	// Option to define build log streaming behavior to Google Cloud Storage.
	// Possible values are `STREAM_DEFAULT`, `STREAM_ON`, and `STREAM_OFF`.
	LogStreamingOption *string `pulumi:"logStreamingOption"`
	// Option to specify the logging mode, which determines if and where build logs are stored.
	// Possible values are `LOGGING_UNSPECIFIED`, `LEGACY`, `GCS_ONLY`, `STACKDRIVER_ONLY`, `CLOUD_LOGGING_ONLY`, and `NONE`.
	Logging *string `pulumi:"logging"`
	// Compute Engine machine type on which to run the build.
	// Possible values are `UNSPECIFIED`, `N1_HIGHCPU_8`, `N1_HIGHCPU_32`, `E2_HIGHCPU_8`, and `E2_HIGHCPU_32`.
	MachineType *string `pulumi:"machineType"`
	// Requested verifiability options.
	// Possible values are `NOT_VERIFIED` and `VERIFIED`.
	RequestedVerifyOption *string `pulumi:"requestedVerifyOption"`
	// A list of global environment variables, which are encrypted using a Cloud Key Management
	// Service crypto key. These values must be specified in the build's Secret. These variables
	// will be available to all build steps in this build.
	SecretEnvs []string `pulumi:"secretEnvs"`
	// Requested hash for SourceProvenance.
	// Each value may be one of `NONE`, `SHA256`, and `MD5`.
	SourceProvenanceHashes []string `pulumi:"sourceProvenanceHashes"`
	// Option to specify behavior when there is an error in the substitution checks.
	// NOTE this is always set to ALLOW_LOOSE for triggered builds and cannot be overridden
	// in the build configuration file.
	// Possible values are `MUST_MATCH` and `ALLOW_LOOSE`.
	SubstitutionOption *string `pulumi:"substitutionOption"`
	// Global list of volumes to mount for ALL build steps
	// Each volume is created as an empty volume prior to starting the build process.
	// Upon completion of the build, volumes and their contents are discarded. Global
	// volume names and paths cannot conflict with the volumes defined a build step.
	// Using a global volume in a build with only one step is not valid as it is indicative
	// of a build request with an incorrect configuration.
	// Structure is documented below.
	Volumes []TriggerBuildOptionsVolume `pulumi:"volumes"`
	// Option to specify a WorkerPool for the build. Format projects/{project}/workerPools/{workerPool}
	// This field is experimental.
	WorkerPool *string `pulumi:"workerPool"`
}

// TriggerBuildOptionsInput is an input type that accepts TriggerBuildOptionsArgs and TriggerBuildOptionsOutput values.
// You can construct a concrete instance of `TriggerBuildOptionsInput` via:
//
//	TriggerBuildOptionsArgs{...}
type TriggerBuildOptionsInput interface {
	pulumi.Input

	ToTriggerBuildOptionsOutput() TriggerBuildOptionsOutput
	ToTriggerBuildOptionsOutputWithContext(context.Context) TriggerBuildOptionsOutput
}

type TriggerBuildOptionsArgs struct {
	// Requested disk size for the VM that runs the build. Note that this is NOT "disk free";
	// some of the space will be used by the operating system and build utilities.
	// Also note that this is the minimum disk size that will be allocated for the build --
	// the build may run with a larger disk than requested. At present, the maximum disk size
	// is 1000GB; builds that request more than the maximum are rejected with an error.
	DiskSizeGb pulumi.IntPtrInput `pulumi:"diskSizeGb"`
	// Option to specify whether or not to apply bash style string operations to the substitutions.
	// NOTE this is always enabled for triggered builds and cannot be overridden in the build configuration file.
	DynamicSubstitutions pulumi.BoolPtrInput `pulumi:"dynamicSubstitutions"`
	// A list of global environment variable definitions that will exist for all build steps
	// in this build. If a variable is defined in both globally and in a build step,
	// the variable will use the build step value.
	// The elements are of the form "KEY=VALUE" for the environment variable "KEY" being given the value "VALUE".
	Envs pulumi.StringArrayInput `pulumi:"envs"`
	// Option to define build log streaming behavior to Google Cloud Storage.
	// Possible values are `STREAM_DEFAULT`, `STREAM_ON`, and `STREAM_OFF`.
	LogStreamingOption pulumi.StringPtrInput `pulumi:"logStreamingOption"`
	// Option to specify the logging mode, which determines if and where build logs are stored.
	// Possible values are `LOGGING_UNSPECIFIED`, `LEGACY`, `GCS_ONLY`, `STACKDRIVER_ONLY`, `CLOUD_LOGGING_ONLY`, and `NONE`.
	Logging pulumi.StringPtrInput `pulumi:"logging"`
	// Compute Engine machine type on which to run the build.
	// Possible values are `UNSPECIFIED`, `N1_HIGHCPU_8`, `N1_HIGHCPU_32`, `E2_HIGHCPU_8`, and `E2_HIGHCPU_32`.
	MachineType pulumi.StringPtrInput `pulumi:"machineType"`
	// Requested verifiability options.
	// Possible values are `NOT_VERIFIED` and `VERIFIED`.
	RequestedVerifyOption pulumi.StringPtrInput `pulumi:"requestedVerifyOption"`
	// A list of global environment variables, which are encrypted using a Cloud Key Management
	// Service crypto key. These values must be specified in the build's Secret. These variables
	// will be available to all build steps in this build.
	SecretEnvs pulumi.StringArrayInput `pulumi:"secretEnvs"`
	// Requested hash for SourceProvenance.
	// Each value may be one of `NONE`, `SHA256`, and `MD5`.
	SourceProvenanceHashes pulumi.StringArrayInput `pulumi:"sourceProvenanceHashes"`
	// Option to specify behavior when there is an error in the substitution checks.
	// NOTE this is always set to ALLOW_LOOSE for triggered builds and cannot be overridden
	// in the build configuration file.
	// Possible values are `MUST_MATCH` and `ALLOW_LOOSE`.
	SubstitutionOption pulumi.StringPtrInput `pulumi:"substitutionOption"`
	// Global list of volumes to mount for ALL build steps
	// Each volume is created as an empty volume prior to starting the build process.
	// Upon completion of the build, volumes and their contents are discarded. Global
	// volume names and paths cannot conflict with the volumes defined a build step.
	// Using a global volume in a build with only one step is not valid as it is indicative
	// of a build request with an incorrect configuration.
	// Structure is documented below.
	Volumes TriggerBuildOptionsVolumeArrayInput `pulumi:"volumes"`
	// Option to specify a WorkerPool for the build. Format projects/{project}/workerPools/{workerPool}
	// This field is experimental.
	WorkerPool pulumi.StringPtrInput `pulumi:"workerPool"`
}

func (TriggerBuildOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerBuildOptions)(nil)).Elem()
}

func (i TriggerBuildOptionsArgs) ToTriggerBuildOptionsOutput() TriggerBuildOptionsOutput {
	return i.ToTriggerBuildOptionsOutputWithContext(context.Background())
}

func (i TriggerBuildOptionsArgs) ToTriggerBuildOptionsOutputWithContext(ctx context.Context) TriggerBuildOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerBuildOptionsOutput)
}

func (i TriggerBuildOptionsArgs) ToTriggerBuildOptionsPtrOutput() TriggerBuildOptionsPtrOutput {
	return i.ToTriggerBuildOptionsPtrOutputWithContext(context.Background())
}

func (i TriggerBuildOptionsArgs) ToTriggerBuildOptionsPtrOutputWithContext(ctx context.Context) TriggerBuildOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerBuildOptionsOutput).ToTriggerBuildOptionsPtrOutputWithContext(ctx)
}

// TriggerBuildOptionsPtrInput is an input type that accepts TriggerBuildOptionsArgs, TriggerBuildOptionsPtr and TriggerBuildOptionsPtrOutput values.
// You can construct a concrete instance of `TriggerBuildOptionsPtrInput` via:
//
//	        TriggerBuildOptionsArgs{...}
//
//	or:
//
//	        nil
type TriggerBuildOptionsPtrInput interface {
	pulumi.Input

	ToTriggerBuildOptionsPtrOutput() TriggerBuildOptionsPtrOutput
	ToTriggerBuildOptionsPtrOutputWithContext(context.Context) TriggerBuildOptionsPtrOutput
}

type triggerBuildOptionsPtrType TriggerBuildOptionsArgs

func TriggerBuildOptionsPtr(v *TriggerBuildOptionsArgs) TriggerBuildOptionsPtrInput {
	return (*triggerBuildOptionsPtrType)(v)
}

func (*triggerBuildOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerBuildOptions)(nil)).Elem()
}

func (i *triggerBuildOptionsPtrType) ToTriggerBuildOptionsPtrOutput() TriggerBuildOptionsPtrOutput {
	return i.ToTriggerBuildOptionsPtrOutputWithContext(context.Background())
}

func (i *triggerBuildOptionsPtrType) ToTriggerBuildOptionsPtrOutputWithContext(ctx context.Context) TriggerBuildOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerBuildOptionsPtrOutput)
}

type TriggerBuildOptionsOutput struct{ *pulumi.OutputState }

func (TriggerBuildOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerBuildOptions)(nil)).Elem()
}

func (o TriggerBuildOptionsOutput) ToTriggerBuildOptionsOutput() TriggerBuildOptionsOutput {
	return o
}

func (o TriggerBuildOptionsOutput) ToTriggerBuildOptionsOutputWithContext(ctx context.Context) TriggerBuildOptionsOutput {
	return o
}

func (o TriggerBuildOptionsOutput) ToTriggerBuildOptionsPtrOutput() TriggerBuildOptionsPtrOutput {
	return o.ToTriggerBuildOptionsPtrOutputWithContext(context.Background())
}

func (o TriggerBuildOptionsOutput) ToTriggerBuildOptionsPtrOutputWithContext(ctx context.Context) TriggerBuildOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TriggerBuildOptions) *TriggerBuildOptions {
		return &v
	}).(TriggerBuildOptionsPtrOutput)
}

// Requested disk size for the VM that runs the build. Note that this is NOT "disk free";
// some of the space will be used by the operating system and build utilities.
// Also note that this is the minimum disk size that will be allocated for the build --
// the build may run with a larger disk than requested. At present, the maximum disk size
// is 1000GB; builds that request more than the maximum are rejected with an error.
func (o TriggerBuildOptionsOutput) DiskSizeGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TriggerBuildOptions) *int { return v.DiskSizeGb }).(pulumi.IntPtrOutput)
}

// Option to specify whether or not to apply bash style string operations to the substitutions.
// NOTE this is always enabled for triggered builds and cannot be overridden in the build configuration file.
func (o TriggerBuildOptionsOutput) DynamicSubstitutions() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TriggerBuildOptions) *bool { return v.DynamicSubstitutions }).(pulumi.BoolPtrOutput)
}

// A list of global environment variable definitions that will exist for all build steps
// in this build. If a variable is defined in both globally and in a build step,
// the variable will use the build step value.
// The elements are of the form "KEY=VALUE" for the environment variable "KEY" being given the value "VALUE".
func (o TriggerBuildOptionsOutput) Envs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TriggerBuildOptions) []string { return v.Envs }).(pulumi.StringArrayOutput)
}

// Option to define build log streaming behavior to Google Cloud Storage.
// Possible values are `STREAM_DEFAULT`, `STREAM_ON`, and `STREAM_OFF`.
func (o TriggerBuildOptionsOutput) LogStreamingOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerBuildOptions) *string { return v.LogStreamingOption }).(pulumi.StringPtrOutput)
}

// Option to specify the logging mode, which determines if and where build logs are stored.
// Possible values are `LOGGING_UNSPECIFIED`, `LEGACY`, `GCS_ONLY`, `STACKDRIVER_ONLY`, `CLOUD_LOGGING_ONLY`, and `NONE`.
func (o TriggerBuildOptionsOutput) Logging() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerBuildOptions) *string { return v.Logging }).(pulumi.StringPtrOutput)
}

// Compute Engine machine type on which to run the build.
// Possible values are `UNSPECIFIED`, `N1_HIGHCPU_8`, `N1_HIGHCPU_32`, `E2_HIGHCPU_8`, and `E2_HIGHCPU_32`.
func (o TriggerBuildOptionsOutput) MachineType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerBuildOptions) *string { return v.MachineType }).(pulumi.StringPtrOutput)
}

// Requested verifiability options.
// Possible values are `NOT_VERIFIED` and `VERIFIED`.
func (o TriggerBuildOptionsOutput) RequestedVerifyOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerBuildOptions) *string { return v.RequestedVerifyOption }).(pulumi.StringPtrOutput)
}

// A list of global environment variables, which are encrypted using a Cloud Key Management
// Service crypto key. These values must be specified in the build's Secret. These variables
// will be available to all build steps in this build.
func (o TriggerBuildOptionsOutput) SecretEnvs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TriggerBuildOptions) []string { return v.SecretEnvs }).(pulumi.StringArrayOutput)
}

// Requested hash for SourceProvenance.
// Each value may be one of `NONE`, `SHA256`, and `MD5`.
func (o TriggerBuildOptionsOutput) SourceProvenanceHashes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TriggerBuildOptions) []string { return v.SourceProvenanceHashes }).(pulumi.StringArrayOutput)
}

// Option to specify behavior when there is an error in the substitution checks.
// NOTE this is always set to ALLOW_LOOSE for triggered builds and cannot be overridden
// in the build configuration file.
// Possible values are `MUST_MATCH` and `ALLOW_LOOSE`.
func (o TriggerBuildOptionsOutput) SubstitutionOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerBuildOptions) *string { return v.SubstitutionOption }).(pulumi.StringPtrOutput)
}

// Global list of volumes to mount for ALL build steps
// Each volume is created as an empty volume prior to starting the build process.
// Upon completion of the build, volumes and their contents are discarded. Global
// volume names and paths cannot conflict with the volumes defined a build step.
// Using a global volume in a build with only one step is not valid as it is indicative
// of a build request with an incorrect configuration.
// Structure is documented below.
func (o TriggerBuildOptionsOutput) Volumes() TriggerBuildOptionsVolumeArrayOutput {
	return o.ApplyT(func(v TriggerBuildOptions) []TriggerBuildOptionsVolume { return v.Volumes }).(TriggerBuildOptionsVolumeArrayOutput)
}

// Option to specify a WorkerPool for the build. Format projects/{project}/workerPools/{workerPool}
// This field is experimental.
func (o TriggerBuildOptionsOutput) WorkerPool() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerBuildOptions) *string { return v.WorkerPool }).(pulumi.StringPtrOutput)
}

type TriggerBuildOptionsPtrOutput struct{ *pulumi.OutputState }

func (TriggerBuildOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerBuildOptions)(nil)).Elem()
}

func (o TriggerBuildOptionsPtrOutput) ToTriggerBuildOptionsPtrOutput() TriggerBuildOptionsPtrOutput {
	return o
}

func (o TriggerBuildOptionsPtrOutput) ToTriggerBuildOptionsPtrOutputWithContext(ctx context.Context) TriggerBuildOptionsPtrOutput {
	return o
}

func (o TriggerBuildOptionsPtrOutput) Elem() TriggerBuildOptionsOutput {
	return o.ApplyT(func(v *TriggerBuildOptions) TriggerBuildOptions {
		if v != nil {
			return *v
		}
		var ret TriggerBuildOptions
		return ret
	}).(TriggerBuildOptionsOutput)
}

// Requested disk size for the VM that runs the build. Note that this is NOT "disk free";
// some of the space will be used by the operating system and build utilities.
// Also note that this is the minimum disk size that will be allocated for the build --
// the build may run with a larger disk than requested. At present, the maximum disk size
// is 1000GB; builds that request more than the maximum are rejected with an error.
func (o TriggerBuildOptionsPtrOutput) DiskSizeGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TriggerBuildOptions) *int {
		if v == nil {
			return nil
		}
		return v.DiskSizeGb
	}).(pulumi.IntPtrOutput)
}

// Option to specify whether or not to apply bash style string operations to the substitutions.
// NOTE this is always enabled for triggered builds and cannot be overridden in the build configuration file.
func (o TriggerBuildOptionsPtrOutput) DynamicSubstitutions() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TriggerBuildOptions) *bool {
		if v == nil {
			return nil
		}
		return v.DynamicSubstitutions
	}).(pulumi.BoolPtrOutput)
}

// A list of global environment variable definitions that will exist for all build steps
// in this build. If a variable is defined in both globally and in a build step,
// the variable will use the build step value.
// The elements are of the form "KEY=VALUE" for the environment variable "KEY" being given the value "VALUE".
func (o TriggerBuildOptionsPtrOutput) Envs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TriggerBuildOptions) []string {
		if v == nil {
			return nil
		}
		return v.Envs
	}).(pulumi.StringArrayOutput)
}

// Option to define build log streaming behavior to Google Cloud Storage.
// Possible values are `STREAM_DEFAULT`, `STREAM_ON`, and `STREAM_OFF`.
func (o TriggerBuildOptionsPtrOutput) LogStreamingOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TriggerBuildOptions) *string {
		if v == nil {
			return nil
		}
		return v.LogStreamingOption
	}).(pulumi.StringPtrOutput)
}

// Option to specify the logging mode, which determines if and where build logs are stored.
// Possible values are `LOGGING_UNSPECIFIED`, `LEGACY`, `GCS_ONLY`, `STACKDRIVER_ONLY`, `CLOUD_LOGGING_ONLY`, and `NONE`.
func (o TriggerBuildOptionsPtrOutput) Logging() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TriggerBuildOptions) *string {
		if v == nil {
			return nil
		}
		return v.Logging
	}).(pulumi.StringPtrOutput)
}

// Compute Engine machine type on which to run the build.
// Possible values are `UNSPECIFIED`, `N1_HIGHCPU_8`, `N1_HIGHCPU_32`, `E2_HIGHCPU_8`, and `E2_HIGHCPU_32`.
func (o TriggerBuildOptionsPtrOutput) MachineType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TriggerBuildOptions) *string {
		if v == nil {
			return nil
		}
		return v.MachineType
	}).(pulumi.StringPtrOutput)
}

// Requested verifiability options.
// Possible values are `NOT_VERIFIED` and `VERIFIED`.
func (o TriggerBuildOptionsPtrOutput) RequestedVerifyOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TriggerBuildOptions) *string {
		if v == nil {
			return nil
		}
		return v.RequestedVerifyOption
	}).(pulumi.StringPtrOutput)
}

// A list of global environment variables, which are encrypted using a Cloud Key Management
// Service crypto key. These values must be specified in the build's Secret. These variables
// will be available to all build steps in this build.
func (o TriggerBuildOptionsPtrOutput) SecretEnvs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TriggerBuildOptions) []string {
		if v == nil {
			return nil
		}
		return v.SecretEnvs
	}).(pulumi.StringArrayOutput)
}

// Requested hash for SourceProvenance.
// Each value may be one of `NONE`, `SHA256`, and `MD5`.
func (o TriggerBuildOptionsPtrOutput) SourceProvenanceHashes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TriggerBuildOptions) []string {
		if v == nil {
			return nil
		}
		return v.SourceProvenanceHashes
	}).(pulumi.StringArrayOutput)
}

// Option to specify behavior when there is an error in the substitution checks.
// NOTE this is always set to ALLOW_LOOSE for triggered builds and cannot be overridden
// in the build configuration file.
// Possible values are `MUST_MATCH` and `ALLOW_LOOSE`.
func (o TriggerBuildOptionsPtrOutput) SubstitutionOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TriggerBuildOptions) *string {
		if v == nil {
			return nil
		}
		return v.SubstitutionOption
	}).(pulumi.StringPtrOutput)
}

// Global list of volumes to mount for ALL build steps
// Each volume is created as an empty volume prior to starting the build process.
// Upon completion of the build, volumes and their contents are discarded. Global
// volume names and paths cannot conflict with the volumes defined a build step.
// Using a global volume in a build with only one step is not valid as it is indicative
// of a build request with an incorrect configuration.
// Structure is documented below.
func (o TriggerBuildOptionsPtrOutput) Volumes() TriggerBuildOptionsVolumeArrayOutput {
	return o.ApplyT(func(v *TriggerBuildOptions) []TriggerBuildOptionsVolume {
		if v == nil {
			return nil
		}
		return v.Volumes
	}).(TriggerBuildOptionsVolumeArrayOutput)
}

// Option to specify a WorkerPool for the build. Format projects/{project}/workerPools/{workerPool}
// This field is experimental.
func (o TriggerBuildOptionsPtrOutput) WorkerPool() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TriggerBuildOptions) *string {
		if v == nil {
			return nil
		}
		return v.WorkerPool
	}).(pulumi.StringPtrOutput)
}

type TriggerBuildOptionsVolume struct {
	// Name of the volume to mount.
	// Volume names must be unique per build step and must be valid names for Docker volumes.
	// Each named volume must be used by at least two build steps.
	Name *string `pulumi:"name"`
	// Path at which to mount the volume.
	// Paths must be absolute and cannot conflict with other volume paths on the same
	// build step or with certain reserved volume paths.
	Path *string `pulumi:"path"`
}

// TriggerBuildOptionsVolumeInput is an input type that accepts TriggerBuildOptionsVolumeArgs and TriggerBuildOptionsVolumeOutput values.
// You can construct a concrete instance of `TriggerBuildOptionsVolumeInput` via:
//
//	TriggerBuildOptionsVolumeArgs{...}
type TriggerBuildOptionsVolumeInput interface {
	pulumi.Input

	ToTriggerBuildOptionsVolumeOutput() TriggerBuildOptionsVolumeOutput
	ToTriggerBuildOptionsVolumeOutputWithContext(context.Context) TriggerBuildOptionsVolumeOutput
}

type TriggerBuildOptionsVolumeArgs struct {
	// Name of the volume to mount.
	// Volume names must be unique per build step and must be valid names for Docker volumes.
	// Each named volume must be used by at least two build steps.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Path at which to mount the volume.
	// Paths must be absolute and cannot conflict with other volume paths on the same
	// build step or with certain reserved volume paths.
	Path pulumi.StringPtrInput `pulumi:"path"`
}

func (TriggerBuildOptionsVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerBuildOptionsVolume)(nil)).Elem()
}

func (i TriggerBuildOptionsVolumeArgs) ToTriggerBuildOptionsVolumeOutput() TriggerBuildOptionsVolumeOutput {
	return i.ToTriggerBuildOptionsVolumeOutputWithContext(context.Background())
}

func (i TriggerBuildOptionsVolumeArgs) ToTriggerBuildOptionsVolumeOutputWithContext(ctx context.Context) TriggerBuildOptionsVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerBuildOptionsVolumeOutput)
}

// TriggerBuildOptionsVolumeArrayInput is an input type that accepts TriggerBuildOptionsVolumeArray and TriggerBuildOptionsVolumeArrayOutput values.
// You can construct a concrete instance of `TriggerBuildOptionsVolumeArrayInput` via:
//
//	TriggerBuildOptionsVolumeArray{ TriggerBuildOptionsVolumeArgs{...} }
type TriggerBuildOptionsVolumeArrayInput interface {
	pulumi.Input

	ToTriggerBuildOptionsVolumeArrayOutput() TriggerBuildOptionsVolumeArrayOutput
	ToTriggerBuildOptionsVolumeArrayOutputWithContext(context.Context) TriggerBuildOptionsVolumeArrayOutput
}

type TriggerBuildOptionsVolumeArray []TriggerBuildOptionsVolumeInput

func (TriggerBuildOptionsVolumeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TriggerBuildOptionsVolume)(nil)).Elem()
}

func (i TriggerBuildOptionsVolumeArray) ToTriggerBuildOptionsVolumeArrayOutput() TriggerBuildOptionsVolumeArrayOutput {
	return i.ToTriggerBuildOptionsVolumeArrayOutputWithContext(context.Background())
}

func (i TriggerBuildOptionsVolumeArray) ToTriggerBuildOptionsVolumeArrayOutputWithContext(ctx context.Context) TriggerBuildOptionsVolumeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerBuildOptionsVolumeArrayOutput)
}

type TriggerBuildOptionsVolumeOutput struct{ *pulumi.OutputState }

func (TriggerBuildOptionsVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerBuildOptionsVolume)(nil)).Elem()
}

func (o TriggerBuildOptionsVolumeOutput) ToTriggerBuildOptionsVolumeOutput() TriggerBuildOptionsVolumeOutput {
	return o
}

func (o TriggerBuildOptionsVolumeOutput) ToTriggerBuildOptionsVolumeOutputWithContext(ctx context.Context) TriggerBuildOptionsVolumeOutput {
	return o
}

// Name of the volume to mount.
// Volume names must be unique per build step and must be valid names for Docker volumes.
// Each named volume must be used by at least two build steps.
func (o TriggerBuildOptionsVolumeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerBuildOptionsVolume) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Path at which to mount the volume.
// Paths must be absolute and cannot conflict with other volume paths on the same
// build step or with certain reserved volume paths.
func (o TriggerBuildOptionsVolumeOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerBuildOptionsVolume) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type TriggerBuildOptionsVolumeArrayOutput struct{ *pulumi.OutputState }

func (TriggerBuildOptionsVolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TriggerBuildOptionsVolume)(nil)).Elem()
}

func (o TriggerBuildOptionsVolumeArrayOutput) ToTriggerBuildOptionsVolumeArrayOutput() TriggerBuildOptionsVolumeArrayOutput {
	return o
}

func (o TriggerBuildOptionsVolumeArrayOutput) ToTriggerBuildOptionsVolumeArrayOutputWithContext(ctx context.Context) TriggerBuildOptionsVolumeArrayOutput {
	return o
}

func (o TriggerBuildOptionsVolumeArrayOutput) Index(i pulumi.IntInput) TriggerBuildOptionsVolumeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TriggerBuildOptionsVolume {
		return vs[0].([]TriggerBuildOptionsVolume)[vs[1].(int)]
	}).(TriggerBuildOptionsVolumeOutput)
}

type TriggerBuildSecret struct {
	// Cloud KMS key name to use to decrypt these envs.
	KmsKeyName string `pulumi:"kmsKeyName"`
	// A list of global environment variables, which are encrypted using a Cloud Key Management
	// Service crypto key. These values must be specified in the build's Secret. These variables
	// will be available to all build steps in this build.
	SecretEnv map[string]string `pulumi:"secretEnv"`
}

// TriggerBuildSecretInput is an input type that accepts TriggerBuildSecretArgs and TriggerBuildSecretOutput values.
// You can construct a concrete instance of `TriggerBuildSecretInput` via:
//
//	TriggerBuildSecretArgs{...}
type TriggerBuildSecretInput interface {
	pulumi.Input

	ToTriggerBuildSecretOutput() TriggerBuildSecretOutput
	ToTriggerBuildSecretOutputWithContext(context.Context) TriggerBuildSecretOutput
}

type TriggerBuildSecretArgs struct {
	// Cloud KMS key name to use to decrypt these envs.
	KmsKeyName pulumi.StringInput `pulumi:"kmsKeyName"`
	// A list of global environment variables, which are encrypted using a Cloud Key Management
	// Service crypto key. These values must be specified in the build's Secret. These variables
	// will be available to all build steps in this build.
	SecretEnv pulumi.StringMapInput `pulumi:"secretEnv"`
}

func (TriggerBuildSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerBuildSecret)(nil)).Elem()
}

func (i TriggerBuildSecretArgs) ToTriggerBuildSecretOutput() TriggerBuildSecretOutput {
	return i.ToTriggerBuildSecretOutputWithContext(context.Background())
}

func (i TriggerBuildSecretArgs) ToTriggerBuildSecretOutputWithContext(ctx context.Context) TriggerBuildSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerBuildSecretOutput)
}

// TriggerBuildSecretArrayInput is an input type that accepts TriggerBuildSecretArray and TriggerBuildSecretArrayOutput values.
// You can construct a concrete instance of `TriggerBuildSecretArrayInput` via:
//
//	TriggerBuildSecretArray{ TriggerBuildSecretArgs{...} }
type TriggerBuildSecretArrayInput interface {
	pulumi.Input

	ToTriggerBuildSecretArrayOutput() TriggerBuildSecretArrayOutput
	ToTriggerBuildSecretArrayOutputWithContext(context.Context) TriggerBuildSecretArrayOutput
}

type TriggerBuildSecretArray []TriggerBuildSecretInput

func (TriggerBuildSecretArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TriggerBuildSecret)(nil)).Elem()
}

func (i TriggerBuildSecretArray) ToTriggerBuildSecretArrayOutput() TriggerBuildSecretArrayOutput {
	return i.ToTriggerBuildSecretArrayOutputWithContext(context.Background())
}

func (i TriggerBuildSecretArray) ToTriggerBuildSecretArrayOutputWithContext(ctx context.Context) TriggerBuildSecretArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerBuildSecretArrayOutput)
}

type TriggerBuildSecretOutput struct{ *pulumi.OutputState }

func (TriggerBuildSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerBuildSecret)(nil)).Elem()
}

func (o TriggerBuildSecretOutput) ToTriggerBuildSecretOutput() TriggerBuildSecretOutput {
	return o
}

func (o TriggerBuildSecretOutput) ToTriggerBuildSecretOutputWithContext(ctx context.Context) TriggerBuildSecretOutput {
	return o
}

// Cloud KMS key name to use to decrypt these envs.
func (o TriggerBuildSecretOutput) KmsKeyName() pulumi.StringOutput {
	return o.ApplyT(func(v TriggerBuildSecret) string { return v.KmsKeyName }).(pulumi.StringOutput)
}

// A list of global environment variables, which are encrypted using a Cloud Key Management
// Service crypto key. These values must be specified in the build's Secret. These variables
// will be available to all build steps in this build.
func (o TriggerBuildSecretOutput) SecretEnv() pulumi.StringMapOutput {
	return o.ApplyT(func(v TriggerBuildSecret) map[string]string { return v.SecretEnv }).(pulumi.StringMapOutput)
}

type TriggerBuildSecretArrayOutput struct{ *pulumi.OutputState }

func (TriggerBuildSecretArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TriggerBuildSecret)(nil)).Elem()
}

func (o TriggerBuildSecretArrayOutput) ToTriggerBuildSecretArrayOutput() TriggerBuildSecretArrayOutput {
	return o
}

func (o TriggerBuildSecretArrayOutput) ToTriggerBuildSecretArrayOutputWithContext(ctx context.Context) TriggerBuildSecretArrayOutput {
	return o
}

func (o TriggerBuildSecretArrayOutput) Index(i pulumi.IntInput) TriggerBuildSecretOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TriggerBuildSecret {
		return vs[0].([]TriggerBuildSecret)[vs[1].(int)]
	}).(TriggerBuildSecretOutput)
}

type TriggerBuildSource struct {
	// Location of the source in a Google Cloud Source Repository.
	// Structure is documented below.
	RepoSource *TriggerBuildSourceRepoSource `pulumi:"repoSource"`
	// Location of the source in an archive file in Google Cloud Storage.
	// Structure is documented below.
	StorageSource *TriggerBuildSourceStorageSource `pulumi:"storageSource"`
}

// TriggerBuildSourceInput is an input type that accepts TriggerBuildSourceArgs and TriggerBuildSourceOutput values.
// You can construct a concrete instance of `TriggerBuildSourceInput` via:
//
//	TriggerBuildSourceArgs{...}
type TriggerBuildSourceInput interface {
	pulumi.Input

	ToTriggerBuildSourceOutput() TriggerBuildSourceOutput
	ToTriggerBuildSourceOutputWithContext(context.Context) TriggerBuildSourceOutput
}

type TriggerBuildSourceArgs struct {
	// Location of the source in a Google Cloud Source Repository.
	// Structure is documented below.
	RepoSource TriggerBuildSourceRepoSourcePtrInput `pulumi:"repoSource"`
	// Location of the source in an archive file in Google Cloud Storage.
	// Structure is documented below.
	StorageSource TriggerBuildSourceStorageSourcePtrInput `pulumi:"storageSource"`
}

func (TriggerBuildSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerBuildSource)(nil)).Elem()
}

func (i TriggerBuildSourceArgs) ToTriggerBuildSourceOutput() TriggerBuildSourceOutput {
	return i.ToTriggerBuildSourceOutputWithContext(context.Background())
}

func (i TriggerBuildSourceArgs) ToTriggerBuildSourceOutputWithContext(ctx context.Context) TriggerBuildSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerBuildSourceOutput)
}

func (i TriggerBuildSourceArgs) ToTriggerBuildSourcePtrOutput() TriggerBuildSourcePtrOutput {
	return i.ToTriggerBuildSourcePtrOutputWithContext(context.Background())
}

func (i TriggerBuildSourceArgs) ToTriggerBuildSourcePtrOutputWithContext(ctx context.Context) TriggerBuildSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerBuildSourceOutput).ToTriggerBuildSourcePtrOutputWithContext(ctx)
}

// TriggerBuildSourcePtrInput is an input type that accepts TriggerBuildSourceArgs, TriggerBuildSourcePtr and TriggerBuildSourcePtrOutput values.
// You can construct a concrete instance of `TriggerBuildSourcePtrInput` via:
//
//	        TriggerBuildSourceArgs{...}
//
//	or:
//
//	        nil
type TriggerBuildSourcePtrInput interface {
	pulumi.Input

	ToTriggerBuildSourcePtrOutput() TriggerBuildSourcePtrOutput
	ToTriggerBuildSourcePtrOutputWithContext(context.Context) TriggerBuildSourcePtrOutput
}

type triggerBuildSourcePtrType TriggerBuildSourceArgs

func TriggerBuildSourcePtr(v *TriggerBuildSourceArgs) TriggerBuildSourcePtrInput {
	return (*triggerBuildSourcePtrType)(v)
}

func (*triggerBuildSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerBuildSource)(nil)).Elem()
}

func (i *triggerBuildSourcePtrType) ToTriggerBuildSourcePtrOutput() TriggerBuildSourcePtrOutput {
	return i.ToTriggerBuildSourcePtrOutputWithContext(context.Background())
}

func (i *triggerBuildSourcePtrType) ToTriggerBuildSourcePtrOutputWithContext(ctx context.Context) TriggerBuildSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerBuildSourcePtrOutput)
}

type TriggerBuildSourceOutput struct{ *pulumi.OutputState }

func (TriggerBuildSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerBuildSource)(nil)).Elem()
}

func (o TriggerBuildSourceOutput) ToTriggerBuildSourceOutput() TriggerBuildSourceOutput {
	return o
}

func (o TriggerBuildSourceOutput) ToTriggerBuildSourceOutputWithContext(ctx context.Context) TriggerBuildSourceOutput {
	return o
}

func (o TriggerBuildSourceOutput) ToTriggerBuildSourcePtrOutput() TriggerBuildSourcePtrOutput {
	return o.ToTriggerBuildSourcePtrOutputWithContext(context.Background())
}

func (o TriggerBuildSourceOutput) ToTriggerBuildSourcePtrOutputWithContext(ctx context.Context) TriggerBuildSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TriggerBuildSource) *TriggerBuildSource {
		return &v
	}).(TriggerBuildSourcePtrOutput)
}

// Location of the source in a Google Cloud Source Repository.
// Structure is documented below.
func (o TriggerBuildSourceOutput) RepoSource() TriggerBuildSourceRepoSourcePtrOutput {
	return o.ApplyT(func(v TriggerBuildSource) *TriggerBuildSourceRepoSource { return v.RepoSource }).(TriggerBuildSourceRepoSourcePtrOutput)
}

// Location of the source in an archive file in Google Cloud Storage.
// Structure is documented below.
func (o TriggerBuildSourceOutput) StorageSource() TriggerBuildSourceStorageSourcePtrOutput {
	return o.ApplyT(func(v TriggerBuildSource) *TriggerBuildSourceStorageSource { return v.StorageSource }).(TriggerBuildSourceStorageSourcePtrOutput)
}

type TriggerBuildSourcePtrOutput struct{ *pulumi.OutputState }

func (TriggerBuildSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerBuildSource)(nil)).Elem()
}

func (o TriggerBuildSourcePtrOutput) ToTriggerBuildSourcePtrOutput() TriggerBuildSourcePtrOutput {
	return o
}

func (o TriggerBuildSourcePtrOutput) ToTriggerBuildSourcePtrOutputWithContext(ctx context.Context) TriggerBuildSourcePtrOutput {
	return o
}

func (o TriggerBuildSourcePtrOutput) Elem() TriggerBuildSourceOutput {
	return o.ApplyT(func(v *TriggerBuildSource) TriggerBuildSource {
		if v != nil {
			return *v
		}
		var ret TriggerBuildSource
		return ret
	}).(TriggerBuildSourceOutput)
}

// Location of the source in a Google Cloud Source Repository.
// Structure is documented below.
func (o TriggerBuildSourcePtrOutput) RepoSource() TriggerBuildSourceRepoSourcePtrOutput {
	return o.ApplyT(func(v *TriggerBuildSource) *TriggerBuildSourceRepoSource {
		if v == nil {
			return nil
		}
		return v.RepoSource
	}).(TriggerBuildSourceRepoSourcePtrOutput)
}

// Location of the source in an archive file in Google Cloud Storage.
// Structure is documented below.
func (o TriggerBuildSourcePtrOutput) StorageSource() TriggerBuildSourceStorageSourcePtrOutput {
	return o.ApplyT(func(v *TriggerBuildSource) *TriggerBuildSourceStorageSource {
		if v == nil {
			return nil
		}
		return v.StorageSource
	}).(TriggerBuildSourceStorageSourcePtrOutput)
}

type TriggerBuildSourceRepoSource struct {
	// Regex matching branches to build. Exactly one a of branch name, tag, or commit SHA must be provided.
	// The syntax of the regular expressions accepted is the syntax accepted by RE2 and
	// described at https://github.com/google/re2/wiki/Syntax
	BranchName *string `pulumi:"branchName"`
	// Explicit commit SHA to build. Exactly one a of branch name, tag, or commit SHA must be provided.
	CommitSha *string `pulumi:"commitSha"`
	// Working directory to use when running this step's container.
	// If this value is a relative path, it is relative to the build's working
	// directory. If this value is absolute, it may be outside the build's working
	// directory, in which case the contents of the path may not be persisted
	// across build step executions, unless a `volume` for that path is specified.
	// If the build specifies a `RepoSource` with `dir` and a step with a
	// `dir`,
	// which specifies an absolute path, the `RepoSource` `dir` is ignored
	// for the step's execution.
	Dir *string `pulumi:"dir"`
	// Only trigger a build if the revision regex does NOT match the revision regex.
	InvertRegex *bool `pulumi:"invertRegex"`
	// ID of the project that owns the Cloud Source Repository.
	// If omitted, the project ID requesting the build is assumed.
	ProjectId *string `pulumi:"projectId"`
	// Name of the Cloud Source Repository.
	RepoName string `pulumi:"repoName"`
	// Substitutions to use in a triggered build. Should only be used with triggers.run
	Substitutions map[string]string `pulumi:"substitutions"`
	// Regex matching tags to build. Exactly one a of branch name, tag, or commit SHA must be provided.
	// The syntax of the regular expressions accepted is the syntax accepted by RE2 and
	// described at https://github.com/google/re2/wiki/Syntax
	TagName *string `pulumi:"tagName"`
}

// TriggerBuildSourceRepoSourceInput is an input type that accepts TriggerBuildSourceRepoSourceArgs and TriggerBuildSourceRepoSourceOutput values.
// You can construct a concrete instance of `TriggerBuildSourceRepoSourceInput` via:
//
//	TriggerBuildSourceRepoSourceArgs{...}
type TriggerBuildSourceRepoSourceInput interface {
	pulumi.Input

	ToTriggerBuildSourceRepoSourceOutput() TriggerBuildSourceRepoSourceOutput
	ToTriggerBuildSourceRepoSourceOutputWithContext(context.Context) TriggerBuildSourceRepoSourceOutput
}

type TriggerBuildSourceRepoSourceArgs struct {
	// Regex matching branches to build. Exactly one a of branch name, tag, or commit SHA must be provided.
	// The syntax of the regular expressions accepted is the syntax accepted by RE2 and
	// described at https://github.com/google/re2/wiki/Syntax
	BranchName pulumi.StringPtrInput `pulumi:"branchName"`
	// Explicit commit SHA to build. Exactly one a of branch name, tag, or commit SHA must be provided.
	CommitSha pulumi.StringPtrInput `pulumi:"commitSha"`
	// Working directory to use when running this step's container.
	// If this value is a relative path, it is relative to the build's working
	// directory. If this value is absolute, it may be outside the build's working
	// directory, in which case the contents of the path may not be persisted
	// across build step executions, unless a `volume` for that path is specified.
	// If the build specifies a `RepoSource` with `dir` and a step with a
	// `dir`,
	// which specifies an absolute path, the `RepoSource` `dir` is ignored
	// for the step's execution.
	Dir pulumi.StringPtrInput `pulumi:"dir"`
	// Only trigger a build if the revision regex does NOT match the revision regex.
	InvertRegex pulumi.BoolPtrInput `pulumi:"invertRegex"`
	// ID of the project that owns the Cloud Source Repository.
	// If omitted, the project ID requesting the build is assumed.
	ProjectId pulumi.StringPtrInput `pulumi:"projectId"`
	// Name of the Cloud Source Repository.
	RepoName pulumi.StringInput `pulumi:"repoName"`
	// Substitutions to use in a triggered build. Should only be used with triggers.run
	Substitutions pulumi.StringMapInput `pulumi:"substitutions"`
	// Regex matching tags to build. Exactly one a of branch name, tag, or commit SHA must be provided.
	// The syntax of the regular expressions accepted is the syntax accepted by RE2 and
	// described at https://github.com/google/re2/wiki/Syntax
	TagName pulumi.StringPtrInput `pulumi:"tagName"`
}

func (TriggerBuildSourceRepoSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerBuildSourceRepoSource)(nil)).Elem()
}

func (i TriggerBuildSourceRepoSourceArgs) ToTriggerBuildSourceRepoSourceOutput() TriggerBuildSourceRepoSourceOutput {
	return i.ToTriggerBuildSourceRepoSourceOutputWithContext(context.Background())
}

func (i TriggerBuildSourceRepoSourceArgs) ToTriggerBuildSourceRepoSourceOutputWithContext(ctx context.Context) TriggerBuildSourceRepoSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerBuildSourceRepoSourceOutput)
}

func (i TriggerBuildSourceRepoSourceArgs) ToTriggerBuildSourceRepoSourcePtrOutput() TriggerBuildSourceRepoSourcePtrOutput {
	return i.ToTriggerBuildSourceRepoSourcePtrOutputWithContext(context.Background())
}

func (i TriggerBuildSourceRepoSourceArgs) ToTriggerBuildSourceRepoSourcePtrOutputWithContext(ctx context.Context) TriggerBuildSourceRepoSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerBuildSourceRepoSourceOutput).ToTriggerBuildSourceRepoSourcePtrOutputWithContext(ctx)
}

// TriggerBuildSourceRepoSourcePtrInput is an input type that accepts TriggerBuildSourceRepoSourceArgs, TriggerBuildSourceRepoSourcePtr and TriggerBuildSourceRepoSourcePtrOutput values.
// You can construct a concrete instance of `TriggerBuildSourceRepoSourcePtrInput` via:
//
//	        TriggerBuildSourceRepoSourceArgs{...}
//
//	or:
//
//	        nil
type TriggerBuildSourceRepoSourcePtrInput interface {
	pulumi.Input

	ToTriggerBuildSourceRepoSourcePtrOutput() TriggerBuildSourceRepoSourcePtrOutput
	ToTriggerBuildSourceRepoSourcePtrOutputWithContext(context.Context) TriggerBuildSourceRepoSourcePtrOutput
}

type triggerBuildSourceRepoSourcePtrType TriggerBuildSourceRepoSourceArgs

func TriggerBuildSourceRepoSourcePtr(v *TriggerBuildSourceRepoSourceArgs) TriggerBuildSourceRepoSourcePtrInput {
	return (*triggerBuildSourceRepoSourcePtrType)(v)
}

func (*triggerBuildSourceRepoSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerBuildSourceRepoSource)(nil)).Elem()
}

func (i *triggerBuildSourceRepoSourcePtrType) ToTriggerBuildSourceRepoSourcePtrOutput() TriggerBuildSourceRepoSourcePtrOutput {
	return i.ToTriggerBuildSourceRepoSourcePtrOutputWithContext(context.Background())
}

func (i *triggerBuildSourceRepoSourcePtrType) ToTriggerBuildSourceRepoSourcePtrOutputWithContext(ctx context.Context) TriggerBuildSourceRepoSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerBuildSourceRepoSourcePtrOutput)
}

type TriggerBuildSourceRepoSourceOutput struct{ *pulumi.OutputState }

func (TriggerBuildSourceRepoSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerBuildSourceRepoSource)(nil)).Elem()
}

func (o TriggerBuildSourceRepoSourceOutput) ToTriggerBuildSourceRepoSourceOutput() TriggerBuildSourceRepoSourceOutput {
	return o
}

func (o TriggerBuildSourceRepoSourceOutput) ToTriggerBuildSourceRepoSourceOutputWithContext(ctx context.Context) TriggerBuildSourceRepoSourceOutput {
	return o
}

func (o TriggerBuildSourceRepoSourceOutput) ToTriggerBuildSourceRepoSourcePtrOutput() TriggerBuildSourceRepoSourcePtrOutput {
	return o.ToTriggerBuildSourceRepoSourcePtrOutputWithContext(context.Background())
}

func (o TriggerBuildSourceRepoSourceOutput) ToTriggerBuildSourceRepoSourcePtrOutputWithContext(ctx context.Context) TriggerBuildSourceRepoSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TriggerBuildSourceRepoSource) *TriggerBuildSourceRepoSource {
		return &v
	}).(TriggerBuildSourceRepoSourcePtrOutput)
}

// Regex matching branches to build. Exactly one a of branch name, tag, or commit SHA must be provided.
// The syntax of the regular expressions accepted is the syntax accepted by RE2 and
// described at https://github.com/google/re2/wiki/Syntax
func (o TriggerBuildSourceRepoSourceOutput) BranchName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerBuildSourceRepoSource) *string { return v.BranchName }).(pulumi.StringPtrOutput)
}

// Explicit commit SHA to build. Exactly one a of branch name, tag, or commit SHA must be provided.
func (o TriggerBuildSourceRepoSourceOutput) CommitSha() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerBuildSourceRepoSource) *string { return v.CommitSha }).(pulumi.StringPtrOutput)
}

// Working directory to use when running this step's container.
// If this value is a relative path, it is relative to the build's working
// directory. If this value is absolute, it may be outside the build's working
// directory, in which case the contents of the path may not be persisted
// across build step executions, unless a `volume` for that path is specified.
// If the build specifies a `RepoSource` with `dir` and a step with a
// `dir`,
// which specifies an absolute path, the `RepoSource` `dir` is ignored
// for the step's execution.
func (o TriggerBuildSourceRepoSourceOutput) Dir() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerBuildSourceRepoSource) *string { return v.Dir }).(pulumi.StringPtrOutput)
}

// Only trigger a build if the revision regex does NOT match the revision regex.
func (o TriggerBuildSourceRepoSourceOutput) InvertRegex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TriggerBuildSourceRepoSource) *bool { return v.InvertRegex }).(pulumi.BoolPtrOutput)
}

// ID of the project that owns the Cloud Source Repository.
// If omitted, the project ID requesting the build is assumed.
func (o TriggerBuildSourceRepoSourceOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerBuildSourceRepoSource) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

// Name of the Cloud Source Repository.
func (o TriggerBuildSourceRepoSourceOutput) RepoName() pulumi.StringOutput {
	return o.ApplyT(func(v TriggerBuildSourceRepoSource) string { return v.RepoName }).(pulumi.StringOutput)
}

// Substitutions to use in a triggered build. Should only be used with triggers.run
func (o TriggerBuildSourceRepoSourceOutput) Substitutions() pulumi.StringMapOutput {
	return o.ApplyT(func(v TriggerBuildSourceRepoSource) map[string]string { return v.Substitutions }).(pulumi.StringMapOutput)
}

// Regex matching tags to build. Exactly one a of branch name, tag, or commit SHA must be provided.
// The syntax of the regular expressions accepted is the syntax accepted by RE2 and
// described at https://github.com/google/re2/wiki/Syntax
func (o TriggerBuildSourceRepoSourceOutput) TagName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerBuildSourceRepoSource) *string { return v.TagName }).(pulumi.StringPtrOutput)
}

type TriggerBuildSourceRepoSourcePtrOutput struct{ *pulumi.OutputState }

func (TriggerBuildSourceRepoSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerBuildSourceRepoSource)(nil)).Elem()
}

func (o TriggerBuildSourceRepoSourcePtrOutput) ToTriggerBuildSourceRepoSourcePtrOutput() TriggerBuildSourceRepoSourcePtrOutput {
	return o
}

func (o TriggerBuildSourceRepoSourcePtrOutput) ToTriggerBuildSourceRepoSourcePtrOutputWithContext(ctx context.Context) TriggerBuildSourceRepoSourcePtrOutput {
	return o
}

func (o TriggerBuildSourceRepoSourcePtrOutput) Elem() TriggerBuildSourceRepoSourceOutput {
	return o.ApplyT(func(v *TriggerBuildSourceRepoSource) TriggerBuildSourceRepoSource {
		if v != nil {
			return *v
		}
		var ret TriggerBuildSourceRepoSource
		return ret
	}).(TriggerBuildSourceRepoSourceOutput)
}

// Regex matching branches to build. Exactly one a of branch name, tag, or commit SHA must be provided.
// The syntax of the regular expressions accepted is the syntax accepted by RE2 and
// described at https://github.com/google/re2/wiki/Syntax
func (o TriggerBuildSourceRepoSourcePtrOutput) BranchName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TriggerBuildSourceRepoSource) *string {
		if v == nil {
			return nil
		}
		return v.BranchName
	}).(pulumi.StringPtrOutput)
}

// Explicit commit SHA to build. Exactly one a of branch name, tag, or commit SHA must be provided.
func (o TriggerBuildSourceRepoSourcePtrOutput) CommitSha() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TriggerBuildSourceRepoSource) *string {
		if v == nil {
			return nil
		}
		return v.CommitSha
	}).(pulumi.StringPtrOutput)
}

// Working directory to use when running this step's container.
// If this value is a relative path, it is relative to the build's working
// directory. If this value is absolute, it may be outside the build's working
// directory, in which case the contents of the path may not be persisted
// across build step executions, unless a `volume` for that path is specified.
// If the build specifies a `RepoSource` with `dir` and a step with a
// `dir`,
// which specifies an absolute path, the `RepoSource` `dir` is ignored
// for the step's execution.
func (o TriggerBuildSourceRepoSourcePtrOutput) Dir() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TriggerBuildSourceRepoSource) *string {
		if v == nil {
			return nil
		}
		return v.Dir
	}).(pulumi.StringPtrOutput)
}

// Only trigger a build if the revision regex does NOT match the revision regex.
func (o TriggerBuildSourceRepoSourcePtrOutput) InvertRegex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TriggerBuildSourceRepoSource) *bool {
		if v == nil {
			return nil
		}
		return v.InvertRegex
	}).(pulumi.BoolPtrOutput)
}

// ID of the project that owns the Cloud Source Repository.
// If omitted, the project ID requesting the build is assumed.
func (o TriggerBuildSourceRepoSourcePtrOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TriggerBuildSourceRepoSource) *string {
		if v == nil {
			return nil
		}
		return v.ProjectId
	}).(pulumi.StringPtrOutput)
}

// Name of the Cloud Source Repository.
func (o TriggerBuildSourceRepoSourcePtrOutput) RepoName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TriggerBuildSourceRepoSource) *string {
		if v == nil {
			return nil
		}
		return &v.RepoName
	}).(pulumi.StringPtrOutput)
}

// Substitutions to use in a triggered build. Should only be used with triggers.run
func (o TriggerBuildSourceRepoSourcePtrOutput) Substitutions() pulumi.StringMapOutput {
	return o.ApplyT(func(v *TriggerBuildSourceRepoSource) map[string]string {
		if v == nil {
			return nil
		}
		return v.Substitutions
	}).(pulumi.StringMapOutput)
}

// Regex matching tags to build. Exactly one a of branch name, tag, or commit SHA must be provided.
// The syntax of the regular expressions accepted is the syntax accepted by RE2 and
// described at https://github.com/google/re2/wiki/Syntax
func (o TriggerBuildSourceRepoSourcePtrOutput) TagName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TriggerBuildSourceRepoSource) *string {
		if v == nil {
			return nil
		}
		return v.TagName
	}).(pulumi.StringPtrOutput)
}

type TriggerBuildSourceStorageSource struct {
	// Google Cloud Storage bucket containing the source.
	Bucket string `pulumi:"bucket"`
	// Google Cloud Storage generation for the object.
	// If the generation is omitted, the latest generation will be used
	Generation *string `pulumi:"generation"`
	// Google Cloud Storage object containing the source.
	// This object must be a gzipped archive file (.tar.gz) containing source to build.
	Object string `pulumi:"object"`
}

// TriggerBuildSourceStorageSourceInput is an input type that accepts TriggerBuildSourceStorageSourceArgs and TriggerBuildSourceStorageSourceOutput values.
// You can construct a concrete instance of `TriggerBuildSourceStorageSourceInput` via:
//
//	TriggerBuildSourceStorageSourceArgs{...}
type TriggerBuildSourceStorageSourceInput interface {
	pulumi.Input

	ToTriggerBuildSourceStorageSourceOutput() TriggerBuildSourceStorageSourceOutput
	ToTriggerBuildSourceStorageSourceOutputWithContext(context.Context) TriggerBuildSourceStorageSourceOutput
}

type TriggerBuildSourceStorageSourceArgs struct {
	// Google Cloud Storage bucket containing the source.
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// Google Cloud Storage generation for the object.
	// If the generation is omitted, the latest generation will be used
	Generation pulumi.StringPtrInput `pulumi:"generation"`
	// Google Cloud Storage object containing the source.
	// This object must be a gzipped archive file (.tar.gz) containing source to build.
	Object pulumi.StringInput `pulumi:"object"`
}

func (TriggerBuildSourceStorageSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerBuildSourceStorageSource)(nil)).Elem()
}

func (i TriggerBuildSourceStorageSourceArgs) ToTriggerBuildSourceStorageSourceOutput() TriggerBuildSourceStorageSourceOutput {
	return i.ToTriggerBuildSourceStorageSourceOutputWithContext(context.Background())
}

func (i TriggerBuildSourceStorageSourceArgs) ToTriggerBuildSourceStorageSourceOutputWithContext(ctx context.Context) TriggerBuildSourceStorageSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerBuildSourceStorageSourceOutput)
}

func (i TriggerBuildSourceStorageSourceArgs) ToTriggerBuildSourceStorageSourcePtrOutput() TriggerBuildSourceStorageSourcePtrOutput {
	return i.ToTriggerBuildSourceStorageSourcePtrOutputWithContext(context.Background())
}

func (i TriggerBuildSourceStorageSourceArgs) ToTriggerBuildSourceStorageSourcePtrOutputWithContext(ctx context.Context) TriggerBuildSourceStorageSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerBuildSourceStorageSourceOutput).ToTriggerBuildSourceStorageSourcePtrOutputWithContext(ctx)
}

// TriggerBuildSourceStorageSourcePtrInput is an input type that accepts TriggerBuildSourceStorageSourceArgs, TriggerBuildSourceStorageSourcePtr and TriggerBuildSourceStorageSourcePtrOutput values.
// You can construct a concrete instance of `TriggerBuildSourceStorageSourcePtrInput` via:
//
//	        TriggerBuildSourceStorageSourceArgs{...}
//
//	or:
//
//	        nil
type TriggerBuildSourceStorageSourcePtrInput interface {
	pulumi.Input

	ToTriggerBuildSourceStorageSourcePtrOutput() TriggerBuildSourceStorageSourcePtrOutput
	ToTriggerBuildSourceStorageSourcePtrOutputWithContext(context.Context) TriggerBuildSourceStorageSourcePtrOutput
}

type triggerBuildSourceStorageSourcePtrType TriggerBuildSourceStorageSourceArgs

func TriggerBuildSourceStorageSourcePtr(v *TriggerBuildSourceStorageSourceArgs) TriggerBuildSourceStorageSourcePtrInput {
	return (*triggerBuildSourceStorageSourcePtrType)(v)
}

func (*triggerBuildSourceStorageSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerBuildSourceStorageSource)(nil)).Elem()
}

func (i *triggerBuildSourceStorageSourcePtrType) ToTriggerBuildSourceStorageSourcePtrOutput() TriggerBuildSourceStorageSourcePtrOutput {
	return i.ToTriggerBuildSourceStorageSourcePtrOutputWithContext(context.Background())
}

func (i *triggerBuildSourceStorageSourcePtrType) ToTriggerBuildSourceStorageSourcePtrOutputWithContext(ctx context.Context) TriggerBuildSourceStorageSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerBuildSourceStorageSourcePtrOutput)
}

type TriggerBuildSourceStorageSourceOutput struct{ *pulumi.OutputState }

func (TriggerBuildSourceStorageSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerBuildSourceStorageSource)(nil)).Elem()
}

func (o TriggerBuildSourceStorageSourceOutput) ToTriggerBuildSourceStorageSourceOutput() TriggerBuildSourceStorageSourceOutput {
	return o
}

func (o TriggerBuildSourceStorageSourceOutput) ToTriggerBuildSourceStorageSourceOutputWithContext(ctx context.Context) TriggerBuildSourceStorageSourceOutput {
	return o
}

func (o TriggerBuildSourceStorageSourceOutput) ToTriggerBuildSourceStorageSourcePtrOutput() TriggerBuildSourceStorageSourcePtrOutput {
	return o.ToTriggerBuildSourceStorageSourcePtrOutputWithContext(context.Background())
}

func (o TriggerBuildSourceStorageSourceOutput) ToTriggerBuildSourceStorageSourcePtrOutputWithContext(ctx context.Context) TriggerBuildSourceStorageSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TriggerBuildSourceStorageSource) *TriggerBuildSourceStorageSource {
		return &v
	}).(TriggerBuildSourceStorageSourcePtrOutput)
}

// Google Cloud Storage bucket containing the source.
func (o TriggerBuildSourceStorageSourceOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v TriggerBuildSourceStorageSource) string { return v.Bucket }).(pulumi.StringOutput)
}

// Google Cloud Storage generation for the object.
// If the generation is omitted, the latest generation will be used
func (o TriggerBuildSourceStorageSourceOutput) Generation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerBuildSourceStorageSource) *string { return v.Generation }).(pulumi.StringPtrOutput)
}

// Google Cloud Storage object containing the source.
// This object must be a gzipped archive file (.tar.gz) containing source to build.
func (o TriggerBuildSourceStorageSourceOutput) Object() pulumi.StringOutput {
	return o.ApplyT(func(v TriggerBuildSourceStorageSource) string { return v.Object }).(pulumi.StringOutput)
}

type TriggerBuildSourceStorageSourcePtrOutput struct{ *pulumi.OutputState }

func (TriggerBuildSourceStorageSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerBuildSourceStorageSource)(nil)).Elem()
}

func (o TriggerBuildSourceStorageSourcePtrOutput) ToTriggerBuildSourceStorageSourcePtrOutput() TriggerBuildSourceStorageSourcePtrOutput {
	return o
}

func (o TriggerBuildSourceStorageSourcePtrOutput) ToTriggerBuildSourceStorageSourcePtrOutputWithContext(ctx context.Context) TriggerBuildSourceStorageSourcePtrOutput {
	return o
}

func (o TriggerBuildSourceStorageSourcePtrOutput) Elem() TriggerBuildSourceStorageSourceOutput {
	return o.ApplyT(func(v *TriggerBuildSourceStorageSource) TriggerBuildSourceStorageSource {
		if v != nil {
			return *v
		}
		var ret TriggerBuildSourceStorageSource
		return ret
	}).(TriggerBuildSourceStorageSourceOutput)
}

// Google Cloud Storage bucket containing the source.
func (o TriggerBuildSourceStorageSourcePtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TriggerBuildSourceStorageSource) *string {
		if v == nil {
			return nil
		}
		return &v.Bucket
	}).(pulumi.StringPtrOutput)
}

// Google Cloud Storage generation for the object.
// If the generation is omitted, the latest generation will be used
func (o TriggerBuildSourceStorageSourcePtrOutput) Generation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TriggerBuildSourceStorageSource) *string {
		if v == nil {
			return nil
		}
		return v.Generation
	}).(pulumi.StringPtrOutput)
}

// Google Cloud Storage object containing the source.
// This object must be a gzipped archive file (.tar.gz) containing source to build.
func (o TriggerBuildSourceStorageSourcePtrOutput) Object() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TriggerBuildSourceStorageSource) *string {
		if v == nil {
			return nil
		}
		return &v.Object
	}).(pulumi.StringPtrOutput)
}

type TriggerBuildStep struct {
	// A list of arguments that will be presented to the step when it is started.
	// If the image used to run the step's container has an entrypoint, the args
	// are used as arguments to that entrypoint. If the image does not define an
	// entrypoint, the first element in args is used as the entrypoint, and the
	// remainder will be used as arguments.
	Args []string `pulumi:"args"`
	// Working directory to use when running this step's container.
	// If this value is a relative path, it is relative to the build's working
	// directory. If this value is absolute, it may be outside the build's working
	// directory, in which case the contents of the path may not be persisted
	// across build step executions, unless a `volume` for that path is specified.
	// If the build specifies a `RepoSource` with `dir` and a step with a
	// `dir`,
	// which specifies an absolute path, the `RepoSource` `dir` is ignored
	// for the step's execution.
	Dir *string `pulumi:"dir"`
	// Entrypoint to be used instead of the build step image's
	// default entrypoint.
	// If unset, the image's default entrypoint is used
	Entrypoint *string `pulumi:"entrypoint"`
	// A list of global environment variable definitions that will exist for all build steps
	// in this build. If a variable is defined in both globally and in a build step,
	// the variable will use the build step value.
	// The elements are of the form "KEY=VALUE" for the environment variable "KEY" being given the value "VALUE".
	Envs []string `pulumi:"envs"`
	// Unique identifier for this build step, used in `waitFor` to
	// reference this build step as a dependency.
	Id *string `pulumi:"id"`
	// Name of the volume to mount.
	// Volume names must be unique per build step and must be valid names for Docker volumes.
	// Each named volume must be used by at least two build steps.
	Name string `pulumi:"name"`
	// A shell script to be executed in the step.
	// When script is provided, the user cannot specify the entrypoint or args.
	Script *string `pulumi:"script"`
	// A list of global environment variables, which are encrypted using a Cloud Key Management
	// Service crypto key. These values must be specified in the build's Secret. These variables
	// will be available to all build steps in this build.
	SecretEnvs []string `pulumi:"secretEnvs"`
	// Time limit for executing this build step. If not defined,
	// the step has no
	// time limit and will be allowed to continue to run until either it
	// completes or the build itself times out.
	Timeout *string `pulumi:"timeout"`
	// -
	// Output only. Stores timing information for pushing all artifact objects.
	// Structure is documented below.
	Timing *string `pulumi:"timing"`
	// Global list of volumes to mount for ALL build steps
	// Each volume is created as an empty volume prior to starting the build process.
	// Upon completion of the build, volumes and their contents are discarded. Global
	// volume names and paths cannot conflict with the volumes defined a build step.
	// Using a global volume in a build with only one step is not valid as it is indicative
	// of a build request with an incorrect configuration.
	// Structure is documented below.
	Volumes []TriggerBuildStepVolume `pulumi:"volumes"`
	// The ID(s) of the step(s) that this build step depends on.
	// This build step will not start until all the build steps in `waitFor`
	// have completed successfully. If `waitFor` is empty, this build step
	// will start when all previous build steps in the `Build.Steps` list
	// have completed successfully.
	WaitFors []string `pulumi:"waitFors"`
}

// TriggerBuildStepInput is an input type that accepts TriggerBuildStepArgs and TriggerBuildStepOutput values.
// You can construct a concrete instance of `TriggerBuildStepInput` via:
//
//	TriggerBuildStepArgs{...}
type TriggerBuildStepInput interface {
	pulumi.Input

	ToTriggerBuildStepOutput() TriggerBuildStepOutput
	ToTriggerBuildStepOutputWithContext(context.Context) TriggerBuildStepOutput
}

type TriggerBuildStepArgs struct {
	// A list of arguments that will be presented to the step when it is started.
	// If the image used to run the step's container has an entrypoint, the args
	// are used as arguments to that entrypoint. If the image does not define an
	// entrypoint, the first element in args is used as the entrypoint, and the
	// remainder will be used as arguments.
	Args pulumi.StringArrayInput `pulumi:"args"`
	// Working directory to use when running this step's container.
	// If this value is a relative path, it is relative to the build's working
	// directory. If this value is absolute, it may be outside the build's working
	// directory, in which case the contents of the path may not be persisted
	// across build step executions, unless a `volume` for that path is specified.
	// If the build specifies a `RepoSource` with `dir` and a step with a
	// `dir`,
	// which specifies an absolute path, the `RepoSource` `dir` is ignored
	// for the step's execution.
	Dir pulumi.StringPtrInput `pulumi:"dir"`
	// Entrypoint to be used instead of the build step image's
	// default entrypoint.
	// If unset, the image's default entrypoint is used
	Entrypoint pulumi.StringPtrInput `pulumi:"entrypoint"`
	// A list of global environment variable definitions that will exist for all build steps
	// in this build. If a variable is defined in both globally and in a build step,
	// the variable will use the build step value.
	// The elements are of the form "KEY=VALUE" for the environment variable "KEY" being given the value "VALUE".
	Envs pulumi.StringArrayInput `pulumi:"envs"`
	// Unique identifier for this build step, used in `waitFor` to
	// reference this build step as a dependency.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the volume to mount.
	// Volume names must be unique per build step and must be valid names for Docker volumes.
	// Each named volume must be used by at least two build steps.
	Name pulumi.StringInput `pulumi:"name"`
	// A shell script to be executed in the step.
	// When script is provided, the user cannot specify the entrypoint or args.
	Script pulumi.StringPtrInput `pulumi:"script"`
	// A list of global environment variables, which are encrypted using a Cloud Key Management
	// Service crypto key. These values must be specified in the build's Secret. These variables
	// will be available to all build steps in this build.
	SecretEnvs pulumi.StringArrayInput `pulumi:"secretEnvs"`
	// Time limit for executing this build step. If not defined,
	// the step has no
	// time limit and will be allowed to continue to run until either it
	// completes or the build itself times out.
	Timeout pulumi.StringPtrInput `pulumi:"timeout"`
	// -
	// Output only. Stores timing information for pushing all artifact objects.
	// Structure is documented below.
	Timing pulumi.StringPtrInput `pulumi:"timing"`
	// Global list of volumes to mount for ALL build steps
	// Each volume is created as an empty volume prior to starting the build process.
	// Upon completion of the build, volumes and their contents are discarded. Global
	// volume names and paths cannot conflict with the volumes defined a build step.
	// Using a global volume in a build with only one step is not valid as it is indicative
	// of a build request with an incorrect configuration.
	// Structure is documented below.
	Volumes TriggerBuildStepVolumeArrayInput `pulumi:"volumes"`
	// The ID(s) of the step(s) that this build step depends on.
	// This build step will not start until all the build steps in `waitFor`
	// have completed successfully. If `waitFor` is empty, this build step
	// will start when all previous build steps in the `Build.Steps` list
	// have completed successfully.
	WaitFors pulumi.StringArrayInput `pulumi:"waitFors"`
}

func (TriggerBuildStepArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerBuildStep)(nil)).Elem()
}

func (i TriggerBuildStepArgs) ToTriggerBuildStepOutput() TriggerBuildStepOutput {
	return i.ToTriggerBuildStepOutputWithContext(context.Background())
}

func (i TriggerBuildStepArgs) ToTriggerBuildStepOutputWithContext(ctx context.Context) TriggerBuildStepOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerBuildStepOutput)
}

// TriggerBuildStepArrayInput is an input type that accepts TriggerBuildStepArray and TriggerBuildStepArrayOutput values.
// You can construct a concrete instance of `TriggerBuildStepArrayInput` via:
//
//	TriggerBuildStepArray{ TriggerBuildStepArgs{...} }
type TriggerBuildStepArrayInput interface {
	pulumi.Input

	ToTriggerBuildStepArrayOutput() TriggerBuildStepArrayOutput
	ToTriggerBuildStepArrayOutputWithContext(context.Context) TriggerBuildStepArrayOutput
}

type TriggerBuildStepArray []TriggerBuildStepInput

func (TriggerBuildStepArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TriggerBuildStep)(nil)).Elem()
}

func (i TriggerBuildStepArray) ToTriggerBuildStepArrayOutput() TriggerBuildStepArrayOutput {
	return i.ToTriggerBuildStepArrayOutputWithContext(context.Background())
}

func (i TriggerBuildStepArray) ToTriggerBuildStepArrayOutputWithContext(ctx context.Context) TriggerBuildStepArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerBuildStepArrayOutput)
}

type TriggerBuildStepOutput struct{ *pulumi.OutputState }

func (TriggerBuildStepOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerBuildStep)(nil)).Elem()
}

func (o TriggerBuildStepOutput) ToTriggerBuildStepOutput() TriggerBuildStepOutput {
	return o
}

func (o TriggerBuildStepOutput) ToTriggerBuildStepOutputWithContext(ctx context.Context) TriggerBuildStepOutput {
	return o
}

// A list of arguments that will be presented to the step when it is started.
// If the image used to run the step's container has an entrypoint, the args
// are used as arguments to that entrypoint. If the image does not define an
// entrypoint, the first element in args is used as the entrypoint, and the
// remainder will be used as arguments.
func (o TriggerBuildStepOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TriggerBuildStep) []string { return v.Args }).(pulumi.StringArrayOutput)
}

// Working directory to use when running this step's container.
// If this value is a relative path, it is relative to the build's working
// directory. If this value is absolute, it may be outside the build's working
// directory, in which case the contents of the path may not be persisted
// across build step executions, unless a `volume` for that path is specified.
// If the build specifies a `RepoSource` with `dir` and a step with a
// `dir`,
// which specifies an absolute path, the `RepoSource` `dir` is ignored
// for the step's execution.
func (o TriggerBuildStepOutput) Dir() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerBuildStep) *string { return v.Dir }).(pulumi.StringPtrOutput)
}

// Entrypoint to be used instead of the build step image's
// default entrypoint.
// If unset, the image's default entrypoint is used
func (o TriggerBuildStepOutput) Entrypoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerBuildStep) *string { return v.Entrypoint }).(pulumi.StringPtrOutput)
}

// A list of global environment variable definitions that will exist for all build steps
// in this build. If a variable is defined in both globally and in a build step,
// the variable will use the build step value.
// The elements are of the form "KEY=VALUE" for the environment variable "KEY" being given the value "VALUE".
func (o TriggerBuildStepOutput) Envs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TriggerBuildStep) []string { return v.Envs }).(pulumi.StringArrayOutput)
}

// Unique identifier for this build step, used in `waitFor` to
// reference this build step as a dependency.
func (o TriggerBuildStepOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerBuildStep) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the volume to mount.
// Volume names must be unique per build step and must be valid names for Docker volumes.
// Each named volume must be used by at least two build steps.
func (o TriggerBuildStepOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TriggerBuildStep) string { return v.Name }).(pulumi.StringOutput)
}

// A shell script to be executed in the step.
// When script is provided, the user cannot specify the entrypoint or args.
func (o TriggerBuildStepOutput) Script() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerBuildStep) *string { return v.Script }).(pulumi.StringPtrOutput)
}

// A list of global environment variables, which are encrypted using a Cloud Key Management
// Service crypto key. These values must be specified in the build's Secret. These variables
// will be available to all build steps in this build.
func (o TriggerBuildStepOutput) SecretEnvs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TriggerBuildStep) []string { return v.SecretEnvs }).(pulumi.StringArrayOutput)
}

// Time limit for executing this build step. If not defined,
// the step has no
// time limit and will be allowed to continue to run until either it
// completes or the build itself times out.
func (o TriggerBuildStepOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerBuildStep) *string { return v.Timeout }).(pulumi.StringPtrOutput)
}

// -
// Output only. Stores timing information for pushing all artifact objects.
// Structure is documented below.
func (o TriggerBuildStepOutput) Timing() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerBuildStep) *string { return v.Timing }).(pulumi.StringPtrOutput)
}

// Global list of volumes to mount for ALL build steps
// Each volume is created as an empty volume prior to starting the build process.
// Upon completion of the build, volumes and their contents are discarded. Global
// volume names and paths cannot conflict with the volumes defined a build step.
// Using a global volume in a build with only one step is not valid as it is indicative
// of a build request with an incorrect configuration.
// Structure is documented below.
func (o TriggerBuildStepOutput) Volumes() TriggerBuildStepVolumeArrayOutput {
	return o.ApplyT(func(v TriggerBuildStep) []TriggerBuildStepVolume { return v.Volumes }).(TriggerBuildStepVolumeArrayOutput)
}

// The ID(s) of the step(s) that this build step depends on.
// This build step will not start until all the build steps in `waitFor`
// have completed successfully. If `waitFor` is empty, this build step
// will start when all previous build steps in the `Build.Steps` list
// have completed successfully.
func (o TriggerBuildStepOutput) WaitFors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TriggerBuildStep) []string { return v.WaitFors }).(pulumi.StringArrayOutput)
}

type TriggerBuildStepArrayOutput struct{ *pulumi.OutputState }

func (TriggerBuildStepArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TriggerBuildStep)(nil)).Elem()
}

func (o TriggerBuildStepArrayOutput) ToTriggerBuildStepArrayOutput() TriggerBuildStepArrayOutput {
	return o
}

func (o TriggerBuildStepArrayOutput) ToTriggerBuildStepArrayOutputWithContext(ctx context.Context) TriggerBuildStepArrayOutput {
	return o
}

func (o TriggerBuildStepArrayOutput) Index(i pulumi.IntInput) TriggerBuildStepOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TriggerBuildStep {
		return vs[0].([]TriggerBuildStep)[vs[1].(int)]
	}).(TriggerBuildStepOutput)
}

type TriggerBuildStepVolume struct {
	// Name of the volume to mount.
	// Volume names must be unique per build step and must be valid names for Docker volumes.
	// Each named volume must be used by at least two build steps.
	Name string `pulumi:"name"`
	// Path at which to mount the volume.
	// Paths must be absolute and cannot conflict with other volume paths on the same
	// build step or with certain reserved volume paths.
	Path string `pulumi:"path"`
}

// TriggerBuildStepVolumeInput is an input type that accepts TriggerBuildStepVolumeArgs and TriggerBuildStepVolumeOutput values.
// You can construct a concrete instance of `TriggerBuildStepVolumeInput` via:
//
//	TriggerBuildStepVolumeArgs{...}
type TriggerBuildStepVolumeInput interface {
	pulumi.Input

	ToTriggerBuildStepVolumeOutput() TriggerBuildStepVolumeOutput
	ToTriggerBuildStepVolumeOutputWithContext(context.Context) TriggerBuildStepVolumeOutput
}

type TriggerBuildStepVolumeArgs struct {
	// Name of the volume to mount.
	// Volume names must be unique per build step and must be valid names for Docker volumes.
	// Each named volume must be used by at least two build steps.
	Name pulumi.StringInput `pulumi:"name"`
	// Path at which to mount the volume.
	// Paths must be absolute and cannot conflict with other volume paths on the same
	// build step or with certain reserved volume paths.
	Path pulumi.StringInput `pulumi:"path"`
}

func (TriggerBuildStepVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerBuildStepVolume)(nil)).Elem()
}

func (i TriggerBuildStepVolumeArgs) ToTriggerBuildStepVolumeOutput() TriggerBuildStepVolumeOutput {
	return i.ToTriggerBuildStepVolumeOutputWithContext(context.Background())
}

func (i TriggerBuildStepVolumeArgs) ToTriggerBuildStepVolumeOutputWithContext(ctx context.Context) TriggerBuildStepVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerBuildStepVolumeOutput)
}

// TriggerBuildStepVolumeArrayInput is an input type that accepts TriggerBuildStepVolumeArray and TriggerBuildStepVolumeArrayOutput values.
// You can construct a concrete instance of `TriggerBuildStepVolumeArrayInput` via:
//
//	TriggerBuildStepVolumeArray{ TriggerBuildStepVolumeArgs{...} }
type TriggerBuildStepVolumeArrayInput interface {
	pulumi.Input

	ToTriggerBuildStepVolumeArrayOutput() TriggerBuildStepVolumeArrayOutput
	ToTriggerBuildStepVolumeArrayOutputWithContext(context.Context) TriggerBuildStepVolumeArrayOutput
}

type TriggerBuildStepVolumeArray []TriggerBuildStepVolumeInput

func (TriggerBuildStepVolumeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TriggerBuildStepVolume)(nil)).Elem()
}

func (i TriggerBuildStepVolumeArray) ToTriggerBuildStepVolumeArrayOutput() TriggerBuildStepVolumeArrayOutput {
	return i.ToTriggerBuildStepVolumeArrayOutputWithContext(context.Background())
}

func (i TriggerBuildStepVolumeArray) ToTriggerBuildStepVolumeArrayOutputWithContext(ctx context.Context) TriggerBuildStepVolumeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerBuildStepVolumeArrayOutput)
}

type TriggerBuildStepVolumeOutput struct{ *pulumi.OutputState }

func (TriggerBuildStepVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerBuildStepVolume)(nil)).Elem()
}

func (o TriggerBuildStepVolumeOutput) ToTriggerBuildStepVolumeOutput() TriggerBuildStepVolumeOutput {
	return o
}

func (o TriggerBuildStepVolumeOutput) ToTriggerBuildStepVolumeOutputWithContext(ctx context.Context) TriggerBuildStepVolumeOutput {
	return o
}

// Name of the volume to mount.
// Volume names must be unique per build step and must be valid names for Docker volumes.
// Each named volume must be used by at least two build steps.
func (o TriggerBuildStepVolumeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TriggerBuildStepVolume) string { return v.Name }).(pulumi.StringOutput)
}

// Path at which to mount the volume.
// Paths must be absolute and cannot conflict with other volume paths on the same
// build step or with certain reserved volume paths.
func (o TriggerBuildStepVolumeOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v TriggerBuildStepVolume) string { return v.Path }).(pulumi.StringOutput)
}

type TriggerBuildStepVolumeArrayOutput struct{ *pulumi.OutputState }

func (TriggerBuildStepVolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TriggerBuildStepVolume)(nil)).Elem()
}

func (o TriggerBuildStepVolumeArrayOutput) ToTriggerBuildStepVolumeArrayOutput() TriggerBuildStepVolumeArrayOutput {
	return o
}

func (o TriggerBuildStepVolumeArrayOutput) ToTriggerBuildStepVolumeArrayOutputWithContext(ctx context.Context) TriggerBuildStepVolumeArrayOutput {
	return o
}

func (o TriggerBuildStepVolumeArrayOutput) Index(i pulumi.IntInput) TriggerBuildStepVolumeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TriggerBuildStepVolume {
		return vs[0].([]TriggerBuildStepVolume)[vs[1].(int)]
	}).(TriggerBuildStepVolumeOutput)
}

type TriggerGitFileSource struct {
	// Path at which to mount the volume.
	// Paths must be absolute and cannot conflict with other volume paths on the same
	// build step or with certain reserved volume paths.
	Path string `pulumi:"path"`
	// The type of the repo, since it may not be explicit from the repo field (e.g from a URL).
	// Values can be UNKNOWN, CLOUD_SOURCE_REPOSITORIES, GITHUB, BITBUCKET_SERVER
	// Possible values are `UNKNOWN`, `CLOUD_SOURCE_REPOSITORIES`, `GITHUB`, and `BITBUCKET_SERVER`.
	RepoType string `pulumi:"repoType"`
	// The branch, tag, arbitrary ref, or SHA version of the repo to use when resolving the
	// filename (optional). This field respects the same syntax/resolution as described here: https://git-scm.com/docs/gitrevisions
	// If unspecified, the revision from which the trigger invocation originated is assumed to be the revision from which to read the specified path.
	Revision *string `pulumi:"revision"`
	// The URI of the repo (required).
	Uri *string `pulumi:"uri"`
}

// TriggerGitFileSourceInput is an input type that accepts TriggerGitFileSourceArgs and TriggerGitFileSourceOutput values.
// You can construct a concrete instance of `TriggerGitFileSourceInput` via:
//
//	TriggerGitFileSourceArgs{...}
type TriggerGitFileSourceInput interface {
	pulumi.Input

	ToTriggerGitFileSourceOutput() TriggerGitFileSourceOutput
	ToTriggerGitFileSourceOutputWithContext(context.Context) TriggerGitFileSourceOutput
}

type TriggerGitFileSourceArgs struct {
	// Path at which to mount the volume.
	// Paths must be absolute and cannot conflict with other volume paths on the same
	// build step or with certain reserved volume paths.
	Path pulumi.StringInput `pulumi:"path"`
	// The type of the repo, since it may not be explicit from the repo field (e.g from a URL).
	// Values can be UNKNOWN, CLOUD_SOURCE_REPOSITORIES, GITHUB, BITBUCKET_SERVER
	// Possible values are `UNKNOWN`, `CLOUD_SOURCE_REPOSITORIES`, `GITHUB`, and `BITBUCKET_SERVER`.
	RepoType pulumi.StringInput `pulumi:"repoType"`
	// The branch, tag, arbitrary ref, or SHA version of the repo to use when resolving the
	// filename (optional). This field respects the same syntax/resolution as described here: https://git-scm.com/docs/gitrevisions
	// If unspecified, the revision from which the trigger invocation originated is assumed to be the revision from which to read the specified path.
	Revision pulumi.StringPtrInput `pulumi:"revision"`
	// The URI of the repo (required).
	Uri pulumi.StringPtrInput `pulumi:"uri"`
}

func (TriggerGitFileSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerGitFileSource)(nil)).Elem()
}

func (i TriggerGitFileSourceArgs) ToTriggerGitFileSourceOutput() TriggerGitFileSourceOutput {
	return i.ToTriggerGitFileSourceOutputWithContext(context.Background())
}

func (i TriggerGitFileSourceArgs) ToTriggerGitFileSourceOutputWithContext(ctx context.Context) TriggerGitFileSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerGitFileSourceOutput)
}

func (i TriggerGitFileSourceArgs) ToTriggerGitFileSourcePtrOutput() TriggerGitFileSourcePtrOutput {
	return i.ToTriggerGitFileSourcePtrOutputWithContext(context.Background())
}

func (i TriggerGitFileSourceArgs) ToTriggerGitFileSourcePtrOutputWithContext(ctx context.Context) TriggerGitFileSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerGitFileSourceOutput).ToTriggerGitFileSourcePtrOutputWithContext(ctx)
}

// TriggerGitFileSourcePtrInput is an input type that accepts TriggerGitFileSourceArgs, TriggerGitFileSourcePtr and TriggerGitFileSourcePtrOutput values.
// You can construct a concrete instance of `TriggerGitFileSourcePtrInput` via:
//
//	        TriggerGitFileSourceArgs{...}
//
//	or:
//
//	        nil
type TriggerGitFileSourcePtrInput interface {
	pulumi.Input

	ToTriggerGitFileSourcePtrOutput() TriggerGitFileSourcePtrOutput
	ToTriggerGitFileSourcePtrOutputWithContext(context.Context) TriggerGitFileSourcePtrOutput
}

type triggerGitFileSourcePtrType TriggerGitFileSourceArgs

func TriggerGitFileSourcePtr(v *TriggerGitFileSourceArgs) TriggerGitFileSourcePtrInput {
	return (*triggerGitFileSourcePtrType)(v)
}

func (*triggerGitFileSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerGitFileSource)(nil)).Elem()
}

func (i *triggerGitFileSourcePtrType) ToTriggerGitFileSourcePtrOutput() TriggerGitFileSourcePtrOutput {
	return i.ToTriggerGitFileSourcePtrOutputWithContext(context.Background())
}

func (i *triggerGitFileSourcePtrType) ToTriggerGitFileSourcePtrOutputWithContext(ctx context.Context) TriggerGitFileSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerGitFileSourcePtrOutput)
}

type TriggerGitFileSourceOutput struct{ *pulumi.OutputState }

func (TriggerGitFileSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerGitFileSource)(nil)).Elem()
}

func (o TriggerGitFileSourceOutput) ToTriggerGitFileSourceOutput() TriggerGitFileSourceOutput {
	return o
}

func (o TriggerGitFileSourceOutput) ToTriggerGitFileSourceOutputWithContext(ctx context.Context) TriggerGitFileSourceOutput {
	return o
}

func (o TriggerGitFileSourceOutput) ToTriggerGitFileSourcePtrOutput() TriggerGitFileSourcePtrOutput {
	return o.ToTriggerGitFileSourcePtrOutputWithContext(context.Background())
}

func (o TriggerGitFileSourceOutput) ToTriggerGitFileSourcePtrOutputWithContext(ctx context.Context) TriggerGitFileSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TriggerGitFileSource) *TriggerGitFileSource {
		return &v
	}).(TriggerGitFileSourcePtrOutput)
}

// Path at which to mount the volume.
// Paths must be absolute and cannot conflict with other volume paths on the same
// build step or with certain reserved volume paths.
func (o TriggerGitFileSourceOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v TriggerGitFileSource) string { return v.Path }).(pulumi.StringOutput)
}

// The type of the repo, since it may not be explicit from the repo field (e.g from a URL).
// Values can be UNKNOWN, CLOUD_SOURCE_REPOSITORIES, GITHUB, BITBUCKET_SERVER
// Possible values are `UNKNOWN`, `CLOUD_SOURCE_REPOSITORIES`, `GITHUB`, and `BITBUCKET_SERVER`.
func (o TriggerGitFileSourceOutput) RepoType() pulumi.StringOutput {
	return o.ApplyT(func(v TriggerGitFileSource) string { return v.RepoType }).(pulumi.StringOutput)
}

// The branch, tag, arbitrary ref, or SHA version of the repo to use when resolving the
// filename (optional). This field respects the same syntax/resolution as described here: https://git-scm.com/docs/gitrevisions
// If unspecified, the revision from which the trigger invocation originated is assumed to be the revision from which to read the specified path.
func (o TriggerGitFileSourceOutput) Revision() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerGitFileSource) *string { return v.Revision }).(pulumi.StringPtrOutput)
}

// The URI of the repo (required).
func (o TriggerGitFileSourceOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerGitFileSource) *string { return v.Uri }).(pulumi.StringPtrOutput)
}

type TriggerGitFileSourcePtrOutput struct{ *pulumi.OutputState }

func (TriggerGitFileSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerGitFileSource)(nil)).Elem()
}

func (o TriggerGitFileSourcePtrOutput) ToTriggerGitFileSourcePtrOutput() TriggerGitFileSourcePtrOutput {
	return o
}

func (o TriggerGitFileSourcePtrOutput) ToTriggerGitFileSourcePtrOutputWithContext(ctx context.Context) TriggerGitFileSourcePtrOutput {
	return o
}

func (o TriggerGitFileSourcePtrOutput) Elem() TriggerGitFileSourceOutput {
	return o.ApplyT(func(v *TriggerGitFileSource) TriggerGitFileSource {
		if v != nil {
			return *v
		}
		var ret TriggerGitFileSource
		return ret
	}).(TriggerGitFileSourceOutput)
}

// Path at which to mount the volume.
// Paths must be absolute and cannot conflict with other volume paths on the same
// build step or with certain reserved volume paths.
func (o TriggerGitFileSourcePtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TriggerGitFileSource) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

// The type of the repo, since it may not be explicit from the repo field (e.g from a URL).
// Values can be UNKNOWN, CLOUD_SOURCE_REPOSITORIES, GITHUB, BITBUCKET_SERVER
// Possible values are `UNKNOWN`, `CLOUD_SOURCE_REPOSITORIES`, `GITHUB`, and `BITBUCKET_SERVER`.
func (o TriggerGitFileSourcePtrOutput) RepoType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TriggerGitFileSource) *string {
		if v == nil {
			return nil
		}
		return &v.RepoType
	}).(pulumi.StringPtrOutput)
}

// The branch, tag, arbitrary ref, or SHA version of the repo to use when resolving the
// filename (optional). This field respects the same syntax/resolution as described here: https://git-scm.com/docs/gitrevisions
// If unspecified, the revision from which the trigger invocation originated is assumed to be the revision from which to read the specified path.
func (o TriggerGitFileSourcePtrOutput) Revision() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TriggerGitFileSource) *string {
		if v == nil {
			return nil
		}
		return v.Revision
	}).(pulumi.StringPtrOutput)
}

// The URI of the repo (required).
func (o TriggerGitFileSourcePtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TriggerGitFileSource) *string {
		if v == nil {
			return nil
		}
		return v.Uri
	}).(pulumi.StringPtrOutput)
}

type TriggerGithub struct {
	// Name of the volume to mount.
	// Volume names must be unique per build step and must be valid names for Docker volumes.
	// Each named volume must be used by at least two build steps.
	Name *string `pulumi:"name"`
	// Owner of the repository. For example: The owner for
	// https://github.com/googlecloudplatform/cloud-builders is "googlecloudplatform".
	Owner *string `pulumi:"owner"`
	// filter to match changes in pull requests. Specify only one of `pullRequest` or `push`.
	// Structure is documented below.
	PullRequest *TriggerGithubPullRequest `pulumi:"pullRequest"`
	// filter to match changes in refs, like branches or tags. Specify only one of `pullRequest` or `push`.
	// Structure is documented below.
	Push *TriggerGithubPush `pulumi:"push"`
}

// TriggerGithubInput is an input type that accepts TriggerGithubArgs and TriggerGithubOutput values.
// You can construct a concrete instance of `TriggerGithubInput` via:
//
//	TriggerGithubArgs{...}
type TriggerGithubInput interface {
	pulumi.Input

	ToTriggerGithubOutput() TriggerGithubOutput
	ToTriggerGithubOutputWithContext(context.Context) TriggerGithubOutput
}

type TriggerGithubArgs struct {
	// Name of the volume to mount.
	// Volume names must be unique per build step and must be valid names for Docker volumes.
	// Each named volume must be used by at least two build steps.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Owner of the repository. For example: The owner for
	// https://github.com/googlecloudplatform/cloud-builders is "googlecloudplatform".
	Owner pulumi.StringPtrInput `pulumi:"owner"`
	// filter to match changes in pull requests. Specify only one of `pullRequest` or `push`.
	// Structure is documented below.
	PullRequest TriggerGithubPullRequestPtrInput `pulumi:"pullRequest"`
	// filter to match changes in refs, like branches or tags. Specify only one of `pullRequest` or `push`.
	// Structure is documented below.
	Push TriggerGithubPushPtrInput `pulumi:"push"`
}

func (TriggerGithubArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerGithub)(nil)).Elem()
}

func (i TriggerGithubArgs) ToTriggerGithubOutput() TriggerGithubOutput {
	return i.ToTriggerGithubOutputWithContext(context.Background())
}

func (i TriggerGithubArgs) ToTriggerGithubOutputWithContext(ctx context.Context) TriggerGithubOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerGithubOutput)
}

func (i TriggerGithubArgs) ToTriggerGithubPtrOutput() TriggerGithubPtrOutput {
	return i.ToTriggerGithubPtrOutputWithContext(context.Background())
}

func (i TriggerGithubArgs) ToTriggerGithubPtrOutputWithContext(ctx context.Context) TriggerGithubPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerGithubOutput).ToTriggerGithubPtrOutputWithContext(ctx)
}

// TriggerGithubPtrInput is an input type that accepts TriggerGithubArgs, TriggerGithubPtr and TriggerGithubPtrOutput values.
// You can construct a concrete instance of `TriggerGithubPtrInput` via:
//
//	        TriggerGithubArgs{...}
//
//	or:
//
//	        nil
type TriggerGithubPtrInput interface {
	pulumi.Input

	ToTriggerGithubPtrOutput() TriggerGithubPtrOutput
	ToTriggerGithubPtrOutputWithContext(context.Context) TriggerGithubPtrOutput
}

type triggerGithubPtrType TriggerGithubArgs

func TriggerGithubPtr(v *TriggerGithubArgs) TriggerGithubPtrInput {
	return (*triggerGithubPtrType)(v)
}

func (*triggerGithubPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerGithub)(nil)).Elem()
}

func (i *triggerGithubPtrType) ToTriggerGithubPtrOutput() TriggerGithubPtrOutput {
	return i.ToTriggerGithubPtrOutputWithContext(context.Background())
}

func (i *triggerGithubPtrType) ToTriggerGithubPtrOutputWithContext(ctx context.Context) TriggerGithubPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerGithubPtrOutput)
}

type TriggerGithubOutput struct{ *pulumi.OutputState }

func (TriggerGithubOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerGithub)(nil)).Elem()
}

func (o TriggerGithubOutput) ToTriggerGithubOutput() TriggerGithubOutput {
	return o
}

func (o TriggerGithubOutput) ToTriggerGithubOutputWithContext(ctx context.Context) TriggerGithubOutput {
	return o
}

func (o TriggerGithubOutput) ToTriggerGithubPtrOutput() TriggerGithubPtrOutput {
	return o.ToTriggerGithubPtrOutputWithContext(context.Background())
}

func (o TriggerGithubOutput) ToTriggerGithubPtrOutputWithContext(ctx context.Context) TriggerGithubPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TriggerGithub) *TriggerGithub {
		return &v
	}).(TriggerGithubPtrOutput)
}

// Name of the volume to mount.
// Volume names must be unique per build step and must be valid names for Docker volumes.
// Each named volume must be used by at least two build steps.
func (o TriggerGithubOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerGithub) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Owner of the repository. For example: The owner for
// https://github.com/googlecloudplatform/cloud-builders is "googlecloudplatform".
func (o TriggerGithubOutput) Owner() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerGithub) *string { return v.Owner }).(pulumi.StringPtrOutput)
}

// filter to match changes in pull requests. Specify only one of `pullRequest` or `push`.
// Structure is documented below.
func (o TriggerGithubOutput) PullRequest() TriggerGithubPullRequestPtrOutput {
	return o.ApplyT(func(v TriggerGithub) *TriggerGithubPullRequest { return v.PullRequest }).(TriggerGithubPullRequestPtrOutput)
}

// filter to match changes in refs, like branches or tags. Specify only one of `pullRequest` or `push`.
// Structure is documented below.
func (o TriggerGithubOutput) Push() TriggerGithubPushPtrOutput {
	return o.ApplyT(func(v TriggerGithub) *TriggerGithubPush { return v.Push }).(TriggerGithubPushPtrOutput)
}

type TriggerGithubPtrOutput struct{ *pulumi.OutputState }

func (TriggerGithubPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerGithub)(nil)).Elem()
}

func (o TriggerGithubPtrOutput) ToTriggerGithubPtrOutput() TriggerGithubPtrOutput {
	return o
}

func (o TriggerGithubPtrOutput) ToTriggerGithubPtrOutputWithContext(ctx context.Context) TriggerGithubPtrOutput {
	return o
}

func (o TriggerGithubPtrOutput) Elem() TriggerGithubOutput {
	return o.ApplyT(func(v *TriggerGithub) TriggerGithub {
		if v != nil {
			return *v
		}
		var ret TriggerGithub
		return ret
	}).(TriggerGithubOutput)
}

// Name of the volume to mount.
// Volume names must be unique per build step and must be valid names for Docker volumes.
// Each named volume must be used by at least two build steps.
func (o TriggerGithubPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TriggerGithub) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Owner of the repository. For example: The owner for
// https://github.com/googlecloudplatform/cloud-builders is "googlecloudplatform".
func (o TriggerGithubPtrOutput) Owner() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TriggerGithub) *string {
		if v == nil {
			return nil
		}
		return v.Owner
	}).(pulumi.StringPtrOutput)
}

// filter to match changes in pull requests. Specify only one of `pullRequest` or `push`.
// Structure is documented below.
func (o TriggerGithubPtrOutput) PullRequest() TriggerGithubPullRequestPtrOutput {
	return o.ApplyT(func(v *TriggerGithub) *TriggerGithubPullRequest {
		if v == nil {
			return nil
		}
		return v.PullRequest
	}).(TriggerGithubPullRequestPtrOutput)
}

// filter to match changes in refs, like branches or tags. Specify only one of `pullRequest` or `push`.
// Structure is documented below.
func (o TriggerGithubPtrOutput) Push() TriggerGithubPushPtrOutput {
	return o.ApplyT(func(v *TriggerGithub) *TriggerGithubPush {
		if v == nil {
			return nil
		}
		return v.Push
	}).(TriggerGithubPushPtrOutput)
}

type TriggerGithubPullRequest struct {
	// Regex of branches to match.  Specify only one of branch or tag.
	Branch string `pulumi:"branch"`
	// Whether to block builds on a "/gcbrun" comment from a repository owner or collaborator.
	// Possible values are `COMMENTS_DISABLED`, `COMMENTS_ENABLED`, and `COMMENTS_ENABLED_FOR_EXTERNAL_CONTRIBUTORS_ONLY`.
	CommentControl *string `pulumi:"commentControl"`
	// Only trigger a build if the revision regex does NOT match the revision regex.
	InvertRegex *bool `pulumi:"invertRegex"`
}

// TriggerGithubPullRequestInput is an input type that accepts TriggerGithubPullRequestArgs and TriggerGithubPullRequestOutput values.
// You can construct a concrete instance of `TriggerGithubPullRequestInput` via:
//
//	TriggerGithubPullRequestArgs{...}
type TriggerGithubPullRequestInput interface {
	pulumi.Input

	ToTriggerGithubPullRequestOutput() TriggerGithubPullRequestOutput
	ToTriggerGithubPullRequestOutputWithContext(context.Context) TriggerGithubPullRequestOutput
}

type TriggerGithubPullRequestArgs struct {
	// Regex of branches to match.  Specify only one of branch or tag.
	Branch pulumi.StringInput `pulumi:"branch"`
	// Whether to block builds on a "/gcbrun" comment from a repository owner or collaborator.
	// Possible values are `COMMENTS_DISABLED`, `COMMENTS_ENABLED`, and `COMMENTS_ENABLED_FOR_EXTERNAL_CONTRIBUTORS_ONLY`.
	CommentControl pulumi.StringPtrInput `pulumi:"commentControl"`
	// Only trigger a build if the revision regex does NOT match the revision regex.
	InvertRegex pulumi.BoolPtrInput `pulumi:"invertRegex"`
}

func (TriggerGithubPullRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerGithubPullRequest)(nil)).Elem()
}

func (i TriggerGithubPullRequestArgs) ToTriggerGithubPullRequestOutput() TriggerGithubPullRequestOutput {
	return i.ToTriggerGithubPullRequestOutputWithContext(context.Background())
}

func (i TriggerGithubPullRequestArgs) ToTriggerGithubPullRequestOutputWithContext(ctx context.Context) TriggerGithubPullRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerGithubPullRequestOutput)
}

func (i TriggerGithubPullRequestArgs) ToTriggerGithubPullRequestPtrOutput() TriggerGithubPullRequestPtrOutput {
	return i.ToTriggerGithubPullRequestPtrOutputWithContext(context.Background())
}

func (i TriggerGithubPullRequestArgs) ToTriggerGithubPullRequestPtrOutputWithContext(ctx context.Context) TriggerGithubPullRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerGithubPullRequestOutput).ToTriggerGithubPullRequestPtrOutputWithContext(ctx)
}

// TriggerGithubPullRequestPtrInput is an input type that accepts TriggerGithubPullRequestArgs, TriggerGithubPullRequestPtr and TriggerGithubPullRequestPtrOutput values.
// You can construct a concrete instance of `TriggerGithubPullRequestPtrInput` via:
//
//	        TriggerGithubPullRequestArgs{...}
//
//	or:
//
//	        nil
type TriggerGithubPullRequestPtrInput interface {
	pulumi.Input

	ToTriggerGithubPullRequestPtrOutput() TriggerGithubPullRequestPtrOutput
	ToTriggerGithubPullRequestPtrOutputWithContext(context.Context) TriggerGithubPullRequestPtrOutput
}

type triggerGithubPullRequestPtrType TriggerGithubPullRequestArgs

func TriggerGithubPullRequestPtr(v *TriggerGithubPullRequestArgs) TriggerGithubPullRequestPtrInput {
	return (*triggerGithubPullRequestPtrType)(v)
}

func (*triggerGithubPullRequestPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerGithubPullRequest)(nil)).Elem()
}

func (i *triggerGithubPullRequestPtrType) ToTriggerGithubPullRequestPtrOutput() TriggerGithubPullRequestPtrOutput {
	return i.ToTriggerGithubPullRequestPtrOutputWithContext(context.Background())
}

func (i *triggerGithubPullRequestPtrType) ToTriggerGithubPullRequestPtrOutputWithContext(ctx context.Context) TriggerGithubPullRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerGithubPullRequestPtrOutput)
}

type TriggerGithubPullRequestOutput struct{ *pulumi.OutputState }

func (TriggerGithubPullRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerGithubPullRequest)(nil)).Elem()
}

func (o TriggerGithubPullRequestOutput) ToTriggerGithubPullRequestOutput() TriggerGithubPullRequestOutput {
	return o
}

func (o TriggerGithubPullRequestOutput) ToTriggerGithubPullRequestOutputWithContext(ctx context.Context) TriggerGithubPullRequestOutput {
	return o
}

func (o TriggerGithubPullRequestOutput) ToTriggerGithubPullRequestPtrOutput() TriggerGithubPullRequestPtrOutput {
	return o.ToTriggerGithubPullRequestPtrOutputWithContext(context.Background())
}

func (o TriggerGithubPullRequestOutput) ToTriggerGithubPullRequestPtrOutputWithContext(ctx context.Context) TriggerGithubPullRequestPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TriggerGithubPullRequest) *TriggerGithubPullRequest {
		return &v
	}).(TriggerGithubPullRequestPtrOutput)
}

// Regex of branches to match.  Specify only one of branch or tag.
func (o TriggerGithubPullRequestOutput) Branch() pulumi.StringOutput {
	return o.ApplyT(func(v TriggerGithubPullRequest) string { return v.Branch }).(pulumi.StringOutput)
}

// Whether to block builds on a "/gcbrun" comment from a repository owner or collaborator.
// Possible values are `COMMENTS_DISABLED`, `COMMENTS_ENABLED`, and `COMMENTS_ENABLED_FOR_EXTERNAL_CONTRIBUTORS_ONLY`.
func (o TriggerGithubPullRequestOutput) CommentControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerGithubPullRequest) *string { return v.CommentControl }).(pulumi.StringPtrOutput)
}

// Only trigger a build if the revision regex does NOT match the revision regex.
func (o TriggerGithubPullRequestOutput) InvertRegex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TriggerGithubPullRequest) *bool { return v.InvertRegex }).(pulumi.BoolPtrOutput)
}

type TriggerGithubPullRequestPtrOutput struct{ *pulumi.OutputState }

func (TriggerGithubPullRequestPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerGithubPullRequest)(nil)).Elem()
}

func (o TriggerGithubPullRequestPtrOutput) ToTriggerGithubPullRequestPtrOutput() TriggerGithubPullRequestPtrOutput {
	return o
}

func (o TriggerGithubPullRequestPtrOutput) ToTriggerGithubPullRequestPtrOutputWithContext(ctx context.Context) TriggerGithubPullRequestPtrOutput {
	return o
}

func (o TriggerGithubPullRequestPtrOutput) Elem() TriggerGithubPullRequestOutput {
	return o.ApplyT(func(v *TriggerGithubPullRequest) TriggerGithubPullRequest {
		if v != nil {
			return *v
		}
		var ret TriggerGithubPullRequest
		return ret
	}).(TriggerGithubPullRequestOutput)
}

// Regex of branches to match.  Specify only one of branch or tag.
func (o TriggerGithubPullRequestPtrOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TriggerGithubPullRequest) *string {
		if v == nil {
			return nil
		}
		return &v.Branch
	}).(pulumi.StringPtrOutput)
}

// Whether to block builds on a "/gcbrun" comment from a repository owner or collaborator.
// Possible values are `COMMENTS_DISABLED`, `COMMENTS_ENABLED`, and `COMMENTS_ENABLED_FOR_EXTERNAL_CONTRIBUTORS_ONLY`.
func (o TriggerGithubPullRequestPtrOutput) CommentControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TriggerGithubPullRequest) *string {
		if v == nil {
			return nil
		}
		return v.CommentControl
	}).(pulumi.StringPtrOutput)
}

// Only trigger a build if the revision regex does NOT match the revision regex.
func (o TriggerGithubPullRequestPtrOutput) InvertRegex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TriggerGithubPullRequest) *bool {
		if v == nil {
			return nil
		}
		return v.InvertRegex
	}).(pulumi.BoolPtrOutput)
}

type TriggerGithubPush struct {
	// Regex of branches to match.  Specify only one of branch or tag.
	Branch *string `pulumi:"branch"`
	// Only trigger a build if the revision regex does NOT match the revision regex.
	InvertRegex *bool `pulumi:"invertRegex"`
	// Regex of tags to match.  Specify only one of branch or tag.
	Tag *string `pulumi:"tag"`
}

// TriggerGithubPushInput is an input type that accepts TriggerGithubPushArgs and TriggerGithubPushOutput values.
// You can construct a concrete instance of `TriggerGithubPushInput` via:
//
//	TriggerGithubPushArgs{...}
type TriggerGithubPushInput interface {
	pulumi.Input

	ToTriggerGithubPushOutput() TriggerGithubPushOutput
	ToTriggerGithubPushOutputWithContext(context.Context) TriggerGithubPushOutput
}

type TriggerGithubPushArgs struct {
	// Regex of branches to match.  Specify only one of branch or tag.
	Branch pulumi.StringPtrInput `pulumi:"branch"`
	// Only trigger a build if the revision regex does NOT match the revision regex.
	InvertRegex pulumi.BoolPtrInput `pulumi:"invertRegex"`
	// Regex of tags to match.  Specify only one of branch or tag.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
}

func (TriggerGithubPushArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerGithubPush)(nil)).Elem()
}

func (i TriggerGithubPushArgs) ToTriggerGithubPushOutput() TriggerGithubPushOutput {
	return i.ToTriggerGithubPushOutputWithContext(context.Background())
}

func (i TriggerGithubPushArgs) ToTriggerGithubPushOutputWithContext(ctx context.Context) TriggerGithubPushOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerGithubPushOutput)
}

func (i TriggerGithubPushArgs) ToTriggerGithubPushPtrOutput() TriggerGithubPushPtrOutput {
	return i.ToTriggerGithubPushPtrOutputWithContext(context.Background())
}

func (i TriggerGithubPushArgs) ToTriggerGithubPushPtrOutputWithContext(ctx context.Context) TriggerGithubPushPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerGithubPushOutput).ToTriggerGithubPushPtrOutputWithContext(ctx)
}

// TriggerGithubPushPtrInput is an input type that accepts TriggerGithubPushArgs, TriggerGithubPushPtr and TriggerGithubPushPtrOutput values.
// You can construct a concrete instance of `TriggerGithubPushPtrInput` via:
//
//	        TriggerGithubPushArgs{...}
//
//	or:
//
//	        nil
type TriggerGithubPushPtrInput interface {
	pulumi.Input

	ToTriggerGithubPushPtrOutput() TriggerGithubPushPtrOutput
	ToTriggerGithubPushPtrOutputWithContext(context.Context) TriggerGithubPushPtrOutput
}

type triggerGithubPushPtrType TriggerGithubPushArgs

func TriggerGithubPushPtr(v *TriggerGithubPushArgs) TriggerGithubPushPtrInput {
	return (*triggerGithubPushPtrType)(v)
}

func (*triggerGithubPushPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerGithubPush)(nil)).Elem()
}

func (i *triggerGithubPushPtrType) ToTriggerGithubPushPtrOutput() TriggerGithubPushPtrOutput {
	return i.ToTriggerGithubPushPtrOutputWithContext(context.Background())
}

func (i *triggerGithubPushPtrType) ToTriggerGithubPushPtrOutputWithContext(ctx context.Context) TriggerGithubPushPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerGithubPushPtrOutput)
}

type TriggerGithubPushOutput struct{ *pulumi.OutputState }

func (TriggerGithubPushOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerGithubPush)(nil)).Elem()
}

func (o TriggerGithubPushOutput) ToTriggerGithubPushOutput() TriggerGithubPushOutput {
	return o
}

func (o TriggerGithubPushOutput) ToTriggerGithubPushOutputWithContext(ctx context.Context) TriggerGithubPushOutput {
	return o
}

func (o TriggerGithubPushOutput) ToTriggerGithubPushPtrOutput() TriggerGithubPushPtrOutput {
	return o.ToTriggerGithubPushPtrOutputWithContext(context.Background())
}

func (o TriggerGithubPushOutput) ToTriggerGithubPushPtrOutputWithContext(ctx context.Context) TriggerGithubPushPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TriggerGithubPush) *TriggerGithubPush {
		return &v
	}).(TriggerGithubPushPtrOutput)
}

// Regex of branches to match.  Specify only one of branch or tag.
func (o TriggerGithubPushOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerGithubPush) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

// Only trigger a build if the revision regex does NOT match the revision regex.
func (o TriggerGithubPushOutput) InvertRegex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TriggerGithubPush) *bool { return v.InvertRegex }).(pulumi.BoolPtrOutput)
}

// Regex of tags to match.  Specify only one of branch or tag.
func (o TriggerGithubPushOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerGithubPush) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type TriggerGithubPushPtrOutput struct{ *pulumi.OutputState }

func (TriggerGithubPushPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerGithubPush)(nil)).Elem()
}

func (o TriggerGithubPushPtrOutput) ToTriggerGithubPushPtrOutput() TriggerGithubPushPtrOutput {
	return o
}

func (o TriggerGithubPushPtrOutput) ToTriggerGithubPushPtrOutputWithContext(ctx context.Context) TriggerGithubPushPtrOutput {
	return o
}

func (o TriggerGithubPushPtrOutput) Elem() TriggerGithubPushOutput {
	return o.ApplyT(func(v *TriggerGithubPush) TriggerGithubPush {
		if v != nil {
			return *v
		}
		var ret TriggerGithubPush
		return ret
	}).(TriggerGithubPushOutput)
}

// Regex of branches to match.  Specify only one of branch or tag.
func (o TriggerGithubPushPtrOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TriggerGithubPush) *string {
		if v == nil {
			return nil
		}
		return v.Branch
	}).(pulumi.StringPtrOutput)
}

// Only trigger a build if the revision regex does NOT match the revision regex.
func (o TriggerGithubPushPtrOutput) InvertRegex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TriggerGithubPush) *bool {
		if v == nil {
			return nil
		}
		return v.InvertRegex
	}).(pulumi.BoolPtrOutput)
}

// Regex of tags to match.  Specify only one of branch or tag.
func (o TriggerGithubPushPtrOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TriggerGithubPush) *string {
		if v == nil {
			return nil
		}
		return v.Tag
	}).(pulumi.StringPtrOutput)
}

type TriggerPubsubConfig struct {
	// Service account that will make the push request.
	ServiceAccountEmail *string `pulumi:"serviceAccountEmail"`
	// -
	// Potential issues with the underlying Pub/Sub subscription configuration.
	// Only populated on get requests.
	State *string `pulumi:"state"`
	// -
	// Output only. Name of the subscription.
	Subscription *string `pulumi:"subscription"`
	// The name of the topic from which this subscription is receiving messages.
	Topic string `pulumi:"topic"`
}

// TriggerPubsubConfigInput is an input type that accepts TriggerPubsubConfigArgs and TriggerPubsubConfigOutput values.
// You can construct a concrete instance of `TriggerPubsubConfigInput` via:
//
//	TriggerPubsubConfigArgs{...}
type TriggerPubsubConfigInput interface {
	pulumi.Input

	ToTriggerPubsubConfigOutput() TriggerPubsubConfigOutput
	ToTriggerPubsubConfigOutputWithContext(context.Context) TriggerPubsubConfigOutput
}

type TriggerPubsubConfigArgs struct {
	// Service account that will make the push request.
	ServiceAccountEmail pulumi.StringPtrInput `pulumi:"serviceAccountEmail"`
	// -
	// Potential issues with the underlying Pub/Sub subscription configuration.
	// Only populated on get requests.
	State pulumi.StringPtrInput `pulumi:"state"`
	// -
	// Output only. Name of the subscription.
	Subscription pulumi.StringPtrInput `pulumi:"subscription"`
	// The name of the topic from which this subscription is receiving messages.
	Topic pulumi.StringInput `pulumi:"topic"`
}

func (TriggerPubsubConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerPubsubConfig)(nil)).Elem()
}

func (i TriggerPubsubConfigArgs) ToTriggerPubsubConfigOutput() TriggerPubsubConfigOutput {
	return i.ToTriggerPubsubConfigOutputWithContext(context.Background())
}

func (i TriggerPubsubConfigArgs) ToTriggerPubsubConfigOutputWithContext(ctx context.Context) TriggerPubsubConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerPubsubConfigOutput)
}

func (i TriggerPubsubConfigArgs) ToTriggerPubsubConfigPtrOutput() TriggerPubsubConfigPtrOutput {
	return i.ToTriggerPubsubConfigPtrOutputWithContext(context.Background())
}

func (i TriggerPubsubConfigArgs) ToTriggerPubsubConfigPtrOutputWithContext(ctx context.Context) TriggerPubsubConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerPubsubConfigOutput).ToTriggerPubsubConfigPtrOutputWithContext(ctx)
}

// TriggerPubsubConfigPtrInput is an input type that accepts TriggerPubsubConfigArgs, TriggerPubsubConfigPtr and TriggerPubsubConfigPtrOutput values.
// You can construct a concrete instance of `TriggerPubsubConfigPtrInput` via:
//
//	        TriggerPubsubConfigArgs{...}
//
//	or:
//
//	        nil
type TriggerPubsubConfigPtrInput interface {
	pulumi.Input

	ToTriggerPubsubConfigPtrOutput() TriggerPubsubConfigPtrOutput
	ToTriggerPubsubConfigPtrOutputWithContext(context.Context) TriggerPubsubConfigPtrOutput
}

type triggerPubsubConfigPtrType TriggerPubsubConfigArgs

func TriggerPubsubConfigPtr(v *TriggerPubsubConfigArgs) TriggerPubsubConfigPtrInput {
	return (*triggerPubsubConfigPtrType)(v)
}

func (*triggerPubsubConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerPubsubConfig)(nil)).Elem()
}

func (i *triggerPubsubConfigPtrType) ToTriggerPubsubConfigPtrOutput() TriggerPubsubConfigPtrOutput {
	return i.ToTriggerPubsubConfigPtrOutputWithContext(context.Background())
}

func (i *triggerPubsubConfigPtrType) ToTriggerPubsubConfigPtrOutputWithContext(ctx context.Context) TriggerPubsubConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerPubsubConfigPtrOutput)
}

type TriggerPubsubConfigOutput struct{ *pulumi.OutputState }

func (TriggerPubsubConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerPubsubConfig)(nil)).Elem()
}

func (o TriggerPubsubConfigOutput) ToTriggerPubsubConfigOutput() TriggerPubsubConfigOutput {
	return o
}

func (o TriggerPubsubConfigOutput) ToTriggerPubsubConfigOutputWithContext(ctx context.Context) TriggerPubsubConfigOutput {
	return o
}

func (o TriggerPubsubConfigOutput) ToTriggerPubsubConfigPtrOutput() TriggerPubsubConfigPtrOutput {
	return o.ToTriggerPubsubConfigPtrOutputWithContext(context.Background())
}

func (o TriggerPubsubConfigOutput) ToTriggerPubsubConfigPtrOutputWithContext(ctx context.Context) TriggerPubsubConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TriggerPubsubConfig) *TriggerPubsubConfig {
		return &v
	}).(TriggerPubsubConfigPtrOutput)
}

// Service account that will make the push request.
func (o TriggerPubsubConfigOutput) ServiceAccountEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerPubsubConfig) *string { return v.ServiceAccountEmail }).(pulumi.StringPtrOutput)
}

// -
// Potential issues with the underlying Pub/Sub subscription configuration.
// Only populated on get requests.
func (o TriggerPubsubConfigOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerPubsubConfig) *string { return v.State }).(pulumi.StringPtrOutput)
}

// -
// Output only. Name of the subscription.
func (o TriggerPubsubConfigOutput) Subscription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerPubsubConfig) *string { return v.Subscription }).(pulumi.StringPtrOutput)
}

// The name of the topic from which this subscription is receiving messages.
func (o TriggerPubsubConfigOutput) Topic() pulumi.StringOutput {
	return o.ApplyT(func(v TriggerPubsubConfig) string { return v.Topic }).(pulumi.StringOutput)
}

type TriggerPubsubConfigPtrOutput struct{ *pulumi.OutputState }

func (TriggerPubsubConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerPubsubConfig)(nil)).Elem()
}

func (o TriggerPubsubConfigPtrOutput) ToTriggerPubsubConfigPtrOutput() TriggerPubsubConfigPtrOutput {
	return o
}

func (o TriggerPubsubConfigPtrOutput) ToTriggerPubsubConfigPtrOutputWithContext(ctx context.Context) TriggerPubsubConfigPtrOutput {
	return o
}

func (o TriggerPubsubConfigPtrOutput) Elem() TriggerPubsubConfigOutput {
	return o.ApplyT(func(v *TriggerPubsubConfig) TriggerPubsubConfig {
		if v != nil {
			return *v
		}
		var ret TriggerPubsubConfig
		return ret
	}).(TriggerPubsubConfigOutput)
}

// Service account that will make the push request.
func (o TriggerPubsubConfigPtrOutput) ServiceAccountEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TriggerPubsubConfig) *string {
		if v == nil {
			return nil
		}
		return v.ServiceAccountEmail
	}).(pulumi.StringPtrOutput)
}

// -
// Potential issues with the underlying Pub/Sub subscription configuration.
// Only populated on get requests.
func (o TriggerPubsubConfigPtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TriggerPubsubConfig) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

// -
// Output only. Name of the subscription.
func (o TriggerPubsubConfigPtrOutput) Subscription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TriggerPubsubConfig) *string {
		if v == nil {
			return nil
		}
		return v.Subscription
	}).(pulumi.StringPtrOutput)
}

// The name of the topic from which this subscription is receiving messages.
func (o TriggerPubsubConfigPtrOutput) Topic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TriggerPubsubConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Topic
	}).(pulumi.StringPtrOutput)
}

type TriggerSourceToBuild struct {
	// The branch or tag to use. Must start with "refs/" (required).
	Ref string `pulumi:"ref"`
	// The type of the repo, since it may not be explicit from the repo field (e.g from a URL).
	// Values can be UNKNOWN, CLOUD_SOURCE_REPOSITORIES, GITHUB, BITBUCKET_SERVER
	// Possible values are `UNKNOWN`, `CLOUD_SOURCE_REPOSITORIES`, `GITHUB`, and `BITBUCKET_SERVER`.
	RepoType string `pulumi:"repoType"`
	// The URI of the repo (required).
	Uri string `pulumi:"uri"`
}

// TriggerSourceToBuildInput is an input type that accepts TriggerSourceToBuildArgs and TriggerSourceToBuildOutput values.
// You can construct a concrete instance of `TriggerSourceToBuildInput` via:
//
//	TriggerSourceToBuildArgs{...}
type TriggerSourceToBuildInput interface {
	pulumi.Input

	ToTriggerSourceToBuildOutput() TriggerSourceToBuildOutput
	ToTriggerSourceToBuildOutputWithContext(context.Context) TriggerSourceToBuildOutput
}

type TriggerSourceToBuildArgs struct {
	// The branch or tag to use. Must start with "refs/" (required).
	Ref pulumi.StringInput `pulumi:"ref"`
	// The type of the repo, since it may not be explicit from the repo field (e.g from a URL).
	// Values can be UNKNOWN, CLOUD_SOURCE_REPOSITORIES, GITHUB, BITBUCKET_SERVER
	// Possible values are `UNKNOWN`, `CLOUD_SOURCE_REPOSITORIES`, `GITHUB`, and `BITBUCKET_SERVER`.
	RepoType pulumi.StringInput `pulumi:"repoType"`
	// The URI of the repo (required).
	Uri pulumi.StringInput `pulumi:"uri"`
}

func (TriggerSourceToBuildArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerSourceToBuild)(nil)).Elem()
}

func (i TriggerSourceToBuildArgs) ToTriggerSourceToBuildOutput() TriggerSourceToBuildOutput {
	return i.ToTriggerSourceToBuildOutputWithContext(context.Background())
}

func (i TriggerSourceToBuildArgs) ToTriggerSourceToBuildOutputWithContext(ctx context.Context) TriggerSourceToBuildOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerSourceToBuildOutput)
}

func (i TriggerSourceToBuildArgs) ToTriggerSourceToBuildPtrOutput() TriggerSourceToBuildPtrOutput {
	return i.ToTriggerSourceToBuildPtrOutputWithContext(context.Background())
}

func (i TriggerSourceToBuildArgs) ToTriggerSourceToBuildPtrOutputWithContext(ctx context.Context) TriggerSourceToBuildPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerSourceToBuildOutput).ToTriggerSourceToBuildPtrOutputWithContext(ctx)
}

// TriggerSourceToBuildPtrInput is an input type that accepts TriggerSourceToBuildArgs, TriggerSourceToBuildPtr and TriggerSourceToBuildPtrOutput values.
// You can construct a concrete instance of `TriggerSourceToBuildPtrInput` via:
//
//	        TriggerSourceToBuildArgs{...}
//
//	or:
//
//	        nil
type TriggerSourceToBuildPtrInput interface {
	pulumi.Input

	ToTriggerSourceToBuildPtrOutput() TriggerSourceToBuildPtrOutput
	ToTriggerSourceToBuildPtrOutputWithContext(context.Context) TriggerSourceToBuildPtrOutput
}

type triggerSourceToBuildPtrType TriggerSourceToBuildArgs

func TriggerSourceToBuildPtr(v *TriggerSourceToBuildArgs) TriggerSourceToBuildPtrInput {
	return (*triggerSourceToBuildPtrType)(v)
}

func (*triggerSourceToBuildPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerSourceToBuild)(nil)).Elem()
}

func (i *triggerSourceToBuildPtrType) ToTriggerSourceToBuildPtrOutput() TriggerSourceToBuildPtrOutput {
	return i.ToTriggerSourceToBuildPtrOutputWithContext(context.Background())
}

func (i *triggerSourceToBuildPtrType) ToTriggerSourceToBuildPtrOutputWithContext(ctx context.Context) TriggerSourceToBuildPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerSourceToBuildPtrOutput)
}

type TriggerSourceToBuildOutput struct{ *pulumi.OutputState }

func (TriggerSourceToBuildOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerSourceToBuild)(nil)).Elem()
}

func (o TriggerSourceToBuildOutput) ToTriggerSourceToBuildOutput() TriggerSourceToBuildOutput {
	return o
}

func (o TriggerSourceToBuildOutput) ToTriggerSourceToBuildOutputWithContext(ctx context.Context) TriggerSourceToBuildOutput {
	return o
}

func (o TriggerSourceToBuildOutput) ToTriggerSourceToBuildPtrOutput() TriggerSourceToBuildPtrOutput {
	return o.ToTriggerSourceToBuildPtrOutputWithContext(context.Background())
}

func (o TriggerSourceToBuildOutput) ToTriggerSourceToBuildPtrOutputWithContext(ctx context.Context) TriggerSourceToBuildPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TriggerSourceToBuild) *TriggerSourceToBuild {
		return &v
	}).(TriggerSourceToBuildPtrOutput)
}

// The branch or tag to use. Must start with "refs/" (required).
func (o TriggerSourceToBuildOutput) Ref() pulumi.StringOutput {
	return o.ApplyT(func(v TriggerSourceToBuild) string { return v.Ref }).(pulumi.StringOutput)
}

// The type of the repo, since it may not be explicit from the repo field (e.g from a URL).
// Values can be UNKNOWN, CLOUD_SOURCE_REPOSITORIES, GITHUB, BITBUCKET_SERVER
// Possible values are `UNKNOWN`, `CLOUD_SOURCE_REPOSITORIES`, `GITHUB`, and `BITBUCKET_SERVER`.
func (o TriggerSourceToBuildOutput) RepoType() pulumi.StringOutput {
	return o.ApplyT(func(v TriggerSourceToBuild) string { return v.RepoType }).(pulumi.StringOutput)
}

// The URI of the repo (required).
func (o TriggerSourceToBuildOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v TriggerSourceToBuild) string { return v.Uri }).(pulumi.StringOutput)
}

type TriggerSourceToBuildPtrOutput struct{ *pulumi.OutputState }

func (TriggerSourceToBuildPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerSourceToBuild)(nil)).Elem()
}

func (o TriggerSourceToBuildPtrOutput) ToTriggerSourceToBuildPtrOutput() TriggerSourceToBuildPtrOutput {
	return o
}

func (o TriggerSourceToBuildPtrOutput) ToTriggerSourceToBuildPtrOutputWithContext(ctx context.Context) TriggerSourceToBuildPtrOutput {
	return o
}

func (o TriggerSourceToBuildPtrOutput) Elem() TriggerSourceToBuildOutput {
	return o.ApplyT(func(v *TriggerSourceToBuild) TriggerSourceToBuild {
		if v != nil {
			return *v
		}
		var ret TriggerSourceToBuild
		return ret
	}).(TriggerSourceToBuildOutput)
}

// The branch or tag to use. Must start with "refs/" (required).
func (o TriggerSourceToBuildPtrOutput) Ref() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TriggerSourceToBuild) *string {
		if v == nil {
			return nil
		}
		return &v.Ref
	}).(pulumi.StringPtrOutput)
}

// The type of the repo, since it may not be explicit from the repo field (e.g from a URL).
// Values can be UNKNOWN, CLOUD_SOURCE_REPOSITORIES, GITHUB, BITBUCKET_SERVER
// Possible values are `UNKNOWN`, `CLOUD_SOURCE_REPOSITORIES`, `GITHUB`, and `BITBUCKET_SERVER`.
func (o TriggerSourceToBuildPtrOutput) RepoType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TriggerSourceToBuild) *string {
		if v == nil {
			return nil
		}
		return &v.RepoType
	}).(pulumi.StringPtrOutput)
}

// The URI of the repo (required).
func (o TriggerSourceToBuildPtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TriggerSourceToBuild) *string {
		if v == nil {
			return nil
		}
		return &v.Uri
	}).(pulumi.StringPtrOutput)
}

type TriggerTriggerTemplate struct {
	// Regex matching branches to build. Exactly one a of branch name, tag, or commit SHA must be provided.
	// The syntax of the regular expressions accepted is the syntax accepted by RE2 and
	// described at https://github.com/google/re2/wiki/Syntax
	BranchName *string `pulumi:"branchName"`
	// Explicit commit SHA to build. Exactly one a of branch name, tag, or commit SHA must be provided.
	CommitSha *string `pulumi:"commitSha"`
	// Working directory to use when running this step's container.
	// If this value is a relative path, it is relative to the build's working
	// directory. If this value is absolute, it may be outside the build's working
	// directory, in which case the contents of the path may not be persisted
	// across build step executions, unless a `volume` for that path is specified.
	// If the build specifies a `RepoSource` with `dir` and a step with a
	// `dir`,
	// which specifies an absolute path, the `RepoSource` `dir` is ignored
	// for the step's execution.
	Dir *string `pulumi:"dir"`
	// Only trigger a build if the revision regex does NOT match the revision regex.
	InvertRegex *bool `pulumi:"invertRegex"`
	// ID of the project that owns the Cloud Source Repository.
	// If omitted, the project ID requesting the build is assumed.
	ProjectId *string `pulumi:"projectId"`
	// Name of the Cloud Source Repository.
	RepoName *string `pulumi:"repoName"`
	// Regex matching tags to build. Exactly one a of branch name, tag, or commit SHA must be provided.
	// The syntax of the regular expressions accepted is the syntax accepted by RE2 and
	// described at https://github.com/google/re2/wiki/Syntax
	TagName *string `pulumi:"tagName"`
}

// TriggerTriggerTemplateInput is an input type that accepts TriggerTriggerTemplateArgs and TriggerTriggerTemplateOutput values.
// You can construct a concrete instance of `TriggerTriggerTemplateInput` via:
//
//	TriggerTriggerTemplateArgs{...}
type TriggerTriggerTemplateInput interface {
	pulumi.Input

	ToTriggerTriggerTemplateOutput() TriggerTriggerTemplateOutput
	ToTriggerTriggerTemplateOutputWithContext(context.Context) TriggerTriggerTemplateOutput
}

type TriggerTriggerTemplateArgs struct {
	// Regex matching branches to build. Exactly one a of branch name, tag, or commit SHA must be provided.
	// The syntax of the regular expressions accepted is the syntax accepted by RE2 and
	// described at https://github.com/google/re2/wiki/Syntax
	BranchName pulumi.StringPtrInput `pulumi:"branchName"`
	// Explicit commit SHA to build. Exactly one a of branch name, tag, or commit SHA must be provided.
	CommitSha pulumi.StringPtrInput `pulumi:"commitSha"`
	// Working directory to use when running this step's container.
	// If this value is a relative path, it is relative to the build's working
	// directory. If this value is absolute, it may be outside the build's working
	// directory, in which case the contents of the path may not be persisted
	// across build step executions, unless a `volume` for that path is specified.
	// If the build specifies a `RepoSource` with `dir` and a step with a
	// `dir`,
	// which specifies an absolute path, the `RepoSource` `dir` is ignored
	// for the step's execution.
	Dir pulumi.StringPtrInput `pulumi:"dir"`
	// Only trigger a build if the revision regex does NOT match the revision regex.
	InvertRegex pulumi.BoolPtrInput `pulumi:"invertRegex"`
	// ID of the project that owns the Cloud Source Repository.
	// If omitted, the project ID requesting the build is assumed.
	ProjectId pulumi.StringPtrInput `pulumi:"projectId"`
	// Name of the Cloud Source Repository.
	RepoName pulumi.StringPtrInput `pulumi:"repoName"`
	// Regex matching tags to build. Exactly one a of branch name, tag, or commit SHA must be provided.
	// The syntax of the regular expressions accepted is the syntax accepted by RE2 and
	// described at https://github.com/google/re2/wiki/Syntax
	TagName pulumi.StringPtrInput `pulumi:"tagName"`
}

func (TriggerTriggerTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerTriggerTemplate)(nil)).Elem()
}

func (i TriggerTriggerTemplateArgs) ToTriggerTriggerTemplateOutput() TriggerTriggerTemplateOutput {
	return i.ToTriggerTriggerTemplateOutputWithContext(context.Background())
}

func (i TriggerTriggerTemplateArgs) ToTriggerTriggerTemplateOutputWithContext(ctx context.Context) TriggerTriggerTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerTriggerTemplateOutput)
}

func (i TriggerTriggerTemplateArgs) ToTriggerTriggerTemplatePtrOutput() TriggerTriggerTemplatePtrOutput {
	return i.ToTriggerTriggerTemplatePtrOutputWithContext(context.Background())
}

func (i TriggerTriggerTemplateArgs) ToTriggerTriggerTemplatePtrOutputWithContext(ctx context.Context) TriggerTriggerTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerTriggerTemplateOutput).ToTriggerTriggerTemplatePtrOutputWithContext(ctx)
}

// TriggerTriggerTemplatePtrInput is an input type that accepts TriggerTriggerTemplateArgs, TriggerTriggerTemplatePtr and TriggerTriggerTemplatePtrOutput values.
// You can construct a concrete instance of `TriggerTriggerTemplatePtrInput` via:
//
//	        TriggerTriggerTemplateArgs{...}
//
//	or:
//
//	        nil
type TriggerTriggerTemplatePtrInput interface {
	pulumi.Input

	ToTriggerTriggerTemplatePtrOutput() TriggerTriggerTemplatePtrOutput
	ToTriggerTriggerTemplatePtrOutputWithContext(context.Context) TriggerTriggerTemplatePtrOutput
}

type triggerTriggerTemplatePtrType TriggerTriggerTemplateArgs

func TriggerTriggerTemplatePtr(v *TriggerTriggerTemplateArgs) TriggerTriggerTemplatePtrInput {
	return (*triggerTriggerTemplatePtrType)(v)
}

func (*triggerTriggerTemplatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerTriggerTemplate)(nil)).Elem()
}

func (i *triggerTriggerTemplatePtrType) ToTriggerTriggerTemplatePtrOutput() TriggerTriggerTemplatePtrOutput {
	return i.ToTriggerTriggerTemplatePtrOutputWithContext(context.Background())
}

func (i *triggerTriggerTemplatePtrType) ToTriggerTriggerTemplatePtrOutputWithContext(ctx context.Context) TriggerTriggerTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerTriggerTemplatePtrOutput)
}

type TriggerTriggerTemplateOutput struct{ *pulumi.OutputState }

func (TriggerTriggerTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerTriggerTemplate)(nil)).Elem()
}

func (o TriggerTriggerTemplateOutput) ToTriggerTriggerTemplateOutput() TriggerTriggerTemplateOutput {
	return o
}

func (o TriggerTriggerTemplateOutput) ToTriggerTriggerTemplateOutputWithContext(ctx context.Context) TriggerTriggerTemplateOutput {
	return o
}

func (o TriggerTriggerTemplateOutput) ToTriggerTriggerTemplatePtrOutput() TriggerTriggerTemplatePtrOutput {
	return o.ToTriggerTriggerTemplatePtrOutputWithContext(context.Background())
}

func (o TriggerTriggerTemplateOutput) ToTriggerTriggerTemplatePtrOutputWithContext(ctx context.Context) TriggerTriggerTemplatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TriggerTriggerTemplate) *TriggerTriggerTemplate {
		return &v
	}).(TriggerTriggerTemplatePtrOutput)
}

// Regex matching branches to build. Exactly one a of branch name, tag, or commit SHA must be provided.
// The syntax of the regular expressions accepted is the syntax accepted by RE2 and
// described at https://github.com/google/re2/wiki/Syntax
func (o TriggerTriggerTemplateOutput) BranchName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerTriggerTemplate) *string { return v.BranchName }).(pulumi.StringPtrOutput)
}

// Explicit commit SHA to build. Exactly one a of branch name, tag, or commit SHA must be provided.
func (o TriggerTriggerTemplateOutput) CommitSha() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerTriggerTemplate) *string { return v.CommitSha }).(pulumi.StringPtrOutput)
}

// Working directory to use when running this step's container.
// If this value is a relative path, it is relative to the build's working
// directory. If this value is absolute, it may be outside the build's working
// directory, in which case the contents of the path may not be persisted
// across build step executions, unless a `volume` for that path is specified.
// If the build specifies a `RepoSource` with `dir` and a step with a
// `dir`,
// which specifies an absolute path, the `RepoSource` `dir` is ignored
// for the step's execution.
func (o TriggerTriggerTemplateOutput) Dir() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerTriggerTemplate) *string { return v.Dir }).(pulumi.StringPtrOutput)
}

// Only trigger a build if the revision regex does NOT match the revision regex.
func (o TriggerTriggerTemplateOutput) InvertRegex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TriggerTriggerTemplate) *bool { return v.InvertRegex }).(pulumi.BoolPtrOutput)
}

// ID of the project that owns the Cloud Source Repository.
// If omitted, the project ID requesting the build is assumed.
func (o TriggerTriggerTemplateOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerTriggerTemplate) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

// Name of the Cloud Source Repository.
func (o TriggerTriggerTemplateOutput) RepoName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerTriggerTemplate) *string { return v.RepoName }).(pulumi.StringPtrOutput)
}

// Regex matching tags to build. Exactly one a of branch name, tag, or commit SHA must be provided.
// The syntax of the regular expressions accepted is the syntax accepted by RE2 and
// described at https://github.com/google/re2/wiki/Syntax
func (o TriggerTriggerTemplateOutput) TagName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerTriggerTemplate) *string { return v.TagName }).(pulumi.StringPtrOutput)
}

type TriggerTriggerTemplatePtrOutput struct{ *pulumi.OutputState }

func (TriggerTriggerTemplatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerTriggerTemplate)(nil)).Elem()
}

func (o TriggerTriggerTemplatePtrOutput) ToTriggerTriggerTemplatePtrOutput() TriggerTriggerTemplatePtrOutput {
	return o
}

func (o TriggerTriggerTemplatePtrOutput) ToTriggerTriggerTemplatePtrOutputWithContext(ctx context.Context) TriggerTriggerTemplatePtrOutput {
	return o
}

func (o TriggerTriggerTemplatePtrOutput) Elem() TriggerTriggerTemplateOutput {
	return o.ApplyT(func(v *TriggerTriggerTemplate) TriggerTriggerTemplate {
		if v != nil {
			return *v
		}
		var ret TriggerTriggerTemplate
		return ret
	}).(TriggerTriggerTemplateOutput)
}

// Regex matching branches to build. Exactly one a of branch name, tag, or commit SHA must be provided.
// The syntax of the regular expressions accepted is the syntax accepted by RE2 and
// described at https://github.com/google/re2/wiki/Syntax
func (o TriggerTriggerTemplatePtrOutput) BranchName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TriggerTriggerTemplate) *string {
		if v == nil {
			return nil
		}
		return v.BranchName
	}).(pulumi.StringPtrOutput)
}

// Explicit commit SHA to build. Exactly one a of branch name, tag, or commit SHA must be provided.
func (o TriggerTriggerTemplatePtrOutput) CommitSha() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TriggerTriggerTemplate) *string {
		if v == nil {
			return nil
		}
		return v.CommitSha
	}).(pulumi.StringPtrOutput)
}

// Working directory to use when running this step's container.
// If this value is a relative path, it is relative to the build's working
// directory. If this value is absolute, it may be outside the build's working
// directory, in which case the contents of the path may not be persisted
// across build step executions, unless a `volume` for that path is specified.
// If the build specifies a `RepoSource` with `dir` and a step with a
// `dir`,
// which specifies an absolute path, the `RepoSource` `dir` is ignored
// for the step's execution.
func (o TriggerTriggerTemplatePtrOutput) Dir() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TriggerTriggerTemplate) *string {
		if v == nil {
			return nil
		}
		return v.Dir
	}).(pulumi.StringPtrOutput)
}

// Only trigger a build if the revision regex does NOT match the revision regex.
func (o TriggerTriggerTemplatePtrOutput) InvertRegex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TriggerTriggerTemplate) *bool {
		if v == nil {
			return nil
		}
		return v.InvertRegex
	}).(pulumi.BoolPtrOutput)
}

// ID of the project that owns the Cloud Source Repository.
// If omitted, the project ID requesting the build is assumed.
func (o TriggerTriggerTemplatePtrOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TriggerTriggerTemplate) *string {
		if v == nil {
			return nil
		}
		return v.ProjectId
	}).(pulumi.StringPtrOutput)
}

// Name of the Cloud Source Repository.
func (o TriggerTriggerTemplatePtrOutput) RepoName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TriggerTriggerTemplate) *string {
		if v == nil {
			return nil
		}
		return v.RepoName
	}).(pulumi.StringPtrOutput)
}

// Regex matching tags to build. Exactly one a of branch name, tag, or commit SHA must be provided.
// The syntax of the regular expressions accepted is the syntax accepted by RE2 and
// described at https://github.com/google/re2/wiki/Syntax
func (o TriggerTriggerTemplatePtrOutput) TagName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TriggerTriggerTemplate) *string {
		if v == nil {
			return nil
		}
		return v.TagName
	}).(pulumi.StringPtrOutput)
}

type TriggerWebhookConfig struct {
	// Secrets to decrypt using Cloud Key Management Service.
	// Structure is documented below.
	Secret string `pulumi:"secret"`
	// -
	// Potential issues with the underlying Pub/Sub subscription configuration.
	// Only populated on get requests.
	State *string `pulumi:"state"`
}

// TriggerWebhookConfigInput is an input type that accepts TriggerWebhookConfigArgs and TriggerWebhookConfigOutput values.
// You can construct a concrete instance of `TriggerWebhookConfigInput` via:
//
//	TriggerWebhookConfigArgs{...}
type TriggerWebhookConfigInput interface {
	pulumi.Input

	ToTriggerWebhookConfigOutput() TriggerWebhookConfigOutput
	ToTriggerWebhookConfigOutputWithContext(context.Context) TriggerWebhookConfigOutput
}

type TriggerWebhookConfigArgs struct {
	// Secrets to decrypt using Cloud Key Management Service.
	// Structure is documented below.
	Secret pulumi.StringInput `pulumi:"secret"`
	// -
	// Potential issues with the underlying Pub/Sub subscription configuration.
	// Only populated on get requests.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (TriggerWebhookConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerWebhookConfig)(nil)).Elem()
}

func (i TriggerWebhookConfigArgs) ToTriggerWebhookConfigOutput() TriggerWebhookConfigOutput {
	return i.ToTriggerWebhookConfigOutputWithContext(context.Background())
}

func (i TriggerWebhookConfigArgs) ToTriggerWebhookConfigOutputWithContext(ctx context.Context) TriggerWebhookConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerWebhookConfigOutput)
}

func (i TriggerWebhookConfigArgs) ToTriggerWebhookConfigPtrOutput() TriggerWebhookConfigPtrOutput {
	return i.ToTriggerWebhookConfigPtrOutputWithContext(context.Background())
}

func (i TriggerWebhookConfigArgs) ToTriggerWebhookConfigPtrOutputWithContext(ctx context.Context) TriggerWebhookConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerWebhookConfigOutput).ToTriggerWebhookConfigPtrOutputWithContext(ctx)
}

// TriggerWebhookConfigPtrInput is an input type that accepts TriggerWebhookConfigArgs, TriggerWebhookConfigPtr and TriggerWebhookConfigPtrOutput values.
// You can construct a concrete instance of `TriggerWebhookConfigPtrInput` via:
//
//	        TriggerWebhookConfigArgs{...}
//
//	or:
//
//	        nil
type TriggerWebhookConfigPtrInput interface {
	pulumi.Input

	ToTriggerWebhookConfigPtrOutput() TriggerWebhookConfigPtrOutput
	ToTriggerWebhookConfigPtrOutputWithContext(context.Context) TriggerWebhookConfigPtrOutput
}

type triggerWebhookConfigPtrType TriggerWebhookConfigArgs

func TriggerWebhookConfigPtr(v *TriggerWebhookConfigArgs) TriggerWebhookConfigPtrInput {
	return (*triggerWebhookConfigPtrType)(v)
}

func (*triggerWebhookConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerWebhookConfig)(nil)).Elem()
}

func (i *triggerWebhookConfigPtrType) ToTriggerWebhookConfigPtrOutput() TriggerWebhookConfigPtrOutput {
	return i.ToTriggerWebhookConfigPtrOutputWithContext(context.Background())
}

func (i *triggerWebhookConfigPtrType) ToTriggerWebhookConfigPtrOutputWithContext(ctx context.Context) TriggerWebhookConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerWebhookConfigPtrOutput)
}

type TriggerWebhookConfigOutput struct{ *pulumi.OutputState }

func (TriggerWebhookConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerWebhookConfig)(nil)).Elem()
}

func (o TriggerWebhookConfigOutput) ToTriggerWebhookConfigOutput() TriggerWebhookConfigOutput {
	return o
}

func (o TriggerWebhookConfigOutput) ToTriggerWebhookConfigOutputWithContext(ctx context.Context) TriggerWebhookConfigOutput {
	return o
}

func (o TriggerWebhookConfigOutput) ToTriggerWebhookConfigPtrOutput() TriggerWebhookConfigPtrOutput {
	return o.ToTriggerWebhookConfigPtrOutputWithContext(context.Background())
}

func (o TriggerWebhookConfigOutput) ToTriggerWebhookConfigPtrOutputWithContext(ctx context.Context) TriggerWebhookConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TriggerWebhookConfig) *TriggerWebhookConfig {
		return &v
	}).(TriggerWebhookConfigPtrOutput)
}

// Secrets to decrypt using Cloud Key Management Service.
// Structure is documented below.
func (o TriggerWebhookConfigOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v TriggerWebhookConfig) string { return v.Secret }).(pulumi.StringOutput)
}

// -
// Potential issues with the underlying Pub/Sub subscription configuration.
// Only populated on get requests.
func (o TriggerWebhookConfigOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerWebhookConfig) *string { return v.State }).(pulumi.StringPtrOutput)
}

type TriggerWebhookConfigPtrOutput struct{ *pulumi.OutputState }

func (TriggerWebhookConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerWebhookConfig)(nil)).Elem()
}

func (o TriggerWebhookConfigPtrOutput) ToTriggerWebhookConfigPtrOutput() TriggerWebhookConfigPtrOutput {
	return o
}

func (o TriggerWebhookConfigPtrOutput) ToTriggerWebhookConfigPtrOutputWithContext(ctx context.Context) TriggerWebhookConfigPtrOutput {
	return o
}

func (o TriggerWebhookConfigPtrOutput) Elem() TriggerWebhookConfigOutput {
	return o.ApplyT(func(v *TriggerWebhookConfig) TriggerWebhookConfig {
		if v != nil {
			return *v
		}
		var ret TriggerWebhookConfig
		return ret
	}).(TriggerWebhookConfigOutput)
}

// Secrets to decrypt using Cloud Key Management Service.
// Structure is documented below.
func (o TriggerWebhookConfigPtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TriggerWebhookConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Secret
	}).(pulumi.StringPtrOutput)
}

// -
// Potential issues with the underlying Pub/Sub subscription configuration.
// Only populated on get requests.
func (o TriggerWebhookConfigPtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TriggerWebhookConfig) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

type WorkerPoolNetworkConfig struct {
	// Immutable. The network definition that the workers are peered to. If this section is left empty, the workers will be peered to `WorkerPool.project_id` on the service producer network. Must be in the format `projects/{project}/global/networks/{network}`, where `{project}` is a project number, such as `12345`, and `{network}` is the name of a VPC network in the project. See (https://cloud.google.com/cloud-build/docs/custom-workers/set-up-custom-worker-pool-environment#understanding_the_network_configuration_options)
	PeeredNetwork string `pulumi:"peeredNetwork"`
}

// WorkerPoolNetworkConfigInput is an input type that accepts WorkerPoolNetworkConfigArgs and WorkerPoolNetworkConfigOutput values.
// You can construct a concrete instance of `WorkerPoolNetworkConfigInput` via:
//
//	WorkerPoolNetworkConfigArgs{...}
type WorkerPoolNetworkConfigInput interface {
	pulumi.Input

	ToWorkerPoolNetworkConfigOutput() WorkerPoolNetworkConfigOutput
	ToWorkerPoolNetworkConfigOutputWithContext(context.Context) WorkerPoolNetworkConfigOutput
}

type WorkerPoolNetworkConfigArgs struct {
	// Immutable. The network definition that the workers are peered to. If this section is left empty, the workers will be peered to `WorkerPool.project_id` on the service producer network. Must be in the format `projects/{project}/global/networks/{network}`, where `{project}` is a project number, such as `12345`, and `{network}` is the name of a VPC network in the project. See (https://cloud.google.com/cloud-build/docs/custom-workers/set-up-custom-worker-pool-environment#understanding_the_network_configuration_options)
	PeeredNetwork pulumi.StringInput `pulumi:"peeredNetwork"`
}

func (WorkerPoolNetworkConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkerPoolNetworkConfig)(nil)).Elem()
}

func (i WorkerPoolNetworkConfigArgs) ToWorkerPoolNetworkConfigOutput() WorkerPoolNetworkConfigOutput {
	return i.ToWorkerPoolNetworkConfigOutputWithContext(context.Background())
}

func (i WorkerPoolNetworkConfigArgs) ToWorkerPoolNetworkConfigOutputWithContext(ctx context.Context) WorkerPoolNetworkConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkerPoolNetworkConfigOutput)
}

func (i WorkerPoolNetworkConfigArgs) ToWorkerPoolNetworkConfigPtrOutput() WorkerPoolNetworkConfigPtrOutput {
	return i.ToWorkerPoolNetworkConfigPtrOutputWithContext(context.Background())
}

func (i WorkerPoolNetworkConfigArgs) ToWorkerPoolNetworkConfigPtrOutputWithContext(ctx context.Context) WorkerPoolNetworkConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkerPoolNetworkConfigOutput).ToWorkerPoolNetworkConfigPtrOutputWithContext(ctx)
}

// WorkerPoolNetworkConfigPtrInput is an input type that accepts WorkerPoolNetworkConfigArgs, WorkerPoolNetworkConfigPtr and WorkerPoolNetworkConfigPtrOutput values.
// You can construct a concrete instance of `WorkerPoolNetworkConfigPtrInput` via:
//
//	        WorkerPoolNetworkConfigArgs{...}
//
//	or:
//
//	        nil
type WorkerPoolNetworkConfigPtrInput interface {
	pulumi.Input

	ToWorkerPoolNetworkConfigPtrOutput() WorkerPoolNetworkConfigPtrOutput
	ToWorkerPoolNetworkConfigPtrOutputWithContext(context.Context) WorkerPoolNetworkConfigPtrOutput
}

type workerPoolNetworkConfigPtrType WorkerPoolNetworkConfigArgs

func WorkerPoolNetworkConfigPtr(v *WorkerPoolNetworkConfigArgs) WorkerPoolNetworkConfigPtrInput {
	return (*workerPoolNetworkConfigPtrType)(v)
}

func (*workerPoolNetworkConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkerPoolNetworkConfig)(nil)).Elem()
}

func (i *workerPoolNetworkConfigPtrType) ToWorkerPoolNetworkConfigPtrOutput() WorkerPoolNetworkConfigPtrOutput {
	return i.ToWorkerPoolNetworkConfigPtrOutputWithContext(context.Background())
}

func (i *workerPoolNetworkConfigPtrType) ToWorkerPoolNetworkConfigPtrOutputWithContext(ctx context.Context) WorkerPoolNetworkConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkerPoolNetworkConfigPtrOutput)
}

type WorkerPoolNetworkConfigOutput struct{ *pulumi.OutputState }

func (WorkerPoolNetworkConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkerPoolNetworkConfig)(nil)).Elem()
}

func (o WorkerPoolNetworkConfigOutput) ToWorkerPoolNetworkConfigOutput() WorkerPoolNetworkConfigOutput {
	return o
}

func (o WorkerPoolNetworkConfigOutput) ToWorkerPoolNetworkConfigOutputWithContext(ctx context.Context) WorkerPoolNetworkConfigOutput {
	return o
}

func (o WorkerPoolNetworkConfigOutput) ToWorkerPoolNetworkConfigPtrOutput() WorkerPoolNetworkConfigPtrOutput {
	return o.ToWorkerPoolNetworkConfigPtrOutputWithContext(context.Background())
}

func (o WorkerPoolNetworkConfigOutput) ToWorkerPoolNetworkConfigPtrOutputWithContext(ctx context.Context) WorkerPoolNetworkConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkerPoolNetworkConfig) *WorkerPoolNetworkConfig {
		return &v
	}).(WorkerPoolNetworkConfigPtrOutput)
}

// Immutable. The network definition that the workers are peered to. If this section is left empty, the workers will be peered to `WorkerPool.project_id` on the service producer network. Must be in the format `projects/{project}/global/networks/{network}`, where `{project}` is a project number, such as `12345`, and `{network}` is the name of a VPC network in the project. See (https://cloud.google.com/cloud-build/docs/custom-workers/set-up-custom-worker-pool-environment#understanding_the_network_configuration_options)
func (o WorkerPoolNetworkConfigOutput) PeeredNetwork() pulumi.StringOutput {
	return o.ApplyT(func(v WorkerPoolNetworkConfig) string { return v.PeeredNetwork }).(pulumi.StringOutput)
}

type WorkerPoolNetworkConfigPtrOutput struct{ *pulumi.OutputState }

func (WorkerPoolNetworkConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkerPoolNetworkConfig)(nil)).Elem()
}

func (o WorkerPoolNetworkConfigPtrOutput) ToWorkerPoolNetworkConfigPtrOutput() WorkerPoolNetworkConfigPtrOutput {
	return o
}

func (o WorkerPoolNetworkConfigPtrOutput) ToWorkerPoolNetworkConfigPtrOutputWithContext(ctx context.Context) WorkerPoolNetworkConfigPtrOutput {
	return o
}

func (o WorkerPoolNetworkConfigPtrOutput) Elem() WorkerPoolNetworkConfigOutput {
	return o.ApplyT(func(v *WorkerPoolNetworkConfig) WorkerPoolNetworkConfig {
		if v != nil {
			return *v
		}
		var ret WorkerPoolNetworkConfig
		return ret
	}).(WorkerPoolNetworkConfigOutput)
}

// Immutable. The network definition that the workers are peered to. If this section is left empty, the workers will be peered to `WorkerPool.project_id` on the service producer network. Must be in the format `projects/{project}/global/networks/{network}`, where `{project}` is a project number, such as `12345`, and `{network}` is the name of a VPC network in the project. See (https://cloud.google.com/cloud-build/docs/custom-workers/set-up-custom-worker-pool-environment#understanding_the_network_configuration_options)
func (o WorkerPoolNetworkConfigPtrOutput) PeeredNetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkerPoolNetworkConfig) *string {
		if v == nil {
			return nil
		}
		return &v.PeeredNetwork
	}).(pulumi.StringPtrOutput)
}

type WorkerPoolWorkerConfig struct {
	// Size of the disk attached to the worker, in GB. See (https://cloud.google.com/cloud-build/docs/custom-workers/worker-pool-config-file). Specify a value of up to 1000. If `0` is specified, Cloud Build will use a standard disk size.
	DiskSizeGb *int `pulumi:"diskSizeGb"`
	// Machine type of a worker, such as `n1-standard-1`. See (https://cloud.google.com/cloud-build/docs/custom-workers/worker-pool-config-file). If left blank, Cloud Build will use `n1-standard-1`.
	MachineType *string `pulumi:"machineType"`
	// If true, workers are created without any public address, which prevents network egress to public IPs.
	NoExternalIp *bool `pulumi:"noExternalIp"`
}

// WorkerPoolWorkerConfigInput is an input type that accepts WorkerPoolWorkerConfigArgs and WorkerPoolWorkerConfigOutput values.
// You can construct a concrete instance of `WorkerPoolWorkerConfigInput` via:
//
//	WorkerPoolWorkerConfigArgs{...}
type WorkerPoolWorkerConfigInput interface {
	pulumi.Input

	ToWorkerPoolWorkerConfigOutput() WorkerPoolWorkerConfigOutput
	ToWorkerPoolWorkerConfigOutputWithContext(context.Context) WorkerPoolWorkerConfigOutput
}

type WorkerPoolWorkerConfigArgs struct {
	// Size of the disk attached to the worker, in GB. See (https://cloud.google.com/cloud-build/docs/custom-workers/worker-pool-config-file). Specify a value of up to 1000. If `0` is specified, Cloud Build will use a standard disk size.
	DiskSizeGb pulumi.IntPtrInput `pulumi:"diskSizeGb"`
	// Machine type of a worker, such as `n1-standard-1`. See (https://cloud.google.com/cloud-build/docs/custom-workers/worker-pool-config-file). If left blank, Cloud Build will use `n1-standard-1`.
	MachineType pulumi.StringPtrInput `pulumi:"machineType"`
	// If true, workers are created without any public address, which prevents network egress to public IPs.
	NoExternalIp pulumi.BoolPtrInput `pulumi:"noExternalIp"`
}

func (WorkerPoolWorkerConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkerPoolWorkerConfig)(nil)).Elem()
}

func (i WorkerPoolWorkerConfigArgs) ToWorkerPoolWorkerConfigOutput() WorkerPoolWorkerConfigOutput {
	return i.ToWorkerPoolWorkerConfigOutputWithContext(context.Background())
}

func (i WorkerPoolWorkerConfigArgs) ToWorkerPoolWorkerConfigOutputWithContext(ctx context.Context) WorkerPoolWorkerConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkerPoolWorkerConfigOutput)
}

func (i WorkerPoolWorkerConfigArgs) ToWorkerPoolWorkerConfigPtrOutput() WorkerPoolWorkerConfigPtrOutput {
	return i.ToWorkerPoolWorkerConfigPtrOutputWithContext(context.Background())
}

func (i WorkerPoolWorkerConfigArgs) ToWorkerPoolWorkerConfigPtrOutputWithContext(ctx context.Context) WorkerPoolWorkerConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkerPoolWorkerConfigOutput).ToWorkerPoolWorkerConfigPtrOutputWithContext(ctx)
}

// WorkerPoolWorkerConfigPtrInput is an input type that accepts WorkerPoolWorkerConfigArgs, WorkerPoolWorkerConfigPtr and WorkerPoolWorkerConfigPtrOutput values.
// You can construct a concrete instance of `WorkerPoolWorkerConfigPtrInput` via:
//
//	        WorkerPoolWorkerConfigArgs{...}
//
//	or:
//
//	        nil
type WorkerPoolWorkerConfigPtrInput interface {
	pulumi.Input

	ToWorkerPoolWorkerConfigPtrOutput() WorkerPoolWorkerConfigPtrOutput
	ToWorkerPoolWorkerConfigPtrOutputWithContext(context.Context) WorkerPoolWorkerConfigPtrOutput
}

type workerPoolWorkerConfigPtrType WorkerPoolWorkerConfigArgs

func WorkerPoolWorkerConfigPtr(v *WorkerPoolWorkerConfigArgs) WorkerPoolWorkerConfigPtrInput {
	return (*workerPoolWorkerConfigPtrType)(v)
}

func (*workerPoolWorkerConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkerPoolWorkerConfig)(nil)).Elem()
}

func (i *workerPoolWorkerConfigPtrType) ToWorkerPoolWorkerConfigPtrOutput() WorkerPoolWorkerConfigPtrOutput {
	return i.ToWorkerPoolWorkerConfigPtrOutputWithContext(context.Background())
}

func (i *workerPoolWorkerConfigPtrType) ToWorkerPoolWorkerConfigPtrOutputWithContext(ctx context.Context) WorkerPoolWorkerConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkerPoolWorkerConfigPtrOutput)
}

type WorkerPoolWorkerConfigOutput struct{ *pulumi.OutputState }

func (WorkerPoolWorkerConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkerPoolWorkerConfig)(nil)).Elem()
}

func (o WorkerPoolWorkerConfigOutput) ToWorkerPoolWorkerConfigOutput() WorkerPoolWorkerConfigOutput {
	return o
}

func (o WorkerPoolWorkerConfigOutput) ToWorkerPoolWorkerConfigOutputWithContext(ctx context.Context) WorkerPoolWorkerConfigOutput {
	return o
}

func (o WorkerPoolWorkerConfigOutput) ToWorkerPoolWorkerConfigPtrOutput() WorkerPoolWorkerConfigPtrOutput {
	return o.ToWorkerPoolWorkerConfigPtrOutputWithContext(context.Background())
}

func (o WorkerPoolWorkerConfigOutput) ToWorkerPoolWorkerConfigPtrOutputWithContext(ctx context.Context) WorkerPoolWorkerConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkerPoolWorkerConfig) *WorkerPoolWorkerConfig {
		return &v
	}).(WorkerPoolWorkerConfigPtrOutput)
}

// Size of the disk attached to the worker, in GB. See (https://cloud.google.com/cloud-build/docs/custom-workers/worker-pool-config-file). Specify a value of up to 1000. If `0` is specified, Cloud Build will use a standard disk size.
func (o WorkerPoolWorkerConfigOutput) DiskSizeGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkerPoolWorkerConfig) *int { return v.DiskSizeGb }).(pulumi.IntPtrOutput)
}

// Machine type of a worker, such as `n1-standard-1`. See (https://cloud.google.com/cloud-build/docs/custom-workers/worker-pool-config-file). If left blank, Cloud Build will use `n1-standard-1`.
func (o WorkerPoolWorkerConfigOutput) MachineType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkerPoolWorkerConfig) *string { return v.MachineType }).(pulumi.StringPtrOutput)
}

// If true, workers are created without any public address, which prevents network egress to public IPs.
func (o WorkerPoolWorkerConfigOutput) NoExternalIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkerPoolWorkerConfig) *bool { return v.NoExternalIp }).(pulumi.BoolPtrOutput)
}

type WorkerPoolWorkerConfigPtrOutput struct{ *pulumi.OutputState }

func (WorkerPoolWorkerConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkerPoolWorkerConfig)(nil)).Elem()
}

func (o WorkerPoolWorkerConfigPtrOutput) ToWorkerPoolWorkerConfigPtrOutput() WorkerPoolWorkerConfigPtrOutput {
	return o
}

func (o WorkerPoolWorkerConfigPtrOutput) ToWorkerPoolWorkerConfigPtrOutputWithContext(ctx context.Context) WorkerPoolWorkerConfigPtrOutput {
	return o
}

func (o WorkerPoolWorkerConfigPtrOutput) Elem() WorkerPoolWorkerConfigOutput {
	return o.ApplyT(func(v *WorkerPoolWorkerConfig) WorkerPoolWorkerConfig {
		if v != nil {
			return *v
		}
		var ret WorkerPoolWorkerConfig
		return ret
	}).(WorkerPoolWorkerConfigOutput)
}

// Size of the disk attached to the worker, in GB. See (https://cloud.google.com/cloud-build/docs/custom-workers/worker-pool-config-file). Specify a value of up to 1000. If `0` is specified, Cloud Build will use a standard disk size.
func (o WorkerPoolWorkerConfigPtrOutput) DiskSizeGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkerPoolWorkerConfig) *int {
		if v == nil {
			return nil
		}
		return v.DiskSizeGb
	}).(pulumi.IntPtrOutput)
}

// Machine type of a worker, such as `n1-standard-1`. See (https://cloud.google.com/cloud-build/docs/custom-workers/worker-pool-config-file). If left blank, Cloud Build will use `n1-standard-1`.
func (o WorkerPoolWorkerConfigPtrOutput) MachineType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkerPoolWorkerConfig) *string {
		if v == nil {
			return nil
		}
		return v.MachineType
	}).(pulumi.StringPtrOutput)
}

// If true, workers are created without any public address, which prevents network egress to public IPs.
func (o WorkerPoolWorkerConfigPtrOutput) NoExternalIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkerPoolWorkerConfig) *bool {
		if v == nil {
			return nil
		}
		return v.NoExternalIp
	}).(pulumi.BoolPtrOutput)
}

type GetTriggerApprovalConfig struct {
	ApprovalRequired bool `pulumi:"approvalRequired"`
}

// GetTriggerApprovalConfigInput is an input type that accepts GetTriggerApprovalConfigArgs and GetTriggerApprovalConfigOutput values.
// You can construct a concrete instance of `GetTriggerApprovalConfigInput` via:
//
//	GetTriggerApprovalConfigArgs{...}
type GetTriggerApprovalConfigInput interface {
	pulumi.Input

	ToGetTriggerApprovalConfigOutput() GetTriggerApprovalConfigOutput
	ToGetTriggerApprovalConfigOutputWithContext(context.Context) GetTriggerApprovalConfigOutput
}

type GetTriggerApprovalConfigArgs struct {
	ApprovalRequired pulumi.BoolInput `pulumi:"approvalRequired"`
}

func (GetTriggerApprovalConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTriggerApprovalConfig)(nil)).Elem()
}

func (i GetTriggerApprovalConfigArgs) ToGetTriggerApprovalConfigOutput() GetTriggerApprovalConfigOutput {
	return i.ToGetTriggerApprovalConfigOutputWithContext(context.Background())
}

func (i GetTriggerApprovalConfigArgs) ToGetTriggerApprovalConfigOutputWithContext(ctx context.Context) GetTriggerApprovalConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTriggerApprovalConfigOutput)
}

// GetTriggerApprovalConfigArrayInput is an input type that accepts GetTriggerApprovalConfigArray and GetTriggerApprovalConfigArrayOutput values.
// You can construct a concrete instance of `GetTriggerApprovalConfigArrayInput` via:
//
//	GetTriggerApprovalConfigArray{ GetTriggerApprovalConfigArgs{...} }
type GetTriggerApprovalConfigArrayInput interface {
	pulumi.Input

	ToGetTriggerApprovalConfigArrayOutput() GetTriggerApprovalConfigArrayOutput
	ToGetTriggerApprovalConfigArrayOutputWithContext(context.Context) GetTriggerApprovalConfigArrayOutput
}

type GetTriggerApprovalConfigArray []GetTriggerApprovalConfigInput

func (GetTriggerApprovalConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTriggerApprovalConfig)(nil)).Elem()
}

func (i GetTriggerApprovalConfigArray) ToGetTriggerApprovalConfigArrayOutput() GetTriggerApprovalConfigArrayOutput {
	return i.ToGetTriggerApprovalConfigArrayOutputWithContext(context.Background())
}

func (i GetTriggerApprovalConfigArray) ToGetTriggerApprovalConfigArrayOutputWithContext(ctx context.Context) GetTriggerApprovalConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTriggerApprovalConfigArrayOutput)
}

type GetTriggerApprovalConfigOutput struct{ *pulumi.OutputState }

func (GetTriggerApprovalConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTriggerApprovalConfig)(nil)).Elem()
}

func (o GetTriggerApprovalConfigOutput) ToGetTriggerApprovalConfigOutput() GetTriggerApprovalConfigOutput {
	return o
}

func (o GetTriggerApprovalConfigOutput) ToGetTriggerApprovalConfigOutputWithContext(ctx context.Context) GetTriggerApprovalConfigOutput {
	return o
}

func (o GetTriggerApprovalConfigOutput) ApprovalRequired() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTriggerApprovalConfig) bool { return v.ApprovalRequired }).(pulumi.BoolOutput)
}

type GetTriggerApprovalConfigArrayOutput struct{ *pulumi.OutputState }

func (GetTriggerApprovalConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTriggerApprovalConfig)(nil)).Elem()
}

func (o GetTriggerApprovalConfigArrayOutput) ToGetTriggerApprovalConfigArrayOutput() GetTriggerApprovalConfigArrayOutput {
	return o
}

func (o GetTriggerApprovalConfigArrayOutput) ToGetTriggerApprovalConfigArrayOutputWithContext(ctx context.Context) GetTriggerApprovalConfigArrayOutput {
	return o
}

func (o GetTriggerApprovalConfigArrayOutput) Index(i pulumi.IntInput) GetTriggerApprovalConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTriggerApprovalConfig {
		return vs[0].([]GetTriggerApprovalConfig)[vs[1].(int)]
	}).(GetTriggerApprovalConfigOutput)
}

type GetTriggerBuild struct {
	Artifacts        []GetTriggerBuildArtifact        `pulumi:"artifacts"`
	AvailableSecrets []GetTriggerBuildAvailableSecret `pulumi:"availableSecrets"`
	Images           []string                         `pulumi:"images"`
	LogsBucket       string                           `pulumi:"logsBucket"`
	Options          []GetTriggerBuildOption          `pulumi:"options"`
	QueueTtl         string                           `pulumi:"queueTtl"`
	Secrets          []GetTriggerBuildSecret          `pulumi:"secrets"`
	Sources          []GetTriggerBuildSource          `pulumi:"sources"`
	Steps            []GetTriggerBuildStep            `pulumi:"steps"`
	Substitutions    map[string]string                `pulumi:"substitutions"`
	Tags             []string                         `pulumi:"tags"`
	Timeout          string                           `pulumi:"timeout"`
}

// GetTriggerBuildInput is an input type that accepts GetTriggerBuildArgs and GetTriggerBuildOutput values.
// You can construct a concrete instance of `GetTriggerBuildInput` via:
//
//	GetTriggerBuildArgs{...}
type GetTriggerBuildInput interface {
	pulumi.Input

	ToGetTriggerBuildOutput() GetTriggerBuildOutput
	ToGetTriggerBuildOutputWithContext(context.Context) GetTriggerBuildOutput
}

type GetTriggerBuildArgs struct {
	Artifacts        GetTriggerBuildArtifactArrayInput        `pulumi:"artifacts"`
	AvailableSecrets GetTriggerBuildAvailableSecretArrayInput `pulumi:"availableSecrets"`
	Images           pulumi.StringArrayInput                  `pulumi:"images"`
	LogsBucket       pulumi.StringInput                       `pulumi:"logsBucket"`
	Options          GetTriggerBuildOptionArrayInput          `pulumi:"options"`
	QueueTtl         pulumi.StringInput                       `pulumi:"queueTtl"`
	Secrets          GetTriggerBuildSecretArrayInput          `pulumi:"secrets"`
	Sources          GetTriggerBuildSourceArrayInput          `pulumi:"sources"`
	Steps            GetTriggerBuildStepArrayInput            `pulumi:"steps"`
	Substitutions    pulumi.StringMapInput                    `pulumi:"substitutions"`
	Tags             pulumi.StringArrayInput                  `pulumi:"tags"`
	Timeout          pulumi.StringInput                       `pulumi:"timeout"`
}

func (GetTriggerBuildArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTriggerBuild)(nil)).Elem()
}

func (i GetTriggerBuildArgs) ToGetTriggerBuildOutput() GetTriggerBuildOutput {
	return i.ToGetTriggerBuildOutputWithContext(context.Background())
}

func (i GetTriggerBuildArgs) ToGetTriggerBuildOutputWithContext(ctx context.Context) GetTriggerBuildOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTriggerBuildOutput)
}

// GetTriggerBuildArrayInput is an input type that accepts GetTriggerBuildArray and GetTriggerBuildArrayOutput values.
// You can construct a concrete instance of `GetTriggerBuildArrayInput` via:
//
//	GetTriggerBuildArray{ GetTriggerBuildArgs{...} }
type GetTriggerBuildArrayInput interface {
	pulumi.Input

	ToGetTriggerBuildArrayOutput() GetTriggerBuildArrayOutput
	ToGetTriggerBuildArrayOutputWithContext(context.Context) GetTriggerBuildArrayOutput
}

type GetTriggerBuildArray []GetTriggerBuildInput

func (GetTriggerBuildArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTriggerBuild)(nil)).Elem()
}

func (i GetTriggerBuildArray) ToGetTriggerBuildArrayOutput() GetTriggerBuildArrayOutput {
	return i.ToGetTriggerBuildArrayOutputWithContext(context.Background())
}

func (i GetTriggerBuildArray) ToGetTriggerBuildArrayOutputWithContext(ctx context.Context) GetTriggerBuildArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTriggerBuildArrayOutput)
}

type GetTriggerBuildOutput struct{ *pulumi.OutputState }

func (GetTriggerBuildOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTriggerBuild)(nil)).Elem()
}

func (o GetTriggerBuildOutput) ToGetTriggerBuildOutput() GetTriggerBuildOutput {
	return o
}

func (o GetTriggerBuildOutput) ToGetTriggerBuildOutputWithContext(ctx context.Context) GetTriggerBuildOutput {
	return o
}

func (o GetTriggerBuildOutput) Artifacts() GetTriggerBuildArtifactArrayOutput {
	return o.ApplyT(func(v GetTriggerBuild) []GetTriggerBuildArtifact { return v.Artifacts }).(GetTriggerBuildArtifactArrayOutput)
}

func (o GetTriggerBuildOutput) AvailableSecrets() GetTriggerBuildAvailableSecretArrayOutput {
	return o.ApplyT(func(v GetTriggerBuild) []GetTriggerBuildAvailableSecret { return v.AvailableSecrets }).(GetTriggerBuildAvailableSecretArrayOutput)
}

func (o GetTriggerBuildOutput) Images() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTriggerBuild) []string { return v.Images }).(pulumi.StringArrayOutput)
}

func (o GetTriggerBuildOutput) LogsBucket() pulumi.StringOutput {
	return o.ApplyT(func(v GetTriggerBuild) string { return v.LogsBucket }).(pulumi.StringOutput)
}

func (o GetTriggerBuildOutput) Options() GetTriggerBuildOptionArrayOutput {
	return o.ApplyT(func(v GetTriggerBuild) []GetTriggerBuildOption { return v.Options }).(GetTriggerBuildOptionArrayOutput)
}

func (o GetTriggerBuildOutput) QueueTtl() pulumi.StringOutput {
	return o.ApplyT(func(v GetTriggerBuild) string { return v.QueueTtl }).(pulumi.StringOutput)
}

func (o GetTriggerBuildOutput) Secrets() GetTriggerBuildSecretArrayOutput {
	return o.ApplyT(func(v GetTriggerBuild) []GetTriggerBuildSecret { return v.Secrets }).(GetTriggerBuildSecretArrayOutput)
}

func (o GetTriggerBuildOutput) Sources() GetTriggerBuildSourceArrayOutput {
	return o.ApplyT(func(v GetTriggerBuild) []GetTriggerBuildSource { return v.Sources }).(GetTriggerBuildSourceArrayOutput)
}

func (o GetTriggerBuildOutput) Steps() GetTriggerBuildStepArrayOutput {
	return o.ApplyT(func(v GetTriggerBuild) []GetTriggerBuildStep { return v.Steps }).(GetTriggerBuildStepArrayOutput)
}

func (o GetTriggerBuildOutput) Substitutions() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetTriggerBuild) map[string]string { return v.Substitutions }).(pulumi.StringMapOutput)
}

func (o GetTriggerBuildOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTriggerBuild) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

func (o GetTriggerBuildOutput) Timeout() pulumi.StringOutput {
	return o.ApplyT(func(v GetTriggerBuild) string { return v.Timeout }).(pulumi.StringOutput)
}

type GetTriggerBuildArrayOutput struct{ *pulumi.OutputState }

func (GetTriggerBuildArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTriggerBuild)(nil)).Elem()
}

func (o GetTriggerBuildArrayOutput) ToGetTriggerBuildArrayOutput() GetTriggerBuildArrayOutput {
	return o
}

func (o GetTriggerBuildArrayOutput) ToGetTriggerBuildArrayOutputWithContext(ctx context.Context) GetTriggerBuildArrayOutput {
	return o
}

func (o GetTriggerBuildArrayOutput) Index(i pulumi.IntInput) GetTriggerBuildOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTriggerBuild {
		return vs[0].([]GetTriggerBuild)[vs[1].(int)]
	}).(GetTriggerBuildOutput)
}

type GetTriggerBuildArtifact struct {
	Images  []string                        `pulumi:"images"`
	Objects []GetTriggerBuildArtifactObject `pulumi:"objects"`
}

// GetTriggerBuildArtifactInput is an input type that accepts GetTriggerBuildArtifactArgs and GetTriggerBuildArtifactOutput values.
// You can construct a concrete instance of `GetTriggerBuildArtifactInput` via:
//
//	GetTriggerBuildArtifactArgs{...}
type GetTriggerBuildArtifactInput interface {
	pulumi.Input

	ToGetTriggerBuildArtifactOutput() GetTriggerBuildArtifactOutput
	ToGetTriggerBuildArtifactOutputWithContext(context.Context) GetTriggerBuildArtifactOutput
}

type GetTriggerBuildArtifactArgs struct {
	Images  pulumi.StringArrayInput                 `pulumi:"images"`
	Objects GetTriggerBuildArtifactObjectArrayInput `pulumi:"objects"`
}

func (GetTriggerBuildArtifactArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTriggerBuildArtifact)(nil)).Elem()
}

func (i GetTriggerBuildArtifactArgs) ToGetTriggerBuildArtifactOutput() GetTriggerBuildArtifactOutput {
	return i.ToGetTriggerBuildArtifactOutputWithContext(context.Background())
}

func (i GetTriggerBuildArtifactArgs) ToGetTriggerBuildArtifactOutputWithContext(ctx context.Context) GetTriggerBuildArtifactOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTriggerBuildArtifactOutput)
}

// GetTriggerBuildArtifactArrayInput is an input type that accepts GetTriggerBuildArtifactArray and GetTriggerBuildArtifactArrayOutput values.
// You can construct a concrete instance of `GetTriggerBuildArtifactArrayInput` via:
//
//	GetTriggerBuildArtifactArray{ GetTriggerBuildArtifactArgs{...} }
type GetTriggerBuildArtifactArrayInput interface {
	pulumi.Input

	ToGetTriggerBuildArtifactArrayOutput() GetTriggerBuildArtifactArrayOutput
	ToGetTriggerBuildArtifactArrayOutputWithContext(context.Context) GetTriggerBuildArtifactArrayOutput
}

type GetTriggerBuildArtifactArray []GetTriggerBuildArtifactInput

func (GetTriggerBuildArtifactArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTriggerBuildArtifact)(nil)).Elem()
}

func (i GetTriggerBuildArtifactArray) ToGetTriggerBuildArtifactArrayOutput() GetTriggerBuildArtifactArrayOutput {
	return i.ToGetTriggerBuildArtifactArrayOutputWithContext(context.Background())
}

func (i GetTriggerBuildArtifactArray) ToGetTriggerBuildArtifactArrayOutputWithContext(ctx context.Context) GetTriggerBuildArtifactArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTriggerBuildArtifactArrayOutput)
}

type GetTriggerBuildArtifactOutput struct{ *pulumi.OutputState }

func (GetTriggerBuildArtifactOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTriggerBuildArtifact)(nil)).Elem()
}

func (o GetTriggerBuildArtifactOutput) ToGetTriggerBuildArtifactOutput() GetTriggerBuildArtifactOutput {
	return o
}

func (o GetTriggerBuildArtifactOutput) ToGetTriggerBuildArtifactOutputWithContext(ctx context.Context) GetTriggerBuildArtifactOutput {
	return o
}

func (o GetTriggerBuildArtifactOutput) Images() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTriggerBuildArtifact) []string { return v.Images }).(pulumi.StringArrayOutput)
}

func (o GetTriggerBuildArtifactOutput) Objects() GetTriggerBuildArtifactObjectArrayOutput {
	return o.ApplyT(func(v GetTriggerBuildArtifact) []GetTriggerBuildArtifactObject { return v.Objects }).(GetTriggerBuildArtifactObjectArrayOutput)
}

type GetTriggerBuildArtifactArrayOutput struct{ *pulumi.OutputState }

func (GetTriggerBuildArtifactArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTriggerBuildArtifact)(nil)).Elem()
}

func (o GetTriggerBuildArtifactArrayOutput) ToGetTriggerBuildArtifactArrayOutput() GetTriggerBuildArtifactArrayOutput {
	return o
}

func (o GetTriggerBuildArtifactArrayOutput) ToGetTriggerBuildArtifactArrayOutputWithContext(ctx context.Context) GetTriggerBuildArtifactArrayOutput {
	return o
}

func (o GetTriggerBuildArtifactArrayOutput) Index(i pulumi.IntInput) GetTriggerBuildArtifactOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTriggerBuildArtifact {
		return vs[0].([]GetTriggerBuildArtifact)[vs[1].(int)]
	}).(GetTriggerBuildArtifactOutput)
}

type GetTriggerBuildArtifactObject struct {
	// The Cloud Build location for the trigger.
	Location string                                `pulumi:"location"`
	Paths    []string                              `pulumi:"paths"`
	Timings  []GetTriggerBuildArtifactObjectTiming `pulumi:"timings"`
}

// GetTriggerBuildArtifactObjectInput is an input type that accepts GetTriggerBuildArtifactObjectArgs and GetTriggerBuildArtifactObjectOutput values.
// You can construct a concrete instance of `GetTriggerBuildArtifactObjectInput` via:
//
//	GetTriggerBuildArtifactObjectArgs{...}
type GetTriggerBuildArtifactObjectInput interface {
	pulumi.Input

	ToGetTriggerBuildArtifactObjectOutput() GetTriggerBuildArtifactObjectOutput
	ToGetTriggerBuildArtifactObjectOutputWithContext(context.Context) GetTriggerBuildArtifactObjectOutput
}

type GetTriggerBuildArtifactObjectArgs struct {
	// The Cloud Build location for the trigger.
	Location pulumi.StringInput                            `pulumi:"location"`
	Paths    pulumi.StringArrayInput                       `pulumi:"paths"`
	Timings  GetTriggerBuildArtifactObjectTimingArrayInput `pulumi:"timings"`
}

func (GetTriggerBuildArtifactObjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTriggerBuildArtifactObject)(nil)).Elem()
}

func (i GetTriggerBuildArtifactObjectArgs) ToGetTriggerBuildArtifactObjectOutput() GetTriggerBuildArtifactObjectOutput {
	return i.ToGetTriggerBuildArtifactObjectOutputWithContext(context.Background())
}

func (i GetTriggerBuildArtifactObjectArgs) ToGetTriggerBuildArtifactObjectOutputWithContext(ctx context.Context) GetTriggerBuildArtifactObjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTriggerBuildArtifactObjectOutput)
}

// GetTriggerBuildArtifactObjectArrayInput is an input type that accepts GetTriggerBuildArtifactObjectArray and GetTriggerBuildArtifactObjectArrayOutput values.
// You can construct a concrete instance of `GetTriggerBuildArtifactObjectArrayInput` via:
//
//	GetTriggerBuildArtifactObjectArray{ GetTriggerBuildArtifactObjectArgs{...} }
type GetTriggerBuildArtifactObjectArrayInput interface {
	pulumi.Input

	ToGetTriggerBuildArtifactObjectArrayOutput() GetTriggerBuildArtifactObjectArrayOutput
	ToGetTriggerBuildArtifactObjectArrayOutputWithContext(context.Context) GetTriggerBuildArtifactObjectArrayOutput
}

type GetTriggerBuildArtifactObjectArray []GetTriggerBuildArtifactObjectInput

func (GetTriggerBuildArtifactObjectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTriggerBuildArtifactObject)(nil)).Elem()
}

func (i GetTriggerBuildArtifactObjectArray) ToGetTriggerBuildArtifactObjectArrayOutput() GetTriggerBuildArtifactObjectArrayOutput {
	return i.ToGetTriggerBuildArtifactObjectArrayOutputWithContext(context.Background())
}

func (i GetTriggerBuildArtifactObjectArray) ToGetTriggerBuildArtifactObjectArrayOutputWithContext(ctx context.Context) GetTriggerBuildArtifactObjectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTriggerBuildArtifactObjectArrayOutput)
}

type GetTriggerBuildArtifactObjectOutput struct{ *pulumi.OutputState }

func (GetTriggerBuildArtifactObjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTriggerBuildArtifactObject)(nil)).Elem()
}

func (o GetTriggerBuildArtifactObjectOutput) ToGetTriggerBuildArtifactObjectOutput() GetTriggerBuildArtifactObjectOutput {
	return o
}

func (o GetTriggerBuildArtifactObjectOutput) ToGetTriggerBuildArtifactObjectOutputWithContext(ctx context.Context) GetTriggerBuildArtifactObjectOutput {
	return o
}

// The Cloud Build location for the trigger.
func (o GetTriggerBuildArtifactObjectOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetTriggerBuildArtifactObject) string { return v.Location }).(pulumi.StringOutput)
}

func (o GetTriggerBuildArtifactObjectOutput) Paths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTriggerBuildArtifactObject) []string { return v.Paths }).(pulumi.StringArrayOutput)
}

func (o GetTriggerBuildArtifactObjectOutput) Timings() GetTriggerBuildArtifactObjectTimingArrayOutput {
	return o.ApplyT(func(v GetTriggerBuildArtifactObject) []GetTriggerBuildArtifactObjectTiming { return v.Timings }).(GetTriggerBuildArtifactObjectTimingArrayOutput)
}

type GetTriggerBuildArtifactObjectArrayOutput struct{ *pulumi.OutputState }

func (GetTriggerBuildArtifactObjectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTriggerBuildArtifactObject)(nil)).Elem()
}

func (o GetTriggerBuildArtifactObjectArrayOutput) ToGetTriggerBuildArtifactObjectArrayOutput() GetTriggerBuildArtifactObjectArrayOutput {
	return o
}

func (o GetTriggerBuildArtifactObjectArrayOutput) ToGetTriggerBuildArtifactObjectArrayOutputWithContext(ctx context.Context) GetTriggerBuildArtifactObjectArrayOutput {
	return o
}

func (o GetTriggerBuildArtifactObjectArrayOutput) Index(i pulumi.IntInput) GetTriggerBuildArtifactObjectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTriggerBuildArtifactObject {
		return vs[0].([]GetTriggerBuildArtifactObject)[vs[1].(int)]
	}).(GetTriggerBuildArtifactObjectOutput)
}

type GetTriggerBuildArtifactObjectTiming struct {
	EndTime   string `pulumi:"endTime"`
	StartTime string `pulumi:"startTime"`
}

// GetTriggerBuildArtifactObjectTimingInput is an input type that accepts GetTriggerBuildArtifactObjectTimingArgs and GetTriggerBuildArtifactObjectTimingOutput values.
// You can construct a concrete instance of `GetTriggerBuildArtifactObjectTimingInput` via:
//
//	GetTriggerBuildArtifactObjectTimingArgs{...}
type GetTriggerBuildArtifactObjectTimingInput interface {
	pulumi.Input

	ToGetTriggerBuildArtifactObjectTimingOutput() GetTriggerBuildArtifactObjectTimingOutput
	ToGetTriggerBuildArtifactObjectTimingOutputWithContext(context.Context) GetTriggerBuildArtifactObjectTimingOutput
}

type GetTriggerBuildArtifactObjectTimingArgs struct {
	EndTime   pulumi.StringInput `pulumi:"endTime"`
	StartTime pulumi.StringInput `pulumi:"startTime"`
}

func (GetTriggerBuildArtifactObjectTimingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTriggerBuildArtifactObjectTiming)(nil)).Elem()
}

func (i GetTriggerBuildArtifactObjectTimingArgs) ToGetTriggerBuildArtifactObjectTimingOutput() GetTriggerBuildArtifactObjectTimingOutput {
	return i.ToGetTriggerBuildArtifactObjectTimingOutputWithContext(context.Background())
}

func (i GetTriggerBuildArtifactObjectTimingArgs) ToGetTriggerBuildArtifactObjectTimingOutputWithContext(ctx context.Context) GetTriggerBuildArtifactObjectTimingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTriggerBuildArtifactObjectTimingOutput)
}

// GetTriggerBuildArtifactObjectTimingArrayInput is an input type that accepts GetTriggerBuildArtifactObjectTimingArray and GetTriggerBuildArtifactObjectTimingArrayOutput values.
// You can construct a concrete instance of `GetTriggerBuildArtifactObjectTimingArrayInput` via:
//
//	GetTriggerBuildArtifactObjectTimingArray{ GetTriggerBuildArtifactObjectTimingArgs{...} }
type GetTriggerBuildArtifactObjectTimingArrayInput interface {
	pulumi.Input

	ToGetTriggerBuildArtifactObjectTimingArrayOutput() GetTriggerBuildArtifactObjectTimingArrayOutput
	ToGetTriggerBuildArtifactObjectTimingArrayOutputWithContext(context.Context) GetTriggerBuildArtifactObjectTimingArrayOutput
}

type GetTriggerBuildArtifactObjectTimingArray []GetTriggerBuildArtifactObjectTimingInput

func (GetTriggerBuildArtifactObjectTimingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTriggerBuildArtifactObjectTiming)(nil)).Elem()
}

func (i GetTriggerBuildArtifactObjectTimingArray) ToGetTriggerBuildArtifactObjectTimingArrayOutput() GetTriggerBuildArtifactObjectTimingArrayOutput {
	return i.ToGetTriggerBuildArtifactObjectTimingArrayOutputWithContext(context.Background())
}

func (i GetTriggerBuildArtifactObjectTimingArray) ToGetTriggerBuildArtifactObjectTimingArrayOutputWithContext(ctx context.Context) GetTriggerBuildArtifactObjectTimingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTriggerBuildArtifactObjectTimingArrayOutput)
}

type GetTriggerBuildArtifactObjectTimingOutput struct{ *pulumi.OutputState }

func (GetTriggerBuildArtifactObjectTimingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTriggerBuildArtifactObjectTiming)(nil)).Elem()
}

func (o GetTriggerBuildArtifactObjectTimingOutput) ToGetTriggerBuildArtifactObjectTimingOutput() GetTriggerBuildArtifactObjectTimingOutput {
	return o
}

func (o GetTriggerBuildArtifactObjectTimingOutput) ToGetTriggerBuildArtifactObjectTimingOutputWithContext(ctx context.Context) GetTriggerBuildArtifactObjectTimingOutput {
	return o
}

func (o GetTriggerBuildArtifactObjectTimingOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetTriggerBuildArtifactObjectTiming) string { return v.EndTime }).(pulumi.StringOutput)
}

func (o GetTriggerBuildArtifactObjectTimingOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetTriggerBuildArtifactObjectTiming) string { return v.StartTime }).(pulumi.StringOutput)
}

type GetTriggerBuildArtifactObjectTimingArrayOutput struct{ *pulumi.OutputState }

func (GetTriggerBuildArtifactObjectTimingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTriggerBuildArtifactObjectTiming)(nil)).Elem()
}

func (o GetTriggerBuildArtifactObjectTimingArrayOutput) ToGetTriggerBuildArtifactObjectTimingArrayOutput() GetTriggerBuildArtifactObjectTimingArrayOutput {
	return o
}

func (o GetTriggerBuildArtifactObjectTimingArrayOutput) ToGetTriggerBuildArtifactObjectTimingArrayOutputWithContext(ctx context.Context) GetTriggerBuildArtifactObjectTimingArrayOutput {
	return o
}

func (o GetTriggerBuildArtifactObjectTimingArrayOutput) Index(i pulumi.IntInput) GetTriggerBuildArtifactObjectTimingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTriggerBuildArtifactObjectTiming {
		return vs[0].([]GetTriggerBuildArtifactObjectTiming)[vs[1].(int)]
	}).(GetTriggerBuildArtifactObjectTimingOutput)
}

type GetTriggerBuildAvailableSecret struct {
	SecretManagers []GetTriggerBuildAvailableSecretSecretManager `pulumi:"secretManagers"`
}

// GetTriggerBuildAvailableSecretInput is an input type that accepts GetTriggerBuildAvailableSecretArgs and GetTriggerBuildAvailableSecretOutput values.
// You can construct a concrete instance of `GetTriggerBuildAvailableSecretInput` via:
//
//	GetTriggerBuildAvailableSecretArgs{...}
type GetTriggerBuildAvailableSecretInput interface {
	pulumi.Input

	ToGetTriggerBuildAvailableSecretOutput() GetTriggerBuildAvailableSecretOutput
	ToGetTriggerBuildAvailableSecretOutputWithContext(context.Context) GetTriggerBuildAvailableSecretOutput
}

type GetTriggerBuildAvailableSecretArgs struct {
	SecretManagers GetTriggerBuildAvailableSecretSecretManagerArrayInput `pulumi:"secretManagers"`
}

func (GetTriggerBuildAvailableSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTriggerBuildAvailableSecret)(nil)).Elem()
}

func (i GetTriggerBuildAvailableSecretArgs) ToGetTriggerBuildAvailableSecretOutput() GetTriggerBuildAvailableSecretOutput {
	return i.ToGetTriggerBuildAvailableSecretOutputWithContext(context.Background())
}

func (i GetTriggerBuildAvailableSecretArgs) ToGetTriggerBuildAvailableSecretOutputWithContext(ctx context.Context) GetTriggerBuildAvailableSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTriggerBuildAvailableSecretOutput)
}

// GetTriggerBuildAvailableSecretArrayInput is an input type that accepts GetTriggerBuildAvailableSecretArray and GetTriggerBuildAvailableSecretArrayOutput values.
// You can construct a concrete instance of `GetTriggerBuildAvailableSecretArrayInput` via:
//
//	GetTriggerBuildAvailableSecretArray{ GetTriggerBuildAvailableSecretArgs{...} }
type GetTriggerBuildAvailableSecretArrayInput interface {
	pulumi.Input

	ToGetTriggerBuildAvailableSecretArrayOutput() GetTriggerBuildAvailableSecretArrayOutput
	ToGetTriggerBuildAvailableSecretArrayOutputWithContext(context.Context) GetTriggerBuildAvailableSecretArrayOutput
}

type GetTriggerBuildAvailableSecretArray []GetTriggerBuildAvailableSecretInput

func (GetTriggerBuildAvailableSecretArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTriggerBuildAvailableSecret)(nil)).Elem()
}

func (i GetTriggerBuildAvailableSecretArray) ToGetTriggerBuildAvailableSecretArrayOutput() GetTriggerBuildAvailableSecretArrayOutput {
	return i.ToGetTriggerBuildAvailableSecretArrayOutputWithContext(context.Background())
}

func (i GetTriggerBuildAvailableSecretArray) ToGetTriggerBuildAvailableSecretArrayOutputWithContext(ctx context.Context) GetTriggerBuildAvailableSecretArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTriggerBuildAvailableSecretArrayOutput)
}

type GetTriggerBuildAvailableSecretOutput struct{ *pulumi.OutputState }

func (GetTriggerBuildAvailableSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTriggerBuildAvailableSecret)(nil)).Elem()
}

func (o GetTriggerBuildAvailableSecretOutput) ToGetTriggerBuildAvailableSecretOutput() GetTriggerBuildAvailableSecretOutput {
	return o
}

func (o GetTriggerBuildAvailableSecretOutput) ToGetTriggerBuildAvailableSecretOutputWithContext(ctx context.Context) GetTriggerBuildAvailableSecretOutput {
	return o
}

func (o GetTriggerBuildAvailableSecretOutput) SecretManagers() GetTriggerBuildAvailableSecretSecretManagerArrayOutput {
	return o.ApplyT(func(v GetTriggerBuildAvailableSecret) []GetTriggerBuildAvailableSecretSecretManager {
		return v.SecretManagers
	}).(GetTriggerBuildAvailableSecretSecretManagerArrayOutput)
}

type GetTriggerBuildAvailableSecretArrayOutput struct{ *pulumi.OutputState }

func (GetTriggerBuildAvailableSecretArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTriggerBuildAvailableSecret)(nil)).Elem()
}

func (o GetTriggerBuildAvailableSecretArrayOutput) ToGetTriggerBuildAvailableSecretArrayOutput() GetTriggerBuildAvailableSecretArrayOutput {
	return o
}

func (o GetTriggerBuildAvailableSecretArrayOutput) ToGetTriggerBuildAvailableSecretArrayOutputWithContext(ctx context.Context) GetTriggerBuildAvailableSecretArrayOutput {
	return o
}

func (o GetTriggerBuildAvailableSecretArrayOutput) Index(i pulumi.IntInput) GetTriggerBuildAvailableSecretOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTriggerBuildAvailableSecret {
		return vs[0].([]GetTriggerBuildAvailableSecret)[vs[1].(int)]
	}).(GetTriggerBuildAvailableSecretOutput)
}

type GetTriggerBuildAvailableSecretSecretManager struct {
	Env         string `pulumi:"env"`
	VersionName string `pulumi:"versionName"`
}

// GetTriggerBuildAvailableSecretSecretManagerInput is an input type that accepts GetTriggerBuildAvailableSecretSecretManagerArgs and GetTriggerBuildAvailableSecretSecretManagerOutput values.
// You can construct a concrete instance of `GetTriggerBuildAvailableSecretSecretManagerInput` via:
//
//	GetTriggerBuildAvailableSecretSecretManagerArgs{...}
type GetTriggerBuildAvailableSecretSecretManagerInput interface {
	pulumi.Input

	ToGetTriggerBuildAvailableSecretSecretManagerOutput() GetTriggerBuildAvailableSecretSecretManagerOutput
	ToGetTriggerBuildAvailableSecretSecretManagerOutputWithContext(context.Context) GetTriggerBuildAvailableSecretSecretManagerOutput
}

type GetTriggerBuildAvailableSecretSecretManagerArgs struct {
	Env         pulumi.StringInput `pulumi:"env"`
	VersionName pulumi.StringInput `pulumi:"versionName"`
}

func (GetTriggerBuildAvailableSecretSecretManagerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTriggerBuildAvailableSecretSecretManager)(nil)).Elem()
}

func (i GetTriggerBuildAvailableSecretSecretManagerArgs) ToGetTriggerBuildAvailableSecretSecretManagerOutput() GetTriggerBuildAvailableSecretSecretManagerOutput {
	return i.ToGetTriggerBuildAvailableSecretSecretManagerOutputWithContext(context.Background())
}

func (i GetTriggerBuildAvailableSecretSecretManagerArgs) ToGetTriggerBuildAvailableSecretSecretManagerOutputWithContext(ctx context.Context) GetTriggerBuildAvailableSecretSecretManagerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTriggerBuildAvailableSecretSecretManagerOutput)
}

// GetTriggerBuildAvailableSecretSecretManagerArrayInput is an input type that accepts GetTriggerBuildAvailableSecretSecretManagerArray and GetTriggerBuildAvailableSecretSecretManagerArrayOutput values.
// You can construct a concrete instance of `GetTriggerBuildAvailableSecretSecretManagerArrayInput` via:
//
//	GetTriggerBuildAvailableSecretSecretManagerArray{ GetTriggerBuildAvailableSecretSecretManagerArgs{...} }
type GetTriggerBuildAvailableSecretSecretManagerArrayInput interface {
	pulumi.Input

	ToGetTriggerBuildAvailableSecretSecretManagerArrayOutput() GetTriggerBuildAvailableSecretSecretManagerArrayOutput
	ToGetTriggerBuildAvailableSecretSecretManagerArrayOutputWithContext(context.Context) GetTriggerBuildAvailableSecretSecretManagerArrayOutput
}

type GetTriggerBuildAvailableSecretSecretManagerArray []GetTriggerBuildAvailableSecretSecretManagerInput

func (GetTriggerBuildAvailableSecretSecretManagerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTriggerBuildAvailableSecretSecretManager)(nil)).Elem()
}

func (i GetTriggerBuildAvailableSecretSecretManagerArray) ToGetTriggerBuildAvailableSecretSecretManagerArrayOutput() GetTriggerBuildAvailableSecretSecretManagerArrayOutput {
	return i.ToGetTriggerBuildAvailableSecretSecretManagerArrayOutputWithContext(context.Background())
}

func (i GetTriggerBuildAvailableSecretSecretManagerArray) ToGetTriggerBuildAvailableSecretSecretManagerArrayOutputWithContext(ctx context.Context) GetTriggerBuildAvailableSecretSecretManagerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTriggerBuildAvailableSecretSecretManagerArrayOutput)
}

type GetTriggerBuildAvailableSecretSecretManagerOutput struct{ *pulumi.OutputState }

func (GetTriggerBuildAvailableSecretSecretManagerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTriggerBuildAvailableSecretSecretManager)(nil)).Elem()
}

func (o GetTriggerBuildAvailableSecretSecretManagerOutput) ToGetTriggerBuildAvailableSecretSecretManagerOutput() GetTriggerBuildAvailableSecretSecretManagerOutput {
	return o
}

func (o GetTriggerBuildAvailableSecretSecretManagerOutput) ToGetTriggerBuildAvailableSecretSecretManagerOutputWithContext(ctx context.Context) GetTriggerBuildAvailableSecretSecretManagerOutput {
	return o
}

func (o GetTriggerBuildAvailableSecretSecretManagerOutput) Env() pulumi.StringOutput {
	return o.ApplyT(func(v GetTriggerBuildAvailableSecretSecretManager) string { return v.Env }).(pulumi.StringOutput)
}

func (o GetTriggerBuildAvailableSecretSecretManagerOutput) VersionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTriggerBuildAvailableSecretSecretManager) string { return v.VersionName }).(pulumi.StringOutput)
}

type GetTriggerBuildAvailableSecretSecretManagerArrayOutput struct{ *pulumi.OutputState }

func (GetTriggerBuildAvailableSecretSecretManagerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTriggerBuildAvailableSecretSecretManager)(nil)).Elem()
}

func (o GetTriggerBuildAvailableSecretSecretManagerArrayOutput) ToGetTriggerBuildAvailableSecretSecretManagerArrayOutput() GetTriggerBuildAvailableSecretSecretManagerArrayOutput {
	return o
}

func (o GetTriggerBuildAvailableSecretSecretManagerArrayOutput) ToGetTriggerBuildAvailableSecretSecretManagerArrayOutputWithContext(ctx context.Context) GetTriggerBuildAvailableSecretSecretManagerArrayOutput {
	return o
}

func (o GetTriggerBuildAvailableSecretSecretManagerArrayOutput) Index(i pulumi.IntInput) GetTriggerBuildAvailableSecretSecretManagerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTriggerBuildAvailableSecretSecretManager {
		return vs[0].([]GetTriggerBuildAvailableSecretSecretManager)[vs[1].(int)]
	}).(GetTriggerBuildAvailableSecretSecretManagerOutput)
}

type GetTriggerBuildOption struct {
	DiskSizeGb             int                           `pulumi:"diskSizeGb"`
	DynamicSubstitutions   bool                          `pulumi:"dynamicSubstitutions"`
	Envs                   []string                      `pulumi:"envs"`
	LogStreamingOption     string                        `pulumi:"logStreamingOption"`
	Logging                string                        `pulumi:"logging"`
	MachineType            string                        `pulumi:"machineType"`
	RequestedVerifyOption  string                        `pulumi:"requestedVerifyOption"`
	SecretEnvs             []string                      `pulumi:"secretEnvs"`
	SourceProvenanceHashes []string                      `pulumi:"sourceProvenanceHashes"`
	SubstitutionOption     string                        `pulumi:"substitutionOption"`
	Volumes                []GetTriggerBuildOptionVolume `pulumi:"volumes"`
	WorkerPool             string                        `pulumi:"workerPool"`
}

// GetTriggerBuildOptionInput is an input type that accepts GetTriggerBuildOptionArgs and GetTriggerBuildOptionOutput values.
// You can construct a concrete instance of `GetTriggerBuildOptionInput` via:
//
//	GetTriggerBuildOptionArgs{...}
type GetTriggerBuildOptionInput interface {
	pulumi.Input

	ToGetTriggerBuildOptionOutput() GetTriggerBuildOptionOutput
	ToGetTriggerBuildOptionOutputWithContext(context.Context) GetTriggerBuildOptionOutput
}

type GetTriggerBuildOptionArgs struct {
	DiskSizeGb             pulumi.IntInput                       `pulumi:"diskSizeGb"`
	DynamicSubstitutions   pulumi.BoolInput                      `pulumi:"dynamicSubstitutions"`
	Envs                   pulumi.StringArrayInput               `pulumi:"envs"`
	LogStreamingOption     pulumi.StringInput                    `pulumi:"logStreamingOption"`
	Logging                pulumi.StringInput                    `pulumi:"logging"`
	MachineType            pulumi.StringInput                    `pulumi:"machineType"`
	RequestedVerifyOption  pulumi.StringInput                    `pulumi:"requestedVerifyOption"`
	SecretEnvs             pulumi.StringArrayInput               `pulumi:"secretEnvs"`
	SourceProvenanceHashes pulumi.StringArrayInput               `pulumi:"sourceProvenanceHashes"`
	SubstitutionOption     pulumi.StringInput                    `pulumi:"substitutionOption"`
	Volumes                GetTriggerBuildOptionVolumeArrayInput `pulumi:"volumes"`
	WorkerPool             pulumi.StringInput                    `pulumi:"workerPool"`
}

func (GetTriggerBuildOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTriggerBuildOption)(nil)).Elem()
}

func (i GetTriggerBuildOptionArgs) ToGetTriggerBuildOptionOutput() GetTriggerBuildOptionOutput {
	return i.ToGetTriggerBuildOptionOutputWithContext(context.Background())
}

func (i GetTriggerBuildOptionArgs) ToGetTriggerBuildOptionOutputWithContext(ctx context.Context) GetTriggerBuildOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTriggerBuildOptionOutput)
}

// GetTriggerBuildOptionArrayInput is an input type that accepts GetTriggerBuildOptionArray and GetTriggerBuildOptionArrayOutput values.
// You can construct a concrete instance of `GetTriggerBuildOptionArrayInput` via:
//
//	GetTriggerBuildOptionArray{ GetTriggerBuildOptionArgs{...} }
type GetTriggerBuildOptionArrayInput interface {
	pulumi.Input

	ToGetTriggerBuildOptionArrayOutput() GetTriggerBuildOptionArrayOutput
	ToGetTriggerBuildOptionArrayOutputWithContext(context.Context) GetTriggerBuildOptionArrayOutput
}

type GetTriggerBuildOptionArray []GetTriggerBuildOptionInput

func (GetTriggerBuildOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTriggerBuildOption)(nil)).Elem()
}

func (i GetTriggerBuildOptionArray) ToGetTriggerBuildOptionArrayOutput() GetTriggerBuildOptionArrayOutput {
	return i.ToGetTriggerBuildOptionArrayOutputWithContext(context.Background())
}

func (i GetTriggerBuildOptionArray) ToGetTriggerBuildOptionArrayOutputWithContext(ctx context.Context) GetTriggerBuildOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTriggerBuildOptionArrayOutput)
}

type GetTriggerBuildOptionOutput struct{ *pulumi.OutputState }

func (GetTriggerBuildOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTriggerBuildOption)(nil)).Elem()
}

func (o GetTriggerBuildOptionOutput) ToGetTriggerBuildOptionOutput() GetTriggerBuildOptionOutput {
	return o
}

func (o GetTriggerBuildOptionOutput) ToGetTriggerBuildOptionOutputWithContext(ctx context.Context) GetTriggerBuildOptionOutput {
	return o
}

func (o GetTriggerBuildOptionOutput) DiskSizeGb() pulumi.IntOutput {
	return o.ApplyT(func(v GetTriggerBuildOption) int { return v.DiskSizeGb }).(pulumi.IntOutput)
}

func (o GetTriggerBuildOptionOutput) DynamicSubstitutions() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTriggerBuildOption) bool { return v.DynamicSubstitutions }).(pulumi.BoolOutput)
}

func (o GetTriggerBuildOptionOutput) Envs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTriggerBuildOption) []string { return v.Envs }).(pulumi.StringArrayOutput)
}

func (o GetTriggerBuildOptionOutput) LogStreamingOption() pulumi.StringOutput {
	return o.ApplyT(func(v GetTriggerBuildOption) string { return v.LogStreamingOption }).(pulumi.StringOutput)
}

func (o GetTriggerBuildOptionOutput) Logging() pulumi.StringOutput {
	return o.ApplyT(func(v GetTriggerBuildOption) string { return v.Logging }).(pulumi.StringOutput)
}

func (o GetTriggerBuildOptionOutput) MachineType() pulumi.StringOutput {
	return o.ApplyT(func(v GetTriggerBuildOption) string { return v.MachineType }).(pulumi.StringOutput)
}

func (o GetTriggerBuildOptionOutput) RequestedVerifyOption() pulumi.StringOutput {
	return o.ApplyT(func(v GetTriggerBuildOption) string { return v.RequestedVerifyOption }).(pulumi.StringOutput)
}

func (o GetTriggerBuildOptionOutput) SecretEnvs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTriggerBuildOption) []string { return v.SecretEnvs }).(pulumi.StringArrayOutput)
}

func (o GetTriggerBuildOptionOutput) SourceProvenanceHashes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTriggerBuildOption) []string { return v.SourceProvenanceHashes }).(pulumi.StringArrayOutput)
}

func (o GetTriggerBuildOptionOutput) SubstitutionOption() pulumi.StringOutput {
	return o.ApplyT(func(v GetTriggerBuildOption) string { return v.SubstitutionOption }).(pulumi.StringOutput)
}

func (o GetTriggerBuildOptionOutput) Volumes() GetTriggerBuildOptionVolumeArrayOutput {
	return o.ApplyT(func(v GetTriggerBuildOption) []GetTriggerBuildOptionVolume { return v.Volumes }).(GetTriggerBuildOptionVolumeArrayOutput)
}

func (o GetTriggerBuildOptionOutput) WorkerPool() pulumi.StringOutput {
	return o.ApplyT(func(v GetTriggerBuildOption) string { return v.WorkerPool }).(pulumi.StringOutput)
}

type GetTriggerBuildOptionArrayOutput struct{ *pulumi.OutputState }

func (GetTriggerBuildOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTriggerBuildOption)(nil)).Elem()
}

func (o GetTriggerBuildOptionArrayOutput) ToGetTriggerBuildOptionArrayOutput() GetTriggerBuildOptionArrayOutput {
	return o
}

func (o GetTriggerBuildOptionArrayOutput) ToGetTriggerBuildOptionArrayOutputWithContext(ctx context.Context) GetTriggerBuildOptionArrayOutput {
	return o
}

func (o GetTriggerBuildOptionArrayOutput) Index(i pulumi.IntInput) GetTriggerBuildOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTriggerBuildOption {
		return vs[0].([]GetTriggerBuildOption)[vs[1].(int)]
	}).(GetTriggerBuildOptionOutput)
}

type GetTriggerBuildOptionVolume struct {
	Name string `pulumi:"name"`
	Path string `pulumi:"path"`
}

// GetTriggerBuildOptionVolumeInput is an input type that accepts GetTriggerBuildOptionVolumeArgs and GetTriggerBuildOptionVolumeOutput values.
// You can construct a concrete instance of `GetTriggerBuildOptionVolumeInput` via:
//
//	GetTriggerBuildOptionVolumeArgs{...}
type GetTriggerBuildOptionVolumeInput interface {
	pulumi.Input

	ToGetTriggerBuildOptionVolumeOutput() GetTriggerBuildOptionVolumeOutput
	ToGetTriggerBuildOptionVolumeOutputWithContext(context.Context) GetTriggerBuildOptionVolumeOutput
}

type GetTriggerBuildOptionVolumeArgs struct {
	Name pulumi.StringInput `pulumi:"name"`
	Path pulumi.StringInput `pulumi:"path"`
}

func (GetTriggerBuildOptionVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTriggerBuildOptionVolume)(nil)).Elem()
}

func (i GetTriggerBuildOptionVolumeArgs) ToGetTriggerBuildOptionVolumeOutput() GetTriggerBuildOptionVolumeOutput {
	return i.ToGetTriggerBuildOptionVolumeOutputWithContext(context.Background())
}

func (i GetTriggerBuildOptionVolumeArgs) ToGetTriggerBuildOptionVolumeOutputWithContext(ctx context.Context) GetTriggerBuildOptionVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTriggerBuildOptionVolumeOutput)
}

// GetTriggerBuildOptionVolumeArrayInput is an input type that accepts GetTriggerBuildOptionVolumeArray and GetTriggerBuildOptionVolumeArrayOutput values.
// You can construct a concrete instance of `GetTriggerBuildOptionVolumeArrayInput` via:
//
//	GetTriggerBuildOptionVolumeArray{ GetTriggerBuildOptionVolumeArgs{...} }
type GetTriggerBuildOptionVolumeArrayInput interface {
	pulumi.Input

	ToGetTriggerBuildOptionVolumeArrayOutput() GetTriggerBuildOptionVolumeArrayOutput
	ToGetTriggerBuildOptionVolumeArrayOutputWithContext(context.Context) GetTriggerBuildOptionVolumeArrayOutput
}

type GetTriggerBuildOptionVolumeArray []GetTriggerBuildOptionVolumeInput

func (GetTriggerBuildOptionVolumeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTriggerBuildOptionVolume)(nil)).Elem()
}

func (i GetTriggerBuildOptionVolumeArray) ToGetTriggerBuildOptionVolumeArrayOutput() GetTriggerBuildOptionVolumeArrayOutput {
	return i.ToGetTriggerBuildOptionVolumeArrayOutputWithContext(context.Background())
}

func (i GetTriggerBuildOptionVolumeArray) ToGetTriggerBuildOptionVolumeArrayOutputWithContext(ctx context.Context) GetTriggerBuildOptionVolumeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTriggerBuildOptionVolumeArrayOutput)
}

type GetTriggerBuildOptionVolumeOutput struct{ *pulumi.OutputState }

func (GetTriggerBuildOptionVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTriggerBuildOptionVolume)(nil)).Elem()
}

func (o GetTriggerBuildOptionVolumeOutput) ToGetTriggerBuildOptionVolumeOutput() GetTriggerBuildOptionVolumeOutput {
	return o
}

func (o GetTriggerBuildOptionVolumeOutput) ToGetTriggerBuildOptionVolumeOutputWithContext(ctx context.Context) GetTriggerBuildOptionVolumeOutput {
	return o
}

func (o GetTriggerBuildOptionVolumeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetTriggerBuildOptionVolume) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetTriggerBuildOptionVolumeOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v GetTriggerBuildOptionVolume) string { return v.Path }).(pulumi.StringOutput)
}

type GetTriggerBuildOptionVolumeArrayOutput struct{ *pulumi.OutputState }

func (GetTriggerBuildOptionVolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTriggerBuildOptionVolume)(nil)).Elem()
}

func (o GetTriggerBuildOptionVolumeArrayOutput) ToGetTriggerBuildOptionVolumeArrayOutput() GetTriggerBuildOptionVolumeArrayOutput {
	return o
}

func (o GetTriggerBuildOptionVolumeArrayOutput) ToGetTriggerBuildOptionVolumeArrayOutputWithContext(ctx context.Context) GetTriggerBuildOptionVolumeArrayOutput {
	return o
}

func (o GetTriggerBuildOptionVolumeArrayOutput) Index(i pulumi.IntInput) GetTriggerBuildOptionVolumeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTriggerBuildOptionVolume {
		return vs[0].([]GetTriggerBuildOptionVolume)[vs[1].(int)]
	}).(GetTriggerBuildOptionVolumeOutput)
}

type GetTriggerBuildSecret struct {
	KmsKeyName string            `pulumi:"kmsKeyName"`
	SecretEnv  map[string]string `pulumi:"secretEnv"`
}

// GetTriggerBuildSecretInput is an input type that accepts GetTriggerBuildSecretArgs and GetTriggerBuildSecretOutput values.
// You can construct a concrete instance of `GetTriggerBuildSecretInput` via:
//
//	GetTriggerBuildSecretArgs{...}
type GetTriggerBuildSecretInput interface {
	pulumi.Input

	ToGetTriggerBuildSecretOutput() GetTriggerBuildSecretOutput
	ToGetTriggerBuildSecretOutputWithContext(context.Context) GetTriggerBuildSecretOutput
}

type GetTriggerBuildSecretArgs struct {
	KmsKeyName pulumi.StringInput    `pulumi:"kmsKeyName"`
	SecretEnv  pulumi.StringMapInput `pulumi:"secretEnv"`
}

func (GetTriggerBuildSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTriggerBuildSecret)(nil)).Elem()
}

func (i GetTriggerBuildSecretArgs) ToGetTriggerBuildSecretOutput() GetTriggerBuildSecretOutput {
	return i.ToGetTriggerBuildSecretOutputWithContext(context.Background())
}

func (i GetTriggerBuildSecretArgs) ToGetTriggerBuildSecretOutputWithContext(ctx context.Context) GetTriggerBuildSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTriggerBuildSecretOutput)
}

// GetTriggerBuildSecretArrayInput is an input type that accepts GetTriggerBuildSecretArray and GetTriggerBuildSecretArrayOutput values.
// You can construct a concrete instance of `GetTriggerBuildSecretArrayInput` via:
//
//	GetTriggerBuildSecretArray{ GetTriggerBuildSecretArgs{...} }
type GetTriggerBuildSecretArrayInput interface {
	pulumi.Input

	ToGetTriggerBuildSecretArrayOutput() GetTriggerBuildSecretArrayOutput
	ToGetTriggerBuildSecretArrayOutputWithContext(context.Context) GetTriggerBuildSecretArrayOutput
}

type GetTriggerBuildSecretArray []GetTriggerBuildSecretInput

func (GetTriggerBuildSecretArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTriggerBuildSecret)(nil)).Elem()
}

func (i GetTriggerBuildSecretArray) ToGetTriggerBuildSecretArrayOutput() GetTriggerBuildSecretArrayOutput {
	return i.ToGetTriggerBuildSecretArrayOutputWithContext(context.Background())
}

func (i GetTriggerBuildSecretArray) ToGetTriggerBuildSecretArrayOutputWithContext(ctx context.Context) GetTriggerBuildSecretArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTriggerBuildSecretArrayOutput)
}

type GetTriggerBuildSecretOutput struct{ *pulumi.OutputState }

func (GetTriggerBuildSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTriggerBuildSecret)(nil)).Elem()
}

func (o GetTriggerBuildSecretOutput) ToGetTriggerBuildSecretOutput() GetTriggerBuildSecretOutput {
	return o
}

func (o GetTriggerBuildSecretOutput) ToGetTriggerBuildSecretOutputWithContext(ctx context.Context) GetTriggerBuildSecretOutput {
	return o
}

func (o GetTriggerBuildSecretOutput) KmsKeyName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTriggerBuildSecret) string { return v.KmsKeyName }).(pulumi.StringOutput)
}

func (o GetTriggerBuildSecretOutput) SecretEnv() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetTriggerBuildSecret) map[string]string { return v.SecretEnv }).(pulumi.StringMapOutput)
}

type GetTriggerBuildSecretArrayOutput struct{ *pulumi.OutputState }

func (GetTriggerBuildSecretArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTriggerBuildSecret)(nil)).Elem()
}

func (o GetTriggerBuildSecretArrayOutput) ToGetTriggerBuildSecretArrayOutput() GetTriggerBuildSecretArrayOutput {
	return o
}

func (o GetTriggerBuildSecretArrayOutput) ToGetTriggerBuildSecretArrayOutputWithContext(ctx context.Context) GetTriggerBuildSecretArrayOutput {
	return o
}

func (o GetTriggerBuildSecretArrayOutput) Index(i pulumi.IntInput) GetTriggerBuildSecretOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTriggerBuildSecret {
		return vs[0].([]GetTriggerBuildSecret)[vs[1].(int)]
	}).(GetTriggerBuildSecretOutput)
}

type GetTriggerBuildSource struct {
	RepoSources    []GetTriggerBuildSourceRepoSource    `pulumi:"repoSources"`
	StorageSources []GetTriggerBuildSourceStorageSource `pulumi:"storageSources"`
}

// GetTriggerBuildSourceInput is an input type that accepts GetTriggerBuildSourceArgs and GetTriggerBuildSourceOutput values.
// You can construct a concrete instance of `GetTriggerBuildSourceInput` via:
//
//	GetTriggerBuildSourceArgs{...}
type GetTriggerBuildSourceInput interface {
	pulumi.Input

	ToGetTriggerBuildSourceOutput() GetTriggerBuildSourceOutput
	ToGetTriggerBuildSourceOutputWithContext(context.Context) GetTriggerBuildSourceOutput
}

type GetTriggerBuildSourceArgs struct {
	RepoSources    GetTriggerBuildSourceRepoSourceArrayInput    `pulumi:"repoSources"`
	StorageSources GetTriggerBuildSourceStorageSourceArrayInput `pulumi:"storageSources"`
}

func (GetTriggerBuildSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTriggerBuildSource)(nil)).Elem()
}

func (i GetTriggerBuildSourceArgs) ToGetTriggerBuildSourceOutput() GetTriggerBuildSourceOutput {
	return i.ToGetTriggerBuildSourceOutputWithContext(context.Background())
}

func (i GetTriggerBuildSourceArgs) ToGetTriggerBuildSourceOutputWithContext(ctx context.Context) GetTriggerBuildSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTriggerBuildSourceOutput)
}

// GetTriggerBuildSourceArrayInput is an input type that accepts GetTriggerBuildSourceArray and GetTriggerBuildSourceArrayOutput values.
// You can construct a concrete instance of `GetTriggerBuildSourceArrayInput` via:
//
//	GetTriggerBuildSourceArray{ GetTriggerBuildSourceArgs{...} }
type GetTriggerBuildSourceArrayInput interface {
	pulumi.Input

	ToGetTriggerBuildSourceArrayOutput() GetTriggerBuildSourceArrayOutput
	ToGetTriggerBuildSourceArrayOutputWithContext(context.Context) GetTriggerBuildSourceArrayOutput
}

type GetTriggerBuildSourceArray []GetTriggerBuildSourceInput

func (GetTriggerBuildSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTriggerBuildSource)(nil)).Elem()
}

func (i GetTriggerBuildSourceArray) ToGetTriggerBuildSourceArrayOutput() GetTriggerBuildSourceArrayOutput {
	return i.ToGetTriggerBuildSourceArrayOutputWithContext(context.Background())
}

func (i GetTriggerBuildSourceArray) ToGetTriggerBuildSourceArrayOutputWithContext(ctx context.Context) GetTriggerBuildSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTriggerBuildSourceArrayOutput)
}

type GetTriggerBuildSourceOutput struct{ *pulumi.OutputState }

func (GetTriggerBuildSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTriggerBuildSource)(nil)).Elem()
}

func (o GetTriggerBuildSourceOutput) ToGetTriggerBuildSourceOutput() GetTriggerBuildSourceOutput {
	return o
}

func (o GetTriggerBuildSourceOutput) ToGetTriggerBuildSourceOutputWithContext(ctx context.Context) GetTriggerBuildSourceOutput {
	return o
}

func (o GetTriggerBuildSourceOutput) RepoSources() GetTriggerBuildSourceRepoSourceArrayOutput {
	return o.ApplyT(func(v GetTriggerBuildSource) []GetTriggerBuildSourceRepoSource { return v.RepoSources }).(GetTriggerBuildSourceRepoSourceArrayOutput)
}

func (o GetTriggerBuildSourceOutput) StorageSources() GetTriggerBuildSourceStorageSourceArrayOutput {
	return o.ApplyT(func(v GetTriggerBuildSource) []GetTriggerBuildSourceStorageSource { return v.StorageSources }).(GetTriggerBuildSourceStorageSourceArrayOutput)
}

type GetTriggerBuildSourceArrayOutput struct{ *pulumi.OutputState }

func (GetTriggerBuildSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTriggerBuildSource)(nil)).Elem()
}

func (o GetTriggerBuildSourceArrayOutput) ToGetTriggerBuildSourceArrayOutput() GetTriggerBuildSourceArrayOutput {
	return o
}

func (o GetTriggerBuildSourceArrayOutput) ToGetTriggerBuildSourceArrayOutputWithContext(ctx context.Context) GetTriggerBuildSourceArrayOutput {
	return o
}

func (o GetTriggerBuildSourceArrayOutput) Index(i pulumi.IntInput) GetTriggerBuildSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTriggerBuildSource {
		return vs[0].([]GetTriggerBuildSource)[vs[1].(int)]
	}).(GetTriggerBuildSourceOutput)
}

type GetTriggerBuildSourceRepoSource struct {
	BranchName    string            `pulumi:"branchName"`
	CommitSha     string            `pulumi:"commitSha"`
	Dir           string            `pulumi:"dir"`
	InvertRegex   bool              `pulumi:"invertRegex"`
	ProjectId     string            `pulumi:"projectId"`
	RepoName      string            `pulumi:"repoName"`
	Substitutions map[string]string `pulumi:"substitutions"`
	TagName       string            `pulumi:"tagName"`
}

// GetTriggerBuildSourceRepoSourceInput is an input type that accepts GetTriggerBuildSourceRepoSourceArgs and GetTriggerBuildSourceRepoSourceOutput values.
// You can construct a concrete instance of `GetTriggerBuildSourceRepoSourceInput` via:
//
//	GetTriggerBuildSourceRepoSourceArgs{...}
type GetTriggerBuildSourceRepoSourceInput interface {
	pulumi.Input

	ToGetTriggerBuildSourceRepoSourceOutput() GetTriggerBuildSourceRepoSourceOutput
	ToGetTriggerBuildSourceRepoSourceOutputWithContext(context.Context) GetTriggerBuildSourceRepoSourceOutput
}

type GetTriggerBuildSourceRepoSourceArgs struct {
	BranchName    pulumi.StringInput    `pulumi:"branchName"`
	CommitSha     pulumi.StringInput    `pulumi:"commitSha"`
	Dir           pulumi.StringInput    `pulumi:"dir"`
	InvertRegex   pulumi.BoolInput      `pulumi:"invertRegex"`
	ProjectId     pulumi.StringInput    `pulumi:"projectId"`
	RepoName      pulumi.StringInput    `pulumi:"repoName"`
	Substitutions pulumi.StringMapInput `pulumi:"substitutions"`
	TagName       pulumi.StringInput    `pulumi:"tagName"`
}

func (GetTriggerBuildSourceRepoSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTriggerBuildSourceRepoSource)(nil)).Elem()
}

func (i GetTriggerBuildSourceRepoSourceArgs) ToGetTriggerBuildSourceRepoSourceOutput() GetTriggerBuildSourceRepoSourceOutput {
	return i.ToGetTriggerBuildSourceRepoSourceOutputWithContext(context.Background())
}

func (i GetTriggerBuildSourceRepoSourceArgs) ToGetTriggerBuildSourceRepoSourceOutputWithContext(ctx context.Context) GetTriggerBuildSourceRepoSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTriggerBuildSourceRepoSourceOutput)
}

// GetTriggerBuildSourceRepoSourceArrayInput is an input type that accepts GetTriggerBuildSourceRepoSourceArray and GetTriggerBuildSourceRepoSourceArrayOutput values.
// You can construct a concrete instance of `GetTriggerBuildSourceRepoSourceArrayInput` via:
//
//	GetTriggerBuildSourceRepoSourceArray{ GetTriggerBuildSourceRepoSourceArgs{...} }
type GetTriggerBuildSourceRepoSourceArrayInput interface {
	pulumi.Input

	ToGetTriggerBuildSourceRepoSourceArrayOutput() GetTriggerBuildSourceRepoSourceArrayOutput
	ToGetTriggerBuildSourceRepoSourceArrayOutputWithContext(context.Context) GetTriggerBuildSourceRepoSourceArrayOutput
}

type GetTriggerBuildSourceRepoSourceArray []GetTriggerBuildSourceRepoSourceInput

func (GetTriggerBuildSourceRepoSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTriggerBuildSourceRepoSource)(nil)).Elem()
}

func (i GetTriggerBuildSourceRepoSourceArray) ToGetTriggerBuildSourceRepoSourceArrayOutput() GetTriggerBuildSourceRepoSourceArrayOutput {
	return i.ToGetTriggerBuildSourceRepoSourceArrayOutputWithContext(context.Background())
}

func (i GetTriggerBuildSourceRepoSourceArray) ToGetTriggerBuildSourceRepoSourceArrayOutputWithContext(ctx context.Context) GetTriggerBuildSourceRepoSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTriggerBuildSourceRepoSourceArrayOutput)
}

type GetTriggerBuildSourceRepoSourceOutput struct{ *pulumi.OutputState }

func (GetTriggerBuildSourceRepoSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTriggerBuildSourceRepoSource)(nil)).Elem()
}

func (o GetTriggerBuildSourceRepoSourceOutput) ToGetTriggerBuildSourceRepoSourceOutput() GetTriggerBuildSourceRepoSourceOutput {
	return o
}

func (o GetTriggerBuildSourceRepoSourceOutput) ToGetTriggerBuildSourceRepoSourceOutputWithContext(ctx context.Context) GetTriggerBuildSourceRepoSourceOutput {
	return o
}

func (o GetTriggerBuildSourceRepoSourceOutput) BranchName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTriggerBuildSourceRepoSource) string { return v.BranchName }).(pulumi.StringOutput)
}

func (o GetTriggerBuildSourceRepoSourceOutput) CommitSha() pulumi.StringOutput {
	return o.ApplyT(func(v GetTriggerBuildSourceRepoSource) string { return v.CommitSha }).(pulumi.StringOutput)
}

func (o GetTriggerBuildSourceRepoSourceOutput) Dir() pulumi.StringOutput {
	return o.ApplyT(func(v GetTriggerBuildSourceRepoSource) string { return v.Dir }).(pulumi.StringOutput)
}

func (o GetTriggerBuildSourceRepoSourceOutput) InvertRegex() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTriggerBuildSourceRepoSource) bool { return v.InvertRegex }).(pulumi.BoolOutput)
}

func (o GetTriggerBuildSourceRepoSourceOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTriggerBuildSourceRepoSource) string { return v.ProjectId }).(pulumi.StringOutput)
}

func (o GetTriggerBuildSourceRepoSourceOutput) RepoName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTriggerBuildSourceRepoSource) string { return v.RepoName }).(pulumi.StringOutput)
}

func (o GetTriggerBuildSourceRepoSourceOutput) Substitutions() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetTriggerBuildSourceRepoSource) map[string]string { return v.Substitutions }).(pulumi.StringMapOutput)
}

func (o GetTriggerBuildSourceRepoSourceOutput) TagName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTriggerBuildSourceRepoSource) string { return v.TagName }).(pulumi.StringOutput)
}

type GetTriggerBuildSourceRepoSourceArrayOutput struct{ *pulumi.OutputState }

func (GetTriggerBuildSourceRepoSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTriggerBuildSourceRepoSource)(nil)).Elem()
}

func (o GetTriggerBuildSourceRepoSourceArrayOutput) ToGetTriggerBuildSourceRepoSourceArrayOutput() GetTriggerBuildSourceRepoSourceArrayOutput {
	return o
}

func (o GetTriggerBuildSourceRepoSourceArrayOutput) ToGetTriggerBuildSourceRepoSourceArrayOutputWithContext(ctx context.Context) GetTriggerBuildSourceRepoSourceArrayOutput {
	return o
}

func (o GetTriggerBuildSourceRepoSourceArrayOutput) Index(i pulumi.IntInput) GetTriggerBuildSourceRepoSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTriggerBuildSourceRepoSource {
		return vs[0].([]GetTriggerBuildSourceRepoSource)[vs[1].(int)]
	}).(GetTriggerBuildSourceRepoSourceOutput)
}

type GetTriggerBuildSourceStorageSource struct {
	Bucket     string `pulumi:"bucket"`
	Generation string `pulumi:"generation"`
	Object     string `pulumi:"object"`
}

// GetTriggerBuildSourceStorageSourceInput is an input type that accepts GetTriggerBuildSourceStorageSourceArgs and GetTriggerBuildSourceStorageSourceOutput values.
// You can construct a concrete instance of `GetTriggerBuildSourceStorageSourceInput` via:
//
//	GetTriggerBuildSourceStorageSourceArgs{...}
type GetTriggerBuildSourceStorageSourceInput interface {
	pulumi.Input

	ToGetTriggerBuildSourceStorageSourceOutput() GetTriggerBuildSourceStorageSourceOutput
	ToGetTriggerBuildSourceStorageSourceOutputWithContext(context.Context) GetTriggerBuildSourceStorageSourceOutput
}

type GetTriggerBuildSourceStorageSourceArgs struct {
	Bucket     pulumi.StringInput `pulumi:"bucket"`
	Generation pulumi.StringInput `pulumi:"generation"`
	Object     pulumi.StringInput `pulumi:"object"`
}

func (GetTriggerBuildSourceStorageSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTriggerBuildSourceStorageSource)(nil)).Elem()
}

func (i GetTriggerBuildSourceStorageSourceArgs) ToGetTriggerBuildSourceStorageSourceOutput() GetTriggerBuildSourceStorageSourceOutput {
	return i.ToGetTriggerBuildSourceStorageSourceOutputWithContext(context.Background())
}

func (i GetTriggerBuildSourceStorageSourceArgs) ToGetTriggerBuildSourceStorageSourceOutputWithContext(ctx context.Context) GetTriggerBuildSourceStorageSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTriggerBuildSourceStorageSourceOutput)
}

// GetTriggerBuildSourceStorageSourceArrayInput is an input type that accepts GetTriggerBuildSourceStorageSourceArray and GetTriggerBuildSourceStorageSourceArrayOutput values.
// You can construct a concrete instance of `GetTriggerBuildSourceStorageSourceArrayInput` via:
//
//	GetTriggerBuildSourceStorageSourceArray{ GetTriggerBuildSourceStorageSourceArgs{...} }
type GetTriggerBuildSourceStorageSourceArrayInput interface {
	pulumi.Input

	ToGetTriggerBuildSourceStorageSourceArrayOutput() GetTriggerBuildSourceStorageSourceArrayOutput
	ToGetTriggerBuildSourceStorageSourceArrayOutputWithContext(context.Context) GetTriggerBuildSourceStorageSourceArrayOutput
}

type GetTriggerBuildSourceStorageSourceArray []GetTriggerBuildSourceStorageSourceInput

func (GetTriggerBuildSourceStorageSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTriggerBuildSourceStorageSource)(nil)).Elem()
}

func (i GetTriggerBuildSourceStorageSourceArray) ToGetTriggerBuildSourceStorageSourceArrayOutput() GetTriggerBuildSourceStorageSourceArrayOutput {
	return i.ToGetTriggerBuildSourceStorageSourceArrayOutputWithContext(context.Background())
}

func (i GetTriggerBuildSourceStorageSourceArray) ToGetTriggerBuildSourceStorageSourceArrayOutputWithContext(ctx context.Context) GetTriggerBuildSourceStorageSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTriggerBuildSourceStorageSourceArrayOutput)
}

type GetTriggerBuildSourceStorageSourceOutput struct{ *pulumi.OutputState }

func (GetTriggerBuildSourceStorageSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTriggerBuildSourceStorageSource)(nil)).Elem()
}

func (o GetTriggerBuildSourceStorageSourceOutput) ToGetTriggerBuildSourceStorageSourceOutput() GetTriggerBuildSourceStorageSourceOutput {
	return o
}

func (o GetTriggerBuildSourceStorageSourceOutput) ToGetTriggerBuildSourceStorageSourceOutputWithContext(ctx context.Context) GetTriggerBuildSourceStorageSourceOutput {
	return o
}

func (o GetTriggerBuildSourceStorageSourceOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v GetTriggerBuildSourceStorageSource) string { return v.Bucket }).(pulumi.StringOutput)
}

func (o GetTriggerBuildSourceStorageSourceOutput) Generation() pulumi.StringOutput {
	return o.ApplyT(func(v GetTriggerBuildSourceStorageSource) string { return v.Generation }).(pulumi.StringOutput)
}

func (o GetTriggerBuildSourceStorageSourceOutput) Object() pulumi.StringOutput {
	return o.ApplyT(func(v GetTriggerBuildSourceStorageSource) string { return v.Object }).(pulumi.StringOutput)
}

type GetTriggerBuildSourceStorageSourceArrayOutput struct{ *pulumi.OutputState }

func (GetTriggerBuildSourceStorageSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTriggerBuildSourceStorageSource)(nil)).Elem()
}

func (o GetTriggerBuildSourceStorageSourceArrayOutput) ToGetTriggerBuildSourceStorageSourceArrayOutput() GetTriggerBuildSourceStorageSourceArrayOutput {
	return o
}

func (o GetTriggerBuildSourceStorageSourceArrayOutput) ToGetTriggerBuildSourceStorageSourceArrayOutputWithContext(ctx context.Context) GetTriggerBuildSourceStorageSourceArrayOutput {
	return o
}

func (o GetTriggerBuildSourceStorageSourceArrayOutput) Index(i pulumi.IntInput) GetTriggerBuildSourceStorageSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTriggerBuildSourceStorageSource {
		return vs[0].([]GetTriggerBuildSourceStorageSource)[vs[1].(int)]
	}).(GetTriggerBuildSourceStorageSourceOutput)
}

type GetTriggerBuildStep struct {
	Args       []string                    `pulumi:"args"`
	Dir        string                      `pulumi:"dir"`
	Entrypoint string                      `pulumi:"entrypoint"`
	Envs       []string                    `pulumi:"envs"`
	Id         string                      `pulumi:"id"`
	Name       string                      `pulumi:"name"`
	Script     string                      `pulumi:"script"`
	SecretEnvs []string                    `pulumi:"secretEnvs"`
	Timeout    string                      `pulumi:"timeout"`
	Timing     string                      `pulumi:"timing"`
	Volumes    []GetTriggerBuildStepVolume `pulumi:"volumes"`
	WaitFors   []string                    `pulumi:"waitFors"`
}

// GetTriggerBuildStepInput is an input type that accepts GetTriggerBuildStepArgs and GetTriggerBuildStepOutput values.
// You can construct a concrete instance of `GetTriggerBuildStepInput` via:
//
//	GetTriggerBuildStepArgs{...}
type GetTriggerBuildStepInput interface {
	pulumi.Input

	ToGetTriggerBuildStepOutput() GetTriggerBuildStepOutput
	ToGetTriggerBuildStepOutputWithContext(context.Context) GetTriggerBuildStepOutput
}

type GetTriggerBuildStepArgs struct {
	Args       pulumi.StringArrayInput             `pulumi:"args"`
	Dir        pulumi.StringInput                  `pulumi:"dir"`
	Entrypoint pulumi.StringInput                  `pulumi:"entrypoint"`
	Envs       pulumi.StringArrayInput             `pulumi:"envs"`
	Id         pulumi.StringInput                  `pulumi:"id"`
	Name       pulumi.StringInput                  `pulumi:"name"`
	Script     pulumi.StringInput                  `pulumi:"script"`
	SecretEnvs pulumi.StringArrayInput             `pulumi:"secretEnvs"`
	Timeout    pulumi.StringInput                  `pulumi:"timeout"`
	Timing     pulumi.StringInput                  `pulumi:"timing"`
	Volumes    GetTriggerBuildStepVolumeArrayInput `pulumi:"volumes"`
	WaitFors   pulumi.StringArrayInput             `pulumi:"waitFors"`
}

func (GetTriggerBuildStepArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTriggerBuildStep)(nil)).Elem()
}

func (i GetTriggerBuildStepArgs) ToGetTriggerBuildStepOutput() GetTriggerBuildStepOutput {
	return i.ToGetTriggerBuildStepOutputWithContext(context.Background())
}

func (i GetTriggerBuildStepArgs) ToGetTriggerBuildStepOutputWithContext(ctx context.Context) GetTriggerBuildStepOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTriggerBuildStepOutput)
}

// GetTriggerBuildStepArrayInput is an input type that accepts GetTriggerBuildStepArray and GetTriggerBuildStepArrayOutput values.
// You can construct a concrete instance of `GetTriggerBuildStepArrayInput` via:
//
//	GetTriggerBuildStepArray{ GetTriggerBuildStepArgs{...} }
type GetTriggerBuildStepArrayInput interface {
	pulumi.Input

	ToGetTriggerBuildStepArrayOutput() GetTriggerBuildStepArrayOutput
	ToGetTriggerBuildStepArrayOutputWithContext(context.Context) GetTriggerBuildStepArrayOutput
}

type GetTriggerBuildStepArray []GetTriggerBuildStepInput

func (GetTriggerBuildStepArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTriggerBuildStep)(nil)).Elem()
}

func (i GetTriggerBuildStepArray) ToGetTriggerBuildStepArrayOutput() GetTriggerBuildStepArrayOutput {
	return i.ToGetTriggerBuildStepArrayOutputWithContext(context.Background())
}

func (i GetTriggerBuildStepArray) ToGetTriggerBuildStepArrayOutputWithContext(ctx context.Context) GetTriggerBuildStepArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTriggerBuildStepArrayOutput)
}

type GetTriggerBuildStepOutput struct{ *pulumi.OutputState }

func (GetTriggerBuildStepOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTriggerBuildStep)(nil)).Elem()
}

func (o GetTriggerBuildStepOutput) ToGetTriggerBuildStepOutput() GetTriggerBuildStepOutput {
	return o
}

func (o GetTriggerBuildStepOutput) ToGetTriggerBuildStepOutputWithContext(ctx context.Context) GetTriggerBuildStepOutput {
	return o
}

func (o GetTriggerBuildStepOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTriggerBuildStep) []string { return v.Args }).(pulumi.StringArrayOutput)
}

func (o GetTriggerBuildStepOutput) Dir() pulumi.StringOutput {
	return o.ApplyT(func(v GetTriggerBuildStep) string { return v.Dir }).(pulumi.StringOutput)
}

func (o GetTriggerBuildStepOutput) Entrypoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetTriggerBuildStep) string { return v.Entrypoint }).(pulumi.StringOutput)
}

func (o GetTriggerBuildStepOutput) Envs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTriggerBuildStep) []string { return v.Envs }).(pulumi.StringArrayOutput)
}

func (o GetTriggerBuildStepOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTriggerBuildStep) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetTriggerBuildStepOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetTriggerBuildStep) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetTriggerBuildStepOutput) Script() pulumi.StringOutput {
	return o.ApplyT(func(v GetTriggerBuildStep) string { return v.Script }).(pulumi.StringOutput)
}

func (o GetTriggerBuildStepOutput) SecretEnvs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTriggerBuildStep) []string { return v.SecretEnvs }).(pulumi.StringArrayOutput)
}

func (o GetTriggerBuildStepOutput) Timeout() pulumi.StringOutput {
	return o.ApplyT(func(v GetTriggerBuildStep) string { return v.Timeout }).(pulumi.StringOutput)
}

func (o GetTriggerBuildStepOutput) Timing() pulumi.StringOutput {
	return o.ApplyT(func(v GetTriggerBuildStep) string { return v.Timing }).(pulumi.StringOutput)
}

func (o GetTriggerBuildStepOutput) Volumes() GetTriggerBuildStepVolumeArrayOutput {
	return o.ApplyT(func(v GetTriggerBuildStep) []GetTriggerBuildStepVolume { return v.Volumes }).(GetTriggerBuildStepVolumeArrayOutput)
}

func (o GetTriggerBuildStepOutput) WaitFors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTriggerBuildStep) []string { return v.WaitFors }).(pulumi.StringArrayOutput)
}

type GetTriggerBuildStepArrayOutput struct{ *pulumi.OutputState }

func (GetTriggerBuildStepArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTriggerBuildStep)(nil)).Elem()
}

func (o GetTriggerBuildStepArrayOutput) ToGetTriggerBuildStepArrayOutput() GetTriggerBuildStepArrayOutput {
	return o
}

func (o GetTriggerBuildStepArrayOutput) ToGetTriggerBuildStepArrayOutputWithContext(ctx context.Context) GetTriggerBuildStepArrayOutput {
	return o
}

func (o GetTriggerBuildStepArrayOutput) Index(i pulumi.IntInput) GetTriggerBuildStepOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTriggerBuildStep {
		return vs[0].([]GetTriggerBuildStep)[vs[1].(int)]
	}).(GetTriggerBuildStepOutput)
}

type GetTriggerBuildStepVolume struct {
	Name string `pulumi:"name"`
	Path string `pulumi:"path"`
}

// GetTriggerBuildStepVolumeInput is an input type that accepts GetTriggerBuildStepVolumeArgs and GetTriggerBuildStepVolumeOutput values.
// You can construct a concrete instance of `GetTriggerBuildStepVolumeInput` via:
//
//	GetTriggerBuildStepVolumeArgs{...}
type GetTriggerBuildStepVolumeInput interface {
	pulumi.Input

	ToGetTriggerBuildStepVolumeOutput() GetTriggerBuildStepVolumeOutput
	ToGetTriggerBuildStepVolumeOutputWithContext(context.Context) GetTriggerBuildStepVolumeOutput
}

type GetTriggerBuildStepVolumeArgs struct {
	Name pulumi.StringInput `pulumi:"name"`
	Path pulumi.StringInput `pulumi:"path"`
}

func (GetTriggerBuildStepVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTriggerBuildStepVolume)(nil)).Elem()
}

func (i GetTriggerBuildStepVolumeArgs) ToGetTriggerBuildStepVolumeOutput() GetTriggerBuildStepVolumeOutput {
	return i.ToGetTriggerBuildStepVolumeOutputWithContext(context.Background())
}

func (i GetTriggerBuildStepVolumeArgs) ToGetTriggerBuildStepVolumeOutputWithContext(ctx context.Context) GetTriggerBuildStepVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTriggerBuildStepVolumeOutput)
}

// GetTriggerBuildStepVolumeArrayInput is an input type that accepts GetTriggerBuildStepVolumeArray and GetTriggerBuildStepVolumeArrayOutput values.
// You can construct a concrete instance of `GetTriggerBuildStepVolumeArrayInput` via:
//
//	GetTriggerBuildStepVolumeArray{ GetTriggerBuildStepVolumeArgs{...} }
type GetTriggerBuildStepVolumeArrayInput interface {
	pulumi.Input

	ToGetTriggerBuildStepVolumeArrayOutput() GetTriggerBuildStepVolumeArrayOutput
	ToGetTriggerBuildStepVolumeArrayOutputWithContext(context.Context) GetTriggerBuildStepVolumeArrayOutput
}

type GetTriggerBuildStepVolumeArray []GetTriggerBuildStepVolumeInput

func (GetTriggerBuildStepVolumeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTriggerBuildStepVolume)(nil)).Elem()
}

func (i GetTriggerBuildStepVolumeArray) ToGetTriggerBuildStepVolumeArrayOutput() GetTriggerBuildStepVolumeArrayOutput {
	return i.ToGetTriggerBuildStepVolumeArrayOutputWithContext(context.Background())
}

func (i GetTriggerBuildStepVolumeArray) ToGetTriggerBuildStepVolumeArrayOutputWithContext(ctx context.Context) GetTriggerBuildStepVolumeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTriggerBuildStepVolumeArrayOutput)
}

type GetTriggerBuildStepVolumeOutput struct{ *pulumi.OutputState }

func (GetTriggerBuildStepVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTriggerBuildStepVolume)(nil)).Elem()
}

func (o GetTriggerBuildStepVolumeOutput) ToGetTriggerBuildStepVolumeOutput() GetTriggerBuildStepVolumeOutput {
	return o
}

func (o GetTriggerBuildStepVolumeOutput) ToGetTriggerBuildStepVolumeOutputWithContext(ctx context.Context) GetTriggerBuildStepVolumeOutput {
	return o
}

func (o GetTriggerBuildStepVolumeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetTriggerBuildStepVolume) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetTriggerBuildStepVolumeOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v GetTriggerBuildStepVolume) string { return v.Path }).(pulumi.StringOutput)
}

type GetTriggerBuildStepVolumeArrayOutput struct{ *pulumi.OutputState }

func (GetTriggerBuildStepVolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTriggerBuildStepVolume)(nil)).Elem()
}

func (o GetTriggerBuildStepVolumeArrayOutput) ToGetTriggerBuildStepVolumeArrayOutput() GetTriggerBuildStepVolumeArrayOutput {
	return o
}

func (o GetTriggerBuildStepVolumeArrayOutput) ToGetTriggerBuildStepVolumeArrayOutputWithContext(ctx context.Context) GetTriggerBuildStepVolumeArrayOutput {
	return o
}

func (o GetTriggerBuildStepVolumeArrayOutput) Index(i pulumi.IntInput) GetTriggerBuildStepVolumeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTriggerBuildStepVolume {
		return vs[0].([]GetTriggerBuildStepVolume)[vs[1].(int)]
	}).(GetTriggerBuildStepVolumeOutput)
}

type GetTriggerGitFileSource struct {
	Path     string `pulumi:"path"`
	RepoType string `pulumi:"repoType"`
	Revision string `pulumi:"revision"`
	Uri      string `pulumi:"uri"`
}

// GetTriggerGitFileSourceInput is an input type that accepts GetTriggerGitFileSourceArgs and GetTriggerGitFileSourceOutput values.
// You can construct a concrete instance of `GetTriggerGitFileSourceInput` via:
//
//	GetTriggerGitFileSourceArgs{...}
type GetTriggerGitFileSourceInput interface {
	pulumi.Input

	ToGetTriggerGitFileSourceOutput() GetTriggerGitFileSourceOutput
	ToGetTriggerGitFileSourceOutputWithContext(context.Context) GetTriggerGitFileSourceOutput
}

type GetTriggerGitFileSourceArgs struct {
	Path     pulumi.StringInput `pulumi:"path"`
	RepoType pulumi.StringInput `pulumi:"repoType"`
	Revision pulumi.StringInput `pulumi:"revision"`
	Uri      pulumi.StringInput `pulumi:"uri"`
}

func (GetTriggerGitFileSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTriggerGitFileSource)(nil)).Elem()
}

func (i GetTriggerGitFileSourceArgs) ToGetTriggerGitFileSourceOutput() GetTriggerGitFileSourceOutput {
	return i.ToGetTriggerGitFileSourceOutputWithContext(context.Background())
}

func (i GetTriggerGitFileSourceArgs) ToGetTriggerGitFileSourceOutputWithContext(ctx context.Context) GetTriggerGitFileSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTriggerGitFileSourceOutput)
}

// GetTriggerGitFileSourceArrayInput is an input type that accepts GetTriggerGitFileSourceArray and GetTriggerGitFileSourceArrayOutput values.
// You can construct a concrete instance of `GetTriggerGitFileSourceArrayInput` via:
//
//	GetTriggerGitFileSourceArray{ GetTriggerGitFileSourceArgs{...} }
type GetTriggerGitFileSourceArrayInput interface {
	pulumi.Input

	ToGetTriggerGitFileSourceArrayOutput() GetTriggerGitFileSourceArrayOutput
	ToGetTriggerGitFileSourceArrayOutputWithContext(context.Context) GetTriggerGitFileSourceArrayOutput
}

type GetTriggerGitFileSourceArray []GetTriggerGitFileSourceInput

func (GetTriggerGitFileSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTriggerGitFileSource)(nil)).Elem()
}

func (i GetTriggerGitFileSourceArray) ToGetTriggerGitFileSourceArrayOutput() GetTriggerGitFileSourceArrayOutput {
	return i.ToGetTriggerGitFileSourceArrayOutputWithContext(context.Background())
}

func (i GetTriggerGitFileSourceArray) ToGetTriggerGitFileSourceArrayOutputWithContext(ctx context.Context) GetTriggerGitFileSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTriggerGitFileSourceArrayOutput)
}

type GetTriggerGitFileSourceOutput struct{ *pulumi.OutputState }

func (GetTriggerGitFileSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTriggerGitFileSource)(nil)).Elem()
}

func (o GetTriggerGitFileSourceOutput) ToGetTriggerGitFileSourceOutput() GetTriggerGitFileSourceOutput {
	return o
}

func (o GetTriggerGitFileSourceOutput) ToGetTriggerGitFileSourceOutputWithContext(ctx context.Context) GetTriggerGitFileSourceOutput {
	return o
}

func (o GetTriggerGitFileSourceOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v GetTriggerGitFileSource) string { return v.Path }).(pulumi.StringOutput)
}

func (o GetTriggerGitFileSourceOutput) RepoType() pulumi.StringOutput {
	return o.ApplyT(func(v GetTriggerGitFileSource) string { return v.RepoType }).(pulumi.StringOutput)
}

func (o GetTriggerGitFileSourceOutput) Revision() pulumi.StringOutput {
	return o.ApplyT(func(v GetTriggerGitFileSource) string { return v.Revision }).(pulumi.StringOutput)
}

func (o GetTriggerGitFileSourceOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v GetTriggerGitFileSource) string { return v.Uri }).(pulumi.StringOutput)
}

type GetTriggerGitFileSourceArrayOutput struct{ *pulumi.OutputState }

func (GetTriggerGitFileSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTriggerGitFileSource)(nil)).Elem()
}

func (o GetTriggerGitFileSourceArrayOutput) ToGetTriggerGitFileSourceArrayOutput() GetTriggerGitFileSourceArrayOutput {
	return o
}

func (o GetTriggerGitFileSourceArrayOutput) ToGetTriggerGitFileSourceArrayOutputWithContext(ctx context.Context) GetTriggerGitFileSourceArrayOutput {
	return o
}

func (o GetTriggerGitFileSourceArrayOutput) Index(i pulumi.IntInput) GetTriggerGitFileSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTriggerGitFileSource {
		return vs[0].([]GetTriggerGitFileSource)[vs[1].(int)]
	}).(GetTriggerGitFileSourceOutput)
}

type GetTriggerGithub struct {
	Name         string                        `pulumi:"name"`
	Owner        string                        `pulumi:"owner"`
	PullRequests []GetTriggerGithubPullRequest `pulumi:"pullRequests"`
	Pushes       []GetTriggerGithubPush        `pulumi:"pushes"`
}

// GetTriggerGithubInput is an input type that accepts GetTriggerGithubArgs and GetTriggerGithubOutput values.
// You can construct a concrete instance of `GetTriggerGithubInput` via:
//
//	GetTriggerGithubArgs{...}
type GetTriggerGithubInput interface {
	pulumi.Input

	ToGetTriggerGithubOutput() GetTriggerGithubOutput
	ToGetTriggerGithubOutputWithContext(context.Context) GetTriggerGithubOutput
}

type GetTriggerGithubArgs struct {
	Name         pulumi.StringInput                    `pulumi:"name"`
	Owner        pulumi.StringInput                    `pulumi:"owner"`
	PullRequests GetTriggerGithubPullRequestArrayInput `pulumi:"pullRequests"`
	Pushes       GetTriggerGithubPushArrayInput        `pulumi:"pushes"`
}

func (GetTriggerGithubArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTriggerGithub)(nil)).Elem()
}

func (i GetTriggerGithubArgs) ToGetTriggerGithubOutput() GetTriggerGithubOutput {
	return i.ToGetTriggerGithubOutputWithContext(context.Background())
}

func (i GetTriggerGithubArgs) ToGetTriggerGithubOutputWithContext(ctx context.Context) GetTriggerGithubOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTriggerGithubOutput)
}

// GetTriggerGithubArrayInput is an input type that accepts GetTriggerGithubArray and GetTriggerGithubArrayOutput values.
// You can construct a concrete instance of `GetTriggerGithubArrayInput` via:
//
//	GetTriggerGithubArray{ GetTriggerGithubArgs{...} }
type GetTriggerGithubArrayInput interface {
	pulumi.Input

	ToGetTriggerGithubArrayOutput() GetTriggerGithubArrayOutput
	ToGetTriggerGithubArrayOutputWithContext(context.Context) GetTriggerGithubArrayOutput
}

type GetTriggerGithubArray []GetTriggerGithubInput

func (GetTriggerGithubArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTriggerGithub)(nil)).Elem()
}

func (i GetTriggerGithubArray) ToGetTriggerGithubArrayOutput() GetTriggerGithubArrayOutput {
	return i.ToGetTriggerGithubArrayOutputWithContext(context.Background())
}

func (i GetTriggerGithubArray) ToGetTriggerGithubArrayOutputWithContext(ctx context.Context) GetTriggerGithubArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTriggerGithubArrayOutput)
}

type GetTriggerGithubOutput struct{ *pulumi.OutputState }

func (GetTriggerGithubOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTriggerGithub)(nil)).Elem()
}

func (o GetTriggerGithubOutput) ToGetTriggerGithubOutput() GetTriggerGithubOutput {
	return o
}

func (o GetTriggerGithubOutput) ToGetTriggerGithubOutputWithContext(ctx context.Context) GetTriggerGithubOutput {
	return o
}

func (o GetTriggerGithubOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetTriggerGithub) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetTriggerGithubOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v GetTriggerGithub) string { return v.Owner }).(pulumi.StringOutput)
}

func (o GetTriggerGithubOutput) PullRequests() GetTriggerGithubPullRequestArrayOutput {
	return o.ApplyT(func(v GetTriggerGithub) []GetTriggerGithubPullRequest { return v.PullRequests }).(GetTriggerGithubPullRequestArrayOutput)
}

func (o GetTriggerGithubOutput) Pushes() GetTriggerGithubPushArrayOutput {
	return o.ApplyT(func(v GetTriggerGithub) []GetTriggerGithubPush { return v.Pushes }).(GetTriggerGithubPushArrayOutput)
}

type GetTriggerGithubArrayOutput struct{ *pulumi.OutputState }

func (GetTriggerGithubArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTriggerGithub)(nil)).Elem()
}

func (o GetTriggerGithubArrayOutput) ToGetTriggerGithubArrayOutput() GetTriggerGithubArrayOutput {
	return o
}

func (o GetTriggerGithubArrayOutput) ToGetTriggerGithubArrayOutputWithContext(ctx context.Context) GetTriggerGithubArrayOutput {
	return o
}

func (o GetTriggerGithubArrayOutput) Index(i pulumi.IntInput) GetTriggerGithubOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTriggerGithub {
		return vs[0].([]GetTriggerGithub)[vs[1].(int)]
	}).(GetTriggerGithubOutput)
}

type GetTriggerGithubPullRequest struct {
	Branch         string `pulumi:"branch"`
	CommentControl string `pulumi:"commentControl"`
	InvertRegex    bool   `pulumi:"invertRegex"`
}

// GetTriggerGithubPullRequestInput is an input type that accepts GetTriggerGithubPullRequestArgs and GetTriggerGithubPullRequestOutput values.
// You can construct a concrete instance of `GetTriggerGithubPullRequestInput` via:
//
//	GetTriggerGithubPullRequestArgs{...}
type GetTriggerGithubPullRequestInput interface {
	pulumi.Input

	ToGetTriggerGithubPullRequestOutput() GetTriggerGithubPullRequestOutput
	ToGetTriggerGithubPullRequestOutputWithContext(context.Context) GetTriggerGithubPullRequestOutput
}

type GetTriggerGithubPullRequestArgs struct {
	Branch         pulumi.StringInput `pulumi:"branch"`
	CommentControl pulumi.StringInput `pulumi:"commentControl"`
	InvertRegex    pulumi.BoolInput   `pulumi:"invertRegex"`
}

func (GetTriggerGithubPullRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTriggerGithubPullRequest)(nil)).Elem()
}

func (i GetTriggerGithubPullRequestArgs) ToGetTriggerGithubPullRequestOutput() GetTriggerGithubPullRequestOutput {
	return i.ToGetTriggerGithubPullRequestOutputWithContext(context.Background())
}

func (i GetTriggerGithubPullRequestArgs) ToGetTriggerGithubPullRequestOutputWithContext(ctx context.Context) GetTriggerGithubPullRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTriggerGithubPullRequestOutput)
}

// GetTriggerGithubPullRequestArrayInput is an input type that accepts GetTriggerGithubPullRequestArray and GetTriggerGithubPullRequestArrayOutput values.
// You can construct a concrete instance of `GetTriggerGithubPullRequestArrayInput` via:
//
//	GetTriggerGithubPullRequestArray{ GetTriggerGithubPullRequestArgs{...} }
type GetTriggerGithubPullRequestArrayInput interface {
	pulumi.Input

	ToGetTriggerGithubPullRequestArrayOutput() GetTriggerGithubPullRequestArrayOutput
	ToGetTriggerGithubPullRequestArrayOutputWithContext(context.Context) GetTriggerGithubPullRequestArrayOutput
}

type GetTriggerGithubPullRequestArray []GetTriggerGithubPullRequestInput

func (GetTriggerGithubPullRequestArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTriggerGithubPullRequest)(nil)).Elem()
}

func (i GetTriggerGithubPullRequestArray) ToGetTriggerGithubPullRequestArrayOutput() GetTriggerGithubPullRequestArrayOutput {
	return i.ToGetTriggerGithubPullRequestArrayOutputWithContext(context.Background())
}

func (i GetTriggerGithubPullRequestArray) ToGetTriggerGithubPullRequestArrayOutputWithContext(ctx context.Context) GetTriggerGithubPullRequestArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTriggerGithubPullRequestArrayOutput)
}

type GetTriggerGithubPullRequestOutput struct{ *pulumi.OutputState }

func (GetTriggerGithubPullRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTriggerGithubPullRequest)(nil)).Elem()
}

func (o GetTriggerGithubPullRequestOutput) ToGetTriggerGithubPullRequestOutput() GetTriggerGithubPullRequestOutput {
	return o
}

func (o GetTriggerGithubPullRequestOutput) ToGetTriggerGithubPullRequestOutputWithContext(ctx context.Context) GetTriggerGithubPullRequestOutput {
	return o
}

func (o GetTriggerGithubPullRequestOutput) Branch() pulumi.StringOutput {
	return o.ApplyT(func(v GetTriggerGithubPullRequest) string { return v.Branch }).(pulumi.StringOutput)
}

func (o GetTriggerGithubPullRequestOutput) CommentControl() pulumi.StringOutput {
	return o.ApplyT(func(v GetTriggerGithubPullRequest) string { return v.CommentControl }).(pulumi.StringOutput)
}

func (o GetTriggerGithubPullRequestOutput) InvertRegex() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTriggerGithubPullRequest) bool { return v.InvertRegex }).(pulumi.BoolOutput)
}

type GetTriggerGithubPullRequestArrayOutput struct{ *pulumi.OutputState }

func (GetTriggerGithubPullRequestArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTriggerGithubPullRequest)(nil)).Elem()
}

func (o GetTriggerGithubPullRequestArrayOutput) ToGetTriggerGithubPullRequestArrayOutput() GetTriggerGithubPullRequestArrayOutput {
	return o
}

func (o GetTriggerGithubPullRequestArrayOutput) ToGetTriggerGithubPullRequestArrayOutputWithContext(ctx context.Context) GetTriggerGithubPullRequestArrayOutput {
	return o
}

func (o GetTriggerGithubPullRequestArrayOutput) Index(i pulumi.IntInput) GetTriggerGithubPullRequestOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTriggerGithubPullRequest {
		return vs[0].([]GetTriggerGithubPullRequest)[vs[1].(int)]
	}).(GetTriggerGithubPullRequestOutput)
}

type GetTriggerGithubPush struct {
	Branch      string `pulumi:"branch"`
	InvertRegex bool   `pulumi:"invertRegex"`
	Tag         string `pulumi:"tag"`
}

// GetTriggerGithubPushInput is an input type that accepts GetTriggerGithubPushArgs and GetTriggerGithubPushOutput values.
// You can construct a concrete instance of `GetTriggerGithubPushInput` via:
//
//	GetTriggerGithubPushArgs{...}
type GetTriggerGithubPushInput interface {
	pulumi.Input

	ToGetTriggerGithubPushOutput() GetTriggerGithubPushOutput
	ToGetTriggerGithubPushOutputWithContext(context.Context) GetTriggerGithubPushOutput
}

type GetTriggerGithubPushArgs struct {
	Branch      pulumi.StringInput `pulumi:"branch"`
	InvertRegex pulumi.BoolInput   `pulumi:"invertRegex"`
	Tag         pulumi.StringInput `pulumi:"tag"`
}

func (GetTriggerGithubPushArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTriggerGithubPush)(nil)).Elem()
}

func (i GetTriggerGithubPushArgs) ToGetTriggerGithubPushOutput() GetTriggerGithubPushOutput {
	return i.ToGetTriggerGithubPushOutputWithContext(context.Background())
}

func (i GetTriggerGithubPushArgs) ToGetTriggerGithubPushOutputWithContext(ctx context.Context) GetTriggerGithubPushOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTriggerGithubPushOutput)
}

// GetTriggerGithubPushArrayInput is an input type that accepts GetTriggerGithubPushArray and GetTriggerGithubPushArrayOutput values.
// You can construct a concrete instance of `GetTriggerGithubPushArrayInput` via:
//
//	GetTriggerGithubPushArray{ GetTriggerGithubPushArgs{...} }
type GetTriggerGithubPushArrayInput interface {
	pulumi.Input

	ToGetTriggerGithubPushArrayOutput() GetTriggerGithubPushArrayOutput
	ToGetTriggerGithubPushArrayOutputWithContext(context.Context) GetTriggerGithubPushArrayOutput
}

type GetTriggerGithubPushArray []GetTriggerGithubPushInput

func (GetTriggerGithubPushArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTriggerGithubPush)(nil)).Elem()
}

func (i GetTriggerGithubPushArray) ToGetTriggerGithubPushArrayOutput() GetTriggerGithubPushArrayOutput {
	return i.ToGetTriggerGithubPushArrayOutputWithContext(context.Background())
}

func (i GetTriggerGithubPushArray) ToGetTriggerGithubPushArrayOutputWithContext(ctx context.Context) GetTriggerGithubPushArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTriggerGithubPushArrayOutput)
}

type GetTriggerGithubPushOutput struct{ *pulumi.OutputState }

func (GetTriggerGithubPushOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTriggerGithubPush)(nil)).Elem()
}

func (o GetTriggerGithubPushOutput) ToGetTriggerGithubPushOutput() GetTriggerGithubPushOutput {
	return o
}

func (o GetTriggerGithubPushOutput) ToGetTriggerGithubPushOutputWithContext(ctx context.Context) GetTriggerGithubPushOutput {
	return o
}

func (o GetTriggerGithubPushOutput) Branch() pulumi.StringOutput {
	return o.ApplyT(func(v GetTriggerGithubPush) string { return v.Branch }).(pulumi.StringOutput)
}

func (o GetTriggerGithubPushOutput) InvertRegex() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTriggerGithubPush) bool { return v.InvertRegex }).(pulumi.BoolOutput)
}

func (o GetTriggerGithubPushOutput) Tag() pulumi.StringOutput {
	return o.ApplyT(func(v GetTriggerGithubPush) string { return v.Tag }).(pulumi.StringOutput)
}

type GetTriggerGithubPushArrayOutput struct{ *pulumi.OutputState }

func (GetTriggerGithubPushArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTriggerGithubPush)(nil)).Elem()
}

func (o GetTriggerGithubPushArrayOutput) ToGetTriggerGithubPushArrayOutput() GetTriggerGithubPushArrayOutput {
	return o
}

func (o GetTriggerGithubPushArrayOutput) ToGetTriggerGithubPushArrayOutputWithContext(ctx context.Context) GetTriggerGithubPushArrayOutput {
	return o
}

func (o GetTriggerGithubPushArrayOutput) Index(i pulumi.IntInput) GetTriggerGithubPushOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTriggerGithubPush {
		return vs[0].([]GetTriggerGithubPush)[vs[1].(int)]
	}).(GetTriggerGithubPushOutput)
}

type GetTriggerPubsubConfig struct {
	ServiceAccountEmail string `pulumi:"serviceAccountEmail"`
	State               string `pulumi:"state"`
	Subscription        string `pulumi:"subscription"`
	Topic               string `pulumi:"topic"`
}

// GetTriggerPubsubConfigInput is an input type that accepts GetTriggerPubsubConfigArgs and GetTriggerPubsubConfigOutput values.
// You can construct a concrete instance of `GetTriggerPubsubConfigInput` via:
//
//	GetTriggerPubsubConfigArgs{...}
type GetTriggerPubsubConfigInput interface {
	pulumi.Input

	ToGetTriggerPubsubConfigOutput() GetTriggerPubsubConfigOutput
	ToGetTriggerPubsubConfigOutputWithContext(context.Context) GetTriggerPubsubConfigOutput
}

type GetTriggerPubsubConfigArgs struct {
	ServiceAccountEmail pulumi.StringInput `pulumi:"serviceAccountEmail"`
	State               pulumi.StringInput `pulumi:"state"`
	Subscription        pulumi.StringInput `pulumi:"subscription"`
	Topic               pulumi.StringInput `pulumi:"topic"`
}

func (GetTriggerPubsubConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTriggerPubsubConfig)(nil)).Elem()
}

func (i GetTriggerPubsubConfigArgs) ToGetTriggerPubsubConfigOutput() GetTriggerPubsubConfigOutput {
	return i.ToGetTriggerPubsubConfigOutputWithContext(context.Background())
}

func (i GetTriggerPubsubConfigArgs) ToGetTriggerPubsubConfigOutputWithContext(ctx context.Context) GetTriggerPubsubConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTriggerPubsubConfigOutput)
}

// GetTriggerPubsubConfigArrayInput is an input type that accepts GetTriggerPubsubConfigArray and GetTriggerPubsubConfigArrayOutput values.
// You can construct a concrete instance of `GetTriggerPubsubConfigArrayInput` via:
//
//	GetTriggerPubsubConfigArray{ GetTriggerPubsubConfigArgs{...} }
type GetTriggerPubsubConfigArrayInput interface {
	pulumi.Input

	ToGetTriggerPubsubConfigArrayOutput() GetTriggerPubsubConfigArrayOutput
	ToGetTriggerPubsubConfigArrayOutputWithContext(context.Context) GetTriggerPubsubConfigArrayOutput
}

type GetTriggerPubsubConfigArray []GetTriggerPubsubConfigInput

func (GetTriggerPubsubConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTriggerPubsubConfig)(nil)).Elem()
}

func (i GetTriggerPubsubConfigArray) ToGetTriggerPubsubConfigArrayOutput() GetTriggerPubsubConfigArrayOutput {
	return i.ToGetTriggerPubsubConfigArrayOutputWithContext(context.Background())
}

func (i GetTriggerPubsubConfigArray) ToGetTriggerPubsubConfigArrayOutputWithContext(ctx context.Context) GetTriggerPubsubConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTriggerPubsubConfigArrayOutput)
}

type GetTriggerPubsubConfigOutput struct{ *pulumi.OutputState }

func (GetTriggerPubsubConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTriggerPubsubConfig)(nil)).Elem()
}

func (o GetTriggerPubsubConfigOutput) ToGetTriggerPubsubConfigOutput() GetTriggerPubsubConfigOutput {
	return o
}

func (o GetTriggerPubsubConfigOutput) ToGetTriggerPubsubConfigOutputWithContext(ctx context.Context) GetTriggerPubsubConfigOutput {
	return o
}

func (o GetTriggerPubsubConfigOutput) ServiceAccountEmail() pulumi.StringOutput {
	return o.ApplyT(func(v GetTriggerPubsubConfig) string { return v.ServiceAccountEmail }).(pulumi.StringOutput)
}

func (o GetTriggerPubsubConfigOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetTriggerPubsubConfig) string { return v.State }).(pulumi.StringOutput)
}

func (o GetTriggerPubsubConfigOutput) Subscription() pulumi.StringOutput {
	return o.ApplyT(func(v GetTriggerPubsubConfig) string { return v.Subscription }).(pulumi.StringOutput)
}

func (o GetTriggerPubsubConfigOutput) Topic() pulumi.StringOutput {
	return o.ApplyT(func(v GetTriggerPubsubConfig) string { return v.Topic }).(pulumi.StringOutput)
}

type GetTriggerPubsubConfigArrayOutput struct{ *pulumi.OutputState }

func (GetTriggerPubsubConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTriggerPubsubConfig)(nil)).Elem()
}

func (o GetTriggerPubsubConfigArrayOutput) ToGetTriggerPubsubConfigArrayOutput() GetTriggerPubsubConfigArrayOutput {
	return o
}

func (o GetTriggerPubsubConfigArrayOutput) ToGetTriggerPubsubConfigArrayOutputWithContext(ctx context.Context) GetTriggerPubsubConfigArrayOutput {
	return o
}

func (o GetTriggerPubsubConfigArrayOutput) Index(i pulumi.IntInput) GetTriggerPubsubConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTriggerPubsubConfig {
		return vs[0].([]GetTriggerPubsubConfig)[vs[1].(int)]
	}).(GetTriggerPubsubConfigOutput)
}

type GetTriggerSourceToBuild struct {
	Ref      string `pulumi:"ref"`
	RepoType string `pulumi:"repoType"`
	Uri      string `pulumi:"uri"`
}

// GetTriggerSourceToBuildInput is an input type that accepts GetTriggerSourceToBuildArgs and GetTriggerSourceToBuildOutput values.
// You can construct a concrete instance of `GetTriggerSourceToBuildInput` via:
//
//	GetTriggerSourceToBuildArgs{...}
type GetTriggerSourceToBuildInput interface {
	pulumi.Input

	ToGetTriggerSourceToBuildOutput() GetTriggerSourceToBuildOutput
	ToGetTriggerSourceToBuildOutputWithContext(context.Context) GetTriggerSourceToBuildOutput
}

type GetTriggerSourceToBuildArgs struct {
	Ref      pulumi.StringInput `pulumi:"ref"`
	RepoType pulumi.StringInput `pulumi:"repoType"`
	Uri      pulumi.StringInput `pulumi:"uri"`
}

func (GetTriggerSourceToBuildArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTriggerSourceToBuild)(nil)).Elem()
}

func (i GetTriggerSourceToBuildArgs) ToGetTriggerSourceToBuildOutput() GetTriggerSourceToBuildOutput {
	return i.ToGetTriggerSourceToBuildOutputWithContext(context.Background())
}

func (i GetTriggerSourceToBuildArgs) ToGetTriggerSourceToBuildOutputWithContext(ctx context.Context) GetTriggerSourceToBuildOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTriggerSourceToBuildOutput)
}

// GetTriggerSourceToBuildArrayInput is an input type that accepts GetTriggerSourceToBuildArray and GetTriggerSourceToBuildArrayOutput values.
// You can construct a concrete instance of `GetTriggerSourceToBuildArrayInput` via:
//
//	GetTriggerSourceToBuildArray{ GetTriggerSourceToBuildArgs{...} }
type GetTriggerSourceToBuildArrayInput interface {
	pulumi.Input

	ToGetTriggerSourceToBuildArrayOutput() GetTriggerSourceToBuildArrayOutput
	ToGetTriggerSourceToBuildArrayOutputWithContext(context.Context) GetTriggerSourceToBuildArrayOutput
}

type GetTriggerSourceToBuildArray []GetTriggerSourceToBuildInput

func (GetTriggerSourceToBuildArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTriggerSourceToBuild)(nil)).Elem()
}

func (i GetTriggerSourceToBuildArray) ToGetTriggerSourceToBuildArrayOutput() GetTriggerSourceToBuildArrayOutput {
	return i.ToGetTriggerSourceToBuildArrayOutputWithContext(context.Background())
}

func (i GetTriggerSourceToBuildArray) ToGetTriggerSourceToBuildArrayOutputWithContext(ctx context.Context) GetTriggerSourceToBuildArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTriggerSourceToBuildArrayOutput)
}

type GetTriggerSourceToBuildOutput struct{ *pulumi.OutputState }

func (GetTriggerSourceToBuildOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTriggerSourceToBuild)(nil)).Elem()
}

func (o GetTriggerSourceToBuildOutput) ToGetTriggerSourceToBuildOutput() GetTriggerSourceToBuildOutput {
	return o
}

func (o GetTriggerSourceToBuildOutput) ToGetTriggerSourceToBuildOutputWithContext(ctx context.Context) GetTriggerSourceToBuildOutput {
	return o
}

func (o GetTriggerSourceToBuildOutput) Ref() pulumi.StringOutput {
	return o.ApplyT(func(v GetTriggerSourceToBuild) string { return v.Ref }).(pulumi.StringOutput)
}

func (o GetTriggerSourceToBuildOutput) RepoType() pulumi.StringOutput {
	return o.ApplyT(func(v GetTriggerSourceToBuild) string { return v.RepoType }).(pulumi.StringOutput)
}

func (o GetTriggerSourceToBuildOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v GetTriggerSourceToBuild) string { return v.Uri }).(pulumi.StringOutput)
}

type GetTriggerSourceToBuildArrayOutput struct{ *pulumi.OutputState }

func (GetTriggerSourceToBuildArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTriggerSourceToBuild)(nil)).Elem()
}

func (o GetTriggerSourceToBuildArrayOutput) ToGetTriggerSourceToBuildArrayOutput() GetTriggerSourceToBuildArrayOutput {
	return o
}

func (o GetTriggerSourceToBuildArrayOutput) ToGetTriggerSourceToBuildArrayOutputWithContext(ctx context.Context) GetTriggerSourceToBuildArrayOutput {
	return o
}

func (o GetTriggerSourceToBuildArrayOutput) Index(i pulumi.IntInput) GetTriggerSourceToBuildOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTriggerSourceToBuild {
		return vs[0].([]GetTriggerSourceToBuild)[vs[1].(int)]
	}).(GetTriggerSourceToBuildOutput)
}

type GetTriggerTriggerTemplate struct {
	BranchName  string `pulumi:"branchName"`
	CommitSha   string `pulumi:"commitSha"`
	Dir         string `pulumi:"dir"`
	InvertRegex bool   `pulumi:"invertRegex"`
	ProjectId   string `pulumi:"projectId"`
	RepoName    string `pulumi:"repoName"`
	TagName     string `pulumi:"tagName"`
}

// GetTriggerTriggerTemplateInput is an input type that accepts GetTriggerTriggerTemplateArgs and GetTriggerTriggerTemplateOutput values.
// You can construct a concrete instance of `GetTriggerTriggerTemplateInput` via:
//
//	GetTriggerTriggerTemplateArgs{...}
type GetTriggerTriggerTemplateInput interface {
	pulumi.Input

	ToGetTriggerTriggerTemplateOutput() GetTriggerTriggerTemplateOutput
	ToGetTriggerTriggerTemplateOutputWithContext(context.Context) GetTriggerTriggerTemplateOutput
}

type GetTriggerTriggerTemplateArgs struct {
	BranchName  pulumi.StringInput `pulumi:"branchName"`
	CommitSha   pulumi.StringInput `pulumi:"commitSha"`
	Dir         pulumi.StringInput `pulumi:"dir"`
	InvertRegex pulumi.BoolInput   `pulumi:"invertRegex"`
	ProjectId   pulumi.StringInput `pulumi:"projectId"`
	RepoName    pulumi.StringInput `pulumi:"repoName"`
	TagName     pulumi.StringInput `pulumi:"tagName"`
}

func (GetTriggerTriggerTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTriggerTriggerTemplate)(nil)).Elem()
}

func (i GetTriggerTriggerTemplateArgs) ToGetTriggerTriggerTemplateOutput() GetTriggerTriggerTemplateOutput {
	return i.ToGetTriggerTriggerTemplateOutputWithContext(context.Background())
}

func (i GetTriggerTriggerTemplateArgs) ToGetTriggerTriggerTemplateOutputWithContext(ctx context.Context) GetTriggerTriggerTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTriggerTriggerTemplateOutput)
}

// GetTriggerTriggerTemplateArrayInput is an input type that accepts GetTriggerTriggerTemplateArray and GetTriggerTriggerTemplateArrayOutput values.
// You can construct a concrete instance of `GetTriggerTriggerTemplateArrayInput` via:
//
//	GetTriggerTriggerTemplateArray{ GetTriggerTriggerTemplateArgs{...} }
type GetTriggerTriggerTemplateArrayInput interface {
	pulumi.Input

	ToGetTriggerTriggerTemplateArrayOutput() GetTriggerTriggerTemplateArrayOutput
	ToGetTriggerTriggerTemplateArrayOutputWithContext(context.Context) GetTriggerTriggerTemplateArrayOutput
}

type GetTriggerTriggerTemplateArray []GetTriggerTriggerTemplateInput

func (GetTriggerTriggerTemplateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTriggerTriggerTemplate)(nil)).Elem()
}

func (i GetTriggerTriggerTemplateArray) ToGetTriggerTriggerTemplateArrayOutput() GetTriggerTriggerTemplateArrayOutput {
	return i.ToGetTriggerTriggerTemplateArrayOutputWithContext(context.Background())
}

func (i GetTriggerTriggerTemplateArray) ToGetTriggerTriggerTemplateArrayOutputWithContext(ctx context.Context) GetTriggerTriggerTemplateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTriggerTriggerTemplateArrayOutput)
}

type GetTriggerTriggerTemplateOutput struct{ *pulumi.OutputState }

func (GetTriggerTriggerTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTriggerTriggerTemplate)(nil)).Elem()
}

func (o GetTriggerTriggerTemplateOutput) ToGetTriggerTriggerTemplateOutput() GetTriggerTriggerTemplateOutput {
	return o
}

func (o GetTriggerTriggerTemplateOutput) ToGetTriggerTriggerTemplateOutputWithContext(ctx context.Context) GetTriggerTriggerTemplateOutput {
	return o
}

func (o GetTriggerTriggerTemplateOutput) BranchName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTriggerTriggerTemplate) string { return v.BranchName }).(pulumi.StringOutput)
}

func (o GetTriggerTriggerTemplateOutput) CommitSha() pulumi.StringOutput {
	return o.ApplyT(func(v GetTriggerTriggerTemplate) string { return v.CommitSha }).(pulumi.StringOutput)
}

func (o GetTriggerTriggerTemplateOutput) Dir() pulumi.StringOutput {
	return o.ApplyT(func(v GetTriggerTriggerTemplate) string { return v.Dir }).(pulumi.StringOutput)
}

func (o GetTriggerTriggerTemplateOutput) InvertRegex() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTriggerTriggerTemplate) bool { return v.InvertRegex }).(pulumi.BoolOutput)
}

func (o GetTriggerTriggerTemplateOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTriggerTriggerTemplate) string { return v.ProjectId }).(pulumi.StringOutput)
}

func (o GetTriggerTriggerTemplateOutput) RepoName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTriggerTriggerTemplate) string { return v.RepoName }).(pulumi.StringOutput)
}

func (o GetTriggerTriggerTemplateOutput) TagName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTriggerTriggerTemplate) string { return v.TagName }).(pulumi.StringOutput)
}

type GetTriggerTriggerTemplateArrayOutput struct{ *pulumi.OutputState }

func (GetTriggerTriggerTemplateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTriggerTriggerTemplate)(nil)).Elem()
}

func (o GetTriggerTriggerTemplateArrayOutput) ToGetTriggerTriggerTemplateArrayOutput() GetTriggerTriggerTemplateArrayOutput {
	return o
}

func (o GetTriggerTriggerTemplateArrayOutput) ToGetTriggerTriggerTemplateArrayOutputWithContext(ctx context.Context) GetTriggerTriggerTemplateArrayOutput {
	return o
}

func (o GetTriggerTriggerTemplateArrayOutput) Index(i pulumi.IntInput) GetTriggerTriggerTemplateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTriggerTriggerTemplate {
		return vs[0].([]GetTriggerTriggerTemplate)[vs[1].(int)]
	}).(GetTriggerTriggerTemplateOutput)
}

type GetTriggerWebhookConfig struct {
	Secret string `pulumi:"secret"`
	State  string `pulumi:"state"`
}

// GetTriggerWebhookConfigInput is an input type that accepts GetTriggerWebhookConfigArgs and GetTriggerWebhookConfigOutput values.
// You can construct a concrete instance of `GetTriggerWebhookConfigInput` via:
//
//	GetTriggerWebhookConfigArgs{...}
type GetTriggerWebhookConfigInput interface {
	pulumi.Input

	ToGetTriggerWebhookConfigOutput() GetTriggerWebhookConfigOutput
	ToGetTriggerWebhookConfigOutputWithContext(context.Context) GetTriggerWebhookConfigOutput
}

type GetTriggerWebhookConfigArgs struct {
	Secret pulumi.StringInput `pulumi:"secret"`
	State  pulumi.StringInput `pulumi:"state"`
}

func (GetTriggerWebhookConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTriggerWebhookConfig)(nil)).Elem()
}

func (i GetTriggerWebhookConfigArgs) ToGetTriggerWebhookConfigOutput() GetTriggerWebhookConfigOutput {
	return i.ToGetTriggerWebhookConfigOutputWithContext(context.Background())
}

func (i GetTriggerWebhookConfigArgs) ToGetTriggerWebhookConfigOutputWithContext(ctx context.Context) GetTriggerWebhookConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTriggerWebhookConfigOutput)
}

// GetTriggerWebhookConfigArrayInput is an input type that accepts GetTriggerWebhookConfigArray and GetTriggerWebhookConfigArrayOutput values.
// You can construct a concrete instance of `GetTriggerWebhookConfigArrayInput` via:
//
//	GetTriggerWebhookConfigArray{ GetTriggerWebhookConfigArgs{...} }
type GetTriggerWebhookConfigArrayInput interface {
	pulumi.Input

	ToGetTriggerWebhookConfigArrayOutput() GetTriggerWebhookConfigArrayOutput
	ToGetTriggerWebhookConfigArrayOutputWithContext(context.Context) GetTriggerWebhookConfigArrayOutput
}

type GetTriggerWebhookConfigArray []GetTriggerWebhookConfigInput

func (GetTriggerWebhookConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTriggerWebhookConfig)(nil)).Elem()
}

func (i GetTriggerWebhookConfigArray) ToGetTriggerWebhookConfigArrayOutput() GetTriggerWebhookConfigArrayOutput {
	return i.ToGetTriggerWebhookConfigArrayOutputWithContext(context.Background())
}

func (i GetTriggerWebhookConfigArray) ToGetTriggerWebhookConfigArrayOutputWithContext(ctx context.Context) GetTriggerWebhookConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTriggerWebhookConfigArrayOutput)
}

type GetTriggerWebhookConfigOutput struct{ *pulumi.OutputState }

func (GetTriggerWebhookConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTriggerWebhookConfig)(nil)).Elem()
}

func (o GetTriggerWebhookConfigOutput) ToGetTriggerWebhookConfigOutput() GetTriggerWebhookConfigOutput {
	return o
}

func (o GetTriggerWebhookConfigOutput) ToGetTriggerWebhookConfigOutputWithContext(ctx context.Context) GetTriggerWebhookConfigOutput {
	return o
}

func (o GetTriggerWebhookConfigOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v GetTriggerWebhookConfig) string { return v.Secret }).(pulumi.StringOutput)
}

func (o GetTriggerWebhookConfigOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetTriggerWebhookConfig) string { return v.State }).(pulumi.StringOutput)
}

type GetTriggerWebhookConfigArrayOutput struct{ *pulumi.OutputState }

func (GetTriggerWebhookConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTriggerWebhookConfig)(nil)).Elem()
}

func (o GetTriggerWebhookConfigArrayOutput) ToGetTriggerWebhookConfigArrayOutput() GetTriggerWebhookConfigArrayOutput {
	return o
}

func (o GetTriggerWebhookConfigArrayOutput) ToGetTriggerWebhookConfigArrayOutputWithContext(ctx context.Context) GetTriggerWebhookConfigArrayOutput {
	return o
}

func (o GetTriggerWebhookConfigArrayOutput) Index(i pulumi.IntInput) GetTriggerWebhookConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTriggerWebhookConfig {
		return vs[0].([]GetTriggerWebhookConfig)[vs[1].(int)]
	}).(GetTriggerWebhookConfigOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerApprovalConfigInput)(nil)).Elem(), TriggerApprovalConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerApprovalConfigPtrInput)(nil)).Elem(), TriggerApprovalConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerBuildInput)(nil)).Elem(), TriggerBuildArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerBuildPtrInput)(nil)).Elem(), TriggerBuildArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerBuildArtifactsInput)(nil)).Elem(), TriggerBuildArtifactsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerBuildArtifactsPtrInput)(nil)).Elem(), TriggerBuildArtifactsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerBuildArtifactsObjectsInput)(nil)).Elem(), TriggerBuildArtifactsObjectsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerBuildArtifactsObjectsPtrInput)(nil)).Elem(), TriggerBuildArtifactsObjectsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerBuildArtifactsObjectsTimingInput)(nil)).Elem(), TriggerBuildArtifactsObjectsTimingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerBuildArtifactsObjectsTimingArrayInput)(nil)).Elem(), TriggerBuildArtifactsObjectsTimingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerBuildAvailableSecretsInput)(nil)).Elem(), TriggerBuildAvailableSecretsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerBuildAvailableSecretsPtrInput)(nil)).Elem(), TriggerBuildAvailableSecretsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerBuildAvailableSecretsSecretManagerInput)(nil)).Elem(), TriggerBuildAvailableSecretsSecretManagerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerBuildAvailableSecretsSecretManagerArrayInput)(nil)).Elem(), TriggerBuildAvailableSecretsSecretManagerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerBuildOptionsInput)(nil)).Elem(), TriggerBuildOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerBuildOptionsPtrInput)(nil)).Elem(), TriggerBuildOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerBuildOptionsVolumeInput)(nil)).Elem(), TriggerBuildOptionsVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerBuildOptionsVolumeArrayInput)(nil)).Elem(), TriggerBuildOptionsVolumeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerBuildSecretInput)(nil)).Elem(), TriggerBuildSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerBuildSecretArrayInput)(nil)).Elem(), TriggerBuildSecretArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerBuildSourceInput)(nil)).Elem(), TriggerBuildSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerBuildSourcePtrInput)(nil)).Elem(), TriggerBuildSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerBuildSourceRepoSourceInput)(nil)).Elem(), TriggerBuildSourceRepoSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerBuildSourceRepoSourcePtrInput)(nil)).Elem(), TriggerBuildSourceRepoSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerBuildSourceStorageSourceInput)(nil)).Elem(), TriggerBuildSourceStorageSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerBuildSourceStorageSourcePtrInput)(nil)).Elem(), TriggerBuildSourceStorageSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerBuildStepInput)(nil)).Elem(), TriggerBuildStepArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerBuildStepArrayInput)(nil)).Elem(), TriggerBuildStepArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerBuildStepVolumeInput)(nil)).Elem(), TriggerBuildStepVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerBuildStepVolumeArrayInput)(nil)).Elem(), TriggerBuildStepVolumeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerGitFileSourceInput)(nil)).Elem(), TriggerGitFileSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerGitFileSourcePtrInput)(nil)).Elem(), TriggerGitFileSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerGithubInput)(nil)).Elem(), TriggerGithubArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerGithubPtrInput)(nil)).Elem(), TriggerGithubArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerGithubPullRequestInput)(nil)).Elem(), TriggerGithubPullRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerGithubPullRequestPtrInput)(nil)).Elem(), TriggerGithubPullRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerGithubPushInput)(nil)).Elem(), TriggerGithubPushArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerGithubPushPtrInput)(nil)).Elem(), TriggerGithubPushArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerPubsubConfigInput)(nil)).Elem(), TriggerPubsubConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerPubsubConfigPtrInput)(nil)).Elem(), TriggerPubsubConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerSourceToBuildInput)(nil)).Elem(), TriggerSourceToBuildArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerSourceToBuildPtrInput)(nil)).Elem(), TriggerSourceToBuildArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerTriggerTemplateInput)(nil)).Elem(), TriggerTriggerTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerTriggerTemplatePtrInput)(nil)).Elem(), TriggerTriggerTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerWebhookConfigInput)(nil)).Elem(), TriggerWebhookConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerWebhookConfigPtrInput)(nil)).Elem(), TriggerWebhookConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkerPoolNetworkConfigInput)(nil)).Elem(), WorkerPoolNetworkConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkerPoolNetworkConfigPtrInput)(nil)).Elem(), WorkerPoolNetworkConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkerPoolWorkerConfigInput)(nil)).Elem(), WorkerPoolWorkerConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkerPoolWorkerConfigPtrInput)(nil)).Elem(), WorkerPoolWorkerConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTriggerApprovalConfigInput)(nil)).Elem(), GetTriggerApprovalConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTriggerApprovalConfigArrayInput)(nil)).Elem(), GetTriggerApprovalConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTriggerBuildInput)(nil)).Elem(), GetTriggerBuildArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTriggerBuildArrayInput)(nil)).Elem(), GetTriggerBuildArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTriggerBuildArtifactInput)(nil)).Elem(), GetTriggerBuildArtifactArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTriggerBuildArtifactArrayInput)(nil)).Elem(), GetTriggerBuildArtifactArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTriggerBuildArtifactObjectInput)(nil)).Elem(), GetTriggerBuildArtifactObjectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTriggerBuildArtifactObjectArrayInput)(nil)).Elem(), GetTriggerBuildArtifactObjectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTriggerBuildArtifactObjectTimingInput)(nil)).Elem(), GetTriggerBuildArtifactObjectTimingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTriggerBuildArtifactObjectTimingArrayInput)(nil)).Elem(), GetTriggerBuildArtifactObjectTimingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTriggerBuildAvailableSecretInput)(nil)).Elem(), GetTriggerBuildAvailableSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTriggerBuildAvailableSecretArrayInput)(nil)).Elem(), GetTriggerBuildAvailableSecretArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTriggerBuildAvailableSecretSecretManagerInput)(nil)).Elem(), GetTriggerBuildAvailableSecretSecretManagerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTriggerBuildAvailableSecretSecretManagerArrayInput)(nil)).Elem(), GetTriggerBuildAvailableSecretSecretManagerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTriggerBuildOptionInput)(nil)).Elem(), GetTriggerBuildOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTriggerBuildOptionArrayInput)(nil)).Elem(), GetTriggerBuildOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTriggerBuildOptionVolumeInput)(nil)).Elem(), GetTriggerBuildOptionVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTriggerBuildOptionVolumeArrayInput)(nil)).Elem(), GetTriggerBuildOptionVolumeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTriggerBuildSecretInput)(nil)).Elem(), GetTriggerBuildSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTriggerBuildSecretArrayInput)(nil)).Elem(), GetTriggerBuildSecretArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTriggerBuildSourceInput)(nil)).Elem(), GetTriggerBuildSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTriggerBuildSourceArrayInput)(nil)).Elem(), GetTriggerBuildSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTriggerBuildSourceRepoSourceInput)(nil)).Elem(), GetTriggerBuildSourceRepoSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTriggerBuildSourceRepoSourceArrayInput)(nil)).Elem(), GetTriggerBuildSourceRepoSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTriggerBuildSourceStorageSourceInput)(nil)).Elem(), GetTriggerBuildSourceStorageSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTriggerBuildSourceStorageSourceArrayInput)(nil)).Elem(), GetTriggerBuildSourceStorageSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTriggerBuildStepInput)(nil)).Elem(), GetTriggerBuildStepArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTriggerBuildStepArrayInput)(nil)).Elem(), GetTriggerBuildStepArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTriggerBuildStepVolumeInput)(nil)).Elem(), GetTriggerBuildStepVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTriggerBuildStepVolumeArrayInput)(nil)).Elem(), GetTriggerBuildStepVolumeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTriggerGitFileSourceInput)(nil)).Elem(), GetTriggerGitFileSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTriggerGitFileSourceArrayInput)(nil)).Elem(), GetTriggerGitFileSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTriggerGithubInput)(nil)).Elem(), GetTriggerGithubArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTriggerGithubArrayInput)(nil)).Elem(), GetTriggerGithubArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTriggerGithubPullRequestInput)(nil)).Elem(), GetTriggerGithubPullRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTriggerGithubPullRequestArrayInput)(nil)).Elem(), GetTriggerGithubPullRequestArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTriggerGithubPushInput)(nil)).Elem(), GetTriggerGithubPushArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTriggerGithubPushArrayInput)(nil)).Elem(), GetTriggerGithubPushArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTriggerPubsubConfigInput)(nil)).Elem(), GetTriggerPubsubConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTriggerPubsubConfigArrayInput)(nil)).Elem(), GetTriggerPubsubConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTriggerSourceToBuildInput)(nil)).Elem(), GetTriggerSourceToBuildArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTriggerSourceToBuildArrayInput)(nil)).Elem(), GetTriggerSourceToBuildArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTriggerTriggerTemplateInput)(nil)).Elem(), GetTriggerTriggerTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTriggerTriggerTemplateArrayInput)(nil)).Elem(), GetTriggerTriggerTemplateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTriggerWebhookConfigInput)(nil)).Elem(), GetTriggerWebhookConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTriggerWebhookConfigArrayInput)(nil)).Elem(), GetTriggerWebhookConfigArray{})
	pulumi.RegisterOutputType(TriggerApprovalConfigOutput{})
	pulumi.RegisterOutputType(TriggerApprovalConfigPtrOutput{})
	pulumi.RegisterOutputType(TriggerBuildOutput{})
	pulumi.RegisterOutputType(TriggerBuildPtrOutput{})
	pulumi.RegisterOutputType(TriggerBuildArtifactsOutput{})
	pulumi.RegisterOutputType(TriggerBuildArtifactsPtrOutput{})
	pulumi.RegisterOutputType(TriggerBuildArtifactsObjectsOutput{})
	pulumi.RegisterOutputType(TriggerBuildArtifactsObjectsPtrOutput{})
	pulumi.RegisterOutputType(TriggerBuildArtifactsObjectsTimingOutput{})
	pulumi.RegisterOutputType(TriggerBuildArtifactsObjectsTimingArrayOutput{})
	pulumi.RegisterOutputType(TriggerBuildAvailableSecretsOutput{})
	pulumi.RegisterOutputType(TriggerBuildAvailableSecretsPtrOutput{})
	pulumi.RegisterOutputType(TriggerBuildAvailableSecretsSecretManagerOutput{})
	pulumi.RegisterOutputType(TriggerBuildAvailableSecretsSecretManagerArrayOutput{})
	pulumi.RegisterOutputType(TriggerBuildOptionsOutput{})
	pulumi.RegisterOutputType(TriggerBuildOptionsPtrOutput{})
	pulumi.RegisterOutputType(TriggerBuildOptionsVolumeOutput{})
	pulumi.RegisterOutputType(TriggerBuildOptionsVolumeArrayOutput{})
	pulumi.RegisterOutputType(TriggerBuildSecretOutput{})
	pulumi.RegisterOutputType(TriggerBuildSecretArrayOutput{})
	pulumi.RegisterOutputType(TriggerBuildSourceOutput{})
	pulumi.RegisterOutputType(TriggerBuildSourcePtrOutput{})
	pulumi.RegisterOutputType(TriggerBuildSourceRepoSourceOutput{})
	pulumi.RegisterOutputType(TriggerBuildSourceRepoSourcePtrOutput{})
	pulumi.RegisterOutputType(TriggerBuildSourceStorageSourceOutput{})
	pulumi.RegisterOutputType(TriggerBuildSourceStorageSourcePtrOutput{})
	pulumi.RegisterOutputType(TriggerBuildStepOutput{})
	pulumi.RegisterOutputType(TriggerBuildStepArrayOutput{})
	pulumi.RegisterOutputType(TriggerBuildStepVolumeOutput{})
	pulumi.RegisterOutputType(TriggerBuildStepVolumeArrayOutput{})
	pulumi.RegisterOutputType(TriggerGitFileSourceOutput{})
	pulumi.RegisterOutputType(TriggerGitFileSourcePtrOutput{})
	pulumi.RegisterOutputType(TriggerGithubOutput{})
	pulumi.RegisterOutputType(TriggerGithubPtrOutput{})
	pulumi.RegisterOutputType(TriggerGithubPullRequestOutput{})
	pulumi.RegisterOutputType(TriggerGithubPullRequestPtrOutput{})
	pulumi.RegisterOutputType(TriggerGithubPushOutput{})
	pulumi.RegisterOutputType(TriggerGithubPushPtrOutput{})
	pulumi.RegisterOutputType(TriggerPubsubConfigOutput{})
	pulumi.RegisterOutputType(TriggerPubsubConfigPtrOutput{})
	pulumi.RegisterOutputType(TriggerSourceToBuildOutput{})
	pulumi.RegisterOutputType(TriggerSourceToBuildPtrOutput{})
	pulumi.RegisterOutputType(TriggerTriggerTemplateOutput{})
	pulumi.RegisterOutputType(TriggerTriggerTemplatePtrOutput{})
	pulumi.RegisterOutputType(TriggerWebhookConfigOutput{})
	pulumi.RegisterOutputType(TriggerWebhookConfigPtrOutput{})
	pulumi.RegisterOutputType(WorkerPoolNetworkConfigOutput{})
	pulumi.RegisterOutputType(WorkerPoolNetworkConfigPtrOutput{})
	pulumi.RegisterOutputType(WorkerPoolWorkerConfigOutput{})
	pulumi.RegisterOutputType(WorkerPoolWorkerConfigPtrOutput{})
	pulumi.RegisterOutputType(GetTriggerApprovalConfigOutput{})
	pulumi.RegisterOutputType(GetTriggerApprovalConfigArrayOutput{})
	pulumi.RegisterOutputType(GetTriggerBuildOutput{})
	pulumi.RegisterOutputType(GetTriggerBuildArrayOutput{})
	pulumi.RegisterOutputType(GetTriggerBuildArtifactOutput{})
	pulumi.RegisterOutputType(GetTriggerBuildArtifactArrayOutput{})
	pulumi.RegisterOutputType(GetTriggerBuildArtifactObjectOutput{})
	pulumi.RegisterOutputType(GetTriggerBuildArtifactObjectArrayOutput{})
	pulumi.RegisterOutputType(GetTriggerBuildArtifactObjectTimingOutput{})
	pulumi.RegisterOutputType(GetTriggerBuildArtifactObjectTimingArrayOutput{})
	pulumi.RegisterOutputType(GetTriggerBuildAvailableSecretOutput{})
	pulumi.RegisterOutputType(GetTriggerBuildAvailableSecretArrayOutput{})
	pulumi.RegisterOutputType(GetTriggerBuildAvailableSecretSecretManagerOutput{})
	pulumi.RegisterOutputType(GetTriggerBuildAvailableSecretSecretManagerArrayOutput{})
	pulumi.RegisterOutputType(GetTriggerBuildOptionOutput{})
	pulumi.RegisterOutputType(GetTriggerBuildOptionArrayOutput{})
	pulumi.RegisterOutputType(GetTriggerBuildOptionVolumeOutput{})
	pulumi.RegisterOutputType(GetTriggerBuildOptionVolumeArrayOutput{})
	pulumi.RegisterOutputType(GetTriggerBuildSecretOutput{})
	pulumi.RegisterOutputType(GetTriggerBuildSecretArrayOutput{})
	pulumi.RegisterOutputType(GetTriggerBuildSourceOutput{})
	pulumi.RegisterOutputType(GetTriggerBuildSourceArrayOutput{})
	pulumi.RegisterOutputType(GetTriggerBuildSourceRepoSourceOutput{})
	pulumi.RegisterOutputType(GetTriggerBuildSourceRepoSourceArrayOutput{})
	pulumi.RegisterOutputType(GetTriggerBuildSourceStorageSourceOutput{})
	pulumi.RegisterOutputType(GetTriggerBuildSourceStorageSourceArrayOutput{})
	pulumi.RegisterOutputType(GetTriggerBuildStepOutput{})
	pulumi.RegisterOutputType(GetTriggerBuildStepArrayOutput{})
	pulumi.RegisterOutputType(GetTriggerBuildStepVolumeOutput{})
	pulumi.RegisterOutputType(GetTriggerBuildStepVolumeArrayOutput{})
	pulumi.RegisterOutputType(GetTriggerGitFileSourceOutput{})
	pulumi.RegisterOutputType(GetTriggerGitFileSourceArrayOutput{})
	pulumi.RegisterOutputType(GetTriggerGithubOutput{})
	pulumi.RegisterOutputType(GetTriggerGithubArrayOutput{})
	pulumi.RegisterOutputType(GetTriggerGithubPullRequestOutput{})
	pulumi.RegisterOutputType(GetTriggerGithubPullRequestArrayOutput{})
	pulumi.RegisterOutputType(GetTriggerGithubPushOutput{})
	pulumi.RegisterOutputType(GetTriggerGithubPushArrayOutput{})
	pulumi.RegisterOutputType(GetTriggerPubsubConfigOutput{})
	pulumi.RegisterOutputType(GetTriggerPubsubConfigArrayOutput{})
	pulumi.RegisterOutputType(GetTriggerSourceToBuildOutput{})
	pulumi.RegisterOutputType(GetTriggerSourceToBuildArrayOutput{})
	pulumi.RegisterOutputType(GetTriggerTriggerTemplateOutput{})
	pulumi.RegisterOutputType(GetTriggerTriggerTemplateArrayOutput{})
	pulumi.RegisterOutputType(GetTriggerWebhookConfigOutput{})
	pulumi.RegisterOutputType(GetTriggerWebhookConfigArrayOutput{})
}
