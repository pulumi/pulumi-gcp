// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package diagflow

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Agents are best described as Natural Language Understanding (NLU) modules that transform user requests into actionable data. You can include agents in your app, product, or service to determine user intent and respond to the user in a natural way.
//
// To get more information about Agent, see:
//
// * [API documentation](https://cloud.google.com/dialogflow/cx/docs/reference/rest/v3/projects.locations.agents)
// * How-to Guides
//   - [Official Documentation](https://cloud.google.com/dialogflow/cx/docs)
//
// ## Example Usage
//
// ### Dialogflowcx Agent Full
//
// ```go
// package main
//
// import (
//
//	"encoding/json"
//	"fmt"
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/diagflow"
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/storage"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			bucket, err := storage.NewBucket(ctx, "bucket", &storage.BucketArgs{
//				Name:                     pulumi.String("dialogflowcx-bucket"),
//				Location:                 pulumi.String("US"),
//				UniformBucketLevelAccess: pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			tmpJSON0, err := json.Marshal(map[string]interface{}{
//				"en": map[string]interface{}{
//					"voice": map[string]interface{}{
//						"name": "en-US-Neural2-A",
//					},
//				},
//				"fr": map[string]interface{}{
//					"voice": map[string]interface{}{
//						"name": "fr-CA-Neural2-A",
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			json0 := string(tmpJSON0)
//			_, err = diagflow.NewCxAgent(ctx, "full_agent", &diagflow.CxAgentArgs{
//				DisplayName:         pulumi.String("dialogflowcx-agent"),
//				Location:            pulumi.String("global"),
//				DefaultLanguageCode: pulumi.String("en"),
//				SupportedLanguageCodes: pulumi.StringArray{
//					pulumi.String("fr"),
//					pulumi.String("de"),
//					pulumi.String("es"),
//				},
//				TimeZone:                 pulumi.String("America/New_York"),
//				Description:              pulumi.String("Example description."),
//				AvatarUri:                pulumi.String("https://cloud.google.com/_static/images/cloud/icons/favicons/onecloud/super_cloud.png"),
//				EnableStackdriverLogging: pulumi.Bool(true),
//				EnableSpellCorrection:    pulumi.Bool(true),
//				SpeechToTextSettings: &diagflow.CxAgentSpeechToTextSettingsArgs{
//					EnableSpeechAdaptation: pulumi.Bool(true),
//				},
//				AdvancedSettings: &diagflow.CxAgentAdvancedSettingsArgs{
//					AudioExportGcsDestination: &diagflow.CxAgentAdvancedSettingsAudioExportGcsDestinationArgs{
//						Uri: bucket.Url.ApplyT(func(url string) (string, error) {
//							return fmt.Sprintf("%v/prefix-", url), nil
//						}).(pulumi.StringOutput),
//					},
//					SpeechSettings: &diagflow.CxAgentAdvancedSettingsSpeechSettingsArgs{
//						EndpointerSensitivity:      pulumi.Int(30),
//						NoSpeechTimeout:            pulumi.String("3.500s"),
//						UseTimeoutBasedEndpointing: pulumi.Bool(true),
//						Models: pulumi.StringMap{
//							"name":  pulumi.String("wrench"),
//							"mass":  pulumi.String("1.3kg"),
//							"count": pulumi.String("3"),
//						},
//					},
//					DtmfSettings: &diagflow.CxAgentAdvancedSettingsDtmfSettingsArgs{
//						Enabled:     pulumi.Bool(true),
//						MaxDigits:   pulumi.Int(1),
//						FinishDigit: pulumi.String("#"),
//					},
//					LoggingSettings: &diagflow.CxAgentAdvancedSettingsLoggingSettingsArgs{
//						EnableStackdriverLogging:    pulumi.Bool(true),
//						EnableInteractionLogging:    pulumi.Bool(true),
//						EnableConsentBasedRedaction: pulumi.Bool(true),
//					},
//				},
//				GitIntegrationSettings: &diagflow.CxAgentGitIntegrationSettingsArgs{
//					GithubSettings: &diagflow.CxAgentGitIntegrationSettingsGithubSettingsArgs{
//						DisplayName:    pulumi.String("Github Repo"),
//						RepositoryUri:  pulumi.String("https://api.github.com/repos/githubtraining/hellogitworld"),
//						TrackingBranch: pulumi.String("main"),
//						AccessToken:    pulumi.String("secret-token"),
//						Branches: pulumi.StringArray{
//							pulumi.String("main"),
//						},
//					},
//				},
//				TextToSpeechSettings: &diagflow.CxAgentTextToSpeechSettingsArgs{
//					SynthesizeSpeechConfigs: pulumi.String(json0),
//				},
//				GenAppBuilderSettings: &diagflow.CxAgentGenAppBuilderSettingsArgs{
//					Engine: pulumi.String("projects/-/locations/-/collections/-/engines/-"),
//				},
//				StartPlaybook:               pulumi.String("projects/-/locations/-/agents/-/playbooks/00000000-0000-0000-0000-000000000000"),
//				EnableMultiLanguageTraining: pulumi.Bool(false),
//				Locked:                      pulumi.Bool(false),
//				AnswerFeedbackSettings: &diagflow.CxAgentAnswerFeedbackSettingsArgs{
//					EnableAnswerFeedback: pulumi.Bool(false),
//				},
//				ClientCertificateSettings: &diagflow.CxAgentClientCertificateSettingsArgs{
//					Passphrase: pulumi.String("projects/example-proj/secrets/example-secret/versions/example-version"),
//					PrivateKey: pulumi.String("projects/example-proj/secrets/example-secret/versions/example-version"),
//					SslCertificate: pulumi.String(`-----BEGIN CERTIFICATE-----
//
// MIIDdDCCAlygAwIBAgIJANg0gKeB5LKmMA0GCSqGSIb3DQEBCwUAMIGSMQswCQYD
// VQQGEwJVUzETMBEGA1UECAwKQ2FsaWZvcm5pYTEWMBQGA1UEBwwNU2FuIEZyYW5j
// aXNjbzEZMBcGA1UECgwQR2l0SHViLCBJbmMuMRkwFwYDVQQLDBBHb3Zlcm5tZW50
// IFRlYW0xGTAXBgNVBAMMEGdvdnN0YWNrLmdpdGh1Yi5pbzAeFw0yMDA1MDUxNzM2
// MzVaFw0zMDA1MDMxNzM2MzVaMIGSMQswCQYDVQQGEwJVUzETMBEGA1UECAwKQ2Fs
// aWZvcm5pYTEWMBQGA1UEBwwNU2FuIEZyYW5jaXNjbzEZMBcGA1UECgwQR2l0SHVi
// LCBJbmMuMRkwFwYDVQQLDBBHb3Zlcm5tZW50IFRlYW0xGTAXBgNVBAMMEGdvdnN0
// YWNrLmdpdGh1Yi5pbzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAK5P
// 4d9qWZPjZ2eA4eYV2Q8Z3Zp4g8e6g8e6g8e6g8e6g8e6g8e6g8e6g8e6g8e6g8e6
// g8e6g8e6g8e6g8e6g8e6g8e6g8e6g8e6g8e6g8e6g8e6g8e6g8e6g8e6g8e6g8e6
// g8e6g8e6g8e6g8e6g8e6g8e6g8e6g8e6g8e6g8e6g8e6g8e6g8e6g8e6g8e6g8e6
// g8e6g8e6g8e6g8e6g8e6g8e6g8e6g8e6g8e6g8e6g8e6g8e6g8e6g8e6g8e6g8e6
// g8e6g8e6g8e6g8e6g8e6AgMBAAGjggEaMIIBFjAdBgNVHQ4EFgQUCneA9H8fC+tC
// g8e6g8e6g8e6g8e6g8e6g8e6g8e6g8e6g8e6g8e6g8e6g8e6g8e6g8e6g8e6g8e6
// g8e6g8e6g8e6g8e6g8e6g8e6g8e6g8e6g8e6g8e6g8e6g8e6g8e6g8e6g8e6g8e6
// g8e6g8e6g8e6g8e6g8e6g8e6g8e6g8e6g8e6g8e6g8e6g8e6g8e6g8e6g8e6g8e6
// g8e6g8e6g8e6g8e6g8e6g8e6g8e6g8e6g8e6g8e6g8e6g8e6g8e6g8e6g8e6g8e6
// -----END CERTIFICATE-----
// `),
//
//				},
//				PersonalizationSettings: &diagflow.CxAgentPersonalizationSettingsArgs{
//					DefaultEndUserMetadata: pulumi.String("{\"example-key\": \"example-value\"}"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Agent can be imported using any of these accepted formats:
//
// * `projects/{{project}}/locations/{{location}}/agents/{{name}}`
//
// * `{{project}}/{{location}}/{{name}}`
//
// * `{{location}}/{{name}}`
//
// When using the `pulumi import` command, Agent can be imported using one of the formats above. For example:
//
// ```sh
// $ pulumi import gcp:diagflow/cxAgent:CxAgent default projects/{{project}}/locations/{{location}}/agents/{{name}}
// ```
//
// ```sh
// $ pulumi import gcp:diagflow/cxAgent:CxAgent default {{project}}/{{location}}/{{name}}
// ```
//
// ```sh
// $ pulumi import gcp:diagflow/cxAgent:CxAgent default {{location}}/{{name}}
// ```
type CxAgent struct {
	pulumi.CustomResourceState

	// Hierarchical advanced settings for this agent. The settings exposed at the lower level overrides the settings exposed at the higher level.
	// Hierarchy: Agent->Flow->Page->Fulfillment/Parameter.
	// Structure is documented below.
	AdvancedSettings CxAgentAdvancedSettingsOutput `pulumi:"advancedSettings"`
	// Answer feedback collection settings.
	// Structure is documented below.
	AnswerFeedbackSettings CxAgentAnswerFeedbackSettingsPtrOutput `pulumi:"answerFeedbackSettings"`
	// The URI of the agent's avatar. Avatars are used throughout the Dialogflow console and in the self-hosted Web Demo integration.
	AvatarUri pulumi.StringPtrOutput `pulumi:"avatarUri"`
	// Settings for custom client certificates.
	// Structure is documented below.
	ClientCertificateSettings CxAgentClientCertificateSettingsPtrOutput `pulumi:"clientCertificateSettings"`
	// The default language of the agent as a language tag. [See Language Support](https://cloud.google.com/dialogflow/cx/docs/reference/language)
	// for a list of the currently supported language codes. This field cannot be updated after creation.
	DefaultLanguageCode       pulumi.StringOutput  `pulumi:"defaultLanguageCode"`
	DeleteChatEngineOnDestroy pulumi.BoolPtrOutput `pulumi:"deleteChatEngineOnDestroy"`
	// The description of this agent. The maximum length is 500 characters. If exceeded, the request is rejected.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The human-readable name of the agent, unique within the location.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// Enable training multi-lingual models for this agent. These models will be trained on all the languages supported by the agent.
	EnableMultiLanguageTraining pulumi.BoolPtrOutput `pulumi:"enableMultiLanguageTraining"`
	// Indicates if automatic spell correction is enabled in detect intent requests.
	EnableSpellCorrection pulumi.BoolPtrOutput `pulumi:"enableSpellCorrection"`
	// (Optional, Deprecated)
	// Determines whether this agent should log conversation queries.
	//
	// > **Warning:** `enableStackdriverLogging` is deprecated and will be removed in a future major release. Please use `advanced_settings.logging_settings.enable_stackdriver_logging`instead.
	//
	// Deprecated: `enableStackdriverLogging` is deprecated and will be removed in a future major release. Please use `advanced_settings.logging_settings.enable_stackdriver_logging`instead.
	EnableStackdriverLogging pulumi.BoolPtrOutput `pulumi:"enableStackdriverLogging"`
	// Gen App Builder-related agent-level settings.
	// Structure is documented below.
	GenAppBuilderSettings CxAgentGenAppBuilderSettingsOutput `pulumi:"genAppBuilderSettings"`
	// Git integration settings for this agent.
	// Structure is documented below.
	GitIntegrationSettings CxAgentGitIntegrationSettingsPtrOutput `pulumi:"gitIntegrationSettings"`
	// The name of the location this agent is located in.
	// > **Note:** The first time you are deploying an Agent in your project you must configure location settings.
	// This is a one time step but at the moment you can only [configure location settings](https://cloud.google.com/dialogflow/cx/docs/concept/region#location-settings) via the Dialogflow CX console.
	// Another options is to use global location so you don't need to manually configure location settings.
	Location pulumi.StringOutput `pulumi:"location"`
	// Indicates whether the agent is locked for changes. If the agent is locked, modifications to the agent will be rejected except for [agents.restore][].
	Locked pulumi.BoolPtrOutput `pulumi:"locked"`
	// The unique identifier of the agent.
	Name pulumi.StringOutput `pulumi:"name"`
	// Settings for end user personalization.
	// Structure is documented below.
	PersonalizationSettings CxAgentPersonalizationSettingsPtrOutput `pulumi:"personalizationSettings"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
	// A read only boolean field reflecting Zone Isolation status of the agent.
	SatisfiesPzi pulumi.BoolOutput `pulumi:"satisfiesPzi"`
	// A read only boolean field reflecting Zone Separation status of the agent.
	SatisfiesPzs pulumi.BoolOutput `pulumi:"satisfiesPzs"`
	// Name of the SecuritySettings reference for the agent. Format: projects/<Project ID>/locations/<Location ID>/securitySettings/<Security Settings ID>.
	SecuritySettings pulumi.StringPtrOutput `pulumi:"securitySettings"`
	// Settings related to speech recognition.
	// Structure is documented below.
	SpeechToTextSettings CxAgentSpeechToTextSettingsPtrOutput `pulumi:"speechToTextSettings"`
	// Name of the start flow in this agent. A start flow will be automatically created when the agent is created, and can only be deleted by deleting the agent. Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/flows/<Flow ID>.
	StartFlow pulumi.StringOutput `pulumi:"startFlow"`
	// Name of the start playbook in this agent. A start playbook will be automatically created when the agent is created, and can only be deleted by deleting the agent. Format: **projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>/playbooks/<PlaybookID>**. Currently only the default playbook with id "00000000-0000-0000-0000-000000000000" is allowed.
	StartPlaybook pulumi.StringPtrOutput `pulumi:"startPlaybook"`
	// The list of all languages supported by this agent (except for the default_language_code).
	SupportedLanguageCodes pulumi.StringArrayOutput `pulumi:"supportedLanguageCodes"`
	// Settings related to speech synthesizing.
	// Structure is documented below.
	TextToSpeechSettings CxAgentTextToSpeechSettingsPtrOutput `pulumi:"textToSpeechSettings"`
	// The time zone of this agent from the [time zone database](https://www.iana.org/time-zones), e.g., America/New_York,
	// Europe/Paris.
	TimeZone pulumi.StringOutput `pulumi:"timeZone"`
}

// NewCxAgent registers a new resource with the given unique name, arguments, and options.
func NewCxAgent(ctx *pulumi.Context,
	name string, args *CxAgentArgs, opts ...pulumi.ResourceOption) (*CxAgent, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DefaultLanguageCode == nil {
		return nil, errors.New("invalid value for required argument 'DefaultLanguageCode'")
	}
	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	if args.TimeZone == nil {
		return nil, errors.New("invalid value for required argument 'TimeZone'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CxAgent
	err := ctx.RegisterResource("gcp:diagflow/cxAgent:CxAgent", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCxAgent gets an existing CxAgent resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCxAgent(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CxAgentState, opts ...pulumi.ResourceOption) (*CxAgent, error) {
	var resource CxAgent
	err := ctx.ReadResource("gcp:diagflow/cxAgent:CxAgent", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CxAgent resources.
type cxAgentState struct {
	// Hierarchical advanced settings for this agent. The settings exposed at the lower level overrides the settings exposed at the higher level.
	// Hierarchy: Agent->Flow->Page->Fulfillment/Parameter.
	// Structure is documented below.
	AdvancedSettings *CxAgentAdvancedSettings `pulumi:"advancedSettings"`
	// Answer feedback collection settings.
	// Structure is documented below.
	AnswerFeedbackSettings *CxAgentAnswerFeedbackSettings `pulumi:"answerFeedbackSettings"`
	// The URI of the agent's avatar. Avatars are used throughout the Dialogflow console and in the self-hosted Web Demo integration.
	AvatarUri *string `pulumi:"avatarUri"`
	// Settings for custom client certificates.
	// Structure is documented below.
	ClientCertificateSettings *CxAgentClientCertificateSettings `pulumi:"clientCertificateSettings"`
	// The default language of the agent as a language tag. [See Language Support](https://cloud.google.com/dialogflow/cx/docs/reference/language)
	// for a list of the currently supported language codes. This field cannot be updated after creation.
	DefaultLanguageCode       *string `pulumi:"defaultLanguageCode"`
	DeleteChatEngineOnDestroy *bool   `pulumi:"deleteChatEngineOnDestroy"`
	// The description of this agent. The maximum length is 500 characters. If exceeded, the request is rejected.
	Description *string `pulumi:"description"`
	// The human-readable name of the agent, unique within the location.
	DisplayName *string `pulumi:"displayName"`
	// Enable training multi-lingual models for this agent. These models will be trained on all the languages supported by the agent.
	EnableMultiLanguageTraining *bool `pulumi:"enableMultiLanguageTraining"`
	// Indicates if automatic spell correction is enabled in detect intent requests.
	EnableSpellCorrection *bool `pulumi:"enableSpellCorrection"`
	// (Optional, Deprecated)
	// Determines whether this agent should log conversation queries.
	//
	// > **Warning:** `enableStackdriverLogging` is deprecated and will be removed in a future major release. Please use `advanced_settings.logging_settings.enable_stackdriver_logging`instead.
	//
	// Deprecated: `enableStackdriverLogging` is deprecated and will be removed in a future major release. Please use `advanced_settings.logging_settings.enable_stackdriver_logging`instead.
	EnableStackdriverLogging *bool `pulumi:"enableStackdriverLogging"`
	// Gen App Builder-related agent-level settings.
	// Structure is documented below.
	GenAppBuilderSettings *CxAgentGenAppBuilderSettings `pulumi:"genAppBuilderSettings"`
	// Git integration settings for this agent.
	// Structure is documented below.
	GitIntegrationSettings *CxAgentGitIntegrationSettings `pulumi:"gitIntegrationSettings"`
	// The name of the location this agent is located in.
	// > **Note:** The first time you are deploying an Agent in your project you must configure location settings.
	// This is a one time step but at the moment you can only [configure location settings](https://cloud.google.com/dialogflow/cx/docs/concept/region#location-settings) via the Dialogflow CX console.
	// Another options is to use global location so you don't need to manually configure location settings.
	Location *string `pulumi:"location"`
	// Indicates whether the agent is locked for changes. If the agent is locked, modifications to the agent will be rejected except for [agents.restore][].
	Locked *bool `pulumi:"locked"`
	// The unique identifier of the agent.
	Name *string `pulumi:"name"`
	// Settings for end user personalization.
	// Structure is documented below.
	PersonalizationSettings *CxAgentPersonalizationSettings `pulumi:"personalizationSettings"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// A read only boolean field reflecting Zone Isolation status of the agent.
	SatisfiesPzi *bool `pulumi:"satisfiesPzi"`
	// A read only boolean field reflecting Zone Separation status of the agent.
	SatisfiesPzs *bool `pulumi:"satisfiesPzs"`
	// Name of the SecuritySettings reference for the agent. Format: projects/<Project ID>/locations/<Location ID>/securitySettings/<Security Settings ID>.
	SecuritySettings *string `pulumi:"securitySettings"`
	// Settings related to speech recognition.
	// Structure is documented below.
	SpeechToTextSettings *CxAgentSpeechToTextSettings `pulumi:"speechToTextSettings"`
	// Name of the start flow in this agent. A start flow will be automatically created when the agent is created, and can only be deleted by deleting the agent. Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/flows/<Flow ID>.
	StartFlow *string `pulumi:"startFlow"`
	// Name of the start playbook in this agent. A start playbook will be automatically created when the agent is created, and can only be deleted by deleting the agent. Format: **projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>/playbooks/<PlaybookID>**. Currently only the default playbook with id "00000000-0000-0000-0000-000000000000" is allowed.
	StartPlaybook *string `pulumi:"startPlaybook"`
	// The list of all languages supported by this agent (except for the default_language_code).
	SupportedLanguageCodes []string `pulumi:"supportedLanguageCodes"`
	// Settings related to speech synthesizing.
	// Structure is documented below.
	TextToSpeechSettings *CxAgentTextToSpeechSettings `pulumi:"textToSpeechSettings"`
	// The time zone of this agent from the [time zone database](https://www.iana.org/time-zones), e.g., America/New_York,
	// Europe/Paris.
	TimeZone *string `pulumi:"timeZone"`
}

type CxAgentState struct {
	// Hierarchical advanced settings for this agent. The settings exposed at the lower level overrides the settings exposed at the higher level.
	// Hierarchy: Agent->Flow->Page->Fulfillment/Parameter.
	// Structure is documented below.
	AdvancedSettings CxAgentAdvancedSettingsPtrInput
	// Answer feedback collection settings.
	// Structure is documented below.
	AnswerFeedbackSettings CxAgentAnswerFeedbackSettingsPtrInput
	// The URI of the agent's avatar. Avatars are used throughout the Dialogflow console and in the self-hosted Web Demo integration.
	AvatarUri pulumi.StringPtrInput
	// Settings for custom client certificates.
	// Structure is documented below.
	ClientCertificateSettings CxAgentClientCertificateSettingsPtrInput
	// The default language of the agent as a language tag. [See Language Support](https://cloud.google.com/dialogflow/cx/docs/reference/language)
	// for a list of the currently supported language codes. This field cannot be updated after creation.
	DefaultLanguageCode       pulumi.StringPtrInput
	DeleteChatEngineOnDestroy pulumi.BoolPtrInput
	// The description of this agent. The maximum length is 500 characters. If exceeded, the request is rejected.
	Description pulumi.StringPtrInput
	// The human-readable name of the agent, unique within the location.
	DisplayName pulumi.StringPtrInput
	// Enable training multi-lingual models for this agent. These models will be trained on all the languages supported by the agent.
	EnableMultiLanguageTraining pulumi.BoolPtrInput
	// Indicates if automatic spell correction is enabled in detect intent requests.
	EnableSpellCorrection pulumi.BoolPtrInput
	// (Optional, Deprecated)
	// Determines whether this agent should log conversation queries.
	//
	// > **Warning:** `enableStackdriverLogging` is deprecated and will be removed in a future major release. Please use `advanced_settings.logging_settings.enable_stackdriver_logging`instead.
	//
	// Deprecated: `enableStackdriverLogging` is deprecated and will be removed in a future major release. Please use `advanced_settings.logging_settings.enable_stackdriver_logging`instead.
	EnableStackdriverLogging pulumi.BoolPtrInput
	// Gen App Builder-related agent-level settings.
	// Structure is documented below.
	GenAppBuilderSettings CxAgentGenAppBuilderSettingsPtrInput
	// Git integration settings for this agent.
	// Structure is documented below.
	GitIntegrationSettings CxAgentGitIntegrationSettingsPtrInput
	// The name of the location this agent is located in.
	// > **Note:** The first time you are deploying an Agent in your project you must configure location settings.
	// This is a one time step but at the moment you can only [configure location settings](https://cloud.google.com/dialogflow/cx/docs/concept/region#location-settings) via the Dialogflow CX console.
	// Another options is to use global location so you don't need to manually configure location settings.
	Location pulumi.StringPtrInput
	// Indicates whether the agent is locked for changes. If the agent is locked, modifications to the agent will be rejected except for [agents.restore][].
	Locked pulumi.BoolPtrInput
	// The unique identifier of the agent.
	Name pulumi.StringPtrInput
	// Settings for end user personalization.
	// Structure is documented below.
	PersonalizationSettings CxAgentPersonalizationSettingsPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// A read only boolean field reflecting Zone Isolation status of the agent.
	SatisfiesPzi pulumi.BoolPtrInput
	// A read only boolean field reflecting Zone Separation status of the agent.
	SatisfiesPzs pulumi.BoolPtrInput
	// Name of the SecuritySettings reference for the agent. Format: projects/<Project ID>/locations/<Location ID>/securitySettings/<Security Settings ID>.
	SecuritySettings pulumi.StringPtrInput
	// Settings related to speech recognition.
	// Structure is documented below.
	SpeechToTextSettings CxAgentSpeechToTextSettingsPtrInput
	// Name of the start flow in this agent. A start flow will be automatically created when the agent is created, and can only be deleted by deleting the agent. Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/flows/<Flow ID>.
	StartFlow pulumi.StringPtrInput
	// Name of the start playbook in this agent. A start playbook will be automatically created when the agent is created, and can only be deleted by deleting the agent. Format: **projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>/playbooks/<PlaybookID>**. Currently only the default playbook with id "00000000-0000-0000-0000-000000000000" is allowed.
	StartPlaybook pulumi.StringPtrInput
	// The list of all languages supported by this agent (except for the default_language_code).
	SupportedLanguageCodes pulumi.StringArrayInput
	// Settings related to speech synthesizing.
	// Structure is documented below.
	TextToSpeechSettings CxAgentTextToSpeechSettingsPtrInput
	// The time zone of this agent from the [time zone database](https://www.iana.org/time-zones), e.g., America/New_York,
	// Europe/Paris.
	TimeZone pulumi.StringPtrInput
}

func (CxAgentState) ElementType() reflect.Type {
	return reflect.TypeOf((*cxAgentState)(nil)).Elem()
}

type cxAgentArgs struct {
	// Hierarchical advanced settings for this agent. The settings exposed at the lower level overrides the settings exposed at the higher level.
	// Hierarchy: Agent->Flow->Page->Fulfillment/Parameter.
	// Structure is documented below.
	AdvancedSettings *CxAgentAdvancedSettings `pulumi:"advancedSettings"`
	// Answer feedback collection settings.
	// Structure is documented below.
	AnswerFeedbackSettings *CxAgentAnswerFeedbackSettings `pulumi:"answerFeedbackSettings"`
	// The URI of the agent's avatar. Avatars are used throughout the Dialogflow console and in the self-hosted Web Demo integration.
	AvatarUri *string `pulumi:"avatarUri"`
	// Settings for custom client certificates.
	// Structure is documented below.
	ClientCertificateSettings *CxAgentClientCertificateSettings `pulumi:"clientCertificateSettings"`
	// The default language of the agent as a language tag. [See Language Support](https://cloud.google.com/dialogflow/cx/docs/reference/language)
	// for a list of the currently supported language codes. This field cannot be updated after creation.
	DefaultLanguageCode       string `pulumi:"defaultLanguageCode"`
	DeleteChatEngineOnDestroy *bool  `pulumi:"deleteChatEngineOnDestroy"`
	// The description of this agent. The maximum length is 500 characters. If exceeded, the request is rejected.
	Description *string `pulumi:"description"`
	// The human-readable name of the agent, unique within the location.
	DisplayName string `pulumi:"displayName"`
	// Enable training multi-lingual models for this agent. These models will be trained on all the languages supported by the agent.
	EnableMultiLanguageTraining *bool `pulumi:"enableMultiLanguageTraining"`
	// Indicates if automatic spell correction is enabled in detect intent requests.
	EnableSpellCorrection *bool `pulumi:"enableSpellCorrection"`
	// (Optional, Deprecated)
	// Determines whether this agent should log conversation queries.
	//
	// > **Warning:** `enableStackdriverLogging` is deprecated and will be removed in a future major release. Please use `advanced_settings.logging_settings.enable_stackdriver_logging`instead.
	//
	// Deprecated: `enableStackdriverLogging` is deprecated and will be removed in a future major release. Please use `advanced_settings.logging_settings.enable_stackdriver_logging`instead.
	EnableStackdriverLogging *bool `pulumi:"enableStackdriverLogging"`
	// Gen App Builder-related agent-level settings.
	// Structure is documented below.
	GenAppBuilderSettings *CxAgentGenAppBuilderSettings `pulumi:"genAppBuilderSettings"`
	// Git integration settings for this agent.
	// Structure is documented below.
	GitIntegrationSettings *CxAgentGitIntegrationSettings `pulumi:"gitIntegrationSettings"`
	// The name of the location this agent is located in.
	// > **Note:** The first time you are deploying an Agent in your project you must configure location settings.
	// This is a one time step but at the moment you can only [configure location settings](https://cloud.google.com/dialogflow/cx/docs/concept/region#location-settings) via the Dialogflow CX console.
	// Another options is to use global location so you don't need to manually configure location settings.
	Location string `pulumi:"location"`
	// Indicates whether the agent is locked for changes. If the agent is locked, modifications to the agent will be rejected except for [agents.restore][].
	Locked *bool `pulumi:"locked"`
	// Settings for end user personalization.
	// Structure is documented below.
	PersonalizationSettings *CxAgentPersonalizationSettings `pulumi:"personalizationSettings"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// Name of the SecuritySettings reference for the agent. Format: projects/<Project ID>/locations/<Location ID>/securitySettings/<Security Settings ID>.
	SecuritySettings *string `pulumi:"securitySettings"`
	// Settings related to speech recognition.
	// Structure is documented below.
	SpeechToTextSettings *CxAgentSpeechToTextSettings `pulumi:"speechToTextSettings"`
	// Name of the start playbook in this agent. A start playbook will be automatically created when the agent is created, and can only be deleted by deleting the agent. Format: **projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>/playbooks/<PlaybookID>**. Currently only the default playbook with id "00000000-0000-0000-0000-000000000000" is allowed.
	StartPlaybook *string `pulumi:"startPlaybook"`
	// The list of all languages supported by this agent (except for the default_language_code).
	SupportedLanguageCodes []string `pulumi:"supportedLanguageCodes"`
	// Settings related to speech synthesizing.
	// Structure is documented below.
	TextToSpeechSettings *CxAgentTextToSpeechSettings `pulumi:"textToSpeechSettings"`
	// The time zone of this agent from the [time zone database](https://www.iana.org/time-zones), e.g., America/New_York,
	// Europe/Paris.
	TimeZone string `pulumi:"timeZone"`
}

// The set of arguments for constructing a CxAgent resource.
type CxAgentArgs struct {
	// Hierarchical advanced settings for this agent. The settings exposed at the lower level overrides the settings exposed at the higher level.
	// Hierarchy: Agent->Flow->Page->Fulfillment/Parameter.
	// Structure is documented below.
	AdvancedSettings CxAgentAdvancedSettingsPtrInput
	// Answer feedback collection settings.
	// Structure is documented below.
	AnswerFeedbackSettings CxAgentAnswerFeedbackSettingsPtrInput
	// The URI of the agent's avatar. Avatars are used throughout the Dialogflow console and in the self-hosted Web Demo integration.
	AvatarUri pulumi.StringPtrInput
	// Settings for custom client certificates.
	// Structure is documented below.
	ClientCertificateSettings CxAgentClientCertificateSettingsPtrInput
	// The default language of the agent as a language tag. [See Language Support](https://cloud.google.com/dialogflow/cx/docs/reference/language)
	// for a list of the currently supported language codes. This field cannot be updated after creation.
	DefaultLanguageCode       pulumi.StringInput
	DeleteChatEngineOnDestroy pulumi.BoolPtrInput
	// The description of this agent. The maximum length is 500 characters. If exceeded, the request is rejected.
	Description pulumi.StringPtrInput
	// The human-readable name of the agent, unique within the location.
	DisplayName pulumi.StringInput
	// Enable training multi-lingual models for this agent. These models will be trained on all the languages supported by the agent.
	EnableMultiLanguageTraining pulumi.BoolPtrInput
	// Indicates if automatic spell correction is enabled in detect intent requests.
	EnableSpellCorrection pulumi.BoolPtrInput
	// (Optional, Deprecated)
	// Determines whether this agent should log conversation queries.
	//
	// > **Warning:** `enableStackdriverLogging` is deprecated and will be removed in a future major release. Please use `advanced_settings.logging_settings.enable_stackdriver_logging`instead.
	//
	// Deprecated: `enableStackdriverLogging` is deprecated and will be removed in a future major release. Please use `advanced_settings.logging_settings.enable_stackdriver_logging`instead.
	EnableStackdriverLogging pulumi.BoolPtrInput
	// Gen App Builder-related agent-level settings.
	// Structure is documented below.
	GenAppBuilderSettings CxAgentGenAppBuilderSettingsPtrInput
	// Git integration settings for this agent.
	// Structure is documented below.
	GitIntegrationSettings CxAgentGitIntegrationSettingsPtrInput
	// The name of the location this agent is located in.
	// > **Note:** The first time you are deploying an Agent in your project you must configure location settings.
	// This is a one time step but at the moment you can only [configure location settings](https://cloud.google.com/dialogflow/cx/docs/concept/region#location-settings) via the Dialogflow CX console.
	// Another options is to use global location so you don't need to manually configure location settings.
	Location pulumi.StringInput
	// Indicates whether the agent is locked for changes. If the agent is locked, modifications to the agent will be rejected except for [agents.restore][].
	Locked pulumi.BoolPtrInput
	// Settings for end user personalization.
	// Structure is documented below.
	PersonalizationSettings CxAgentPersonalizationSettingsPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// Name of the SecuritySettings reference for the agent. Format: projects/<Project ID>/locations/<Location ID>/securitySettings/<Security Settings ID>.
	SecuritySettings pulumi.StringPtrInput
	// Settings related to speech recognition.
	// Structure is documented below.
	SpeechToTextSettings CxAgentSpeechToTextSettingsPtrInput
	// Name of the start playbook in this agent. A start playbook will be automatically created when the agent is created, and can only be deleted by deleting the agent. Format: **projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>/playbooks/<PlaybookID>**. Currently only the default playbook with id "00000000-0000-0000-0000-000000000000" is allowed.
	StartPlaybook pulumi.StringPtrInput
	// The list of all languages supported by this agent (except for the default_language_code).
	SupportedLanguageCodes pulumi.StringArrayInput
	// Settings related to speech synthesizing.
	// Structure is documented below.
	TextToSpeechSettings CxAgentTextToSpeechSettingsPtrInput
	// The time zone of this agent from the [time zone database](https://www.iana.org/time-zones), e.g., America/New_York,
	// Europe/Paris.
	TimeZone pulumi.StringInput
}

func (CxAgentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cxAgentArgs)(nil)).Elem()
}

type CxAgentInput interface {
	pulumi.Input

	ToCxAgentOutput() CxAgentOutput
	ToCxAgentOutputWithContext(ctx context.Context) CxAgentOutput
}

func (*CxAgent) ElementType() reflect.Type {
	return reflect.TypeOf((**CxAgent)(nil)).Elem()
}

func (i *CxAgent) ToCxAgentOutput() CxAgentOutput {
	return i.ToCxAgentOutputWithContext(context.Background())
}

func (i *CxAgent) ToCxAgentOutputWithContext(ctx context.Context) CxAgentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CxAgentOutput)
}

// CxAgentArrayInput is an input type that accepts CxAgentArray and CxAgentArrayOutput values.
// You can construct a concrete instance of `CxAgentArrayInput` via:
//
//	CxAgentArray{ CxAgentArgs{...} }
type CxAgentArrayInput interface {
	pulumi.Input

	ToCxAgentArrayOutput() CxAgentArrayOutput
	ToCxAgentArrayOutputWithContext(context.Context) CxAgentArrayOutput
}

type CxAgentArray []CxAgentInput

func (CxAgentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CxAgent)(nil)).Elem()
}

func (i CxAgentArray) ToCxAgentArrayOutput() CxAgentArrayOutput {
	return i.ToCxAgentArrayOutputWithContext(context.Background())
}

func (i CxAgentArray) ToCxAgentArrayOutputWithContext(ctx context.Context) CxAgentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CxAgentArrayOutput)
}

// CxAgentMapInput is an input type that accepts CxAgentMap and CxAgentMapOutput values.
// You can construct a concrete instance of `CxAgentMapInput` via:
//
//	CxAgentMap{ "key": CxAgentArgs{...} }
type CxAgentMapInput interface {
	pulumi.Input

	ToCxAgentMapOutput() CxAgentMapOutput
	ToCxAgentMapOutputWithContext(context.Context) CxAgentMapOutput
}

type CxAgentMap map[string]CxAgentInput

func (CxAgentMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CxAgent)(nil)).Elem()
}

func (i CxAgentMap) ToCxAgentMapOutput() CxAgentMapOutput {
	return i.ToCxAgentMapOutputWithContext(context.Background())
}

func (i CxAgentMap) ToCxAgentMapOutputWithContext(ctx context.Context) CxAgentMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CxAgentMapOutput)
}

type CxAgentOutput struct{ *pulumi.OutputState }

func (CxAgentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CxAgent)(nil)).Elem()
}

func (o CxAgentOutput) ToCxAgentOutput() CxAgentOutput {
	return o
}

func (o CxAgentOutput) ToCxAgentOutputWithContext(ctx context.Context) CxAgentOutput {
	return o
}

// Hierarchical advanced settings for this agent. The settings exposed at the lower level overrides the settings exposed at the higher level.
// Hierarchy: Agent->Flow->Page->Fulfillment/Parameter.
// Structure is documented below.
func (o CxAgentOutput) AdvancedSettings() CxAgentAdvancedSettingsOutput {
	return o.ApplyT(func(v *CxAgent) CxAgentAdvancedSettingsOutput { return v.AdvancedSettings }).(CxAgentAdvancedSettingsOutput)
}

// Answer feedback collection settings.
// Structure is documented below.
func (o CxAgentOutput) AnswerFeedbackSettings() CxAgentAnswerFeedbackSettingsPtrOutput {
	return o.ApplyT(func(v *CxAgent) CxAgentAnswerFeedbackSettingsPtrOutput { return v.AnswerFeedbackSettings }).(CxAgentAnswerFeedbackSettingsPtrOutput)
}

// The URI of the agent's avatar. Avatars are used throughout the Dialogflow console and in the self-hosted Web Demo integration.
func (o CxAgentOutput) AvatarUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CxAgent) pulumi.StringPtrOutput { return v.AvatarUri }).(pulumi.StringPtrOutput)
}

// Settings for custom client certificates.
// Structure is documented below.
func (o CxAgentOutput) ClientCertificateSettings() CxAgentClientCertificateSettingsPtrOutput {
	return o.ApplyT(func(v *CxAgent) CxAgentClientCertificateSettingsPtrOutput { return v.ClientCertificateSettings }).(CxAgentClientCertificateSettingsPtrOutput)
}

// The default language of the agent as a language tag. [See Language Support](https://cloud.google.com/dialogflow/cx/docs/reference/language)
// for a list of the currently supported language codes. This field cannot be updated after creation.
func (o CxAgentOutput) DefaultLanguageCode() pulumi.StringOutput {
	return o.ApplyT(func(v *CxAgent) pulumi.StringOutput { return v.DefaultLanguageCode }).(pulumi.StringOutput)
}

func (o CxAgentOutput) DeleteChatEngineOnDestroy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CxAgent) pulumi.BoolPtrOutput { return v.DeleteChatEngineOnDestroy }).(pulumi.BoolPtrOutput)
}

// The description of this agent. The maximum length is 500 characters. If exceeded, the request is rejected.
func (o CxAgentOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CxAgent) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The human-readable name of the agent, unique within the location.
func (o CxAgentOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *CxAgent) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// Enable training multi-lingual models for this agent. These models will be trained on all the languages supported by the agent.
func (o CxAgentOutput) EnableMultiLanguageTraining() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CxAgent) pulumi.BoolPtrOutput { return v.EnableMultiLanguageTraining }).(pulumi.BoolPtrOutput)
}

// Indicates if automatic spell correction is enabled in detect intent requests.
func (o CxAgentOutput) EnableSpellCorrection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CxAgent) pulumi.BoolPtrOutput { return v.EnableSpellCorrection }).(pulumi.BoolPtrOutput)
}

// (Optional, Deprecated)
// Determines whether this agent should log conversation queries.
//
// > **Warning:** `enableStackdriverLogging` is deprecated and will be removed in a future major release. Please use `advanced_settings.logging_settings.enable_stackdriver_logging`instead.
//
// Deprecated: `enableStackdriverLogging` is deprecated and will be removed in a future major release. Please use `advanced_settings.logging_settings.enable_stackdriver_logging`instead.
func (o CxAgentOutput) EnableStackdriverLogging() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CxAgent) pulumi.BoolPtrOutput { return v.EnableStackdriverLogging }).(pulumi.BoolPtrOutput)
}

// Gen App Builder-related agent-level settings.
// Structure is documented below.
func (o CxAgentOutput) GenAppBuilderSettings() CxAgentGenAppBuilderSettingsOutput {
	return o.ApplyT(func(v *CxAgent) CxAgentGenAppBuilderSettingsOutput { return v.GenAppBuilderSettings }).(CxAgentGenAppBuilderSettingsOutput)
}

// Git integration settings for this agent.
// Structure is documented below.
func (o CxAgentOutput) GitIntegrationSettings() CxAgentGitIntegrationSettingsPtrOutput {
	return o.ApplyT(func(v *CxAgent) CxAgentGitIntegrationSettingsPtrOutput { return v.GitIntegrationSettings }).(CxAgentGitIntegrationSettingsPtrOutput)
}

// The name of the location this agent is located in.
// > **Note:** The first time you are deploying an Agent in your project you must configure location settings.
// This is a one time step but at the moment you can only [configure location settings](https://cloud.google.com/dialogflow/cx/docs/concept/region#location-settings) via the Dialogflow CX console.
// Another options is to use global location so you don't need to manually configure location settings.
func (o CxAgentOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *CxAgent) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Indicates whether the agent is locked for changes. If the agent is locked, modifications to the agent will be rejected except for [agents.restore][].
func (o CxAgentOutput) Locked() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CxAgent) pulumi.BoolPtrOutput { return v.Locked }).(pulumi.BoolPtrOutput)
}

// The unique identifier of the agent.
func (o CxAgentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CxAgent) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Settings for end user personalization.
// Structure is documented below.
func (o CxAgentOutput) PersonalizationSettings() CxAgentPersonalizationSettingsPtrOutput {
	return o.ApplyT(func(v *CxAgent) CxAgentPersonalizationSettingsPtrOutput { return v.PersonalizationSettings }).(CxAgentPersonalizationSettingsPtrOutput)
}

// The ID of the project in which the resource belongs.
// If it is not provided, the provider project is used.
func (o CxAgentOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *CxAgent) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// A read only boolean field reflecting Zone Isolation status of the agent.
func (o CxAgentOutput) SatisfiesPzi() pulumi.BoolOutput {
	return o.ApplyT(func(v *CxAgent) pulumi.BoolOutput { return v.SatisfiesPzi }).(pulumi.BoolOutput)
}

// A read only boolean field reflecting Zone Separation status of the agent.
func (o CxAgentOutput) SatisfiesPzs() pulumi.BoolOutput {
	return o.ApplyT(func(v *CxAgent) pulumi.BoolOutput { return v.SatisfiesPzs }).(pulumi.BoolOutput)
}

// Name of the SecuritySettings reference for the agent. Format: projects/<Project ID>/locations/<Location ID>/securitySettings/<Security Settings ID>.
func (o CxAgentOutput) SecuritySettings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CxAgent) pulumi.StringPtrOutput { return v.SecuritySettings }).(pulumi.StringPtrOutput)
}

// Settings related to speech recognition.
// Structure is documented below.
func (o CxAgentOutput) SpeechToTextSettings() CxAgentSpeechToTextSettingsPtrOutput {
	return o.ApplyT(func(v *CxAgent) CxAgentSpeechToTextSettingsPtrOutput { return v.SpeechToTextSettings }).(CxAgentSpeechToTextSettingsPtrOutput)
}

// Name of the start flow in this agent. A start flow will be automatically created when the agent is created, and can only be deleted by deleting the agent. Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/flows/<Flow ID>.
func (o CxAgentOutput) StartFlow() pulumi.StringOutput {
	return o.ApplyT(func(v *CxAgent) pulumi.StringOutput { return v.StartFlow }).(pulumi.StringOutput)
}

// Name of the start playbook in this agent. A start playbook will be automatically created when the agent is created, and can only be deleted by deleting the agent. Format: **projects/<ProjectID>/locations/<LocationID>/agents/<AgentID>/playbooks/<PlaybookID>**. Currently only the default playbook with id "00000000-0000-0000-0000-000000000000" is allowed.
func (o CxAgentOutput) StartPlaybook() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CxAgent) pulumi.StringPtrOutput { return v.StartPlaybook }).(pulumi.StringPtrOutput)
}

// The list of all languages supported by this agent (except for the default_language_code).
func (o CxAgentOutput) SupportedLanguageCodes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CxAgent) pulumi.StringArrayOutput { return v.SupportedLanguageCodes }).(pulumi.StringArrayOutput)
}

// Settings related to speech synthesizing.
// Structure is documented below.
func (o CxAgentOutput) TextToSpeechSettings() CxAgentTextToSpeechSettingsPtrOutput {
	return o.ApplyT(func(v *CxAgent) CxAgentTextToSpeechSettingsPtrOutput { return v.TextToSpeechSettings }).(CxAgentTextToSpeechSettingsPtrOutput)
}

// The time zone of this agent from the [time zone database](https://www.iana.org/time-zones), e.g., America/New_York,
// Europe/Paris.
func (o CxAgentOutput) TimeZone() pulumi.StringOutput {
	return o.ApplyT(func(v *CxAgent) pulumi.StringOutput { return v.TimeZone }).(pulumi.StringOutput)
}

type CxAgentArrayOutput struct{ *pulumi.OutputState }

func (CxAgentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CxAgent)(nil)).Elem()
}

func (o CxAgentArrayOutput) ToCxAgentArrayOutput() CxAgentArrayOutput {
	return o
}

func (o CxAgentArrayOutput) ToCxAgentArrayOutputWithContext(ctx context.Context) CxAgentArrayOutput {
	return o
}

func (o CxAgentArrayOutput) Index(i pulumi.IntInput) CxAgentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CxAgent {
		return vs[0].([]*CxAgent)[vs[1].(int)]
	}).(CxAgentOutput)
}

type CxAgentMapOutput struct{ *pulumi.OutputState }

func (CxAgentMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CxAgent)(nil)).Elem()
}

func (o CxAgentMapOutput) ToCxAgentMapOutput() CxAgentMapOutput {
	return o
}

func (o CxAgentMapOutput) ToCxAgentMapOutputWithContext(ctx context.Context) CxAgentMapOutput {
	return o
}

func (o CxAgentMapOutput) MapIndex(k pulumi.StringInput) CxAgentOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CxAgent {
		return vs[0].(map[string]*CxAgent)[vs[1].(string)]
	}).(CxAgentOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CxAgentInput)(nil)).Elem(), &CxAgent{})
	pulumi.RegisterInputType(reflect.TypeOf((*CxAgentArrayInput)(nil)).Elem(), CxAgentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CxAgentMapInput)(nil)).Elem(), CxAgentMap{})
	pulumi.RegisterOutputType(CxAgentOutput{})
	pulumi.RegisterOutputType(CxAgentArrayOutput{})
	pulumi.RegisterOutputType(CxAgentMapOutput{})
}
