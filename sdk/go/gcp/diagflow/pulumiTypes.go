// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package diagflow

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type IntentFollowupIntentInfo struct {
	FollowupIntentName *string `pulumi:"followupIntentName"`
	// The unique identifier of the parent intent in the chain of followup intents.
	// Format: projects/<Project ID>/agent/intents/<Intent ID>.
	ParentFollowupIntentName *string `pulumi:"parentFollowupIntentName"`
}

// IntentFollowupIntentInfoInput is an input type that accepts IntentFollowupIntentInfoArgs and IntentFollowupIntentInfoOutput values.
// You can construct a concrete instance of `IntentFollowupIntentInfoInput` via:
//
// 		 IntentFollowupIntentInfoArgs{...}
//
type IntentFollowupIntentInfoInput interface {
	pulumi.Input

	ToIntentFollowupIntentInfoOutput() IntentFollowupIntentInfoOutput
	ToIntentFollowupIntentInfoOutputWithContext(context.Context) IntentFollowupIntentInfoOutput
}

type IntentFollowupIntentInfoArgs struct {
	FollowupIntentName pulumi.StringPtrInput `pulumi:"followupIntentName"`
	// The unique identifier of the parent intent in the chain of followup intents.
	// Format: projects/<Project ID>/agent/intents/<Intent ID>.
	ParentFollowupIntentName pulumi.StringPtrInput `pulumi:"parentFollowupIntentName"`
}

func (IntentFollowupIntentInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntentFollowupIntentInfo)(nil)).Elem()
}

func (i IntentFollowupIntentInfoArgs) ToIntentFollowupIntentInfoOutput() IntentFollowupIntentInfoOutput {
	return i.ToIntentFollowupIntentInfoOutputWithContext(context.Background())
}

func (i IntentFollowupIntentInfoArgs) ToIntentFollowupIntentInfoOutputWithContext(ctx context.Context) IntentFollowupIntentInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntentFollowupIntentInfoOutput)
}

// IntentFollowupIntentInfoArrayInput is an input type that accepts IntentFollowupIntentInfoArray and IntentFollowupIntentInfoArrayOutput values.
// You can construct a concrete instance of `IntentFollowupIntentInfoArrayInput` via:
//
// 		 IntentFollowupIntentInfoArray{ IntentFollowupIntentInfoArgs{...} }
//
type IntentFollowupIntentInfoArrayInput interface {
	pulumi.Input

	ToIntentFollowupIntentInfoArrayOutput() IntentFollowupIntentInfoArrayOutput
	ToIntentFollowupIntentInfoArrayOutputWithContext(context.Context) IntentFollowupIntentInfoArrayOutput
}

type IntentFollowupIntentInfoArray []IntentFollowupIntentInfoInput

func (IntentFollowupIntentInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntentFollowupIntentInfo)(nil)).Elem()
}

func (i IntentFollowupIntentInfoArray) ToIntentFollowupIntentInfoArrayOutput() IntentFollowupIntentInfoArrayOutput {
	return i.ToIntentFollowupIntentInfoArrayOutputWithContext(context.Background())
}

func (i IntentFollowupIntentInfoArray) ToIntentFollowupIntentInfoArrayOutputWithContext(ctx context.Context) IntentFollowupIntentInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntentFollowupIntentInfoArrayOutput)
}

type IntentFollowupIntentInfoOutput struct{ *pulumi.OutputState }

func (IntentFollowupIntentInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntentFollowupIntentInfo)(nil)).Elem()
}

func (o IntentFollowupIntentInfoOutput) ToIntentFollowupIntentInfoOutput() IntentFollowupIntentInfoOutput {
	return o
}

func (o IntentFollowupIntentInfoOutput) ToIntentFollowupIntentInfoOutputWithContext(ctx context.Context) IntentFollowupIntentInfoOutput {
	return o
}

func (o IntentFollowupIntentInfoOutput) FollowupIntentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntentFollowupIntentInfo) *string { return v.FollowupIntentName }).(pulumi.StringPtrOutput)
}

// The unique identifier of the parent intent in the chain of followup intents.
// Format: projects/<Project ID>/agent/intents/<Intent ID>.
func (o IntentFollowupIntentInfoOutput) ParentFollowupIntentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntentFollowupIntentInfo) *string { return v.ParentFollowupIntentName }).(pulumi.StringPtrOutput)
}

type IntentFollowupIntentInfoArrayOutput struct{ *pulumi.OutputState }

func (IntentFollowupIntentInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntentFollowupIntentInfo)(nil)).Elem()
}

func (o IntentFollowupIntentInfoArrayOutput) ToIntentFollowupIntentInfoArrayOutput() IntentFollowupIntentInfoArrayOutput {
	return o
}

func (o IntentFollowupIntentInfoArrayOutput) ToIntentFollowupIntentInfoArrayOutputWithContext(ctx context.Context) IntentFollowupIntentInfoArrayOutput {
	return o
}

func (o IntentFollowupIntentInfoArrayOutput) Index(i pulumi.IntInput) IntentFollowupIntentInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IntentFollowupIntentInfo {
		return vs[0].([]IntentFollowupIntentInfo)[vs[1].(int)]
	}).(IntentFollowupIntentInfoOutput)
}

func init() {
	pulumi.RegisterOutputType(IntentFollowupIntentInfoOutput{})
	pulumi.RegisterOutputType(IntentFollowupIntentInfoArrayOutput{})
}
