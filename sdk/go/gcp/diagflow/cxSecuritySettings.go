// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package diagflow

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Represents the settings related to security issues, such as data redaction and data retention. It may take hours for updates on the settings to propagate to all the related components and take effect.
// Multiple security settings can be configured in each location. Each agent can specify the security settings to apply, and each setting can be applied to multiple agents in the same project and location.
//
// To get more information about SecuritySettings, see:
//
// * [API documentation](https://cloud.google.com/dialogflow/cx/docs/reference/rest/v3/projects.locations.securitySettings)
// * How-to Guides
//   - [Official Documentation](https://cloud.google.com/dialogflow/cx/docs)
//
// ## Example Usage
// ### Dialogflowcx Security Settings Basic
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/diagflow"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := diagflow.NewCxSecuritySettings(ctx, "basicSecuritySettings", &diagflow.CxSecuritySettingsArgs{
//				DisplayName:         pulumi.String("dialogflowcx-security-settings"),
//				Location:            pulumi.String("global"),
//				PurgeDataTypes:      pulumi.StringArray{},
//				RetentionWindowDays: pulumi.Int(7),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Dialogflowcx Security Settings Full
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/dataloss"
//	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/diagflow"
//	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/storage"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			inspect, err := dataloss.NewPreventionInspectTemplate(ctx, "inspect", &dataloss.PreventionInspectTemplateArgs{
//				Parent:      pulumi.String("projects/my-project-name/locations/global"),
//				DisplayName: pulumi.String("dialogflowcx-inspect-template"),
//				InspectConfig: &dataloss.PreventionInspectTemplateInspectConfigArgs{
//					InfoTypes: dataloss.PreventionInspectTemplateInspectConfigInfoTypeArray{
//						&dataloss.PreventionInspectTemplateInspectConfigInfoTypeArgs{
//							Name: pulumi.String("EMAIL_ADDRESS"),
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			deidentify, err := dataloss.NewPreventionDeidentifyTemplate(ctx, "deidentify", &dataloss.PreventionDeidentifyTemplateArgs{
//				Parent:      pulumi.String("projects/my-project-name/locations/global"),
//				DisplayName: pulumi.String("dialogflowcx-deidentify-template"),
//				DeidentifyConfig: &dataloss.PreventionDeidentifyTemplateDeidentifyConfigArgs{
//					InfoTypeTransformations: &dataloss.PreventionDeidentifyTemplateDeidentifyConfigInfoTypeTransformationsArgs{
//						Transformations: dataloss.PreventionDeidentifyTemplateDeidentifyConfigInfoTypeTransformationsTransformationArray{
//							&dataloss.PreventionDeidentifyTemplateDeidentifyConfigInfoTypeTransformationsTransformationArgs{
//								PrimitiveTransformation: &dataloss.PreventionDeidentifyTemplateDeidentifyConfigInfoTypeTransformationsTransformationPrimitiveTransformationArgs{
//									ReplaceConfig: &dataloss.PreventionDeidentifyTemplateDeidentifyConfigInfoTypeTransformationsTransformationPrimitiveTransformationReplaceConfigArgs{
//										NewValue: &dataloss.PreventionDeidentifyTemplateDeidentifyConfigInfoTypeTransformationsTransformationPrimitiveTransformationReplaceConfigNewValueArgs{
//											StringValue: pulumi.String("[REDACTED]"),
//										},
//									},
//								},
//							},
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			bucket, err := storage.NewBucket(ctx, "bucket", &storage.BucketArgs{
//				Location:                 pulumi.String("US"),
//				UniformBucketLevelAccess: pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = diagflow.NewCxSecuritySettings(ctx, "basicSecuritySettings", &diagflow.CxSecuritySettingsArgs{
//				DisplayName:        pulumi.String("dialogflowcx-security-settings"),
//				Location:           pulumi.String("global"),
//				RedactionStrategy:  pulumi.String("REDACT_WITH_SERVICE"),
//				RedactionScope:     pulumi.String("REDACT_DISK_STORAGE"),
//				InspectTemplate:    inspect.ID(),
//				DeidentifyTemplate: deidentify.ID(),
//				PurgeDataTypes: pulumi.StringArray{
//					pulumi.String("DIALOGFLOW_HISTORY"),
//				},
//				AudioExportSettings: &diagflow.CxSecuritySettingsAudioExportSettingsArgs{
//					GcsBucket:            bucket.ID(),
//					AudioExportPattern:   pulumi.String("export"),
//					EnableAudioRedaction: pulumi.Bool(true),
//					AudioFormat:          pulumi.String("OGG"),
//				},
//				InsightsExportSettings: &diagflow.CxSecuritySettingsInsightsExportSettingsArgs{
//					EnableInsightsExport: pulumi.Bool(true),
//				},
//				RetentionStrategy: pulumi.String("REMOVE_AFTER_CONVERSATION"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// # SecuritySettings can be imported using any of these accepted formats
//
// ```sh
//
//	$ pulumi import gcp:diagflow/cxSecuritySettings:CxSecuritySettings default projects/{{project}}/locations/{{location}}/securitySettings/{{name}}
//
// ```
//
// ```sh
//
//	$ pulumi import gcp:diagflow/cxSecuritySettings:CxSecuritySettings default {{project}}/{{location}}/{{name}}
//
// ```
//
// ```sh
//
//	$ pulumi import gcp:diagflow/cxSecuritySettings:CxSecuritySettings default {{location}}/{{name}}
//
// ```
type CxSecuritySettings struct {
	pulumi.CustomResourceState

	// Controls audio export settings for post-conversation analytics when ingesting audio to conversations.
	// If retentionStrategy is set to REMOVE_AFTER_CONVERSATION or gcsBucket is empty, audio export is disabled.
	// If audio export is enabled, audio is recorded and saved to gcs_bucket, subject to retention policy of gcs_bucket.
	// This setting won't effect audio input for implicit sessions via [Sessions.DetectIntent](https://cloud.google.com/dialogflow/cx/docs/reference/rest/v3/projects.locations.agents.sessions/detectIntent#google.cloud.dialogflow.cx.v3.Sessions.DetectIntent).
	// Structure is documented below.
	AudioExportSettings CxSecuritySettingsAudioExportSettingsPtrOutput `pulumi:"audioExportSettings"`
	// [DLP](https://cloud.google.com/dlp/docs) deidentify template name. Use this template to define de-identification configuration for the content. If empty, Dialogflow replaces sensitive info with [redacted] text.
	// Note: deidentifyTemplate must be located in the same region as the SecuritySettings.
	// Format: projects/<Project ID>/locations/<Location ID>/deidentifyTemplates/<Template ID> OR organizations/<Organization ID>/locations/<Location ID>/deidentifyTemplates/<Template ID>
	DeidentifyTemplate pulumi.StringPtrOutput `pulumi:"deidentifyTemplate"`
	// The human-readable name of the security settings, unique within the location.
	//
	// ***
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// Controls conversation exporting settings to Insights after conversation is completed.
	// If retentionStrategy is set to REMOVE_AFTER_CONVERSATION, Insights export is disabled no matter what you configure here.
	// Structure is documented below.
	InsightsExportSettings CxSecuritySettingsInsightsExportSettingsPtrOutput `pulumi:"insightsExportSettings"`
	// [DLP](https://cloud.google.com/dlp/docs) inspect template name. Use this template to define inspect base settings. If empty, we use the default DLP inspect config.
	// Note: inspectTemplate must be located in the same region as the SecuritySettings.
	// Format: projects/<Project ID>/locations/<Location ID>/inspectTemplates/<Template ID> OR organizations/<Organization ID>/locations/<Location ID>/inspectTemplates/<Template ID>
	InspectTemplate pulumi.StringPtrOutput `pulumi:"inspectTemplate"`
	// The location these settings are located in. Settings can only be applied to an agent in the same location.
	// See [Available Regions](https://cloud.google.com/dialogflow/cx/docs/concept/region#avail) for a list of supported locations.
	Location pulumi.StringOutput `pulumi:"location"`
	// The unique identifier of the settings.
	// Format: projects/<Project ID>/locations/<Location ID>/securitySettings/<Security Settings ID>.
	Name pulumi.StringOutput `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
	// List of types of data to remove when retention settings triggers purge.
	// Each value may be one of: `DIALOGFLOW_HISTORY`.
	PurgeDataTypes pulumi.StringArrayOutput `pulumi:"purgeDataTypes"`
	// Defines what types of data to redact. If not set, defaults to not redacting any kind of data.
	// * REDACT_DISK_STORAGE: On data to be written to disk or similar devices that are capable of holding data even if power is disconnected. This includes data that are temporarily saved on disk.
	//   Possible values are: `REDACT_DISK_STORAGE`.
	RedactionScope pulumi.StringPtrOutput `pulumi:"redactionScope"`
	// Defines how we redact data. If not set, defaults to not redacting.
	// * REDACT_WITH_SERVICE: Call redaction service to clean up the data to be persisted.
	//   Possible values are: `REDACT_WITH_SERVICE`.
	RedactionStrategy pulumi.StringPtrOutput `pulumi:"redactionStrategy"`
	// Defines how long we retain persisted data that contains sensitive info. Only one of `retentionWindowDays` and `retentionStrategy` may be set.
	// * REMOVE_AFTER_CONVERSATION: Removes data when the conversation ends. If there is no conversation explicitly established, a default conversation ends when the corresponding Dialogflow session ends.
	//   Possible values are: `REMOVE_AFTER_CONVERSATION`.
	RetentionStrategy pulumi.StringPtrOutput `pulumi:"retentionStrategy"`
	// Retains the data for the specified number of days. User must set a value lower than Dialogflow's default 365d TTL (30 days for Agent Assist traffic), higher value will be ignored and use default. Setting a value higher than that has no effect. A missing value or setting to 0 also means we use default TTL.
	// Only one of `retentionWindowDays` and `retentionStrategy` may be set.
	RetentionWindowDays pulumi.IntPtrOutput `pulumi:"retentionWindowDays"`
}

// NewCxSecuritySettings registers a new resource with the given unique name, arguments, and options.
func NewCxSecuritySettings(ctx *pulumi.Context,
	name string, args *CxSecuritySettingsArgs, opts ...pulumi.ResourceOption) (*CxSecuritySettings, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CxSecuritySettings
	err := ctx.RegisterResource("gcp:diagflow/cxSecuritySettings:CxSecuritySettings", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCxSecuritySettings gets an existing CxSecuritySettings resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCxSecuritySettings(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CxSecuritySettingsState, opts ...pulumi.ResourceOption) (*CxSecuritySettings, error) {
	var resource CxSecuritySettings
	err := ctx.ReadResource("gcp:diagflow/cxSecuritySettings:CxSecuritySettings", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CxSecuritySettings resources.
type cxSecuritySettingsState struct {
	// Controls audio export settings for post-conversation analytics when ingesting audio to conversations.
	// If retentionStrategy is set to REMOVE_AFTER_CONVERSATION or gcsBucket is empty, audio export is disabled.
	// If audio export is enabled, audio is recorded and saved to gcs_bucket, subject to retention policy of gcs_bucket.
	// This setting won't effect audio input for implicit sessions via [Sessions.DetectIntent](https://cloud.google.com/dialogflow/cx/docs/reference/rest/v3/projects.locations.agents.sessions/detectIntent#google.cloud.dialogflow.cx.v3.Sessions.DetectIntent).
	// Structure is documented below.
	AudioExportSettings *CxSecuritySettingsAudioExportSettings `pulumi:"audioExportSettings"`
	// [DLP](https://cloud.google.com/dlp/docs) deidentify template name. Use this template to define de-identification configuration for the content. If empty, Dialogflow replaces sensitive info with [redacted] text.
	// Note: deidentifyTemplate must be located in the same region as the SecuritySettings.
	// Format: projects/<Project ID>/locations/<Location ID>/deidentifyTemplates/<Template ID> OR organizations/<Organization ID>/locations/<Location ID>/deidentifyTemplates/<Template ID>
	DeidentifyTemplate *string `pulumi:"deidentifyTemplate"`
	// The human-readable name of the security settings, unique within the location.
	//
	// ***
	DisplayName *string `pulumi:"displayName"`
	// Controls conversation exporting settings to Insights after conversation is completed.
	// If retentionStrategy is set to REMOVE_AFTER_CONVERSATION, Insights export is disabled no matter what you configure here.
	// Structure is documented below.
	InsightsExportSettings *CxSecuritySettingsInsightsExportSettings `pulumi:"insightsExportSettings"`
	// [DLP](https://cloud.google.com/dlp/docs) inspect template name. Use this template to define inspect base settings. If empty, we use the default DLP inspect config.
	// Note: inspectTemplate must be located in the same region as the SecuritySettings.
	// Format: projects/<Project ID>/locations/<Location ID>/inspectTemplates/<Template ID> OR organizations/<Organization ID>/locations/<Location ID>/inspectTemplates/<Template ID>
	InspectTemplate *string `pulumi:"inspectTemplate"`
	// The location these settings are located in. Settings can only be applied to an agent in the same location.
	// See [Available Regions](https://cloud.google.com/dialogflow/cx/docs/concept/region#avail) for a list of supported locations.
	Location *string `pulumi:"location"`
	// The unique identifier of the settings.
	// Format: projects/<Project ID>/locations/<Location ID>/securitySettings/<Security Settings ID>.
	Name *string `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// List of types of data to remove when retention settings triggers purge.
	// Each value may be one of: `DIALOGFLOW_HISTORY`.
	PurgeDataTypes []string `pulumi:"purgeDataTypes"`
	// Defines what types of data to redact. If not set, defaults to not redacting any kind of data.
	// * REDACT_DISK_STORAGE: On data to be written to disk or similar devices that are capable of holding data even if power is disconnected. This includes data that are temporarily saved on disk.
	//   Possible values are: `REDACT_DISK_STORAGE`.
	RedactionScope *string `pulumi:"redactionScope"`
	// Defines how we redact data. If not set, defaults to not redacting.
	// * REDACT_WITH_SERVICE: Call redaction service to clean up the data to be persisted.
	//   Possible values are: `REDACT_WITH_SERVICE`.
	RedactionStrategy *string `pulumi:"redactionStrategy"`
	// Defines how long we retain persisted data that contains sensitive info. Only one of `retentionWindowDays` and `retentionStrategy` may be set.
	// * REMOVE_AFTER_CONVERSATION: Removes data when the conversation ends. If there is no conversation explicitly established, a default conversation ends when the corresponding Dialogflow session ends.
	//   Possible values are: `REMOVE_AFTER_CONVERSATION`.
	RetentionStrategy *string `pulumi:"retentionStrategy"`
	// Retains the data for the specified number of days. User must set a value lower than Dialogflow's default 365d TTL (30 days for Agent Assist traffic), higher value will be ignored and use default. Setting a value higher than that has no effect. A missing value or setting to 0 also means we use default TTL.
	// Only one of `retentionWindowDays` and `retentionStrategy` may be set.
	RetentionWindowDays *int `pulumi:"retentionWindowDays"`
}

type CxSecuritySettingsState struct {
	// Controls audio export settings for post-conversation analytics when ingesting audio to conversations.
	// If retentionStrategy is set to REMOVE_AFTER_CONVERSATION or gcsBucket is empty, audio export is disabled.
	// If audio export is enabled, audio is recorded and saved to gcs_bucket, subject to retention policy of gcs_bucket.
	// This setting won't effect audio input for implicit sessions via [Sessions.DetectIntent](https://cloud.google.com/dialogflow/cx/docs/reference/rest/v3/projects.locations.agents.sessions/detectIntent#google.cloud.dialogflow.cx.v3.Sessions.DetectIntent).
	// Structure is documented below.
	AudioExportSettings CxSecuritySettingsAudioExportSettingsPtrInput
	// [DLP](https://cloud.google.com/dlp/docs) deidentify template name. Use this template to define de-identification configuration for the content. If empty, Dialogflow replaces sensitive info with [redacted] text.
	// Note: deidentifyTemplate must be located in the same region as the SecuritySettings.
	// Format: projects/<Project ID>/locations/<Location ID>/deidentifyTemplates/<Template ID> OR organizations/<Organization ID>/locations/<Location ID>/deidentifyTemplates/<Template ID>
	DeidentifyTemplate pulumi.StringPtrInput
	// The human-readable name of the security settings, unique within the location.
	//
	// ***
	DisplayName pulumi.StringPtrInput
	// Controls conversation exporting settings to Insights after conversation is completed.
	// If retentionStrategy is set to REMOVE_AFTER_CONVERSATION, Insights export is disabled no matter what you configure here.
	// Structure is documented below.
	InsightsExportSettings CxSecuritySettingsInsightsExportSettingsPtrInput
	// [DLP](https://cloud.google.com/dlp/docs) inspect template name. Use this template to define inspect base settings. If empty, we use the default DLP inspect config.
	// Note: inspectTemplate must be located in the same region as the SecuritySettings.
	// Format: projects/<Project ID>/locations/<Location ID>/inspectTemplates/<Template ID> OR organizations/<Organization ID>/locations/<Location ID>/inspectTemplates/<Template ID>
	InspectTemplate pulumi.StringPtrInput
	// The location these settings are located in. Settings can only be applied to an agent in the same location.
	// See [Available Regions](https://cloud.google.com/dialogflow/cx/docs/concept/region#avail) for a list of supported locations.
	Location pulumi.StringPtrInput
	// The unique identifier of the settings.
	// Format: projects/<Project ID>/locations/<Location ID>/securitySettings/<Security Settings ID>.
	Name pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// List of types of data to remove when retention settings triggers purge.
	// Each value may be one of: `DIALOGFLOW_HISTORY`.
	PurgeDataTypes pulumi.StringArrayInput
	// Defines what types of data to redact. If not set, defaults to not redacting any kind of data.
	// * REDACT_DISK_STORAGE: On data to be written to disk or similar devices that are capable of holding data even if power is disconnected. This includes data that are temporarily saved on disk.
	//   Possible values are: `REDACT_DISK_STORAGE`.
	RedactionScope pulumi.StringPtrInput
	// Defines how we redact data. If not set, defaults to not redacting.
	// * REDACT_WITH_SERVICE: Call redaction service to clean up the data to be persisted.
	//   Possible values are: `REDACT_WITH_SERVICE`.
	RedactionStrategy pulumi.StringPtrInput
	// Defines how long we retain persisted data that contains sensitive info. Only one of `retentionWindowDays` and `retentionStrategy` may be set.
	// * REMOVE_AFTER_CONVERSATION: Removes data when the conversation ends. If there is no conversation explicitly established, a default conversation ends when the corresponding Dialogflow session ends.
	//   Possible values are: `REMOVE_AFTER_CONVERSATION`.
	RetentionStrategy pulumi.StringPtrInput
	// Retains the data for the specified number of days. User must set a value lower than Dialogflow's default 365d TTL (30 days for Agent Assist traffic), higher value will be ignored and use default. Setting a value higher than that has no effect. A missing value or setting to 0 also means we use default TTL.
	// Only one of `retentionWindowDays` and `retentionStrategy` may be set.
	RetentionWindowDays pulumi.IntPtrInput
}

func (CxSecuritySettingsState) ElementType() reflect.Type {
	return reflect.TypeOf((*cxSecuritySettingsState)(nil)).Elem()
}

type cxSecuritySettingsArgs struct {
	// Controls audio export settings for post-conversation analytics when ingesting audio to conversations.
	// If retentionStrategy is set to REMOVE_AFTER_CONVERSATION or gcsBucket is empty, audio export is disabled.
	// If audio export is enabled, audio is recorded and saved to gcs_bucket, subject to retention policy of gcs_bucket.
	// This setting won't effect audio input for implicit sessions via [Sessions.DetectIntent](https://cloud.google.com/dialogflow/cx/docs/reference/rest/v3/projects.locations.agents.sessions/detectIntent#google.cloud.dialogflow.cx.v3.Sessions.DetectIntent).
	// Structure is documented below.
	AudioExportSettings *CxSecuritySettingsAudioExportSettings `pulumi:"audioExportSettings"`
	// [DLP](https://cloud.google.com/dlp/docs) deidentify template name. Use this template to define de-identification configuration for the content. If empty, Dialogflow replaces sensitive info with [redacted] text.
	// Note: deidentifyTemplate must be located in the same region as the SecuritySettings.
	// Format: projects/<Project ID>/locations/<Location ID>/deidentifyTemplates/<Template ID> OR organizations/<Organization ID>/locations/<Location ID>/deidentifyTemplates/<Template ID>
	DeidentifyTemplate *string `pulumi:"deidentifyTemplate"`
	// The human-readable name of the security settings, unique within the location.
	//
	// ***
	DisplayName string `pulumi:"displayName"`
	// Controls conversation exporting settings to Insights after conversation is completed.
	// If retentionStrategy is set to REMOVE_AFTER_CONVERSATION, Insights export is disabled no matter what you configure here.
	// Structure is documented below.
	InsightsExportSettings *CxSecuritySettingsInsightsExportSettings `pulumi:"insightsExportSettings"`
	// [DLP](https://cloud.google.com/dlp/docs) inspect template name. Use this template to define inspect base settings. If empty, we use the default DLP inspect config.
	// Note: inspectTemplate must be located in the same region as the SecuritySettings.
	// Format: projects/<Project ID>/locations/<Location ID>/inspectTemplates/<Template ID> OR organizations/<Organization ID>/locations/<Location ID>/inspectTemplates/<Template ID>
	InspectTemplate *string `pulumi:"inspectTemplate"`
	// The location these settings are located in. Settings can only be applied to an agent in the same location.
	// See [Available Regions](https://cloud.google.com/dialogflow/cx/docs/concept/region#avail) for a list of supported locations.
	Location string `pulumi:"location"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// List of types of data to remove when retention settings triggers purge.
	// Each value may be one of: `DIALOGFLOW_HISTORY`.
	PurgeDataTypes []string `pulumi:"purgeDataTypes"`
	// Defines what types of data to redact. If not set, defaults to not redacting any kind of data.
	// * REDACT_DISK_STORAGE: On data to be written to disk or similar devices that are capable of holding data even if power is disconnected. This includes data that are temporarily saved on disk.
	//   Possible values are: `REDACT_DISK_STORAGE`.
	RedactionScope *string `pulumi:"redactionScope"`
	// Defines how we redact data. If not set, defaults to not redacting.
	// * REDACT_WITH_SERVICE: Call redaction service to clean up the data to be persisted.
	//   Possible values are: `REDACT_WITH_SERVICE`.
	RedactionStrategy *string `pulumi:"redactionStrategy"`
	// Defines how long we retain persisted data that contains sensitive info. Only one of `retentionWindowDays` and `retentionStrategy` may be set.
	// * REMOVE_AFTER_CONVERSATION: Removes data when the conversation ends. If there is no conversation explicitly established, a default conversation ends when the corresponding Dialogflow session ends.
	//   Possible values are: `REMOVE_AFTER_CONVERSATION`.
	RetentionStrategy *string `pulumi:"retentionStrategy"`
	// Retains the data for the specified number of days. User must set a value lower than Dialogflow's default 365d TTL (30 days for Agent Assist traffic), higher value will be ignored and use default. Setting a value higher than that has no effect. A missing value or setting to 0 also means we use default TTL.
	// Only one of `retentionWindowDays` and `retentionStrategy` may be set.
	RetentionWindowDays *int `pulumi:"retentionWindowDays"`
}

// The set of arguments for constructing a CxSecuritySettings resource.
type CxSecuritySettingsArgs struct {
	// Controls audio export settings for post-conversation analytics when ingesting audio to conversations.
	// If retentionStrategy is set to REMOVE_AFTER_CONVERSATION or gcsBucket is empty, audio export is disabled.
	// If audio export is enabled, audio is recorded and saved to gcs_bucket, subject to retention policy of gcs_bucket.
	// This setting won't effect audio input for implicit sessions via [Sessions.DetectIntent](https://cloud.google.com/dialogflow/cx/docs/reference/rest/v3/projects.locations.agents.sessions/detectIntent#google.cloud.dialogflow.cx.v3.Sessions.DetectIntent).
	// Structure is documented below.
	AudioExportSettings CxSecuritySettingsAudioExportSettingsPtrInput
	// [DLP](https://cloud.google.com/dlp/docs) deidentify template name. Use this template to define de-identification configuration for the content. If empty, Dialogflow replaces sensitive info with [redacted] text.
	// Note: deidentifyTemplate must be located in the same region as the SecuritySettings.
	// Format: projects/<Project ID>/locations/<Location ID>/deidentifyTemplates/<Template ID> OR organizations/<Organization ID>/locations/<Location ID>/deidentifyTemplates/<Template ID>
	DeidentifyTemplate pulumi.StringPtrInput
	// The human-readable name of the security settings, unique within the location.
	//
	// ***
	DisplayName pulumi.StringInput
	// Controls conversation exporting settings to Insights after conversation is completed.
	// If retentionStrategy is set to REMOVE_AFTER_CONVERSATION, Insights export is disabled no matter what you configure here.
	// Structure is documented below.
	InsightsExportSettings CxSecuritySettingsInsightsExportSettingsPtrInput
	// [DLP](https://cloud.google.com/dlp/docs) inspect template name. Use this template to define inspect base settings. If empty, we use the default DLP inspect config.
	// Note: inspectTemplate must be located in the same region as the SecuritySettings.
	// Format: projects/<Project ID>/locations/<Location ID>/inspectTemplates/<Template ID> OR organizations/<Organization ID>/locations/<Location ID>/inspectTemplates/<Template ID>
	InspectTemplate pulumi.StringPtrInput
	// The location these settings are located in. Settings can only be applied to an agent in the same location.
	// See [Available Regions](https://cloud.google.com/dialogflow/cx/docs/concept/region#avail) for a list of supported locations.
	Location pulumi.StringInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// List of types of data to remove when retention settings triggers purge.
	// Each value may be one of: `DIALOGFLOW_HISTORY`.
	PurgeDataTypes pulumi.StringArrayInput
	// Defines what types of data to redact. If not set, defaults to not redacting any kind of data.
	// * REDACT_DISK_STORAGE: On data to be written to disk or similar devices that are capable of holding data even if power is disconnected. This includes data that are temporarily saved on disk.
	//   Possible values are: `REDACT_DISK_STORAGE`.
	RedactionScope pulumi.StringPtrInput
	// Defines how we redact data. If not set, defaults to not redacting.
	// * REDACT_WITH_SERVICE: Call redaction service to clean up the data to be persisted.
	//   Possible values are: `REDACT_WITH_SERVICE`.
	RedactionStrategy pulumi.StringPtrInput
	// Defines how long we retain persisted data that contains sensitive info. Only one of `retentionWindowDays` and `retentionStrategy` may be set.
	// * REMOVE_AFTER_CONVERSATION: Removes data when the conversation ends. If there is no conversation explicitly established, a default conversation ends when the corresponding Dialogflow session ends.
	//   Possible values are: `REMOVE_AFTER_CONVERSATION`.
	RetentionStrategy pulumi.StringPtrInput
	// Retains the data for the specified number of days. User must set a value lower than Dialogflow's default 365d TTL (30 days for Agent Assist traffic), higher value will be ignored and use default. Setting a value higher than that has no effect. A missing value or setting to 0 also means we use default TTL.
	// Only one of `retentionWindowDays` and `retentionStrategy` may be set.
	RetentionWindowDays pulumi.IntPtrInput
}

func (CxSecuritySettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cxSecuritySettingsArgs)(nil)).Elem()
}

type CxSecuritySettingsInput interface {
	pulumi.Input

	ToCxSecuritySettingsOutput() CxSecuritySettingsOutput
	ToCxSecuritySettingsOutputWithContext(ctx context.Context) CxSecuritySettingsOutput
}

func (*CxSecuritySettings) ElementType() reflect.Type {
	return reflect.TypeOf((**CxSecuritySettings)(nil)).Elem()
}

func (i *CxSecuritySettings) ToCxSecuritySettingsOutput() CxSecuritySettingsOutput {
	return i.ToCxSecuritySettingsOutputWithContext(context.Background())
}

func (i *CxSecuritySettings) ToCxSecuritySettingsOutputWithContext(ctx context.Context) CxSecuritySettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CxSecuritySettingsOutput)
}

// CxSecuritySettingsArrayInput is an input type that accepts CxSecuritySettingsArray and CxSecuritySettingsArrayOutput values.
// You can construct a concrete instance of `CxSecuritySettingsArrayInput` via:
//
//	CxSecuritySettingsArray{ CxSecuritySettingsArgs{...} }
type CxSecuritySettingsArrayInput interface {
	pulumi.Input

	ToCxSecuritySettingsArrayOutput() CxSecuritySettingsArrayOutput
	ToCxSecuritySettingsArrayOutputWithContext(context.Context) CxSecuritySettingsArrayOutput
}

type CxSecuritySettingsArray []CxSecuritySettingsInput

func (CxSecuritySettingsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CxSecuritySettings)(nil)).Elem()
}

func (i CxSecuritySettingsArray) ToCxSecuritySettingsArrayOutput() CxSecuritySettingsArrayOutput {
	return i.ToCxSecuritySettingsArrayOutputWithContext(context.Background())
}

func (i CxSecuritySettingsArray) ToCxSecuritySettingsArrayOutputWithContext(ctx context.Context) CxSecuritySettingsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CxSecuritySettingsArrayOutput)
}

// CxSecuritySettingsMapInput is an input type that accepts CxSecuritySettingsMap and CxSecuritySettingsMapOutput values.
// You can construct a concrete instance of `CxSecuritySettingsMapInput` via:
//
//	CxSecuritySettingsMap{ "key": CxSecuritySettingsArgs{...} }
type CxSecuritySettingsMapInput interface {
	pulumi.Input

	ToCxSecuritySettingsMapOutput() CxSecuritySettingsMapOutput
	ToCxSecuritySettingsMapOutputWithContext(context.Context) CxSecuritySettingsMapOutput
}

type CxSecuritySettingsMap map[string]CxSecuritySettingsInput

func (CxSecuritySettingsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CxSecuritySettings)(nil)).Elem()
}

func (i CxSecuritySettingsMap) ToCxSecuritySettingsMapOutput() CxSecuritySettingsMapOutput {
	return i.ToCxSecuritySettingsMapOutputWithContext(context.Background())
}

func (i CxSecuritySettingsMap) ToCxSecuritySettingsMapOutputWithContext(ctx context.Context) CxSecuritySettingsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CxSecuritySettingsMapOutput)
}

type CxSecuritySettingsOutput struct{ *pulumi.OutputState }

func (CxSecuritySettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CxSecuritySettings)(nil)).Elem()
}

func (o CxSecuritySettingsOutput) ToCxSecuritySettingsOutput() CxSecuritySettingsOutput {
	return o
}

func (o CxSecuritySettingsOutput) ToCxSecuritySettingsOutputWithContext(ctx context.Context) CxSecuritySettingsOutput {
	return o
}

// Controls audio export settings for post-conversation analytics when ingesting audio to conversations.
// If retentionStrategy is set to REMOVE_AFTER_CONVERSATION or gcsBucket is empty, audio export is disabled.
// If audio export is enabled, audio is recorded and saved to gcs_bucket, subject to retention policy of gcs_bucket.
// This setting won't effect audio input for implicit sessions via [Sessions.DetectIntent](https://cloud.google.com/dialogflow/cx/docs/reference/rest/v3/projects.locations.agents.sessions/detectIntent#google.cloud.dialogflow.cx.v3.Sessions.DetectIntent).
// Structure is documented below.
func (o CxSecuritySettingsOutput) AudioExportSettings() CxSecuritySettingsAudioExportSettingsPtrOutput {
	return o.ApplyT(func(v *CxSecuritySettings) CxSecuritySettingsAudioExportSettingsPtrOutput {
		return v.AudioExportSettings
	}).(CxSecuritySettingsAudioExportSettingsPtrOutput)
}

// [DLP](https://cloud.google.com/dlp/docs) deidentify template name. Use this template to define de-identification configuration for the content. If empty, Dialogflow replaces sensitive info with [redacted] text.
// Note: deidentifyTemplate must be located in the same region as the SecuritySettings.
// Format: projects/<Project ID>/locations/<Location ID>/deidentifyTemplates/<Template ID> OR organizations/<Organization ID>/locations/<Location ID>/deidentifyTemplates/<Template ID>
func (o CxSecuritySettingsOutput) DeidentifyTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CxSecuritySettings) pulumi.StringPtrOutput { return v.DeidentifyTemplate }).(pulumi.StringPtrOutput)
}

// The human-readable name of the security settings, unique within the location.
//
// ***
func (o CxSecuritySettingsOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *CxSecuritySettings) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// Controls conversation exporting settings to Insights after conversation is completed.
// If retentionStrategy is set to REMOVE_AFTER_CONVERSATION, Insights export is disabled no matter what you configure here.
// Structure is documented below.
func (o CxSecuritySettingsOutput) InsightsExportSettings() CxSecuritySettingsInsightsExportSettingsPtrOutput {
	return o.ApplyT(func(v *CxSecuritySettings) CxSecuritySettingsInsightsExportSettingsPtrOutput {
		return v.InsightsExportSettings
	}).(CxSecuritySettingsInsightsExportSettingsPtrOutput)
}

// [DLP](https://cloud.google.com/dlp/docs) inspect template name. Use this template to define inspect base settings. If empty, we use the default DLP inspect config.
// Note: inspectTemplate must be located in the same region as the SecuritySettings.
// Format: projects/<Project ID>/locations/<Location ID>/inspectTemplates/<Template ID> OR organizations/<Organization ID>/locations/<Location ID>/inspectTemplates/<Template ID>
func (o CxSecuritySettingsOutput) InspectTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CxSecuritySettings) pulumi.StringPtrOutput { return v.InspectTemplate }).(pulumi.StringPtrOutput)
}

// The location these settings are located in. Settings can only be applied to an agent in the same location.
// See [Available Regions](https://cloud.google.com/dialogflow/cx/docs/concept/region#avail) for a list of supported locations.
func (o CxSecuritySettingsOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *CxSecuritySettings) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The unique identifier of the settings.
// Format: projects/<Project ID>/locations/<Location ID>/securitySettings/<Security Settings ID>.
func (o CxSecuritySettingsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CxSecuritySettings) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The ID of the project in which the resource belongs.
// If it is not provided, the provider project is used.
func (o CxSecuritySettingsOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *CxSecuritySettings) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// List of types of data to remove when retention settings triggers purge.
// Each value may be one of: `DIALOGFLOW_HISTORY`.
func (o CxSecuritySettingsOutput) PurgeDataTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CxSecuritySettings) pulumi.StringArrayOutput { return v.PurgeDataTypes }).(pulumi.StringArrayOutput)
}

// Defines what types of data to redact. If not set, defaults to not redacting any kind of data.
//   - REDACT_DISK_STORAGE: On data to be written to disk or similar devices that are capable of holding data even if power is disconnected. This includes data that are temporarily saved on disk.
//     Possible values are: `REDACT_DISK_STORAGE`.
func (o CxSecuritySettingsOutput) RedactionScope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CxSecuritySettings) pulumi.StringPtrOutput { return v.RedactionScope }).(pulumi.StringPtrOutput)
}

// Defines how we redact data. If not set, defaults to not redacting.
//   - REDACT_WITH_SERVICE: Call redaction service to clean up the data to be persisted.
//     Possible values are: `REDACT_WITH_SERVICE`.
func (o CxSecuritySettingsOutput) RedactionStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CxSecuritySettings) pulumi.StringPtrOutput { return v.RedactionStrategy }).(pulumi.StringPtrOutput)
}

// Defines how long we retain persisted data that contains sensitive info. Only one of `retentionWindowDays` and `retentionStrategy` may be set.
//   - REMOVE_AFTER_CONVERSATION: Removes data when the conversation ends. If there is no conversation explicitly established, a default conversation ends when the corresponding Dialogflow session ends.
//     Possible values are: `REMOVE_AFTER_CONVERSATION`.
func (o CxSecuritySettingsOutput) RetentionStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CxSecuritySettings) pulumi.StringPtrOutput { return v.RetentionStrategy }).(pulumi.StringPtrOutput)
}

// Retains the data for the specified number of days. User must set a value lower than Dialogflow's default 365d TTL (30 days for Agent Assist traffic), higher value will be ignored and use default. Setting a value higher than that has no effect. A missing value or setting to 0 also means we use default TTL.
// Only one of `retentionWindowDays` and `retentionStrategy` may be set.
func (o CxSecuritySettingsOutput) RetentionWindowDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CxSecuritySettings) pulumi.IntPtrOutput { return v.RetentionWindowDays }).(pulumi.IntPtrOutput)
}

type CxSecuritySettingsArrayOutput struct{ *pulumi.OutputState }

func (CxSecuritySettingsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CxSecuritySettings)(nil)).Elem()
}

func (o CxSecuritySettingsArrayOutput) ToCxSecuritySettingsArrayOutput() CxSecuritySettingsArrayOutput {
	return o
}

func (o CxSecuritySettingsArrayOutput) ToCxSecuritySettingsArrayOutputWithContext(ctx context.Context) CxSecuritySettingsArrayOutput {
	return o
}

func (o CxSecuritySettingsArrayOutput) Index(i pulumi.IntInput) CxSecuritySettingsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CxSecuritySettings {
		return vs[0].([]*CxSecuritySettings)[vs[1].(int)]
	}).(CxSecuritySettingsOutput)
}

type CxSecuritySettingsMapOutput struct{ *pulumi.OutputState }

func (CxSecuritySettingsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CxSecuritySettings)(nil)).Elem()
}

func (o CxSecuritySettingsMapOutput) ToCxSecuritySettingsMapOutput() CxSecuritySettingsMapOutput {
	return o
}

func (o CxSecuritySettingsMapOutput) ToCxSecuritySettingsMapOutputWithContext(ctx context.Context) CxSecuritySettingsMapOutput {
	return o
}

func (o CxSecuritySettingsMapOutput) MapIndex(k pulumi.StringInput) CxSecuritySettingsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CxSecuritySettings {
		return vs[0].(map[string]*CxSecuritySettings)[vs[1].(string)]
	}).(CxSecuritySettingsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CxSecuritySettingsInput)(nil)).Elem(), &CxSecuritySettings{})
	pulumi.RegisterInputType(reflect.TypeOf((*CxSecuritySettingsArrayInput)(nil)).Elem(), CxSecuritySettingsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CxSecuritySettingsMapInput)(nil)).Elem(), CxSecuritySettingsMap{})
	pulumi.RegisterOutputType(CxSecuritySettingsOutput{})
	pulumi.RegisterOutputType(CxSecuritySettingsArrayOutput{})
	pulumi.RegisterOutputType(CxSecuritySettingsMapOutput{})
}
