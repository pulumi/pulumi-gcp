// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package chronicle

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ### Chronicle Watchlist Basic
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/chronicle"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := chronicle.NewWatchlist(ctx, "example", &chronicle.WatchlistArgs{
//				Location:          pulumi.String("us"),
//				Instance:          pulumi.String("00000000-0000-0000-0000-000000000000"),
//				WatchlistId:       pulumi.String("watchlist-name"),
//				Description:       pulumi.String("watchlist-description"),
//				DisplayName:       pulumi.String("watchlist-name"),
//				MultiplyingFactor: pulumi.Float64(1),
//				EntityPopulationMechanism: &chronicle.WatchlistEntityPopulationMechanismArgs{
//					Manual: &chronicle.WatchlistEntityPopulationMechanismManualArgs{},
//				},
//				WatchlistUserPreferences: &chronicle.WatchlistWatchlistUserPreferencesArgs{
//					Pinned: pulumi.Bool(true),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Watchlist can be imported using any of these accepted formats:
//
// * `projects/{{project}}/locations/{{location}}/instances/{{instance}}/watchlists/{{watchlist_id}}`
//
// * `{{project}}/{{location}}/{{instance}}/{{watchlist_id}}`
//
// * `{{location}}/{{instance}}/{{watchlist_id}}`
//
// When using the `pulumi import` command, Watchlist can be imported using one of the formats above. For example:
//
// ```sh
// $ pulumi import gcp:chronicle/watchlist:Watchlist default projects/{{project}}/locations/{{location}}/instances/{{instance}}/watchlists/{{watchlist_id}}
// ```
//
// ```sh
// $ pulumi import gcp:chronicle/watchlist:Watchlist default {{project}}/{{location}}/{{instance}}/{{watchlist_id}}
// ```
//
// ```sh
// $ pulumi import gcp:chronicle/watchlist:Watchlist default {{location}}/{{instance}}/{{watchlist_id}}
// ```
type Watchlist struct {
	pulumi.CustomResourceState

	// Output only. Time the watchlist was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Optional. Description of the watchlist.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Required. Display name of the watchlist.
	// Note that it must be at least one character and less than 63 characters
	// (https://google.aip.dev/148).
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// Count of different types of entities in the watchlist.
	// Structure is documented below.
	EntityCounts WatchlistEntityCountArrayOutput `pulumi:"entityCounts"`
	// Mechanism to populate entities in the watchlist.
	// Structure is documented below.
	EntityPopulationMechanism WatchlistEntityPopulationMechanismOutput `pulumi:"entityPopulationMechanism"`
	// The unique identifier for the Chronicle instance, which is the same as the customer ID.
	Instance pulumi.StringOutput `pulumi:"instance"`
	// The location of the resource. This is the geographical region where the Chronicle instance resides, such as "us" or "europe-west2".
	Location pulumi.StringOutput `pulumi:"location"`
	// Optional. Weight applied to the risk score for entities in this watchlist. The default is 1.0 if it is not specified.
	MultiplyingFactor pulumi.Float64PtrOutput `pulumi:"multiplyingFactor"`
	// Identifier. Resource name of the watchlist. This unique identifier is generated using values provided for the URL parameters.
	// Format:
	// projects/{project}/locations/{location}/instances/{instance}/watchlists/{watchlist}
	Name    pulumi.StringOutput `pulumi:"name"`
	Project pulumi.StringOutput `pulumi:"project"`
	// Output only. Time the watchlist was last updated.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
	// Optional. The ID to use for the watchlist,
	// which will become the final component of the watchlist's resource name.
	// This value should be 4-63 characters, and valid characters
	// are /a-z-/.
	WatchlistId pulumi.StringOutput `pulumi:"watchlistId"`
	// A collection of user preferences for watchlist UI configuration.
	WatchlistUserPreferences WatchlistWatchlistUserPreferencesOutput `pulumi:"watchlistUserPreferences"`
}

// NewWatchlist registers a new resource with the given unique name, arguments, and options.
func NewWatchlist(ctx *pulumi.Context,
	name string, args *WatchlistArgs, opts ...pulumi.ResourceOption) (*Watchlist, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.EntityPopulationMechanism == nil {
		return nil, errors.New("invalid value for required argument 'EntityPopulationMechanism'")
	}
	if args.Instance == nil {
		return nil, errors.New("invalid value for required argument 'Instance'")
	}
	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	if args.WatchlistId == nil {
		return nil, errors.New("invalid value for required argument 'WatchlistId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Watchlist
	err := ctx.RegisterResource("gcp:chronicle/watchlist:Watchlist", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWatchlist gets an existing Watchlist resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWatchlist(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WatchlistState, opts ...pulumi.ResourceOption) (*Watchlist, error) {
	var resource Watchlist
	err := ctx.ReadResource("gcp:chronicle/watchlist:Watchlist", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Watchlist resources.
type watchlistState struct {
	// Output only. Time the watchlist was created.
	CreateTime *string `pulumi:"createTime"`
	// Optional. Description of the watchlist.
	Description *string `pulumi:"description"`
	// Required. Display name of the watchlist.
	// Note that it must be at least one character and less than 63 characters
	// (https://google.aip.dev/148).
	DisplayName *string `pulumi:"displayName"`
	// Count of different types of entities in the watchlist.
	// Structure is documented below.
	EntityCounts []WatchlistEntityCount `pulumi:"entityCounts"`
	// Mechanism to populate entities in the watchlist.
	// Structure is documented below.
	EntityPopulationMechanism *WatchlistEntityPopulationMechanism `pulumi:"entityPopulationMechanism"`
	// The unique identifier for the Chronicle instance, which is the same as the customer ID.
	Instance *string `pulumi:"instance"`
	// The location of the resource. This is the geographical region where the Chronicle instance resides, such as "us" or "europe-west2".
	Location *string `pulumi:"location"`
	// Optional. Weight applied to the risk score for entities in this watchlist. The default is 1.0 if it is not specified.
	MultiplyingFactor *float64 `pulumi:"multiplyingFactor"`
	// Identifier. Resource name of the watchlist. This unique identifier is generated using values provided for the URL parameters.
	// Format:
	// projects/{project}/locations/{location}/instances/{instance}/watchlists/{watchlist}
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
	// Output only. Time the watchlist was last updated.
	UpdateTime *string `pulumi:"updateTime"`
	// Optional. The ID to use for the watchlist,
	// which will become the final component of the watchlist's resource name.
	// This value should be 4-63 characters, and valid characters
	// are /a-z-/.
	WatchlistId *string `pulumi:"watchlistId"`
	// A collection of user preferences for watchlist UI configuration.
	WatchlistUserPreferences *WatchlistWatchlistUserPreferences `pulumi:"watchlistUserPreferences"`
}

type WatchlistState struct {
	// Output only. Time the watchlist was created.
	CreateTime pulumi.StringPtrInput
	// Optional. Description of the watchlist.
	Description pulumi.StringPtrInput
	// Required. Display name of the watchlist.
	// Note that it must be at least one character and less than 63 characters
	// (https://google.aip.dev/148).
	DisplayName pulumi.StringPtrInput
	// Count of different types of entities in the watchlist.
	// Structure is documented below.
	EntityCounts WatchlistEntityCountArrayInput
	// Mechanism to populate entities in the watchlist.
	// Structure is documented below.
	EntityPopulationMechanism WatchlistEntityPopulationMechanismPtrInput
	// The unique identifier for the Chronicle instance, which is the same as the customer ID.
	Instance pulumi.StringPtrInput
	// The location of the resource. This is the geographical region where the Chronicle instance resides, such as "us" or "europe-west2".
	Location pulumi.StringPtrInput
	// Optional. Weight applied to the risk score for entities in this watchlist. The default is 1.0 if it is not specified.
	MultiplyingFactor pulumi.Float64PtrInput
	// Identifier. Resource name of the watchlist. This unique identifier is generated using values provided for the URL parameters.
	// Format:
	// projects/{project}/locations/{location}/instances/{instance}/watchlists/{watchlist}
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// Output only. Time the watchlist was last updated.
	UpdateTime pulumi.StringPtrInput
	// Optional. The ID to use for the watchlist,
	// which will become the final component of the watchlist's resource name.
	// This value should be 4-63 characters, and valid characters
	// are /a-z-/.
	WatchlistId pulumi.StringPtrInput
	// A collection of user preferences for watchlist UI configuration.
	WatchlistUserPreferences WatchlistWatchlistUserPreferencesPtrInput
}

func (WatchlistState) ElementType() reflect.Type {
	return reflect.TypeOf((*watchlistState)(nil)).Elem()
}

type watchlistArgs struct {
	// Optional. Description of the watchlist.
	Description *string `pulumi:"description"`
	// Required. Display name of the watchlist.
	// Note that it must be at least one character and less than 63 characters
	// (https://google.aip.dev/148).
	DisplayName string `pulumi:"displayName"`
	// Mechanism to populate entities in the watchlist.
	// Structure is documented below.
	EntityPopulationMechanism WatchlistEntityPopulationMechanism `pulumi:"entityPopulationMechanism"`
	// The unique identifier for the Chronicle instance, which is the same as the customer ID.
	Instance string `pulumi:"instance"`
	// The location of the resource. This is the geographical region where the Chronicle instance resides, such as "us" or "europe-west2".
	Location string `pulumi:"location"`
	// Optional. Weight applied to the risk score for entities in this watchlist. The default is 1.0 if it is not specified.
	MultiplyingFactor *float64 `pulumi:"multiplyingFactor"`
	Project           *string  `pulumi:"project"`
	// Optional. The ID to use for the watchlist,
	// which will become the final component of the watchlist's resource name.
	// This value should be 4-63 characters, and valid characters
	// are /a-z-/.
	WatchlistId string `pulumi:"watchlistId"`
	// A collection of user preferences for watchlist UI configuration.
	WatchlistUserPreferences *WatchlistWatchlistUserPreferences `pulumi:"watchlistUserPreferences"`
}

// The set of arguments for constructing a Watchlist resource.
type WatchlistArgs struct {
	// Optional. Description of the watchlist.
	Description pulumi.StringPtrInput
	// Required. Display name of the watchlist.
	// Note that it must be at least one character and less than 63 characters
	// (https://google.aip.dev/148).
	DisplayName pulumi.StringInput
	// Mechanism to populate entities in the watchlist.
	// Structure is documented below.
	EntityPopulationMechanism WatchlistEntityPopulationMechanismInput
	// The unique identifier for the Chronicle instance, which is the same as the customer ID.
	Instance pulumi.StringInput
	// The location of the resource. This is the geographical region where the Chronicle instance resides, such as "us" or "europe-west2".
	Location pulumi.StringInput
	// Optional. Weight applied to the risk score for entities in this watchlist. The default is 1.0 if it is not specified.
	MultiplyingFactor pulumi.Float64PtrInput
	Project           pulumi.StringPtrInput
	// Optional. The ID to use for the watchlist,
	// which will become the final component of the watchlist's resource name.
	// This value should be 4-63 characters, and valid characters
	// are /a-z-/.
	WatchlistId pulumi.StringInput
	// A collection of user preferences for watchlist UI configuration.
	WatchlistUserPreferences WatchlistWatchlistUserPreferencesPtrInput
}

func (WatchlistArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*watchlistArgs)(nil)).Elem()
}

type WatchlistInput interface {
	pulumi.Input

	ToWatchlistOutput() WatchlistOutput
	ToWatchlistOutputWithContext(ctx context.Context) WatchlistOutput
}

func (*Watchlist) ElementType() reflect.Type {
	return reflect.TypeOf((**Watchlist)(nil)).Elem()
}

func (i *Watchlist) ToWatchlistOutput() WatchlistOutput {
	return i.ToWatchlistOutputWithContext(context.Background())
}

func (i *Watchlist) ToWatchlistOutputWithContext(ctx context.Context) WatchlistOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WatchlistOutput)
}

// WatchlistArrayInput is an input type that accepts WatchlistArray and WatchlistArrayOutput values.
// You can construct a concrete instance of `WatchlistArrayInput` via:
//
//	WatchlistArray{ WatchlistArgs{...} }
type WatchlistArrayInput interface {
	pulumi.Input

	ToWatchlistArrayOutput() WatchlistArrayOutput
	ToWatchlistArrayOutputWithContext(context.Context) WatchlistArrayOutput
}

type WatchlistArray []WatchlistInput

func (WatchlistArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Watchlist)(nil)).Elem()
}

func (i WatchlistArray) ToWatchlistArrayOutput() WatchlistArrayOutput {
	return i.ToWatchlistArrayOutputWithContext(context.Background())
}

func (i WatchlistArray) ToWatchlistArrayOutputWithContext(ctx context.Context) WatchlistArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WatchlistArrayOutput)
}

// WatchlistMapInput is an input type that accepts WatchlistMap and WatchlistMapOutput values.
// You can construct a concrete instance of `WatchlistMapInput` via:
//
//	WatchlistMap{ "key": WatchlistArgs{...} }
type WatchlistMapInput interface {
	pulumi.Input

	ToWatchlistMapOutput() WatchlistMapOutput
	ToWatchlistMapOutputWithContext(context.Context) WatchlistMapOutput
}

type WatchlistMap map[string]WatchlistInput

func (WatchlistMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Watchlist)(nil)).Elem()
}

func (i WatchlistMap) ToWatchlistMapOutput() WatchlistMapOutput {
	return i.ToWatchlistMapOutputWithContext(context.Background())
}

func (i WatchlistMap) ToWatchlistMapOutputWithContext(ctx context.Context) WatchlistMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WatchlistMapOutput)
}

type WatchlistOutput struct{ *pulumi.OutputState }

func (WatchlistOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Watchlist)(nil)).Elem()
}

func (o WatchlistOutput) ToWatchlistOutput() WatchlistOutput {
	return o
}

func (o WatchlistOutput) ToWatchlistOutputWithContext(ctx context.Context) WatchlistOutput {
	return o
}

// Output only. Time the watchlist was created.
func (o WatchlistOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Watchlist) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Optional. Description of the watchlist.
func (o WatchlistOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Watchlist) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Required. Display name of the watchlist.
// Note that it must be at least one character and less than 63 characters
// (https://google.aip.dev/148).
func (o WatchlistOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *Watchlist) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// Count of different types of entities in the watchlist.
// Structure is documented below.
func (o WatchlistOutput) EntityCounts() WatchlistEntityCountArrayOutput {
	return o.ApplyT(func(v *Watchlist) WatchlistEntityCountArrayOutput { return v.EntityCounts }).(WatchlistEntityCountArrayOutput)
}

// Mechanism to populate entities in the watchlist.
// Structure is documented below.
func (o WatchlistOutput) EntityPopulationMechanism() WatchlistEntityPopulationMechanismOutput {
	return o.ApplyT(func(v *Watchlist) WatchlistEntityPopulationMechanismOutput { return v.EntityPopulationMechanism }).(WatchlistEntityPopulationMechanismOutput)
}

// The unique identifier for the Chronicle instance, which is the same as the customer ID.
func (o WatchlistOutput) Instance() pulumi.StringOutput {
	return o.ApplyT(func(v *Watchlist) pulumi.StringOutput { return v.Instance }).(pulumi.StringOutput)
}

// The location of the resource. This is the geographical region where the Chronicle instance resides, such as "us" or "europe-west2".
func (o WatchlistOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *Watchlist) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Optional. Weight applied to the risk score for entities in this watchlist. The default is 1.0 if it is not specified.
func (o WatchlistOutput) MultiplyingFactor() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *Watchlist) pulumi.Float64PtrOutput { return v.MultiplyingFactor }).(pulumi.Float64PtrOutput)
}

// Identifier. Resource name of the watchlist. This unique identifier is generated using values provided for the URL parameters.
// Format:
// projects/{project}/locations/{location}/instances/{instance}/watchlists/{watchlist}
func (o WatchlistOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Watchlist) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o WatchlistOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *Watchlist) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Output only. Time the watchlist was last updated.
func (o WatchlistOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Watchlist) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

// Optional. The ID to use for the watchlist,
// which will become the final component of the watchlist's resource name.
// This value should be 4-63 characters, and valid characters
// are /a-z-/.
func (o WatchlistOutput) WatchlistId() pulumi.StringOutput {
	return o.ApplyT(func(v *Watchlist) pulumi.StringOutput { return v.WatchlistId }).(pulumi.StringOutput)
}

// A collection of user preferences for watchlist UI configuration.
func (o WatchlistOutput) WatchlistUserPreferences() WatchlistWatchlistUserPreferencesOutput {
	return o.ApplyT(func(v *Watchlist) WatchlistWatchlistUserPreferencesOutput { return v.WatchlistUserPreferences }).(WatchlistWatchlistUserPreferencesOutput)
}

type WatchlistArrayOutput struct{ *pulumi.OutputState }

func (WatchlistArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Watchlist)(nil)).Elem()
}

func (o WatchlistArrayOutput) ToWatchlistArrayOutput() WatchlistArrayOutput {
	return o
}

func (o WatchlistArrayOutput) ToWatchlistArrayOutputWithContext(ctx context.Context) WatchlistArrayOutput {
	return o
}

func (o WatchlistArrayOutput) Index(i pulumi.IntInput) WatchlistOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Watchlist {
		return vs[0].([]*Watchlist)[vs[1].(int)]
	}).(WatchlistOutput)
}

type WatchlistMapOutput struct{ *pulumi.OutputState }

func (WatchlistMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Watchlist)(nil)).Elem()
}

func (o WatchlistMapOutput) ToWatchlistMapOutput() WatchlistMapOutput {
	return o
}

func (o WatchlistMapOutput) ToWatchlistMapOutputWithContext(ctx context.Context) WatchlistMapOutput {
	return o
}

func (o WatchlistMapOutput) MapIndex(k pulumi.StringInput) WatchlistOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Watchlist {
		return vs[0].(map[string]*Watchlist)[vs[1].(string)]
	}).(WatchlistOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WatchlistInput)(nil)).Elem(), &Watchlist{})
	pulumi.RegisterInputType(reflect.TypeOf((*WatchlistArrayInput)(nil)).Elem(), WatchlistArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WatchlistMapInput)(nil)).Elem(), WatchlistMap{})
	pulumi.RegisterOutputType(WatchlistOutput{})
	pulumi.RegisterOutputType(WatchlistArrayOutput{})
	pulumi.RegisterOutputType(WatchlistMapOutput{})
}
