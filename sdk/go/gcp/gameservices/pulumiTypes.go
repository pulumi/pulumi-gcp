// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package gameservices

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type GameServerClusterConnectionInfo struct {
	GkeClusterReference GameServerClusterConnectionInfoGkeClusterReference `pulumi:"gkeClusterReference"`
	Namespace           string                                             `pulumi:"namespace"`
}

type GameServerClusterConnectionInfoInput interface {
	pulumi.Input

	ToGameServerClusterConnectionInfoOutput() GameServerClusterConnectionInfoOutput
	ToGameServerClusterConnectionInfoOutputWithContext(context.Context) GameServerClusterConnectionInfoOutput
}

type GameServerClusterConnectionInfoArgs struct {
	GkeClusterReference GameServerClusterConnectionInfoGkeClusterReferenceInput `pulumi:"gkeClusterReference"`
	Namespace           pulumi.StringInput                                      `pulumi:"namespace"`
}

func (GameServerClusterConnectionInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GameServerClusterConnectionInfo)(nil)).Elem()
}

func (i GameServerClusterConnectionInfoArgs) ToGameServerClusterConnectionInfoOutput() GameServerClusterConnectionInfoOutput {
	return i.ToGameServerClusterConnectionInfoOutputWithContext(context.Background())
}

func (i GameServerClusterConnectionInfoArgs) ToGameServerClusterConnectionInfoOutputWithContext(ctx context.Context) GameServerClusterConnectionInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GameServerClusterConnectionInfoOutput)
}

func (i GameServerClusterConnectionInfoArgs) ToGameServerClusterConnectionInfoPtrOutput() GameServerClusterConnectionInfoPtrOutput {
	return i.ToGameServerClusterConnectionInfoPtrOutputWithContext(context.Background())
}

func (i GameServerClusterConnectionInfoArgs) ToGameServerClusterConnectionInfoPtrOutputWithContext(ctx context.Context) GameServerClusterConnectionInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GameServerClusterConnectionInfoOutput).ToGameServerClusterConnectionInfoPtrOutputWithContext(ctx)
}

type GameServerClusterConnectionInfoPtrInput interface {
	pulumi.Input

	ToGameServerClusterConnectionInfoPtrOutput() GameServerClusterConnectionInfoPtrOutput
	ToGameServerClusterConnectionInfoPtrOutputWithContext(context.Context) GameServerClusterConnectionInfoPtrOutput
}

type gameServerClusterConnectionInfoPtrType GameServerClusterConnectionInfoArgs

func GameServerClusterConnectionInfoPtr(v *GameServerClusterConnectionInfoArgs) GameServerClusterConnectionInfoPtrInput {
	return (*gameServerClusterConnectionInfoPtrType)(v)
}

func (*gameServerClusterConnectionInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GameServerClusterConnectionInfo)(nil)).Elem()
}

func (i *gameServerClusterConnectionInfoPtrType) ToGameServerClusterConnectionInfoPtrOutput() GameServerClusterConnectionInfoPtrOutput {
	return i.ToGameServerClusterConnectionInfoPtrOutputWithContext(context.Background())
}

func (i *gameServerClusterConnectionInfoPtrType) ToGameServerClusterConnectionInfoPtrOutputWithContext(ctx context.Context) GameServerClusterConnectionInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GameServerClusterConnectionInfoPtrOutput)
}

type GameServerClusterConnectionInfoOutput struct{ *pulumi.OutputState }

func (GameServerClusterConnectionInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GameServerClusterConnectionInfo)(nil)).Elem()
}

func (o GameServerClusterConnectionInfoOutput) ToGameServerClusterConnectionInfoOutput() GameServerClusterConnectionInfoOutput {
	return o
}

func (o GameServerClusterConnectionInfoOutput) ToGameServerClusterConnectionInfoOutputWithContext(ctx context.Context) GameServerClusterConnectionInfoOutput {
	return o
}

func (o GameServerClusterConnectionInfoOutput) ToGameServerClusterConnectionInfoPtrOutput() GameServerClusterConnectionInfoPtrOutput {
	return o.ToGameServerClusterConnectionInfoPtrOutputWithContext(context.Background())
}

func (o GameServerClusterConnectionInfoOutput) ToGameServerClusterConnectionInfoPtrOutputWithContext(ctx context.Context) GameServerClusterConnectionInfoPtrOutput {
	return o.ApplyT(func(v GameServerClusterConnectionInfo) *GameServerClusterConnectionInfo {
		return &v
	}).(GameServerClusterConnectionInfoPtrOutput)
}
func (o GameServerClusterConnectionInfoOutput) GkeClusterReference() GameServerClusterConnectionInfoGkeClusterReferenceOutput {
	return o.ApplyT(func(v GameServerClusterConnectionInfo) GameServerClusterConnectionInfoGkeClusterReference {
		return v.GkeClusterReference
	}).(GameServerClusterConnectionInfoGkeClusterReferenceOutput)
}

func (o GameServerClusterConnectionInfoOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GameServerClusterConnectionInfo) string { return v.Namespace }).(pulumi.StringOutput)
}

type GameServerClusterConnectionInfoPtrOutput struct{ *pulumi.OutputState }

func (GameServerClusterConnectionInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GameServerClusterConnectionInfo)(nil)).Elem()
}

func (o GameServerClusterConnectionInfoPtrOutput) ToGameServerClusterConnectionInfoPtrOutput() GameServerClusterConnectionInfoPtrOutput {
	return o
}

func (o GameServerClusterConnectionInfoPtrOutput) ToGameServerClusterConnectionInfoPtrOutputWithContext(ctx context.Context) GameServerClusterConnectionInfoPtrOutput {
	return o
}

func (o GameServerClusterConnectionInfoPtrOutput) Elem() GameServerClusterConnectionInfoOutput {
	return o.ApplyT(func(v *GameServerClusterConnectionInfo) GameServerClusterConnectionInfo { return *v }).(GameServerClusterConnectionInfoOutput)
}

func (o GameServerClusterConnectionInfoPtrOutput) GkeClusterReference() GameServerClusterConnectionInfoGkeClusterReferenceOutput {
	return o.ApplyT(func(v GameServerClusterConnectionInfo) GameServerClusterConnectionInfoGkeClusterReference {
		return v.GkeClusterReference
	}).(GameServerClusterConnectionInfoGkeClusterReferenceOutput)
}

func (o GameServerClusterConnectionInfoPtrOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GameServerClusterConnectionInfo) string { return v.Namespace }).(pulumi.StringOutput)
}

type GameServerClusterConnectionInfoGkeClusterReference struct {
	Cluster string `pulumi:"cluster"`
}

type GameServerClusterConnectionInfoGkeClusterReferenceInput interface {
	pulumi.Input

	ToGameServerClusterConnectionInfoGkeClusterReferenceOutput() GameServerClusterConnectionInfoGkeClusterReferenceOutput
	ToGameServerClusterConnectionInfoGkeClusterReferenceOutputWithContext(context.Context) GameServerClusterConnectionInfoGkeClusterReferenceOutput
}

type GameServerClusterConnectionInfoGkeClusterReferenceArgs struct {
	Cluster pulumi.StringInput `pulumi:"cluster"`
}

func (GameServerClusterConnectionInfoGkeClusterReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GameServerClusterConnectionInfoGkeClusterReference)(nil)).Elem()
}

func (i GameServerClusterConnectionInfoGkeClusterReferenceArgs) ToGameServerClusterConnectionInfoGkeClusterReferenceOutput() GameServerClusterConnectionInfoGkeClusterReferenceOutput {
	return i.ToGameServerClusterConnectionInfoGkeClusterReferenceOutputWithContext(context.Background())
}

func (i GameServerClusterConnectionInfoGkeClusterReferenceArgs) ToGameServerClusterConnectionInfoGkeClusterReferenceOutputWithContext(ctx context.Context) GameServerClusterConnectionInfoGkeClusterReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GameServerClusterConnectionInfoGkeClusterReferenceOutput)
}

type GameServerClusterConnectionInfoGkeClusterReferenceOutput struct{ *pulumi.OutputState }

func (GameServerClusterConnectionInfoGkeClusterReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GameServerClusterConnectionInfoGkeClusterReference)(nil)).Elem()
}

func (o GameServerClusterConnectionInfoGkeClusterReferenceOutput) ToGameServerClusterConnectionInfoGkeClusterReferenceOutput() GameServerClusterConnectionInfoGkeClusterReferenceOutput {
	return o
}

func (o GameServerClusterConnectionInfoGkeClusterReferenceOutput) ToGameServerClusterConnectionInfoGkeClusterReferenceOutputWithContext(ctx context.Context) GameServerClusterConnectionInfoGkeClusterReferenceOutput {
	return o
}

func (o GameServerClusterConnectionInfoGkeClusterReferenceOutput) Cluster() pulumi.StringOutput {
	return o.ApplyT(func(v GameServerClusterConnectionInfoGkeClusterReference) string { return v.Cluster }).(pulumi.StringOutput)
}

type GameServerConfigFleetConfig struct {
	FleetSpec string  `pulumi:"fleetSpec"`
	Name      *string `pulumi:"name"`
}

type GameServerConfigFleetConfigInput interface {
	pulumi.Input

	ToGameServerConfigFleetConfigOutput() GameServerConfigFleetConfigOutput
	ToGameServerConfigFleetConfigOutputWithContext(context.Context) GameServerConfigFleetConfigOutput
}

type GameServerConfigFleetConfigArgs struct {
	FleetSpec pulumi.StringInput    `pulumi:"fleetSpec"`
	Name      pulumi.StringPtrInput `pulumi:"name"`
}

func (GameServerConfigFleetConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GameServerConfigFleetConfig)(nil)).Elem()
}

func (i GameServerConfigFleetConfigArgs) ToGameServerConfigFleetConfigOutput() GameServerConfigFleetConfigOutput {
	return i.ToGameServerConfigFleetConfigOutputWithContext(context.Background())
}

func (i GameServerConfigFleetConfigArgs) ToGameServerConfigFleetConfigOutputWithContext(ctx context.Context) GameServerConfigFleetConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GameServerConfigFleetConfigOutput)
}

type GameServerConfigFleetConfigArrayInput interface {
	pulumi.Input

	ToGameServerConfigFleetConfigArrayOutput() GameServerConfigFleetConfigArrayOutput
	ToGameServerConfigFleetConfigArrayOutputWithContext(context.Context) GameServerConfigFleetConfigArrayOutput
}

type GameServerConfigFleetConfigArray []GameServerConfigFleetConfigInput

func (GameServerConfigFleetConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GameServerConfigFleetConfig)(nil)).Elem()
}

func (i GameServerConfigFleetConfigArray) ToGameServerConfigFleetConfigArrayOutput() GameServerConfigFleetConfigArrayOutput {
	return i.ToGameServerConfigFleetConfigArrayOutputWithContext(context.Background())
}

func (i GameServerConfigFleetConfigArray) ToGameServerConfigFleetConfigArrayOutputWithContext(ctx context.Context) GameServerConfigFleetConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GameServerConfigFleetConfigArrayOutput)
}

type GameServerConfigFleetConfigOutput struct{ *pulumi.OutputState }

func (GameServerConfigFleetConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GameServerConfigFleetConfig)(nil)).Elem()
}

func (o GameServerConfigFleetConfigOutput) ToGameServerConfigFleetConfigOutput() GameServerConfigFleetConfigOutput {
	return o
}

func (o GameServerConfigFleetConfigOutput) ToGameServerConfigFleetConfigOutputWithContext(ctx context.Context) GameServerConfigFleetConfigOutput {
	return o
}

func (o GameServerConfigFleetConfigOutput) FleetSpec() pulumi.StringOutput {
	return o.ApplyT(func(v GameServerConfigFleetConfig) string { return v.FleetSpec }).(pulumi.StringOutput)
}

func (o GameServerConfigFleetConfigOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GameServerConfigFleetConfig) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type GameServerConfigFleetConfigArrayOutput struct{ *pulumi.OutputState }

func (GameServerConfigFleetConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GameServerConfigFleetConfig)(nil)).Elem()
}

func (o GameServerConfigFleetConfigArrayOutput) ToGameServerConfigFleetConfigArrayOutput() GameServerConfigFleetConfigArrayOutput {
	return o
}

func (o GameServerConfigFleetConfigArrayOutput) ToGameServerConfigFleetConfigArrayOutputWithContext(ctx context.Context) GameServerConfigFleetConfigArrayOutput {
	return o
}

func (o GameServerConfigFleetConfigArrayOutput) Index(i pulumi.IntInput) GameServerConfigFleetConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GameServerConfigFleetConfig {
		return vs[0].([]GameServerConfigFleetConfig)[vs[1].(int)]
	}).(GameServerConfigFleetConfigOutput)
}

type GameServerConfigScalingConfig struct {
	FleetAutoscalerSpec string                                  `pulumi:"fleetAutoscalerSpec"`
	Name                string                                  `pulumi:"name"`
	Schedules           []GameServerConfigScalingConfigSchedule `pulumi:"schedules"`
	Selectors           []GameServerConfigScalingConfigSelector `pulumi:"selectors"`
}

type GameServerConfigScalingConfigInput interface {
	pulumi.Input

	ToGameServerConfigScalingConfigOutput() GameServerConfigScalingConfigOutput
	ToGameServerConfigScalingConfigOutputWithContext(context.Context) GameServerConfigScalingConfigOutput
}

type GameServerConfigScalingConfigArgs struct {
	FleetAutoscalerSpec pulumi.StringInput                              `pulumi:"fleetAutoscalerSpec"`
	Name                pulumi.StringInput                              `pulumi:"name"`
	Schedules           GameServerConfigScalingConfigScheduleArrayInput `pulumi:"schedules"`
	Selectors           GameServerConfigScalingConfigSelectorArrayInput `pulumi:"selectors"`
}

func (GameServerConfigScalingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GameServerConfigScalingConfig)(nil)).Elem()
}

func (i GameServerConfigScalingConfigArgs) ToGameServerConfigScalingConfigOutput() GameServerConfigScalingConfigOutput {
	return i.ToGameServerConfigScalingConfigOutputWithContext(context.Background())
}

func (i GameServerConfigScalingConfigArgs) ToGameServerConfigScalingConfigOutputWithContext(ctx context.Context) GameServerConfigScalingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GameServerConfigScalingConfigOutput)
}

type GameServerConfigScalingConfigArrayInput interface {
	pulumi.Input

	ToGameServerConfigScalingConfigArrayOutput() GameServerConfigScalingConfigArrayOutput
	ToGameServerConfigScalingConfigArrayOutputWithContext(context.Context) GameServerConfigScalingConfigArrayOutput
}

type GameServerConfigScalingConfigArray []GameServerConfigScalingConfigInput

func (GameServerConfigScalingConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GameServerConfigScalingConfig)(nil)).Elem()
}

func (i GameServerConfigScalingConfigArray) ToGameServerConfigScalingConfigArrayOutput() GameServerConfigScalingConfigArrayOutput {
	return i.ToGameServerConfigScalingConfigArrayOutputWithContext(context.Background())
}

func (i GameServerConfigScalingConfigArray) ToGameServerConfigScalingConfigArrayOutputWithContext(ctx context.Context) GameServerConfigScalingConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GameServerConfigScalingConfigArrayOutput)
}

type GameServerConfigScalingConfigOutput struct{ *pulumi.OutputState }

func (GameServerConfigScalingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GameServerConfigScalingConfig)(nil)).Elem()
}

func (o GameServerConfigScalingConfigOutput) ToGameServerConfigScalingConfigOutput() GameServerConfigScalingConfigOutput {
	return o
}

func (o GameServerConfigScalingConfigOutput) ToGameServerConfigScalingConfigOutputWithContext(ctx context.Context) GameServerConfigScalingConfigOutput {
	return o
}

func (o GameServerConfigScalingConfigOutput) FleetAutoscalerSpec() pulumi.StringOutput {
	return o.ApplyT(func(v GameServerConfigScalingConfig) string { return v.FleetAutoscalerSpec }).(pulumi.StringOutput)
}

func (o GameServerConfigScalingConfigOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GameServerConfigScalingConfig) string { return v.Name }).(pulumi.StringOutput)
}

func (o GameServerConfigScalingConfigOutput) Schedules() GameServerConfigScalingConfigScheduleArrayOutput {
	return o.ApplyT(func(v GameServerConfigScalingConfig) []GameServerConfigScalingConfigSchedule { return v.Schedules }).(GameServerConfigScalingConfigScheduleArrayOutput)
}

func (o GameServerConfigScalingConfigOutput) Selectors() GameServerConfigScalingConfigSelectorArrayOutput {
	return o.ApplyT(func(v GameServerConfigScalingConfig) []GameServerConfigScalingConfigSelector { return v.Selectors }).(GameServerConfigScalingConfigSelectorArrayOutput)
}

type GameServerConfigScalingConfigArrayOutput struct{ *pulumi.OutputState }

func (GameServerConfigScalingConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GameServerConfigScalingConfig)(nil)).Elem()
}

func (o GameServerConfigScalingConfigArrayOutput) ToGameServerConfigScalingConfigArrayOutput() GameServerConfigScalingConfigArrayOutput {
	return o
}

func (o GameServerConfigScalingConfigArrayOutput) ToGameServerConfigScalingConfigArrayOutputWithContext(ctx context.Context) GameServerConfigScalingConfigArrayOutput {
	return o
}

func (o GameServerConfigScalingConfigArrayOutput) Index(i pulumi.IntInput) GameServerConfigScalingConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GameServerConfigScalingConfig {
		return vs[0].([]GameServerConfigScalingConfig)[vs[1].(int)]
	}).(GameServerConfigScalingConfigOutput)
}

type GameServerConfigScalingConfigSchedule struct {
	CronJobDuration *string `pulumi:"cronJobDuration"`
	CronSpec        *string `pulumi:"cronSpec"`
	EndTime         *string `pulumi:"endTime"`
	StartTime       *string `pulumi:"startTime"`
}

type GameServerConfigScalingConfigScheduleInput interface {
	pulumi.Input

	ToGameServerConfigScalingConfigScheduleOutput() GameServerConfigScalingConfigScheduleOutput
	ToGameServerConfigScalingConfigScheduleOutputWithContext(context.Context) GameServerConfigScalingConfigScheduleOutput
}

type GameServerConfigScalingConfigScheduleArgs struct {
	CronJobDuration pulumi.StringPtrInput `pulumi:"cronJobDuration"`
	CronSpec        pulumi.StringPtrInput `pulumi:"cronSpec"`
	EndTime         pulumi.StringPtrInput `pulumi:"endTime"`
	StartTime       pulumi.StringPtrInput `pulumi:"startTime"`
}

func (GameServerConfigScalingConfigScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GameServerConfigScalingConfigSchedule)(nil)).Elem()
}

func (i GameServerConfigScalingConfigScheduleArgs) ToGameServerConfigScalingConfigScheduleOutput() GameServerConfigScalingConfigScheduleOutput {
	return i.ToGameServerConfigScalingConfigScheduleOutputWithContext(context.Background())
}

func (i GameServerConfigScalingConfigScheduleArgs) ToGameServerConfigScalingConfigScheduleOutputWithContext(ctx context.Context) GameServerConfigScalingConfigScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GameServerConfigScalingConfigScheduleOutput)
}

type GameServerConfigScalingConfigScheduleArrayInput interface {
	pulumi.Input

	ToGameServerConfigScalingConfigScheduleArrayOutput() GameServerConfigScalingConfigScheduleArrayOutput
	ToGameServerConfigScalingConfigScheduleArrayOutputWithContext(context.Context) GameServerConfigScalingConfigScheduleArrayOutput
}

type GameServerConfigScalingConfigScheduleArray []GameServerConfigScalingConfigScheduleInput

func (GameServerConfigScalingConfigScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GameServerConfigScalingConfigSchedule)(nil)).Elem()
}

func (i GameServerConfigScalingConfigScheduleArray) ToGameServerConfigScalingConfigScheduleArrayOutput() GameServerConfigScalingConfigScheduleArrayOutput {
	return i.ToGameServerConfigScalingConfigScheduleArrayOutputWithContext(context.Background())
}

func (i GameServerConfigScalingConfigScheduleArray) ToGameServerConfigScalingConfigScheduleArrayOutputWithContext(ctx context.Context) GameServerConfigScalingConfigScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GameServerConfigScalingConfigScheduleArrayOutput)
}

type GameServerConfigScalingConfigScheduleOutput struct{ *pulumi.OutputState }

func (GameServerConfigScalingConfigScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GameServerConfigScalingConfigSchedule)(nil)).Elem()
}

func (o GameServerConfigScalingConfigScheduleOutput) ToGameServerConfigScalingConfigScheduleOutput() GameServerConfigScalingConfigScheduleOutput {
	return o
}

func (o GameServerConfigScalingConfigScheduleOutput) ToGameServerConfigScalingConfigScheduleOutputWithContext(ctx context.Context) GameServerConfigScalingConfigScheduleOutput {
	return o
}

func (o GameServerConfigScalingConfigScheduleOutput) CronJobDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GameServerConfigScalingConfigSchedule) *string { return v.CronJobDuration }).(pulumi.StringPtrOutput)
}

func (o GameServerConfigScalingConfigScheduleOutput) CronSpec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GameServerConfigScalingConfigSchedule) *string { return v.CronSpec }).(pulumi.StringPtrOutput)
}

func (o GameServerConfigScalingConfigScheduleOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GameServerConfigScalingConfigSchedule) *string { return v.EndTime }).(pulumi.StringPtrOutput)
}

func (o GameServerConfigScalingConfigScheduleOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GameServerConfigScalingConfigSchedule) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

type GameServerConfigScalingConfigScheduleArrayOutput struct{ *pulumi.OutputState }

func (GameServerConfigScalingConfigScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GameServerConfigScalingConfigSchedule)(nil)).Elem()
}

func (o GameServerConfigScalingConfigScheduleArrayOutput) ToGameServerConfigScalingConfigScheduleArrayOutput() GameServerConfigScalingConfigScheduleArrayOutput {
	return o
}

func (o GameServerConfigScalingConfigScheduleArrayOutput) ToGameServerConfigScalingConfigScheduleArrayOutputWithContext(ctx context.Context) GameServerConfigScalingConfigScheduleArrayOutput {
	return o
}

func (o GameServerConfigScalingConfigScheduleArrayOutput) Index(i pulumi.IntInput) GameServerConfigScalingConfigScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GameServerConfigScalingConfigSchedule {
		return vs[0].([]GameServerConfigScalingConfigSchedule)[vs[1].(int)]
	}).(GameServerConfigScalingConfigScheduleOutput)
}

type GameServerConfigScalingConfigSelector struct {
	Labels map[string]string `pulumi:"labels"`
}

type GameServerConfigScalingConfigSelectorInput interface {
	pulumi.Input

	ToGameServerConfigScalingConfigSelectorOutput() GameServerConfigScalingConfigSelectorOutput
	ToGameServerConfigScalingConfigSelectorOutputWithContext(context.Context) GameServerConfigScalingConfigSelectorOutput
}

type GameServerConfigScalingConfigSelectorArgs struct {
	Labels pulumi.StringMapInput `pulumi:"labels"`
}

func (GameServerConfigScalingConfigSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GameServerConfigScalingConfigSelector)(nil)).Elem()
}

func (i GameServerConfigScalingConfigSelectorArgs) ToGameServerConfigScalingConfigSelectorOutput() GameServerConfigScalingConfigSelectorOutput {
	return i.ToGameServerConfigScalingConfigSelectorOutputWithContext(context.Background())
}

func (i GameServerConfigScalingConfigSelectorArgs) ToGameServerConfigScalingConfigSelectorOutputWithContext(ctx context.Context) GameServerConfigScalingConfigSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GameServerConfigScalingConfigSelectorOutput)
}

type GameServerConfigScalingConfigSelectorArrayInput interface {
	pulumi.Input

	ToGameServerConfigScalingConfigSelectorArrayOutput() GameServerConfigScalingConfigSelectorArrayOutput
	ToGameServerConfigScalingConfigSelectorArrayOutputWithContext(context.Context) GameServerConfigScalingConfigSelectorArrayOutput
}

type GameServerConfigScalingConfigSelectorArray []GameServerConfigScalingConfigSelectorInput

func (GameServerConfigScalingConfigSelectorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GameServerConfigScalingConfigSelector)(nil)).Elem()
}

func (i GameServerConfigScalingConfigSelectorArray) ToGameServerConfigScalingConfigSelectorArrayOutput() GameServerConfigScalingConfigSelectorArrayOutput {
	return i.ToGameServerConfigScalingConfigSelectorArrayOutputWithContext(context.Background())
}

func (i GameServerConfigScalingConfigSelectorArray) ToGameServerConfigScalingConfigSelectorArrayOutputWithContext(ctx context.Context) GameServerConfigScalingConfigSelectorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GameServerConfigScalingConfigSelectorArrayOutput)
}

type GameServerConfigScalingConfigSelectorOutput struct{ *pulumi.OutputState }

func (GameServerConfigScalingConfigSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GameServerConfigScalingConfigSelector)(nil)).Elem()
}

func (o GameServerConfigScalingConfigSelectorOutput) ToGameServerConfigScalingConfigSelectorOutput() GameServerConfigScalingConfigSelectorOutput {
	return o
}

func (o GameServerConfigScalingConfigSelectorOutput) ToGameServerConfigScalingConfigSelectorOutputWithContext(ctx context.Context) GameServerConfigScalingConfigSelectorOutput {
	return o
}

func (o GameServerConfigScalingConfigSelectorOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v GameServerConfigScalingConfigSelector) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

type GameServerConfigScalingConfigSelectorArrayOutput struct{ *pulumi.OutputState }

func (GameServerConfigScalingConfigSelectorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GameServerConfigScalingConfigSelector)(nil)).Elem()
}

func (o GameServerConfigScalingConfigSelectorArrayOutput) ToGameServerConfigScalingConfigSelectorArrayOutput() GameServerConfigScalingConfigSelectorArrayOutput {
	return o
}

func (o GameServerConfigScalingConfigSelectorArrayOutput) ToGameServerConfigScalingConfigSelectorArrayOutputWithContext(ctx context.Context) GameServerConfigScalingConfigSelectorArrayOutput {
	return o
}

func (o GameServerConfigScalingConfigSelectorArrayOutput) Index(i pulumi.IntInput) GameServerConfigScalingConfigSelectorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GameServerConfigScalingConfigSelector {
		return vs[0].([]GameServerConfigScalingConfigSelector)[vs[1].(int)]
	}).(GameServerConfigScalingConfigSelectorOutput)
}

type GameServerDeploymentRolloutGameServerConfigOverride struct {
	ConfigVersion  *string                                                            `pulumi:"configVersion"`
	RealmsSelector *GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelector `pulumi:"realmsSelector"`
}

type GameServerDeploymentRolloutGameServerConfigOverrideInput interface {
	pulumi.Input

	ToGameServerDeploymentRolloutGameServerConfigOverrideOutput() GameServerDeploymentRolloutGameServerConfigOverrideOutput
	ToGameServerDeploymentRolloutGameServerConfigOverrideOutputWithContext(context.Context) GameServerDeploymentRolloutGameServerConfigOverrideOutput
}

type GameServerDeploymentRolloutGameServerConfigOverrideArgs struct {
	ConfigVersion  pulumi.StringPtrInput                                                     `pulumi:"configVersion"`
	RealmsSelector GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrInput `pulumi:"realmsSelector"`
}

func (GameServerDeploymentRolloutGameServerConfigOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GameServerDeploymentRolloutGameServerConfigOverride)(nil)).Elem()
}

func (i GameServerDeploymentRolloutGameServerConfigOverrideArgs) ToGameServerDeploymentRolloutGameServerConfigOverrideOutput() GameServerDeploymentRolloutGameServerConfigOverrideOutput {
	return i.ToGameServerDeploymentRolloutGameServerConfigOverrideOutputWithContext(context.Background())
}

func (i GameServerDeploymentRolloutGameServerConfigOverrideArgs) ToGameServerDeploymentRolloutGameServerConfigOverrideOutputWithContext(ctx context.Context) GameServerDeploymentRolloutGameServerConfigOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GameServerDeploymentRolloutGameServerConfigOverrideOutput)
}

type GameServerDeploymentRolloutGameServerConfigOverrideArrayInput interface {
	pulumi.Input

	ToGameServerDeploymentRolloutGameServerConfigOverrideArrayOutput() GameServerDeploymentRolloutGameServerConfigOverrideArrayOutput
	ToGameServerDeploymentRolloutGameServerConfigOverrideArrayOutputWithContext(context.Context) GameServerDeploymentRolloutGameServerConfigOverrideArrayOutput
}

type GameServerDeploymentRolloutGameServerConfigOverrideArray []GameServerDeploymentRolloutGameServerConfigOverrideInput

func (GameServerDeploymentRolloutGameServerConfigOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GameServerDeploymentRolloutGameServerConfigOverride)(nil)).Elem()
}

func (i GameServerDeploymentRolloutGameServerConfigOverrideArray) ToGameServerDeploymentRolloutGameServerConfigOverrideArrayOutput() GameServerDeploymentRolloutGameServerConfigOverrideArrayOutput {
	return i.ToGameServerDeploymentRolloutGameServerConfigOverrideArrayOutputWithContext(context.Background())
}

func (i GameServerDeploymentRolloutGameServerConfigOverrideArray) ToGameServerDeploymentRolloutGameServerConfigOverrideArrayOutputWithContext(ctx context.Context) GameServerDeploymentRolloutGameServerConfigOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GameServerDeploymentRolloutGameServerConfigOverrideArrayOutput)
}

type GameServerDeploymentRolloutGameServerConfigOverrideOutput struct{ *pulumi.OutputState }

func (GameServerDeploymentRolloutGameServerConfigOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GameServerDeploymentRolloutGameServerConfigOverride)(nil)).Elem()
}

func (o GameServerDeploymentRolloutGameServerConfigOverrideOutput) ToGameServerDeploymentRolloutGameServerConfigOverrideOutput() GameServerDeploymentRolloutGameServerConfigOverrideOutput {
	return o
}

func (o GameServerDeploymentRolloutGameServerConfigOverrideOutput) ToGameServerDeploymentRolloutGameServerConfigOverrideOutputWithContext(ctx context.Context) GameServerDeploymentRolloutGameServerConfigOverrideOutput {
	return o
}

func (o GameServerDeploymentRolloutGameServerConfigOverrideOutput) ConfigVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GameServerDeploymentRolloutGameServerConfigOverride) *string { return v.ConfigVersion }).(pulumi.StringPtrOutput)
}

func (o GameServerDeploymentRolloutGameServerConfigOverrideOutput) RealmsSelector() GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrOutput {
	return o.ApplyT(func(v GameServerDeploymentRolloutGameServerConfigOverride) *GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelector {
		return v.RealmsSelector
	}).(GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrOutput)
}

type GameServerDeploymentRolloutGameServerConfigOverrideArrayOutput struct{ *pulumi.OutputState }

func (GameServerDeploymentRolloutGameServerConfigOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GameServerDeploymentRolloutGameServerConfigOverride)(nil)).Elem()
}

func (o GameServerDeploymentRolloutGameServerConfigOverrideArrayOutput) ToGameServerDeploymentRolloutGameServerConfigOverrideArrayOutput() GameServerDeploymentRolloutGameServerConfigOverrideArrayOutput {
	return o
}

func (o GameServerDeploymentRolloutGameServerConfigOverrideArrayOutput) ToGameServerDeploymentRolloutGameServerConfigOverrideArrayOutputWithContext(ctx context.Context) GameServerDeploymentRolloutGameServerConfigOverrideArrayOutput {
	return o
}

func (o GameServerDeploymentRolloutGameServerConfigOverrideArrayOutput) Index(i pulumi.IntInput) GameServerDeploymentRolloutGameServerConfigOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GameServerDeploymentRolloutGameServerConfigOverride {
		return vs[0].([]GameServerDeploymentRolloutGameServerConfigOverride)[vs[1].(int)]
	}).(GameServerDeploymentRolloutGameServerConfigOverrideOutput)
}

type GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelector struct {
	Realms []string `pulumi:"realms"`
}

type GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorInput interface {
	pulumi.Input

	ToGameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorOutput() GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorOutput
	ToGameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorOutputWithContext(context.Context) GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorOutput
}

type GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgs struct {
	Realms pulumi.StringArrayInput `pulumi:"realms"`
}

func (GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelector)(nil)).Elem()
}

func (i GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgs) ToGameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorOutput() GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorOutput {
	return i.ToGameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorOutputWithContext(context.Background())
}

func (i GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgs) ToGameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorOutputWithContext(ctx context.Context) GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorOutput)
}

func (i GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgs) ToGameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrOutput() GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrOutput {
	return i.ToGameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrOutputWithContext(context.Background())
}

func (i GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgs) ToGameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrOutputWithContext(ctx context.Context) GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorOutput).ToGameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrOutputWithContext(ctx)
}

type GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrInput interface {
	pulumi.Input

	ToGameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrOutput() GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrOutput
	ToGameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrOutputWithContext(context.Context) GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrOutput
}

type gameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrType GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgs

func GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtr(v *GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgs) GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrInput {
	return (*gameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrType)(v)
}

func (*gameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelector)(nil)).Elem()
}

func (i *gameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrType) ToGameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrOutput() GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrOutput {
	return i.ToGameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrOutputWithContext(context.Background())
}

func (i *gameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrType) ToGameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrOutputWithContext(ctx context.Context) GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrOutput)
}

type GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorOutput struct{ *pulumi.OutputState }

func (GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelector)(nil)).Elem()
}

func (o GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorOutput) ToGameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorOutput() GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorOutput {
	return o
}

func (o GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorOutput) ToGameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorOutputWithContext(ctx context.Context) GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorOutput {
	return o
}

func (o GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorOutput) ToGameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrOutput() GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrOutput {
	return o.ToGameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrOutputWithContext(context.Background())
}

func (o GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorOutput) ToGameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrOutputWithContext(ctx context.Context) GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrOutput {
	return o.ApplyT(func(v GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelector) *GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelector {
		return &v
	}).(GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrOutput)
}
func (o GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorOutput) Realms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelector) []string { return v.Realms }).(pulumi.StringArrayOutput)
}

type GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrOutput struct{ *pulumi.OutputState }

func (GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelector)(nil)).Elem()
}

func (o GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrOutput) ToGameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrOutput() GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrOutput {
	return o
}

func (o GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrOutput) ToGameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrOutputWithContext(ctx context.Context) GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrOutput {
	return o
}

func (o GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrOutput) Elem() GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorOutput {
	return o.ApplyT(func(v *GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelector) GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelector {
		return *v
	}).(GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorOutput)
}

func (o GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrOutput) Realms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelector) []string { return v.Realms }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GameServerClusterConnectionInfoOutput{})
	pulumi.RegisterOutputType(GameServerClusterConnectionInfoPtrOutput{})
	pulumi.RegisterOutputType(GameServerClusterConnectionInfoGkeClusterReferenceOutput{})
	pulumi.RegisterOutputType(GameServerConfigFleetConfigOutput{})
	pulumi.RegisterOutputType(GameServerConfigFleetConfigArrayOutput{})
	pulumi.RegisterOutputType(GameServerConfigScalingConfigOutput{})
	pulumi.RegisterOutputType(GameServerConfigScalingConfigArrayOutput{})
	pulumi.RegisterOutputType(GameServerConfigScalingConfigScheduleOutput{})
	pulumi.RegisterOutputType(GameServerConfigScalingConfigScheduleArrayOutput{})
	pulumi.RegisterOutputType(GameServerConfigScalingConfigSelectorOutput{})
	pulumi.RegisterOutputType(GameServerConfigScalingConfigSelectorArrayOutput{})
	pulumi.RegisterOutputType(GameServerDeploymentRolloutGameServerConfigOverrideOutput{})
	pulumi.RegisterOutputType(GameServerDeploymentRolloutGameServerConfigOverrideArrayOutput{})
	pulumi.RegisterOutputType(GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorOutput{})
	pulumi.RegisterOutputType(GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrOutput{})
}
