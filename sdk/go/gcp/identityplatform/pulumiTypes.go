// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package identityplatform

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type InboundSamlConfigIdpConfig struct {
	// The IdP's certificate data to verify the signature in the SAMLResponse issued by the IDP.
	// Structure is documented below.
	IdpCertificates []InboundSamlConfigIdpConfigIdpCertificate `pulumi:"idpCertificates"`
	// Unique identifier for all SAML entities
	IdpEntityId string `pulumi:"idpEntityId"`
	// Indicates if outbounding SAMLRequest should be signed.
	SignRequest *bool `pulumi:"signRequest"`
	// URL to send Authentication request to.
	SsoUrl string `pulumi:"ssoUrl"`
}

// InboundSamlConfigIdpConfigInput is an input type that accepts InboundSamlConfigIdpConfigArgs and InboundSamlConfigIdpConfigOutput values.
// You can construct a concrete instance of `InboundSamlConfigIdpConfigInput` via:
//
//	InboundSamlConfigIdpConfigArgs{...}
type InboundSamlConfigIdpConfigInput interface {
	pulumi.Input

	ToInboundSamlConfigIdpConfigOutput() InboundSamlConfigIdpConfigOutput
	ToInboundSamlConfigIdpConfigOutputWithContext(context.Context) InboundSamlConfigIdpConfigOutput
}

type InboundSamlConfigIdpConfigArgs struct {
	// The IdP's certificate data to verify the signature in the SAMLResponse issued by the IDP.
	// Structure is documented below.
	IdpCertificates InboundSamlConfigIdpConfigIdpCertificateArrayInput `pulumi:"idpCertificates"`
	// Unique identifier for all SAML entities
	IdpEntityId pulumi.StringInput `pulumi:"idpEntityId"`
	// Indicates if outbounding SAMLRequest should be signed.
	SignRequest pulumi.BoolPtrInput `pulumi:"signRequest"`
	// URL to send Authentication request to.
	SsoUrl pulumi.StringInput `pulumi:"ssoUrl"`
}

func (InboundSamlConfigIdpConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InboundSamlConfigIdpConfig)(nil)).Elem()
}

func (i InboundSamlConfigIdpConfigArgs) ToInboundSamlConfigIdpConfigOutput() InboundSamlConfigIdpConfigOutput {
	return i.ToInboundSamlConfigIdpConfigOutputWithContext(context.Background())
}

func (i InboundSamlConfigIdpConfigArgs) ToInboundSamlConfigIdpConfigOutputWithContext(ctx context.Context) InboundSamlConfigIdpConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InboundSamlConfigIdpConfigOutput)
}

func (i InboundSamlConfigIdpConfigArgs) ToInboundSamlConfigIdpConfigPtrOutput() InboundSamlConfigIdpConfigPtrOutput {
	return i.ToInboundSamlConfigIdpConfigPtrOutputWithContext(context.Background())
}

func (i InboundSamlConfigIdpConfigArgs) ToInboundSamlConfigIdpConfigPtrOutputWithContext(ctx context.Context) InboundSamlConfigIdpConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InboundSamlConfigIdpConfigOutput).ToInboundSamlConfigIdpConfigPtrOutputWithContext(ctx)
}

// InboundSamlConfigIdpConfigPtrInput is an input type that accepts InboundSamlConfigIdpConfigArgs, InboundSamlConfigIdpConfigPtr and InboundSamlConfigIdpConfigPtrOutput values.
// You can construct a concrete instance of `InboundSamlConfigIdpConfigPtrInput` via:
//
//	        InboundSamlConfigIdpConfigArgs{...}
//
//	or:
//
//	        nil
type InboundSamlConfigIdpConfigPtrInput interface {
	pulumi.Input

	ToInboundSamlConfigIdpConfigPtrOutput() InboundSamlConfigIdpConfigPtrOutput
	ToInboundSamlConfigIdpConfigPtrOutputWithContext(context.Context) InboundSamlConfigIdpConfigPtrOutput
}

type inboundSamlConfigIdpConfigPtrType InboundSamlConfigIdpConfigArgs

func InboundSamlConfigIdpConfigPtr(v *InboundSamlConfigIdpConfigArgs) InboundSamlConfigIdpConfigPtrInput {
	return (*inboundSamlConfigIdpConfigPtrType)(v)
}

func (*inboundSamlConfigIdpConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InboundSamlConfigIdpConfig)(nil)).Elem()
}

func (i *inboundSamlConfigIdpConfigPtrType) ToInboundSamlConfigIdpConfigPtrOutput() InboundSamlConfigIdpConfigPtrOutput {
	return i.ToInboundSamlConfigIdpConfigPtrOutputWithContext(context.Background())
}

func (i *inboundSamlConfigIdpConfigPtrType) ToInboundSamlConfigIdpConfigPtrOutputWithContext(ctx context.Context) InboundSamlConfigIdpConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InboundSamlConfigIdpConfigPtrOutput)
}

type InboundSamlConfigIdpConfigOutput struct{ *pulumi.OutputState }

func (InboundSamlConfigIdpConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InboundSamlConfigIdpConfig)(nil)).Elem()
}

func (o InboundSamlConfigIdpConfigOutput) ToInboundSamlConfigIdpConfigOutput() InboundSamlConfigIdpConfigOutput {
	return o
}

func (o InboundSamlConfigIdpConfigOutput) ToInboundSamlConfigIdpConfigOutputWithContext(ctx context.Context) InboundSamlConfigIdpConfigOutput {
	return o
}

func (o InboundSamlConfigIdpConfigOutput) ToInboundSamlConfigIdpConfigPtrOutput() InboundSamlConfigIdpConfigPtrOutput {
	return o.ToInboundSamlConfigIdpConfigPtrOutputWithContext(context.Background())
}

func (o InboundSamlConfigIdpConfigOutput) ToInboundSamlConfigIdpConfigPtrOutputWithContext(ctx context.Context) InboundSamlConfigIdpConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InboundSamlConfigIdpConfig) *InboundSamlConfigIdpConfig {
		return &v
	}).(InboundSamlConfigIdpConfigPtrOutput)
}

// The IdP's certificate data to verify the signature in the SAMLResponse issued by the IDP.
// Structure is documented below.
func (o InboundSamlConfigIdpConfigOutput) IdpCertificates() InboundSamlConfigIdpConfigIdpCertificateArrayOutput {
	return o.ApplyT(func(v InboundSamlConfigIdpConfig) []InboundSamlConfigIdpConfigIdpCertificate {
		return v.IdpCertificates
	}).(InboundSamlConfigIdpConfigIdpCertificateArrayOutput)
}

// Unique identifier for all SAML entities
func (o InboundSamlConfigIdpConfigOutput) IdpEntityId() pulumi.StringOutput {
	return o.ApplyT(func(v InboundSamlConfigIdpConfig) string { return v.IdpEntityId }).(pulumi.StringOutput)
}

// Indicates if outbounding SAMLRequest should be signed.
func (o InboundSamlConfigIdpConfigOutput) SignRequest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InboundSamlConfigIdpConfig) *bool { return v.SignRequest }).(pulumi.BoolPtrOutput)
}

// URL to send Authentication request to.
func (o InboundSamlConfigIdpConfigOutput) SsoUrl() pulumi.StringOutput {
	return o.ApplyT(func(v InboundSamlConfigIdpConfig) string { return v.SsoUrl }).(pulumi.StringOutput)
}

type InboundSamlConfigIdpConfigPtrOutput struct{ *pulumi.OutputState }

func (InboundSamlConfigIdpConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InboundSamlConfigIdpConfig)(nil)).Elem()
}

func (o InboundSamlConfigIdpConfigPtrOutput) ToInboundSamlConfigIdpConfigPtrOutput() InboundSamlConfigIdpConfigPtrOutput {
	return o
}

func (o InboundSamlConfigIdpConfigPtrOutput) ToInboundSamlConfigIdpConfigPtrOutputWithContext(ctx context.Context) InboundSamlConfigIdpConfigPtrOutput {
	return o
}

func (o InboundSamlConfigIdpConfigPtrOutput) Elem() InboundSamlConfigIdpConfigOutput {
	return o.ApplyT(func(v *InboundSamlConfigIdpConfig) InboundSamlConfigIdpConfig {
		if v != nil {
			return *v
		}
		var ret InboundSamlConfigIdpConfig
		return ret
	}).(InboundSamlConfigIdpConfigOutput)
}

// The IdP's certificate data to verify the signature in the SAMLResponse issued by the IDP.
// Structure is documented below.
func (o InboundSamlConfigIdpConfigPtrOutput) IdpCertificates() InboundSamlConfigIdpConfigIdpCertificateArrayOutput {
	return o.ApplyT(func(v *InboundSamlConfigIdpConfig) []InboundSamlConfigIdpConfigIdpCertificate {
		if v == nil {
			return nil
		}
		return v.IdpCertificates
	}).(InboundSamlConfigIdpConfigIdpCertificateArrayOutput)
}

// Unique identifier for all SAML entities
func (o InboundSamlConfigIdpConfigPtrOutput) IdpEntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InboundSamlConfigIdpConfig) *string {
		if v == nil {
			return nil
		}
		return &v.IdpEntityId
	}).(pulumi.StringPtrOutput)
}

// Indicates if outbounding SAMLRequest should be signed.
func (o InboundSamlConfigIdpConfigPtrOutput) SignRequest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InboundSamlConfigIdpConfig) *bool {
		if v == nil {
			return nil
		}
		return v.SignRequest
	}).(pulumi.BoolPtrOutput)
}

// URL to send Authentication request to.
func (o InboundSamlConfigIdpConfigPtrOutput) SsoUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InboundSamlConfigIdpConfig) *string {
		if v == nil {
			return nil
		}
		return &v.SsoUrl
	}).(pulumi.StringPtrOutput)
}

type InboundSamlConfigIdpConfigIdpCertificate struct {
	// -
	// The x509 certificate
	X509Certificate *string `pulumi:"x509Certificate"`
}

// InboundSamlConfigIdpConfigIdpCertificateInput is an input type that accepts InboundSamlConfigIdpConfigIdpCertificateArgs and InboundSamlConfigIdpConfigIdpCertificateOutput values.
// You can construct a concrete instance of `InboundSamlConfigIdpConfigIdpCertificateInput` via:
//
//	InboundSamlConfigIdpConfigIdpCertificateArgs{...}
type InboundSamlConfigIdpConfigIdpCertificateInput interface {
	pulumi.Input

	ToInboundSamlConfigIdpConfigIdpCertificateOutput() InboundSamlConfigIdpConfigIdpCertificateOutput
	ToInboundSamlConfigIdpConfigIdpCertificateOutputWithContext(context.Context) InboundSamlConfigIdpConfigIdpCertificateOutput
}

type InboundSamlConfigIdpConfigIdpCertificateArgs struct {
	// -
	// The x509 certificate
	X509Certificate pulumi.StringPtrInput `pulumi:"x509Certificate"`
}

func (InboundSamlConfigIdpConfigIdpCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InboundSamlConfigIdpConfigIdpCertificate)(nil)).Elem()
}

func (i InboundSamlConfigIdpConfigIdpCertificateArgs) ToInboundSamlConfigIdpConfigIdpCertificateOutput() InboundSamlConfigIdpConfigIdpCertificateOutput {
	return i.ToInboundSamlConfigIdpConfigIdpCertificateOutputWithContext(context.Background())
}

func (i InboundSamlConfigIdpConfigIdpCertificateArgs) ToInboundSamlConfigIdpConfigIdpCertificateOutputWithContext(ctx context.Context) InboundSamlConfigIdpConfigIdpCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InboundSamlConfigIdpConfigIdpCertificateOutput)
}

// InboundSamlConfigIdpConfigIdpCertificateArrayInput is an input type that accepts InboundSamlConfigIdpConfigIdpCertificateArray and InboundSamlConfigIdpConfigIdpCertificateArrayOutput values.
// You can construct a concrete instance of `InboundSamlConfigIdpConfigIdpCertificateArrayInput` via:
//
//	InboundSamlConfigIdpConfigIdpCertificateArray{ InboundSamlConfigIdpConfigIdpCertificateArgs{...} }
type InboundSamlConfigIdpConfigIdpCertificateArrayInput interface {
	pulumi.Input

	ToInboundSamlConfigIdpConfigIdpCertificateArrayOutput() InboundSamlConfigIdpConfigIdpCertificateArrayOutput
	ToInboundSamlConfigIdpConfigIdpCertificateArrayOutputWithContext(context.Context) InboundSamlConfigIdpConfigIdpCertificateArrayOutput
}

type InboundSamlConfigIdpConfigIdpCertificateArray []InboundSamlConfigIdpConfigIdpCertificateInput

func (InboundSamlConfigIdpConfigIdpCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InboundSamlConfigIdpConfigIdpCertificate)(nil)).Elem()
}

func (i InboundSamlConfigIdpConfigIdpCertificateArray) ToInboundSamlConfigIdpConfigIdpCertificateArrayOutput() InboundSamlConfigIdpConfigIdpCertificateArrayOutput {
	return i.ToInboundSamlConfigIdpConfigIdpCertificateArrayOutputWithContext(context.Background())
}

func (i InboundSamlConfigIdpConfigIdpCertificateArray) ToInboundSamlConfigIdpConfigIdpCertificateArrayOutputWithContext(ctx context.Context) InboundSamlConfigIdpConfigIdpCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InboundSamlConfigIdpConfigIdpCertificateArrayOutput)
}

type InboundSamlConfigIdpConfigIdpCertificateOutput struct{ *pulumi.OutputState }

func (InboundSamlConfigIdpConfigIdpCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InboundSamlConfigIdpConfigIdpCertificate)(nil)).Elem()
}

func (o InboundSamlConfigIdpConfigIdpCertificateOutput) ToInboundSamlConfigIdpConfigIdpCertificateOutput() InboundSamlConfigIdpConfigIdpCertificateOutput {
	return o
}

func (o InboundSamlConfigIdpConfigIdpCertificateOutput) ToInboundSamlConfigIdpConfigIdpCertificateOutputWithContext(ctx context.Context) InboundSamlConfigIdpConfigIdpCertificateOutput {
	return o
}

// -
// The x509 certificate
func (o InboundSamlConfigIdpConfigIdpCertificateOutput) X509Certificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundSamlConfigIdpConfigIdpCertificate) *string { return v.X509Certificate }).(pulumi.StringPtrOutput)
}

type InboundSamlConfigIdpConfigIdpCertificateArrayOutput struct{ *pulumi.OutputState }

func (InboundSamlConfigIdpConfigIdpCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InboundSamlConfigIdpConfigIdpCertificate)(nil)).Elem()
}

func (o InboundSamlConfigIdpConfigIdpCertificateArrayOutput) ToInboundSamlConfigIdpConfigIdpCertificateArrayOutput() InboundSamlConfigIdpConfigIdpCertificateArrayOutput {
	return o
}

func (o InboundSamlConfigIdpConfigIdpCertificateArrayOutput) ToInboundSamlConfigIdpConfigIdpCertificateArrayOutputWithContext(ctx context.Context) InboundSamlConfigIdpConfigIdpCertificateArrayOutput {
	return o
}

func (o InboundSamlConfigIdpConfigIdpCertificateArrayOutput) Index(i pulumi.IntInput) InboundSamlConfigIdpConfigIdpCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InboundSamlConfigIdpConfigIdpCertificate {
		return vs[0].([]InboundSamlConfigIdpConfigIdpCertificate)[vs[1].(int)]
	}).(InboundSamlConfigIdpConfigIdpCertificateOutput)
}

type InboundSamlConfigSpConfig struct {
	// Callback URI where responses from IDP are handled. Must start with `https://`.
	CallbackUri *string `pulumi:"callbackUri"`
	// -
	// The IDP's certificate data to verify the signature in the SAMLResponse issued by the IDP.
	// Structure is documented below.
	SpCertificates []InboundSamlConfigSpConfigSpCertificate `pulumi:"spCertificates"`
	// Unique identifier for all SAML entities.
	SpEntityId *string `pulumi:"spEntityId"`
}

// InboundSamlConfigSpConfigInput is an input type that accepts InboundSamlConfigSpConfigArgs and InboundSamlConfigSpConfigOutput values.
// You can construct a concrete instance of `InboundSamlConfigSpConfigInput` via:
//
//	InboundSamlConfigSpConfigArgs{...}
type InboundSamlConfigSpConfigInput interface {
	pulumi.Input

	ToInboundSamlConfigSpConfigOutput() InboundSamlConfigSpConfigOutput
	ToInboundSamlConfigSpConfigOutputWithContext(context.Context) InboundSamlConfigSpConfigOutput
}

type InboundSamlConfigSpConfigArgs struct {
	// Callback URI where responses from IDP are handled. Must start with `https://`.
	CallbackUri pulumi.StringPtrInput `pulumi:"callbackUri"`
	// -
	// The IDP's certificate data to verify the signature in the SAMLResponse issued by the IDP.
	// Structure is documented below.
	SpCertificates InboundSamlConfigSpConfigSpCertificateArrayInput `pulumi:"spCertificates"`
	// Unique identifier for all SAML entities.
	SpEntityId pulumi.StringPtrInput `pulumi:"spEntityId"`
}

func (InboundSamlConfigSpConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InboundSamlConfigSpConfig)(nil)).Elem()
}

func (i InboundSamlConfigSpConfigArgs) ToInboundSamlConfigSpConfigOutput() InboundSamlConfigSpConfigOutput {
	return i.ToInboundSamlConfigSpConfigOutputWithContext(context.Background())
}

func (i InboundSamlConfigSpConfigArgs) ToInboundSamlConfigSpConfigOutputWithContext(ctx context.Context) InboundSamlConfigSpConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InboundSamlConfigSpConfigOutput)
}

func (i InboundSamlConfigSpConfigArgs) ToInboundSamlConfigSpConfigPtrOutput() InboundSamlConfigSpConfigPtrOutput {
	return i.ToInboundSamlConfigSpConfigPtrOutputWithContext(context.Background())
}

func (i InboundSamlConfigSpConfigArgs) ToInboundSamlConfigSpConfigPtrOutputWithContext(ctx context.Context) InboundSamlConfigSpConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InboundSamlConfigSpConfigOutput).ToInboundSamlConfigSpConfigPtrOutputWithContext(ctx)
}

// InboundSamlConfigSpConfigPtrInput is an input type that accepts InboundSamlConfigSpConfigArgs, InboundSamlConfigSpConfigPtr and InboundSamlConfigSpConfigPtrOutput values.
// You can construct a concrete instance of `InboundSamlConfigSpConfigPtrInput` via:
//
//	        InboundSamlConfigSpConfigArgs{...}
//
//	or:
//
//	        nil
type InboundSamlConfigSpConfigPtrInput interface {
	pulumi.Input

	ToInboundSamlConfigSpConfigPtrOutput() InboundSamlConfigSpConfigPtrOutput
	ToInboundSamlConfigSpConfigPtrOutputWithContext(context.Context) InboundSamlConfigSpConfigPtrOutput
}

type inboundSamlConfigSpConfigPtrType InboundSamlConfigSpConfigArgs

func InboundSamlConfigSpConfigPtr(v *InboundSamlConfigSpConfigArgs) InboundSamlConfigSpConfigPtrInput {
	return (*inboundSamlConfigSpConfigPtrType)(v)
}

func (*inboundSamlConfigSpConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InboundSamlConfigSpConfig)(nil)).Elem()
}

func (i *inboundSamlConfigSpConfigPtrType) ToInboundSamlConfigSpConfigPtrOutput() InboundSamlConfigSpConfigPtrOutput {
	return i.ToInboundSamlConfigSpConfigPtrOutputWithContext(context.Background())
}

func (i *inboundSamlConfigSpConfigPtrType) ToInboundSamlConfigSpConfigPtrOutputWithContext(ctx context.Context) InboundSamlConfigSpConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InboundSamlConfigSpConfigPtrOutput)
}

type InboundSamlConfigSpConfigOutput struct{ *pulumi.OutputState }

func (InboundSamlConfigSpConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InboundSamlConfigSpConfig)(nil)).Elem()
}

func (o InboundSamlConfigSpConfigOutput) ToInboundSamlConfigSpConfigOutput() InboundSamlConfigSpConfigOutput {
	return o
}

func (o InboundSamlConfigSpConfigOutput) ToInboundSamlConfigSpConfigOutputWithContext(ctx context.Context) InboundSamlConfigSpConfigOutput {
	return o
}

func (o InboundSamlConfigSpConfigOutput) ToInboundSamlConfigSpConfigPtrOutput() InboundSamlConfigSpConfigPtrOutput {
	return o.ToInboundSamlConfigSpConfigPtrOutputWithContext(context.Background())
}

func (o InboundSamlConfigSpConfigOutput) ToInboundSamlConfigSpConfigPtrOutputWithContext(ctx context.Context) InboundSamlConfigSpConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InboundSamlConfigSpConfig) *InboundSamlConfigSpConfig {
		return &v
	}).(InboundSamlConfigSpConfigPtrOutput)
}

// Callback URI where responses from IDP are handled. Must start with `https://`.
func (o InboundSamlConfigSpConfigOutput) CallbackUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundSamlConfigSpConfig) *string { return v.CallbackUri }).(pulumi.StringPtrOutput)
}

// -
// The IDP's certificate data to verify the signature in the SAMLResponse issued by the IDP.
// Structure is documented below.
func (o InboundSamlConfigSpConfigOutput) SpCertificates() InboundSamlConfigSpConfigSpCertificateArrayOutput {
	return o.ApplyT(func(v InboundSamlConfigSpConfig) []InboundSamlConfigSpConfigSpCertificate { return v.SpCertificates }).(InboundSamlConfigSpConfigSpCertificateArrayOutput)
}

// Unique identifier for all SAML entities.
func (o InboundSamlConfigSpConfigOutput) SpEntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundSamlConfigSpConfig) *string { return v.SpEntityId }).(pulumi.StringPtrOutput)
}

type InboundSamlConfigSpConfigPtrOutput struct{ *pulumi.OutputState }

func (InboundSamlConfigSpConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InboundSamlConfigSpConfig)(nil)).Elem()
}

func (o InboundSamlConfigSpConfigPtrOutput) ToInboundSamlConfigSpConfigPtrOutput() InboundSamlConfigSpConfigPtrOutput {
	return o
}

func (o InboundSamlConfigSpConfigPtrOutput) ToInboundSamlConfigSpConfigPtrOutputWithContext(ctx context.Context) InboundSamlConfigSpConfigPtrOutput {
	return o
}

func (o InboundSamlConfigSpConfigPtrOutput) Elem() InboundSamlConfigSpConfigOutput {
	return o.ApplyT(func(v *InboundSamlConfigSpConfig) InboundSamlConfigSpConfig {
		if v != nil {
			return *v
		}
		var ret InboundSamlConfigSpConfig
		return ret
	}).(InboundSamlConfigSpConfigOutput)
}

// Callback URI where responses from IDP are handled. Must start with `https://`.
func (o InboundSamlConfigSpConfigPtrOutput) CallbackUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InboundSamlConfigSpConfig) *string {
		if v == nil {
			return nil
		}
		return v.CallbackUri
	}).(pulumi.StringPtrOutput)
}

// -
// The IDP's certificate data to verify the signature in the SAMLResponse issued by the IDP.
// Structure is documented below.
func (o InboundSamlConfigSpConfigPtrOutput) SpCertificates() InboundSamlConfigSpConfigSpCertificateArrayOutput {
	return o.ApplyT(func(v *InboundSamlConfigSpConfig) []InboundSamlConfigSpConfigSpCertificate {
		if v == nil {
			return nil
		}
		return v.SpCertificates
	}).(InboundSamlConfigSpConfigSpCertificateArrayOutput)
}

// Unique identifier for all SAML entities.
func (o InboundSamlConfigSpConfigPtrOutput) SpEntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InboundSamlConfigSpConfig) *string {
		if v == nil {
			return nil
		}
		return v.SpEntityId
	}).(pulumi.StringPtrOutput)
}

type InboundSamlConfigSpConfigSpCertificate struct {
	// -
	// The x509 certificate
	X509Certificate *string `pulumi:"x509Certificate"`
}

// InboundSamlConfigSpConfigSpCertificateInput is an input type that accepts InboundSamlConfigSpConfigSpCertificateArgs and InboundSamlConfigSpConfigSpCertificateOutput values.
// You can construct a concrete instance of `InboundSamlConfigSpConfigSpCertificateInput` via:
//
//	InboundSamlConfigSpConfigSpCertificateArgs{...}
type InboundSamlConfigSpConfigSpCertificateInput interface {
	pulumi.Input

	ToInboundSamlConfigSpConfigSpCertificateOutput() InboundSamlConfigSpConfigSpCertificateOutput
	ToInboundSamlConfigSpConfigSpCertificateOutputWithContext(context.Context) InboundSamlConfigSpConfigSpCertificateOutput
}

type InboundSamlConfigSpConfigSpCertificateArgs struct {
	// -
	// The x509 certificate
	X509Certificate pulumi.StringPtrInput `pulumi:"x509Certificate"`
}

func (InboundSamlConfigSpConfigSpCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InboundSamlConfigSpConfigSpCertificate)(nil)).Elem()
}

func (i InboundSamlConfigSpConfigSpCertificateArgs) ToInboundSamlConfigSpConfigSpCertificateOutput() InboundSamlConfigSpConfigSpCertificateOutput {
	return i.ToInboundSamlConfigSpConfigSpCertificateOutputWithContext(context.Background())
}

func (i InboundSamlConfigSpConfigSpCertificateArgs) ToInboundSamlConfigSpConfigSpCertificateOutputWithContext(ctx context.Context) InboundSamlConfigSpConfigSpCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InboundSamlConfigSpConfigSpCertificateOutput)
}

// InboundSamlConfigSpConfigSpCertificateArrayInput is an input type that accepts InboundSamlConfigSpConfigSpCertificateArray and InboundSamlConfigSpConfigSpCertificateArrayOutput values.
// You can construct a concrete instance of `InboundSamlConfigSpConfigSpCertificateArrayInput` via:
//
//	InboundSamlConfigSpConfigSpCertificateArray{ InboundSamlConfigSpConfigSpCertificateArgs{...} }
type InboundSamlConfigSpConfigSpCertificateArrayInput interface {
	pulumi.Input

	ToInboundSamlConfigSpConfigSpCertificateArrayOutput() InboundSamlConfigSpConfigSpCertificateArrayOutput
	ToInboundSamlConfigSpConfigSpCertificateArrayOutputWithContext(context.Context) InboundSamlConfigSpConfigSpCertificateArrayOutput
}

type InboundSamlConfigSpConfigSpCertificateArray []InboundSamlConfigSpConfigSpCertificateInput

func (InboundSamlConfigSpConfigSpCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InboundSamlConfigSpConfigSpCertificate)(nil)).Elem()
}

func (i InboundSamlConfigSpConfigSpCertificateArray) ToInboundSamlConfigSpConfigSpCertificateArrayOutput() InboundSamlConfigSpConfigSpCertificateArrayOutput {
	return i.ToInboundSamlConfigSpConfigSpCertificateArrayOutputWithContext(context.Background())
}

func (i InboundSamlConfigSpConfigSpCertificateArray) ToInboundSamlConfigSpConfigSpCertificateArrayOutputWithContext(ctx context.Context) InboundSamlConfigSpConfigSpCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InboundSamlConfigSpConfigSpCertificateArrayOutput)
}

type InboundSamlConfigSpConfigSpCertificateOutput struct{ *pulumi.OutputState }

func (InboundSamlConfigSpConfigSpCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InboundSamlConfigSpConfigSpCertificate)(nil)).Elem()
}

func (o InboundSamlConfigSpConfigSpCertificateOutput) ToInboundSamlConfigSpConfigSpCertificateOutput() InboundSamlConfigSpConfigSpCertificateOutput {
	return o
}

func (o InboundSamlConfigSpConfigSpCertificateOutput) ToInboundSamlConfigSpConfigSpCertificateOutputWithContext(ctx context.Context) InboundSamlConfigSpConfigSpCertificateOutput {
	return o
}

// -
// The x509 certificate
func (o InboundSamlConfigSpConfigSpCertificateOutput) X509Certificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundSamlConfigSpConfigSpCertificate) *string { return v.X509Certificate }).(pulumi.StringPtrOutput)
}

type InboundSamlConfigSpConfigSpCertificateArrayOutput struct{ *pulumi.OutputState }

func (InboundSamlConfigSpConfigSpCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InboundSamlConfigSpConfigSpCertificate)(nil)).Elem()
}

func (o InboundSamlConfigSpConfigSpCertificateArrayOutput) ToInboundSamlConfigSpConfigSpCertificateArrayOutput() InboundSamlConfigSpConfigSpCertificateArrayOutput {
	return o
}

func (o InboundSamlConfigSpConfigSpCertificateArrayOutput) ToInboundSamlConfigSpConfigSpCertificateArrayOutputWithContext(ctx context.Context) InboundSamlConfigSpConfigSpCertificateArrayOutput {
	return o
}

func (o InboundSamlConfigSpConfigSpCertificateArrayOutput) Index(i pulumi.IntInput) InboundSamlConfigSpConfigSpCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InboundSamlConfigSpConfigSpCertificate {
		return vs[0].([]InboundSamlConfigSpConfigSpCertificate)[vs[1].(int)]
	}).(InboundSamlConfigSpConfigSpCertificateOutput)
}

type ProjectDefaultConfigSignIn struct {
	// Whether to allow more than one account to have the same email.
	AllowDuplicateEmails *bool `pulumi:"allowDuplicateEmails"`
	// Configuration options related to authenticating an anonymous user.
	// Structure is documented below.
	Anonymous *ProjectDefaultConfigSignInAnonymous `pulumi:"anonymous"`
	// Configuration options related to authenticating a user by their email address.
	// Structure is documented below.
	Email *ProjectDefaultConfigSignInEmail `pulumi:"email"`
	// -
	// Output only. Hash config information.
	// Structure is documented below.
	HashConfigs []ProjectDefaultConfigSignInHashConfig `pulumi:"hashConfigs"`
	// Configuration options related to authenticated a user by their phone number.
	// Structure is documented below.
	PhoneNumber *ProjectDefaultConfigSignInPhoneNumber `pulumi:"phoneNumber"`
}

// ProjectDefaultConfigSignInInput is an input type that accepts ProjectDefaultConfigSignInArgs and ProjectDefaultConfigSignInOutput values.
// You can construct a concrete instance of `ProjectDefaultConfigSignInInput` via:
//
//	ProjectDefaultConfigSignInArgs{...}
type ProjectDefaultConfigSignInInput interface {
	pulumi.Input

	ToProjectDefaultConfigSignInOutput() ProjectDefaultConfigSignInOutput
	ToProjectDefaultConfigSignInOutputWithContext(context.Context) ProjectDefaultConfigSignInOutput
}

type ProjectDefaultConfigSignInArgs struct {
	// Whether to allow more than one account to have the same email.
	AllowDuplicateEmails pulumi.BoolPtrInput `pulumi:"allowDuplicateEmails"`
	// Configuration options related to authenticating an anonymous user.
	// Structure is documented below.
	Anonymous ProjectDefaultConfigSignInAnonymousPtrInput `pulumi:"anonymous"`
	// Configuration options related to authenticating a user by their email address.
	// Structure is documented below.
	Email ProjectDefaultConfigSignInEmailPtrInput `pulumi:"email"`
	// -
	// Output only. Hash config information.
	// Structure is documented below.
	HashConfigs ProjectDefaultConfigSignInHashConfigArrayInput `pulumi:"hashConfigs"`
	// Configuration options related to authenticated a user by their phone number.
	// Structure is documented below.
	PhoneNumber ProjectDefaultConfigSignInPhoneNumberPtrInput `pulumi:"phoneNumber"`
}

func (ProjectDefaultConfigSignInArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectDefaultConfigSignIn)(nil)).Elem()
}

func (i ProjectDefaultConfigSignInArgs) ToProjectDefaultConfigSignInOutput() ProjectDefaultConfigSignInOutput {
	return i.ToProjectDefaultConfigSignInOutputWithContext(context.Background())
}

func (i ProjectDefaultConfigSignInArgs) ToProjectDefaultConfigSignInOutputWithContext(ctx context.Context) ProjectDefaultConfigSignInOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectDefaultConfigSignInOutput)
}

func (i ProjectDefaultConfigSignInArgs) ToProjectDefaultConfigSignInPtrOutput() ProjectDefaultConfigSignInPtrOutput {
	return i.ToProjectDefaultConfigSignInPtrOutputWithContext(context.Background())
}

func (i ProjectDefaultConfigSignInArgs) ToProjectDefaultConfigSignInPtrOutputWithContext(ctx context.Context) ProjectDefaultConfigSignInPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectDefaultConfigSignInOutput).ToProjectDefaultConfigSignInPtrOutputWithContext(ctx)
}

// ProjectDefaultConfigSignInPtrInput is an input type that accepts ProjectDefaultConfigSignInArgs, ProjectDefaultConfigSignInPtr and ProjectDefaultConfigSignInPtrOutput values.
// You can construct a concrete instance of `ProjectDefaultConfigSignInPtrInput` via:
//
//	        ProjectDefaultConfigSignInArgs{...}
//
//	or:
//
//	        nil
type ProjectDefaultConfigSignInPtrInput interface {
	pulumi.Input

	ToProjectDefaultConfigSignInPtrOutput() ProjectDefaultConfigSignInPtrOutput
	ToProjectDefaultConfigSignInPtrOutputWithContext(context.Context) ProjectDefaultConfigSignInPtrOutput
}

type projectDefaultConfigSignInPtrType ProjectDefaultConfigSignInArgs

func ProjectDefaultConfigSignInPtr(v *ProjectDefaultConfigSignInArgs) ProjectDefaultConfigSignInPtrInput {
	return (*projectDefaultConfigSignInPtrType)(v)
}

func (*projectDefaultConfigSignInPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectDefaultConfigSignIn)(nil)).Elem()
}

func (i *projectDefaultConfigSignInPtrType) ToProjectDefaultConfigSignInPtrOutput() ProjectDefaultConfigSignInPtrOutput {
	return i.ToProjectDefaultConfigSignInPtrOutputWithContext(context.Background())
}

func (i *projectDefaultConfigSignInPtrType) ToProjectDefaultConfigSignInPtrOutputWithContext(ctx context.Context) ProjectDefaultConfigSignInPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectDefaultConfigSignInPtrOutput)
}

type ProjectDefaultConfigSignInOutput struct{ *pulumi.OutputState }

func (ProjectDefaultConfigSignInOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectDefaultConfigSignIn)(nil)).Elem()
}

func (o ProjectDefaultConfigSignInOutput) ToProjectDefaultConfigSignInOutput() ProjectDefaultConfigSignInOutput {
	return o
}

func (o ProjectDefaultConfigSignInOutput) ToProjectDefaultConfigSignInOutputWithContext(ctx context.Context) ProjectDefaultConfigSignInOutput {
	return o
}

func (o ProjectDefaultConfigSignInOutput) ToProjectDefaultConfigSignInPtrOutput() ProjectDefaultConfigSignInPtrOutput {
	return o.ToProjectDefaultConfigSignInPtrOutputWithContext(context.Background())
}

func (o ProjectDefaultConfigSignInOutput) ToProjectDefaultConfigSignInPtrOutputWithContext(ctx context.Context) ProjectDefaultConfigSignInPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectDefaultConfigSignIn) *ProjectDefaultConfigSignIn {
		return &v
	}).(ProjectDefaultConfigSignInPtrOutput)
}

// Whether to allow more than one account to have the same email.
func (o ProjectDefaultConfigSignInOutput) AllowDuplicateEmails() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProjectDefaultConfigSignIn) *bool { return v.AllowDuplicateEmails }).(pulumi.BoolPtrOutput)
}

// Configuration options related to authenticating an anonymous user.
// Structure is documented below.
func (o ProjectDefaultConfigSignInOutput) Anonymous() ProjectDefaultConfigSignInAnonymousPtrOutput {
	return o.ApplyT(func(v ProjectDefaultConfigSignIn) *ProjectDefaultConfigSignInAnonymous { return v.Anonymous }).(ProjectDefaultConfigSignInAnonymousPtrOutput)
}

// Configuration options related to authenticating a user by their email address.
// Structure is documented below.
func (o ProjectDefaultConfigSignInOutput) Email() ProjectDefaultConfigSignInEmailPtrOutput {
	return o.ApplyT(func(v ProjectDefaultConfigSignIn) *ProjectDefaultConfigSignInEmail { return v.Email }).(ProjectDefaultConfigSignInEmailPtrOutput)
}

// -
// Output only. Hash config information.
// Structure is documented below.
func (o ProjectDefaultConfigSignInOutput) HashConfigs() ProjectDefaultConfigSignInHashConfigArrayOutput {
	return o.ApplyT(func(v ProjectDefaultConfigSignIn) []ProjectDefaultConfigSignInHashConfig { return v.HashConfigs }).(ProjectDefaultConfigSignInHashConfigArrayOutput)
}

// Configuration options related to authenticated a user by their phone number.
// Structure is documented below.
func (o ProjectDefaultConfigSignInOutput) PhoneNumber() ProjectDefaultConfigSignInPhoneNumberPtrOutput {
	return o.ApplyT(func(v ProjectDefaultConfigSignIn) *ProjectDefaultConfigSignInPhoneNumber { return v.PhoneNumber }).(ProjectDefaultConfigSignInPhoneNumberPtrOutput)
}

type ProjectDefaultConfigSignInPtrOutput struct{ *pulumi.OutputState }

func (ProjectDefaultConfigSignInPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectDefaultConfigSignIn)(nil)).Elem()
}

func (o ProjectDefaultConfigSignInPtrOutput) ToProjectDefaultConfigSignInPtrOutput() ProjectDefaultConfigSignInPtrOutput {
	return o
}

func (o ProjectDefaultConfigSignInPtrOutput) ToProjectDefaultConfigSignInPtrOutputWithContext(ctx context.Context) ProjectDefaultConfigSignInPtrOutput {
	return o
}

func (o ProjectDefaultConfigSignInPtrOutput) Elem() ProjectDefaultConfigSignInOutput {
	return o.ApplyT(func(v *ProjectDefaultConfigSignIn) ProjectDefaultConfigSignIn {
		if v != nil {
			return *v
		}
		var ret ProjectDefaultConfigSignIn
		return ret
	}).(ProjectDefaultConfigSignInOutput)
}

// Whether to allow more than one account to have the same email.
func (o ProjectDefaultConfigSignInPtrOutput) AllowDuplicateEmails() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProjectDefaultConfigSignIn) *bool {
		if v == nil {
			return nil
		}
		return v.AllowDuplicateEmails
	}).(pulumi.BoolPtrOutput)
}

// Configuration options related to authenticating an anonymous user.
// Structure is documented below.
func (o ProjectDefaultConfigSignInPtrOutput) Anonymous() ProjectDefaultConfigSignInAnonymousPtrOutput {
	return o.ApplyT(func(v *ProjectDefaultConfigSignIn) *ProjectDefaultConfigSignInAnonymous {
		if v == nil {
			return nil
		}
		return v.Anonymous
	}).(ProjectDefaultConfigSignInAnonymousPtrOutput)
}

// Configuration options related to authenticating a user by their email address.
// Structure is documented below.
func (o ProjectDefaultConfigSignInPtrOutput) Email() ProjectDefaultConfigSignInEmailPtrOutput {
	return o.ApplyT(func(v *ProjectDefaultConfigSignIn) *ProjectDefaultConfigSignInEmail {
		if v == nil {
			return nil
		}
		return v.Email
	}).(ProjectDefaultConfigSignInEmailPtrOutput)
}

// -
// Output only. Hash config information.
// Structure is documented below.
func (o ProjectDefaultConfigSignInPtrOutput) HashConfigs() ProjectDefaultConfigSignInHashConfigArrayOutput {
	return o.ApplyT(func(v *ProjectDefaultConfigSignIn) []ProjectDefaultConfigSignInHashConfig {
		if v == nil {
			return nil
		}
		return v.HashConfigs
	}).(ProjectDefaultConfigSignInHashConfigArrayOutput)
}

// Configuration options related to authenticated a user by their phone number.
// Structure is documented below.
func (o ProjectDefaultConfigSignInPtrOutput) PhoneNumber() ProjectDefaultConfigSignInPhoneNumberPtrOutput {
	return o.ApplyT(func(v *ProjectDefaultConfigSignIn) *ProjectDefaultConfigSignInPhoneNumber {
		if v == nil {
			return nil
		}
		return v.PhoneNumber
	}).(ProjectDefaultConfigSignInPhoneNumberPtrOutput)
}

type ProjectDefaultConfigSignInAnonymous struct {
	// Whether anonymous user auth is enabled for the project or not.
	Enabled bool `pulumi:"enabled"`
}

// ProjectDefaultConfigSignInAnonymousInput is an input type that accepts ProjectDefaultConfigSignInAnonymousArgs and ProjectDefaultConfigSignInAnonymousOutput values.
// You can construct a concrete instance of `ProjectDefaultConfigSignInAnonymousInput` via:
//
//	ProjectDefaultConfigSignInAnonymousArgs{...}
type ProjectDefaultConfigSignInAnonymousInput interface {
	pulumi.Input

	ToProjectDefaultConfigSignInAnonymousOutput() ProjectDefaultConfigSignInAnonymousOutput
	ToProjectDefaultConfigSignInAnonymousOutputWithContext(context.Context) ProjectDefaultConfigSignInAnonymousOutput
}

type ProjectDefaultConfigSignInAnonymousArgs struct {
	// Whether anonymous user auth is enabled for the project or not.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (ProjectDefaultConfigSignInAnonymousArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectDefaultConfigSignInAnonymous)(nil)).Elem()
}

func (i ProjectDefaultConfigSignInAnonymousArgs) ToProjectDefaultConfigSignInAnonymousOutput() ProjectDefaultConfigSignInAnonymousOutput {
	return i.ToProjectDefaultConfigSignInAnonymousOutputWithContext(context.Background())
}

func (i ProjectDefaultConfigSignInAnonymousArgs) ToProjectDefaultConfigSignInAnonymousOutputWithContext(ctx context.Context) ProjectDefaultConfigSignInAnonymousOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectDefaultConfigSignInAnonymousOutput)
}

func (i ProjectDefaultConfigSignInAnonymousArgs) ToProjectDefaultConfigSignInAnonymousPtrOutput() ProjectDefaultConfigSignInAnonymousPtrOutput {
	return i.ToProjectDefaultConfigSignInAnonymousPtrOutputWithContext(context.Background())
}

func (i ProjectDefaultConfigSignInAnonymousArgs) ToProjectDefaultConfigSignInAnonymousPtrOutputWithContext(ctx context.Context) ProjectDefaultConfigSignInAnonymousPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectDefaultConfigSignInAnonymousOutput).ToProjectDefaultConfigSignInAnonymousPtrOutputWithContext(ctx)
}

// ProjectDefaultConfigSignInAnonymousPtrInput is an input type that accepts ProjectDefaultConfigSignInAnonymousArgs, ProjectDefaultConfigSignInAnonymousPtr and ProjectDefaultConfigSignInAnonymousPtrOutput values.
// You can construct a concrete instance of `ProjectDefaultConfigSignInAnonymousPtrInput` via:
//
//	        ProjectDefaultConfigSignInAnonymousArgs{...}
//
//	or:
//
//	        nil
type ProjectDefaultConfigSignInAnonymousPtrInput interface {
	pulumi.Input

	ToProjectDefaultConfigSignInAnonymousPtrOutput() ProjectDefaultConfigSignInAnonymousPtrOutput
	ToProjectDefaultConfigSignInAnonymousPtrOutputWithContext(context.Context) ProjectDefaultConfigSignInAnonymousPtrOutput
}

type projectDefaultConfigSignInAnonymousPtrType ProjectDefaultConfigSignInAnonymousArgs

func ProjectDefaultConfigSignInAnonymousPtr(v *ProjectDefaultConfigSignInAnonymousArgs) ProjectDefaultConfigSignInAnonymousPtrInput {
	return (*projectDefaultConfigSignInAnonymousPtrType)(v)
}

func (*projectDefaultConfigSignInAnonymousPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectDefaultConfigSignInAnonymous)(nil)).Elem()
}

func (i *projectDefaultConfigSignInAnonymousPtrType) ToProjectDefaultConfigSignInAnonymousPtrOutput() ProjectDefaultConfigSignInAnonymousPtrOutput {
	return i.ToProjectDefaultConfigSignInAnonymousPtrOutputWithContext(context.Background())
}

func (i *projectDefaultConfigSignInAnonymousPtrType) ToProjectDefaultConfigSignInAnonymousPtrOutputWithContext(ctx context.Context) ProjectDefaultConfigSignInAnonymousPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectDefaultConfigSignInAnonymousPtrOutput)
}

type ProjectDefaultConfigSignInAnonymousOutput struct{ *pulumi.OutputState }

func (ProjectDefaultConfigSignInAnonymousOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectDefaultConfigSignInAnonymous)(nil)).Elem()
}

func (o ProjectDefaultConfigSignInAnonymousOutput) ToProjectDefaultConfigSignInAnonymousOutput() ProjectDefaultConfigSignInAnonymousOutput {
	return o
}

func (o ProjectDefaultConfigSignInAnonymousOutput) ToProjectDefaultConfigSignInAnonymousOutputWithContext(ctx context.Context) ProjectDefaultConfigSignInAnonymousOutput {
	return o
}

func (o ProjectDefaultConfigSignInAnonymousOutput) ToProjectDefaultConfigSignInAnonymousPtrOutput() ProjectDefaultConfigSignInAnonymousPtrOutput {
	return o.ToProjectDefaultConfigSignInAnonymousPtrOutputWithContext(context.Background())
}

func (o ProjectDefaultConfigSignInAnonymousOutput) ToProjectDefaultConfigSignInAnonymousPtrOutputWithContext(ctx context.Context) ProjectDefaultConfigSignInAnonymousPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectDefaultConfigSignInAnonymous) *ProjectDefaultConfigSignInAnonymous {
		return &v
	}).(ProjectDefaultConfigSignInAnonymousPtrOutput)
}

// Whether anonymous user auth is enabled for the project or not.
func (o ProjectDefaultConfigSignInAnonymousOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ProjectDefaultConfigSignInAnonymous) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type ProjectDefaultConfigSignInAnonymousPtrOutput struct{ *pulumi.OutputState }

func (ProjectDefaultConfigSignInAnonymousPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectDefaultConfigSignInAnonymous)(nil)).Elem()
}

func (o ProjectDefaultConfigSignInAnonymousPtrOutput) ToProjectDefaultConfigSignInAnonymousPtrOutput() ProjectDefaultConfigSignInAnonymousPtrOutput {
	return o
}

func (o ProjectDefaultConfigSignInAnonymousPtrOutput) ToProjectDefaultConfigSignInAnonymousPtrOutputWithContext(ctx context.Context) ProjectDefaultConfigSignInAnonymousPtrOutput {
	return o
}

func (o ProjectDefaultConfigSignInAnonymousPtrOutput) Elem() ProjectDefaultConfigSignInAnonymousOutput {
	return o.ApplyT(func(v *ProjectDefaultConfigSignInAnonymous) ProjectDefaultConfigSignInAnonymous {
		if v != nil {
			return *v
		}
		var ret ProjectDefaultConfigSignInAnonymous
		return ret
	}).(ProjectDefaultConfigSignInAnonymousOutput)
}

// Whether anonymous user auth is enabled for the project or not.
func (o ProjectDefaultConfigSignInAnonymousPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProjectDefaultConfigSignInAnonymous) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type ProjectDefaultConfigSignInEmail struct {
	// Whether anonymous user auth is enabled for the project or not.
	Enabled *bool `pulumi:"enabled"`
	// Whether a password is required for email auth or not. If true, both an email and
	// password must be provided to sign in. If false, a user may sign in via either
	// email/password or email link.
	PasswordRequired *bool `pulumi:"passwordRequired"`
}

// ProjectDefaultConfigSignInEmailInput is an input type that accepts ProjectDefaultConfigSignInEmailArgs and ProjectDefaultConfigSignInEmailOutput values.
// You can construct a concrete instance of `ProjectDefaultConfigSignInEmailInput` via:
//
//	ProjectDefaultConfigSignInEmailArgs{...}
type ProjectDefaultConfigSignInEmailInput interface {
	pulumi.Input

	ToProjectDefaultConfigSignInEmailOutput() ProjectDefaultConfigSignInEmailOutput
	ToProjectDefaultConfigSignInEmailOutputWithContext(context.Context) ProjectDefaultConfigSignInEmailOutput
}

type ProjectDefaultConfigSignInEmailArgs struct {
	// Whether anonymous user auth is enabled for the project or not.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Whether a password is required for email auth or not. If true, both an email and
	// password must be provided to sign in. If false, a user may sign in via either
	// email/password or email link.
	PasswordRequired pulumi.BoolPtrInput `pulumi:"passwordRequired"`
}

func (ProjectDefaultConfigSignInEmailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectDefaultConfigSignInEmail)(nil)).Elem()
}

func (i ProjectDefaultConfigSignInEmailArgs) ToProjectDefaultConfigSignInEmailOutput() ProjectDefaultConfigSignInEmailOutput {
	return i.ToProjectDefaultConfigSignInEmailOutputWithContext(context.Background())
}

func (i ProjectDefaultConfigSignInEmailArgs) ToProjectDefaultConfigSignInEmailOutputWithContext(ctx context.Context) ProjectDefaultConfigSignInEmailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectDefaultConfigSignInEmailOutput)
}

func (i ProjectDefaultConfigSignInEmailArgs) ToProjectDefaultConfigSignInEmailPtrOutput() ProjectDefaultConfigSignInEmailPtrOutput {
	return i.ToProjectDefaultConfigSignInEmailPtrOutputWithContext(context.Background())
}

func (i ProjectDefaultConfigSignInEmailArgs) ToProjectDefaultConfigSignInEmailPtrOutputWithContext(ctx context.Context) ProjectDefaultConfigSignInEmailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectDefaultConfigSignInEmailOutput).ToProjectDefaultConfigSignInEmailPtrOutputWithContext(ctx)
}

// ProjectDefaultConfigSignInEmailPtrInput is an input type that accepts ProjectDefaultConfigSignInEmailArgs, ProjectDefaultConfigSignInEmailPtr and ProjectDefaultConfigSignInEmailPtrOutput values.
// You can construct a concrete instance of `ProjectDefaultConfigSignInEmailPtrInput` via:
//
//	        ProjectDefaultConfigSignInEmailArgs{...}
//
//	or:
//
//	        nil
type ProjectDefaultConfigSignInEmailPtrInput interface {
	pulumi.Input

	ToProjectDefaultConfigSignInEmailPtrOutput() ProjectDefaultConfigSignInEmailPtrOutput
	ToProjectDefaultConfigSignInEmailPtrOutputWithContext(context.Context) ProjectDefaultConfigSignInEmailPtrOutput
}

type projectDefaultConfigSignInEmailPtrType ProjectDefaultConfigSignInEmailArgs

func ProjectDefaultConfigSignInEmailPtr(v *ProjectDefaultConfigSignInEmailArgs) ProjectDefaultConfigSignInEmailPtrInput {
	return (*projectDefaultConfigSignInEmailPtrType)(v)
}

func (*projectDefaultConfigSignInEmailPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectDefaultConfigSignInEmail)(nil)).Elem()
}

func (i *projectDefaultConfigSignInEmailPtrType) ToProjectDefaultConfigSignInEmailPtrOutput() ProjectDefaultConfigSignInEmailPtrOutput {
	return i.ToProjectDefaultConfigSignInEmailPtrOutputWithContext(context.Background())
}

func (i *projectDefaultConfigSignInEmailPtrType) ToProjectDefaultConfigSignInEmailPtrOutputWithContext(ctx context.Context) ProjectDefaultConfigSignInEmailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectDefaultConfigSignInEmailPtrOutput)
}

type ProjectDefaultConfigSignInEmailOutput struct{ *pulumi.OutputState }

func (ProjectDefaultConfigSignInEmailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectDefaultConfigSignInEmail)(nil)).Elem()
}

func (o ProjectDefaultConfigSignInEmailOutput) ToProjectDefaultConfigSignInEmailOutput() ProjectDefaultConfigSignInEmailOutput {
	return o
}

func (o ProjectDefaultConfigSignInEmailOutput) ToProjectDefaultConfigSignInEmailOutputWithContext(ctx context.Context) ProjectDefaultConfigSignInEmailOutput {
	return o
}

func (o ProjectDefaultConfigSignInEmailOutput) ToProjectDefaultConfigSignInEmailPtrOutput() ProjectDefaultConfigSignInEmailPtrOutput {
	return o.ToProjectDefaultConfigSignInEmailPtrOutputWithContext(context.Background())
}

func (o ProjectDefaultConfigSignInEmailOutput) ToProjectDefaultConfigSignInEmailPtrOutputWithContext(ctx context.Context) ProjectDefaultConfigSignInEmailPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectDefaultConfigSignInEmail) *ProjectDefaultConfigSignInEmail {
		return &v
	}).(ProjectDefaultConfigSignInEmailPtrOutput)
}

// Whether anonymous user auth is enabled for the project or not.
func (o ProjectDefaultConfigSignInEmailOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProjectDefaultConfigSignInEmail) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Whether a password is required for email auth or not. If true, both an email and
// password must be provided to sign in. If false, a user may sign in via either
// email/password or email link.
func (o ProjectDefaultConfigSignInEmailOutput) PasswordRequired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProjectDefaultConfigSignInEmail) *bool { return v.PasswordRequired }).(pulumi.BoolPtrOutput)
}

type ProjectDefaultConfigSignInEmailPtrOutput struct{ *pulumi.OutputState }

func (ProjectDefaultConfigSignInEmailPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectDefaultConfigSignInEmail)(nil)).Elem()
}

func (o ProjectDefaultConfigSignInEmailPtrOutput) ToProjectDefaultConfigSignInEmailPtrOutput() ProjectDefaultConfigSignInEmailPtrOutput {
	return o
}

func (o ProjectDefaultConfigSignInEmailPtrOutput) ToProjectDefaultConfigSignInEmailPtrOutputWithContext(ctx context.Context) ProjectDefaultConfigSignInEmailPtrOutput {
	return o
}

func (o ProjectDefaultConfigSignInEmailPtrOutput) Elem() ProjectDefaultConfigSignInEmailOutput {
	return o.ApplyT(func(v *ProjectDefaultConfigSignInEmail) ProjectDefaultConfigSignInEmail {
		if v != nil {
			return *v
		}
		var ret ProjectDefaultConfigSignInEmail
		return ret
	}).(ProjectDefaultConfigSignInEmailOutput)
}

// Whether anonymous user auth is enabled for the project or not.
func (o ProjectDefaultConfigSignInEmailPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProjectDefaultConfigSignInEmail) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Whether a password is required for email auth or not. If true, both an email and
// password must be provided to sign in. If false, a user may sign in via either
// email/password or email link.
func (o ProjectDefaultConfigSignInEmailPtrOutput) PasswordRequired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProjectDefaultConfigSignInEmail) *bool {
		if v == nil {
			return nil
		}
		return v.PasswordRequired
	}).(pulumi.BoolPtrOutput)
}

type ProjectDefaultConfigSignInHashConfig struct {
	// -
	// Different password hash algorithms used in Identity Toolkit.
	Algorithm *string `pulumi:"algorithm"`
	// -
	// Memory cost for hash calculation. Used by scrypt and other similar password derivation algorithms. See https://tools.ietf.org/html/rfc7914 for explanation of field.
	MemoryCost *int `pulumi:"memoryCost"`
	// -
	// How many rounds for hash calculation. Used by scrypt and other similar password derivation algorithms.
	Rounds *int `pulumi:"rounds"`
	// -
	// Non-printable character to be inserted between the salt and plain text password in base64.
	SaltSeparator *string `pulumi:"saltSeparator"`
	// -
	// Signer key in base64.
	SignerKey *string `pulumi:"signerKey"`
}

// ProjectDefaultConfigSignInHashConfigInput is an input type that accepts ProjectDefaultConfigSignInHashConfigArgs and ProjectDefaultConfigSignInHashConfigOutput values.
// You can construct a concrete instance of `ProjectDefaultConfigSignInHashConfigInput` via:
//
//	ProjectDefaultConfigSignInHashConfigArgs{...}
type ProjectDefaultConfigSignInHashConfigInput interface {
	pulumi.Input

	ToProjectDefaultConfigSignInHashConfigOutput() ProjectDefaultConfigSignInHashConfigOutput
	ToProjectDefaultConfigSignInHashConfigOutputWithContext(context.Context) ProjectDefaultConfigSignInHashConfigOutput
}

type ProjectDefaultConfigSignInHashConfigArgs struct {
	// -
	// Different password hash algorithms used in Identity Toolkit.
	Algorithm pulumi.StringPtrInput `pulumi:"algorithm"`
	// -
	// Memory cost for hash calculation. Used by scrypt and other similar password derivation algorithms. See https://tools.ietf.org/html/rfc7914 for explanation of field.
	MemoryCost pulumi.IntPtrInput `pulumi:"memoryCost"`
	// -
	// How many rounds for hash calculation. Used by scrypt and other similar password derivation algorithms.
	Rounds pulumi.IntPtrInput `pulumi:"rounds"`
	// -
	// Non-printable character to be inserted between the salt and plain text password in base64.
	SaltSeparator pulumi.StringPtrInput `pulumi:"saltSeparator"`
	// -
	// Signer key in base64.
	SignerKey pulumi.StringPtrInput `pulumi:"signerKey"`
}

func (ProjectDefaultConfigSignInHashConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectDefaultConfigSignInHashConfig)(nil)).Elem()
}

func (i ProjectDefaultConfigSignInHashConfigArgs) ToProjectDefaultConfigSignInHashConfigOutput() ProjectDefaultConfigSignInHashConfigOutput {
	return i.ToProjectDefaultConfigSignInHashConfigOutputWithContext(context.Background())
}

func (i ProjectDefaultConfigSignInHashConfigArgs) ToProjectDefaultConfigSignInHashConfigOutputWithContext(ctx context.Context) ProjectDefaultConfigSignInHashConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectDefaultConfigSignInHashConfigOutput)
}

// ProjectDefaultConfigSignInHashConfigArrayInput is an input type that accepts ProjectDefaultConfigSignInHashConfigArray and ProjectDefaultConfigSignInHashConfigArrayOutput values.
// You can construct a concrete instance of `ProjectDefaultConfigSignInHashConfigArrayInput` via:
//
//	ProjectDefaultConfigSignInHashConfigArray{ ProjectDefaultConfigSignInHashConfigArgs{...} }
type ProjectDefaultConfigSignInHashConfigArrayInput interface {
	pulumi.Input

	ToProjectDefaultConfigSignInHashConfigArrayOutput() ProjectDefaultConfigSignInHashConfigArrayOutput
	ToProjectDefaultConfigSignInHashConfigArrayOutputWithContext(context.Context) ProjectDefaultConfigSignInHashConfigArrayOutput
}

type ProjectDefaultConfigSignInHashConfigArray []ProjectDefaultConfigSignInHashConfigInput

func (ProjectDefaultConfigSignInHashConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectDefaultConfigSignInHashConfig)(nil)).Elem()
}

func (i ProjectDefaultConfigSignInHashConfigArray) ToProjectDefaultConfigSignInHashConfigArrayOutput() ProjectDefaultConfigSignInHashConfigArrayOutput {
	return i.ToProjectDefaultConfigSignInHashConfigArrayOutputWithContext(context.Background())
}

func (i ProjectDefaultConfigSignInHashConfigArray) ToProjectDefaultConfigSignInHashConfigArrayOutputWithContext(ctx context.Context) ProjectDefaultConfigSignInHashConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectDefaultConfigSignInHashConfigArrayOutput)
}

type ProjectDefaultConfigSignInHashConfigOutput struct{ *pulumi.OutputState }

func (ProjectDefaultConfigSignInHashConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectDefaultConfigSignInHashConfig)(nil)).Elem()
}

func (o ProjectDefaultConfigSignInHashConfigOutput) ToProjectDefaultConfigSignInHashConfigOutput() ProjectDefaultConfigSignInHashConfigOutput {
	return o
}

func (o ProjectDefaultConfigSignInHashConfigOutput) ToProjectDefaultConfigSignInHashConfigOutputWithContext(ctx context.Context) ProjectDefaultConfigSignInHashConfigOutput {
	return o
}

// -
// Different password hash algorithms used in Identity Toolkit.
func (o ProjectDefaultConfigSignInHashConfigOutput) Algorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectDefaultConfigSignInHashConfig) *string { return v.Algorithm }).(pulumi.StringPtrOutput)
}

// -
// Memory cost for hash calculation. Used by scrypt and other similar password derivation algorithms. See https://tools.ietf.org/html/rfc7914 for explanation of field.
func (o ProjectDefaultConfigSignInHashConfigOutput) MemoryCost() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProjectDefaultConfigSignInHashConfig) *int { return v.MemoryCost }).(pulumi.IntPtrOutput)
}

// -
// How many rounds for hash calculation. Used by scrypt and other similar password derivation algorithms.
func (o ProjectDefaultConfigSignInHashConfigOutput) Rounds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProjectDefaultConfigSignInHashConfig) *int { return v.Rounds }).(pulumi.IntPtrOutput)
}

// -
// Non-printable character to be inserted between the salt and plain text password in base64.
func (o ProjectDefaultConfigSignInHashConfigOutput) SaltSeparator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectDefaultConfigSignInHashConfig) *string { return v.SaltSeparator }).(pulumi.StringPtrOutput)
}

// -
// Signer key in base64.
func (o ProjectDefaultConfigSignInHashConfigOutput) SignerKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectDefaultConfigSignInHashConfig) *string { return v.SignerKey }).(pulumi.StringPtrOutput)
}

type ProjectDefaultConfigSignInHashConfigArrayOutput struct{ *pulumi.OutputState }

func (ProjectDefaultConfigSignInHashConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectDefaultConfigSignInHashConfig)(nil)).Elem()
}

func (o ProjectDefaultConfigSignInHashConfigArrayOutput) ToProjectDefaultConfigSignInHashConfigArrayOutput() ProjectDefaultConfigSignInHashConfigArrayOutput {
	return o
}

func (o ProjectDefaultConfigSignInHashConfigArrayOutput) ToProjectDefaultConfigSignInHashConfigArrayOutputWithContext(ctx context.Context) ProjectDefaultConfigSignInHashConfigArrayOutput {
	return o
}

func (o ProjectDefaultConfigSignInHashConfigArrayOutput) Index(i pulumi.IntInput) ProjectDefaultConfigSignInHashConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectDefaultConfigSignInHashConfig {
		return vs[0].([]ProjectDefaultConfigSignInHashConfig)[vs[1].(int)]
	}).(ProjectDefaultConfigSignInHashConfigOutput)
}

type ProjectDefaultConfigSignInPhoneNumber struct {
	// Whether anonymous user auth is enabled for the project or not.
	Enabled *bool `pulumi:"enabled"`
	// A map of <test phone number, fake code> that can be used for phone auth testing.
	TestPhoneNumbers map[string]string `pulumi:"testPhoneNumbers"`
}

// ProjectDefaultConfigSignInPhoneNumberInput is an input type that accepts ProjectDefaultConfigSignInPhoneNumberArgs and ProjectDefaultConfigSignInPhoneNumberOutput values.
// You can construct a concrete instance of `ProjectDefaultConfigSignInPhoneNumberInput` via:
//
//	ProjectDefaultConfigSignInPhoneNumberArgs{...}
type ProjectDefaultConfigSignInPhoneNumberInput interface {
	pulumi.Input

	ToProjectDefaultConfigSignInPhoneNumberOutput() ProjectDefaultConfigSignInPhoneNumberOutput
	ToProjectDefaultConfigSignInPhoneNumberOutputWithContext(context.Context) ProjectDefaultConfigSignInPhoneNumberOutput
}

type ProjectDefaultConfigSignInPhoneNumberArgs struct {
	// Whether anonymous user auth is enabled for the project or not.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// A map of <test phone number, fake code> that can be used for phone auth testing.
	TestPhoneNumbers pulumi.StringMapInput `pulumi:"testPhoneNumbers"`
}

func (ProjectDefaultConfigSignInPhoneNumberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectDefaultConfigSignInPhoneNumber)(nil)).Elem()
}

func (i ProjectDefaultConfigSignInPhoneNumberArgs) ToProjectDefaultConfigSignInPhoneNumberOutput() ProjectDefaultConfigSignInPhoneNumberOutput {
	return i.ToProjectDefaultConfigSignInPhoneNumberOutputWithContext(context.Background())
}

func (i ProjectDefaultConfigSignInPhoneNumberArgs) ToProjectDefaultConfigSignInPhoneNumberOutputWithContext(ctx context.Context) ProjectDefaultConfigSignInPhoneNumberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectDefaultConfigSignInPhoneNumberOutput)
}

func (i ProjectDefaultConfigSignInPhoneNumberArgs) ToProjectDefaultConfigSignInPhoneNumberPtrOutput() ProjectDefaultConfigSignInPhoneNumberPtrOutput {
	return i.ToProjectDefaultConfigSignInPhoneNumberPtrOutputWithContext(context.Background())
}

func (i ProjectDefaultConfigSignInPhoneNumberArgs) ToProjectDefaultConfigSignInPhoneNumberPtrOutputWithContext(ctx context.Context) ProjectDefaultConfigSignInPhoneNumberPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectDefaultConfigSignInPhoneNumberOutput).ToProjectDefaultConfigSignInPhoneNumberPtrOutputWithContext(ctx)
}

// ProjectDefaultConfigSignInPhoneNumberPtrInput is an input type that accepts ProjectDefaultConfigSignInPhoneNumberArgs, ProjectDefaultConfigSignInPhoneNumberPtr and ProjectDefaultConfigSignInPhoneNumberPtrOutput values.
// You can construct a concrete instance of `ProjectDefaultConfigSignInPhoneNumberPtrInput` via:
//
//	        ProjectDefaultConfigSignInPhoneNumberArgs{...}
//
//	or:
//
//	        nil
type ProjectDefaultConfigSignInPhoneNumberPtrInput interface {
	pulumi.Input

	ToProjectDefaultConfigSignInPhoneNumberPtrOutput() ProjectDefaultConfigSignInPhoneNumberPtrOutput
	ToProjectDefaultConfigSignInPhoneNumberPtrOutputWithContext(context.Context) ProjectDefaultConfigSignInPhoneNumberPtrOutput
}

type projectDefaultConfigSignInPhoneNumberPtrType ProjectDefaultConfigSignInPhoneNumberArgs

func ProjectDefaultConfigSignInPhoneNumberPtr(v *ProjectDefaultConfigSignInPhoneNumberArgs) ProjectDefaultConfigSignInPhoneNumberPtrInput {
	return (*projectDefaultConfigSignInPhoneNumberPtrType)(v)
}

func (*projectDefaultConfigSignInPhoneNumberPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectDefaultConfigSignInPhoneNumber)(nil)).Elem()
}

func (i *projectDefaultConfigSignInPhoneNumberPtrType) ToProjectDefaultConfigSignInPhoneNumberPtrOutput() ProjectDefaultConfigSignInPhoneNumberPtrOutput {
	return i.ToProjectDefaultConfigSignInPhoneNumberPtrOutputWithContext(context.Background())
}

func (i *projectDefaultConfigSignInPhoneNumberPtrType) ToProjectDefaultConfigSignInPhoneNumberPtrOutputWithContext(ctx context.Context) ProjectDefaultConfigSignInPhoneNumberPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectDefaultConfigSignInPhoneNumberPtrOutput)
}

type ProjectDefaultConfigSignInPhoneNumberOutput struct{ *pulumi.OutputState }

func (ProjectDefaultConfigSignInPhoneNumberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectDefaultConfigSignInPhoneNumber)(nil)).Elem()
}

func (o ProjectDefaultConfigSignInPhoneNumberOutput) ToProjectDefaultConfigSignInPhoneNumberOutput() ProjectDefaultConfigSignInPhoneNumberOutput {
	return o
}

func (o ProjectDefaultConfigSignInPhoneNumberOutput) ToProjectDefaultConfigSignInPhoneNumberOutputWithContext(ctx context.Context) ProjectDefaultConfigSignInPhoneNumberOutput {
	return o
}

func (o ProjectDefaultConfigSignInPhoneNumberOutput) ToProjectDefaultConfigSignInPhoneNumberPtrOutput() ProjectDefaultConfigSignInPhoneNumberPtrOutput {
	return o.ToProjectDefaultConfigSignInPhoneNumberPtrOutputWithContext(context.Background())
}

func (o ProjectDefaultConfigSignInPhoneNumberOutput) ToProjectDefaultConfigSignInPhoneNumberPtrOutputWithContext(ctx context.Context) ProjectDefaultConfigSignInPhoneNumberPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectDefaultConfigSignInPhoneNumber) *ProjectDefaultConfigSignInPhoneNumber {
		return &v
	}).(ProjectDefaultConfigSignInPhoneNumberPtrOutput)
}

// Whether anonymous user auth is enabled for the project or not.
func (o ProjectDefaultConfigSignInPhoneNumberOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProjectDefaultConfigSignInPhoneNumber) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// A map of <test phone number, fake code> that can be used for phone auth testing.
func (o ProjectDefaultConfigSignInPhoneNumberOutput) TestPhoneNumbers() pulumi.StringMapOutput {
	return o.ApplyT(func(v ProjectDefaultConfigSignInPhoneNumber) map[string]string { return v.TestPhoneNumbers }).(pulumi.StringMapOutput)
}

type ProjectDefaultConfigSignInPhoneNumberPtrOutput struct{ *pulumi.OutputState }

func (ProjectDefaultConfigSignInPhoneNumberPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectDefaultConfigSignInPhoneNumber)(nil)).Elem()
}

func (o ProjectDefaultConfigSignInPhoneNumberPtrOutput) ToProjectDefaultConfigSignInPhoneNumberPtrOutput() ProjectDefaultConfigSignInPhoneNumberPtrOutput {
	return o
}

func (o ProjectDefaultConfigSignInPhoneNumberPtrOutput) ToProjectDefaultConfigSignInPhoneNumberPtrOutputWithContext(ctx context.Context) ProjectDefaultConfigSignInPhoneNumberPtrOutput {
	return o
}

func (o ProjectDefaultConfigSignInPhoneNumberPtrOutput) Elem() ProjectDefaultConfigSignInPhoneNumberOutput {
	return o.ApplyT(func(v *ProjectDefaultConfigSignInPhoneNumber) ProjectDefaultConfigSignInPhoneNumber {
		if v != nil {
			return *v
		}
		var ret ProjectDefaultConfigSignInPhoneNumber
		return ret
	}).(ProjectDefaultConfigSignInPhoneNumberOutput)
}

// Whether anonymous user auth is enabled for the project or not.
func (o ProjectDefaultConfigSignInPhoneNumberPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProjectDefaultConfigSignInPhoneNumber) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// A map of <test phone number, fake code> that can be used for phone auth testing.
func (o ProjectDefaultConfigSignInPhoneNumberPtrOutput) TestPhoneNumbers() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ProjectDefaultConfigSignInPhoneNumber) map[string]string {
		if v == nil {
			return nil
		}
		return v.TestPhoneNumbers
	}).(pulumi.StringMapOutput)
}

type TenantInboundSamlConfigIdpConfig struct {
	// The IDP's certificate data to verify the signature in the SAMLResponse issued by the IDP.
	// Structure is documented below.
	IdpCertificates []TenantInboundSamlConfigIdpConfigIdpCertificate `pulumi:"idpCertificates"`
	// Unique identifier for all SAML entities
	IdpEntityId string `pulumi:"idpEntityId"`
	// Indicates if outbounding SAMLRequest should be signed.
	SignRequest *bool `pulumi:"signRequest"`
	// URL to send Authentication request to.
	SsoUrl string `pulumi:"ssoUrl"`
}

// TenantInboundSamlConfigIdpConfigInput is an input type that accepts TenantInboundSamlConfigIdpConfigArgs and TenantInboundSamlConfigIdpConfigOutput values.
// You can construct a concrete instance of `TenantInboundSamlConfigIdpConfigInput` via:
//
//	TenantInboundSamlConfigIdpConfigArgs{...}
type TenantInboundSamlConfigIdpConfigInput interface {
	pulumi.Input

	ToTenantInboundSamlConfigIdpConfigOutput() TenantInboundSamlConfigIdpConfigOutput
	ToTenantInboundSamlConfigIdpConfigOutputWithContext(context.Context) TenantInboundSamlConfigIdpConfigOutput
}

type TenantInboundSamlConfigIdpConfigArgs struct {
	// The IDP's certificate data to verify the signature in the SAMLResponse issued by the IDP.
	// Structure is documented below.
	IdpCertificates TenantInboundSamlConfigIdpConfigIdpCertificateArrayInput `pulumi:"idpCertificates"`
	// Unique identifier for all SAML entities
	IdpEntityId pulumi.StringInput `pulumi:"idpEntityId"`
	// Indicates if outbounding SAMLRequest should be signed.
	SignRequest pulumi.BoolPtrInput `pulumi:"signRequest"`
	// URL to send Authentication request to.
	SsoUrl pulumi.StringInput `pulumi:"ssoUrl"`
}

func (TenantInboundSamlConfigIdpConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TenantInboundSamlConfigIdpConfig)(nil)).Elem()
}

func (i TenantInboundSamlConfigIdpConfigArgs) ToTenantInboundSamlConfigIdpConfigOutput() TenantInboundSamlConfigIdpConfigOutput {
	return i.ToTenantInboundSamlConfigIdpConfigOutputWithContext(context.Background())
}

func (i TenantInboundSamlConfigIdpConfigArgs) ToTenantInboundSamlConfigIdpConfigOutputWithContext(ctx context.Context) TenantInboundSamlConfigIdpConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantInboundSamlConfigIdpConfigOutput)
}

func (i TenantInboundSamlConfigIdpConfigArgs) ToTenantInboundSamlConfigIdpConfigPtrOutput() TenantInboundSamlConfigIdpConfigPtrOutput {
	return i.ToTenantInboundSamlConfigIdpConfigPtrOutputWithContext(context.Background())
}

func (i TenantInboundSamlConfigIdpConfigArgs) ToTenantInboundSamlConfigIdpConfigPtrOutputWithContext(ctx context.Context) TenantInboundSamlConfigIdpConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantInboundSamlConfigIdpConfigOutput).ToTenantInboundSamlConfigIdpConfigPtrOutputWithContext(ctx)
}

// TenantInboundSamlConfigIdpConfigPtrInput is an input type that accepts TenantInboundSamlConfigIdpConfigArgs, TenantInboundSamlConfigIdpConfigPtr and TenantInboundSamlConfigIdpConfigPtrOutput values.
// You can construct a concrete instance of `TenantInboundSamlConfigIdpConfigPtrInput` via:
//
//	        TenantInboundSamlConfigIdpConfigArgs{...}
//
//	or:
//
//	        nil
type TenantInboundSamlConfigIdpConfigPtrInput interface {
	pulumi.Input

	ToTenantInboundSamlConfigIdpConfigPtrOutput() TenantInboundSamlConfigIdpConfigPtrOutput
	ToTenantInboundSamlConfigIdpConfigPtrOutputWithContext(context.Context) TenantInboundSamlConfigIdpConfigPtrOutput
}

type tenantInboundSamlConfigIdpConfigPtrType TenantInboundSamlConfigIdpConfigArgs

func TenantInboundSamlConfigIdpConfigPtr(v *TenantInboundSamlConfigIdpConfigArgs) TenantInboundSamlConfigIdpConfigPtrInput {
	return (*tenantInboundSamlConfigIdpConfigPtrType)(v)
}

func (*tenantInboundSamlConfigIdpConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TenantInboundSamlConfigIdpConfig)(nil)).Elem()
}

func (i *tenantInboundSamlConfigIdpConfigPtrType) ToTenantInboundSamlConfigIdpConfigPtrOutput() TenantInboundSamlConfigIdpConfigPtrOutput {
	return i.ToTenantInboundSamlConfigIdpConfigPtrOutputWithContext(context.Background())
}

func (i *tenantInboundSamlConfigIdpConfigPtrType) ToTenantInboundSamlConfigIdpConfigPtrOutputWithContext(ctx context.Context) TenantInboundSamlConfigIdpConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantInboundSamlConfigIdpConfigPtrOutput)
}

type TenantInboundSamlConfigIdpConfigOutput struct{ *pulumi.OutputState }

func (TenantInboundSamlConfigIdpConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TenantInboundSamlConfigIdpConfig)(nil)).Elem()
}

func (o TenantInboundSamlConfigIdpConfigOutput) ToTenantInboundSamlConfigIdpConfigOutput() TenantInboundSamlConfigIdpConfigOutput {
	return o
}

func (o TenantInboundSamlConfigIdpConfigOutput) ToTenantInboundSamlConfigIdpConfigOutputWithContext(ctx context.Context) TenantInboundSamlConfigIdpConfigOutput {
	return o
}

func (o TenantInboundSamlConfigIdpConfigOutput) ToTenantInboundSamlConfigIdpConfigPtrOutput() TenantInboundSamlConfigIdpConfigPtrOutput {
	return o.ToTenantInboundSamlConfigIdpConfigPtrOutputWithContext(context.Background())
}

func (o TenantInboundSamlConfigIdpConfigOutput) ToTenantInboundSamlConfigIdpConfigPtrOutputWithContext(ctx context.Context) TenantInboundSamlConfigIdpConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TenantInboundSamlConfigIdpConfig) *TenantInboundSamlConfigIdpConfig {
		return &v
	}).(TenantInboundSamlConfigIdpConfigPtrOutput)
}

// The IDP's certificate data to verify the signature in the SAMLResponse issued by the IDP.
// Structure is documented below.
func (o TenantInboundSamlConfigIdpConfigOutput) IdpCertificates() TenantInboundSamlConfigIdpConfigIdpCertificateArrayOutput {
	return o.ApplyT(func(v TenantInboundSamlConfigIdpConfig) []TenantInboundSamlConfigIdpConfigIdpCertificate {
		return v.IdpCertificates
	}).(TenantInboundSamlConfigIdpConfigIdpCertificateArrayOutput)
}

// Unique identifier for all SAML entities
func (o TenantInboundSamlConfigIdpConfigOutput) IdpEntityId() pulumi.StringOutput {
	return o.ApplyT(func(v TenantInboundSamlConfigIdpConfig) string { return v.IdpEntityId }).(pulumi.StringOutput)
}

// Indicates if outbounding SAMLRequest should be signed.
func (o TenantInboundSamlConfigIdpConfigOutput) SignRequest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TenantInboundSamlConfigIdpConfig) *bool { return v.SignRequest }).(pulumi.BoolPtrOutput)
}

// URL to send Authentication request to.
func (o TenantInboundSamlConfigIdpConfigOutput) SsoUrl() pulumi.StringOutput {
	return o.ApplyT(func(v TenantInboundSamlConfigIdpConfig) string { return v.SsoUrl }).(pulumi.StringOutput)
}

type TenantInboundSamlConfigIdpConfigPtrOutput struct{ *pulumi.OutputState }

func (TenantInboundSamlConfigIdpConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TenantInboundSamlConfigIdpConfig)(nil)).Elem()
}

func (o TenantInboundSamlConfigIdpConfigPtrOutput) ToTenantInboundSamlConfigIdpConfigPtrOutput() TenantInboundSamlConfigIdpConfigPtrOutput {
	return o
}

func (o TenantInboundSamlConfigIdpConfigPtrOutput) ToTenantInboundSamlConfigIdpConfigPtrOutputWithContext(ctx context.Context) TenantInboundSamlConfigIdpConfigPtrOutput {
	return o
}

func (o TenantInboundSamlConfigIdpConfigPtrOutput) Elem() TenantInboundSamlConfigIdpConfigOutput {
	return o.ApplyT(func(v *TenantInboundSamlConfigIdpConfig) TenantInboundSamlConfigIdpConfig {
		if v != nil {
			return *v
		}
		var ret TenantInboundSamlConfigIdpConfig
		return ret
	}).(TenantInboundSamlConfigIdpConfigOutput)
}

// The IDP's certificate data to verify the signature in the SAMLResponse issued by the IDP.
// Structure is documented below.
func (o TenantInboundSamlConfigIdpConfigPtrOutput) IdpCertificates() TenantInboundSamlConfigIdpConfigIdpCertificateArrayOutput {
	return o.ApplyT(func(v *TenantInboundSamlConfigIdpConfig) []TenantInboundSamlConfigIdpConfigIdpCertificate {
		if v == nil {
			return nil
		}
		return v.IdpCertificates
	}).(TenantInboundSamlConfigIdpConfigIdpCertificateArrayOutput)
}

// Unique identifier for all SAML entities
func (o TenantInboundSamlConfigIdpConfigPtrOutput) IdpEntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TenantInboundSamlConfigIdpConfig) *string {
		if v == nil {
			return nil
		}
		return &v.IdpEntityId
	}).(pulumi.StringPtrOutput)
}

// Indicates if outbounding SAMLRequest should be signed.
func (o TenantInboundSamlConfigIdpConfigPtrOutput) SignRequest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TenantInboundSamlConfigIdpConfig) *bool {
		if v == nil {
			return nil
		}
		return v.SignRequest
	}).(pulumi.BoolPtrOutput)
}

// URL to send Authentication request to.
func (o TenantInboundSamlConfigIdpConfigPtrOutput) SsoUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TenantInboundSamlConfigIdpConfig) *string {
		if v == nil {
			return nil
		}
		return &v.SsoUrl
	}).(pulumi.StringPtrOutput)
}

type TenantInboundSamlConfigIdpConfigIdpCertificate struct {
	// -
	// The x509 certificate
	X509Certificate *string `pulumi:"x509Certificate"`
}

// TenantInboundSamlConfigIdpConfigIdpCertificateInput is an input type that accepts TenantInboundSamlConfigIdpConfigIdpCertificateArgs and TenantInboundSamlConfigIdpConfigIdpCertificateOutput values.
// You can construct a concrete instance of `TenantInboundSamlConfigIdpConfigIdpCertificateInput` via:
//
//	TenantInboundSamlConfigIdpConfigIdpCertificateArgs{...}
type TenantInboundSamlConfigIdpConfigIdpCertificateInput interface {
	pulumi.Input

	ToTenantInboundSamlConfigIdpConfigIdpCertificateOutput() TenantInboundSamlConfigIdpConfigIdpCertificateOutput
	ToTenantInboundSamlConfigIdpConfigIdpCertificateOutputWithContext(context.Context) TenantInboundSamlConfigIdpConfigIdpCertificateOutput
}

type TenantInboundSamlConfigIdpConfigIdpCertificateArgs struct {
	// -
	// The x509 certificate
	X509Certificate pulumi.StringPtrInput `pulumi:"x509Certificate"`
}

func (TenantInboundSamlConfigIdpConfigIdpCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TenantInboundSamlConfigIdpConfigIdpCertificate)(nil)).Elem()
}

func (i TenantInboundSamlConfigIdpConfigIdpCertificateArgs) ToTenantInboundSamlConfigIdpConfigIdpCertificateOutput() TenantInboundSamlConfigIdpConfigIdpCertificateOutput {
	return i.ToTenantInboundSamlConfigIdpConfigIdpCertificateOutputWithContext(context.Background())
}

func (i TenantInboundSamlConfigIdpConfigIdpCertificateArgs) ToTenantInboundSamlConfigIdpConfigIdpCertificateOutputWithContext(ctx context.Context) TenantInboundSamlConfigIdpConfigIdpCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantInboundSamlConfigIdpConfigIdpCertificateOutput)
}

// TenantInboundSamlConfigIdpConfigIdpCertificateArrayInput is an input type that accepts TenantInboundSamlConfigIdpConfigIdpCertificateArray and TenantInboundSamlConfigIdpConfigIdpCertificateArrayOutput values.
// You can construct a concrete instance of `TenantInboundSamlConfigIdpConfigIdpCertificateArrayInput` via:
//
//	TenantInboundSamlConfigIdpConfigIdpCertificateArray{ TenantInboundSamlConfigIdpConfigIdpCertificateArgs{...} }
type TenantInboundSamlConfigIdpConfigIdpCertificateArrayInput interface {
	pulumi.Input

	ToTenantInboundSamlConfigIdpConfigIdpCertificateArrayOutput() TenantInboundSamlConfigIdpConfigIdpCertificateArrayOutput
	ToTenantInboundSamlConfigIdpConfigIdpCertificateArrayOutputWithContext(context.Context) TenantInboundSamlConfigIdpConfigIdpCertificateArrayOutput
}

type TenantInboundSamlConfigIdpConfigIdpCertificateArray []TenantInboundSamlConfigIdpConfigIdpCertificateInput

func (TenantInboundSamlConfigIdpConfigIdpCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TenantInboundSamlConfigIdpConfigIdpCertificate)(nil)).Elem()
}

func (i TenantInboundSamlConfigIdpConfigIdpCertificateArray) ToTenantInboundSamlConfigIdpConfigIdpCertificateArrayOutput() TenantInboundSamlConfigIdpConfigIdpCertificateArrayOutput {
	return i.ToTenantInboundSamlConfigIdpConfigIdpCertificateArrayOutputWithContext(context.Background())
}

func (i TenantInboundSamlConfigIdpConfigIdpCertificateArray) ToTenantInboundSamlConfigIdpConfigIdpCertificateArrayOutputWithContext(ctx context.Context) TenantInboundSamlConfigIdpConfigIdpCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantInboundSamlConfigIdpConfigIdpCertificateArrayOutput)
}

type TenantInboundSamlConfigIdpConfigIdpCertificateOutput struct{ *pulumi.OutputState }

func (TenantInboundSamlConfigIdpConfigIdpCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TenantInboundSamlConfigIdpConfigIdpCertificate)(nil)).Elem()
}

func (o TenantInboundSamlConfigIdpConfigIdpCertificateOutput) ToTenantInboundSamlConfigIdpConfigIdpCertificateOutput() TenantInboundSamlConfigIdpConfigIdpCertificateOutput {
	return o
}

func (o TenantInboundSamlConfigIdpConfigIdpCertificateOutput) ToTenantInboundSamlConfigIdpConfigIdpCertificateOutputWithContext(ctx context.Context) TenantInboundSamlConfigIdpConfigIdpCertificateOutput {
	return o
}

// -
// The x509 certificate
func (o TenantInboundSamlConfigIdpConfigIdpCertificateOutput) X509Certificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TenantInboundSamlConfigIdpConfigIdpCertificate) *string { return v.X509Certificate }).(pulumi.StringPtrOutput)
}

type TenantInboundSamlConfigIdpConfigIdpCertificateArrayOutput struct{ *pulumi.OutputState }

func (TenantInboundSamlConfigIdpConfigIdpCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TenantInboundSamlConfigIdpConfigIdpCertificate)(nil)).Elem()
}

func (o TenantInboundSamlConfigIdpConfigIdpCertificateArrayOutput) ToTenantInboundSamlConfigIdpConfigIdpCertificateArrayOutput() TenantInboundSamlConfigIdpConfigIdpCertificateArrayOutput {
	return o
}

func (o TenantInboundSamlConfigIdpConfigIdpCertificateArrayOutput) ToTenantInboundSamlConfigIdpConfigIdpCertificateArrayOutputWithContext(ctx context.Context) TenantInboundSamlConfigIdpConfigIdpCertificateArrayOutput {
	return o
}

func (o TenantInboundSamlConfigIdpConfigIdpCertificateArrayOutput) Index(i pulumi.IntInput) TenantInboundSamlConfigIdpConfigIdpCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TenantInboundSamlConfigIdpConfigIdpCertificate {
		return vs[0].([]TenantInboundSamlConfigIdpConfigIdpCertificate)[vs[1].(int)]
	}).(TenantInboundSamlConfigIdpConfigIdpCertificateOutput)
}

type TenantInboundSamlConfigSpConfig struct {
	// Callback URI where responses from IDP are handled. Must start with `https://`.
	CallbackUri string `pulumi:"callbackUri"`
	// -
	// The IDP's certificate data to verify the signature in the SAMLResponse issued by the IDP.
	// Structure is documented below.
	SpCertificates []TenantInboundSamlConfigSpConfigSpCertificate `pulumi:"spCertificates"`
	// Unique identifier for all SAML entities.
	SpEntityId string `pulumi:"spEntityId"`
}

// TenantInboundSamlConfigSpConfigInput is an input type that accepts TenantInboundSamlConfigSpConfigArgs and TenantInboundSamlConfigSpConfigOutput values.
// You can construct a concrete instance of `TenantInboundSamlConfigSpConfigInput` via:
//
//	TenantInboundSamlConfigSpConfigArgs{...}
type TenantInboundSamlConfigSpConfigInput interface {
	pulumi.Input

	ToTenantInboundSamlConfigSpConfigOutput() TenantInboundSamlConfigSpConfigOutput
	ToTenantInboundSamlConfigSpConfigOutputWithContext(context.Context) TenantInboundSamlConfigSpConfigOutput
}

type TenantInboundSamlConfigSpConfigArgs struct {
	// Callback URI where responses from IDP are handled. Must start with `https://`.
	CallbackUri pulumi.StringInput `pulumi:"callbackUri"`
	// -
	// The IDP's certificate data to verify the signature in the SAMLResponse issued by the IDP.
	// Structure is documented below.
	SpCertificates TenantInboundSamlConfigSpConfigSpCertificateArrayInput `pulumi:"spCertificates"`
	// Unique identifier for all SAML entities.
	SpEntityId pulumi.StringInput `pulumi:"spEntityId"`
}

func (TenantInboundSamlConfigSpConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TenantInboundSamlConfigSpConfig)(nil)).Elem()
}

func (i TenantInboundSamlConfigSpConfigArgs) ToTenantInboundSamlConfigSpConfigOutput() TenantInboundSamlConfigSpConfigOutput {
	return i.ToTenantInboundSamlConfigSpConfigOutputWithContext(context.Background())
}

func (i TenantInboundSamlConfigSpConfigArgs) ToTenantInboundSamlConfigSpConfigOutputWithContext(ctx context.Context) TenantInboundSamlConfigSpConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantInboundSamlConfigSpConfigOutput)
}

func (i TenantInboundSamlConfigSpConfigArgs) ToTenantInboundSamlConfigSpConfigPtrOutput() TenantInboundSamlConfigSpConfigPtrOutput {
	return i.ToTenantInboundSamlConfigSpConfigPtrOutputWithContext(context.Background())
}

func (i TenantInboundSamlConfigSpConfigArgs) ToTenantInboundSamlConfigSpConfigPtrOutputWithContext(ctx context.Context) TenantInboundSamlConfigSpConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantInboundSamlConfigSpConfigOutput).ToTenantInboundSamlConfigSpConfigPtrOutputWithContext(ctx)
}

// TenantInboundSamlConfigSpConfigPtrInput is an input type that accepts TenantInboundSamlConfigSpConfigArgs, TenantInboundSamlConfigSpConfigPtr and TenantInboundSamlConfigSpConfigPtrOutput values.
// You can construct a concrete instance of `TenantInboundSamlConfigSpConfigPtrInput` via:
//
//	        TenantInboundSamlConfigSpConfigArgs{...}
//
//	or:
//
//	        nil
type TenantInboundSamlConfigSpConfigPtrInput interface {
	pulumi.Input

	ToTenantInboundSamlConfigSpConfigPtrOutput() TenantInboundSamlConfigSpConfigPtrOutput
	ToTenantInboundSamlConfigSpConfigPtrOutputWithContext(context.Context) TenantInboundSamlConfigSpConfigPtrOutput
}

type tenantInboundSamlConfigSpConfigPtrType TenantInboundSamlConfigSpConfigArgs

func TenantInboundSamlConfigSpConfigPtr(v *TenantInboundSamlConfigSpConfigArgs) TenantInboundSamlConfigSpConfigPtrInput {
	return (*tenantInboundSamlConfigSpConfigPtrType)(v)
}

func (*tenantInboundSamlConfigSpConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TenantInboundSamlConfigSpConfig)(nil)).Elem()
}

func (i *tenantInboundSamlConfigSpConfigPtrType) ToTenantInboundSamlConfigSpConfigPtrOutput() TenantInboundSamlConfigSpConfigPtrOutput {
	return i.ToTenantInboundSamlConfigSpConfigPtrOutputWithContext(context.Background())
}

func (i *tenantInboundSamlConfigSpConfigPtrType) ToTenantInboundSamlConfigSpConfigPtrOutputWithContext(ctx context.Context) TenantInboundSamlConfigSpConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantInboundSamlConfigSpConfigPtrOutput)
}

type TenantInboundSamlConfigSpConfigOutput struct{ *pulumi.OutputState }

func (TenantInboundSamlConfigSpConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TenantInboundSamlConfigSpConfig)(nil)).Elem()
}

func (o TenantInboundSamlConfigSpConfigOutput) ToTenantInboundSamlConfigSpConfigOutput() TenantInboundSamlConfigSpConfigOutput {
	return o
}

func (o TenantInboundSamlConfigSpConfigOutput) ToTenantInboundSamlConfigSpConfigOutputWithContext(ctx context.Context) TenantInboundSamlConfigSpConfigOutput {
	return o
}

func (o TenantInboundSamlConfigSpConfigOutput) ToTenantInboundSamlConfigSpConfigPtrOutput() TenantInboundSamlConfigSpConfigPtrOutput {
	return o.ToTenantInboundSamlConfigSpConfigPtrOutputWithContext(context.Background())
}

func (o TenantInboundSamlConfigSpConfigOutput) ToTenantInboundSamlConfigSpConfigPtrOutputWithContext(ctx context.Context) TenantInboundSamlConfigSpConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TenantInboundSamlConfigSpConfig) *TenantInboundSamlConfigSpConfig {
		return &v
	}).(TenantInboundSamlConfigSpConfigPtrOutput)
}

// Callback URI where responses from IDP are handled. Must start with `https://`.
func (o TenantInboundSamlConfigSpConfigOutput) CallbackUri() pulumi.StringOutput {
	return o.ApplyT(func(v TenantInboundSamlConfigSpConfig) string { return v.CallbackUri }).(pulumi.StringOutput)
}

// -
// The IDP's certificate data to verify the signature in the SAMLResponse issued by the IDP.
// Structure is documented below.
func (o TenantInboundSamlConfigSpConfigOutput) SpCertificates() TenantInboundSamlConfigSpConfigSpCertificateArrayOutput {
	return o.ApplyT(func(v TenantInboundSamlConfigSpConfig) []TenantInboundSamlConfigSpConfigSpCertificate {
		return v.SpCertificates
	}).(TenantInboundSamlConfigSpConfigSpCertificateArrayOutput)
}

// Unique identifier for all SAML entities.
func (o TenantInboundSamlConfigSpConfigOutput) SpEntityId() pulumi.StringOutput {
	return o.ApplyT(func(v TenantInboundSamlConfigSpConfig) string { return v.SpEntityId }).(pulumi.StringOutput)
}

type TenantInboundSamlConfigSpConfigPtrOutput struct{ *pulumi.OutputState }

func (TenantInboundSamlConfigSpConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TenantInboundSamlConfigSpConfig)(nil)).Elem()
}

func (o TenantInboundSamlConfigSpConfigPtrOutput) ToTenantInboundSamlConfigSpConfigPtrOutput() TenantInboundSamlConfigSpConfigPtrOutput {
	return o
}

func (o TenantInboundSamlConfigSpConfigPtrOutput) ToTenantInboundSamlConfigSpConfigPtrOutputWithContext(ctx context.Context) TenantInboundSamlConfigSpConfigPtrOutput {
	return o
}

func (o TenantInboundSamlConfigSpConfigPtrOutput) Elem() TenantInboundSamlConfigSpConfigOutput {
	return o.ApplyT(func(v *TenantInboundSamlConfigSpConfig) TenantInboundSamlConfigSpConfig {
		if v != nil {
			return *v
		}
		var ret TenantInboundSamlConfigSpConfig
		return ret
	}).(TenantInboundSamlConfigSpConfigOutput)
}

// Callback URI where responses from IDP are handled. Must start with `https://`.
func (o TenantInboundSamlConfigSpConfigPtrOutput) CallbackUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TenantInboundSamlConfigSpConfig) *string {
		if v == nil {
			return nil
		}
		return &v.CallbackUri
	}).(pulumi.StringPtrOutput)
}

// -
// The IDP's certificate data to verify the signature in the SAMLResponse issued by the IDP.
// Structure is documented below.
func (o TenantInboundSamlConfigSpConfigPtrOutput) SpCertificates() TenantInboundSamlConfigSpConfigSpCertificateArrayOutput {
	return o.ApplyT(func(v *TenantInboundSamlConfigSpConfig) []TenantInboundSamlConfigSpConfigSpCertificate {
		if v == nil {
			return nil
		}
		return v.SpCertificates
	}).(TenantInboundSamlConfigSpConfigSpCertificateArrayOutput)
}

// Unique identifier for all SAML entities.
func (o TenantInboundSamlConfigSpConfigPtrOutput) SpEntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TenantInboundSamlConfigSpConfig) *string {
		if v == nil {
			return nil
		}
		return &v.SpEntityId
	}).(pulumi.StringPtrOutput)
}

type TenantInboundSamlConfigSpConfigSpCertificate struct {
	// -
	// The x509 certificate
	X509Certificate *string `pulumi:"x509Certificate"`
}

// TenantInboundSamlConfigSpConfigSpCertificateInput is an input type that accepts TenantInboundSamlConfigSpConfigSpCertificateArgs and TenantInboundSamlConfigSpConfigSpCertificateOutput values.
// You can construct a concrete instance of `TenantInboundSamlConfigSpConfigSpCertificateInput` via:
//
//	TenantInboundSamlConfigSpConfigSpCertificateArgs{...}
type TenantInboundSamlConfigSpConfigSpCertificateInput interface {
	pulumi.Input

	ToTenantInboundSamlConfigSpConfigSpCertificateOutput() TenantInboundSamlConfigSpConfigSpCertificateOutput
	ToTenantInboundSamlConfigSpConfigSpCertificateOutputWithContext(context.Context) TenantInboundSamlConfigSpConfigSpCertificateOutput
}

type TenantInboundSamlConfigSpConfigSpCertificateArgs struct {
	// -
	// The x509 certificate
	X509Certificate pulumi.StringPtrInput `pulumi:"x509Certificate"`
}

func (TenantInboundSamlConfigSpConfigSpCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TenantInboundSamlConfigSpConfigSpCertificate)(nil)).Elem()
}

func (i TenantInboundSamlConfigSpConfigSpCertificateArgs) ToTenantInboundSamlConfigSpConfigSpCertificateOutput() TenantInboundSamlConfigSpConfigSpCertificateOutput {
	return i.ToTenantInboundSamlConfigSpConfigSpCertificateOutputWithContext(context.Background())
}

func (i TenantInboundSamlConfigSpConfigSpCertificateArgs) ToTenantInboundSamlConfigSpConfigSpCertificateOutputWithContext(ctx context.Context) TenantInboundSamlConfigSpConfigSpCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantInboundSamlConfigSpConfigSpCertificateOutput)
}

// TenantInboundSamlConfigSpConfigSpCertificateArrayInput is an input type that accepts TenantInboundSamlConfigSpConfigSpCertificateArray and TenantInboundSamlConfigSpConfigSpCertificateArrayOutput values.
// You can construct a concrete instance of `TenantInboundSamlConfigSpConfigSpCertificateArrayInput` via:
//
//	TenantInboundSamlConfigSpConfigSpCertificateArray{ TenantInboundSamlConfigSpConfigSpCertificateArgs{...} }
type TenantInboundSamlConfigSpConfigSpCertificateArrayInput interface {
	pulumi.Input

	ToTenantInboundSamlConfigSpConfigSpCertificateArrayOutput() TenantInboundSamlConfigSpConfigSpCertificateArrayOutput
	ToTenantInboundSamlConfigSpConfigSpCertificateArrayOutputWithContext(context.Context) TenantInboundSamlConfigSpConfigSpCertificateArrayOutput
}

type TenantInboundSamlConfigSpConfigSpCertificateArray []TenantInboundSamlConfigSpConfigSpCertificateInput

func (TenantInboundSamlConfigSpConfigSpCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TenantInboundSamlConfigSpConfigSpCertificate)(nil)).Elem()
}

func (i TenantInboundSamlConfigSpConfigSpCertificateArray) ToTenantInboundSamlConfigSpConfigSpCertificateArrayOutput() TenantInboundSamlConfigSpConfigSpCertificateArrayOutput {
	return i.ToTenantInboundSamlConfigSpConfigSpCertificateArrayOutputWithContext(context.Background())
}

func (i TenantInboundSamlConfigSpConfigSpCertificateArray) ToTenantInboundSamlConfigSpConfigSpCertificateArrayOutputWithContext(ctx context.Context) TenantInboundSamlConfigSpConfigSpCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantInboundSamlConfigSpConfigSpCertificateArrayOutput)
}

type TenantInboundSamlConfigSpConfigSpCertificateOutput struct{ *pulumi.OutputState }

func (TenantInboundSamlConfigSpConfigSpCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TenantInboundSamlConfigSpConfigSpCertificate)(nil)).Elem()
}

func (o TenantInboundSamlConfigSpConfigSpCertificateOutput) ToTenantInboundSamlConfigSpConfigSpCertificateOutput() TenantInboundSamlConfigSpConfigSpCertificateOutput {
	return o
}

func (o TenantInboundSamlConfigSpConfigSpCertificateOutput) ToTenantInboundSamlConfigSpConfigSpCertificateOutputWithContext(ctx context.Context) TenantInboundSamlConfigSpConfigSpCertificateOutput {
	return o
}

// -
// The x509 certificate
func (o TenantInboundSamlConfigSpConfigSpCertificateOutput) X509Certificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TenantInboundSamlConfigSpConfigSpCertificate) *string { return v.X509Certificate }).(pulumi.StringPtrOutput)
}

type TenantInboundSamlConfigSpConfigSpCertificateArrayOutput struct{ *pulumi.OutputState }

func (TenantInboundSamlConfigSpConfigSpCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TenantInboundSamlConfigSpConfigSpCertificate)(nil)).Elem()
}

func (o TenantInboundSamlConfigSpConfigSpCertificateArrayOutput) ToTenantInboundSamlConfigSpConfigSpCertificateArrayOutput() TenantInboundSamlConfigSpConfigSpCertificateArrayOutput {
	return o
}

func (o TenantInboundSamlConfigSpConfigSpCertificateArrayOutput) ToTenantInboundSamlConfigSpConfigSpCertificateArrayOutputWithContext(ctx context.Context) TenantInboundSamlConfigSpConfigSpCertificateArrayOutput {
	return o
}

func (o TenantInboundSamlConfigSpConfigSpCertificateArrayOutput) Index(i pulumi.IntInput) TenantInboundSamlConfigSpConfigSpCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TenantInboundSamlConfigSpConfigSpCertificate {
		return vs[0].([]TenantInboundSamlConfigSpConfigSpCertificate)[vs[1].(int)]
	}).(TenantInboundSamlConfigSpConfigSpCertificateOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InboundSamlConfigIdpConfigInput)(nil)).Elem(), InboundSamlConfigIdpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InboundSamlConfigIdpConfigPtrInput)(nil)).Elem(), InboundSamlConfigIdpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InboundSamlConfigIdpConfigIdpCertificateInput)(nil)).Elem(), InboundSamlConfigIdpConfigIdpCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InboundSamlConfigIdpConfigIdpCertificateArrayInput)(nil)).Elem(), InboundSamlConfigIdpConfigIdpCertificateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InboundSamlConfigSpConfigInput)(nil)).Elem(), InboundSamlConfigSpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InboundSamlConfigSpConfigPtrInput)(nil)).Elem(), InboundSamlConfigSpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InboundSamlConfigSpConfigSpCertificateInput)(nil)).Elem(), InboundSamlConfigSpConfigSpCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InboundSamlConfigSpConfigSpCertificateArrayInput)(nil)).Elem(), InboundSamlConfigSpConfigSpCertificateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectDefaultConfigSignInInput)(nil)).Elem(), ProjectDefaultConfigSignInArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectDefaultConfigSignInPtrInput)(nil)).Elem(), ProjectDefaultConfigSignInArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectDefaultConfigSignInAnonymousInput)(nil)).Elem(), ProjectDefaultConfigSignInAnonymousArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectDefaultConfigSignInAnonymousPtrInput)(nil)).Elem(), ProjectDefaultConfigSignInAnonymousArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectDefaultConfigSignInEmailInput)(nil)).Elem(), ProjectDefaultConfigSignInEmailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectDefaultConfigSignInEmailPtrInput)(nil)).Elem(), ProjectDefaultConfigSignInEmailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectDefaultConfigSignInHashConfigInput)(nil)).Elem(), ProjectDefaultConfigSignInHashConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectDefaultConfigSignInHashConfigArrayInput)(nil)).Elem(), ProjectDefaultConfigSignInHashConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectDefaultConfigSignInPhoneNumberInput)(nil)).Elem(), ProjectDefaultConfigSignInPhoneNumberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectDefaultConfigSignInPhoneNumberPtrInput)(nil)).Elem(), ProjectDefaultConfigSignInPhoneNumberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TenantInboundSamlConfigIdpConfigInput)(nil)).Elem(), TenantInboundSamlConfigIdpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TenantInboundSamlConfigIdpConfigPtrInput)(nil)).Elem(), TenantInboundSamlConfigIdpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TenantInboundSamlConfigIdpConfigIdpCertificateInput)(nil)).Elem(), TenantInboundSamlConfigIdpConfigIdpCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TenantInboundSamlConfigIdpConfigIdpCertificateArrayInput)(nil)).Elem(), TenantInboundSamlConfigIdpConfigIdpCertificateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TenantInboundSamlConfigSpConfigInput)(nil)).Elem(), TenantInboundSamlConfigSpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TenantInboundSamlConfigSpConfigPtrInput)(nil)).Elem(), TenantInboundSamlConfigSpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TenantInboundSamlConfigSpConfigSpCertificateInput)(nil)).Elem(), TenantInboundSamlConfigSpConfigSpCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TenantInboundSamlConfigSpConfigSpCertificateArrayInput)(nil)).Elem(), TenantInboundSamlConfigSpConfigSpCertificateArray{})
	pulumi.RegisterOutputType(InboundSamlConfigIdpConfigOutput{})
	pulumi.RegisterOutputType(InboundSamlConfigIdpConfigPtrOutput{})
	pulumi.RegisterOutputType(InboundSamlConfigIdpConfigIdpCertificateOutput{})
	pulumi.RegisterOutputType(InboundSamlConfigIdpConfigIdpCertificateArrayOutput{})
	pulumi.RegisterOutputType(InboundSamlConfigSpConfigOutput{})
	pulumi.RegisterOutputType(InboundSamlConfigSpConfigPtrOutput{})
	pulumi.RegisterOutputType(InboundSamlConfigSpConfigSpCertificateOutput{})
	pulumi.RegisterOutputType(InboundSamlConfigSpConfigSpCertificateArrayOutput{})
	pulumi.RegisterOutputType(ProjectDefaultConfigSignInOutput{})
	pulumi.RegisterOutputType(ProjectDefaultConfigSignInPtrOutput{})
	pulumi.RegisterOutputType(ProjectDefaultConfigSignInAnonymousOutput{})
	pulumi.RegisterOutputType(ProjectDefaultConfigSignInAnonymousPtrOutput{})
	pulumi.RegisterOutputType(ProjectDefaultConfigSignInEmailOutput{})
	pulumi.RegisterOutputType(ProjectDefaultConfigSignInEmailPtrOutput{})
	pulumi.RegisterOutputType(ProjectDefaultConfigSignInHashConfigOutput{})
	pulumi.RegisterOutputType(ProjectDefaultConfigSignInHashConfigArrayOutput{})
	pulumi.RegisterOutputType(ProjectDefaultConfigSignInPhoneNumberOutput{})
	pulumi.RegisterOutputType(ProjectDefaultConfigSignInPhoneNumberPtrOutput{})
	pulumi.RegisterOutputType(TenantInboundSamlConfigIdpConfigOutput{})
	pulumi.RegisterOutputType(TenantInboundSamlConfigIdpConfigPtrOutput{})
	pulumi.RegisterOutputType(TenantInboundSamlConfigIdpConfigIdpCertificateOutput{})
	pulumi.RegisterOutputType(TenantInboundSamlConfigIdpConfigIdpCertificateArrayOutput{})
	pulumi.RegisterOutputType(TenantInboundSamlConfigSpConfigOutput{})
	pulumi.RegisterOutputType(TenantInboundSamlConfigSpConfigPtrOutput{})
	pulumi.RegisterOutputType(TenantInboundSamlConfigSpConfigSpCertificateOutput{})
	pulumi.RegisterOutputType(TenantInboundSamlConfigSpConfigSpCertificateArrayOutput{})
}
