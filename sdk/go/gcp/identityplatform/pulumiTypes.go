// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package identityplatform

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type InboundSamlConfigIdpConfig struct {
	// The IdP's certificate data to verify the signature in the SAMLResponse issued by the IDP.
	// Structure is documented below.
	IdpCertificates []InboundSamlConfigIdpConfigIdpCertificate `pulumi:"idpCertificates"`
	// Unique identifier for all SAML entities
	IdpEntityId string `pulumi:"idpEntityId"`
	// Indicates if outbounding SAMLRequest should be signed.
	SignRequest *bool `pulumi:"signRequest"`
	// URL to send Authentication request to.
	SsoUrl string `pulumi:"ssoUrl"`
}

// InboundSamlConfigIdpConfigInput is an input type that accepts InboundSamlConfigIdpConfigArgs and InboundSamlConfigIdpConfigOutput values.
// You can construct a concrete instance of `InboundSamlConfigIdpConfigInput` via:
//
//          InboundSamlConfigIdpConfigArgs{...}
type InboundSamlConfigIdpConfigInput interface {
	pulumi.Input

	ToInboundSamlConfigIdpConfigOutput() InboundSamlConfigIdpConfigOutput
	ToInboundSamlConfigIdpConfigOutputWithContext(context.Context) InboundSamlConfigIdpConfigOutput
}

type InboundSamlConfigIdpConfigArgs struct {
	// The IdP's certificate data to verify the signature in the SAMLResponse issued by the IDP.
	// Structure is documented below.
	IdpCertificates InboundSamlConfigIdpConfigIdpCertificateArrayInput `pulumi:"idpCertificates"`
	// Unique identifier for all SAML entities
	IdpEntityId pulumi.StringInput `pulumi:"idpEntityId"`
	// Indicates if outbounding SAMLRequest should be signed.
	SignRequest pulumi.BoolPtrInput `pulumi:"signRequest"`
	// URL to send Authentication request to.
	SsoUrl pulumi.StringInput `pulumi:"ssoUrl"`
}

func (InboundSamlConfigIdpConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InboundSamlConfigIdpConfig)(nil)).Elem()
}

func (i InboundSamlConfigIdpConfigArgs) ToInboundSamlConfigIdpConfigOutput() InboundSamlConfigIdpConfigOutput {
	return i.ToInboundSamlConfigIdpConfigOutputWithContext(context.Background())
}

func (i InboundSamlConfigIdpConfigArgs) ToInboundSamlConfigIdpConfigOutputWithContext(ctx context.Context) InboundSamlConfigIdpConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InboundSamlConfigIdpConfigOutput)
}

type InboundSamlConfigIdpConfigOutput struct{ *pulumi.OutputState }

func (InboundSamlConfigIdpConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InboundSamlConfigIdpConfig)(nil)).Elem()
}

func (o InboundSamlConfigIdpConfigOutput) ToInboundSamlConfigIdpConfigOutput() InboundSamlConfigIdpConfigOutput {
	return o
}

func (o InboundSamlConfigIdpConfigOutput) ToInboundSamlConfigIdpConfigOutputWithContext(ctx context.Context) InboundSamlConfigIdpConfigOutput {
	return o
}

// The IdP's certificate data to verify the signature in the SAMLResponse issued by the IDP.
// Structure is documented below.
func (o InboundSamlConfigIdpConfigOutput) IdpCertificates() InboundSamlConfigIdpConfigIdpCertificateArrayOutput {
	return o.ApplyT(func(v InboundSamlConfigIdpConfig) []InboundSamlConfigIdpConfigIdpCertificate {
		return v.IdpCertificates
	}).(InboundSamlConfigIdpConfigIdpCertificateArrayOutput)
}

// Unique identifier for all SAML entities
func (o InboundSamlConfigIdpConfigOutput) IdpEntityId() pulumi.StringOutput {
	return o.ApplyT(func(v InboundSamlConfigIdpConfig) string { return v.IdpEntityId }).(pulumi.StringOutput)
}

// Indicates if outbounding SAMLRequest should be signed.
func (o InboundSamlConfigIdpConfigOutput) SignRequest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InboundSamlConfigIdpConfig) *bool { return v.SignRequest }).(pulumi.BoolPtrOutput)
}

// URL to send Authentication request to.
func (o InboundSamlConfigIdpConfigOutput) SsoUrl() pulumi.StringOutput {
	return o.ApplyT(func(v InboundSamlConfigIdpConfig) string { return v.SsoUrl }).(pulumi.StringOutput)
}

type InboundSamlConfigIdpConfigIdpCertificate struct {
	// -
	// The x509 certificate
	X509Certificate *string `pulumi:"x509Certificate"`
}

// InboundSamlConfigIdpConfigIdpCertificateInput is an input type that accepts InboundSamlConfigIdpConfigIdpCertificateArgs and InboundSamlConfigIdpConfigIdpCertificateOutput values.
// You can construct a concrete instance of `InboundSamlConfigIdpConfigIdpCertificateInput` via:
//
//          InboundSamlConfigIdpConfigIdpCertificateArgs{...}
type InboundSamlConfigIdpConfigIdpCertificateInput interface {
	pulumi.Input

	ToInboundSamlConfigIdpConfigIdpCertificateOutput() InboundSamlConfigIdpConfigIdpCertificateOutput
	ToInboundSamlConfigIdpConfigIdpCertificateOutputWithContext(context.Context) InboundSamlConfigIdpConfigIdpCertificateOutput
}

type InboundSamlConfigIdpConfigIdpCertificateArgs struct {
	// -
	// The x509 certificate
	X509Certificate pulumi.StringPtrInput `pulumi:"x509Certificate"`
}

func (InboundSamlConfigIdpConfigIdpCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InboundSamlConfigIdpConfigIdpCertificate)(nil)).Elem()
}

func (i InboundSamlConfigIdpConfigIdpCertificateArgs) ToInboundSamlConfigIdpConfigIdpCertificateOutput() InboundSamlConfigIdpConfigIdpCertificateOutput {
	return i.ToInboundSamlConfigIdpConfigIdpCertificateOutputWithContext(context.Background())
}

func (i InboundSamlConfigIdpConfigIdpCertificateArgs) ToInboundSamlConfigIdpConfigIdpCertificateOutputWithContext(ctx context.Context) InboundSamlConfigIdpConfigIdpCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InboundSamlConfigIdpConfigIdpCertificateOutput)
}

// InboundSamlConfigIdpConfigIdpCertificateArrayInput is an input type that accepts InboundSamlConfigIdpConfigIdpCertificateArray and InboundSamlConfigIdpConfigIdpCertificateArrayOutput values.
// You can construct a concrete instance of `InboundSamlConfigIdpConfigIdpCertificateArrayInput` via:
//
//          InboundSamlConfigIdpConfigIdpCertificateArray{ InboundSamlConfigIdpConfigIdpCertificateArgs{...} }
type InboundSamlConfigIdpConfigIdpCertificateArrayInput interface {
	pulumi.Input

	ToInboundSamlConfigIdpConfigIdpCertificateArrayOutput() InboundSamlConfigIdpConfigIdpCertificateArrayOutput
	ToInboundSamlConfigIdpConfigIdpCertificateArrayOutputWithContext(context.Context) InboundSamlConfigIdpConfigIdpCertificateArrayOutput
}

type InboundSamlConfigIdpConfigIdpCertificateArray []InboundSamlConfigIdpConfigIdpCertificateInput

func (InboundSamlConfigIdpConfigIdpCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InboundSamlConfigIdpConfigIdpCertificate)(nil)).Elem()
}

func (i InboundSamlConfigIdpConfigIdpCertificateArray) ToInboundSamlConfigIdpConfigIdpCertificateArrayOutput() InboundSamlConfigIdpConfigIdpCertificateArrayOutput {
	return i.ToInboundSamlConfigIdpConfigIdpCertificateArrayOutputWithContext(context.Background())
}

func (i InboundSamlConfigIdpConfigIdpCertificateArray) ToInboundSamlConfigIdpConfigIdpCertificateArrayOutputWithContext(ctx context.Context) InboundSamlConfigIdpConfigIdpCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InboundSamlConfigIdpConfigIdpCertificateArrayOutput)
}

type InboundSamlConfigIdpConfigIdpCertificateOutput struct{ *pulumi.OutputState }

func (InboundSamlConfigIdpConfigIdpCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InboundSamlConfigIdpConfigIdpCertificate)(nil)).Elem()
}

func (o InboundSamlConfigIdpConfigIdpCertificateOutput) ToInboundSamlConfigIdpConfigIdpCertificateOutput() InboundSamlConfigIdpConfigIdpCertificateOutput {
	return o
}

func (o InboundSamlConfigIdpConfigIdpCertificateOutput) ToInboundSamlConfigIdpConfigIdpCertificateOutputWithContext(ctx context.Context) InboundSamlConfigIdpConfigIdpCertificateOutput {
	return o
}

// -
// The x509 certificate
func (o InboundSamlConfigIdpConfigIdpCertificateOutput) X509Certificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundSamlConfigIdpConfigIdpCertificate) *string { return v.X509Certificate }).(pulumi.StringPtrOutput)
}

type InboundSamlConfigIdpConfigIdpCertificateArrayOutput struct{ *pulumi.OutputState }

func (InboundSamlConfigIdpConfigIdpCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InboundSamlConfigIdpConfigIdpCertificate)(nil)).Elem()
}

func (o InboundSamlConfigIdpConfigIdpCertificateArrayOutput) ToInboundSamlConfigIdpConfigIdpCertificateArrayOutput() InboundSamlConfigIdpConfigIdpCertificateArrayOutput {
	return o
}

func (o InboundSamlConfigIdpConfigIdpCertificateArrayOutput) ToInboundSamlConfigIdpConfigIdpCertificateArrayOutputWithContext(ctx context.Context) InboundSamlConfigIdpConfigIdpCertificateArrayOutput {
	return o
}

func (o InboundSamlConfigIdpConfigIdpCertificateArrayOutput) Index(i pulumi.IntInput) InboundSamlConfigIdpConfigIdpCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InboundSamlConfigIdpConfigIdpCertificate {
		return vs[0].([]InboundSamlConfigIdpConfigIdpCertificate)[vs[1].(int)]
	}).(InboundSamlConfigIdpConfigIdpCertificateOutput)
}

type InboundSamlConfigSpConfig struct {
	// Callback URI where responses from IDP are handled. Must start with `https://`.
	CallbackUri *string `pulumi:"callbackUri"`
	// -
	// The IDP's certificate data to verify the signature in the SAMLResponse issued by the IDP.
	// Structure is documented below.
	SpCertificates []InboundSamlConfigSpConfigSpCertificate `pulumi:"spCertificates"`
	// Unique identifier for all SAML entities.
	SpEntityId *string `pulumi:"spEntityId"`
}

// InboundSamlConfigSpConfigInput is an input type that accepts InboundSamlConfigSpConfigArgs and InboundSamlConfigSpConfigOutput values.
// You can construct a concrete instance of `InboundSamlConfigSpConfigInput` via:
//
//          InboundSamlConfigSpConfigArgs{...}
type InboundSamlConfigSpConfigInput interface {
	pulumi.Input

	ToInboundSamlConfigSpConfigOutput() InboundSamlConfigSpConfigOutput
	ToInboundSamlConfigSpConfigOutputWithContext(context.Context) InboundSamlConfigSpConfigOutput
}

type InboundSamlConfigSpConfigArgs struct {
	// Callback URI where responses from IDP are handled. Must start with `https://`.
	CallbackUri pulumi.StringPtrInput `pulumi:"callbackUri"`
	// -
	// The IDP's certificate data to verify the signature in the SAMLResponse issued by the IDP.
	// Structure is documented below.
	SpCertificates InboundSamlConfigSpConfigSpCertificateArrayInput `pulumi:"spCertificates"`
	// Unique identifier for all SAML entities.
	SpEntityId pulumi.StringPtrInput `pulumi:"spEntityId"`
}

func (InboundSamlConfigSpConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InboundSamlConfigSpConfig)(nil)).Elem()
}

func (i InboundSamlConfigSpConfigArgs) ToInboundSamlConfigSpConfigOutput() InboundSamlConfigSpConfigOutput {
	return i.ToInboundSamlConfigSpConfigOutputWithContext(context.Background())
}

func (i InboundSamlConfigSpConfigArgs) ToInboundSamlConfigSpConfigOutputWithContext(ctx context.Context) InboundSamlConfigSpConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InboundSamlConfigSpConfigOutput)
}

type InboundSamlConfigSpConfigOutput struct{ *pulumi.OutputState }

func (InboundSamlConfigSpConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InboundSamlConfigSpConfig)(nil)).Elem()
}

func (o InboundSamlConfigSpConfigOutput) ToInboundSamlConfigSpConfigOutput() InboundSamlConfigSpConfigOutput {
	return o
}

func (o InboundSamlConfigSpConfigOutput) ToInboundSamlConfigSpConfigOutputWithContext(ctx context.Context) InboundSamlConfigSpConfigOutput {
	return o
}

// Callback URI where responses from IDP are handled. Must start with `https://`.
func (o InboundSamlConfigSpConfigOutput) CallbackUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundSamlConfigSpConfig) *string { return v.CallbackUri }).(pulumi.StringPtrOutput)
}

// -
// The IDP's certificate data to verify the signature in the SAMLResponse issued by the IDP.
// Structure is documented below.
func (o InboundSamlConfigSpConfigOutput) SpCertificates() InboundSamlConfigSpConfigSpCertificateArrayOutput {
	return o.ApplyT(func(v InboundSamlConfigSpConfig) []InboundSamlConfigSpConfigSpCertificate { return v.SpCertificates }).(InboundSamlConfigSpConfigSpCertificateArrayOutput)
}

// Unique identifier for all SAML entities.
func (o InboundSamlConfigSpConfigOutput) SpEntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundSamlConfigSpConfig) *string { return v.SpEntityId }).(pulumi.StringPtrOutput)
}

type InboundSamlConfigSpConfigSpCertificate struct {
	// -
	// The x509 certificate
	X509Certificate *string `pulumi:"x509Certificate"`
}

// InboundSamlConfigSpConfigSpCertificateInput is an input type that accepts InboundSamlConfigSpConfigSpCertificateArgs and InboundSamlConfigSpConfigSpCertificateOutput values.
// You can construct a concrete instance of `InboundSamlConfigSpConfigSpCertificateInput` via:
//
//          InboundSamlConfigSpConfigSpCertificateArgs{...}
type InboundSamlConfigSpConfigSpCertificateInput interface {
	pulumi.Input

	ToInboundSamlConfigSpConfigSpCertificateOutput() InboundSamlConfigSpConfigSpCertificateOutput
	ToInboundSamlConfigSpConfigSpCertificateOutputWithContext(context.Context) InboundSamlConfigSpConfigSpCertificateOutput
}

type InboundSamlConfigSpConfigSpCertificateArgs struct {
	// -
	// The x509 certificate
	X509Certificate pulumi.StringPtrInput `pulumi:"x509Certificate"`
}

func (InboundSamlConfigSpConfigSpCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InboundSamlConfigSpConfigSpCertificate)(nil)).Elem()
}

func (i InboundSamlConfigSpConfigSpCertificateArgs) ToInboundSamlConfigSpConfigSpCertificateOutput() InboundSamlConfigSpConfigSpCertificateOutput {
	return i.ToInboundSamlConfigSpConfigSpCertificateOutputWithContext(context.Background())
}

func (i InboundSamlConfigSpConfigSpCertificateArgs) ToInboundSamlConfigSpConfigSpCertificateOutputWithContext(ctx context.Context) InboundSamlConfigSpConfigSpCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InboundSamlConfigSpConfigSpCertificateOutput)
}

// InboundSamlConfigSpConfigSpCertificateArrayInput is an input type that accepts InboundSamlConfigSpConfigSpCertificateArray and InboundSamlConfigSpConfigSpCertificateArrayOutput values.
// You can construct a concrete instance of `InboundSamlConfigSpConfigSpCertificateArrayInput` via:
//
//          InboundSamlConfigSpConfigSpCertificateArray{ InboundSamlConfigSpConfigSpCertificateArgs{...} }
type InboundSamlConfigSpConfigSpCertificateArrayInput interface {
	pulumi.Input

	ToInboundSamlConfigSpConfigSpCertificateArrayOutput() InboundSamlConfigSpConfigSpCertificateArrayOutput
	ToInboundSamlConfigSpConfigSpCertificateArrayOutputWithContext(context.Context) InboundSamlConfigSpConfigSpCertificateArrayOutput
}

type InboundSamlConfigSpConfigSpCertificateArray []InboundSamlConfigSpConfigSpCertificateInput

func (InboundSamlConfigSpConfigSpCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InboundSamlConfigSpConfigSpCertificate)(nil)).Elem()
}

func (i InboundSamlConfigSpConfigSpCertificateArray) ToInboundSamlConfigSpConfigSpCertificateArrayOutput() InboundSamlConfigSpConfigSpCertificateArrayOutput {
	return i.ToInboundSamlConfigSpConfigSpCertificateArrayOutputWithContext(context.Background())
}

func (i InboundSamlConfigSpConfigSpCertificateArray) ToInboundSamlConfigSpConfigSpCertificateArrayOutputWithContext(ctx context.Context) InboundSamlConfigSpConfigSpCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InboundSamlConfigSpConfigSpCertificateArrayOutput)
}

type InboundSamlConfigSpConfigSpCertificateOutput struct{ *pulumi.OutputState }

func (InboundSamlConfigSpConfigSpCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InboundSamlConfigSpConfigSpCertificate)(nil)).Elem()
}

func (o InboundSamlConfigSpConfigSpCertificateOutput) ToInboundSamlConfigSpConfigSpCertificateOutput() InboundSamlConfigSpConfigSpCertificateOutput {
	return o
}

func (o InboundSamlConfigSpConfigSpCertificateOutput) ToInboundSamlConfigSpConfigSpCertificateOutputWithContext(ctx context.Context) InboundSamlConfigSpConfigSpCertificateOutput {
	return o
}

// -
// The x509 certificate
func (o InboundSamlConfigSpConfigSpCertificateOutput) X509Certificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundSamlConfigSpConfigSpCertificate) *string { return v.X509Certificate }).(pulumi.StringPtrOutput)
}

type InboundSamlConfigSpConfigSpCertificateArrayOutput struct{ *pulumi.OutputState }

func (InboundSamlConfigSpConfigSpCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InboundSamlConfigSpConfigSpCertificate)(nil)).Elem()
}

func (o InboundSamlConfigSpConfigSpCertificateArrayOutput) ToInboundSamlConfigSpConfigSpCertificateArrayOutput() InboundSamlConfigSpConfigSpCertificateArrayOutput {
	return o
}

func (o InboundSamlConfigSpConfigSpCertificateArrayOutput) ToInboundSamlConfigSpConfigSpCertificateArrayOutputWithContext(ctx context.Context) InboundSamlConfigSpConfigSpCertificateArrayOutput {
	return o
}

func (o InboundSamlConfigSpConfigSpCertificateArrayOutput) Index(i pulumi.IntInput) InboundSamlConfigSpConfigSpCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InboundSamlConfigSpConfigSpCertificate {
		return vs[0].([]InboundSamlConfigSpConfigSpCertificate)[vs[1].(int)]
	}).(InboundSamlConfigSpConfigSpCertificateOutput)
}

type TenantInboundSamlConfigIdpConfig struct {
	// The IDP's certificate data to verify the signature in the SAMLResponse issued by the IDP.
	// Structure is documented below.
	IdpCertificates []TenantInboundSamlConfigIdpConfigIdpCertificate `pulumi:"idpCertificates"`
	// Unique identifier for all SAML entities
	IdpEntityId string `pulumi:"idpEntityId"`
	// Indicates if outbounding SAMLRequest should be signed.
	SignRequest *bool `pulumi:"signRequest"`
	// URL to send Authentication request to.
	SsoUrl string `pulumi:"ssoUrl"`
}

// TenantInboundSamlConfigIdpConfigInput is an input type that accepts TenantInboundSamlConfigIdpConfigArgs and TenantInboundSamlConfigIdpConfigOutput values.
// You can construct a concrete instance of `TenantInboundSamlConfigIdpConfigInput` via:
//
//          TenantInboundSamlConfigIdpConfigArgs{...}
type TenantInboundSamlConfigIdpConfigInput interface {
	pulumi.Input

	ToTenantInboundSamlConfigIdpConfigOutput() TenantInboundSamlConfigIdpConfigOutput
	ToTenantInboundSamlConfigIdpConfigOutputWithContext(context.Context) TenantInboundSamlConfigIdpConfigOutput
}

type TenantInboundSamlConfigIdpConfigArgs struct {
	// The IDP's certificate data to verify the signature in the SAMLResponse issued by the IDP.
	// Structure is documented below.
	IdpCertificates TenantInboundSamlConfigIdpConfigIdpCertificateArrayInput `pulumi:"idpCertificates"`
	// Unique identifier for all SAML entities
	IdpEntityId pulumi.StringInput `pulumi:"idpEntityId"`
	// Indicates if outbounding SAMLRequest should be signed.
	SignRequest pulumi.BoolPtrInput `pulumi:"signRequest"`
	// URL to send Authentication request to.
	SsoUrl pulumi.StringInput `pulumi:"ssoUrl"`
}

func (TenantInboundSamlConfigIdpConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TenantInboundSamlConfigIdpConfig)(nil)).Elem()
}

func (i TenantInboundSamlConfigIdpConfigArgs) ToTenantInboundSamlConfigIdpConfigOutput() TenantInboundSamlConfigIdpConfigOutput {
	return i.ToTenantInboundSamlConfigIdpConfigOutputWithContext(context.Background())
}

func (i TenantInboundSamlConfigIdpConfigArgs) ToTenantInboundSamlConfigIdpConfigOutputWithContext(ctx context.Context) TenantInboundSamlConfigIdpConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantInboundSamlConfigIdpConfigOutput)
}

type TenantInboundSamlConfigIdpConfigOutput struct{ *pulumi.OutputState }

func (TenantInboundSamlConfigIdpConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TenantInboundSamlConfigIdpConfig)(nil)).Elem()
}

func (o TenantInboundSamlConfigIdpConfigOutput) ToTenantInboundSamlConfigIdpConfigOutput() TenantInboundSamlConfigIdpConfigOutput {
	return o
}

func (o TenantInboundSamlConfigIdpConfigOutput) ToTenantInboundSamlConfigIdpConfigOutputWithContext(ctx context.Context) TenantInboundSamlConfigIdpConfigOutput {
	return o
}

// The IDP's certificate data to verify the signature in the SAMLResponse issued by the IDP.
// Structure is documented below.
func (o TenantInboundSamlConfigIdpConfigOutput) IdpCertificates() TenantInboundSamlConfigIdpConfigIdpCertificateArrayOutput {
	return o.ApplyT(func(v TenantInboundSamlConfigIdpConfig) []TenantInboundSamlConfigIdpConfigIdpCertificate {
		return v.IdpCertificates
	}).(TenantInboundSamlConfigIdpConfigIdpCertificateArrayOutput)
}

// Unique identifier for all SAML entities
func (o TenantInboundSamlConfigIdpConfigOutput) IdpEntityId() pulumi.StringOutput {
	return o.ApplyT(func(v TenantInboundSamlConfigIdpConfig) string { return v.IdpEntityId }).(pulumi.StringOutput)
}

// Indicates if outbounding SAMLRequest should be signed.
func (o TenantInboundSamlConfigIdpConfigOutput) SignRequest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TenantInboundSamlConfigIdpConfig) *bool { return v.SignRequest }).(pulumi.BoolPtrOutput)
}

// URL to send Authentication request to.
func (o TenantInboundSamlConfigIdpConfigOutput) SsoUrl() pulumi.StringOutput {
	return o.ApplyT(func(v TenantInboundSamlConfigIdpConfig) string { return v.SsoUrl }).(pulumi.StringOutput)
}

type TenantInboundSamlConfigIdpConfigIdpCertificate struct {
	// -
	// The x509 certificate
	X509Certificate *string `pulumi:"x509Certificate"`
}

// TenantInboundSamlConfigIdpConfigIdpCertificateInput is an input type that accepts TenantInboundSamlConfigIdpConfigIdpCertificateArgs and TenantInboundSamlConfigIdpConfigIdpCertificateOutput values.
// You can construct a concrete instance of `TenantInboundSamlConfigIdpConfigIdpCertificateInput` via:
//
//          TenantInboundSamlConfigIdpConfigIdpCertificateArgs{...}
type TenantInboundSamlConfigIdpConfigIdpCertificateInput interface {
	pulumi.Input

	ToTenantInboundSamlConfigIdpConfigIdpCertificateOutput() TenantInboundSamlConfigIdpConfigIdpCertificateOutput
	ToTenantInboundSamlConfigIdpConfigIdpCertificateOutputWithContext(context.Context) TenantInboundSamlConfigIdpConfigIdpCertificateOutput
}

type TenantInboundSamlConfigIdpConfigIdpCertificateArgs struct {
	// -
	// The x509 certificate
	X509Certificate pulumi.StringPtrInput `pulumi:"x509Certificate"`
}

func (TenantInboundSamlConfigIdpConfigIdpCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TenantInboundSamlConfigIdpConfigIdpCertificate)(nil)).Elem()
}

func (i TenantInboundSamlConfigIdpConfigIdpCertificateArgs) ToTenantInboundSamlConfigIdpConfigIdpCertificateOutput() TenantInboundSamlConfigIdpConfigIdpCertificateOutput {
	return i.ToTenantInboundSamlConfigIdpConfigIdpCertificateOutputWithContext(context.Background())
}

func (i TenantInboundSamlConfigIdpConfigIdpCertificateArgs) ToTenantInboundSamlConfigIdpConfigIdpCertificateOutputWithContext(ctx context.Context) TenantInboundSamlConfigIdpConfigIdpCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantInboundSamlConfigIdpConfigIdpCertificateOutput)
}

// TenantInboundSamlConfigIdpConfigIdpCertificateArrayInput is an input type that accepts TenantInboundSamlConfigIdpConfigIdpCertificateArray and TenantInboundSamlConfigIdpConfigIdpCertificateArrayOutput values.
// You can construct a concrete instance of `TenantInboundSamlConfigIdpConfigIdpCertificateArrayInput` via:
//
//          TenantInboundSamlConfigIdpConfigIdpCertificateArray{ TenantInboundSamlConfigIdpConfigIdpCertificateArgs{...} }
type TenantInboundSamlConfigIdpConfigIdpCertificateArrayInput interface {
	pulumi.Input

	ToTenantInboundSamlConfigIdpConfigIdpCertificateArrayOutput() TenantInboundSamlConfigIdpConfigIdpCertificateArrayOutput
	ToTenantInboundSamlConfigIdpConfigIdpCertificateArrayOutputWithContext(context.Context) TenantInboundSamlConfigIdpConfigIdpCertificateArrayOutput
}

type TenantInboundSamlConfigIdpConfigIdpCertificateArray []TenantInboundSamlConfigIdpConfigIdpCertificateInput

func (TenantInboundSamlConfigIdpConfigIdpCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TenantInboundSamlConfigIdpConfigIdpCertificate)(nil)).Elem()
}

func (i TenantInboundSamlConfigIdpConfigIdpCertificateArray) ToTenantInboundSamlConfigIdpConfigIdpCertificateArrayOutput() TenantInboundSamlConfigIdpConfigIdpCertificateArrayOutput {
	return i.ToTenantInboundSamlConfigIdpConfigIdpCertificateArrayOutputWithContext(context.Background())
}

func (i TenantInboundSamlConfigIdpConfigIdpCertificateArray) ToTenantInboundSamlConfigIdpConfigIdpCertificateArrayOutputWithContext(ctx context.Context) TenantInboundSamlConfigIdpConfigIdpCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantInboundSamlConfigIdpConfigIdpCertificateArrayOutput)
}

type TenantInboundSamlConfigIdpConfigIdpCertificateOutput struct{ *pulumi.OutputState }

func (TenantInboundSamlConfigIdpConfigIdpCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TenantInboundSamlConfigIdpConfigIdpCertificate)(nil)).Elem()
}

func (o TenantInboundSamlConfigIdpConfigIdpCertificateOutput) ToTenantInboundSamlConfigIdpConfigIdpCertificateOutput() TenantInboundSamlConfigIdpConfigIdpCertificateOutput {
	return o
}

func (o TenantInboundSamlConfigIdpConfigIdpCertificateOutput) ToTenantInboundSamlConfigIdpConfigIdpCertificateOutputWithContext(ctx context.Context) TenantInboundSamlConfigIdpConfigIdpCertificateOutput {
	return o
}

// -
// The x509 certificate
func (o TenantInboundSamlConfigIdpConfigIdpCertificateOutput) X509Certificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TenantInboundSamlConfigIdpConfigIdpCertificate) *string { return v.X509Certificate }).(pulumi.StringPtrOutput)
}

type TenantInboundSamlConfigIdpConfigIdpCertificateArrayOutput struct{ *pulumi.OutputState }

func (TenantInboundSamlConfigIdpConfigIdpCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TenantInboundSamlConfigIdpConfigIdpCertificate)(nil)).Elem()
}

func (o TenantInboundSamlConfigIdpConfigIdpCertificateArrayOutput) ToTenantInboundSamlConfigIdpConfigIdpCertificateArrayOutput() TenantInboundSamlConfigIdpConfigIdpCertificateArrayOutput {
	return o
}

func (o TenantInboundSamlConfigIdpConfigIdpCertificateArrayOutput) ToTenantInboundSamlConfigIdpConfigIdpCertificateArrayOutputWithContext(ctx context.Context) TenantInboundSamlConfigIdpConfigIdpCertificateArrayOutput {
	return o
}

func (o TenantInboundSamlConfigIdpConfigIdpCertificateArrayOutput) Index(i pulumi.IntInput) TenantInboundSamlConfigIdpConfigIdpCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TenantInboundSamlConfigIdpConfigIdpCertificate {
		return vs[0].([]TenantInboundSamlConfigIdpConfigIdpCertificate)[vs[1].(int)]
	}).(TenantInboundSamlConfigIdpConfigIdpCertificateOutput)
}

type TenantInboundSamlConfigSpConfig struct {
	// Callback URI where responses from IDP are handled. Must start with `https://`.
	CallbackUri string `pulumi:"callbackUri"`
	// -
	// The IDP's certificate data to verify the signature in the SAMLResponse issued by the IDP.
	// Structure is documented below.
	SpCertificates []TenantInboundSamlConfigSpConfigSpCertificate `pulumi:"spCertificates"`
	// Unique identifier for all SAML entities.
	SpEntityId string `pulumi:"spEntityId"`
}

// TenantInboundSamlConfigSpConfigInput is an input type that accepts TenantInboundSamlConfigSpConfigArgs and TenantInboundSamlConfigSpConfigOutput values.
// You can construct a concrete instance of `TenantInboundSamlConfigSpConfigInput` via:
//
//          TenantInboundSamlConfigSpConfigArgs{...}
type TenantInboundSamlConfigSpConfigInput interface {
	pulumi.Input

	ToTenantInboundSamlConfigSpConfigOutput() TenantInboundSamlConfigSpConfigOutput
	ToTenantInboundSamlConfigSpConfigOutputWithContext(context.Context) TenantInboundSamlConfigSpConfigOutput
}

type TenantInboundSamlConfigSpConfigArgs struct {
	// Callback URI where responses from IDP are handled. Must start with `https://`.
	CallbackUri pulumi.StringInput `pulumi:"callbackUri"`
	// -
	// The IDP's certificate data to verify the signature in the SAMLResponse issued by the IDP.
	// Structure is documented below.
	SpCertificates TenantInboundSamlConfigSpConfigSpCertificateArrayInput `pulumi:"spCertificates"`
	// Unique identifier for all SAML entities.
	SpEntityId pulumi.StringInput `pulumi:"spEntityId"`
}

func (TenantInboundSamlConfigSpConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TenantInboundSamlConfigSpConfig)(nil)).Elem()
}

func (i TenantInboundSamlConfigSpConfigArgs) ToTenantInboundSamlConfigSpConfigOutput() TenantInboundSamlConfigSpConfigOutput {
	return i.ToTenantInboundSamlConfigSpConfigOutputWithContext(context.Background())
}

func (i TenantInboundSamlConfigSpConfigArgs) ToTenantInboundSamlConfigSpConfigOutputWithContext(ctx context.Context) TenantInboundSamlConfigSpConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantInboundSamlConfigSpConfigOutput)
}

type TenantInboundSamlConfigSpConfigOutput struct{ *pulumi.OutputState }

func (TenantInboundSamlConfigSpConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TenantInboundSamlConfigSpConfig)(nil)).Elem()
}

func (o TenantInboundSamlConfigSpConfigOutput) ToTenantInboundSamlConfigSpConfigOutput() TenantInboundSamlConfigSpConfigOutput {
	return o
}

func (o TenantInboundSamlConfigSpConfigOutput) ToTenantInboundSamlConfigSpConfigOutputWithContext(ctx context.Context) TenantInboundSamlConfigSpConfigOutput {
	return o
}

// Callback URI where responses from IDP are handled. Must start with `https://`.
func (o TenantInboundSamlConfigSpConfigOutput) CallbackUri() pulumi.StringOutput {
	return o.ApplyT(func(v TenantInboundSamlConfigSpConfig) string { return v.CallbackUri }).(pulumi.StringOutput)
}

// -
// The IDP's certificate data to verify the signature in the SAMLResponse issued by the IDP.
// Structure is documented below.
func (o TenantInboundSamlConfigSpConfigOutput) SpCertificates() TenantInboundSamlConfigSpConfigSpCertificateArrayOutput {
	return o.ApplyT(func(v TenantInboundSamlConfigSpConfig) []TenantInboundSamlConfigSpConfigSpCertificate {
		return v.SpCertificates
	}).(TenantInboundSamlConfigSpConfigSpCertificateArrayOutput)
}

// Unique identifier for all SAML entities.
func (o TenantInboundSamlConfigSpConfigOutput) SpEntityId() pulumi.StringOutput {
	return o.ApplyT(func(v TenantInboundSamlConfigSpConfig) string { return v.SpEntityId }).(pulumi.StringOutput)
}

type TenantInboundSamlConfigSpConfigSpCertificate struct {
	// -
	// The x509 certificate
	X509Certificate *string `pulumi:"x509Certificate"`
}

// TenantInboundSamlConfigSpConfigSpCertificateInput is an input type that accepts TenantInboundSamlConfigSpConfigSpCertificateArgs and TenantInboundSamlConfigSpConfigSpCertificateOutput values.
// You can construct a concrete instance of `TenantInboundSamlConfigSpConfigSpCertificateInput` via:
//
//          TenantInboundSamlConfigSpConfigSpCertificateArgs{...}
type TenantInboundSamlConfigSpConfigSpCertificateInput interface {
	pulumi.Input

	ToTenantInboundSamlConfigSpConfigSpCertificateOutput() TenantInboundSamlConfigSpConfigSpCertificateOutput
	ToTenantInboundSamlConfigSpConfigSpCertificateOutputWithContext(context.Context) TenantInboundSamlConfigSpConfigSpCertificateOutput
}

type TenantInboundSamlConfigSpConfigSpCertificateArgs struct {
	// -
	// The x509 certificate
	X509Certificate pulumi.StringPtrInput `pulumi:"x509Certificate"`
}

func (TenantInboundSamlConfigSpConfigSpCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TenantInboundSamlConfigSpConfigSpCertificate)(nil)).Elem()
}

func (i TenantInboundSamlConfigSpConfigSpCertificateArgs) ToTenantInboundSamlConfigSpConfigSpCertificateOutput() TenantInboundSamlConfigSpConfigSpCertificateOutput {
	return i.ToTenantInboundSamlConfigSpConfigSpCertificateOutputWithContext(context.Background())
}

func (i TenantInboundSamlConfigSpConfigSpCertificateArgs) ToTenantInboundSamlConfigSpConfigSpCertificateOutputWithContext(ctx context.Context) TenantInboundSamlConfigSpConfigSpCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantInboundSamlConfigSpConfigSpCertificateOutput)
}

// TenantInboundSamlConfigSpConfigSpCertificateArrayInput is an input type that accepts TenantInboundSamlConfigSpConfigSpCertificateArray and TenantInboundSamlConfigSpConfigSpCertificateArrayOutput values.
// You can construct a concrete instance of `TenantInboundSamlConfigSpConfigSpCertificateArrayInput` via:
//
//          TenantInboundSamlConfigSpConfigSpCertificateArray{ TenantInboundSamlConfigSpConfigSpCertificateArgs{...} }
type TenantInboundSamlConfigSpConfigSpCertificateArrayInput interface {
	pulumi.Input

	ToTenantInboundSamlConfigSpConfigSpCertificateArrayOutput() TenantInboundSamlConfigSpConfigSpCertificateArrayOutput
	ToTenantInboundSamlConfigSpConfigSpCertificateArrayOutputWithContext(context.Context) TenantInboundSamlConfigSpConfigSpCertificateArrayOutput
}

type TenantInboundSamlConfigSpConfigSpCertificateArray []TenantInboundSamlConfigSpConfigSpCertificateInput

func (TenantInboundSamlConfigSpConfigSpCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TenantInboundSamlConfigSpConfigSpCertificate)(nil)).Elem()
}

func (i TenantInboundSamlConfigSpConfigSpCertificateArray) ToTenantInboundSamlConfigSpConfigSpCertificateArrayOutput() TenantInboundSamlConfigSpConfigSpCertificateArrayOutput {
	return i.ToTenantInboundSamlConfigSpConfigSpCertificateArrayOutputWithContext(context.Background())
}

func (i TenantInboundSamlConfigSpConfigSpCertificateArray) ToTenantInboundSamlConfigSpConfigSpCertificateArrayOutputWithContext(ctx context.Context) TenantInboundSamlConfigSpConfigSpCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantInboundSamlConfigSpConfigSpCertificateArrayOutput)
}

type TenantInboundSamlConfigSpConfigSpCertificateOutput struct{ *pulumi.OutputState }

func (TenantInboundSamlConfigSpConfigSpCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TenantInboundSamlConfigSpConfigSpCertificate)(nil)).Elem()
}

func (o TenantInboundSamlConfigSpConfigSpCertificateOutput) ToTenantInboundSamlConfigSpConfigSpCertificateOutput() TenantInboundSamlConfigSpConfigSpCertificateOutput {
	return o
}

func (o TenantInboundSamlConfigSpConfigSpCertificateOutput) ToTenantInboundSamlConfigSpConfigSpCertificateOutputWithContext(ctx context.Context) TenantInboundSamlConfigSpConfigSpCertificateOutput {
	return o
}

// -
// The x509 certificate
func (o TenantInboundSamlConfigSpConfigSpCertificateOutput) X509Certificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TenantInboundSamlConfigSpConfigSpCertificate) *string { return v.X509Certificate }).(pulumi.StringPtrOutput)
}

type TenantInboundSamlConfigSpConfigSpCertificateArrayOutput struct{ *pulumi.OutputState }

func (TenantInboundSamlConfigSpConfigSpCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TenantInboundSamlConfigSpConfigSpCertificate)(nil)).Elem()
}

func (o TenantInboundSamlConfigSpConfigSpCertificateArrayOutput) ToTenantInboundSamlConfigSpConfigSpCertificateArrayOutput() TenantInboundSamlConfigSpConfigSpCertificateArrayOutput {
	return o
}

func (o TenantInboundSamlConfigSpConfigSpCertificateArrayOutput) ToTenantInboundSamlConfigSpConfigSpCertificateArrayOutputWithContext(ctx context.Context) TenantInboundSamlConfigSpConfigSpCertificateArrayOutput {
	return o
}

func (o TenantInboundSamlConfigSpConfigSpCertificateArrayOutput) Index(i pulumi.IntInput) TenantInboundSamlConfigSpConfigSpCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TenantInboundSamlConfigSpConfigSpCertificate {
		return vs[0].([]TenantInboundSamlConfigSpConfigSpCertificate)[vs[1].(int)]
	}).(TenantInboundSamlConfigSpConfigSpCertificateOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InboundSamlConfigIdpConfigInput)(nil)).Elem(), InboundSamlConfigIdpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InboundSamlConfigIdpConfigIdpCertificateInput)(nil)).Elem(), InboundSamlConfigIdpConfigIdpCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InboundSamlConfigIdpConfigIdpCertificateArrayInput)(nil)).Elem(), InboundSamlConfigIdpConfigIdpCertificateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InboundSamlConfigSpConfigInput)(nil)).Elem(), InboundSamlConfigSpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InboundSamlConfigSpConfigSpCertificateInput)(nil)).Elem(), InboundSamlConfigSpConfigSpCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InboundSamlConfigSpConfigSpCertificateArrayInput)(nil)).Elem(), InboundSamlConfigSpConfigSpCertificateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TenantInboundSamlConfigIdpConfigInput)(nil)).Elem(), TenantInboundSamlConfigIdpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TenantInboundSamlConfigIdpConfigIdpCertificateInput)(nil)).Elem(), TenantInboundSamlConfigIdpConfigIdpCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TenantInboundSamlConfigIdpConfigIdpCertificateArrayInput)(nil)).Elem(), TenantInboundSamlConfigIdpConfigIdpCertificateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TenantInboundSamlConfigSpConfigInput)(nil)).Elem(), TenantInboundSamlConfigSpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TenantInboundSamlConfigSpConfigSpCertificateInput)(nil)).Elem(), TenantInboundSamlConfigSpConfigSpCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TenantInboundSamlConfigSpConfigSpCertificateArrayInput)(nil)).Elem(), TenantInboundSamlConfigSpConfigSpCertificateArray{})
	pulumi.RegisterOutputType(InboundSamlConfigIdpConfigOutput{})
	pulumi.RegisterOutputType(InboundSamlConfigIdpConfigIdpCertificateOutput{})
	pulumi.RegisterOutputType(InboundSamlConfigIdpConfigIdpCertificateArrayOutput{})
	pulumi.RegisterOutputType(InboundSamlConfigSpConfigOutput{})
	pulumi.RegisterOutputType(InboundSamlConfigSpConfigSpCertificateOutput{})
	pulumi.RegisterOutputType(InboundSamlConfigSpConfigSpCertificateArrayOutput{})
	pulumi.RegisterOutputType(TenantInboundSamlConfigIdpConfigOutput{})
	pulumi.RegisterOutputType(TenantInboundSamlConfigIdpConfigIdpCertificateOutput{})
	pulumi.RegisterOutputType(TenantInboundSamlConfigIdpConfigIdpCertificateArrayOutput{})
	pulumi.RegisterOutputType(TenantInboundSamlConfigSpConfigOutput{})
	pulumi.RegisterOutputType(TenantInboundSamlConfigSpConfigSpCertificateOutput{})
	pulumi.RegisterOutputType(TenantInboundSamlConfigSpConfigSpCertificateArrayOutput{})
}
