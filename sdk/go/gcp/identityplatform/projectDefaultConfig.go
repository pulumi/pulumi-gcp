// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package identityplatform

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// There is no persistent data associated with this resource.
//
// > **Warning:** If you are using User ADCs (Application Default Credentials) with this resource,
// you must specify a `billingProject` and set `userProjectOverride` to true
// in the provider configuration. Otherwise the ACM API will return a 403 error.
// Your account must have the `serviceusage.services.use` permission on the
// `billingProject` you defined.
//
// ## Example Usage
// ### Identity Platform Project Default Config
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/identityplatform"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := identityplatform.NewProjectDefaultConfig(ctx, "default", &identityplatform.ProjectDefaultConfigArgs{
//				SignIn: &identityplatform.ProjectDefaultConfigSignInArgs{
//					AllowDuplicateEmails: pulumi.Bool(true),
//					Anonymous: &identityplatform.ProjectDefaultConfigSignInAnonymousArgs{
//						Enabled: pulumi.Bool(true),
//					},
//					Email: &identityplatform.ProjectDefaultConfigSignInEmailArgs{
//						Enabled:          pulumi.Bool(true),
//						PasswordRequired: pulumi.Bool(false),
//					},
//					PhoneNumber: &identityplatform.ProjectDefaultConfigSignInPhoneNumberArgs{
//						Enabled: pulumi.Bool(true),
//						TestPhoneNumbers: pulumi.StringMap{
//							"+11231231234": pulumi.String("000000"),
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// # ProjectDefaultConfig can be imported using any of these accepted formats
//
// ```sh
//
//	$ pulumi import gcp:identityplatform/projectDefaultConfig:ProjectDefaultConfig default projects/{{project}}/config/{{name}}
//
// ```
//
// ```sh
//
//	$ pulumi import gcp:identityplatform/projectDefaultConfig:ProjectDefaultConfig default {{project}}/{{name}}
//
// ```
//
// ```sh
//
//	$ pulumi import gcp:identityplatform/projectDefaultConfig:ProjectDefaultConfig default {{name}}
//
// ```
type ProjectDefaultConfig struct {
	pulumi.CustomResourceState

	// The name of the Config resource. Example: "projects/my-awesome-project/config"
	Name pulumi.StringOutput `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
	// Configuration related to local sign in methods.
	// Structure is documented below.
	SignIn ProjectDefaultConfigSignInPtrOutput `pulumi:"signIn"`
}

// NewProjectDefaultConfig registers a new resource with the given unique name, arguments, and options.
func NewProjectDefaultConfig(ctx *pulumi.Context,
	name string, args *ProjectDefaultConfigArgs, opts ...pulumi.ResourceOption) (*ProjectDefaultConfig, error) {
	if args == nil {
		args = &ProjectDefaultConfigArgs{}
	}

	var resource ProjectDefaultConfig
	err := ctx.RegisterResource("gcp:identityplatform/projectDefaultConfig:ProjectDefaultConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetProjectDefaultConfig gets an existing ProjectDefaultConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetProjectDefaultConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ProjectDefaultConfigState, opts ...pulumi.ResourceOption) (*ProjectDefaultConfig, error) {
	var resource ProjectDefaultConfig
	err := ctx.ReadResource("gcp:identityplatform/projectDefaultConfig:ProjectDefaultConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ProjectDefaultConfig resources.
type projectDefaultConfigState struct {
	// The name of the Config resource. Example: "projects/my-awesome-project/config"
	Name *string `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// Configuration related to local sign in methods.
	// Structure is documented below.
	SignIn *ProjectDefaultConfigSignIn `pulumi:"signIn"`
}

type ProjectDefaultConfigState struct {
	// The name of the Config resource. Example: "projects/my-awesome-project/config"
	Name pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// Configuration related to local sign in methods.
	// Structure is documented below.
	SignIn ProjectDefaultConfigSignInPtrInput
}

func (ProjectDefaultConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*projectDefaultConfigState)(nil)).Elem()
}

type projectDefaultConfigArgs struct {
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// Configuration related to local sign in methods.
	// Structure is documented below.
	SignIn *ProjectDefaultConfigSignIn `pulumi:"signIn"`
}

// The set of arguments for constructing a ProjectDefaultConfig resource.
type ProjectDefaultConfigArgs struct {
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// Configuration related to local sign in methods.
	// Structure is documented below.
	SignIn ProjectDefaultConfigSignInPtrInput
}

func (ProjectDefaultConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*projectDefaultConfigArgs)(nil)).Elem()
}

type ProjectDefaultConfigInput interface {
	pulumi.Input

	ToProjectDefaultConfigOutput() ProjectDefaultConfigOutput
	ToProjectDefaultConfigOutputWithContext(ctx context.Context) ProjectDefaultConfigOutput
}

func (*ProjectDefaultConfig) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectDefaultConfig)(nil)).Elem()
}

func (i *ProjectDefaultConfig) ToProjectDefaultConfigOutput() ProjectDefaultConfigOutput {
	return i.ToProjectDefaultConfigOutputWithContext(context.Background())
}

func (i *ProjectDefaultConfig) ToProjectDefaultConfigOutputWithContext(ctx context.Context) ProjectDefaultConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectDefaultConfigOutput)
}

// ProjectDefaultConfigArrayInput is an input type that accepts ProjectDefaultConfigArray and ProjectDefaultConfigArrayOutput values.
// You can construct a concrete instance of `ProjectDefaultConfigArrayInput` via:
//
//	ProjectDefaultConfigArray{ ProjectDefaultConfigArgs{...} }
type ProjectDefaultConfigArrayInput interface {
	pulumi.Input

	ToProjectDefaultConfigArrayOutput() ProjectDefaultConfigArrayOutput
	ToProjectDefaultConfigArrayOutputWithContext(context.Context) ProjectDefaultConfigArrayOutput
}

type ProjectDefaultConfigArray []ProjectDefaultConfigInput

func (ProjectDefaultConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ProjectDefaultConfig)(nil)).Elem()
}

func (i ProjectDefaultConfigArray) ToProjectDefaultConfigArrayOutput() ProjectDefaultConfigArrayOutput {
	return i.ToProjectDefaultConfigArrayOutputWithContext(context.Background())
}

func (i ProjectDefaultConfigArray) ToProjectDefaultConfigArrayOutputWithContext(ctx context.Context) ProjectDefaultConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectDefaultConfigArrayOutput)
}

// ProjectDefaultConfigMapInput is an input type that accepts ProjectDefaultConfigMap and ProjectDefaultConfigMapOutput values.
// You can construct a concrete instance of `ProjectDefaultConfigMapInput` via:
//
//	ProjectDefaultConfigMap{ "key": ProjectDefaultConfigArgs{...} }
type ProjectDefaultConfigMapInput interface {
	pulumi.Input

	ToProjectDefaultConfigMapOutput() ProjectDefaultConfigMapOutput
	ToProjectDefaultConfigMapOutputWithContext(context.Context) ProjectDefaultConfigMapOutput
}

type ProjectDefaultConfigMap map[string]ProjectDefaultConfigInput

func (ProjectDefaultConfigMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ProjectDefaultConfig)(nil)).Elem()
}

func (i ProjectDefaultConfigMap) ToProjectDefaultConfigMapOutput() ProjectDefaultConfigMapOutput {
	return i.ToProjectDefaultConfigMapOutputWithContext(context.Background())
}

func (i ProjectDefaultConfigMap) ToProjectDefaultConfigMapOutputWithContext(ctx context.Context) ProjectDefaultConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectDefaultConfigMapOutput)
}

type ProjectDefaultConfigOutput struct{ *pulumi.OutputState }

func (ProjectDefaultConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectDefaultConfig)(nil)).Elem()
}

func (o ProjectDefaultConfigOutput) ToProjectDefaultConfigOutput() ProjectDefaultConfigOutput {
	return o
}

func (o ProjectDefaultConfigOutput) ToProjectDefaultConfigOutputWithContext(ctx context.Context) ProjectDefaultConfigOutput {
	return o
}

// The name of the Config resource. Example: "projects/my-awesome-project/config"
func (o ProjectDefaultConfigOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ProjectDefaultConfig) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The ID of the project in which the resource belongs.
// If it is not provided, the provider project is used.
func (o ProjectDefaultConfigOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ProjectDefaultConfig) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Configuration related to local sign in methods.
// Structure is documented below.
func (o ProjectDefaultConfigOutput) SignIn() ProjectDefaultConfigSignInPtrOutput {
	return o.ApplyT(func(v *ProjectDefaultConfig) ProjectDefaultConfigSignInPtrOutput { return v.SignIn }).(ProjectDefaultConfigSignInPtrOutput)
}

type ProjectDefaultConfigArrayOutput struct{ *pulumi.OutputState }

func (ProjectDefaultConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ProjectDefaultConfig)(nil)).Elem()
}

func (o ProjectDefaultConfigArrayOutput) ToProjectDefaultConfigArrayOutput() ProjectDefaultConfigArrayOutput {
	return o
}

func (o ProjectDefaultConfigArrayOutput) ToProjectDefaultConfigArrayOutputWithContext(ctx context.Context) ProjectDefaultConfigArrayOutput {
	return o
}

func (o ProjectDefaultConfigArrayOutput) Index(i pulumi.IntInput) ProjectDefaultConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ProjectDefaultConfig {
		return vs[0].([]*ProjectDefaultConfig)[vs[1].(int)]
	}).(ProjectDefaultConfigOutput)
}

type ProjectDefaultConfigMapOutput struct{ *pulumi.OutputState }

func (ProjectDefaultConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ProjectDefaultConfig)(nil)).Elem()
}

func (o ProjectDefaultConfigMapOutput) ToProjectDefaultConfigMapOutput() ProjectDefaultConfigMapOutput {
	return o
}

func (o ProjectDefaultConfigMapOutput) ToProjectDefaultConfigMapOutputWithContext(ctx context.Context) ProjectDefaultConfigMapOutput {
	return o
}

func (o ProjectDefaultConfigMapOutput) MapIndex(k pulumi.StringInput) ProjectDefaultConfigOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ProjectDefaultConfig {
		return vs[0].(map[string]*ProjectDefaultConfig)[vs[1].(string)]
	}).(ProjectDefaultConfigOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectDefaultConfigInput)(nil)).Elem(), &ProjectDefaultConfig{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectDefaultConfigArrayInput)(nil)).Elem(), ProjectDefaultConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectDefaultConfigMapInput)(nil)).Elem(), ProjectDefaultConfigMap{})
	pulumi.RegisterOutputType(ProjectDefaultConfigOutput{})
	pulumi.RegisterOutputType(ProjectDefaultConfigArrayOutput{})
	pulumi.RegisterOutputType(ProjectDefaultConfigMapOutput{})
}
