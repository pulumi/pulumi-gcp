// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package identityplatform

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Identity Platform configuration for a Cloud project. Identity Platform is an
// end-to-end authentication system for third-party users to access apps
// and services.
//
// This entity is created only once during intialization and cannot be deleted,
// individual Identity Providers may be disabled instead.  This resource may only
// be created in billing-enabled projects.
//
// To get more information about Config, see:
//
// * [API documentation](https://cloud.google.com/identity-platform/docs/reference/rest/v2/Config)
// * How-to Guides
//   - [Official Documentation](https://cloud.google.com/identity-platform/docs)
//
// ## Example Usage
//
// ## Import
//
// # Config can be imported using any of these accepted formats
//
// ```sh
//
//	$ pulumi import gcp:identityplatform/config:Config default projects/{{project}}/config
//
// ```
//
// ```sh
//
//	$ pulumi import gcp:identityplatform/config:Config default projects/{{project}}
//
// ```
//
// ```sh
//
//	$ pulumi import gcp:identityplatform/config:Config default {{project}}
//
// ```
type Config struct {
	pulumi.CustomResourceState

	// List of domains authorized for OAuth redirects.
	AuthorizedDomains pulumi.StringArrayOutput `pulumi:"authorizedDomains"`
	// Whether anonymous users will be auto-deleted after a period of 30 days
	AutodeleteAnonymousUsers pulumi.BoolPtrOutput `pulumi:"autodeleteAnonymousUsers"`
	// Configuration related to blocking functions.
	// Structure is documented below.
	BlockingFunctions ConfigBlockingFunctionsPtrOutput `pulumi:"blockingFunctions"`
	// The name of the Config resource
	Name pulumi.StringOutput `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
	// Configuration related to quotas.
	// Structure is documented below.
	Quota ConfigQuotaPtrOutput `pulumi:"quota"`
	// Configuration related to local sign in methods.
	// Structure is documented below.
	SignIn ConfigSignInOutput `pulumi:"signIn"`
}

// NewConfig registers a new resource with the given unique name, arguments, and options.
func NewConfig(ctx *pulumi.Context,
	name string, args *ConfigArgs, opts ...pulumi.ResourceOption) (*Config, error) {
	if args == nil {
		args = &ConfigArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Config
	err := ctx.RegisterResource("gcp:identityplatform/config:Config", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetConfig gets an existing Config resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ConfigState, opts ...pulumi.ResourceOption) (*Config, error) {
	var resource Config
	err := ctx.ReadResource("gcp:identityplatform/config:Config", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Config resources.
type configState struct {
	// List of domains authorized for OAuth redirects.
	AuthorizedDomains []string `pulumi:"authorizedDomains"`
	// Whether anonymous users will be auto-deleted after a period of 30 days
	AutodeleteAnonymousUsers *bool `pulumi:"autodeleteAnonymousUsers"`
	// Configuration related to blocking functions.
	// Structure is documented below.
	BlockingFunctions *ConfigBlockingFunctions `pulumi:"blockingFunctions"`
	// The name of the Config resource
	Name *string `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// Configuration related to quotas.
	// Structure is documented below.
	Quota *ConfigQuota `pulumi:"quota"`
	// Configuration related to local sign in methods.
	// Structure is documented below.
	SignIn *ConfigSignIn `pulumi:"signIn"`
}

type ConfigState struct {
	// List of domains authorized for OAuth redirects.
	AuthorizedDomains pulumi.StringArrayInput
	// Whether anonymous users will be auto-deleted after a period of 30 days
	AutodeleteAnonymousUsers pulumi.BoolPtrInput
	// Configuration related to blocking functions.
	// Structure is documented below.
	BlockingFunctions ConfigBlockingFunctionsPtrInput
	// The name of the Config resource
	Name pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// Configuration related to quotas.
	// Structure is documented below.
	Quota ConfigQuotaPtrInput
	// Configuration related to local sign in methods.
	// Structure is documented below.
	SignIn ConfigSignInPtrInput
}

func (ConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*configState)(nil)).Elem()
}

type configArgs struct {
	// List of domains authorized for OAuth redirects.
	AuthorizedDomains []string `pulumi:"authorizedDomains"`
	// Whether anonymous users will be auto-deleted after a period of 30 days
	AutodeleteAnonymousUsers *bool `pulumi:"autodeleteAnonymousUsers"`
	// Configuration related to blocking functions.
	// Structure is documented below.
	BlockingFunctions *ConfigBlockingFunctions `pulumi:"blockingFunctions"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// Configuration related to quotas.
	// Structure is documented below.
	Quota *ConfigQuota `pulumi:"quota"`
	// Configuration related to local sign in methods.
	// Structure is documented below.
	SignIn *ConfigSignIn `pulumi:"signIn"`
}

// The set of arguments for constructing a Config resource.
type ConfigArgs struct {
	// List of domains authorized for OAuth redirects.
	AuthorizedDomains pulumi.StringArrayInput
	// Whether anonymous users will be auto-deleted after a period of 30 days
	AutodeleteAnonymousUsers pulumi.BoolPtrInput
	// Configuration related to blocking functions.
	// Structure is documented below.
	BlockingFunctions ConfigBlockingFunctionsPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// Configuration related to quotas.
	// Structure is documented below.
	Quota ConfigQuotaPtrInput
	// Configuration related to local sign in methods.
	// Structure is documented below.
	SignIn ConfigSignInPtrInput
}

func (ConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*configArgs)(nil)).Elem()
}

type ConfigInput interface {
	pulumi.Input

	ToConfigOutput() ConfigOutput
	ToConfigOutputWithContext(ctx context.Context) ConfigOutput
}

func (*Config) ElementType() reflect.Type {
	return reflect.TypeOf((**Config)(nil)).Elem()
}

func (i *Config) ToConfigOutput() ConfigOutput {
	return i.ToConfigOutputWithContext(context.Background())
}

func (i *Config) ToConfigOutputWithContext(ctx context.Context) ConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigOutput)
}

func (i *Config) ToOutput(ctx context.Context) pulumix.Output[*Config] {
	return pulumix.Output[*Config]{
		OutputState: i.ToConfigOutputWithContext(ctx).OutputState,
	}
}

// ConfigArrayInput is an input type that accepts ConfigArray and ConfigArrayOutput values.
// You can construct a concrete instance of `ConfigArrayInput` via:
//
//	ConfigArray{ ConfigArgs{...} }
type ConfigArrayInput interface {
	pulumi.Input

	ToConfigArrayOutput() ConfigArrayOutput
	ToConfigArrayOutputWithContext(context.Context) ConfigArrayOutput
}

type ConfigArray []ConfigInput

func (ConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Config)(nil)).Elem()
}

func (i ConfigArray) ToConfigArrayOutput() ConfigArrayOutput {
	return i.ToConfigArrayOutputWithContext(context.Background())
}

func (i ConfigArray) ToConfigArrayOutputWithContext(ctx context.Context) ConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigArrayOutput)
}

func (i ConfigArray) ToOutput(ctx context.Context) pulumix.Output[[]*Config] {
	return pulumix.Output[[]*Config]{
		OutputState: i.ToConfigArrayOutputWithContext(ctx).OutputState,
	}
}

// ConfigMapInput is an input type that accepts ConfigMap and ConfigMapOutput values.
// You can construct a concrete instance of `ConfigMapInput` via:
//
//	ConfigMap{ "key": ConfigArgs{...} }
type ConfigMapInput interface {
	pulumi.Input

	ToConfigMapOutput() ConfigMapOutput
	ToConfigMapOutputWithContext(context.Context) ConfigMapOutput
}

type ConfigMap map[string]ConfigInput

func (ConfigMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Config)(nil)).Elem()
}

func (i ConfigMap) ToConfigMapOutput() ConfigMapOutput {
	return i.ToConfigMapOutputWithContext(context.Background())
}

func (i ConfigMap) ToConfigMapOutputWithContext(ctx context.Context) ConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigMapOutput)
}

func (i ConfigMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*Config] {
	return pulumix.Output[map[string]*Config]{
		OutputState: i.ToConfigMapOutputWithContext(ctx).OutputState,
	}
}

type ConfigOutput struct{ *pulumi.OutputState }

func (ConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Config)(nil)).Elem()
}

func (o ConfigOutput) ToConfigOutput() ConfigOutput {
	return o
}

func (o ConfigOutput) ToConfigOutputWithContext(ctx context.Context) ConfigOutput {
	return o
}

func (o ConfigOutput) ToOutput(ctx context.Context) pulumix.Output[*Config] {
	return pulumix.Output[*Config]{
		OutputState: o.OutputState,
	}
}

// List of domains authorized for OAuth redirects.
func (o ConfigOutput) AuthorizedDomains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Config) pulumi.StringArrayOutput { return v.AuthorizedDomains }).(pulumi.StringArrayOutput)
}

// Whether anonymous users will be auto-deleted after a period of 30 days
func (o ConfigOutput) AutodeleteAnonymousUsers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Config) pulumi.BoolPtrOutput { return v.AutodeleteAnonymousUsers }).(pulumi.BoolPtrOutput)
}

// Configuration related to blocking functions.
// Structure is documented below.
func (o ConfigOutput) BlockingFunctions() ConfigBlockingFunctionsPtrOutput {
	return o.ApplyT(func(v *Config) ConfigBlockingFunctionsPtrOutput { return v.BlockingFunctions }).(ConfigBlockingFunctionsPtrOutput)
}

// The name of the Config resource
func (o ConfigOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Config) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The ID of the project in which the resource belongs.
// If it is not provided, the provider project is used.
func (o ConfigOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *Config) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Configuration related to quotas.
// Structure is documented below.
func (o ConfigOutput) Quota() ConfigQuotaPtrOutput {
	return o.ApplyT(func(v *Config) ConfigQuotaPtrOutput { return v.Quota }).(ConfigQuotaPtrOutput)
}

// Configuration related to local sign in methods.
// Structure is documented below.
func (o ConfigOutput) SignIn() ConfigSignInOutput {
	return o.ApplyT(func(v *Config) ConfigSignInOutput { return v.SignIn }).(ConfigSignInOutput)
}

type ConfigArrayOutput struct{ *pulumi.OutputState }

func (ConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Config)(nil)).Elem()
}

func (o ConfigArrayOutput) ToConfigArrayOutput() ConfigArrayOutput {
	return o
}

func (o ConfigArrayOutput) ToConfigArrayOutputWithContext(ctx context.Context) ConfigArrayOutput {
	return o
}

func (o ConfigArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*Config] {
	return pulumix.Output[[]*Config]{
		OutputState: o.OutputState,
	}
}

func (o ConfigArrayOutput) Index(i pulumi.IntInput) ConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Config {
		return vs[0].([]*Config)[vs[1].(int)]
	}).(ConfigOutput)
}

type ConfigMapOutput struct{ *pulumi.OutputState }

func (ConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Config)(nil)).Elem()
}

func (o ConfigMapOutput) ToConfigMapOutput() ConfigMapOutput {
	return o
}

func (o ConfigMapOutput) ToConfigMapOutputWithContext(ctx context.Context) ConfigMapOutput {
	return o
}

func (o ConfigMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*Config] {
	return pulumix.Output[map[string]*Config]{
		OutputState: o.OutputState,
	}
}

func (o ConfigMapOutput) MapIndex(k pulumi.StringInput) ConfigOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Config {
		return vs[0].(map[string]*Config)[vs[1].(string)]
	}).(ConfigOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigInput)(nil)).Elem(), &Config{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigArrayInput)(nil)).Elem(), ConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigMapInput)(nil)).Elem(), ConfigMap{})
	pulumi.RegisterOutputType(ConfigOutput{})
	pulumi.RegisterOutputType(ConfigArrayOutput{})
	pulumi.RegisterOutputType(ConfigMapOutput{})
}
