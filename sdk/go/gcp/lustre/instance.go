// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package lustre

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A Managed Lustre instance
//
// ## Example Usage
//
// ### Lustre Instance Basic
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/compute"
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/lustre"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			// This example assumes this network already exists.
//			// The API creates a tenant network per network authorized for a
//			// Lustre instance and that network is not deleted when the user-created
//			// network (authorized_network) is deleted, so this prevents issues
//			// with tenant network quota.
//			// If this network hasn't been created and you are using this example in your
//			// config, add an additional network resource or change
//			// this from "data"to "resource"
//			lustre_network, err := compute.LookupNetwork(ctx, &compute.LookupNetworkArgs{
//				Name: "my-network",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = lustre.NewInstance(ctx, "instance", &lustre.InstanceArgs{
//				InstanceId:  pulumi.String("my-instance"),
//				Location:    pulumi.String("us-central1-a"),
//				Description: pulumi.String("test lustre instance"),
//				Filesystem:  pulumi.String("testfs"),
//				CapacityGib: pulumi.String("18000"),
//				Network:     pulumi.String(lustre_network.Id),
//				Labels: pulumi.StringMap{
//					"test": pulumi.String("value"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Instance can be imported using any of these accepted formats:
//
// * `projects/{{project}}/locations/{{location}}/instances/{{instance_id}}`
//
// * `{{project}}/{{location}}/{{instance_id}}`
//
// * `{{location}}/{{instance_id}}`
//
// When using the `pulumi import` command, Instance can be imported using one of the formats above. For example:
//
// ```sh
// $ pulumi import gcp:lustre/instance:Instance default projects/{{project}}/locations/{{location}}/instances/{{instance_id}}
// ```
//
// ```sh
// $ pulumi import gcp:lustre/instance:Instance default {{project}}/{{location}}/{{instance_id}}
// ```
//
// ```sh
// $ pulumi import gcp:lustre/instance:Instance default {{location}}/{{instance_id}}
// ```
type Instance struct {
	pulumi.CustomResourceState

	// Required. The storage capacity of the instance in gibibytes (GiB). Allowed values
	// are from 18000 to 954000, in increments of 9000.
	CapacityGib pulumi.StringOutput `pulumi:"capacityGib"`
	// Output only. Timestamp when the instance was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Optional. A user-readable description of the instance.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
	EffectiveLabels pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	// Required. Immutable. The filesystem name for this instance. This name is used by client-side
	// tools, including when mounting the instance. Must be 8 characters or less
	// and may only contain letters and numbers.
	Filesystem pulumi.StringOutput `pulumi:"filesystem"`
	// Optional. Indicates whether you want to enable support for GKE clients. By default,
	// GKE clients are not supported.
	GkeSupportEnabled pulumi.BoolPtrOutput `pulumi:"gkeSupportEnabled"`
	// Required. The name of the Managed Lustre instance.
	// * Must contain only lowercase letters, numbers, and hyphens.
	// * Must start with a letter.
	// * Must be between 1-63 characters.
	// * Must end with a number or a letter.
	//
	// ***
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
	// Optional. Labels as key value pairs.
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
	Location pulumi.StringOutput `pulumi:"location"`
	// Output only. Mount point of the instance in the format `IP_ADDRESS@tcp:/FILESYSTEM`.
	MountPoint pulumi.StringOutput `pulumi:"mountPoint"`
	// Identifier. The name of the instance.
	Name pulumi.StringOutput `pulumi:"name"`
	// Required. Immutable. The full name of the VPC network to which the instance is connected.
	// Must be in the format
	// `projects/{project_id}/global/networks/{network_name}`.
	Network pulumi.StringOutput `pulumi:"network"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
	// The combination of labels configured directly on the resource
	// and default labels configured on the provider.
	PulumiLabels pulumi.StringMapOutput `pulumi:"pulumiLabels"`
	// Output only. The state of the instance.
	// Possible values:
	// STATE_UNSPECIFIED
	// ACTIVE
	// CREATING
	// DELETING
	// UPGRADING
	// REPAIRING
	// STOPPED
	State pulumi.StringOutput `pulumi:"state"`
	// Output only. Timestamp when the instance was last updated.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewInstance registers a new resource with the given unique name, arguments, and options.
func NewInstance(ctx *pulumi.Context,
	name string, args *InstanceArgs, opts ...pulumi.ResourceOption) (*Instance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CapacityGib == nil {
		return nil, errors.New("invalid value for required argument 'CapacityGib'")
	}
	if args.Filesystem == nil {
		return nil, errors.New("invalid value for required argument 'Filesystem'")
	}
	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	if args.Network == nil {
		return nil, errors.New("invalid value for required argument 'Network'")
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"effectiveLabels",
		"pulumiLabels",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Instance
	err := ctx.RegisterResource("gcp:lustre/instance:Instance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInstance gets an existing Instance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InstanceState, opts ...pulumi.ResourceOption) (*Instance, error) {
	var resource Instance
	err := ctx.ReadResource("gcp:lustre/instance:Instance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Instance resources.
type instanceState struct {
	// Required. The storage capacity of the instance in gibibytes (GiB). Allowed values
	// are from 18000 to 954000, in increments of 9000.
	CapacityGib *string `pulumi:"capacityGib"`
	// Output only. Timestamp when the instance was created.
	CreateTime *string `pulumi:"createTime"`
	// Optional. A user-readable description of the instance.
	Description *string `pulumi:"description"`
	// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
	EffectiveLabels map[string]string `pulumi:"effectiveLabels"`
	// Required. Immutable. The filesystem name for this instance. This name is used by client-side
	// tools, including when mounting the instance. Must be 8 characters or less
	// and may only contain letters and numbers.
	Filesystem *string `pulumi:"filesystem"`
	// Optional. Indicates whether you want to enable support for GKE clients. By default,
	// GKE clients are not supported.
	GkeSupportEnabled *bool `pulumi:"gkeSupportEnabled"`
	// Required. The name of the Managed Lustre instance.
	// * Must contain only lowercase letters, numbers, and hyphens.
	// * Must start with a letter.
	// * Must be between 1-63 characters.
	// * Must end with a number or a letter.
	//
	// ***
	InstanceId *string `pulumi:"instanceId"`
	// Optional. Labels as key value pairs.
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
	Location *string `pulumi:"location"`
	// Output only. Mount point of the instance in the format `IP_ADDRESS@tcp:/FILESYSTEM`.
	MountPoint *string `pulumi:"mountPoint"`
	// Identifier. The name of the instance.
	Name *string `pulumi:"name"`
	// Required. Immutable. The full name of the VPC network to which the instance is connected.
	// Must be in the format
	// `projects/{project_id}/global/networks/{network_name}`.
	Network *string `pulumi:"network"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// The combination of labels configured directly on the resource
	// and default labels configured on the provider.
	PulumiLabels map[string]string `pulumi:"pulumiLabels"`
	// Output only. The state of the instance.
	// Possible values:
	// STATE_UNSPECIFIED
	// ACTIVE
	// CREATING
	// DELETING
	// UPGRADING
	// REPAIRING
	// STOPPED
	State *string `pulumi:"state"`
	// Output only. Timestamp when the instance was last updated.
	UpdateTime *string `pulumi:"updateTime"`
}

type InstanceState struct {
	// Required. The storage capacity of the instance in gibibytes (GiB). Allowed values
	// are from 18000 to 954000, in increments of 9000.
	CapacityGib pulumi.StringPtrInput
	// Output only. Timestamp when the instance was created.
	CreateTime pulumi.StringPtrInput
	// Optional. A user-readable description of the instance.
	Description pulumi.StringPtrInput
	// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
	EffectiveLabels pulumi.StringMapInput
	// Required. Immutable. The filesystem name for this instance. This name is used by client-side
	// tools, including when mounting the instance. Must be 8 characters or less
	// and may only contain letters and numbers.
	Filesystem pulumi.StringPtrInput
	// Optional. Indicates whether you want to enable support for GKE clients. By default,
	// GKE clients are not supported.
	GkeSupportEnabled pulumi.BoolPtrInput
	// Required. The name of the Managed Lustre instance.
	// * Must contain only lowercase letters, numbers, and hyphens.
	// * Must start with a letter.
	// * Must be between 1-63 characters.
	// * Must end with a number or a letter.
	//
	// ***
	InstanceId pulumi.StringPtrInput
	// Optional. Labels as key value pairs.
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
	Location pulumi.StringPtrInput
	// Output only. Mount point of the instance in the format `IP_ADDRESS@tcp:/FILESYSTEM`.
	MountPoint pulumi.StringPtrInput
	// Identifier. The name of the instance.
	Name pulumi.StringPtrInput
	// Required. Immutable. The full name of the VPC network to which the instance is connected.
	// Must be in the format
	// `projects/{project_id}/global/networks/{network_name}`.
	Network pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// The combination of labels configured directly on the resource
	// and default labels configured on the provider.
	PulumiLabels pulumi.StringMapInput
	// Output only. The state of the instance.
	// Possible values:
	// STATE_UNSPECIFIED
	// ACTIVE
	// CREATING
	// DELETING
	// UPGRADING
	// REPAIRING
	// STOPPED
	State pulumi.StringPtrInput
	// Output only. Timestamp when the instance was last updated.
	UpdateTime pulumi.StringPtrInput
}

func (InstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceState)(nil)).Elem()
}

type instanceArgs struct {
	// Required. The storage capacity of the instance in gibibytes (GiB). Allowed values
	// are from 18000 to 954000, in increments of 9000.
	CapacityGib string `pulumi:"capacityGib"`
	// Optional. A user-readable description of the instance.
	Description *string `pulumi:"description"`
	// Required. Immutable. The filesystem name for this instance. This name is used by client-side
	// tools, including when mounting the instance. Must be 8 characters or less
	// and may only contain letters and numbers.
	Filesystem string `pulumi:"filesystem"`
	// Optional. Indicates whether you want to enable support for GKE clients. By default,
	// GKE clients are not supported.
	GkeSupportEnabled *bool `pulumi:"gkeSupportEnabled"`
	// Required. The name of the Managed Lustre instance.
	// * Must contain only lowercase letters, numbers, and hyphens.
	// * Must start with a letter.
	// * Must be between 1-63 characters.
	// * Must end with a number or a letter.
	//
	// ***
	InstanceId string `pulumi:"instanceId"`
	// Optional. Labels as key value pairs.
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
	Location string `pulumi:"location"`
	// Required. Immutable. The full name of the VPC network to which the instance is connected.
	// Must be in the format
	// `projects/{project_id}/global/networks/{network_name}`.
	Network string `pulumi:"network"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
}

// The set of arguments for constructing a Instance resource.
type InstanceArgs struct {
	// Required. The storage capacity of the instance in gibibytes (GiB). Allowed values
	// are from 18000 to 954000, in increments of 9000.
	CapacityGib pulumi.StringInput
	// Optional. A user-readable description of the instance.
	Description pulumi.StringPtrInput
	// Required. Immutable. The filesystem name for this instance. This name is used by client-side
	// tools, including when mounting the instance. Must be 8 characters or less
	// and may only contain letters and numbers.
	Filesystem pulumi.StringInput
	// Optional. Indicates whether you want to enable support for GKE clients. By default,
	// GKE clients are not supported.
	GkeSupportEnabled pulumi.BoolPtrInput
	// Required. The name of the Managed Lustre instance.
	// * Must contain only lowercase letters, numbers, and hyphens.
	// * Must start with a letter.
	// * Must be between 1-63 characters.
	// * Must end with a number or a letter.
	//
	// ***
	InstanceId pulumi.StringInput
	// Optional. Labels as key value pairs.
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
	Location pulumi.StringInput
	// Required. Immutable. The full name of the VPC network to which the instance is connected.
	// Must be in the format
	// `projects/{project_id}/global/networks/{network_name}`.
	Network pulumi.StringInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
}

func (InstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceArgs)(nil)).Elem()
}

type InstanceInput interface {
	pulumi.Input

	ToInstanceOutput() InstanceOutput
	ToInstanceOutputWithContext(ctx context.Context) InstanceOutput
}

func (*Instance) ElementType() reflect.Type {
	return reflect.TypeOf((**Instance)(nil)).Elem()
}

func (i *Instance) ToInstanceOutput() InstanceOutput {
	return i.ToInstanceOutputWithContext(context.Background())
}

func (i *Instance) ToInstanceOutputWithContext(ctx context.Context) InstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceOutput)
}

// InstanceArrayInput is an input type that accepts InstanceArray and InstanceArrayOutput values.
// You can construct a concrete instance of `InstanceArrayInput` via:
//
//	InstanceArray{ InstanceArgs{...} }
type InstanceArrayInput interface {
	pulumi.Input

	ToInstanceArrayOutput() InstanceArrayOutput
	ToInstanceArrayOutputWithContext(context.Context) InstanceArrayOutput
}

type InstanceArray []InstanceInput

func (InstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Instance)(nil)).Elem()
}

func (i InstanceArray) ToInstanceArrayOutput() InstanceArrayOutput {
	return i.ToInstanceArrayOutputWithContext(context.Background())
}

func (i InstanceArray) ToInstanceArrayOutputWithContext(ctx context.Context) InstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceArrayOutput)
}

// InstanceMapInput is an input type that accepts InstanceMap and InstanceMapOutput values.
// You can construct a concrete instance of `InstanceMapInput` via:
//
//	InstanceMap{ "key": InstanceArgs{...} }
type InstanceMapInput interface {
	pulumi.Input

	ToInstanceMapOutput() InstanceMapOutput
	ToInstanceMapOutputWithContext(context.Context) InstanceMapOutput
}

type InstanceMap map[string]InstanceInput

func (InstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Instance)(nil)).Elem()
}

func (i InstanceMap) ToInstanceMapOutput() InstanceMapOutput {
	return i.ToInstanceMapOutputWithContext(context.Background())
}

func (i InstanceMap) ToInstanceMapOutputWithContext(ctx context.Context) InstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMapOutput)
}

type InstanceOutput struct{ *pulumi.OutputState }

func (InstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Instance)(nil)).Elem()
}

func (o InstanceOutput) ToInstanceOutput() InstanceOutput {
	return o
}

func (o InstanceOutput) ToInstanceOutputWithContext(ctx context.Context) InstanceOutput {
	return o
}

// Required. The storage capacity of the instance in gibibytes (GiB). Allowed values
// are from 18000 to 954000, in increments of 9000.
func (o InstanceOutput) CapacityGib() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.CapacityGib }).(pulumi.StringOutput)
}

// Output only. Timestamp when the instance was created.
func (o InstanceOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Optional. A user-readable description of the instance.
func (o InstanceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
func (o InstanceOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// Required. Immutable. The filesystem name for this instance. This name is used by client-side
// tools, including when mounting the instance. Must be 8 characters or less
// and may only contain letters and numbers.
func (o InstanceOutput) Filesystem() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.Filesystem }).(pulumi.StringOutput)
}

// Optional. Indicates whether you want to enable support for GKE clients. By default,
// GKE clients are not supported.
func (o InstanceOutput) GkeSupportEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.BoolPtrOutput { return v.GkeSupportEnabled }).(pulumi.BoolPtrOutput)
}

// Required. The name of the Managed Lustre instance.
// * Must contain only lowercase letters, numbers, and hyphens.
// * Must start with a letter.
// * Must be between 1-63 characters.
// * Must end with a number or a letter.
//
// ***
func (o InstanceOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

// Optional. Labels as key value pairs.
// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
func (o InstanceOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
func (o InstanceOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Output only. Mount point of the instance in the format `IP_ADDRESS@tcp:/FILESYSTEM`.
func (o InstanceOutput) MountPoint() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.MountPoint }).(pulumi.StringOutput)
}

// Identifier. The name of the instance.
func (o InstanceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Required. Immutable. The full name of the VPC network to which the instance is connected.
// Must be in the format
// `projects/{project_id}/global/networks/{network_name}`.
func (o InstanceOutput) Network() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.Network }).(pulumi.StringOutput)
}

// The ID of the project in which the resource belongs.
// If it is not provided, the provider project is used.
func (o InstanceOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The combination of labels configured directly on the resource
// and default labels configured on the provider.
func (o InstanceOutput) PulumiLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringMapOutput { return v.PulumiLabels }).(pulumi.StringMapOutput)
}

// Output only. The state of the instance.
// Possible values:
// STATE_UNSPECIFIED
// ACTIVE
// CREATING
// DELETING
// UPGRADING
// REPAIRING
// STOPPED
func (o InstanceOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// Output only. Timestamp when the instance was last updated.
func (o InstanceOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

type InstanceArrayOutput struct{ *pulumi.OutputState }

func (InstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Instance)(nil)).Elem()
}

func (o InstanceArrayOutput) ToInstanceArrayOutput() InstanceArrayOutput {
	return o
}

func (o InstanceArrayOutput) ToInstanceArrayOutputWithContext(ctx context.Context) InstanceArrayOutput {
	return o
}

func (o InstanceArrayOutput) Index(i pulumi.IntInput) InstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Instance {
		return vs[0].([]*Instance)[vs[1].(int)]
	}).(InstanceOutput)
}

type InstanceMapOutput struct{ *pulumi.OutputState }

func (InstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Instance)(nil)).Elem()
}

func (o InstanceMapOutput) ToInstanceMapOutput() InstanceMapOutput {
	return o
}

func (o InstanceMapOutput) ToInstanceMapOutputWithContext(ctx context.Context) InstanceMapOutput {
	return o
}

func (o InstanceMapOutput) MapIndex(k pulumi.StringInput) InstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Instance {
		return vs[0].(map[string]*Instance)[vs[1].(string)]
	}).(InstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceInput)(nil)).Elem(), &Instance{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceArrayInput)(nil)).Elem(), InstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceMapInput)(nil)).Elem(), InstanceMap{})
	pulumi.RegisterOutputType(InstanceOutput{})
	pulumi.RegisterOutputType(InstanceArrayOutput{})
	pulumi.RegisterOutputType(InstanceMapOutput{})
}
