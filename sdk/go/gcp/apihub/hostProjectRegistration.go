// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apihub

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Host project registration refers to the registration of a Google cloud project with API hub as a host project.
// This is the project where API hub is provisioned.
// It acts as the consumer project for the API hub instance provisioned.
// Multiple runtime projects can be attached to the host project and these attachments define the scope of API hub.
//
// ## Example Usage
//
// ### Apihub Host Project Registration Basic
//
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/apihub"
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/organizations"
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/projects"
//	"github.com/pulumi/pulumi-time/sdk/go/time"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			project, err := organizations.NewProject(ctx, "project", &organizations.ProjectArgs{
//				Name:           pulumi.String("apihub-proj"),
//				ProjectId:      pulumi.String("apihub-proj"),
//				OrgId:          pulumi.String("123456789"),
//				BillingAccount: pulumi.String("000000-0000000-0000000-000000"),
//				DeletionPolicy: pulumi.String("DELETE"),
//			})
//			if err != nil {
//				return err
//			}
//			wait60Seconds, err := time.NewSleep(ctx, "wait_60_seconds", &time.SleepArgs{
//				CreateDuration: "60s",
//			}, pulumi.DependsOn([]pulumi.Resource{
//				project,
//			}))
//			if err != nil {
//				return err
//			}
//			// Enable API hub API
//			apihubService, err := projects.NewService(ctx, "apihub_service", &projects.ServiceArgs{
//				Project: project.ProjectId,
//				Service: pulumi.String("apihub.googleapis.com"),
//			}, pulumi.DependsOn([]pulumi.Resource{
//				wait60Seconds,
//			}))
//			if err != nil {
//				return err
//			}
//			_, err = apihub.NewHostProjectRegistration(ctx, "apihub_host_project", &apihub.HostProjectRegistrationArgs{
//				Project:                   project.ProjectId,
//				Location:                  pulumi.String("asia-south1"),
//				HostProjectRegistrationId: project.ProjectId,
//				GcpProject: project.ProjectId.ApplyT(func(projectId string) (string, error) {
//					return fmt.Sprintf("projects/%v", projectId), nil
//				}).(pulumi.StringOutput),
//			}, pulumi.DependsOn([]pulumi.Resource{
//				apihubService,
//			}))
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// HostProjectRegistration can be imported using any of these accepted formats:
//
// * `projects/{{project}}/locations/{{location}}/hostProjectRegistrations/{{host_project_registration_id}}`
//
// * `{{project}}/{{location}}/{{host_project_registration_id}}`
//
// * `{{location}}/{{host_project_registration_id}}`
//
// When using the `pulumi import` command, HostProjectRegistration can be imported using one of the formats above. For example:
//
// ```sh
// $ pulumi import gcp:apihub/hostProjectRegistration:HostProjectRegistration default projects/{{project}}/locations/{{location}}/hostProjectRegistrations/{{host_project_registration_id}}
// ```
//
// ```sh
// $ pulumi import gcp:apihub/hostProjectRegistration:HostProjectRegistration default {{project}}/{{location}}/{{host_project_registration_id}}
// ```
//
// ```sh
// $ pulumi import gcp:apihub/hostProjectRegistration:HostProjectRegistration default {{location}}/{{host_project_registration_id}}
// ```
type HostProjectRegistration struct {
	pulumi.CustomResourceState

	// Output only. The time at which the host project registration was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Required. Immutable. Google cloud project name in the format: "projects/abc" or "projects/123".
	// As input, project name with either project id or number are accepted.
	// As output, this field will contain project number.
	GcpProject pulumi.StringOutput `pulumi:"gcpProject"`
	// Required. The ID to use for the Host Project Registration, which will become the
	// final component of the host project registration's resource name. The ID
	// must be the same as the Google cloud project specified in the
	// host_project_registration.gcp_project field.
	//
	// ***
	HostProjectRegistrationId pulumi.StringOutput `pulumi:"hostProjectRegistrationId"`
	// Part of `parent`. See documentation of `projectsId`.
	Location pulumi.StringOutput `pulumi:"location"`
	// Identifier. The name of the host project registration.
	// Format:
	// "projects/{project}/locations/{location}/hostProjectRegistrations/{host_project_registration}".
	Name pulumi.StringOutput `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
}

// NewHostProjectRegistration registers a new resource with the given unique name, arguments, and options.
func NewHostProjectRegistration(ctx *pulumi.Context,
	name string, args *HostProjectRegistrationArgs, opts ...pulumi.ResourceOption) (*HostProjectRegistration, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.GcpProject == nil {
		return nil, errors.New("invalid value for required argument 'GcpProject'")
	}
	if args.HostProjectRegistrationId == nil {
		return nil, errors.New("invalid value for required argument 'HostProjectRegistrationId'")
	}
	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource HostProjectRegistration
	err := ctx.RegisterResource("gcp:apihub/hostProjectRegistration:HostProjectRegistration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetHostProjectRegistration gets an existing HostProjectRegistration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetHostProjectRegistration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *HostProjectRegistrationState, opts ...pulumi.ResourceOption) (*HostProjectRegistration, error) {
	var resource HostProjectRegistration
	err := ctx.ReadResource("gcp:apihub/hostProjectRegistration:HostProjectRegistration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering HostProjectRegistration resources.
type hostProjectRegistrationState struct {
	// Output only. The time at which the host project registration was created.
	CreateTime *string `pulumi:"createTime"`
	// Required. Immutable. Google cloud project name in the format: "projects/abc" or "projects/123".
	// As input, project name with either project id or number are accepted.
	// As output, this field will contain project number.
	GcpProject *string `pulumi:"gcpProject"`
	// Required. The ID to use for the Host Project Registration, which will become the
	// final component of the host project registration's resource name. The ID
	// must be the same as the Google cloud project specified in the
	// host_project_registration.gcp_project field.
	//
	// ***
	HostProjectRegistrationId *string `pulumi:"hostProjectRegistrationId"`
	// Part of `parent`. See documentation of `projectsId`.
	Location *string `pulumi:"location"`
	// Identifier. The name of the host project registration.
	// Format:
	// "projects/{project}/locations/{location}/hostProjectRegistrations/{host_project_registration}".
	Name *string `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
}

type HostProjectRegistrationState struct {
	// Output only. The time at which the host project registration was created.
	CreateTime pulumi.StringPtrInput
	// Required. Immutable. Google cloud project name in the format: "projects/abc" or "projects/123".
	// As input, project name with either project id or number are accepted.
	// As output, this field will contain project number.
	GcpProject pulumi.StringPtrInput
	// Required. The ID to use for the Host Project Registration, which will become the
	// final component of the host project registration's resource name. The ID
	// must be the same as the Google cloud project specified in the
	// host_project_registration.gcp_project field.
	//
	// ***
	HostProjectRegistrationId pulumi.StringPtrInput
	// Part of `parent`. See documentation of `projectsId`.
	Location pulumi.StringPtrInput
	// Identifier. The name of the host project registration.
	// Format:
	// "projects/{project}/locations/{location}/hostProjectRegistrations/{host_project_registration}".
	Name pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
}

func (HostProjectRegistrationState) ElementType() reflect.Type {
	return reflect.TypeOf((*hostProjectRegistrationState)(nil)).Elem()
}

type hostProjectRegistrationArgs struct {
	// Required. Immutable. Google cloud project name in the format: "projects/abc" or "projects/123".
	// As input, project name with either project id or number are accepted.
	// As output, this field will contain project number.
	GcpProject string `pulumi:"gcpProject"`
	// Required. The ID to use for the Host Project Registration, which will become the
	// final component of the host project registration's resource name. The ID
	// must be the same as the Google cloud project specified in the
	// host_project_registration.gcp_project field.
	//
	// ***
	HostProjectRegistrationId string `pulumi:"hostProjectRegistrationId"`
	// Part of `parent`. See documentation of `projectsId`.
	Location string `pulumi:"location"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
}

// The set of arguments for constructing a HostProjectRegistration resource.
type HostProjectRegistrationArgs struct {
	// Required. Immutable. Google cloud project name in the format: "projects/abc" or "projects/123".
	// As input, project name with either project id or number are accepted.
	// As output, this field will contain project number.
	GcpProject pulumi.StringInput
	// Required. The ID to use for the Host Project Registration, which will become the
	// final component of the host project registration's resource name. The ID
	// must be the same as the Google cloud project specified in the
	// host_project_registration.gcp_project field.
	//
	// ***
	HostProjectRegistrationId pulumi.StringInput
	// Part of `parent`. See documentation of `projectsId`.
	Location pulumi.StringInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
}

func (HostProjectRegistrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*hostProjectRegistrationArgs)(nil)).Elem()
}

type HostProjectRegistrationInput interface {
	pulumi.Input

	ToHostProjectRegistrationOutput() HostProjectRegistrationOutput
	ToHostProjectRegistrationOutputWithContext(ctx context.Context) HostProjectRegistrationOutput
}

func (*HostProjectRegistration) ElementType() reflect.Type {
	return reflect.TypeOf((**HostProjectRegistration)(nil)).Elem()
}

func (i *HostProjectRegistration) ToHostProjectRegistrationOutput() HostProjectRegistrationOutput {
	return i.ToHostProjectRegistrationOutputWithContext(context.Background())
}

func (i *HostProjectRegistration) ToHostProjectRegistrationOutputWithContext(ctx context.Context) HostProjectRegistrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostProjectRegistrationOutput)
}

// HostProjectRegistrationArrayInput is an input type that accepts HostProjectRegistrationArray and HostProjectRegistrationArrayOutput values.
// You can construct a concrete instance of `HostProjectRegistrationArrayInput` via:
//
//	HostProjectRegistrationArray{ HostProjectRegistrationArgs{...} }
type HostProjectRegistrationArrayInput interface {
	pulumi.Input

	ToHostProjectRegistrationArrayOutput() HostProjectRegistrationArrayOutput
	ToHostProjectRegistrationArrayOutputWithContext(context.Context) HostProjectRegistrationArrayOutput
}

type HostProjectRegistrationArray []HostProjectRegistrationInput

func (HostProjectRegistrationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*HostProjectRegistration)(nil)).Elem()
}

func (i HostProjectRegistrationArray) ToHostProjectRegistrationArrayOutput() HostProjectRegistrationArrayOutput {
	return i.ToHostProjectRegistrationArrayOutputWithContext(context.Background())
}

func (i HostProjectRegistrationArray) ToHostProjectRegistrationArrayOutputWithContext(ctx context.Context) HostProjectRegistrationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostProjectRegistrationArrayOutput)
}

// HostProjectRegistrationMapInput is an input type that accepts HostProjectRegistrationMap and HostProjectRegistrationMapOutput values.
// You can construct a concrete instance of `HostProjectRegistrationMapInput` via:
//
//	HostProjectRegistrationMap{ "key": HostProjectRegistrationArgs{...} }
type HostProjectRegistrationMapInput interface {
	pulumi.Input

	ToHostProjectRegistrationMapOutput() HostProjectRegistrationMapOutput
	ToHostProjectRegistrationMapOutputWithContext(context.Context) HostProjectRegistrationMapOutput
}

type HostProjectRegistrationMap map[string]HostProjectRegistrationInput

func (HostProjectRegistrationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*HostProjectRegistration)(nil)).Elem()
}

func (i HostProjectRegistrationMap) ToHostProjectRegistrationMapOutput() HostProjectRegistrationMapOutput {
	return i.ToHostProjectRegistrationMapOutputWithContext(context.Background())
}

func (i HostProjectRegistrationMap) ToHostProjectRegistrationMapOutputWithContext(ctx context.Context) HostProjectRegistrationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostProjectRegistrationMapOutput)
}

type HostProjectRegistrationOutput struct{ *pulumi.OutputState }

func (HostProjectRegistrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HostProjectRegistration)(nil)).Elem()
}

func (o HostProjectRegistrationOutput) ToHostProjectRegistrationOutput() HostProjectRegistrationOutput {
	return o
}

func (o HostProjectRegistrationOutput) ToHostProjectRegistrationOutputWithContext(ctx context.Context) HostProjectRegistrationOutput {
	return o
}

// Output only. The time at which the host project registration was created.
func (o HostProjectRegistrationOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *HostProjectRegistration) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Required. Immutable. Google cloud project name in the format: "projects/abc" or "projects/123".
// As input, project name with either project id or number are accepted.
// As output, this field will contain project number.
func (o HostProjectRegistrationOutput) GcpProject() pulumi.StringOutput {
	return o.ApplyT(func(v *HostProjectRegistration) pulumi.StringOutput { return v.GcpProject }).(pulumi.StringOutput)
}

// Required. The ID to use for the Host Project Registration, which will become the
// final component of the host project registration's resource name. The ID
// must be the same as the Google cloud project specified in the
// host_project_registration.gcp_project field.
//
// ***
func (o HostProjectRegistrationOutput) HostProjectRegistrationId() pulumi.StringOutput {
	return o.ApplyT(func(v *HostProjectRegistration) pulumi.StringOutput { return v.HostProjectRegistrationId }).(pulumi.StringOutput)
}

// Part of `parent`. See documentation of `projectsId`.
func (o HostProjectRegistrationOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *HostProjectRegistration) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Identifier. The name of the host project registration.
// Format:
// "projects/{project}/locations/{location}/hostProjectRegistrations/{host_project_registration}".
func (o HostProjectRegistrationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *HostProjectRegistration) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The ID of the project in which the resource belongs.
// If it is not provided, the provider project is used.
func (o HostProjectRegistrationOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *HostProjectRegistration) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

type HostProjectRegistrationArrayOutput struct{ *pulumi.OutputState }

func (HostProjectRegistrationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*HostProjectRegistration)(nil)).Elem()
}

func (o HostProjectRegistrationArrayOutput) ToHostProjectRegistrationArrayOutput() HostProjectRegistrationArrayOutput {
	return o
}

func (o HostProjectRegistrationArrayOutput) ToHostProjectRegistrationArrayOutputWithContext(ctx context.Context) HostProjectRegistrationArrayOutput {
	return o
}

func (o HostProjectRegistrationArrayOutput) Index(i pulumi.IntInput) HostProjectRegistrationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *HostProjectRegistration {
		return vs[0].([]*HostProjectRegistration)[vs[1].(int)]
	}).(HostProjectRegistrationOutput)
}

type HostProjectRegistrationMapOutput struct{ *pulumi.OutputState }

func (HostProjectRegistrationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*HostProjectRegistration)(nil)).Elem()
}

func (o HostProjectRegistrationMapOutput) ToHostProjectRegistrationMapOutput() HostProjectRegistrationMapOutput {
	return o
}

func (o HostProjectRegistrationMapOutput) ToHostProjectRegistrationMapOutputWithContext(ctx context.Context) HostProjectRegistrationMapOutput {
	return o
}

func (o HostProjectRegistrationMapOutput) MapIndex(k pulumi.StringInput) HostProjectRegistrationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *HostProjectRegistration {
		return vs[0].(map[string]*HostProjectRegistration)[vs[1].(string)]
	}).(HostProjectRegistrationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*HostProjectRegistrationInput)(nil)).Elem(), &HostProjectRegistration{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostProjectRegistrationArrayInput)(nil)).Elem(), HostProjectRegistrationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostProjectRegistrationMapInput)(nil)).Elem(), HostProjectRegistrationMap{})
	pulumi.RegisterOutputType(HostProjectRegistrationOutput{})
	pulumi.RegisterOutputType(HostProjectRegistrationArrayOutput{})
	pulumi.RegisterOutputType(HostProjectRegistrationMapOutput{})
}
