// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apihub

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "gcp:apihub/apiHubInstance:ApiHubInstance":
		r = &ApiHubInstance{}
	case "gcp:apihub/curation:Curation":
		r = &Curation{}
	case "gcp:apihub/hostProjectRegistration:HostProjectRegistration":
		r = &HostProjectRegistration{}
	case "gcp:apihub/plugin:Plugin":
		r = &Plugin{}
	case "gcp:apihub/pluginInstance:PluginInstance":
		r = &PluginInstance{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

func init() {
	version, err := internal.PkgVersion()
	if err != nil {
		version = semver.Version{Major: 1}
	}
	pulumi.RegisterResourceModule(
		"gcp",
		"apihub/apiHubInstance",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"gcp",
		"apihub/curation",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"gcp",
		"apihub/hostProjectRegistration",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"gcp",
		"apihub/plugin",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"gcp",
		"apihub/pluginInstance",
		&module{version},
	)
}
