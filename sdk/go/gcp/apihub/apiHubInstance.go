// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apihub

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// An ApiHubInstance represents the instance resources of the API Hub.
// Currently, only one ApiHub instance is allowed for each project.
// Currently, updation/deletion of ApiHub instance is not allowed.
//
// ## Example Usage
//
// ### Apihub Api Hub Instance Basic
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/apihub"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := apihub.NewApiHubInstance(ctx, "apihub-instance-without-search", &apihub.ApiHubInstanceArgs{
//				Location: pulumi.String("us-central1"),
//				Config: &apihub.ApiHubInstanceConfigArgs{
//					DisableSearch: pulumi.Bool(true),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Apihub Api Hub Instance Full
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/apihub"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := apihub.NewApiHubInstance(ctx, "apihub-instance-search", &apihub.ApiHubInstanceArgs{
//				Project:          pulumi.String("my-project"),
//				ApiHubInstanceId: pulumi.String("test-instance-full"),
//				Description:      pulumi.String("Test API hub instance"),
//				Location:         pulumi.String("us-central1"),
//				Config: &apihub.ApiHubInstanceConfigArgs{
//					EncryptionType: pulumi.String("CMEK"),
//					CmekKeyName:    pulumi.String("projects/my-project/locations/us-central1/keyRings/apihub/cryptoKeys/apihub-key"),
//					DisableSearch:  pulumi.Bool(false),
//					VertexLocation: pulumi.String("us"),
//				},
//				Labels: pulumi.StringMap{
//					"environment": pulumi.String("dev"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ApiHubInstance can be imported using any of these accepted formats:
//
// * `projects/{{project}}/locations/{{location}}/apiHubInstances/{{api_hub_instance_id}}`
//
// * `{{project}}/{{location}}/{{api_hub_instance_id}}`
//
// * `{{location}}/{{api_hub_instance_id}}`
//
// When using the `pulumi import` command, ApiHubInstance can be imported using one of the formats above. For example:
//
// ```sh
// $ pulumi import gcp:apihub/apiHubInstance:ApiHubInstance default projects/{{project}}/locations/{{location}}/apiHubInstances/{{api_hub_instance_id}}
// ```
//
// ```sh
// $ pulumi import gcp:apihub/apiHubInstance:ApiHubInstance default {{project}}/{{location}}/{{api_hub_instance_id}}
// ```
//
// ```sh
// $ pulumi import gcp:apihub/apiHubInstance:ApiHubInstance default {{location}}/{{api_hub_instance_id}}
// ```
type ApiHubInstance struct {
	pulumi.CustomResourceState

	// Optional. Identifier to assign to the Api Hub instance. Must be unique within
	// scope of the parent resource. If the field is not provided,
	// system generated id will be used.
	// This value should be 4-40 characters, and valid characters
	// are `/a-z[0-9]-_/`.
	ApiHubInstanceId pulumi.StringPtrOutput `pulumi:"apiHubInstanceId"`
	// Available configurations to provision an ApiHub Instance.
	// Structure is documented below.
	Config ApiHubInstanceConfigOutput `pulumi:"config"`
	// Output only. Creation timestamp.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Optional. Description of the ApiHub instance.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
	EffectiveLabels pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	// Optional. Instance labels to represent user-provided metadata.
	// Refer to cloud documentation on labels for more details.
	// https://cloud.google.com/compute/docs/labeling-resources
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
	Location pulumi.StringOutput `pulumi:"location"`
	// Identifier. Format:
	// `projects/{project}/locations/{location}/apiHubInstances/{apiHubInstance}`.
	Name pulumi.StringOutput `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
	// The combination of labels configured directly on the resource
	// and default labels configured on the provider.
	PulumiLabels pulumi.StringMapOutput `pulumi:"pulumiLabels"`
	// Output only. The current state of the ApiHub instance.
	// Possible values:
	// STATE_UNSPECIFIED
	// INACTIVE
	// CREATING
	// ACTIVE
	// UPDATING
	// DELETING
	// FAILED
	State pulumi.StringOutput `pulumi:"state"`
	// Output only. Extra information about ApiHub instance state. Currently the message
	// would be populated when state is `FAILED`.
	StateMessage pulumi.StringOutput `pulumi:"stateMessage"`
	// Output only. Last update timestamp.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewApiHubInstance registers a new resource with the given unique name, arguments, and options.
func NewApiHubInstance(ctx *pulumi.Context,
	name string, args *ApiHubInstanceArgs, opts ...pulumi.ResourceOption) (*ApiHubInstance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Config == nil {
		return nil, errors.New("invalid value for required argument 'Config'")
	}
	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"effectiveLabels",
		"pulumiLabels",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ApiHubInstance
	err := ctx.RegisterResource("gcp:apihub/apiHubInstance:ApiHubInstance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApiHubInstance gets an existing ApiHubInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApiHubInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApiHubInstanceState, opts ...pulumi.ResourceOption) (*ApiHubInstance, error) {
	var resource ApiHubInstance
	err := ctx.ReadResource("gcp:apihub/apiHubInstance:ApiHubInstance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ApiHubInstance resources.
type apiHubInstanceState struct {
	// Optional. Identifier to assign to the Api Hub instance. Must be unique within
	// scope of the parent resource. If the field is not provided,
	// system generated id will be used.
	// This value should be 4-40 characters, and valid characters
	// are `/a-z[0-9]-_/`.
	ApiHubInstanceId *string `pulumi:"apiHubInstanceId"`
	// Available configurations to provision an ApiHub Instance.
	// Structure is documented below.
	Config *ApiHubInstanceConfig `pulumi:"config"`
	// Output only. Creation timestamp.
	CreateTime *string `pulumi:"createTime"`
	// Optional. Description of the ApiHub instance.
	Description *string `pulumi:"description"`
	// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
	EffectiveLabels map[string]string `pulumi:"effectiveLabels"`
	// Optional. Instance labels to represent user-provided metadata.
	// Refer to cloud documentation on labels for more details.
	// https://cloud.google.com/compute/docs/labeling-resources
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
	Location *string `pulumi:"location"`
	// Identifier. Format:
	// `projects/{project}/locations/{location}/apiHubInstances/{apiHubInstance}`.
	Name *string `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// The combination of labels configured directly on the resource
	// and default labels configured on the provider.
	PulumiLabels map[string]string `pulumi:"pulumiLabels"`
	// Output only. The current state of the ApiHub instance.
	// Possible values:
	// STATE_UNSPECIFIED
	// INACTIVE
	// CREATING
	// ACTIVE
	// UPDATING
	// DELETING
	// FAILED
	State *string `pulumi:"state"`
	// Output only. Extra information about ApiHub instance state. Currently the message
	// would be populated when state is `FAILED`.
	StateMessage *string `pulumi:"stateMessage"`
	// Output only. Last update timestamp.
	UpdateTime *string `pulumi:"updateTime"`
}

type ApiHubInstanceState struct {
	// Optional. Identifier to assign to the Api Hub instance. Must be unique within
	// scope of the parent resource. If the field is not provided,
	// system generated id will be used.
	// This value should be 4-40 characters, and valid characters
	// are `/a-z[0-9]-_/`.
	ApiHubInstanceId pulumi.StringPtrInput
	// Available configurations to provision an ApiHub Instance.
	// Structure is documented below.
	Config ApiHubInstanceConfigPtrInput
	// Output only. Creation timestamp.
	CreateTime pulumi.StringPtrInput
	// Optional. Description of the ApiHub instance.
	Description pulumi.StringPtrInput
	// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
	EffectiveLabels pulumi.StringMapInput
	// Optional. Instance labels to represent user-provided metadata.
	// Refer to cloud documentation on labels for more details.
	// https://cloud.google.com/compute/docs/labeling-resources
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
	Location pulumi.StringPtrInput
	// Identifier. Format:
	// `projects/{project}/locations/{location}/apiHubInstances/{apiHubInstance}`.
	Name pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// The combination of labels configured directly on the resource
	// and default labels configured on the provider.
	PulumiLabels pulumi.StringMapInput
	// Output only. The current state of the ApiHub instance.
	// Possible values:
	// STATE_UNSPECIFIED
	// INACTIVE
	// CREATING
	// ACTIVE
	// UPDATING
	// DELETING
	// FAILED
	State pulumi.StringPtrInput
	// Output only. Extra information about ApiHub instance state. Currently the message
	// would be populated when state is `FAILED`.
	StateMessage pulumi.StringPtrInput
	// Output only. Last update timestamp.
	UpdateTime pulumi.StringPtrInput
}

func (ApiHubInstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*apiHubInstanceState)(nil)).Elem()
}

type apiHubInstanceArgs struct {
	// Optional. Identifier to assign to the Api Hub instance. Must be unique within
	// scope of the parent resource. If the field is not provided,
	// system generated id will be used.
	// This value should be 4-40 characters, and valid characters
	// are `/a-z[0-9]-_/`.
	ApiHubInstanceId *string `pulumi:"apiHubInstanceId"`
	// Available configurations to provision an ApiHub Instance.
	// Structure is documented below.
	Config ApiHubInstanceConfig `pulumi:"config"`
	// Optional. Description of the ApiHub instance.
	Description *string `pulumi:"description"`
	// Optional. Instance labels to represent user-provided metadata.
	// Refer to cloud documentation on labels for more details.
	// https://cloud.google.com/compute/docs/labeling-resources
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
	Location string `pulumi:"location"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
}

// The set of arguments for constructing a ApiHubInstance resource.
type ApiHubInstanceArgs struct {
	// Optional. Identifier to assign to the Api Hub instance. Must be unique within
	// scope of the parent resource. If the field is not provided,
	// system generated id will be used.
	// This value should be 4-40 characters, and valid characters
	// are `/a-z[0-9]-_/`.
	ApiHubInstanceId pulumi.StringPtrInput
	// Available configurations to provision an ApiHub Instance.
	// Structure is documented below.
	Config ApiHubInstanceConfigInput
	// Optional. Description of the ApiHub instance.
	Description pulumi.StringPtrInput
	// Optional. Instance labels to represent user-provided metadata.
	// Refer to cloud documentation on labels for more details.
	// https://cloud.google.com/compute/docs/labeling-resources
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
	Location pulumi.StringInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
}

func (ApiHubInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*apiHubInstanceArgs)(nil)).Elem()
}

type ApiHubInstanceInput interface {
	pulumi.Input

	ToApiHubInstanceOutput() ApiHubInstanceOutput
	ToApiHubInstanceOutputWithContext(ctx context.Context) ApiHubInstanceOutput
}

func (*ApiHubInstance) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiHubInstance)(nil)).Elem()
}

func (i *ApiHubInstance) ToApiHubInstanceOutput() ApiHubInstanceOutput {
	return i.ToApiHubInstanceOutputWithContext(context.Background())
}

func (i *ApiHubInstance) ToApiHubInstanceOutputWithContext(ctx context.Context) ApiHubInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiHubInstanceOutput)
}

// ApiHubInstanceArrayInput is an input type that accepts ApiHubInstanceArray and ApiHubInstanceArrayOutput values.
// You can construct a concrete instance of `ApiHubInstanceArrayInput` via:
//
//	ApiHubInstanceArray{ ApiHubInstanceArgs{...} }
type ApiHubInstanceArrayInput interface {
	pulumi.Input

	ToApiHubInstanceArrayOutput() ApiHubInstanceArrayOutput
	ToApiHubInstanceArrayOutputWithContext(context.Context) ApiHubInstanceArrayOutput
}

type ApiHubInstanceArray []ApiHubInstanceInput

func (ApiHubInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApiHubInstance)(nil)).Elem()
}

func (i ApiHubInstanceArray) ToApiHubInstanceArrayOutput() ApiHubInstanceArrayOutput {
	return i.ToApiHubInstanceArrayOutputWithContext(context.Background())
}

func (i ApiHubInstanceArray) ToApiHubInstanceArrayOutputWithContext(ctx context.Context) ApiHubInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiHubInstanceArrayOutput)
}

// ApiHubInstanceMapInput is an input type that accepts ApiHubInstanceMap and ApiHubInstanceMapOutput values.
// You can construct a concrete instance of `ApiHubInstanceMapInput` via:
//
//	ApiHubInstanceMap{ "key": ApiHubInstanceArgs{...} }
type ApiHubInstanceMapInput interface {
	pulumi.Input

	ToApiHubInstanceMapOutput() ApiHubInstanceMapOutput
	ToApiHubInstanceMapOutputWithContext(context.Context) ApiHubInstanceMapOutput
}

type ApiHubInstanceMap map[string]ApiHubInstanceInput

func (ApiHubInstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApiHubInstance)(nil)).Elem()
}

func (i ApiHubInstanceMap) ToApiHubInstanceMapOutput() ApiHubInstanceMapOutput {
	return i.ToApiHubInstanceMapOutputWithContext(context.Background())
}

func (i ApiHubInstanceMap) ToApiHubInstanceMapOutputWithContext(ctx context.Context) ApiHubInstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiHubInstanceMapOutput)
}

type ApiHubInstanceOutput struct{ *pulumi.OutputState }

func (ApiHubInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiHubInstance)(nil)).Elem()
}

func (o ApiHubInstanceOutput) ToApiHubInstanceOutput() ApiHubInstanceOutput {
	return o
}

func (o ApiHubInstanceOutput) ToApiHubInstanceOutputWithContext(ctx context.Context) ApiHubInstanceOutput {
	return o
}

// Optional. Identifier to assign to the Api Hub instance. Must be unique within
// scope of the parent resource. If the field is not provided,
// system generated id will be used.
// This value should be 4-40 characters, and valid characters
// are `/a-z[0-9]-_/`.
func (o ApiHubInstanceOutput) ApiHubInstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiHubInstance) pulumi.StringPtrOutput { return v.ApiHubInstanceId }).(pulumi.StringPtrOutput)
}

// Available configurations to provision an ApiHub Instance.
// Structure is documented below.
func (o ApiHubInstanceOutput) Config() ApiHubInstanceConfigOutput {
	return o.ApplyT(func(v *ApiHubInstance) ApiHubInstanceConfigOutput { return v.Config }).(ApiHubInstanceConfigOutput)
}

// Output only. Creation timestamp.
func (o ApiHubInstanceOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiHubInstance) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Optional. Description of the ApiHub instance.
func (o ApiHubInstanceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiHubInstance) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
func (o ApiHubInstanceOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ApiHubInstance) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// Optional. Instance labels to represent user-provided metadata.
// Refer to cloud documentation on labels for more details.
// https://cloud.google.com/compute/docs/labeling-resources
// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
func (o ApiHubInstanceOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ApiHubInstance) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
func (o ApiHubInstanceOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiHubInstance) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Identifier. Format:
// `projects/{project}/locations/{location}/apiHubInstances/{apiHubInstance}`.
func (o ApiHubInstanceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiHubInstance) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The ID of the project in which the resource belongs.
// If it is not provided, the provider project is used.
func (o ApiHubInstanceOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiHubInstance) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The combination of labels configured directly on the resource
// and default labels configured on the provider.
func (o ApiHubInstanceOutput) PulumiLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ApiHubInstance) pulumi.StringMapOutput { return v.PulumiLabels }).(pulumi.StringMapOutput)
}

// Output only. The current state of the ApiHub instance.
// Possible values:
// STATE_UNSPECIFIED
// INACTIVE
// CREATING
// ACTIVE
// UPDATING
// DELETING
// FAILED
func (o ApiHubInstanceOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiHubInstance) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// Output only. Extra information about ApiHub instance state. Currently the message
// would be populated when state is `FAILED`.
func (o ApiHubInstanceOutput) StateMessage() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiHubInstance) pulumi.StringOutput { return v.StateMessage }).(pulumi.StringOutput)
}

// Output only. Last update timestamp.
func (o ApiHubInstanceOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiHubInstance) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

type ApiHubInstanceArrayOutput struct{ *pulumi.OutputState }

func (ApiHubInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApiHubInstance)(nil)).Elem()
}

func (o ApiHubInstanceArrayOutput) ToApiHubInstanceArrayOutput() ApiHubInstanceArrayOutput {
	return o
}

func (o ApiHubInstanceArrayOutput) ToApiHubInstanceArrayOutputWithContext(ctx context.Context) ApiHubInstanceArrayOutput {
	return o
}

func (o ApiHubInstanceArrayOutput) Index(i pulumi.IntInput) ApiHubInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ApiHubInstance {
		return vs[0].([]*ApiHubInstance)[vs[1].(int)]
	}).(ApiHubInstanceOutput)
}

type ApiHubInstanceMapOutput struct{ *pulumi.OutputState }

func (ApiHubInstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApiHubInstance)(nil)).Elem()
}

func (o ApiHubInstanceMapOutput) ToApiHubInstanceMapOutput() ApiHubInstanceMapOutput {
	return o
}

func (o ApiHubInstanceMapOutput) ToApiHubInstanceMapOutputWithContext(ctx context.Context) ApiHubInstanceMapOutput {
	return o
}

func (o ApiHubInstanceMapOutput) MapIndex(k pulumi.StringInput) ApiHubInstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ApiHubInstance {
		return vs[0].(map[string]*ApiHubInstance)[vs[1].(string)]
	}).(ApiHubInstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApiHubInstanceInput)(nil)).Elem(), &ApiHubInstance{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiHubInstanceArrayInput)(nil)).Elem(), ApiHubInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiHubInstanceMapInput)(nil)).Elem(), ApiHubInstanceMap{})
	pulumi.RegisterOutputType(ApiHubInstanceOutput{})
	pulumi.RegisterOutputType(ApiHubInstanceArrayOutput{})
	pulumi.RegisterOutputType(ApiHubInstanceMapOutput{})
}
