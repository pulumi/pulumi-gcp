// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apihub

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type ApiHubInstanceConfig struct {
	// Optional. The Customer Managed Encryption Key (CMEK) used for data encryption.
	// The CMEK name should follow the format of
	// `projects/([^/]+)/locations/([^/]+)/keyRings/([^/]+)/cryptoKeys/([^/]+)`,
	// where the location must match the instance location.
	// If the CMEK is not provided, a GMEK will be created for the instance.
	CmekKeyName *string `pulumi:"cmekKeyName"`
	// Optional. If true, the search will be disabled for the instance. The default value
	// is false.
	DisableSearch *bool `pulumi:"disableSearch"`
	// Optional. Encryption type for the region. If the encryption type is CMEK, the
	// cmekKeyName must be provided. If no encryption type is provided,
	// GMEK will be used.
	// Possible values:
	// ENCRYPTION_TYPE_UNSPECIFIED
	// GMEK
	// CMEK
	EncryptionType *string `pulumi:"encryptionType"`
	// Optional. The name of the Vertex AI location where the data store is stored.
	//
	// ***
	VertexLocation *string `pulumi:"vertexLocation"`
}

// ApiHubInstanceConfigInput is an input type that accepts ApiHubInstanceConfigArgs and ApiHubInstanceConfigOutput values.
// You can construct a concrete instance of `ApiHubInstanceConfigInput` via:
//
//	ApiHubInstanceConfigArgs{...}
type ApiHubInstanceConfigInput interface {
	pulumi.Input

	ToApiHubInstanceConfigOutput() ApiHubInstanceConfigOutput
	ToApiHubInstanceConfigOutputWithContext(context.Context) ApiHubInstanceConfigOutput
}

type ApiHubInstanceConfigArgs struct {
	// Optional. The Customer Managed Encryption Key (CMEK) used for data encryption.
	// The CMEK name should follow the format of
	// `projects/([^/]+)/locations/([^/]+)/keyRings/([^/]+)/cryptoKeys/([^/]+)`,
	// where the location must match the instance location.
	// If the CMEK is not provided, a GMEK will be created for the instance.
	CmekKeyName pulumi.StringPtrInput `pulumi:"cmekKeyName"`
	// Optional. If true, the search will be disabled for the instance. The default value
	// is false.
	DisableSearch pulumi.BoolPtrInput `pulumi:"disableSearch"`
	// Optional. Encryption type for the region. If the encryption type is CMEK, the
	// cmekKeyName must be provided. If no encryption type is provided,
	// GMEK will be used.
	// Possible values:
	// ENCRYPTION_TYPE_UNSPECIFIED
	// GMEK
	// CMEK
	EncryptionType pulumi.StringPtrInput `pulumi:"encryptionType"`
	// Optional. The name of the Vertex AI location where the data store is stored.
	//
	// ***
	VertexLocation pulumi.StringPtrInput `pulumi:"vertexLocation"`
}

func (ApiHubInstanceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiHubInstanceConfig)(nil)).Elem()
}

func (i ApiHubInstanceConfigArgs) ToApiHubInstanceConfigOutput() ApiHubInstanceConfigOutput {
	return i.ToApiHubInstanceConfigOutputWithContext(context.Background())
}

func (i ApiHubInstanceConfigArgs) ToApiHubInstanceConfigOutputWithContext(ctx context.Context) ApiHubInstanceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiHubInstanceConfigOutput)
}

func (i ApiHubInstanceConfigArgs) ToApiHubInstanceConfigPtrOutput() ApiHubInstanceConfigPtrOutput {
	return i.ToApiHubInstanceConfigPtrOutputWithContext(context.Background())
}

func (i ApiHubInstanceConfigArgs) ToApiHubInstanceConfigPtrOutputWithContext(ctx context.Context) ApiHubInstanceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiHubInstanceConfigOutput).ToApiHubInstanceConfigPtrOutputWithContext(ctx)
}

// ApiHubInstanceConfigPtrInput is an input type that accepts ApiHubInstanceConfigArgs, ApiHubInstanceConfigPtr and ApiHubInstanceConfigPtrOutput values.
// You can construct a concrete instance of `ApiHubInstanceConfigPtrInput` via:
//
//	        ApiHubInstanceConfigArgs{...}
//
//	or:
//
//	        nil
type ApiHubInstanceConfigPtrInput interface {
	pulumi.Input

	ToApiHubInstanceConfigPtrOutput() ApiHubInstanceConfigPtrOutput
	ToApiHubInstanceConfigPtrOutputWithContext(context.Context) ApiHubInstanceConfigPtrOutput
}

type apiHubInstanceConfigPtrType ApiHubInstanceConfigArgs

func ApiHubInstanceConfigPtr(v *ApiHubInstanceConfigArgs) ApiHubInstanceConfigPtrInput {
	return (*apiHubInstanceConfigPtrType)(v)
}

func (*apiHubInstanceConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiHubInstanceConfig)(nil)).Elem()
}

func (i *apiHubInstanceConfigPtrType) ToApiHubInstanceConfigPtrOutput() ApiHubInstanceConfigPtrOutput {
	return i.ToApiHubInstanceConfigPtrOutputWithContext(context.Background())
}

func (i *apiHubInstanceConfigPtrType) ToApiHubInstanceConfigPtrOutputWithContext(ctx context.Context) ApiHubInstanceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiHubInstanceConfigPtrOutput)
}

type ApiHubInstanceConfigOutput struct{ *pulumi.OutputState }

func (ApiHubInstanceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiHubInstanceConfig)(nil)).Elem()
}

func (o ApiHubInstanceConfigOutput) ToApiHubInstanceConfigOutput() ApiHubInstanceConfigOutput {
	return o
}

func (o ApiHubInstanceConfigOutput) ToApiHubInstanceConfigOutputWithContext(ctx context.Context) ApiHubInstanceConfigOutput {
	return o
}

func (o ApiHubInstanceConfigOutput) ToApiHubInstanceConfigPtrOutput() ApiHubInstanceConfigPtrOutput {
	return o.ToApiHubInstanceConfigPtrOutputWithContext(context.Background())
}

func (o ApiHubInstanceConfigOutput) ToApiHubInstanceConfigPtrOutputWithContext(ctx context.Context) ApiHubInstanceConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApiHubInstanceConfig) *ApiHubInstanceConfig {
		return &v
	}).(ApiHubInstanceConfigPtrOutput)
}

// Optional. The Customer Managed Encryption Key (CMEK) used for data encryption.
// The CMEK name should follow the format of
// `projects/([^/]+)/locations/([^/]+)/keyRings/([^/]+)/cryptoKeys/([^/]+)`,
// where the location must match the instance location.
// If the CMEK is not provided, a GMEK will be created for the instance.
func (o ApiHubInstanceConfigOutput) CmekKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiHubInstanceConfig) *string { return v.CmekKeyName }).(pulumi.StringPtrOutput)
}

// Optional. If true, the search will be disabled for the instance. The default value
// is false.
func (o ApiHubInstanceConfigOutput) DisableSearch() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApiHubInstanceConfig) *bool { return v.DisableSearch }).(pulumi.BoolPtrOutput)
}

// Optional. Encryption type for the region. If the encryption type is CMEK, the
// cmekKeyName must be provided. If no encryption type is provided,
// GMEK will be used.
// Possible values:
// ENCRYPTION_TYPE_UNSPECIFIED
// GMEK
// CMEK
func (o ApiHubInstanceConfigOutput) EncryptionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiHubInstanceConfig) *string { return v.EncryptionType }).(pulumi.StringPtrOutput)
}

// Optional. The name of the Vertex AI location where the data store is stored.
//
// ***
func (o ApiHubInstanceConfigOutput) VertexLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiHubInstanceConfig) *string { return v.VertexLocation }).(pulumi.StringPtrOutput)
}

type ApiHubInstanceConfigPtrOutput struct{ *pulumi.OutputState }

func (ApiHubInstanceConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiHubInstanceConfig)(nil)).Elem()
}

func (o ApiHubInstanceConfigPtrOutput) ToApiHubInstanceConfigPtrOutput() ApiHubInstanceConfigPtrOutput {
	return o
}

func (o ApiHubInstanceConfigPtrOutput) ToApiHubInstanceConfigPtrOutputWithContext(ctx context.Context) ApiHubInstanceConfigPtrOutput {
	return o
}

func (o ApiHubInstanceConfigPtrOutput) Elem() ApiHubInstanceConfigOutput {
	return o.ApplyT(func(v *ApiHubInstanceConfig) ApiHubInstanceConfig {
		if v != nil {
			return *v
		}
		var ret ApiHubInstanceConfig
		return ret
	}).(ApiHubInstanceConfigOutput)
}

// Optional. The Customer Managed Encryption Key (CMEK) used for data encryption.
// The CMEK name should follow the format of
// `projects/([^/]+)/locations/([^/]+)/keyRings/([^/]+)/cryptoKeys/([^/]+)`,
// where the location must match the instance location.
// If the CMEK is not provided, a GMEK will be created for the instance.
func (o ApiHubInstanceConfigPtrOutput) CmekKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiHubInstanceConfig) *string {
		if v == nil {
			return nil
		}
		return v.CmekKeyName
	}).(pulumi.StringPtrOutput)
}

// Optional. If true, the search will be disabled for the instance. The default value
// is false.
func (o ApiHubInstanceConfigPtrOutput) DisableSearch() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApiHubInstanceConfig) *bool {
		if v == nil {
			return nil
		}
		return v.DisableSearch
	}).(pulumi.BoolPtrOutput)
}

// Optional. Encryption type for the region. If the encryption type is CMEK, the
// cmekKeyName must be provided. If no encryption type is provided,
// GMEK will be used.
// Possible values:
// ENCRYPTION_TYPE_UNSPECIFIED
// GMEK
// CMEK
func (o ApiHubInstanceConfigPtrOutput) EncryptionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiHubInstanceConfig) *string {
		if v == nil {
			return nil
		}
		return v.EncryptionType
	}).(pulumi.StringPtrOutput)
}

// Optional. The name of the Vertex AI location where the data store is stored.
//
// ***
func (o ApiHubInstanceConfigPtrOutput) VertexLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiHubInstanceConfig) *string {
		if v == nil {
			return nil
		}
		return v.VertexLocation
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApiHubInstanceConfigInput)(nil)).Elem(), ApiHubInstanceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiHubInstanceConfigPtrInput)(nil)).Elem(), ApiHubInstanceConfigArgs{})
	pulumi.RegisterOutputType(ApiHubInstanceConfigOutput{})
	pulumi.RegisterOutputType(ApiHubInstanceConfigPtrOutput{})
}
