// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apihub

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type ApiHubInstanceConfig struct {
	// Optional. The Customer Managed Encryption Key (CMEK) used for data encryption.
	// The CMEK name should follow the format of
	// `projects/([^/]+)/locations/([^/]+)/keyRings/([^/]+)/cryptoKeys/([^/]+)`,
	// where the location must match the instance location.
	// If the CMEK is not provided, a GMEK will be created for the instance.
	CmekKeyName *string `pulumi:"cmekKeyName"`
	// Optional. If true, the search will be disabled for the instance. The default value
	// is false.
	DisableSearch *bool `pulumi:"disableSearch"`
	// Optional. Encryption type for the region. If the encryption type is CMEK, the
	// cmekKeyName must be provided. If no encryption type is provided,
	// GMEK will be used.
	// Possible values:
	// ENCRYPTION_TYPE_UNSPECIFIED
	// GMEK
	// CMEK
	EncryptionType *string `pulumi:"encryptionType"`
	// Optional. The name of the Vertex AI location where the data store is stored.
	//
	// ***
	VertexLocation *string `pulumi:"vertexLocation"`
}

// ApiHubInstanceConfigInput is an input type that accepts ApiHubInstanceConfigArgs and ApiHubInstanceConfigOutput values.
// You can construct a concrete instance of `ApiHubInstanceConfigInput` via:
//
//	ApiHubInstanceConfigArgs{...}
type ApiHubInstanceConfigInput interface {
	pulumi.Input

	ToApiHubInstanceConfigOutput() ApiHubInstanceConfigOutput
	ToApiHubInstanceConfigOutputWithContext(context.Context) ApiHubInstanceConfigOutput
}

type ApiHubInstanceConfigArgs struct {
	// Optional. The Customer Managed Encryption Key (CMEK) used for data encryption.
	// The CMEK name should follow the format of
	// `projects/([^/]+)/locations/([^/]+)/keyRings/([^/]+)/cryptoKeys/([^/]+)`,
	// where the location must match the instance location.
	// If the CMEK is not provided, a GMEK will be created for the instance.
	CmekKeyName pulumi.StringPtrInput `pulumi:"cmekKeyName"`
	// Optional. If true, the search will be disabled for the instance. The default value
	// is false.
	DisableSearch pulumi.BoolPtrInput `pulumi:"disableSearch"`
	// Optional. Encryption type for the region. If the encryption type is CMEK, the
	// cmekKeyName must be provided. If no encryption type is provided,
	// GMEK will be used.
	// Possible values:
	// ENCRYPTION_TYPE_UNSPECIFIED
	// GMEK
	// CMEK
	EncryptionType pulumi.StringPtrInput `pulumi:"encryptionType"`
	// Optional. The name of the Vertex AI location where the data store is stored.
	//
	// ***
	VertexLocation pulumi.StringPtrInput `pulumi:"vertexLocation"`
}

func (ApiHubInstanceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiHubInstanceConfig)(nil)).Elem()
}

func (i ApiHubInstanceConfigArgs) ToApiHubInstanceConfigOutput() ApiHubInstanceConfigOutput {
	return i.ToApiHubInstanceConfigOutputWithContext(context.Background())
}

func (i ApiHubInstanceConfigArgs) ToApiHubInstanceConfigOutputWithContext(ctx context.Context) ApiHubInstanceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiHubInstanceConfigOutput)
}

func (i ApiHubInstanceConfigArgs) ToApiHubInstanceConfigPtrOutput() ApiHubInstanceConfigPtrOutput {
	return i.ToApiHubInstanceConfigPtrOutputWithContext(context.Background())
}

func (i ApiHubInstanceConfigArgs) ToApiHubInstanceConfigPtrOutputWithContext(ctx context.Context) ApiHubInstanceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiHubInstanceConfigOutput).ToApiHubInstanceConfigPtrOutputWithContext(ctx)
}

// ApiHubInstanceConfigPtrInput is an input type that accepts ApiHubInstanceConfigArgs, ApiHubInstanceConfigPtr and ApiHubInstanceConfigPtrOutput values.
// You can construct a concrete instance of `ApiHubInstanceConfigPtrInput` via:
//
//	        ApiHubInstanceConfigArgs{...}
//
//	or:
//
//	        nil
type ApiHubInstanceConfigPtrInput interface {
	pulumi.Input

	ToApiHubInstanceConfigPtrOutput() ApiHubInstanceConfigPtrOutput
	ToApiHubInstanceConfigPtrOutputWithContext(context.Context) ApiHubInstanceConfigPtrOutput
}

type apiHubInstanceConfigPtrType ApiHubInstanceConfigArgs

func ApiHubInstanceConfigPtr(v *ApiHubInstanceConfigArgs) ApiHubInstanceConfigPtrInput {
	return (*apiHubInstanceConfigPtrType)(v)
}

func (*apiHubInstanceConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiHubInstanceConfig)(nil)).Elem()
}

func (i *apiHubInstanceConfigPtrType) ToApiHubInstanceConfigPtrOutput() ApiHubInstanceConfigPtrOutput {
	return i.ToApiHubInstanceConfigPtrOutputWithContext(context.Background())
}

func (i *apiHubInstanceConfigPtrType) ToApiHubInstanceConfigPtrOutputWithContext(ctx context.Context) ApiHubInstanceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiHubInstanceConfigPtrOutput)
}

type ApiHubInstanceConfigOutput struct{ *pulumi.OutputState }

func (ApiHubInstanceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiHubInstanceConfig)(nil)).Elem()
}

func (o ApiHubInstanceConfigOutput) ToApiHubInstanceConfigOutput() ApiHubInstanceConfigOutput {
	return o
}

func (o ApiHubInstanceConfigOutput) ToApiHubInstanceConfigOutputWithContext(ctx context.Context) ApiHubInstanceConfigOutput {
	return o
}

func (o ApiHubInstanceConfigOutput) ToApiHubInstanceConfigPtrOutput() ApiHubInstanceConfigPtrOutput {
	return o.ToApiHubInstanceConfigPtrOutputWithContext(context.Background())
}

func (o ApiHubInstanceConfigOutput) ToApiHubInstanceConfigPtrOutputWithContext(ctx context.Context) ApiHubInstanceConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApiHubInstanceConfig) *ApiHubInstanceConfig {
		return &v
	}).(ApiHubInstanceConfigPtrOutput)
}

// Optional. The Customer Managed Encryption Key (CMEK) used for data encryption.
// The CMEK name should follow the format of
// `projects/([^/]+)/locations/([^/]+)/keyRings/([^/]+)/cryptoKeys/([^/]+)`,
// where the location must match the instance location.
// If the CMEK is not provided, a GMEK will be created for the instance.
func (o ApiHubInstanceConfigOutput) CmekKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiHubInstanceConfig) *string { return v.CmekKeyName }).(pulumi.StringPtrOutput)
}

// Optional. If true, the search will be disabled for the instance. The default value
// is false.
func (o ApiHubInstanceConfigOutput) DisableSearch() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApiHubInstanceConfig) *bool { return v.DisableSearch }).(pulumi.BoolPtrOutput)
}

// Optional. Encryption type for the region. If the encryption type is CMEK, the
// cmekKeyName must be provided. If no encryption type is provided,
// GMEK will be used.
// Possible values:
// ENCRYPTION_TYPE_UNSPECIFIED
// GMEK
// CMEK
func (o ApiHubInstanceConfigOutput) EncryptionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiHubInstanceConfig) *string { return v.EncryptionType }).(pulumi.StringPtrOutput)
}

// Optional. The name of the Vertex AI location where the data store is stored.
//
// ***
func (o ApiHubInstanceConfigOutput) VertexLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiHubInstanceConfig) *string { return v.VertexLocation }).(pulumi.StringPtrOutput)
}

type ApiHubInstanceConfigPtrOutput struct{ *pulumi.OutputState }

func (ApiHubInstanceConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiHubInstanceConfig)(nil)).Elem()
}

func (o ApiHubInstanceConfigPtrOutput) ToApiHubInstanceConfigPtrOutput() ApiHubInstanceConfigPtrOutput {
	return o
}

func (o ApiHubInstanceConfigPtrOutput) ToApiHubInstanceConfigPtrOutputWithContext(ctx context.Context) ApiHubInstanceConfigPtrOutput {
	return o
}

func (o ApiHubInstanceConfigPtrOutput) Elem() ApiHubInstanceConfigOutput {
	return o.ApplyT(func(v *ApiHubInstanceConfig) ApiHubInstanceConfig {
		if v != nil {
			return *v
		}
		var ret ApiHubInstanceConfig
		return ret
	}).(ApiHubInstanceConfigOutput)
}

// Optional. The Customer Managed Encryption Key (CMEK) used for data encryption.
// The CMEK name should follow the format of
// `projects/([^/]+)/locations/([^/]+)/keyRings/([^/]+)/cryptoKeys/([^/]+)`,
// where the location must match the instance location.
// If the CMEK is not provided, a GMEK will be created for the instance.
func (o ApiHubInstanceConfigPtrOutput) CmekKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiHubInstanceConfig) *string {
		if v == nil {
			return nil
		}
		return v.CmekKeyName
	}).(pulumi.StringPtrOutput)
}

// Optional. If true, the search will be disabled for the instance. The default value
// is false.
func (o ApiHubInstanceConfigPtrOutput) DisableSearch() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApiHubInstanceConfig) *bool {
		if v == nil {
			return nil
		}
		return v.DisableSearch
	}).(pulumi.BoolPtrOutput)
}

// Optional. Encryption type for the region. If the encryption type is CMEK, the
// cmekKeyName must be provided. If no encryption type is provided,
// GMEK will be used.
// Possible values:
// ENCRYPTION_TYPE_UNSPECIFIED
// GMEK
// CMEK
func (o ApiHubInstanceConfigPtrOutput) EncryptionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiHubInstanceConfig) *string {
		if v == nil {
			return nil
		}
		return v.EncryptionType
	}).(pulumi.StringPtrOutput)
}

// Optional. The name of the Vertex AI location where the data store is stored.
//
// ***
func (o ApiHubInstanceConfigPtrOutput) VertexLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiHubInstanceConfig) *string {
		if v == nil {
			return nil
		}
		return v.VertexLocation
	}).(pulumi.StringPtrOutput)
}

type CurationEndpoint struct {
	// The details of the Application Integration endpoint to be triggered for
	// curation.
	// Structure is documented below.
	ApplicationIntegrationEndpointDetails CurationEndpointApplicationIntegrationEndpointDetails `pulumi:"applicationIntegrationEndpointDetails"`
}

// CurationEndpointInput is an input type that accepts CurationEndpointArgs and CurationEndpointOutput values.
// You can construct a concrete instance of `CurationEndpointInput` via:
//
//	CurationEndpointArgs{...}
type CurationEndpointInput interface {
	pulumi.Input

	ToCurationEndpointOutput() CurationEndpointOutput
	ToCurationEndpointOutputWithContext(context.Context) CurationEndpointOutput
}

type CurationEndpointArgs struct {
	// The details of the Application Integration endpoint to be triggered for
	// curation.
	// Structure is documented below.
	ApplicationIntegrationEndpointDetails CurationEndpointApplicationIntegrationEndpointDetailsInput `pulumi:"applicationIntegrationEndpointDetails"`
}

func (CurationEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CurationEndpoint)(nil)).Elem()
}

func (i CurationEndpointArgs) ToCurationEndpointOutput() CurationEndpointOutput {
	return i.ToCurationEndpointOutputWithContext(context.Background())
}

func (i CurationEndpointArgs) ToCurationEndpointOutputWithContext(ctx context.Context) CurationEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CurationEndpointOutput)
}

func (i CurationEndpointArgs) ToCurationEndpointPtrOutput() CurationEndpointPtrOutput {
	return i.ToCurationEndpointPtrOutputWithContext(context.Background())
}

func (i CurationEndpointArgs) ToCurationEndpointPtrOutputWithContext(ctx context.Context) CurationEndpointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CurationEndpointOutput).ToCurationEndpointPtrOutputWithContext(ctx)
}

// CurationEndpointPtrInput is an input type that accepts CurationEndpointArgs, CurationEndpointPtr and CurationEndpointPtrOutput values.
// You can construct a concrete instance of `CurationEndpointPtrInput` via:
//
//	        CurationEndpointArgs{...}
//
//	or:
//
//	        nil
type CurationEndpointPtrInput interface {
	pulumi.Input

	ToCurationEndpointPtrOutput() CurationEndpointPtrOutput
	ToCurationEndpointPtrOutputWithContext(context.Context) CurationEndpointPtrOutput
}

type curationEndpointPtrType CurationEndpointArgs

func CurationEndpointPtr(v *CurationEndpointArgs) CurationEndpointPtrInput {
	return (*curationEndpointPtrType)(v)
}

func (*curationEndpointPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CurationEndpoint)(nil)).Elem()
}

func (i *curationEndpointPtrType) ToCurationEndpointPtrOutput() CurationEndpointPtrOutput {
	return i.ToCurationEndpointPtrOutputWithContext(context.Background())
}

func (i *curationEndpointPtrType) ToCurationEndpointPtrOutputWithContext(ctx context.Context) CurationEndpointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CurationEndpointPtrOutput)
}

type CurationEndpointOutput struct{ *pulumi.OutputState }

func (CurationEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CurationEndpoint)(nil)).Elem()
}

func (o CurationEndpointOutput) ToCurationEndpointOutput() CurationEndpointOutput {
	return o
}

func (o CurationEndpointOutput) ToCurationEndpointOutputWithContext(ctx context.Context) CurationEndpointOutput {
	return o
}

func (o CurationEndpointOutput) ToCurationEndpointPtrOutput() CurationEndpointPtrOutput {
	return o.ToCurationEndpointPtrOutputWithContext(context.Background())
}

func (o CurationEndpointOutput) ToCurationEndpointPtrOutputWithContext(ctx context.Context) CurationEndpointPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CurationEndpoint) *CurationEndpoint {
		return &v
	}).(CurationEndpointPtrOutput)
}

// The details of the Application Integration endpoint to be triggered for
// curation.
// Structure is documented below.
func (o CurationEndpointOutput) ApplicationIntegrationEndpointDetails() CurationEndpointApplicationIntegrationEndpointDetailsOutput {
	return o.ApplyT(func(v CurationEndpoint) CurationEndpointApplicationIntegrationEndpointDetails {
		return v.ApplicationIntegrationEndpointDetails
	}).(CurationEndpointApplicationIntegrationEndpointDetailsOutput)
}

type CurationEndpointPtrOutput struct{ *pulumi.OutputState }

func (CurationEndpointPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CurationEndpoint)(nil)).Elem()
}

func (o CurationEndpointPtrOutput) ToCurationEndpointPtrOutput() CurationEndpointPtrOutput {
	return o
}

func (o CurationEndpointPtrOutput) ToCurationEndpointPtrOutputWithContext(ctx context.Context) CurationEndpointPtrOutput {
	return o
}

func (o CurationEndpointPtrOutput) Elem() CurationEndpointOutput {
	return o.ApplyT(func(v *CurationEndpoint) CurationEndpoint {
		if v != nil {
			return *v
		}
		var ret CurationEndpoint
		return ret
	}).(CurationEndpointOutput)
}

// The details of the Application Integration endpoint to be triggered for
// curation.
// Structure is documented below.
func (o CurationEndpointPtrOutput) ApplicationIntegrationEndpointDetails() CurationEndpointApplicationIntegrationEndpointDetailsPtrOutput {
	return o.ApplyT(func(v *CurationEndpoint) *CurationEndpointApplicationIntegrationEndpointDetails {
		if v == nil {
			return nil
		}
		return &v.ApplicationIntegrationEndpointDetails
	}).(CurationEndpointApplicationIntegrationEndpointDetailsPtrOutput)
}

type CurationEndpointApplicationIntegrationEndpointDetails struct {
	// The API trigger ID of the Application Integration workflow.
	TriggerId string `pulumi:"triggerId"`
	// The endpoint URI should be a valid REST URI for triggering an Application
	// Integration.
	// Format:
	// `https://integrations.googleapis.com/v1/{name=projects/*/locations/*/integrations/*}:execute`
	// or
	// `https://{location}-integrations.googleapis.com/v1/{name=projects/*/locations/*/integrations/*}:execute`
	//
	// ***
	Uri string `pulumi:"uri"`
}

// CurationEndpointApplicationIntegrationEndpointDetailsInput is an input type that accepts CurationEndpointApplicationIntegrationEndpointDetailsArgs and CurationEndpointApplicationIntegrationEndpointDetailsOutput values.
// You can construct a concrete instance of `CurationEndpointApplicationIntegrationEndpointDetailsInput` via:
//
//	CurationEndpointApplicationIntegrationEndpointDetailsArgs{...}
type CurationEndpointApplicationIntegrationEndpointDetailsInput interface {
	pulumi.Input

	ToCurationEndpointApplicationIntegrationEndpointDetailsOutput() CurationEndpointApplicationIntegrationEndpointDetailsOutput
	ToCurationEndpointApplicationIntegrationEndpointDetailsOutputWithContext(context.Context) CurationEndpointApplicationIntegrationEndpointDetailsOutput
}

type CurationEndpointApplicationIntegrationEndpointDetailsArgs struct {
	// The API trigger ID of the Application Integration workflow.
	TriggerId pulumi.StringInput `pulumi:"triggerId"`
	// The endpoint URI should be a valid REST URI for triggering an Application
	// Integration.
	// Format:
	// `https://integrations.googleapis.com/v1/{name=projects/*/locations/*/integrations/*}:execute`
	// or
	// `https://{location}-integrations.googleapis.com/v1/{name=projects/*/locations/*/integrations/*}:execute`
	//
	// ***
	Uri pulumi.StringInput `pulumi:"uri"`
}

func (CurationEndpointApplicationIntegrationEndpointDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CurationEndpointApplicationIntegrationEndpointDetails)(nil)).Elem()
}

func (i CurationEndpointApplicationIntegrationEndpointDetailsArgs) ToCurationEndpointApplicationIntegrationEndpointDetailsOutput() CurationEndpointApplicationIntegrationEndpointDetailsOutput {
	return i.ToCurationEndpointApplicationIntegrationEndpointDetailsOutputWithContext(context.Background())
}

func (i CurationEndpointApplicationIntegrationEndpointDetailsArgs) ToCurationEndpointApplicationIntegrationEndpointDetailsOutputWithContext(ctx context.Context) CurationEndpointApplicationIntegrationEndpointDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CurationEndpointApplicationIntegrationEndpointDetailsOutput)
}

func (i CurationEndpointApplicationIntegrationEndpointDetailsArgs) ToCurationEndpointApplicationIntegrationEndpointDetailsPtrOutput() CurationEndpointApplicationIntegrationEndpointDetailsPtrOutput {
	return i.ToCurationEndpointApplicationIntegrationEndpointDetailsPtrOutputWithContext(context.Background())
}

func (i CurationEndpointApplicationIntegrationEndpointDetailsArgs) ToCurationEndpointApplicationIntegrationEndpointDetailsPtrOutputWithContext(ctx context.Context) CurationEndpointApplicationIntegrationEndpointDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CurationEndpointApplicationIntegrationEndpointDetailsOutput).ToCurationEndpointApplicationIntegrationEndpointDetailsPtrOutputWithContext(ctx)
}

// CurationEndpointApplicationIntegrationEndpointDetailsPtrInput is an input type that accepts CurationEndpointApplicationIntegrationEndpointDetailsArgs, CurationEndpointApplicationIntegrationEndpointDetailsPtr and CurationEndpointApplicationIntegrationEndpointDetailsPtrOutput values.
// You can construct a concrete instance of `CurationEndpointApplicationIntegrationEndpointDetailsPtrInput` via:
//
//	        CurationEndpointApplicationIntegrationEndpointDetailsArgs{...}
//
//	or:
//
//	        nil
type CurationEndpointApplicationIntegrationEndpointDetailsPtrInput interface {
	pulumi.Input

	ToCurationEndpointApplicationIntegrationEndpointDetailsPtrOutput() CurationEndpointApplicationIntegrationEndpointDetailsPtrOutput
	ToCurationEndpointApplicationIntegrationEndpointDetailsPtrOutputWithContext(context.Context) CurationEndpointApplicationIntegrationEndpointDetailsPtrOutput
}

type curationEndpointApplicationIntegrationEndpointDetailsPtrType CurationEndpointApplicationIntegrationEndpointDetailsArgs

func CurationEndpointApplicationIntegrationEndpointDetailsPtr(v *CurationEndpointApplicationIntegrationEndpointDetailsArgs) CurationEndpointApplicationIntegrationEndpointDetailsPtrInput {
	return (*curationEndpointApplicationIntegrationEndpointDetailsPtrType)(v)
}

func (*curationEndpointApplicationIntegrationEndpointDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CurationEndpointApplicationIntegrationEndpointDetails)(nil)).Elem()
}

func (i *curationEndpointApplicationIntegrationEndpointDetailsPtrType) ToCurationEndpointApplicationIntegrationEndpointDetailsPtrOutput() CurationEndpointApplicationIntegrationEndpointDetailsPtrOutput {
	return i.ToCurationEndpointApplicationIntegrationEndpointDetailsPtrOutputWithContext(context.Background())
}

func (i *curationEndpointApplicationIntegrationEndpointDetailsPtrType) ToCurationEndpointApplicationIntegrationEndpointDetailsPtrOutputWithContext(ctx context.Context) CurationEndpointApplicationIntegrationEndpointDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CurationEndpointApplicationIntegrationEndpointDetailsPtrOutput)
}

type CurationEndpointApplicationIntegrationEndpointDetailsOutput struct{ *pulumi.OutputState }

func (CurationEndpointApplicationIntegrationEndpointDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CurationEndpointApplicationIntegrationEndpointDetails)(nil)).Elem()
}

func (o CurationEndpointApplicationIntegrationEndpointDetailsOutput) ToCurationEndpointApplicationIntegrationEndpointDetailsOutput() CurationEndpointApplicationIntegrationEndpointDetailsOutput {
	return o
}

func (o CurationEndpointApplicationIntegrationEndpointDetailsOutput) ToCurationEndpointApplicationIntegrationEndpointDetailsOutputWithContext(ctx context.Context) CurationEndpointApplicationIntegrationEndpointDetailsOutput {
	return o
}

func (o CurationEndpointApplicationIntegrationEndpointDetailsOutput) ToCurationEndpointApplicationIntegrationEndpointDetailsPtrOutput() CurationEndpointApplicationIntegrationEndpointDetailsPtrOutput {
	return o.ToCurationEndpointApplicationIntegrationEndpointDetailsPtrOutputWithContext(context.Background())
}

func (o CurationEndpointApplicationIntegrationEndpointDetailsOutput) ToCurationEndpointApplicationIntegrationEndpointDetailsPtrOutputWithContext(ctx context.Context) CurationEndpointApplicationIntegrationEndpointDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CurationEndpointApplicationIntegrationEndpointDetails) *CurationEndpointApplicationIntegrationEndpointDetails {
		return &v
	}).(CurationEndpointApplicationIntegrationEndpointDetailsPtrOutput)
}

// The API trigger ID of the Application Integration workflow.
func (o CurationEndpointApplicationIntegrationEndpointDetailsOutput) TriggerId() pulumi.StringOutput {
	return o.ApplyT(func(v CurationEndpointApplicationIntegrationEndpointDetails) string { return v.TriggerId }).(pulumi.StringOutput)
}

// The endpoint URI should be a valid REST URI for triggering an Application
// Integration.
// Format:
// `https://integrations.googleapis.com/v1/{name=projects/*/locations/*/integrations/*}:execute`
// or
// `https://{location}-integrations.googleapis.com/v1/{name=projects/*/locations/*/integrations/*}:execute`
//
// ***
func (o CurationEndpointApplicationIntegrationEndpointDetailsOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v CurationEndpointApplicationIntegrationEndpointDetails) string { return v.Uri }).(pulumi.StringOutput)
}

type CurationEndpointApplicationIntegrationEndpointDetailsPtrOutput struct{ *pulumi.OutputState }

func (CurationEndpointApplicationIntegrationEndpointDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CurationEndpointApplicationIntegrationEndpointDetails)(nil)).Elem()
}

func (o CurationEndpointApplicationIntegrationEndpointDetailsPtrOutput) ToCurationEndpointApplicationIntegrationEndpointDetailsPtrOutput() CurationEndpointApplicationIntegrationEndpointDetailsPtrOutput {
	return o
}

func (o CurationEndpointApplicationIntegrationEndpointDetailsPtrOutput) ToCurationEndpointApplicationIntegrationEndpointDetailsPtrOutputWithContext(ctx context.Context) CurationEndpointApplicationIntegrationEndpointDetailsPtrOutput {
	return o
}

func (o CurationEndpointApplicationIntegrationEndpointDetailsPtrOutput) Elem() CurationEndpointApplicationIntegrationEndpointDetailsOutput {
	return o.ApplyT(func(v *CurationEndpointApplicationIntegrationEndpointDetails) CurationEndpointApplicationIntegrationEndpointDetails {
		if v != nil {
			return *v
		}
		var ret CurationEndpointApplicationIntegrationEndpointDetails
		return ret
	}).(CurationEndpointApplicationIntegrationEndpointDetailsOutput)
}

// The API trigger ID of the Application Integration workflow.
func (o CurationEndpointApplicationIntegrationEndpointDetailsPtrOutput) TriggerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CurationEndpointApplicationIntegrationEndpointDetails) *string {
		if v == nil {
			return nil
		}
		return &v.TriggerId
	}).(pulumi.StringPtrOutput)
}

// The endpoint URI should be a valid REST URI for triggering an Application
// Integration.
// Format:
// `https://integrations.googleapis.com/v1/{name=projects/*/locations/*/integrations/*}:execute`
// or
// `https://{location}-integrations.googleapis.com/v1/{name=projects/*/locations/*/integrations/*}:execute`
//
// ***
func (o CurationEndpointApplicationIntegrationEndpointDetailsPtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CurationEndpointApplicationIntegrationEndpointDetails) *string {
		if v == nil {
			return nil
		}
		return &v.Uri
	}).(pulumi.StringPtrOutput)
}

type CurationPluginInstanceAction struct {
	// (Output)
	// The action ID that is using the curation.
	// This should map to one of the action IDs specified
	// in action configs in the plugin.
	ActionId *string `pulumi:"actionId"`
	// (Output)
	// Plugin instance that is using the curation.
	// Format is
	// `projects/{project}/locations/{locati on}/plugins/{plugin}/instances/{instance}`
	PluginInstance *string `pulumi:"pluginInstance"`
}

// CurationPluginInstanceActionInput is an input type that accepts CurationPluginInstanceActionArgs and CurationPluginInstanceActionOutput values.
// You can construct a concrete instance of `CurationPluginInstanceActionInput` via:
//
//	CurationPluginInstanceActionArgs{...}
type CurationPluginInstanceActionInput interface {
	pulumi.Input

	ToCurationPluginInstanceActionOutput() CurationPluginInstanceActionOutput
	ToCurationPluginInstanceActionOutputWithContext(context.Context) CurationPluginInstanceActionOutput
}

type CurationPluginInstanceActionArgs struct {
	// (Output)
	// The action ID that is using the curation.
	// This should map to one of the action IDs specified
	// in action configs in the plugin.
	ActionId pulumi.StringPtrInput `pulumi:"actionId"`
	// (Output)
	// Plugin instance that is using the curation.
	// Format is
	// `projects/{project}/locations/{locati on}/plugins/{plugin}/instances/{instance}`
	PluginInstance pulumi.StringPtrInput `pulumi:"pluginInstance"`
}

func (CurationPluginInstanceActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CurationPluginInstanceAction)(nil)).Elem()
}

func (i CurationPluginInstanceActionArgs) ToCurationPluginInstanceActionOutput() CurationPluginInstanceActionOutput {
	return i.ToCurationPluginInstanceActionOutputWithContext(context.Background())
}

func (i CurationPluginInstanceActionArgs) ToCurationPluginInstanceActionOutputWithContext(ctx context.Context) CurationPluginInstanceActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CurationPluginInstanceActionOutput)
}

// CurationPluginInstanceActionArrayInput is an input type that accepts CurationPluginInstanceActionArray and CurationPluginInstanceActionArrayOutput values.
// You can construct a concrete instance of `CurationPluginInstanceActionArrayInput` via:
//
//	CurationPluginInstanceActionArray{ CurationPluginInstanceActionArgs{...} }
type CurationPluginInstanceActionArrayInput interface {
	pulumi.Input

	ToCurationPluginInstanceActionArrayOutput() CurationPluginInstanceActionArrayOutput
	ToCurationPluginInstanceActionArrayOutputWithContext(context.Context) CurationPluginInstanceActionArrayOutput
}

type CurationPluginInstanceActionArray []CurationPluginInstanceActionInput

func (CurationPluginInstanceActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CurationPluginInstanceAction)(nil)).Elem()
}

func (i CurationPluginInstanceActionArray) ToCurationPluginInstanceActionArrayOutput() CurationPluginInstanceActionArrayOutput {
	return i.ToCurationPluginInstanceActionArrayOutputWithContext(context.Background())
}

func (i CurationPluginInstanceActionArray) ToCurationPluginInstanceActionArrayOutputWithContext(ctx context.Context) CurationPluginInstanceActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CurationPluginInstanceActionArrayOutput)
}

type CurationPluginInstanceActionOutput struct{ *pulumi.OutputState }

func (CurationPluginInstanceActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CurationPluginInstanceAction)(nil)).Elem()
}

func (o CurationPluginInstanceActionOutput) ToCurationPluginInstanceActionOutput() CurationPluginInstanceActionOutput {
	return o
}

func (o CurationPluginInstanceActionOutput) ToCurationPluginInstanceActionOutputWithContext(ctx context.Context) CurationPluginInstanceActionOutput {
	return o
}

// (Output)
// The action ID that is using the curation.
// This should map to one of the action IDs specified
// in action configs in the plugin.
func (o CurationPluginInstanceActionOutput) ActionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CurationPluginInstanceAction) *string { return v.ActionId }).(pulumi.StringPtrOutput)
}

// (Output)
// Plugin instance that is using the curation.
// Format is
// `projects/{project}/locations/{locati on}/plugins/{plugin}/instances/{instance}`
func (o CurationPluginInstanceActionOutput) PluginInstance() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CurationPluginInstanceAction) *string { return v.PluginInstance }).(pulumi.StringPtrOutput)
}

type CurationPluginInstanceActionArrayOutput struct{ *pulumi.OutputState }

func (CurationPluginInstanceActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CurationPluginInstanceAction)(nil)).Elem()
}

func (o CurationPluginInstanceActionArrayOutput) ToCurationPluginInstanceActionArrayOutput() CurationPluginInstanceActionArrayOutput {
	return o
}

func (o CurationPluginInstanceActionArrayOutput) ToCurationPluginInstanceActionArrayOutputWithContext(ctx context.Context) CurationPluginInstanceActionArrayOutput {
	return o
}

func (o CurationPluginInstanceActionArrayOutput) Index(i pulumi.IntInput) CurationPluginInstanceActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CurationPluginInstanceAction {
		return vs[0].([]CurationPluginInstanceAction)[vs[1].(int)]
	}).(CurationPluginInstanceActionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApiHubInstanceConfigInput)(nil)).Elem(), ApiHubInstanceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiHubInstanceConfigPtrInput)(nil)).Elem(), ApiHubInstanceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CurationEndpointInput)(nil)).Elem(), CurationEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CurationEndpointPtrInput)(nil)).Elem(), CurationEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CurationEndpointApplicationIntegrationEndpointDetailsInput)(nil)).Elem(), CurationEndpointApplicationIntegrationEndpointDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CurationEndpointApplicationIntegrationEndpointDetailsPtrInput)(nil)).Elem(), CurationEndpointApplicationIntegrationEndpointDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CurationPluginInstanceActionInput)(nil)).Elem(), CurationPluginInstanceActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CurationPluginInstanceActionArrayInput)(nil)).Elem(), CurationPluginInstanceActionArray{})
	pulumi.RegisterOutputType(ApiHubInstanceConfigOutput{})
	pulumi.RegisterOutputType(ApiHubInstanceConfigPtrOutput{})
	pulumi.RegisterOutputType(CurationEndpointOutput{})
	pulumi.RegisterOutputType(CurationEndpointPtrOutput{})
	pulumi.RegisterOutputType(CurationEndpointApplicationIntegrationEndpointDetailsOutput{})
	pulumi.RegisterOutputType(CurationEndpointApplicationIntegrationEndpointDetailsPtrOutput{})
	pulumi.RegisterOutputType(CurationPluginInstanceActionOutput{})
	pulumi.RegisterOutputType(CurationPluginInstanceActionArrayOutput{})
}
