// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iap

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type AppEngineServiceIamBindingCondition struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	//
	// > **Warning:** The provider considers the `role` and condition contents (`title`+`description`+`expression`) as the
	// identifier for the binding. This means that if any part of the condition is changed out-of-band, the provider will
	// consider it to be an entirely different resource and will treat it as such.
	Description *string `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression string `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title string `pulumi:"title"`
}

// AppEngineServiceIamBindingConditionInput is an input type that accepts AppEngineServiceIamBindingConditionArgs and AppEngineServiceIamBindingConditionOutput values.
// You can construct a concrete instance of `AppEngineServiceIamBindingConditionInput` via:
//
//	AppEngineServiceIamBindingConditionArgs{...}
type AppEngineServiceIamBindingConditionInput interface {
	pulumi.Input

	ToAppEngineServiceIamBindingConditionOutput() AppEngineServiceIamBindingConditionOutput
	ToAppEngineServiceIamBindingConditionOutputWithContext(context.Context) AppEngineServiceIamBindingConditionOutput
}

type AppEngineServiceIamBindingConditionArgs struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	//
	// > **Warning:** The provider considers the `role` and condition contents (`title`+`description`+`expression`) as the
	// identifier for the binding. This means that if any part of the condition is changed out-of-band, the provider will
	// consider it to be an entirely different resource and will treat it as such.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression pulumi.StringInput `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title pulumi.StringInput `pulumi:"title"`
}

func (AppEngineServiceIamBindingConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppEngineServiceIamBindingCondition)(nil)).Elem()
}

func (i AppEngineServiceIamBindingConditionArgs) ToAppEngineServiceIamBindingConditionOutput() AppEngineServiceIamBindingConditionOutput {
	return i.ToAppEngineServiceIamBindingConditionOutputWithContext(context.Background())
}

func (i AppEngineServiceIamBindingConditionArgs) ToAppEngineServiceIamBindingConditionOutputWithContext(ctx context.Context) AppEngineServiceIamBindingConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppEngineServiceIamBindingConditionOutput)
}

func (i AppEngineServiceIamBindingConditionArgs) ToAppEngineServiceIamBindingConditionPtrOutput() AppEngineServiceIamBindingConditionPtrOutput {
	return i.ToAppEngineServiceIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i AppEngineServiceIamBindingConditionArgs) ToAppEngineServiceIamBindingConditionPtrOutputWithContext(ctx context.Context) AppEngineServiceIamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppEngineServiceIamBindingConditionOutput).ToAppEngineServiceIamBindingConditionPtrOutputWithContext(ctx)
}

// AppEngineServiceIamBindingConditionPtrInput is an input type that accepts AppEngineServiceIamBindingConditionArgs, AppEngineServiceIamBindingConditionPtr and AppEngineServiceIamBindingConditionPtrOutput values.
// You can construct a concrete instance of `AppEngineServiceIamBindingConditionPtrInput` via:
//
//	        AppEngineServiceIamBindingConditionArgs{...}
//
//	or:
//
//	        nil
type AppEngineServiceIamBindingConditionPtrInput interface {
	pulumi.Input

	ToAppEngineServiceIamBindingConditionPtrOutput() AppEngineServiceIamBindingConditionPtrOutput
	ToAppEngineServiceIamBindingConditionPtrOutputWithContext(context.Context) AppEngineServiceIamBindingConditionPtrOutput
}

type appEngineServiceIamBindingConditionPtrType AppEngineServiceIamBindingConditionArgs

func AppEngineServiceIamBindingConditionPtr(v *AppEngineServiceIamBindingConditionArgs) AppEngineServiceIamBindingConditionPtrInput {
	return (*appEngineServiceIamBindingConditionPtrType)(v)
}

func (*appEngineServiceIamBindingConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppEngineServiceIamBindingCondition)(nil)).Elem()
}

func (i *appEngineServiceIamBindingConditionPtrType) ToAppEngineServiceIamBindingConditionPtrOutput() AppEngineServiceIamBindingConditionPtrOutput {
	return i.ToAppEngineServiceIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i *appEngineServiceIamBindingConditionPtrType) ToAppEngineServiceIamBindingConditionPtrOutputWithContext(ctx context.Context) AppEngineServiceIamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppEngineServiceIamBindingConditionPtrOutput)
}

type AppEngineServiceIamBindingConditionOutput struct{ *pulumi.OutputState }

func (AppEngineServiceIamBindingConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppEngineServiceIamBindingCondition)(nil)).Elem()
}

func (o AppEngineServiceIamBindingConditionOutput) ToAppEngineServiceIamBindingConditionOutput() AppEngineServiceIamBindingConditionOutput {
	return o
}

func (o AppEngineServiceIamBindingConditionOutput) ToAppEngineServiceIamBindingConditionOutputWithContext(ctx context.Context) AppEngineServiceIamBindingConditionOutput {
	return o
}

func (o AppEngineServiceIamBindingConditionOutput) ToAppEngineServiceIamBindingConditionPtrOutput() AppEngineServiceIamBindingConditionPtrOutput {
	return o.ToAppEngineServiceIamBindingConditionPtrOutputWithContext(context.Background())
}

func (o AppEngineServiceIamBindingConditionOutput) ToAppEngineServiceIamBindingConditionPtrOutputWithContext(ctx context.Context) AppEngineServiceIamBindingConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppEngineServiceIamBindingCondition) *AppEngineServiceIamBindingCondition {
		return &v
	}).(AppEngineServiceIamBindingConditionPtrOutput)
}

// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
//
// > **Warning:** The provider considers the `role` and condition contents (`title`+`description`+`expression`) as the
// identifier for the binding. This means that if any part of the condition is changed out-of-band, the provider will
// consider it to be an entirely different resource and will treat it as such.
func (o AppEngineServiceIamBindingConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppEngineServiceIamBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o AppEngineServiceIamBindingConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v AppEngineServiceIamBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o AppEngineServiceIamBindingConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v AppEngineServiceIamBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

type AppEngineServiceIamBindingConditionPtrOutput struct{ *pulumi.OutputState }

func (AppEngineServiceIamBindingConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppEngineServiceIamBindingCondition)(nil)).Elem()
}

func (o AppEngineServiceIamBindingConditionPtrOutput) ToAppEngineServiceIamBindingConditionPtrOutput() AppEngineServiceIamBindingConditionPtrOutput {
	return o
}

func (o AppEngineServiceIamBindingConditionPtrOutput) ToAppEngineServiceIamBindingConditionPtrOutputWithContext(ctx context.Context) AppEngineServiceIamBindingConditionPtrOutput {
	return o
}

func (o AppEngineServiceIamBindingConditionPtrOutput) Elem() AppEngineServiceIamBindingConditionOutput {
	return o.ApplyT(func(v *AppEngineServiceIamBindingCondition) AppEngineServiceIamBindingCondition {
		if v != nil {
			return *v
		}
		var ret AppEngineServiceIamBindingCondition
		return ret
	}).(AppEngineServiceIamBindingConditionOutput)
}

// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
//
// > **Warning:** The provider considers the `role` and condition contents (`title`+`description`+`expression`) as the
// identifier for the binding. This means that if any part of the condition is changed out-of-band, the provider will
// consider it to be an entirely different resource and will treat it as such.
func (o AppEngineServiceIamBindingConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppEngineServiceIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o AppEngineServiceIamBindingConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppEngineServiceIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o AppEngineServiceIamBindingConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppEngineServiceIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type AppEngineServiceIamMemberCondition struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	//
	// > **Warning:** The provider considers the `role` and condition contents (`title`+`description`+`expression`) as the
	// identifier for the binding. This means that if any part of the condition is changed out-of-band, the provider will
	// consider it to be an entirely different resource and will treat it as such.
	Description *string `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression string `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title string `pulumi:"title"`
}

// AppEngineServiceIamMemberConditionInput is an input type that accepts AppEngineServiceIamMemberConditionArgs and AppEngineServiceIamMemberConditionOutput values.
// You can construct a concrete instance of `AppEngineServiceIamMemberConditionInput` via:
//
//	AppEngineServiceIamMemberConditionArgs{...}
type AppEngineServiceIamMemberConditionInput interface {
	pulumi.Input

	ToAppEngineServiceIamMemberConditionOutput() AppEngineServiceIamMemberConditionOutput
	ToAppEngineServiceIamMemberConditionOutputWithContext(context.Context) AppEngineServiceIamMemberConditionOutput
}

type AppEngineServiceIamMemberConditionArgs struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	//
	// > **Warning:** The provider considers the `role` and condition contents (`title`+`description`+`expression`) as the
	// identifier for the binding. This means that if any part of the condition is changed out-of-band, the provider will
	// consider it to be an entirely different resource and will treat it as such.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression pulumi.StringInput `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title pulumi.StringInput `pulumi:"title"`
}

func (AppEngineServiceIamMemberConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppEngineServiceIamMemberCondition)(nil)).Elem()
}

func (i AppEngineServiceIamMemberConditionArgs) ToAppEngineServiceIamMemberConditionOutput() AppEngineServiceIamMemberConditionOutput {
	return i.ToAppEngineServiceIamMemberConditionOutputWithContext(context.Background())
}

func (i AppEngineServiceIamMemberConditionArgs) ToAppEngineServiceIamMemberConditionOutputWithContext(ctx context.Context) AppEngineServiceIamMemberConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppEngineServiceIamMemberConditionOutput)
}

func (i AppEngineServiceIamMemberConditionArgs) ToAppEngineServiceIamMemberConditionPtrOutput() AppEngineServiceIamMemberConditionPtrOutput {
	return i.ToAppEngineServiceIamMemberConditionPtrOutputWithContext(context.Background())
}

func (i AppEngineServiceIamMemberConditionArgs) ToAppEngineServiceIamMemberConditionPtrOutputWithContext(ctx context.Context) AppEngineServiceIamMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppEngineServiceIamMemberConditionOutput).ToAppEngineServiceIamMemberConditionPtrOutputWithContext(ctx)
}

// AppEngineServiceIamMemberConditionPtrInput is an input type that accepts AppEngineServiceIamMemberConditionArgs, AppEngineServiceIamMemberConditionPtr and AppEngineServiceIamMemberConditionPtrOutput values.
// You can construct a concrete instance of `AppEngineServiceIamMemberConditionPtrInput` via:
//
//	        AppEngineServiceIamMemberConditionArgs{...}
//
//	or:
//
//	        nil
type AppEngineServiceIamMemberConditionPtrInput interface {
	pulumi.Input

	ToAppEngineServiceIamMemberConditionPtrOutput() AppEngineServiceIamMemberConditionPtrOutput
	ToAppEngineServiceIamMemberConditionPtrOutputWithContext(context.Context) AppEngineServiceIamMemberConditionPtrOutput
}

type appEngineServiceIamMemberConditionPtrType AppEngineServiceIamMemberConditionArgs

func AppEngineServiceIamMemberConditionPtr(v *AppEngineServiceIamMemberConditionArgs) AppEngineServiceIamMemberConditionPtrInput {
	return (*appEngineServiceIamMemberConditionPtrType)(v)
}

func (*appEngineServiceIamMemberConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppEngineServiceIamMemberCondition)(nil)).Elem()
}

func (i *appEngineServiceIamMemberConditionPtrType) ToAppEngineServiceIamMemberConditionPtrOutput() AppEngineServiceIamMemberConditionPtrOutput {
	return i.ToAppEngineServiceIamMemberConditionPtrOutputWithContext(context.Background())
}

func (i *appEngineServiceIamMemberConditionPtrType) ToAppEngineServiceIamMemberConditionPtrOutputWithContext(ctx context.Context) AppEngineServiceIamMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppEngineServiceIamMemberConditionPtrOutput)
}

type AppEngineServiceIamMemberConditionOutput struct{ *pulumi.OutputState }

func (AppEngineServiceIamMemberConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppEngineServiceIamMemberCondition)(nil)).Elem()
}

func (o AppEngineServiceIamMemberConditionOutput) ToAppEngineServiceIamMemberConditionOutput() AppEngineServiceIamMemberConditionOutput {
	return o
}

func (o AppEngineServiceIamMemberConditionOutput) ToAppEngineServiceIamMemberConditionOutputWithContext(ctx context.Context) AppEngineServiceIamMemberConditionOutput {
	return o
}

func (o AppEngineServiceIamMemberConditionOutput) ToAppEngineServiceIamMemberConditionPtrOutput() AppEngineServiceIamMemberConditionPtrOutput {
	return o.ToAppEngineServiceIamMemberConditionPtrOutputWithContext(context.Background())
}

func (o AppEngineServiceIamMemberConditionOutput) ToAppEngineServiceIamMemberConditionPtrOutputWithContext(ctx context.Context) AppEngineServiceIamMemberConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppEngineServiceIamMemberCondition) *AppEngineServiceIamMemberCondition {
		return &v
	}).(AppEngineServiceIamMemberConditionPtrOutput)
}

// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
//
// > **Warning:** The provider considers the `role` and condition contents (`title`+`description`+`expression`) as the
// identifier for the binding. This means that if any part of the condition is changed out-of-band, the provider will
// consider it to be an entirely different resource and will treat it as such.
func (o AppEngineServiceIamMemberConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppEngineServiceIamMemberCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o AppEngineServiceIamMemberConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v AppEngineServiceIamMemberCondition) string { return v.Expression }).(pulumi.StringOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o AppEngineServiceIamMemberConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v AppEngineServiceIamMemberCondition) string { return v.Title }).(pulumi.StringOutput)
}

type AppEngineServiceIamMemberConditionPtrOutput struct{ *pulumi.OutputState }

func (AppEngineServiceIamMemberConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppEngineServiceIamMemberCondition)(nil)).Elem()
}

func (o AppEngineServiceIamMemberConditionPtrOutput) ToAppEngineServiceIamMemberConditionPtrOutput() AppEngineServiceIamMemberConditionPtrOutput {
	return o
}

func (o AppEngineServiceIamMemberConditionPtrOutput) ToAppEngineServiceIamMemberConditionPtrOutputWithContext(ctx context.Context) AppEngineServiceIamMemberConditionPtrOutput {
	return o
}

func (o AppEngineServiceIamMemberConditionPtrOutput) Elem() AppEngineServiceIamMemberConditionOutput {
	return o.ApplyT(func(v *AppEngineServiceIamMemberCondition) AppEngineServiceIamMemberCondition {
		if v != nil {
			return *v
		}
		var ret AppEngineServiceIamMemberCondition
		return ret
	}).(AppEngineServiceIamMemberConditionOutput)
}

// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
//
// > **Warning:** The provider considers the `role` and condition contents (`title`+`description`+`expression`) as the
// identifier for the binding. This means that if any part of the condition is changed out-of-band, the provider will
// consider it to be an entirely different resource and will treat it as such.
func (o AppEngineServiceIamMemberConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppEngineServiceIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o AppEngineServiceIamMemberConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppEngineServiceIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o AppEngineServiceIamMemberConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppEngineServiceIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type AppEngineVersionIamBindingCondition struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	//
	// > **Warning:** The provider considers the `role` and condition contents (`title`+`description`+`expression`) as the
	// identifier for the binding. This means that if any part of the condition is changed out-of-band, the provider will
	// consider it to be an entirely different resource and will treat it as such.
	Description *string `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression string `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title string `pulumi:"title"`
}

// AppEngineVersionIamBindingConditionInput is an input type that accepts AppEngineVersionIamBindingConditionArgs and AppEngineVersionIamBindingConditionOutput values.
// You can construct a concrete instance of `AppEngineVersionIamBindingConditionInput` via:
//
//	AppEngineVersionIamBindingConditionArgs{...}
type AppEngineVersionIamBindingConditionInput interface {
	pulumi.Input

	ToAppEngineVersionIamBindingConditionOutput() AppEngineVersionIamBindingConditionOutput
	ToAppEngineVersionIamBindingConditionOutputWithContext(context.Context) AppEngineVersionIamBindingConditionOutput
}

type AppEngineVersionIamBindingConditionArgs struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	//
	// > **Warning:** The provider considers the `role` and condition contents (`title`+`description`+`expression`) as the
	// identifier for the binding. This means that if any part of the condition is changed out-of-band, the provider will
	// consider it to be an entirely different resource and will treat it as such.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression pulumi.StringInput `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title pulumi.StringInput `pulumi:"title"`
}

func (AppEngineVersionIamBindingConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppEngineVersionIamBindingCondition)(nil)).Elem()
}

func (i AppEngineVersionIamBindingConditionArgs) ToAppEngineVersionIamBindingConditionOutput() AppEngineVersionIamBindingConditionOutput {
	return i.ToAppEngineVersionIamBindingConditionOutputWithContext(context.Background())
}

func (i AppEngineVersionIamBindingConditionArgs) ToAppEngineVersionIamBindingConditionOutputWithContext(ctx context.Context) AppEngineVersionIamBindingConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppEngineVersionIamBindingConditionOutput)
}

func (i AppEngineVersionIamBindingConditionArgs) ToAppEngineVersionIamBindingConditionPtrOutput() AppEngineVersionIamBindingConditionPtrOutput {
	return i.ToAppEngineVersionIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i AppEngineVersionIamBindingConditionArgs) ToAppEngineVersionIamBindingConditionPtrOutputWithContext(ctx context.Context) AppEngineVersionIamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppEngineVersionIamBindingConditionOutput).ToAppEngineVersionIamBindingConditionPtrOutputWithContext(ctx)
}

// AppEngineVersionIamBindingConditionPtrInput is an input type that accepts AppEngineVersionIamBindingConditionArgs, AppEngineVersionIamBindingConditionPtr and AppEngineVersionIamBindingConditionPtrOutput values.
// You can construct a concrete instance of `AppEngineVersionIamBindingConditionPtrInput` via:
//
//	        AppEngineVersionIamBindingConditionArgs{...}
//
//	or:
//
//	        nil
type AppEngineVersionIamBindingConditionPtrInput interface {
	pulumi.Input

	ToAppEngineVersionIamBindingConditionPtrOutput() AppEngineVersionIamBindingConditionPtrOutput
	ToAppEngineVersionIamBindingConditionPtrOutputWithContext(context.Context) AppEngineVersionIamBindingConditionPtrOutput
}

type appEngineVersionIamBindingConditionPtrType AppEngineVersionIamBindingConditionArgs

func AppEngineVersionIamBindingConditionPtr(v *AppEngineVersionIamBindingConditionArgs) AppEngineVersionIamBindingConditionPtrInput {
	return (*appEngineVersionIamBindingConditionPtrType)(v)
}

func (*appEngineVersionIamBindingConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppEngineVersionIamBindingCondition)(nil)).Elem()
}

func (i *appEngineVersionIamBindingConditionPtrType) ToAppEngineVersionIamBindingConditionPtrOutput() AppEngineVersionIamBindingConditionPtrOutput {
	return i.ToAppEngineVersionIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i *appEngineVersionIamBindingConditionPtrType) ToAppEngineVersionIamBindingConditionPtrOutputWithContext(ctx context.Context) AppEngineVersionIamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppEngineVersionIamBindingConditionPtrOutput)
}

type AppEngineVersionIamBindingConditionOutput struct{ *pulumi.OutputState }

func (AppEngineVersionIamBindingConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppEngineVersionIamBindingCondition)(nil)).Elem()
}

func (o AppEngineVersionIamBindingConditionOutput) ToAppEngineVersionIamBindingConditionOutput() AppEngineVersionIamBindingConditionOutput {
	return o
}

func (o AppEngineVersionIamBindingConditionOutput) ToAppEngineVersionIamBindingConditionOutputWithContext(ctx context.Context) AppEngineVersionIamBindingConditionOutput {
	return o
}

func (o AppEngineVersionIamBindingConditionOutput) ToAppEngineVersionIamBindingConditionPtrOutput() AppEngineVersionIamBindingConditionPtrOutput {
	return o.ToAppEngineVersionIamBindingConditionPtrOutputWithContext(context.Background())
}

func (o AppEngineVersionIamBindingConditionOutput) ToAppEngineVersionIamBindingConditionPtrOutputWithContext(ctx context.Context) AppEngineVersionIamBindingConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppEngineVersionIamBindingCondition) *AppEngineVersionIamBindingCondition {
		return &v
	}).(AppEngineVersionIamBindingConditionPtrOutput)
}

// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
//
// > **Warning:** The provider considers the `role` and condition contents (`title`+`description`+`expression`) as the
// identifier for the binding. This means that if any part of the condition is changed out-of-band, the provider will
// consider it to be an entirely different resource and will treat it as such.
func (o AppEngineVersionIamBindingConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppEngineVersionIamBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o AppEngineVersionIamBindingConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v AppEngineVersionIamBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o AppEngineVersionIamBindingConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v AppEngineVersionIamBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

type AppEngineVersionIamBindingConditionPtrOutput struct{ *pulumi.OutputState }

func (AppEngineVersionIamBindingConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppEngineVersionIamBindingCondition)(nil)).Elem()
}

func (o AppEngineVersionIamBindingConditionPtrOutput) ToAppEngineVersionIamBindingConditionPtrOutput() AppEngineVersionIamBindingConditionPtrOutput {
	return o
}

func (o AppEngineVersionIamBindingConditionPtrOutput) ToAppEngineVersionIamBindingConditionPtrOutputWithContext(ctx context.Context) AppEngineVersionIamBindingConditionPtrOutput {
	return o
}

func (o AppEngineVersionIamBindingConditionPtrOutput) Elem() AppEngineVersionIamBindingConditionOutput {
	return o.ApplyT(func(v *AppEngineVersionIamBindingCondition) AppEngineVersionIamBindingCondition {
		if v != nil {
			return *v
		}
		var ret AppEngineVersionIamBindingCondition
		return ret
	}).(AppEngineVersionIamBindingConditionOutput)
}

// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
//
// > **Warning:** The provider considers the `role` and condition contents (`title`+`description`+`expression`) as the
// identifier for the binding. This means that if any part of the condition is changed out-of-band, the provider will
// consider it to be an entirely different resource and will treat it as such.
func (o AppEngineVersionIamBindingConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppEngineVersionIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o AppEngineVersionIamBindingConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppEngineVersionIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o AppEngineVersionIamBindingConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppEngineVersionIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type AppEngineVersionIamMemberCondition struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	//
	// > **Warning:** The provider considers the `role` and condition contents (`title`+`description`+`expression`) as the
	// identifier for the binding. This means that if any part of the condition is changed out-of-band, the provider will
	// consider it to be an entirely different resource and will treat it as such.
	Description *string `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression string `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title string `pulumi:"title"`
}

// AppEngineVersionIamMemberConditionInput is an input type that accepts AppEngineVersionIamMemberConditionArgs and AppEngineVersionIamMemberConditionOutput values.
// You can construct a concrete instance of `AppEngineVersionIamMemberConditionInput` via:
//
//	AppEngineVersionIamMemberConditionArgs{...}
type AppEngineVersionIamMemberConditionInput interface {
	pulumi.Input

	ToAppEngineVersionIamMemberConditionOutput() AppEngineVersionIamMemberConditionOutput
	ToAppEngineVersionIamMemberConditionOutputWithContext(context.Context) AppEngineVersionIamMemberConditionOutput
}

type AppEngineVersionIamMemberConditionArgs struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	//
	// > **Warning:** The provider considers the `role` and condition contents (`title`+`description`+`expression`) as the
	// identifier for the binding. This means that if any part of the condition is changed out-of-band, the provider will
	// consider it to be an entirely different resource and will treat it as such.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression pulumi.StringInput `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title pulumi.StringInput `pulumi:"title"`
}

func (AppEngineVersionIamMemberConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppEngineVersionIamMemberCondition)(nil)).Elem()
}

func (i AppEngineVersionIamMemberConditionArgs) ToAppEngineVersionIamMemberConditionOutput() AppEngineVersionIamMemberConditionOutput {
	return i.ToAppEngineVersionIamMemberConditionOutputWithContext(context.Background())
}

func (i AppEngineVersionIamMemberConditionArgs) ToAppEngineVersionIamMemberConditionOutputWithContext(ctx context.Context) AppEngineVersionIamMemberConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppEngineVersionIamMemberConditionOutput)
}

func (i AppEngineVersionIamMemberConditionArgs) ToAppEngineVersionIamMemberConditionPtrOutput() AppEngineVersionIamMemberConditionPtrOutput {
	return i.ToAppEngineVersionIamMemberConditionPtrOutputWithContext(context.Background())
}

func (i AppEngineVersionIamMemberConditionArgs) ToAppEngineVersionIamMemberConditionPtrOutputWithContext(ctx context.Context) AppEngineVersionIamMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppEngineVersionIamMemberConditionOutput).ToAppEngineVersionIamMemberConditionPtrOutputWithContext(ctx)
}

// AppEngineVersionIamMemberConditionPtrInput is an input type that accepts AppEngineVersionIamMemberConditionArgs, AppEngineVersionIamMemberConditionPtr and AppEngineVersionIamMemberConditionPtrOutput values.
// You can construct a concrete instance of `AppEngineVersionIamMemberConditionPtrInput` via:
//
//	        AppEngineVersionIamMemberConditionArgs{...}
//
//	or:
//
//	        nil
type AppEngineVersionIamMemberConditionPtrInput interface {
	pulumi.Input

	ToAppEngineVersionIamMemberConditionPtrOutput() AppEngineVersionIamMemberConditionPtrOutput
	ToAppEngineVersionIamMemberConditionPtrOutputWithContext(context.Context) AppEngineVersionIamMemberConditionPtrOutput
}

type appEngineVersionIamMemberConditionPtrType AppEngineVersionIamMemberConditionArgs

func AppEngineVersionIamMemberConditionPtr(v *AppEngineVersionIamMemberConditionArgs) AppEngineVersionIamMemberConditionPtrInput {
	return (*appEngineVersionIamMemberConditionPtrType)(v)
}

func (*appEngineVersionIamMemberConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppEngineVersionIamMemberCondition)(nil)).Elem()
}

func (i *appEngineVersionIamMemberConditionPtrType) ToAppEngineVersionIamMemberConditionPtrOutput() AppEngineVersionIamMemberConditionPtrOutput {
	return i.ToAppEngineVersionIamMemberConditionPtrOutputWithContext(context.Background())
}

func (i *appEngineVersionIamMemberConditionPtrType) ToAppEngineVersionIamMemberConditionPtrOutputWithContext(ctx context.Context) AppEngineVersionIamMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppEngineVersionIamMemberConditionPtrOutput)
}

type AppEngineVersionIamMemberConditionOutput struct{ *pulumi.OutputState }

func (AppEngineVersionIamMemberConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppEngineVersionIamMemberCondition)(nil)).Elem()
}

func (o AppEngineVersionIamMemberConditionOutput) ToAppEngineVersionIamMemberConditionOutput() AppEngineVersionIamMemberConditionOutput {
	return o
}

func (o AppEngineVersionIamMemberConditionOutput) ToAppEngineVersionIamMemberConditionOutputWithContext(ctx context.Context) AppEngineVersionIamMemberConditionOutput {
	return o
}

func (o AppEngineVersionIamMemberConditionOutput) ToAppEngineVersionIamMemberConditionPtrOutput() AppEngineVersionIamMemberConditionPtrOutput {
	return o.ToAppEngineVersionIamMemberConditionPtrOutputWithContext(context.Background())
}

func (o AppEngineVersionIamMemberConditionOutput) ToAppEngineVersionIamMemberConditionPtrOutputWithContext(ctx context.Context) AppEngineVersionIamMemberConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppEngineVersionIamMemberCondition) *AppEngineVersionIamMemberCondition {
		return &v
	}).(AppEngineVersionIamMemberConditionPtrOutput)
}

// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
//
// > **Warning:** The provider considers the `role` and condition contents (`title`+`description`+`expression`) as the
// identifier for the binding. This means that if any part of the condition is changed out-of-band, the provider will
// consider it to be an entirely different resource and will treat it as such.
func (o AppEngineVersionIamMemberConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppEngineVersionIamMemberCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o AppEngineVersionIamMemberConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v AppEngineVersionIamMemberCondition) string { return v.Expression }).(pulumi.StringOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o AppEngineVersionIamMemberConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v AppEngineVersionIamMemberCondition) string { return v.Title }).(pulumi.StringOutput)
}

type AppEngineVersionIamMemberConditionPtrOutput struct{ *pulumi.OutputState }

func (AppEngineVersionIamMemberConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppEngineVersionIamMemberCondition)(nil)).Elem()
}

func (o AppEngineVersionIamMemberConditionPtrOutput) ToAppEngineVersionIamMemberConditionPtrOutput() AppEngineVersionIamMemberConditionPtrOutput {
	return o
}

func (o AppEngineVersionIamMemberConditionPtrOutput) ToAppEngineVersionIamMemberConditionPtrOutputWithContext(ctx context.Context) AppEngineVersionIamMemberConditionPtrOutput {
	return o
}

func (o AppEngineVersionIamMemberConditionPtrOutput) Elem() AppEngineVersionIamMemberConditionOutput {
	return o.ApplyT(func(v *AppEngineVersionIamMemberCondition) AppEngineVersionIamMemberCondition {
		if v != nil {
			return *v
		}
		var ret AppEngineVersionIamMemberCondition
		return ret
	}).(AppEngineVersionIamMemberConditionOutput)
}

// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
//
// > **Warning:** The provider considers the `role` and condition contents (`title`+`description`+`expression`) as the
// identifier for the binding. This means that if any part of the condition is changed out-of-band, the provider will
// consider it to be an entirely different resource and will treat it as such.
func (o AppEngineVersionIamMemberConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppEngineVersionIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o AppEngineVersionIamMemberConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppEngineVersionIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o AppEngineVersionIamMemberConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppEngineVersionIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type SettingsAccessSettings struct {
	// Settings to configure and enable allowed domains.
	// Structure is documented below.
	AllowedDomainsSettings *SettingsAccessSettingsAllowedDomainsSettings `pulumi:"allowedDomainsSettings"`
	// Configuration to allow cross-origin requests via IAP.
	// Structure is documented below.
	CorsSettings *SettingsAccessSettingsCorsSettings `pulumi:"corsSettings"`
	// GCIP claims and endpoint configurations for 3p identity providers.
	// * Enabling gcipSetting significantly changes the way IAP authenticates users. Identity Platform does not support IAM, so IAP will not enforce any IAM policies for requests to your application.
	//   Structure is documented below.
	GcipSettings *SettingsAccessSettingsGcipSettings `pulumi:"gcipSettings"`
	// Identity sources that IAP can use to authenticate the end user. Only one identity source
	// can be configured. The possible values are:
	// * `WORKFORCE_IDENTITY_FEDERATION`: Use external identities set up on Google Cloud Workforce
	//   Identity Federation.
	//   Each value may be one of: `WORKFORCE_IDENTITY_FEDERATION`.
	IdentitySources []string `pulumi:"identitySources"`
	// Settings to configure IAP's OAuth behavior.
	// Structure is documented below.
	OauthSettings *SettingsAccessSettingsOauthSettings `pulumi:"oauthSettings"`
	// Settings to configure reauthentication policies in IAP.
	// Structure is documented below.
	ReauthSettings *SettingsAccessSettingsReauthSettings `pulumi:"reauthSettings"`
	// Settings to configure the workforce identity federation, including workforce pools
	// and OAuth 2.0 settings.
	// Structure is documented below.
	WorkforceIdentitySettings *SettingsAccessSettingsWorkforceIdentitySettings `pulumi:"workforceIdentitySettings"`
}

// SettingsAccessSettingsInput is an input type that accepts SettingsAccessSettingsArgs and SettingsAccessSettingsOutput values.
// You can construct a concrete instance of `SettingsAccessSettingsInput` via:
//
//	SettingsAccessSettingsArgs{...}
type SettingsAccessSettingsInput interface {
	pulumi.Input

	ToSettingsAccessSettingsOutput() SettingsAccessSettingsOutput
	ToSettingsAccessSettingsOutputWithContext(context.Context) SettingsAccessSettingsOutput
}

type SettingsAccessSettingsArgs struct {
	// Settings to configure and enable allowed domains.
	// Structure is documented below.
	AllowedDomainsSettings SettingsAccessSettingsAllowedDomainsSettingsPtrInput `pulumi:"allowedDomainsSettings"`
	// Configuration to allow cross-origin requests via IAP.
	// Structure is documented below.
	CorsSettings SettingsAccessSettingsCorsSettingsPtrInput `pulumi:"corsSettings"`
	// GCIP claims and endpoint configurations for 3p identity providers.
	// * Enabling gcipSetting significantly changes the way IAP authenticates users. Identity Platform does not support IAM, so IAP will not enforce any IAM policies for requests to your application.
	//   Structure is documented below.
	GcipSettings SettingsAccessSettingsGcipSettingsPtrInput `pulumi:"gcipSettings"`
	// Identity sources that IAP can use to authenticate the end user. Only one identity source
	// can be configured. The possible values are:
	// * `WORKFORCE_IDENTITY_FEDERATION`: Use external identities set up on Google Cloud Workforce
	//   Identity Federation.
	//   Each value may be one of: `WORKFORCE_IDENTITY_FEDERATION`.
	IdentitySources pulumi.StringArrayInput `pulumi:"identitySources"`
	// Settings to configure IAP's OAuth behavior.
	// Structure is documented below.
	OauthSettings SettingsAccessSettingsOauthSettingsPtrInput `pulumi:"oauthSettings"`
	// Settings to configure reauthentication policies in IAP.
	// Structure is documented below.
	ReauthSettings SettingsAccessSettingsReauthSettingsPtrInput `pulumi:"reauthSettings"`
	// Settings to configure the workforce identity federation, including workforce pools
	// and OAuth 2.0 settings.
	// Structure is documented below.
	WorkforceIdentitySettings SettingsAccessSettingsWorkforceIdentitySettingsPtrInput `pulumi:"workforceIdentitySettings"`
}

func (SettingsAccessSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingsAccessSettings)(nil)).Elem()
}

func (i SettingsAccessSettingsArgs) ToSettingsAccessSettingsOutput() SettingsAccessSettingsOutput {
	return i.ToSettingsAccessSettingsOutputWithContext(context.Background())
}

func (i SettingsAccessSettingsArgs) ToSettingsAccessSettingsOutputWithContext(ctx context.Context) SettingsAccessSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsAccessSettingsOutput)
}

func (i SettingsAccessSettingsArgs) ToSettingsAccessSettingsPtrOutput() SettingsAccessSettingsPtrOutput {
	return i.ToSettingsAccessSettingsPtrOutputWithContext(context.Background())
}

func (i SettingsAccessSettingsArgs) ToSettingsAccessSettingsPtrOutputWithContext(ctx context.Context) SettingsAccessSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsAccessSettingsOutput).ToSettingsAccessSettingsPtrOutputWithContext(ctx)
}

// SettingsAccessSettingsPtrInput is an input type that accepts SettingsAccessSettingsArgs, SettingsAccessSettingsPtr and SettingsAccessSettingsPtrOutput values.
// You can construct a concrete instance of `SettingsAccessSettingsPtrInput` via:
//
//	        SettingsAccessSettingsArgs{...}
//
//	or:
//
//	        nil
type SettingsAccessSettingsPtrInput interface {
	pulumi.Input

	ToSettingsAccessSettingsPtrOutput() SettingsAccessSettingsPtrOutput
	ToSettingsAccessSettingsPtrOutputWithContext(context.Context) SettingsAccessSettingsPtrOutput
}

type settingsAccessSettingsPtrType SettingsAccessSettingsArgs

func SettingsAccessSettingsPtr(v *SettingsAccessSettingsArgs) SettingsAccessSettingsPtrInput {
	return (*settingsAccessSettingsPtrType)(v)
}

func (*settingsAccessSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingsAccessSettings)(nil)).Elem()
}

func (i *settingsAccessSettingsPtrType) ToSettingsAccessSettingsPtrOutput() SettingsAccessSettingsPtrOutput {
	return i.ToSettingsAccessSettingsPtrOutputWithContext(context.Background())
}

func (i *settingsAccessSettingsPtrType) ToSettingsAccessSettingsPtrOutputWithContext(ctx context.Context) SettingsAccessSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsAccessSettingsPtrOutput)
}

type SettingsAccessSettingsOutput struct{ *pulumi.OutputState }

func (SettingsAccessSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingsAccessSettings)(nil)).Elem()
}

func (o SettingsAccessSettingsOutput) ToSettingsAccessSettingsOutput() SettingsAccessSettingsOutput {
	return o
}

func (o SettingsAccessSettingsOutput) ToSettingsAccessSettingsOutputWithContext(ctx context.Context) SettingsAccessSettingsOutput {
	return o
}

func (o SettingsAccessSettingsOutput) ToSettingsAccessSettingsPtrOutput() SettingsAccessSettingsPtrOutput {
	return o.ToSettingsAccessSettingsPtrOutputWithContext(context.Background())
}

func (o SettingsAccessSettingsOutput) ToSettingsAccessSettingsPtrOutputWithContext(ctx context.Context) SettingsAccessSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SettingsAccessSettings) *SettingsAccessSettings {
		return &v
	}).(SettingsAccessSettingsPtrOutput)
}

// Settings to configure and enable allowed domains.
// Structure is documented below.
func (o SettingsAccessSettingsOutput) AllowedDomainsSettings() SettingsAccessSettingsAllowedDomainsSettingsPtrOutput {
	return o.ApplyT(func(v SettingsAccessSettings) *SettingsAccessSettingsAllowedDomainsSettings {
		return v.AllowedDomainsSettings
	}).(SettingsAccessSettingsAllowedDomainsSettingsPtrOutput)
}

// Configuration to allow cross-origin requests via IAP.
// Structure is documented below.
func (o SettingsAccessSettingsOutput) CorsSettings() SettingsAccessSettingsCorsSettingsPtrOutput {
	return o.ApplyT(func(v SettingsAccessSettings) *SettingsAccessSettingsCorsSettings { return v.CorsSettings }).(SettingsAccessSettingsCorsSettingsPtrOutput)
}

// GCIP claims and endpoint configurations for 3p identity providers.
//   - Enabling gcipSetting significantly changes the way IAP authenticates users. Identity Platform does not support IAM, so IAP will not enforce any IAM policies for requests to your application.
//     Structure is documented below.
func (o SettingsAccessSettingsOutput) GcipSettings() SettingsAccessSettingsGcipSettingsPtrOutput {
	return o.ApplyT(func(v SettingsAccessSettings) *SettingsAccessSettingsGcipSettings { return v.GcipSettings }).(SettingsAccessSettingsGcipSettingsPtrOutput)
}

// Identity sources that IAP can use to authenticate the end user. Only one identity source
// can be configured. The possible values are:
//   - `WORKFORCE_IDENTITY_FEDERATION`: Use external identities set up on Google Cloud Workforce
//     Identity Federation.
//     Each value may be one of: `WORKFORCE_IDENTITY_FEDERATION`.
func (o SettingsAccessSettingsOutput) IdentitySources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SettingsAccessSettings) []string { return v.IdentitySources }).(pulumi.StringArrayOutput)
}

// Settings to configure IAP's OAuth behavior.
// Structure is documented below.
func (o SettingsAccessSettingsOutput) OauthSettings() SettingsAccessSettingsOauthSettingsPtrOutput {
	return o.ApplyT(func(v SettingsAccessSettings) *SettingsAccessSettingsOauthSettings { return v.OauthSettings }).(SettingsAccessSettingsOauthSettingsPtrOutput)
}

// Settings to configure reauthentication policies in IAP.
// Structure is documented below.
func (o SettingsAccessSettingsOutput) ReauthSettings() SettingsAccessSettingsReauthSettingsPtrOutput {
	return o.ApplyT(func(v SettingsAccessSettings) *SettingsAccessSettingsReauthSettings { return v.ReauthSettings }).(SettingsAccessSettingsReauthSettingsPtrOutput)
}

// Settings to configure the workforce identity federation, including workforce pools
// and OAuth 2.0 settings.
// Structure is documented below.
func (o SettingsAccessSettingsOutput) WorkforceIdentitySettings() SettingsAccessSettingsWorkforceIdentitySettingsPtrOutput {
	return o.ApplyT(func(v SettingsAccessSettings) *SettingsAccessSettingsWorkforceIdentitySettings {
		return v.WorkforceIdentitySettings
	}).(SettingsAccessSettingsWorkforceIdentitySettingsPtrOutput)
}

type SettingsAccessSettingsPtrOutput struct{ *pulumi.OutputState }

func (SettingsAccessSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingsAccessSettings)(nil)).Elem()
}

func (o SettingsAccessSettingsPtrOutput) ToSettingsAccessSettingsPtrOutput() SettingsAccessSettingsPtrOutput {
	return o
}

func (o SettingsAccessSettingsPtrOutput) ToSettingsAccessSettingsPtrOutputWithContext(ctx context.Context) SettingsAccessSettingsPtrOutput {
	return o
}

func (o SettingsAccessSettingsPtrOutput) Elem() SettingsAccessSettingsOutput {
	return o.ApplyT(func(v *SettingsAccessSettings) SettingsAccessSettings {
		if v != nil {
			return *v
		}
		var ret SettingsAccessSettings
		return ret
	}).(SettingsAccessSettingsOutput)
}

// Settings to configure and enable allowed domains.
// Structure is documented below.
func (o SettingsAccessSettingsPtrOutput) AllowedDomainsSettings() SettingsAccessSettingsAllowedDomainsSettingsPtrOutput {
	return o.ApplyT(func(v *SettingsAccessSettings) *SettingsAccessSettingsAllowedDomainsSettings {
		if v == nil {
			return nil
		}
		return v.AllowedDomainsSettings
	}).(SettingsAccessSettingsAllowedDomainsSettingsPtrOutput)
}

// Configuration to allow cross-origin requests via IAP.
// Structure is documented below.
func (o SettingsAccessSettingsPtrOutput) CorsSettings() SettingsAccessSettingsCorsSettingsPtrOutput {
	return o.ApplyT(func(v *SettingsAccessSettings) *SettingsAccessSettingsCorsSettings {
		if v == nil {
			return nil
		}
		return v.CorsSettings
	}).(SettingsAccessSettingsCorsSettingsPtrOutput)
}

// GCIP claims and endpoint configurations for 3p identity providers.
//   - Enabling gcipSetting significantly changes the way IAP authenticates users. Identity Platform does not support IAM, so IAP will not enforce any IAM policies for requests to your application.
//     Structure is documented below.
func (o SettingsAccessSettingsPtrOutput) GcipSettings() SettingsAccessSettingsGcipSettingsPtrOutput {
	return o.ApplyT(func(v *SettingsAccessSettings) *SettingsAccessSettingsGcipSettings {
		if v == nil {
			return nil
		}
		return v.GcipSettings
	}).(SettingsAccessSettingsGcipSettingsPtrOutput)
}

// Identity sources that IAP can use to authenticate the end user. Only one identity source
// can be configured. The possible values are:
//   - `WORKFORCE_IDENTITY_FEDERATION`: Use external identities set up on Google Cloud Workforce
//     Identity Federation.
//     Each value may be one of: `WORKFORCE_IDENTITY_FEDERATION`.
func (o SettingsAccessSettingsPtrOutput) IdentitySources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SettingsAccessSettings) []string {
		if v == nil {
			return nil
		}
		return v.IdentitySources
	}).(pulumi.StringArrayOutput)
}

// Settings to configure IAP's OAuth behavior.
// Structure is documented below.
func (o SettingsAccessSettingsPtrOutput) OauthSettings() SettingsAccessSettingsOauthSettingsPtrOutput {
	return o.ApplyT(func(v *SettingsAccessSettings) *SettingsAccessSettingsOauthSettings {
		if v == nil {
			return nil
		}
		return v.OauthSettings
	}).(SettingsAccessSettingsOauthSettingsPtrOutput)
}

// Settings to configure reauthentication policies in IAP.
// Structure is documented below.
func (o SettingsAccessSettingsPtrOutput) ReauthSettings() SettingsAccessSettingsReauthSettingsPtrOutput {
	return o.ApplyT(func(v *SettingsAccessSettings) *SettingsAccessSettingsReauthSettings {
		if v == nil {
			return nil
		}
		return v.ReauthSettings
	}).(SettingsAccessSettingsReauthSettingsPtrOutput)
}

// Settings to configure the workforce identity federation, including workforce pools
// and OAuth 2.0 settings.
// Structure is documented below.
func (o SettingsAccessSettingsPtrOutput) WorkforceIdentitySettings() SettingsAccessSettingsWorkforceIdentitySettingsPtrOutput {
	return o.ApplyT(func(v *SettingsAccessSettings) *SettingsAccessSettingsWorkforceIdentitySettings {
		if v == nil {
			return nil
		}
		return v.WorkforceIdentitySettings
	}).(SettingsAccessSettingsWorkforceIdentitySettingsPtrOutput)
}

type SettingsAccessSettingsAllowedDomainsSettings struct {
	// List of trusted domains.
	Domains []string `pulumi:"domains"`
	// Configuration for customers to opt in for the feature.
	Enable *bool `pulumi:"enable"`
}

// SettingsAccessSettingsAllowedDomainsSettingsInput is an input type that accepts SettingsAccessSettingsAllowedDomainsSettingsArgs and SettingsAccessSettingsAllowedDomainsSettingsOutput values.
// You can construct a concrete instance of `SettingsAccessSettingsAllowedDomainsSettingsInput` via:
//
//	SettingsAccessSettingsAllowedDomainsSettingsArgs{...}
type SettingsAccessSettingsAllowedDomainsSettingsInput interface {
	pulumi.Input

	ToSettingsAccessSettingsAllowedDomainsSettingsOutput() SettingsAccessSettingsAllowedDomainsSettingsOutput
	ToSettingsAccessSettingsAllowedDomainsSettingsOutputWithContext(context.Context) SettingsAccessSettingsAllowedDomainsSettingsOutput
}

type SettingsAccessSettingsAllowedDomainsSettingsArgs struct {
	// List of trusted domains.
	Domains pulumi.StringArrayInput `pulumi:"domains"`
	// Configuration for customers to opt in for the feature.
	Enable pulumi.BoolPtrInput `pulumi:"enable"`
}

func (SettingsAccessSettingsAllowedDomainsSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingsAccessSettingsAllowedDomainsSettings)(nil)).Elem()
}

func (i SettingsAccessSettingsAllowedDomainsSettingsArgs) ToSettingsAccessSettingsAllowedDomainsSettingsOutput() SettingsAccessSettingsAllowedDomainsSettingsOutput {
	return i.ToSettingsAccessSettingsAllowedDomainsSettingsOutputWithContext(context.Background())
}

func (i SettingsAccessSettingsAllowedDomainsSettingsArgs) ToSettingsAccessSettingsAllowedDomainsSettingsOutputWithContext(ctx context.Context) SettingsAccessSettingsAllowedDomainsSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsAccessSettingsAllowedDomainsSettingsOutput)
}

func (i SettingsAccessSettingsAllowedDomainsSettingsArgs) ToSettingsAccessSettingsAllowedDomainsSettingsPtrOutput() SettingsAccessSettingsAllowedDomainsSettingsPtrOutput {
	return i.ToSettingsAccessSettingsAllowedDomainsSettingsPtrOutputWithContext(context.Background())
}

func (i SettingsAccessSettingsAllowedDomainsSettingsArgs) ToSettingsAccessSettingsAllowedDomainsSettingsPtrOutputWithContext(ctx context.Context) SettingsAccessSettingsAllowedDomainsSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsAccessSettingsAllowedDomainsSettingsOutput).ToSettingsAccessSettingsAllowedDomainsSettingsPtrOutputWithContext(ctx)
}

// SettingsAccessSettingsAllowedDomainsSettingsPtrInput is an input type that accepts SettingsAccessSettingsAllowedDomainsSettingsArgs, SettingsAccessSettingsAllowedDomainsSettingsPtr and SettingsAccessSettingsAllowedDomainsSettingsPtrOutput values.
// You can construct a concrete instance of `SettingsAccessSettingsAllowedDomainsSettingsPtrInput` via:
//
//	        SettingsAccessSettingsAllowedDomainsSettingsArgs{...}
//
//	or:
//
//	        nil
type SettingsAccessSettingsAllowedDomainsSettingsPtrInput interface {
	pulumi.Input

	ToSettingsAccessSettingsAllowedDomainsSettingsPtrOutput() SettingsAccessSettingsAllowedDomainsSettingsPtrOutput
	ToSettingsAccessSettingsAllowedDomainsSettingsPtrOutputWithContext(context.Context) SettingsAccessSettingsAllowedDomainsSettingsPtrOutput
}

type settingsAccessSettingsAllowedDomainsSettingsPtrType SettingsAccessSettingsAllowedDomainsSettingsArgs

func SettingsAccessSettingsAllowedDomainsSettingsPtr(v *SettingsAccessSettingsAllowedDomainsSettingsArgs) SettingsAccessSettingsAllowedDomainsSettingsPtrInput {
	return (*settingsAccessSettingsAllowedDomainsSettingsPtrType)(v)
}

func (*settingsAccessSettingsAllowedDomainsSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingsAccessSettingsAllowedDomainsSettings)(nil)).Elem()
}

func (i *settingsAccessSettingsAllowedDomainsSettingsPtrType) ToSettingsAccessSettingsAllowedDomainsSettingsPtrOutput() SettingsAccessSettingsAllowedDomainsSettingsPtrOutput {
	return i.ToSettingsAccessSettingsAllowedDomainsSettingsPtrOutputWithContext(context.Background())
}

func (i *settingsAccessSettingsAllowedDomainsSettingsPtrType) ToSettingsAccessSettingsAllowedDomainsSettingsPtrOutputWithContext(ctx context.Context) SettingsAccessSettingsAllowedDomainsSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsAccessSettingsAllowedDomainsSettingsPtrOutput)
}

type SettingsAccessSettingsAllowedDomainsSettingsOutput struct{ *pulumi.OutputState }

func (SettingsAccessSettingsAllowedDomainsSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingsAccessSettingsAllowedDomainsSettings)(nil)).Elem()
}

func (o SettingsAccessSettingsAllowedDomainsSettingsOutput) ToSettingsAccessSettingsAllowedDomainsSettingsOutput() SettingsAccessSettingsAllowedDomainsSettingsOutput {
	return o
}

func (o SettingsAccessSettingsAllowedDomainsSettingsOutput) ToSettingsAccessSettingsAllowedDomainsSettingsOutputWithContext(ctx context.Context) SettingsAccessSettingsAllowedDomainsSettingsOutput {
	return o
}

func (o SettingsAccessSettingsAllowedDomainsSettingsOutput) ToSettingsAccessSettingsAllowedDomainsSettingsPtrOutput() SettingsAccessSettingsAllowedDomainsSettingsPtrOutput {
	return o.ToSettingsAccessSettingsAllowedDomainsSettingsPtrOutputWithContext(context.Background())
}

func (o SettingsAccessSettingsAllowedDomainsSettingsOutput) ToSettingsAccessSettingsAllowedDomainsSettingsPtrOutputWithContext(ctx context.Context) SettingsAccessSettingsAllowedDomainsSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SettingsAccessSettingsAllowedDomainsSettings) *SettingsAccessSettingsAllowedDomainsSettings {
		return &v
	}).(SettingsAccessSettingsAllowedDomainsSettingsPtrOutput)
}

// List of trusted domains.
func (o SettingsAccessSettingsAllowedDomainsSettingsOutput) Domains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SettingsAccessSettingsAllowedDomainsSettings) []string { return v.Domains }).(pulumi.StringArrayOutput)
}

// Configuration for customers to opt in for the feature.
func (o SettingsAccessSettingsAllowedDomainsSettingsOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SettingsAccessSettingsAllowedDomainsSettings) *bool { return v.Enable }).(pulumi.BoolPtrOutput)
}

type SettingsAccessSettingsAllowedDomainsSettingsPtrOutput struct{ *pulumi.OutputState }

func (SettingsAccessSettingsAllowedDomainsSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingsAccessSettingsAllowedDomainsSettings)(nil)).Elem()
}

func (o SettingsAccessSettingsAllowedDomainsSettingsPtrOutput) ToSettingsAccessSettingsAllowedDomainsSettingsPtrOutput() SettingsAccessSettingsAllowedDomainsSettingsPtrOutput {
	return o
}

func (o SettingsAccessSettingsAllowedDomainsSettingsPtrOutput) ToSettingsAccessSettingsAllowedDomainsSettingsPtrOutputWithContext(ctx context.Context) SettingsAccessSettingsAllowedDomainsSettingsPtrOutput {
	return o
}

func (o SettingsAccessSettingsAllowedDomainsSettingsPtrOutput) Elem() SettingsAccessSettingsAllowedDomainsSettingsOutput {
	return o.ApplyT(func(v *SettingsAccessSettingsAllowedDomainsSettings) SettingsAccessSettingsAllowedDomainsSettings {
		if v != nil {
			return *v
		}
		var ret SettingsAccessSettingsAllowedDomainsSettings
		return ret
	}).(SettingsAccessSettingsAllowedDomainsSettingsOutput)
}

// List of trusted domains.
func (o SettingsAccessSettingsAllowedDomainsSettingsPtrOutput) Domains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SettingsAccessSettingsAllowedDomainsSettings) []string {
		if v == nil {
			return nil
		}
		return v.Domains
	}).(pulumi.StringArrayOutput)
}

// Configuration for customers to opt in for the feature.
func (o SettingsAccessSettingsAllowedDomainsSettingsPtrOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SettingsAccessSettingsAllowedDomainsSettings) *bool {
		if v == nil {
			return nil
		}
		return v.Enable
	}).(pulumi.BoolPtrOutput)
}

type SettingsAccessSettingsCorsSettings struct {
	// Configuration to allow HTTP OPTIONS calls to skip authorization.
	// If undefined, IAP will not apply any special logic to OPTIONS requests.
	AllowHttpOptions *bool `pulumi:"allowHttpOptions"`
}

// SettingsAccessSettingsCorsSettingsInput is an input type that accepts SettingsAccessSettingsCorsSettingsArgs and SettingsAccessSettingsCorsSettingsOutput values.
// You can construct a concrete instance of `SettingsAccessSettingsCorsSettingsInput` via:
//
//	SettingsAccessSettingsCorsSettingsArgs{...}
type SettingsAccessSettingsCorsSettingsInput interface {
	pulumi.Input

	ToSettingsAccessSettingsCorsSettingsOutput() SettingsAccessSettingsCorsSettingsOutput
	ToSettingsAccessSettingsCorsSettingsOutputWithContext(context.Context) SettingsAccessSettingsCorsSettingsOutput
}

type SettingsAccessSettingsCorsSettingsArgs struct {
	// Configuration to allow HTTP OPTIONS calls to skip authorization.
	// If undefined, IAP will not apply any special logic to OPTIONS requests.
	AllowHttpOptions pulumi.BoolPtrInput `pulumi:"allowHttpOptions"`
}

func (SettingsAccessSettingsCorsSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingsAccessSettingsCorsSettings)(nil)).Elem()
}

func (i SettingsAccessSettingsCorsSettingsArgs) ToSettingsAccessSettingsCorsSettingsOutput() SettingsAccessSettingsCorsSettingsOutput {
	return i.ToSettingsAccessSettingsCorsSettingsOutputWithContext(context.Background())
}

func (i SettingsAccessSettingsCorsSettingsArgs) ToSettingsAccessSettingsCorsSettingsOutputWithContext(ctx context.Context) SettingsAccessSettingsCorsSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsAccessSettingsCorsSettingsOutput)
}

func (i SettingsAccessSettingsCorsSettingsArgs) ToSettingsAccessSettingsCorsSettingsPtrOutput() SettingsAccessSettingsCorsSettingsPtrOutput {
	return i.ToSettingsAccessSettingsCorsSettingsPtrOutputWithContext(context.Background())
}

func (i SettingsAccessSettingsCorsSettingsArgs) ToSettingsAccessSettingsCorsSettingsPtrOutputWithContext(ctx context.Context) SettingsAccessSettingsCorsSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsAccessSettingsCorsSettingsOutput).ToSettingsAccessSettingsCorsSettingsPtrOutputWithContext(ctx)
}

// SettingsAccessSettingsCorsSettingsPtrInput is an input type that accepts SettingsAccessSettingsCorsSettingsArgs, SettingsAccessSettingsCorsSettingsPtr and SettingsAccessSettingsCorsSettingsPtrOutput values.
// You can construct a concrete instance of `SettingsAccessSettingsCorsSettingsPtrInput` via:
//
//	        SettingsAccessSettingsCorsSettingsArgs{...}
//
//	or:
//
//	        nil
type SettingsAccessSettingsCorsSettingsPtrInput interface {
	pulumi.Input

	ToSettingsAccessSettingsCorsSettingsPtrOutput() SettingsAccessSettingsCorsSettingsPtrOutput
	ToSettingsAccessSettingsCorsSettingsPtrOutputWithContext(context.Context) SettingsAccessSettingsCorsSettingsPtrOutput
}

type settingsAccessSettingsCorsSettingsPtrType SettingsAccessSettingsCorsSettingsArgs

func SettingsAccessSettingsCorsSettingsPtr(v *SettingsAccessSettingsCorsSettingsArgs) SettingsAccessSettingsCorsSettingsPtrInput {
	return (*settingsAccessSettingsCorsSettingsPtrType)(v)
}

func (*settingsAccessSettingsCorsSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingsAccessSettingsCorsSettings)(nil)).Elem()
}

func (i *settingsAccessSettingsCorsSettingsPtrType) ToSettingsAccessSettingsCorsSettingsPtrOutput() SettingsAccessSettingsCorsSettingsPtrOutput {
	return i.ToSettingsAccessSettingsCorsSettingsPtrOutputWithContext(context.Background())
}

func (i *settingsAccessSettingsCorsSettingsPtrType) ToSettingsAccessSettingsCorsSettingsPtrOutputWithContext(ctx context.Context) SettingsAccessSettingsCorsSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsAccessSettingsCorsSettingsPtrOutput)
}

type SettingsAccessSettingsCorsSettingsOutput struct{ *pulumi.OutputState }

func (SettingsAccessSettingsCorsSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingsAccessSettingsCorsSettings)(nil)).Elem()
}

func (o SettingsAccessSettingsCorsSettingsOutput) ToSettingsAccessSettingsCorsSettingsOutput() SettingsAccessSettingsCorsSettingsOutput {
	return o
}

func (o SettingsAccessSettingsCorsSettingsOutput) ToSettingsAccessSettingsCorsSettingsOutputWithContext(ctx context.Context) SettingsAccessSettingsCorsSettingsOutput {
	return o
}

func (o SettingsAccessSettingsCorsSettingsOutput) ToSettingsAccessSettingsCorsSettingsPtrOutput() SettingsAccessSettingsCorsSettingsPtrOutput {
	return o.ToSettingsAccessSettingsCorsSettingsPtrOutputWithContext(context.Background())
}

func (o SettingsAccessSettingsCorsSettingsOutput) ToSettingsAccessSettingsCorsSettingsPtrOutputWithContext(ctx context.Context) SettingsAccessSettingsCorsSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SettingsAccessSettingsCorsSettings) *SettingsAccessSettingsCorsSettings {
		return &v
	}).(SettingsAccessSettingsCorsSettingsPtrOutput)
}

// Configuration to allow HTTP OPTIONS calls to skip authorization.
// If undefined, IAP will not apply any special logic to OPTIONS requests.
func (o SettingsAccessSettingsCorsSettingsOutput) AllowHttpOptions() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SettingsAccessSettingsCorsSettings) *bool { return v.AllowHttpOptions }).(pulumi.BoolPtrOutput)
}

type SettingsAccessSettingsCorsSettingsPtrOutput struct{ *pulumi.OutputState }

func (SettingsAccessSettingsCorsSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingsAccessSettingsCorsSettings)(nil)).Elem()
}

func (o SettingsAccessSettingsCorsSettingsPtrOutput) ToSettingsAccessSettingsCorsSettingsPtrOutput() SettingsAccessSettingsCorsSettingsPtrOutput {
	return o
}

func (o SettingsAccessSettingsCorsSettingsPtrOutput) ToSettingsAccessSettingsCorsSettingsPtrOutputWithContext(ctx context.Context) SettingsAccessSettingsCorsSettingsPtrOutput {
	return o
}

func (o SettingsAccessSettingsCorsSettingsPtrOutput) Elem() SettingsAccessSettingsCorsSettingsOutput {
	return o.ApplyT(func(v *SettingsAccessSettingsCorsSettings) SettingsAccessSettingsCorsSettings {
		if v != nil {
			return *v
		}
		var ret SettingsAccessSettingsCorsSettings
		return ret
	}).(SettingsAccessSettingsCorsSettingsOutput)
}

// Configuration to allow HTTP OPTIONS calls to skip authorization.
// If undefined, IAP will not apply any special logic to OPTIONS requests.
func (o SettingsAccessSettingsCorsSettingsPtrOutput) AllowHttpOptions() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SettingsAccessSettingsCorsSettings) *bool {
		if v == nil {
			return nil
		}
		return v.AllowHttpOptions
	}).(pulumi.BoolPtrOutput)
}

type SettingsAccessSettingsGcipSettings struct {
	// Login page URI associated with the GCIP tenants. Typically, all resources within
	// the same project share the same login page, though it could be overridden at the
	// sub resource level.
	LoginPageUri *string `pulumi:"loginPageUri"`
	// GCIP tenant ids that are linked to the IAP resource. tenantIds could be a string
	// beginning with a number character to indicate authenticating with GCIP tenant flow,
	// or in the format of _ to indicate authenticating with GCIP agent flow. If agent flow
	// is used, tenantIds should only contain one single element, while for tenant flow,
	// tenantIds can contain multiple elements.
	TenantIds []string `pulumi:"tenantIds"`
}

// SettingsAccessSettingsGcipSettingsInput is an input type that accepts SettingsAccessSettingsGcipSettingsArgs and SettingsAccessSettingsGcipSettingsOutput values.
// You can construct a concrete instance of `SettingsAccessSettingsGcipSettingsInput` via:
//
//	SettingsAccessSettingsGcipSettingsArgs{...}
type SettingsAccessSettingsGcipSettingsInput interface {
	pulumi.Input

	ToSettingsAccessSettingsGcipSettingsOutput() SettingsAccessSettingsGcipSettingsOutput
	ToSettingsAccessSettingsGcipSettingsOutputWithContext(context.Context) SettingsAccessSettingsGcipSettingsOutput
}

type SettingsAccessSettingsGcipSettingsArgs struct {
	// Login page URI associated with the GCIP tenants. Typically, all resources within
	// the same project share the same login page, though it could be overridden at the
	// sub resource level.
	LoginPageUri pulumi.StringPtrInput `pulumi:"loginPageUri"`
	// GCIP tenant ids that are linked to the IAP resource. tenantIds could be a string
	// beginning with a number character to indicate authenticating with GCIP tenant flow,
	// or in the format of _ to indicate authenticating with GCIP agent flow. If agent flow
	// is used, tenantIds should only contain one single element, while for tenant flow,
	// tenantIds can contain multiple elements.
	TenantIds pulumi.StringArrayInput `pulumi:"tenantIds"`
}

func (SettingsAccessSettingsGcipSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingsAccessSettingsGcipSettings)(nil)).Elem()
}

func (i SettingsAccessSettingsGcipSettingsArgs) ToSettingsAccessSettingsGcipSettingsOutput() SettingsAccessSettingsGcipSettingsOutput {
	return i.ToSettingsAccessSettingsGcipSettingsOutputWithContext(context.Background())
}

func (i SettingsAccessSettingsGcipSettingsArgs) ToSettingsAccessSettingsGcipSettingsOutputWithContext(ctx context.Context) SettingsAccessSettingsGcipSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsAccessSettingsGcipSettingsOutput)
}

func (i SettingsAccessSettingsGcipSettingsArgs) ToSettingsAccessSettingsGcipSettingsPtrOutput() SettingsAccessSettingsGcipSettingsPtrOutput {
	return i.ToSettingsAccessSettingsGcipSettingsPtrOutputWithContext(context.Background())
}

func (i SettingsAccessSettingsGcipSettingsArgs) ToSettingsAccessSettingsGcipSettingsPtrOutputWithContext(ctx context.Context) SettingsAccessSettingsGcipSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsAccessSettingsGcipSettingsOutput).ToSettingsAccessSettingsGcipSettingsPtrOutputWithContext(ctx)
}

// SettingsAccessSettingsGcipSettingsPtrInput is an input type that accepts SettingsAccessSettingsGcipSettingsArgs, SettingsAccessSettingsGcipSettingsPtr and SettingsAccessSettingsGcipSettingsPtrOutput values.
// You can construct a concrete instance of `SettingsAccessSettingsGcipSettingsPtrInput` via:
//
//	        SettingsAccessSettingsGcipSettingsArgs{...}
//
//	or:
//
//	        nil
type SettingsAccessSettingsGcipSettingsPtrInput interface {
	pulumi.Input

	ToSettingsAccessSettingsGcipSettingsPtrOutput() SettingsAccessSettingsGcipSettingsPtrOutput
	ToSettingsAccessSettingsGcipSettingsPtrOutputWithContext(context.Context) SettingsAccessSettingsGcipSettingsPtrOutput
}

type settingsAccessSettingsGcipSettingsPtrType SettingsAccessSettingsGcipSettingsArgs

func SettingsAccessSettingsGcipSettingsPtr(v *SettingsAccessSettingsGcipSettingsArgs) SettingsAccessSettingsGcipSettingsPtrInput {
	return (*settingsAccessSettingsGcipSettingsPtrType)(v)
}

func (*settingsAccessSettingsGcipSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingsAccessSettingsGcipSettings)(nil)).Elem()
}

func (i *settingsAccessSettingsGcipSettingsPtrType) ToSettingsAccessSettingsGcipSettingsPtrOutput() SettingsAccessSettingsGcipSettingsPtrOutput {
	return i.ToSettingsAccessSettingsGcipSettingsPtrOutputWithContext(context.Background())
}

func (i *settingsAccessSettingsGcipSettingsPtrType) ToSettingsAccessSettingsGcipSettingsPtrOutputWithContext(ctx context.Context) SettingsAccessSettingsGcipSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsAccessSettingsGcipSettingsPtrOutput)
}

type SettingsAccessSettingsGcipSettingsOutput struct{ *pulumi.OutputState }

func (SettingsAccessSettingsGcipSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingsAccessSettingsGcipSettings)(nil)).Elem()
}

func (o SettingsAccessSettingsGcipSettingsOutput) ToSettingsAccessSettingsGcipSettingsOutput() SettingsAccessSettingsGcipSettingsOutput {
	return o
}

func (o SettingsAccessSettingsGcipSettingsOutput) ToSettingsAccessSettingsGcipSettingsOutputWithContext(ctx context.Context) SettingsAccessSettingsGcipSettingsOutput {
	return o
}

func (o SettingsAccessSettingsGcipSettingsOutput) ToSettingsAccessSettingsGcipSettingsPtrOutput() SettingsAccessSettingsGcipSettingsPtrOutput {
	return o.ToSettingsAccessSettingsGcipSettingsPtrOutputWithContext(context.Background())
}

func (o SettingsAccessSettingsGcipSettingsOutput) ToSettingsAccessSettingsGcipSettingsPtrOutputWithContext(ctx context.Context) SettingsAccessSettingsGcipSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SettingsAccessSettingsGcipSettings) *SettingsAccessSettingsGcipSettings {
		return &v
	}).(SettingsAccessSettingsGcipSettingsPtrOutput)
}

// Login page URI associated with the GCIP tenants. Typically, all resources within
// the same project share the same login page, though it could be overridden at the
// sub resource level.
func (o SettingsAccessSettingsGcipSettingsOutput) LoginPageUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SettingsAccessSettingsGcipSettings) *string { return v.LoginPageUri }).(pulumi.StringPtrOutput)
}

// GCIP tenant ids that are linked to the IAP resource. tenantIds could be a string
// beginning with a number character to indicate authenticating with GCIP tenant flow,
// or in the format of _ to indicate authenticating with GCIP agent flow. If agent flow
// is used, tenantIds should only contain one single element, while for tenant flow,
// tenantIds can contain multiple elements.
func (o SettingsAccessSettingsGcipSettingsOutput) TenantIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SettingsAccessSettingsGcipSettings) []string { return v.TenantIds }).(pulumi.StringArrayOutput)
}

type SettingsAccessSettingsGcipSettingsPtrOutput struct{ *pulumi.OutputState }

func (SettingsAccessSettingsGcipSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingsAccessSettingsGcipSettings)(nil)).Elem()
}

func (o SettingsAccessSettingsGcipSettingsPtrOutput) ToSettingsAccessSettingsGcipSettingsPtrOutput() SettingsAccessSettingsGcipSettingsPtrOutput {
	return o
}

func (o SettingsAccessSettingsGcipSettingsPtrOutput) ToSettingsAccessSettingsGcipSettingsPtrOutputWithContext(ctx context.Context) SettingsAccessSettingsGcipSettingsPtrOutput {
	return o
}

func (o SettingsAccessSettingsGcipSettingsPtrOutput) Elem() SettingsAccessSettingsGcipSettingsOutput {
	return o.ApplyT(func(v *SettingsAccessSettingsGcipSettings) SettingsAccessSettingsGcipSettings {
		if v != nil {
			return *v
		}
		var ret SettingsAccessSettingsGcipSettings
		return ret
	}).(SettingsAccessSettingsGcipSettingsOutput)
}

// Login page URI associated with the GCIP tenants. Typically, all resources within
// the same project share the same login page, though it could be overridden at the
// sub resource level.
func (o SettingsAccessSettingsGcipSettingsPtrOutput) LoginPageUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SettingsAccessSettingsGcipSettings) *string {
		if v == nil {
			return nil
		}
		return v.LoginPageUri
	}).(pulumi.StringPtrOutput)
}

// GCIP tenant ids that are linked to the IAP resource. tenantIds could be a string
// beginning with a number character to indicate authenticating with GCIP tenant flow,
// or in the format of _ to indicate authenticating with GCIP agent flow. If agent flow
// is used, tenantIds should only contain one single element, while for tenant flow,
// tenantIds can contain multiple elements.
func (o SettingsAccessSettingsGcipSettingsPtrOutput) TenantIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SettingsAccessSettingsGcipSettings) []string {
		if v == nil {
			return nil
		}
		return v.TenantIds
	}).(pulumi.StringArrayOutput)
}

type SettingsAccessSettingsOauthSettings struct {
	// Domain hint to send as hd=? parameter in OAuth request flow.
	// Enables redirect to primary IDP by skipping Google's login screen.
	// (https://developers.google.com/identity/protocols/OpenIDConnect#hd-param)
	// Note: IAP does not verify that the id token's hd claim matches this value
	// since access behavior is managed by IAM policies.
	// * loginHint setting is not a replacement for access control. Always enforce an appropriate access policy if you want to restrict access to users outside your domain.
	LoginHint *string `pulumi:"loginHint"`
	// List of client ids allowed to use IAP programmatically.
	ProgrammaticClients []string `pulumi:"programmaticClients"`
}

// SettingsAccessSettingsOauthSettingsInput is an input type that accepts SettingsAccessSettingsOauthSettingsArgs and SettingsAccessSettingsOauthSettingsOutput values.
// You can construct a concrete instance of `SettingsAccessSettingsOauthSettingsInput` via:
//
//	SettingsAccessSettingsOauthSettingsArgs{...}
type SettingsAccessSettingsOauthSettingsInput interface {
	pulumi.Input

	ToSettingsAccessSettingsOauthSettingsOutput() SettingsAccessSettingsOauthSettingsOutput
	ToSettingsAccessSettingsOauthSettingsOutputWithContext(context.Context) SettingsAccessSettingsOauthSettingsOutput
}

type SettingsAccessSettingsOauthSettingsArgs struct {
	// Domain hint to send as hd=? parameter in OAuth request flow.
	// Enables redirect to primary IDP by skipping Google's login screen.
	// (https://developers.google.com/identity/protocols/OpenIDConnect#hd-param)
	// Note: IAP does not verify that the id token's hd claim matches this value
	// since access behavior is managed by IAM policies.
	// * loginHint setting is not a replacement for access control. Always enforce an appropriate access policy if you want to restrict access to users outside your domain.
	LoginHint pulumi.StringPtrInput `pulumi:"loginHint"`
	// List of client ids allowed to use IAP programmatically.
	ProgrammaticClients pulumi.StringArrayInput `pulumi:"programmaticClients"`
}

func (SettingsAccessSettingsOauthSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingsAccessSettingsOauthSettings)(nil)).Elem()
}

func (i SettingsAccessSettingsOauthSettingsArgs) ToSettingsAccessSettingsOauthSettingsOutput() SettingsAccessSettingsOauthSettingsOutput {
	return i.ToSettingsAccessSettingsOauthSettingsOutputWithContext(context.Background())
}

func (i SettingsAccessSettingsOauthSettingsArgs) ToSettingsAccessSettingsOauthSettingsOutputWithContext(ctx context.Context) SettingsAccessSettingsOauthSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsAccessSettingsOauthSettingsOutput)
}

func (i SettingsAccessSettingsOauthSettingsArgs) ToSettingsAccessSettingsOauthSettingsPtrOutput() SettingsAccessSettingsOauthSettingsPtrOutput {
	return i.ToSettingsAccessSettingsOauthSettingsPtrOutputWithContext(context.Background())
}

func (i SettingsAccessSettingsOauthSettingsArgs) ToSettingsAccessSettingsOauthSettingsPtrOutputWithContext(ctx context.Context) SettingsAccessSettingsOauthSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsAccessSettingsOauthSettingsOutput).ToSettingsAccessSettingsOauthSettingsPtrOutputWithContext(ctx)
}

// SettingsAccessSettingsOauthSettingsPtrInput is an input type that accepts SettingsAccessSettingsOauthSettingsArgs, SettingsAccessSettingsOauthSettingsPtr and SettingsAccessSettingsOauthSettingsPtrOutput values.
// You can construct a concrete instance of `SettingsAccessSettingsOauthSettingsPtrInput` via:
//
//	        SettingsAccessSettingsOauthSettingsArgs{...}
//
//	or:
//
//	        nil
type SettingsAccessSettingsOauthSettingsPtrInput interface {
	pulumi.Input

	ToSettingsAccessSettingsOauthSettingsPtrOutput() SettingsAccessSettingsOauthSettingsPtrOutput
	ToSettingsAccessSettingsOauthSettingsPtrOutputWithContext(context.Context) SettingsAccessSettingsOauthSettingsPtrOutput
}

type settingsAccessSettingsOauthSettingsPtrType SettingsAccessSettingsOauthSettingsArgs

func SettingsAccessSettingsOauthSettingsPtr(v *SettingsAccessSettingsOauthSettingsArgs) SettingsAccessSettingsOauthSettingsPtrInput {
	return (*settingsAccessSettingsOauthSettingsPtrType)(v)
}

func (*settingsAccessSettingsOauthSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingsAccessSettingsOauthSettings)(nil)).Elem()
}

func (i *settingsAccessSettingsOauthSettingsPtrType) ToSettingsAccessSettingsOauthSettingsPtrOutput() SettingsAccessSettingsOauthSettingsPtrOutput {
	return i.ToSettingsAccessSettingsOauthSettingsPtrOutputWithContext(context.Background())
}

func (i *settingsAccessSettingsOauthSettingsPtrType) ToSettingsAccessSettingsOauthSettingsPtrOutputWithContext(ctx context.Context) SettingsAccessSettingsOauthSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsAccessSettingsOauthSettingsPtrOutput)
}

type SettingsAccessSettingsOauthSettingsOutput struct{ *pulumi.OutputState }

func (SettingsAccessSettingsOauthSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingsAccessSettingsOauthSettings)(nil)).Elem()
}

func (o SettingsAccessSettingsOauthSettingsOutput) ToSettingsAccessSettingsOauthSettingsOutput() SettingsAccessSettingsOauthSettingsOutput {
	return o
}

func (o SettingsAccessSettingsOauthSettingsOutput) ToSettingsAccessSettingsOauthSettingsOutputWithContext(ctx context.Context) SettingsAccessSettingsOauthSettingsOutput {
	return o
}

func (o SettingsAccessSettingsOauthSettingsOutput) ToSettingsAccessSettingsOauthSettingsPtrOutput() SettingsAccessSettingsOauthSettingsPtrOutput {
	return o.ToSettingsAccessSettingsOauthSettingsPtrOutputWithContext(context.Background())
}

func (o SettingsAccessSettingsOauthSettingsOutput) ToSettingsAccessSettingsOauthSettingsPtrOutputWithContext(ctx context.Context) SettingsAccessSettingsOauthSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SettingsAccessSettingsOauthSettings) *SettingsAccessSettingsOauthSettings {
		return &v
	}).(SettingsAccessSettingsOauthSettingsPtrOutput)
}

// Domain hint to send as hd=? parameter in OAuth request flow.
// Enables redirect to primary IDP by skipping Google's login screen.
// (https://developers.google.com/identity/protocols/OpenIDConnect#hd-param)
// Note: IAP does not verify that the id token's hd claim matches this value
// since access behavior is managed by IAM policies.
// * loginHint setting is not a replacement for access control. Always enforce an appropriate access policy if you want to restrict access to users outside your domain.
func (o SettingsAccessSettingsOauthSettingsOutput) LoginHint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SettingsAccessSettingsOauthSettings) *string { return v.LoginHint }).(pulumi.StringPtrOutput)
}

// List of client ids allowed to use IAP programmatically.
func (o SettingsAccessSettingsOauthSettingsOutput) ProgrammaticClients() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SettingsAccessSettingsOauthSettings) []string { return v.ProgrammaticClients }).(pulumi.StringArrayOutput)
}

type SettingsAccessSettingsOauthSettingsPtrOutput struct{ *pulumi.OutputState }

func (SettingsAccessSettingsOauthSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingsAccessSettingsOauthSettings)(nil)).Elem()
}

func (o SettingsAccessSettingsOauthSettingsPtrOutput) ToSettingsAccessSettingsOauthSettingsPtrOutput() SettingsAccessSettingsOauthSettingsPtrOutput {
	return o
}

func (o SettingsAccessSettingsOauthSettingsPtrOutput) ToSettingsAccessSettingsOauthSettingsPtrOutputWithContext(ctx context.Context) SettingsAccessSettingsOauthSettingsPtrOutput {
	return o
}

func (o SettingsAccessSettingsOauthSettingsPtrOutput) Elem() SettingsAccessSettingsOauthSettingsOutput {
	return o.ApplyT(func(v *SettingsAccessSettingsOauthSettings) SettingsAccessSettingsOauthSettings {
		if v != nil {
			return *v
		}
		var ret SettingsAccessSettingsOauthSettings
		return ret
	}).(SettingsAccessSettingsOauthSettingsOutput)
}

// Domain hint to send as hd=? parameter in OAuth request flow.
// Enables redirect to primary IDP by skipping Google's login screen.
// (https://developers.google.com/identity/protocols/OpenIDConnect#hd-param)
// Note: IAP does not verify that the id token's hd claim matches this value
// since access behavior is managed by IAM policies.
// * loginHint setting is not a replacement for access control. Always enforce an appropriate access policy if you want to restrict access to users outside your domain.
func (o SettingsAccessSettingsOauthSettingsPtrOutput) LoginHint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SettingsAccessSettingsOauthSettings) *string {
		if v == nil {
			return nil
		}
		return v.LoginHint
	}).(pulumi.StringPtrOutput)
}

// List of client ids allowed to use IAP programmatically.
func (o SettingsAccessSettingsOauthSettingsPtrOutput) ProgrammaticClients() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SettingsAccessSettingsOauthSettings) []string {
		if v == nil {
			return nil
		}
		return v.ProgrammaticClients
	}).(pulumi.StringArrayOutput)
}

type SettingsAccessSettingsReauthSettings struct {
	// Reauth session lifetime, how long before a user has to reauthenticate again.
	// A duration in seconds with up to nine fractional digits, ending with 's'.
	// Example: "3.5s".
	MaxAge string `pulumi:"maxAge"`
	// Reauth method requested. The possible values are:
	// * `LOGIN`: Prompts the user to log in again.
	// * `SECURE_KEY`: User must use their secure key 2nd factor device.
	// * `ENROLLED_SECOND_FACTORS`: User can use any enabled 2nd factor.
	//   Possible values are: `LOGIN`, `SECURE_KEY`, `ENROLLED_SECOND_FACTORS`.
	Method string `pulumi:"method"`
	// How IAP determines the effective policy in cases of hierarchical policies.
	// Policies are merged from higher in the hierarchy to lower in the hierarchy.
	// The possible values are:
	// * `MINIMUM`: This policy acts as a minimum to other policies, lower in the hierarchy.
	//   Effective policy may only be the same or stricter.
	// * `DEFAULT`: This policy acts as a default if no other reauth policy is set.
	//   Possible values are: `MINIMUM`, `DEFAULT`.
	PolicyType string `pulumi:"policyType"`
}

// SettingsAccessSettingsReauthSettingsInput is an input type that accepts SettingsAccessSettingsReauthSettingsArgs and SettingsAccessSettingsReauthSettingsOutput values.
// You can construct a concrete instance of `SettingsAccessSettingsReauthSettingsInput` via:
//
//	SettingsAccessSettingsReauthSettingsArgs{...}
type SettingsAccessSettingsReauthSettingsInput interface {
	pulumi.Input

	ToSettingsAccessSettingsReauthSettingsOutput() SettingsAccessSettingsReauthSettingsOutput
	ToSettingsAccessSettingsReauthSettingsOutputWithContext(context.Context) SettingsAccessSettingsReauthSettingsOutput
}

type SettingsAccessSettingsReauthSettingsArgs struct {
	// Reauth session lifetime, how long before a user has to reauthenticate again.
	// A duration in seconds with up to nine fractional digits, ending with 's'.
	// Example: "3.5s".
	MaxAge pulumi.StringInput `pulumi:"maxAge"`
	// Reauth method requested. The possible values are:
	// * `LOGIN`: Prompts the user to log in again.
	// * `SECURE_KEY`: User must use their secure key 2nd factor device.
	// * `ENROLLED_SECOND_FACTORS`: User can use any enabled 2nd factor.
	//   Possible values are: `LOGIN`, `SECURE_KEY`, `ENROLLED_SECOND_FACTORS`.
	Method pulumi.StringInput `pulumi:"method"`
	// How IAP determines the effective policy in cases of hierarchical policies.
	// Policies are merged from higher in the hierarchy to lower in the hierarchy.
	// The possible values are:
	// * `MINIMUM`: This policy acts as a minimum to other policies, lower in the hierarchy.
	//   Effective policy may only be the same or stricter.
	// * `DEFAULT`: This policy acts as a default if no other reauth policy is set.
	//   Possible values are: `MINIMUM`, `DEFAULT`.
	PolicyType pulumi.StringInput `pulumi:"policyType"`
}

func (SettingsAccessSettingsReauthSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingsAccessSettingsReauthSettings)(nil)).Elem()
}

func (i SettingsAccessSettingsReauthSettingsArgs) ToSettingsAccessSettingsReauthSettingsOutput() SettingsAccessSettingsReauthSettingsOutput {
	return i.ToSettingsAccessSettingsReauthSettingsOutputWithContext(context.Background())
}

func (i SettingsAccessSettingsReauthSettingsArgs) ToSettingsAccessSettingsReauthSettingsOutputWithContext(ctx context.Context) SettingsAccessSettingsReauthSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsAccessSettingsReauthSettingsOutput)
}

func (i SettingsAccessSettingsReauthSettingsArgs) ToSettingsAccessSettingsReauthSettingsPtrOutput() SettingsAccessSettingsReauthSettingsPtrOutput {
	return i.ToSettingsAccessSettingsReauthSettingsPtrOutputWithContext(context.Background())
}

func (i SettingsAccessSettingsReauthSettingsArgs) ToSettingsAccessSettingsReauthSettingsPtrOutputWithContext(ctx context.Context) SettingsAccessSettingsReauthSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsAccessSettingsReauthSettingsOutput).ToSettingsAccessSettingsReauthSettingsPtrOutputWithContext(ctx)
}

// SettingsAccessSettingsReauthSettingsPtrInput is an input type that accepts SettingsAccessSettingsReauthSettingsArgs, SettingsAccessSettingsReauthSettingsPtr and SettingsAccessSettingsReauthSettingsPtrOutput values.
// You can construct a concrete instance of `SettingsAccessSettingsReauthSettingsPtrInput` via:
//
//	        SettingsAccessSettingsReauthSettingsArgs{...}
//
//	or:
//
//	        nil
type SettingsAccessSettingsReauthSettingsPtrInput interface {
	pulumi.Input

	ToSettingsAccessSettingsReauthSettingsPtrOutput() SettingsAccessSettingsReauthSettingsPtrOutput
	ToSettingsAccessSettingsReauthSettingsPtrOutputWithContext(context.Context) SettingsAccessSettingsReauthSettingsPtrOutput
}

type settingsAccessSettingsReauthSettingsPtrType SettingsAccessSettingsReauthSettingsArgs

func SettingsAccessSettingsReauthSettingsPtr(v *SettingsAccessSettingsReauthSettingsArgs) SettingsAccessSettingsReauthSettingsPtrInput {
	return (*settingsAccessSettingsReauthSettingsPtrType)(v)
}

func (*settingsAccessSettingsReauthSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingsAccessSettingsReauthSettings)(nil)).Elem()
}

func (i *settingsAccessSettingsReauthSettingsPtrType) ToSettingsAccessSettingsReauthSettingsPtrOutput() SettingsAccessSettingsReauthSettingsPtrOutput {
	return i.ToSettingsAccessSettingsReauthSettingsPtrOutputWithContext(context.Background())
}

func (i *settingsAccessSettingsReauthSettingsPtrType) ToSettingsAccessSettingsReauthSettingsPtrOutputWithContext(ctx context.Context) SettingsAccessSettingsReauthSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsAccessSettingsReauthSettingsPtrOutput)
}

type SettingsAccessSettingsReauthSettingsOutput struct{ *pulumi.OutputState }

func (SettingsAccessSettingsReauthSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingsAccessSettingsReauthSettings)(nil)).Elem()
}

func (o SettingsAccessSettingsReauthSettingsOutput) ToSettingsAccessSettingsReauthSettingsOutput() SettingsAccessSettingsReauthSettingsOutput {
	return o
}

func (o SettingsAccessSettingsReauthSettingsOutput) ToSettingsAccessSettingsReauthSettingsOutputWithContext(ctx context.Context) SettingsAccessSettingsReauthSettingsOutput {
	return o
}

func (o SettingsAccessSettingsReauthSettingsOutput) ToSettingsAccessSettingsReauthSettingsPtrOutput() SettingsAccessSettingsReauthSettingsPtrOutput {
	return o.ToSettingsAccessSettingsReauthSettingsPtrOutputWithContext(context.Background())
}

func (o SettingsAccessSettingsReauthSettingsOutput) ToSettingsAccessSettingsReauthSettingsPtrOutputWithContext(ctx context.Context) SettingsAccessSettingsReauthSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SettingsAccessSettingsReauthSettings) *SettingsAccessSettingsReauthSettings {
		return &v
	}).(SettingsAccessSettingsReauthSettingsPtrOutput)
}

// Reauth session lifetime, how long before a user has to reauthenticate again.
// A duration in seconds with up to nine fractional digits, ending with 's'.
// Example: "3.5s".
func (o SettingsAccessSettingsReauthSettingsOutput) MaxAge() pulumi.StringOutput {
	return o.ApplyT(func(v SettingsAccessSettingsReauthSettings) string { return v.MaxAge }).(pulumi.StringOutput)
}

// Reauth method requested. The possible values are:
//   - `LOGIN`: Prompts the user to log in again.
//   - `SECURE_KEY`: User must use their secure key 2nd factor device.
//   - `ENROLLED_SECOND_FACTORS`: User can use any enabled 2nd factor.
//     Possible values are: `LOGIN`, `SECURE_KEY`, `ENROLLED_SECOND_FACTORS`.
func (o SettingsAccessSettingsReauthSettingsOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v SettingsAccessSettingsReauthSettings) string { return v.Method }).(pulumi.StringOutput)
}

// How IAP determines the effective policy in cases of hierarchical policies.
// Policies are merged from higher in the hierarchy to lower in the hierarchy.
// The possible values are:
//   - `MINIMUM`: This policy acts as a minimum to other policies, lower in the hierarchy.
//     Effective policy may only be the same or stricter.
//   - `DEFAULT`: This policy acts as a default if no other reauth policy is set.
//     Possible values are: `MINIMUM`, `DEFAULT`.
func (o SettingsAccessSettingsReauthSettingsOutput) PolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v SettingsAccessSettingsReauthSettings) string { return v.PolicyType }).(pulumi.StringOutput)
}

type SettingsAccessSettingsReauthSettingsPtrOutput struct{ *pulumi.OutputState }

func (SettingsAccessSettingsReauthSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingsAccessSettingsReauthSettings)(nil)).Elem()
}

func (o SettingsAccessSettingsReauthSettingsPtrOutput) ToSettingsAccessSettingsReauthSettingsPtrOutput() SettingsAccessSettingsReauthSettingsPtrOutput {
	return o
}

func (o SettingsAccessSettingsReauthSettingsPtrOutput) ToSettingsAccessSettingsReauthSettingsPtrOutputWithContext(ctx context.Context) SettingsAccessSettingsReauthSettingsPtrOutput {
	return o
}

func (o SettingsAccessSettingsReauthSettingsPtrOutput) Elem() SettingsAccessSettingsReauthSettingsOutput {
	return o.ApplyT(func(v *SettingsAccessSettingsReauthSettings) SettingsAccessSettingsReauthSettings {
		if v != nil {
			return *v
		}
		var ret SettingsAccessSettingsReauthSettings
		return ret
	}).(SettingsAccessSettingsReauthSettingsOutput)
}

// Reauth session lifetime, how long before a user has to reauthenticate again.
// A duration in seconds with up to nine fractional digits, ending with 's'.
// Example: "3.5s".
func (o SettingsAccessSettingsReauthSettingsPtrOutput) MaxAge() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SettingsAccessSettingsReauthSettings) *string {
		if v == nil {
			return nil
		}
		return &v.MaxAge
	}).(pulumi.StringPtrOutput)
}

// Reauth method requested. The possible values are:
//   - `LOGIN`: Prompts the user to log in again.
//   - `SECURE_KEY`: User must use their secure key 2nd factor device.
//   - `ENROLLED_SECOND_FACTORS`: User can use any enabled 2nd factor.
//     Possible values are: `LOGIN`, `SECURE_KEY`, `ENROLLED_SECOND_FACTORS`.
func (o SettingsAccessSettingsReauthSettingsPtrOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SettingsAccessSettingsReauthSettings) *string {
		if v == nil {
			return nil
		}
		return &v.Method
	}).(pulumi.StringPtrOutput)
}

// How IAP determines the effective policy in cases of hierarchical policies.
// Policies are merged from higher in the hierarchy to lower in the hierarchy.
// The possible values are:
//   - `MINIMUM`: This policy acts as a minimum to other policies, lower in the hierarchy.
//     Effective policy may only be the same or stricter.
//   - `DEFAULT`: This policy acts as a default if no other reauth policy is set.
//     Possible values are: `MINIMUM`, `DEFAULT`.
func (o SettingsAccessSettingsReauthSettingsPtrOutput) PolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SettingsAccessSettingsReauthSettings) *string {
		if v == nil {
			return nil
		}
		return &v.PolicyType
	}).(pulumi.StringPtrOutput)
}

type SettingsAccessSettingsWorkforceIdentitySettings struct {
	// OAuth 2.0 settings for IAP to perform OIDC flow with workforce identity
	// federation services.
	// Structure is documented below.
	//
	// <a name="nestedAccessSettingsWorkforceIdentitySettingsOauth2"></a>The `oauth2` block supports:
	Oauth2 *SettingsAccessSettingsWorkforceIdentitySettingsOauth2 `pulumi:"oauth2"`
	// The workforce pool resources. Only one workforce pool is accepted.
	WorkforcePools *string `pulumi:"workforcePools"`
}

// SettingsAccessSettingsWorkforceIdentitySettingsInput is an input type that accepts SettingsAccessSettingsWorkforceIdentitySettingsArgs and SettingsAccessSettingsWorkforceIdentitySettingsOutput values.
// You can construct a concrete instance of `SettingsAccessSettingsWorkforceIdentitySettingsInput` via:
//
//	SettingsAccessSettingsWorkforceIdentitySettingsArgs{...}
type SettingsAccessSettingsWorkforceIdentitySettingsInput interface {
	pulumi.Input

	ToSettingsAccessSettingsWorkforceIdentitySettingsOutput() SettingsAccessSettingsWorkforceIdentitySettingsOutput
	ToSettingsAccessSettingsWorkforceIdentitySettingsOutputWithContext(context.Context) SettingsAccessSettingsWorkforceIdentitySettingsOutput
}

type SettingsAccessSettingsWorkforceIdentitySettingsArgs struct {
	// OAuth 2.0 settings for IAP to perform OIDC flow with workforce identity
	// federation services.
	// Structure is documented below.
	//
	// <a name="nestedAccessSettingsWorkforceIdentitySettingsOauth2"></a>The `oauth2` block supports:
	Oauth2 SettingsAccessSettingsWorkforceIdentitySettingsOauth2PtrInput `pulumi:"oauth2"`
	// The workforce pool resources. Only one workforce pool is accepted.
	WorkforcePools pulumi.StringPtrInput `pulumi:"workforcePools"`
}

func (SettingsAccessSettingsWorkforceIdentitySettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingsAccessSettingsWorkforceIdentitySettings)(nil)).Elem()
}

func (i SettingsAccessSettingsWorkforceIdentitySettingsArgs) ToSettingsAccessSettingsWorkforceIdentitySettingsOutput() SettingsAccessSettingsWorkforceIdentitySettingsOutput {
	return i.ToSettingsAccessSettingsWorkforceIdentitySettingsOutputWithContext(context.Background())
}

func (i SettingsAccessSettingsWorkforceIdentitySettingsArgs) ToSettingsAccessSettingsWorkforceIdentitySettingsOutputWithContext(ctx context.Context) SettingsAccessSettingsWorkforceIdentitySettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsAccessSettingsWorkforceIdentitySettingsOutput)
}

func (i SettingsAccessSettingsWorkforceIdentitySettingsArgs) ToSettingsAccessSettingsWorkforceIdentitySettingsPtrOutput() SettingsAccessSettingsWorkforceIdentitySettingsPtrOutput {
	return i.ToSettingsAccessSettingsWorkforceIdentitySettingsPtrOutputWithContext(context.Background())
}

func (i SettingsAccessSettingsWorkforceIdentitySettingsArgs) ToSettingsAccessSettingsWorkforceIdentitySettingsPtrOutputWithContext(ctx context.Context) SettingsAccessSettingsWorkforceIdentitySettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsAccessSettingsWorkforceIdentitySettingsOutput).ToSettingsAccessSettingsWorkforceIdentitySettingsPtrOutputWithContext(ctx)
}

// SettingsAccessSettingsWorkforceIdentitySettingsPtrInput is an input type that accepts SettingsAccessSettingsWorkforceIdentitySettingsArgs, SettingsAccessSettingsWorkforceIdentitySettingsPtr and SettingsAccessSettingsWorkforceIdentitySettingsPtrOutput values.
// You can construct a concrete instance of `SettingsAccessSettingsWorkforceIdentitySettingsPtrInput` via:
//
//	        SettingsAccessSettingsWorkforceIdentitySettingsArgs{...}
//
//	or:
//
//	        nil
type SettingsAccessSettingsWorkforceIdentitySettingsPtrInput interface {
	pulumi.Input

	ToSettingsAccessSettingsWorkforceIdentitySettingsPtrOutput() SettingsAccessSettingsWorkforceIdentitySettingsPtrOutput
	ToSettingsAccessSettingsWorkforceIdentitySettingsPtrOutputWithContext(context.Context) SettingsAccessSettingsWorkforceIdentitySettingsPtrOutput
}

type settingsAccessSettingsWorkforceIdentitySettingsPtrType SettingsAccessSettingsWorkforceIdentitySettingsArgs

func SettingsAccessSettingsWorkforceIdentitySettingsPtr(v *SettingsAccessSettingsWorkforceIdentitySettingsArgs) SettingsAccessSettingsWorkforceIdentitySettingsPtrInput {
	return (*settingsAccessSettingsWorkforceIdentitySettingsPtrType)(v)
}

func (*settingsAccessSettingsWorkforceIdentitySettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingsAccessSettingsWorkforceIdentitySettings)(nil)).Elem()
}

func (i *settingsAccessSettingsWorkforceIdentitySettingsPtrType) ToSettingsAccessSettingsWorkforceIdentitySettingsPtrOutput() SettingsAccessSettingsWorkforceIdentitySettingsPtrOutput {
	return i.ToSettingsAccessSettingsWorkforceIdentitySettingsPtrOutputWithContext(context.Background())
}

func (i *settingsAccessSettingsWorkforceIdentitySettingsPtrType) ToSettingsAccessSettingsWorkforceIdentitySettingsPtrOutputWithContext(ctx context.Context) SettingsAccessSettingsWorkforceIdentitySettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsAccessSettingsWorkforceIdentitySettingsPtrOutput)
}

type SettingsAccessSettingsWorkforceIdentitySettingsOutput struct{ *pulumi.OutputState }

func (SettingsAccessSettingsWorkforceIdentitySettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingsAccessSettingsWorkforceIdentitySettings)(nil)).Elem()
}

func (o SettingsAccessSettingsWorkforceIdentitySettingsOutput) ToSettingsAccessSettingsWorkforceIdentitySettingsOutput() SettingsAccessSettingsWorkforceIdentitySettingsOutput {
	return o
}

func (o SettingsAccessSettingsWorkforceIdentitySettingsOutput) ToSettingsAccessSettingsWorkforceIdentitySettingsOutputWithContext(ctx context.Context) SettingsAccessSettingsWorkforceIdentitySettingsOutput {
	return o
}

func (o SettingsAccessSettingsWorkforceIdentitySettingsOutput) ToSettingsAccessSettingsWorkforceIdentitySettingsPtrOutput() SettingsAccessSettingsWorkforceIdentitySettingsPtrOutput {
	return o.ToSettingsAccessSettingsWorkforceIdentitySettingsPtrOutputWithContext(context.Background())
}

func (o SettingsAccessSettingsWorkforceIdentitySettingsOutput) ToSettingsAccessSettingsWorkforceIdentitySettingsPtrOutputWithContext(ctx context.Context) SettingsAccessSettingsWorkforceIdentitySettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SettingsAccessSettingsWorkforceIdentitySettings) *SettingsAccessSettingsWorkforceIdentitySettings {
		return &v
	}).(SettingsAccessSettingsWorkforceIdentitySettingsPtrOutput)
}

// OAuth 2.0 settings for IAP to perform OIDC flow with workforce identity
// federation services.
// Structure is documented below.
//
// <a name="nestedAccessSettingsWorkforceIdentitySettingsOauth2"></a>The `oauth2` block supports:
func (o SettingsAccessSettingsWorkforceIdentitySettingsOutput) Oauth2() SettingsAccessSettingsWorkforceIdentitySettingsOauth2PtrOutput {
	return o.ApplyT(func(v SettingsAccessSettingsWorkforceIdentitySettings) *SettingsAccessSettingsWorkforceIdentitySettingsOauth2 {
		return v.Oauth2
	}).(SettingsAccessSettingsWorkforceIdentitySettingsOauth2PtrOutput)
}

// The workforce pool resources. Only one workforce pool is accepted.
func (o SettingsAccessSettingsWorkforceIdentitySettingsOutput) WorkforcePools() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SettingsAccessSettingsWorkforceIdentitySettings) *string { return v.WorkforcePools }).(pulumi.StringPtrOutput)
}

type SettingsAccessSettingsWorkforceIdentitySettingsPtrOutput struct{ *pulumi.OutputState }

func (SettingsAccessSettingsWorkforceIdentitySettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingsAccessSettingsWorkforceIdentitySettings)(nil)).Elem()
}

func (o SettingsAccessSettingsWorkforceIdentitySettingsPtrOutput) ToSettingsAccessSettingsWorkforceIdentitySettingsPtrOutput() SettingsAccessSettingsWorkforceIdentitySettingsPtrOutput {
	return o
}

func (o SettingsAccessSettingsWorkforceIdentitySettingsPtrOutput) ToSettingsAccessSettingsWorkforceIdentitySettingsPtrOutputWithContext(ctx context.Context) SettingsAccessSettingsWorkforceIdentitySettingsPtrOutput {
	return o
}

func (o SettingsAccessSettingsWorkforceIdentitySettingsPtrOutput) Elem() SettingsAccessSettingsWorkforceIdentitySettingsOutput {
	return o.ApplyT(func(v *SettingsAccessSettingsWorkforceIdentitySettings) SettingsAccessSettingsWorkforceIdentitySettings {
		if v != nil {
			return *v
		}
		var ret SettingsAccessSettingsWorkforceIdentitySettings
		return ret
	}).(SettingsAccessSettingsWorkforceIdentitySettingsOutput)
}

// OAuth 2.0 settings for IAP to perform OIDC flow with workforce identity
// federation services.
// Structure is documented below.
//
// <a name="nestedAccessSettingsWorkforceIdentitySettingsOauth2"></a>The `oauth2` block supports:
func (o SettingsAccessSettingsWorkforceIdentitySettingsPtrOutput) Oauth2() SettingsAccessSettingsWorkforceIdentitySettingsOauth2PtrOutput {
	return o.ApplyT(func(v *SettingsAccessSettingsWorkforceIdentitySettings) *SettingsAccessSettingsWorkforceIdentitySettingsOauth2 {
		if v == nil {
			return nil
		}
		return v.Oauth2
	}).(SettingsAccessSettingsWorkforceIdentitySettingsOauth2PtrOutput)
}

// The workforce pool resources. Only one workforce pool is accepted.
func (o SettingsAccessSettingsWorkforceIdentitySettingsPtrOutput) WorkforcePools() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SettingsAccessSettingsWorkforceIdentitySettings) *string {
		if v == nil {
			return nil
		}
		return v.WorkforcePools
	}).(pulumi.StringPtrOutput)
}

type SettingsAccessSettingsWorkforceIdentitySettingsOauth2 struct {
	// The OAuth 2.0 client ID registered in the workforce identity
	// federation OAuth 2.0 Server.
	ClientId *string `pulumi:"clientId"`
	// Input only. The OAuth 2.0 client secret created while registering
	// the client ID.
	ClientSecret *string `pulumi:"clientSecret"`
	// Output only. SHA256 hash value for the client secret. This field
	// is returned by IAP when the settings are retrieved.
	ClientSecretSha256 *string `pulumi:"clientSecretSha256"`
}

// SettingsAccessSettingsWorkforceIdentitySettingsOauth2Input is an input type that accepts SettingsAccessSettingsWorkforceIdentitySettingsOauth2Args and SettingsAccessSettingsWorkforceIdentitySettingsOauth2Output values.
// You can construct a concrete instance of `SettingsAccessSettingsWorkforceIdentitySettingsOauth2Input` via:
//
//	SettingsAccessSettingsWorkforceIdentitySettingsOauth2Args{...}
type SettingsAccessSettingsWorkforceIdentitySettingsOauth2Input interface {
	pulumi.Input

	ToSettingsAccessSettingsWorkforceIdentitySettingsOauth2Output() SettingsAccessSettingsWorkforceIdentitySettingsOauth2Output
	ToSettingsAccessSettingsWorkforceIdentitySettingsOauth2OutputWithContext(context.Context) SettingsAccessSettingsWorkforceIdentitySettingsOauth2Output
}

type SettingsAccessSettingsWorkforceIdentitySettingsOauth2Args struct {
	// The OAuth 2.0 client ID registered in the workforce identity
	// federation OAuth 2.0 Server.
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// Input only. The OAuth 2.0 client secret created while registering
	// the client ID.
	ClientSecret pulumi.StringPtrInput `pulumi:"clientSecret"`
	// Output only. SHA256 hash value for the client secret. This field
	// is returned by IAP when the settings are retrieved.
	ClientSecretSha256 pulumi.StringPtrInput `pulumi:"clientSecretSha256"`
}

func (SettingsAccessSettingsWorkforceIdentitySettingsOauth2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingsAccessSettingsWorkforceIdentitySettingsOauth2)(nil)).Elem()
}

func (i SettingsAccessSettingsWorkforceIdentitySettingsOauth2Args) ToSettingsAccessSettingsWorkforceIdentitySettingsOauth2Output() SettingsAccessSettingsWorkforceIdentitySettingsOauth2Output {
	return i.ToSettingsAccessSettingsWorkforceIdentitySettingsOauth2OutputWithContext(context.Background())
}

func (i SettingsAccessSettingsWorkforceIdentitySettingsOauth2Args) ToSettingsAccessSettingsWorkforceIdentitySettingsOauth2OutputWithContext(ctx context.Context) SettingsAccessSettingsWorkforceIdentitySettingsOauth2Output {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsAccessSettingsWorkforceIdentitySettingsOauth2Output)
}

func (i SettingsAccessSettingsWorkforceIdentitySettingsOauth2Args) ToSettingsAccessSettingsWorkforceIdentitySettingsOauth2PtrOutput() SettingsAccessSettingsWorkforceIdentitySettingsOauth2PtrOutput {
	return i.ToSettingsAccessSettingsWorkforceIdentitySettingsOauth2PtrOutputWithContext(context.Background())
}

func (i SettingsAccessSettingsWorkforceIdentitySettingsOauth2Args) ToSettingsAccessSettingsWorkforceIdentitySettingsOauth2PtrOutputWithContext(ctx context.Context) SettingsAccessSettingsWorkforceIdentitySettingsOauth2PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsAccessSettingsWorkforceIdentitySettingsOauth2Output).ToSettingsAccessSettingsWorkforceIdentitySettingsOauth2PtrOutputWithContext(ctx)
}

// SettingsAccessSettingsWorkforceIdentitySettingsOauth2PtrInput is an input type that accepts SettingsAccessSettingsWorkforceIdentitySettingsOauth2Args, SettingsAccessSettingsWorkforceIdentitySettingsOauth2Ptr and SettingsAccessSettingsWorkforceIdentitySettingsOauth2PtrOutput values.
// You can construct a concrete instance of `SettingsAccessSettingsWorkforceIdentitySettingsOauth2PtrInput` via:
//
//	        SettingsAccessSettingsWorkforceIdentitySettingsOauth2Args{...}
//
//	or:
//
//	        nil
type SettingsAccessSettingsWorkforceIdentitySettingsOauth2PtrInput interface {
	pulumi.Input

	ToSettingsAccessSettingsWorkforceIdentitySettingsOauth2PtrOutput() SettingsAccessSettingsWorkforceIdentitySettingsOauth2PtrOutput
	ToSettingsAccessSettingsWorkforceIdentitySettingsOauth2PtrOutputWithContext(context.Context) SettingsAccessSettingsWorkforceIdentitySettingsOauth2PtrOutput
}

type settingsAccessSettingsWorkforceIdentitySettingsOauth2PtrType SettingsAccessSettingsWorkforceIdentitySettingsOauth2Args

func SettingsAccessSettingsWorkforceIdentitySettingsOauth2Ptr(v *SettingsAccessSettingsWorkforceIdentitySettingsOauth2Args) SettingsAccessSettingsWorkforceIdentitySettingsOauth2PtrInput {
	return (*settingsAccessSettingsWorkforceIdentitySettingsOauth2PtrType)(v)
}

func (*settingsAccessSettingsWorkforceIdentitySettingsOauth2PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingsAccessSettingsWorkforceIdentitySettingsOauth2)(nil)).Elem()
}

func (i *settingsAccessSettingsWorkforceIdentitySettingsOauth2PtrType) ToSettingsAccessSettingsWorkforceIdentitySettingsOauth2PtrOutput() SettingsAccessSettingsWorkforceIdentitySettingsOauth2PtrOutput {
	return i.ToSettingsAccessSettingsWorkforceIdentitySettingsOauth2PtrOutputWithContext(context.Background())
}

func (i *settingsAccessSettingsWorkforceIdentitySettingsOauth2PtrType) ToSettingsAccessSettingsWorkforceIdentitySettingsOauth2PtrOutputWithContext(ctx context.Context) SettingsAccessSettingsWorkforceIdentitySettingsOauth2PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsAccessSettingsWorkforceIdentitySettingsOauth2PtrOutput)
}

type SettingsAccessSettingsWorkforceIdentitySettingsOauth2Output struct{ *pulumi.OutputState }

func (SettingsAccessSettingsWorkforceIdentitySettingsOauth2Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingsAccessSettingsWorkforceIdentitySettingsOauth2)(nil)).Elem()
}

func (o SettingsAccessSettingsWorkforceIdentitySettingsOauth2Output) ToSettingsAccessSettingsWorkforceIdentitySettingsOauth2Output() SettingsAccessSettingsWorkforceIdentitySettingsOauth2Output {
	return o
}

func (o SettingsAccessSettingsWorkforceIdentitySettingsOauth2Output) ToSettingsAccessSettingsWorkforceIdentitySettingsOauth2OutputWithContext(ctx context.Context) SettingsAccessSettingsWorkforceIdentitySettingsOauth2Output {
	return o
}

func (o SettingsAccessSettingsWorkforceIdentitySettingsOauth2Output) ToSettingsAccessSettingsWorkforceIdentitySettingsOauth2PtrOutput() SettingsAccessSettingsWorkforceIdentitySettingsOauth2PtrOutput {
	return o.ToSettingsAccessSettingsWorkforceIdentitySettingsOauth2PtrOutputWithContext(context.Background())
}

func (o SettingsAccessSettingsWorkforceIdentitySettingsOauth2Output) ToSettingsAccessSettingsWorkforceIdentitySettingsOauth2PtrOutputWithContext(ctx context.Context) SettingsAccessSettingsWorkforceIdentitySettingsOauth2PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SettingsAccessSettingsWorkforceIdentitySettingsOauth2) *SettingsAccessSettingsWorkforceIdentitySettingsOauth2 {
		return &v
	}).(SettingsAccessSettingsWorkforceIdentitySettingsOauth2PtrOutput)
}

// The OAuth 2.0 client ID registered in the workforce identity
// federation OAuth 2.0 Server.
func (o SettingsAccessSettingsWorkforceIdentitySettingsOauth2Output) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SettingsAccessSettingsWorkforceIdentitySettingsOauth2) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// Input only. The OAuth 2.0 client secret created while registering
// the client ID.
func (o SettingsAccessSettingsWorkforceIdentitySettingsOauth2Output) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SettingsAccessSettingsWorkforceIdentitySettingsOauth2) *string { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

// Output only. SHA256 hash value for the client secret. This field
// is returned by IAP when the settings are retrieved.
func (o SettingsAccessSettingsWorkforceIdentitySettingsOauth2Output) ClientSecretSha256() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SettingsAccessSettingsWorkforceIdentitySettingsOauth2) *string { return v.ClientSecretSha256 }).(pulumi.StringPtrOutput)
}

type SettingsAccessSettingsWorkforceIdentitySettingsOauth2PtrOutput struct{ *pulumi.OutputState }

func (SettingsAccessSettingsWorkforceIdentitySettingsOauth2PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingsAccessSettingsWorkforceIdentitySettingsOauth2)(nil)).Elem()
}

func (o SettingsAccessSettingsWorkforceIdentitySettingsOauth2PtrOutput) ToSettingsAccessSettingsWorkforceIdentitySettingsOauth2PtrOutput() SettingsAccessSettingsWorkforceIdentitySettingsOauth2PtrOutput {
	return o
}

func (o SettingsAccessSettingsWorkforceIdentitySettingsOauth2PtrOutput) ToSettingsAccessSettingsWorkforceIdentitySettingsOauth2PtrOutputWithContext(ctx context.Context) SettingsAccessSettingsWorkforceIdentitySettingsOauth2PtrOutput {
	return o
}

func (o SettingsAccessSettingsWorkforceIdentitySettingsOauth2PtrOutput) Elem() SettingsAccessSettingsWorkforceIdentitySettingsOauth2Output {
	return o.ApplyT(func(v *SettingsAccessSettingsWorkforceIdentitySettingsOauth2) SettingsAccessSettingsWorkforceIdentitySettingsOauth2 {
		if v != nil {
			return *v
		}
		var ret SettingsAccessSettingsWorkforceIdentitySettingsOauth2
		return ret
	}).(SettingsAccessSettingsWorkforceIdentitySettingsOauth2Output)
}

// The OAuth 2.0 client ID registered in the workforce identity
// federation OAuth 2.0 Server.
func (o SettingsAccessSettingsWorkforceIdentitySettingsOauth2PtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SettingsAccessSettingsWorkforceIdentitySettingsOauth2) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// Input only. The OAuth 2.0 client secret created while registering
// the client ID.
func (o SettingsAccessSettingsWorkforceIdentitySettingsOauth2PtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SettingsAccessSettingsWorkforceIdentitySettingsOauth2) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

// Output only. SHA256 hash value for the client secret. This field
// is returned by IAP when the settings are retrieved.
func (o SettingsAccessSettingsWorkforceIdentitySettingsOauth2PtrOutput) ClientSecretSha256() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SettingsAccessSettingsWorkforceIdentitySettingsOauth2) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecretSha256
	}).(pulumi.StringPtrOutput)
}

type SettingsApplicationSettings struct {
	// Customization for Access Denied page. IAP allows customers to define a custom URI
	// to use as the error page when access is denied to users. If IAP prevents access
	// to this page, the default IAP error page will be displayed instead.
	// Structure is documented below.
	AccessDeniedPageSettings *SettingsApplicationSettingsAccessDeniedPageSettings `pulumi:"accessDeniedPageSettings"`
	// Settings to configure attribute propagation.
	// Structure is documented below.
	AttributePropagationSettings *SettingsApplicationSettingsAttributePropagationSettings `pulumi:"attributePropagationSettings"`
	// The Domain value to set for cookies generated by IAP. This value is not validated by the API,
	// but will be ignored at runtime if invalid.
	CookieDomain *string `pulumi:"cookieDomain"`
	// Settings to configure IAP's behavior for a service mesh.
	// Structure is documented below.
	CsmSettings *SettingsApplicationSettingsCsmSettings `pulumi:"csmSettings"`
}

// SettingsApplicationSettingsInput is an input type that accepts SettingsApplicationSettingsArgs and SettingsApplicationSettingsOutput values.
// You can construct a concrete instance of `SettingsApplicationSettingsInput` via:
//
//	SettingsApplicationSettingsArgs{...}
type SettingsApplicationSettingsInput interface {
	pulumi.Input

	ToSettingsApplicationSettingsOutput() SettingsApplicationSettingsOutput
	ToSettingsApplicationSettingsOutputWithContext(context.Context) SettingsApplicationSettingsOutput
}

type SettingsApplicationSettingsArgs struct {
	// Customization for Access Denied page. IAP allows customers to define a custom URI
	// to use as the error page when access is denied to users. If IAP prevents access
	// to this page, the default IAP error page will be displayed instead.
	// Structure is documented below.
	AccessDeniedPageSettings SettingsApplicationSettingsAccessDeniedPageSettingsPtrInput `pulumi:"accessDeniedPageSettings"`
	// Settings to configure attribute propagation.
	// Structure is documented below.
	AttributePropagationSettings SettingsApplicationSettingsAttributePropagationSettingsPtrInput `pulumi:"attributePropagationSettings"`
	// The Domain value to set for cookies generated by IAP. This value is not validated by the API,
	// but will be ignored at runtime if invalid.
	CookieDomain pulumi.StringPtrInput `pulumi:"cookieDomain"`
	// Settings to configure IAP's behavior for a service mesh.
	// Structure is documented below.
	CsmSettings SettingsApplicationSettingsCsmSettingsPtrInput `pulumi:"csmSettings"`
}

func (SettingsApplicationSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingsApplicationSettings)(nil)).Elem()
}

func (i SettingsApplicationSettingsArgs) ToSettingsApplicationSettingsOutput() SettingsApplicationSettingsOutput {
	return i.ToSettingsApplicationSettingsOutputWithContext(context.Background())
}

func (i SettingsApplicationSettingsArgs) ToSettingsApplicationSettingsOutputWithContext(ctx context.Context) SettingsApplicationSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsApplicationSettingsOutput)
}

func (i SettingsApplicationSettingsArgs) ToSettingsApplicationSettingsPtrOutput() SettingsApplicationSettingsPtrOutput {
	return i.ToSettingsApplicationSettingsPtrOutputWithContext(context.Background())
}

func (i SettingsApplicationSettingsArgs) ToSettingsApplicationSettingsPtrOutputWithContext(ctx context.Context) SettingsApplicationSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsApplicationSettingsOutput).ToSettingsApplicationSettingsPtrOutputWithContext(ctx)
}

// SettingsApplicationSettingsPtrInput is an input type that accepts SettingsApplicationSettingsArgs, SettingsApplicationSettingsPtr and SettingsApplicationSettingsPtrOutput values.
// You can construct a concrete instance of `SettingsApplicationSettingsPtrInput` via:
//
//	        SettingsApplicationSettingsArgs{...}
//
//	or:
//
//	        nil
type SettingsApplicationSettingsPtrInput interface {
	pulumi.Input

	ToSettingsApplicationSettingsPtrOutput() SettingsApplicationSettingsPtrOutput
	ToSettingsApplicationSettingsPtrOutputWithContext(context.Context) SettingsApplicationSettingsPtrOutput
}

type settingsApplicationSettingsPtrType SettingsApplicationSettingsArgs

func SettingsApplicationSettingsPtr(v *SettingsApplicationSettingsArgs) SettingsApplicationSettingsPtrInput {
	return (*settingsApplicationSettingsPtrType)(v)
}

func (*settingsApplicationSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingsApplicationSettings)(nil)).Elem()
}

func (i *settingsApplicationSettingsPtrType) ToSettingsApplicationSettingsPtrOutput() SettingsApplicationSettingsPtrOutput {
	return i.ToSettingsApplicationSettingsPtrOutputWithContext(context.Background())
}

func (i *settingsApplicationSettingsPtrType) ToSettingsApplicationSettingsPtrOutputWithContext(ctx context.Context) SettingsApplicationSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsApplicationSettingsPtrOutput)
}

type SettingsApplicationSettingsOutput struct{ *pulumi.OutputState }

func (SettingsApplicationSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingsApplicationSettings)(nil)).Elem()
}

func (o SettingsApplicationSettingsOutput) ToSettingsApplicationSettingsOutput() SettingsApplicationSettingsOutput {
	return o
}

func (o SettingsApplicationSettingsOutput) ToSettingsApplicationSettingsOutputWithContext(ctx context.Context) SettingsApplicationSettingsOutput {
	return o
}

func (o SettingsApplicationSettingsOutput) ToSettingsApplicationSettingsPtrOutput() SettingsApplicationSettingsPtrOutput {
	return o.ToSettingsApplicationSettingsPtrOutputWithContext(context.Background())
}

func (o SettingsApplicationSettingsOutput) ToSettingsApplicationSettingsPtrOutputWithContext(ctx context.Context) SettingsApplicationSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SettingsApplicationSettings) *SettingsApplicationSettings {
		return &v
	}).(SettingsApplicationSettingsPtrOutput)
}

// Customization for Access Denied page. IAP allows customers to define a custom URI
// to use as the error page when access is denied to users. If IAP prevents access
// to this page, the default IAP error page will be displayed instead.
// Structure is documented below.
func (o SettingsApplicationSettingsOutput) AccessDeniedPageSettings() SettingsApplicationSettingsAccessDeniedPageSettingsPtrOutput {
	return o.ApplyT(func(v SettingsApplicationSettings) *SettingsApplicationSettingsAccessDeniedPageSettings {
		return v.AccessDeniedPageSettings
	}).(SettingsApplicationSettingsAccessDeniedPageSettingsPtrOutput)
}

// Settings to configure attribute propagation.
// Structure is documented below.
func (o SettingsApplicationSettingsOutput) AttributePropagationSettings() SettingsApplicationSettingsAttributePropagationSettingsPtrOutput {
	return o.ApplyT(func(v SettingsApplicationSettings) *SettingsApplicationSettingsAttributePropagationSettings {
		return v.AttributePropagationSettings
	}).(SettingsApplicationSettingsAttributePropagationSettingsPtrOutput)
}

// The Domain value to set for cookies generated by IAP. This value is not validated by the API,
// but will be ignored at runtime if invalid.
func (o SettingsApplicationSettingsOutput) CookieDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SettingsApplicationSettings) *string { return v.CookieDomain }).(pulumi.StringPtrOutput)
}

// Settings to configure IAP's behavior for a service mesh.
// Structure is documented below.
func (o SettingsApplicationSettingsOutput) CsmSettings() SettingsApplicationSettingsCsmSettingsPtrOutput {
	return o.ApplyT(func(v SettingsApplicationSettings) *SettingsApplicationSettingsCsmSettings { return v.CsmSettings }).(SettingsApplicationSettingsCsmSettingsPtrOutput)
}

type SettingsApplicationSettingsPtrOutput struct{ *pulumi.OutputState }

func (SettingsApplicationSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingsApplicationSettings)(nil)).Elem()
}

func (o SettingsApplicationSettingsPtrOutput) ToSettingsApplicationSettingsPtrOutput() SettingsApplicationSettingsPtrOutput {
	return o
}

func (o SettingsApplicationSettingsPtrOutput) ToSettingsApplicationSettingsPtrOutputWithContext(ctx context.Context) SettingsApplicationSettingsPtrOutput {
	return o
}

func (o SettingsApplicationSettingsPtrOutput) Elem() SettingsApplicationSettingsOutput {
	return o.ApplyT(func(v *SettingsApplicationSettings) SettingsApplicationSettings {
		if v != nil {
			return *v
		}
		var ret SettingsApplicationSettings
		return ret
	}).(SettingsApplicationSettingsOutput)
}

// Customization for Access Denied page. IAP allows customers to define a custom URI
// to use as the error page when access is denied to users. If IAP prevents access
// to this page, the default IAP error page will be displayed instead.
// Structure is documented below.
func (o SettingsApplicationSettingsPtrOutput) AccessDeniedPageSettings() SettingsApplicationSettingsAccessDeniedPageSettingsPtrOutput {
	return o.ApplyT(func(v *SettingsApplicationSettings) *SettingsApplicationSettingsAccessDeniedPageSettings {
		if v == nil {
			return nil
		}
		return v.AccessDeniedPageSettings
	}).(SettingsApplicationSettingsAccessDeniedPageSettingsPtrOutput)
}

// Settings to configure attribute propagation.
// Structure is documented below.
func (o SettingsApplicationSettingsPtrOutput) AttributePropagationSettings() SettingsApplicationSettingsAttributePropagationSettingsPtrOutput {
	return o.ApplyT(func(v *SettingsApplicationSettings) *SettingsApplicationSettingsAttributePropagationSettings {
		if v == nil {
			return nil
		}
		return v.AttributePropagationSettings
	}).(SettingsApplicationSettingsAttributePropagationSettingsPtrOutput)
}

// The Domain value to set for cookies generated by IAP. This value is not validated by the API,
// but will be ignored at runtime if invalid.
func (o SettingsApplicationSettingsPtrOutput) CookieDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SettingsApplicationSettings) *string {
		if v == nil {
			return nil
		}
		return v.CookieDomain
	}).(pulumi.StringPtrOutput)
}

// Settings to configure IAP's behavior for a service mesh.
// Structure is documented below.
func (o SettingsApplicationSettingsPtrOutput) CsmSettings() SettingsApplicationSettingsCsmSettingsPtrOutput {
	return o.ApplyT(func(v *SettingsApplicationSettings) *SettingsApplicationSettingsCsmSettings {
		if v == nil {
			return nil
		}
		return v.CsmSettings
	}).(SettingsApplicationSettingsCsmSettingsPtrOutput)
}

type SettingsApplicationSettingsAccessDeniedPageSettings struct {
	// The URI to be redirected to when access is denied.
	AccessDeniedPageUri *string `pulumi:"accessDeniedPageUri"`
	// Whether to generate a troubleshooting URL on access denied events to this application.
	GenerateTroubleshootingUri *bool `pulumi:"generateTroubleshootingUri"`
	// Whether to generate remediation token on access denied events to this application.
	RemediationTokenGenerationEnabled *bool `pulumi:"remediationTokenGenerationEnabled"`
}

// SettingsApplicationSettingsAccessDeniedPageSettingsInput is an input type that accepts SettingsApplicationSettingsAccessDeniedPageSettingsArgs and SettingsApplicationSettingsAccessDeniedPageSettingsOutput values.
// You can construct a concrete instance of `SettingsApplicationSettingsAccessDeniedPageSettingsInput` via:
//
//	SettingsApplicationSettingsAccessDeniedPageSettingsArgs{...}
type SettingsApplicationSettingsAccessDeniedPageSettingsInput interface {
	pulumi.Input

	ToSettingsApplicationSettingsAccessDeniedPageSettingsOutput() SettingsApplicationSettingsAccessDeniedPageSettingsOutput
	ToSettingsApplicationSettingsAccessDeniedPageSettingsOutputWithContext(context.Context) SettingsApplicationSettingsAccessDeniedPageSettingsOutput
}

type SettingsApplicationSettingsAccessDeniedPageSettingsArgs struct {
	// The URI to be redirected to when access is denied.
	AccessDeniedPageUri pulumi.StringPtrInput `pulumi:"accessDeniedPageUri"`
	// Whether to generate a troubleshooting URL on access denied events to this application.
	GenerateTroubleshootingUri pulumi.BoolPtrInput `pulumi:"generateTroubleshootingUri"`
	// Whether to generate remediation token on access denied events to this application.
	RemediationTokenGenerationEnabled pulumi.BoolPtrInput `pulumi:"remediationTokenGenerationEnabled"`
}

func (SettingsApplicationSettingsAccessDeniedPageSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingsApplicationSettingsAccessDeniedPageSettings)(nil)).Elem()
}

func (i SettingsApplicationSettingsAccessDeniedPageSettingsArgs) ToSettingsApplicationSettingsAccessDeniedPageSettingsOutput() SettingsApplicationSettingsAccessDeniedPageSettingsOutput {
	return i.ToSettingsApplicationSettingsAccessDeniedPageSettingsOutputWithContext(context.Background())
}

func (i SettingsApplicationSettingsAccessDeniedPageSettingsArgs) ToSettingsApplicationSettingsAccessDeniedPageSettingsOutputWithContext(ctx context.Context) SettingsApplicationSettingsAccessDeniedPageSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsApplicationSettingsAccessDeniedPageSettingsOutput)
}

func (i SettingsApplicationSettingsAccessDeniedPageSettingsArgs) ToSettingsApplicationSettingsAccessDeniedPageSettingsPtrOutput() SettingsApplicationSettingsAccessDeniedPageSettingsPtrOutput {
	return i.ToSettingsApplicationSettingsAccessDeniedPageSettingsPtrOutputWithContext(context.Background())
}

func (i SettingsApplicationSettingsAccessDeniedPageSettingsArgs) ToSettingsApplicationSettingsAccessDeniedPageSettingsPtrOutputWithContext(ctx context.Context) SettingsApplicationSettingsAccessDeniedPageSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsApplicationSettingsAccessDeniedPageSettingsOutput).ToSettingsApplicationSettingsAccessDeniedPageSettingsPtrOutputWithContext(ctx)
}

// SettingsApplicationSettingsAccessDeniedPageSettingsPtrInput is an input type that accepts SettingsApplicationSettingsAccessDeniedPageSettingsArgs, SettingsApplicationSettingsAccessDeniedPageSettingsPtr and SettingsApplicationSettingsAccessDeniedPageSettingsPtrOutput values.
// You can construct a concrete instance of `SettingsApplicationSettingsAccessDeniedPageSettingsPtrInput` via:
//
//	        SettingsApplicationSettingsAccessDeniedPageSettingsArgs{...}
//
//	or:
//
//	        nil
type SettingsApplicationSettingsAccessDeniedPageSettingsPtrInput interface {
	pulumi.Input

	ToSettingsApplicationSettingsAccessDeniedPageSettingsPtrOutput() SettingsApplicationSettingsAccessDeniedPageSettingsPtrOutput
	ToSettingsApplicationSettingsAccessDeniedPageSettingsPtrOutputWithContext(context.Context) SettingsApplicationSettingsAccessDeniedPageSettingsPtrOutput
}

type settingsApplicationSettingsAccessDeniedPageSettingsPtrType SettingsApplicationSettingsAccessDeniedPageSettingsArgs

func SettingsApplicationSettingsAccessDeniedPageSettingsPtr(v *SettingsApplicationSettingsAccessDeniedPageSettingsArgs) SettingsApplicationSettingsAccessDeniedPageSettingsPtrInput {
	return (*settingsApplicationSettingsAccessDeniedPageSettingsPtrType)(v)
}

func (*settingsApplicationSettingsAccessDeniedPageSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingsApplicationSettingsAccessDeniedPageSettings)(nil)).Elem()
}

func (i *settingsApplicationSettingsAccessDeniedPageSettingsPtrType) ToSettingsApplicationSettingsAccessDeniedPageSettingsPtrOutput() SettingsApplicationSettingsAccessDeniedPageSettingsPtrOutput {
	return i.ToSettingsApplicationSettingsAccessDeniedPageSettingsPtrOutputWithContext(context.Background())
}

func (i *settingsApplicationSettingsAccessDeniedPageSettingsPtrType) ToSettingsApplicationSettingsAccessDeniedPageSettingsPtrOutputWithContext(ctx context.Context) SettingsApplicationSettingsAccessDeniedPageSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsApplicationSettingsAccessDeniedPageSettingsPtrOutput)
}

type SettingsApplicationSettingsAccessDeniedPageSettingsOutput struct{ *pulumi.OutputState }

func (SettingsApplicationSettingsAccessDeniedPageSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingsApplicationSettingsAccessDeniedPageSettings)(nil)).Elem()
}

func (o SettingsApplicationSettingsAccessDeniedPageSettingsOutput) ToSettingsApplicationSettingsAccessDeniedPageSettingsOutput() SettingsApplicationSettingsAccessDeniedPageSettingsOutput {
	return o
}

func (o SettingsApplicationSettingsAccessDeniedPageSettingsOutput) ToSettingsApplicationSettingsAccessDeniedPageSettingsOutputWithContext(ctx context.Context) SettingsApplicationSettingsAccessDeniedPageSettingsOutput {
	return o
}

func (o SettingsApplicationSettingsAccessDeniedPageSettingsOutput) ToSettingsApplicationSettingsAccessDeniedPageSettingsPtrOutput() SettingsApplicationSettingsAccessDeniedPageSettingsPtrOutput {
	return o.ToSettingsApplicationSettingsAccessDeniedPageSettingsPtrOutputWithContext(context.Background())
}

func (o SettingsApplicationSettingsAccessDeniedPageSettingsOutput) ToSettingsApplicationSettingsAccessDeniedPageSettingsPtrOutputWithContext(ctx context.Context) SettingsApplicationSettingsAccessDeniedPageSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SettingsApplicationSettingsAccessDeniedPageSettings) *SettingsApplicationSettingsAccessDeniedPageSettings {
		return &v
	}).(SettingsApplicationSettingsAccessDeniedPageSettingsPtrOutput)
}

// The URI to be redirected to when access is denied.
func (o SettingsApplicationSettingsAccessDeniedPageSettingsOutput) AccessDeniedPageUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SettingsApplicationSettingsAccessDeniedPageSettings) *string { return v.AccessDeniedPageUri }).(pulumi.StringPtrOutput)
}

// Whether to generate a troubleshooting URL on access denied events to this application.
func (o SettingsApplicationSettingsAccessDeniedPageSettingsOutput) GenerateTroubleshootingUri() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SettingsApplicationSettingsAccessDeniedPageSettings) *bool { return v.GenerateTroubleshootingUri }).(pulumi.BoolPtrOutput)
}

// Whether to generate remediation token on access denied events to this application.
func (o SettingsApplicationSettingsAccessDeniedPageSettingsOutput) RemediationTokenGenerationEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SettingsApplicationSettingsAccessDeniedPageSettings) *bool {
		return v.RemediationTokenGenerationEnabled
	}).(pulumi.BoolPtrOutput)
}

type SettingsApplicationSettingsAccessDeniedPageSettingsPtrOutput struct{ *pulumi.OutputState }

func (SettingsApplicationSettingsAccessDeniedPageSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingsApplicationSettingsAccessDeniedPageSettings)(nil)).Elem()
}

func (o SettingsApplicationSettingsAccessDeniedPageSettingsPtrOutput) ToSettingsApplicationSettingsAccessDeniedPageSettingsPtrOutput() SettingsApplicationSettingsAccessDeniedPageSettingsPtrOutput {
	return o
}

func (o SettingsApplicationSettingsAccessDeniedPageSettingsPtrOutput) ToSettingsApplicationSettingsAccessDeniedPageSettingsPtrOutputWithContext(ctx context.Context) SettingsApplicationSettingsAccessDeniedPageSettingsPtrOutput {
	return o
}

func (o SettingsApplicationSettingsAccessDeniedPageSettingsPtrOutput) Elem() SettingsApplicationSettingsAccessDeniedPageSettingsOutput {
	return o.ApplyT(func(v *SettingsApplicationSettingsAccessDeniedPageSettings) SettingsApplicationSettingsAccessDeniedPageSettings {
		if v != nil {
			return *v
		}
		var ret SettingsApplicationSettingsAccessDeniedPageSettings
		return ret
	}).(SettingsApplicationSettingsAccessDeniedPageSettingsOutput)
}

// The URI to be redirected to when access is denied.
func (o SettingsApplicationSettingsAccessDeniedPageSettingsPtrOutput) AccessDeniedPageUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SettingsApplicationSettingsAccessDeniedPageSettings) *string {
		if v == nil {
			return nil
		}
		return v.AccessDeniedPageUri
	}).(pulumi.StringPtrOutput)
}

// Whether to generate a troubleshooting URL on access denied events to this application.
func (o SettingsApplicationSettingsAccessDeniedPageSettingsPtrOutput) GenerateTroubleshootingUri() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SettingsApplicationSettingsAccessDeniedPageSettings) *bool {
		if v == nil {
			return nil
		}
		return v.GenerateTroubleshootingUri
	}).(pulumi.BoolPtrOutput)
}

// Whether to generate remediation token on access denied events to this application.
func (o SettingsApplicationSettingsAccessDeniedPageSettingsPtrOutput) RemediationTokenGenerationEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SettingsApplicationSettingsAccessDeniedPageSettings) *bool {
		if v == nil {
			return nil
		}
		return v.RemediationTokenGenerationEnabled
	}).(pulumi.BoolPtrOutput)
}

type SettingsApplicationSettingsAttributePropagationSettings struct {
	// Whether the provided attribute propagation settings should be evaluated on user requests.
	// If set to true, attributes returned from the expression will be propagated in the set output credentials.
	Enable *bool `pulumi:"enable"`
	// Raw string CEL expression. Must return a list of attributes. A maximum of 45 attributes can
	// be selected. Expressions can select different attribute types from attributes:
	// attributes.saml_attributes, attributes.iap_attributes.
	Expression *string `pulumi:"expression"`
	// Which output credentials attributes selected by the CEL expression should be propagated in.
	// All attributes will be fully duplicated in each selected output credential.
	// Possible values are:
	// * `HEADER`: Propagate attributes in the headers with "x-goog-iap-attr-" prefix.
	// * `JWT`: Propagate attributes in the JWT of the form:
	//   "additionalClaims": { "myAttribute": ["value1", "value2"] }
	// * `RCTOKEN`: Propagate attributes in the RCToken of the form: "
	//   additionalClaims": { "myAttribute": ["value1", "value2"] }
	//   Each value may be one of: `HEADER`, `JWT`, `RCTOKEN`.
	OutputCredentials []string `pulumi:"outputCredentials"`
}

// SettingsApplicationSettingsAttributePropagationSettingsInput is an input type that accepts SettingsApplicationSettingsAttributePropagationSettingsArgs and SettingsApplicationSettingsAttributePropagationSettingsOutput values.
// You can construct a concrete instance of `SettingsApplicationSettingsAttributePropagationSettingsInput` via:
//
//	SettingsApplicationSettingsAttributePropagationSettingsArgs{...}
type SettingsApplicationSettingsAttributePropagationSettingsInput interface {
	pulumi.Input

	ToSettingsApplicationSettingsAttributePropagationSettingsOutput() SettingsApplicationSettingsAttributePropagationSettingsOutput
	ToSettingsApplicationSettingsAttributePropagationSettingsOutputWithContext(context.Context) SettingsApplicationSettingsAttributePropagationSettingsOutput
}

type SettingsApplicationSettingsAttributePropagationSettingsArgs struct {
	// Whether the provided attribute propagation settings should be evaluated on user requests.
	// If set to true, attributes returned from the expression will be propagated in the set output credentials.
	Enable pulumi.BoolPtrInput `pulumi:"enable"`
	// Raw string CEL expression. Must return a list of attributes. A maximum of 45 attributes can
	// be selected. Expressions can select different attribute types from attributes:
	// attributes.saml_attributes, attributes.iap_attributes.
	Expression pulumi.StringPtrInput `pulumi:"expression"`
	// Which output credentials attributes selected by the CEL expression should be propagated in.
	// All attributes will be fully duplicated in each selected output credential.
	// Possible values are:
	// * `HEADER`: Propagate attributes in the headers with "x-goog-iap-attr-" prefix.
	// * `JWT`: Propagate attributes in the JWT of the form:
	//   "additionalClaims": { "myAttribute": ["value1", "value2"] }
	// * `RCTOKEN`: Propagate attributes in the RCToken of the form: "
	//   additionalClaims": { "myAttribute": ["value1", "value2"] }
	//   Each value may be one of: `HEADER`, `JWT`, `RCTOKEN`.
	OutputCredentials pulumi.StringArrayInput `pulumi:"outputCredentials"`
}

func (SettingsApplicationSettingsAttributePropagationSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingsApplicationSettingsAttributePropagationSettings)(nil)).Elem()
}

func (i SettingsApplicationSettingsAttributePropagationSettingsArgs) ToSettingsApplicationSettingsAttributePropagationSettingsOutput() SettingsApplicationSettingsAttributePropagationSettingsOutput {
	return i.ToSettingsApplicationSettingsAttributePropagationSettingsOutputWithContext(context.Background())
}

func (i SettingsApplicationSettingsAttributePropagationSettingsArgs) ToSettingsApplicationSettingsAttributePropagationSettingsOutputWithContext(ctx context.Context) SettingsApplicationSettingsAttributePropagationSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsApplicationSettingsAttributePropagationSettingsOutput)
}

func (i SettingsApplicationSettingsAttributePropagationSettingsArgs) ToSettingsApplicationSettingsAttributePropagationSettingsPtrOutput() SettingsApplicationSettingsAttributePropagationSettingsPtrOutput {
	return i.ToSettingsApplicationSettingsAttributePropagationSettingsPtrOutputWithContext(context.Background())
}

func (i SettingsApplicationSettingsAttributePropagationSettingsArgs) ToSettingsApplicationSettingsAttributePropagationSettingsPtrOutputWithContext(ctx context.Context) SettingsApplicationSettingsAttributePropagationSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsApplicationSettingsAttributePropagationSettingsOutput).ToSettingsApplicationSettingsAttributePropagationSettingsPtrOutputWithContext(ctx)
}

// SettingsApplicationSettingsAttributePropagationSettingsPtrInput is an input type that accepts SettingsApplicationSettingsAttributePropagationSettingsArgs, SettingsApplicationSettingsAttributePropagationSettingsPtr and SettingsApplicationSettingsAttributePropagationSettingsPtrOutput values.
// You can construct a concrete instance of `SettingsApplicationSettingsAttributePropagationSettingsPtrInput` via:
//
//	        SettingsApplicationSettingsAttributePropagationSettingsArgs{...}
//
//	or:
//
//	        nil
type SettingsApplicationSettingsAttributePropagationSettingsPtrInput interface {
	pulumi.Input

	ToSettingsApplicationSettingsAttributePropagationSettingsPtrOutput() SettingsApplicationSettingsAttributePropagationSettingsPtrOutput
	ToSettingsApplicationSettingsAttributePropagationSettingsPtrOutputWithContext(context.Context) SettingsApplicationSettingsAttributePropagationSettingsPtrOutput
}

type settingsApplicationSettingsAttributePropagationSettingsPtrType SettingsApplicationSettingsAttributePropagationSettingsArgs

func SettingsApplicationSettingsAttributePropagationSettingsPtr(v *SettingsApplicationSettingsAttributePropagationSettingsArgs) SettingsApplicationSettingsAttributePropagationSettingsPtrInput {
	return (*settingsApplicationSettingsAttributePropagationSettingsPtrType)(v)
}

func (*settingsApplicationSettingsAttributePropagationSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingsApplicationSettingsAttributePropagationSettings)(nil)).Elem()
}

func (i *settingsApplicationSettingsAttributePropagationSettingsPtrType) ToSettingsApplicationSettingsAttributePropagationSettingsPtrOutput() SettingsApplicationSettingsAttributePropagationSettingsPtrOutput {
	return i.ToSettingsApplicationSettingsAttributePropagationSettingsPtrOutputWithContext(context.Background())
}

func (i *settingsApplicationSettingsAttributePropagationSettingsPtrType) ToSettingsApplicationSettingsAttributePropagationSettingsPtrOutputWithContext(ctx context.Context) SettingsApplicationSettingsAttributePropagationSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsApplicationSettingsAttributePropagationSettingsPtrOutput)
}

type SettingsApplicationSettingsAttributePropagationSettingsOutput struct{ *pulumi.OutputState }

func (SettingsApplicationSettingsAttributePropagationSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingsApplicationSettingsAttributePropagationSettings)(nil)).Elem()
}

func (o SettingsApplicationSettingsAttributePropagationSettingsOutput) ToSettingsApplicationSettingsAttributePropagationSettingsOutput() SettingsApplicationSettingsAttributePropagationSettingsOutput {
	return o
}

func (o SettingsApplicationSettingsAttributePropagationSettingsOutput) ToSettingsApplicationSettingsAttributePropagationSettingsOutputWithContext(ctx context.Context) SettingsApplicationSettingsAttributePropagationSettingsOutput {
	return o
}

func (o SettingsApplicationSettingsAttributePropagationSettingsOutput) ToSettingsApplicationSettingsAttributePropagationSettingsPtrOutput() SettingsApplicationSettingsAttributePropagationSettingsPtrOutput {
	return o.ToSettingsApplicationSettingsAttributePropagationSettingsPtrOutputWithContext(context.Background())
}

func (o SettingsApplicationSettingsAttributePropagationSettingsOutput) ToSettingsApplicationSettingsAttributePropagationSettingsPtrOutputWithContext(ctx context.Context) SettingsApplicationSettingsAttributePropagationSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SettingsApplicationSettingsAttributePropagationSettings) *SettingsApplicationSettingsAttributePropagationSettings {
		return &v
	}).(SettingsApplicationSettingsAttributePropagationSettingsPtrOutput)
}

// Whether the provided attribute propagation settings should be evaluated on user requests.
// If set to true, attributes returned from the expression will be propagated in the set output credentials.
func (o SettingsApplicationSettingsAttributePropagationSettingsOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SettingsApplicationSettingsAttributePropagationSettings) *bool { return v.Enable }).(pulumi.BoolPtrOutput)
}

// Raw string CEL expression. Must return a list of attributes. A maximum of 45 attributes can
// be selected. Expressions can select different attribute types from attributes:
// attributes.saml_attributes, attributes.iap_attributes.
func (o SettingsApplicationSettingsAttributePropagationSettingsOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SettingsApplicationSettingsAttributePropagationSettings) *string { return v.Expression }).(pulumi.StringPtrOutput)
}

// Which output credentials attributes selected by the CEL expression should be propagated in.
// All attributes will be fully duplicated in each selected output credential.
// Possible values are:
//   - `HEADER`: Propagate attributes in the headers with "x-goog-iap-attr-" prefix.
//   - `JWT`: Propagate attributes in the JWT of the form:
//     "additionalClaims": { "myAttribute": ["value1", "value2"] }
//   - `RCTOKEN`: Propagate attributes in the RCToken of the form: "
//     additionalClaims": { "myAttribute": ["value1", "value2"] }
//     Each value may be one of: `HEADER`, `JWT`, `RCTOKEN`.
func (o SettingsApplicationSettingsAttributePropagationSettingsOutput) OutputCredentials() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SettingsApplicationSettingsAttributePropagationSettings) []string { return v.OutputCredentials }).(pulumi.StringArrayOutput)
}

type SettingsApplicationSettingsAttributePropagationSettingsPtrOutput struct{ *pulumi.OutputState }

func (SettingsApplicationSettingsAttributePropagationSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingsApplicationSettingsAttributePropagationSettings)(nil)).Elem()
}

func (o SettingsApplicationSettingsAttributePropagationSettingsPtrOutput) ToSettingsApplicationSettingsAttributePropagationSettingsPtrOutput() SettingsApplicationSettingsAttributePropagationSettingsPtrOutput {
	return o
}

func (o SettingsApplicationSettingsAttributePropagationSettingsPtrOutput) ToSettingsApplicationSettingsAttributePropagationSettingsPtrOutputWithContext(ctx context.Context) SettingsApplicationSettingsAttributePropagationSettingsPtrOutput {
	return o
}

func (o SettingsApplicationSettingsAttributePropagationSettingsPtrOutput) Elem() SettingsApplicationSettingsAttributePropagationSettingsOutput {
	return o.ApplyT(func(v *SettingsApplicationSettingsAttributePropagationSettings) SettingsApplicationSettingsAttributePropagationSettings {
		if v != nil {
			return *v
		}
		var ret SettingsApplicationSettingsAttributePropagationSettings
		return ret
	}).(SettingsApplicationSettingsAttributePropagationSettingsOutput)
}

// Whether the provided attribute propagation settings should be evaluated on user requests.
// If set to true, attributes returned from the expression will be propagated in the set output credentials.
func (o SettingsApplicationSettingsAttributePropagationSettingsPtrOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SettingsApplicationSettingsAttributePropagationSettings) *bool {
		if v == nil {
			return nil
		}
		return v.Enable
	}).(pulumi.BoolPtrOutput)
}

// Raw string CEL expression. Must return a list of attributes. A maximum of 45 attributes can
// be selected. Expressions can select different attribute types from attributes:
// attributes.saml_attributes, attributes.iap_attributes.
func (o SettingsApplicationSettingsAttributePropagationSettingsPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SettingsApplicationSettingsAttributePropagationSettings) *string {
		if v == nil {
			return nil
		}
		return v.Expression
	}).(pulumi.StringPtrOutput)
}

// Which output credentials attributes selected by the CEL expression should be propagated in.
// All attributes will be fully duplicated in each selected output credential.
// Possible values are:
//   - `HEADER`: Propagate attributes in the headers with "x-goog-iap-attr-" prefix.
//   - `JWT`: Propagate attributes in the JWT of the form:
//     "additionalClaims": { "myAttribute": ["value1", "value2"] }
//   - `RCTOKEN`: Propagate attributes in the RCToken of the form: "
//     additionalClaims": { "myAttribute": ["value1", "value2"] }
//     Each value may be one of: `HEADER`, `JWT`, `RCTOKEN`.
func (o SettingsApplicationSettingsAttributePropagationSettingsPtrOutput) OutputCredentials() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SettingsApplicationSettingsAttributePropagationSettings) []string {
		if v == nil {
			return nil
		}
		return v.OutputCredentials
	}).(pulumi.StringArrayOutput)
}

type SettingsApplicationSettingsCsmSettings struct {
	// Audience claim set in the generated RCToken. This value is not validated by IAP.
	RctokenAud *string `pulumi:"rctokenAud"`
}

// SettingsApplicationSettingsCsmSettingsInput is an input type that accepts SettingsApplicationSettingsCsmSettingsArgs and SettingsApplicationSettingsCsmSettingsOutput values.
// You can construct a concrete instance of `SettingsApplicationSettingsCsmSettingsInput` via:
//
//	SettingsApplicationSettingsCsmSettingsArgs{...}
type SettingsApplicationSettingsCsmSettingsInput interface {
	pulumi.Input

	ToSettingsApplicationSettingsCsmSettingsOutput() SettingsApplicationSettingsCsmSettingsOutput
	ToSettingsApplicationSettingsCsmSettingsOutputWithContext(context.Context) SettingsApplicationSettingsCsmSettingsOutput
}

type SettingsApplicationSettingsCsmSettingsArgs struct {
	// Audience claim set in the generated RCToken. This value is not validated by IAP.
	RctokenAud pulumi.StringPtrInput `pulumi:"rctokenAud"`
}

func (SettingsApplicationSettingsCsmSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingsApplicationSettingsCsmSettings)(nil)).Elem()
}

func (i SettingsApplicationSettingsCsmSettingsArgs) ToSettingsApplicationSettingsCsmSettingsOutput() SettingsApplicationSettingsCsmSettingsOutput {
	return i.ToSettingsApplicationSettingsCsmSettingsOutputWithContext(context.Background())
}

func (i SettingsApplicationSettingsCsmSettingsArgs) ToSettingsApplicationSettingsCsmSettingsOutputWithContext(ctx context.Context) SettingsApplicationSettingsCsmSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsApplicationSettingsCsmSettingsOutput)
}

func (i SettingsApplicationSettingsCsmSettingsArgs) ToSettingsApplicationSettingsCsmSettingsPtrOutput() SettingsApplicationSettingsCsmSettingsPtrOutput {
	return i.ToSettingsApplicationSettingsCsmSettingsPtrOutputWithContext(context.Background())
}

func (i SettingsApplicationSettingsCsmSettingsArgs) ToSettingsApplicationSettingsCsmSettingsPtrOutputWithContext(ctx context.Context) SettingsApplicationSettingsCsmSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsApplicationSettingsCsmSettingsOutput).ToSettingsApplicationSettingsCsmSettingsPtrOutputWithContext(ctx)
}

// SettingsApplicationSettingsCsmSettingsPtrInput is an input type that accepts SettingsApplicationSettingsCsmSettingsArgs, SettingsApplicationSettingsCsmSettingsPtr and SettingsApplicationSettingsCsmSettingsPtrOutput values.
// You can construct a concrete instance of `SettingsApplicationSettingsCsmSettingsPtrInput` via:
//
//	        SettingsApplicationSettingsCsmSettingsArgs{...}
//
//	or:
//
//	        nil
type SettingsApplicationSettingsCsmSettingsPtrInput interface {
	pulumi.Input

	ToSettingsApplicationSettingsCsmSettingsPtrOutput() SettingsApplicationSettingsCsmSettingsPtrOutput
	ToSettingsApplicationSettingsCsmSettingsPtrOutputWithContext(context.Context) SettingsApplicationSettingsCsmSettingsPtrOutput
}

type settingsApplicationSettingsCsmSettingsPtrType SettingsApplicationSettingsCsmSettingsArgs

func SettingsApplicationSettingsCsmSettingsPtr(v *SettingsApplicationSettingsCsmSettingsArgs) SettingsApplicationSettingsCsmSettingsPtrInput {
	return (*settingsApplicationSettingsCsmSettingsPtrType)(v)
}

func (*settingsApplicationSettingsCsmSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingsApplicationSettingsCsmSettings)(nil)).Elem()
}

func (i *settingsApplicationSettingsCsmSettingsPtrType) ToSettingsApplicationSettingsCsmSettingsPtrOutput() SettingsApplicationSettingsCsmSettingsPtrOutput {
	return i.ToSettingsApplicationSettingsCsmSettingsPtrOutputWithContext(context.Background())
}

func (i *settingsApplicationSettingsCsmSettingsPtrType) ToSettingsApplicationSettingsCsmSettingsPtrOutputWithContext(ctx context.Context) SettingsApplicationSettingsCsmSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsApplicationSettingsCsmSettingsPtrOutput)
}

type SettingsApplicationSettingsCsmSettingsOutput struct{ *pulumi.OutputState }

func (SettingsApplicationSettingsCsmSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingsApplicationSettingsCsmSettings)(nil)).Elem()
}

func (o SettingsApplicationSettingsCsmSettingsOutput) ToSettingsApplicationSettingsCsmSettingsOutput() SettingsApplicationSettingsCsmSettingsOutput {
	return o
}

func (o SettingsApplicationSettingsCsmSettingsOutput) ToSettingsApplicationSettingsCsmSettingsOutputWithContext(ctx context.Context) SettingsApplicationSettingsCsmSettingsOutput {
	return o
}

func (o SettingsApplicationSettingsCsmSettingsOutput) ToSettingsApplicationSettingsCsmSettingsPtrOutput() SettingsApplicationSettingsCsmSettingsPtrOutput {
	return o.ToSettingsApplicationSettingsCsmSettingsPtrOutputWithContext(context.Background())
}

func (o SettingsApplicationSettingsCsmSettingsOutput) ToSettingsApplicationSettingsCsmSettingsPtrOutputWithContext(ctx context.Context) SettingsApplicationSettingsCsmSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SettingsApplicationSettingsCsmSettings) *SettingsApplicationSettingsCsmSettings {
		return &v
	}).(SettingsApplicationSettingsCsmSettingsPtrOutput)
}

// Audience claim set in the generated RCToken. This value is not validated by IAP.
func (o SettingsApplicationSettingsCsmSettingsOutput) RctokenAud() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SettingsApplicationSettingsCsmSettings) *string { return v.RctokenAud }).(pulumi.StringPtrOutput)
}

type SettingsApplicationSettingsCsmSettingsPtrOutput struct{ *pulumi.OutputState }

func (SettingsApplicationSettingsCsmSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingsApplicationSettingsCsmSettings)(nil)).Elem()
}

func (o SettingsApplicationSettingsCsmSettingsPtrOutput) ToSettingsApplicationSettingsCsmSettingsPtrOutput() SettingsApplicationSettingsCsmSettingsPtrOutput {
	return o
}

func (o SettingsApplicationSettingsCsmSettingsPtrOutput) ToSettingsApplicationSettingsCsmSettingsPtrOutputWithContext(ctx context.Context) SettingsApplicationSettingsCsmSettingsPtrOutput {
	return o
}

func (o SettingsApplicationSettingsCsmSettingsPtrOutput) Elem() SettingsApplicationSettingsCsmSettingsOutput {
	return o.ApplyT(func(v *SettingsApplicationSettingsCsmSettings) SettingsApplicationSettingsCsmSettings {
		if v != nil {
			return *v
		}
		var ret SettingsApplicationSettingsCsmSettings
		return ret
	}).(SettingsApplicationSettingsCsmSettingsOutput)
}

// Audience claim set in the generated RCToken. This value is not validated by IAP.
func (o SettingsApplicationSettingsCsmSettingsPtrOutput) RctokenAud() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SettingsApplicationSettingsCsmSettings) *string {
		if v == nil {
			return nil
		}
		return v.RctokenAud
	}).(pulumi.StringPtrOutput)
}

type TunnelDestGroupIamBindingCondition struct {
	Description *string `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression string `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title string `pulumi:"title"`
}

// TunnelDestGroupIamBindingConditionInput is an input type that accepts TunnelDestGroupIamBindingConditionArgs and TunnelDestGroupIamBindingConditionOutput values.
// You can construct a concrete instance of `TunnelDestGroupIamBindingConditionInput` via:
//
//	TunnelDestGroupIamBindingConditionArgs{...}
type TunnelDestGroupIamBindingConditionInput interface {
	pulumi.Input

	ToTunnelDestGroupIamBindingConditionOutput() TunnelDestGroupIamBindingConditionOutput
	ToTunnelDestGroupIamBindingConditionOutputWithContext(context.Context) TunnelDestGroupIamBindingConditionOutput
}

type TunnelDestGroupIamBindingConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression pulumi.StringInput `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title pulumi.StringInput `pulumi:"title"`
}

func (TunnelDestGroupIamBindingConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TunnelDestGroupIamBindingCondition)(nil)).Elem()
}

func (i TunnelDestGroupIamBindingConditionArgs) ToTunnelDestGroupIamBindingConditionOutput() TunnelDestGroupIamBindingConditionOutput {
	return i.ToTunnelDestGroupIamBindingConditionOutputWithContext(context.Background())
}

func (i TunnelDestGroupIamBindingConditionArgs) ToTunnelDestGroupIamBindingConditionOutputWithContext(ctx context.Context) TunnelDestGroupIamBindingConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TunnelDestGroupIamBindingConditionOutput)
}

func (i TunnelDestGroupIamBindingConditionArgs) ToTunnelDestGroupIamBindingConditionPtrOutput() TunnelDestGroupIamBindingConditionPtrOutput {
	return i.ToTunnelDestGroupIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i TunnelDestGroupIamBindingConditionArgs) ToTunnelDestGroupIamBindingConditionPtrOutputWithContext(ctx context.Context) TunnelDestGroupIamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TunnelDestGroupIamBindingConditionOutput).ToTunnelDestGroupIamBindingConditionPtrOutputWithContext(ctx)
}

// TunnelDestGroupIamBindingConditionPtrInput is an input type that accepts TunnelDestGroupIamBindingConditionArgs, TunnelDestGroupIamBindingConditionPtr and TunnelDestGroupIamBindingConditionPtrOutput values.
// You can construct a concrete instance of `TunnelDestGroupIamBindingConditionPtrInput` via:
//
//	        TunnelDestGroupIamBindingConditionArgs{...}
//
//	or:
//
//	        nil
type TunnelDestGroupIamBindingConditionPtrInput interface {
	pulumi.Input

	ToTunnelDestGroupIamBindingConditionPtrOutput() TunnelDestGroupIamBindingConditionPtrOutput
	ToTunnelDestGroupIamBindingConditionPtrOutputWithContext(context.Context) TunnelDestGroupIamBindingConditionPtrOutput
}

type tunnelDestGroupIamBindingConditionPtrType TunnelDestGroupIamBindingConditionArgs

func TunnelDestGroupIamBindingConditionPtr(v *TunnelDestGroupIamBindingConditionArgs) TunnelDestGroupIamBindingConditionPtrInput {
	return (*tunnelDestGroupIamBindingConditionPtrType)(v)
}

func (*tunnelDestGroupIamBindingConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TunnelDestGroupIamBindingCondition)(nil)).Elem()
}

func (i *tunnelDestGroupIamBindingConditionPtrType) ToTunnelDestGroupIamBindingConditionPtrOutput() TunnelDestGroupIamBindingConditionPtrOutput {
	return i.ToTunnelDestGroupIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i *tunnelDestGroupIamBindingConditionPtrType) ToTunnelDestGroupIamBindingConditionPtrOutputWithContext(ctx context.Context) TunnelDestGroupIamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TunnelDestGroupIamBindingConditionPtrOutput)
}

type TunnelDestGroupIamBindingConditionOutput struct{ *pulumi.OutputState }

func (TunnelDestGroupIamBindingConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TunnelDestGroupIamBindingCondition)(nil)).Elem()
}

func (o TunnelDestGroupIamBindingConditionOutput) ToTunnelDestGroupIamBindingConditionOutput() TunnelDestGroupIamBindingConditionOutput {
	return o
}

func (o TunnelDestGroupIamBindingConditionOutput) ToTunnelDestGroupIamBindingConditionOutputWithContext(ctx context.Context) TunnelDestGroupIamBindingConditionOutput {
	return o
}

func (o TunnelDestGroupIamBindingConditionOutput) ToTunnelDestGroupIamBindingConditionPtrOutput() TunnelDestGroupIamBindingConditionPtrOutput {
	return o.ToTunnelDestGroupIamBindingConditionPtrOutputWithContext(context.Background())
}

func (o TunnelDestGroupIamBindingConditionOutput) ToTunnelDestGroupIamBindingConditionPtrOutputWithContext(ctx context.Context) TunnelDestGroupIamBindingConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TunnelDestGroupIamBindingCondition) *TunnelDestGroupIamBindingCondition {
		return &v
	}).(TunnelDestGroupIamBindingConditionPtrOutput)
}

func (o TunnelDestGroupIamBindingConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TunnelDestGroupIamBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o TunnelDestGroupIamBindingConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v TunnelDestGroupIamBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o TunnelDestGroupIamBindingConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v TunnelDestGroupIamBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

type TunnelDestGroupIamBindingConditionPtrOutput struct{ *pulumi.OutputState }

func (TunnelDestGroupIamBindingConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TunnelDestGroupIamBindingCondition)(nil)).Elem()
}

func (o TunnelDestGroupIamBindingConditionPtrOutput) ToTunnelDestGroupIamBindingConditionPtrOutput() TunnelDestGroupIamBindingConditionPtrOutput {
	return o
}

func (o TunnelDestGroupIamBindingConditionPtrOutput) ToTunnelDestGroupIamBindingConditionPtrOutputWithContext(ctx context.Context) TunnelDestGroupIamBindingConditionPtrOutput {
	return o
}

func (o TunnelDestGroupIamBindingConditionPtrOutput) Elem() TunnelDestGroupIamBindingConditionOutput {
	return o.ApplyT(func(v *TunnelDestGroupIamBindingCondition) TunnelDestGroupIamBindingCondition {
		if v != nil {
			return *v
		}
		var ret TunnelDestGroupIamBindingCondition
		return ret
	}).(TunnelDestGroupIamBindingConditionOutput)
}

func (o TunnelDestGroupIamBindingConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TunnelDestGroupIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o TunnelDestGroupIamBindingConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TunnelDestGroupIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o TunnelDestGroupIamBindingConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TunnelDestGroupIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type TunnelDestGroupIamMemberCondition struct {
	Description *string `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression string `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title string `pulumi:"title"`
}

// TunnelDestGroupIamMemberConditionInput is an input type that accepts TunnelDestGroupIamMemberConditionArgs and TunnelDestGroupIamMemberConditionOutput values.
// You can construct a concrete instance of `TunnelDestGroupIamMemberConditionInput` via:
//
//	TunnelDestGroupIamMemberConditionArgs{...}
type TunnelDestGroupIamMemberConditionInput interface {
	pulumi.Input

	ToTunnelDestGroupIamMemberConditionOutput() TunnelDestGroupIamMemberConditionOutput
	ToTunnelDestGroupIamMemberConditionOutputWithContext(context.Context) TunnelDestGroupIamMemberConditionOutput
}

type TunnelDestGroupIamMemberConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression pulumi.StringInput `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title pulumi.StringInput `pulumi:"title"`
}

func (TunnelDestGroupIamMemberConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TunnelDestGroupIamMemberCondition)(nil)).Elem()
}

func (i TunnelDestGroupIamMemberConditionArgs) ToTunnelDestGroupIamMemberConditionOutput() TunnelDestGroupIamMemberConditionOutput {
	return i.ToTunnelDestGroupIamMemberConditionOutputWithContext(context.Background())
}

func (i TunnelDestGroupIamMemberConditionArgs) ToTunnelDestGroupIamMemberConditionOutputWithContext(ctx context.Context) TunnelDestGroupIamMemberConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TunnelDestGroupIamMemberConditionOutput)
}

func (i TunnelDestGroupIamMemberConditionArgs) ToTunnelDestGroupIamMemberConditionPtrOutput() TunnelDestGroupIamMemberConditionPtrOutput {
	return i.ToTunnelDestGroupIamMemberConditionPtrOutputWithContext(context.Background())
}

func (i TunnelDestGroupIamMemberConditionArgs) ToTunnelDestGroupIamMemberConditionPtrOutputWithContext(ctx context.Context) TunnelDestGroupIamMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TunnelDestGroupIamMemberConditionOutput).ToTunnelDestGroupIamMemberConditionPtrOutputWithContext(ctx)
}

// TunnelDestGroupIamMemberConditionPtrInput is an input type that accepts TunnelDestGroupIamMemberConditionArgs, TunnelDestGroupIamMemberConditionPtr and TunnelDestGroupIamMemberConditionPtrOutput values.
// You can construct a concrete instance of `TunnelDestGroupIamMemberConditionPtrInput` via:
//
//	        TunnelDestGroupIamMemberConditionArgs{...}
//
//	or:
//
//	        nil
type TunnelDestGroupIamMemberConditionPtrInput interface {
	pulumi.Input

	ToTunnelDestGroupIamMemberConditionPtrOutput() TunnelDestGroupIamMemberConditionPtrOutput
	ToTunnelDestGroupIamMemberConditionPtrOutputWithContext(context.Context) TunnelDestGroupIamMemberConditionPtrOutput
}

type tunnelDestGroupIamMemberConditionPtrType TunnelDestGroupIamMemberConditionArgs

func TunnelDestGroupIamMemberConditionPtr(v *TunnelDestGroupIamMemberConditionArgs) TunnelDestGroupIamMemberConditionPtrInput {
	return (*tunnelDestGroupIamMemberConditionPtrType)(v)
}

func (*tunnelDestGroupIamMemberConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TunnelDestGroupIamMemberCondition)(nil)).Elem()
}

func (i *tunnelDestGroupIamMemberConditionPtrType) ToTunnelDestGroupIamMemberConditionPtrOutput() TunnelDestGroupIamMemberConditionPtrOutput {
	return i.ToTunnelDestGroupIamMemberConditionPtrOutputWithContext(context.Background())
}

func (i *tunnelDestGroupIamMemberConditionPtrType) ToTunnelDestGroupIamMemberConditionPtrOutputWithContext(ctx context.Context) TunnelDestGroupIamMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TunnelDestGroupIamMemberConditionPtrOutput)
}

type TunnelDestGroupIamMemberConditionOutput struct{ *pulumi.OutputState }

func (TunnelDestGroupIamMemberConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TunnelDestGroupIamMemberCondition)(nil)).Elem()
}

func (o TunnelDestGroupIamMemberConditionOutput) ToTunnelDestGroupIamMemberConditionOutput() TunnelDestGroupIamMemberConditionOutput {
	return o
}

func (o TunnelDestGroupIamMemberConditionOutput) ToTunnelDestGroupIamMemberConditionOutputWithContext(ctx context.Context) TunnelDestGroupIamMemberConditionOutput {
	return o
}

func (o TunnelDestGroupIamMemberConditionOutput) ToTunnelDestGroupIamMemberConditionPtrOutput() TunnelDestGroupIamMemberConditionPtrOutput {
	return o.ToTunnelDestGroupIamMemberConditionPtrOutputWithContext(context.Background())
}

func (o TunnelDestGroupIamMemberConditionOutput) ToTunnelDestGroupIamMemberConditionPtrOutputWithContext(ctx context.Context) TunnelDestGroupIamMemberConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TunnelDestGroupIamMemberCondition) *TunnelDestGroupIamMemberCondition {
		return &v
	}).(TunnelDestGroupIamMemberConditionPtrOutput)
}

func (o TunnelDestGroupIamMemberConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TunnelDestGroupIamMemberCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o TunnelDestGroupIamMemberConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v TunnelDestGroupIamMemberCondition) string { return v.Expression }).(pulumi.StringOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o TunnelDestGroupIamMemberConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v TunnelDestGroupIamMemberCondition) string { return v.Title }).(pulumi.StringOutput)
}

type TunnelDestGroupIamMemberConditionPtrOutput struct{ *pulumi.OutputState }

func (TunnelDestGroupIamMemberConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TunnelDestGroupIamMemberCondition)(nil)).Elem()
}

func (o TunnelDestGroupIamMemberConditionPtrOutput) ToTunnelDestGroupIamMemberConditionPtrOutput() TunnelDestGroupIamMemberConditionPtrOutput {
	return o
}

func (o TunnelDestGroupIamMemberConditionPtrOutput) ToTunnelDestGroupIamMemberConditionPtrOutputWithContext(ctx context.Context) TunnelDestGroupIamMemberConditionPtrOutput {
	return o
}

func (o TunnelDestGroupIamMemberConditionPtrOutput) Elem() TunnelDestGroupIamMemberConditionOutput {
	return o.ApplyT(func(v *TunnelDestGroupIamMemberCondition) TunnelDestGroupIamMemberCondition {
		if v != nil {
			return *v
		}
		var ret TunnelDestGroupIamMemberCondition
		return ret
	}).(TunnelDestGroupIamMemberConditionOutput)
}

func (o TunnelDestGroupIamMemberConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TunnelDestGroupIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o TunnelDestGroupIamMemberConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TunnelDestGroupIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o TunnelDestGroupIamMemberConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TunnelDestGroupIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type TunnelIamBindingCondition struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description *string `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression string `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title string `pulumi:"title"`
}

// TunnelIamBindingConditionInput is an input type that accepts TunnelIamBindingConditionArgs and TunnelIamBindingConditionOutput values.
// You can construct a concrete instance of `TunnelIamBindingConditionInput` via:
//
//	TunnelIamBindingConditionArgs{...}
type TunnelIamBindingConditionInput interface {
	pulumi.Input

	ToTunnelIamBindingConditionOutput() TunnelIamBindingConditionOutput
	ToTunnelIamBindingConditionOutputWithContext(context.Context) TunnelIamBindingConditionOutput
}

type TunnelIamBindingConditionArgs struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression pulumi.StringInput `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title pulumi.StringInput `pulumi:"title"`
}

func (TunnelIamBindingConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TunnelIamBindingCondition)(nil)).Elem()
}

func (i TunnelIamBindingConditionArgs) ToTunnelIamBindingConditionOutput() TunnelIamBindingConditionOutput {
	return i.ToTunnelIamBindingConditionOutputWithContext(context.Background())
}

func (i TunnelIamBindingConditionArgs) ToTunnelIamBindingConditionOutputWithContext(ctx context.Context) TunnelIamBindingConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TunnelIamBindingConditionOutput)
}

func (i TunnelIamBindingConditionArgs) ToTunnelIamBindingConditionPtrOutput() TunnelIamBindingConditionPtrOutput {
	return i.ToTunnelIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i TunnelIamBindingConditionArgs) ToTunnelIamBindingConditionPtrOutputWithContext(ctx context.Context) TunnelIamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TunnelIamBindingConditionOutput).ToTunnelIamBindingConditionPtrOutputWithContext(ctx)
}

// TunnelIamBindingConditionPtrInput is an input type that accepts TunnelIamBindingConditionArgs, TunnelIamBindingConditionPtr and TunnelIamBindingConditionPtrOutput values.
// You can construct a concrete instance of `TunnelIamBindingConditionPtrInput` via:
//
//	        TunnelIamBindingConditionArgs{...}
//
//	or:
//
//	        nil
type TunnelIamBindingConditionPtrInput interface {
	pulumi.Input

	ToTunnelIamBindingConditionPtrOutput() TunnelIamBindingConditionPtrOutput
	ToTunnelIamBindingConditionPtrOutputWithContext(context.Context) TunnelIamBindingConditionPtrOutput
}

type tunnelIamBindingConditionPtrType TunnelIamBindingConditionArgs

func TunnelIamBindingConditionPtr(v *TunnelIamBindingConditionArgs) TunnelIamBindingConditionPtrInput {
	return (*tunnelIamBindingConditionPtrType)(v)
}

func (*tunnelIamBindingConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TunnelIamBindingCondition)(nil)).Elem()
}

func (i *tunnelIamBindingConditionPtrType) ToTunnelIamBindingConditionPtrOutput() TunnelIamBindingConditionPtrOutput {
	return i.ToTunnelIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i *tunnelIamBindingConditionPtrType) ToTunnelIamBindingConditionPtrOutputWithContext(ctx context.Context) TunnelIamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TunnelIamBindingConditionPtrOutput)
}

type TunnelIamBindingConditionOutput struct{ *pulumi.OutputState }

func (TunnelIamBindingConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TunnelIamBindingCondition)(nil)).Elem()
}

func (o TunnelIamBindingConditionOutput) ToTunnelIamBindingConditionOutput() TunnelIamBindingConditionOutput {
	return o
}

func (o TunnelIamBindingConditionOutput) ToTunnelIamBindingConditionOutputWithContext(ctx context.Context) TunnelIamBindingConditionOutput {
	return o
}

func (o TunnelIamBindingConditionOutput) ToTunnelIamBindingConditionPtrOutput() TunnelIamBindingConditionPtrOutput {
	return o.ToTunnelIamBindingConditionPtrOutputWithContext(context.Background())
}

func (o TunnelIamBindingConditionOutput) ToTunnelIamBindingConditionPtrOutputWithContext(ctx context.Context) TunnelIamBindingConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TunnelIamBindingCondition) *TunnelIamBindingCondition {
		return &v
	}).(TunnelIamBindingConditionPtrOutput)
}

// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o TunnelIamBindingConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TunnelIamBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o TunnelIamBindingConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v TunnelIamBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o TunnelIamBindingConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v TunnelIamBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

type TunnelIamBindingConditionPtrOutput struct{ *pulumi.OutputState }

func (TunnelIamBindingConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TunnelIamBindingCondition)(nil)).Elem()
}

func (o TunnelIamBindingConditionPtrOutput) ToTunnelIamBindingConditionPtrOutput() TunnelIamBindingConditionPtrOutput {
	return o
}

func (o TunnelIamBindingConditionPtrOutput) ToTunnelIamBindingConditionPtrOutputWithContext(ctx context.Context) TunnelIamBindingConditionPtrOutput {
	return o
}

func (o TunnelIamBindingConditionPtrOutput) Elem() TunnelIamBindingConditionOutput {
	return o.ApplyT(func(v *TunnelIamBindingCondition) TunnelIamBindingCondition {
		if v != nil {
			return *v
		}
		var ret TunnelIamBindingCondition
		return ret
	}).(TunnelIamBindingConditionOutput)
}

// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o TunnelIamBindingConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TunnelIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o TunnelIamBindingConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TunnelIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o TunnelIamBindingConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TunnelIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type TunnelIamMemberCondition struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description *string `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression string `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title string `pulumi:"title"`
}

// TunnelIamMemberConditionInput is an input type that accepts TunnelIamMemberConditionArgs and TunnelIamMemberConditionOutput values.
// You can construct a concrete instance of `TunnelIamMemberConditionInput` via:
//
//	TunnelIamMemberConditionArgs{...}
type TunnelIamMemberConditionInput interface {
	pulumi.Input

	ToTunnelIamMemberConditionOutput() TunnelIamMemberConditionOutput
	ToTunnelIamMemberConditionOutputWithContext(context.Context) TunnelIamMemberConditionOutput
}

type TunnelIamMemberConditionArgs struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression pulumi.StringInput `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title pulumi.StringInput `pulumi:"title"`
}

func (TunnelIamMemberConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TunnelIamMemberCondition)(nil)).Elem()
}

func (i TunnelIamMemberConditionArgs) ToTunnelIamMemberConditionOutput() TunnelIamMemberConditionOutput {
	return i.ToTunnelIamMemberConditionOutputWithContext(context.Background())
}

func (i TunnelIamMemberConditionArgs) ToTunnelIamMemberConditionOutputWithContext(ctx context.Context) TunnelIamMemberConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TunnelIamMemberConditionOutput)
}

func (i TunnelIamMemberConditionArgs) ToTunnelIamMemberConditionPtrOutput() TunnelIamMemberConditionPtrOutput {
	return i.ToTunnelIamMemberConditionPtrOutputWithContext(context.Background())
}

func (i TunnelIamMemberConditionArgs) ToTunnelIamMemberConditionPtrOutputWithContext(ctx context.Context) TunnelIamMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TunnelIamMemberConditionOutput).ToTunnelIamMemberConditionPtrOutputWithContext(ctx)
}

// TunnelIamMemberConditionPtrInput is an input type that accepts TunnelIamMemberConditionArgs, TunnelIamMemberConditionPtr and TunnelIamMemberConditionPtrOutput values.
// You can construct a concrete instance of `TunnelIamMemberConditionPtrInput` via:
//
//	        TunnelIamMemberConditionArgs{...}
//
//	or:
//
//	        nil
type TunnelIamMemberConditionPtrInput interface {
	pulumi.Input

	ToTunnelIamMemberConditionPtrOutput() TunnelIamMemberConditionPtrOutput
	ToTunnelIamMemberConditionPtrOutputWithContext(context.Context) TunnelIamMemberConditionPtrOutput
}

type tunnelIamMemberConditionPtrType TunnelIamMemberConditionArgs

func TunnelIamMemberConditionPtr(v *TunnelIamMemberConditionArgs) TunnelIamMemberConditionPtrInput {
	return (*tunnelIamMemberConditionPtrType)(v)
}

func (*tunnelIamMemberConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TunnelIamMemberCondition)(nil)).Elem()
}

func (i *tunnelIamMemberConditionPtrType) ToTunnelIamMemberConditionPtrOutput() TunnelIamMemberConditionPtrOutput {
	return i.ToTunnelIamMemberConditionPtrOutputWithContext(context.Background())
}

func (i *tunnelIamMemberConditionPtrType) ToTunnelIamMemberConditionPtrOutputWithContext(ctx context.Context) TunnelIamMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TunnelIamMemberConditionPtrOutput)
}

type TunnelIamMemberConditionOutput struct{ *pulumi.OutputState }

func (TunnelIamMemberConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TunnelIamMemberCondition)(nil)).Elem()
}

func (o TunnelIamMemberConditionOutput) ToTunnelIamMemberConditionOutput() TunnelIamMemberConditionOutput {
	return o
}

func (o TunnelIamMemberConditionOutput) ToTunnelIamMemberConditionOutputWithContext(ctx context.Context) TunnelIamMemberConditionOutput {
	return o
}

func (o TunnelIamMemberConditionOutput) ToTunnelIamMemberConditionPtrOutput() TunnelIamMemberConditionPtrOutput {
	return o.ToTunnelIamMemberConditionPtrOutputWithContext(context.Background())
}

func (o TunnelIamMemberConditionOutput) ToTunnelIamMemberConditionPtrOutputWithContext(ctx context.Context) TunnelIamMemberConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TunnelIamMemberCondition) *TunnelIamMemberCondition {
		return &v
	}).(TunnelIamMemberConditionPtrOutput)
}

// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o TunnelIamMemberConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TunnelIamMemberCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o TunnelIamMemberConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v TunnelIamMemberCondition) string { return v.Expression }).(pulumi.StringOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o TunnelIamMemberConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v TunnelIamMemberCondition) string { return v.Title }).(pulumi.StringOutput)
}

type TunnelIamMemberConditionPtrOutput struct{ *pulumi.OutputState }

func (TunnelIamMemberConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TunnelIamMemberCondition)(nil)).Elem()
}

func (o TunnelIamMemberConditionPtrOutput) ToTunnelIamMemberConditionPtrOutput() TunnelIamMemberConditionPtrOutput {
	return o
}

func (o TunnelIamMemberConditionPtrOutput) ToTunnelIamMemberConditionPtrOutputWithContext(ctx context.Context) TunnelIamMemberConditionPtrOutput {
	return o
}

func (o TunnelIamMemberConditionPtrOutput) Elem() TunnelIamMemberConditionOutput {
	return o.ApplyT(func(v *TunnelIamMemberCondition) TunnelIamMemberCondition {
		if v != nil {
			return *v
		}
		var ret TunnelIamMemberCondition
		return ret
	}).(TunnelIamMemberConditionOutput)
}

// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o TunnelIamMemberConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TunnelIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o TunnelIamMemberConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TunnelIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o TunnelIamMemberConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TunnelIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type TunnelInstanceIAMBindingCondition struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	//
	// > **Warning:** This provider considers the `role` and condition contents (`title`+`description`+`expression`) as the
	// identifier for the binding. This means that if any part of the condition is changed out-of-band, the provider will
	// consider it to be an entirely different resource and will treat it as such.
	Description *string `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression string `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title string `pulumi:"title"`
}

// TunnelInstanceIAMBindingConditionInput is an input type that accepts TunnelInstanceIAMBindingConditionArgs and TunnelInstanceIAMBindingConditionOutput values.
// You can construct a concrete instance of `TunnelInstanceIAMBindingConditionInput` via:
//
//	TunnelInstanceIAMBindingConditionArgs{...}
type TunnelInstanceIAMBindingConditionInput interface {
	pulumi.Input

	ToTunnelInstanceIAMBindingConditionOutput() TunnelInstanceIAMBindingConditionOutput
	ToTunnelInstanceIAMBindingConditionOutputWithContext(context.Context) TunnelInstanceIAMBindingConditionOutput
}

type TunnelInstanceIAMBindingConditionArgs struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	//
	// > **Warning:** This provider considers the `role` and condition contents (`title`+`description`+`expression`) as the
	// identifier for the binding. This means that if any part of the condition is changed out-of-band, the provider will
	// consider it to be an entirely different resource and will treat it as such.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression pulumi.StringInput `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title pulumi.StringInput `pulumi:"title"`
}

func (TunnelInstanceIAMBindingConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TunnelInstanceIAMBindingCondition)(nil)).Elem()
}

func (i TunnelInstanceIAMBindingConditionArgs) ToTunnelInstanceIAMBindingConditionOutput() TunnelInstanceIAMBindingConditionOutput {
	return i.ToTunnelInstanceIAMBindingConditionOutputWithContext(context.Background())
}

func (i TunnelInstanceIAMBindingConditionArgs) ToTunnelInstanceIAMBindingConditionOutputWithContext(ctx context.Context) TunnelInstanceIAMBindingConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TunnelInstanceIAMBindingConditionOutput)
}

func (i TunnelInstanceIAMBindingConditionArgs) ToTunnelInstanceIAMBindingConditionPtrOutput() TunnelInstanceIAMBindingConditionPtrOutput {
	return i.ToTunnelInstanceIAMBindingConditionPtrOutputWithContext(context.Background())
}

func (i TunnelInstanceIAMBindingConditionArgs) ToTunnelInstanceIAMBindingConditionPtrOutputWithContext(ctx context.Context) TunnelInstanceIAMBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TunnelInstanceIAMBindingConditionOutput).ToTunnelInstanceIAMBindingConditionPtrOutputWithContext(ctx)
}

// TunnelInstanceIAMBindingConditionPtrInput is an input type that accepts TunnelInstanceIAMBindingConditionArgs, TunnelInstanceIAMBindingConditionPtr and TunnelInstanceIAMBindingConditionPtrOutput values.
// You can construct a concrete instance of `TunnelInstanceIAMBindingConditionPtrInput` via:
//
//	        TunnelInstanceIAMBindingConditionArgs{...}
//
//	or:
//
//	        nil
type TunnelInstanceIAMBindingConditionPtrInput interface {
	pulumi.Input

	ToTunnelInstanceIAMBindingConditionPtrOutput() TunnelInstanceIAMBindingConditionPtrOutput
	ToTunnelInstanceIAMBindingConditionPtrOutputWithContext(context.Context) TunnelInstanceIAMBindingConditionPtrOutput
}

type tunnelInstanceIAMBindingConditionPtrType TunnelInstanceIAMBindingConditionArgs

func TunnelInstanceIAMBindingConditionPtr(v *TunnelInstanceIAMBindingConditionArgs) TunnelInstanceIAMBindingConditionPtrInput {
	return (*tunnelInstanceIAMBindingConditionPtrType)(v)
}

func (*tunnelInstanceIAMBindingConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TunnelInstanceIAMBindingCondition)(nil)).Elem()
}

func (i *tunnelInstanceIAMBindingConditionPtrType) ToTunnelInstanceIAMBindingConditionPtrOutput() TunnelInstanceIAMBindingConditionPtrOutput {
	return i.ToTunnelInstanceIAMBindingConditionPtrOutputWithContext(context.Background())
}

func (i *tunnelInstanceIAMBindingConditionPtrType) ToTunnelInstanceIAMBindingConditionPtrOutputWithContext(ctx context.Context) TunnelInstanceIAMBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TunnelInstanceIAMBindingConditionPtrOutput)
}

type TunnelInstanceIAMBindingConditionOutput struct{ *pulumi.OutputState }

func (TunnelInstanceIAMBindingConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TunnelInstanceIAMBindingCondition)(nil)).Elem()
}

func (o TunnelInstanceIAMBindingConditionOutput) ToTunnelInstanceIAMBindingConditionOutput() TunnelInstanceIAMBindingConditionOutput {
	return o
}

func (o TunnelInstanceIAMBindingConditionOutput) ToTunnelInstanceIAMBindingConditionOutputWithContext(ctx context.Context) TunnelInstanceIAMBindingConditionOutput {
	return o
}

func (o TunnelInstanceIAMBindingConditionOutput) ToTunnelInstanceIAMBindingConditionPtrOutput() TunnelInstanceIAMBindingConditionPtrOutput {
	return o.ToTunnelInstanceIAMBindingConditionPtrOutputWithContext(context.Background())
}

func (o TunnelInstanceIAMBindingConditionOutput) ToTunnelInstanceIAMBindingConditionPtrOutputWithContext(ctx context.Context) TunnelInstanceIAMBindingConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TunnelInstanceIAMBindingCondition) *TunnelInstanceIAMBindingCondition {
		return &v
	}).(TunnelInstanceIAMBindingConditionPtrOutput)
}

// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
//
// > **Warning:** This provider considers the `role` and condition contents (`title`+`description`+`expression`) as the
// identifier for the binding. This means that if any part of the condition is changed out-of-band, the provider will
// consider it to be an entirely different resource and will treat it as such.
func (o TunnelInstanceIAMBindingConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TunnelInstanceIAMBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o TunnelInstanceIAMBindingConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v TunnelInstanceIAMBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o TunnelInstanceIAMBindingConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v TunnelInstanceIAMBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

type TunnelInstanceIAMBindingConditionPtrOutput struct{ *pulumi.OutputState }

func (TunnelInstanceIAMBindingConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TunnelInstanceIAMBindingCondition)(nil)).Elem()
}

func (o TunnelInstanceIAMBindingConditionPtrOutput) ToTunnelInstanceIAMBindingConditionPtrOutput() TunnelInstanceIAMBindingConditionPtrOutput {
	return o
}

func (o TunnelInstanceIAMBindingConditionPtrOutput) ToTunnelInstanceIAMBindingConditionPtrOutputWithContext(ctx context.Context) TunnelInstanceIAMBindingConditionPtrOutput {
	return o
}

func (o TunnelInstanceIAMBindingConditionPtrOutput) Elem() TunnelInstanceIAMBindingConditionOutput {
	return o.ApplyT(func(v *TunnelInstanceIAMBindingCondition) TunnelInstanceIAMBindingCondition {
		if v != nil {
			return *v
		}
		var ret TunnelInstanceIAMBindingCondition
		return ret
	}).(TunnelInstanceIAMBindingConditionOutput)
}

// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
//
// > **Warning:** This provider considers the `role` and condition contents (`title`+`description`+`expression`) as the
// identifier for the binding. This means that if any part of the condition is changed out-of-band, the provider will
// consider it to be an entirely different resource and will treat it as such.
func (o TunnelInstanceIAMBindingConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TunnelInstanceIAMBindingCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o TunnelInstanceIAMBindingConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TunnelInstanceIAMBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o TunnelInstanceIAMBindingConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TunnelInstanceIAMBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type TunnelInstanceIAMMemberCondition struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	//
	// > **Warning:** This provider considers the `role` and condition contents (`title`+`description`+`expression`) as the
	// identifier for the binding. This means that if any part of the condition is changed out-of-band, the provider will
	// consider it to be an entirely different resource and will treat it as such.
	Description *string `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression string `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title string `pulumi:"title"`
}

// TunnelInstanceIAMMemberConditionInput is an input type that accepts TunnelInstanceIAMMemberConditionArgs and TunnelInstanceIAMMemberConditionOutput values.
// You can construct a concrete instance of `TunnelInstanceIAMMemberConditionInput` via:
//
//	TunnelInstanceIAMMemberConditionArgs{...}
type TunnelInstanceIAMMemberConditionInput interface {
	pulumi.Input

	ToTunnelInstanceIAMMemberConditionOutput() TunnelInstanceIAMMemberConditionOutput
	ToTunnelInstanceIAMMemberConditionOutputWithContext(context.Context) TunnelInstanceIAMMemberConditionOutput
}

type TunnelInstanceIAMMemberConditionArgs struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	//
	// > **Warning:** This provider considers the `role` and condition contents (`title`+`description`+`expression`) as the
	// identifier for the binding. This means that if any part of the condition is changed out-of-band, the provider will
	// consider it to be an entirely different resource and will treat it as such.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression pulumi.StringInput `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title pulumi.StringInput `pulumi:"title"`
}

func (TunnelInstanceIAMMemberConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TunnelInstanceIAMMemberCondition)(nil)).Elem()
}

func (i TunnelInstanceIAMMemberConditionArgs) ToTunnelInstanceIAMMemberConditionOutput() TunnelInstanceIAMMemberConditionOutput {
	return i.ToTunnelInstanceIAMMemberConditionOutputWithContext(context.Background())
}

func (i TunnelInstanceIAMMemberConditionArgs) ToTunnelInstanceIAMMemberConditionOutputWithContext(ctx context.Context) TunnelInstanceIAMMemberConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TunnelInstanceIAMMemberConditionOutput)
}

func (i TunnelInstanceIAMMemberConditionArgs) ToTunnelInstanceIAMMemberConditionPtrOutput() TunnelInstanceIAMMemberConditionPtrOutput {
	return i.ToTunnelInstanceIAMMemberConditionPtrOutputWithContext(context.Background())
}

func (i TunnelInstanceIAMMemberConditionArgs) ToTunnelInstanceIAMMemberConditionPtrOutputWithContext(ctx context.Context) TunnelInstanceIAMMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TunnelInstanceIAMMemberConditionOutput).ToTunnelInstanceIAMMemberConditionPtrOutputWithContext(ctx)
}

// TunnelInstanceIAMMemberConditionPtrInput is an input type that accepts TunnelInstanceIAMMemberConditionArgs, TunnelInstanceIAMMemberConditionPtr and TunnelInstanceIAMMemberConditionPtrOutput values.
// You can construct a concrete instance of `TunnelInstanceIAMMemberConditionPtrInput` via:
//
//	        TunnelInstanceIAMMemberConditionArgs{...}
//
//	or:
//
//	        nil
type TunnelInstanceIAMMemberConditionPtrInput interface {
	pulumi.Input

	ToTunnelInstanceIAMMemberConditionPtrOutput() TunnelInstanceIAMMemberConditionPtrOutput
	ToTunnelInstanceIAMMemberConditionPtrOutputWithContext(context.Context) TunnelInstanceIAMMemberConditionPtrOutput
}

type tunnelInstanceIAMMemberConditionPtrType TunnelInstanceIAMMemberConditionArgs

func TunnelInstanceIAMMemberConditionPtr(v *TunnelInstanceIAMMemberConditionArgs) TunnelInstanceIAMMemberConditionPtrInput {
	return (*tunnelInstanceIAMMemberConditionPtrType)(v)
}

func (*tunnelInstanceIAMMemberConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TunnelInstanceIAMMemberCondition)(nil)).Elem()
}

func (i *tunnelInstanceIAMMemberConditionPtrType) ToTunnelInstanceIAMMemberConditionPtrOutput() TunnelInstanceIAMMemberConditionPtrOutput {
	return i.ToTunnelInstanceIAMMemberConditionPtrOutputWithContext(context.Background())
}

func (i *tunnelInstanceIAMMemberConditionPtrType) ToTunnelInstanceIAMMemberConditionPtrOutputWithContext(ctx context.Context) TunnelInstanceIAMMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TunnelInstanceIAMMemberConditionPtrOutput)
}

type TunnelInstanceIAMMemberConditionOutput struct{ *pulumi.OutputState }

func (TunnelInstanceIAMMemberConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TunnelInstanceIAMMemberCondition)(nil)).Elem()
}

func (o TunnelInstanceIAMMemberConditionOutput) ToTunnelInstanceIAMMemberConditionOutput() TunnelInstanceIAMMemberConditionOutput {
	return o
}

func (o TunnelInstanceIAMMemberConditionOutput) ToTunnelInstanceIAMMemberConditionOutputWithContext(ctx context.Context) TunnelInstanceIAMMemberConditionOutput {
	return o
}

func (o TunnelInstanceIAMMemberConditionOutput) ToTunnelInstanceIAMMemberConditionPtrOutput() TunnelInstanceIAMMemberConditionPtrOutput {
	return o.ToTunnelInstanceIAMMemberConditionPtrOutputWithContext(context.Background())
}

func (o TunnelInstanceIAMMemberConditionOutput) ToTunnelInstanceIAMMemberConditionPtrOutputWithContext(ctx context.Context) TunnelInstanceIAMMemberConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TunnelInstanceIAMMemberCondition) *TunnelInstanceIAMMemberCondition {
		return &v
	}).(TunnelInstanceIAMMemberConditionPtrOutput)
}

// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
//
// > **Warning:** This provider considers the `role` and condition contents (`title`+`description`+`expression`) as the
// identifier for the binding. This means that if any part of the condition is changed out-of-band, the provider will
// consider it to be an entirely different resource and will treat it as such.
func (o TunnelInstanceIAMMemberConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TunnelInstanceIAMMemberCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o TunnelInstanceIAMMemberConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v TunnelInstanceIAMMemberCondition) string { return v.Expression }).(pulumi.StringOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o TunnelInstanceIAMMemberConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v TunnelInstanceIAMMemberCondition) string { return v.Title }).(pulumi.StringOutput)
}

type TunnelInstanceIAMMemberConditionPtrOutput struct{ *pulumi.OutputState }

func (TunnelInstanceIAMMemberConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TunnelInstanceIAMMemberCondition)(nil)).Elem()
}

func (o TunnelInstanceIAMMemberConditionPtrOutput) ToTunnelInstanceIAMMemberConditionPtrOutput() TunnelInstanceIAMMemberConditionPtrOutput {
	return o
}

func (o TunnelInstanceIAMMemberConditionPtrOutput) ToTunnelInstanceIAMMemberConditionPtrOutputWithContext(ctx context.Context) TunnelInstanceIAMMemberConditionPtrOutput {
	return o
}

func (o TunnelInstanceIAMMemberConditionPtrOutput) Elem() TunnelInstanceIAMMemberConditionOutput {
	return o.ApplyT(func(v *TunnelInstanceIAMMemberCondition) TunnelInstanceIAMMemberCondition {
		if v != nil {
			return *v
		}
		var ret TunnelInstanceIAMMemberCondition
		return ret
	}).(TunnelInstanceIAMMemberConditionOutput)
}

// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
//
// > **Warning:** This provider considers the `role` and condition contents (`title`+`description`+`expression`) as the
// identifier for the binding. This means that if any part of the condition is changed out-of-band, the provider will
// consider it to be an entirely different resource and will treat it as such.
func (o TunnelInstanceIAMMemberConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TunnelInstanceIAMMemberCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o TunnelInstanceIAMMemberConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TunnelInstanceIAMMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o TunnelInstanceIAMMemberConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TunnelInstanceIAMMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type WebBackendServiceIamBindingCondition struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	//
	// > **Warning:** This provider considers the `role` and condition contents (`title`+`description`+`expression`) as the
	// identifier for the binding. This means that if any part of the condition is changed out-of-band, the provider will
	// consider it to be an entirely different resource and will treat it as such.
	Description *string `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression string `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title string `pulumi:"title"`
}

// WebBackendServiceIamBindingConditionInput is an input type that accepts WebBackendServiceIamBindingConditionArgs and WebBackendServiceIamBindingConditionOutput values.
// You can construct a concrete instance of `WebBackendServiceIamBindingConditionInput` via:
//
//	WebBackendServiceIamBindingConditionArgs{...}
type WebBackendServiceIamBindingConditionInput interface {
	pulumi.Input

	ToWebBackendServiceIamBindingConditionOutput() WebBackendServiceIamBindingConditionOutput
	ToWebBackendServiceIamBindingConditionOutputWithContext(context.Context) WebBackendServiceIamBindingConditionOutput
}

type WebBackendServiceIamBindingConditionArgs struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	//
	// > **Warning:** This provider considers the `role` and condition contents (`title`+`description`+`expression`) as the
	// identifier for the binding. This means that if any part of the condition is changed out-of-band, the provider will
	// consider it to be an entirely different resource and will treat it as such.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression pulumi.StringInput `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title pulumi.StringInput `pulumi:"title"`
}

func (WebBackendServiceIamBindingConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebBackendServiceIamBindingCondition)(nil)).Elem()
}

func (i WebBackendServiceIamBindingConditionArgs) ToWebBackendServiceIamBindingConditionOutput() WebBackendServiceIamBindingConditionOutput {
	return i.ToWebBackendServiceIamBindingConditionOutputWithContext(context.Background())
}

func (i WebBackendServiceIamBindingConditionArgs) ToWebBackendServiceIamBindingConditionOutputWithContext(ctx context.Context) WebBackendServiceIamBindingConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebBackendServiceIamBindingConditionOutput)
}

func (i WebBackendServiceIamBindingConditionArgs) ToWebBackendServiceIamBindingConditionPtrOutput() WebBackendServiceIamBindingConditionPtrOutput {
	return i.ToWebBackendServiceIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i WebBackendServiceIamBindingConditionArgs) ToWebBackendServiceIamBindingConditionPtrOutputWithContext(ctx context.Context) WebBackendServiceIamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebBackendServiceIamBindingConditionOutput).ToWebBackendServiceIamBindingConditionPtrOutputWithContext(ctx)
}

// WebBackendServiceIamBindingConditionPtrInput is an input type that accepts WebBackendServiceIamBindingConditionArgs, WebBackendServiceIamBindingConditionPtr and WebBackendServiceIamBindingConditionPtrOutput values.
// You can construct a concrete instance of `WebBackendServiceIamBindingConditionPtrInput` via:
//
//	        WebBackendServiceIamBindingConditionArgs{...}
//
//	or:
//
//	        nil
type WebBackendServiceIamBindingConditionPtrInput interface {
	pulumi.Input

	ToWebBackendServiceIamBindingConditionPtrOutput() WebBackendServiceIamBindingConditionPtrOutput
	ToWebBackendServiceIamBindingConditionPtrOutputWithContext(context.Context) WebBackendServiceIamBindingConditionPtrOutput
}

type webBackendServiceIamBindingConditionPtrType WebBackendServiceIamBindingConditionArgs

func WebBackendServiceIamBindingConditionPtr(v *WebBackendServiceIamBindingConditionArgs) WebBackendServiceIamBindingConditionPtrInput {
	return (*webBackendServiceIamBindingConditionPtrType)(v)
}

func (*webBackendServiceIamBindingConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebBackendServiceIamBindingCondition)(nil)).Elem()
}

func (i *webBackendServiceIamBindingConditionPtrType) ToWebBackendServiceIamBindingConditionPtrOutput() WebBackendServiceIamBindingConditionPtrOutput {
	return i.ToWebBackendServiceIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i *webBackendServiceIamBindingConditionPtrType) ToWebBackendServiceIamBindingConditionPtrOutputWithContext(ctx context.Context) WebBackendServiceIamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebBackendServiceIamBindingConditionPtrOutput)
}

type WebBackendServiceIamBindingConditionOutput struct{ *pulumi.OutputState }

func (WebBackendServiceIamBindingConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebBackendServiceIamBindingCondition)(nil)).Elem()
}

func (o WebBackendServiceIamBindingConditionOutput) ToWebBackendServiceIamBindingConditionOutput() WebBackendServiceIamBindingConditionOutput {
	return o
}

func (o WebBackendServiceIamBindingConditionOutput) ToWebBackendServiceIamBindingConditionOutputWithContext(ctx context.Context) WebBackendServiceIamBindingConditionOutput {
	return o
}

func (o WebBackendServiceIamBindingConditionOutput) ToWebBackendServiceIamBindingConditionPtrOutput() WebBackendServiceIamBindingConditionPtrOutput {
	return o.ToWebBackendServiceIamBindingConditionPtrOutputWithContext(context.Background())
}

func (o WebBackendServiceIamBindingConditionOutput) ToWebBackendServiceIamBindingConditionPtrOutputWithContext(ctx context.Context) WebBackendServiceIamBindingConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebBackendServiceIamBindingCondition) *WebBackendServiceIamBindingCondition {
		return &v
	}).(WebBackendServiceIamBindingConditionPtrOutput)
}

// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
//
// > **Warning:** This provider considers the `role` and condition contents (`title`+`description`+`expression`) as the
// identifier for the binding. This means that if any part of the condition is changed out-of-band, the provider will
// consider it to be an entirely different resource and will treat it as such.
func (o WebBackendServiceIamBindingConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebBackendServiceIamBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o WebBackendServiceIamBindingConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v WebBackendServiceIamBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o WebBackendServiceIamBindingConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v WebBackendServiceIamBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

type WebBackendServiceIamBindingConditionPtrOutput struct{ *pulumi.OutputState }

func (WebBackendServiceIamBindingConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebBackendServiceIamBindingCondition)(nil)).Elem()
}

func (o WebBackendServiceIamBindingConditionPtrOutput) ToWebBackendServiceIamBindingConditionPtrOutput() WebBackendServiceIamBindingConditionPtrOutput {
	return o
}

func (o WebBackendServiceIamBindingConditionPtrOutput) ToWebBackendServiceIamBindingConditionPtrOutputWithContext(ctx context.Context) WebBackendServiceIamBindingConditionPtrOutput {
	return o
}

func (o WebBackendServiceIamBindingConditionPtrOutput) Elem() WebBackendServiceIamBindingConditionOutput {
	return o.ApplyT(func(v *WebBackendServiceIamBindingCondition) WebBackendServiceIamBindingCondition {
		if v != nil {
			return *v
		}
		var ret WebBackendServiceIamBindingCondition
		return ret
	}).(WebBackendServiceIamBindingConditionOutput)
}

// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
//
// > **Warning:** This provider considers the `role` and condition contents (`title`+`description`+`expression`) as the
// identifier for the binding. This means that if any part of the condition is changed out-of-band, the provider will
// consider it to be an entirely different resource and will treat it as such.
func (o WebBackendServiceIamBindingConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebBackendServiceIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o WebBackendServiceIamBindingConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebBackendServiceIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o WebBackendServiceIamBindingConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebBackendServiceIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type WebBackendServiceIamMemberCondition struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	//
	// > **Warning:** This provider considers the `role` and condition contents (`title`+`description`+`expression`) as the
	// identifier for the binding. This means that if any part of the condition is changed out-of-band, the provider will
	// consider it to be an entirely different resource and will treat it as such.
	Description *string `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression string `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title string `pulumi:"title"`
}

// WebBackendServiceIamMemberConditionInput is an input type that accepts WebBackendServiceIamMemberConditionArgs and WebBackendServiceIamMemberConditionOutput values.
// You can construct a concrete instance of `WebBackendServiceIamMemberConditionInput` via:
//
//	WebBackendServiceIamMemberConditionArgs{...}
type WebBackendServiceIamMemberConditionInput interface {
	pulumi.Input

	ToWebBackendServiceIamMemberConditionOutput() WebBackendServiceIamMemberConditionOutput
	ToWebBackendServiceIamMemberConditionOutputWithContext(context.Context) WebBackendServiceIamMemberConditionOutput
}

type WebBackendServiceIamMemberConditionArgs struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	//
	// > **Warning:** This provider considers the `role` and condition contents (`title`+`description`+`expression`) as the
	// identifier for the binding. This means that if any part of the condition is changed out-of-band, the provider will
	// consider it to be an entirely different resource and will treat it as such.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression pulumi.StringInput `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title pulumi.StringInput `pulumi:"title"`
}

func (WebBackendServiceIamMemberConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebBackendServiceIamMemberCondition)(nil)).Elem()
}

func (i WebBackendServiceIamMemberConditionArgs) ToWebBackendServiceIamMemberConditionOutput() WebBackendServiceIamMemberConditionOutput {
	return i.ToWebBackendServiceIamMemberConditionOutputWithContext(context.Background())
}

func (i WebBackendServiceIamMemberConditionArgs) ToWebBackendServiceIamMemberConditionOutputWithContext(ctx context.Context) WebBackendServiceIamMemberConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebBackendServiceIamMemberConditionOutput)
}

func (i WebBackendServiceIamMemberConditionArgs) ToWebBackendServiceIamMemberConditionPtrOutput() WebBackendServiceIamMemberConditionPtrOutput {
	return i.ToWebBackendServiceIamMemberConditionPtrOutputWithContext(context.Background())
}

func (i WebBackendServiceIamMemberConditionArgs) ToWebBackendServiceIamMemberConditionPtrOutputWithContext(ctx context.Context) WebBackendServiceIamMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebBackendServiceIamMemberConditionOutput).ToWebBackendServiceIamMemberConditionPtrOutputWithContext(ctx)
}

// WebBackendServiceIamMemberConditionPtrInput is an input type that accepts WebBackendServiceIamMemberConditionArgs, WebBackendServiceIamMemberConditionPtr and WebBackendServiceIamMemberConditionPtrOutput values.
// You can construct a concrete instance of `WebBackendServiceIamMemberConditionPtrInput` via:
//
//	        WebBackendServiceIamMemberConditionArgs{...}
//
//	or:
//
//	        nil
type WebBackendServiceIamMemberConditionPtrInput interface {
	pulumi.Input

	ToWebBackendServiceIamMemberConditionPtrOutput() WebBackendServiceIamMemberConditionPtrOutput
	ToWebBackendServiceIamMemberConditionPtrOutputWithContext(context.Context) WebBackendServiceIamMemberConditionPtrOutput
}

type webBackendServiceIamMemberConditionPtrType WebBackendServiceIamMemberConditionArgs

func WebBackendServiceIamMemberConditionPtr(v *WebBackendServiceIamMemberConditionArgs) WebBackendServiceIamMemberConditionPtrInput {
	return (*webBackendServiceIamMemberConditionPtrType)(v)
}

func (*webBackendServiceIamMemberConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebBackendServiceIamMemberCondition)(nil)).Elem()
}

func (i *webBackendServiceIamMemberConditionPtrType) ToWebBackendServiceIamMemberConditionPtrOutput() WebBackendServiceIamMemberConditionPtrOutput {
	return i.ToWebBackendServiceIamMemberConditionPtrOutputWithContext(context.Background())
}

func (i *webBackendServiceIamMemberConditionPtrType) ToWebBackendServiceIamMemberConditionPtrOutputWithContext(ctx context.Context) WebBackendServiceIamMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebBackendServiceIamMemberConditionPtrOutput)
}

type WebBackendServiceIamMemberConditionOutput struct{ *pulumi.OutputState }

func (WebBackendServiceIamMemberConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebBackendServiceIamMemberCondition)(nil)).Elem()
}

func (o WebBackendServiceIamMemberConditionOutput) ToWebBackendServiceIamMemberConditionOutput() WebBackendServiceIamMemberConditionOutput {
	return o
}

func (o WebBackendServiceIamMemberConditionOutput) ToWebBackendServiceIamMemberConditionOutputWithContext(ctx context.Context) WebBackendServiceIamMemberConditionOutput {
	return o
}

func (o WebBackendServiceIamMemberConditionOutput) ToWebBackendServiceIamMemberConditionPtrOutput() WebBackendServiceIamMemberConditionPtrOutput {
	return o.ToWebBackendServiceIamMemberConditionPtrOutputWithContext(context.Background())
}

func (o WebBackendServiceIamMemberConditionOutput) ToWebBackendServiceIamMemberConditionPtrOutputWithContext(ctx context.Context) WebBackendServiceIamMemberConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebBackendServiceIamMemberCondition) *WebBackendServiceIamMemberCondition {
		return &v
	}).(WebBackendServiceIamMemberConditionPtrOutput)
}

// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
//
// > **Warning:** This provider considers the `role` and condition contents (`title`+`description`+`expression`) as the
// identifier for the binding. This means that if any part of the condition is changed out-of-band, the provider will
// consider it to be an entirely different resource and will treat it as such.
func (o WebBackendServiceIamMemberConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebBackendServiceIamMemberCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o WebBackendServiceIamMemberConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v WebBackendServiceIamMemberCondition) string { return v.Expression }).(pulumi.StringOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o WebBackendServiceIamMemberConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v WebBackendServiceIamMemberCondition) string { return v.Title }).(pulumi.StringOutput)
}

type WebBackendServiceIamMemberConditionPtrOutput struct{ *pulumi.OutputState }

func (WebBackendServiceIamMemberConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebBackendServiceIamMemberCondition)(nil)).Elem()
}

func (o WebBackendServiceIamMemberConditionPtrOutput) ToWebBackendServiceIamMemberConditionPtrOutput() WebBackendServiceIamMemberConditionPtrOutput {
	return o
}

func (o WebBackendServiceIamMemberConditionPtrOutput) ToWebBackendServiceIamMemberConditionPtrOutputWithContext(ctx context.Context) WebBackendServiceIamMemberConditionPtrOutput {
	return o
}

func (o WebBackendServiceIamMemberConditionPtrOutput) Elem() WebBackendServiceIamMemberConditionOutput {
	return o.ApplyT(func(v *WebBackendServiceIamMemberCondition) WebBackendServiceIamMemberCondition {
		if v != nil {
			return *v
		}
		var ret WebBackendServiceIamMemberCondition
		return ret
	}).(WebBackendServiceIamMemberConditionOutput)
}

// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
//
// > **Warning:** This provider considers the `role` and condition contents (`title`+`description`+`expression`) as the
// identifier for the binding. This means that if any part of the condition is changed out-of-band, the provider will
// consider it to be an entirely different resource and will treat it as such.
func (o WebBackendServiceIamMemberConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebBackendServiceIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o WebBackendServiceIamMemberConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebBackendServiceIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o WebBackendServiceIamMemberConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebBackendServiceIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type WebIamBindingCondition struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	//
	// > **Warning:** This provider considers the `role` and condition contents (`title`+`description`+`expression`) as the
	// identifier for the binding. This means that if any part of the condition is changed out-of-band, the provider will
	// consider it to be an entirely different resource and will treat it as such.
	Description *string `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression string `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title string `pulumi:"title"`
}

// WebIamBindingConditionInput is an input type that accepts WebIamBindingConditionArgs and WebIamBindingConditionOutput values.
// You can construct a concrete instance of `WebIamBindingConditionInput` via:
//
//	WebIamBindingConditionArgs{...}
type WebIamBindingConditionInput interface {
	pulumi.Input

	ToWebIamBindingConditionOutput() WebIamBindingConditionOutput
	ToWebIamBindingConditionOutputWithContext(context.Context) WebIamBindingConditionOutput
}

type WebIamBindingConditionArgs struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	//
	// > **Warning:** This provider considers the `role` and condition contents (`title`+`description`+`expression`) as the
	// identifier for the binding. This means that if any part of the condition is changed out-of-band, the provider will
	// consider it to be an entirely different resource and will treat it as such.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression pulumi.StringInput `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title pulumi.StringInput `pulumi:"title"`
}

func (WebIamBindingConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebIamBindingCondition)(nil)).Elem()
}

func (i WebIamBindingConditionArgs) ToWebIamBindingConditionOutput() WebIamBindingConditionOutput {
	return i.ToWebIamBindingConditionOutputWithContext(context.Background())
}

func (i WebIamBindingConditionArgs) ToWebIamBindingConditionOutputWithContext(ctx context.Context) WebIamBindingConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebIamBindingConditionOutput)
}

func (i WebIamBindingConditionArgs) ToWebIamBindingConditionPtrOutput() WebIamBindingConditionPtrOutput {
	return i.ToWebIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i WebIamBindingConditionArgs) ToWebIamBindingConditionPtrOutputWithContext(ctx context.Context) WebIamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebIamBindingConditionOutput).ToWebIamBindingConditionPtrOutputWithContext(ctx)
}

// WebIamBindingConditionPtrInput is an input type that accepts WebIamBindingConditionArgs, WebIamBindingConditionPtr and WebIamBindingConditionPtrOutput values.
// You can construct a concrete instance of `WebIamBindingConditionPtrInput` via:
//
//	        WebIamBindingConditionArgs{...}
//
//	or:
//
//	        nil
type WebIamBindingConditionPtrInput interface {
	pulumi.Input

	ToWebIamBindingConditionPtrOutput() WebIamBindingConditionPtrOutput
	ToWebIamBindingConditionPtrOutputWithContext(context.Context) WebIamBindingConditionPtrOutput
}

type webIamBindingConditionPtrType WebIamBindingConditionArgs

func WebIamBindingConditionPtr(v *WebIamBindingConditionArgs) WebIamBindingConditionPtrInput {
	return (*webIamBindingConditionPtrType)(v)
}

func (*webIamBindingConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebIamBindingCondition)(nil)).Elem()
}

func (i *webIamBindingConditionPtrType) ToWebIamBindingConditionPtrOutput() WebIamBindingConditionPtrOutput {
	return i.ToWebIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i *webIamBindingConditionPtrType) ToWebIamBindingConditionPtrOutputWithContext(ctx context.Context) WebIamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebIamBindingConditionPtrOutput)
}

type WebIamBindingConditionOutput struct{ *pulumi.OutputState }

func (WebIamBindingConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebIamBindingCondition)(nil)).Elem()
}

func (o WebIamBindingConditionOutput) ToWebIamBindingConditionOutput() WebIamBindingConditionOutput {
	return o
}

func (o WebIamBindingConditionOutput) ToWebIamBindingConditionOutputWithContext(ctx context.Context) WebIamBindingConditionOutput {
	return o
}

func (o WebIamBindingConditionOutput) ToWebIamBindingConditionPtrOutput() WebIamBindingConditionPtrOutput {
	return o.ToWebIamBindingConditionPtrOutputWithContext(context.Background())
}

func (o WebIamBindingConditionOutput) ToWebIamBindingConditionPtrOutputWithContext(ctx context.Context) WebIamBindingConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebIamBindingCondition) *WebIamBindingCondition {
		return &v
	}).(WebIamBindingConditionPtrOutput)
}

// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
//
// > **Warning:** This provider considers the `role` and condition contents (`title`+`description`+`expression`) as the
// identifier for the binding. This means that if any part of the condition is changed out-of-band, the provider will
// consider it to be an entirely different resource and will treat it as such.
func (o WebIamBindingConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebIamBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o WebIamBindingConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v WebIamBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o WebIamBindingConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v WebIamBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

type WebIamBindingConditionPtrOutput struct{ *pulumi.OutputState }

func (WebIamBindingConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebIamBindingCondition)(nil)).Elem()
}

func (o WebIamBindingConditionPtrOutput) ToWebIamBindingConditionPtrOutput() WebIamBindingConditionPtrOutput {
	return o
}

func (o WebIamBindingConditionPtrOutput) ToWebIamBindingConditionPtrOutputWithContext(ctx context.Context) WebIamBindingConditionPtrOutput {
	return o
}

func (o WebIamBindingConditionPtrOutput) Elem() WebIamBindingConditionOutput {
	return o.ApplyT(func(v *WebIamBindingCondition) WebIamBindingCondition {
		if v != nil {
			return *v
		}
		var ret WebIamBindingCondition
		return ret
	}).(WebIamBindingConditionOutput)
}

// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
//
// > **Warning:** This provider considers the `role` and condition contents (`title`+`description`+`expression`) as the
// identifier for the binding. This means that if any part of the condition is changed out-of-band, the provider will
// consider it to be an entirely different resource and will treat it as such.
func (o WebIamBindingConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o WebIamBindingConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o WebIamBindingConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type WebIamMemberCondition struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	//
	// > **Warning:** This provider considers the `role` and condition contents (`title`+`description`+`expression`) as the
	// identifier for the binding. This means that if any part of the condition is changed out-of-band, the provider will
	// consider it to be an entirely different resource and will treat it as such.
	Description *string `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression string `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title string `pulumi:"title"`
}

// WebIamMemberConditionInput is an input type that accepts WebIamMemberConditionArgs and WebIamMemberConditionOutput values.
// You can construct a concrete instance of `WebIamMemberConditionInput` via:
//
//	WebIamMemberConditionArgs{...}
type WebIamMemberConditionInput interface {
	pulumi.Input

	ToWebIamMemberConditionOutput() WebIamMemberConditionOutput
	ToWebIamMemberConditionOutputWithContext(context.Context) WebIamMemberConditionOutput
}

type WebIamMemberConditionArgs struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	//
	// > **Warning:** This provider considers the `role` and condition contents (`title`+`description`+`expression`) as the
	// identifier for the binding. This means that if any part of the condition is changed out-of-band, the provider will
	// consider it to be an entirely different resource and will treat it as such.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression pulumi.StringInput `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title pulumi.StringInput `pulumi:"title"`
}

func (WebIamMemberConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebIamMemberCondition)(nil)).Elem()
}

func (i WebIamMemberConditionArgs) ToWebIamMemberConditionOutput() WebIamMemberConditionOutput {
	return i.ToWebIamMemberConditionOutputWithContext(context.Background())
}

func (i WebIamMemberConditionArgs) ToWebIamMemberConditionOutputWithContext(ctx context.Context) WebIamMemberConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebIamMemberConditionOutput)
}

func (i WebIamMemberConditionArgs) ToWebIamMemberConditionPtrOutput() WebIamMemberConditionPtrOutput {
	return i.ToWebIamMemberConditionPtrOutputWithContext(context.Background())
}

func (i WebIamMemberConditionArgs) ToWebIamMemberConditionPtrOutputWithContext(ctx context.Context) WebIamMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebIamMemberConditionOutput).ToWebIamMemberConditionPtrOutputWithContext(ctx)
}

// WebIamMemberConditionPtrInput is an input type that accepts WebIamMemberConditionArgs, WebIamMemberConditionPtr and WebIamMemberConditionPtrOutput values.
// You can construct a concrete instance of `WebIamMemberConditionPtrInput` via:
//
//	        WebIamMemberConditionArgs{...}
//
//	or:
//
//	        nil
type WebIamMemberConditionPtrInput interface {
	pulumi.Input

	ToWebIamMemberConditionPtrOutput() WebIamMemberConditionPtrOutput
	ToWebIamMemberConditionPtrOutputWithContext(context.Context) WebIamMemberConditionPtrOutput
}

type webIamMemberConditionPtrType WebIamMemberConditionArgs

func WebIamMemberConditionPtr(v *WebIamMemberConditionArgs) WebIamMemberConditionPtrInput {
	return (*webIamMemberConditionPtrType)(v)
}

func (*webIamMemberConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebIamMemberCondition)(nil)).Elem()
}

func (i *webIamMemberConditionPtrType) ToWebIamMemberConditionPtrOutput() WebIamMemberConditionPtrOutput {
	return i.ToWebIamMemberConditionPtrOutputWithContext(context.Background())
}

func (i *webIamMemberConditionPtrType) ToWebIamMemberConditionPtrOutputWithContext(ctx context.Context) WebIamMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebIamMemberConditionPtrOutput)
}

type WebIamMemberConditionOutput struct{ *pulumi.OutputState }

func (WebIamMemberConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebIamMemberCondition)(nil)).Elem()
}

func (o WebIamMemberConditionOutput) ToWebIamMemberConditionOutput() WebIamMemberConditionOutput {
	return o
}

func (o WebIamMemberConditionOutput) ToWebIamMemberConditionOutputWithContext(ctx context.Context) WebIamMemberConditionOutput {
	return o
}

func (o WebIamMemberConditionOutput) ToWebIamMemberConditionPtrOutput() WebIamMemberConditionPtrOutput {
	return o.ToWebIamMemberConditionPtrOutputWithContext(context.Background())
}

func (o WebIamMemberConditionOutput) ToWebIamMemberConditionPtrOutputWithContext(ctx context.Context) WebIamMemberConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebIamMemberCondition) *WebIamMemberCondition {
		return &v
	}).(WebIamMemberConditionPtrOutput)
}

// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
//
// > **Warning:** This provider considers the `role` and condition contents (`title`+`description`+`expression`) as the
// identifier for the binding. This means that if any part of the condition is changed out-of-band, the provider will
// consider it to be an entirely different resource and will treat it as such.
func (o WebIamMemberConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebIamMemberCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o WebIamMemberConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v WebIamMemberCondition) string { return v.Expression }).(pulumi.StringOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o WebIamMemberConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v WebIamMemberCondition) string { return v.Title }).(pulumi.StringOutput)
}

type WebIamMemberConditionPtrOutput struct{ *pulumi.OutputState }

func (WebIamMemberConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebIamMemberCondition)(nil)).Elem()
}

func (o WebIamMemberConditionPtrOutput) ToWebIamMemberConditionPtrOutput() WebIamMemberConditionPtrOutput {
	return o
}

func (o WebIamMemberConditionPtrOutput) ToWebIamMemberConditionPtrOutputWithContext(ctx context.Context) WebIamMemberConditionPtrOutput {
	return o
}

func (o WebIamMemberConditionPtrOutput) Elem() WebIamMemberConditionOutput {
	return o.ApplyT(func(v *WebIamMemberCondition) WebIamMemberCondition {
		if v != nil {
			return *v
		}
		var ret WebIamMemberCondition
		return ret
	}).(WebIamMemberConditionOutput)
}

// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
//
// > **Warning:** This provider considers the `role` and condition contents (`title`+`description`+`expression`) as the
// identifier for the binding. This means that if any part of the condition is changed out-of-band, the provider will
// consider it to be an entirely different resource and will treat it as such.
func (o WebIamMemberConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o WebIamMemberConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o WebIamMemberConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type WebRegionBackendServiceIamBindingCondition struct {
	Description *string `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression string `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title string `pulumi:"title"`
}

// WebRegionBackendServiceIamBindingConditionInput is an input type that accepts WebRegionBackendServiceIamBindingConditionArgs and WebRegionBackendServiceIamBindingConditionOutput values.
// You can construct a concrete instance of `WebRegionBackendServiceIamBindingConditionInput` via:
//
//	WebRegionBackendServiceIamBindingConditionArgs{...}
type WebRegionBackendServiceIamBindingConditionInput interface {
	pulumi.Input

	ToWebRegionBackendServiceIamBindingConditionOutput() WebRegionBackendServiceIamBindingConditionOutput
	ToWebRegionBackendServiceIamBindingConditionOutputWithContext(context.Context) WebRegionBackendServiceIamBindingConditionOutput
}

type WebRegionBackendServiceIamBindingConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression pulumi.StringInput `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title pulumi.StringInput `pulumi:"title"`
}

func (WebRegionBackendServiceIamBindingConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebRegionBackendServiceIamBindingCondition)(nil)).Elem()
}

func (i WebRegionBackendServiceIamBindingConditionArgs) ToWebRegionBackendServiceIamBindingConditionOutput() WebRegionBackendServiceIamBindingConditionOutput {
	return i.ToWebRegionBackendServiceIamBindingConditionOutputWithContext(context.Background())
}

func (i WebRegionBackendServiceIamBindingConditionArgs) ToWebRegionBackendServiceIamBindingConditionOutputWithContext(ctx context.Context) WebRegionBackendServiceIamBindingConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebRegionBackendServiceIamBindingConditionOutput)
}

func (i WebRegionBackendServiceIamBindingConditionArgs) ToWebRegionBackendServiceIamBindingConditionPtrOutput() WebRegionBackendServiceIamBindingConditionPtrOutput {
	return i.ToWebRegionBackendServiceIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i WebRegionBackendServiceIamBindingConditionArgs) ToWebRegionBackendServiceIamBindingConditionPtrOutputWithContext(ctx context.Context) WebRegionBackendServiceIamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebRegionBackendServiceIamBindingConditionOutput).ToWebRegionBackendServiceIamBindingConditionPtrOutputWithContext(ctx)
}

// WebRegionBackendServiceIamBindingConditionPtrInput is an input type that accepts WebRegionBackendServiceIamBindingConditionArgs, WebRegionBackendServiceIamBindingConditionPtr and WebRegionBackendServiceIamBindingConditionPtrOutput values.
// You can construct a concrete instance of `WebRegionBackendServiceIamBindingConditionPtrInput` via:
//
//	        WebRegionBackendServiceIamBindingConditionArgs{...}
//
//	or:
//
//	        nil
type WebRegionBackendServiceIamBindingConditionPtrInput interface {
	pulumi.Input

	ToWebRegionBackendServiceIamBindingConditionPtrOutput() WebRegionBackendServiceIamBindingConditionPtrOutput
	ToWebRegionBackendServiceIamBindingConditionPtrOutputWithContext(context.Context) WebRegionBackendServiceIamBindingConditionPtrOutput
}

type webRegionBackendServiceIamBindingConditionPtrType WebRegionBackendServiceIamBindingConditionArgs

func WebRegionBackendServiceIamBindingConditionPtr(v *WebRegionBackendServiceIamBindingConditionArgs) WebRegionBackendServiceIamBindingConditionPtrInput {
	return (*webRegionBackendServiceIamBindingConditionPtrType)(v)
}

func (*webRegionBackendServiceIamBindingConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebRegionBackendServiceIamBindingCondition)(nil)).Elem()
}

func (i *webRegionBackendServiceIamBindingConditionPtrType) ToWebRegionBackendServiceIamBindingConditionPtrOutput() WebRegionBackendServiceIamBindingConditionPtrOutput {
	return i.ToWebRegionBackendServiceIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i *webRegionBackendServiceIamBindingConditionPtrType) ToWebRegionBackendServiceIamBindingConditionPtrOutputWithContext(ctx context.Context) WebRegionBackendServiceIamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebRegionBackendServiceIamBindingConditionPtrOutput)
}

type WebRegionBackendServiceIamBindingConditionOutput struct{ *pulumi.OutputState }

func (WebRegionBackendServiceIamBindingConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebRegionBackendServiceIamBindingCondition)(nil)).Elem()
}

func (o WebRegionBackendServiceIamBindingConditionOutput) ToWebRegionBackendServiceIamBindingConditionOutput() WebRegionBackendServiceIamBindingConditionOutput {
	return o
}

func (o WebRegionBackendServiceIamBindingConditionOutput) ToWebRegionBackendServiceIamBindingConditionOutputWithContext(ctx context.Context) WebRegionBackendServiceIamBindingConditionOutput {
	return o
}

func (o WebRegionBackendServiceIamBindingConditionOutput) ToWebRegionBackendServiceIamBindingConditionPtrOutput() WebRegionBackendServiceIamBindingConditionPtrOutput {
	return o.ToWebRegionBackendServiceIamBindingConditionPtrOutputWithContext(context.Background())
}

func (o WebRegionBackendServiceIamBindingConditionOutput) ToWebRegionBackendServiceIamBindingConditionPtrOutputWithContext(ctx context.Context) WebRegionBackendServiceIamBindingConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebRegionBackendServiceIamBindingCondition) *WebRegionBackendServiceIamBindingCondition {
		return &v
	}).(WebRegionBackendServiceIamBindingConditionPtrOutput)
}

func (o WebRegionBackendServiceIamBindingConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebRegionBackendServiceIamBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o WebRegionBackendServiceIamBindingConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v WebRegionBackendServiceIamBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o WebRegionBackendServiceIamBindingConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v WebRegionBackendServiceIamBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

type WebRegionBackendServiceIamBindingConditionPtrOutput struct{ *pulumi.OutputState }

func (WebRegionBackendServiceIamBindingConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebRegionBackendServiceIamBindingCondition)(nil)).Elem()
}

func (o WebRegionBackendServiceIamBindingConditionPtrOutput) ToWebRegionBackendServiceIamBindingConditionPtrOutput() WebRegionBackendServiceIamBindingConditionPtrOutput {
	return o
}

func (o WebRegionBackendServiceIamBindingConditionPtrOutput) ToWebRegionBackendServiceIamBindingConditionPtrOutputWithContext(ctx context.Context) WebRegionBackendServiceIamBindingConditionPtrOutput {
	return o
}

func (o WebRegionBackendServiceIamBindingConditionPtrOutput) Elem() WebRegionBackendServiceIamBindingConditionOutput {
	return o.ApplyT(func(v *WebRegionBackendServiceIamBindingCondition) WebRegionBackendServiceIamBindingCondition {
		if v != nil {
			return *v
		}
		var ret WebRegionBackendServiceIamBindingCondition
		return ret
	}).(WebRegionBackendServiceIamBindingConditionOutput)
}

func (o WebRegionBackendServiceIamBindingConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebRegionBackendServiceIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o WebRegionBackendServiceIamBindingConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebRegionBackendServiceIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o WebRegionBackendServiceIamBindingConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebRegionBackendServiceIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type WebRegionBackendServiceIamMemberCondition struct {
	Description *string `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression string `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title string `pulumi:"title"`
}

// WebRegionBackendServiceIamMemberConditionInput is an input type that accepts WebRegionBackendServiceIamMemberConditionArgs and WebRegionBackendServiceIamMemberConditionOutput values.
// You can construct a concrete instance of `WebRegionBackendServiceIamMemberConditionInput` via:
//
//	WebRegionBackendServiceIamMemberConditionArgs{...}
type WebRegionBackendServiceIamMemberConditionInput interface {
	pulumi.Input

	ToWebRegionBackendServiceIamMemberConditionOutput() WebRegionBackendServiceIamMemberConditionOutput
	ToWebRegionBackendServiceIamMemberConditionOutputWithContext(context.Context) WebRegionBackendServiceIamMemberConditionOutput
}

type WebRegionBackendServiceIamMemberConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression pulumi.StringInput `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title pulumi.StringInput `pulumi:"title"`
}

func (WebRegionBackendServiceIamMemberConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebRegionBackendServiceIamMemberCondition)(nil)).Elem()
}

func (i WebRegionBackendServiceIamMemberConditionArgs) ToWebRegionBackendServiceIamMemberConditionOutput() WebRegionBackendServiceIamMemberConditionOutput {
	return i.ToWebRegionBackendServiceIamMemberConditionOutputWithContext(context.Background())
}

func (i WebRegionBackendServiceIamMemberConditionArgs) ToWebRegionBackendServiceIamMemberConditionOutputWithContext(ctx context.Context) WebRegionBackendServiceIamMemberConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebRegionBackendServiceIamMemberConditionOutput)
}

func (i WebRegionBackendServiceIamMemberConditionArgs) ToWebRegionBackendServiceIamMemberConditionPtrOutput() WebRegionBackendServiceIamMemberConditionPtrOutput {
	return i.ToWebRegionBackendServiceIamMemberConditionPtrOutputWithContext(context.Background())
}

func (i WebRegionBackendServiceIamMemberConditionArgs) ToWebRegionBackendServiceIamMemberConditionPtrOutputWithContext(ctx context.Context) WebRegionBackendServiceIamMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebRegionBackendServiceIamMemberConditionOutput).ToWebRegionBackendServiceIamMemberConditionPtrOutputWithContext(ctx)
}

// WebRegionBackendServiceIamMemberConditionPtrInput is an input type that accepts WebRegionBackendServiceIamMemberConditionArgs, WebRegionBackendServiceIamMemberConditionPtr and WebRegionBackendServiceIamMemberConditionPtrOutput values.
// You can construct a concrete instance of `WebRegionBackendServiceIamMemberConditionPtrInput` via:
//
//	        WebRegionBackendServiceIamMemberConditionArgs{...}
//
//	or:
//
//	        nil
type WebRegionBackendServiceIamMemberConditionPtrInput interface {
	pulumi.Input

	ToWebRegionBackendServiceIamMemberConditionPtrOutput() WebRegionBackendServiceIamMemberConditionPtrOutput
	ToWebRegionBackendServiceIamMemberConditionPtrOutputWithContext(context.Context) WebRegionBackendServiceIamMemberConditionPtrOutput
}

type webRegionBackendServiceIamMemberConditionPtrType WebRegionBackendServiceIamMemberConditionArgs

func WebRegionBackendServiceIamMemberConditionPtr(v *WebRegionBackendServiceIamMemberConditionArgs) WebRegionBackendServiceIamMemberConditionPtrInput {
	return (*webRegionBackendServiceIamMemberConditionPtrType)(v)
}

func (*webRegionBackendServiceIamMemberConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebRegionBackendServiceIamMemberCondition)(nil)).Elem()
}

func (i *webRegionBackendServiceIamMemberConditionPtrType) ToWebRegionBackendServiceIamMemberConditionPtrOutput() WebRegionBackendServiceIamMemberConditionPtrOutput {
	return i.ToWebRegionBackendServiceIamMemberConditionPtrOutputWithContext(context.Background())
}

func (i *webRegionBackendServiceIamMemberConditionPtrType) ToWebRegionBackendServiceIamMemberConditionPtrOutputWithContext(ctx context.Context) WebRegionBackendServiceIamMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebRegionBackendServiceIamMemberConditionPtrOutput)
}

type WebRegionBackendServiceIamMemberConditionOutput struct{ *pulumi.OutputState }

func (WebRegionBackendServiceIamMemberConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebRegionBackendServiceIamMemberCondition)(nil)).Elem()
}

func (o WebRegionBackendServiceIamMemberConditionOutput) ToWebRegionBackendServiceIamMemberConditionOutput() WebRegionBackendServiceIamMemberConditionOutput {
	return o
}

func (o WebRegionBackendServiceIamMemberConditionOutput) ToWebRegionBackendServiceIamMemberConditionOutputWithContext(ctx context.Context) WebRegionBackendServiceIamMemberConditionOutput {
	return o
}

func (o WebRegionBackendServiceIamMemberConditionOutput) ToWebRegionBackendServiceIamMemberConditionPtrOutput() WebRegionBackendServiceIamMemberConditionPtrOutput {
	return o.ToWebRegionBackendServiceIamMemberConditionPtrOutputWithContext(context.Background())
}

func (o WebRegionBackendServiceIamMemberConditionOutput) ToWebRegionBackendServiceIamMemberConditionPtrOutputWithContext(ctx context.Context) WebRegionBackendServiceIamMemberConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebRegionBackendServiceIamMemberCondition) *WebRegionBackendServiceIamMemberCondition {
		return &v
	}).(WebRegionBackendServiceIamMemberConditionPtrOutput)
}

func (o WebRegionBackendServiceIamMemberConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebRegionBackendServiceIamMemberCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o WebRegionBackendServiceIamMemberConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v WebRegionBackendServiceIamMemberCondition) string { return v.Expression }).(pulumi.StringOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o WebRegionBackendServiceIamMemberConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v WebRegionBackendServiceIamMemberCondition) string { return v.Title }).(pulumi.StringOutput)
}

type WebRegionBackendServiceIamMemberConditionPtrOutput struct{ *pulumi.OutputState }

func (WebRegionBackendServiceIamMemberConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebRegionBackendServiceIamMemberCondition)(nil)).Elem()
}

func (o WebRegionBackendServiceIamMemberConditionPtrOutput) ToWebRegionBackendServiceIamMemberConditionPtrOutput() WebRegionBackendServiceIamMemberConditionPtrOutput {
	return o
}

func (o WebRegionBackendServiceIamMemberConditionPtrOutput) ToWebRegionBackendServiceIamMemberConditionPtrOutputWithContext(ctx context.Context) WebRegionBackendServiceIamMemberConditionPtrOutput {
	return o
}

func (o WebRegionBackendServiceIamMemberConditionPtrOutput) Elem() WebRegionBackendServiceIamMemberConditionOutput {
	return o.ApplyT(func(v *WebRegionBackendServiceIamMemberCondition) WebRegionBackendServiceIamMemberCondition {
		if v != nil {
			return *v
		}
		var ret WebRegionBackendServiceIamMemberCondition
		return ret
	}).(WebRegionBackendServiceIamMemberConditionOutput)
}

func (o WebRegionBackendServiceIamMemberConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebRegionBackendServiceIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o WebRegionBackendServiceIamMemberConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebRegionBackendServiceIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o WebRegionBackendServiceIamMemberConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebRegionBackendServiceIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type WebTypeAppEngingIamBindingCondition struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	//
	// > **Warning:** This provider considers the `role` and condition contents (`title`+`description`+`expression`) as the
	// identifier for the binding. This means that if any part of the condition is changed out-of-band, the provider will
	// consider it to be an entirely different resource and will treat it as such.
	Description *string `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression string `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title string `pulumi:"title"`
}

// WebTypeAppEngingIamBindingConditionInput is an input type that accepts WebTypeAppEngingIamBindingConditionArgs and WebTypeAppEngingIamBindingConditionOutput values.
// You can construct a concrete instance of `WebTypeAppEngingIamBindingConditionInput` via:
//
//	WebTypeAppEngingIamBindingConditionArgs{...}
type WebTypeAppEngingIamBindingConditionInput interface {
	pulumi.Input

	ToWebTypeAppEngingIamBindingConditionOutput() WebTypeAppEngingIamBindingConditionOutput
	ToWebTypeAppEngingIamBindingConditionOutputWithContext(context.Context) WebTypeAppEngingIamBindingConditionOutput
}

type WebTypeAppEngingIamBindingConditionArgs struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	//
	// > **Warning:** This provider considers the `role` and condition contents (`title`+`description`+`expression`) as the
	// identifier for the binding. This means that if any part of the condition is changed out-of-band, the provider will
	// consider it to be an entirely different resource and will treat it as such.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression pulumi.StringInput `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title pulumi.StringInput `pulumi:"title"`
}

func (WebTypeAppEngingIamBindingConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebTypeAppEngingIamBindingCondition)(nil)).Elem()
}

func (i WebTypeAppEngingIamBindingConditionArgs) ToWebTypeAppEngingIamBindingConditionOutput() WebTypeAppEngingIamBindingConditionOutput {
	return i.ToWebTypeAppEngingIamBindingConditionOutputWithContext(context.Background())
}

func (i WebTypeAppEngingIamBindingConditionArgs) ToWebTypeAppEngingIamBindingConditionOutputWithContext(ctx context.Context) WebTypeAppEngingIamBindingConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebTypeAppEngingIamBindingConditionOutput)
}

func (i WebTypeAppEngingIamBindingConditionArgs) ToWebTypeAppEngingIamBindingConditionPtrOutput() WebTypeAppEngingIamBindingConditionPtrOutput {
	return i.ToWebTypeAppEngingIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i WebTypeAppEngingIamBindingConditionArgs) ToWebTypeAppEngingIamBindingConditionPtrOutputWithContext(ctx context.Context) WebTypeAppEngingIamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebTypeAppEngingIamBindingConditionOutput).ToWebTypeAppEngingIamBindingConditionPtrOutputWithContext(ctx)
}

// WebTypeAppEngingIamBindingConditionPtrInput is an input type that accepts WebTypeAppEngingIamBindingConditionArgs, WebTypeAppEngingIamBindingConditionPtr and WebTypeAppEngingIamBindingConditionPtrOutput values.
// You can construct a concrete instance of `WebTypeAppEngingIamBindingConditionPtrInput` via:
//
//	        WebTypeAppEngingIamBindingConditionArgs{...}
//
//	or:
//
//	        nil
type WebTypeAppEngingIamBindingConditionPtrInput interface {
	pulumi.Input

	ToWebTypeAppEngingIamBindingConditionPtrOutput() WebTypeAppEngingIamBindingConditionPtrOutput
	ToWebTypeAppEngingIamBindingConditionPtrOutputWithContext(context.Context) WebTypeAppEngingIamBindingConditionPtrOutput
}

type webTypeAppEngingIamBindingConditionPtrType WebTypeAppEngingIamBindingConditionArgs

func WebTypeAppEngingIamBindingConditionPtr(v *WebTypeAppEngingIamBindingConditionArgs) WebTypeAppEngingIamBindingConditionPtrInput {
	return (*webTypeAppEngingIamBindingConditionPtrType)(v)
}

func (*webTypeAppEngingIamBindingConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebTypeAppEngingIamBindingCondition)(nil)).Elem()
}

func (i *webTypeAppEngingIamBindingConditionPtrType) ToWebTypeAppEngingIamBindingConditionPtrOutput() WebTypeAppEngingIamBindingConditionPtrOutput {
	return i.ToWebTypeAppEngingIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i *webTypeAppEngingIamBindingConditionPtrType) ToWebTypeAppEngingIamBindingConditionPtrOutputWithContext(ctx context.Context) WebTypeAppEngingIamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebTypeAppEngingIamBindingConditionPtrOutput)
}

type WebTypeAppEngingIamBindingConditionOutput struct{ *pulumi.OutputState }

func (WebTypeAppEngingIamBindingConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebTypeAppEngingIamBindingCondition)(nil)).Elem()
}

func (o WebTypeAppEngingIamBindingConditionOutput) ToWebTypeAppEngingIamBindingConditionOutput() WebTypeAppEngingIamBindingConditionOutput {
	return o
}

func (o WebTypeAppEngingIamBindingConditionOutput) ToWebTypeAppEngingIamBindingConditionOutputWithContext(ctx context.Context) WebTypeAppEngingIamBindingConditionOutput {
	return o
}

func (o WebTypeAppEngingIamBindingConditionOutput) ToWebTypeAppEngingIamBindingConditionPtrOutput() WebTypeAppEngingIamBindingConditionPtrOutput {
	return o.ToWebTypeAppEngingIamBindingConditionPtrOutputWithContext(context.Background())
}

func (o WebTypeAppEngingIamBindingConditionOutput) ToWebTypeAppEngingIamBindingConditionPtrOutputWithContext(ctx context.Context) WebTypeAppEngingIamBindingConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebTypeAppEngingIamBindingCondition) *WebTypeAppEngingIamBindingCondition {
		return &v
	}).(WebTypeAppEngingIamBindingConditionPtrOutput)
}

// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
//
// > **Warning:** This provider considers the `role` and condition contents (`title`+`description`+`expression`) as the
// identifier for the binding. This means that if any part of the condition is changed out-of-band, the provider will
// consider it to be an entirely different resource and will treat it as such.
func (o WebTypeAppEngingIamBindingConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebTypeAppEngingIamBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o WebTypeAppEngingIamBindingConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v WebTypeAppEngingIamBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o WebTypeAppEngingIamBindingConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v WebTypeAppEngingIamBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

type WebTypeAppEngingIamBindingConditionPtrOutput struct{ *pulumi.OutputState }

func (WebTypeAppEngingIamBindingConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebTypeAppEngingIamBindingCondition)(nil)).Elem()
}

func (o WebTypeAppEngingIamBindingConditionPtrOutput) ToWebTypeAppEngingIamBindingConditionPtrOutput() WebTypeAppEngingIamBindingConditionPtrOutput {
	return o
}

func (o WebTypeAppEngingIamBindingConditionPtrOutput) ToWebTypeAppEngingIamBindingConditionPtrOutputWithContext(ctx context.Context) WebTypeAppEngingIamBindingConditionPtrOutput {
	return o
}

func (o WebTypeAppEngingIamBindingConditionPtrOutput) Elem() WebTypeAppEngingIamBindingConditionOutput {
	return o.ApplyT(func(v *WebTypeAppEngingIamBindingCondition) WebTypeAppEngingIamBindingCondition {
		if v != nil {
			return *v
		}
		var ret WebTypeAppEngingIamBindingCondition
		return ret
	}).(WebTypeAppEngingIamBindingConditionOutput)
}

// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
//
// > **Warning:** This provider considers the `role` and condition contents (`title`+`description`+`expression`) as the
// identifier for the binding. This means that if any part of the condition is changed out-of-band, the provider will
// consider it to be an entirely different resource and will treat it as such.
func (o WebTypeAppEngingIamBindingConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebTypeAppEngingIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o WebTypeAppEngingIamBindingConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebTypeAppEngingIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o WebTypeAppEngingIamBindingConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebTypeAppEngingIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type WebTypeAppEngingIamMemberCondition struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	//
	// > **Warning:** This provider considers the `role` and condition contents (`title`+`description`+`expression`) as the
	// identifier for the binding. This means that if any part of the condition is changed out-of-band, the provider will
	// consider it to be an entirely different resource and will treat it as such.
	Description *string `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression string `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title string `pulumi:"title"`
}

// WebTypeAppEngingIamMemberConditionInput is an input type that accepts WebTypeAppEngingIamMemberConditionArgs and WebTypeAppEngingIamMemberConditionOutput values.
// You can construct a concrete instance of `WebTypeAppEngingIamMemberConditionInput` via:
//
//	WebTypeAppEngingIamMemberConditionArgs{...}
type WebTypeAppEngingIamMemberConditionInput interface {
	pulumi.Input

	ToWebTypeAppEngingIamMemberConditionOutput() WebTypeAppEngingIamMemberConditionOutput
	ToWebTypeAppEngingIamMemberConditionOutputWithContext(context.Context) WebTypeAppEngingIamMemberConditionOutput
}

type WebTypeAppEngingIamMemberConditionArgs struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	//
	// > **Warning:** This provider considers the `role` and condition contents (`title`+`description`+`expression`) as the
	// identifier for the binding. This means that if any part of the condition is changed out-of-band, the provider will
	// consider it to be an entirely different resource and will treat it as such.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression pulumi.StringInput `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title pulumi.StringInput `pulumi:"title"`
}

func (WebTypeAppEngingIamMemberConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebTypeAppEngingIamMemberCondition)(nil)).Elem()
}

func (i WebTypeAppEngingIamMemberConditionArgs) ToWebTypeAppEngingIamMemberConditionOutput() WebTypeAppEngingIamMemberConditionOutput {
	return i.ToWebTypeAppEngingIamMemberConditionOutputWithContext(context.Background())
}

func (i WebTypeAppEngingIamMemberConditionArgs) ToWebTypeAppEngingIamMemberConditionOutputWithContext(ctx context.Context) WebTypeAppEngingIamMemberConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebTypeAppEngingIamMemberConditionOutput)
}

func (i WebTypeAppEngingIamMemberConditionArgs) ToWebTypeAppEngingIamMemberConditionPtrOutput() WebTypeAppEngingIamMemberConditionPtrOutput {
	return i.ToWebTypeAppEngingIamMemberConditionPtrOutputWithContext(context.Background())
}

func (i WebTypeAppEngingIamMemberConditionArgs) ToWebTypeAppEngingIamMemberConditionPtrOutputWithContext(ctx context.Context) WebTypeAppEngingIamMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebTypeAppEngingIamMemberConditionOutput).ToWebTypeAppEngingIamMemberConditionPtrOutputWithContext(ctx)
}

// WebTypeAppEngingIamMemberConditionPtrInput is an input type that accepts WebTypeAppEngingIamMemberConditionArgs, WebTypeAppEngingIamMemberConditionPtr and WebTypeAppEngingIamMemberConditionPtrOutput values.
// You can construct a concrete instance of `WebTypeAppEngingIamMemberConditionPtrInput` via:
//
//	        WebTypeAppEngingIamMemberConditionArgs{...}
//
//	or:
//
//	        nil
type WebTypeAppEngingIamMemberConditionPtrInput interface {
	pulumi.Input

	ToWebTypeAppEngingIamMemberConditionPtrOutput() WebTypeAppEngingIamMemberConditionPtrOutput
	ToWebTypeAppEngingIamMemberConditionPtrOutputWithContext(context.Context) WebTypeAppEngingIamMemberConditionPtrOutput
}

type webTypeAppEngingIamMemberConditionPtrType WebTypeAppEngingIamMemberConditionArgs

func WebTypeAppEngingIamMemberConditionPtr(v *WebTypeAppEngingIamMemberConditionArgs) WebTypeAppEngingIamMemberConditionPtrInput {
	return (*webTypeAppEngingIamMemberConditionPtrType)(v)
}

func (*webTypeAppEngingIamMemberConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebTypeAppEngingIamMemberCondition)(nil)).Elem()
}

func (i *webTypeAppEngingIamMemberConditionPtrType) ToWebTypeAppEngingIamMemberConditionPtrOutput() WebTypeAppEngingIamMemberConditionPtrOutput {
	return i.ToWebTypeAppEngingIamMemberConditionPtrOutputWithContext(context.Background())
}

func (i *webTypeAppEngingIamMemberConditionPtrType) ToWebTypeAppEngingIamMemberConditionPtrOutputWithContext(ctx context.Context) WebTypeAppEngingIamMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebTypeAppEngingIamMemberConditionPtrOutput)
}

type WebTypeAppEngingIamMemberConditionOutput struct{ *pulumi.OutputState }

func (WebTypeAppEngingIamMemberConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebTypeAppEngingIamMemberCondition)(nil)).Elem()
}

func (o WebTypeAppEngingIamMemberConditionOutput) ToWebTypeAppEngingIamMemberConditionOutput() WebTypeAppEngingIamMemberConditionOutput {
	return o
}

func (o WebTypeAppEngingIamMemberConditionOutput) ToWebTypeAppEngingIamMemberConditionOutputWithContext(ctx context.Context) WebTypeAppEngingIamMemberConditionOutput {
	return o
}

func (o WebTypeAppEngingIamMemberConditionOutput) ToWebTypeAppEngingIamMemberConditionPtrOutput() WebTypeAppEngingIamMemberConditionPtrOutput {
	return o.ToWebTypeAppEngingIamMemberConditionPtrOutputWithContext(context.Background())
}

func (o WebTypeAppEngingIamMemberConditionOutput) ToWebTypeAppEngingIamMemberConditionPtrOutputWithContext(ctx context.Context) WebTypeAppEngingIamMemberConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebTypeAppEngingIamMemberCondition) *WebTypeAppEngingIamMemberCondition {
		return &v
	}).(WebTypeAppEngingIamMemberConditionPtrOutput)
}

// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
//
// > **Warning:** This provider considers the `role` and condition contents (`title`+`description`+`expression`) as the
// identifier for the binding. This means that if any part of the condition is changed out-of-band, the provider will
// consider it to be an entirely different resource and will treat it as such.
func (o WebTypeAppEngingIamMemberConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebTypeAppEngingIamMemberCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o WebTypeAppEngingIamMemberConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v WebTypeAppEngingIamMemberCondition) string { return v.Expression }).(pulumi.StringOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o WebTypeAppEngingIamMemberConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v WebTypeAppEngingIamMemberCondition) string { return v.Title }).(pulumi.StringOutput)
}

type WebTypeAppEngingIamMemberConditionPtrOutput struct{ *pulumi.OutputState }

func (WebTypeAppEngingIamMemberConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebTypeAppEngingIamMemberCondition)(nil)).Elem()
}

func (o WebTypeAppEngingIamMemberConditionPtrOutput) ToWebTypeAppEngingIamMemberConditionPtrOutput() WebTypeAppEngingIamMemberConditionPtrOutput {
	return o
}

func (o WebTypeAppEngingIamMemberConditionPtrOutput) ToWebTypeAppEngingIamMemberConditionPtrOutputWithContext(ctx context.Context) WebTypeAppEngingIamMemberConditionPtrOutput {
	return o
}

func (o WebTypeAppEngingIamMemberConditionPtrOutput) Elem() WebTypeAppEngingIamMemberConditionOutput {
	return o.ApplyT(func(v *WebTypeAppEngingIamMemberCondition) WebTypeAppEngingIamMemberCondition {
		if v != nil {
			return *v
		}
		var ret WebTypeAppEngingIamMemberCondition
		return ret
	}).(WebTypeAppEngingIamMemberConditionOutput)
}

// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
//
// > **Warning:** This provider considers the `role` and condition contents (`title`+`description`+`expression`) as the
// identifier for the binding. This means that if any part of the condition is changed out-of-band, the provider will
// consider it to be an entirely different resource and will treat it as such.
func (o WebTypeAppEngingIamMemberConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebTypeAppEngingIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o WebTypeAppEngingIamMemberConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebTypeAppEngingIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o WebTypeAppEngingIamMemberConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebTypeAppEngingIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type WebTypeComputeIamBindingCondition struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	//
	// > **Warning:** This provider considers the `role` and condition contents (`title`+`description`+`expression`) as the
	// identifier for the binding. This means that if any part of the condition is changed out-of-band, the provider will
	// consider it to be an entirely different resource and will treat it as such.
	Description *string `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression string `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title string `pulumi:"title"`
}

// WebTypeComputeIamBindingConditionInput is an input type that accepts WebTypeComputeIamBindingConditionArgs and WebTypeComputeIamBindingConditionOutput values.
// You can construct a concrete instance of `WebTypeComputeIamBindingConditionInput` via:
//
//	WebTypeComputeIamBindingConditionArgs{...}
type WebTypeComputeIamBindingConditionInput interface {
	pulumi.Input

	ToWebTypeComputeIamBindingConditionOutput() WebTypeComputeIamBindingConditionOutput
	ToWebTypeComputeIamBindingConditionOutputWithContext(context.Context) WebTypeComputeIamBindingConditionOutput
}

type WebTypeComputeIamBindingConditionArgs struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	//
	// > **Warning:** This provider considers the `role` and condition contents (`title`+`description`+`expression`) as the
	// identifier for the binding. This means that if any part of the condition is changed out-of-band, the provider will
	// consider it to be an entirely different resource and will treat it as such.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression pulumi.StringInput `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title pulumi.StringInput `pulumi:"title"`
}

func (WebTypeComputeIamBindingConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebTypeComputeIamBindingCondition)(nil)).Elem()
}

func (i WebTypeComputeIamBindingConditionArgs) ToWebTypeComputeIamBindingConditionOutput() WebTypeComputeIamBindingConditionOutput {
	return i.ToWebTypeComputeIamBindingConditionOutputWithContext(context.Background())
}

func (i WebTypeComputeIamBindingConditionArgs) ToWebTypeComputeIamBindingConditionOutputWithContext(ctx context.Context) WebTypeComputeIamBindingConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebTypeComputeIamBindingConditionOutput)
}

func (i WebTypeComputeIamBindingConditionArgs) ToWebTypeComputeIamBindingConditionPtrOutput() WebTypeComputeIamBindingConditionPtrOutput {
	return i.ToWebTypeComputeIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i WebTypeComputeIamBindingConditionArgs) ToWebTypeComputeIamBindingConditionPtrOutputWithContext(ctx context.Context) WebTypeComputeIamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebTypeComputeIamBindingConditionOutput).ToWebTypeComputeIamBindingConditionPtrOutputWithContext(ctx)
}

// WebTypeComputeIamBindingConditionPtrInput is an input type that accepts WebTypeComputeIamBindingConditionArgs, WebTypeComputeIamBindingConditionPtr and WebTypeComputeIamBindingConditionPtrOutput values.
// You can construct a concrete instance of `WebTypeComputeIamBindingConditionPtrInput` via:
//
//	        WebTypeComputeIamBindingConditionArgs{...}
//
//	or:
//
//	        nil
type WebTypeComputeIamBindingConditionPtrInput interface {
	pulumi.Input

	ToWebTypeComputeIamBindingConditionPtrOutput() WebTypeComputeIamBindingConditionPtrOutput
	ToWebTypeComputeIamBindingConditionPtrOutputWithContext(context.Context) WebTypeComputeIamBindingConditionPtrOutput
}

type webTypeComputeIamBindingConditionPtrType WebTypeComputeIamBindingConditionArgs

func WebTypeComputeIamBindingConditionPtr(v *WebTypeComputeIamBindingConditionArgs) WebTypeComputeIamBindingConditionPtrInput {
	return (*webTypeComputeIamBindingConditionPtrType)(v)
}

func (*webTypeComputeIamBindingConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebTypeComputeIamBindingCondition)(nil)).Elem()
}

func (i *webTypeComputeIamBindingConditionPtrType) ToWebTypeComputeIamBindingConditionPtrOutput() WebTypeComputeIamBindingConditionPtrOutput {
	return i.ToWebTypeComputeIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i *webTypeComputeIamBindingConditionPtrType) ToWebTypeComputeIamBindingConditionPtrOutputWithContext(ctx context.Context) WebTypeComputeIamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebTypeComputeIamBindingConditionPtrOutput)
}

type WebTypeComputeIamBindingConditionOutput struct{ *pulumi.OutputState }

func (WebTypeComputeIamBindingConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebTypeComputeIamBindingCondition)(nil)).Elem()
}

func (o WebTypeComputeIamBindingConditionOutput) ToWebTypeComputeIamBindingConditionOutput() WebTypeComputeIamBindingConditionOutput {
	return o
}

func (o WebTypeComputeIamBindingConditionOutput) ToWebTypeComputeIamBindingConditionOutputWithContext(ctx context.Context) WebTypeComputeIamBindingConditionOutput {
	return o
}

func (o WebTypeComputeIamBindingConditionOutput) ToWebTypeComputeIamBindingConditionPtrOutput() WebTypeComputeIamBindingConditionPtrOutput {
	return o.ToWebTypeComputeIamBindingConditionPtrOutputWithContext(context.Background())
}

func (o WebTypeComputeIamBindingConditionOutput) ToWebTypeComputeIamBindingConditionPtrOutputWithContext(ctx context.Context) WebTypeComputeIamBindingConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebTypeComputeIamBindingCondition) *WebTypeComputeIamBindingCondition {
		return &v
	}).(WebTypeComputeIamBindingConditionPtrOutput)
}

// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
//
// > **Warning:** This provider considers the `role` and condition contents (`title`+`description`+`expression`) as the
// identifier for the binding. This means that if any part of the condition is changed out-of-band, the provider will
// consider it to be an entirely different resource and will treat it as such.
func (o WebTypeComputeIamBindingConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebTypeComputeIamBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o WebTypeComputeIamBindingConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v WebTypeComputeIamBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o WebTypeComputeIamBindingConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v WebTypeComputeIamBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

type WebTypeComputeIamBindingConditionPtrOutput struct{ *pulumi.OutputState }

func (WebTypeComputeIamBindingConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebTypeComputeIamBindingCondition)(nil)).Elem()
}

func (o WebTypeComputeIamBindingConditionPtrOutput) ToWebTypeComputeIamBindingConditionPtrOutput() WebTypeComputeIamBindingConditionPtrOutput {
	return o
}

func (o WebTypeComputeIamBindingConditionPtrOutput) ToWebTypeComputeIamBindingConditionPtrOutputWithContext(ctx context.Context) WebTypeComputeIamBindingConditionPtrOutput {
	return o
}

func (o WebTypeComputeIamBindingConditionPtrOutput) Elem() WebTypeComputeIamBindingConditionOutput {
	return o.ApplyT(func(v *WebTypeComputeIamBindingCondition) WebTypeComputeIamBindingCondition {
		if v != nil {
			return *v
		}
		var ret WebTypeComputeIamBindingCondition
		return ret
	}).(WebTypeComputeIamBindingConditionOutput)
}

// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
//
// > **Warning:** This provider considers the `role` and condition contents (`title`+`description`+`expression`) as the
// identifier for the binding. This means that if any part of the condition is changed out-of-band, the provider will
// consider it to be an entirely different resource and will treat it as such.
func (o WebTypeComputeIamBindingConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebTypeComputeIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o WebTypeComputeIamBindingConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebTypeComputeIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o WebTypeComputeIamBindingConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebTypeComputeIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type WebTypeComputeIamMemberCondition struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	//
	// > **Warning:** This provider considers the `role` and condition contents (`title`+`description`+`expression`) as the
	// identifier for the binding. This means that if any part of the condition is changed out-of-band, the provider will
	// consider it to be an entirely different resource and will treat it as such.
	Description *string `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression string `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title string `pulumi:"title"`
}

// WebTypeComputeIamMemberConditionInput is an input type that accepts WebTypeComputeIamMemberConditionArgs and WebTypeComputeIamMemberConditionOutput values.
// You can construct a concrete instance of `WebTypeComputeIamMemberConditionInput` via:
//
//	WebTypeComputeIamMemberConditionArgs{...}
type WebTypeComputeIamMemberConditionInput interface {
	pulumi.Input

	ToWebTypeComputeIamMemberConditionOutput() WebTypeComputeIamMemberConditionOutput
	ToWebTypeComputeIamMemberConditionOutputWithContext(context.Context) WebTypeComputeIamMemberConditionOutput
}

type WebTypeComputeIamMemberConditionArgs struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	//
	// > **Warning:** This provider considers the `role` and condition contents (`title`+`description`+`expression`) as the
	// identifier for the binding. This means that if any part of the condition is changed out-of-band, the provider will
	// consider it to be an entirely different resource and will treat it as such.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression pulumi.StringInput `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title pulumi.StringInput `pulumi:"title"`
}

func (WebTypeComputeIamMemberConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebTypeComputeIamMemberCondition)(nil)).Elem()
}

func (i WebTypeComputeIamMemberConditionArgs) ToWebTypeComputeIamMemberConditionOutput() WebTypeComputeIamMemberConditionOutput {
	return i.ToWebTypeComputeIamMemberConditionOutputWithContext(context.Background())
}

func (i WebTypeComputeIamMemberConditionArgs) ToWebTypeComputeIamMemberConditionOutputWithContext(ctx context.Context) WebTypeComputeIamMemberConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebTypeComputeIamMemberConditionOutput)
}

func (i WebTypeComputeIamMemberConditionArgs) ToWebTypeComputeIamMemberConditionPtrOutput() WebTypeComputeIamMemberConditionPtrOutput {
	return i.ToWebTypeComputeIamMemberConditionPtrOutputWithContext(context.Background())
}

func (i WebTypeComputeIamMemberConditionArgs) ToWebTypeComputeIamMemberConditionPtrOutputWithContext(ctx context.Context) WebTypeComputeIamMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebTypeComputeIamMemberConditionOutput).ToWebTypeComputeIamMemberConditionPtrOutputWithContext(ctx)
}

// WebTypeComputeIamMemberConditionPtrInput is an input type that accepts WebTypeComputeIamMemberConditionArgs, WebTypeComputeIamMemberConditionPtr and WebTypeComputeIamMemberConditionPtrOutput values.
// You can construct a concrete instance of `WebTypeComputeIamMemberConditionPtrInput` via:
//
//	        WebTypeComputeIamMemberConditionArgs{...}
//
//	or:
//
//	        nil
type WebTypeComputeIamMemberConditionPtrInput interface {
	pulumi.Input

	ToWebTypeComputeIamMemberConditionPtrOutput() WebTypeComputeIamMemberConditionPtrOutput
	ToWebTypeComputeIamMemberConditionPtrOutputWithContext(context.Context) WebTypeComputeIamMemberConditionPtrOutput
}

type webTypeComputeIamMemberConditionPtrType WebTypeComputeIamMemberConditionArgs

func WebTypeComputeIamMemberConditionPtr(v *WebTypeComputeIamMemberConditionArgs) WebTypeComputeIamMemberConditionPtrInput {
	return (*webTypeComputeIamMemberConditionPtrType)(v)
}

func (*webTypeComputeIamMemberConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebTypeComputeIamMemberCondition)(nil)).Elem()
}

func (i *webTypeComputeIamMemberConditionPtrType) ToWebTypeComputeIamMemberConditionPtrOutput() WebTypeComputeIamMemberConditionPtrOutput {
	return i.ToWebTypeComputeIamMemberConditionPtrOutputWithContext(context.Background())
}

func (i *webTypeComputeIamMemberConditionPtrType) ToWebTypeComputeIamMemberConditionPtrOutputWithContext(ctx context.Context) WebTypeComputeIamMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebTypeComputeIamMemberConditionPtrOutput)
}

type WebTypeComputeIamMemberConditionOutput struct{ *pulumi.OutputState }

func (WebTypeComputeIamMemberConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebTypeComputeIamMemberCondition)(nil)).Elem()
}

func (o WebTypeComputeIamMemberConditionOutput) ToWebTypeComputeIamMemberConditionOutput() WebTypeComputeIamMemberConditionOutput {
	return o
}

func (o WebTypeComputeIamMemberConditionOutput) ToWebTypeComputeIamMemberConditionOutputWithContext(ctx context.Context) WebTypeComputeIamMemberConditionOutput {
	return o
}

func (o WebTypeComputeIamMemberConditionOutput) ToWebTypeComputeIamMemberConditionPtrOutput() WebTypeComputeIamMemberConditionPtrOutput {
	return o.ToWebTypeComputeIamMemberConditionPtrOutputWithContext(context.Background())
}

func (o WebTypeComputeIamMemberConditionOutput) ToWebTypeComputeIamMemberConditionPtrOutputWithContext(ctx context.Context) WebTypeComputeIamMemberConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebTypeComputeIamMemberCondition) *WebTypeComputeIamMemberCondition {
		return &v
	}).(WebTypeComputeIamMemberConditionPtrOutput)
}

// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
//
// > **Warning:** This provider considers the `role` and condition contents (`title`+`description`+`expression`) as the
// identifier for the binding. This means that if any part of the condition is changed out-of-band, the provider will
// consider it to be an entirely different resource and will treat it as such.
func (o WebTypeComputeIamMemberConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebTypeComputeIamMemberCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o WebTypeComputeIamMemberConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v WebTypeComputeIamMemberCondition) string { return v.Expression }).(pulumi.StringOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o WebTypeComputeIamMemberConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v WebTypeComputeIamMemberCondition) string { return v.Title }).(pulumi.StringOutput)
}

type WebTypeComputeIamMemberConditionPtrOutput struct{ *pulumi.OutputState }

func (WebTypeComputeIamMemberConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebTypeComputeIamMemberCondition)(nil)).Elem()
}

func (o WebTypeComputeIamMemberConditionPtrOutput) ToWebTypeComputeIamMemberConditionPtrOutput() WebTypeComputeIamMemberConditionPtrOutput {
	return o
}

func (o WebTypeComputeIamMemberConditionPtrOutput) ToWebTypeComputeIamMemberConditionPtrOutputWithContext(ctx context.Context) WebTypeComputeIamMemberConditionPtrOutput {
	return o
}

func (o WebTypeComputeIamMemberConditionPtrOutput) Elem() WebTypeComputeIamMemberConditionOutput {
	return o.ApplyT(func(v *WebTypeComputeIamMemberCondition) WebTypeComputeIamMemberCondition {
		if v != nil {
			return *v
		}
		var ret WebTypeComputeIamMemberCondition
		return ret
	}).(WebTypeComputeIamMemberConditionOutput)
}

// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
//
// > **Warning:** This provider considers the `role` and condition contents (`title`+`description`+`expression`) as the
// identifier for the binding. This means that if any part of the condition is changed out-of-band, the provider will
// consider it to be an entirely different resource and will treat it as such.
func (o WebTypeComputeIamMemberConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebTypeComputeIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o WebTypeComputeIamMemberConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebTypeComputeIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o WebTypeComputeIamMemberConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebTypeComputeIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AppEngineServiceIamBindingConditionInput)(nil)).Elem(), AppEngineServiceIamBindingConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppEngineServiceIamBindingConditionPtrInput)(nil)).Elem(), AppEngineServiceIamBindingConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppEngineServiceIamMemberConditionInput)(nil)).Elem(), AppEngineServiceIamMemberConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppEngineServiceIamMemberConditionPtrInput)(nil)).Elem(), AppEngineServiceIamMemberConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppEngineVersionIamBindingConditionInput)(nil)).Elem(), AppEngineVersionIamBindingConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppEngineVersionIamBindingConditionPtrInput)(nil)).Elem(), AppEngineVersionIamBindingConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppEngineVersionIamMemberConditionInput)(nil)).Elem(), AppEngineVersionIamMemberConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppEngineVersionIamMemberConditionPtrInput)(nil)).Elem(), AppEngineVersionIamMemberConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingsAccessSettingsInput)(nil)).Elem(), SettingsAccessSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingsAccessSettingsPtrInput)(nil)).Elem(), SettingsAccessSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingsAccessSettingsAllowedDomainsSettingsInput)(nil)).Elem(), SettingsAccessSettingsAllowedDomainsSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingsAccessSettingsAllowedDomainsSettingsPtrInput)(nil)).Elem(), SettingsAccessSettingsAllowedDomainsSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingsAccessSettingsCorsSettingsInput)(nil)).Elem(), SettingsAccessSettingsCorsSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingsAccessSettingsCorsSettingsPtrInput)(nil)).Elem(), SettingsAccessSettingsCorsSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingsAccessSettingsGcipSettingsInput)(nil)).Elem(), SettingsAccessSettingsGcipSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingsAccessSettingsGcipSettingsPtrInput)(nil)).Elem(), SettingsAccessSettingsGcipSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingsAccessSettingsOauthSettingsInput)(nil)).Elem(), SettingsAccessSettingsOauthSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingsAccessSettingsOauthSettingsPtrInput)(nil)).Elem(), SettingsAccessSettingsOauthSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingsAccessSettingsReauthSettingsInput)(nil)).Elem(), SettingsAccessSettingsReauthSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingsAccessSettingsReauthSettingsPtrInput)(nil)).Elem(), SettingsAccessSettingsReauthSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingsAccessSettingsWorkforceIdentitySettingsInput)(nil)).Elem(), SettingsAccessSettingsWorkforceIdentitySettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingsAccessSettingsWorkforceIdentitySettingsPtrInput)(nil)).Elem(), SettingsAccessSettingsWorkforceIdentitySettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingsAccessSettingsWorkforceIdentitySettingsOauth2Input)(nil)).Elem(), SettingsAccessSettingsWorkforceIdentitySettingsOauth2Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingsAccessSettingsWorkforceIdentitySettingsOauth2PtrInput)(nil)).Elem(), SettingsAccessSettingsWorkforceIdentitySettingsOauth2Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingsApplicationSettingsInput)(nil)).Elem(), SettingsApplicationSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingsApplicationSettingsPtrInput)(nil)).Elem(), SettingsApplicationSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingsApplicationSettingsAccessDeniedPageSettingsInput)(nil)).Elem(), SettingsApplicationSettingsAccessDeniedPageSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingsApplicationSettingsAccessDeniedPageSettingsPtrInput)(nil)).Elem(), SettingsApplicationSettingsAccessDeniedPageSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingsApplicationSettingsAttributePropagationSettingsInput)(nil)).Elem(), SettingsApplicationSettingsAttributePropagationSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingsApplicationSettingsAttributePropagationSettingsPtrInput)(nil)).Elem(), SettingsApplicationSettingsAttributePropagationSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingsApplicationSettingsCsmSettingsInput)(nil)).Elem(), SettingsApplicationSettingsCsmSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingsApplicationSettingsCsmSettingsPtrInput)(nil)).Elem(), SettingsApplicationSettingsCsmSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TunnelDestGroupIamBindingConditionInput)(nil)).Elem(), TunnelDestGroupIamBindingConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TunnelDestGroupIamBindingConditionPtrInput)(nil)).Elem(), TunnelDestGroupIamBindingConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TunnelDestGroupIamMemberConditionInput)(nil)).Elem(), TunnelDestGroupIamMemberConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TunnelDestGroupIamMemberConditionPtrInput)(nil)).Elem(), TunnelDestGroupIamMemberConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TunnelIamBindingConditionInput)(nil)).Elem(), TunnelIamBindingConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TunnelIamBindingConditionPtrInput)(nil)).Elem(), TunnelIamBindingConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TunnelIamMemberConditionInput)(nil)).Elem(), TunnelIamMemberConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TunnelIamMemberConditionPtrInput)(nil)).Elem(), TunnelIamMemberConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TunnelInstanceIAMBindingConditionInput)(nil)).Elem(), TunnelInstanceIAMBindingConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TunnelInstanceIAMBindingConditionPtrInput)(nil)).Elem(), TunnelInstanceIAMBindingConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TunnelInstanceIAMMemberConditionInput)(nil)).Elem(), TunnelInstanceIAMMemberConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TunnelInstanceIAMMemberConditionPtrInput)(nil)).Elem(), TunnelInstanceIAMMemberConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebBackendServiceIamBindingConditionInput)(nil)).Elem(), WebBackendServiceIamBindingConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebBackendServiceIamBindingConditionPtrInput)(nil)).Elem(), WebBackendServiceIamBindingConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebBackendServiceIamMemberConditionInput)(nil)).Elem(), WebBackendServiceIamMemberConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebBackendServiceIamMemberConditionPtrInput)(nil)).Elem(), WebBackendServiceIamMemberConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebIamBindingConditionInput)(nil)).Elem(), WebIamBindingConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebIamBindingConditionPtrInput)(nil)).Elem(), WebIamBindingConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebIamMemberConditionInput)(nil)).Elem(), WebIamMemberConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebIamMemberConditionPtrInput)(nil)).Elem(), WebIamMemberConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebRegionBackendServiceIamBindingConditionInput)(nil)).Elem(), WebRegionBackendServiceIamBindingConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebRegionBackendServiceIamBindingConditionPtrInput)(nil)).Elem(), WebRegionBackendServiceIamBindingConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebRegionBackendServiceIamMemberConditionInput)(nil)).Elem(), WebRegionBackendServiceIamMemberConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebRegionBackendServiceIamMemberConditionPtrInput)(nil)).Elem(), WebRegionBackendServiceIamMemberConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebTypeAppEngingIamBindingConditionInput)(nil)).Elem(), WebTypeAppEngingIamBindingConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebTypeAppEngingIamBindingConditionPtrInput)(nil)).Elem(), WebTypeAppEngingIamBindingConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebTypeAppEngingIamMemberConditionInput)(nil)).Elem(), WebTypeAppEngingIamMemberConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebTypeAppEngingIamMemberConditionPtrInput)(nil)).Elem(), WebTypeAppEngingIamMemberConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebTypeComputeIamBindingConditionInput)(nil)).Elem(), WebTypeComputeIamBindingConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebTypeComputeIamBindingConditionPtrInput)(nil)).Elem(), WebTypeComputeIamBindingConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebTypeComputeIamMemberConditionInput)(nil)).Elem(), WebTypeComputeIamMemberConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebTypeComputeIamMemberConditionPtrInput)(nil)).Elem(), WebTypeComputeIamMemberConditionArgs{})
	pulumi.RegisterOutputType(AppEngineServiceIamBindingConditionOutput{})
	pulumi.RegisterOutputType(AppEngineServiceIamBindingConditionPtrOutput{})
	pulumi.RegisterOutputType(AppEngineServiceIamMemberConditionOutput{})
	pulumi.RegisterOutputType(AppEngineServiceIamMemberConditionPtrOutput{})
	pulumi.RegisterOutputType(AppEngineVersionIamBindingConditionOutput{})
	pulumi.RegisterOutputType(AppEngineVersionIamBindingConditionPtrOutput{})
	pulumi.RegisterOutputType(AppEngineVersionIamMemberConditionOutput{})
	pulumi.RegisterOutputType(AppEngineVersionIamMemberConditionPtrOutput{})
	pulumi.RegisterOutputType(SettingsAccessSettingsOutput{})
	pulumi.RegisterOutputType(SettingsAccessSettingsPtrOutput{})
	pulumi.RegisterOutputType(SettingsAccessSettingsAllowedDomainsSettingsOutput{})
	pulumi.RegisterOutputType(SettingsAccessSettingsAllowedDomainsSettingsPtrOutput{})
	pulumi.RegisterOutputType(SettingsAccessSettingsCorsSettingsOutput{})
	pulumi.RegisterOutputType(SettingsAccessSettingsCorsSettingsPtrOutput{})
	pulumi.RegisterOutputType(SettingsAccessSettingsGcipSettingsOutput{})
	pulumi.RegisterOutputType(SettingsAccessSettingsGcipSettingsPtrOutput{})
	pulumi.RegisterOutputType(SettingsAccessSettingsOauthSettingsOutput{})
	pulumi.RegisterOutputType(SettingsAccessSettingsOauthSettingsPtrOutput{})
	pulumi.RegisterOutputType(SettingsAccessSettingsReauthSettingsOutput{})
	pulumi.RegisterOutputType(SettingsAccessSettingsReauthSettingsPtrOutput{})
	pulumi.RegisterOutputType(SettingsAccessSettingsWorkforceIdentitySettingsOutput{})
	pulumi.RegisterOutputType(SettingsAccessSettingsWorkforceIdentitySettingsPtrOutput{})
	pulumi.RegisterOutputType(SettingsAccessSettingsWorkforceIdentitySettingsOauth2Output{})
	pulumi.RegisterOutputType(SettingsAccessSettingsWorkforceIdentitySettingsOauth2PtrOutput{})
	pulumi.RegisterOutputType(SettingsApplicationSettingsOutput{})
	pulumi.RegisterOutputType(SettingsApplicationSettingsPtrOutput{})
	pulumi.RegisterOutputType(SettingsApplicationSettingsAccessDeniedPageSettingsOutput{})
	pulumi.RegisterOutputType(SettingsApplicationSettingsAccessDeniedPageSettingsPtrOutput{})
	pulumi.RegisterOutputType(SettingsApplicationSettingsAttributePropagationSettingsOutput{})
	pulumi.RegisterOutputType(SettingsApplicationSettingsAttributePropagationSettingsPtrOutput{})
	pulumi.RegisterOutputType(SettingsApplicationSettingsCsmSettingsOutput{})
	pulumi.RegisterOutputType(SettingsApplicationSettingsCsmSettingsPtrOutput{})
	pulumi.RegisterOutputType(TunnelDestGroupIamBindingConditionOutput{})
	pulumi.RegisterOutputType(TunnelDestGroupIamBindingConditionPtrOutput{})
	pulumi.RegisterOutputType(TunnelDestGroupIamMemberConditionOutput{})
	pulumi.RegisterOutputType(TunnelDestGroupIamMemberConditionPtrOutput{})
	pulumi.RegisterOutputType(TunnelIamBindingConditionOutput{})
	pulumi.RegisterOutputType(TunnelIamBindingConditionPtrOutput{})
	pulumi.RegisterOutputType(TunnelIamMemberConditionOutput{})
	pulumi.RegisterOutputType(TunnelIamMemberConditionPtrOutput{})
	pulumi.RegisterOutputType(TunnelInstanceIAMBindingConditionOutput{})
	pulumi.RegisterOutputType(TunnelInstanceIAMBindingConditionPtrOutput{})
	pulumi.RegisterOutputType(TunnelInstanceIAMMemberConditionOutput{})
	pulumi.RegisterOutputType(TunnelInstanceIAMMemberConditionPtrOutput{})
	pulumi.RegisterOutputType(WebBackendServiceIamBindingConditionOutput{})
	pulumi.RegisterOutputType(WebBackendServiceIamBindingConditionPtrOutput{})
	pulumi.RegisterOutputType(WebBackendServiceIamMemberConditionOutput{})
	pulumi.RegisterOutputType(WebBackendServiceIamMemberConditionPtrOutput{})
	pulumi.RegisterOutputType(WebIamBindingConditionOutput{})
	pulumi.RegisterOutputType(WebIamBindingConditionPtrOutput{})
	pulumi.RegisterOutputType(WebIamMemberConditionOutput{})
	pulumi.RegisterOutputType(WebIamMemberConditionPtrOutput{})
	pulumi.RegisterOutputType(WebRegionBackendServiceIamBindingConditionOutput{})
	pulumi.RegisterOutputType(WebRegionBackendServiceIamBindingConditionPtrOutput{})
	pulumi.RegisterOutputType(WebRegionBackendServiceIamMemberConditionOutput{})
	pulumi.RegisterOutputType(WebRegionBackendServiceIamMemberConditionPtrOutput{})
	pulumi.RegisterOutputType(WebTypeAppEngingIamBindingConditionOutput{})
	pulumi.RegisterOutputType(WebTypeAppEngingIamBindingConditionPtrOutput{})
	pulumi.RegisterOutputType(WebTypeAppEngingIamMemberConditionOutput{})
	pulumi.RegisterOutputType(WebTypeAppEngingIamMemberConditionPtrOutput{})
	pulumi.RegisterOutputType(WebTypeComputeIamBindingConditionOutput{})
	pulumi.RegisterOutputType(WebTypeComputeIamBindingConditionPtrOutput{})
	pulumi.RegisterOutputType(WebTypeComputeIamMemberConditionOutput{})
	pulumi.RegisterOutputType(WebTypeComputeIamMemberConditionPtrOutput{})
}
