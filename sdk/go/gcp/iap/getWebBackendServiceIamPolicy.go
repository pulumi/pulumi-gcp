// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iap

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves the current IAM policy data for webbackendservice
//
// ## example
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/iap"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := iap.LookupWebBackendServiceIamPolicy(ctx, &iap.LookupWebBackendServiceIamPolicyArgs{
//				Project:           pulumi.StringRef(google_compute_backend_service.Default.Project),
//				WebBackendService: google_compute_backend_service.Default.Name,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupWebBackendServiceIamPolicy(ctx *pulumi.Context, args *LookupWebBackendServiceIamPolicyArgs, opts ...pulumi.InvokeOption) (*LookupWebBackendServiceIamPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupWebBackendServiceIamPolicyResult
	err := ctx.Invoke("gcp:iap/getWebBackendServiceIamPolicy:getWebBackendServiceIamPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getWebBackendServiceIamPolicy.
type LookupWebBackendServiceIamPolicyArgs struct {
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project *string `pulumi:"project"`
	// Used to find the parent resource to bind the IAM policy to
	WebBackendService string `pulumi:"webBackendService"`
}

// A collection of values returned by getWebBackendServiceIamPolicy.
type LookupWebBackendServiceIamPolicyResult struct {
	// (Computed) The etag of the IAM policy.
	Etag string `pulumi:"etag"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// (Required only by `iap.WebBackendServiceIamPolicy`) The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData        string `pulumi:"policyData"`
	Project           string `pulumi:"project"`
	WebBackendService string `pulumi:"webBackendService"`
}

func LookupWebBackendServiceIamPolicyOutput(ctx *pulumi.Context, args LookupWebBackendServiceIamPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupWebBackendServiceIamPolicyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupWebBackendServiceIamPolicyResult, error) {
			args := v.(LookupWebBackendServiceIamPolicyArgs)
			r, err := LookupWebBackendServiceIamPolicy(ctx, &args, opts...)
			var s LookupWebBackendServiceIamPolicyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupWebBackendServiceIamPolicyResultOutput)
}

// A collection of arguments for invoking getWebBackendServiceIamPolicy.
type LookupWebBackendServiceIamPolicyOutputArgs struct {
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringPtrInput `pulumi:"project"`
	// Used to find the parent resource to bind the IAM policy to
	WebBackendService pulumi.StringInput `pulumi:"webBackendService"`
}

func (LookupWebBackendServiceIamPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWebBackendServiceIamPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getWebBackendServiceIamPolicy.
type LookupWebBackendServiceIamPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupWebBackendServiceIamPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWebBackendServiceIamPolicyResult)(nil)).Elem()
}

func (o LookupWebBackendServiceIamPolicyResultOutput) ToLookupWebBackendServiceIamPolicyResultOutput() LookupWebBackendServiceIamPolicyResultOutput {
	return o
}

func (o LookupWebBackendServiceIamPolicyResultOutput) ToLookupWebBackendServiceIamPolicyResultOutputWithContext(ctx context.Context) LookupWebBackendServiceIamPolicyResultOutput {
	return o
}

// (Computed) The etag of the IAM policy.
func (o LookupWebBackendServiceIamPolicyResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWebBackendServiceIamPolicyResult) string { return v.Etag }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupWebBackendServiceIamPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWebBackendServiceIamPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

// (Required only by `iap.WebBackendServiceIamPolicy`) The policy data generated by
// a `organizations.getIAMPolicy` data source.
func (o LookupWebBackendServiceIamPolicyResultOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWebBackendServiceIamPolicyResult) string { return v.PolicyData }).(pulumi.StringOutput)
}

func (o LookupWebBackendServiceIamPolicyResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWebBackendServiceIamPolicyResult) string { return v.Project }).(pulumi.StringOutput)
}

func (o LookupWebBackendServiceIamPolicyResultOutput) WebBackendService() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWebBackendServiceIamPolicyResult) string { return v.WebBackendService }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupWebBackendServiceIamPolicyResultOutput{})
}
