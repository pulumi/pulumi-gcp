// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iap

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Three different resources help you manage your IAM policy for Identity-Aware Proxy WebCloudRunService. Each of these resources serves a different use case:
//
// * `iap.WebCloudRunServiceIamPolicy`: Authoritative. Sets the IAM policy for the webcloudrunservice and replaces any existing policy already attached.
// * `iap.WebCloudRunServiceIamBinding`: Authoritative for a given role. Updates the IAM policy to grant a role to a list of members. Other roles within the IAM policy for the webcloudrunservice are preserved.
// * `iap.WebCloudRunServiceIamMember`: Non-authoritative. Updates the IAM policy to grant a role to a new member. Other members for the role for the webcloudrunservice are preserved.
//
// # A data source can be used to retrieve policy data in advent you do not need creation
//
// * `iap.WebCloudRunServiceIamPolicy`: Retrieves the IAM policy for the webcloudrunservice
//
// > **Note:** `iap.WebCloudRunServiceIamPolicy` **cannot** be used in conjunction with `iap.WebCloudRunServiceIamBinding` and `iap.WebCloudRunServiceIamMember` or they will fight over what your policy should be.
//
// > **Note:** `iap.WebCloudRunServiceIamBinding` resources **can be** used in conjunction with `iap.WebCloudRunServiceIamMember` resources **only if** they do not grant privilege to the same role.
//
// > **Note:**  This resource supports IAM Conditions but they have some known limitations which can be found [here](https://cloud.google.com/iam/docs/conditions-overview#limitations). Please review this article if you are having issues with IAM Conditions.
//
// ## iap.WebCloudRunServiceIamPolicy
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/iap"
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/organizations"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			admin, err := organizations.LookupIAMPolicy(ctx, &organizations.LookupIAMPolicyArgs{
//				Bindings: []organizations.GetIAMPolicyBinding{
//					{
//						Role: "roles/iap.httpsResourceAccessor",
//						Members: []string{
//							"user:jane@example.com",
//						},
//					},
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = iap.NewWebCloudRunServiceIamPolicy(ctx, "policy", &iap.WebCloudRunServiceIamPolicyArgs{
//				Project:             pulumi.Any(_default.Project),
//				Location:            pulumi.Any(_default.Location),
//				CloudRunServiceName: pulumi.Any(_default.Name),
//				PolicyData:          pulumi.String(admin.PolicyData),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// With IAM Conditions:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/iap"
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/organizations"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			admin, err := organizations.LookupIAMPolicy(ctx, &organizations.LookupIAMPolicyArgs{
//				Bindings: []organizations.GetIAMPolicyBinding{
//					{
//						Role: "roles/iap.httpsResourceAccessor",
//						Members: []string{
//							"user:jane@example.com",
//						},
//						Condition: {
//							Title:       "expires_after_2019_12_31",
//							Description: pulumi.StringRef("Expiring at midnight of 2019-12-31"),
//							Expression:  "request.time < timestamp(\"2020-01-01T00:00:00Z\")",
//						},
//					},
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = iap.NewWebCloudRunServiceIamPolicy(ctx, "policy", &iap.WebCloudRunServiceIamPolicyArgs{
//				Project:             pulumi.Any(_default.Project),
//				Location:            pulumi.Any(_default.Location),
//				CloudRunServiceName: pulumi.Any(_default.Name),
//				PolicyData:          pulumi.String(admin.PolicyData),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ## iap.WebCloudRunServiceIamBinding
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/iap"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := iap.NewWebCloudRunServiceIamBinding(ctx, "binding", &iap.WebCloudRunServiceIamBindingArgs{
//				Project:             pulumi.Any(_default.Project),
//				Location:            pulumi.Any(_default.Location),
//				CloudRunServiceName: pulumi.Any(_default.Name),
//				Role:                pulumi.String("roles/iap.httpsResourceAccessor"),
//				Members: pulumi.StringArray{
//					pulumi.String("user:jane@example.com"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// With IAM Conditions:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/iap"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := iap.NewWebCloudRunServiceIamBinding(ctx, "binding", &iap.WebCloudRunServiceIamBindingArgs{
//				Project:             pulumi.Any(_default.Project),
//				Location:            pulumi.Any(_default.Location),
//				CloudRunServiceName: pulumi.Any(_default.Name),
//				Role:                pulumi.String("roles/iap.httpsResourceAccessor"),
//				Members: pulumi.StringArray{
//					pulumi.String("user:jane@example.com"),
//				},
//				Condition: &iap.WebCloudRunServiceIamBindingConditionArgs{
//					Title:       pulumi.String("expires_after_2019_12_31"),
//					Description: pulumi.String("Expiring at midnight of 2019-12-31"),
//					Expression:  pulumi.String("request.time < timestamp(\"2020-01-01T00:00:00Z\")"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ## iap.WebCloudRunServiceIamMember
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/iap"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := iap.NewWebCloudRunServiceIamMember(ctx, "member", &iap.WebCloudRunServiceIamMemberArgs{
//				Project:             pulumi.Any(_default.Project),
//				Location:            pulumi.Any(_default.Location),
//				CloudRunServiceName: pulumi.Any(_default.Name),
//				Role:                pulumi.String("roles/iap.httpsResourceAccessor"),
//				Member:              pulumi.String("user:jane@example.com"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// With IAM Conditions:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/iap"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := iap.NewWebCloudRunServiceIamMember(ctx, "member", &iap.WebCloudRunServiceIamMemberArgs{
//				Project:             pulumi.Any(_default.Project),
//				Location:            pulumi.Any(_default.Location),
//				CloudRunServiceName: pulumi.Any(_default.Name),
//				Role:                pulumi.String("roles/iap.httpsResourceAccessor"),
//				Member:              pulumi.String("user:jane@example.com"),
//				Condition: &iap.WebCloudRunServiceIamMemberConditionArgs{
//					Title:       pulumi.String("expires_after_2019_12_31"),
//					Description: pulumi.String("Expiring at midnight of 2019-12-31"),
//					Expression:  pulumi.String("request.time < timestamp(\"2020-01-01T00:00:00Z\")"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## This resource supports User Project Overrides.
//
// -
//
// # IAM policy for Identity-Aware Proxy WebCloudRunService
//
// Three different resources help you manage your IAM policy for Identity-Aware Proxy WebCloudRunService. Each of these resources serves a different use case:
//
// * `iap.WebCloudRunServiceIamPolicy`: Authoritative. Sets the IAM policy for the webcloudrunservice and replaces any existing policy already attached.
// * `iap.WebCloudRunServiceIamBinding`: Authoritative for a given role. Updates the IAM policy to grant a role to a list of members. Other roles within the IAM policy for the webcloudrunservice are preserved.
// * `iap.WebCloudRunServiceIamMember`: Non-authoritative. Updates the IAM policy to grant a role to a new member. Other members for the role for the webcloudrunservice are preserved.
//
// # A data source can be used to retrieve policy data in advent you do not need creation
//
// * `iap.WebCloudRunServiceIamPolicy`: Retrieves the IAM policy for the webcloudrunservice
//
// > **Note:** `iap.WebCloudRunServiceIamPolicy` **cannot** be used in conjunction with `iap.WebCloudRunServiceIamBinding` and `iap.WebCloudRunServiceIamMember` or they will fight over what your policy should be.
//
// > **Note:** `iap.WebCloudRunServiceIamBinding` resources **can be** used in conjunction with `iap.WebCloudRunServiceIamMember` resources **only if** they do not grant privilege to the same role.
//
// > **Note:**  This resource supports IAM Conditions but they have some known limitations which can be found [here](https://cloud.google.com/iam/docs/conditions-overview#limitations). Please review this article if you are having issues with IAM Conditions.
//
// ## iap.WebCloudRunServiceIamPolicy
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/iap"
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/organizations"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			admin, err := organizations.LookupIAMPolicy(ctx, &organizations.LookupIAMPolicyArgs{
//				Bindings: []organizations.GetIAMPolicyBinding{
//					{
//						Role: "roles/iap.httpsResourceAccessor",
//						Members: []string{
//							"user:jane@example.com",
//						},
//					},
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = iap.NewWebCloudRunServiceIamPolicy(ctx, "policy", &iap.WebCloudRunServiceIamPolicyArgs{
//				Project:             pulumi.Any(_default.Project),
//				Location:            pulumi.Any(_default.Location),
//				CloudRunServiceName: pulumi.Any(_default.Name),
//				PolicyData:          pulumi.String(admin.PolicyData),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// With IAM Conditions:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/iap"
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/organizations"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			admin, err := organizations.LookupIAMPolicy(ctx, &organizations.LookupIAMPolicyArgs{
//				Bindings: []organizations.GetIAMPolicyBinding{
//					{
//						Role: "roles/iap.httpsResourceAccessor",
//						Members: []string{
//							"user:jane@example.com",
//						},
//						Condition: {
//							Title:       "expires_after_2019_12_31",
//							Description: pulumi.StringRef("Expiring at midnight of 2019-12-31"),
//							Expression:  "request.time < timestamp(\"2020-01-01T00:00:00Z\")",
//						},
//					},
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = iap.NewWebCloudRunServiceIamPolicy(ctx, "policy", &iap.WebCloudRunServiceIamPolicyArgs{
//				Project:             pulumi.Any(_default.Project),
//				Location:            pulumi.Any(_default.Location),
//				CloudRunServiceName: pulumi.Any(_default.Name),
//				PolicyData:          pulumi.String(admin.PolicyData),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ## iap.WebCloudRunServiceIamBinding
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/iap"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := iap.NewWebCloudRunServiceIamBinding(ctx, "binding", &iap.WebCloudRunServiceIamBindingArgs{
//				Project:             pulumi.Any(_default.Project),
//				Location:            pulumi.Any(_default.Location),
//				CloudRunServiceName: pulumi.Any(_default.Name),
//				Role:                pulumi.String("roles/iap.httpsResourceAccessor"),
//				Members: pulumi.StringArray{
//					pulumi.String("user:jane@example.com"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// With IAM Conditions:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/iap"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := iap.NewWebCloudRunServiceIamBinding(ctx, "binding", &iap.WebCloudRunServiceIamBindingArgs{
//				Project:             pulumi.Any(_default.Project),
//				Location:            pulumi.Any(_default.Location),
//				CloudRunServiceName: pulumi.Any(_default.Name),
//				Role:                pulumi.String("roles/iap.httpsResourceAccessor"),
//				Members: pulumi.StringArray{
//					pulumi.String("user:jane@example.com"),
//				},
//				Condition: &iap.WebCloudRunServiceIamBindingConditionArgs{
//					Title:       pulumi.String("expires_after_2019_12_31"),
//					Description: pulumi.String("Expiring at midnight of 2019-12-31"),
//					Expression:  pulumi.String("request.time < timestamp(\"2020-01-01T00:00:00Z\")"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ## iap.WebCloudRunServiceIamMember
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/iap"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := iap.NewWebCloudRunServiceIamMember(ctx, "member", &iap.WebCloudRunServiceIamMemberArgs{
//				Project:             pulumi.Any(_default.Project),
//				Location:            pulumi.Any(_default.Location),
//				CloudRunServiceName: pulumi.Any(_default.Name),
//				Role:                pulumi.String("roles/iap.httpsResourceAccessor"),
//				Member:              pulumi.String("user:jane@example.com"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// With IAM Conditions:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/iap"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := iap.NewWebCloudRunServiceIamMember(ctx, "member", &iap.WebCloudRunServiceIamMemberArgs{
//				Project:             pulumi.Any(_default.Project),
//				Location:            pulumi.Any(_default.Location),
//				CloudRunServiceName: pulumi.Any(_default.Name),
//				Role:                pulumi.String("roles/iap.httpsResourceAccessor"),
//				Member:              pulumi.String("user:jane@example.com"),
//				Condition: &iap.WebCloudRunServiceIamMemberConditionArgs{
//					Title:       pulumi.String("expires_after_2019_12_31"),
//					Description: pulumi.String("Expiring at midnight of 2019-12-31"),
//					Expression:  pulumi.String("request.time < timestamp(\"2020-01-01T00:00:00Z\")"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// For all import syntaxes, the "resource in question" can take any of the following forms:
//
// * projects/{{project}}/iap_web/cloud_run-{{location}}/services/{{name}}
//
// * {{project}}/{{location}}/{{name}}
//
// * {{location}}/{{name}}
//
// * {{name}}
//
// Any variables not passed in the import command will be taken from the provider configuration.
//
// Identity-Aware Proxy webcloudrunservice IAM resources can be imported using the resource identifiers, role, and member.
//
// IAM member imports use space-delimited identifiers: the resource in question, the role, and the member identity, e.g.
//
// ```sh
// $ pulumi import gcp:iap/webCloudRunServiceIamPolicy:WebCloudRunServiceIamPolicy editor "projects/{{project}}/iap_web/cloud_run-{{location}}/services/{{web_cloud_run_service}} roles/iap.httpsResourceAccessor user:jane@example.com"
// ```
//
// IAM binding imports use space-delimited identifiers: the resource in question and the role, e.g.
//
// ```sh
// $ pulumi import gcp:iap/webCloudRunServiceIamPolicy:WebCloudRunServiceIamPolicy editor "projects/{{project}}/iap_web/cloud_run-{{location}}/services/{{web_cloud_run_service}} roles/iap.httpsResourceAccessor"
// ```
//
// IAM policy imports use the identifier of the resource in question, e.g.
//
// ```sh
// $ pulumi import gcp:iap/webCloudRunServiceIamPolicy:WebCloudRunServiceIamPolicy editor projects/{{project}}/iap_web/cloud_run-{{location}}/services/{{web_cloud_run_service}}
// ```
//
// -> **Custom Roles** If you're importing a IAM resource with a custom role, make sure to use the
//
//	full name of the custom role, e.g. `[projects/my-project|organizations/my-org]/roles/my-custom-role`.
type WebCloudRunServiceIamPolicy struct {
	pulumi.CustomResourceState

	// Used to find the parent resource to bind the IAM policy to
	CloudRunServiceName pulumi.StringOutput `pulumi:"cloudRunServiceName"`
	// (Computed) The etag of the IAM policy.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// The location of a cloud run service. Used to find the parent resource to bind the IAM policy to. If not specified,
	// the value will be parsed from the identifier of the parent resource. If no location is provided in the parent identifier and no
	// location is specified, it is taken from the provider configuration.
	Location pulumi.StringOutput `pulumi:"location"`
	// The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData pulumi.StringOutput `pulumi:"policyData"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
}

// NewWebCloudRunServiceIamPolicy registers a new resource with the given unique name, arguments, and options.
func NewWebCloudRunServiceIamPolicy(ctx *pulumi.Context,
	name string, args *WebCloudRunServiceIamPolicyArgs, opts ...pulumi.ResourceOption) (*WebCloudRunServiceIamPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CloudRunServiceName == nil {
		return nil, errors.New("invalid value for required argument 'CloudRunServiceName'")
	}
	if args.PolicyData == nil {
		return nil, errors.New("invalid value for required argument 'PolicyData'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WebCloudRunServiceIamPolicy
	err := ctx.RegisterResource("gcp:iap/webCloudRunServiceIamPolicy:WebCloudRunServiceIamPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWebCloudRunServiceIamPolicy gets an existing WebCloudRunServiceIamPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWebCloudRunServiceIamPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WebCloudRunServiceIamPolicyState, opts ...pulumi.ResourceOption) (*WebCloudRunServiceIamPolicy, error) {
	var resource WebCloudRunServiceIamPolicy
	err := ctx.ReadResource("gcp:iap/webCloudRunServiceIamPolicy:WebCloudRunServiceIamPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WebCloudRunServiceIamPolicy resources.
type webCloudRunServiceIamPolicyState struct {
	// Used to find the parent resource to bind the IAM policy to
	CloudRunServiceName *string `pulumi:"cloudRunServiceName"`
	// (Computed) The etag of the IAM policy.
	Etag *string `pulumi:"etag"`
	// The location of a cloud run service. Used to find the parent resource to bind the IAM policy to. If not specified,
	// the value will be parsed from the identifier of the parent resource. If no location is provided in the parent identifier and no
	// location is specified, it is taken from the provider configuration.
	Location *string `pulumi:"location"`
	// The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData *string `pulumi:"policyData"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project *string `pulumi:"project"`
}

type WebCloudRunServiceIamPolicyState struct {
	// Used to find the parent resource to bind the IAM policy to
	CloudRunServiceName pulumi.StringPtrInput
	// (Computed) The etag of the IAM policy.
	Etag pulumi.StringPtrInput
	// The location of a cloud run service. Used to find the parent resource to bind the IAM policy to. If not specified,
	// the value will be parsed from the identifier of the parent resource. If no location is provided in the parent identifier and no
	// location is specified, it is taken from the provider configuration.
	Location pulumi.StringPtrInput
	// The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringPtrInput
}

func (WebCloudRunServiceIamPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*webCloudRunServiceIamPolicyState)(nil)).Elem()
}

type webCloudRunServiceIamPolicyArgs struct {
	// Used to find the parent resource to bind the IAM policy to
	CloudRunServiceName string `pulumi:"cloudRunServiceName"`
	// The location of a cloud run service. Used to find the parent resource to bind the IAM policy to. If not specified,
	// the value will be parsed from the identifier of the parent resource. If no location is provided in the parent identifier and no
	// location is specified, it is taken from the provider configuration.
	Location *string `pulumi:"location"`
	// The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData string `pulumi:"policyData"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project *string `pulumi:"project"`
}

// The set of arguments for constructing a WebCloudRunServiceIamPolicy resource.
type WebCloudRunServiceIamPolicyArgs struct {
	// Used to find the parent resource to bind the IAM policy to
	CloudRunServiceName pulumi.StringInput
	// The location of a cloud run service. Used to find the parent resource to bind the IAM policy to. If not specified,
	// the value will be parsed from the identifier of the parent resource. If no location is provided in the parent identifier and no
	// location is specified, it is taken from the provider configuration.
	Location pulumi.StringPtrInput
	// The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData pulumi.StringInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringPtrInput
}

func (WebCloudRunServiceIamPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*webCloudRunServiceIamPolicyArgs)(nil)).Elem()
}

type WebCloudRunServiceIamPolicyInput interface {
	pulumi.Input

	ToWebCloudRunServiceIamPolicyOutput() WebCloudRunServiceIamPolicyOutput
	ToWebCloudRunServiceIamPolicyOutputWithContext(ctx context.Context) WebCloudRunServiceIamPolicyOutput
}

func (*WebCloudRunServiceIamPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**WebCloudRunServiceIamPolicy)(nil)).Elem()
}

func (i *WebCloudRunServiceIamPolicy) ToWebCloudRunServiceIamPolicyOutput() WebCloudRunServiceIamPolicyOutput {
	return i.ToWebCloudRunServiceIamPolicyOutputWithContext(context.Background())
}

func (i *WebCloudRunServiceIamPolicy) ToWebCloudRunServiceIamPolicyOutputWithContext(ctx context.Context) WebCloudRunServiceIamPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebCloudRunServiceIamPolicyOutput)
}

// WebCloudRunServiceIamPolicyArrayInput is an input type that accepts WebCloudRunServiceIamPolicyArray and WebCloudRunServiceIamPolicyArrayOutput values.
// You can construct a concrete instance of `WebCloudRunServiceIamPolicyArrayInput` via:
//
//	WebCloudRunServiceIamPolicyArray{ WebCloudRunServiceIamPolicyArgs{...} }
type WebCloudRunServiceIamPolicyArrayInput interface {
	pulumi.Input

	ToWebCloudRunServiceIamPolicyArrayOutput() WebCloudRunServiceIamPolicyArrayOutput
	ToWebCloudRunServiceIamPolicyArrayOutputWithContext(context.Context) WebCloudRunServiceIamPolicyArrayOutput
}

type WebCloudRunServiceIamPolicyArray []WebCloudRunServiceIamPolicyInput

func (WebCloudRunServiceIamPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WebCloudRunServiceIamPolicy)(nil)).Elem()
}

func (i WebCloudRunServiceIamPolicyArray) ToWebCloudRunServiceIamPolicyArrayOutput() WebCloudRunServiceIamPolicyArrayOutput {
	return i.ToWebCloudRunServiceIamPolicyArrayOutputWithContext(context.Background())
}

func (i WebCloudRunServiceIamPolicyArray) ToWebCloudRunServiceIamPolicyArrayOutputWithContext(ctx context.Context) WebCloudRunServiceIamPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebCloudRunServiceIamPolicyArrayOutput)
}

// WebCloudRunServiceIamPolicyMapInput is an input type that accepts WebCloudRunServiceIamPolicyMap and WebCloudRunServiceIamPolicyMapOutput values.
// You can construct a concrete instance of `WebCloudRunServiceIamPolicyMapInput` via:
//
//	WebCloudRunServiceIamPolicyMap{ "key": WebCloudRunServiceIamPolicyArgs{...} }
type WebCloudRunServiceIamPolicyMapInput interface {
	pulumi.Input

	ToWebCloudRunServiceIamPolicyMapOutput() WebCloudRunServiceIamPolicyMapOutput
	ToWebCloudRunServiceIamPolicyMapOutputWithContext(context.Context) WebCloudRunServiceIamPolicyMapOutput
}

type WebCloudRunServiceIamPolicyMap map[string]WebCloudRunServiceIamPolicyInput

func (WebCloudRunServiceIamPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WebCloudRunServiceIamPolicy)(nil)).Elem()
}

func (i WebCloudRunServiceIamPolicyMap) ToWebCloudRunServiceIamPolicyMapOutput() WebCloudRunServiceIamPolicyMapOutput {
	return i.ToWebCloudRunServiceIamPolicyMapOutputWithContext(context.Background())
}

func (i WebCloudRunServiceIamPolicyMap) ToWebCloudRunServiceIamPolicyMapOutputWithContext(ctx context.Context) WebCloudRunServiceIamPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebCloudRunServiceIamPolicyMapOutput)
}

type WebCloudRunServiceIamPolicyOutput struct{ *pulumi.OutputState }

func (WebCloudRunServiceIamPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebCloudRunServiceIamPolicy)(nil)).Elem()
}

func (o WebCloudRunServiceIamPolicyOutput) ToWebCloudRunServiceIamPolicyOutput() WebCloudRunServiceIamPolicyOutput {
	return o
}

func (o WebCloudRunServiceIamPolicyOutput) ToWebCloudRunServiceIamPolicyOutputWithContext(ctx context.Context) WebCloudRunServiceIamPolicyOutput {
	return o
}

// Used to find the parent resource to bind the IAM policy to
func (o WebCloudRunServiceIamPolicyOutput) CloudRunServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v *WebCloudRunServiceIamPolicy) pulumi.StringOutput { return v.CloudRunServiceName }).(pulumi.StringOutput)
}

// (Computed) The etag of the IAM policy.
func (o WebCloudRunServiceIamPolicyOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *WebCloudRunServiceIamPolicy) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// The location of a cloud run service. Used to find the parent resource to bind the IAM policy to. If not specified,
// the value will be parsed from the identifier of the parent resource. If no location is provided in the parent identifier and no
// location is specified, it is taken from the provider configuration.
func (o WebCloudRunServiceIamPolicyOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *WebCloudRunServiceIamPolicy) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The policy data generated by
// a `organizations.getIAMPolicy` data source.
func (o WebCloudRunServiceIamPolicyOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v *WebCloudRunServiceIamPolicy) pulumi.StringOutput { return v.PolicyData }).(pulumi.StringOutput)
}

// The ID of the project in which the resource belongs.
// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
func (o WebCloudRunServiceIamPolicyOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *WebCloudRunServiceIamPolicy) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

type WebCloudRunServiceIamPolicyArrayOutput struct{ *pulumi.OutputState }

func (WebCloudRunServiceIamPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WebCloudRunServiceIamPolicy)(nil)).Elem()
}

func (o WebCloudRunServiceIamPolicyArrayOutput) ToWebCloudRunServiceIamPolicyArrayOutput() WebCloudRunServiceIamPolicyArrayOutput {
	return o
}

func (o WebCloudRunServiceIamPolicyArrayOutput) ToWebCloudRunServiceIamPolicyArrayOutputWithContext(ctx context.Context) WebCloudRunServiceIamPolicyArrayOutput {
	return o
}

func (o WebCloudRunServiceIamPolicyArrayOutput) Index(i pulumi.IntInput) WebCloudRunServiceIamPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WebCloudRunServiceIamPolicy {
		return vs[0].([]*WebCloudRunServiceIamPolicy)[vs[1].(int)]
	}).(WebCloudRunServiceIamPolicyOutput)
}

type WebCloudRunServiceIamPolicyMapOutput struct{ *pulumi.OutputState }

func (WebCloudRunServiceIamPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WebCloudRunServiceIamPolicy)(nil)).Elem()
}

func (o WebCloudRunServiceIamPolicyMapOutput) ToWebCloudRunServiceIamPolicyMapOutput() WebCloudRunServiceIamPolicyMapOutput {
	return o
}

func (o WebCloudRunServiceIamPolicyMapOutput) ToWebCloudRunServiceIamPolicyMapOutputWithContext(ctx context.Context) WebCloudRunServiceIamPolicyMapOutput {
	return o
}

func (o WebCloudRunServiceIamPolicyMapOutput) MapIndex(k pulumi.StringInput) WebCloudRunServiceIamPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WebCloudRunServiceIamPolicy {
		return vs[0].(map[string]*WebCloudRunServiceIamPolicy)[vs[1].(string)]
	}).(WebCloudRunServiceIamPolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WebCloudRunServiceIamPolicyInput)(nil)).Elem(), &WebCloudRunServiceIamPolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebCloudRunServiceIamPolicyArrayInput)(nil)).Elem(), WebCloudRunServiceIamPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebCloudRunServiceIamPolicyMapInput)(nil)).Elem(), WebCloudRunServiceIamPolicyMap{})
	pulumi.RegisterOutputType(WebCloudRunServiceIamPolicyOutput{})
	pulumi.RegisterOutputType(WebCloudRunServiceIamPolicyArrayOutput{})
	pulumi.RegisterOutputType(WebCloudRunServiceIamPolicyMapOutput{})
}
