// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iap

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Three different resources help you manage your IAM policy for Identity-Aware Proxy WebForwardingRuleService. Each of these resources serves a different use case:
//
// * `iap.WebForwardingRuleServiceIamPolicy`: Authoritative. Sets the IAM policy for the webforwardingruleservice and replaces any existing policy already attached.
// * `iap.WebForwardingRuleServiceIamBinding`: Authoritative for a given role. Updates the IAM policy to grant a role to a list of members. Other roles within the IAM policy for the webforwardingruleservice are preserved.
// * `iap.WebForwardingRuleServiceIamMember`: Non-authoritative. Updates the IAM policy to grant a role to a new member. Other members for the role for the webforwardingruleservice are preserved.
//
// # A data source can be used to retrieve policy data in advent you do not need creation
//
// * `iap.WebForwardingRuleServiceIamPolicy`: Retrieves the IAM policy for the webforwardingruleservice
//
// > **Note:** `iap.WebForwardingRuleServiceIamPolicy` **cannot** be used in conjunction with `iap.WebForwardingRuleServiceIamBinding` and `iap.WebForwardingRuleServiceIamMember` or they will fight over what your policy should be.
//
// > **Note:** `iap.WebForwardingRuleServiceIamBinding` resources **can be** used in conjunction with `iap.WebForwardingRuleServiceIamMember` resources **only if** they do not grant privilege to the same role.
//
// > **Note:**  This resource supports IAM Conditions but they have some known limitations which can be found [here](https://cloud.google.com/iam/docs/conditions-overview#limitations). Please review this article if you are having issues with IAM Conditions.
//
// ## iap.WebForwardingRuleServiceIamPolicy
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/iap"
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/organizations"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			admin, err := organizations.LookupIAMPolicy(ctx, &organizations.LookupIAMPolicyArgs{
//				Bindings: []organizations.GetIAMPolicyBinding{
//					{
//						Role: "roles/iap.httpsResourceAccessor",
//						Members: []string{
//							"user:jane@example.com",
//						},
//					},
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = iap.NewWebForwardingRuleServiceIamPolicy(ctx, "policy", &iap.WebForwardingRuleServiceIamPolicyArgs{
//				Project:                   pulumi.Any(_default.Project),
//				ForwardingRuleServiceName: pulumi.Any(_default.Name),
//				PolicyData:                pulumi.String(admin.PolicyData),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// With IAM Conditions:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/iap"
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/organizations"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			admin, err := organizations.LookupIAMPolicy(ctx, &organizations.LookupIAMPolicyArgs{
//				Bindings: []organizations.GetIAMPolicyBinding{
//					{
//						Role: "roles/iap.httpsResourceAccessor",
//						Members: []string{
//							"user:jane@example.com",
//						},
//						Condition: {
//							Title:       "expires_after_2019_12_31",
//							Description: pulumi.StringRef("Expiring at midnight of 2019-12-31"),
//							Expression:  "request.time < timestamp(\"2020-01-01T00:00:00Z\")",
//						},
//					},
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = iap.NewWebForwardingRuleServiceIamPolicy(ctx, "policy", &iap.WebForwardingRuleServiceIamPolicyArgs{
//				Project:                   pulumi.Any(_default.Project),
//				ForwardingRuleServiceName: pulumi.Any(_default.Name),
//				PolicyData:                pulumi.String(admin.PolicyData),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ## iap.WebForwardingRuleServiceIamBinding
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/iap"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := iap.NewWebForwardingRuleServiceIamBinding(ctx, "binding", &iap.WebForwardingRuleServiceIamBindingArgs{
//				Project:                   pulumi.Any(_default.Project),
//				ForwardingRuleServiceName: pulumi.Any(_default.Name),
//				Role:                      pulumi.String("roles/iap.httpsResourceAccessor"),
//				Members: pulumi.StringArray{
//					pulumi.String("user:jane@example.com"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// With IAM Conditions:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/iap"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := iap.NewWebForwardingRuleServiceIamBinding(ctx, "binding", &iap.WebForwardingRuleServiceIamBindingArgs{
//				Project:                   pulumi.Any(_default.Project),
//				ForwardingRuleServiceName: pulumi.Any(_default.Name),
//				Role:                      pulumi.String("roles/iap.httpsResourceAccessor"),
//				Members: pulumi.StringArray{
//					pulumi.String("user:jane@example.com"),
//				},
//				Condition: &iap.WebForwardingRuleServiceIamBindingConditionArgs{
//					Title:       pulumi.String("expires_after_2019_12_31"),
//					Description: pulumi.String("Expiring at midnight of 2019-12-31"),
//					Expression:  pulumi.String("request.time < timestamp(\"2020-01-01T00:00:00Z\")"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ## iap.WebForwardingRuleServiceIamMember
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/iap"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := iap.NewWebForwardingRuleServiceIamMember(ctx, "member", &iap.WebForwardingRuleServiceIamMemberArgs{
//				Project:                   pulumi.Any(_default.Project),
//				ForwardingRuleServiceName: pulumi.Any(_default.Name),
//				Role:                      pulumi.String("roles/iap.httpsResourceAccessor"),
//				Member:                    pulumi.String("user:jane@example.com"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// With IAM Conditions:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/iap"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := iap.NewWebForwardingRuleServiceIamMember(ctx, "member", &iap.WebForwardingRuleServiceIamMemberArgs{
//				Project:                   pulumi.Any(_default.Project),
//				ForwardingRuleServiceName: pulumi.Any(_default.Name),
//				Role:                      pulumi.String("roles/iap.httpsResourceAccessor"),
//				Member:                    pulumi.String("user:jane@example.com"),
//				Condition: &iap.WebForwardingRuleServiceIamMemberConditionArgs{
//					Title:       pulumi.String("expires_after_2019_12_31"),
//					Description: pulumi.String("Expiring at midnight of 2019-12-31"),
//					Expression:  pulumi.String("request.time < timestamp(\"2020-01-01T00:00:00Z\")"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## This resource supports User Project Overrides.
//
// -
//
// # IAM policy for Identity-Aware Proxy WebForwardingRuleService
//
// Three different resources help you manage your IAM policy for Identity-Aware Proxy WebForwardingRuleService. Each of these resources serves a different use case:
//
// * `iap.WebForwardingRuleServiceIamPolicy`: Authoritative. Sets the IAM policy for the webforwardingruleservice and replaces any existing policy already attached.
// * `iap.WebForwardingRuleServiceIamBinding`: Authoritative for a given role. Updates the IAM policy to grant a role to a list of members. Other roles within the IAM policy for the webforwardingruleservice are preserved.
// * `iap.WebForwardingRuleServiceIamMember`: Non-authoritative. Updates the IAM policy to grant a role to a new member. Other members for the role for the webforwardingruleservice are preserved.
//
// # A data source can be used to retrieve policy data in advent you do not need creation
//
// * `iap.WebForwardingRuleServiceIamPolicy`: Retrieves the IAM policy for the webforwardingruleservice
//
// > **Note:** `iap.WebForwardingRuleServiceIamPolicy` **cannot** be used in conjunction with `iap.WebForwardingRuleServiceIamBinding` and `iap.WebForwardingRuleServiceIamMember` or they will fight over what your policy should be.
//
// > **Note:** `iap.WebForwardingRuleServiceIamBinding` resources **can be** used in conjunction with `iap.WebForwardingRuleServiceIamMember` resources **only if** they do not grant privilege to the same role.
//
// > **Note:**  This resource supports IAM Conditions but they have some known limitations which can be found [here](https://cloud.google.com/iam/docs/conditions-overview#limitations). Please review this article if you are having issues with IAM Conditions.
//
// ## iap.WebForwardingRuleServiceIamPolicy
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/iap"
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/organizations"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			admin, err := organizations.LookupIAMPolicy(ctx, &organizations.LookupIAMPolicyArgs{
//				Bindings: []organizations.GetIAMPolicyBinding{
//					{
//						Role: "roles/iap.httpsResourceAccessor",
//						Members: []string{
//							"user:jane@example.com",
//						},
//					},
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = iap.NewWebForwardingRuleServiceIamPolicy(ctx, "policy", &iap.WebForwardingRuleServiceIamPolicyArgs{
//				Project:                   pulumi.Any(_default.Project),
//				ForwardingRuleServiceName: pulumi.Any(_default.Name),
//				PolicyData:                pulumi.String(admin.PolicyData),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// With IAM Conditions:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/iap"
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/organizations"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			admin, err := organizations.LookupIAMPolicy(ctx, &organizations.LookupIAMPolicyArgs{
//				Bindings: []organizations.GetIAMPolicyBinding{
//					{
//						Role: "roles/iap.httpsResourceAccessor",
//						Members: []string{
//							"user:jane@example.com",
//						},
//						Condition: {
//							Title:       "expires_after_2019_12_31",
//							Description: pulumi.StringRef("Expiring at midnight of 2019-12-31"),
//							Expression:  "request.time < timestamp(\"2020-01-01T00:00:00Z\")",
//						},
//					},
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = iap.NewWebForwardingRuleServiceIamPolicy(ctx, "policy", &iap.WebForwardingRuleServiceIamPolicyArgs{
//				Project:                   pulumi.Any(_default.Project),
//				ForwardingRuleServiceName: pulumi.Any(_default.Name),
//				PolicyData:                pulumi.String(admin.PolicyData),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ## iap.WebForwardingRuleServiceIamBinding
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/iap"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := iap.NewWebForwardingRuleServiceIamBinding(ctx, "binding", &iap.WebForwardingRuleServiceIamBindingArgs{
//				Project:                   pulumi.Any(_default.Project),
//				ForwardingRuleServiceName: pulumi.Any(_default.Name),
//				Role:                      pulumi.String("roles/iap.httpsResourceAccessor"),
//				Members: pulumi.StringArray{
//					pulumi.String("user:jane@example.com"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// With IAM Conditions:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/iap"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := iap.NewWebForwardingRuleServiceIamBinding(ctx, "binding", &iap.WebForwardingRuleServiceIamBindingArgs{
//				Project:                   pulumi.Any(_default.Project),
//				ForwardingRuleServiceName: pulumi.Any(_default.Name),
//				Role:                      pulumi.String("roles/iap.httpsResourceAccessor"),
//				Members: pulumi.StringArray{
//					pulumi.String("user:jane@example.com"),
//				},
//				Condition: &iap.WebForwardingRuleServiceIamBindingConditionArgs{
//					Title:       pulumi.String("expires_after_2019_12_31"),
//					Description: pulumi.String("Expiring at midnight of 2019-12-31"),
//					Expression:  pulumi.String("request.time < timestamp(\"2020-01-01T00:00:00Z\")"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ## iap.WebForwardingRuleServiceIamMember
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/iap"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := iap.NewWebForwardingRuleServiceIamMember(ctx, "member", &iap.WebForwardingRuleServiceIamMemberArgs{
//				Project:                   pulumi.Any(_default.Project),
//				ForwardingRuleServiceName: pulumi.Any(_default.Name),
//				Role:                      pulumi.String("roles/iap.httpsResourceAccessor"),
//				Member:                    pulumi.String("user:jane@example.com"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// With IAM Conditions:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/iap"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := iap.NewWebForwardingRuleServiceIamMember(ctx, "member", &iap.WebForwardingRuleServiceIamMemberArgs{
//				Project:                   pulumi.Any(_default.Project),
//				ForwardingRuleServiceName: pulumi.Any(_default.Name),
//				Role:                      pulumi.String("roles/iap.httpsResourceAccessor"),
//				Member:                    pulumi.String("user:jane@example.com"),
//				Condition: &iap.WebForwardingRuleServiceIamMemberConditionArgs{
//					Title:       pulumi.String("expires_after_2019_12_31"),
//					Description: pulumi.String("Expiring at midnight of 2019-12-31"),
//					Expression:  pulumi.String("request.time < timestamp(\"2020-01-01T00:00:00Z\")"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// For all import syntaxes, the "resource in question" can take any of the following forms:
//
// * projects/{{project}}/iap_web/forwarding_rule/services/{{name}}
//
// * {{project}}/{{name}}
//
// * {{name}}
//
// Any variables not passed in the import command will be taken from the provider configuration.
//
// Identity-Aware Proxy webforwardingruleservice IAM resources can be imported using the resource identifiers, role, and member.
//
// IAM member imports use space-delimited identifiers: the resource in question, the role, and the member identity, e.g.
//
// ```sh
// $ pulumi import gcp:iap/webForwardingRuleServiceIamPolicy:WebForwardingRuleServiceIamPolicy editor "projects/{{project}}/iap_web/forwarding_rule/services/{{web_forwarding_rule_service}} roles/iap.httpsResourceAccessor user:jane@example.com"
// ```
//
// IAM binding imports use space-delimited identifiers: the resource in question and the role, e.g.
//
// ```sh
// $ pulumi import gcp:iap/webForwardingRuleServiceIamPolicy:WebForwardingRuleServiceIamPolicy editor "projects/{{project}}/iap_web/forwarding_rule/services/{{web_forwarding_rule_service}} roles/iap.httpsResourceAccessor"
// ```
//
// IAM policy imports use the identifier of the resource in question, e.g.
//
// ```sh
// $ pulumi import gcp:iap/webForwardingRuleServiceIamPolicy:WebForwardingRuleServiceIamPolicy editor projects/{{project}}/iap_web/forwarding_rule/services/{{web_forwarding_rule_service}}
// ```
//
// -> **Custom Roles** If you're importing a IAM resource with a custom role, make sure to use the
//
//	full name of the custom role, e.g. `[projects/my-project|organizations/my-org]/roles/my-custom-role`.
type WebForwardingRuleServiceIamPolicy struct {
	pulumi.CustomResourceState

	// (Computed) The etag of the IAM policy.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// Used to find the parent resource to bind the IAM policy to
	ForwardingRuleServiceName pulumi.StringOutput `pulumi:"forwardingRuleServiceName"`
	// The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData pulumi.StringOutput `pulumi:"policyData"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
}

// NewWebForwardingRuleServiceIamPolicy registers a new resource with the given unique name, arguments, and options.
func NewWebForwardingRuleServiceIamPolicy(ctx *pulumi.Context,
	name string, args *WebForwardingRuleServiceIamPolicyArgs, opts ...pulumi.ResourceOption) (*WebForwardingRuleServiceIamPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ForwardingRuleServiceName == nil {
		return nil, errors.New("invalid value for required argument 'ForwardingRuleServiceName'")
	}
	if args.PolicyData == nil {
		return nil, errors.New("invalid value for required argument 'PolicyData'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WebForwardingRuleServiceIamPolicy
	err := ctx.RegisterResource("gcp:iap/webForwardingRuleServiceIamPolicy:WebForwardingRuleServiceIamPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWebForwardingRuleServiceIamPolicy gets an existing WebForwardingRuleServiceIamPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWebForwardingRuleServiceIamPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WebForwardingRuleServiceIamPolicyState, opts ...pulumi.ResourceOption) (*WebForwardingRuleServiceIamPolicy, error) {
	var resource WebForwardingRuleServiceIamPolicy
	err := ctx.ReadResource("gcp:iap/webForwardingRuleServiceIamPolicy:WebForwardingRuleServiceIamPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WebForwardingRuleServiceIamPolicy resources.
type webForwardingRuleServiceIamPolicyState struct {
	// (Computed) The etag of the IAM policy.
	Etag *string `pulumi:"etag"`
	// Used to find the parent resource to bind the IAM policy to
	ForwardingRuleServiceName *string `pulumi:"forwardingRuleServiceName"`
	// The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData *string `pulumi:"policyData"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project *string `pulumi:"project"`
}

type WebForwardingRuleServiceIamPolicyState struct {
	// (Computed) The etag of the IAM policy.
	Etag pulumi.StringPtrInput
	// Used to find the parent resource to bind the IAM policy to
	ForwardingRuleServiceName pulumi.StringPtrInput
	// The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringPtrInput
}

func (WebForwardingRuleServiceIamPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*webForwardingRuleServiceIamPolicyState)(nil)).Elem()
}

type webForwardingRuleServiceIamPolicyArgs struct {
	// Used to find the parent resource to bind the IAM policy to
	ForwardingRuleServiceName string `pulumi:"forwardingRuleServiceName"`
	// The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData string `pulumi:"policyData"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project *string `pulumi:"project"`
}

// The set of arguments for constructing a WebForwardingRuleServiceIamPolicy resource.
type WebForwardingRuleServiceIamPolicyArgs struct {
	// Used to find the parent resource to bind the IAM policy to
	ForwardingRuleServiceName pulumi.StringInput
	// The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData pulumi.StringInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringPtrInput
}

func (WebForwardingRuleServiceIamPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*webForwardingRuleServiceIamPolicyArgs)(nil)).Elem()
}

type WebForwardingRuleServiceIamPolicyInput interface {
	pulumi.Input

	ToWebForwardingRuleServiceIamPolicyOutput() WebForwardingRuleServiceIamPolicyOutput
	ToWebForwardingRuleServiceIamPolicyOutputWithContext(ctx context.Context) WebForwardingRuleServiceIamPolicyOutput
}

func (*WebForwardingRuleServiceIamPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**WebForwardingRuleServiceIamPolicy)(nil)).Elem()
}

func (i *WebForwardingRuleServiceIamPolicy) ToWebForwardingRuleServiceIamPolicyOutput() WebForwardingRuleServiceIamPolicyOutput {
	return i.ToWebForwardingRuleServiceIamPolicyOutputWithContext(context.Background())
}

func (i *WebForwardingRuleServiceIamPolicy) ToWebForwardingRuleServiceIamPolicyOutputWithContext(ctx context.Context) WebForwardingRuleServiceIamPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebForwardingRuleServiceIamPolicyOutput)
}

// WebForwardingRuleServiceIamPolicyArrayInput is an input type that accepts WebForwardingRuleServiceIamPolicyArray and WebForwardingRuleServiceIamPolicyArrayOutput values.
// You can construct a concrete instance of `WebForwardingRuleServiceIamPolicyArrayInput` via:
//
//	WebForwardingRuleServiceIamPolicyArray{ WebForwardingRuleServiceIamPolicyArgs{...} }
type WebForwardingRuleServiceIamPolicyArrayInput interface {
	pulumi.Input

	ToWebForwardingRuleServiceIamPolicyArrayOutput() WebForwardingRuleServiceIamPolicyArrayOutput
	ToWebForwardingRuleServiceIamPolicyArrayOutputWithContext(context.Context) WebForwardingRuleServiceIamPolicyArrayOutput
}

type WebForwardingRuleServiceIamPolicyArray []WebForwardingRuleServiceIamPolicyInput

func (WebForwardingRuleServiceIamPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WebForwardingRuleServiceIamPolicy)(nil)).Elem()
}

func (i WebForwardingRuleServiceIamPolicyArray) ToWebForwardingRuleServiceIamPolicyArrayOutput() WebForwardingRuleServiceIamPolicyArrayOutput {
	return i.ToWebForwardingRuleServiceIamPolicyArrayOutputWithContext(context.Background())
}

func (i WebForwardingRuleServiceIamPolicyArray) ToWebForwardingRuleServiceIamPolicyArrayOutputWithContext(ctx context.Context) WebForwardingRuleServiceIamPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebForwardingRuleServiceIamPolicyArrayOutput)
}

// WebForwardingRuleServiceIamPolicyMapInput is an input type that accepts WebForwardingRuleServiceIamPolicyMap and WebForwardingRuleServiceIamPolicyMapOutput values.
// You can construct a concrete instance of `WebForwardingRuleServiceIamPolicyMapInput` via:
//
//	WebForwardingRuleServiceIamPolicyMap{ "key": WebForwardingRuleServiceIamPolicyArgs{...} }
type WebForwardingRuleServiceIamPolicyMapInput interface {
	pulumi.Input

	ToWebForwardingRuleServiceIamPolicyMapOutput() WebForwardingRuleServiceIamPolicyMapOutput
	ToWebForwardingRuleServiceIamPolicyMapOutputWithContext(context.Context) WebForwardingRuleServiceIamPolicyMapOutput
}

type WebForwardingRuleServiceIamPolicyMap map[string]WebForwardingRuleServiceIamPolicyInput

func (WebForwardingRuleServiceIamPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WebForwardingRuleServiceIamPolicy)(nil)).Elem()
}

func (i WebForwardingRuleServiceIamPolicyMap) ToWebForwardingRuleServiceIamPolicyMapOutput() WebForwardingRuleServiceIamPolicyMapOutput {
	return i.ToWebForwardingRuleServiceIamPolicyMapOutputWithContext(context.Background())
}

func (i WebForwardingRuleServiceIamPolicyMap) ToWebForwardingRuleServiceIamPolicyMapOutputWithContext(ctx context.Context) WebForwardingRuleServiceIamPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebForwardingRuleServiceIamPolicyMapOutput)
}

type WebForwardingRuleServiceIamPolicyOutput struct{ *pulumi.OutputState }

func (WebForwardingRuleServiceIamPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebForwardingRuleServiceIamPolicy)(nil)).Elem()
}

func (o WebForwardingRuleServiceIamPolicyOutput) ToWebForwardingRuleServiceIamPolicyOutput() WebForwardingRuleServiceIamPolicyOutput {
	return o
}

func (o WebForwardingRuleServiceIamPolicyOutput) ToWebForwardingRuleServiceIamPolicyOutputWithContext(ctx context.Context) WebForwardingRuleServiceIamPolicyOutput {
	return o
}

// (Computed) The etag of the IAM policy.
func (o WebForwardingRuleServiceIamPolicyOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *WebForwardingRuleServiceIamPolicy) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// Used to find the parent resource to bind the IAM policy to
func (o WebForwardingRuleServiceIamPolicyOutput) ForwardingRuleServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v *WebForwardingRuleServiceIamPolicy) pulumi.StringOutput { return v.ForwardingRuleServiceName }).(pulumi.StringOutput)
}

// The policy data generated by
// a `organizations.getIAMPolicy` data source.
func (o WebForwardingRuleServiceIamPolicyOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v *WebForwardingRuleServiceIamPolicy) pulumi.StringOutput { return v.PolicyData }).(pulumi.StringOutput)
}

// The ID of the project in which the resource belongs.
// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
func (o WebForwardingRuleServiceIamPolicyOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *WebForwardingRuleServiceIamPolicy) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

type WebForwardingRuleServiceIamPolicyArrayOutput struct{ *pulumi.OutputState }

func (WebForwardingRuleServiceIamPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WebForwardingRuleServiceIamPolicy)(nil)).Elem()
}

func (o WebForwardingRuleServiceIamPolicyArrayOutput) ToWebForwardingRuleServiceIamPolicyArrayOutput() WebForwardingRuleServiceIamPolicyArrayOutput {
	return o
}

func (o WebForwardingRuleServiceIamPolicyArrayOutput) ToWebForwardingRuleServiceIamPolicyArrayOutputWithContext(ctx context.Context) WebForwardingRuleServiceIamPolicyArrayOutput {
	return o
}

func (o WebForwardingRuleServiceIamPolicyArrayOutput) Index(i pulumi.IntInput) WebForwardingRuleServiceIamPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WebForwardingRuleServiceIamPolicy {
		return vs[0].([]*WebForwardingRuleServiceIamPolicy)[vs[1].(int)]
	}).(WebForwardingRuleServiceIamPolicyOutput)
}

type WebForwardingRuleServiceIamPolicyMapOutput struct{ *pulumi.OutputState }

func (WebForwardingRuleServiceIamPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WebForwardingRuleServiceIamPolicy)(nil)).Elem()
}

func (o WebForwardingRuleServiceIamPolicyMapOutput) ToWebForwardingRuleServiceIamPolicyMapOutput() WebForwardingRuleServiceIamPolicyMapOutput {
	return o
}

func (o WebForwardingRuleServiceIamPolicyMapOutput) ToWebForwardingRuleServiceIamPolicyMapOutputWithContext(ctx context.Context) WebForwardingRuleServiceIamPolicyMapOutput {
	return o
}

func (o WebForwardingRuleServiceIamPolicyMapOutput) MapIndex(k pulumi.StringInput) WebForwardingRuleServiceIamPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WebForwardingRuleServiceIamPolicy {
		return vs[0].(map[string]*WebForwardingRuleServiceIamPolicy)[vs[1].(string)]
	}).(WebForwardingRuleServiceIamPolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WebForwardingRuleServiceIamPolicyInput)(nil)).Elem(), &WebForwardingRuleServiceIamPolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebForwardingRuleServiceIamPolicyArrayInput)(nil)).Elem(), WebForwardingRuleServiceIamPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebForwardingRuleServiceIamPolicyMapInput)(nil)).Elem(), WebForwardingRuleServiceIamPolicyMap{})
	pulumi.RegisterOutputType(WebForwardingRuleServiceIamPolicyOutput{})
	pulumi.RegisterOutputType(WebForwardingRuleServiceIamPolicyArrayOutput{})
	pulumi.RegisterOutputType(WebForwardingRuleServiceIamPolicyMapOutput{})
}
