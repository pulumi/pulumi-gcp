// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iap

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves the current IAM policy data for webtypecompute
//
// ## example
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/iap"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := iap.LookupWebTypeComputeIamPolicy(ctx, &iap.LookupWebTypeComputeIamPolicyArgs{
//				Project: pulumi.StringRef(google_project_service.Project_service.Project),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupWebTypeComputeIamPolicy(ctx *pulumi.Context, args *LookupWebTypeComputeIamPolicyArgs, opts ...pulumi.InvokeOption) (*LookupWebTypeComputeIamPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupWebTypeComputeIamPolicyResult
	err := ctx.Invoke("gcp:iap/getWebTypeComputeIamPolicy:getWebTypeComputeIamPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getWebTypeComputeIamPolicy.
type LookupWebTypeComputeIamPolicyArgs struct {
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project *string `pulumi:"project"`
}

// A collection of values returned by getWebTypeComputeIamPolicy.
type LookupWebTypeComputeIamPolicyResult struct {
	// (Computed) The etag of the IAM policy.
	Etag string `pulumi:"etag"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// (Required only by `iap.WebTypeComputeIamPolicy`) The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData string `pulumi:"policyData"`
	Project    string `pulumi:"project"`
}

func LookupWebTypeComputeIamPolicyOutput(ctx *pulumi.Context, args LookupWebTypeComputeIamPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupWebTypeComputeIamPolicyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupWebTypeComputeIamPolicyResult, error) {
			args := v.(LookupWebTypeComputeIamPolicyArgs)
			r, err := LookupWebTypeComputeIamPolicy(ctx, &args, opts...)
			var s LookupWebTypeComputeIamPolicyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupWebTypeComputeIamPolicyResultOutput)
}

// A collection of arguments for invoking getWebTypeComputeIamPolicy.
type LookupWebTypeComputeIamPolicyOutputArgs struct {
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupWebTypeComputeIamPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWebTypeComputeIamPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getWebTypeComputeIamPolicy.
type LookupWebTypeComputeIamPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupWebTypeComputeIamPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWebTypeComputeIamPolicyResult)(nil)).Elem()
}

func (o LookupWebTypeComputeIamPolicyResultOutput) ToLookupWebTypeComputeIamPolicyResultOutput() LookupWebTypeComputeIamPolicyResultOutput {
	return o
}

func (o LookupWebTypeComputeIamPolicyResultOutput) ToLookupWebTypeComputeIamPolicyResultOutputWithContext(ctx context.Context) LookupWebTypeComputeIamPolicyResultOutput {
	return o
}

// (Computed) The etag of the IAM policy.
func (o LookupWebTypeComputeIamPolicyResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWebTypeComputeIamPolicyResult) string { return v.Etag }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupWebTypeComputeIamPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWebTypeComputeIamPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

// (Required only by `iap.WebTypeComputeIamPolicy`) The policy data generated by
// a `organizations.getIAMPolicy` data source.
func (o LookupWebTypeComputeIamPolicyResultOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWebTypeComputeIamPolicyResult) string { return v.PolicyData }).(pulumi.StringOutput)
}

func (o LookupWebTypeComputeIamPolicyResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWebTypeComputeIamPolicyResult) string { return v.Project }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupWebTypeComputeIamPolicyResultOutput{})
}
