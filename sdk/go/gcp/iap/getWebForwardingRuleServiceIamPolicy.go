// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iap

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves the current IAM policy data for webforwardingruleservice
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/iap"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := iap.LookupWebForwardingRuleServiceIamPolicy(ctx, &iap.LookupWebForwardingRuleServiceIamPolicyArgs{
//				Project:                   pulumi.StringRef(_default.Project),
//				ForwardingRuleServiceName: _default.Name,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupWebForwardingRuleServiceIamPolicy(ctx *pulumi.Context, args *LookupWebForwardingRuleServiceIamPolicyArgs, opts ...pulumi.InvokeOption) (*LookupWebForwardingRuleServiceIamPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupWebForwardingRuleServiceIamPolicyResult
	err := ctx.Invoke("gcp:iap/getWebForwardingRuleServiceIamPolicy:getWebForwardingRuleServiceIamPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getWebForwardingRuleServiceIamPolicy.
type LookupWebForwardingRuleServiceIamPolicyArgs struct {
	// Used to find the parent resource to bind the IAM policy to
	ForwardingRuleServiceName string `pulumi:"forwardingRuleServiceName"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project *string `pulumi:"project"`
}

// A collection of values returned by getWebForwardingRuleServiceIamPolicy.
type LookupWebForwardingRuleServiceIamPolicyResult struct {
	// (Computed) The etag of the IAM policy.
	Etag                      string `pulumi:"etag"`
	ForwardingRuleServiceName string `pulumi:"forwardingRuleServiceName"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// (Required only by `iap.WebForwardingRuleServiceIamPolicy`) The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData string `pulumi:"policyData"`
	Project    string `pulumi:"project"`
}

func LookupWebForwardingRuleServiceIamPolicyOutput(ctx *pulumi.Context, args LookupWebForwardingRuleServiceIamPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupWebForwardingRuleServiceIamPolicyResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupWebForwardingRuleServiceIamPolicyResultOutput, error) {
			args := v.(LookupWebForwardingRuleServiceIamPolicyArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("gcp:iap/getWebForwardingRuleServiceIamPolicy:getWebForwardingRuleServiceIamPolicy", args, LookupWebForwardingRuleServiceIamPolicyResultOutput{}, options).(LookupWebForwardingRuleServiceIamPolicyResultOutput), nil
		}).(LookupWebForwardingRuleServiceIamPolicyResultOutput)
}

// A collection of arguments for invoking getWebForwardingRuleServiceIamPolicy.
type LookupWebForwardingRuleServiceIamPolicyOutputArgs struct {
	// Used to find the parent resource to bind the IAM policy to
	ForwardingRuleServiceName pulumi.StringInput `pulumi:"forwardingRuleServiceName"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupWebForwardingRuleServiceIamPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWebForwardingRuleServiceIamPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getWebForwardingRuleServiceIamPolicy.
type LookupWebForwardingRuleServiceIamPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupWebForwardingRuleServiceIamPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWebForwardingRuleServiceIamPolicyResult)(nil)).Elem()
}

func (o LookupWebForwardingRuleServiceIamPolicyResultOutput) ToLookupWebForwardingRuleServiceIamPolicyResultOutput() LookupWebForwardingRuleServiceIamPolicyResultOutput {
	return o
}

func (o LookupWebForwardingRuleServiceIamPolicyResultOutput) ToLookupWebForwardingRuleServiceIamPolicyResultOutputWithContext(ctx context.Context) LookupWebForwardingRuleServiceIamPolicyResultOutput {
	return o
}

// (Computed) The etag of the IAM policy.
func (o LookupWebForwardingRuleServiceIamPolicyResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWebForwardingRuleServiceIamPolicyResult) string { return v.Etag }).(pulumi.StringOutput)
}

func (o LookupWebForwardingRuleServiceIamPolicyResultOutput) ForwardingRuleServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWebForwardingRuleServiceIamPolicyResult) string { return v.ForwardingRuleServiceName }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupWebForwardingRuleServiceIamPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWebForwardingRuleServiceIamPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

// (Required only by `iap.WebForwardingRuleServiceIamPolicy`) The policy data generated by
// a `organizations.getIAMPolicy` data source.
func (o LookupWebForwardingRuleServiceIamPolicyResultOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWebForwardingRuleServiceIamPolicyResult) string { return v.PolicyData }).(pulumi.StringOutput)
}

func (o LookupWebForwardingRuleServiceIamPolicyResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWebForwardingRuleServiceIamPolicyResult) string { return v.Project }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupWebForwardingRuleServiceIamPolicyResultOutput{})
}
