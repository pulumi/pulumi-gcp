// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iap

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves the current IAM policy data for webregionbackendservice
//
// ## example
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/iap"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := iap.LookupWebRegionBackendServiceIamPolicy(ctx, &iap.LookupWebRegionBackendServiceIamPolicyArgs{
//				Project:                 pulumi.StringRef(google_compute_region_backend_service.Default.Project),
//				Region:                  pulumi.StringRef(google_compute_region_backend_service.Default.Region),
//				WebRegionBackendService: google_compute_region_backend_service.Default.Name,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupWebRegionBackendServiceIamPolicy(ctx *pulumi.Context, args *LookupWebRegionBackendServiceIamPolicyArgs, opts ...pulumi.InvokeOption) (*LookupWebRegionBackendServiceIamPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupWebRegionBackendServiceIamPolicyResult
	err := ctx.Invoke("gcp:iap/getWebRegionBackendServiceIamPolicy:getWebRegionBackendServiceIamPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getWebRegionBackendServiceIamPolicy.
type LookupWebRegionBackendServiceIamPolicyArgs struct {
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project *string `pulumi:"project"`
	Region  *string `pulumi:"region"`
	// Used to find the parent resource to bind the IAM policy to
	WebRegionBackendService string `pulumi:"webRegionBackendService"`
}

// A collection of values returned by getWebRegionBackendServiceIamPolicy.
type LookupWebRegionBackendServiceIamPolicyResult struct {
	// (Computed) The etag of the IAM policy.
	Etag string `pulumi:"etag"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// (Required only by `iap.WebRegionBackendServiceIamPolicy`) The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData              string `pulumi:"policyData"`
	Project                 string `pulumi:"project"`
	Region                  string `pulumi:"region"`
	WebRegionBackendService string `pulumi:"webRegionBackendService"`
}

func LookupWebRegionBackendServiceIamPolicyOutput(ctx *pulumi.Context, args LookupWebRegionBackendServiceIamPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupWebRegionBackendServiceIamPolicyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupWebRegionBackendServiceIamPolicyResult, error) {
			args := v.(LookupWebRegionBackendServiceIamPolicyArgs)
			r, err := LookupWebRegionBackendServiceIamPolicy(ctx, &args, opts...)
			var s LookupWebRegionBackendServiceIamPolicyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupWebRegionBackendServiceIamPolicyResultOutput)
}

// A collection of arguments for invoking getWebRegionBackendServiceIamPolicy.
type LookupWebRegionBackendServiceIamPolicyOutputArgs struct {
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringPtrInput `pulumi:"project"`
	Region  pulumi.StringPtrInput `pulumi:"region"`
	// Used to find the parent resource to bind the IAM policy to
	WebRegionBackendService pulumi.StringInput `pulumi:"webRegionBackendService"`
}

func (LookupWebRegionBackendServiceIamPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWebRegionBackendServiceIamPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getWebRegionBackendServiceIamPolicy.
type LookupWebRegionBackendServiceIamPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupWebRegionBackendServiceIamPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWebRegionBackendServiceIamPolicyResult)(nil)).Elem()
}

func (o LookupWebRegionBackendServiceIamPolicyResultOutput) ToLookupWebRegionBackendServiceIamPolicyResultOutput() LookupWebRegionBackendServiceIamPolicyResultOutput {
	return o
}

func (o LookupWebRegionBackendServiceIamPolicyResultOutput) ToLookupWebRegionBackendServiceIamPolicyResultOutputWithContext(ctx context.Context) LookupWebRegionBackendServiceIamPolicyResultOutput {
	return o
}

// (Computed) The etag of the IAM policy.
func (o LookupWebRegionBackendServiceIamPolicyResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWebRegionBackendServiceIamPolicyResult) string { return v.Etag }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupWebRegionBackendServiceIamPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWebRegionBackendServiceIamPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

// (Required only by `iap.WebRegionBackendServiceIamPolicy`) The policy data generated by
// a `organizations.getIAMPolicy` data source.
func (o LookupWebRegionBackendServiceIamPolicyResultOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWebRegionBackendServiceIamPolicyResult) string { return v.PolicyData }).(pulumi.StringOutput)
}

func (o LookupWebRegionBackendServiceIamPolicyResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWebRegionBackendServiceIamPolicyResult) string { return v.Project }).(pulumi.StringOutput)
}

func (o LookupWebRegionBackendServiceIamPolicyResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWebRegionBackendServiceIamPolicyResult) string { return v.Region }).(pulumi.StringOutput)
}

func (o LookupWebRegionBackendServiceIamPolicyResultOutput) WebRegionBackendService() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWebRegionBackendServiceIamPolicyResult) string { return v.WebRegionBackendService }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupWebRegionBackendServiceIamPolicyResultOutput{})
}
