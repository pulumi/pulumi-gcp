// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package iap

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// ## Import
//
// For all import syntaxes, the "resource in question" can take any of the following forms* projects/{{project}}/iap_web * {{project}} Any variables not passed in the import command will be taken from the provider configuration. Identity-Aware Proxy web IAM resources can be imported using the resource identifiers, role, and member. IAM member imports use space-delimited identifiersthe resource in question, the role, and the member identity, e.g.
//
// ```sh
//  $ pulumi import gcp:iap/webIamMember:WebIamMember editor "projects/{{project}}/iap_web roles/iap.httpsResourceAccessor user:jane@example.com"
// ```
//
//  IAM binding imports use space-delimited identifiersthe resource in question and the role, e.g.
//
// ```sh
//  $ pulumi import gcp:iap/webIamMember:WebIamMember editor "projects/{{project}}/iap_web roles/iap.httpsResourceAccessor"
// ```
//
//  IAM policy imports use the identifier of the resource in question, e.g.
//
// ```sh
//  $ pulumi import gcp:iap/webIamMember:WebIamMember editor projects/{{project}}/iap_web
// ```
//
//  -> **Custom Roles**If you're importing a IAM resource with a custom role, make sure to use the
//
// full name of the custom role, e.g. `[projects/my-project|organizations/my-org]/roles/my-custom-role`.
type WebIamMember struct {
	pulumi.CustomResourceState

	// ) An [IAM Condition](https://cloud.google.com/iam/docs/conditions-overview) for a given binding.
	// Structure is documented below.
	Condition WebIamMemberConditionPtrOutput `pulumi:"condition"`
	// (Computed) The etag of the IAM policy.
	Etag   pulumi.StringOutput `pulumi:"etag"`
	Member pulumi.StringOutput `pulumi:"member"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
	// The role that should be applied. Only one
	// `iap.WebIamBinding` can be used per role. Note that custom roles must be of the format
	// `[projects|organizations]/{parent-name}/roles/{role-name}`.
	Role pulumi.StringOutput `pulumi:"role"`
}

// NewWebIamMember registers a new resource with the given unique name, arguments, and options.
func NewWebIamMember(ctx *pulumi.Context,
	name string, args *WebIamMemberArgs, opts ...pulumi.ResourceOption) (*WebIamMember, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Member == nil {
		return nil, errors.New("invalid value for required argument 'Member'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	var resource WebIamMember
	err := ctx.RegisterResource("gcp:iap/webIamMember:WebIamMember", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWebIamMember gets an existing WebIamMember resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWebIamMember(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WebIamMemberState, opts ...pulumi.ResourceOption) (*WebIamMember, error) {
	var resource WebIamMember
	err := ctx.ReadResource("gcp:iap/webIamMember:WebIamMember", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WebIamMember resources.
type webIamMemberState struct {
	// ) An [IAM Condition](https://cloud.google.com/iam/docs/conditions-overview) for a given binding.
	// Structure is documented below.
	Condition *WebIamMemberCondition `pulumi:"condition"`
	// (Computed) The etag of the IAM policy.
	Etag   *string `pulumi:"etag"`
	Member *string `pulumi:"member"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project *string `pulumi:"project"`
	// The role that should be applied. Only one
	// `iap.WebIamBinding` can be used per role. Note that custom roles must be of the format
	// `[projects|organizations]/{parent-name}/roles/{role-name}`.
	Role *string `pulumi:"role"`
}

type WebIamMemberState struct {
	// ) An [IAM Condition](https://cloud.google.com/iam/docs/conditions-overview) for a given binding.
	// Structure is documented below.
	Condition WebIamMemberConditionPtrInput
	// (Computed) The etag of the IAM policy.
	Etag   pulumi.StringPtrInput
	Member pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringPtrInput
	// The role that should be applied. Only one
	// `iap.WebIamBinding` can be used per role. Note that custom roles must be of the format
	// `[projects|organizations]/{parent-name}/roles/{role-name}`.
	Role pulumi.StringPtrInput
}

func (WebIamMemberState) ElementType() reflect.Type {
	return reflect.TypeOf((*webIamMemberState)(nil)).Elem()
}

type webIamMemberArgs struct {
	// ) An [IAM Condition](https://cloud.google.com/iam/docs/conditions-overview) for a given binding.
	// Structure is documented below.
	Condition *WebIamMemberCondition `pulumi:"condition"`
	Member    string                 `pulumi:"member"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project *string `pulumi:"project"`
	// The role that should be applied. Only one
	// `iap.WebIamBinding` can be used per role. Note that custom roles must be of the format
	// `[projects|organizations]/{parent-name}/roles/{role-name}`.
	Role string `pulumi:"role"`
}

// The set of arguments for constructing a WebIamMember resource.
type WebIamMemberArgs struct {
	// ) An [IAM Condition](https://cloud.google.com/iam/docs/conditions-overview) for a given binding.
	// Structure is documented below.
	Condition WebIamMemberConditionPtrInput
	Member    pulumi.StringInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringPtrInput
	// The role that should be applied. Only one
	// `iap.WebIamBinding` can be used per role. Note that custom roles must be of the format
	// `[projects|organizations]/{parent-name}/roles/{role-name}`.
	Role pulumi.StringInput
}

func (WebIamMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*webIamMemberArgs)(nil)).Elem()
}

type WebIamMemberInput interface {
	pulumi.Input

	ToWebIamMemberOutput() WebIamMemberOutput
	ToWebIamMemberOutputWithContext(ctx context.Context) WebIamMemberOutput
}

func (*WebIamMember) ElementType() reflect.Type {
	return reflect.TypeOf((*WebIamMember)(nil))
}

func (i *WebIamMember) ToWebIamMemberOutput() WebIamMemberOutput {
	return i.ToWebIamMemberOutputWithContext(context.Background())
}

func (i *WebIamMember) ToWebIamMemberOutputWithContext(ctx context.Context) WebIamMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebIamMemberOutput)
}

func (i *WebIamMember) ToWebIamMemberPtrOutput() WebIamMemberPtrOutput {
	return i.ToWebIamMemberPtrOutputWithContext(context.Background())
}

func (i *WebIamMember) ToWebIamMemberPtrOutputWithContext(ctx context.Context) WebIamMemberPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebIamMemberPtrOutput)
}

type WebIamMemberPtrInput interface {
	pulumi.Input

	ToWebIamMemberPtrOutput() WebIamMemberPtrOutput
	ToWebIamMemberPtrOutputWithContext(ctx context.Context) WebIamMemberPtrOutput
}

type webIamMemberPtrType WebIamMemberArgs

func (*webIamMemberPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebIamMember)(nil))
}

func (i *webIamMemberPtrType) ToWebIamMemberPtrOutput() WebIamMemberPtrOutput {
	return i.ToWebIamMemberPtrOutputWithContext(context.Background())
}

func (i *webIamMemberPtrType) ToWebIamMemberPtrOutputWithContext(ctx context.Context) WebIamMemberPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebIamMemberPtrOutput)
}

// WebIamMemberArrayInput is an input type that accepts WebIamMemberArray and WebIamMemberArrayOutput values.
// You can construct a concrete instance of `WebIamMemberArrayInput` via:
//
//          WebIamMemberArray{ WebIamMemberArgs{...} }
type WebIamMemberArrayInput interface {
	pulumi.Input

	ToWebIamMemberArrayOutput() WebIamMemberArrayOutput
	ToWebIamMemberArrayOutputWithContext(context.Context) WebIamMemberArrayOutput
}

type WebIamMemberArray []WebIamMemberInput

func (WebIamMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf(([]*WebIamMember)(nil))
}

func (i WebIamMemberArray) ToWebIamMemberArrayOutput() WebIamMemberArrayOutput {
	return i.ToWebIamMemberArrayOutputWithContext(context.Background())
}

func (i WebIamMemberArray) ToWebIamMemberArrayOutputWithContext(ctx context.Context) WebIamMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebIamMemberArrayOutput)
}

// WebIamMemberMapInput is an input type that accepts WebIamMemberMap and WebIamMemberMapOutput values.
// You can construct a concrete instance of `WebIamMemberMapInput` via:
//
//          WebIamMemberMap{ "key": WebIamMemberArgs{...} }
type WebIamMemberMapInput interface {
	pulumi.Input

	ToWebIamMemberMapOutput() WebIamMemberMapOutput
	ToWebIamMemberMapOutputWithContext(context.Context) WebIamMemberMapOutput
}

type WebIamMemberMap map[string]WebIamMemberInput

func (WebIamMemberMap) ElementType() reflect.Type {
	return reflect.TypeOf((map[string]*WebIamMember)(nil))
}

func (i WebIamMemberMap) ToWebIamMemberMapOutput() WebIamMemberMapOutput {
	return i.ToWebIamMemberMapOutputWithContext(context.Background())
}

func (i WebIamMemberMap) ToWebIamMemberMapOutputWithContext(ctx context.Context) WebIamMemberMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebIamMemberMapOutput)
}

type WebIamMemberOutput struct {
	*pulumi.OutputState
}

func (WebIamMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebIamMember)(nil))
}

func (o WebIamMemberOutput) ToWebIamMemberOutput() WebIamMemberOutput {
	return o
}

func (o WebIamMemberOutput) ToWebIamMemberOutputWithContext(ctx context.Context) WebIamMemberOutput {
	return o
}

func (o WebIamMemberOutput) ToWebIamMemberPtrOutput() WebIamMemberPtrOutput {
	return o.ToWebIamMemberPtrOutputWithContext(context.Background())
}

func (o WebIamMemberOutput) ToWebIamMemberPtrOutputWithContext(ctx context.Context) WebIamMemberPtrOutput {
	return o.ApplyT(func(v WebIamMember) *WebIamMember {
		return &v
	}).(WebIamMemberPtrOutput)
}

type WebIamMemberPtrOutput struct {
	*pulumi.OutputState
}

func (WebIamMemberPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebIamMember)(nil))
}

func (o WebIamMemberPtrOutput) ToWebIamMemberPtrOutput() WebIamMemberPtrOutput {
	return o
}

func (o WebIamMemberPtrOutput) ToWebIamMemberPtrOutputWithContext(ctx context.Context) WebIamMemberPtrOutput {
	return o
}

type WebIamMemberArrayOutput struct{ *pulumi.OutputState }

func (WebIamMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebIamMember)(nil))
}

func (o WebIamMemberArrayOutput) ToWebIamMemberArrayOutput() WebIamMemberArrayOutput {
	return o
}

func (o WebIamMemberArrayOutput) ToWebIamMemberArrayOutputWithContext(ctx context.Context) WebIamMemberArrayOutput {
	return o
}

func (o WebIamMemberArrayOutput) Index(i pulumi.IntInput) WebIamMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebIamMember {
		return vs[0].([]WebIamMember)[vs[1].(int)]
	}).(WebIamMemberOutput)
}

type WebIamMemberMapOutput struct{ *pulumi.OutputState }

func (WebIamMemberMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]WebIamMember)(nil))
}

func (o WebIamMemberMapOutput) ToWebIamMemberMapOutput() WebIamMemberMapOutput {
	return o
}

func (o WebIamMemberMapOutput) ToWebIamMemberMapOutputWithContext(ctx context.Context) WebIamMemberMapOutput {
	return o
}

func (o WebIamMemberMapOutput) MapIndex(k pulumi.StringInput) WebIamMemberOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) WebIamMember {
		return vs[0].(map[string]WebIamMember)[vs[1].(string)]
	}).(WebIamMemberOutput)
}

func init() {
	pulumi.RegisterOutputType(WebIamMemberOutput{})
	pulumi.RegisterOutputType(WebIamMemberPtrOutput{})
	pulumi.RegisterOutputType(WebIamMemberArrayOutput{})
	pulumi.RegisterOutputType(WebIamMemberMapOutput{})
}
