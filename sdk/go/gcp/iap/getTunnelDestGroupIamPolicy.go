// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iap

import (
	"context"
	"errors"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves the current IAM policy data for tunneldestgroup
//
// ## example
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/iap"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := iap.LookupTunnelDestGroupIamPolicy(ctx, &iap.LookupTunnelDestGroupIamPolicyArgs{
//				Project:   pulumi.StringRef(destGroup.Project),
//				Region:    pulumi.StringRef(destGroup.Region),
//				DestGroup: destGroup.GroupName,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupTunnelDestGroupIamPolicy(ctx *pulumi.Context, args *LookupTunnelDestGroupIamPolicyArgs, opts ...pulumi.InvokeOption) (*LookupTunnelDestGroupIamPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	invokeOpts, optsErr := pulumi.NewInvokeOptions(opts...)
	if optsErr != nil {
		return &LookupTunnelDestGroupIamPolicyResult{}, optsErr
	}
	if len(invokeOpts.DependsOn) > 0 {
		return &LookupTunnelDestGroupIamPolicyResult{}, errors.New("DependsOn is not supported for direct form invoke LookupTunnelDestGroupIamPolicy, use LookupTunnelDestGroupIamPolicyOutput instead")
	}
	if len(invokeOpts.DependsOnInputs) > 0 {
		return &LookupTunnelDestGroupIamPolicyResult{}, errors.New("DependsOnInputs is not supported for direct form invoke LookupTunnelDestGroupIamPolicy, use LookupTunnelDestGroupIamPolicyOutput instead")
	}
	var rv LookupTunnelDestGroupIamPolicyResult
	err := ctx.Invoke("gcp:iap/getTunnelDestGroupIamPolicy:getTunnelDestGroupIamPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTunnelDestGroupIamPolicy.
type LookupTunnelDestGroupIamPolicyArgs struct {
	DestGroup string `pulumi:"destGroup"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project *string `pulumi:"project"`
	// The region of the tunnel group. Must be the same as the network resources in the group.
	// Used to find the parent resource to bind the IAM policy to. If not specified,
	// the value will be parsed from the identifier of the parent resource. If no region is provided in the parent identifier and no
	// region is specified, it is taken from the provider configuration.
	Region *string `pulumi:"region"`
}

// A collection of values returned by getTunnelDestGroupIamPolicy.
type LookupTunnelDestGroupIamPolicyResult struct {
	DestGroup string `pulumi:"destGroup"`
	// (Computed) The etag of the IAM policy.
	Etag string `pulumi:"etag"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// (Required only by `iap.TunnelDestGroupIamPolicy`) The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData string `pulumi:"policyData"`
	Project    string `pulumi:"project"`
	Region     string `pulumi:"region"`
}

func LookupTunnelDestGroupIamPolicyOutput(ctx *pulumi.Context, args LookupTunnelDestGroupIamPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupTunnelDestGroupIamPolicyResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupTunnelDestGroupIamPolicyResultOutput, error) {
			args := v.(LookupTunnelDestGroupIamPolicyArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupTunnelDestGroupIamPolicyResult
			secret, deps, err := ctx.InvokePackageRawWithDeps("gcp:iap/getTunnelDestGroupIamPolicy:getTunnelDestGroupIamPolicy", args, &rv, "", opts...)
			if err != nil {
				return LookupTunnelDestGroupIamPolicyResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupTunnelDestGroupIamPolicyResultOutput)
			output = pulumi.OutputWithDependencies(ctx.Context(), output, deps...).(LookupTunnelDestGroupIamPolicyResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupTunnelDestGroupIamPolicyResultOutput), nil
			}
			return output, nil
		}).(LookupTunnelDestGroupIamPolicyResultOutput)
}

// A collection of arguments for invoking getTunnelDestGroupIamPolicy.
type LookupTunnelDestGroupIamPolicyOutputArgs struct {
	DestGroup pulumi.StringInput `pulumi:"destGroup"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringPtrInput `pulumi:"project"`
	// The region of the tunnel group. Must be the same as the network resources in the group.
	// Used to find the parent resource to bind the IAM policy to. If not specified,
	// the value will be parsed from the identifier of the parent resource. If no region is provided in the parent identifier and no
	// region is specified, it is taken from the provider configuration.
	Region pulumi.StringPtrInput `pulumi:"region"`
}

func (LookupTunnelDestGroupIamPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTunnelDestGroupIamPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getTunnelDestGroupIamPolicy.
type LookupTunnelDestGroupIamPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupTunnelDestGroupIamPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTunnelDestGroupIamPolicyResult)(nil)).Elem()
}

func (o LookupTunnelDestGroupIamPolicyResultOutput) ToLookupTunnelDestGroupIamPolicyResultOutput() LookupTunnelDestGroupIamPolicyResultOutput {
	return o
}

func (o LookupTunnelDestGroupIamPolicyResultOutput) ToLookupTunnelDestGroupIamPolicyResultOutputWithContext(ctx context.Context) LookupTunnelDestGroupIamPolicyResultOutput {
	return o
}

func (o LookupTunnelDestGroupIamPolicyResultOutput) DestGroup() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTunnelDestGroupIamPolicyResult) string { return v.DestGroup }).(pulumi.StringOutput)
}

// (Computed) The etag of the IAM policy.
func (o LookupTunnelDestGroupIamPolicyResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTunnelDestGroupIamPolicyResult) string { return v.Etag }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupTunnelDestGroupIamPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTunnelDestGroupIamPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

// (Required only by `iap.TunnelDestGroupIamPolicy`) The policy data generated by
// a `organizations.getIAMPolicy` data source.
func (o LookupTunnelDestGroupIamPolicyResultOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTunnelDestGroupIamPolicyResult) string { return v.PolicyData }).(pulumi.StringOutput)
}

func (o LookupTunnelDestGroupIamPolicyResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTunnelDestGroupIamPolicyResult) string { return v.Project }).(pulumi.StringOutput)
}

func (o LookupTunnelDestGroupIamPolicyResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTunnelDestGroupIamPolicyResult) string { return v.Region }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupTunnelDestGroupIamPolicyResultOutput{})
}
