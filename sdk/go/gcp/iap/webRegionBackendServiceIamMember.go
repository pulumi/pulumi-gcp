// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iap

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type WebRegionBackendServiceIamMember struct {
	pulumi.CustomResourceState

	Condition               WebRegionBackendServiceIamMemberConditionPtrOutput `pulumi:"condition"`
	Etag                    pulumi.StringOutput                                `pulumi:"etag"`
	Member                  pulumi.StringOutput                                `pulumi:"member"`
	Project                 pulumi.StringOutput                                `pulumi:"project"`
	Region                  pulumi.StringOutput                                `pulumi:"region"`
	Role                    pulumi.StringOutput                                `pulumi:"role"`
	WebRegionBackendService pulumi.StringOutput                                `pulumi:"webRegionBackendService"`
}

// NewWebRegionBackendServiceIamMember registers a new resource with the given unique name, arguments, and options.
func NewWebRegionBackendServiceIamMember(ctx *pulumi.Context,
	name string, args *WebRegionBackendServiceIamMemberArgs, opts ...pulumi.ResourceOption) (*WebRegionBackendServiceIamMember, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Member == nil {
		return nil, errors.New("invalid value for required argument 'Member'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	if args.WebRegionBackendService == nil {
		return nil, errors.New("invalid value for required argument 'WebRegionBackendService'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WebRegionBackendServiceIamMember
	err := ctx.RegisterResource("gcp:iap/webRegionBackendServiceIamMember:WebRegionBackendServiceIamMember", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWebRegionBackendServiceIamMember gets an existing WebRegionBackendServiceIamMember resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWebRegionBackendServiceIamMember(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WebRegionBackendServiceIamMemberState, opts ...pulumi.ResourceOption) (*WebRegionBackendServiceIamMember, error) {
	var resource WebRegionBackendServiceIamMember
	err := ctx.ReadResource("gcp:iap/webRegionBackendServiceIamMember:WebRegionBackendServiceIamMember", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WebRegionBackendServiceIamMember resources.
type webRegionBackendServiceIamMemberState struct {
	Condition               *WebRegionBackendServiceIamMemberCondition `pulumi:"condition"`
	Etag                    *string                                    `pulumi:"etag"`
	Member                  *string                                    `pulumi:"member"`
	Project                 *string                                    `pulumi:"project"`
	Region                  *string                                    `pulumi:"region"`
	Role                    *string                                    `pulumi:"role"`
	WebRegionBackendService *string                                    `pulumi:"webRegionBackendService"`
}

type WebRegionBackendServiceIamMemberState struct {
	Condition               WebRegionBackendServiceIamMemberConditionPtrInput
	Etag                    pulumi.StringPtrInput
	Member                  pulumi.StringPtrInput
	Project                 pulumi.StringPtrInput
	Region                  pulumi.StringPtrInput
	Role                    pulumi.StringPtrInput
	WebRegionBackendService pulumi.StringPtrInput
}

func (WebRegionBackendServiceIamMemberState) ElementType() reflect.Type {
	return reflect.TypeOf((*webRegionBackendServiceIamMemberState)(nil)).Elem()
}

type webRegionBackendServiceIamMemberArgs struct {
	Condition               *WebRegionBackendServiceIamMemberCondition `pulumi:"condition"`
	Member                  string                                     `pulumi:"member"`
	Project                 *string                                    `pulumi:"project"`
	Region                  *string                                    `pulumi:"region"`
	Role                    string                                     `pulumi:"role"`
	WebRegionBackendService string                                     `pulumi:"webRegionBackendService"`
}

// The set of arguments for constructing a WebRegionBackendServiceIamMember resource.
type WebRegionBackendServiceIamMemberArgs struct {
	Condition               WebRegionBackendServiceIamMemberConditionPtrInput
	Member                  pulumi.StringInput
	Project                 pulumi.StringPtrInput
	Region                  pulumi.StringPtrInput
	Role                    pulumi.StringInput
	WebRegionBackendService pulumi.StringInput
}

func (WebRegionBackendServiceIamMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*webRegionBackendServiceIamMemberArgs)(nil)).Elem()
}

type WebRegionBackendServiceIamMemberInput interface {
	pulumi.Input

	ToWebRegionBackendServiceIamMemberOutput() WebRegionBackendServiceIamMemberOutput
	ToWebRegionBackendServiceIamMemberOutputWithContext(ctx context.Context) WebRegionBackendServiceIamMemberOutput
}

func (*WebRegionBackendServiceIamMember) ElementType() reflect.Type {
	return reflect.TypeOf((**WebRegionBackendServiceIamMember)(nil)).Elem()
}

func (i *WebRegionBackendServiceIamMember) ToWebRegionBackendServiceIamMemberOutput() WebRegionBackendServiceIamMemberOutput {
	return i.ToWebRegionBackendServiceIamMemberOutputWithContext(context.Background())
}

func (i *WebRegionBackendServiceIamMember) ToWebRegionBackendServiceIamMemberOutputWithContext(ctx context.Context) WebRegionBackendServiceIamMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebRegionBackendServiceIamMemberOutput)
}

// WebRegionBackendServiceIamMemberArrayInput is an input type that accepts WebRegionBackendServiceIamMemberArray and WebRegionBackendServiceIamMemberArrayOutput values.
// You can construct a concrete instance of `WebRegionBackendServiceIamMemberArrayInput` via:
//
//	WebRegionBackendServiceIamMemberArray{ WebRegionBackendServiceIamMemberArgs{...} }
type WebRegionBackendServiceIamMemberArrayInput interface {
	pulumi.Input

	ToWebRegionBackendServiceIamMemberArrayOutput() WebRegionBackendServiceIamMemberArrayOutput
	ToWebRegionBackendServiceIamMemberArrayOutputWithContext(context.Context) WebRegionBackendServiceIamMemberArrayOutput
}

type WebRegionBackendServiceIamMemberArray []WebRegionBackendServiceIamMemberInput

func (WebRegionBackendServiceIamMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WebRegionBackendServiceIamMember)(nil)).Elem()
}

func (i WebRegionBackendServiceIamMemberArray) ToWebRegionBackendServiceIamMemberArrayOutput() WebRegionBackendServiceIamMemberArrayOutput {
	return i.ToWebRegionBackendServiceIamMemberArrayOutputWithContext(context.Background())
}

func (i WebRegionBackendServiceIamMemberArray) ToWebRegionBackendServiceIamMemberArrayOutputWithContext(ctx context.Context) WebRegionBackendServiceIamMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebRegionBackendServiceIamMemberArrayOutput)
}

// WebRegionBackendServiceIamMemberMapInput is an input type that accepts WebRegionBackendServiceIamMemberMap and WebRegionBackendServiceIamMemberMapOutput values.
// You can construct a concrete instance of `WebRegionBackendServiceIamMemberMapInput` via:
//
//	WebRegionBackendServiceIamMemberMap{ "key": WebRegionBackendServiceIamMemberArgs{...} }
type WebRegionBackendServiceIamMemberMapInput interface {
	pulumi.Input

	ToWebRegionBackendServiceIamMemberMapOutput() WebRegionBackendServiceIamMemberMapOutput
	ToWebRegionBackendServiceIamMemberMapOutputWithContext(context.Context) WebRegionBackendServiceIamMemberMapOutput
}

type WebRegionBackendServiceIamMemberMap map[string]WebRegionBackendServiceIamMemberInput

func (WebRegionBackendServiceIamMemberMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WebRegionBackendServiceIamMember)(nil)).Elem()
}

func (i WebRegionBackendServiceIamMemberMap) ToWebRegionBackendServiceIamMemberMapOutput() WebRegionBackendServiceIamMemberMapOutput {
	return i.ToWebRegionBackendServiceIamMemberMapOutputWithContext(context.Background())
}

func (i WebRegionBackendServiceIamMemberMap) ToWebRegionBackendServiceIamMemberMapOutputWithContext(ctx context.Context) WebRegionBackendServiceIamMemberMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebRegionBackendServiceIamMemberMapOutput)
}

type WebRegionBackendServiceIamMemberOutput struct{ *pulumi.OutputState }

func (WebRegionBackendServiceIamMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebRegionBackendServiceIamMember)(nil)).Elem()
}

func (o WebRegionBackendServiceIamMemberOutput) ToWebRegionBackendServiceIamMemberOutput() WebRegionBackendServiceIamMemberOutput {
	return o
}

func (o WebRegionBackendServiceIamMemberOutput) ToWebRegionBackendServiceIamMemberOutputWithContext(ctx context.Context) WebRegionBackendServiceIamMemberOutput {
	return o
}

func (o WebRegionBackendServiceIamMemberOutput) Condition() WebRegionBackendServiceIamMemberConditionPtrOutput {
	return o.ApplyT(func(v *WebRegionBackendServiceIamMember) WebRegionBackendServiceIamMemberConditionPtrOutput {
		return v.Condition
	}).(WebRegionBackendServiceIamMemberConditionPtrOutput)
}

func (o WebRegionBackendServiceIamMemberOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *WebRegionBackendServiceIamMember) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o WebRegionBackendServiceIamMemberOutput) Member() pulumi.StringOutput {
	return o.ApplyT(func(v *WebRegionBackendServiceIamMember) pulumi.StringOutput { return v.Member }).(pulumi.StringOutput)
}

func (o WebRegionBackendServiceIamMemberOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *WebRegionBackendServiceIamMember) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o WebRegionBackendServiceIamMemberOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *WebRegionBackendServiceIamMember) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

func (o WebRegionBackendServiceIamMemberOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *WebRegionBackendServiceIamMember) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func (o WebRegionBackendServiceIamMemberOutput) WebRegionBackendService() pulumi.StringOutput {
	return o.ApplyT(func(v *WebRegionBackendServiceIamMember) pulumi.StringOutput { return v.WebRegionBackendService }).(pulumi.StringOutput)
}

type WebRegionBackendServiceIamMemberArrayOutput struct{ *pulumi.OutputState }

func (WebRegionBackendServiceIamMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WebRegionBackendServiceIamMember)(nil)).Elem()
}

func (o WebRegionBackendServiceIamMemberArrayOutput) ToWebRegionBackendServiceIamMemberArrayOutput() WebRegionBackendServiceIamMemberArrayOutput {
	return o
}

func (o WebRegionBackendServiceIamMemberArrayOutput) ToWebRegionBackendServiceIamMemberArrayOutputWithContext(ctx context.Context) WebRegionBackendServiceIamMemberArrayOutput {
	return o
}

func (o WebRegionBackendServiceIamMemberArrayOutput) Index(i pulumi.IntInput) WebRegionBackendServiceIamMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WebRegionBackendServiceIamMember {
		return vs[0].([]*WebRegionBackendServiceIamMember)[vs[1].(int)]
	}).(WebRegionBackendServiceIamMemberOutput)
}

type WebRegionBackendServiceIamMemberMapOutput struct{ *pulumi.OutputState }

func (WebRegionBackendServiceIamMemberMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WebRegionBackendServiceIamMember)(nil)).Elem()
}

func (o WebRegionBackendServiceIamMemberMapOutput) ToWebRegionBackendServiceIamMemberMapOutput() WebRegionBackendServiceIamMemberMapOutput {
	return o
}

func (o WebRegionBackendServiceIamMemberMapOutput) ToWebRegionBackendServiceIamMemberMapOutputWithContext(ctx context.Context) WebRegionBackendServiceIamMemberMapOutput {
	return o
}

func (o WebRegionBackendServiceIamMemberMapOutput) MapIndex(k pulumi.StringInput) WebRegionBackendServiceIamMemberOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WebRegionBackendServiceIamMember {
		return vs[0].(map[string]*WebRegionBackendServiceIamMember)[vs[1].(string)]
	}).(WebRegionBackendServiceIamMemberOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WebRegionBackendServiceIamMemberInput)(nil)).Elem(), &WebRegionBackendServiceIamMember{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebRegionBackendServiceIamMemberArrayInput)(nil)).Elem(), WebRegionBackendServiceIamMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebRegionBackendServiceIamMemberMapInput)(nil)).Elem(), WebRegionBackendServiceIamMemberMap{})
	pulumi.RegisterOutputType(WebRegionBackendServiceIamMemberOutput{})
	pulumi.RegisterOutputType(WebRegionBackendServiceIamMemberArrayOutput{})
	pulumi.RegisterOutputType(WebRegionBackendServiceIamMemberMapOutput{})
}
