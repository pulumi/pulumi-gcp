// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iap

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Three different resources help you manage your IAM policy for Identity-Aware Proxy WebRegionForwardingRuleService. Each of these resources serves a different use case:
//
// * `iap.WebRegionForwardingRuleServiceIamPolicy`: Authoritative. Sets the IAM policy for the webregionforwardingruleservice and replaces any existing policy already attached.
// * `iap.WebRegionForwardingRuleServiceIamBinding`: Authoritative for a given role. Updates the IAM policy to grant a role to a list of members. Other roles within the IAM policy for the webregionforwardingruleservice are preserved.
// * `iap.WebRegionForwardingRuleServiceIamMember`: Non-authoritative. Updates the IAM policy to grant a role to a new member. Other members for the role for the webregionforwardingruleservice are preserved.
//
// # A data source can be used to retrieve policy data in advent you do not need creation
//
// * `iap.WebRegionForwardingRuleServiceIamPolicy`: Retrieves the IAM policy for the webregionforwardingruleservice
//
// > **Note:** `iap.WebRegionForwardingRuleServiceIamPolicy` **cannot** be used in conjunction with `iap.WebRegionForwardingRuleServiceIamBinding` and `iap.WebRegionForwardingRuleServiceIamMember` or they will fight over what your policy should be.
//
// > **Note:** `iap.WebRegionForwardingRuleServiceIamBinding` resources **can be** used in conjunction with `iap.WebRegionForwardingRuleServiceIamMember` resources **only if** they do not grant privilege to the same role.
//
// > **Note:**  This resource supports IAM Conditions but they have some known limitations which can be found [here](https://cloud.google.com/iam/docs/conditions-overview#limitations). Please review this article if you are having issues with IAM Conditions.
//
// ## iap.WebRegionForwardingRuleServiceIamPolicy
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/iap"
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/organizations"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			admin, err := organizations.LookupIAMPolicy(ctx, &organizations.LookupIAMPolicyArgs{
//				Bindings: []organizations.GetIAMPolicyBinding{
//					{
//						Role: "roles/iap.httpsResourceAccessor",
//						Members: []string{
//							"user:jane@example.com",
//						},
//					},
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = iap.NewWebRegionForwardingRuleServiceIamPolicy(ctx, "policy", &iap.WebRegionForwardingRuleServiceIamPolicyArgs{
//				Project:                         pulumi.Any(_default.Project),
//				Region:                          pulumi.Any(_default.Region),
//				ForwardingRuleRegionServiceName: pulumi.Any(_default.Name),
//				PolicyData:                      pulumi.String(admin.PolicyData),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// With IAM Conditions:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/iap"
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/organizations"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			admin, err := organizations.LookupIAMPolicy(ctx, &organizations.LookupIAMPolicyArgs{
//				Bindings: []organizations.GetIAMPolicyBinding{
//					{
//						Role: "roles/iap.httpsResourceAccessor",
//						Members: []string{
//							"user:jane@example.com",
//						},
//						Condition: {
//							Title:       "expires_after_2019_12_31",
//							Description: pulumi.StringRef("Expiring at midnight of 2019-12-31"),
//							Expression:  "request.time < timestamp(\"2020-01-01T00:00:00Z\")",
//						},
//					},
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = iap.NewWebRegionForwardingRuleServiceIamPolicy(ctx, "policy", &iap.WebRegionForwardingRuleServiceIamPolicyArgs{
//				Project:                         pulumi.Any(_default.Project),
//				Region:                          pulumi.Any(_default.Region),
//				ForwardingRuleRegionServiceName: pulumi.Any(_default.Name),
//				PolicyData:                      pulumi.String(admin.PolicyData),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ## iap.WebRegionForwardingRuleServiceIamBinding
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/iap"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := iap.NewWebRegionForwardingRuleServiceIamBinding(ctx, "binding", &iap.WebRegionForwardingRuleServiceIamBindingArgs{
//				Project:                         pulumi.Any(_default.Project),
//				Region:                          pulumi.Any(_default.Region),
//				ForwardingRuleRegionServiceName: pulumi.Any(_default.Name),
//				Role:                            pulumi.String("roles/iap.httpsResourceAccessor"),
//				Members: pulumi.StringArray{
//					pulumi.String("user:jane@example.com"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// With IAM Conditions:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/iap"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := iap.NewWebRegionForwardingRuleServiceIamBinding(ctx, "binding", &iap.WebRegionForwardingRuleServiceIamBindingArgs{
//				Project:                         pulumi.Any(_default.Project),
//				Region:                          pulumi.Any(_default.Region),
//				ForwardingRuleRegionServiceName: pulumi.Any(_default.Name),
//				Role:                            pulumi.String("roles/iap.httpsResourceAccessor"),
//				Members: pulumi.StringArray{
//					pulumi.String("user:jane@example.com"),
//				},
//				Condition: &iap.WebRegionForwardingRuleServiceIamBindingConditionArgs{
//					Title:       pulumi.String("expires_after_2019_12_31"),
//					Description: pulumi.String("Expiring at midnight of 2019-12-31"),
//					Expression:  pulumi.String("request.time < timestamp(\"2020-01-01T00:00:00Z\")"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ## iap.WebRegionForwardingRuleServiceIamMember
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/iap"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := iap.NewWebRegionForwardingRuleServiceIamMember(ctx, "member", &iap.WebRegionForwardingRuleServiceIamMemberArgs{
//				Project:                         pulumi.Any(_default.Project),
//				Region:                          pulumi.Any(_default.Region),
//				ForwardingRuleRegionServiceName: pulumi.Any(_default.Name),
//				Role:                            pulumi.String("roles/iap.httpsResourceAccessor"),
//				Member:                          pulumi.String("user:jane@example.com"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// With IAM Conditions:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/iap"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := iap.NewWebRegionForwardingRuleServiceIamMember(ctx, "member", &iap.WebRegionForwardingRuleServiceIamMemberArgs{
//				Project:                         pulumi.Any(_default.Project),
//				Region:                          pulumi.Any(_default.Region),
//				ForwardingRuleRegionServiceName: pulumi.Any(_default.Name),
//				Role:                            pulumi.String("roles/iap.httpsResourceAccessor"),
//				Member:                          pulumi.String("user:jane@example.com"),
//				Condition: &iap.WebRegionForwardingRuleServiceIamMemberConditionArgs{
//					Title:       pulumi.String("expires_after_2019_12_31"),
//					Description: pulumi.String("Expiring at midnight of 2019-12-31"),
//					Expression:  pulumi.String("request.time < timestamp(\"2020-01-01T00:00:00Z\")"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## This resource supports User Project Overrides.
//
// -
//
// # IAM policy for Identity-Aware Proxy WebRegionForwardingRuleService
//
// Three different resources help you manage your IAM policy for Identity-Aware Proxy WebRegionForwardingRuleService. Each of these resources serves a different use case:
//
// * `iap.WebRegionForwardingRuleServiceIamPolicy`: Authoritative. Sets the IAM policy for the webregionforwardingruleservice and replaces any existing policy already attached.
// * `iap.WebRegionForwardingRuleServiceIamBinding`: Authoritative for a given role. Updates the IAM policy to grant a role to a list of members. Other roles within the IAM policy for the webregionforwardingruleservice are preserved.
// * `iap.WebRegionForwardingRuleServiceIamMember`: Non-authoritative. Updates the IAM policy to grant a role to a new member. Other members for the role for the webregionforwardingruleservice are preserved.
//
// # A data source can be used to retrieve policy data in advent you do not need creation
//
// * `iap.WebRegionForwardingRuleServiceIamPolicy`: Retrieves the IAM policy for the webregionforwardingruleservice
//
// > **Note:** `iap.WebRegionForwardingRuleServiceIamPolicy` **cannot** be used in conjunction with `iap.WebRegionForwardingRuleServiceIamBinding` and `iap.WebRegionForwardingRuleServiceIamMember` or they will fight over what your policy should be.
//
// > **Note:** `iap.WebRegionForwardingRuleServiceIamBinding` resources **can be** used in conjunction with `iap.WebRegionForwardingRuleServiceIamMember` resources **only if** they do not grant privilege to the same role.
//
// > **Note:**  This resource supports IAM Conditions but they have some known limitations which can be found [here](https://cloud.google.com/iam/docs/conditions-overview#limitations). Please review this article if you are having issues with IAM Conditions.
//
// ## iap.WebRegionForwardingRuleServiceIamPolicy
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/iap"
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/organizations"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			admin, err := organizations.LookupIAMPolicy(ctx, &organizations.LookupIAMPolicyArgs{
//				Bindings: []organizations.GetIAMPolicyBinding{
//					{
//						Role: "roles/iap.httpsResourceAccessor",
//						Members: []string{
//							"user:jane@example.com",
//						},
//					},
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = iap.NewWebRegionForwardingRuleServiceIamPolicy(ctx, "policy", &iap.WebRegionForwardingRuleServiceIamPolicyArgs{
//				Project:                         pulumi.Any(_default.Project),
//				Region:                          pulumi.Any(_default.Region),
//				ForwardingRuleRegionServiceName: pulumi.Any(_default.Name),
//				PolicyData:                      pulumi.String(admin.PolicyData),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// With IAM Conditions:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/iap"
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/organizations"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			admin, err := organizations.LookupIAMPolicy(ctx, &organizations.LookupIAMPolicyArgs{
//				Bindings: []organizations.GetIAMPolicyBinding{
//					{
//						Role: "roles/iap.httpsResourceAccessor",
//						Members: []string{
//							"user:jane@example.com",
//						},
//						Condition: {
//							Title:       "expires_after_2019_12_31",
//							Description: pulumi.StringRef("Expiring at midnight of 2019-12-31"),
//							Expression:  "request.time < timestamp(\"2020-01-01T00:00:00Z\")",
//						},
//					},
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = iap.NewWebRegionForwardingRuleServiceIamPolicy(ctx, "policy", &iap.WebRegionForwardingRuleServiceIamPolicyArgs{
//				Project:                         pulumi.Any(_default.Project),
//				Region:                          pulumi.Any(_default.Region),
//				ForwardingRuleRegionServiceName: pulumi.Any(_default.Name),
//				PolicyData:                      pulumi.String(admin.PolicyData),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ## iap.WebRegionForwardingRuleServiceIamBinding
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/iap"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := iap.NewWebRegionForwardingRuleServiceIamBinding(ctx, "binding", &iap.WebRegionForwardingRuleServiceIamBindingArgs{
//				Project:                         pulumi.Any(_default.Project),
//				Region:                          pulumi.Any(_default.Region),
//				ForwardingRuleRegionServiceName: pulumi.Any(_default.Name),
//				Role:                            pulumi.String("roles/iap.httpsResourceAccessor"),
//				Members: pulumi.StringArray{
//					pulumi.String("user:jane@example.com"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// With IAM Conditions:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/iap"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := iap.NewWebRegionForwardingRuleServiceIamBinding(ctx, "binding", &iap.WebRegionForwardingRuleServiceIamBindingArgs{
//				Project:                         pulumi.Any(_default.Project),
//				Region:                          pulumi.Any(_default.Region),
//				ForwardingRuleRegionServiceName: pulumi.Any(_default.Name),
//				Role:                            pulumi.String("roles/iap.httpsResourceAccessor"),
//				Members: pulumi.StringArray{
//					pulumi.String("user:jane@example.com"),
//				},
//				Condition: &iap.WebRegionForwardingRuleServiceIamBindingConditionArgs{
//					Title:       pulumi.String("expires_after_2019_12_31"),
//					Description: pulumi.String("Expiring at midnight of 2019-12-31"),
//					Expression:  pulumi.String("request.time < timestamp(\"2020-01-01T00:00:00Z\")"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ## iap.WebRegionForwardingRuleServiceIamMember
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/iap"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := iap.NewWebRegionForwardingRuleServiceIamMember(ctx, "member", &iap.WebRegionForwardingRuleServiceIamMemberArgs{
//				Project:                         pulumi.Any(_default.Project),
//				Region:                          pulumi.Any(_default.Region),
//				ForwardingRuleRegionServiceName: pulumi.Any(_default.Name),
//				Role:                            pulumi.String("roles/iap.httpsResourceAccessor"),
//				Member:                          pulumi.String("user:jane@example.com"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// With IAM Conditions:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/iap"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := iap.NewWebRegionForwardingRuleServiceIamMember(ctx, "member", &iap.WebRegionForwardingRuleServiceIamMemberArgs{
//				Project:                         pulumi.Any(_default.Project),
//				Region:                          pulumi.Any(_default.Region),
//				ForwardingRuleRegionServiceName: pulumi.Any(_default.Name),
//				Role:                            pulumi.String("roles/iap.httpsResourceAccessor"),
//				Member:                          pulumi.String("user:jane@example.com"),
//				Condition: &iap.WebRegionForwardingRuleServiceIamMemberConditionArgs{
//					Title:       pulumi.String("expires_after_2019_12_31"),
//					Description: pulumi.String("Expiring at midnight of 2019-12-31"),
//					Expression:  pulumi.String("request.time < timestamp(\"2020-01-01T00:00:00Z\")"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// For all import syntaxes, the "resource in question" can take any of the following forms:
//
// * projects/{{project}}/iap_web/forwarding_rule-{{region}}/services/{{name}}
//
// * {{project}}/{{region}}/{{name}}
//
// * {{region}}/{{name}}
//
// * {{name}}
//
// Any variables not passed in the import command will be taken from the provider configuration.
//
// Identity-Aware Proxy webregionforwardingruleservice IAM resources can be imported using the resource identifiers, role, and member.
//
// IAM member imports use space-delimited identifiers: the resource in question, the role, and the member identity, e.g.
//
// ```sh
// $ pulumi import gcp:iap/webRegionForwardingRuleServiceIamPolicy:WebRegionForwardingRuleServiceIamPolicy editor "projects/{{project}}/iap_web/forwarding_rule-{{region}}/services/{{web_region_forwarding_rule_service}} roles/iap.httpsResourceAccessor user:jane@example.com"
// ```
//
// IAM binding imports use space-delimited identifiers: the resource in question and the role, e.g.
//
// ```sh
// $ pulumi import gcp:iap/webRegionForwardingRuleServiceIamPolicy:WebRegionForwardingRuleServiceIamPolicy editor "projects/{{project}}/iap_web/forwarding_rule-{{region}}/services/{{web_region_forwarding_rule_service}} roles/iap.httpsResourceAccessor"
// ```
//
// IAM policy imports use the identifier of the resource in question, e.g.
//
// ```sh
// $ pulumi import gcp:iap/webRegionForwardingRuleServiceIamPolicy:WebRegionForwardingRuleServiceIamPolicy editor projects/{{project}}/iap_web/forwarding_rule-{{region}}/services/{{web_region_forwarding_rule_service}}
// ```
//
// -> **Custom Roles** If you're importing a IAM resource with a custom role, make sure to use the
//
//	full name of the custom role, e.g. `[projects/my-project|organizations/my-org]/roles/my-custom-role`.
type WebRegionForwardingRuleServiceIamPolicy struct {
	pulumi.CustomResourceState

	// (Computed) The etag of the IAM policy.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// Used to find the parent resource to bind the IAM policy to
	ForwardingRuleRegionServiceName pulumi.StringOutput `pulumi:"forwardingRuleRegionServiceName"`
	// The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData pulumi.StringOutput `pulumi:"policyData"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
	// Used to find the parent resource to bind the IAM policy to. If not specified,
	// the value will be parsed from the identifier of the parent resource. If no region is provided in the parent identifier and no
	// region is specified, it is taken from the provider configuration.
	Region pulumi.StringOutput `pulumi:"region"`
}

// NewWebRegionForwardingRuleServiceIamPolicy registers a new resource with the given unique name, arguments, and options.
func NewWebRegionForwardingRuleServiceIamPolicy(ctx *pulumi.Context,
	name string, args *WebRegionForwardingRuleServiceIamPolicyArgs, opts ...pulumi.ResourceOption) (*WebRegionForwardingRuleServiceIamPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ForwardingRuleRegionServiceName == nil {
		return nil, errors.New("invalid value for required argument 'ForwardingRuleRegionServiceName'")
	}
	if args.PolicyData == nil {
		return nil, errors.New("invalid value for required argument 'PolicyData'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WebRegionForwardingRuleServiceIamPolicy
	err := ctx.RegisterResource("gcp:iap/webRegionForwardingRuleServiceIamPolicy:WebRegionForwardingRuleServiceIamPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWebRegionForwardingRuleServiceIamPolicy gets an existing WebRegionForwardingRuleServiceIamPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWebRegionForwardingRuleServiceIamPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WebRegionForwardingRuleServiceIamPolicyState, opts ...pulumi.ResourceOption) (*WebRegionForwardingRuleServiceIamPolicy, error) {
	var resource WebRegionForwardingRuleServiceIamPolicy
	err := ctx.ReadResource("gcp:iap/webRegionForwardingRuleServiceIamPolicy:WebRegionForwardingRuleServiceIamPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WebRegionForwardingRuleServiceIamPolicy resources.
type webRegionForwardingRuleServiceIamPolicyState struct {
	// (Computed) The etag of the IAM policy.
	Etag *string `pulumi:"etag"`
	// Used to find the parent resource to bind the IAM policy to
	ForwardingRuleRegionServiceName *string `pulumi:"forwardingRuleRegionServiceName"`
	// The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData *string `pulumi:"policyData"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project *string `pulumi:"project"`
	// Used to find the parent resource to bind the IAM policy to. If not specified,
	// the value will be parsed from the identifier of the parent resource. If no region is provided in the parent identifier and no
	// region is specified, it is taken from the provider configuration.
	Region *string `pulumi:"region"`
}

type WebRegionForwardingRuleServiceIamPolicyState struct {
	// (Computed) The etag of the IAM policy.
	Etag pulumi.StringPtrInput
	// Used to find the parent resource to bind the IAM policy to
	ForwardingRuleRegionServiceName pulumi.StringPtrInput
	// The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringPtrInput
	// Used to find the parent resource to bind the IAM policy to. If not specified,
	// the value will be parsed from the identifier of the parent resource. If no region is provided in the parent identifier and no
	// region is specified, it is taken from the provider configuration.
	Region pulumi.StringPtrInput
}

func (WebRegionForwardingRuleServiceIamPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*webRegionForwardingRuleServiceIamPolicyState)(nil)).Elem()
}

type webRegionForwardingRuleServiceIamPolicyArgs struct {
	// Used to find the parent resource to bind the IAM policy to
	ForwardingRuleRegionServiceName string `pulumi:"forwardingRuleRegionServiceName"`
	// The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData string `pulumi:"policyData"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project *string `pulumi:"project"`
	// Used to find the parent resource to bind the IAM policy to. If not specified,
	// the value will be parsed from the identifier of the parent resource. If no region is provided in the parent identifier and no
	// region is specified, it is taken from the provider configuration.
	Region *string `pulumi:"region"`
}

// The set of arguments for constructing a WebRegionForwardingRuleServiceIamPolicy resource.
type WebRegionForwardingRuleServiceIamPolicyArgs struct {
	// Used to find the parent resource to bind the IAM policy to
	ForwardingRuleRegionServiceName pulumi.StringInput
	// The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData pulumi.StringInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringPtrInput
	// Used to find the parent resource to bind the IAM policy to. If not specified,
	// the value will be parsed from the identifier of the parent resource. If no region is provided in the parent identifier and no
	// region is specified, it is taken from the provider configuration.
	Region pulumi.StringPtrInput
}

func (WebRegionForwardingRuleServiceIamPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*webRegionForwardingRuleServiceIamPolicyArgs)(nil)).Elem()
}

type WebRegionForwardingRuleServiceIamPolicyInput interface {
	pulumi.Input

	ToWebRegionForwardingRuleServiceIamPolicyOutput() WebRegionForwardingRuleServiceIamPolicyOutput
	ToWebRegionForwardingRuleServiceIamPolicyOutputWithContext(ctx context.Context) WebRegionForwardingRuleServiceIamPolicyOutput
}

func (*WebRegionForwardingRuleServiceIamPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**WebRegionForwardingRuleServiceIamPolicy)(nil)).Elem()
}

func (i *WebRegionForwardingRuleServiceIamPolicy) ToWebRegionForwardingRuleServiceIamPolicyOutput() WebRegionForwardingRuleServiceIamPolicyOutput {
	return i.ToWebRegionForwardingRuleServiceIamPolicyOutputWithContext(context.Background())
}

func (i *WebRegionForwardingRuleServiceIamPolicy) ToWebRegionForwardingRuleServiceIamPolicyOutputWithContext(ctx context.Context) WebRegionForwardingRuleServiceIamPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebRegionForwardingRuleServiceIamPolicyOutput)
}

// WebRegionForwardingRuleServiceIamPolicyArrayInput is an input type that accepts WebRegionForwardingRuleServiceIamPolicyArray and WebRegionForwardingRuleServiceIamPolicyArrayOutput values.
// You can construct a concrete instance of `WebRegionForwardingRuleServiceIamPolicyArrayInput` via:
//
//	WebRegionForwardingRuleServiceIamPolicyArray{ WebRegionForwardingRuleServiceIamPolicyArgs{...} }
type WebRegionForwardingRuleServiceIamPolicyArrayInput interface {
	pulumi.Input

	ToWebRegionForwardingRuleServiceIamPolicyArrayOutput() WebRegionForwardingRuleServiceIamPolicyArrayOutput
	ToWebRegionForwardingRuleServiceIamPolicyArrayOutputWithContext(context.Context) WebRegionForwardingRuleServiceIamPolicyArrayOutput
}

type WebRegionForwardingRuleServiceIamPolicyArray []WebRegionForwardingRuleServiceIamPolicyInput

func (WebRegionForwardingRuleServiceIamPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WebRegionForwardingRuleServiceIamPolicy)(nil)).Elem()
}

func (i WebRegionForwardingRuleServiceIamPolicyArray) ToWebRegionForwardingRuleServiceIamPolicyArrayOutput() WebRegionForwardingRuleServiceIamPolicyArrayOutput {
	return i.ToWebRegionForwardingRuleServiceIamPolicyArrayOutputWithContext(context.Background())
}

func (i WebRegionForwardingRuleServiceIamPolicyArray) ToWebRegionForwardingRuleServiceIamPolicyArrayOutputWithContext(ctx context.Context) WebRegionForwardingRuleServiceIamPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebRegionForwardingRuleServiceIamPolicyArrayOutput)
}

// WebRegionForwardingRuleServiceIamPolicyMapInput is an input type that accepts WebRegionForwardingRuleServiceIamPolicyMap and WebRegionForwardingRuleServiceIamPolicyMapOutput values.
// You can construct a concrete instance of `WebRegionForwardingRuleServiceIamPolicyMapInput` via:
//
//	WebRegionForwardingRuleServiceIamPolicyMap{ "key": WebRegionForwardingRuleServiceIamPolicyArgs{...} }
type WebRegionForwardingRuleServiceIamPolicyMapInput interface {
	pulumi.Input

	ToWebRegionForwardingRuleServiceIamPolicyMapOutput() WebRegionForwardingRuleServiceIamPolicyMapOutput
	ToWebRegionForwardingRuleServiceIamPolicyMapOutputWithContext(context.Context) WebRegionForwardingRuleServiceIamPolicyMapOutput
}

type WebRegionForwardingRuleServiceIamPolicyMap map[string]WebRegionForwardingRuleServiceIamPolicyInput

func (WebRegionForwardingRuleServiceIamPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WebRegionForwardingRuleServiceIamPolicy)(nil)).Elem()
}

func (i WebRegionForwardingRuleServiceIamPolicyMap) ToWebRegionForwardingRuleServiceIamPolicyMapOutput() WebRegionForwardingRuleServiceIamPolicyMapOutput {
	return i.ToWebRegionForwardingRuleServiceIamPolicyMapOutputWithContext(context.Background())
}

func (i WebRegionForwardingRuleServiceIamPolicyMap) ToWebRegionForwardingRuleServiceIamPolicyMapOutputWithContext(ctx context.Context) WebRegionForwardingRuleServiceIamPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebRegionForwardingRuleServiceIamPolicyMapOutput)
}

type WebRegionForwardingRuleServiceIamPolicyOutput struct{ *pulumi.OutputState }

func (WebRegionForwardingRuleServiceIamPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebRegionForwardingRuleServiceIamPolicy)(nil)).Elem()
}

func (o WebRegionForwardingRuleServiceIamPolicyOutput) ToWebRegionForwardingRuleServiceIamPolicyOutput() WebRegionForwardingRuleServiceIamPolicyOutput {
	return o
}

func (o WebRegionForwardingRuleServiceIamPolicyOutput) ToWebRegionForwardingRuleServiceIamPolicyOutputWithContext(ctx context.Context) WebRegionForwardingRuleServiceIamPolicyOutput {
	return o
}

// (Computed) The etag of the IAM policy.
func (o WebRegionForwardingRuleServiceIamPolicyOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *WebRegionForwardingRuleServiceIamPolicy) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// Used to find the parent resource to bind the IAM policy to
func (o WebRegionForwardingRuleServiceIamPolicyOutput) ForwardingRuleRegionServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v *WebRegionForwardingRuleServiceIamPolicy) pulumi.StringOutput {
		return v.ForwardingRuleRegionServiceName
	}).(pulumi.StringOutput)
}

// The policy data generated by
// a `organizations.getIAMPolicy` data source.
func (o WebRegionForwardingRuleServiceIamPolicyOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v *WebRegionForwardingRuleServiceIamPolicy) pulumi.StringOutput { return v.PolicyData }).(pulumi.StringOutput)
}

// The ID of the project in which the resource belongs.
// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
func (o WebRegionForwardingRuleServiceIamPolicyOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *WebRegionForwardingRuleServiceIamPolicy) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Used to find the parent resource to bind the IAM policy to. If not specified,
// the value will be parsed from the identifier of the parent resource. If no region is provided in the parent identifier and no
// region is specified, it is taken from the provider configuration.
func (o WebRegionForwardingRuleServiceIamPolicyOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *WebRegionForwardingRuleServiceIamPolicy) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

type WebRegionForwardingRuleServiceIamPolicyArrayOutput struct{ *pulumi.OutputState }

func (WebRegionForwardingRuleServiceIamPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WebRegionForwardingRuleServiceIamPolicy)(nil)).Elem()
}

func (o WebRegionForwardingRuleServiceIamPolicyArrayOutput) ToWebRegionForwardingRuleServiceIamPolicyArrayOutput() WebRegionForwardingRuleServiceIamPolicyArrayOutput {
	return o
}

func (o WebRegionForwardingRuleServiceIamPolicyArrayOutput) ToWebRegionForwardingRuleServiceIamPolicyArrayOutputWithContext(ctx context.Context) WebRegionForwardingRuleServiceIamPolicyArrayOutput {
	return o
}

func (o WebRegionForwardingRuleServiceIamPolicyArrayOutput) Index(i pulumi.IntInput) WebRegionForwardingRuleServiceIamPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WebRegionForwardingRuleServiceIamPolicy {
		return vs[0].([]*WebRegionForwardingRuleServiceIamPolicy)[vs[1].(int)]
	}).(WebRegionForwardingRuleServiceIamPolicyOutput)
}

type WebRegionForwardingRuleServiceIamPolicyMapOutput struct{ *pulumi.OutputState }

func (WebRegionForwardingRuleServiceIamPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WebRegionForwardingRuleServiceIamPolicy)(nil)).Elem()
}

func (o WebRegionForwardingRuleServiceIamPolicyMapOutput) ToWebRegionForwardingRuleServiceIamPolicyMapOutput() WebRegionForwardingRuleServiceIamPolicyMapOutput {
	return o
}

func (o WebRegionForwardingRuleServiceIamPolicyMapOutput) ToWebRegionForwardingRuleServiceIamPolicyMapOutputWithContext(ctx context.Context) WebRegionForwardingRuleServiceIamPolicyMapOutput {
	return o
}

func (o WebRegionForwardingRuleServiceIamPolicyMapOutput) MapIndex(k pulumi.StringInput) WebRegionForwardingRuleServiceIamPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WebRegionForwardingRuleServiceIamPolicy {
		return vs[0].(map[string]*WebRegionForwardingRuleServiceIamPolicy)[vs[1].(string)]
	}).(WebRegionForwardingRuleServiceIamPolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WebRegionForwardingRuleServiceIamPolicyInput)(nil)).Elem(), &WebRegionForwardingRuleServiceIamPolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebRegionForwardingRuleServiceIamPolicyArrayInput)(nil)).Elem(), WebRegionForwardingRuleServiceIamPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebRegionForwardingRuleServiceIamPolicyMapInput)(nil)).Elem(), WebRegionForwardingRuleServiceIamPolicyMap{})
	pulumi.RegisterOutputType(WebRegionForwardingRuleServiceIamPolicyOutput{})
	pulumi.RegisterOutputType(WebRegionForwardingRuleServiceIamPolicyArrayOutput{})
	pulumi.RegisterOutputType(WebRegionForwardingRuleServiceIamPolicyMapOutput{})
}
