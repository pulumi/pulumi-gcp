// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iap

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// IAP settings - manage IAP settings
//
// To get more information about Settings, see:
//
// * [API documentation](https://cloud.google.com/iap/docs/reference/rest/v1/IapSettings)
// * How-to Guides
//   - [Customizing IAP](https://cloud.google.com/iap/docs/customizing)
//
// ## Example Usage
//
// ### Iap Settings Basic
//
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/compute"
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/iap"
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/organizations"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			project, err := organizations.LookupProject(ctx, &organizations.LookupProjectArgs{}, nil)
//			if err != nil {
//				return err
//			}
//			defaultHealthCheck, err := compute.NewHealthCheck(ctx, "default", &compute.HealthCheckArgs{
//				Name:             pulumi.String("iap-bs-health-check"),
//				CheckIntervalSec: pulumi.Int(1),
//				TimeoutSec:       pulumi.Int(1),
//				TcpHealthCheck: &compute.HealthCheckTcpHealthCheckArgs{
//					Port: pulumi.Int(80),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_default, err := compute.NewRegionBackendService(ctx, "default", &compute.RegionBackendServiceArgs{
//				Name:                         pulumi.String("iap-settings-tf"),
//				Region:                       pulumi.String("us-central1"),
//				HealthChecks:                 defaultHealthCheck.ID(),
//				ConnectionDrainingTimeoutSec: pulumi.Int(10),
//				SessionAffinity:              pulumi.String("CLIENT_IP"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = iap.NewSettings(ctx, "iap_settings", &iap.SettingsArgs{
//				Name: _default.Name.ApplyT(func(name string) (string, error) {
//					return fmt.Sprintf("projects/%v/iap_web/compute-us-central1/services/%v", project.Number, name), nil
//				}).(pulumi.StringOutput),
//				AccessSettings: &iap.SettingsAccessSettingsArgs{
//					IdentitySources: pulumi.StringArray{
//						pulumi.String("WORKFORCE_IDENTITY_FEDERATION"),
//					},
//					AllowedDomainsSettings: &iap.SettingsAccessSettingsAllowedDomainsSettingsArgs{
//						Domains: pulumi.StringArray{
//							pulumi.String("test.abc.com"),
//						},
//						Enable: pulumi.Bool(true),
//					},
//					CorsSettings: &iap.SettingsAccessSettingsCorsSettingsArgs{
//						AllowHttpOptions: pulumi.Bool(true),
//					},
//					ReauthSettings: &iap.SettingsAccessSettingsReauthSettingsArgs{
//						Method:     pulumi.String("SECURE_KEY"),
//						MaxAge:     pulumi.String("305s"),
//						PolicyType: pulumi.String("MINIMUM"),
//					},
//					GcipSettings: &iap.SettingsAccessSettingsGcipSettingsArgs{
//						LoginPageUri: pulumi.String("https://test.com/?apiKey=abc"),
//					},
//					OauthSettings: &iap.SettingsAccessSettingsOauthSettingsArgs{
//						LoginHint: pulumi.String("test"),
//					},
//					WorkforceIdentitySettings: &iap.SettingsAccessSettingsWorkforceIdentitySettingsArgs{
//						WorkforcePools: pulumi.String("wif-pool"),
//						Oauth2: &iap.SettingsAccessSettingsWorkforceIdentitySettingsOauth2Args{
//							ClientId:     pulumi.String("test-client-id"),
//							ClientSecret: pulumi.String("test-client-secret"),
//						},
//					},
//				},
//				ApplicationSettings: &iap.SettingsApplicationSettingsArgs{
//					CookieDomain: pulumi.String("test.abc.com"),
//					CsmSettings: &iap.SettingsApplicationSettingsCsmSettingsArgs{
//						RctokenAud: pulumi.String("test-aud-set"),
//					},
//					AccessDeniedPageSettings: &iap.SettingsApplicationSettingsAccessDeniedPageSettingsArgs{
//						AccessDeniedPageUri:               pulumi.String("test-uri"),
//						GenerateTroubleshootingUri:        pulumi.Bool(true),
//						RemediationTokenGenerationEnabled: pulumi.Bool(false),
//					},
//					AttributePropagationSettings: &iap.SettingsApplicationSettingsAttributePropagationSettingsArgs{
//						OutputCredentials: pulumi.StringArray{
//							pulumi.String("HEADER"),
//						},
//						Expression: pulumi.String("attributes.saml_attributes.filter(attribute, attribute.name in [\"test1\", \"test2\"])"),
//						Enable:     pulumi.Bool(false),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Settings can be imported using any of these accepted formats:
//
// * `{{name}}/iapSettings`
//
// * `{{name}}`
//
// When using the `pulumi import` command, Settings can be imported using one of the formats above. For example:
//
// ```sh
// $ pulumi import gcp:iap/settings:Settings default {{name}}/iapSettings
// ```
//
// ```sh
// $ pulumi import gcp:iap/settings:Settings default {{name}}
// ```
type Settings struct {
	pulumi.CustomResourceState

	// Top level wrapper for all access related setting in IAP.
	// Structure is documented below.
	AccessSettings SettingsAccessSettingsPtrOutput `pulumi:"accessSettings"`
	// Top level wrapper for all application related settings in IAP.
	// Structure is documented below.
	ApplicationSettings SettingsApplicationSettingsPtrOutput `pulumi:"applicationSettings"`
	// The resource name of the IAP protected resource. Name can have below resources:
	// * organizations/{organization_id}
	// * folders/{folder_id}
	// * projects/{project_id}
	// * projects/{project_id}/iap_web
	// * projects/{project_id}/iap_web/compute
	// * projects/{project_id}/iap_web/compute-{region}
	// * projects/{project_id}/iap_web/compute/services/{service_id}
	// * projects/{project_id}/iap_web/compute-{region}/services/{service_id}
	// * projects/{project_id}/iap_web/appengine-{app_id}
	// * projects/{project_id}/iap_web/appengine-{app_id}/services/{service_id}
	// * projects/{project_id}/iap_web/appengine-{app_id}/services/{service_id}/version/{version_id}
	Name pulumi.StringOutput `pulumi:"name"`
}

// NewSettings registers a new resource with the given unique name, arguments, and options.
func NewSettings(ctx *pulumi.Context,
	name string, args *SettingsArgs, opts ...pulumi.ResourceOption) (*Settings, error) {
	if args == nil {
		args = &SettingsArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Settings
	err := ctx.RegisterResource("gcp:iap/settings:Settings", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSettings gets an existing Settings resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSettings(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SettingsState, opts ...pulumi.ResourceOption) (*Settings, error) {
	var resource Settings
	err := ctx.ReadResource("gcp:iap/settings:Settings", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Settings resources.
type settingsState struct {
	// Top level wrapper for all access related setting in IAP.
	// Structure is documented below.
	AccessSettings *SettingsAccessSettings `pulumi:"accessSettings"`
	// Top level wrapper for all application related settings in IAP.
	// Structure is documented below.
	ApplicationSettings *SettingsApplicationSettings `pulumi:"applicationSettings"`
	// The resource name of the IAP protected resource. Name can have below resources:
	// * organizations/{organization_id}
	// * folders/{folder_id}
	// * projects/{project_id}
	// * projects/{project_id}/iap_web
	// * projects/{project_id}/iap_web/compute
	// * projects/{project_id}/iap_web/compute-{region}
	// * projects/{project_id}/iap_web/compute/services/{service_id}
	// * projects/{project_id}/iap_web/compute-{region}/services/{service_id}
	// * projects/{project_id}/iap_web/appengine-{app_id}
	// * projects/{project_id}/iap_web/appengine-{app_id}/services/{service_id}
	// * projects/{project_id}/iap_web/appengine-{app_id}/services/{service_id}/version/{version_id}
	Name *string `pulumi:"name"`
}

type SettingsState struct {
	// Top level wrapper for all access related setting in IAP.
	// Structure is documented below.
	AccessSettings SettingsAccessSettingsPtrInput
	// Top level wrapper for all application related settings in IAP.
	// Structure is documented below.
	ApplicationSettings SettingsApplicationSettingsPtrInput
	// The resource name of the IAP protected resource. Name can have below resources:
	// * organizations/{organization_id}
	// * folders/{folder_id}
	// * projects/{project_id}
	// * projects/{project_id}/iap_web
	// * projects/{project_id}/iap_web/compute
	// * projects/{project_id}/iap_web/compute-{region}
	// * projects/{project_id}/iap_web/compute/services/{service_id}
	// * projects/{project_id}/iap_web/compute-{region}/services/{service_id}
	// * projects/{project_id}/iap_web/appengine-{app_id}
	// * projects/{project_id}/iap_web/appengine-{app_id}/services/{service_id}
	// * projects/{project_id}/iap_web/appengine-{app_id}/services/{service_id}/version/{version_id}
	Name pulumi.StringPtrInput
}

func (SettingsState) ElementType() reflect.Type {
	return reflect.TypeOf((*settingsState)(nil)).Elem()
}

type settingsArgs struct {
	// Top level wrapper for all access related setting in IAP.
	// Structure is documented below.
	AccessSettings *SettingsAccessSettings `pulumi:"accessSettings"`
	// Top level wrapper for all application related settings in IAP.
	// Structure is documented below.
	ApplicationSettings *SettingsApplicationSettings `pulumi:"applicationSettings"`
	// The resource name of the IAP protected resource. Name can have below resources:
	// * organizations/{organization_id}
	// * folders/{folder_id}
	// * projects/{project_id}
	// * projects/{project_id}/iap_web
	// * projects/{project_id}/iap_web/compute
	// * projects/{project_id}/iap_web/compute-{region}
	// * projects/{project_id}/iap_web/compute/services/{service_id}
	// * projects/{project_id}/iap_web/compute-{region}/services/{service_id}
	// * projects/{project_id}/iap_web/appengine-{app_id}
	// * projects/{project_id}/iap_web/appengine-{app_id}/services/{service_id}
	// * projects/{project_id}/iap_web/appengine-{app_id}/services/{service_id}/version/{version_id}
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a Settings resource.
type SettingsArgs struct {
	// Top level wrapper for all access related setting in IAP.
	// Structure is documented below.
	AccessSettings SettingsAccessSettingsPtrInput
	// Top level wrapper for all application related settings in IAP.
	// Structure is documented below.
	ApplicationSettings SettingsApplicationSettingsPtrInput
	// The resource name of the IAP protected resource. Name can have below resources:
	// * organizations/{organization_id}
	// * folders/{folder_id}
	// * projects/{project_id}
	// * projects/{project_id}/iap_web
	// * projects/{project_id}/iap_web/compute
	// * projects/{project_id}/iap_web/compute-{region}
	// * projects/{project_id}/iap_web/compute/services/{service_id}
	// * projects/{project_id}/iap_web/compute-{region}/services/{service_id}
	// * projects/{project_id}/iap_web/appengine-{app_id}
	// * projects/{project_id}/iap_web/appengine-{app_id}/services/{service_id}
	// * projects/{project_id}/iap_web/appengine-{app_id}/services/{service_id}/version/{version_id}
	Name pulumi.StringPtrInput
}

func (SettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*settingsArgs)(nil)).Elem()
}

type SettingsInput interface {
	pulumi.Input

	ToSettingsOutput() SettingsOutput
	ToSettingsOutputWithContext(ctx context.Context) SettingsOutput
}

func (*Settings) ElementType() reflect.Type {
	return reflect.TypeOf((**Settings)(nil)).Elem()
}

func (i *Settings) ToSettingsOutput() SettingsOutput {
	return i.ToSettingsOutputWithContext(context.Background())
}

func (i *Settings) ToSettingsOutputWithContext(ctx context.Context) SettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsOutput)
}

// SettingsArrayInput is an input type that accepts SettingsArray and SettingsArrayOutput values.
// You can construct a concrete instance of `SettingsArrayInput` via:
//
//	SettingsArray{ SettingsArgs{...} }
type SettingsArrayInput interface {
	pulumi.Input

	ToSettingsArrayOutput() SettingsArrayOutput
	ToSettingsArrayOutputWithContext(context.Context) SettingsArrayOutput
}

type SettingsArray []SettingsInput

func (SettingsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Settings)(nil)).Elem()
}

func (i SettingsArray) ToSettingsArrayOutput() SettingsArrayOutput {
	return i.ToSettingsArrayOutputWithContext(context.Background())
}

func (i SettingsArray) ToSettingsArrayOutputWithContext(ctx context.Context) SettingsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsArrayOutput)
}

// SettingsMapInput is an input type that accepts SettingsMap and SettingsMapOutput values.
// You can construct a concrete instance of `SettingsMapInput` via:
//
//	SettingsMap{ "key": SettingsArgs{...} }
type SettingsMapInput interface {
	pulumi.Input

	ToSettingsMapOutput() SettingsMapOutput
	ToSettingsMapOutputWithContext(context.Context) SettingsMapOutput
}

type SettingsMap map[string]SettingsInput

func (SettingsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Settings)(nil)).Elem()
}

func (i SettingsMap) ToSettingsMapOutput() SettingsMapOutput {
	return i.ToSettingsMapOutputWithContext(context.Background())
}

func (i SettingsMap) ToSettingsMapOutputWithContext(ctx context.Context) SettingsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsMapOutput)
}

type SettingsOutput struct{ *pulumi.OutputState }

func (SettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Settings)(nil)).Elem()
}

func (o SettingsOutput) ToSettingsOutput() SettingsOutput {
	return o
}

func (o SettingsOutput) ToSettingsOutputWithContext(ctx context.Context) SettingsOutput {
	return o
}

// Top level wrapper for all access related setting in IAP.
// Structure is documented below.
func (o SettingsOutput) AccessSettings() SettingsAccessSettingsPtrOutput {
	return o.ApplyT(func(v *Settings) SettingsAccessSettingsPtrOutput { return v.AccessSettings }).(SettingsAccessSettingsPtrOutput)
}

// Top level wrapper for all application related settings in IAP.
// Structure is documented below.
func (o SettingsOutput) ApplicationSettings() SettingsApplicationSettingsPtrOutput {
	return o.ApplyT(func(v *Settings) SettingsApplicationSettingsPtrOutput { return v.ApplicationSettings }).(SettingsApplicationSettingsPtrOutput)
}

// The resource name of the IAP protected resource. Name can have below resources:
// * organizations/{organization_id}
// * folders/{folder_id}
// * projects/{project_id}
// * projects/{project_id}/iap_web
// * projects/{project_id}/iap_web/compute
// * projects/{project_id}/iap_web/compute-{region}
// * projects/{project_id}/iap_web/compute/services/{service_id}
// * projects/{project_id}/iap_web/compute-{region}/services/{service_id}
// * projects/{project_id}/iap_web/appengine-{app_id}
// * projects/{project_id}/iap_web/appengine-{app_id}/services/{service_id}
// * projects/{project_id}/iap_web/appengine-{app_id}/services/{service_id}/version/{version_id}
func (o SettingsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Settings) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

type SettingsArrayOutput struct{ *pulumi.OutputState }

func (SettingsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Settings)(nil)).Elem()
}

func (o SettingsArrayOutput) ToSettingsArrayOutput() SettingsArrayOutput {
	return o
}

func (o SettingsArrayOutput) ToSettingsArrayOutputWithContext(ctx context.Context) SettingsArrayOutput {
	return o
}

func (o SettingsArrayOutput) Index(i pulumi.IntInput) SettingsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Settings {
		return vs[0].([]*Settings)[vs[1].(int)]
	}).(SettingsOutput)
}

type SettingsMapOutput struct{ *pulumi.OutputState }

func (SettingsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Settings)(nil)).Elem()
}

func (o SettingsMapOutput) ToSettingsMapOutput() SettingsMapOutput {
	return o
}

func (o SettingsMapOutput) ToSettingsMapOutputWithContext(ctx context.Context) SettingsMapOutput {
	return o
}

func (o SettingsMapOutput) MapIndex(k pulumi.StringInput) SettingsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Settings {
		return vs[0].(map[string]*Settings)[vs[1].(string)]
	}).(SettingsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SettingsInput)(nil)).Elem(), &Settings{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingsArrayInput)(nil)).Elem(), SettingsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingsMapInput)(nil)).Elem(), SettingsMap{})
	pulumi.RegisterOutputType(SettingsOutput{})
	pulumi.RegisterOutputType(SettingsArrayOutput{})
	pulumi.RegisterOutputType(SettingsMapOutput{})
}
