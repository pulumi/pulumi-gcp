// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iap

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Three different resources help you manage your IAM policy for Identity-Aware Proxy WebRegionBackendService. Each of these resources serves a different use case:
//
// * `iap.WebRegionBackendServiceIamPolicy`: Authoritative. Sets the IAM policy for the webregionbackendservice and replaces any existing policy already attached.
// * `iap.WebRegionBackendServiceIamBinding`: Authoritative for a given role. Updates the IAM policy to grant a role to a list of members. Other roles within the IAM policy for the webregionbackendservice are preserved.
// * `iap.WebRegionBackendServiceIamMember`: Non-authoritative. Updates the IAM policy to grant a role to a new member. Other members for the role for the webregionbackendservice are preserved.
//
// # A data source can be used to retrieve policy data in advent you do not need creation
//
// * `iap.WebRegionBackendServiceIamPolicy`: Retrieves the IAM policy for the webregionbackendservice
//
// > **Note:** `iap.WebRegionBackendServiceIamPolicy` **cannot** be used in conjunction with `iap.WebRegionBackendServiceIamBinding` and `iap.WebRegionBackendServiceIamMember` or they will fight over what your policy should be.
//
// > **Note:** `iap.WebRegionBackendServiceIamBinding` resources **can be** used in conjunction with `iap.WebRegionBackendServiceIamMember` resources **only if** they do not grant privilege to the same role.
//
// > **Note:**  This resource supports IAM Conditions but they have some known limitations which can be found [here](https://cloud.google.com/iam/docs/conditions-overview#limitations). Please review this article if you are having issues with IAM Conditions.
//
// ## Import
//
// For all import syntaxes, the "resource in question" can take any of the following forms* projects/{{project}}/iap_web/compute-{{region}}/services/{{name}} * {{project}}/{{region}}/{{name}} * {{region}}/{{name}} * {{name}} Any variables not passed in the import command will be taken from the provider configuration. Identity-Aware Proxy webregionbackendservice IAM resources can be imported using the resource identifiers, role, and member. IAM member imports use space-delimited identifiersthe resource in question, the role, and the member identity, e.g.
//
// ```sh
//
//	$ pulumi import gcp:iap/webRegionBackendServiceIamBinding:WebRegionBackendServiceIamBinding editor "projects/{{project}}/iap_web/compute-{{region}}/services/{{web_region_backend_service}} roles/iap.httpsResourceAccessor user:jane@example.com"
//
// ```
//
//	IAM binding imports use space-delimited identifiersthe resource in question and the role, e.g.
//
// ```sh
//
//	$ pulumi import gcp:iap/webRegionBackendServiceIamBinding:WebRegionBackendServiceIamBinding editor "projects/{{project}}/iap_web/compute-{{region}}/services/{{web_region_backend_service}} roles/iap.httpsResourceAccessor"
//
// ```
//
//	IAM policy imports use the identifier of the resource in question, e.g.
//
// ```sh
//
//	$ pulumi import gcp:iap/webRegionBackendServiceIamBinding:WebRegionBackendServiceIamBinding editor projects/{{project}}/iap_web/compute-{{region}}/services/{{web_region_backend_service}}
//
// ```
//
//	-> **Custom Roles**If you're importing a IAM resource with a custom role, make sure to use the
//
// full name of the custom role, e.g. `[projects/my-project|organizations/my-org]/roles/my-custom-role`.
type WebRegionBackendServiceIamBinding struct {
	pulumi.CustomResourceState

	// An [IAM Condition](https://cloud.google.com/iam/docs/conditions-overview) for a given binding.
	// Structure is documented below.
	Condition WebRegionBackendServiceIamBindingConditionPtrOutput `pulumi:"condition"`
	// (Computed) The etag of the IAM policy.
	Etag    pulumi.StringOutput      `pulumi:"etag"`
	Members pulumi.StringArrayOutput `pulumi:"members"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	//
	// * `member/members` - (Required) Identities that will be granted the privilege in `role`.
	//   Each entry can have one of the following values:
	// * **allUsers**: A special identifier that represents anyone who is on the internet; with or without a Google account.
	// * **allAuthenticatedUsers**: A special identifier that represents anyone who is authenticated with a Google account or a service account.
	// * **user:{emailid}**: An email address that represents a specific Google account. For example, alice@gmail.com or joe@example.com.
	// * **serviceAccount:{emailid}**: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com.
	// * **group:{emailid}**: An email address that represents a Google group. For example, admins@example.com.
	// * **domain:{domain}**: A G Suite domain (primary, instead of alias) name that represents all the users of that domain. For example, google.com or example.com.
	// * **projectOwner:projectid**: Owners of the given project. For example, "projectOwner:my-example-project"
	// * **projectEditor:projectid**: Editors of the given project. For example, "projectEditor:my-example-project"
	// * **projectViewer:projectid**: Viewers of the given project. For example, "projectViewer:my-example-project"
	Project pulumi.StringOutput `pulumi:"project"`
	Region  pulumi.StringOutput `pulumi:"region"`
	// The role that should be applied. Only one
	// `iap.WebRegionBackendServiceIamBinding` can be used per role. Note that custom roles must be of the format
	// `[projects|organizations]/{parent-name}/roles/{role-name}`.
	Role pulumi.StringOutput `pulumi:"role"`
	// Used to find the parent resource to bind the IAM policy to
	WebRegionBackendService pulumi.StringOutput `pulumi:"webRegionBackendService"`
}

// NewWebRegionBackendServiceIamBinding registers a new resource with the given unique name, arguments, and options.
func NewWebRegionBackendServiceIamBinding(ctx *pulumi.Context,
	name string, args *WebRegionBackendServiceIamBindingArgs, opts ...pulumi.ResourceOption) (*WebRegionBackendServiceIamBinding, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Members == nil {
		return nil, errors.New("invalid value for required argument 'Members'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	if args.WebRegionBackendService == nil {
		return nil, errors.New("invalid value for required argument 'WebRegionBackendService'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WebRegionBackendServiceIamBinding
	err := ctx.RegisterResource("gcp:iap/webRegionBackendServiceIamBinding:WebRegionBackendServiceIamBinding", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWebRegionBackendServiceIamBinding gets an existing WebRegionBackendServiceIamBinding resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWebRegionBackendServiceIamBinding(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WebRegionBackendServiceIamBindingState, opts ...pulumi.ResourceOption) (*WebRegionBackendServiceIamBinding, error) {
	var resource WebRegionBackendServiceIamBinding
	err := ctx.ReadResource("gcp:iap/webRegionBackendServiceIamBinding:WebRegionBackendServiceIamBinding", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WebRegionBackendServiceIamBinding resources.
type webRegionBackendServiceIamBindingState struct {
	// An [IAM Condition](https://cloud.google.com/iam/docs/conditions-overview) for a given binding.
	// Structure is documented below.
	Condition *WebRegionBackendServiceIamBindingCondition `pulumi:"condition"`
	// (Computed) The etag of the IAM policy.
	Etag    *string  `pulumi:"etag"`
	Members []string `pulumi:"members"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	//
	// * `member/members` - (Required) Identities that will be granted the privilege in `role`.
	//   Each entry can have one of the following values:
	// * **allUsers**: A special identifier that represents anyone who is on the internet; with or without a Google account.
	// * **allAuthenticatedUsers**: A special identifier that represents anyone who is authenticated with a Google account or a service account.
	// * **user:{emailid}**: An email address that represents a specific Google account. For example, alice@gmail.com or joe@example.com.
	// * **serviceAccount:{emailid}**: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com.
	// * **group:{emailid}**: An email address that represents a Google group. For example, admins@example.com.
	// * **domain:{domain}**: A G Suite domain (primary, instead of alias) name that represents all the users of that domain. For example, google.com or example.com.
	// * **projectOwner:projectid**: Owners of the given project. For example, "projectOwner:my-example-project"
	// * **projectEditor:projectid**: Editors of the given project. For example, "projectEditor:my-example-project"
	// * **projectViewer:projectid**: Viewers of the given project. For example, "projectViewer:my-example-project"
	Project *string `pulumi:"project"`
	Region  *string `pulumi:"region"`
	// The role that should be applied. Only one
	// `iap.WebRegionBackendServiceIamBinding` can be used per role. Note that custom roles must be of the format
	// `[projects|organizations]/{parent-name}/roles/{role-name}`.
	Role *string `pulumi:"role"`
	// Used to find the parent resource to bind the IAM policy to
	WebRegionBackendService *string `pulumi:"webRegionBackendService"`
}

type WebRegionBackendServiceIamBindingState struct {
	// An [IAM Condition](https://cloud.google.com/iam/docs/conditions-overview) for a given binding.
	// Structure is documented below.
	Condition WebRegionBackendServiceIamBindingConditionPtrInput
	// (Computed) The etag of the IAM policy.
	Etag    pulumi.StringPtrInput
	Members pulumi.StringArrayInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	//
	// * `member/members` - (Required) Identities that will be granted the privilege in `role`.
	//   Each entry can have one of the following values:
	// * **allUsers**: A special identifier that represents anyone who is on the internet; with or without a Google account.
	// * **allAuthenticatedUsers**: A special identifier that represents anyone who is authenticated with a Google account or a service account.
	// * **user:{emailid}**: An email address that represents a specific Google account. For example, alice@gmail.com or joe@example.com.
	// * **serviceAccount:{emailid}**: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com.
	// * **group:{emailid}**: An email address that represents a Google group. For example, admins@example.com.
	// * **domain:{domain}**: A G Suite domain (primary, instead of alias) name that represents all the users of that domain. For example, google.com or example.com.
	// * **projectOwner:projectid**: Owners of the given project. For example, "projectOwner:my-example-project"
	// * **projectEditor:projectid**: Editors of the given project. For example, "projectEditor:my-example-project"
	// * **projectViewer:projectid**: Viewers of the given project. For example, "projectViewer:my-example-project"
	Project pulumi.StringPtrInput
	Region  pulumi.StringPtrInput
	// The role that should be applied. Only one
	// `iap.WebRegionBackendServiceIamBinding` can be used per role. Note that custom roles must be of the format
	// `[projects|organizations]/{parent-name}/roles/{role-name}`.
	Role pulumi.StringPtrInput
	// Used to find the parent resource to bind the IAM policy to
	WebRegionBackendService pulumi.StringPtrInput
}

func (WebRegionBackendServiceIamBindingState) ElementType() reflect.Type {
	return reflect.TypeOf((*webRegionBackendServiceIamBindingState)(nil)).Elem()
}

type webRegionBackendServiceIamBindingArgs struct {
	// An [IAM Condition](https://cloud.google.com/iam/docs/conditions-overview) for a given binding.
	// Structure is documented below.
	Condition *WebRegionBackendServiceIamBindingCondition `pulumi:"condition"`
	Members   []string                                    `pulumi:"members"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	//
	// * `member/members` - (Required) Identities that will be granted the privilege in `role`.
	//   Each entry can have one of the following values:
	// * **allUsers**: A special identifier that represents anyone who is on the internet; with or without a Google account.
	// * **allAuthenticatedUsers**: A special identifier that represents anyone who is authenticated with a Google account or a service account.
	// * **user:{emailid}**: An email address that represents a specific Google account. For example, alice@gmail.com or joe@example.com.
	// * **serviceAccount:{emailid}**: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com.
	// * **group:{emailid}**: An email address that represents a Google group. For example, admins@example.com.
	// * **domain:{domain}**: A G Suite domain (primary, instead of alias) name that represents all the users of that domain. For example, google.com or example.com.
	// * **projectOwner:projectid**: Owners of the given project. For example, "projectOwner:my-example-project"
	// * **projectEditor:projectid**: Editors of the given project. For example, "projectEditor:my-example-project"
	// * **projectViewer:projectid**: Viewers of the given project. For example, "projectViewer:my-example-project"
	Project *string `pulumi:"project"`
	Region  *string `pulumi:"region"`
	// The role that should be applied. Only one
	// `iap.WebRegionBackendServiceIamBinding` can be used per role. Note that custom roles must be of the format
	// `[projects|organizations]/{parent-name}/roles/{role-name}`.
	Role string `pulumi:"role"`
	// Used to find the parent resource to bind the IAM policy to
	WebRegionBackendService string `pulumi:"webRegionBackendService"`
}

// The set of arguments for constructing a WebRegionBackendServiceIamBinding resource.
type WebRegionBackendServiceIamBindingArgs struct {
	// An [IAM Condition](https://cloud.google.com/iam/docs/conditions-overview) for a given binding.
	// Structure is documented below.
	Condition WebRegionBackendServiceIamBindingConditionPtrInput
	Members   pulumi.StringArrayInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	//
	// * `member/members` - (Required) Identities that will be granted the privilege in `role`.
	//   Each entry can have one of the following values:
	// * **allUsers**: A special identifier that represents anyone who is on the internet; with or without a Google account.
	// * **allAuthenticatedUsers**: A special identifier that represents anyone who is authenticated with a Google account or a service account.
	// * **user:{emailid}**: An email address that represents a specific Google account. For example, alice@gmail.com or joe@example.com.
	// * **serviceAccount:{emailid}**: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com.
	// * **group:{emailid}**: An email address that represents a Google group. For example, admins@example.com.
	// * **domain:{domain}**: A G Suite domain (primary, instead of alias) name that represents all the users of that domain. For example, google.com or example.com.
	// * **projectOwner:projectid**: Owners of the given project. For example, "projectOwner:my-example-project"
	// * **projectEditor:projectid**: Editors of the given project. For example, "projectEditor:my-example-project"
	// * **projectViewer:projectid**: Viewers of the given project. For example, "projectViewer:my-example-project"
	Project pulumi.StringPtrInput
	Region  pulumi.StringPtrInput
	// The role that should be applied. Only one
	// `iap.WebRegionBackendServiceIamBinding` can be used per role. Note that custom roles must be of the format
	// `[projects|organizations]/{parent-name}/roles/{role-name}`.
	Role pulumi.StringInput
	// Used to find the parent resource to bind the IAM policy to
	WebRegionBackendService pulumi.StringInput
}

func (WebRegionBackendServiceIamBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*webRegionBackendServiceIamBindingArgs)(nil)).Elem()
}

type WebRegionBackendServiceIamBindingInput interface {
	pulumi.Input

	ToWebRegionBackendServiceIamBindingOutput() WebRegionBackendServiceIamBindingOutput
	ToWebRegionBackendServiceIamBindingOutputWithContext(ctx context.Context) WebRegionBackendServiceIamBindingOutput
}

func (*WebRegionBackendServiceIamBinding) ElementType() reflect.Type {
	return reflect.TypeOf((**WebRegionBackendServiceIamBinding)(nil)).Elem()
}

func (i *WebRegionBackendServiceIamBinding) ToWebRegionBackendServiceIamBindingOutput() WebRegionBackendServiceIamBindingOutput {
	return i.ToWebRegionBackendServiceIamBindingOutputWithContext(context.Background())
}

func (i *WebRegionBackendServiceIamBinding) ToWebRegionBackendServiceIamBindingOutputWithContext(ctx context.Context) WebRegionBackendServiceIamBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebRegionBackendServiceIamBindingOutput)
}

func (i *WebRegionBackendServiceIamBinding) ToOutput(ctx context.Context) pulumix.Output[*WebRegionBackendServiceIamBinding] {
	return pulumix.Output[*WebRegionBackendServiceIamBinding]{
		OutputState: i.ToWebRegionBackendServiceIamBindingOutputWithContext(ctx).OutputState,
	}
}

// WebRegionBackendServiceIamBindingArrayInput is an input type that accepts WebRegionBackendServiceIamBindingArray and WebRegionBackendServiceIamBindingArrayOutput values.
// You can construct a concrete instance of `WebRegionBackendServiceIamBindingArrayInput` via:
//
//	WebRegionBackendServiceIamBindingArray{ WebRegionBackendServiceIamBindingArgs{...} }
type WebRegionBackendServiceIamBindingArrayInput interface {
	pulumi.Input

	ToWebRegionBackendServiceIamBindingArrayOutput() WebRegionBackendServiceIamBindingArrayOutput
	ToWebRegionBackendServiceIamBindingArrayOutputWithContext(context.Context) WebRegionBackendServiceIamBindingArrayOutput
}

type WebRegionBackendServiceIamBindingArray []WebRegionBackendServiceIamBindingInput

func (WebRegionBackendServiceIamBindingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WebRegionBackendServiceIamBinding)(nil)).Elem()
}

func (i WebRegionBackendServiceIamBindingArray) ToWebRegionBackendServiceIamBindingArrayOutput() WebRegionBackendServiceIamBindingArrayOutput {
	return i.ToWebRegionBackendServiceIamBindingArrayOutputWithContext(context.Background())
}

func (i WebRegionBackendServiceIamBindingArray) ToWebRegionBackendServiceIamBindingArrayOutputWithContext(ctx context.Context) WebRegionBackendServiceIamBindingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebRegionBackendServiceIamBindingArrayOutput)
}

func (i WebRegionBackendServiceIamBindingArray) ToOutput(ctx context.Context) pulumix.Output[[]*WebRegionBackendServiceIamBinding] {
	return pulumix.Output[[]*WebRegionBackendServiceIamBinding]{
		OutputState: i.ToWebRegionBackendServiceIamBindingArrayOutputWithContext(ctx).OutputState,
	}
}

// WebRegionBackendServiceIamBindingMapInput is an input type that accepts WebRegionBackendServiceIamBindingMap and WebRegionBackendServiceIamBindingMapOutput values.
// You can construct a concrete instance of `WebRegionBackendServiceIamBindingMapInput` via:
//
//	WebRegionBackendServiceIamBindingMap{ "key": WebRegionBackendServiceIamBindingArgs{...} }
type WebRegionBackendServiceIamBindingMapInput interface {
	pulumi.Input

	ToWebRegionBackendServiceIamBindingMapOutput() WebRegionBackendServiceIamBindingMapOutput
	ToWebRegionBackendServiceIamBindingMapOutputWithContext(context.Context) WebRegionBackendServiceIamBindingMapOutput
}

type WebRegionBackendServiceIamBindingMap map[string]WebRegionBackendServiceIamBindingInput

func (WebRegionBackendServiceIamBindingMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WebRegionBackendServiceIamBinding)(nil)).Elem()
}

func (i WebRegionBackendServiceIamBindingMap) ToWebRegionBackendServiceIamBindingMapOutput() WebRegionBackendServiceIamBindingMapOutput {
	return i.ToWebRegionBackendServiceIamBindingMapOutputWithContext(context.Background())
}

func (i WebRegionBackendServiceIamBindingMap) ToWebRegionBackendServiceIamBindingMapOutputWithContext(ctx context.Context) WebRegionBackendServiceIamBindingMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebRegionBackendServiceIamBindingMapOutput)
}

func (i WebRegionBackendServiceIamBindingMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*WebRegionBackendServiceIamBinding] {
	return pulumix.Output[map[string]*WebRegionBackendServiceIamBinding]{
		OutputState: i.ToWebRegionBackendServiceIamBindingMapOutputWithContext(ctx).OutputState,
	}
}

type WebRegionBackendServiceIamBindingOutput struct{ *pulumi.OutputState }

func (WebRegionBackendServiceIamBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebRegionBackendServiceIamBinding)(nil)).Elem()
}

func (o WebRegionBackendServiceIamBindingOutput) ToWebRegionBackendServiceIamBindingOutput() WebRegionBackendServiceIamBindingOutput {
	return o
}

func (o WebRegionBackendServiceIamBindingOutput) ToWebRegionBackendServiceIamBindingOutputWithContext(ctx context.Context) WebRegionBackendServiceIamBindingOutput {
	return o
}

func (o WebRegionBackendServiceIamBindingOutput) ToOutput(ctx context.Context) pulumix.Output[*WebRegionBackendServiceIamBinding] {
	return pulumix.Output[*WebRegionBackendServiceIamBinding]{
		OutputState: o.OutputState,
	}
}

// An [IAM Condition](https://cloud.google.com/iam/docs/conditions-overview) for a given binding.
// Structure is documented below.
func (o WebRegionBackendServiceIamBindingOutput) Condition() WebRegionBackendServiceIamBindingConditionPtrOutput {
	return o.ApplyT(func(v *WebRegionBackendServiceIamBinding) WebRegionBackendServiceIamBindingConditionPtrOutput {
		return v.Condition
	}).(WebRegionBackendServiceIamBindingConditionPtrOutput)
}

// (Computed) The etag of the IAM policy.
func (o WebRegionBackendServiceIamBindingOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *WebRegionBackendServiceIamBinding) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o WebRegionBackendServiceIamBindingOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WebRegionBackendServiceIamBinding) pulumi.StringArrayOutput { return v.Members }).(pulumi.StringArrayOutput)
}

// The ID of the project in which the resource belongs.
// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
//
//   - `member/members` - (Required) Identities that will be granted the privilege in `role`.
//     Each entry can have one of the following values:
//   - **allUsers**: A special identifier that represents anyone who is on the internet; with or without a Google account.
//   - **allAuthenticatedUsers**: A special identifier that represents anyone who is authenticated with a Google account or a service account.
//   - **user:{emailid}**: An email address that represents a specific Google account. For example, alice@gmail.com or joe@example.com.
//   - **serviceAccount:{emailid}**: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com.
//   - **group:{emailid}**: An email address that represents a Google group. For example, admins@example.com.
//   - **domain:{domain}**: A G Suite domain (primary, instead of alias) name that represents all the users of that domain. For example, google.com or example.com.
//   - **projectOwner:projectid**: Owners of the given project. For example, "projectOwner:my-example-project"
//   - **projectEditor:projectid**: Editors of the given project. For example, "projectEditor:my-example-project"
//   - **projectViewer:projectid**: Viewers of the given project. For example, "projectViewer:my-example-project"
func (o WebRegionBackendServiceIamBindingOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *WebRegionBackendServiceIamBinding) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o WebRegionBackendServiceIamBindingOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *WebRegionBackendServiceIamBinding) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// The role that should be applied. Only one
// `iap.WebRegionBackendServiceIamBinding` can be used per role. Note that custom roles must be of the format
// `[projects|organizations]/{parent-name}/roles/{role-name}`.
func (o WebRegionBackendServiceIamBindingOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *WebRegionBackendServiceIamBinding) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

// Used to find the parent resource to bind the IAM policy to
func (o WebRegionBackendServiceIamBindingOutput) WebRegionBackendService() pulumi.StringOutput {
	return o.ApplyT(func(v *WebRegionBackendServiceIamBinding) pulumi.StringOutput { return v.WebRegionBackendService }).(pulumi.StringOutput)
}

type WebRegionBackendServiceIamBindingArrayOutput struct{ *pulumi.OutputState }

func (WebRegionBackendServiceIamBindingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WebRegionBackendServiceIamBinding)(nil)).Elem()
}

func (o WebRegionBackendServiceIamBindingArrayOutput) ToWebRegionBackendServiceIamBindingArrayOutput() WebRegionBackendServiceIamBindingArrayOutput {
	return o
}

func (o WebRegionBackendServiceIamBindingArrayOutput) ToWebRegionBackendServiceIamBindingArrayOutputWithContext(ctx context.Context) WebRegionBackendServiceIamBindingArrayOutput {
	return o
}

func (o WebRegionBackendServiceIamBindingArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*WebRegionBackendServiceIamBinding] {
	return pulumix.Output[[]*WebRegionBackendServiceIamBinding]{
		OutputState: o.OutputState,
	}
}

func (o WebRegionBackendServiceIamBindingArrayOutput) Index(i pulumi.IntInput) WebRegionBackendServiceIamBindingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WebRegionBackendServiceIamBinding {
		return vs[0].([]*WebRegionBackendServiceIamBinding)[vs[1].(int)]
	}).(WebRegionBackendServiceIamBindingOutput)
}

type WebRegionBackendServiceIamBindingMapOutput struct{ *pulumi.OutputState }

func (WebRegionBackendServiceIamBindingMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WebRegionBackendServiceIamBinding)(nil)).Elem()
}

func (o WebRegionBackendServiceIamBindingMapOutput) ToWebRegionBackendServiceIamBindingMapOutput() WebRegionBackendServiceIamBindingMapOutput {
	return o
}

func (o WebRegionBackendServiceIamBindingMapOutput) ToWebRegionBackendServiceIamBindingMapOutputWithContext(ctx context.Context) WebRegionBackendServiceIamBindingMapOutput {
	return o
}

func (o WebRegionBackendServiceIamBindingMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*WebRegionBackendServiceIamBinding] {
	return pulumix.Output[map[string]*WebRegionBackendServiceIamBinding]{
		OutputState: o.OutputState,
	}
}

func (o WebRegionBackendServiceIamBindingMapOutput) MapIndex(k pulumi.StringInput) WebRegionBackendServiceIamBindingOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WebRegionBackendServiceIamBinding {
		return vs[0].(map[string]*WebRegionBackendServiceIamBinding)[vs[1].(string)]
	}).(WebRegionBackendServiceIamBindingOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WebRegionBackendServiceIamBindingInput)(nil)).Elem(), &WebRegionBackendServiceIamBinding{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebRegionBackendServiceIamBindingArrayInput)(nil)).Elem(), WebRegionBackendServiceIamBindingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebRegionBackendServiceIamBindingMapInput)(nil)).Elem(), WebRegionBackendServiceIamBindingMap{})
	pulumi.RegisterOutputType(WebRegionBackendServiceIamBindingOutput{})
	pulumi.RegisterOutputType(WebRegionBackendServiceIamBindingArrayOutput{})
	pulumi.RegisterOutputType(WebRegionBackendServiceIamBindingMapOutput{})
}
