// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iap

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Three different resources help you manage your IAM policy for Identity-Aware Proxy WebRegionForwardingRuleService. Each of these resources serves a different use case:
//
// * `iap.WebRegionForwardingRuleServiceIamPolicy`: Authoritative. Sets the IAM policy for the webregionforwardingruleservice and replaces any existing policy already attached.
// * `iap.WebRegionForwardingRuleServiceIamBinding`: Authoritative for a given role. Updates the IAM policy to grant a role to a list of members. Other roles within the IAM policy for the webregionforwardingruleservice are preserved.
// * `iap.WebRegionForwardingRuleServiceIamMember`: Non-authoritative. Updates the IAM policy to grant a role to a new member. Other members for the role for the webregionforwardingruleservice are preserved.
//
// # A data source can be used to retrieve policy data in advent you do not need creation
//
// * `iap.WebRegionForwardingRuleServiceIamPolicy`: Retrieves the IAM policy for the webregionforwardingruleservice
//
// > **Note:** `iap.WebRegionForwardingRuleServiceIamPolicy` **cannot** be used in conjunction with `iap.WebRegionForwardingRuleServiceIamBinding` and `iap.WebRegionForwardingRuleServiceIamMember` or they will fight over what your policy should be.
//
// > **Note:** `iap.WebRegionForwardingRuleServiceIamBinding` resources **can be** used in conjunction with `iap.WebRegionForwardingRuleServiceIamMember` resources **only if** they do not grant privilege to the same role.
//
// > **Note:**  This resource supports IAM Conditions but they have some known limitations which can be found [here](https://cloud.google.com/iam/docs/conditions-overview#limitations). Please review this article if you are having issues with IAM Conditions.
//
// ## iap.WebRegionForwardingRuleServiceIamPolicy
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/iap"
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/organizations"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			admin, err := organizations.LookupIAMPolicy(ctx, &organizations.LookupIAMPolicyArgs{
//				Bindings: []organizations.GetIAMPolicyBinding{
//					{
//						Role: "roles/iap.httpsResourceAccessor",
//						Members: []string{
//							"user:jane@example.com",
//						},
//					},
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = iap.NewWebRegionForwardingRuleServiceIamPolicy(ctx, "policy", &iap.WebRegionForwardingRuleServiceIamPolicyArgs{
//				Project:                         pulumi.Any(_default.Project),
//				Region:                          pulumi.Any(_default.Region),
//				ForwardingRuleRegionServiceName: pulumi.Any(_default.Name),
//				PolicyData:                      pulumi.String(admin.PolicyData),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// With IAM Conditions:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/iap"
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/organizations"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			admin, err := organizations.LookupIAMPolicy(ctx, &organizations.LookupIAMPolicyArgs{
//				Bindings: []organizations.GetIAMPolicyBinding{
//					{
//						Role: "roles/iap.httpsResourceAccessor",
//						Members: []string{
//							"user:jane@example.com",
//						},
//						Condition: {
//							Title:       "expires_after_2019_12_31",
//							Description: pulumi.StringRef("Expiring at midnight of 2019-12-31"),
//							Expression:  "request.time < timestamp(\"2020-01-01T00:00:00Z\")",
//						},
//					},
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = iap.NewWebRegionForwardingRuleServiceIamPolicy(ctx, "policy", &iap.WebRegionForwardingRuleServiceIamPolicyArgs{
//				Project:                         pulumi.Any(_default.Project),
//				Region:                          pulumi.Any(_default.Region),
//				ForwardingRuleRegionServiceName: pulumi.Any(_default.Name),
//				PolicyData:                      pulumi.String(admin.PolicyData),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ## iap.WebRegionForwardingRuleServiceIamBinding
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/iap"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := iap.NewWebRegionForwardingRuleServiceIamBinding(ctx, "binding", &iap.WebRegionForwardingRuleServiceIamBindingArgs{
//				Project:                         pulumi.Any(_default.Project),
//				Region:                          pulumi.Any(_default.Region),
//				ForwardingRuleRegionServiceName: pulumi.Any(_default.Name),
//				Role:                            pulumi.String("roles/iap.httpsResourceAccessor"),
//				Members: pulumi.StringArray{
//					pulumi.String("user:jane@example.com"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// With IAM Conditions:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/iap"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := iap.NewWebRegionForwardingRuleServiceIamBinding(ctx, "binding", &iap.WebRegionForwardingRuleServiceIamBindingArgs{
//				Project:                         pulumi.Any(_default.Project),
//				Region:                          pulumi.Any(_default.Region),
//				ForwardingRuleRegionServiceName: pulumi.Any(_default.Name),
//				Role:                            pulumi.String("roles/iap.httpsResourceAccessor"),
//				Members: pulumi.StringArray{
//					pulumi.String("user:jane@example.com"),
//				},
//				Condition: &iap.WebRegionForwardingRuleServiceIamBindingConditionArgs{
//					Title:       pulumi.String("expires_after_2019_12_31"),
//					Description: pulumi.String("Expiring at midnight of 2019-12-31"),
//					Expression:  pulumi.String("request.time < timestamp(\"2020-01-01T00:00:00Z\")"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ## iap.WebRegionForwardingRuleServiceIamMember
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/iap"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := iap.NewWebRegionForwardingRuleServiceIamMember(ctx, "member", &iap.WebRegionForwardingRuleServiceIamMemberArgs{
//				Project:                         pulumi.Any(_default.Project),
//				Region:                          pulumi.Any(_default.Region),
//				ForwardingRuleRegionServiceName: pulumi.Any(_default.Name),
//				Role:                            pulumi.String("roles/iap.httpsResourceAccessor"),
//				Member:                          pulumi.String("user:jane@example.com"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// With IAM Conditions:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/iap"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := iap.NewWebRegionForwardingRuleServiceIamMember(ctx, "member", &iap.WebRegionForwardingRuleServiceIamMemberArgs{
//				Project:                         pulumi.Any(_default.Project),
//				Region:                          pulumi.Any(_default.Region),
//				ForwardingRuleRegionServiceName: pulumi.Any(_default.Name),
//				Role:                            pulumi.String("roles/iap.httpsResourceAccessor"),
//				Member:                          pulumi.String("user:jane@example.com"),
//				Condition: &iap.WebRegionForwardingRuleServiceIamMemberConditionArgs{
//					Title:       pulumi.String("expires_after_2019_12_31"),
//					Description: pulumi.String("Expiring at midnight of 2019-12-31"),
//					Expression:  pulumi.String("request.time < timestamp(\"2020-01-01T00:00:00Z\")"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## This resource supports User Project Overrides.
//
// -
//
// # IAM policy for Identity-Aware Proxy WebRegionForwardingRuleService
//
// Three different resources help you manage your IAM policy for Identity-Aware Proxy WebRegionForwardingRuleService. Each of these resources serves a different use case:
//
// * `iap.WebRegionForwardingRuleServiceIamPolicy`: Authoritative. Sets the IAM policy for the webregionforwardingruleservice and replaces any existing policy already attached.
// * `iap.WebRegionForwardingRuleServiceIamBinding`: Authoritative for a given role. Updates the IAM policy to grant a role to a list of members. Other roles within the IAM policy for the webregionforwardingruleservice are preserved.
// * `iap.WebRegionForwardingRuleServiceIamMember`: Non-authoritative. Updates the IAM policy to grant a role to a new member. Other members for the role for the webregionforwardingruleservice are preserved.
//
// # A data source can be used to retrieve policy data in advent you do not need creation
//
// * `iap.WebRegionForwardingRuleServiceIamPolicy`: Retrieves the IAM policy for the webregionforwardingruleservice
//
// > **Note:** `iap.WebRegionForwardingRuleServiceIamPolicy` **cannot** be used in conjunction with `iap.WebRegionForwardingRuleServiceIamBinding` and `iap.WebRegionForwardingRuleServiceIamMember` or they will fight over what your policy should be.
//
// > **Note:** `iap.WebRegionForwardingRuleServiceIamBinding` resources **can be** used in conjunction with `iap.WebRegionForwardingRuleServiceIamMember` resources **only if** they do not grant privilege to the same role.
//
// > **Note:**  This resource supports IAM Conditions but they have some known limitations which can be found [here](https://cloud.google.com/iam/docs/conditions-overview#limitations). Please review this article if you are having issues with IAM Conditions.
//
// ## iap.WebRegionForwardingRuleServiceIamPolicy
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/iap"
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/organizations"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			admin, err := organizations.LookupIAMPolicy(ctx, &organizations.LookupIAMPolicyArgs{
//				Bindings: []organizations.GetIAMPolicyBinding{
//					{
//						Role: "roles/iap.httpsResourceAccessor",
//						Members: []string{
//							"user:jane@example.com",
//						},
//					},
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = iap.NewWebRegionForwardingRuleServiceIamPolicy(ctx, "policy", &iap.WebRegionForwardingRuleServiceIamPolicyArgs{
//				Project:                         pulumi.Any(_default.Project),
//				Region:                          pulumi.Any(_default.Region),
//				ForwardingRuleRegionServiceName: pulumi.Any(_default.Name),
//				PolicyData:                      pulumi.String(admin.PolicyData),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// With IAM Conditions:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/iap"
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/organizations"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			admin, err := organizations.LookupIAMPolicy(ctx, &organizations.LookupIAMPolicyArgs{
//				Bindings: []organizations.GetIAMPolicyBinding{
//					{
//						Role: "roles/iap.httpsResourceAccessor",
//						Members: []string{
//							"user:jane@example.com",
//						},
//						Condition: {
//							Title:       "expires_after_2019_12_31",
//							Description: pulumi.StringRef("Expiring at midnight of 2019-12-31"),
//							Expression:  "request.time < timestamp(\"2020-01-01T00:00:00Z\")",
//						},
//					},
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = iap.NewWebRegionForwardingRuleServiceIamPolicy(ctx, "policy", &iap.WebRegionForwardingRuleServiceIamPolicyArgs{
//				Project:                         pulumi.Any(_default.Project),
//				Region:                          pulumi.Any(_default.Region),
//				ForwardingRuleRegionServiceName: pulumi.Any(_default.Name),
//				PolicyData:                      pulumi.String(admin.PolicyData),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ## iap.WebRegionForwardingRuleServiceIamBinding
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/iap"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := iap.NewWebRegionForwardingRuleServiceIamBinding(ctx, "binding", &iap.WebRegionForwardingRuleServiceIamBindingArgs{
//				Project:                         pulumi.Any(_default.Project),
//				Region:                          pulumi.Any(_default.Region),
//				ForwardingRuleRegionServiceName: pulumi.Any(_default.Name),
//				Role:                            pulumi.String("roles/iap.httpsResourceAccessor"),
//				Members: pulumi.StringArray{
//					pulumi.String("user:jane@example.com"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// With IAM Conditions:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/iap"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := iap.NewWebRegionForwardingRuleServiceIamBinding(ctx, "binding", &iap.WebRegionForwardingRuleServiceIamBindingArgs{
//				Project:                         pulumi.Any(_default.Project),
//				Region:                          pulumi.Any(_default.Region),
//				ForwardingRuleRegionServiceName: pulumi.Any(_default.Name),
//				Role:                            pulumi.String("roles/iap.httpsResourceAccessor"),
//				Members: pulumi.StringArray{
//					pulumi.String("user:jane@example.com"),
//				},
//				Condition: &iap.WebRegionForwardingRuleServiceIamBindingConditionArgs{
//					Title:       pulumi.String("expires_after_2019_12_31"),
//					Description: pulumi.String("Expiring at midnight of 2019-12-31"),
//					Expression:  pulumi.String("request.time < timestamp(\"2020-01-01T00:00:00Z\")"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ## iap.WebRegionForwardingRuleServiceIamMember
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/iap"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := iap.NewWebRegionForwardingRuleServiceIamMember(ctx, "member", &iap.WebRegionForwardingRuleServiceIamMemberArgs{
//				Project:                         pulumi.Any(_default.Project),
//				Region:                          pulumi.Any(_default.Region),
//				ForwardingRuleRegionServiceName: pulumi.Any(_default.Name),
//				Role:                            pulumi.String("roles/iap.httpsResourceAccessor"),
//				Member:                          pulumi.String("user:jane@example.com"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// With IAM Conditions:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/iap"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := iap.NewWebRegionForwardingRuleServiceIamMember(ctx, "member", &iap.WebRegionForwardingRuleServiceIamMemberArgs{
//				Project:                         pulumi.Any(_default.Project),
//				Region:                          pulumi.Any(_default.Region),
//				ForwardingRuleRegionServiceName: pulumi.Any(_default.Name),
//				Role:                            pulumi.String("roles/iap.httpsResourceAccessor"),
//				Member:                          pulumi.String("user:jane@example.com"),
//				Condition: &iap.WebRegionForwardingRuleServiceIamMemberConditionArgs{
//					Title:       pulumi.String("expires_after_2019_12_31"),
//					Description: pulumi.String("Expiring at midnight of 2019-12-31"),
//					Expression:  pulumi.String("request.time < timestamp(\"2020-01-01T00:00:00Z\")"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// For all import syntaxes, the "resource in question" can take any of the following forms:
//
// * projects/{{project}}/iap_web/forwarding_rule-{{region}}/services/{{name}}
//
// * {{project}}/{{region}}/{{name}}
//
// * {{region}}/{{name}}
//
// * {{name}}
//
// Any variables not passed in the import command will be taken from the provider configuration.
//
// Identity-Aware Proxy webregionforwardingruleservice IAM resources can be imported using the resource identifiers, role, and member.
//
// IAM member imports use space-delimited identifiers: the resource in question, the role, and the member identity, e.g.
//
// ```sh
// $ pulumi import gcp:iap/webRegionForwardingRuleServiceIamMember:WebRegionForwardingRuleServiceIamMember editor "projects/{{project}}/iap_web/forwarding_rule-{{region}}/services/{{web_region_forwarding_rule_service}} roles/iap.httpsResourceAccessor user:jane@example.com"
// ```
//
// IAM binding imports use space-delimited identifiers: the resource in question and the role, e.g.
//
// ```sh
// $ pulumi import gcp:iap/webRegionForwardingRuleServiceIamMember:WebRegionForwardingRuleServiceIamMember editor "projects/{{project}}/iap_web/forwarding_rule-{{region}}/services/{{web_region_forwarding_rule_service}} roles/iap.httpsResourceAccessor"
// ```
//
// IAM policy imports use the identifier of the resource in question, e.g.
//
// ```sh
// $ pulumi import gcp:iap/webRegionForwardingRuleServiceIamMember:WebRegionForwardingRuleServiceIamMember editor projects/{{project}}/iap_web/forwarding_rule-{{region}}/services/{{web_region_forwarding_rule_service}}
// ```
//
// -> **Custom Roles** If you're importing a IAM resource with a custom role, make sure to use the
//
//	full name of the custom role, e.g. `[projects/my-project|organizations/my-org]/roles/my-custom-role`.
type WebRegionForwardingRuleServiceIamMember struct {
	pulumi.CustomResourceState

	// An [IAM Condition](https://cloud.google.com/iam/docs/conditions-overview) for a given binding.
	// Structure is documented below.
	Condition WebRegionForwardingRuleServiceIamMemberConditionPtrOutput `pulumi:"condition"`
	// (Computed) The etag of the IAM policy.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// Used to find the parent resource to bind the IAM policy to
	ForwardingRuleRegionServiceName pulumi.StringOutput `pulumi:"forwardingRuleRegionServiceName"`
	// Identities that will be granted the privilege in `role`.
	// Each entry can have one of the following values:
	// * **allUsers**: A special identifier that represents anyone who is on the internet; with or without a Google account.
	// * **allAuthenticatedUsers**: A special identifier that represents anyone who is authenticated with a Google account or a service account.
	// * **user:{emailid}**: An email address that represents a specific Google account. For example, alice@gmail.com or joe@example.com.
	// * **serviceAccount:{emailid}**: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com.
	// * **group:{emailid}**: An email address that represents a Google group. For example, admins@example.com.
	// * **domain:{domain}**: A G Suite domain (primary, instead of alias) name that represents all the users of that domain. For example, google.com or example.com.
	// * **projectOwner:projectid**: Owners of the given project. For example, "projectOwner:my-example-project"
	// * **projectEditor:projectid**: Editors of the given project. For example, "projectEditor:my-example-project"
	// * **projectViewer:projectid**: Viewers of the given project. For example, "projectViewer:my-example-project"
	Member pulumi.StringOutput `pulumi:"member"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
	// Used to find the parent resource to bind the IAM policy to. If not specified,
	// the value will be parsed from the identifier of the parent resource. If no region is provided in the parent identifier and no
	// region is specified, it is taken from the provider configuration.
	Region pulumi.StringOutput `pulumi:"region"`
	// The role that should be applied. Only one
	// `iap.WebRegionForwardingRuleServiceIamBinding` can be used per role. Note that custom roles must be of the format
	// `[projects|organizations]/{parent-name}/roles/{role-name}`.
	Role pulumi.StringOutput `pulumi:"role"`
}

// NewWebRegionForwardingRuleServiceIamMember registers a new resource with the given unique name, arguments, and options.
func NewWebRegionForwardingRuleServiceIamMember(ctx *pulumi.Context,
	name string, args *WebRegionForwardingRuleServiceIamMemberArgs, opts ...pulumi.ResourceOption) (*WebRegionForwardingRuleServiceIamMember, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ForwardingRuleRegionServiceName == nil {
		return nil, errors.New("invalid value for required argument 'ForwardingRuleRegionServiceName'")
	}
	if args.Member == nil {
		return nil, errors.New("invalid value for required argument 'Member'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WebRegionForwardingRuleServiceIamMember
	err := ctx.RegisterResource("gcp:iap/webRegionForwardingRuleServiceIamMember:WebRegionForwardingRuleServiceIamMember", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWebRegionForwardingRuleServiceIamMember gets an existing WebRegionForwardingRuleServiceIamMember resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWebRegionForwardingRuleServiceIamMember(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WebRegionForwardingRuleServiceIamMemberState, opts ...pulumi.ResourceOption) (*WebRegionForwardingRuleServiceIamMember, error) {
	var resource WebRegionForwardingRuleServiceIamMember
	err := ctx.ReadResource("gcp:iap/webRegionForwardingRuleServiceIamMember:WebRegionForwardingRuleServiceIamMember", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WebRegionForwardingRuleServiceIamMember resources.
type webRegionForwardingRuleServiceIamMemberState struct {
	// An [IAM Condition](https://cloud.google.com/iam/docs/conditions-overview) for a given binding.
	// Structure is documented below.
	Condition *WebRegionForwardingRuleServiceIamMemberCondition `pulumi:"condition"`
	// (Computed) The etag of the IAM policy.
	Etag *string `pulumi:"etag"`
	// Used to find the parent resource to bind the IAM policy to
	ForwardingRuleRegionServiceName *string `pulumi:"forwardingRuleRegionServiceName"`
	// Identities that will be granted the privilege in `role`.
	// Each entry can have one of the following values:
	// * **allUsers**: A special identifier that represents anyone who is on the internet; with or without a Google account.
	// * **allAuthenticatedUsers**: A special identifier that represents anyone who is authenticated with a Google account or a service account.
	// * **user:{emailid}**: An email address that represents a specific Google account. For example, alice@gmail.com or joe@example.com.
	// * **serviceAccount:{emailid}**: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com.
	// * **group:{emailid}**: An email address that represents a Google group. For example, admins@example.com.
	// * **domain:{domain}**: A G Suite domain (primary, instead of alias) name that represents all the users of that domain. For example, google.com or example.com.
	// * **projectOwner:projectid**: Owners of the given project. For example, "projectOwner:my-example-project"
	// * **projectEditor:projectid**: Editors of the given project. For example, "projectEditor:my-example-project"
	// * **projectViewer:projectid**: Viewers of the given project. For example, "projectViewer:my-example-project"
	Member *string `pulumi:"member"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project *string `pulumi:"project"`
	// Used to find the parent resource to bind the IAM policy to. If not specified,
	// the value will be parsed from the identifier of the parent resource. If no region is provided in the parent identifier and no
	// region is specified, it is taken from the provider configuration.
	Region *string `pulumi:"region"`
	// The role that should be applied. Only one
	// `iap.WebRegionForwardingRuleServiceIamBinding` can be used per role. Note that custom roles must be of the format
	// `[projects|organizations]/{parent-name}/roles/{role-name}`.
	Role *string `pulumi:"role"`
}

type WebRegionForwardingRuleServiceIamMemberState struct {
	// An [IAM Condition](https://cloud.google.com/iam/docs/conditions-overview) for a given binding.
	// Structure is documented below.
	Condition WebRegionForwardingRuleServiceIamMemberConditionPtrInput
	// (Computed) The etag of the IAM policy.
	Etag pulumi.StringPtrInput
	// Used to find the parent resource to bind the IAM policy to
	ForwardingRuleRegionServiceName pulumi.StringPtrInput
	// Identities that will be granted the privilege in `role`.
	// Each entry can have one of the following values:
	// * **allUsers**: A special identifier that represents anyone who is on the internet; with or without a Google account.
	// * **allAuthenticatedUsers**: A special identifier that represents anyone who is authenticated with a Google account or a service account.
	// * **user:{emailid}**: An email address that represents a specific Google account. For example, alice@gmail.com or joe@example.com.
	// * **serviceAccount:{emailid}**: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com.
	// * **group:{emailid}**: An email address that represents a Google group. For example, admins@example.com.
	// * **domain:{domain}**: A G Suite domain (primary, instead of alias) name that represents all the users of that domain. For example, google.com or example.com.
	// * **projectOwner:projectid**: Owners of the given project. For example, "projectOwner:my-example-project"
	// * **projectEditor:projectid**: Editors of the given project. For example, "projectEditor:my-example-project"
	// * **projectViewer:projectid**: Viewers of the given project. For example, "projectViewer:my-example-project"
	Member pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringPtrInput
	// Used to find the parent resource to bind the IAM policy to. If not specified,
	// the value will be parsed from the identifier of the parent resource. If no region is provided in the parent identifier and no
	// region is specified, it is taken from the provider configuration.
	Region pulumi.StringPtrInput
	// The role that should be applied. Only one
	// `iap.WebRegionForwardingRuleServiceIamBinding` can be used per role. Note that custom roles must be of the format
	// `[projects|organizations]/{parent-name}/roles/{role-name}`.
	Role pulumi.StringPtrInput
}

func (WebRegionForwardingRuleServiceIamMemberState) ElementType() reflect.Type {
	return reflect.TypeOf((*webRegionForwardingRuleServiceIamMemberState)(nil)).Elem()
}

type webRegionForwardingRuleServiceIamMemberArgs struct {
	// An [IAM Condition](https://cloud.google.com/iam/docs/conditions-overview) for a given binding.
	// Structure is documented below.
	Condition *WebRegionForwardingRuleServiceIamMemberCondition `pulumi:"condition"`
	// Used to find the parent resource to bind the IAM policy to
	ForwardingRuleRegionServiceName string `pulumi:"forwardingRuleRegionServiceName"`
	// Identities that will be granted the privilege in `role`.
	// Each entry can have one of the following values:
	// * **allUsers**: A special identifier that represents anyone who is on the internet; with or without a Google account.
	// * **allAuthenticatedUsers**: A special identifier that represents anyone who is authenticated with a Google account or a service account.
	// * **user:{emailid}**: An email address that represents a specific Google account. For example, alice@gmail.com or joe@example.com.
	// * **serviceAccount:{emailid}**: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com.
	// * **group:{emailid}**: An email address that represents a Google group. For example, admins@example.com.
	// * **domain:{domain}**: A G Suite domain (primary, instead of alias) name that represents all the users of that domain. For example, google.com or example.com.
	// * **projectOwner:projectid**: Owners of the given project. For example, "projectOwner:my-example-project"
	// * **projectEditor:projectid**: Editors of the given project. For example, "projectEditor:my-example-project"
	// * **projectViewer:projectid**: Viewers of the given project. For example, "projectViewer:my-example-project"
	Member string `pulumi:"member"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project *string `pulumi:"project"`
	// Used to find the parent resource to bind the IAM policy to. If not specified,
	// the value will be parsed from the identifier of the parent resource. If no region is provided in the parent identifier and no
	// region is specified, it is taken from the provider configuration.
	Region *string `pulumi:"region"`
	// The role that should be applied. Only one
	// `iap.WebRegionForwardingRuleServiceIamBinding` can be used per role. Note that custom roles must be of the format
	// `[projects|organizations]/{parent-name}/roles/{role-name}`.
	Role string `pulumi:"role"`
}

// The set of arguments for constructing a WebRegionForwardingRuleServiceIamMember resource.
type WebRegionForwardingRuleServiceIamMemberArgs struct {
	// An [IAM Condition](https://cloud.google.com/iam/docs/conditions-overview) for a given binding.
	// Structure is documented below.
	Condition WebRegionForwardingRuleServiceIamMemberConditionPtrInput
	// Used to find the parent resource to bind the IAM policy to
	ForwardingRuleRegionServiceName pulumi.StringInput
	// Identities that will be granted the privilege in `role`.
	// Each entry can have one of the following values:
	// * **allUsers**: A special identifier that represents anyone who is on the internet; with or without a Google account.
	// * **allAuthenticatedUsers**: A special identifier that represents anyone who is authenticated with a Google account or a service account.
	// * **user:{emailid}**: An email address that represents a specific Google account. For example, alice@gmail.com or joe@example.com.
	// * **serviceAccount:{emailid}**: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com.
	// * **group:{emailid}**: An email address that represents a Google group. For example, admins@example.com.
	// * **domain:{domain}**: A G Suite domain (primary, instead of alias) name that represents all the users of that domain. For example, google.com or example.com.
	// * **projectOwner:projectid**: Owners of the given project. For example, "projectOwner:my-example-project"
	// * **projectEditor:projectid**: Editors of the given project. For example, "projectEditor:my-example-project"
	// * **projectViewer:projectid**: Viewers of the given project. For example, "projectViewer:my-example-project"
	Member pulumi.StringInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringPtrInput
	// Used to find the parent resource to bind the IAM policy to. If not specified,
	// the value will be parsed from the identifier of the parent resource. If no region is provided in the parent identifier and no
	// region is specified, it is taken from the provider configuration.
	Region pulumi.StringPtrInput
	// The role that should be applied. Only one
	// `iap.WebRegionForwardingRuleServiceIamBinding` can be used per role. Note that custom roles must be of the format
	// `[projects|organizations]/{parent-name}/roles/{role-name}`.
	Role pulumi.StringInput
}

func (WebRegionForwardingRuleServiceIamMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*webRegionForwardingRuleServiceIamMemberArgs)(nil)).Elem()
}

type WebRegionForwardingRuleServiceIamMemberInput interface {
	pulumi.Input

	ToWebRegionForwardingRuleServiceIamMemberOutput() WebRegionForwardingRuleServiceIamMemberOutput
	ToWebRegionForwardingRuleServiceIamMemberOutputWithContext(ctx context.Context) WebRegionForwardingRuleServiceIamMemberOutput
}

func (*WebRegionForwardingRuleServiceIamMember) ElementType() reflect.Type {
	return reflect.TypeOf((**WebRegionForwardingRuleServiceIamMember)(nil)).Elem()
}

func (i *WebRegionForwardingRuleServiceIamMember) ToWebRegionForwardingRuleServiceIamMemberOutput() WebRegionForwardingRuleServiceIamMemberOutput {
	return i.ToWebRegionForwardingRuleServiceIamMemberOutputWithContext(context.Background())
}

func (i *WebRegionForwardingRuleServiceIamMember) ToWebRegionForwardingRuleServiceIamMemberOutputWithContext(ctx context.Context) WebRegionForwardingRuleServiceIamMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebRegionForwardingRuleServiceIamMemberOutput)
}

// WebRegionForwardingRuleServiceIamMemberArrayInput is an input type that accepts WebRegionForwardingRuleServiceIamMemberArray and WebRegionForwardingRuleServiceIamMemberArrayOutput values.
// You can construct a concrete instance of `WebRegionForwardingRuleServiceIamMemberArrayInput` via:
//
//	WebRegionForwardingRuleServiceIamMemberArray{ WebRegionForwardingRuleServiceIamMemberArgs{...} }
type WebRegionForwardingRuleServiceIamMemberArrayInput interface {
	pulumi.Input

	ToWebRegionForwardingRuleServiceIamMemberArrayOutput() WebRegionForwardingRuleServiceIamMemberArrayOutput
	ToWebRegionForwardingRuleServiceIamMemberArrayOutputWithContext(context.Context) WebRegionForwardingRuleServiceIamMemberArrayOutput
}

type WebRegionForwardingRuleServiceIamMemberArray []WebRegionForwardingRuleServiceIamMemberInput

func (WebRegionForwardingRuleServiceIamMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WebRegionForwardingRuleServiceIamMember)(nil)).Elem()
}

func (i WebRegionForwardingRuleServiceIamMemberArray) ToWebRegionForwardingRuleServiceIamMemberArrayOutput() WebRegionForwardingRuleServiceIamMemberArrayOutput {
	return i.ToWebRegionForwardingRuleServiceIamMemberArrayOutputWithContext(context.Background())
}

func (i WebRegionForwardingRuleServiceIamMemberArray) ToWebRegionForwardingRuleServiceIamMemberArrayOutputWithContext(ctx context.Context) WebRegionForwardingRuleServiceIamMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebRegionForwardingRuleServiceIamMemberArrayOutput)
}

// WebRegionForwardingRuleServiceIamMemberMapInput is an input type that accepts WebRegionForwardingRuleServiceIamMemberMap and WebRegionForwardingRuleServiceIamMemberMapOutput values.
// You can construct a concrete instance of `WebRegionForwardingRuleServiceIamMemberMapInput` via:
//
//	WebRegionForwardingRuleServiceIamMemberMap{ "key": WebRegionForwardingRuleServiceIamMemberArgs{...} }
type WebRegionForwardingRuleServiceIamMemberMapInput interface {
	pulumi.Input

	ToWebRegionForwardingRuleServiceIamMemberMapOutput() WebRegionForwardingRuleServiceIamMemberMapOutput
	ToWebRegionForwardingRuleServiceIamMemberMapOutputWithContext(context.Context) WebRegionForwardingRuleServiceIamMemberMapOutput
}

type WebRegionForwardingRuleServiceIamMemberMap map[string]WebRegionForwardingRuleServiceIamMemberInput

func (WebRegionForwardingRuleServiceIamMemberMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WebRegionForwardingRuleServiceIamMember)(nil)).Elem()
}

func (i WebRegionForwardingRuleServiceIamMemberMap) ToWebRegionForwardingRuleServiceIamMemberMapOutput() WebRegionForwardingRuleServiceIamMemberMapOutput {
	return i.ToWebRegionForwardingRuleServiceIamMemberMapOutputWithContext(context.Background())
}

func (i WebRegionForwardingRuleServiceIamMemberMap) ToWebRegionForwardingRuleServiceIamMemberMapOutputWithContext(ctx context.Context) WebRegionForwardingRuleServiceIamMemberMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebRegionForwardingRuleServiceIamMemberMapOutput)
}

type WebRegionForwardingRuleServiceIamMemberOutput struct{ *pulumi.OutputState }

func (WebRegionForwardingRuleServiceIamMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebRegionForwardingRuleServiceIamMember)(nil)).Elem()
}

func (o WebRegionForwardingRuleServiceIamMemberOutput) ToWebRegionForwardingRuleServiceIamMemberOutput() WebRegionForwardingRuleServiceIamMemberOutput {
	return o
}

func (o WebRegionForwardingRuleServiceIamMemberOutput) ToWebRegionForwardingRuleServiceIamMemberOutputWithContext(ctx context.Context) WebRegionForwardingRuleServiceIamMemberOutput {
	return o
}

// An [IAM Condition](https://cloud.google.com/iam/docs/conditions-overview) for a given binding.
// Structure is documented below.
func (o WebRegionForwardingRuleServiceIamMemberOutput) Condition() WebRegionForwardingRuleServiceIamMemberConditionPtrOutput {
	return o.ApplyT(func(v *WebRegionForwardingRuleServiceIamMember) WebRegionForwardingRuleServiceIamMemberConditionPtrOutput {
		return v.Condition
	}).(WebRegionForwardingRuleServiceIamMemberConditionPtrOutput)
}

// (Computed) The etag of the IAM policy.
func (o WebRegionForwardingRuleServiceIamMemberOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *WebRegionForwardingRuleServiceIamMember) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// Used to find the parent resource to bind the IAM policy to
func (o WebRegionForwardingRuleServiceIamMemberOutput) ForwardingRuleRegionServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v *WebRegionForwardingRuleServiceIamMember) pulumi.StringOutput {
		return v.ForwardingRuleRegionServiceName
	}).(pulumi.StringOutput)
}

// Identities that will be granted the privilege in `role`.
// Each entry can have one of the following values:
// * **allUsers**: A special identifier that represents anyone who is on the internet; with or without a Google account.
// * **allAuthenticatedUsers**: A special identifier that represents anyone who is authenticated with a Google account or a service account.
// * **user:{emailid}**: An email address that represents a specific Google account. For example, alice@gmail.com or joe@example.com.
// * **serviceAccount:{emailid}**: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com.
// * **group:{emailid}**: An email address that represents a Google group. For example, admins@example.com.
// * **domain:{domain}**: A G Suite domain (primary, instead of alias) name that represents all the users of that domain. For example, google.com or example.com.
// * **projectOwner:projectid**: Owners of the given project. For example, "projectOwner:my-example-project"
// * **projectEditor:projectid**: Editors of the given project. For example, "projectEditor:my-example-project"
// * **projectViewer:projectid**: Viewers of the given project. For example, "projectViewer:my-example-project"
func (o WebRegionForwardingRuleServiceIamMemberOutput) Member() pulumi.StringOutput {
	return o.ApplyT(func(v *WebRegionForwardingRuleServiceIamMember) pulumi.StringOutput { return v.Member }).(pulumi.StringOutput)
}

// The ID of the project in which the resource belongs.
// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
func (o WebRegionForwardingRuleServiceIamMemberOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *WebRegionForwardingRuleServiceIamMember) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Used to find the parent resource to bind the IAM policy to. If not specified,
// the value will be parsed from the identifier of the parent resource. If no region is provided in the parent identifier and no
// region is specified, it is taken from the provider configuration.
func (o WebRegionForwardingRuleServiceIamMemberOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *WebRegionForwardingRuleServiceIamMember) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// The role that should be applied. Only one
// `iap.WebRegionForwardingRuleServiceIamBinding` can be used per role. Note that custom roles must be of the format
// `[projects|organizations]/{parent-name}/roles/{role-name}`.
func (o WebRegionForwardingRuleServiceIamMemberOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *WebRegionForwardingRuleServiceIamMember) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

type WebRegionForwardingRuleServiceIamMemberArrayOutput struct{ *pulumi.OutputState }

func (WebRegionForwardingRuleServiceIamMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WebRegionForwardingRuleServiceIamMember)(nil)).Elem()
}

func (o WebRegionForwardingRuleServiceIamMemberArrayOutput) ToWebRegionForwardingRuleServiceIamMemberArrayOutput() WebRegionForwardingRuleServiceIamMemberArrayOutput {
	return o
}

func (o WebRegionForwardingRuleServiceIamMemberArrayOutput) ToWebRegionForwardingRuleServiceIamMemberArrayOutputWithContext(ctx context.Context) WebRegionForwardingRuleServiceIamMemberArrayOutput {
	return o
}

func (o WebRegionForwardingRuleServiceIamMemberArrayOutput) Index(i pulumi.IntInput) WebRegionForwardingRuleServiceIamMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WebRegionForwardingRuleServiceIamMember {
		return vs[0].([]*WebRegionForwardingRuleServiceIamMember)[vs[1].(int)]
	}).(WebRegionForwardingRuleServiceIamMemberOutput)
}

type WebRegionForwardingRuleServiceIamMemberMapOutput struct{ *pulumi.OutputState }

func (WebRegionForwardingRuleServiceIamMemberMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WebRegionForwardingRuleServiceIamMember)(nil)).Elem()
}

func (o WebRegionForwardingRuleServiceIamMemberMapOutput) ToWebRegionForwardingRuleServiceIamMemberMapOutput() WebRegionForwardingRuleServiceIamMemberMapOutput {
	return o
}

func (o WebRegionForwardingRuleServiceIamMemberMapOutput) ToWebRegionForwardingRuleServiceIamMemberMapOutputWithContext(ctx context.Context) WebRegionForwardingRuleServiceIamMemberMapOutput {
	return o
}

func (o WebRegionForwardingRuleServiceIamMemberMapOutput) MapIndex(k pulumi.StringInput) WebRegionForwardingRuleServiceIamMemberOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WebRegionForwardingRuleServiceIamMember {
		return vs[0].(map[string]*WebRegionForwardingRuleServiceIamMember)[vs[1].(string)]
	}).(WebRegionForwardingRuleServiceIamMemberOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WebRegionForwardingRuleServiceIamMemberInput)(nil)).Elem(), &WebRegionForwardingRuleServiceIamMember{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebRegionForwardingRuleServiceIamMemberArrayInput)(nil)).Elem(), WebRegionForwardingRuleServiceIamMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebRegionForwardingRuleServiceIamMemberMapInput)(nil)).Elem(), WebRegionForwardingRuleServiceIamMemberMap{})
	pulumi.RegisterOutputType(WebRegionForwardingRuleServiceIamMemberOutput{})
	pulumi.RegisterOutputType(WebRegionForwardingRuleServiceIamMemberArrayOutput{})
	pulumi.RegisterOutputType(WebRegionForwardingRuleServiceIamMemberMapOutput{})
}
