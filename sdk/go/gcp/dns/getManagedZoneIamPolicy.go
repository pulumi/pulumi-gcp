// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dns

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves the current IAM policy data for managedzone
//
// ## example
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/dns"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := dns.GetManagedZoneIamPolicy(ctx, &dns.GetManagedZoneIamPolicyArgs{
//				Project:     pulumi.StringRef(google_dns_managed_zone.Default.Project),
//				ManagedZone: google_dns_managed_zone.Default.Name,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetManagedZoneIamPolicy(ctx *pulumi.Context, args *GetManagedZoneIamPolicyArgs, opts ...pulumi.InvokeOption) (*GetManagedZoneIamPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetManagedZoneIamPolicyResult
	err := ctx.Invoke("gcp:dns/getManagedZoneIamPolicy:getManagedZoneIamPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getManagedZoneIamPolicy.
type GetManagedZoneIamPolicyArgs struct {
	// Used to find the parent resource to bind the IAM policy to
	ManagedZone string `pulumi:"managedZone"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project *string `pulumi:"project"`
}

// A collection of values returned by getManagedZoneIamPolicy.
type GetManagedZoneIamPolicyResult struct {
	// (Computed) The etag of the IAM policy.
	Etag string `pulumi:"etag"`
	// The provider-assigned unique ID for this managed resource.
	Id          string `pulumi:"id"`
	ManagedZone string `pulumi:"managedZone"`
	// (Required only by `dns.DnsManagedZoneIamPolicy`) The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData string `pulumi:"policyData"`
	Project    string `pulumi:"project"`
}

func GetManagedZoneIamPolicyOutput(ctx *pulumi.Context, args GetManagedZoneIamPolicyOutputArgs, opts ...pulumi.InvokeOption) GetManagedZoneIamPolicyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetManagedZoneIamPolicyResult, error) {
			args := v.(GetManagedZoneIamPolicyArgs)
			r, err := GetManagedZoneIamPolicy(ctx, &args, opts...)
			var s GetManagedZoneIamPolicyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetManagedZoneIamPolicyResultOutput)
}

// A collection of arguments for invoking getManagedZoneIamPolicy.
type GetManagedZoneIamPolicyOutputArgs struct {
	// Used to find the parent resource to bind the IAM policy to
	ManagedZone pulumi.StringInput `pulumi:"managedZone"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringPtrInput `pulumi:"project"`
}

func (GetManagedZoneIamPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedZoneIamPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getManagedZoneIamPolicy.
type GetManagedZoneIamPolicyResultOutput struct{ *pulumi.OutputState }

func (GetManagedZoneIamPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedZoneIamPolicyResult)(nil)).Elem()
}

func (o GetManagedZoneIamPolicyResultOutput) ToGetManagedZoneIamPolicyResultOutput() GetManagedZoneIamPolicyResultOutput {
	return o
}

func (o GetManagedZoneIamPolicyResultOutput) ToGetManagedZoneIamPolicyResultOutputWithContext(ctx context.Context) GetManagedZoneIamPolicyResultOutput {
	return o
}

// (Computed) The etag of the IAM policy.
func (o GetManagedZoneIamPolicyResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedZoneIamPolicyResult) string { return v.Etag }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetManagedZoneIamPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedZoneIamPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetManagedZoneIamPolicyResultOutput) ManagedZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedZoneIamPolicyResult) string { return v.ManagedZone }).(pulumi.StringOutput)
}

// (Required only by `dns.DnsManagedZoneIamPolicy`) The policy data generated by
// a `organizations.getIAMPolicy` data source.
func (o GetManagedZoneIamPolicyResultOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedZoneIamPolicyResult) string { return v.PolicyData }).(pulumi.StringOutput)
}

func (o GetManagedZoneIamPolicyResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedZoneIamPolicyResult) string { return v.Project }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetManagedZoneIamPolicyResultOutput{})
}
