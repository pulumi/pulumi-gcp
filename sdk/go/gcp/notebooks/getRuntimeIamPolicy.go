// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package notebooks

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Retrieves the current IAM policy data for runtime
func LookupRuntimeIamPolicy(ctx *pulumi.Context, args *LookupRuntimeIamPolicyArgs, opts ...pulumi.InvokeOption) (*LookupRuntimeIamPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupRuntimeIamPolicyResult
	err := ctx.Invoke("gcp:notebooks/getRuntimeIamPolicy:getRuntimeIamPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRuntimeIamPolicy.
type LookupRuntimeIamPolicyArgs struct {
	// A reference to the zone where the machine resides. Used to find the parent resource to bind the IAM policy to
	Location *string `pulumi:"location"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project *string `pulumi:"project"`
	// Used to find the parent resource to bind the IAM policy to
	RuntimeName string `pulumi:"runtimeName"`
}

// A collection of values returned by getRuntimeIamPolicy.
type LookupRuntimeIamPolicyResult struct {
	// (Computed) The etag of the IAM policy.
	Etag string `pulumi:"etag"`
	// The provider-assigned unique ID for this managed resource.
	Id       string `pulumi:"id"`
	Location string `pulumi:"location"`
	// (Required only by `notebooks.RuntimeIamPolicy`) The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData  string `pulumi:"policyData"`
	Project     string `pulumi:"project"`
	RuntimeName string `pulumi:"runtimeName"`
}

func LookupRuntimeIamPolicyOutput(ctx *pulumi.Context, args LookupRuntimeIamPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupRuntimeIamPolicyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupRuntimeIamPolicyResult, error) {
			args := v.(LookupRuntimeIamPolicyArgs)
			r, err := LookupRuntimeIamPolicy(ctx, &args, opts...)
			var s LookupRuntimeIamPolicyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupRuntimeIamPolicyResultOutput)
}

// A collection of arguments for invoking getRuntimeIamPolicy.
type LookupRuntimeIamPolicyOutputArgs struct {
	// A reference to the zone where the machine resides. Used to find the parent resource to bind the IAM policy to
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringPtrInput `pulumi:"project"`
	// Used to find the parent resource to bind the IAM policy to
	RuntimeName pulumi.StringInput `pulumi:"runtimeName"`
}

func (LookupRuntimeIamPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRuntimeIamPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getRuntimeIamPolicy.
type LookupRuntimeIamPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupRuntimeIamPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRuntimeIamPolicyResult)(nil)).Elem()
}

func (o LookupRuntimeIamPolicyResultOutput) ToLookupRuntimeIamPolicyResultOutput() LookupRuntimeIamPolicyResultOutput {
	return o
}

func (o LookupRuntimeIamPolicyResultOutput) ToLookupRuntimeIamPolicyResultOutputWithContext(ctx context.Context) LookupRuntimeIamPolicyResultOutput {
	return o
}

func (o LookupRuntimeIamPolicyResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupRuntimeIamPolicyResult] {
	return pulumix.Output[LookupRuntimeIamPolicyResult]{
		OutputState: o.OutputState,
	}
}

// (Computed) The etag of the IAM policy.
func (o LookupRuntimeIamPolicyResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRuntimeIamPolicyResult) string { return v.Etag }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupRuntimeIamPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRuntimeIamPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupRuntimeIamPolicyResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRuntimeIamPolicyResult) string { return v.Location }).(pulumi.StringOutput)
}

// (Required only by `notebooks.RuntimeIamPolicy`) The policy data generated by
// a `organizations.getIAMPolicy` data source.
func (o LookupRuntimeIamPolicyResultOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRuntimeIamPolicyResult) string { return v.PolicyData }).(pulumi.StringOutput)
}

func (o LookupRuntimeIamPolicyResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRuntimeIamPolicyResult) string { return v.Project }).(pulumi.StringOutput)
}

func (o LookupRuntimeIamPolicyResultOutput) RuntimeName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRuntimeIamPolicyResult) string { return v.RuntimeName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRuntimeIamPolicyResultOutput{})
}
