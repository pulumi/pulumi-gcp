// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package notebooks

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type EnvironmentContainerImage struct {
	// The path to the container image repository.
	// For example: gcr.io/{project_id}/{imageName}
	Repository string `pulumi:"repository"`
	// The tag of the container image. If not specified, this defaults to the latest tag.
	Tag *string `pulumi:"tag"`
}

// EnvironmentContainerImageInput is an input type that accepts EnvironmentContainerImageArgs and EnvironmentContainerImageOutput values.
// You can construct a concrete instance of `EnvironmentContainerImageInput` via:
//
//          EnvironmentContainerImageArgs{...}
type EnvironmentContainerImageInput interface {
	pulumi.Input

	ToEnvironmentContainerImageOutput() EnvironmentContainerImageOutput
	ToEnvironmentContainerImageOutputWithContext(context.Context) EnvironmentContainerImageOutput
}

type EnvironmentContainerImageArgs struct {
	// The path to the container image repository.
	// For example: gcr.io/{project_id}/{imageName}
	Repository pulumi.StringInput `pulumi:"repository"`
	// The tag of the container image. If not specified, this defaults to the latest tag.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
}

func (EnvironmentContainerImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentContainerImage)(nil)).Elem()
}

func (i EnvironmentContainerImageArgs) ToEnvironmentContainerImageOutput() EnvironmentContainerImageOutput {
	return i.ToEnvironmentContainerImageOutputWithContext(context.Background())
}

func (i EnvironmentContainerImageArgs) ToEnvironmentContainerImageOutputWithContext(ctx context.Context) EnvironmentContainerImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentContainerImageOutput)
}

func (i EnvironmentContainerImageArgs) ToEnvironmentContainerImagePtrOutput() EnvironmentContainerImagePtrOutput {
	return i.ToEnvironmentContainerImagePtrOutputWithContext(context.Background())
}

func (i EnvironmentContainerImageArgs) ToEnvironmentContainerImagePtrOutputWithContext(ctx context.Context) EnvironmentContainerImagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentContainerImageOutput).ToEnvironmentContainerImagePtrOutputWithContext(ctx)
}

// EnvironmentContainerImagePtrInput is an input type that accepts EnvironmentContainerImageArgs, EnvironmentContainerImagePtr and EnvironmentContainerImagePtrOutput values.
// You can construct a concrete instance of `EnvironmentContainerImagePtrInput` via:
//
//          EnvironmentContainerImageArgs{...}
//
//  or:
//
//          nil
type EnvironmentContainerImagePtrInput interface {
	pulumi.Input

	ToEnvironmentContainerImagePtrOutput() EnvironmentContainerImagePtrOutput
	ToEnvironmentContainerImagePtrOutputWithContext(context.Context) EnvironmentContainerImagePtrOutput
}

type environmentContainerImagePtrType EnvironmentContainerImageArgs

func EnvironmentContainerImagePtr(v *EnvironmentContainerImageArgs) EnvironmentContainerImagePtrInput {
	return (*environmentContainerImagePtrType)(v)
}

func (*environmentContainerImagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentContainerImage)(nil)).Elem()
}

func (i *environmentContainerImagePtrType) ToEnvironmentContainerImagePtrOutput() EnvironmentContainerImagePtrOutput {
	return i.ToEnvironmentContainerImagePtrOutputWithContext(context.Background())
}

func (i *environmentContainerImagePtrType) ToEnvironmentContainerImagePtrOutputWithContext(ctx context.Context) EnvironmentContainerImagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentContainerImagePtrOutput)
}

type EnvironmentContainerImageOutput struct{ *pulumi.OutputState }

func (EnvironmentContainerImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentContainerImage)(nil)).Elem()
}

func (o EnvironmentContainerImageOutput) ToEnvironmentContainerImageOutput() EnvironmentContainerImageOutput {
	return o
}

func (o EnvironmentContainerImageOutput) ToEnvironmentContainerImageOutputWithContext(ctx context.Context) EnvironmentContainerImageOutput {
	return o
}

func (o EnvironmentContainerImageOutput) ToEnvironmentContainerImagePtrOutput() EnvironmentContainerImagePtrOutput {
	return o.ToEnvironmentContainerImagePtrOutputWithContext(context.Background())
}

func (o EnvironmentContainerImageOutput) ToEnvironmentContainerImagePtrOutputWithContext(ctx context.Context) EnvironmentContainerImagePtrOutput {
	return o.ApplyT(func(v EnvironmentContainerImage) *EnvironmentContainerImage {
		return &v
	}).(EnvironmentContainerImagePtrOutput)
}

// The path to the container image repository.
// For example: gcr.io/{project_id}/{imageName}
func (o EnvironmentContainerImageOutput) Repository() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentContainerImage) string { return v.Repository }).(pulumi.StringOutput)
}

// The tag of the container image. If not specified, this defaults to the latest tag.
func (o EnvironmentContainerImageOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentContainerImage) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type EnvironmentContainerImagePtrOutput struct{ *pulumi.OutputState }

func (EnvironmentContainerImagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentContainerImage)(nil)).Elem()
}

func (o EnvironmentContainerImagePtrOutput) ToEnvironmentContainerImagePtrOutput() EnvironmentContainerImagePtrOutput {
	return o
}

func (o EnvironmentContainerImagePtrOutput) ToEnvironmentContainerImagePtrOutputWithContext(ctx context.Context) EnvironmentContainerImagePtrOutput {
	return o
}

func (o EnvironmentContainerImagePtrOutput) Elem() EnvironmentContainerImageOutput {
	return o.ApplyT(func(v *EnvironmentContainerImage) EnvironmentContainerImage { return *v }).(EnvironmentContainerImageOutput)
}

// The path to the container image repository.
// For example: gcr.io/{project_id}/{imageName}
func (o EnvironmentContainerImagePtrOutput) Repository() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentContainerImage) *string {
		if v == nil {
			return nil
		}
		return &v.Repository
	}).(pulumi.StringPtrOutput)
}

// The tag of the container image. If not specified, this defaults to the latest tag.
func (o EnvironmentContainerImagePtrOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentContainerImage) *string {
		if v == nil {
			return nil
		}
		return v.Tag
	}).(pulumi.StringPtrOutput)
}

type EnvironmentVmImage struct {
	// Use this VM image family to find the image; the newest image in this family will be used.
	ImageFamily *string `pulumi:"imageFamily"`
	// Use VM image name to find the image.
	ImageName *string `pulumi:"imageName"`
	// The name of the Google Cloud project that this VM image belongs to.
	// Format: projects/{project_id}
	Project string `pulumi:"project"`
}

// EnvironmentVmImageInput is an input type that accepts EnvironmentVmImageArgs and EnvironmentVmImageOutput values.
// You can construct a concrete instance of `EnvironmentVmImageInput` via:
//
//          EnvironmentVmImageArgs{...}
type EnvironmentVmImageInput interface {
	pulumi.Input

	ToEnvironmentVmImageOutput() EnvironmentVmImageOutput
	ToEnvironmentVmImageOutputWithContext(context.Context) EnvironmentVmImageOutput
}

type EnvironmentVmImageArgs struct {
	// Use this VM image family to find the image; the newest image in this family will be used.
	ImageFamily pulumi.StringPtrInput `pulumi:"imageFamily"`
	// Use VM image name to find the image.
	ImageName pulumi.StringPtrInput `pulumi:"imageName"`
	// The name of the Google Cloud project that this VM image belongs to.
	// Format: projects/{project_id}
	Project pulumi.StringInput `pulumi:"project"`
}

func (EnvironmentVmImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentVmImage)(nil)).Elem()
}

func (i EnvironmentVmImageArgs) ToEnvironmentVmImageOutput() EnvironmentVmImageOutput {
	return i.ToEnvironmentVmImageOutputWithContext(context.Background())
}

func (i EnvironmentVmImageArgs) ToEnvironmentVmImageOutputWithContext(ctx context.Context) EnvironmentVmImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentVmImageOutput)
}

func (i EnvironmentVmImageArgs) ToEnvironmentVmImagePtrOutput() EnvironmentVmImagePtrOutput {
	return i.ToEnvironmentVmImagePtrOutputWithContext(context.Background())
}

func (i EnvironmentVmImageArgs) ToEnvironmentVmImagePtrOutputWithContext(ctx context.Context) EnvironmentVmImagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentVmImageOutput).ToEnvironmentVmImagePtrOutputWithContext(ctx)
}

// EnvironmentVmImagePtrInput is an input type that accepts EnvironmentVmImageArgs, EnvironmentVmImagePtr and EnvironmentVmImagePtrOutput values.
// You can construct a concrete instance of `EnvironmentVmImagePtrInput` via:
//
//          EnvironmentVmImageArgs{...}
//
//  or:
//
//          nil
type EnvironmentVmImagePtrInput interface {
	pulumi.Input

	ToEnvironmentVmImagePtrOutput() EnvironmentVmImagePtrOutput
	ToEnvironmentVmImagePtrOutputWithContext(context.Context) EnvironmentVmImagePtrOutput
}

type environmentVmImagePtrType EnvironmentVmImageArgs

func EnvironmentVmImagePtr(v *EnvironmentVmImageArgs) EnvironmentVmImagePtrInput {
	return (*environmentVmImagePtrType)(v)
}

func (*environmentVmImagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentVmImage)(nil)).Elem()
}

func (i *environmentVmImagePtrType) ToEnvironmentVmImagePtrOutput() EnvironmentVmImagePtrOutput {
	return i.ToEnvironmentVmImagePtrOutputWithContext(context.Background())
}

func (i *environmentVmImagePtrType) ToEnvironmentVmImagePtrOutputWithContext(ctx context.Context) EnvironmentVmImagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentVmImagePtrOutput)
}

type EnvironmentVmImageOutput struct{ *pulumi.OutputState }

func (EnvironmentVmImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentVmImage)(nil)).Elem()
}

func (o EnvironmentVmImageOutput) ToEnvironmentVmImageOutput() EnvironmentVmImageOutput {
	return o
}

func (o EnvironmentVmImageOutput) ToEnvironmentVmImageOutputWithContext(ctx context.Context) EnvironmentVmImageOutput {
	return o
}

func (o EnvironmentVmImageOutput) ToEnvironmentVmImagePtrOutput() EnvironmentVmImagePtrOutput {
	return o.ToEnvironmentVmImagePtrOutputWithContext(context.Background())
}

func (o EnvironmentVmImageOutput) ToEnvironmentVmImagePtrOutputWithContext(ctx context.Context) EnvironmentVmImagePtrOutput {
	return o.ApplyT(func(v EnvironmentVmImage) *EnvironmentVmImage {
		return &v
	}).(EnvironmentVmImagePtrOutput)
}

// Use this VM image family to find the image; the newest image in this family will be used.
func (o EnvironmentVmImageOutput) ImageFamily() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentVmImage) *string { return v.ImageFamily }).(pulumi.StringPtrOutput)
}

// Use VM image name to find the image.
func (o EnvironmentVmImageOutput) ImageName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentVmImage) *string { return v.ImageName }).(pulumi.StringPtrOutput)
}

// The name of the Google Cloud project that this VM image belongs to.
// Format: projects/{project_id}
func (o EnvironmentVmImageOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentVmImage) string { return v.Project }).(pulumi.StringOutput)
}

type EnvironmentVmImagePtrOutput struct{ *pulumi.OutputState }

func (EnvironmentVmImagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentVmImage)(nil)).Elem()
}

func (o EnvironmentVmImagePtrOutput) ToEnvironmentVmImagePtrOutput() EnvironmentVmImagePtrOutput {
	return o
}

func (o EnvironmentVmImagePtrOutput) ToEnvironmentVmImagePtrOutputWithContext(ctx context.Context) EnvironmentVmImagePtrOutput {
	return o
}

func (o EnvironmentVmImagePtrOutput) Elem() EnvironmentVmImageOutput {
	return o.ApplyT(func(v *EnvironmentVmImage) EnvironmentVmImage { return *v }).(EnvironmentVmImageOutput)
}

// Use this VM image family to find the image; the newest image in this family will be used.
func (o EnvironmentVmImagePtrOutput) ImageFamily() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentVmImage) *string {
		if v == nil {
			return nil
		}
		return v.ImageFamily
	}).(pulumi.StringPtrOutput)
}

// Use VM image name to find the image.
func (o EnvironmentVmImagePtrOutput) ImageName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentVmImage) *string {
		if v == nil {
			return nil
		}
		return v.ImageName
	}).(pulumi.StringPtrOutput)
}

// The name of the Google Cloud project that this VM image belongs to.
// Format: projects/{project_id}
func (o EnvironmentVmImagePtrOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentVmImage) *string {
		if v == nil {
			return nil
		}
		return &v.Project
	}).(pulumi.StringPtrOutput)
}

type InstanceAcceleratorConfig struct {
	// Count of cores of this accelerator.
	CoreCount int `pulumi:"coreCount"`
	// Type of this accelerator.
	// Possible values are `ACCELERATOR_TYPE_UNSPECIFIED`, `NVIDIA_TESLA_K80`, `NVIDIA_TESLA_P100`, `NVIDIA_TESLA_V100`, `NVIDIA_TESLA_P4`, `NVIDIA_TESLA_T4`, `NVIDIA_TESLA_T4_VWS`, `NVIDIA_TESLA_P100_VWS`, `NVIDIA_TESLA_P4_VWS`, `NVIDIA_TESLA_A100`, `TPU_V2`, and `TPU_V3`.
	Type string `pulumi:"type"`
}

// InstanceAcceleratorConfigInput is an input type that accepts InstanceAcceleratorConfigArgs and InstanceAcceleratorConfigOutput values.
// You can construct a concrete instance of `InstanceAcceleratorConfigInput` via:
//
//          InstanceAcceleratorConfigArgs{...}
type InstanceAcceleratorConfigInput interface {
	pulumi.Input

	ToInstanceAcceleratorConfigOutput() InstanceAcceleratorConfigOutput
	ToInstanceAcceleratorConfigOutputWithContext(context.Context) InstanceAcceleratorConfigOutput
}

type InstanceAcceleratorConfigArgs struct {
	// Count of cores of this accelerator.
	CoreCount pulumi.IntInput `pulumi:"coreCount"`
	// Type of this accelerator.
	// Possible values are `ACCELERATOR_TYPE_UNSPECIFIED`, `NVIDIA_TESLA_K80`, `NVIDIA_TESLA_P100`, `NVIDIA_TESLA_V100`, `NVIDIA_TESLA_P4`, `NVIDIA_TESLA_T4`, `NVIDIA_TESLA_T4_VWS`, `NVIDIA_TESLA_P100_VWS`, `NVIDIA_TESLA_P4_VWS`, `NVIDIA_TESLA_A100`, `TPU_V2`, and `TPU_V3`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (InstanceAcceleratorConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceAcceleratorConfig)(nil)).Elem()
}

func (i InstanceAcceleratorConfigArgs) ToInstanceAcceleratorConfigOutput() InstanceAcceleratorConfigOutput {
	return i.ToInstanceAcceleratorConfigOutputWithContext(context.Background())
}

func (i InstanceAcceleratorConfigArgs) ToInstanceAcceleratorConfigOutputWithContext(ctx context.Context) InstanceAcceleratorConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceAcceleratorConfigOutput)
}

func (i InstanceAcceleratorConfigArgs) ToInstanceAcceleratorConfigPtrOutput() InstanceAcceleratorConfigPtrOutput {
	return i.ToInstanceAcceleratorConfigPtrOutputWithContext(context.Background())
}

func (i InstanceAcceleratorConfigArgs) ToInstanceAcceleratorConfigPtrOutputWithContext(ctx context.Context) InstanceAcceleratorConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceAcceleratorConfigOutput).ToInstanceAcceleratorConfigPtrOutputWithContext(ctx)
}

// InstanceAcceleratorConfigPtrInput is an input type that accepts InstanceAcceleratorConfigArgs, InstanceAcceleratorConfigPtr and InstanceAcceleratorConfigPtrOutput values.
// You can construct a concrete instance of `InstanceAcceleratorConfigPtrInput` via:
//
//          InstanceAcceleratorConfigArgs{...}
//
//  or:
//
//          nil
type InstanceAcceleratorConfigPtrInput interface {
	pulumi.Input

	ToInstanceAcceleratorConfigPtrOutput() InstanceAcceleratorConfigPtrOutput
	ToInstanceAcceleratorConfigPtrOutputWithContext(context.Context) InstanceAcceleratorConfigPtrOutput
}

type instanceAcceleratorConfigPtrType InstanceAcceleratorConfigArgs

func InstanceAcceleratorConfigPtr(v *InstanceAcceleratorConfigArgs) InstanceAcceleratorConfigPtrInput {
	return (*instanceAcceleratorConfigPtrType)(v)
}

func (*instanceAcceleratorConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceAcceleratorConfig)(nil)).Elem()
}

func (i *instanceAcceleratorConfigPtrType) ToInstanceAcceleratorConfigPtrOutput() InstanceAcceleratorConfigPtrOutput {
	return i.ToInstanceAcceleratorConfigPtrOutputWithContext(context.Background())
}

func (i *instanceAcceleratorConfigPtrType) ToInstanceAcceleratorConfigPtrOutputWithContext(ctx context.Context) InstanceAcceleratorConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceAcceleratorConfigPtrOutput)
}

type InstanceAcceleratorConfigOutput struct{ *pulumi.OutputState }

func (InstanceAcceleratorConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceAcceleratorConfig)(nil)).Elem()
}

func (o InstanceAcceleratorConfigOutput) ToInstanceAcceleratorConfigOutput() InstanceAcceleratorConfigOutput {
	return o
}

func (o InstanceAcceleratorConfigOutput) ToInstanceAcceleratorConfigOutputWithContext(ctx context.Context) InstanceAcceleratorConfigOutput {
	return o
}

func (o InstanceAcceleratorConfigOutput) ToInstanceAcceleratorConfigPtrOutput() InstanceAcceleratorConfigPtrOutput {
	return o.ToInstanceAcceleratorConfigPtrOutputWithContext(context.Background())
}

func (o InstanceAcceleratorConfigOutput) ToInstanceAcceleratorConfigPtrOutputWithContext(ctx context.Context) InstanceAcceleratorConfigPtrOutput {
	return o.ApplyT(func(v InstanceAcceleratorConfig) *InstanceAcceleratorConfig {
		return &v
	}).(InstanceAcceleratorConfigPtrOutput)
}

// Count of cores of this accelerator.
func (o InstanceAcceleratorConfigOutput) CoreCount() pulumi.IntOutput {
	return o.ApplyT(func(v InstanceAcceleratorConfig) int { return v.CoreCount }).(pulumi.IntOutput)
}

// Type of this accelerator.
// Possible values are `ACCELERATOR_TYPE_UNSPECIFIED`, `NVIDIA_TESLA_K80`, `NVIDIA_TESLA_P100`, `NVIDIA_TESLA_V100`, `NVIDIA_TESLA_P4`, `NVIDIA_TESLA_T4`, `NVIDIA_TESLA_T4_VWS`, `NVIDIA_TESLA_P100_VWS`, `NVIDIA_TESLA_P4_VWS`, `NVIDIA_TESLA_A100`, `TPU_V2`, and `TPU_V3`.
func (o InstanceAcceleratorConfigOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceAcceleratorConfig) string { return v.Type }).(pulumi.StringOutput)
}

type InstanceAcceleratorConfigPtrOutput struct{ *pulumi.OutputState }

func (InstanceAcceleratorConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceAcceleratorConfig)(nil)).Elem()
}

func (o InstanceAcceleratorConfigPtrOutput) ToInstanceAcceleratorConfigPtrOutput() InstanceAcceleratorConfigPtrOutput {
	return o
}

func (o InstanceAcceleratorConfigPtrOutput) ToInstanceAcceleratorConfigPtrOutputWithContext(ctx context.Context) InstanceAcceleratorConfigPtrOutput {
	return o
}

func (o InstanceAcceleratorConfigPtrOutput) Elem() InstanceAcceleratorConfigOutput {
	return o.ApplyT(func(v *InstanceAcceleratorConfig) InstanceAcceleratorConfig { return *v }).(InstanceAcceleratorConfigOutput)
}

// Count of cores of this accelerator.
func (o InstanceAcceleratorConfigPtrOutput) CoreCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceAcceleratorConfig) *int {
		if v == nil {
			return nil
		}
		return &v.CoreCount
	}).(pulumi.IntPtrOutput)
}

// Type of this accelerator.
// Possible values are `ACCELERATOR_TYPE_UNSPECIFIED`, `NVIDIA_TESLA_K80`, `NVIDIA_TESLA_P100`, `NVIDIA_TESLA_V100`, `NVIDIA_TESLA_P4`, `NVIDIA_TESLA_T4`, `NVIDIA_TESLA_T4_VWS`, `NVIDIA_TESLA_P100_VWS`, `NVIDIA_TESLA_P4_VWS`, `NVIDIA_TESLA_A100`, `TPU_V2`, and `TPU_V3`.
func (o InstanceAcceleratorConfigPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceAcceleratorConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type InstanceContainerImage struct {
	// The path to the container image repository.
	// For example: gcr.io/{project_id}/{imageName}
	Repository string `pulumi:"repository"`
	// The tag of the container image. If not specified, this defaults to the latest tag.
	Tag *string `pulumi:"tag"`
}

// InstanceContainerImageInput is an input type that accepts InstanceContainerImageArgs and InstanceContainerImageOutput values.
// You can construct a concrete instance of `InstanceContainerImageInput` via:
//
//          InstanceContainerImageArgs{...}
type InstanceContainerImageInput interface {
	pulumi.Input

	ToInstanceContainerImageOutput() InstanceContainerImageOutput
	ToInstanceContainerImageOutputWithContext(context.Context) InstanceContainerImageOutput
}

type InstanceContainerImageArgs struct {
	// The path to the container image repository.
	// For example: gcr.io/{project_id}/{imageName}
	Repository pulumi.StringInput `pulumi:"repository"`
	// The tag of the container image. If not specified, this defaults to the latest tag.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
}

func (InstanceContainerImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceContainerImage)(nil)).Elem()
}

func (i InstanceContainerImageArgs) ToInstanceContainerImageOutput() InstanceContainerImageOutput {
	return i.ToInstanceContainerImageOutputWithContext(context.Background())
}

func (i InstanceContainerImageArgs) ToInstanceContainerImageOutputWithContext(ctx context.Context) InstanceContainerImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceContainerImageOutput)
}

func (i InstanceContainerImageArgs) ToInstanceContainerImagePtrOutput() InstanceContainerImagePtrOutput {
	return i.ToInstanceContainerImagePtrOutputWithContext(context.Background())
}

func (i InstanceContainerImageArgs) ToInstanceContainerImagePtrOutputWithContext(ctx context.Context) InstanceContainerImagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceContainerImageOutput).ToInstanceContainerImagePtrOutputWithContext(ctx)
}

// InstanceContainerImagePtrInput is an input type that accepts InstanceContainerImageArgs, InstanceContainerImagePtr and InstanceContainerImagePtrOutput values.
// You can construct a concrete instance of `InstanceContainerImagePtrInput` via:
//
//          InstanceContainerImageArgs{...}
//
//  or:
//
//          nil
type InstanceContainerImagePtrInput interface {
	pulumi.Input

	ToInstanceContainerImagePtrOutput() InstanceContainerImagePtrOutput
	ToInstanceContainerImagePtrOutputWithContext(context.Context) InstanceContainerImagePtrOutput
}

type instanceContainerImagePtrType InstanceContainerImageArgs

func InstanceContainerImagePtr(v *InstanceContainerImageArgs) InstanceContainerImagePtrInput {
	return (*instanceContainerImagePtrType)(v)
}

func (*instanceContainerImagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceContainerImage)(nil)).Elem()
}

func (i *instanceContainerImagePtrType) ToInstanceContainerImagePtrOutput() InstanceContainerImagePtrOutput {
	return i.ToInstanceContainerImagePtrOutputWithContext(context.Background())
}

func (i *instanceContainerImagePtrType) ToInstanceContainerImagePtrOutputWithContext(ctx context.Context) InstanceContainerImagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceContainerImagePtrOutput)
}

type InstanceContainerImageOutput struct{ *pulumi.OutputState }

func (InstanceContainerImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceContainerImage)(nil)).Elem()
}

func (o InstanceContainerImageOutput) ToInstanceContainerImageOutput() InstanceContainerImageOutput {
	return o
}

func (o InstanceContainerImageOutput) ToInstanceContainerImageOutputWithContext(ctx context.Context) InstanceContainerImageOutput {
	return o
}

func (o InstanceContainerImageOutput) ToInstanceContainerImagePtrOutput() InstanceContainerImagePtrOutput {
	return o.ToInstanceContainerImagePtrOutputWithContext(context.Background())
}

func (o InstanceContainerImageOutput) ToInstanceContainerImagePtrOutputWithContext(ctx context.Context) InstanceContainerImagePtrOutput {
	return o.ApplyT(func(v InstanceContainerImage) *InstanceContainerImage {
		return &v
	}).(InstanceContainerImagePtrOutput)
}

// The path to the container image repository.
// For example: gcr.io/{project_id}/{imageName}
func (o InstanceContainerImageOutput) Repository() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceContainerImage) string { return v.Repository }).(pulumi.StringOutput)
}

// The tag of the container image. If not specified, this defaults to the latest tag.
func (o InstanceContainerImageOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceContainerImage) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type InstanceContainerImagePtrOutput struct{ *pulumi.OutputState }

func (InstanceContainerImagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceContainerImage)(nil)).Elem()
}

func (o InstanceContainerImagePtrOutput) ToInstanceContainerImagePtrOutput() InstanceContainerImagePtrOutput {
	return o
}

func (o InstanceContainerImagePtrOutput) ToInstanceContainerImagePtrOutputWithContext(ctx context.Context) InstanceContainerImagePtrOutput {
	return o
}

func (o InstanceContainerImagePtrOutput) Elem() InstanceContainerImageOutput {
	return o.ApplyT(func(v *InstanceContainerImage) InstanceContainerImage { return *v }).(InstanceContainerImageOutput)
}

// The path to the container image repository.
// For example: gcr.io/{project_id}/{imageName}
func (o InstanceContainerImagePtrOutput) Repository() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceContainerImage) *string {
		if v == nil {
			return nil
		}
		return &v.Repository
	}).(pulumi.StringPtrOutput)
}

// The tag of the container image. If not specified, this defaults to the latest tag.
func (o InstanceContainerImagePtrOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceContainerImage) *string {
		if v == nil {
			return nil
		}
		return v.Tag
	}).(pulumi.StringPtrOutput)
}

type InstanceIamBindingCondition struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

// InstanceIamBindingConditionInput is an input type that accepts InstanceIamBindingConditionArgs and InstanceIamBindingConditionOutput values.
// You can construct a concrete instance of `InstanceIamBindingConditionInput` via:
//
//          InstanceIamBindingConditionArgs{...}
type InstanceIamBindingConditionInput interface {
	pulumi.Input

	ToInstanceIamBindingConditionOutput() InstanceIamBindingConditionOutput
	ToInstanceIamBindingConditionOutputWithContext(context.Context) InstanceIamBindingConditionOutput
}

type InstanceIamBindingConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (InstanceIamBindingConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceIamBindingCondition)(nil)).Elem()
}

func (i InstanceIamBindingConditionArgs) ToInstanceIamBindingConditionOutput() InstanceIamBindingConditionOutput {
	return i.ToInstanceIamBindingConditionOutputWithContext(context.Background())
}

func (i InstanceIamBindingConditionArgs) ToInstanceIamBindingConditionOutputWithContext(ctx context.Context) InstanceIamBindingConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceIamBindingConditionOutput)
}

func (i InstanceIamBindingConditionArgs) ToInstanceIamBindingConditionPtrOutput() InstanceIamBindingConditionPtrOutput {
	return i.ToInstanceIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i InstanceIamBindingConditionArgs) ToInstanceIamBindingConditionPtrOutputWithContext(ctx context.Context) InstanceIamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceIamBindingConditionOutput).ToInstanceIamBindingConditionPtrOutputWithContext(ctx)
}

// InstanceIamBindingConditionPtrInput is an input type that accepts InstanceIamBindingConditionArgs, InstanceIamBindingConditionPtr and InstanceIamBindingConditionPtrOutput values.
// You can construct a concrete instance of `InstanceIamBindingConditionPtrInput` via:
//
//          InstanceIamBindingConditionArgs{...}
//
//  or:
//
//          nil
type InstanceIamBindingConditionPtrInput interface {
	pulumi.Input

	ToInstanceIamBindingConditionPtrOutput() InstanceIamBindingConditionPtrOutput
	ToInstanceIamBindingConditionPtrOutputWithContext(context.Context) InstanceIamBindingConditionPtrOutput
}

type instanceIamBindingConditionPtrType InstanceIamBindingConditionArgs

func InstanceIamBindingConditionPtr(v *InstanceIamBindingConditionArgs) InstanceIamBindingConditionPtrInput {
	return (*instanceIamBindingConditionPtrType)(v)
}

func (*instanceIamBindingConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceIamBindingCondition)(nil)).Elem()
}

func (i *instanceIamBindingConditionPtrType) ToInstanceIamBindingConditionPtrOutput() InstanceIamBindingConditionPtrOutput {
	return i.ToInstanceIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i *instanceIamBindingConditionPtrType) ToInstanceIamBindingConditionPtrOutputWithContext(ctx context.Context) InstanceIamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceIamBindingConditionPtrOutput)
}

type InstanceIamBindingConditionOutput struct{ *pulumi.OutputState }

func (InstanceIamBindingConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceIamBindingCondition)(nil)).Elem()
}

func (o InstanceIamBindingConditionOutput) ToInstanceIamBindingConditionOutput() InstanceIamBindingConditionOutput {
	return o
}

func (o InstanceIamBindingConditionOutput) ToInstanceIamBindingConditionOutputWithContext(ctx context.Context) InstanceIamBindingConditionOutput {
	return o
}

func (o InstanceIamBindingConditionOutput) ToInstanceIamBindingConditionPtrOutput() InstanceIamBindingConditionPtrOutput {
	return o.ToInstanceIamBindingConditionPtrOutputWithContext(context.Background())
}

func (o InstanceIamBindingConditionOutput) ToInstanceIamBindingConditionPtrOutputWithContext(ctx context.Context) InstanceIamBindingConditionPtrOutput {
	return o.ApplyT(func(v InstanceIamBindingCondition) *InstanceIamBindingCondition {
		return &v
	}).(InstanceIamBindingConditionPtrOutput)
}
func (o InstanceIamBindingConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceIamBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o InstanceIamBindingConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceIamBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o InstanceIamBindingConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceIamBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

type InstanceIamBindingConditionPtrOutput struct{ *pulumi.OutputState }

func (InstanceIamBindingConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceIamBindingCondition)(nil)).Elem()
}

func (o InstanceIamBindingConditionPtrOutput) ToInstanceIamBindingConditionPtrOutput() InstanceIamBindingConditionPtrOutput {
	return o
}

func (o InstanceIamBindingConditionPtrOutput) ToInstanceIamBindingConditionPtrOutputWithContext(ctx context.Context) InstanceIamBindingConditionPtrOutput {
	return o
}

func (o InstanceIamBindingConditionPtrOutput) Elem() InstanceIamBindingConditionOutput {
	return o.ApplyT(func(v *InstanceIamBindingCondition) InstanceIamBindingCondition { return *v }).(InstanceIamBindingConditionOutput)
}

func (o InstanceIamBindingConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o InstanceIamBindingConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

func (o InstanceIamBindingConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type InstanceIamMemberCondition struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

// InstanceIamMemberConditionInput is an input type that accepts InstanceIamMemberConditionArgs and InstanceIamMemberConditionOutput values.
// You can construct a concrete instance of `InstanceIamMemberConditionInput` via:
//
//          InstanceIamMemberConditionArgs{...}
type InstanceIamMemberConditionInput interface {
	pulumi.Input

	ToInstanceIamMemberConditionOutput() InstanceIamMemberConditionOutput
	ToInstanceIamMemberConditionOutputWithContext(context.Context) InstanceIamMemberConditionOutput
}

type InstanceIamMemberConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (InstanceIamMemberConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceIamMemberCondition)(nil)).Elem()
}

func (i InstanceIamMemberConditionArgs) ToInstanceIamMemberConditionOutput() InstanceIamMemberConditionOutput {
	return i.ToInstanceIamMemberConditionOutputWithContext(context.Background())
}

func (i InstanceIamMemberConditionArgs) ToInstanceIamMemberConditionOutputWithContext(ctx context.Context) InstanceIamMemberConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceIamMemberConditionOutput)
}

func (i InstanceIamMemberConditionArgs) ToInstanceIamMemberConditionPtrOutput() InstanceIamMemberConditionPtrOutput {
	return i.ToInstanceIamMemberConditionPtrOutputWithContext(context.Background())
}

func (i InstanceIamMemberConditionArgs) ToInstanceIamMemberConditionPtrOutputWithContext(ctx context.Context) InstanceIamMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceIamMemberConditionOutput).ToInstanceIamMemberConditionPtrOutputWithContext(ctx)
}

// InstanceIamMemberConditionPtrInput is an input type that accepts InstanceIamMemberConditionArgs, InstanceIamMemberConditionPtr and InstanceIamMemberConditionPtrOutput values.
// You can construct a concrete instance of `InstanceIamMemberConditionPtrInput` via:
//
//          InstanceIamMemberConditionArgs{...}
//
//  or:
//
//          nil
type InstanceIamMemberConditionPtrInput interface {
	pulumi.Input

	ToInstanceIamMemberConditionPtrOutput() InstanceIamMemberConditionPtrOutput
	ToInstanceIamMemberConditionPtrOutputWithContext(context.Context) InstanceIamMemberConditionPtrOutput
}

type instanceIamMemberConditionPtrType InstanceIamMemberConditionArgs

func InstanceIamMemberConditionPtr(v *InstanceIamMemberConditionArgs) InstanceIamMemberConditionPtrInput {
	return (*instanceIamMemberConditionPtrType)(v)
}

func (*instanceIamMemberConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceIamMemberCondition)(nil)).Elem()
}

func (i *instanceIamMemberConditionPtrType) ToInstanceIamMemberConditionPtrOutput() InstanceIamMemberConditionPtrOutput {
	return i.ToInstanceIamMemberConditionPtrOutputWithContext(context.Background())
}

func (i *instanceIamMemberConditionPtrType) ToInstanceIamMemberConditionPtrOutputWithContext(ctx context.Context) InstanceIamMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceIamMemberConditionPtrOutput)
}

type InstanceIamMemberConditionOutput struct{ *pulumi.OutputState }

func (InstanceIamMemberConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceIamMemberCondition)(nil)).Elem()
}

func (o InstanceIamMemberConditionOutput) ToInstanceIamMemberConditionOutput() InstanceIamMemberConditionOutput {
	return o
}

func (o InstanceIamMemberConditionOutput) ToInstanceIamMemberConditionOutputWithContext(ctx context.Context) InstanceIamMemberConditionOutput {
	return o
}

func (o InstanceIamMemberConditionOutput) ToInstanceIamMemberConditionPtrOutput() InstanceIamMemberConditionPtrOutput {
	return o.ToInstanceIamMemberConditionPtrOutputWithContext(context.Background())
}

func (o InstanceIamMemberConditionOutput) ToInstanceIamMemberConditionPtrOutputWithContext(ctx context.Context) InstanceIamMemberConditionPtrOutput {
	return o.ApplyT(func(v InstanceIamMemberCondition) *InstanceIamMemberCondition {
		return &v
	}).(InstanceIamMemberConditionPtrOutput)
}
func (o InstanceIamMemberConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceIamMemberCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o InstanceIamMemberConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceIamMemberCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o InstanceIamMemberConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceIamMemberCondition) string { return v.Title }).(pulumi.StringOutput)
}

type InstanceIamMemberConditionPtrOutput struct{ *pulumi.OutputState }

func (InstanceIamMemberConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceIamMemberCondition)(nil)).Elem()
}

func (o InstanceIamMemberConditionPtrOutput) ToInstanceIamMemberConditionPtrOutput() InstanceIamMemberConditionPtrOutput {
	return o
}

func (o InstanceIamMemberConditionPtrOutput) ToInstanceIamMemberConditionPtrOutputWithContext(ctx context.Context) InstanceIamMemberConditionPtrOutput {
	return o
}

func (o InstanceIamMemberConditionPtrOutput) Elem() InstanceIamMemberConditionOutput {
	return o.ApplyT(func(v *InstanceIamMemberCondition) InstanceIamMemberCondition { return *v }).(InstanceIamMemberConditionOutput)
}

func (o InstanceIamMemberConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o InstanceIamMemberConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

func (o InstanceIamMemberConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type InstanceShieldedInstanceConfig struct {
	// Defines whether the instance has integrity monitoring enabled. Enables monitoring and attestation of the
	// boot integrity of the instance. The attestation is performed against the integrity policy baseline.
	// This baseline is initially derived from the implicitly trusted boot image when the instance is created.
	// Enabled by default.
	EnableIntegrityMonitoring *bool `pulumi:"enableIntegrityMonitoring"`
	// Defines whether the instance has Secure Boot enabled. Secure Boot helps ensure that the system only runs
	// authentic software by verifying the digital signature of all boot components, and halting the boot process
	// if signature verification fails.
	// Disabled by default.
	EnableSecureBoot *bool `pulumi:"enableSecureBoot"`
	// Defines whether the instance has the vTPM enabled.
	// Enabled by default.
	EnableVtpm *bool `pulumi:"enableVtpm"`
}

// InstanceShieldedInstanceConfigInput is an input type that accepts InstanceShieldedInstanceConfigArgs and InstanceShieldedInstanceConfigOutput values.
// You can construct a concrete instance of `InstanceShieldedInstanceConfigInput` via:
//
//          InstanceShieldedInstanceConfigArgs{...}
type InstanceShieldedInstanceConfigInput interface {
	pulumi.Input

	ToInstanceShieldedInstanceConfigOutput() InstanceShieldedInstanceConfigOutput
	ToInstanceShieldedInstanceConfigOutputWithContext(context.Context) InstanceShieldedInstanceConfigOutput
}

type InstanceShieldedInstanceConfigArgs struct {
	// Defines whether the instance has integrity monitoring enabled. Enables monitoring and attestation of the
	// boot integrity of the instance. The attestation is performed against the integrity policy baseline.
	// This baseline is initially derived from the implicitly trusted boot image when the instance is created.
	// Enabled by default.
	EnableIntegrityMonitoring pulumi.BoolPtrInput `pulumi:"enableIntegrityMonitoring"`
	// Defines whether the instance has Secure Boot enabled. Secure Boot helps ensure that the system only runs
	// authentic software by verifying the digital signature of all boot components, and halting the boot process
	// if signature verification fails.
	// Disabled by default.
	EnableSecureBoot pulumi.BoolPtrInput `pulumi:"enableSecureBoot"`
	// Defines whether the instance has the vTPM enabled.
	// Enabled by default.
	EnableVtpm pulumi.BoolPtrInput `pulumi:"enableVtpm"`
}

func (InstanceShieldedInstanceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceShieldedInstanceConfig)(nil)).Elem()
}

func (i InstanceShieldedInstanceConfigArgs) ToInstanceShieldedInstanceConfigOutput() InstanceShieldedInstanceConfigOutput {
	return i.ToInstanceShieldedInstanceConfigOutputWithContext(context.Background())
}

func (i InstanceShieldedInstanceConfigArgs) ToInstanceShieldedInstanceConfigOutputWithContext(ctx context.Context) InstanceShieldedInstanceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceShieldedInstanceConfigOutput)
}

func (i InstanceShieldedInstanceConfigArgs) ToInstanceShieldedInstanceConfigPtrOutput() InstanceShieldedInstanceConfigPtrOutput {
	return i.ToInstanceShieldedInstanceConfigPtrOutputWithContext(context.Background())
}

func (i InstanceShieldedInstanceConfigArgs) ToInstanceShieldedInstanceConfigPtrOutputWithContext(ctx context.Context) InstanceShieldedInstanceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceShieldedInstanceConfigOutput).ToInstanceShieldedInstanceConfigPtrOutputWithContext(ctx)
}

// InstanceShieldedInstanceConfigPtrInput is an input type that accepts InstanceShieldedInstanceConfigArgs, InstanceShieldedInstanceConfigPtr and InstanceShieldedInstanceConfigPtrOutput values.
// You can construct a concrete instance of `InstanceShieldedInstanceConfigPtrInput` via:
//
//          InstanceShieldedInstanceConfigArgs{...}
//
//  or:
//
//          nil
type InstanceShieldedInstanceConfigPtrInput interface {
	pulumi.Input

	ToInstanceShieldedInstanceConfigPtrOutput() InstanceShieldedInstanceConfigPtrOutput
	ToInstanceShieldedInstanceConfigPtrOutputWithContext(context.Context) InstanceShieldedInstanceConfigPtrOutput
}

type instanceShieldedInstanceConfigPtrType InstanceShieldedInstanceConfigArgs

func InstanceShieldedInstanceConfigPtr(v *InstanceShieldedInstanceConfigArgs) InstanceShieldedInstanceConfigPtrInput {
	return (*instanceShieldedInstanceConfigPtrType)(v)
}

func (*instanceShieldedInstanceConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceShieldedInstanceConfig)(nil)).Elem()
}

func (i *instanceShieldedInstanceConfigPtrType) ToInstanceShieldedInstanceConfigPtrOutput() InstanceShieldedInstanceConfigPtrOutput {
	return i.ToInstanceShieldedInstanceConfigPtrOutputWithContext(context.Background())
}

func (i *instanceShieldedInstanceConfigPtrType) ToInstanceShieldedInstanceConfigPtrOutputWithContext(ctx context.Context) InstanceShieldedInstanceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceShieldedInstanceConfigPtrOutput)
}

type InstanceShieldedInstanceConfigOutput struct{ *pulumi.OutputState }

func (InstanceShieldedInstanceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceShieldedInstanceConfig)(nil)).Elem()
}

func (o InstanceShieldedInstanceConfigOutput) ToInstanceShieldedInstanceConfigOutput() InstanceShieldedInstanceConfigOutput {
	return o
}

func (o InstanceShieldedInstanceConfigOutput) ToInstanceShieldedInstanceConfigOutputWithContext(ctx context.Context) InstanceShieldedInstanceConfigOutput {
	return o
}

func (o InstanceShieldedInstanceConfigOutput) ToInstanceShieldedInstanceConfigPtrOutput() InstanceShieldedInstanceConfigPtrOutput {
	return o.ToInstanceShieldedInstanceConfigPtrOutputWithContext(context.Background())
}

func (o InstanceShieldedInstanceConfigOutput) ToInstanceShieldedInstanceConfigPtrOutputWithContext(ctx context.Context) InstanceShieldedInstanceConfigPtrOutput {
	return o.ApplyT(func(v InstanceShieldedInstanceConfig) *InstanceShieldedInstanceConfig {
		return &v
	}).(InstanceShieldedInstanceConfigPtrOutput)
}

// Defines whether the instance has integrity monitoring enabled. Enables monitoring and attestation of the
// boot integrity of the instance. The attestation is performed against the integrity policy baseline.
// This baseline is initially derived from the implicitly trusted boot image when the instance is created.
// Enabled by default.
func (o InstanceShieldedInstanceConfigOutput) EnableIntegrityMonitoring() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceShieldedInstanceConfig) *bool { return v.EnableIntegrityMonitoring }).(pulumi.BoolPtrOutput)
}

// Defines whether the instance has Secure Boot enabled. Secure Boot helps ensure that the system only runs
// authentic software by verifying the digital signature of all boot components, and halting the boot process
// if signature verification fails.
// Disabled by default.
func (o InstanceShieldedInstanceConfigOutput) EnableSecureBoot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceShieldedInstanceConfig) *bool { return v.EnableSecureBoot }).(pulumi.BoolPtrOutput)
}

// Defines whether the instance has the vTPM enabled.
// Enabled by default.
func (o InstanceShieldedInstanceConfigOutput) EnableVtpm() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceShieldedInstanceConfig) *bool { return v.EnableVtpm }).(pulumi.BoolPtrOutput)
}

type InstanceShieldedInstanceConfigPtrOutput struct{ *pulumi.OutputState }

func (InstanceShieldedInstanceConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceShieldedInstanceConfig)(nil)).Elem()
}

func (o InstanceShieldedInstanceConfigPtrOutput) ToInstanceShieldedInstanceConfigPtrOutput() InstanceShieldedInstanceConfigPtrOutput {
	return o
}

func (o InstanceShieldedInstanceConfigPtrOutput) ToInstanceShieldedInstanceConfigPtrOutputWithContext(ctx context.Context) InstanceShieldedInstanceConfigPtrOutput {
	return o
}

func (o InstanceShieldedInstanceConfigPtrOutput) Elem() InstanceShieldedInstanceConfigOutput {
	return o.ApplyT(func(v *InstanceShieldedInstanceConfig) InstanceShieldedInstanceConfig { return *v }).(InstanceShieldedInstanceConfigOutput)
}

// Defines whether the instance has integrity monitoring enabled. Enables monitoring and attestation of the
// boot integrity of the instance. The attestation is performed against the integrity policy baseline.
// This baseline is initially derived from the implicitly trusted boot image when the instance is created.
// Enabled by default.
func (o InstanceShieldedInstanceConfigPtrOutput) EnableIntegrityMonitoring() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InstanceShieldedInstanceConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EnableIntegrityMonitoring
	}).(pulumi.BoolPtrOutput)
}

// Defines whether the instance has Secure Boot enabled. Secure Boot helps ensure that the system only runs
// authentic software by verifying the digital signature of all boot components, and halting the boot process
// if signature verification fails.
// Disabled by default.
func (o InstanceShieldedInstanceConfigPtrOutput) EnableSecureBoot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InstanceShieldedInstanceConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EnableSecureBoot
	}).(pulumi.BoolPtrOutput)
}

// Defines whether the instance has the vTPM enabled.
// Enabled by default.
func (o InstanceShieldedInstanceConfigPtrOutput) EnableVtpm() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InstanceShieldedInstanceConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EnableVtpm
	}).(pulumi.BoolPtrOutput)
}

type InstanceVmImage struct {
	// Use this VM image family to find the image; the newest image in this family will be used.
	ImageFamily *string `pulumi:"imageFamily"`
	// Use VM image name to find the image.
	ImageName *string `pulumi:"imageName"`
	// The name of the Google Cloud project that this VM image belongs to.
	// Format: projects/{project_id}
	Project string `pulumi:"project"`
}

// InstanceVmImageInput is an input type that accepts InstanceVmImageArgs and InstanceVmImageOutput values.
// You can construct a concrete instance of `InstanceVmImageInput` via:
//
//          InstanceVmImageArgs{...}
type InstanceVmImageInput interface {
	pulumi.Input

	ToInstanceVmImageOutput() InstanceVmImageOutput
	ToInstanceVmImageOutputWithContext(context.Context) InstanceVmImageOutput
}

type InstanceVmImageArgs struct {
	// Use this VM image family to find the image; the newest image in this family will be used.
	ImageFamily pulumi.StringPtrInput `pulumi:"imageFamily"`
	// Use VM image name to find the image.
	ImageName pulumi.StringPtrInput `pulumi:"imageName"`
	// The name of the Google Cloud project that this VM image belongs to.
	// Format: projects/{project_id}
	Project pulumi.StringInput `pulumi:"project"`
}

func (InstanceVmImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceVmImage)(nil)).Elem()
}

func (i InstanceVmImageArgs) ToInstanceVmImageOutput() InstanceVmImageOutput {
	return i.ToInstanceVmImageOutputWithContext(context.Background())
}

func (i InstanceVmImageArgs) ToInstanceVmImageOutputWithContext(ctx context.Context) InstanceVmImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceVmImageOutput)
}

func (i InstanceVmImageArgs) ToInstanceVmImagePtrOutput() InstanceVmImagePtrOutput {
	return i.ToInstanceVmImagePtrOutputWithContext(context.Background())
}

func (i InstanceVmImageArgs) ToInstanceVmImagePtrOutputWithContext(ctx context.Context) InstanceVmImagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceVmImageOutput).ToInstanceVmImagePtrOutputWithContext(ctx)
}

// InstanceVmImagePtrInput is an input type that accepts InstanceVmImageArgs, InstanceVmImagePtr and InstanceVmImagePtrOutput values.
// You can construct a concrete instance of `InstanceVmImagePtrInput` via:
//
//          InstanceVmImageArgs{...}
//
//  or:
//
//          nil
type InstanceVmImagePtrInput interface {
	pulumi.Input

	ToInstanceVmImagePtrOutput() InstanceVmImagePtrOutput
	ToInstanceVmImagePtrOutputWithContext(context.Context) InstanceVmImagePtrOutput
}

type instanceVmImagePtrType InstanceVmImageArgs

func InstanceVmImagePtr(v *InstanceVmImageArgs) InstanceVmImagePtrInput {
	return (*instanceVmImagePtrType)(v)
}

func (*instanceVmImagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceVmImage)(nil)).Elem()
}

func (i *instanceVmImagePtrType) ToInstanceVmImagePtrOutput() InstanceVmImagePtrOutput {
	return i.ToInstanceVmImagePtrOutputWithContext(context.Background())
}

func (i *instanceVmImagePtrType) ToInstanceVmImagePtrOutputWithContext(ctx context.Context) InstanceVmImagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceVmImagePtrOutput)
}

type InstanceVmImageOutput struct{ *pulumi.OutputState }

func (InstanceVmImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceVmImage)(nil)).Elem()
}

func (o InstanceVmImageOutput) ToInstanceVmImageOutput() InstanceVmImageOutput {
	return o
}

func (o InstanceVmImageOutput) ToInstanceVmImageOutputWithContext(ctx context.Context) InstanceVmImageOutput {
	return o
}

func (o InstanceVmImageOutput) ToInstanceVmImagePtrOutput() InstanceVmImagePtrOutput {
	return o.ToInstanceVmImagePtrOutputWithContext(context.Background())
}

func (o InstanceVmImageOutput) ToInstanceVmImagePtrOutputWithContext(ctx context.Context) InstanceVmImagePtrOutput {
	return o.ApplyT(func(v InstanceVmImage) *InstanceVmImage {
		return &v
	}).(InstanceVmImagePtrOutput)
}

// Use this VM image family to find the image; the newest image in this family will be used.
func (o InstanceVmImageOutput) ImageFamily() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceVmImage) *string { return v.ImageFamily }).(pulumi.StringPtrOutput)
}

// Use VM image name to find the image.
func (o InstanceVmImageOutput) ImageName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceVmImage) *string { return v.ImageName }).(pulumi.StringPtrOutput)
}

// The name of the Google Cloud project that this VM image belongs to.
// Format: projects/{project_id}
func (o InstanceVmImageOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceVmImage) string { return v.Project }).(pulumi.StringOutput)
}

type InstanceVmImagePtrOutput struct{ *pulumi.OutputState }

func (InstanceVmImagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceVmImage)(nil)).Elem()
}

func (o InstanceVmImagePtrOutput) ToInstanceVmImagePtrOutput() InstanceVmImagePtrOutput {
	return o
}

func (o InstanceVmImagePtrOutput) ToInstanceVmImagePtrOutputWithContext(ctx context.Context) InstanceVmImagePtrOutput {
	return o
}

func (o InstanceVmImagePtrOutput) Elem() InstanceVmImageOutput {
	return o.ApplyT(func(v *InstanceVmImage) InstanceVmImage { return *v }).(InstanceVmImageOutput)
}

// Use this VM image family to find the image; the newest image in this family will be used.
func (o InstanceVmImagePtrOutput) ImageFamily() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceVmImage) *string {
		if v == nil {
			return nil
		}
		return v.ImageFamily
	}).(pulumi.StringPtrOutput)
}

// Use VM image name to find the image.
func (o InstanceVmImagePtrOutput) ImageName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceVmImage) *string {
		if v == nil {
			return nil
		}
		return v.ImageName
	}).(pulumi.StringPtrOutput)
}

// The name of the Google Cloud project that this VM image belongs to.
// Format: projects/{project_id}
func (o InstanceVmImagePtrOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceVmImage) *string {
		if v == nil {
			return nil
		}
		return &v.Project
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(EnvironmentContainerImageOutput{})
	pulumi.RegisterOutputType(EnvironmentContainerImagePtrOutput{})
	pulumi.RegisterOutputType(EnvironmentVmImageOutput{})
	pulumi.RegisterOutputType(EnvironmentVmImagePtrOutput{})
	pulumi.RegisterOutputType(InstanceAcceleratorConfigOutput{})
	pulumi.RegisterOutputType(InstanceAcceleratorConfigPtrOutput{})
	pulumi.RegisterOutputType(InstanceContainerImageOutput{})
	pulumi.RegisterOutputType(InstanceContainerImagePtrOutput{})
	pulumi.RegisterOutputType(InstanceIamBindingConditionOutput{})
	pulumi.RegisterOutputType(InstanceIamBindingConditionPtrOutput{})
	pulumi.RegisterOutputType(InstanceIamMemberConditionOutput{})
	pulumi.RegisterOutputType(InstanceIamMemberConditionPtrOutput{})
	pulumi.RegisterOutputType(InstanceShieldedInstanceConfigOutput{})
	pulumi.RegisterOutputType(InstanceShieldedInstanceConfigPtrOutput{})
	pulumi.RegisterOutputType(InstanceVmImageOutput{})
	pulumi.RegisterOutputType(InstanceVmImagePtrOutput{})
}
