// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package edgenetwork

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A Distributed Cloud Edge interconnect attachment, which connects routers to the northbound network.
//
// To get more information about InterconnectAttachment, see:
//
// * [API documentation](https://cloud.google.com/distributed-cloud/edge/latest/docs/reference/network/rest/v1/projects.locations.zones.interconnectAttachments)
// * How-to Guides
//   - [Create and manage interconnect attachments](https://cloud.google.com/distributed-cloud/edge/latest/docs/attachments#api)
//
// ## Example Usage
//
// ### Edgenetwork Interconnect Attachment
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/edgenetwork"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleNetwork, err := edgenetwork.NewNetwork(ctx, "example_network", &edgenetwork.NetworkArgs{
//				NetworkId:   pulumi.String("example-network"),
//				Location:    pulumi.String("us-west1"),
//				Zone:        pulumi.String(""),
//				Description: pulumi.String("Example network."),
//				Mtu:         pulumi.Int(9000),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = edgenetwork.NewInterconnectAttachment(ctx, "example_interconnect_attachment", &edgenetwork.InterconnectAttachmentArgs{
//				InterconnectAttachmentId: pulumi.String("example-interconnect-attachment"),
//				Location:                 pulumi.String("us-west1"),
//				Zone:                     pulumi.String(""),
//				Description:              pulumi.String("Example interconnect attachment."),
//				Network:                  exampleNetwork.ID(),
//				Interconnect:             pulumi.String("11111111-2222-3333-4444-555555555555"),
//				VlanId:                   pulumi.Int(55),
//				Mtu:                      pulumi.Int(9000),
//				Labels: pulumi.StringMap{
//					"environment": pulumi.String("dev"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// InterconnectAttachment can be imported using any of these accepted formats:
//
// * `projects/{{project}}/locations/{{location}}/zones/{{zone}}/interconnectAttachment/{{interconnect_attachment_id}}`
//
// * `{{project}}/{{location}}/{{zone}}/{{interconnect_attachment_id}}`
//
// * `{{location}}/{{zone}}/{{interconnect_attachment_id}}`
//
// * `{{location}}/{{interconnect_attachment_id}}`
//
// * `{{name}}`
//
// When using the `pulumi import` command, InterconnectAttachment can be imported using one of the formats above. For example:
//
// ```sh
// $ pulumi import gcp:edgenetwork/interconnectAttachment:InterconnectAttachment default projects/{{project}}/locations/{{location}}/zones/{{zone}}/interconnectAttachment/{{interconnect_attachment_id}}
// ```
//
// ```sh
// $ pulumi import gcp:edgenetwork/interconnectAttachment:InterconnectAttachment default {{project}}/{{location}}/{{zone}}/{{interconnect_attachment_id}}
// ```
//
// ```sh
// $ pulumi import gcp:edgenetwork/interconnectAttachment:InterconnectAttachment default {{location}}/{{zone}}/{{interconnect_attachment_id}}
// ```
//
// ```sh
// $ pulumi import gcp:edgenetwork/interconnectAttachment:InterconnectAttachment default {{location}}/{{interconnect_attachment_id}}
// ```
//
// ```sh
// $ pulumi import gcp:edgenetwork/interconnectAttachment:InterconnectAttachment default {{name}}
// ```
type InterconnectAttachment struct {
	pulumi.CustomResourceState

	// The time when the resource was created.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
	// fractional digits. Examples: `2014-10-02T15:01:23Z` and `2014-10-02T15:01:23.045123456Z`.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// A free-text description of the resource. Max length 1024 characters.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
	EffectiveLabels pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	// The ID of the underlying interconnect that this attachment's traffic will traverse through.
	Interconnect pulumi.StringOutput `pulumi:"interconnect"`
	// A unique ID that identifies this interconnect attachment.
	//
	// ***
	InterconnectAttachmentId pulumi.StringOutput `pulumi:"interconnectAttachmentId"`
	// Labels associated with this resource.
	//
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// The Google Cloud region to which the target Distributed Cloud Edge zone belongs.
	Location pulumi.StringOutput `pulumi:"location"`
	// IP (L3) MTU value of the virtual edge cloud. Default value is `1500`. Possible values are: `1500`, `9000`.
	Mtu pulumi.IntPtrOutput `pulumi:"mtu"`
	// The canonical name of this resource, with format
	// `projects/{{project}}/locations/{{location}}/zones/{{zone}}/interconnectAttachments/{{interconnect_attachment_id}}`
	Name pulumi.StringOutput `pulumi:"name"`
	// The ID of the network to which this interconnect attachment belongs.
	// Must be of the form: `projects/{{project}}/locations/{{location}}/zones/{{zone}}/networks/{{network_id}}`
	Network pulumi.StringOutput `pulumi:"network"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
	// The combination of labels configured directly on the resource
	// and default labels configured on the provider.
	PulumiLabels pulumi.StringMapOutput `pulumi:"pulumiLabels"`
	// The time when the resource was last updated.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
	// fractional digits. Examples: `2014-10-02T15:01:23Z` and `2014-10-02T15:01:23.045123456Z`.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
	// VLAN ID provided by user. Must be site-wise unique.
	VlanId pulumi.IntOutput `pulumi:"vlanId"`
	// The name of the target Distributed Cloud Edge zone.
	Zone pulumi.StringOutput `pulumi:"zone"`
}

// NewInterconnectAttachment registers a new resource with the given unique name, arguments, and options.
func NewInterconnectAttachment(ctx *pulumi.Context,
	name string, args *InterconnectAttachmentArgs, opts ...pulumi.ResourceOption) (*InterconnectAttachment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Interconnect == nil {
		return nil, errors.New("invalid value for required argument 'Interconnect'")
	}
	if args.InterconnectAttachmentId == nil {
		return nil, errors.New("invalid value for required argument 'InterconnectAttachmentId'")
	}
	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	if args.Network == nil {
		return nil, errors.New("invalid value for required argument 'Network'")
	}
	if args.VlanId == nil {
		return nil, errors.New("invalid value for required argument 'VlanId'")
	}
	if args.Zone == nil {
		return nil, errors.New("invalid value for required argument 'Zone'")
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"effectiveLabels",
		"pulumiLabels",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource InterconnectAttachment
	err := ctx.RegisterResource("gcp:edgenetwork/interconnectAttachment:InterconnectAttachment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInterconnectAttachment gets an existing InterconnectAttachment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInterconnectAttachment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InterconnectAttachmentState, opts ...pulumi.ResourceOption) (*InterconnectAttachment, error) {
	var resource InterconnectAttachment
	err := ctx.ReadResource("gcp:edgenetwork/interconnectAttachment:InterconnectAttachment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering InterconnectAttachment resources.
type interconnectAttachmentState struct {
	// The time when the resource was created.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
	// fractional digits. Examples: `2014-10-02T15:01:23Z` and `2014-10-02T15:01:23.045123456Z`.
	CreateTime *string `pulumi:"createTime"`
	// A free-text description of the resource. Max length 1024 characters.
	Description *string `pulumi:"description"`
	// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
	EffectiveLabels map[string]string `pulumi:"effectiveLabels"`
	// The ID of the underlying interconnect that this attachment's traffic will traverse through.
	Interconnect *string `pulumi:"interconnect"`
	// A unique ID that identifies this interconnect attachment.
	//
	// ***
	InterconnectAttachmentId *string `pulumi:"interconnectAttachmentId"`
	// Labels associated with this resource.
	//
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// The Google Cloud region to which the target Distributed Cloud Edge zone belongs.
	Location *string `pulumi:"location"`
	// IP (L3) MTU value of the virtual edge cloud. Default value is `1500`. Possible values are: `1500`, `9000`.
	Mtu *int `pulumi:"mtu"`
	// The canonical name of this resource, with format
	// `projects/{{project}}/locations/{{location}}/zones/{{zone}}/interconnectAttachments/{{interconnect_attachment_id}}`
	Name *string `pulumi:"name"`
	// The ID of the network to which this interconnect attachment belongs.
	// Must be of the form: `projects/{{project}}/locations/{{location}}/zones/{{zone}}/networks/{{network_id}}`
	Network *string `pulumi:"network"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// The combination of labels configured directly on the resource
	// and default labels configured on the provider.
	PulumiLabels map[string]string `pulumi:"pulumiLabels"`
	// The time when the resource was last updated.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
	// fractional digits. Examples: `2014-10-02T15:01:23Z` and `2014-10-02T15:01:23.045123456Z`.
	UpdateTime *string `pulumi:"updateTime"`
	// VLAN ID provided by user. Must be site-wise unique.
	VlanId *int `pulumi:"vlanId"`
	// The name of the target Distributed Cloud Edge zone.
	Zone *string `pulumi:"zone"`
}

type InterconnectAttachmentState struct {
	// The time when the resource was created.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
	// fractional digits. Examples: `2014-10-02T15:01:23Z` and `2014-10-02T15:01:23.045123456Z`.
	CreateTime pulumi.StringPtrInput
	// A free-text description of the resource. Max length 1024 characters.
	Description pulumi.StringPtrInput
	// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
	EffectiveLabels pulumi.StringMapInput
	// The ID of the underlying interconnect that this attachment's traffic will traverse through.
	Interconnect pulumi.StringPtrInput
	// A unique ID that identifies this interconnect attachment.
	//
	// ***
	InterconnectAttachmentId pulumi.StringPtrInput
	// Labels associated with this resource.
	//
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// The Google Cloud region to which the target Distributed Cloud Edge zone belongs.
	Location pulumi.StringPtrInput
	// IP (L3) MTU value of the virtual edge cloud. Default value is `1500`. Possible values are: `1500`, `9000`.
	Mtu pulumi.IntPtrInput
	// The canonical name of this resource, with format
	// `projects/{{project}}/locations/{{location}}/zones/{{zone}}/interconnectAttachments/{{interconnect_attachment_id}}`
	Name pulumi.StringPtrInput
	// The ID of the network to which this interconnect attachment belongs.
	// Must be of the form: `projects/{{project}}/locations/{{location}}/zones/{{zone}}/networks/{{network_id}}`
	Network pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// The combination of labels configured directly on the resource
	// and default labels configured on the provider.
	PulumiLabels pulumi.StringMapInput
	// The time when the resource was last updated.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
	// fractional digits. Examples: `2014-10-02T15:01:23Z` and `2014-10-02T15:01:23.045123456Z`.
	UpdateTime pulumi.StringPtrInput
	// VLAN ID provided by user. Must be site-wise unique.
	VlanId pulumi.IntPtrInput
	// The name of the target Distributed Cloud Edge zone.
	Zone pulumi.StringPtrInput
}

func (InterconnectAttachmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*interconnectAttachmentState)(nil)).Elem()
}

type interconnectAttachmentArgs struct {
	// A free-text description of the resource. Max length 1024 characters.
	Description *string `pulumi:"description"`
	// The ID of the underlying interconnect that this attachment's traffic will traverse through.
	Interconnect string `pulumi:"interconnect"`
	// A unique ID that identifies this interconnect attachment.
	//
	// ***
	InterconnectAttachmentId string `pulumi:"interconnectAttachmentId"`
	// Labels associated with this resource.
	//
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// The Google Cloud region to which the target Distributed Cloud Edge zone belongs.
	Location string `pulumi:"location"`
	// IP (L3) MTU value of the virtual edge cloud. Default value is `1500`. Possible values are: `1500`, `9000`.
	Mtu *int `pulumi:"mtu"`
	// The ID of the network to which this interconnect attachment belongs.
	// Must be of the form: `projects/{{project}}/locations/{{location}}/zones/{{zone}}/networks/{{network_id}}`
	Network string `pulumi:"network"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// VLAN ID provided by user. Must be site-wise unique.
	VlanId int `pulumi:"vlanId"`
	// The name of the target Distributed Cloud Edge zone.
	Zone string `pulumi:"zone"`
}

// The set of arguments for constructing a InterconnectAttachment resource.
type InterconnectAttachmentArgs struct {
	// A free-text description of the resource. Max length 1024 characters.
	Description pulumi.StringPtrInput
	// The ID of the underlying interconnect that this attachment's traffic will traverse through.
	Interconnect pulumi.StringInput
	// A unique ID that identifies this interconnect attachment.
	//
	// ***
	InterconnectAttachmentId pulumi.StringInput
	// Labels associated with this resource.
	//
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// The Google Cloud region to which the target Distributed Cloud Edge zone belongs.
	Location pulumi.StringInput
	// IP (L3) MTU value of the virtual edge cloud. Default value is `1500`. Possible values are: `1500`, `9000`.
	Mtu pulumi.IntPtrInput
	// The ID of the network to which this interconnect attachment belongs.
	// Must be of the form: `projects/{{project}}/locations/{{location}}/zones/{{zone}}/networks/{{network_id}}`
	Network pulumi.StringInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// VLAN ID provided by user. Must be site-wise unique.
	VlanId pulumi.IntInput
	// The name of the target Distributed Cloud Edge zone.
	Zone pulumi.StringInput
}

func (InterconnectAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*interconnectAttachmentArgs)(nil)).Elem()
}

type InterconnectAttachmentInput interface {
	pulumi.Input

	ToInterconnectAttachmentOutput() InterconnectAttachmentOutput
	ToInterconnectAttachmentOutputWithContext(ctx context.Context) InterconnectAttachmentOutput
}

func (*InterconnectAttachment) ElementType() reflect.Type {
	return reflect.TypeOf((**InterconnectAttachment)(nil)).Elem()
}

func (i *InterconnectAttachment) ToInterconnectAttachmentOutput() InterconnectAttachmentOutput {
	return i.ToInterconnectAttachmentOutputWithContext(context.Background())
}

func (i *InterconnectAttachment) ToInterconnectAttachmentOutputWithContext(ctx context.Context) InterconnectAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InterconnectAttachmentOutput)
}

// InterconnectAttachmentArrayInput is an input type that accepts InterconnectAttachmentArray and InterconnectAttachmentArrayOutput values.
// You can construct a concrete instance of `InterconnectAttachmentArrayInput` via:
//
//	InterconnectAttachmentArray{ InterconnectAttachmentArgs{...} }
type InterconnectAttachmentArrayInput interface {
	pulumi.Input

	ToInterconnectAttachmentArrayOutput() InterconnectAttachmentArrayOutput
	ToInterconnectAttachmentArrayOutputWithContext(context.Context) InterconnectAttachmentArrayOutput
}

type InterconnectAttachmentArray []InterconnectAttachmentInput

func (InterconnectAttachmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*InterconnectAttachment)(nil)).Elem()
}

func (i InterconnectAttachmentArray) ToInterconnectAttachmentArrayOutput() InterconnectAttachmentArrayOutput {
	return i.ToInterconnectAttachmentArrayOutputWithContext(context.Background())
}

func (i InterconnectAttachmentArray) ToInterconnectAttachmentArrayOutputWithContext(ctx context.Context) InterconnectAttachmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InterconnectAttachmentArrayOutput)
}

// InterconnectAttachmentMapInput is an input type that accepts InterconnectAttachmentMap and InterconnectAttachmentMapOutput values.
// You can construct a concrete instance of `InterconnectAttachmentMapInput` via:
//
//	InterconnectAttachmentMap{ "key": InterconnectAttachmentArgs{...} }
type InterconnectAttachmentMapInput interface {
	pulumi.Input

	ToInterconnectAttachmentMapOutput() InterconnectAttachmentMapOutput
	ToInterconnectAttachmentMapOutputWithContext(context.Context) InterconnectAttachmentMapOutput
}

type InterconnectAttachmentMap map[string]InterconnectAttachmentInput

func (InterconnectAttachmentMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*InterconnectAttachment)(nil)).Elem()
}

func (i InterconnectAttachmentMap) ToInterconnectAttachmentMapOutput() InterconnectAttachmentMapOutput {
	return i.ToInterconnectAttachmentMapOutputWithContext(context.Background())
}

func (i InterconnectAttachmentMap) ToInterconnectAttachmentMapOutputWithContext(ctx context.Context) InterconnectAttachmentMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InterconnectAttachmentMapOutput)
}

type InterconnectAttachmentOutput struct{ *pulumi.OutputState }

func (InterconnectAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InterconnectAttachment)(nil)).Elem()
}

func (o InterconnectAttachmentOutput) ToInterconnectAttachmentOutput() InterconnectAttachmentOutput {
	return o
}

func (o InterconnectAttachmentOutput) ToInterconnectAttachmentOutputWithContext(ctx context.Context) InterconnectAttachmentOutput {
	return o
}

// The time when the resource was created.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
// fractional digits. Examples: `2014-10-02T15:01:23Z` and `2014-10-02T15:01:23.045123456Z`.
func (o InterconnectAttachmentOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *InterconnectAttachment) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// A free-text description of the resource. Max length 1024 characters.
func (o InterconnectAttachmentOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InterconnectAttachment) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
func (o InterconnectAttachmentOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *InterconnectAttachment) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// The ID of the underlying interconnect that this attachment's traffic will traverse through.
func (o InterconnectAttachmentOutput) Interconnect() pulumi.StringOutput {
	return o.ApplyT(func(v *InterconnectAttachment) pulumi.StringOutput { return v.Interconnect }).(pulumi.StringOutput)
}

// A unique ID that identifies this interconnect attachment.
//
// ***
func (o InterconnectAttachmentOutput) InterconnectAttachmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *InterconnectAttachment) pulumi.StringOutput { return v.InterconnectAttachmentId }).(pulumi.StringOutput)
}

// Labels associated with this resource.
//
// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
func (o InterconnectAttachmentOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *InterconnectAttachment) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// The Google Cloud region to which the target Distributed Cloud Edge zone belongs.
func (o InterconnectAttachmentOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *InterconnectAttachment) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// IP (L3) MTU value of the virtual edge cloud. Default value is `1500`. Possible values are: `1500`, `9000`.
func (o InterconnectAttachmentOutput) Mtu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InterconnectAttachment) pulumi.IntPtrOutput { return v.Mtu }).(pulumi.IntPtrOutput)
}

// The canonical name of this resource, with format
// `projects/{{project}}/locations/{{location}}/zones/{{zone}}/interconnectAttachments/{{interconnect_attachment_id}}`
func (o InterconnectAttachmentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *InterconnectAttachment) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The ID of the network to which this interconnect attachment belongs.
// Must be of the form: `projects/{{project}}/locations/{{location}}/zones/{{zone}}/networks/{{network_id}}`
func (o InterconnectAttachmentOutput) Network() pulumi.StringOutput {
	return o.ApplyT(func(v *InterconnectAttachment) pulumi.StringOutput { return v.Network }).(pulumi.StringOutput)
}

// The ID of the project in which the resource belongs.
// If it is not provided, the provider project is used.
func (o InterconnectAttachmentOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *InterconnectAttachment) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The combination of labels configured directly on the resource
// and default labels configured on the provider.
func (o InterconnectAttachmentOutput) PulumiLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *InterconnectAttachment) pulumi.StringMapOutput { return v.PulumiLabels }).(pulumi.StringMapOutput)
}

// The time when the resource was last updated.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
// fractional digits. Examples: `2014-10-02T15:01:23Z` and `2014-10-02T15:01:23.045123456Z`.
func (o InterconnectAttachmentOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *InterconnectAttachment) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

// VLAN ID provided by user. Must be site-wise unique.
func (o InterconnectAttachmentOutput) VlanId() pulumi.IntOutput {
	return o.ApplyT(func(v *InterconnectAttachment) pulumi.IntOutput { return v.VlanId }).(pulumi.IntOutput)
}

// The name of the target Distributed Cloud Edge zone.
func (o InterconnectAttachmentOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v *InterconnectAttachment) pulumi.StringOutput { return v.Zone }).(pulumi.StringOutput)
}

type InterconnectAttachmentArrayOutput struct{ *pulumi.OutputState }

func (InterconnectAttachmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*InterconnectAttachment)(nil)).Elem()
}

func (o InterconnectAttachmentArrayOutput) ToInterconnectAttachmentArrayOutput() InterconnectAttachmentArrayOutput {
	return o
}

func (o InterconnectAttachmentArrayOutput) ToInterconnectAttachmentArrayOutputWithContext(ctx context.Context) InterconnectAttachmentArrayOutput {
	return o
}

func (o InterconnectAttachmentArrayOutput) Index(i pulumi.IntInput) InterconnectAttachmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *InterconnectAttachment {
		return vs[0].([]*InterconnectAttachment)[vs[1].(int)]
	}).(InterconnectAttachmentOutput)
}

type InterconnectAttachmentMapOutput struct{ *pulumi.OutputState }

func (InterconnectAttachmentMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*InterconnectAttachment)(nil)).Elem()
}

func (o InterconnectAttachmentMapOutput) ToInterconnectAttachmentMapOutput() InterconnectAttachmentMapOutput {
	return o
}

func (o InterconnectAttachmentMapOutput) ToInterconnectAttachmentMapOutputWithContext(ctx context.Context) InterconnectAttachmentMapOutput {
	return o
}

func (o InterconnectAttachmentMapOutput) MapIndex(k pulumi.StringInput) InterconnectAttachmentOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *InterconnectAttachment {
		return vs[0].(map[string]*InterconnectAttachment)[vs[1].(string)]
	}).(InterconnectAttachmentOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InterconnectAttachmentInput)(nil)).Elem(), &InterconnectAttachment{})
	pulumi.RegisterInputType(reflect.TypeOf((*InterconnectAttachmentArrayInput)(nil)).Elem(), InterconnectAttachmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InterconnectAttachmentMapInput)(nil)).Elem(), InterconnectAttachmentMap{})
	pulumi.RegisterOutputType(InterconnectAttachmentOutput{})
	pulumi.RegisterOutputType(InterconnectAttachmentArrayOutput{})
	pulumi.RegisterOutputType(InterconnectAttachmentMapOutput{})
}
