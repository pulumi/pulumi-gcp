// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package edgenetwork

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// A Distributed Cloud Edge network, which provides L3 isolation within a zone.
//
// To get more information about Network, see:
//
// * [API documentation](https://cloud.google.com/distributed-cloud/edge/latest/docs/reference/network/rest/v1/projects.locations.zones.networks)
// * How-to Guides
//   - [Create and manage networks](https://cloud.google.com/distributed-cloud/edge/latest/docs/networks#api)
//
// ## Example Usage
// ### Edgenetwork Network
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/edgenetwork"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := edgenetwork.NewNetwork(ctx, "exampleNetwork", &edgenetwork.NetworkArgs{
//				NetworkId:   pulumi.String("example-network"),
//				Location:    pulumi.String("us-west1"),
//				Zone:        pulumi.String(""),
//				Description: pulumi.String("Example network."),
//				Mtu:         pulumi.Int(9000),
//				Labels: pulumi.StringMap{
//					"environment": pulumi.String("dev"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// # Network can be imported using any of these accepted formats
//
// ```sh
//
//	$ pulumi import gcp:edgenetwork/network:Network default projects/{{project}}/locations/{{location}}/zones/{{zone}}/networks/{{network_id}}
//
// ```
//
// ```sh
//
//	$ pulumi import gcp:edgenetwork/network:Network default {{project}}/{{location}}/{{zone}}/{{network_id}}
//
// ```
//
// ```sh
//
//	$ pulumi import gcp:edgenetwork/network:Network default {{location}}/{{zone}}/{{network_id}}
//
// ```
//
// ```sh
//
//	$ pulumi import gcp:edgenetwork/network:Network default {{location}}/{{network_id}}
//
// ```
//
// ```sh
//
//	$ pulumi import gcp:edgenetwork/network:Network default {{name}}
//
// ```
type Network struct {
	pulumi.CustomResourceState

	// The time when the subnet was created.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
	// fractional digits. Examples: `2014-10-02T15:01:23Z` and `2014-10-02T15:01:23.045123456Z`.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// A free-text description of the resource. Max length 1024 characters.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Labels associated with this resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// The Google Cloud region to which the target Distributed Cloud Edge zone belongs.
	Location pulumi.StringOutput `pulumi:"location"`
	// IP (L3) MTU value of the network. Default value is `1500`. Possible values are: `1500`, `9000`.
	Mtu pulumi.IntPtrOutput `pulumi:"mtu"`
	// The canonical name of this resource, with format
	// `projects/{{project}}/locations/{{location}}/zones/{{zone}}/networks/{{network_id}}`
	Name pulumi.StringOutput `pulumi:"name"`
	// A unique ID that identifies this network.
	//
	// ***
	NetworkId pulumi.StringOutput `pulumi:"networkId"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
	// The time when the subnet was last updated.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
	// fractional digits. Examples: `2014-10-02T15:01:23Z` and `2014-10-02T15:01:23.045123456Z`.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
	// The name of the target Distributed Cloud Edge zone.
	Zone pulumi.StringOutput `pulumi:"zone"`
}

// NewNetwork registers a new resource with the given unique name, arguments, and options.
func NewNetwork(ctx *pulumi.Context,
	name string, args *NetworkArgs, opts ...pulumi.ResourceOption) (*Network, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	if args.NetworkId == nil {
		return nil, errors.New("invalid value for required argument 'NetworkId'")
	}
	if args.Zone == nil {
		return nil, errors.New("invalid value for required argument 'Zone'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Network
	err := ctx.RegisterResource("gcp:edgenetwork/network:Network", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetwork gets an existing Network resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetwork(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkState, opts ...pulumi.ResourceOption) (*Network, error) {
	var resource Network
	err := ctx.ReadResource("gcp:edgenetwork/network:Network", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Network resources.
type networkState struct {
	// The time when the subnet was created.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
	// fractional digits. Examples: `2014-10-02T15:01:23Z` and `2014-10-02T15:01:23.045123456Z`.
	CreateTime *string `pulumi:"createTime"`
	// A free-text description of the resource. Max length 1024 characters.
	Description *string `pulumi:"description"`
	// Labels associated with this resource.
	Labels map[string]string `pulumi:"labels"`
	// The Google Cloud region to which the target Distributed Cloud Edge zone belongs.
	Location *string `pulumi:"location"`
	// IP (L3) MTU value of the network. Default value is `1500`. Possible values are: `1500`, `9000`.
	Mtu *int `pulumi:"mtu"`
	// The canonical name of this resource, with format
	// `projects/{{project}}/locations/{{location}}/zones/{{zone}}/networks/{{network_id}}`
	Name *string `pulumi:"name"`
	// A unique ID that identifies this network.
	//
	// ***
	NetworkId *string `pulumi:"networkId"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// The time when the subnet was last updated.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
	// fractional digits. Examples: `2014-10-02T15:01:23Z` and `2014-10-02T15:01:23.045123456Z`.
	UpdateTime *string `pulumi:"updateTime"`
	// The name of the target Distributed Cloud Edge zone.
	Zone *string `pulumi:"zone"`
}

type NetworkState struct {
	// The time when the subnet was created.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
	// fractional digits. Examples: `2014-10-02T15:01:23Z` and `2014-10-02T15:01:23.045123456Z`.
	CreateTime pulumi.StringPtrInput
	// A free-text description of the resource. Max length 1024 characters.
	Description pulumi.StringPtrInput
	// Labels associated with this resource.
	Labels pulumi.StringMapInput
	// The Google Cloud region to which the target Distributed Cloud Edge zone belongs.
	Location pulumi.StringPtrInput
	// IP (L3) MTU value of the network. Default value is `1500`. Possible values are: `1500`, `9000`.
	Mtu pulumi.IntPtrInput
	// The canonical name of this resource, with format
	// `projects/{{project}}/locations/{{location}}/zones/{{zone}}/networks/{{network_id}}`
	Name pulumi.StringPtrInput
	// A unique ID that identifies this network.
	//
	// ***
	NetworkId pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// The time when the subnet was last updated.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
	// fractional digits. Examples: `2014-10-02T15:01:23Z` and `2014-10-02T15:01:23.045123456Z`.
	UpdateTime pulumi.StringPtrInput
	// The name of the target Distributed Cloud Edge zone.
	Zone pulumi.StringPtrInput
}

func (NetworkState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkState)(nil)).Elem()
}

type networkArgs struct {
	// A free-text description of the resource. Max length 1024 characters.
	Description *string `pulumi:"description"`
	// Labels associated with this resource.
	Labels map[string]string `pulumi:"labels"`
	// The Google Cloud region to which the target Distributed Cloud Edge zone belongs.
	Location string `pulumi:"location"`
	// IP (L3) MTU value of the network. Default value is `1500`. Possible values are: `1500`, `9000`.
	Mtu *int `pulumi:"mtu"`
	// A unique ID that identifies this network.
	//
	// ***
	NetworkId string `pulumi:"networkId"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// The name of the target Distributed Cloud Edge zone.
	Zone string `pulumi:"zone"`
}

// The set of arguments for constructing a Network resource.
type NetworkArgs struct {
	// A free-text description of the resource. Max length 1024 characters.
	Description pulumi.StringPtrInput
	// Labels associated with this resource.
	Labels pulumi.StringMapInput
	// The Google Cloud region to which the target Distributed Cloud Edge zone belongs.
	Location pulumi.StringInput
	// IP (L3) MTU value of the network. Default value is `1500`. Possible values are: `1500`, `9000`.
	Mtu pulumi.IntPtrInput
	// A unique ID that identifies this network.
	//
	// ***
	NetworkId pulumi.StringInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// The name of the target Distributed Cloud Edge zone.
	Zone pulumi.StringInput
}

func (NetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkArgs)(nil)).Elem()
}

type NetworkInput interface {
	pulumi.Input

	ToNetworkOutput() NetworkOutput
	ToNetworkOutputWithContext(ctx context.Context) NetworkOutput
}

func (*Network) ElementType() reflect.Type {
	return reflect.TypeOf((**Network)(nil)).Elem()
}

func (i *Network) ToNetworkOutput() NetworkOutput {
	return i.ToNetworkOutputWithContext(context.Background())
}

func (i *Network) ToNetworkOutputWithContext(ctx context.Context) NetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkOutput)
}

func (i *Network) ToOutput(ctx context.Context) pulumix.Output[*Network] {
	return pulumix.Output[*Network]{
		OutputState: i.ToNetworkOutputWithContext(ctx).OutputState,
	}
}

// NetworkArrayInput is an input type that accepts NetworkArray and NetworkArrayOutput values.
// You can construct a concrete instance of `NetworkArrayInput` via:
//
//	NetworkArray{ NetworkArgs{...} }
type NetworkArrayInput interface {
	pulumi.Input

	ToNetworkArrayOutput() NetworkArrayOutput
	ToNetworkArrayOutputWithContext(context.Context) NetworkArrayOutput
}

type NetworkArray []NetworkInput

func (NetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Network)(nil)).Elem()
}

func (i NetworkArray) ToNetworkArrayOutput() NetworkArrayOutput {
	return i.ToNetworkArrayOutputWithContext(context.Background())
}

func (i NetworkArray) ToNetworkArrayOutputWithContext(ctx context.Context) NetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkArrayOutput)
}

func (i NetworkArray) ToOutput(ctx context.Context) pulumix.Output[[]*Network] {
	return pulumix.Output[[]*Network]{
		OutputState: i.ToNetworkArrayOutputWithContext(ctx).OutputState,
	}
}

// NetworkMapInput is an input type that accepts NetworkMap and NetworkMapOutput values.
// You can construct a concrete instance of `NetworkMapInput` via:
//
//	NetworkMap{ "key": NetworkArgs{...} }
type NetworkMapInput interface {
	pulumi.Input

	ToNetworkMapOutput() NetworkMapOutput
	ToNetworkMapOutputWithContext(context.Context) NetworkMapOutput
}

type NetworkMap map[string]NetworkInput

func (NetworkMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Network)(nil)).Elem()
}

func (i NetworkMap) ToNetworkMapOutput() NetworkMapOutput {
	return i.ToNetworkMapOutputWithContext(context.Background())
}

func (i NetworkMap) ToNetworkMapOutputWithContext(ctx context.Context) NetworkMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkMapOutput)
}

func (i NetworkMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*Network] {
	return pulumix.Output[map[string]*Network]{
		OutputState: i.ToNetworkMapOutputWithContext(ctx).OutputState,
	}
}

type NetworkOutput struct{ *pulumi.OutputState }

func (NetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Network)(nil)).Elem()
}

func (o NetworkOutput) ToNetworkOutput() NetworkOutput {
	return o
}

func (o NetworkOutput) ToNetworkOutputWithContext(ctx context.Context) NetworkOutput {
	return o
}

func (o NetworkOutput) ToOutput(ctx context.Context) pulumix.Output[*Network] {
	return pulumix.Output[*Network]{
		OutputState: o.OutputState,
	}
}

// The time when the subnet was created.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
// fractional digits. Examples: `2014-10-02T15:01:23Z` and `2014-10-02T15:01:23.045123456Z`.
func (o NetworkOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Network) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// A free-text description of the resource. Max length 1024 characters.
func (o NetworkOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Network) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Labels associated with this resource.
func (o NetworkOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Network) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// The Google Cloud region to which the target Distributed Cloud Edge zone belongs.
func (o NetworkOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *Network) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// IP (L3) MTU value of the network. Default value is `1500`. Possible values are: `1500`, `9000`.
func (o NetworkOutput) Mtu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Network) pulumi.IntPtrOutput { return v.Mtu }).(pulumi.IntPtrOutput)
}

// The canonical name of this resource, with format
// `projects/{{project}}/locations/{{location}}/zones/{{zone}}/networks/{{network_id}}`
func (o NetworkOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Network) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// A unique ID that identifies this network.
//
// ***
func (o NetworkOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v *Network) pulumi.StringOutput { return v.NetworkId }).(pulumi.StringOutput)
}

// The ID of the project in which the resource belongs.
// If it is not provided, the provider project is used.
func (o NetworkOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *Network) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The time when the subnet was last updated.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
// fractional digits. Examples: `2014-10-02T15:01:23Z` and `2014-10-02T15:01:23.045123456Z`.
func (o NetworkOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Network) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

// The name of the target Distributed Cloud Edge zone.
func (o NetworkOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v *Network) pulumi.StringOutput { return v.Zone }).(pulumi.StringOutput)
}

type NetworkArrayOutput struct{ *pulumi.OutputState }

func (NetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Network)(nil)).Elem()
}

func (o NetworkArrayOutput) ToNetworkArrayOutput() NetworkArrayOutput {
	return o
}

func (o NetworkArrayOutput) ToNetworkArrayOutputWithContext(ctx context.Context) NetworkArrayOutput {
	return o
}

func (o NetworkArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*Network] {
	return pulumix.Output[[]*Network]{
		OutputState: o.OutputState,
	}
}

func (o NetworkArrayOutput) Index(i pulumi.IntInput) NetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Network {
		return vs[0].([]*Network)[vs[1].(int)]
	}).(NetworkOutput)
}

type NetworkMapOutput struct{ *pulumi.OutputState }

func (NetworkMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Network)(nil)).Elem()
}

func (o NetworkMapOutput) ToNetworkMapOutput() NetworkMapOutput {
	return o
}

func (o NetworkMapOutput) ToNetworkMapOutputWithContext(ctx context.Context) NetworkMapOutput {
	return o
}

func (o NetworkMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*Network] {
	return pulumix.Output[map[string]*Network]{
		OutputState: o.OutputState,
	}
}

func (o NetworkMapOutput) MapIndex(k pulumi.StringInput) NetworkOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Network {
		return vs[0].(map[string]*Network)[vs[1].(string)]
	}).(NetworkOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkInput)(nil)).Elem(), &Network{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkArrayInput)(nil)).Elem(), NetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkMapInput)(nil)).Elem(), NetworkMap{})
	pulumi.RegisterOutputType(NetworkOutput{})
	pulumi.RegisterOutputType(NetworkArrayOutput{})
	pulumi.RegisterOutputType(NetworkMapOutput{})
}
