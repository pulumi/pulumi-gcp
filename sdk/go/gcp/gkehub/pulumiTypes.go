// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package gkehub

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type FeatureIamBindingCondition struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

// FeatureIamBindingConditionInput is an input type that accepts FeatureIamBindingConditionArgs and FeatureIamBindingConditionOutput values.
// You can construct a concrete instance of `FeatureIamBindingConditionInput` via:
//
//	FeatureIamBindingConditionArgs{...}
type FeatureIamBindingConditionInput interface {
	pulumi.Input

	ToFeatureIamBindingConditionOutput() FeatureIamBindingConditionOutput
	ToFeatureIamBindingConditionOutputWithContext(context.Context) FeatureIamBindingConditionOutput
}

type FeatureIamBindingConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (FeatureIamBindingConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FeatureIamBindingCondition)(nil)).Elem()
}

func (i FeatureIamBindingConditionArgs) ToFeatureIamBindingConditionOutput() FeatureIamBindingConditionOutput {
	return i.ToFeatureIamBindingConditionOutputWithContext(context.Background())
}

func (i FeatureIamBindingConditionArgs) ToFeatureIamBindingConditionOutputWithContext(ctx context.Context) FeatureIamBindingConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureIamBindingConditionOutput)
}

func (i FeatureIamBindingConditionArgs) ToFeatureIamBindingConditionPtrOutput() FeatureIamBindingConditionPtrOutput {
	return i.ToFeatureIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i FeatureIamBindingConditionArgs) ToFeatureIamBindingConditionPtrOutputWithContext(ctx context.Context) FeatureIamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureIamBindingConditionOutput).ToFeatureIamBindingConditionPtrOutputWithContext(ctx)
}

// FeatureIamBindingConditionPtrInput is an input type that accepts FeatureIamBindingConditionArgs, FeatureIamBindingConditionPtr and FeatureIamBindingConditionPtrOutput values.
// You can construct a concrete instance of `FeatureIamBindingConditionPtrInput` via:
//
//	        FeatureIamBindingConditionArgs{...}
//
//	or:
//
//	        nil
type FeatureIamBindingConditionPtrInput interface {
	pulumi.Input

	ToFeatureIamBindingConditionPtrOutput() FeatureIamBindingConditionPtrOutput
	ToFeatureIamBindingConditionPtrOutputWithContext(context.Context) FeatureIamBindingConditionPtrOutput
}

type featureIamBindingConditionPtrType FeatureIamBindingConditionArgs

func FeatureIamBindingConditionPtr(v *FeatureIamBindingConditionArgs) FeatureIamBindingConditionPtrInput {
	return (*featureIamBindingConditionPtrType)(v)
}

func (*featureIamBindingConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FeatureIamBindingCondition)(nil)).Elem()
}

func (i *featureIamBindingConditionPtrType) ToFeatureIamBindingConditionPtrOutput() FeatureIamBindingConditionPtrOutput {
	return i.ToFeatureIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i *featureIamBindingConditionPtrType) ToFeatureIamBindingConditionPtrOutputWithContext(ctx context.Context) FeatureIamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureIamBindingConditionPtrOutput)
}

type FeatureIamBindingConditionOutput struct{ *pulumi.OutputState }

func (FeatureIamBindingConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FeatureIamBindingCondition)(nil)).Elem()
}

func (o FeatureIamBindingConditionOutput) ToFeatureIamBindingConditionOutput() FeatureIamBindingConditionOutput {
	return o
}

func (o FeatureIamBindingConditionOutput) ToFeatureIamBindingConditionOutputWithContext(ctx context.Context) FeatureIamBindingConditionOutput {
	return o
}

func (o FeatureIamBindingConditionOutput) ToFeatureIamBindingConditionPtrOutput() FeatureIamBindingConditionPtrOutput {
	return o.ToFeatureIamBindingConditionPtrOutputWithContext(context.Background())
}

func (o FeatureIamBindingConditionOutput) ToFeatureIamBindingConditionPtrOutputWithContext(ctx context.Context) FeatureIamBindingConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FeatureIamBindingCondition) *FeatureIamBindingCondition {
		return &v
	}).(FeatureIamBindingConditionPtrOutput)
}

func (o FeatureIamBindingConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FeatureIamBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o FeatureIamBindingConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v FeatureIamBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o FeatureIamBindingConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v FeatureIamBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

type FeatureIamBindingConditionPtrOutput struct{ *pulumi.OutputState }

func (FeatureIamBindingConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FeatureIamBindingCondition)(nil)).Elem()
}

func (o FeatureIamBindingConditionPtrOutput) ToFeatureIamBindingConditionPtrOutput() FeatureIamBindingConditionPtrOutput {
	return o
}

func (o FeatureIamBindingConditionPtrOutput) ToFeatureIamBindingConditionPtrOutputWithContext(ctx context.Context) FeatureIamBindingConditionPtrOutput {
	return o
}

func (o FeatureIamBindingConditionPtrOutput) Elem() FeatureIamBindingConditionOutput {
	return o.ApplyT(func(v *FeatureIamBindingCondition) FeatureIamBindingCondition {
		if v != nil {
			return *v
		}
		var ret FeatureIamBindingCondition
		return ret
	}).(FeatureIamBindingConditionOutput)
}

func (o FeatureIamBindingConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FeatureIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o FeatureIamBindingConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FeatureIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

func (o FeatureIamBindingConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FeatureIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type FeatureIamMemberCondition struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

// FeatureIamMemberConditionInput is an input type that accepts FeatureIamMemberConditionArgs and FeatureIamMemberConditionOutput values.
// You can construct a concrete instance of `FeatureIamMemberConditionInput` via:
//
//	FeatureIamMemberConditionArgs{...}
type FeatureIamMemberConditionInput interface {
	pulumi.Input

	ToFeatureIamMemberConditionOutput() FeatureIamMemberConditionOutput
	ToFeatureIamMemberConditionOutputWithContext(context.Context) FeatureIamMemberConditionOutput
}

type FeatureIamMemberConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (FeatureIamMemberConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FeatureIamMemberCondition)(nil)).Elem()
}

func (i FeatureIamMemberConditionArgs) ToFeatureIamMemberConditionOutput() FeatureIamMemberConditionOutput {
	return i.ToFeatureIamMemberConditionOutputWithContext(context.Background())
}

func (i FeatureIamMemberConditionArgs) ToFeatureIamMemberConditionOutputWithContext(ctx context.Context) FeatureIamMemberConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureIamMemberConditionOutput)
}

func (i FeatureIamMemberConditionArgs) ToFeatureIamMemberConditionPtrOutput() FeatureIamMemberConditionPtrOutput {
	return i.ToFeatureIamMemberConditionPtrOutputWithContext(context.Background())
}

func (i FeatureIamMemberConditionArgs) ToFeatureIamMemberConditionPtrOutputWithContext(ctx context.Context) FeatureIamMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureIamMemberConditionOutput).ToFeatureIamMemberConditionPtrOutputWithContext(ctx)
}

// FeatureIamMemberConditionPtrInput is an input type that accepts FeatureIamMemberConditionArgs, FeatureIamMemberConditionPtr and FeatureIamMemberConditionPtrOutput values.
// You can construct a concrete instance of `FeatureIamMemberConditionPtrInput` via:
//
//	        FeatureIamMemberConditionArgs{...}
//
//	or:
//
//	        nil
type FeatureIamMemberConditionPtrInput interface {
	pulumi.Input

	ToFeatureIamMemberConditionPtrOutput() FeatureIamMemberConditionPtrOutput
	ToFeatureIamMemberConditionPtrOutputWithContext(context.Context) FeatureIamMemberConditionPtrOutput
}

type featureIamMemberConditionPtrType FeatureIamMemberConditionArgs

func FeatureIamMemberConditionPtr(v *FeatureIamMemberConditionArgs) FeatureIamMemberConditionPtrInput {
	return (*featureIamMemberConditionPtrType)(v)
}

func (*featureIamMemberConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FeatureIamMemberCondition)(nil)).Elem()
}

func (i *featureIamMemberConditionPtrType) ToFeatureIamMemberConditionPtrOutput() FeatureIamMemberConditionPtrOutput {
	return i.ToFeatureIamMemberConditionPtrOutputWithContext(context.Background())
}

func (i *featureIamMemberConditionPtrType) ToFeatureIamMemberConditionPtrOutputWithContext(ctx context.Context) FeatureIamMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureIamMemberConditionPtrOutput)
}

type FeatureIamMemberConditionOutput struct{ *pulumi.OutputState }

func (FeatureIamMemberConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FeatureIamMemberCondition)(nil)).Elem()
}

func (o FeatureIamMemberConditionOutput) ToFeatureIamMemberConditionOutput() FeatureIamMemberConditionOutput {
	return o
}

func (o FeatureIamMemberConditionOutput) ToFeatureIamMemberConditionOutputWithContext(ctx context.Context) FeatureIamMemberConditionOutput {
	return o
}

func (o FeatureIamMemberConditionOutput) ToFeatureIamMemberConditionPtrOutput() FeatureIamMemberConditionPtrOutput {
	return o.ToFeatureIamMemberConditionPtrOutputWithContext(context.Background())
}

func (o FeatureIamMemberConditionOutput) ToFeatureIamMemberConditionPtrOutputWithContext(ctx context.Context) FeatureIamMemberConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FeatureIamMemberCondition) *FeatureIamMemberCondition {
		return &v
	}).(FeatureIamMemberConditionPtrOutput)
}

func (o FeatureIamMemberConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FeatureIamMemberCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o FeatureIamMemberConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v FeatureIamMemberCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o FeatureIamMemberConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v FeatureIamMemberCondition) string { return v.Title }).(pulumi.StringOutput)
}

type FeatureIamMemberConditionPtrOutput struct{ *pulumi.OutputState }

func (FeatureIamMemberConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FeatureIamMemberCondition)(nil)).Elem()
}

func (o FeatureIamMemberConditionPtrOutput) ToFeatureIamMemberConditionPtrOutput() FeatureIamMemberConditionPtrOutput {
	return o
}

func (o FeatureIamMemberConditionPtrOutput) ToFeatureIamMemberConditionPtrOutputWithContext(ctx context.Context) FeatureIamMemberConditionPtrOutput {
	return o
}

func (o FeatureIamMemberConditionPtrOutput) Elem() FeatureIamMemberConditionOutput {
	return o.ApplyT(func(v *FeatureIamMemberCondition) FeatureIamMemberCondition {
		if v != nil {
			return *v
		}
		var ret FeatureIamMemberCondition
		return ret
	}).(FeatureIamMemberConditionOutput)
}

func (o FeatureIamMemberConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FeatureIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o FeatureIamMemberConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FeatureIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

func (o FeatureIamMemberConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FeatureIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type FeatureMembershipConfigmanagement struct {
	// Binauthz configuration for the cluster. Structure is documented below.
	Binauthz *FeatureMembershipConfigmanagementBinauthz `pulumi:"binauthz"`
	// Config Sync configuration for the cluster. Structure is documented below.
	ConfigSync *FeatureMembershipConfigmanagementConfigSync `pulumi:"configSync"`
	// Hierarchy Controller configuration for the cluster. Structure is documented below.
	HierarchyController *FeatureMembershipConfigmanagementHierarchyController `pulumi:"hierarchyController"`
	// Policy Controller configuration for the cluster. Structure is documented below.
	PolicyController *FeatureMembershipConfigmanagementPolicyController `pulumi:"policyController"`
	// Version of ACM installed.
	Version *string `pulumi:"version"`
}

// FeatureMembershipConfigmanagementInput is an input type that accepts FeatureMembershipConfigmanagementArgs and FeatureMembershipConfigmanagementOutput values.
// You can construct a concrete instance of `FeatureMembershipConfigmanagementInput` via:
//
//	FeatureMembershipConfigmanagementArgs{...}
type FeatureMembershipConfigmanagementInput interface {
	pulumi.Input

	ToFeatureMembershipConfigmanagementOutput() FeatureMembershipConfigmanagementOutput
	ToFeatureMembershipConfigmanagementOutputWithContext(context.Context) FeatureMembershipConfigmanagementOutput
}

type FeatureMembershipConfigmanagementArgs struct {
	// Binauthz configuration for the cluster. Structure is documented below.
	Binauthz FeatureMembershipConfigmanagementBinauthzPtrInput `pulumi:"binauthz"`
	// Config Sync configuration for the cluster. Structure is documented below.
	ConfigSync FeatureMembershipConfigmanagementConfigSyncPtrInput `pulumi:"configSync"`
	// Hierarchy Controller configuration for the cluster. Structure is documented below.
	HierarchyController FeatureMembershipConfigmanagementHierarchyControllerPtrInput `pulumi:"hierarchyController"`
	// Policy Controller configuration for the cluster. Structure is documented below.
	PolicyController FeatureMembershipConfigmanagementPolicyControllerPtrInput `pulumi:"policyController"`
	// Version of ACM installed.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (FeatureMembershipConfigmanagementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FeatureMembershipConfigmanagement)(nil)).Elem()
}

func (i FeatureMembershipConfigmanagementArgs) ToFeatureMembershipConfigmanagementOutput() FeatureMembershipConfigmanagementOutput {
	return i.ToFeatureMembershipConfigmanagementOutputWithContext(context.Background())
}

func (i FeatureMembershipConfigmanagementArgs) ToFeatureMembershipConfigmanagementOutputWithContext(ctx context.Context) FeatureMembershipConfigmanagementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureMembershipConfigmanagementOutput)
}

func (i FeatureMembershipConfigmanagementArgs) ToFeatureMembershipConfigmanagementPtrOutput() FeatureMembershipConfigmanagementPtrOutput {
	return i.ToFeatureMembershipConfigmanagementPtrOutputWithContext(context.Background())
}

func (i FeatureMembershipConfigmanagementArgs) ToFeatureMembershipConfigmanagementPtrOutputWithContext(ctx context.Context) FeatureMembershipConfigmanagementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureMembershipConfigmanagementOutput).ToFeatureMembershipConfigmanagementPtrOutputWithContext(ctx)
}

// FeatureMembershipConfigmanagementPtrInput is an input type that accepts FeatureMembershipConfigmanagementArgs, FeatureMembershipConfigmanagementPtr and FeatureMembershipConfigmanagementPtrOutput values.
// You can construct a concrete instance of `FeatureMembershipConfigmanagementPtrInput` via:
//
//	        FeatureMembershipConfigmanagementArgs{...}
//
//	or:
//
//	        nil
type FeatureMembershipConfigmanagementPtrInput interface {
	pulumi.Input

	ToFeatureMembershipConfigmanagementPtrOutput() FeatureMembershipConfigmanagementPtrOutput
	ToFeatureMembershipConfigmanagementPtrOutputWithContext(context.Context) FeatureMembershipConfigmanagementPtrOutput
}

type featureMembershipConfigmanagementPtrType FeatureMembershipConfigmanagementArgs

func FeatureMembershipConfigmanagementPtr(v *FeatureMembershipConfigmanagementArgs) FeatureMembershipConfigmanagementPtrInput {
	return (*featureMembershipConfigmanagementPtrType)(v)
}

func (*featureMembershipConfigmanagementPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FeatureMembershipConfigmanagement)(nil)).Elem()
}

func (i *featureMembershipConfigmanagementPtrType) ToFeatureMembershipConfigmanagementPtrOutput() FeatureMembershipConfigmanagementPtrOutput {
	return i.ToFeatureMembershipConfigmanagementPtrOutputWithContext(context.Background())
}

func (i *featureMembershipConfigmanagementPtrType) ToFeatureMembershipConfigmanagementPtrOutputWithContext(ctx context.Context) FeatureMembershipConfigmanagementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureMembershipConfigmanagementPtrOutput)
}

type FeatureMembershipConfigmanagementOutput struct{ *pulumi.OutputState }

func (FeatureMembershipConfigmanagementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FeatureMembershipConfigmanagement)(nil)).Elem()
}

func (o FeatureMembershipConfigmanagementOutput) ToFeatureMembershipConfigmanagementOutput() FeatureMembershipConfigmanagementOutput {
	return o
}

func (o FeatureMembershipConfigmanagementOutput) ToFeatureMembershipConfigmanagementOutputWithContext(ctx context.Context) FeatureMembershipConfigmanagementOutput {
	return o
}

func (o FeatureMembershipConfigmanagementOutput) ToFeatureMembershipConfigmanagementPtrOutput() FeatureMembershipConfigmanagementPtrOutput {
	return o.ToFeatureMembershipConfigmanagementPtrOutputWithContext(context.Background())
}

func (o FeatureMembershipConfigmanagementOutput) ToFeatureMembershipConfigmanagementPtrOutputWithContext(ctx context.Context) FeatureMembershipConfigmanagementPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FeatureMembershipConfigmanagement) *FeatureMembershipConfigmanagement {
		return &v
	}).(FeatureMembershipConfigmanagementPtrOutput)
}

// Binauthz configuration for the cluster. Structure is documented below.
func (o FeatureMembershipConfigmanagementOutput) Binauthz() FeatureMembershipConfigmanagementBinauthzPtrOutput {
	return o.ApplyT(func(v FeatureMembershipConfigmanagement) *FeatureMembershipConfigmanagementBinauthz {
		return v.Binauthz
	}).(FeatureMembershipConfigmanagementBinauthzPtrOutput)
}

// Config Sync configuration for the cluster. Structure is documented below.
func (o FeatureMembershipConfigmanagementOutput) ConfigSync() FeatureMembershipConfigmanagementConfigSyncPtrOutput {
	return o.ApplyT(func(v FeatureMembershipConfigmanagement) *FeatureMembershipConfigmanagementConfigSync {
		return v.ConfigSync
	}).(FeatureMembershipConfigmanagementConfigSyncPtrOutput)
}

// Hierarchy Controller configuration for the cluster. Structure is documented below.
func (o FeatureMembershipConfigmanagementOutput) HierarchyController() FeatureMembershipConfigmanagementHierarchyControllerPtrOutput {
	return o.ApplyT(func(v FeatureMembershipConfigmanagement) *FeatureMembershipConfigmanagementHierarchyController {
		return v.HierarchyController
	}).(FeatureMembershipConfigmanagementHierarchyControllerPtrOutput)
}

// Policy Controller configuration for the cluster. Structure is documented below.
func (o FeatureMembershipConfigmanagementOutput) PolicyController() FeatureMembershipConfigmanagementPolicyControllerPtrOutput {
	return o.ApplyT(func(v FeatureMembershipConfigmanagement) *FeatureMembershipConfigmanagementPolicyController {
		return v.PolicyController
	}).(FeatureMembershipConfigmanagementPolicyControllerPtrOutput)
}

// Version of ACM installed.
func (o FeatureMembershipConfigmanagementOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FeatureMembershipConfigmanagement) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type FeatureMembershipConfigmanagementPtrOutput struct{ *pulumi.OutputState }

func (FeatureMembershipConfigmanagementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FeatureMembershipConfigmanagement)(nil)).Elem()
}

func (o FeatureMembershipConfigmanagementPtrOutput) ToFeatureMembershipConfigmanagementPtrOutput() FeatureMembershipConfigmanagementPtrOutput {
	return o
}

func (o FeatureMembershipConfigmanagementPtrOutput) ToFeatureMembershipConfigmanagementPtrOutputWithContext(ctx context.Context) FeatureMembershipConfigmanagementPtrOutput {
	return o
}

func (o FeatureMembershipConfigmanagementPtrOutput) Elem() FeatureMembershipConfigmanagementOutput {
	return o.ApplyT(func(v *FeatureMembershipConfigmanagement) FeatureMembershipConfigmanagement {
		if v != nil {
			return *v
		}
		var ret FeatureMembershipConfigmanagement
		return ret
	}).(FeatureMembershipConfigmanagementOutput)
}

// Binauthz configuration for the cluster. Structure is documented below.
func (o FeatureMembershipConfigmanagementPtrOutput) Binauthz() FeatureMembershipConfigmanagementBinauthzPtrOutput {
	return o.ApplyT(func(v *FeatureMembershipConfigmanagement) *FeatureMembershipConfigmanagementBinauthz {
		if v == nil {
			return nil
		}
		return v.Binauthz
	}).(FeatureMembershipConfigmanagementBinauthzPtrOutput)
}

// Config Sync configuration for the cluster. Structure is documented below.
func (o FeatureMembershipConfigmanagementPtrOutput) ConfigSync() FeatureMembershipConfigmanagementConfigSyncPtrOutput {
	return o.ApplyT(func(v *FeatureMembershipConfigmanagement) *FeatureMembershipConfigmanagementConfigSync {
		if v == nil {
			return nil
		}
		return v.ConfigSync
	}).(FeatureMembershipConfigmanagementConfigSyncPtrOutput)
}

// Hierarchy Controller configuration for the cluster. Structure is documented below.
func (o FeatureMembershipConfigmanagementPtrOutput) HierarchyController() FeatureMembershipConfigmanagementHierarchyControllerPtrOutput {
	return o.ApplyT(func(v *FeatureMembershipConfigmanagement) *FeatureMembershipConfigmanagementHierarchyController {
		if v == nil {
			return nil
		}
		return v.HierarchyController
	}).(FeatureMembershipConfigmanagementHierarchyControllerPtrOutput)
}

// Policy Controller configuration for the cluster. Structure is documented below.
func (o FeatureMembershipConfigmanagementPtrOutput) PolicyController() FeatureMembershipConfigmanagementPolicyControllerPtrOutput {
	return o.ApplyT(func(v *FeatureMembershipConfigmanagement) *FeatureMembershipConfigmanagementPolicyController {
		if v == nil {
			return nil
		}
		return v.PolicyController
	}).(FeatureMembershipConfigmanagementPolicyControllerPtrOutput)
}

// Version of ACM installed.
func (o FeatureMembershipConfigmanagementPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FeatureMembershipConfigmanagement) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

type FeatureMembershipConfigmanagementBinauthz struct {
	// Whether binauthz is enabled in this cluster.
	Enabled *bool `pulumi:"enabled"`
}

// FeatureMembershipConfigmanagementBinauthzInput is an input type that accepts FeatureMembershipConfigmanagementBinauthzArgs and FeatureMembershipConfigmanagementBinauthzOutput values.
// You can construct a concrete instance of `FeatureMembershipConfigmanagementBinauthzInput` via:
//
//	FeatureMembershipConfigmanagementBinauthzArgs{...}
type FeatureMembershipConfigmanagementBinauthzInput interface {
	pulumi.Input

	ToFeatureMembershipConfigmanagementBinauthzOutput() FeatureMembershipConfigmanagementBinauthzOutput
	ToFeatureMembershipConfigmanagementBinauthzOutputWithContext(context.Context) FeatureMembershipConfigmanagementBinauthzOutput
}

type FeatureMembershipConfigmanagementBinauthzArgs struct {
	// Whether binauthz is enabled in this cluster.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (FeatureMembershipConfigmanagementBinauthzArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FeatureMembershipConfigmanagementBinauthz)(nil)).Elem()
}

func (i FeatureMembershipConfigmanagementBinauthzArgs) ToFeatureMembershipConfigmanagementBinauthzOutput() FeatureMembershipConfigmanagementBinauthzOutput {
	return i.ToFeatureMembershipConfigmanagementBinauthzOutputWithContext(context.Background())
}

func (i FeatureMembershipConfigmanagementBinauthzArgs) ToFeatureMembershipConfigmanagementBinauthzOutputWithContext(ctx context.Context) FeatureMembershipConfigmanagementBinauthzOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureMembershipConfigmanagementBinauthzOutput)
}

func (i FeatureMembershipConfigmanagementBinauthzArgs) ToFeatureMembershipConfigmanagementBinauthzPtrOutput() FeatureMembershipConfigmanagementBinauthzPtrOutput {
	return i.ToFeatureMembershipConfigmanagementBinauthzPtrOutputWithContext(context.Background())
}

func (i FeatureMembershipConfigmanagementBinauthzArgs) ToFeatureMembershipConfigmanagementBinauthzPtrOutputWithContext(ctx context.Context) FeatureMembershipConfigmanagementBinauthzPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureMembershipConfigmanagementBinauthzOutput).ToFeatureMembershipConfigmanagementBinauthzPtrOutputWithContext(ctx)
}

// FeatureMembershipConfigmanagementBinauthzPtrInput is an input type that accepts FeatureMembershipConfigmanagementBinauthzArgs, FeatureMembershipConfigmanagementBinauthzPtr and FeatureMembershipConfigmanagementBinauthzPtrOutput values.
// You can construct a concrete instance of `FeatureMembershipConfigmanagementBinauthzPtrInput` via:
//
//	        FeatureMembershipConfigmanagementBinauthzArgs{...}
//
//	or:
//
//	        nil
type FeatureMembershipConfigmanagementBinauthzPtrInput interface {
	pulumi.Input

	ToFeatureMembershipConfigmanagementBinauthzPtrOutput() FeatureMembershipConfigmanagementBinauthzPtrOutput
	ToFeatureMembershipConfigmanagementBinauthzPtrOutputWithContext(context.Context) FeatureMembershipConfigmanagementBinauthzPtrOutput
}

type featureMembershipConfigmanagementBinauthzPtrType FeatureMembershipConfigmanagementBinauthzArgs

func FeatureMembershipConfigmanagementBinauthzPtr(v *FeatureMembershipConfigmanagementBinauthzArgs) FeatureMembershipConfigmanagementBinauthzPtrInput {
	return (*featureMembershipConfigmanagementBinauthzPtrType)(v)
}

func (*featureMembershipConfigmanagementBinauthzPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FeatureMembershipConfigmanagementBinauthz)(nil)).Elem()
}

func (i *featureMembershipConfigmanagementBinauthzPtrType) ToFeatureMembershipConfigmanagementBinauthzPtrOutput() FeatureMembershipConfigmanagementBinauthzPtrOutput {
	return i.ToFeatureMembershipConfigmanagementBinauthzPtrOutputWithContext(context.Background())
}

func (i *featureMembershipConfigmanagementBinauthzPtrType) ToFeatureMembershipConfigmanagementBinauthzPtrOutputWithContext(ctx context.Context) FeatureMembershipConfigmanagementBinauthzPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureMembershipConfigmanagementBinauthzPtrOutput)
}

type FeatureMembershipConfigmanagementBinauthzOutput struct{ *pulumi.OutputState }

func (FeatureMembershipConfigmanagementBinauthzOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FeatureMembershipConfigmanagementBinauthz)(nil)).Elem()
}

func (o FeatureMembershipConfigmanagementBinauthzOutput) ToFeatureMembershipConfigmanagementBinauthzOutput() FeatureMembershipConfigmanagementBinauthzOutput {
	return o
}

func (o FeatureMembershipConfigmanagementBinauthzOutput) ToFeatureMembershipConfigmanagementBinauthzOutputWithContext(ctx context.Context) FeatureMembershipConfigmanagementBinauthzOutput {
	return o
}

func (o FeatureMembershipConfigmanagementBinauthzOutput) ToFeatureMembershipConfigmanagementBinauthzPtrOutput() FeatureMembershipConfigmanagementBinauthzPtrOutput {
	return o.ToFeatureMembershipConfigmanagementBinauthzPtrOutputWithContext(context.Background())
}

func (o FeatureMembershipConfigmanagementBinauthzOutput) ToFeatureMembershipConfigmanagementBinauthzPtrOutputWithContext(ctx context.Context) FeatureMembershipConfigmanagementBinauthzPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FeatureMembershipConfigmanagementBinauthz) *FeatureMembershipConfigmanagementBinauthz {
		return &v
	}).(FeatureMembershipConfigmanagementBinauthzPtrOutput)
}

// Whether binauthz is enabled in this cluster.
func (o FeatureMembershipConfigmanagementBinauthzOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FeatureMembershipConfigmanagementBinauthz) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type FeatureMembershipConfigmanagementBinauthzPtrOutput struct{ *pulumi.OutputState }

func (FeatureMembershipConfigmanagementBinauthzPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FeatureMembershipConfigmanagementBinauthz)(nil)).Elem()
}

func (o FeatureMembershipConfigmanagementBinauthzPtrOutput) ToFeatureMembershipConfigmanagementBinauthzPtrOutput() FeatureMembershipConfigmanagementBinauthzPtrOutput {
	return o
}

func (o FeatureMembershipConfigmanagementBinauthzPtrOutput) ToFeatureMembershipConfigmanagementBinauthzPtrOutputWithContext(ctx context.Context) FeatureMembershipConfigmanagementBinauthzPtrOutput {
	return o
}

func (o FeatureMembershipConfigmanagementBinauthzPtrOutput) Elem() FeatureMembershipConfigmanagementBinauthzOutput {
	return o.ApplyT(func(v *FeatureMembershipConfigmanagementBinauthz) FeatureMembershipConfigmanagementBinauthz {
		if v != nil {
			return *v
		}
		var ret FeatureMembershipConfigmanagementBinauthz
		return ret
	}).(FeatureMembershipConfigmanagementBinauthzOutput)
}

// Whether binauthz is enabled in this cluster.
func (o FeatureMembershipConfigmanagementBinauthzPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FeatureMembershipConfigmanagementBinauthz) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type FeatureMembershipConfigmanagementConfigSync struct {
	// (Optional) Structure is documented below.
	Git *FeatureMembershipConfigmanagementConfigSyncGit `pulumi:"git"`
	// (Optional) Supported from ACM versions 1.12.0 onwards. Structure is documented below.
	//
	// Use either `git` or `oci` config option.
	Oci *FeatureMembershipConfigmanagementConfigSyncOci `pulumi:"oci"`
	// Supported from ACM versions 1.10.0 onwards. Set to true to enable the Config Sync admission webhook to prevent drifts. If set to "false", disables the Config Sync admission webhook and does not prevent drifts.
	PreventDrift *bool `pulumi:"preventDrift"`
	// Specifies whether the Config Sync Repo is in "hierarchical" or "unstructured" mode.
	SourceFormat *string `pulumi:"sourceFormat"`
}

// FeatureMembershipConfigmanagementConfigSyncInput is an input type that accepts FeatureMembershipConfigmanagementConfigSyncArgs and FeatureMembershipConfigmanagementConfigSyncOutput values.
// You can construct a concrete instance of `FeatureMembershipConfigmanagementConfigSyncInput` via:
//
//	FeatureMembershipConfigmanagementConfigSyncArgs{...}
type FeatureMembershipConfigmanagementConfigSyncInput interface {
	pulumi.Input

	ToFeatureMembershipConfigmanagementConfigSyncOutput() FeatureMembershipConfigmanagementConfigSyncOutput
	ToFeatureMembershipConfigmanagementConfigSyncOutputWithContext(context.Context) FeatureMembershipConfigmanagementConfigSyncOutput
}

type FeatureMembershipConfigmanagementConfigSyncArgs struct {
	// (Optional) Structure is documented below.
	Git FeatureMembershipConfigmanagementConfigSyncGitPtrInput `pulumi:"git"`
	// (Optional) Supported from ACM versions 1.12.0 onwards. Structure is documented below.
	//
	// Use either `git` or `oci` config option.
	Oci FeatureMembershipConfigmanagementConfigSyncOciPtrInput `pulumi:"oci"`
	// Supported from ACM versions 1.10.0 onwards. Set to true to enable the Config Sync admission webhook to prevent drifts. If set to "false", disables the Config Sync admission webhook and does not prevent drifts.
	PreventDrift pulumi.BoolPtrInput `pulumi:"preventDrift"`
	// Specifies whether the Config Sync Repo is in "hierarchical" or "unstructured" mode.
	SourceFormat pulumi.StringPtrInput `pulumi:"sourceFormat"`
}

func (FeatureMembershipConfigmanagementConfigSyncArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FeatureMembershipConfigmanagementConfigSync)(nil)).Elem()
}

func (i FeatureMembershipConfigmanagementConfigSyncArgs) ToFeatureMembershipConfigmanagementConfigSyncOutput() FeatureMembershipConfigmanagementConfigSyncOutput {
	return i.ToFeatureMembershipConfigmanagementConfigSyncOutputWithContext(context.Background())
}

func (i FeatureMembershipConfigmanagementConfigSyncArgs) ToFeatureMembershipConfigmanagementConfigSyncOutputWithContext(ctx context.Context) FeatureMembershipConfigmanagementConfigSyncOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureMembershipConfigmanagementConfigSyncOutput)
}

func (i FeatureMembershipConfigmanagementConfigSyncArgs) ToFeatureMembershipConfigmanagementConfigSyncPtrOutput() FeatureMembershipConfigmanagementConfigSyncPtrOutput {
	return i.ToFeatureMembershipConfigmanagementConfigSyncPtrOutputWithContext(context.Background())
}

func (i FeatureMembershipConfigmanagementConfigSyncArgs) ToFeatureMembershipConfigmanagementConfigSyncPtrOutputWithContext(ctx context.Context) FeatureMembershipConfigmanagementConfigSyncPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureMembershipConfigmanagementConfigSyncOutput).ToFeatureMembershipConfigmanagementConfigSyncPtrOutputWithContext(ctx)
}

// FeatureMembershipConfigmanagementConfigSyncPtrInput is an input type that accepts FeatureMembershipConfigmanagementConfigSyncArgs, FeatureMembershipConfigmanagementConfigSyncPtr and FeatureMembershipConfigmanagementConfigSyncPtrOutput values.
// You can construct a concrete instance of `FeatureMembershipConfigmanagementConfigSyncPtrInput` via:
//
//	        FeatureMembershipConfigmanagementConfigSyncArgs{...}
//
//	or:
//
//	        nil
type FeatureMembershipConfigmanagementConfigSyncPtrInput interface {
	pulumi.Input

	ToFeatureMembershipConfigmanagementConfigSyncPtrOutput() FeatureMembershipConfigmanagementConfigSyncPtrOutput
	ToFeatureMembershipConfigmanagementConfigSyncPtrOutputWithContext(context.Context) FeatureMembershipConfigmanagementConfigSyncPtrOutput
}

type featureMembershipConfigmanagementConfigSyncPtrType FeatureMembershipConfigmanagementConfigSyncArgs

func FeatureMembershipConfigmanagementConfigSyncPtr(v *FeatureMembershipConfigmanagementConfigSyncArgs) FeatureMembershipConfigmanagementConfigSyncPtrInput {
	return (*featureMembershipConfigmanagementConfigSyncPtrType)(v)
}

func (*featureMembershipConfigmanagementConfigSyncPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FeatureMembershipConfigmanagementConfigSync)(nil)).Elem()
}

func (i *featureMembershipConfigmanagementConfigSyncPtrType) ToFeatureMembershipConfigmanagementConfigSyncPtrOutput() FeatureMembershipConfigmanagementConfigSyncPtrOutput {
	return i.ToFeatureMembershipConfigmanagementConfigSyncPtrOutputWithContext(context.Background())
}

func (i *featureMembershipConfigmanagementConfigSyncPtrType) ToFeatureMembershipConfigmanagementConfigSyncPtrOutputWithContext(ctx context.Context) FeatureMembershipConfigmanagementConfigSyncPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureMembershipConfigmanagementConfigSyncPtrOutput)
}

type FeatureMembershipConfigmanagementConfigSyncOutput struct{ *pulumi.OutputState }

func (FeatureMembershipConfigmanagementConfigSyncOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FeatureMembershipConfigmanagementConfigSync)(nil)).Elem()
}

func (o FeatureMembershipConfigmanagementConfigSyncOutput) ToFeatureMembershipConfigmanagementConfigSyncOutput() FeatureMembershipConfigmanagementConfigSyncOutput {
	return o
}

func (o FeatureMembershipConfigmanagementConfigSyncOutput) ToFeatureMembershipConfigmanagementConfigSyncOutputWithContext(ctx context.Context) FeatureMembershipConfigmanagementConfigSyncOutput {
	return o
}

func (o FeatureMembershipConfigmanagementConfigSyncOutput) ToFeatureMembershipConfigmanagementConfigSyncPtrOutput() FeatureMembershipConfigmanagementConfigSyncPtrOutput {
	return o.ToFeatureMembershipConfigmanagementConfigSyncPtrOutputWithContext(context.Background())
}

func (o FeatureMembershipConfigmanagementConfigSyncOutput) ToFeatureMembershipConfigmanagementConfigSyncPtrOutputWithContext(ctx context.Context) FeatureMembershipConfigmanagementConfigSyncPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FeatureMembershipConfigmanagementConfigSync) *FeatureMembershipConfigmanagementConfigSync {
		return &v
	}).(FeatureMembershipConfigmanagementConfigSyncPtrOutput)
}

// (Optional) Structure is documented below.
func (o FeatureMembershipConfigmanagementConfigSyncOutput) Git() FeatureMembershipConfigmanagementConfigSyncGitPtrOutput {
	return o.ApplyT(func(v FeatureMembershipConfigmanagementConfigSync) *FeatureMembershipConfigmanagementConfigSyncGit {
		return v.Git
	}).(FeatureMembershipConfigmanagementConfigSyncGitPtrOutput)
}

// (Optional) Supported from ACM versions 1.12.0 onwards. Structure is documented below.
//
// Use either `git` or `oci` config option.
func (o FeatureMembershipConfigmanagementConfigSyncOutput) Oci() FeatureMembershipConfigmanagementConfigSyncOciPtrOutput {
	return o.ApplyT(func(v FeatureMembershipConfigmanagementConfigSync) *FeatureMembershipConfigmanagementConfigSyncOci {
		return v.Oci
	}).(FeatureMembershipConfigmanagementConfigSyncOciPtrOutput)
}

// Supported from ACM versions 1.10.0 onwards. Set to true to enable the Config Sync admission webhook to prevent drifts. If set to "false", disables the Config Sync admission webhook and does not prevent drifts.
func (o FeatureMembershipConfigmanagementConfigSyncOutput) PreventDrift() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FeatureMembershipConfigmanagementConfigSync) *bool { return v.PreventDrift }).(pulumi.BoolPtrOutput)
}

// Specifies whether the Config Sync Repo is in "hierarchical" or "unstructured" mode.
func (o FeatureMembershipConfigmanagementConfigSyncOutput) SourceFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FeatureMembershipConfigmanagementConfigSync) *string { return v.SourceFormat }).(pulumi.StringPtrOutput)
}

type FeatureMembershipConfigmanagementConfigSyncPtrOutput struct{ *pulumi.OutputState }

func (FeatureMembershipConfigmanagementConfigSyncPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FeatureMembershipConfigmanagementConfigSync)(nil)).Elem()
}

func (o FeatureMembershipConfigmanagementConfigSyncPtrOutput) ToFeatureMembershipConfigmanagementConfigSyncPtrOutput() FeatureMembershipConfigmanagementConfigSyncPtrOutput {
	return o
}

func (o FeatureMembershipConfigmanagementConfigSyncPtrOutput) ToFeatureMembershipConfigmanagementConfigSyncPtrOutputWithContext(ctx context.Context) FeatureMembershipConfigmanagementConfigSyncPtrOutput {
	return o
}

func (o FeatureMembershipConfigmanagementConfigSyncPtrOutput) Elem() FeatureMembershipConfigmanagementConfigSyncOutput {
	return o.ApplyT(func(v *FeatureMembershipConfigmanagementConfigSync) FeatureMembershipConfigmanagementConfigSync {
		if v != nil {
			return *v
		}
		var ret FeatureMembershipConfigmanagementConfigSync
		return ret
	}).(FeatureMembershipConfigmanagementConfigSyncOutput)
}

// (Optional) Structure is documented below.
func (o FeatureMembershipConfigmanagementConfigSyncPtrOutput) Git() FeatureMembershipConfigmanagementConfigSyncGitPtrOutput {
	return o.ApplyT(func(v *FeatureMembershipConfigmanagementConfigSync) *FeatureMembershipConfigmanagementConfigSyncGit {
		if v == nil {
			return nil
		}
		return v.Git
	}).(FeatureMembershipConfigmanagementConfigSyncGitPtrOutput)
}

// (Optional) Supported from ACM versions 1.12.0 onwards. Structure is documented below.
//
// Use either `git` or `oci` config option.
func (o FeatureMembershipConfigmanagementConfigSyncPtrOutput) Oci() FeatureMembershipConfigmanagementConfigSyncOciPtrOutput {
	return o.ApplyT(func(v *FeatureMembershipConfigmanagementConfigSync) *FeatureMembershipConfigmanagementConfigSyncOci {
		if v == nil {
			return nil
		}
		return v.Oci
	}).(FeatureMembershipConfigmanagementConfigSyncOciPtrOutput)
}

// Supported from ACM versions 1.10.0 onwards. Set to true to enable the Config Sync admission webhook to prevent drifts. If set to "false", disables the Config Sync admission webhook and does not prevent drifts.
func (o FeatureMembershipConfigmanagementConfigSyncPtrOutput) PreventDrift() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FeatureMembershipConfigmanagementConfigSync) *bool {
		if v == nil {
			return nil
		}
		return v.PreventDrift
	}).(pulumi.BoolPtrOutput)
}

// Specifies whether the Config Sync Repo is in "hierarchical" or "unstructured" mode.
func (o FeatureMembershipConfigmanagementConfigSyncPtrOutput) SourceFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FeatureMembershipConfigmanagementConfigSync) *string {
		if v == nil {
			return nil
		}
		return v.SourceFormat
	}).(pulumi.StringPtrOutput)
}

type FeatureMembershipConfigmanagementConfigSyncGit struct {
	// The GCP Service Account Email used for auth when secretType is gcpServiceAccount.
	GcpServiceAccountEmail *string `pulumi:"gcpServiceAccountEmail"`
	// URL for the HTTPS proxy to be used when communicating with the Git repo.
	HttpsProxy *string `pulumi:"httpsProxy"`
	// The path within the Git repository that represents the top level of the repo to sync. Default: the root directory of the repository.
	PolicyDir *string `pulumi:"policyDir"`
	// Type of secret configured for access to the Git repo.
	SecretType *string `pulumi:"secretType"`
	// The branch of the repository to sync from. Default: master.
	SyncBranch *string `pulumi:"syncBranch"`
	// The URL of the Git repository to use as the source of truth.
	SyncRepo *string `pulumi:"syncRepo"`
	// Git revision (tag or hash) to check out. Default HEAD.
	SyncRev *string `pulumi:"syncRev"`
	// Period in seconds between consecutive syncs. Default: 15.
	SyncWaitSecs *string `pulumi:"syncWaitSecs"`
}

// FeatureMembershipConfigmanagementConfigSyncGitInput is an input type that accepts FeatureMembershipConfigmanagementConfigSyncGitArgs and FeatureMembershipConfigmanagementConfigSyncGitOutput values.
// You can construct a concrete instance of `FeatureMembershipConfigmanagementConfigSyncGitInput` via:
//
//	FeatureMembershipConfigmanagementConfigSyncGitArgs{...}
type FeatureMembershipConfigmanagementConfigSyncGitInput interface {
	pulumi.Input

	ToFeatureMembershipConfigmanagementConfigSyncGitOutput() FeatureMembershipConfigmanagementConfigSyncGitOutput
	ToFeatureMembershipConfigmanagementConfigSyncGitOutputWithContext(context.Context) FeatureMembershipConfigmanagementConfigSyncGitOutput
}

type FeatureMembershipConfigmanagementConfigSyncGitArgs struct {
	// The GCP Service Account Email used for auth when secretType is gcpServiceAccount.
	GcpServiceAccountEmail pulumi.StringPtrInput `pulumi:"gcpServiceAccountEmail"`
	// URL for the HTTPS proxy to be used when communicating with the Git repo.
	HttpsProxy pulumi.StringPtrInput `pulumi:"httpsProxy"`
	// The path within the Git repository that represents the top level of the repo to sync. Default: the root directory of the repository.
	PolicyDir pulumi.StringPtrInput `pulumi:"policyDir"`
	// Type of secret configured for access to the Git repo.
	SecretType pulumi.StringPtrInput `pulumi:"secretType"`
	// The branch of the repository to sync from. Default: master.
	SyncBranch pulumi.StringPtrInput `pulumi:"syncBranch"`
	// The URL of the Git repository to use as the source of truth.
	SyncRepo pulumi.StringPtrInput `pulumi:"syncRepo"`
	// Git revision (tag or hash) to check out. Default HEAD.
	SyncRev pulumi.StringPtrInput `pulumi:"syncRev"`
	// Period in seconds between consecutive syncs. Default: 15.
	SyncWaitSecs pulumi.StringPtrInput `pulumi:"syncWaitSecs"`
}

func (FeatureMembershipConfigmanagementConfigSyncGitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FeatureMembershipConfigmanagementConfigSyncGit)(nil)).Elem()
}

func (i FeatureMembershipConfigmanagementConfigSyncGitArgs) ToFeatureMembershipConfigmanagementConfigSyncGitOutput() FeatureMembershipConfigmanagementConfigSyncGitOutput {
	return i.ToFeatureMembershipConfigmanagementConfigSyncGitOutputWithContext(context.Background())
}

func (i FeatureMembershipConfigmanagementConfigSyncGitArgs) ToFeatureMembershipConfigmanagementConfigSyncGitOutputWithContext(ctx context.Context) FeatureMembershipConfigmanagementConfigSyncGitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureMembershipConfigmanagementConfigSyncGitOutput)
}

func (i FeatureMembershipConfigmanagementConfigSyncGitArgs) ToFeatureMembershipConfigmanagementConfigSyncGitPtrOutput() FeatureMembershipConfigmanagementConfigSyncGitPtrOutput {
	return i.ToFeatureMembershipConfigmanagementConfigSyncGitPtrOutputWithContext(context.Background())
}

func (i FeatureMembershipConfigmanagementConfigSyncGitArgs) ToFeatureMembershipConfigmanagementConfigSyncGitPtrOutputWithContext(ctx context.Context) FeatureMembershipConfigmanagementConfigSyncGitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureMembershipConfigmanagementConfigSyncGitOutput).ToFeatureMembershipConfigmanagementConfigSyncGitPtrOutputWithContext(ctx)
}

// FeatureMembershipConfigmanagementConfigSyncGitPtrInput is an input type that accepts FeatureMembershipConfigmanagementConfigSyncGitArgs, FeatureMembershipConfigmanagementConfigSyncGitPtr and FeatureMembershipConfigmanagementConfigSyncGitPtrOutput values.
// You can construct a concrete instance of `FeatureMembershipConfigmanagementConfigSyncGitPtrInput` via:
//
//	        FeatureMembershipConfigmanagementConfigSyncGitArgs{...}
//
//	or:
//
//	        nil
type FeatureMembershipConfigmanagementConfigSyncGitPtrInput interface {
	pulumi.Input

	ToFeatureMembershipConfigmanagementConfigSyncGitPtrOutput() FeatureMembershipConfigmanagementConfigSyncGitPtrOutput
	ToFeatureMembershipConfigmanagementConfigSyncGitPtrOutputWithContext(context.Context) FeatureMembershipConfigmanagementConfigSyncGitPtrOutput
}

type featureMembershipConfigmanagementConfigSyncGitPtrType FeatureMembershipConfigmanagementConfigSyncGitArgs

func FeatureMembershipConfigmanagementConfigSyncGitPtr(v *FeatureMembershipConfigmanagementConfigSyncGitArgs) FeatureMembershipConfigmanagementConfigSyncGitPtrInput {
	return (*featureMembershipConfigmanagementConfigSyncGitPtrType)(v)
}

func (*featureMembershipConfigmanagementConfigSyncGitPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FeatureMembershipConfigmanagementConfigSyncGit)(nil)).Elem()
}

func (i *featureMembershipConfigmanagementConfigSyncGitPtrType) ToFeatureMembershipConfigmanagementConfigSyncGitPtrOutput() FeatureMembershipConfigmanagementConfigSyncGitPtrOutput {
	return i.ToFeatureMembershipConfigmanagementConfigSyncGitPtrOutputWithContext(context.Background())
}

func (i *featureMembershipConfigmanagementConfigSyncGitPtrType) ToFeatureMembershipConfigmanagementConfigSyncGitPtrOutputWithContext(ctx context.Context) FeatureMembershipConfigmanagementConfigSyncGitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureMembershipConfigmanagementConfigSyncGitPtrOutput)
}

type FeatureMembershipConfigmanagementConfigSyncGitOutput struct{ *pulumi.OutputState }

func (FeatureMembershipConfigmanagementConfigSyncGitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FeatureMembershipConfigmanagementConfigSyncGit)(nil)).Elem()
}

func (o FeatureMembershipConfigmanagementConfigSyncGitOutput) ToFeatureMembershipConfigmanagementConfigSyncGitOutput() FeatureMembershipConfigmanagementConfigSyncGitOutput {
	return o
}

func (o FeatureMembershipConfigmanagementConfigSyncGitOutput) ToFeatureMembershipConfigmanagementConfigSyncGitOutputWithContext(ctx context.Context) FeatureMembershipConfigmanagementConfigSyncGitOutput {
	return o
}

func (o FeatureMembershipConfigmanagementConfigSyncGitOutput) ToFeatureMembershipConfigmanagementConfigSyncGitPtrOutput() FeatureMembershipConfigmanagementConfigSyncGitPtrOutput {
	return o.ToFeatureMembershipConfigmanagementConfigSyncGitPtrOutputWithContext(context.Background())
}

func (o FeatureMembershipConfigmanagementConfigSyncGitOutput) ToFeatureMembershipConfigmanagementConfigSyncGitPtrOutputWithContext(ctx context.Context) FeatureMembershipConfigmanagementConfigSyncGitPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FeatureMembershipConfigmanagementConfigSyncGit) *FeatureMembershipConfigmanagementConfigSyncGit {
		return &v
	}).(FeatureMembershipConfigmanagementConfigSyncGitPtrOutput)
}

// The GCP Service Account Email used for auth when secretType is gcpServiceAccount.
func (o FeatureMembershipConfigmanagementConfigSyncGitOutput) GcpServiceAccountEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FeatureMembershipConfigmanagementConfigSyncGit) *string { return v.GcpServiceAccountEmail }).(pulumi.StringPtrOutput)
}

// URL for the HTTPS proxy to be used when communicating with the Git repo.
func (o FeatureMembershipConfigmanagementConfigSyncGitOutput) HttpsProxy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FeatureMembershipConfigmanagementConfigSyncGit) *string { return v.HttpsProxy }).(pulumi.StringPtrOutput)
}

// The path within the Git repository that represents the top level of the repo to sync. Default: the root directory of the repository.
func (o FeatureMembershipConfigmanagementConfigSyncGitOutput) PolicyDir() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FeatureMembershipConfigmanagementConfigSyncGit) *string { return v.PolicyDir }).(pulumi.StringPtrOutput)
}

// Type of secret configured for access to the Git repo.
func (o FeatureMembershipConfigmanagementConfigSyncGitOutput) SecretType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FeatureMembershipConfigmanagementConfigSyncGit) *string { return v.SecretType }).(pulumi.StringPtrOutput)
}

// The branch of the repository to sync from. Default: master.
func (o FeatureMembershipConfigmanagementConfigSyncGitOutput) SyncBranch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FeatureMembershipConfigmanagementConfigSyncGit) *string { return v.SyncBranch }).(pulumi.StringPtrOutput)
}

// The URL of the Git repository to use as the source of truth.
func (o FeatureMembershipConfigmanagementConfigSyncGitOutput) SyncRepo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FeatureMembershipConfigmanagementConfigSyncGit) *string { return v.SyncRepo }).(pulumi.StringPtrOutput)
}

// Git revision (tag or hash) to check out. Default HEAD.
func (o FeatureMembershipConfigmanagementConfigSyncGitOutput) SyncRev() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FeatureMembershipConfigmanagementConfigSyncGit) *string { return v.SyncRev }).(pulumi.StringPtrOutput)
}

// Period in seconds between consecutive syncs. Default: 15.
func (o FeatureMembershipConfigmanagementConfigSyncGitOutput) SyncWaitSecs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FeatureMembershipConfigmanagementConfigSyncGit) *string { return v.SyncWaitSecs }).(pulumi.StringPtrOutput)
}

type FeatureMembershipConfigmanagementConfigSyncGitPtrOutput struct{ *pulumi.OutputState }

func (FeatureMembershipConfigmanagementConfigSyncGitPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FeatureMembershipConfigmanagementConfigSyncGit)(nil)).Elem()
}

func (o FeatureMembershipConfigmanagementConfigSyncGitPtrOutput) ToFeatureMembershipConfigmanagementConfigSyncGitPtrOutput() FeatureMembershipConfigmanagementConfigSyncGitPtrOutput {
	return o
}

func (o FeatureMembershipConfigmanagementConfigSyncGitPtrOutput) ToFeatureMembershipConfigmanagementConfigSyncGitPtrOutputWithContext(ctx context.Context) FeatureMembershipConfigmanagementConfigSyncGitPtrOutput {
	return o
}

func (o FeatureMembershipConfigmanagementConfigSyncGitPtrOutput) Elem() FeatureMembershipConfigmanagementConfigSyncGitOutput {
	return o.ApplyT(func(v *FeatureMembershipConfigmanagementConfigSyncGit) FeatureMembershipConfigmanagementConfigSyncGit {
		if v != nil {
			return *v
		}
		var ret FeatureMembershipConfigmanagementConfigSyncGit
		return ret
	}).(FeatureMembershipConfigmanagementConfigSyncGitOutput)
}

// The GCP Service Account Email used for auth when secretType is gcpServiceAccount.
func (o FeatureMembershipConfigmanagementConfigSyncGitPtrOutput) GcpServiceAccountEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FeatureMembershipConfigmanagementConfigSyncGit) *string {
		if v == nil {
			return nil
		}
		return v.GcpServiceAccountEmail
	}).(pulumi.StringPtrOutput)
}

// URL for the HTTPS proxy to be used when communicating with the Git repo.
func (o FeatureMembershipConfigmanagementConfigSyncGitPtrOutput) HttpsProxy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FeatureMembershipConfigmanagementConfigSyncGit) *string {
		if v == nil {
			return nil
		}
		return v.HttpsProxy
	}).(pulumi.StringPtrOutput)
}

// The path within the Git repository that represents the top level of the repo to sync. Default: the root directory of the repository.
func (o FeatureMembershipConfigmanagementConfigSyncGitPtrOutput) PolicyDir() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FeatureMembershipConfigmanagementConfigSyncGit) *string {
		if v == nil {
			return nil
		}
		return v.PolicyDir
	}).(pulumi.StringPtrOutput)
}

// Type of secret configured for access to the Git repo.
func (o FeatureMembershipConfigmanagementConfigSyncGitPtrOutput) SecretType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FeatureMembershipConfigmanagementConfigSyncGit) *string {
		if v == nil {
			return nil
		}
		return v.SecretType
	}).(pulumi.StringPtrOutput)
}

// The branch of the repository to sync from. Default: master.
func (o FeatureMembershipConfigmanagementConfigSyncGitPtrOutput) SyncBranch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FeatureMembershipConfigmanagementConfigSyncGit) *string {
		if v == nil {
			return nil
		}
		return v.SyncBranch
	}).(pulumi.StringPtrOutput)
}

// The URL of the Git repository to use as the source of truth.
func (o FeatureMembershipConfigmanagementConfigSyncGitPtrOutput) SyncRepo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FeatureMembershipConfigmanagementConfigSyncGit) *string {
		if v == nil {
			return nil
		}
		return v.SyncRepo
	}).(pulumi.StringPtrOutput)
}

// Git revision (tag or hash) to check out. Default HEAD.
func (o FeatureMembershipConfigmanagementConfigSyncGitPtrOutput) SyncRev() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FeatureMembershipConfigmanagementConfigSyncGit) *string {
		if v == nil {
			return nil
		}
		return v.SyncRev
	}).(pulumi.StringPtrOutput)
}

// Period in seconds between consecutive syncs. Default: 15.
func (o FeatureMembershipConfigmanagementConfigSyncGitPtrOutput) SyncWaitSecs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FeatureMembershipConfigmanagementConfigSyncGit) *string {
		if v == nil {
			return nil
		}
		return v.SyncWaitSecs
	}).(pulumi.StringPtrOutput)
}

type FeatureMembershipConfigmanagementConfigSyncOci struct {
	// The GCP Service Account Email used for auth when secretType is gcpserviceaccount.
	GcpServiceAccountEmail *string `pulumi:"gcpServiceAccountEmail"`
	// The absolute path of the directory that contains the local resources. Default: the root directory of the image.
	PolicyDir *string `pulumi:"policyDir"`
	// Type of secret configured for access to the OCI Image. Must be one of gcenode, gcpserviceaccount or none.
	SecretType *string `pulumi:"secretType"`
	// The OCI image repository URL for the package to sync from. e.g. LOCATION-docker.pkg.dev/PROJECT_ID/REPOSITORY_NAME/PACKAGE_NAME.
	SyncRepo *string `pulumi:"syncRepo"`
	// Period in seconds(int64 format) between consecutive syncs. Default: 15.
	SyncWaitSecs *string `pulumi:"syncWaitSecs"`
}

// FeatureMembershipConfigmanagementConfigSyncOciInput is an input type that accepts FeatureMembershipConfigmanagementConfigSyncOciArgs and FeatureMembershipConfigmanagementConfigSyncOciOutput values.
// You can construct a concrete instance of `FeatureMembershipConfigmanagementConfigSyncOciInput` via:
//
//	FeatureMembershipConfigmanagementConfigSyncOciArgs{...}
type FeatureMembershipConfigmanagementConfigSyncOciInput interface {
	pulumi.Input

	ToFeatureMembershipConfigmanagementConfigSyncOciOutput() FeatureMembershipConfigmanagementConfigSyncOciOutput
	ToFeatureMembershipConfigmanagementConfigSyncOciOutputWithContext(context.Context) FeatureMembershipConfigmanagementConfigSyncOciOutput
}

type FeatureMembershipConfigmanagementConfigSyncOciArgs struct {
	// The GCP Service Account Email used for auth when secretType is gcpserviceaccount.
	GcpServiceAccountEmail pulumi.StringPtrInput `pulumi:"gcpServiceAccountEmail"`
	// The absolute path of the directory that contains the local resources. Default: the root directory of the image.
	PolicyDir pulumi.StringPtrInput `pulumi:"policyDir"`
	// Type of secret configured for access to the OCI Image. Must be one of gcenode, gcpserviceaccount or none.
	SecretType pulumi.StringPtrInput `pulumi:"secretType"`
	// The OCI image repository URL for the package to sync from. e.g. LOCATION-docker.pkg.dev/PROJECT_ID/REPOSITORY_NAME/PACKAGE_NAME.
	SyncRepo pulumi.StringPtrInput `pulumi:"syncRepo"`
	// Period in seconds(int64 format) between consecutive syncs. Default: 15.
	SyncWaitSecs pulumi.StringPtrInput `pulumi:"syncWaitSecs"`
}

func (FeatureMembershipConfigmanagementConfigSyncOciArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FeatureMembershipConfigmanagementConfigSyncOci)(nil)).Elem()
}

func (i FeatureMembershipConfigmanagementConfigSyncOciArgs) ToFeatureMembershipConfigmanagementConfigSyncOciOutput() FeatureMembershipConfigmanagementConfigSyncOciOutput {
	return i.ToFeatureMembershipConfigmanagementConfigSyncOciOutputWithContext(context.Background())
}

func (i FeatureMembershipConfigmanagementConfigSyncOciArgs) ToFeatureMembershipConfigmanagementConfigSyncOciOutputWithContext(ctx context.Context) FeatureMembershipConfigmanagementConfigSyncOciOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureMembershipConfigmanagementConfigSyncOciOutput)
}

func (i FeatureMembershipConfigmanagementConfigSyncOciArgs) ToFeatureMembershipConfigmanagementConfigSyncOciPtrOutput() FeatureMembershipConfigmanagementConfigSyncOciPtrOutput {
	return i.ToFeatureMembershipConfigmanagementConfigSyncOciPtrOutputWithContext(context.Background())
}

func (i FeatureMembershipConfigmanagementConfigSyncOciArgs) ToFeatureMembershipConfigmanagementConfigSyncOciPtrOutputWithContext(ctx context.Context) FeatureMembershipConfigmanagementConfigSyncOciPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureMembershipConfigmanagementConfigSyncOciOutput).ToFeatureMembershipConfigmanagementConfigSyncOciPtrOutputWithContext(ctx)
}

// FeatureMembershipConfigmanagementConfigSyncOciPtrInput is an input type that accepts FeatureMembershipConfigmanagementConfigSyncOciArgs, FeatureMembershipConfigmanagementConfigSyncOciPtr and FeatureMembershipConfigmanagementConfigSyncOciPtrOutput values.
// You can construct a concrete instance of `FeatureMembershipConfigmanagementConfigSyncOciPtrInput` via:
//
//	        FeatureMembershipConfigmanagementConfigSyncOciArgs{...}
//
//	or:
//
//	        nil
type FeatureMembershipConfigmanagementConfigSyncOciPtrInput interface {
	pulumi.Input

	ToFeatureMembershipConfigmanagementConfigSyncOciPtrOutput() FeatureMembershipConfigmanagementConfigSyncOciPtrOutput
	ToFeatureMembershipConfigmanagementConfigSyncOciPtrOutputWithContext(context.Context) FeatureMembershipConfigmanagementConfigSyncOciPtrOutput
}

type featureMembershipConfigmanagementConfigSyncOciPtrType FeatureMembershipConfigmanagementConfigSyncOciArgs

func FeatureMembershipConfigmanagementConfigSyncOciPtr(v *FeatureMembershipConfigmanagementConfigSyncOciArgs) FeatureMembershipConfigmanagementConfigSyncOciPtrInput {
	return (*featureMembershipConfigmanagementConfigSyncOciPtrType)(v)
}

func (*featureMembershipConfigmanagementConfigSyncOciPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FeatureMembershipConfigmanagementConfigSyncOci)(nil)).Elem()
}

func (i *featureMembershipConfigmanagementConfigSyncOciPtrType) ToFeatureMembershipConfigmanagementConfigSyncOciPtrOutput() FeatureMembershipConfigmanagementConfigSyncOciPtrOutput {
	return i.ToFeatureMembershipConfigmanagementConfigSyncOciPtrOutputWithContext(context.Background())
}

func (i *featureMembershipConfigmanagementConfigSyncOciPtrType) ToFeatureMembershipConfigmanagementConfigSyncOciPtrOutputWithContext(ctx context.Context) FeatureMembershipConfigmanagementConfigSyncOciPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureMembershipConfigmanagementConfigSyncOciPtrOutput)
}

type FeatureMembershipConfigmanagementConfigSyncOciOutput struct{ *pulumi.OutputState }

func (FeatureMembershipConfigmanagementConfigSyncOciOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FeatureMembershipConfigmanagementConfigSyncOci)(nil)).Elem()
}

func (o FeatureMembershipConfigmanagementConfigSyncOciOutput) ToFeatureMembershipConfigmanagementConfigSyncOciOutput() FeatureMembershipConfigmanagementConfigSyncOciOutput {
	return o
}

func (o FeatureMembershipConfigmanagementConfigSyncOciOutput) ToFeatureMembershipConfigmanagementConfigSyncOciOutputWithContext(ctx context.Context) FeatureMembershipConfigmanagementConfigSyncOciOutput {
	return o
}

func (o FeatureMembershipConfigmanagementConfigSyncOciOutput) ToFeatureMembershipConfigmanagementConfigSyncOciPtrOutput() FeatureMembershipConfigmanagementConfigSyncOciPtrOutput {
	return o.ToFeatureMembershipConfigmanagementConfigSyncOciPtrOutputWithContext(context.Background())
}

func (o FeatureMembershipConfigmanagementConfigSyncOciOutput) ToFeatureMembershipConfigmanagementConfigSyncOciPtrOutputWithContext(ctx context.Context) FeatureMembershipConfigmanagementConfigSyncOciPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FeatureMembershipConfigmanagementConfigSyncOci) *FeatureMembershipConfigmanagementConfigSyncOci {
		return &v
	}).(FeatureMembershipConfigmanagementConfigSyncOciPtrOutput)
}

// The GCP Service Account Email used for auth when secretType is gcpserviceaccount.
func (o FeatureMembershipConfigmanagementConfigSyncOciOutput) GcpServiceAccountEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FeatureMembershipConfigmanagementConfigSyncOci) *string { return v.GcpServiceAccountEmail }).(pulumi.StringPtrOutput)
}

// The absolute path of the directory that contains the local resources. Default: the root directory of the image.
func (o FeatureMembershipConfigmanagementConfigSyncOciOutput) PolicyDir() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FeatureMembershipConfigmanagementConfigSyncOci) *string { return v.PolicyDir }).(pulumi.StringPtrOutput)
}

// Type of secret configured for access to the OCI Image. Must be one of gcenode, gcpserviceaccount or none.
func (o FeatureMembershipConfigmanagementConfigSyncOciOutput) SecretType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FeatureMembershipConfigmanagementConfigSyncOci) *string { return v.SecretType }).(pulumi.StringPtrOutput)
}

// The OCI image repository URL for the package to sync from. e.g. LOCATION-docker.pkg.dev/PROJECT_ID/REPOSITORY_NAME/PACKAGE_NAME.
func (o FeatureMembershipConfigmanagementConfigSyncOciOutput) SyncRepo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FeatureMembershipConfigmanagementConfigSyncOci) *string { return v.SyncRepo }).(pulumi.StringPtrOutput)
}

// Period in seconds(int64 format) between consecutive syncs. Default: 15.
func (o FeatureMembershipConfigmanagementConfigSyncOciOutput) SyncWaitSecs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FeatureMembershipConfigmanagementConfigSyncOci) *string { return v.SyncWaitSecs }).(pulumi.StringPtrOutput)
}

type FeatureMembershipConfigmanagementConfigSyncOciPtrOutput struct{ *pulumi.OutputState }

func (FeatureMembershipConfigmanagementConfigSyncOciPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FeatureMembershipConfigmanagementConfigSyncOci)(nil)).Elem()
}

func (o FeatureMembershipConfigmanagementConfigSyncOciPtrOutput) ToFeatureMembershipConfigmanagementConfigSyncOciPtrOutput() FeatureMembershipConfigmanagementConfigSyncOciPtrOutput {
	return o
}

func (o FeatureMembershipConfigmanagementConfigSyncOciPtrOutput) ToFeatureMembershipConfigmanagementConfigSyncOciPtrOutputWithContext(ctx context.Context) FeatureMembershipConfigmanagementConfigSyncOciPtrOutput {
	return o
}

func (o FeatureMembershipConfigmanagementConfigSyncOciPtrOutput) Elem() FeatureMembershipConfigmanagementConfigSyncOciOutput {
	return o.ApplyT(func(v *FeatureMembershipConfigmanagementConfigSyncOci) FeatureMembershipConfigmanagementConfigSyncOci {
		if v != nil {
			return *v
		}
		var ret FeatureMembershipConfigmanagementConfigSyncOci
		return ret
	}).(FeatureMembershipConfigmanagementConfigSyncOciOutput)
}

// The GCP Service Account Email used for auth when secretType is gcpserviceaccount.
func (o FeatureMembershipConfigmanagementConfigSyncOciPtrOutput) GcpServiceAccountEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FeatureMembershipConfigmanagementConfigSyncOci) *string {
		if v == nil {
			return nil
		}
		return v.GcpServiceAccountEmail
	}).(pulumi.StringPtrOutput)
}

// The absolute path of the directory that contains the local resources. Default: the root directory of the image.
func (o FeatureMembershipConfigmanagementConfigSyncOciPtrOutput) PolicyDir() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FeatureMembershipConfigmanagementConfigSyncOci) *string {
		if v == nil {
			return nil
		}
		return v.PolicyDir
	}).(pulumi.StringPtrOutput)
}

// Type of secret configured for access to the OCI Image. Must be one of gcenode, gcpserviceaccount or none.
func (o FeatureMembershipConfigmanagementConfigSyncOciPtrOutput) SecretType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FeatureMembershipConfigmanagementConfigSyncOci) *string {
		if v == nil {
			return nil
		}
		return v.SecretType
	}).(pulumi.StringPtrOutput)
}

// The OCI image repository URL for the package to sync from. e.g. LOCATION-docker.pkg.dev/PROJECT_ID/REPOSITORY_NAME/PACKAGE_NAME.
func (o FeatureMembershipConfigmanagementConfigSyncOciPtrOutput) SyncRepo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FeatureMembershipConfigmanagementConfigSyncOci) *string {
		if v == nil {
			return nil
		}
		return v.SyncRepo
	}).(pulumi.StringPtrOutput)
}

// Period in seconds(int64 format) between consecutive syncs. Default: 15.
func (o FeatureMembershipConfigmanagementConfigSyncOciPtrOutput) SyncWaitSecs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FeatureMembershipConfigmanagementConfigSyncOci) *string {
		if v == nil {
			return nil
		}
		return v.SyncWaitSecs
	}).(pulumi.StringPtrOutput)
}

type FeatureMembershipConfigmanagementHierarchyController struct {
	// Whether hierarchical resource quota is enabled in this cluster.
	EnableHierarchicalResourceQuota *bool `pulumi:"enableHierarchicalResourceQuota"`
	// Whether pod tree labels are enabled in this cluster.
	EnablePodTreeLabels *bool `pulumi:"enablePodTreeLabels"`
	// Whether Hierarchy Controller is enabled in this cluster.
	Enabled *bool `pulumi:"enabled"`
}

// FeatureMembershipConfigmanagementHierarchyControllerInput is an input type that accepts FeatureMembershipConfigmanagementHierarchyControllerArgs and FeatureMembershipConfigmanagementHierarchyControllerOutput values.
// You can construct a concrete instance of `FeatureMembershipConfigmanagementHierarchyControllerInput` via:
//
//	FeatureMembershipConfigmanagementHierarchyControllerArgs{...}
type FeatureMembershipConfigmanagementHierarchyControllerInput interface {
	pulumi.Input

	ToFeatureMembershipConfigmanagementHierarchyControllerOutput() FeatureMembershipConfigmanagementHierarchyControllerOutput
	ToFeatureMembershipConfigmanagementHierarchyControllerOutputWithContext(context.Context) FeatureMembershipConfigmanagementHierarchyControllerOutput
}

type FeatureMembershipConfigmanagementHierarchyControllerArgs struct {
	// Whether hierarchical resource quota is enabled in this cluster.
	EnableHierarchicalResourceQuota pulumi.BoolPtrInput `pulumi:"enableHierarchicalResourceQuota"`
	// Whether pod tree labels are enabled in this cluster.
	EnablePodTreeLabels pulumi.BoolPtrInput `pulumi:"enablePodTreeLabels"`
	// Whether Hierarchy Controller is enabled in this cluster.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (FeatureMembershipConfigmanagementHierarchyControllerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FeatureMembershipConfigmanagementHierarchyController)(nil)).Elem()
}

func (i FeatureMembershipConfigmanagementHierarchyControllerArgs) ToFeatureMembershipConfigmanagementHierarchyControllerOutput() FeatureMembershipConfigmanagementHierarchyControllerOutput {
	return i.ToFeatureMembershipConfigmanagementHierarchyControllerOutputWithContext(context.Background())
}

func (i FeatureMembershipConfigmanagementHierarchyControllerArgs) ToFeatureMembershipConfigmanagementHierarchyControllerOutputWithContext(ctx context.Context) FeatureMembershipConfigmanagementHierarchyControllerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureMembershipConfigmanagementHierarchyControllerOutput)
}

func (i FeatureMembershipConfigmanagementHierarchyControllerArgs) ToFeatureMembershipConfigmanagementHierarchyControllerPtrOutput() FeatureMembershipConfigmanagementHierarchyControllerPtrOutput {
	return i.ToFeatureMembershipConfigmanagementHierarchyControllerPtrOutputWithContext(context.Background())
}

func (i FeatureMembershipConfigmanagementHierarchyControllerArgs) ToFeatureMembershipConfigmanagementHierarchyControllerPtrOutputWithContext(ctx context.Context) FeatureMembershipConfigmanagementHierarchyControllerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureMembershipConfigmanagementHierarchyControllerOutput).ToFeatureMembershipConfigmanagementHierarchyControllerPtrOutputWithContext(ctx)
}

// FeatureMembershipConfigmanagementHierarchyControllerPtrInput is an input type that accepts FeatureMembershipConfigmanagementHierarchyControllerArgs, FeatureMembershipConfigmanagementHierarchyControllerPtr and FeatureMembershipConfigmanagementHierarchyControllerPtrOutput values.
// You can construct a concrete instance of `FeatureMembershipConfigmanagementHierarchyControllerPtrInput` via:
//
//	        FeatureMembershipConfigmanagementHierarchyControllerArgs{...}
//
//	or:
//
//	        nil
type FeatureMembershipConfigmanagementHierarchyControllerPtrInput interface {
	pulumi.Input

	ToFeatureMembershipConfigmanagementHierarchyControllerPtrOutput() FeatureMembershipConfigmanagementHierarchyControllerPtrOutput
	ToFeatureMembershipConfigmanagementHierarchyControllerPtrOutputWithContext(context.Context) FeatureMembershipConfigmanagementHierarchyControllerPtrOutput
}

type featureMembershipConfigmanagementHierarchyControllerPtrType FeatureMembershipConfigmanagementHierarchyControllerArgs

func FeatureMembershipConfigmanagementHierarchyControllerPtr(v *FeatureMembershipConfigmanagementHierarchyControllerArgs) FeatureMembershipConfigmanagementHierarchyControllerPtrInput {
	return (*featureMembershipConfigmanagementHierarchyControllerPtrType)(v)
}

func (*featureMembershipConfigmanagementHierarchyControllerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FeatureMembershipConfigmanagementHierarchyController)(nil)).Elem()
}

func (i *featureMembershipConfigmanagementHierarchyControllerPtrType) ToFeatureMembershipConfigmanagementHierarchyControllerPtrOutput() FeatureMembershipConfigmanagementHierarchyControllerPtrOutput {
	return i.ToFeatureMembershipConfigmanagementHierarchyControllerPtrOutputWithContext(context.Background())
}

func (i *featureMembershipConfigmanagementHierarchyControllerPtrType) ToFeatureMembershipConfigmanagementHierarchyControllerPtrOutputWithContext(ctx context.Context) FeatureMembershipConfigmanagementHierarchyControllerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureMembershipConfigmanagementHierarchyControllerPtrOutput)
}

type FeatureMembershipConfigmanagementHierarchyControllerOutput struct{ *pulumi.OutputState }

func (FeatureMembershipConfigmanagementHierarchyControllerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FeatureMembershipConfigmanagementHierarchyController)(nil)).Elem()
}

func (o FeatureMembershipConfigmanagementHierarchyControllerOutput) ToFeatureMembershipConfigmanagementHierarchyControllerOutput() FeatureMembershipConfigmanagementHierarchyControllerOutput {
	return o
}

func (o FeatureMembershipConfigmanagementHierarchyControllerOutput) ToFeatureMembershipConfigmanagementHierarchyControllerOutputWithContext(ctx context.Context) FeatureMembershipConfigmanagementHierarchyControllerOutput {
	return o
}

func (o FeatureMembershipConfigmanagementHierarchyControllerOutput) ToFeatureMembershipConfigmanagementHierarchyControllerPtrOutput() FeatureMembershipConfigmanagementHierarchyControllerPtrOutput {
	return o.ToFeatureMembershipConfigmanagementHierarchyControllerPtrOutputWithContext(context.Background())
}

func (o FeatureMembershipConfigmanagementHierarchyControllerOutput) ToFeatureMembershipConfigmanagementHierarchyControllerPtrOutputWithContext(ctx context.Context) FeatureMembershipConfigmanagementHierarchyControllerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FeatureMembershipConfigmanagementHierarchyController) *FeatureMembershipConfigmanagementHierarchyController {
		return &v
	}).(FeatureMembershipConfigmanagementHierarchyControllerPtrOutput)
}

// Whether hierarchical resource quota is enabled in this cluster.
func (o FeatureMembershipConfigmanagementHierarchyControllerOutput) EnableHierarchicalResourceQuota() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FeatureMembershipConfigmanagementHierarchyController) *bool {
		return v.EnableHierarchicalResourceQuota
	}).(pulumi.BoolPtrOutput)
}

// Whether pod tree labels are enabled in this cluster.
func (o FeatureMembershipConfigmanagementHierarchyControllerOutput) EnablePodTreeLabels() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FeatureMembershipConfigmanagementHierarchyController) *bool { return v.EnablePodTreeLabels }).(pulumi.BoolPtrOutput)
}

// Whether Hierarchy Controller is enabled in this cluster.
func (o FeatureMembershipConfigmanagementHierarchyControllerOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FeatureMembershipConfigmanagementHierarchyController) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type FeatureMembershipConfigmanagementHierarchyControllerPtrOutput struct{ *pulumi.OutputState }

func (FeatureMembershipConfigmanagementHierarchyControllerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FeatureMembershipConfigmanagementHierarchyController)(nil)).Elem()
}

func (o FeatureMembershipConfigmanagementHierarchyControllerPtrOutput) ToFeatureMembershipConfigmanagementHierarchyControllerPtrOutput() FeatureMembershipConfigmanagementHierarchyControllerPtrOutput {
	return o
}

func (o FeatureMembershipConfigmanagementHierarchyControllerPtrOutput) ToFeatureMembershipConfigmanagementHierarchyControllerPtrOutputWithContext(ctx context.Context) FeatureMembershipConfigmanagementHierarchyControllerPtrOutput {
	return o
}

func (o FeatureMembershipConfigmanagementHierarchyControllerPtrOutput) Elem() FeatureMembershipConfigmanagementHierarchyControllerOutput {
	return o.ApplyT(func(v *FeatureMembershipConfigmanagementHierarchyController) FeatureMembershipConfigmanagementHierarchyController {
		if v != nil {
			return *v
		}
		var ret FeatureMembershipConfigmanagementHierarchyController
		return ret
	}).(FeatureMembershipConfigmanagementHierarchyControllerOutput)
}

// Whether hierarchical resource quota is enabled in this cluster.
func (o FeatureMembershipConfigmanagementHierarchyControllerPtrOutput) EnableHierarchicalResourceQuota() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FeatureMembershipConfigmanagementHierarchyController) *bool {
		if v == nil {
			return nil
		}
		return v.EnableHierarchicalResourceQuota
	}).(pulumi.BoolPtrOutput)
}

// Whether pod tree labels are enabled in this cluster.
func (o FeatureMembershipConfigmanagementHierarchyControllerPtrOutput) EnablePodTreeLabels() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FeatureMembershipConfigmanagementHierarchyController) *bool {
		if v == nil {
			return nil
		}
		return v.EnablePodTreeLabels
	}).(pulumi.BoolPtrOutput)
}

// Whether Hierarchy Controller is enabled in this cluster.
func (o FeatureMembershipConfigmanagementHierarchyControllerPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FeatureMembershipConfigmanagementHierarchyController) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type FeatureMembershipConfigmanagementPolicyController struct {
	// Sets the interval for Policy Controller Audit Scans (in seconds). When set to 0, this disables audit functionality altogether.
	AuditIntervalSeconds *string `pulumi:"auditIntervalSeconds"`
	// Enables the installation of Policy Controller. If false, the rest of PolicyController fields take no effect.
	Enabled *bool `pulumi:"enabled"`
	// The set of namespaces that are excluded from Policy Controller checks. Namespaces do not need to currently exist on the cluster.
	ExemptableNamespaces []string `pulumi:"exemptableNamespaces"`
	// Logs all denies and dry run failures.
	LogDeniesEnabled *bool `pulumi:"logDeniesEnabled"`
	// Specifies the backends Policy Controller should export metrics to. For example, to specify metrics should be exported to Cloud Monitoring and Prometheus, specify backends: [\"cloudmonitoring\", \"prometheus\"]. Default: [\"cloudmonitoring\", \"prometheus\"]
	Monitoring *FeatureMembershipConfigmanagementPolicyControllerMonitoring `pulumi:"monitoring"`
	// Enables mutation in policy controller. If true, mutation CRDs, webhook, and controller deployment will be deployed to the cluster.
	MutationEnabled *bool `pulumi:"mutationEnabled"`
	// Enables the ability to use Constraint Templates that reference to objects other than the object currently being evaluated.
	ReferentialRulesEnabled *bool `pulumi:"referentialRulesEnabled"`
	// Installs the default template library along with Policy Controller.
	TemplateLibraryInstalled *bool `pulumi:"templateLibraryInstalled"`
}

// FeatureMembershipConfigmanagementPolicyControllerInput is an input type that accepts FeatureMembershipConfigmanagementPolicyControllerArgs and FeatureMembershipConfigmanagementPolicyControllerOutput values.
// You can construct a concrete instance of `FeatureMembershipConfigmanagementPolicyControllerInput` via:
//
//	FeatureMembershipConfigmanagementPolicyControllerArgs{...}
type FeatureMembershipConfigmanagementPolicyControllerInput interface {
	pulumi.Input

	ToFeatureMembershipConfigmanagementPolicyControllerOutput() FeatureMembershipConfigmanagementPolicyControllerOutput
	ToFeatureMembershipConfigmanagementPolicyControllerOutputWithContext(context.Context) FeatureMembershipConfigmanagementPolicyControllerOutput
}

type FeatureMembershipConfigmanagementPolicyControllerArgs struct {
	// Sets the interval for Policy Controller Audit Scans (in seconds). When set to 0, this disables audit functionality altogether.
	AuditIntervalSeconds pulumi.StringPtrInput `pulumi:"auditIntervalSeconds"`
	// Enables the installation of Policy Controller. If false, the rest of PolicyController fields take no effect.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The set of namespaces that are excluded from Policy Controller checks. Namespaces do not need to currently exist on the cluster.
	ExemptableNamespaces pulumi.StringArrayInput `pulumi:"exemptableNamespaces"`
	// Logs all denies and dry run failures.
	LogDeniesEnabled pulumi.BoolPtrInput `pulumi:"logDeniesEnabled"`
	// Specifies the backends Policy Controller should export metrics to. For example, to specify metrics should be exported to Cloud Monitoring and Prometheus, specify backends: [\"cloudmonitoring\", \"prometheus\"]. Default: [\"cloudmonitoring\", \"prometheus\"]
	Monitoring FeatureMembershipConfigmanagementPolicyControllerMonitoringPtrInput `pulumi:"monitoring"`
	// Enables mutation in policy controller. If true, mutation CRDs, webhook, and controller deployment will be deployed to the cluster.
	MutationEnabled pulumi.BoolPtrInput `pulumi:"mutationEnabled"`
	// Enables the ability to use Constraint Templates that reference to objects other than the object currently being evaluated.
	ReferentialRulesEnabled pulumi.BoolPtrInput `pulumi:"referentialRulesEnabled"`
	// Installs the default template library along with Policy Controller.
	TemplateLibraryInstalled pulumi.BoolPtrInput `pulumi:"templateLibraryInstalled"`
}

func (FeatureMembershipConfigmanagementPolicyControllerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FeatureMembershipConfigmanagementPolicyController)(nil)).Elem()
}

func (i FeatureMembershipConfigmanagementPolicyControllerArgs) ToFeatureMembershipConfigmanagementPolicyControllerOutput() FeatureMembershipConfigmanagementPolicyControllerOutput {
	return i.ToFeatureMembershipConfigmanagementPolicyControllerOutputWithContext(context.Background())
}

func (i FeatureMembershipConfigmanagementPolicyControllerArgs) ToFeatureMembershipConfigmanagementPolicyControllerOutputWithContext(ctx context.Context) FeatureMembershipConfigmanagementPolicyControllerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureMembershipConfigmanagementPolicyControllerOutput)
}

func (i FeatureMembershipConfigmanagementPolicyControllerArgs) ToFeatureMembershipConfigmanagementPolicyControllerPtrOutput() FeatureMembershipConfigmanagementPolicyControllerPtrOutput {
	return i.ToFeatureMembershipConfigmanagementPolicyControllerPtrOutputWithContext(context.Background())
}

func (i FeatureMembershipConfigmanagementPolicyControllerArgs) ToFeatureMembershipConfigmanagementPolicyControllerPtrOutputWithContext(ctx context.Context) FeatureMembershipConfigmanagementPolicyControllerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureMembershipConfigmanagementPolicyControllerOutput).ToFeatureMembershipConfigmanagementPolicyControllerPtrOutputWithContext(ctx)
}

// FeatureMembershipConfigmanagementPolicyControllerPtrInput is an input type that accepts FeatureMembershipConfigmanagementPolicyControllerArgs, FeatureMembershipConfigmanagementPolicyControllerPtr and FeatureMembershipConfigmanagementPolicyControllerPtrOutput values.
// You can construct a concrete instance of `FeatureMembershipConfigmanagementPolicyControllerPtrInput` via:
//
//	        FeatureMembershipConfigmanagementPolicyControllerArgs{...}
//
//	or:
//
//	        nil
type FeatureMembershipConfigmanagementPolicyControllerPtrInput interface {
	pulumi.Input

	ToFeatureMembershipConfigmanagementPolicyControllerPtrOutput() FeatureMembershipConfigmanagementPolicyControllerPtrOutput
	ToFeatureMembershipConfigmanagementPolicyControllerPtrOutputWithContext(context.Context) FeatureMembershipConfigmanagementPolicyControllerPtrOutput
}

type featureMembershipConfigmanagementPolicyControllerPtrType FeatureMembershipConfigmanagementPolicyControllerArgs

func FeatureMembershipConfigmanagementPolicyControllerPtr(v *FeatureMembershipConfigmanagementPolicyControllerArgs) FeatureMembershipConfigmanagementPolicyControllerPtrInput {
	return (*featureMembershipConfigmanagementPolicyControllerPtrType)(v)
}

func (*featureMembershipConfigmanagementPolicyControllerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FeatureMembershipConfigmanagementPolicyController)(nil)).Elem()
}

func (i *featureMembershipConfigmanagementPolicyControllerPtrType) ToFeatureMembershipConfigmanagementPolicyControllerPtrOutput() FeatureMembershipConfigmanagementPolicyControllerPtrOutput {
	return i.ToFeatureMembershipConfigmanagementPolicyControllerPtrOutputWithContext(context.Background())
}

func (i *featureMembershipConfigmanagementPolicyControllerPtrType) ToFeatureMembershipConfigmanagementPolicyControllerPtrOutputWithContext(ctx context.Context) FeatureMembershipConfigmanagementPolicyControllerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureMembershipConfigmanagementPolicyControllerPtrOutput)
}

type FeatureMembershipConfigmanagementPolicyControllerOutput struct{ *pulumi.OutputState }

func (FeatureMembershipConfigmanagementPolicyControllerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FeatureMembershipConfigmanagementPolicyController)(nil)).Elem()
}

func (o FeatureMembershipConfigmanagementPolicyControllerOutput) ToFeatureMembershipConfigmanagementPolicyControllerOutput() FeatureMembershipConfigmanagementPolicyControllerOutput {
	return o
}

func (o FeatureMembershipConfigmanagementPolicyControllerOutput) ToFeatureMembershipConfigmanagementPolicyControllerOutputWithContext(ctx context.Context) FeatureMembershipConfigmanagementPolicyControllerOutput {
	return o
}

func (o FeatureMembershipConfigmanagementPolicyControllerOutput) ToFeatureMembershipConfigmanagementPolicyControllerPtrOutput() FeatureMembershipConfigmanagementPolicyControllerPtrOutput {
	return o.ToFeatureMembershipConfigmanagementPolicyControllerPtrOutputWithContext(context.Background())
}

func (o FeatureMembershipConfigmanagementPolicyControllerOutput) ToFeatureMembershipConfigmanagementPolicyControllerPtrOutputWithContext(ctx context.Context) FeatureMembershipConfigmanagementPolicyControllerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FeatureMembershipConfigmanagementPolicyController) *FeatureMembershipConfigmanagementPolicyController {
		return &v
	}).(FeatureMembershipConfigmanagementPolicyControllerPtrOutput)
}

// Sets the interval for Policy Controller Audit Scans (in seconds). When set to 0, this disables audit functionality altogether.
func (o FeatureMembershipConfigmanagementPolicyControllerOutput) AuditIntervalSeconds() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FeatureMembershipConfigmanagementPolicyController) *string { return v.AuditIntervalSeconds }).(pulumi.StringPtrOutput)
}

// Enables the installation of Policy Controller. If false, the rest of PolicyController fields take no effect.
func (o FeatureMembershipConfigmanagementPolicyControllerOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FeatureMembershipConfigmanagementPolicyController) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The set of namespaces that are excluded from Policy Controller checks. Namespaces do not need to currently exist on the cluster.
func (o FeatureMembershipConfigmanagementPolicyControllerOutput) ExemptableNamespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FeatureMembershipConfigmanagementPolicyController) []string { return v.ExemptableNamespaces }).(pulumi.StringArrayOutput)
}

// Logs all denies and dry run failures.
func (o FeatureMembershipConfigmanagementPolicyControllerOutput) LogDeniesEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FeatureMembershipConfigmanagementPolicyController) *bool { return v.LogDeniesEnabled }).(pulumi.BoolPtrOutput)
}

// Specifies the backends Policy Controller should export metrics to. For example, to specify metrics should be exported to Cloud Monitoring and Prometheus, specify backends: [\"cloudmonitoring\", \"prometheus\"]. Default: [\"cloudmonitoring\", \"prometheus\"]
func (o FeatureMembershipConfigmanagementPolicyControllerOutput) Monitoring() FeatureMembershipConfigmanagementPolicyControllerMonitoringPtrOutput {
	return o.ApplyT(func(v FeatureMembershipConfigmanagementPolicyController) *FeatureMembershipConfigmanagementPolicyControllerMonitoring {
		return v.Monitoring
	}).(FeatureMembershipConfigmanagementPolicyControllerMonitoringPtrOutput)
}

// Enables mutation in policy controller. If true, mutation CRDs, webhook, and controller deployment will be deployed to the cluster.
func (o FeatureMembershipConfigmanagementPolicyControllerOutput) MutationEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FeatureMembershipConfigmanagementPolicyController) *bool { return v.MutationEnabled }).(pulumi.BoolPtrOutput)
}

// Enables the ability to use Constraint Templates that reference to objects other than the object currently being evaluated.
func (o FeatureMembershipConfigmanagementPolicyControllerOutput) ReferentialRulesEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FeatureMembershipConfigmanagementPolicyController) *bool { return v.ReferentialRulesEnabled }).(pulumi.BoolPtrOutput)
}

// Installs the default template library along with Policy Controller.
func (o FeatureMembershipConfigmanagementPolicyControllerOutput) TemplateLibraryInstalled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FeatureMembershipConfigmanagementPolicyController) *bool { return v.TemplateLibraryInstalled }).(pulumi.BoolPtrOutput)
}

type FeatureMembershipConfigmanagementPolicyControllerPtrOutput struct{ *pulumi.OutputState }

func (FeatureMembershipConfigmanagementPolicyControllerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FeatureMembershipConfigmanagementPolicyController)(nil)).Elem()
}

func (o FeatureMembershipConfigmanagementPolicyControllerPtrOutput) ToFeatureMembershipConfigmanagementPolicyControllerPtrOutput() FeatureMembershipConfigmanagementPolicyControllerPtrOutput {
	return o
}

func (o FeatureMembershipConfigmanagementPolicyControllerPtrOutput) ToFeatureMembershipConfigmanagementPolicyControllerPtrOutputWithContext(ctx context.Context) FeatureMembershipConfigmanagementPolicyControllerPtrOutput {
	return o
}

func (o FeatureMembershipConfigmanagementPolicyControllerPtrOutput) Elem() FeatureMembershipConfigmanagementPolicyControllerOutput {
	return o.ApplyT(func(v *FeatureMembershipConfigmanagementPolicyController) FeatureMembershipConfigmanagementPolicyController {
		if v != nil {
			return *v
		}
		var ret FeatureMembershipConfigmanagementPolicyController
		return ret
	}).(FeatureMembershipConfigmanagementPolicyControllerOutput)
}

// Sets the interval for Policy Controller Audit Scans (in seconds). When set to 0, this disables audit functionality altogether.
func (o FeatureMembershipConfigmanagementPolicyControllerPtrOutput) AuditIntervalSeconds() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FeatureMembershipConfigmanagementPolicyController) *string {
		if v == nil {
			return nil
		}
		return v.AuditIntervalSeconds
	}).(pulumi.StringPtrOutput)
}

// Enables the installation of Policy Controller. If false, the rest of PolicyController fields take no effect.
func (o FeatureMembershipConfigmanagementPolicyControllerPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FeatureMembershipConfigmanagementPolicyController) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The set of namespaces that are excluded from Policy Controller checks. Namespaces do not need to currently exist on the cluster.
func (o FeatureMembershipConfigmanagementPolicyControllerPtrOutput) ExemptableNamespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FeatureMembershipConfigmanagementPolicyController) []string {
		if v == nil {
			return nil
		}
		return v.ExemptableNamespaces
	}).(pulumi.StringArrayOutput)
}

// Logs all denies and dry run failures.
func (o FeatureMembershipConfigmanagementPolicyControllerPtrOutput) LogDeniesEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FeatureMembershipConfigmanagementPolicyController) *bool {
		if v == nil {
			return nil
		}
		return v.LogDeniesEnabled
	}).(pulumi.BoolPtrOutput)
}

// Specifies the backends Policy Controller should export metrics to. For example, to specify metrics should be exported to Cloud Monitoring and Prometheus, specify backends: [\"cloudmonitoring\", \"prometheus\"]. Default: [\"cloudmonitoring\", \"prometheus\"]
func (o FeatureMembershipConfigmanagementPolicyControllerPtrOutput) Monitoring() FeatureMembershipConfigmanagementPolicyControllerMonitoringPtrOutput {
	return o.ApplyT(func(v *FeatureMembershipConfigmanagementPolicyController) *FeatureMembershipConfigmanagementPolicyControllerMonitoring {
		if v == nil {
			return nil
		}
		return v.Monitoring
	}).(FeatureMembershipConfigmanagementPolicyControllerMonitoringPtrOutput)
}

// Enables mutation in policy controller. If true, mutation CRDs, webhook, and controller deployment will be deployed to the cluster.
func (o FeatureMembershipConfigmanagementPolicyControllerPtrOutput) MutationEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FeatureMembershipConfigmanagementPolicyController) *bool {
		if v == nil {
			return nil
		}
		return v.MutationEnabled
	}).(pulumi.BoolPtrOutput)
}

// Enables the ability to use Constraint Templates that reference to objects other than the object currently being evaluated.
func (o FeatureMembershipConfigmanagementPolicyControllerPtrOutput) ReferentialRulesEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FeatureMembershipConfigmanagementPolicyController) *bool {
		if v == nil {
			return nil
		}
		return v.ReferentialRulesEnabled
	}).(pulumi.BoolPtrOutput)
}

// Installs the default template library along with Policy Controller.
func (o FeatureMembershipConfigmanagementPolicyControllerPtrOutput) TemplateLibraryInstalled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FeatureMembershipConfigmanagementPolicyController) *bool {
		if v == nil {
			return nil
		}
		return v.TemplateLibraryInstalled
	}).(pulumi.BoolPtrOutput)
}

type FeatureMembershipConfigmanagementPolicyControllerMonitoring struct {
	Backends []string `pulumi:"backends"`
}

// FeatureMembershipConfigmanagementPolicyControllerMonitoringInput is an input type that accepts FeatureMembershipConfigmanagementPolicyControllerMonitoringArgs and FeatureMembershipConfigmanagementPolicyControllerMonitoringOutput values.
// You can construct a concrete instance of `FeatureMembershipConfigmanagementPolicyControllerMonitoringInput` via:
//
//	FeatureMembershipConfigmanagementPolicyControllerMonitoringArgs{...}
type FeatureMembershipConfigmanagementPolicyControllerMonitoringInput interface {
	pulumi.Input

	ToFeatureMembershipConfigmanagementPolicyControllerMonitoringOutput() FeatureMembershipConfigmanagementPolicyControllerMonitoringOutput
	ToFeatureMembershipConfigmanagementPolicyControllerMonitoringOutputWithContext(context.Context) FeatureMembershipConfigmanagementPolicyControllerMonitoringOutput
}

type FeatureMembershipConfigmanagementPolicyControllerMonitoringArgs struct {
	Backends pulumi.StringArrayInput `pulumi:"backends"`
}

func (FeatureMembershipConfigmanagementPolicyControllerMonitoringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FeatureMembershipConfigmanagementPolicyControllerMonitoring)(nil)).Elem()
}

func (i FeatureMembershipConfigmanagementPolicyControllerMonitoringArgs) ToFeatureMembershipConfigmanagementPolicyControllerMonitoringOutput() FeatureMembershipConfigmanagementPolicyControllerMonitoringOutput {
	return i.ToFeatureMembershipConfigmanagementPolicyControllerMonitoringOutputWithContext(context.Background())
}

func (i FeatureMembershipConfigmanagementPolicyControllerMonitoringArgs) ToFeatureMembershipConfigmanagementPolicyControllerMonitoringOutputWithContext(ctx context.Context) FeatureMembershipConfigmanagementPolicyControllerMonitoringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureMembershipConfigmanagementPolicyControllerMonitoringOutput)
}

func (i FeatureMembershipConfigmanagementPolicyControllerMonitoringArgs) ToFeatureMembershipConfigmanagementPolicyControllerMonitoringPtrOutput() FeatureMembershipConfigmanagementPolicyControllerMonitoringPtrOutput {
	return i.ToFeatureMembershipConfigmanagementPolicyControllerMonitoringPtrOutputWithContext(context.Background())
}

func (i FeatureMembershipConfigmanagementPolicyControllerMonitoringArgs) ToFeatureMembershipConfigmanagementPolicyControllerMonitoringPtrOutputWithContext(ctx context.Context) FeatureMembershipConfigmanagementPolicyControllerMonitoringPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureMembershipConfigmanagementPolicyControllerMonitoringOutput).ToFeatureMembershipConfigmanagementPolicyControllerMonitoringPtrOutputWithContext(ctx)
}

// FeatureMembershipConfigmanagementPolicyControllerMonitoringPtrInput is an input type that accepts FeatureMembershipConfigmanagementPolicyControllerMonitoringArgs, FeatureMembershipConfigmanagementPolicyControllerMonitoringPtr and FeatureMembershipConfigmanagementPolicyControllerMonitoringPtrOutput values.
// You can construct a concrete instance of `FeatureMembershipConfigmanagementPolicyControllerMonitoringPtrInput` via:
//
//	        FeatureMembershipConfigmanagementPolicyControllerMonitoringArgs{...}
//
//	or:
//
//	        nil
type FeatureMembershipConfigmanagementPolicyControllerMonitoringPtrInput interface {
	pulumi.Input

	ToFeatureMembershipConfigmanagementPolicyControllerMonitoringPtrOutput() FeatureMembershipConfigmanagementPolicyControllerMonitoringPtrOutput
	ToFeatureMembershipConfigmanagementPolicyControllerMonitoringPtrOutputWithContext(context.Context) FeatureMembershipConfigmanagementPolicyControllerMonitoringPtrOutput
}

type featureMembershipConfigmanagementPolicyControllerMonitoringPtrType FeatureMembershipConfigmanagementPolicyControllerMonitoringArgs

func FeatureMembershipConfigmanagementPolicyControllerMonitoringPtr(v *FeatureMembershipConfigmanagementPolicyControllerMonitoringArgs) FeatureMembershipConfigmanagementPolicyControllerMonitoringPtrInput {
	return (*featureMembershipConfigmanagementPolicyControllerMonitoringPtrType)(v)
}

func (*featureMembershipConfigmanagementPolicyControllerMonitoringPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FeatureMembershipConfigmanagementPolicyControllerMonitoring)(nil)).Elem()
}

func (i *featureMembershipConfigmanagementPolicyControllerMonitoringPtrType) ToFeatureMembershipConfigmanagementPolicyControllerMonitoringPtrOutput() FeatureMembershipConfigmanagementPolicyControllerMonitoringPtrOutput {
	return i.ToFeatureMembershipConfigmanagementPolicyControllerMonitoringPtrOutputWithContext(context.Background())
}

func (i *featureMembershipConfigmanagementPolicyControllerMonitoringPtrType) ToFeatureMembershipConfigmanagementPolicyControllerMonitoringPtrOutputWithContext(ctx context.Context) FeatureMembershipConfigmanagementPolicyControllerMonitoringPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureMembershipConfigmanagementPolicyControllerMonitoringPtrOutput)
}

type FeatureMembershipConfigmanagementPolicyControllerMonitoringOutput struct{ *pulumi.OutputState }

func (FeatureMembershipConfigmanagementPolicyControllerMonitoringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FeatureMembershipConfigmanagementPolicyControllerMonitoring)(nil)).Elem()
}

func (o FeatureMembershipConfigmanagementPolicyControllerMonitoringOutput) ToFeatureMembershipConfigmanagementPolicyControllerMonitoringOutput() FeatureMembershipConfigmanagementPolicyControllerMonitoringOutput {
	return o
}

func (o FeatureMembershipConfigmanagementPolicyControllerMonitoringOutput) ToFeatureMembershipConfigmanagementPolicyControllerMonitoringOutputWithContext(ctx context.Context) FeatureMembershipConfigmanagementPolicyControllerMonitoringOutput {
	return o
}

func (o FeatureMembershipConfigmanagementPolicyControllerMonitoringOutput) ToFeatureMembershipConfigmanagementPolicyControllerMonitoringPtrOutput() FeatureMembershipConfigmanagementPolicyControllerMonitoringPtrOutput {
	return o.ToFeatureMembershipConfigmanagementPolicyControllerMonitoringPtrOutputWithContext(context.Background())
}

func (o FeatureMembershipConfigmanagementPolicyControllerMonitoringOutput) ToFeatureMembershipConfigmanagementPolicyControllerMonitoringPtrOutputWithContext(ctx context.Context) FeatureMembershipConfigmanagementPolicyControllerMonitoringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FeatureMembershipConfigmanagementPolicyControllerMonitoring) *FeatureMembershipConfigmanagementPolicyControllerMonitoring {
		return &v
	}).(FeatureMembershipConfigmanagementPolicyControllerMonitoringPtrOutput)
}

func (o FeatureMembershipConfigmanagementPolicyControllerMonitoringOutput) Backends() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FeatureMembershipConfigmanagementPolicyControllerMonitoring) []string { return v.Backends }).(pulumi.StringArrayOutput)
}

type FeatureMembershipConfigmanagementPolicyControllerMonitoringPtrOutput struct{ *pulumi.OutputState }

func (FeatureMembershipConfigmanagementPolicyControllerMonitoringPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FeatureMembershipConfigmanagementPolicyControllerMonitoring)(nil)).Elem()
}

func (o FeatureMembershipConfigmanagementPolicyControllerMonitoringPtrOutput) ToFeatureMembershipConfigmanagementPolicyControllerMonitoringPtrOutput() FeatureMembershipConfigmanagementPolicyControllerMonitoringPtrOutput {
	return o
}

func (o FeatureMembershipConfigmanagementPolicyControllerMonitoringPtrOutput) ToFeatureMembershipConfigmanagementPolicyControllerMonitoringPtrOutputWithContext(ctx context.Context) FeatureMembershipConfigmanagementPolicyControllerMonitoringPtrOutput {
	return o
}

func (o FeatureMembershipConfigmanagementPolicyControllerMonitoringPtrOutput) Elem() FeatureMembershipConfigmanagementPolicyControllerMonitoringOutput {
	return o.ApplyT(func(v *FeatureMembershipConfigmanagementPolicyControllerMonitoring) FeatureMembershipConfigmanagementPolicyControllerMonitoring {
		if v != nil {
			return *v
		}
		var ret FeatureMembershipConfigmanagementPolicyControllerMonitoring
		return ret
	}).(FeatureMembershipConfigmanagementPolicyControllerMonitoringOutput)
}

func (o FeatureMembershipConfigmanagementPolicyControllerMonitoringPtrOutput) Backends() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FeatureMembershipConfigmanagementPolicyControllerMonitoring) []string {
		if v == nil {
			return nil
		}
		return v.Backends
	}).(pulumi.StringArrayOutput)
}

type FeatureMembershipMesh struct {
	// Deprecated: Deprecated in favor of the `management` field
	ControlPlane *string `pulumi:"controlPlane"`
	// Whether to automatically manage Service Mesh. Can either be `MANAGEMENT_AUTOMATIC` or `MANAGEMENT_MANUAL`.
	Management *string `pulumi:"management"`
}

// FeatureMembershipMeshInput is an input type that accepts FeatureMembershipMeshArgs and FeatureMembershipMeshOutput values.
// You can construct a concrete instance of `FeatureMembershipMeshInput` via:
//
//	FeatureMembershipMeshArgs{...}
type FeatureMembershipMeshInput interface {
	pulumi.Input

	ToFeatureMembershipMeshOutput() FeatureMembershipMeshOutput
	ToFeatureMembershipMeshOutputWithContext(context.Context) FeatureMembershipMeshOutput
}

type FeatureMembershipMeshArgs struct {
	// Deprecated: Deprecated in favor of the `management` field
	ControlPlane pulumi.StringPtrInput `pulumi:"controlPlane"`
	// Whether to automatically manage Service Mesh. Can either be `MANAGEMENT_AUTOMATIC` or `MANAGEMENT_MANUAL`.
	Management pulumi.StringPtrInput `pulumi:"management"`
}

func (FeatureMembershipMeshArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FeatureMembershipMesh)(nil)).Elem()
}

func (i FeatureMembershipMeshArgs) ToFeatureMembershipMeshOutput() FeatureMembershipMeshOutput {
	return i.ToFeatureMembershipMeshOutputWithContext(context.Background())
}

func (i FeatureMembershipMeshArgs) ToFeatureMembershipMeshOutputWithContext(ctx context.Context) FeatureMembershipMeshOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureMembershipMeshOutput)
}

func (i FeatureMembershipMeshArgs) ToFeatureMembershipMeshPtrOutput() FeatureMembershipMeshPtrOutput {
	return i.ToFeatureMembershipMeshPtrOutputWithContext(context.Background())
}

func (i FeatureMembershipMeshArgs) ToFeatureMembershipMeshPtrOutputWithContext(ctx context.Context) FeatureMembershipMeshPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureMembershipMeshOutput).ToFeatureMembershipMeshPtrOutputWithContext(ctx)
}

// FeatureMembershipMeshPtrInput is an input type that accepts FeatureMembershipMeshArgs, FeatureMembershipMeshPtr and FeatureMembershipMeshPtrOutput values.
// You can construct a concrete instance of `FeatureMembershipMeshPtrInput` via:
//
//	        FeatureMembershipMeshArgs{...}
//
//	or:
//
//	        nil
type FeatureMembershipMeshPtrInput interface {
	pulumi.Input

	ToFeatureMembershipMeshPtrOutput() FeatureMembershipMeshPtrOutput
	ToFeatureMembershipMeshPtrOutputWithContext(context.Context) FeatureMembershipMeshPtrOutput
}

type featureMembershipMeshPtrType FeatureMembershipMeshArgs

func FeatureMembershipMeshPtr(v *FeatureMembershipMeshArgs) FeatureMembershipMeshPtrInput {
	return (*featureMembershipMeshPtrType)(v)
}

func (*featureMembershipMeshPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FeatureMembershipMesh)(nil)).Elem()
}

func (i *featureMembershipMeshPtrType) ToFeatureMembershipMeshPtrOutput() FeatureMembershipMeshPtrOutput {
	return i.ToFeatureMembershipMeshPtrOutputWithContext(context.Background())
}

func (i *featureMembershipMeshPtrType) ToFeatureMembershipMeshPtrOutputWithContext(ctx context.Context) FeatureMembershipMeshPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureMembershipMeshPtrOutput)
}

type FeatureMembershipMeshOutput struct{ *pulumi.OutputState }

func (FeatureMembershipMeshOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FeatureMembershipMesh)(nil)).Elem()
}

func (o FeatureMembershipMeshOutput) ToFeatureMembershipMeshOutput() FeatureMembershipMeshOutput {
	return o
}

func (o FeatureMembershipMeshOutput) ToFeatureMembershipMeshOutputWithContext(ctx context.Context) FeatureMembershipMeshOutput {
	return o
}

func (o FeatureMembershipMeshOutput) ToFeatureMembershipMeshPtrOutput() FeatureMembershipMeshPtrOutput {
	return o.ToFeatureMembershipMeshPtrOutputWithContext(context.Background())
}

func (o FeatureMembershipMeshOutput) ToFeatureMembershipMeshPtrOutputWithContext(ctx context.Context) FeatureMembershipMeshPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FeatureMembershipMesh) *FeatureMembershipMesh {
		return &v
	}).(FeatureMembershipMeshPtrOutput)
}

// Deprecated: Deprecated in favor of the `management` field
func (o FeatureMembershipMeshOutput) ControlPlane() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FeatureMembershipMesh) *string { return v.ControlPlane }).(pulumi.StringPtrOutput)
}

// Whether to automatically manage Service Mesh. Can either be `MANAGEMENT_AUTOMATIC` or `MANAGEMENT_MANUAL`.
func (o FeatureMembershipMeshOutput) Management() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FeatureMembershipMesh) *string { return v.Management }).(pulumi.StringPtrOutput)
}

type FeatureMembershipMeshPtrOutput struct{ *pulumi.OutputState }

func (FeatureMembershipMeshPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FeatureMembershipMesh)(nil)).Elem()
}

func (o FeatureMembershipMeshPtrOutput) ToFeatureMembershipMeshPtrOutput() FeatureMembershipMeshPtrOutput {
	return o
}

func (o FeatureMembershipMeshPtrOutput) ToFeatureMembershipMeshPtrOutputWithContext(ctx context.Context) FeatureMembershipMeshPtrOutput {
	return o
}

func (o FeatureMembershipMeshPtrOutput) Elem() FeatureMembershipMeshOutput {
	return o.ApplyT(func(v *FeatureMembershipMesh) FeatureMembershipMesh {
		if v != nil {
			return *v
		}
		var ret FeatureMembershipMesh
		return ret
	}).(FeatureMembershipMeshOutput)
}

// Deprecated: Deprecated in favor of the `management` field
func (o FeatureMembershipMeshPtrOutput) ControlPlane() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FeatureMembershipMesh) *string {
		if v == nil {
			return nil
		}
		return v.ControlPlane
	}).(pulumi.StringPtrOutput)
}

// Whether to automatically manage Service Mesh. Can either be `MANAGEMENT_AUTOMATIC` or `MANAGEMENT_MANUAL`.
func (o FeatureMembershipMeshPtrOutput) Management() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FeatureMembershipMesh) *string {
		if v == nil {
			return nil
		}
		return v.Management
	}).(pulumi.StringPtrOutput)
}

type FeatureResourceState struct {
	// (Output)
	// Whether this Feature has outstanding resources that need to be cleaned up before it can be disabled.
	HasResources *bool `pulumi:"hasResources"`
	// (Output)
	// Output only. The "running state" of the Feature in this Hub.
	// Structure is documented below.
	State *string `pulumi:"state"`
}

// FeatureResourceStateInput is an input type that accepts FeatureResourceStateArgs and FeatureResourceStateOutput values.
// You can construct a concrete instance of `FeatureResourceStateInput` via:
//
//	FeatureResourceStateArgs{...}
type FeatureResourceStateInput interface {
	pulumi.Input

	ToFeatureResourceStateOutput() FeatureResourceStateOutput
	ToFeatureResourceStateOutputWithContext(context.Context) FeatureResourceStateOutput
}

type FeatureResourceStateArgs struct {
	// (Output)
	// Whether this Feature has outstanding resources that need to be cleaned up before it can be disabled.
	HasResources pulumi.BoolPtrInput `pulumi:"hasResources"`
	// (Output)
	// Output only. The "running state" of the Feature in this Hub.
	// Structure is documented below.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (FeatureResourceStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FeatureResourceState)(nil)).Elem()
}

func (i FeatureResourceStateArgs) ToFeatureResourceStateOutput() FeatureResourceStateOutput {
	return i.ToFeatureResourceStateOutputWithContext(context.Background())
}

func (i FeatureResourceStateArgs) ToFeatureResourceStateOutputWithContext(ctx context.Context) FeatureResourceStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureResourceStateOutput)
}

// FeatureResourceStateArrayInput is an input type that accepts FeatureResourceStateArray and FeatureResourceStateArrayOutput values.
// You can construct a concrete instance of `FeatureResourceStateArrayInput` via:
//
//	FeatureResourceStateArray{ FeatureResourceStateArgs{...} }
type FeatureResourceStateArrayInput interface {
	pulumi.Input

	ToFeatureResourceStateArrayOutput() FeatureResourceStateArrayOutput
	ToFeatureResourceStateArrayOutputWithContext(context.Context) FeatureResourceStateArrayOutput
}

type FeatureResourceStateArray []FeatureResourceStateInput

func (FeatureResourceStateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FeatureResourceState)(nil)).Elem()
}

func (i FeatureResourceStateArray) ToFeatureResourceStateArrayOutput() FeatureResourceStateArrayOutput {
	return i.ToFeatureResourceStateArrayOutputWithContext(context.Background())
}

func (i FeatureResourceStateArray) ToFeatureResourceStateArrayOutputWithContext(ctx context.Context) FeatureResourceStateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureResourceStateArrayOutput)
}

type FeatureResourceStateOutput struct{ *pulumi.OutputState }

func (FeatureResourceStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FeatureResourceState)(nil)).Elem()
}

func (o FeatureResourceStateOutput) ToFeatureResourceStateOutput() FeatureResourceStateOutput {
	return o
}

func (o FeatureResourceStateOutput) ToFeatureResourceStateOutputWithContext(ctx context.Context) FeatureResourceStateOutput {
	return o
}

// (Output)
// Whether this Feature has outstanding resources that need to be cleaned up before it can be disabled.
func (o FeatureResourceStateOutput) HasResources() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FeatureResourceState) *bool { return v.HasResources }).(pulumi.BoolPtrOutput)
}

// (Output)
// Output only. The "running state" of the Feature in this Hub.
// Structure is documented below.
func (o FeatureResourceStateOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FeatureResourceState) *string { return v.State }).(pulumi.StringPtrOutput)
}

type FeatureResourceStateArrayOutput struct{ *pulumi.OutputState }

func (FeatureResourceStateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FeatureResourceState)(nil)).Elem()
}

func (o FeatureResourceStateArrayOutput) ToFeatureResourceStateArrayOutput() FeatureResourceStateArrayOutput {
	return o
}

func (o FeatureResourceStateArrayOutput) ToFeatureResourceStateArrayOutputWithContext(ctx context.Context) FeatureResourceStateArrayOutput {
	return o
}

func (o FeatureResourceStateArrayOutput) Index(i pulumi.IntInput) FeatureResourceStateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FeatureResourceState {
		return vs[0].([]FeatureResourceState)[vs[1].(int)]
	}).(FeatureResourceStateOutput)
}

type FeatureSpec struct {
	// Fleet Observability feature spec.
	// Structure is documented below.
	Fleetobservability *FeatureSpecFleetobservability `pulumi:"fleetobservability"`
	// Multicluster Ingress-specific spec.
	// Structure is documented below.
	Multiclusteringress *FeatureSpecMulticlusteringress `pulumi:"multiclusteringress"`
}

// FeatureSpecInput is an input type that accepts FeatureSpecArgs and FeatureSpecOutput values.
// You can construct a concrete instance of `FeatureSpecInput` via:
//
//	FeatureSpecArgs{...}
type FeatureSpecInput interface {
	pulumi.Input

	ToFeatureSpecOutput() FeatureSpecOutput
	ToFeatureSpecOutputWithContext(context.Context) FeatureSpecOutput
}

type FeatureSpecArgs struct {
	// Fleet Observability feature spec.
	// Structure is documented below.
	Fleetobservability FeatureSpecFleetobservabilityPtrInput `pulumi:"fleetobservability"`
	// Multicluster Ingress-specific spec.
	// Structure is documented below.
	Multiclusteringress FeatureSpecMulticlusteringressPtrInput `pulumi:"multiclusteringress"`
}

func (FeatureSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FeatureSpec)(nil)).Elem()
}

func (i FeatureSpecArgs) ToFeatureSpecOutput() FeatureSpecOutput {
	return i.ToFeatureSpecOutputWithContext(context.Background())
}

func (i FeatureSpecArgs) ToFeatureSpecOutputWithContext(ctx context.Context) FeatureSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureSpecOutput)
}

func (i FeatureSpecArgs) ToFeatureSpecPtrOutput() FeatureSpecPtrOutput {
	return i.ToFeatureSpecPtrOutputWithContext(context.Background())
}

func (i FeatureSpecArgs) ToFeatureSpecPtrOutputWithContext(ctx context.Context) FeatureSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureSpecOutput).ToFeatureSpecPtrOutputWithContext(ctx)
}

// FeatureSpecPtrInput is an input type that accepts FeatureSpecArgs, FeatureSpecPtr and FeatureSpecPtrOutput values.
// You can construct a concrete instance of `FeatureSpecPtrInput` via:
//
//	        FeatureSpecArgs{...}
//
//	or:
//
//	        nil
type FeatureSpecPtrInput interface {
	pulumi.Input

	ToFeatureSpecPtrOutput() FeatureSpecPtrOutput
	ToFeatureSpecPtrOutputWithContext(context.Context) FeatureSpecPtrOutput
}

type featureSpecPtrType FeatureSpecArgs

func FeatureSpecPtr(v *FeatureSpecArgs) FeatureSpecPtrInput {
	return (*featureSpecPtrType)(v)
}

func (*featureSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FeatureSpec)(nil)).Elem()
}

func (i *featureSpecPtrType) ToFeatureSpecPtrOutput() FeatureSpecPtrOutput {
	return i.ToFeatureSpecPtrOutputWithContext(context.Background())
}

func (i *featureSpecPtrType) ToFeatureSpecPtrOutputWithContext(ctx context.Context) FeatureSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureSpecPtrOutput)
}

type FeatureSpecOutput struct{ *pulumi.OutputState }

func (FeatureSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FeatureSpec)(nil)).Elem()
}

func (o FeatureSpecOutput) ToFeatureSpecOutput() FeatureSpecOutput {
	return o
}

func (o FeatureSpecOutput) ToFeatureSpecOutputWithContext(ctx context.Context) FeatureSpecOutput {
	return o
}

func (o FeatureSpecOutput) ToFeatureSpecPtrOutput() FeatureSpecPtrOutput {
	return o.ToFeatureSpecPtrOutputWithContext(context.Background())
}

func (o FeatureSpecOutput) ToFeatureSpecPtrOutputWithContext(ctx context.Context) FeatureSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FeatureSpec) *FeatureSpec {
		return &v
	}).(FeatureSpecPtrOutput)
}

// Fleet Observability feature spec.
// Structure is documented below.
func (o FeatureSpecOutput) Fleetobservability() FeatureSpecFleetobservabilityPtrOutput {
	return o.ApplyT(func(v FeatureSpec) *FeatureSpecFleetobservability { return v.Fleetobservability }).(FeatureSpecFleetobservabilityPtrOutput)
}

// Multicluster Ingress-specific spec.
// Structure is documented below.
func (o FeatureSpecOutput) Multiclusteringress() FeatureSpecMulticlusteringressPtrOutput {
	return o.ApplyT(func(v FeatureSpec) *FeatureSpecMulticlusteringress { return v.Multiclusteringress }).(FeatureSpecMulticlusteringressPtrOutput)
}

type FeatureSpecPtrOutput struct{ *pulumi.OutputState }

func (FeatureSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FeatureSpec)(nil)).Elem()
}

func (o FeatureSpecPtrOutput) ToFeatureSpecPtrOutput() FeatureSpecPtrOutput {
	return o
}

func (o FeatureSpecPtrOutput) ToFeatureSpecPtrOutputWithContext(ctx context.Context) FeatureSpecPtrOutput {
	return o
}

func (o FeatureSpecPtrOutput) Elem() FeatureSpecOutput {
	return o.ApplyT(func(v *FeatureSpec) FeatureSpec {
		if v != nil {
			return *v
		}
		var ret FeatureSpec
		return ret
	}).(FeatureSpecOutput)
}

// Fleet Observability feature spec.
// Structure is documented below.
func (o FeatureSpecPtrOutput) Fleetobservability() FeatureSpecFleetobservabilityPtrOutput {
	return o.ApplyT(func(v *FeatureSpec) *FeatureSpecFleetobservability {
		if v == nil {
			return nil
		}
		return v.Fleetobservability
	}).(FeatureSpecFleetobservabilityPtrOutput)
}

// Multicluster Ingress-specific spec.
// Structure is documented below.
func (o FeatureSpecPtrOutput) Multiclusteringress() FeatureSpecMulticlusteringressPtrOutput {
	return o.ApplyT(func(v *FeatureSpec) *FeatureSpecMulticlusteringress {
		if v == nil {
			return nil
		}
		return v.Multiclusteringress
	}).(FeatureSpecMulticlusteringressPtrOutput)
}

type FeatureSpecFleetobservability struct {
	// Specified if fleet logging feature is enabled for the entire fleet. If UNSPECIFIED, fleet logging feature is disabled for the entire fleet.
	// Structure is documented below.
	LoggingConfig *FeatureSpecFleetobservabilityLoggingConfig `pulumi:"loggingConfig"`
}

// FeatureSpecFleetobservabilityInput is an input type that accepts FeatureSpecFleetobservabilityArgs and FeatureSpecFleetobservabilityOutput values.
// You can construct a concrete instance of `FeatureSpecFleetobservabilityInput` via:
//
//	FeatureSpecFleetobservabilityArgs{...}
type FeatureSpecFleetobservabilityInput interface {
	pulumi.Input

	ToFeatureSpecFleetobservabilityOutput() FeatureSpecFleetobservabilityOutput
	ToFeatureSpecFleetobservabilityOutputWithContext(context.Context) FeatureSpecFleetobservabilityOutput
}

type FeatureSpecFleetobservabilityArgs struct {
	// Specified if fleet logging feature is enabled for the entire fleet. If UNSPECIFIED, fleet logging feature is disabled for the entire fleet.
	// Structure is documented below.
	LoggingConfig FeatureSpecFleetobservabilityLoggingConfigPtrInput `pulumi:"loggingConfig"`
}

func (FeatureSpecFleetobservabilityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FeatureSpecFleetobservability)(nil)).Elem()
}

func (i FeatureSpecFleetobservabilityArgs) ToFeatureSpecFleetobservabilityOutput() FeatureSpecFleetobservabilityOutput {
	return i.ToFeatureSpecFleetobservabilityOutputWithContext(context.Background())
}

func (i FeatureSpecFleetobservabilityArgs) ToFeatureSpecFleetobservabilityOutputWithContext(ctx context.Context) FeatureSpecFleetobservabilityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureSpecFleetobservabilityOutput)
}

func (i FeatureSpecFleetobservabilityArgs) ToFeatureSpecFleetobservabilityPtrOutput() FeatureSpecFleetobservabilityPtrOutput {
	return i.ToFeatureSpecFleetobservabilityPtrOutputWithContext(context.Background())
}

func (i FeatureSpecFleetobservabilityArgs) ToFeatureSpecFleetobservabilityPtrOutputWithContext(ctx context.Context) FeatureSpecFleetobservabilityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureSpecFleetobservabilityOutput).ToFeatureSpecFleetobservabilityPtrOutputWithContext(ctx)
}

// FeatureSpecFleetobservabilityPtrInput is an input type that accepts FeatureSpecFleetobservabilityArgs, FeatureSpecFleetobservabilityPtr and FeatureSpecFleetobservabilityPtrOutput values.
// You can construct a concrete instance of `FeatureSpecFleetobservabilityPtrInput` via:
//
//	        FeatureSpecFleetobservabilityArgs{...}
//
//	or:
//
//	        nil
type FeatureSpecFleetobservabilityPtrInput interface {
	pulumi.Input

	ToFeatureSpecFleetobservabilityPtrOutput() FeatureSpecFleetobservabilityPtrOutput
	ToFeatureSpecFleetobservabilityPtrOutputWithContext(context.Context) FeatureSpecFleetobservabilityPtrOutput
}

type featureSpecFleetobservabilityPtrType FeatureSpecFleetobservabilityArgs

func FeatureSpecFleetobservabilityPtr(v *FeatureSpecFleetobservabilityArgs) FeatureSpecFleetobservabilityPtrInput {
	return (*featureSpecFleetobservabilityPtrType)(v)
}

func (*featureSpecFleetobservabilityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FeatureSpecFleetobservability)(nil)).Elem()
}

func (i *featureSpecFleetobservabilityPtrType) ToFeatureSpecFleetobservabilityPtrOutput() FeatureSpecFleetobservabilityPtrOutput {
	return i.ToFeatureSpecFleetobservabilityPtrOutputWithContext(context.Background())
}

func (i *featureSpecFleetobservabilityPtrType) ToFeatureSpecFleetobservabilityPtrOutputWithContext(ctx context.Context) FeatureSpecFleetobservabilityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureSpecFleetobservabilityPtrOutput)
}

type FeatureSpecFleetobservabilityOutput struct{ *pulumi.OutputState }

func (FeatureSpecFleetobservabilityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FeatureSpecFleetobservability)(nil)).Elem()
}

func (o FeatureSpecFleetobservabilityOutput) ToFeatureSpecFleetobservabilityOutput() FeatureSpecFleetobservabilityOutput {
	return o
}

func (o FeatureSpecFleetobservabilityOutput) ToFeatureSpecFleetobservabilityOutputWithContext(ctx context.Context) FeatureSpecFleetobservabilityOutput {
	return o
}

func (o FeatureSpecFleetobservabilityOutput) ToFeatureSpecFleetobservabilityPtrOutput() FeatureSpecFleetobservabilityPtrOutput {
	return o.ToFeatureSpecFleetobservabilityPtrOutputWithContext(context.Background())
}

func (o FeatureSpecFleetobservabilityOutput) ToFeatureSpecFleetobservabilityPtrOutputWithContext(ctx context.Context) FeatureSpecFleetobservabilityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FeatureSpecFleetobservability) *FeatureSpecFleetobservability {
		return &v
	}).(FeatureSpecFleetobservabilityPtrOutput)
}

// Specified if fleet logging feature is enabled for the entire fleet. If UNSPECIFIED, fleet logging feature is disabled for the entire fleet.
// Structure is documented below.
func (o FeatureSpecFleetobservabilityOutput) LoggingConfig() FeatureSpecFleetobservabilityLoggingConfigPtrOutput {
	return o.ApplyT(func(v FeatureSpecFleetobservability) *FeatureSpecFleetobservabilityLoggingConfig {
		return v.LoggingConfig
	}).(FeatureSpecFleetobservabilityLoggingConfigPtrOutput)
}

type FeatureSpecFleetobservabilityPtrOutput struct{ *pulumi.OutputState }

func (FeatureSpecFleetobservabilityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FeatureSpecFleetobservability)(nil)).Elem()
}

func (o FeatureSpecFleetobservabilityPtrOutput) ToFeatureSpecFleetobservabilityPtrOutput() FeatureSpecFleetobservabilityPtrOutput {
	return o
}

func (o FeatureSpecFleetobservabilityPtrOutput) ToFeatureSpecFleetobservabilityPtrOutputWithContext(ctx context.Context) FeatureSpecFleetobservabilityPtrOutput {
	return o
}

func (o FeatureSpecFleetobservabilityPtrOutput) Elem() FeatureSpecFleetobservabilityOutput {
	return o.ApplyT(func(v *FeatureSpecFleetobservability) FeatureSpecFleetobservability {
		if v != nil {
			return *v
		}
		var ret FeatureSpecFleetobservability
		return ret
	}).(FeatureSpecFleetobservabilityOutput)
}

// Specified if fleet logging feature is enabled for the entire fleet. If UNSPECIFIED, fleet logging feature is disabled for the entire fleet.
// Structure is documented below.
func (o FeatureSpecFleetobservabilityPtrOutput) LoggingConfig() FeatureSpecFleetobservabilityLoggingConfigPtrOutput {
	return o.ApplyT(func(v *FeatureSpecFleetobservability) *FeatureSpecFleetobservabilityLoggingConfig {
		if v == nil {
			return nil
		}
		return v.LoggingConfig
	}).(FeatureSpecFleetobservabilityLoggingConfigPtrOutput)
}

type FeatureSpecFleetobservabilityLoggingConfig struct {
	// Specified if applying the default routing config to logs not specified in other configs.
	// Structure is documented below.
	DefaultConfig *FeatureSpecFleetobservabilityLoggingConfigDefaultConfig `pulumi:"defaultConfig"`
	// Specified if applying the routing config to all logs for all fleet scopes.
	// Structure is documented below.
	FleetScopeLogsConfig *FeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfig `pulumi:"fleetScopeLogsConfig"`
}

// FeatureSpecFleetobservabilityLoggingConfigInput is an input type that accepts FeatureSpecFleetobservabilityLoggingConfigArgs and FeatureSpecFleetobservabilityLoggingConfigOutput values.
// You can construct a concrete instance of `FeatureSpecFleetobservabilityLoggingConfigInput` via:
//
//	FeatureSpecFleetobservabilityLoggingConfigArgs{...}
type FeatureSpecFleetobservabilityLoggingConfigInput interface {
	pulumi.Input

	ToFeatureSpecFleetobservabilityLoggingConfigOutput() FeatureSpecFleetobservabilityLoggingConfigOutput
	ToFeatureSpecFleetobservabilityLoggingConfigOutputWithContext(context.Context) FeatureSpecFleetobservabilityLoggingConfigOutput
}

type FeatureSpecFleetobservabilityLoggingConfigArgs struct {
	// Specified if applying the default routing config to logs not specified in other configs.
	// Structure is documented below.
	DefaultConfig FeatureSpecFleetobservabilityLoggingConfigDefaultConfigPtrInput `pulumi:"defaultConfig"`
	// Specified if applying the routing config to all logs for all fleet scopes.
	// Structure is documented below.
	FleetScopeLogsConfig FeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigPtrInput `pulumi:"fleetScopeLogsConfig"`
}

func (FeatureSpecFleetobservabilityLoggingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FeatureSpecFleetobservabilityLoggingConfig)(nil)).Elem()
}

func (i FeatureSpecFleetobservabilityLoggingConfigArgs) ToFeatureSpecFleetobservabilityLoggingConfigOutput() FeatureSpecFleetobservabilityLoggingConfigOutput {
	return i.ToFeatureSpecFleetobservabilityLoggingConfigOutputWithContext(context.Background())
}

func (i FeatureSpecFleetobservabilityLoggingConfigArgs) ToFeatureSpecFleetobservabilityLoggingConfigOutputWithContext(ctx context.Context) FeatureSpecFleetobservabilityLoggingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureSpecFleetobservabilityLoggingConfigOutput)
}

func (i FeatureSpecFleetobservabilityLoggingConfigArgs) ToFeatureSpecFleetobservabilityLoggingConfigPtrOutput() FeatureSpecFleetobservabilityLoggingConfigPtrOutput {
	return i.ToFeatureSpecFleetobservabilityLoggingConfigPtrOutputWithContext(context.Background())
}

func (i FeatureSpecFleetobservabilityLoggingConfigArgs) ToFeatureSpecFleetobservabilityLoggingConfigPtrOutputWithContext(ctx context.Context) FeatureSpecFleetobservabilityLoggingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureSpecFleetobservabilityLoggingConfigOutput).ToFeatureSpecFleetobservabilityLoggingConfigPtrOutputWithContext(ctx)
}

// FeatureSpecFleetobservabilityLoggingConfigPtrInput is an input type that accepts FeatureSpecFleetobservabilityLoggingConfigArgs, FeatureSpecFleetobservabilityLoggingConfigPtr and FeatureSpecFleetobservabilityLoggingConfigPtrOutput values.
// You can construct a concrete instance of `FeatureSpecFleetobservabilityLoggingConfigPtrInput` via:
//
//	        FeatureSpecFleetobservabilityLoggingConfigArgs{...}
//
//	or:
//
//	        nil
type FeatureSpecFleetobservabilityLoggingConfigPtrInput interface {
	pulumi.Input

	ToFeatureSpecFleetobservabilityLoggingConfigPtrOutput() FeatureSpecFleetobservabilityLoggingConfigPtrOutput
	ToFeatureSpecFleetobservabilityLoggingConfigPtrOutputWithContext(context.Context) FeatureSpecFleetobservabilityLoggingConfigPtrOutput
}

type featureSpecFleetobservabilityLoggingConfigPtrType FeatureSpecFleetobservabilityLoggingConfigArgs

func FeatureSpecFleetobservabilityLoggingConfigPtr(v *FeatureSpecFleetobservabilityLoggingConfigArgs) FeatureSpecFleetobservabilityLoggingConfigPtrInput {
	return (*featureSpecFleetobservabilityLoggingConfigPtrType)(v)
}

func (*featureSpecFleetobservabilityLoggingConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FeatureSpecFleetobservabilityLoggingConfig)(nil)).Elem()
}

func (i *featureSpecFleetobservabilityLoggingConfigPtrType) ToFeatureSpecFleetobservabilityLoggingConfigPtrOutput() FeatureSpecFleetobservabilityLoggingConfigPtrOutput {
	return i.ToFeatureSpecFleetobservabilityLoggingConfigPtrOutputWithContext(context.Background())
}

func (i *featureSpecFleetobservabilityLoggingConfigPtrType) ToFeatureSpecFleetobservabilityLoggingConfigPtrOutputWithContext(ctx context.Context) FeatureSpecFleetobservabilityLoggingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureSpecFleetobservabilityLoggingConfigPtrOutput)
}

type FeatureSpecFleetobservabilityLoggingConfigOutput struct{ *pulumi.OutputState }

func (FeatureSpecFleetobservabilityLoggingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FeatureSpecFleetobservabilityLoggingConfig)(nil)).Elem()
}

func (o FeatureSpecFleetobservabilityLoggingConfigOutput) ToFeatureSpecFleetobservabilityLoggingConfigOutput() FeatureSpecFleetobservabilityLoggingConfigOutput {
	return o
}

func (o FeatureSpecFleetobservabilityLoggingConfigOutput) ToFeatureSpecFleetobservabilityLoggingConfigOutputWithContext(ctx context.Context) FeatureSpecFleetobservabilityLoggingConfigOutput {
	return o
}

func (o FeatureSpecFleetobservabilityLoggingConfigOutput) ToFeatureSpecFleetobservabilityLoggingConfigPtrOutput() FeatureSpecFleetobservabilityLoggingConfigPtrOutput {
	return o.ToFeatureSpecFleetobservabilityLoggingConfigPtrOutputWithContext(context.Background())
}

func (o FeatureSpecFleetobservabilityLoggingConfigOutput) ToFeatureSpecFleetobservabilityLoggingConfigPtrOutputWithContext(ctx context.Context) FeatureSpecFleetobservabilityLoggingConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FeatureSpecFleetobservabilityLoggingConfig) *FeatureSpecFleetobservabilityLoggingConfig {
		return &v
	}).(FeatureSpecFleetobservabilityLoggingConfigPtrOutput)
}

// Specified if applying the default routing config to logs not specified in other configs.
// Structure is documented below.
func (o FeatureSpecFleetobservabilityLoggingConfigOutput) DefaultConfig() FeatureSpecFleetobservabilityLoggingConfigDefaultConfigPtrOutput {
	return o.ApplyT(func(v FeatureSpecFleetobservabilityLoggingConfig) *FeatureSpecFleetobservabilityLoggingConfigDefaultConfig {
		return v.DefaultConfig
	}).(FeatureSpecFleetobservabilityLoggingConfigDefaultConfigPtrOutput)
}

// Specified if applying the routing config to all logs for all fleet scopes.
// Structure is documented below.
func (o FeatureSpecFleetobservabilityLoggingConfigOutput) FleetScopeLogsConfig() FeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigPtrOutput {
	return o.ApplyT(func(v FeatureSpecFleetobservabilityLoggingConfig) *FeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfig {
		return v.FleetScopeLogsConfig
	}).(FeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigPtrOutput)
}

type FeatureSpecFleetobservabilityLoggingConfigPtrOutput struct{ *pulumi.OutputState }

func (FeatureSpecFleetobservabilityLoggingConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FeatureSpecFleetobservabilityLoggingConfig)(nil)).Elem()
}

func (o FeatureSpecFleetobservabilityLoggingConfigPtrOutput) ToFeatureSpecFleetobservabilityLoggingConfigPtrOutput() FeatureSpecFleetobservabilityLoggingConfigPtrOutput {
	return o
}

func (o FeatureSpecFleetobservabilityLoggingConfigPtrOutput) ToFeatureSpecFleetobservabilityLoggingConfigPtrOutputWithContext(ctx context.Context) FeatureSpecFleetobservabilityLoggingConfigPtrOutput {
	return o
}

func (o FeatureSpecFleetobservabilityLoggingConfigPtrOutput) Elem() FeatureSpecFleetobservabilityLoggingConfigOutput {
	return o.ApplyT(func(v *FeatureSpecFleetobservabilityLoggingConfig) FeatureSpecFleetobservabilityLoggingConfig {
		if v != nil {
			return *v
		}
		var ret FeatureSpecFleetobservabilityLoggingConfig
		return ret
	}).(FeatureSpecFleetobservabilityLoggingConfigOutput)
}

// Specified if applying the default routing config to logs not specified in other configs.
// Structure is documented below.
func (o FeatureSpecFleetobservabilityLoggingConfigPtrOutput) DefaultConfig() FeatureSpecFleetobservabilityLoggingConfigDefaultConfigPtrOutput {
	return o.ApplyT(func(v *FeatureSpecFleetobservabilityLoggingConfig) *FeatureSpecFleetobservabilityLoggingConfigDefaultConfig {
		if v == nil {
			return nil
		}
		return v.DefaultConfig
	}).(FeatureSpecFleetobservabilityLoggingConfigDefaultConfigPtrOutput)
}

// Specified if applying the routing config to all logs for all fleet scopes.
// Structure is documented below.
func (o FeatureSpecFleetobservabilityLoggingConfigPtrOutput) FleetScopeLogsConfig() FeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigPtrOutput {
	return o.ApplyT(func(v *FeatureSpecFleetobservabilityLoggingConfig) *FeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfig {
		if v == nil {
			return nil
		}
		return v.FleetScopeLogsConfig
	}).(FeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigPtrOutput)
}

type FeatureSpecFleetobservabilityLoggingConfigDefaultConfig struct {
	// Specified if fleet logging feature is enabled.
	// Possible values are: `MODE_UNSPECIFIED`, `COPY`, `MOVE`.
	Mode *string `pulumi:"mode"`
}

// FeatureSpecFleetobservabilityLoggingConfigDefaultConfigInput is an input type that accepts FeatureSpecFleetobservabilityLoggingConfigDefaultConfigArgs and FeatureSpecFleetobservabilityLoggingConfigDefaultConfigOutput values.
// You can construct a concrete instance of `FeatureSpecFleetobservabilityLoggingConfigDefaultConfigInput` via:
//
//	FeatureSpecFleetobservabilityLoggingConfigDefaultConfigArgs{...}
type FeatureSpecFleetobservabilityLoggingConfigDefaultConfigInput interface {
	pulumi.Input

	ToFeatureSpecFleetobservabilityLoggingConfigDefaultConfigOutput() FeatureSpecFleetobservabilityLoggingConfigDefaultConfigOutput
	ToFeatureSpecFleetobservabilityLoggingConfigDefaultConfigOutputWithContext(context.Context) FeatureSpecFleetobservabilityLoggingConfigDefaultConfigOutput
}

type FeatureSpecFleetobservabilityLoggingConfigDefaultConfigArgs struct {
	// Specified if fleet logging feature is enabled.
	// Possible values are: `MODE_UNSPECIFIED`, `COPY`, `MOVE`.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (FeatureSpecFleetobservabilityLoggingConfigDefaultConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FeatureSpecFleetobservabilityLoggingConfigDefaultConfig)(nil)).Elem()
}

func (i FeatureSpecFleetobservabilityLoggingConfigDefaultConfigArgs) ToFeatureSpecFleetobservabilityLoggingConfigDefaultConfigOutput() FeatureSpecFleetobservabilityLoggingConfigDefaultConfigOutput {
	return i.ToFeatureSpecFleetobservabilityLoggingConfigDefaultConfigOutputWithContext(context.Background())
}

func (i FeatureSpecFleetobservabilityLoggingConfigDefaultConfigArgs) ToFeatureSpecFleetobservabilityLoggingConfigDefaultConfigOutputWithContext(ctx context.Context) FeatureSpecFleetobservabilityLoggingConfigDefaultConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureSpecFleetobservabilityLoggingConfigDefaultConfigOutput)
}

func (i FeatureSpecFleetobservabilityLoggingConfigDefaultConfigArgs) ToFeatureSpecFleetobservabilityLoggingConfigDefaultConfigPtrOutput() FeatureSpecFleetobservabilityLoggingConfigDefaultConfigPtrOutput {
	return i.ToFeatureSpecFleetobservabilityLoggingConfigDefaultConfigPtrOutputWithContext(context.Background())
}

func (i FeatureSpecFleetobservabilityLoggingConfigDefaultConfigArgs) ToFeatureSpecFleetobservabilityLoggingConfigDefaultConfigPtrOutputWithContext(ctx context.Context) FeatureSpecFleetobservabilityLoggingConfigDefaultConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureSpecFleetobservabilityLoggingConfigDefaultConfigOutput).ToFeatureSpecFleetobservabilityLoggingConfigDefaultConfigPtrOutputWithContext(ctx)
}

// FeatureSpecFleetobservabilityLoggingConfigDefaultConfigPtrInput is an input type that accepts FeatureSpecFleetobservabilityLoggingConfigDefaultConfigArgs, FeatureSpecFleetobservabilityLoggingConfigDefaultConfigPtr and FeatureSpecFleetobservabilityLoggingConfigDefaultConfigPtrOutput values.
// You can construct a concrete instance of `FeatureSpecFleetobservabilityLoggingConfigDefaultConfigPtrInput` via:
//
//	        FeatureSpecFleetobservabilityLoggingConfigDefaultConfigArgs{...}
//
//	or:
//
//	        nil
type FeatureSpecFleetobservabilityLoggingConfigDefaultConfigPtrInput interface {
	pulumi.Input

	ToFeatureSpecFleetobservabilityLoggingConfigDefaultConfigPtrOutput() FeatureSpecFleetobservabilityLoggingConfigDefaultConfigPtrOutput
	ToFeatureSpecFleetobservabilityLoggingConfigDefaultConfigPtrOutputWithContext(context.Context) FeatureSpecFleetobservabilityLoggingConfigDefaultConfigPtrOutput
}

type featureSpecFleetobservabilityLoggingConfigDefaultConfigPtrType FeatureSpecFleetobservabilityLoggingConfigDefaultConfigArgs

func FeatureSpecFleetobservabilityLoggingConfigDefaultConfigPtr(v *FeatureSpecFleetobservabilityLoggingConfigDefaultConfigArgs) FeatureSpecFleetobservabilityLoggingConfigDefaultConfigPtrInput {
	return (*featureSpecFleetobservabilityLoggingConfigDefaultConfigPtrType)(v)
}

func (*featureSpecFleetobservabilityLoggingConfigDefaultConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FeatureSpecFleetobservabilityLoggingConfigDefaultConfig)(nil)).Elem()
}

func (i *featureSpecFleetobservabilityLoggingConfigDefaultConfigPtrType) ToFeatureSpecFleetobservabilityLoggingConfigDefaultConfigPtrOutput() FeatureSpecFleetobservabilityLoggingConfigDefaultConfigPtrOutput {
	return i.ToFeatureSpecFleetobservabilityLoggingConfigDefaultConfigPtrOutputWithContext(context.Background())
}

func (i *featureSpecFleetobservabilityLoggingConfigDefaultConfigPtrType) ToFeatureSpecFleetobservabilityLoggingConfigDefaultConfigPtrOutputWithContext(ctx context.Context) FeatureSpecFleetobservabilityLoggingConfigDefaultConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureSpecFleetobservabilityLoggingConfigDefaultConfigPtrOutput)
}

type FeatureSpecFleetobservabilityLoggingConfigDefaultConfigOutput struct{ *pulumi.OutputState }

func (FeatureSpecFleetobservabilityLoggingConfigDefaultConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FeatureSpecFleetobservabilityLoggingConfigDefaultConfig)(nil)).Elem()
}

func (o FeatureSpecFleetobservabilityLoggingConfigDefaultConfigOutput) ToFeatureSpecFleetobservabilityLoggingConfigDefaultConfigOutput() FeatureSpecFleetobservabilityLoggingConfigDefaultConfigOutput {
	return o
}

func (o FeatureSpecFleetobservabilityLoggingConfigDefaultConfigOutput) ToFeatureSpecFleetobservabilityLoggingConfigDefaultConfigOutputWithContext(ctx context.Context) FeatureSpecFleetobservabilityLoggingConfigDefaultConfigOutput {
	return o
}

func (o FeatureSpecFleetobservabilityLoggingConfigDefaultConfigOutput) ToFeatureSpecFleetobservabilityLoggingConfigDefaultConfigPtrOutput() FeatureSpecFleetobservabilityLoggingConfigDefaultConfigPtrOutput {
	return o.ToFeatureSpecFleetobservabilityLoggingConfigDefaultConfigPtrOutputWithContext(context.Background())
}

func (o FeatureSpecFleetobservabilityLoggingConfigDefaultConfigOutput) ToFeatureSpecFleetobservabilityLoggingConfigDefaultConfigPtrOutputWithContext(ctx context.Context) FeatureSpecFleetobservabilityLoggingConfigDefaultConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FeatureSpecFleetobservabilityLoggingConfigDefaultConfig) *FeatureSpecFleetobservabilityLoggingConfigDefaultConfig {
		return &v
	}).(FeatureSpecFleetobservabilityLoggingConfigDefaultConfigPtrOutput)
}

// Specified if fleet logging feature is enabled.
// Possible values are: `MODE_UNSPECIFIED`, `COPY`, `MOVE`.
func (o FeatureSpecFleetobservabilityLoggingConfigDefaultConfigOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FeatureSpecFleetobservabilityLoggingConfigDefaultConfig) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type FeatureSpecFleetobservabilityLoggingConfigDefaultConfigPtrOutput struct{ *pulumi.OutputState }

func (FeatureSpecFleetobservabilityLoggingConfigDefaultConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FeatureSpecFleetobservabilityLoggingConfigDefaultConfig)(nil)).Elem()
}

func (o FeatureSpecFleetobservabilityLoggingConfigDefaultConfigPtrOutput) ToFeatureSpecFleetobservabilityLoggingConfigDefaultConfigPtrOutput() FeatureSpecFleetobservabilityLoggingConfigDefaultConfigPtrOutput {
	return o
}

func (o FeatureSpecFleetobservabilityLoggingConfigDefaultConfigPtrOutput) ToFeatureSpecFleetobservabilityLoggingConfigDefaultConfigPtrOutputWithContext(ctx context.Context) FeatureSpecFleetobservabilityLoggingConfigDefaultConfigPtrOutput {
	return o
}

func (o FeatureSpecFleetobservabilityLoggingConfigDefaultConfigPtrOutput) Elem() FeatureSpecFleetobservabilityLoggingConfigDefaultConfigOutput {
	return o.ApplyT(func(v *FeatureSpecFleetobservabilityLoggingConfigDefaultConfig) FeatureSpecFleetobservabilityLoggingConfigDefaultConfig {
		if v != nil {
			return *v
		}
		var ret FeatureSpecFleetobservabilityLoggingConfigDefaultConfig
		return ret
	}).(FeatureSpecFleetobservabilityLoggingConfigDefaultConfigOutput)
}

// Specified if fleet logging feature is enabled.
// Possible values are: `MODE_UNSPECIFIED`, `COPY`, `MOVE`.
func (o FeatureSpecFleetobservabilityLoggingConfigDefaultConfigPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FeatureSpecFleetobservabilityLoggingConfigDefaultConfig) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

type FeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfig struct {
	// Specified if fleet logging feature is enabled.
	// Possible values are: `MODE_UNSPECIFIED`, `COPY`, `MOVE`.
	Mode *string `pulumi:"mode"`
}

// FeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigInput is an input type that accepts FeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigArgs and FeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigOutput values.
// You can construct a concrete instance of `FeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigInput` via:
//
//	FeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigArgs{...}
type FeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigInput interface {
	pulumi.Input

	ToFeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigOutput() FeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigOutput
	ToFeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigOutputWithContext(context.Context) FeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigOutput
}

type FeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigArgs struct {
	// Specified if fleet logging feature is enabled.
	// Possible values are: `MODE_UNSPECIFIED`, `COPY`, `MOVE`.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (FeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfig)(nil)).Elem()
}

func (i FeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigArgs) ToFeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigOutput() FeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigOutput {
	return i.ToFeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigOutputWithContext(context.Background())
}

func (i FeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigArgs) ToFeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigOutputWithContext(ctx context.Context) FeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigOutput)
}

func (i FeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigArgs) ToFeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigPtrOutput() FeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigPtrOutput {
	return i.ToFeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigPtrOutputWithContext(context.Background())
}

func (i FeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigArgs) ToFeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigPtrOutputWithContext(ctx context.Context) FeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigOutput).ToFeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigPtrOutputWithContext(ctx)
}

// FeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigPtrInput is an input type that accepts FeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigArgs, FeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigPtr and FeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigPtrOutput values.
// You can construct a concrete instance of `FeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigPtrInput` via:
//
//	        FeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigArgs{...}
//
//	or:
//
//	        nil
type FeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigPtrInput interface {
	pulumi.Input

	ToFeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigPtrOutput() FeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigPtrOutput
	ToFeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigPtrOutputWithContext(context.Context) FeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigPtrOutput
}

type featureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigPtrType FeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigArgs

func FeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigPtr(v *FeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigArgs) FeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigPtrInput {
	return (*featureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigPtrType)(v)
}

func (*featureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfig)(nil)).Elem()
}

func (i *featureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigPtrType) ToFeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigPtrOutput() FeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigPtrOutput {
	return i.ToFeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigPtrOutputWithContext(context.Background())
}

func (i *featureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigPtrType) ToFeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigPtrOutputWithContext(ctx context.Context) FeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigPtrOutput)
}

type FeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigOutput struct{ *pulumi.OutputState }

func (FeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfig)(nil)).Elem()
}

func (o FeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigOutput) ToFeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigOutput() FeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigOutput {
	return o
}

func (o FeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigOutput) ToFeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigOutputWithContext(ctx context.Context) FeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigOutput {
	return o
}

func (o FeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigOutput) ToFeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigPtrOutput() FeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigPtrOutput {
	return o.ToFeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigPtrOutputWithContext(context.Background())
}

func (o FeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigOutput) ToFeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigPtrOutputWithContext(ctx context.Context) FeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfig) *FeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfig {
		return &v
	}).(FeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigPtrOutput)
}

// Specified if fleet logging feature is enabled.
// Possible values are: `MODE_UNSPECIFIED`, `COPY`, `MOVE`.
func (o FeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfig) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type FeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigPtrOutput struct{ *pulumi.OutputState }

func (FeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfig)(nil)).Elem()
}

func (o FeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigPtrOutput) ToFeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigPtrOutput() FeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigPtrOutput {
	return o
}

func (o FeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigPtrOutput) ToFeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigPtrOutputWithContext(ctx context.Context) FeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigPtrOutput {
	return o
}

func (o FeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigPtrOutput) Elem() FeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigOutput {
	return o.ApplyT(func(v *FeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfig) FeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfig {
		if v != nil {
			return *v
		}
		var ret FeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfig
		return ret
	}).(FeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigOutput)
}

// Specified if fleet logging feature is enabled.
// Possible values are: `MODE_UNSPECIFIED`, `COPY`, `MOVE`.
func (o FeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfig) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

type FeatureSpecMulticlusteringress struct {
	// Fully-qualified Membership name which hosts the MultiClusterIngress CRD. Example: `projects/foo-proj/locations/global/memberships/bar`
	ConfigMembership string `pulumi:"configMembership"`
}

// FeatureSpecMulticlusteringressInput is an input type that accepts FeatureSpecMulticlusteringressArgs and FeatureSpecMulticlusteringressOutput values.
// You can construct a concrete instance of `FeatureSpecMulticlusteringressInput` via:
//
//	FeatureSpecMulticlusteringressArgs{...}
type FeatureSpecMulticlusteringressInput interface {
	pulumi.Input

	ToFeatureSpecMulticlusteringressOutput() FeatureSpecMulticlusteringressOutput
	ToFeatureSpecMulticlusteringressOutputWithContext(context.Context) FeatureSpecMulticlusteringressOutput
}

type FeatureSpecMulticlusteringressArgs struct {
	// Fully-qualified Membership name which hosts the MultiClusterIngress CRD. Example: `projects/foo-proj/locations/global/memberships/bar`
	ConfigMembership pulumi.StringInput `pulumi:"configMembership"`
}

func (FeatureSpecMulticlusteringressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FeatureSpecMulticlusteringress)(nil)).Elem()
}

func (i FeatureSpecMulticlusteringressArgs) ToFeatureSpecMulticlusteringressOutput() FeatureSpecMulticlusteringressOutput {
	return i.ToFeatureSpecMulticlusteringressOutputWithContext(context.Background())
}

func (i FeatureSpecMulticlusteringressArgs) ToFeatureSpecMulticlusteringressOutputWithContext(ctx context.Context) FeatureSpecMulticlusteringressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureSpecMulticlusteringressOutput)
}

func (i FeatureSpecMulticlusteringressArgs) ToFeatureSpecMulticlusteringressPtrOutput() FeatureSpecMulticlusteringressPtrOutput {
	return i.ToFeatureSpecMulticlusteringressPtrOutputWithContext(context.Background())
}

func (i FeatureSpecMulticlusteringressArgs) ToFeatureSpecMulticlusteringressPtrOutputWithContext(ctx context.Context) FeatureSpecMulticlusteringressPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureSpecMulticlusteringressOutput).ToFeatureSpecMulticlusteringressPtrOutputWithContext(ctx)
}

// FeatureSpecMulticlusteringressPtrInput is an input type that accepts FeatureSpecMulticlusteringressArgs, FeatureSpecMulticlusteringressPtr and FeatureSpecMulticlusteringressPtrOutput values.
// You can construct a concrete instance of `FeatureSpecMulticlusteringressPtrInput` via:
//
//	        FeatureSpecMulticlusteringressArgs{...}
//
//	or:
//
//	        nil
type FeatureSpecMulticlusteringressPtrInput interface {
	pulumi.Input

	ToFeatureSpecMulticlusteringressPtrOutput() FeatureSpecMulticlusteringressPtrOutput
	ToFeatureSpecMulticlusteringressPtrOutputWithContext(context.Context) FeatureSpecMulticlusteringressPtrOutput
}

type featureSpecMulticlusteringressPtrType FeatureSpecMulticlusteringressArgs

func FeatureSpecMulticlusteringressPtr(v *FeatureSpecMulticlusteringressArgs) FeatureSpecMulticlusteringressPtrInput {
	return (*featureSpecMulticlusteringressPtrType)(v)
}

func (*featureSpecMulticlusteringressPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FeatureSpecMulticlusteringress)(nil)).Elem()
}

func (i *featureSpecMulticlusteringressPtrType) ToFeatureSpecMulticlusteringressPtrOutput() FeatureSpecMulticlusteringressPtrOutput {
	return i.ToFeatureSpecMulticlusteringressPtrOutputWithContext(context.Background())
}

func (i *featureSpecMulticlusteringressPtrType) ToFeatureSpecMulticlusteringressPtrOutputWithContext(ctx context.Context) FeatureSpecMulticlusteringressPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureSpecMulticlusteringressPtrOutput)
}

type FeatureSpecMulticlusteringressOutput struct{ *pulumi.OutputState }

func (FeatureSpecMulticlusteringressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FeatureSpecMulticlusteringress)(nil)).Elem()
}

func (o FeatureSpecMulticlusteringressOutput) ToFeatureSpecMulticlusteringressOutput() FeatureSpecMulticlusteringressOutput {
	return o
}

func (o FeatureSpecMulticlusteringressOutput) ToFeatureSpecMulticlusteringressOutputWithContext(ctx context.Context) FeatureSpecMulticlusteringressOutput {
	return o
}

func (o FeatureSpecMulticlusteringressOutput) ToFeatureSpecMulticlusteringressPtrOutput() FeatureSpecMulticlusteringressPtrOutput {
	return o.ToFeatureSpecMulticlusteringressPtrOutputWithContext(context.Background())
}

func (o FeatureSpecMulticlusteringressOutput) ToFeatureSpecMulticlusteringressPtrOutputWithContext(ctx context.Context) FeatureSpecMulticlusteringressPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FeatureSpecMulticlusteringress) *FeatureSpecMulticlusteringress {
		return &v
	}).(FeatureSpecMulticlusteringressPtrOutput)
}

// Fully-qualified Membership name which hosts the MultiClusterIngress CRD. Example: `projects/foo-proj/locations/global/memberships/bar`
func (o FeatureSpecMulticlusteringressOutput) ConfigMembership() pulumi.StringOutput {
	return o.ApplyT(func(v FeatureSpecMulticlusteringress) string { return v.ConfigMembership }).(pulumi.StringOutput)
}

type FeatureSpecMulticlusteringressPtrOutput struct{ *pulumi.OutputState }

func (FeatureSpecMulticlusteringressPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FeatureSpecMulticlusteringress)(nil)).Elem()
}

func (o FeatureSpecMulticlusteringressPtrOutput) ToFeatureSpecMulticlusteringressPtrOutput() FeatureSpecMulticlusteringressPtrOutput {
	return o
}

func (o FeatureSpecMulticlusteringressPtrOutput) ToFeatureSpecMulticlusteringressPtrOutputWithContext(ctx context.Context) FeatureSpecMulticlusteringressPtrOutput {
	return o
}

func (o FeatureSpecMulticlusteringressPtrOutput) Elem() FeatureSpecMulticlusteringressOutput {
	return o.ApplyT(func(v *FeatureSpecMulticlusteringress) FeatureSpecMulticlusteringress {
		if v != nil {
			return *v
		}
		var ret FeatureSpecMulticlusteringress
		return ret
	}).(FeatureSpecMulticlusteringressOutput)
}

// Fully-qualified Membership name which hosts the MultiClusterIngress CRD. Example: `projects/foo-proj/locations/global/memberships/bar`
func (o FeatureSpecMulticlusteringressPtrOutput) ConfigMembership() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FeatureSpecMulticlusteringress) *string {
		if v == nil {
			return nil
		}
		return &v.ConfigMembership
	}).(pulumi.StringPtrOutput)
}

type FeatureStateType struct {
	// (Output)
	// Output only. The "running state" of the Feature in this Hub.
	// Structure is documented below.
	States []FeatureStateState `pulumi:"states"`
}

// FeatureStateTypeInput is an input type that accepts FeatureStateTypeArgs and FeatureStateTypeOutput values.
// You can construct a concrete instance of `FeatureStateTypeInput` via:
//
//	FeatureStateTypeArgs{...}
type FeatureStateTypeInput interface {
	pulumi.Input

	ToFeatureStateTypeOutput() FeatureStateTypeOutput
	ToFeatureStateTypeOutputWithContext(context.Context) FeatureStateTypeOutput
}

type FeatureStateTypeArgs struct {
	// (Output)
	// Output only. The "running state" of the Feature in this Hub.
	// Structure is documented below.
	States FeatureStateStateArrayInput `pulumi:"states"`
}

func (FeatureStateTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FeatureStateType)(nil)).Elem()
}

func (i FeatureStateTypeArgs) ToFeatureStateTypeOutput() FeatureStateTypeOutput {
	return i.ToFeatureStateTypeOutputWithContext(context.Background())
}

func (i FeatureStateTypeArgs) ToFeatureStateTypeOutputWithContext(ctx context.Context) FeatureStateTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureStateTypeOutput)
}

// FeatureStateTypeArrayInput is an input type that accepts FeatureStateTypeArray and FeatureStateTypeArrayOutput values.
// You can construct a concrete instance of `FeatureStateTypeArrayInput` via:
//
//	FeatureStateTypeArray{ FeatureStateTypeArgs{...} }
type FeatureStateTypeArrayInput interface {
	pulumi.Input

	ToFeatureStateTypeArrayOutput() FeatureStateTypeArrayOutput
	ToFeatureStateTypeArrayOutputWithContext(context.Context) FeatureStateTypeArrayOutput
}

type FeatureStateTypeArray []FeatureStateTypeInput

func (FeatureStateTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FeatureStateType)(nil)).Elem()
}

func (i FeatureStateTypeArray) ToFeatureStateTypeArrayOutput() FeatureStateTypeArrayOutput {
	return i.ToFeatureStateTypeArrayOutputWithContext(context.Background())
}

func (i FeatureStateTypeArray) ToFeatureStateTypeArrayOutputWithContext(ctx context.Context) FeatureStateTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureStateTypeArrayOutput)
}

type FeatureStateTypeOutput struct{ *pulumi.OutputState }

func (FeatureStateTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FeatureStateType)(nil)).Elem()
}

func (o FeatureStateTypeOutput) ToFeatureStateTypeOutput() FeatureStateTypeOutput {
	return o
}

func (o FeatureStateTypeOutput) ToFeatureStateTypeOutputWithContext(ctx context.Context) FeatureStateTypeOutput {
	return o
}

// (Output)
// Output only. The "running state" of the Feature in this Hub.
// Structure is documented below.
func (o FeatureStateTypeOutput) States() FeatureStateStateArrayOutput {
	return o.ApplyT(func(v FeatureStateType) []FeatureStateState { return v.States }).(FeatureStateStateArrayOutput)
}

type FeatureStateTypeArrayOutput struct{ *pulumi.OutputState }

func (FeatureStateTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FeatureStateType)(nil)).Elem()
}

func (o FeatureStateTypeArrayOutput) ToFeatureStateTypeArrayOutput() FeatureStateTypeArrayOutput {
	return o
}

func (o FeatureStateTypeArrayOutput) ToFeatureStateTypeArrayOutputWithContext(ctx context.Context) FeatureStateTypeArrayOutput {
	return o
}

func (o FeatureStateTypeArrayOutput) Index(i pulumi.IntInput) FeatureStateTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FeatureStateType {
		return vs[0].([]FeatureStateType)[vs[1].(int)]
	}).(FeatureStateTypeOutput)
}

type FeatureStateState struct {
	// (Output)
	// The high-level, machine-readable status of this Feature.
	Code *string `pulumi:"code"`
	// (Output)
	// A human-readable description of the current status.
	Description *string `pulumi:"description"`
	// (Output)
	// The time this status and any related Feature-specific details were updated. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z"
	UpdateTime *string `pulumi:"updateTime"`
}

// FeatureStateStateInput is an input type that accepts FeatureStateStateArgs and FeatureStateStateOutput values.
// You can construct a concrete instance of `FeatureStateStateInput` via:
//
//	FeatureStateStateArgs{...}
type FeatureStateStateInput interface {
	pulumi.Input

	ToFeatureStateStateOutput() FeatureStateStateOutput
	ToFeatureStateStateOutputWithContext(context.Context) FeatureStateStateOutput
}

type FeatureStateStateArgs struct {
	// (Output)
	// The high-level, machine-readable status of this Feature.
	Code pulumi.StringPtrInput `pulumi:"code"`
	// (Output)
	// A human-readable description of the current status.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// (Output)
	// The time this status and any related Feature-specific details were updated. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z"
	UpdateTime pulumi.StringPtrInput `pulumi:"updateTime"`
}

func (FeatureStateStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FeatureStateState)(nil)).Elem()
}

func (i FeatureStateStateArgs) ToFeatureStateStateOutput() FeatureStateStateOutput {
	return i.ToFeatureStateStateOutputWithContext(context.Background())
}

func (i FeatureStateStateArgs) ToFeatureStateStateOutputWithContext(ctx context.Context) FeatureStateStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureStateStateOutput)
}

// FeatureStateStateArrayInput is an input type that accepts FeatureStateStateArray and FeatureStateStateArrayOutput values.
// You can construct a concrete instance of `FeatureStateStateArrayInput` via:
//
//	FeatureStateStateArray{ FeatureStateStateArgs{...} }
type FeatureStateStateArrayInput interface {
	pulumi.Input

	ToFeatureStateStateArrayOutput() FeatureStateStateArrayOutput
	ToFeatureStateStateArrayOutputWithContext(context.Context) FeatureStateStateArrayOutput
}

type FeatureStateStateArray []FeatureStateStateInput

func (FeatureStateStateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FeatureStateState)(nil)).Elem()
}

func (i FeatureStateStateArray) ToFeatureStateStateArrayOutput() FeatureStateStateArrayOutput {
	return i.ToFeatureStateStateArrayOutputWithContext(context.Background())
}

func (i FeatureStateStateArray) ToFeatureStateStateArrayOutputWithContext(ctx context.Context) FeatureStateStateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureStateStateArrayOutput)
}

type FeatureStateStateOutput struct{ *pulumi.OutputState }

func (FeatureStateStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FeatureStateState)(nil)).Elem()
}

func (o FeatureStateStateOutput) ToFeatureStateStateOutput() FeatureStateStateOutput {
	return o
}

func (o FeatureStateStateOutput) ToFeatureStateStateOutputWithContext(ctx context.Context) FeatureStateStateOutput {
	return o
}

// (Output)
// The high-level, machine-readable status of this Feature.
func (o FeatureStateStateOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FeatureStateState) *string { return v.Code }).(pulumi.StringPtrOutput)
}

// (Output)
// A human-readable description of the current status.
func (o FeatureStateStateOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FeatureStateState) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// (Output)
// The time this status and any related Feature-specific details were updated. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z"
func (o FeatureStateStateOutput) UpdateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FeatureStateState) *string { return v.UpdateTime }).(pulumi.StringPtrOutput)
}

type FeatureStateStateArrayOutput struct{ *pulumi.OutputState }

func (FeatureStateStateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FeatureStateState)(nil)).Elem()
}

func (o FeatureStateStateArrayOutput) ToFeatureStateStateArrayOutput() FeatureStateStateArrayOutput {
	return o
}

func (o FeatureStateStateArrayOutput) ToFeatureStateStateArrayOutputWithContext(ctx context.Context) FeatureStateStateArrayOutput {
	return o
}

func (o FeatureStateStateArrayOutput) Index(i pulumi.IntInput) FeatureStateStateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FeatureStateState {
		return vs[0].([]FeatureStateState)[vs[1].(int)]
	}).(FeatureStateStateOutput)
}

type MembershipAuthority struct {
	Issuer string `pulumi:"issuer"`
}

// MembershipAuthorityInput is an input type that accepts MembershipAuthorityArgs and MembershipAuthorityOutput values.
// You can construct a concrete instance of `MembershipAuthorityInput` via:
//
//	MembershipAuthorityArgs{...}
type MembershipAuthorityInput interface {
	pulumi.Input

	ToMembershipAuthorityOutput() MembershipAuthorityOutput
	ToMembershipAuthorityOutputWithContext(context.Context) MembershipAuthorityOutput
}

type MembershipAuthorityArgs struct {
	Issuer pulumi.StringInput `pulumi:"issuer"`
}

func (MembershipAuthorityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MembershipAuthority)(nil)).Elem()
}

func (i MembershipAuthorityArgs) ToMembershipAuthorityOutput() MembershipAuthorityOutput {
	return i.ToMembershipAuthorityOutputWithContext(context.Background())
}

func (i MembershipAuthorityArgs) ToMembershipAuthorityOutputWithContext(ctx context.Context) MembershipAuthorityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MembershipAuthorityOutput)
}

func (i MembershipAuthorityArgs) ToMembershipAuthorityPtrOutput() MembershipAuthorityPtrOutput {
	return i.ToMembershipAuthorityPtrOutputWithContext(context.Background())
}

func (i MembershipAuthorityArgs) ToMembershipAuthorityPtrOutputWithContext(ctx context.Context) MembershipAuthorityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MembershipAuthorityOutput).ToMembershipAuthorityPtrOutputWithContext(ctx)
}

// MembershipAuthorityPtrInput is an input type that accepts MembershipAuthorityArgs, MembershipAuthorityPtr and MembershipAuthorityPtrOutput values.
// You can construct a concrete instance of `MembershipAuthorityPtrInput` via:
//
//	        MembershipAuthorityArgs{...}
//
//	or:
//
//	        nil
type MembershipAuthorityPtrInput interface {
	pulumi.Input

	ToMembershipAuthorityPtrOutput() MembershipAuthorityPtrOutput
	ToMembershipAuthorityPtrOutputWithContext(context.Context) MembershipAuthorityPtrOutput
}

type membershipAuthorityPtrType MembershipAuthorityArgs

func MembershipAuthorityPtr(v *MembershipAuthorityArgs) MembershipAuthorityPtrInput {
	return (*membershipAuthorityPtrType)(v)
}

func (*membershipAuthorityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MembershipAuthority)(nil)).Elem()
}

func (i *membershipAuthorityPtrType) ToMembershipAuthorityPtrOutput() MembershipAuthorityPtrOutput {
	return i.ToMembershipAuthorityPtrOutputWithContext(context.Background())
}

func (i *membershipAuthorityPtrType) ToMembershipAuthorityPtrOutputWithContext(ctx context.Context) MembershipAuthorityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MembershipAuthorityPtrOutput)
}

type MembershipAuthorityOutput struct{ *pulumi.OutputState }

func (MembershipAuthorityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MembershipAuthority)(nil)).Elem()
}

func (o MembershipAuthorityOutput) ToMembershipAuthorityOutput() MembershipAuthorityOutput {
	return o
}

func (o MembershipAuthorityOutput) ToMembershipAuthorityOutputWithContext(ctx context.Context) MembershipAuthorityOutput {
	return o
}

func (o MembershipAuthorityOutput) ToMembershipAuthorityPtrOutput() MembershipAuthorityPtrOutput {
	return o.ToMembershipAuthorityPtrOutputWithContext(context.Background())
}

func (o MembershipAuthorityOutput) ToMembershipAuthorityPtrOutputWithContext(ctx context.Context) MembershipAuthorityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MembershipAuthority) *MembershipAuthority {
		return &v
	}).(MembershipAuthorityPtrOutput)
}

func (o MembershipAuthorityOutput) Issuer() pulumi.StringOutput {
	return o.ApplyT(func(v MembershipAuthority) string { return v.Issuer }).(pulumi.StringOutput)
}

type MembershipAuthorityPtrOutput struct{ *pulumi.OutputState }

func (MembershipAuthorityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MembershipAuthority)(nil)).Elem()
}

func (o MembershipAuthorityPtrOutput) ToMembershipAuthorityPtrOutput() MembershipAuthorityPtrOutput {
	return o
}

func (o MembershipAuthorityPtrOutput) ToMembershipAuthorityPtrOutputWithContext(ctx context.Context) MembershipAuthorityPtrOutput {
	return o
}

func (o MembershipAuthorityPtrOutput) Elem() MembershipAuthorityOutput {
	return o.ApplyT(func(v *MembershipAuthority) MembershipAuthority {
		if v != nil {
			return *v
		}
		var ret MembershipAuthority
		return ret
	}).(MembershipAuthorityOutput)
}

func (o MembershipAuthorityPtrOutput) Issuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MembershipAuthority) *string {
		if v == nil {
			return nil
		}
		return &v.Issuer
	}).(pulumi.StringPtrOutput)
}

type MembershipBindingStateType struct {
	// (Output)
	// Code describes the state of a MembershipBinding resource.
	Code *string `pulumi:"code"`
}

// MembershipBindingStateTypeInput is an input type that accepts MembershipBindingStateTypeArgs and MembershipBindingStateTypeOutput values.
// You can construct a concrete instance of `MembershipBindingStateTypeInput` via:
//
//	MembershipBindingStateTypeArgs{...}
type MembershipBindingStateTypeInput interface {
	pulumi.Input

	ToMembershipBindingStateTypeOutput() MembershipBindingStateTypeOutput
	ToMembershipBindingStateTypeOutputWithContext(context.Context) MembershipBindingStateTypeOutput
}

type MembershipBindingStateTypeArgs struct {
	// (Output)
	// Code describes the state of a MembershipBinding resource.
	Code pulumi.StringPtrInput `pulumi:"code"`
}

func (MembershipBindingStateTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MembershipBindingStateType)(nil)).Elem()
}

func (i MembershipBindingStateTypeArgs) ToMembershipBindingStateTypeOutput() MembershipBindingStateTypeOutput {
	return i.ToMembershipBindingStateTypeOutputWithContext(context.Background())
}

func (i MembershipBindingStateTypeArgs) ToMembershipBindingStateTypeOutputWithContext(ctx context.Context) MembershipBindingStateTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MembershipBindingStateTypeOutput)
}

// MembershipBindingStateTypeArrayInput is an input type that accepts MembershipBindingStateTypeArray and MembershipBindingStateTypeArrayOutput values.
// You can construct a concrete instance of `MembershipBindingStateTypeArrayInput` via:
//
//	MembershipBindingStateTypeArray{ MembershipBindingStateTypeArgs{...} }
type MembershipBindingStateTypeArrayInput interface {
	pulumi.Input

	ToMembershipBindingStateTypeArrayOutput() MembershipBindingStateTypeArrayOutput
	ToMembershipBindingStateTypeArrayOutputWithContext(context.Context) MembershipBindingStateTypeArrayOutput
}

type MembershipBindingStateTypeArray []MembershipBindingStateTypeInput

func (MembershipBindingStateTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MembershipBindingStateType)(nil)).Elem()
}

func (i MembershipBindingStateTypeArray) ToMembershipBindingStateTypeArrayOutput() MembershipBindingStateTypeArrayOutput {
	return i.ToMembershipBindingStateTypeArrayOutputWithContext(context.Background())
}

func (i MembershipBindingStateTypeArray) ToMembershipBindingStateTypeArrayOutputWithContext(ctx context.Context) MembershipBindingStateTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MembershipBindingStateTypeArrayOutput)
}

type MembershipBindingStateTypeOutput struct{ *pulumi.OutputState }

func (MembershipBindingStateTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MembershipBindingStateType)(nil)).Elem()
}

func (o MembershipBindingStateTypeOutput) ToMembershipBindingStateTypeOutput() MembershipBindingStateTypeOutput {
	return o
}

func (o MembershipBindingStateTypeOutput) ToMembershipBindingStateTypeOutputWithContext(ctx context.Context) MembershipBindingStateTypeOutput {
	return o
}

// (Output)
// Code describes the state of a MembershipBinding resource.
func (o MembershipBindingStateTypeOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MembershipBindingStateType) *string { return v.Code }).(pulumi.StringPtrOutput)
}

type MembershipBindingStateTypeArrayOutput struct{ *pulumi.OutputState }

func (MembershipBindingStateTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MembershipBindingStateType)(nil)).Elem()
}

func (o MembershipBindingStateTypeArrayOutput) ToMembershipBindingStateTypeArrayOutput() MembershipBindingStateTypeArrayOutput {
	return o
}

func (o MembershipBindingStateTypeArrayOutput) ToMembershipBindingStateTypeArrayOutputWithContext(ctx context.Context) MembershipBindingStateTypeArrayOutput {
	return o
}

func (o MembershipBindingStateTypeArrayOutput) Index(i pulumi.IntInput) MembershipBindingStateTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MembershipBindingStateType {
		return vs[0].([]MembershipBindingStateType)[vs[1].(int)]
	}).(MembershipBindingStateTypeOutput)
}

type MembershipEndpoint struct {
	// If this Membership is a Kubernetes API server hosted on GKE, this is a self link to its GCP resource.
	// Structure is documented below.
	GkeCluster *MembershipEndpointGkeCluster `pulumi:"gkeCluster"`
}

// MembershipEndpointInput is an input type that accepts MembershipEndpointArgs and MembershipEndpointOutput values.
// You can construct a concrete instance of `MembershipEndpointInput` via:
//
//	MembershipEndpointArgs{...}
type MembershipEndpointInput interface {
	pulumi.Input

	ToMembershipEndpointOutput() MembershipEndpointOutput
	ToMembershipEndpointOutputWithContext(context.Context) MembershipEndpointOutput
}

type MembershipEndpointArgs struct {
	// If this Membership is a Kubernetes API server hosted on GKE, this is a self link to its GCP resource.
	// Structure is documented below.
	GkeCluster MembershipEndpointGkeClusterPtrInput `pulumi:"gkeCluster"`
}

func (MembershipEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MembershipEndpoint)(nil)).Elem()
}

func (i MembershipEndpointArgs) ToMembershipEndpointOutput() MembershipEndpointOutput {
	return i.ToMembershipEndpointOutputWithContext(context.Background())
}

func (i MembershipEndpointArgs) ToMembershipEndpointOutputWithContext(ctx context.Context) MembershipEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MembershipEndpointOutput)
}

func (i MembershipEndpointArgs) ToMembershipEndpointPtrOutput() MembershipEndpointPtrOutput {
	return i.ToMembershipEndpointPtrOutputWithContext(context.Background())
}

func (i MembershipEndpointArgs) ToMembershipEndpointPtrOutputWithContext(ctx context.Context) MembershipEndpointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MembershipEndpointOutput).ToMembershipEndpointPtrOutputWithContext(ctx)
}

// MembershipEndpointPtrInput is an input type that accepts MembershipEndpointArgs, MembershipEndpointPtr and MembershipEndpointPtrOutput values.
// You can construct a concrete instance of `MembershipEndpointPtrInput` via:
//
//	        MembershipEndpointArgs{...}
//
//	or:
//
//	        nil
type MembershipEndpointPtrInput interface {
	pulumi.Input

	ToMembershipEndpointPtrOutput() MembershipEndpointPtrOutput
	ToMembershipEndpointPtrOutputWithContext(context.Context) MembershipEndpointPtrOutput
}

type membershipEndpointPtrType MembershipEndpointArgs

func MembershipEndpointPtr(v *MembershipEndpointArgs) MembershipEndpointPtrInput {
	return (*membershipEndpointPtrType)(v)
}

func (*membershipEndpointPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MembershipEndpoint)(nil)).Elem()
}

func (i *membershipEndpointPtrType) ToMembershipEndpointPtrOutput() MembershipEndpointPtrOutput {
	return i.ToMembershipEndpointPtrOutputWithContext(context.Background())
}

func (i *membershipEndpointPtrType) ToMembershipEndpointPtrOutputWithContext(ctx context.Context) MembershipEndpointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MembershipEndpointPtrOutput)
}

type MembershipEndpointOutput struct{ *pulumi.OutputState }

func (MembershipEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MembershipEndpoint)(nil)).Elem()
}

func (o MembershipEndpointOutput) ToMembershipEndpointOutput() MembershipEndpointOutput {
	return o
}

func (o MembershipEndpointOutput) ToMembershipEndpointOutputWithContext(ctx context.Context) MembershipEndpointOutput {
	return o
}

func (o MembershipEndpointOutput) ToMembershipEndpointPtrOutput() MembershipEndpointPtrOutput {
	return o.ToMembershipEndpointPtrOutputWithContext(context.Background())
}

func (o MembershipEndpointOutput) ToMembershipEndpointPtrOutputWithContext(ctx context.Context) MembershipEndpointPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MembershipEndpoint) *MembershipEndpoint {
		return &v
	}).(MembershipEndpointPtrOutput)
}

// If this Membership is a Kubernetes API server hosted on GKE, this is a self link to its GCP resource.
// Structure is documented below.
func (o MembershipEndpointOutput) GkeCluster() MembershipEndpointGkeClusterPtrOutput {
	return o.ApplyT(func(v MembershipEndpoint) *MembershipEndpointGkeCluster { return v.GkeCluster }).(MembershipEndpointGkeClusterPtrOutput)
}

type MembershipEndpointPtrOutput struct{ *pulumi.OutputState }

func (MembershipEndpointPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MembershipEndpoint)(nil)).Elem()
}

func (o MembershipEndpointPtrOutput) ToMembershipEndpointPtrOutput() MembershipEndpointPtrOutput {
	return o
}

func (o MembershipEndpointPtrOutput) ToMembershipEndpointPtrOutputWithContext(ctx context.Context) MembershipEndpointPtrOutput {
	return o
}

func (o MembershipEndpointPtrOutput) Elem() MembershipEndpointOutput {
	return o.ApplyT(func(v *MembershipEndpoint) MembershipEndpoint {
		if v != nil {
			return *v
		}
		var ret MembershipEndpoint
		return ret
	}).(MembershipEndpointOutput)
}

// If this Membership is a Kubernetes API server hosted on GKE, this is a self link to its GCP resource.
// Structure is documented below.
func (o MembershipEndpointPtrOutput) GkeCluster() MembershipEndpointGkeClusterPtrOutput {
	return o.ApplyT(func(v *MembershipEndpoint) *MembershipEndpointGkeCluster {
		if v == nil {
			return nil
		}
		return v.GkeCluster
	}).(MembershipEndpointGkeClusterPtrOutput)
}

type MembershipEndpointGkeCluster struct {
	ResourceLink string `pulumi:"resourceLink"`
}

// MembershipEndpointGkeClusterInput is an input type that accepts MembershipEndpointGkeClusterArgs and MembershipEndpointGkeClusterOutput values.
// You can construct a concrete instance of `MembershipEndpointGkeClusterInput` via:
//
//	MembershipEndpointGkeClusterArgs{...}
type MembershipEndpointGkeClusterInput interface {
	pulumi.Input

	ToMembershipEndpointGkeClusterOutput() MembershipEndpointGkeClusterOutput
	ToMembershipEndpointGkeClusterOutputWithContext(context.Context) MembershipEndpointGkeClusterOutput
}

type MembershipEndpointGkeClusterArgs struct {
	ResourceLink pulumi.StringInput `pulumi:"resourceLink"`
}

func (MembershipEndpointGkeClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MembershipEndpointGkeCluster)(nil)).Elem()
}

func (i MembershipEndpointGkeClusterArgs) ToMembershipEndpointGkeClusterOutput() MembershipEndpointGkeClusterOutput {
	return i.ToMembershipEndpointGkeClusterOutputWithContext(context.Background())
}

func (i MembershipEndpointGkeClusterArgs) ToMembershipEndpointGkeClusterOutputWithContext(ctx context.Context) MembershipEndpointGkeClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MembershipEndpointGkeClusterOutput)
}

func (i MembershipEndpointGkeClusterArgs) ToMembershipEndpointGkeClusterPtrOutput() MembershipEndpointGkeClusterPtrOutput {
	return i.ToMembershipEndpointGkeClusterPtrOutputWithContext(context.Background())
}

func (i MembershipEndpointGkeClusterArgs) ToMembershipEndpointGkeClusterPtrOutputWithContext(ctx context.Context) MembershipEndpointGkeClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MembershipEndpointGkeClusterOutput).ToMembershipEndpointGkeClusterPtrOutputWithContext(ctx)
}

// MembershipEndpointGkeClusterPtrInput is an input type that accepts MembershipEndpointGkeClusterArgs, MembershipEndpointGkeClusterPtr and MembershipEndpointGkeClusterPtrOutput values.
// You can construct a concrete instance of `MembershipEndpointGkeClusterPtrInput` via:
//
//	        MembershipEndpointGkeClusterArgs{...}
//
//	or:
//
//	        nil
type MembershipEndpointGkeClusterPtrInput interface {
	pulumi.Input

	ToMembershipEndpointGkeClusterPtrOutput() MembershipEndpointGkeClusterPtrOutput
	ToMembershipEndpointGkeClusterPtrOutputWithContext(context.Context) MembershipEndpointGkeClusterPtrOutput
}

type membershipEndpointGkeClusterPtrType MembershipEndpointGkeClusterArgs

func MembershipEndpointGkeClusterPtr(v *MembershipEndpointGkeClusterArgs) MembershipEndpointGkeClusterPtrInput {
	return (*membershipEndpointGkeClusterPtrType)(v)
}

func (*membershipEndpointGkeClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MembershipEndpointGkeCluster)(nil)).Elem()
}

func (i *membershipEndpointGkeClusterPtrType) ToMembershipEndpointGkeClusterPtrOutput() MembershipEndpointGkeClusterPtrOutput {
	return i.ToMembershipEndpointGkeClusterPtrOutputWithContext(context.Background())
}

func (i *membershipEndpointGkeClusterPtrType) ToMembershipEndpointGkeClusterPtrOutputWithContext(ctx context.Context) MembershipEndpointGkeClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MembershipEndpointGkeClusterPtrOutput)
}

type MembershipEndpointGkeClusterOutput struct{ *pulumi.OutputState }

func (MembershipEndpointGkeClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MembershipEndpointGkeCluster)(nil)).Elem()
}

func (o MembershipEndpointGkeClusterOutput) ToMembershipEndpointGkeClusterOutput() MembershipEndpointGkeClusterOutput {
	return o
}

func (o MembershipEndpointGkeClusterOutput) ToMembershipEndpointGkeClusterOutputWithContext(ctx context.Context) MembershipEndpointGkeClusterOutput {
	return o
}

func (o MembershipEndpointGkeClusterOutput) ToMembershipEndpointGkeClusterPtrOutput() MembershipEndpointGkeClusterPtrOutput {
	return o.ToMembershipEndpointGkeClusterPtrOutputWithContext(context.Background())
}

func (o MembershipEndpointGkeClusterOutput) ToMembershipEndpointGkeClusterPtrOutputWithContext(ctx context.Context) MembershipEndpointGkeClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MembershipEndpointGkeCluster) *MembershipEndpointGkeCluster {
		return &v
	}).(MembershipEndpointGkeClusterPtrOutput)
}

func (o MembershipEndpointGkeClusterOutput) ResourceLink() pulumi.StringOutput {
	return o.ApplyT(func(v MembershipEndpointGkeCluster) string { return v.ResourceLink }).(pulumi.StringOutput)
}

type MembershipEndpointGkeClusterPtrOutput struct{ *pulumi.OutputState }

func (MembershipEndpointGkeClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MembershipEndpointGkeCluster)(nil)).Elem()
}

func (o MembershipEndpointGkeClusterPtrOutput) ToMembershipEndpointGkeClusterPtrOutput() MembershipEndpointGkeClusterPtrOutput {
	return o
}

func (o MembershipEndpointGkeClusterPtrOutput) ToMembershipEndpointGkeClusterPtrOutputWithContext(ctx context.Context) MembershipEndpointGkeClusterPtrOutput {
	return o
}

func (o MembershipEndpointGkeClusterPtrOutput) Elem() MembershipEndpointGkeClusterOutput {
	return o.ApplyT(func(v *MembershipEndpointGkeCluster) MembershipEndpointGkeCluster {
		if v != nil {
			return *v
		}
		var ret MembershipEndpointGkeCluster
		return ret
	}).(MembershipEndpointGkeClusterOutput)
}

func (o MembershipEndpointGkeClusterPtrOutput) ResourceLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MembershipEndpointGkeCluster) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceLink
	}).(pulumi.StringPtrOutput)
}

type MembershipIamBindingCondition struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

// MembershipIamBindingConditionInput is an input type that accepts MembershipIamBindingConditionArgs and MembershipIamBindingConditionOutput values.
// You can construct a concrete instance of `MembershipIamBindingConditionInput` via:
//
//	MembershipIamBindingConditionArgs{...}
type MembershipIamBindingConditionInput interface {
	pulumi.Input

	ToMembershipIamBindingConditionOutput() MembershipIamBindingConditionOutput
	ToMembershipIamBindingConditionOutputWithContext(context.Context) MembershipIamBindingConditionOutput
}

type MembershipIamBindingConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (MembershipIamBindingConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MembershipIamBindingCondition)(nil)).Elem()
}

func (i MembershipIamBindingConditionArgs) ToMembershipIamBindingConditionOutput() MembershipIamBindingConditionOutput {
	return i.ToMembershipIamBindingConditionOutputWithContext(context.Background())
}

func (i MembershipIamBindingConditionArgs) ToMembershipIamBindingConditionOutputWithContext(ctx context.Context) MembershipIamBindingConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MembershipIamBindingConditionOutput)
}

func (i MembershipIamBindingConditionArgs) ToMembershipIamBindingConditionPtrOutput() MembershipIamBindingConditionPtrOutput {
	return i.ToMembershipIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i MembershipIamBindingConditionArgs) ToMembershipIamBindingConditionPtrOutputWithContext(ctx context.Context) MembershipIamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MembershipIamBindingConditionOutput).ToMembershipIamBindingConditionPtrOutputWithContext(ctx)
}

// MembershipIamBindingConditionPtrInput is an input type that accepts MembershipIamBindingConditionArgs, MembershipIamBindingConditionPtr and MembershipIamBindingConditionPtrOutput values.
// You can construct a concrete instance of `MembershipIamBindingConditionPtrInput` via:
//
//	        MembershipIamBindingConditionArgs{...}
//
//	or:
//
//	        nil
type MembershipIamBindingConditionPtrInput interface {
	pulumi.Input

	ToMembershipIamBindingConditionPtrOutput() MembershipIamBindingConditionPtrOutput
	ToMembershipIamBindingConditionPtrOutputWithContext(context.Context) MembershipIamBindingConditionPtrOutput
}

type membershipIamBindingConditionPtrType MembershipIamBindingConditionArgs

func MembershipIamBindingConditionPtr(v *MembershipIamBindingConditionArgs) MembershipIamBindingConditionPtrInput {
	return (*membershipIamBindingConditionPtrType)(v)
}

func (*membershipIamBindingConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MembershipIamBindingCondition)(nil)).Elem()
}

func (i *membershipIamBindingConditionPtrType) ToMembershipIamBindingConditionPtrOutput() MembershipIamBindingConditionPtrOutput {
	return i.ToMembershipIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i *membershipIamBindingConditionPtrType) ToMembershipIamBindingConditionPtrOutputWithContext(ctx context.Context) MembershipIamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MembershipIamBindingConditionPtrOutput)
}

type MembershipIamBindingConditionOutput struct{ *pulumi.OutputState }

func (MembershipIamBindingConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MembershipIamBindingCondition)(nil)).Elem()
}

func (o MembershipIamBindingConditionOutput) ToMembershipIamBindingConditionOutput() MembershipIamBindingConditionOutput {
	return o
}

func (o MembershipIamBindingConditionOutput) ToMembershipIamBindingConditionOutputWithContext(ctx context.Context) MembershipIamBindingConditionOutput {
	return o
}

func (o MembershipIamBindingConditionOutput) ToMembershipIamBindingConditionPtrOutput() MembershipIamBindingConditionPtrOutput {
	return o.ToMembershipIamBindingConditionPtrOutputWithContext(context.Background())
}

func (o MembershipIamBindingConditionOutput) ToMembershipIamBindingConditionPtrOutputWithContext(ctx context.Context) MembershipIamBindingConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MembershipIamBindingCondition) *MembershipIamBindingCondition {
		return &v
	}).(MembershipIamBindingConditionPtrOutput)
}

func (o MembershipIamBindingConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MembershipIamBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o MembershipIamBindingConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v MembershipIamBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o MembershipIamBindingConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v MembershipIamBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

type MembershipIamBindingConditionPtrOutput struct{ *pulumi.OutputState }

func (MembershipIamBindingConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MembershipIamBindingCondition)(nil)).Elem()
}

func (o MembershipIamBindingConditionPtrOutput) ToMembershipIamBindingConditionPtrOutput() MembershipIamBindingConditionPtrOutput {
	return o
}

func (o MembershipIamBindingConditionPtrOutput) ToMembershipIamBindingConditionPtrOutputWithContext(ctx context.Context) MembershipIamBindingConditionPtrOutput {
	return o
}

func (o MembershipIamBindingConditionPtrOutput) Elem() MembershipIamBindingConditionOutput {
	return o.ApplyT(func(v *MembershipIamBindingCondition) MembershipIamBindingCondition {
		if v != nil {
			return *v
		}
		var ret MembershipIamBindingCondition
		return ret
	}).(MembershipIamBindingConditionOutput)
}

func (o MembershipIamBindingConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MembershipIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o MembershipIamBindingConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MembershipIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

func (o MembershipIamBindingConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MembershipIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type MembershipIamMemberCondition struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

// MembershipIamMemberConditionInput is an input type that accepts MembershipIamMemberConditionArgs and MembershipIamMemberConditionOutput values.
// You can construct a concrete instance of `MembershipIamMemberConditionInput` via:
//
//	MembershipIamMemberConditionArgs{...}
type MembershipIamMemberConditionInput interface {
	pulumi.Input

	ToMembershipIamMemberConditionOutput() MembershipIamMemberConditionOutput
	ToMembershipIamMemberConditionOutputWithContext(context.Context) MembershipIamMemberConditionOutput
}

type MembershipIamMemberConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (MembershipIamMemberConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MembershipIamMemberCondition)(nil)).Elem()
}

func (i MembershipIamMemberConditionArgs) ToMembershipIamMemberConditionOutput() MembershipIamMemberConditionOutput {
	return i.ToMembershipIamMemberConditionOutputWithContext(context.Background())
}

func (i MembershipIamMemberConditionArgs) ToMembershipIamMemberConditionOutputWithContext(ctx context.Context) MembershipIamMemberConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MembershipIamMemberConditionOutput)
}

func (i MembershipIamMemberConditionArgs) ToMembershipIamMemberConditionPtrOutput() MembershipIamMemberConditionPtrOutput {
	return i.ToMembershipIamMemberConditionPtrOutputWithContext(context.Background())
}

func (i MembershipIamMemberConditionArgs) ToMembershipIamMemberConditionPtrOutputWithContext(ctx context.Context) MembershipIamMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MembershipIamMemberConditionOutput).ToMembershipIamMemberConditionPtrOutputWithContext(ctx)
}

// MembershipIamMemberConditionPtrInput is an input type that accepts MembershipIamMemberConditionArgs, MembershipIamMemberConditionPtr and MembershipIamMemberConditionPtrOutput values.
// You can construct a concrete instance of `MembershipIamMemberConditionPtrInput` via:
//
//	        MembershipIamMemberConditionArgs{...}
//
//	or:
//
//	        nil
type MembershipIamMemberConditionPtrInput interface {
	pulumi.Input

	ToMembershipIamMemberConditionPtrOutput() MembershipIamMemberConditionPtrOutput
	ToMembershipIamMemberConditionPtrOutputWithContext(context.Context) MembershipIamMemberConditionPtrOutput
}

type membershipIamMemberConditionPtrType MembershipIamMemberConditionArgs

func MembershipIamMemberConditionPtr(v *MembershipIamMemberConditionArgs) MembershipIamMemberConditionPtrInput {
	return (*membershipIamMemberConditionPtrType)(v)
}

func (*membershipIamMemberConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MembershipIamMemberCondition)(nil)).Elem()
}

func (i *membershipIamMemberConditionPtrType) ToMembershipIamMemberConditionPtrOutput() MembershipIamMemberConditionPtrOutput {
	return i.ToMembershipIamMemberConditionPtrOutputWithContext(context.Background())
}

func (i *membershipIamMemberConditionPtrType) ToMembershipIamMemberConditionPtrOutputWithContext(ctx context.Context) MembershipIamMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MembershipIamMemberConditionPtrOutput)
}

type MembershipIamMemberConditionOutput struct{ *pulumi.OutputState }

func (MembershipIamMemberConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MembershipIamMemberCondition)(nil)).Elem()
}

func (o MembershipIamMemberConditionOutput) ToMembershipIamMemberConditionOutput() MembershipIamMemberConditionOutput {
	return o
}

func (o MembershipIamMemberConditionOutput) ToMembershipIamMemberConditionOutputWithContext(ctx context.Context) MembershipIamMemberConditionOutput {
	return o
}

func (o MembershipIamMemberConditionOutput) ToMembershipIamMemberConditionPtrOutput() MembershipIamMemberConditionPtrOutput {
	return o.ToMembershipIamMemberConditionPtrOutputWithContext(context.Background())
}

func (o MembershipIamMemberConditionOutput) ToMembershipIamMemberConditionPtrOutputWithContext(ctx context.Context) MembershipIamMemberConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MembershipIamMemberCondition) *MembershipIamMemberCondition {
		return &v
	}).(MembershipIamMemberConditionPtrOutput)
}

func (o MembershipIamMemberConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MembershipIamMemberCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o MembershipIamMemberConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v MembershipIamMemberCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o MembershipIamMemberConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v MembershipIamMemberCondition) string { return v.Title }).(pulumi.StringOutput)
}

type MembershipIamMemberConditionPtrOutput struct{ *pulumi.OutputState }

func (MembershipIamMemberConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MembershipIamMemberCondition)(nil)).Elem()
}

func (o MembershipIamMemberConditionPtrOutput) ToMembershipIamMemberConditionPtrOutput() MembershipIamMemberConditionPtrOutput {
	return o
}

func (o MembershipIamMemberConditionPtrOutput) ToMembershipIamMemberConditionPtrOutputWithContext(ctx context.Context) MembershipIamMemberConditionPtrOutput {
	return o
}

func (o MembershipIamMemberConditionPtrOutput) Elem() MembershipIamMemberConditionOutput {
	return o.ApplyT(func(v *MembershipIamMemberCondition) MembershipIamMemberCondition {
		if v != nil {
			return *v
		}
		var ret MembershipIamMemberCondition
		return ret
	}).(MembershipIamMemberConditionOutput)
}

func (o MembershipIamMemberConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MembershipIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o MembershipIamMemberConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MembershipIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

func (o MembershipIamMemberConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MembershipIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type MembershipRbacRoleBindingRole struct {
	// PredefinedRole is an ENUM representation of the default Kubernetes Roles
	// Possible values are: `UNKNOWN`, `ADMIN`, `EDIT`, `VIEW`, `ANTHOS_SUPPORT`.
	//
	// ***
	PredefinedRole string `pulumi:"predefinedRole"`
}

// MembershipRbacRoleBindingRoleInput is an input type that accepts MembershipRbacRoleBindingRoleArgs and MembershipRbacRoleBindingRoleOutput values.
// You can construct a concrete instance of `MembershipRbacRoleBindingRoleInput` via:
//
//	MembershipRbacRoleBindingRoleArgs{...}
type MembershipRbacRoleBindingRoleInput interface {
	pulumi.Input

	ToMembershipRbacRoleBindingRoleOutput() MembershipRbacRoleBindingRoleOutput
	ToMembershipRbacRoleBindingRoleOutputWithContext(context.Context) MembershipRbacRoleBindingRoleOutput
}

type MembershipRbacRoleBindingRoleArgs struct {
	// PredefinedRole is an ENUM representation of the default Kubernetes Roles
	// Possible values are: `UNKNOWN`, `ADMIN`, `EDIT`, `VIEW`, `ANTHOS_SUPPORT`.
	//
	// ***
	PredefinedRole pulumi.StringInput `pulumi:"predefinedRole"`
}

func (MembershipRbacRoleBindingRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MembershipRbacRoleBindingRole)(nil)).Elem()
}

func (i MembershipRbacRoleBindingRoleArgs) ToMembershipRbacRoleBindingRoleOutput() MembershipRbacRoleBindingRoleOutput {
	return i.ToMembershipRbacRoleBindingRoleOutputWithContext(context.Background())
}

func (i MembershipRbacRoleBindingRoleArgs) ToMembershipRbacRoleBindingRoleOutputWithContext(ctx context.Context) MembershipRbacRoleBindingRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MembershipRbacRoleBindingRoleOutput)
}

func (i MembershipRbacRoleBindingRoleArgs) ToMembershipRbacRoleBindingRolePtrOutput() MembershipRbacRoleBindingRolePtrOutput {
	return i.ToMembershipRbacRoleBindingRolePtrOutputWithContext(context.Background())
}

func (i MembershipRbacRoleBindingRoleArgs) ToMembershipRbacRoleBindingRolePtrOutputWithContext(ctx context.Context) MembershipRbacRoleBindingRolePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MembershipRbacRoleBindingRoleOutput).ToMembershipRbacRoleBindingRolePtrOutputWithContext(ctx)
}

// MembershipRbacRoleBindingRolePtrInput is an input type that accepts MembershipRbacRoleBindingRoleArgs, MembershipRbacRoleBindingRolePtr and MembershipRbacRoleBindingRolePtrOutput values.
// You can construct a concrete instance of `MembershipRbacRoleBindingRolePtrInput` via:
//
//	        MembershipRbacRoleBindingRoleArgs{...}
//
//	or:
//
//	        nil
type MembershipRbacRoleBindingRolePtrInput interface {
	pulumi.Input

	ToMembershipRbacRoleBindingRolePtrOutput() MembershipRbacRoleBindingRolePtrOutput
	ToMembershipRbacRoleBindingRolePtrOutputWithContext(context.Context) MembershipRbacRoleBindingRolePtrOutput
}

type membershipRbacRoleBindingRolePtrType MembershipRbacRoleBindingRoleArgs

func MembershipRbacRoleBindingRolePtr(v *MembershipRbacRoleBindingRoleArgs) MembershipRbacRoleBindingRolePtrInput {
	return (*membershipRbacRoleBindingRolePtrType)(v)
}

func (*membershipRbacRoleBindingRolePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MembershipRbacRoleBindingRole)(nil)).Elem()
}

func (i *membershipRbacRoleBindingRolePtrType) ToMembershipRbacRoleBindingRolePtrOutput() MembershipRbacRoleBindingRolePtrOutput {
	return i.ToMembershipRbacRoleBindingRolePtrOutputWithContext(context.Background())
}

func (i *membershipRbacRoleBindingRolePtrType) ToMembershipRbacRoleBindingRolePtrOutputWithContext(ctx context.Context) MembershipRbacRoleBindingRolePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MembershipRbacRoleBindingRolePtrOutput)
}

type MembershipRbacRoleBindingRoleOutput struct{ *pulumi.OutputState }

func (MembershipRbacRoleBindingRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MembershipRbacRoleBindingRole)(nil)).Elem()
}

func (o MembershipRbacRoleBindingRoleOutput) ToMembershipRbacRoleBindingRoleOutput() MembershipRbacRoleBindingRoleOutput {
	return o
}

func (o MembershipRbacRoleBindingRoleOutput) ToMembershipRbacRoleBindingRoleOutputWithContext(ctx context.Context) MembershipRbacRoleBindingRoleOutput {
	return o
}

func (o MembershipRbacRoleBindingRoleOutput) ToMembershipRbacRoleBindingRolePtrOutput() MembershipRbacRoleBindingRolePtrOutput {
	return o.ToMembershipRbacRoleBindingRolePtrOutputWithContext(context.Background())
}

func (o MembershipRbacRoleBindingRoleOutput) ToMembershipRbacRoleBindingRolePtrOutputWithContext(ctx context.Context) MembershipRbacRoleBindingRolePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MembershipRbacRoleBindingRole) *MembershipRbacRoleBindingRole {
		return &v
	}).(MembershipRbacRoleBindingRolePtrOutput)
}

// PredefinedRole is an ENUM representation of the default Kubernetes Roles
// Possible values are: `UNKNOWN`, `ADMIN`, `EDIT`, `VIEW`, `ANTHOS_SUPPORT`.
//
// ***
func (o MembershipRbacRoleBindingRoleOutput) PredefinedRole() pulumi.StringOutput {
	return o.ApplyT(func(v MembershipRbacRoleBindingRole) string { return v.PredefinedRole }).(pulumi.StringOutput)
}

type MembershipRbacRoleBindingRolePtrOutput struct{ *pulumi.OutputState }

func (MembershipRbacRoleBindingRolePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MembershipRbacRoleBindingRole)(nil)).Elem()
}

func (o MembershipRbacRoleBindingRolePtrOutput) ToMembershipRbacRoleBindingRolePtrOutput() MembershipRbacRoleBindingRolePtrOutput {
	return o
}

func (o MembershipRbacRoleBindingRolePtrOutput) ToMembershipRbacRoleBindingRolePtrOutputWithContext(ctx context.Context) MembershipRbacRoleBindingRolePtrOutput {
	return o
}

func (o MembershipRbacRoleBindingRolePtrOutput) Elem() MembershipRbacRoleBindingRoleOutput {
	return o.ApplyT(func(v *MembershipRbacRoleBindingRole) MembershipRbacRoleBindingRole {
		if v != nil {
			return *v
		}
		var ret MembershipRbacRoleBindingRole
		return ret
	}).(MembershipRbacRoleBindingRoleOutput)
}

// PredefinedRole is an ENUM representation of the default Kubernetes Roles
// Possible values are: `UNKNOWN`, `ADMIN`, `EDIT`, `VIEW`, `ANTHOS_SUPPORT`.
//
// ***
func (o MembershipRbacRoleBindingRolePtrOutput) PredefinedRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MembershipRbacRoleBindingRole) *string {
		if v == nil {
			return nil
		}
		return &v.PredefinedRole
	}).(pulumi.StringPtrOutput)
}

type MembershipRbacRoleBindingStateType struct {
	// (Output)
	// Code describes the state of a RBAC Role Binding resource.
	Code *string `pulumi:"code"`
}

// MembershipRbacRoleBindingStateTypeInput is an input type that accepts MembershipRbacRoleBindingStateTypeArgs and MembershipRbacRoleBindingStateTypeOutput values.
// You can construct a concrete instance of `MembershipRbacRoleBindingStateTypeInput` via:
//
//	MembershipRbacRoleBindingStateTypeArgs{...}
type MembershipRbacRoleBindingStateTypeInput interface {
	pulumi.Input

	ToMembershipRbacRoleBindingStateTypeOutput() MembershipRbacRoleBindingStateTypeOutput
	ToMembershipRbacRoleBindingStateTypeOutputWithContext(context.Context) MembershipRbacRoleBindingStateTypeOutput
}

type MembershipRbacRoleBindingStateTypeArgs struct {
	// (Output)
	// Code describes the state of a RBAC Role Binding resource.
	Code pulumi.StringPtrInput `pulumi:"code"`
}

func (MembershipRbacRoleBindingStateTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MembershipRbacRoleBindingStateType)(nil)).Elem()
}

func (i MembershipRbacRoleBindingStateTypeArgs) ToMembershipRbacRoleBindingStateTypeOutput() MembershipRbacRoleBindingStateTypeOutput {
	return i.ToMembershipRbacRoleBindingStateTypeOutputWithContext(context.Background())
}

func (i MembershipRbacRoleBindingStateTypeArgs) ToMembershipRbacRoleBindingStateTypeOutputWithContext(ctx context.Context) MembershipRbacRoleBindingStateTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MembershipRbacRoleBindingStateTypeOutput)
}

// MembershipRbacRoleBindingStateTypeArrayInput is an input type that accepts MembershipRbacRoleBindingStateTypeArray and MembershipRbacRoleBindingStateTypeArrayOutput values.
// You can construct a concrete instance of `MembershipRbacRoleBindingStateTypeArrayInput` via:
//
//	MembershipRbacRoleBindingStateTypeArray{ MembershipRbacRoleBindingStateTypeArgs{...} }
type MembershipRbacRoleBindingStateTypeArrayInput interface {
	pulumi.Input

	ToMembershipRbacRoleBindingStateTypeArrayOutput() MembershipRbacRoleBindingStateTypeArrayOutput
	ToMembershipRbacRoleBindingStateTypeArrayOutputWithContext(context.Context) MembershipRbacRoleBindingStateTypeArrayOutput
}

type MembershipRbacRoleBindingStateTypeArray []MembershipRbacRoleBindingStateTypeInput

func (MembershipRbacRoleBindingStateTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MembershipRbacRoleBindingStateType)(nil)).Elem()
}

func (i MembershipRbacRoleBindingStateTypeArray) ToMembershipRbacRoleBindingStateTypeArrayOutput() MembershipRbacRoleBindingStateTypeArrayOutput {
	return i.ToMembershipRbacRoleBindingStateTypeArrayOutputWithContext(context.Background())
}

func (i MembershipRbacRoleBindingStateTypeArray) ToMembershipRbacRoleBindingStateTypeArrayOutputWithContext(ctx context.Context) MembershipRbacRoleBindingStateTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MembershipRbacRoleBindingStateTypeArrayOutput)
}

type MembershipRbacRoleBindingStateTypeOutput struct{ *pulumi.OutputState }

func (MembershipRbacRoleBindingStateTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MembershipRbacRoleBindingStateType)(nil)).Elem()
}

func (o MembershipRbacRoleBindingStateTypeOutput) ToMembershipRbacRoleBindingStateTypeOutput() MembershipRbacRoleBindingStateTypeOutput {
	return o
}

func (o MembershipRbacRoleBindingStateTypeOutput) ToMembershipRbacRoleBindingStateTypeOutputWithContext(ctx context.Context) MembershipRbacRoleBindingStateTypeOutput {
	return o
}

// (Output)
// Code describes the state of a RBAC Role Binding resource.
func (o MembershipRbacRoleBindingStateTypeOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MembershipRbacRoleBindingStateType) *string { return v.Code }).(pulumi.StringPtrOutput)
}

type MembershipRbacRoleBindingStateTypeArrayOutput struct{ *pulumi.OutputState }

func (MembershipRbacRoleBindingStateTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MembershipRbacRoleBindingStateType)(nil)).Elem()
}

func (o MembershipRbacRoleBindingStateTypeArrayOutput) ToMembershipRbacRoleBindingStateTypeArrayOutput() MembershipRbacRoleBindingStateTypeArrayOutput {
	return o
}

func (o MembershipRbacRoleBindingStateTypeArrayOutput) ToMembershipRbacRoleBindingStateTypeArrayOutputWithContext(ctx context.Context) MembershipRbacRoleBindingStateTypeArrayOutput {
	return o
}

func (o MembershipRbacRoleBindingStateTypeArrayOutput) Index(i pulumi.IntInput) MembershipRbacRoleBindingStateTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MembershipRbacRoleBindingStateType {
		return vs[0].([]MembershipRbacRoleBindingStateType)[vs[1].(int)]
	}).(MembershipRbacRoleBindingStateTypeOutput)
}

type NamespaceStateType struct {
	// (Output)
	// Code describes the state of a Namespace resource.
	Code *string `pulumi:"code"`
}

// NamespaceStateTypeInput is an input type that accepts NamespaceStateTypeArgs and NamespaceStateTypeOutput values.
// You can construct a concrete instance of `NamespaceStateTypeInput` via:
//
//	NamespaceStateTypeArgs{...}
type NamespaceStateTypeInput interface {
	pulumi.Input

	ToNamespaceStateTypeOutput() NamespaceStateTypeOutput
	ToNamespaceStateTypeOutputWithContext(context.Context) NamespaceStateTypeOutput
}

type NamespaceStateTypeArgs struct {
	// (Output)
	// Code describes the state of a Namespace resource.
	Code pulumi.StringPtrInput `pulumi:"code"`
}

func (NamespaceStateTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NamespaceStateType)(nil)).Elem()
}

func (i NamespaceStateTypeArgs) ToNamespaceStateTypeOutput() NamespaceStateTypeOutput {
	return i.ToNamespaceStateTypeOutputWithContext(context.Background())
}

func (i NamespaceStateTypeArgs) ToNamespaceStateTypeOutputWithContext(ctx context.Context) NamespaceStateTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NamespaceStateTypeOutput)
}

// NamespaceStateTypeArrayInput is an input type that accepts NamespaceStateTypeArray and NamespaceStateTypeArrayOutput values.
// You can construct a concrete instance of `NamespaceStateTypeArrayInput` via:
//
//	NamespaceStateTypeArray{ NamespaceStateTypeArgs{...} }
type NamespaceStateTypeArrayInput interface {
	pulumi.Input

	ToNamespaceStateTypeArrayOutput() NamespaceStateTypeArrayOutput
	ToNamespaceStateTypeArrayOutputWithContext(context.Context) NamespaceStateTypeArrayOutput
}

type NamespaceStateTypeArray []NamespaceStateTypeInput

func (NamespaceStateTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NamespaceStateType)(nil)).Elem()
}

func (i NamespaceStateTypeArray) ToNamespaceStateTypeArrayOutput() NamespaceStateTypeArrayOutput {
	return i.ToNamespaceStateTypeArrayOutputWithContext(context.Background())
}

func (i NamespaceStateTypeArray) ToNamespaceStateTypeArrayOutputWithContext(ctx context.Context) NamespaceStateTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NamespaceStateTypeArrayOutput)
}

type NamespaceStateTypeOutput struct{ *pulumi.OutputState }

func (NamespaceStateTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NamespaceStateType)(nil)).Elem()
}

func (o NamespaceStateTypeOutput) ToNamespaceStateTypeOutput() NamespaceStateTypeOutput {
	return o
}

func (o NamespaceStateTypeOutput) ToNamespaceStateTypeOutputWithContext(ctx context.Context) NamespaceStateTypeOutput {
	return o
}

// (Output)
// Code describes the state of a Namespace resource.
func (o NamespaceStateTypeOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NamespaceStateType) *string { return v.Code }).(pulumi.StringPtrOutput)
}

type NamespaceStateTypeArrayOutput struct{ *pulumi.OutputState }

func (NamespaceStateTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NamespaceStateType)(nil)).Elem()
}

func (o NamespaceStateTypeArrayOutput) ToNamespaceStateTypeArrayOutput() NamespaceStateTypeArrayOutput {
	return o
}

func (o NamespaceStateTypeArrayOutput) ToNamespaceStateTypeArrayOutputWithContext(ctx context.Context) NamespaceStateTypeArrayOutput {
	return o
}

func (o NamespaceStateTypeArrayOutput) Index(i pulumi.IntInput) NamespaceStateTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NamespaceStateType {
		return vs[0].([]NamespaceStateType)[vs[1].(int)]
	}).(NamespaceStateTypeOutput)
}

type ScopeIamBindingCondition struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

// ScopeIamBindingConditionInput is an input type that accepts ScopeIamBindingConditionArgs and ScopeIamBindingConditionOutput values.
// You can construct a concrete instance of `ScopeIamBindingConditionInput` via:
//
//	ScopeIamBindingConditionArgs{...}
type ScopeIamBindingConditionInput interface {
	pulumi.Input

	ToScopeIamBindingConditionOutput() ScopeIamBindingConditionOutput
	ToScopeIamBindingConditionOutputWithContext(context.Context) ScopeIamBindingConditionOutput
}

type ScopeIamBindingConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (ScopeIamBindingConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScopeIamBindingCondition)(nil)).Elem()
}

func (i ScopeIamBindingConditionArgs) ToScopeIamBindingConditionOutput() ScopeIamBindingConditionOutput {
	return i.ToScopeIamBindingConditionOutputWithContext(context.Background())
}

func (i ScopeIamBindingConditionArgs) ToScopeIamBindingConditionOutputWithContext(ctx context.Context) ScopeIamBindingConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScopeIamBindingConditionOutput)
}

func (i ScopeIamBindingConditionArgs) ToScopeIamBindingConditionPtrOutput() ScopeIamBindingConditionPtrOutput {
	return i.ToScopeIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i ScopeIamBindingConditionArgs) ToScopeIamBindingConditionPtrOutputWithContext(ctx context.Context) ScopeIamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScopeIamBindingConditionOutput).ToScopeIamBindingConditionPtrOutputWithContext(ctx)
}

// ScopeIamBindingConditionPtrInput is an input type that accepts ScopeIamBindingConditionArgs, ScopeIamBindingConditionPtr and ScopeIamBindingConditionPtrOutput values.
// You can construct a concrete instance of `ScopeIamBindingConditionPtrInput` via:
//
//	        ScopeIamBindingConditionArgs{...}
//
//	or:
//
//	        nil
type ScopeIamBindingConditionPtrInput interface {
	pulumi.Input

	ToScopeIamBindingConditionPtrOutput() ScopeIamBindingConditionPtrOutput
	ToScopeIamBindingConditionPtrOutputWithContext(context.Context) ScopeIamBindingConditionPtrOutput
}

type scopeIamBindingConditionPtrType ScopeIamBindingConditionArgs

func ScopeIamBindingConditionPtr(v *ScopeIamBindingConditionArgs) ScopeIamBindingConditionPtrInput {
	return (*scopeIamBindingConditionPtrType)(v)
}

func (*scopeIamBindingConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScopeIamBindingCondition)(nil)).Elem()
}

func (i *scopeIamBindingConditionPtrType) ToScopeIamBindingConditionPtrOutput() ScopeIamBindingConditionPtrOutput {
	return i.ToScopeIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i *scopeIamBindingConditionPtrType) ToScopeIamBindingConditionPtrOutputWithContext(ctx context.Context) ScopeIamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScopeIamBindingConditionPtrOutput)
}

type ScopeIamBindingConditionOutput struct{ *pulumi.OutputState }

func (ScopeIamBindingConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScopeIamBindingCondition)(nil)).Elem()
}

func (o ScopeIamBindingConditionOutput) ToScopeIamBindingConditionOutput() ScopeIamBindingConditionOutput {
	return o
}

func (o ScopeIamBindingConditionOutput) ToScopeIamBindingConditionOutputWithContext(ctx context.Context) ScopeIamBindingConditionOutput {
	return o
}

func (o ScopeIamBindingConditionOutput) ToScopeIamBindingConditionPtrOutput() ScopeIamBindingConditionPtrOutput {
	return o.ToScopeIamBindingConditionPtrOutputWithContext(context.Background())
}

func (o ScopeIamBindingConditionOutput) ToScopeIamBindingConditionPtrOutputWithContext(ctx context.Context) ScopeIamBindingConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScopeIamBindingCondition) *ScopeIamBindingCondition {
		return &v
	}).(ScopeIamBindingConditionPtrOutput)
}

func (o ScopeIamBindingConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScopeIamBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ScopeIamBindingConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v ScopeIamBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o ScopeIamBindingConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v ScopeIamBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

type ScopeIamBindingConditionPtrOutput struct{ *pulumi.OutputState }

func (ScopeIamBindingConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScopeIamBindingCondition)(nil)).Elem()
}

func (o ScopeIamBindingConditionPtrOutput) ToScopeIamBindingConditionPtrOutput() ScopeIamBindingConditionPtrOutput {
	return o
}

func (o ScopeIamBindingConditionPtrOutput) ToScopeIamBindingConditionPtrOutputWithContext(ctx context.Context) ScopeIamBindingConditionPtrOutput {
	return o
}

func (o ScopeIamBindingConditionPtrOutput) Elem() ScopeIamBindingConditionOutput {
	return o.ApplyT(func(v *ScopeIamBindingCondition) ScopeIamBindingCondition {
		if v != nil {
			return *v
		}
		var ret ScopeIamBindingCondition
		return ret
	}).(ScopeIamBindingConditionOutput)
}

func (o ScopeIamBindingConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScopeIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o ScopeIamBindingConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScopeIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

func (o ScopeIamBindingConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScopeIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type ScopeIamMemberCondition struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

// ScopeIamMemberConditionInput is an input type that accepts ScopeIamMemberConditionArgs and ScopeIamMemberConditionOutput values.
// You can construct a concrete instance of `ScopeIamMemberConditionInput` via:
//
//	ScopeIamMemberConditionArgs{...}
type ScopeIamMemberConditionInput interface {
	pulumi.Input

	ToScopeIamMemberConditionOutput() ScopeIamMemberConditionOutput
	ToScopeIamMemberConditionOutputWithContext(context.Context) ScopeIamMemberConditionOutput
}

type ScopeIamMemberConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (ScopeIamMemberConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScopeIamMemberCondition)(nil)).Elem()
}

func (i ScopeIamMemberConditionArgs) ToScopeIamMemberConditionOutput() ScopeIamMemberConditionOutput {
	return i.ToScopeIamMemberConditionOutputWithContext(context.Background())
}

func (i ScopeIamMemberConditionArgs) ToScopeIamMemberConditionOutputWithContext(ctx context.Context) ScopeIamMemberConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScopeIamMemberConditionOutput)
}

func (i ScopeIamMemberConditionArgs) ToScopeIamMemberConditionPtrOutput() ScopeIamMemberConditionPtrOutput {
	return i.ToScopeIamMemberConditionPtrOutputWithContext(context.Background())
}

func (i ScopeIamMemberConditionArgs) ToScopeIamMemberConditionPtrOutputWithContext(ctx context.Context) ScopeIamMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScopeIamMemberConditionOutput).ToScopeIamMemberConditionPtrOutputWithContext(ctx)
}

// ScopeIamMemberConditionPtrInput is an input type that accepts ScopeIamMemberConditionArgs, ScopeIamMemberConditionPtr and ScopeIamMemberConditionPtrOutput values.
// You can construct a concrete instance of `ScopeIamMemberConditionPtrInput` via:
//
//	        ScopeIamMemberConditionArgs{...}
//
//	or:
//
//	        nil
type ScopeIamMemberConditionPtrInput interface {
	pulumi.Input

	ToScopeIamMemberConditionPtrOutput() ScopeIamMemberConditionPtrOutput
	ToScopeIamMemberConditionPtrOutputWithContext(context.Context) ScopeIamMemberConditionPtrOutput
}

type scopeIamMemberConditionPtrType ScopeIamMemberConditionArgs

func ScopeIamMemberConditionPtr(v *ScopeIamMemberConditionArgs) ScopeIamMemberConditionPtrInput {
	return (*scopeIamMemberConditionPtrType)(v)
}

func (*scopeIamMemberConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScopeIamMemberCondition)(nil)).Elem()
}

func (i *scopeIamMemberConditionPtrType) ToScopeIamMemberConditionPtrOutput() ScopeIamMemberConditionPtrOutput {
	return i.ToScopeIamMemberConditionPtrOutputWithContext(context.Background())
}

func (i *scopeIamMemberConditionPtrType) ToScopeIamMemberConditionPtrOutputWithContext(ctx context.Context) ScopeIamMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScopeIamMemberConditionPtrOutput)
}

type ScopeIamMemberConditionOutput struct{ *pulumi.OutputState }

func (ScopeIamMemberConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScopeIamMemberCondition)(nil)).Elem()
}

func (o ScopeIamMemberConditionOutput) ToScopeIamMemberConditionOutput() ScopeIamMemberConditionOutput {
	return o
}

func (o ScopeIamMemberConditionOutput) ToScopeIamMemberConditionOutputWithContext(ctx context.Context) ScopeIamMemberConditionOutput {
	return o
}

func (o ScopeIamMemberConditionOutput) ToScopeIamMemberConditionPtrOutput() ScopeIamMemberConditionPtrOutput {
	return o.ToScopeIamMemberConditionPtrOutputWithContext(context.Background())
}

func (o ScopeIamMemberConditionOutput) ToScopeIamMemberConditionPtrOutputWithContext(ctx context.Context) ScopeIamMemberConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScopeIamMemberCondition) *ScopeIamMemberCondition {
		return &v
	}).(ScopeIamMemberConditionPtrOutput)
}

func (o ScopeIamMemberConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScopeIamMemberCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ScopeIamMemberConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v ScopeIamMemberCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o ScopeIamMemberConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v ScopeIamMemberCondition) string { return v.Title }).(pulumi.StringOutput)
}

type ScopeIamMemberConditionPtrOutput struct{ *pulumi.OutputState }

func (ScopeIamMemberConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScopeIamMemberCondition)(nil)).Elem()
}

func (o ScopeIamMemberConditionPtrOutput) ToScopeIamMemberConditionPtrOutput() ScopeIamMemberConditionPtrOutput {
	return o
}

func (o ScopeIamMemberConditionPtrOutput) ToScopeIamMemberConditionPtrOutputWithContext(ctx context.Context) ScopeIamMemberConditionPtrOutput {
	return o
}

func (o ScopeIamMemberConditionPtrOutput) Elem() ScopeIamMemberConditionOutput {
	return o.ApplyT(func(v *ScopeIamMemberCondition) ScopeIamMemberCondition {
		if v != nil {
			return *v
		}
		var ret ScopeIamMemberCondition
		return ret
	}).(ScopeIamMemberConditionOutput)
}

func (o ScopeIamMemberConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScopeIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o ScopeIamMemberConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScopeIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

func (o ScopeIamMemberConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScopeIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type ScopeRbacRoleBindingRole struct {
	// PredefinedRole is an ENUM representation of the default Kubernetes Roles
	// Possible values are: `UNKNOWN`, `ADMIN`, `EDIT`, `VIEW`.
	//
	// ***
	PredefinedRole *string `pulumi:"predefinedRole"`
}

// ScopeRbacRoleBindingRoleInput is an input type that accepts ScopeRbacRoleBindingRoleArgs and ScopeRbacRoleBindingRoleOutput values.
// You can construct a concrete instance of `ScopeRbacRoleBindingRoleInput` via:
//
//	ScopeRbacRoleBindingRoleArgs{...}
type ScopeRbacRoleBindingRoleInput interface {
	pulumi.Input

	ToScopeRbacRoleBindingRoleOutput() ScopeRbacRoleBindingRoleOutput
	ToScopeRbacRoleBindingRoleOutputWithContext(context.Context) ScopeRbacRoleBindingRoleOutput
}

type ScopeRbacRoleBindingRoleArgs struct {
	// PredefinedRole is an ENUM representation of the default Kubernetes Roles
	// Possible values are: `UNKNOWN`, `ADMIN`, `EDIT`, `VIEW`.
	//
	// ***
	PredefinedRole pulumi.StringPtrInput `pulumi:"predefinedRole"`
}

func (ScopeRbacRoleBindingRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScopeRbacRoleBindingRole)(nil)).Elem()
}

func (i ScopeRbacRoleBindingRoleArgs) ToScopeRbacRoleBindingRoleOutput() ScopeRbacRoleBindingRoleOutput {
	return i.ToScopeRbacRoleBindingRoleOutputWithContext(context.Background())
}

func (i ScopeRbacRoleBindingRoleArgs) ToScopeRbacRoleBindingRoleOutputWithContext(ctx context.Context) ScopeRbacRoleBindingRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScopeRbacRoleBindingRoleOutput)
}

func (i ScopeRbacRoleBindingRoleArgs) ToScopeRbacRoleBindingRolePtrOutput() ScopeRbacRoleBindingRolePtrOutput {
	return i.ToScopeRbacRoleBindingRolePtrOutputWithContext(context.Background())
}

func (i ScopeRbacRoleBindingRoleArgs) ToScopeRbacRoleBindingRolePtrOutputWithContext(ctx context.Context) ScopeRbacRoleBindingRolePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScopeRbacRoleBindingRoleOutput).ToScopeRbacRoleBindingRolePtrOutputWithContext(ctx)
}

// ScopeRbacRoleBindingRolePtrInput is an input type that accepts ScopeRbacRoleBindingRoleArgs, ScopeRbacRoleBindingRolePtr and ScopeRbacRoleBindingRolePtrOutput values.
// You can construct a concrete instance of `ScopeRbacRoleBindingRolePtrInput` via:
//
//	        ScopeRbacRoleBindingRoleArgs{...}
//
//	or:
//
//	        nil
type ScopeRbacRoleBindingRolePtrInput interface {
	pulumi.Input

	ToScopeRbacRoleBindingRolePtrOutput() ScopeRbacRoleBindingRolePtrOutput
	ToScopeRbacRoleBindingRolePtrOutputWithContext(context.Context) ScopeRbacRoleBindingRolePtrOutput
}

type scopeRbacRoleBindingRolePtrType ScopeRbacRoleBindingRoleArgs

func ScopeRbacRoleBindingRolePtr(v *ScopeRbacRoleBindingRoleArgs) ScopeRbacRoleBindingRolePtrInput {
	return (*scopeRbacRoleBindingRolePtrType)(v)
}

func (*scopeRbacRoleBindingRolePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScopeRbacRoleBindingRole)(nil)).Elem()
}

func (i *scopeRbacRoleBindingRolePtrType) ToScopeRbacRoleBindingRolePtrOutput() ScopeRbacRoleBindingRolePtrOutput {
	return i.ToScopeRbacRoleBindingRolePtrOutputWithContext(context.Background())
}

func (i *scopeRbacRoleBindingRolePtrType) ToScopeRbacRoleBindingRolePtrOutputWithContext(ctx context.Context) ScopeRbacRoleBindingRolePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScopeRbacRoleBindingRolePtrOutput)
}

type ScopeRbacRoleBindingRoleOutput struct{ *pulumi.OutputState }

func (ScopeRbacRoleBindingRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScopeRbacRoleBindingRole)(nil)).Elem()
}

func (o ScopeRbacRoleBindingRoleOutput) ToScopeRbacRoleBindingRoleOutput() ScopeRbacRoleBindingRoleOutput {
	return o
}

func (o ScopeRbacRoleBindingRoleOutput) ToScopeRbacRoleBindingRoleOutputWithContext(ctx context.Context) ScopeRbacRoleBindingRoleOutput {
	return o
}

func (o ScopeRbacRoleBindingRoleOutput) ToScopeRbacRoleBindingRolePtrOutput() ScopeRbacRoleBindingRolePtrOutput {
	return o.ToScopeRbacRoleBindingRolePtrOutputWithContext(context.Background())
}

func (o ScopeRbacRoleBindingRoleOutput) ToScopeRbacRoleBindingRolePtrOutputWithContext(ctx context.Context) ScopeRbacRoleBindingRolePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScopeRbacRoleBindingRole) *ScopeRbacRoleBindingRole {
		return &v
	}).(ScopeRbacRoleBindingRolePtrOutput)
}

// PredefinedRole is an ENUM representation of the default Kubernetes Roles
// Possible values are: `UNKNOWN`, `ADMIN`, `EDIT`, `VIEW`.
//
// ***
func (o ScopeRbacRoleBindingRoleOutput) PredefinedRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScopeRbacRoleBindingRole) *string { return v.PredefinedRole }).(pulumi.StringPtrOutput)
}

type ScopeRbacRoleBindingRolePtrOutput struct{ *pulumi.OutputState }

func (ScopeRbacRoleBindingRolePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScopeRbacRoleBindingRole)(nil)).Elem()
}

func (o ScopeRbacRoleBindingRolePtrOutput) ToScopeRbacRoleBindingRolePtrOutput() ScopeRbacRoleBindingRolePtrOutput {
	return o
}

func (o ScopeRbacRoleBindingRolePtrOutput) ToScopeRbacRoleBindingRolePtrOutputWithContext(ctx context.Context) ScopeRbacRoleBindingRolePtrOutput {
	return o
}

func (o ScopeRbacRoleBindingRolePtrOutput) Elem() ScopeRbacRoleBindingRoleOutput {
	return o.ApplyT(func(v *ScopeRbacRoleBindingRole) ScopeRbacRoleBindingRole {
		if v != nil {
			return *v
		}
		var ret ScopeRbacRoleBindingRole
		return ret
	}).(ScopeRbacRoleBindingRoleOutput)
}

// PredefinedRole is an ENUM representation of the default Kubernetes Roles
// Possible values are: `UNKNOWN`, `ADMIN`, `EDIT`, `VIEW`.
//
// ***
func (o ScopeRbacRoleBindingRolePtrOutput) PredefinedRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScopeRbacRoleBindingRole) *string {
		if v == nil {
			return nil
		}
		return v.PredefinedRole
	}).(pulumi.StringPtrOutput)
}

type ScopeRbacRoleBindingStateType struct {
	// (Output)
	// Code describes the state of a RBAC Role Binding resource.
	Code *string `pulumi:"code"`
}

// ScopeRbacRoleBindingStateTypeInput is an input type that accepts ScopeRbacRoleBindingStateTypeArgs and ScopeRbacRoleBindingStateTypeOutput values.
// You can construct a concrete instance of `ScopeRbacRoleBindingStateTypeInput` via:
//
//	ScopeRbacRoleBindingStateTypeArgs{...}
type ScopeRbacRoleBindingStateTypeInput interface {
	pulumi.Input

	ToScopeRbacRoleBindingStateTypeOutput() ScopeRbacRoleBindingStateTypeOutput
	ToScopeRbacRoleBindingStateTypeOutputWithContext(context.Context) ScopeRbacRoleBindingStateTypeOutput
}

type ScopeRbacRoleBindingStateTypeArgs struct {
	// (Output)
	// Code describes the state of a RBAC Role Binding resource.
	Code pulumi.StringPtrInput `pulumi:"code"`
}

func (ScopeRbacRoleBindingStateTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScopeRbacRoleBindingStateType)(nil)).Elem()
}

func (i ScopeRbacRoleBindingStateTypeArgs) ToScopeRbacRoleBindingStateTypeOutput() ScopeRbacRoleBindingStateTypeOutput {
	return i.ToScopeRbacRoleBindingStateTypeOutputWithContext(context.Background())
}

func (i ScopeRbacRoleBindingStateTypeArgs) ToScopeRbacRoleBindingStateTypeOutputWithContext(ctx context.Context) ScopeRbacRoleBindingStateTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScopeRbacRoleBindingStateTypeOutput)
}

// ScopeRbacRoleBindingStateTypeArrayInput is an input type that accepts ScopeRbacRoleBindingStateTypeArray and ScopeRbacRoleBindingStateTypeArrayOutput values.
// You can construct a concrete instance of `ScopeRbacRoleBindingStateTypeArrayInput` via:
//
//	ScopeRbacRoleBindingStateTypeArray{ ScopeRbacRoleBindingStateTypeArgs{...} }
type ScopeRbacRoleBindingStateTypeArrayInput interface {
	pulumi.Input

	ToScopeRbacRoleBindingStateTypeArrayOutput() ScopeRbacRoleBindingStateTypeArrayOutput
	ToScopeRbacRoleBindingStateTypeArrayOutputWithContext(context.Context) ScopeRbacRoleBindingStateTypeArrayOutput
}

type ScopeRbacRoleBindingStateTypeArray []ScopeRbacRoleBindingStateTypeInput

func (ScopeRbacRoleBindingStateTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScopeRbacRoleBindingStateType)(nil)).Elem()
}

func (i ScopeRbacRoleBindingStateTypeArray) ToScopeRbacRoleBindingStateTypeArrayOutput() ScopeRbacRoleBindingStateTypeArrayOutput {
	return i.ToScopeRbacRoleBindingStateTypeArrayOutputWithContext(context.Background())
}

func (i ScopeRbacRoleBindingStateTypeArray) ToScopeRbacRoleBindingStateTypeArrayOutputWithContext(ctx context.Context) ScopeRbacRoleBindingStateTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScopeRbacRoleBindingStateTypeArrayOutput)
}

type ScopeRbacRoleBindingStateTypeOutput struct{ *pulumi.OutputState }

func (ScopeRbacRoleBindingStateTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScopeRbacRoleBindingStateType)(nil)).Elem()
}

func (o ScopeRbacRoleBindingStateTypeOutput) ToScopeRbacRoleBindingStateTypeOutput() ScopeRbacRoleBindingStateTypeOutput {
	return o
}

func (o ScopeRbacRoleBindingStateTypeOutput) ToScopeRbacRoleBindingStateTypeOutputWithContext(ctx context.Context) ScopeRbacRoleBindingStateTypeOutput {
	return o
}

// (Output)
// Code describes the state of a RBAC Role Binding resource.
func (o ScopeRbacRoleBindingStateTypeOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScopeRbacRoleBindingStateType) *string { return v.Code }).(pulumi.StringPtrOutput)
}

type ScopeRbacRoleBindingStateTypeArrayOutput struct{ *pulumi.OutputState }

func (ScopeRbacRoleBindingStateTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScopeRbacRoleBindingStateType)(nil)).Elem()
}

func (o ScopeRbacRoleBindingStateTypeArrayOutput) ToScopeRbacRoleBindingStateTypeArrayOutput() ScopeRbacRoleBindingStateTypeArrayOutput {
	return o
}

func (o ScopeRbacRoleBindingStateTypeArrayOutput) ToScopeRbacRoleBindingStateTypeArrayOutputWithContext(ctx context.Context) ScopeRbacRoleBindingStateTypeArrayOutput {
	return o
}

func (o ScopeRbacRoleBindingStateTypeArrayOutput) Index(i pulumi.IntInput) ScopeRbacRoleBindingStateTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScopeRbacRoleBindingStateType {
		return vs[0].([]ScopeRbacRoleBindingStateType)[vs[1].(int)]
	}).(ScopeRbacRoleBindingStateTypeOutput)
}

type ScopeStateType struct {
	// (Output)
	// Code describes the state of a Scope resource.
	Code *string `pulumi:"code"`
}

// ScopeStateTypeInput is an input type that accepts ScopeStateTypeArgs and ScopeStateTypeOutput values.
// You can construct a concrete instance of `ScopeStateTypeInput` via:
//
//	ScopeStateTypeArgs{...}
type ScopeStateTypeInput interface {
	pulumi.Input

	ToScopeStateTypeOutput() ScopeStateTypeOutput
	ToScopeStateTypeOutputWithContext(context.Context) ScopeStateTypeOutput
}

type ScopeStateTypeArgs struct {
	// (Output)
	// Code describes the state of a Scope resource.
	Code pulumi.StringPtrInput `pulumi:"code"`
}

func (ScopeStateTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScopeStateType)(nil)).Elem()
}

func (i ScopeStateTypeArgs) ToScopeStateTypeOutput() ScopeStateTypeOutput {
	return i.ToScopeStateTypeOutputWithContext(context.Background())
}

func (i ScopeStateTypeArgs) ToScopeStateTypeOutputWithContext(ctx context.Context) ScopeStateTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScopeStateTypeOutput)
}

// ScopeStateTypeArrayInput is an input type that accepts ScopeStateTypeArray and ScopeStateTypeArrayOutput values.
// You can construct a concrete instance of `ScopeStateTypeArrayInput` via:
//
//	ScopeStateTypeArray{ ScopeStateTypeArgs{...} }
type ScopeStateTypeArrayInput interface {
	pulumi.Input

	ToScopeStateTypeArrayOutput() ScopeStateTypeArrayOutput
	ToScopeStateTypeArrayOutputWithContext(context.Context) ScopeStateTypeArrayOutput
}

type ScopeStateTypeArray []ScopeStateTypeInput

func (ScopeStateTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScopeStateType)(nil)).Elem()
}

func (i ScopeStateTypeArray) ToScopeStateTypeArrayOutput() ScopeStateTypeArrayOutput {
	return i.ToScopeStateTypeArrayOutputWithContext(context.Background())
}

func (i ScopeStateTypeArray) ToScopeStateTypeArrayOutputWithContext(ctx context.Context) ScopeStateTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScopeStateTypeArrayOutput)
}

type ScopeStateTypeOutput struct{ *pulumi.OutputState }

func (ScopeStateTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScopeStateType)(nil)).Elem()
}

func (o ScopeStateTypeOutput) ToScopeStateTypeOutput() ScopeStateTypeOutput {
	return o
}

func (o ScopeStateTypeOutput) ToScopeStateTypeOutputWithContext(ctx context.Context) ScopeStateTypeOutput {
	return o
}

// (Output)
// Code describes the state of a Scope resource.
func (o ScopeStateTypeOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScopeStateType) *string { return v.Code }).(pulumi.StringPtrOutput)
}

type ScopeStateTypeArrayOutput struct{ *pulumi.OutputState }

func (ScopeStateTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScopeStateType)(nil)).Elem()
}

func (o ScopeStateTypeArrayOutput) ToScopeStateTypeArrayOutput() ScopeStateTypeArrayOutput {
	return o
}

func (o ScopeStateTypeArrayOutput) ToScopeStateTypeArrayOutputWithContext(ctx context.Context) ScopeStateTypeArrayOutput {
	return o
}

func (o ScopeStateTypeArrayOutput) Index(i pulumi.IntInput) ScopeStateTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScopeStateType {
		return vs[0].([]ScopeStateType)[vs[1].(int)]
	}).(ScopeStateTypeOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FeatureIamBindingConditionInput)(nil)).Elem(), FeatureIamBindingConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FeatureIamBindingConditionPtrInput)(nil)).Elem(), FeatureIamBindingConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FeatureIamMemberConditionInput)(nil)).Elem(), FeatureIamMemberConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FeatureIamMemberConditionPtrInput)(nil)).Elem(), FeatureIamMemberConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FeatureMembershipConfigmanagementInput)(nil)).Elem(), FeatureMembershipConfigmanagementArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FeatureMembershipConfigmanagementPtrInput)(nil)).Elem(), FeatureMembershipConfigmanagementArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FeatureMembershipConfigmanagementBinauthzInput)(nil)).Elem(), FeatureMembershipConfigmanagementBinauthzArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FeatureMembershipConfigmanagementBinauthzPtrInput)(nil)).Elem(), FeatureMembershipConfigmanagementBinauthzArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FeatureMembershipConfigmanagementConfigSyncInput)(nil)).Elem(), FeatureMembershipConfigmanagementConfigSyncArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FeatureMembershipConfigmanagementConfigSyncPtrInput)(nil)).Elem(), FeatureMembershipConfigmanagementConfigSyncArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FeatureMembershipConfigmanagementConfigSyncGitInput)(nil)).Elem(), FeatureMembershipConfigmanagementConfigSyncGitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FeatureMembershipConfigmanagementConfigSyncGitPtrInput)(nil)).Elem(), FeatureMembershipConfigmanagementConfigSyncGitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FeatureMembershipConfigmanagementConfigSyncOciInput)(nil)).Elem(), FeatureMembershipConfigmanagementConfigSyncOciArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FeatureMembershipConfigmanagementConfigSyncOciPtrInput)(nil)).Elem(), FeatureMembershipConfigmanagementConfigSyncOciArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FeatureMembershipConfigmanagementHierarchyControllerInput)(nil)).Elem(), FeatureMembershipConfigmanagementHierarchyControllerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FeatureMembershipConfigmanagementHierarchyControllerPtrInput)(nil)).Elem(), FeatureMembershipConfigmanagementHierarchyControllerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FeatureMembershipConfigmanagementPolicyControllerInput)(nil)).Elem(), FeatureMembershipConfigmanagementPolicyControllerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FeatureMembershipConfigmanagementPolicyControllerPtrInput)(nil)).Elem(), FeatureMembershipConfigmanagementPolicyControllerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FeatureMembershipConfigmanagementPolicyControllerMonitoringInput)(nil)).Elem(), FeatureMembershipConfigmanagementPolicyControllerMonitoringArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FeatureMembershipConfigmanagementPolicyControllerMonitoringPtrInput)(nil)).Elem(), FeatureMembershipConfigmanagementPolicyControllerMonitoringArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FeatureMembershipMeshInput)(nil)).Elem(), FeatureMembershipMeshArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FeatureMembershipMeshPtrInput)(nil)).Elem(), FeatureMembershipMeshArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FeatureResourceStateInput)(nil)).Elem(), FeatureResourceStateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FeatureResourceStateArrayInput)(nil)).Elem(), FeatureResourceStateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FeatureSpecInput)(nil)).Elem(), FeatureSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FeatureSpecPtrInput)(nil)).Elem(), FeatureSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FeatureSpecFleetobservabilityInput)(nil)).Elem(), FeatureSpecFleetobservabilityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FeatureSpecFleetobservabilityPtrInput)(nil)).Elem(), FeatureSpecFleetobservabilityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FeatureSpecFleetobservabilityLoggingConfigInput)(nil)).Elem(), FeatureSpecFleetobservabilityLoggingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FeatureSpecFleetobservabilityLoggingConfigPtrInput)(nil)).Elem(), FeatureSpecFleetobservabilityLoggingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FeatureSpecFleetobservabilityLoggingConfigDefaultConfigInput)(nil)).Elem(), FeatureSpecFleetobservabilityLoggingConfigDefaultConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FeatureSpecFleetobservabilityLoggingConfigDefaultConfigPtrInput)(nil)).Elem(), FeatureSpecFleetobservabilityLoggingConfigDefaultConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigInput)(nil)).Elem(), FeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigPtrInput)(nil)).Elem(), FeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FeatureSpecMulticlusteringressInput)(nil)).Elem(), FeatureSpecMulticlusteringressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FeatureSpecMulticlusteringressPtrInput)(nil)).Elem(), FeatureSpecMulticlusteringressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FeatureStateTypeInput)(nil)).Elem(), FeatureStateTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FeatureStateTypeArrayInput)(nil)).Elem(), FeatureStateTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FeatureStateStateInput)(nil)).Elem(), FeatureStateStateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FeatureStateStateArrayInput)(nil)).Elem(), FeatureStateStateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MembershipAuthorityInput)(nil)).Elem(), MembershipAuthorityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MembershipAuthorityPtrInput)(nil)).Elem(), MembershipAuthorityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MembershipBindingStateTypeInput)(nil)).Elem(), MembershipBindingStateTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MembershipBindingStateTypeArrayInput)(nil)).Elem(), MembershipBindingStateTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MembershipEndpointInput)(nil)).Elem(), MembershipEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MembershipEndpointPtrInput)(nil)).Elem(), MembershipEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MembershipEndpointGkeClusterInput)(nil)).Elem(), MembershipEndpointGkeClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MembershipEndpointGkeClusterPtrInput)(nil)).Elem(), MembershipEndpointGkeClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MembershipIamBindingConditionInput)(nil)).Elem(), MembershipIamBindingConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MembershipIamBindingConditionPtrInput)(nil)).Elem(), MembershipIamBindingConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MembershipIamMemberConditionInput)(nil)).Elem(), MembershipIamMemberConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MembershipIamMemberConditionPtrInput)(nil)).Elem(), MembershipIamMemberConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MembershipRbacRoleBindingRoleInput)(nil)).Elem(), MembershipRbacRoleBindingRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MembershipRbacRoleBindingRolePtrInput)(nil)).Elem(), MembershipRbacRoleBindingRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MembershipRbacRoleBindingStateTypeInput)(nil)).Elem(), MembershipRbacRoleBindingStateTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MembershipRbacRoleBindingStateTypeArrayInput)(nil)).Elem(), MembershipRbacRoleBindingStateTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NamespaceStateTypeInput)(nil)).Elem(), NamespaceStateTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NamespaceStateTypeArrayInput)(nil)).Elem(), NamespaceStateTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScopeIamBindingConditionInput)(nil)).Elem(), ScopeIamBindingConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScopeIamBindingConditionPtrInput)(nil)).Elem(), ScopeIamBindingConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScopeIamMemberConditionInput)(nil)).Elem(), ScopeIamMemberConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScopeIamMemberConditionPtrInput)(nil)).Elem(), ScopeIamMemberConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScopeRbacRoleBindingRoleInput)(nil)).Elem(), ScopeRbacRoleBindingRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScopeRbacRoleBindingRolePtrInput)(nil)).Elem(), ScopeRbacRoleBindingRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScopeRbacRoleBindingStateTypeInput)(nil)).Elem(), ScopeRbacRoleBindingStateTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScopeRbacRoleBindingStateTypeArrayInput)(nil)).Elem(), ScopeRbacRoleBindingStateTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScopeStateTypeInput)(nil)).Elem(), ScopeStateTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScopeStateTypeArrayInput)(nil)).Elem(), ScopeStateTypeArray{})
	pulumi.RegisterOutputType(FeatureIamBindingConditionOutput{})
	pulumi.RegisterOutputType(FeatureIamBindingConditionPtrOutput{})
	pulumi.RegisterOutputType(FeatureIamMemberConditionOutput{})
	pulumi.RegisterOutputType(FeatureIamMemberConditionPtrOutput{})
	pulumi.RegisterOutputType(FeatureMembershipConfigmanagementOutput{})
	pulumi.RegisterOutputType(FeatureMembershipConfigmanagementPtrOutput{})
	pulumi.RegisterOutputType(FeatureMembershipConfigmanagementBinauthzOutput{})
	pulumi.RegisterOutputType(FeatureMembershipConfigmanagementBinauthzPtrOutput{})
	pulumi.RegisterOutputType(FeatureMembershipConfigmanagementConfigSyncOutput{})
	pulumi.RegisterOutputType(FeatureMembershipConfigmanagementConfigSyncPtrOutput{})
	pulumi.RegisterOutputType(FeatureMembershipConfigmanagementConfigSyncGitOutput{})
	pulumi.RegisterOutputType(FeatureMembershipConfigmanagementConfigSyncGitPtrOutput{})
	pulumi.RegisterOutputType(FeatureMembershipConfigmanagementConfigSyncOciOutput{})
	pulumi.RegisterOutputType(FeatureMembershipConfigmanagementConfigSyncOciPtrOutput{})
	pulumi.RegisterOutputType(FeatureMembershipConfigmanagementHierarchyControllerOutput{})
	pulumi.RegisterOutputType(FeatureMembershipConfigmanagementHierarchyControllerPtrOutput{})
	pulumi.RegisterOutputType(FeatureMembershipConfigmanagementPolicyControllerOutput{})
	pulumi.RegisterOutputType(FeatureMembershipConfigmanagementPolicyControllerPtrOutput{})
	pulumi.RegisterOutputType(FeatureMembershipConfigmanagementPolicyControllerMonitoringOutput{})
	pulumi.RegisterOutputType(FeatureMembershipConfigmanagementPolicyControllerMonitoringPtrOutput{})
	pulumi.RegisterOutputType(FeatureMembershipMeshOutput{})
	pulumi.RegisterOutputType(FeatureMembershipMeshPtrOutput{})
	pulumi.RegisterOutputType(FeatureResourceStateOutput{})
	pulumi.RegisterOutputType(FeatureResourceStateArrayOutput{})
	pulumi.RegisterOutputType(FeatureSpecOutput{})
	pulumi.RegisterOutputType(FeatureSpecPtrOutput{})
	pulumi.RegisterOutputType(FeatureSpecFleetobservabilityOutput{})
	pulumi.RegisterOutputType(FeatureSpecFleetobservabilityPtrOutput{})
	pulumi.RegisterOutputType(FeatureSpecFleetobservabilityLoggingConfigOutput{})
	pulumi.RegisterOutputType(FeatureSpecFleetobservabilityLoggingConfigPtrOutput{})
	pulumi.RegisterOutputType(FeatureSpecFleetobservabilityLoggingConfigDefaultConfigOutput{})
	pulumi.RegisterOutputType(FeatureSpecFleetobservabilityLoggingConfigDefaultConfigPtrOutput{})
	pulumi.RegisterOutputType(FeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigOutput{})
	pulumi.RegisterOutputType(FeatureSpecFleetobservabilityLoggingConfigFleetScopeLogsConfigPtrOutput{})
	pulumi.RegisterOutputType(FeatureSpecMulticlusteringressOutput{})
	pulumi.RegisterOutputType(FeatureSpecMulticlusteringressPtrOutput{})
	pulumi.RegisterOutputType(FeatureStateTypeOutput{})
	pulumi.RegisterOutputType(FeatureStateTypeArrayOutput{})
	pulumi.RegisterOutputType(FeatureStateStateOutput{})
	pulumi.RegisterOutputType(FeatureStateStateArrayOutput{})
	pulumi.RegisterOutputType(MembershipAuthorityOutput{})
	pulumi.RegisterOutputType(MembershipAuthorityPtrOutput{})
	pulumi.RegisterOutputType(MembershipBindingStateTypeOutput{})
	pulumi.RegisterOutputType(MembershipBindingStateTypeArrayOutput{})
	pulumi.RegisterOutputType(MembershipEndpointOutput{})
	pulumi.RegisterOutputType(MembershipEndpointPtrOutput{})
	pulumi.RegisterOutputType(MembershipEndpointGkeClusterOutput{})
	pulumi.RegisterOutputType(MembershipEndpointGkeClusterPtrOutput{})
	pulumi.RegisterOutputType(MembershipIamBindingConditionOutput{})
	pulumi.RegisterOutputType(MembershipIamBindingConditionPtrOutput{})
	pulumi.RegisterOutputType(MembershipIamMemberConditionOutput{})
	pulumi.RegisterOutputType(MembershipIamMemberConditionPtrOutput{})
	pulumi.RegisterOutputType(MembershipRbacRoleBindingRoleOutput{})
	pulumi.RegisterOutputType(MembershipRbacRoleBindingRolePtrOutput{})
	pulumi.RegisterOutputType(MembershipRbacRoleBindingStateTypeOutput{})
	pulumi.RegisterOutputType(MembershipRbacRoleBindingStateTypeArrayOutput{})
	pulumi.RegisterOutputType(NamespaceStateTypeOutput{})
	pulumi.RegisterOutputType(NamespaceStateTypeArrayOutput{})
	pulumi.RegisterOutputType(ScopeIamBindingConditionOutput{})
	pulumi.RegisterOutputType(ScopeIamBindingConditionPtrOutput{})
	pulumi.RegisterOutputType(ScopeIamMemberConditionOutput{})
	pulumi.RegisterOutputType(ScopeIamMemberConditionPtrOutput{})
	pulumi.RegisterOutputType(ScopeRbacRoleBindingRoleOutput{})
	pulumi.RegisterOutputType(ScopeRbacRoleBindingRolePtrOutput{})
	pulumi.RegisterOutputType(ScopeRbacRoleBindingStateTypeOutput{})
	pulumi.RegisterOutputType(ScopeRbacRoleBindingStateTypeArrayOutput{})
	pulumi.RegisterOutputType(ScopeStateTypeOutput{})
	pulumi.RegisterOutputType(ScopeStateTypeArrayOutput{})
}
