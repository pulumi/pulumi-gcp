// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package gkehub

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// MembershipBinding is a subresource of a Membership, representing what Fleet Scopes (or other, future Fleet resources) a Membership is bound to.
//
// To get more information about MembershipBinding, see:
//
// * [API documentation](https://cloud.google.com/anthos/fleet-management/docs/reference/rest/v1/projects.locations.memberships.bindings)
// * How-to Guides
//   - [Registering a Cluster](https://cloud.google.com/anthos/multicluster-management/connect/registering-a-cluster#register_cluster)
//
// ## Example Usage
//
// ## Import
//
// # MembershipBinding can be imported using any of these accepted formats
//
// ```sh
//
//	$ pulumi import gcp:gkehub/membershipBinding:MembershipBinding default projects/{{project}}/locations/{{location}}/memberships/{{membership_id}}/bindings/{{membership_binding_id}}
//
// ```
//
// ```sh
//
//	$ pulumi import gcp:gkehub/membershipBinding:MembershipBinding default {{project}}/{{location}}/{{membership_id}}/{{membership_binding_id}}
//
// ```
//
// ```sh
//
//	$ pulumi import gcp:gkehub/membershipBinding:MembershipBinding default {{location}}/{{membership_id}}/{{membership_binding_id}}
//
// ```
type MembershipBinding struct {
	pulumi.CustomResourceState

	// Time the MembershipBinding was created in UTC.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Time the MembershipBinding was deleted in UTC.
	DeleteTime pulumi.StringOutput `pulumi:"deleteTime"`
	// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Terraform, other
	// clients and services.
	EffectiveLabels pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	// Labels for this Membership binding.
	//
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// Location of the membership
	//
	// ***
	Location pulumi.StringOutput `pulumi:"location"`
	// The client-provided identifier of the membership binding.
	MembershipBindingId pulumi.StringOutput `pulumi:"membershipBindingId"`
	// Id of the membership
	MembershipId pulumi.StringOutput `pulumi:"membershipId"`
	// The resource name for the membershipbinding itself
	Name pulumi.StringOutput `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
	// The combination of labels configured directly on the resource
	// and default labels configured on the provider.
	PulumiLabels pulumi.StringMapOutput `pulumi:"pulumiLabels"`
	// A Workspace resource name in the format
	// `projects/*/locations/*/scopes/*`.
	Scope pulumi.StringOutput `pulumi:"scope"`
	// State of the membership binding resource.
	// Structure is documented below.
	States MembershipBindingStateTypeArrayOutput `pulumi:"states"`
	// Google-generated UUID for this resource.
	Uid pulumi.StringOutput `pulumi:"uid"`
	// Time the MembershipBinding was updated in UTC.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewMembershipBinding registers a new resource with the given unique name, arguments, and options.
func NewMembershipBinding(ctx *pulumi.Context,
	name string, args *MembershipBindingArgs, opts ...pulumi.ResourceOption) (*MembershipBinding, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	if args.MembershipBindingId == nil {
		return nil, errors.New("invalid value for required argument 'MembershipBindingId'")
	}
	if args.MembershipId == nil {
		return nil, errors.New("invalid value for required argument 'MembershipId'")
	}
	if args.Scope == nil {
		return nil, errors.New("invalid value for required argument 'Scope'")
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"effectiveLabels",
		"pulumiLabels",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource MembershipBinding
	err := ctx.RegisterResource("gcp:gkehub/membershipBinding:MembershipBinding", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMembershipBinding gets an existing MembershipBinding resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMembershipBinding(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MembershipBindingState, opts ...pulumi.ResourceOption) (*MembershipBinding, error) {
	var resource MembershipBinding
	err := ctx.ReadResource("gcp:gkehub/membershipBinding:MembershipBinding", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MembershipBinding resources.
type membershipBindingState struct {
	// Time the MembershipBinding was created in UTC.
	CreateTime *string `pulumi:"createTime"`
	// Time the MembershipBinding was deleted in UTC.
	DeleteTime *string `pulumi:"deleteTime"`
	// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Terraform, other
	// clients and services.
	EffectiveLabels map[string]string `pulumi:"effectiveLabels"`
	// Labels for this Membership binding.
	//
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// Location of the membership
	//
	// ***
	Location *string `pulumi:"location"`
	// The client-provided identifier of the membership binding.
	MembershipBindingId *string `pulumi:"membershipBindingId"`
	// Id of the membership
	MembershipId *string `pulumi:"membershipId"`
	// The resource name for the membershipbinding itself
	Name *string `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// The combination of labels configured directly on the resource
	// and default labels configured on the provider.
	PulumiLabels map[string]string `pulumi:"pulumiLabels"`
	// A Workspace resource name in the format
	// `projects/*/locations/*/scopes/*`.
	Scope *string `pulumi:"scope"`
	// State of the membership binding resource.
	// Structure is documented below.
	States []MembershipBindingStateType `pulumi:"states"`
	// Google-generated UUID for this resource.
	Uid *string `pulumi:"uid"`
	// Time the MembershipBinding was updated in UTC.
	UpdateTime *string `pulumi:"updateTime"`
}

type MembershipBindingState struct {
	// Time the MembershipBinding was created in UTC.
	CreateTime pulumi.StringPtrInput
	// Time the MembershipBinding was deleted in UTC.
	DeleteTime pulumi.StringPtrInput
	// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Terraform, other
	// clients and services.
	EffectiveLabels pulumi.StringMapInput
	// Labels for this Membership binding.
	//
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// Location of the membership
	//
	// ***
	Location pulumi.StringPtrInput
	// The client-provided identifier of the membership binding.
	MembershipBindingId pulumi.StringPtrInput
	// Id of the membership
	MembershipId pulumi.StringPtrInput
	// The resource name for the membershipbinding itself
	Name pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// The combination of labels configured directly on the resource
	// and default labels configured on the provider.
	PulumiLabels pulumi.StringMapInput
	// A Workspace resource name in the format
	// `projects/*/locations/*/scopes/*`.
	Scope pulumi.StringPtrInput
	// State of the membership binding resource.
	// Structure is documented below.
	States MembershipBindingStateTypeArrayInput
	// Google-generated UUID for this resource.
	Uid pulumi.StringPtrInput
	// Time the MembershipBinding was updated in UTC.
	UpdateTime pulumi.StringPtrInput
}

func (MembershipBindingState) ElementType() reflect.Type {
	return reflect.TypeOf((*membershipBindingState)(nil)).Elem()
}

type membershipBindingArgs struct {
	// Labels for this Membership binding.
	//
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// Location of the membership
	//
	// ***
	Location string `pulumi:"location"`
	// The client-provided identifier of the membership binding.
	MembershipBindingId string `pulumi:"membershipBindingId"`
	// Id of the membership
	MembershipId string `pulumi:"membershipId"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// A Workspace resource name in the format
	// `projects/*/locations/*/scopes/*`.
	Scope string `pulumi:"scope"`
}

// The set of arguments for constructing a MembershipBinding resource.
type MembershipBindingArgs struct {
	// Labels for this Membership binding.
	//
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// Location of the membership
	//
	// ***
	Location pulumi.StringInput
	// The client-provided identifier of the membership binding.
	MembershipBindingId pulumi.StringInput
	// Id of the membership
	MembershipId pulumi.StringInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// A Workspace resource name in the format
	// `projects/*/locations/*/scopes/*`.
	Scope pulumi.StringInput
}

func (MembershipBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*membershipBindingArgs)(nil)).Elem()
}

type MembershipBindingInput interface {
	pulumi.Input

	ToMembershipBindingOutput() MembershipBindingOutput
	ToMembershipBindingOutputWithContext(ctx context.Context) MembershipBindingOutput
}

func (*MembershipBinding) ElementType() reflect.Type {
	return reflect.TypeOf((**MembershipBinding)(nil)).Elem()
}

func (i *MembershipBinding) ToMembershipBindingOutput() MembershipBindingOutput {
	return i.ToMembershipBindingOutputWithContext(context.Background())
}

func (i *MembershipBinding) ToMembershipBindingOutputWithContext(ctx context.Context) MembershipBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MembershipBindingOutput)
}

// MembershipBindingArrayInput is an input type that accepts MembershipBindingArray and MembershipBindingArrayOutput values.
// You can construct a concrete instance of `MembershipBindingArrayInput` via:
//
//	MembershipBindingArray{ MembershipBindingArgs{...} }
type MembershipBindingArrayInput interface {
	pulumi.Input

	ToMembershipBindingArrayOutput() MembershipBindingArrayOutput
	ToMembershipBindingArrayOutputWithContext(context.Context) MembershipBindingArrayOutput
}

type MembershipBindingArray []MembershipBindingInput

func (MembershipBindingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MembershipBinding)(nil)).Elem()
}

func (i MembershipBindingArray) ToMembershipBindingArrayOutput() MembershipBindingArrayOutput {
	return i.ToMembershipBindingArrayOutputWithContext(context.Background())
}

func (i MembershipBindingArray) ToMembershipBindingArrayOutputWithContext(ctx context.Context) MembershipBindingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MembershipBindingArrayOutput)
}

// MembershipBindingMapInput is an input type that accepts MembershipBindingMap and MembershipBindingMapOutput values.
// You can construct a concrete instance of `MembershipBindingMapInput` via:
//
//	MembershipBindingMap{ "key": MembershipBindingArgs{...} }
type MembershipBindingMapInput interface {
	pulumi.Input

	ToMembershipBindingMapOutput() MembershipBindingMapOutput
	ToMembershipBindingMapOutputWithContext(context.Context) MembershipBindingMapOutput
}

type MembershipBindingMap map[string]MembershipBindingInput

func (MembershipBindingMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MembershipBinding)(nil)).Elem()
}

func (i MembershipBindingMap) ToMembershipBindingMapOutput() MembershipBindingMapOutput {
	return i.ToMembershipBindingMapOutputWithContext(context.Background())
}

func (i MembershipBindingMap) ToMembershipBindingMapOutputWithContext(ctx context.Context) MembershipBindingMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MembershipBindingMapOutput)
}

type MembershipBindingOutput struct{ *pulumi.OutputState }

func (MembershipBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MembershipBinding)(nil)).Elem()
}

func (o MembershipBindingOutput) ToMembershipBindingOutput() MembershipBindingOutput {
	return o
}

func (o MembershipBindingOutput) ToMembershipBindingOutputWithContext(ctx context.Context) MembershipBindingOutput {
	return o
}

// Time the MembershipBinding was created in UTC.
func (o MembershipBindingOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *MembershipBinding) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Time the MembershipBinding was deleted in UTC.
func (o MembershipBindingOutput) DeleteTime() pulumi.StringOutput {
	return o.ApplyT(func(v *MembershipBinding) pulumi.StringOutput { return v.DeleteTime }).(pulumi.StringOutput)
}

// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Terraform, other
// clients and services.
func (o MembershipBindingOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *MembershipBinding) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// Labels for this Membership binding.
//
// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
func (o MembershipBindingOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *MembershipBinding) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// Location of the membership
//
// ***
func (o MembershipBindingOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *MembershipBinding) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The client-provided identifier of the membership binding.
func (o MembershipBindingOutput) MembershipBindingId() pulumi.StringOutput {
	return o.ApplyT(func(v *MembershipBinding) pulumi.StringOutput { return v.MembershipBindingId }).(pulumi.StringOutput)
}

// Id of the membership
func (o MembershipBindingOutput) MembershipId() pulumi.StringOutput {
	return o.ApplyT(func(v *MembershipBinding) pulumi.StringOutput { return v.MembershipId }).(pulumi.StringOutput)
}

// The resource name for the membershipbinding itself
func (o MembershipBindingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *MembershipBinding) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The ID of the project in which the resource belongs.
// If it is not provided, the provider project is used.
func (o MembershipBindingOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *MembershipBinding) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The combination of labels configured directly on the resource
// and default labels configured on the provider.
func (o MembershipBindingOutput) PulumiLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *MembershipBinding) pulumi.StringMapOutput { return v.PulumiLabels }).(pulumi.StringMapOutput)
}

// A Workspace resource name in the format
// `projects/*/locations/*/scopes/*`.
func (o MembershipBindingOutput) Scope() pulumi.StringOutput {
	return o.ApplyT(func(v *MembershipBinding) pulumi.StringOutput { return v.Scope }).(pulumi.StringOutput)
}

// State of the membership binding resource.
// Structure is documented below.
func (o MembershipBindingOutput) States() MembershipBindingStateTypeArrayOutput {
	return o.ApplyT(func(v *MembershipBinding) MembershipBindingStateTypeArrayOutput { return v.States }).(MembershipBindingStateTypeArrayOutput)
}

// Google-generated UUID for this resource.
func (o MembershipBindingOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v *MembershipBinding) pulumi.StringOutput { return v.Uid }).(pulumi.StringOutput)
}

// Time the MembershipBinding was updated in UTC.
func (o MembershipBindingOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *MembershipBinding) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

type MembershipBindingArrayOutput struct{ *pulumi.OutputState }

func (MembershipBindingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MembershipBinding)(nil)).Elem()
}

func (o MembershipBindingArrayOutput) ToMembershipBindingArrayOutput() MembershipBindingArrayOutput {
	return o
}

func (o MembershipBindingArrayOutput) ToMembershipBindingArrayOutputWithContext(ctx context.Context) MembershipBindingArrayOutput {
	return o
}

func (o MembershipBindingArrayOutput) Index(i pulumi.IntInput) MembershipBindingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *MembershipBinding {
		return vs[0].([]*MembershipBinding)[vs[1].(int)]
	}).(MembershipBindingOutput)
}

type MembershipBindingMapOutput struct{ *pulumi.OutputState }

func (MembershipBindingMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MembershipBinding)(nil)).Elem()
}

func (o MembershipBindingMapOutput) ToMembershipBindingMapOutput() MembershipBindingMapOutput {
	return o
}

func (o MembershipBindingMapOutput) ToMembershipBindingMapOutputWithContext(ctx context.Context) MembershipBindingMapOutput {
	return o
}

func (o MembershipBindingMapOutput) MapIndex(k pulumi.StringInput) MembershipBindingOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *MembershipBinding {
		return vs[0].(map[string]*MembershipBinding)[vs[1].(string)]
	}).(MembershipBindingOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MembershipBindingInput)(nil)).Elem(), &MembershipBinding{})
	pulumi.RegisterInputType(reflect.TypeOf((*MembershipBindingArrayInput)(nil)).Elem(), MembershipBindingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MembershipBindingMapInput)(nil)).Elem(), MembershipBindingMap{})
	pulumi.RegisterOutputType(MembershipBindingOutput{})
	pulumi.RegisterOutputType(MembershipBindingArrayOutput{})
	pulumi.RegisterOutputType(MembershipBindingMapOutput{})
}
