// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package gkehub

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Retrieves the current IAM policy data for membership
func LookupMembershipIamPolicy(ctx *pulumi.Context, args *LookupMembershipIamPolicyArgs, opts ...pulumi.InvokeOption) (*LookupMembershipIamPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupMembershipIamPolicyResult
	err := ctx.Invoke("gcp:gkehub/getMembershipIamPolicy:getMembershipIamPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMembershipIamPolicy.
type LookupMembershipIamPolicyArgs struct {
	MembershipId string `pulumi:"membershipId"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project *string `pulumi:"project"`
}

// A collection of values returned by getMembershipIamPolicy.
type LookupMembershipIamPolicyResult struct {
	// (Computed) The etag of the IAM policy.
	Etag string `pulumi:"etag"`
	// The provider-assigned unique ID for this managed resource.
	Id           string `pulumi:"id"`
	MembershipId string `pulumi:"membershipId"`
	// (Required only by `gkehub.MembershipIamPolicy`) The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData string `pulumi:"policyData"`
	Project    string `pulumi:"project"`
}

func LookupMembershipIamPolicyOutput(ctx *pulumi.Context, args LookupMembershipIamPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupMembershipIamPolicyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupMembershipIamPolicyResult, error) {
			args := v.(LookupMembershipIamPolicyArgs)
			r, err := LookupMembershipIamPolicy(ctx, &args, opts...)
			var s LookupMembershipIamPolicyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupMembershipIamPolicyResultOutput)
}

// A collection of arguments for invoking getMembershipIamPolicy.
type LookupMembershipIamPolicyOutputArgs struct {
	MembershipId pulumi.StringInput `pulumi:"membershipId"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupMembershipIamPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMembershipIamPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getMembershipIamPolicy.
type LookupMembershipIamPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupMembershipIamPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMembershipIamPolicyResult)(nil)).Elem()
}

func (o LookupMembershipIamPolicyResultOutput) ToLookupMembershipIamPolicyResultOutput() LookupMembershipIamPolicyResultOutput {
	return o
}

func (o LookupMembershipIamPolicyResultOutput) ToLookupMembershipIamPolicyResultOutputWithContext(ctx context.Context) LookupMembershipIamPolicyResultOutput {
	return o
}

func (o LookupMembershipIamPolicyResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupMembershipIamPolicyResult] {
	return pulumix.Output[LookupMembershipIamPolicyResult]{
		OutputState: o.OutputState,
	}
}

// (Computed) The etag of the IAM policy.
func (o LookupMembershipIamPolicyResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMembershipIamPolicyResult) string { return v.Etag }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupMembershipIamPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMembershipIamPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupMembershipIamPolicyResultOutput) MembershipId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMembershipIamPolicyResult) string { return v.MembershipId }).(pulumi.StringOutput)
}

// (Required only by `gkehub.MembershipIamPolicy`) The policy data generated by
// a `organizations.getIAMPolicy` data source.
func (o LookupMembershipIamPolicyResultOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMembershipIamPolicyResult) string { return v.PolicyData }).(pulumi.StringOutput)
}

func (o LookupMembershipIamPolicyResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMembershipIamPolicyResult) string { return v.Project }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupMembershipIamPolicyResultOutput{})
}
