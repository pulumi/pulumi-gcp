// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package gkehub

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Retrieves the current IAM policy data for feature
func LookupFeatureIamPolicy(ctx *pulumi.Context, args *LookupFeatureIamPolicyArgs, opts ...pulumi.InvokeOption) (*LookupFeatureIamPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupFeatureIamPolicyResult
	err := ctx.Invoke("gcp:gkehub/getFeatureIamPolicy:getFeatureIamPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getFeatureIamPolicy.
type LookupFeatureIamPolicyArgs struct {
	// The location for the resource Used to find the parent resource to bind the IAM policy to
	Location *string `pulumi:"location"`
	// Used to find the parent resource to bind the IAM policy to
	Name string `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project *string `pulumi:"project"`
}

// A collection of values returned by getFeatureIamPolicy.
type LookupFeatureIamPolicyResult struct {
	// (Computed) The etag of the IAM policy.
	Etag string `pulumi:"etag"`
	// The provider-assigned unique ID for this managed resource.
	Id       string `pulumi:"id"`
	Location string `pulumi:"location"`
	Name     string `pulumi:"name"`
	// (Required only by `gkehub.FeatureIamPolicy`) The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData string `pulumi:"policyData"`
	Project    string `pulumi:"project"`
}

func LookupFeatureIamPolicyOutput(ctx *pulumi.Context, args LookupFeatureIamPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupFeatureIamPolicyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupFeatureIamPolicyResult, error) {
			args := v.(LookupFeatureIamPolicyArgs)
			r, err := LookupFeatureIamPolicy(ctx, &args, opts...)
			var s LookupFeatureIamPolicyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupFeatureIamPolicyResultOutput)
}

// A collection of arguments for invoking getFeatureIamPolicy.
type LookupFeatureIamPolicyOutputArgs struct {
	// The location for the resource Used to find the parent resource to bind the IAM policy to
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Used to find the parent resource to bind the IAM policy to
	Name pulumi.StringInput `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupFeatureIamPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFeatureIamPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getFeatureIamPolicy.
type LookupFeatureIamPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupFeatureIamPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFeatureIamPolicyResult)(nil)).Elem()
}

func (o LookupFeatureIamPolicyResultOutput) ToLookupFeatureIamPolicyResultOutput() LookupFeatureIamPolicyResultOutput {
	return o
}

func (o LookupFeatureIamPolicyResultOutput) ToLookupFeatureIamPolicyResultOutputWithContext(ctx context.Context) LookupFeatureIamPolicyResultOutput {
	return o
}

func (o LookupFeatureIamPolicyResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupFeatureIamPolicyResult] {
	return pulumix.Output[LookupFeatureIamPolicyResult]{
		OutputState: o.OutputState,
	}
}

// (Computed) The etag of the IAM policy.
func (o LookupFeatureIamPolicyResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFeatureIamPolicyResult) string { return v.Etag }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupFeatureIamPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFeatureIamPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupFeatureIamPolicyResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFeatureIamPolicyResult) string { return v.Location }).(pulumi.StringOutput)
}

func (o LookupFeatureIamPolicyResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFeatureIamPolicyResult) string { return v.Name }).(pulumi.StringOutput)
}

// (Required only by `gkehub.FeatureIamPolicy`) The policy data generated by
// a `organizations.getIAMPolicy` data source.
func (o LookupFeatureIamPolicyResultOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFeatureIamPolicyResult) string { return v.PolicyData }).(pulumi.StringOutput)
}

func (o LookupFeatureIamPolicyResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFeatureIamPolicyResult) string { return v.Project }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupFeatureIamPolicyResultOutput{})
}
