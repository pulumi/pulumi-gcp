// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package gkehub

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves the current IAM policy data for scope
//
// ## example
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/gkehub"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := gkehub.LookupScopeIamPolicy(ctx, &gkehub.LookupScopeIamPolicyArgs{
//				Project: pulumi.StringRef(google_gke_hub_scope.Scope.Project),
//				ScopeId: google_gke_hub_scope.Scope.Scope_id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupScopeIamPolicy(ctx *pulumi.Context, args *LookupScopeIamPolicyArgs, opts ...pulumi.InvokeOption) (*LookupScopeIamPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupScopeIamPolicyResult
	err := ctx.Invoke("gcp:gkehub/getScopeIamPolicy:getScopeIamPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getScopeIamPolicy.
type LookupScopeIamPolicyArgs struct {
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project *string `pulumi:"project"`
	ScopeId string  `pulumi:"scopeId"`
}

// A collection of values returned by getScopeIamPolicy.
type LookupScopeIamPolicyResult struct {
	// (Computed) The etag of the IAM policy.
	Etag string `pulumi:"etag"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// (Required only by `gkehub.ScopeIamPolicy`) The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData string `pulumi:"policyData"`
	Project    string `pulumi:"project"`
	ScopeId    string `pulumi:"scopeId"`
}

func LookupScopeIamPolicyOutput(ctx *pulumi.Context, args LookupScopeIamPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupScopeIamPolicyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupScopeIamPolicyResult, error) {
			args := v.(LookupScopeIamPolicyArgs)
			r, err := LookupScopeIamPolicy(ctx, &args, opts...)
			var s LookupScopeIamPolicyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupScopeIamPolicyResultOutput)
}

// A collection of arguments for invoking getScopeIamPolicy.
type LookupScopeIamPolicyOutputArgs struct {
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringPtrInput `pulumi:"project"`
	ScopeId pulumi.StringInput    `pulumi:"scopeId"`
}

func (LookupScopeIamPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupScopeIamPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getScopeIamPolicy.
type LookupScopeIamPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupScopeIamPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupScopeIamPolicyResult)(nil)).Elem()
}

func (o LookupScopeIamPolicyResultOutput) ToLookupScopeIamPolicyResultOutput() LookupScopeIamPolicyResultOutput {
	return o
}

func (o LookupScopeIamPolicyResultOutput) ToLookupScopeIamPolicyResultOutputWithContext(ctx context.Context) LookupScopeIamPolicyResultOutput {
	return o
}

// (Computed) The etag of the IAM policy.
func (o LookupScopeIamPolicyResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScopeIamPolicyResult) string { return v.Etag }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupScopeIamPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScopeIamPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

// (Required only by `gkehub.ScopeIamPolicy`) The policy data generated by
// a `organizations.getIAMPolicy` data source.
func (o LookupScopeIamPolicyResultOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScopeIamPolicyResult) string { return v.PolicyData }).(pulumi.StringOutput)
}

func (o LookupScopeIamPolicyResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScopeIamPolicyResult) string { return v.Project }).(pulumi.StringOutput)
}

func (o LookupScopeIamPolicyResultOutput) ScopeId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScopeIamPolicyResult) string { return v.ScopeId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupScopeIamPolicyResultOutput{})
}
