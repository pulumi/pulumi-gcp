// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudasset

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
// ### Searching For All Projects In An Org
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/cloudasset"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err = cloudasset.LookupResourcesSearchAll(ctx, &cloudasset.LookupResourcesSearchAllArgs{
//				Scope: "organizations/0123456789",
//				AssetTypes: []string{
//					"cloudresourcemanager.googleapis.com/Project",
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Searching For All Projects With CloudBuild API Enabled
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/cloudasset"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err = cloudasset.LookupResourcesSearchAll(ctx, &cloudasset.LookupResourcesSearchAllArgs{
//				Scope: "organizations/0123456789",
//				AssetTypes: []string{
//					"serviceusage.googleapis.com/Service",
//				},
//				Query: pulumi.StringRef("displayName:cloudbuild.googleapis.com AND state:ENABLED"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Searching For All Service Accounts In A Project
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/cloudasset"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err = cloudasset.LookupResourcesSearchAll(ctx, &cloudasset.LookupResourcesSearchAllArgs{
//				Scope: "projects/my-project-id",
//				AssetTypes: []string{
//					"iam.googleapis.com/ServiceAccount",
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupResourcesSearchAll(ctx *pulumi.Context, args *LookupResourcesSearchAllArgs, opts ...pulumi.InvokeOption) (*LookupResourcesSearchAllResult, error) {
	var rv LookupResourcesSearchAllResult
	err := ctx.Invoke("gcp:cloudasset/getResourcesSearchAll:getResourcesSearchAll", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getResourcesSearchAll.
type LookupResourcesSearchAllArgs struct {
	// A list of asset types that this request searches for. If empty, it will search all the [supported asset types](https://cloud.google.com/asset-inventory/docs/supported-asset-types).
	AssetTypes []string `pulumi:"assetTypes"`
	// The query statement. See [how to construct a query](https://cloud.google.com/asset-inventory/docs/searching-resources#how_to_construct_a_query) for more information. If not specified or empty, it will search all the resources within the specified `scope` and `assetTypes`.
	Query *string `pulumi:"query"`
	// A scope can be a project, a folder, or an organization. The allowed value must be: organization number (such as "organizations/123"), folder number (such as "folders/1234"), project number (such as "projects/12345") or project id (such as "projects/abc")
	Scope string `pulumi:"scope"`
}

// A collection of values returned by getResourcesSearchAll.
type LookupResourcesSearchAllResult struct {
	AssetTypes []string `pulumi:"assetTypes"`
	// The provider-assigned unique ID for this managed resource.
	Id    string  `pulumi:"id"`
	Query *string `pulumi:"query"`
	// A list of search results based on provided inputs. Structure is defined below.
	Results []GetResourcesSearchAllResult `pulumi:"results"`
	Scope   string                        `pulumi:"scope"`
}

func LookupResourcesSearchAllOutput(ctx *pulumi.Context, args LookupResourcesSearchAllOutputArgs, opts ...pulumi.InvokeOption) LookupResourcesSearchAllResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupResourcesSearchAllResult, error) {
			args := v.(LookupResourcesSearchAllArgs)
			r, err := LookupResourcesSearchAll(ctx, &args, opts...)
			var s LookupResourcesSearchAllResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupResourcesSearchAllResultOutput)
}

// A collection of arguments for invoking getResourcesSearchAll.
type LookupResourcesSearchAllOutputArgs struct {
	// A list of asset types that this request searches for. If empty, it will search all the [supported asset types](https://cloud.google.com/asset-inventory/docs/supported-asset-types).
	AssetTypes pulumi.StringArrayInput `pulumi:"assetTypes"`
	// The query statement. See [how to construct a query](https://cloud.google.com/asset-inventory/docs/searching-resources#how_to_construct_a_query) for more information. If not specified or empty, it will search all the resources within the specified `scope` and `assetTypes`.
	Query pulumi.StringPtrInput `pulumi:"query"`
	// A scope can be a project, a folder, or an organization. The allowed value must be: organization number (such as "organizations/123"), folder number (such as "folders/1234"), project number (such as "projects/12345") or project id (such as "projects/abc")
	Scope pulumi.StringInput `pulumi:"scope"`
}

func (LookupResourcesSearchAllOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupResourcesSearchAllArgs)(nil)).Elem()
}

// A collection of values returned by getResourcesSearchAll.
type LookupResourcesSearchAllResultOutput struct{ *pulumi.OutputState }

func (LookupResourcesSearchAllResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupResourcesSearchAllResult)(nil)).Elem()
}

func (o LookupResourcesSearchAllResultOutput) ToLookupResourcesSearchAllResultOutput() LookupResourcesSearchAllResultOutput {
	return o
}

func (o LookupResourcesSearchAllResultOutput) ToLookupResourcesSearchAllResultOutputWithContext(ctx context.Context) LookupResourcesSearchAllResultOutput {
	return o
}

func (o LookupResourcesSearchAllResultOutput) AssetTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupResourcesSearchAllResult) []string { return v.AssetTypes }).(pulumi.StringArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupResourcesSearchAllResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupResourcesSearchAllResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupResourcesSearchAllResultOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupResourcesSearchAllResult) *string { return v.Query }).(pulumi.StringPtrOutput)
}

// A list of search results based on provided inputs. Structure is defined below.
func (o LookupResourcesSearchAllResultOutput) Results() GetResourcesSearchAllResultArrayOutput {
	return o.ApplyT(func(v LookupResourcesSearchAllResult) []GetResourcesSearchAllResult { return v.Results }).(GetResourcesSearchAllResultArrayOutput)
}

func (o LookupResourcesSearchAllResultOutput) Scope() pulumi.StringOutput {
	return o.ApplyT(func(v LookupResourcesSearchAllResult) string { return v.Scope }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupResourcesSearchAllResultOutput{})
}
