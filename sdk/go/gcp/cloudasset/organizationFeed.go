// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudasset

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Describes a Cloud Asset Inventory feed used to to listen to asset updates.
//
// To get more information about OrganizationFeed, see:
//
// * [API documentation](https://cloud.google.com/asset-inventory/docs/reference/rest/)
// * How-to Guides
//   - [Official Documentation](https://cloud.google.com/asset-inventory/docs)
//
// ## Example Usage
//
// ### Cloud Asset Organization Feed
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/cloudasset"
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/organizations"
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/pubsub"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			// The topic where the resource change notifications will be sent.
//			feedOutput, err := pubsub.NewTopic(ctx, "feed_output", &pubsub.TopicArgs{
//				Project: pulumi.String("my-project-name"),
//				Name:    pulumi.String("network-updates"),
//			})
//			if err != nil {
//				return err
//			}
//			// Create a feed that sends notifications about network resource updates under a
//			// particular organization.
//			_, err = cloudasset.NewOrganizationFeed(ctx, "organization_feed", &cloudasset.OrganizationFeedArgs{
//				BillingProject: pulumi.String("my-project-name"),
//				OrgId:          pulumi.String("123456789"),
//				FeedId:         pulumi.String("network-updates"),
//				ContentType:    pulumi.String("RESOURCE"),
//				AssetTypes: pulumi.StringArray{
//					pulumi.String("compute.googleapis.com/Subnetwork"),
//					pulumi.String("compute.googleapis.com/Network"),
//				},
//				FeedOutputConfig: &cloudasset.OrganizationFeedFeedOutputConfigArgs{
//					PubsubDestination: &cloudasset.OrganizationFeedFeedOutputConfigPubsubDestinationArgs{
//						Topic: feedOutput.ID(),
//					},
//				},
//				Condition: &cloudasset.OrganizationFeedConditionArgs{
//					Expression:  pulumi.String("!temporal_asset.deleted &&\ntemporal_asset.prior_asset_state == google.cloud.asset.v1.TemporalAsset.PriorAssetState.DOES_NOT_EXIST\n"),
//					Title:       pulumi.String("created"),
//					Description: pulumi.String("Send notifications on creation events"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			// Find the project number of the project whose identity will be used for sending
//			// the asset change notifications.
//			_, err = organizations.LookupProject(ctx, &organizations.LookupProjectArgs{
//				ProjectId: pulumi.StringRef("my-project-name"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// OrganizationFeed can be imported using any of these accepted formats:
//
// * `organizations/{{org_id}}/feeds/{{name}}`
//
// * `{{org_id}}/{{name}}`
//
// When using the `pulumi import` command, OrganizationFeed can be imported using one of the formats above. For example:
//
// ```sh
// $ pulumi import gcp:cloudasset/organizationFeed:OrganizationFeed default organizations/{{org_id}}/feeds/{{name}}
// ```
//
// ```sh
// $ pulumi import gcp:cloudasset/organizationFeed:OrganizationFeed default {{org_id}}/{{name}}
// ```
type OrganizationFeed struct {
	pulumi.CustomResourceState

	// A list of the full names of the assets to receive updates. You must specify either or both of assetNames and assetTypes.
	// Only asset updates matching specified assetNames and assetTypes are exported to the feed. For example:
	// //compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1. See
	// https://cloud.google.com/apis/design/resourceNames#fullResourceName for more info.
	AssetNames pulumi.StringArrayOutput `pulumi:"assetNames"`
	// A list of types of the assets to receive updates. You must specify either or both of assetNames and assetTypes. Only
	// asset updates matching specified assetNames and assetTypes are exported to the feed. For example:
	// "compute.googleapis.com/Disk" See https://cloud.google.com/asset-inventory/docs/supported-asset-types for a list of all
	// supported asset types.
	AssetTypes pulumi.StringArrayOutput `pulumi:"assetTypes"`
	// The project whose identity will be used when sending messages to the
	// destination pubsub topic. It also specifies the project for API
	// enablement check, quota, and billing.
	BillingProject pulumi.StringOutput `pulumi:"billingProject"`
	// A condition which determines whether an asset update should be published. If specified, an asset will be returned only
	// when the expression evaluates to true. When set, expression field must be a valid CEL expression on a TemporalAsset with
	// name temporal_asset. Example: a Feed with expression "temporal_asset.deleted == true" will only publish Asset deletions.
	// Other fields of condition are optional.
	Condition OrganizationFeedConditionPtrOutput `pulumi:"condition"`
	// Asset content type. If not specified, no content but the asset name and type will be returned. Possible values:
	// ["CONTENT_TYPE_UNSPECIFIED", "RESOURCE", "IAM_POLICY", "ORG_POLICY", "OS_INVENTORY", "ACCESS_POLICY"]
	ContentType pulumi.StringPtrOutput `pulumi:"contentType"`
	// This is the client-assigned asset feed identifier and it needs to be unique under a specific parent.
	FeedId pulumi.StringOutput `pulumi:"feedId"`
	// Output configuration for asset feed destination.
	// Structure is documented below.
	FeedOutputConfig OrganizationFeedFeedOutputConfigOutput `pulumi:"feedOutputConfig"`
	// The format will be organizations/{organization_number}/feeds/{client-assigned_feed_identifier}.
	Name pulumi.StringOutput `pulumi:"name"`
	// The organization this feed should be created in.
	OrgId pulumi.StringOutput `pulumi:"orgId"`
}

// NewOrganizationFeed registers a new resource with the given unique name, arguments, and options.
func NewOrganizationFeed(ctx *pulumi.Context,
	name string, args *OrganizationFeedArgs, opts ...pulumi.ResourceOption) (*OrganizationFeed, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BillingProject == nil {
		return nil, errors.New("invalid value for required argument 'BillingProject'")
	}
	if args.FeedId == nil {
		return nil, errors.New("invalid value for required argument 'FeedId'")
	}
	if args.FeedOutputConfig == nil {
		return nil, errors.New("invalid value for required argument 'FeedOutputConfig'")
	}
	if args.OrgId == nil {
		return nil, errors.New("invalid value for required argument 'OrgId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource OrganizationFeed
	err := ctx.RegisterResource("gcp:cloudasset/organizationFeed:OrganizationFeed", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOrganizationFeed gets an existing OrganizationFeed resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOrganizationFeed(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OrganizationFeedState, opts ...pulumi.ResourceOption) (*OrganizationFeed, error) {
	var resource OrganizationFeed
	err := ctx.ReadResource("gcp:cloudasset/organizationFeed:OrganizationFeed", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OrganizationFeed resources.
type organizationFeedState struct {
	// A list of the full names of the assets to receive updates. You must specify either or both of assetNames and assetTypes.
	// Only asset updates matching specified assetNames and assetTypes are exported to the feed. For example:
	// //compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1. See
	// https://cloud.google.com/apis/design/resourceNames#fullResourceName for more info.
	AssetNames []string `pulumi:"assetNames"`
	// A list of types of the assets to receive updates. You must specify either or both of assetNames and assetTypes. Only
	// asset updates matching specified assetNames and assetTypes are exported to the feed. For example:
	// "compute.googleapis.com/Disk" See https://cloud.google.com/asset-inventory/docs/supported-asset-types for a list of all
	// supported asset types.
	AssetTypes []string `pulumi:"assetTypes"`
	// The project whose identity will be used when sending messages to the
	// destination pubsub topic. It also specifies the project for API
	// enablement check, quota, and billing.
	BillingProject *string `pulumi:"billingProject"`
	// A condition which determines whether an asset update should be published. If specified, an asset will be returned only
	// when the expression evaluates to true. When set, expression field must be a valid CEL expression on a TemporalAsset with
	// name temporal_asset. Example: a Feed with expression "temporal_asset.deleted == true" will only publish Asset deletions.
	// Other fields of condition are optional.
	Condition *OrganizationFeedCondition `pulumi:"condition"`
	// Asset content type. If not specified, no content but the asset name and type will be returned. Possible values:
	// ["CONTENT_TYPE_UNSPECIFIED", "RESOURCE", "IAM_POLICY", "ORG_POLICY", "OS_INVENTORY", "ACCESS_POLICY"]
	ContentType *string `pulumi:"contentType"`
	// This is the client-assigned asset feed identifier and it needs to be unique under a specific parent.
	FeedId *string `pulumi:"feedId"`
	// Output configuration for asset feed destination.
	// Structure is documented below.
	FeedOutputConfig *OrganizationFeedFeedOutputConfig `pulumi:"feedOutputConfig"`
	// The format will be organizations/{organization_number}/feeds/{client-assigned_feed_identifier}.
	Name *string `pulumi:"name"`
	// The organization this feed should be created in.
	OrgId *string `pulumi:"orgId"`
}

type OrganizationFeedState struct {
	// A list of the full names of the assets to receive updates. You must specify either or both of assetNames and assetTypes.
	// Only asset updates matching specified assetNames and assetTypes are exported to the feed. For example:
	// //compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1. See
	// https://cloud.google.com/apis/design/resourceNames#fullResourceName for more info.
	AssetNames pulumi.StringArrayInput
	// A list of types of the assets to receive updates. You must specify either or both of assetNames and assetTypes. Only
	// asset updates matching specified assetNames and assetTypes are exported to the feed. For example:
	// "compute.googleapis.com/Disk" See https://cloud.google.com/asset-inventory/docs/supported-asset-types for a list of all
	// supported asset types.
	AssetTypes pulumi.StringArrayInput
	// The project whose identity will be used when sending messages to the
	// destination pubsub topic. It also specifies the project for API
	// enablement check, quota, and billing.
	BillingProject pulumi.StringPtrInput
	// A condition which determines whether an asset update should be published. If specified, an asset will be returned only
	// when the expression evaluates to true. When set, expression field must be a valid CEL expression on a TemporalAsset with
	// name temporal_asset. Example: a Feed with expression "temporal_asset.deleted == true" will only publish Asset deletions.
	// Other fields of condition are optional.
	Condition OrganizationFeedConditionPtrInput
	// Asset content type. If not specified, no content but the asset name and type will be returned. Possible values:
	// ["CONTENT_TYPE_UNSPECIFIED", "RESOURCE", "IAM_POLICY", "ORG_POLICY", "OS_INVENTORY", "ACCESS_POLICY"]
	ContentType pulumi.StringPtrInput
	// This is the client-assigned asset feed identifier and it needs to be unique under a specific parent.
	FeedId pulumi.StringPtrInput
	// Output configuration for asset feed destination.
	// Structure is documented below.
	FeedOutputConfig OrganizationFeedFeedOutputConfigPtrInput
	// The format will be organizations/{organization_number}/feeds/{client-assigned_feed_identifier}.
	Name pulumi.StringPtrInput
	// The organization this feed should be created in.
	OrgId pulumi.StringPtrInput
}

func (OrganizationFeedState) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationFeedState)(nil)).Elem()
}

type organizationFeedArgs struct {
	// A list of the full names of the assets to receive updates. You must specify either or both of assetNames and assetTypes.
	// Only asset updates matching specified assetNames and assetTypes are exported to the feed. For example:
	// //compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1. See
	// https://cloud.google.com/apis/design/resourceNames#fullResourceName for more info.
	AssetNames []string `pulumi:"assetNames"`
	// A list of types of the assets to receive updates. You must specify either or both of assetNames and assetTypes. Only
	// asset updates matching specified assetNames and assetTypes are exported to the feed. For example:
	// "compute.googleapis.com/Disk" See https://cloud.google.com/asset-inventory/docs/supported-asset-types for a list of all
	// supported asset types.
	AssetTypes []string `pulumi:"assetTypes"`
	// The project whose identity will be used when sending messages to the
	// destination pubsub topic. It also specifies the project for API
	// enablement check, quota, and billing.
	BillingProject string `pulumi:"billingProject"`
	// A condition which determines whether an asset update should be published. If specified, an asset will be returned only
	// when the expression evaluates to true. When set, expression field must be a valid CEL expression on a TemporalAsset with
	// name temporal_asset. Example: a Feed with expression "temporal_asset.deleted == true" will only publish Asset deletions.
	// Other fields of condition are optional.
	Condition *OrganizationFeedCondition `pulumi:"condition"`
	// Asset content type. If not specified, no content but the asset name and type will be returned. Possible values:
	// ["CONTENT_TYPE_UNSPECIFIED", "RESOURCE", "IAM_POLICY", "ORG_POLICY", "OS_INVENTORY", "ACCESS_POLICY"]
	ContentType *string `pulumi:"contentType"`
	// This is the client-assigned asset feed identifier and it needs to be unique under a specific parent.
	FeedId string `pulumi:"feedId"`
	// Output configuration for asset feed destination.
	// Structure is documented below.
	FeedOutputConfig OrganizationFeedFeedOutputConfig `pulumi:"feedOutputConfig"`
	// The organization this feed should be created in.
	OrgId string `pulumi:"orgId"`
}

// The set of arguments for constructing a OrganizationFeed resource.
type OrganizationFeedArgs struct {
	// A list of the full names of the assets to receive updates. You must specify either or both of assetNames and assetTypes.
	// Only asset updates matching specified assetNames and assetTypes are exported to the feed. For example:
	// //compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1. See
	// https://cloud.google.com/apis/design/resourceNames#fullResourceName for more info.
	AssetNames pulumi.StringArrayInput
	// A list of types of the assets to receive updates. You must specify either or both of assetNames and assetTypes. Only
	// asset updates matching specified assetNames and assetTypes are exported to the feed. For example:
	// "compute.googleapis.com/Disk" See https://cloud.google.com/asset-inventory/docs/supported-asset-types for a list of all
	// supported asset types.
	AssetTypes pulumi.StringArrayInput
	// The project whose identity will be used when sending messages to the
	// destination pubsub topic. It also specifies the project for API
	// enablement check, quota, and billing.
	BillingProject pulumi.StringInput
	// A condition which determines whether an asset update should be published. If specified, an asset will be returned only
	// when the expression evaluates to true. When set, expression field must be a valid CEL expression on a TemporalAsset with
	// name temporal_asset. Example: a Feed with expression "temporal_asset.deleted == true" will only publish Asset deletions.
	// Other fields of condition are optional.
	Condition OrganizationFeedConditionPtrInput
	// Asset content type. If not specified, no content but the asset name and type will be returned. Possible values:
	// ["CONTENT_TYPE_UNSPECIFIED", "RESOURCE", "IAM_POLICY", "ORG_POLICY", "OS_INVENTORY", "ACCESS_POLICY"]
	ContentType pulumi.StringPtrInput
	// This is the client-assigned asset feed identifier and it needs to be unique under a specific parent.
	FeedId pulumi.StringInput
	// Output configuration for asset feed destination.
	// Structure is documented below.
	FeedOutputConfig OrganizationFeedFeedOutputConfigInput
	// The organization this feed should be created in.
	OrgId pulumi.StringInput
}

func (OrganizationFeedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationFeedArgs)(nil)).Elem()
}

type OrganizationFeedInput interface {
	pulumi.Input

	ToOrganizationFeedOutput() OrganizationFeedOutput
	ToOrganizationFeedOutputWithContext(ctx context.Context) OrganizationFeedOutput
}

func (*OrganizationFeed) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationFeed)(nil)).Elem()
}

func (i *OrganizationFeed) ToOrganizationFeedOutput() OrganizationFeedOutput {
	return i.ToOrganizationFeedOutputWithContext(context.Background())
}

func (i *OrganizationFeed) ToOrganizationFeedOutputWithContext(ctx context.Context) OrganizationFeedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationFeedOutput)
}

// OrganizationFeedArrayInput is an input type that accepts OrganizationFeedArray and OrganizationFeedArrayOutput values.
// You can construct a concrete instance of `OrganizationFeedArrayInput` via:
//
//	OrganizationFeedArray{ OrganizationFeedArgs{...} }
type OrganizationFeedArrayInput interface {
	pulumi.Input

	ToOrganizationFeedArrayOutput() OrganizationFeedArrayOutput
	ToOrganizationFeedArrayOutputWithContext(context.Context) OrganizationFeedArrayOutput
}

type OrganizationFeedArray []OrganizationFeedInput

func (OrganizationFeedArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OrganizationFeed)(nil)).Elem()
}

func (i OrganizationFeedArray) ToOrganizationFeedArrayOutput() OrganizationFeedArrayOutput {
	return i.ToOrganizationFeedArrayOutputWithContext(context.Background())
}

func (i OrganizationFeedArray) ToOrganizationFeedArrayOutputWithContext(ctx context.Context) OrganizationFeedArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationFeedArrayOutput)
}

// OrganizationFeedMapInput is an input type that accepts OrganizationFeedMap and OrganizationFeedMapOutput values.
// You can construct a concrete instance of `OrganizationFeedMapInput` via:
//
//	OrganizationFeedMap{ "key": OrganizationFeedArgs{...} }
type OrganizationFeedMapInput interface {
	pulumi.Input

	ToOrganizationFeedMapOutput() OrganizationFeedMapOutput
	ToOrganizationFeedMapOutputWithContext(context.Context) OrganizationFeedMapOutput
}

type OrganizationFeedMap map[string]OrganizationFeedInput

func (OrganizationFeedMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OrganizationFeed)(nil)).Elem()
}

func (i OrganizationFeedMap) ToOrganizationFeedMapOutput() OrganizationFeedMapOutput {
	return i.ToOrganizationFeedMapOutputWithContext(context.Background())
}

func (i OrganizationFeedMap) ToOrganizationFeedMapOutputWithContext(ctx context.Context) OrganizationFeedMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationFeedMapOutput)
}

type OrganizationFeedOutput struct{ *pulumi.OutputState }

func (OrganizationFeedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationFeed)(nil)).Elem()
}

func (o OrganizationFeedOutput) ToOrganizationFeedOutput() OrganizationFeedOutput {
	return o
}

func (o OrganizationFeedOutput) ToOrganizationFeedOutputWithContext(ctx context.Context) OrganizationFeedOutput {
	return o
}

// A list of the full names of the assets to receive updates. You must specify either or both of assetNames and assetTypes.
// Only asset updates matching specified assetNames and assetTypes are exported to the feed. For example:
// //compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1. See
// https://cloud.google.com/apis/design/resourceNames#fullResourceName for more info.
func (o OrganizationFeedOutput) AssetNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OrganizationFeed) pulumi.StringArrayOutput { return v.AssetNames }).(pulumi.StringArrayOutput)
}

// A list of types of the assets to receive updates. You must specify either or both of assetNames and assetTypes. Only
// asset updates matching specified assetNames and assetTypes are exported to the feed. For example:
// "compute.googleapis.com/Disk" See https://cloud.google.com/asset-inventory/docs/supported-asset-types for a list of all
// supported asset types.
func (o OrganizationFeedOutput) AssetTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OrganizationFeed) pulumi.StringArrayOutput { return v.AssetTypes }).(pulumi.StringArrayOutput)
}

// The project whose identity will be used when sending messages to the
// destination pubsub topic. It also specifies the project for API
// enablement check, quota, and billing.
func (o OrganizationFeedOutput) BillingProject() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationFeed) pulumi.StringOutput { return v.BillingProject }).(pulumi.StringOutput)
}

// A condition which determines whether an asset update should be published. If specified, an asset will be returned only
// when the expression evaluates to true. When set, expression field must be a valid CEL expression on a TemporalAsset with
// name temporal_asset. Example: a Feed with expression "temporal_asset.deleted == true" will only publish Asset deletions.
// Other fields of condition are optional.
func (o OrganizationFeedOutput) Condition() OrganizationFeedConditionPtrOutput {
	return o.ApplyT(func(v *OrganizationFeed) OrganizationFeedConditionPtrOutput { return v.Condition }).(OrganizationFeedConditionPtrOutput)
}

// Asset content type. If not specified, no content but the asset name and type will be returned. Possible values:
// ["CONTENT_TYPE_UNSPECIFIED", "RESOURCE", "IAM_POLICY", "ORG_POLICY", "OS_INVENTORY", "ACCESS_POLICY"]
func (o OrganizationFeedOutput) ContentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrganizationFeed) pulumi.StringPtrOutput { return v.ContentType }).(pulumi.StringPtrOutput)
}

// This is the client-assigned asset feed identifier and it needs to be unique under a specific parent.
func (o OrganizationFeedOutput) FeedId() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationFeed) pulumi.StringOutput { return v.FeedId }).(pulumi.StringOutput)
}

// Output configuration for asset feed destination.
// Structure is documented below.
func (o OrganizationFeedOutput) FeedOutputConfig() OrganizationFeedFeedOutputConfigOutput {
	return o.ApplyT(func(v *OrganizationFeed) OrganizationFeedFeedOutputConfigOutput { return v.FeedOutputConfig }).(OrganizationFeedFeedOutputConfigOutput)
}

// The format will be organizations/{organization_number}/feeds/{client-assigned_feed_identifier}.
func (o OrganizationFeedOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationFeed) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The organization this feed should be created in.
func (o OrganizationFeedOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationFeed) pulumi.StringOutput { return v.OrgId }).(pulumi.StringOutput)
}

type OrganizationFeedArrayOutput struct{ *pulumi.OutputState }

func (OrganizationFeedArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OrganizationFeed)(nil)).Elem()
}

func (o OrganizationFeedArrayOutput) ToOrganizationFeedArrayOutput() OrganizationFeedArrayOutput {
	return o
}

func (o OrganizationFeedArrayOutput) ToOrganizationFeedArrayOutputWithContext(ctx context.Context) OrganizationFeedArrayOutput {
	return o
}

func (o OrganizationFeedArrayOutput) Index(i pulumi.IntInput) OrganizationFeedOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *OrganizationFeed {
		return vs[0].([]*OrganizationFeed)[vs[1].(int)]
	}).(OrganizationFeedOutput)
}

type OrganizationFeedMapOutput struct{ *pulumi.OutputState }

func (OrganizationFeedMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OrganizationFeed)(nil)).Elem()
}

func (o OrganizationFeedMapOutput) ToOrganizationFeedMapOutput() OrganizationFeedMapOutput {
	return o
}

func (o OrganizationFeedMapOutput) ToOrganizationFeedMapOutputWithContext(ctx context.Context) OrganizationFeedMapOutput {
	return o
}

func (o OrganizationFeedMapOutput) MapIndex(k pulumi.StringInput) OrganizationFeedOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *OrganizationFeed {
		return vs[0].(map[string]*OrganizationFeed)[vs[1].(string)]
	}).(OrganizationFeedOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationFeedInput)(nil)).Elem(), &OrganizationFeed{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationFeedArrayInput)(nil)).Elem(), OrganizationFeedArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationFeedMapInput)(nil)).Elem(), OrganizationFeedMap{})
	pulumi.RegisterOutputType(OrganizationFeedOutput{})
	pulumi.RegisterOutputType(OrganizationFeedArrayOutput{})
	pulumi.RegisterOutputType(OrganizationFeedMapOutput{})
}
