// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package workstations

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/workstations"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := workstations.LookupWorkstationIamPolicy(ctx, &workstations.LookupWorkstationIamPolicyArgs{
//				Project:              pulumi.StringRef(_default.Project),
//				Location:             pulumi.StringRef(_default.Location),
//				WorkstationClusterId: _default.WorkstationClusterId,
//				WorkstationConfigId:  _default.WorkstationConfigId,
//				WorkstationId:        _default.WorkstationId,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupWorkstationIamPolicy(ctx *pulumi.Context, args *LookupWorkstationIamPolicyArgs, opts ...pulumi.InvokeOption) (*LookupWorkstationIamPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupWorkstationIamPolicyResult
	err := ctx.Invoke("gcp:workstations/getWorkstationIamPolicy:getWorkstationIamPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getWorkstationIamPolicy.
type LookupWorkstationIamPolicyArgs struct {
	// The location where the workstation parent resources reside.
	// Used to find the parent resource to bind the IAM policy to. If not specified,
	// the value will be parsed from the identifier of the parent resource. If no location is provided in the parent identifier and no
	// location is specified, it is taken from the provider configuration.
	Location *string `pulumi:"location"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project *string `pulumi:"project"`
	// The ID of the parent workstation cluster.
	// Used to find the parent resource to bind the IAM policy to
	WorkstationClusterId string `pulumi:"workstationClusterId"`
	// The ID of the parent workstation cluster config.
	// Used to find the parent resource to bind the IAM policy to
	WorkstationConfigId string `pulumi:"workstationConfigId"`
	// Used to find the parent resource to bind the IAM policy to
	WorkstationId string `pulumi:"workstationId"`
}

// A collection of values returned by getWorkstationIamPolicy.
type LookupWorkstationIamPolicyResult struct {
	// (Computed) The etag of the IAM policy.
	Etag string `pulumi:"etag"`
	// The provider-assigned unique ID for this managed resource.
	Id       string `pulumi:"id"`
	Location string `pulumi:"location"`
	// (Required only by `workstations.WorkstationIamPolicy`) The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData           string `pulumi:"policyData"`
	Project              string `pulumi:"project"`
	WorkstationClusterId string `pulumi:"workstationClusterId"`
	WorkstationConfigId  string `pulumi:"workstationConfigId"`
	WorkstationId        string `pulumi:"workstationId"`
}

func LookupWorkstationIamPolicyOutput(ctx *pulumi.Context, args LookupWorkstationIamPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupWorkstationIamPolicyResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupWorkstationIamPolicyResultOutput, error) {
			args := v.(LookupWorkstationIamPolicyArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("gcp:workstations/getWorkstationIamPolicy:getWorkstationIamPolicy", args, LookupWorkstationIamPolicyResultOutput{}, options).(LookupWorkstationIamPolicyResultOutput), nil
		}).(LookupWorkstationIamPolicyResultOutput)
}

// A collection of arguments for invoking getWorkstationIamPolicy.
type LookupWorkstationIamPolicyOutputArgs struct {
	// The location where the workstation parent resources reside.
	// Used to find the parent resource to bind the IAM policy to. If not specified,
	// the value will be parsed from the identifier of the parent resource. If no location is provided in the parent identifier and no
	// location is specified, it is taken from the provider configuration.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringPtrInput `pulumi:"project"`
	// The ID of the parent workstation cluster.
	// Used to find the parent resource to bind the IAM policy to
	WorkstationClusterId pulumi.StringInput `pulumi:"workstationClusterId"`
	// The ID of the parent workstation cluster config.
	// Used to find the parent resource to bind the IAM policy to
	WorkstationConfigId pulumi.StringInput `pulumi:"workstationConfigId"`
	// Used to find the parent resource to bind the IAM policy to
	WorkstationId pulumi.StringInput `pulumi:"workstationId"`
}

func (LookupWorkstationIamPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWorkstationIamPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getWorkstationIamPolicy.
type LookupWorkstationIamPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupWorkstationIamPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWorkstationIamPolicyResult)(nil)).Elem()
}

func (o LookupWorkstationIamPolicyResultOutput) ToLookupWorkstationIamPolicyResultOutput() LookupWorkstationIamPolicyResultOutput {
	return o
}

func (o LookupWorkstationIamPolicyResultOutput) ToLookupWorkstationIamPolicyResultOutputWithContext(ctx context.Context) LookupWorkstationIamPolicyResultOutput {
	return o
}

// (Computed) The etag of the IAM policy.
func (o LookupWorkstationIamPolicyResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkstationIamPolicyResult) string { return v.Etag }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupWorkstationIamPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkstationIamPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupWorkstationIamPolicyResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkstationIamPolicyResult) string { return v.Location }).(pulumi.StringOutput)
}

// (Required only by `workstations.WorkstationIamPolicy`) The policy data generated by
// a `organizations.getIAMPolicy` data source.
func (o LookupWorkstationIamPolicyResultOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkstationIamPolicyResult) string { return v.PolicyData }).(pulumi.StringOutput)
}

func (o LookupWorkstationIamPolicyResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkstationIamPolicyResult) string { return v.Project }).(pulumi.StringOutput)
}

func (o LookupWorkstationIamPolicyResultOutput) WorkstationClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkstationIamPolicyResult) string { return v.WorkstationClusterId }).(pulumi.StringOutput)
}

func (o LookupWorkstationIamPolicyResultOutput) WorkstationConfigId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkstationIamPolicyResult) string { return v.WorkstationConfigId }).(pulumi.StringOutput)
}

func (o LookupWorkstationIamPolicyResultOutput) WorkstationId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkstationIamPolicyResult) string { return v.WorkstationId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupWorkstationIamPolicyResultOutput{})
}
