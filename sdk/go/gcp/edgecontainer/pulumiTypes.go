// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package edgecontainer

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type ClusterAuthorization struct {
	// User that will be granted the cluster-admin role on the cluster, providing
	// full access to the cluster. Currently, this is a singular field, but will
	// be expanded to allow multiple admins in the future.
	// Structure is documented below.
	AdminUsers ClusterAuthorizationAdminUsers `pulumi:"adminUsers"`
}

// ClusterAuthorizationInput is an input type that accepts ClusterAuthorizationArgs and ClusterAuthorizationOutput values.
// You can construct a concrete instance of `ClusterAuthorizationInput` via:
//
//	ClusterAuthorizationArgs{...}
type ClusterAuthorizationInput interface {
	pulumi.Input

	ToClusterAuthorizationOutput() ClusterAuthorizationOutput
	ToClusterAuthorizationOutputWithContext(context.Context) ClusterAuthorizationOutput
}

type ClusterAuthorizationArgs struct {
	// User that will be granted the cluster-admin role on the cluster, providing
	// full access to the cluster. Currently, this is a singular field, but will
	// be expanded to allow multiple admins in the future.
	// Structure is documented below.
	AdminUsers ClusterAuthorizationAdminUsersInput `pulumi:"adminUsers"`
}

func (ClusterAuthorizationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAuthorization)(nil)).Elem()
}

func (i ClusterAuthorizationArgs) ToClusterAuthorizationOutput() ClusterAuthorizationOutput {
	return i.ToClusterAuthorizationOutputWithContext(context.Background())
}

func (i ClusterAuthorizationArgs) ToClusterAuthorizationOutputWithContext(ctx context.Context) ClusterAuthorizationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAuthorizationOutput)
}

func (i ClusterAuthorizationArgs) ToClusterAuthorizationPtrOutput() ClusterAuthorizationPtrOutput {
	return i.ToClusterAuthorizationPtrOutputWithContext(context.Background())
}

func (i ClusterAuthorizationArgs) ToClusterAuthorizationPtrOutputWithContext(ctx context.Context) ClusterAuthorizationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAuthorizationOutput).ToClusterAuthorizationPtrOutputWithContext(ctx)
}

// ClusterAuthorizationPtrInput is an input type that accepts ClusterAuthorizationArgs, ClusterAuthorizationPtr and ClusterAuthorizationPtrOutput values.
// You can construct a concrete instance of `ClusterAuthorizationPtrInput` via:
//
//	        ClusterAuthorizationArgs{...}
//
//	or:
//
//	        nil
type ClusterAuthorizationPtrInput interface {
	pulumi.Input

	ToClusterAuthorizationPtrOutput() ClusterAuthorizationPtrOutput
	ToClusterAuthorizationPtrOutputWithContext(context.Context) ClusterAuthorizationPtrOutput
}

type clusterAuthorizationPtrType ClusterAuthorizationArgs

func ClusterAuthorizationPtr(v *ClusterAuthorizationArgs) ClusterAuthorizationPtrInput {
	return (*clusterAuthorizationPtrType)(v)
}

func (*clusterAuthorizationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAuthorization)(nil)).Elem()
}

func (i *clusterAuthorizationPtrType) ToClusterAuthorizationPtrOutput() ClusterAuthorizationPtrOutput {
	return i.ToClusterAuthorizationPtrOutputWithContext(context.Background())
}

func (i *clusterAuthorizationPtrType) ToClusterAuthorizationPtrOutputWithContext(ctx context.Context) ClusterAuthorizationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAuthorizationPtrOutput)
}

type ClusterAuthorizationOutput struct{ *pulumi.OutputState }

func (ClusterAuthorizationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAuthorization)(nil)).Elem()
}

func (o ClusterAuthorizationOutput) ToClusterAuthorizationOutput() ClusterAuthorizationOutput {
	return o
}

func (o ClusterAuthorizationOutput) ToClusterAuthorizationOutputWithContext(ctx context.Context) ClusterAuthorizationOutput {
	return o
}

func (o ClusterAuthorizationOutput) ToClusterAuthorizationPtrOutput() ClusterAuthorizationPtrOutput {
	return o.ToClusterAuthorizationPtrOutputWithContext(context.Background())
}

func (o ClusterAuthorizationOutput) ToClusterAuthorizationPtrOutputWithContext(ctx context.Context) ClusterAuthorizationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterAuthorization) *ClusterAuthorization {
		return &v
	}).(ClusterAuthorizationPtrOutput)
}

// User that will be granted the cluster-admin role on the cluster, providing
// full access to the cluster. Currently, this is a singular field, but will
// be expanded to allow multiple admins in the future.
// Structure is documented below.
func (o ClusterAuthorizationOutput) AdminUsers() ClusterAuthorizationAdminUsersOutput {
	return o.ApplyT(func(v ClusterAuthorization) ClusterAuthorizationAdminUsers { return v.AdminUsers }).(ClusterAuthorizationAdminUsersOutput)
}

type ClusterAuthorizationPtrOutput struct{ *pulumi.OutputState }

func (ClusterAuthorizationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAuthorization)(nil)).Elem()
}

func (o ClusterAuthorizationPtrOutput) ToClusterAuthorizationPtrOutput() ClusterAuthorizationPtrOutput {
	return o
}

func (o ClusterAuthorizationPtrOutput) ToClusterAuthorizationPtrOutputWithContext(ctx context.Context) ClusterAuthorizationPtrOutput {
	return o
}

func (o ClusterAuthorizationPtrOutput) Elem() ClusterAuthorizationOutput {
	return o.ApplyT(func(v *ClusterAuthorization) ClusterAuthorization {
		if v != nil {
			return *v
		}
		var ret ClusterAuthorization
		return ret
	}).(ClusterAuthorizationOutput)
}

// User that will be granted the cluster-admin role on the cluster, providing
// full access to the cluster. Currently, this is a singular field, but will
// be expanded to allow multiple admins in the future.
// Structure is documented below.
func (o ClusterAuthorizationPtrOutput) AdminUsers() ClusterAuthorizationAdminUsersPtrOutput {
	return o.ApplyT(func(v *ClusterAuthorization) *ClusterAuthorizationAdminUsers {
		if v == nil {
			return nil
		}
		return &v.AdminUsers
	}).(ClusterAuthorizationAdminUsersPtrOutput)
}

type ClusterAuthorizationAdminUsers struct {
	// An active Google username.
	//
	// ***
	Username string `pulumi:"username"`
}

// ClusterAuthorizationAdminUsersInput is an input type that accepts ClusterAuthorizationAdminUsersArgs and ClusterAuthorizationAdminUsersOutput values.
// You can construct a concrete instance of `ClusterAuthorizationAdminUsersInput` via:
//
//	ClusterAuthorizationAdminUsersArgs{...}
type ClusterAuthorizationAdminUsersInput interface {
	pulumi.Input

	ToClusterAuthorizationAdminUsersOutput() ClusterAuthorizationAdminUsersOutput
	ToClusterAuthorizationAdminUsersOutputWithContext(context.Context) ClusterAuthorizationAdminUsersOutput
}

type ClusterAuthorizationAdminUsersArgs struct {
	// An active Google username.
	//
	// ***
	Username pulumi.StringInput `pulumi:"username"`
}

func (ClusterAuthorizationAdminUsersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAuthorizationAdminUsers)(nil)).Elem()
}

func (i ClusterAuthorizationAdminUsersArgs) ToClusterAuthorizationAdminUsersOutput() ClusterAuthorizationAdminUsersOutput {
	return i.ToClusterAuthorizationAdminUsersOutputWithContext(context.Background())
}

func (i ClusterAuthorizationAdminUsersArgs) ToClusterAuthorizationAdminUsersOutputWithContext(ctx context.Context) ClusterAuthorizationAdminUsersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAuthorizationAdminUsersOutput)
}

func (i ClusterAuthorizationAdminUsersArgs) ToClusterAuthorizationAdminUsersPtrOutput() ClusterAuthorizationAdminUsersPtrOutput {
	return i.ToClusterAuthorizationAdminUsersPtrOutputWithContext(context.Background())
}

func (i ClusterAuthorizationAdminUsersArgs) ToClusterAuthorizationAdminUsersPtrOutputWithContext(ctx context.Context) ClusterAuthorizationAdminUsersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAuthorizationAdminUsersOutput).ToClusterAuthorizationAdminUsersPtrOutputWithContext(ctx)
}

// ClusterAuthorizationAdminUsersPtrInput is an input type that accepts ClusterAuthorizationAdminUsersArgs, ClusterAuthorizationAdminUsersPtr and ClusterAuthorizationAdminUsersPtrOutput values.
// You can construct a concrete instance of `ClusterAuthorizationAdminUsersPtrInput` via:
//
//	        ClusterAuthorizationAdminUsersArgs{...}
//
//	or:
//
//	        nil
type ClusterAuthorizationAdminUsersPtrInput interface {
	pulumi.Input

	ToClusterAuthorizationAdminUsersPtrOutput() ClusterAuthorizationAdminUsersPtrOutput
	ToClusterAuthorizationAdminUsersPtrOutputWithContext(context.Context) ClusterAuthorizationAdminUsersPtrOutput
}

type clusterAuthorizationAdminUsersPtrType ClusterAuthorizationAdminUsersArgs

func ClusterAuthorizationAdminUsersPtr(v *ClusterAuthorizationAdminUsersArgs) ClusterAuthorizationAdminUsersPtrInput {
	return (*clusterAuthorizationAdminUsersPtrType)(v)
}

func (*clusterAuthorizationAdminUsersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAuthorizationAdminUsers)(nil)).Elem()
}

func (i *clusterAuthorizationAdminUsersPtrType) ToClusterAuthorizationAdminUsersPtrOutput() ClusterAuthorizationAdminUsersPtrOutput {
	return i.ToClusterAuthorizationAdminUsersPtrOutputWithContext(context.Background())
}

func (i *clusterAuthorizationAdminUsersPtrType) ToClusterAuthorizationAdminUsersPtrOutputWithContext(ctx context.Context) ClusterAuthorizationAdminUsersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAuthorizationAdminUsersPtrOutput)
}

type ClusterAuthorizationAdminUsersOutput struct{ *pulumi.OutputState }

func (ClusterAuthorizationAdminUsersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAuthorizationAdminUsers)(nil)).Elem()
}

func (o ClusterAuthorizationAdminUsersOutput) ToClusterAuthorizationAdminUsersOutput() ClusterAuthorizationAdminUsersOutput {
	return o
}

func (o ClusterAuthorizationAdminUsersOutput) ToClusterAuthorizationAdminUsersOutputWithContext(ctx context.Context) ClusterAuthorizationAdminUsersOutput {
	return o
}

func (o ClusterAuthorizationAdminUsersOutput) ToClusterAuthorizationAdminUsersPtrOutput() ClusterAuthorizationAdminUsersPtrOutput {
	return o.ToClusterAuthorizationAdminUsersPtrOutputWithContext(context.Background())
}

func (o ClusterAuthorizationAdminUsersOutput) ToClusterAuthorizationAdminUsersPtrOutputWithContext(ctx context.Context) ClusterAuthorizationAdminUsersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterAuthorizationAdminUsers) *ClusterAuthorizationAdminUsers {
		return &v
	}).(ClusterAuthorizationAdminUsersPtrOutput)
}

// An active Google username.
//
// ***
func (o ClusterAuthorizationAdminUsersOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterAuthorizationAdminUsers) string { return v.Username }).(pulumi.StringOutput)
}

type ClusterAuthorizationAdminUsersPtrOutput struct{ *pulumi.OutputState }

func (ClusterAuthorizationAdminUsersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAuthorizationAdminUsers)(nil)).Elem()
}

func (o ClusterAuthorizationAdminUsersPtrOutput) ToClusterAuthorizationAdminUsersPtrOutput() ClusterAuthorizationAdminUsersPtrOutput {
	return o
}

func (o ClusterAuthorizationAdminUsersPtrOutput) ToClusterAuthorizationAdminUsersPtrOutputWithContext(ctx context.Context) ClusterAuthorizationAdminUsersPtrOutput {
	return o
}

func (o ClusterAuthorizationAdminUsersPtrOutput) Elem() ClusterAuthorizationAdminUsersOutput {
	return o.ApplyT(func(v *ClusterAuthorizationAdminUsers) ClusterAuthorizationAdminUsers {
		if v != nil {
			return *v
		}
		var ret ClusterAuthorizationAdminUsers
		return ret
	}).(ClusterAuthorizationAdminUsersOutput)
}

// An active Google username.
//
// ***
func (o ClusterAuthorizationAdminUsersPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterAuthorizationAdminUsers) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

type ClusterControlPlane struct {
	// Local control plane configuration.
	// Structure is documented below.
	Local *ClusterControlPlaneLocal `pulumi:"local"`
	// Remote control plane configuration.
	// Structure is documented below.
	Remote *ClusterControlPlaneRemote `pulumi:"remote"`
}

// ClusterControlPlaneInput is an input type that accepts ClusterControlPlaneArgs and ClusterControlPlaneOutput values.
// You can construct a concrete instance of `ClusterControlPlaneInput` via:
//
//	ClusterControlPlaneArgs{...}
type ClusterControlPlaneInput interface {
	pulumi.Input

	ToClusterControlPlaneOutput() ClusterControlPlaneOutput
	ToClusterControlPlaneOutputWithContext(context.Context) ClusterControlPlaneOutput
}

type ClusterControlPlaneArgs struct {
	// Local control plane configuration.
	// Structure is documented below.
	Local ClusterControlPlaneLocalPtrInput `pulumi:"local"`
	// Remote control plane configuration.
	// Structure is documented below.
	Remote ClusterControlPlaneRemotePtrInput `pulumi:"remote"`
}

func (ClusterControlPlaneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterControlPlane)(nil)).Elem()
}

func (i ClusterControlPlaneArgs) ToClusterControlPlaneOutput() ClusterControlPlaneOutput {
	return i.ToClusterControlPlaneOutputWithContext(context.Background())
}

func (i ClusterControlPlaneArgs) ToClusterControlPlaneOutputWithContext(ctx context.Context) ClusterControlPlaneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterControlPlaneOutput)
}

func (i ClusterControlPlaneArgs) ToClusterControlPlanePtrOutput() ClusterControlPlanePtrOutput {
	return i.ToClusterControlPlanePtrOutputWithContext(context.Background())
}

func (i ClusterControlPlaneArgs) ToClusterControlPlanePtrOutputWithContext(ctx context.Context) ClusterControlPlanePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterControlPlaneOutput).ToClusterControlPlanePtrOutputWithContext(ctx)
}

// ClusterControlPlanePtrInput is an input type that accepts ClusterControlPlaneArgs, ClusterControlPlanePtr and ClusterControlPlanePtrOutput values.
// You can construct a concrete instance of `ClusterControlPlanePtrInput` via:
//
//	        ClusterControlPlaneArgs{...}
//
//	or:
//
//	        nil
type ClusterControlPlanePtrInput interface {
	pulumi.Input

	ToClusterControlPlanePtrOutput() ClusterControlPlanePtrOutput
	ToClusterControlPlanePtrOutputWithContext(context.Context) ClusterControlPlanePtrOutput
}

type clusterControlPlanePtrType ClusterControlPlaneArgs

func ClusterControlPlanePtr(v *ClusterControlPlaneArgs) ClusterControlPlanePtrInput {
	return (*clusterControlPlanePtrType)(v)
}

func (*clusterControlPlanePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterControlPlane)(nil)).Elem()
}

func (i *clusterControlPlanePtrType) ToClusterControlPlanePtrOutput() ClusterControlPlanePtrOutput {
	return i.ToClusterControlPlanePtrOutputWithContext(context.Background())
}

func (i *clusterControlPlanePtrType) ToClusterControlPlanePtrOutputWithContext(ctx context.Context) ClusterControlPlanePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterControlPlanePtrOutput)
}

type ClusterControlPlaneOutput struct{ *pulumi.OutputState }

func (ClusterControlPlaneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterControlPlane)(nil)).Elem()
}

func (o ClusterControlPlaneOutput) ToClusterControlPlaneOutput() ClusterControlPlaneOutput {
	return o
}

func (o ClusterControlPlaneOutput) ToClusterControlPlaneOutputWithContext(ctx context.Context) ClusterControlPlaneOutput {
	return o
}

func (o ClusterControlPlaneOutput) ToClusterControlPlanePtrOutput() ClusterControlPlanePtrOutput {
	return o.ToClusterControlPlanePtrOutputWithContext(context.Background())
}

func (o ClusterControlPlaneOutput) ToClusterControlPlanePtrOutputWithContext(ctx context.Context) ClusterControlPlanePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterControlPlane) *ClusterControlPlane {
		return &v
	}).(ClusterControlPlanePtrOutput)
}

// Local control plane configuration.
// Structure is documented below.
func (o ClusterControlPlaneOutput) Local() ClusterControlPlaneLocalPtrOutput {
	return o.ApplyT(func(v ClusterControlPlane) *ClusterControlPlaneLocal { return v.Local }).(ClusterControlPlaneLocalPtrOutput)
}

// Remote control plane configuration.
// Structure is documented below.
func (o ClusterControlPlaneOutput) Remote() ClusterControlPlaneRemotePtrOutput {
	return o.ApplyT(func(v ClusterControlPlane) *ClusterControlPlaneRemote { return v.Remote }).(ClusterControlPlaneRemotePtrOutput)
}

type ClusterControlPlanePtrOutput struct{ *pulumi.OutputState }

func (ClusterControlPlanePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterControlPlane)(nil)).Elem()
}

func (o ClusterControlPlanePtrOutput) ToClusterControlPlanePtrOutput() ClusterControlPlanePtrOutput {
	return o
}

func (o ClusterControlPlanePtrOutput) ToClusterControlPlanePtrOutputWithContext(ctx context.Context) ClusterControlPlanePtrOutput {
	return o
}

func (o ClusterControlPlanePtrOutput) Elem() ClusterControlPlaneOutput {
	return o.ApplyT(func(v *ClusterControlPlane) ClusterControlPlane {
		if v != nil {
			return *v
		}
		var ret ClusterControlPlane
		return ret
	}).(ClusterControlPlaneOutput)
}

// Local control plane configuration.
// Structure is documented below.
func (o ClusterControlPlanePtrOutput) Local() ClusterControlPlaneLocalPtrOutput {
	return o.ApplyT(func(v *ClusterControlPlane) *ClusterControlPlaneLocal {
		if v == nil {
			return nil
		}
		return v.Local
	}).(ClusterControlPlaneLocalPtrOutput)
}

// Remote control plane configuration.
// Structure is documented below.
func (o ClusterControlPlanePtrOutput) Remote() ClusterControlPlaneRemotePtrOutput {
	return o.ApplyT(func(v *ClusterControlPlane) *ClusterControlPlaneRemote {
		if v == nil {
			return nil
		}
		return v.Remote
	}).(ClusterControlPlaneRemotePtrOutput)
}

type ClusterControlPlaneEncryption struct {
	// The Cloud KMS CryptoKey e.g.
	// projects/{project}/locations/{location}/keyRings/{keyRing}/cryptoKeys/{cryptoKey}
	// to use for protecting control plane disks. If not specified, a
	// Google-managed key will be used instead.
	KmsKey *string `pulumi:"kmsKey"`
	// (Output)
	// The Cloud KMS CryptoKeyVersion currently in use for protecting control
	// plane disks. Only applicable if kmsKey is set.
	KmsKeyActiveVersion *string `pulumi:"kmsKeyActiveVersion"`
	// (Output)
	// Availability of the Cloud KMS CryptoKey. If not `KEY_AVAILABLE`, then
	// nodes may go offline as they cannot access their local data. This can be
	// caused by a lack of permissions to use the key, or if the key is disabled
	// or deleted.
	KmsKeyState *string `pulumi:"kmsKeyState"`
	// (Output)
	// Error status returned by Cloud KMS when using this key. This field may be
	// populated only if `kmsKeyState` is not `KMS_KEY_STATE_KEY_AVAILABLE`.
	// If populated, this field contains the error status reported by Cloud KMS.
	// Structure is documented below.
	//
	// <a name="nestedControlPlaneEncryptionKmsStatus"></a>The `kmsStatus` block contains:
	KmsStatuses []ClusterControlPlaneEncryptionKmsStatus `pulumi:"kmsStatuses"`
}

// ClusterControlPlaneEncryptionInput is an input type that accepts ClusterControlPlaneEncryptionArgs and ClusterControlPlaneEncryptionOutput values.
// You can construct a concrete instance of `ClusterControlPlaneEncryptionInput` via:
//
//	ClusterControlPlaneEncryptionArgs{...}
type ClusterControlPlaneEncryptionInput interface {
	pulumi.Input

	ToClusterControlPlaneEncryptionOutput() ClusterControlPlaneEncryptionOutput
	ToClusterControlPlaneEncryptionOutputWithContext(context.Context) ClusterControlPlaneEncryptionOutput
}

type ClusterControlPlaneEncryptionArgs struct {
	// The Cloud KMS CryptoKey e.g.
	// projects/{project}/locations/{location}/keyRings/{keyRing}/cryptoKeys/{cryptoKey}
	// to use for protecting control plane disks. If not specified, a
	// Google-managed key will be used instead.
	KmsKey pulumi.StringPtrInput `pulumi:"kmsKey"`
	// (Output)
	// The Cloud KMS CryptoKeyVersion currently in use for protecting control
	// plane disks. Only applicable if kmsKey is set.
	KmsKeyActiveVersion pulumi.StringPtrInput `pulumi:"kmsKeyActiveVersion"`
	// (Output)
	// Availability of the Cloud KMS CryptoKey. If not `KEY_AVAILABLE`, then
	// nodes may go offline as they cannot access their local data. This can be
	// caused by a lack of permissions to use the key, or if the key is disabled
	// or deleted.
	KmsKeyState pulumi.StringPtrInput `pulumi:"kmsKeyState"`
	// (Output)
	// Error status returned by Cloud KMS when using this key. This field may be
	// populated only if `kmsKeyState` is not `KMS_KEY_STATE_KEY_AVAILABLE`.
	// If populated, this field contains the error status reported by Cloud KMS.
	// Structure is documented below.
	//
	// <a name="nestedControlPlaneEncryptionKmsStatus"></a>The `kmsStatus` block contains:
	KmsStatuses ClusterControlPlaneEncryptionKmsStatusArrayInput `pulumi:"kmsStatuses"`
}

func (ClusterControlPlaneEncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterControlPlaneEncryption)(nil)).Elem()
}

func (i ClusterControlPlaneEncryptionArgs) ToClusterControlPlaneEncryptionOutput() ClusterControlPlaneEncryptionOutput {
	return i.ToClusterControlPlaneEncryptionOutputWithContext(context.Background())
}

func (i ClusterControlPlaneEncryptionArgs) ToClusterControlPlaneEncryptionOutputWithContext(ctx context.Context) ClusterControlPlaneEncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterControlPlaneEncryptionOutput)
}

func (i ClusterControlPlaneEncryptionArgs) ToClusterControlPlaneEncryptionPtrOutput() ClusterControlPlaneEncryptionPtrOutput {
	return i.ToClusterControlPlaneEncryptionPtrOutputWithContext(context.Background())
}

func (i ClusterControlPlaneEncryptionArgs) ToClusterControlPlaneEncryptionPtrOutputWithContext(ctx context.Context) ClusterControlPlaneEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterControlPlaneEncryptionOutput).ToClusterControlPlaneEncryptionPtrOutputWithContext(ctx)
}

// ClusterControlPlaneEncryptionPtrInput is an input type that accepts ClusterControlPlaneEncryptionArgs, ClusterControlPlaneEncryptionPtr and ClusterControlPlaneEncryptionPtrOutput values.
// You can construct a concrete instance of `ClusterControlPlaneEncryptionPtrInput` via:
//
//	        ClusterControlPlaneEncryptionArgs{...}
//
//	or:
//
//	        nil
type ClusterControlPlaneEncryptionPtrInput interface {
	pulumi.Input

	ToClusterControlPlaneEncryptionPtrOutput() ClusterControlPlaneEncryptionPtrOutput
	ToClusterControlPlaneEncryptionPtrOutputWithContext(context.Context) ClusterControlPlaneEncryptionPtrOutput
}

type clusterControlPlaneEncryptionPtrType ClusterControlPlaneEncryptionArgs

func ClusterControlPlaneEncryptionPtr(v *ClusterControlPlaneEncryptionArgs) ClusterControlPlaneEncryptionPtrInput {
	return (*clusterControlPlaneEncryptionPtrType)(v)
}

func (*clusterControlPlaneEncryptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterControlPlaneEncryption)(nil)).Elem()
}

func (i *clusterControlPlaneEncryptionPtrType) ToClusterControlPlaneEncryptionPtrOutput() ClusterControlPlaneEncryptionPtrOutput {
	return i.ToClusterControlPlaneEncryptionPtrOutputWithContext(context.Background())
}

func (i *clusterControlPlaneEncryptionPtrType) ToClusterControlPlaneEncryptionPtrOutputWithContext(ctx context.Context) ClusterControlPlaneEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterControlPlaneEncryptionPtrOutput)
}

type ClusterControlPlaneEncryptionOutput struct{ *pulumi.OutputState }

func (ClusterControlPlaneEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterControlPlaneEncryption)(nil)).Elem()
}

func (o ClusterControlPlaneEncryptionOutput) ToClusterControlPlaneEncryptionOutput() ClusterControlPlaneEncryptionOutput {
	return o
}

func (o ClusterControlPlaneEncryptionOutput) ToClusterControlPlaneEncryptionOutputWithContext(ctx context.Context) ClusterControlPlaneEncryptionOutput {
	return o
}

func (o ClusterControlPlaneEncryptionOutput) ToClusterControlPlaneEncryptionPtrOutput() ClusterControlPlaneEncryptionPtrOutput {
	return o.ToClusterControlPlaneEncryptionPtrOutputWithContext(context.Background())
}

func (o ClusterControlPlaneEncryptionOutput) ToClusterControlPlaneEncryptionPtrOutputWithContext(ctx context.Context) ClusterControlPlaneEncryptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterControlPlaneEncryption) *ClusterControlPlaneEncryption {
		return &v
	}).(ClusterControlPlaneEncryptionPtrOutput)
}

// The Cloud KMS CryptoKey e.g.
// projects/{project}/locations/{location}/keyRings/{keyRing}/cryptoKeys/{cryptoKey}
// to use for protecting control plane disks. If not specified, a
// Google-managed key will be used instead.
func (o ClusterControlPlaneEncryptionOutput) KmsKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterControlPlaneEncryption) *string { return v.KmsKey }).(pulumi.StringPtrOutput)
}

// (Output)
// The Cloud KMS CryptoKeyVersion currently in use for protecting control
// plane disks. Only applicable if kmsKey is set.
func (o ClusterControlPlaneEncryptionOutput) KmsKeyActiveVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterControlPlaneEncryption) *string { return v.KmsKeyActiveVersion }).(pulumi.StringPtrOutput)
}

// (Output)
// Availability of the Cloud KMS CryptoKey. If not `KEY_AVAILABLE`, then
// nodes may go offline as they cannot access their local data. This can be
// caused by a lack of permissions to use the key, or if the key is disabled
// or deleted.
func (o ClusterControlPlaneEncryptionOutput) KmsKeyState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterControlPlaneEncryption) *string { return v.KmsKeyState }).(pulumi.StringPtrOutput)
}

// (Output)
// Error status returned by Cloud KMS when using this key. This field may be
// populated only if `kmsKeyState` is not `KMS_KEY_STATE_KEY_AVAILABLE`.
// If populated, this field contains the error status reported by Cloud KMS.
// Structure is documented below.
//
// <a name="nestedControlPlaneEncryptionKmsStatus"></a>The `kmsStatus` block contains:
func (o ClusterControlPlaneEncryptionOutput) KmsStatuses() ClusterControlPlaneEncryptionKmsStatusArrayOutput {
	return o.ApplyT(func(v ClusterControlPlaneEncryption) []ClusterControlPlaneEncryptionKmsStatus { return v.KmsStatuses }).(ClusterControlPlaneEncryptionKmsStatusArrayOutput)
}

type ClusterControlPlaneEncryptionPtrOutput struct{ *pulumi.OutputState }

func (ClusterControlPlaneEncryptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterControlPlaneEncryption)(nil)).Elem()
}

func (o ClusterControlPlaneEncryptionPtrOutput) ToClusterControlPlaneEncryptionPtrOutput() ClusterControlPlaneEncryptionPtrOutput {
	return o
}

func (o ClusterControlPlaneEncryptionPtrOutput) ToClusterControlPlaneEncryptionPtrOutputWithContext(ctx context.Context) ClusterControlPlaneEncryptionPtrOutput {
	return o
}

func (o ClusterControlPlaneEncryptionPtrOutput) Elem() ClusterControlPlaneEncryptionOutput {
	return o.ApplyT(func(v *ClusterControlPlaneEncryption) ClusterControlPlaneEncryption {
		if v != nil {
			return *v
		}
		var ret ClusterControlPlaneEncryption
		return ret
	}).(ClusterControlPlaneEncryptionOutput)
}

// The Cloud KMS CryptoKey e.g.
// projects/{project}/locations/{location}/keyRings/{keyRing}/cryptoKeys/{cryptoKey}
// to use for protecting control plane disks. If not specified, a
// Google-managed key will be used instead.
func (o ClusterControlPlaneEncryptionPtrOutput) KmsKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterControlPlaneEncryption) *string {
		if v == nil {
			return nil
		}
		return v.KmsKey
	}).(pulumi.StringPtrOutput)
}

// (Output)
// The Cloud KMS CryptoKeyVersion currently in use for protecting control
// plane disks. Only applicable if kmsKey is set.
func (o ClusterControlPlaneEncryptionPtrOutput) KmsKeyActiveVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterControlPlaneEncryption) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyActiveVersion
	}).(pulumi.StringPtrOutput)
}

// (Output)
// Availability of the Cloud KMS CryptoKey. If not `KEY_AVAILABLE`, then
// nodes may go offline as they cannot access their local data. This can be
// caused by a lack of permissions to use the key, or if the key is disabled
// or deleted.
func (o ClusterControlPlaneEncryptionPtrOutput) KmsKeyState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterControlPlaneEncryption) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyState
	}).(pulumi.StringPtrOutput)
}

// (Output)
// Error status returned by Cloud KMS when using this key. This field may be
// populated only if `kmsKeyState` is not `KMS_KEY_STATE_KEY_AVAILABLE`.
// If populated, this field contains the error status reported by Cloud KMS.
// Structure is documented below.
//
// <a name="nestedControlPlaneEncryptionKmsStatus"></a>The `kmsStatus` block contains:
func (o ClusterControlPlaneEncryptionPtrOutput) KmsStatuses() ClusterControlPlaneEncryptionKmsStatusArrayOutput {
	return o.ApplyT(func(v *ClusterControlPlaneEncryption) []ClusterControlPlaneEncryptionKmsStatus {
		if v == nil {
			return nil
		}
		return v.KmsStatuses
	}).(ClusterControlPlaneEncryptionKmsStatusArrayOutput)
}

type ClusterControlPlaneEncryptionKmsStatus struct {
	// The status code, which should be an enum value of google.rpc.Code.
	Code *int `pulumi:"code"`
	// A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
	Message *string `pulumi:"message"`
}

// ClusterControlPlaneEncryptionKmsStatusInput is an input type that accepts ClusterControlPlaneEncryptionKmsStatusArgs and ClusterControlPlaneEncryptionKmsStatusOutput values.
// You can construct a concrete instance of `ClusterControlPlaneEncryptionKmsStatusInput` via:
//
//	ClusterControlPlaneEncryptionKmsStatusArgs{...}
type ClusterControlPlaneEncryptionKmsStatusInput interface {
	pulumi.Input

	ToClusterControlPlaneEncryptionKmsStatusOutput() ClusterControlPlaneEncryptionKmsStatusOutput
	ToClusterControlPlaneEncryptionKmsStatusOutputWithContext(context.Context) ClusterControlPlaneEncryptionKmsStatusOutput
}

type ClusterControlPlaneEncryptionKmsStatusArgs struct {
	// The status code, which should be an enum value of google.rpc.Code.
	Code pulumi.IntPtrInput `pulumi:"code"`
	// A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
	Message pulumi.StringPtrInput `pulumi:"message"`
}

func (ClusterControlPlaneEncryptionKmsStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterControlPlaneEncryptionKmsStatus)(nil)).Elem()
}

func (i ClusterControlPlaneEncryptionKmsStatusArgs) ToClusterControlPlaneEncryptionKmsStatusOutput() ClusterControlPlaneEncryptionKmsStatusOutput {
	return i.ToClusterControlPlaneEncryptionKmsStatusOutputWithContext(context.Background())
}

func (i ClusterControlPlaneEncryptionKmsStatusArgs) ToClusterControlPlaneEncryptionKmsStatusOutputWithContext(ctx context.Context) ClusterControlPlaneEncryptionKmsStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterControlPlaneEncryptionKmsStatusOutput)
}

// ClusterControlPlaneEncryptionKmsStatusArrayInput is an input type that accepts ClusterControlPlaneEncryptionKmsStatusArray and ClusterControlPlaneEncryptionKmsStatusArrayOutput values.
// You can construct a concrete instance of `ClusterControlPlaneEncryptionKmsStatusArrayInput` via:
//
//	ClusterControlPlaneEncryptionKmsStatusArray{ ClusterControlPlaneEncryptionKmsStatusArgs{...} }
type ClusterControlPlaneEncryptionKmsStatusArrayInput interface {
	pulumi.Input

	ToClusterControlPlaneEncryptionKmsStatusArrayOutput() ClusterControlPlaneEncryptionKmsStatusArrayOutput
	ToClusterControlPlaneEncryptionKmsStatusArrayOutputWithContext(context.Context) ClusterControlPlaneEncryptionKmsStatusArrayOutput
}

type ClusterControlPlaneEncryptionKmsStatusArray []ClusterControlPlaneEncryptionKmsStatusInput

func (ClusterControlPlaneEncryptionKmsStatusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterControlPlaneEncryptionKmsStatus)(nil)).Elem()
}

func (i ClusterControlPlaneEncryptionKmsStatusArray) ToClusterControlPlaneEncryptionKmsStatusArrayOutput() ClusterControlPlaneEncryptionKmsStatusArrayOutput {
	return i.ToClusterControlPlaneEncryptionKmsStatusArrayOutputWithContext(context.Background())
}

func (i ClusterControlPlaneEncryptionKmsStatusArray) ToClusterControlPlaneEncryptionKmsStatusArrayOutputWithContext(ctx context.Context) ClusterControlPlaneEncryptionKmsStatusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterControlPlaneEncryptionKmsStatusArrayOutput)
}

type ClusterControlPlaneEncryptionKmsStatusOutput struct{ *pulumi.OutputState }

func (ClusterControlPlaneEncryptionKmsStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterControlPlaneEncryptionKmsStatus)(nil)).Elem()
}

func (o ClusterControlPlaneEncryptionKmsStatusOutput) ToClusterControlPlaneEncryptionKmsStatusOutput() ClusterControlPlaneEncryptionKmsStatusOutput {
	return o
}

func (o ClusterControlPlaneEncryptionKmsStatusOutput) ToClusterControlPlaneEncryptionKmsStatusOutputWithContext(ctx context.Context) ClusterControlPlaneEncryptionKmsStatusOutput {
	return o
}

// The status code, which should be an enum value of google.rpc.Code.
func (o ClusterControlPlaneEncryptionKmsStatusOutput) Code() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterControlPlaneEncryptionKmsStatus) *int { return v.Code }).(pulumi.IntPtrOutput)
}

// A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
func (o ClusterControlPlaneEncryptionKmsStatusOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterControlPlaneEncryptionKmsStatus) *string { return v.Message }).(pulumi.StringPtrOutput)
}

type ClusterControlPlaneEncryptionKmsStatusArrayOutput struct{ *pulumi.OutputState }

func (ClusterControlPlaneEncryptionKmsStatusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterControlPlaneEncryptionKmsStatus)(nil)).Elem()
}

func (o ClusterControlPlaneEncryptionKmsStatusArrayOutput) ToClusterControlPlaneEncryptionKmsStatusArrayOutput() ClusterControlPlaneEncryptionKmsStatusArrayOutput {
	return o
}

func (o ClusterControlPlaneEncryptionKmsStatusArrayOutput) ToClusterControlPlaneEncryptionKmsStatusArrayOutputWithContext(ctx context.Context) ClusterControlPlaneEncryptionKmsStatusArrayOutput {
	return o
}

func (o ClusterControlPlaneEncryptionKmsStatusArrayOutput) Index(i pulumi.IntInput) ClusterControlPlaneEncryptionKmsStatusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterControlPlaneEncryptionKmsStatus {
		return vs[0].([]ClusterControlPlaneEncryptionKmsStatus)[vs[1].(int)]
	}).(ClusterControlPlaneEncryptionKmsStatusOutput)
}

type ClusterControlPlaneLocal struct {
	// Only machines matching this filter will be allowed to host control
	// plane nodes. The filtering language accepts strings like "name=<name>",
	// and is documented here: [AIP-160](https://google.aip.dev/160).
	MachineFilter *string `pulumi:"machineFilter"`
	// The number of nodes to serve as replicas of the Control Plane.
	// Only 1 and 3 are supported.
	NodeCount *int `pulumi:"nodeCount"`
	// Name of the Google Distributed Cloud Edge zones where this node pool
	// will be created. For example: `us-central1-edge-customer-a`.
	NodeLocation *string `pulumi:"nodeLocation"`
	// Policy configuration about how user applications are deployed.
	// Possible values are: `SHARED_DEPLOYMENT_POLICY_UNSPECIFIED`, `ALLOWED`, `DISALLOWED`.
	SharedDeploymentPolicy *string `pulumi:"sharedDeploymentPolicy"`
}

// ClusterControlPlaneLocalInput is an input type that accepts ClusterControlPlaneLocalArgs and ClusterControlPlaneLocalOutput values.
// You can construct a concrete instance of `ClusterControlPlaneLocalInput` via:
//
//	ClusterControlPlaneLocalArgs{...}
type ClusterControlPlaneLocalInput interface {
	pulumi.Input

	ToClusterControlPlaneLocalOutput() ClusterControlPlaneLocalOutput
	ToClusterControlPlaneLocalOutputWithContext(context.Context) ClusterControlPlaneLocalOutput
}

type ClusterControlPlaneLocalArgs struct {
	// Only machines matching this filter will be allowed to host control
	// plane nodes. The filtering language accepts strings like "name=<name>",
	// and is documented here: [AIP-160](https://google.aip.dev/160).
	MachineFilter pulumi.StringPtrInput `pulumi:"machineFilter"`
	// The number of nodes to serve as replicas of the Control Plane.
	// Only 1 and 3 are supported.
	NodeCount pulumi.IntPtrInput `pulumi:"nodeCount"`
	// Name of the Google Distributed Cloud Edge zones where this node pool
	// will be created. For example: `us-central1-edge-customer-a`.
	NodeLocation pulumi.StringPtrInput `pulumi:"nodeLocation"`
	// Policy configuration about how user applications are deployed.
	// Possible values are: `SHARED_DEPLOYMENT_POLICY_UNSPECIFIED`, `ALLOWED`, `DISALLOWED`.
	SharedDeploymentPolicy pulumi.StringPtrInput `pulumi:"sharedDeploymentPolicy"`
}

func (ClusterControlPlaneLocalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterControlPlaneLocal)(nil)).Elem()
}

func (i ClusterControlPlaneLocalArgs) ToClusterControlPlaneLocalOutput() ClusterControlPlaneLocalOutput {
	return i.ToClusterControlPlaneLocalOutputWithContext(context.Background())
}

func (i ClusterControlPlaneLocalArgs) ToClusterControlPlaneLocalOutputWithContext(ctx context.Context) ClusterControlPlaneLocalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterControlPlaneLocalOutput)
}

func (i ClusterControlPlaneLocalArgs) ToClusterControlPlaneLocalPtrOutput() ClusterControlPlaneLocalPtrOutput {
	return i.ToClusterControlPlaneLocalPtrOutputWithContext(context.Background())
}

func (i ClusterControlPlaneLocalArgs) ToClusterControlPlaneLocalPtrOutputWithContext(ctx context.Context) ClusterControlPlaneLocalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterControlPlaneLocalOutput).ToClusterControlPlaneLocalPtrOutputWithContext(ctx)
}

// ClusterControlPlaneLocalPtrInput is an input type that accepts ClusterControlPlaneLocalArgs, ClusterControlPlaneLocalPtr and ClusterControlPlaneLocalPtrOutput values.
// You can construct a concrete instance of `ClusterControlPlaneLocalPtrInput` via:
//
//	        ClusterControlPlaneLocalArgs{...}
//
//	or:
//
//	        nil
type ClusterControlPlaneLocalPtrInput interface {
	pulumi.Input

	ToClusterControlPlaneLocalPtrOutput() ClusterControlPlaneLocalPtrOutput
	ToClusterControlPlaneLocalPtrOutputWithContext(context.Context) ClusterControlPlaneLocalPtrOutput
}

type clusterControlPlaneLocalPtrType ClusterControlPlaneLocalArgs

func ClusterControlPlaneLocalPtr(v *ClusterControlPlaneLocalArgs) ClusterControlPlaneLocalPtrInput {
	return (*clusterControlPlaneLocalPtrType)(v)
}

func (*clusterControlPlaneLocalPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterControlPlaneLocal)(nil)).Elem()
}

func (i *clusterControlPlaneLocalPtrType) ToClusterControlPlaneLocalPtrOutput() ClusterControlPlaneLocalPtrOutput {
	return i.ToClusterControlPlaneLocalPtrOutputWithContext(context.Background())
}

func (i *clusterControlPlaneLocalPtrType) ToClusterControlPlaneLocalPtrOutputWithContext(ctx context.Context) ClusterControlPlaneLocalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterControlPlaneLocalPtrOutput)
}

type ClusterControlPlaneLocalOutput struct{ *pulumi.OutputState }

func (ClusterControlPlaneLocalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterControlPlaneLocal)(nil)).Elem()
}

func (o ClusterControlPlaneLocalOutput) ToClusterControlPlaneLocalOutput() ClusterControlPlaneLocalOutput {
	return o
}

func (o ClusterControlPlaneLocalOutput) ToClusterControlPlaneLocalOutputWithContext(ctx context.Context) ClusterControlPlaneLocalOutput {
	return o
}

func (o ClusterControlPlaneLocalOutput) ToClusterControlPlaneLocalPtrOutput() ClusterControlPlaneLocalPtrOutput {
	return o.ToClusterControlPlaneLocalPtrOutputWithContext(context.Background())
}

func (o ClusterControlPlaneLocalOutput) ToClusterControlPlaneLocalPtrOutputWithContext(ctx context.Context) ClusterControlPlaneLocalPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterControlPlaneLocal) *ClusterControlPlaneLocal {
		return &v
	}).(ClusterControlPlaneLocalPtrOutput)
}

// Only machines matching this filter will be allowed to host control
// plane nodes. The filtering language accepts strings like "name=<name>",
// and is documented here: [AIP-160](https://google.aip.dev/160).
func (o ClusterControlPlaneLocalOutput) MachineFilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterControlPlaneLocal) *string { return v.MachineFilter }).(pulumi.StringPtrOutput)
}

// The number of nodes to serve as replicas of the Control Plane.
// Only 1 and 3 are supported.
func (o ClusterControlPlaneLocalOutput) NodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterControlPlaneLocal) *int { return v.NodeCount }).(pulumi.IntPtrOutput)
}

// Name of the Google Distributed Cloud Edge zones where this node pool
// will be created. For example: `us-central1-edge-customer-a`.
func (o ClusterControlPlaneLocalOutput) NodeLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterControlPlaneLocal) *string { return v.NodeLocation }).(pulumi.StringPtrOutput)
}

// Policy configuration about how user applications are deployed.
// Possible values are: `SHARED_DEPLOYMENT_POLICY_UNSPECIFIED`, `ALLOWED`, `DISALLOWED`.
func (o ClusterControlPlaneLocalOutput) SharedDeploymentPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterControlPlaneLocal) *string { return v.SharedDeploymentPolicy }).(pulumi.StringPtrOutput)
}

type ClusterControlPlaneLocalPtrOutput struct{ *pulumi.OutputState }

func (ClusterControlPlaneLocalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterControlPlaneLocal)(nil)).Elem()
}

func (o ClusterControlPlaneLocalPtrOutput) ToClusterControlPlaneLocalPtrOutput() ClusterControlPlaneLocalPtrOutput {
	return o
}

func (o ClusterControlPlaneLocalPtrOutput) ToClusterControlPlaneLocalPtrOutputWithContext(ctx context.Context) ClusterControlPlaneLocalPtrOutput {
	return o
}

func (o ClusterControlPlaneLocalPtrOutput) Elem() ClusterControlPlaneLocalOutput {
	return o.ApplyT(func(v *ClusterControlPlaneLocal) ClusterControlPlaneLocal {
		if v != nil {
			return *v
		}
		var ret ClusterControlPlaneLocal
		return ret
	}).(ClusterControlPlaneLocalOutput)
}

// Only machines matching this filter will be allowed to host control
// plane nodes. The filtering language accepts strings like "name=<name>",
// and is documented here: [AIP-160](https://google.aip.dev/160).
func (o ClusterControlPlaneLocalPtrOutput) MachineFilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterControlPlaneLocal) *string {
		if v == nil {
			return nil
		}
		return v.MachineFilter
	}).(pulumi.StringPtrOutput)
}

// The number of nodes to serve as replicas of the Control Plane.
// Only 1 and 3 are supported.
func (o ClusterControlPlaneLocalPtrOutput) NodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterControlPlaneLocal) *int {
		if v == nil {
			return nil
		}
		return v.NodeCount
	}).(pulumi.IntPtrOutput)
}

// Name of the Google Distributed Cloud Edge zones where this node pool
// will be created. For example: `us-central1-edge-customer-a`.
func (o ClusterControlPlaneLocalPtrOutput) NodeLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterControlPlaneLocal) *string {
		if v == nil {
			return nil
		}
		return v.NodeLocation
	}).(pulumi.StringPtrOutput)
}

// Policy configuration about how user applications are deployed.
// Possible values are: `SHARED_DEPLOYMENT_POLICY_UNSPECIFIED`, `ALLOWED`, `DISALLOWED`.
func (o ClusterControlPlaneLocalPtrOutput) SharedDeploymentPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterControlPlaneLocal) *string {
		if v == nil {
			return nil
		}
		return v.SharedDeploymentPolicy
	}).(pulumi.StringPtrOutput)
}

type ClusterControlPlaneRemote struct {
	// Name of the Google Distributed Cloud Edge zones where this node pool
	// will be created. For example: `us-central1-edge-customer-a`.
	NodeLocation *string `pulumi:"nodeLocation"`
}

// ClusterControlPlaneRemoteInput is an input type that accepts ClusterControlPlaneRemoteArgs and ClusterControlPlaneRemoteOutput values.
// You can construct a concrete instance of `ClusterControlPlaneRemoteInput` via:
//
//	ClusterControlPlaneRemoteArgs{...}
type ClusterControlPlaneRemoteInput interface {
	pulumi.Input

	ToClusterControlPlaneRemoteOutput() ClusterControlPlaneRemoteOutput
	ToClusterControlPlaneRemoteOutputWithContext(context.Context) ClusterControlPlaneRemoteOutput
}

type ClusterControlPlaneRemoteArgs struct {
	// Name of the Google Distributed Cloud Edge zones where this node pool
	// will be created. For example: `us-central1-edge-customer-a`.
	NodeLocation pulumi.StringPtrInput `pulumi:"nodeLocation"`
}

func (ClusterControlPlaneRemoteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterControlPlaneRemote)(nil)).Elem()
}

func (i ClusterControlPlaneRemoteArgs) ToClusterControlPlaneRemoteOutput() ClusterControlPlaneRemoteOutput {
	return i.ToClusterControlPlaneRemoteOutputWithContext(context.Background())
}

func (i ClusterControlPlaneRemoteArgs) ToClusterControlPlaneRemoteOutputWithContext(ctx context.Context) ClusterControlPlaneRemoteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterControlPlaneRemoteOutput)
}

func (i ClusterControlPlaneRemoteArgs) ToClusterControlPlaneRemotePtrOutput() ClusterControlPlaneRemotePtrOutput {
	return i.ToClusterControlPlaneRemotePtrOutputWithContext(context.Background())
}

func (i ClusterControlPlaneRemoteArgs) ToClusterControlPlaneRemotePtrOutputWithContext(ctx context.Context) ClusterControlPlaneRemotePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterControlPlaneRemoteOutput).ToClusterControlPlaneRemotePtrOutputWithContext(ctx)
}

// ClusterControlPlaneRemotePtrInput is an input type that accepts ClusterControlPlaneRemoteArgs, ClusterControlPlaneRemotePtr and ClusterControlPlaneRemotePtrOutput values.
// You can construct a concrete instance of `ClusterControlPlaneRemotePtrInput` via:
//
//	        ClusterControlPlaneRemoteArgs{...}
//
//	or:
//
//	        nil
type ClusterControlPlaneRemotePtrInput interface {
	pulumi.Input

	ToClusterControlPlaneRemotePtrOutput() ClusterControlPlaneRemotePtrOutput
	ToClusterControlPlaneRemotePtrOutputWithContext(context.Context) ClusterControlPlaneRemotePtrOutput
}

type clusterControlPlaneRemotePtrType ClusterControlPlaneRemoteArgs

func ClusterControlPlaneRemotePtr(v *ClusterControlPlaneRemoteArgs) ClusterControlPlaneRemotePtrInput {
	return (*clusterControlPlaneRemotePtrType)(v)
}

func (*clusterControlPlaneRemotePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterControlPlaneRemote)(nil)).Elem()
}

func (i *clusterControlPlaneRemotePtrType) ToClusterControlPlaneRemotePtrOutput() ClusterControlPlaneRemotePtrOutput {
	return i.ToClusterControlPlaneRemotePtrOutputWithContext(context.Background())
}

func (i *clusterControlPlaneRemotePtrType) ToClusterControlPlaneRemotePtrOutputWithContext(ctx context.Context) ClusterControlPlaneRemotePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterControlPlaneRemotePtrOutput)
}

type ClusterControlPlaneRemoteOutput struct{ *pulumi.OutputState }

func (ClusterControlPlaneRemoteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterControlPlaneRemote)(nil)).Elem()
}

func (o ClusterControlPlaneRemoteOutput) ToClusterControlPlaneRemoteOutput() ClusterControlPlaneRemoteOutput {
	return o
}

func (o ClusterControlPlaneRemoteOutput) ToClusterControlPlaneRemoteOutputWithContext(ctx context.Context) ClusterControlPlaneRemoteOutput {
	return o
}

func (o ClusterControlPlaneRemoteOutput) ToClusterControlPlaneRemotePtrOutput() ClusterControlPlaneRemotePtrOutput {
	return o.ToClusterControlPlaneRemotePtrOutputWithContext(context.Background())
}

func (o ClusterControlPlaneRemoteOutput) ToClusterControlPlaneRemotePtrOutputWithContext(ctx context.Context) ClusterControlPlaneRemotePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterControlPlaneRemote) *ClusterControlPlaneRemote {
		return &v
	}).(ClusterControlPlaneRemotePtrOutput)
}

// Name of the Google Distributed Cloud Edge zones where this node pool
// will be created. For example: `us-central1-edge-customer-a`.
func (o ClusterControlPlaneRemoteOutput) NodeLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterControlPlaneRemote) *string { return v.NodeLocation }).(pulumi.StringPtrOutput)
}

type ClusterControlPlaneRemotePtrOutput struct{ *pulumi.OutputState }

func (ClusterControlPlaneRemotePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterControlPlaneRemote)(nil)).Elem()
}

func (o ClusterControlPlaneRemotePtrOutput) ToClusterControlPlaneRemotePtrOutput() ClusterControlPlaneRemotePtrOutput {
	return o
}

func (o ClusterControlPlaneRemotePtrOutput) ToClusterControlPlaneRemotePtrOutputWithContext(ctx context.Context) ClusterControlPlaneRemotePtrOutput {
	return o
}

func (o ClusterControlPlaneRemotePtrOutput) Elem() ClusterControlPlaneRemoteOutput {
	return o.ApplyT(func(v *ClusterControlPlaneRemote) ClusterControlPlaneRemote {
		if v != nil {
			return *v
		}
		var ret ClusterControlPlaneRemote
		return ret
	}).(ClusterControlPlaneRemoteOutput)
}

// Name of the Google Distributed Cloud Edge zones where this node pool
// will be created. For example: `us-central1-edge-customer-a`.
func (o ClusterControlPlaneRemotePtrOutput) NodeLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterControlPlaneRemote) *string {
		if v == nil {
			return nil
		}
		return v.NodeLocation
	}).(pulumi.StringPtrOutput)
}

type ClusterFleet struct {
	// (Output)
	// The name of the managed Hub Membership resource associated to this cluster.
	// Membership names are formatted as
	// `projects/<project-number>/locations/global/membership/<cluster-id>`.
	Membership *string `pulumi:"membership"`
	// The name of the Fleet host project where this cluster will be registered.
	// Project names are formatted as
	// `projects/<project-number>`.
	Project string `pulumi:"project"`
}

// ClusterFleetInput is an input type that accepts ClusterFleetArgs and ClusterFleetOutput values.
// You can construct a concrete instance of `ClusterFleetInput` via:
//
//	ClusterFleetArgs{...}
type ClusterFleetInput interface {
	pulumi.Input

	ToClusterFleetOutput() ClusterFleetOutput
	ToClusterFleetOutputWithContext(context.Context) ClusterFleetOutput
}

type ClusterFleetArgs struct {
	// (Output)
	// The name of the managed Hub Membership resource associated to this cluster.
	// Membership names are formatted as
	// `projects/<project-number>/locations/global/membership/<cluster-id>`.
	Membership pulumi.StringPtrInput `pulumi:"membership"`
	// The name of the Fleet host project where this cluster will be registered.
	// Project names are formatted as
	// `projects/<project-number>`.
	Project pulumi.StringInput `pulumi:"project"`
}

func (ClusterFleetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterFleet)(nil)).Elem()
}

func (i ClusterFleetArgs) ToClusterFleetOutput() ClusterFleetOutput {
	return i.ToClusterFleetOutputWithContext(context.Background())
}

func (i ClusterFleetArgs) ToClusterFleetOutputWithContext(ctx context.Context) ClusterFleetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterFleetOutput)
}

func (i ClusterFleetArgs) ToClusterFleetPtrOutput() ClusterFleetPtrOutput {
	return i.ToClusterFleetPtrOutputWithContext(context.Background())
}

func (i ClusterFleetArgs) ToClusterFleetPtrOutputWithContext(ctx context.Context) ClusterFleetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterFleetOutput).ToClusterFleetPtrOutputWithContext(ctx)
}

// ClusterFleetPtrInput is an input type that accepts ClusterFleetArgs, ClusterFleetPtr and ClusterFleetPtrOutput values.
// You can construct a concrete instance of `ClusterFleetPtrInput` via:
//
//	        ClusterFleetArgs{...}
//
//	or:
//
//	        nil
type ClusterFleetPtrInput interface {
	pulumi.Input

	ToClusterFleetPtrOutput() ClusterFleetPtrOutput
	ToClusterFleetPtrOutputWithContext(context.Context) ClusterFleetPtrOutput
}

type clusterFleetPtrType ClusterFleetArgs

func ClusterFleetPtr(v *ClusterFleetArgs) ClusterFleetPtrInput {
	return (*clusterFleetPtrType)(v)
}

func (*clusterFleetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterFleet)(nil)).Elem()
}

func (i *clusterFleetPtrType) ToClusterFleetPtrOutput() ClusterFleetPtrOutput {
	return i.ToClusterFleetPtrOutputWithContext(context.Background())
}

func (i *clusterFleetPtrType) ToClusterFleetPtrOutputWithContext(ctx context.Context) ClusterFleetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterFleetPtrOutput)
}

type ClusterFleetOutput struct{ *pulumi.OutputState }

func (ClusterFleetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterFleet)(nil)).Elem()
}

func (o ClusterFleetOutput) ToClusterFleetOutput() ClusterFleetOutput {
	return o
}

func (o ClusterFleetOutput) ToClusterFleetOutputWithContext(ctx context.Context) ClusterFleetOutput {
	return o
}

func (o ClusterFleetOutput) ToClusterFleetPtrOutput() ClusterFleetPtrOutput {
	return o.ToClusterFleetPtrOutputWithContext(context.Background())
}

func (o ClusterFleetOutput) ToClusterFleetPtrOutputWithContext(ctx context.Context) ClusterFleetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterFleet) *ClusterFleet {
		return &v
	}).(ClusterFleetPtrOutput)
}

// (Output)
// The name of the managed Hub Membership resource associated to this cluster.
// Membership names are formatted as
// `projects/<project-number>/locations/global/membership/<cluster-id>`.
func (o ClusterFleetOutput) Membership() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterFleet) *string { return v.Membership }).(pulumi.StringPtrOutput)
}

// The name of the Fleet host project where this cluster will be registered.
// Project names are formatted as
// `projects/<project-number>`.
func (o ClusterFleetOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterFleet) string { return v.Project }).(pulumi.StringOutput)
}

type ClusterFleetPtrOutput struct{ *pulumi.OutputState }

func (ClusterFleetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterFleet)(nil)).Elem()
}

func (o ClusterFleetPtrOutput) ToClusterFleetPtrOutput() ClusterFleetPtrOutput {
	return o
}

func (o ClusterFleetPtrOutput) ToClusterFleetPtrOutputWithContext(ctx context.Context) ClusterFleetPtrOutput {
	return o
}

func (o ClusterFleetPtrOutput) Elem() ClusterFleetOutput {
	return o.ApplyT(func(v *ClusterFleet) ClusterFleet {
		if v != nil {
			return *v
		}
		var ret ClusterFleet
		return ret
	}).(ClusterFleetOutput)
}

// (Output)
// The name of the managed Hub Membership resource associated to this cluster.
// Membership names are formatted as
// `projects/<project-number>/locations/global/membership/<cluster-id>`.
func (o ClusterFleetPtrOutput) Membership() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterFleet) *string {
		if v == nil {
			return nil
		}
		return v.Membership
	}).(pulumi.StringPtrOutput)
}

// The name of the Fleet host project where this cluster will be registered.
// Project names are formatted as
// `projects/<project-number>`.
func (o ClusterFleetPtrOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterFleet) *string {
		if v == nil {
			return nil
		}
		return &v.Project
	}).(pulumi.StringPtrOutput)
}

type ClusterMaintenanceEvent struct {
	// (Output)
	// The time when the maintenance event request was created.
	CreateTime *string `pulumi:"createTime"`
	// (Output)
	// The time when the maintenance event ended, either successfully or not. If
	// the maintenance event is split into multiple maintenance windows,
	// endTime is only updated when the whole flow ends.
	EndTime *string `pulumi:"endTime"`
	// (Output)
	// The operation for running the maintenance event. Specified in the format
	// projects/*/locations/*/operations/*. If the maintenance event is split
	// into multiple operations (e.g. due to maintenance windows), the latest
	// one is recorded.
	Operation *string `pulumi:"operation"`
	// (Output)
	// The schedule of the maintenance event.
	Schedule *string `pulumi:"schedule"`
	// (Output)
	// The time when the maintenance event started.
	StartTime *string `pulumi:"startTime"`
	// (Output)
	// Indicates the maintenance event state.
	State *string `pulumi:"state"`
	// (Output)
	// The target version of the cluster.
	TargetVersion *string `pulumi:"targetVersion"`
	// (Output)
	// Indicates the maintenance event type.
	Type *string `pulumi:"type"`
	// (Output)
	// The time when the maintenance event message was updated.
	UpdateTime *string `pulumi:"updateTime"`
	// (Output)
	// UUID of the maintenance event.
	Uuid *string `pulumi:"uuid"`
}

// ClusterMaintenanceEventInput is an input type that accepts ClusterMaintenanceEventArgs and ClusterMaintenanceEventOutput values.
// You can construct a concrete instance of `ClusterMaintenanceEventInput` via:
//
//	ClusterMaintenanceEventArgs{...}
type ClusterMaintenanceEventInput interface {
	pulumi.Input

	ToClusterMaintenanceEventOutput() ClusterMaintenanceEventOutput
	ToClusterMaintenanceEventOutputWithContext(context.Context) ClusterMaintenanceEventOutput
}

type ClusterMaintenanceEventArgs struct {
	// (Output)
	// The time when the maintenance event request was created.
	CreateTime pulumi.StringPtrInput `pulumi:"createTime"`
	// (Output)
	// The time when the maintenance event ended, either successfully or not. If
	// the maintenance event is split into multiple maintenance windows,
	// endTime is only updated when the whole flow ends.
	EndTime pulumi.StringPtrInput `pulumi:"endTime"`
	// (Output)
	// The operation for running the maintenance event. Specified in the format
	// projects/*/locations/*/operations/*. If the maintenance event is split
	// into multiple operations (e.g. due to maintenance windows), the latest
	// one is recorded.
	Operation pulumi.StringPtrInput `pulumi:"operation"`
	// (Output)
	// The schedule of the maintenance event.
	Schedule pulumi.StringPtrInput `pulumi:"schedule"`
	// (Output)
	// The time when the maintenance event started.
	StartTime pulumi.StringPtrInput `pulumi:"startTime"`
	// (Output)
	// Indicates the maintenance event state.
	State pulumi.StringPtrInput `pulumi:"state"`
	// (Output)
	// The target version of the cluster.
	TargetVersion pulumi.StringPtrInput `pulumi:"targetVersion"`
	// (Output)
	// Indicates the maintenance event type.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// (Output)
	// The time when the maintenance event message was updated.
	UpdateTime pulumi.StringPtrInput `pulumi:"updateTime"`
	// (Output)
	// UUID of the maintenance event.
	Uuid pulumi.StringPtrInput `pulumi:"uuid"`
}

func (ClusterMaintenanceEventArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMaintenanceEvent)(nil)).Elem()
}

func (i ClusterMaintenanceEventArgs) ToClusterMaintenanceEventOutput() ClusterMaintenanceEventOutput {
	return i.ToClusterMaintenanceEventOutputWithContext(context.Background())
}

func (i ClusterMaintenanceEventArgs) ToClusterMaintenanceEventOutputWithContext(ctx context.Context) ClusterMaintenanceEventOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenanceEventOutput)
}

// ClusterMaintenanceEventArrayInput is an input type that accepts ClusterMaintenanceEventArray and ClusterMaintenanceEventArrayOutput values.
// You can construct a concrete instance of `ClusterMaintenanceEventArrayInput` via:
//
//	ClusterMaintenanceEventArray{ ClusterMaintenanceEventArgs{...} }
type ClusterMaintenanceEventArrayInput interface {
	pulumi.Input

	ToClusterMaintenanceEventArrayOutput() ClusterMaintenanceEventArrayOutput
	ToClusterMaintenanceEventArrayOutputWithContext(context.Context) ClusterMaintenanceEventArrayOutput
}

type ClusterMaintenanceEventArray []ClusterMaintenanceEventInput

func (ClusterMaintenanceEventArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterMaintenanceEvent)(nil)).Elem()
}

func (i ClusterMaintenanceEventArray) ToClusterMaintenanceEventArrayOutput() ClusterMaintenanceEventArrayOutput {
	return i.ToClusterMaintenanceEventArrayOutputWithContext(context.Background())
}

func (i ClusterMaintenanceEventArray) ToClusterMaintenanceEventArrayOutputWithContext(ctx context.Context) ClusterMaintenanceEventArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenanceEventArrayOutput)
}

type ClusterMaintenanceEventOutput struct{ *pulumi.OutputState }

func (ClusterMaintenanceEventOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMaintenanceEvent)(nil)).Elem()
}

func (o ClusterMaintenanceEventOutput) ToClusterMaintenanceEventOutput() ClusterMaintenanceEventOutput {
	return o
}

func (o ClusterMaintenanceEventOutput) ToClusterMaintenanceEventOutputWithContext(ctx context.Context) ClusterMaintenanceEventOutput {
	return o
}

// (Output)
// The time when the maintenance event request was created.
func (o ClusterMaintenanceEventOutput) CreateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMaintenanceEvent) *string { return v.CreateTime }).(pulumi.StringPtrOutput)
}

// (Output)
// The time when the maintenance event ended, either successfully or not. If
// the maintenance event is split into multiple maintenance windows,
// endTime is only updated when the whole flow ends.
func (o ClusterMaintenanceEventOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMaintenanceEvent) *string { return v.EndTime }).(pulumi.StringPtrOutput)
}

// (Output)
// The operation for running the maintenance event. Specified in the format
// projects/*/locations/*/operations/*. If the maintenance event is split
// into multiple operations (e.g. due to maintenance windows), the latest
// one is recorded.
func (o ClusterMaintenanceEventOutput) Operation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMaintenanceEvent) *string { return v.Operation }).(pulumi.StringPtrOutput)
}

// (Output)
// The schedule of the maintenance event.
func (o ClusterMaintenanceEventOutput) Schedule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMaintenanceEvent) *string { return v.Schedule }).(pulumi.StringPtrOutput)
}

// (Output)
// The time when the maintenance event started.
func (o ClusterMaintenanceEventOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMaintenanceEvent) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

// (Output)
// Indicates the maintenance event state.
func (o ClusterMaintenanceEventOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMaintenanceEvent) *string { return v.State }).(pulumi.StringPtrOutput)
}

// (Output)
// The target version of the cluster.
func (o ClusterMaintenanceEventOutput) TargetVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMaintenanceEvent) *string { return v.TargetVersion }).(pulumi.StringPtrOutput)
}

// (Output)
// Indicates the maintenance event type.
func (o ClusterMaintenanceEventOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMaintenanceEvent) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// (Output)
// The time when the maintenance event message was updated.
func (o ClusterMaintenanceEventOutput) UpdateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMaintenanceEvent) *string { return v.UpdateTime }).(pulumi.StringPtrOutput)
}

// (Output)
// UUID of the maintenance event.
func (o ClusterMaintenanceEventOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMaintenanceEvent) *string { return v.Uuid }).(pulumi.StringPtrOutput)
}

type ClusterMaintenanceEventArrayOutput struct{ *pulumi.OutputState }

func (ClusterMaintenanceEventArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterMaintenanceEvent)(nil)).Elem()
}

func (o ClusterMaintenanceEventArrayOutput) ToClusterMaintenanceEventArrayOutput() ClusterMaintenanceEventArrayOutput {
	return o
}

func (o ClusterMaintenanceEventArrayOutput) ToClusterMaintenanceEventArrayOutputWithContext(ctx context.Context) ClusterMaintenanceEventArrayOutput {
	return o
}

func (o ClusterMaintenanceEventArrayOutput) Index(i pulumi.IntInput) ClusterMaintenanceEventOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterMaintenanceEvent {
		return vs[0].([]ClusterMaintenanceEvent)[vs[1].(int)]
	}).(ClusterMaintenanceEventOutput)
}

type ClusterMaintenancePolicy struct {
	// Exclusions to automatic maintenance. Non-emergency maintenance should not occur
	// in these windows. Each exclusion has a unique name and may be active or expired.
	// The max number of maintenance exclusions allowed at a given time is 3.
	// Structure is documented below.
	MaintenanceExclusions []ClusterMaintenancePolicyMaintenanceExclusion `pulumi:"maintenanceExclusions"`
	// Specifies the maintenance window in which maintenance may be performed.
	// Structure is documented below.
	Window ClusterMaintenancePolicyWindow `pulumi:"window"`
}

// ClusterMaintenancePolicyInput is an input type that accepts ClusterMaintenancePolicyArgs and ClusterMaintenancePolicyOutput values.
// You can construct a concrete instance of `ClusterMaintenancePolicyInput` via:
//
//	ClusterMaintenancePolicyArgs{...}
type ClusterMaintenancePolicyInput interface {
	pulumi.Input

	ToClusterMaintenancePolicyOutput() ClusterMaintenancePolicyOutput
	ToClusterMaintenancePolicyOutputWithContext(context.Context) ClusterMaintenancePolicyOutput
}

type ClusterMaintenancePolicyArgs struct {
	// Exclusions to automatic maintenance. Non-emergency maintenance should not occur
	// in these windows. Each exclusion has a unique name and may be active or expired.
	// The max number of maintenance exclusions allowed at a given time is 3.
	// Structure is documented below.
	MaintenanceExclusions ClusterMaintenancePolicyMaintenanceExclusionArrayInput `pulumi:"maintenanceExclusions"`
	// Specifies the maintenance window in which maintenance may be performed.
	// Structure is documented below.
	Window ClusterMaintenancePolicyWindowInput `pulumi:"window"`
}

func (ClusterMaintenancePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMaintenancePolicy)(nil)).Elem()
}

func (i ClusterMaintenancePolicyArgs) ToClusterMaintenancePolicyOutput() ClusterMaintenancePolicyOutput {
	return i.ToClusterMaintenancePolicyOutputWithContext(context.Background())
}

func (i ClusterMaintenancePolicyArgs) ToClusterMaintenancePolicyOutputWithContext(ctx context.Context) ClusterMaintenancePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenancePolicyOutput)
}

func (i ClusterMaintenancePolicyArgs) ToClusterMaintenancePolicyPtrOutput() ClusterMaintenancePolicyPtrOutput {
	return i.ToClusterMaintenancePolicyPtrOutputWithContext(context.Background())
}

func (i ClusterMaintenancePolicyArgs) ToClusterMaintenancePolicyPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenancePolicyOutput).ToClusterMaintenancePolicyPtrOutputWithContext(ctx)
}

// ClusterMaintenancePolicyPtrInput is an input type that accepts ClusterMaintenancePolicyArgs, ClusterMaintenancePolicyPtr and ClusterMaintenancePolicyPtrOutput values.
// You can construct a concrete instance of `ClusterMaintenancePolicyPtrInput` via:
//
//	        ClusterMaintenancePolicyArgs{...}
//
//	or:
//
//	        nil
type ClusterMaintenancePolicyPtrInput interface {
	pulumi.Input

	ToClusterMaintenancePolicyPtrOutput() ClusterMaintenancePolicyPtrOutput
	ToClusterMaintenancePolicyPtrOutputWithContext(context.Context) ClusterMaintenancePolicyPtrOutput
}

type clusterMaintenancePolicyPtrType ClusterMaintenancePolicyArgs

func ClusterMaintenancePolicyPtr(v *ClusterMaintenancePolicyArgs) ClusterMaintenancePolicyPtrInput {
	return (*clusterMaintenancePolicyPtrType)(v)
}

func (*clusterMaintenancePolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMaintenancePolicy)(nil)).Elem()
}

func (i *clusterMaintenancePolicyPtrType) ToClusterMaintenancePolicyPtrOutput() ClusterMaintenancePolicyPtrOutput {
	return i.ToClusterMaintenancePolicyPtrOutputWithContext(context.Background())
}

func (i *clusterMaintenancePolicyPtrType) ToClusterMaintenancePolicyPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenancePolicyPtrOutput)
}

type ClusterMaintenancePolicyOutput struct{ *pulumi.OutputState }

func (ClusterMaintenancePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMaintenancePolicy)(nil)).Elem()
}

func (o ClusterMaintenancePolicyOutput) ToClusterMaintenancePolicyOutput() ClusterMaintenancePolicyOutput {
	return o
}

func (o ClusterMaintenancePolicyOutput) ToClusterMaintenancePolicyOutputWithContext(ctx context.Context) ClusterMaintenancePolicyOutput {
	return o
}

func (o ClusterMaintenancePolicyOutput) ToClusterMaintenancePolicyPtrOutput() ClusterMaintenancePolicyPtrOutput {
	return o.ToClusterMaintenancePolicyPtrOutputWithContext(context.Background())
}

func (o ClusterMaintenancePolicyOutput) ToClusterMaintenancePolicyPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterMaintenancePolicy) *ClusterMaintenancePolicy {
		return &v
	}).(ClusterMaintenancePolicyPtrOutput)
}

// Exclusions to automatic maintenance. Non-emergency maintenance should not occur
// in these windows. Each exclusion has a unique name and may be active or expired.
// The max number of maintenance exclusions allowed at a given time is 3.
// Structure is documented below.
func (o ClusterMaintenancePolicyOutput) MaintenanceExclusions() ClusterMaintenancePolicyMaintenanceExclusionArrayOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicy) []ClusterMaintenancePolicyMaintenanceExclusion {
		return v.MaintenanceExclusions
	}).(ClusterMaintenancePolicyMaintenanceExclusionArrayOutput)
}

// Specifies the maintenance window in which maintenance may be performed.
// Structure is documented below.
func (o ClusterMaintenancePolicyOutput) Window() ClusterMaintenancePolicyWindowOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicy) ClusterMaintenancePolicyWindow { return v.Window }).(ClusterMaintenancePolicyWindowOutput)
}

type ClusterMaintenancePolicyPtrOutput struct{ *pulumi.OutputState }

func (ClusterMaintenancePolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMaintenancePolicy)(nil)).Elem()
}

func (o ClusterMaintenancePolicyPtrOutput) ToClusterMaintenancePolicyPtrOutput() ClusterMaintenancePolicyPtrOutput {
	return o
}

func (o ClusterMaintenancePolicyPtrOutput) ToClusterMaintenancePolicyPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyPtrOutput {
	return o
}

func (o ClusterMaintenancePolicyPtrOutput) Elem() ClusterMaintenancePolicyOutput {
	return o.ApplyT(func(v *ClusterMaintenancePolicy) ClusterMaintenancePolicy {
		if v != nil {
			return *v
		}
		var ret ClusterMaintenancePolicy
		return ret
	}).(ClusterMaintenancePolicyOutput)
}

// Exclusions to automatic maintenance. Non-emergency maintenance should not occur
// in these windows. Each exclusion has a unique name and may be active or expired.
// The max number of maintenance exclusions allowed at a given time is 3.
// Structure is documented below.
func (o ClusterMaintenancePolicyPtrOutput) MaintenanceExclusions() ClusterMaintenancePolicyMaintenanceExclusionArrayOutput {
	return o.ApplyT(func(v *ClusterMaintenancePolicy) []ClusterMaintenancePolicyMaintenanceExclusion {
		if v == nil {
			return nil
		}
		return v.MaintenanceExclusions
	}).(ClusterMaintenancePolicyMaintenanceExclusionArrayOutput)
}

// Specifies the maintenance window in which maintenance may be performed.
// Structure is documented below.
func (o ClusterMaintenancePolicyPtrOutput) Window() ClusterMaintenancePolicyWindowPtrOutput {
	return o.ApplyT(func(v *ClusterMaintenancePolicy) *ClusterMaintenancePolicyWindow {
		if v == nil {
			return nil
		}
		return &v.Window
	}).(ClusterMaintenancePolicyWindowPtrOutput)
}

type ClusterMaintenancePolicyMaintenanceExclusion struct {
	// A unique (per cluster) id for the window.
	Id *string `pulumi:"id"`
	// Represents an arbitrary window of time.
	// Structure is documented below.
	Window *ClusterMaintenancePolicyMaintenanceExclusionWindow `pulumi:"window"`
}

// ClusterMaintenancePolicyMaintenanceExclusionInput is an input type that accepts ClusterMaintenancePolicyMaintenanceExclusionArgs and ClusterMaintenancePolicyMaintenanceExclusionOutput values.
// You can construct a concrete instance of `ClusterMaintenancePolicyMaintenanceExclusionInput` via:
//
//	ClusterMaintenancePolicyMaintenanceExclusionArgs{...}
type ClusterMaintenancePolicyMaintenanceExclusionInput interface {
	pulumi.Input

	ToClusterMaintenancePolicyMaintenanceExclusionOutput() ClusterMaintenancePolicyMaintenanceExclusionOutput
	ToClusterMaintenancePolicyMaintenanceExclusionOutputWithContext(context.Context) ClusterMaintenancePolicyMaintenanceExclusionOutput
}

type ClusterMaintenancePolicyMaintenanceExclusionArgs struct {
	// A unique (per cluster) id for the window.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Represents an arbitrary window of time.
	// Structure is documented below.
	Window ClusterMaintenancePolicyMaintenanceExclusionWindowPtrInput `pulumi:"window"`
}

func (ClusterMaintenancePolicyMaintenanceExclusionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMaintenancePolicyMaintenanceExclusion)(nil)).Elem()
}

func (i ClusterMaintenancePolicyMaintenanceExclusionArgs) ToClusterMaintenancePolicyMaintenanceExclusionOutput() ClusterMaintenancePolicyMaintenanceExclusionOutput {
	return i.ToClusterMaintenancePolicyMaintenanceExclusionOutputWithContext(context.Background())
}

func (i ClusterMaintenancePolicyMaintenanceExclusionArgs) ToClusterMaintenancePolicyMaintenanceExclusionOutputWithContext(ctx context.Context) ClusterMaintenancePolicyMaintenanceExclusionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenancePolicyMaintenanceExclusionOutput)
}

// ClusterMaintenancePolicyMaintenanceExclusionArrayInput is an input type that accepts ClusterMaintenancePolicyMaintenanceExclusionArray and ClusterMaintenancePolicyMaintenanceExclusionArrayOutput values.
// You can construct a concrete instance of `ClusterMaintenancePolicyMaintenanceExclusionArrayInput` via:
//
//	ClusterMaintenancePolicyMaintenanceExclusionArray{ ClusterMaintenancePolicyMaintenanceExclusionArgs{...} }
type ClusterMaintenancePolicyMaintenanceExclusionArrayInput interface {
	pulumi.Input

	ToClusterMaintenancePolicyMaintenanceExclusionArrayOutput() ClusterMaintenancePolicyMaintenanceExclusionArrayOutput
	ToClusterMaintenancePolicyMaintenanceExclusionArrayOutputWithContext(context.Context) ClusterMaintenancePolicyMaintenanceExclusionArrayOutput
}

type ClusterMaintenancePolicyMaintenanceExclusionArray []ClusterMaintenancePolicyMaintenanceExclusionInput

func (ClusterMaintenancePolicyMaintenanceExclusionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterMaintenancePolicyMaintenanceExclusion)(nil)).Elem()
}

func (i ClusterMaintenancePolicyMaintenanceExclusionArray) ToClusterMaintenancePolicyMaintenanceExclusionArrayOutput() ClusterMaintenancePolicyMaintenanceExclusionArrayOutput {
	return i.ToClusterMaintenancePolicyMaintenanceExclusionArrayOutputWithContext(context.Background())
}

func (i ClusterMaintenancePolicyMaintenanceExclusionArray) ToClusterMaintenancePolicyMaintenanceExclusionArrayOutputWithContext(ctx context.Context) ClusterMaintenancePolicyMaintenanceExclusionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenancePolicyMaintenanceExclusionArrayOutput)
}

type ClusterMaintenancePolicyMaintenanceExclusionOutput struct{ *pulumi.OutputState }

func (ClusterMaintenancePolicyMaintenanceExclusionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMaintenancePolicyMaintenanceExclusion)(nil)).Elem()
}

func (o ClusterMaintenancePolicyMaintenanceExclusionOutput) ToClusterMaintenancePolicyMaintenanceExclusionOutput() ClusterMaintenancePolicyMaintenanceExclusionOutput {
	return o
}

func (o ClusterMaintenancePolicyMaintenanceExclusionOutput) ToClusterMaintenancePolicyMaintenanceExclusionOutputWithContext(ctx context.Context) ClusterMaintenancePolicyMaintenanceExclusionOutput {
	return o
}

// A unique (per cluster) id for the window.
func (o ClusterMaintenancePolicyMaintenanceExclusionOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicyMaintenanceExclusion) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Represents an arbitrary window of time.
// Structure is documented below.
func (o ClusterMaintenancePolicyMaintenanceExclusionOutput) Window() ClusterMaintenancePolicyMaintenanceExclusionWindowPtrOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicyMaintenanceExclusion) *ClusterMaintenancePolicyMaintenanceExclusionWindow {
		return v.Window
	}).(ClusterMaintenancePolicyMaintenanceExclusionWindowPtrOutput)
}

type ClusterMaintenancePolicyMaintenanceExclusionArrayOutput struct{ *pulumi.OutputState }

func (ClusterMaintenancePolicyMaintenanceExclusionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterMaintenancePolicyMaintenanceExclusion)(nil)).Elem()
}

func (o ClusterMaintenancePolicyMaintenanceExclusionArrayOutput) ToClusterMaintenancePolicyMaintenanceExclusionArrayOutput() ClusterMaintenancePolicyMaintenanceExclusionArrayOutput {
	return o
}

func (o ClusterMaintenancePolicyMaintenanceExclusionArrayOutput) ToClusterMaintenancePolicyMaintenanceExclusionArrayOutputWithContext(ctx context.Context) ClusterMaintenancePolicyMaintenanceExclusionArrayOutput {
	return o
}

func (o ClusterMaintenancePolicyMaintenanceExclusionArrayOutput) Index(i pulumi.IntInput) ClusterMaintenancePolicyMaintenanceExclusionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterMaintenancePolicyMaintenanceExclusion {
		return vs[0].([]ClusterMaintenancePolicyMaintenanceExclusion)[vs[1].(int)]
	}).(ClusterMaintenancePolicyMaintenanceExclusionOutput)
}

type ClusterMaintenancePolicyMaintenanceExclusionWindow struct {
	// The time that the window ends. The end time must take place after the
	// start time.
	EndTime *string `pulumi:"endTime"`
	// The time that the window first starts.
	StartTime *string `pulumi:"startTime"`
}

// ClusterMaintenancePolicyMaintenanceExclusionWindowInput is an input type that accepts ClusterMaintenancePolicyMaintenanceExclusionWindowArgs and ClusterMaintenancePolicyMaintenanceExclusionWindowOutput values.
// You can construct a concrete instance of `ClusterMaintenancePolicyMaintenanceExclusionWindowInput` via:
//
//	ClusterMaintenancePolicyMaintenanceExclusionWindowArgs{...}
type ClusterMaintenancePolicyMaintenanceExclusionWindowInput interface {
	pulumi.Input

	ToClusterMaintenancePolicyMaintenanceExclusionWindowOutput() ClusterMaintenancePolicyMaintenanceExclusionWindowOutput
	ToClusterMaintenancePolicyMaintenanceExclusionWindowOutputWithContext(context.Context) ClusterMaintenancePolicyMaintenanceExclusionWindowOutput
}

type ClusterMaintenancePolicyMaintenanceExclusionWindowArgs struct {
	// The time that the window ends. The end time must take place after the
	// start time.
	EndTime pulumi.StringPtrInput `pulumi:"endTime"`
	// The time that the window first starts.
	StartTime pulumi.StringPtrInput `pulumi:"startTime"`
}

func (ClusterMaintenancePolicyMaintenanceExclusionWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMaintenancePolicyMaintenanceExclusionWindow)(nil)).Elem()
}

func (i ClusterMaintenancePolicyMaintenanceExclusionWindowArgs) ToClusterMaintenancePolicyMaintenanceExclusionWindowOutput() ClusterMaintenancePolicyMaintenanceExclusionWindowOutput {
	return i.ToClusterMaintenancePolicyMaintenanceExclusionWindowOutputWithContext(context.Background())
}

func (i ClusterMaintenancePolicyMaintenanceExclusionWindowArgs) ToClusterMaintenancePolicyMaintenanceExclusionWindowOutputWithContext(ctx context.Context) ClusterMaintenancePolicyMaintenanceExclusionWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenancePolicyMaintenanceExclusionWindowOutput)
}

func (i ClusterMaintenancePolicyMaintenanceExclusionWindowArgs) ToClusterMaintenancePolicyMaintenanceExclusionWindowPtrOutput() ClusterMaintenancePolicyMaintenanceExclusionWindowPtrOutput {
	return i.ToClusterMaintenancePolicyMaintenanceExclusionWindowPtrOutputWithContext(context.Background())
}

func (i ClusterMaintenancePolicyMaintenanceExclusionWindowArgs) ToClusterMaintenancePolicyMaintenanceExclusionWindowPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyMaintenanceExclusionWindowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenancePolicyMaintenanceExclusionWindowOutput).ToClusterMaintenancePolicyMaintenanceExclusionWindowPtrOutputWithContext(ctx)
}

// ClusterMaintenancePolicyMaintenanceExclusionWindowPtrInput is an input type that accepts ClusterMaintenancePolicyMaintenanceExclusionWindowArgs, ClusterMaintenancePolicyMaintenanceExclusionWindowPtr and ClusterMaintenancePolicyMaintenanceExclusionWindowPtrOutput values.
// You can construct a concrete instance of `ClusterMaintenancePolicyMaintenanceExclusionWindowPtrInput` via:
//
//	        ClusterMaintenancePolicyMaintenanceExclusionWindowArgs{...}
//
//	or:
//
//	        nil
type ClusterMaintenancePolicyMaintenanceExclusionWindowPtrInput interface {
	pulumi.Input

	ToClusterMaintenancePolicyMaintenanceExclusionWindowPtrOutput() ClusterMaintenancePolicyMaintenanceExclusionWindowPtrOutput
	ToClusterMaintenancePolicyMaintenanceExclusionWindowPtrOutputWithContext(context.Context) ClusterMaintenancePolicyMaintenanceExclusionWindowPtrOutput
}

type clusterMaintenancePolicyMaintenanceExclusionWindowPtrType ClusterMaintenancePolicyMaintenanceExclusionWindowArgs

func ClusterMaintenancePolicyMaintenanceExclusionWindowPtr(v *ClusterMaintenancePolicyMaintenanceExclusionWindowArgs) ClusterMaintenancePolicyMaintenanceExclusionWindowPtrInput {
	return (*clusterMaintenancePolicyMaintenanceExclusionWindowPtrType)(v)
}

func (*clusterMaintenancePolicyMaintenanceExclusionWindowPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMaintenancePolicyMaintenanceExclusionWindow)(nil)).Elem()
}

func (i *clusterMaintenancePolicyMaintenanceExclusionWindowPtrType) ToClusterMaintenancePolicyMaintenanceExclusionWindowPtrOutput() ClusterMaintenancePolicyMaintenanceExclusionWindowPtrOutput {
	return i.ToClusterMaintenancePolicyMaintenanceExclusionWindowPtrOutputWithContext(context.Background())
}

func (i *clusterMaintenancePolicyMaintenanceExclusionWindowPtrType) ToClusterMaintenancePolicyMaintenanceExclusionWindowPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyMaintenanceExclusionWindowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenancePolicyMaintenanceExclusionWindowPtrOutput)
}

type ClusterMaintenancePolicyMaintenanceExclusionWindowOutput struct{ *pulumi.OutputState }

func (ClusterMaintenancePolicyMaintenanceExclusionWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMaintenancePolicyMaintenanceExclusionWindow)(nil)).Elem()
}

func (o ClusterMaintenancePolicyMaintenanceExclusionWindowOutput) ToClusterMaintenancePolicyMaintenanceExclusionWindowOutput() ClusterMaintenancePolicyMaintenanceExclusionWindowOutput {
	return o
}

func (o ClusterMaintenancePolicyMaintenanceExclusionWindowOutput) ToClusterMaintenancePolicyMaintenanceExclusionWindowOutputWithContext(ctx context.Context) ClusterMaintenancePolicyMaintenanceExclusionWindowOutput {
	return o
}

func (o ClusterMaintenancePolicyMaintenanceExclusionWindowOutput) ToClusterMaintenancePolicyMaintenanceExclusionWindowPtrOutput() ClusterMaintenancePolicyMaintenanceExclusionWindowPtrOutput {
	return o.ToClusterMaintenancePolicyMaintenanceExclusionWindowPtrOutputWithContext(context.Background())
}

func (o ClusterMaintenancePolicyMaintenanceExclusionWindowOutput) ToClusterMaintenancePolicyMaintenanceExclusionWindowPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyMaintenanceExclusionWindowPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterMaintenancePolicyMaintenanceExclusionWindow) *ClusterMaintenancePolicyMaintenanceExclusionWindow {
		return &v
	}).(ClusterMaintenancePolicyMaintenanceExclusionWindowPtrOutput)
}

// The time that the window ends. The end time must take place after the
// start time.
func (o ClusterMaintenancePolicyMaintenanceExclusionWindowOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicyMaintenanceExclusionWindow) *string { return v.EndTime }).(pulumi.StringPtrOutput)
}

// The time that the window first starts.
func (o ClusterMaintenancePolicyMaintenanceExclusionWindowOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicyMaintenanceExclusionWindow) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

type ClusterMaintenancePolicyMaintenanceExclusionWindowPtrOutput struct{ *pulumi.OutputState }

func (ClusterMaintenancePolicyMaintenanceExclusionWindowPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMaintenancePolicyMaintenanceExclusionWindow)(nil)).Elem()
}

func (o ClusterMaintenancePolicyMaintenanceExclusionWindowPtrOutput) ToClusterMaintenancePolicyMaintenanceExclusionWindowPtrOutput() ClusterMaintenancePolicyMaintenanceExclusionWindowPtrOutput {
	return o
}

func (o ClusterMaintenancePolicyMaintenanceExclusionWindowPtrOutput) ToClusterMaintenancePolicyMaintenanceExclusionWindowPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyMaintenanceExclusionWindowPtrOutput {
	return o
}

func (o ClusterMaintenancePolicyMaintenanceExclusionWindowPtrOutput) Elem() ClusterMaintenancePolicyMaintenanceExclusionWindowOutput {
	return o.ApplyT(func(v *ClusterMaintenancePolicyMaintenanceExclusionWindow) ClusterMaintenancePolicyMaintenanceExclusionWindow {
		if v != nil {
			return *v
		}
		var ret ClusterMaintenancePolicyMaintenanceExclusionWindow
		return ret
	}).(ClusterMaintenancePolicyMaintenanceExclusionWindowOutput)
}

// The time that the window ends. The end time must take place after the
// start time.
func (o ClusterMaintenancePolicyMaintenanceExclusionWindowPtrOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterMaintenancePolicyMaintenanceExclusionWindow) *string {
		if v == nil {
			return nil
		}
		return v.EndTime
	}).(pulumi.StringPtrOutput)
}

// The time that the window first starts.
func (o ClusterMaintenancePolicyMaintenanceExclusionWindowPtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterMaintenancePolicyMaintenanceExclusionWindow) *string {
		if v == nil {
			return nil
		}
		return v.StartTime
	}).(pulumi.StringPtrOutput)
}

type ClusterMaintenancePolicyWindow struct {
	// Represents an arbitrary window of time that recurs.
	// Structure is documented below.
	RecurringWindow ClusterMaintenancePolicyWindowRecurringWindow `pulumi:"recurringWindow"`
}

// ClusterMaintenancePolicyWindowInput is an input type that accepts ClusterMaintenancePolicyWindowArgs and ClusterMaintenancePolicyWindowOutput values.
// You can construct a concrete instance of `ClusterMaintenancePolicyWindowInput` via:
//
//	ClusterMaintenancePolicyWindowArgs{...}
type ClusterMaintenancePolicyWindowInput interface {
	pulumi.Input

	ToClusterMaintenancePolicyWindowOutput() ClusterMaintenancePolicyWindowOutput
	ToClusterMaintenancePolicyWindowOutputWithContext(context.Context) ClusterMaintenancePolicyWindowOutput
}

type ClusterMaintenancePolicyWindowArgs struct {
	// Represents an arbitrary window of time that recurs.
	// Structure is documented below.
	RecurringWindow ClusterMaintenancePolicyWindowRecurringWindowInput `pulumi:"recurringWindow"`
}

func (ClusterMaintenancePolicyWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMaintenancePolicyWindow)(nil)).Elem()
}

func (i ClusterMaintenancePolicyWindowArgs) ToClusterMaintenancePolicyWindowOutput() ClusterMaintenancePolicyWindowOutput {
	return i.ToClusterMaintenancePolicyWindowOutputWithContext(context.Background())
}

func (i ClusterMaintenancePolicyWindowArgs) ToClusterMaintenancePolicyWindowOutputWithContext(ctx context.Context) ClusterMaintenancePolicyWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenancePolicyWindowOutput)
}

func (i ClusterMaintenancePolicyWindowArgs) ToClusterMaintenancePolicyWindowPtrOutput() ClusterMaintenancePolicyWindowPtrOutput {
	return i.ToClusterMaintenancePolicyWindowPtrOutputWithContext(context.Background())
}

func (i ClusterMaintenancePolicyWindowArgs) ToClusterMaintenancePolicyWindowPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyWindowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenancePolicyWindowOutput).ToClusterMaintenancePolicyWindowPtrOutputWithContext(ctx)
}

// ClusterMaintenancePolicyWindowPtrInput is an input type that accepts ClusterMaintenancePolicyWindowArgs, ClusterMaintenancePolicyWindowPtr and ClusterMaintenancePolicyWindowPtrOutput values.
// You can construct a concrete instance of `ClusterMaintenancePolicyWindowPtrInput` via:
//
//	        ClusterMaintenancePolicyWindowArgs{...}
//
//	or:
//
//	        nil
type ClusterMaintenancePolicyWindowPtrInput interface {
	pulumi.Input

	ToClusterMaintenancePolicyWindowPtrOutput() ClusterMaintenancePolicyWindowPtrOutput
	ToClusterMaintenancePolicyWindowPtrOutputWithContext(context.Context) ClusterMaintenancePolicyWindowPtrOutput
}

type clusterMaintenancePolicyWindowPtrType ClusterMaintenancePolicyWindowArgs

func ClusterMaintenancePolicyWindowPtr(v *ClusterMaintenancePolicyWindowArgs) ClusterMaintenancePolicyWindowPtrInput {
	return (*clusterMaintenancePolicyWindowPtrType)(v)
}

func (*clusterMaintenancePolicyWindowPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMaintenancePolicyWindow)(nil)).Elem()
}

func (i *clusterMaintenancePolicyWindowPtrType) ToClusterMaintenancePolicyWindowPtrOutput() ClusterMaintenancePolicyWindowPtrOutput {
	return i.ToClusterMaintenancePolicyWindowPtrOutputWithContext(context.Background())
}

func (i *clusterMaintenancePolicyWindowPtrType) ToClusterMaintenancePolicyWindowPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyWindowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenancePolicyWindowPtrOutput)
}

type ClusterMaintenancePolicyWindowOutput struct{ *pulumi.OutputState }

func (ClusterMaintenancePolicyWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMaintenancePolicyWindow)(nil)).Elem()
}

func (o ClusterMaintenancePolicyWindowOutput) ToClusterMaintenancePolicyWindowOutput() ClusterMaintenancePolicyWindowOutput {
	return o
}

func (o ClusterMaintenancePolicyWindowOutput) ToClusterMaintenancePolicyWindowOutputWithContext(ctx context.Context) ClusterMaintenancePolicyWindowOutput {
	return o
}

func (o ClusterMaintenancePolicyWindowOutput) ToClusterMaintenancePolicyWindowPtrOutput() ClusterMaintenancePolicyWindowPtrOutput {
	return o.ToClusterMaintenancePolicyWindowPtrOutputWithContext(context.Background())
}

func (o ClusterMaintenancePolicyWindowOutput) ToClusterMaintenancePolicyWindowPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyWindowPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterMaintenancePolicyWindow) *ClusterMaintenancePolicyWindow {
		return &v
	}).(ClusterMaintenancePolicyWindowPtrOutput)
}

// Represents an arbitrary window of time that recurs.
// Structure is documented below.
func (o ClusterMaintenancePolicyWindowOutput) RecurringWindow() ClusterMaintenancePolicyWindowRecurringWindowOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicyWindow) ClusterMaintenancePolicyWindowRecurringWindow {
		return v.RecurringWindow
	}).(ClusterMaintenancePolicyWindowRecurringWindowOutput)
}

type ClusterMaintenancePolicyWindowPtrOutput struct{ *pulumi.OutputState }

func (ClusterMaintenancePolicyWindowPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMaintenancePolicyWindow)(nil)).Elem()
}

func (o ClusterMaintenancePolicyWindowPtrOutput) ToClusterMaintenancePolicyWindowPtrOutput() ClusterMaintenancePolicyWindowPtrOutput {
	return o
}

func (o ClusterMaintenancePolicyWindowPtrOutput) ToClusterMaintenancePolicyWindowPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyWindowPtrOutput {
	return o
}

func (o ClusterMaintenancePolicyWindowPtrOutput) Elem() ClusterMaintenancePolicyWindowOutput {
	return o.ApplyT(func(v *ClusterMaintenancePolicyWindow) ClusterMaintenancePolicyWindow {
		if v != nil {
			return *v
		}
		var ret ClusterMaintenancePolicyWindow
		return ret
	}).(ClusterMaintenancePolicyWindowOutput)
}

// Represents an arbitrary window of time that recurs.
// Structure is documented below.
func (o ClusterMaintenancePolicyWindowPtrOutput) RecurringWindow() ClusterMaintenancePolicyWindowRecurringWindowPtrOutput {
	return o.ApplyT(func(v *ClusterMaintenancePolicyWindow) *ClusterMaintenancePolicyWindowRecurringWindow {
		if v == nil {
			return nil
		}
		return &v.RecurringWindow
	}).(ClusterMaintenancePolicyWindowRecurringWindowPtrOutput)
}

type ClusterMaintenancePolicyWindowRecurringWindow struct {
	// An RRULE (https://tools.ietf.org/html/rfc5545#section-3.8.5.3) for how
	// this window recurs. They go on for the span of time between the start and
	// end time.
	Recurrence *string `pulumi:"recurrence"`
	// Represents an arbitrary window of time.
	// Structure is documented below.
	Window *ClusterMaintenancePolicyWindowRecurringWindowWindow `pulumi:"window"`
}

// ClusterMaintenancePolicyWindowRecurringWindowInput is an input type that accepts ClusterMaintenancePolicyWindowRecurringWindowArgs and ClusterMaintenancePolicyWindowRecurringWindowOutput values.
// You can construct a concrete instance of `ClusterMaintenancePolicyWindowRecurringWindowInput` via:
//
//	ClusterMaintenancePolicyWindowRecurringWindowArgs{...}
type ClusterMaintenancePolicyWindowRecurringWindowInput interface {
	pulumi.Input

	ToClusterMaintenancePolicyWindowRecurringWindowOutput() ClusterMaintenancePolicyWindowRecurringWindowOutput
	ToClusterMaintenancePolicyWindowRecurringWindowOutputWithContext(context.Context) ClusterMaintenancePolicyWindowRecurringWindowOutput
}

type ClusterMaintenancePolicyWindowRecurringWindowArgs struct {
	// An RRULE (https://tools.ietf.org/html/rfc5545#section-3.8.5.3) for how
	// this window recurs. They go on for the span of time between the start and
	// end time.
	Recurrence pulumi.StringPtrInput `pulumi:"recurrence"`
	// Represents an arbitrary window of time.
	// Structure is documented below.
	Window ClusterMaintenancePolicyWindowRecurringWindowWindowPtrInput `pulumi:"window"`
}

func (ClusterMaintenancePolicyWindowRecurringWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMaintenancePolicyWindowRecurringWindow)(nil)).Elem()
}

func (i ClusterMaintenancePolicyWindowRecurringWindowArgs) ToClusterMaintenancePolicyWindowRecurringWindowOutput() ClusterMaintenancePolicyWindowRecurringWindowOutput {
	return i.ToClusterMaintenancePolicyWindowRecurringWindowOutputWithContext(context.Background())
}

func (i ClusterMaintenancePolicyWindowRecurringWindowArgs) ToClusterMaintenancePolicyWindowRecurringWindowOutputWithContext(ctx context.Context) ClusterMaintenancePolicyWindowRecurringWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenancePolicyWindowRecurringWindowOutput)
}

func (i ClusterMaintenancePolicyWindowRecurringWindowArgs) ToClusterMaintenancePolicyWindowRecurringWindowPtrOutput() ClusterMaintenancePolicyWindowRecurringWindowPtrOutput {
	return i.ToClusterMaintenancePolicyWindowRecurringWindowPtrOutputWithContext(context.Background())
}

func (i ClusterMaintenancePolicyWindowRecurringWindowArgs) ToClusterMaintenancePolicyWindowRecurringWindowPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyWindowRecurringWindowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenancePolicyWindowRecurringWindowOutput).ToClusterMaintenancePolicyWindowRecurringWindowPtrOutputWithContext(ctx)
}

// ClusterMaintenancePolicyWindowRecurringWindowPtrInput is an input type that accepts ClusterMaintenancePolicyWindowRecurringWindowArgs, ClusterMaintenancePolicyWindowRecurringWindowPtr and ClusterMaintenancePolicyWindowRecurringWindowPtrOutput values.
// You can construct a concrete instance of `ClusterMaintenancePolicyWindowRecurringWindowPtrInput` via:
//
//	        ClusterMaintenancePolicyWindowRecurringWindowArgs{...}
//
//	or:
//
//	        nil
type ClusterMaintenancePolicyWindowRecurringWindowPtrInput interface {
	pulumi.Input

	ToClusterMaintenancePolicyWindowRecurringWindowPtrOutput() ClusterMaintenancePolicyWindowRecurringWindowPtrOutput
	ToClusterMaintenancePolicyWindowRecurringWindowPtrOutputWithContext(context.Context) ClusterMaintenancePolicyWindowRecurringWindowPtrOutput
}

type clusterMaintenancePolicyWindowRecurringWindowPtrType ClusterMaintenancePolicyWindowRecurringWindowArgs

func ClusterMaintenancePolicyWindowRecurringWindowPtr(v *ClusterMaintenancePolicyWindowRecurringWindowArgs) ClusterMaintenancePolicyWindowRecurringWindowPtrInput {
	return (*clusterMaintenancePolicyWindowRecurringWindowPtrType)(v)
}

func (*clusterMaintenancePolicyWindowRecurringWindowPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMaintenancePolicyWindowRecurringWindow)(nil)).Elem()
}

func (i *clusterMaintenancePolicyWindowRecurringWindowPtrType) ToClusterMaintenancePolicyWindowRecurringWindowPtrOutput() ClusterMaintenancePolicyWindowRecurringWindowPtrOutput {
	return i.ToClusterMaintenancePolicyWindowRecurringWindowPtrOutputWithContext(context.Background())
}

func (i *clusterMaintenancePolicyWindowRecurringWindowPtrType) ToClusterMaintenancePolicyWindowRecurringWindowPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyWindowRecurringWindowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenancePolicyWindowRecurringWindowPtrOutput)
}

type ClusterMaintenancePolicyWindowRecurringWindowOutput struct{ *pulumi.OutputState }

func (ClusterMaintenancePolicyWindowRecurringWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMaintenancePolicyWindowRecurringWindow)(nil)).Elem()
}

func (o ClusterMaintenancePolicyWindowRecurringWindowOutput) ToClusterMaintenancePolicyWindowRecurringWindowOutput() ClusterMaintenancePolicyWindowRecurringWindowOutput {
	return o
}

func (o ClusterMaintenancePolicyWindowRecurringWindowOutput) ToClusterMaintenancePolicyWindowRecurringWindowOutputWithContext(ctx context.Context) ClusterMaintenancePolicyWindowRecurringWindowOutput {
	return o
}

func (o ClusterMaintenancePolicyWindowRecurringWindowOutput) ToClusterMaintenancePolicyWindowRecurringWindowPtrOutput() ClusterMaintenancePolicyWindowRecurringWindowPtrOutput {
	return o.ToClusterMaintenancePolicyWindowRecurringWindowPtrOutputWithContext(context.Background())
}

func (o ClusterMaintenancePolicyWindowRecurringWindowOutput) ToClusterMaintenancePolicyWindowRecurringWindowPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyWindowRecurringWindowPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterMaintenancePolicyWindowRecurringWindow) *ClusterMaintenancePolicyWindowRecurringWindow {
		return &v
	}).(ClusterMaintenancePolicyWindowRecurringWindowPtrOutput)
}

// An RRULE (https://tools.ietf.org/html/rfc5545#section-3.8.5.3) for how
// this window recurs. They go on for the span of time between the start and
// end time.
func (o ClusterMaintenancePolicyWindowRecurringWindowOutput) Recurrence() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicyWindowRecurringWindow) *string { return v.Recurrence }).(pulumi.StringPtrOutput)
}

// Represents an arbitrary window of time.
// Structure is documented below.
func (o ClusterMaintenancePolicyWindowRecurringWindowOutput) Window() ClusterMaintenancePolicyWindowRecurringWindowWindowPtrOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicyWindowRecurringWindow) *ClusterMaintenancePolicyWindowRecurringWindowWindow {
		return v.Window
	}).(ClusterMaintenancePolicyWindowRecurringWindowWindowPtrOutput)
}

type ClusterMaintenancePolicyWindowRecurringWindowPtrOutput struct{ *pulumi.OutputState }

func (ClusterMaintenancePolicyWindowRecurringWindowPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMaintenancePolicyWindowRecurringWindow)(nil)).Elem()
}

func (o ClusterMaintenancePolicyWindowRecurringWindowPtrOutput) ToClusterMaintenancePolicyWindowRecurringWindowPtrOutput() ClusterMaintenancePolicyWindowRecurringWindowPtrOutput {
	return o
}

func (o ClusterMaintenancePolicyWindowRecurringWindowPtrOutput) ToClusterMaintenancePolicyWindowRecurringWindowPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyWindowRecurringWindowPtrOutput {
	return o
}

func (o ClusterMaintenancePolicyWindowRecurringWindowPtrOutput) Elem() ClusterMaintenancePolicyWindowRecurringWindowOutput {
	return o.ApplyT(func(v *ClusterMaintenancePolicyWindowRecurringWindow) ClusterMaintenancePolicyWindowRecurringWindow {
		if v != nil {
			return *v
		}
		var ret ClusterMaintenancePolicyWindowRecurringWindow
		return ret
	}).(ClusterMaintenancePolicyWindowRecurringWindowOutput)
}

// An RRULE (https://tools.ietf.org/html/rfc5545#section-3.8.5.3) for how
// this window recurs. They go on for the span of time between the start and
// end time.
func (o ClusterMaintenancePolicyWindowRecurringWindowPtrOutput) Recurrence() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterMaintenancePolicyWindowRecurringWindow) *string {
		if v == nil {
			return nil
		}
		return v.Recurrence
	}).(pulumi.StringPtrOutput)
}

// Represents an arbitrary window of time.
// Structure is documented below.
func (o ClusterMaintenancePolicyWindowRecurringWindowPtrOutput) Window() ClusterMaintenancePolicyWindowRecurringWindowWindowPtrOutput {
	return o.ApplyT(func(v *ClusterMaintenancePolicyWindowRecurringWindow) *ClusterMaintenancePolicyWindowRecurringWindowWindow {
		if v == nil {
			return nil
		}
		return v.Window
	}).(ClusterMaintenancePolicyWindowRecurringWindowWindowPtrOutput)
}

type ClusterMaintenancePolicyWindowRecurringWindowWindow struct {
	// The time that the window ends. The end time must take place after the
	// start time.
	EndTime *string `pulumi:"endTime"`
	// The time that the window first starts.
	StartTime *string `pulumi:"startTime"`
}

// ClusterMaintenancePolicyWindowRecurringWindowWindowInput is an input type that accepts ClusterMaintenancePolicyWindowRecurringWindowWindowArgs and ClusterMaintenancePolicyWindowRecurringWindowWindowOutput values.
// You can construct a concrete instance of `ClusterMaintenancePolicyWindowRecurringWindowWindowInput` via:
//
//	ClusterMaintenancePolicyWindowRecurringWindowWindowArgs{...}
type ClusterMaintenancePolicyWindowRecurringWindowWindowInput interface {
	pulumi.Input

	ToClusterMaintenancePolicyWindowRecurringWindowWindowOutput() ClusterMaintenancePolicyWindowRecurringWindowWindowOutput
	ToClusterMaintenancePolicyWindowRecurringWindowWindowOutputWithContext(context.Context) ClusterMaintenancePolicyWindowRecurringWindowWindowOutput
}

type ClusterMaintenancePolicyWindowRecurringWindowWindowArgs struct {
	// The time that the window ends. The end time must take place after the
	// start time.
	EndTime pulumi.StringPtrInput `pulumi:"endTime"`
	// The time that the window first starts.
	StartTime pulumi.StringPtrInput `pulumi:"startTime"`
}

func (ClusterMaintenancePolicyWindowRecurringWindowWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMaintenancePolicyWindowRecurringWindowWindow)(nil)).Elem()
}

func (i ClusterMaintenancePolicyWindowRecurringWindowWindowArgs) ToClusterMaintenancePolicyWindowRecurringWindowWindowOutput() ClusterMaintenancePolicyWindowRecurringWindowWindowOutput {
	return i.ToClusterMaintenancePolicyWindowRecurringWindowWindowOutputWithContext(context.Background())
}

func (i ClusterMaintenancePolicyWindowRecurringWindowWindowArgs) ToClusterMaintenancePolicyWindowRecurringWindowWindowOutputWithContext(ctx context.Context) ClusterMaintenancePolicyWindowRecurringWindowWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenancePolicyWindowRecurringWindowWindowOutput)
}

func (i ClusterMaintenancePolicyWindowRecurringWindowWindowArgs) ToClusterMaintenancePolicyWindowRecurringWindowWindowPtrOutput() ClusterMaintenancePolicyWindowRecurringWindowWindowPtrOutput {
	return i.ToClusterMaintenancePolicyWindowRecurringWindowWindowPtrOutputWithContext(context.Background())
}

func (i ClusterMaintenancePolicyWindowRecurringWindowWindowArgs) ToClusterMaintenancePolicyWindowRecurringWindowWindowPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyWindowRecurringWindowWindowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenancePolicyWindowRecurringWindowWindowOutput).ToClusterMaintenancePolicyWindowRecurringWindowWindowPtrOutputWithContext(ctx)
}

// ClusterMaintenancePolicyWindowRecurringWindowWindowPtrInput is an input type that accepts ClusterMaintenancePolicyWindowRecurringWindowWindowArgs, ClusterMaintenancePolicyWindowRecurringWindowWindowPtr and ClusterMaintenancePolicyWindowRecurringWindowWindowPtrOutput values.
// You can construct a concrete instance of `ClusterMaintenancePolicyWindowRecurringWindowWindowPtrInput` via:
//
//	        ClusterMaintenancePolicyWindowRecurringWindowWindowArgs{...}
//
//	or:
//
//	        nil
type ClusterMaintenancePolicyWindowRecurringWindowWindowPtrInput interface {
	pulumi.Input

	ToClusterMaintenancePolicyWindowRecurringWindowWindowPtrOutput() ClusterMaintenancePolicyWindowRecurringWindowWindowPtrOutput
	ToClusterMaintenancePolicyWindowRecurringWindowWindowPtrOutputWithContext(context.Context) ClusterMaintenancePolicyWindowRecurringWindowWindowPtrOutput
}

type clusterMaintenancePolicyWindowRecurringWindowWindowPtrType ClusterMaintenancePolicyWindowRecurringWindowWindowArgs

func ClusterMaintenancePolicyWindowRecurringWindowWindowPtr(v *ClusterMaintenancePolicyWindowRecurringWindowWindowArgs) ClusterMaintenancePolicyWindowRecurringWindowWindowPtrInput {
	return (*clusterMaintenancePolicyWindowRecurringWindowWindowPtrType)(v)
}

func (*clusterMaintenancePolicyWindowRecurringWindowWindowPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMaintenancePolicyWindowRecurringWindowWindow)(nil)).Elem()
}

func (i *clusterMaintenancePolicyWindowRecurringWindowWindowPtrType) ToClusterMaintenancePolicyWindowRecurringWindowWindowPtrOutput() ClusterMaintenancePolicyWindowRecurringWindowWindowPtrOutput {
	return i.ToClusterMaintenancePolicyWindowRecurringWindowWindowPtrOutputWithContext(context.Background())
}

func (i *clusterMaintenancePolicyWindowRecurringWindowWindowPtrType) ToClusterMaintenancePolicyWindowRecurringWindowWindowPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyWindowRecurringWindowWindowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenancePolicyWindowRecurringWindowWindowPtrOutput)
}

type ClusterMaintenancePolicyWindowRecurringWindowWindowOutput struct{ *pulumi.OutputState }

func (ClusterMaintenancePolicyWindowRecurringWindowWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMaintenancePolicyWindowRecurringWindowWindow)(nil)).Elem()
}

func (o ClusterMaintenancePolicyWindowRecurringWindowWindowOutput) ToClusterMaintenancePolicyWindowRecurringWindowWindowOutput() ClusterMaintenancePolicyWindowRecurringWindowWindowOutput {
	return o
}

func (o ClusterMaintenancePolicyWindowRecurringWindowWindowOutput) ToClusterMaintenancePolicyWindowRecurringWindowWindowOutputWithContext(ctx context.Context) ClusterMaintenancePolicyWindowRecurringWindowWindowOutput {
	return o
}

func (o ClusterMaintenancePolicyWindowRecurringWindowWindowOutput) ToClusterMaintenancePolicyWindowRecurringWindowWindowPtrOutput() ClusterMaintenancePolicyWindowRecurringWindowWindowPtrOutput {
	return o.ToClusterMaintenancePolicyWindowRecurringWindowWindowPtrOutputWithContext(context.Background())
}

func (o ClusterMaintenancePolicyWindowRecurringWindowWindowOutput) ToClusterMaintenancePolicyWindowRecurringWindowWindowPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyWindowRecurringWindowWindowPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterMaintenancePolicyWindowRecurringWindowWindow) *ClusterMaintenancePolicyWindowRecurringWindowWindow {
		return &v
	}).(ClusterMaintenancePolicyWindowRecurringWindowWindowPtrOutput)
}

// The time that the window ends. The end time must take place after the
// start time.
func (o ClusterMaintenancePolicyWindowRecurringWindowWindowOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicyWindowRecurringWindowWindow) *string { return v.EndTime }).(pulumi.StringPtrOutput)
}

// The time that the window first starts.
func (o ClusterMaintenancePolicyWindowRecurringWindowWindowOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicyWindowRecurringWindowWindow) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

type ClusterMaintenancePolicyWindowRecurringWindowWindowPtrOutput struct{ *pulumi.OutputState }

func (ClusterMaintenancePolicyWindowRecurringWindowWindowPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMaintenancePolicyWindowRecurringWindowWindow)(nil)).Elem()
}

func (o ClusterMaintenancePolicyWindowRecurringWindowWindowPtrOutput) ToClusterMaintenancePolicyWindowRecurringWindowWindowPtrOutput() ClusterMaintenancePolicyWindowRecurringWindowWindowPtrOutput {
	return o
}

func (o ClusterMaintenancePolicyWindowRecurringWindowWindowPtrOutput) ToClusterMaintenancePolicyWindowRecurringWindowWindowPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyWindowRecurringWindowWindowPtrOutput {
	return o
}

func (o ClusterMaintenancePolicyWindowRecurringWindowWindowPtrOutput) Elem() ClusterMaintenancePolicyWindowRecurringWindowWindowOutput {
	return o.ApplyT(func(v *ClusterMaintenancePolicyWindowRecurringWindowWindow) ClusterMaintenancePolicyWindowRecurringWindowWindow {
		if v != nil {
			return *v
		}
		var ret ClusterMaintenancePolicyWindowRecurringWindowWindow
		return ret
	}).(ClusterMaintenancePolicyWindowRecurringWindowWindowOutput)
}

// The time that the window ends. The end time must take place after the
// start time.
func (o ClusterMaintenancePolicyWindowRecurringWindowWindowPtrOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterMaintenancePolicyWindowRecurringWindowWindow) *string {
		if v == nil {
			return nil
		}
		return v.EndTime
	}).(pulumi.StringPtrOutput)
}

// The time that the window first starts.
func (o ClusterMaintenancePolicyWindowRecurringWindowWindowPtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterMaintenancePolicyWindowRecurringWindowWindow) *string {
		if v == nil {
			return nil
		}
		return v.StartTime
	}).(pulumi.StringPtrOutput)
}

type ClusterNetworking struct {
	// All pods in the cluster are assigned an RFC1918 IPv4 address from these
	// blocks. Only a single block is supported. This field cannot be changed
	// after creation.
	ClusterIpv4CidrBlocks []string `pulumi:"clusterIpv4CidrBlocks"`
	// If specified, dual stack mode is enabled and all pods in the cluster are
	// assigned an IPv6 address from these blocks alongside from an IPv4
	// address. Only a single block is supported. This field cannot be changed
	// after creation.
	ClusterIpv6CidrBlocks []string `pulumi:"clusterIpv6CidrBlocks"`
	// (Output)
	// IP addressing type of this cluster i.e. SINGLESTACK_V4 vs DUALSTACK_V4_V6.
	NetworkType *string `pulumi:"networkType"`
	// All services in the cluster are assigned an RFC1918 IPv4 address from these
	// blocks. Only a single block is supported. This field cannot be changed
	// after creation.
	ServicesIpv4CidrBlocks []string `pulumi:"servicesIpv4CidrBlocks"`
	// If specified, dual stack mode is enabled and all services in the cluster are
	// assigned an IPv6 address from these blocks alongside from an IPv4
	// address. Only a single block is supported. This field cannot be changed
	// after creation.
	ServicesIpv6CidrBlocks []string `pulumi:"servicesIpv6CidrBlocks"`
}

// ClusterNetworkingInput is an input type that accepts ClusterNetworkingArgs and ClusterNetworkingOutput values.
// You can construct a concrete instance of `ClusterNetworkingInput` via:
//
//	ClusterNetworkingArgs{...}
type ClusterNetworkingInput interface {
	pulumi.Input

	ToClusterNetworkingOutput() ClusterNetworkingOutput
	ToClusterNetworkingOutputWithContext(context.Context) ClusterNetworkingOutput
}

type ClusterNetworkingArgs struct {
	// All pods in the cluster are assigned an RFC1918 IPv4 address from these
	// blocks. Only a single block is supported. This field cannot be changed
	// after creation.
	ClusterIpv4CidrBlocks pulumi.StringArrayInput `pulumi:"clusterIpv4CidrBlocks"`
	// If specified, dual stack mode is enabled and all pods in the cluster are
	// assigned an IPv6 address from these blocks alongside from an IPv4
	// address. Only a single block is supported. This field cannot be changed
	// after creation.
	ClusterIpv6CidrBlocks pulumi.StringArrayInput `pulumi:"clusterIpv6CidrBlocks"`
	// (Output)
	// IP addressing type of this cluster i.e. SINGLESTACK_V4 vs DUALSTACK_V4_V6.
	NetworkType pulumi.StringPtrInput `pulumi:"networkType"`
	// All services in the cluster are assigned an RFC1918 IPv4 address from these
	// blocks. Only a single block is supported. This field cannot be changed
	// after creation.
	ServicesIpv4CidrBlocks pulumi.StringArrayInput `pulumi:"servicesIpv4CidrBlocks"`
	// If specified, dual stack mode is enabled and all services in the cluster are
	// assigned an IPv6 address from these blocks alongside from an IPv4
	// address. Only a single block is supported. This field cannot be changed
	// after creation.
	ServicesIpv6CidrBlocks pulumi.StringArrayInput `pulumi:"servicesIpv6CidrBlocks"`
}

func (ClusterNetworkingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNetworking)(nil)).Elem()
}

func (i ClusterNetworkingArgs) ToClusterNetworkingOutput() ClusterNetworkingOutput {
	return i.ToClusterNetworkingOutputWithContext(context.Background())
}

func (i ClusterNetworkingArgs) ToClusterNetworkingOutputWithContext(ctx context.Context) ClusterNetworkingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNetworkingOutput)
}

func (i ClusterNetworkingArgs) ToClusterNetworkingPtrOutput() ClusterNetworkingPtrOutput {
	return i.ToClusterNetworkingPtrOutputWithContext(context.Background())
}

func (i ClusterNetworkingArgs) ToClusterNetworkingPtrOutputWithContext(ctx context.Context) ClusterNetworkingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNetworkingOutput).ToClusterNetworkingPtrOutputWithContext(ctx)
}

// ClusterNetworkingPtrInput is an input type that accepts ClusterNetworkingArgs, ClusterNetworkingPtr and ClusterNetworkingPtrOutput values.
// You can construct a concrete instance of `ClusterNetworkingPtrInput` via:
//
//	        ClusterNetworkingArgs{...}
//
//	or:
//
//	        nil
type ClusterNetworkingPtrInput interface {
	pulumi.Input

	ToClusterNetworkingPtrOutput() ClusterNetworkingPtrOutput
	ToClusterNetworkingPtrOutputWithContext(context.Context) ClusterNetworkingPtrOutput
}

type clusterNetworkingPtrType ClusterNetworkingArgs

func ClusterNetworkingPtr(v *ClusterNetworkingArgs) ClusterNetworkingPtrInput {
	return (*clusterNetworkingPtrType)(v)
}

func (*clusterNetworkingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNetworking)(nil)).Elem()
}

func (i *clusterNetworkingPtrType) ToClusterNetworkingPtrOutput() ClusterNetworkingPtrOutput {
	return i.ToClusterNetworkingPtrOutputWithContext(context.Background())
}

func (i *clusterNetworkingPtrType) ToClusterNetworkingPtrOutputWithContext(ctx context.Context) ClusterNetworkingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNetworkingPtrOutput)
}

type ClusterNetworkingOutput struct{ *pulumi.OutputState }

func (ClusterNetworkingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNetworking)(nil)).Elem()
}

func (o ClusterNetworkingOutput) ToClusterNetworkingOutput() ClusterNetworkingOutput {
	return o
}

func (o ClusterNetworkingOutput) ToClusterNetworkingOutputWithContext(ctx context.Context) ClusterNetworkingOutput {
	return o
}

func (o ClusterNetworkingOutput) ToClusterNetworkingPtrOutput() ClusterNetworkingPtrOutput {
	return o.ToClusterNetworkingPtrOutputWithContext(context.Background())
}

func (o ClusterNetworkingOutput) ToClusterNetworkingPtrOutputWithContext(ctx context.Context) ClusterNetworkingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterNetworking) *ClusterNetworking {
		return &v
	}).(ClusterNetworkingPtrOutput)
}

// All pods in the cluster are assigned an RFC1918 IPv4 address from these
// blocks. Only a single block is supported. This field cannot be changed
// after creation.
func (o ClusterNetworkingOutput) ClusterIpv4CidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterNetworking) []string { return v.ClusterIpv4CidrBlocks }).(pulumi.StringArrayOutput)
}

// If specified, dual stack mode is enabled and all pods in the cluster are
// assigned an IPv6 address from these blocks alongside from an IPv4
// address. Only a single block is supported. This field cannot be changed
// after creation.
func (o ClusterNetworkingOutput) ClusterIpv6CidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterNetworking) []string { return v.ClusterIpv6CidrBlocks }).(pulumi.StringArrayOutput)
}

// (Output)
// IP addressing type of this cluster i.e. SINGLESTACK_V4 vs DUALSTACK_V4_V6.
func (o ClusterNetworkingOutput) NetworkType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNetworking) *string { return v.NetworkType }).(pulumi.StringPtrOutput)
}

// All services in the cluster are assigned an RFC1918 IPv4 address from these
// blocks. Only a single block is supported. This field cannot be changed
// after creation.
func (o ClusterNetworkingOutput) ServicesIpv4CidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterNetworking) []string { return v.ServicesIpv4CidrBlocks }).(pulumi.StringArrayOutput)
}

// If specified, dual stack mode is enabled and all services in the cluster are
// assigned an IPv6 address from these blocks alongside from an IPv4
// address. Only a single block is supported. This field cannot be changed
// after creation.
func (o ClusterNetworkingOutput) ServicesIpv6CidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterNetworking) []string { return v.ServicesIpv6CidrBlocks }).(pulumi.StringArrayOutput)
}

type ClusterNetworkingPtrOutput struct{ *pulumi.OutputState }

func (ClusterNetworkingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNetworking)(nil)).Elem()
}

func (o ClusterNetworkingPtrOutput) ToClusterNetworkingPtrOutput() ClusterNetworkingPtrOutput {
	return o
}

func (o ClusterNetworkingPtrOutput) ToClusterNetworkingPtrOutputWithContext(ctx context.Context) ClusterNetworkingPtrOutput {
	return o
}

func (o ClusterNetworkingPtrOutput) Elem() ClusterNetworkingOutput {
	return o.ApplyT(func(v *ClusterNetworking) ClusterNetworking {
		if v != nil {
			return *v
		}
		var ret ClusterNetworking
		return ret
	}).(ClusterNetworkingOutput)
}

// All pods in the cluster are assigned an RFC1918 IPv4 address from these
// blocks. Only a single block is supported. This field cannot be changed
// after creation.
func (o ClusterNetworkingPtrOutput) ClusterIpv4CidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterNetworking) []string {
		if v == nil {
			return nil
		}
		return v.ClusterIpv4CidrBlocks
	}).(pulumi.StringArrayOutput)
}

// If specified, dual stack mode is enabled and all pods in the cluster are
// assigned an IPv6 address from these blocks alongside from an IPv4
// address. Only a single block is supported. This field cannot be changed
// after creation.
func (o ClusterNetworkingPtrOutput) ClusterIpv6CidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterNetworking) []string {
		if v == nil {
			return nil
		}
		return v.ClusterIpv6CidrBlocks
	}).(pulumi.StringArrayOutput)
}

// (Output)
// IP addressing type of this cluster i.e. SINGLESTACK_V4 vs DUALSTACK_V4_V6.
func (o ClusterNetworkingPtrOutput) NetworkType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNetworking) *string {
		if v == nil {
			return nil
		}
		return v.NetworkType
	}).(pulumi.StringPtrOutput)
}

// All services in the cluster are assigned an RFC1918 IPv4 address from these
// blocks. Only a single block is supported. This field cannot be changed
// after creation.
func (o ClusterNetworkingPtrOutput) ServicesIpv4CidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterNetworking) []string {
		if v == nil {
			return nil
		}
		return v.ServicesIpv4CidrBlocks
	}).(pulumi.StringArrayOutput)
}

// If specified, dual stack mode is enabled and all services in the cluster are
// assigned an IPv6 address from these blocks alongside from an IPv4
// address. Only a single block is supported. This field cannot be changed
// after creation.
func (o ClusterNetworkingPtrOutput) ServicesIpv6CidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterNetworking) []string {
		if v == nil {
			return nil
		}
		return v.ServicesIpv6CidrBlocks
	}).(pulumi.StringArrayOutput)
}

type ClusterSystemAddonsConfig struct {
	// Config for the Ingress add-on which allows customers to create an Ingress
	// object to manage external access to the servers in a cluster. The add-on
	// consists of istiod and istio-ingress.
	// Structure is documented below.
	Ingress *ClusterSystemAddonsConfigIngress `pulumi:"ingress"`
}

// ClusterSystemAddonsConfigInput is an input type that accepts ClusterSystemAddonsConfigArgs and ClusterSystemAddonsConfigOutput values.
// You can construct a concrete instance of `ClusterSystemAddonsConfigInput` via:
//
//	ClusterSystemAddonsConfigArgs{...}
type ClusterSystemAddonsConfigInput interface {
	pulumi.Input

	ToClusterSystemAddonsConfigOutput() ClusterSystemAddonsConfigOutput
	ToClusterSystemAddonsConfigOutputWithContext(context.Context) ClusterSystemAddonsConfigOutput
}

type ClusterSystemAddonsConfigArgs struct {
	// Config for the Ingress add-on which allows customers to create an Ingress
	// object to manage external access to the servers in a cluster. The add-on
	// consists of istiod and istio-ingress.
	// Structure is documented below.
	Ingress ClusterSystemAddonsConfigIngressPtrInput `pulumi:"ingress"`
}

func (ClusterSystemAddonsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSystemAddonsConfig)(nil)).Elem()
}

func (i ClusterSystemAddonsConfigArgs) ToClusterSystemAddonsConfigOutput() ClusterSystemAddonsConfigOutput {
	return i.ToClusterSystemAddonsConfigOutputWithContext(context.Background())
}

func (i ClusterSystemAddonsConfigArgs) ToClusterSystemAddonsConfigOutputWithContext(ctx context.Context) ClusterSystemAddonsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSystemAddonsConfigOutput)
}

func (i ClusterSystemAddonsConfigArgs) ToClusterSystemAddonsConfigPtrOutput() ClusterSystemAddonsConfigPtrOutput {
	return i.ToClusterSystemAddonsConfigPtrOutputWithContext(context.Background())
}

func (i ClusterSystemAddonsConfigArgs) ToClusterSystemAddonsConfigPtrOutputWithContext(ctx context.Context) ClusterSystemAddonsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSystemAddonsConfigOutput).ToClusterSystemAddonsConfigPtrOutputWithContext(ctx)
}

// ClusterSystemAddonsConfigPtrInput is an input type that accepts ClusterSystemAddonsConfigArgs, ClusterSystemAddonsConfigPtr and ClusterSystemAddonsConfigPtrOutput values.
// You can construct a concrete instance of `ClusterSystemAddonsConfigPtrInput` via:
//
//	        ClusterSystemAddonsConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterSystemAddonsConfigPtrInput interface {
	pulumi.Input

	ToClusterSystemAddonsConfigPtrOutput() ClusterSystemAddonsConfigPtrOutput
	ToClusterSystemAddonsConfigPtrOutputWithContext(context.Context) ClusterSystemAddonsConfigPtrOutput
}

type clusterSystemAddonsConfigPtrType ClusterSystemAddonsConfigArgs

func ClusterSystemAddonsConfigPtr(v *ClusterSystemAddonsConfigArgs) ClusterSystemAddonsConfigPtrInput {
	return (*clusterSystemAddonsConfigPtrType)(v)
}

func (*clusterSystemAddonsConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSystemAddonsConfig)(nil)).Elem()
}

func (i *clusterSystemAddonsConfigPtrType) ToClusterSystemAddonsConfigPtrOutput() ClusterSystemAddonsConfigPtrOutput {
	return i.ToClusterSystemAddonsConfigPtrOutputWithContext(context.Background())
}

func (i *clusterSystemAddonsConfigPtrType) ToClusterSystemAddonsConfigPtrOutputWithContext(ctx context.Context) ClusterSystemAddonsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSystemAddonsConfigPtrOutput)
}

type ClusterSystemAddonsConfigOutput struct{ *pulumi.OutputState }

func (ClusterSystemAddonsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSystemAddonsConfig)(nil)).Elem()
}

func (o ClusterSystemAddonsConfigOutput) ToClusterSystemAddonsConfigOutput() ClusterSystemAddonsConfigOutput {
	return o
}

func (o ClusterSystemAddonsConfigOutput) ToClusterSystemAddonsConfigOutputWithContext(ctx context.Context) ClusterSystemAddonsConfigOutput {
	return o
}

func (o ClusterSystemAddonsConfigOutput) ToClusterSystemAddonsConfigPtrOutput() ClusterSystemAddonsConfigPtrOutput {
	return o.ToClusterSystemAddonsConfigPtrOutputWithContext(context.Background())
}

func (o ClusterSystemAddonsConfigOutput) ToClusterSystemAddonsConfigPtrOutputWithContext(ctx context.Context) ClusterSystemAddonsConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSystemAddonsConfig) *ClusterSystemAddonsConfig {
		return &v
	}).(ClusterSystemAddonsConfigPtrOutput)
}

// Config for the Ingress add-on which allows customers to create an Ingress
// object to manage external access to the servers in a cluster. The add-on
// consists of istiod and istio-ingress.
// Structure is documented below.
func (o ClusterSystemAddonsConfigOutput) Ingress() ClusterSystemAddonsConfigIngressPtrOutput {
	return o.ApplyT(func(v ClusterSystemAddonsConfig) *ClusterSystemAddonsConfigIngress { return v.Ingress }).(ClusterSystemAddonsConfigIngressPtrOutput)
}

type ClusterSystemAddonsConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterSystemAddonsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSystemAddonsConfig)(nil)).Elem()
}

func (o ClusterSystemAddonsConfigPtrOutput) ToClusterSystemAddonsConfigPtrOutput() ClusterSystemAddonsConfigPtrOutput {
	return o
}

func (o ClusterSystemAddonsConfigPtrOutput) ToClusterSystemAddonsConfigPtrOutputWithContext(ctx context.Context) ClusterSystemAddonsConfigPtrOutput {
	return o
}

func (o ClusterSystemAddonsConfigPtrOutput) Elem() ClusterSystemAddonsConfigOutput {
	return o.ApplyT(func(v *ClusterSystemAddonsConfig) ClusterSystemAddonsConfig {
		if v != nil {
			return *v
		}
		var ret ClusterSystemAddonsConfig
		return ret
	}).(ClusterSystemAddonsConfigOutput)
}

// Config for the Ingress add-on which allows customers to create an Ingress
// object to manage external access to the servers in a cluster. The add-on
// consists of istiod and istio-ingress.
// Structure is documented below.
func (o ClusterSystemAddonsConfigPtrOutput) Ingress() ClusterSystemAddonsConfigIngressPtrOutput {
	return o.ApplyT(func(v *ClusterSystemAddonsConfig) *ClusterSystemAddonsConfigIngress {
		if v == nil {
			return nil
		}
		return v.Ingress
	}).(ClusterSystemAddonsConfigIngressPtrOutput)
}

type ClusterSystemAddonsConfigIngress struct {
	// Whether Ingress is disabled.
	Disabled *bool `pulumi:"disabled"`
	// Ingress VIP.
	Ipv4Vip *string `pulumi:"ipv4Vip"`
}

// ClusterSystemAddonsConfigIngressInput is an input type that accepts ClusterSystemAddonsConfigIngressArgs and ClusterSystemAddonsConfigIngressOutput values.
// You can construct a concrete instance of `ClusterSystemAddonsConfigIngressInput` via:
//
//	ClusterSystemAddonsConfigIngressArgs{...}
type ClusterSystemAddonsConfigIngressInput interface {
	pulumi.Input

	ToClusterSystemAddonsConfigIngressOutput() ClusterSystemAddonsConfigIngressOutput
	ToClusterSystemAddonsConfigIngressOutputWithContext(context.Context) ClusterSystemAddonsConfigIngressOutput
}

type ClusterSystemAddonsConfigIngressArgs struct {
	// Whether Ingress is disabled.
	Disabled pulumi.BoolPtrInput `pulumi:"disabled"`
	// Ingress VIP.
	Ipv4Vip pulumi.StringPtrInput `pulumi:"ipv4Vip"`
}

func (ClusterSystemAddonsConfigIngressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSystemAddonsConfigIngress)(nil)).Elem()
}

func (i ClusterSystemAddonsConfigIngressArgs) ToClusterSystemAddonsConfigIngressOutput() ClusterSystemAddonsConfigIngressOutput {
	return i.ToClusterSystemAddonsConfigIngressOutputWithContext(context.Background())
}

func (i ClusterSystemAddonsConfigIngressArgs) ToClusterSystemAddonsConfigIngressOutputWithContext(ctx context.Context) ClusterSystemAddonsConfigIngressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSystemAddonsConfigIngressOutput)
}

func (i ClusterSystemAddonsConfigIngressArgs) ToClusterSystemAddonsConfigIngressPtrOutput() ClusterSystemAddonsConfigIngressPtrOutput {
	return i.ToClusterSystemAddonsConfigIngressPtrOutputWithContext(context.Background())
}

func (i ClusterSystemAddonsConfigIngressArgs) ToClusterSystemAddonsConfigIngressPtrOutputWithContext(ctx context.Context) ClusterSystemAddonsConfigIngressPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSystemAddonsConfigIngressOutput).ToClusterSystemAddonsConfigIngressPtrOutputWithContext(ctx)
}

// ClusterSystemAddonsConfigIngressPtrInput is an input type that accepts ClusterSystemAddonsConfigIngressArgs, ClusterSystemAddonsConfigIngressPtr and ClusterSystemAddonsConfigIngressPtrOutput values.
// You can construct a concrete instance of `ClusterSystemAddonsConfigIngressPtrInput` via:
//
//	        ClusterSystemAddonsConfigIngressArgs{...}
//
//	or:
//
//	        nil
type ClusterSystemAddonsConfigIngressPtrInput interface {
	pulumi.Input

	ToClusterSystemAddonsConfigIngressPtrOutput() ClusterSystemAddonsConfigIngressPtrOutput
	ToClusterSystemAddonsConfigIngressPtrOutputWithContext(context.Context) ClusterSystemAddonsConfigIngressPtrOutput
}

type clusterSystemAddonsConfigIngressPtrType ClusterSystemAddonsConfigIngressArgs

func ClusterSystemAddonsConfigIngressPtr(v *ClusterSystemAddonsConfigIngressArgs) ClusterSystemAddonsConfigIngressPtrInput {
	return (*clusterSystemAddonsConfigIngressPtrType)(v)
}

func (*clusterSystemAddonsConfigIngressPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSystemAddonsConfigIngress)(nil)).Elem()
}

func (i *clusterSystemAddonsConfigIngressPtrType) ToClusterSystemAddonsConfigIngressPtrOutput() ClusterSystemAddonsConfigIngressPtrOutput {
	return i.ToClusterSystemAddonsConfigIngressPtrOutputWithContext(context.Background())
}

func (i *clusterSystemAddonsConfigIngressPtrType) ToClusterSystemAddonsConfigIngressPtrOutputWithContext(ctx context.Context) ClusterSystemAddonsConfigIngressPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSystemAddonsConfigIngressPtrOutput)
}

type ClusterSystemAddonsConfigIngressOutput struct{ *pulumi.OutputState }

func (ClusterSystemAddonsConfigIngressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSystemAddonsConfigIngress)(nil)).Elem()
}

func (o ClusterSystemAddonsConfigIngressOutput) ToClusterSystemAddonsConfigIngressOutput() ClusterSystemAddonsConfigIngressOutput {
	return o
}

func (o ClusterSystemAddonsConfigIngressOutput) ToClusterSystemAddonsConfigIngressOutputWithContext(ctx context.Context) ClusterSystemAddonsConfigIngressOutput {
	return o
}

func (o ClusterSystemAddonsConfigIngressOutput) ToClusterSystemAddonsConfigIngressPtrOutput() ClusterSystemAddonsConfigIngressPtrOutput {
	return o.ToClusterSystemAddonsConfigIngressPtrOutputWithContext(context.Background())
}

func (o ClusterSystemAddonsConfigIngressOutput) ToClusterSystemAddonsConfigIngressPtrOutputWithContext(ctx context.Context) ClusterSystemAddonsConfigIngressPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSystemAddonsConfigIngress) *ClusterSystemAddonsConfigIngress {
		return &v
	}).(ClusterSystemAddonsConfigIngressPtrOutput)
}

// Whether Ingress is disabled.
func (o ClusterSystemAddonsConfigIngressOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterSystemAddonsConfigIngress) *bool { return v.Disabled }).(pulumi.BoolPtrOutput)
}

// Ingress VIP.
func (o ClusterSystemAddonsConfigIngressOutput) Ipv4Vip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSystemAddonsConfigIngress) *string { return v.Ipv4Vip }).(pulumi.StringPtrOutput)
}

type ClusterSystemAddonsConfigIngressPtrOutput struct{ *pulumi.OutputState }

func (ClusterSystemAddonsConfigIngressPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSystemAddonsConfigIngress)(nil)).Elem()
}

func (o ClusterSystemAddonsConfigIngressPtrOutput) ToClusterSystemAddonsConfigIngressPtrOutput() ClusterSystemAddonsConfigIngressPtrOutput {
	return o
}

func (o ClusterSystemAddonsConfigIngressPtrOutput) ToClusterSystemAddonsConfigIngressPtrOutputWithContext(ctx context.Context) ClusterSystemAddonsConfigIngressPtrOutput {
	return o
}

func (o ClusterSystemAddonsConfigIngressPtrOutput) Elem() ClusterSystemAddonsConfigIngressOutput {
	return o.ApplyT(func(v *ClusterSystemAddonsConfigIngress) ClusterSystemAddonsConfigIngress {
		if v != nil {
			return *v
		}
		var ret ClusterSystemAddonsConfigIngress
		return ret
	}).(ClusterSystemAddonsConfigIngressOutput)
}

// Whether Ingress is disabled.
func (o ClusterSystemAddonsConfigIngressPtrOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterSystemAddonsConfigIngress) *bool {
		if v == nil {
			return nil
		}
		return v.Disabled
	}).(pulumi.BoolPtrOutput)
}

// Ingress VIP.
func (o ClusterSystemAddonsConfigIngressPtrOutput) Ipv4Vip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSystemAddonsConfigIngress) *string {
		if v == nil {
			return nil
		}
		return v.Ipv4Vip
	}).(pulumi.StringPtrOutput)
}

type NodePoolLocalDiskEncryption struct {
	// The Cloud KMS CryptoKey e.g. projects/{project}/locations/{location}/keyRings/{keyRing}/cryptoKeys/{cryptoKey} to use for protecting node local disks.
	// If not specified, a Google-managed key will be used instead.
	KmsKey *string `pulumi:"kmsKey"`
	// (Output)
	// The Cloud KMS CryptoKeyVersion currently in use for protecting node local disks. Only applicable if kmsKey is set.
	KmsKeyActiveVersion *string `pulumi:"kmsKeyActiveVersion"`
	// (Output)
	// Availability of the Cloud KMS CryptoKey. If not KEY_AVAILABLE, then nodes may go offline as they cannot access their local data.
	// This can be caused by a lack of permissions to use the key, or if the key is disabled or deleted.
	KmsKeyState *string `pulumi:"kmsKeyState"`
}

// NodePoolLocalDiskEncryptionInput is an input type that accepts NodePoolLocalDiskEncryptionArgs and NodePoolLocalDiskEncryptionOutput values.
// You can construct a concrete instance of `NodePoolLocalDiskEncryptionInput` via:
//
//	NodePoolLocalDiskEncryptionArgs{...}
type NodePoolLocalDiskEncryptionInput interface {
	pulumi.Input

	ToNodePoolLocalDiskEncryptionOutput() NodePoolLocalDiskEncryptionOutput
	ToNodePoolLocalDiskEncryptionOutputWithContext(context.Context) NodePoolLocalDiskEncryptionOutput
}

type NodePoolLocalDiskEncryptionArgs struct {
	// The Cloud KMS CryptoKey e.g. projects/{project}/locations/{location}/keyRings/{keyRing}/cryptoKeys/{cryptoKey} to use for protecting node local disks.
	// If not specified, a Google-managed key will be used instead.
	KmsKey pulumi.StringPtrInput `pulumi:"kmsKey"`
	// (Output)
	// The Cloud KMS CryptoKeyVersion currently in use for protecting node local disks. Only applicable if kmsKey is set.
	KmsKeyActiveVersion pulumi.StringPtrInput `pulumi:"kmsKeyActiveVersion"`
	// (Output)
	// Availability of the Cloud KMS CryptoKey. If not KEY_AVAILABLE, then nodes may go offline as they cannot access their local data.
	// This can be caused by a lack of permissions to use the key, or if the key is disabled or deleted.
	KmsKeyState pulumi.StringPtrInput `pulumi:"kmsKeyState"`
}

func (NodePoolLocalDiskEncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolLocalDiskEncryption)(nil)).Elem()
}

func (i NodePoolLocalDiskEncryptionArgs) ToNodePoolLocalDiskEncryptionOutput() NodePoolLocalDiskEncryptionOutput {
	return i.ToNodePoolLocalDiskEncryptionOutputWithContext(context.Background())
}

func (i NodePoolLocalDiskEncryptionArgs) ToNodePoolLocalDiskEncryptionOutputWithContext(ctx context.Context) NodePoolLocalDiskEncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolLocalDiskEncryptionOutput)
}

func (i NodePoolLocalDiskEncryptionArgs) ToNodePoolLocalDiskEncryptionPtrOutput() NodePoolLocalDiskEncryptionPtrOutput {
	return i.ToNodePoolLocalDiskEncryptionPtrOutputWithContext(context.Background())
}

func (i NodePoolLocalDiskEncryptionArgs) ToNodePoolLocalDiskEncryptionPtrOutputWithContext(ctx context.Context) NodePoolLocalDiskEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolLocalDiskEncryptionOutput).ToNodePoolLocalDiskEncryptionPtrOutputWithContext(ctx)
}

// NodePoolLocalDiskEncryptionPtrInput is an input type that accepts NodePoolLocalDiskEncryptionArgs, NodePoolLocalDiskEncryptionPtr and NodePoolLocalDiskEncryptionPtrOutput values.
// You can construct a concrete instance of `NodePoolLocalDiskEncryptionPtrInput` via:
//
//	        NodePoolLocalDiskEncryptionArgs{...}
//
//	or:
//
//	        nil
type NodePoolLocalDiskEncryptionPtrInput interface {
	pulumi.Input

	ToNodePoolLocalDiskEncryptionPtrOutput() NodePoolLocalDiskEncryptionPtrOutput
	ToNodePoolLocalDiskEncryptionPtrOutputWithContext(context.Context) NodePoolLocalDiskEncryptionPtrOutput
}

type nodePoolLocalDiskEncryptionPtrType NodePoolLocalDiskEncryptionArgs

func NodePoolLocalDiskEncryptionPtr(v *NodePoolLocalDiskEncryptionArgs) NodePoolLocalDiskEncryptionPtrInput {
	return (*nodePoolLocalDiskEncryptionPtrType)(v)
}

func (*nodePoolLocalDiskEncryptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolLocalDiskEncryption)(nil)).Elem()
}

func (i *nodePoolLocalDiskEncryptionPtrType) ToNodePoolLocalDiskEncryptionPtrOutput() NodePoolLocalDiskEncryptionPtrOutput {
	return i.ToNodePoolLocalDiskEncryptionPtrOutputWithContext(context.Background())
}

func (i *nodePoolLocalDiskEncryptionPtrType) ToNodePoolLocalDiskEncryptionPtrOutputWithContext(ctx context.Context) NodePoolLocalDiskEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolLocalDiskEncryptionPtrOutput)
}

type NodePoolLocalDiskEncryptionOutput struct{ *pulumi.OutputState }

func (NodePoolLocalDiskEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolLocalDiskEncryption)(nil)).Elem()
}

func (o NodePoolLocalDiskEncryptionOutput) ToNodePoolLocalDiskEncryptionOutput() NodePoolLocalDiskEncryptionOutput {
	return o
}

func (o NodePoolLocalDiskEncryptionOutput) ToNodePoolLocalDiskEncryptionOutputWithContext(ctx context.Context) NodePoolLocalDiskEncryptionOutput {
	return o
}

func (o NodePoolLocalDiskEncryptionOutput) ToNodePoolLocalDiskEncryptionPtrOutput() NodePoolLocalDiskEncryptionPtrOutput {
	return o.ToNodePoolLocalDiskEncryptionPtrOutputWithContext(context.Background())
}

func (o NodePoolLocalDiskEncryptionOutput) ToNodePoolLocalDiskEncryptionPtrOutputWithContext(ctx context.Context) NodePoolLocalDiskEncryptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NodePoolLocalDiskEncryption) *NodePoolLocalDiskEncryption {
		return &v
	}).(NodePoolLocalDiskEncryptionPtrOutput)
}

// The Cloud KMS CryptoKey e.g. projects/{project}/locations/{location}/keyRings/{keyRing}/cryptoKeys/{cryptoKey} to use for protecting node local disks.
// If not specified, a Google-managed key will be used instead.
func (o NodePoolLocalDiskEncryptionOutput) KmsKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodePoolLocalDiskEncryption) *string { return v.KmsKey }).(pulumi.StringPtrOutput)
}

// (Output)
// The Cloud KMS CryptoKeyVersion currently in use for protecting node local disks. Only applicable if kmsKey is set.
func (o NodePoolLocalDiskEncryptionOutput) KmsKeyActiveVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodePoolLocalDiskEncryption) *string { return v.KmsKeyActiveVersion }).(pulumi.StringPtrOutput)
}

// (Output)
// Availability of the Cloud KMS CryptoKey. If not KEY_AVAILABLE, then nodes may go offline as they cannot access their local data.
// This can be caused by a lack of permissions to use the key, or if the key is disabled or deleted.
func (o NodePoolLocalDiskEncryptionOutput) KmsKeyState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodePoolLocalDiskEncryption) *string { return v.KmsKeyState }).(pulumi.StringPtrOutput)
}

type NodePoolLocalDiskEncryptionPtrOutput struct{ *pulumi.OutputState }

func (NodePoolLocalDiskEncryptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolLocalDiskEncryption)(nil)).Elem()
}

func (o NodePoolLocalDiskEncryptionPtrOutput) ToNodePoolLocalDiskEncryptionPtrOutput() NodePoolLocalDiskEncryptionPtrOutput {
	return o
}

func (o NodePoolLocalDiskEncryptionPtrOutput) ToNodePoolLocalDiskEncryptionPtrOutputWithContext(ctx context.Context) NodePoolLocalDiskEncryptionPtrOutput {
	return o
}

func (o NodePoolLocalDiskEncryptionPtrOutput) Elem() NodePoolLocalDiskEncryptionOutput {
	return o.ApplyT(func(v *NodePoolLocalDiskEncryption) NodePoolLocalDiskEncryption {
		if v != nil {
			return *v
		}
		var ret NodePoolLocalDiskEncryption
		return ret
	}).(NodePoolLocalDiskEncryptionOutput)
}

// The Cloud KMS CryptoKey e.g. projects/{project}/locations/{location}/keyRings/{keyRing}/cryptoKeys/{cryptoKey} to use for protecting node local disks.
// If not specified, a Google-managed key will be used instead.
func (o NodePoolLocalDiskEncryptionPtrOutput) KmsKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodePoolLocalDiskEncryption) *string {
		if v == nil {
			return nil
		}
		return v.KmsKey
	}).(pulumi.StringPtrOutput)
}

// (Output)
// The Cloud KMS CryptoKeyVersion currently in use for protecting node local disks. Only applicable if kmsKey is set.
func (o NodePoolLocalDiskEncryptionPtrOutput) KmsKeyActiveVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodePoolLocalDiskEncryption) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyActiveVersion
	}).(pulumi.StringPtrOutput)
}

// (Output)
// Availability of the Cloud KMS CryptoKey. If not KEY_AVAILABLE, then nodes may go offline as they cannot access their local data.
// This can be caused by a lack of permissions to use the key, or if the key is disabled or deleted.
func (o NodePoolLocalDiskEncryptionPtrOutput) KmsKeyState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodePoolLocalDiskEncryption) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyState
	}).(pulumi.StringPtrOutput)
}

type NodePoolNodeConfig struct {
	// "The Kubernetes node labels"
	Labels map[string]string `pulumi:"labels"`
}

// NodePoolNodeConfigInput is an input type that accepts NodePoolNodeConfigArgs and NodePoolNodeConfigOutput values.
// You can construct a concrete instance of `NodePoolNodeConfigInput` via:
//
//	NodePoolNodeConfigArgs{...}
type NodePoolNodeConfigInput interface {
	pulumi.Input

	ToNodePoolNodeConfigOutput() NodePoolNodeConfigOutput
	ToNodePoolNodeConfigOutputWithContext(context.Context) NodePoolNodeConfigOutput
}

type NodePoolNodeConfigArgs struct {
	// "The Kubernetes node labels"
	Labels pulumi.StringMapInput `pulumi:"labels"`
}

func (NodePoolNodeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfig)(nil)).Elem()
}

func (i NodePoolNodeConfigArgs) ToNodePoolNodeConfigOutput() NodePoolNodeConfigOutput {
	return i.ToNodePoolNodeConfigOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigArgs) ToNodePoolNodeConfigOutputWithContext(ctx context.Context) NodePoolNodeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigOutput)
}

func (i NodePoolNodeConfigArgs) ToNodePoolNodeConfigPtrOutput() NodePoolNodeConfigPtrOutput {
	return i.ToNodePoolNodeConfigPtrOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigArgs) ToNodePoolNodeConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigOutput).ToNodePoolNodeConfigPtrOutputWithContext(ctx)
}

// NodePoolNodeConfigPtrInput is an input type that accepts NodePoolNodeConfigArgs, NodePoolNodeConfigPtr and NodePoolNodeConfigPtrOutput values.
// You can construct a concrete instance of `NodePoolNodeConfigPtrInput` via:
//
//	        NodePoolNodeConfigArgs{...}
//
//	or:
//
//	        nil
type NodePoolNodeConfigPtrInput interface {
	pulumi.Input

	ToNodePoolNodeConfigPtrOutput() NodePoolNodeConfigPtrOutput
	ToNodePoolNodeConfigPtrOutputWithContext(context.Context) NodePoolNodeConfigPtrOutput
}

type nodePoolNodeConfigPtrType NodePoolNodeConfigArgs

func NodePoolNodeConfigPtr(v *NodePoolNodeConfigArgs) NodePoolNodeConfigPtrInput {
	return (*nodePoolNodeConfigPtrType)(v)
}

func (*nodePoolNodeConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolNodeConfig)(nil)).Elem()
}

func (i *nodePoolNodeConfigPtrType) ToNodePoolNodeConfigPtrOutput() NodePoolNodeConfigPtrOutput {
	return i.ToNodePoolNodeConfigPtrOutputWithContext(context.Background())
}

func (i *nodePoolNodeConfigPtrType) ToNodePoolNodeConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigPtrOutput)
}

type NodePoolNodeConfigOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfig)(nil)).Elem()
}

func (o NodePoolNodeConfigOutput) ToNodePoolNodeConfigOutput() NodePoolNodeConfigOutput {
	return o
}

func (o NodePoolNodeConfigOutput) ToNodePoolNodeConfigOutputWithContext(ctx context.Context) NodePoolNodeConfigOutput {
	return o
}

func (o NodePoolNodeConfigOutput) ToNodePoolNodeConfigPtrOutput() NodePoolNodeConfigPtrOutput {
	return o.ToNodePoolNodeConfigPtrOutputWithContext(context.Background())
}

func (o NodePoolNodeConfigOutput) ToNodePoolNodeConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NodePoolNodeConfig) *NodePoolNodeConfig {
		return &v
	}).(NodePoolNodeConfigPtrOutput)
}

// "The Kubernetes node labels"
func (o NodePoolNodeConfigOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

type NodePoolNodeConfigPtrOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolNodeConfig)(nil)).Elem()
}

func (o NodePoolNodeConfigPtrOutput) ToNodePoolNodeConfigPtrOutput() NodePoolNodeConfigPtrOutput {
	return o
}

func (o NodePoolNodeConfigPtrOutput) ToNodePoolNodeConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigPtrOutput {
	return o
}

func (o NodePoolNodeConfigPtrOutput) Elem() NodePoolNodeConfigOutput {
	return o.ApplyT(func(v *NodePoolNodeConfig) NodePoolNodeConfig {
		if v != nil {
			return *v
		}
		var ret NodePoolNodeConfig
		return ret
	}).(NodePoolNodeConfigOutput)
}

// "The Kubernetes node labels"
func (o NodePoolNodeConfigPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NodePoolNodeConfig) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

type VpnConnectionDetail struct {
	// (Output)
	// The Cloud Router info.
	// Structure is documented below.
	CloudRouters []VpnConnectionDetailCloudRouter `pulumi:"cloudRouters"`
	// (Output)
	// Each connection has multiple Cloud VPN gateways.
	// Structure is documented below.
	CloudVpns []VpnConnectionDetailCloudVpn `pulumi:"cloudVpns"`
	// (Output)
	// The error message. This is only populated when state=ERROR.
	Error *string `pulumi:"error"`
	// (Output)
	// The current connection state.
	State *string `pulumi:"state"`
}

// VpnConnectionDetailInput is an input type that accepts VpnConnectionDetailArgs and VpnConnectionDetailOutput values.
// You can construct a concrete instance of `VpnConnectionDetailInput` via:
//
//	VpnConnectionDetailArgs{...}
type VpnConnectionDetailInput interface {
	pulumi.Input

	ToVpnConnectionDetailOutput() VpnConnectionDetailOutput
	ToVpnConnectionDetailOutputWithContext(context.Context) VpnConnectionDetailOutput
}

type VpnConnectionDetailArgs struct {
	// (Output)
	// The Cloud Router info.
	// Structure is documented below.
	CloudRouters VpnConnectionDetailCloudRouterArrayInput `pulumi:"cloudRouters"`
	// (Output)
	// Each connection has multiple Cloud VPN gateways.
	// Structure is documented below.
	CloudVpns VpnConnectionDetailCloudVpnArrayInput `pulumi:"cloudVpns"`
	// (Output)
	// The error message. This is only populated when state=ERROR.
	Error pulumi.StringPtrInput `pulumi:"error"`
	// (Output)
	// The current connection state.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (VpnConnectionDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnConnectionDetail)(nil)).Elem()
}

func (i VpnConnectionDetailArgs) ToVpnConnectionDetailOutput() VpnConnectionDetailOutput {
	return i.ToVpnConnectionDetailOutputWithContext(context.Background())
}

func (i VpnConnectionDetailArgs) ToVpnConnectionDetailOutputWithContext(ctx context.Context) VpnConnectionDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnConnectionDetailOutput)
}

// VpnConnectionDetailArrayInput is an input type that accepts VpnConnectionDetailArray and VpnConnectionDetailArrayOutput values.
// You can construct a concrete instance of `VpnConnectionDetailArrayInput` via:
//
//	VpnConnectionDetailArray{ VpnConnectionDetailArgs{...} }
type VpnConnectionDetailArrayInput interface {
	pulumi.Input

	ToVpnConnectionDetailArrayOutput() VpnConnectionDetailArrayOutput
	ToVpnConnectionDetailArrayOutputWithContext(context.Context) VpnConnectionDetailArrayOutput
}

type VpnConnectionDetailArray []VpnConnectionDetailInput

func (VpnConnectionDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnConnectionDetail)(nil)).Elem()
}

func (i VpnConnectionDetailArray) ToVpnConnectionDetailArrayOutput() VpnConnectionDetailArrayOutput {
	return i.ToVpnConnectionDetailArrayOutputWithContext(context.Background())
}

func (i VpnConnectionDetailArray) ToVpnConnectionDetailArrayOutputWithContext(ctx context.Context) VpnConnectionDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnConnectionDetailArrayOutput)
}

type VpnConnectionDetailOutput struct{ *pulumi.OutputState }

func (VpnConnectionDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnConnectionDetail)(nil)).Elem()
}

func (o VpnConnectionDetailOutput) ToVpnConnectionDetailOutput() VpnConnectionDetailOutput {
	return o
}

func (o VpnConnectionDetailOutput) ToVpnConnectionDetailOutputWithContext(ctx context.Context) VpnConnectionDetailOutput {
	return o
}

// (Output)
// The Cloud Router info.
// Structure is documented below.
func (o VpnConnectionDetailOutput) CloudRouters() VpnConnectionDetailCloudRouterArrayOutput {
	return o.ApplyT(func(v VpnConnectionDetail) []VpnConnectionDetailCloudRouter { return v.CloudRouters }).(VpnConnectionDetailCloudRouterArrayOutput)
}

// (Output)
// Each connection has multiple Cloud VPN gateways.
// Structure is documented below.
func (o VpnConnectionDetailOutput) CloudVpns() VpnConnectionDetailCloudVpnArrayOutput {
	return o.ApplyT(func(v VpnConnectionDetail) []VpnConnectionDetailCloudVpn { return v.CloudVpns }).(VpnConnectionDetailCloudVpnArrayOutput)
}

// (Output)
// The error message. This is only populated when state=ERROR.
func (o VpnConnectionDetailOutput) Error() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionDetail) *string { return v.Error }).(pulumi.StringPtrOutput)
}

// (Output)
// The current connection state.
func (o VpnConnectionDetailOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionDetail) *string { return v.State }).(pulumi.StringPtrOutput)
}

type VpnConnectionDetailArrayOutput struct{ *pulumi.OutputState }

func (VpnConnectionDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnConnectionDetail)(nil)).Elem()
}

func (o VpnConnectionDetailArrayOutput) ToVpnConnectionDetailArrayOutput() VpnConnectionDetailArrayOutput {
	return o
}

func (o VpnConnectionDetailArrayOutput) ToVpnConnectionDetailArrayOutputWithContext(ctx context.Context) VpnConnectionDetailArrayOutput {
	return o
}

func (o VpnConnectionDetailArrayOutput) Index(i pulumi.IntInput) VpnConnectionDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnConnectionDetail {
		return vs[0].([]VpnConnectionDetail)[vs[1].(int)]
	}).(VpnConnectionDetailOutput)
}

type VpnConnectionDetailCloudRouter struct {
	// The resource name of VPN connection
	Name *string `pulumi:"name"`
}

// VpnConnectionDetailCloudRouterInput is an input type that accepts VpnConnectionDetailCloudRouterArgs and VpnConnectionDetailCloudRouterOutput values.
// You can construct a concrete instance of `VpnConnectionDetailCloudRouterInput` via:
//
//	VpnConnectionDetailCloudRouterArgs{...}
type VpnConnectionDetailCloudRouterInput interface {
	pulumi.Input

	ToVpnConnectionDetailCloudRouterOutput() VpnConnectionDetailCloudRouterOutput
	ToVpnConnectionDetailCloudRouterOutputWithContext(context.Context) VpnConnectionDetailCloudRouterOutput
}

type VpnConnectionDetailCloudRouterArgs struct {
	// The resource name of VPN connection
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (VpnConnectionDetailCloudRouterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnConnectionDetailCloudRouter)(nil)).Elem()
}

func (i VpnConnectionDetailCloudRouterArgs) ToVpnConnectionDetailCloudRouterOutput() VpnConnectionDetailCloudRouterOutput {
	return i.ToVpnConnectionDetailCloudRouterOutputWithContext(context.Background())
}

func (i VpnConnectionDetailCloudRouterArgs) ToVpnConnectionDetailCloudRouterOutputWithContext(ctx context.Context) VpnConnectionDetailCloudRouterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnConnectionDetailCloudRouterOutput)
}

// VpnConnectionDetailCloudRouterArrayInput is an input type that accepts VpnConnectionDetailCloudRouterArray and VpnConnectionDetailCloudRouterArrayOutput values.
// You can construct a concrete instance of `VpnConnectionDetailCloudRouterArrayInput` via:
//
//	VpnConnectionDetailCloudRouterArray{ VpnConnectionDetailCloudRouterArgs{...} }
type VpnConnectionDetailCloudRouterArrayInput interface {
	pulumi.Input

	ToVpnConnectionDetailCloudRouterArrayOutput() VpnConnectionDetailCloudRouterArrayOutput
	ToVpnConnectionDetailCloudRouterArrayOutputWithContext(context.Context) VpnConnectionDetailCloudRouterArrayOutput
}

type VpnConnectionDetailCloudRouterArray []VpnConnectionDetailCloudRouterInput

func (VpnConnectionDetailCloudRouterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnConnectionDetailCloudRouter)(nil)).Elem()
}

func (i VpnConnectionDetailCloudRouterArray) ToVpnConnectionDetailCloudRouterArrayOutput() VpnConnectionDetailCloudRouterArrayOutput {
	return i.ToVpnConnectionDetailCloudRouterArrayOutputWithContext(context.Background())
}

func (i VpnConnectionDetailCloudRouterArray) ToVpnConnectionDetailCloudRouterArrayOutputWithContext(ctx context.Context) VpnConnectionDetailCloudRouterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnConnectionDetailCloudRouterArrayOutput)
}

type VpnConnectionDetailCloudRouterOutput struct{ *pulumi.OutputState }

func (VpnConnectionDetailCloudRouterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnConnectionDetailCloudRouter)(nil)).Elem()
}

func (o VpnConnectionDetailCloudRouterOutput) ToVpnConnectionDetailCloudRouterOutput() VpnConnectionDetailCloudRouterOutput {
	return o
}

func (o VpnConnectionDetailCloudRouterOutput) ToVpnConnectionDetailCloudRouterOutputWithContext(ctx context.Context) VpnConnectionDetailCloudRouterOutput {
	return o
}

// The resource name of VPN connection
func (o VpnConnectionDetailCloudRouterOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionDetailCloudRouter) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type VpnConnectionDetailCloudRouterArrayOutput struct{ *pulumi.OutputState }

func (VpnConnectionDetailCloudRouterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnConnectionDetailCloudRouter)(nil)).Elem()
}

func (o VpnConnectionDetailCloudRouterArrayOutput) ToVpnConnectionDetailCloudRouterArrayOutput() VpnConnectionDetailCloudRouterArrayOutput {
	return o
}

func (o VpnConnectionDetailCloudRouterArrayOutput) ToVpnConnectionDetailCloudRouterArrayOutputWithContext(ctx context.Context) VpnConnectionDetailCloudRouterArrayOutput {
	return o
}

func (o VpnConnectionDetailCloudRouterArrayOutput) Index(i pulumi.IntInput) VpnConnectionDetailCloudRouterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnConnectionDetailCloudRouter {
		return vs[0].([]VpnConnectionDetailCloudRouter)[vs[1].(int)]
	}).(VpnConnectionDetailCloudRouterOutput)
}

type VpnConnectionDetailCloudVpn struct {
	// (Output)
	// The created Cloud VPN gateway name.
	Gateway *string `pulumi:"gateway"`
}

// VpnConnectionDetailCloudVpnInput is an input type that accepts VpnConnectionDetailCloudVpnArgs and VpnConnectionDetailCloudVpnOutput values.
// You can construct a concrete instance of `VpnConnectionDetailCloudVpnInput` via:
//
//	VpnConnectionDetailCloudVpnArgs{...}
type VpnConnectionDetailCloudVpnInput interface {
	pulumi.Input

	ToVpnConnectionDetailCloudVpnOutput() VpnConnectionDetailCloudVpnOutput
	ToVpnConnectionDetailCloudVpnOutputWithContext(context.Context) VpnConnectionDetailCloudVpnOutput
}

type VpnConnectionDetailCloudVpnArgs struct {
	// (Output)
	// The created Cloud VPN gateway name.
	Gateway pulumi.StringPtrInput `pulumi:"gateway"`
}

func (VpnConnectionDetailCloudVpnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnConnectionDetailCloudVpn)(nil)).Elem()
}

func (i VpnConnectionDetailCloudVpnArgs) ToVpnConnectionDetailCloudVpnOutput() VpnConnectionDetailCloudVpnOutput {
	return i.ToVpnConnectionDetailCloudVpnOutputWithContext(context.Background())
}

func (i VpnConnectionDetailCloudVpnArgs) ToVpnConnectionDetailCloudVpnOutputWithContext(ctx context.Context) VpnConnectionDetailCloudVpnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnConnectionDetailCloudVpnOutput)
}

// VpnConnectionDetailCloudVpnArrayInput is an input type that accepts VpnConnectionDetailCloudVpnArray and VpnConnectionDetailCloudVpnArrayOutput values.
// You can construct a concrete instance of `VpnConnectionDetailCloudVpnArrayInput` via:
//
//	VpnConnectionDetailCloudVpnArray{ VpnConnectionDetailCloudVpnArgs{...} }
type VpnConnectionDetailCloudVpnArrayInput interface {
	pulumi.Input

	ToVpnConnectionDetailCloudVpnArrayOutput() VpnConnectionDetailCloudVpnArrayOutput
	ToVpnConnectionDetailCloudVpnArrayOutputWithContext(context.Context) VpnConnectionDetailCloudVpnArrayOutput
}

type VpnConnectionDetailCloudVpnArray []VpnConnectionDetailCloudVpnInput

func (VpnConnectionDetailCloudVpnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnConnectionDetailCloudVpn)(nil)).Elem()
}

func (i VpnConnectionDetailCloudVpnArray) ToVpnConnectionDetailCloudVpnArrayOutput() VpnConnectionDetailCloudVpnArrayOutput {
	return i.ToVpnConnectionDetailCloudVpnArrayOutputWithContext(context.Background())
}

func (i VpnConnectionDetailCloudVpnArray) ToVpnConnectionDetailCloudVpnArrayOutputWithContext(ctx context.Context) VpnConnectionDetailCloudVpnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnConnectionDetailCloudVpnArrayOutput)
}

type VpnConnectionDetailCloudVpnOutput struct{ *pulumi.OutputState }

func (VpnConnectionDetailCloudVpnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnConnectionDetailCloudVpn)(nil)).Elem()
}

func (o VpnConnectionDetailCloudVpnOutput) ToVpnConnectionDetailCloudVpnOutput() VpnConnectionDetailCloudVpnOutput {
	return o
}

func (o VpnConnectionDetailCloudVpnOutput) ToVpnConnectionDetailCloudVpnOutputWithContext(ctx context.Context) VpnConnectionDetailCloudVpnOutput {
	return o
}

// (Output)
// The created Cloud VPN gateway name.
func (o VpnConnectionDetailCloudVpnOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionDetailCloudVpn) *string { return v.Gateway }).(pulumi.StringPtrOutput)
}

type VpnConnectionDetailCloudVpnArrayOutput struct{ *pulumi.OutputState }

func (VpnConnectionDetailCloudVpnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnConnectionDetailCloudVpn)(nil)).Elem()
}

func (o VpnConnectionDetailCloudVpnArrayOutput) ToVpnConnectionDetailCloudVpnArrayOutput() VpnConnectionDetailCloudVpnArrayOutput {
	return o
}

func (o VpnConnectionDetailCloudVpnArrayOutput) ToVpnConnectionDetailCloudVpnArrayOutputWithContext(ctx context.Context) VpnConnectionDetailCloudVpnArrayOutput {
	return o
}

func (o VpnConnectionDetailCloudVpnArrayOutput) Index(i pulumi.IntInput) VpnConnectionDetailCloudVpnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnConnectionDetailCloudVpn {
		return vs[0].([]VpnConnectionDetailCloudVpn)[vs[1].(int)]
	}).(VpnConnectionDetailCloudVpnOutput)
}

type VpnConnectionVpcProject struct {
	// The project of the VPC to connect to. If not specified, it is the same as the cluster project.
	ProjectId *string `pulumi:"projectId"`
}

// VpnConnectionVpcProjectInput is an input type that accepts VpnConnectionVpcProjectArgs and VpnConnectionVpcProjectOutput values.
// You can construct a concrete instance of `VpnConnectionVpcProjectInput` via:
//
//	VpnConnectionVpcProjectArgs{...}
type VpnConnectionVpcProjectInput interface {
	pulumi.Input

	ToVpnConnectionVpcProjectOutput() VpnConnectionVpcProjectOutput
	ToVpnConnectionVpcProjectOutputWithContext(context.Context) VpnConnectionVpcProjectOutput
}

type VpnConnectionVpcProjectArgs struct {
	// The project of the VPC to connect to. If not specified, it is the same as the cluster project.
	ProjectId pulumi.StringPtrInput `pulumi:"projectId"`
}

func (VpnConnectionVpcProjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnConnectionVpcProject)(nil)).Elem()
}

func (i VpnConnectionVpcProjectArgs) ToVpnConnectionVpcProjectOutput() VpnConnectionVpcProjectOutput {
	return i.ToVpnConnectionVpcProjectOutputWithContext(context.Background())
}

func (i VpnConnectionVpcProjectArgs) ToVpnConnectionVpcProjectOutputWithContext(ctx context.Context) VpnConnectionVpcProjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnConnectionVpcProjectOutput)
}

func (i VpnConnectionVpcProjectArgs) ToVpnConnectionVpcProjectPtrOutput() VpnConnectionVpcProjectPtrOutput {
	return i.ToVpnConnectionVpcProjectPtrOutputWithContext(context.Background())
}

func (i VpnConnectionVpcProjectArgs) ToVpnConnectionVpcProjectPtrOutputWithContext(ctx context.Context) VpnConnectionVpcProjectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnConnectionVpcProjectOutput).ToVpnConnectionVpcProjectPtrOutputWithContext(ctx)
}

// VpnConnectionVpcProjectPtrInput is an input type that accepts VpnConnectionVpcProjectArgs, VpnConnectionVpcProjectPtr and VpnConnectionVpcProjectPtrOutput values.
// You can construct a concrete instance of `VpnConnectionVpcProjectPtrInput` via:
//
//	        VpnConnectionVpcProjectArgs{...}
//
//	or:
//
//	        nil
type VpnConnectionVpcProjectPtrInput interface {
	pulumi.Input

	ToVpnConnectionVpcProjectPtrOutput() VpnConnectionVpcProjectPtrOutput
	ToVpnConnectionVpcProjectPtrOutputWithContext(context.Context) VpnConnectionVpcProjectPtrOutput
}

type vpnConnectionVpcProjectPtrType VpnConnectionVpcProjectArgs

func VpnConnectionVpcProjectPtr(v *VpnConnectionVpcProjectArgs) VpnConnectionVpcProjectPtrInput {
	return (*vpnConnectionVpcProjectPtrType)(v)
}

func (*vpnConnectionVpcProjectPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnConnectionVpcProject)(nil)).Elem()
}

func (i *vpnConnectionVpcProjectPtrType) ToVpnConnectionVpcProjectPtrOutput() VpnConnectionVpcProjectPtrOutput {
	return i.ToVpnConnectionVpcProjectPtrOutputWithContext(context.Background())
}

func (i *vpnConnectionVpcProjectPtrType) ToVpnConnectionVpcProjectPtrOutputWithContext(ctx context.Context) VpnConnectionVpcProjectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnConnectionVpcProjectPtrOutput)
}

type VpnConnectionVpcProjectOutput struct{ *pulumi.OutputState }

func (VpnConnectionVpcProjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnConnectionVpcProject)(nil)).Elem()
}

func (o VpnConnectionVpcProjectOutput) ToVpnConnectionVpcProjectOutput() VpnConnectionVpcProjectOutput {
	return o
}

func (o VpnConnectionVpcProjectOutput) ToVpnConnectionVpcProjectOutputWithContext(ctx context.Context) VpnConnectionVpcProjectOutput {
	return o
}

func (o VpnConnectionVpcProjectOutput) ToVpnConnectionVpcProjectPtrOutput() VpnConnectionVpcProjectPtrOutput {
	return o.ToVpnConnectionVpcProjectPtrOutputWithContext(context.Background())
}

func (o VpnConnectionVpcProjectOutput) ToVpnConnectionVpcProjectPtrOutputWithContext(ctx context.Context) VpnConnectionVpcProjectPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VpnConnectionVpcProject) *VpnConnectionVpcProject {
		return &v
	}).(VpnConnectionVpcProjectPtrOutput)
}

// The project of the VPC to connect to. If not specified, it is the same as the cluster project.
func (o VpnConnectionVpcProjectOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionVpcProject) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

type VpnConnectionVpcProjectPtrOutput struct{ *pulumi.OutputState }

func (VpnConnectionVpcProjectPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnConnectionVpcProject)(nil)).Elem()
}

func (o VpnConnectionVpcProjectPtrOutput) ToVpnConnectionVpcProjectPtrOutput() VpnConnectionVpcProjectPtrOutput {
	return o
}

func (o VpnConnectionVpcProjectPtrOutput) ToVpnConnectionVpcProjectPtrOutputWithContext(ctx context.Context) VpnConnectionVpcProjectPtrOutput {
	return o
}

func (o VpnConnectionVpcProjectPtrOutput) Elem() VpnConnectionVpcProjectOutput {
	return o.ApplyT(func(v *VpnConnectionVpcProject) VpnConnectionVpcProject {
		if v != nil {
			return *v
		}
		var ret VpnConnectionVpcProject
		return ret
	}).(VpnConnectionVpcProjectOutput)
}

// The project of the VPC to connect to. If not specified, it is the same as the cluster project.
func (o VpnConnectionVpcProjectPtrOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnConnectionVpcProject) *string {
		if v == nil {
			return nil
		}
		return v.ProjectId
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAuthorizationInput)(nil)).Elem(), ClusterAuthorizationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAuthorizationPtrInput)(nil)).Elem(), ClusterAuthorizationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAuthorizationAdminUsersInput)(nil)).Elem(), ClusterAuthorizationAdminUsersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAuthorizationAdminUsersPtrInput)(nil)).Elem(), ClusterAuthorizationAdminUsersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterControlPlaneInput)(nil)).Elem(), ClusterControlPlaneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterControlPlanePtrInput)(nil)).Elem(), ClusterControlPlaneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterControlPlaneEncryptionInput)(nil)).Elem(), ClusterControlPlaneEncryptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterControlPlaneEncryptionPtrInput)(nil)).Elem(), ClusterControlPlaneEncryptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterControlPlaneEncryptionKmsStatusInput)(nil)).Elem(), ClusterControlPlaneEncryptionKmsStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterControlPlaneEncryptionKmsStatusArrayInput)(nil)).Elem(), ClusterControlPlaneEncryptionKmsStatusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterControlPlaneLocalInput)(nil)).Elem(), ClusterControlPlaneLocalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterControlPlaneLocalPtrInput)(nil)).Elem(), ClusterControlPlaneLocalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterControlPlaneRemoteInput)(nil)).Elem(), ClusterControlPlaneRemoteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterControlPlaneRemotePtrInput)(nil)).Elem(), ClusterControlPlaneRemoteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterFleetInput)(nil)).Elem(), ClusterFleetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterFleetPtrInput)(nil)).Elem(), ClusterFleetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterMaintenanceEventInput)(nil)).Elem(), ClusterMaintenanceEventArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterMaintenanceEventArrayInput)(nil)).Elem(), ClusterMaintenanceEventArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterMaintenancePolicyInput)(nil)).Elem(), ClusterMaintenancePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterMaintenancePolicyPtrInput)(nil)).Elem(), ClusterMaintenancePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterMaintenancePolicyMaintenanceExclusionInput)(nil)).Elem(), ClusterMaintenancePolicyMaintenanceExclusionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterMaintenancePolicyMaintenanceExclusionArrayInput)(nil)).Elem(), ClusterMaintenancePolicyMaintenanceExclusionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterMaintenancePolicyMaintenanceExclusionWindowInput)(nil)).Elem(), ClusterMaintenancePolicyMaintenanceExclusionWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterMaintenancePolicyMaintenanceExclusionWindowPtrInput)(nil)).Elem(), ClusterMaintenancePolicyMaintenanceExclusionWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterMaintenancePolicyWindowInput)(nil)).Elem(), ClusterMaintenancePolicyWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterMaintenancePolicyWindowPtrInput)(nil)).Elem(), ClusterMaintenancePolicyWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterMaintenancePolicyWindowRecurringWindowInput)(nil)).Elem(), ClusterMaintenancePolicyWindowRecurringWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterMaintenancePolicyWindowRecurringWindowPtrInput)(nil)).Elem(), ClusterMaintenancePolicyWindowRecurringWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterMaintenancePolicyWindowRecurringWindowWindowInput)(nil)).Elem(), ClusterMaintenancePolicyWindowRecurringWindowWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterMaintenancePolicyWindowRecurringWindowWindowPtrInput)(nil)).Elem(), ClusterMaintenancePolicyWindowRecurringWindowWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNetworkingInput)(nil)).Elem(), ClusterNetworkingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNetworkingPtrInput)(nil)).Elem(), ClusterNetworkingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSystemAddonsConfigInput)(nil)).Elem(), ClusterSystemAddonsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSystemAddonsConfigPtrInput)(nil)).Elem(), ClusterSystemAddonsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSystemAddonsConfigIngressInput)(nil)).Elem(), ClusterSystemAddonsConfigIngressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSystemAddonsConfigIngressPtrInput)(nil)).Elem(), ClusterSystemAddonsConfigIngressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolLocalDiskEncryptionInput)(nil)).Elem(), NodePoolLocalDiskEncryptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolLocalDiskEncryptionPtrInput)(nil)).Elem(), NodePoolLocalDiskEncryptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolNodeConfigInput)(nil)).Elem(), NodePoolNodeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolNodeConfigPtrInput)(nil)).Elem(), NodePoolNodeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnConnectionDetailInput)(nil)).Elem(), VpnConnectionDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnConnectionDetailArrayInput)(nil)).Elem(), VpnConnectionDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnConnectionDetailCloudRouterInput)(nil)).Elem(), VpnConnectionDetailCloudRouterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnConnectionDetailCloudRouterArrayInput)(nil)).Elem(), VpnConnectionDetailCloudRouterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnConnectionDetailCloudVpnInput)(nil)).Elem(), VpnConnectionDetailCloudVpnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnConnectionDetailCloudVpnArrayInput)(nil)).Elem(), VpnConnectionDetailCloudVpnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnConnectionVpcProjectInput)(nil)).Elem(), VpnConnectionVpcProjectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnConnectionVpcProjectPtrInput)(nil)).Elem(), VpnConnectionVpcProjectArgs{})
	pulumi.RegisterOutputType(ClusterAuthorizationOutput{})
	pulumi.RegisterOutputType(ClusterAuthorizationPtrOutput{})
	pulumi.RegisterOutputType(ClusterAuthorizationAdminUsersOutput{})
	pulumi.RegisterOutputType(ClusterAuthorizationAdminUsersPtrOutput{})
	pulumi.RegisterOutputType(ClusterControlPlaneOutput{})
	pulumi.RegisterOutputType(ClusterControlPlanePtrOutput{})
	pulumi.RegisterOutputType(ClusterControlPlaneEncryptionOutput{})
	pulumi.RegisterOutputType(ClusterControlPlaneEncryptionPtrOutput{})
	pulumi.RegisterOutputType(ClusterControlPlaneEncryptionKmsStatusOutput{})
	pulumi.RegisterOutputType(ClusterControlPlaneEncryptionKmsStatusArrayOutput{})
	pulumi.RegisterOutputType(ClusterControlPlaneLocalOutput{})
	pulumi.RegisterOutputType(ClusterControlPlaneLocalPtrOutput{})
	pulumi.RegisterOutputType(ClusterControlPlaneRemoteOutput{})
	pulumi.RegisterOutputType(ClusterControlPlaneRemotePtrOutput{})
	pulumi.RegisterOutputType(ClusterFleetOutput{})
	pulumi.RegisterOutputType(ClusterFleetPtrOutput{})
	pulumi.RegisterOutputType(ClusterMaintenanceEventOutput{})
	pulumi.RegisterOutputType(ClusterMaintenanceEventArrayOutput{})
	pulumi.RegisterOutputType(ClusterMaintenancePolicyOutput{})
	pulumi.RegisterOutputType(ClusterMaintenancePolicyPtrOutput{})
	pulumi.RegisterOutputType(ClusterMaintenancePolicyMaintenanceExclusionOutput{})
	pulumi.RegisterOutputType(ClusterMaintenancePolicyMaintenanceExclusionArrayOutput{})
	pulumi.RegisterOutputType(ClusterMaintenancePolicyMaintenanceExclusionWindowOutput{})
	pulumi.RegisterOutputType(ClusterMaintenancePolicyMaintenanceExclusionWindowPtrOutput{})
	pulumi.RegisterOutputType(ClusterMaintenancePolicyWindowOutput{})
	pulumi.RegisterOutputType(ClusterMaintenancePolicyWindowPtrOutput{})
	pulumi.RegisterOutputType(ClusterMaintenancePolicyWindowRecurringWindowOutput{})
	pulumi.RegisterOutputType(ClusterMaintenancePolicyWindowRecurringWindowPtrOutput{})
	pulumi.RegisterOutputType(ClusterMaintenancePolicyWindowRecurringWindowWindowOutput{})
	pulumi.RegisterOutputType(ClusterMaintenancePolicyWindowRecurringWindowWindowPtrOutput{})
	pulumi.RegisterOutputType(ClusterNetworkingOutput{})
	pulumi.RegisterOutputType(ClusterNetworkingPtrOutput{})
	pulumi.RegisterOutputType(ClusterSystemAddonsConfigOutput{})
	pulumi.RegisterOutputType(ClusterSystemAddonsConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterSystemAddonsConfigIngressOutput{})
	pulumi.RegisterOutputType(ClusterSystemAddonsConfigIngressPtrOutput{})
	pulumi.RegisterOutputType(NodePoolLocalDiskEncryptionOutput{})
	pulumi.RegisterOutputType(NodePoolLocalDiskEncryptionPtrOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigPtrOutput{})
	pulumi.RegisterOutputType(VpnConnectionDetailOutput{})
	pulumi.RegisterOutputType(VpnConnectionDetailArrayOutput{})
	pulumi.RegisterOutputType(VpnConnectionDetailCloudRouterOutput{})
	pulumi.RegisterOutputType(VpnConnectionDetailCloudRouterArrayOutput{})
	pulumi.RegisterOutputType(VpnConnectionDetailCloudVpnOutput{})
	pulumi.RegisterOutputType(VpnConnectionDetailCloudVpnArrayOutput{})
	pulumi.RegisterOutputType(VpnConnectionVpcProjectOutput{})
	pulumi.RegisterOutputType(VpnConnectionVpcProjectPtrOutput{})
}
