// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package redis

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type ClusterAutomatedBackupConfig struct {
	// Trigger automated backups at a fixed frequency.
	// Structure is documented below.
	FixedFrequencySchedule ClusterAutomatedBackupConfigFixedFrequencySchedule `pulumi:"fixedFrequencySchedule"`
	// How long to keep automated backups before the backups are deleted.
	// The value should be between 1 day and 365 days. If not specified, the default value is 35 days.
	// A duration in seconds with up to nine fractional digits, ending with 's'. Example: "3.5s".
	Retention string `pulumi:"retention"`
}

// ClusterAutomatedBackupConfigInput is an input type that accepts ClusterAutomatedBackupConfigArgs and ClusterAutomatedBackupConfigOutput values.
// You can construct a concrete instance of `ClusterAutomatedBackupConfigInput` via:
//
//	ClusterAutomatedBackupConfigArgs{...}
type ClusterAutomatedBackupConfigInput interface {
	pulumi.Input

	ToClusterAutomatedBackupConfigOutput() ClusterAutomatedBackupConfigOutput
	ToClusterAutomatedBackupConfigOutputWithContext(context.Context) ClusterAutomatedBackupConfigOutput
}

type ClusterAutomatedBackupConfigArgs struct {
	// Trigger automated backups at a fixed frequency.
	// Structure is documented below.
	FixedFrequencySchedule ClusterAutomatedBackupConfigFixedFrequencyScheduleInput `pulumi:"fixedFrequencySchedule"`
	// How long to keep automated backups before the backups are deleted.
	// The value should be between 1 day and 365 days. If not specified, the default value is 35 days.
	// A duration in seconds with up to nine fractional digits, ending with 's'. Example: "3.5s".
	Retention pulumi.StringInput `pulumi:"retention"`
}

func (ClusterAutomatedBackupConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAutomatedBackupConfig)(nil)).Elem()
}

func (i ClusterAutomatedBackupConfigArgs) ToClusterAutomatedBackupConfigOutput() ClusterAutomatedBackupConfigOutput {
	return i.ToClusterAutomatedBackupConfigOutputWithContext(context.Background())
}

func (i ClusterAutomatedBackupConfigArgs) ToClusterAutomatedBackupConfigOutputWithContext(ctx context.Context) ClusterAutomatedBackupConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAutomatedBackupConfigOutput)
}

func (i ClusterAutomatedBackupConfigArgs) ToClusterAutomatedBackupConfigPtrOutput() ClusterAutomatedBackupConfigPtrOutput {
	return i.ToClusterAutomatedBackupConfigPtrOutputWithContext(context.Background())
}

func (i ClusterAutomatedBackupConfigArgs) ToClusterAutomatedBackupConfigPtrOutputWithContext(ctx context.Context) ClusterAutomatedBackupConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAutomatedBackupConfigOutput).ToClusterAutomatedBackupConfigPtrOutputWithContext(ctx)
}

// ClusterAutomatedBackupConfigPtrInput is an input type that accepts ClusterAutomatedBackupConfigArgs, ClusterAutomatedBackupConfigPtr and ClusterAutomatedBackupConfigPtrOutput values.
// You can construct a concrete instance of `ClusterAutomatedBackupConfigPtrInput` via:
//
//	        ClusterAutomatedBackupConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterAutomatedBackupConfigPtrInput interface {
	pulumi.Input

	ToClusterAutomatedBackupConfigPtrOutput() ClusterAutomatedBackupConfigPtrOutput
	ToClusterAutomatedBackupConfigPtrOutputWithContext(context.Context) ClusterAutomatedBackupConfigPtrOutput
}

type clusterAutomatedBackupConfigPtrType ClusterAutomatedBackupConfigArgs

func ClusterAutomatedBackupConfigPtr(v *ClusterAutomatedBackupConfigArgs) ClusterAutomatedBackupConfigPtrInput {
	return (*clusterAutomatedBackupConfigPtrType)(v)
}

func (*clusterAutomatedBackupConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAutomatedBackupConfig)(nil)).Elem()
}

func (i *clusterAutomatedBackupConfigPtrType) ToClusterAutomatedBackupConfigPtrOutput() ClusterAutomatedBackupConfigPtrOutput {
	return i.ToClusterAutomatedBackupConfigPtrOutputWithContext(context.Background())
}

func (i *clusterAutomatedBackupConfigPtrType) ToClusterAutomatedBackupConfigPtrOutputWithContext(ctx context.Context) ClusterAutomatedBackupConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAutomatedBackupConfigPtrOutput)
}

type ClusterAutomatedBackupConfigOutput struct{ *pulumi.OutputState }

func (ClusterAutomatedBackupConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAutomatedBackupConfig)(nil)).Elem()
}

func (o ClusterAutomatedBackupConfigOutput) ToClusterAutomatedBackupConfigOutput() ClusterAutomatedBackupConfigOutput {
	return o
}

func (o ClusterAutomatedBackupConfigOutput) ToClusterAutomatedBackupConfigOutputWithContext(ctx context.Context) ClusterAutomatedBackupConfigOutput {
	return o
}

func (o ClusterAutomatedBackupConfigOutput) ToClusterAutomatedBackupConfigPtrOutput() ClusterAutomatedBackupConfigPtrOutput {
	return o.ToClusterAutomatedBackupConfigPtrOutputWithContext(context.Background())
}

func (o ClusterAutomatedBackupConfigOutput) ToClusterAutomatedBackupConfigPtrOutputWithContext(ctx context.Context) ClusterAutomatedBackupConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterAutomatedBackupConfig) *ClusterAutomatedBackupConfig {
		return &v
	}).(ClusterAutomatedBackupConfigPtrOutput)
}

// Trigger automated backups at a fixed frequency.
// Structure is documented below.
func (o ClusterAutomatedBackupConfigOutput) FixedFrequencySchedule() ClusterAutomatedBackupConfigFixedFrequencyScheduleOutput {
	return o.ApplyT(func(v ClusterAutomatedBackupConfig) ClusterAutomatedBackupConfigFixedFrequencySchedule {
		return v.FixedFrequencySchedule
	}).(ClusterAutomatedBackupConfigFixedFrequencyScheduleOutput)
}

// How long to keep automated backups before the backups are deleted.
// The value should be between 1 day and 365 days. If not specified, the default value is 35 days.
// A duration in seconds with up to nine fractional digits, ending with 's'. Example: "3.5s".
func (o ClusterAutomatedBackupConfigOutput) Retention() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterAutomatedBackupConfig) string { return v.Retention }).(pulumi.StringOutput)
}

type ClusterAutomatedBackupConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterAutomatedBackupConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAutomatedBackupConfig)(nil)).Elem()
}

func (o ClusterAutomatedBackupConfigPtrOutput) ToClusterAutomatedBackupConfigPtrOutput() ClusterAutomatedBackupConfigPtrOutput {
	return o
}

func (o ClusterAutomatedBackupConfigPtrOutput) ToClusterAutomatedBackupConfigPtrOutputWithContext(ctx context.Context) ClusterAutomatedBackupConfigPtrOutput {
	return o
}

func (o ClusterAutomatedBackupConfigPtrOutput) Elem() ClusterAutomatedBackupConfigOutput {
	return o.ApplyT(func(v *ClusterAutomatedBackupConfig) ClusterAutomatedBackupConfig {
		if v != nil {
			return *v
		}
		var ret ClusterAutomatedBackupConfig
		return ret
	}).(ClusterAutomatedBackupConfigOutput)
}

// Trigger automated backups at a fixed frequency.
// Structure is documented below.
func (o ClusterAutomatedBackupConfigPtrOutput) FixedFrequencySchedule() ClusterAutomatedBackupConfigFixedFrequencySchedulePtrOutput {
	return o.ApplyT(func(v *ClusterAutomatedBackupConfig) *ClusterAutomatedBackupConfigFixedFrequencySchedule {
		if v == nil {
			return nil
		}
		return &v.FixedFrequencySchedule
	}).(ClusterAutomatedBackupConfigFixedFrequencySchedulePtrOutput)
}

// How long to keep automated backups before the backups are deleted.
// The value should be between 1 day and 365 days. If not specified, the default value is 35 days.
// A duration in seconds with up to nine fractional digits, ending with 's'. Example: "3.5s".
func (o ClusterAutomatedBackupConfigPtrOutput) Retention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterAutomatedBackupConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Retention
	}).(pulumi.StringPtrOutput)
}

type ClusterAutomatedBackupConfigFixedFrequencySchedule struct {
	// The start time of every automated backup in UTC.
	// It must be set to the start of an hour. This field is required.
	// Structure is documented below.
	StartTime ClusterAutomatedBackupConfigFixedFrequencyScheduleStartTime `pulumi:"startTime"`
}

// ClusterAutomatedBackupConfigFixedFrequencyScheduleInput is an input type that accepts ClusterAutomatedBackupConfigFixedFrequencyScheduleArgs and ClusterAutomatedBackupConfigFixedFrequencyScheduleOutput values.
// You can construct a concrete instance of `ClusterAutomatedBackupConfigFixedFrequencyScheduleInput` via:
//
//	ClusterAutomatedBackupConfigFixedFrequencyScheduleArgs{...}
type ClusterAutomatedBackupConfigFixedFrequencyScheduleInput interface {
	pulumi.Input

	ToClusterAutomatedBackupConfigFixedFrequencyScheduleOutput() ClusterAutomatedBackupConfigFixedFrequencyScheduleOutput
	ToClusterAutomatedBackupConfigFixedFrequencyScheduleOutputWithContext(context.Context) ClusterAutomatedBackupConfigFixedFrequencyScheduleOutput
}

type ClusterAutomatedBackupConfigFixedFrequencyScheduleArgs struct {
	// The start time of every automated backup in UTC.
	// It must be set to the start of an hour. This field is required.
	// Structure is documented below.
	StartTime ClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeInput `pulumi:"startTime"`
}

func (ClusterAutomatedBackupConfigFixedFrequencyScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAutomatedBackupConfigFixedFrequencySchedule)(nil)).Elem()
}

func (i ClusterAutomatedBackupConfigFixedFrequencyScheduleArgs) ToClusterAutomatedBackupConfigFixedFrequencyScheduleOutput() ClusterAutomatedBackupConfigFixedFrequencyScheduleOutput {
	return i.ToClusterAutomatedBackupConfigFixedFrequencyScheduleOutputWithContext(context.Background())
}

func (i ClusterAutomatedBackupConfigFixedFrequencyScheduleArgs) ToClusterAutomatedBackupConfigFixedFrequencyScheduleOutputWithContext(ctx context.Context) ClusterAutomatedBackupConfigFixedFrequencyScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAutomatedBackupConfigFixedFrequencyScheduleOutput)
}

func (i ClusterAutomatedBackupConfigFixedFrequencyScheduleArgs) ToClusterAutomatedBackupConfigFixedFrequencySchedulePtrOutput() ClusterAutomatedBackupConfigFixedFrequencySchedulePtrOutput {
	return i.ToClusterAutomatedBackupConfigFixedFrequencySchedulePtrOutputWithContext(context.Background())
}

func (i ClusterAutomatedBackupConfigFixedFrequencyScheduleArgs) ToClusterAutomatedBackupConfigFixedFrequencySchedulePtrOutputWithContext(ctx context.Context) ClusterAutomatedBackupConfigFixedFrequencySchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAutomatedBackupConfigFixedFrequencyScheduleOutput).ToClusterAutomatedBackupConfigFixedFrequencySchedulePtrOutputWithContext(ctx)
}

// ClusterAutomatedBackupConfigFixedFrequencySchedulePtrInput is an input type that accepts ClusterAutomatedBackupConfigFixedFrequencyScheduleArgs, ClusterAutomatedBackupConfigFixedFrequencySchedulePtr and ClusterAutomatedBackupConfigFixedFrequencySchedulePtrOutput values.
// You can construct a concrete instance of `ClusterAutomatedBackupConfigFixedFrequencySchedulePtrInput` via:
//
//	        ClusterAutomatedBackupConfigFixedFrequencyScheduleArgs{...}
//
//	or:
//
//	        nil
type ClusterAutomatedBackupConfigFixedFrequencySchedulePtrInput interface {
	pulumi.Input

	ToClusterAutomatedBackupConfigFixedFrequencySchedulePtrOutput() ClusterAutomatedBackupConfigFixedFrequencySchedulePtrOutput
	ToClusterAutomatedBackupConfigFixedFrequencySchedulePtrOutputWithContext(context.Context) ClusterAutomatedBackupConfigFixedFrequencySchedulePtrOutput
}

type clusterAutomatedBackupConfigFixedFrequencySchedulePtrType ClusterAutomatedBackupConfigFixedFrequencyScheduleArgs

func ClusterAutomatedBackupConfigFixedFrequencySchedulePtr(v *ClusterAutomatedBackupConfigFixedFrequencyScheduleArgs) ClusterAutomatedBackupConfigFixedFrequencySchedulePtrInput {
	return (*clusterAutomatedBackupConfigFixedFrequencySchedulePtrType)(v)
}

func (*clusterAutomatedBackupConfigFixedFrequencySchedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAutomatedBackupConfigFixedFrequencySchedule)(nil)).Elem()
}

func (i *clusterAutomatedBackupConfigFixedFrequencySchedulePtrType) ToClusterAutomatedBackupConfigFixedFrequencySchedulePtrOutput() ClusterAutomatedBackupConfigFixedFrequencySchedulePtrOutput {
	return i.ToClusterAutomatedBackupConfigFixedFrequencySchedulePtrOutputWithContext(context.Background())
}

func (i *clusterAutomatedBackupConfigFixedFrequencySchedulePtrType) ToClusterAutomatedBackupConfigFixedFrequencySchedulePtrOutputWithContext(ctx context.Context) ClusterAutomatedBackupConfigFixedFrequencySchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAutomatedBackupConfigFixedFrequencySchedulePtrOutput)
}

type ClusterAutomatedBackupConfigFixedFrequencyScheduleOutput struct{ *pulumi.OutputState }

func (ClusterAutomatedBackupConfigFixedFrequencyScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAutomatedBackupConfigFixedFrequencySchedule)(nil)).Elem()
}

func (o ClusterAutomatedBackupConfigFixedFrequencyScheduleOutput) ToClusterAutomatedBackupConfigFixedFrequencyScheduleOutput() ClusterAutomatedBackupConfigFixedFrequencyScheduleOutput {
	return o
}

func (o ClusterAutomatedBackupConfigFixedFrequencyScheduleOutput) ToClusterAutomatedBackupConfigFixedFrequencyScheduleOutputWithContext(ctx context.Context) ClusterAutomatedBackupConfigFixedFrequencyScheduleOutput {
	return o
}

func (o ClusterAutomatedBackupConfigFixedFrequencyScheduleOutput) ToClusterAutomatedBackupConfigFixedFrequencySchedulePtrOutput() ClusterAutomatedBackupConfigFixedFrequencySchedulePtrOutput {
	return o.ToClusterAutomatedBackupConfigFixedFrequencySchedulePtrOutputWithContext(context.Background())
}

func (o ClusterAutomatedBackupConfigFixedFrequencyScheduleOutput) ToClusterAutomatedBackupConfigFixedFrequencySchedulePtrOutputWithContext(ctx context.Context) ClusterAutomatedBackupConfigFixedFrequencySchedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterAutomatedBackupConfigFixedFrequencySchedule) *ClusterAutomatedBackupConfigFixedFrequencySchedule {
		return &v
	}).(ClusterAutomatedBackupConfigFixedFrequencySchedulePtrOutput)
}

// The start time of every automated backup in UTC.
// It must be set to the start of an hour. This field is required.
// Structure is documented below.
func (o ClusterAutomatedBackupConfigFixedFrequencyScheduleOutput) StartTime() ClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeOutput {
	return o.ApplyT(func(v ClusterAutomatedBackupConfigFixedFrequencySchedule) ClusterAutomatedBackupConfigFixedFrequencyScheduleStartTime {
		return v.StartTime
	}).(ClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeOutput)
}

type ClusterAutomatedBackupConfigFixedFrequencySchedulePtrOutput struct{ *pulumi.OutputState }

func (ClusterAutomatedBackupConfigFixedFrequencySchedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAutomatedBackupConfigFixedFrequencySchedule)(nil)).Elem()
}

func (o ClusterAutomatedBackupConfigFixedFrequencySchedulePtrOutput) ToClusterAutomatedBackupConfigFixedFrequencySchedulePtrOutput() ClusterAutomatedBackupConfigFixedFrequencySchedulePtrOutput {
	return o
}

func (o ClusterAutomatedBackupConfigFixedFrequencySchedulePtrOutput) ToClusterAutomatedBackupConfigFixedFrequencySchedulePtrOutputWithContext(ctx context.Context) ClusterAutomatedBackupConfigFixedFrequencySchedulePtrOutput {
	return o
}

func (o ClusterAutomatedBackupConfigFixedFrequencySchedulePtrOutput) Elem() ClusterAutomatedBackupConfigFixedFrequencyScheduleOutput {
	return o.ApplyT(func(v *ClusterAutomatedBackupConfigFixedFrequencySchedule) ClusterAutomatedBackupConfigFixedFrequencySchedule {
		if v != nil {
			return *v
		}
		var ret ClusterAutomatedBackupConfigFixedFrequencySchedule
		return ret
	}).(ClusterAutomatedBackupConfigFixedFrequencyScheduleOutput)
}

// The start time of every automated backup in UTC.
// It must be set to the start of an hour. This field is required.
// Structure is documented below.
func (o ClusterAutomatedBackupConfigFixedFrequencySchedulePtrOutput) StartTime() ClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimePtrOutput {
	return o.ApplyT(func(v *ClusterAutomatedBackupConfigFixedFrequencySchedule) *ClusterAutomatedBackupConfigFixedFrequencyScheduleStartTime {
		if v == nil {
			return nil
		}
		return &v.StartTime
	}).(ClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimePtrOutput)
}

type ClusterAutomatedBackupConfigFixedFrequencyScheduleStartTime struct {
	// Hours of day in 24 hour format. Should be from 0 to 23.
	// An API may choose to allow the value "24:00:00" for scenarios like business closing time.
	Hours int `pulumi:"hours"`
}

// ClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeInput is an input type that accepts ClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeArgs and ClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeOutput values.
// You can construct a concrete instance of `ClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeInput` via:
//
//	ClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeArgs{...}
type ClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeInput interface {
	pulumi.Input

	ToClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeOutput() ClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeOutput
	ToClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeOutputWithContext(context.Context) ClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeOutput
}

type ClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeArgs struct {
	// Hours of day in 24 hour format. Should be from 0 to 23.
	// An API may choose to allow the value "24:00:00" for scenarios like business closing time.
	Hours pulumi.IntInput `pulumi:"hours"`
}

func (ClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAutomatedBackupConfigFixedFrequencyScheduleStartTime)(nil)).Elem()
}

func (i ClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeArgs) ToClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeOutput() ClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeOutput {
	return i.ToClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeOutputWithContext(context.Background())
}

func (i ClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeArgs) ToClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeOutputWithContext(ctx context.Context) ClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeOutput)
}

func (i ClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeArgs) ToClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimePtrOutput() ClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimePtrOutput {
	return i.ToClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimePtrOutputWithContext(context.Background())
}

func (i ClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeArgs) ToClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimePtrOutputWithContext(ctx context.Context) ClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeOutput).ToClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimePtrOutputWithContext(ctx)
}

// ClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimePtrInput is an input type that accepts ClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeArgs, ClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimePtr and ClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimePtrOutput values.
// You can construct a concrete instance of `ClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimePtrInput` via:
//
//	        ClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeArgs{...}
//
//	or:
//
//	        nil
type ClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimePtrInput interface {
	pulumi.Input

	ToClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimePtrOutput() ClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimePtrOutput
	ToClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimePtrOutputWithContext(context.Context) ClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimePtrOutput
}

type clusterAutomatedBackupConfigFixedFrequencyScheduleStartTimePtrType ClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeArgs

func ClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimePtr(v *ClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeArgs) ClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimePtrInput {
	return (*clusterAutomatedBackupConfigFixedFrequencyScheduleStartTimePtrType)(v)
}

func (*clusterAutomatedBackupConfigFixedFrequencyScheduleStartTimePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAutomatedBackupConfigFixedFrequencyScheduleStartTime)(nil)).Elem()
}

func (i *clusterAutomatedBackupConfigFixedFrequencyScheduleStartTimePtrType) ToClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimePtrOutput() ClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimePtrOutput {
	return i.ToClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimePtrOutputWithContext(context.Background())
}

func (i *clusterAutomatedBackupConfigFixedFrequencyScheduleStartTimePtrType) ToClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimePtrOutputWithContext(ctx context.Context) ClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimePtrOutput)
}

type ClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeOutput struct{ *pulumi.OutputState }

func (ClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAutomatedBackupConfigFixedFrequencyScheduleStartTime)(nil)).Elem()
}

func (o ClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeOutput) ToClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeOutput() ClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeOutput {
	return o
}

func (o ClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeOutput) ToClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeOutputWithContext(ctx context.Context) ClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeOutput {
	return o
}

func (o ClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeOutput) ToClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimePtrOutput() ClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimePtrOutput {
	return o.ToClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimePtrOutputWithContext(context.Background())
}

func (o ClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeOutput) ToClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimePtrOutputWithContext(ctx context.Context) ClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterAutomatedBackupConfigFixedFrequencyScheduleStartTime) *ClusterAutomatedBackupConfigFixedFrequencyScheduleStartTime {
		return &v
	}).(ClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimePtrOutput)
}

// Hours of day in 24 hour format. Should be from 0 to 23.
// An API may choose to allow the value "24:00:00" for scenarios like business closing time.
func (o ClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeOutput) Hours() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterAutomatedBackupConfigFixedFrequencyScheduleStartTime) int { return v.Hours }).(pulumi.IntOutput)
}

type ClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimePtrOutput struct{ *pulumi.OutputState }

func (ClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAutomatedBackupConfigFixedFrequencyScheduleStartTime)(nil)).Elem()
}

func (o ClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimePtrOutput) ToClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimePtrOutput() ClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimePtrOutput {
	return o
}

func (o ClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimePtrOutput) ToClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimePtrOutputWithContext(ctx context.Context) ClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimePtrOutput {
	return o
}

func (o ClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimePtrOutput) Elem() ClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeOutput {
	return o.ApplyT(func(v *ClusterAutomatedBackupConfigFixedFrequencyScheduleStartTime) ClusterAutomatedBackupConfigFixedFrequencyScheduleStartTime {
		if v != nil {
			return *v
		}
		var ret ClusterAutomatedBackupConfigFixedFrequencyScheduleStartTime
		return ret
	}).(ClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeOutput)
}

// Hours of day in 24 hour format. Should be from 0 to 23.
// An API may choose to allow the value "24:00:00" for scenarios like business closing time.
func (o ClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimePtrOutput) Hours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterAutomatedBackupConfigFixedFrequencyScheduleStartTime) *int {
		if v == nil {
			return nil
		}
		return &v.Hours
	}).(pulumi.IntPtrOutput)
}

type ClusterCrossClusterReplicationConfig struct {
	// The role of the cluster in cross cluster replication. Supported values are:
	// 1. `CLUSTER_ROLE_UNSPECIFIED`: This is an independent cluster that has never participated in cross cluster replication. It allows both reads and writes.
	// 2. `NONE`: This is an independent cluster that previously participated in cross cluster replication(either as a `PRIMARY` or `SECONDARY` cluster). It allows both reads and writes.
	// 3. `PRIMARY`: This cluster serves as the replication source for secondary clusters that are replicating from it. Any data written to it is automatically replicated to its secondary clusters. It allows both reads and writes.
	// 4. `SECONDARY`: This cluster replicates data from the primary cluster. It allows only reads.
	//    Possible values are: `CLUSTER_ROLE_UNSPECIFIED`, `NONE`, `PRIMARY`, `SECONDARY`.
	ClusterRole *string `pulumi:"clusterRole"`
	// (Output)
	// An output only view of all the member clusters participating in cross cluster replication. This field is populated for all the member clusters irrespective of their cluster role.
	// Structure is documented below.
	Memberships []ClusterCrossClusterReplicationConfigMembership `pulumi:"memberships"`
	// Details of the primary cluster that is used as the replication source for this secondary cluster. This is allowed to be set only for clusters whose cluster role is of type `SECONDARY`.
	// Structure is documented below.
	PrimaryCluster *ClusterCrossClusterReplicationConfigPrimaryCluster `pulumi:"primaryCluster"`
	// List of secondary clusters that are replicating from this primary cluster. This is allowed to be set only for clusters whose cluster role is of type `PRIMARY`.
	// Structure is documented below.
	SecondaryClusters []ClusterCrossClusterReplicationConfigSecondaryCluster `pulumi:"secondaryClusters"`
	// (Output)
	// The last time cross cluster replication config was updated.
	UpdateTime *string `pulumi:"updateTime"`
}

// ClusterCrossClusterReplicationConfigInput is an input type that accepts ClusterCrossClusterReplicationConfigArgs and ClusterCrossClusterReplicationConfigOutput values.
// You can construct a concrete instance of `ClusterCrossClusterReplicationConfigInput` via:
//
//	ClusterCrossClusterReplicationConfigArgs{...}
type ClusterCrossClusterReplicationConfigInput interface {
	pulumi.Input

	ToClusterCrossClusterReplicationConfigOutput() ClusterCrossClusterReplicationConfigOutput
	ToClusterCrossClusterReplicationConfigOutputWithContext(context.Context) ClusterCrossClusterReplicationConfigOutput
}

type ClusterCrossClusterReplicationConfigArgs struct {
	// The role of the cluster in cross cluster replication. Supported values are:
	// 1. `CLUSTER_ROLE_UNSPECIFIED`: This is an independent cluster that has never participated in cross cluster replication. It allows both reads and writes.
	// 2. `NONE`: This is an independent cluster that previously participated in cross cluster replication(either as a `PRIMARY` or `SECONDARY` cluster). It allows both reads and writes.
	// 3. `PRIMARY`: This cluster serves as the replication source for secondary clusters that are replicating from it. Any data written to it is automatically replicated to its secondary clusters. It allows both reads and writes.
	// 4. `SECONDARY`: This cluster replicates data from the primary cluster. It allows only reads.
	//    Possible values are: `CLUSTER_ROLE_UNSPECIFIED`, `NONE`, `PRIMARY`, `SECONDARY`.
	ClusterRole pulumi.StringPtrInput `pulumi:"clusterRole"`
	// (Output)
	// An output only view of all the member clusters participating in cross cluster replication. This field is populated for all the member clusters irrespective of their cluster role.
	// Structure is documented below.
	Memberships ClusterCrossClusterReplicationConfigMembershipArrayInput `pulumi:"memberships"`
	// Details of the primary cluster that is used as the replication source for this secondary cluster. This is allowed to be set only for clusters whose cluster role is of type `SECONDARY`.
	// Structure is documented below.
	PrimaryCluster ClusterCrossClusterReplicationConfigPrimaryClusterPtrInput `pulumi:"primaryCluster"`
	// List of secondary clusters that are replicating from this primary cluster. This is allowed to be set only for clusters whose cluster role is of type `PRIMARY`.
	// Structure is documented below.
	SecondaryClusters ClusterCrossClusterReplicationConfigSecondaryClusterArrayInput `pulumi:"secondaryClusters"`
	// (Output)
	// The last time cross cluster replication config was updated.
	UpdateTime pulumi.StringPtrInput `pulumi:"updateTime"`
}

func (ClusterCrossClusterReplicationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCrossClusterReplicationConfig)(nil)).Elem()
}

func (i ClusterCrossClusterReplicationConfigArgs) ToClusterCrossClusterReplicationConfigOutput() ClusterCrossClusterReplicationConfigOutput {
	return i.ToClusterCrossClusterReplicationConfigOutputWithContext(context.Background())
}

func (i ClusterCrossClusterReplicationConfigArgs) ToClusterCrossClusterReplicationConfigOutputWithContext(ctx context.Context) ClusterCrossClusterReplicationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCrossClusterReplicationConfigOutput)
}

func (i ClusterCrossClusterReplicationConfigArgs) ToClusterCrossClusterReplicationConfigPtrOutput() ClusterCrossClusterReplicationConfigPtrOutput {
	return i.ToClusterCrossClusterReplicationConfigPtrOutputWithContext(context.Background())
}

func (i ClusterCrossClusterReplicationConfigArgs) ToClusterCrossClusterReplicationConfigPtrOutputWithContext(ctx context.Context) ClusterCrossClusterReplicationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCrossClusterReplicationConfigOutput).ToClusterCrossClusterReplicationConfigPtrOutputWithContext(ctx)
}

// ClusterCrossClusterReplicationConfigPtrInput is an input type that accepts ClusterCrossClusterReplicationConfigArgs, ClusterCrossClusterReplicationConfigPtr and ClusterCrossClusterReplicationConfigPtrOutput values.
// You can construct a concrete instance of `ClusterCrossClusterReplicationConfigPtrInput` via:
//
//	        ClusterCrossClusterReplicationConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterCrossClusterReplicationConfigPtrInput interface {
	pulumi.Input

	ToClusterCrossClusterReplicationConfigPtrOutput() ClusterCrossClusterReplicationConfigPtrOutput
	ToClusterCrossClusterReplicationConfigPtrOutputWithContext(context.Context) ClusterCrossClusterReplicationConfigPtrOutput
}

type clusterCrossClusterReplicationConfigPtrType ClusterCrossClusterReplicationConfigArgs

func ClusterCrossClusterReplicationConfigPtr(v *ClusterCrossClusterReplicationConfigArgs) ClusterCrossClusterReplicationConfigPtrInput {
	return (*clusterCrossClusterReplicationConfigPtrType)(v)
}

func (*clusterCrossClusterReplicationConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterCrossClusterReplicationConfig)(nil)).Elem()
}

func (i *clusterCrossClusterReplicationConfigPtrType) ToClusterCrossClusterReplicationConfigPtrOutput() ClusterCrossClusterReplicationConfigPtrOutput {
	return i.ToClusterCrossClusterReplicationConfigPtrOutputWithContext(context.Background())
}

func (i *clusterCrossClusterReplicationConfigPtrType) ToClusterCrossClusterReplicationConfigPtrOutputWithContext(ctx context.Context) ClusterCrossClusterReplicationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCrossClusterReplicationConfigPtrOutput)
}

type ClusterCrossClusterReplicationConfigOutput struct{ *pulumi.OutputState }

func (ClusterCrossClusterReplicationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCrossClusterReplicationConfig)(nil)).Elem()
}

func (o ClusterCrossClusterReplicationConfigOutput) ToClusterCrossClusterReplicationConfigOutput() ClusterCrossClusterReplicationConfigOutput {
	return o
}

func (o ClusterCrossClusterReplicationConfigOutput) ToClusterCrossClusterReplicationConfigOutputWithContext(ctx context.Context) ClusterCrossClusterReplicationConfigOutput {
	return o
}

func (o ClusterCrossClusterReplicationConfigOutput) ToClusterCrossClusterReplicationConfigPtrOutput() ClusterCrossClusterReplicationConfigPtrOutput {
	return o.ToClusterCrossClusterReplicationConfigPtrOutputWithContext(context.Background())
}

func (o ClusterCrossClusterReplicationConfigOutput) ToClusterCrossClusterReplicationConfigPtrOutputWithContext(ctx context.Context) ClusterCrossClusterReplicationConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterCrossClusterReplicationConfig) *ClusterCrossClusterReplicationConfig {
		return &v
	}).(ClusterCrossClusterReplicationConfigPtrOutput)
}

// The role of the cluster in cross cluster replication. Supported values are:
//  1. `CLUSTER_ROLE_UNSPECIFIED`: This is an independent cluster that has never participated in cross cluster replication. It allows both reads and writes.
//  2. `NONE`: This is an independent cluster that previously participated in cross cluster replication(either as a `PRIMARY` or `SECONDARY` cluster). It allows both reads and writes.
//  3. `PRIMARY`: This cluster serves as the replication source for secondary clusters that are replicating from it. Any data written to it is automatically replicated to its secondary clusters. It allows both reads and writes.
//  4. `SECONDARY`: This cluster replicates data from the primary cluster. It allows only reads.
//     Possible values are: `CLUSTER_ROLE_UNSPECIFIED`, `NONE`, `PRIMARY`, `SECONDARY`.
func (o ClusterCrossClusterReplicationConfigOutput) ClusterRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCrossClusterReplicationConfig) *string { return v.ClusterRole }).(pulumi.StringPtrOutput)
}

// (Output)
// An output only view of all the member clusters participating in cross cluster replication. This field is populated for all the member clusters irrespective of their cluster role.
// Structure is documented below.
func (o ClusterCrossClusterReplicationConfigOutput) Memberships() ClusterCrossClusterReplicationConfigMembershipArrayOutput {
	return o.ApplyT(func(v ClusterCrossClusterReplicationConfig) []ClusterCrossClusterReplicationConfigMembership {
		return v.Memberships
	}).(ClusterCrossClusterReplicationConfigMembershipArrayOutput)
}

// Details of the primary cluster that is used as the replication source for this secondary cluster. This is allowed to be set only for clusters whose cluster role is of type `SECONDARY`.
// Structure is documented below.
func (o ClusterCrossClusterReplicationConfigOutput) PrimaryCluster() ClusterCrossClusterReplicationConfigPrimaryClusterPtrOutput {
	return o.ApplyT(func(v ClusterCrossClusterReplicationConfig) *ClusterCrossClusterReplicationConfigPrimaryCluster {
		return v.PrimaryCluster
	}).(ClusterCrossClusterReplicationConfigPrimaryClusterPtrOutput)
}

// List of secondary clusters that are replicating from this primary cluster. This is allowed to be set only for clusters whose cluster role is of type `PRIMARY`.
// Structure is documented below.
func (o ClusterCrossClusterReplicationConfigOutput) SecondaryClusters() ClusterCrossClusterReplicationConfigSecondaryClusterArrayOutput {
	return o.ApplyT(func(v ClusterCrossClusterReplicationConfig) []ClusterCrossClusterReplicationConfigSecondaryCluster {
		return v.SecondaryClusters
	}).(ClusterCrossClusterReplicationConfigSecondaryClusterArrayOutput)
}

// (Output)
// The last time cross cluster replication config was updated.
func (o ClusterCrossClusterReplicationConfigOutput) UpdateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCrossClusterReplicationConfig) *string { return v.UpdateTime }).(pulumi.StringPtrOutput)
}

type ClusterCrossClusterReplicationConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterCrossClusterReplicationConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterCrossClusterReplicationConfig)(nil)).Elem()
}

func (o ClusterCrossClusterReplicationConfigPtrOutput) ToClusterCrossClusterReplicationConfigPtrOutput() ClusterCrossClusterReplicationConfigPtrOutput {
	return o
}

func (o ClusterCrossClusterReplicationConfigPtrOutput) ToClusterCrossClusterReplicationConfigPtrOutputWithContext(ctx context.Context) ClusterCrossClusterReplicationConfigPtrOutput {
	return o
}

func (o ClusterCrossClusterReplicationConfigPtrOutput) Elem() ClusterCrossClusterReplicationConfigOutput {
	return o.ApplyT(func(v *ClusterCrossClusterReplicationConfig) ClusterCrossClusterReplicationConfig {
		if v != nil {
			return *v
		}
		var ret ClusterCrossClusterReplicationConfig
		return ret
	}).(ClusterCrossClusterReplicationConfigOutput)
}

// The role of the cluster in cross cluster replication. Supported values are:
//  1. `CLUSTER_ROLE_UNSPECIFIED`: This is an independent cluster that has never participated in cross cluster replication. It allows both reads and writes.
//  2. `NONE`: This is an independent cluster that previously participated in cross cluster replication(either as a `PRIMARY` or `SECONDARY` cluster). It allows both reads and writes.
//  3. `PRIMARY`: This cluster serves as the replication source for secondary clusters that are replicating from it. Any data written to it is automatically replicated to its secondary clusters. It allows both reads and writes.
//  4. `SECONDARY`: This cluster replicates data from the primary cluster. It allows only reads.
//     Possible values are: `CLUSTER_ROLE_UNSPECIFIED`, `NONE`, `PRIMARY`, `SECONDARY`.
func (o ClusterCrossClusterReplicationConfigPtrOutput) ClusterRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCrossClusterReplicationConfig) *string {
		if v == nil {
			return nil
		}
		return v.ClusterRole
	}).(pulumi.StringPtrOutput)
}

// (Output)
// An output only view of all the member clusters participating in cross cluster replication. This field is populated for all the member clusters irrespective of their cluster role.
// Structure is documented below.
func (o ClusterCrossClusterReplicationConfigPtrOutput) Memberships() ClusterCrossClusterReplicationConfigMembershipArrayOutput {
	return o.ApplyT(func(v *ClusterCrossClusterReplicationConfig) []ClusterCrossClusterReplicationConfigMembership {
		if v == nil {
			return nil
		}
		return v.Memberships
	}).(ClusterCrossClusterReplicationConfigMembershipArrayOutput)
}

// Details of the primary cluster that is used as the replication source for this secondary cluster. This is allowed to be set only for clusters whose cluster role is of type `SECONDARY`.
// Structure is documented below.
func (o ClusterCrossClusterReplicationConfigPtrOutput) PrimaryCluster() ClusterCrossClusterReplicationConfigPrimaryClusterPtrOutput {
	return o.ApplyT(func(v *ClusterCrossClusterReplicationConfig) *ClusterCrossClusterReplicationConfigPrimaryCluster {
		if v == nil {
			return nil
		}
		return v.PrimaryCluster
	}).(ClusterCrossClusterReplicationConfigPrimaryClusterPtrOutput)
}

// List of secondary clusters that are replicating from this primary cluster. This is allowed to be set only for clusters whose cluster role is of type `PRIMARY`.
// Structure is documented below.
func (o ClusterCrossClusterReplicationConfigPtrOutput) SecondaryClusters() ClusterCrossClusterReplicationConfigSecondaryClusterArrayOutput {
	return o.ApplyT(func(v *ClusterCrossClusterReplicationConfig) []ClusterCrossClusterReplicationConfigSecondaryCluster {
		if v == nil {
			return nil
		}
		return v.SecondaryClusters
	}).(ClusterCrossClusterReplicationConfigSecondaryClusterArrayOutput)
}

// (Output)
// The last time cross cluster replication config was updated.
func (o ClusterCrossClusterReplicationConfigPtrOutput) UpdateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCrossClusterReplicationConfig) *string {
		if v == nil {
			return nil
		}
		return v.UpdateTime
	}).(pulumi.StringPtrOutput)
}

type ClusterCrossClusterReplicationConfigMembership struct {
	// Details of the primary cluster that is used as the replication source for all the secondary clusters.
	PrimaryClusters []ClusterCrossClusterReplicationConfigMembershipPrimaryCluster `pulumi:"primaryClusters"`
	// List of secondary clusters that are replicating from the primary cluster.
	SecondaryClusters []ClusterCrossClusterReplicationConfigMembershipSecondaryCluster `pulumi:"secondaryClusters"`
}

// ClusterCrossClusterReplicationConfigMembershipInput is an input type that accepts ClusterCrossClusterReplicationConfigMembershipArgs and ClusterCrossClusterReplicationConfigMembershipOutput values.
// You can construct a concrete instance of `ClusterCrossClusterReplicationConfigMembershipInput` via:
//
//	ClusterCrossClusterReplicationConfigMembershipArgs{...}
type ClusterCrossClusterReplicationConfigMembershipInput interface {
	pulumi.Input

	ToClusterCrossClusterReplicationConfigMembershipOutput() ClusterCrossClusterReplicationConfigMembershipOutput
	ToClusterCrossClusterReplicationConfigMembershipOutputWithContext(context.Context) ClusterCrossClusterReplicationConfigMembershipOutput
}

type ClusterCrossClusterReplicationConfigMembershipArgs struct {
	// Details of the primary cluster that is used as the replication source for all the secondary clusters.
	PrimaryClusters ClusterCrossClusterReplicationConfigMembershipPrimaryClusterArrayInput `pulumi:"primaryClusters"`
	// List of secondary clusters that are replicating from the primary cluster.
	SecondaryClusters ClusterCrossClusterReplicationConfigMembershipSecondaryClusterArrayInput `pulumi:"secondaryClusters"`
}

func (ClusterCrossClusterReplicationConfigMembershipArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCrossClusterReplicationConfigMembership)(nil)).Elem()
}

func (i ClusterCrossClusterReplicationConfigMembershipArgs) ToClusterCrossClusterReplicationConfigMembershipOutput() ClusterCrossClusterReplicationConfigMembershipOutput {
	return i.ToClusterCrossClusterReplicationConfigMembershipOutputWithContext(context.Background())
}

func (i ClusterCrossClusterReplicationConfigMembershipArgs) ToClusterCrossClusterReplicationConfigMembershipOutputWithContext(ctx context.Context) ClusterCrossClusterReplicationConfigMembershipOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCrossClusterReplicationConfigMembershipOutput)
}

// ClusterCrossClusterReplicationConfigMembershipArrayInput is an input type that accepts ClusterCrossClusterReplicationConfigMembershipArray and ClusterCrossClusterReplicationConfigMembershipArrayOutput values.
// You can construct a concrete instance of `ClusterCrossClusterReplicationConfigMembershipArrayInput` via:
//
//	ClusterCrossClusterReplicationConfigMembershipArray{ ClusterCrossClusterReplicationConfigMembershipArgs{...} }
type ClusterCrossClusterReplicationConfigMembershipArrayInput interface {
	pulumi.Input

	ToClusterCrossClusterReplicationConfigMembershipArrayOutput() ClusterCrossClusterReplicationConfigMembershipArrayOutput
	ToClusterCrossClusterReplicationConfigMembershipArrayOutputWithContext(context.Context) ClusterCrossClusterReplicationConfigMembershipArrayOutput
}

type ClusterCrossClusterReplicationConfigMembershipArray []ClusterCrossClusterReplicationConfigMembershipInput

func (ClusterCrossClusterReplicationConfigMembershipArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterCrossClusterReplicationConfigMembership)(nil)).Elem()
}

func (i ClusterCrossClusterReplicationConfigMembershipArray) ToClusterCrossClusterReplicationConfigMembershipArrayOutput() ClusterCrossClusterReplicationConfigMembershipArrayOutput {
	return i.ToClusterCrossClusterReplicationConfigMembershipArrayOutputWithContext(context.Background())
}

func (i ClusterCrossClusterReplicationConfigMembershipArray) ToClusterCrossClusterReplicationConfigMembershipArrayOutputWithContext(ctx context.Context) ClusterCrossClusterReplicationConfigMembershipArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCrossClusterReplicationConfigMembershipArrayOutput)
}

type ClusterCrossClusterReplicationConfigMembershipOutput struct{ *pulumi.OutputState }

func (ClusterCrossClusterReplicationConfigMembershipOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCrossClusterReplicationConfigMembership)(nil)).Elem()
}

func (o ClusterCrossClusterReplicationConfigMembershipOutput) ToClusterCrossClusterReplicationConfigMembershipOutput() ClusterCrossClusterReplicationConfigMembershipOutput {
	return o
}

func (o ClusterCrossClusterReplicationConfigMembershipOutput) ToClusterCrossClusterReplicationConfigMembershipOutputWithContext(ctx context.Context) ClusterCrossClusterReplicationConfigMembershipOutput {
	return o
}

// Details of the primary cluster that is used as the replication source for all the secondary clusters.
func (o ClusterCrossClusterReplicationConfigMembershipOutput) PrimaryClusters() ClusterCrossClusterReplicationConfigMembershipPrimaryClusterArrayOutput {
	return o.ApplyT(func(v ClusterCrossClusterReplicationConfigMembership) []ClusterCrossClusterReplicationConfigMembershipPrimaryCluster {
		return v.PrimaryClusters
	}).(ClusterCrossClusterReplicationConfigMembershipPrimaryClusterArrayOutput)
}

// List of secondary clusters that are replicating from the primary cluster.
func (o ClusterCrossClusterReplicationConfigMembershipOutput) SecondaryClusters() ClusterCrossClusterReplicationConfigMembershipSecondaryClusterArrayOutput {
	return o.ApplyT(func(v ClusterCrossClusterReplicationConfigMembership) []ClusterCrossClusterReplicationConfigMembershipSecondaryCluster {
		return v.SecondaryClusters
	}).(ClusterCrossClusterReplicationConfigMembershipSecondaryClusterArrayOutput)
}

type ClusterCrossClusterReplicationConfigMembershipArrayOutput struct{ *pulumi.OutputState }

func (ClusterCrossClusterReplicationConfigMembershipArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterCrossClusterReplicationConfigMembership)(nil)).Elem()
}

func (o ClusterCrossClusterReplicationConfigMembershipArrayOutput) ToClusterCrossClusterReplicationConfigMembershipArrayOutput() ClusterCrossClusterReplicationConfigMembershipArrayOutput {
	return o
}

func (o ClusterCrossClusterReplicationConfigMembershipArrayOutput) ToClusterCrossClusterReplicationConfigMembershipArrayOutputWithContext(ctx context.Context) ClusterCrossClusterReplicationConfigMembershipArrayOutput {
	return o
}

func (o ClusterCrossClusterReplicationConfigMembershipArrayOutput) Index(i pulumi.IntInput) ClusterCrossClusterReplicationConfigMembershipOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterCrossClusterReplicationConfigMembership {
		return vs[0].([]ClusterCrossClusterReplicationConfigMembership)[vs[1].(int)]
	}).(ClusterCrossClusterReplicationConfigMembershipOutput)
}

type ClusterCrossClusterReplicationConfigMembershipPrimaryCluster struct {
	// The full resource path of the primary cluster in the format: projects/{project}/locations/{region}/clusters/{cluster-id}
	Cluster *string `pulumi:"cluster"`
	// (Output)
	// The unique id of the primary cluster.
	Uid *string `pulumi:"uid"`
}

// ClusterCrossClusterReplicationConfigMembershipPrimaryClusterInput is an input type that accepts ClusterCrossClusterReplicationConfigMembershipPrimaryClusterArgs and ClusterCrossClusterReplicationConfigMembershipPrimaryClusterOutput values.
// You can construct a concrete instance of `ClusterCrossClusterReplicationConfigMembershipPrimaryClusterInput` via:
//
//	ClusterCrossClusterReplicationConfigMembershipPrimaryClusterArgs{...}
type ClusterCrossClusterReplicationConfigMembershipPrimaryClusterInput interface {
	pulumi.Input

	ToClusterCrossClusterReplicationConfigMembershipPrimaryClusterOutput() ClusterCrossClusterReplicationConfigMembershipPrimaryClusterOutput
	ToClusterCrossClusterReplicationConfigMembershipPrimaryClusterOutputWithContext(context.Context) ClusterCrossClusterReplicationConfigMembershipPrimaryClusterOutput
}

type ClusterCrossClusterReplicationConfigMembershipPrimaryClusterArgs struct {
	// The full resource path of the primary cluster in the format: projects/{project}/locations/{region}/clusters/{cluster-id}
	Cluster pulumi.StringPtrInput `pulumi:"cluster"`
	// (Output)
	// The unique id of the primary cluster.
	Uid pulumi.StringPtrInput `pulumi:"uid"`
}

func (ClusterCrossClusterReplicationConfigMembershipPrimaryClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCrossClusterReplicationConfigMembershipPrimaryCluster)(nil)).Elem()
}

func (i ClusterCrossClusterReplicationConfigMembershipPrimaryClusterArgs) ToClusterCrossClusterReplicationConfigMembershipPrimaryClusterOutput() ClusterCrossClusterReplicationConfigMembershipPrimaryClusterOutput {
	return i.ToClusterCrossClusterReplicationConfigMembershipPrimaryClusterOutputWithContext(context.Background())
}

func (i ClusterCrossClusterReplicationConfigMembershipPrimaryClusterArgs) ToClusterCrossClusterReplicationConfigMembershipPrimaryClusterOutputWithContext(ctx context.Context) ClusterCrossClusterReplicationConfigMembershipPrimaryClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCrossClusterReplicationConfigMembershipPrimaryClusterOutput)
}

// ClusterCrossClusterReplicationConfigMembershipPrimaryClusterArrayInput is an input type that accepts ClusterCrossClusterReplicationConfigMembershipPrimaryClusterArray and ClusterCrossClusterReplicationConfigMembershipPrimaryClusterArrayOutput values.
// You can construct a concrete instance of `ClusterCrossClusterReplicationConfigMembershipPrimaryClusterArrayInput` via:
//
//	ClusterCrossClusterReplicationConfigMembershipPrimaryClusterArray{ ClusterCrossClusterReplicationConfigMembershipPrimaryClusterArgs{...} }
type ClusterCrossClusterReplicationConfigMembershipPrimaryClusterArrayInput interface {
	pulumi.Input

	ToClusterCrossClusterReplicationConfigMembershipPrimaryClusterArrayOutput() ClusterCrossClusterReplicationConfigMembershipPrimaryClusterArrayOutput
	ToClusterCrossClusterReplicationConfigMembershipPrimaryClusterArrayOutputWithContext(context.Context) ClusterCrossClusterReplicationConfigMembershipPrimaryClusterArrayOutput
}

type ClusterCrossClusterReplicationConfigMembershipPrimaryClusterArray []ClusterCrossClusterReplicationConfigMembershipPrimaryClusterInput

func (ClusterCrossClusterReplicationConfigMembershipPrimaryClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterCrossClusterReplicationConfigMembershipPrimaryCluster)(nil)).Elem()
}

func (i ClusterCrossClusterReplicationConfigMembershipPrimaryClusterArray) ToClusterCrossClusterReplicationConfigMembershipPrimaryClusterArrayOutput() ClusterCrossClusterReplicationConfigMembershipPrimaryClusterArrayOutput {
	return i.ToClusterCrossClusterReplicationConfigMembershipPrimaryClusterArrayOutputWithContext(context.Background())
}

func (i ClusterCrossClusterReplicationConfigMembershipPrimaryClusterArray) ToClusterCrossClusterReplicationConfigMembershipPrimaryClusterArrayOutputWithContext(ctx context.Context) ClusterCrossClusterReplicationConfigMembershipPrimaryClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCrossClusterReplicationConfigMembershipPrimaryClusterArrayOutput)
}

type ClusterCrossClusterReplicationConfigMembershipPrimaryClusterOutput struct{ *pulumi.OutputState }

func (ClusterCrossClusterReplicationConfigMembershipPrimaryClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCrossClusterReplicationConfigMembershipPrimaryCluster)(nil)).Elem()
}

func (o ClusterCrossClusterReplicationConfigMembershipPrimaryClusterOutput) ToClusterCrossClusterReplicationConfigMembershipPrimaryClusterOutput() ClusterCrossClusterReplicationConfigMembershipPrimaryClusterOutput {
	return o
}

func (o ClusterCrossClusterReplicationConfigMembershipPrimaryClusterOutput) ToClusterCrossClusterReplicationConfigMembershipPrimaryClusterOutputWithContext(ctx context.Context) ClusterCrossClusterReplicationConfigMembershipPrimaryClusterOutput {
	return o
}

// The full resource path of the primary cluster in the format: projects/{project}/locations/{region}/clusters/{cluster-id}
func (o ClusterCrossClusterReplicationConfigMembershipPrimaryClusterOutput) Cluster() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCrossClusterReplicationConfigMembershipPrimaryCluster) *string { return v.Cluster }).(pulumi.StringPtrOutput)
}

// (Output)
// The unique id of the primary cluster.
func (o ClusterCrossClusterReplicationConfigMembershipPrimaryClusterOutput) Uid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCrossClusterReplicationConfigMembershipPrimaryCluster) *string { return v.Uid }).(pulumi.StringPtrOutput)
}

type ClusterCrossClusterReplicationConfigMembershipPrimaryClusterArrayOutput struct{ *pulumi.OutputState }

func (ClusterCrossClusterReplicationConfigMembershipPrimaryClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterCrossClusterReplicationConfigMembershipPrimaryCluster)(nil)).Elem()
}

func (o ClusterCrossClusterReplicationConfigMembershipPrimaryClusterArrayOutput) ToClusterCrossClusterReplicationConfigMembershipPrimaryClusterArrayOutput() ClusterCrossClusterReplicationConfigMembershipPrimaryClusterArrayOutput {
	return o
}

func (o ClusterCrossClusterReplicationConfigMembershipPrimaryClusterArrayOutput) ToClusterCrossClusterReplicationConfigMembershipPrimaryClusterArrayOutputWithContext(ctx context.Context) ClusterCrossClusterReplicationConfigMembershipPrimaryClusterArrayOutput {
	return o
}

func (o ClusterCrossClusterReplicationConfigMembershipPrimaryClusterArrayOutput) Index(i pulumi.IntInput) ClusterCrossClusterReplicationConfigMembershipPrimaryClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterCrossClusterReplicationConfigMembershipPrimaryCluster {
		return vs[0].([]ClusterCrossClusterReplicationConfigMembershipPrimaryCluster)[vs[1].(int)]
	}).(ClusterCrossClusterReplicationConfigMembershipPrimaryClusterOutput)
}

type ClusterCrossClusterReplicationConfigMembershipSecondaryCluster struct {
	// (Output)
	// The full resource path of the secondary cluster in the format: projects/{project}/locations/{region}/clusters/{cluster-id}
	Cluster *string `pulumi:"cluster"`
	// (Output)
	// The unique id of the secondary cluster.
	Uid *string `pulumi:"uid"`
}

// ClusterCrossClusterReplicationConfigMembershipSecondaryClusterInput is an input type that accepts ClusterCrossClusterReplicationConfigMembershipSecondaryClusterArgs and ClusterCrossClusterReplicationConfigMembershipSecondaryClusterOutput values.
// You can construct a concrete instance of `ClusterCrossClusterReplicationConfigMembershipSecondaryClusterInput` via:
//
//	ClusterCrossClusterReplicationConfigMembershipSecondaryClusterArgs{...}
type ClusterCrossClusterReplicationConfigMembershipSecondaryClusterInput interface {
	pulumi.Input

	ToClusterCrossClusterReplicationConfigMembershipSecondaryClusterOutput() ClusterCrossClusterReplicationConfigMembershipSecondaryClusterOutput
	ToClusterCrossClusterReplicationConfigMembershipSecondaryClusterOutputWithContext(context.Context) ClusterCrossClusterReplicationConfigMembershipSecondaryClusterOutput
}

type ClusterCrossClusterReplicationConfigMembershipSecondaryClusterArgs struct {
	// (Output)
	// The full resource path of the secondary cluster in the format: projects/{project}/locations/{region}/clusters/{cluster-id}
	Cluster pulumi.StringPtrInput `pulumi:"cluster"`
	// (Output)
	// The unique id of the secondary cluster.
	Uid pulumi.StringPtrInput `pulumi:"uid"`
}

func (ClusterCrossClusterReplicationConfigMembershipSecondaryClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCrossClusterReplicationConfigMembershipSecondaryCluster)(nil)).Elem()
}

func (i ClusterCrossClusterReplicationConfigMembershipSecondaryClusterArgs) ToClusterCrossClusterReplicationConfigMembershipSecondaryClusterOutput() ClusterCrossClusterReplicationConfigMembershipSecondaryClusterOutput {
	return i.ToClusterCrossClusterReplicationConfigMembershipSecondaryClusterOutputWithContext(context.Background())
}

func (i ClusterCrossClusterReplicationConfigMembershipSecondaryClusterArgs) ToClusterCrossClusterReplicationConfigMembershipSecondaryClusterOutputWithContext(ctx context.Context) ClusterCrossClusterReplicationConfigMembershipSecondaryClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCrossClusterReplicationConfigMembershipSecondaryClusterOutput)
}

// ClusterCrossClusterReplicationConfigMembershipSecondaryClusterArrayInput is an input type that accepts ClusterCrossClusterReplicationConfigMembershipSecondaryClusterArray and ClusterCrossClusterReplicationConfigMembershipSecondaryClusterArrayOutput values.
// You can construct a concrete instance of `ClusterCrossClusterReplicationConfigMembershipSecondaryClusterArrayInput` via:
//
//	ClusterCrossClusterReplicationConfigMembershipSecondaryClusterArray{ ClusterCrossClusterReplicationConfigMembershipSecondaryClusterArgs{...} }
type ClusterCrossClusterReplicationConfigMembershipSecondaryClusterArrayInput interface {
	pulumi.Input

	ToClusterCrossClusterReplicationConfigMembershipSecondaryClusterArrayOutput() ClusterCrossClusterReplicationConfigMembershipSecondaryClusterArrayOutput
	ToClusterCrossClusterReplicationConfigMembershipSecondaryClusterArrayOutputWithContext(context.Context) ClusterCrossClusterReplicationConfigMembershipSecondaryClusterArrayOutput
}

type ClusterCrossClusterReplicationConfigMembershipSecondaryClusterArray []ClusterCrossClusterReplicationConfigMembershipSecondaryClusterInput

func (ClusterCrossClusterReplicationConfigMembershipSecondaryClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterCrossClusterReplicationConfigMembershipSecondaryCluster)(nil)).Elem()
}

func (i ClusterCrossClusterReplicationConfigMembershipSecondaryClusterArray) ToClusterCrossClusterReplicationConfigMembershipSecondaryClusterArrayOutput() ClusterCrossClusterReplicationConfigMembershipSecondaryClusterArrayOutput {
	return i.ToClusterCrossClusterReplicationConfigMembershipSecondaryClusterArrayOutputWithContext(context.Background())
}

func (i ClusterCrossClusterReplicationConfigMembershipSecondaryClusterArray) ToClusterCrossClusterReplicationConfigMembershipSecondaryClusterArrayOutputWithContext(ctx context.Context) ClusterCrossClusterReplicationConfigMembershipSecondaryClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCrossClusterReplicationConfigMembershipSecondaryClusterArrayOutput)
}

type ClusterCrossClusterReplicationConfigMembershipSecondaryClusterOutput struct{ *pulumi.OutputState }

func (ClusterCrossClusterReplicationConfigMembershipSecondaryClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCrossClusterReplicationConfigMembershipSecondaryCluster)(nil)).Elem()
}

func (o ClusterCrossClusterReplicationConfigMembershipSecondaryClusterOutput) ToClusterCrossClusterReplicationConfigMembershipSecondaryClusterOutput() ClusterCrossClusterReplicationConfigMembershipSecondaryClusterOutput {
	return o
}

func (o ClusterCrossClusterReplicationConfigMembershipSecondaryClusterOutput) ToClusterCrossClusterReplicationConfigMembershipSecondaryClusterOutputWithContext(ctx context.Context) ClusterCrossClusterReplicationConfigMembershipSecondaryClusterOutput {
	return o
}

// (Output)
// The full resource path of the secondary cluster in the format: projects/{project}/locations/{region}/clusters/{cluster-id}
func (o ClusterCrossClusterReplicationConfigMembershipSecondaryClusterOutput) Cluster() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCrossClusterReplicationConfigMembershipSecondaryCluster) *string { return v.Cluster }).(pulumi.StringPtrOutput)
}

// (Output)
// The unique id of the secondary cluster.
func (o ClusterCrossClusterReplicationConfigMembershipSecondaryClusterOutput) Uid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCrossClusterReplicationConfigMembershipSecondaryCluster) *string { return v.Uid }).(pulumi.StringPtrOutput)
}

type ClusterCrossClusterReplicationConfigMembershipSecondaryClusterArrayOutput struct{ *pulumi.OutputState }

func (ClusterCrossClusterReplicationConfigMembershipSecondaryClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterCrossClusterReplicationConfigMembershipSecondaryCluster)(nil)).Elem()
}

func (o ClusterCrossClusterReplicationConfigMembershipSecondaryClusterArrayOutput) ToClusterCrossClusterReplicationConfigMembershipSecondaryClusterArrayOutput() ClusterCrossClusterReplicationConfigMembershipSecondaryClusterArrayOutput {
	return o
}

func (o ClusterCrossClusterReplicationConfigMembershipSecondaryClusterArrayOutput) ToClusterCrossClusterReplicationConfigMembershipSecondaryClusterArrayOutputWithContext(ctx context.Context) ClusterCrossClusterReplicationConfigMembershipSecondaryClusterArrayOutput {
	return o
}

func (o ClusterCrossClusterReplicationConfigMembershipSecondaryClusterArrayOutput) Index(i pulumi.IntInput) ClusterCrossClusterReplicationConfigMembershipSecondaryClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterCrossClusterReplicationConfigMembershipSecondaryCluster {
		return vs[0].([]ClusterCrossClusterReplicationConfigMembershipSecondaryCluster)[vs[1].(int)]
	}).(ClusterCrossClusterReplicationConfigMembershipSecondaryClusterOutput)
}

type ClusterCrossClusterReplicationConfigPrimaryCluster struct {
	// The full resource path of the primary cluster in the format: projects/{project}/locations/{region}/clusters/{cluster-id}
	Cluster *string `pulumi:"cluster"`
	// (Output)
	// The unique id of the primary cluster.
	Uid *string `pulumi:"uid"`
}

// ClusterCrossClusterReplicationConfigPrimaryClusterInput is an input type that accepts ClusterCrossClusterReplicationConfigPrimaryClusterArgs and ClusterCrossClusterReplicationConfigPrimaryClusterOutput values.
// You can construct a concrete instance of `ClusterCrossClusterReplicationConfigPrimaryClusterInput` via:
//
//	ClusterCrossClusterReplicationConfigPrimaryClusterArgs{...}
type ClusterCrossClusterReplicationConfigPrimaryClusterInput interface {
	pulumi.Input

	ToClusterCrossClusterReplicationConfigPrimaryClusterOutput() ClusterCrossClusterReplicationConfigPrimaryClusterOutput
	ToClusterCrossClusterReplicationConfigPrimaryClusterOutputWithContext(context.Context) ClusterCrossClusterReplicationConfigPrimaryClusterOutput
}

type ClusterCrossClusterReplicationConfigPrimaryClusterArgs struct {
	// The full resource path of the primary cluster in the format: projects/{project}/locations/{region}/clusters/{cluster-id}
	Cluster pulumi.StringPtrInput `pulumi:"cluster"`
	// (Output)
	// The unique id of the primary cluster.
	Uid pulumi.StringPtrInput `pulumi:"uid"`
}

func (ClusterCrossClusterReplicationConfigPrimaryClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCrossClusterReplicationConfigPrimaryCluster)(nil)).Elem()
}

func (i ClusterCrossClusterReplicationConfigPrimaryClusterArgs) ToClusterCrossClusterReplicationConfigPrimaryClusterOutput() ClusterCrossClusterReplicationConfigPrimaryClusterOutput {
	return i.ToClusterCrossClusterReplicationConfigPrimaryClusterOutputWithContext(context.Background())
}

func (i ClusterCrossClusterReplicationConfigPrimaryClusterArgs) ToClusterCrossClusterReplicationConfigPrimaryClusterOutputWithContext(ctx context.Context) ClusterCrossClusterReplicationConfigPrimaryClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCrossClusterReplicationConfigPrimaryClusterOutput)
}

func (i ClusterCrossClusterReplicationConfigPrimaryClusterArgs) ToClusterCrossClusterReplicationConfigPrimaryClusterPtrOutput() ClusterCrossClusterReplicationConfigPrimaryClusterPtrOutput {
	return i.ToClusterCrossClusterReplicationConfigPrimaryClusterPtrOutputWithContext(context.Background())
}

func (i ClusterCrossClusterReplicationConfigPrimaryClusterArgs) ToClusterCrossClusterReplicationConfigPrimaryClusterPtrOutputWithContext(ctx context.Context) ClusterCrossClusterReplicationConfigPrimaryClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCrossClusterReplicationConfigPrimaryClusterOutput).ToClusterCrossClusterReplicationConfigPrimaryClusterPtrOutputWithContext(ctx)
}

// ClusterCrossClusterReplicationConfigPrimaryClusterPtrInput is an input type that accepts ClusterCrossClusterReplicationConfigPrimaryClusterArgs, ClusterCrossClusterReplicationConfigPrimaryClusterPtr and ClusterCrossClusterReplicationConfigPrimaryClusterPtrOutput values.
// You can construct a concrete instance of `ClusterCrossClusterReplicationConfigPrimaryClusterPtrInput` via:
//
//	        ClusterCrossClusterReplicationConfigPrimaryClusterArgs{...}
//
//	or:
//
//	        nil
type ClusterCrossClusterReplicationConfigPrimaryClusterPtrInput interface {
	pulumi.Input

	ToClusterCrossClusterReplicationConfigPrimaryClusterPtrOutput() ClusterCrossClusterReplicationConfigPrimaryClusterPtrOutput
	ToClusterCrossClusterReplicationConfigPrimaryClusterPtrOutputWithContext(context.Context) ClusterCrossClusterReplicationConfigPrimaryClusterPtrOutput
}

type clusterCrossClusterReplicationConfigPrimaryClusterPtrType ClusterCrossClusterReplicationConfigPrimaryClusterArgs

func ClusterCrossClusterReplicationConfigPrimaryClusterPtr(v *ClusterCrossClusterReplicationConfigPrimaryClusterArgs) ClusterCrossClusterReplicationConfigPrimaryClusterPtrInput {
	return (*clusterCrossClusterReplicationConfigPrimaryClusterPtrType)(v)
}

func (*clusterCrossClusterReplicationConfigPrimaryClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterCrossClusterReplicationConfigPrimaryCluster)(nil)).Elem()
}

func (i *clusterCrossClusterReplicationConfigPrimaryClusterPtrType) ToClusterCrossClusterReplicationConfigPrimaryClusterPtrOutput() ClusterCrossClusterReplicationConfigPrimaryClusterPtrOutput {
	return i.ToClusterCrossClusterReplicationConfigPrimaryClusterPtrOutputWithContext(context.Background())
}

func (i *clusterCrossClusterReplicationConfigPrimaryClusterPtrType) ToClusterCrossClusterReplicationConfigPrimaryClusterPtrOutputWithContext(ctx context.Context) ClusterCrossClusterReplicationConfigPrimaryClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCrossClusterReplicationConfigPrimaryClusterPtrOutput)
}

type ClusterCrossClusterReplicationConfigPrimaryClusterOutput struct{ *pulumi.OutputState }

func (ClusterCrossClusterReplicationConfigPrimaryClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCrossClusterReplicationConfigPrimaryCluster)(nil)).Elem()
}

func (o ClusterCrossClusterReplicationConfigPrimaryClusterOutput) ToClusterCrossClusterReplicationConfigPrimaryClusterOutput() ClusterCrossClusterReplicationConfigPrimaryClusterOutput {
	return o
}

func (o ClusterCrossClusterReplicationConfigPrimaryClusterOutput) ToClusterCrossClusterReplicationConfigPrimaryClusterOutputWithContext(ctx context.Context) ClusterCrossClusterReplicationConfigPrimaryClusterOutput {
	return o
}

func (o ClusterCrossClusterReplicationConfigPrimaryClusterOutput) ToClusterCrossClusterReplicationConfigPrimaryClusterPtrOutput() ClusterCrossClusterReplicationConfigPrimaryClusterPtrOutput {
	return o.ToClusterCrossClusterReplicationConfigPrimaryClusterPtrOutputWithContext(context.Background())
}

func (o ClusterCrossClusterReplicationConfigPrimaryClusterOutput) ToClusterCrossClusterReplicationConfigPrimaryClusterPtrOutputWithContext(ctx context.Context) ClusterCrossClusterReplicationConfigPrimaryClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterCrossClusterReplicationConfigPrimaryCluster) *ClusterCrossClusterReplicationConfigPrimaryCluster {
		return &v
	}).(ClusterCrossClusterReplicationConfigPrimaryClusterPtrOutput)
}

// The full resource path of the primary cluster in the format: projects/{project}/locations/{region}/clusters/{cluster-id}
func (o ClusterCrossClusterReplicationConfigPrimaryClusterOutput) Cluster() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCrossClusterReplicationConfigPrimaryCluster) *string { return v.Cluster }).(pulumi.StringPtrOutput)
}

// (Output)
// The unique id of the primary cluster.
func (o ClusterCrossClusterReplicationConfigPrimaryClusterOutput) Uid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCrossClusterReplicationConfigPrimaryCluster) *string { return v.Uid }).(pulumi.StringPtrOutput)
}

type ClusterCrossClusterReplicationConfigPrimaryClusterPtrOutput struct{ *pulumi.OutputState }

func (ClusterCrossClusterReplicationConfigPrimaryClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterCrossClusterReplicationConfigPrimaryCluster)(nil)).Elem()
}

func (o ClusterCrossClusterReplicationConfigPrimaryClusterPtrOutput) ToClusterCrossClusterReplicationConfigPrimaryClusterPtrOutput() ClusterCrossClusterReplicationConfigPrimaryClusterPtrOutput {
	return o
}

func (o ClusterCrossClusterReplicationConfigPrimaryClusterPtrOutput) ToClusterCrossClusterReplicationConfigPrimaryClusterPtrOutputWithContext(ctx context.Context) ClusterCrossClusterReplicationConfigPrimaryClusterPtrOutput {
	return o
}

func (o ClusterCrossClusterReplicationConfigPrimaryClusterPtrOutput) Elem() ClusterCrossClusterReplicationConfigPrimaryClusterOutput {
	return o.ApplyT(func(v *ClusterCrossClusterReplicationConfigPrimaryCluster) ClusterCrossClusterReplicationConfigPrimaryCluster {
		if v != nil {
			return *v
		}
		var ret ClusterCrossClusterReplicationConfigPrimaryCluster
		return ret
	}).(ClusterCrossClusterReplicationConfigPrimaryClusterOutput)
}

// The full resource path of the primary cluster in the format: projects/{project}/locations/{region}/clusters/{cluster-id}
func (o ClusterCrossClusterReplicationConfigPrimaryClusterPtrOutput) Cluster() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCrossClusterReplicationConfigPrimaryCluster) *string {
		if v == nil {
			return nil
		}
		return v.Cluster
	}).(pulumi.StringPtrOutput)
}

// (Output)
// The unique id of the primary cluster.
func (o ClusterCrossClusterReplicationConfigPrimaryClusterPtrOutput) Uid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCrossClusterReplicationConfigPrimaryCluster) *string {
		if v == nil {
			return nil
		}
		return v.Uid
	}).(pulumi.StringPtrOutput)
}

type ClusterCrossClusterReplicationConfigSecondaryCluster struct {
	// (Output)
	// The full resource path of the secondary cluster in the format: projects/{project}/locations/{region}/clusters/{cluster-id}
	Cluster *string `pulumi:"cluster"`
	// (Output)
	// The unique id of the secondary cluster.
	Uid *string `pulumi:"uid"`
}

// ClusterCrossClusterReplicationConfigSecondaryClusterInput is an input type that accepts ClusterCrossClusterReplicationConfigSecondaryClusterArgs and ClusterCrossClusterReplicationConfigSecondaryClusterOutput values.
// You can construct a concrete instance of `ClusterCrossClusterReplicationConfigSecondaryClusterInput` via:
//
//	ClusterCrossClusterReplicationConfigSecondaryClusterArgs{...}
type ClusterCrossClusterReplicationConfigSecondaryClusterInput interface {
	pulumi.Input

	ToClusterCrossClusterReplicationConfigSecondaryClusterOutput() ClusterCrossClusterReplicationConfigSecondaryClusterOutput
	ToClusterCrossClusterReplicationConfigSecondaryClusterOutputWithContext(context.Context) ClusterCrossClusterReplicationConfigSecondaryClusterOutput
}

type ClusterCrossClusterReplicationConfigSecondaryClusterArgs struct {
	// (Output)
	// The full resource path of the secondary cluster in the format: projects/{project}/locations/{region}/clusters/{cluster-id}
	Cluster pulumi.StringPtrInput `pulumi:"cluster"`
	// (Output)
	// The unique id of the secondary cluster.
	Uid pulumi.StringPtrInput `pulumi:"uid"`
}

func (ClusterCrossClusterReplicationConfigSecondaryClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCrossClusterReplicationConfigSecondaryCluster)(nil)).Elem()
}

func (i ClusterCrossClusterReplicationConfigSecondaryClusterArgs) ToClusterCrossClusterReplicationConfigSecondaryClusterOutput() ClusterCrossClusterReplicationConfigSecondaryClusterOutput {
	return i.ToClusterCrossClusterReplicationConfigSecondaryClusterOutputWithContext(context.Background())
}

func (i ClusterCrossClusterReplicationConfigSecondaryClusterArgs) ToClusterCrossClusterReplicationConfigSecondaryClusterOutputWithContext(ctx context.Context) ClusterCrossClusterReplicationConfigSecondaryClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCrossClusterReplicationConfigSecondaryClusterOutput)
}

// ClusterCrossClusterReplicationConfigSecondaryClusterArrayInput is an input type that accepts ClusterCrossClusterReplicationConfigSecondaryClusterArray and ClusterCrossClusterReplicationConfigSecondaryClusterArrayOutput values.
// You can construct a concrete instance of `ClusterCrossClusterReplicationConfigSecondaryClusterArrayInput` via:
//
//	ClusterCrossClusterReplicationConfigSecondaryClusterArray{ ClusterCrossClusterReplicationConfigSecondaryClusterArgs{...} }
type ClusterCrossClusterReplicationConfigSecondaryClusterArrayInput interface {
	pulumi.Input

	ToClusterCrossClusterReplicationConfigSecondaryClusterArrayOutput() ClusterCrossClusterReplicationConfigSecondaryClusterArrayOutput
	ToClusterCrossClusterReplicationConfigSecondaryClusterArrayOutputWithContext(context.Context) ClusterCrossClusterReplicationConfigSecondaryClusterArrayOutput
}

type ClusterCrossClusterReplicationConfigSecondaryClusterArray []ClusterCrossClusterReplicationConfigSecondaryClusterInput

func (ClusterCrossClusterReplicationConfigSecondaryClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterCrossClusterReplicationConfigSecondaryCluster)(nil)).Elem()
}

func (i ClusterCrossClusterReplicationConfigSecondaryClusterArray) ToClusterCrossClusterReplicationConfigSecondaryClusterArrayOutput() ClusterCrossClusterReplicationConfigSecondaryClusterArrayOutput {
	return i.ToClusterCrossClusterReplicationConfigSecondaryClusterArrayOutputWithContext(context.Background())
}

func (i ClusterCrossClusterReplicationConfigSecondaryClusterArray) ToClusterCrossClusterReplicationConfigSecondaryClusterArrayOutputWithContext(ctx context.Context) ClusterCrossClusterReplicationConfigSecondaryClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCrossClusterReplicationConfigSecondaryClusterArrayOutput)
}

type ClusterCrossClusterReplicationConfigSecondaryClusterOutput struct{ *pulumi.OutputState }

func (ClusterCrossClusterReplicationConfigSecondaryClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCrossClusterReplicationConfigSecondaryCluster)(nil)).Elem()
}

func (o ClusterCrossClusterReplicationConfigSecondaryClusterOutput) ToClusterCrossClusterReplicationConfigSecondaryClusterOutput() ClusterCrossClusterReplicationConfigSecondaryClusterOutput {
	return o
}

func (o ClusterCrossClusterReplicationConfigSecondaryClusterOutput) ToClusterCrossClusterReplicationConfigSecondaryClusterOutputWithContext(ctx context.Context) ClusterCrossClusterReplicationConfigSecondaryClusterOutput {
	return o
}

// (Output)
// The full resource path of the secondary cluster in the format: projects/{project}/locations/{region}/clusters/{cluster-id}
func (o ClusterCrossClusterReplicationConfigSecondaryClusterOutput) Cluster() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCrossClusterReplicationConfigSecondaryCluster) *string { return v.Cluster }).(pulumi.StringPtrOutput)
}

// (Output)
// The unique id of the secondary cluster.
func (o ClusterCrossClusterReplicationConfigSecondaryClusterOutput) Uid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCrossClusterReplicationConfigSecondaryCluster) *string { return v.Uid }).(pulumi.StringPtrOutput)
}

type ClusterCrossClusterReplicationConfigSecondaryClusterArrayOutput struct{ *pulumi.OutputState }

func (ClusterCrossClusterReplicationConfigSecondaryClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterCrossClusterReplicationConfigSecondaryCluster)(nil)).Elem()
}

func (o ClusterCrossClusterReplicationConfigSecondaryClusterArrayOutput) ToClusterCrossClusterReplicationConfigSecondaryClusterArrayOutput() ClusterCrossClusterReplicationConfigSecondaryClusterArrayOutput {
	return o
}

func (o ClusterCrossClusterReplicationConfigSecondaryClusterArrayOutput) ToClusterCrossClusterReplicationConfigSecondaryClusterArrayOutputWithContext(ctx context.Context) ClusterCrossClusterReplicationConfigSecondaryClusterArrayOutput {
	return o
}

func (o ClusterCrossClusterReplicationConfigSecondaryClusterArrayOutput) Index(i pulumi.IntInput) ClusterCrossClusterReplicationConfigSecondaryClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterCrossClusterReplicationConfigSecondaryCluster {
		return vs[0].([]ClusterCrossClusterReplicationConfigSecondaryCluster)[vs[1].(int)]
	}).(ClusterCrossClusterReplicationConfigSecondaryClusterOutput)
}

type ClusterDiscoveryEndpoint struct {
	// Output only. The IP allocated on the consumer network for the PSC forwarding rule.
	Address *string `pulumi:"address"`
	// Output only. The port number of the exposed Redis endpoint.
	Port *int `pulumi:"port"`
	// Output only. Customer configuration for where the endpoint
	// is created and accessed from.
	// Structure is documented below.
	PscConfig *ClusterDiscoveryEndpointPscConfig `pulumi:"pscConfig"`
}

// ClusterDiscoveryEndpointInput is an input type that accepts ClusterDiscoveryEndpointArgs and ClusterDiscoveryEndpointOutput values.
// You can construct a concrete instance of `ClusterDiscoveryEndpointInput` via:
//
//	ClusterDiscoveryEndpointArgs{...}
type ClusterDiscoveryEndpointInput interface {
	pulumi.Input

	ToClusterDiscoveryEndpointOutput() ClusterDiscoveryEndpointOutput
	ToClusterDiscoveryEndpointOutputWithContext(context.Context) ClusterDiscoveryEndpointOutput
}

type ClusterDiscoveryEndpointArgs struct {
	// Output only. The IP allocated on the consumer network for the PSC forwarding rule.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// Output only. The port number of the exposed Redis endpoint.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Output only. Customer configuration for where the endpoint
	// is created and accessed from.
	// Structure is documented below.
	PscConfig ClusterDiscoveryEndpointPscConfigPtrInput `pulumi:"pscConfig"`
}

func (ClusterDiscoveryEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterDiscoveryEndpoint)(nil)).Elem()
}

func (i ClusterDiscoveryEndpointArgs) ToClusterDiscoveryEndpointOutput() ClusterDiscoveryEndpointOutput {
	return i.ToClusterDiscoveryEndpointOutputWithContext(context.Background())
}

func (i ClusterDiscoveryEndpointArgs) ToClusterDiscoveryEndpointOutputWithContext(ctx context.Context) ClusterDiscoveryEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterDiscoveryEndpointOutput)
}

// ClusterDiscoveryEndpointArrayInput is an input type that accepts ClusterDiscoveryEndpointArray and ClusterDiscoveryEndpointArrayOutput values.
// You can construct a concrete instance of `ClusterDiscoveryEndpointArrayInput` via:
//
//	ClusterDiscoveryEndpointArray{ ClusterDiscoveryEndpointArgs{...} }
type ClusterDiscoveryEndpointArrayInput interface {
	pulumi.Input

	ToClusterDiscoveryEndpointArrayOutput() ClusterDiscoveryEndpointArrayOutput
	ToClusterDiscoveryEndpointArrayOutputWithContext(context.Context) ClusterDiscoveryEndpointArrayOutput
}

type ClusterDiscoveryEndpointArray []ClusterDiscoveryEndpointInput

func (ClusterDiscoveryEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterDiscoveryEndpoint)(nil)).Elem()
}

func (i ClusterDiscoveryEndpointArray) ToClusterDiscoveryEndpointArrayOutput() ClusterDiscoveryEndpointArrayOutput {
	return i.ToClusterDiscoveryEndpointArrayOutputWithContext(context.Background())
}

func (i ClusterDiscoveryEndpointArray) ToClusterDiscoveryEndpointArrayOutputWithContext(ctx context.Context) ClusterDiscoveryEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterDiscoveryEndpointArrayOutput)
}

type ClusterDiscoveryEndpointOutput struct{ *pulumi.OutputState }

func (ClusterDiscoveryEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterDiscoveryEndpoint)(nil)).Elem()
}

func (o ClusterDiscoveryEndpointOutput) ToClusterDiscoveryEndpointOutput() ClusterDiscoveryEndpointOutput {
	return o
}

func (o ClusterDiscoveryEndpointOutput) ToClusterDiscoveryEndpointOutputWithContext(ctx context.Context) ClusterDiscoveryEndpointOutput {
	return o
}

// Output only. The IP allocated on the consumer network for the PSC forwarding rule.
func (o ClusterDiscoveryEndpointOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterDiscoveryEndpoint) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// Output only. The port number of the exposed Redis endpoint.
func (o ClusterDiscoveryEndpointOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterDiscoveryEndpoint) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Output only. Customer configuration for where the endpoint
// is created and accessed from.
// Structure is documented below.
func (o ClusterDiscoveryEndpointOutput) PscConfig() ClusterDiscoveryEndpointPscConfigPtrOutput {
	return o.ApplyT(func(v ClusterDiscoveryEndpoint) *ClusterDiscoveryEndpointPscConfig { return v.PscConfig }).(ClusterDiscoveryEndpointPscConfigPtrOutput)
}

type ClusterDiscoveryEndpointArrayOutput struct{ *pulumi.OutputState }

func (ClusterDiscoveryEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterDiscoveryEndpoint)(nil)).Elem()
}

func (o ClusterDiscoveryEndpointArrayOutput) ToClusterDiscoveryEndpointArrayOutput() ClusterDiscoveryEndpointArrayOutput {
	return o
}

func (o ClusterDiscoveryEndpointArrayOutput) ToClusterDiscoveryEndpointArrayOutputWithContext(ctx context.Context) ClusterDiscoveryEndpointArrayOutput {
	return o
}

func (o ClusterDiscoveryEndpointArrayOutput) Index(i pulumi.IntInput) ClusterDiscoveryEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterDiscoveryEndpoint {
		return vs[0].([]ClusterDiscoveryEndpoint)[vs[1].(int)]
	}).(ClusterDiscoveryEndpointOutput)
}

type ClusterDiscoveryEndpointPscConfig struct {
	// The consumer network where the IP address resides, in the form of projects/{projectId}/global/networks/{network_id}.
	Network *string `pulumi:"network"`
}

// ClusterDiscoveryEndpointPscConfigInput is an input type that accepts ClusterDiscoveryEndpointPscConfigArgs and ClusterDiscoveryEndpointPscConfigOutput values.
// You can construct a concrete instance of `ClusterDiscoveryEndpointPscConfigInput` via:
//
//	ClusterDiscoveryEndpointPscConfigArgs{...}
type ClusterDiscoveryEndpointPscConfigInput interface {
	pulumi.Input

	ToClusterDiscoveryEndpointPscConfigOutput() ClusterDiscoveryEndpointPscConfigOutput
	ToClusterDiscoveryEndpointPscConfigOutputWithContext(context.Context) ClusterDiscoveryEndpointPscConfigOutput
}

type ClusterDiscoveryEndpointPscConfigArgs struct {
	// The consumer network where the IP address resides, in the form of projects/{projectId}/global/networks/{network_id}.
	Network pulumi.StringPtrInput `pulumi:"network"`
}

func (ClusterDiscoveryEndpointPscConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterDiscoveryEndpointPscConfig)(nil)).Elem()
}

func (i ClusterDiscoveryEndpointPscConfigArgs) ToClusterDiscoveryEndpointPscConfigOutput() ClusterDiscoveryEndpointPscConfigOutput {
	return i.ToClusterDiscoveryEndpointPscConfigOutputWithContext(context.Background())
}

func (i ClusterDiscoveryEndpointPscConfigArgs) ToClusterDiscoveryEndpointPscConfigOutputWithContext(ctx context.Context) ClusterDiscoveryEndpointPscConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterDiscoveryEndpointPscConfigOutput)
}

func (i ClusterDiscoveryEndpointPscConfigArgs) ToClusterDiscoveryEndpointPscConfigPtrOutput() ClusterDiscoveryEndpointPscConfigPtrOutput {
	return i.ToClusterDiscoveryEndpointPscConfigPtrOutputWithContext(context.Background())
}

func (i ClusterDiscoveryEndpointPscConfigArgs) ToClusterDiscoveryEndpointPscConfigPtrOutputWithContext(ctx context.Context) ClusterDiscoveryEndpointPscConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterDiscoveryEndpointPscConfigOutput).ToClusterDiscoveryEndpointPscConfigPtrOutputWithContext(ctx)
}

// ClusterDiscoveryEndpointPscConfigPtrInput is an input type that accepts ClusterDiscoveryEndpointPscConfigArgs, ClusterDiscoveryEndpointPscConfigPtr and ClusterDiscoveryEndpointPscConfigPtrOutput values.
// You can construct a concrete instance of `ClusterDiscoveryEndpointPscConfigPtrInput` via:
//
//	        ClusterDiscoveryEndpointPscConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterDiscoveryEndpointPscConfigPtrInput interface {
	pulumi.Input

	ToClusterDiscoveryEndpointPscConfigPtrOutput() ClusterDiscoveryEndpointPscConfigPtrOutput
	ToClusterDiscoveryEndpointPscConfigPtrOutputWithContext(context.Context) ClusterDiscoveryEndpointPscConfigPtrOutput
}

type clusterDiscoveryEndpointPscConfigPtrType ClusterDiscoveryEndpointPscConfigArgs

func ClusterDiscoveryEndpointPscConfigPtr(v *ClusterDiscoveryEndpointPscConfigArgs) ClusterDiscoveryEndpointPscConfigPtrInput {
	return (*clusterDiscoveryEndpointPscConfigPtrType)(v)
}

func (*clusterDiscoveryEndpointPscConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterDiscoveryEndpointPscConfig)(nil)).Elem()
}

func (i *clusterDiscoveryEndpointPscConfigPtrType) ToClusterDiscoveryEndpointPscConfigPtrOutput() ClusterDiscoveryEndpointPscConfigPtrOutput {
	return i.ToClusterDiscoveryEndpointPscConfigPtrOutputWithContext(context.Background())
}

func (i *clusterDiscoveryEndpointPscConfigPtrType) ToClusterDiscoveryEndpointPscConfigPtrOutputWithContext(ctx context.Context) ClusterDiscoveryEndpointPscConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterDiscoveryEndpointPscConfigPtrOutput)
}

type ClusterDiscoveryEndpointPscConfigOutput struct{ *pulumi.OutputState }

func (ClusterDiscoveryEndpointPscConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterDiscoveryEndpointPscConfig)(nil)).Elem()
}

func (o ClusterDiscoveryEndpointPscConfigOutput) ToClusterDiscoveryEndpointPscConfigOutput() ClusterDiscoveryEndpointPscConfigOutput {
	return o
}

func (o ClusterDiscoveryEndpointPscConfigOutput) ToClusterDiscoveryEndpointPscConfigOutputWithContext(ctx context.Context) ClusterDiscoveryEndpointPscConfigOutput {
	return o
}

func (o ClusterDiscoveryEndpointPscConfigOutput) ToClusterDiscoveryEndpointPscConfigPtrOutput() ClusterDiscoveryEndpointPscConfigPtrOutput {
	return o.ToClusterDiscoveryEndpointPscConfigPtrOutputWithContext(context.Background())
}

func (o ClusterDiscoveryEndpointPscConfigOutput) ToClusterDiscoveryEndpointPscConfigPtrOutputWithContext(ctx context.Context) ClusterDiscoveryEndpointPscConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterDiscoveryEndpointPscConfig) *ClusterDiscoveryEndpointPscConfig {
		return &v
	}).(ClusterDiscoveryEndpointPscConfigPtrOutput)
}

// The consumer network where the IP address resides, in the form of projects/{projectId}/global/networks/{network_id}.
func (o ClusterDiscoveryEndpointPscConfigOutput) Network() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterDiscoveryEndpointPscConfig) *string { return v.Network }).(pulumi.StringPtrOutput)
}

type ClusterDiscoveryEndpointPscConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterDiscoveryEndpointPscConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterDiscoveryEndpointPscConfig)(nil)).Elem()
}

func (o ClusterDiscoveryEndpointPscConfigPtrOutput) ToClusterDiscoveryEndpointPscConfigPtrOutput() ClusterDiscoveryEndpointPscConfigPtrOutput {
	return o
}

func (o ClusterDiscoveryEndpointPscConfigPtrOutput) ToClusterDiscoveryEndpointPscConfigPtrOutputWithContext(ctx context.Context) ClusterDiscoveryEndpointPscConfigPtrOutput {
	return o
}

func (o ClusterDiscoveryEndpointPscConfigPtrOutput) Elem() ClusterDiscoveryEndpointPscConfigOutput {
	return o.ApplyT(func(v *ClusterDiscoveryEndpointPscConfig) ClusterDiscoveryEndpointPscConfig {
		if v != nil {
			return *v
		}
		var ret ClusterDiscoveryEndpointPscConfig
		return ret
	}).(ClusterDiscoveryEndpointPscConfigOutput)
}

// The consumer network where the IP address resides, in the form of projects/{projectId}/global/networks/{network_id}.
func (o ClusterDiscoveryEndpointPscConfigPtrOutput) Network() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterDiscoveryEndpointPscConfig) *string {
		if v == nil {
			return nil
		}
		return v.Network
	}).(pulumi.StringPtrOutput)
}

type ClusterGcsSource struct {
	// URIs of the GCS objects to import. Example: gs://bucket1/object1, gs://bucket2/folder2/object2
	Uris []string `pulumi:"uris"`
}

// ClusterGcsSourceInput is an input type that accepts ClusterGcsSourceArgs and ClusterGcsSourceOutput values.
// You can construct a concrete instance of `ClusterGcsSourceInput` via:
//
//	ClusterGcsSourceArgs{...}
type ClusterGcsSourceInput interface {
	pulumi.Input

	ToClusterGcsSourceOutput() ClusterGcsSourceOutput
	ToClusterGcsSourceOutputWithContext(context.Context) ClusterGcsSourceOutput
}

type ClusterGcsSourceArgs struct {
	// URIs of the GCS objects to import. Example: gs://bucket1/object1, gs://bucket2/folder2/object2
	Uris pulumi.StringArrayInput `pulumi:"uris"`
}

func (ClusterGcsSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterGcsSource)(nil)).Elem()
}

func (i ClusterGcsSourceArgs) ToClusterGcsSourceOutput() ClusterGcsSourceOutput {
	return i.ToClusterGcsSourceOutputWithContext(context.Background())
}

func (i ClusterGcsSourceArgs) ToClusterGcsSourceOutputWithContext(ctx context.Context) ClusterGcsSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterGcsSourceOutput)
}

func (i ClusterGcsSourceArgs) ToClusterGcsSourcePtrOutput() ClusterGcsSourcePtrOutput {
	return i.ToClusterGcsSourcePtrOutputWithContext(context.Background())
}

func (i ClusterGcsSourceArgs) ToClusterGcsSourcePtrOutputWithContext(ctx context.Context) ClusterGcsSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterGcsSourceOutput).ToClusterGcsSourcePtrOutputWithContext(ctx)
}

// ClusterGcsSourcePtrInput is an input type that accepts ClusterGcsSourceArgs, ClusterGcsSourcePtr and ClusterGcsSourcePtrOutput values.
// You can construct a concrete instance of `ClusterGcsSourcePtrInput` via:
//
//	        ClusterGcsSourceArgs{...}
//
//	or:
//
//	        nil
type ClusterGcsSourcePtrInput interface {
	pulumi.Input

	ToClusterGcsSourcePtrOutput() ClusterGcsSourcePtrOutput
	ToClusterGcsSourcePtrOutputWithContext(context.Context) ClusterGcsSourcePtrOutput
}

type clusterGcsSourcePtrType ClusterGcsSourceArgs

func ClusterGcsSourcePtr(v *ClusterGcsSourceArgs) ClusterGcsSourcePtrInput {
	return (*clusterGcsSourcePtrType)(v)
}

func (*clusterGcsSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterGcsSource)(nil)).Elem()
}

func (i *clusterGcsSourcePtrType) ToClusterGcsSourcePtrOutput() ClusterGcsSourcePtrOutput {
	return i.ToClusterGcsSourcePtrOutputWithContext(context.Background())
}

func (i *clusterGcsSourcePtrType) ToClusterGcsSourcePtrOutputWithContext(ctx context.Context) ClusterGcsSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterGcsSourcePtrOutput)
}

type ClusterGcsSourceOutput struct{ *pulumi.OutputState }

func (ClusterGcsSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterGcsSource)(nil)).Elem()
}

func (o ClusterGcsSourceOutput) ToClusterGcsSourceOutput() ClusterGcsSourceOutput {
	return o
}

func (o ClusterGcsSourceOutput) ToClusterGcsSourceOutputWithContext(ctx context.Context) ClusterGcsSourceOutput {
	return o
}

func (o ClusterGcsSourceOutput) ToClusterGcsSourcePtrOutput() ClusterGcsSourcePtrOutput {
	return o.ToClusterGcsSourcePtrOutputWithContext(context.Background())
}

func (o ClusterGcsSourceOutput) ToClusterGcsSourcePtrOutputWithContext(ctx context.Context) ClusterGcsSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterGcsSource) *ClusterGcsSource {
		return &v
	}).(ClusterGcsSourcePtrOutput)
}

// URIs of the GCS objects to import. Example: gs://bucket1/object1, gs://bucket2/folder2/object2
func (o ClusterGcsSourceOutput) Uris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterGcsSource) []string { return v.Uris }).(pulumi.StringArrayOutput)
}

type ClusterGcsSourcePtrOutput struct{ *pulumi.OutputState }

func (ClusterGcsSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterGcsSource)(nil)).Elem()
}

func (o ClusterGcsSourcePtrOutput) ToClusterGcsSourcePtrOutput() ClusterGcsSourcePtrOutput {
	return o
}

func (o ClusterGcsSourcePtrOutput) ToClusterGcsSourcePtrOutputWithContext(ctx context.Context) ClusterGcsSourcePtrOutput {
	return o
}

func (o ClusterGcsSourcePtrOutput) Elem() ClusterGcsSourceOutput {
	return o.ApplyT(func(v *ClusterGcsSource) ClusterGcsSource {
		if v != nil {
			return *v
		}
		var ret ClusterGcsSource
		return ret
	}).(ClusterGcsSourceOutput)
}

// URIs of the GCS objects to import. Example: gs://bucket1/object1, gs://bucket2/folder2/object2
func (o ClusterGcsSourcePtrOutput) Uris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterGcsSource) []string {
		if v == nil {
			return nil
		}
		return v.Uris
	}).(pulumi.StringArrayOutput)
}

type ClusterMaintenancePolicy struct {
	// (Output)
	// Output only. The time when the policy was created.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits.
	CreateTime *string `pulumi:"createTime"`
	// (Output)
	// Output only. The time when the policy was last updated.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits.
	UpdateTime *string `pulumi:"updateTime"`
	// Optional. Maintenance window that is applied to resources covered by this policy.
	// Minimum 1. For the current version, the maximum number
	// of weeklyWindow is expected to be one.
	// Structure is documented below.
	WeeklyMaintenanceWindows []ClusterMaintenancePolicyWeeklyMaintenanceWindow `pulumi:"weeklyMaintenanceWindows"`
}

// ClusterMaintenancePolicyInput is an input type that accepts ClusterMaintenancePolicyArgs and ClusterMaintenancePolicyOutput values.
// You can construct a concrete instance of `ClusterMaintenancePolicyInput` via:
//
//	ClusterMaintenancePolicyArgs{...}
type ClusterMaintenancePolicyInput interface {
	pulumi.Input

	ToClusterMaintenancePolicyOutput() ClusterMaintenancePolicyOutput
	ToClusterMaintenancePolicyOutputWithContext(context.Context) ClusterMaintenancePolicyOutput
}

type ClusterMaintenancePolicyArgs struct {
	// (Output)
	// Output only. The time when the policy was created.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits.
	CreateTime pulumi.StringPtrInput `pulumi:"createTime"`
	// (Output)
	// Output only. The time when the policy was last updated.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits.
	UpdateTime pulumi.StringPtrInput `pulumi:"updateTime"`
	// Optional. Maintenance window that is applied to resources covered by this policy.
	// Minimum 1. For the current version, the maximum number
	// of weeklyWindow is expected to be one.
	// Structure is documented below.
	WeeklyMaintenanceWindows ClusterMaintenancePolicyWeeklyMaintenanceWindowArrayInput `pulumi:"weeklyMaintenanceWindows"`
}

func (ClusterMaintenancePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMaintenancePolicy)(nil)).Elem()
}

func (i ClusterMaintenancePolicyArgs) ToClusterMaintenancePolicyOutput() ClusterMaintenancePolicyOutput {
	return i.ToClusterMaintenancePolicyOutputWithContext(context.Background())
}

func (i ClusterMaintenancePolicyArgs) ToClusterMaintenancePolicyOutputWithContext(ctx context.Context) ClusterMaintenancePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenancePolicyOutput)
}

func (i ClusterMaintenancePolicyArgs) ToClusterMaintenancePolicyPtrOutput() ClusterMaintenancePolicyPtrOutput {
	return i.ToClusterMaintenancePolicyPtrOutputWithContext(context.Background())
}

func (i ClusterMaintenancePolicyArgs) ToClusterMaintenancePolicyPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenancePolicyOutput).ToClusterMaintenancePolicyPtrOutputWithContext(ctx)
}

// ClusterMaintenancePolicyPtrInput is an input type that accepts ClusterMaintenancePolicyArgs, ClusterMaintenancePolicyPtr and ClusterMaintenancePolicyPtrOutput values.
// You can construct a concrete instance of `ClusterMaintenancePolicyPtrInput` via:
//
//	        ClusterMaintenancePolicyArgs{...}
//
//	or:
//
//	        nil
type ClusterMaintenancePolicyPtrInput interface {
	pulumi.Input

	ToClusterMaintenancePolicyPtrOutput() ClusterMaintenancePolicyPtrOutput
	ToClusterMaintenancePolicyPtrOutputWithContext(context.Context) ClusterMaintenancePolicyPtrOutput
}

type clusterMaintenancePolicyPtrType ClusterMaintenancePolicyArgs

func ClusterMaintenancePolicyPtr(v *ClusterMaintenancePolicyArgs) ClusterMaintenancePolicyPtrInput {
	return (*clusterMaintenancePolicyPtrType)(v)
}

func (*clusterMaintenancePolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMaintenancePolicy)(nil)).Elem()
}

func (i *clusterMaintenancePolicyPtrType) ToClusterMaintenancePolicyPtrOutput() ClusterMaintenancePolicyPtrOutput {
	return i.ToClusterMaintenancePolicyPtrOutputWithContext(context.Background())
}

func (i *clusterMaintenancePolicyPtrType) ToClusterMaintenancePolicyPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenancePolicyPtrOutput)
}

type ClusterMaintenancePolicyOutput struct{ *pulumi.OutputState }

func (ClusterMaintenancePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMaintenancePolicy)(nil)).Elem()
}

func (o ClusterMaintenancePolicyOutput) ToClusterMaintenancePolicyOutput() ClusterMaintenancePolicyOutput {
	return o
}

func (o ClusterMaintenancePolicyOutput) ToClusterMaintenancePolicyOutputWithContext(ctx context.Context) ClusterMaintenancePolicyOutput {
	return o
}

func (o ClusterMaintenancePolicyOutput) ToClusterMaintenancePolicyPtrOutput() ClusterMaintenancePolicyPtrOutput {
	return o.ToClusterMaintenancePolicyPtrOutputWithContext(context.Background())
}

func (o ClusterMaintenancePolicyOutput) ToClusterMaintenancePolicyPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterMaintenancePolicy) *ClusterMaintenancePolicy {
		return &v
	}).(ClusterMaintenancePolicyPtrOutput)
}

// (Output)
// Output only. The time when the policy was created.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
// resolution and up to nine fractional digits.
func (o ClusterMaintenancePolicyOutput) CreateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicy) *string { return v.CreateTime }).(pulumi.StringPtrOutput)
}

// (Output)
// Output only. The time when the policy was last updated.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
// resolution and up to nine fractional digits.
func (o ClusterMaintenancePolicyOutput) UpdateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicy) *string { return v.UpdateTime }).(pulumi.StringPtrOutput)
}

// Optional. Maintenance window that is applied to resources covered by this policy.
// Minimum 1. For the current version, the maximum number
// of weeklyWindow is expected to be one.
// Structure is documented below.
func (o ClusterMaintenancePolicyOutput) WeeklyMaintenanceWindows() ClusterMaintenancePolicyWeeklyMaintenanceWindowArrayOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicy) []ClusterMaintenancePolicyWeeklyMaintenanceWindow {
		return v.WeeklyMaintenanceWindows
	}).(ClusterMaintenancePolicyWeeklyMaintenanceWindowArrayOutput)
}

type ClusterMaintenancePolicyPtrOutput struct{ *pulumi.OutputState }

func (ClusterMaintenancePolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMaintenancePolicy)(nil)).Elem()
}

func (o ClusterMaintenancePolicyPtrOutput) ToClusterMaintenancePolicyPtrOutput() ClusterMaintenancePolicyPtrOutput {
	return o
}

func (o ClusterMaintenancePolicyPtrOutput) ToClusterMaintenancePolicyPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyPtrOutput {
	return o
}

func (o ClusterMaintenancePolicyPtrOutput) Elem() ClusterMaintenancePolicyOutput {
	return o.ApplyT(func(v *ClusterMaintenancePolicy) ClusterMaintenancePolicy {
		if v != nil {
			return *v
		}
		var ret ClusterMaintenancePolicy
		return ret
	}).(ClusterMaintenancePolicyOutput)
}

// (Output)
// Output only. The time when the policy was created.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
// resolution and up to nine fractional digits.
func (o ClusterMaintenancePolicyPtrOutput) CreateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterMaintenancePolicy) *string {
		if v == nil {
			return nil
		}
		return v.CreateTime
	}).(pulumi.StringPtrOutput)
}

// (Output)
// Output only. The time when the policy was last updated.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
// resolution and up to nine fractional digits.
func (o ClusterMaintenancePolicyPtrOutput) UpdateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterMaintenancePolicy) *string {
		if v == nil {
			return nil
		}
		return v.UpdateTime
	}).(pulumi.StringPtrOutput)
}

// Optional. Maintenance window that is applied to resources covered by this policy.
// Minimum 1. For the current version, the maximum number
// of weeklyWindow is expected to be one.
// Structure is documented below.
func (o ClusterMaintenancePolicyPtrOutput) WeeklyMaintenanceWindows() ClusterMaintenancePolicyWeeklyMaintenanceWindowArrayOutput {
	return o.ApplyT(func(v *ClusterMaintenancePolicy) []ClusterMaintenancePolicyWeeklyMaintenanceWindow {
		if v == nil {
			return nil
		}
		return v.WeeklyMaintenanceWindows
	}).(ClusterMaintenancePolicyWeeklyMaintenanceWindowArrayOutput)
}

type ClusterMaintenancePolicyWeeklyMaintenanceWindow struct {
	// Required. The day of week that maintenance updates occur.
	// - DAY_OF_WEEK_UNSPECIFIED: The day of the week is unspecified.
	// - MONDAY: Monday
	// - TUESDAY: Tuesday
	// - WEDNESDAY: Wednesday
	// - THURSDAY: Thursday
	// - FRIDAY: Friday
	// - SATURDAY: Saturday
	// - SUNDAY: Sunday
	//   Possible values are: `DAY_OF_WEEK_UNSPECIFIED`, `MONDAY`, `TUESDAY`, `WEDNESDAY`, `THURSDAY`, `FRIDAY`, `SATURDAY`, `SUNDAY`.
	Day string `pulumi:"day"`
	// (Output)
	// Output only. Duration of the maintenance window.
	// The current window is fixed at 1 hour.
	// A duration in seconds with up to nine fractional digits,
	// terminated by 's'. Example: "3.5s".
	Duration *string `pulumi:"duration"`
	// Required. Start time of the window in UTC time.
	// Structure is documented below.
	StartTime ClusterMaintenancePolicyWeeklyMaintenanceWindowStartTime `pulumi:"startTime"`
}

// ClusterMaintenancePolicyWeeklyMaintenanceWindowInput is an input type that accepts ClusterMaintenancePolicyWeeklyMaintenanceWindowArgs and ClusterMaintenancePolicyWeeklyMaintenanceWindowOutput values.
// You can construct a concrete instance of `ClusterMaintenancePolicyWeeklyMaintenanceWindowInput` via:
//
//	ClusterMaintenancePolicyWeeklyMaintenanceWindowArgs{...}
type ClusterMaintenancePolicyWeeklyMaintenanceWindowInput interface {
	pulumi.Input

	ToClusterMaintenancePolicyWeeklyMaintenanceWindowOutput() ClusterMaintenancePolicyWeeklyMaintenanceWindowOutput
	ToClusterMaintenancePolicyWeeklyMaintenanceWindowOutputWithContext(context.Context) ClusterMaintenancePolicyWeeklyMaintenanceWindowOutput
}

type ClusterMaintenancePolicyWeeklyMaintenanceWindowArgs struct {
	// Required. The day of week that maintenance updates occur.
	// - DAY_OF_WEEK_UNSPECIFIED: The day of the week is unspecified.
	// - MONDAY: Monday
	// - TUESDAY: Tuesday
	// - WEDNESDAY: Wednesday
	// - THURSDAY: Thursday
	// - FRIDAY: Friday
	// - SATURDAY: Saturday
	// - SUNDAY: Sunday
	//   Possible values are: `DAY_OF_WEEK_UNSPECIFIED`, `MONDAY`, `TUESDAY`, `WEDNESDAY`, `THURSDAY`, `FRIDAY`, `SATURDAY`, `SUNDAY`.
	Day pulumi.StringInput `pulumi:"day"`
	// (Output)
	// Output only. Duration of the maintenance window.
	// The current window is fixed at 1 hour.
	// A duration in seconds with up to nine fractional digits,
	// terminated by 's'. Example: "3.5s".
	Duration pulumi.StringPtrInput `pulumi:"duration"`
	// Required. Start time of the window in UTC time.
	// Structure is documented below.
	StartTime ClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeInput `pulumi:"startTime"`
}

func (ClusterMaintenancePolicyWeeklyMaintenanceWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMaintenancePolicyWeeklyMaintenanceWindow)(nil)).Elem()
}

func (i ClusterMaintenancePolicyWeeklyMaintenanceWindowArgs) ToClusterMaintenancePolicyWeeklyMaintenanceWindowOutput() ClusterMaintenancePolicyWeeklyMaintenanceWindowOutput {
	return i.ToClusterMaintenancePolicyWeeklyMaintenanceWindowOutputWithContext(context.Background())
}

func (i ClusterMaintenancePolicyWeeklyMaintenanceWindowArgs) ToClusterMaintenancePolicyWeeklyMaintenanceWindowOutputWithContext(ctx context.Context) ClusterMaintenancePolicyWeeklyMaintenanceWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenancePolicyWeeklyMaintenanceWindowOutput)
}

// ClusterMaintenancePolicyWeeklyMaintenanceWindowArrayInput is an input type that accepts ClusterMaintenancePolicyWeeklyMaintenanceWindowArray and ClusterMaintenancePolicyWeeklyMaintenanceWindowArrayOutput values.
// You can construct a concrete instance of `ClusterMaintenancePolicyWeeklyMaintenanceWindowArrayInput` via:
//
//	ClusterMaintenancePolicyWeeklyMaintenanceWindowArray{ ClusterMaintenancePolicyWeeklyMaintenanceWindowArgs{...} }
type ClusterMaintenancePolicyWeeklyMaintenanceWindowArrayInput interface {
	pulumi.Input

	ToClusterMaintenancePolicyWeeklyMaintenanceWindowArrayOutput() ClusterMaintenancePolicyWeeklyMaintenanceWindowArrayOutput
	ToClusterMaintenancePolicyWeeklyMaintenanceWindowArrayOutputWithContext(context.Context) ClusterMaintenancePolicyWeeklyMaintenanceWindowArrayOutput
}

type ClusterMaintenancePolicyWeeklyMaintenanceWindowArray []ClusterMaintenancePolicyWeeklyMaintenanceWindowInput

func (ClusterMaintenancePolicyWeeklyMaintenanceWindowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterMaintenancePolicyWeeklyMaintenanceWindow)(nil)).Elem()
}

func (i ClusterMaintenancePolicyWeeklyMaintenanceWindowArray) ToClusterMaintenancePolicyWeeklyMaintenanceWindowArrayOutput() ClusterMaintenancePolicyWeeklyMaintenanceWindowArrayOutput {
	return i.ToClusterMaintenancePolicyWeeklyMaintenanceWindowArrayOutputWithContext(context.Background())
}

func (i ClusterMaintenancePolicyWeeklyMaintenanceWindowArray) ToClusterMaintenancePolicyWeeklyMaintenanceWindowArrayOutputWithContext(ctx context.Context) ClusterMaintenancePolicyWeeklyMaintenanceWindowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenancePolicyWeeklyMaintenanceWindowArrayOutput)
}

type ClusterMaintenancePolicyWeeklyMaintenanceWindowOutput struct{ *pulumi.OutputState }

func (ClusterMaintenancePolicyWeeklyMaintenanceWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMaintenancePolicyWeeklyMaintenanceWindow)(nil)).Elem()
}

func (o ClusterMaintenancePolicyWeeklyMaintenanceWindowOutput) ToClusterMaintenancePolicyWeeklyMaintenanceWindowOutput() ClusterMaintenancePolicyWeeklyMaintenanceWindowOutput {
	return o
}

func (o ClusterMaintenancePolicyWeeklyMaintenanceWindowOutput) ToClusterMaintenancePolicyWeeklyMaintenanceWindowOutputWithContext(ctx context.Context) ClusterMaintenancePolicyWeeklyMaintenanceWindowOutput {
	return o
}

// Required. The day of week that maintenance updates occur.
//   - DAY_OF_WEEK_UNSPECIFIED: The day of the week is unspecified.
//   - MONDAY: Monday
//   - TUESDAY: Tuesday
//   - WEDNESDAY: Wednesday
//   - THURSDAY: Thursday
//   - FRIDAY: Friday
//   - SATURDAY: Saturday
//   - SUNDAY: Sunday
//     Possible values are: `DAY_OF_WEEK_UNSPECIFIED`, `MONDAY`, `TUESDAY`, `WEDNESDAY`, `THURSDAY`, `FRIDAY`, `SATURDAY`, `SUNDAY`.
func (o ClusterMaintenancePolicyWeeklyMaintenanceWindowOutput) Day() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicyWeeklyMaintenanceWindow) string { return v.Day }).(pulumi.StringOutput)
}

// (Output)
// Output only. Duration of the maintenance window.
// The current window is fixed at 1 hour.
// A duration in seconds with up to nine fractional digits,
// terminated by 's'. Example: "3.5s".
func (o ClusterMaintenancePolicyWeeklyMaintenanceWindowOutput) Duration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicyWeeklyMaintenanceWindow) *string { return v.Duration }).(pulumi.StringPtrOutput)
}

// Required. Start time of the window in UTC time.
// Structure is documented below.
func (o ClusterMaintenancePolicyWeeklyMaintenanceWindowOutput) StartTime() ClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicyWeeklyMaintenanceWindow) ClusterMaintenancePolicyWeeklyMaintenanceWindowStartTime {
		return v.StartTime
	}).(ClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput)
}

type ClusterMaintenancePolicyWeeklyMaintenanceWindowArrayOutput struct{ *pulumi.OutputState }

func (ClusterMaintenancePolicyWeeklyMaintenanceWindowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterMaintenancePolicyWeeklyMaintenanceWindow)(nil)).Elem()
}

func (o ClusterMaintenancePolicyWeeklyMaintenanceWindowArrayOutput) ToClusterMaintenancePolicyWeeklyMaintenanceWindowArrayOutput() ClusterMaintenancePolicyWeeklyMaintenanceWindowArrayOutput {
	return o
}

func (o ClusterMaintenancePolicyWeeklyMaintenanceWindowArrayOutput) ToClusterMaintenancePolicyWeeklyMaintenanceWindowArrayOutputWithContext(ctx context.Context) ClusterMaintenancePolicyWeeklyMaintenanceWindowArrayOutput {
	return o
}

func (o ClusterMaintenancePolicyWeeklyMaintenanceWindowArrayOutput) Index(i pulumi.IntInput) ClusterMaintenancePolicyWeeklyMaintenanceWindowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterMaintenancePolicyWeeklyMaintenanceWindow {
		return vs[0].([]ClusterMaintenancePolicyWeeklyMaintenanceWindow)[vs[1].(int)]
	}).(ClusterMaintenancePolicyWeeklyMaintenanceWindowOutput)
}

type ClusterMaintenancePolicyWeeklyMaintenanceWindowStartTime struct {
	// Hours of day in 24 hour format. Should be from 0 to 23.
	// An API may choose to allow the value "24:00:00" for scenarios like business closing time.
	Hours *int `pulumi:"hours"`
	// Minutes of hour of day. Must be from 0 to 59.
	Minutes *int `pulumi:"minutes"`
	// Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
	Nanos *int `pulumi:"nanos"`
	// Seconds of minutes of the time. Must normally be from 0 to 59.
	// An API may allow the value 60 if it allows leap-seconds.
	Seconds *int `pulumi:"seconds"`
}

// ClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeInput is an input type that accepts ClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeArgs and ClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput values.
// You can construct a concrete instance of `ClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeInput` via:
//
//	ClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeArgs{...}
type ClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeInput interface {
	pulumi.Input

	ToClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput() ClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput
	ToClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutputWithContext(context.Context) ClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput
}

type ClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeArgs struct {
	// Hours of day in 24 hour format. Should be from 0 to 23.
	// An API may choose to allow the value "24:00:00" for scenarios like business closing time.
	Hours pulumi.IntPtrInput `pulumi:"hours"`
	// Minutes of hour of day. Must be from 0 to 59.
	Minutes pulumi.IntPtrInput `pulumi:"minutes"`
	// Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
	Nanos pulumi.IntPtrInput `pulumi:"nanos"`
	// Seconds of minutes of the time. Must normally be from 0 to 59.
	// An API may allow the value 60 if it allows leap-seconds.
	Seconds pulumi.IntPtrInput `pulumi:"seconds"`
}

func (ClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMaintenancePolicyWeeklyMaintenanceWindowStartTime)(nil)).Elem()
}

func (i ClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeArgs) ToClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput() ClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput {
	return i.ToClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutputWithContext(context.Background())
}

func (i ClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeArgs) ToClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutputWithContext(ctx context.Context) ClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput)
}

type ClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput struct{ *pulumi.OutputState }

func (ClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMaintenancePolicyWeeklyMaintenanceWindowStartTime)(nil)).Elem()
}

func (o ClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput) ToClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput() ClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput {
	return o
}

func (o ClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput) ToClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutputWithContext(ctx context.Context) ClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput {
	return o
}

// Hours of day in 24 hour format. Should be from 0 to 23.
// An API may choose to allow the value "24:00:00" for scenarios like business closing time.
func (o ClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput) Hours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicyWeeklyMaintenanceWindowStartTime) *int { return v.Hours }).(pulumi.IntPtrOutput)
}

// Minutes of hour of day. Must be from 0 to 59.
func (o ClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput) Minutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicyWeeklyMaintenanceWindowStartTime) *int { return v.Minutes }).(pulumi.IntPtrOutput)
}

// Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
func (o ClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput) Nanos() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicyWeeklyMaintenanceWindowStartTime) *int { return v.Nanos }).(pulumi.IntPtrOutput)
}

// Seconds of minutes of the time. Must normally be from 0 to 59.
// An API may allow the value 60 if it allows leap-seconds.
func (o ClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput) Seconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicyWeeklyMaintenanceWindowStartTime) *int { return v.Seconds }).(pulumi.IntPtrOutput)
}

type ClusterMaintenanceSchedule struct {
	// (Output)
	// Output only. The end time of any upcoming scheduled maintenance for this cluster.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits.
	EndTime *string `pulumi:"endTime"`
	// (Output)
	// Output only. The deadline that the maintenance schedule start time
	// can not go beyond, including reschedule.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits.
	ScheduleDeadlineTime *string `pulumi:"scheduleDeadlineTime"`
	// (Output)
	// Output only. The start time of any upcoming scheduled maintenance for this cluster.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits.
	StartTime *string `pulumi:"startTime"`
}

// ClusterMaintenanceScheduleInput is an input type that accepts ClusterMaintenanceScheduleArgs and ClusterMaintenanceScheduleOutput values.
// You can construct a concrete instance of `ClusterMaintenanceScheduleInput` via:
//
//	ClusterMaintenanceScheduleArgs{...}
type ClusterMaintenanceScheduleInput interface {
	pulumi.Input

	ToClusterMaintenanceScheduleOutput() ClusterMaintenanceScheduleOutput
	ToClusterMaintenanceScheduleOutputWithContext(context.Context) ClusterMaintenanceScheduleOutput
}

type ClusterMaintenanceScheduleArgs struct {
	// (Output)
	// Output only. The end time of any upcoming scheduled maintenance for this cluster.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits.
	EndTime pulumi.StringPtrInput `pulumi:"endTime"`
	// (Output)
	// Output only. The deadline that the maintenance schedule start time
	// can not go beyond, including reschedule.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits.
	ScheduleDeadlineTime pulumi.StringPtrInput `pulumi:"scheduleDeadlineTime"`
	// (Output)
	// Output only. The start time of any upcoming scheduled maintenance for this cluster.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits.
	StartTime pulumi.StringPtrInput `pulumi:"startTime"`
}

func (ClusterMaintenanceScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMaintenanceSchedule)(nil)).Elem()
}

func (i ClusterMaintenanceScheduleArgs) ToClusterMaintenanceScheduleOutput() ClusterMaintenanceScheduleOutput {
	return i.ToClusterMaintenanceScheduleOutputWithContext(context.Background())
}

func (i ClusterMaintenanceScheduleArgs) ToClusterMaintenanceScheduleOutputWithContext(ctx context.Context) ClusterMaintenanceScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenanceScheduleOutput)
}

// ClusterMaintenanceScheduleArrayInput is an input type that accepts ClusterMaintenanceScheduleArray and ClusterMaintenanceScheduleArrayOutput values.
// You can construct a concrete instance of `ClusterMaintenanceScheduleArrayInput` via:
//
//	ClusterMaintenanceScheduleArray{ ClusterMaintenanceScheduleArgs{...} }
type ClusterMaintenanceScheduleArrayInput interface {
	pulumi.Input

	ToClusterMaintenanceScheduleArrayOutput() ClusterMaintenanceScheduleArrayOutput
	ToClusterMaintenanceScheduleArrayOutputWithContext(context.Context) ClusterMaintenanceScheduleArrayOutput
}

type ClusterMaintenanceScheduleArray []ClusterMaintenanceScheduleInput

func (ClusterMaintenanceScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterMaintenanceSchedule)(nil)).Elem()
}

func (i ClusterMaintenanceScheduleArray) ToClusterMaintenanceScheduleArrayOutput() ClusterMaintenanceScheduleArrayOutput {
	return i.ToClusterMaintenanceScheduleArrayOutputWithContext(context.Background())
}

func (i ClusterMaintenanceScheduleArray) ToClusterMaintenanceScheduleArrayOutputWithContext(ctx context.Context) ClusterMaintenanceScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenanceScheduleArrayOutput)
}

type ClusterMaintenanceScheduleOutput struct{ *pulumi.OutputState }

func (ClusterMaintenanceScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMaintenanceSchedule)(nil)).Elem()
}

func (o ClusterMaintenanceScheduleOutput) ToClusterMaintenanceScheduleOutput() ClusterMaintenanceScheduleOutput {
	return o
}

func (o ClusterMaintenanceScheduleOutput) ToClusterMaintenanceScheduleOutputWithContext(ctx context.Context) ClusterMaintenanceScheduleOutput {
	return o
}

// (Output)
// Output only. The end time of any upcoming scheduled maintenance for this cluster.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
// resolution and up to nine fractional digits.
func (o ClusterMaintenanceScheduleOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMaintenanceSchedule) *string { return v.EndTime }).(pulumi.StringPtrOutput)
}

// (Output)
// Output only. The deadline that the maintenance schedule start time
// can not go beyond, including reschedule.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
// resolution and up to nine fractional digits.
func (o ClusterMaintenanceScheduleOutput) ScheduleDeadlineTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMaintenanceSchedule) *string { return v.ScheduleDeadlineTime }).(pulumi.StringPtrOutput)
}

// (Output)
// Output only. The start time of any upcoming scheduled maintenance for this cluster.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
// resolution and up to nine fractional digits.
func (o ClusterMaintenanceScheduleOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMaintenanceSchedule) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

type ClusterMaintenanceScheduleArrayOutput struct{ *pulumi.OutputState }

func (ClusterMaintenanceScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterMaintenanceSchedule)(nil)).Elem()
}

func (o ClusterMaintenanceScheduleArrayOutput) ToClusterMaintenanceScheduleArrayOutput() ClusterMaintenanceScheduleArrayOutput {
	return o
}

func (o ClusterMaintenanceScheduleArrayOutput) ToClusterMaintenanceScheduleArrayOutputWithContext(ctx context.Context) ClusterMaintenanceScheduleArrayOutput {
	return o
}

func (o ClusterMaintenanceScheduleArrayOutput) Index(i pulumi.IntInput) ClusterMaintenanceScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterMaintenanceSchedule {
		return vs[0].([]ClusterMaintenanceSchedule)[vs[1].(int)]
	}).(ClusterMaintenanceScheduleOutput)
}

type ClusterManagedBackupSource struct {
	// Example: `projects/{project}/locations/{location}/backupCollections/{collection}/backups/{backup}`.
	Backup string `pulumi:"backup"`
}

// ClusterManagedBackupSourceInput is an input type that accepts ClusterManagedBackupSourceArgs and ClusterManagedBackupSourceOutput values.
// You can construct a concrete instance of `ClusterManagedBackupSourceInput` via:
//
//	ClusterManagedBackupSourceArgs{...}
type ClusterManagedBackupSourceInput interface {
	pulumi.Input

	ToClusterManagedBackupSourceOutput() ClusterManagedBackupSourceOutput
	ToClusterManagedBackupSourceOutputWithContext(context.Context) ClusterManagedBackupSourceOutput
}

type ClusterManagedBackupSourceArgs struct {
	// Example: `projects/{project}/locations/{location}/backupCollections/{collection}/backups/{backup}`.
	Backup pulumi.StringInput `pulumi:"backup"`
}

func (ClusterManagedBackupSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterManagedBackupSource)(nil)).Elem()
}

func (i ClusterManagedBackupSourceArgs) ToClusterManagedBackupSourceOutput() ClusterManagedBackupSourceOutput {
	return i.ToClusterManagedBackupSourceOutputWithContext(context.Background())
}

func (i ClusterManagedBackupSourceArgs) ToClusterManagedBackupSourceOutputWithContext(ctx context.Context) ClusterManagedBackupSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterManagedBackupSourceOutput)
}

func (i ClusterManagedBackupSourceArgs) ToClusterManagedBackupSourcePtrOutput() ClusterManagedBackupSourcePtrOutput {
	return i.ToClusterManagedBackupSourcePtrOutputWithContext(context.Background())
}

func (i ClusterManagedBackupSourceArgs) ToClusterManagedBackupSourcePtrOutputWithContext(ctx context.Context) ClusterManagedBackupSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterManagedBackupSourceOutput).ToClusterManagedBackupSourcePtrOutputWithContext(ctx)
}

// ClusterManagedBackupSourcePtrInput is an input type that accepts ClusterManagedBackupSourceArgs, ClusterManagedBackupSourcePtr and ClusterManagedBackupSourcePtrOutput values.
// You can construct a concrete instance of `ClusterManagedBackupSourcePtrInput` via:
//
//	        ClusterManagedBackupSourceArgs{...}
//
//	or:
//
//	        nil
type ClusterManagedBackupSourcePtrInput interface {
	pulumi.Input

	ToClusterManagedBackupSourcePtrOutput() ClusterManagedBackupSourcePtrOutput
	ToClusterManagedBackupSourcePtrOutputWithContext(context.Context) ClusterManagedBackupSourcePtrOutput
}

type clusterManagedBackupSourcePtrType ClusterManagedBackupSourceArgs

func ClusterManagedBackupSourcePtr(v *ClusterManagedBackupSourceArgs) ClusterManagedBackupSourcePtrInput {
	return (*clusterManagedBackupSourcePtrType)(v)
}

func (*clusterManagedBackupSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterManagedBackupSource)(nil)).Elem()
}

func (i *clusterManagedBackupSourcePtrType) ToClusterManagedBackupSourcePtrOutput() ClusterManagedBackupSourcePtrOutput {
	return i.ToClusterManagedBackupSourcePtrOutputWithContext(context.Background())
}

func (i *clusterManagedBackupSourcePtrType) ToClusterManagedBackupSourcePtrOutputWithContext(ctx context.Context) ClusterManagedBackupSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterManagedBackupSourcePtrOutput)
}

type ClusterManagedBackupSourceOutput struct{ *pulumi.OutputState }

func (ClusterManagedBackupSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterManagedBackupSource)(nil)).Elem()
}

func (o ClusterManagedBackupSourceOutput) ToClusterManagedBackupSourceOutput() ClusterManagedBackupSourceOutput {
	return o
}

func (o ClusterManagedBackupSourceOutput) ToClusterManagedBackupSourceOutputWithContext(ctx context.Context) ClusterManagedBackupSourceOutput {
	return o
}

func (o ClusterManagedBackupSourceOutput) ToClusterManagedBackupSourcePtrOutput() ClusterManagedBackupSourcePtrOutput {
	return o.ToClusterManagedBackupSourcePtrOutputWithContext(context.Background())
}

func (o ClusterManagedBackupSourceOutput) ToClusterManagedBackupSourcePtrOutputWithContext(ctx context.Context) ClusterManagedBackupSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterManagedBackupSource) *ClusterManagedBackupSource {
		return &v
	}).(ClusterManagedBackupSourcePtrOutput)
}

// Example: `projects/{project}/locations/{location}/backupCollections/{collection}/backups/{backup}`.
func (o ClusterManagedBackupSourceOutput) Backup() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterManagedBackupSource) string { return v.Backup }).(pulumi.StringOutput)
}

type ClusterManagedBackupSourcePtrOutput struct{ *pulumi.OutputState }

func (ClusterManagedBackupSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterManagedBackupSource)(nil)).Elem()
}

func (o ClusterManagedBackupSourcePtrOutput) ToClusterManagedBackupSourcePtrOutput() ClusterManagedBackupSourcePtrOutput {
	return o
}

func (o ClusterManagedBackupSourcePtrOutput) ToClusterManagedBackupSourcePtrOutputWithContext(ctx context.Context) ClusterManagedBackupSourcePtrOutput {
	return o
}

func (o ClusterManagedBackupSourcePtrOutput) Elem() ClusterManagedBackupSourceOutput {
	return o.ApplyT(func(v *ClusterManagedBackupSource) ClusterManagedBackupSource {
		if v != nil {
			return *v
		}
		var ret ClusterManagedBackupSource
		return ret
	}).(ClusterManagedBackupSourceOutput)
}

// Example: `projects/{project}/locations/{location}/backupCollections/{collection}/backups/{backup}`.
func (o ClusterManagedBackupSourcePtrOutput) Backup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterManagedBackupSource) *string {
		if v == nil {
			return nil
		}
		return &v.Backup
	}).(pulumi.StringPtrOutput)
}

type ClusterManagedServerCa struct {
	// (Output)
	// The PEM encoded CA certificate chains for redis managed server authentication
	// Structure is documented below.
	CaCerts []ClusterManagedServerCaCaCert `pulumi:"caCerts"`
}

// ClusterManagedServerCaInput is an input type that accepts ClusterManagedServerCaArgs and ClusterManagedServerCaOutput values.
// You can construct a concrete instance of `ClusterManagedServerCaInput` via:
//
//	ClusterManagedServerCaArgs{...}
type ClusterManagedServerCaInput interface {
	pulumi.Input

	ToClusterManagedServerCaOutput() ClusterManagedServerCaOutput
	ToClusterManagedServerCaOutputWithContext(context.Context) ClusterManagedServerCaOutput
}

type ClusterManagedServerCaArgs struct {
	// (Output)
	// The PEM encoded CA certificate chains for redis managed server authentication
	// Structure is documented below.
	CaCerts ClusterManagedServerCaCaCertArrayInput `pulumi:"caCerts"`
}

func (ClusterManagedServerCaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterManagedServerCa)(nil)).Elem()
}

func (i ClusterManagedServerCaArgs) ToClusterManagedServerCaOutput() ClusterManagedServerCaOutput {
	return i.ToClusterManagedServerCaOutputWithContext(context.Background())
}

func (i ClusterManagedServerCaArgs) ToClusterManagedServerCaOutputWithContext(ctx context.Context) ClusterManagedServerCaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterManagedServerCaOutput)
}

// ClusterManagedServerCaArrayInput is an input type that accepts ClusterManagedServerCaArray and ClusterManagedServerCaArrayOutput values.
// You can construct a concrete instance of `ClusterManagedServerCaArrayInput` via:
//
//	ClusterManagedServerCaArray{ ClusterManagedServerCaArgs{...} }
type ClusterManagedServerCaArrayInput interface {
	pulumi.Input

	ToClusterManagedServerCaArrayOutput() ClusterManagedServerCaArrayOutput
	ToClusterManagedServerCaArrayOutputWithContext(context.Context) ClusterManagedServerCaArrayOutput
}

type ClusterManagedServerCaArray []ClusterManagedServerCaInput

func (ClusterManagedServerCaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterManagedServerCa)(nil)).Elem()
}

func (i ClusterManagedServerCaArray) ToClusterManagedServerCaArrayOutput() ClusterManagedServerCaArrayOutput {
	return i.ToClusterManagedServerCaArrayOutputWithContext(context.Background())
}

func (i ClusterManagedServerCaArray) ToClusterManagedServerCaArrayOutputWithContext(ctx context.Context) ClusterManagedServerCaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterManagedServerCaArrayOutput)
}

type ClusterManagedServerCaOutput struct{ *pulumi.OutputState }

func (ClusterManagedServerCaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterManagedServerCa)(nil)).Elem()
}

func (o ClusterManagedServerCaOutput) ToClusterManagedServerCaOutput() ClusterManagedServerCaOutput {
	return o
}

func (o ClusterManagedServerCaOutput) ToClusterManagedServerCaOutputWithContext(ctx context.Context) ClusterManagedServerCaOutput {
	return o
}

// (Output)
// The PEM encoded CA certificate chains for redis managed server authentication
// Structure is documented below.
func (o ClusterManagedServerCaOutput) CaCerts() ClusterManagedServerCaCaCertArrayOutput {
	return o.ApplyT(func(v ClusterManagedServerCa) []ClusterManagedServerCaCaCert { return v.CaCerts }).(ClusterManagedServerCaCaCertArrayOutput)
}

type ClusterManagedServerCaArrayOutput struct{ *pulumi.OutputState }

func (ClusterManagedServerCaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterManagedServerCa)(nil)).Elem()
}

func (o ClusterManagedServerCaArrayOutput) ToClusterManagedServerCaArrayOutput() ClusterManagedServerCaArrayOutput {
	return o
}

func (o ClusterManagedServerCaArrayOutput) ToClusterManagedServerCaArrayOutputWithContext(ctx context.Context) ClusterManagedServerCaArrayOutput {
	return o
}

func (o ClusterManagedServerCaArrayOutput) Index(i pulumi.IntInput) ClusterManagedServerCaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterManagedServerCa {
		return vs[0].([]ClusterManagedServerCa)[vs[1].(int)]
	}).(ClusterManagedServerCaOutput)
}

type ClusterManagedServerCaCaCert struct {
	// (Output)
	// The certificates that form the CA chain, from leaf to root order
	Certificates []string `pulumi:"certificates"`
}

// ClusterManagedServerCaCaCertInput is an input type that accepts ClusterManagedServerCaCaCertArgs and ClusterManagedServerCaCaCertOutput values.
// You can construct a concrete instance of `ClusterManagedServerCaCaCertInput` via:
//
//	ClusterManagedServerCaCaCertArgs{...}
type ClusterManagedServerCaCaCertInput interface {
	pulumi.Input

	ToClusterManagedServerCaCaCertOutput() ClusterManagedServerCaCaCertOutput
	ToClusterManagedServerCaCaCertOutputWithContext(context.Context) ClusterManagedServerCaCaCertOutput
}

type ClusterManagedServerCaCaCertArgs struct {
	// (Output)
	// The certificates that form the CA chain, from leaf to root order
	Certificates pulumi.StringArrayInput `pulumi:"certificates"`
}

func (ClusterManagedServerCaCaCertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterManagedServerCaCaCert)(nil)).Elem()
}

func (i ClusterManagedServerCaCaCertArgs) ToClusterManagedServerCaCaCertOutput() ClusterManagedServerCaCaCertOutput {
	return i.ToClusterManagedServerCaCaCertOutputWithContext(context.Background())
}

func (i ClusterManagedServerCaCaCertArgs) ToClusterManagedServerCaCaCertOutputWithContext(ctx context.Context) ClusterManagedServerCaCaCertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterManagedServerCaCaCertOutput)
}

// ClusterManagedServerCaCaCertArrayInput is an input type that accepts ClusterManagedServerCaCaCertArray and ClusterManagedServerCaCaCertArrayOutput values.
// You can construct a concrete instance of `ClusterManagedServerCaCaCertArrayInput` via:
//
//	ClusterManagedServerCaCaCertArray{ ClusterManagedServerCaCaCertArgs{...} }
type ClusterManagedServerCaCaCertArrayInput interface {
	pulumi.Input

	ToClusterManagedServerCaCaCertArrayOutput() ClusterManagedServerCaCaCertArrayOutput
	ToClusterManagedServerCaCaCertArrayOutputWithContext(context.Context) ClusterManagedServerCaCaCertArrayOutput
}

type ClusterManagedServerCaCaCertArray []ClusterManagedServerCaCaCertInput

func (ClusterManagedServerCaCaCertArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterManagedServerCaCaCert)(nil)).Elem()
}

func (i ClusterManagedServerCaCaCertArray) ToClusterManagedServerCaCaCertArrayOutput() ClusterManagedServerCaCaCertArrayOutput {
	return i.ToClusterManagedServerCaCaCertArrayOutputWithContext(context.Background())
}

func (i ClusterManagedServerCaCaCertArray) ToClusterManagedServerCaCaCertArrayOutputWithContext(ctx context.Context) ClusterManagedServerCaCaCertArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterManagedServerCaCaCertArrayOutput)
}

type ClusterManagedServerCaCaCertOutput struct{ *pulumi.OutputState }

func (ClusterManagedServerCaCaCertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterManagedServerCaCaCert)(nil)).Elem()
}

func (o ClusterManagedServerCaCaCertOutput) ToClusterManagedServerCaCaCertOutput() ClusterManagedServerCaCaCertOutput {
	return o
}

func (o ClusterManagedServerCaCaCertOutput) ToClusterManagedServerCaCaCertOutputWithContext(ctx context.Context) ClusterManagedServerCaCaCertOutput {
	return o
}

// (Output)
// The certificates that form the CA chain, from leaf to root order
func (o ClusterManagedServerCaCaCertOutput) Certificates() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterManagedServerCaCaCert) []string { return v.Certificates }).(pulumi.StringArrayOutput)
}

type ClusterManagedServerCaCaCertArrayOutput struct{ *pulumi.OutputState }

func (ClusterManagedServerCaCaCertArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterManagedServerCaCaCert)(nil)).Elem()
}

func (o ClusterManagedServerCaCaCertArrayOutput) ToClusterManagedServerCaCaCertArrayOutput() ClusterManagedServerCaCaCertArrayOutput {
	return o
}

func (o ClusterManagedServerCaCaCertArrayOutput) ToClusterManagedServerCaCaCertArrayOutputWithContext(ctx context.Context) ClusterManagedServerCaCaCertArrayOutput {
	return o
}

func (o ClusterManagedServerCaCaCertArrayOutput) Index(i pulumi.IntInput) ClusterManagedServerCaCaCertOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterManagedServerCaCaCert {
		return vs[0].([]ClusterManagedServerCaCaCert)[vs[1].(int)]
	}).(ClusterManagedServerCaCaCertOutput)
}

type ClusterPersistenceConfig struct {
	// AOF configuration. This field will be ignored if mode is not AOF.
	// Structure is documented below.
	AofConfig *ClusterPersistenceConfigAofConfig `pulumi:"aofConfig"`
	// Optional. Controls whether Persistence features are enabled. If not provided, the existing value will be used.
	// - DISABLED: 	Persistence (both backup and restore) is disabled for the cluster.
	// - RDB: RDB based Persistence is enabled.
	// - AOF: AOF based Persistence is enabled.
	//   Possible values are: `PERSISTENCE_MODE_UNSPECIFIED`, `DISABLED`, `RDB`, `AOF`.
	Mode *string `pulumi:"mode"`
	// RDB configuration. This field will be ignored if mode is not RDB.
	// Structure is documented below.
	RdbConfig *ClusterPersistenceConfigRdbConfig `pulumi:"rdbConfig"`
}

// ClusterPersistenceConfigInput is an input type that accepts ClusterPersistenceConfigArgs and ClusterPersistenceConfigOutput values.
// You can construct a concrete instance of `ClusterPersistenceConfigInput` via:
//
//	ClusterPersistenceConfigArgs{...}
type ClusterPersistenceConfigInput interface {
	pulumi.Input

	ToClusterPersistenceConfigOutput() ClusterPersistenceConfigOutput
	ToClusterPersistenceConfigOutputWithContext(context.Context) ClusterPersistenceConfigOutput
}

type ClusterPersistenceConfigArgs struct {
	// AOF configuration. This field will be ignored if mode is not AOF.
	// Structure is documented below.
	AofConfig ClusterPersistenceConfigAofConfigPtrInput `pulumi:"aofConfig"`
	// Optional. Controls whether Persistence features are enabled. If not provided, the existing value will be used.
	// - DISABLED: 	Persistence (both backup and restore) is disabled for the cluster.
	// - RDB: RDB based Persistence is enabled.
	// - AOF: AOF based Persistence is enabled.
	//   Possible values are: `PERSISTENCE_MODE_UNSPECIFIED`, `DISABLED`, `RDB`, `AOF`.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// RDB configuration. This field will be ignored if mode is not RDB.
	// Structure is documented below.
	RdbConfig ClusterPersistenceConfigRdbConfigPtrInput `pulumi:"rdbConfig"`
}

func (ClusterPersistenceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPersistenceConfig)(nil)).Elem()
}

func (i ClusterPersistenceConfigArgs) ToClusterPersistenceConfigOutput() ClusterPersistenceConfigOutput {
	return i.ToClusterPersistenceConfigOutputWithContext(context.Background())
}

func (i ClusterPersistenceConfigArgs) ToClusterPersistenceConfigOutputWithContext(ctx context.Context) ClusterPersistenceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPersistenceConfigOutput)
}

func (i ClusterPersistenceConfigArgs) ToClusterPersistenceConfigPtrOutput() ClusterPersistenceConfigPtrOutput {
	return i.ToClusterPersistenceConfigPtrOutputWithContext(context.Background())
}

func (i ClusterPersistenceConfigArgs) ToClusterPersistenceConfigPtrOutputWithContext(ctx context.Context) ClusterPersistenceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPersistenceConfigOutput).ToClusterPersistenceConfigPtrOutputWithContext(ctx)
}

// ClusterPersistenceConfigPtrInput is an input type that accepts ClusterPersistenceConfigArgs, ClusterPersistenceConfigPtr and ClusterPersistenceConfigPtrOutput values.
// You can construct a concrete instance of `ClusterPersistenceConfigPtrInput` via:
//
//	        ClusterPersistenceConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterPersistenceConfigPtrInput interface {
	pulumi.Input

	ToClusterPersistenceConfigPtrOutput() ClusterPersistenceConfigPtrOutput
	ToClusterPersistenceConfigPtrOutputWithContext(context.Context) ClusterPersistenceConfigPtrOutput
}

type clusterPersistenceConfigPtrType ClusterPersistenceConfigArgs

func ClusterPersistenceConfigPtr(v *ClusterPersistenceConfigArgs) ClusterPersistenceConfigPtrInput {
	return (*clusterPersistenceConfigPtrType)(v)
}

func (*clusterPersistenceConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterPersistenceConfig)(nil)).Elem()
}

func (i *clusterPersistenceConfigPtrType) ToClusterPersistenceConfigPtrOutput() ClusterPersistenceConfigPtrOutput {
	return i.ToClusterPersistenceConfigPtrOutputWithContext(context.Background())
}

func (i *clusterPersistenceConfigPtrType) ToClusterPersistenceConfigPtrOutputWithContext(ctx context.Context) ClusterPersistenceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPersistenceConfigPtrOutput)
}

type ClusterPersistenceConfigOutput struct{ *pulumi.OutputState }

func (ClusterPersistenceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPersistenceConfig)(nil)).Elem()
}

func (o ClusterPersistenceConfigOutput) ToClusterPersistenceConfigOutput() ClusterPersistenceConfigOutput {
	return o
}

func (o ClusterPersistenceConfigOutput) ToClusterPersistenceConfigOutputWithContext(ctx context.Context) ClusterPersistenceConfigOutput {
	return o
}

func (o ClusterPersistenceConfigOutput) ToClusterPersistenceConfigPtrOutput() ClusterPersistenceConfigPtrOutput {
	return o.ToClusterPersistenceConfigPtrOutputWithContext(context.Background())
}

func (o ClusterPersistenceConfigOutput) ToClusterPersistenceConfigPtrOutputWithContext(ctx context.Context) ClusterPersistenceConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterPersistenceConfig) *ClusterPersistenceConfig {
		return &v
	}).(ClusterPersistenceConfigPtrOutput)
}

// AOF configuration. This field will be ignored if mode is not AOF.
// Structure is documented below.
func (o ClusterPersistenceConfigOutput) AofConfig() ClusterPersistenceConfigAofConfigPtrOutput {
	return o.ApplyT(func(v ClusterPersistenceConfig) *ClusterPersistenceConfigAofConfig { return v.AofConfig }).(ClusterPersistenceConfigAofConfigPtrOutput)
}

// Optional. Controls whether Persistence features are enabled. If not provided, the existing value will be used.
//   - DISABLED: 	Persistence (both backup and restore) is disabled for the cluster.
//   - RDB: RDB based Persistence is enabled.
//   - AOF: AOF based Persistence is enabled.
//     Possible values are: `PERSISTENCE_MODE_UNSPECIFIED`, `DISABLED`, `RDB`, `AOF`.
func (o ClusterPersistenceConfigOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPersistenceConfig) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// RDB configuration. This field will be ignored if mode is not RDB.
// Structure is documented below.
func (o ClusterPersistenceConfigOutput) RdbConfig() ClusterPersistenceConfigRdbConfigPtrOutput {
	return o.ApplyT(func(v ClusterPersistenceConfig) *ClusterPersistenceConfigRdbConfig { return v.RdbConfig }).(ClusterPersistenceConfigRdbConfigPtrOutput)
}

type ClusterPersistenceConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterPersistenceConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterPersistenceConfig)(nil)).Elem()
}

func (o ClusterPersistenceConfigPtrOutput) ToClusterPersistenceConfigPtrOutput() ClusterPersistenceConfigPtrOutput {
	return o
}

func (o ClusterPersistenceConfigPtrOutput) ToClusterPersistenceConfigPtrOutputWithContext(ctx context.Context) ClusterPersistenceConfigPtrOutput {
	return o
}

func (o ClusterPersistenceConfigPtrOutput) Elem() ClusterPersistenceConfigOutput {
	return o.ApplyT(func(v *ClusterPersistenceConfig) ClusterPersistenceConfig {
		if v != nil {
			return *v
		}
		var ret ClusterPersistenceConfig
		return ret
	}).(ClusterPersistenceConfigOutput)
}

// AOF configuration. This field will be ignored if mode is not AOF.
// Structure is documented below.
func (o ClusterPersistenceConfigPtrOutput) AofConfig() ClusterPersistenceConfigAofConfigPtrOutput {
	return o.ApplyT(func(v *ClusterPersistenceConfig) *ClusterPersistenceConfigAofConfig {
		if v == nil {
			return nil
		}
		return v.AofConfig
	}).(ClusterPersistenceConfigAofConfigPtrOutput)
}

// Optional. Controls whether Persistence features are enabled. If not provided, the existing value will be used.
//   - DISABLED: 	Persistence (both backup and restore) is disabled for the cluster.
//   - RDB: RDB based Persistence is enabled.
//   - AOF: AOF based Persistence is enabled.
//     Possible values are: `PERSISTENCE_MODE_UNSPECIFIED`, `DISABLED`, `RDB`, `AOF`.
func (o ClusterPersistenceConfigPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterPersistenceConfig) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// RDB configuration. This field will be ignored if mode is not RDB.
// Structure is documented below.
func (o ClusterPersistenceConfigPtrOutput) RdbConfig() ClusterPersistenceConfigRdbConfigPtrOutput {
	return o.ApplyT(func(v *ClusterPersistenceConfig) *ClusterPersistenceConfigRdbConfig {
		if v == nil {
			return nil
		}
		return v.RdbConfig
	}).(ClusterPersistenceConfigRdbConfigPtrOutput)
}

type ClusterPersistenceConfigAofConfig struct {
	// Optional. Available fsync modes.
	// - NO - Do not explicitly call fsync(). Rely on OS defaults.
	// - EVERYSEC - Call fsync() once per second in a background thread. A balance between performance and durability.
	// - ALWAYS - Call fsync() for earch write command.
	//   Possible values are: `APPEND_FSYNC_UNSPECIFIED`, `NO`, `EVERYSEC`, `ALWAYS`.
	AppendFsync *string `pulumi:"appendFsync"`
}

// ClusterPersistenceConfigAofConfigInput is an input type that accepts ClusterPersistenceConfigAofConfigArgs and ClusterPersistenceConfigAofConfigOutput values.
// You can construct a concrete instance of `ClusterPersistenceConfigAofConfigInput` via:
//
//	ClusterPersistenceConfigAofConfigArgs{...}
type ClusterPersistenceConfigAofConfigInput interface {
	pulumi.Input

	ToClusterPersistenceConfigAofConfigOutput() ClusterPersistenceConfigAofConfigOutput
	ToClusterPersistenceConfigAofConfigOutputWithContext(context.Context) ClusterPersistenceConfigAofConfigOutput
}

type ClusterPersistenceConfigAofConfigArgs struct {
	// Optional. Available fsync modes.
	// - NO - Do not explicitly call fsync(). Rely on OS defaults.
	// - EVERYSEC - Call fsync() once per second in a background thread. A balance between performance and durability.
	// - ALWAYS - Call fsync() for earch write command.
	//   Possible values are: `APPEND_FSYNC_UNSPECIFIED`, `NO`, `EVERYSEC`, `ALWAYS`.
	AppendFsync pulumi.StringPtrInput `pulumi:"appendFsync"`
}

func (ClusterPersistenceConfigAofConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPersistenceConfigAofConfig)(nil)).Elem()
}

func (i ClusterPersistenceConfigAofConfigArgs) ToClusterPersistenceConfigAofConfigOutput() ClusterPersistenceConfigAofConfigOutput {
	return i.ToClusterPersistenceConfigAofConfigOutputWithContext(context.Background())
}

func (i ClusterPersistenceConfigAofConfigArgs) ToClusterPersistenceConfigAofConfigOutputWithContext(ctx context.Context) ClusterPersistenceConfigAofConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPersistenceConfigAofConfigOutput)
}

func (i ClusterPersistenceConfigAofConfigArgs) ToClusterPersistenceConfigAofConfigPtrOutput() ClusterPersistenceConfigAofConfigPtrOutput {
	return i.ToClusterPersistenceConfigAofConfigPtrOutputWithContext(context.Background())
}

func (i ClusterPersistenceConfigAofConfigArgs) ToClusterPersistenceConfigAofConfigPtrOutputWithContext(ctx context.Context) ClusterPersistenceConfigAofConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPersistenceConfigAofConfigOutput).ToClusterPersistenceConfigAofConfigPtrOutputWithContext(ctx)
}

// ClusterPersistenceConfigAofConfigPtrInput is an input type that accepts ClusterPersistenceConfigAofConfigArgs, ClusterPersistenceConfigAofConfigPtr and ClusterPersistenceConfigAofConfigPtrOutput values.
// You can construct a concrete instance of `ClusterPersistenceConfigAofConfigPtrInput` via:
//
//	        ClusterPersistenceConfigAofConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterPersistenceConfigAofConfigPtrInput interface {
	pulumi.Input

	ToClusterPersistenceConfigAofConfigPtrOutput() ClusterPersistenceConfigAofConfigPtrOutput
	ToClusterPersistenceConfigAofConfigPtrOutputWithContext(context.Context) ClusterPersistenceConfigAofConfigPtrOutput
}

type clusterPersistenceConfigAofConfigPtrType ClusterPersistenceConfigAofConfigArgs

func ClusterPersistenceConfigAofConfigPtr(v *ClusterPersistenceConfigAofConfigArgs) ClusterPersistenceConfigAofConfigPtrInput {
	return (*clusterPersistenceConfigAofConfigPtrType)(v)
}

func (*clusterPersistenceConfigAofConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterPersistenceConfigAofConfig)(nil)).Elem()
}

func (i *clusterPersistenceConfigAofConfigPtrType) ToClusterPersistenceConfigAofConfigPtrOutput() ClusterPersistenceConfigAofConfigPtrOutput {
	return i.ToClusterPersistenceConfigAofConfigPtrOutputWithContext(context.Background())
}

func (i *clusterPersistenceConfigAofConfigPtrType) ToClusterPersistenceConfigAofConfigPtrOutputWithContext(ctx context.Context) ClusterPersistenceConfigAofConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPersistenceConfigAofConfigPtrOutput)
}

type ClusterPersistenceConfigAofConfigOutput struct{ *pulumi.OutputState }

func (ClusterPersistenceConfigAofConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPersistenceConfigAofConfig)(nil)).Elem()
}

func (o ClusterPersistenceConfigAofConfigOutput) ToClusterPersistenceConfigAofConfigOutput() ClusterPersistenceConfigAofConfigOutput {
	return o
}

func (o ClusterPersistenceConfigAofConfigOutput) ToClusterPersistenceConfigAofConfigOutputWithContext(ctx context.Context) ClusterPersistenceConfigAofConfigOutput {
	return o
}

func (o ClusterPersistenceConfigAofConfigOutput) ToClusterPersistenceConfigAofConfigPtrOutput() ClusterPersistenceConfigAofConfigPtrOutput {
	return o.ToClusterPersistenceConfigAofConfigPtrOutputWithContext(context.Background())
}

func (o ClusterPersistenceConfigAofConfigOutput) ToClusterPersistenceConfigAofConfigPtrOutputWithContext(ctx context.Context) ClusterPersistenceConfigAofConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterPersistenceConfigAofConfig) *ClusterPersistenceConfigAofConfig {
		return &v
	}).(ClusterPersistenceConfigAofConfigPtrOutput)
}

// Optional. Available fsync modes.
//   - NO - Do not explicitly call fsync(). Rely on OS defaults.
//   - EVERYSEC - Call fsync() once per second in a background thread. A balance between performance and durability.
//   - ALWAYS - Call fsync() for earch write command.
//     Possible values are: `APPEND_FSYNC_UNSPECIFIED`, `NO`, `EVERYSEC`, `ALWAYS`.
func (o ClusterPersistenceConfigAofConfigOutput) AppendFsync() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPersistenceConfigAofConfig) *string { return v.AppendFsync }).(pulumi.StringPtrOutput)
}

type ClusterPersistenceConfigAofConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterPersistenceConfigAofConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterPersistenceConfigAofConfig)(nil)).Elem()
}

func (o ClusterPersistenceConfigAofConfigPtrOutput) ToClusterPersistenceConfigAofConfigPtrOutput() ClusterPersistenceConfigAofConfigPtrOutput {
	return o
}

func (o ClusterPersistenceConfigAofConfigPtrOutput) ToClusterPersistenceConfigAofConfigPtrOutputWithContext(ctx context.Context) ClusterPersistenceConfigAofConfigPtrOutput {
	return o
}

func (o ClusterPersistenceConfigAofConfigPtrOutput) Elem() ClusterPersistenceConfigAofConfigOutput {
	return o.ApplyT(func(v *ClusterPersistenceConfigAofConfig) ClusterPersistenceConfigAofConfig {
		if v != nil {
			return *v
		}
		var ret ClusterPersistenceConfigAofConfig
		return ret
	}).(ClusterPersistenceConfigAofConfigOutput)
}

// Optional. Available fsync modes.
//   - NO - Do not explicitly call fsync(). Rely on OS defaults.
//   - EVERYSEC - Call fsync() once per second in a background thread. A balance between performance and durability.
//   - ALWAYS - Call fsync() for earch write command.
//     Possible values are: `APPEND_FSYNC_UNSPECIFIED`, `NO`, `EVERYSEC`, `ALWAYS`.
func (o ClusterPersistenceConfigAofConfigPtrOutput) AppendFsync() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterPersistenceConfigAofConfig) *string {
		if v == nil {
			return nil
		}
		return v.AppendFsync
	}).(pulumi.StringPtrOutput)
}

type ClusterPersistenceConfigRdbConfig struct {
	// Optional. Available snapshot periods for scheduling.
	// - ONE_HOUR:	Snapshot every 1 hour.
	// - SIX_HOURS:	Snapshot every 6 hours.
	// - TWELVE_HOURS:	Snapshot every 12 hours.
	// - TWENTY_FOUR_HOURS:	Snapshot every 24 hours.
	//   Possible values are: `SNAPSHOT_PERIOD_UNSPECIFIED`, `ONE_HOUR`, `SIX_HOURS`, `TWELVE_HOURS`, `TWENTY_FOUR_HOURS`.
	RdbSnapshotPeriod *string `pulumi:"rdbSnapshotPeriod"`
	// The time that the first snapshot was/will be attempted, and to which
	// future snapshots will be aligned.
	// If not provided, the current time will be used.
	RdbSnapshotStartTime *string `pulumi:"rdbSnapshotStartTime"`
}

// ClusterPersistenceConfigRdbConfigInput is an input type that accepts ClusterPersistenceConfigRdbConfigArgs and ClusterPersistenceConfigRdbConfigOutput values.
// You can construct a concrete instance of `ClusterPersistenceConfigRdbConfigInput` via:
//
//	ClusterPersistenceConfigRdbConfigArgs{...}
type ClusterPersistenceConfigRdbConfigInput interface {
	pulumi.Input

	ToClusterPersistenceConfigRdbConfigOutput() ClusterPersistenceConfigRdbConfigOutput
	ToClusterPersistenceConfigRdbConfigOutputWithContext(context.Context) ClusterPersistenceConfigRdbConfigOutput
}

type ClusterPersistenceConfigRdbConfigArgs struct {
	// Optional. Available snapshot periods for scheduling.
	// - ONE_HOUR:	Snapshot every 1 hour.
	// - SIX_HOURS:	Snapshot every 6 hours.
	// - TWELVE_HOURS:	Snapshot every 12 hours.
	// - TWENTY_FOUR_HOURS:	Snapshot every 24 hours.
	//   Possible values are: `SNAPSHOT_PERIOD_UNSPECIFIED`, `ONE_HOUR`, `SIX_HOURS`, `TWELVE_HOURS`, `TWENTY_FOUR_HOURS`.
	RdbSnapshotPeriod pulumi.StringPtrInput `pulumi:"rdbSnapshotPeriod"`
	// The time that the first snapshot was/will be attempted, and to which
	// future snapshots will be aligned.
	// If not provided, the current time will be used.
	RdbSnapshotStartTime pulumi.StringPtrInput `pulumi:"rdbSnapshotStartTime"`
}

func (ClusterPersistenceConfigRdbConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPersistenceConfigRdbConfig)(nil)).Elem()
}

func (i ClusterPersistenceConfigRdbConfigArgs) ToClusterPersistenceConfigRdbConfigOutput() ClusterPersistenceConfigRdbConfigOutput {
	return i.ToClusterPersistenceConfigRdbConfigOutputWithContext(context.Background())
}

func (i ClusterPersistenceConfigRdbConfigArgs) ToClusterPersistenceConfigRdbConfigOutputWithContext(ctx context.Context) ClusterPersistenceConfigRdbConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPersistenceConfigRdbConfigOutput)
}

func (i ClusterPersistenceConfigRdbConfigArgs) ToClusterPersistenceConfigRdbConfigPtrOutput() ClusterPersistenceConfigRdbConfigPtrOutput {
	return i.ToClusterPersistenceConfigRdbConfigPtrOutputWithContext(context.Background())
}

func (i ClusterPersistenceConfigRdbConfigArgs) ToClusterPersistenceConfigRdbConfigPtrOutputWithContext(ctx context.Context) ClusterPersistenceConfigRdbConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPersistenceConfigRdbConfigOutput).ToClusterPersistenceConfigRdbConfigPtrOutputWithContext(ctx)
}

// ClusterPersistenceConfigRdbConfigPtrInput is an input type that accepts ClusterPersistenceConfigRdbConfigArgs, ClusterPersistenceConfigRdbConfigPtr and ClusterPersistenceConfigRdbConfigPtrOutput values.
// You can construct a concrete instance of `ClusterPersistenceConfigRdbConfigPtrInput` via:
//
//	        ClusterPersistenceConfigRdbConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterPersistenceConfigRdbConfigPtrInput interface {
	pulumi.Input

	ToClusterPersistenceConfigRdbConfigPtrOutput() ClusterPersistenceConfigRdbConfigPtrOutput
	ToClusterPersistenceConfigRdbConfigPtrOutputWithContext(context.Context) ClusterPersistenceConfigRdbConfigPtrOutput
}

type clusterPersistenceConfigRdbConfigPtrType ClusterPersistenceConfigRdbConfigArgs

func ClusterPersistenceConfigRdbConfigPtr(v *ClusterPersistenceConfigRdbConfigArgs) ClusterPersistenceConfigRdbConfigPtrInput {
	return (*clusterPersistenceConfigRdbConfigPtrType)(v)
}

func (*clusterPersistenceConfigRdbConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterPersistenceConfigRdbConfig)(nil)).Elem()
}

func (i *clusterPersistenceConfigRdbConfigPtrType) ToClusterPersistenceConfigRdbConfigPtrOutput() ClusterPersistenceConfigRdbConfigPtrOutput {
	return i.ToClusterPersistenceConfigRdbConfigPtrOutputWithContext(context.Background())
}

func (i *clusterPersistenceConfigRdbConfigPtrType) ToClusterPersistenceConfigRdbConfigPtrOutputWithContext(ctx context.Context) ClusterPersistenceConfigRdbConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPersistenceConfigRdbConfigPtrOutput)
}

type ClusterPersistenceConfigRdbConfigOutput struct{ *pulumi.OutputState }

func (ClusterPersistenceConfigRdbConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPersistenceConfigRdbConfig)(nil)).Elem()
}

func (o ClusterPersistenceConfigRdbConfigOutput) ToClusterPersistenceConfigRdbConfigOutput() ClusterPersistenceConfigRdbConfigOutput {
	return o
}

func (o ClusterPersistenceConfigRdbConfigOutput) ToClusterPersistenceConfigRdbConfigOutputWithContext(ctx context.Context) ClusterPersistenceConfigRdbConfigOutput {
	return o
}

func (o ClusterPersistenceConfigRdbConfigOutput) ToClusterPersistenceConfigRdbConfigPtrOutput() ClusterPersistenceConfigRdbConfigPtrOutput {
	return o.ToClusterPersistenceConfigRdbConfigPtrOutputWithContext(context.Background())
}

func (o ClusterPersistenceConfigRdbConfigOutput) ToClusterPersistenceConfigRdbConfigPtrOutputWithContext(ctx context.Context) ClusterPersistenceConfigRdbConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterPersistenceConfigRdbConfig) *ClusterPersistenceConfigRdbConfig {
		return &v
	}).(ClusterPersistenceConfigRdbConfigPtrOutput)
}

// Optional. Available snapshot periods for scheduling.
//   - ONE_HOUR:	Snapshot every 1 hour.
//   - SIX_HOURS:	Snapshot every 6 hours.
//   - TWELVE_HOURS:	Snapshot every 12 hours.
//   - TWENTY_FOUR_HOURS:	Snapshot every 24 hours.
//     Possible values are: `SNAPSHOT_PERIOD_UNSPECIFIED`, `ONE_HOUR`, `SIX_HOURS`, `TWELVE_HOURS`, `TWENTY_FOUR_HOURS`.
func (o ClusterPersistenceConfigRdbConfigOutput) RdbSnapshotPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPersistenceConfigRdbConfig) *string { return v.RdbSnapshotPeriod }).(pulumi.StringPtrOutput)
}

// The time that the first snapshot was/will be attempted, and to which
// future snapshots will be aligned.
// If not provided, the current time will be used.
func (o ClusterPersistenceConfigRdbConfigOutput) RdbSnapshotStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPersistenceConfigRdbConfig) *string { return v.RdbSnapshotStartTime }).(pulumi.StringPtrOutput)
}

type ClusterPersistenceConfigRdbConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterPersistenceConfigRdbConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterPersistenceConfigRdbConfig)(nil)).Elem()
}

func (o ClusterPersistenceConfigRdbConfigPtrOutput) ToClusterPersistenceConfigRdbConfigPtrOutput() ClusterPersistenceConfigRdbConfigPtrOutput {
	return o
}

func (o ClusterPersistenceConfigRdbConfigPtrOutput) ToClusterPersistenceConfigRdbConfigPtrOutputWithContext(ctx context.Context) ClusterPersistenceConfigRdbConfigPtrOutput {
	return o
}

func (o ClusterPersistenceConfigRdbConfigPtrOutput) Elem() ClusterPersistenceConfigRdbConfigOutput {
	return o.ApplyT(func(v *ClusterPersistenceConfigRdbConfig) ClusterPersistenceConfigRdbConfig {
		if v != nil {
			return *v
		}
		var ret ClusterPersistenceConfigRdbConfig
		return ret
	}).(ClusterPersistenceConfigRdbConfigOutput)
}

// Optional. Available snapshot periods for scheduling.
//   - ONE_HOUR:	Snapshot every 1 hour.
//   - SIX_HOURS:	Snapshot every 6 hours.
//   - TWELVE_HOURS:	Snapshot every 12 hours.
//   - TWENTY_FOUR_HOURS:	Snapshot every 24 hours.
//     Possible values are: `SNAPSHOT_PERIOD_UNSPECIFIED`, `ONE_HOUR`, `SIX_HOURS`, `TWELVE_HOURS`, `TWENTY_FOUR_HOURS`.
func (o ClusterPersistenceConfigRdbConfigPtrOutput) RdbSnapshotPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterPersistenceConfigRdbConfig) *string {
		if v == nil {
			return nil
		}
		return v.RdbSnapshotPeriod
	}).(pulumi.StringPtrOutput)
}

// The time that the first snapshot was/will be attempted, and to which
// future snapshots will be aligned.
// If not provided, the current time will be used.
func (o ClusterPersistenceConfigRdbConfigPtrOutput) RdbSnapshotStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterPersistenceConfigRdbConfig) *string {
		if v == nil {
			return nil
		}
		return v.RdbSnapshotStartTime
	}).(pulumi.StringPtrOutput)
}

type ClusterPscConfig struct {
	// Required. The consumer network where the network address of
	// the discovery endpoint will be reserved, in the form of
	// projects/{network_project_id_or_number}/global/networks/{network_id}.
	Network string `pulumi:"network"`
}

// ClusterPscConfigInput is an input type that accepts ClusterPscConfigArgs and ClusterPscConfigOutput values.
// You can construct a concrete instance of `ClusterPscConfigInput` via:
//
//	ClusterPscConfigArgs{...}
type ClusterPscConfigInput interface {
	pulumi.Input

	ToClusterPscConfigOutput() ClusterPscConfigOutput
	ToClusterPscConfigOutputWithContext(context.Context) ClusterPscConfigOutput
}

type ClusterPscConfigArgs struct {
	// Required. The consumer network where the network address of
	// the discovery endpoint will be reserved, in the form of
	// projects/{network_project_id_or_number}/global/networks/{network_id}.
	Network pulumi.StringInput `pulumi:"network"`
}

func (ClusterPscConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPscConfig)(nil)).Elem()
}

func (i ClusterPscConfigArgs) ToClusterPscConfigOutput() ClusterPscConfigOutput {
	return i.ToClusterPscConfigOutputWithContext(context.Background())
}

func (i ClusterPscConfigArgs) ToClusterPscConfigOutputWithContext(ctx context.Context) ClusterPscConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPscConfigOutput)
}

// ClusterPscConfigArrayInput is an input type that accepts ClusterPscConfigArray and ClusterPscConfigArrayOutput values.
// You can construct a concrete instance of `ClusterPscConfigArrayInput` via:
//
//	ClusterPscConfigArray{ ClusterPscConfigArgs{...} }
type ClusterPscConfigArrayInput interface {
	pulumi.Input

	ToClusterPscConfigArrayOutput() ClusterPscConfigArrayOutput
	ToClusterPscConfigArrayOutputWithContext(context.Context) ClusterPscConfigArrayOutput
}

type ClusterPscConfigArray []ClusterPscConfigInput

func (ClusterPscConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterPscConfig)(nil)).Elem()
}

func (i ClusterPscConfigArray) ToClusterPscConfigArrayOutput() ClusterPscConfigArrayOutput {
	return i.ToClusterPscConfigArrayOutputWithContext(context.Background())
}

func (i ClusterPscConfigArray) ToClusterPscConfigArrayOutputWithContext(ctx context.Context) ClusterPscConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPscConfigArrayOutput)
}

type ClusterPscConfigOutput struct{ *pulumi.OutputState }

func (ClusterPscConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPscConfig)(nil)).Elem()
}

func (o ClusterPscConfigOutput) ToClusterPscConfigOutput() ClusterPscConfigOutput {
	return o
}

func (o ClusterPscConfigOutput) ToClusterPscConfigOutputWithContext(ctx context.Context) ClusterPscConfigOutput {
	return o
}

// Required. The consumer network where the network address of
// the discovery endpoint will be reserved, in the form of
// projects/{network_project_id_or_number}/global/networks/{network_id}.
func (o ClusterPscConfigOutput) Network() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterPscConfig) string { return v.Network }).(pulumi.StringOutput)
}

type ClusterPscConfigArrayOutput struct{ *pulumi.OutputState }

func (ClusterPscConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterPscConfig)(nil)).Elem()
}

func (o ClusterPscConfigArrayOutput) ToClusterPscConfigArrayOutput() ClusterPscConfigArrayOutput {
	return o
}

func (o ClusterPscConfigArrayOutput) ToClusterPscConfigArrayOutputWithContext(ctx context.Context) ClusterPscConfigArrayOutput {
	return o
}

func (o ClusterPscConfigArrayOutput) Index(i pulumi.IntInput) ClusterPscConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterPscConfig {
		return vs[0].([]ClusterPscConfig)[vs[1].(int)]
	}).(ClusterPscConfigOutput)
}

type ClusterPscConnection struct {
	// Output only. The IP allocated on the consumer network for the PSC forwarding rule.
	Address *string `pulumi:"address"`
	// Output only. The URI of the consumer side forwarding rule. Example: projects/{projectNumOrId}/regions/us-east1/forwardingRules/{resourceId}.
	ForwardingRule *string `pulumi:"forwardingRule"`
	// The consumer network where the IP address resides, in the form of projects/{projectId}/global/networks/{network_id}.
	Network *string `pulumi:"network"`
	// Output only. The consumer projectId where the forwarding rule is created from.
	ProjectId *string `pulumi:"projectId"`
	// Output only. The PSC connection id of the forwarding rule connected to the service attachment.
	PscConnectionId *string `pulumi:"pscConnectionId"`
}

// ClusterPscConnectionInput is an input type that accepts ClusterPscConnectionArgs and ClusterPscConnectionOutput values.
// You can construct a concrete instance of `ClusterPscConnectionInput` via:
//
//	ClusterPscConnectionArgs{...}
type ClusterPscConnectionInput interface {
	pulumi.Input

	ToClusterPscConnectionOutput() ClusterPscConnectionOutput
	ToClusterPscConnectionOutputWithContext(context.Context) ClusterPscConnectionOutput
}

type ClusterPscConnectionArgs struct {
	// Output only. The IP allocated on the consumer network for the PSC forwarding rule.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// Output only. The URI of the consumer side forwarding rule. Example: projects/{projectNumOrId}/regions/us-east1/forwardingRules/{resourceId}.
	ForwardingRule pulumi.StringPtrInput `pulumi:"forwardingRule"`
	// The consumer network where the IP address resides, in the form of projects/{projectId}/global/networks/{network_id}.
	Network pulumi.StringPtrInput `pulumi:"network"`
	// Output only. The consumer projectId where the forwarding rule is created from.
	ProjectId pulumi.StringPtrInput `pulumi:"projectId"`
	// Output only. The PSC connection id of the forwarding rule connected to the service attachment.
	PscConnectionId pulumi.StringPtrInput `pulumi:"pscConnectionId"`
}

func (ClusterPscConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPscConnection)(nil)).Elem()
}

func (i ClusterPscConnectionArgs) ToClusterPscConnectionOutput() ClusterPscConnectionOutput {
	return i.ToClusterPscConnectionOutputWithContext(context.Background())
}

func (i ClusterPscConnectionArgs) ToClusterPscConnectionOutputWithContext(ctx context.Context) ClusterPscConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPscConnectionOutput)
}

// ClusterPscConnectionArrayInput is an input type that accepts ClusterPscConnectionArray and ClusterPscConnectionArrayOutput values.
// You can construct a concrete instance of `ClusterPscConnectionArrayInput` via:
//
//	ClusterPscConnectionArray{ ClusterPscConnectionArgs{...} }
type ClusterPscConnectionArrayInput interface {
	pulumi.Input

	ToClusterPscConnectionArrayOutput() ClusterPscConnectionArrayOutput
	ToClusterPscConnectionArrayOutputWithContext(context.Context) ClusterPscConnectionArrayOutput
}

type ClusterPscConnectionArray []ClusterPscConnectionInput

func (ClusterPscConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterPscConnection)(nil)).Elem()
}

func (i ClusterPscConnectionArray) ToClusterPscConnectionArrayOutput() ClusterPscConnectionArrayOutput {
	return i.ToClusterPscConnectionArrayOutputWithContext(context.Background())
}

func (i ClusterPscConnectionArray) ToClusterPscConnectionArrayOutputWithContext(ctx context.Context) ClusterPscConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPscConnectionArrayOutput)
}

type ClusterPscConnectionOutput struct{ *pulumi.OutputState }

func (ClusterPscConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPscConnection)(nil)).Elem()
}

func (o ClusterPscConnectionOutput) ToClusterPscConnectionOutput() ClusterPscConnectionOutput {
	return o
}

func (o ClusterPscConnectionOutput) ToClusterPscConnectionOutputWithContext(ctx context.Context) ClusterPscConnectionOutput {
	return o
}

// Output only. The IP allocated on the consumer network for the PSC forwarding rule.
func (o ClusterPscConnectionOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPscConnection) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// Output only. The URI of the consumer side forwarding rule. Example: projects/{projectNumOrId}/regions/us-east1/forwardingRules/{resourceId}.
func (o ClusterPscConnectionOutput) ForwardingRule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPscConnection) *string { return v.ForwardingRule }).(pulumi.StringPtrOutput)
}

// The consumer network where the IP address resides, in the form of projects/{projectId}/global/networks/{network_id}.
func (o ClusterPscConnectionOutput) Network() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPscConnection) *string { return v.Network }).(pulumi.StringPtrOutput)
}

// Output only. The consumer projectId where the forwarding rule is created from.
func (o ClusterPscConnectionOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPscConnection) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

// Output only. The PSC connection id of the forwarding rule connected to the service attachment.
func (o ClusterPscConnectionOutput) PscConnectionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPscConnection) *string { return v.PscConnectionId }).(pulumi.StringPtrOutput)
}

type ClusterPscConnectionArrayOutput struct{ *pulumi.OutputState }

func (ClusterPscConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterPscConnection)(nil)).Elem()
}

func (o ClusterPscConnectionArrayOutput) ToClusterPscConnectionArrayOutput() ClusterPscConnectionArrayOutput {
	return o
}

func (o ClusterPscConnectionArrayOutput) ToClusterPscConnectionArrayOutputWithContext(ctx context.Context) ClusterPscConnectionArrayOutput {
	return o
}

func (o ClusterPscConnectionArrayOutput) Index(i pulumi.IntInput) ClusterPscConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterPscConnection {
		return vs[0].([]ClusterPscConnection)[vs[1].(int)]
	}).(ClusterPscConnectionOutput)
}

type ClusterPscServiceAttachment struct {
	// (Output)
	// Type of a PSC connection targeting this service attachment.
	ConnectionType *string `pulumi:"connectionType"`
	// (Output)
	// Service attachment URI which your self-created PscConnection should use as
	ServiceAttachment *string `pulumi:"serviceAttachment"`
}

// ClusterPscServiceAttachmentInput is an input type that accepts ClusterPscServiceAttachmentArgs and ClusterPscServiceAttachmentOutput values.
// You can construct a concrete instance of `ClusterPscServiceAttachmentInput` via:
//
//	ClusterPscServiceAttachmentArgs{...}
type ClusterPscServiceAttachmentInput interface {
	pulumi.Input

	ToClusterPscServiceAttachmentOutput() ClusterPscServiceAttachmentOutput
	ToClusterPscServiceAttachmentOutputWithContext(context.Context) ClusterPscServiceAttachmentOutput
}

type ClusterPscServiceAttachmentArgs struct {
	// (Output)
	// Type of a PSC connection targeting this service attachment.
	ConnectionType pulumi.StringPtrInput `pulumi:"connectionType"`
	// (Output)
	// Service attachment URI which your self-created PscConnection should use as
	ServiceAttachment pulumi.StringPtrInput `pulumi:"serviceAttachment"`
}

func (ClusterPscServiceAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPscServiceAttachment)(nil)).Elem()
}

func (i ClusterPscServiceAttachmentArgs) ToClusterPscServiceAttachmentOutput() ClusterPscServiceAttachmentOutput {
	return i.ToClusterPscServiceAttachmentOutputWithContext(context.Background())
}

func (i ClusterPscServiceAttachmentArgs) ToClusterPscServiceAttachmentOutputWithContext(ctx context.Context) ClusterPscServiceAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPscServiceAttachmentOutput)
}

// ClusterPscServiceAttachmentArrayInput is an input type that accepts ClusterPscServiceAttachmentArray and ClusterPscServiceAttachmentArrayOutput values.
// You can construct a concrete instance of `ClusterPscServiceAttachmentArrayInput` via:
//
//	ClusterPscServiceAttachmentArray{ ClusterPscServiceAttachmentArgs{...} }
type ClusterPscServiceAttachmentArrayInput interface {
	pulumi.Input

	ToClusterPscServiceAttachmentArrayOutput() ClusterPscServiceAttachmentArrayOutput
	ToClusterPscServiceAttachmentArrayOutputWithContext(context.Context) ClusterPscServiceAttachmentArrayOutput
}

type ClusterPscServiceAttachmentArray []ClusterPscServiceAttachmentInput

func (ClusterPscServiceAttachmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterPscServiceAttachment)(nil)).Elem()
}

func (i ClusterPscServiceAttachmentArray) ToClusterPscServiceAttachmentArrayOutput() ClusterPscServiceAttachmentArrayOutput {
	return i.ToClusterPscServiceAttachmentArrayOutputWithContext(context.Background())
}

func (i ClusterPscServiceAttachmentArray) ToClusterPscServiceAttachmentArrayOutputWithContext(ctx context.Context) ClusterPscServiceAttachmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPscServiceAttachmentArrayOutput)
}

type ClusterPscServiceAttachmentOutput struct{ *pulumi.OutputState }

func (ClusterPscServiceAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPscServiceAttachment)(nil)).Elem()
}

func (o ClusterPscServiceAttachmentOutput) ToClusterPscServiceAttachmentOutput() ClusterPscServiceAttachmentOutput {
	return o
}

func (o ClusterPscServiceAttachmentOutput) ToClusterPscServiceAttachmentOutputWithContext(ctx context.Context) ClusterPscServiceAttachmentOutput {
	return o
}

// (Output)
// Type of a PSC connection targeting this service attachment.
func (o ClusterPscServiceAttachmentOutput) ConnectionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPscServiceAttachment) *string { return v.ConnectionType }).(pulumi.StringPtrOutput)
}

// (Output)
// Service attachment URI which your self-created PscConnection should use as
func (o ClusterPscServiceAttachmentOutput) ServiceAttachment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPscServiceAttachment) *string { return v.ServiceAttachment }).(pulumi.StringPtrOutput)
}

type ClusterPscServiceAttachmentArrayOutput struct{ *pulumi.OutputState }

func (ClusterPscServiceAttachmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterPscServiceAttachment)(nil)).Elem()
}

func (o ClusterPscServiceAttachmentArrayOutput) ToClusterPscServiceAttachmentArrayOutput() ClusterPscServiceAttachmentArrayOutput {
	return o
}

func (o ClusterPscServiceAttachmentArrayOutput) ToClusterPscServiceAttachmentArrayOutputWithContext(ctx context.Context) ClusterPscServiceAttachmentArrayOutput {
	return o
}

func (o ClusterPscServiceAttachmentArrayOutput) Index(i pulumi.IntInput) ClusterPscServiceAttachmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterPscServiceAttachment {
		return vs[0].([]ClusterPscServiceAttachment)[vs[1].(int)]
	}).(ClusterPscServiceAttachmentOutput)
}

type ClusterStateInfo struct {
	// A nested object resource.
	// Structure is documented below.
	UpdateInfo *ClusterStateInfoUpdateInfo `pulumi:"updateInfo"`
}

// ClusterStateInfoInput is an input type that accepts ClusterStateInfoArgs and ClusterStateInfoOutput values.
// You can construct a concrete instance of `ClusterStateInfoInput` via:
//
//	ClusterStateInfoArgs{...}
type ClusterStateInfoInput interface {
	pulumi.Input

	ToClusterStateInfoOutput() ClusterStateInfoOutput
	ToClusterStateInfoOutputWithContext(context.Context) ClusterStateInfoOutput
}

type ClusterStateInfoArgs struct {
	// A nested object resource.
	// Structure is documented below.
	UpdateInfo ClusterStateInfoUpdateInfoPtrInput `pulumi:"updateInfo"`
}

func (ClusterStateInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterStateInfo)(nil)).Elem()
}

func (i ClusterStateInfoArgs) ToClusterStateInfoOutput() ClusterStateInfoOutput {
	return i.ToClusterStateInfoOutputWithContext(context.Background())
}

func (i ClusterStateInfoArgs) ToClusterStateInfoOutputWithContext(ctx context.Context) ClusterStateInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterStateInfoOutput)
}

// ClusterStateInfoArrayInput is an input type that accepts ClusterStateInfoArray and ClusterStateInfoArrayOutput values.
// You can construct a concrete instance of `ClusterStateInfoArrayInput` via:
//
//	ClusterStateInfoArray{ ClusterStateInfoArgs{...} }
type ClusterStateInfoArrayInput interface {
	pulumi.Input

	ToClusterStateInfoArrayOutput() ClusterStateInfoArrayOutput
	ToClusterStateInfoArrayOutputWithContext(context.Context) ClusterStateInfoArrayOutput
}

type ClusterStateInfoArray []ClusterStateInfoInput

func (ClusterStateInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterStateInfo)(nil)).Elem()
}

func (i ClusterStateInfoArray) ToClusterStateInfoArrayOutput() ClusterStateInfoArrayOutput {
	return i.ToClusterStateInfoArrayOutputWithContext(context.Background())
}

func (i ClusterStateInfoArray) ToClusterStateInfoArrayOutputWithContext(ctx context.Context) ClusterStateInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterStateInfoArrayOutput)
}

type ClusterStateInfoOutput struct{ *pulumi.OutputState }

func (ClusterStateInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterStateInfo)(nil)).Elem()
}

func (o ClusterStateInfoOutput) ToClusterStateInfoOutput() ClusterStateInfoOutput {
	return o
}

func (o ClusterStateInfoOutput) ToClusterStateInfoOutputWithContext(ctx context.Context) ClusterStateInfoOutput {
	return o
}

// A nested object resource.
// Structure is documented below.
func (o ClusterStateInfoOutput) UpdateInfo() ClusterStateInfoUpdateInfoPtrOutput {
	return o.ApplyT(func(v ClusterStateInfo) *ClusterStateInfoUpdateInfo { return v.UpdateInfo }).(ClusterStateInfoUpdateInfoPtrOutput)
}

type ClusterStateInfoArrayOutput struct{ *pulumi.OutputState }

func (ClusterStateInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterStateInfo)(nil)).Elem()
}

func (o ClusterStateInfoArrayOutput) ToClusterStateInfoArrayOutput() ClusterStateInfoArrayOutput {
	return o
}

func (o ClusterStateInfoArrayOutput) ToClusterStateInfoArrayOutputWithContext(ctx context.Context) ClusterStateInfoArrayOutput {
	return o
}

func (o ClusterStateInfoArrayOutput) Index(i pulumi.IntInput) ClusterStateInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterStateInfo {
		return vs[0].([]ClusterStateInfo)[vs[1].(int)]
	}).(ClusterStateInfoOutput)
}

type ClusterStateInfoUpdateInfo struct {
	// Target number of replica nodes per shard.
	TargetReplicaCount *int `pulumi:"targetReplicaCount"`
	// Target number of shards for redis cluster.
	TargetShardCount *int `pulumi:"targetShardCount"`
}

// ClusterStateInfoUpdateInfoInput is an input type that accepts ClusterStateInfoUpdateInfoArgs and ClusterStateInfoUpdateInfoOutput values.
// You can construct a concrete instance of `ClusterStateInfoUpdateInfoInput` via:
//
//	ClusterStateInfoUpdateInfoArgs{...}
type ClusterStateInfoUpdateInfoInput interface {
	pulumi.Input

	ToClusterStateInfoUpdateInfoOutput() ClusterStateInfoUpdateInfoOutput
	ToClusterStateInfoUpdateInfoOutputWithContext(context.Context) ClusterStateInfoUpdateInfoOutput
}

type ClusterStateInfoUpdateInfoArgs struct {
	// Target number of replica nodes per shard.
	TargetReplicaCount pulumi.IntPtrInput `pulumi:"targetReplicaCount"`
	// Target number of shards for redis cluster.
	TargetShardCount pulumi.IntPtrInput `pulumi:"targetShardCount"`
}

func (ClusterStateInfoUpdateInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterStateInfoUpdateInfo)(nil)).Elem()
}

func (i ClusterStateInfoUpdateInfoArgs) ToClusterStateInfoUpdateInfoOutput() ClusterStateInfoUpdateInfoOutput {
	return i.ToClusterStateInfoUpdateInfoOutputWithContext(context.Background())
}

func (i ClusterStateInfoUpdateInfoArgs) ToClusterStateInfoUpdateInfoOutputWithContext(ctx context.Context) ClusterStateInfoUpdateInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterStateInfoUpdateInfoOutput)
}

func (i ClusterStateInfoUpdateInfoArgs) ToClusterStateInfoUpdateInfoPtrOutput() ClusterStateInfoUpdateInfoPtrOutput {
	return i.ToClusterStateInfoUpdateInfoPtrOutputWithContext(context.Background())
}

func (i ClusterStateInfoUpdateInfoArgs) ToClusterStateInfoUpdateInfoPtrOutputWithContext(ctx context.Context) ClusterStateInfoUpdateInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterStateInfoUpdateInfoOutput).ToClusterStateInfoUpdateInfoPtrOutputWithContext(ctx)
}

// ClusterStateInfoUpdateInfoPtrInput is an input type that accepts ClusterStateInfoUpdateInfoArgs, ClusterStateInfoUpdateInfoPtr and ClusterStateInfoUpdateInfoPtrOutput values.
// You can construct a concrete instance of `ClusterStateInfoUpdateInfoPtrInput` via:
//
//	        ClusterStateInfoUpdateInfoArgs{...}
//
//	or:
//
//	        nil
type ClusterStateInfoUpdateInfoPtrInput interface {
	pulumi.Input

	ToClusterStateInfoUpdateInfoPtrOutput() ClusterStateInfoUpdateInfoPtrOutput
	ToClusterStateInfoUpdateInfoPtrOutputWithContext(context.Context) ClusterStateInfoUpdateInfoPtrOutput
}

type clusterStateInfoUpdateInfoPtrType ClusterStateInfoUpdateInfoArgs

func ClusterStateInfoUpdateInfoPtr(v *ClusterStateInfoUpdateInfoArgs) ClusterStateInfoUpdateInfoPtrInput {
	return (*clusterStateInfoUpdateInfoPtrType)(v)
}

func (*clusterStateInfoUpdateInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterStateInfoUpdateInfo)(nil)).Elem()
}

func (i *clusterStateInfoUpdateInfoPtrType) ToClusterStateInfoUpdateInfoPtrOutput() ClusterStateInfoUpdateInfoPtrOutput {
	return i.ToClusterStateInfoUpdateInfoPtrOutputWithContext(context.Background())
}

func (i *clusterStateInfoUpdateInfoPtrType) ToClusterStateInfoUpdateInfoPtrOutputWithContext(ctx context.Context) ClusterStateInfoUpdateInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterStateInfoUpdateInfoPtrOutput)
}

type ClusterStateInfoUpdateInfoOutput struct{ *pulumi.OutputState }

func (ClusterStateInfoUpdateInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterStateInfoUpdateInfo)(nil)).Elem()
}

func (o ClusterStateInfoUpdateInfoOutput) ToClusterStateInfoUpdateInfoOutput() ClusterStateInfoUpdateInfoOutput {
	return o
}

func (o ClusterStateInfoUpdateInfoOutput) ToClusterStateInfoUpdateInfoOutputWithContext(ctx context.Context) ClusterStateInfoUpdateInfoOutput {
	return o
}

func (o ClusterStateInfoUpdateInfoOutput) ToClusterStateInfoUpdateInfoPtrOutput() ClusterStateInfoUpdateInfoPtrOutput {
	return o.ToClusterStateInfoUpdateInfoPtrOutputWithContext(context.Background())
}

func (o ClusterStateInfoUpdateInfoOutput) ToClusterStateInfoUpdateInfoPtrOutputWithContext(ctx context.Context) ClusterStateInfoUpdateInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterStateInfoUpdateInfo) *ClusterStateInfoUpdateInfo {
		return &v
	}).(ClusterStateInfoUpdateInfoPtrOutput)
}

// Target number of replica nodes per shard.
func (o ClusterStateInfoUpdateInfoOutput) TargetReplicaCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterStateInfoUpdateInfo) *int { return v.TargetReplicaCount }).(pulumi.IntPtrOutput)
}

// Target number of shards for redis cluster.
func (o ClusterStateInfoUpdateInfoOutput) TargetShardCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterStateInfoUpdateInfo) *int { return v.TargetShardCount }).(pulumi.IntPtrOutput)
}

type ClusterStateInfoUpdateInfoPtrOutput struct{ *pulumi.OutputState }

func (ClusterStateInfoUpdateInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterStateInfoUpdateInfo)(nil)).Elem()
}

func (o ClusterStateInfoUpdateInfoPtrOutput) ToClusterStateInfoUpdateInfoPtrOutput() ClusterStateInfoUpdateInfoPtrOutput {
	return o
}

func (o ClusterStateInfoUpdateInfoPtrOutput) ToClusterStateInfoUpdateInfoPtrOutputWithContext(ctx context.Context) ClusterStateInfoUpdateInfoPtrOutput {
	return o
}

func (o ClusterStateInfoUpdateInfoPtrOutput) Elem() ClusterStateInfoUpdateInfoOutput {
	return o.ApplyT(func(v *ClusterStateInfoUpdateInfo) ClusterStateInfoUpdateInfo {
		if v != nil {
			return *v
		}
		var ret ClusterStateInfoUpdateInfo
		return ret
	}).(ClusterStateInfoUpdateInfoOutput)
}

// Target number of replica nodes per shard.
func (o ClusterStateInfoUpdateInfoPtrOutput) TargetReplicaCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterStateInfoUpdateInfo) *int {
		if v == nil {
			return nil
		}
		return v.TargetReplicaCount
	}).(pulumi.IntPtrOutput)
}

// Target number of shards for redis cluster.
func (o ClusterStateInfoUpdateInfoPtrOutput) TargetShardCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterStateInfoUpdateInfo) *int {
		if v == nil {
			return nil
		}
		return v.TargetShardCount
	}).(pulumi.IntPtrOutput)
}

type ClusterUserCreatedConnectionsClusterEndpoint struct {
	// Structure is documented below.
	Connections []ClusterUserCreatedConnectionsClusterEndpointConnection `pulumi:"connections"`
}

// ClusterUserCreatedConnectionsClusterEndpointInput is an input type that accepts ClusterUserCreatedConnectionsClusterEndpointArgs and ClusterUserCreatedConnectionsClusterEndpointOutput values.
// You can construct a concrete instance of `ClusterUserCreatedConnectionsClusterEndpointInput` via:
//
//	ClusterUserCreatedConnectionsClusterEndpointArgs{...}
type ClusterUserCreatedConnectionsClusterEndpointInput interface {
	pulumi.Input

	ToClusterUserCreatedConnectionsClusterEndpointOutput() ClusterUserCreatedConnectionsClusterEndpointOutput
	ToClusterUserCreatedConnectionsClusterEndpointOutputWithContext(context.Context) ClusterUserCreatedConnectionsClusterEndpointOutput
}

type ClusterUserCreatedConnectionsClusterEndpointArgs struct {
	// Structure is documented below.
	Connections ClusterUserCreatedConnectionsClusterEndpointConnectionArrayInput `pulumi:"connections"`
}

func (ClusterUserCreatedConnectionsClusterEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterUserCreatedConnectionsClusterEndpoint)(nil)).Elem()
}

func (i ClusterUserCreatedConnectionsClusterEndpointArgs) ToClusterUserCreatedConnectionsClusterEndpointOutput() ClusterUserCreatedConnectionsClusterEndpointOutput {
	return i.ToClusterUserCreatedConnectionsClusterEndpointOutputWithContext(context.Background())
}

func (i ClusterUserCreatedConnectionsClusterEndpointArgs) ToClusterUserCreatedConnectionsClusterEndpointOutputWithContext(ctx context.Context) ClusterUserCreatedConnectionsClusterEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterUserCreatedConnectionsClusterEndpointOutput)
}

// ClusterUserCreatedConnectionsClusterEndpointArrayInput is an input type that accepts ClusterUserCreatedConnectionsClusterEndpointArray and ClusterUserCreatedConnectionsClusterEndpointArrayOutput values.
// You can construct a concrete instance of `ClusterUserCreatedConnectionsClusterEndpointArrayInput` via:
//
//	ClusterUserCreatedConnectionsClusterEndpointArray{ ClusterUserCreatedConnectionsClusterEndpointArgs{...} }
type ClusterUserCreatedConnectionsClusterEndpointArrayInput interface {
	pulumi.Input

	ToClusterUserCreatedConnectionsClusterEndpointArrayOutput() ClusterUserCreatedConnectionsClusterEndpointArrayOutput
	ToClusterUserCreatedConnectionsClusterEndpointArrayOutputWithContext(context.Context) ClusterUserCreatedConnectionsClusterEndpointArrayOutput
}

type ClusterUserCreatedConnectionsClusterEndpointArray []ClusterUserCreatedConnectionsClusterEndpointInput

func (ClusterUserCreatedConnectionsClusterEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterUserCreatedConnectionsClusterEndpoint)(nil)).Elem()
}

func (i ClusterUserCreatedConnectionsClusterEndpointArray) ToClusterUserCreatedConnectionsClusterEndpointArrayOutput() ClusterUserCreatedConnectionsClusterEndpointArrayOutput {
	return i.ToClusterUserCreatedConnectionsClusterEndpointArrayOutputWithContext(context.Background())
}

func (i ClusterUserCreatedConnectionsClusterEndpointArray) ToClusterUserCreatedConnectionsClusterEndpointArrayOutputWithContext(ctx context.Context) ClusterUserCreatedConnectionsClusterEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterUserCreatedConnectionsClusterEndpointArrayOutput)
}

type ClusterUserCreatedConnectionsClusterEndpointOutput struct{ *pulumi.OutputState }

func (ClusterUserCreatedConnectionsClusterEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterUserCreatedConnectionsClusterEndpoint)(nil)).Elem()
}

func (o ClusterUserCreatedConnectionsClusterEndpointOutput) ToClusterUserCreatedConnectionsClusterEndpointOutput() ClusterUserCreatedConnectionsClusterEndpointOutput {
	return o
}

func (o ClusterUserCreatedConnectionsClusterEndpointOutput) ToClusterUserCreatedConnectionsClusterEndpointOutputWithContext(ctx context.Context) ClusterUserCreatedConnectionsClusterEndpointOutput {
	return o
}

// Structure is documented below.
func (o ClusterUserCreatedConnectionsClusterEndpointOutput) Connections() ClusterUserCreatedConnectionsClusterEndpointConnectionArrayOutput {
	return o.ApplyT(func(v ClusterUserCreatedConnectionsClusterEndpoint) []ClusterUserCreatedConnectionsClusterEndpointConnection {
		return v.Connections
	}).(ClusterUserCreatedConnectionsClusterEndpointConnectionArrayOutput)
}

type ClusterUserCreatedConnectionsClusterEndpointArrayOutput struct{ *pulumi.OutputState }

func (ClusterUserCreatedConnectionsClusterEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterUserCreatedConnectionsClusterEndpoint)(nil)).Elem()
}

func (o ClusterUserCreatedConnectionsClusterEndpointArrayOutput) ToClusterUserCreatedConnectionsClusterEndpointArrayOutput() ClusterUserCreatedConnectionsClusterEndpointArrayOutput {
	return o
}

func (o ClusterUserCreatedConnectionsClusterEndpointArrayOutput) ToClusterUserCreatedConnectionsClusterEndpointArrayOutputWithContext(ctx context.Context) ClusterUserCreatedConnectionsClusterEndpointArrayOutput {
	return o
}

func (o ClusterUserCreatedConnectionsClusterEndpointArrayOutput) Index(i pulumi.IntInput) ClusterUserCreatedConnectionsClusterEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterUserCreatedConnectionsClusterEndpoint {
		return vs[0].([]ClusterUserCreatedConnectionsClusterEndpoint)[vs[1].(int)]
	}).(ClusterUserCreatedConnectionsClusterEndpointOutput)
}

type ClusterUserCreatedConnectionsClusterEndpointConnection struct {
	// Detailed information of a PSC connection that is created by the customer
	// who owns the cluster.
	// Structure is documented below.
	PscConnection *ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnection `pulumi:"pscConnection"`
}

// ClusterUserCreatedConnectionsClusterEndpointConnectionInput is an input type that accepts ClusterUserCreatedConnectionsClusterEndpointConnectionArgs and ClusterUserCreatedConnectionsClusterEndpointConnectionOutput values.
// You can construct a concrete instance of `ClusterUserCreatedConnectionsClusterEndpointConnectionInput` via:
//
//	ClusterUserCreatedConnectionsClusterEndpointConnectionArgs{...}
type ClusterUserCreatedConnectionsClusterEndpointConnectionInput interface {
	pulumi.Input

	ToClusterUserCreatedConnectionsClusterEndpointConnectionOutput() ClusterUserCreatedConnectionsClusterEndpointConnectionOutput
	ToClusterUserCreatedConnectionsClusterEndpointConnectionOutputWithContext(context.Context) ClusterUserCreatedConnectionsClusterEndpointConnectionOutput
}

type ClusterUserCreatedConnectionsClusterEndpointConnectionArgs struct {
	// Detailed information of a PSC connection that is created by the customer
	// who owns the cluster.
	// Structure is documented below.
	PscConnection ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrInput `pulumi:"pscConnection"`
}

func (ClusterUserCreatedConnectionsClusterEndpointConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterUserCreatedConnectionsClusterEndpointConnection)(nil)).Elem()
}

func (i ClusterUserCreatedConnectionsClusterEndpointConnectionArgs) ToClusterUserCreatedConnectionsClusterEndpointConnectionOutput() ClusterUserCreatedConnectionsClusterEndpointConnectionOutput {
	return i.ToClusterUserCreatedConnectionsClusterEndpointConnectionOutputWithContext(context.Background())
}

func (i ClusterUserCreatedConnectionsClusterEndpointConnectionArgs) ToClusterUserCreatedConnectionsClusterEndpointConnectionOutputWithContext(ctx context.Context) ClusterUserCreatedConnectionsClusterEndpointConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterUserCreatedConnectionsClusterEndpointConnectionOutput)
}

// ClusterUserCreatedConnectionsClusterEndpointConnectionArrayInput is an input type that accepts ClusterUserCreatedConnectionsClusterEndpointConnectionArray and ClusterUserCreatedConnectionsClusterEndpointConnectionArrayOutput values.
// You can construct a concrete instance of `ClusterUserCreatedConnectionsClusterEndpointConnectionArrayInput` via:
//
//	ClusterUserCreatedConnectionsClusterEndpointConnectionArray{ ClusterUserCreatedConnectionsClusterEndpointConnectionArgs{...} }
type ClusterUserCreatedConnectionsClusterEndpointConnectionArrayInput interface {
	pulumi.Input

	ToClusterUserCreatedConnectionsClusterEndpointConnectionArrayOutput() ClusterUserCreatedConnectionsClusterEndpointConnectionArrayOutput
	ToClusterUserCreatedConnectionsClusterEndpointConnectionArrayOutputWithContext(context.Context) ClusterUserCreatedConnectionsClusterEndpointConnectionArrayOutput
}

type ClusterUserCreatedConnectionsClusterEndpointConnectionArray []ClusterUserCreatedConnectionsClusterEndpointConnectionInput

func (ClusterUserCreatedConnectionsClusterEndpointConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterUserCreatedConnectionsClusterEndpointConnection)(nil)).Elem()
}

func (i ClusterUserCreatedConnectionsClusterEndpointConnectionArray) ToClusterUserCreatedConnectionsClusterEndpointConnectionArrayOutput() ClusterUserCreatedConnectionsClusterEndpointConnectionArrayOutput {
	return i.ToClusterUserCreatedConnectionsClusterEndpointConnectionArrayOutputWithContext(context.Background())
}

func (i ClusterUserCreatedConnectionsClusterEndpointConnectionArray) ToClusterUserCreatedConnectionsClusterEndpointConnectionArrayOutputWithContext(ctx context.Context) ClusterUserCreatedConnectionsClusterEndpointConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterUserCreatedConnectionsClusterEndpointConnectionArrayOutput)
}

type ClusterUserCreatedConnectionsClusterEndpointConnectionOutput struct{ *pulumi.OutputState }

func (ClusterUserCreatedConnectionsClusterEndpointConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterUserCreatedConnectionsClusterEndpointConnection)(nil)).Elem()
}

func (o ClusterUserCreatedConnectionsClusterEndpointConnectionOutput) ToClusterUserCreatedConnectionsClusterEndpointConnectionOutput() ClusterUserCreatedConnectionsClusterEndpointConnectionOutput {
	return o
}

func (o ClusterUserCreatedConnectionsClusterEndpointConnectionOutput) ToClusterUserCreatedConnectionsClusterEndpointConnectionOutputWithContext(ctx context.Context) ClusterUserCreatedConnectionsClusterEndpointConnectionOutput {
	return o
}

// Detailed information of a PSC connection that is created by the customer
// who owns the cluster.
// Structure is documented below.
func (o ClusterUserCreatedConnectionsClusterEndpointConnectionOutput) PscConnection() ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutput {
	return o.ApplyT(func(v ClusterUserCreatedConnectionsClusterEndpointConnection) *ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnection {
		return v.PscConnection
	}).(ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutput)
}

type ClusterUserCreatedConnectionsClusterEndpointConnectionArrayOutput struct{ *pulumi.OutputState }

func (ClusterUserCreatedConnectionsClusterEndpointConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterUserCreatedConnectionsClusterEndpointConnection)(nil)).Elem()
}

func (o ClusterUserCreatedConnectionsClusterEndpointConnectionArrayOutput) ToClusterUserCreatedConnectionsClusterEndpointConnectionArrayOutput() ClusterUserCreatedConnectionsClusterEndpointConnectionArrayOutput {
	return o
}

func (o ClusterUserCreatedConnectionsClusterEndpointConnectionArrayOutput) ToClusterUserCreatedConnectionsClusterEndpointConnectionArrayOutputWithContext(ctx context.Context) ClusterUserCreatedConnectionsClusterEndpointConnectionArrayOutput {
	return o
}

func (o ClusterUserCreatedConnectionsClusterEndpointConnectionArrayOutput) Index(i pulumi.IntInput) ClusterUserCreatedConnectionsClusterEndpointConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterUserCreatedConnectionsClusterEndpointConnection {
		return vs[0].([]ClusterUserCreatedConnectionsClusterEndpointConnection)[vs[1].(int)]
	}).(ClusterUserCreatedConnectionsClusterEndpointConnectionOutput)
}

type ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnection struct {
	// The IP allocated on the consumer network for the PSC forwarding rule.
	Address string `pulumi:"address"`
	// (Output)
	// Output Only. Type of a PSC Connection.
	// Possible values:
	// CONNECTION_TYPE_DISCOVERY
	// CONNECTION_TYPE_PRIMARY
	// CONNECTION_TYPE_READER
	ConnectionType *string `pulumi:"connectionType"`
	// The URI of the consumer side forwarding rule.
	// Format:
	// projects/{project}/regions/{region}/forwardingRules/{forwarding_rule}
	ForwardingRule string `pulumi:"forwardingRule"`
	// The consumer network where the IP address resides, in the form of
	// projects/{project_id}/global/networks/{network_id}.
	Network string `pulumi:"network"`
	// The consumer projectId where the forwarding rule is created from.
	ProjectId *string `pulumi:"projectId"`
	// The PSC connection id of the forwarding rule connected to the
	// service attachment.
	PscConnectionId string `pulumi:"pscConnectionId"`
	// (Output)
	// Output Only. The status of the PSC connection: whether a connection exists and ACTIVE or it no longer exists.
	// Possible values:
	// ACTIVE
	// NOT_FOUND
	PscConnectionStatus *string `pulumi:"pscConnectionStatus"`
	// The service attachment which is the target of the PSC connection, in the form of projects/{project-id}/regions/{region}/serviceAttachments/{service-attachment-id}.
	ServiceAttachment string `pulumi:"serviceAttachment"`
}

// ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionInput is an input type that accepts ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionArgs and ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionOutput values.
// You can construct a concrete instance of `ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionInput` via:
//
//	ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionArgs{...}
type ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionInput interface {
	pulumi.Input

	ToClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionOutput() ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionOutput
	ToClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionOutputWithContext(context.Context) ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionOutput
}

type ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionArgs struct {
	// The IP allocated on the consumer network for the PSC forwarding rule.
	Address pulumi.StringInput `pulumi:"address"`
	// (Output)
	// Output Only. Type of a PSC Connection.
	// Possible values:
	// CONNECTION_TYPE_DISCOVERY
	// CONNECTION_TYPE_PRIMARY
	// CONNECTION_TYPE_READER
	ConnectionType pulumi.StringPtrInput `pulumi:"connectionType"`
	// The URI of the consumer side forwarding rule.
	// Format:
	// projects/{project}/regions/{region}/forwardingRules/{forwarding_rule}
	ForwardingRule pulumi.StringInput `pulumi:"forwardingRule"`
	// The consumer network where the IP address resides, in the form of
	// projects/{project_id}/global/networks/{network_id}.
	Network pulumi.StringInput `pulumi:"network"`
	// The consumer projectId where the forwarding rule is created from.
	ProjectId pulumi.StringPtrInput `pulumi:"projectId"`
	// The PSC connection id of the forwarding rule connected to the
	// service attachment.
	PscConnectionId pulumi.StringInput `pulumi:"pscConnectionId"`
	// (Output)
	// Output Only. The status of the PSC connection: whether a connection exists and ACTIVE or it no longer exists.
	// Possible values:
	// ACTIVE
	// NOT_FOUND
	PscConnectionStatus pulumi.StringPtrInput `pulumi:"pscConnectionStatus"`
	// The service attachment which is the target of the PSC connection, in the form of projects/{project-id}/regions/{region}/serviceAttachments/{service-attachment-id}.
	ServiceAttachment pulumi.StringInput `pulumi:"serviceAttachment"`
}

func (ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnection)(nil)).Elem()
}

func (i ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionArgs) ToClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionOutput() ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionOutput {
	return i.ToClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionOutputWithContext(context.Background())
}

func (i ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionArgs) ToClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionOutputWithContext(ctx context.Context) ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionOutput)
}

func (i ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionArgs) ToClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutput() ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutput {
	return i.ToClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutputWithContext(context.Background())
}

func (i ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionArgs) ToClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutputWithContext(ctx context.Context) ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionOutput).ToClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutputWithContext(ctx)
}

// ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrInput is an input type that accepts ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionArgs, ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtr and ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutput values.
// You can construct a concrete instance of `ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrInput` via:
//
//	        ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionArgs{...}
//
//	or:
//
//	        nil
type ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrInput interface {
	pulumi.Input

	ToClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutput() ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutput
	ToClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutputWithContext(context.Context) ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutput
}

type clusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrType ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionArgs

func ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtr(v *ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionArgs) ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrInput {
	return (*clusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrType)(v)
}

func (*clusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnection)(nil)).Elem()
}

func (i *clusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrType) ToClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutput() ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutput {
	return i.ToClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutputWithContext(context.Background())
}

func (i *clusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrType) ToClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutputWithContext(ctx context.Context) ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutput)
}

type ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionOutput struct{ *pulumi.OutputState }

func (ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnection)(nil)).Elem()
}

func (o ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionOutput) ToClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionOutput() ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionOutput {
	return o
}

func (o ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionOutput) ToClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionOutputWithContext(ctx context.Context) ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionOutput {
	return o
}

func (o ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionOutput) ToClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutput() ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutput {
	return o.ToClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutputWithContext(context.Background())
}

func (o ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionOutput) ToClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutputWithContext(ctx context.Context) ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnection) *ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnection {
		return &v
	}).(ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutput)
}

// The IP allocated on the consumer network for the PSC forwarding rule.
func (o ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnection) string { return v.Address }).(pulumi.StringOutput)
}

// (Output)
// Output Only. Type of a PSC Connection.
// Possible values:
// CONNECTION_TYPE_DISCOVERY
// CONNECTION_TYPE_PRIMARY
// CONNECTION_TYPE_READER
func (o ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionOutput) ConnectionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnection) *string {
		return v.ConnectionType
	}).(pulumi.StringPtrOutput)
}

// The URI of the consumer side forwarding rule.
// Format:
// projects/{project}/regions/{region}/forwardingRules/{forwarding_rule}
func (o ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionOutput) ForwardingRule() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnection) string {
		return v.ForwardingRule
	}).(pulumi.StringOutput)
}

// The consumer network where the IP address resides, in the form of
// projects/{project_id}/global/networks/{network_id}.
func (o ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionOutput) Network() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnection) string { return v.Network }).(pulumi.StringOutput)
}

// The consumer projectId where the forwarding rule is created from.
func (o ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnection) *string {
		return v.ProjectId
	}).(pulumi.StringPtrOutput)
}

// The PSC connection id of the forwarding rule connected to the
// service attachment.
func (o ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionOutput) PscConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnection) string {
		return v.PscConnectionId
	}).(pulumi.StringOutput)
}

// (Output)
// Output Only. The status of the PSC connection: whether a connection exists and ACTIVE or it no longer exists.
// Possible values:
// ACTIVE
// NOT_FOUND
func (o ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionOutput) PscConnectionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnection) *string {
		return v.PscConnectionStatus
	}).(pulumi.StringPtrOutput)
}

// The service attachment which is the target of the PSC connection, in the form of projects/{project-id}/regions/{region}/serviceAttachments/{service-attachment-id}.
func (o ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionOutput) ServiceAttachment() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnection) string {
		return v.ServiceAttachment
	}).(pulumi.StringOutput)
}

type ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutput struct{ *pulumi.OutputState }

func (ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnection)(nil)).Elem()
}

func (o ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutput) ToClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutput() ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutput {
	return o
}

func (o ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutput) ToClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutputWithContext(ctx context.Context) ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutput {
	return o
}

func (o ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutput) Elem() ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionOutput {
	return o.ApplyT(func(v *ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnection) ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnection {
		if v != nil {
			return *v
		}
		var ret ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnection
		return ret
	}).(ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionOutput)
}

// The IP allocated on the consumer network for the PSC forwarding rule.
func (o ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnection) *string {
		if v == nil {
			return nil
		}
		return &v.Address
	}).(pulumi.StringPtrOutput)
}

// (Output)
// Output Only. Type of a PSC Connection.
// Possible values:
// CONNECTION_TYPE_DISCOVERY
// CONNECTION_TYPE_PRIMARY
// CONNECTION_TYPE_READER
func (o ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutput) ConnectionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnection) *string {
		if v == nil {
			return nil
		}
		return v.ConnectionType
	}).(pulumi.StringPtrOutput)
}

// The URI of the consumer side forwarding rule.
// Format:
// projects/{project}/regions/{region}/forwardingRules/{forwarding_rule}
func (o ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutput) ForwardingRule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnection) *string {
		if v == nil {
			return nil
		}
		return &v.ForwardingRule
	}).(pulumi.StringPtrOutput)
}

// The consumer network where the IP address resides, in the form of
// projects/{project_id}/global/networks/{network_id}.
func (o ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutput) Network() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnection) *string {
		if v == nil {
			return nil
		}
		return &v.Network
	}).(pulumi.StringPtrOutput)
}

// The consumer projectId where the forwarding rule is created from.
func (o ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnection) *string {
		if v == nil {
			return nil
		}
		return v.ProjectId
	}).(pulumi.StringPtrOutput)
}

// The PSC connection id of the forwarding rule connected to the
// service attachment.
func (o ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutput) PscConnectionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnection) *string {
		if v == nil {
			return nil
		}
		return &v.PscConnectionId
	}).(pulumi.StringPtrOutput)
}

// (Output)
// Output Only. The status of the PSC connection: whether a connection exists and ACTIVE or it no longer exists.
// Possible values:
// ACTIVE
// NOT_FOUND
func (o ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutput) PscConnectionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnection) *string {
		if v == nil {
			return nil
		}
		return v.PscConnectionStatus
	}).(pulumi.StringPtrOutput)
}

// The service attachment which is the target of the PSC connection, in the form of projects/{project-id}/regions/{region}/serviceAttachments/{service-attachment-id}.
func (o ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutput) ServiceAttachment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnection) *string {
		if v == nil {
			return nil
		}
		return &v.ServiceAttachment
	}).(pulumi.StringPtrOutput)
}

type ClusterZoneDistributionConfig struct {
	// Immutable. The mode for zone distribution for Memorystore Redis cluster.
	// If not provided, MULTI_ZONE will be used as default
	// Possible values are: `MULTI_ZONE`, `SINGLE_ZONE`.
	Mode *string `pulumi:"mode"`
	// Immutable. The zone for single zone Memorystore Redis cluster.
	Zone *string `pulumi:"zone"`
}

// ClusterZoneDistributionConfigInput is an input type that accepts ClusterZoneDistributionConfigArgs and ClusterZoneDistributionConfigOutput values.
// You can construct a concrete instance of `ClusterZoneDistributionConfigInput` via:
//
//	ClusterZoneDistributionConfigArgs{...}
type ClusterZoneDistributionConfigInput interface {
	pulumi.Input

	ToClusterZoneDistributionConfigOutput() ClusterZoneDistributionConfigOutput
	ToClusterZoneDistributionConfigOutputWithContext(context.Context) ClusterZoneDistributionConfigOutput
}

type ClusterZoneDistributionConfigArgs struct {
	// Immutable. The mode for zone distribution for Memorystore Redis cluster.
	// If not provided, MULTI_ZONE will be used as default
	// Possible values are: `MULTI_ZONE`, `SINGLE_ZONE`.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// Immutable. The zone for single zone Memorystore Redis cluster.
	Zone pulumi.StringPtrInput `pulumi:"zone"`
}

func (ClusterZoneDistributionConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterZoneDistributionConfig)(nil)).Elem()
}

func (i ClusterZoneDistributionConfigArgs) ToClusterZoneDistributionConfigOutput() ClusterZoneDistributionConfigOutput {
	return i.ToClusterZoneDistributionConfigOutputWithContext(context.Background())
}

func (i ClusterZoneDistributionConfigArgs) ToClusterZoneDistributionConfigOutputWithContext(ctx context.Context) ClusterZoneDistributionConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterZoneDistributionConfigOutput)
}

func (i ClusterZoneDistributionConfigArgs) ToClusterZoneDistributionConfigPtrOutput() ClusterZoneDistributionConfigPtrOutput {
	return i.ToClusterZoneDistributionConfigPtrOutputWithContext(context.Background())
}

func (i ClusterZoneDistributionConfigArgs) ToClusterZoneDistributionConfigPtrOutputWithContext(ctx context.Context) ClusterZoneDistributionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterZoneDistributionConfigOutput).ToClusterZoneDistributionConfigPtrOutputWithContext(ctx)
}

// ClusterZoneDistributionConfigPtrInput is an input type that accepts ClusterZoneDistributionConfigArgs, ClusterZoneDistributionConfigPtr and ClusterZoneDistributionConfigPtrOutput values.
// You can construct a concrete instance of `ClusterZoneDistributionConfigPtrInput` via:
//
//	        ClusterZoneDistributionConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterZoneDistributionConfigPtrInput interface {
	pulumi.Input

	ToClusterZoneDistributionConfigPtrOutput() ClusterZoneDistributionConfigPtrOutput
	ToClusterZoneDistributionConfigPtrOutputWithContext(context.Context) ClusterZoneDistributionConfigPtrOutput
}

type clusterZoneDistributionConfigPtrType ClusterZoneDistributionConfigArgs

func ClusterZoneDistributionConfigPtr(v *ClusterZoneDistributionConfigArgs) ClusterZoneDistributionConfigPtrInput {
	return (*clusterZoneDistributionConfigPtrType)(v)
}

func (*clusterZoneDistributionConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterZoneDistributionConfig)(nil)).Elem()
}

func (i *clusterZoneDistributionConfigPtrType) ToClusterZoneDistributionConfigPtrOutput() ClusterZoneDistributionConfigPtrOutput {
	return i.ToClusterZoneDistributionConfigPtrOutputWithContext(context.Background())
}

func (i *clusterZoneDistributionConfigPtrType) ToClusterZoneDistributionConfigPtrOutputWithContext(ctx context.Context) ClusterZoneDistributionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterZoneDistributionConfigPtrOutput)
}

type ClusterZoneDistributionConfigOutput struct{ *pulumi.OutputState }

func (ClusterZoneDistributionConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterZoneDistributionConfig)(nil)).Elem()
}

func (o ClusterZoneDistributionConfigOutput) ToClusterZoneDistributionConfigOutput() ClusterZoneDistributionConfigOutput {
	return o
}

func (o ClusterZoneDistributionConfigOutput) ToClusterZoneDistributionConfigOutputWithContext(ctx context.Context) ClusterZoneDistributionConfigOutput {
	return o
}

func (o ClusterZoneDistributionConfigOutput) ToClusterZoneDistributionConfigPtrOutput() ClusterZoneDistributionConfigPtrOutput {
	return o.ToClusterZoneDistributionConfigPtrOutputWithContext(context.Background())
}

func (o ClusterZoneDistributionConfigOutput) ToClusterZoneDistributionConfigPtrOutputWithContext(ctx context.Context) ClusterZoneDistributionConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterZoneDistributionConfig) *ClusterZoneDistributionConfig {
		return &v
	}).(ClusterZoneDistributionConfigPtrOutput)
}

// Immutable. The mode for zone distribution for Memorystore Redis cluster.
// If not provided, MULTI_ZONE will be used as default
// Possible values are: `MULTI_ZONE`, `SINGLE_ZONE`.
func (o ClusterZoneDistributionConfigOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterZoneDistributionConfig) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// Immutable. The zone for single zone Memorystore Redis cluster.
func (o ClusterZoneDistributionConfigOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterZoneDistributionConfig) *string { return v.Zone }).(pulumi.StringPtrOutput)
}

type ClusterZoneDistributionConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterZoneDistributionConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterZoneDistributionConfig)(nil)).Elem()
}

func (o ClusterZoneDistributionConfigPtrOutput) ToClusterZoneDistributionConfigPtrOutput() ClusterZoneDistributionConfigPtrOutput {
	return o
}

func (o ClusterZoneDistributionConfigPtrOutput) ToClusterZoneDistributionConfigPtrOutputWithContext(ctx context.Context) ClusterZoneDistributionConfigPtrOutput {
	return o
}

func (o ClusterZoneDistributionConfigPtrOutput) Elem() ClusterZoneDistributionConfigOutput {
	return o.ApplyT(func(v *ClusterZoneDistributionConfig) ClusterZoneDistributionConfig {
		if v != nil {
			return *v
		}
		var ret ClusterZoneDistributionConfig
		return ret
	}).(ClusterZoneDistributionConfigOutput)
}

// Immutable. The mode for zone distribution for Memorystore Redis cluster.
// If not provided, MULTI_ZONE will be used as default
// Possible values are: `MULTI_ZONE`, `SINGLE_ZONE`.
func (o ClusterZoneDistributionConfigPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterZoneDistributionConfig) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// Immutable. The zone for single zone Memorystore Redis cluster.
func (o ClusterZoneDistributionConfigPtrOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterZoneDistributionConfig) *string {
		if v == nil {
			return nil
		}
		return v.Zone
	}).(pulumi.StringPtrOutput)
}

type InstanceMaintenancePolicy struct {
	// (Output)
	// Output only. The time when the policy was created.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits.
	CreateTime *string `pulumi:"createTime"`
	// Optional. Description of what this policy is for.
	// Create/Update methods return INVALID_ARGUMENT if the
	// length is greater than 512.
	Description *string `pulumi:"description"`
	// (Output)
	// Output only. The time when the policy was last updated.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits.
	UpdateTime *string `pulumi:"updateTime"`
	// Optional. Maintenance window that is applied to resources covered by this policy.
	// Minimum 1. For the current version, the maximum number
	// of weeklyWindow is expected to be one.
	// Structure is documented below.
	WeeklyMaintenanceWindows []InstanceMaintenancePolicyWeeklyMaintenanceWindow `pulumi:"weeklyMaintenanceWindows"`
}

// InstanceMaintenancePolicyInput is an input type that accepts InstanceMaintenancePolicyArgs and InstanceMaintenancePolicyOutput values.
// You can construct a concrete instance of `InstanceMaintenancePolicyInput` via:
//
//	InstanceMaintenancePolicyArgs{...}
type InstanceMaintenancePolicyInput interface {
	pulumi.Input

	ToInstanceMaintenancePolicyOutput() InstanceMaintenancePolicyOutput
	ToInstanceMaintenancePolicyOutputWithContext(context.Context) InstanceMaintenancePolicyOutput
}

type InstanceMaintenancePolicyArgs struct {
	// (Output)
	// Output only. The time when the policy was created.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits.
	CreateTime pulumi.StringPtrInput `pulumi:"createTime"`
	// Optional. Description of what this policy is for.
	// Create/Update methods return INVALID_ARGUMENT if the
	// length is greater than 512.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// (Output)
	// Output only. The time when the policy was last updated.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits.
	UpdateTime pulumi.StringPtrInput `pulumi:"updateTime"`
	// Optional. Maintenance window that is applied to resources covered by this policy.
	// Minimum 1. For the current version, the maximum number
	// of weeklyWindow is expected to be one.
	// Structure is documented below.
	WeeklyMaintenanceWindows InstanceMaintenancePolicyWeeklyMaintenanceWindowArrayInput `pulumi:"weeklyMaintenanceWindows"`
}

func (InstanceMaintenancePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceMaintenancePolicy)(nil)).Elem()
}

func (i InstanceMaintenancePolicyArgs) ToInstanceMaintenancePolicyOutput() InstanceMaintenancePolicyOutput {
	return i.ToInstanceMaintenancePolicyOutputWithContext(context.Background())
}

func (i InstanceMaintenancePolicyArgs) ToInstanceMaintenancePolicyOutputWithContext(ctx context.Context) InstanceMaintenancePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMaintenancePolicyOutput)
}

func (i InstanceMaintenancePolicyArgs) ToInstanceMaintenancePolicyPtrOutput() InstanceMaintenancePolicyPtrOutput {
	return i.ToInstanceMaintenancePolicyPtrOutputWithContext(context.Background())
}

func (i InstanceMaintenancePolicyArgs) ToInstanceMaintenancePolicyPtrOutputWithContext(ctx context.Context) InstanceMaintenancePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMaintenancePolicyOutput).ToInstanceMaintenancePolicyPtrOutputWithContext(ctx)
}

// InstanceMaintenancePolicyPtrInput is an input type that accepts InstanceMaintenancePolicyArgs, InstanceMaintenancePolicyPtr and InstanceMaintenancePolicyPtrOutput values.
// You can construct a concrete instance of `InstanceMaintenancePolicyPtrInput` via:
//
//	        InstanceMaintenancePolicyArgs{...}
//
//	or:
//
//	        nil
type InstanceMaintenancePolicyPtrInput interface {
	pulumi.Input

	ToInstanceMaintenancePolicyPtrOutput() InstanceMaintenancePolicyPtrOutput
	ToInstanceMaintenancePolicyPtrOutputWithContext(context.Context) InstanceMaintenancePolicyPtrOutput
}

type instanceMaintenancePolicyPtrType InstanceMaintenancePolicyArgs

func InstanceMaintenancePolicyPtr(v *InstanceMaintenancePolicyArgs) InstanceMaintenancePolicyPtrInput {
	return (*instanceMaintenancePolicyPtrType)(v)
}

func (*instanceMaintenancePolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceMaintenancePolicy)(nil)).Elem()
}

func (i *instanceMaintenancePolicyPtrType) ToInstanceMaintenancePolicyPtrOutput() InstanceMaintenancePolicyPtrOutput {
	return i.ToInstanceMaintenancePolicyPtrOutputWithContext(context.Background())
}

func (i *instanceMaintenancePolicyPtrType) ToInstanceMaintenancePolicyPtrOutputWithContext(ctx context.Context) InstanceMaintenancePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMaintenancePolicyPtrOutput)
}

type InstanceMaintenancePolicyOutput struct{ *pulumi.OutputState }

func (InstanceMaintenancePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceMaintenancePolicy)(nil)).Elem()
}

func (o InstanceMaintenancePolicyOutput) ToInstanceMaintenancePolicyOutput() InstanceMaintenancePolicyOutput {
	return o
}

func (o InstanceMaintenancePolicyOutput) ToInstanceMaintenancePolicyOutputWithContext(ctx context.Context) InstanceMaintenancePolicyOutput {
	return o
}

func (o InstanceMaintenancePolicyOutput) ToInstanceMaintenancePolicyPtrOutput() InstanceMaintenancePolicyPtrOutput {
	return o.ToInstanceMaintenancePolicyPtrOutputWithContext(context.Background())
}

func (o InstanceMaintenancePolicyOutput) ToInstanceMaintenancePolicyPtrOutputWithContext(ctx context.Context) InstanceMaintenancePolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceMaintenancePolicy) *InstanceMaintenancePolicy {
		return &v
	}).(InstanceMaintenancePolicyPtrOutput)
}

// (Output)
// Output only. The time when the policy was created.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
// resolution and up to nine fractional digits.
func (o InstanceMaintenancePolicyOutput) CreateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceMaintenancePolicy) *string { return v.CreateTime }).(pulumi.StringPtrOutput)
}

// Optional. Description of what this policy is for.
// Create/Update methods return INVALID_ARGUMENT if the
// length is greater than 512.
func (o InstanceMaintenancePolicyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceMaintenancePolicy) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// (Output)
// Output only. The time when the policy was last updated.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
// resolution and up to nine fractional digits.
func (o InstanceMaintenancePolicyOutput) UpdateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceMaintenancePolicy) *string { return v.UpdateTime }).(pulumi.StringPtrOutput)
}

// Optional. Maintenance window that is applied to resources covered by this policy.
// Minimum 1. For the current version, the maximum number
// of weeklyWindow is expected to be one.
// Structure is documented below.
func (o InstanceMaintenancePolicyOutput) WeeklyMaintenanceWindows() InstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput {
	return o.ApplyT(func(v InstanceMaintenancePolicy) []InstanceMaintenancePolicyWeeklyMaintenanceWindow {
		return v.WeeklyMaintenanceWindows
	}).(InstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput)
}

type InstanceMaintenancePolicyPtrOutput struct{ *pulumi.OutputState }

func (InstanceMaintenancePolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceMaintenancePolicy)(nil)).Elem()
}

func (o InstanceMaintenancePolicyPtrOutput) ToInstanceMaintenancePolicyPtrOutput() InstanceMaintenancePolicyPtrOutput {
	return o
}

func (o InstanceMaintenancePolicyPtrOutput) ToInstanceMaintenancePolicyPtrOutputWithContext(ctx context.Context) InstanceMaintenancePolicyPtrOutput {
	return o
}

func (o InstanceMaintenancePolicyPtrOutput) Elem() InstanceMaintenancePolicyOutput {
	return o.ApplyT(func(v *InstanceMaintenancePolicy) InstanceMaintenancePolicy {
		if v != nil {
			return *v
		}
		var ret InstanceMaintenancePolicy
		return ret
	}).(InstanceMaintenancePolicyOutput)
}

// (Output)
// Output only. The time when the policy was created.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
// resolution and up to nine fractional digits.
func (o InstanceMaintenancePolicyPtrOutput) CreateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceMaintenancePolicy) *string {
		if v == nil {
			return nil
		}
		return v.CreateTime
	}).(pulumi.StringPtrOutput)
}

// Optional. Description of what this policy is for.
// Create/Update methods return INVALID_ARGUMENT if the
// length is greater than 512.
func (o InstanceMaintenancePolicyPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceMaintenancePolicy) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// (Output)
// Output only. The time when the policy was last updated.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
// resolution and up to nine fractional digits.
func (o InstanceMaintenancePolicyPtrOutput) UpdateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceMaintenancePolicy) *string {
		if v == nil {
			return nil
		}
		return v.UpdateTime
	}).(pulumi.StringPtrOutput)
}

// Optional. Maintenance window that is applied to resources covered by this policy.
// Minimum 1. For the current version, the maximum number
// of weeklyWindow is expected to be one.
// Structure is documented below.
func (o InstanceMaintenancePolicyPtrOutput) WeeklyMaintenanceWindows() InstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput {
	return o.ApplyT(func(v *InstanceMaintenancePolicy) []InstanceMaintenancePolicyWeeklyMaintenanceWindow {
		if v == nil {
			return nil
		}
		return v.WeeklyMaintenanceWindows
	}).(InstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput)
}

type InstanceMaintenancePolicyWeeklyMaintenanceWindow struct {
	// Required. The day of week that maintenance updates occur.
	// - DAY_OF_WEEK_UNSPECIFIED: The day of the week is unspecified.
	// - MONDAY: Monday
	// - TUESDAY: Tuesday
	// - WEDNESDAY: Wednesday
	// - THURSDAY: Thursday
	// - FRIDAY: Friday
	// - SATURDAY: Saturday
	// - SUNDAY: Sunday
	//   Possible values are: `DAY_OF_WEEK_UNSPECIFIED`, `MONDAY`, `TUESDAY`, `WEDNESDAY`, `THURSDAY`, `FRIDAY`, `SATURDAY`, `SUNDAY`.
	Day string `pulumi:"day"`
	// (Output)
	// Output only. Duration of the maintenance window.
	// The current window is fixed at 1 hour.
	// A duration in seconds with up to nine fractional digits,
	// terminated by 's'. Example: "3.5s".
	Duration *string `pulumi:"duration"`
	// Required. Start time of the window in UTC time.
	// Structure is documented below.
	StartTime InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTime `pulumi:"startTime"`
}

// InstanceMaintenancePolicyWeeklyMaintenanceWindowInput is an input type that accepts InstanceMaintenancePolicyWeeklyMaintenanceWindowArgs and InstanceMaintenancePolicyWeeklyMaintenanceWindowOutput values.
// You can construct a concrete instance of `InstanceMaintenancePolicyWeeklyMaintenanceWindowInput` via:
//
//	InstanceMaintenancePolicyWeeklyMaintenanceWindowArgs{...}
type InstanceMaintenancePolicyWeeklyMaintenanceWindowInput interface {
	pulumi.Input

	ToInstanceMaintenancePolicyWeeklyMaintenanceWindowOutput() InstanceMaintenancePolicyWeeklyMaintenanceWindowOutput
	ToInstanceMaintenancePolicyWeeklyMaintenanceWindowOutputWithContext(context.Context) InstanceMaintenancePolicyWeeklyMaintenanceWindowOutput
}

type InstanceMaintenancePolicyWeeklyMaintenanceWindowArgs struct {
	// Required. The day of week that maintenance updates occur.
	// - DAY_OF_WEEK_UNSPECIFIED: The day of the week is unspecified.
	// - MONDAY: Monday
	// - TUESDAY: Tuesday
	// - WEDNESDAY: Wednesday
	// - THURSDAY: Thursday
	// - FRIDAY: Friday
	// - SATURDAY: Saturday
	// - SUNDAY: Sunday
	//   Possible values are: `DAY_OF_WEEK_UNSPECIFIED`, `MONDAY`, `TUESDAY`, `WEDNESDAY`, `THURSDAY`, `FRIDAY`, `SATURDAY`, `SUNDAY`.
	Day pulumi.StringInput `pulumi:"day"`
	// (Output)
	// Output only. Duration of the maintenance window.
	// The current window is fixed at 1 hour.
	// A duration in seconds with up to nine fractional digits,
	// terminated by 's'. Example: "3.5s".
	Duration pulumi.StringPtrInput `pulumi:"duration"`
	// Required. Start time of the window in UTC time.
	// Structure is documented below.
	StartTime InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeInput `pulumi:"startTime"`
}

func (InstanceMaintenancePolicyWeeklyMaintenanceWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceMaintenancePolicyWeeklyMaintenanceWindow)(nil)).Elem()
}

func (i InstanceMaintenancePolicyWeeklyMaintenanceWindowArgs) ToInstanceMaintenancePolicyWeeklyMaintenanceWindowOutput() InstanceMaintenancePolicyWeeklyMaintenanceWindowOutput {
	return i.ToInstanceMaintenancePolicyWeeklyMaintenanceWindowOutputWithContext(context.Background())
}

func (i InstanceMaintenancePolicyWeeklyMaintenanceWindowArgs) ToInstanceMaintenancePolicyWeeklyMaintenanceWindowOutputWithContext(ctx context.Context) InstanceMaintenancePolicyWeeklyMaintenanceWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMaintenancePolicyWeeklyMaintenanceWindowOutput)
}

// InstanceMaintenancePolicyWeeklyMaintenanceWindowArrayInput is an input type that accepts InstanceMaintenancePolicyWeeklyMaintenanceWindowArray and InstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput values.
// You can construct a concrete instance of `InstanceMaintenancePolicyWeeklyMaintenanceWindowArrayInput` via:
//
//	InstanceMaintenancePolicyWeeklyMaintenanceWindowArray{ InstanceMaintenancePolicyWeeklyMaintenanceWindowArgs{...} }
type InstanceMaintenancePolicyWeeklyMaintenanceWindowArrayInput interface {
	pulumi.Input

	ToInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput() InstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput
	ToInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutputWithContext(context.Context) InstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput
}

type InstanceMaintenancePolicyWeeklyMaintenanceWindowArray []InstanceMaintenancePolicyWeeklyMaintenanceWindowInput

func (InstanceMaintenancePolicyWeeklyMaintenanceWindowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceMaintenancePolicyWeeklyMaintenanceWindow)(nil)).Elem()
}

func (i InstanceMaintenancePolicyWeeklyMaintenanceWindowArray) ToInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput() InstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput {
	return i.ToInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutputWithContext(context.Background())
}

func (i InstanceMaintenancePolicyWeeklyMaintenanceWindowArray) ToInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutputWithContext(ctx context.Context) InstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput)
}

type InstanceMaintenancePolicyWeeklyMaintenanceWindowOutput struct{ *pulumi.OutputState }

func (InstanceMaintenancePolicyWeeklyMaintenanceWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceMaintenancePolicyWeeklyMaintenanceWindow)(nil)).Elem()
}

func (o InstanceMaintenancePolicyWeeklyMaintenanceWindowOutput) ToInstanceMaintenancePolicyWeeklyMaintenanceWindowOutput() InstanceMaintenancePolicyWeeklyMaintenanceWindowOutput {
	return o
}

func (o InstanceMaintenancePolicyWeeklyMaintenanceWindowOutput) ToInstanceMaintenancePolicyWeeklyMaintenanceWindowOutputWithContext(ctx context.Context) InstanceMaintenancePolicyWeeklyMaintenanceWindowOutput {
	return o
}

// Required. The day of week that maintenance updates occur.
//   - DAY_OF_WEEK_UNSPECIFIED: The day of the week is unspecified.
//   - MONDAY: Monday
//   - TUESDAY: Tuesday
//   - WEDNESDAY: Wednesday
//   - THURSDAY: Thursday
//   - FRIDAY: Friday
//   - SATURDAY: Saturday
//   - SUNDAY: Sunday
//     Possible values are: `DAY_OF_WEEK_UNSPECIFIED`, `MONDAY`, `TUESDAY`, `WEDNESDAY`, `THURSDAY`, `FRIDAY`, `SATURDAY`, `SUNDAY`.
func (o InstanceMaintenancePolicyWeeklyMaintenanceWindowOutput) Day() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceMaintenancePolicyWeeklyMaintenanceWindow) string { return v.Day }).(pulumi.StringOutput)
}

// (Output)
// Output only. Duration of the maintenance window.
// The current window is fixed at 1 hour.
// A duration in seconds with up to nine fractional digits,
// terminated by 's'. Example: "3.5s".
func (o InstanceMaintenancePolicyWeeklyMaintenanceWindowOutput) Duration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceMaintenancePolicyWeeklyMaintenanceWindow) *string { return v.Duration }).(pulumi.StringPtrOutput)
}

// Required. Start time of the window in UTC time.
// Structure is documented below.
func (o InstanceMaintenancePolicyWeeklyMaintenanceWindowOutput) StartTime() InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput {
	return o.ApplyT(func(v InstanceMaintenancePolicyWeeklyMaintenanceWindow) InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTime {
		return v.StartTime
	}).(InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput)
}

type InstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput struct{ *pulumi.OutputState }

func (InstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceMaintenancePolicyWeeklyMaintenanceWindow)(nil)).Elem()
}

func (o InstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput) ToInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput() InstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput {
	return o
}

func (o InstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput) ToInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutputWithContext(ctx context.Context) InstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput {
	return o
}

func (o InstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput) Index(i pulumi.IntInput) InstanceMaintenancePolicyWeeklyMaintenanceWindowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceMaintenancePolicyWeeklyMaintenanceWindow {
		return vs[0].([]InstanceMaintenancePolicyWeeklyMaintenanceWindow)[vs[1].(int)]
	}).(InstanceMaintenancePolicyWeeklyMaintenanceWindowOutput)
}

type InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTime struct {
	// Hours of day in 24 hour format. Should be from 0 to 23.
	// An API may choose to allow the value "24:00:00" for scenarios like business closing time.
	Hours *int `pulumi:"hours"`
	// Minutes of hour of day. Must be from 0 to 59.
	Minutes *int `pulumi:"minutes"`
	// Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
	Nanos *int `pulumi:"nanos"`
	// Seconds of minutes of the time. Must normally be from 0 to 59.
	// An API may allow the value 60 if it allows leap-seconds.
	Seconds *int `pulumi:"seconds"`
}

// InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeInput is an input type that accepts InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArgs and InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput values.
// You can construct a concrete instance of `InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeInput` via:
//
//	InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArgs{...}
type InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeInput interface {
	pulumi.Input

	ToInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput() InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput
	ToInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutputWithContext(context.Context) InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput
}

type InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArgs struct {
	// Hours of day in 24 hour format. Should be from 0 to 23.
	// An API may choose to allow the value "24:00:00" for scenarios like business closing time.
	Hours pulumi.IntPtrInput `pulumi:"hours"`
	// Minutes of hour of day. Must be from 0 to 59.
	Minutes pulumi.IntPtrInput `pulumi:"minutes"`
	// Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
	Nanos pulumi.IntPtrInput `pulumi:"nanos"`
	// Seconds of minutes of the time. Must normally be from 0 to 59.
	// An API may allow the value 60 if it allows leap-seconds.
	Seconds pulumi.IntPtrInput `pulumi:"seconds"`
}

func (InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTime)(nil)).Elem()
}

func (i InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArgs) ToInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput() InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput {
	return i.ToInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutputWithContext(context.Background())
}

func (i InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArgs) ToInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutputWithContext(ctx context.Context) InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput)
}

type InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput struct{ *pulumi.OutputState }

func (InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTime)(nil)).Elem()
}

func (o InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput) ToInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput() InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput {
	return o
}

func (o InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput) ToInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutputWithContext(ctx context.Context) InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput {
	return o
}

// Hours of day in 24 hour format. Should be from 0 to 23.
// An API may choose to allow the value "24:00:00" for scenarios like business closing time.
func (o InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput) Hours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTime) *int { return v.Hours }).(pulumi.IntPtrOutput)
}

// Minutes of hour of day. Must be from 0 to 59.
func (o InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput) Minutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTime) *int { return v.Minutes }).(pulumi.IntPtrOutput)
}

// Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
func (o InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput) Nanos() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTime) *int { return v.Nanos }).(pulumi.IntPtrOutput)
}

// Seconds of minutes of the time. Must normally be from 0 to 59.
// An API may allow the value 60 if it allows leap-seconds.
func (o InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput) Seconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTime) *int { return v.Seconds }).(pulumi.IntPtrOutput)
}

type InstanceMaintenanceSchedule struct {
	// (Output)
	// Output only. The end time of any upcoming scheduled maintenance for this instance.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits.
	EndTime *string `pulumi:"endTime"`
	// (Output)
	// Output only. The deadline that the maintenance schedule start time
	// can not go beyond, including reschedule.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits.
	ScheduleDeadlineTime *string `pulumi:"scheduleDeadlineTime"`
	// (Output)
	// Output only. The start time of any upcoming scheduled maintenance for this instance.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits.
	StartTime *string `pulumi:"startTime"`
}

// InstanceMaintenanceScheduleInput is an input type that accepts InstanceMaintenanceScheduleArgs and InstanceMaintenanceScheduleOutput values.
// You can construct a concrete instance of `InstanceMaintenanceScheduleInput` via:
//
//	InstanceMaintenanceScheduleArgs{...}
type InstanceMaintenanceScheduleInput interface {
	pulumi.Input

	ToInstanceMaintenanceScheduleOutput() InstanceMaintenanceScheduleOutput
	ToInstanceMaintenanceScheduleOutputWithContext(context.Context) InstanceMaintenanceScheduleOutput
}

type InstanceMaintenanceScheduleArgs struct {
	// (Output)
	// Output only. The end time of any upcoming scheduled maintenance for this instance.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits.
	EndTime pulumi.StringPtrInput `pulumi:"endTime"`
	// (Output)
	// Output only. The deadline that the maintenance schedule start time
	// can not go beyond, including reschedule.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits.
	ScheduleDeadlineTime pulumi.StringPtrInput `pulumi:"scheduleDeadlineTime"`
	// (Output)
	// Output only. The start time of any upcoming scheduled maintenance for this instance.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits.
	StartTime pulumi.StringPtrInput `pulumi:"startTime"`
}

func (InstanceMaintenanceScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceMaintenanceSchedule)(nil)).Elem()
}

func (i InstanceMaintenanceScheduleArgs) ToInstanceMaintenanceScheduleOutput() InstanceMaintenanceScheduleOutput {
	return i.ToInstanceMaintenanceScheduleOutputWithContext(context.Background())
}

func (i InstanceMaintenanceScheduleArgs) ToInstanceMaintenanceScheduleOutputWithContext(ctx context.Context) InstanceMaintenanceScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMaintenanceScheduleOutput)
}

// InstanceMaintenanceScheduleArrayInput is an input type that accepts InstanceMaintenanceScheduleArray and InstanceMaintenanceScheduleArrayOutput values.
// You can construct a concrete instance of `InstanceMaintenanceScheduleArrayInput` via:
//
//	InstanceMaintenanceScheduleArray{ InstanceMaintenanceScheduleArgs{...} }
type InstanceMaintenanceScheduleArrayInput interface {
	pulumi.Input

	ToInstanceMaintenanceScheduleArrayOutput() InstanceMaintenanceScheduleArrayOutput
	ToInstanceMaintenanceScheduleArrayOutputWithContext(context.Context) InstanceMaintenanceScheduleArrayOutput
}

type InstanceMaintenanceScheduleArray []InstanceMaintenanceScheduleInput

func (InstanceMaintenanceScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceMaintenanceSchedule)(nil)).Elem()
}

func (i InstanceMaintenanceScheduleArray) ToInstanceMaintenanceScheduleArrayOutput() InstanceMaintenanceScheduleArrayOutput {
	return i.ToInstanceMaintenanceScheduleArrayOutputWithContext(context.Background())
}

func (i InstanceMaintenanceScheduleArray) ToInstanceMaintenanceScheduleArrayOutputWithContext(ctx context.Context) InstanceMaintenanceScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMaintenanceScheduleArrayOutput)
}

type InstanceMaintenanceScheduleOutput struct{ *pulumi.OutputState }

func (InstanceMaintenanceScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceMaintenanceSchedule)(nil)).Elem()
}

func (o InstanceMaintenanceScheduleOutput) ToInstanceMaintenanceScheduleOutput() InstanceMaintenanceScheduleOutput {
	return o
}

func (o InstanceMaintenanceScheduleOutput) ToInstanceMaintenanceScheduleOutputWithContext(ctx context.Context) InstanceMaintenanceScheduleOutput {
	return o
}

// (Output)
// Output only. The end time of any upcoming scheduled maintenance for this instance.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
// resolution and up to nine fractional digits.
func (o InstanceMaintenanceScheduleOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceMaintenanceSchedule) *string { return v.EndTime }).(pulumi.StringPtrOutput)
}

// (Output)
// Output only. The deadline that the maintenance schedule start time
// can not go beyond, including reschedule.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
// resolution and up to nine fractional digits.
func (o InstanceMaintenanceScheduleOutput) ScheduleDeadlineTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceMaintenanceSchedule) *string { return v.ScheduleDeadlineTime }).(pulumi.StringPtrOutput)
}

// (Output)
// Output only. The start time of any upcoming scheduled maintenance for this instance.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
// resolution and up to nine fractional digits.
func (o InstanceMaintenanceScheduleOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceMaintenanceSchedule) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

type InstanceMaintenanceScheduleArrayOutput struct{ *pulumi.OutputState }

func (InstanceMaintenanceScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceMaintenanceSchedule)(nil)).Elem()
}

func (o InstanceMaintenanceScheduleArrayOutput) ToInstanceMaintenanceScheduleArrayOutput() InstanceMaintenanceScheduleArrayOutput {
	return o
}

func (o InstanceMaintenanceScheduleArrayOutput) ToInstanceMaintenanceScheduleArrayOutputWithContext(ctx context.Context) InstanceMaintenanceScheduleArrayOutput {
	return o
}

func (o InstanceMaintenanceScheduleArrayOutput) Index(i pulumi.IntInput) InstanceMaintenanceScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceMaintenanceSchedule {
		return vs[0].([]InstanceMaintenanceSchedule)[vs[1].(int)]
	}).(InstanceMaintenanceScheduleOutput)
}

type InstanceNode struct {
	// (Output)
	// Node identifying string. e.g. 'node-0', 'node-1'
	Id *string `pulumi:"id"`
	// (Output)
	// Location of the node.
	Zone *string `pulumi:"zone"`
}

// InstanceNodeInput is an input type that accepts InstanceNodeArgs and InstanceNodeOutput values.
// You can construct a concrete instance of `InstanceNodeInput` via:
//
//	InstanceNodeArgs{...}
type InstanceNodeInput interface {
	pulumi.Input

	ToInstanceNodeOutput() InstanceNodeOutput
	ToInstanceNodeOutputWithContext(context.Context) InstanceNodeOutput
}

type InstanceNodeArgs struct {
	// (Output)
	// Node identifying string. e.g. 'node-0', 'node-1'
	Id pulumi.StringPtrInput `pulumi:"id"`
	// (Output)
	// Location of the node.
	Zone pulumi.StringPtrInput `pulumi:"zone"`
}

func (InstanceNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceNode)(nil)).Elem()
}

func (i InstanceNodeArgs) ToInstanceNodeOutput() InstanceNodeOutput {
	return i.ToInstanceNodeOutputWithContext(context.Background())
}

func (i InstanceNodeArgs) ToInstanceNodeOutputWithContext(ctx context.Context) InstanceNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceNodeOutput)
}

// InstanceNodeArrayInput is an input type that accepts InstanceNodeArray and InstanceNodeArrayOutput values.
// You can construct a concrete instance of `InstanceNodeArrayInput` via:
//
//	InstanceNodeArray{ InstanceNodeArgs{...} }
type InstanceNodeArrayInput interface {
	pulumi.Input

	ToInstanceNodeArrayOutput() InstanceNodeArrayOutput
	ToInstanceNodeArrayOutputWithContext(context.Context) InstanceNodeArrayOutput
}

type InstanceNodeArray []InstanceNodeInput

func (InstanceNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceNode)(nil)).Elem()
}

func (i InstanceNodeArray) ToInstanceNodeArrayOutput() InstanceNodeArrayOutput {
	return i.ToInstanceNodeArrayOutputWithContext(context.Background())
}

func (i InstanceNodeArray) ToInstanceNodeArrayOutputWithContext(ctx context.Context) InstanceNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceNodeArrayOutput)
}

type InstanceNodeOutput struct{ *pulumi.OutputState }

func (InstanceNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceNode)(nil)).Elem()
}

func (o InstanceNodeOutput) ToInstanceNodeOutput() InstanceNodeOutput {
	return o
}

func (o InstanceNodeOutput) ToInstanceNodeOutputWithContext(ctx context.Context) InstanceNodeOutput {
	return o
}

// (Output)
// Node identifying string. e.g. 'node-0', 'node-1'
func (o InstanceNodeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceNode) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// (Output)
// Location of the node.
func (o InstanceNodeOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceNode) *string { return v.Zone }).(pulumi.StringPtrOutput)
}

type InstanceNodeArrayOutput struct{ *pulumi.OutputState }

func (InstanceNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceNode)(nil)).Elem()
}

func (o InstanceNodeArrayOutput) ToInstanceNodeArrayOutput() InstanceNodeArrayOutput {
	return o
}

func (o InstanceNodeArrayOutput) ToInstanceNodeArrayOutputWithContext(ctx context.Context) InstanceNodeArrayOutput {
	return o
}

func (o InstanceNodeArrayOutput) Index(i pulumi.IntInput) InstanceNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceNode {
		return vs[0].([]InstanceNode)[vs[1].(int)]
	}).(InstanceNodeOutput)
}

type InstancePersistenceConfig struct {
	// Optional. Controls whether Persistence features are enabled. If not provided, the existing value will be used.
	// - DISABLED: 	Persistence is disabled for the instance, and any existing snapshots are deleted.
	// - RDB: RDB based Persistence is enabled.
	//   Possible values are: `DISABLED`, `RDB`.
	PersistenceMode *string `pulumi:"persistenceMode"`
	// (Output)
	// Output only. The next time that a snapshot attempt is scheduled to occur.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up
	// to nine fractional digits.
	// Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	RdbNextSnapshotTime *string `pulumi:"rdbNextSnapshotTime"`
	// Optional. Available snapshot periods for scheduling.
	// - ONE_HOUR:	Snapshot every 1 hour.
	// - SIX_HOURS:	Snapshot every 6 hours.
	// - TWELVE_HOURS:	Snapshot every 12 hours.
	// - TWENTY_FOUR_HOURS:	Snapshot every 24 hours.
	//   Possible values are: `ONE_HOUR`, `SIX_HOURS`, `TWELVE_HOURS`, `TWENTY_FOUR_HOURS`.
	RdbSnapshotPeriod *string `pulumi:"rdbSnapshotPeriod"`
	// Optional. Date and time that the first snapshot was/will be attempted,
	// and to which future snapshots will be aligned. If not provided,
	// the current time will be used.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution
	// and up to nine fractional digits.
	// Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	RdbSnapshotStartTime *string `pulumi:"rdbSnapshotStartTime"`
}

// InstancePersistenceConfigInput is an input type that accepts InstancePersistenceConfigArgs and InstancePersistenceConfigOutput values.
// You can construct a concrete instance of `InstancePersistenceConfigInput` via:
//
//	InstancePersistenceConfigArgs{...}
type InstancePersistenceConfigInput interface {
	pulumi.Input

	ToInstancePersistenceConfigOutput() InstancePersistenceConfigOutput
	ToInstancePersistenceConfigOutputWithContext(context.Context) InstancePersistenceConfigOutput
}

type InstancePersistenceConfigArgs struct {
	// Optional. Controls whether Persistence features are enabled. If not provided, the existing value will be used.
	// - DISABLED: 	Persistence is disabled for the instance, and any existing snapshots are deleted.
	// - RDB: RDB based Persistence is enabled.
	//   Possible values are: `DISABLED`, `RDB`.
	PersistenceMode pulumi.StringPtrInput `pulumi:"persistenceMode"`
	// (Output)
	// Output only. The next time that a snapshot attempt is scheduled to occur.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up
	// to nine fractional digits.
	// Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	RdbNextSnapshotTime pulumi.StringPtrInput `pulumi:"rdbNextSnapshotTime"`
	// Optional. Available snapshot periods for scheduling.
	// - ONE_HOUR:	Snapshot every 1 hour.
	// - SIX_HOURS:	Snapshot every 6 hours.
	// - TWELVE_HOURS:	Snapshot every 12 hours.
	// - TWENTY_FOUR_HOURS:	Snapshot every 24 hours.
	//   Possible values are: `ONE_HOUR`, `SIX_HOURS`, `TWELVE_HOURS`, `TWENTY_FOUR_HOURS`.
	RdbSnapshotPeriod pulumi.StringPtrInput `pulumi:"rdbSnapshotPeriod"`
	// Optional. Date and time that the first snapshot was/will be attempted,
	// and to which future snapshots will be aligned. If not provided,
	// the current time will be used.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution
	// and up to nine fractional digits.
	// Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	RdbSnapshotStartTime pulumi.StringPtrInput `pulumi:"rdbSnapshotStartTime"`
}

func (InstancePersistenceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancePersistenceConfig)(nil)).Elem()
}

func (i InstancePersistenceConfigArgs) ToInstancePersistenceConfigOutput() InstancePersistenceConfigOutput {
	return i.ToInstancePersistenceConfigOutputWithContext(context.Background())
}

func (i InstancePersistenceConfigArgs) ToInstancePersistenceConfigOutputWithContext(ctx context.Context) InstancePersistenceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancePersistenceConfigOutput)
}

func (i InstancePersistenceConfigArgs) ToInstancePersistenceConfigPtrOutput() InstancePersistenceConfigPtrOutput {
	return i.ToInstancePersistenceConfigPtrOutputWithContext(context.Background())
}

func (i InstancePersistenceConfigArgs) ToInstancePersistenceConfigPtrOutputWithContext(ctx context.Context) InstancePersistenceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancePersistenceConfigOutput).ToInstancePersistenceConfigPtrOutputWithContext(ctx)
}

// InstancePersistenceConfigPtrInput is an input type that accepts InstancePersistenceConfigArgs, InstancePersistenceConfigPtr and InstancePersistenceConfigPtrOutput values.
// You can construct a concrete instance of `InstancePersistenceConfigPtrInput` via:
//
//	        InstancePersistenceConfigArgs{...}
//
//	or:
//
//	        nil
type InstancePersistenceConfigPtrInput interface {
	pulumi.Input

	ToInstancePersistenceConfigPtrOutput() InstancePersistenceConfigPtrOutput
	ToInstancePersistenceConfigPtrOutputWithContext(context.Context) InstancePersistenceConfigPtrOutput
}

type instancePersistenceConfigPtrType InstancePersistenceConfigArgs

func InstancePersistenceConfigPtr(v *InstancePersistenceConfigArgs) InstancePersistenceConfigPtrInput {
	return (*instancePersistenceConfigPtrType)(v)
}

func (*instancePersistenceConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstancePersistenceConfig)(nil)).Elem()
}

func (i *instancePersistenceConfigPtrType) ToInstancePersistenceConfigPtrOutput() InstancePersistenceConfigPtrOutput {
	return i.ToInstancePersistenceConfigPtrOutputWithContext(context.Background())
}

func (i *instancePersistenceConfigPtrType) ToInstancePersistenceConfigPtrOutputWithContext(ctx context.Context) InstancePersistenceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancePersistenceConfigPtrOutput)
}

type InstancePersistenceConfigOutput struct{ *pulumi.OutputState }

func (InstancePersistenceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancePersistenceConfig)(nil)).Elem()
}

func (o InstancePersistenceConfigOutput) ToInstancePersistenceConfigOutput() InstancePersistenceConfigOutput {
	return o
}

func (o InstancePersistenceConfigOutput) ToInstancePersistenceConfigOutputWithContext(ctx context.Context) InstancePersistenceConfigOutput {
	return o
}

func (o InstancePersistenceConfigOutput) ToInstancePersistenceConfigPtrOutput() InstancePersistenceConfigPtrOutput {
	return o.ToInstancePersistenceConfigPtrOutputWithContext(context.Background())
}

func (o InstancePersistenceConfigOutput) ToInstancePersistenceConfigPtrOutputWithContext(ctx context.Context) InstancePersistenceConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstancePersistenceConfig) *InstancePersistenceConfig {
		return &v
	}).(InstancePersistenceConfigPtrOutput)
}

// Optional. Controls whether Persistence features are enabled. If not provided, the existing value will be used.
//   - DISABLED: 	Persistence is disabled for the instance, and any existing snapshots are deleted.
//   - RDB: RDB based Persistence is enabled.
//     Possible values are: `DISABLED`, `RDB`.
func (o InstancePersistenceConfigOutput) PersistenceMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstancePersistenceConfig) *string { return v.PersistenceMode }).(pulumi.StringPtrOutput)
}

// (Output)
// Output only. The next time that a snapshot attempt is scheduled to occur.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up
// to nine fractional digits.
// Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
func (o InstancePersistenceConfigOutput) RdbNextSnapshotTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstancePersistenceConfig) *string { return v.RdbNextSnapshotTime }).(pulumi.StringPtrOutput)
}

// Optional. Available snapshot periods for scheduling.
//   - ONE_HOUR:	Snapshot every 1 hour.
//   - SIX_HOURS:	Snapshot every 6 hours.
//   - TWELVE_HOURS:	Snapshot every 12 hours.
//   - TWENTY_FOUR_HOURS:	Snapshot every 24 hours.
//     Possible values are: `ONE_HOUR`, `SIX_HOURS`, `TWELVE_HOURS`, `TWENTY_FOUR_HOURS`.
func (o InstancePersistenceConfigOutput) RdbSnapshotPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstancePersistenceConfig) *string { return v.RdbSnapshotPeriod }).(pulumi.StringPtrOutput)
}

// Optional. Date and time that the first snapshot was/will be attempted,
// and to which future snapshots will be aligned. If not provided,
// the current time will be used.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution
// and up to nine fractional digits.
// Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
func (o InstancePersistenceConfigOutput) RdbSnapshotStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstancePersistenceConfig) *string { return v.RdbSnapshotStartTime }).(pulumi.StringPtrOutput)
}

type InstancePersistenceConfigPtrOutput struct{ *pulumi.OutputState }

func (InstancePersistenceConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstancePersistenceConfig)(nil)).Elem()
}

func (o InstancePersistenceConfigPtrOutput) ToInstancePersistenceConfigPtrOutput() InstancePersistenceConfigPtrOutput {
	return o
}

func (o InstancePersistenceConfigPtrOutput) ToInstancePersistenceConfigPtrOutputWithContext(ctx context.Context) InstancePersistenceConfigPtrOutput {
	return o
}

func (o InstancePersistenceConfigPtrOutput) Elem() InstancePersistenceConfigOutput {
	return o.ApplyT(func(v *InstancePersistenceConfig) InstancePersistenceConfig {
		if v != nil {
			return *v
		}
		var ret InstancePersistenceConfig
		return ret
	}).(InstancePersistenceConfigOutput)
}

// Optional. Controls whether Persistence features are enabled. If not provided, the existing value will be used.
//   - DISABLED: 	Persistence is disabled for the instance, and any existing snapshots are deleted.
//   - RDB: RDB based Persistence is enabled.
//     Possible values are: `DISABLED`, `RDB`.
func (o InstancePersistenceConfigPtrOutput) PersistenceMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstancePersistenceConfig) *string {
		if v == nil {
			return nil
		}
		return v.PersistenceMode
	}).(pulumi.StringPtrOutput)
}

// (Output)
// Output only. The next time that a snapshot attempt is scheduled to occur.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up
// to nine fractional digits.
// Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
func (o InstancePersistenceConfigPtrOutput) RdbNextSnapshotTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstancePersistenceConfig) *string {
		if v == nil {
			return nil
		}
		return v.RdbNextSnapshotTime
	}).(pulumi.StringPtrOutput)
}

// Optional. Available snapshot periods for scheduling.
//   - ONE_HOUR:	Snapshot every 1 hour.
//   - SIX_HOURS:	Snapshot every 6 hours.
//   - TWELVE_HOURS:	Snapshot every 12 hours.
//   - TWENTY_FOUR_HOURS:	Snapshot every 24 hours.
//     Possible values are: `ONE_HOUR`, `SIX_HOURS`, `TWELVE_HOURS`, `TWENTY_FOUR_HOURS`.
func (o InstancePersistenceConfigPtrOutput) RdbSnapshotPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstancePersistenceConfig) *string {
		if v == nil {
			return nil
		}
		return v.RdbSnapshotPeriod
	}).(pulumi.StringPtrOutput)
}

// Optional. Date and time that the first snapshot was/will be attempted,
// and to which future snapshots will be aligned. If not provided,
// the current time will be used.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution
// and up to nine fractional digits.
// Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
func (o InstancePersistenceConfigPtrOutput) RdbSnapshotStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstancePersistenceConfig) *string {
		if v == nil {
			return nil
		}
		return v.RdbSnapshotStartTime
	}).(pulumi.StringPtrOutput)
}

type InstanceServerCaCert struct {
	// (Output)
	// The certificate data in PEM format.
	Cert *string `pulumi:"cert"`
	// (Output)
	// The time when the certificate was created.
	CreateTime *string `pulumi:"createTime"`
	// (Output)
	// The time when the certificate expires.
	ExpireTime *string `pulumi:"expireTime"`
	// (Output)
	// Serial number, as extracted from the certificate.
	SerialNumber *string `pulumi:"serialNumber"`
	// (Output)
	// Sha1 Fingerprint of the certificate.
	Sha1Fingerprint *string `pulumi:"sha1Fingerprint"`
}

// InstanceServerCaCertInput is an input type that accepts InstanceServerCaCertArgs and InstanceServerCaCertOutput values.
// You can construct a concrete instance of `InstanceServerCaCertInput` via:
//
//	InstanceServerCaCertArgs{...}
type InstanceServerCaCertInput interface {
	pulumi.Input

	ToInstanceServerCaCertOutput() InstanceServerCaCertOutput
	ToInstanceServerCaCertOutputWithContext(context.Context) InstanceServerCaCertOutput
}

type InstanceServerCaCertArgs struct {
	// (Output)
	// The certificate data in PEM format.
	Cert pulumi.StringPtrInput `pulumi:"cert"`
	// (Output)
	// The time when the certificate was created.
	CreateTime pulumi.StringPtrInput `pulumi:"createTime"`
	// (Output)
	// The time when the certificate expires.
	ExpireTime pulumi.StringPtrInput `pulumi:"expireTime"`
	// (Output)
	// Serial number, as extracted from the certificate.
	SerialNumber pulumi.StringPtrInput `pulumi:"serialNumber"`
	// (Output)
	// Sha1 Fingerprint of the certificate.
	Sha1Fingerprint pulumi.StringPtrInput `pulumi:"sha1Fingerprint"`
}

func (InstanceServerCaCertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceServerCaCert)(nil)).Elem()
}

func (i InstanceServerCaCertArgs) ToInstanceServerCaCertOutput() InstanceServerCaCertOutput {
	return i.ToInstanceServerCaCertOutputWithContext(context.Background())
}

func (i InstanceServerCaCertArgs) ToInstanceServerCaCertOutputWithContext(ctx context.Context) InstanceServerCaCertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceServerCaCertOutput)
}

// InstanceServerCaCertArrayInput is an input type that accepts InstanceServerCaCertArray and InstanceServerCaCertArrayOutput values.
// You can construct a concrete instance of `InstanceServerCaCertArrayInput` via:
//
//	InstanceServerCaCertArray{ InstanceServerCaCertArgs{...} }
type InstanceServerCaCertArrayInput interface {
	pulumi.Input

	ToInstanceServerCaCertArrayOutput() InstanceServerCaCertArrayOutput
	ToInstanceServerCaCertArrayOutputWithContext(context.Context) InstanceServerCaCertArrayOutput
}

type InstanceServerCaCertArray []InstanceServerCaCertInput

func (InstanceServerCaCertArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceServerCaCert)(nil)).Elem()
}

func (i InstanceServerCaCertArray) ToInstanceServerCaCertArrayOutput() InstanceServerCaCertArrayOutput {
	return i.ToInstanceServerCaCertArrayOutputWithContext(context.Background())
}

func (i InstanceServerCaCertArray) ToInstanceServerCaCertArrayOutputWithContext(ctx context.Context) InstanceServerCaCertArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceServerCaCertArrayOutput)
}

type InstanceServerCaCertOutput struct{ *pulumi.OutputState }

func (InstanceServerCaCertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceServerCaCert)(nil)).Elem()
}

func (o InstanceServerCaCertOutput) ToInstanceServerCaCertOutput() InstanceServerCaCertOutput {
	return o
}

func (o InstanceServerCaCertOutput) ToInstanceServerCaCertOutputWithContext(ctx context.Context) InstanceServerCaCertOutput {
	return o
}

// (Output)
// The certificate data in PEM format.
func (o InstanceServerCaCertOutput) Cert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceServerCaCert) *string { return v.Cert }).(pulumi.StringPtrOutput)
}

// (Output)
// The time when the certificate was created.
func (o InstanceServerCaCertOutput) CreateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceServerCaCert) *string { return v.CreateTime }).(pulumi.StringPtrOutput)
}

// (Output)
// The time when the certificate expires.
func (o InstanceServerCaCertOutput) ExpireTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceServerCaCert) *string { return v.ExpireTime }).(pulumi.StringPtrOutput)
}

// (Output)
// Serial number, as extracted from the certificate.
func (o InstanceServerCaCertOutput) SerialNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceServerCaCert) *string { return v.SerialNumber }).(pulumi.StringPtrOutput)
}

// (Output)
// Sha1 Fingerprint of the certificate.
func (o InstanceServerCaCertOutput) Sha1Fingerprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceServerCaCert) *string { return v.Sha1Fingerprint }).(pulumi.StringPtrOutput)
}

type InstanceServerCaCertArrayOutput struct{ *pulumi.OutputState }

func (InstanceServerCaCertArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceServerCaCert)(nil)).Elem()
}

func (o InstanceServerCaCertArrayOutput) ToInstanceServerCaCertArrayOutput() InstanceServerCaCertArrayOutput {
	return o
}

func (o InstanceServerCaCertArrayOutput) ToInstanceServerCaCertArrayOutputWithContext(ctx context.Context) InstanceServerCaCertArrayOutput {
	return o
}

func (o InstanceServerCaCertArrayOutput) Index(i pulumi.IntInput) InstanceServerCaCertOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceServerCaCert {
		return vs[0].([]InstanceServerCaCert)[vs[1].(int)]
	}).(InstanceServerCaCertOutput)
}

type GetClusterAutomatedBackupConfig struct {
	// Trigger automated backups at a fixed frequency.
	FixedFrequencySchedules []GetClusterAutomatedBackupConfigFixedFrequencySchedule `pulumi:"fixedFrequencySchedules"`
	// How long to keep automated backups before the backups are deleted.
	// The value should be between 1 day and 365 days. If not specified, the default value is 35 days.
	// A duration in seconds with up to nine fractional digits, ending with 's'. Example: "3.5s".
	Retention string `pulumi:"retention"`
}

// GetClusterAutomatedBackupConfigInput is an input type that accepts GetClusterAutomatedBackupConfigArgs and GetClusterAutomatedBackupConfigOutput values.
// You can construct a concrete instance of `GetClusterAutomatedBackupConfigInput` via:
//
//	GetClusterAutomatedBackupConfigArgs{...}
type GetClusterAutomatedBackupConfigInput interface {
	pulumi.Input

	ToGetClusterAutomatedBackupConfigOutput() GetClusterAutomatedBackupConfigOutput
	ToGetClusterAutomatedBackupConfigOutputWithContext(context.Context) GetClusterAutomatedBackupConfigOutput
}

type GetClusterAutomatedBackupConfigArgs struct {
	// Trigger automated backups at a fixed frequency.
	FixedFrequencySchedules GetClusterAutomatedBackupConfigFixedFrequencyScheduleArrayInput `pulumi:"fixedFrequencySchedules"`
	// How long to keep automated backups before the backups are deleted.
	// The value should be between 1 day and 365 days. If not specified, the default value is 35 days.
	// A duration in seconds with up to nine fractional digits, ending with 's'. Example: "3.5s".
	Retention pulumi.StringInput `pulumi:"retention"`
}

func (GetClusterAutomatedBackupConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterAutomatedBackupConfig)(nil)).Elem()
}

func (i GetClusterAutomatedBackupConfigArgs) ToGetClusterAutomatedBackupConfigOutput() GetClusterAutomatedBackupConfigOutput {
	return i.ToGetClusterAutomatedBackupConfigOutputWithContext(context.Background())
}

func (i GetClusterAutomatedBackupConfigArgs) ToGetClusterAutomatedBackupConfigOutputWithContext(ctx context.Context) GetClusterAutomatedBackupConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterAutomatedBackupConfigOutput)
}

// GetClusterAutomatedBackupConfigArrayInput is an input type that accepts GetClusterAutomatedBackupConfigArray and GetClusterAutomatedBackupConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterAutomatedBackupConfigArrayInput` via:
//
//	GetClusterAutomatedBackupConfigArray{ GetClusterAutomatedBackupConfigArgs{...} }
type GetClusterAutomatedBackupConfigArrayInput interface {
	pulumi.Input

	ToGetClusterAutomatedBackupConfigArrayOutput() GetClusterAutomatedBackupConfigArrayOutput
	ToGetClusterAutomatedBackupConfigArrayOutputWithContext(context.Context) GetClusterAutomatedBackupConfigArrayOutput
}

type GetClusterAutomatedBackupConfigArray []GetClusterAutomatedBackupConfigInput

func (GetClusterAutomatedBackupConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterAutomatedBackupConfig)(nil)).Elem()
}

func (i GetClusterAutomatedBackupConfigArray) ToGetClusterAutomatedBackupConfigArrayOutput() GetClusterAutomatedBackupConfigArrayOutput {
	return i.ToGetClusterAutomatedBackupConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterAutomatedBackupConfigArray) ToGetClusterAutomatedBackupConfigArrayOutputWithContext(ctx context.Context) GetClusterAutomatedBackupConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterAutomatedBackupConfigArrayOutput)
}

type GetClusterAutomatedBackupConfigOutput struct{ *pulumi.OutputState }

func (GetClusterAutomatedBackupConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterAutomatedBackupConfig)(nil)).Elem()
}

func (o GetClusterAutomatedBackupConfigOutput) ToGetClusterAutomatedBackupConfigOutput() GetClusterAutomatedBackupConfigOutput {
	return o
}

func (o GetClusterAutomatedBackupConfigOutput) ToGetClusterAutomatedBackupConfigOutputWithContext(ctx context.Context) GetClusterAutomatedBackupConfigOutput {
	return o
}

// Trigger automated backups at a fixed frequency.
func (o GetClusterAutomatedBackupConfigOutput) FixedFrequencySchedules() GetClusterAutomatedBackupConfigFixedFrequencyScheduleArrayOutput {
	return o.ApplyT(func(v GetClusterAutomatedBackupConfig) []GetClusterAutomatedBackupConfigFixedFrequencySchedule {
		return v.FixedFrequencySchedules
	}).(GetClusterAutomatedBackupConfigFixedFrequencyScheduleArrayOutput)
}

// How long to keep automated backups before the backups are deleted.
// The value should be between 1 day and 365 days. If not specified, the default value is 35 days.
// A duration in seconds with up to nine fractional digits, ending with 's'. Example: "3.5s".
func (o GetClusterAutomatedBackupConfigOutput) Retention() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterAutomatedBackupConfig) string { return v.Retention }).(pulumi.StringOutput)
}

type GetClusterAutomatedBackupConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterAutomatedBackupConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterAutomatedBackupConfig)(nil)).Elem()
}

func (o GetClusterAutomatedBackupConfigArrayOutput) ToGetClusterAutomatedBackupConfigArrayOutput() GetClusterAutomatedBackupConfigArrayOutput {
	return o
}

func (o GetClusterAutomatedBackupConfigArrayOutput) ToGetClusterAutomatedBackupConfigArrayOutputWithContext(ctx context.Context) GetClusterAutomatedBackupConfigArrayOutput {
	return o
}

func (o GetClusterAutomatedBackupConfigArrayOutput) Index(i pulumi.IntInput) GetClusterAutomatedBackupConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterAutomatedBackupConfig {
		return vs[0].([]GetClusterAutomatedBackupConfig)[vs[1].(int)]
	}).(GetClusterAutomatedBackupConfigOutput)
}

type GetClusterAutomatedBackupConfigFixedFrequencySchedule struct {
	// The start time of every automated backup in UTC.
	// It must be set to the start of an hour. This field is required.
	StartTimes []GetClusterAutomatedBackupConfigFixedFrequencyScheduleStartTime `pulumi:"startTimes"`
}

// GetClusterAutomatedBackupConfigFixedFrequencyScheduleInput is an input type that accepts GetClusterAutomatedBackupConfigFixedFrequencyScheduleArgs and GetClusterAutomatedBackupConfigFixedFrequencyScheduleOutput values.
// You can construct a concrete instance of `GetClusterAutomatedBackupConfigFixedFrequencyScheduleInput` via:
//
//	GetClusterAutomatedBackupConfigFixedFrequencyScheduleArgs{...}
type GetClusterAutomatedBackupConfigFixedFrequencyScheduleInput interface {
	pulumi.Input

	ToGetClusterAutomatedBackupConfigFixedFrequencyScheduleOutput() GetClusterAutomatedBackupConfigFixedFrequencyScheduleOutput
	ToGetClusterAutomatedBackupConfigFixedFrequencyScheduleOutputWithContext(context.Context) GetClusterAutomatedBackupConfigFixedFrequencyScheduleOutput
}

type GetClusterAutomatedBackupConfigFixedFrequencyScheduleArgs struct {
	// The start time of every automated backup in UTC.
	// It must be set to the start of an hour. This field is required.
	StartTimes GetClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeArrayInput `pulumi:"startTimes"`
}

func (GetClusterAutomatedBackupConfigFixedFrequencyScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterAutomatedBackupConfigFixedFrequencySchedule)(nil)).Elem()
}

func (i GetClusterAutomatedBackupConfigFixedFrequencyScheduleArgs) ToGetClusterAutomatedBackupConfigFixedFrequencyScheduleOutput() GetClusterAutomatedBackupConfigFixedFrequencyScheduleOutput {
	return i.ToGetClusterAutomatedBackupConfigFixedFrequencyScheduleOutputWithContext(context.Background())
}

func (i GetClusterAutomatedBackupConfigFixedFrequencyScheduleArgs) ToGetClusterAutomatedBackupConfigFixedFrequencyScheduleOutputWithContext(ctx context.Context) GetClusterAutomatedBackupConfigFixedFrequencyScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterAutomatedBackupConfigFixedFrequencyScheduleOutput)
}

// GetClusterAutomatedBackupConfigFixedFrequencyScheduleArrayInput is an input type that accepts GetClusterAutomatedBackupConfigFixedFrequencyScheduleArray and GetClusterAutomatedBackupConfigFixedFrequencyScheduleArrayOutput values.
// You can construct a concrete instance of `GetClusterAutomatedBackupConfigFixedFrequencyScheduleArrayInput` via:
//
//	GetClusterAutomatedBackupConfigFixedFrequencyScheduleArray{ GetClusterAutomatedBackupConfigFixedFrequencyScheduleArgs{...} }
type GetClusterAutomatedBackupConfigFixedFrequencyScheduleArrayInput interface {
	pulumi.Input

	ToGetClusterAutomatedBackupConfigFixedFrequencyScheduleArrayOutput() GetClusterAutomatedBackupConfigFixedFrequencyScheduleArrayOutput
	ToGetClusterAutomatedBackupConfigFixedFrequencyScheduleArrayOutputWithContext(context.Context) GetClusterAutomatedBackupConfigFixedFrequencyScheduleArrayOutput
}

type GetClusterAutomatedBackupConfigFixedFrequencyScheduleArray []GetClusterAutomatedBackupConfigFixedFrequencyScheduleInput

func (GetClusterAutomatedBackupConfigFixedFrequencyScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterAutomatedBackupConfigFixedFrequencySchedule)(nil)).Elem()
}

func (i GetClusterAutomatedBackupConfigFixedFrequencyScheduleArray) ToGetClusterAutomatedBackupConfigFixedFrequencyScheduleArrayOutput() GetClusterAutomatedBackupConfigFixedFrequencyScheduleArrayOutput {
	return i.ToGetClusterAutomatedBackupConfigFixedFrequencyScheduleArrayOutputWithContext(context.Background())
}

func (i GetClusterAutomatedBackupConfigFixedFrequencyScheduleArray) ToGetClusterAutomatedBackupConfigFixedFrequencyScheduleArrayOutputWithContext(ctx context.Context) GetClusterAutomatedBackupConfigFixedFrequencyScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterAutomatedBackupConfigFixedFrequencyScheduleArrayOutput)
}

type GetClusterAutomatedBackupConfigFixedFrequencyScheduleOutput struct{ *pulumi.OutputState }

func (GetClusterAutomatedBackupConfigFixedFrequencyScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterAutomatedBackupConfigFixedFrequencySchedule)(nil)).Elem()
}

func (o GetClusterAutomatedBackupConfigFixedFrequencyScheduleOutput) ToGetClusterAutomatedBackupConfigFixedFrequencyScheduleOutput() GetClusterAutomatedBackupConfigFixedFrequencyScheduleOutput {
	return o
}

func (o GetClusterAutomatedBackupConfigFixedFrequencyScheduleOutput) ToGetClusterAutomatedBackupConfigFixedFrequencyScheduleOutputWithContext(ctx context.Context) GetClusterAutomatedBackupConfigFixedFrequencyScheduleOutput {
	return o
}

// The start time of every automated backup in UTC.
// It must be set to the start of an hour. This field is required.
func (o GetClusterAutomatedBackupConfigFixedFrequencyScheduleOutput) StartTimes() GetClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeArrayOutput {
	return o.ApplyT(func(v GetClusterAutomatedBackupConfigFixedFrequencySchedule) []GetClusterAutomatedBackupConfigFixedFrequencyScheduleStartTime {
		return v.StartTimes
	}).(GetClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeArrayOutput)
}

type GetClusterAutomatedBackupConfigFixedFrequencyScheduleArrayOutput struct{ *pulumi.OutputState }

func (GetClusterAutomatedBackupConfigFixedFrequencyScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterAutomatedBackupConfigFixedFrequencySchedule)(nil)).Elem()
}

func (o GetClusterAutomatedBackupConfigFixedFrequencyScheduleArrayOutput) ToGetClusterAutomatedBackupConfigFixedFrequencyScheduleArrayOutput() GetClusterAutomatedBackupConfigFixedFrequencyScheduleArrayOutput {
	return o
}

func (o GetClusterAutomatedBackupConfigFixedFrequencyScheduleArrayOutput) ToGetClusterAutomatedBackupConfigFixedFrequencyScheduleArrayOutputWithContext(ctx context.Context) GetClusterAutomatedBackupConfigFixedFrequencyScheduleArrayOutput {
	return o
}

func (o GetClusterAutomatedBackupConfigFixedFrequencyScheduleArrayOutput) Index(i pulumi.IntInput) GetClusterAutomatedBackupConfigFixedFrequencyScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterAutomatedBackupConfigFixedFrequencySchedule {
		return vs[0].([]GetClusterAutomatedBackupConfigFixedFrequencySchedule)[vs[1].(int)]
	}).(GetClusterAutomatedBackupConfigFixedFrequencyScheduleOutput)
}

type GetClusterAutomatedBackupConfigFixedFrequencyScheduleStartTime struct {
	// Hours of a day in 24 hour format. Must be greater than or equal to 0 and typically must be less than or equal to 23.
	// An API may choose to allow the value "24:00:00" for scenarios like business closing time.
	Hours int `pulumi:"hours"`
}

// GetClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeInput is an input type that accepts GetClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeArgs and GetClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeOutput values.
// You can construct a concrete instance of `GetClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeInput` via:
//
//	GetClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeArgs{...}
type GetClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeInput interface {
	pulumi.Input

	ToGetClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeOutput() GetClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeOutput
	ToGetClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeOutputWithContext(context.Context) GetClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeOutput
}

type GetClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeArgs struct {
	// Hours of a day in 24 hour format. Must be greater than or equal to 0 and typically must be less than or equal to 23.
	// An API may choose to allow the value "24:00:00" for scenarios like business closing time.
	Hours pulumi.IntInput `pulumi:"hours"`
}

func (GetClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterAutomatedBackupConfigFixedFrequencyScheduleStartTime)(nil)).Elem()
}

func (i GetClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeArgs) ToGetClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeOutput() GetClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeOutput {
	return i.ToGetClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeOutputWithContext(context.Background())
}

func (i GetClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeArgs) ToGetClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeOutputWithContext(ctx context.Context) GetClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeOutput)
}

// GetClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeArrayInput is an input type that accepts GetClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeArray and GetClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeArrayOutput values.
// You can construct a concrete instance of `GetClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeArrayInput` via:
//
//	GetClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeArray{ GetClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeArgs{...} }
type GetClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeArrayInput interface {
	pulumi.Input

	ToGetClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeArrayOutput() GetClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeArrayOutput
	ToGetClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeArrayOutputWithContext(context.Context) GetClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeArrayOutput
}

type GetClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeArray []GetClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeInput

func (GetClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterAutomatedBackupConfigFixedFrequencyScheduleStartTime)(nil)).Elem()
}

func (i GetClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeArray) ToGetClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeArrayOutput() GetClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeArrayOutput {
	return i.ToGetClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeArrayOutputWithContext(context.Background())
}

func (i GetClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeArray) ToGetClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeArrayOutputWithContext(ctx context.Context) GetClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeArrayOutput)
}

type GetClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeOutput struct{ *pulumi.OutputState }

func (GetClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterAutomatedBackupConfigFixedFrequencyScheduleStartTime)(nil)).Elem()
}

func (o GetClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeOutput) ToGetClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeOutput() GetClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeOutput {
	return o
}

func (o GetClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeOutput) ToGetClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeOutputWithContext(ctx context.Context) GetClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeOutput {
	return o
}

// Hours of a day in 24 hour format. Must be greater than or equal to 0 and typically must be less than or equal to 23.
// An API may choose to allow the value "24:00:00" for scenarios like business closing time.
func (o GetClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeOutput) Hours() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterAutomatedBackupConfigFixedFrequencyScheduleStartTime) int { return v.Hours }).(pulumi.IntOutput)
}

type GetClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeArrayOutput struct{ *pulumi.OutputState }

func (GetClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterAutomatedBackupConfigFixedFrequencyScheduleStartTime)(nil)).Elem()
}

func (o GetClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeArrayOutput) ToGetClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeArrayOutput() GetClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeArrayOutput {
	return o
}

func (o GetClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeArrayOutput) ToGetClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeArrayOutputWithContext(ctx context.Context) GetClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeArrayOutput {
	return o
}

func (o GetClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeArrayOutput) Index(i pulumi.IntInput) GetClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterAutomatedBackupConfigFixedFrequencyScheduleStartTime {
		return vs[0].([]GetClusterAutomatedBackupConfigFixedFrequencyScheduleStartTime)[vs[1].(int)]
	}).(GetClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeOutput)
}

type GetClusterCrossClusterReplicationConfig struct {
	// The role of the cluster in cross cluster replication. Supported values are:
	//
	// 1. 'CLUSTER_ROLE_UNSPECIFIED': This is an independent cluster that has never participated in cross cluster replication. It allows both reads and writes.
	//
	// 2. 'NONE': This is an independent cluster that previously participated in cross cluster replication(either as a 'PRIMARY' or 'SECONDARY' cluster). It allows both reads and writes.
	//
	// 3. 'PRIMARY': This cluster serves as the replication source for secondary clusters that are replicating from it. Any data written to it is automatically replicated to its secondary clusters. It allows both reads and writes.
	//
	// 4. 'SECONDARY': This cluster replicates data from the primary cluster. It allows only reads. Possible values: ["CLUSTER_ROLE_UNSPECIFIED", "NONE", "PRIMARY", "SECONDARY"]
	ClusterRole string `pulumi:"clusterRole"`
	// An output only view of all the member clusters participating in cross cluster replication. This field is populated for all the member clusters irrespective of their cluster role.
	Memberships []GetClusterCrossClusterReplicationConfigMembership `pulumi:"memberships"`
	// Details of the primary cluster that is used as the replication source for this secondary cluster. This is allowed to be set only for clusters whose cluster role is of type 'SECONDARY'.
	PrimaryClusters []GetClusterCrossClusterReplicationConfigPrimaryCluster `pulumi:"primaryClusters"`
	// List of secondary clusters that are replicating from this primary cluster. This is allowed to be set only for clusters whose cluster role is of type 'PRIMARY'.
	SecondaryClusters []GetClusterCrossClusterReplicationConfigSecondaryCluster `pulumi:"secondaryClusters"`
	// The last time cross cluster replication config was updated.
	UpdateTime string `pulumi:"updateTime"`
}

// GetClusterCrossClusterReplicationConfigInput is an input type that accepts GetClusterCrossClusterReplicationConfigArgs and GetClusterCrossClusterReplicationConfigOutput values.
// You can construct a concrete instance of `GetClusterCrossClusterReplicationConfigInput` via:
//
//	GetClusterCrossClusterReplicationConfigArgs{...}
type GetClusterCrossClusterReplicationConfigInput interface {
	pulumi.Input

	ToGetClusterCrossClusterReplicationConfigOutput() GetClusterCrossClusterReplicationConfigOutput
	ToGetClusterCrossClusterReplicationConfigOutputWithContext(context.Context) GetClusterCrossClusterReplicationConfigOutput
}

type GetClusterCrossClusterReplicationConfigArgs struct {
	// The role of the cluster in cross cluster replication. Supported values are:
	//
	// 1. 'CLUSTER_ROLE_UNSPECIFIED': This is an independent cluster that has never participated in cross cluster replication. It allows both reads and writes.
	//
	// 2. 'NONE': This is an independent cluster that previously participated in cross cluster replication(either as a 'PRIMARY' or 'SECONDARY' cluster). It allows both reads and writes.
	//
	// 3. 'PRIMARY': This cluster serves as the replication source for secondary clusters that are replicating from it. Any data written to it is automatically replicated to its secondary clusters. It allows both reads and writes.
	//
	// 4. 'SECONDARY': This cluster replicates data from the primary cluster. It allows only reads. Possible values: ["CLUSTER_ROLE_UNSPECIFIED", "NONE", "PRIMARY", "SECONDARY"]
	ClusterRole pulumi.StringInput `pulumi:"clusterRole"`
	// An output only view of all the member clusters participating in cross cluster replication. This field is populated for all the member clusters irrespective of their cluster role.
	Memberships GetClusterCrossClusterReplicationConfigMembershipArrayInput `pulumi:"memberships"`
	// Details of the primary cluster that is used as the replication source for this secondary cluster. This is allowed to be set only for clusters whose cluster role is of type 'SECONDARY'.
	PrimaryClusters GetClusterCrossClusterReplicationConfigPrimaryClusterArrayInput `pulumi:"primaryClusters"`
	// List of secondary clusters that are replicating from this primary cluster. This is allowed to be set only for clusters whose cluster role is of type 'PRIMARY'.
	SecondaryClusters GetClusterCrossClusterReplicationConfigSecondaryClusterArrayInput `pulumi:"secondaryClusters"`
	// The last time cross cluster replication config was updated.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
}

func (GetClusterCrossClusterReplicationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterCrossClusterReplicationConfig)(nil)).Elem()
}

func (i GetClusterCrossClusterReplicationConfigArgs) ToGetClusterCrossClusterReplicationConfigOutput() GetClusterCrossClusterReplicationConfigOutput {
	return i.ToGetClusterCrossClusterReplicationConfigOutputWithContext(context.Background())
}

func (i GetClusterCrossClusterReplicationConfigArgs) ToGetClusterCrossClusterReplicationConfigOutputWithContext(ctx context.Context) GetClusterCrossClusterReplicationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterCrossClusterReplicationConfigOutput)
}

// GetClusterCrossClusterReplicationConfigArrayInput is an input type that accepts GetClusterCrossClusterReplicationConfigArray and GetClusterCrossClusterReplicationConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterCrossClusterReplicationConfigArrayInput` via:
//
//	GetClusterCrossClusterReplicationConfigArray{ GetClusterCrossClusterReplicationConfigArgs{...} }
type GetClusterCrossClusterReplicationConfigArrayInput interface {
	pulumi.Input

	ToGetClusterCrossClusterReplicationConfigArrayOutput() GetClusterCrossClusterReplicationConfigArrayOutput
	ToGetClusterCrossClusterReplicationConfigArrayOutputWithContext(context.Context) GetClusterCrossClusterReplicationConfigArrayOutput
}

type GetClusterCrossClusterReplicationConfigArray []GetClusterCrossClusterReplicationConfigInput

func (GetClusterCrossClusterReplicationConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterCrossClusterReplicationConfig)(nil)).Elem()
}

func (i GetClusterCrossClusterReplicationConfigArray) ToGetClusterCrossClusterReplicationConfigArrayOutput() GetClusterCrossClusterReplicationConfigArrayOutput {
	return i.ToGetClusterCrossClusterReplicationConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterCrossClusterReplicationConfigArray) ToGetClusterCrossClusterReplicationConfigArrayOutputWithContext(ctx context.Context) GetClusterCrossClusterReplicationConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterCrossClusterReplicationConfigArrayOutput)
}

type GetClusterCrossClusterReplicationConfigOutput struct{ *pulumi.OutputState }

func (GetClusterCrossClusterReplicationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterCrossClusterReplicationConfig)(nil)).Elem()
}

func (o GetClusterCrossClusterReplicationConfigOutput) ToGetClusterCrossClusterReplicationConfigOutput() GetClusterCrossClusterReplicationConfigOutput {
	return o
}

func (o GetClusterCrossClusterReplicationConfigOutput) ToGetClusterCrossClusterReplicationConfigOutputWithContext(ctx context.Context) GetClusterCrossClusterReplicationConfigOutput {
	return o
}

// The role of the cluster in cross cluster replication. Supported values are:
//
// 1. 'CLUSTER_ROLE_UNSPECIFIED': This is an independent cluster that has never participated in cross cluster replication. It allows both reads and writes.
//
// 2. 'NONE': This is an independent cluster that previously participated in cross cluster replication(either as a 'PRIMARY' or 'SECONDARY' cluster). It allows both reads and writes.
//
// 3. 'PRIMARY': This cluster serves as the replication source for secondary clusters that are replicating from it. Any data written to it is automatically replicated to its secondary clusters. It allows both reads and writes.
//
// 4. 'SECONDARY': This cluster replicates data from the primary cluster. It allows only reads. Possible values: ["CLUSTER_ROLE_UNSPECIFIED", "NONE", "PRIMARY", "SECONDARY"]
func (o GetClusterCrossClusterReplicationConfigOutput) ClusterRole() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterCrossClusterReplicationConfig) string { return v.ClusterRole }).(pulumi.StringOutput)
}

// An output only view of all the member clusters participating in cross cluster replication. This field is populated for all the member clusters irrespective of their cluster role.
func (o GetClusterCrossClusterReplicationConfigOutput) Memberships() GetClusterCrossClusterReplicationConfigMembershipArrayOutput {
	return o.ApplyT(func(v GetClusterCrossClusterReplicationConfig) []GetClusterCrossClusterReplicationConfigMembership {
		return v.Memberships
	}).(GetClusterCrossClusterReplicationConfigMembershipArrayOutput)
}

// Details of the primary cluster that is used as the replication source for this secondary cluster. This is allowed to be set only for clusters whose cluster role is of type 'SECONDARY'.
func (o GetClusterCrossClusterReplicationConfigOutput) PrimaryClusters() GetClusterCrossClusterReplicationConfigPrimaryClusterArrayOutput {
	return o.ApplyT(func(v GetClusterCrossClusterReplicationConfig) []GetClusterCrossClusterReplicationConfigPrimaryCluster {
		return v.PrimaryClusters
	}).(GetClusterCrossClusterReplicationConfigPrimaryClusterArrayOutput)
}

// List of secondary clusters that are replicating from this primary cluster. This is allowed to be set only for clusters whose cluster role is of type 'PRIMARY'.
func (o GetClusterCrossClusterReplicationConfigOutput) SecondaryClusters() GetClusterCrossClusterReplicationConfigSecondaryClusterArrayOutput {
	return o.ApplyT(func(v GetClusterCrossClusterReplicationConfig) []GetClusterCrossClusterReplicationConfigSecondaryCluster {
		return v.SecondaryClusters
	}).(GetClusterCrossClusterReplicationConfigSecondaryClusterArrayOutput)
}

// The last time cross cluster replication config was updated.
func (o GetClusterCrossClusterReplicationConfigOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterCrossClusterReplicationConfig) string { return v.UpdateTime }).(pulumi.StringOutput)
}

type GetClusterCrossClusterReplicationConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterCrossClusterReplicationConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterCrossClusterReplicationConfig)(nil)).Elem()
}

func (o GetClusterCrossClusterReplicationConfigArrayOutput) ToGetClusterCrossClusterReplicationConfigArrayOutput() GetClusterCrossClusterReplicationConfigArrayOutput {
	return o
}

func (o GetClusterCrossClusterReplicationConfigArrayOutput) ToGetClusterCrossClusterReplicationConfigArrayOutputWithContext(ctx context.Context) GetClusterCrossClusterReplicationConfigArrayOutput {
	return o
}

func (o GetClusterCrossClusterReplicationConfigArrayOutput) Index(i pulumi.IntInput) GetClusterCrossClusterReplicationConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterCrossClusterReplicationConfig {
		return vs[0].([]GetClusterCrossClusterReplicationConfig)[vs[1].(int)]
	}).(GetClusterCrossClusterReplicationConfigOutput)
}

type GetClusterCrossClusterReplicationConfigMembership struct {
	// Details of the primary cluster that is used as the replication source for all the secondary clusters.
	PrimaryClusters []GetClusterCrossClusterReplicationConfigMembershipPrimaryCluster `pulumi:"primaryClusters"`
	// List of secondary clusters that are replicating from the primary cluster.
	SecondaryClusters []GetClusterCrossClusterReplicationConfigMembershipSecondaryCluster `pulumi:"secondaryClusters"`
}

// GetClusterCrossClusterReplicationConfigMembershipInput is an input type that accepts GetClusterCrossClusterReplicationConfigMembershipArgs and GetClusterCrossClusterReplicationConfigMembershipOutput values.
// You can construct a concrete instance of `GetClusterCrossClusterReplicationConfigMembershipInput` via:
//
//	GetClusterCrossClusterReplicationConfigMembershipArgs{...}
type GetClusterCrossClusterReplicationConfigMembershipInput interface {
	pulumi.Input

	ToGetClusterCrossClusterReplicationConfigMembershipOutput() GetClusterCrossClusterReplicationConfigMembershipOutput
	ToGetClusterCrossClusterReplicationConfigMembershipOutputWithContext(context.Context) GetClusterCrossClusterReplicationConfigMembershipOutput
}

type GetClusterCrossClusterReplicationConfigMembershipArgs struct {
	// Details of the primary cluster that is used as the replication source for all the secondary clusters.
	PrimaryClusters GetClusterCrossClusterReplicationConfigMembershipPrimaryClusterArrayInput `pulumi:"primaryClusters"`
	// List of secondary clusters that are replicating from the primary cluster.
	SecondaryClusters GetClusterCrossClusterReplicationConfigMembershipSecondaryClusterArrayInput `pulumi:"secondaryClusters"`
}

func (GetClusterCrossClusterReplicationConfigMembershipArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterCrossClusterReplicationConfigMembership)(nil)).Elem()
}

func (i GetClusterCrossClusterReplicationConfigMembershipArgs) ToGetClusterCrossClusterReplicationConfigMembershipOutput() GetClusterCrossClusterReplicationConfigMembershipOutput {
	return i.ToGetClusterCrossClusterReplicationConfigMembershipOutputWithContext(context.Background())
}

func (i GetClusterCrossClusterReplicationConfigMembershipArgs) ToGetClusterCrossClusterReplicationConfigMembershipOutputWithContext(ctx context.Context) GetClusterCrossClusterReplicationConfigMembershipOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterCrossClusterReplicationConfigMembershipOutput)
}

// GetClusterCrossClusterReplicationConfigMembershipArrayInput is an input type that accepts GetClusterCrossClusterReplicationConfigMembershipArray and GetClusterCrossClusterReplicationConfigMembershipArrayOutput values.
// You can construct a concrete instance of `GetClusterCrossClusterReplicationConfigMembershipArrayInput` via:
//
//	GetClusterCrossClusterReplicationConfigMembershipArray{ GetClusterCrossClusterReplicationConfigMembershipArgs{...} }
type GetClusterCrossClusterReplicationConfigMembershipArrayInput interface {
	pulumi.Input

	ToGetClusterCrossClusterReplicationConfigMembershipArrayOutput() GetClusterCrossClusterReplicationConfigMembershipArrayOutput
	ToGetClusterCrossClusterReplicationConfigMembershipArrayOutputWithContext(context.Context) GetClusterCrossClusterReplicationConfigMembershipArrayOutput
}

type GetClusterCrossClusterReplicationConfigMembershipArray []GetClusterCrossClusterReplicationConfigMembershipInput

func (GetClusterCrossClusterReplicationConfigMembershipArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterCrossClusterReplicationConfigMembership)(nil)).Elem()
}

func (i GetClusterCrossClusterReplicationConfigMembershipArray) ToGetClusterCrossClusterReplicationConfigMembershipArrayOutput() GetClusterCrossClusterReplicationConfigMembershipArrayOutput {
	return i.ToGetClusterCrossClusterReplicationConfigMembershipArrayOutputWithContext(context.Background())
}

func (i GetClusterCrossClusterReplicationConfigMembershipArray) ToGetClusterCrossClusterReplicationConfigMembershipArrayOutputWithContext(ctx context.Context) GetClusterCrossClusterReplicationConfigMembershipArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterCrossClusterReplicationConfigMembershipArrayOutput)
}

type GetClusterCrossClusterReplicationConfigMembershipOutput struct{ *pulumi.OutputState }

func (GetClusterCrossClusterReplicationConfigMembershipOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterCrossClusterReplicationConfigMembership)(nil)).Elem()
}

func (o GetClusterCrossClusterReplicationConfigMembershipOutput) ToGetClusterCrossClusterReplicationConfigMembershipOutput() GetClusterCrossClusterReplicationConfigMembershipOutput {
	return o
}

func (o GetClusterCrossClusterReplicationConfigMembershipOutput) ToGetClusterCrossClusterReplicationConfigMembershipOutputWithContext(ctx context.Context) GetClusterCrossClusterReplicationConfigMembershipOutput {
	return o
}

// Details of the primary cluster that is used as the replication source for all the secondary clusters.
func (o GetClusterCrossClusterReplicationConfigMembershipOutput) PrimaryClusters() GetClusterCrossClusterReplicationConfigMembershipPrimaryClusterArrayOutput {
	return o.ApplyT(func(v GetClusterCrossClusterReplicationConfigMembership) []GetClusterCrossClusterReplicationConfigMembershipPrimaryCluster {
		return v.PrimaryClusters
	}).(GetClusterCrossClusterReplicationConfigMembershipPrimaryClusterArrayOutput)
}

// List of secondary clusters that are replicating from the primary cluster.
func (o GetClusterCrossClusterReplicationConfigMembershipOutput) SecondaryClusters() GetClusterCrossClusterReplicationConfigMembershipSecondaryClusterArrayOutput {
	return o.ApplyT(func(v GetClusterCrossClusterReplicationConfigMembership) []GetClusterCrossClusterReplicationConfigMembershipSecondaryCluster {
		return v.SecondaryClusters
	}).(GetClusterCrossClusterReplicationConfigMembershipSecondaryClusterArrayOutput)
}

type GetClusterCrossClusterReplicationConfigMembershipArrayOutput struct{ *pulumi.OutputState }

func (GetClusterCrossClusterReplicationConfigMembershipArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterCrossClusterReplicationConfigMembership)(nil)).Elem()
}

func (o GetClusterCrossClusterReplicationConfigMembershipArrayOutput) ToGetClusterCrossClusterReplicationConfigMembershipArrayOutput() GetClusterCrossClusterReplicationConfigMembershipArrayOutput {
	return o
}

func (o GetClusterCrossClusterReplicationConfigMembershipArrayOutput) ToGetClusterCrossClusterReplicationConfigMembershipArrayOutputWithContext(ctx context.Context) GetClusterCrossClusterReplicationConfigMembershipArrayOutput {
	return o
}

func (o GetClusterCrossClusterReplicationConfigMembershipArrayOutput) Index(i pulumi.IntInput) GetClusterCrossClusterReplicationConfigMembershipOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterCrossClusterReplicationConfigMembership {
		return vs[0].([]GetClusterCrossClusterReplicationConfigMembership)[vs[1].(int)]
	}).(GetClusterCrossClusterReplicationConfigMembershipOutput)
}

type GetClusterCrossClusterReplicationConfigMembershipPrimaryCluster struct {
	// The full resource path of the primary cluster in the format: projects/{project}/locations/{region}/clusters/{cluster-id}
	Cluster string `pulumi:"cluster"`
	// The unique id of the primary cluster.
	Uid string `pulumi:"uid"`
}

// GetClusterCrossClusterReplicationConfigMembershipPrimaryClusterInput is an input type that accepts GetClusterCrossClusterReplicationConfigMembershipPrimaryClusterArgs and GetClusterCrossClusterReplicationConfigMembershipPrimaryClusterOutput values.
// You can construct a concrete instance of `GetClusterCrossClusterReplicationConfigMembershipPrimaryClusterInput` via:
//
//	GetClusterCrossClusterReplicationConfigMembershipPrimaryClusterArgs{...}
type GetClusterCrossClusterReplicationConfigMembershipPrimaryClusterInput interface {
	pulumi.Input

	ToGetClusterCrossClusterReplicationConfigMembershipPrimaryClusterOutput() GetClusterCrossClusterReplicationConfigMembershipPrimaryClusterOutput
	ToGetClusterCrossClusterReplicationConfigMembershipPrimaryClusterOutputWithContext(context.Context) GetClusterCrossClusterReplicationConfigMembershipPrimaryClusterOutput
}

type GetClusterCrossClusterReplicationConfigMembershipPrimaryClusterArgs struct {
	// The full resource path of the primary cluster in the format: projects/{project}/locations/{region}/clusters/{cluster-id}
	Cluster pulumi.StringInput `pulumi:"cluster"`
	// The unique id of the primary cluster.
	Uid pulumi.StringInput `pulumi:"uid"`
}

func (GetClusterCrossClusterReplicationConfigMembershipPrimaryClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterCrossClusterReplicationConfigMembershipPrimaryCluster)(nil)).Elem()
}

func (i GetClusterCrossClusterReplicationConfigMembershipPrimaryClusterArgs) ToGetClusterCrossClusterReplicationConfigMembershipPrimaryClusterOutput() GetClusterCrossClusterReplicationConfigMembershipPrimaryClusterOutput {
	return i.ToGetClusterCrossClusterReplicationConfigMembershipPrimaryClusterOutputWithContext(context.Background())
}

func (i GetClusterCrossClusterReplicationConfigMembershipPrimaryClusterArgs) ToGetClusterCrossClusterReplicationConfigMembershipPrimaryClusterOutputWithContext(ctx context.Context) GetClusterCrossClusterReplicationConfigMembershipPrimaryClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterCrossClusterReplicationConfigMembershipPrimaryClusterOutput)
}

// GetClusterCrossClusterReplicationConfigMembershipPrimaryClusterArrayInput is an input type that accepts GetClusterCrossClusterReplicationConfigMembershipPrimaryClusterArray and GetClusterCrossClusterReplicationConfigMembershipPrimaryClusterArrayOutput values.
// You can construct a concrete instance of `GetClusterCrossClusterReplicationConfigMembershipPrimaryClusterArrayInput` via:
//
//	GetClusterCrossClusterReplicationConfigMembershipPrimaryClusterArray{ GetClusterCrossClusterReplicationConfigMembershipPrimaryClusterArgs{...} }
type GetClusterCrossClusterReplicationConfigMembershipPrimaryClusterArrayInput interface {
	pulumi.Input

	ToGetClusterCrossClusterReplicationConfigMembershipPrimaryClusterArrayOutput() GetClusterCrossClusterReplicationConfigMembershipPrimaryClusterArrayOutput
	ToGetClusterCrossClusterReplicationConfigMembershipPrimaryClusterArrayOutputWithContext(context.Context) GetClusterCrossClusterReplicationConfigMembershipPrimaryClusterArrayOutput
}

type GetClusterCrossClusterReplicationConfigMembershipPrimaryClusterArray []GetClusterCrossClusterReplicationConfigMembershipPrimaryClusterInput

func (GetClusterCrossClusterReplicationConfigMembershipPrimaryClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterCrossClusterReplicationConfigMembershipPrimaryCluster)(nil)).Elem()
}

func (i GetClusterCrossClusterReplicationConfigMembershipPrimaryClusterArray) ToGetClusterCrossClusterReplicationConfigMembershipPrimaryClusterArrayOutput() GetClusterCrossClusterReplicationConfigMembershipPrimaryClusterArrayOutput {
	return i.ToGetClusterCrossClusterReplicationConfigMembershipPrimaryClusterArrayOutputWithContext(context.Background())
}

func (i GetClusterCrossClusterReplicationConfigMembershipPrimaryClusterArray) ToGetClusterCrossClusterReplicationConfigMembershipPrimaryClusterArrayOutputWithContext(ctx context.Context) GetClusterCrossClusterReplicationConfigMembershipPrimaryClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterCrossClusterReplicationConfigMembershipPrimaryClusterArrayOutput)
}

type GetClusterCrossClusterReplicationConfigMembershipPrimaryClusterOutput struct{ *pulumi.OutputState }

func (GetClusterCrossClusterReplicationConfigMembershipPrimaryClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterCrossClusterReplicationConfigMembershipPrimaryCluster)(nil)).Elem()
}

func (o GetClusterCrossClusterReplicationConfigMembershipPrimaryClusterOutput) ToGetClusterCrossClusterReplicationConfigMembershipPrimaryClusterOutput() GetClusterCrossClusterReplicationConfigMembershipPrimaryClusterOutput {
	return o
}

func (o GetClusterCrossClusterReplicationConfigMembershipPrimaryClusterOutput) ToGetClusterCrossClusterReplicationConfigMembershipPrimaryClusterOutputWithContext(ctx context.Context) GetClusterCrossClusterReplicationConfigMembershipPrimaryClusterOutput {
	return o
}

// The full resource path of the primary cluster in the format: projects/{project}/locations/{region}/clusters/{cluster-id}
func (o GetClusterCrossClusterReplicationConfigMembershipPrimaryClusterOutput) Cluster() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterCrossClusterReplicationConfigMembershipPrimaryCluster) string { return v.Cluster }).(pulumi.StringOutput)
}

// The unique id of the primary cluster.
func (o GetClusterCrossClusterReplicationConfigMembershipPrimaryClusterOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterCrossClusterReplicationConfigMembershipPrimaryCluster) string { return v.Uid }).(pulumi.StringOutput)
}

type GetClusterCrossClusterReplicationConfigMembershipPrimaryClusterArrayOutput struct{ *pulumi.OutputState }

func (GetClusterCrossClusterReplicationConfigMembershipPrimaryClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterCrossClusterReplicationConfigMembershipPrimaryCluster)(nil)).Elem()
}

func (o GetClusterCrossClusterReplicationConfigMembershipPrimaryClusterArrayOutput) ToGetClusterCrossClusterReplicationConfigMembershipPrimaryClusterArrayOutput() GetClusterCrossClusterReplicationConfigMembershipPrimaryClusterArrayOutput {
	return o
}

func (o GetClusterCrossClusterReplicationConfigMembershipPrimaryClusterArrayOutput) ToGetClusterCrossClusterReplicationConfigMembershipPrimaryClusterArrayOutputWithContext(ctx context.Context) GetClusterCrossClusterReplicationConfigMembershipPrimaryClusterArrayOutput {
	return o
}

func (o GetClusterCrossClusterReplicationConfigMembershipPrimaryClusterArrayOutput) Index(i pulumi.IntInput) GetClusterCrossClusterReplicationConfigMembershipPrimaryClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterCrossClusterReplicationConfigMembershipPrimaryCluster {
		return vs[0].([]GetClusterCrossClusterReplicationConfigMembershipPrimaryCluster)[vs[1].(int)]
	}).(GetClusterCrossClusterReplicationConfigMembershipPrimaryClusterOutput)
}

type GetClusterCrossClusterReplicationConfigMembershipSecondaryCluster struct {
	// The full resource path of the secondary cluster in the format: projects/{project}/locations/{region}/clusters/{cluster-id}
	Cluster string `pulumi:"cluster"`
	// The unique id of the secondary cluster.
	Uid string `pulumi:"uid"`
}

// GetClusterCrossClusterReplicationConfigMembershipSecondaryClusterInput is an input type that accepts GetClusterCrossClusterReplicationConfigMembershipSecondaryClusterArgs and GetClusterCrossClusterReplicationConfigMembershipSecondaryClusterOutput values.
// You can construct a concrete instance of `GetClusterCrossClusterReplicationConfigMembershipSecondaryClusterInput` via:
//
//	GetClusterCrossClusterReplicationConfigMembershipSecondaryClusterArgs{...}
type GetClusterCrossClusterReplicationConfigMembershipSecondaryClusterInput interface {
	pulumi.Input

	ToGetClusterCrossClusterReplicationConfigMembershipSecondaryClusterOutput() GetClusterCrossClusterReplicationConfigMembershipSecondaryClusterOutput
	ToGetClusterCrossClusterReplicationConfigMembershipSecondaryClusterOutputWithContext(context.Context) GetClusterCrossClusterReplicationConfigMembershipSecondaryClusterOutput
}

type GetClusterCrossClusterReplicationConfigMembershipSecondaryClusterArgs struct {
	// The full resource path of the secondary cluster in the format: projects/{project}/locations/{region}/clusters/{cluster-id}
	Cluster pulumi.StringInput `pulumi:"cluster"`
	// The unique id of the secondary cluster.
	Uid pulumi.StringInput `pulumi:"uid"`
}

func (GetClusterCrossClusterReplicationConfigMembershipSecondaryClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterCrossClusterReplicationConfigMembershipSecondaryCluster)(nil)).Elem()
}

func (i GetClusterCrossClusterReplicationConfigMembershipSecondaryClusterArgs) ToGetClusterCrossClusterReplicationConfigMembershipSecondaryClusterOutput() GetClusterCrossClusterReplicationConfigMembershipSecondaryClusterOutput {
	return i.ToGetClusterCrossClusterReplicationConfigMembershipSecondaryClusterOutputWithContext(context.Background())
}

func (i GetClusterCrossClusterReplicationConfigMembershipSecondaryClusterArgs) ToGetClusterCrossClusterReplicationConfigMembershipSecondaryClusterOutputWithContext(ctx context.Context) GetClusterCrossClusterReplicationConfigMembershipSecondaryClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterCrossClusterReplicationConfigMembershipSecondaryClusterOutput)
}

// GetClusterCrossClusterReplicationConfigMembershipSecondaryClusterArrayInput is an input type that accepts GetClusterCrossClusterReplicationConfigMembershipSecondaryClusterArray and GetClusterCrossClusterReplicationConfigMembershipSecondaryClusterArrayOutput values.
// You can construct a concrete instance of `GetClusterCrossClusterReplicationConfigMembershipSecondaryClusterArrayInput` via:
//
//	GetClusterCrossClusterReplicationConfigMembershipSecondaryClusterArray{ GetClusterCrossClusterReplicationConfigMembershipSecondaryClusterArgs{...} }
type GetClusterCrossClusterReplicationConfigMembershipSecondaryClusterArrayInput interface {
	pulumi.Input

	ToGetClusterCrossClusterReplicationConfigMembershipSecondaryClusterArrayOutput() GetClusterCrossClusterReplicationConfigMembershipSecondaryClusterArrayOutput
	ToGetClusterCrossClusterReplicationConfigMembershipSecondaryClusterArrayOutputWithContext(context.Context) GetClusterCrossClusterReplicationConfigMembershipSecondaryClusterArrayOutput
}

type GetClusterCrossClusterReplicationConfigMembershipSecondaryClusterArray []GetClusterCrossClusterReplicationConfigMembershipSecondaryClusterInput

func (GetClusterCrossClusterReplicationConfigMembershipSecondaryClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterCrossClusterReplicationConfigMembershipSecondaryCluster)(nil)).Elem()
}

func (i GetClusterCrossClusterReplicationConfigMembershipSecondaryClusterArray) ToGetClusterCrossClusterReplicationConfigMembershipSecondaryClusterArrayOutput() GetClusterCrossClusterReplicationConfigMembershipSecondaryClusterArrayOutput {
	return i.ToGetClusterCrossClusterReplicationConfigMembershipSecondaryClusterArrayOutputWithContext(context.Background())
}

func (i GetClusterCrossClusterReplicationConfigMembershipSecondaryClusterArray) ToGetClusterCrossClusterReplicationConfigMembershipSecondaryClusterArrayOutputWithContext(ctx context.Context) GetClusterCrossClusterReplicationConfigMembershipSecondaryClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterCrossClusterReplicationConfigMembershipSecondaryClusterArrayOutput)
}

type GetClusterCrossClusterReplicationConfigMembershipSecondaryClusterOutput struct{ *pulumi.OutputState }

func (GetClusterCrossClusterReplicationConfigMembershipSecondaryClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterCrossClusterReplicationConfigMembershipSecondaryCluster)(nil)).Elem()
}

func (o GetClusterCrossClusterReplicationConfigMembershipSecondaryClusterOutput) ToGetClusterCrossClusterReplicationConfigMembershipSecondaryClusterOutput() GetClusterCrossClusterReplicationConfigMembershipSecondaryClusterOutput {
	return o
}

func (o GetClusterCrossClusterReplicationConfigMembershipSecondaryClusterOutput) ToGetClusterCrossClusterReplicationConfigMembershipSecondaryClusterOutputWithContext(ctx context.Context) GetClusterCrossClusterReplicationConfigMembershipSecondaryClusterOutput {
	return o
}

// The full resource path of the secondary cluster in the format: projects/{project}/locations/{region}/clusters/{cluster-id}
func (o GetClusterCrossClusterReplicationConfigMembershipSecondaryClusterOutput) Cluster() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterCrossClusterReplicationConfigMembershipSecondaryCluster) string { return v.Cluster }).(pulumi.StringOutput)
}

// The unique id of the secondary cluster.
func (o GetClusterCrossClusterReplicationConfigMembershipSecondaryClusterOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterCrossClusterReplicationConfigMembershipSecondaryCluster) string { return v.Uid }).(pulumi.StringOutput)
}

type GetClusterCrossClusterReplicationConfigMembershipSecondaryClusterArrayOutput struct{ *pulumi.OutputState }

func (GetClusterCrossClusterReplicationConfigMembershipSecondaryClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterCrossClusterReplicationConfigMembershipSecondaryCluster)(nil)).Elem()
}

func (o GetClusterCrossClusterReplicationConfigMembershipSecondaryClusterArrayOutput) ToGetClusterCrossClusterReplicationConfigMembershipSecondaryClusterArrayOutput() GetClusterCrossClusterReplicationConfigMembershipSecondaryClusterArrayOutput {
	return o
}

func (o GetClusterCrossClusterReplicationConfigMembershipSecondaryClusterArrayOutput) ToGetClusterCrossClusterReplicationConfigMembershipSecondaryClusterArrayOutputWithContext(ctx context.Context) GetClusterCrossClusterReplicationConfigMembershipSecondaryClusterArrayOutput {
	return o
}

func (o GetClusterCrossClusterReplicationConfigMembershipSecondaryClusterArrayOutput) Index(i pulumi.IntInput) GetClusterCrossClusterReplicationConfigMembershipSecondaryClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterCrossClusterReplicationConfigMembershipSecondaryCluster {
		return vs[0].([]GetClusterCrossClusterReplicationConfigMembershipSecondaryCluster)[vs[1].(int)]
	}).(GetClusterCrossClusterReplicationConfigMembershipSecondaryClusterOutput)
}

type GetClusterCrossClusterReplicationConfigPrimaryCluster struct {
	// The full resource path of the primary cluster in the format: projects/{project}/locations/{region}/clusters/{cluster-id}
	Cluster string `pulumi:"cluster"`
	// The unique id of the primary cluster.
	Uid string `pulumi:"uid"`
}

// GetClusterCrossClusterReplicationConfigPrimaryClusterInput is an input type that accepts GetClusterCrossClusterReplicationConfigPrimaryClusterArgs and GetClusterCrossClusterReplicationConfigPrimaryClusterOutput values.
// You can construct a concrete instance of `GetClusterCrossClusterReplicationConfigPrimaryClusterInput` via:
//
//	GetClusterCrossClusterReplicationConfigPrimaryClusterArgs{...}
type GetClusterCrossClusterReplicationConfigPrimaryClusterInput interface {
	pulumi.Input

	ToGetClusterCrossClusterReplicationConfigPrimaryClusterOutput() GetClusterCrossClusterReplicationConfigPrimaryClusterOutput
	ToGetClusterCrossClusterReplicationConfigPrimaryClusterOutputWithContext(context.Context) GetClusterCrossClusterReplicationConfigPrimaryClusterOutput
}

type GetClusterCrossClusterReplicationConfigPrimaryClusterArgs struct {
	// The full resource path of the primary cluster in the format: projects/{project}/locations/{region}/clusters/{cluster-id}
	Cluster pulumi.StringInput `pulumi:"cluster"`
	// The unique id of the primary cluster.
	Uid pulumi.StringInput `pulumi:"uid"`
}

func (GetClusterCrossClusterReplicationConfigPrimaryClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterCrossClusterReplicationConfigPrimaryCluster)(nil)).Elem()
}

func (i GetClusterCrossClusterReplicationConfigPrimaryClusterArgs) ToGetClusterCrossClusterReplicationConfigPrimaryClusterOutput() GetClusterCrossClusterReplicationConfigPrimaryClusterOutput {
	return i.ToGetClusterCrossClusterReplicationConfigPrimaryClusterOutputWithContext(context.Background())
}

func (i GetClusterCrossClusterReplicationConfigPrimaryClusterArgs) ToGetClusterCrossClusterReplicationConfigPrimaryClusterOutputWithContext(ctx context.Context) GetClusterCrossClusterReplicationConfigPrimaryClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterCrossClusterReplicationConfigPrimaryClusterOutput)
}

// GetClusterCrossClusterReplicationConfigPrimaryClusterArrayInput is an input type that accepts GetClusterCrossClusterReplicationConfigPrimaryClusterArray and GetClusterCrossClusterReplicationConfigPrimaryClusterArrayOutput values.
// You can construct a concrete instance of `GetClusterCrossClusterReplicationConfigPrimaryClusterArrayInput` via:
//
//	GetClusterCrossClusterReplicationConfigPrimaryClusterArray{ GetClusterCrossClusterReplicationConfigPrimaryClusterArgs{...} }
type GetClusterCrossClusterReplicationConfigPrimaryClusterArrayInput interface {
	pulumi.Input

	ToGetClusterCrossClusterReplicationConfigPrimaryClusterArrayOutput() GetClusterCrossClusterReplicationConfigPrimaryClusterArrayOutput
	ToGetClusterCrossClusterReplicationConfigPrimaryClusterArrayOutputWithContext(context.Context) GetClusterCrossClusterReplicationConfigPrimaryClusterArrayOutput
}

type GetClusterCrossClusterReplicationConfigPrimaryClusterArray []GetClusterCrossClusterReplicationConfigPrimaryClusterInput

func (GetClusterCrossClusterReplicationConfigPrimaryClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterCrossClusterReplicationConfigPrimaryCluster)(nil)).Elem()
}

func (i GetClusterCrossClusterReplicationConfigPrimaryClusterArray) ToGetClusterCrossClusterReplicationConfigPrimaryClusterArrayOutput() GetClusterCrossClusterReplicationConfigPrimaryClusterArrayOutput {
	return i.ToGetClusterCrossClusterReplicationConfigPrimaryClusterArrayOutputWithContext(context.Background())
}

func (i GetClusterCrossClusterReplicationConfigPrimaryClusterArray) ToGetClusterCrossClusterReplicationConfigPrimaryClusterArrayOutputWithContext(ctx context.Context) GetClusterCrossClusterReplicationConfigPrimaryClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterCrossClusterReplicationConfigPrimaryClusterArrayOutput)
}

type GetClusterCrossClusterReplicationConfigPrimaryClusterOutput struct{ *pulumi.OutputState }

func (GetClusterCrossClusterReplicationConfigPrimaryClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterCrossClusterReplicationConfigPrimaryCluster)(nil)).Elem()
}

func (o GetClusterCrossClusterReplicationConfigPrimaryClusterOutput) ToGetClusterCrossClusterReplicationConfigPrimaryClusterOutput() GetClusterCrossClusterReplicationConfigPrimaryClusterOutput {
	return o
}

func (o GetClusterCrossClusterReplicationConfigPrimaryClusterOutput) ToGetClusterCrossClusterReplicationConfigPrimaryClusterOutputWithContext(ctx context.Context) GetClusterCrossClusterReplicationConfigPrimaryClusterOutput {
	return o
}

// The full resource path of the primary cluster in the format: projects/{project}/locations/{region}/clusters/{cluster-id}
func (o GetClusterCrossClusterReplicationConfigPrimaryClusterOutput) Cluster() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterCrossClusterReplicationConfigPrimaryCluster) string { return v.Cluster }).(pulumi.StringOutput)
}

// The unique id of the primary cluster.
func (o GetClusterCrossClusterReplicationConfigPrimaryClusterOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterCrossClusterReplicationConfigPrimaryCluster) string { return v.Uid }).(pulumi.StringOutput)
}

type GetClusterCrossClusterReplicationConfigPrimaryClusterArrayOutput struct{ *pulumi.OutputState }

func (GetClusterCrossClusterReplicationConfigPrimaryClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterCrossClusterReplicationConfigPrimaryCluster)(nil)).Elem()
}

func (o GetClusterCrossClusterReplicationConfigPrimaryClusterArrayOutput) ToGetClusterCrossClusterReplicationConfigPrimaryClusterArrayOutput() GetClusterCrossClusterReplicationConfigPrimaryClusterArrayOutput {
	return o
}

func (o GetClusterCrossClusterReplicationConfigPrimaryClusterArrayOutput) ToGetClusterCrossClusterReplicationConfigPrimaryClusterArrayOutputWithContext(ctx context.Context) GetClusterCrossClusterReplicationConfigPrimaryClusterArrayOutput {
	return o
}

func (o GetClusterCrossClusterReplicationConfigPrimaryClusterArrayOutput) Index(i pulumi.IntInput) GetClusterCrossClusterReplicationConfigPrimaryClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterCrossClusterReplicationConfigPrimaryCluster {
		return vs[0].([]GetClusterCrossClusterReplicationConfigPrimaryCluster)[vs[1].(int)]
	}).(GetClusterCrossClusterReplicationConfigPrimaryClusterOutput)
}

type GetClusterCrossClusterReplicationConfigSecondaryCluster struct {
	// The full resource path of the secondary cluster in the format: projects/{project}/locations/{region}/clusters/{cluster-id}
	Cluster string `pulumi:"cluster"`
	// The unique id of the secondary cluster.
	Uid string `pulumi:"uid"`
}

// GetClusterCrossClusterReplicationConfigSecondaryClusterInput is an input type that accepts GetClusterCrossClusterReplicationConfigSecondaryClusterArgs and GetClusterCrossClusterReplicationConfigSecondaryClusterOutput values.
// You can construct a concrete instance of `GetClusterCrossClusterReplicationConfigSecondaryClusterInput` via:
//
//	GetClusterCrossClusterReplicationConfigSecondaryClusterArgs{...}
type GetClusterCrossClusterReplicationConfigSecondaryClusterInput interface {
	pulumi.Input

	ToGetClusterCrossClusterReplicationConfigSecondaryClusterOutput() GetClusterCrossClusterReplicationConfigSecondaryClusterOutput
	ToGetClusterCrossClusterReplicationConfigSecondaryClusterOutputWithContext(context.Context) GetClusterCrossClusterReplicationConfigSecondaryClusterOutput
}

type GetClusterCrossClusterReplicationConfigSecondaryClusterArgs struct {
	// The full resource path of the secondary cluster in the format: projects/{project}/locations/{region}/clusters/{cluster-id}
	Cluster pulumi.StringInput `pulumi:"cluster"`
	// The unique id of the secondary cluster.
	Uid pulumi.StringInput `pulumi:"uid"`
}

func (GetClusterCrossClusterReplicationConfigSecondaryClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterCrossClusterReplicationConfigSecondaryCluster)(nil)).Elem()
}

func (i GetClusterCrossClusterReplicationConfigSecondaryClusterArgs) ToGetClusterCrossClusterReplicationConfigSecondaryClusterOutput() GetClusterCrossClusterReplicationConfigSecondaryClusterOutput {
	return i.ToGetClusterCrossClusterReplicationConfigSecondaryClusterOutputWithContext(context.Background())
}

func (i GetClusterCrossClusterReplicationConfigSecondaryClusterArgs) ToGetClusterCrossClusterReplicationConfigSecondaryClusterOutputWithContext(ctx context.Context) GetClusterCrossClusterReplicationConfigSecondaryClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterCrossClusterReplicationConfigSecondaryClusterOutput)
}

// GetClusterCrossClusterReplicationConfigSecondaryClusterArrayInput is an input type that accepts GetClusterCrossClusterReplicationConfigSecondaryClusterArray and GetClusterCrossClusterReplicationConfigSecondaryClusterArrayOutput values.
// You can construct a concrete instance of `GetClusterCrossClusterReplicationConfigSecondaryClusterArrayInput` via:
//
//	GetClusterCrossClusterReplicationConfigSecondaryClusterArray{ GetClusterCrossClusterReplicationConfigSecondaryClusterArgs{...} }
type GetClusterCrossClusterReplicationConfigSecondaryClusterArrayInput interface {
	pulumi.Input

	ToGetClusterCrossClusterReplicationConfigSecondaryClusterArrayOutput() GetClusterCrossClusterReplicationConfigSecondaryClusterArrayOutput
	ToGetClusterCrossClusterReplicationConfigSecondaryClusterArrayOutputWithContext(context.Context) GetClusterCrossClusterReplicationConfigSecondaryClusterArrayOutput
}

type GetClusterCrossClusterReplicationConfigSecondaryClusterArray []GetClusterCrossClusterReplicationConfigSecondaryClusterInput

func (GetClusterCrossClusterReplicationConfigSecondaryClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterCrossClusterReplicationConfigSecondaryCluster)(nil)).Elem()
}

func (i GetClusterCrossClusterReplicationConfigSecondaryClusterArray) ToGetClusterCrossClusterReplicationConfigSecondaryClusterArrayOutput() GetClusterCrossClusterReplicationConfigSecondaryClusterArrayOutput {
	return i.ToGetClusterCrossClusterReplicationConfigSecondaryClusterArrayOutputWithContext(context.Background())
}

func (i GetClusterCrossClusterReplicationConfigSecondaryClusterArray) ToGetClusterCrossClusterReplicationConfigSecondaryClusterArrayOutputWithContext(ctx context.Context) GetClusterCrossClusterReplicationConfigSecondaryClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterCrossClusterReplicationConfigSecondaryClusterArrayOutput)
}

type GetClusterCrossClusterReplicationConfigSecondaryClusterOutput struct{ *pulumi.OutputState }

func (GetClusterCrossClusterReplicationConfigSecondaryClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterCrossClusterReplicationConfigSecondaryCluster)(nil)).Elem()
}

func (o GetClusterCrossClusterReplicationConfigSecondaryClusterOutput) ToGetClusterCrossClusterReplicationConfigSecondaryClusterOutput() GetClusterCrossClusterReplicationConfigSecondaryClusterOutput {
	return o
}

func (o GetClusterCrossClusterReplicationConfigSecondaryClusterOutput) ToGetClusterCrossClusterReplicationConfigSecondaryClusterOutputWithContext(ctx context.Context) GetClusterCrossClusterReplicationConfigSecondaryClusterOutput {
	return o
}

// The full resource path of the secondary cluster in the format: projects/{project}/locations/{region}/clusters/{cluster-id}
func (o GetClusterCrossClusterReplicationConfigSecondaryClusterOutput) Cluster() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterCrossClusterReplicationConfigSecondaryCluster) string { return v.Cluster }).(pulumi.StringOutput)
}

// The unique id of the secondary cluster.
func (o GetClusterCrossClusterReplicationConfigSecondaryClusterOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterCrossClusterReplicationConfigSecondaryCluster) string { return v.Uid }).(pulumi.StringOutput)
}

type GetClusterCrossClusterReplicationConfigSecondaryClusterArrayOutput struct{ *pulumi.OutputState }

func (GetClusterCrossClusterReplicationConfigSecondaryClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterCrossClusterReplicationConfigSecondaryCluster)(nil)).Elem()
}

func (o GetClusterCrossClusterReplicationConfigSecondaryClusterArrayOutput) ToGetClusterCrossClusterReplicationConfigSecondaryClusterArrayOutput() GetClusterCrossClusterReplicationConfigSecondaryClusterArrayOutput {
	return o
}

func (o GetClusterCrossClusterReplicationConfigSecondaryClusterArrayOutput) ToGetClusterCrossClusterReplicationConfigSecondaryClusterArrayOutputWithContext(ctx context.Context) GetClusterCrossClusterReplicationConfigSecondaryClusterArrayOutput {
	return o
}

func (o GetClusterCrossClusterReplicationConfigSecondaryClusterArrayOutput) Index(i pulumi.IntInput) GetClusterCrossClusterReplicationConfigSecondaryClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterCrossClusterReplicationConfigSecondaryCluster {
		return vs[0].([]GetClusterCrossClusterReplicationConfigSecondaryCluster)[vs[1].(int)]
	}).(GetClusterCrossClusterReplicationConfigSecondaryClusterOutput)
}

type GetClusterDiscoveryEndpoint struct {
	// Output only. Network address of the exposed Redis endpoint used by clients to connect to the service.
	Address string `pulumi:"address"`
	// Output only. The port number of the exposed Redis endpoint.
	Port int `pulumi:"port"`
	// Output only. Customer configuration for where the endpoint
	// is created and accessed from.
	PscConfigs []GetClusterDiscoveryEndpointPscConfig `pulumi:"pscConfigs"`
}

// GetClusterDiscoveryEndpointInput is an input type that accepts GetClusterDiscoveryEndpointArgs and GetClusterDiscoveryEndpointOutput values.
// You can construct a concrete instance of `GetClusterDiscoveryEndpointInput` via:
//
//	GetClusterDiscoveryEndpointArgs{...}
type GetClusterDiscoveryEndpointInput interface {
	pulumi.Input

	ToGetClusterDiscoveryEndpointOutput() GetClusterDiscoveryEndpointOutput
	ToGetClusterDiscoveryEndpointOutputWithContext(context.Context) GetClusterDiscoveryEndpointOutput
}

type GetClusterDiscoveryEndpointArgs struct {
	// Output only. Network address of the exposed Redis endpoint used by clients to connect to the service.
	Address pulumi.StringInput `pulumi:"address"`
	// Output only. The port number of the exposed Redis endpoint.
	Port pulumi.IntInput `pulumi:"port"`
	// Output only. Customer configuration for where the endpoint
	// is created and accessed from.
	PscConfigs GetClusterDiscoveryEndpointPscConfigArrayInput `pulumi:"pscConfigs"`
}

func (GetClusterDiscoveryEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterDiscoveryEndpoint)(nil)).Elem()
}

func (i GetClusterDiscoveryEndpointArgs) ToGetClusterDiscoveryEndpointOutput() GetClusterDiscoveryEndpointOutput {
	return i.ToGetClusterDiscoveryEndpointOutputWithContext(context.Background())
}

func (i GetClusterDiscoveryEndpointArgs) ToGetClusterDiscoveryEndpointOutputWithContext(ctx context.Context) GetClusterDiscoveryEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterDiscoveryEndpointOutput)
}

// GetClusterDiscoveryEndpointArrayInput is an input type that accepts GetClusterDiscoveryEndpointArray and GetClusterDiscoveryEndpointArrayOutput values.
// You can construct a concrete instance of `GetClusterDiscoveryEndpointArrayInput` via:
//
//	GetClusterDiscoveryEndpointArray{ GetClusterDiscoveryEndpointArgs{...} }
type GetClusterDiscoveryEndpointArrayInput interface {
	pulumi.Input

	ToGetClusterDiscoveryEndpointArrayOutput() GetClusterDiscoveryEndpointArrayOutput
	ToGetClusterDiscoveryEndpointArrayOutputWithContext(context.Context) GetClusterDiscoveryEndpointArrayOutput
}

type GetClusterDiscoveryEndpointArray []GetClusterDiscoveryEndpointInput

func (GetClusterDiscoveryEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterDiscoveryEndpoint)(nil)).Elem()
}

func (i GetClusterDiscoveryEndpointArray) ToGetClusterDiscoveryEndpointArrayOutput() GetClusterDiscoveryEndpointArrayOutput {
	return i.ToGetClusterDiscoveryEndpointArrayOutputWithContext(context.Background())
}

func (i GetClusterDiscoveryEndpointArray) ToGetClusterDiscoveryEndpointArrayOutputWithContext(ctx context.Context) GetClusterDiscoveryEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterDiscoveryEndpointArrayOutput)
}

type GetClusterDiscoveryEndpointOutput struct{ *pulumi.OutputState }

func (GetClusterDiscoveryEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterDiscoveryEndpoint)(nil)).Elem()
}

func (o GetClusterDiscoveryEndpointOutput) ToGetClusterDiscoveryEndpointOutput() GetClusterDiscoveryEndpointOutput {
	return o
}

func (o GetClusterDiscoveryEndpointOutput) ToGetClusterDiscoveryEndpointOutputWithContext(ctx context.Context) GetClusterDiscoveryEndpointOutput {
	return o
}

// Output only. Network address of the exposed Redis endpoint used by clients to connect to the service.
func (o GetClusterDiscoveryEndpointOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterDiscoveryEndpoint) string { return v.Address }).(pulumi.StringOutput)
}

// Output only. The port number of the exposed Redis endpoint.
func (o GetClusterDiscoveryEndpointOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterDiscoveryEndpoint) int { return v.Port }).(pulumi.IntOutput)
}

// Output only. Customer configuration for where the endpoint
// is created and accessed from.
func (o GetClusterDiscoveryEndpointOutput) PscConfigs() GetClusterDiscoveryEndpointPscConfigArrayOutput {
	return o.ApplyT(func(v GetClusterDiscoveryEndpoint) []GetClusterDiscoveryEndpointPscConfig { return v.PscConfigs }).(GetClusterDiscoveryEndpointPscConfigArrayOutput)
}

type GetClusterDiscoveryEndpointArrayOutput struct{ *pulumi.OutputState }

func (GetClusterDiscoveryEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterDiscoveryEndpoint)(nil)).Elem()
}

func (o GetClusterDiscoveryEndpointArrayOutput) ToGetClusterDiscoveryEndpointArrayOutput() GetClusterDiscoveryEndpointArrayOutput {
	return o
}

func (o GetClusterDiscoveryEndpointArrayOutput) ToGetClusterDiscoveryEndpointArrayOutputWithContext(ctx context.Context) GetClusterDiscoveryEndpointArrayOutput {
	return o
}

func (o GetClusterDiscoveryEndpointArrayOutput) Index(i pulumi.IntInput) GetClusterDiscoveryEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterDiscoveryEndpoint {
		return vs[0].([]GetClusterDiscoveryEndpoint)[vs[1].(int)]
	}).(GetClusterDiscoveryEndpointOutput)
}

type GetClusterDiscoveryEndpointPscConfig struct {
	// The consumer network where the network address of the discovery
	// endpoint will be reserved, in the form of
	// projects/{network_project_id}/global/networks/{network_id}.
	Network string `pulumi:"network"`
}

// GetClusterDiscoveryEndpointPscConfigInput is an input type that accepts GetClusterDiscoveryEndpointPscConfigArgs and GetClusterDiscoveryEndpointPscConfigOutput values.
// You can construct a concrete instance of `GetClusterDiscoveryEndpointPscConfigInput` via:
//
//	GetClusterDiscoveryEndpointPscConfigArgs{...}
type GetClusterDiscoveryEndpointPscConfigInput interface {
	pulumi.Input

	ToGetClusterDiscoveryEndpointPscConfigOutput() GetClusterDiscoveryEndpointPscConfigOutput
	ToGetClusterDiscoveryEndpointPscConfigOutputWithContext(context.Context) GetClusterDiscoveryEndpointPscConfigOutput
}

type GetClusterDiscoveryEndpointPscConfigArgs struct {
	// The consumer network where the network address of the discovery
	// endpoint will be reserved, in the form of
	// projects/{network_project_id}/global/networks/{network_id}.
	Network pulumi.StringInput `pulumi:"network"`
}

func (GetClusterDiscoveryEndpointPscConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterDiscoveryEndpointPscConfig)(nil)).Elem()
}

func (i GetClusterDiscoveryEndpointPscConfigArgs) ToGetClusterDiscoveryEndpointPscConfigOutput() GetClusterDiscoveryEndpointPscConfigOutput {
	return i.ToGetClusterDiscoveryEndpointPscConfigOutputWithContext(context.Background())
}

func (i GetClusterDiscoveryEndpointPscConfigArgs) ToGetClusterDiscoveryEndpointPscConfigOutputWithContext(ctx context.Context) GetClusterDiscoveryEndpointPscConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterDiscoveryEndpointPscConfigOutput)
}

// GetClusterDiscoveryEndpointPscConfigArrayInput is an input type that accepts GetClusterDiscoveryEndpointPscConfigArray and GetClusterDiscoveryEndpointPscConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterDiscoveryEndpointPscConfigArrayInput` via:
//
//	GetClusterDiscoveryEndpointPscConfigArray{ GetClusterDiscoveryEndpointPscConfigArgs{...} }
type GetClusterDiscoveryEndpointPscConfigArrayInput interface {
	pulumi.Input

	ToGetClusterDiscoveryEndpointPscConfigArrayOutput() GetClusterDiscoveryEndpointPscConfigArrayOutput
	ToGetClusterDiscoveryEndpointPscConfigArrayOutputWithContext(context.Context) GetClusterDiscoveryEndpointPscConfigArrayOutput
}

type GetClusterDiscoveryEndpointPscConfigArray []GetClusterDiscoveryEndpointPscConfigInput

func (GetClusterDiscoveryEndpointPscConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterDiscoveryEndpointPscConfig)(nil)).Elem()
}

func (i GetClusterDiscoveryEndpointPscConfigArray) ToGetClusterDiscoveryEndpointPscConfigArrayOutput() GetClusterDiscoveryEndpointPscConfigArrayOutput {
	return i.ToGetClusterDiscoveryEndpointPscConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterDiscoveryEndpointPscConfigArray) ToGetClusterDiscoveryEndpointPscConfigArrayOutputWithContext(ctx context.Context) GetClusterDiscoveryEndpointPscConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterDiscoveryEndpointPscConfigArrayOutput)
}

type GetClusterDiscoveryEndpointPscConfigOutput struct{ *pulumi.OutputState }

func (GetClusterDiscoveryEndpointPscConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterDiscoveryEndpointPscConfig)(nil)).Elem()
}

func (o GetClusterDiscoveryEndpointPscConfigOutput) ToGetClusterDiscoveryEndpointPscConfigOutput() GetClusterDiscoveryEndpointPscConfigOutput {
	return o
}

func (o GetClusterDiscoveryEndpointPscConfigOutput) ToGetClusterDiscoveryEndpointPscConfigOutputWithContext(ctx context.Context) GetClusterDiscoveryEndpointPscConfigOutput {
	return o
}

// The consumer network where the network address of the discovery
// endpoint will be reserved, in the form of
// projects/{network_project_id}/global/networks/{network_id}.
func (o GetClusterDiscoveryEndpointPscConfigOutput) Network() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterDiscoveryEndpointPscConfig) string { return v.Network }).(pulumi.StringOutput)
}

type GetClusterDiscoveryEndpointPscConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterDiscoveryEndpointPscConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterDiscoveryEndpointPscConfig)(nil)).Elem()
}

func (o GetClusterDiscoveryEndpointPscConfigArrayOutput) ToGetClusterDiscoveryEndpointPscConfigArrayOutput() GetClusterDiscoveryEndpointPscConfigArrayOutput {
	return o
}

func (o GetClusterDiscoveryEndpointPscConfigArrayOutput) ToGetClusterDiscoveryEndpointPscConfigArrayOutputWithContext(ctx context.Context) GetClusterDiscoveryEndpointPscConfigArrayOutput {
	return o
}

func (o GetClusterDiscoveryEndpointPscConfigArrayOutput) Index(i pulumi.IntInput) GetClusterDiscoveryEndpointPscConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterDiscoveryEndpointPscConfig {
		return vs[0].([]GetClusterDiscoveryEndpointPscConfig)[vs[1].(int)]
	}).(GetClusterDiscoveryEndpointPscConfigOutput)
}

type GetClusterGcsSource struct {
	// URIs of the GCS objects to import. Example: gs://bucket1/object1, gs://bucket2/folder2/object2
	Uris []string `pulumi:"uris"`
}

// GetClusterGcsSourceInput is an input type that accepts GetClusterGcsSourceArgs and GetClusterGcsSourceOutput values.
// You can construct a concrete instance of `GetClusterGcsSourceInput` via:
//
//	GetClusterGcsSourceArgs{...}
type GetClusterGcsSourceInput interface {
	pulumi.Input

	ToGetClusterGcsSourceOutput() GetClusterGcsSourceOutput
	ToGetClusterGcsSourceOutputWithContext(context.Context) GetClusterGcsSourceOutput
}

type GetClusterGcsSourceArgs struct {
	// URIs of the GCS objects to import. Example: gs://bucket1/object1, gs://bucket2/folder2/object2
	Uris pulumi.StringArrayInput `pulumi:"uris"`
}

func (GetClusterGcsSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterGcsSource)(nil)).Elem()
}

func (i GetClusterGcsSourceArgs) ToGetClusterGcsSourceOutput() GetClusterGcsSourceOutput {
	return i.ToGetClusterGcsSourceOutputWithContext(context.Background())
}

func (i GetClusterGcsSourceArgs) ToGetClusterGcsSourceOutputWithContext(ctx context.Context) GetClusterGcsSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterGcsSourceOutput)
}

// GetClusterGcsSourceArrayInput is an input type that accepts GetClusterGcsSourceArray and GetClusterGcsSourceArrayOutput values.
// You can construct a concrete instance of `GetClusterGcsSourceArrayInput` via:
//
//	GetClusterGcsSourceArray{ GetClusterGcsSourceArgs{...} }
type GetClusterGcsSourceArrayInput interface {
	pulumi.Input

	ToGetClusterGcsSourceArrayOutput() GetClusterGcsSourceArrayOutput
	ToGetClusterGcsSourceArrayOutputWithContext(context.Context) GetClusterGcsSourceArrayOutput
}

type GetClusterGcsSourceArray []GetClusterGcsSourceInput

func (GetClusterGcsSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterGcsSource)(nil)).Elem()
}

func (i GetClusterGcsSourceArray) ToGetClusterGcsSourceArrayOutput() GetClusterGcsSourceArrayOutput {
	return i.ToGetClusterGcsSourceArrayOutputWithContext(context.Background())
}

func (i GetClusterGcsSourceArray) ToGetClusterGcsSourceArrayOutputWithContext(ctx context.Context) GetClusterGcsSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterGcsSourceArrayOutput)
}

type GetClusterGcsSourceOutput struct{ *pulumi.OutputState }

func (GetClusterGcsSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterGcsSource)(nil)).Elem()
}

func (o GetClusterGcsSourceOutput) ToGetClusterGcsSourceOutput() GetClusterGcsSourceOutput {
	return o
}

func (o GetClusterGcsSourceOutput) ToGetClusterGcsSourceOutputWithContext(ctx context.Context) GetClusterGcsSourceOutput {
	return o
}

// URIs of the GCS objects to import. Example: gs://bucket1/object1, gs://bucket2/folder2/object2
func (o GetClusterGcsSourceOutput) Uris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClusterGcsSource) []string { return v.Uris }).(pulumi.StringArrayOutput)
}

type GetClusterGcsSourceArrayOutput struct{ *pulumi.OutputState }

func (GetClusterGcsSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterGcsSource)(nil)).Elem()
}

func (o GetClusterGcsSourceArrayOutput) ToGetClusterGcsSourceArrayOutput() GetClusterGcsSourceArrayOutput {
	return o
}

func (o GetClusterGcsSourceArrayOutput) ToGetClusterGcsSourceArrayOutputWithContext(ctx context.Context) GetClusterGcsSourceArrayOutput {
	return o
}

func (o GetClusterGcsSourceArrayOutput) Index(i pulumi.IntInput) GetClusterGcsSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterGcsSource {
		return vs[0].([]GetClusterGcsSource)[vs[1].(int)]
	}).(GetClusterGcsSourceOutput)
}

type GetClusterMaintenancePolicy struct {
	// Output only. The time when the policy was created.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits.
	CreateTime string `pulumi:"createTime"`
	// Output only. The time when the policy was last updated.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits.
	UpdateTime string `pulumi:"updateTime"`
	// Optional. Maintenance window that is applied to resources covered by this policy.
	// Minimum 1. For the current version, the maximum number
	// of weeklyWindow is expected to be one.
	WeeklyMaintenanceWindows []GetClusterMaintenancePolicyWeeklyMaintenanceWindow `pulumi:"weeklyMaintenanceWindows"`
}

// GetClusterMaintenancePolicyInput is an input type that accepts GetClusterMaintenancePolicyArgs and GetClusterMaintenancePolicyOutput values.
// You can construct a concrete instance of `GetClusterMaintenancePolicyInput` via:
//
//	GetClusterMaintenancePolicyArgs{...}
type GetClusterMaintenancePolicyInput interface {
	pulumi.Input

	ToGetClusterMaintenancePolicyOutput() GetClusterMaintenancePolicyOutput
	ToGetClusterMaintenancePolicyOutputWithContext(context.Context) GetClusterMaintenancePolicyOutput
}

type GetClusterMaintenancePolicyArgs struct {
	// Output only. The time when the policy was created.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// Output only. The time when the policy was last updated.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
	// Optional. Maintenance window that is applied to resources covered by this policy.
	// Minimum 1. For the current version, the maximum number
	// of weeklyWindow is expected to be one.
	WeeklyMaintenanceWindows GetClusterMaintenancePolicyWeeklyMaintenanceWindowArrayInput `pulumi:"weeklyMaintenanceWindows"`
}

func (GetClusterMaintenancePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterMaintenancePolicy)(nil)).Elem()
}

func (i GetClusterMaintenancePolicyArgs) ToGetClusterMaintenancePolicyOutput() GetClusterMaintenancePolicyOutput {
	return i.ToGetClusterMaintenancePolicyOutputWithContext(context.Background())
}

func (i GetClusterMaintenancePolicyArgs) ToGetClusterMaintenancePolicyOutputWithContext(ctx context.Context) GetClusterMaintenancePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterMaintenancePolicyOutput)
}

// GetClusterMaintenancePolicyArrayInput is an input type that accepts GetClusterMaintenancePolicyArray and GetClusterMaintenancePolicyArrayOutput values.
// You can construct a concrete instance of `GetClusterMaintenancePolicyArrayInput` via:
//
//	GetClusterMaintenancePolicyArray{ GetClusterMaintenancePolicyArgs{...} }
type GetClusterMaintenancePolicyArrayInput interface {
	pulumi.Input

	ToGetClusterMaintenancePolicyArrayOutput() GetClusterMaintenancePolicyArrayOutput
	ToGetClusterMaintenancePolicyArrayOutputWithContext(context.Context) GetClusterMaintenancePolicyArrayOutput
}

type GetClusterMaintenancePolicyArray []GetClusterMaintenancePolicyInput

func (GetClusterMaintenancePolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterMaintenancePolicy)(nil)).Elem()
}

func (i GetClusterMaintenancePolicyArray) ToGetClusterMaintenancePolicyArrayOutput() GetClusterMaintenancePolicyArrayOutput {
	return i.ToGetClusterMaintenancePolicyArrayOutputWithContext(context.Background())
}

func (i GetClusterMaintenancePolicyArray) ToGetClusterMaintenancePolicyArrayOutputWithContext(ctx context.Context) GetClusterMaintenancePolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterMaintenancePolicyArrayOutput)
}

type GetClusterMaintenancePolicyOutput struct{ *pulumi.OutputState }

func (GetClusterMaintenancePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterMaintenancePolicy)(nil)).Elem()
}

func (o GetClusterMaintenancePolicyOutput) ToGetClusterMaintenancePolicyOutput() GetClusterMaintenancePolicyOutput {
	return o
}

func (o GetClusterMaintenancePolicyOutput) ToGetClusterMaintenancePolicyOutputWithContext(ctx context.Context) GetClusterMaintenancePolicyOutput {
	return o
}

// Output only. The time when the policy was created.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
// resolution and up to nine fractional digits.
func (o GetClusterMaintenancePolicyOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterMaintenancePolicy) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Output only. The time when the policy was last updated.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
// resolution and up to nine fractional digits.
func (o GetClusterMaintenancePolicyOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterMaintenancePolicy) string { return v.UpdateTime }).(pulumi.StringOutput)
}

// Optional. Maintenance window that is applied to resources covered by this policy.
// Minimum 1. For the current version, the maximum number
// of weeklyWindow is expected to be one.
func (o GetClusterMaintenancePolicyOutput) WeeklyMaintenanceWindows() GetClusterMaintenancePolicyWeeklyMaintenanceWindowArrayOutput {
	return o.ApplyT(func(v GetClusterMaintenancePolicy) []GetClusterMaintenancePolicyWeeklyMaintenanceWindow {
		return v.WeeklyMaintenanceWindows
	}).(GetClusterMaintenancePolicyWeeklyMaintenanceWindowArrayOutput)
}

type GetClusterMaintenancePolicyArrayOutput struct{ *pulumi.OutputState }

func (GetClusterMaintenancePolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterMaintenancePolicy)(nil)).Elem()
}

func (o GetClusterMaintenancePolicyArrayOutput) ToGetClusterMaintenancePolicyArrayOutput() GetClusterMaintenancePolicyArrayOutput {
	return o
}

func (o GetClusterMaintenancePolicyArrayOutput) ToGetClusterMaintenancePolicyArrayOutputWithContext(ctx context.Context) GetClusterMaintenancePolicyArrayOutput {
	return o
}

func (o GetClusterMaintenancePolicyArrayOutput) Index(i pulumi.IntInput) GetClusterMaintenancePolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterMaintenancePolicy {
		return vs[0].([]GetClusterMaintenancePolicy)[vs[1].(int)]
	}).(GetClusterMaintenancePolicyOutput)
}

type GetClusterMaintenancePolicyWeeklyMaintenanceWindow struct {
	// Required. The day of week that maintenance updates occur.
	//
	// - DAY_OF_WEEK_UNSPECIFIED: The day of the week is unspecified.
	// - MONDAY: Monday
	// - TUESDAY: Tuesday
	// - WEDNESDAY: Wednesday
	// - THURSDAY: Thursday
	// - FRIDAY: Friday
	// - SATURDAY: Saturday
	// - SUNDAY: Sunday Possible values: ["DAY_OF_WEEK_UNSPECIFIED", "MONDAY", "TUESDAY", "WEDNESDAY", "THURSDAY", "FRIDAY", "SATURDAY", "SUNDAY"]
	Day string `pulumi:"day"`
	// Output only. Duration of the maintenance window.
	// The current window is fixed at 1 hour.
	// A duration in seconds with up to nine fractional digits,
	// terminated by 's'. Example: "3.5s".
	Duration string `pulumi:"duration"`
	// Required. Start time of the window in UTC time.
	StartTimes []GetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTime `pulumi:"startTimes"`
}

// GetClusterMaintenancePolicyWeeklyMaintenanceWindowInput is an input type that accepts GetClusterMaintenancePolicyWeeklyMaintenanceWindowArgs and GetClusterMaintenancePolicyWeeklyMaintenanceWindowOutput values.
// You can construct a concrete instance of `GetClusterMaintenancePolicyWeeklyMaintenanceWindowInput` via:
//
//	GetClusterMaintenancePolicyWeeklyMaintenanceWindowArgs{...}
type GetClusterMaintenancePolicyWeeklyMaintenanceWindowInput interface {
	pulumi.Input

	ToGetClusterMaintenancePolicyWeeklyMaintenanceWindowOutput() GetClusterMaintenancePolicyWeeklyMaintenanceWindowOutput
	ToGetClusterMaintenancePolicyWeeklyMaintenanceWindowOutputWithContext(context.Context) GetClusterMaintenancePolicyWeeklyMaintenanceWindowOutput
}

type GetClusterMaintenancePolicyWeeklyMaintenanceWindowArgs struct {
	// Required. The day of week that maintenance updates occur.
	//
	// - DAY_OF_WEEK_UNSPECIFIED: The day of the week is unspecified.
	// - MONDAY: Monday
	// - TUESDAY: Tuesday
	// - WEDNESDAY: Wednesday
	// - THURSDAY: Thursday
	// - FRIDAY: Friday
	// - SATURDAY: Saturday
	// - SUNDAY: Sunday Possible values: ["DAY_OF_WEEK_UNSPECIFIED", "MONDAY", "TUESDAY", "WEDNESDAY", "THURSDAY", "FRIDAY", "SATURDAY", "SUNDAY"]
	Day pulumi.StringInput `pulumi:"day"`
	// Output only. Duration of the maintenance window.
	// The current window is fixed at 1 hour.
	// A duration in seconds with up to nine fractional digits,
	// terminated by 's'. Example: "3.5s".
	Duration pulumi.StringInput `pulumi:"duration"`
	// Required. Start time of the window in UTC time.
	StartTimes GetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayInput `pulumi:"startTimes"`
}

func (GetClusterMaintenancePolicyWeeklyMaintenanceWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterMaintenancePolicyWeeklyMaintenanceWindow)(nil)).Elem()
}

func (i GetClusterMaintenancePolicyWeeklyMaintenanceWindowArgs) ToGetClusterMaintenancePolicyWeeklyMaintenanceWindowOutput() GetClusterMaintenancePolicyWeeklyMaintenanceWindowOutput {
	return i.ToGetClusterMaintenancePolicyWeeklyMaintenanceWindowOutputWithContext(context.Background())
}

func (i GetClusterMaintenancePolicyWeeklyMaintenanceWindowArgs) ToGetClusterMaintenancePolicyWeeklyMaintenanceWindowOutputWithContext(ctx context.Context) GetClusterMaintenancePolicyWeeklyMaintenanceWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterMaintenancePolicyWeeklyMaintenanceWindowOutput)
}

// GetClusterMaintenancePolicyWeeklyMaintenanceWindowArrayInput is an input type that accepts GetClusterMaintenancePolicyWeeklyMaintenanceWindowArray and GetClusterMaintenancePolicyWeeklyMaintenanceWindowArrayOutput values.
// You can construct a concrete instance of `GetClusterMaintenancePolicyWeeklyMaintenanceWindowArrayInput` via:
//
//	GetClusterMaintenancePolicyWeeklyMaintenanceWindowArray{ GetClusterMaintenancePolicyWeeklyMaintenanceWindowArgs{...} }
type GetClusterMaintenancePolicyWeeklyMaintenanceWindowArrayInput interface {
	pulumi.Input

	ToGetClusterMaintenancePolicyWeeklyMaintenanceWindowArrayOutput() GetClusterMaintenancePolicyWeeklyMaintenanceWindowArrayOutput
	ToGetClusterMaintenancePolicyWeeklyMaintenanceWindowArrayOutputWithContext(context.Context) GetClusterMaintenancePolicyWeeklyMaintenanceWindowArrayOutput
}

type GetClusterMaintenancePolicyWeeklyMaintenanceWindowArray []GetClusterMaintenancePolicyWeeklyMaintenanceWindowInput

func (GetClusterMaintenancePolicyWeeklyMaintenanceWindowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterMaintenancePolicyWeeklyMaintenanceWindow)(nil)).Elem()
}

func (i GetClusterMaintenancePolicyWeeklyMaintenanceWindowArray) ToGetClusterMaintenancePolicyWeeklyMaintenanceWindowArrayOutput() GetClusterMaintenancePolicyWeeklyMaintenanceWindowArrayOutput {
	return i.ToGetClusterMaintenancePolicyWeeklyMaintenanceWindowArrayOutputWithContext(context.Background())
}

func (i GetClusterMaintenancePolicyWeeklyMaintenanceWindowArray) ToGetClusterMaintenancePolicyWeeklyMaintenanceWindowArrayOutputWithContext(ctx context.Context) GetClusterMaintenancePolicyWeeklyMaintenanceWindowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterMaintenancePolicyWeeklyMaintenanceWindowArrayOutput)
}

type GetClusterMaintenancePolicyWeeklyMaintenanceWindowOutput struct{ *pulumi.OutputState }

func (GetClusterMaintenancePolicyWeeklyMaintenanceWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterMaintenancePolicyWeeklyMaintenanceWindow)(nil)).Elem()
}

func (o GetClusterMaintenancePolicyWeeklyMaintenanceWindowOutput) ToGetClusterMaintenancePolicyWeeklyMaintenanceWindowOutput() GetClusterMaintenancePolicyWeeklyMaintenanceWindowOutput {
	return o
}

func (o GetClusterMaintenancePolicyWeeklyMaintenanceWindowOutput) ToGetClusterMaintenancePolicyWeeklyMaintenanceWindowOutputWithContext(ctx context.Context) GetClusterMaintenancePolicyWeeklyMaintenanceWindowOutput {
	return o
}

// Required. The day of week that maintenance updates occur.
//
// - DAY_OF_WEEK_UNSPECIFIED: The day of the week is unspecified.
// - MONDAY: Monday
// - TUESDAY: Tuesday
// - WEDNESDAY: Wednesday
// - THURSDAY: Thursday
// - FRIDAY: Friday
// - SATURDAY: Saturday
// - SUNDAY: Sunday Possible values: ["DAY_OF_WEEK_UNSPECIFIED", "MONDAY", "TUESDAY", "WEDNESDAY", "THURSDAY", "FRIDAY", "SATURDAY", "SUNDAY"]
func (o GetClusterMaintenancePolicyWeeklyMaintenanceWindowOutput) Day() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterMaintenancePolicyWeeklyMaintenanceWindow) string { return v.Day }).(pulumi.StringOutput)
}

// Output only. Duration of the maintenance window.
// The current window is fixed at 1 hour.
// A duration in seconds with up to nine fractional digits,
// terminated by 's'. Example: "3.5s".
func (o GetClusterMaintenancePolicyWeeklyMaintenanceWindowOutput) Duration() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterMaintenancePolicyWeeklyMaintenanceWindow) string { return v.Duration }).(pulumi.StringOutput)
}

// Required. Start time of the window in UTC time.
func (o GetClusterMaintenancePolicyWeeklyMaintenanceWindowOutput) StartTimes() GetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutput {
	return o.ApplyT(func(v GetClusterMaintenancePolicyWeeklyMaintenanceWindow) []GetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTime {
		return v.StartTimes
	}).(GetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutput)
}

type GetClusterMaintenancePolicyWeeklyMaintenanceWindowArrayOutput struct{ *pulumi.OutputState }

func (GetClusterMaintenancePolicyWeeklyMaintenanceWindowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterMaintenancePolicyWeeklyMaintenanceWindow)(nil)).Elem()
}

func (o GetClusterMaintenancePolicyWeeklyMaintenanceWindowArrayOutput) ToGetClusterMaintenancePolicyWeeklyMaintenanceWindowArrayOutput() GetClusterMaintenancePolicyWeeklyMaintenanceWindowArrayOutput {
	return o
}

func (o GetClusterMaintenancePolicyWeeklyMaintenanceWindowArrayOutput) ToGetClusterMaintenancePolicyWeeklyMaintenanceWindowArrayOutputWithContext(ctx context.Context) GetClusterMaintenancePolicyWeeklyMaintenanceWindowArrayOutput {
	return o
}

func (o GetClusterMaintenancePolicyWeeklyMaintenanceWindowArrayOutput) Index(i pulumi.IntInput) GetClusterMaintenancePolicyWeeklyMaintenanceWindowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterMaintenancePolicyWeeklyMaintenanceWindow {
		return vs[0].([]GetClusterMaintenancePolicyWeeklyMaintenanceWindow)[vs[1].(int)]
	}).(GetClusterMaintenancePolicyWeeklyMaintenanceWindowOutput)
}

type GetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTime struct {
	// Hours of day in 24 hour format. Should be from 0 to 23.
	// An API may choose to allow the value "24:00:00" for scenarios like business closing time.
	Hours int `pulumi:"hours"`
	// Minutes of hour of day. Must be from 0 to 59.
	Minutes int `pulumi:"minutes"`
	// Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
	Nanos int `pulumi:"nanos"`
	// Seconds of minutes of the time. Must normally be from 0 to 59.
	// An API may allow the value 60 if it allows leap-seconds.
	Seconds int `pulumi:"seconds"`
}

// GetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeInput is an input type that accepts GetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeArgs and GetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput values.
// You can construct a concrete instance of `GetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeInput` via:
//
//	GetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeArgs{...}
type GetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeInput interface {
	pulumi.Input

	ToGetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput() GetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput
	ToGetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutputWithContext(context.Context) GetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput
}

type GetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeArgs struct {
	// Hours of day in 24 hour format. Should be from 0 to 23.
	// An API may choose to allow the value "24:00:00" for scenarios like business closing time.
	Hours pulumi.IntInput `pulumi:"hours"`
	// Minutes of hour of day. Must be from 0 to 59.
	Minutes pulumi.IntInput `pulumi:"minutes"`
	// Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
	Nanos pulumi.IntInput `pulumi:"nanos"`
	// Seconds of minutes of the time. Must normally be from 0 to 59.
	// An API may allow the value 60 if it allows leap-seconds.
	Seconds pulumi.IntInput `pulumi:"seconds"`
}

func (GetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTime)(nil)).Elem()
}

func (i GetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeArgs) ToGetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput() GetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput {
	return i.ToGetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutputWithContext(context.Background())
}

func (i GetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeArgs) ToGetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutputWithContext(ctx context.Context) GetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput)
}

// GetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayInput is an input type that accepts GetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeArray and GetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutput values.
// You can construct a concrete instance of `GetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayInput` via:
//
//	GetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeArray{ GetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeArgs{...} }
type GetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayInput interface {
	pulumi.Input

	ToGetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutput() GetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutput
	ToGetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutputWithContext(context.Context) GetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutput
}

type GetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeArray []GetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeInput

func (GetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTime)(nil)).Elem()
}

func (i GetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeArray) ToGetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutput() GetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutput {
	return i.ToGetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutputWithContext(context.Background())
}

func (i GetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeArray) ToGetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutputWithContext(ctx context.Context) GetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutput)
}

type GetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput struct{ *pulumi.OutputState }

func (GetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTime)(nil)).Elem()
}

func (o GetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput) ToGetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput() GetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput {
	return o
}

func (o GetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput) ToGetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutputWithContext(ctx context.Context) GetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput {
	return o
}

// Hours of day in 24 hour format. Should be from 0 to 23.
// An API may choose to allow the value "24:00:00" for scenarios like business closing time.
func (o GetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput) Hours() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTime) int { return v.Hours }).(pulumi.IntOutput)
}

// Minutes of hour of day. Must be from 0 to 59.
func (o GetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput) Minutes() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTime) int { return v.Minutes }).(pulumi.IntOutput)
}

// Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
func (o GetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput) Nanos() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTime) int { return v.Nanos }).(pulumi.IntOutput)
}

// Seconds of minutes of the time. Must normally be from 0 to 59.
// An API may allow the value 60 if it allows leap-seconds.
func (o GetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput) Seconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTime) int { return v.Seconds }).(pulumi.IntOutput)
}

type GetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutput struct{ *pulumi.OutputState }

func (GetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTime)(nil)).Elem()
}

func (o GetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutput) ToGetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutput() GetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutput {
	return o
}

func (o GetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutput) ToGetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutputWithContext(ctx context.Context) GetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutput {
	return o
}

func (o GetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutput) Index(i pulumi.IntInput) GetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTime {
		return vs[0].([]GetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTime)[vs[1].(int)]
	}).(GetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput)
}

type GetClusterMaintenanceSchedule struct {
	// Output only. The end time of any upcoming scheduled maintenance for this cluster.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits.
	EndTime string `pulumi:"endTime"`
	// Output only. The deadline that the maintenance schedule start time
	// can not go beyond, including reschedule.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits.
	ScheduleDeadlineTime string `pulumi:"scheduleDeadlineTime"`
	// Output only. The start time of any upcoming scheduled maintenance for this cluster.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits.
	StartTime string `pulumi:"startTime"`
}

// GetClusterMaintenanceScheduleInput is an input type that accepts GetClusterMaintenanceScheduleArgs and GetClusterMaintenanceScheduleOutput values.
// You can construct a concrete instance of `GetClusterMaintenanceScheduleInput` via:
//
//	GetClusterMaintenanceScheduleArgs{...}
type GetClusterMaintenanceScheduleInput interface {
	pulumi.Input

	ToGetClusterMaintenanceScheduleOutput() GetClusterMaintenanceScheduleOutput
	ToGetClusterMaintenanceScheduleOutputWithContext(context.Context) GetClusterMaintenanceScheduleOutput
}

type GetClusterMaintenanceScheduleArgs struct {
	// Output only. The end time of any upcoming scheduled maintenance for this cluster.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits.
	EndTime pulumi.StringInput `pulumi:"endTime"`
	// Output only. The deadline that the maintenance schedule start time
	// can not go beyond, including reschedule.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits.
	ScheduleDeadlineTime pulumi.StringInput `pulumi:"scheduleDeadlineTime"`
	// Output only. The start time of any upcoming scheduled maintenance for this cluster.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits.
	StartTime pulumi.StringInput `pulumi:"startTime"`
}

func (GetClusterMaintenanceScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterMaintenanceSchedule)(nil)).Elem()
}

func (i GetClusterMaintenanceScheduleArgs) ToGetClusterMaintenanceScheduleOutput() GetClusterMaintenanceScheduleOutput {
	return i.ToGetClusterMaintenanceScheduleOutputWithContext(context.Background())
}

func (i GetClusterMaintenanceScheduleArgs) ToGetClusterMaintenanceScheduleOutputWithContext(ctx context.Context) GetClusterMaintenanceScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterMaintenanceScheduleOutput)
}

// GetClusterMaintenanceScheduleArrayInput is an input type that accepts GetClusterMaintenanceScheduleArray and GetClusterMaintenanceScheduleArrayOutput values.
// You can construct a concrete instance of `GetClusterMaintenanceScheduleArrayInput` via:
//
//	GetClusterMaintenanceScheduleArray{ GetClusterMaintenanceScheduleArgs{...} }
type GetClusterMaintenanceScheduleArrayInput interface {
	pulumi.Input

	ToGetClusterMaintenanceScheduleArrayOutput() GetClusterMaintenanceScheduleArrayOutput
	ToGetClusterMaintenanceScheduleArrayOutputWithContext(context.Context) GetClusterMaintenanceScheduleArrayOutput
}

type GetClusterMaintenanceScheduleArray []GetClusterMaintenanceScheduleInput

func (GetClusterMaintenanceScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterMaintenanceSchedule)(nil)).Elem()
}

func (i GetClusterMaintenanceScheduleArray) ToGetClusterMaintenanceScheduleArrayOutput() GetClusterMaintenanceScheduleArrayOutput {
	return i.ToGetClusterMaintenanceScheduleArrayOutputWithContext(context.Background())
}

func (i GetClusterMaintenanceScheduleArray) ToGetClusterMaintenanceScheduleArrayOutputWithContext(ctx context.Context) GetClusterMaintenanceScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterMaintenanceScheduleArrayOutput)
}

type GetClusterMaintenanceScheduleOutput struct{ *pulumi.OutputState }

func (GetClusterMaintenanceScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterMaintenanceSchedule)(nil)).Elem()
}

func (o GetClusterMaintenanceScheduleOutput) ToGetClusterMaintenanceScheduleOutput() GetClusterMaintenanceScheduleOutput {
	return o
}

func (o GetClusterMaintenanceScheduleOutput) ToGetClusterMaintenanceScheduleOutputWithContext(ctx context.Context) GetClusterMaintenanceScheduleOutput {
	return o
}

// Output only. The end time of any upcoming scheduled maintenance for this cluster.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
// resolution and up to nine fractional digits.
func (o GetClusterMaintenanceScheduleOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterMaintenanceSchedule) string { return v.EndTime }).(pulumi.StringOutput)
}

// Output only. The deadline that the maintenance schedule start time
// can not go beyond, including reschedule.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
// resolution and up to nine fractional digits.
func (o GetClusterMaintenanceScheduleOutput) ScheduleDeadlineTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterMaintenanceSchedule) string { return v.ScheduleDeadlineTime }).(pulumi.StringOutput)
}

// Output only. The start time of any upcoming scheduled maintenance for this cluster.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
// resolution and up to nine fractional digits.
func (o GetClusterMaintenanceScheduleOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterMaintenanceSchedule) string { return v.StartTime }).(pulumi.StringOutput)
}

type GetClusterMaintenanceScheduleArrayOutput struct{ *pulumi.OutputState }

func (GetClusterMaintenanceScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterMaintenanceSchedule)(nil)).Elem()
}

func (o GetClusterMaintenanceScheduleArrayOutput) ToGetClusterMaintenanceScheduleArrayOutput() GetClusterMaintenanceScheduleArrayOutput {
	return o
}

func (o GetClusterMaintenanceScheduleArrayOutput) ToGetClusterMaintenanceScheduleArrayOutputWithContext(ctx context.Context) GetClusterMaintenanceScheduleArrayOutput {
	return o
}

func (o GetClusterMaintenanceScheduleArrayOutput) Index(i pulumi.IntInput) GetClusterMaintenanceScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterMaintenanceSchedule {
		return vs[0].([]GetClusterMaintenanceSchedule)[vs[1].(int)]
	}).(GetClusterMaintenanceScheduleOutput)
}

type GetClusterManagedBackupSource struct {
	// Example: 'projects/{project}/locations/{location}/backupCollections/{collection}/backups/{backup}'.
	Backup string `pulumi:"backup"`
}

// GetClusterManagedBackupSourceInput is an input type that accepts GetClusterManagedBackupSourceArgs and GetClusterManagedBackupSourceOutput values.
// You can construct a concrete instance of `GetClusterManagedBackupSourceInput` via:
//
//	GetClusterManagedBackupSourceArgs{...}
type GetClusterManagedBackupSourceInput interface {
	pulumi.Input

	ToGetClusterManagedBackupSourceOutput() GetClusterManagedBackupSourceOutput
	ToGetClusterManagedBackupSourceOutputWithContext(context.Context) GetClusterManagedBackupSourceOutput
}

type GetClusterManagedBackupSourceArgs struct {
	// Example: 'projects/{project}/locations/{location}/backupCollections/{collection}/backups/{backup}'.
	Backup pulumi.StringInput `pulumi:"backup"`
}

func (GetClusterManagedBackupSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterManagedBackupSource)(nil)).Elem()
}

func (i GetClusterManagedBackupSourceArgs) ToGetClusterManagedBackupSourceOutput() GetClusterManagedBackupSourceOutput {
	return i.ToGetClusterManagedBackupSourceOutputWithContext(context.Background())
}

func (i GetClusterManagedBackupSourceArgs) ToGetClusterManagedBackupSourceOutputWithContext(ctx context.Context) GetClusterManagedBackupSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterManagedBackupSourceOutput)
}

// GetClusterManagedBackupSourceArrayInput is an input type that accepts GetClusterManagedBackupSourceArray and GetClusterManagedBackupSourceArrayOutput values.
// You can construct a concrete instance of `GetClusterManagedBackupSourceArrayInput` via:
//
//	GetClusterManagedBackupSourceArray{ GetClusterManagedBackupSourceArgs{...} }
type GetClusterManagedBackupSourceArrayInput interface {
	pulumi.Input

	ToGetClusterManagedBackupSourceArrayOutput() GetClusterManagedBackupSourceArrayOutput
	ToGetClusterManagedBackupSourceArrayOutputWithContext(context.Context) GetClusterManagedBackupSourceArrayOutput
}

type GetClusterManagedBackupSourceArray []GetClusterManagedBackupSourceInput

func (GetClusterManagedBackupSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterManagedBackupSource)(nil)).Elem()
}

func (i GetClusterManagedBackupSourceArray) ToGetClusterManagedBackupSourceArrayOutput() GetClusterManagedBackupSourceArrayOutput {
	return i.ToGetClusterManagedBackupSourceArrayOutputWithContext(context.Background())
}

func (i GetClusterManagedBackupSourceArray) ToGetClusterManagedBackupSourceArrayOutputWithContext(ctx context.Context) GetClusterManagedBackupSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterManagedBackupSourceArrayOutput)
}

type GetClusterManagedBackupSourceOutput struct{ *pulumi.OutputState }

func (GetClusterManagedBackupSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterManagedBackupSource)(nil)).Elem()
}

func (o GetClusterManagedBackupSourceOutput) ToGetClusterManagedBackupSourceOutput() GetClusterManagedBackupSourceOutput {
	return o
}

func (o GetClusterManagedBackupSourceOutput) ToGetClusterManagedBackupSourceOutputWithContext(ctx context.Context) GetClusterManagedBackupSourceOutput {
	return o
}

// Example: 'projects/{project}/locations/{location}/backupCollections/{collection}/backups/{backup}'.
func (o GetClusterManagedBackupSourceOutput) Backup() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterManagedBackupSource) string { return v.Backup }).(pulumi.StringOutput)
}

type GetClusterManagedBackupSourceArrayOutput struct{ *pulumi.OutputState }

func (GetClusterManagedBackupSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterManagedBackupSource)(nil)).Elem()
}

func (o GetClusterManagedBackupSourceArrayOutput) ToGetClusterManagedBackupSourceArrayOutput() GetClusterManagedBackupSourceArrayOutput {
	return o
}

func (o GetClusterManagedBackupSourceArrayOutput) ToGetClusterManagedBackupSourceArrayOutputWithContext(ctx context.Context) GetClusterManagedBackupSourceArrayOutput {
	return o
}

func (o GetClusterManagedBackupSourceArrayOutput) Index(i pulumi.IntInput) GetClusterManagedBackupSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterManagedBackupSource {
		return vs[0].([]GetClusterManagedBackupSource)[vs[1].(int)]
	}).(GetClusterManagedBackupSourceOutput)
}

type GetClusterManagedServerCa struct {
	// The PEM encoded CA certificate chains for redis managed server authentication
	CaCerts []GetClusterManagedServerCaCaCert `pulumi:"caCerts"`
}

// GetClusterManagedServerCaInput is an input type that accepts GetClusterManagedServerCaArgs and GetClusterManagedServerCaOutput values.
// You can construct a concrete instance of `GetClusterManagedServerCaInput` via:
//
//	GetClusterManagedServerCaArgs{...}
type GetClusterManagedServerCaInput interface {
	pulumi.Input

	ToGetClusterManagedServerCaOutput() GetClusterManagedServerCaOutput
	ToGetClusterManagedServerCaOutputWithContext(context.Context) GetClusterManagedServerCaOutput
}

type GetClusterManagedServerCaArgs struct {
	// The PEM encoded CA certificate chains for redis managed server authentication
	CaCerts GetClusterManagedServerCaCaCertArrayInput `pulumi:"caCerts"`
}

func (GetClusterManagedServerCaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterManagedServerCa)(nil)).Elem()
}

func (i GetClusterManagedServerCaArgs) ToGetClusterManagedServerCaOutput() GetClusterManagedServerCaOutput {
	return i.ToGetClusterManagedServerCaOutputWithContext(context.Background())
}

func (i GetClusterManagedServerCaArgs) ToGetClusterManagedServerCaOutputWithContext(ctx context.Context) GetClusterManagedServerCaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterManagedServerCaOutput)
}

// GetClusterManagedServerCaArrayInput is an input type that accepts GetClusterManagedServerCaArray and GetClusterManagedServerCaArrayOutput values.
// You can construct a concrete instance of `GetClusterManagedServerCaArrayInput` via:
//
//	GetClusterManagedServerCaArray{ GetClusterManagedServerCaArgs{...} }
type GetClusterManagedServerCaArrayInput interface {
	pulumi.Input

	ToGetClusterManagedServerCaArrayOutput() GetClusterManagedServerCaArrayOutput
	ToGetClusterManagedServerCaArrayOutputWithContext(context.Context) GetClusterManagedServerCaArrayOutput
}

type GetClusterManagedServerCaArray []GetClusterManagedServerCaInput

func (GetClusterManagedServerCaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterManagedServerCa)(nil)).Elem()
}

func (i GetClusterManagedServerCaArray) ToGetClusterManagedServerCaArrayOutput() GetClusterManagedServerCaArrayOutput {
	return i.ToGetClusterManagedServerCaArrayOutputWithContext(context.Background())
}

func (i GetClusterManagedServerCaArray) ToGetClusterManagedServerCaArrayOutputWithContext(ctx context.Context) GetClusterManagedServerCaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterManagedServerCaArrayOutput)
}

type GetClusterManagedServerCaOutput struct{ *pulumi.OutputState }

func (GetClusterManagedServerCaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterManagedServerCa)(nil)).Elem()
}

func (o GetClusterManagedServerCaOutput) ToGetClusterManagedServerCaOutput() GetClusterManagedServerCaOutput {
	return o
}

func (o GetClusterManagedServerCaOutput) ToGetClusterManagedServerCaOutputWithContext(ctx context.Context) GetClusterManagedServerCaOutput {
	return o
}

// The PEM encoded CA certificate chains for redis managed server authentication
func (o GetClusterManagedServerCaOutput) CaCerts() GetClusterManagedServerCaCaCertArrayOutput {
	return o.ApplyT(func(v GetClusterManagedServerCa) []GetClusterManagedServerCaCaCert { return v.CaCerts }).(GetClusterManagedServerCaCaCertArrayOutput)
}

type GetClusterManagedServerCaArrayOutput struct{ *pulumi.OutputState }

func (GetClusterManagedServerCaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterManagedServerCa)(nil)).Elem()
}

func (o GetClusterManagedServerCaArrayOutput) ToGetClusterManagedServerCaArrayOutput() GetClusterManagedServerCaArrayOutput {
	return o
}

func (o GetClusterManagedServerCaArrayOutput) ToGetClusterManagedServerCaArrayOutputWithContext(ctx context.Context) GetClusterManagedServerCaArrayOutput {
	return o
}

func (o GetClusterManagedServerCaArrayOutput) Index(i pulumi.IntInput) GetClusterManagedServerCaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterManagedServerCa {
		return vs[0].([]GetClusterManagedServerCa)[vs[1].(int)]
	}).(GetClusterManagedServerCaOutput)
}

type GetClusterManagedServerCaCaCert struct {
	// The certificates that form the CA chain, from leaf to root order
	Certificates []string `pulumi:"certificates"`
}

// GetClusterManagedServerCaCaCertInput is an input type that accepts GetClusterManagedServerCaCaCertArgs and GetClusterManagedServerCaCaCertOutput values.
// You can construct a concrete instance of `GetClusterManagedServerCaCaCertInput` via:
//
//	GetClusterManagedServerCaCaCertArgs{...}
type GetClusterManagedServerCaCaCertInput interface {
	pulumi.Input

	ToGetClusterManagedServerCaCaCertOutput() GetClusterManagedServerCaCaCertOutput
	ToGetClusterManagedServerCaCaCertOutputWithContext(context.Context) GetClusterManagedServerCaCaCertOutput
}

type GetClusterManagedServerCaCaCertArgs struct {
	// The certificates that form the CA chain, from leaf to root order
	Certificates pulumi.StringArrayInput `pulumi:"certificates"`
}

func (GetClusterManagedServerCaCaCertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterManagedServerCaCaCert)(nil)).Elem()
}

func (i GetClusterManagedServerCaCaCertArgs) ToGetClusterManagedServerCaCaCertOutput() GetClusterManagedServerCaCaCertOutput {
	return i.ToGetClusterManagedServerCaCaCertOutputWithContext(context.Background())
}

func (i GetClusterManagedServerCaCaCertArgs) ToGetClusterManagedServerCaCaCertOutputWithContext(ctx context.Context) GetClusterManagedServerCaCaCertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterManagedServerCaCaCertOutput)
}

// GetClusterManagedServerCaCaCertArrayInput is an input type that accepts GetClusterManagedServerCaCaCertArray and GetClusterManagedServerCaCaCertArrayOutput values.
// You can construct a concrete instance of `GetClusterManagedServerCaCaCertArrayInput` via:
//
//	GetClusterManagedServerCaCaCertArray{ GetClusterManagedServerCaCaCertArgs{...} }
type GetClusterManagedServerCaCaCertArrayInput interface {
	pulumi.Input

	ToGetClusterManagedServerCaCaCertArrayOutput() GetClusterManagedServerCaCaCertArrayOutput
	ToGetClusterManagedServerCaCaCertArrayOutputWithContext(context.Context) GetClusterManagedServerCaCaCertArrayOutput
}

type GetClusterManagedServerCaCaCertArray []GetClusterManagedServerCaCaCertInput

func (GetClusterManagedServerCaCaCertArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterManagedServerCaCaCert)(nil)).Elem()
}

func (i GetClusterManagedServerCaCaCertArray) ToGetClusterManagedServerCaCaCertArrayOutput() GetClusterManagedServerCaCaCertArrayOutput {
	return i.ToGetClusterManagedServerCaCaCertArrayOutputWithContext(context.Background())
}

func (i GetClusterManagedServerCaCaCertArray) ToGetClusterManagedServerCaCaCertArrayOutputWithContext(ctx context.Context) GetClusterManagedServerCaCaCertArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterManagedServerCaCaCertArrayOutput)
}

type GetClusterManagedServerCaCaCertOutput struct{ *pulumi.OutputState }

func (GetClusterManagedServerCaCaCertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterManagedServerCaCaCert)(nil)).Elem()
}

func (o GetClusterManagedServerCaCaCertOutput) ToGetClusterManagedServerCaCaCertOutput() GetClusterManagedServerCaCaCertOutput {
	return o
}

func (o GetClusterManagedServerCaCaCertOutput) ToGetClusterManagedServerCaCaCertOutputWithContext(ctx context.Context) GetClusterManagedServerCaCaCertOutput {
	return o
}

// The certificates that form the CA chain, from leaf to root order
func (o GetClusterManagedServerCaCaCertOutput) Certificates() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClusterManagedServerCaCaCert) []string { return v.Certificates }).(pulumi.StringArrayOutput)
}

type GetClusterManagedServerCaCaCertArrayOutput struct{ *pulumi.OutputState }

func (GetClusterManagedServerCaCaCertArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterManagedServerCaCaCert)(nil)).Elem()
}

func (o GetClusterManagedServerCaCaCertArrayOutput) ToGetClusterManagedServerCaCaCertArrayOutput() GetClusterManagedServerCaCaCertArrayOutput {
	return o
}

func (o GetClusterManagedServerCaCaCertArrayOutput) ToGetClusterManagedServerCaCaCertArrayOutputWithContext(ctx context.Context) GetClusterManagedServerCaCaCertArrayOutput {
	return o
}

func (o GetClusterManagedServerCaCaCertArrayOutput) Index(i pulumi.IntInput) GetClusterManagedServerCaCaCertOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterManagedServerCaCaCert {
		return vs[0].([]GetClusterManagedServerCaCaCert)[vs[1].(int)]
	}).(GetClusterManagedServerCaCaCertOutput)
}

type GetClusterPersistenceConfig struct {
	// AOF configuration. This field will be ignored if mode is not AOF.
	AofConfigs []GetClusterPersistenceConfigAofConfig `pulumi:"aofConfigs"`
	// Optional. Controls whether Persistence features are enabled. If not provided, the existing value will be used.
	//
	// - DISABLED: 	Persistence (both backup and restore) is disabled for the cluster.
	// - RDB: RDB based Persistence is enabled.
	// - AOF: AOF based Persistence is enabled. Possible values: ["PERSISTENCE_MODE_UNSPECIFIED", "DISABLED", "RDB", "AOF"]
	Mode string `pulumi:"mode"`
	// RDB configuration. This field will be ignored if mode is not RDB.
	RdbConfigs []GetClusterPersistenceConfigRdbConfig `pulumi:"rdbConfigs"`
}

// GetClusterPersistenceConfigInput is an input type that accepts GetClusterPersistenceConfigArgs and GetClusterPersistenceConfigOutput values.
// You can construct a concrete instance of `GetClusterPersistenceConfigInput` via:
//
//	GetClusterPersistenceConfigArgs{...}
type GetClusterPersistenceConfigInput interface {
	pulumi.Input

	ToGetClusterPersistenceConfigOutput() GetClusterPersistenceConfigOutput
	ToGetClusterPersistenceConfigOutputWithContext(context.Context) GetClusterPersistenceConfigOutput
}

type GetClusterPersistenceConfigArgs struct {
	// AOF configuration. This field will be ignored if mode is not AOF.
	AofConfigs GetClusterPersistenceConfigAofConfigArrayInput `pulumi:"aofConfigs"`
	// Optional. Controls whether Persistence features are enabled. If not provided, the existing value will be used.
	//
	// - DISABLED: 	Persistence (both backup and restore) is disabled for the cluster.
	// - RDB: RDB based Persistence is enabled.
	// - AOF: AOF based Persistence is enabled. Possible values: ["PERSISTENCE_MODE_UNSPECIFIED", "DISABLED", "RDB", "AOF"]
	Mode pulumi.StringInput `pulumi:"mode"`
	// RDB configuration. This field will be ignored if mode is not RDB.
	RdbConfigs GetClusterPersistenceConfigRdbConfigArrayInput `pulumi:"rdbConfigs"`
}

func (GetClusterPersistenceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterPersistenceConfig)(nil)).Elem()
}

func (i GetClusterPersistenceConfigArgs) ToGetClusterPersistenceConfigOutput() GetClusterPersistenceConfigOutput {
	return i.ToGetClusterPersistenceConfigOutputWithContext(context.Background())
}

func (i GetClusterPersistenceConfigArgs) ToGetClusterPersistenceConfigOutputWithContext(ctx context.Context) GetClusterPersistenceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterPersistenceConfigOutput)
}

// GetClusterPersistenceConfigArrayInput is an input type that accepts GetClusterPersistenceConfigArray and GetClusterPersistenceConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterPersistenceConfigArrayInput` via:
//
//	GetClusterPersistenceConfigArray{ GetClusterPersistenceConfigArgs{...} }
type GetClusterPersistenceConfigArrayInput interface {
	pulumi.Input

	ToGetClusterPersistenceConfigArrayOutput() GetClusterPersistenceConfigArrayOutput
	ToGetClusterPersistenceConfigArrayOutputWithContext(context.Context) GetClusterPersistenceConfigArrayOutput
}

type GetClusterPersistenceConfigArray []GetClusterPersistenceConfigInput

func (GetClusterPersistenceConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterPersistenceConfig)(nil)).Elem()
}

func (i GetClusterPersistenceConfigArray) ToGetClusterPersistenceConfigArrayOutput() GetClusterPersistenceConfigArrayOutput {
	return i.ToGetClusterPersistenceConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterPersistenceConfigArray) ToGetClusterPersistenceConfigArrayOutputWithContext(ctx context.Context) GetClusterPersistenceConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterPersistenceConfigArrayOutput)
}

type GetClusterPersistenceConfigOutput struct{ *pulumi.OutputState }

func (GetClusterPersistenceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterPersistenceConfig)(nil)).Elem()
}

func (o GetClusterPersistenceConfigOutput) ToGetClusterPersistenceConfigOutput() GetClusterPersistenceConfigOutput {
	return o
}

func (o GetClusterPersistenceConfigOutput) ToGetClusterPersistenceConfigOutputWithContext(ctx context.Context) GetClusterPersistenceConfigOutput {
	return o
}

// AOF configuration. This field will be ignored if mode is not AOF.
func (o GetClusterPersistenceConfigOutput) AofConfigs() GetClusterPersistenceConfigAofConfigArrayOutput {
	return o.ApplyT(func(v GetClusterPersistenceConfig) []GetClusterPersistenceConfigAofConfig { return v.AofConfigs }).(GetClusterPersistenceConfigAofConfigArrayOutput)
}

// Optional. Controls whether Persistence features are enabled. If not provided, the existing value will be used.
//
// - DISABLED: 	Persistence (both backup and restore) is disabled for the cluster.
// - RDB: RDB based Persistence is enabled.
// - AOF: AOF based Persistence is enabled. Possible values: ["PERSISTENCE_MODE_UNSPECIFIED", "DISABLED", "RDB", "AOF"]
func (o GetClusterPersistenceConfigOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterPersistenceConfig) string { return v.Mode }).(pulumi.StringOutput)
}

// RDB configuration. This field will be ignored if mode is not RDB.
func (o GetClusterPersistenceConfigOutput) RdbConfigs() GetClusterPersistenceConfigRdbConfigArrayOutput {
	return o.ApplyT(func(v GetClusterPersistenceConfig) []GetClusterPersistenceConfigRdbConfig { return v.RdbConfigs }).(GetClusterPersistenceConfigRdbConfigArrayOutput)
}

type GetClusterPersistenceConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterPersistenceConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterPersistenceConfig)(nil)).Elem()
}

func (o GetClusterPersistenceConfigArrayOutput) ToGetClusterPersistenceConfigArrayOutput() GetClusterPersistenceConfigArrayOutput {
	return o
}

func (o GetClusterPersistenceConfigArrayOutput) ToGetClusterPersistenceConfigArrayOutputWithContext(ctx context.Context) GetClusterPersistenceConfigArrayOutput {
	return o
}

func (o GetClusterPersistenceConfigArrayOutput) Index(i pulumi.IntInput) GetClusterPersistenceConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterPersistenceConfig {
		return vs[0].([]GetClusterPersistenceConfig)[vs[1].(int)]
	}).(GetClusterPersistenceConfigOutput)
}

type GetClusterPersistenceConfigAofConfig struct {
	// Optional. Available fsync modes.
	//
	// - NO - Do not explicitly call fsync(). Rely on OS defaults.
	// - EVERYSEC - Call fsync() once per second in a background thread. A balance between performance and durability.
	// - ALWAYS - Call fsync() for earch write command. Possible values: ["APPEND_FSYNC_UNSPECIFIED", "NO", "EVERYSEC", "ALWAYS"]
	AppendFsync string `pulumi:"appendFsync"`
}

// GetClusterPersistenceConfigAofConfigInput is an input type that accepts GetClusterPersistenceConfigAofConfigArgs and GetClusterPersistenceConfigAofConfigOutput values.
// You can construct a concrete instance of `GetClusterPersistenceConfigAofConfigInput` via:
//
//	GetClusterPersistenceConfigAofConfigArgs{...}
type GetClusterPersistenceConfigAofConfigInput interface {
	pulumi.Input

	ToGetClusterPersistenceConfigAofConfigOutput() GetClusterPersistenceConfigAofConfigOutput
	ToGetClusterPersistenceConfigAofConfigOutputWithContext(context.Context) GetClusterPersistenceConfigAofConfigOutput
}

type GetClusterPersistenceConfigAofConfigArgs struct {
	// Optional. Available fsync modes.
	//
	// - NO - Do not explicitly call fsync(). Rely on OS defaults.
	// - EVERYSEC - Call fsync() once per second in a background thread. A balance between performance and durability.
	// - ALWAYS - Call fsync() for earch write command. Possible values: ["APPEND_FSYNC_UNSPECIFIED", "NO", "EVERYSEC", "ALWAYS"]
	AppendFsync pulumi.StringInput `pulumi:"appendFsync"`
}

func (GetClusterPersistenceConfigAofConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterPersistenceConfigAofConfig)(nil)).Elem()
}

func (i GetClusterPersistenceConfigAofConfigArgs) ToGetClusterPersistenceConfigAofConfigOutput() GetClusterPersistenceConfigAofConfigOutput {
	return i.ToGetClusterPersistenceConfigAofConfigOutputWithContext(context.Background())
}

func (i GetClusterPersistenceConfigAofConfigArgs) ToGetClusterPersistenceConfigAofConfigOutputWithContext(ctx context.Context) GetClusterPersistenceConfigAofConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterPersistenceConfigAofConfigOutput)
}

// GetClusterPersistenceConfigAofConfigArrayInput is an input type that accepts GetClusterPersistenceConfigAofConfigArray and GetClusterPersistenceConfigAofConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterPersistenceConfigAofConfigArrayInput` via:
//
//	GetClusterPersistenceConfigAofConfigArray{ GetClusterPersistenceConfigAofConfigArgs{...} }
type GetClusterPersistenceConfigAofConfigArrayInput interface {
	pulumi.Input

	ToGetClusterPersistenceConfigAofConfigArrayOutput() GetClusterPersistenceConfigAofConfigArrayOutput
	ToGetClusterPersistenceConfigAofConfigArrayOutputWithContext(context.Context) GetClusterPersistenceConfigAofConfigArrayOutput
}

type GetClusterPersistenceConfigAofConfigArray []GetClusterPersistenceConfigAofConfigInput

func (GetClusterPersistenceConfigAofConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterPersistenceConfigAofConfig)(nil)).Elem()
}

func (i GetClusterPersistenceConfigAofConfigArray) ToGetClusterPersistenceConfigAofConfigArrayOutput() GetClusterPersistenceConfigAofConfigArrayOutput {
	return i.ToGetClusterPersistenceConfigAofConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterPersistenceConfigAofConfigArray) ToGetClusterPersistenceConfigAofConfigArrayOutputWithContext(ctx context.Context) GetClusterPersistenceConfigAofConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterPersistenceConfigAofConfigArrayOutput)
}

type GetClusterPersistenceConfigAofConfigOutput struct{ *pulumi.OutputState }

func (GetClusterPersistenceConfigAofConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterPersistenceConfigAofConfig)(nil)).Elem()
}

func (o GetClusterPersistenceConfigAofConfigOutput) ToGetClusterPersistenceConfigAofConfigOutput() GetClusterPersistenceConfigAofConfigOutput {
	return o
}

func (o GetClusterPersistenceConfigAofConfigOutput) ToGetClusterPersistenceConfigAofConfigOutputWithContext(ctx context.Context) GetClusterPersistenceConfigAofConfigOutput {
	return o
}

// Optional. Available fsync modes.
//
// - NO - Do not explicitly call fsync(). Rely on OS defaults.
// - EVERYSEC - Call fsync() once per second in a background thread. A balance between performance and durability.
// - ALWAYS - Call fsync() for earch write command. Possible values: ["APPEND_FSYNC_UNSPECIFIED", "NO", "EVERYSEC", "ALWAYS"]
func (o GetClusterPersistenceConfigAofConfigOutput) AppendFsync() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterPersistenceConfigAofConfig) string { return v.AppendFsync }).(pulumi.StringOutput)
}

type GetClusterPersistenceConfigAofConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterPersistenceConfigAofConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterPersistenceConfigAofConfig)(nil)).Elem()
}

func (o GetClusterPersistenceConfigAofConfigArrayOutput) ToGetClusterPersistenceConfigAofConfigArrayOutput() GetClusterPersistenceConfigAofConfigArrayOutput {
	return o
}

func (o GetClusterPersistenceConfigAofConfigArrayOutput) ToGetClusterPersistenceConfigAofConfigArrayOutputWithContext(ctx context.Context) GetClusterPersistenceConfigAofConfigArrayOutput {
	return o
}

func (o GetClusterPersistenceConfigAofConfigArrayOutput) Index(i pulumi.IntInput) GetClusterPersistenceConfigAofConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterPersistenceConfigAofConfig {
		return vs[0].([]GetClusterPersistenceConfigAofConfig)[vs[1].(int)]
	}).(GetClusterPersistenceConfigAofConfigOutput)
}

type GetClusterPersistenceConfigRdbConfig struct {
	// Optional. Available snapshot periods for scheduling.
	//
	// - ONE_HOUR:	Snapshot every 1 hour.
	// - SIX_HOURS:	Snapshot every 6 hours.
	// - TWELVE_HOURS:	Snapshot every 12 hours.
	// - TWENTY_FOUR_HOURS:	Snapshot every 24 hours. Possible values: ["SNAPSHOT_PERIOD_UNSPECIFIED", "ONE_HOUR", "SIX_HOURS", "TWELVE_HOURS", "TWENTY_FOUR_HOURS"]
	RdbSnapshotPeriod string `pulumi:"rdbSnapshotPeriod"`
	// The time that the first snapshot was/will be attempted, and to which
	// future snapshots will be aligned.
	// If not provided, the current time will be used.
	RdbSnapshotStartTime string `pulumi:"rdbSnapshotStartTime"`
}

// GetClusterPersistenceConfigRdbConfigInput is an input type that accepts GetClusterPersistenceConfigRdbConfigArgs and GetClusterPersistenceConfigRdbConfigOutput values.
// You can construct a concrete instance of `GetClusterPersistenceConfigRdbConfigInput` via:
//
//	GetClusterPersistenceConfigRdbConfigArgs{...}
type GetClusterPersistenceConfigRdbConfigInput interface {
	pulumi.Input

	ToGetClusterPersistenceConfigRdbConfigOutput() GetClusterPersistenceConfigRdbConfigOutput
	ToGetClusterPersistenceConfigRdbConfigOutputWithContext(context.Context) GetClusterPersistenceConfigRdbConfigOutput
}

type GetClusterPersistenceConfigRdbConfigArgs struct {
	// Optional. Available snapshot periods for scheduling.
	//
	// - ONE_HOUR:	Snapshot every 1 hour.
	// - SIX_HOURS:	Snapshot every 6 hours.
	// - TWELVE_HOURS:	Snapshot every 12 hours.
	// - TWENTY_FOUR_HOURS:	Snapshot every 24 hours. Possible values: ["SNAPSHOT_PERIOD_UNSPECIFIED", "ONE_HOUR", "SIX_HOURS", "TWELVE_HOURS", "TWENTY_FOUR_HOURS"]
	RdbSnapshotPeriod pulumi.StringInput `pulumi:"rdbSnapshotPeriod"`
	// The time that the first snapshot was/will be attempted, and to which
	// future snapshots will be aligned.
	// If not provided, the current time will be used.
	RdbSnapshotStartTime pulumi.StringInput `pulumi:"rdbSnapshotStartTime"`
}

func (GetClusterPersistenceConfigRdbConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterPersistenceConfigRdbConfig)(nil)).Elem()
}

func (i GetClusterPersistenceConfigRdbConfigArgs) ToGetClusterPersistenceConfigRdbConfigOutput() GetClusterPersistenceConfigRdbConfigOutput {
	return i.ToGetClusterPersistenceConfigRdbConfigOutputWithContext(context.Background())
}

func (i GetClusterPersistenceConfigRdbConfigArgs) ToGetClusterPersistenceConfigRdbConfigOutputWithContext(ctx context.Context) GetClusterPersistenceConfigRdbConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterPersistenceConfigRdbConfigOutput)
}

// GetClusterPersistenceConfigRdbConfigArrayInput is an input type that accepts GetClusterPersistenceConfigRdbConfigArray and GetClusterPersistenceConfigRdbConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterPersistenceConfigRdbConfigArrayInput` via:
//
//	GetClusterPersistenceConfigRdbConfigArray{ GetClusterPersistenceConfigRdbConfigArgs{...} }
type GetClusterPersistenceConfigRdbConfigArrayInput interface {
	pulumi.Input

	ToGetClusterPersistenceConfigRdbConfigArrayOutput() GetClusterPersistenceConfigRdbConfigArrayOutput
	ToGetClusterPersistenceConfigRdbConfigArrayOutputWithContext(context.Context) GetClusterPersistenceConfigRdbConfigArrayOutput
}

type GetClusterPersistenceConfigRdbConfigArray []GetClusterPersistenceConfigRdbConfigInput

func (GetClusterPersistenceConfigRdbConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterPersistenceConfigRdbConfig)(nil)).Elem()
}

func (i GetClusterPersistenceConfigRdbConfigArray) ToGetClusterPersistenceConfigRdbConfigArrayOutput() GetClusterPersistenceConfigRdbConfigArrayOutput {
	return i.ToGetClusterPersistenceConfigRdbConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterPersistenceConfigRdbConfigArray) ToGetClusterPersistenceConfigRdbConfigArrayOutputWithContext(ctx context.Context) GetClusterPersistenceConfigRdbConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterPersistenceConfigRdbConfigArrayOutput)
}

type GetClusterPersistenceConfigRdbConfigOutput struct{ *pulumi.OutputState }

func (GetClusterPersistenceConfigRdbConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterPersistenceConfigRdbConfig)(nil)).Elem()
}

func (o GetClusterPersistenceConfigRdbConfigOutput) ToGetClusterPersistenceConfigRdbConfigOutput() GetClusterPersistenceConfigRdbConfigOutput {
	return o
}

func (o GetClusterPersistenceConfigRdbConfigOutput) ToGetClusterPersistenceConfigRdbConfigOutputWithContext(ctx context.Context) GetClusterPersistenceConfigRdbConfigOutput {
	return o
}

// Optional. Available snapshot periods for scheduling.
//
// - ONE_HOUR:	Snapshot every 1 hour.
// - SIX_HOURS:	Snapshot every 6 hours.
// - TWELVE_HOURS:	Snapshot every 12 hours.
// - TWENTY_FOUR_HOURS:	Snapshot every 24 hours. Possible values: ["SNAPSHOT_PERIOD_UNSPECIFIED", "ONE_HOUR", "SIX_HOURS", "TWELVE_HOURS", "TWENTY_FOUR_HOURS"]
func (o GetClusterPersistenceConfigRdbConfigOutput) RdbSnapshotPeriod() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterPersistenceConfigRdbConfig) string { return v.RdbSnapshotPeriod }).(pulumi.StringOutput)
}

// The time that the first snapshot was/will be attempted, and to which
// future snapshots will be aligned.
// If not provided, the current time will be used.
func (o GetClusterPersistenceConfigRdbConfigOutput) RdbSnapshotStartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterPersistenceConfigRdbConfig) string { return v.RdbSnapshotStartTime }).(pulumi.StringOutput)
}

type GetClusterPersistenceConfigRdbConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterPersistenceConfigRdbConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterPersistenceConfigRdbConfig)(nil)).Elem()
}

func (o GetClusterPersistenceConfigRdbConfigArrayOutput) ToGetClusterPersistenceConfigRdbConfigArrayOutput() GetClusterPersistenceConfigRdbConfigArrayOutput {
	return o
}

func (o GetClusterPersistenceConfigRdbConfigArrayOutput) ToGetClusterPersistenceConfigRdbConfigArrayOutputWithContext(ctx context.Context) GetClusterPersistenceConfigRdbConfigArrayOutput {
	return o
}

func (o GetClusterPersistenceConfigRdbConfigArrayOutput) Index(i pulumi.IntInput) GetClusterPersistenceConfigRdbConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterPersistenceConfigRdbConfig {
		return vs[0].([]GetClusterPersistenceConfigRdbConfig)[vs[1].(int)]
	}).(GetClusterPersistenceConfigRdbConfigOutput)
}

type GetClusterPscConfig struct {
	// Required. The consumer network where the network address of
	// the discovery endpoint will be reserved, in the form of
	// projects/{network_project_id_or_number}/global/networks/{network_id}.
	Network string `pulumi:"network"`
}

// GetClusterPscConfigInput is an input type that accepts GetClusterPscConfigArgs and GetClusterPscConfigOutput values.
// You can construct a concrete instance of `GetClusterPscConfigInput` via:
//
//	GetClusterPscConfigArgs{...}
type GetClusterPscConfigInput interface {
	pulumi.Input

	ToGetClusterPscConfigOutput() GetClusterPscConfigOutput
	ToGetClusterPscConfigOutputWithContext(context.Context) GetClusterPscConfigOutput
}

type GetClusterPscConfigArgs struct {
	// Required. The consumer network where the network address of
	// the discovery endpoint will be reserved, in the form of
	// projects/{network_project_id_or_number}/global/networks/{network_id}.
	Network pulumi.StringInput `pulumi:"network"`
}

func (GetClusterPscConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterPscConfig)(nil)).Elem()
}

func (i GetClusterPscConfigArgs) ToGetClusterPscConfigOutput() GetClusterPscConfigOutput {
	return i.ToGetClusterPscConfigOutputWithContext(context.Background())
}

func (i GetClusterPscConfigArgs) ToGetClusterPscConfigOutputWithContext(ctx context.Context) GetClusterPscConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterPscConfigOutput)
}

// GetClusterPscConfigArrayInput is an input type that accepts GetClusterPscConfigArray and GetClusterPscConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterPscConfigArrayInput` via:
//
//	GetClusterPscConfigArray{ GetClusterPscConfigArgs{...} }
type GetClusterPscConfigArrayInput interface {
	pulumi.Input

	ToGetClusterPscConfigArrayOutput() GetClusterPscConfigArrayOutput
	ToGetClusterPscConfigArrayOutputWithContext(context.Context) GetClusterPscConfigArrayOutput
}

type GetClusterPscConfigArray []GetClusterPscConfigInput

func (GetClusterPscConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterPscConfig)(nil)).Elem()
}

func (i GetClusterPscConfigArray) ToGetClusterPscConfigArrayOutput() GetClusterPscConfigArrayOutput {
	return i.ToGetClusterPscConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterPscConfigArray) ToGetClusterPscConfigArrayOutputWithContext(ctx context.Context) GetClusterPscConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterPscConfigArrayOutput)
}

type GetClusterPscConfigOutput struct{ *pulumi.OutputState }

func (GetClusterPscConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterPscConfig)(nil)).Elem()
}

func (o GetClusterPscConfigOutput) ToGetClusterPscConfigOutput() GetClusterPscConfigOutput {
	return o
}

func (o GetClusterPscConfigOutput) ToGetClusterPscConfigOutputWithContext(ctx context.Context) GetClusterPscConfigOutput {
	return o
}

// Required. The consumer network where the network address of
// the discovery endpoint will be reserved, in the form of
// projects/{network_project_id_or_number}/global/networks/{network_id}.
func (o GetClusterPscConfigOutput) Network() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterPscConfig) string { return v.Network }).(pulumi.StringOutput)
}

type GetClusterPscConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterPscConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterPscConfig)(nil)).Elem()
}

func (o GetClusterPscConfigArrayOutput) ToGetClusterPscConfigArrayOutput() GetClusterPscConfigArrayOutput {
	return o
}

func (o GetClusterPscConfigArrayOutput) ToGetClusterPscConfigArrayOutputWithContext(ctx context.Context) GetClusterPscConfigArrayOutput {
	return o
}

func (o GetClusterPscConfigArrayOutput) Index(i pulumi.IntInput) GetClusterPscConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterPscConfig {
		return vs[0].([]GetClusterPscConfig)[vs[1].(int)]
	}).(GetClusterPscConfigOutput)
}

type GetClusterPscConnection struct {
	// Output only. The IP allocated on the consumer network for the PSC forwarding rule.
	Address string `pulumi:"address"`
	// Output only. The URI of the consumer side forwarding rule. Example: projects/{projectNumOrId}/regions/us-east1/forwardingRules/{resourceId}.
	ForwardingRule string `pulumi:"forwardingRule"`
	// The consumer network where the IP address resides, in the form of projects/{projectId}/global/networks/{network_id}.
	Network string `pulumi:"network"`
	// Output only. The consumer projectId where the forwarding rule is created from.
	ProjectId string `pulumi:"projectId"`
	// Output only. The PSC connection id of the forwarding rule connected to the service attachment.
	PscConnectionId string `pulumi:"pscConnectionId"`
}

// GetClusterPscConnectionInput is an input type that accepts GetClusterPscConnectionArgs and GetClusterPscConnectionOutput values.
// You can construct a concrete instance of `GetClusterPscConnectionInput` via:
//
//	GetClusterPscConnectionArgs{...}
type GetClusterPscConnectionInput interface {
	pulumi.Input

	ToGetClusterPscConnectionOutput() GetClusterPscConnectionOutput
	ToGetClusterPscConnectionOutputWithContext(context.Context) GetClusterPscConnectionOutput
}

type GetClusterPscConnectionArgs struct {
	// Output only. The IP allocated on the consumer network for the PSC forwarding rule.
	Address pulumi.StringInput `pulumi:"address"`
	// Output only. The URI of the consumer side forwarding rule. Example: projects/{projectNumOrId}/regions/us-east1/forwardingRules/{resourceId}.
	ForwardingRule pulumi.StringInput `pulumi:"forwardingRule"`
	// The consumer network where the IP address resides, in the form of projects/{projectId}/global/networks/{network_id}.
	Network pulumi.StringInput `pulumi:"network"`
	// Output only. The consumer projectId where the forwarding rule is created from.
	ProjectId pulumi.StringInput `pulumi:"projectId"`
	// Output only. The PSC connection id of the forwarding rule connected to the service attachment.
	PscConnectionId pulumi.StringInput `pulumi:"pscConnectionId"`
}

func (GetClusterPscConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterPscConnection)(nil)).Elem()
}

func (i GetClusterPscConnectionArgs) ToGetClusterPscConnectionOutput() GetClusterPscConnectionOutput {
	return i.ToGetClusterPscConnectionOutputWithContext(context.Background())
}

func (i GetClusterPscConnectionArgs) ToGetClusterPscConnectionOutputWithContext(ctx context.Context) GetClusterPscConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterPscConnectionOutput)
}

// GetClusterPscConnectionArrayInput is an input type that accepts GetClusterPscConnectionArray and GetClusterPscConnectionArrayOutput values.
// You can construct a concrete instance of `GetClusterPscConnectionArrayInput` via:
//
//	GetClusterPscConnectionArray{ GetClusterPscConnectionArgs{...} }
type GetClusterPscConnectionArrayInput interface {
	pulumi.Input

	ToGetClusterPscConnectionArrayOutput() GetClusterPscConnectionArrayOutput
	ToGetClusterPscConnectionArrayOutputWithContext(context.Context) GetClusterPscConnectionArrayOutput
}

type GetClusterPscConnectionArray []GetClusterPscConnectionInput

func (GetClusterPscConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterPscConnection)(nil)).Elem()
}

func (i GetClusterPscConnectionArray) ToGetClusterPscConnectionArrayOutput() GetClusterPscConnectionArrayOutput {
	return i.ToGetClusterPscConnectionArrayOutputWithContext(context.Background())
}

func (i GetClusterPscConnectionArray) ToGetClusterPscConnectionArrayOutputWithContext(ctx context.Context) GetClusterPscConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterPscConnectionArrayOutput)
}

type GetClusterPscConnectionOutput struct{ *pulumi.OutputState }

func (GetClusterPscConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterPscConnection)(nil)).Elem()
}

func (o GetClusterPscConnectionOutput) ToGetClusterPscConnectionOutput() GetClusterPscConnectionOutput {
	return o
}

func (o GetClusterPscConnectionOutput) ToGetClusterPscConnectionOutputWithContext(ctx context.Context) GetClusterPscConnectionOutput {
	return o
}

// Output only. The IP allocated on the consumer network for the PSC forwarding rule.
func (o GetClusterPscConnectionOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterPscConnection) string { return v.Address }).(pulumi.StringOutput)
}

// Output only. The URI of the consumer side forwarding rule. Example: projects/{projectNumOrId}/regions/us-east1/forwardingRules/{resourceId}.
func (o GetClusterPscConnectionOutput) ForwardingRule() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterPscConnection) string { return v.ForwardingRule }).(pulumi.StringOutput)
}

// The consumer network where the IP address resides, in the form of projects/{projectId}/global/networks/{network_id}.
func (o GetClusterPscConnectionOutput) Network() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterPscConnection) string { return v.Network }).(pulumi.StringOutput)
}

// Output only. The consumer projectId where the forwarding rule is created from.
func (o GetClusterPscConnectionOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterPscConnection) string { return v.ProjectId }).(pulumi.StringOutput)
}

// Output only. The PSC connection id of the forwarding rule connected to the service attachment.
func (o GetClusterPscConnectionOutput) PscConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterPscConnection) string { return v.PscConnectionId }).(pulumi.StringOutput)
}

type GetClusterPscConnectionArrayOutput struct{ *pulumi.OutputState }

func (GetClusterPscConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterPscConnection)(nil)).Elem()
}

func (o GetClusterPscConnectionArrayOutput) ToGetClusterPscConnectionArrayOutput() GetClusterPscConnectionArrayOutput {
	return o
}

func (o GetClusterPscConnectionArrayOutput) ToGetClusterPscConnectionArrayOutputWithContext(ctx context.Context) GetClusterPscConnectionArrayOutput {
	return o
}

func (o GetClusterPscConnectionArrayOutput) Index(i pulumi.IntInput) GetClusterPscConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterPscConnection {
		return vs[0].([]GetClusterPscConnection)[vs[1].(int)]
	}).(GetClusterPscConnectionOutput)
}

type GetClusterPscServiceAttachment struct {
	// Type of a PSC connection targeting this service attachment.
	ConnectionType string `pulumi:"connectionType"`
	// Service attachment URI which your self-created PscConnection should use as
	ServiceAttachment string `pulumi:"serviceAttachment"`
}

// GetClusterPscServiceAttachmentInput is an input type that accepts GetClusterPscServiceAttachmentArgs and GetClusterPscServiceAttachmentOutput values.
// You can construct a concrete instance of `GetClusterPscServiceAttachmentInput` via:
//
//	GetClusterPscServiceAttachmentArgs{...}
type GetClusterPscServiceAttachmentInput interface {
	pulumi.Input

	ToGetClusterPscServiceAttachmentOutput() GetClusterPscServiceAttachmentOutput
	ToGetClusterPscServiceAttachmentOutputWithContext(context.Context) GetClusterPscServiceAttachmentOutput
}

type GetClusterPscServiceAttachmentArgs struct {
	// Type of a PSC connection targeting this service attachment.
	ConnectionType pulumi.StringInput `pulumi:"connectionType"`
	// Service attachment URI which your self-created PscConnection should use as
	ServiceAttachment pulumi.StringInput `pulumi:"serviceAttachment"`
}

func (GetClusterPscServiceAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterPscServiceAttachment)(nil)).Elem()
}

func (i GetClusterPscServiceAttachmentArgs) ToGetClusterPscServiceAttachmentOutput() GetClusterPscServiceAttachmentOutput {
	return i.ToGetClusterPscServiceAttachmentOutputWithContext(context.Background())
}

func (i GetClusterPscServiceAttachmentArgs) ToGetClusterPscServiceAttachmentOutputWithContext(ctx context.Context) GetClusterPscServiceAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterPscServiceAttachmentOutput)
}

// GetClusterPscServiceAttachmentArrayInput is an input type that accepts GetClusterPscServiceAttachmentArray and GetClusterPscServiceAttachmentArrayOutput values.
// You can construct a concrete instance of `GetClusterPscServiceAttachmentArrayInput` via:
//
//	GetClusterPscServiceAttachmentArray{ GetClusterPscServiceAttachmentArgs{...} }
type GetClusterPscServiceAttachmentArrayInput interface {
	pulumi.Input

	ToGetClusterPscServiceAttachmentArrayOutput() GetClusterPscServiceAttachmentArrayOutput
	ToGetClusterPscServiceAttachmentArrayOutputWithContext(context.Context) GetClusterPscServiceAttachmentArrayOutput
}

type GetClusterPscServiceAttachmentArray []GetClusterPscServiceAttachmentInput

func (GetClusterPscServiceAttachmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterPscServiceAttachment)(nil)).Elem()
}

func (i GetClusterPscServiceAttachmentArray) ToGetClusterPscServiceAttachmentArrayOutput() GetClusterPscServiceAttachmentArrayOutput {
	return i.ToGetClusterPscServiceAttachmentArrayOutputWithContext(context.Background())
}

func (i GetClusterPscServiceAttachmentArray) ToGetClusterPscServiceAttachmentArrayOutputWithContext(ctx context.Context) GetClusterPscServiceAttachmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterPscServiceAttachmentArrayOutput)
}

type GetClusterPscServiceAttachmentOutput struct{ *pulumi.OutputState }

func (GetClusterPscServiceAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterPscServiceAttachment)(nil)).Elem()
}

func (o GetClusterPscServiceAttachmentOutput) ToGetClusterPscServiceAttachmentOutput() GetClusterPscServiceAttachmentOutput {
	return o
}

func (o GetClusterPscServiceAttachmentOutput) ToGetClusterPscServiceAttachmentOutputWithContext(ctx context.Context) GetClusterPscServiceAttachmentOutput {
	return o
}

// Type of a PSC connection targeting this service attachment.
func (o GetClusterPscServiceAttachmentOutput) ConnectionType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterPscServiceAttachment) string { return v.ConnectionType }).(pulumi.StringOutput)
}

// Service attachment URI which your self-created PscConnection should use as
func (o GetClusterPscServiceAttachmentOutput) ServiceAttachment() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterPscServiceAttachment) string { return v.ServiceAttachment }).(pulumi.StringOutput)
}

type GetClusterPscServiceAttachmentArrayOutput struct{ *pulumi.OutputState }

func (GetClusterPscServiceAttachmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterPscServiceAttachment)(nil)).Elem()
}

func (o GetClusterPscServiceAttachmentArrayOutput) ToGetClusterPscServiceAttachmentArrayOutput() GetClusterPscServiceAttachmentArrayOutput {
	return o
}

func (o GetClusterPscServiceAttachmentArrayOutput) ToGetClusterPscServiceAttachmentArrayOutputWithContext(ctx context.Context) GetClusterPscServiceAttachmentArrayOutput {
	return o
}

func (o GetClusterPscServiceAttachmentArrayOutput) Index(i pulumi.IntInput) GetClusterPscServiceAttachmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterPscServiceAttachment {
		return vs[0].([]GetClusterPscServiceAttachment)[vs[1].(int)]
	}).(GetClusterPscServiceAttachmentOutput)
}

type GetClusterStateInfo struct {
	// A nested object resource.
	UpdateInfos []GetClusterStateInfoUpdateInfo `pulumi:"updateInfos"`
}

// GetClusterStateInfoInput is an input type that accepts GetClusterStateInfoArgs and GetClusterStateInfoOutput values.
// You can construct a concrete instance of `GetClusterStateInfoInput` via:
//
//	GetClusterStateInfoArgs{...}
type GetClusterStateInfoInput interface {
	pulumi.Input

	ToGetClusterStateInfoOutput() GetClusterStateInfoOutput
	ToGetClusterStateInfoOutputWithContext(context.Context) GetClusterStateInfoOutput
}

type GetClusterStateInfoArgs struct {
	// A nested object resource.
	UpdateInfos GetClusterStateInfoUpdateInfoArrayInput `pulumi:"updateInfos"`
}

func (GetClusterStateInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterStateInfo)(nil)).Elem()
}

func (i GetClusterStateInfoArgs) ToGetClusterStateInfoOutput() GetClusterStateInfoOutput {
	return i.ToGetClusterStateInfoOutputWithContext(context.Background())
}

func (i GetClusterStateInfoArgs) ToGetClusterStateInfoOutputWithContext(ctx context.Context) GetClusterStateInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterStateInfoOutput)
}

// GetClusterStateInfoArrayInput is an input type that accepts GetClusterStateInfoArray and GetClusterStateInfoArrayOutput values.
// You can construct a concrete instance of `GetClusterStateInfoArrayInput` via:
//
//	GetClusterStateInfoArray{ GetClusterStateInfoArgs{...} }
type GetClusterStateInfoArrayInput interface {
	pulumi.Input

	ToGetClusterStateInfoArrayOutput() GetClusterStateInfoArrayOutput
	ToGetClusterStateInfoArrayOutputWithContext(context.Context) GetClusterStateInfoArrayOutput
}

type GetClusterStateInfoArray []GetClusterStateInfoInput

func (GetClusterStateInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterStateInfo)(nil)).Elem()
}

func (i GetClusterStateInfoArray) ToGetClusterStateInfoArrayOutput() GetClusterStateInfoArrayOutput {
	return i.ToGetClusterStateInfoArrayOutputWithContext(context.Background())
}

func (i GetClusterStateInfoArray) ToGetClusterStateInfoArrayOutputWithContext(ctx context.Context) GetClusterStateInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterStateInfoArrayOutput)
}

type GetClusterStateInfoOutput struct{ *pulumi.OutputState }

func (GetClusterStateInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterStateInfo)(nil)).Elem()
}

func (o GetClusterStateInfoOutput) ToGetClusterStateInfoOutput() GetClusterStateInfoOutput {
	return o
}

func (o GetClusterStateInfoOutput) ToGetClusterStateInfoOutputWithContext(ctx context.Context) GetClusterStateInfoOutput {
	return o
}

// A nested object resource.
func (o GetClusterStateInfoOutput) UpdateInfos() GetClusterStateInfoUpdateInfoArrayOutput {
	return o.ApplyT(func(v GetClusterStateInfo) []GetClusterStateInfoUpdateInfo { return v.UpdateInfos }).(GetClusterStateInfoUpdateInfoArrayOutput)
}

type GetClusterStateInfoArrayOutput struct{ *pulumi.OutputState }

func (GetClusterStateInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterStateInfo)(nil)).Elem()
}

func (o GetClusterStateInfoArrayOutput) ToGetClusterStateInfoArrayOutput() GetClusterStateInfoArrayOutput {
	return o
}

func (o GetClusterStateInfoArrayOutput) ToGetClusterStateInfoArrayOutputWithContext(ctx context.Context) GetClusterStateInfoArrayOutput {
	return o
}

func (o GetClusterStateInfoArrayOutput) Index(i pulumi.IntInput) GetClusterStateInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterStateInfo {
		return vs[0].([]GetClusterStateInfo)[vs[1].(int)]
	}).(GetClusterStateInfoOutput)
}

type GetClusterStateInfoUpdateInfo struct {
	// Target number of replica nodes per shard.
	TargetReplicaCount int `pulumi:"targetReplicaCount"`
	// Target number of shards for redis cluster.
	TargetShardCount int `pulumi:"targetShardCount"`
}

// GetClusterStateInfoUpdateInfoInput is an input type that accepts GetClusterStateInfoUpdateInfoArgs and GetClusterStateInfoUpdateInfoOutput values.
// You can construct a concrete instance of `GetClusterStateInfoUpdateInfoInput` via:
//
//	GetClusterStateInfoUpdateInfoArgs{...}
type GetClusterStateInfoUpdateInfoInput interface {
	pulumi.Input

	ToGetClusterStateInfoUpdateInfoOutput() GetClusterStateInfoUpdateInfoOutput
	ToGetClusterStateInfoUpdateInfoOutputWithContext(context.Context) GetClusterStateInfoUpdateInfoOutput
}

type GetClusterStateInfoUpdateInfoArgs struct {
	// Target number of replica nodes per shard.
	TargetReplicaCount pulumi.IntInput `pulumi:"targetReplicaCount"`
	// Target number of shards for redis cluster.
	TargetShardCount pulumi.IntInput `pulumi:"targetShardCount"`
}

func (GetClusterStateInfoUpdateInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterStateInfoUpdateInfo)(nil)).Elem()
}

func (i GetClusterStateInfoUpdateInfoArgs) ToGetClusterStateInfoUpdateInfoOutput() GetClusterStateInfoUpdateInfoOutput {
	return i.ToGetClusterStateInfoUpdateInfoOutputWithContext(context.Background())
}

func (i GetClusterStateInfoUpdateInfoArgs) ToGetClusterStateInfoUpdateInfoOutputWithContext(ctx context.Context) GetClusterStateInfoUpdateInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterStateInfoUpdateInfoOutput)
}

// GetClusterStateInfoUpdateInfoArrayInput is an input type that accepts GetClusterStateInfoUpdateInfoArray and GetClusterStateInfoUpdateInfoArrayOutput values.
// You can construct a concrete instance of `GetClusterStateInfoUpdateInfoArrayInput` via:
//
//	GetClusterStateInfoUpdateInfoArray{ GetClusterStateInfoUpdateInfoArgs{...} }
type GetClusterStateInfoUpdateInfoArrayInput interface {
	pulumi.Input

	ToGetClusterStateInfoUpdateInfoArrayOutput() GetClusterStateInfoUpdateInfoArrayOutput
	ToGetClusterStateInfoUpdateInfoArrayOutputWithContext(context.Context) GetClusterStateInfoUpdateInfoArrayOutput
}

type GetClusterStateInfoUpdateInfoArray []GetClusterStateInfoUpdateInfoInput

func (GetClusterStateInfoUpdateInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterStateInfoUpdateInfo)(nil)).Elem()
}

func (i GetClusterStateInfoUpdateInfoArray) ToGetClusterStateInfoUpdateInfoArrayOutput() GetClusterStateInfoUpdateInfoArrayOutput {
	return i.ToGetClusterStateInfoUpdateInfoArrayOutputWithContext(context.Background())
}

func (i GetClusterStateInfoUpdateInfoArray) ToGetClusterStateInfoUpdateInfoArrayOutputWithContext(ctx context.Context) GetClusterStateInfoUpdateInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterStateInfoUpdateInfoArrayOutput)
}

type GetClusterStateInfoUpdateInfoOutput struct{ *pulumi.OutputState }

func (GetClusterStateInfoUpdateInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterStateInfoUpdateInfo)(nil)).Elem()
}

func (o GetClusterStateInfoUpdateInfoOutput) ToGetClusterStateInfoUpdateInfoOutput() GetClusterStateInfoUpdateInfoOutput {
	return o
}

func (o GetClusterStateInfoUpdateInfoOutput) ToGetClusterStateInfoUpdateInfoOutputWithContext(ctx context.Context) GetClusterStateInfoUpdateInfoOutput {
	return o
}

// Target number of replica nodes per shard.
func (o GetClusterStateInfoUpdateInfoOutput) TargetReplicaCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterStateInfoUpdateInfo) int { return v.TargetReplicaCount }).(pulumi.IntOutput)
}

// Target number of shards for redis cluster.
func (o GetClusterStateInfoUpdateInfoOutput) TargetShardCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterStateInfoUpdateInfo) int { return v.TargetShardCount }).(pulumi.IntOutput)
}

type GetClusterStateInfoUpdateInfoArrayOutput struct{ *pulumi.OutputState }

func (GetClusterStateInfoUpdateInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterStateInfoUpdateInfo)(nil)).Elem()
}

func (o GetClusterStateInfoUpdateInfoArrayOutput) ToGetClusterStateInfoUpdateInfoArrayOutput() GetClusterStateInfoUpdateInfoArrayOutput {
	return o
}

func (o GetClusterStateInfoUpdateInfoArrayOutput) ToGetClusterStateInfoUpdateInfoArrayOutputWithContext(ctx context.Context) GetClusterStateInfoUpdateInfoArrayOutput {
	return o
}

func (o GetClusterStateInfoUpdateInfoArrayOutput) Index(i pulumi.IntInput) GetClusterStateInfoUpdateInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterStateInfoUpdateInfo {
		return vs[0].([]GetClusterStateInfoUpdateInfo)[vs[1].(int)]
	}).(GetClusterStateInfoUpdateInfoOutput)
}

type GetClusterZoneDistributionConfig struct {
	// Immutable. The mode for zone distribution for Memorystore Redis cluster.
	// If not provided, MULTI_ZONE will be used as default Possible values: ["MULTI_ZONE", "SINGLE_ZONE"]
	Mode string `pulumi:"mode"`
	// Immutable. The zone for single zone Memorystore Redis cluster.
	Zone string `pulumi:"zone"`
}

// GetClusterZoneDistributionConfigInput is an input type that accepts GetClusterZoneDistributionConfigArgs and GetClusterZoneDistributionConfigOutput values.
// You can construct a concrete instance of `GetClusterZoneDistributionConfigInput` via:
//
//	GetClusterZoneDistributionConfigArgs{...}
type GetClusterZoneDistributionConfigInput interface {
	pulumi.Input

	ToGetClusterZoneDistributionConfigOutput() GetClusterZoneDistributionConfigOutput
	ToGetClusterZoneDistributionConfigOutputWithContext(context.Context) GetClusterZoneDistributionConfigOutput
}

type GetClusterZoneDistributionConfigArgs struct {
	// Immutable. The mode for zone distribution for Memorystore Redis cluster.
	// If not provided, MULTI_ZONE will be used as default Possible values: ["MULTI_ZONE", "SINGLE_ZONE"]
	Mode pulumi.StringInput `pulumi:"mode"`
	// Immutable. The zone for single zone Memorystore Redis cluster.
	Zone pulumi.StringInput `pulumi:"zone"`
}

func (GetClusterZoneDistributionConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterZoneDistributionConfig)(nil)).Elem()
}

func (i GetClusterZoneDistributionConfigArgs) ToGetClusterZoneDistributionConfigOutput() GetClusterZoneDistributionConfigOutput {
	return i.ToGetClusterZoneDistributionConfigOutputWithContext(context.Background())
}

func (i GetClusterZoneDistributionConfigArgs) ToGetClusterZoneDistributionConfigOutputWithContext(ctx context.Context) GetClusterZoneDistributionConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterZoneDistributionConfigOutput)
}

// GetClusterZoneDistributionConfigArrayInput is an input type that accepts GetClusterZoneDistributionConfigArray and GetClusterZoneDistributionConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterZoneDistributionConfigArrayInput` via:
//
//	GetClusterZoneDistributionConfigArray{ GetClusterZoneDistributionConfigArgs{...} }
type GetClusterZoneDistributionConfigArrayInput interface {
	pulumi.Input

	ToGetClusterZoneDistributionConfigArrayOutput() GetClusterZoneDistributionConfigArrayOutput
	ToGetClusterZoneDistributionConfigArrayOutputWithContext(context.Context) GetClusterZoneDistributionConfigArrayOutput
}

type GetClusterZoneDistributionConfigArray []GetClusterZoneDistributionConfigInput

func (GetClusterZoneDistributionConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterZoneDistributionConfig)(nil)).Elem()
}

func (i GetClusterZoneDistributionConfigArray) ToGetClusterZoneDistributionConfigArrayOutput() GetClusterZoneDistributionConfigArrayOutput {
	return i.ToGetClusterZoneDistributionConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterZoneDistributionConfigArray) ToGetClusterZoneDistributionConfigArrayOutputWithContext(ctx context.Context) GetClusterZoneDistributionConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterZoneDistributionConfigArrayOutput)
}

type GetClusterZoneDistributionConfigOutput struct{ *pulumi.OutputState }

func (GetClusterZoneDistributionConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterZoneDistributionConfig)(nil)).Elem()
}

func (o GetClusterZoneDistributionConfigOutput) ToGetClusterZoneDistributionConfigOutput() GetClusterZoneDistributionConfigOutput {
	return o
}

func (o GetClusterZoneDistributionConfigOutput) ToGetClusterZoneDistributionConfigOutputWithContext(ctx context.Context) GetClusterZoneDistributionConfigOutput {
	return o
}

// Immutable. The mode for zone distribution for Memorystore Redis cluster.
// If not provided, MULTI_ZONE will be used as default Possible values: ["MULTI_ZONE", "SINGLE_ZONE"]
func (o GetClusterZoneDistributionConfigOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterZoneDistributionConfig) string { return v.Mode }).(pulumi.StringOutput)
}

// Immutable. The zone for single zone Memorystore Redis cluster.
func (o GetClusterZoneDistributionConfigOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterZoneDistributionConfig) string { return v.Zone }).(pulumi.StringOutput)
}

type GetClusterZoneDistributionConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterZoneDistributionConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterZoneDistributionConfig)(nil)).Elem()
}

func (o GetClusterZoneDistributionConfigArrayOutput) ToGetClusterZoneDistributionConfigArrayOutput() GetClusterZoneDistributionConfigArrayOutput {
	return o
}

func (o GetClusterZoneDistributionConfigArrayOutput) ToGetClusterZoneDistributionConfigArrayOutputWithContext(ctx context.Context) GetClusterZoneDistributionConfigArrayOutput {
	return o
}

func (o GetClusterZoneDistributionConfigArrayOutput) Index(i pulumi.IntInput) GetClusterZoneDistributionConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterZoneDistributionConfig {
		return vs[0].([]GetClusterZoneDistributionConfig)[vs[1].(int)]
	}).(GetClusterZoneDistributionConfigOutput)
}

type GetInstanceMaintenancePolicy struct {
	// Output only. The time when the policy was created.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits.
	CreateTime string `pulumi:"createTime"`
	// Optional. Description of what this policy is for.
	// Create/Update methods return INVALID_ARGUMENT if the
	// length is greater than 512.
	Description string `pulumi:"description"`
	// Output only. The time when the policy was last updated.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits.
	UpdateTime string `pulumi:"updateTime"`
	// Optional. Maintenance window that is applied to resources covered by this policy.
	// Minimum 1. For the current version, the maximum number
	// of weeklyWindow is expected to be one.
	WeeklyMaintenanceWindows []GetInstanceMaintenancePolicyWeeklyMaintenanceWindow `pulumi:"weeklyMaintenanceWindows"`
}

// GetInstanceMaintenancePolicyInput is an input type that accepts GetInstanceMaintenancePolicyArgs and GetInstanceMaintenancePolicyOutput values.
// You can construct a concrete instance of `GetInstanceMaintenancePolicyInput` via:
//
//	GetInstanceMaintenancePolicyArgs{...}
type GetInstanceMaintenancePolicyInput interface {
	pulumi.Input

	ToGetInstanceMaintenancePolicyOutput() GetInstanceMaintenancePolicyOutput
	ToGetInstanceMaintenancePolicyOutputWithContext(context.Context) GetInstanceMaintenancePolicyOutput
}

type GetInstanceMaintenancePolicyArgs struct {
	// Output only. The time when the policy was created.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// Optional. Description of what this policy is for.
	// Create/Update methods return INVALID_ARGUMENT if the
	// length is greater than 512.
	Description pulumi.StringInput `pulumi:"description"`
	// Output only. The time when the policy was last updated.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
	// Optional. Maintenance window that is applied to resources covered by this policy.
	// Minimum 1. For the current version, the maximum number
	// of weeklyWindow is expected to be one.
	WeeklyMaintenanceWindows GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayInput `pulumi:"weeklyMaintenanceWindows"`
}

func (GetInstanceMaintenancePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceMaintenancePolicy)(nil)).Elem()
}

func (i GetInstanceMaintenancePolicyArgs) ToGetInstanceMaintenancePolicyOutput() GetInstanceMaintenancePolicyOutput {
	return i.ToGetInstanceMaintenancePolicyOutputWithContext(context.Background())
}

func (i GetInstanceMaintenancePolicyArgs) ToGetInstanceMaintenancePolicyOutputWithContext(ctx context.Context) GetInstanceMaintenancePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceMaintenancePolicyOutput)
}

// GetInstanceMaintenancePolicyArrayInput is an input type that accepts GetInstanceMaintenancePolicyArray and GetInstanceMaintenancePolicyArrayOutput values.
// You can construct a concrete instance of `GetInstanceMaintenancePolicyArrayInput` via:
//
//	GetInstanceMaintenancePolicyArray{ GetInstanceMaintenancePolicyArgs{...} }
type GetInstanceMaintenancePolicyArrayInput interface {
	pulumi.Input

	ToGetInstanceMaintenancePolicyArrayOutput() GetInstanceMaintenancePolicyArrayOutput
	ToGetInstanceMaintenancePolicyArrayOutputWithContext(context.Context) GetInstanceMaintenancePolicyArrayOutput
}

type GetInstanceMaintenancePolicyArray []GetInstanceMaintenancePolicyInput

func (GetInstanceMaintenancePolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceMaintenancePolicy)(nil)).Elem()
}

func (i GetInstanceMaintenancePolicyArray) ToGetInstanceMaintenancePolicyArrayOutput() GetInstanceMaintenancePolicyArrayOutput {
	return i.ToGetInstanceMaintenancePolicyArrayOutputWithContext(context.Background())
}

func (i GetInstanceMaintenancePolicyArray) ToGetInstanceMaintenancePolicyArrayOutputWithContext(ctx context.Context) GetInstanceMaintenancePolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceMaintenancePolicyArrayOutput)
}

type GetInstanceMaintenancePolicyOutput struct{ *pulumi.OutputState }

func (GetInstanceMaintenancePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceMaintenancePolicy)(nil)).Elem()
}

func (o GetInstanceMaintenancePolicyOutput) ToGetInstanceMaintenancePolicyOutput() GetInstanceMaintenancePolicyOutput {
	return o
}

func (o GetInstanceMaintenancePolicyOutput) ToGetInstanceMaintenancePolicyOutputWithContext(ctx context.Context) GetInstanceMaintenancePolicyOutput {
	return o
}

// Output only. The time when the policy was created.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
// resolution and up to nine fractional digits.
func (o GetInstanceMaintenancePolicyOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceMaintenancePolicy) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Optional. Description of what this policy is for.
// Create/Update methods return INVALID_ARGUMENT if the
// length is greater than 512.
func (o GetInstanceMaintenancePolicyOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceMaintenancePolicy) string { return v.Description }).(pulumi.StringOutput)
}

// Output only. The time when the policy was last updated.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
// resolution and up to nine fractional digits.
func (o GetInstanceMaintenancePolicyOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceMaintenancePolicy) string { return v.UpdateTime }).(pulumi.StringOutput)
}

// Optional. Maintenance window that is applied to resources covered by this policy.
// Minimum 1. For the current version, the maximum number
// of weeklyWindow is expected to be one.
func (o GetInstanceMaintenancePolicyOutput) WeeklyMaintenanceWindows() GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput {
	return o.ApplyT(func(v GetInstanceMaintenancePolicy) []GetInstanceMaintenancePolicyWeeklyMaintenanceWindow {
		return v.WeeklyMaintenanceWindows
	}).(GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput)
}

type GetInstanceMaintenancePolicyArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceMaintenancePolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceMaintenancePolicy)(nil)).Elem()
}

func (o GetInstanceMaintenancePolicyArrayOutput) ToGetInstanceMaintenancePolicyArrayOutput() GetInstanceMaintenancePolicyArrayOutput {
	return o
}

func (o GetInstanceMaintenancePolicyArrayOutput) ToGetInstanceMaintenancePolicyArrayOutputWithContext(ctx context.Context) GetInstanceMaintenancePolicyArrayOutput {
	return o
}

func (o GetInstanceMaintenancePolicyArrayOutput) Index(i pulumi.IntInput) GetInstanceMaintenancePolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceMaintenancePolicy {
		return vs[0].([]GetInstanceMaintenancePolicy)[vs[1].(int)]
	}).(GetInstanceMaintenancePolicyOutput)
}

type GetInstanceMaintenancePolicyWeeklyMaintenanceWindow struct {
	// Required. The day of week that maintenance updates occur.
	//
	// - DAY_OF_WEEK_UNSPECIFIED: The day of the week is unspecified.
	// - MONDAY: Monday
	// - TUESDAY: Tuesday
	// - WEDNESDAY: Wednesday
	// - THURSDAY: Thursday
	// - FRIDAY: Friday
	// - SATURDAY: Saturday
	// - SUNDAY: Sunday Possible values: ["DAY_OF_WEEK_UNSPECIFIED", "MONDAY", "TUESDAY", "WEDNESDAY", "THURSDAY", "FRIDAY", "SATURDAY", "SUNDAY"]
	Day string `pulumi:"day"`
	// Output only. Duration of the maintenance window.
	// The current window is fixed at 1 hour.
	// A duration in seconds with up to nine fractional digits,
	// terminated by 's'. Example: "3.5s".
	Duration string `pulumi:"duration"`
	// Required. Start time of the window in UTC time.
	StartTimes []GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTime `pulumi:"startTimes"`
}

// GetInstanceMaintenancePolicyWeeklyMaintenanceWindowInput is an input type that accepts GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArgs and GetInstanceMaintenancePolicyWeeklyMaintenanceWindowOutput values.
// You can construct a concrete instance of `GetInstanceMaintenancePolicyWeeklyMaintenanceWindowInput` via:
//
//	GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArgs{...}
type GetInstanceMaintenancePolicyWeeklyMaintenanceWindowInput interface {
	pulumi.Input

	ToGetInstanceMaintenancePolicyWeeklyMaintenanceWindowOutput() GetInstanceMaintenancePolicyWeeklyMaintenanceWindowOutput
	ToGetInstanceMaintenancePolicyWeeklyMaintenanceWindowOutputWithContext(context.Context) GetInstanceMaintenancePolicyWeeklyMaintenanceWindowOutput
}

type GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArgs struct {
	// Required. The day of week that maintenance updates occur.
	//
	// - DAY_OF_WEEK_UNSPECIFIED: The day of the week is unspecified.
	// - MONDAY: Monday
	// - TUESDAY: Tuesday
	// - WEDNESDAY: Wednesday
	// - THURSDAY: Thursday
	// - FRIDAY: Friday
	// - SATURDAY: Saturday
	// - SUNDAY: Sunday Possible values: ["DAY_OF_WEEK_UNSPECIFIED", "MONDAY", "TUESDAY", "WEDNESDAY", "THURSDAY", "FRIDAY", "SATURDAY", "SUNDAY"]
	Day pulumi.StringInput `pulumi:"day"`
	// Output only. Duration of the maintenance window.
	// The current window is fixed at 1 hour.
	// A duration in seconds with up to nine fractional digits,
	// terminated by 's'. Example: "3.5s".
	Duration pulumi.StringInput `pulumi:"duration"`
	// Required. Start time of the window in UTC time.
	StartTimes GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayInput `pulumi:"startTimes"`
}

func (GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceMaintenancePolicyWeeklyMaintenanceWindow)(nil)).Elem()
}

func (i GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArgs) ToGetInstanceMaintenancePolicyWeeklyMaintenanceWindowOutput() GetInstanceMaintenancePolicyWeeklyMaintenanceWindowOutput {
	return i.ToGetInstanceMaintenancePolicyWeeklyMaintenanceWindowOutputWithContext(context.Background())
}

func (i GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArgs) ToGetInstanceMaintenancePolicyWeeklyMaintenanceWindowOutputWithContext(ctx context.Context) GetInstanceMaintenancePolicyWeeklyMaintenanceWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceMaintenancePolicyWeeklyMaintenanceWindowOutput)
}

// GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayInput is an input type that accepts GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArray and GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput values.
// You can construct a concrete instance of `GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayInput` via:
//
//	GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArray{ GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArgs{...} }
type GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayInput interface {
	pulumi.Input

	ToGetInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput() GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput
	ToGetInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutputWithContext(context.Context) GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput
}

type GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArray []GetInstanceMaintenancePolicyWeeklyMaintenanceWindowInput

func (GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceMaintenancePolicyWeeklyMaintenanceWindow)(nil)).Elem()
}

func (i GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArray) ToGetInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput() GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput {
	return i.ToGetInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutputWithContext(context.Background())
}

func (i GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArray) ToGetInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutputWithContext(ctx context.Context) GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput)
}

type GetInstanceMaintenancePolicyWeeklyMaintenanceWindowOutput struct{ *pulumi.OutputState }

func (GetInstanceMaintenancePolicyWeeklyMaintenanceWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceMaintenancePolicyWeeklyMaintenanceWindow)(nil)).Elem()
}

func (o GetInstanceMaintenancePolicyWeeklyMaintenanceWindowOutput) ToGetInstanceMaintenancePolicyWeeklyMaintenanceWindowOutput() GetInstanceMaintenancePolicyWeeklyMaintenanceWindowOutput {
	return o
}

func (o GetInstanceMaintenancePolicyWeeklyMaintenanceWindowOutput) ToGetInstanceMaintenancePolicyWeeklyMaintenanceWindowOutputWithContext(ctx context.Context) GetInstanceMaintenancePolicyWeeklyMaintenanceWindowOutput {
	return o
}

// Required. The day of week that maintenance updates occur.
//
// - DAY_OF_WEEK_UNSPECIFIED: The day of the week is unspecified.
// - MONDAY: Monday
// - TUESDAY: Tuesday
// - WEDNESDAY: Wednesday
// - THURSDAY: Thursday
// - FRIDAY: Friday
// - SATURDAY: Saturday
// - SUNDAY: Sunday Possible values: ["DAY_OF_WEEK_UNSPECIFIED", "MONDAY", "TUESDAY", "WEDNESDAY", "THURSDAY", "FRIDAY", "SATURDAY", "SUNDAY"]
func (o GetInstanceMaintenancePolicyWeeklyMaintenanceWindowOutput) Day() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceMaintenancePolicyWeeklyMaintenanceWindow) string { return v.Day }).(pulumi.StringOutput)
}

// Output only. Duration of the maintenance window.
// The current window is fixed at 1 hour.
// A duration in seconds with up to nine fractional digits,
// terminated by 's'. Example: "3.5s".
func (o GetInstanceMaintenancePolicyWeeklyMaintenanceWindowOutput) Duration() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceMaintenancePolicyWeeklyMaintenanceWindow) string { return v.Duration }).(pulumi.StringOutput)
}

// Required. Start time of the window in UTC time.
func (o GetInstanceMaintenancePolicyWeeklyMaintenanceWindowOutput) StartTimes() GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutput {
	return o.ApplyT(func(v GetInstanceMaintenancePolicyWeeklyMaintenanceWindow) []GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTime {
		return v.StartTimes
	}).(GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutput)
}

type GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceMaintenancePolicyWeeklyMaintenanceWindow)(nil)).Elem()
}

func (o GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput) ToGetInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput() GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput {
	return o
}

func (o GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput) ToGetInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutputWithContext(ctx context.Context) GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput {
	return o
}

func (o GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput) Index(i pulumi.IntInput) GetInstanceMaintenancePolicyWeeklyMaintenanceWindowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceMaintenancePolicyWeeklyMaintenanceWindow {
		return vs[0].([]GetInstanceMaintenancePolicyWeeklyMaintenanceWindow)[vs[1].(int)]
	}).(GetInstanceMaintenancePolicyWeeklyMaintenanceWindowOutput)
}

type GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTime struct {
	// Hours of day in 24 hour format. Should be from 0 to 23.
	// An API may choose to allow the value "24:00:00" for scenarios like business closing time.
	Hours int `pulumi:"hours"`
	// Minutes of hour of day. Must be from 0 to 59.
	Minutes int `pulumi:"minutes"`
	// Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
	Nanos int `pulumi:"nanos"`
	// Seconds of minutes of the time. Must normally be from 0 to 59.
	// An API may allow the value 60 if it allows leap-seconds.
	Seconds int `pulumi:"seconds"`
}

// GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeInput is an input type that accepts GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArgs and GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput values.
// You can construct a concrete instance of `GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeInput` via:
//
//	GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArgs{...}
type GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeInput interface {
	pulumi.Input

	ToGetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput() GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput
	ToGetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutputWithContext(context.Context) GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput
}

type GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArgs struct {
	// Hours of day in 24 hour format. Should be from 0 to 23.
	// An API may choose to allow the value "24:00:00" for scenarios like business closing time.
	Hours pulumi.IntInput `pulumi:"hours"`
	// Minutes of hour of day. Must be from 0 to 59.
	Minutes pulumi.IntInput `pulumi:"minutes"`
	// Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
	Nanos pulumi.IntInput `pulumi:"nanos"`
	// Seconds of minutes of the time. Must normally be from 0 to 59.
	// An API may allow the value 60 if it allows leap-seconds.
	Seconds pulumi.IntInput `pulumi:"seconds"`
}

func (GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTime)(nil)).Elem()
}

func (i GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArgs) ToGetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput() GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput {
	return i.ToGetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutputWithContext(context.Background())
}

func (i GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArgs) ToGetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutputWithContext(ctx context.Context) GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput)
}

// GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayInput is an input type that accepts GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArray and GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutput values.
// You can construct a concrete instance of `GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayInput` via:
//
//	GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArray{ GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArgs{...} }
type GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayInput interface {
	pulumi.Input

	ToGetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutput() GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutput
	ToGetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutputWithContext(context.Context) GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutput
}

type GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArray []GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeInput

func (GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTime)(nil)).Elem()
}

func (i GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArray) ToGetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutput() GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutput {
	return i.ToGetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutputWithContext(context.Background())
}

func (i GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArray) ToGetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutputWithContext(ctx context.Context) GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutput)
}

type GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput struct{ *pulumi.OutputState }

func (GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTime)(nil)).Elem()
}

func (o GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput) ToGetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput() GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput {
	return o
}

func (o GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput) ToGetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutputWithContext(ctx context.Context) GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput {
	return o
}

// Hours of day in 24 hour format. Should be from 0 to 23.
// An API may choose to allow the value "24:00:00" for scenarios like business closing time.
func (o GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput) Hours() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTime) int { return v.Hours }).(pulumi.IntOutput)
}

// Minutes of hour of day. Must be from 0 to 59.
func (o GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput) Minutes() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTime) int { return v.Minutes }).(pulumi.IntOutput)
}

// Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
func (o GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput) Nanos() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTime) int { return v.Nanos }).(pulumi.IntOutput)
}

// Seconds of minutes of the time. Must normally be from 0 to 59.
// An API may allow the value 60 if it allows leap-seconds.
func (o GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput) Seconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTime) int { return v.Seconds }).(pulumi.IntOutput)
}

type GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTime)(nil)).Elem()
}

func (o GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutput) ToGetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutput() GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutput {
	return o
}

func (o GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutput) ToGetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutputWithContext(ctx context.Context) GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutput {
	return o
}

func (o GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutput) Index(i pulumi.IntInput) GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTime {
		return vs[0].([]GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTime)[vs[1].(int)]
	}).(GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput)
}

type GetInstanceMaintenanceSchedule struct {
	// Output only. The end time of any upcoming scheduled maintenance for this instance.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits.
	EndTime string `pulumi:"endTime"`
	// Output only. The deadline that the maintenance schedule start time
	// can not go beyond, including reschedule.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits.
	ScheduleDeadlineTime string `pulumi:"scheduleDeadlineTime"`
	// Output only. The start time of any upcoming scheduled maintenance for this instance.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits.
	StartTime string `pulumi:"startTime"`
}

// GetInstanceMaintenanceScheduleInput is an input type that accepts GetInstanceMaintenanceScheduleArgs and GetInstanceMaintenanceScheduleOutput values.
// You can construct a concrete instance of `GetInstanceMaintenanceScheduleInput` via:
//
//	GetInstanceMaintenanceScheduleArgs{...}
type GetInstanceMaintenanceScheduleInput interface {
	pulumi.Input

	ToGetInstanceMaintenanceScheduleOutput() GetInstanceMaintenanceScheduleOutput
	ToGetInstanceMaintenanceScheduleOutputWithContext(context.Context) GetInstanceMaintenanceScheduleOutput
}

type GetInstanceMaintenanceScheduleArgs struct {
	// Output only. The end time of any upcoming scheduled maintenance for this instance.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits.
	EndTime pulumi.StringInput `pulumi:"endTime"`
	// Output only. The deadline that the maintenance schedule start time
	// can not go beyond, including reschedule.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits.
	ScheduleDeadlineTime pulumi.StringInput `pulumi:"scheduleDeadlineTime"`
	// Output only. The start time of any upcoming scheduled maintenance for this instance.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits.
	StartTime pulumi.StringInput `pulumi:"startTime"`
}

func (GetInstanceMaintenanceScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceMaintenanceSchedule)(nil)).Elem()
}

func (i GetInstanceMaintenanceScheduleArgs) ToGetInstanceMaintenanceScheduleOutput() GetInstanceMaintenanceScheduleOutput {
	return i.ToGetInstanceMaintenanceScheduleOutputWithContext(context.Background())
}

func (i GetInstanceMaintenanceScheduleArgs) ToGetInstanceMaintenanceScheduleOutputWithContext(ctx context.Context) GetInstanceMaintenanceScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceMaintenanceScheduleOutput)
}

// GetInstanceMaintenanceScheduleArrayInput is an input type that accepts GetInstanceMaintenanceScheduleArray and GetInstanceMaintenanceScheduleArrayOutput values.
// You can construct a concrete instance of `GetInstanceMaintenanceScheduleArrayInput` via:
//
//	GetInstanceMaintenanceScheduleArray{ GetInstanceMaintenanceScheduleArgs{...} }
type GetInstanceMaintenanceScheduleArrayInput interface {
	pulumi.Input

	ToGetInstanceMaintenanceScheduleArrayOutput() GetInstanceMaintenanceScheduleArrayOutput
	ToGetInstanceMaintenanceScheduleArrayOutputWithContext(context.Context) GetInstanceMaintenanceScheduleArrayOutput
}

type GetInstanceMaintenanceScheduleArray []GetInstanceMaintenanceScheduleInput

func (GetInstanceMaintenanceScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceMaintenanceSchedule)(nil)).Elem()
}

func (i GetInstanceMaintenanceScheduleArray) ToGetInstanceMaintenanceScheduleArrayOutput() GetInstanceMaintenanceScheduleArrayOutput {
	return i.ToGetInstanceMaintenanceScheduleArrayOutputWithContext(context.Background())
}

func (i GetInstanceMaintenanceScheduleArray) ToGetInstanceMaintenanceScheduleArrayOutputWithContext(ctx context.Context) GetInstanceMaintenanceScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceMaintenanceScheduleArrayOutput)
}

type GetInstanceMaintenanceScheduleOutput struct{ *pulumi.OutputState }

func (GetInstanceMaintenanceScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceMaintenanceSchedule)(nil)).Elem()
}

func (o GetInstanceMaintenanceScheduleOutput) ToGetInstanceMaintenanceScheduleOutput() GetInstanceMaintenanceScheduleOutput {
	return o
}

func (o GetInstanceMaintenanceScheduleOutput) ToGetInstanceMaintenanceScheduleOutputWithContext(ctx context.Context) GetInstanceMaintenanceScheduleOutput {
	return o
}

// Output only. The end time of any upcoming scheduled maintenance for this instance.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
// resolution and up to nine fractional digits.
func (o GetInstanceMaintenanceScheduleOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceMaintenanceSchedule) string { return v.EndTime }).(pulumi.StringOutput)
}

// Output only. The deadline that the maintenance schedule start time
// can not go beyond, including reschedule.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
// resolution and up to nine fractional digits.
func (o GetInstanceMaintenanceScheduleOutput) ScheduleDeadlineTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceMaintenanceSchedule) string { return v.ScheduleDeadlineTime }).(pulumi.StringOutput)
}

// Output only. The start time of any upcoming scheduled maintenance for this instance.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
// resolution and up to nine fractional digits.
func (o GetInstanceMaintenanceScheduleOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceMaintenanceSchedule) string { return v.StartTime }).(pulumi.StringOutput)
}

type GetInstanceMaintenanceScheduleArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceMaintenanceScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceMaintenanceSchedule)(nil)).Elem()
}

func (o GetInstanceMaintenanceScheduleArrayOutput) ToGetInstanceMaintenanceScheduleArrayOutput() GetInstanceMaintenanceScheduleArrayOutput {
	return o
}

func (o GetInstanceMaintenanceScheduleArrayOutput) ToGetInstanceMaintenanceScheduleArrayOutputWithContext(ctx context.Context) GetInstanceMaintenanceScheduleArrayOutput {
	return o
}

func (o GetInstanceMaintenanceScheduleArrayOutput) Index(i pulumi.IntInput) GetInstanceMaintenanceScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceMaintenanceSchedule {
		return vs[0].([]GetInstanceMaintenanceSchedule)[vs[1].(int)]
	}).(GetInstanceMaintenanceScheduleOutput)
}

type GetInstanceNode struct {
	// Node identifying string. e.g. 'node-0', 'node-1'
	Id string `pulumi:"id"`
	// Location of the node.
	Zone string `pulumi:"zone"`
}

// GetInstanceNodeInput is an input type that accepts GetInstanceNodeArgs and GetInstanceNodeOutput values.
// You can construct a concrete instance of `GetInstanceNodeInput` via:
//
//	GetInstanceNodeArgs{...}
type GetInstanceNodeInput interface {
	pulumi.Input

	ToGetInstanceNodeOutput() GetInstanceNodeOutput
	ToGetInstanceNodeOutputWithContext(context.Context) GetInstanceNodeOutput
}

type GetInstanceNodeArgs struct {
	// Node identifying string. e.g. 'node-0', 'node-1'
	Id pulumi.StringInput `pulumi:"id"`
	// Location of the node.
	Zone pulumi.StringInput `pulumi:"zone"`
}

func (GetInstanceNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceNode)(nil)).Elem()
}

func (i GetInstanceNodeArgs) ToGetInstanceNodeOutput() GetInstanceNodeOutput {
	return i.ToGetInstanceNodeOutputWithContext(context.Background())
}

func (i GetInstanceNodeArgs) ToGetInstanceNodeOutputWithContext(ctx context.Context) GetInstanceNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceNodeOutput)
}

// GetInstanceNodeArrayInput is an input type that accepts GetInstanceNodeArray and GetInstanceNodeArrayOutput values.
// You can construct a concrete instance of `GetInstanceNodeArrayInput` via:
//
//	GetInstanceNodeArray{ GetInstanceNodeArgs{...} }
type GetInstanceNodeArrayInput interface {
	pulumi.Input

	ToGetInstanceNodeArrayOutput() GetInstanceNodeArrayOutput
	ToGetInstanceNodeArrayOutputWithContext(context.Context) GetInstanceNodeArrayOutput
}

type GetInstanceNodeArray []GetInstanceNodeInput

func (GetInstanceNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceNode)(nil)).Elem()
}

func (i GetInstanceNodeArray) ToGetInstanceNodeArrayOutput() GetInstanceNodeArrayOutput {
	return i.ToGetInstanceNodeArrayOutputWithContext(context.Background())
}

func (i GetInstanceNodeArray) ToGetInstanceNodeArrayOutputWithContext(ctx context.Context) GetInstanceNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceNodeArrayOutput)
}

type GetInstanceNodeOutput struct{ *pulumi.OutputState }

func (GetInstanceNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceNode)(nil)).Elem()
}

func (o GetInstanceNodeOutput) ToGetInstanceNodeOutput() GetInstanceNodeOutput {
	return o
}

func (o GetInstanceNodeOutput) ToGetInstanceNodeOutputWithContext(ctx context.Context) GetInstanceNodeOutput {
	return o
}

// Node identifying string. e.g. 'node-0', 'node-1'
func (o GetInstanceNodeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceNode) string { return v.Id }).(pulumi.StringOutput)
}

// Location of the node.
func (o GetInstanceNodeOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceNode) string { return v.Zone }).(pulumi.StringOutput)
}

type GetInstanceNodeArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceNode)(nil)).Elem()
}

func (o GetInstanceNodeArrayOutput) ToGetInstanceNodeArrayOutput() GetInstanceNodeArrayOutput {
	return o
}

func (o GetInstanceNodeArrayOutput) ToGetInstanceNodeArrayOutputWithContext(ctx context.Context) GetInstanceNodeArrayOutput {
	return o
}

func (o GetInstanceNodeArrayOutput) Index(i pulumi.IntInput) GetInstanceNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceNode {
		return vs[0].([]GetInstanceNode)[vs[1].(int)]
	}).(GetInstanceNodeOutput)
}

type GetInstancePersistenceConfig struct {
	// Optional. Controls whether Persistence features are enabled. If not provided, the existing value will be used.
	//
	// - DISABLED: 	Persistence is disabled for the instance, and any existing snapshots are deleted.
	// - RDB: RDB based Persistence is enabled. Possible values: ["DISABLED", "RDB"]
	PersistenceMode string `pulumi:"persistenceMode"`
	// Output only. The next time that a snapshot attempt is scheduled to occur.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up
	// to nine fractional digits.
	// Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	RdbNextSnapshotTime string `pulumi:"rdbNextSnapshotTime"`
	// Optional. Available snapshot periods for scheduling.
	//
	// - ONE_HOUR:	Snapshot every 1 hour.
	// - SIX_HOURS:	Snapshot every 6 hours.
	// - TWELVE_HOURS:	Snapshot every 12 hours.
	// - TWENTY_FOUR_HOURS:	Snapshot every 24 hours. Possible values: ["ONE_HOUR", "SIX_HOURS", "TWELVE_HOURS", "TWENTY_FOUR_HOURS"]
	RdbSnapshotPeriod string `pulumi:"rdbSnapshotPeriod"`
	// Optional. Date and time that the first snapshot was/will be attempted,
	// and to which future snapshots will be aligned. If not provided,
	// the current time will be used.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution
	// and up to nine fractional digits.
	// Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	RdbSnapshotStartTime string `pulumi:"rdbSnapshotStartTime"`
}

// GetInstancePersistenceConfigInput is an input type that accepts GetInstancePersistenceConfigArgs and GetInstancePersistenceConfigOutput values.
// You can construct a concrete instance of `GetInstancePersistenceConfigInput` via:
//
//	GetInstancePersistenceConfigArgs{...}
type GetInstancePersistenceConfigInput interface {
	pulumi.Input

	ToGetInstancePersistenceConfigOutput() GetInstancePersistenceConfigOutput
	ToGetInstancePersistenceConfigOutputWithContext(context.Context) GetInstancePersistenceConfigOutput
}

type GetInstancePersistenceConfigArgs struct {
	// Optional. Controls whether Persistence features are enabled. If not provided, the existing value will be used.
	//
	// - DISABLED: 	Persistence is disabled for the instance, and any existing snapshots are deleted.
	// - RDB: RDB based Persistence is enabled. Possible values: ["DISABLED", "RDB"]
	PersistenceMode pulumi.StringInput `pulumi:"persistenceMode"`
	// Output only. The next time that a snapshot attempt is scheduled to occur.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up
	// to nine fractional digits.
	// Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	RdbNextSnapshotTime pulumi.StringInput `pulumi:"rdbNextSnapshotTime"`
	// Optional. Available snapshot periods for scheduling.
	//
	// - ONE_HOUR:	Snapshot every 1 hour.
	// - SIX_HOURS:	Snapshot every 6 hours.
	// - TWELVE_HOURS:	Snapshot every 12 hours.
	// - TWENTY_FOUR_HOURS:	Snapshot every 24 hours. Possible values: ["ONE_HOUR", "SIX_HOURS", "TWELVE_HOURS", "TWENTY_FOUR_HOURS"]
	RdbSnapshotPeriod pulumi.StringInput `pulumi:"rdbSnapshotPeriod"`
	// Optional. Date and time that the first snapshot was/will be attempted,
	// and to which future snapshots will be aligned. If not provided,
	// the current time will be used.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution
	// and up to nine fractional digits.
	// Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	RdbSnapshotStartTime pulumi.StringInput `pulumi:"rdbSnapshotStartTime"`
}

func (GetInstancePersistenceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancePersistenceConfig)(nil)).Elem()
}

func (i GetInstancePersistenceConfigArgs) ToGetInstancePersistenceConfigOutput() GetInstancePersistenceConfigOutput {
	return i.ToGetInstancePersistenceConfigOutputWithContext(context.Background())
}

func (i GetInstancePersistenceConfigArgs) ToGetInstancePersistenceConfigOutputWithContext(ctx context.Context) GetInstancePersistenceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancePersistenceConfigOutput)
}

// GetInstancePersistenceConfigArrayInput is an input type that accepts GetInstancePersistenceConfigArray and GetInstancePersistenceConfigArrayOutput values.
// You can construct a concrete instance of `GetInstancePersistenceConfigArrayInput` via:
//
//	GetInstancePersistenceConfigArray{ GetInstancePersistenceConfigArgs{...} }
type GetInstancePersistenceConfigArrayInput interface {
	pulumi.Input

	ToGetInstancePersistenceConfigArrayOutput() GetInstancePersistenceConfigArrayOutput
	ToGetInstancePersistenceConfigArrayOutputWithContext(context.Context) GetInstancePersistenceConfigArrayOutput
}

type GetInstancePersistenceConfigArray []GetInstancePersistenceConfigInput

func (GetInstancePersistenceConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancePersistenceConfig)(nil)).Elem()
}

func (i GetInstancePersistenceConfigArray) ToGetInstancePersistenceConfigArrayOutput() GetInstancePersistenceConfigArrayOutput {
	return i.ToGetInstancePersistenceConfigArrayOutputWithContext(context.Background())
}

func (i GetInstancePersistenceConfigArray) ToGetInstancePersistenceConfigArrayOutputWithContext(ctx context.Context) GetInstancePersistenceConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancePersistenceConfigArrayOutput)
}

type GetInstancePersistenceConfigOutput struct{ *pulumi.OutputState }

func (GetInstancePersistenceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancePersistenceConfig)(nil)).Elem()
}

func (o GetInstancePersistenceConfigOutput) ToGetInstancePersistenceConfigOutput() GetInstancePersistenceConfigOutput {
	return o
}

func (o GetInstancePersistenceConfigOutput) ToGetInstancePersistenceConfigOutputWithContext(ctx context.Context) GetInstancePersistenceConfigOutput {
	return o
}

// Optional. Controls whether Persistence features are enabled. If not provided, the existing value will be used.
//
// - DISABLED: 	Persistence is disabled for the instance, and any existing snapshots are deleted.
// - RDB: RDB based Persistence is enabled. Possible values: ["DISABLED", "RDB"]
func (o GetInstancePersistenceConfigOutput) PersistenceMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancePersistenceConfig) string { return v.PersistenceMode }).(pulumi.StringOutput)
}

// Output only. The next time that a snapshot attempt is scheduled to occur.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up
// to nine fractional digits.
// Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
func (o GetInstancePersistenceConfigOutput) RdbNextSnapshotTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancePersistenceConfig) string { return v.RdbNextSnapshotTime }).(pulumi.StringOutput)
}

// Optional. Available snapshot periods for scheduling.
//
// - ONE_HOUR:	Snapshot every 1 hour.
// - SIX_HOURS:	Snapshot every 6 hours.
// - TWELVE_HOURS:	Snapshot every 12 hours.
// - TWENTY_FOUR_HOURS:	Snapshot every 24 hours. Possible values: ["ONE_HOUR", "SIX_HOURS", "TWELVE_HOURS", "TWENTY_FOUR_HOURS"]
func (o GetInstancePersistenceConfigOutput) RdbSnapshotPeriod() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancePersistenceConfig) string { return v.RdbSnapshotPeriod }).(pulumi.StringOutput)
}

// Optional. Date and time that the first snapshot was/will be attempted,
// and to which future snapshots will be aligned. If not provided,
// the current time will be used.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution
// and up to nine fractional digits.
// Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
func (o GetInstancePersistenceConfigOutput) RdbSnapshotStartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancePersistenceConfig) string { return v.RdbSnapshotStartTime }).(pulumi.StringOutput)
}

type GetInstancePersistenceConfigArrayOutput struct{ *pulumi.OutputState }

func (GetInstancePersistenceConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancePersistenceConfig)(nil)).Elem()
}

func (o GetInstancePersistenceConfigArrayOutput) ToGetInstancePersistenceConfigArrayOutput() GetInstancePersistenceConfigArrayOutput {
	return o
}

func (o GetInstancePersistenceConfigArrayOutput) ToGetInstancePersistenceConfigArrayOutputWithContext(ctx context.Context) GetInstancePersistenceConfigArrayOutput {
	return o
}

func (o GetInstancePersistenceConfigArrayOutput) Index(i pulumi.IntInput) GetInstancePersistenceConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancePersistenceConfig {
		return vs[0].([]GetInstancePersistenceConfig)[vs[1].(int)]
	}).(GetInstancePersistenceConfigOutput)
}

type GetInstanceServerCaCert struct {
	// The certificate data in PEM format.
	Cert string `pulumi:"cert"`
	// The time when the certificate was created.
	CreateTime string `pulumi:"createTime"`
	// The time when the certificate expires.
	ExpireTime string `pulumi:"expireTime"`
	// Serial number, as extracted from the certificate.
	SerialNumber string `pulumi:"serialNumber"`
	// Sha1 Fingerprint of the certificate.
	Sha1Fingerprint string `pulumi:"sha1Fingerprint"`
}

// GetInstanceServerCaCertInput is an input type that accepts GetInstanceServerCaCertArgs and GetInstanceServerCaCertOutput values.
// You can construct a concrete instance of `GetInstanceServerCaCertInput` via:
//
//	GetInstanceServerCaCertArgs{...}
type GetInstanceServerCaCertInput interface {
	pulumi.Input

	ToGetInstanceServerCaCertOutput() GetInstanceServerCaCertOutput
	ToGetInstanceServerCaCertOutputWithContext(context.Context) GetInstanceServerCaCertOutput
}

type GetInstanceServerCaCertArgs struct {
	// The certificate data in PEM format.
	Cert pulumi.StringInput `pulumi:"cert"`
	// The time when the certificate was created.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The time when the certificate expires.
	ExpireTime pulumi.StringInput `pulumi:"expireTime"`
	// Serial number, as extracted from the certificate.
	SerialNumber pulumi.StringInput `pulumi:"serialNumber"`
	// Sha1 Fingerprint of the certificate.
	Sha1Fingerprint pulumi.StringInput `pulumi:"sha1Fingerprint"`
}

func (GetInstanceServerCaCertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceServerCaCert)(nil)).Elem()
}

func (i GetInstanceServerCaCertArgs) ToGetInstanceServerCaCertOutput() GetInstanceServerCaCertOutput {
	return i.ToGetInstanceServerCaCertOutputWithContext(context.Background())
}

func (i GetInstanceServerCaCertArgs) ToGetInstanceServerCaCertOutputWithContext(ctx context.Context) GetInstanceServerCaCertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceServerCaCertOutput)
}

// GetInstanceServerCaCertArrayInput is an input type that accepts GetInstanceServerCaCertArray and GetInstanceServerCaCertArrayOutput values.
// You can construct a concrete instance of `GetInstanceServerCaCertArrayInput` via:
//
//	GetInstanceServerCaCertArray{ GetInstanceServerCaCertArgs{...} }
type GetInstanceServerCaCertArrayInput interface {
	pulumi.Input

	ToGetInstanceServerCaCertArrayOutput() GetInstanceServerCaCertArrayOutput
	ToGetInstanceServerCaCertArrayOutputWithContext(context.Context) GetInstanceServerCaCertArrayOutput
}

type GetInstanceServerCaCertArray []GetInstanceServerCaCertInput

func (GetInstanceServerCaCertArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceServerCaCert)(nil)).Elem()
}

func (i GetInstanceServerCaCertArray) ToGetInstanceServerCaCertArrayOutput() GetInstanceServerCaCertArrayOutput {
	return i.ToGetInstanceServerCaCertArrayOutputWithContext(context.Background())
}

func (i GetInstanceServerCaCertArray) ToGetInstanceServerCaCertArrayOutputWithContext(ctx context.Context) GetInstanceServerCaCertArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceServerCaCertArrayOutput)
}

type GetInstanceServerCaCertOutput struct{ *pulumi.OutputState }

func (GetInstanceServerCaCertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceServerCaCert)(nil)).Elem()
}

func (o GetInstanceServerCaCertOutput) ToGetInstanceServerCaCertOutput() GetInstanceServerCaCertOutput {
	return o
}

func (o GetInstanceServerCaCertOutput) ToGetInstanceServerCaCertOutputWithContext(ctx context.Context) GetInstanceServerCaCertOutput {
	return o
}

// The certificate data in PEM format.
func (o GetInstanceServerCaCertOutput) Cert() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceServerCaCert) string { return v.Cert }).(pulumi.StringOutput)
}

// The time when the certificate was created.
func (o GetInstanceServerCaCertOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceServerCaCert) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The time when the certificate expires.
func (o GetInstanceServerCaCertOutput) ExpireTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceServerCaCert) string { return v.ExpireTime }).(pulumi.StringOutput)
}

// Serial number, as extracted from the certificate.
func (o GetInstanceServerCaCertOutput) SerialNumber() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceServerCaCert) string { return v.SerialNumber }).(pulumi.StringOutput)
}

// Sha1 Fingerprint of the certificate.
func (o GetInstanceServerCaCertOutput) Sha1Fingerprint() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceServerCaCert) string { return v.Sha1Fingerprint }).(pulumi.StringOutput)
}

type GetInstanceServerCaCertArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceServerCaCertArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceServerCaCert)(nil)).Elem()
}

func (o GetInstanceServerCaCertArrayOutput) ToGetInstanceServerCaCertArrayOutput() GetInstanceServerCaCertArrayOutput {
	return o
}

func (o GetInstanceServerCaCertArrayOutput) ToGetInstanceServerCaCertArrayOutputWithContext(ctx context.Context) GetInstanceServerCaCertArrayOutput {
	return o
}

func (o GetInstanceServerCaCertArrayOutput) Index(i pulumi.IntInput) GetInstanceServerCaCertOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceServerCaCert {
		return vs[0].([]GetInstanceServerCaCert)[vs[1].(int)]
	}).(GetInstanceServerCaCertOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAutomatedBackupConfigInput)(nil)).Elem(), ClusterAutomatedBackupConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAutomatedBackupConfigPtrInput)(nil)).Elem(), ClusterAutomatedBackupConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAutomatedBackupConfigFixedFrequencyScheduleInput)(nil)).Elem(), ClusterAutomatedBackupConfigFixedFrequencyScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAutomatedBackupConfigFixedFrequencySchedulePtrInput)(nil)).Elem(), ClusterAutomatedBackupConfigFixedFrequencyScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeInput)(nil)).Elem(), ClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimePtrInput)(nil)).Elem(), ClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterCrossClusterReplicationConfigInput)(nil)).Elem(), ClusterCrossClusterReplicationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterCrossClusterReplicationConfigPtrInput)(nil)).Elem(), ClusterCrossClusterReplicationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterCrossClusterReplicationConfigMembershipInput)(nil)).Elem(), ClusterCrossClusterReplicationConfigMembershipArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterCrossClusterReplicationConfigMembershipArrayInput)(nil)).Elem(), ClusterCrossClusterReplicationConfigMembershipArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterCrossClusterReplicationConfigMembershipPrimaryClusterInput)(nil)).Elem(), ClusterCrossClusterReplicationConfigMembershipPrimaryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterCrossClusterReplicationConfigMembershipPrimaryClusterArrayInput)(nil)).Elem(), ClusterCrossClusterReplicationConfigMembershipPrimaryClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterCrossClusterReplicationConfigMembershipSecondaryClusterInput)(nil)).Elem(), ClusterCrossClusterReplicationConfigMembershipSecondaryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterCrossClusterReplicationConfigMembershipSecondaryClusterArrayInput)(nil)).Elem(), ClusterCrossClusterReplicationConfigMembershipSecondaryClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterCrossClusterReplicationConfigPrimaryClusterInput)(nil)).Elem(), ClusterCrossClusterReplicationConfigPrimaryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterCrossClusterReplicationConfigPrimaryClusterPtrInput)(nil)).Elem(), ClusterCrossClusterReplicationConfigPrimaryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterCrossClusterReplicationConfigSecondaryClusterInput)(nil)).Elem(), ClusterCrossClusterReplicationConfigSecondaryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterCrossClusterReplicationConfigSecondaryClusterArrayInput)(nil)).Elem(), ClusterCrossClusterReplicationConfigSecondaryClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterDiscoveryEndpointInput)(nil)).Elem(), ClusterDiscoveryEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterDiscoveryEndpointArrayInput)(nil)).Elem(), ClusterDiscoveryEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterDiscoveryEndpointPscConfigInput)(nil)).Elem(), ClusterDiscoveryEndpointPscConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterDiscoveryEndpointPscConfigPtrInput)(nil)).Elem(), ClusterDiscoveryEndpointPscConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterGcsSourceInput)(nil)).Elem(), ClusterGcsSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterGcsSourcePtrInput)(nil)).Elem(), ClusterGcsSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterMaintenancePolicyInput)(nil)).Elem(), ClusterMaintenancePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterMaintenancePolicyPtrInput)(nil)).Elem(), ClusterMaintenancePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterMaintenancePolicyWeeklyMaintenanceWindowInput)(nil)).Elem(), ClusterMaintenancePolicyWeeklyMaintenanceWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterMaintenancePolicyWeeklyMaintenanceWindowArrayInput)(nil)).Elem(), ClusterMaintenancePolicyWeeklyMaintenanceWindowArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeInput)(nil)).Elem(), ClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterMaintenanceScheduleInput)(nil)).Elem(), ClusterMaintenanceScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterMaintenanceScheduleArrayInput)(nil)).Elem(), ClusterMaintenanceScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterManagedBackupSourceInput)(nil)).Elem(), ClusterManagedBackupSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterManagedBackupSourcePtrInput)(nil)).Elem(), ClusterManagedBackupSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterManagedServerCaInput)(nil)).Elem(), ClusterManagedServerCaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterManagedServerCaArrayInput)(nil)).Elem(), ClusterManagedServerCaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterManagedServerCaCaCertInput)(nil)).Elem(), ClusterManagedServerCaCaCertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterManagedServerCaCaCertArrayInput)(nil)).Elem(), ClusterManagedServerCaCaCertArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterPersistenceConfigInput)(nil)).Elem(), ClusterPersistenceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterPersistenceConfigPtrInput)(nil)).Elem(), ClusterPersistenceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterPersistenceConfigAofConfigInput)(nil)).Elem(), ClusterPersistenceConfigAofConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterPersistenceConfigAofConfigPtrInput)(nil)).Elem(), ClusterPersistenceConfigAofConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterPersistenceConfigRdbConfigInput)(nil)).Elem(), ClusterPersistenceConfigRdbConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterPersistenceConfigRdbConfigPtrInput)(nil)).Elem(), ClusterPersistenceConfigRdbConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterPscConfigInput)(nil)).Elem(), ClusterPscConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterPscConfigArrayInput)(nil)).Elem(), ClusterPscConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterPscConnectionInput)(nil)).Elem(), ClusterPscConnectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterPscConnectionArrayInput)(nil)).Elem(), ClusterPscConnectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterPscServiceAttachmentInput)(nil)).Elem(), ClusterPscServiceAttachmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterPscServiceAttachmentArrayInput)(nil)).Elem(), ClusterPscServiceAttachmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterStateInfoInput)(nil)).Elem(), ClusterStateInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterStateInfoArrayInput)(nil)).Elem(), ClusterStateInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterStateInfoUpdateInfoInput)(nil)).Elem(), ClusterStateInfoUpdateInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterStateInfoUpdateInfoPtrInput)(nil)).Elem(), ClusterStateInfoUpdateInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterUserCreatedConnectionsClusterEndpointInput)(nil)).Elem(), ClusterUserCreatedConnectionsClusterEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterUserCreatedConnectionsClusterEndpointArrayInput)(nil)).Elem(), ClusterUserCreatedConnectionsClusterEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterUserCreatedConnectionsClusterEndpointConnectionInput)(nil)).Elem(), ClusterUserCreatedConnectionsClusterEndpointConnectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterUserCreatedConnectionsClusterEndpointConnectionArrayInput)(nil)).Elem(), ClusterUserCreatedConnectionsClusterEndpointConnectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionInput)(nil)).Elem(), ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrInput)(nil)).Elem(), ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterZoneDistributionConfigInput)(nil)).Elem(), ClusterZoneDistributionConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterZoneDistributionConfigPtrInput)(nil)).Elem(), ClusterZoneDistributionConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceMaintenancePolicyInput)(nil)).Elem(), InstanceMaintenancePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceMaintenancePolicyPtrInput)(nil)).Elem(), InstanceMaintenancePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceMaintenancePolicyWeeklyMaintenanceWindowInput)(nil)).Elem(), InstanceMaintenancePolicyWeeklyMaintenanceWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceMaintenancePolicyWeeklyMaintenanceWindowArrayInput)(nil)).Elem(), InstanceMaintenancePolicyWeeklyMaintenanceWindowArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeInput)(nil)).Elem(), InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceMaintenanceScheduleInput)(nil)).Elem(), InstanceMaintenanceScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceMaintenanceScheduleArrayInput)(nil)).Elem(), InstanceMaintenanceScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceNodeInput)(nil)).Elem(), InstanceNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceNodeArrayInput)(nil)).Elem(), InstanceNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancePersistenceConfigInput)(nil)).Elem(), InstancePersistenceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancePersistenceConfigPtrInput)(nil)).Elem(), InstancePersistenceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceServerCaCertInput)(nil)).Elem(), InstanceServerCaCertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceServerCaCertArrayInput)(nil)).Elem(), InstanceServerCaCertArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterAutomatedBackupConfigInput)(nil)).Elem(), GetClusterAutomatedBackupConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterAutomatedBackupConfigArrayInput)(nil)).Elem(), GetClusterAutomatedBackupConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterAutomatedBackupConfigFixedFrequencyScheduleInput)(nil)).Elem(), GetClusterAutomatedBackupConfigFixedFrequencyScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterAutomatedBackupConfigFixedFrequencyScheduleArrayInput)(nil)).Elem(), GetClusterAutomatedBackupConfigFixedFrequencyScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeInput)(nil)).Elem(), GetClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeArrayInput)(nil)).Elem(), GetClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterCrossClusterReplicationConfigInput)(nil)).Elem(), GetClusterCrossClusterReplicationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterCrossClusterReplicationConfigArrayInput)(nil)).Elem(), GetClusterCrossClusterReplicationConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterCrossClusterReplicationConfigMembershipInput)(nil)).Elem(), GetClusterCrossClusterReplicationConfigMembershipArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterCrossClusterReplicationConfigMembershipArrayInput)(nil)).Elem(), GetClusterCrossClusterReplicationConfigMembershipArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterCrossClusterReplicationConfigMembershipPrimaryClusterInput)(nil)).Elem(), GetClusterCrossClusterReplicationConfigMembershipPrimaryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterCrossClusterReplicationConfigMembershipPrimaryClusterArrayInput)(nil)).Elem(), GetClusterCrossClusterReplicationConfigMembershipPrimaryClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterCrossClusterReplicationConfigMembershipSecondaryClusterInput)(nil)).Elem(), GetClusterCrossClusterReplicationConfigMembershipSecondaryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterCrossClusterReplicationConfigMembershipSecondaryClusterArrayInput)(nil)).Elem(), GetClusterCrossClusterReplicationConfigMembershipSecondaryClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterCrossClusterReplicationConfigPrimaryClusterInput)(nil)).Elem(), GetClusterCrossClusterReplicationConfigPrimaryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterCrossClusterReplicationConfigPrimaryClusterArrayInput)(nil)).Elem(), GetClusterCrossClusterReplicationConfigPrimaryClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterCrossClusterReplicationConfigSecondaryClusterInput)(nil)).Elem(), GetClusterCrossClusterReplicationConfigSecondaryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterCrossClusterReplicationConfigSecondaryClusterArrayInput)(nil)).Elem(), GetClusterCrossClusterReplicationConfigSecondaryClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterDiscoveryEndpointInput)(nil)).Elem(), GetClusterDiscoveryEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterDiscoveryEndpointArrayInput)(nil)).Elem(), GetClusterDiscoveryEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterDiscoveryEndpointPscConfigInput)(nil)).Elem(), GetClusterDiscoveryEndpointPscConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterDiscoveryEndpointPscConfigArrayInput)(nil)).Elem(), GetClusterDiscoveryEndpointPscConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterGcsSourceInput)(nil)).Elem(), GetClusterGcsSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterGcsSourceArrayInput)(nil)).Elem(), GetClusterGcsSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterMaintenancePolicyInput)(nil)).Elem(), GetClusterMaintenancePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterMaintenancePolicyArrayInput)(nil)).Elem(), GetClusterMaintenancePolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterMaintenancePolicyWeeklyMaintenanceWindowInput)(nil)).Elem(), GetClusterMaintenancePolicyWeeklyMaintenanceWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterMaintenancePolicyWeeklyMaintenanceWindowArrayInput)(nil)).Elem(), GetClusterMaintenancePolicyWeeklyMaintenanceWindowArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeInput)(nil)).Elem(), GetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayInput)(nil)).Elem(), GetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterMaintenanceScheduleInput)(nil)).Elem(), GetClusterMaintenanceScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterMaintenanceScheduleArrayInput)(nil)).Elem(), GetClusterMaintenanceScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterManagedBackupSourceInput)(nil)).Elem(), GetClusterManagedBackupSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterManagedBackupSourceArrayInput)(nil)).Elem(), GetClusterManagedBackupSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterManagedServerCaInput)(nil)).Elem(), GetClusterManagedServerCaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterManagedServerCaArrayInput)(nil)).Elem(), GetClusterManagedServerCaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterManagedServerCaCaCertInput)(nil)).Elem(), GetClusterManagedServerCaCaCertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterManagedServerCaCaCertArrayInput)(nil)).Elem(), GetClusterManagedServerCaCaCertArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterPersistenceConfigInput)(nil)).Elem(), GetClusterPersistenceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterPersistenceConfigArrayInput)(nil)).Elem(), GetClusterPersistenceConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterPersistenceConfigAofConfigInput)(nil)).Elem(), GetClusterPersistenceConfigAofConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterPersistenceConfigAofConfigArrayInput)(nil)).Elem(), GetClusterPersistenceConfigAofConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterPersistenceConfigRdbConfigInput)(nil)).Elem(), GetClusterPersistenceConfigRdbConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterPersistenceConfigRdbConfigArrayInput)(nil)).Elem(), GetClusterPersistenceConfigRdbConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterPscConfigInput)(nil)).Elem(), GetClusterPscConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterPscConfigArrayInput)(nil)).Elem(), GetClusterPscConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterPscConnectionInput)(nil)).Elem(), GetClusterPscConnectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterPscConnectionArrayInput)(nil)).Elem(), GetClusterPscConnectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterPscServiceAttachmentInput)(nil)).Elem(), GetClusterPscServiceAttachmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterPscServiceAttachmentArrayInput)(nil)).Elem(), GetClusterPscServiceAttachmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterStateInfoInput)(nil)).Elem(), GetClusterStateInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterStateInfoArrayInput)(nil)).Elem(), GetClusterStateInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterStateInfoUpdateInfoInput)(nil)).Elem(), GetClusterStateInfoUpdateInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterStateInfoUpdateInfoArrayInput)(nil)).Elem(), GetClusterStateInfoUpdateInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterZoneDistributionConfigInput)(nil)).Elem(), GetClusterZoneDistributionConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterZoneDistributionConfigArrayInput)(nil)).Elem(), GetClusterZoneDistributionConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceMaintenancePolicyInput)(nil)).Elem(), GetInstanceMaintenancePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceMaintenancePolicyArrayInput)(nil)).Elem(), GetInstanceMaintenancePolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceMaintenancePolicyWeeklyMaintenanceWindowInput)(nil)).Elem(), GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayInput)(nil)).Elem(), GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeInput)(nil)).Elem(), GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayInput)(nil)).Elem(), GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceMaintenanceScheduleInput)(nil)).Elem(), GetInstanceMaintenanceScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceMaintenanceScheduleArrayInput)(nil)).Elem(), GetInstanceMaintenanceScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceNodeInput)(nil)).Elem(), GetInstanceNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceNodeArrayInput)(nil)).Elem(), GetInstanceNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancePersistenceConfigInput)(nil)).Elem(), GetInstancePersistenceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancePersistenceConfigArrayInput)(nil)).Elem(), GetInstancePersistenceConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceServerCaCertInput)(nil)).Elem(), GetInstanceServerCaCertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceServerCaCertArrayInput)(nil)).Elem(), GetInstanceServerCaCertArray{})
	pulumi.RegisterOutputType(ClusterAutomatedBackupConfigOutput{})
	pulumi.RegisterOutputType(ClusterAutomatedBackupConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterAutomatedBackupConfigFixedFrequencyScheduleOutput{})
	pulumi.RegisterOutputType(ClusterAutomatedBackupConfigFixedFrequencySchedulePtrOutput{})
	pulumi.RegisterOutputType(ClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeOutput{})
	pulumi.RegisterOutputType(ClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimePtrOutput{})
	pulumi.RegisterOutputType(ClusterCrossClusterReplicationConfigOutput{})
	pulumi.RegisterOutputType(ClusterCrossClusterReplicationConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterCrossClusterReplicationConfigMembershipOutput{})
	pulumi.RegisterOutputType(ClusterCrossClusterReplicationConfigMembershipArrayOutput{})
	pulumi.RegisterOutputType(ClusterCrossClusterReplicationConfigMembershipPrimaryClusterOutput{})
	pulumi.RegisterOutputType(ClusterCrossClusterReplicationConfigMembershipPrimaryClusterArrayOutput{})
	pulumi.RegisterOutputType(ClusterCrossClusterReplicationConfigMembershipSecondaryClusterOutput{})
	pulumi.RegisterOutputType(ClusterCrossClusterReplicationConfigMembershipSecondaryClusterArrayOutput{})
	pulumi.RegisterOutputType(ClusterCrossClusterReplicationConfigPrimaryClusterOutput{})
	pulumi.RegisterOutputType(ClusterCrossClusterReplicationConfigPrimaryClusterPtrOutput{})
	pulumi.RegisterOutputType(ClusterCrossClusterReplicationConfigSecondaryClusterOutput{})
	pulumi.RegisterOutputType(ClusterCrossClusterReplicationConfigSecondaryClusterArrayOutput{})
	pulumi.RegisterOutputType(ClusterDiscoveryEndpointOutput{})
	pulumi.RegisterOutputType(ClusterDiscoveryEndpointArrayOutput{})
	pulumi.RegisterOutputType(ClusterDiscoveryEndpointPscConfigOutput{})
	pulumi.RegisterOutputType(ClusterDiscoveryEndpointPscConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterGcsSourceOutput{})
	pulumi.RegisterOutputType(ClusterGcsSourcePtrOutput{})
	pulumi.RegisterOutputType(ClusterMaintenancePolicyOutput{})
	pulumi.RegisterOutputType(ClusterMaintenancePolicyPtrOutput{})
	pulumi.RegisterOutputType(ClusterMaintenancePolicyWeeklyMaintenanceWindowOutput{})
	pulumi.RegisterOutputType(ClusterMaintenancePolicyWeeklyMaintenanceWindowArrayOutput{})
	pulumi.RegisterOutputType(ClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput{})
	pulumi.RegisterOutputType(ClusterMaintenanceScheduleOutput{})
	pulumi.RegisterOutputType(ClusterMaintenanceScheduleArrayOutput{})
	pulumi.RegisterOutputType(ClusterManagedBackupSourceOutput{})
	pulumi.RegisterOutputType(ClusterManagedBackupSourcePtrOutput{})
	pulumi.RegisterOutputType(ClusterManagedServerCaOutput{})
	pulumi.RegisterOutputType(ClusterManagedServerCaArrayOutput{})
	pulumi.RegisterOutputType(ClusterManagedServerCaCaCertOutput{})
	pulumi.RegisterOutputType(ClusterManagedServerCaCaCertArrayOutput{})
	pulumi.RegisterOutputType(ClusterPersistenceConfigOutput{})
	pulumi.RegisterOutputType(ClusterPersistenceConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterPersistenceConfigAofConfigOutput{})
	pulumi.RegisterOutputType(ClusterPersistenceConfigAofConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterPersistenceConfigRdbConfigOutput{})
	pulumi.RegisterOutputType(ClusterPersistenceConfigRdbConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterPscConfigOutput{})
	pulumi.RegisterOutputType(ClusterPscConfigArrayOutput{})
	pulumi.RegisterOutputType(ClusterPscConnectionOutput{})
	pulumi.RegisterOutputType(ClusterPscConnectionArrayOutput{})
	pulumi.RegisterOutputType(ClusterPscServiceAttachmentOutput{})
	pulumi.RegisterOutputType(ClusterPscServiceAttachmentArrayOutput{})
	pulumi.RegisterOutputType(ClusterStateInfoOutput{})
	pulumi.RegisterOutputType(ClusterStateInfoArrayOutput{})
	pulumi.RegisterOutputType(ClusterStateInfoUpdateInfoOutput{})
	pulumi.RegisterOutputType(ClusterStateInfoUpdateInfoPtrOutput{})
	pulumi.RegisterOutputType(ClusterUserCreatedConnectionsClusterEndpointOutput{})
	pulumi.RegisterOutputType(ClusterUserCreatedConnectionsClusterEndpointArrayOutput{})
	pulumi.RegisterOutputType(ClusterUserCreatedConnectionsClusterEndpointConnectionOutput{})
	pulumi.RegisterOutputType(ClusterUserCreatedConnectionsClusterEndpointConnectionArrayOutput{})
	pulumi.RegisterOutputType(ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionOutput{})
	pulumi.RegisterOutputType(ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutput{})
	pulumi.RegisterOutputType(ClusterZoneDistributionConfigOutput{})
	pulumi.RegisterOutputType(ClusterZoneDistributionConfigPtrOutput{})
	pulumi.RegisterOutputType(InstanceMaintenancePolicyOutput{})
	pulumi.RegisterOutputType(InstanceMaintenancePolicyPtrOutput{})
	pulumi.RegisterOutputType(InstanceMaintenancePolicyWeeklyMaintenanceWindowOutput{})
	pulumi.RegisterOutputType(InstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput{})
	pulumi.RegisterOutputType(InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput{})
	pulumi.RegisterOutputType(InstanceMaintenanceScheduleOutput{})
	pulumi.RegisterOutputType(InstanceMaintenanceScheduleArrayOutput{})
	pulumi.RegisterOutputType(InstanceNodeOutput{})
	pulumi.RegisterOutputType(InstanceNodeArrayOutput{})
	pulumi.RegisterOutputType(InstancePersistenceConfigOutput{})
	pulumi.RegisterOutputType(InstancePersistenceConfigPtrOutput{})
	pulumi.RegisterOutputType(InstanceServerCaCertOutput{})
	pulumi.RegisterOutputType(InstanceServerCaCertArrayOutput{})
	pulumi.RegisterOutputType(GetClusterAutomatedBackupConfigOutput{})
	pulumi.RegisterOutputType(GetClusterAutomatedBackupConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterAutomatedBackupConfigFixedFrequencyScheduleOutput{})
	pulumi.RegisterOutputType(GetClusterAutomatedBackupConfigFixedFrequencyScheduleArrayOutput{})
	pulumi.RegisterOutputType(GetClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeOutput{})
	pulumi.RegisterOutputType(GetClusterAutomatedBackupConfigFixedFrequencyScheduleStartTimeArrayOutput{})
	pulumi.RegisterOutputType(GetClusterCrossClusterReplicationConfigOutput{})
	pulumi.RegisterOutputType(GetClusterCrossClusterReplicationConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterCrossClusterReplicationConfigMembershipOutput{})
	pulumi.RegisterOutputType(GetClusterCrossClusterReplicationConfigMembershipArrayOutput{})
	pulumi.RegisterOutputType(GetClusterCrossClusterReplicationConfigMembershipPrimaryClusterOutput{})
	pulumi.RegisterOutputType(GetClusterCrossClusterReplicationConfigMembershipPrimaryClusterArrayOutput{})
	pulumi.RegisterOutputType(GetClusterCrossClusterReplicationConfigMembershipSecondaryClusterOutput{})
	pulumi.RegisterOutputType(GetClusterCrossClusterReplicationConfigMembershipSecondaryClusterArrayOutput{})
	pulumi.RegisterOutputType(GetClusterCrossClusterReplicationConfigPrimaryClusterOutput{})
	pulumi.RegisterOutputType(GetClusterCrossClusterReplicationConfigPrimaryClusterArrayOutput{})
	pulumi.RegisterOutputType(GetClusterCrossClusterReplicationConfigSecondaryClusterOutput{})
	pulumi.RegisterOutputType(GetClusterCrossClusterReplicationConfigSecondaryClusterArrayOutput{})
	pulumi.RegisterOutputType(GetClusterDiscoveryEndpointOutput{})
	pulumi.RegisterOutputType(GetClusterDiscoveryEndpointArrayOutput{})
	pulumi.RegisterOutputType(GetClusterDiscoveryEndpointPscConfigOutput{})
	pulumi.RegisterOutputType(GetClusterDiscoveryEndpointPscConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterGcsSourceOutput{})
	pulumi.RegisterOutputType(GetClusterGcsSourceArrayOutput{})
	pulumi.RegisterOutputType(GetClusterMaintenancePolicyOutput{})
	pulumi.RegisterOutputType(GetClusterMaintenancePolicyArrayOutput{})
	pulumi.RegisterOutputType(GetClusterMaintenancePolicyWeeklyMaintenanceWindowOutput{})
	pulumi.RegisterOutputType(GetClusterMaintenancePolicyWeeklyMaintenanceWindowArrayOutput{})
	pulumi.RegisterOutputType(GetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput{})
	pulumi.RegisterOutputType(GetClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutput{})
	pulumi.RegisterOutputType(GetClusterMaintenanceScheduleOutput{})
	pulumi.RegisterOutputType(GetClusterMaintenanceScheduleArrayOutput{})
	pulumi.RegisterOutputType(GetClusterManagedBackupSourceOutput{})
	pulumi.RegisterOutputType(GetClusterManagedBackupSourceArrayOutput{})
	pulumi.RegisterOutputType(GetClusterManagedServerCaOutput{})
	pulumi.RegisterOutputType(GetClusterManagedServerCaArrayOutput{})
	pulumi.RegisterOutputType(GetClusterManagedServerCaCaCertOutput{})
	pulumi.RegisterOutputType(GetClusterManagedServerCaCaCertArrayOutput{})
	pulumi.RegisterOutputType(GetClusterPersistenceConfigOutput{})
	pulumi.RegisterOutputType(GetClusterPersistenceConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterPersistenceConfigAofConfigOutput{})
	pulumi.RegisterOutputType(GetClusterPersistenceConfigAofConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterPersistenceConfigRdbConfigOutput{})
	pulumi.RegisterOutputType(GetClusterPersistenceConfigRdbConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterPscConfigOutput{})
	pulumi.RegisterOutputType(GetClusterPscConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterPscConnectionOutput{})
	pulumi.RegisterOutputType(GetClusterPscConnectionArrayOutput{})
	pulumi.RegisterOutputType(GetClusterPscServiceAttachmentOutput{})
	pulumi.RegisterOutputType(GetClusterPscServiceAttachmentArrayOutput{})
	pulumi.RegisterOutputType(GetClusterStateInfoOutput{})
	pulumi.RegisterOutputType(GetClusterStateInfoArrayOutput{})
	pulumi.RegisterOutputType(GetClusterStateInfoUpdateInfoOutput{})
	pulumi.RegisterOutputType(GetClusterStateInfoUpdateInfoArrayOutput{})
	pulumi.RegisterOutputType(GetClusterZoneDistributionConfigOutput{})
	pulumi.RegisterOutputType(GetClusterZoneDistributionConfigArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceMaintenancePolicyOutput{})
	pulumi.RegisterOutputType(GetInstanceMaintenancePolicyArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceMaintenancePolicyWeeklyMaintenanceWindowOutput{})
	pulumi.RegisterOutputType(GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput{})
	pulumi.RegisterOutputType(GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceMaintenanceScheduleOutput{})
	pulumi.RegisterOutputType(GetInstanceMaintenanceScheduleArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceNodeOutput{})
	pulumi.RegisterOutputType(GetInstanceNodeArrayOutput{})
	pulumi.RegisterOutputType(GetInstancePersistenceConfigOutput{})
	pulumi.RegisterOutputType(GetInstancePersistenceConfigArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceServerCaCertOutput{})
	pulumi.RegisterOutputType(GetInstanceServerCaCertArrayOutput{})
}
