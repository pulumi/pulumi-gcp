// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package redis

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type ClusterCrossClusterReplicationConfig struct {
	// The role of the cluster in cross cluster replication. Supported values are:
	// 1. `CLUSTER_ROLE_UNSPECIFIED`: This is an independent cluster that has never participated in cross cluster replication. It allows both reads and writes.
	// 2. `NONE`: This is an independent cluster that previously participated in cross cluster replication(either as a `PRIMARY` or `SECONDARY` cluster). It allows both reads and writes.
	// 3. `PRIMARY`: This cluster serves as the replication source for secondary clusters that are replicating from it. Any data written to it is automatically replicated to its secondary clusters. It allows both reads and writes.
	// 4. `SECONDARY`: This cluster replicates data from the primary cluster. It allows only reads.
	//    Possible values are: `CLUSTER_ROLE_UNSPECIFIED`, `NONE`, `PRIMARY`, `SECONDARY`.
	ClusterRole *string `pulumi:"clusterRole"`
	// (Output)
	// An output only view of all the member clusters participating in cross cluster replication. This field is populated for all the member clusters irrespective of their cluster role.
	// Structure is documented below.
	Memberships []ClusterCrossClusterReplicationConfigMembership `pulumi:"memberships"`
	// Details of the primary cluster that is used as the replication source for this secondary cluster. This is allowed to be set only for clusters whose cluster role is of type `SECONDARY`.
	// Structure is documented below.
	PrimaryCluster *ClusterCrossClusterReplicationConfigPrimaryCluster `pulumi:"primaryCluster"`
	// List of secondary clusters that are replicating from this primary cluster. This is allowed to be set only for clusters whose cluster role is of type `PRIMARY`.
	// Structure is documented below.
	SecondaryClusters []ClusterCrossClusterReplicationConfigSecondaryCluster `pulumi:"secondaryClusters"`
	// (Output)
	// The last time cross cluster replication config was updated.
	UpdateTime *string `pulumi:"updateTime"`
}

// ClusterCrossClusterReplicationConfigInput is an input type that accepts ClusterCrossClusterReplicationConfigArgs and ClusterCrossClusterReplicationConfigOutput values.
// You can construct a concrete instance of `ClusterCrossClusterReplicationConfigInput` via:
//
//	ClusterCrossClusterReplicationConfigArgs{...}
type ClusterCrossClusterReplicationConfigInput interface {
	pulumi.Input

	ToClusterCrossClusterReplicationConfigOutput() ClusterCrossClusterReplicationConfigOutput
	ToClusterCrossClusterReplicationConfigOutputWithContext(context.Context) ClusterCrossClusterReplicationConfigOutput
}

type ClusterCrossClusterReplicationConfigArgs struct {
	// The role of the cluster in cross cluster replication. Supported values are:
	// 1. `CLUSTER_ROLE_UNSPECIFIED`: This is an independent cluster that has never participated in cross cluster replication. It allows both reads and writes.
	// 2. `NONE`: This is an independent cluster that previously participated in cross cluster replication(either as a `PRIMARY` or `SECONDARY` cluster). It allows both reads and writes.
	// 3. `PRIMARY`: This cluster serves as the replication source for secondary clusters that are replicating from it. Any data written to it is automatically replicated to its secondary clusters. It allows both reads and writes.
	// 4. `SECONDARY`: This cluster replicates data from the primary cluster. It allows only reads.
	//    Possible values are: `CLUSTER_ROLE_UNSPECIFIED`, `NONE`, `PRIMARY`, `SECONDARY`.
	ClusterRole pulumi.StringPtrInput `pulumi:"clusterRole"`
	// (Output)
	// An output only view of all the member clusters participating in cross cluster replication. This field is populated for all the member clusters irrespective of their cluster role.
	// Structure is documented below.
	Memberships ClusterCrossClusterReplicationConfigMembershipArrayInput `pulumi:"memberships"`
	// Details of the primary cluster that is used as the replication source for this secondary cluster. This is allowed to be set only for clusters whose cluster role is of type `SECONDARY`.
	// Structure is documented below.
	PrimaryCluster ClusterCrossClusterReplicationConfigPrimaryClusterPtrInput `pulumi:"primaryCluster"`
	// List of secondary clusters that are replicating from this primary cluster. This is allowed to be set only for clusters whose cluster role is of type `PRIMARY`.
	// Structure is documented below.
	SecondaryClusters ClusterCrossClusterReplicationConfigSecondaryClusterArrayInput `pulumi:"secondaryClusters"`
	// (Output)
	// The last time cross cluster replication config was updated.
	UpdateTime pulumi.StringPtrInput `pulumi:"updateTime"`
}

func (ClusterCrossClusterReplicationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCrossClusterReplicationConfig)(nil)).Elem()
}

func (i ClusterCrossClusterReplicationConfigArgs) ToClusterCrossClusterReplicationConfigOutput() ClusterCrossClusterReplicationConfigOutput {
	return i.ToClusterCrossClusterReplicationConfigOutputWithContext(context.Background())
}

func (i ClusterCrossClusterReplicationConfigArgs) ToClusterCrossClusterReplicationConfigOutputWithContext(ctx context.Context) ClusterCrossClusterReplicationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCrossClusterReplicationConfigOutput)
}

func (i ClusterCrossClusterReplicationConfigArgs) ToClusterCrossClusterReplicationConfigPtrOutput() ClusterCrossClusterReplicationConfigPtrOutput {
	return i.ToClusterCrossClusterReplicationConfigPtrOutputWithContext(context.Background())
}

func (i ClusterCrossClusterReplicationConfigArgs) ToClusterCrossClusterReplicationConfigPtrOutputWithContext(ctx context.Context) ClusterCrossClusterReplicationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCrossClusterReplicationConfigOutput).ToClusterCrossClusterReplicationConfigPtrOutputWithContext(ctx)
}

// ClusterCrossClusterReplicationConfigPtrInput is an input type that accepts ClusterCrossClusterReplicationConfigArgs, ClusterCrossClusterReplicationConfigPtr and ClusterCrossClusterReplicationConfigPtrOutput values.
// You can construct a concrete instance of `ClusterCrossClusterReplicationConfigPtrInput` via:
//
//	        ClusterCrossClusterReplicationConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterCrossClusterReplicationConfigPtrInput interface {
	pulumi.Input

	ToClusterCrossClusterReplicationConfigPtrOutput() ClusterCrossClusterReplicationConfigPtrOutput
	ToClusterCrossClusterReplicationConfigPtrOutputWithContext(context.Context) ClusterCrossClusterReplicationConfigPtrOutput
}

type clusterCrossClusterReplicationConfigPtrType ClusterCrossClusterReplicationConfigArgs

func ClusterCrossClusterReplicationConfigPtr(v *ClusterCrossClusterReplicationConfigArgs) ClusterCrossClusterReplicationConfigPtrInput {
	return (*clusterCrossClusterReplicationConfigPtrType)(v)
}

func (*clusterCrossClusterReplicationConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterCrossClusterReplicationConfig)(nil)).Elem()
}

func (i *clusterCrossClusterReplicationConfigPtrType) ToClusterCrossClusterReplicationConfigPtrOutput() ClusterCrossClusterReplicationConfigPtrOutput {
	return i.ToClusterCrossClusterReplicationConfigPtrOutputWithContext(context.Background())
}

func (i *clusterCrossClusterReplicationConfigPtrType) ToClusterCrossClusterReplicationConfigPtrOutputWithContext(ctx context.Context) ClusterCrossClusterReplicationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCrossClusterReplicationConfigPtrOutput)
}

type ClusterCrossClusterReplicationConfigOutput struct{ *pulumi.OutputState }

func (ClusterCrossClusterReplicationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCrossClusterReplicationConfig)(nil)).Elem()
}

func (o ClusterCrossClusterReplicationConfigOutput) ToClusterCrossClusterReplicationConfigOutput() ClusterCrossClusterReplicationConfigOutput {
	return o
}

func (o ClusterCrossClusterReplicationConfigOutput) ToClusterCrossClusterReplicationConfigOutputWithContext(ctx context.Context) ClusterCrossClusterReplicationConfigOutput {
	return o
}

func (o ClusterCrossClusterReplicationConfigOutput) ToClusterCrossClusterReplicationConfigPtrOutput() ClusterCrossClusterReplicationConfigPtrOutput {
	return o.ToClusterCrossClusterReplicationConfigPtrOutputWithContext(context.Background())
}

func (o ClusterCrossClusterReplicationConfigOutput) ToClusterCrossClusterReplicationConfigPtrOutputWithContext(ctx context.Context) ClusterCrossClusterReplicationConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterCrossClusterReplicationConfig) *ClusterCrossClusterReplicationConfig {
		return &v
	}).(ClusterCrossClusterReplicationConfigPtrOutput)
}

// The role of the cluster in cross cluster replication. Supported values are:
//  1. `CLUSTER_ROLE_UNSPECIFIED`: This is an independent cluster that has never participated in cross cluster replication. It allows both reads and writes.
//  2. `NONE`: This is an independent cluster that previously participated in cross cluster replication(either as a `PRIMARY` or `SECONDARY` cluster). It allows both reads and writes.
//  3. `PRIMARY`: This cluster serves as the replication source for secondary clusters that are replicating from it. Any data written to it is automatically replicated to its secondary clusters. It allows both reads and writes.
//  4. `SECONDARY`: This cluster replicates data from the primary cluster. It allows only reads.
//     Possible values are: `CLUSTER_ROLE_UNSPECIFIED`, `NONE`, `PRIMARY`, `SECONDARY`.
func (o ClusterCrossClusterReplicationConfigOutput) ClusterRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCrossClusterReplicationConfig) *string { return v.ClusterRole }).(pulumi.StringPtrOutput)
}

// (Output)
// An output only view of all the member clusters participating in cross cluster replication. This field is populated for all the member clusters irrespective of their cluster role.
// Structure is documented below.
func (o ClusterCrossClusterReplicationConfigOutput) Memberships() ClusterCrossClusterReplicationConfigMembershipArrayOutput {
	return o.ApplyT(func(v ClusterCrossClusterReplicationConfig) []ClusterCrossClusterReplicationConfigMembership {
		return v.Memberships
	}).(ClusterCrossClusterReplicationConfigMembershipArrayOutput)
}

// Details of the primary cluster that is used as the replication source for this secondary cluster. This is allowed to be set only for clusters whose cluster role is of type `SECONDARY`.
// Structure is documented below.
func (o ClusterCrossClusterReplicationConfigOutput) PrimaryCluster() ClusterCrossClusterReplicationConfigPrimaryClusterPtrOutput {
	return o.ApplyT(func(v ClusterCrossClusterReplicationConfig) *ClusterCrossClusterReplicationConfigPrimaryCluster {
		return v.PrimaryCluster
	}).(ClusterCrossClusterReplicationConfigPrimaryClusterPtrOutput)
}

// List of secondary clusters that are replicating from this primary cluster. This is allowed to be set only for clusters whose cluster role is of type `PRIMARY`.
// Structure is documented below.
func (o ClusterCrossClusterReplicationConfigOutput) SecondaryClusters() ClusterCrossClusterReplicationConfigSecondaryClusterArrayOutput {
	return o.ApplyT(func(v ClusterCrossClusterReplicationConfig) []ClusterCrossClusterReplicationConfigSecondaryCluster {
		return v.SecondaryClusters
	}).(ClusterCrossClusterReplicationConfigSecondaryClusterArrayOutput)
}

// (Output)
// The last time cross cluster replication config was updated.
func (o ClusterCrossClusterReplicationConfigOutput) UpdateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCrossClusterReplicationConfig) *string { return v.UpdateTime }).(pulumi.StringPtrOutput)
}

type ClusterCrossClusterReplicationConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterCrossClusterReplicationConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterCrossClusterReplicationConfig)(nil)).Elem()
}

func (o ClusterCrossClusterReplicationConfigPtrOutput) ToClusterCrossClusterReplicationConfigPtrOutput() ClusterCrossClusterReplicationConfigPtrOutput {
	return o
}

func (o ClusterCrossClusterReplicationConfigPtrOutput) ToClusterCrossClusterReplicationConfigPtrOutputWithContext(ctx context.Context) ClusterCrossClusterReplicationConfigPtrOutput {
	return o
}

func (o ClusterCrossClusterReplicationConfigPtrOutput) Elem() ClusterCrossClusterReplicationConfigOutput {
	return o.ApplyT(func(v *ClusterCrossClusterReplicationConfig) ClusterCrossClusterReplicationConfig {
		if v != nil {
			return *v
		}
		var ret ClusterCrossClusterReplicationConfig
		return ret
	}).(ClusterCrossClusterReplicationConfigOutput)
}

// The role of the cluster in cross cluster replication. Supported values are:
//  1. `CLUSTER_ROLE_UNSPECIFIED`: This is an independent cluster that has never participated in cross cluster replication. It allows both reads and writes.
//  2. `NONE`: This is an independent cluster that previously participated in cross cluster replication(either as a `PRIMARY` or `SECONDARY` cluster). It allows both reads and writes.
//  3. `PRIMARY`: This cluster serves as the replication source for secondary clusters that are replicating from it. Any data written to it is automatically replicated to its secondary clusters. It allows both reads and writes.
//  4. `SECONDARY`: This cluster replicates data from the primary cluster. It allows only reads.
//     Possible values are: `CLUSTER_ROLE_UNSPECIFIED`, `NONE`, `PRIMARY`, `SECONDARY`.
func (o ClusterCrossClusterReplicationConfigPtrOutput) ClusterRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCrossClusterReplicationConfig) *string {
		if v == nil {
			return nil
		}
		return v.ClusterRole
	}).(pulumi.StringPtrOutput)
}

// (Output)
// An output only view of all the member clusters participating in cross cluster replication. This field is populated for all the member clusters irrespective of their cluster role.
// Structure is documented below.
func (o ClusterCrossClusterReplicationConfigPtrOutput) Memberships() ClusterCrossClusterReplicationConfigMembershipArrayOutput {
	return o.ApplyT(func(v *ClusterCrossClusterReplicationConfig) []ClusterCrossClusterReplicationConfigMembership {
		if v == nil {
			return nil
		}
		return v.Memberships
	}).(ClusterCrossClusterReplicationConfigMembershipArrayOutput)
}

// Details of the primary cluster that is used as the replication source for this secondary cluster. This is allowed to be set only for clusters whose cluster role is of type `SECONDARY`.
// Structure is documented below.
func (o ClusterCrossClusterReplicationConfigPtrOutput) PrimaryCluster() ClusterCrossClusterReplicationConfigPrimaryClusterPtrOutput {
	return o.ApplyT(func(v *ClusterCrossClusterReplicationConfig) *ClusterCrossClusterReplicationConfigPrimaryCluster {
		if v == nil {
			return nil
		}
		return v.PrimaryCluster
	}).(ClusterCrossClusterReplicationConfigPrimaryClusterPtrOutput)
}

// List of secondary clusters that are replicating from this primary cluster. This is allowed to be set only for clusters whose cluster role is of type `PRIMARY`.
// Structure is documented below.
func (o ClusterCrossClusterReplicationConfigPtrOutput) SecondaryClusters() ClusterCrossClusterReplicationConfigSecondaryClusterArrayOutput {
	return o.ApplyT(func(v *ClusterCrossClusterReplicationConfig) []ClusterCrossClusterReplicationConfigSecondaryCluster {
		if v == nil {
			return nil
		}
		return v.SecondaryClusters
	}).(ClusterCrossClusterReplicationConfigSecondaryClusterArrayOutput)
}

// (Output)
// The last time cross cluster replication config was updated.
func (o ClusterCrossClusterReplicationConfigPtrOutput) UpdateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCrossClusterReplicationConfig) *string {
		if v == nil {
			return nil
		}
		return v.UpdateTime
	}).(pulumi.StringPtrOutput)
}

type ClusterCrossClusterReplicationConfigMembership struct {
	// Details of the primary cluster that is used as the replication source for all the secondary clusters.
	PrimaryClusters []ClusterCrossClusterReplicationConfigMembershipPrimaryCluster `pulumi:"primaryClusters"`
	// List of secondary clusters that are replicating from the primary cluster.
	SecondaryClusters []ClusterCrossClusterReplicationConfigMembershipSecondaryCluster `pulumi:"secondaryClusters"`
}

// ClusterCrossClusterReplicationConfigMembershipInput is an input type that accepts ClusterCrossClusterReplicationConfigMembershipArgs and ClusterCrossClusterReplicationConfigMembershipOutput values.
// You can construct a concrete instance of `ClusterCrossClusterReplicationConfigMembershipInput` via:
//
//	ClusterCrossClusterReplicationConfigMembershipArgs{...}
type ClusterCrossClusterReplicationConfigMembershipInput interface {
	pulumi.Input

	ToClusterCrossClusterReplicationConfigMembershipOutput() ClusterCrossClusterReplicationConfigMembershipOutput
	ToClusterCrossClusterReplicationConfigMembershipOutputWithContext(context.Context) ClusterCrossClusterReplicationConfigMembershipOutput
}

type ClusterCrossClusterReplicationConfigMembershipArgs struct {
	// Details of the primary cluster that is used as the replication source for all the secondary clusters.
	PrimaryClusters ClusterCrossClusterReplicationConfigMembershipPrimaryClusterArrayInput `pulumi:"primaryClusters"`
	// List of secondary clusters that are replicating from the primary cluster.
	SecondaryClusters ClusterCrossClusterReplicationConfigMembershipSecondaryClusterArrayInput `pulumi:"secondaryClusters"`
}

func (ClusterCrossClusterReplicationConfigMembershipArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCrossClusterReplicationConfigMembership)(nil)).Elem()
}

func (i ClusterCrossClusterReplicationConfigMembershipArgs) ToClusterCrossClusterReplicationConfigMembershipOutput() ClusterCrossClusterReplicationConfigMembershipOutput {
	return i.ToClusterCrossClusterReplicationConfigMembershipOutputWithContext(context.Background())
}

func (i ClusterCrossClusterReplicationConfigMembershipArgs) ToClusterCrossClusterReplicationConfigMembershipOutputWithContext(ctx context.Context) ClusterCrossClusterReplicationConfigMembershipOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCrossClusterReplicationConfigMembershipOutput)
}

// ClusterCrossClusterReplicationConfigMembershipArrayInput is an input type that accepts ClusterCrossClusterReplicationConfigMembershipArray and ClusterCrossClusterReplicationConfigMembershipArrayOutput values.
// You can construct a concrete instance of `ClusterCrossClusterReplicationConfigMembershipArrayInput` via:
//
//	ClusterCrossClusterReplicationConfigMembershipArray{ ClusterCrossClusterReplicationConfigMembershipArgs{...} }
type ClusterCrossClusterReplicationConfigMembershipArrayInput interface {
	pulumi.Input

	ToClusterCrossClusterReplicationConfigMembershipArrayOutput() ClusterCrossClusterReplicationConfigMembershipArrayOutput
	ToClusterCrossClusterReplicationConfigMembershipArrayOutputWithContext(context.Context) ClusterCrossClusterReplicationConfigMembershipArrayOutput
}

type ClusterCrossClusterReplicationConfigMembershipArray []ClusterCrossClusterReplicationConfigMembershipInput

func (ClusterCrossClusterReplicationConfigMembershipArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterCrossClusterReplicationConfigMembership)(nil)).Elem()
}

func (i ClusterCrossClusterReplicationConfigMembershipArray) ToClusterCrossClusterReplicationConfigMembershipArrayOutput() ClusterCrossClusterReplicationConfigMembershipArrayOutput {
	return i.ToClusterCrossClusterReplicationConfigMembershipArrayOutputWithContext(context.Background())
}

func (i ClusterCrossClusterReplicationConfigMembershipArray) ToClusterCrossClusterReplicationConfigMembershipArrayOutputWithContext(ctx context.Context) ClusterCrossClusterReplicationConfigMembershipArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCrossClusterReplicationConfigMembershipArrayOutput)
}

type ClusterCrossClusterReplicationConfigMembershipOutput struct{ *pulumi.OutputState }

func (ClusterCrossClusterReplicationConfigMembershipOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCrossClusterReplicationConfigMembership)(nil)).Elem()
}

func (o ClusterCrossClusterReplicationConfigMembershipOutput) ToClusterCrossClusterReplicationConfigMembershipOutput() ClusterCrossClusterReplicationConfigMembershipOutput {
	return o
}

func (o ClusterCrossClusterReplicationConfigMembershipOutput) ToClusterCrossClusterReplicationConfigMembershipOutputWithContext(ctx context.Context) ClusterCrossClusterReplicationConfigMembershipOutput {
	return o
}

// Details of the primary cluster that is used as the replication source for all the secondary clusters.
func (o ClusterCrossClusterReplicationConfigMembershipOutput) PrimaryClusters() ClusterCrossClusterReplicationConfigMembershipPrimaryClusterArrayOutput {
	return o.ApplyT(func(v ClusterCrossClusterReplicationConfigMembership) []ClusterCrossClusterReplicationConfigMembershipPrimaryCluster {
		return v.PrimaryClusters
	}).(ClusterCrossClusterReplicationConfigMembershipPrimaryClusterArrayOutput)
}

// List of secondary clusters that are replicating from the primary cluster.
func (o ClusterCrossClusterReplicationConfigMembershipOutput) SecondaryClusters() ClusterCrossClusterReplicationConfigMembershipSecondaryClusterArrayOutput {
	return o.ApplyT(func(v ClusterCrossClusterReplicationConfigMembership) []ClusterCrossClusterReplicationConfigMembershipSecondaryCluster {
		return v.SecondaryClusters
	}).(ClusterCrossClusterReplicationConfigMembershipSecondaryClusterArrayOutput)
}

type ClusterCrossClusterReplicationConfigMembershipArrayOutput struct{ *pulumi.OutputState }

func (ClusterCrossClusterReplicationConfigMembershipArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterCrossClusterReplicationConfigMembership)(nil)).Elem()
}

func (o ClusterCrossClusterReplicationConfigMembershipArrayOutput) ToClusterCrossClusterReplicationConfigMembershipArrayOutput() ClusterCrossClusterReplicationConfigMembershipArrayOutput {
	return o
}

func (o ClusterCrossClusterReplicationConfigMembershipArrayOutput) ToClusterCrossClusterReplicationConfigMembershipArrayOutputWithContext(ctx context.Context) ClusterCrossClusterReplicationConfigMembershipArrayOutput {
	return o
}

func (o ClusterCrossClusterReplicationConfigMembershipArrayOutput) Index(i pulumi.IntInput) ClusterCrossClusterReplicationConfigMembershipOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterCrossClusterReplicationConfigMembership {
		return vs[0].([]ClusterCrossClusterReplicationConfigMembership)[vs[1].(int)]
	}).(ClusterCrossClusterReplicationConfigMembershipOutput)
}

type ClusterCrossClusterReplicationConfigMembershipPrimaryCluster struct {
	// The full resource path of the primary cluster in the format: projects/{project}/locations/{region}/clusters/{cluster-id}
	Cluster *string `pulumi:"cluster"`
	// (Output)
	// The unique id of the primary cluster.
	Uid *string `pulumi:"uid"`
}

// ClusterCrossClusterReplicationConfigMembershipPrimaryClusterInput is an input type that accepts ClusterCrossClusterReplicationConfigMembershipPrimaryClusterArgs and ClusterCrossClusterReplicationConfigMembershipPrimaryClusterOutput values.
// You can construct a concrete instance of `ClusterCrossClusterReplicationConfigMembershipPrimaryClusterInput` via:
//
//	ClusterCrossClusterReplicationConfigMembershipPrimaryClusterArgs{...}
type ClusterCrossClusterReplicationConfigMembershipPrimaryClusterInput interface {
	pulumi.Input

	ToClusterCrossClusterReplicationConfigMembershipPrimaryClusterOutput() ClusterCrossClusterReplicationConfigMembershipPrimaryClusterOutput
	ToClusterCrossClusterReplicationConfigMembershipPrimaryClusterOutputWithContext(context.Context) ClusterCrossClusterReplicationConfigMembershipPrimaryClusterOutput
}

type ClusterCrossClusterReplicationConfigMembershipPrimaryClusterArgs struct {
	// The full resource path of the primary cluster in the format: projects/{project}/locations/{region}/clusters/{cluster-id}
	Cluster pulumi.StringPtrInput `pulumi:"cluster"`
	// (Output)
	// The unique id of the primary cluster.
	Uid pulumi.StringPtrInput `pulumi:"uid"`
}

func (ClusterCrossClusterReplicationConfigMembershipPrimaryClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCrossClusterReplicationConfigMembershipPrimaryCluster)(nil)).Elem()
}

func (i ClusterCrossClusterReplicationConfigMembershipPrimaryClusterArgs) ToClusterCrossClusterReplicationConfigMembershipPrimaryClusterOutput() ClusterCrossClusterReplicationConfigMembershipPrimaryClusterOutput {
	return i.ToClusterCrossClusterReplicationConfigMembershipPrimaryClusterOutputWithContext(context.Background())
}

func (i ClusterCrossClusterReplicationConfigMembershipPrimaryClusterArgs) ToClusterCrossClusterReplicationConfigMembershipPrimaryClusterOutputWithContext(ctx context.Context) ClusterCrossClusterReplicationConfigMembershipPrimaryClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCrossClusterReplicationConfigMembershipPrimaryClusterOutput)
}

// ClusterCrossClusterReplicationConfigMembershipPrimaryClusterArrayInput is an input type that accepts ClusterCrossClusterReplicationConfigMembershipPrimaryClusterArray and ClusterCrossClusterReplicationConfigMembershipPrimaryClusterArrayOutput values.
// You can construct a concrete instance of `ClusterCrossClusterReplicationConfigMembershipPrimaryClusterArrayInput` via:
//
//	ClusterCrossClusterReplicationConfigMembershipPrimaryClusterArray{ ClusterCrossClusterReplicationConfigMembershipPrimaryClusterArgs{...} }
type ClusterCrossClusterReplicationConfigMembershipPrimaryClusterArrayInput interface {
	pulumi.Input

	ToClusterCrossClusterReplicationConfigMembershipPrimaryClusterArrayOutput() ClusterCrossClusterReplicationConfigMembershipPrimaryClusterArrayOutput
	ToClusterCrossClusterReplicationConfigMembershipPrimaryClusterArrayOutputWithContext(context.Context) ClusterCrossClusterReplicationConfigMembershipPrimaryClusterArrayOutput
}

type ClusterCrossClusterReplicationConfigMembershipPrimaryClusterArray []ClusterCrossClusterReplicationConfigMembershipPrimaryClusterInput

func (ClusterCrossClusterReplicationConfigMembershipPrimaryClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterCrossClusterReplicationConfigMembershipPrimaryCluster)(nil)).Elem()
}

func (i ClusterCrossClusterReplicationConfigMembershipPrimaryClusterArray) ToClusterCrossClusterReplicationConfigMembershipPrimaryClusterArrayOutput() ClusterCrossClusterReplicationConfigMembershipPrimaryClusterArrayOutput {
	return i.ToClusterCrossClusterReplicationConfigMembershipPrimaryClusterArrayOutputWithContext(context.Background())
}

func (i ClusterCrossClusterReplicationConfigMembershipPrimaryClusterArray) ToClusterCrossClusterReplicationConfigMembershipPrimaryClusterArrayOutputWithContext(ctx context.Context) ClusterCrossClusterReplicationConfigMembershipPrimaryClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCrossClusterReplicationConfigMembershipPrimaryClusterArrayOutput)
}

type ClusterCrossClusterReplicationConfigMembershipPrimaryClusterOutput struct{ *pulumi.OutputState }

func (ClusterCrossClusterReplicationConfigMembershipPrimaryClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCrossClusterReplicationConfigMembershipPrimaryCluster)(nil)).Elem()
}

func (o ClusterCrossClusterReplicationConfigMembershipPrimaryClusterOutput) ToClusterCrossClusterReplicationConfigMembershipPrimaryClusterOutput() ClusterCrossClusterReplicationConfigMembershipPrimaryClusterOutput {
	return o
}

func (o ClusterCrossClusterReplicationConfigMembershipPrimaryClusterOutput) ToClusterCrossClusterReplicationConfigMembershipPrimaryClusterOutputWithContext(ctx context.Context) ClusterCrossClusterReplicationConfigMembershipPrimaryClusterOutput {
	return o
}

// The full resource path of the primary cluster in the format: projects/{project}/locations/{region}/clusters/{cluster-id}
func (o ClusterCrossClusterReplicationConfigMembershipPrimaryClusterOutput) Cluster() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCrossClusterReplicationConfigMembershipPrimaryCluster) *string { return v.Cluster }).(pulumi.StringPtrOutput)
}

// (Output)
// The unique id of the primary cluster.
func (o ClusterCrossClusterReplicationConfigMembershipPrimaryClusterOutput) Uid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCrossClusterReplicationConfigMembershipPrimaryCluster) *string { return v.Uid }).(pulumi.StringPtrOutput)
}

type ClusterCrossClusterReplicationConfigMembershipPrimaryClusterArrayOutput struct{ *pulumi.OutputState }

func (ClusterCrossClusterReplicationConfigMembershipPrimaryClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterCrossClusterReplicationConfigMembershipPrimaryCluster)(nil)).Elem()
}

func (o ClusterCrossClusterReplicationConfigMembershipPrimaryClusterArrayOutput) ToClusterCrossClusterReplicationConfigMembershipPrimaryClusterArrayOutput() ClusterCrossClusterReplicationConfigMembershipPrimaryClusterArrayOutput {
	return o
}

func (o ClusterCrossClusterReplicationConfigMembershipPrimaryClusterArrayOutput) ToClusterCrossClusterReplicationConfigMembershipPrimaryClusterArrayOutputWithContext(ctx context.Context) ClusterCrossClusterReplicationConfigMembershipPrimaryClusterArrayOutput {
	return o
}

func (o ClusterCrossClusterReplicationConfigMembershipPrimaryClusterArrayOutput) Index(i pulumi.IntInput) ClusterCrossClusterReplicationConfigMembershipPrimaryClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterCrossClusterReplicationConfigMembershipPrimaryCluster {
		return vs[0].([]ClusterCrossClusterReplicationConfigMembershipPrimaryCluster)[vs[1].(int)]
	}).(ClusterCrossClusterReplicationConfigMembershipPrimaryClusterOutput)
}

type ClusterCrossClusterReplicationConfigMembershipSecondaryCluster struct {
	// (Output)
	// The full resource path of the secondary cluster in the format: projects/{project}/locations/{region}/clusters/{cluster-id}
	Cluster *string `pulumi:"cluster"`
	// (Output)
	// The unique id of the secondary cluster.
	Uid *string `pulumi:"uid"`
}

// ClusterCrossClusterReplicationConfigMembershipSecondaryClusterInput is an input type that accepts ClusterCrossClusterReplicationConfigMembershipSecondaryClusterArgs and ClusterCrossClusterReplicationConfigMembershipSecondaryClusterOutput values.
// You can construct a concrete instance of `ClusterCrossClusterReplicationConfigMembershipSecondaryClusterInput` via:
//
//	ClusterCrossClusterReplicationConfigMembershipSecondaryClusterArgs{...}
type ClusterCrossClusterReplicationConfigMembershipSecondaryClusterInput interface {
	pulumi.Input

	ToClusterCrossClusterReplicationConfigMembershipSecondaryClusterOutput() ClusterCrossClusterReplicationConfigMembershipSecondaryClusterOutput
	ToClusterCrossClusterReplicationConfigMembershipSecondaryClusterOutputWithContext(context.Context) ClusterCrossClusterReplicationConfigMembershipSecondaryClusterOutput
}

type ClusterCrossClusterReplicationConfigMembershipSecondaryClusterArgs struct {
	// (Output)
	// The full resource path of the secondary cluster in the format: projects/{project}/locations/{region}/clusters/{cluster-id}
	Cluster pulumi.StringPtrInput `pulumi:"cluster"`
	// (Output)
	// The unique id of the secondary cluster.
	Uid pulumi.StringPtrInput `pulumi:"uid"`
}

func (ClusterCrossClusterReplicationConfigMembershipSecondaryClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCrossClusterReplicationConfigMembershipSecondaryCluster)(nil)).Elem()
}

func (i ClusterCrossClusterReplicationConfigMembershipSecondaryClusterArgs) ToClusterCrossClusterReplicationConfigMembershipSecondaryClusterOutput() ClusterCrossClusterReplicationConfigMembershipSecondaryClusterOutput {
	return i.ToClusterCrossClusterReplicationConfigMembershipSecondaryClusterOutputWithContext(context.Background())
}

func (i ClusterCrossClusterReplicationConfigMembershipSecondaryClusterArgs) ToClusterCrossClusterReplicationConfigMembershipSecondaryClusterOutputWithContext(ctx context.Context) ClusterCrossClusterReplicationConfigMembershipSecondaryClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCrossClusterReplicationConfigMembershipSecondaryClusterOutput)
}

// ClusterCrossClusterReplicationConfigMembershipSecondaryClusterArrayInput is an input type that accepts ClusterCrossClusterReplicationConfigMembershipSecondaryClusterArray and ClusterCrossClusterReplicationConfigMembershipSecondaryClusterArrayOutput values.
// You can construct a concrete instance of `ClusterCrossClusterReplicationConfigMembershipSecondaryClusterArrayInput` via:
//
//	ClusterCrossClusterReplicationConfigMembershipSecondaryClusterArray{ ClusterCrossClusterReplicationConfigMembershipSecondaryClusterArgs{...} }
type ClusterCrossClusterReplicationConfigMembershipSecondaryClusterArrayInput interface {
	pulumi.Input

	ToClusterCrossClusterReplicationConfigMembershipSecondaryClusterArrayOutput() ClusterCrossClusterReplicationConfigMembershipSecondaryClusterArrayOutput
	ToClusterCrossClusterReplicationConfigMembershipSecondaryClusterArrayOutputWithContext(context.Context) ClusterCrossClusterReplicationConfigMembershipSecondaryClusterArrayOutput
}

type ClusterCrossClusterReplicationConfigMembershipSecondaryClusterArray []ClusterCrossClusterReplicationConfigMembershipSecondaryClusterInput

func (ClusterCrossClusterReplicationConfigMembershipSecondaryClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterCrossClusterReplicationConfigMembershipSecondaryCluster)(nil)).Elem()
}

func (i ClusterCrossClusterReplicationConfigMembershipSecondaryClusterArray) ToClusterCrossClusterReplicationConfigMembershipSecondaryClusterArrayOutput() ClusterCrossClusterReplicationConfigMembershipSecondaryClusterArrayOutput {
	return i.ToClusterCrossClusterReplicationConfigMembershipSecondaryClusterArrayOutputWithContext(context.Background())
}

func (i ClusterCrossClusterReplicationConfigMembershipSecondaryClusterArray) ToClusterCrossClusterReplicationConfigMembershipSecondaryClusterArrayOutputWithContext(ctx context.Context) ClusterCrossClusterReplicationConfigMembershipSecondaryClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCrossClusterReplicationConfigMembershipSecondaryClusterArrayOutput)
}

type ClusterCrossClusterReplicationConfigMembershipSecondaryClusterOutput struct{ *pulumi.OutputState }

func (ClusterCrossClusterReplicationConfigMembershipSecondaryClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCrossClusterReplicationConfigMembershipSecondaryCluster)(nil)).Elem()
}

func (o ClusterCrossClusterReplicationConfigMembershipSecondaryClusterOutput) ToClusterCrossClusterReplicationConfigMembershipSecondaryClusterOutput() ClusterCrossClusterReplicationConfigMembershipSecondaryClusterOutput {
	return o
}

func (o ClusterCrossClusterReplicationConfigMembershipSecondaryClusterOutput) ToClusterCrossClusterReplicationConfigMembershipSecondaryClusterOutputWithContext(ctx context.Context) ClusterCrossClusterReplicationConfigMembershipSecondaryClusterOutput {
	return o
}

// (Output)
// The full resource path of the secondary cluster in the format: projects/{project}/locations/{region}/clusters/{cluster-id}
func (o ClusterCrossClusterReplicationConfigMembershipSecondaryClusterOutput) Cluster() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCrossClusterReplicationConfigMembershipSecondaryCluster) *string { return v.Cluster }).(pulumi.StringPtrOutput)
}

// (Output)
// The unique id of the secondary cluster.
func (o ClusterCrossClusterReplicationConfigMembershipSecondaryClusterOutput) Uid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCrossClusterReplicationConfigMembershipSecondaryCluster) *string { return v.Uid }).(pulumi.StringPtrOutput)
}

type ClusterCrossClusterReplicationConfigMembershipSecondaryClusterArrayOutput struct{ *pulumi.OutputState }

func (ClusterCrossClusterReplicationConfigMembershipSecondaryClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterCrossClusterReplicationConfigMembershipSecondaryCluster)(nil)).Elem()
}

func (o ClusterCrossClusterReplicationConfigMembershipSecondaryClusterArrayOutput) ToClusterCrossClusterReplicationConfigMembershipSecondaryClusterArrayOutput() ClusterCrossClusterReplicationConfigMembershipSecondaryClusterArrayOutput {
	return o
}

func (o ClusterCrossClusterReplicationConfigMembershipSecondaryClusterArrayOutput) ToClusterCrossClusterReplicationConfigMembershipSecondaryClusterArrayOutputWithContext(ctx context.Context) ClusterCrossClusterReplicationConfigMembershipSecondaryClusterArrayOutput {
	return o
}

func (o ClusterCrossClusterReplicationConfigMembershipSecondaryClusterArrayOutput) Index(i pulumi.IntInput) ClusterCrossClusterReplicationConfigMembershipSecondaryClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterCrossClusterReplicationConfigMembershipSecondaryCluster {
		return vs[0].([]ClusterCrossClusterReplicationConfigMembershipSecondaryCluster)[vs[1].(int)]
	}).(ClusterCrossClusterReplicationConfigMembershipSecondaryClusterOutput)
}

type ClusterCrossClusterReplicationConfigPrimaryCluster struct {
	// The full resource path of the primary cluster in the format: projects/{project}/locations/{region}/clusters/{cluster-id}
	Cluster *string `pulumi:"cluster"`
	// (Output)
	// The unique id of the primary cluster.
	Uid *string `pulumi:"uid"`
}

// ClusterCrossClusterReplicationConfigPrimaryClusterInput is an input type that accepts ClusterCrossClusterReplicationConfigPrimaryClusterArgs and ClusterCrossClusterReplicationConfigPrimaryClusterOutput values.
// You can construct a concrete instance of `ClusterCrossClusterReplicationConfigPrimaryClusterInput` via:
//
//	ClusterCrossClusterReplicationConfigPrimaryClusterArgs{...}
type ClusterCrossClusterReplicationConfigPrimaryClusterInput interface {
	pulumi.Input

	ToClusterCrossClusterReplicationConfigPrimaryClusterOutput() ClusterCrossClusterReplicationConfigPrimaryClusterOutput
	ToClusterCrossClusterReplicationConfigPrimaryClusterOutputWithContext(context.Context) ClusterCrossClusterReplicationConfigPrimaryClusterOutput
}

type ClusterCrossClusterReplicationConfigPrimaryClusterArgs struct {
	// The full resource path of the primary cluster in the format: projects/{project}/locations/{region}/clusters/{cluster-id}
	Cluster pulumi.StringPtrInput `pulumi:"cluster"`
	// (Output)
	// The unique id of the primary cluster.
	Uid pulumi.StringPtrInput `pulumi:"uid"`
}

func (ClusterCrossClusterReplicationConfigPrimaryClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCrossClusterReplicationConfigPrimaryCluster)(nil)).Elem()
}

func (i ClusterCrossClusterReplicationConfigPrimaryClusterArgs) ToClusterCrossClusterReplicationConfigPrimaryClusterOutput() ClusterCrossClusterReplicationConfigPrimaryClusterOutput {
	return i.ToClusterCrossClusterReplicationConfigPrimaryClusterOutputWithContext(context.Background())
}

func (i ClusterCrossClusterReplicationConfigPrimaryClusterArgs) ToClusterCrossClusterReplicationConfigPrimaryClusterOutputWithContext(ctx context.Context) ClusterCrossClusterReplicationConfigPrimaryClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCrossClusterReplicationConfigPrimaryClusterOutput)
}

func (i ClusterCrossClusterReplicationConfigPrimaryClusterArgs) ToClusterCrossClusterReplicationConfigPrimaryClusterPtrOutput() ClusterCrossClusterReplicationConfigPrimaryClusterPtrOutput {
	return i.ToClusterCrossClusterReplicationConfigPrimaryClusterPtrOutputWithContext(context.Background())
}

func (i ClusterCrossClusterReplicationConfigPrimaryClusterArgs) ToClusterCrossClusterReplicationConfigPrimaryClusterPtrOutputWithContext(ctx context.Context) ClusterCrossClusterReplicationConfigPrimaryClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCrossClusterReplicationConfigPrimaryClusterOutput).ToClusterCrossClusterReplicationConfigPrimaryClusterPtrOutputWithContext(ctx)
}

// ClusterCrossClusterReplicationConfigPrimaryClusterPtrInput is an input type that accepts ClusterCrossClusterReplicationConfigPrimaryClusterArgs, ClusterCrossClusterReplicationConfigPrimaryClusterPtr and ClusterCrossClusterReplicationConfigPrimaryClusterPtrOutput values.
// You can construct a concrete instance of `ClusterCrossClusterReplicationConfigPrimaryClusterPtrInput` via:
//
//	        ClusterCrossClusterReplicationConfigPrimaryClusterArgs{...}
//
//	or:
//
//	        nil
type ClusterCrossClusterReplicationConfigPrimaryClusterPtrInput interface {
	pulumi.Input

	ToClusterCrossClusterReplicationConfigPrimaryClusterPtrOutput() ClusterCrossClusterReplicationConfigPrimaryClusterPtrOutput
	ToClusterCrossClusterReplicationConfigPrimaryClusterPtrOutputWithContext(context.Context) ClusterCrossClusterReplicationConfigPrimaryClusterPtrOutput
}

type clusterCrossClusterReplicationConfigPrimaryClusterPtrType ClusterCrossClusterReplicationConfigPrimaryClusterArgs

func ClusterCrossClusterReplicationConfigPrimaryClusterPtr(v *ClusterCrossClusterReplicationConfigPrimaryClusterArgs) ClusterCrossClusterReplicationConfigPrimaryClusterPtrInput {
	return (*clusterCrossClusterReplicationConfigPrimaryClusterPtrType)(v)
}

func (*clusterCrossClusterReplicationConfigPrimaryClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterCrossClusterReplicationConfigPrimaryCluster)(nil)).Elem()
}

func (i *clusterCrossClusterReplicationConfigPrimaryClusterPtrType) ToClusterCrossClusterReplicationConfigPrimaryClusterPtrOutput() ClusterCrossClusterReplicationConfigPrimaryClusterPtrOutput {
	return i.ToClusterCrossClusterReplicationConfigPrimaryClusterPtrOutputWithContext(context.Background())
}

func (i *clusterCrossClusterReplicationConfigPrimaryClusterPtrType) ToClusterCrossClusterReplicationConfigPrimaryClusterPtrOutputWithContext(ctx context.Context) ClusterCrossClusterReplicationConfigPrimaryClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCrossClusterReplicationConfigPrimaryClusterPtrOutput)
}

type ClusterCrossClusterReplicationConfigPrimaryClusterOutput struct{ *pulumi.OutputState }

func (ClusterCrossClusterReplicationConfigPrimaryClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCrossClusterReplicationConfigPrimaryCluster)(nil)).Elem()
}

func (o ClusterCrossClusterReplicationConfigPrimaryClusterOutput) ToClusterCrossClusterReplicationConfigPrimaryClusterOutput() ClusterCrossClusterReplicationConfigPrimaryClusterOutput {
	return o
}

func (o ClusterCrossClusterReplicationConfigPrimaryClusterOutput) ToClusterCrossClusterReplicationConfigPrimaryClusterOutputWithContext(ctx context.Context) ClusterCrossClusterReplicationConfigPrimaryClusterOutput {
	return o
}

func (o ClusterCrossClusterReplicationConfigPrimaryClusterOutput) ToClusterCrossClusterReplicationConfigPrimaryClusterPtrOutput() ClusterCrossClusterReplicationConfigPrimaryClusterPtrOutput {
	return o.ToClusterCrossClusterReplicationConfigPrimaryClusterPtrOutputWithContext(context.Background())
}

func (o ClusterCrossClusterReplicationConfigPrimaryClusterOutput) ToClusterCrossClusterReplicationConfigPrimaryClusterPtrOutputWithContext(ctx context.Context) ClusterCrossClusterReplicationConfigPrimaryClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterCrossClusterReplicationConfigPrimaryCluster) *ClusterCrossClusterReplicationConfigPrimaryCluster {
		return &v
	}).(ClusterCrossClusterReplicationConfigPrimaryClusterPtrOutput)
}

// The full resource path of the primary cluster in the format: projects/{project}/locations/{region}/clusters/{cluster-id}
func (o ClusterCrossClusterReplicationConfigPrimaryClusterOutput) Cluster() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCrossClusterReplicationConfigPrimaryCluster) *string { return v.Cluster }).(pulumi.StringPtrOutput)
}

// (Output)
// The unique id of the primary cluster.
func (o ClusterCrossClusterReplicationConfigPrimaryClusterOutput) Uid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCrossClusterReplicationConfigPrimaryCluster) *string { return v.Uid }).(pulumi.StringPtrOutput)
}

type ClusterCrossClusterReplicationConfigPrimaryClusterPtrOutput struct{ *pulumi.OutputState }

func (ClusterCrossClusterReplicationConfigPrimaryClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterCrossClusterReplicationConfigPrimaryCluster)(nil)).Elem()
}

func (o ClusterCrossClusterReplicationConfigPrimaryClusterPtrOutput) ToClusterCrossClusterReplicationConfigPrimaryClusterPtrOutput() ClusterCrossClusterReplicationConfigPrimaryClusterPtrOutput {
	return o
}

func (o ClusterCrossClusterReplicationConfigPrimaryClusterPtrOutput) ToClusterCrossClusterReplicationConfigPrimaryClusterPtrOutputWithContext(ctx context.Context) ClusterCrossClusterReplicationConfigPrimaryClusterPtrOutput {
	return o
}

func (o ClusterCrossClusterReplicationConfigPrimaryClusterPtrOutput) Elem() ClusterCrossClusterReplicationConfigPrimaryClusterOutput {
	return o.ApplyT(func(v *ClusterCrossClusterReplicationConfigPrimaryCluster) ClusterCrossClusterReplicationConfigPrimaryCluster {
		if v != nil {
			return *v
		}
		var ret ClusterCrossClusterReplicationConfigPrimaryCluster
		return ret
	}).(ClusterCrossClusterReplicationConfigPrimaryClusterOutput)
}

// The full resource path of the primary cluster in the format: projects/{project}/locations/{region}/clusters/{cluster-id}
func (o ClusterCrossClusterReplicationConfigPrimaryClusterPtrOutput) Cluster() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCrossClusterReplicationConfigPrimaryCluster) *string {
		if v == nil {
			return nil
		}
		return v.Cluster
	}).(pulumi.StringPtrOutput)
}

// (Output)
// The unique id of the primary cluster.
func (o ClusterCrossClusterReplicationConfigPrimaryClusterPtrOutput) Uid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCrossClusterReplicationConfigPrimaryCluster) *string {
		if v == nil {
			return nil
		}
		return v.Uid
	}).(pulumi.StringPtrOutput)
}

type ClusterCrossClusterReplicationConfigSecondaryCluster struct {
	// (Output)
	// The full resource path of the secondary cluster in the format: projects/{project}/locations/{region}/clusters/{cluster-id}
	Cluster *string `pulumi:"cluster"`
	// (Output)
	// The unique id of the secondary cluster.
	Uid *string `pulumi:"uid"`
}

// ClusterCrossClusterReplicationConfigSecondaryClusterInput is an input type that accepts ClusterCrossClusterReplicationConfigSecondaryClusterArgs and ClusterCrossClusterReplicationConfigSecondaryClusterOutput values.
// You can construct a concrete instance of `ClusterCrossClusterReplicationConfigSecondaryClusterInput` via:
//
//	ClusterCrossClusterReplicationConfigSecondaryClusterArgs{...}
type ClusterCrossClusterReplicationConfigSecondaryClusterInput interface {
	pulumi.Input

	ToClusterCrossClusterReplicationConfigSecondaryClusterOutput() ClusterCrossClusterReplicationConfigSecondaryClusterOutput
	ToClusterCrossClusterReplicationConfigSecondaryClusterOutputWithContext(context.Context) ClusterCrossClusterReplicationConfigSecondaryClusterOutput
}

type ClusterCrossClusterReplicationConfigSecondaryClusterArgs struct {
	// (Output)
	// The full resource path of the secondary cluster in the format: projects/{project}/locations/{region}/clusters/{cluster-id}
	Cluster pulumi.StringPtrInput `pulumi:"cluster"`
	// (Output)
	// The unique id of the secondary cluster.
	Uid pulumi.StringPtrInput `pulumi:"uid"`
}

func (ClusterCrossClusterReplicationConfigSecondaryClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCrossClusterReplicationConfigSecondaryCluster)(nil)).Elem()
}

func (i ClusterCrossClusterReplicationConfigSecondaryClusterArgs) ToClusterCrossClusterReplicationConfigSecondaryClusterOutput() ClusterCrossClusterReplicationConfigSecondaryClusterOutput {
	return i.ToClusterCrossClusterReplicationConfigSecondaryClusterOutputWithContext(context.Background())
}

func (i ClusterCrossClusterReplicationConfigSecondaryClusterArgs) ToClusterCrossClusterReplicationConfigSecondaryClusterOutputWithContext(ctx context.Context) ClusterCrossClusterReplicationConfigSecondaryClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCrossClusterReplicationConfigSecondaryClusterOutput)
}

// ClusterCrossClusterReplicationConfigSecondaryClusterArrayInput is an input type that accepts ClusterCrossClusterReplicationConfigSecondaryClusterArray and ClusterCrossClusterReplicationConfigSecondaryClusterArrayOutput values.
// You can construct a concrete instance of `ClusterCrossClusterReplicationConfigSecondaryClusterArrayInput` via:
//
//	ClusterCrossClusterReplicationConfigSecondaryClusterArray{ ClusterCrossClusterReplicationConfigSecondaryClusterArgs{...} }
type ClusterCrossClusterReplicationConfigSecondaryClusterArrayInput interface {
	pulumi.Input

	ToClusterCrossClusterReplicationConfigSecondaryClusterArrayOutput() ClusterCrossClusterReplicationConfigSecondaryClusterArrayOutput
	ToClusterCrossClusterReplicationConfigSecondaryClusterArrayOutputWithContext(context.Context) ClusterCrossClusterReplicationConfigSecondaryClusterArrayOutput
}

type ClusterCrossClusterReplicationConfigSecondaryClusterArray []ClusterCrossClusterReplicationConfigSecondaryClusterInput

func (ClusterCrossClusterReplicationConfigSecondaryClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterCrossClusterReplicationConfigSecondaryCluster)(nil)).Elem()
}

func (i ClusterCrossClusterReplicationConfigSecondaryClusterArray) ToClusterCrossClusterReplicationConfigSecondaryClusterArrayOutput() ClusterCrossClusterReplicationConfigSecondaryClusterArrayOutput {
	return i.ToClusterCrossClusterReplicationConfigSecondaryClusterArrayOutputWithContext(context.Background())
}

func (i ClusterCrossClusterReplicationConfigSecondaryClusterArray) ToClusterCrossClusterReplicationConfigSecondaryClusterArrayOutputWithContext(ctx context.Context) ClusterCrossClusterReplicationConfigSecondaryClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCrossClusterReplicationConfigSecondaryClusterArrayOutput)
}

type ClusterCrossClusterReplicationConfigSecondaryClusterOutput struct{ *pulumi.OutputState }

func (ClusterCrossClusterReplicationConfigSecondaryClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCrossClusterReplicationConfigSecondaryCluster)(nil)).Elem()
}

func (o ClusterCrossClusterReplicationConfigSecondaryClusterOutput) ToClusterCrossClusterReplicationConfigSecondaryClusterOutput() ClusterCrossClusterReplicationConfigSecondaryClusterOutput {
	return o
}

func (o ClusterCrossClusterReplicationConfigSecondaryClusterOutput) ToClusterCrossClusterReplicationConfigSecondaryClusterOutputWithContext(ctx context.Context) ClusterCrossClusterReplicationConfigSecondaryClusterOutput {
	return o
}

// (Output)
// The full resource path of the secondary cluster in the format: projects/{project}/locations/{region}/clusters/{cluster-id}
func (o ClusterCrossClusterReplicationConfigSecondaryClusterOutput) Cluster() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCrossClusterReplicationConfigSecondaryCluster) *string { return v.Cluster }).(pulumi.StringPtrOutput)
}

// (Output)
// The unique id of the secondary cluster.
func (o ClusterCrossClusterReplicationConfigSecondaryClusterOutput) Uid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCrossClusterReplicationConfigSecondaryCluster) *string { return v.Uid }).(pulumi.StringPtrOutput)
}

type ClusterCrossClusterReplicationConfigSecondaryClusterArrayOutput struct{ *pulumi.OutputState }

func (ClusterCrossClusterReplicationConfigSecondaryClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterCrossClusterReplicationConfigSecondaryCluster)(nil)).Elem()
}

func (o ClusterCrossClusterReplicationConfigSecondaryClusterArrayOutput) ToClusterCrossClusterReplicationConfigSecondaryClusterArrayOutput() ClusterCrossClusterReplicationConfigSecondaryClusterArrayOutput {
	return o
}

func (o ClusterCrossClusterReplicationConfigSecondaryClusterArrayOutput) ToClusterCrossClusterReplicationConfigSecondaryClusterArrayOutputWithContext(ctx context.Context) ClusterCrossClusterReplicationConfigSecondaryClusterArrayOutput {
	return o
}

func (o ClusterCrossClusterReplicationConfigSecondaryClusterArrayOutput) Index(i pulumi.IntInput) ClusterCrossClusterReplicationConfigSecondaryClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterCrossClusterReplicationConfigSecondaryCluster {
		return vs[0].([]ClusterCrossClusterReplicationConfigSecondaryCluster)[vs[1].(int)]
	}).(ClusterCrossClusterReplicationConfigSecondaryClusterOutput)
}

type ClusterDiscoveryEndpoint struct {
	// Output only. The IP allocated on the consumer network for the PSC forwarding rule.
	Address *string `pulumi:"address"`
	// Output only. The port number of the exposed Redis endpoint.
	Port *int `pulumi:"port"`
	// Output only. Customer configuration for where the endpoint
	// is created and accessed from.
	// Structure is documented below.
	PscConfig *ClusterDiscoveryEndpointPscConfig `pulumi:"pscConfig"`
}

// ClusterDiscoveryEndpointInput is an input type that accepts ClusterDiscoveryEndpointArgs and ClusterDiscoveryEndpointOutput values.
// You can construct a concrete instance of `ClusterDiscoveryEndpointInput` via:
//
//	ClusterDiscoveryEndpointArgs{...}
type ClusterDiscoveryEndpointInput interface {
	pulumi.Input

	ToClusterDiscoveryEndpointOutput() ClusterDiscoveryEndpointOutput
	ToClusterDiscoveryEndpointOutputWithContext(context.Context) ClusterDiscoveryEndpointOutput
}

type ClusterDiscoveryEndpointArgs struct {
	// Output only. The IP allocated on the consumer network for the PSC forwarding rule.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// Output only. The port number of the exposed Redis endpoint.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Output only. Customer configuration for where the endpoint
	// is created and accessed from.
	// Structure is documented below.
	PscConfig ClusterDiscoveryEndpointPscConfigPtrInput `pulumi:"pscConfig"`
}

func (ClusterDiscoveryEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterDiscoveryEndpoint)(nil)).Elem()
}

func (i ClusterDiscoveryEndpointArgs) ToClusterDiscoveryEndpointOutput() ClusterDiscoveryEndpointOutput {
	return i.ToClusterDiscoveryEndpointOutputWithContext(context.Background())
}

func (i ClusterDiscoveryEndpointArgs) ToClusterDiscoveryEndpointOutputWithContext(ctx context.Context) ClusterDiscoveryEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterDiscoveryEndpointOutput)
}

// ClusterDiscoveryEndpointArrayInput is an input type that accepts ClusterDiscoveryEndpointArray and ClusterDiscoveryEndpointArrayOutput values.
// You can construct a concrete instance of `ClusterDiscoveryEndpointArrayInput` via:
//
//	ClusterDiscoveryEndpointArray{ ClusterDiscoveryEndpointArgs{...} }
type ClusterDiscoveryEndpointArrayInput interface {
	pulumi.Input

	ToClusterDiscoveryEndpointArrayOutput() ClusterDiscoveryEndpointArrayOutput
	ToClusterDiscoveryEndpointArrayOutputWithContext(context.Context) ClusterDiscoveryEndpointArrayOutput
}

type ClusterDiscoveryEndpointArray []ClusterDiscoveryEndpointInput

func (ClusterDiscoveryEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterDiscoveryEndpoint)(nil)).Elem()
}

func (i ClusterDiscoveryEndpointArray) ToClusterDiscoveryEndpointArrayOutput() ClusterDiscoveryEndpointArrayOutput {
	return i.ToClusterDiscoveryEndpointArrayOutputWithContext(context.Background())
}

func (i ClusterDiscoveryEndpointArray) ToClusterDiscoveryEndpointArrayOutputWithContext(ctx context.Context) ClusterDiscoveryEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterDiscoveryEndpointArrayOutput)
}

type ClusterDiscoveryEndpointOutput struct{ *pulumi.OutputState }

func (ClusterDiscoveryEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterDiscoveryEndpoint)(nil)).Elem()
}

func (o ClusterDiscoveryEndpointOutput) ToClusterDiscoveryEndpointOutput() ClusterDiscoveryEndpointOutput {
	return o
}

func (o ClusterDiscoveryEndpointOutput) ToClusterDiscoveryEndpointOutputWithContext(ctx context.Context) ClusterDiscoveryEndpointOutput {
	return o
}

// Output only. The IP allocated on the consumer network for the PSC forwarding rule.
func (o ClusterDiscoveryEndpointOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterDiscoveryEndpoint) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// Output only. The port number of the exposed Redis endpoint.
func (o ClusterDiscoveryEndpointOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterDiscoveryEndpoint) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Output only. Customer configuration for where the endpoint
// is created and accessed from.
// Structure is documented below.
func (o ClusterDiscoveryEndpointOutput) PscConfig() ClusterDiscoveryEndpointPscConfigPtrOutput {
	return o.ApplyT(func(v ClusterDiscoveryEndpoint) *ClusterDiscoveryEndpointPscConfig { return v.PscConfig }).(ClusterDiscoveryEndpointPscConfigPtrOutput)
}

type ClusterDiscoveryEndpointArrayOutput struct{ *pulumi.OutputState }

func (ClusterDiscoveryEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterDiscoveryEndpoint)(nil)).Elem()
}

func (o ClusterDiscoveryEndpointArrayOutput) ToClusterDiscoveryEndpointArrayOutput() ClusterDiscoveryEndpointArrayOutput {
	return o
}

func (o ClusterDiscoveryEndpointArrayOutput) ToClusterDiscoveryEndpointArrayOutputWithContext(ctx context.Context) ClusterDiscoveryEndpointArrayOutput {
	return o
}

func (o ClusterDiscoveryEndpointArrayOutput) Index(i pulumi.IntInput) ClusterDiscoveryEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterDiscoveryEndpoint {
		return vs[0].([]ClusterDiscoveryEndpoint)[vs[1].(int)]
	}).(ClusterDiscoveryEndpointOutput)
}

type ClusterDiscoveryEndpointPscConfig struct {
	// The consumer network where the IP address resides, in the form of projects/{projectId}/global/networks/{network_id}.
	Network *string `pulumi:"network"`
}

// ClusterDiscoveryEndpointPscConfigInput is an input type that accepts ClusterDiscoveryEndpointPscConfigArgs and ClusterDiscoveryEndpointPscConfigOutput values.
// You can construct a concrete instance of `ClusterDiscoveryEndpointPscConfigInput` via:
//
//	ClusterDiscoveryEndpointPscConfigArgs{...}
type ClusterDiscoveryEndpointPscConfigInput interface {
	pulumi.Input

	ToClusterDiscoveryEndpointPscConfigOutput() ClusterDiscoveryEndpointPscConfigOutput
	ToClusterDiscoveryEndpointPscConfigOutputWithContext(context.Context) ClusterDiscoveryEndpointPscConfigOutput
}

type ClusterDiscoveryEndpointPscConfigArgs struct {
	// The consumer network where the IP address resides, in the form of projects/{projectId}/global/networks/{network_id}.
	Network pulumi.StringPtrInput `pulumi:"network"`
}

func (ClusterDiscoveryEndpointPscConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterDiscoveryEndpointPscConfig)(nil)).Elem()
}

func (i ClusterDiscoveryEndpointPscConfigArgs) ToClusterDiscoveryEndpointPscConfigOutput() ClusterDiscoveryEndpointPscConfigOutput {
	return i.ToClusterDiscoveryEndpointPscConfigOutputWithContext(context.Background())
}

func (i ClusterDiscoveryEndpointPscConfigArgs) ToClusterDiscoveryEndpointPscConfigOutputWithContext(ctx context.Context) ClusterDiscoveryEndpointPscConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterDiscoveryEndpointPscConfigOutput)
}

func (i ClusterDiscoveryEndpointPscConfigArgs) ToClusterDiscoveryEndpointPscConfigPtrOutput() ClusterDiscoveryEndpointPscConfigPtrOutput {
	return i.ToClusterDiscoveryEndpointPscConfigPtrOutputWithContext(context.Background())
}

func (i ClusterDiscoveryEndpointPscConfigArgs) ToClusterDiscoveryEndpointPscConfigPtrOutputWithContext(ctx context.Context) ClusterDiscoveryEndpointPscConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterDiscoveryEndpointPscConfigOutput).ToClusterDiscoveryEndpointPscConfigPtrOutputWithContext(ctx)
}

// ClusterDiscoveryEndpointPscConfigPtrInput is an input type that accepts ClusterDiscoveryEndpointPscConfigArgs, ClusterDiscoveryEndpointPscConfigPtr and ClusterDiscoveryEndpointPscConfigPtrOutput values.
// You can construct a concrete instance of `ClusterDiscoveryEndpointPscConfigPtrInput` via:
//
//	        ClusterDiscoveryEndpointPscConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterDiscoveryEndpointPscConfigPtrInput interface {
	pulumi.Input

	ToClusterDiscoveryEndpointPscConfigPtrOutput() ClusterDiscoveryEndpointPscConfigPtrOutput
	ToClusterDiscoveryEndpointPscConfigPtrOutputWithContext(context.Context) ClusterDiscoveryEndpointPscConfigPtrOutput
}

type clusterDiscoveryEndpointPscConfigPtrType ClusterDiscoveryEndpointPscConfigArgs

func ClusterDiscoveryEndpointPscConfigPtr(v *ClusterDiscoveryEndpointPscConfigArgs) ClusterDiscoveryEndpointPscConfigPtrInput {
	return (*clusterDiscoveryEndpointPscConfigPtrType)(v)
}

func (*clusterDiscoveryEndpointPscConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterDiscoveryEndpointPscConfig)(nil)).Elem()
}

func (i *clusterDiscoveryEndpointPscConfigPtrType) ToClusterDiscoveryEndpointPscConfigPtrOutput() ClusterDiscoveryEndpointPscConfigPtrOutput {
	return i.ToClusterDiscoveryEndpointPscConfigPtrOutputWithContext(context.Background())
}

func (i *clusterDiscoveryEndpointPscConfigPtrType) ToClusterDiscoveryEndpointPscConfigPtrOutputWithContext(ctx context.Context) ClusterDiscoveryEndpointPscConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterDiscoveryEndpointPscConfigPtrOutput)
}

type ClusterDiscoveryEndpointPscConfigOutput struct{ *pulumi.OutputState }

func (ClusterDiscoveryEndpointPscConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterDiscoveryEndpointPscConfig)(nil)).Elem()
}

func (o ClusterDiscoveryEndpointPscConfigOutput) ToClusterDiscoveryEndpointPscConfigOutput() ClusterDiscoveryEndpointPscConfigOutput {
	return o
}

func (o ClusterDiscoveryEndpointPscConfigOutput) ToClusterDiscoveryEndpointPscConfigOutputWithContext(ctx context.Context) ClusterDiscoveryEndpointPscConfigOutput {
	return o
}

func (o ClusterDiscoveryEndpointPscConfigOutput) ToClusterDiscoveryEndpointPscConfigPtrOutput() ClusterDiscoveryEndpointPscConfigPtrOutput {
	return o.ToClusterDiscoveryEndpointPscConfigPtrOutputWithContext(context.Background())
}

func (o ClusterDiscoveryEndpointPscConfigOutput) ToClusterDiscoveryEndpointPscConfigPtrOutputWithContext(ctx context.Context) ClusterDiscoveryEndpointPscConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterDiscoveryEndpointPscConfig) *ClusterDiscoveryEndpointPscConfig {
		return &v
	}).(ClusterDiscoveryEndpointPscConfigPtrOutput)
}

// The consumer network where the IP address resides, in the form of projects/{projectId}/global/networks/{network_id}.
func (o ClusterDiscoveryEndpointPscConfigOutput) Network() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterDiscoveryEndpointPscConfig) *string { return v.Network }).(pulumi.StringPtrOutput)
}

type ClusterDiscoveryEndpointPscConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterDiscoveryEndpointPscConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterDiscoveryEndpointPscConfig)(nil)).Elem()
}

func (o ClusterDiscoveryEndpointPscConfigPtrOutput) ToClusterDiscoveryEndpointPscConfigPtrOutput() ClusterDiscoveryEndpointPscConfigPtrOutput {
	return o
}

func (o ClusterDiscoveryEndpointPscConfigPtrOutput) ToClusterDiscoveryEndpointPscConfigPtrOutputWithContext(ctx context.Context) ClusterDiscoveryEndpointPscConfigPtrOutput {
	return o
}

func (o ClusterDiscoveryEndpointPscConfigPtrOutput) Elem() ClusterDiscoveryEndpointPscConfigOutput {
	return o.ApplyT(func(v *ClusterDiscoveryEndpointPscConfig) ClusterDiscoveryEndpointPscConfig {
		if v != nil {
			return *v
		}
		var ret ClusterDiscoveryEndpointPscConfig
		return ret
	}).(ClusterDiscoveryEndpointPscConfigOutput)
}

// The consumer network where the IP address resides, in the form of projects/{projectId}/global/networks/{network_id}.
func (o ClusterDiscoveryEndpointPscConfigPtrOutput) Network() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterDiscoveryEndpointPscConfig) *string {
		if v == nil {
			return nil
		}
		return v.Network
	}).(pulumi.StringPtrOutput)
}

type ClusterMaintenancePolicy struct {
	// (Output)
	// Output only. The time when the policy was created.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits.
	CreateTime *string `pulumi:"createTime"`
	// (Output)
	// Output only. The time when the policy was last updated.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits.
	UpdateTime *string `pulumi:"updateTime"`
	// Optional. Maintenance window that is applied to resources covered by this policy.
	// Minimum 1. For the current version, the maximum number
	// of weeklyWindow is expected to be one.
	// Structure is documented below.
	WeeklyMaintenanceWindows []ClusterMaintenancePolicyWeeklyMaintenanceWindow `pulumi:"weeklyMaintenanceWindows"`
}

// ClusterMaintenancePolicyInput is an input type that accepts ClusterMaintenancePolicyArgs and ClusterMaintenancePolicyOutput values.
// You can construct a concrete instance of `ClusterMaintenancePolicyInput` via:
//
//	ClusterMaintenancePolicyArgs{...}
type ClusterMaintenancePolicyInput interface {
	pulumi.Input

	ToClusterMaintenancePolicyOutput() ClusterMaintenancePolicyOutput
	ToClusterMaintenancePolicyOutputWithContext(context.Context) ClusterMaintenancePolicyOutput
}

type ClusterMaintenancePolicyArgs struct {
	// (Output)
	// Output only. The time when the policy was created.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits.
	CreateTime pulumi.StringPtrInput `pulumi:"createTime"`
	// (Output)
	// Output only. The time when the policy was last updated.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits.
	UpdateTime pulumi.StringPtrInput `pulumi:"updateTime"`
	// Optional. Maintenance window that is applied to resources covered by this policy.
	// Minimum 1. For the current version, the maximum number
	// of weeklyWindow is expected to be one.
	// Structure is documented below.
	WeeklyMaintenanceWindows ClusterMaintenancePolicyWeeklyMaintenanceWindowArrayInput `pulumi:"weeklyMaintenanceWindows"`
}

func (ClusterMaintenancePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMaintenancePolicy)(nil)).Elem()
}

func (i ClusterMaintenancePolicyArgs) ToClusterMaintenancePolicyOutput() ClusterMaintenancePolicyOutput {
	return i.ToClusterMaintenancePolicyOutputWithContext(context.Background())
}

func (i ClusterMaintenancePolicyArgs) ToClusterMaintenancePolicyOutputWithContext(ctx context.Context) ClusterMaintenancePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenancePolicyOutput)
}

func (i ClusterMaintenancePolicyArgs) ToClusterMaintenancePolicyPtrOutput() ClusterMaintenancePolicyPtrOutput {
	return i.ToClusterMaintenancePolicyPtrOutputWithContext(context.Background())
}

func (i ClusterMaintenancePolicyArgs) ToClusterMaintenancePolicyPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenancePolicyOutput).ToClusterMaintenancePolicyPtrOutputWithContext(ctx)
}

// ClusterMaintenancePolicyPtrInput is an input type that accepts ClusterMaintenancePolicyArgs, ClusterMaintenancePolicyPtr and ClusterMaintenancePolicyPtrOutput values.
// You can construct a concrete instance of `ClusterMaintenancePolicyPtrInput` via:
//
//	        ClusterMaintenancePolicyArgs{...}
//
//	or:
//
//	        nil
type ClusterMaintenancePolicyPtrInput interface {
	pulumi.Input

	ToClusterMaintenancePolicyPtrOutput() ClusterMaintenancePolicyPtrOutput
	ToClusterMaintenancePolicyPtrOutputWithContext(context.Context) ClusterMaintenancePolicyPtrOutput
}

type clusterMaintenancePolicyPtrType ClusterMaintenancePolicyArgs

func ClusterMaintenancePolicyPtr(v *ClusterMaintenancePolicyArgs) ClusterMaintenancePolicyPtrInput {
	return (*clusterMaintenancePolicyPtrType)(v)
}

func (*clusterMaintenancePolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMaintenancePolicy)(nil)).Elem()
}

func (i *clusterMaintenancePolicyPtrType) ToClusterMaintenancePolicyPtrOutput() ClusterMaintenancePolicyPtrOutput {
	return i.ToClusterMaintenancePolicyPtrOutputWithContext(context.Background())
}

func (i *clusterMaintenancePolicyPtrType) ToClusterMaintenancePolicyPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenancePolicyPtrOutput)
}

type ClusterMaintenancePolicyOutput struct{ *pulumi.OutputState }

func (ClusterMaintenancePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMaintenancePolicy)(nil)).Elem()
}

func (o ClusterMaintenancePolicyOutput) ToClusterMaintenancePolicyOutput() ClusterMaintenancePolicyOutput {
	return o
}

func (o ClusterMaintenancePolicyOutput) ToClusterMaintenancePolicyOutputWithContext(ctx context.Context) ClusterMaintenancePolicyOutput {
	return o
}

func (o ClusterMaintenancePolicyOutput) ToClusterMaintenancePolicyPtrOutput() ClusterMaintenancePolicyPtrOutput {
	return o.ToClusterMaintenancePolicyPtrOutputWithContext(context.Background())
}

func (o ClusterMaintenancePolicyOutput) ToClusterMaintenancePolicyPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterMaintenancePolicy) *ClusterMaintenancePolicy {
		return &v
	}).(ClusterMaintenancePolicyPtrOutput)
}

// (Output)
// Output only. The time when the policy was created.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
// resolution and up to nine fractional digits.
func (o ClusterMaintenancePolicyOutput) CreateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicy) *string { return v.CreateTime }).(pulumi.StringPtrOutput)
}

// (Output)
// Output only. The time when the policy was last updated.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
// resolution and up to nine fractional digits.
func (o ClusterMaintenancePolicyOutput) UpdateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicy) *string { return v.UpdateTime }).(pulumi.StringPtrOutput)
}

// Optional. Maintenance window that is applied to resources covered by this policy.
// Minimum 1. For the current version, the maximum number
// of weeklyWindow is expected to be one.
// Structure is documented below.
func (o ClusterMaintenancePolicyOutput) WeeklyMaintenanceWindows() ClusterMaintenancePolicyWeeklyMaintenanceWindowArrayOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicy) []ClusterMaintenancePolicyWeeklyMaintenanceWindow {
		return v.WeeklyMaintenanceWindows
	}).(ClusterMaintenancePolicyWeeklyMaintenanceWindowArrayOutput)
}

type ClusterMaintenancePolicyPtrOutput struct{ *pulumi.OutputState }

func (ClusterMaintenancePolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMaintenancePolicy)(nil)).Elem()
}

func (o ClusterMaintenancePolicyPtrOutput) ToClusterMaintenancePolicyPtrOutput() ClusterMaintenancePolicyPtrOutput {
	return o
}

func (o ClusterMaintenancePolicyPtrOutput) ToClusterMaintenancePolicyPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyPtrOutput {
	return o
}

func (o ClusterMaintenancePolicyPtrOutput) Elem() ClusterMaintenancePolicyOutput {
	return o.ApplyT(func(v *ClusterMaintenancePolicy) ClusterMaintenancePolicy {
		if v != nil {
			return *v
		}
		var ret ClusterMaintenancePolicy
		return ret
	}).(ClusterMaintenancePolicyOutput)
}

// (Output)
// Output only. The time when the policy was created.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
// resolution and up to nine fractional digits.
func (o ClusterMaintenancePolicyPtrOutput) CreateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterMaintenancePolicy) *string {
		if v == nil {
			return nil
		}
		return v.CreateTime
	}).(pulumi.StringPtrOutput)
}

// (Output)
// Output only. The time when the policy was last updated.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
// resolution and up to nine fractional digits.
func (o ClusterMaintenancePolicyPtrOutput) UpdateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterMaintenancePolicy) *string {
		if v == nil {
			return nil
		}
		return v.UpdateTime
	}).(pulumi.StringPtrOutput)
}

// Optional. Maintenance window that is applied to resources covered by this policy.
// Minimum 1. For the current version, the maximum number
// of weeklyWindow is expected to be one.
// Structure is documented below.
func (o ClusterMaintenancePolicyPtrOutput) WeeklyMaintenanceWindows() ClusterMaintenancePolicyWeeklyMaintenanceWindowArrayOutput {
	return o.ApplyT(func(v *ClusterMaintenancePolicy) []ClusterMaintenancePolicyWeeklyMaintenanceWindow {
		if v == nil {
			return nil
		}
		return v.WeeklyMaintenanceWindows
	}).(ClusterMaintenancePolicyWeeklyMaintenanceWindowArrayOutput)
}

type ClusterMaintenancePolicyWeeklyMaintenanceWindow struct {
	// Required. The day of week that maintenance updates occur.
	// - DAY_OF_WEEK_UNSPECIFIED: The day of the week is unspecified.
	// - MONDAY: Monday
	// - TUESDAY: Tuesday
	// - WEDNESDAY: Wednesday
	// - THURSDAY: Thursday
	// - FRIDAY: Friday
	// - SATURDAY: Saturday
	// - SUNDAY: Sunday
	//   Possible values are: `DAY_OF_WEEK_UNSPECIFIED`, `MONDAY`, `TUESDAY`, `WEDNESDAY`, `THURSDAY`, `FRIDAY`, `SATURDAY`, `SUNDAY`.
	Day string `pulumi:"day"`
	// (Output)
	// Output only. Duration of the maintenance window.
	// The current window is fixed at 1 hour.
	// A duration in seconds with up to nine fractional digits,
	// terminated by 's'. Example: "3.5s".
	Duration *string `pulumi:"duration"`
	// Required. Start time of the window in UTC time.
	// Structure is documented below.
	StartTime ClusterMaintenancePolicyWeeklyMaintenanceWindowStartTime `pulumi:"startTime"`
}

// ClusterMaintenancePolicyWeeklyMaintenanceWindowInput is an input type that accepts ClusterMaintenancePolicyWeeklyMaintenanceWindowArgs and ClusterMaintenancePolicyWeeklyMaintenanceWindowOutput values.
// You can construct a concrete instance of `ClusterMaintenancePolicyWeeklyMaintenanceWindowInput` via:
//
//	ClusterMaintenancePolicyWeeklyMaintenanceWindowArgs{...}
type ClusterMaintenancePolicyWeeklyMaintenanceWindowInput interface {
	pulumi.Input

	ToClusterMaintenancePolicyWeeklyMaintenanceWindowOutput() ClusterMaintenancePolicyWeeklyMaintenanceWindowOutput
	ToClusterMaintenancePolicyWeeklyMaintenanceWindowOutputWithContext(context.Context) ClusterMaintenancePolicyWeeklyMaintenanceWindowOutput
}

type ClusterMaintenancePolicyWeeklyMaintenanceWindowArgs struct {
	// Required. The day of week that maintenance updates occur.
	// - DAY_OF_WEEK_UNSPECIFIED: The day of the week is unspecified.
	// - MONDAY: Monday
	// - TUESDAY: Tuesday
	// - WEDNESDAY: Wednesday
	// - THURSDAY: Thursday
	// - FRIDAY: Friday
	// - SATURDAY: Saturday
	// - SUNDAY: Sunday
	//   Possible values are: `DAY_OF_WEEK_UNSPECIFIED`, `MONDAY`, `TUESDAY`, `WEDNESDAY`, `THURSDAY`, `FRIDAY`, `SATURDAY`, `SUNDAY`.
	Day pulumi.StringInput `pulumi:"day"`
	// (Output)
	// Output only. Duration of the maintenance window.
	// The current window is fixed at 1 hour.
	// A duration in seconds with up to nine fractional digits,
	// terminated by 's'. Example: "3.5s".
	Duration pulumi.StringPtrInput `pulumi:"duration"`
	// Required. Start time of the window in UTC time.
	// Structure is documented below.
	StartTime ClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeInput `pulumi:"startTime"`
}

func (ClusterMaintenancePolicyWeeklyMaintenanceWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMaintenancePolicyWeeklyMaintenanceWindow)(nil)).Elem()
}

func (i ClusterMaintenancePolicyWeeklyMaintenanceWindowArgs) ToClusterMaintenancePolicyWeeklyMaintenanceWindowOutput() ClusterMaintenancePolicyWeeklyMaintenanceWindowOutput {
	return i.ToClusterMaintenancePolicyWeeklyMaintenanceWindowOutputWithContext(context.Background())
}

func (i ClusterMaintenancePolicyWeeklyMaintenanceWindowArgs) ToClusterMaintenancePolicyWeeklyMaintenanceWindowOutputWithContext(ctx context.Context) ClusterMaintenancePolicyWeeklyMaintenanceWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenancePolicyWeeklyMaintenanceWindowOutput)
}

// ClusterMaintenancePolicyWeeklyMaintenanceWindowArrayInput is an input type that accepts ClusterMaintenancePolicyWeeklyMaintenanceWindowArray and ClusterMaintenancePolicyWeeklyMaintenanceWindowArrayOutput values.
// You can construct a concrete instance of `ClusterMaintenancePolicyWeeklyMaintenanceWindowArrayInput` via:
//
//	ClusterMaintenancePolicyWeeklyMaintenanceWindowArray{ ClusterMaintenancePolicyWeeklyMaintenanceWindowArgs{...} }
type ClusterMaintenancePolicyWeeklyMaintenanceWindowArrayInput interface {
	pulumi.Input

	ToClusterMaintenancePolicyWeeklyMaintenanceWindowArrayOutput() ClusterMaintenancePolicyWeeklyMaintenanceWindowArrayOutput
	ToClusterMaintenancePolicyWeeklyMaintenanceWindowArrayOutputWithContext(context.Context) ClusterMaintenancePolicyWeeklyMaintenanceWindowArrayOutput
}

type ClusterMaintenancePolicyWeeklyMaintenanceWindowArray []ClusterMaintenancePolicyWeeklyMaintenanceWindowInput

func (ClusterMaintenancePolicyWeeklyMaintenanceWindowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterMaintenancePolicyWeeklyMaintenanceWindow)(nil)).Elem()
}

func (i ClusterMaintenancePolicyWeeklyMaintenanceWindowArray) ToClusterMaintenancePolicyWeeklyMaintenanceWindowArrayOutput() ClusterMaintenancePolicyWeeklyMaintenanceWindowArrayOutput {
	return i.ToClusterMaintenancePolicyWeeklyMaintenanceWindowArrayOutputWithContext(context.Background())
}

func (i ClusterMaintenancePolicyWeeklyMaintenanceWindowArray) ToClusterMaintenancePolicyWeeklyMaintenanceWindowArrayOutputWithContext(ctx context.Context) ClusterMaintenancePolicyWeeklyMaintenanceWindowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenancePolicyWeeklyMaintenanceWindowArrayOutput)
}

type ClusterMaintenancePolicyWeeklyMaintenanceWindowOutput struct{ *pulumi.OutputState }

func (ClusterMaintenancePolicyWeeklyMaintenanceWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMaintenancePolicyWeeklyMaintenanceWindow)(nil)).Elem()
}

func (o ClusterMaintenancePolicyWeeklyMaintenanceWindowOutput) ToClusterMaintenancePolicyWeeklyMaintenanceWindowOutput() ClusterMaintenancePolicyWeeklyMaintenanceWindowOutput {
	return o
}

func (o ClusterMaintenancePolicyWeeklyMaintenanceWindowOutput) ToClusterMaintenancePolicyWeeklyMaintenanceWindowOutputWithContext(ctx context.Context) ClusterMaintenancePolicyWeeklyMaintenanceWindowOutput {
	return o
}

// Required. The day of week that maintenance updates occur.
//   - DAY_OF_WEEK_UNSPECIFIED: The day of the week is unspecified.
//   - MONDAY: Monday
//   - TUESDAY: Tuesday
//   - WEDNESDAY: Wednesday
//   - THURSDAY: Thursday
//   - FRIDAY: Friday
//   - SATURDAY: Saturday
//   - SUNDAY: Sunday
//     Possible values are: `DAY_OF_WEEK_UNSPECIFIED`, `MONDAY`, `TUESDAY`, `WEDNESDAY`, `THURSDAY`, `FRIDAY`, `SATURDAY`, `SUNDAY`.
func (o ClusterMaintenancePolicyWeeklyMaintenanceWindowOutput) Day() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicyWeeklyMaintenanceWindow) string { return v.Day }).(pulumi.StringOutput)
}

// (Output)
// Output only. Duration of the maintenance window.
// The current window is fixed at 1 hour.
// A duration in seconds with up to nine fractional digits,
// terminated by 's'. Example: "3.5s".
func (o ClusterMaintenancePolicyWeeklyMaintenanceWindowOutput) Duration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicyWeeklyMaintenanceWindow) *string { return v.Duration }).(pulumi.StringPtrOutput)
}

// Required. Start time of the window in UTC time.
// Structure is documented below.
func (o ClusterMaintenancePolicyWeeklyMaintenanceWindowOutput) StartTime() ClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicyWeeklyMaintenanceWindow) ClusterMaintenancePolicyWeeklyMaintenanceWindowStartTime {
		return v.StartTime
	}).(ClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput)
}

type ClusterMaintenancePolicyWeeklyMaintenanceWindowArrayOutput struct{ *pulumi.OutputState }

func (ClusterMaintenancePolicyWeeklyMaintenanceWindowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterMaintenancePolicyWeeklyMaintenanceWindow)(nil)).Elem()
}

func (o ClusterMaintenancePolicyWeeklyMaintenanceWindowArrayOutput) ToClusterMaintenancePolicyWeeklyMaintenanceWindowArrayOutput() ClusterMaintenancePolicyWeeklyMaintenanceWindowArrayOutput {
	return o
}

func (o ClusterMaintenancePolicyWeeklyMaintenanceWindowArrayOutput) ToClusterMaintenancePolicyWeeklyMaintenanceWindowArrayOutputWithContext(ctx context.Context) ClusterMaintenancePolicyWeeklyMaintenanceWindowArrayOutput {
	return o
}

func (o ClusterMaintenancePolicyWeeklyMaintenanceWindowArrayOutput) Index(i pulumi.IntInput) ClusterMaintenancePolicyWeeklyMaintenanceWindowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterMaintenancePolicyWeeklyMaintenanceWindow {
		return vs[0].([]ClusterMaintenancePolicyWeeklyMaintenanceWindow)[vs[1].(int)]
	}).(ClusterMaintenancePolicyWeeklyMaintenanceWindowOutput)
}

type ClusterMaintenancePolicyWeeklyMaintenanceWindowStartTime struct {
	// Hours of day in 24 hour format. Should be from 0 to 23.
	// An API may choose to allow the value "24:00:00" for scenarios like business closing time.
	Hours *int `pulumi:"hours"`
	// Minutes of hour of day. Must be from 0 to 59.
	Minutes *int `pulumi:"minutes"`
	// Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
	Nanos *int `pulumi:"nanos"`
	// Seconds of minutes of the time. Must normally be from 0 to 59.
	// An API may allow the value 60 if it allows leap-seconds.
	Seconds *int `pulumi:"seconds"`
}

// ClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeInput is an input type that accepts ClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeArgs and ClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput values.
// You can construct a concrete instance of `ClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeInput` via:
//
//	ClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeArgs{...}
type ClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeInput interface {
	pulumi.Input

	ToClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput() ClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput
	ToClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutputWithContext(context.Context) ClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput
}

type ClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeArgs struct {
	// Hours of day in 24 hour format. Should be from 0 to 23.
	// An API may choose to allow the value "24:00:00" for scenarios like business closing time.
	Hours pulumi.IntPtrInput `pulumi:"hours"`
	// Minutes of hour of day. Must be from 0 to 59.
	Minutes pulumi.IntPtrInput `pulumi:"minutes"`
	// Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
	Nanos pulumi.IntPtrInput `pulumi:"nanos"`
	// Seconds of minutes of the time. Must normally be from 0 to 59.
	// An API may allow the value 60 if it allows leap-seconds.
	Seconds pulumi.IntPtrInput `pulumi:"seconds"`
}

func (ClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMaintenancePolicyWeeklyMaintenanceWindowStartTime)(nil)).Elem()
}

func (i ClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeArgs) ToClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput() ClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput {
	return i.ToClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutputWithContext(context.Background())
}

func (i ClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeArgs) ToClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutputWithContext(ctx context.Context) ClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput)
}

type ClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput struct{ *pulumi.OutputState }

func (ClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMaintenancePolicyWeeklyMaintenanceWindowStartTime)(nil)).Elem()
}

func (o ClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput) ToClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput() ClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput {
	return o
}

func (o ClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput) ToClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutputWithContext(ctx context.Context) ClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput {
	return o
}

// Hours of day in 24 hour format. Should be from 0 to 23.
// An API may choose to allow the value "24:00:00" for scenarios like business closing time.
func (o ClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput) Hours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicyWeeklyMaintenanceWindowStartTime) *int { return v.Hours }).(pulumi.IntPtrOutput)
}

// Minutes of hour of day. Must be from 0 to 59.
func (o ClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput) Minutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicyWeeklyMaintenanceWindowStartTime) *int { return v.Minutes }).(pulumi.IntPtrOutput)
}

// Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
func (o ClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput) Nanos() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicyWeeklyMaintenanceWindowStartTime) *int { return v.Nanos }).(pulumi.IntPtrOutput)
}

// Seconds of minutes of the time. Must normally be from 0 to 59.
// An API may allow the value 60 if it allows leap-seconds.
func (o ClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput) Seconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicyWeeklyMaintenanceWindowStartTime) *int { return v.Seconds }).(pulumi.IntPtrOutput)
}

type ClusterMaintenanceSchedule struct {
	// (Output)
	// Output only. The end time of any upcoming scheduled maintenance for this cluster.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits.
	EndTime *string `pulumi:"endTime"`
	// (Output)
	// Output only. The deadline that the maintenance schedule start time
	// can not go beyond, including reschedule.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits.
	ScheduleDeadlineTime *string `pulumi:"scheduleDeadlineTime"`
	// (Output)
	// Output only. The start time of any upcoming scheduled maintenance for this cluster.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits.
	StartTime *string `pulumi:"startTime"`
}

// ClusterMaintenanceScheduleInput is an input type that accepts ClusterMaintenanceScheduleArgs and ClusterMaintenanceScheduleOutput values.
// You can construct a concrete instance of `ClusterMaintenanceScheduleInput` via:
//
//	ClusterMaintenanceScheduleArgs{...}
type ClusterMaintenanceScheduleInput interface {
	pulumi.Input

	ToClusterMaintenanceScheduleOutput() ClusterMaintenanceScheduleOutput
	ToClusterMaintenanceScheduleOutputWithContext(context.Context) ClusterMaintenanceScheduleOutput
}

type ClusterMaintenanceScheduleArgs struct {
	// (Output)
	// Output only. The end time of any upcoming scheduled maintenance for this cluster.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits.
	EndTime pulumi.StringPtrInput `pulumi:"endTime"`
	// (Output)
	// Output only. The deadline that the maintenance schedule start time
	// can not go beyond, including reschedule.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits.
	ScheduleDeadlineTime pulumi.StringPtrInput `pulumi:"scheduleDeadlineTime"`
	// (Output)
	// Output only. The start time of any upcoming scheduled maintenance for this cluster.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits.
	StartTime pulumi.StringPtrInput `pulumi:"startTime"`
}

func (ClusterMaintenanceScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMaintenanceSchedule)(nil)).Elem()
}

func (i ClusterMaintenanceScheduleArgs) ToClusterMaintenanceScheduleOutput() ClusterMaintenanceScheduleOutput {
	return i.ToClusterMaintenanceScheduleOutputWithContext(context.Background())
}

func (i ClusterMaintenanceScheduleArgs) ToClusterMaintenanceScheduleOutputWithContext(ctx context.Context) ClusterMaintenanceScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenanceScheduleOutput)
}

// ClusterMaintenanceScheduleArrayInput is an input type that accepts ClusterMaintenanceScheduleArray and ClusterMaintenanceScheduleArrayOutput values.
// You can construct a concrete instance of `ClusterMaintenanceScheduleArrayInput` via:
//
//	ClusterMaintenanceScheduleArray{ ClusterMaintenanceScheduleArgs{...} }
type ClusterMaintenanceScheduleArrayInput interface {
	pulumi.Input

	ToClusterMaintenanceScheduleArrayOutput() ClusterMaintenanceScheduleArrayOutput
	ToClusterMaintenanceScheduleArrayOutputWithContext(context.Context) ClusterMaintenanceScheduleArrayOutput
}

type ClusterMaintenanceScheduleArray []ClusterMaintenanceScheduleInput

func (ClusterMaintenanceScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterMaintenanceSchedule)(nil)).Elem()
}

func (i ClusterMaintenanceScheduleArray) ToClusterMaintenanceScheduleArrayOutput() ClusterMaintenanceScheduleArrayOutput {
	return i.ToClusterMaintenanceScheduleArrayOutputWithContext(context.Background())
}

func (i ClusterMaintenanceScheduleArray) ToClusterMaintenanceScheduleArrayOutputWithContext(ctx context.Context) ClusterMaintenanceScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenanceScheduleArrayOutput)
}

type ClusterMaintenanceScheduleOutput struct{ *pulumi.OutputState }

func (ClusterMaintenanceScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMaintenanceSchedule)(nil)).Elem()
}

func (o ClusterMaintenanceScheduleOutput) ToClusterMaintenanceScheduleOutput() ClusterMaintenanceScheduleOutput {
	return o
}

func (o ClusterMaintenanceScheduleOutput) ToClusterMaintenanceScheduleOutputWithContext(ctx context.Context) ClusterMaintenanceScheduleOutput {
	return o
}

// (Output)
// Output only. The end time of any upcoming scheduled maintenance for this cluster.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
// resolution and up to nine fractional digits.
func (o ClusterMaintenanceScheduleOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMaintenanceSchedule) *string { return v.EndTime }).(pulumi.StringPtrOutput)
}

// (Output)
// Output only. The deadline that the maintenance schedule start time
// can not go beyond, including reschedule.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
// resolution and up to nine fractional digits.
func (o ClusterMaintenanceScheduleOutput) ScheduleDeadlineTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMaintenanceSchedule) *string { return v.ScheduleDeadlineTime }).(pulumi.StringPtrOutput)
}

// (Output)
// Output only. The start time of any upcoming scheduled maintenance for this cluster.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
// resolution and up to nine fractional digits.
func (o ClusterMaintenanceScheduleOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMaintenanceSchedule) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

type ClusterMaintenanceScheduleArrayOutput struct{ *pulumi.OutputState }

func (ClusterMaintenanceScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterMaintenanceSchedule)(nil)).Elem()
}

func (o ClusterMaintenanceScheduleArrayOutput) ToClusterMaintenanceScheduleArrayOutput() ClusterMaintenanceScheduleArrayOutput {
	return o
}

func (o ClusterMaintenanceScheduleArrayOutput) ToClusterMaintenanceScheduleArrayOutputWithContext(ctx context.Context) ClusterMaintenanceScheduleArrayOutput {
	return o
}

func (o ClusterMaintenanceScheduleArrayOutput) Index(i pulumi.IntInput) ClusterMaintenanceScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterMaintenanceSchedule {
		return vs[0].([]ClusterMaintenanceSchedule)[vs[1].(int)]
	}).(ClusterMaintenanceScheduleOutput)
}

type ClusterPersistenceConfig struct {
	// AOF configuration. This field will be ignored if mode is not AOF.
	// Structure is documented below.
	AofConfig *ClusterPersistenceConfigAofConfig `pulumi:"aofConfig"`
	// Optional. Controls whether Persistence features are enabled. If not provided, the existing value will be used.
	// - DISABLED: 	Persistence (both backup and restore) is disabled for the cluster.
	// - RDB: RDB based Persistence is enabled.
	// - AOF: AOF based Persistence is enabled.
	//   Possible values are: `PERSISTENCE_MODE_UNSPECIFIED`, `DISABLED`, `RDB`, `AOF`.
	Mode *string `pulumi:"mode"`
	// RDB configuration. This field will be ignored if mode is not RDB.
	// Structure is documented below.
	RdbConfig *ClusterPersistenceConfigRdbConfig `pulumi:"rdbConfig"`
}

// ClusterPersistenceConfigInput is an input type that accepts ClusterPersistenceConfigArgs and ClusterPersistenceConfigOutput values.
// You can construct a concrete instance of `ClusterPersistenceConfigInput` via:
//
//	ClusterPersistenceConfigArgs{...}
type ClusterPersistenceConfigInput interface {
	pulumi.Input

	ToClusterPersistenceConfigOutput() ClusterPersistenceConfigOutput
	ToClusterPersistenceConfigOutputWithContext(context.Context) ClusterPersistenceConfigOutput
}

type ClusterPersistenceConfigArgs struct {
	// AOF configuration. This field will be ignored if mode is not AOF.
	// Structure is documented below.
	AofConfig ClusterPersistenceConfigAofConfigPtrInput `pulumi:"aofConfig"`
	// Optional. Controls whether Persistence features are enabled. If not provided, the existing value will be used.
	// - DISABLED: 	Persistence (both backup and restore) is disabled for the cluster.
	// - RDB: RDB based Persistence is enabled.
	// - AOF: AOF based Persistence is enabled.
	//   Possible values are: `PERSISTENCE_MODE_UNSPECIFIED`, `DISABLED`, `RDB`, `AOF`.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// RDB configuration. This field will be ignored if mode is not RDB.
	// Structure is documented below.
	RdbConfig ClusterPersistenceConfigRdbConfigPtrInput `pulumi:"rdbConfig"`
}

func (ClusterPersistenceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPersistenceConfig)(nil)).Elem()
}

func (i ClusterPersistenceConfigArgs) ToClusterPersistenceConfigOutput() ClusterPersistenceConfigOutput {
	return i.ToClusterPersistenceConfigOutputWithContext(context.Background())
}

func (i ClusterPersistenceConfigArgs) ToClusterPersistenceConfigOutputWithContext(ctx context.Context) ClusterPersistenceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPersistenceConfigOutput)
}

func (i ClusterPersistenceConfigArgs) ToClusterPersistenceConfigPtrOutput() ClusterPersistenceConfigPtrOutput {
	return i.ToClusterPersistenceConfigPtrOutputWithContext(context.Background())
}

func (i ClusterPersistenceConfigArgs) ToClusterPersistenceConfigPtrOutputWithContext(ctx context.Context) ClusterPersistenceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPersistenceConfigOutput).ToClusterPersistenceConfigPtrOutputWithContext(ctx)
}

// ClusterPersistenceConfigPtrInput is an input type that accepts ClusterPersistenceConfigArgs, ClusterPersistenceConfigPtr and ClusterPersistenceConfigPtrOutput values.
// You can construct a concrete instance of `ClusterPersistenceConfigPtrInput` via:
//
//	        ClusterPersistenceConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterPersistenceConfigPtrInput interface {
	pulumi.Input

	ToClusterPersistenceConfigPtrOutput() ClusterPersistenceConfigPtrOutput
	ToClusterPersistenceConfigPtrOutputWithContext(context.Context) ClusterPersistenceConfigPtrOutput
}

type clusterPersistenceConfigPtrType ClusterPersistenceConfigArgs

func ClusterPersistenceConfigPtr(v *ClusterPersistenceConfigArgs) ClusterPersistenceConfigPtrInput {
	return (*clusterPersistenceConfigPtrType)(v)
}

func (*clusterPersistenceConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterPersistenceConfig)(nil)).Elem()
}

func (i *clusterPersistenceConfigPtrType) ToClusterPersistenceConfigPtrOutput() ClusterPersistenceConfigPtrOutput {
	return i.ToClusterPersistenceConfigPtrOutputWithContext(context.Background())
}

func (i *clusterPersistenceConfigPtrType) ToClusterPersistenceConfigPtrOutputWithContext(ctx context.Context) ClusterPersistenceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPersistenceConfigPtrOutput)
}

type ClusterPersistenceConfigOutput struct{ *pulumi.OutputState }

func (ClusterPersistenceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPersistenceConfig)(nil)).Elem()
}

func (o ClusterPersistenceConfigOutput) ToClusterPersistenceConfigOutput() ClusterPersistenceConfigOutput {
	return o
}

func (o ClusterPersistenceConfigOutput) ToClusterPersistenceConfigOutputWithContext(ctx context.Context) ClusterPersistenceConfigOutput {
	return o
}

func (o ClusterPersistenceConfigOutput) ToClusterPersistenceConfigPtrOutput() ClusterPersistenceConfigPtrOutput {
	return o.ToClusterPersistenceConfigPtrOutputWithContext(context.Background())
}

func (o ClusterPersistenceConfigOutput) ToClusterPersistenceConfigPtrOutputWithContext(ctx context.Context) ClusterPersistenceConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterPersistenceConfig) *ClusterPersistenceConfig {
		return &v
	}).(ClusterPersistenceConfigPtrOutput)
}

// AOF configuration. This field will be ignored if mode is not AOF.
// Structure is documented below.
func (o ClusterPersistenceConfigOutput) AofConfig() ClusterPersistenceConfigAofConfigPtrOutput {
	return o.ApplyT(func(v ClusterPersistenceConfig) *ClusterPersistenceConfigAofConfig { return v.AofConfig }).(ClusterPersistenceConfigAofConfigPtrOutput)
}

// Optional. Controls whether Persistence features are enabled. If not provided, the existing value will be used.
//   - DISABLED: 	Persistence (both backup and restore) is disabled for the cluster.
//   - RDB: RDB based Persistence is enabled.
//   - AOF: AOF based Persistence is enabled.
//     Possible values are: `PERSISTENCE_MODE_UNSPECIFIED`, `DISABLED`, `RDB`, `AOF`.
func (o ClusterPersistenceConfigOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPersistenceConfig) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// RDB configuration. This field will be ignored if mode is not RDB.
// Structure is documented below.
func (o ClusterPersistenceConfigOutput) RdbConfig() ClusterPersistenceConfigRdbConfigPtrOutput {
	return o.ApplyT(func(v ClusterPersistenceConfig) *ClusterPersistenceConfigRdbConfig { return v.RdbConfig }).(ClusterPersistenceConfigRdbConfigPtrOutput)
}

type ClusterPersistenceConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterPersistenceConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterPersistenceConfig)(nil)).Elem()
}

func (o ClusterPersistenceConfigPtrOutput) ToClusterPersistenceConfigPtrOutput() ClusterPersistenceConfigPtrOutput {
	return o
}

func (o ClusterPersistenceConfigPtrOutput) ToClusterPersistenceConfigPtrOutputWithContext(ctx context.Context) ClusterPersistenceConfigPtrOutput {
	return o
}

func (o ClusterPersistenceConfigPtrOutput) Elem() ClusterPersistenceConfigOutput {
	return o.ApplyT(func(v *ClusterPersistenceConfig) ClusterPersistenceConfig {
		if v != nil {
			return *v
		}
		var ret ClusterPersistenceConfig
		return ret
	}).(ClusterPersistenceConfigOutput)
}

// AOF configuration. This field will be ignored if mode is not AOF.
// Structure is documented below.
func (o ClusterPersistenceConfigPtrOutput) AofConfig() ClusterPersistenceConfigAofConfigPtrOutput {
	return o.ApplyT(func(v *ClusterPersistenceConfig) *ClusterPersistenceConfigAofConfig {
		if v == nil {
			return nil
		}
		return v.AofConfig
	}).(ClusterPersistenceConfigAofConfigPtrOutput)
}

// Optional. Controls whether Persistence features are enabled. If not provided, the existing value will be used.
//   - DISABLED: 	Persistence (both backup and restore) is disabled for the cluster.
//   - RDB: RDB based Persistence is enabled.
//   - AOF: AOF based Persistence is enabled.
//     Possible values are: `PERSISTENCE_MODE_UNSPECIFIED`, `DISABLED`, `RDB`, `AOF`.
func (o ClusterPersistenceConfigPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterPersistenceConfig) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// RDB configuration. This field will be ignored if mode is not RDB.
// Structure is documented below.
func (o ClusterPersistenceConfigPtrOutput) RdbConfig() ClusterPersistenceConfigRdbConfigPtrOutput {
	return o.ApplyT(func(v *ClusterPersistenceConfig) *ClusterPersistenceConfigRdbConfig {
		if v == nil {
			return nil
		}
		return v.RdbConfig
	}).(ClusterPersistenceConfigRdbConfigPtrOutput)
}

type ClusterPersistenceConfigAofConfig struct {
	// Optional. Available fsync modes.
	// - NO - Do not explicitly call fsync(). Rely on OS defaults.
	// - EVERYSEC - Call fsync() once per second in a background thread. A balance between performance and durability.
	// - ALWAYS - Call fsync() for earch write command.
	//   Possible values are: `APPEND_FSYNC_UNSPECIFIED`, `NO`, `EVERYSEC`, `ALWAYS`.
	AppendFsync *string `pulumi:"appendFsync"`
}

// ClusterPersistenceConfigAofConfigInput is an input type that accepts ClusterPersistenceConfigAofConfigArgs and ClusterPersistenceConfigAofConfigOutput values.
// You can construct a concrete instance of `ClusterPersistenceConfigAofConfigInput` via:
//
//	ClusterPersistenceConfigAofConfigArgs{...}
type ClusterPersistenceConfigAofConfigInput interface {
	pulumi.Input

	ToClusterPersistenceConfigAofConfigOutput() ClusterPersistenceConfigAofConfigOutput
	ToClusterPersistenceConfigAofConfigOutputWithContext(context.Context) ClusterPersistenceConfigAofConfigOutput
}

type ClusterPersistenceConfigAofConfigArgs struct {
	// Optional. Available fsync modes.
	// - NO - Do not explicitly call fsync(). Rely on OS defaults.
	// - EVERYSEC - Call fsync() once per second in a background thread. A balance between performance and durability.
	// - ALWAYS - Call fsync() for earch write command.
	//   Possible values are: `APPEND_FSYNC_UNSPECIFIED`, `NO`, `EVERYSEC`, `ALWAYS`.
	AppendFsync pulumi.StringPtrInput `pulumi:"appendFsync"`
}

func (ClusterPersistenceConfigAofConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPersistenceConfigAofConfig)(nil)).Elem()
}

func (i ClusterPersistenceConfigAofConfigArgs) ToClusterPersistenceConfigAofConfigOutput() ClusterPersistenceConfigAofConfigOutput {
	return i.ToClusterPersistenceConfigAofConfigOutputWithContext(context.Background())
}

func (i ClusterPersistenceConfigAofConfigArgs) ToClusterPersistenceConfigAofConfigOutputWithContext(ctx context.Context) ClusterPersistenceConfigAofConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPersistenceConfigAofConfigOutput)
}

func (i ClusterPersistenceConfigAofConfigArgs) ToClusterPersistenceConfigAofConfigPtrOutput() ClusterPersistenceConfigAofConfigPtrOutput {
	return i.ToClusterPersistenceConfigAofConfigPtrOutputWithContext(context.Background())
}

func (i ClusterPersistenceConfigAofConfigArgs) ToClusterPersistenceConfigAofConfigPtrOutputWithContext(ctx context.Context) ClusterPersistenceConfigAofConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPersistenceConfigAofConfigOutput).ToClusterPersistenceConfigAofConfigPtrOutputWithContext(ctx)
}

// ClusterPersistenceConfigAofConfigPtrInput is an input type that accepts ClusterPersistenceConfigAofConfigArgs, ClusterPersistenceConfigAofConfigPtr and ClusterPersistenceConfigAofConfigPtrOutput values.
// You can construct a concrete instance of `ClusterPersistenceConfigAofConfigPtrInput` via:
//
//	        ClusterPersistenceConfigAofConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterPersistenceConfigAofConfigPtrInput interface {
	pulumi.Input

	ToClusterPersistenceConfigAofConfigPtrOutput() ClusterPersistenceConfigAofConfigPtrOutput
	ToClusterPersistenceConfigAofConfigPtrOutputWithContext(context.Context) ClusterPersistenceConfigAofConfigPtrOutput
}

type clusterPersistenceConfigAofConfigPtrType ClusterPersistenceConfigAofConfigArgs

func ClusterPersistenceConfigAofConfigPtr(v *ClusterPersistenceConfigAofConfigArgs) ClusterPersistenceConfigAofConfigPtrInput {
	return (*clusterPersistenceConfigAofConfigPtrType)(v)
}

func (*clusterPersistenceConfigAofConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterPersistenceConfigAofConfig)(nil)).Elem()
}

func (i *clusterPersistenceConfigAofConfigPtrType) ToClusterPersistenceConfigAofConfigPtrOutput() ClusterPersistenceConfigAofConfigPtrOutput {
	return i.ToClusterPersistenceConfigAofConfigPtrOutputWithContext(context.Background())
}

func (i *clusterPersistenceConfigAofConfigPtrType) ToClusterPersistenceConfigAofConfigPtrOutputWithContext(ctx context.Context) ClusterPersistenceConfigAofConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPersistenceConfigAofConfigPtrOutput)
}

type ClusterPersistenceConfigAofConfigOutput struct{ *pulumi.OutputState }

func (ClusterPersistenceConfigAofConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPersistenceConfigAofConfig)(nil)).Elem()
}

func (o ClusterPersistenceConfigAofConfigOutput) ToClusterPersistenceConfigAofConfigOutput() ClusterPersistenceConfigAofConfigOutput {
	return o
}

func (o ClusterPersistenceConfigAofConfigOutput) ToClusterPersistenceConfigAofConfigOutputWithContext(ctx context.Context) ClusterPersistenceConfigAofConfigOutput {
	return o
}

func (o ClusterPersistenceConfigAofConfigOutput) ToClusterPersistenceConfigAofConfigPtrOutput() ClusterPersistenceConfigAofConfigPtrOutput {
	return o.ToClusterPersistenceConfigAofConfigPtrOutputWithContext(context.Background())
}

func (o ClusterPersistenceConfigAofConfigOutput) ToClusterPersistenceConfigAofConfigPtrOutputWithContext(ctx context.Context) ClusterPersistenceConfigAofConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterPersistenceConfigAofConfig) *ClusterPersistenceConfigAofConfig {
		return &v
	}).(ClusterPersistenceConfigAofConfigPtrOutput)
}

// Optional. Available fsync modes.
//   - NO - Do not explicitly call fsync(). Rely on OS defaults.
//   - EVERYSEC - Call fsync() once per second in a background thread. A balance between performance and durability.
//   - ALWAYS - Call fsync() for earch write command.
//     Possible values are: `APPEND_FSYNC_UNSPECIFIED`, `NO`, `EVERYSEC`, `ALWAYS`.
func (o ClusterPersistenceConfigAofConfigOutput) AppendFsync() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPersistenceConfigAofConfig) *string { return v.AppendFsync }).(pulumi.StringPtrOutput)
}

type ClusterPersistenceConfigAofConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterPersistenceConfigAofConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterPersistenceConfigAofConfig)(nil)).Elem()
}

func (o ClusterPersistenceConfigAofConfigPtrOutput) ToClusterPersistenceConfigAofConfigPtrOutput() ClusterPersistenceConfigAofConfigPtrOutput {
	return o
}

func (o ClusterPersistenceConfigAofConfigPtrOutput) ToClusterPersistenceConfigAofConfigPtrOutputWithContext(ctx context.Context) ClusterPersistenceConfigAofConfigPtrOutput {
	return o
}

func (o ClusterPersistenceConfigAofConfigPtrOutput) Elem() ClusterPersistenceConfigAofConfigOutput {
	return o.ApplyT(func(v *ClusterPersistenceConfigAofConfig) ClusterPersistenceConfigAofConfig {
		if v != nil {
			return *v
		}
		var ret ClusterPersistenceConfigAofConfig
		return ret
	}).(ClusterPersistenceConfigAofConfigOutput)
}

// Optional. Available fsync modes.
//   - NO - Do not explicitly call fsync(). Rely on OS defaults.
//   - EVERYSEC - Call fsync() once per second in a background thread. A balance between performance and durability.
//   - ALWAYS - Call fsync() for earch write command.
//     Possible values are: `APPEND_FSYNC_UNSPECIFIED`, `NO`, `EVERYSEC`, `ALWAYS`.
func (o ClusterPersistenceConfigAofConfigPtrOutput) AppendFsync() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterPersistenceConfigAofConfig) *string {
		if v == nil {
			return nil
		}
		return v.AppendFsync
	}).(pulumi.StringPtrOutput)
}

type ClusterPersistenceConfigRdbConfig struct {
	// Optional. Available snapshot periods for scheduling.
	// - ONE_HOUR:	Snapshot every 1 hour.
	// - SIX_HOURS:	Snapshot every 6 hours.
	// - TWELVE_HOURS:	Snapshot every 12 hours.
	// - TWENTY_FOUR_HOURS:	Snapshot every 24 hours.
	//   Possible values are: `SNAPSHOT_PERIOD_UNSPECIFIED`, `ONE_HOUR`, `SIX_HOURS`, `TWELVE_HOURS`, `TWENTY_FOUR_HOURS`.
	RdbSnapshotPeriod *string `pulumi:"rdbSnapshotPeriod"`
	// The time that the first snapshot was/will be attempted, and to which
	// future snapshots will be aligned.
	// If not provided, the current time will be used.
	RdbSnapshotStartTime *string `pulumi:"rdbSnapshotStartTime"`
}

// ClusterPersistenceConfigRdbConfigInput is an input type that accepts ClusterPersistenceConfigRdbConfigArgs and ClusterPersistenceConfigRdbConfigOutput values.
// You can construct a concrete instance of `ClusterPersistenceConfigRdbConfigInput` via:
//
//	ClusterPersistenceConfigRdbConfigArgs{...}
type ClusterPersistenceConfigRdbConfigInput interface {
	pulumi.Input

	ToClusterPersistenceConfigRdbConfigOutput() ClusterPersistenceConfigRdbConfigOutput
	ToClusterPersistenceConfigRdbConfigOutputWithContext(context.Context) ClusterPersistenceConfigRdbConfigOutput
}

type ClusterPersistenceConfigRdbConfigArgs struct {
	// Optional. Available snapshot periods for scheduling.
	// - ONE_HOUR:	Snapshot every 1 hour.
	// - SIX_HOURS:	Snapshot every 6 hours.
	// - TWELVE_HOURS:	Snapshot every 12 hours.
	// - TWENTY_FOUR_HOURS:	Snapshot every 24 hours.
	//   Possible values are: `SNAPSHOT_PERIOD_UNSPECIFIED`, `ONE_HOUR`, `SIX_HOURS`, `TWELVE_HOURS`, `TWENTY_FOUR_HOURS`.
	RdbSnapshotPeriod pulumi.StringPtrInput `pulumi:"rdbSnapshotPeriod"`
	// The time that the first snapshot was/will be attempted, and to which
	// future snapshots will be aligned.
	// If not provided, the current time will be used.
	RdbSnapshotStartTime pulumi.StringPtrInput `pulumi:"rdbSnapshotStartTime"`
}

func (ClusterPersistenceConfigRdbConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPersistenceConfigRdbConfig)(nil)).Elem()
}

func (i ClusterPersistenceConfigRdbConfigArgs) ToClusterPersistenceConfigRdbConfigOutput() ClusterPersistenceConfigRdbConfigOutput {
	return i.ToClusterPersistenceConfigRdbConfigOutputWithContext(context.Background())
}

func (i ClusterPersistenceConfigRdbConfigArgs) ToClusterPersistenceConfigRdbConfigOutputWithContext(ctx context.Context) ClusterPersistenceConfigRdbConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPersistenceConfigRdbConfigOutput)
}

func (i ClusterPersistenceConfigRdbConfigArgs) ToClusterPersistenceConfigRdbConfigPtrOutput() ClusterPersistenceConfigRdbConfigPtrOutput {
	return i.ToClusterPersistenceConfigRdbConfigPtrOutputWithContext(context.Background())
}

func (i ClusterPersistenceConfigRdbConfigArgs) ToClusterPersistenceConfigRdbConfigPtrOutputWithContext(ctx context.Context) ClusterPersistenceConfigRdbConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPersistenceConfigRdbConfigOutput).ToClusterPersistenceConfigRdbConfigPtrOutputWithContext(ctx)
}

// ClusterPersistenceConfigRdbConfigPtrInput is an input type that accepts ClusterPersistenceConfigRdbConfigArgs, ClusterPersistenceConfigRdbConfigPtr and ClusterPersistenceConfigRdbConfigPtrOutput values.
// You can construct a concrete instance of `ClusterPersistenceConfigRdbConfigPtrInput` via:
//
//	        ClusterPersistenceConfigRdbConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterPersistenceConfigRdbConfigPtrInput interface {
	pulumi.Input

	ToClusterPersistenceConfigRdbConfigPtrOutput() ClusterPersistenceConfigRdbConfigPtrOutput
	ToClusterPersistenceConfigRdbConfigPtrOutputWithContext(context.Context) ClusterPersistenceConfigRdbConfigPtrOutput
}

type clusterPersistenceConfigRdbConfigPtrType ClusterPersistenceConfigRdbConfigArgs

func ClusterPersistenceConfigRdbConfigPtr(v *ClusterPersistenceConfigRdbConfigArgs) ClusterPersistenceConfigRdbConfigPtrInput {
	return (*clusterPersistenceConfigRdbConfigPtrType)(v)
}

func (*clusterPersistenceConfigRdbConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterPersistenceConfigRdbConfig)(nil)).Elem()
}

func (i *clusterPersistenceConfigRdbConfigPtrType) ToClusterPersistenceConfigRdbConfigPtrOutput() ClusterPersistenceConfigRdbConfigPtrOutput {
	return i.ToClusterPersistenceConfigRdbConfigPtrOutputWithContext(context.Background())
}

func (i *clusterPersistenceConfigRdbConfigPtrType) ToClusterPersistenceConfigRdbConfigPtrOutputWithContext(ctx context.Context) ClusterPersistenceConfigRdbConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPersistenceConfigRdbConfigPtrOutput)
}

type ClusterPersistenceConfigRdbConfigOutput struct{ *pulumi.OutputState }

func (ClusterPersistenceConfigRdbConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPersistenceConfigRdbConfig)(nil)).Elem()
}

func (o ClusterPersistenceConfigRdbConfigOutput) ToClusterPersistenceConfigRdbConfigOutput() ClusterPersistenceConfigRdbConfigOutput {
	return o
}

func (o ClusterPersistenceConfigRdbConfigOutput) ToClusterPersistenceConfigRdbConfigOutputWithContext(ctx context.Context) ClusterPersistenceConfigRdbConfigOutput {
	return o
}

func (o ClusterPersistenceConfigRdbConfigOutput) ToClusterPersistenceConfigRdbConfigPtrOutput() ClusterPersistenceConfigRdbConfigPtrOutput {
	return o.ToClusterPersistenceConfigRdbConfigPtrOutputWithContext(context.Background())
}

func (o ClusterPersistenceConfigRdbConfigOutput) ToClusterPersistenceConfigRdbConfigPtrOutputWithContext(ctx context.Context) ClusterPersistenceConfigRdbConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterPersistenceConfigRdbConfig) *ClusterPersistenceConfigRdbConfig {
		return &v
	}).(ClusterPersistenceConfigRdbConfigPtrOutput)
}

// Optional. Available snapshot periods for scheduling.
//   - ONE_HOUR:	Snapshot every 1 hour.
//   - SIX_HOURS:	Snapshot every 6 hours.
//   - TWELVE_HOURS:	Snapshot every 12 hours.
//   - TWENTY_FOUR_HOURS:	Snapshot every 24 hours.
//     Possible values are: `SNAPSHOT_PERIOD_UNSPECIFIED`, `ONE_HOUR`, `SIX_HOURS`, `TWELVE_HOURS`, `TWENTY_FOUR_HOURS`.
func (o ClusterPersistenceConfigRdbConfigOutput) RdbSnapshotPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPersistenceConfigRdbConfig) *string { return v.RdbSnapshotPeriod }).(pulumi.StringPtrOutput)
}

// The time that the first snapshot was/will be attempted, and to which
// future snapshots will be aligned.
// If not provided, the current time will be used.
func (o ClusterPersistenceConfigRdbConfigOutput) RdbSnapshotStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPersistenceConfigRdbConfig) *string { return v.RdbSnapshotStartTime }).(pulumi.StringPtrOutput)
}

type ClusterPersistenceConfigRdbConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterPersistenceConfigRdbConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterPersistenceConfigRdbConfig)(nil)).Elem()
}

func (o ClusterPersistenceConfigRdbConfigPtrOutput) ToClusterPersistenceConfigRdbConfigPtrOutput() ClusterPersistenceConfigRdbConfigPtrOutput {
	return o
}

func (o ClusterPersistenceConfigRdbConfigPtrOutput) ToClusterPersistenceConfigRdbConfigPtrOutputWithContext(ctx context.Context) ClusterPersistenceConfigRdbConfigPtrOutput {
	return o
}

func (o ClusterPersistenceConfigRdbConfigPtrOutput) Elem() ClusterPersistenceConfigRdbConfigOutput {
	return o.ApplyT(func(v *ClusterPersistenceConfigRdbConfig) ClusterPersistenceConfigRdbConfig {
		if v != nil {
			return *v
		}
		var ret ClusterPersistenceConfigRdbConfig
		return ret
	}).(ClusterPersistenceConfigRdbConfigOutput)
}

// Optional. Available snapshot periods for scheduling.
//   - ONE_HOUR:	Snapshot every 1 hour.
//   - SIX_HOURS:	Snapshot every 6 hours.
//   - TWELVE_HOURS:	Snapshot every 12 hours.
//   - TWENTY_FOUR_HOURS:	Snapshot every 24 hours.
//     Possible values are: `SNAPSHOT_PERIOD_UNSPECIFIED`, `ONE_HOUR`, `SIX_HOURS`, `TWELVE_HOURS`, `TWENTY_FOUR_HOURS`.
func (o ClusterPersistenceConfigRdbConfigPtrOutput) RdbSnapshotPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterPersistenceConfigRdbConfig) *string {
		if v == nil {
			return nil
		}
		return v.RdbSnapshotPeriod
	}).(pulumi.StringPtrOutput)
}

// The time that the first snapshot was/will be attempted, and to which
// future snapshots will be aligned.
// If not provided, the current time will be used.
func (o ClusterPersistenceConfigRdbConfigPtrOutput) RdbSnapshotStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterPersistenceConfigRdbConfig) *string {
		if v == nil {
			return nil
		}
		return v.RdbSnapshotStartTime
	}).(pulumi.StringPtrOutput)
}

type ClusterPscConfig struct {
	// Required. The consumer network where the network address of
	// the discovery endpoint will be reserved, in the form of
	// projects/{network_project_id_or_number}/global/networks/{network_id}.
	Network string `pulumi:"network"`
}

// ClusterPscConfigInput is an input type that accepts ClusterPscConfigArgs and ClusterPscConfigOutput values.
// You can construct a concrete instance of `ClusterPscConfigInput` via:
//
//	ClusterPscConfigArgs{...}
type ClusterPscConfigInput interface {
	pulumi.Input

	ToClusterPscConfigOutput() ClusterPscConfigOutput
	ToClusterPscConfigOutputWithContext(context.Context) ClusterPscConfigOutput
}

type ClusterPscConfigArgs struct {
	// Required. The consumer network where the network address of
	// the discovery endpoint will be reserved, in the form of
	// projects/{network_project_id_or_number}/global/networks/{network_id}.
	Network pulumi.StringInput `pulumi:"network"`
}

func (ClusterPscConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPscConfig)(nil)).Elem()
}

func (i ClusterPscConfigArgs) ToClusterPscConfigOutput() ClusterPscConfigOutput {
	return i.ToClusterPscConfigOutputWithContext(context.Background())
}

func (i ClusterPscConfigArgs) ToClusterPscConfigOutputWithContext(ctx context.Context) ClusterPscConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPscConfigOutput)
}

// ClusterPscConfigArrayInput is an input type that accepts ClusterPscConfigArray and ClusterPscConfigArrayOutput values.
// You can construct a concrete instance of `ClusterPscConfigArrayInput` via:
//
//	ClusterPscConfigArray{ ClusterPscConfigArgs{...} }
type ClusterPscConfigArrayInput interface {
	pulumi.Input

	ToClusterPscConfigArrayOutput() ClusterPscConfigArrayOutput
	ToClusterPscConfigArrayOutputWithContext(context.Context) ClusterPscConfigArrayOutput
}

type ClusterPscConfigArray []ClusterPscConfigInput

func (ClusterPscConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterPscConfig)(nil)).Elem()
}

func (i ClusterPscConfigArray) ToClusterPscConfigArrayOutput() ClusterPscConfigArrayOutput {
	return i.ToClusterPscConfigArrayOutputWithContext(context.Background())
}

func (i ClusterPscConfigArray) ToClusterPscConfigArrayOutputWithContext(ctx context.Context) ClusterPscConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPscConfigArrayOutput)
}

type ClusterPscConfigOutput struct{ *pulumi.OutputState }

func (ClusterPscConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPscConfig)(nil)).Elem()
}

func (o ClusterPscConfigOutput) ToClusterPscConfigOutput() ClusterPscConfigOutput {
	return o
}

func (o ClusterPscConfigOutput) ToClusterPscConfigOutputWithContext(ctx context.Context) ClusterPscConfigOutput {
	return o
}

// Required. The consumer network where the network address of
// the discovery endpoint will be reserved, in the form of
// projects/{network_project_id_or_number}/global/networks/{network_id}.
func (o ClusterPscConfigOutput) Network() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterPscConfig) string { return v.Network }).(pulumi.StringOutput)
}

type ClusterPscConfigArrayOutput struct{ *pulumi.OutputState }

func (ClusterPscConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterPscConfig)(nil)).Elem()
}

func (o ClusterPscConfigArrayOutput) ToClusterPscConfigArrayOutput() ClusterPscConfigArrayOutput {
	return o
}

func (o ClusterPscConfigArrayOutput) ToClusterPscConfigArrayOutputWithContext(ctx context.Context) ClusterPscConfigArrayOutput {
	return o
}

func (o ClusterPscConfigArrayOutput) Index(i pulumi.IntInput) ClusterPscConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterPscConfig {
		return vs[0].([]ClusterPscConfig)[vs[1].(int)]
	}).(ClusterPscConfigOutput)
}

type ClusterPscConnection struct {
	// Output only. The IP allocated on the consumer network for the PSC forwarding rule.
	Address *string `pulumi:"address"`
	// Output only. The URI of the consumer side forwarding rule. Example: projects/{projectNumOrId}/regions/us-east1/forwardingRules/{resourceId}.
	ForwardingRule *string `pulumi:"forwardingRule"`
	// The consumer network where the IP address resides, in the form of projects/{projectId}/global/networks/{network_id}.
	Network *string `pulumi:"network"`
	// Output only. The consumer projectId where the forwarding rule is created from.
	ProjectId *string `pulumi:"projectId"`
	// Output only. The PSC connection id of the forwarding rule connected to the service attachment.
	PscConnectionId *string `pulumi:"pscConnectionId"`
}

// ClusterPscConnectionInput is an input type that accepts ClusterPscConnectionArgs and ClusterPscConnectionOutput values.
// You can construct a concrete instance of `ClusterPscConnectionInput` via:
//
//	ClusterPscConnectionArgs{...}
type ClusterPscConnectionInput interface {
	pulumi.Input

	ToClusterPscConnectionOutput() ClusterPscConnectionOutput
	ToClusterPscConnectionOutputWithContext(context.Context) ClusterPscConnectionOutput
}

type ClusterPscConnectionArgs struct {
	// Output only. The IP allocated on the consumer network for the PSC forwarding rule.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// Output only. The URI of the consumer side forwarding rule. Example: projects/{projectNumOrId}/regions/us-east1/forwardingRules/{resourceId}.
	ForwardingRule pulumi.StringPtrInput `pulumi:"forwardingRule"`
	// The consumer network where the IP address resides, in the form of projects/{projectId}/global/networks/{network_id}.
	Network pulumi.StringPtrInput `pulumi:"network"`
	// Output only. The consumer projectId where the forwarding rule is created from.
	ProjectId pulumi.StringPtrInput `pulumi:"projectId"`
	// Output only. The PSC connection id of the forwarding rule connected to the service attachment.
	PscConnectionId pulumi.StringPtrInput `pulumi:"pscConnectionId"`
}

func (ClusterPscConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPscConnection)(nil)).Elem()
}

func (i ClusterPscConnectionArgs) ToClusterPscConnectionOutput() ClusterPscConnectionOutput {
	return i.ToClusterPscConnectionOutputWithContext(context.Background())
}

func (i ClusterPscConnectionArgs) ToClusterPscConnectionOutputWithContext(ctx context.Context) ClusterPscConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPscConnectionOutput)
}

// ClusterPscConnectionArrayInput is an input type that accepts ClusterPscConnectionArray and ClusterPscConnectionArrayOutput values.
// You can construct a concrete instance of `ClusterPscConnectionArrayInput` via:
//
//	ClusterPscConnectionArray{ ClusterPscConnectionArgs{...} }
type ClusterPscConnectionArrayInput interface {
	pulumi.Input

	ToClusterPscConnectionArrayOutput() ClusterPscConnectionArrayOutput
	ToClusterPscConnectionArrayOutputWithContext(context.Context) ClusterPscConnectionArrayOutput
}

type ClusterPscConnectionArray []ClusterPscConnectionInput

func (ClusterPscConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterPscConnection)(nil)).Elem()
}

func (i ClusterPscConnectionArray) ToClusterPscConnectionArrayOutput() ClusterPscConnectionArrayOutput {
	return i.ToClusterPscConnectionArrayOutputWithContext(context.Background())
}

func (i ClusterPscConnectionArray) ToClusterPscConnectionArrayOutputWithContext(ctx context.Context) ClusterPscConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPscConnectionArrayOutput)
}

type ClusterPscConnectionOutput struct{ *pulumi.OutputState }

func (ClusterPscConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPscConnection)(nil)).Elem()
}

func (o ClusterPscConnectionOutput) ToClusterPscConnectionOutput() ClusterPscConnectionOutput {
	return o
}

func (o ClusterPscConnectionOutput) ToClusterPscConnectionOutputWithContext(ctx context.Context) ClusterPscConnectionOutput {
	return o
}

// Output only. The IP allocated on the consumer network for the PSC forwarding rule.
func (o ClusterPscConnectionOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPscConnection) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// Output only. The URI of the consumer side forwarding rule. Example: projects/{projectNumOrId}/regions/us-east1/forwardingRules/{resourceId}.
func (o ClusterPscConnectionOutput) ForwardingRule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPscConnection) *string { return v.ForwardingRule }).(pulumi.StringPtrOutput)
}

// The consumer network where the IP address resides, in the form of projects/{projectId}/global/networks/{network_id}.
func (o ClusterPscConnectionOutput) Network() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPscConnection) *string { return v.Network }).(pulumi.StringPtrOutput)
}

// Output only. The consumer projectId where the forwarding rule is created from.
func (o ClusterPscConnectionOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPscConnection) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

// Output only. The PSC connection id of the forwarding rule connected to the service attachment.
func (o ClusterPscConnectionOutput) PscConnectionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPscConnection) *string { return v.PscConnectionId }).(pulumi.StringPtrOutput)
}

type ClusterPscConnectionArrayOutput struct{ *pulumi.OutputState }

func (ClusterPscConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterPscConnection)(nil)).Elem()
}

func (o ClusterPscConnectionArrayOutput) ToClusterPscConnectionArrayOutput() ClusterPscConnectionArrayOutput {
	return o
}

func (o ClusterPscConnectionArrayOutput) ToClusterPscConnectionArrayOutputWithContext(ctx context.Context) ClusterPscConnectionArrayOutput {
	return o
}

func (o ClusterPscConnectionArrayOutput) Index(i pulumi.IntInput) ClusterPscConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterPscConnection {
		return vs[0].([]ClusterPscConnection)[vs[1].(int)]
	}).(ClusterPscConnectionOutput)
}

type ClusterPscServiceAttachment struct {
	// (Output)
	// Type of a PSC connection targeting this service attachment.
	ConnectionType *string `pulumi:"connectionType"`
	// (Output)
	// Service attachment URI which your self-created PscConnection should use as
	ServiceAttachment *string `pulumi:"serviceAttachment"`
}

// ClusterPscServiceAttachmentInput is an input type that accepts ClusterPscServiceAttachmentArgs and ClusterPscServiceAttachmentOutput values.
// You can construct a concrete instance of `ClusterPscServiceAttachmentInput` via:
//
//	ClusterPscServiceAttachmentArgs{...}
type ClusterPscServiceAttachmentInput interface {
	pulumi.Input

	ToClusterPscServiceAttachmentOutput() ClusterPscServiceAttachmentOutput
	ToClusterPscServiceAttachmentOutputWithContext(context.Context) ClusterPscServiceAttachmentOutput
}

type ClusterPscServiceAttachmentArgs struct {
	// (Output)
	// Type of a PSC connection targeting this service attachment.
	ConnectionType pulumi.StringPtrInput `pulumi:"connectionType"`
	// (Output)
	// Service attachment URI which your self-created PscConnection should use as
	ServiceAttachment pulumi.StringPtrInput `pulumi:"serviceAttachment"`
}

func (ClusterPscServiceAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPscServiceAttachment)(nil)).Elem()
}

func (i ClusterPscServiceAttachmentArgs) ToClusterPscServiceAttachmentOutput() ClusterPscServiceAttachmentOutput {
	return i.ToClusterPscServiceAttachmentOutputWithContext(context.Background())
}

func (i ClusterPscServiceAttachmentArgs) ToClusterPscServiceAttachmentOutputWithContext(ctx context.Context) ClusterPscServiceAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPscServiceAttachmentOutput)
}

// ClusterPscServiceAttachmentArrayInput is an input type that accepts ClusterPscServiceAttachmentArray and ClusterPscServiceAttachmentArrayOutput values.
// You can construct a concrete instance of `ClusterPscServiceAttachmentArrayInput` via:
//
//	ClusterPscServiceAttachmentArray{ ClusterPscServiceAttachmentArgs{...} }
type ClusterPscServiceAttachmentArrayInput interface {
	pulumi.Input

	ToClusterPscServiceAttachmentArrayOutput() ClusterPscServiceAttachmentArrayOutput
	ToClusterPscServiceAttachmentArrayOutputWithContext(context.Context) ClusterPscServiceAttachmentArrayOutput
}

type ClusterPscServiceAttachmentArray []ClusterPscServiceAttachmentInput

func (ClusterPscServiceAttachmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterPscServiceAttachment)(nil)).Elem()
}

func (i ClusterPscServiceAttachmentArray) ToClusterPscServiceAttachmentArrayOutput() ClusterPscServiceAttachmentArrayOutput {
	return i.ToClusterPscServiceAttachmentArrayOutputWithContext(context.Background())
}

func (i ClusterPscServiceAttachmentArray) ToClusterPscServiceAttachmentArrayOutputWithContext(ctx context.Context) ClusterPscServiceAttachmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPscServiceAttachmentArrayOutput)
}

type ClusterPscServiceAttachmentOutput struct{ *pulumi.OutputState }

func (ClusterPscServiceAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPscServiceAttachment)(nil)).Elem()
}

func (o ClusterPscServiceAttachmentOutput) ToClusterPscServiceAttachmentOutput() ClusterPscServiceAttachmentOutput {
	return o
}

func (o ClusterPscServiceAttachmentOutput) ToClusterPscServiceAttachmentOutputWithContext(ctx context.Context) ClusterPscServiceAttachmentOutput {
	return o
}

// (Output)
// Type of a PSC connection targeting this service attachment.
func (o ClusterPscServiceAttachmentOutput) ConnectionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPscServiceAttachment) *string { return v.ConnectionType }).(pulumi.StringPtrOutput)
}

// (Output)
// Service attachment URI which your self-created PscConnection should use as
func (o ClusterPscServiceAttachmentOutput) ServiceAttachment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPscServiceAttachment) *string { return v.ServiceAttachment }).(pulumi.StringPtrOutput)
}

type ClusterPscServiceAttachmentArrayOutput struct{ *pulumi.OutputState }

func (ClusterPscServiceAttachmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterPscServiceAttachment)(nil)).Elem()
}

func (o ClusterPscServiceAttachmentArrayOutput) ToClusterPscServiceAttachmentArrayOutput() ClusterPscServiceAttachmentArrayOutput {
	return o
}

func (o ClusterPscServiceAttachmentArrayOutput) ToClusterPscServiceAttachmentArrayOutputWithContext(ctx context.Context) ClusterPscServiceAttachmentArrayOutput {
	return o
}

func (o ClusterPscServiceAttachmentArrayOutput) Index(i pulumi.IntInput) ClusterPscServiceAttachmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterPscServiceAttachment {
		return vs[0].([]ClusterPscServiceAttachment)[vs[1].(int)]
	}).(ClusterPscServiceAttachmentOutput)
}

type ClusterStateInfo struct {
	// A nested object resource.
	// Structure is documented below.
	UpdateInfo *ClusterStateInfoUpdateInfo `pulumi:"updateInfo"`
}

// ClusterStateInfoInput is an input type that accepts ClusterStateInfoArgs and ClusterStateInfoOutput values.
// You can construct a concrete instance of `ClusterStateInfoInput` via:
//
//	ClusterStateInfoArgs{...}
type ClusterStateInfoInput interface {
	pulumi.Input

	ToClusterStateInfoOutput() ClusterStateInfoOutput
	ToClusterStateInfoOutputWithContext(context.Context) ClusterStateInfoOutput
}

type ClusterStateInfoArgs struct {
	// A nested object resource.
	// Structure is documented below.
	UpdateInfo ClusterStateInfoUpdateInfoPtrInput `pulumi:"updateInfo"`
}

func (ClusterStateInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterStateInfo)(nil)).Elem()
}

func (i ClusterStateInfoArgs) ToClusterStateInfoOutput() ClusterStateInfoOutput {
	return i.ToClusterStateInfoOutputWithContext(context.Background())
}

func (i ClusterStateInfoArgs) ToClusterStateInfoOutputWithContext(ctx context.Context) ClusterStateInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterStateInfoOutput)
}

// ClusterStateInfoArrayInput is an input type that accepts ClusterStateInfoArray and ClusterStateInfoArrayOutput values.
// You can construct a concrete instance of `ClusterStateInfoArrayInput` via:
//
//	ClusterStateInfoArray{ ClusterStateInfoArgs{...} }
type ClusterStateInfoArrayInput interface {
	pulumi.Input

	ToClusterStateInfoArrayOutput() ClusterStateInfoArrayOutput
	ToClusterStateInfoArrayOutputWithContext(context.Context) ClusterStateInfoArrayOutput
}

type ClusterStateInfoArray []ClusterStateInfoInput

func (ClusterStateInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterStateInfo)(nil)).Elem()
}

func (i ClusterStateInfoArray) ToClusterStateInfoArrayOutput() ClusterStateInfoArrayOutput {
	return i.ToClusterStateInfoArrayOutputWithContext(context.Background())
}

func (i ClusterStateInfoArray) ToClusterStateInfoArrayOutputWithContext(ctx context.Context) ClusterStateInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterStateInfoArrayOutput)
}

type ClusterStateInfoOutput struct{ *pulumi.OutputState }

func (ClusterStateInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterStateInfo)(nil)).Elem()
}

func (o ClusterStateInfoOutput) ToClusterStateInfoOutput() ClusterStateInfoOutput {
	return o
}

func (o ClusterStateInfoOutput) ToClusterStateInfoOutputWithContext(ctx context.Context) ClusterStateInfoOutput {
	return o
}

// A nested object resource.
// Structure is documented below.
func (o ClusterStateInfoOutput) UpdateInfo() ClusterStateInfoUpdateInfoPtrOutput {
	return o.ApplyT(func(v ClusterStateInfo) *ClusterStateInfoUpdateInfo { return v.UpdateInfo }).(ClusterStateInfoUpdateInfoPtrOutput)
}

type ClusterStateInfoArrayOutput struct{ *pulumi.OutputState }

func (ClusterStateInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterStateInfo)(nil)).Elem()
}

func (o ClusterStateInfoArrayOutput) ToClusterStateInfoArrayOutput() ClusterStateInfoArrayOutput {
	return o
}

func (o ClusterStateInfoArrayOutput) ToClusterStateInfoArrayOutputWithContext(ctx context.Context) ClusterStateInfoArrayOutput {
	return o
}

func (o ClusterStateInfoArrayOutput) Index(i pulumi.IntInput) ClusterStateInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterStateInfo {
		return vs[0].([]ClusterStateInfo)[vs[1].(int)]
	}).(ClusterStateInfoOutput)
}

type ClusterStateInfoUpdateInfo struct {
	// Target number of replica nodes per shard.
	TargetReplicaCount *int `pulumi:"targetReplicaCount"`
	// Target number of shards for redis cluster.
	TargetShardCount *int `pulumi:"targetShardCount"`
}

// ClusterStateInfoUpdateInfoInput is an input type that accepts ClusterStateInfoUpdateInfoArgs and ClusterStateInfoUpdateInfoOutput values.
// You can construct a concrete instance of `ClusterStateInfoUpdateInfoInput` via:
//
//	ClusterStateInfoUpdateInfoArgs{...}
type ClusterStateInfoUpdateInfoInput interface {
	pulumi.Input

	ToClusterStateInfoUpdateInfoOutput() ClusterStateInfoUpdateInfoOutput
	ToClusterStateInfoUpdateInfoOutputWithContext(context.Context) ClusterStateInfoUpdateInfoOutput
}

type ClusterStateInfoUpdateInfoArgs struct {
	// Target number of replica nodes per shard.
	TargetReplicaCount pulumi.IntPtrInput `pulumi:"targetReplicaCount"`
	// Target number of shards for redis cluster.
	TargetShardCount pulumi.IntPtrInput `pulumi:"targetShardCount"`
}

func (ClusterStateInfoUpdateInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterStateInfoUpdateInfo)(nil)).Elem()
}

func (i ClusterStateInfoUpdateInfoArgs) ToClusterStateInfoUpdateInfoOutput() ClusterStateInfoUpdateInfoOutput {
	return i.ToClusterStateInfoUpdateInfoOutputWithContext(context.Background())
}

func (i ClusterStateInfoUpdateInfoArgs) ToClusterStateInfoUpdateInfoOutputWithContext(ctx context.Context) ClusterStateInfoUpdateInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterStateInfoUpdateInfoOutput)
}

func (i ClusterStateInfoUpdateInfoArgs) ToClusterStateInfoUpdateInfoPtrOutput() ClusterStateInfoUpdateInfoPtrOutput {
	return i.ToClusterStateInfoUpdateInfoPtrOutputWithContext(context.Background())
}

func (i ClusterStateInfoUpdateInfoArgs) ToClusterStateInfoUpdateInfoPtrOutputWithContext(ctx context.Context) ClusterStateInfoUpdateInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterStateInfoUpdateInfoOutput).ToClusterStateInfoUpdateInfoPtrOutputWithContext(ctx)
}

// ClusterStateInfoUpdateInfoPtrInput is an input type that accepts ClusterStateInfoUpdateInfoArgs, ClusterStateInfoUpdateInfoPtr and ClusterStateInfoUpdateInfoPtrOutput values.
// You can construct a concrete instance of `ClusterStateInfoUpdateInfoPtrInput` via:
//
//	        ClusterStateInfoUpdateInfoArgs{...}
//
//	or:
//
//	        nil
type ClusterStateInfoUpdateInfoPtrInput interface {
	pulumi.Input

	ToClusterStateInfoUpdateInfoPtrOutput() ClusterStateInfoUpdateInfoPtrOutput
	ToClusterStateInfoUpdateInfoPtrOutputWithContext(context.Context) ClusterStateInfoUpdateInfoPtrOutput
}

type clusterStateInfoUpdateInfoPtrType ClusterStateInfoUpdateInfoArgs

func ClusterStateInfoUpdateInfoPtr(v *ClusterStateInfoUpdateInfoArgs) ClusterStateInfoUpdateInfoPtrInput {
	return (*clusterStateInfoUpdateInfoPtrType)(v)
}

func (*clusterStateInfoUpdateInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterStateInfoUpdateInfo)(nil)).Elem()
}

func (i *clusterStateInfoUpdateInfoPtrType) ToClusterStateInfoUpdateInfoPtrOutput() ClusterStateInfoUpdateInfoPtrOutput {
	return i.ToClusterStateInfoUpdateInfoPtrOutputWithContext(context.Background())
}

func (i *clusterStateInfoUpdateInfoPtrType) ToClusterStateInfoUpdateInfoPtrOutputWithContext(ctx context.Context) ClusterStateInfoUpdateInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterStateInfoUpdateInfoPtrOutput)
}

type ClusterStateInfoUpdateInfoOutput struct{ *pulumi.OutputState }

func (ClusterStateInfoUpdateInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterStateInfoUpdateInfo)(nil)).Elem()
}

func (o ClusterStateInfoUpdateInfoOutput) ToClusterStateInfoUpdateInfoOutput() ClusterStateInfoUpdateInfoOutput {
	return o
}

func (o ClusterStateInfoUpdateInfoOutput) ToClusterStateInfoUpdateInfoOutputWithContext(ctx context.Context) ClusterStateInfoUpdateInfoOutput {
	return o
}

func (o ClusterStateInfoUpdateInfoOutput) ToClusterStateInfoUpdateInfoPtrOutput() ClusterStateInfoUpdateInfoPtrOutput {
	return o.ToClusterStateInfoUpdateInfoPtrOutputWithContext(context.Background())
}

func (o ClusterStateInfoUpdateInfoOutput) ToClusterStateInfoUpdateInfoPtrOutputWithContext(ctx context.Context) ClusterStateInfoUpdateInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterStateInfoUpdateInfo) *ClusterStateInfoUpdateInfo {
		return &v
	}).(ClusterStateInfoUpdateInfoPtrOutput)
}

// Target number of replica nodes per shard.
func (o ClusterStateInfoUpdateInfoOutput) TargetReplicaCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterStateInfoUpdateInfo) *int { return v.TargetReplicaCount }).(pulumi.IntPtrOutput)
}

// Target number of shards for redis cluster.
func (o ClusterStateInfoUpdateInfoOutput) TargetShardCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterStateInfoUpdateInfo) *int { return v.TargetShardCount }).(pulumi.IntPtrOutput)
}

type ClusterStateInfoUpdateInfoPtrOutput struct{ *pulumi.OutputState }

func (ClusterStateInfoUpdateInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterStateInfoUpdateInfo)(nil)).Elem()
}

func (o ClusterStateInfoUpdateInfoPtrOutput) ToClusterStateInfoUpdateInfoPtrOutput() ClusterStateInfoUpdateInfoPtrOutput {
	return o
}

func (o ClusterStateInfoUpdateInfoPtrOutput) ToClusterStateInfoUpdateInfoPtrOutputWithContext(ctx context.Context) ClusterStateInfoUpdateInfoPtrOutput {
	return o
}

func (o ClusterStateInfoUpdateInfoPtrOutput) Elem() ClusterStateInfoUpdateInfoOutput {
	return o.ApplyT(func(v *ClusterStateInfoUpdateInfo) ClusterStateInfoUpdateInfo {
		if v != nil {
			return *v
		}
		var ret ClusterStateInfoUpdateInfo
		return ret
	}).(ClusterStateInfoUpdateInfoOutput)
}

// Target number of replica nodes per shard.
func (o ClusterStateInfoUpdateInfoPtrOutput) TargetReplicaCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterStateInfoUpdateInfo) *int {
		if v == nil {
			return nil
		}
		return v.TargetReplicaCount
	}).(pulumi.IntPtrOutput)
}

// Target number of shards for redis cluster.
func (o ClusterStateInfoUpdateInfoPtrOutput) TargetShardCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterStateInfoUpdateInfo) *int {
		if v == nil {
			return nil
		}
		return v.TargetShardCount
	}).(pulumi.IntPtrOutput)
}

type ClusterUserCreatedConnectionsClusterEndpoint struct {
	// Structure is documented below.
	Connections []ClusterUserCreatedConnectionsClusterEndpointConnection `pulumi:"connections"`
}

// ClusterUserCreatedConnectionsClusterEndpointInput is an input type that accepts ClusterUserCreatedConnectionsClusterEndpointArgs and ClusterUserCreatedConnectionsClusterEndpointOutput values.
// You can construct a concrete instance of `ClusterUserCreatedConnectionsClusterEndpointInput` via:
//
//	ClusterUserCreatedConnectionsClusterEndpointArgs{...}
type ClusterUserCreatedConnectionsClusterEndpointInput interface {
	pulumi.Input

	ToClusterUserCreatedConnectionsClusterEndpointOutput() ClusterUserCreatedConnectionsClusterEndpointOutput
	ToClusterUserCreatedConnectionsClusterEndpointOutputWithContext(context.Context) ClusterUserCreatedConnectionsClusterEndpointOutput
}

type ClusterUserCreatedConnectionsClusterEndpointArgs struct {
	// Structure is documented below.
	Connections ClusterUserCreatedConnectionsClusterEndpointConnectionArrayInput `pulumi:"connections"`
}

func (ClusterUserCreatedConnectionsClusterEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterUserCreatedConnectionsClusterEndpoint)(nil)).Elem()
}

func (i ClusterUserCreatedConnectionsClusterEndpointArgs) ToClusterUserCreatedConnectionsClusterEndpointOutput() ClusterUserCreatedConnectionsClusterEndpointOutput {
	return i.ToClusterUserCreatedConnectionsClusterEndpointOutputWithContext(context.Background())
}

func (i ClusterUserCreatedConnectionsClusterEndpointArgs) ToClusterUserCreatedConnectionsClusterEndpointOutputWithContext(ctx context.Context) ClusterUserCreatedConnectionsClusterEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterUserCreatedConnectionsClusterEndpointOutput)
}

// ClusterUserCreatedConnectionsClusterEndpointArrayInput is an input type that accepts ClusterUserCreatedConnectionsClusterEndpointArray and ClusterUserCreatedConnectionsClusterEndpointArrayOutput values.
// You can construct a concrete instance of `ClusterUserCreatedConnectionsClusterEndpointArrayInput` via:
//
//	ClusterUserCreatedConnectionsClusterEndpointArray{ ClusterUserCreatedConnectionsClusterEndpointArgs{...} }
type ClusterUserCreatedConnectionsClusterEndpointArrayInput interface {
	pulumi.Input

	ToClusterUserCreatedConnectionsClusterEndpointArrayOutput() ClusterUserCreatedConnectionsClusterEndpointArrayOutput
	ToClusterUserCreatedConnectionsClusterEndpointArrayOutputWithContext(context.Context) ClusterUserCreatedConnectionsClusterEndpointArrayOutput
}

type ClusterUserCreatedConnectionsClusterEndpointArray []ClusterUserCreatedConnectionsClusterEndpointInput

func (ClusterUserCreatedConnectionsClusterEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterUserCreatedConnectionsClusterEndpoint)(nil)).Elem()
}

func (i ClusterUserCreatedConnectionsClusterEndpointArray) ToClusterUserCreatedConnectionsClusterEndpointArrayOutput() ClusterUserCreatedConnectionsClusterEndpointArrayOutput {
	return i.ToClusterUserCreatedConnectionsClusterEndpointArrayOutputWithContext(context.Background())
}

func (i ClusterUserCreatedConnectionsClusterEndpointArray) ToClusterUserCreatedConnectionsClusterEndpointArrayOutputWithContext(ctx context.Context) ClusterUserCreatedConnectionsClusterEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterUserCreatedConnectionsClusterEndpointArrayOutput)
}

type ClusterUserCreatedConnectionsClusterEndpointOutput struct{ *pulumi.OutputState }

func (ClusterUserCreatedConnectionsClusterEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterUserCreatedConnectionsClusterEndpoint)(nil)).Elem()
}

func (o ClusterUserCreatedConnectionsClusterEndpointOutput) ToClusterUserCreatedConnectionsClusterEndpointOutput() ClusterUserCreatedConnectionsClusterEndpointOutput {
	return o
}

func (o ClusterUserCreatedConnectionsClusterEndpointOutput) ToClusterUserCreatedConnectionsClusterEndpointOutputWithContext(ctx context.Context) ClusterUserCreatedConnectionsClusterEndpointOutput {
	return o
}

// Structure is documented below.
func (o ClusterUserCreatedConnectionsClusterEndpointOutput) Connections() ClusterUserCreatedConnectionsClusterEndpointConnectionArrayOutput {
	return o.ApplyT(func(v ClusterUserCreatedConnectionsClusterEndpoint) []ClusterUserCreatedConnectionsClusterEndpointConnection {
		return v.Connections
	}).(ClusterUserCreatedConnectionsClusterEndpointConnectionArrayOutput)
}

type ClusterUserCreatedConnectionsClusterEndpointArrayOutput struct{ *pulumi.OutputState }

func (ClusterUserCreatedConnectionsClusterEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterUserCreatedConnectionsClusterEndpoint)(nil)).Elem()
}

func (o ClusterUserCreatedConnectionsClusterEndpointArrayOutput) ToClusterUserCreatedConnectionsClusterEndpointArrayOutput() ClusterUserCreatedConnectionsClusterEndpointArrayOutput {
	return o
}

func (o ClusterUserCreatedConnectionsClusterEndpointArrayOutput) ToClusterUserCreatedConnectionsClusterEndpointArrayOutputWithContext(ctx context.Context) ClusterUserCreatedConnectionsClusterEndpointArrayOutput {
	return o
}

func (o ClusterUserCreatedConnectionsClusterEndpointArrayOutput) Index(i pulumi.IntInput) ClusterUserCreatedConnectionsClusterEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterUserCreatedConnectionsClusterEndpoint {
		return vs[0].([]ClusterUserCreatedConnectionsClusterEndpoint)[vs[1].(int)]
	}).(ClusterUserCreatedConnectionsClusterEndpointOutput)
}

type ClusterUserCreatedConnectionsClusterEndpointConnection struct {
	// Detailed information of a PSC connection that is created by the customer
	// who owns the cluster.
	// Structure is documented below.
	PscConnection *ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnection `pulumi:"pscConnection"`
}

// ClusterUserCreatedConnectionsClusterEndpointConnectionInput is an input type that accepts ClusterUserCreatedConnectionsClusterEndpointConnectionArgs and ClusterUserCreatedConnectionsClusterEndpointConnectionOutput values.
// You can construct a concrete instance of `ClusterUserCreatedConnectionsClusterEndpointConnectionInput` via:
//
//	ClusterUserCreatedConnectionsClusterEndpointConnectionArgs{...}
type ClusterUserCreatedConnectionsClusterEndpointConnectionInput interface {
	pulumi.Input

	ToClusterUserCreatedConnectionsClusterEndpointConnectionOutput() ClusterUserCreatedConnectionsClusterEndpointConnectionOutput
	ToClusterUserCreatedConnectionsClusterEndpointConnectionOutputWithContext(context.Context) ClusterUserCreatedConnectionsClusterEndpointConnectionOutput
}

type ClusterUserCreatedConnectionsClusterEndpointConnectionArgs struct {
	// Detailed information of a PSC connection that is created by the customer
	// who owns the cluster.
	// Structure is documented below.
	PscConnection ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrInput `pulumi:"pscConnection"`
}

func (ClusterUserCreatedConnectionsClusterEndpointConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterUserCreatedConnectionsClusterEndpointConnection)(nil)).Elem()
}

func (i ClusterUserCreatedConnectionsClusterEndpointConnectionArgs) ToClusterUserCreatedConnectionsClusterEndpointConnectionOutput() ClusterUserCreatedConnectionsClusterEndpointConnectionOutput {
	return i.ToClusterUserCreatedConnectionsClusterEndpointConnectionOutputWithContext(context.Background())
}

func (i ClusterUserCreatedConnectionsClusterEndpointConnectionArgs) ToClusterUserCreatedConnectionsClusterEndpointConnectionOutputWithContext(ctx context.Context) ClusterUserCreatedConnectionsClusterEndpointConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterUserCreatedConnectionsClusterEndpointConnectionOutput)
}

// ClusterUserCreatedConnectionsClusterEndpointConnectionArrayInput is an input type that accepts ClusterUserCreatedConnectionsClusterEndpointConnectionArray and ClusterUserCreatedConnectionsClusterEndpointConnectionArrayOutput values.
// You can construct a concrete instance of `ClusterUserCreatedConnectionsClusterEndpointConnectionArrayInput` via:
//
//	ClusterUserCreatedConnectionsClusterEndpointConnectionArray{ ClusterUserCreatedConnectionsClusterEndpointConnectionArgs{...} }
type ClusterUserCreatedConnectionsClusterEndpointConnectionArrayInput interface {
	pulumi.Input

	ToClusterUserCreatedConnectionsClusterEndpointConnectionArrayOutput() ClusterUserCreatedConnectionsClusterEndpointConnectionArrayOutput
	ToClusterUserCreatedConnectionsClusterEndpointConnectionArrayOutputWithContext(context.Context) ClusterUserCreatedConnectionsClusterEndpointConnectionArrayOutput
}

type ClusterUserCreatedConnectionsClusterEndpointConnectionArray []ClusterUserCreatedConnectionsClusterEndpointConnectionInput

func (ClusterUserCreatedConnectionsClusterEndpointConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterUserCreatedConnectionsClusterEndpointConnection)(nil)).Elem()
}

func (i ClusterUserCreatedConnectionsClusterEndpointConnectionArray) ToClusterUserCreatedConnectionsClusterEndpointConnectionArrayOutput() ClusterUserCreatedConnectionsClusterEndpointConnectionArrayOutput {
	return i.ToClusterUserCreatedConnectionsClusterEndpointConnectionArrayOutputWithContext(context.Background())
}

func (i ClusterUserCreatedConnectionsClusterEndpointConnectionArray) ToClusterUserCreatedConnectionsClusterEndpointConnectionArrayOutputWithContext(ctx context.Context) ClusterUserCreatedConnectionsClusterEndpointConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterUserCreatedConnectionsClusterEndpointConnectionArrayOutput)
}

type ClusterUserCreatedConnectionsClusterEndpointConnectionOutput struct{ *pulumi.OutputState }

func (ClusterUserCreatedConnectionsClusterEndpointConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterUserCreatedConnectionsClusterEndpointConnection)(nil)).Elem()
}

func (o ClusterUserCreatedConnectionsClusterEndpointConnectionOutput) ToClusterUserCreatedConnectionsClusterEndpointConnectionOutput() ClusterUserCreatedConnectionsClusterEndpointConnectionOutput {
	return o
}

func (o ClusterUserCreatedConnectionsClusterEndpointConnectionOutput) ToClusterUserCreatedConnectionsClusterEndpointConnectionOutputWithContext(ctx context.Context) ClusterUserCreatedConnectionsClusterEndpointConnectionOutput {
	return o
}

// Detailed information of a PSC connection that is created by the customer
// who owns the cluster.
// Structure is documented below.
func (o ClusterUserCreatedConnectionsClusterEndpointConnectionOutput) PscConnection() ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutput {
	return o.ApplyT(func(v ClusterUserCreatedConnectionsClusterEndpointConnection) *ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnection {
		return v.PscConnection
	}).(ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutput)
}

type ClusterUserCreatedConnectionsClusterEndpointConnectionArrayOutput struct{ *pulumi.OutputState }

func (ClusterUserCreatedConnectionsClusterEndpointConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterUserCreatedConnectionsClusterEndpointConnection)(nil)).Elem()
}

func (o ClusterUserCreatedConnectionsClusterEndpointConnectionArrayOutput) ToClusterUserCreatedConnectionsClusterEndpointConnectionArrayOutput() ClusterUserCreatedConnectionsClusterEndpointConnectionArrayOutput {
	return o
}

func (o ClusterUserCreatedConnectionsClusterEndpointConnectionArrayOutput) ToClusterUserCreatedConnectionsClusterEndpointConnectionArrayOutputWithContext(ctx context.Context) ClusterUserCreatedConnectionsClusterEndpointConnectionArrayOutput {
	return o
}

func (o ClusterUserCreatedConnectionsClusterEndpointConnectionArrayOutput) Index(i pulumi.IntInput) ClusterUserCreatedConnectionsClusterEndpointConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterUserCreatedConnectionsClusterEndpointConnection {
		return vs[0].([]ClusterUserCreatedConnectionsClusterEndpointConnection)[vs[1].(int)]
	}).(ClusterUserCreatedConnectionsClusterEndpointConnectionOutput)
}

type ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnection struct {
	// The IP allocated on the consumer network for the PSC forwarding rule.
	Address string `pulumi:"address"`
	// (Output)
	// Output Only. Type of a PSC Connection.
	// Possible values:
	// CONNECTION_TYPE_DISCOVERY
	// CONNECTION_TYPE_PRIMARY
	// CONNECTION_TYPE_READER
	ConnectionType *string `pulumi:"connectionType"`
	// The URI of the consumer side forwarding rule.
	// Format:
	// projects/{project}/regions/{region}/forwardingRules/{forwarding_rule}
	ForwardingRule string `pulumi:"forwardingRule"`
	// The consumer network where the IP address resides, in the form of
	// projects/{project_id}/global/networks/{network_id}.
	Network string `pulumi:"network"`
	// The consumer projectId where the forwarding rule is created from.
	ProjectId *string `pulumi:"projectId"`
	// The PSC connection id of the forwarding rule connected to the
	// service attachment.
	PscConnectionId string `pulumi:"pscConnectionId"`
	// (Output)
	// Output Only. The status of the PSC connection: whether a connection exists and ACTIVE or it no longer exists.
	// Possible values:
	// ACTIVE
	// NOT_FOUND
	PscConnectionStatus *string `pulumi:"pscConnectionStatus"`
	// The service attachment which is the target of the PSC connection, in the form of projects/{project-id}/regions/{region}/serviceAttachments/{service-attachment-id}.
	ServiceAttachment string `pulumi:"serviceAttachment"`
}

// ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionInput is an input type that accepts ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionArgs and ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionOutput values.
// You can construct a concrete instance of `ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionInput` via:
//
//	ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionArgs{...}
type ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionInput interface {
	pulumi.Input

	ToClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionOutput() ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionOutput
	ToClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionOutputWithContext(context.Context) ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionOutput
}

type ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionArgs struct {
	// The IP allocated on the consumer network for the PSC forwarding rule.
	Address pulumi.StringInput `pulumi:"address"`
	// (Output)
	// Output Only. Type of a PSC Connection.
	// Possible values:
	// CONNECTION_TYPE_DISCOVERY
	// CONNECTION_TYPE_PRIMARY
	// CONNECTION_TYPE_READER
	ConnectionType pulumi.StringPtrInput `pulumi:"connectionType"`
	// The URI of the consumer side forwarding rule.
	// Format:
	// projects/{project}/regions/{region}/forwardingRules/{forwarding_rule}
	ForwardingRule pulumi.StringInput `pulumi:"forwardingRule"`
	// The consumer network where the IP address resides, in the form of
	// projects/{project_id}/global/networks/{network_id}.
	Network pulumi.StringInput `pulumi:"network"`
	// The consumer projectId where the forwarding rule is created from.
	ProjectId pulumi.StringPtrInput `pulumi:"projectId"`
	// The PSC connection id of the forwarding rule connected to the
	// service attachment.
	PscConnectionId pulumi.StringInput `pulumi:"pscConnectionId"`
	// (Output)
	// Output Only. The status of the PSC connection: whether a connection exists and ACTIVE or it no longer exists.
	// Possible values:
	// ACTIVE
	// NOT_FOUND
	PscConnectionStatus pulumi.StringPtrInput `pulumi:"pscConnectionStatus"`
	// The service attachment which is the target of the PSC connection, in the form of projects/{project-id}/regions/{region}/serviceAttachments/{service-attachment-id}.
	ServiceAttachment pulumi.StringInput `pulumi:"serviceAttachment"`
}

func (ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnection)(nil)).Elem()
}

func (i ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionArgs) ToClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionOutput() ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionOutput {
	return i.ToClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionOutputWithContext(context.Background())
}

func (i ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionArgs) ToClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionOutputWithContext(ctx context.Context) ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionOutput)
}

func (i ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionArgs) ToClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutput() ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutput {
	return i.ToClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutputWithContext(context.Background())
}

func (i ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionArgs) ToClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutputWithContext(ctx context.Context) ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionOutput).ToClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutputWithContext(ctx)
}

// ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrInput is an input type that accepts ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionArgs, ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtr and ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutput values.
// You can construct a concrete instance of `ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrInput` via:
//
//	        ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionArgs{...}
//
//	or:
//
//	        nil
type ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrInput interface {
	pulumi.Input

	ToClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutput() ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutput
	ToClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutputWithContext(context.Context) ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutput
}

type clusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrType ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionArgs

func ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtr(v *ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionArgs) ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrInput {
	return (*clusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrType)(v)
}

func (*clusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnection)(nil)).Elem()
}

func (i *clusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrType) ToClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutput() ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutput {
	return i.ToClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutputWithContext(context.Background())
}

func (i *clusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrType) ToClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutputWithContext(ctx context.Context) ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutput)
}

type ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionOutput struct{ *pulumi.OutputState }

func (ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnection)(nil)).Elem()
}

func (o ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionOutput) ToClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionOutput() ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionOutput {
	return o
}

func (o ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionOutput) ToClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionOutputWithContext(ctx context.Context) ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionOutput {
	return o
}

func (o ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionOutput) ToClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutput() ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutput {
	return o.ToClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutputWithContext(context.Background())
}

func (o ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionOutput) ToClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutputWithContext(ctx context.Context) ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnection) *ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnection {
		return &v
	}).(ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutput)
}

// The IP allocated on the consumer network for the PSC forwarding rule.
func (o ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnection) string { return v.Address }).(pulumi.StringOutput)
}

// (Output)
// Output Only. Type of a PSC Connection.
// Possible values:
// CONNECTION_TYPE_DISCOVERY
// CONNECTION_TYPE_PRIMARY
// CONNECTION_TYPE_READER
func (o ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionOutput) ConnectionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnection) *string {
		return v.ConnectionType
	}).(pulumi.StringPtrOutput)
}

// The URI of the consumer side forwarding rule.
// Format:
// projects/{project}/regions/{region}/forwardingRules/{forwarding_rule}
func (o ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionOutput) ForwardingRule() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnection) string {
		return v.ForwardingRule
	}).(pulumi.StringOutput)
}

// The consumer network where the IP address resides, in the form of
// projects/{project_id}/global/networks/{network_id}.
func (o ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionOutput) Network() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnection) string { return v.Network }).(pulumi.StringOutput)
}

// The consumer projectId where the forwarding rule is created from.
func (o ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnection) *string {
		return v.ProjectId
	}).(pulumi.StringPtrOutput)
}

// The PSC connection id of the forwarding rule connected to the
// service attachment.
func (o ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionOutput) PscConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnection) string {
		return v.PscConnectionId
	}).(pulumi.StringOutput)
}

// (Output)
// Output Only. The status of the PSC connection: whether a connection exists and ACTIVE or it no longer exists.
// Possible values:
// ACTIVE
// NOT_FOUND
func (o ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionOutput) PscConnectionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnection) *string {
		return v.PscConnectionStatus
	}).(pulumi.StringPtrOutput)
}

// The service attachment which is the target of the PSC connection, in the form of projects/{project-id}/regions/{region}/serviceAttachments/{service-attachment-id}.
func (o ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionOutput) ServiceAttachment() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnection) string {
		return v.ServiceAttachment
	}).(pulumi.StringOutput)
}

type ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutput struct{ *pulumi.OutputState }

func (ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnection)(nil)).Elem()
}

func (o ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutput) ToClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutput() ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutput {
	return o
}

func (o ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutput) ToClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutputWithContext(ctx context.Context) ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutput {
	return o
}

func (o ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutput) Elem() ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionOutput {
	return o.ApplyT(func(v *ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnection) ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnection {
		if v != nil {
			return *v
		}
		var ret ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnection
		return ret
	}).(ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionOutput)
}

// The IP allocated on the consumer network for the PSC forwarding rule.
func (o ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnection) *string {
		if v == nil {
			return nil
		}
		return &v.Address
	}).(pulumi.StringPtrOutput)
}

// (Output)
// Output Only. Type of a PSC Connection.
// Possible values:
// CONNECTION_TYPE_DISCOVERY
// CONNECTION_TYPE_PRIMARY
// CONNECTION_TYPE_READER
func (o ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutput) ConnectionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnection) *string {
		if v == nil {
			return nil
		}
		return v.ConnectionType
	}).(pulumi.StringPtrOutput)
}

// The URI of the consumer side forwarding rule.
// Format:
// projects/{project}/regions/{region}/forwardingRules/{forwarding_rule}
func (o ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutput) ForwardingRule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnection) *string {
		if v == nil {
			return nil
		}
		return &v.ForwardingRule
	}).(pulumi.StringPtrOutput)
}

// The consumer network where the IP address resides, in the form of
// projects/{project_id}/global/networks/{network_id}.
func (o ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutput) Network() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnection) *string {
		if v == nil {
			return nil
		}
		return &v.Network
	}).(pulumi.StringPtrOutput)
}

// The consumer projectId where the forwarding rule is created from.
func (o ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnection) *string {
		if v == nil {
			return nil
		}
		return v.ProjectId
	}).(pulumi.StringPtrOutput)
}

// The PSC connection id of the forwarding rule connected to the
// service attachment.
func (o ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutput) PscConnectionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnection) *string {
		if v == nil {
			return nil
		}
		return &v.PscConnectionId
	}).(pulumi.StringPtrOutput)
}

// (Output)
// Output Only. The status of the PSC connection: whether a connection exists and ACTIVE or it no longer exists.
// Possible values:
// ACTIVE
// NOT_FOUND
func (o ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutput) PscConnectionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnection) *string {
		if v == nil {
			return nil
		}
		return v.PscConnectionStatus
	}).(pulumi.StringPtrOutput)
}

// The service attachment which is the target of the PSC connection, in the form of projects/{project-id}/regions/{region}/serviceAttachments/{service-attachment-id}.
func (o ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutput) ServiceAttachment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnection) *string {
		if v == nil {
			return nil
		}
		return &v.ServiceAttachment
	}).(pulumi.StringPtrOutput)
}

type ClusterZoneDistributionConfig struct {
	// Immutable. The mode for zone distribution for Memorystore Redis cluster.
	// If not provided, MULTI_ZONE will be used as default
	// Possible values are: `MULTI_ZONE`, `SINGLE_ZONE`.
	Mode *string `pulumi:"mode"`
	// Immutable. The zone for single zone Memorystore Redis cluster.
	Zone *string `pulumi:"zone"`
}

// ClusterZoneDistributionConfigInput is an input type that accepts ClusterZoneDistributionConfigArgs and ClusterZoneDistributionConfigOutput values.
// You can construct a concrete instance of `ClusterZoneDistributionConfigInput` via:
//
//	ClusterZoneDistributionConfigArgs{...}
type ClusterZoneDistributionConfigInput interface {
	pulumi.Input

	ToClusterZoneDistributionConfigOutput() ClusterZoneDistributionConfigOutput
	ToClusterZoneDistributionConfigOutputWithContext(context.Context) ClusterZoneDistributionConfigOutput
}

type ClusterZoneDistributionConfigArgs struct {
	// Immutable. The mode for zone distribution for Memorystore Redis cluster.
	// If not provided, MULTI_ZONE will be used as default
	// Possible values are: `MULTI_ZONE`, `SINGLE_ZONE`.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// Immutable. The zone for single zone Memorystore Redis cluster.
	Zone pulumi.StringPtrInput `pulumi:"zone"`
}

func (ClusterZoneDistributionConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterZoneDistributionConfig)(nil)).Elem()
}

func (i ClusterZoneDistributionConfigArgs) ToClusterZoneDistributionConfigOutput() ClusterZoneDistributionConfigOutput {
	return i.ToClusterZoneDistributionConfigOutputWithContext(context.Background())
}

func (i ClusterZoneDistributionConfigArgs) ToClusterZoneDistributionConfigOutputWithContext(ctx context.Context) ClusterZoneDistributionConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterZoneDistributionConfigOutput)
}

func (i ClusterZoneDistributionConfigArgs) ToClusterZoneDistributionConfigPtrOutput() ClusterZoneDistributionConfigPtrOutput {
	return i.ToClusterZoneDistributionConfigPtrOutputWithContext(context.Background())
}

func (i ClusterZoneDistributionConfigArgs) ToClusterZoneDistributionConfigPtrOutputWithContext(ctx context.Context) ClusterZoneDistributionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterZoneDistributionConfigOutput).ToClusterZoneDistributionConfigPtrOutputWithContext(ctx)
}

// ClusterZoneDistributionConfigPtrInput is an input type that accepts ClusterZoneDistributionConfigArgs, ClusterZoneDistributionConfigPtr and ClusterZoneDistributionConfigPtrOutput values.
// You can construct a concrete instance of `ClusterZoneDistributionConfigPtrInput` via:
//
//	        ClusterZoneDistributionConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterZoneDistributionConfigPtrInput interface {
	pulumi.Input

	ToClusterZoneDistributionConfigPtrOutput() ClusterZoneDistributionConfigPtrOutput
	ToClusterZoneDistributionConfigPtrOutputWithContext(context.Context) ClusterZoneDistributionConfigPtrOutput
}

type clusterZoneDistributionConfigPtrType ClusterZoneDistributionConfigArgs

func ClusterZoneDistributionConfigPtr(v *ClusterZoneDistributionConfigArgs) ClusterZoneDistributionConfigPtrInput {
	return (*clusterZoneDistributionConfigPtrType)(v)
}

func (*clusterZoneDistributionConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterZoneDistributionConfig)(nil)).Elem()
}

func (i *clusterZoneDistributionConfigPtrType) ToClusterZoneDistributionConfigPtrOutput() ClusterZoneDistributionConfigPtrOutput {
	return i.ToClusterZoneDistributionConfigPtrOutputWithContext(context.Background())
}

func (i *clusterZoneDistributionConfigPtrType) ToClusterZoneDistributionConfigPtrOutputWithContext(ctx context.Context) ClusterZoneDistributionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterZoneDistributionConfigPtrOutput)
}

type ClusterZoneDistributionConfigOutput struct{ *pulumi.OutputState }

func (ClusterZoneDistributionConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterZoneDistributionConfig)(nil)).Elem()
}

func (o ClusterZoneDistributionConfigOutput) ToClusterZoneDistributionConfigOutput() ClusterZoneDistributionConfigOutput {
	return o
}

func (o ClusterZoneDistributionConfigOutput) ToClusterZoneDistributionConfigOutputWithContext(ctx context.Context) ClusterZoneDistributionConfigOutput {
	return o
}

func (o ClusterZoneDistributionConfigOutput) ToClusterZoneDistributionConfigPtrOutput() ClusterZoneDistributionConfigPtrOutput {
	return o.ToClusterZoneDistributionConfigPtrOutputWithContext(context.Background())
}

func (o ClusterZoneDistributionConfigOutput) ToClusterZoneDistributionConfigPtrOutputWithContext(ctx context.Context) ClusterZoneDistributionConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterZoneDistributionConfig) *ClusterZoneDistributionConfig {
		return &v
	}).(ClusterZoneDistributionConfigPtrOutput)
}

// Immutable. The mode for zone distribution for Memorystore Redis cluster.
// If not provided, MULTI_ZONE will be used as default
// Possible values are: `MULTI_ZONE`, `SINGLE_ZONE`.
func (o ClusterZoneDistributionConfigOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterZoneDistributionConfig) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// Immutable. The zone for single zone Memorystore Redis cluster.
func (o ClusterZoneDistributionConfigOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterZoneDistributionConfig) *string { return v.Zone }).(pulumi.StringPtrOutput)
}

type ClusterZoneDistributionConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterZoneDistributionConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterZoneDistributionConfig)(nil)).Elem()
}

func (o ClusterZoneDistributionConfigPtrOutput) ToClusterZoneDistributionConfigPtrOutput() ClusterZoneDistributionConfigPtrOutput {
	return o
}

func (o ClusterZoneDistributionConfigPtrOutput) ToClusterZoneDistributionConfigPtrOutputWithContext(ctx context.Context) ClusterZoneDistributionConfigPtrOutput {
	return o
}

func (o ClusterZoneDistributionConfigPtrOutput) Elem() ClusterZoneDistributionConfigOutput {
	return o.ApplyT(func(v *ClusterZoneDistributionConfig) ClusterZoneDistributionConfig {
		if v != nil {
			return *v
		}
		var ret ClusterZoneDistributionConfig
		return ret
	}).(ClusterZoneDistributionConfigOutput)
}

// Immutable. The mode for zone distribution for Memorystore Redis cluster.
// If not provided, MULTI_ZONE will be used as default
// Possible values are: `MULTI_ZONE`, `SINGLE_ZONE`.
func (o ClusterZoneDistributionConfigPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterZoneDistributionConfig) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// Immutable. The zone for single zone Memorystore Redis cluster.
func (o ClusterZoneDistributionConfigPtrOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterZoneDistributionConfig) *string {
		if v == nil {
			return nil
		}
		return v.Zone
	}).(pulumi.StringPtrOutput)
}

type InstanceMaintenancePolicy struct {
	// (Output)
	// Output only. The time when the policy was created.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits.
	CreateTime *string `pulumi:"createTime"`
	// Optional. Description of what this policy is for.
	// Create/Update methods return INVALID_ARGUMENT if the
	// length is greater than 512.
	Description *string `pulumi:"description"`
	// (Output)
	// Output only. The time when the policy was last updated.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits.
	UpdateTime *string `pulumi:"updateTime"`
	// Optional. Maintenance window that is applied to resources covered by this policy.
	// Minimum 1. For the current version, the maximum number
	// of weeklyWindow is expected to be one.
	// Structure is documented below.
	WeeklyMaintenanceWindows []InstanceMaintenancePolicyWeeklyMaintenanceWindow `pulumi:"weeklyMaintenanceWindows"`
}

// InstanceMaintenancePolicyInput is an input type that accepts InstanceMaintenancePolicyArgs and InstanceMaintenancePolicyOutput values.
// You can construct a concrete instance of `InstanceMaintenancePolicyInput` via:
//
//	InstanceMaintenancePolicyArgs{...}
type InstanceMaintenancePolicyInput interface {
	pulumi.Input

	ToInstanceMaintenancePolicyOutput() InstanceMaintenancePolicyOutput
	ToInstanceMaintenancePolicyOutputWithContext(context.Context) InstanceMaintenancePolicyOutput
}

type InstanceMaintenancePolicyArgs struct {
	// (Output)
	// Output only. The time when the policy was created.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits.
	CreateTime pulumi.StringPtrInput `pulumi:"createTime"`
	// Optional. Description of what this policy is for.
	// Create/Update methods return INVALID_ARGUMENT if the
	// length is greater than 512.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// (Output)
	// Output only. The time when the policy was last updated.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits.
	UpdateTime pulumi.StringPtrInput `pulumi:"updateTime"`
	// Optional. Maintenance window that is applied to resources covered by this policy.
	// Minimum 1. For the current version, the maximum number
	// of weeklyWindow is expected to be one.
	// Structure is documented below.
	WeeklyMaintenanceWindows InstanceMaintenancePolicyWeeklyMaintenanceWindowArrayInput `pulumi:"weeklyMaintenanceWindows"`
}

func (InstanceMaintenancePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceMaintenancePolicy)(nil)).Elem()
}

func (i InstanceMaintenancePolicyArgs) ToInstanceMaintenancePolicyOutput() InstanceMaintenancePolicyOutput {
	return i.ToInstanceMaintenancePolicyOutputWithContext(context.Background())
}

func (i InstanceMaintenancePolicyArgs) ToInstanceMaintenancePolicyOutputWithContext(ctx context.Context) InstanceMaintenancePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMaintenancePolicyOutput)
}

func (i InstanceMaintenancePolicyArgs) ToInstanceMaintenancePolicyPtrOutput() InstanceMaintenancePolicyPtrOutput {
	return i.ToInstanceMaintenancePolicyPtrOutputWithContext(context.Background())
}

func (i InstanceMaintenancePolicyArgs) ToInstanceMaintenancePolicyPtrOutputWithContext(ctx context.Context) InstanceMaintenancePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMaintenancePolicyOutput).ToInstanceMaintenancePolicyPtrOutputWithContext(ctx)
}

// InstanceMaintenancePolicyPtrInput is an input type that accepts InstanceMaintenancePolicyArgs, InstanceMaintenancePolicyPtr and InstanceMaintenancePolicyPtrOutput values.
// You can construct a concrete instance of `InstanceMaintenancePolicyPtrInput` via:
//
//	        InstanceMaintenancePolicyArgs{...}
//
//	or:
//
//	        nil
type InstanceMaintenancePolicyPtrInput interface {
	pulumi.Input

	ToInstanceMaintenancePolicyPtrOutput() InstanceMaintenancePolicyPtrOutput
	ToInstanceMaintenancePolicyPtrOutputWithContext(context.Context) InstanceMaintenancePolicyPtrOutput
}

type instanceMaintenancePolicyPtrType InstanceMaintenancePolicyArgs

func InstanceMaintenancePolicyPtr(v *InstanceMaintenancePolicyArgs) InstanceMaintenancePolicyPtrInput {
	return (*instanceMaintenancePolicyPtrType)(v)
}

func (*instanceMaintenancePolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceMaintenancePolicy)(nil)).Elem()
}

func (i *instanceMaintenancePolicyPtrType) ToInstanceMaintenancePolicyPtrOutput() InstanceMaintenancePolicyPtrOutput {
	return i.ToInstanceMaintenancePolicyPtrOutputWithContext(context.Background())
}

func (i *instanceMaintenancePolicyPtrType) ToInstanceMaintenancePolicyPtrOutputWithContext(ctx context.Context) InstanceMaintenancePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMaintenancePolicyPtrOutput)
}

type InstanceMaintenancePolicyOutput struct{ *pulumi.OutputState }

func (InstanceMaintenancePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceMaintenancePolicy)(nil)).Elem()
}

func (o InstanceMaintenancePolicyOutput) ToInstanceMaintenancePolicyOutput() InstanceMaintenancePolicyOutput {
	return o
}

func (o InstanceMaintenancePolicyOutput) ToInstanceMaintenancePolicyOutputWithContext(ctx context.Context) InstanceMaintenancePolicyOutput {
	return o
}

func (o InstanceMaintenancePolicyOutput) ToInstanceMaintenancePolicyPtrOutput() InstanceMaintenancePolicyPtrOutput {
	return o.ToInstanceMaintenancePolicyPtrOutputWithContext(context.Background())
}

func (o InstanceMaintenancePolicyOutput) ToInstanceMaintenancePolicyPtrOutputWithContext(ctx context.Context) InstanceMaintenancePolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceMaintenancePolicy) *InstanceMaintenancePolicy {
		return &v
	}).(InstanceMaintenancePolicyPtrOutput)
}

// (Output)
// Output only. The time when the policy was created.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
// resolution and up to nine fractional digits.
func (o InstanceMaintenancePolicyOutput) CreateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceMaintenancePolicy) *string { return v.CreateTime }).(pulumi.StringPtrOutput)
}

// Optional. Description of what this policy is for.
// Create/Update methods return INVALID_ARGUMENT if the
// length is greater than 512.
func (o InstanceMaintenancePolicyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceMaintenancePolicy) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// (Output)
// Output only. The time when the policy was last updated.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
// resolution and up to nine fractional digits.
func (o InstanceMaintenancePolicyOutput) UpdateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceMaintenancePolicy) *string { return v.UpdateTime }).(pulumi.StringPtrOutput)
}

// Optional. Maintenance window that is applied to resources covered by this policy.
// Minimum 1. For the current version, the maximum number
// of weeklyWindow is expected to be one.
// Structure is documented below.
func (o InstanceMaintenancePolicyOutput) WeeklyMaintenanceWindows() InstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput {
	return o.ApplyT(func(v InstanceMaintenancePolicy) []InstanceMaintenancePolicyWeeklyMaintenanceWindow {
		return v.WeeklyMaintenanceWindows
	}).(InstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput)
}

type InstanceMaintenancePolicyPtrOutput struct{ *pulumi.OutputState }

func (InstanceMaintenancePolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceMaintenancePolicy)(nil)).Elem()
}

func (o InstanceMaintenancePolicyPtrOutput) ToInstanceMaintenancePolicyPtrOutput() InstanceMaintenancePolicyPtrOutput {
	return o
}

func (o InstanceMaintenancePolicyPtrOutput) ToInstanceMaintenancePolicyPtrOutputWithContext(ctx context.Context) InstanceMaintenancePolicyPtrOutput {
	return o
}

func (o InstanceMaintenancePolicyPtrOutput) Elem() InstanceMaintenancePolicyOutput {
	return o.ApplyT(func(v *InstanceMaintenancePolicy) InstanceMaintenancePolicy {
		if v != nil {
			return *v
		}
		var ret InstanceMaintenancePolicy
		return ret
	}).(InstanceMaintenancePolicyOutput)
}

// (Output)
// Output only. The time when the policy was created.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
// resolution and up to nine fractional digits.
func (o InstanceMaintenancePolicyPtrOutput) CreateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceMaintenancePolicy) *string {
		if v == nil {
			return nil
		}
		return v.CreateTime
	}).(pulumi.StringPtrOutput)
}

// Optional. Description of what this policy is for.
// Create/Update methods return INVALID_ARGUMENT if the
// length is greater than 512.
func (o InstanceMaintenancePolicyPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceMaintenancePolicy) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// (Output)
// Output only. The time when the policy was last updated.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
// resolution and up to nine fractional digits.
func (o InstanceMaintenancePolicyPtrOutput) UpdateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceMaintenancePolicy) *string {
		if v == nil {
			return nil
		}
		return v.UpdateTime
	}).(pulumi.StringPtrOutput)
}

// Optional. Maintenance window that is applied to resources covered by this policy.
// Minimum 1. For the current version, the maximum number
// of weeklyWindow is expected to be one.
// Structure is documented below.
func (o InstanceMaintenancePolicyPtrOutput) WeeklyMaintenanceWindows() InstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput {
	return o.ApplyT(func(v *InstanceMaintenancePolicy) []InstanceMaintenancePolicyWeeklyMaintenanceWindow {
		if v == nil {
			return nil
		}
		return v.WeeklyMaintenanceWindows
	}).(InstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput)
}

type InstanceMaintenancePolicyWeeklyMaintenanceWindow struct {
	// Required. The day of week that maintenance updates occur.
	// - DAY_OF_WEEK_UNSPECIFIED: The day of the week is unspecified.
	// - MONDAY: Monday
	// - TUESDAY: Tuesday
	// - WEDNESDAY: Wednesday
	// - THURSDAY: Thursday
	// - FRIDAY: Friday
	// - SATURDAY: Saturday
	// - SUNDAY: Sunday
	//   Possible values are: `DAY_OF_WEEK_UNSPECIFIED`, `MONDAY`, `TUESDAY`, `WEDNESDAY`, `THURSDAY`, `FRIDAY`, `SATURDAY`, `SUNDAY`.
	Day string `pulumi:"day"`
	// (Output)
	// Output only. Duration of the maintenance window.
	// The current window is fixed at 1 hour.
	// A duration in seconds with up to nine fractional digits,
	// terminated by 's'. Example: "3.5s".
	Duration *string `pulumi:"duration"`
	// Required. Start time of the window in UTC time.
	// Structure is documented below.
	StartTime InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTime `pulumi:"startTime"`
}

// InstanceMaintenancePolicyWeeklyMaintenanceWindowInput is an input type that accepts InstanceMaintenancePolicyWeeklyMaintenanceWindowArgs and InstanceMaintenancePolicyWeeklyMaintenanceWindowOutput values.
// You can construct a concrete instance of `InstanceMaintenancePolicyWeeklyMaintenanceWindowInput` via:
//
//	InstanceMaintenancePolicyWeeklyMaintenanceWindowArgs{...}
type InstanceMaintenancePolicyWeeklyMaintenanceWindowInput interface {
	pulumi.Input

	ToInstanceMaintenancePolicyWeeklyMaintenanceWindowOutput() InstanceMaintenancePolicyWeeklyMaintenanceWindowOutput
	ToInstanceMaintenancePolicyWeeklyMaintenanceWindowOutputWithContext(context.Context) InstanceMaintenancePolicyWeeklyMaintenanceWindowOutput
}

type InstanceMaintenancePolicyWeeklyMaintenanceWindowArgs struct {
	// Required. The day of week that maintenance updates occur.
	// - DAY_OF_WEEK_UNSPECIFIED: The day of the week is unspecified.
	// - MONDAY: Monday
	// - TUESDAY: Tuesday
	// - WEDNESDAY: Wednesday
	// - THURSDAY: Thursday
	// - FRIDAY: Friday
	// - SATURDAY: Saturday
	// - SUNDAY: Sunday
	//   Possible values are: `DAY_OF_WEEK_UNSPECIFIED`, `MONDAY`, `TUESDAY`, `WEDNESDAY`, `THURSDAY`, `FRIDAY`, `SATURDAY`, `SUNDAY`.
	Day pulumi.StringInput `pulumi:"day"`
	// (Output)
	// Output only. Duration of the maintenance window.
	// The current window is fixed at 1 hour.
	// A duration in seconds with up to nine fractional digits,
	// terminated by 's'. Example: "3.5s".
	Duration pulumi.StringPtrInput `pulumi:"duration"`
	// Required. Start time of the window in UTC time.
	// Structure is documented below.
	StartTime InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeInput `pulumi:"startTime"`
}

func (InstanceMaintenancePolicyWeeklyMaintenanceWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceMaintenancePolicyWeeklyMaintenanceWindow)(nil)).Elem()
}

func (i InstanceMaintenancePolicyWeeklyMaintenanceWindowArgs) ToInstanceMaintenancePolicyWeeklyMaintenanceWindowOutput() InstanceMaintenancePolicyWeeklyMaintenanceWindowOutput {
	return i.ToInstanceMaintenancePolicyWeeklyMaintenanceWindowOutputWithContext(context.Background())
}

func (i InstanceMaintenancePolicyWeeklyMaintenanceWindowArgs) ToInstanceMaintenancePolicyWeeklyMaintenanceWindowOutputWithContext(ctx context.Context) InstanceMaintenancePolicyWeeklyMaintenanceWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMaintenancePolicyWeeklyMaintenanceWindowOutput)
}

// InstanceMaintenancePolicyWeeklyMaintenanceWindowArrayInput is an input type that accepts InstanceMaintenancePolicyWeeklyMaintenanceWindowArray and InstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput values.
// You can construct a concrete instance of `InstanceMaintenancePolicyWeeklyMaintenanceWindowArrayInput` via:
//
//	InstanceMaintenancePolicyWeeklyMaintenanceWindowArray{ InstanceMaintenancePolicyWeeklyMaintenanceWindowArgs{...} }
type InstanceMaintenancePolicyWeeklyMaintenanceWindowArrayInput interface {
	pulumi.Input

	ToInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput() InstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput
	ToInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutputWithContext(context.Context) InstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput
}

type InstanceMaintenancePolicyWeeklyMaintenanceWindowArray []InstanceMaintenancePolicyWeeklyMaintenanceWindowInput

func (InstanceMaintenancePolicyWeeklyMaintenanceWindowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceMaintenancePolicyWeeklyMaintenanceWindow)(nil)).Elem()
}

func (i InstanceMaintenancePolicyWeeklyMaintenanceWindowArray) ToInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput() InstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput {
	return i.ToInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutputWithContext(context.Background())
}

func (i InstanceMaintenancePolicyWeeklyMaintenanceWindowArray) ToInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutputWithContext(ctx context.Context) InstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput)
}

type InstanceMaintenancePolicyWeeklyMaintenanceWindowOutput struct{ *pulumi.OutputState }

func (InstanceMaintenancePolicyWeeklyMaintenanceWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceMaintenancePolicyWeeklyMaintenanceWindow)(nil)).Elem()
}

func (o InstanceMaintenancePolicyWeeklyMaintenanceWindowOutput) ToInstanceMaintenancePolicyWeeklyMaintenanceWindowOutput() InstanceMaintenancePolicyWeeklyMaintenanceWindowOutput {
	return o
}

func (o InstanceMaintenancePolicyWeeklyMaintenanceWindowOutput) ToInstanceMaintenancePolicyWeeklyMaintenanceWindowOutputWithContext(ctx context.Context) InstanceMaintenancePolicyWeeklyMaintenanceWindowOutput {
	return o
}

// Required. The day of week that maintenance updates occur.
//   - DAY_OF_WEEK_UNSPECIFIED: The day of the week is unspecified.
//   - MONDAY: Monday
//   - TUESDAY: Tuesday
//   - WEDNESDAY: Wednesday
//   - THURSDAY: Thursday
//   - FRIDAY: Friday
//   - SATURDAY: Saturday
//   - SUNDAY: Sunday
//     Possible values are: `DAY_OF_WEEK_UNSPECIFIED`, `MONDAY`, `TUESDAY`, `WEDNESDAY`, `THURSDAY`, `FRIDAY`, `SATURDAY`, `SUNDAY`.
func (o InstanceMaintenancePolicyWeeklyMaintenanceWindowOutput) Day() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceMaintenancePolicyWeeklyMaintenanceWindow) string { return v.Day }).(pulumi.StringOutput)
}

// (Output)
// Output only. Duration of the maintenance window.
// The current window is fixed at 1 hour.
// A duration in seconds with up to nine fractional digits,
// terminated by 's'. Example: "3.5s".
func (o InstanceMaintenancePolicyWeeklyMaintenanceWindowOutput) Duration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceMaintenancePolicyWeeklyMaintenanceWindow) *string { return v.Duration }).(pulumi.StringPtrOutput)
}

// Required. Start time of the window in UTC time.
// Structure is documented below.
func (o InstanceMaintenancePolicyWeeklyMaintenanceWindowOutput) StartTime() InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput {
	return o.ApplyT(func(v InstanceMaintenancePolicyWeeklyMaintenanceWindow) InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTime {
		return v.StartTime
	}).(InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput)
}

type InstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput struct{ *pulumi.OutputState }

func (InstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceMaintenancePolicyWeeklyMaintenanceWindow)(nil)).Elem()
}

func (o InstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput) ToInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput() InstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput {
	return o
}

func (o InstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput) ToInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutputWithContext(ctx context.Context) InstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput {
	return o
}

func (o InstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput) Index(i pulumi.IntInput) InstanceMaintenancePolicyWeeklyMaintenanceWindowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceMaintenancePolicyWeeklyMaintenanceWindow {
		return vs[0].([]InstanceMaintenancePolicyWeeklyMaintenanceWindow)[vs[1].(int)]
	}).(InstanceMaintenancePolicyWeeklyMaintenanceWindowOutput)
}

type InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTime struct {
	// Hours of day in 24 hour format. Should be from 0 to 23.
	// An API may choose to allow the value "24:00:00" for scenarios like business closing time.
	Hours *int `pulumi:"hours"`
	// Minutes of hour of day. Must be from 0 to 59.
	Minutes *int `pulumi:"minutes"`
	// Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
	Nanos *int `pulumi:"nanos"`
	// Seconds of minutes of the time. Must normally be from 0 to 59.
	// An API may allow the value 60 if it allows leap-seconds.
	Seconds *int `pulumi:"seconds"`
}

// InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeInput is an input type that accepts InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArgs and InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput values.
// You can construct a concrete instance of `InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeInput` via:
//
//	InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArgs{...}
type InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeInput interface {
	pulumi.Input

	ToInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput() InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput
	ToInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutputWithContext(context.Context) InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput
}

type InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArgs struct {
	// Hours of day in 24 hour format. Should be from 0 to 23.
	// An API may choose to allow the value "24:00:00" for scenarios like business closing time.
	Hours pulumi.IntPtrInput `pulumi:"hours"`
	// Minutes of hour of day. Must be from 0 to 59.
	Minutes pulumi.IntPtrInput `pulumi:"minutes"`
	// Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
	Nanos pulumi.IntPtrInput `pulumi:"nanos"`
	// Seconds of minutes of the time. Must normally be from 0 to 59.
	// An API may allow the value 60 if it allows leap-seconds.
	Seconds pulumi.IntPtrInput `pulumi:"seconds"`
}

func (InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTime)(nil)).Elem()
}

func (i InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArgs) ToInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput() InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput {
	return i.ToInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutputWithContext(context.Background())
}

func (i InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArgs) ToInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutputWithContext(ctx context.Context) InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput)
}

type InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput struct{ *pulumi.OutputState }

func (InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTime)(nil)).Elem()
}

func (o InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput) ToInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput() InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput {
	return o
}

func (o InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput) ToInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutputWithContext(ctx context.Context) InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput {
	return o
}

// Hours of day in 24 hour format. Should be from 0 to 23.
// An API may choose to allow the value "24:00:00" for scenarios like business closing time.
func (o InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput) Hours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTime) *int { return v.Hours }).(pulumi.IntPtrOutput)
}

// Minutes of hour of day. Must be from 0 to 59.
func (o InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput) Minutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTime) *int { return v.Minutes }).(pulumi.IntPtrOutput)
}

// Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
func (o InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput) Nanos() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTime) *int { return v.Nanos }).(pulumi.IntPtrOutput)
}

// Seconds of minutes of the time. Must normally be from 0 to 59.
// An API may allow the value 60 if it allows leap-seconds.
func (o InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput) Seconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTime) *int { return v.Seconds }).(pulumi.IntPtrOutput)
}

type InstanceMaintenanceSchedule struct {
	// (Output)
	// Output only. The end time of any upcoming scheduled maintenance for this instance.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits.
	EndTime *string `pulumi:"endTime"`
	// (Output)
	// Output only. The deadline that the maintenance schedule start time
	// can not go beyond, including reschedule.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits.
	ScheduleDeadlineTime *string `pulumi:"scheduleDeadlineTime"`
	// (Output)
	// Output only. The start time of any upcoming scheduled maintenance for this instance.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits.
	StartTime *string `pulumi:"startTime"`
}

// InstanceMaintenanceScheduleInput is an input type that accepts InstanceMaintenanceScheduleArgs and InstanceMaintenanceScheduleOutput values.
// You can construct a concrete instance of `InstanceMaintenanceScheduleInput` via:
//
//	InstanceMaintenanceScheduleArgs{...}
type InstanceMaintenanceScheduleInput interface {
	pulumi.Input

	ToInstanceMaintenanceScheduleOutput() InstanceMaintenanceScheduleOutput
	ToInstanceMaintenanceScheduleOutputWithContext(context.Context) InstanceMaintenanceScheduleOutput
}

type InstanceMaintenanceScheduleArgs struct {
	// (Output)
	// Output only. The end time of any upcoming scheduled maintenance for this instance.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits.
	EndTime pulumi.StringPtrInput `pulumi:"endTime"`
	// (Output)
	// Output only. The deadline that the maintenance schedule start time
	// can not go beyond, including reschedule.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits.
	ScheduleDeadlineTime pulumi.StringPtrInput `pulumi:"scheduleDeadlineTime"`
	// (Output)
	// Output only. The start time of any upcoming scheduled maintenance for this instance.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits.
	StartTime pulumi.StringPtrInput `pulumi:"startTime"`
}

func (InstanceMaintenanceScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceMaintenanceSchedule)(nil)).Elem()
}

func (i InstanceMaintenanceScheduleArgs) ToInstanceMaintenanceScheduleOutput() InstanceMaintenanceScheduleOutput {
	return i.ToInstanceMaintenanceScheduleOutputWithContext(context.Background())
}

func (i InstanceMaintenanceScheduleArgs) ToInstanceMaintenanceScheduleOutputWithContext(ctx context.Context) InstanceMaintenanceScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMaintenanceScheduleOutput)
}

// InstanceMaintenanceScheduleArrayInput is an input type that accepts InstanceMaintenanceScheduleArray and InstanceMaintenanceScheduleArrayOutput values.
// You can construct a concrete instance of `InstanceMaintenanceScheduleArrayInput` via:
//
//	InstanceMaintenanceScheduleArray{ InstanceMaintenanceScheduleArgs{...} }
type InstanceMaintenanceScheduleArrayInput interface {
	pulumi.Input

	ToInstanceMaintenanceScheduleArrayOutput() InstanceMaintenanceScheduleArrayOutput
	ToInstanceMaintenanceScheduleArrayOutputWithContext(context.Context) InstanceMaintenanceScheduleArrayOutput
}

type InstanceMaintenanceScheduleArray []InstanceMaintenanceScheduleInput

func (InstanceMaintenanceScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceMaintenanceSchedule)(nil)).Elem()
}

func (i InstanceMaintenanceScheduleArray) ToInstanceMaintenanceScheduleArrayOutput() InstanceMaintenanceScheduleArrayOutput {
	return i.ToInstanceMaintenanceScheduleArrayOutputWithContext(context.Background())
}

func (i InstanceMaintenanceScheduleArray) ToInstanceMaintenanceScheduleArrayOutputWithContext(ctx context.Context) InstanceMaintenanceScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMaintenanceScheduleArrayOutput)
}

type InstanceMaintenanceScheduleOutput struct{ *pulumi.OutputState }

func (InstanceMaintenanceScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceMaintenanceSchedule)(nil)).Elem()
}

func (o InstanceMaintenanceScheduleOutput) ToInstanceMaintenanceScheduleOutput() InstanceMaintenanceScheduleOutput {
	return o
}

func (o InstanceMaintenanceScheduleOutput) ToInstanceMaintenanceScheduleOutputWithContext(ctx context.Context) InstanceMaintenanceScheduleOutput {
	return o
}

// (Output)
// Output only. The end time of any upcoming scheduled maintenance for this instance.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
// resolution and up to nine fractional digits.
func (o InstanceMaintenanceScheduleOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceMaintenanceSchedule) *string { return v.EndTime }).(pulumi.StringPtrOutput)
}

// (Output)
// Output only. The deadline that the maintenance schedule start time
// can not go beyond, including reschedule.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
// resolution and up to nine fractional digits.
func (o InstanceMaintenanceScheduleOutput) ScheduleDeadlineTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceMaintenanceSchedule) *string { return v.ScheduleDeadlineTime }).(pulumi.StringPtrOutput)
}

// (Output)
// Output only. The start time of any upcoming scheduled maintenance for this instance.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
// resolution and up to nine fractional digits.
func (o InstanceMaintenanceScheduleOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceMaintenanceSchedule) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

type InstanceMaintenanceScheduleArrayOutput struct{ *pulumi.OutputState }

func (InstanceMaintenanceScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceMaintenanceSchedule)(nil)).Elem()
}

func (o InstanceMaintenanceScheduleArrayOutput) ToInstanceMaintenanceScheduleArrayOutput() InstanceMaintenanceScheduleArrayOutput {
	return o
}

func (o InstanceMaintenanceScheduleArrayOutput) ToInstanceMaintenanceScheduleArrayOutputWithContext(ctx context.Context) InstanceMaintenanceScheduleArrayOutput {
	return o
}

func (o InstanceMaintenanceScheduleArrayOutput) Index(i pulumi.IntInput) InstanceMaintenanceScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceMaintenanceSchedule {
		return vs[0].([]InstanceMaintenanceSchedule)[vs[1].(int)]
	}).(InstanceMaintenanceScheduleOutput)
}

type InstanceNode struct {
	// (Output)
	// Node identifying string. e.g. 'node-0', 'node-1'
	Id *string `pulumi:"id"`
	// (Output)
	// Location of the node.
	Zone *string `pulumi:"zone"`
}

// InstanceNodeInput is an input type that accepts InstanceNodeArgs and InstanceNodeOutput values.
// You can construct a concrete instance of `InstanceNodeInput` via:
//
//	InstanceNodeArgs{...}
type InstanceNodeInput interface {
	pulumi.Input

	ToInstanceNodeOutput() InstanceNodeOutput
	ToInstanceNodeOutputWithContext(context.Context) InstanceNodeOutput
}

type InstanceNodeArgs struct {
	// (Output)
	// Node identifying string. e.g. 'node-0', 'node-1'
	Id pulumi.StringPtrInput `pulumi:"id"`
	// (Output)
	// Location of the node.
	Zone pulumi.StringPtrInput `pulumi:"zone"`
}

func (InstanceNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceNode)(nil)).Elem()
}

func (i InstanceNodeArgs) ToInstanceNodeOutput() InstanceNodeOutput {
	return i.ToInstanceNodeOutputWithContext(context.Background())
}

func (i InstanceNodeArgs) ToInstanceNodeOutputWithContext(ctx context.Context) InstanceNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceNodeOutput)
}

// InstanceNodeArrayInput is an input type that accepts InstanceNodeArray and InstanceNodeArrayOutput values.
// You can construct a concrete instance of `InstanceNodeArrayInput` via:
//
//	InstanceNodeArray{ InstanceNodeArgs{...} }
type InstanceNodeArrayInput interface {
	pulumi.Input

	ToInstanceNodeArrayOutput() InstanceNodeArrayOutput
	ToInstanceNodeArrayOutputWithContext(context.Context) InstanceNodeArrayOutput
}

type InstanceNodeArray []InstanceNodeInput

func (InstanceNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceNode)(nil)).Elem()
}

func (i InstanceNodeArray) ToInstanceNodeArrayOutput() InstanceNodeArrayOutput {
	return i.ToInstanceNodeArrayOutputWithContext(context.Background())
}

func (i InstanceNodeArray) ToInstanceNodeArrayOutputWithContext(ctx context.Context) InstanceNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceNodeArrayOutput)
}

type InstanceNodeOutput struct{ *pulumi.OutputState }

func (InstanceNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceNode)(nil)).Elem()
}

func (o InstanceNodeOutput) ToInstanceNodeOutput() InstanceNodeOutput {
	return o
}

func (o InstanceNodeOutput) ToInstanceNodeOutputWithContext(ctx context.Context) InstanceNodeOutput {
	return o
}

// (Output)
// Node identifying string. e.g. 'node-0', 'node-1'
func (o InstanceNodeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceNode) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// (Output)
// Location of the node.
func (o InstanceNodeOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceNode) *string { return v.Zone }).(pulumi.StringPtrOutput)
}

type InstanceNodeArrayOutput struct{ *pulumi.OutputState }

func (InstanceNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceNode)(nil)).Elem()
}

func (o InstanceNodeArrayOutput) ToInstanceNodeArrayOutput() InstanceNodeArrayOutput {
	return o
}

func (o InstanceNodeArrayOutput) ToInstanceNodeArrayOutputWithContext(ctx context.Context) InstanceNodeArrayOutput {
	return o
}

func (o InstanceNodeArrayOutput) Index(i pulumi.IntInput) InstanceNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceNode {
		return vs[0].([]InstanceNode)[vs[1].(int)]
	}).(InstanceNodeOutput)
}

type InstancePersistenceConfig struct {
	// Optional. Controls whether Persistence features are enabled. If not provided, the existing value will be used.
	// - DISABLED: 	Persistence is disabled for the instance, and any existing snapshots are deleted.
	// - RDB: RDB based Persistence is enabled.
	//   Possible values are: `DISABLED`, `RDB`.
	PersistenceMode *string `pulumi:"persistenceMode"`
	// (Output)
	// Output only. The next time that a snapshot attempt is scheduled to occur.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up
	// to nine fractional digits.
	// Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	RdbNextSnapshotTime *string `pulumi:"rdbNextSnapshotTime"`
	// Optional. Available snapshot periods for scheduling.
	// - ONE_HOUR:	Snapshot every 1 hour.
	// - SIX_HOURS:	Snapshot every 6 hours.
	// - TWELVE_HOURS:	Snapshot every 12 hours.
	// - TWENTY_FOUR_HOURS:	Snapshot every 24 hours.
	//   Possible values are: `ONE_HOUR`, `SIX_HOURS`, `TWELVE_HOURS`, `TWENTY_FOUR_HOURS`.
	RdbSnapshotPeriod *string `pulumi:"rdbSnapshotPeriod"`
	// Optional. Date and time that the first snapshot was/will be attempted,
	// and to which future snapshots will be aligned. If not provided,
	// the current time will be used.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution
	// and up to nine fractional digits.
	// Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	RdbSnapshotStartTime *string `pulumi:"rdbSnapshotStartTime"`
}

// InstancePersistenceConfigInput is an input type that accepts InstancePersistenceConfigArgs and InstancePersistenceConfigOutput values.
// You can construct a concrete instance of `InstancePersistenceConfigInput` via:
//
//	InstancePersistenceConfigArgs{...}
type InstancePersistenceConfigInput interface {
	pulumi.Input

	ToInstancePersistenceConfigOutput() InstancePersistenceConfigOutput
	ToInstancePersistenceConfigOutputWithContext(context.Context) InstancePersistenceConfigOutput
}

type InstancePersistenceConfigArgs struct {
	// Optional. Controls whether Persistence features are enabled. If not provided, the existing value will be used.
	// - DISABLED: 	Persistence is disabled for the instance, and any existing snapshots are deleted.
	// - RDB: RDB based Persistence is enabled.
	//   Possible values are: `DISABLED`, `RDB`.
	PersistenceMode pulumi.StringPtrInput `pulumi:"persistenceMode"`
	// (Output)
	// Output only. The next time that a snapshot attempt is scheduled to occur.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up
	// to nine fractional digits.
	// Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	RdbNextSnapshotTime pulumi.StringPtrInput `pulumi:"rdbNextSnapshotTime"`
	// Optional. Available snapshot periods for scheduling.
	// - ONE_HOUR:	Snapshot every 1 hour.
	// - SIX_HOURS:	Snapshot every 6 hours.
	// - TWELVE_HOURS:	Snapshot every 12 hours.
	// - TWENTY_FOUR_HOURS:	Snapshot every 24 hours.
	//   Possible values are: `ONE_HOUR`, `SIX_HOURS`, `TWELVE_HOURS`, `TWENTY_FOUR_HOURS`.
	RdbSnapshotPeriod pulumi.StringPtrInput `pulumi:"rdbSnapshotPeriod"`
	// Optional. Date and time that the first snapshot was/will be attempted,
	// and to which future snapshots will be aligned. If not provided,
	// the current time will be used.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution
	// and up to nine fractional digits.
	// Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	RdbSnapshotStartTime pulumi.StringPtrInput `pulumi:"rdbSnapshotStartTime"`
}

func (InstancePersistenceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancePersistenceConfig)(nil)).Elem()
}

func (i InstancePersistenceConfigArgs) ToInstancePersistenceConfigOutput() InstancePersistenceConfigOutput {
	return i.ToInstancePersistenceConfigOutputWithContext(context.Background())
}

func (i InstancePersistenceConfigArgs) ToInstancePersistenceConfigOutputWithContext(ctx context.Context) InstancePersistenceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancePersistenceConfigOutput)
}

func (i InstancePersistenceConfigArgs) ToInstancePersistenceConfigPtrOutput() InstancePersistenceConfigPtrOutput {
	return i.ToInstancePersistenceConfigPtrOutputWithContext(context.Background())
}

func (i InstancePersistenceConfigArgs) ToInstancePersistenceConfigPtrOutputWithContext(ctx context.Context) InstancePersistenceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancePersistenceConfigOutput).ToInstancePersistenceConfigPtrOutputWithContext(ctx)
}

// InstancePersistenceConfigPtrInput is an input type that accepts InstancePersistenceConfigArgs, InstancePersistenceConfigPtr and InstancePersistenceConfigPtrOutput values.
// You can construct a concrete instance of `InstancePersistenceConfigPtrInput` via:
//
//	        InstancePersistenceConfigArgs{...}
//
//	or:
//
//	        nil
type InstancePersistenceConfigPtrInput interface {
	pulumi.Input

	ToInstancePersistenceConfigPtrOutput() InstancePersistenceConfigPtrOutput
	ToInstancePersistenceConfigPtrOutputWithContext(context.Context) InstancePersistenceConfigPtrOutput
}

type instancePersistenceConfigPtrType InstancePersistenceConfigArgs

func InstancePersistenceConfigPtr(v *InstancePersistenceConfigArgs) InstancePersistenceConfigPtrInput {
	return (*instancePersistenceConfigPtrType)(v)
}

func (*instancePersistenceConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstancePersistenceConfig)(nil)).Elem()
}

func (i *instancePersistenceConfigPtrType) ToInstancePersistenceConfigPtrOutput() InstancePersistenceConfigPtrOutput {
	return i.ToInstancePersistenceConfigPtrOutputWithContext(context.Background())
}

func (i *instancePersistenceConfigPtrType) ToInstancePersistenceConfigPtrOutputWithContext(ctx context.Context) InstancePersistenceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancePersistenceConfigPtrOutput)
}

type InstancePersistenceConfigOutput struct{ *pulumi.OutputState }

func (InstancePersistenceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancePersistenceConfig)(nil)).Elem()
}

func (o InstancePersistenceConfigOutput) ToInstancePersistenceConfigOutput() InstancePersistenceConfigOutput {
	return o
}

func (o InstancePersistenceConfigOutput) ToInstancePersistenceConfigOutputWithContext(ctx context.Context) InstancePersistenceConfigOutput {
	return o
}

func (o InstancePersistenceConfigOutput) ToInstancePersistenceConfigPtrOutput() InstancePersistenceConfigPtrOutput {
	return o.ToInstancePersistenceConfigPtrOutputWithContext(context.Background())
}

func (o InstancePersistenceConfigOutput) ToInstancePersistenceConfigPtrOutputWithContext(ctx context.Context) InstancePersistenceConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstancePersistenceConfig) *InstancePersistenceConfig {
		return &v
	}).(InstancePersistenceConfigPtrOutput)
}

// Optional. Controls whether Persistence features are enabled. If not provided, the existing value will be used.
//   - DISABLED: 	Persistence is disabled for the instance, and any existing snapshots are deleted.
//   - RDB: RDB based Persistence is enabled.
//     Possible values are: `DISABLED`, `RDB`.
func (o InstancePersistenceConfigOutput) PersistenceMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstancePersistenceConfig) *string { return v.PersistenceMode }).(pulumi.StringPtrOutput)
}

// (Output)
// Output only. The next time that a snapshot attempt is scheduled to occur.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up
// to nine fractional digits.
// Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
func (o InstancePersistenceConfigOutput) RdbNextSnapshotTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstancePersistenceConfig) *string { return v.RdbNextSnapshotTime }).(pulumi.StringPtrOutput)
}

// Optional. Available snapshot periods for scheduling.
//   - ONE_HOUR:	Snapshot every 1 hour.
//   - SIX_HOURS:	Snapshot every 6 hours.
//   - TWELVE_HOURS:	Snapshot every 12 hours.
//   - TWENTY_FOUR_HOURS:	Snapshot every 24 hours.
//     Possible values are: `ONE_HOUR`, `SIX_HOURS`, `TWELVE_HOURS`, `TWENTY_FOUR_HOURS`.
func (o InstancePersistenceConfigOutput) RdbSnapshotPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstancePersistenceConfig) *string { return v.RdbSnapshotPeriod }).(pulumi.StringPtrOutput)
}

// Optional. Date and time that the first snapshot was/will be attempted,
// and to which future snapshots will be aligned. If not provided,
// the current time will be used.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution
// and up to nine fractional digits.
// Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
func (o InstancePersistenceConfigOutput) RdbSnapshotStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstancePersistenceConfig) *string { return v.RdbSnapshotStartTime }).(pulumi.StringPtrOutput)
}

type InstancePersistenceConfigPtrOutput struct{ *pulumi.OutputState }

func (InstancePersistenceConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstancePersistenceConfig)(nil)).Elem()
}

func (o InstancePersistenceConfigPtrOutput) ToInstancePersistenceConfigPtrOutput() InstancePersistenceConfigPtrOutput {
	return o
}

func (o InstancePersistenceConfigPtrOutput) ToInstancePersistenceConfigPtrOutputWithContext(ctx context.Context) InstancePersistenceConfigPtrOutput {
	return o
}

func (o InstancePersistenceConfigPtrOutput) Elem() InstancePersistenceConfigOutput {
	return o.ApplyT(func(v *InstancePersistenceConfig) InstancePersistenceConfig {
		if v != nil {
			return *v
		}
		var ret InstancePersistenceConfig
		return ret
	}).(InstancePersistenceConfigOutput)
}

// Optional. Controls whether Persistence features are enabled. If not provided, the existing value will be used.
//   - DISABLED: 	Persistence is disabled for the instance, and any existing snapshots are deleted.
//   - RDB: RDB based Persistence is enabled.
//     Possible values are: `DISABLED`, `RDB`.
func (o InstancePersistenceConfigPtrOutput) PersistenceMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstancePersistenceConfig) *string {
		if v == nil {
			return nil
		}
		return v.PersistenceMode
	}).(pulumi.StringPtrOutput)
}

// (Output)
// Output only. The next time that a snapshot attempt is scheduled to occur.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up
// to nine fractional digits.
// Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
func (o InstancePersistenceConfigPtrOutput) RdbNextSnapshotTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstancePersistenceConfig) *string {
		if v == nil {
			return nil
		}
		return v.RdbNextSnapshotTime
	}).(pulumi.StringPtrOutput)
}

// Optional. Available snapshot periods for scheduling.
//   - ONE_HOUR:	Snapshot every 1 hour.
//   - SIX_HOURS:	Snapshot every 6 hours.
//   - TWELVE_HOURS:	Snapshot every 12 hours.
//   - TWENTY_FOUR_HOURS:	Snapshot every 24 hours.
//     Possible values are: `ONE_HOUR`, `SIX_HOURS`, `TWELVE_HOURS`, `TWENTY_FOUR_HOURS`.
func (o InstancePersistenceConfigPtrOutput) RdbSnapshotPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstancePersistenceConfig) *string {
		if v == nil {
			return nil
		}
		return v.RdbSnapshotPeriod
	}).(pulumi.StringPtrOutput)
}

// Optional. Date and time that the first snapshot was/will be attempted,
// and to which future snapshots will be aligned. If not provided,
// the current time will be used.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution
// and up to nine fractional digits.
// Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
func (o InstancePersistenceConfigPtrOutput) RdbSnapshotStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstancePersistenceConfig) *string {
		if v == nil {
			return nil
		}
		return v.RdbSnapshotStartTime
	}).(pulumi.StringPtrOutput)
}

type InstanceServerCaCert struct {
	// (Output)
	// The certificate data in PEM format.
	Cert *string `pulumi:"cert"`
	// (Output)
	// The time when the certificate was created.
	CreateTime *string `pulumi:"createTime"`
	// (Output)
	// The time when the certificate expires.
	ExpireTime *string `pulumi:"expireTime"`
	// (Output)
	// Serial number, as extracted from the certificate.
	SerialNumber *string `pulumi:"serialNumber"`
	// (Output)
	// Sha1 Fingerprint of the certificate.
	Sha1Fingerprint *string `pulumi:"sha1Fingerprint"`
}

// InstanceServerCaCertInput is an input type that accepts InstanceServerCaCertArgs and InstanceServerCaCertOutput values.
// You can construct a concrete instance of `InstanceServerCaCertInput` via:
//
//	InstanceServerCaCertArgs{...}
type InstanceServerCaCertInput interface {
	pulumi.Input

	ToInstanceServerCaCertOutput() InstanceServerCaCertOutput
	ToInstanceServerCaCertOutputWithContext(context.Context) InstanceServerCaCertOutput
}

type InstanceServerCaCertArgs struct {
	// (Output)
	// The certificate data in PEM format.
	Cert pulumi.StringPtrInput `pulumi:"cert"`
	// (Output)
	// The time when the certificate was created.
	CreateTime pulumi.StringPtrInput `pulumi:"createTime"`
	// (Output)
	// The time when the certificate expires.
	ExpireTime pulumi.StringPtrInput `pulumi:"expireTime"`
	// (Output)
	// Serial number, as extracted from the certificate.
	SerialNumber pulumi.StringPtrInput `pulumi:"serialNumber"`
	// (Output)
	// Sha1 Fingerprint of the certificate.
	Sha1Fingerprint pulumi.StringPtrInput `pulumi:"sha1Fingerprint"`
}

func (InstanceServerCaCertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceServerCaCert)(nil)).Elem()
}

func (i InstanceServerCaCertArgs) ToInstanceServerCaCertOutput() InstanceServerCaCertOutput {
	return i.ToInstanceServerCaCertOutputWithContext(context.Background())
}

func (i InstanceServerCaCertArgs) ToInstanceServerCaCertOutputWithContext(ctx context.Context) InstanceServerCaCertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceServerCaCertOutput)
}

// InstanceServerCaCertArrayInput is an input type that accepts InstanceServerCaCertArray and InstanceServerCaCertArrayOutput values.
// You can construct a concrete instance of `InstanceServerCaCertArrayInput` via:
//
//	InstanceServerCaCertArray{ InstanceServerCaCertArgs{...} }
type InstanceServerCaCertArrayInput interface {
	pulumi.Input

	ToInstanceServerCaCertArrayOutput() InstanceServerCaCertArrayOutput
	ToInstanceServerCaCertArrayOutputWithContext(context.Context) InstanceServerCaCertArrayOutput
}

type InstanceServerCaCertArray []InstanceServerCaCertInput

func (InstanceServerCaCertArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceServerCaCert)(nil)).Elem()
}

func (i InstanceServerCaCertArray) ToInstanceServerCaCertArrayOutput() InstanceServerCaCertArrayOutput {
	return i.ToInstanceServerCaCertArrayOutputWithContext(context.Background())
}

func (i InstanceServerCaCertArray) ToInstanceServerCaCertArrayOutputWithContext(ctx context.Context) InstanceServerCaCertArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceServerCaCertArrayOutput)
}

type InstanceServerCaCertOutput struct{ *pulumi.OutputState }

func (InstanceServerCaCertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceServerCaCert)(nil)).Elem()
}

func (o InstanceServerCaCertOutput) ToInstanceServerCaCertOutput() InstanceServerCaCertOutput {
	return o
}

func (o InstanceServerCaCertOutput) ToInstanceServerCaCertOutputWithContext(ctx context.Context) InstanceServerCaCertOutput {
	return o
}

// (Output)
// The certificate data in PEM format.
func (o InstanceServerCaCertOutput) Cert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceServerCaCert) *string { return v.Cert }).(pulumi.StringPtrOutput)
}

// (Output)
// The time when the certificate was created.
func (o InstanceServerCaCertOutput) CreateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceServerCaCert) *string { return v.CreateTime }).(pulumi.StringPtrOutput)
}

// (Output)
// The time when the certificate expires.
func (o InstanceServerCaCertOutput) ExpireTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceServerCaCert) *string { return v.ExpireTime }).(pulumi.StringPtrOutput)
}

// (Output)
// Serial number, as extracted from the certificate.
func (o InstanceServerCaCertOutput) SerialNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceServerCaCert) *string { return v.SerialNumber }).(pulumi.StringPtrOutput)
}

// (Output)
// Sha1 Fingerprint of the certificate.
func (o InstanceServerCaCertOutput) Sha1Fingerprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceServerCaCert) *string { return v.Sha1Fingerprint }).(pulumi.StringPtrOutput)
}

type InstanceServerCaCertArrayOutput struct{ *pulumi.OutputState }

func (InstanceServerCaCertArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceServerCaCert)(nil)).Elem()
}

func (o InstanceServerCaCertArrayOutput) ToInstanceServerCaCertArrayOutput() InstanceServerCaCertArrayOutput {
	return o
}

func (o InstanceServerCaCertArrayOutput) ToInstanceServerCaCertArrayOutputWithContext(ctx context.Context) InstanceServerCaCertArrayOutput {
	return o
}

func (o InstanceServerCaCertArrayOutput) Index(i pulumi.IntInput) InstanceServerCaCertOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceServerCaCert {
		return vs[0].([]InstanceServerCaCert)[vs[1].(int)]
	}).(InstanceServerCaCertOutput)
}

type GetInstanceMaintenancePolicy struct {
	// Output only. The time when the policy was created.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits.
	CreateTime string `pulumi:"createTime"`
	// Optional. Description of what this policy is for.
	// Create/Update methods return INVALID_ARGUMENT if the
	// length is greater than 512.
	Description string `pulumi:"description"`
	// Output only. The time when the policy was last updated.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits.
	UpdateTime string `pulumi:"updateTime"`
	// Optional. Maintenance window that is applied to resources covered by this policy.
	// Minimum 1. For the current version, the maximum number
	// of weeklyWindow is expected to be one.
	WeeklyMaintenanceWindows []GetInstanceMaintenancePolicyWeeklyMaintenanceWindow `pulumi:"weeklyMaintenanceWindows"`
}

// GetInstanceMaintenancePolicyInput is an input type that accepts GetInstanceMaintenancePolicyArgs and GetInstanceMaintenancePolicyOutput values.
// You can construct a concrete instance of `GetInstanceMaintenancePolicyInput` via:
//
//	GetInstanceMaintenancePolicyArgs{...}
type GetInstanceMaintenancePolicyInput interface {
	pulumi.Input

	ToGetInstanceMaintenancePolicyOutput() GetInstanceMaintenancePolicyOutput
	ToGetInstanceMaintenancePolicyOutputWithContext(context.Context) GetInstanceMaintenancePolicyOutput
}

type GetInstanceMaintenancePolicyArgs struct {
	// Output only. The time when the policy was created.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// Optional. Description of what this policy is for.
	// Create/Update methods return INVALID_ARGUMENT if the
	// length is greater than 512.
	Description pulumi.StringInput `pulumi:"description"`
	// Output only. The time when the policy was last updated.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
	// Optional. Maintenance window that is applied to resources covered by this policy.
	// Minimum 1. For the current version, the maximum number
	// of weeklyWindow is expected to be one.
	WeeklyMaintenanceWindows GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayInput `pulumi:"weeklyMaintenanceWindows"`
}

func (GetInstanceMaintenancePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceMaintenancePolicy)(nil)).Elem()
}

func (i GetInstanceMaintenancePolicyArgs) ToGetInstanceMaintenancePolicyOutput() GetInstanceMaintenancePolicyOutput {
	return i.ToGetInstanceMaintenancePolicyOutputWithContext(context.Background())
}

func (i GetInstanceMaintenancePolicyArgs) ToGetInstanceMaintenancePolicyOutputWithContext(ctx context.Context) GetInstanceMaintenancePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceMaintenancePolicyOutput)
}

// GetInstanceMaintenancePolicyArrayInput is an input type that accepts GetInstanceMaintenancePolicyArray and GetInstanceMaintenancePolicyArrayOutput values.
// You can construct a concrete instance of `GetInstanceMaintenancePolicyArrayInput` via:
//
//	GetInstanceMaintenancePolicyArray{ GetInstanceMaintenancePolicyArgs{...} }
type GetInstanceMaintenancePolicyArrayInput interface {
	pulumi.Input

	ToGetInstanceMaintenancePolicyArrayOutput() GetInstanceMaintenancePolicyArrayOutput
	ToGetInstanceMaintenancePolicyArrayOutputWithContext(context.Context) GetInstanceMaintenancePolicyArrayOutput
}

type GetInstanceMaintenancePolicyArray []GetInstanceMaintenancePolicyInput

func (GetInstanceMaintenancePolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceMaintenancePolicy)(nil)).Elem()
}

func (i GetInstanceMaintenancePolicyArray) ToGetInstanceMaintenancePolicyArrayOutput() GetInstanceMaintenancePolicyArrayOutput {
	return i.ToGetInstanceMaintenancePolicyArrayOutputWithContext(context.Background())
}

func (i GetInstanceMaintenancePolicyArray) ToGetInstanceMaintenancePolicyArrayOutputWithContext(ctx context.Context) GetInstanceMaintenancePolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceMaintenancePolicyArrayOutput)
}

type GetInstanceMaintenancePolicyOutput struct{ *pulumi.OutputState }

func (GetInstanceMaintenancePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceMaintenancePolicy)(nil)).Elem()
}

func (o GetInstanceMaintenancePolicyOutput) ToGetInstanceMaintenancePolicyOutput() GetInstanceMaintenancePolicyOutput {
	return o
}

func (o GetInstanceMaintenancePolicyOutput) ToGetInstanceMaintenancePolicyOutputWithContext(ctx context.Context) GetInstanceMaintenancePolicyOutput {
	return o
}

// Output only. The time when the policy was created.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
// resolution and up to nine fractional digits.
func (o GetInstanceMaintenancePolicyOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceMaintenancePolicy) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Optional. Description of what this policy is for.
// Create/Update methods return INVALID_ARGUMENT if the
// length is greater than 512.
func (o GetInstanceMaintenancePolicyOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceMaintenancePolicy) string { return v.Description }).(pulumi.StringOutput)
}

// Output only. The time when the policy was last updated.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
// resolution and up to nine fractional digits.
func (o GetInstanceMaintenancePolicyOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceMaintenancePolicy) string { return v.UpdateTime }).(pulumi.StringOutput)
}

// Optional. Maintenance window that is applied to resources covered by this policy.
// Minimum 1. For the current version, the maximum number
// of weeklyWindow is expected to be one.
func (o GetInstanceMaintenancePolicyOutput) WeeklyMaintenanceWindows() GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput {
	return o.ApplyT(func(v GetInstanceMaintenancePolicy) []GetInstanceMaintenancePolicyWeeklyMaintenanceWindow {
		return v.WeeklyMaintenanceWindows
	}).(GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput)
}

type GetInstanceMaintenancePolicyArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceMaintenancePolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceMaintenancePolicy)(nil)).Elem()
}

func (o GetInstanceMaintenancePolicyArrayOutput) ToGetInstanceMaintenancePolicyArrayOutput() GetInstanceMaintenancePolicyArrayOutput {
	return o
}

func (o GetInstanceMaintenancePolicyArrayOutput) ToGetInstanceMaintenancePolicyArrayOutputWithContext(ctx context.Context) GetInstanceMaintenancePolicyArrayOutput {
	return o
}

func (o GetInstanceMaintenancePolicyArrayOutput) Index(i pulumi.IntInput) GetInstanceMaintenancePolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceMaintenancePolicy {
		return vs[0].([]GetInstanceMaintenancePolicy)[vs[1].(int)]
	}).(GetInstanceMaintenancePolicyOutput)
}

type GetInstanceMaintenancePolicyWeeklyMaintenanceWindow struct {
	// Required. The day of week that maintenance updates occur.
	//
	// - DAY_OF_WEEK_UNSPECIFIED: The day of the week is unspecified.
	// - MONDAY: Monday
	// - TUESDAY: Tuesday
	// - WEDNESDAY: Wednesday
	// - THURSDAY: Thursday
	// - FRIDAY: Friday
	// - SATURDAY: Saturday
	// - SUNDAY: Sunday Possible values: ["DAY_OF_WEEK_UNSPECIFIED", "MONDAY", "TUESDAY", "WEDNESDAY", "THURSDAY", "FRIDAY", "SATURDAY", "SUNDAY"]
	Day string `pulumi:"day"`
	// Output only. Duration of the maintenance window.
	// The current window is fixed at 1 hour.
	// A duration in seconds with up to nine fractional digits,
	// terminated by 's'. Example: "3.5s".
	Duration string `pulumi:"duration"`
	// Required. Start time of the window in UTC time.
	StartTimes []GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTime `pulumi:"startTimes"`
}

// GetInstanceMaintenancePolicyWeeklyMaintenanceWindowInput is an input type that accepts GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArgs and GetInstanceMaintenancePolicyWeeklyMaintenanceWindowOutput values.
// You can construct a concrete instance of `GetInstanceMaintenancePolicyWeeklyMaintenanceWindowInput` via:
//
//	GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArgs{...}
type GetInstanceMaintenancePolicyWeeklyMaintenanceWindowInput interface {
	pulumi.Input

	ToGetInstanceMaintenancePolicyWeeklyMaintenanceWindowOutput() GetInstanceMaintenancePolicyWeeklyMaintenanceWindowOutput
	ToGetInstanceMaintenancePolicyWeeklyMaintenanceWindowOutputWithContext(context.Context) GetInstanceMaintenancePolicyWeeklyMaintenanceWindowOutput
}

type GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArgs struct {
	// Required. The day of week that maintenance updates occur.
	//
	// - DAY_OF_WEEK_UNSPECIFIED: The day of the week is unspecified.
	// - MONDAY: Monday
	// - TUESDAY: Tuesday
	// - WEDNESDAY: Wednesday
	// - THURSDAY: Thursday
	// - FRIDAY: Friday
	// - SATURDAY: Saturday
	// - SUNDAY: Sunday Possible values: ["DAY_OF_WEEK_UNSPECIFIED", "MONDAY", "TUESDAY", "WEDNESDAY", "THURSDAY", "FRIDAY", "SATURDAY", "SUNDAY"]
	Day pulumi.StringInput `pulumi:"day"`
	// Output only. Duration of the maintenance window.
	// The current window is fixed at 1 hour.
	// A duration in seconds with up to nine fractional digits,
	// terminated by 's'. Example: "3.5s".
	Duration pulumi.StringInput `pulumi:"duration"`
	// Required. Start time of the window in UTC time.
	StartTimes GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayInput `pulumi:"startTimes"`
}

func (GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceMaintenancePolicyWeeklyMaintenanceWindow)(nil)).Elem()
}

func (i GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArgs) ToGetInstanceMaintenancePolicyWeeklyMaintenanceWindowOutput() GetInstanceMaintenancePolicyWeeklyMaintenanceWindowOutput {
	return i.ToGetInstanceMaintenancePolicyWeeklyMaintenanceWindowOutputWithContext(context.Background())
}

func (i GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArgs) ToGetInstanceMaintenancePolicyWeeklyMaintenanceWindowOutputWithContext(ctx context.Context) GetInstanceMaintenancePolicyWeeklyMaintenanceWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceMaintenancePolicyWeeklyMaintenanceWindowOutput)
}

// GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayInput is an input type that accepts GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArray and GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput values.
// You can construct a concrete instance of `GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayInput` via:
//
//	GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArray{ GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArgs{...} }
type GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayInput interface {
	pulumi.Input

	ToGetInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput() GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput
	ToGetInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutputWithContext(context.Context) GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput
}

type GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArray []GetInstanceMaintenancePolicyWeeklyMaintenanceWindowInput

func (GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceMaintenancePolicyWeeklyMaintenanceWindow)(nil)).Elem()
}

func (i GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArray) ToGetInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput() GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput {
	return i.ToGetInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutputWithContext(context.Background())
}

func (i GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArray) ToGetInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutputWithContext(ctx context.Context) GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput)
}

type GetInstanceMaintenancePolicyWeeklyMaintenanceWindowOutput struct{ *pulumi.OutputState }

func (GetInstanceMaintenancePolicyWeeklyMaintenanceWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceMaintenancePolicyWeeklyMaintenanceWindow)(nil)).Elem()
}

func (o GetInstanceMaintenancePolicyWeeklyMaintenanceWindowOutput) ToGetInstanceMaintenancePolicyWeeklyMaintenanceWindowOutput() GetInstanceMaintenancePolicyWeeklyMaintenanceWindowOutput {
	return o
}

func (o GetInstanceMaintenancePolicyWeeklyMaintenanceWindowOutput) ToGetInstanceMaintenancePolicyWeeklyMaintenanceWindowOutputWithContext(ctx context.Context) GetInstanceMaintenancePolicyWeeklyMaintenanceWindowOutput {
	return o
}

// Required. The day of week that maintenance updates occur.
//
// - DAY_OF_WEEK_UNSPECIFIED: The day of the week is unspecified.
// - MONDAY: Monday
// - TUESDAY: Tuesday
// - WEDNESDAY: Wednesday
// - THURSDAY: Thursday
// - FRIDAY: Friday
// - SATURDAY: Saturday
// - SUNDAY: Sunday Possible values: ["DAY_OF_WEEK_UNSPECIFIED", "MONDAY", "TUESDAY", "WEDNESDAY", "THURSDAY", "FRIDAY", "SATURDAY", "SUNDAY"]
func (o GetInstanceMaintenancePolicyWeeklyMaintenanceWindowOutput) Day() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceMaintenancePolicyWeeklyMaintenanceWindow) string { return v.Day }).(pulumi.StringOutput)
}

// Output only. Duration of the maintenance window.
// The current window is fixed at 1 hour.
// A duration in seconds with up to nine fractional digits,
// terminated by 's'. Example: "3.5s".
func (o GetInstanceMaintenancePolicyWeeklyMaintenanceWindowOutput) Duration() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceMaintenancePolicyWeeklyMaintenanceWindow) string { return v.Duration }).(pulumi.StringOutput)
}

// Required. Start time of the window in UTC time.
func (o GetInstanceMaintenancePolicyWeeklyMaintenanceWindowOutput) StartTimes() GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutput {
	return o.ApplyT(func(v GetInstanceMaintenancePolicyWeeklyMaintenanceWindow) []GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTime {
		return v.StartTimes
	}).(GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutput)
}

type GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceMaintenancePolicyWeeklyMaintenanceWindow)(nil)).Elem()
}

func (o GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput) ToGetInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput() GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput {
	return o
}

func (o GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput) ToGetInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutputWithContext(ctx context.Context) GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput {
	return o
}

func (o GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput) Index(i pulumi.IntInput) GetInstanceMaintenancePolicyWeeklyMaintenanceWindowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceMaintenancePolicyWeeklyMaintenanceWindow {
		return vs[0].([]GetInstanceMaintenancePolicyWeeklyMaintenanceWindow)[vs[1].(int)]
	}).(GetInstanceMaintenancePolicyWeeklyMaintenanceWindowOutput)
}

type GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTime struct {
	// Hours of day in 24 hour format. Should be from 0 to 23.
	// An API may choose to allow the value "24:00:00" for scenarios like business closing time.
	Hours int `pulumi:"hours"`
	// Minutes of hour of day. Must be from 0 to 59.
	Minutes int `pulumi:"minutes"`
	// Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
	Nanos int `pulumi:"nanos"`
	// Seconds of minutes of the time. Must normally be from 0 to 59.
	// An API may allow the value 60 if it allows leap-seconds.
	Seconds int `pulumi:"seconds"`
}

// GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeInput is an input type that accepts GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArgs and GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput values.
// You can construct a concrete instance of `GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeInput` via:
//
//	GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArgs{...}
type GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeInput interface {
	pulumi.Input

	ToGetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput() GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput
	ToGetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutputWithContext(context.Context) GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput
}

type GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArgs struct {
	// Hours of day in 24 hour format. Should be from 0 to 23.
	// An API may choose to allow the value "24:00:00" for scenarios like business closing time.
	Hours pulumi.IntInput `pulumi:"hours"`
	// Minutes of hour of day. Must be from 0 to 59.
	Minutes pulumi.IntInput `pulumi:"minutes"`
	// Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
	Nanos pulumi.IntInput `pulumi:"nanos"`
	// Seconds of minutes of the time. Must normally be from 0 to 59.
	// An API may allow the value 60 if it allows leap-seconds.
	Seconds pulumi.IntInput `pulumi:"seconds"`
}

func (GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTime)(nil)).Elem()
}

func (i GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArgs) ToGetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput() GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput {
	return i.ToGetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutputWithContext(context.Background())
}

func (i GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArgs) ToGetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutputWithContext(ctx context.Context) GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput)
}

// GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayInput is an input type that accepts GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArray and GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutput values.
// You can construct a concrete instance of `GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayInput` via:
//
//	GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArray{ GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArgs{...} }
type GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayInput interface {
	pulumi.Input

	ToGetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutput() GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutput
	ToGetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutputWithContext(context.Context) GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutput
}

type GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArray []GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeInput

func (GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTime)(nil)).Elem()
}

func (i GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArray) ToGetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutput() GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutput {
	return i.ToGetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutputWithContext(context.Background())
}

func (i GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArray) ToGetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutputWithContext(ctx context.Context) GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutput)
}

type GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput struct{ *pulumi.OutputState }

func (GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTime)(nil)).Elem()
}

func (o GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput) ToGetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput() GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput {
	return o
}

func (o GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput) ToGetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutputWithContext(ctx context.Context) GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput {
	return o
}

// Hours of day in 24 hour format. Should be from 0 to 23.
// An API may choose to allow the value "24:00:00" for scenarios like business closing time.
func (o GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput) Hours() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTime) int { return v.Hours }).(pulumi.IntOutput)
}

// Minutes of hour of day. Must be from 0 to 59.
func (o GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput) Minutes() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTime) int { return v.Minutes }).(pulumi.IntOutput)
}

// Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
func (o GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput) Nanos() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTime) int { return v.Nanos }).(pulumi.IntOutput)
}

// Seconds of minutes of the time. Must normally be from 0 to 59.
// An API may allow the value 60 if it allows leap-seconds.
func (o GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput) Seconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTime) int { return v.Seconds }).(pulumi.IntOutput)
}

type GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTime)(nil)).Elem()
}

func (o GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutput) ToGetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutput() GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutput {
	return o
}

func (o GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutput) ToGetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutputWithContext(ctx context.Context) GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutput {
	return o
}

func (o GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutput) Index(i pulumi.IntInput) GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTime {
		return vs[0].([]GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTime)[vs[1].(int)]
	}).(GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput)
}

type GetInstanceMaintenanceSchedule struct {
	// Output only. The end time of any upcoming scheduled maintenance for this instance.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits.
	EndTime string `pulumi:"endTime"`
	// Output only. The deadline that the maintenance schedule start time
	// can not go beyond, including reschedule.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits.
	ScheduleDeadlineTime string `pulumi:"scheduleDeadlineTime"`
	// Output only. The start time of any upcoming scheduled maintenance for this instance.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits.
	StartTime string `pulumi:"startTime"`
}

// GetInstanceMaintenanceScheduleInput is an input type that accepts GetInstanceMaintenanceScheduleArgs and GetInstanceMaintenanceScheduleOutput values.
// You can construct a concrete instance of `GetInstanceMaintenanceScheduleInput` via:
//
//	GetInstanceMaintenanceScheduleArgs{...}
type GetInstanceMaintenanceScheduleInput interface {
	pulumi.Input

	ToGetInstanceMaintenanceScheduleOutput() GetInstanceMaintenanceScheduleOutput
	ToGetInstanceMaintenanceScheduleOutputWithContext(context.Context) GetInstanceMaintenanceScheduleOutput
}

type GetInstanceMaintenanceScheduleArgs struct {
	// Output only. The end time of any upcoming scheduled maintenance for this instance.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits.
	EndTime pulumi.StringInput `pulumi:"endTime"`
	// Output only. The deadline that the maintenance schedule start time
	// can not go beyond, including reschedule.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits.
	ScheduleDeadlineTime pulumi.StringInput `pulumi:"scheduleDeadlineTime"`
	// Output only. The start time of any upcoming scheduled maintenance for this instance.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits.
	StartTime pulumi.StringInput `pulumi:"startTime"`
}

func (GetInstanceMaintenanceScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceMaintenanceSchedule)(nil)).Elem()
}

func (i GetInstanceMaintenanceScheduleArgs) ToGetInstanceMaintenanceScheduleOutput() GetInstanceMaintenanceScheduleOutput {
	return i.ToGetInstanceMaintenanceScheduleOutputWithContext(context.Background())
}

func (i GetInstanceMaintenanceScheduleArgs) ToGetInstanceMaintenanceScheduleOutputWithContext(ctx context.Context) GetInstanceMaintenanceScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceMaintenanceScheduleOutput)
}

// GetInstanceMaintenanceScheduleArrayInput is an input type that accepts GetInstanceMaintenanceScheduleArray and GetInstanceMaintenanceScheduleArrayOutput values.
// You can construct a concrete instance of `GetInstanceMaintenanceScheduleArrayInput` via:
//
//	GetInstanceMaintenanceScheduleArray{ GetInstanceMaintenanceScheduleArgs{...} }
type GetInstanceMaintenanceScheduleArrayInput interface {
	pulumi.Input

	ToGetInstanceMaintenanceScheduleArrayOutput() GetInstanceMaintenanceScheduleArrayOutput
	ToGetInstanceMaintenanceScheduleArrayOutputWithContext(context.Context) GetInstanceMaintenanceScheduleArrayOutput
}

type GetInstanceMaintenanceScheduleArray []GetInstanceMaintenanceScheduleInput

func (GetInstanceMaintenanceScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceMaintenanceSchedule)(nil)).Elem()
}

func (i GetInstanceMaintenanceScheduleArray) ToGetInstanceMaintenanceScheduleArrayOutput() GetInstanceMaintenanceScheduleArrayOutput {
	return i.ToGetInstanceMaintenanceScheduleArrayOutputWithContext(context.Background())
}

func (i GetInstanceMaintenanceScheduleArray) ToGetInstanceMaintenanceScheduleArrayOutputWithContext(ctx context.Context) GetInstanceMaintenanceScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceMaintenanceScheduleArrayOutput)
}

type GetInstanceMaintenanceScheduleOutput struct{ *pulumi.OutputState }

func (GetInstanceMaintenanceScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceMaintenanceSchedule)(nil)).Elem()
}

func (o GetInstanceMaintenanceScheduleOutput) ToGetInstanceMaintenanceScheduleOutput() GetInstanceMaintenanceScheduleOutput {
	return o
}

func (o GetInstanceMaintenanceScheduleOutput) ToGetInstanceMaintenanceScheduleOutputWithContext(ctx context.Context) GetInstanceMaintenanceScheduleOutput {
	return o
}

// Output only. The end time of any upcoming scheduled maintenance for this instance.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
// resolution and up to nine fractional digits.
func (o GetInstanceMaintenanceScheduleOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceMaintenanceSchedule) string { return v.EndTime }).(pulumi.StringOutput)
}

// Output only. The deadline that the maintenance schedule start time
// can not go beyond, including reschedule.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
// resolution and up to nine fractional digits.
func (o GetInstanceMaintenanceScheduleOutput) ScheduleDeadlineTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceMaintenanceSchedule) string { return v.ScheduleDeadlineTime }).(pulumi.StringOutput)
}

// Output only. The start time of any upcoming scheduled maintenance for this instance.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
// resolution and up to nine fractional digits.
func (o GetInstanceMaintenanceScheduleOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceMaintenanceSchedule) string { return v.StartTime }).(pulumi.StringOutput)
}

type GetInstanceMaintenanceScheduleArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceMaintenanceScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceMaintenanceSchedule)(nil)).Elem()
}

func (o GetInstanceMaintenanceScheduleArrayOutput) ToGetInstanceMaintenanceScheduleArrayOutput() GetInstanceMaintenanceScheduleArrayOutput {
	return o
}

func (o GetInstanceMaintenanceScheduleArrayOutput) ToGetInstanceMaintenanceScheduleArrayOutputWithContext(ctx context.Context) GetInstanceMaintenanceScheduleArrayOutput {
	return o
}

func (o GetInstanceMaintenanceScheduleArrayOutput) Index(i pulumi.IntInput) GetInstanceMaintenanceScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceMaintenanceSchedule {
		return vs[0].([]GetInstanceMaintenanceSchedule)[vs[1].(int)]
	}).(GetInstanceMaintenanceScheduleOutput)
}

type GetInstanceNode struct {
	// Node identifying string. e.g. 'node-0', 'node-1'
	Id string `pulumi:"id"`
	// Location of the node.
	Zone string `pulumi:"zone"`
}

// GetInstanceNodeInput is an input type that accepts GetInstanceNodeArgs and GetInstanceNodeOutput values.
// You can construct a concrete instance of `GetInstanceNodeInput` via:
//
//	GetInstanceNodeArgs{...}
type GetInstanceNodeInput interface {
	pulumi.Input

	ToGetInstanceNodeOutput() GetInstanceNodeOutput
	ToGetInstanceNodeOutputWithContext(context.Context) GetInstanceNodeOutput
}

type GetInstanceNodeArgs struct {
	// Node identifying string. e.g. 'node-0', 'node-1'
	Id pulumi.StringInput `pulumi:"id"`
	// Location of the node.
	Zone pulumi.StringInput `pulumi:"zone"`
}

func (GetInstanceNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceNode)(nil)).Elem()
}

func (i GetInstanceNodeArgs) ToGetInstanceNodeOutput() GetInstanceNodeOutput {
	return i.ToGetInstanceNodeOutputWithContext(context.Background())
}

func (i GetInstanceNodeArgs) ToGetInstanceNodeOutputWithContext(ctx context.Context) GetInstanceNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceNodeOutput)
}

// GetInstanceNodeArrayInput is an input type that accepts GetInstanceNodeArray and GetInstanceNodeArrayOutput values.
// You can construct a concrete instance of `GetInstanceNodeArrayInput` via:
//
//	GetInstanceNodeArray{ GetInstanceNodeArgs{...} }
type GetInstanceNodeArrayInput interface {
	pulumi.Input

	ToGetInstanceNodeArrayOutput() GetInstanceNodeArrayOutput
	ToGetInstanceNodeArrayOutputWithContext(context.Context) GetInstanceNodeArrayOutput
}

type GetInstanceNodeArray []GetInstanceNodeInput

func (GetInstanceNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceNode)(nil)).Elem()
}

func (i GetInstanceNodeArray) ToGetInstanceNodeArrayOutput() GetInstanceNodeArrayOutput {
	return i.ToGetInstanceNodeArrayOutputWithContext(context.Background())
}

func (i GetInstanceNodeArray) ToGetInstanceNodeArrayOutputWithContext(ctx context.Context) GetInstanceNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceNodeArrayOutput)
}

type GetInstanceNodeOutput struct{ *pulumi.OutputState }

func (GetInstanceNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceNode)(nil)).Elem()
}

func (o GetInstanceNodeOutput) ToGetInstanceNodeOutput() GetInstanceNodeOutput {
	return o
}

func (o GetInstanceNodeOutput) ToGetInstanceNodeOutputWithContext(ctx context.Context) GetInstanceNodeOutput {
	return o
}

// Node identifying string. e.g. 'node-0', 'node-1'
func (o GetInstanceNodeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceNode) string { return v.Id }).(pulumi.StringOutput)
}

// Location of the node.
func (o GetInstanceNodeOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceNode) string { return v.Zone }).(pulumi.StringOutput)
}

type GetInstanceNodeArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceNode)(nil)).Elem()
}

func (o GetInstanceNodeArrayOutput) ToGetInstanceNodeArrayOutput() GetInstanceNodeArrayOutput {
	return o
}

func (o GetInstanceNodeArrayOutput) ToGetInstanceNodeArrayOutputWithContext(ctx context.Context) GetInstanceNodeArrayOutput {
	return o
}

func (o GetInstanceNodeArrayOutput) Index(i pulumi.IntInput) GetInstanceNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceNode {
		return vs[0].([]GetInstanceNode)[vs[1].(int)]
	}).(GetInstanceNodeOutput)
}

type GetInstancePersistenceConfig struct {
	// Optional. Controls whether Persistence features are enabled. If not provided, the existing value will be used.
	//
	// - DISABLED: 	Persistence is disabled for the instance, and any existing snapshots are deleted.
	// - RDB: RDB based Persistence is enabled. Possible values: ["DISABLED", "RDB"]
	PersistenceMode string `pulumi:"persistenceMode"`
	// Output only. The next time that a snapshot attempt is scheduled to occur.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up
	// to nine fractional digits.
	// Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	RdbNextSnapshotTime string `pulumi:"rdbNextSnapshotTime"`
	// Optional. Available snapshot periods for scheduling.
	//
	// - ONE_HOUR:	Snapshot every 1 hour.
	// - SIX_HOURS:	Snapshot every 6 hours.
	// - TWELVE_HOURS:	Snapshot every 12 hours.
	// - TWENTY_FOUR_HOURS:	Snapshot every 24 hours. Possible values: ["ONE_HOUR", "SIX_HOURS", "TWELVE_HOURS", "TWENTY_FOUR_HOURS"]
	RdbSnapshotPeriod string `pulumi:"rdbSnapshotPeriod"`
	// Optional. Date and time that the first snapshot was/will be attempted,
	// and to which future snapshots will be aligned. If not provided,
	// the current time will be used.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution
	// and up to nine fractional digits.
	// Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	RdbSnapshotStartTime string `pulumi:"rdbSnapshotStartTime"`
}

// GetInstancePersistenceConfigInput is an input type that accepts GetInstancePersistenceConfigArgs and GetInstancePersistenceConfigOutput values.
// You can construct a concrete instance of `GetInstancePersistenceConfigInput` via:
//
//	GetInstancePersistenceConfigArgs{...}
type GetInstancePersistenceConfigInput interface {
	pulumi.Input

	ToGetInstancePersistenceConfigOutput() GetInstancePersistenceConfigOutput
	ToGetInstancePersistenceConfigOutputWithContext(context.Context) GetInstancePersistenceConfigOutput
}

type GetInstancePersistenceConfigArgs struct {
	// Optional. Controls whether Persistence features are enabled. If not provided, the existing value will be used.
	//
	// - DISABLED: 	Persistence is disabled for the instance, and any existing snapshots are deleted.
	// - RDB: RDB based Persistence is enabled. Possible values: ["DISABLED", "RDB"]
	PersistenceMode pulumi.StringInput `pulumi:"persistenceMode"`
	// Output only. The next time that a snapshot attempt is scheduled to occur.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up
	// to nine fractional digits.
	// Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	RdbNextSnapshotTime pulumi.StringInput `pulumi:"rdbNextSnapshotTime"`
	// Optional. Available snapshot periods for scheduling.
	//
	// - ONE_HOUR:	Snapshot every 1 hour.
	// - SIX_HOURS:	Snapshot every 6 hours.
	// - TWELVE_HOURS:	Snapshot every 12 hours.
	// - TWENTY_FOUR_HOURS:	Snapshot every 24 hours. Possible values: ["ONE_HOUR", "SIX_HOURS", "TWELVE_HOURS", "TWENTY_FOUR_HOURS"]
	RdbSnapshotPeriod pulumi.StringInput `pulumi:"rdbSnapshotPeriod"`
	// Optional. Date and time that the first snapshot was/will be attempted,
	// and to which future snapshots will be aligned. If not provided,
	// the current time will be used.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution
	// and up to nine fractional digits.
	// Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	RdbSnapshotStartTime pulumi.StringInput `pulumi:"rdbSnapshotStartTime"`
}

func (GetInstancePersistenceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancePersistenceConfig)(nil)).Elem()
}

func (i GetInstancePersistenceConfigArgs) ToGetInstancePersistenceConfigOutput() GetInstancePersistenceConfigOutput {
	return i.ToGetInstancePersistenceConfigOutputWithContext(context.Background())
}

func (i GetInstancePersistenceConfigArgs) ToGetInstancePersistenceConfigOutputWithContext(ctx context.Context) GetInstancePersistenceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancePersistenceConfigOutput)
}

// GetInstancePersistenceConfigArrayInput is an input type that accepts GetInstancePersistenceConfigArray and GetInstancePersistenceConfigArrayOutput values.
// You can construct a concrete instance of `GetInstancePersistenceConfigArrayInput` via:
//
//	GetInstancePersistenceConfigArray{ GetInstancePersistenceConfigArgs{...} }
type GetInstancePersistenceConfigArrayInput interface {
	pulumi.Input

	ToGetInstancePersistenceConfigArrayOutput() GetInstancePersistenceConfigArrayOutput
	ToGetInstancePersistenceConfigArrayOutputWithContext(context.Context) GetInstancePersistenceConfigArrayOutput
}

type GetInstancePersistenceConfigArray []GetInstancePersistenceConfigInput

func (GetInstancePersistenceConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancePersistenceConfig)(nil)).Elem()
}

func (i GetInstancePersistenceConfigArray) ToGetInstancePersistenceConfigArrayOutput() GetInstancePersistenceConfigArrayOutput {
	return i.ToGetInstancePersistenceConfigArrayOutputWithContext(context.Background())
}

func (i GetInstancePersistenceConfigArray) ToGetInstancePersistenceConfigArrayOutputWithContext(ctx context.Context) GetInstancePersistenceConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancePersistenceConfigArrayOutput)
}

type GetInstancePersistenceConfigOutput struct{ *pulumi.OutputState }

func (GetInstancePersistenceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancePersistenceConfig)(nil)).Elem()
}

func (o GetInstancePersistenceConfigOutput) ToGetInstancePersistenceConfigOutput() GetInstancePersistenceConfigOutput {
	return o
}

func (o GetInstancePersistenceConfigOutput) ToGetInstancePersistenceConfigOutputWithContext(ctx context.Context) GetInstancePersistenceConfigOutput {
	return o
}

// Optional. Controls whether Persistence features are enabled. If not provided, the existing value will be used.
//
// - DISABLED: 	Persistence is disabled for the instance, and any existing snapshots are deleted.
// - RDB: RDB based Persistence is enabled. Possible values: ["DISABLED", "RDB"]
func (o GetInstancePersistenceConfigOutput) PersistenceMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancePersistenceConfig) string { return v.PersistenceMode }).(pulumi.StringOutput)
}

// Output only. The next time that a snapshot attempt is scheduled to occur.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up
// to nine fractional digits.
// Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
func (o GetInstancePersistenceConfigOutput) RdbNextSnapshotTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancePersistenceConfig) string { return v.RdbNextSnapshotTime }).(pulumi.StringOutput)
}

// Optional. Available snapshot periods for scheduling.
//
// - ONE_HOUR:	Snapshot every 1 hour.
// - SIX_HOURS:	Snapshot every 6 hours.
// - TWELVE_HOURS:	Snapshot every 12 hours.
// - TWENTY_FOUR_HOURS:	Snapshot every 24 hours. Possible values: ["ONE_HOUR", "SIX_HOURS", "TWELVE_HOURS", "TWENTY_FOUR_HOURS"]
func (o GetInstancePersistenceConfigOutput) RdbSnapshotPeriod() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancePersistenceConfig) string { return v.RdbSnapshotPeriod }).(pulumi.StringOutput)
}

// Optional. Date and time that the first snapshot was/will be attempted,
// and to which future snapshots will be aligned. If not provided,
// the current time will be used.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution
// and up to nine fractional digits.
// Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
func (o GetInstancePersistenceConfigOutput) RdbSnapshotStartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancePersistenceConfig) string { return v.RdbSnapshotStartTime }).(pulumi.StringOutput)
}

type GetInstancePersistenceConfigArrayOutput struct{ *pulumi.OutputState }

func (GetInstancePersistenceConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancePersistenceConfig)(nil)).Elem()
}

func (o GetInstancePersistenceConfigArrayOutput) ToGetInstancePersistenceConfigArrayOutput() GetInstancePersistenceConfigArrayOutput {
	return o
}

func (o GetInstancePersistenceConfigArrayOutput) ToGetInstancePersistenceConfigArrayOutputWithContext(ctx context.Context) GetInstancePersistenceConfigArrayOutput {
	return o
}

func (o GetInstancePersistenceConfigArrayOutput) Index(i pulumi.IntInput) GetInstancePersistenceConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancePersistenceConfig {
		return vs[0].([]GetInstancePersistenceConfig)[vs[1].(int)]
	}).(GetInstancePersistenceConfigOutput)
}

type GetInstanceServerCaCert struct {
	// The certificate data in PEM format.
	Cert string `pulumi:"cert"`
	// The time when the certificate was created.
	CreateTime string `pulumi:"createTime"`
	// The time when the certificate expires.
	ExpireTime string `pulumi:"expireTime"`
	// Serial number, as extracted from the certificate.
	SerialNumber string `pulumi:"serialNumber"`
	// Sha1 Fingerprint of the certificate.
	Sha1Fingerprint string `pulumi:"sha1Fingerprint"`
}

// GetInstanceServerCaCertInput is an input type that accepts GetInstanceServerCaCertArgs and GetInstanceServerCaCertOutput values.
// You can construct a concrete instance of `GetInstanceServerCaCertInput` via:
//
//	GetInstanceServerCaCertArgs{...}
type GetInstanceServerCaCertInput interface {
	pulumi.Input

	ToGetInstanceServerCaCertOutput() GetInstanceServerCaCertOutput
	ToGetInstanceServerCaCertOutputWithContext(context.Context) GetInstanceServerCaCertOutput
}

type GetInstanceServerCaCertArgs struct {
	// The certificate data in PEM format.
	Cert pulumi.StringInput `pulumi:"cert"`
	// The time when the certificate was created.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The time when the certificate expires.
	ExpireTime pulumi.StringInput `pulumi:"expireTime"`
	// Serial number, as extracted from the certificate.
	SerialNumber pulumi.StringInput `pulumi:"serialNumber"`
	// Sha1 Fingerprint of the certificate.
	Sha1Fingerprint pulumi.StringInput `pulumi:"sha1Fingerprint"`
}

func (GetInstanceServerCaCertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceServerCaCert)(nil)).Elem()
}

func (i GetInstanceServerCaCertArgs) ToGetInstanceServerCaCertOutput() GetInstanceServerCaCertOutput {
	return i.ToGetInstanceServerCaCertOutputWithContext(context.Background())
}

func (i GetInstanceServerCaCertArgs) ToGetInstanceServerCaCertOutputWithContext(ctx context.Context) GetInstanceServerCaCertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceServerCaCertOutput)
}

// GetInstanceServerCaCertArrayInput is an input type that accepts GetInstanceServerCaCertArray and GetInstanceServerCaCertArrayOutput values.
// You can construct a concrete instance of `GetInstanceServerCaCertArrayInput` via:
//
//	GetInstanceServerCaCertArray{ GetInstanceServerCaCertArgs{...} }
type GetInstanceServerCaCertArrayInput interface {
	pulumi.Input

	ToGetInstanceServerCaCertArrayOutput() GetInstanceServerCaCertArrayOutput
	ToGetInstanceServerCaCertArrayOutputWithContext(context.Context) GetInstanceServerCaCertArrayOutput
}

type GetInstanceServerCaCertArray []GetInstanceServerCaCertInput

func (GetInstanceServerCaCertArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceServerCaCert)(nil)).Elem()
}

func (i GetInstanceServerCaCertArray) ToGetInstanceServerCaCertArrayOutput() GetInstanceServerCaCertArrayOutput {
	return i.ToGetInstanceServerCaCertArrayOutputWithContext(context.Background())
}

func (i GetInstanceServerCaCertArray) ToGetInstanceServerCaCertArrayOutputWithContext(ctx context.Context) GetInstanceServerCaCertArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceServerCaCertArrayOutput)
}

type GetInstanceServerCaCertOutput struct{ *pulumi.OutputState }

func (GetInstanceServerCaCertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceServerCaCert)(nil)).Elem()
}

func (o GetInstanceServerCaCertOutput) ToGetInstanceServerCaCertOutput() GetInstanceServerCaCertOutput {
	return o
}

func (o GetInstanceServerCaCertOutput) ToGetInstanceServerCaCertOutputWithContext(ctx context.Context) GetInstanceServerCaCertOutput {
	return o
}

// The certificate data in PEM format.
func (o GetInstanceServerCaCertOutput) Cert() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceServerCaCert) string { return v.Cert }).(pulumi.StringOutput)
}

// The time when the certificate was created.
func (o GetInstanceServerCaCertOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceServerCaCert) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The time when the certificate expires.
func (o GetInstanceServerCaCertOutput) ExpireTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceServerCaCert) string { return v.ExpireTime }).(pulumi.StringOutput)
}

// Serial number, as extracted from the certificate.
func (o GetInstanceServerCaCertOutput) SerialNumber() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceServerCaCert) string { return v.SerialNumber }).(pulumi.StringOutput)
}

// Sha1 Fingerprint of the certificate.
func (o GetInstanceServerCaCertOutput) Sha1Fingerprint() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceServerCaCert) string { return v.Sha1Fingerprint }).(pulumi.StringOutput)
}

type GetInstanceServerCaCertArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceServerCaCertArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceServerCaCert)(nil)).Elem()
}

func (o GetInstanceServerCaCertArrayOutput) ToGetInstanceServerCaCertArrayOutput() GetInstanceServerCaCertArrayOutput {
	return o
}

func (o GetInstanceServerCaCertArrayOutput) ToGetInstanceServerCaCertArrayOutputWithContext(ctx context.Context) GetInstanceServerCaCertArrayOutput {
	return o
}

func (o GetInstanceServerCaCertArrayOutput) Index(i pulumi.IntInput) GetInstanceServerCaCertOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceServerCaCert {
		return vs[0].([]GetInstanceServerCaCert)[vs[1].(int)]
	}).(GetInstanceServerCaCertOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterCrossClusterReplicationConfigInput)(nil)).Elem(), ClusterCrossClusterReplicationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterCrossClusterReplicationConfigPtrInput)(nil)).Elem(), ClusterCrossClusterReplicationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterCrossClusterReplicationConfigMembershipInput)(nil)).Elem(), ClusterCrossClusterReplicationConfigMembershipArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterCrossClusterReplicationConfigMembershipArrayInput)(nil)).Elem(), ClusterCrossClusterReplicationConfigMembershipArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterCrossClusterReplicationConfigMembershipPrimaryClusterInput)(nil)).Elem(), ClusterCrossClusterReplicationConfigMembershipPrimaryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterCrossClusterReplicationConfigMembershipPrimaryClusterArrayInput)(nil)).Elem(), ClusterCrossClusterReplicationConfigMembershipPrimaryClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterCrossClusterReplicationConfigMembershipSecondaryClusterInput)(nil)).Elem(), ClusterCrossClusterReplicationConfigMembershipSecondaryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterCrossClusterReplicationConfigMembershipSecondaryClusterArrayInput)(nil)).Elem(), ClusterCrossClusterReplicationConfigMembershipSecondaryClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterCrossClusterReplicationConfigPrimaryClusterInput)(nil)).Elem(), ClusterCrossClusterReplicationConfigPrimaryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterCrossClusterReplicationConfigPrimaryClusterPtrInput)(nil)).Elem(), ClusterCrossClusterReplicationConfigPrimaryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterCrossClusterReplicationConfigSecondaryClusterInput)(nil)).Elem(), ClusterCrossClusterReplicationConfigSecondaryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterCrossClusterReplicationConfigSecondaryClusterArrayInput)(nil)).Elem(), ClusterCrossClusterReplicationConfigSecondaryClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterDiscoveryEndpointInput)(nil)).Elem(), ClusterDiscoveryEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterDiscoveryEndpointArrayInput)(nil)).Elem(), ClusterDiscoveryEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterDiscoveryEndpointPscConfigInput)(nil)).Elem(), ClusterDiscoveryEndpointPscConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterDiscoveryEndpointPscConfigPtrInput)(nil)).Elem(), ClusterDiscoveryEndpointPscConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterMaintenancePolicyInput)(nil)).Elem(), ClusterMaintenancePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterMaintenancePolicyPtrInput)(nil)).Elem(), ClusterMaintenancePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterMaintenancePolicyWeeklyMaintenanceWindowInput)(nil)).Elem(), ClusterMaintenancePolicyWeeklyMaintenanceWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterMaintenancePolicyWeeklyMaintenanceWindowArrayInput)(nil)).Elem(), ClusterMaintenancePolicyWeeklyMaintenanceWindowArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeInput)(nil)).Elem(), ClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterMaintenanceScheduleInput)(nil)).Elem(), ClusterMaintenanceScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterMaintenanceScheduleArrayInput)(nil)).Elem(), ClusterMaintenanceScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterPersistenceConfigInput)(nil)).Elem(), ClusterPersistenceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterPersistenceConfigPtrInput)(nil)).Elem(), ClusterPersistenceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterPersistenceConfigAofConfigInput)(nil)).Elem(), ClusterPersistenceConfigAofConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterPersistenceConfigAofConfigPtrInput)(nil)).Elem(), ClusterPersistenceConfigAofConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterPersistenceConfigRdbConfigInput)(nil)).Elem(), ClusterPersistenceConfigRdbConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterPersistenceConfigRdbConfigPtrInput)(nil)).Elem(), ClusterPersistenceConfigRdbConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterPscConfigInput)(nil)).Elem(), ClusterPscConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterPscConfigArrayInput)(nil)).Elem(), ClusterPscConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterPscConnectionInput)(nil)).Elem(), ClusterPscConnectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterPscConnectionArrayInput)(nil)).Elem(), ClusterPscConnectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterPscServiceAttachmentInput)(nil)).Elem(), ClusterPscServiceAttachmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterPscServiceAttachmentArrayInput)(nil)).Elem(), ClusterPscServiceAttachmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterStateInfoInput)(nil)).Elem(), ClusterStateInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterStateInfoArrayInput)(nil)).Elem(), ClusterStateInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterStateInfoUpdateInfoInput)(nil)).Elem(), ClusterStateInfoUpdateInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterStateInfoUpdateInfoPtrInput)(nil)).Elem(), ClusterStateInfoUpdateInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterUserCreatedConnectionsClusterEndpointInput)(nil)).Elem(), ClusterUserCreatedConnectionsClusterEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterUserCreatedConnectionsClusterEndpointArrayInput)(nil)).Elem(), ClusterUserCreatedConnectionsClusterEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterUserCreatedConnectionsClusterEndpointConnectionInput)(nil)).Elem(), ClusterUserCreatedConnectionsClusterEndpointConnectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterUserCreatedConnectionsClusterEndpointConnectionArrayInput)(nil)).Elem(), ClusterUserCreatedConnectionsClusterEndpointConnectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionInput)(nil)).Elem(), ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrInput)(nil)).Elem(), ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterZoneDistributionConfigInput)(nil)).Elem(), ClusterZoneDistributionConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterZoneDistributionConfigPtrInput)(nil)).Elem(), ClusterZoneDistributionConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceMaintenancePolicyInput)(nil)).Elem(), InstanceMaintenancePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceMaintenancePolicyPtrInput)(nil)).Elem(), InstanceMaintenancePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceMaintenancePolicyWeeklyMaintenanceWindowInput)(nil)).Elem(), InstanceMaintenancePolicyWeeklyMaintenanceWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceMaintenancePolicyWeeklyMaintenanceWindowArrayInput)(nil)).Elem(), InstanceMaintenancePolicyWeeklyMaintenanceWindowArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeInput)(nil)).Elem(), InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceMaintenanceScheduleInput)(nil)).Elem(), InstanceMaintenanceScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceMaintenanceScheduleArrayInput)(nil)).Elem(), InstanceMaintenanceScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceNodeInput)(nil)).Elem(), InstanceNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceNodeArrayInput)(nil)).Elem(), InstanceNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancePersistenceConfigInput)(nil)).Elem(), InstancePersistenceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancePersistenceConfigPtrInput)(nil)).Elem(), InstancePersistenceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceServerCaCertInput)(nil)).Elem(), InstanceServerCaCertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceServerCaCertArrayInput)(nil)).Elem(), InstanceServerCaCertArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceMaintenancePolicyInput)(nil)).Elem(), GetInstanceMaintenancePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceMaintenancePolicyArrayInput)(nil)).Elem(), GetInstanceMaintenancePolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceMaintenancePolicyWeeklyMaintenanceWindowInput)(nil)).Elem(), GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayInput)(nil)).Elem(), GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeInput)(nil)).Elem(), GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayInput)(nil)).Elem(), GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceMaintenanceScheduleInput)(nil)).Elem(), GetInstanceMaintenanceScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceMaintenanceScheduleArrayInput)(nil)).Elem(), GetInstanceMaintenanceScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceNodeInput)(nil)).Elem(), GetInstanceNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceNodeArrayInput)(nil)).Elem(), GetInstanceNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancePersistenceConfigInput)(nil)).Elem(), GetInstancePersistenceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancePersistenceConfigArrayInput)(nil)).Elem(), GetInstancePersistenceConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceServerCaCertInput)(nil)).Elem(), GetInstanceServerCaCertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceServerCaCertArrayInput)(nil)).Elem(), GetInstanceServerCaCertArray{})
	pulumi.RegisterOutputType(ClusterCrossClusterReplicationConfigOutput{})
	pulumi.RegisterOutputType(ClusterCrossClusterReplicationConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterCrossClusterReplicationConfigMembershipOutput{})
	pulumi.RegisterOutputType(ClusterCrossClusterReplicationConfigMembershipArrayOutput{})
	pulumi.RegisterOutputType(ClusterCrossClusterReplicationConfigMembershipPrimaryClusterOutput{})
	pulumi.RegisterOutputType(ClusterCrossClusterReplicationConfigMembershipPrimaryClusterArrayOutput{})
	pulumi.RegisterOutputType(ClusterCrossClusterReplicationConfigMembershipSecondaryClusterOutput{})
	pulumi.RegisterOutputType(ClusterCrossClusterReplicationConfigMembershipSecondaryClusterArrayOutput{})
	pulumi.RegisterOutputType(ClusterCrossClusterReplicationConfigPrimaryClusterOutput{})
	pulumi.RegisterOutputType(ClusterCrossClusterReplicationConfigPrimaryClusterPtrOutput{})
	pulumi.RegisterOutputType(ClusterCrossClusterReplicationConfigSecondaryClusterOutput{})
	pulumi.RegisterOutputType(ClusterCrossClusterReplicationConfigSecondaryClusterArrayOutput{})
	pulumi.RegisterOutputType(ClusterDiscoveryEndpointOutput{})
	pulumi.RegisterOutputType(ClusterDiscoveryEndpointArrayOutput{})
	pulumi.RegisterOutputType(ClusterDiscoveryEndpointPscConfigOutput{})
	pulumi.RegisterOutputType(ClusterDiscoveryEndpointPscConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterMaintenancePolicyOutput{})
	pulumi.RegisterOutputType(ClusterMaintenancePolicyPtrOutput{})
	pulumi.RegisterOutputType(ClusterMaintenancePolicyWeeklyMaintenanceWindowOutput{})
	pulumi.RegisterOutputType(ClusterMaintenancePolicyWeeklyMaintenanceWindowArrayOutput{})
	pulumi.RegisterOutputType(ClusterMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput{})
	pulumi.RegisterOutputType(ClusterMaintenanceScheduleOutput{})
	pulumi.RegisterOutputType(ClusterMaintenanceScheduleArrayOutput{})
	pulumi.RegisterOutputType(ClusterPersistenceConfigOutput{})
	pulumi.RegisterOutputType(ClusterPersistenceConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterPersistenceConfigAofConfigOutput{})
	pulumi.RegisterOutputType(ClusterPersistenceConfigAofConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterPersistenceConfigRdbConfigOutput{})
	pulumi.RegisterOutputType(ClusterPersistenceConfigRdbConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterPscConfigOutput{})
	pulumi.RegisterOutputType(ClusterPscConfigArrayOutput{})
	pulumi.RegisterOutputType(ClusterPscConnectionOutput{})
	pulumi.RegisterOutputType(ClusterPscConnectionArrayOutput{})
	pulumi.RegisterOutputType(ClusterPscServiceAttachmentOutput{})
	pulumi.RegisterOutputType(ClusterPscServiceAttachmentArrayOutput{})
	pulumi.RegisterOutputType(ClusterStateInfoOutput{})
	pulumi.RegisterOutputType(ClusterStateInfoArrayOutput{})
	pulumi.RegisterOutputType(ClusterStateInfoUpdateInfoOutput{})
	pulumi.RegisterOutputType(ClusterStateInfoUpdateInfoPtrOutput{})
	pulumi.RegisterOutputType(ClusterUserCreatedConnectionsClusterEndpointOutput{})
	pulumi.RegisterOutputType(ClusterUserCreatedConnectionsClusterEndpointArrayOutput{})
	pulumi.RegisterOutputType(ClusterUserCreatedConnectionsClusterEndpointConnectionOutput{})
	pulumi.RegisterOutputType(ClusterUserCreatedConnectionsClusterEndpointConnectionArrayOutput{})
	pulumi.RegisterOutputType(ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionOutput{})
	pulumi.RegisterOutputType(ClusterUserCreatedConnectionsClusterEndpointConnectionPscConnectionPtrOutput{})
	pulumi.RegisterOutputType(ClusterZoneDistributionConfigOutput{})
	pulumi.RegisterOutputType(ClusterZoneDistributionConfigPtrOutput{})
	pulumi.RegisterOutputType(InstanceMaintenancePolicyOutput{})
	pulumi.RegisterOutputType(InstanceMaintenancePolicyPtrOutput{})
	pulumi.RegisterOutputType(InstanceMaintenancePolicyWeeklyMaintenanceWindowOutput{})
	pulumi.RegisterOutputType(InstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput{})
	pulumi.RegisterOutputType(InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput{})
	pulumi.RegisterOutputType(InstanceMaintenanceScheduleOutput{})
	pulumi.RegisterOutputType(InstanceMaintenanceScheduleArrayOutput{})
	pulumi.RegisterOutputType(InstanceNodeOutput{})
	pulumi.RegisterOutputType(InstanceNodeArrayOutput{})
	pulumi.RegisterOutputType(InstancePersistenceConfigOutput{})
	pulumi.RegisterOutputType(InstancePersistenceConfigPtrOutput{})
	pulumi.RegisterOutputType(InstanceServerCaCertOutput{})
	pulumi.RegisterOutputType(InstanceServerCaCertArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceMaintenancePolicyOutput{})
	pulumi.RegisterOutputType(GetInstanceMaintenancePolicyArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceMaintenancePolicyWeeklyMaintenanceWindowOutput{})
	pulumi.RegisterOutputType(GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput{})
	pulumi.RegisterOutputType(GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceMaintenanceScheduleOutput{})
	pulumi.RegisterOutputType(GetInstanceMaintenanceScheduleArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceNodeOutput{})
	pulumi.RegisterOutputType(GetInstanceNodeArrayOutput{})
	pulumi.RegisterOutputType(GetInstancePersistenceConfigOutput{})
	pulumi.RegisterOutputType(GetInstancePersistenceConfigArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceServerCaCertOutput{})
	pulumi.RegisterOutputType(GetInstanceServerCaCertArrayOutput{})
}
