// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package redis

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type InstanceMaintenancePolicy struct {
	// Output only. The time when the policy was created.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits.
	CreateTime *string `pulumi:"createTime"`
	// Optional. Description of what this policy is for.
	// Create/Update methods return INVALID_ARGUMENT if the
	// length is greater than 512.
	Description *string `pulumi:"description"`
	// Output only. The time when the policy was last updated.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits.
	UpdateTime *string `pulumi:"updateTime"`
	// Optional. Maintenance window that is applied to resources covered by this policy.
	// Minimum 1. For the current version, the maximum number
	// of weeklyWindow is expected to be one.
	// Structure is documented below.
	WeeklyMaintenanceWindows []InstanceMaintenancePolicyWeeklyMaintenanceWindow `pulumi:"weeklyMaintenanceWindows"`
}

// InstanceMaintenancePolicyInput is an input type that accepts InstanceMaintenancePolicyArgs and InstanceMaintenancePolicyOutput values.
// You can construct a concrete instance of `InstanceMaintenancePolicyInput` via:
//
//	InstanceMaintenancePolicyArgs{...}
type InstanceMaintenancePolicyInput interface {
	pulumi.Input

	ToInstanceMaintenancePolicyOutput() InstanceMaintenancePolicyOutput
	ToInstanceMaintenancePolicyOutputWithContext(context.Context) InstanceMaintenancePolicyOutput
}

type InstanceMaintenancePolicyArgs struct {
	// Output only. The time when the policy was created.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits.
	CreateTime pulumi.StringPtrInput `pulumi:"createTime"`
	// Optional. Description of what this policy is for.
	// Create/Update methods return INVALID_ARGUMENT if the
	// length is greater than 512.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Output only. The time when the policy was last updated.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits.
	UpdateTime pulumi.StringPtrInput `pulumi:"updateTime"`
	// Optional. Maintenance window that is applied to resources covered by this policy.
	// Minimum 1. For the current version, the maximum number
	// of weeklyWindow is expected to be one.
	// Structure is documented below.
	WeeklyMaintenanceWindows InstanceMaintenancePolicyWeeklyMaintenanceWindowArrayInput `pulumi:"weeklyMaintenanceWindows"`
}

func (InstanceMaintenancePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceMaintenancePolicy)(nil)).Elem()
}

func (i InstanceMaintenancePolicyArgs) ToInstanceMaintenancePolicyOutput() InstanceMaintenancePolicyOutput {
	return i.ToInstanceMaintenancePolicyOutputWithContext(context.Background())
}

func (i InstanceMaintenancePolicyArgs) ToInstanceMaintenancePolicyOutputWithContext(ctx context.Context) InstanceMaintenancePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMaintenancePolicyOutput)
}

func (i InstanceMaintenancePolicyArgs) ToInstanceMaintenancePolicyPtrOutput() InstanceMaintenancePolicyPtrOutput {
	return i.ToInstanceMaintenancePolicyPtrOutputWithContext(context.Background())
}

func (i InstanceMaintenancePolicyArgs) ToInstanceMaintenancePolicyPtrOutputWithContext(ctx context.Context) InstanceMaintenancePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMaintenancePolicyOutput).ToInstanceMaintenancePolicyPtrOutputWithContext(ctx)
}

// InstanceMaintenancePolicyPtrInput is an input type that accepts InstanceMaintenancePolicyArgs, InstanceMaintenancePolicyPtr and InstanceMaintenancePolicyPtrOutput values.
// You can construct a concrete instance of `InstanceMaintenancePolicyPtrInput` via:
//
//	        InstanceMaintenancePolicyArgs{...}
//
//	or:
//
//	        nil
type InstanceMaintenancePolicyPtrInput interface {
	pulumi.Input

	ToInstanceMaintenancePolicyPtrOutput() InstanceMaintenancePolicyPtrOutput
	ToInstanceMaintenancePolicyPtrOutputWithContext(context.Context) InstanceMaintenancePolicyPtrOutput
}

type instanceMaintenancePolicyPtrType InstanceMaintenancePolicyArgs

func InstanceMaintenancePolicyPtr(v *InstanceMaintenancePolicyArgs) InstanceMaintenancePolicyPtrInput {
	return (*instanceMaintenancePolicyPtrType)(v)
}

func (*instanceMaintenancePolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceMaintenancePolicy)(nil)).Elem()
}

func (i *instanceMaintenancePolicyPtrType) ToInstanceMaintenancePolicyPtrOutput() InstanceMaintenancePolicyPtrOutput {
	return i.ToInstanceMaintenancePolicyPtrOutputWithContext(context.Background())
}

func (i *instanceMaintenancePolicyPtrType) ToInstanceMaintenancePolicyPtrOutputWithContext(ctx context.Context) InstanceMaintenancePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMaintenancePolicyPtrOutput)
}

type InstanceMaintenancePolicyOutput struct{ *pulumi.OutputState }

func (InstanceMaintenancePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceMaintenancePolicy)(nil)).Elem()
}

func (o InstanceMaintenancePolicyOutput) ToInstanceMaintenancePolicyOutput() InstanceMaintenancePolicyOutput {
	return o
}

func (o InstanceMaintenancePolicyOutput) ToInstanceMaintenancePolicyOutputWithContext(ctx context.Context) InstanceMaintenancePolicyOutput {
	return o
}

func (o InstanceMaintenancePolicyOutput) ToInstanceMaintenancePolicyPtrOutput() InstanceMaintenancePolicyPtrOutput {
	return o.ToInstanceMaintenancePolicyPtrOutputWithContext(context.Background())
}

func (o InstanceMaintenancePolicyOutput) ToInstanceMaintenancePolicyPtrOutputWithContext(ctx context.Context) InstanceMaintenancePolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceMaintenancePolicy) *InstanceMaintenancePolicy {
		return &v
	}).(InstanceMaintenancePolicyPtrOutput)
}

// Output only. The time when the policy was created.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
// resolution and up to nine fractional digits.
func (o InstanceMaintenancePolicyOutput) CreateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceMaintenancePolicy) *string { return v.CreateTime }).(pulumi.StringPtrOutput)
}

// Optional. Description of what this policy is for.
// Create/Update methods return INVALID_ARGUMENT if the
// length is greater than 512.
func (o InstanceMaintenancePolicyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceMaintenancePolicy) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Output only. The time when the policy was last updated.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
// resolution and up to nine fractional digits.
func (o InstanceMaintenancePolicyOutput) UpdateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceMaintenancePolicy) *string { return v.UpdateTime }).(pulumi.StringPtrOutput)
}

// Optional. Maintenance window that is applied to resources covered by this policy.
// Minimum 1. For the current version, the maximum number
// of weeklyWindow is expected to be one.
// Structure is documented below.
func (o InstanceMaintenancePolicyOutput) WeeklyMaintenanceWindows() InstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput {
	return o.ApplyT(func(v InstanceMaintenancePolicy) []InstanceMaintenancePolicyWeeklyMaintenanceWindow {
		return v.WeeklyMaintenanceWindows
	}).(InstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput)
}

type InstanceMaintenancePolicyPtrOutput struct{ *pulumi.OutputState }

func (InstanceMaintenancePolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceMaintenancePolicy)(nil)).Elem()
}

func (o InstanceMaintenancePolicyPtrOutput) ToInstanceMaintenancePolicyPtrOutput() InstanceMaintenancePolicyPtrOutput {
	return o
}

func (o InstanceMaintenancePolicyPtrOutput) ToInstanceMaintenancePolicyPtrOutputWithContext(ctx context.Context) InstanceMaintenancePolicyPtrOutput {
	return o
}

func (o InstanceMaintenancePolicyPtrOutput) Elem() InstanceMaintenancePolicyOutput {
	return o.ApplyT(func(v *InstanceMaintenancePolicy) InstanceMaintenancePolicy {
		if v != nil {
			return *v
		}
		var ret InstanceMaintenancePolicy
		return ret
	}).(InstanceMaintenancePolicyOutput)
}

// Output only. The time when the policy was created.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
// resolution and up to nine fractional digits.
func (o InstanceMaintenancePolicyPtrOutput) CreateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceMaintenancePolicy) *string {
		if v == nil {
			return nil
		}
		return v.CreateTime
	}).(pulumi.StringPtrOutput)
}

// Optional. Description of what this policy is for.
// Create/Update methods return INVALID_ARGUMENT if the
// length is greater than 512.
func (o InstanceMaintenancePolicyPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceMaintenancePolicy) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Output only. The time when the policy was last updated.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
// resolution and up to nine fractional digits.
func (o InstanceMaintenancePolicyPtrOutput) UpdateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceMaintenancePolicy) *string {
		if v == nil {
			return nil
		}
		return v.UpdateTime
	}).(pulumi.StringPtrOutput)
}

// Optional. Maintenance window that is applied to resources covered by this policy.
// Minimum 1. For the current version, the maximum number
// of weeklyWindow is expected to be one.
// Structure is documented below.
func (o InstanceMaintenancePolicyPtrOutput) WeeklyMaintenanceWindows() InstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput {
	return o.ApplyT(func(v *InstanceMaintenancePolicy) []InstanceMaintenancePolicyWeeklyMaintenanceWindow {
		if v == nil {
			return nil
		}
		return v.WeeklyMaintenanceWindows
	}).(InstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput)
}

type InstanceMaintenancePolicyWeeklyMaintenanceWindow struct {
	// Required. The day of week that maintenance updates occur.
	// - DAY_OF_WEEK_UNSPECIFIED: The day of the week is unspecified.
	// - MONDAY: Monday
	// - TUESDAY: Tuesday
	// - WEDNESDAY: Wednesday
	// - THURSDAY: Thursday
	// - FRIDAY: Friday
	// - SATURDAY: Saturday
	// - SUNDAY: Sunday
	//   Possible values are `DAY_OF_WEEK_UNSPECIFIED`, `MONDAY`, `TUESDAY`, `WEDNESDAY`, `THURSDAY`, `FRIDAY`, `SATURDAY`, and `SUNDAY`.
	Day string `pulumi:"day"`
	// Output only. Duration of the maintenance window.
	// The current window is fixed at 1 hour.
	// A duration in seconds with up to nine fractional digits,
	// terminated by 's'. Example: "3.5s".
	Duration *string `pulumi:"duration"`
	// Required. Start time of the window in UTC time.
	// Structure is documented below.
	StartTime InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTime `pulumi:"startTime"`
}

// InstanceMaintenancePolicyWeeklyMaintenanceWindowInput is an input type that accepts InstanceMaintenancePolicyWeeklyMaintenanceWindowArgs and InstanceMaintenancePolicyWeeklyMaintenanceWindowOutput values.
// You can construct a concrete instance of `InstanceMaintenancePolicyWeeklyMaintenanceWindowInput` via:
//
//	InstanceMaintenancePolicyWeeklyMaintenanceWindowArgs{...}
type InstanceMaintenancePolicyWeeklyMaintenanceWindowInput interface {
	pulumi.Input

	ToInstanceMaintenancePolicyWeeklyMaintenanceWindowOutput() InstanceMaintenancePolicyWeeklyMaintenanceWindowOutput
	ToInstanceMaintenancePolicyWeeklyMaintenanceWindowOutputWithContext(context.Context) InstanceMaintenancePolicyWeeklyMaintenanceWindowOutput
}

type InstanceMaintenancePolicyWeeklyMaintenanceWindowArgs struct {
	// Required. The day of week that maintenance updates occur.
	// - DAY_OF_WEEK_UNSPECIFIED: The day of the week is unspecified.
	// - MONDAY: Monday
	// - TUESDAY: Tuesday
	// - WEDNESDAY: Wednesday
	// - THURSDAY: Thursday
	// - FRIDAY: Friday
	// - SATURDAY: Saturday
	// - SUNDAY: Sunday
	//   Possible values are `DAY_OF_WEEK_UNSPECIFIED`, `MONDAY`, `TUESDAY`, `WEDNESDAY`, `THURSDAY`, `FRIDAY`, `SATURDAY`, and `SUNDAY`.
	Day pulumi.StringInput `pulumi:"day"`
	// Output only. Duration of the maintenance window.
	// The current window is fixed at 1 hour.
	// A duration in seconds with up to nine fractional digits,
	// terminated by 's'. Example: "3.5s".
	Duration pulumi.StringPtrInput `pulumi:"duration"`
	// Required. Start time of the window in UTC time.
	// Structure is documented below.
	StartTime InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeInput `pulumi:"startTime"`
}

func (InstanceMaintenancePolicyWeeklyMaintenanceWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceMaintenancePolicyWeeklyMaintenanceWindow)(nil)).Elem()
}

func (i InstanceMaintenancePolicyWeeklyMaintenanceWindowArgs) ToInstanceMaintenancePolicyWeeklyMaintenanceWindowOutput() InstanceMaintenancePolicyWeeklyMaintenanceWindowOutput {
	return i.ToInstanceMaintenancePolicyWeeklyMaintenanceWindowOutputWithContext(context.Background())
}

func (i InstanceMaintenancePolicyWeeklyMaintenanceWindowArgs) ToInstanceMaintenancePolicyWeeklyMaintenanceWindowOutputWithContext(ctx context.Context) InstanceMaintenancePolicyWeeklyMaintenanceWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMaintenancePolicyWeeklyMaintenanceWindowOutput)
}

// InstanceMaintenancePolicyWeeklyMaintenanceWindowArrayInput is an input type that accepts InstanceMaintenancePolicyWeeklyMaintenanceWindowArray and InstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput values.
// You can construct a concrete instance of `InstanceMaintenancePolicyWeeklyMaintenanceWindowArrayInput` via:
//
//	InstanceMaintenancePolicyWeeklyMaintenanceWindowArray{ InstanceMaintenancePolicyWeeklyMaintenanceWindowArgs{...} }
type InstanceMaintenancePolicyWeeklyMaintenanceWindowArrayInput interface {
	pulumi.Input

	ToInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput() InstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput
	ToInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutputWithContext(context.Context) InstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput
}

type InstanceMaintenancePolicyWeeklyMaintenanceWindowArray []InstanceMaintenancePolicyWeeklyMaintenanceWindowInput

func (InstanceMaintenancePolicyWeeklyMaintenanceWindowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceMaintenancePolicyWeeklyMaintenanceWindow)(nil)).Elem()
}

func (i InstanceMaintenancePolicyWeeklyMaintenanceWindowArray) ToInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput() InstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput {
	return i.ToInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutputWithContext(context.Background())
}

func (i InstanceMaintenancePolicyWeeklyMaintenanceWindowArray) ToInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutputWithContext(ctx context.Context) InstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput)
}

type InstanceMaintenancePolicyWeeklyMaintenanceWindowOutput struct{ *pulumi.OutputState }

func (InstanceMaintenancePolicyWeeklyMaintenanceWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceMaintenancePolicyWeeklyMaintenanceWindow)(nil)).Elem()
}

func (o InstanceMaintenancePolicyWeeklyMaintenanceWindowOutput) ToInstanceMaintenancePolicyWeeklyMaintenanceWindowOutput() InstanceMaintenancePolicyWeeklyMaintenanceWindowOutput {
	return o
}

func (o InstanceMaintenancePolicyWeeklyMaintenanceWindowOutput) ToInstanceMaintenancePolicyWeeklyMaintenanceWindowOutputWithContext(ctx context.Context) InstanceMaintenancePolicyWeeklyMaintenanceWindowOutput {
	return o
}

// Required. The day of week that maintenance updates occur.
//   - DAY_OF_WEEK_UNSPECIFIED: The day of the week is unspecified.
//   - MONDAY: Monday
//   - TUESDAY: Tuesday
//   - WEDNESDAY: Wednesday
//   - THURSDAY: Thursday
//   - FRIDAY: Friday
//   - SATURDAY: Saturday
//   - SUNDAY: Sunday
//     Possible values are `DAY_OF_WEEK_UNSPECIFIED`, `MONDAY`, `TUESDAY`, `WEDNESDAY`, `THURSDAY`, `FRIDAY`, `SATURDAY`, and `SUNDAY`.
func (o InstanceMaintenancePolicyWeeklyMaintenanceWindowOutput) Day() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceMaintenancePolicyWeeklyMaintenanceWindow) string { return v.Day }).(pulumi.StringOutput)
}

// Output only. Duration of the maintenance window.
// The current window is fixed at 1 hour.
// A duration in seconds with up to nine fractional digits,
// terminated by 's'. Example: "3.5s".
func (o InstanceMaintenancePolicyWeeklyMaintenanceWindowOutput) Duration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceMaintenancePolicyWeeklyMaintenanceWindow) *string { return v.Duration }).(pulumi.StringPtrOutput)
}

// Required. Start time of the window in UTC time.
// Structure is documented below.
func (o InstanceMaintenancePolicyWeeklyMaintenanceWindowOutput) StartTime() InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput {
	return o.ApplyT(func(v InstanceMaintenancePolicyWeeklyMaintenanceWindow) InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTime {
		return v.StartTime
	}).(InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput)
}

type InstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput struct{ *pulumi.OutputState }

func (InstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceMaintenancePolicyWeeklyMaintenanceWindow)(nil)).Elem()
}

func (o InstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput) ToInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput() InstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput {
	return o
}

func (o InstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput) ToInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutputWithContext(ctx context.Context) InstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput {
	return o
}

func (o InstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput) Index(i pulumi.IntInput) InstanceMaintenancePolicyWeeklyMaintenanceWindowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceMaintenancePolicyWeeklyMaintenanceWindow {
		return vs[0].([]InstanceMaintenancePolicyWeeklyMaintenanceWindow)[vs[1].(int)]
	}).(InstanceMaintenancePolicyWeeklyMaintenanceWindowOutput)
}

type InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTime struct {
	// Hours of day in 24 hour format. Should be from 0 to 23.
	// An API may choose to allow the value "24:00:00" for scenarios like business closing time.
	Hours *int `pulumi:"hours"`
	// Minutes of hour of day. Must be from 0 to 59.
	Minutes *int `pulumi:"minutes"`
	// Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
	Nanos *int `pulumi:"nanos"`
	// Seconds of minutes of the time. Must normally be from 0 to 59.
	// An API may allow the value 60 if it allows leap-seconds.
	Seconds *int `pulumi:"seconds"`
}

// InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeInput is an input type that accepts InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArgs and InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput values.
// You can construct a concrete instance of `InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeInput` via:
//
//	InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArgs{...}
type InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeInput interface {
	pulumi.Input

	ToInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput() InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput
	ToInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutputWithContext(context.Context) InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput
}

type InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArgs struct {
	// Hours of day in 24 hour format. Should be from 0 to 23.
	// An API may choose to allow the value "24:00:00" for scenarios like business closing time.
	Hours pulumi.IntPtrInput `pulumi:"hours"`
	// Minutes of hour of day. Must be from 0 to 59.
	Minutes pulumi.IntPtrInput `pulumi:"minutes"`
	// Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
	Nanos pulumi.IntPtrInput `pulumi:"nanos"`
	// Seconds of minutes of the time. Must normally be from 0 to 59.
	// An API may allow the value 60 if it allows leap-seconds.
	Seconds pulumi.IntPtrInput `pulumi:"seconds"`
}

func (InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTime)(nil)).Elem()
}

func (i InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArgs) ToInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput() InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput {
	return i.ToInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutputWithContext(context.Background())
}

func (i InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArgs) ToInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutputWithContext(ctx context.Context) InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput)
}

type InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput struct{ *pulumi.OutputState }

func (InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTime)(nil)).Elem()
}

func (o InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput) ToInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput() InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput {
	return o
}

func (o InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput) ToInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutputWithContext(ctx context.Context) InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput {
	return o
}

// Hours of day in 24 hour format. Should be from 0 to 23.
// An API may choose to allow the value "24:00:00" for scenarios like business closing time.
func (o InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput) Hours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTime) *int { return v.Hours }).(pulumi.IntPtrOutput)
}

// Minutes of hour of day. Must be from 0 to 59.
func (o InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput) Minutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTime) *int { return v.Minutes }).(pulumi.IntPtrOutput)
}

// Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
func (o InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput) Nanos() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTime) *int { return v.Nanos }).(pulumi.IntPtrOutput)
}

// Seconds of minutes of the time. Must normally be from 0 to 59.
// An API may allow the value 60 if it allows leap-seconds.
func (o InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput) Seconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTime) *int { return v.Seconds }).(pulumi.IntPtrOutput)
}

type InstanceMaintenanceSchedule struct {
	// Output only. The end time of any upcoming scheduled maintenance for this instance.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits.
	EndTime *string `pulumi:"endTime"`
	// Output only. The deadline that the maintenance schedule start time
	// can not go beyond, including reschedule.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits.
	ScheduleDeadlineTime *string `pulumi:"scheduleDeadlineTime"`
	// Output only. The start time of any upcoming scheduled maintenance for this instance.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits.
	StartTime *string `pulumi:"startTime"`
}

// InstanceMaintenanceScheduleInput is an input type that accepts InstanceMaintenanceScheduleArgs and InstanceMaintenanceScheduleOutput values.
// You can construct a concrete instance of `InstanceMaintenanceScheduleInput` via:
//
//	InstanceMaintenanceScheduleArgs{...}
type InstanceMaintenanceScheduleInput interface {
	pulumi.Input

	ToInstanceMaintenanceScheduleOutput() InstanceMaintenanceScheduleOutput
	ToInstanceMaintenanceScheduleOutputWithContext(context.Context) InstanceMaintenanceScheduleOutput
}

type InstanceMaintenanceScheduleArgs struct {
	// Output only. The end time of any upcoming scheduled maintenance for this instance.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits.
	EndTime pulumi.StringPtrInput `pulumi:"endTime"`
	// Output only. The deadline that the maintenance schedule start time
	// can not go beyond, including reschedule.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits.
	ScheduleDeadlineTime pulumi.StringPtrInput `pulumi:"scheduleDeadlineTime"`
	// Output only. The start time of any upcoming scheduled maintenance for this instance.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits.
	StartTime pulumi.StringPtrInput `pulumi:"startTime"`
}

func (InstanceMaintenanceScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceMaintenanceSchedule)(nil)).Elem()
}

func (i InstanceMaintenanceScheduleArgs) ToInstanceMaintenanceScheduleOutput() InstanceMaintenanceScheduleOutput {
	return i.ToInstanceMaintenanceScheduleOutputWithContext(context.Background())
}

func (i InstanceMaintenanceScheduleArgs) ToInstanceMaintenanceScheduleOutputWithContext(ctx context.Context) InstanceMaintenanceScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMaintenanceScheduleOutput)
}

func (i InstanceMaintenanceScheduleArgs) ToInstanceMaintenanceSchedulePtrOutput() InstanceMaintenanceSchedulePtrOutput {
	return i.ToInstanceMaintenanceSchedulePtrOutputWithContext(context.Background())
}

func (i InstanceMaintenanceScheduleArgs) ToInstanceMaintenanceSchedulePtrOutputWithContext(ctx context.Context) InstanceMaintenanceSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMaintenanceScheduleOutput).ToInstanceMaintenanceSchedulePtrOutputWithContext(ctx)
}

// InstanceMaintenanceSchedulePtrInput is an input type that accepts InstanceMaintenanceScheduleArgs, InstanceMaintenanceSchedulePtr and InstanceMaintenanceSchedulePtrOutput values.
// You can construct a concrete instance of `InstanceMaintenanceSchedulePtrInput` via:
//
//	        InstanceMaintenanceScheduleArgs{...}
//
//	or:
//
//	        nil
type InstanceMaintenanceSchedulePtrInput interface {
	pulumi.Input

	ToInstanceMaintenanceSchedulePtrOutput() InstanceMaintenanceSchedulePtrOutput
	ToInstanceMaintenanceSchedulePtrOutputWithContext(context.Context) InstanceMaintenanceSchedulePtrOutput
}

type instanceMaintenanceSchedulePtrType InstanceMaintenanceScheduleArgs

func InstanceMaintenanceSchedulePtr(v *InstanceMaintenanceScheduleArgs) InstanceMaintenanceSchedulePtrInput {
	return (*instanceMaintenanceSchedulePtrType)(v)
}

func (*instanceMaintenanceSchedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceMaintenanceSchedule)(nil)).Elem()
}

func (i *instanceMaintenanceSchedulePtrType) ToInstanceMaintenanceSchedulePtrOutput() InstanceMaintenanceSchedulePtrOutput {
	return i.ToInstanceMaintenanceSchedulePtrOutputWithContext(context.Background())
}

func (i *instanceMaintenanceSchedulePtrType) ToInstanceMaintenanceSchedulePtrOutputWithContext(ctx context.Context) InstanceMaintenanceSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMaintenanceSchedulePtrOutput)
}

type InstanceMaintenanceScheduleOutput struct{ *pulumi.OutputState }

func (InstanceMaintenanceScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceMaintenanceSchedule)(nil)).Elem()
}

func (o InstanceMaintenanceScheduleOutput) ToInstanceMaintenanceScheduleOutput() InstanceMaintenanceScheduleOutput {
	return o
}

func (o InstanceMaintenanceScheduleOutput) ToInstanceMaintenanceScheduleOutputWithContext(ctx context.Context) InstanceMaintenanceScheduleOutput {
	return o
}

func (o InstanceMaintenanceScheduleOutput) ToInstanceMaintenanceSchedulePtrOutput() InstanceMaintenanceSchedulePtrOutput {
	return o.ToInstanceMaintenanceSchedulePtrOutputWithContext(context.Background())
}

func (o InstanceMaintenanceScheduleOutput) ToInstanceMaintenanceSchedulePtrOutputWithContext(ctx context.Context) InstanceMaintenanceSchedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceMaintenanceSchedule) *InstanceMaintenanceSchedule {
		return &v
	}).(InstanceMaintenanceSchedulePtrOutput)
}

// Output only. The end time of any upcoming scheduled maintenance for this instance.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
// resolution and up to nine fractional digits.
func (o InstanceMaintenanceScheduleOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceMaintenanceSchedule) *string { return v.EndTime }).(pulumi.StringPtrOutput)
}

// Output only. The deadline that the maintenance schedule start time
// can not go beyond, including reschedule.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
// resolution and up to nine fractional digits.
func (o InstanceMaintenanceScheduleOutput) ScheduleDeadlineTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceMaintenanceSchedule) *string { return v.ScheduleDeadlineTime }).(pulumi.StringPtrOutput)
}

// Output only. The start time of any upcoming scheduled maintenance for this instance.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
// resolution and up to nine fractional digits.
func (o InstanceMaintenanceScheduleOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceMaintenanceSchedule) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

type InstanceMaintenanceSchedulePtrOutput struct{ *pulumi.OutputState }

func (InstanceMaintenanceSchedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceMaintenanceSchedule)(nil)).Elem()
}

func (o InstanceMaintenanceSchedulePtrOutput) ToInstanceMaintenanceSchedulePtrOutput() InstanceMaintenanceSchedulePtrOutput {
	return o
}

func (o InstanceMaintenanceSchedulePtrOutput) ToInstanceMaintenanceSchedulePtrOutputWithContext(ctx context.Context) InstanceMaintenanceSchedulePtrOutput {
	return o
}

func (o InstanceMaintenanceSchedulePtrOutput) Elem() InstanceMaintenanceScheduleOutput {
	return o.ApplyT(func(v *InstanceMaintenanceSchedule) InstanceMaintenanceSchedule {
		if v != nil {
			return *v
		}
		var ret InstanceMaintenanceSchedule
		return ret
	}).(InstanceMaintenanceScheduleOutput)
}

// Output only. The end time of any upcoming scheduled maintenance for this instance.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
// resolution and up to nine fractional digits.
func (o InstanceMaintenanceSchedulePtrOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceMaintenanceSchedule) *string {
		if v == nil {
			return nil
		}
		return v.EndTime
	}).(pulumi.StringPtrOutput)
}

// Output only. The deadline that the maintenance schedule start time
// can not go beyond, including reschedule.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
// resolution and up to nine fractional digits.
func (o InstanceMaintenanceSchedulePtrOutput) ScheduleDeadlineTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceMaintenanceSchedule) *string {
		if v == nil {
			return nil
		}
		return v.ScheduleDeadlineTime
	}).(pulumi.StringPtrOutput)
}

// Output only. The start time of any upcoming scheduled maintenance for this instance.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
// resolution and up to nine fractional digits.
func (o InstanceMaintenanceSchedulePtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceMaintenanceSchedule) *string {
		if v == nil {
			return nil
		}
		return v.StartTime
	}).(pulumi.StringPtrOutput)
}

type InstanceNode struct {
	// Node identifying string. e.g. 'node-0', 'node-1'
	Id *string `pulumi:"id"`
	// Location of the node.
	Zone *string `pulumi:"zone"`
}

// InstanceNodeInput is an input type that accepts InstanceNodeArgs and InstanceNodeOutput values.
// You can construct a concrete instance of `InstanceNodeInput` via:
//
//	InstanceNodeArgs{...}
type InstanceNodeInput interface {
	pulumi.Input

	ToInstanceNodeOutput() InstanceNodeOutput
	ToInstanceNodeOutputWithContext(context.Context) InstanceNodeOutput
}

type InstanceNodeArgs struct {
	// Node identifying string. e.g. 'node-0', 'node-1'
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Location of the node.
	Zone pulumi.StringPtrInput `pulumi:"zone"`
}

func (InstanceNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceNode)(nil)).Elem()
}

func (i InstanceNodeArgs) ToInstanceNodeOutput() InstanceNodeOutput {
	return i.ToInstanceNodeOutputWithContext(context.Background())
}

func (i InstanceNodeArgs) ToInstanceNodeOutputWithContext(ctx context.Context) InstanceNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceNodeOutput)
}

// InstanceNodeArrayInput is an input type that accepts InstanceNodeArray and InstanceNodeArrayOutput values.
// You can construct a concrete instance of `InstanceNodeArrayInput` via:
//
//	InstanceNodeArray{ InstanceNodeArgs{...} }
type InstanceNodeArrayInput interface {
	pulumi.Input

	ToInstanceNodeArrayOutput() InstanceNodeArrayOutput
	ToInstanceNodeArrayOutputWithContext(context.Context) InstanceNodeArrayOutput
}

type InstanceNodeArray []InstanceNodeInput

func (InstanceNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceNode)(nil)).Elem()
}

func (i InstanceNodeArray) ToInstanceNodeArrayOutput() InstanceNodeArrayOutput {
	return i.ToInstanceNodeArrayOutputWithContext(context.Background())
}

func (i InstanceNodeArray) ToInstanceNodeArrayOutputWithContext(ctx context.Context) InstanceNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceNodeArrayOutput)
}

type InstanceNodeOutput struct{ *pulumi.OutputState }

func (InstanceNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceNode)(nil)).Elem()
}

func (o InstanceNodeOutput) ToInstanceNodeOutput() InstanceNodeOutput {
	return o
}

func (o InstanceNodeOutput) ToInstanceNodeOutputWithContext(ctx context.Context) InstanceNodeOutput {
	return o
}

// Node identifying string. e.g. 'node-0', 'node-1'
func (o InstanceNodeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceNode) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Location of the node.
func (o InstanceNodeOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceNode) *string { return v.Zone }).(pulumi.StringPtrOutput)
}

type InstanceNodeArrayOutput struct{ *pulumi.OutputState }

func (InstanceNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceNode)(nil)).Elem()
}

func (o InstanceNodeArrayOutput) ToInstanceNodeArrayOutput() InstanceNodeArrayOutput {
	return o
}

func (o InstanceNodeArrayOutput) ToInstanceNodeArrayOutputWithContext(ctx context.Context) InstanceNodeArrayOutput {
	return o
}

func (o InstanceNodeArrayOutput) Index(i pulumi.IntInput) InstanceNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceNode {
		return vs[0].([]InstanceNode)[vs[1].(int)]
	}).(InstanceNodeOutput)
}

type InstancePersistenceConfig struct {
	// Optional. Controls whether Persistence features are enabled. If not provided, the existing value will be used.
	// - DISABLED: 	Persistence is disabled for the instance, and any existing snapshots are deleted.
	// - RDB: RDB based Persistence is enabled.
	//   Possible values are `DISABLED` and `RDB`.
	PersistenceMode *string `pulumi:"persistenceMode"`
	// Output only. The next time that a snapshot attempt is scheduled to occur.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up
	// to nine fractional digits.
	// Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	RdbNextSnapshotTime *string `pulumi:"rdbNextSnapshotTime"`
	// Optional. Available snapshot periods for scheduling.
	// - ONE_HOUR:	Snapshot every 1 hour.
	// - SIX_HOURS:	Snapshot every 6 hours.
	// - TWELVE_HOURS:	Snapshot every 12 hours.
	// - TWENTY_FOUR_HOURS:	Snapshot every 24 horus.
	//   Possible values are `ONE_HOUR`, `SIX_HOURS`, `TWELVE_HOURS`, and `TWENTY_FOUR_HOURS`.
	RdbSnapshotPeriod *string `pulumi:"rdbSnapshotPeriod"`
	// Optional. Date and time that the first snapshot was/will be attempted,
	// and to which future snapshots will be aligned. If not provided,
	// the current time will be used.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution
	// and up to nine fractional digits.
	// Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	RdbSnapshotStartTime *string `pulumi:"rdbSnapshotStartTime"`
}

// InstancePersistenceConfigInput is an input type that accepts InstancePersistenceConfigArgs and InstancePersistenceConfigOutput values.
// You can construct a concrete instance of `InstancePersistenceConfigInput` via:
//
//	InstancePersistenceConfigArgs{...}
type InstancePersistenceConfigInput interface {
	pulumi.Input

	ToInstancePersistenceConfigOutput() InstancePersistenceConfigOutput
	ToInstancePersistenceConfigOutputWithContext(context.Context) InstancePersistenceConfigOutput
}

type InstancePersistenceConfigArgs struct {
	// Optional. Controls whether Persistence features are enabled. If not provided, the existing value will be used.
	// - DISABLED: 	Persistence is disabled for the instance, and any existing snapshots are deleted.
	// - RDB: RDB based Persistence is enabled.
	//   Possible values are `DISABLED` and `RDB`.
	PersistenceMode pulumi.StringPtrInput `pulumi:"persistenceMode"`
	// Output only. The next time that a snapshot attempt is scheduled to occur.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up
	// to nine fractional digits.
	// Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	RdbNextSnapshotTime pulumi.StringPtrInput `pulumi:"rdbNextSnapshotTime"`
	// Optional. Available snapshot periods for scheduling.
	// - ONE_HOUR:	Snapshot every 1 hour.
	// - SIX_HOURS:	Snapshot every 6 hours.
	// - TWELVE_HOURS:	Snapshot every 12 hours.
	// - TWENTY_FOUR_HOURS:	Snapshot every 24 horus.
	//   Possible values are `ONE_HOUR`, `SIX_HOURS`, `TWELVE_HOURS`, and `TWENTY_FOUR_HOURS`.
	RdbSnapshotPeriod pulumi.StringPtrInput `pulumi:"rdbSnapshotPeriod"`
	// Optional. Date and time that the first snapshot was/will be attempted,
	// and to which future snapshots will be aligned. If not provided,
	// the current time will be used.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution
	// and up to nine fractional digits.
	// Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	RdbSnapshotStartTime pulumi.StringPtrInput `pulumi:"rdbSnapshotStartTime"`
}

func (InstancePersistenceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancePersistenceConfig)(nil)).Elem()
}

func (i InstancePersistenceConfigArgs) ToInstancePersistenceConfigOutput() InstancePersistenceConfigOutput {
	return i.ToInstancePersistenceConfigOutputWithContext(context.Background())
}

func (i InstancePersistenceConfigArgs) ToInstancePersistenceConfigOutputWithContext(ctx context.Context) InstancePersistenceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancePersistenceConfigOutput)
}

func (i InstancePersistenceConfigArgs) ToInstancePersistenceConfigPtrOutput() InstancePersistenceConfigPtrOutput {
	return i.ToInstancePersistenceConfigPtrOutputWithContext(context.Background())
}

func (i InstancePersistenceConfigArgs) ToInstancePersistenceConfigPtrOutputWithContext(ctx context.Context) InstancePersistenceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancePersistenceConfigOutput).ToInstancePersistenceConfigPtrOutputWithContext(ctx)
}

// InstancePersistenceConfigPtrInput is an input type that accepts InstancePersistenceConfigArgs, InstancePersistenceConfigPtr and InstancePersistenceConfigPtrOutput values.
// You can construct a concrete instance of `InstancePersistenceConfigPtrInput` via:
//
//	        InstancePersistenceConfigArgs{...}
//
//	or:
//
//	        nil
type InstancePersistenceConfigPtrInput interface {
	pulumi.Input

	ToInstancePersistenceConfigPtrOutput() InstancePersistenceConfigPtrOutput
	ToInstancePersistenceConfigPtrOutputWithContext(context.Context) InstancePersistenceConfigPtrOutput
}

type instancePersistenceConfigPtrType InstancePersistenceConfigArgs

func InstancePersistenceConfigPtr(v *InstancePersistenceConfigArgs) InstancePersistenceConfigPtrInput {
	return (*instancePersistenceConfigPtrType)(v)
}

func (*instancePersistenceConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstancePersistenceConfig)(nil)).Elem()
}

func (i *instancePersistenceConfigPtrType) ToInstancePersistenceConfigPtrOutput() InstancePersistenceConfigPtrOutput {
	return i.ToInstancePersistenceConfigPtrOutputWithContext(context.Background())
}

func (i *instancePersistenceConfigPtrType) ToInstancePersistenceConfigPtrOutputWithContext(ctx context.Context) InstancePersistenceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancePersistenceConfigPtrOutput)
}

type InstancePersistenceConfigOutput struct{ *pulumi.OutputState }

func (InstancePersistenceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancePersistenceConfig)(nil)).Elem()
}

func (o InstancePersistenceConfigOutput) ToInstancePersistenceConfigOutput() InstancePersistenceConfigOutput {
	return o
}

func (o InstancePersistenceConfigOutput) ToInstancePersistenceConfigOutputWithContext(ctx context.Context) InstancePersistenceConfigOutput {
	return o
}

func (o InstancePersistenceConfigOutput) ToInstancePersistenceConfigPtrOutput() InstancePersistenceConfigPtrOutput {
	return o.ToInstancePersistenceConfigPtrOutputWithContext(context.Background())
}

func (o InstancePersistenceConfigOutput) ToInstancePersistenceConfigPtrOutputWithContext(ctx context.Context) InstancePersistenceConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstancePersistenceConfig) *InstancePersistenceConfig {
		return &v
	}).(InstancePersistenceConfigPtrOutput)
}

// Optional. Controls whether Persistence features are enabled. If not provided, the existing value will be used.
//   - DISABLED: 	Persistence is disabled for the instance, and any existing snapshots are deleted.
//   - RDB: RDB based Persistence is enabled.
//     Possible values are `DISABLED` and `RDB`.
func (o InstancePersistenceConfigOutput) PersistenceMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstancePersistenceConfig) *string { return v.PersistenceMode }).(pulumi.StringPtrOutput)
}

// Output only. The next time that a snapshot attempt is scheduled to occur.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up
// to nine fractional digits.
// Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
func (o InstancePersistenceConfigOutput) RdbNextSnapshotTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstancePersistenceConfig) *string { return v.RdbNextSnapshotTime }).(pulumi.StringPtrOutput)
}

// Optional. Available snapshot periods for scheduling.
//   - ONE_HOUR:	Snapshot every 1 hour.
//   - SIX_HOURS:	Snapshot every 6 hours.
//   - TWELVE_HOURS:	Snapshot every 12 hours.
//   - TWENTY_FOUR_HOURS:	Snapshot every 24 horus.
//     Possible values are `ONE_HOUR`, `SIX_HOURS`, `TWELVE_HOURS`, and `TWENTY_FOUR_HOURS`.
func (o InstancePersistenceConfigOutput) RdbSnapshotPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstancePersistenceConfig) *string { return v.RdbSnapshotPeriod }).(pulumi.StringPtrOutput)
}

// Optional. Date and time that the first snapshot was/will be attempted,
// and to which future snapshots will be aligned. If not provided,
// the current time will be used.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution
// and up to nine fractional digits.
// Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
func (o InstancePersistenceConfigOutput) RdbSnapshotStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstancePersistenceConfig) *string { return v.RdbSnapshotStartTime }).(pulumi.StringPtrOutput)
}

type InstancePersistenceConfigPtrOutput struct{ *pulumi.OutputState }

func (InstancePersistenceConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstancePersistenceConfig)(nil)).Elem()
}

func (o InstancePersistenceConfigPtrOutput) ToInstancePersistenceConfigPtrOutput() InstancePersistenceConfigPtrOutput {
	return o
}

func (o InstancePersistenceConfigPtrOutput) ToInstancePersistenceConfigPtrOutputWithContext(ctx context.Context) InstancePersistenceConfigPtrOutput {
	return o
}

func (o InstancePersistenceConfigPtrOutput) Elem() InstancePersistenceConfigOutput {
	return o.ApplyT(func(v *InstancePersistenceConfig) InstancePersistenceConfig {
		if v != nil {
			return *v
		}
		var ret InstancePersistenceConfig
		return ret
	}).(InstancePersistenceConfigOutput)
}

// Optional. Controls whether Persistence features are enabled. If not provided, the existing value will be used.
//   - DISABLED: 	Persistence is disabled for the instance, and any existing snapshots are deleted.
//   - RDB: RDB based Persistence is enabled.
//     Possible values are `DISABLED` and `RDB`.
func (o InstancePersistenceConfigPtrOutput) PersistenceMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstancePersistenceConfig) *string {
		if v == nil {
			return nil
		}
		return v.PersistenceMode
	}).(pulumi.StringPtrOutput)
}

// Output only. The next time that a snapshot attempt is scheduled to occur.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up
// to nine fractional digits.
// Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
func (o InstancePersistenceConfigPtrOutput) RdbNextSnapshotTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstancePersistenceConfig) *string {
		if v == nil {
			return nil
		}
		return v.RdbNextSnapshotTime
	}).(pulumi.StringPtrOutput)
}

// Optional. Available snapshot periods for scheduling.
//   - ONE_HOUR:	Snapshot every 1 hour.
//   - SIX_HOURS:	Snapshot every 6 hours.
//   - TWELVE_HOURS:	Snapshot every 12 hours.
//   - TWENTY_FOUR_HOURS:	Snapshot every 24 horus.
//     Possible values are `ONE_HOUR`, `SIX_HOURS`, `TWELVE_HOURS`, and `TWENTY_FOUR_HOURS`.
func (o InstancePersistenceConfigPtrOutput) RdbSnapshotPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstancePersistenceConfig) *string {
		if v == nil {
			return nil
		}
		return v.RdbSnapshotPeriod
	}).(pulumi.StringPtrOutput)
}

// Optional. Date and time that the first snapshot was/will be attempted,
// and to which future snapshots will be aligned. If not provided,
// the current time will be used.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution
// and up to nine fractional digits.
// Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
func (o InstancePersistenceConfigPtrOutput) RdbSnapshotStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstancePersistenceConfig) *string {
		if v == nil {
			return nil
		}
		return v.RdbSnapshotStartTime
	}).(pulumi.StringPtrOutput)
}

type InstanceServerCaCert struct {
	// The certificate data in PEM format.
	Cert *string `pulumi:"cert"`
	// Output only. The time when the policy was created.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits.
	CreateTime *string `pulumi:"createTime"`
	// The time when the certificate expires.
	ExpireTime *string `pulumi:"expireTime"`
	// Serial number, as extracted from the certificate.
	SerialNumber *string `pulumi:"serialNumber"`
	// Sha1 Fingerprint of the certificate.
	Sha1Fingerprint *string `pulumi:"sha1Fingerprint"`
}

// InstanceServerCaCertInput is an input type that accepts InstanceServerCaCertArgs and InstanceServerCaCertOutput values.
// You can construct a concrete instance of `InstanceServerCaCertInput` via:
//
//	InstanceServerCaCertArgs{...}
type InstanceServerCaCertInput interface {
	pulumi.Input

	ToInstanceServerCaCertOutput() InstanceServerCaCertOutput
	ToInstanceServerCaCertOutputWithContext(context.Context) InstanceServerCaCertOutput
}

type InstanceServerCaCertArgs struct {
	// The certificate data in PEM format.
	Cert pulumi.StringPtrInput `pulumi:"cert"`
	// Output only. The time when the policy was created.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits.
	CreateTime pulumi.StringPtrInput `pulumi:"createTime"`
	// The time when the certificate expires.
	ExpireTime pulumi.StringPtrInput `pulumi:"expireTime"`
	// Serial number, as extracted from the certificate.
	SerialNumber pulumi.StringPtrInput `pulumi:"serialNumber"`
	// Sha1 Fingerprint of the certificate.
	Sha1Fingerprint pulumi.StringPtrInput `pulumi:"sha1Fingerprint"`
}

func (InstanceServerCaCertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceServerCaCert)(nil)).Elem()
}

func (i InstanceServerCaCertArgs) ToInstanceServerCaCertOutput() InstanceServerCaCertOutput {
	return i.ToInstanceServerCaCertOutputWithContext(context.Background())
}

func (i InstanceServerCaCertArgs) ToInstanceServerCaCertOutputWithContext(ctx context.Context) InstanceServerCaCertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceServerCaCertOutput)
}

// InstanceServerCaCertArrayInput is an input type that accepts InstanceServerCaCertArray and InstanceServerCaCertArrayOutput values.
// You can construct a concrete instance of `InstanceServerCaCertArrayInput` via:
//
//	InstanceServerCaCertArray{ InstanceServerCaCertArgs{...} }
type InstanceServerCaCertArrayInput interface {
	pulumi.Input

	ToInstanceServerCaCertArrayOutput() InstanceServerCaCertArrayOutput
	ToInstanceServerCaCertArrayOutputWithContext(context.Context) InstanceServerCaCertArrayOutput
}

type InstanceServerCaCertArray []InstanceServerCaCertInput

func (InstanceServerCaCertArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceServerCaCert)(nil)).Elem()
}

func (i InstanceServerCaCertArray) ToInstanceServerCaCertArrayOutput() InstanceServerCaCertArrayOutput {
	return i.ToInstanceServerCaCertArrayOutputWithContext(context.Background())
}

func (i InstanceServerCaCertArray) ToInstanceServerCaCertArrayOutputWithContext(ctx context.Context) InstanceServerCaCertArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceServerCaCertArrayOutput)
}

type InstanceServerCaCertOutput struct{ *pulumi.OutputState }

func (InstanceServerCaCertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceServerCaCert)(nil)).Elem()
}

func (o InstanceServerCaCertOutput) ToInstanceServerCaCertOutput() InstanceServerCaCertOutput {
	return o
}

func (o InstanceServerCaCertOutput) ToInstanceServerCaCertOutputWithContext(ctx context.Context) InstanceServerCaCertOutput {
	return o
}

// The certificate data in PEM format.
func (o InstanceServerCaCertOutput) Cert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceServerCaCert) *string { return v.Cert }).(pulumi.StringPtrOutput)
}

// Output only. The time when the policy was created.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
// resolution and up to nine fractional digits.
func (o InstanceServerCaCertOutput) CreateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceServerCaCert) *string { return v.CreateTime }).(pulumi.StringPtrOutput)
}

// The time when the certificate expires.
func (o InstanceServerCaCertOutput) ExpireTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceServerCaCert) *string { return v.ExpireTime }).(pulumi.StringPtrOutput)
}

// Serial number, as extracted from the certificate.
func (o InstanceServerCaCertOutput) SerialNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceServerCaCert) *string { return v.SerialNumber }).(pulumi.StringPtrOutput)
}

// Sha1 Fingerprint of the certificate.
func (o InstanceServerCaCertOutput) Sha1Fingerprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceServerCaCert) *string { return v.Sha1Fingerprint }).(pulumi.StringPtrOutput)
}

type InstanceServerCaCertArrayOutput struct{ *pulumi.OutputState }

func (InstanceServerCaCertArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceServerCaCert)(nil)).Elem()
}

func (o InstanceServerCaCertArrayOutput) ToInstanceServerCaCertArrayOutput() InstanceServerCaCertArrayOutput {
	return o
}

func (o InstanceServerCaCertArrayOutput) ToInstanceServerCaCertArrayOutputWithContext(ctx context.Context) InstanceServerCaCertArrayOutput {
	return o
}

func (o InstanceServerCaCertArrayOutput) Index(i pulumi.IntInput) InstanceServerCaCertOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceServerCaCert {
		return vs[0].([]InstanceServerCaCert)[vs[1].(int)]
	}).(InstanceServerCaCertOutput)
}

type GetInstanceMaintenancePolicy struct {
	CreateTime               string                                                `pulumi:"createTime"`
	Description              string                                                `pulumi:"description"`
	UpdateTime               string                                                `pulumi:"updateTime"`
	WeeklyMaintenanceWindows []GetInstanceMaintenancePolicyWeeklyMaintenanceWindow `pulumi:"weeklyMaintenanceWindows"`
}

// GetInstanceMaintenancePolicyInput is an input type that accepts GetInstanceMaintenancePolicyArgs and GetInstanceMaintenancePolicyOutput values.
// You can construct a concrete instance of `GetInstanceMaintenancePolicyInput` via:
//
//	GetInstanceMaintenancePolicyArgs{...}
type GetInstanceMaintenancePolicyInput interface {
	pulumi.Input

	ToGetInstanceMaintenancePolicyOutput() GetInstanceMaintenancePolicyOutput
	ToGetInstanceMaintenancePolicyOutputWithContext(context.Context) GetInstanceMaintenancePolicyOutput
}

type GetInstanceMaintenancePolicyArgs struct {
	CreateTime               pulumi.StringInput                                            `pulumi:"createTime"`
	Description              pulumi.StringInput                                            `pulumi:"description"`
	UpdateTime               pulumi.StringInput                                            `pulumi:"updateTime"`
	WeeklyMaintenanceWindows GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayInput `pulumi:"weeklyMaintenanceWindows"`
}

func (GetInstanceMaintenancePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceMaintenancePolicy)(nil)).Elem()
}

func (i GetInstanceMaintenancePolicyArgs) ToGetInstanceMaintenancePolicyOutput() GetInstanceMaintenancePolicyOutput {
	return i.ToGetInstanceMaintenancePolicyOutputWithContext(context.Background())
}

func (i GetInstanceMaintenancePolicyArgs) ToGetInstanceMaintenancePolicyOutputWithContext(ctx context.Context) GetInstanceMaintenancePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceMaintenancePolicyOutput)
}

// GetInstanceMaintenancePolicyArrayInput is an input type that accepts GetInstanceMaintenancePolicyArray and GetInstanceMaintenancePolicyArrayOutput values.
// You can construct a concrete instance of `GetInstanceMaintenancePolicyArrayInput` via:
//
//	GetInstanceMaintenancePolicyArray{ GetInstanceMaintenancePolicyArgs{...} }
type GetInstanceMaintenancePolicyArrayInput interface {
	pulumi.Input

	ToGetInstanceMaintenancePolicyArrayOutput() GetInstanceMaintenancePolicyArrayOutput
	ToGetInstanceMaintenancePolicyArrayOutputWithContext(context.Context) GetInstanceMaintenancePolicyArrayOutput
}

type GetInstanceMaintenancePolicyArray []GetInstanceMaintenancePolicyInput

func (GetInstanceMaintenancePolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceMaintenancePolicy)(nil)).Elem()
}

func (i GetInstanceMaintenancePolicyArray) ToGetInstanceMaintenancePolicyArrayOutput() GetInstanceMaintenancePolicyArrayOutput {
	return i.ToGetInstanceMaintenancePolicyArrayOutputWithContext(context.Background())
}

func (i GetInstanceMaintenancePolicyArray) ToGetInstanceMaintenancePolicyArrayOutputWithContext(ctx context.Context) GetInstanceMaintenancePolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceMaintenancePolicyArrayOutput)
}

type GetInstanceMaintenancePolicyOutput struct{ *pulumi.OutputState }

func (GetInstanceMaintenancePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceMaintenancePolicy)(nil)).Elem()
}

func (o GetInstanceMaintenancePolicyOutput) ToGetInstanceMaintenancePolicyOutput() GetInstanceMaintenancePolicyOutput {
	return o
}

func (o GetInstanceMaintenancePolicyOutput) ToGetInstanceMaintenancePolicyOutputWithContext(ctx context.Context) GetInstanceMaintenancePolicyOutput {
	return o
}

func (o GetInstanceMaintenancePolicyOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceMaintenancePolicy) string { return v.CreateTime }).(pulumi.StringOutput)
}

func (o GetInstanceMaintenancePolicyOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceMaintenancePolicy) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetInstanceMaintenancePolicyOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceMaintenancePolicy) string { return v.UpdateTime }).(pulumi.StringOutput)
}

func (o GetInstanceMaintenancePolicyOutput) WeeklyMaintenanceWindows() GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput {
	return o.ApplyT(func(v GetInstanceMaintenancePolicy) []GetInstanceMaintenancePolicyWeeklyMaintenanceWindow {
		return v.WeeklyMaintenanceWindows
	}).(GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput)
}

type GetInstanceMaintenancePolicyArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceMaintenancePolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceMaintenancePolicy)(nil)).Elem()
}

func (o GetInstanceMaintenancePolicyArrayOutput) ToGetInstanceMaintenancePolicyArrayOutput() GetInstanceMaintenancePolicyArrayOutput {
	return o
}

func (o GetInstanceMaintenancePolicyArrayOutput) ToGetInstanceMaintenancePolicyArrayOutputWithContext(ctx context.Context) GetInstanceMaintenancePolicyArrayOutput {
	return o
}

func (o GetInstanceMaintenancePolicyArrayOutput) Index(i pulumi.IntInput) GetInstanceMaintenancePolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceMaintenancePolicy {
		return vs[0].([]GetInstanceMaintenancePolicy)[vs[1].(int)]
	}).(GetInstanceMaintenancePolicyOutput)
}

type GetInstanceMaintenancePolicyWeeklyMaintenanceWindow struct {
	Day        string                                                         `pulumi:"day"`
	Duration   string                                                         `pulumi:"duration"`
	StartTimes []GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTime `pulumi:"startTimes"`
}

// GetInstanceMaintenancePolicyWeeklyMaintenanceWindowInput is an input type that accepts GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArgs and GetInstanceMaintenancePolicyWeeklyMaintenanceWindowOutput values.
// You can construct a concrete instance of `GetInstanceMaintenancePolicyWeeklyMaintenanceWindowInput` via:
//
//	GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArgs{...}
type GetInstanceMaintenancePolicyWeeklyMaintenanceWindowInput interface {
	pulumi.Input

	ToGetInstanceMaintenancePolicyWeeklyMaintenanceWindowOutput() GetInstanceMaintenancePolicyWeeklyMaintenanceWindowOutput
	ToGetInstanceMaintenancePolicyWeeklyMaintenanceWindowOutputWithContext(context.Context) GetInstanceMaintenancePolicyWeeklyMaintenanceWindowOutput
}

type GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArgs struct {
	Day        pulumi.StringInput                                                     `pulumi:"day"`
	Duration   pulumi.StringInput                                                     `pulumi:"duration"`
	StartTimes GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayInput `pulumi:"startTimes"`
}

func (GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceMaintenancePolicyWeeklyMaintenanceWindow)(nil)).Elem()
}

func (i GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArgs) ToGetInstanceMaintenancePolicyWeeklyMaintenanceWindowOutput() GetInstanceMaintenancePolicyWeeklyMaintenanceWindowOutput {
	return i.ToGetInstanceMaintenancePolicyWeeklyMaintenanceWindowOutputWithContext(context.Background())
}

func (i GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArgs) ToGetInstanceMaintenancePolicyWeeklyMaintenanceWindowOutputWithContext(ctx context.Context) GetInstanceMaintenancePolicyWeeklyMaintenanceWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceMaintenancePolicyWeeklyMaintenanceWindowOutput)
}

// GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayInput is an input type that accepts GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArray and GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput values.
// You can construct a concrete instance of `GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayInput` via:
//
//	GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArray{ GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArgs{...} }
type GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayInput interface {
	pulumi.Input

	ToGetInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput() GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput
	ToGetInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutputWithContext(context.Context) GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput
}

type GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArray []GetInstanceMaintenancePolicyWeeklyMaintenanceWindowInput

func (GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceMaintenancePolicyWeeklyMaintenanceWindow)(nil)).Elem()
}

func (i GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArray) ToGetInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput() GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput {
	return i.ToGetInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutputWithContext(context.Background())
}

func (i GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArray) ToGetInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutputWithContext(ctx context.Context) GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput)
}

type GetInstanceMaintenancePolicyWeeklyMaintenanceWindowOutput struct{ *pulumi.OutputState }

func (GetInstanceMaintenancePolicyWeeklyMaintenanceWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceMaintenancePolicyWeeklyMaintenanceWindow)(nil)).Elem()
}

func (o GetInstanceMaintenancePolicyWeeklyMaintenanceWindowOutput) ToGetInstanceMaintenancePolicyWeeklyMaintenanceWindowOutput() GetInstanceMaintenancePolicyWeeklyMaintenanceWindowOutput {
	return o
}

func (o GetInstanceMaintenancePolicyWeeklyMaintenanceWindowOutput) ToGetInstanceMaintenancePolicyWeeklyMaintenanceWindowOutputWithContext(ctx context.Context) GetInstanceMaintenancePolicyWeeklyMaintenanceWindowOutput {
	return o
}

func (o GetInstanceMaintenancePolicyWeeklyMaintenanceWindowOutput) Day() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceMaintenancePolicyWeeklyMaintenanceWindow) string { return v.Day }).(pulumi.StringOutput)
}

func (o GetInstanceMaintenancePolicyWeeklyMaintenanceWindowOutput) Duration() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceMaintenancePolicyWeeklyMaintenanceWindow) string { return v.Duration }).(pulumi.StringOutput)
}

func (o GetInstanceMaintenancePolicyWeeklyMaintenanceWindowOutput) StartTimes() GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutput {
	return o.ApplyT(func(v GetInstanceMaintenancePolicyWeeklyMaintenanceWindow) []GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTime {
		return v.StartTimes
	}).(GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutput)
}

type GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceMaintenancePolicyWeeklyMaintenanceWindow)(nil)).Elem()
}

func (o GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput) ToGetInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput() GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput {
	return o
}

func (o GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput) ToGetInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutputWithContext(ctx context.Context) GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput {
	return o
}

func (o GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput) Index(i pulumi.IntInput) GetInstanceMaintenancePolicyWeeklyMaintenanceWindowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceMaintenancePolicyWeeklyMaintenanceWindow {
		return vs[0].([]GetInstanceMaintenancePolicyWeeklyMaintenanceWindow)[vs[1].(int)]
	}).(GetInstanceMaintenancePolicyWeeklyMaintenanceWindowOutput)
}

type GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTime struct {
	Hours   int `pulumi:"hours"`
	Minutes int `pulumi:"minutes"`
	Nanos   int `pulumi:"nanos"`
	Seconds int `pulumi:"seconds"`
}

// GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeInput is an input type that accepts GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArgs and GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput values.
// You can construct a concrete instance of `GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeInput` via:
//
//	GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArgs{...}
type GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeInput interface {
	pulumi.Input

	ToGetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput() GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput
	ToGetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutputWithContext(context.Context) GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput
}

type GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArgs struct {
	Hours   pulumi.IntInput `pulumi:"hours"`
	Minutes pulumi.IntInput `pulumi:"minutes"`
	Nanos   pulumi.IntInput `pulumi:"nanos"`
	Seconds pulumi.IntInput `pulumi:"seconds"`
}

func (GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTime)(nil)).Elem()
}

func (i GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArgs) ToGetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput() GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput {
	return i.ToGetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutputWithContext(context.Background())
}

func (i GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArgs) ToGetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutputWithContext(ctx context.Context) GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput)
}

// GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayInput is an input type that accepts GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArray and GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutput values.
// You can construct a concrete instance of `GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayInput` via:
//
//	GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArray{ GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArgs{...} }
type GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayInput interface {
	pulumi.Input

	ToGetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutput() GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutput
	ToGetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutputWithContext(context.Context) GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutput
}

type GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArray []GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeInput

func (GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTime)(nil)).Elem()
}

func (i GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArray) ToGetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutput() GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutput {
	return i.ToGetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutputWithContext(context.Background())
}

func (i GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArray) ToGetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutputWithContext(ctx context.Context) GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutput)
}

type GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput struct{ *pulumi.OutputState }

func (GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTime)(nil)).Elem()
}

func (o GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput) ToGetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput() GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput {
	return o
}

func (o GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput) ToGetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutputWithContext(ctx context.Context) GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput {
	return o
}

func (o GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput) Hours() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTime) int { return v.Hours }).(pulumi.IntOutput)
}

func (o GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput) Minutes() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTime) int { return v.Minutes }).(pulumi.IntOutput)
}

func (o GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput) Nanos() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTime) int { return v.Nanos }).(pulumi.IntOutput)
}

func (o GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput) Seconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTime) int { return v.Seconds }).(pulumi.IntOutput)
}

type GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTime)(nil)).Elem()
}

func (o GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutput) ToGetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutput() GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutput {
	return o
}

func (o GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutput) ToGetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutputWithContext(ctx context.Context) GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutput {
	return o
}

func (o GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutput) Index(i pulumi.IntInput) GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTime {
		return vs[0].([]GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTime)[vs[1].(int)]
	}).(GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput)
}

type GetInstanceMaintenanceSchedule struct {
	EndTime              string `pulumi:"endTime"`
	ScheduleDeadlineTime string `pulumi:"scheduleDeadlineTime"`
	StartTime            string `pulumi:"startTime"`
}

// GetInstanceMaintenanceScheduleInput is an input type that accepts GetInstanceMaintenanceScheduleArgs and GetInstanceMaintenanceScheduleOutput values.
// You can construct a concrete instance of `GetInstanceMaintenanceScheduleInput` via:
//
//	GetInstanceMaintenanceScheduleArgs{...}
type GetInstanceMaintenanceScheduleInput interface {
	pulumi.Input

	ToGetInstanceMaintenanceScheduleOutput() GetInstanceMaintenanceScheduleOutput
	ToGetInstanceMaintenanceScheduleOutputWithContext(context.Context) GetInstanceMaintenanceScheduleOutput
}

type GetInstanceMaintenanceScheduleArgs struct {
	EndTime              pulumi.StringInput `pulumi:"endTime"`
	ScheduleDeadlineTime pulumi.StringInput `pulumi:"scheduleDeadlineTime"`
	StartTime            pulumi.StringInput `pulumi:"startTime"`
}

func (GetInstanceMaintenanceScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceMaintenanceSchedule)(nil)).Elem()
}

func (i GetInstanceMaintenanceScheduleArgs) ToGetInstanceMaintenanceScheduleOutput() GetInstanceMaintenanceScheduleOutput {
	return i.ToGetInstanceMaintenanceScheduleOutputWithContext(context.Background())
}

func (i GetInstanceMaintenanceScheduleArgs) ToGetInstanceMaintenanceScheduleOutputWithContext(ctx context.Context) GetInstanceMaintenanceScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceMaintenanceScheduleOutput)
}

// GetInstanceMaintenanceScheduleArrayInput is an input type that accepts GetInstanceMaintenanceScheduleArray and GetInstanceMaintenanceScheduleArrayOutput values.
// You can construct a concrete instance of `GetInstanceMaintenanceScheduleArrayInput` via:
//
//	GetInstanceMaintenanceScheduleArray{ GetInstanceMaintenanceScheduleArgs{...} }
type GetInstanceMaintenanceScheduleArrayInput interface {
	pulumi.Input

	ToGetInstanceMaintenanceScheduleArrayOutput() GetInstanceMaintenanceScheduleArrayOutput
	ToGetInstanceMaintenanceScheduleArrayOutputWithContext(context.Context) GetInstanceMaintenanceScheduleArrayOutput
}

type GetInstanceMaintenanceScheduleArray []GetInstanceMaintenanceScheduleInput

func (GetInstanceMaintenanceScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceMaintenanceSchedule)(nil)).Elem()
}

func (i GetInstanceMaintenanceScheduleArray) ToGetInstanceMaintenanceScheduleArrayOutput() GetInstanceMaintenanceScheduleArrayOutput {
	return i.ToGetInstanceMaintenanceScheduleArrayOutputWithContext(context.Background())
}

func (i GetInstanceMaintenanceScheduleArray) ToGetInstanceMaintenanceScheduleArrayOutputWithContext(ctx context.Context) GetInstanceMaintenanceScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceMaintenanceScheduleArrayOutput)
}

type GetInstanceMaintenanceScheduleOutput struct{ *pulumi.OutputState }

func (GetInstanceMaintenanceScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceMaintenanceSchedule)(nil)).Elem()
}

func (o GetInstanceMaintenanceScheduleOutput) ToGetInstanceMaintenanceScheduleOutput() GetInstanceMaintenanceScheduleOutput {
	return o
}

func (o GetInstanceMaintenanceScheduleOutput) ToGetInstanceMaintenanceScheduleOutputWithContext(ctx context.Context) GetInstanceMaintenanceScheduleOutput {
	return o
}

func (o GetInstanceMaintenanceScheduleOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceMaintenanceSchedule) string { return v.EndTime }).(pulumi.StringOutput)
}

func (o GetInstanceMaintenanceScheduleOutput) ScheduleDeadlineTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceMaintenanceSchedule) string { return v.ScheduleDeadlineTime }).(pulumi.StringOutput)
}

func (o GetInstanceMaintenanceScheduleOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceMaintenanceSchedule) string { return v.StartTime }).(pulumi.StringOutput)
}

type GetInstanceMaintenanceScheduleArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceMaintenanceScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceMaintenanceSchedule)(nil)).Elem()
}

func (o GetInstanceMaintenanceScheduleArrayOutput) ToGetInstanceMaintenanceScheduleArrayOutput() GetInstanceMaintenanceScheduleArrayOutput {
	return o
}

func (o GetInstanceMaintenanceScheduleArrayOutput) ToGetInstanceMaintenanceScheduleArrayOutputWithContext(ctx context.Context) GetInstanceMaintenanceScheduleArrayOutput {
	return o
}

func (o GetInstanceMaintenanceScheduleArrayOutput) Index(i pulumi.IntInput) GetInstanceMaintenanceScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceMaintenanceSchedule {
		return vs[0].([]GetInstanceMaintenanceSchedule)[vs[1].(int)]
	}).(GetInstanceMaintenanceScheduleOutput)
}

type GetInstanceNode struct {
	Id   string `pulumi:"id"`
	Zone string `pulumi:"zone"`
}

// GetInstanceNodeInput is an input type that accepts GetInstanceNodeArgs and GetInstanceNodeOutput values.
// You can construct a concrete instance of `GetInstanceNodeInput` via:
//
//	GetInstanceNodeArgs{...}
type GetInstanceNodeInput interface {
	pulumi.Input

	ToGetInstanceNodeOutput() GetInstanceNodeOutput
	ToGetInstanceNodeOutputWithContext(context.Context) GetInstanceNodeOutput
}

type GetInstanceNodeArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Zone pulumi.StringInput `pulumi:"zone"`
}

func (GetInstanceNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceNode)(nil)).Elem()
}

func (i GetInstanceNodeArgs) ToGetInstanceNodeOutput() GetInstanceNodeOutput {
	return i.ToGetInstanceNodeOutputWithContext(context.Background())
}

func (i GetInstanceNodeArgs) ToGetInstanceNodeOutputWithContext(ctx context.Context) GetInstanceNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceNodeOutput)
}

// GetInstanceNodeArrayInput is an input type that accepts GetInstanceNodeArray and GetInstanceNodeArrayOutput values.
// You can construct a concrete instance of `GetInstanceNodeArrayInput` via:
//
//	GetInstanceNodeArray{ GetInstanceNodeArgs{...} }
type GetInstanceNodeArrayInput interface {
	pulumi.Input

	ToGetInstanceNodeArrayOutput() GetInstanceNodeArrayOutput
	ToGetInstanceNodeArrayOutputWithContext(context.Context) GetInstanceNodeArrayOutput
}

type GetInstanceNodeArray []GetInstanceNodeInput

func (GetInstanceNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceNode)(nil)).Elem()
}

func (i GetInstanceNodeArray) ToGetInstanceNodeArrayOutput() GetInstanceNodeArrayOutput {
	return i.ToGetInstanceNodeArrayOutputWithContext(context.Background())
}

func (i GetInstanceNodeArray) ToGetInstanceNodeArrayOutputWithContext(ctx context.Context) GetInstanceNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceNodeArrayOutput)
}

type GetInstanceNodeOutput struct{ *pulumi.OutputState }

func (GetInstanceNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceNode)(nil)).Elem()
}

func (o GetInstanceNodeOutput) ToGetInstanceNodeOutput() GetInstanceNodeOutput {
	return o
}

func (o GetInstanceNodeOutput) ToGetInstanceNodeOutputWithContext(ctx context.Context) GetInstanceNodeOutput {
	return o
}

func (o GetInstanceNodeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceNode) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetInstanceNodeOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceNode) string { return v.Zone }).(pulumi.StringOutput)
}

type GetInstanceNodeArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceNode)(nil)).Elem()
}

func (o GetInstanceNodeArrayOutput) ToGetInstanceNodeArrayOutput() GetInstanceNodeArrayOutput {
	return o
}

func (o GetInstanceNodeArrayOutput) ToGetInstanceNodeArrayOutputWithContext(ctx context.Context) GetInstanceNodeArrayOutput {
	return o
}

func (o GetInstanceNodeArrayOutput) Index(i pulumi.IntInput) GetInstanceNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceNode {
		return vs[0].([]GetInstanceNode)[vs[1].(int)]
	}).(GetInstanceNodeOutput)
}

type GetInstancePersistenceConfig struct {
	PersistenceMode      string `pulumi:"persistenceMode"`
	RdbNextSnapshotTime  string `pulumi:"rdbNextSnapshotTime"`
	RdbSnapshotPeriod    string `pulumi:"rdbSnapshotPeriod"`
	RdbSnapshotStartTime string `pulumi:"rdbSnapshotStartTime"`
}

// GetInstancePersistenceConfigInput is an input type that accepts GetInstancePersistenceConfigArgs and GetInstancePersistenceConfigOutput values.
// You can construct a concrete instance of `GetInstancePersistenceConfigInput` via:
//
//	GetInstancePersistenceConfigArgs{...}
type GetInstancePersistenceConfigInput interface {
	pulumi.Input

	ToGetInstancePersistenceConfigOutput() GetInstancePersistenceConfigOutput
	ToGetInstancePersistenceConfigOutputWithContext(context.Context) GetInstancePersistenceConfigOutput
}

type GetInstancePersistenceConfigArgs struct {
	PersistenceMode      pulumi.StringInput `pulumi:"persistenceMode"`
	RdbNextSnapshotTime  pulumi.StringInput `pulumi:"rdbNextSnapshotTime"`
	RdbSnapshotPeriod    pulumi.StringInput `pulumi:"rdbSnapshotPeriod"`
	RdbSnapshotStartTime pulumi.StringInput `pulumi:"rdbSnapshotStartTime"`
}

func (GetInstancePersistenceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancePersistenceConfig)(nil)).Elem()
}

func (i GetInstancePersistenceConfigArgs) ToGetInstancePersistenceConfigOutput() GetInstancePersistenceConfigOutput {
	return i.ToGetInstancePersistenceConfigOutputWithContext(context.Background())
}

func (i GetInstancePersistenceConfigArgs) ToGetInstancePersistenceConfigOutputWithContext(ctx context.Context) GetInstancePersistenceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancePersistenceConfigOutput)
}

// GetInstancePersistenceConfigArrayInput is an input type that accepts GetInstancePersistenceConfigArray and GetInstancePersistenceConfigArrayOutput values.
// You can construct a concrete instance of `GetInstancePersistenceConfigArrayInput` via:
//
//	GetInstancePersistenceConfigArray{ GetInstancePersistenceConfigArgs{...} }
type GetInstancePersistenceConfigArrayInput interface {
	pulumi.Input

	ToGetInstancePersistenceConfigArrayOutput() GetInstancePersistenceConfigArrayOutput
	ToGetInstancePersistenceConfigArrayOutputWithContext(context.Context) GetInstancePersistenceConfigArrayOutput
}

type GetInstancePersistenceConfigArray []GetInstancePersistenceConfigInput

func (GetInstancePersistenceConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancePersistenceConfig)(nil)).Elem()
}

func (i GetInstancePersistenceConfigArray) ToGetInstancePersistenceConfigArrayOutput() GetInstancePersistenceConfigArrayOutput {
	return i.ToGetInstancePersistenceConfigArrayOutputWithContext(context.Background())
}

func (i GetInstancePersistenceConfigArray) ToGetInstancePersistenceConfigArrayOutputWithContext(ctx context.Context) GetInstancePersistenceConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancePersistenceConfigArrayOutput)
}

type GetInstancePersistenceConfigOutput struct{ *pulumi.OutputState }

func (GetInstancePersistenceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancePersistenceConfig)(nil)).Elem()
}

func (o GetInstancePersistenceConfigOutput) ToGetInstancePersistenceConfigOutput() GetInstancePersistenceConfigOutput {
	return o
}

func (o GetInstancePersistenceConfigOutput) ToGetInstancePersistenceConfigOutputWithContext(ctx context.Context) GetInstancePersistenceConfigOutput {
	return o
}

func (o GetInstancePersistenceConfigOutput) PersistenceMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancePersistenceConfig) string { return v.PersistenceMode }).(pulumi.StringOutput)
}

func (o GetInstancePersistenceConfigOutput) RdbNextSnapshotTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancePersistenceConfig) string { return v.RdbNextSnapshotTime }).(pulumi.StringOutput)
}

func (o GetInstancePersistenceConfigOutput) RdbSnapshotPeriod() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancePersistenceConfig) string { return v.RdbSnapshotPeriod }).(pulumi.StringOutput)
}

func (o GetInstancePersistenceConfigOutput) RdbSnapshotStartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancePersistenceConfig) string { return v.RdbSnapshotStartTime }).(pulumi.StringOutput)
}

type GetInstancePersistenceConfigArrayOutput struct{ *pulumi.OutputState }

func (GetInstancePersistenceConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancePersistenceConfig)(nil)).Elem()
}

func (o GetInstancePersistenceConfigArrayOutput) ToGetInstancePersistenceConfigArrayOutput() GetInstancePersistenceConfigArrayOutput {
	return o
}

func (o GetInstancePersistenceConfigArrayOutput) ToGetInstancePersistenceConfigArrayOutputWithContext(ctx context.Context) GetInstancePersistenceConfigArrayOutput {
	return o
}

func (o GetInstancePersistenceConfigArrayOutput) Index(i pulumi.IntInput) GetInstancePersistenceConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancePersistenceConfig {
		return vs[0].([]GetInstancePersistenceConfig)[vs[1].(int)]
	}).(GetInstancePersistenceConfigOutput)
}

type GetInstanceServerCaCert struct {
	Cert            string `pulumi:"cert"`
	CreateTime      string `pulumi:"createTime"`
	ExpireTime      string `pulumi:"expireTime"`
	SerialNumber    string `pulumi:"serialNumber"`
	Sha1Fingerprint string `pulumi:"sha1Fingerprint"`
}

// GetInstanceServerCaCertInput is an input type that accepts GetInstanceServerCaCertArgs and GetInstanceServerCaCertOutput values.
// You can construct a concrete instance of `GetInstanceServerCaCertInput` via:
//
//	GetInstanceServerCaCertArgs{...}
type GetInstanceServerCaCertInput interface {
	pulumi.Input

	ToGetInstanceServerCaCertOutput() GetInstanceServerCaCertOutput
	ToGetInstanceServerCaCertOutputWithContext(context.Context) GetInstanceServerCaCertOutput
}

type GetInstanceServerCaCertArgs struct {
	Cert            pulumi.StringInput `pulumi:"cert"`
	CreateTime      pulumi.StringInput `pulumi:"createTime"`
	ExpireTime      pulumi.StringInput `pulumi:"expireTime"`
	SerialNumber    pulumi.StringInput `pulumi:"serialNumber"`
	Sha1Fingerprint pulumi.StringInput `pulumi:"sha1Fingerprint"`
}

func (GetInstanceServerCaCertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceServerCaCert)(nil)).Elem()
}

func (i GetInstanceServerCaCertArgs) ToGetInstanceServerCaCertOutput() GetInstanceServerCaCertOutput {
	return i.ToGetInstanceServerCaCertOutputWithContext(context.Background())
}

func (i GetInstanceServerCaCertArgs) ToGetInstanceServerCaCertOutputWithContext(ctx context.Context) GetInstanceServerCaCertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceServerCaCertOutput)
}

// GetInstanceServerCaCertArrayInput is an input type that accepts GetInstanceServerCaCertArray and GetInstanceServerCaCertArrayOutput values.
// You can construct a concrete instance of `GetInstanceServerCaCertArrayInput` via:
//
//	GetInstanceServerCaCertArray{ GetInstanceServerCaCertArgs{...} }
type GetInstanceServerCaCertArrayInput interface {
	pulumi.Input

	ToGetInstanceServerCaCertArrayOutput() GetInstanceServerCaCertArrayOutput
	ToGetInstanceServerCaCertArrayOutputWithContext(context.Context) GetInstanceServerCaCertArrayOutput
}

type GetInstanceServerCaCertArray []GetInstanceServerCaCertInput

func (GetInstanceServerCaCertArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceServerCaCert)(nil)).Elem()
}

func (i GetInstanceServerCaCertArray) ToGetInstanceServerCaCertArrayOutput() GetInstanceServerCaCertArrayOutput {
	return i.ToGetInstanceServerCaCertArrayOutputWithContext(context.Background())
}

func (i GetInstanceServerCaCertArray) ToGetInstanceServerCaCertArrayOutputWithContext(ctx context.Context) GetInstanceServerCaCertArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceServerCaCertArrayOutput)
}

type GetInstanceServerCaCertOutput struct{ *pulumi.OutputState }

func (GetInstanceServerCaCertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceServerCaCert)(nil)).Elem()
}

func (o GetInstanceServerCaCertOutput) ToGetInstanceServerCaCertOutput() GetInstanceServerCaCertOutput {
	return o
}

func (o GetInstanceServerCaCertOutput) ToGetInstanceServerCaCertOutputWithContext(ctx context.Context) GetInstanceServerCaCertOutput {
	return o
}

func (o GetInstanceServerCaCertOutput) Cert() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceServerCaCert) string { return v.Cert }).(pulumi.StringOutput)
}

func (o GetInstanceServerCaCertOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceServerCaCert) string { return v.CreateTime }).(pulumi.StringOutput)
}

func (o GetInstanceServerCaCertOutput) ExpireTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceServerCaCert) string { return v.ExpireTime }).(pulumi.StringOutput)
}

func (o GetInstanceServerCaCertOutput) SerialNumber() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceServerCaCert) string { return v.SerialNumber }).(pulumi.StringOutput)
}

func (o GetInstanceServerCaCertOutput) Sha1Fingerprint() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceServerCaCert) string { return v.Sha1Fingerprint }).(pulumi.StringOutput)
}

type GetInstanceServerCaCertArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceServerCaCertArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceServerCaCert)(nil)).Elem()
}

func (o GetInstanceServerCaCertArrayOutput) ToGetInstanceServerCaCertArrayOutput() GetInstanceServerCaCertArrayOutput {
	return o
}

func (o GetInstanceServerCaCertArrayOutput) ToGetInstanceServerCaCertArrayOutputWithContext(ctx context.Context) GetInstanceServerCaCertArrayOutput {
	return o
}

func (o GetInstanceServerCaCertArrayOutput) Index(i pulumi.IntInput) GetInstanceServerCaCertOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceServerCaCert {
		return vs[0].([]GetInstanceServerCaCert)[vs[1].(int)]
	}).(GetInstanceServerCaCertOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceMaintenancePolicyInput)(nil)).Elem(), InstanceMaintenancePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceMaintenancePolicyPtrInput)(nil)).Elem(), InstanceMaintenancePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceMaintenancePolicyWeeklyMaintenanceWindowInput)(nil)).Elem(), InstanceMaintenancePolicyWeeklyMaintenanceWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceMaintenancePolicyWeeklyMaintenanceWindowArrayInput)(nil)).Elem(), InstanceMaintenancePolicyWeeklyMaintenanceWindowArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeInput)(nil)).Elem(), InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceMaintenanceScheduleInput)(nil)).Elem(), InstanceMaintenanceScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceMaintenanceSchedulePtrInput)(nil)).Elem(), InstanceMaintenanceScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceNodeInput)(nil)).Elem(), InstanceNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceNodeArrayInput)(nil)).Elem(), InstanceNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancePersistenceConfigInput)(nil)).Elem(), InstancePersistenceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancePersistenceConfigPtrInput)(nil)).Elem(), InstancePersistenceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceServerCaCertInput)(nil)).Elem(), InstanceServerCaCertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceServerCaCertArrayInput)(nil)).Elem(), InstanceServerCaCertArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceMaintenancePolicyInput)(nil)).Elem(), GetInstanceMaintenancePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceMaintenancePolicyArrayInput)(nil)).Elem(), GetInstanceMaintenancePolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceMaintenancePolicyWeeklyMaintenanceWindowInput)(nil)).Elem(), GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayInput)(nil)).Elem(), GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeInput)(nil)).Elem(), GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayInput)(nil)).Elem(), GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceMaintenanceScheduleInput)(nil)).Elem(), GetInstanceMaintenanceScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceMaintenanceScheduleArrayInput)(nil)).Elem(), GetInstanceMaintenanceScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceNodeInput)(nil)).Elem(), GetInstanceNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceNodeArrayInput)(nil)).Elem(), GetInstanceNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancePersistenceConfigInput)(nil)).Elem(), GetInstancePersistenceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancePersistenceConfigArrayInput)(nil)).Elem(), GetInstancePersistenceConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceServerCaCertInput)(nil)).Elem(), GetInstanceServerCaCertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceServerCaCertArrayInput)(nil)).Elem(), GetInstanceServerCaCertArray{})
	pulumi.RegisterOutputType(InstanceMaintenancePolicyOutput{})
	pulumi.RegisterOutputType(InstanceMaintenancePolicyPtrOutput{})
	pulumi.RegisterOutputType(InstanceMaintenancePolicyWeeklyMaintenanceWindowOutput{})
	pulumi.RegisterOutputType(InstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput{})
	pulumi.RegisterOutputType(InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput{})
	pulumi.RegisterOutputType(InstanceMaintenanceScheduleOutput{})
	pulumi.RegisterOutputType(InstanceMaintenanceSchedulePtrOutput{})
	pulumi.RegisterOutputType(InstanceNodeOutput{})
	pulumi.RegisterOutputType(InstanceNodeArrayOutput{})
	pulumi.RegisterOutputType(InstancePersistenceConfigOutput{})
	pulumi.RegisterOutputType(InstancePersistenceConfigPtrOutput{})
	pulumi.RegisterOutputType(InstanceServerCaCertOutput{})
	pulumi.RegisterOutputType(InstanceServerCaCertArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceMaintenancePolicyOutput{})
	pulumi.RegisterOutputType(GetInstanceMaintenancePolicyArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceMaintenancePolicyWeeklyMaintenanceWindowOutput{})
	pulumi.RegisterOutputType(GetInstanceMaintenancePolicyWeeklyMaintenanceWindowArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeOutput{})
	pulumi.RegisterOutputType(GetInstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceMaintenanceScheduleOutput{})
	pulumi.RegisterOutputType(GetInstanceMaintenanceScheduleArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceNodeOutput{})
	pulumi.RegisterOutputType(GetInstanceNodeArrayOutput{})
	pulumi.RegisterOutputType(GetInstancePersistenceConfigOutput{})
	pulumi.RegisterOutputType(GetInstancePersistenceConfigArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceServerCaCertOutput{})
	pulumi.RegisterOutputType(GetInstanceServerCaCertArrayOutput{})
}
