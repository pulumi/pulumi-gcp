// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package redis

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type InstanceServerCaCert struct {
	Cert            *string `pulumi:"cert"`
	CreateTime      *string `pulumi:"createTime"`
	ExpireTime      *string `pulumi:"expireTime"`
	SerialNumber    *string `pulumi:"serialNumber"`
	Sha1Fingerprint *string `pulumi:"sha1Fingerprint"`
}

// InstanceServerCaCertInput is an input type that accepts InstanceServerCaCertArgs and InstanceServerCaCertOutput values.
// You can construct a concrete instance of `InstanceServerCaCertInput` via:
//
//          InstanceServerCaCertArgs{...}
type InstanceServerCaCertInput interface {
	pulumi.Input

	ToInstanceServerCaCertOutput() InstanceServerCaCertOutput
	ToInstanceServerCaCertOutputWithContext(context.Context) InstanceServerCaCertOutput
}

type InstanceServerCaCertArgs struct {
	Cert            pulumi.StringPtrInput `pulumi:"cert"`
	CreateTime      pulumi.StringPtrInput `pulumi:"createTime"`
	ExpireTime      pulumi.StringPtrInput `pulumi:"expireTime"`
	SerialNumber    pulumi.StringPtrInput `pulumi:"serialNumber"`
	Sha1Fingerprint pulumi.StringPtrInput `pulumi:"sha1Fingerprint"`
}

func (InstanceServerCaCertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceServerCaCert)(nil)).Elem()
}

func (i InstanceServerCaCertArgs) ToInstanceServerCaCertOutput() InstanceServerCaCertOutput {
	return i.ToInstanceServerCaCertOutputWithContext(context.Background())
}

func (i InstanceServerCaCertArgs) ToInstanceServerCaCertOutputWithContext(ctx context.Context) InstanceServerCaCertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceServerCaCertOutput)
}

// InstanceServerCaCertArrayInput is an input type that accepts InstanceServerCaCertArray and InstanceServerCaCertArrayOutput values.
// You can construct a concrete instance of `InstanceServerCaCertArrayInput` via:
//
//          InstanceServerCaCertArray{ InstanceServerCaCertArgs{...} }
type InstanceServerCaCertArrayInput interface {
	pulumi.Input

	ToInstanceServerCaCertArrayOutput() InstanceServerCaCertArrayOutput
	ToInstanceServerCaCertArrayOutputWithContext(context.Context) InstanceServerCaCertArrayOutput
}

type InstanceServerCaCertArray []InstanceServerCaCertInput

func (InstanceServerCaCertArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceServerCaCert)(nil)).Elem()
}

func (i InstanceServerCaCertArray) ToInstanceServerCaCertArrayOutput() InstanceServerCaCertArrayOutput {
	return i.ToInstanceServerCaCertArrayOutputWithContext(context.Background())
}

func (i InstanceServerCaCertArray) ToInstanceServerCaCertArrayOutputWithContext(ctx context.Context) InstanceServerCaCertArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceServerCaCertArrayOutput)
}

type InstanceServerCaCertOutput struct{ *pulumi.OutputState }

func (InstanceServerCaCertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceServerCaCert)(nil)).Elem()
}

func (o InstanceServerCaCertOutput) ToInstanceServerCaCertOutput() InstanceServerCaCertOutput {
	return o
}

func (o InstanceServerCaCertOutput) ToInstanceServerCaCertOutputWithContext(ctx context.Context) InstanceServerCaCertOutput {
	return o
}

func (o InstanceServerCaCertOutput) Cert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceServerCaCert) *string { return v.Cert }).(pulumi.StringPtrOutput)
}

func (o InstanceServerCaCertOutput) CreateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceServerCaCert) *string { return v.CreateTime }).(pulumi.StringPtrOutput)
}

func (o InstanceServerCaCertOutput) ExpireTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceServerCaCert) *string { return v.ExpireTime }).(pulumi.StringPtrOutput)
}

func (o InstanceServerCaCertOutput) SerialNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceServerCaCert) *string { return v.SerialNumber }).(pulumi.StringPtrOutput)
}

func (o InstanceServerCaCertOutput) Sha1Fingerprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceServerCaCert) *string { return v.Sha1Fingerprint }).(pulumi.StringPtrOutput)
}

type InstanceServerCaCertArrayOutput struct{ *pulumi.OutputState }

func (InstanceServerCaCertArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceServerCaCert)(nil)).Elem()
}

func (o InstanceServerCaCertArrayOutput) ToInstanceServerCaCertArrayOutput() InstanceServerCaCertArrayOutput {
	return o
}

func (o InstanceServerCaCertArrayOutput) ToInstanceServerCaCertArrayOutputWithContext(ctx context.Context) InstanceServerCaCertArrayOutput {
	return o
}

func (o InstanceServerCaCertArrayOutput) Index(i pulumi.IntInput) InstanceServerCaCertOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceServerCaCert {
		return vs[0].([]InstanceServerCaCert)[vs[1].(int)]
	}).(InstanceServerCaCertOutput)
}

type GetInstanceServerCaCert struct {
	Cert            string `pulumi:"cert"`
	CreateTime      string `pulumi:"createTime"`
	ExpireTime      string `pulumi:"expireTime"`
	SerialNumber    string `pulumi:"serialNumber"`
	Sha1Fingerprint string `pulumi:"sha1Fingerprint"`
}

// GetInstanceServerCaCertInput is an input type that accepts GetInstanceServerCaCertArgs and GetInstanceServerCaCertOutput values.
// You can construct a concrete instance of `GetInstanceServerCaCertInput` via:
//
//          GetInstanceServerCaCertArgs{...}
type GetInstanceServerCaCertInput interface {
	pulumi.Input

	ToGetInstanceServerCaCertOutput() GetInstanceServerCaCertOutput
	ToGetInstanceServerCaCertOutputWithContext(context.Context) GetInstanceServerCaCertOutput
}

type GetInstanceServerCaCertArgs struct {
	Cert            pulumi.StringInput `pulumi:"cert"`
	CreateTime      pulumi.StringInput `pulumi:"createTime"`
	ExpireTime      pulumi.StringInput `pulumi:"expireTime"`
	SerialNumber    pulumi.StringInput `pulumi:"serialNumber"`
	Sha1Fingerprint pulumi.StringInput `pulumi:"sha1Fingerprint"`
}

func (GetInstanceServerCaCertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceServerCaCert)(nil)).Elem()
}

func (i GetInstanceServerCaCertArgs) ToGetInstanceServerCaCertOutput() GetInstanceServerCaCertOutput {
	return i.ToGetInstanceServerCaCertOutputWithContext(context.Background())
}

func (i GetInstanceServerCaCertArgs) ToGetInstanceServerCaCertOutputWithContext(ctx context.Context) GetInstanceServerCaCertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceServerCaCertOutput)
}

// GetInstanceServerCaCertArrayInput is an input type that accepts GetInstanceServerCaCertArray and GetInstanceServerCaCertArrayOutput values.
// You can construct a concrete instance of `GetInstanceServerCaCertArrayInput` via:
//
//          GetInstanceServerCaCertArray{ GetInstanceServerCaCertArgs{...} }
type GetInstanceServerCaCertArrayInput interface {
	pulumi.Input

	ToGetInstanceServerCaCertArrayOutput() GetInstanceServerCaCertArrayOutput
	ToGetInstanceServerCaCertArrayOutputWithContext(context.Context) GetInstanceServerCaCertArrayOutput
}

type GetInstanceServerCaCertArray []GetInstanceServerCaCertInput

func (GetInstanceServerCaCertArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceServerCaCert)(nil)).Elem()
}

func (i GetInstanceServerCaCertArray) ToGetInstanceServerCaCertArrayOutput() GetInstanceServerCaCertArrayOutput {
	return i.ToGetInstanceServerCaCertArrayOutputWithContext(context.Background())
}

func (i GetInstanceServerCaCertArray) ToGetInstanceServerCaCertArrayOutputWithContext(ctx context.Context) GetInstanceServerCaCertArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceServerCaCertArrayOutput)
}

type GetInstanceServerCaCertOutput struct{ *pulumi.OutputState }

func (GetInstanceServerCaCertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceServerCaCert)(nil)).Elem()
}

func (o GetInstanceServerCaCertOutput) ToGetInstanceServerCaCertOutput() GetInstanceServerCaCertOutput {
	return o
}

func (o GetInstanceServerCaCertOutput) ToGetInstanceServerCaCertOutputWithContext(ctx context.Context) GetInstanceServerCaCertOutput {
	return o
}

func (o GetInstanceServerCaCertOutput) Cert() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceServerCaCert) string { return v.Cert }).(pulumi.StringOutput)
}

func (o GetInstanceServerCaCertOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceServerCaCert) string { return v.CreateTime }).(pulumi.StringOutput)
}

func (o GetInstanceServerCaCertOutput) ExpireTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceServerCaCert) string { return v.ExpireTime }).(pulumi.StringOutput)
}

func (o GetInstanceServerCaCertOutput) SerialNumber() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceServerCaCert) string { return v.SerialNumber }).(pulumi.StringOutput)
}

func (o GetInstanceServerCaCertOutput) Sha1Fingerprint() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceServerCaCert) string { return v.Sha1Fingerprint }).(pulumi.StringOutput)
}

type GetInstanceServerCaCertArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceServerCaCertArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceServerCaCert)(nil)).Elem()
}

func (o GetInstanceServerCaCertArrayOutput) ToGetInstanceServerCaCertArrayOutput() GetInstanceServerCaCertArrayOutput {
	return o
}

func (o GetInstanceServerCaCertArrayOutput) ToGetInstanceServerCaCertArrayOutputWithContext(ctx context.Context) GetInstanceServerCaCertArrayOutput {
	return o
}

func (o GetInstanceServerCaCertArrayOutput) Index(i pulumi.IntInput) GetInstanceServerCaCertOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceServerCaCert {
		return vs[0].([]GetInstanceServerCaCert)[vs[1].(int)]
	}).(GetInstanceServerCaCertOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceServerCaCertInput)(nil)).Elem(), InstanceServerCaCertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceServerCaCertArrayInput)(nil)).Elem(), InstanceServerCaCertArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceServerCaCertInput)(nil)).Elem(), GetInstanceServerCaCertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceServerCaCertArrayInput)(nil)).Elem(), GetInstanceServerCaCertArray{})
	pulumi.RegisterOutputType(InstanceServerCaCertOutput{})
	pulumi.RegisterOutputType(InstanceServerCaCertArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceServerCaCertOutput{})
	pulumi.RegisterOutputType(GetInstanceServerCaCertArrayOutput{})
}
