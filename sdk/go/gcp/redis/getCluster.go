// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package redis

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get information about a Redis Cluster. For more details, see the [API documentation](https://cloud.google.com/memorystore/docs/cluster/reference/rest/v1/projects.locations.clusters).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/redis"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := redis.LookupCluster(ctx, &redis.LookupClusterArgs{
//				Name:   "my-redis-cluster",
//				Region: pulumi.StringRef("us-central1"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupCluster(ctx *pulumi.Context, args *LookupClusterArgs, opts ...pulumi.InvokeOption) (*LookupClusterResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupClusterResult
	err := ctx.Invoke("gcp:redis/getCluster:getCluster", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCluster.
type LookupClusterArgs struct {
	// The name of the Redis cluster.
	Name string `pulumi:"name"`
	// (optional)
	// The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// The region of the Redis cluster.
	Region *string `pulumi:"region"`
}

// A collection of values returned by getCluster.
type LookupClusterResult struct {
	AuthorizationMode              string                                    `pulumi:"authorizationMode"`
	AutomatedBackupConfigs         []GetClusterAutomatedBackupConfig         `pulumi:"automatedBackupConfigs"`
	BackupCollection               string                                    `pulumi:"backupCollection"`
	CreateTime                     string                                    `pulumi:"createTime"`
	CrossClusterReplicationConfigs []GetClusterCrossClusterReplicationConfig `pulumi:"crossClusterReplicationConfigs"`
	DeletionProtectionEnabled      bool                                      `pulumi:"deletionProtectionEnabled"`
	DiscoveryEndpoints             []GetClusterDiscoveryEndpoint             `pulumi:"discoveryEndpoints"`
	GcsSources                     []GetClusterGcsSource                     `pulumi:"gcsSources"`
	// The provider-assigned unique ID for this managed resource.
	Id                      string                             `pulumi:"id"`
	KmsKey                  string                             `pulumi:"kmsKey"`
	MaintenancePolicies     []GetClusterMaintenancePolicy      `pulumi:"maintenancePolicies"`
	MaintenanceSchedules    []GetClusterMaintenanceSchedule    `pulumi:"maintenanceSchedules"`
	ManagedBackupSources    []GetClusterManagedBackupSource    `pulumi:"managedBackupSources"`
	ManagedServerCas        []GetClusterManagedServerCa        `pulumi:"managedServerCas"`
	Name                    string                             `pulumi:"name"`
	NodeType                string                             `pulumi:"nodeType"`
	PersistenceConfigs      []GetClusterPersistenceConfig      `pulumi:"persistenceConfigs"`
	PreciseSizeGb           float64                            `pulumi:"preciseSizeGb"`
	Project                 *string                            `pulumi:"project"`
	PscConfigs              []GetClusterPscConfig              `pulumi:"pscConfigs"`
	PscConnections          []GetClusterPscConnection          `pulumi:"pscConnections"`
	PscServiceAttachments   []GetClusterPscServiceAttachment   `pulumi:"pscServiceAttachments"`
	RedisConfigs            map[string]string                  `pulumi:"redisConfigs"`
	Region                  *string                            `pulumi:"region"`
	ReplicaCount            int                                `pulumi:"replicaCount"`
	ShardCount              int                                `pulumi:"shardCount"`
	SizeGb                  int                                `pulumi:"sizeGb"`
	State                   string                             `pulumi:"state"`
	StateInfos              []GetClusterStateInfo              `pulumi:"stateInfos"`
	TransitEncryptionMode   string                             `pulumi:"transitEncryptionMode"`
	Uid                     string                             `pulumi:"uid"`
	ZoneDistributionConfigs []GetClusterZoneDistributionConfig `pulumi:"zoneDistributionConfigs"`
}

func LookupClusterOutput(ctx *pulumi.Context, args LookupClusterOutputArgs, opts ...pulumi.InvokeOption) LookupClusterResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupClusterResultOutput, error) {
			args := v.(LookupClusterArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("gcp:redis/getCluster:getCluster", args, LookupClusterResultOutput{}, options).(LookupClusterResultOutput), nil
		}).(LookupClusterResultOutput)
}

// A collection of arguments for invoking getCluster.
type LookupClusterOutputArgs struct {
	// The name of the Redis cluster.
	Name pulumi.StringInput `pulumi:"name"`
	// (optional)
	// The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput `pulumi:"project"`
	// The region of the Redis cluster.
	Region pulumi.StringPtrInput `pulumi:"region"`
}

func (LookupClusterOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupClusterArgs)(nil)).Elem()
}

// A collection of values returned by getCluster.
type LookupClusterResultOutput struct{ *pulumi.OutputState }

func (LookupClusterResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupClusterResult)(nil)).Elem()
}

func (o LookupClusterResultOutput) ToLookupClusterResultOutput() LookupClusterResultOutput {
	return o
}

func (o LookupClusterResultOutput) ToLookupClusterResultOutputWithContext(ctx context.Context) LookupClusterResultOutput {
	return o
}

func (o LookupClusterResultOutput) AuthorizationMode() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.AuthorizationMode }).(pulumi.StringOutput)
}

func (o LookupClusterResultOutput) AutomatedBackupConfigs() GetClusterAutomatedBackupConfigArrayOutput {
	return o.ApplyT(func(v LookupClusterResult) []GetClusterAutomatedBackupConfig { return v.AutomatedBackupConfigs }).(GetClusterAutomatedBackupConfigArrayOutput)
}

func (o LookupClusterResultOutput) BackupCollection() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.BackupCollection }).(pulumi.StringOutput)
}

func (o LookupClusterResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

func (o LookupClusterResultOutput) CrossClusterReplicationConfigs() GetClusterCrossClusterReplicationConfigArrayOutput {
	return o.ApplyT(func(v LookupClusterResult) []GetClusterCrossClusterReplicationConfig {
		return v.CrossClusterReplicationConfigs
	}).(GetClusterCrossClusterReplicationConfigArrayOutput)
}

func (o LookupClusterResultOutput) DeletionProtectionEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupClusterResult) bool { return v.DeletionProtectionEnabled }).(pulumi.BoolOutput)
}

func (o LookupClusterResultOutput) DiscoveryEndpoints() GetClusterDiscoveryEndpointArrayOutput {
	return o.ApplyT(func(v LookupClusterResult) []GetClusterDiscoveryEndpoint { return v.DiscoveryEndpoints }).(GetClusterDiscoveryEndpointArrayOutput)
}

func (o LookupClusterResultOutput) GcsSources() GetClusterGcsSourceArrayOutput {
	return o.ApplyT(func(v LookupClusterResult) []GetClusterGcsSource { return v.GcsSources }).(GetClusterGcsSourceArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupClusterResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupClusterResultOutput) KmsKey() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.KmsKey }).(pulumi.StringOutput)
}

func (o LookupClusterResultOutput) MaintenancePolicies() GetClusterMaintenancePolicyArrayOutput {
	return o.ApplyT(func(v LookupClusterResult) []GetClusterMaintenancePolicy { return v.MaintenancePolicies }).(GetClusterMaintenancePolicyArrayOutput)
}

func (o LookupClusterResultOutput) MaintenanceSchedules() GetClusterMaintenanceScheduleArrayOutput {
	return o.ApplyT(func(v LookupClusterResult) []GetClusterMaintenanceSchedule { return v.MaintenanceSchedules }).(GetClusterMaintenanceScheduleArrayOutput)
}

func (o LookupClusterResultOutput) ManagedBackupSources() GetClusterManagedBackupSourceArrayOutput {
	return o.ApplyT(func(v LookupClusterResult) []GetClusterManagedBackupSource { return v.ManagedBackupSources }).(GetClusterManagedBackupSourceArrayOutput)
}

func (o LookupClusterResultOutput) ManagedServerCas() GetClusterManagedServerCaArrayOutput {
	return o.ApplyT(func(v LookupClusterResult) []GetClusterManagedServerCa { return v.ManagedServerCas }).(GetClusterManagedServerCaArrayOutput)
}

func (o LookupClusterResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupClusterResultOutput) NodeType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.NodeType }).(pulumi.StringOutput)
}

func (o LookupClusterResultOutput) PersistenceConfigs() GetClusterPersistenceConfigArrayOutput {
	return o.ApplyT(func(v LookupClusterResult) []GetClusterPersistenceConfig { return v.PersistenceConfigs }).(GetClusterPersistenceConfigArrayOutput)
}

func (o LookupClusterResultOutput) PreciseSizeGb() pulumi.Float64Output {
	return o.ApplyT(func(v LookupClusterResult) float64 { return v.PreciseSizeGb }).(pulumi.Float64Output)
}

func (o LookupClusterResultOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupClusterResult) *string { return v.Project }).(pulumi.StringPtrOutput)
}

func (o LookupClusterResultOutput) PscConfigs() GetClusterPscConfigArrayOutput {
	return o.ApplyT(func(v LookupClusterResult) []GetClusterPscConfig { return v.PscConfigs }).(GetClusterPscConfigArrayOutput)
}

func (o LookupClusterResultOutput) PscConnections() GetClusterPscConnectionArrayOutput {
	return o.ApplyT(func(v LookupClusterResult) []GetClusterPscConnection { return v.PscConnections }).(GetClusterPscConnectionArrayOutput)
}

func (o LookupClusterResultOutput) PscServiceAttachments() GetClusterPscServiceAttachmentArrayOutput {
	return o.ApplyT(func(v LookupClusterResult) []GetClusterPscServiceAttachment { return v.PscServiceAttachments }).(GetClusterPscServiceAttachmentArrayOutput)
}

func (o LookupClusterResultOutput) RedisConfigs() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupClusterResult) map[string]string { return v.RedisConfigs }).(pulumi.StringMapOutput)
}

func (o LookupClusterResultOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupClusterResult) *string { return v.Region }).(pulumi.StringPtrOutput)
}

func (o LookupClusterResultOutput) ReplicaCount() pulumi.IntOutput {
	return o.ApplyT(func(v LookupClusterResult) int { return v.ReplicaCount }).(pulumi.IntOutput)
}

func (o LookupClusterResultOutput) ShardCount() pulumi.IntOutput {
	return o.ApplyT(func(v LookupClusterResult) int { return v.ShardCount }).(pulumi.IntOutput)
}

func (o LookupClusterResultOutput) SizeGb() pulumi.IntOutput {
	return o.ApplyT(func(v LookupClusterResult) int { return v.SizeGb }).(pulumi.IntOutput)
}

func (o LookupClusterResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.State }).(pulumi.StringOutput)
}

func (o LookupClusterResultOutput) StateInfos() GetClusterStateInfoArrayOutput {
	return o.ApplyT(func(v LookupClusterResult) []GetClusterStateInfo { return v.StateInfos }).(GetClusterStateInfoArrayOutput)
}

func (o LookupClusterResultOutput) TransitEncryptionMode() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.TransitEncryptionMode }).(pulumi.StringOutput)
}

func (o LookupClusterResultOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.Uid }).(pulumi.StringOutput)
}

func (o LookupClusterResultOutput) ZoneDistributionConfigs() GetClusterZoneDistributionConfigArrayOutput {
	return o.ApplyT(func(v LookupClusterResult) []GetClusterZoneDistributionConfig { return v.ZoneDistributionConfigs }).(GetClusterZoneDistributionConfigArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupClusterResultOutput{})
}
