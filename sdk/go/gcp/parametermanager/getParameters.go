// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package parametermanager

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to list the Parameter Manager Parameters.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/parametermanager"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := parametermanager.GetParameters(ctx, &parametermanager.GetParametersArgs{}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetParameters(ctx *pulumi.Context, args *GetParametersArgs, opts ...pulumi.InvokeOption) (*GetParametersResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetParametersResult
	err := ctx.Invoke("gcp:parametermanager/getParameters:getParameters", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getParameters.
type GetParametersArgs struct {
	// Filter string, adhering to the rules in List-operation filtering. List only parameters matching the filter. If filter is empty, all parameters are listed.
	Filter *string `pulumi:"filter"`
	// The ID of the project.
	Project *string `pulumi:"project"`
}

// A collection of values returned by getParameters.
type GetParametersResult struct {
	Filter *string `pulumi:"filter"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A list of parameters matching the filter. Structure is defined below.
	Parameters []GetParametersParameter `pulumi:"parameters"`
	// The ID of the project in which the resource belongs.
	Project string `pulumi:"project"`
}

func GetParametersOutput(ctx *pulumi.Context, args GetParametersOutputArgs, opts ...pulumi.InvokeOption) GetParametersResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetParametersResultOutput, error) {
			args := v.(GetParametersArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("gcp:parametermanager/getParameters:getParameters", args, GetParametersResultOutput{}, options).(GetParametersResultOutput), nil
		}).(GetParametersResultOutput)
}

// A collection of arguments for invoking getParameters.
type GetParametersOutputArgs struct {
	// Filter string, adhering to the rules in List-operation filtering. List only parameters matching the filter. If filter is empty, all parameters are listed.
	Filter pulumi.StringPtrInput `pulumi:"filter"`
	// The ID of the project.
	Project pulumi.StringPtrInput `pulumi:"project"`
}

func (GetParametersOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetParametersArgs)(nil)).Elem()
}

// A collection of values returned by getParameters.
type GetParametersResultOutput struct{ *pulumi.OutputState }

func (GetParametersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetParametersResult)(nil)).Elem()
}

func (o GetParametersResultOutput) ToGetParametersResultOutput() GetParametersResultOutput {
	return o
}

func (o GetParametersResultOutput) ToGetParametersResultOutputWithContext(ctx context.Context) GetParametersResultOutput {
	return o
}

func (o GetParametersResultOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetParametersResult) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetParametersResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetParametersResult) string { return v.Id }).(pulumi.StringOutput)
}

// A list of parameters matching the filter. Structure is defined below.
func (o GetParametersResultOutput) Parameters() GetParametersParameterArrayOutput {
	return o.ApplyT(func(v GetParametersResult) []GetParametersParameter { return v.Parameters }).(GetParametersParameterArrayOutput)
}

// The ID of the project in which the resource belongs.
func (o GetParametersResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v GetParametersResult) string { return v.Project }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetParametersResultOutput{})
}
