// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package parametermanager

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/parametermanager"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := parametermanager.LookupRegionalParameter(ctx, &parametermanager.LookupRegionalParameterArgs{
//				ParameterId: "foobar",
//				Location:    "us-central1",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupRegionalParameter(ctx *pulumi.Context, args *LookupRegionalParameterArgs, opts ...pulumi.InvokeOption) (*LookupRegionalParameterResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupRegionalParameterResult
	err := ctx.Invoke("gcp:parametermanager/getRegionalParameter:getRegionalParameter", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRegionalParameter.
type LookupRegionalParameterArgs struct {
	// The location of the regional parameter. eg us-central1
	Location string `pulumi:"location"`
	// The name of the regional parameter.
	ParameterId string `pulumi:"parameterId"`
	// The ID of the project in which the resource belongs.
	Project *string `pulumi:"project"`
}

// A collection of values returned by getRegionalParameter.
type LookupRegionalParameterResult struct {
	CreateTime      string            `pulumi:"createTime"`
	EffectiveLabels map[string]string `pulumi:"effectiveLabels"`
	Format          string            `pulumi:"format"`
	// The provider-assigned unique ID for this managed resource.
	Id            string                             `pulumi:"id"`
	Labels        map[string]string                  `pulumi:"labels"`
	Location      string                             `pulumi:"location"`
	Name          string                             `pulumi:"name"`
	ParameterId   string                             `pulumi:"parameterId"`
	PolicyMembers []GetRegionalParameterPolicyMember `pulumi:"policyMembers"`
	Project       *string                            `pulumi:"project"`
	PulumiLabels  map[string]string                  `pulumi:"pulumiLabels"`
	UpdateTime    string                             `pulumi:"updateTime"`
}

func LookupRegionalParameterOutput(ctx *pulumi.Context, args LookupRegionalParameterOutputArgs, opts ...pulumi.InvokeOption) LookupRegionalParameterResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupRegionalParameterResultOutput, error) {
			args := v.(LookupRegionalParameterArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("gcp:parametermanager/getRegionalParameter:getRegionalParameter", args, LookupRegionalParameterResultOutput{}, options).(LookupRegionalParameterResultOutput), nil
		}).(LookupRegionalParameterResultOutput)
}

// A collection of arguments for invoking getRegionalParameter.
type LookupRegionalParameterOutputArgs struct {
	// The location of the regional parameter. eg us-central1
	Location pulumi.StringInput `pulumi:"location"`
	// The name of the regional parameter.
	ParameterId pulumi.StringInput `pulumi:"parameterId"`
	// The ID of the project in which the resource belongs.
	Project pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupRegionalParameterOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRegionalParameterArgs)(nil)).Elem()
}

// A collection of values returned by getRegionalParameter.
type LookupRegionalParameterResultOutput struct{ *pulumi.OutputState }

func (LookupRegionalParameterResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRegionalParameterResult)(nil)).Elem()
}

func (o LookupRegionalParameterResultOutput) ToLookupRegionalParameterResultOutput() LookupRegionalParameterResultOutput {
	return o
}

func (o LookupRegionalParameterResultOutput) ToLookupRegionalParameterResultOutputWithContext(ctx context.Context) LookupRegionalParameterResultOutput {
	return o
}

func (o LookupRegionalParameterResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegionalParameterResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

func (o LookupRegionalParameterResultOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupRegionalParameterResult) map[string]string { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

func (o LookupRegionalParameterResultOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegionalParameterResult) string { return v.Format }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupRegionalParameterResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegionalParameterResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupRegionalParameterResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupRegionalParameterResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

func (o LookupRegionalParameterResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegionalParameterResult) string { return v.Location }).(pulumi.StringOutput)
}

func (o LookupRegionalParameterResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegionalParameterResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupRegionalParameterResultOutput) ParameterId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegionalParameterResult) string { return v.ParameterId }).(pulumi.StringOutput)
}

func (o LookupRegionalParameterResultOutput) PolicyMembers() GetRegionalParameterPolicyMemberArrayOutput {
	return o.ApplyT(func(v LookupRegionalParameterResult) []GetRegionalParameterPolicyMember { return v.PolicyMembers }).(GetRegionalParameterPolicyMemberArrayOutput)
}

func (o LookupRegionalParameterResultOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRegionalParameterResult) *string { return v.Project }).(pulumi.StringPtrOutput)
}

func (o LookupRegionalParameterResultOutput) PulumiLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupRegionalParameterResult) map[string]string { return v.PulumiLabels }).(pulumi.StringMapOutput)
}

func (o LookupRegionalParameterResultOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegionalParameterResult) string { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRegionalParameterResultOutput{})
}
