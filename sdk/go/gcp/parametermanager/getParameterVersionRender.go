// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package parametermanager

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/parametermanager"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := parametermanager.GetParameterVersionRender(ctx, &parametermanager.GetParameterVersionRenderArgs{
//				Parameter:          "test-parameter",
//				ParameterVersionId: "test-parameter-version",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetParameterVersionRender(ctx *pulumi.Context, args *GetParameterVersionRenderArgs, opts ...pulumi.InvokeOption) (*GetParameterVersionRenderResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetParameterVersionRenderResult
	err := ctx.Invoke("gcp:parametermanager/getParameterVersionRender:getParameterVersionRender", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getParameterVersionRender.
type GetParameterVersionRenderArgs struct {
	// The Parameter for obtaining the Parameter Version.
	// This can be either the reference of the parameter as in `projects/{{project}}/locations/global/parameters/{{parameter_id}}` or only the name of the parameter as in `{{parameter_id}}`.
	Parameter string `pulumi:"parameter"`
	// The version of the parameter to get.
	ParameterVersionId string `pulumi:"parameterVersionId"`
	// The project for retrieving the Parameter Version. If it's not specified,
	// the provider project will be used.
	Project *string `pulumi:"project"`
}

// A collection of values returned by getParameterVersionRender.
type GetParameterVersionRenderResult struct {
	// The current state of the Parameter Version.
	Disabled bool `pulumi:"disabled"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The resource name of the ParameterVersion. Format:
	// `projects/{{project}}/locations/global/parameters/{{parameter_id}}/versions/{{parameter_version_id}}`
	Name      string `pulumi:"name"`
	Parameter string `pulumi:"parameter"`
	// The Parameter data.
	ParameterData      string `pulumi:"parameterData"`
	ParameterVersionId string `pulumi:"parameterVersionId"`
	Project            string `pulumi:"project"`
	// The Rendered Parameter Data specifies that if you use `__REF__()` to reference a secret and the format is JSON or YAML, the placeholder `__REF__()` will be replaced with the actual secret value. However, if the format is UNFORMATTED, it will stay the same as the original `parameterData`.
	RenderedParameterData string `pulumi:"renderedParameterData"`
}

func GetParameterVersionRenderOutput(ctx *pulumi.Context, args GetParameterVersionRenderOutputArgs, opts ...pulumi.InvokeOption) GetParameterVersionRenderResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetParameterVersionRenderResultOutput, error) {
			args := v.(GetParameterVersionRenderArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("gcp:parametermanager/getParameterVersionRender:getParameterVersionRender", args, GetParameterVersionRenderResultOutput{}, options).(GetParameterVersionRenderResultOutput), nil
		}).(GetParameterVersionRenderResultOutput)
}

// A collection of arguments for invoking getParameterVersionRender.
type GetParameterVersionRenderOutputArgs struct {
	// The Parameter for obtaining the Parameter Version.
	// This can be either the reference of the parameter as in `projects/{{project}}/locations/global/parameters/{{parameter_id}}` or only the name of the parameter as in `{{parameter_id}}`.
	Parameter pulumi.StringInput `pulumi:"parameter"`
	// The version of the parameter to get.
	ParameterVersionId pulumi.StringInput `pulumi:"parameterVersionId"`
	// The project for retrieving the Parameter Version. If it's not specified,
	// the provider project will be used.
	Project pulumi.StringPtrInput `pulumi:"project"`
}

func (GetParameterVersionRenderOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetParameterVersionRenderArgs)(nil)).Elem()
}

// A collection of values returned by getParameterVersionRender.
type GetParameterVersionRenderResultOutput struct{ *pulumi.OutputState }

func (GetParameterVersionRenderResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetParameterVersionRenderResult)(nil)).Elem()
}

func (o GetParameterVersionRenderResultOutput) ToGetParameterVersionRenderResultOutput() GetParameterVersionRenderResultOutput {
	return o
}

func (o GetParameterVersionRenderResultOutput) ToGetParameterVersionRenderResultOutputWithContext(ctx context.Context) GetParameterVersionRenderResultOutput {
	return o
}

// The current state of the Parameter Version.
func (o GetParameterVersionRenderResultOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetParameterVersionRenderResult) bool { return v.Disabled }).(pulumi.BoolOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetParameterVersionRenderResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetParameterVersionRenderResult) string { return v.Id }).(pulumi.StringOutput)
}

// The resource name of the ParameterVersion. Format:
// `projects/{{project}}/locations/global/parameters/{{parameter_id}}/versions/{{parameter_version_id}}`
func (o GetParameterVersionRenderResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetParameterVersionRenderResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetParameterVersionRenderResultOutput) Parameter() pulumi.StringOutput {
	return o.ApplyT(func(v GetParameterVersionRenderResult) string { return v.Parameter }).(pulumi.StringOutput)
}

// The Parameter data.
func (o GetParameterVersionRenderResultOutput) ParameterData() pulumi.StringOutput {
	return o.ApplyT(func(v GetParameterVersionRenderResult) string { return v.ParameterData }).(pulumi.StringOutput)
}

func (o GetParameterVersionRenderResultOutput) ParameterVersionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetParameterVersionRenderResult) string { return v.ParameterVersionId }).(pulumi.StringOutput)
}

func (o GetParameterVersionRenderResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v GetParameterVersionRenderResult) string { return v.Project }).(pulumi.StringOutput)
}

// The Rendered Parameter Data specifies that if you use `__REF__()` to reference a secret and the format is JSON or YAML, the placeholder `__REF__()` will be replaced with the actual secret value. However, if the format is UNFORMATTED, it will stay the same as the original `parameterData`.
func (o GetParameterVersionRenderResultOutput) RenderedParameterData() pulumi.StringOutput {
	return o.ApplyT(func(v GetParameterVersionRenderResult) string { return v.RenderedParameterData }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetParameterVersionRenderResultOutput{})
}
