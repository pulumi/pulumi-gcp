// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package parametermanager

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ### Parameter Version Basic
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/parametermanager"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := parametermanager.NewParameter(ctx, "parameter-basic", &parametermanager.ParameterArgs{
//				ParameterId: pulumi.String("parameter"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = parametermanager.NewParameterVersion(ctx, "parameter-version-basic", &parametermanager.ParameterVersionArgs{
//				Parameter:          parameter_basic.ID(),
//				ParameterVersionId: pulumi.String("parameter_version"),
//				ParameterData:      pulumi.String("app-parameter-version-data"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Parameter Version With Json Format
//
// ```go
// package main
//
// import (
//
//	"encoding/json"
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/parametermanager"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := parametermanager.NewParameter(ctx, "parameter-basic", &parametermanager.ParameterArgs{
//				ParameterId: pulumi.String("parameter"),
//				Format:      pulumi.String("JSON"),
//			})
//			if err != nil {
//				return err
//			}
//			tmpJSON0, err := json.Marshal(map[string]interface{}{
//				"key1": "val1",
//				"key2": "val2",
//			})
//			if err != nil {
//				return err
//			}
//			json0 := string(tmpJSON0)
//			_, err = parametermanager.NewParameterVersion(ctx, "parameter-version-with-json-format", &parametermanager.ParameterVersionArgs{
//				Parameter:          parameter_basic.ID(),
//				ParameterVersionId: pulumi.String("parameter_version"),
//				ParameterData:      pulumi.String(json0),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ## Import
//
// ParameterVersion can be imported using any of these accepted formats:
//
// * `projects/{{project}}/locations/global/parameters/{{parameter_id}}/versions/{{parameter_version_id}}`
//
// When using the `pulumi import` command, ParameterVersion can be imported using one of the formats above. For example:
//
// ```sh
// $ pulumi import gcp:parametermanager/parameterVersion:ParameterVersion default projects/{{project}}/locations/global/parameters/{{parameter_id}}/versions/{{parameter_version_id}}
// ```
type ParameterVersion struct {
	pulumi.CustomResourceState

	// The time at which the Parameter Version was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// The current state of Parameter Version. This field is only applicable for updating Parameter Version.
	Disabled pulumi.BoolPtrOutput `pulumi:"disabled"`
	// The resource name of the Parameter Version. Format:
	// `projects/{{project}}/locations/global/parameters/{{parameter_id}}/versions/{{parameter_version_id}}`
	Name pulumi.StringOutput `pulumi:"name"`
	// Parameter Manager Parameter resource.
	Parameter pulumi.StringOutput `pulumi:"parameter"`
	// The Parameter data.
	// **Note**: This property is sensitive and will not be displayed in the plan.
	ParameterData pulumi.StringOutput `pulumi:"parameterData"`
	// Version ID of the Parameter Version Resource. This must be unique within the Parameter.
	//
	// ***
	ParameterVersionId pulumi.StringOutput `pulumi:"parameterVersionId"`
	// The time at which the Parameter Version was updated.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewParameterVersion registers a new resource with the given unique name, arguments, and options.
func NewParameterVersion(ctx *pulumi.Context,
	name string, args *ParameterVersionArgs, opts ...pulumi.ResourceOption) (*ParameterVersion, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Parameter == nil {
		return nil, errors.New("invalid value for required argument 'Parameter'")
	}
	if args.ParameterData == nil {
		return nil, errors.New("invalid value for required argument 'ParameterData'")
	}
	if args.ParameterVersionId == nil {
		return nil, errors.New("invalid value for required argument 'ParameterVersionId'")
	}
	if args.ParameterData != nil {
		args.ParameterData = pulumi.ToSecret(args.ParameterData).(pulumi.StringInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"parameterData",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ParameterVersion
	err := ctx.RegisterResource("gcp:parametermanager/parameterVersion:ParameterVersion", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetParameterVersion gets an existing ParameterVersion resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetParameterVersion(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ParameterVersionState, opts ...pulumi.ResourceOption) (*ParameterVersion, error) {
	var resource ParameterVersion
	err := ctx.ReadResource("gcp:parametermanager/parameterVersion:ParameterVersion", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ParameterVersion resources.
type parameterVersionState struct {
	// The time at which the Parameter Version was created.
	CreateTime *string `pulumi:"createTime"`
	// The current state of Parameter Version. This field is only applicable for updating Parameter Version.
	Disabled *bool `pulumi:"disabled"`
	// The resource name of the Parameter Version. Format:
	// `projects/{{project}}/locations/global/parameters/{{parameter_id}}/versions/{{parameter_version_id}}`
	Name *string `pulumi:"name"`
	// Parameter Manager Parameter resource.
	Parameter *string `pulumi:"parameter"`
	// The Parameter data.
	// **Note**: This property is sensitive and will not be displayed in the plan.
	ParameterData *string `pulumi:"parameterData"`
	// Version ID of the Parameter Version Resource. This must be unique within the Parameter.
	//
	// ***
	ParameterVersionId *string `pulumi:"parameterVersionId"`
	// The time at which the Parameter Version was updated.
	UpdateTime *string `pulumi:"updateTime"`
}

type ParameterVersionState struct {
	// The time at which the Parameter Version was created.
	CreateTime pulumi.StringPtrInput
	// The current state of Parameter Version. This field is only applicable for updating Parameter Version.
	Disabled pulumi.BoolPtrInput
	// The resource name of the Parameter Version. Format:
	// `projects/{{project}}/locations/global/parameters/{{parameter_id}}/versions/{{parameter_version_id}}`
	Name pulumi.StringPtrInput
	// Parameter Manager Parameter resource.
	Parameter pulumi.StringPtrInput
	// The Parameter data.
	// **Note**: This property is sensitive and will not be displayed in the plan.
	ParameterData pulumi.StringPtrInput
	// Version ID of the Parameter Version Resource. This must be unique within the Parameter.
	//
	// ***
	ParameterVersionId pulumi.StringPtrInput
	// The time at which the Parameter Version was updated.
	UpdateTime pulumi.StringPtrInput
}

func (ParameterVersionState) ElementType() reflect.Type {
	return reflect.TypeOf((*parameterVersionState)(nil)).Elem()
}

type parameterVersionArgs struct {
	// The current state of Parameter Version. This field is only applicable for updating Parameter Version.
	Disabled *bool `pulumi:"disabled"`
	// Parameter Manager Parameter resource.
	Parameter string `pulumi:"parameter"`
	// The Parameter data.
	// **Note**: This property is sensitive and will not be displayed in the plan.
	ParameterData string `pulumi:"parameterData"`
	// Version ID of the Parameter Version Resource. This must be unique within the Parameter.
	//
	// ***
	ParameterVersionId string `pulumi:"parameterVersionId"`
}

// The set of arguments for constructing a ParameterVersion resource.
type ParameterVersionArgs struct {
	// The current state of Parameter Version. This field is only applicable for updating Parameter Version.
	Disabled pulumi.BoolPtrInput
	// Parameter Manager Parameter resource.
	Parameter pulumi.StringInput
	// The Parameter data.
	// **Note**: This property is sensitive and will not be displayed in the plan.
	ParameterData pulumi.StringInput
	// Version ID of the Parameter Version Resource. This must be unique within the Parameter.
	//
	// ***
	ParameterVersionId pulumi.StringInput
}

func (ParameterVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*parameterVersionArgs)(nil)).Elem()
}

type ParameterVersionInput interface {
	pulumi.Input

	ToParameterVersionOutput() ParameterVersionOutput
	ToParameterVersionOutputWithContext(ctx context.Context) ParameterVersionOutput
}

func (*ParameterVersion) ElementType() reflect.Type {
	return reflect.TypeOf((**ParameterVersion)(nil)).Elem()
}

func (i *ParameterVersion) ToParameterVersionOutput() ParameterVersionOutput {
	return i.ToParameterVersionOutputWithContext(context.Background())
}

func (i *ParameterVersion) ToParameterVersionOutputWithContext(ctx context.Context) ParameterVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParameterVersionOutput)
}

// ParameterVersionArrayInput is an input type that accepts ParameterVersionArray and ParameterVersionArrayOutput values.
// You can construct a concrete instance of `ParameterVersionArrayInput` via:
//
//	ParameterVersionArray{ ParameterVersionArgs{...} }
type ParameterVersionArrayInput interface {
	pulumi.Input

	ToParameterVersionArrayOutput() ParameterVersionArrayOutput
	ToParameterVersionArrayOutputWithContext(context.Context) ParameterVersionArrayOutput
}

type ParameterVersionArray []ParameterVersionInput

func (ParameterVersionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ParameterVersion)(nil)).Elem()
}

func (i ParameterVersionArray) ToParameterVersionArrayOutput() ParameterVersionArrayOutput {
	return i.ToParameterVersionArrayOutputWithContext(context.Background())
}

func (i ParameterVersionArray) ToParameterVersionArrayOutputWithContext(ctx context.Context) ParameterVersionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParameterVersionArrayOutput)
}

// ParameterVersionMapInput is an input type that accepts ParameterVersionMap and ParameterVersionMapOutput values.
// You can construct a concrete instance of `ParameterVersionMapInput` via:
//
//	ParameterVersionMap{ "key": ParameterVersionArgs{...} }
type ParameterVersionMapInput interface {
	pulumi.Input

	ToParameterVersionMapOutput() ParameterVersionMapOutput
	ToParameterVersionMapOutputWithContext(context.Context) ParameterVersionMapOutput
}

type ParameterVersionMap map[string]ParameterVersionInput

func (ParameterVersionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ParameterVersion)(nil)).Elem()
}

func (i ParameterVersionMap) ToParameterVersionMapOutput() ParameterVersionMapOutput {
	return i.ToParameterVersionMapOutputWithContext(context.Background())
}

func (i ParameterVersionMap) ToParameterVersionMapOutputWithContext(ctx context.Context) ParameterVersionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParameterVersionMapOutput)
}

type ParameterVersionOutput struct{ *pulumi.OutputState }

func (ParameterVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ParameterVersion)(nil)).Elem()
}

func (o ParameterVersionOutput) ToParameterVersionOutput() ParameterVersionOutput {
	return o
}

func (o ParameterVersionOutput) ToParameterVersionOutputWithContext(ctx context.Context) ParameterVersionOutput {
	return o
}

// The time at which the Parameter Version was created.
func (o ParameterVersionOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ParameterVersion) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// The current state of Parameter Version. This field is only applicable for updating Parameter Version.
func (o ParameterVersionOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ParameterVersion) pulumi.BoolPtrOutput { return v.Disabled }).(pulumi.BoolPtrOutput)
}

// The resource name of the Parameter Version. Format:
// `projects/{{project}}/locations/global/parameters/{{parameter_id}}/versions/{{parameter_version_id}}`
func (o ParameterVersionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ParameterVersion) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Parameter Manager Parameter resource.
func (o ParameterVersionOutput) Parameter() pulumi.StringOutput {
	return o.ApplyT(func(v *ParameterVersion) pulumi.StringOutput { return v.Parameter }).(pulumi.StringOutput)
}

// The Parameter data.
// **Note**: This property is sensitive and will not be displayed in the plan.
func (o ParameterVersionOutput) ParameterData() pulumi.StringOutput {
	return o.ApplyT(func(v *ParameterVersion) pulumi.StringOutput { return v.ParameterData }).(pulumi.StringOutput)
}

// Version ID of the Parameter Version Resource. This must be unique within the Parameter.
//
// ***
func (o ParameterVersionOutput) ParameterVersionId() pulumi.StringOutput {
	return o.ApplyT(func(v *ParameterVersion) pulumi.StringOutput { return v.ParameterVersionId }).(pulumi.StringOutput)
}

// The time at which the Parameter Version was updated.
func (o ParameterVersionOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ParameterVersion) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

type ParameterVersionArrayOutput struct{ *pulumi.OutputState }

func (ParameterVersionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ParameterVersion)(nil)).Elem()
}

func (o ParameterVersionArrayOutput) ToParameterVersionArrayOutput() ParameterVersionArrayOutput {
	return o
}

func (o ParameterVersionArrayOutput) ToParameterVersionArrayOutputWithContext(ctx context.Context) ParameterVersionArrayOutput {
	return o
}

func (o ParameterVersionArrayOutput) Index(i pulumi.IntInput) ParameterVersionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ParameterVersion {
		return vs[0].([]*ParameterVersion)[vs[1].(int)]
	}).(ParameterVersionOutput)
}

type ParameterVersionMapOutput struct{ *pulumi.OutputState }

func (ParameterVersionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ParameterVersion)(nil)).Elem()
}

func (o ParameterVersionMapOutput) ToParameterVersionMapOutput() ParameterVersionMapOutput {
	return o
}

func (o ParameterVersionMapOutput) ToParameterVersionMapOutputWithContext(ctx context.Context) ParameterVersionMapOutput {
	return o
}

func (o ParameterVersionMapOutput) MapIndex(k pulumi.StringInput) ParameterVersionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ParameterVersion {
		return vs[0].(map[string]*ParameterVersion)[vs[1].(string)]
	}).(ParameterVersionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ParameterVersionInput)(nil)).Elem(), &ParameterVersion{})
	pulumi.RegisterInputType(reflect.TypeOf((*ParameterVersionArrayInput)(nil)).Elem(), ParameterVersionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ParameterVersionMapInput)(nil)).Elem(), ParameterVersionMap{})
	pulumi.RegisterOutputType(ParameterVersionOutput{})
	pulumi.RegisterOutputType(ParameterVersionArrayOutput{})
	pulumi.RegisterOutputType(ParameterVersionMapOutput{})
}
