// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package parametermanager

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to list the Parameter Manager Regional Parameters.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/parametermanager"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := parametermanager.GetRegionalParameters(ctx, &parametermanager.GetRegionalParametersArgs{
//				Location: "us-central1",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetRegionalParameters(ctx *pulumi.Context, args *GetRegionalParametersArgs, opts ...pulumi.InvokeOption) (*GetRegionalParametersResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetRegionalParametersResult
	err := ctx.Invoke("gcp:parametermanager/getRegionalParameters:getRegionalParameters", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRegionalParameters.
type GetRegionalParametersArgs struct {
	// Filter string, adhering to the rules in List-operation filtering. List only parameters matching the filter. If filter is empty, all regional parameters are listed.
	Filter *string `pulumi:"filter"`
	// The location of regional parameter.
	Location string `pulumi:"location"`
	// The ID of the project.
	Project *string `pulumi:"project"`
}

// A collection of values returned by getRegionalParameters.
type GetRegionalParametersResult struct {
	Filter *string `pulumi:"filter"`
	// The provider-assigned unique ID for this managed resource.
	Id       string `pulumi:"id"`
	Location string `pulumi:"location"`
	// A list of regional parameters matching the filter. Structure is defined below.
	Parameters []GetRegionalParametersParameter `pulumi:"parameters"`
	// The ID of the project in which the resource belongs.
	Project string `pulumi:"project"`
}

func GetRegionalParametersOutput(ctx *pulumi.Context, args GetRegionalParametersOutputArgs, opts ...pulumi.InvokeOption) GetRegionalParametersResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetRegionalParametersResultOutput, error) {
			args := v.(GetRegionalParametersArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("gcp:parametermanager/getRegionalParameters:getRegionalParameters", args, GetRegionalParametersResultOutput{}, options).(GetRegionalParametersResultOutput), nil
		}).(GetRegionalParametersResultOutput)
}

// A collection of arguments for invoking getRegionalParameters.
type GetRegionalParametersOutputArgs struct {
	// Filter string, adhering to the rules in List-operation filtering. List only parameters matching the filter. If filter is empty, all regional parameters are listed.
	Filter pulumi.StringPtrInput `pulumi:"filter"`
	// The location of regional parameter.
	Location pulumi.StringInput `pulumi:"location"`
	// The ID of the project.
	Project pulumi.StringPtrInput `pulumi:"project"`
}

func (GetRegionalParametersOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegionalParametersArgs)(nil)).Elem()
}

// A collection of values returned by getRegionalParameters.
type GetRegionalParametersResultOutput struct{ *pulumi.OutputState }

func (GetRegionalParametersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegionalParametersResult)(nil)).Elem()
}

func (o GetRegionalParametersResultOutput) ToGetRegionalParametersResultOutput() GetRegionalParametersResultOutput {
	return o
}

func (o GetRegionalParametersResultOutput) ToGetRegionalParametersResultOutputWithContext(ctx context.Context) GetRegionalParametersResultOutput {
	return o
}

func (o GetRegionalParametersResultOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRegionalParametersResult) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetRegionalParametersResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionalParametersResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetRegionalParametersResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionalParametersResult) string { return v.Location }).(pulumi.StringOutput)
}

// A list of regional parameters matching the filter. Structure is defined below.
func (o GetRegionalParametersResultOutput) Parameters() GetRegionalParametersParameterArrayOutput {
	return o.ApplyT(func(v GetRegionalParametersResult) []GetRegionalParametersParameter { return v.Parameters }).(GetRegionalParametersParameterArrayOutput)
}

// The ID of the project in which the resource belongs.
func (o GetRegionalParametersResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionalParametersResult) string { return v.Project }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetRegionalParametersResultOutput{})
}
