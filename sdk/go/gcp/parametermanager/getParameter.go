// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package parametermanager

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get information about a Parameter Manager Parameter.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/parametermanager"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := parametermanager.LookupParameter(ctx, &parametermanager.LookupParameterArgs{
//				ParameterId: "foobar",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupParameter(ctx *pulumi.Context, args *LookupParameterArgs, opts ...pulumi.InvokeOption) (*LookupParameterResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupParameterResult
	err := ctx.Invoke("gcp:parametermanager/getParameter:getParameter", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getParameter.
type LookupParameterArgs struct {
	// The name of the parameter.
	ParameterId string `pulumi:"parameterId"`
	// The ID of the project in which the resource belongs.
	Project *string `pulumi:"project"`
}

// A collection of values returned by getParameter.
type LookupParameterResult struct {
	CreateTime      string            `pulumi:"createTime"`
	EffectiveLabels map[string]string `pulumi:"effectiveLabels"`
	Format          string            `pulumi:"format"`
	// The provider-assigned unique ID for this managed resource.
	Id            string                     `pulumi:"id"`
	KmsKey        string                     `pulumi:"kmsKey"`
	Labels        map[string]string          `pulumi:"labels"`
	Name          string                     `pulumi:"name"`
	ParameterId   string                     `pulumi:"parameterId"`
	PolicyMembers []GetParameterPolicyMember `pulumi:"policyMembers"`
	Project       *string                    `pulumi:"project"`
	PulumiLabels  map[string]string          `pulumi:"pulumiLabels"`
	UpdateTime    string                     `pulumi:"updateTime"`
}

func LookupParameterOutput(ctx *pulumi.Context, args LookupParameterOutputArgs, opts ...pulumi.InvokeOption) LookupParameterResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupParameterResultOutput, error) {
			args := v.(LookupParameterArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("gcp:parametermanager/getParameter:getParameter", args, LookupParameterResultOutput{}, options).(LookupParameterResultOutput), nil
		}).(LookupParameterResultOutput)
}

// A collection of arguments for invoking getParameter.
type LookupParameterOutputArgs struct {
	// The name of the parameter.
	ParameterId pulumi.StringInput `pulumi:"parameterId"`
	// The ID of the project in which the resource belongs.
	Project pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupParameterOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupParameterArgs)(nil)).Elem()
}

// A collection of values returned by getParameter.
type LookupParameterResultOutput struct{ *pulumi.OutputState }

func (LookupParameterResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupParameterResult)(nil)).Elem()
}

func (o LookupParameterResultOutput) ToLookupParameterResultOutput() LookupParameterResultOutput {
	return o
}

func (o LookupParameterResultOutput) ToLookupParameterResultOutputWithContext(ctx context.Context) LookupParameterResultOutput {
	return o
}

func (o LookupParameterResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupParameterResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

func (o LookupParameterResultOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupParameterResult) map[string]string { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

func (o LookupParameterResultOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v LookupParameterResult) string { return v.Format }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupParameterResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupParameterResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupParameterResultOutput) KmsKey() pulumi.StringOutput {
	return o.ApplyT(func(v LookupParameterResult) string { return v.KmsKey }).(pulumi.StringOutput)
}

func (o LookupParameterResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupParameterResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

func (o LookupParameterResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupParameterResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupParameterResultOutput) ParameterId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupParameterResult) string { return v.ParameterId }).(pulumi.StringOutput)
}

func (o LookupParameterResultOutput) PolicyMembers() GetParameterPolicyMemberArrayOutput {
	return o.ApplyT(func(v LookupParameterResult) []GetParameterPolicyMember { return v.PolicyMembers }).(GetParameterPolicyMemberArrayOutput)
}

func (o LookupParameterResultOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupParameterResult) *string { return v.Project }).(pulumi.StringPtrOutput)
}

func (o LookupParameterResultOutput) PulumiLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupParameterResult) map[string]string { return v.PulumiLabels }).(pulumi.StringMapOutput)
}

func (o LookupParameterResultOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupParameterResult) string { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupParameterResultOutput{})
}
