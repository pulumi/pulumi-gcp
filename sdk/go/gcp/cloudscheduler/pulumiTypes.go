// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cloudscheduler

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type JobAppEngineHttpTarget struct {
	// App Engine Routing setting for the job.  Structure is documented below.
	AppEngineRouting *JobAppEngineHttpTargetAppEngineRouting `pulumi:"appEngineRouting"`
	// HTTP request body.
	// A request body is allowed only if the HTTP method is POST, PUT, or PATCH.
	// It is an error to set body on a job with an incompatible HttpMethod.
	Body *string `pulumi:"body"`
	// This map contains the header field names and values.
	// Repeated headers are not supported, but a header value can contain commas.
	Headers map[string]string `pulumi:"headers"`
	// Which HTTP method to use for the request.
	HttpMethod *string `pulumi:"httpMethod"`
	// The relative URI.
	// The relative URL must begin with "/" and must be a valid HTTP relative URL.
	// It can contain a path, query string arguments, and \# fragments.
	// If the relative URL is empty, then the root path "/" will be used.
	// No spaces are allowed, and the maximum length allowed is 2083 characters
	RelativeUri string `pulumi:"relativeUri"`
}

// JobAppEngineHttpTargetInput is an input type that accepts JobAppEngineHttpTargetArgs and JobAppEngineHttpTargetOutput values.
// You can construct a concrete instance of `JobAppEngineHttpTargetInput` via:
//
// 		 JobAppEngineHttpTargetArgs{...}
//
type JobAppEngineHttpTargetInput interface {
	pulumi.Input

	ToJobAppEngineHttpTargetOutput() JobAppEngineHttpTargetOutput
	ToJobAppEngineHttpTargetOutputWithContext(context.Context) JobAppEngineHttpTargetOutput
}

type JobAppEngineHttpTargetArgs struct {
	// App Engine Routing setting for the job.  Structure is documented below.
	AppEngineRouting JobAppEngineHttpTargetAppEngineRoutingPtrInput `pulumi:"appEngineRouting"`
	// HTTP request body.
	// A request body is allowed only if the HTTP method is POST, PUT, or PATCH.
	// It is an error to set body on a job with an incompatible HttpMethod.
	Body pulumi.StringPtrInput `pulumi:"body"`
	// This map contains the header field names and values.
	// Repeated headers are not supported, but a header value can contain commas.
	Headers pulumi.StringMapInput `pulumi:"headers"`
	// Which HTTP method to use for the request.
	HttpMethod pulumi.StringPtrInput `pulumi:"httpMethod"`
	// The relative URI.
	// The relative URL must begin with "/" and must be a valid HTTP relative URL.
	// It can contain a path, query string arguments, and \# fragments.
	// If the relative URL is empty, then the root path "/" will be used.
	// No spaces are allowed, and the maximum length allowed is 2083 characters
	RelativeUri pulumi.StringInput `pulumi:"relativeUri"`
}

func (JobAppEngineHttpTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobAppEngineHttpTarget)(nil)).Elem()
}

func (i JobAppEngineHttpTargetArgs) ToJobAppEngineHttpTargetOutput() JobAppEngineHttpTargetOutput {
	return i.ToJobAppEngineHttpTargetOutputWithContext(context.Background())
}

func (i JobAppEngineHttpTargetArgs) ToJobAppEngineHttpTargetOutputWithContext(ctx context.Context) JobAppEngineHttpTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobAppEngineHttpTargetOutput)
}

func (i JobAppEngineHttpTargetArgs) ToJobAppEngineHttpTargetPtrOutput() JobAppEngineHttpTargetPtrOutput {
	return i.ToJobAppEngineHttpTargetPtrOutputWithContext(context.Background())
}

func (i JobAppEngineHttpTargetArgs) ToJobAppEngineHttpTargetPtrOutputWithContext(ctx context.Context) JobAppEngineHttpTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobAppEngineHttpTargetOutput).ToJobAppEngineHttpTargetPtrOutputWithContext(ctx)
}

// JobAppEngineHttpTargetPtrInput is an input type that accepts JobAppEngineHttpTargetArgs, JobAppEngineHttpTargetPtr and JobAppEngineHttpTargetPtrOutput values.
// You can construct a concrete instance of `JobAppEngineHttpTargetPtrInput` via:
//
// 		 JobAppEngineHttpTargetArgs{...}
//
//  or:
//
// 		 nil
//
type JobAppEngineHttpTargetPtrInput interface {
	pulumi.Input

	ToJobAppEngineHttpTargetPtrOutput() JobAppEngineHttpTargetPtrOutput
	ToJobAppEngineHttpTargetPtrOutputWithContext(context.Context) JobAppEngineHttpTargetPtrOutput
}

type jobAppEngineHttpTargetPtrType JobAppEngineHttpTargetArgs

func JobAppEngineHttpTargetPtr(v *JobAppEngineHttpTargetArgs) JobAppEngineHttpTargetPtrInput {
	return (*jobAppEngineHttpTargetPtrType)(v)
}

func (*jobAppEngineHttpTargetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobAppEngineHttpTarget)(nil)).Elem()
}

func (i *jobAppEngineHttpTargetPtrType) ToJobAppEngineHttpTargetPtrOutput() JobAppEngineHttpTargetPtrOutput {
	return i.ToJobAppEngineHttpTargetPtrOutputWithContext(context.Background())
}

func (i *jobAppEngineHttpTargetPtrType) ToJobAppEngineHttpTargetPtrOutputWithContext(ctx context.Context) JobAppEngineHttpTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobAppEngineHttpTargetPtrOutput)
}

type JobAppEngineHttpTargetOutput struct{ *pulumi.OutputState }

func (JobAppEngineHttpTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobAppEngineHttpTarget)(nil)).Elem()
}

func (o JobAppEngineHttpTargetOutput) ToJobAppEngineHttpTargetOutput() JobAppEngineHttpTargetOutput {
	return o
}

func (o JobAppEngineHttpTargetOutput) ToJobAppEngineHttpTargetOutputWithContext(ctx context.Context) JobAppEngineHttpTargetOutput {
	return o
}

func (o JobAppEngineHttpTargetOutput) ToJobAppEngineHttpTargetPtrOutput() JobAppEngineHttpTargetPtrOutput {
	return o.ToJobAppEngineHttpTargetPtrOutputWithContext(context.Background())
}

func (o JobAppEngineHttpTargetOutput) ToJobAppEngineHttpTargetPtrOutputWithContext(ctx context.Context) JobAppEngineHttpTargetPtrOutput {
	return o.ApplyT(func(v JobAppEngineHttpTarget) *JobAppEngineHttpTarget {
		return &v
	}).(JobAppEngineHttpTargetPtrOutput)
}

// App Engine Routing setting for the job.  Structure is documented below.
func (o JobAppEngineHttpTargetOutput) AppEngineRouting() JobAppEngineHttpTargetAppEngineRoutingPtrOutput {
	return o.ApplyT(func(v JobAppEngineHttpTarget) *JobAppEngineHttpTargetAppEngineRouting { return v.AppEngineRouting }).(JobAppEngineHttpTargetAppEngineRoutingPtrOutput)
}

// HTTP request body.
// A request body is allowed only if the HTTP method is POST, PUT, or PATCH.
// It is an error to set body on a job with an incompatible HttpMethod.
func (o JobAppEngineHttpTargetOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobAppEngineHttpTarget) *string { return v.Body }).(pulumi.StringPtrOutput)
}

// This map contains the header field names and values.
// Repeated headers are not supported, but a header value can contain commas.
func (o JobAppEngineHttpTargetOutput) Headers() pulumi.StringMapOutput {
	return o.ApplyT(func(v JobAppEngineHttpTarget) map[string]string { return v.Headers }).(pulumi.StringMapOutput)
}

// Which HTTP method to use for the request.
func (o JobAppEngineHttpTargetOutput) HttpMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobAppEngineHttpTarget) *string { return v.HttpMethod }).(pulumi.StringPtrOutput)
}

// The relative URI.
// The relative URL must begin with "/" and must be a valid HTTP relative URL.
// It can contain a path, query string arguments, and \# fragments.
// If the relative URL is empty, then the root path "/" will be used.
// No spaces are allowed, and the maximum length allowed is 2083 characters
func (o JobAppEngineHttpTargetOutput) RelativeUri() pulumi.StringOutput {
	return o.ApplyT(func(v JobAppEngineHttpTarget) string { return v.RelativeUri }).(pulumi.StringOutput)
}

type JobAppEngineHttpTargetPtrOutput struct{ *pulumi.OutputState }

func (JobAppEngineHttpTargetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobAppEngineHttpTarget)(nil)).Elem()
}

func (o JobAppEngineHttpTargetPtrOutput) ToJobAppEngineHttpTargetPtrOutput() JobAppEngineHttpTargetPtrOutput {
	return o
}

func (o JobAppEngineHttpTargetPtrOutput) ToJobAppEngineHttpTargetPtrOutputWithContext(ctx context.Context) JobAppEngineHttpTargetPtrOutput {
	return o
}

func (o JobAppEngineHttpTargetPtrOutput) Elem() JobAppEngineHttpTargetOutput {
	return o.ApplyT(func(v *JobAppEngineHttpTarget) JobAppEngineHttpTarget { return *v }).(JobAppEngineHttpTargetOutput)
}

// App Engine Routing setting for the job.  Structure is documented below.
func (o JobAppEngineHttpTargetPtrOutput) AppEngineRouting() JobAppEngineHttpTargetAppEngineRoutingPtrOutput {
	return o.ApplyT(func(v *JobAppEngineHttpTarget) *JobAppEngineHttpTargetAppEngineRouting {
		if v == nil {
			return nil
		}
		return v.AppEngineRouting
	}).(JobAppEngineHttpTargetAppEngineRoutingPtrOutput)
}

// HTTP request body.
// A request body is allowed only if the HTTP method is POST, PUT, or PATCH.
// It is an error to set body on a job with an incompatible HttpMethod.
func (o JobAppEngineHttpTargetPtrOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobAppEngineHttpTarget) *string {
		if v == nil {
			return nil
		}
		return v.Body
	}).(pulumi.StringPtrOutput)
}

// This map contains the header field names and values.
// Repeated headers are not supported, but a header value can contain commas.
func (o JobAppEngineHttpTargetPtrOutput) Headers() pulumi.StringMapOutput {
	return o.ApplyT(func(v *JobAppEngineHttpTarget) map[string]string {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(pulumi.StringMapOutput)
}

// Which HTTP method to use for the request.
func (o JobAppEngineHttpTargetPtrOutput) HttpMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobAppEngineHttpTarget) *string {
		if v == nil {
			return nil
		}
		return v.HttpMethod
	}).(pulumi.StringPtrOutput)
}

// The relative URI.
// The relative URL must begin with "/" and must be a valid HTTP relative URL.
// It can contain a path, query string arguments, and \# fragments.
// If the relative URL is empty, then the root path "/" will be used.
// No spaces are allowed, and the maximum length allowed is 2083 characters
func (o JobAppEngineHttpTargetPtrOutput) RelativeUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobAppEngineHttpTarget) *string {
		if v == nil {
			return nil
		}
		return &v.RelativeUri
	}).(pulumi.StringPtrOutput)
}

type JobAppEngineHttpTargetAppEngineRouting struct {
	// App instance.
	// By default, the job is sent to an instance which is available when the job is attempted.
	Instance *string `pulumi:"instance"`
	// App service.
	// By default, the job is sent to the service which is the default service when the job is attempted.
	Service *string `pulumi:"service"`
	// App version.
	// By default, the job is sent to the version which is the default version when the job is attempted.
	Version *string `pulumi:"version"`
}

// JobAppEngineHttpTargetAppEngineRoutingInput is an input type that accepts JobAppEngineHttpTargetAppEngineRoutingArgs and JobAppEngineHttpTargetAppEngineRoutingOutput values.
// You can construct a concrete instance of `JobAppEngineHttpTargetAppEngineRoutingInput` via:
//
// 		 JobAppEngineHttpTargetAppEngineRoutingArgs{...}
//
type JobAppEngineHttpTargetAppEngineRoutingInput interface {
	pulumi.Input

	ToJobAppEngineHttpTargetAppEngineRoutingOutput() JobAppEngineHttpTargetAppEngineRoutingOutput
	ToJobAppEngineHttpTargetAppEngineRoutingOutputWithContext(context.Context) JobAppEngineHttpTargetAppEngineRoutingOutput
}

type JobAppEngineHttpTargetAppEngineRoutingArgs struct {
	// App instance.
	// By default, the job is sent to an instance which is available when the job is attempted.
	Instance pulumi.StringPtrInput `pulumi:"instance"`
	// App service.
	// By default, the job is sent to the service which is the default service when the job is attempted.
	Service pulumi.StringPtrInput `pulumi:"service"`
	// App version.
	// By default, the job is sent to the version which is the default version when the job is attempted.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (JobAppEngineHttpTargetAppEngineRoutingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobAppEngineHttpTargetAppEngineRouting)(nil)).Elem()
}

func (i JobAppEngineHttpTargetAppEngineRoutingArgs) ToJobAppEngineHttpTargetAppEngineRoutingOutput() JobAppEngineHttpTargetAppEngineRoutingOutput {
	return i.ToJobAppEngineHttpTargetAppEngineRoutingOutputWithContext(context.Background())
}

func (i JobAppEngineHttpTargetAppEngineRoutingArgs) ToJobAppEngineHttpTargetAppEngineRoutingOutputWithContext(ctx context.Context) JobAppEngineHttpTargetAppEngineRoutingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobAppEngineHttpTargetAppEngineRoutingOutput)
}

func (i JobAppEngineHttpTargetAppEngineRoutingArgs) ToJobAppEngineHttpTargetAppEngineRoutingPtrOutput() JobAppEngineHttpTargetAppEngineRoutingPtrOutput {
	return i.ToJobAppEngineHttpTargetAppEngineRoutingPtrOutputWithContext(context.Background())
}

func (i JobAppEngineHttpTargetAppEngineRoutingArgs) ToJobAppEngineHttpTargetAppEngineRoutingPtrOutputWithContext(ctx context.Context) JobAppEngineHttpTargetAppEngineRoutingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobAppEngineHttpTargetAppEngineRoutingOutput).ToJobAppEngineHttpTargetAppEngineRoutingPtrOutputWithContext(ctx)
}

// JobAppEngineHttpTargetAppEngineRoutingPtrInput is an input type that accepts JobAppEngineHttpTargetAppEngineRoutingArgs, JobAppEngineHttpTargetAppEngineRoutingPtr and JobAppEngineHttpTargetAppEngineRoutingPtrOutput values.
// You can construct a concrete instance of `JobAppEngineHttpTargetAppEngineRoutingPtrInput` via:
//
// 		 JobAppEngineHttpTargetAppEngineRoutingArgs{...}
//
//  or:
//
// 		 nil
//
type JobAppEngineHttpTargetAppEngineRoutingPtrInput interface {
	pulumi.Input

	ToJobAppEngineHttpTargetAppEngineRoutingPtrOutput() JobAppEngineHttpTargetAppEngineRoutingPtrOutput
	ToJobAppEngineHttpTargetAppEngineRoutingPtrOutputWithContext(context.Context) JobAppEngineHttpTargetAppEngineRoutingPtrOutput
}

type jobAppEngineHttpTargetAppEngineRoutingPtrType JobAppEngineHttpTargetAppEngineRoutingArgs

func JobAppEngineHttpTargetAppEngineRoutingPtr(v *JobAppEngineHttpTargetAppEngineRoutingArgs) JobAppEngineHttpTargetAppEngineRoutingPtrInput {
	return (*jobAppEngineHttpTargetAppEngineRoutingPtrType)(v)
}

func (*jobAppEngineHttpTargetAppEngineRoutingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobAppEngineHttpTargetAppEngineRouting)(nil)).Elem()
}

func (i *jobAppEngineHttpTargetAppEngineRoutingPtrType) ToJobAppEngineHttpTargetAppEngineRoutingPtrOutput() JobAppEngineHttpTargetAppEngineRoutingPtrOutput {
	return i.ToJobAppEngineHttpTargetAppEngineRoutingPtrOutputWithContext(context.Background())
}

func (i *jobAppEngineHttpTargetAppEngineRoutingPtrType) ToJobAppEngineHttpTargetAppEngineRoutingPtrOutputWithContext(ctx context.Context) JobAppEngineHttpTargetAppEngineRoutingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobAppEngineHttpTargetAppEngineRoutingPtrOutput)
}

type JobAppEngineHttpTargetAppEngineRoutingOutput struct{ *pulumi.OutputState }

func (JobAppEngineHttpTargetAppEngineRoutingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobAppEngineHttpTargetAppEngineRouting)(nil)).Elem()
}

func (o JobAppEngineHttpTargetAppEngineRoutingOutput) ToJobAppEngineHttpTargetAppEngineRoutingOutput() JobAppEngineHttpTargetAppEngineRoutingOutput {
	return o
}

func (o JobAppEngineHttpTargetAppEngineRoutingOutput) ToJobAppEngineHttpTargetAppEngineRoutingOutputWithContext(ctx context.Context) JobAppEngineHttpTargetAppEngineRoutingOutput {
	return o
}

func (o JobAppEngineHttpTargetAppEngineRoutingOutput) ToJobAppEngineHttpTargetAppEngineRoutingPtrOutput() JobAppEngineHttpTargetAppEngineRoutingPtrOutput {
	return o.ToJobAppEngineHttpTargetAppEngineRoutingPtrOutputWithContext(context.Background())
}

func (o JobAppEngineHttpTargetAppEngineRoutingOutput) ToJobAppEngineHttpTargetAppEngineRoutingPtrOutputWithContext(ctx context.Context) JobAppEngineHttpTargetAppEngineRoutingPtrOutput {
	return o.ApplyT(func(v JobAppEngineHttpTargetAppEngineRouting) *JobAppEngineHttpTargetAppEngineRouting {
		return &v
	}).(JobAppEngineHttpTargetAppEngineRoutingPtrOutput)
}

// App instance.
// By default, the job is sent to an instance which is available when the job is attempted.
func (o JobAppEngineHttpTargetAppEngineRoutingOutput) Instance() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobAppEngineHttpTargetAppEngineRouting) *string { return v.Instance }).(pulumi.StringPtrOutput)
}

// App service.
// By default, the job is sent to the service which is the default service when the job is attempted.
func (o JobAppEngineHttpTargetAppEngineRoutingOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobAppEngineHttpTargetAppEngineRouting) *string { return v.Service }).(pulumi.StringPtrOutput)
}

// App version.
// By default, the job is sent to the version which is the default version when the job is attempted.
func (o JobAppEngineHttpTargetAppEngineRoutingOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobAppEngineHttpTargetAppEngineRouting) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type JobAppEngineHttpTargetAppEngineRoutingPtrOutput struct{ *pulumi.OutputState }

func (JobAppEngineHttpTargetAppEngineRoutingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobAppEngineHttpTargetAppEngineRouting)(nil)).Elem()
}

func (o JobAppEngineHttpTargetAppEngineRoutingPtrOutput) ToJobAppEngineHttpTargetAppEngineRoutingPtrOutput() JobAppEngineHttpTargetAppEngineRoutingPtrOutput {
	return o
}

func (o JobAppEngineHttpTargetAppEngineRoutingPtrOutput) ToJobAppEngineHttpTargetAppEngineRoutingPtrOutputWithContext(ctx context.Context) JobAppEngineHttpTargetAppEngineRoutingPtrOutput {
	return o
}

func (o JobAppEngineHttpTargetAppEngineRoutingPtrOutput) Elem() JobAppEngineHttpTargetAppEngineRoutingOutput {
	return o.ApplyT(func(v *JobAppEngineHttpTargetAppEngineRouting) JobAppEngineHttpTargetAppEngineRouting { return *v }).(JobAppEngineHttpTargetAppEngineRoutingOutput)
}

// App instance.
// By default, the job is sent to an instance which is available when the job is attempted.
func (o JobAppEngineHttpTargetAppEngineRoutingPtrOutput) Instance() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobAppEngineHttpTargetAppEngineRouting) *string {
		if v == nil {
			return nil
		}
		return v.Instance
	}).(pulumi.StringPtrOutput)
}

// App service.
// By default, the job is sent to the service which is the default service when the job is attempted.
func (o JobAppEngineHttpTargetAppEngineRoutingPtrOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobAppEngineHttpTargetAppEngineRouting) *string {
		if v == nil {
			return nil
		}
		return v.Service
	}).(pulumi.StringPtrOutput)
}

// App version.
// By default, the job is sent to the version which is the default version when the job is attempted.
func (o JobAppEngineHttpTargetAppEngineRoutingPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobAppEngineHttpTargetAppEngineRouting) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

type JobHttpTarget struct {
	// HTTP request body.
	// A request body is allowed only if the HTTP method is POST, PUT, or PATCH.
	// It is an error to set body on a job with an incompatible HttpMethod.
	Body *string `pulumi:"body"`
	// This map contains the header field names and values.
	// Repeated headers are not supported, but a header value can contain commas.
	Headers map[string]string `pulumi:"headers"`
	// Which HTTP method to use for the request.
	HttpMethod *string `pulumi:"httpMethod"`
	// Contains information needed for generating an OAuth token.
	// This type of authorization should be used when sending requests to a GCP endpoint.  Structure is documented below.
	OauthToken *JobHttpTargetOauthToken `pulumi:"oauthToken"`
	// Contains information needed for generating an OpenID Connect token.
	// This type of authorization should be used when sending requests to third party endpoints or Cloud Run.  Structure is documented below.
	OidcToken *JobHttpTargetOidcToken `pulumi:"oidcToken"`
	// The full URI path that the request will be sent to.
	Uri string `pulumi:"uri"`
}

// JobHttpTargetInput is an input type that accepts JobHttpTargetArgs and JobHttpTargetOutput values.
// You can construct a concrete instance of `JobHttpTargetInput` via:
//
// 		 JobHttpTargetArgs{...}
//
type JobHttpTargetInput interface {
	pulumi.Input

	ToJobHttpTargetOutput() JobHttpTargetOutput
	ToJobHttpTargetOutputWithContext(context.Context) JobHttpTargetOutput
}

type JobHttpTargetArgs struct {
	// HTTP request body.
	// A request body is allowed only if the HTTP method is POST, PUT, or PATCH.
	// It is an error to set body on a job with an incompatible HttpMethod.
	Body pulumi.StringPtrInput `pulumi:"body"`
	// This map contains the header field names and values.
	// Repeated headers are not supported, but a header value can contain commas.
	Headers pulumi.StringMapInput `pulumi:"headers"`
	// Which HTTP method to use for the request.
	HttpMethod pulumi.StringPtrInput `pulumi:"httpMethod"`
	// Contains information needed for generating an OAuth token.
	// This type of authorization should be used when sending requests to a GCP endpoint.  Structure is documented below.
	OauthToken JobHttpTargetOauthTokenPtrInput `pulumi:"oauthToken"`
	// Contains information needed for generating an OpenID Connect token.
	// This type of authorization should be used when sending requests to third party endpoints or Cloud Run.  Structure is documented below.
	OidcToken JobHttpTargetOidcTokenPtrInput `pulumi:"oidcToken"`
	// The full URI path that the request will be sent to.
	Uri pulumi.StringInput `pulumi:"uri"`
}

func (JobHttpTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobHttpTarget)(nil)).Elem()
}

func (i JobHttpTargetArgs) ToJobHttpTargetOutput() JobHttpTargetOutput {
	return i.ToJobHttpTargetOutputWithContext(context.Background())
}

func (i JobHttpTargetArgs) ToJobHttpTargetOutputWithContext(ctx context.Context) JobHttpTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobHttpTargetOutput)
}

func (i JobHttpTargetArgs) ToJobHttpTargetPtrOutput() JobHttpTargetPtrOutput {
	return i.ToJobHttpTargetPtrOutputWithContext(context.Background())
}

func (i JobHttpTargetArgs) ToJobHttpTargetPtrOutputWithContext(ctx context.Context) JobHttpTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobHttpTargetOutput).ToJobHttpTargetPtrOutputWithContext(ctx)
}

// JobHttpTargetPtrInput is an input type that accepts JobHttpTargetArgs, JobHttpTargetPtr and JobHttpTargetPtrOutput values.
// You can construct a concrete instance of `JobHttpTargetPtrInput` via:
//
// 		 JobHttpTargetArgs{...}
//
//  or:
//
// 		 nil
//
type JobHttpTargetPtrInput interface {
	pulumi.Input

	ToJobHttpTargetPtrOutput() JobHttpTargetPtrOutput
	ToJobHttpTargetPtrOutputWithContext(context.Context) JobHttpTargetPtrOutput
}

type jobHttpTargetPtrType JobHttpTargetArgs

func JobHttpTargetPtr(v *JobHttpTargetArgs) JobHttpTargetPtrInput {
	return (*jobHttpTargetPtrType)(v)
}

func (*jobHttpTargetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobHttpTarget)(nil)).Elem()
}

func (i *jobHttpTargetPtrType) ToJobHttpTargetPtrOutput() JobHttpTargetPtrOutput {
	return i.ToJobHttpTargetPtrOutputWithContext(context.Background())
}

func (i *jobHttpTargetPtrType) ToJobHttpTargetPtrOutputWithContext(ctx context.Context) JobHttpTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobHttpTargetPtrOutput)
}

type JobHttpTargetOutput struct{ *pulumi.OutputState }

func (JobHttpTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobHttpTarget)(nil)).Elem()
}

func (o JobHttpTargetOutput) ToJobHttpTargetOutput() JobHttpTargetOutput {
	return o
}

func (o JobHttpTargetOutput) ToJobHttpTargetOutputWithContext(ctx context.Context) JobHttpTargetOutput {
	return o
}

func (o JobHttpTargetOutput) ToJobHttpTargetPtrOutput() JobHttpTargetPtrOutput {
	return o.ToJobHttpTargetPtrOutputWithContext(context.Background())
}

func (o JobHttpTargetOutput) ToJobHttpTargetPtrOutputWithContext(ctx context.Context) JobHttpTargetPtrOutput {
	return o.ApplyT(func(v JobHttpTarget) *JobHttpTarget {
		return &v
	}).(JobHttpTargetPtrOutput)
}

// HTTP request body.
// A request body is allowed only if the HTTP method is POST, PUT, or PATCH.
// It is an error to set body on a job with an incompatible HttpMethod.
func (o JobHttpTargetOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobHttpTarget) *string { return v.Body }).(pulumi.StringPtrOutput)
}

// This map contains the header field names and values.
// Repeated headers are not supported, but a header value can contain commas.
func (o JobHttpTargetOutput) Headers() pulumi.StringMapOutput {
	return o.ApplyT(func(v JobHttpTarget) map[string]string { return v.Headers }).(pulumi.StringMapOutput)
}

// Which HTTP method to use for the request.
func (o JobHttpTargetOutput) HttpMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobHttpTarget) *string { return v.HttpMethod }).(pulumi.StringPtrOutput)
}

// Contains information needed for generating an OAuth token.
// This type of authorization should be used when sending requests to a GCP endpoint.  Structure is documented below.
func (o JobHttpTargetOutput) OauthToken() JobHttpTargetOauthTokenPtrOutput {
	return o.ApplyT(func(v JobHttpTarget) *JobHttpTargetOauthToken { return v.OauthToken }).(JobHttpTargetOauthTokenPtrOutput)
}

// Contains information needed for generating an OpenID Connect token.
// This type of authorization should be used when sending requests to third party endpoints or Cloud Run.  Structure is documented below.
func (o JobHttpTargetOutput) OidcToken() JobHttpTargetOidcTokenPtrOutput {
	return o.ApplyT(func(v JobHttpTarget) *JobHttpTargetOidcToken { return v.OidcToken }).(JobHttpTargetOidcTokenPtrOutput)
}

// The full URI path that the request will be sent to.
func (o JobHttpTargetOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v JobHttpTarget) string { return v.Uri }).(pulumi.StringOutput)
}

type JobHttpTargetPtrOutput struct{ *pulumi.OutputState }

func (JobHttpTargetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobHttpTarget)(nil)).Elem()
}

func (o JobHttpTargetPtrOutput) ToJobHttpTargetPtrOutput() JobHttpTargetPtrOutput {
	return o
}

func (o JobHttpTargetPtrOutput) ToJobHttpTargetPtrOutputWithContext(ctx context.Context) JobHttpTargetPtrOutput {
	return o
}

func (o JobHttpTargetPtrOutput) Elem() JobHttpTargetOutput {
	return o.ApplyT(func(v *JobHttpTarget) JobHttpTarget { return *v }).(JobHttpTargetOutput)
}

// HTTP request body.
// A request body is allowed only if the HTTP method is POST, PUT, or PATCH.
// It is an error to set body on a job with an incompatible HttpMethod.
func (o JobHttpTargetPtrOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobHttpTarget) *string {
		if v == nil {
			return nil
		}
		return v.Body
	}).(pulumi.StringPtrOutput)
}

// This map contains the header field names and values.
// Repeated headers are not supported, but a header value can contain commas.
func (o JobHttpTargetPtrOutput) Headers() pulumi.StringMapOutput {
	return o.ApplyT(func(v *JobHttpTarget) map[string]string {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(pulumi.StringMapOutput)
}

// Which HTTP method to use for the request.
func (o JobHttpTargetPtrOutput) HttpMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobHttpTarget) *string {
		if v == nil {
			return nil
		}
		return v.HttpMethod
	}).(pulumi.StringPtrOutput)
}

// Contains information needed for generating an OAuth token.
// This type of authorization should be used when sending requests to a GCP endpoint.  Structure is documented below.
func (o JobHttpTargetPtrOutput) OauthToken() JobHttpTargetOauthTokenPtrOutput {
	return o.ApplyT(func(v *JobHttpTarget) *JobHttpTargetOauthToken {
		if v == nil {
			return nil
		}
		return v.OauthToken
	}).(JobHttpTargetOauthTokenPtrOutput)
}

// Contains information needed for generating an OpenID Connect token.
// This type of authorization should be used when sending requests to third party endpoints or Cloud Run.  Structure is documented below.
func (o JobHttpTargetPtrOutput) OidcToken() JobHttpTargetOidcTokenPtrOutput {
	return o.ApplyT(func(v *JobHttpTarget) *JobHttpTargetOidcToken {
		if v == nil {
			return nil
		}
		return v.OidcToken
	}).(JobHttpTargetOidcTokenPtrOutput)
}

// The full URI path that the request will be sent to.
func (o JobHttpTargetPtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobHttpTarget) *string {
		if v == nil {
			return nil
		}
		return &v.Uri
	}).(pulumi.StringPtrOutput)
}

type JobHttpTargetOauthToken struct {
	// OAuth scope to be used for generating OAuth access token. If not specified,
	// "https://www.googleapis.com/auth/cloud-platform" will be used.
	Scope *string `pulumi:"scope"`
	// Service account email to be used for generating OAuth token.
	// The service account must be within the same project as the job.
	ServiceAccountEmail string `pulumi:"serviceAccountEmail"`
}

// JobHttpTargetOauthTokenInput is an input type that accepts JobHttpTargetOauthTokenArgs and JobHttpTargetOauthTokenOutput values.
// You can construct a concrete instance of `JobHttpTargetOauthTokenInput` via:
//
// 		 JobHttpTargetOauthTokenArgs{...}
//
type JobHttpTargetOauthTokenInput interface {
	pulumi.Input

	ToJobHttpTargetOauthTokenOutput() JobHttpTargetOauthTokenOutput
	ToJobHttpTargetOauthTokenOutputWithContext(context.Context) JobHttpTargetOauthTokenOutput
}

type JobHttpTargetOauthTokenArgs struct {
	// OAuth scope to be used for generating OAuth access token. If not specified,
	// "https://www.googleapis.com/auth/cloud-platform" will be used.
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	// Service account email to be used for generating OAuth token.
	// The service account must be within the same project as the job.
	ServiceAccountEmail pulumi.StringInput `pulumi:"serviceAccountEmail"`
}

func (JobHttpTargetOauthTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobHttpTargetOauthToken)(nil)).Elem()
}

func (i JobHttpTargetOauthTokenArgs) ToJobHttpTargetOauthTokenOutput() JobHttpTargetOauthTokenOutput {
	return i.ToJobHttpTargetOauthTokenOutputWithContext(context.Background())
}

func (i JobHttpTargetOauthTokenArgs) ToJobHttpTargetOauthTokenOutputWithContext(ctx context.Context) JobHttpTargetOauthTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobHttpTargetOauthTokenOutput)
}

func (i JobHttpTargetOauthTokenArgs) ToJobHttpTargetOauthTokenPtrOutput() JobHttpTargetOauthTokenPtrOutput {
	return i.ToJobHttpTargetOauthTokenPtrOutputWithContext(context.Background())
}

func (i JobHttpTargetOauthTokenArgs) ToJobHttpTargetOauthTokenPtrOutputWithContext(ctx context.Context) JobHttpTargetOauthTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobHttpTargetOauthTokenOutput).ToJobHttpTargetOauthTokenPtrOutputWithContext(ctx)
}

// JobHttpTargetOauthTokenPtrInput is an input type that accepts JobHttpTargetOauthTokenArgs, JobHttpTargetOauthTokenPtr and JobHttpTargetOauthTokenPtrOutput values.
// You can construct a concrete instance of `JobHttpTargetOauthTokenPtrInput` via:
//
// 		 JobHttpTargetOauthTokenArgs{...}
//
//  or:
//
// 		 nil
//
type JobHttpTargetOauthTokenPtrInput interface {
	pulumi.Input

	ToJobHttpTargetOauthTokenPtrOutput() JobHttpTargetOauthTokenPtrOutput
	ToJobHttpTargetOauthTokenPtrOutputWithContext(context.Context) JobHttpTargetOauthTokenPtrOutput
}

type jobHttpTargetOauthTokenPtrType JobHttpTargetOauthTokenArgs

func JobHttpTargetOauthTokenPtr(v *JobHttpTargetOauthTokenArgs) JobHttpTargetOauthTokenPtrInput {
	return (*jobHttpTargetOauthTokenPtrType)(v)
}

func (*jobHttpTargetOauthTokenPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobHttpTargetOauthToken)(nil)).Elem()
}

func (i *jobHttpTargetOauthTokenPtrType) ToJobHttpTargetOauthTokenPtrOutput() JobHttpTargetOauthTokenPtrOutput {
	return i.ToJobHttpTargetOauthTokenPtrOutputWithContext(context.Background())
}

func (i *jobHttpTargetOauthTokenPtrType) ToJobHttpTargetOauthTokenPtrOutputWithContext(ctx context.Context) JobHttpTargetOauthTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobHttpTargetOauthTokenPtrOutput)
}

type JobHttpTargetOauthTokenOutput struct{ *pulumi.OutputState }

func (JobHttpTargetOauthTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobHttpTargetOauthToken)(nil)).Elem()
}

func (o JobHttpTargetOauthTokenOutput) ToJobHttpTargetOauthTokenOutput() JobHttpTargetOauthTokenOutput {
	return o
}

func (o JobHttpTargetOauthTokenOutput) ToJobHttpTargetOauthTokenOutputWithContext(ctx context.Context) JobHttpTargetOauthTokenOutput {
	return o
}

func (o JobHttpTargetOauthTokenOutput) ToJobHttpTargetOauthTokenPtrOutput() JobHttpTargetOauthTokenPtrOutput {
	return o.ToJobHttpTargetOauthTokenPtrOutputWithContext(context.Background())
}

func (o JobHttpTargetOauthTokenOutput) ToJobHttpTargetOauthTokenPtrOutputWithContext(ctx context.Context) JobHttpTargetOauthTokenPtrOutput {
	return o.ApplyT(func(v JobHttpTargetOauthToken) *JobHttpTargetOauthToken {
		return &v
	}).(JobHttpTargetOauthTokenPtrOutput)
}

// OAuth scope to be used for generating OAuth access token. If not specified,
// "https://www.googleapis.com/auth/cloud-platform" will be used.
func (o JobHttpTargetOauthTokenOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobHttpTargetOauthToken) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

// Service account email to be used for generating OAuth token.
// The service account must be within the same project as the job.
func (o JobHttpTargetOauthTokenOutput) ServiceAccountEmail() pulumi.StringOutput {
	return o.ApplyT(func(v JobHttpTargetOauthToken) string { return v.ServiceAccountEmail }).(pulumi.StringOutput)
}

type JobHttpTargetOauthTokenPtrOutput struct{ *pulumi.OutputState }

func (JobHttpTargetOauthTokenPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobHttpTargetOauthToken)(nil)).Elem()
}

func (o JobHttpTargetOauthTokenPtrOutput) ToJobHttpTargetOauthTokenPtrOutput() JobHttpTargetOauthTokenPtrOutput {
	return o
}

func (o JobHttpTargetOauthTokenPtrOutput) ToJobHttpTargetOauthTokenPtrOutputWithContext(ctx context.Context) JobHttpTargetOauthTokenPtrOutput {
	return o
}

func (o JobHttpTargetOauthTokenPtrOutput) Elem() JobHttpTargetOauthTokenOutput {
	return o.ApplyT(func(v *JobHttpTargetOauthToken) JobHttpTargetOauthToken { return *v }).(JobHttpTargetOauthTokenOutput)
}

// OAuth scope to be used for generating OAuth access token. If not specified,
// "https://www.googleapis.com/auth/cloud-platform" will be used.
func (o JobHttpTargetOauthTokenPtrOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobHttpTargetOauthToken) *string {
		if v == nil {
			return nil
		}
		return v.Scope
	}).(pulumi.StringPtrOutput)
}

// Service account email to be used for generating OAuth token.
// The service account must be within the same project as the job.
func (o JobHttpTargetOauthTokenPtrOutput) ServiceAccountEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobHttpTargetOauthToken) *string {
		if v == nil {
			return nil
		}
		return &v.ServiceAccountEmail
	}).(pulumi.StringPtrOutput)
}

type JobHttpTargetOidcToken struct {
	// Audience to be used when generating OIDC token. If not specified,
	// the URI specified in target will be used.
	Audience *string `pulumi:"audience"`
	// Service account email to be used for generating OAuth token.
	// The service account must be within the same project as the job.
	ServiceAccountEmail string `pulumi:"serviceAccountEmail"`
}

// JobHttpTargetOidcTokenInput is an input type that accepts JobHttpTargetOidcTokenArgs and JobHttpTargetOidcTokenOutput values.
// You can construct a concrete instance of `JobHttpTargetOidcTokenInput` via:
//
// 		 JobHttpTargetOidcTokenArgs{...}
//
type JobHttpTargetOidcTokenInput interface {
	pulumi.Input

	ToJobHttpTargetOidcTokenOutput() JobHttpTargetOidcTokenOutput
	ToJobHttpTargetOidcTokenOutputWithContext(context.Context) JobHttpTargetOidcTokenOutput
}

type JobHttpTargetOidcTokenArgs struct {
	// Audience to be used when generating OIDC token. If not specified,
	// the URI specified in target will be used.
	Audience pulumi.StringPtrInput `pulumi:"audience"`
	// Service account email to be used for generating OAuth token.
	// The service account must be within the same project as the job.
	ServiceAccountEmail pulumi.StringInput `pulumi:"serviceAccountEmail"`
}

func (JobHttpTargetOidcTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobHttpTargetOidcToken)(nil)).Elem()
}

func (i JobHttpTargetOidcTokenArgs) ToJobHttpTargetOidcTokenOutput() JobHttpTargetOidcTokenOutput {
	return i.ToJobHttpTargetOidcTokenOutputWithContext(context.Background())
}

func (i JobHttpTargetOidcTokenArgs) ToJobHttpTargetOidcTokenOutputWithContext(ctx context.Context) JobHttpTargetOidcTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobHttpTargetOidcTokenOutput)
}

func (i JobHttpTargetOidcTokenArgs) ToJobHttpTargetOidcTokenPtrOutput() JobHttpTargetOidcTokenPtrOutput {
	return i.ToJobHttpTargetOidcTokenPtrOutputWithContext(context.Background())
}

func (i JobHttpTargetOidcTokenArgs) ToJobHttpTargetOidcTokenPtrOutputWithContext(ctx context.Context) JobHttpTargetOidcTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobHttpTargetOidcTokenOutput).ToJobHttpTargetOidcTokenPtrOutputWithContext(ctx)
}

// JobHttpTargetOidcTokenPtrInput is an input type that accepts JobHttpTargetOidcTokenArgs, JobHttpTargetOidcTokenPtr and JobHttpTargetOidcTokenPtrOutput values.
// You can construct a concrete instance of `JobHttpTargetOidcTokenPtrInput` via:
//
// 		 JobHttpTargetOidcTokenArgs{...}
//
//  or:
//
// 		 nil
//
type JobHttpTargetOidcTokenPtrInput interface {
	pulumi.Input

	ToJobHttpTargetOidcTokenPtrOutput() JobHttpTargetOidcTokenPtrOutput
	ToJobHttpTargetOidcTokenPtrOutputWithContext(context.Context) JobHttpTargetOidcTokenPtrOutput
}

type jobHttpTargetOidcTokenPtrType JobHttpTargetOidcTokenArgs

func JobHttpTargetOidcTokenPtr(v *JobHttpTargetOidcTokenArgs) JobHttpTargetOidcTokenPtrInput {
	return (*jobHttpTargetOidcTokenPtrType)(v)
}

func (*jobHttpTargetOidcTokenPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobHttpTargetOidcToken)(nil)).Elem()
}

func (i *jobHttpTargetOidcTokenPtrType) ToJobHttpTargetOidcTokenPtrOutput() JobHttpTargetOidcTokenPtrOutput {
	return i.ToJobHttpTargetOidcTokenPtrOutputWithContext(context.Background())
}

func (i *jobHttpTargetOidcTokenPtrType) ToJobHttpTargetOidcTokenPtrOutputWithContext(ctx context.Context) JobHttpTargetOidcTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobHttpTargetOidcTokenPtrOutput)
}

type JobHttpTargetOidcTokenOutput struct{ *pulumi.OutputState }

func (JobHttpTargetOidcTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobHttpTargetOidcToken)(nil)).Elem()
}

func (o JobHttpTargetOidcTokenOutput) ToJobHttpTargetOidcTokenOutput() JobHttpTargetOidcTokenOutput {
	return o
}

func (o JobHttpTargetOidcTokenOutput) ToJobHttpTargetOidcTokenOutputWithContext(ctx context.Context) JobHttpTargetOidcTokenOutput {
	return o
}

func (o JobHttpTargetOidcTokenOutput) ToJobHttpTargetOidcTokenPtrOutput() JobHttpTargetOidcTokenPtrOutput {
	return o.ToJobHttpTargetOidcTokenPtrOutputWithContext(context.Background())
}

func (o JobHttpTargetOidcTokenOutput) ToJobHttpTargetOidcTokenPtrOutputWithContext(ctx context.Context) JobHttpTargetOidcTokenPtrOutput {
	return o.ApplyT(func(v JobHttpTargetOidcToken) *JobHttpTargetOidcToken {
		return &v
	}).(JobHttpTargetOidcTokenPtrOutput)
}

// Audience to be used when generating OIDC token. If not specified,
// the URI specified in target will be used.
func (o JobHttpTargetOidcTokenOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobHttpTargetOidcToken) *string { return v.Audience }).(pulumi.StringPtrOutput)
}

// Service account email to be used for generating OAuth token.
// The service account must be within the same project as the job.
func (o JobHttpTargetOidcTokenOutput) ServiceAccountEmail() pulumi.StringOutput {
	return o.ApplyT(func(v JobHttpTargetOidcToken) string { return v.ServiceAccountEmail }).(pulumi.StringOutput)
}

type JobHttpTargetOidcTokenPtrOutput struct{ *pulumi.OutputState }

func (JobHttpTargetOidcTokenPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobHttpTargetOidcToken)(nil)).Elem()
}

func (o JobHttpTargetOidcTokenPtrOutput) ToJobHttpTargetOidcTokenPtrOutput() JobHttpTargetOidcTokenPtrOutput {
	return o
}

func (o JobHttpTargetOidcTokenPtrOutput) ToJobHttpTargetOidcTokenPtrOutputWithContext(ctx context.Context) JobHttpTargetOidcTokenPtrOutput {
	return o
}

func (o JobHttpTargetOidcTokenPtrOutput) Elem() JobHttpTargetOidcTokenOutput {
	return o.ApplyT(func(v *JobHttpTargetOidcToken) JobHttpTargetOidcToken { return *v }).(JobHttpTargetOidcTokenOutput)
}

// Audience to be used when generating OIDC token. If not specified,
// the URI specified in target will be used.
func (o JobHttpTargetOidcTokenPtrOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobHttpTargetOidcToken) *string {
		if v == nil {
			return nil
		}
		return v.Audience
	}).(pulumi.StringPtrOutput)
}

// Service account email to be used for generating OAuth token.
// The service account must be within the same project as the job.
func (o JobHttpTargetOidcTokenPtrOutput) ServiceAccountEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobHttpTargetOidcToken) *string {
		if v == nil {
			return nil
		}
		return &v.ServiceAccountEmail
	}).(pulumi.StringPtrOutput)
}

type JobPubsubTarget struct {
	// Attributes for PubsubMessage.
	// Pubsub message must contain either non-empty data, or at least one attribute.
	Attributes map[string]string `pulumi:"attributes"`
	// The message payload for PubsubMessage.
	// Pubsub message must contain either non-empty data, or at least one attribute.
	Data *string `pulumi:"data"`
	// The full resource name for the Cloud Pub/Sub topic to which
	// messages will be published when a job is delivered. ~>**NOTE**:
	// The topic name must be in the same format as required by PubSub's
	// PublishRequest.name, e.g. `projects/my-project/topics/my-topic`.
	TopicName string `pulumi:"topicName"`
}

// JobPubsubTargetInput is an input type that accepts JobPubsubTargetArgs and JobPubsubTargetOutput values.
// You can construct a concrete instance of `JobPubsubTargetInput` via:
//
// 		 JobPubsubTargetArgs{...}
//
type JobPubsubTargetInput interface {
	pulumi.Input

	ToJobPubsubTargetOutput() JobPubsubTargetOutput
	ToJobPubsubTargetOutputWithContext(context.Context) JobPubsubTargetOutput
}

type JobPubsubTargetArgs struct {
	// Attributes for PubsubMessage.
	// Pubsub message must contain either non-empty data, or at least one attribute.
	Attributes pulumi.StringMapInput `pulumi:"attributes"`
	// The message payload for PubsubMessage.
	// Pubsub message must contain either non-empty data, or at least one attribute.
	Data pulumi.StringPtrInput `pulumi:"data"`
	// The full resource name for the Cloud Pub/Sub topic to which
	// messages will be published when a job is delivered. ~>**NOTE**:
	// The topic name must be in the same format as required by PubSub's
	// PublishRequest.name, e.g. `projects/my-project/topics/my-topic`.
	TopicName pulumi.StringInput `pulumi:"topicName"`
}

func (JobPubsubTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobPubsubTarget)(nil)).Elem()
}

func (i JobPubsubTargetArgs) ToJobPubsubTargetOutput() JobPubsubTargetOutput {
	return i.ToJobPubsubTargetOutputWithContext(context.Background())
}

func (i JobPubsubTargetArgs) ToJobPubsubTargetOutputWithContext(ctx context.Context) JobPubsubTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobPubsubTargetOutput)
}

func (i JobPubsubTargetArgs) ToJobPubsubTargetPtrOutput() JobPubsubTargetPtrOutput {
	return i.ToJobPubsubTargetPtrOutputWithContext(context.Background())
}

func (i JobPubsubTargetArgs) ToJobPubsubTargetPtrOutputWithContext(ctx context.Context) JobPubsubTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobPubsubTargetOutput).ToJobPubsubTargetPtrOutputWithContext(ctx)
}

// JobPubsubTargetPtrInput is an input type that accepts JobPubsubTargetArgs, JobPubsubTargetPtr and JobPubsubTargetPtrOutput values.
// You can construct a concrete instance of `JobPubsubTargetPtrInput` via:
//
// 		 JobPubsubTargetArgs{...}
//
//  or:
//
// 		 nil
//
type JobPubsubTargetPtrInput interface {
	pulumi.Input

	ToJobPubsubTargetPtrOutput() JobPubsubTargetPtrOutput
	ToJobPubsubTargetPtrOutputWithContext(context.Context) JobPubsubTargetPtrOutput
}

type jobPubsubTargetPtrType JobPubsubTargetArgs

func JobPubsubTargetPtr(v *JobPubsubTargetArgs) JobPubsubTargetPtrInput {
	return (*jobPubsubTargetPtrType)(v)
}

func (*jobPubsubTargetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobPubsubTarget)(nil)).Elem()
}

func (i *jobPubsubTargetPtrType) ToJobPubsubTargetPtrOutput() JobPubsubTargetPtrOutput {
	return i.ToJobPubsubTargetPtrOutputWithContext(context.Background())
}

func (i *jobPubsubTargetPtrType) ToJobPubsubTargetPtrOutputWithContext(ctx context.Context) JobPubsubTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobPubsubTargetPtrOutput)
}

type JobPubsubTargetOutput struct{ *pulumi.OutputState }

func (JobPubsubTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobPubsubTarget)(nil)).Elem()
}

func (o JobPubsubTargetOutput) ToJobPubsubTargetOutput() JobPubsubTargetOutput {
	return o
}

func (o JobPubsubTargetOutput) ToJobPubsubTargetOutputWithContext(ctx context.Context) JobPubsubTargetOutput {
	return o
}

func (o JobPubsubTargetOutput) ToJobPubsubTargetPtrOutput() JobPubsubTargetPtrOutput {
	return o.ToJobPubsubTargetPtrOutputWithContext(context.Background())
}

func (o JobPubsubTargetOutput) ToJobPubsubTargetPtrOutputWithContext(ctx context.Context) JobPubsubTargetPtrOutput {
	return o.ApplyT(func(v JobPubsubTarget) *JobPubsubTarget {
		return &v
	}).(JobPubsubTargetPtrOutput)
}

// Attributes for PubsubMessage.
// Pubsub message must contain either non-empty data, or at least one attribute.
func (o JobPubsubTargetOutput) Attributes() pulumi.StringMapOutput {
	return o.ApplyT(func(v JobPubsubTarget) map[string]string { return v.Attributes }).(pulumi.StringMapOutput)
}

// The message payload for PubsubMessage.
// Pubsub message must contain either non-empty data, or at least one attribute.
func (o JobPubsubTargetOutput) Data() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobPubsubTarget) *string { return v.Data }).(pulumi.StringPtrOutput)
}

// The full resource name for the Cloud Pub/Sub topic to which
// messages will be published when a job is delivered. ~>**NOTE**:
// The topic name must be in the same format as required by PubSub's
// PublishRequest.name, e.g. `projects/my-project/topics/my-topic`.
func (o JobPubsubTargetOutput) TopicName() pulumi.StringOutput {
	return o.ApplyT(func(v JobPubsubTarget) string { return v.TopicName }).(pulumi.StringOutput)
}

type JobPubsubTargetPtrOutput struct{ *pulumi.OutputState }

func (JobPubsubTargetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobPubsubTarget)(nil)).Elem()
}

func (o JobPubsubTargetPtrOutput) ToJobPubsubTargetPtrOutput() JobPubsubTargetPtrOutput {
	return o
}

func (o JobPubsubTargetPtrOutput) ToJobPubsubTargetPtrOutputWithContext(ctx context.Context) JobPubsubTargetPtrOutput {
	return o
}

func (o JobPubsubTargetPtrOutput) Elem() JobPubsubTargetOutput {
	return o.ApplyT(func(v *JobPubsubTarget) JobPubsubTarget { return *v }).(JobPubsubTargetOutput)
}

// Attributes for PubsubMessage.
// Pubsub message must contain either non-empty data, or at least one attribute.
func (o JobPubsubTargetPtrOutput) Attributes() pulumi.StringMapOutput {
	return o.ApplyT(func(v *JobPubsubTarget) map[string]string {
		if v == nil {
			return nil
		}
		return v.Attributes
	}).(pulumi.StringMapOutput)
}

// The message payload for PubsubMessage.
// Pubsub message must contain either non-empty data, or at least one attribute.
func (o JobPubsubTargetPtrOutput) Data() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobPubsubTarget) *string {
		if v == nil {
			return nil
		}
		return v.Data
	}).(pulumi.StringPtrOutput)
}

// The full resource name for the Cloud Pub/Sub topic to which
// messages will be published when a job is delivered. ~>**NOTE**:
// The topic name must be in the same format as required by PubSub's
// PublishRequest.name, e.g. `projects/my-project/topics/my-topic`.
func (o JobPubsubTargetPtrOutput) TopicName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobPubsubTarget) *string {
		if v == nil {
			return nil
		}
		return &v.TopicName
	}).(pulumi.StringPtrOutput)
}

type JobRetryConfig struct {
	// The maximum amount of time to wait before retrying a job after it fails.
	// A duration in seconds with up to nine fractional digits, terminated by 's'.
	MaxBackoffDuration *string `pulumi:"maxBackoffDuration"`
	// The time between retries will double maxDoublings times.
	// A job's retry interval starts at minBackoffDuration,
	// then doubles maxDoublings times, then increases linearly,
	// and finally retries retries at intervals of maxBackoffDuration up to retryCount times.
	MaxDoublings *int `pulumi:"maxDoublings"`
	// The time limit for retrying a failed job, measured from time when an execution was first attempted.
	// If specified with retryCount, the job will be retried until both limits are reached.
	// A duration in seconds with up to nine fractional digits, terminated by 's'.
	MaxRetryDuration *string `pulumi:"maxRetryDuration"`
	// The minimum amount of time to wait before retrying a job after it fails.
	// A duration in seconds with up to nine fractional digits, terminated by 's'.
	MinBackoffDuration *string `pulumi:"minBackoffDuration"`
	// The number of attempts that the system will make to run a
	// job using the exponential backoff procedure described by maxDoublings.
	// Values greater than 5 and negative values are not allowed.
	RetryCount *int `pulumi:"retryCount"`
}

// JobRetryConfigInput is an input type that accepts JobRetryConfigArgs and JobRetryConfigOutput values.
// You can construct a concrete instance of `JobRetryConfigInput` via:
//
// 		 JobRetryConfigArgs{...}
//
type JobRetryConfigInput interface {
	pulumi.Input

	ToJobRetryConfigOutput() JobRetryConfigOutput
	ToJobRetryConfigOutputWithContext(context.Context) JobRetryConfigOutput
}

type JobRetryConfigArgs struct {
	// The maximum amount of time to wait before retrying a job after it fails.
	// A duration in seconds with up to nine fractional digits, terminated by 's'.
	MaxBackoffDuration pulumi.StringPtrInput `pulumi:"maxBackoffDuration"`
	// The time between retries will double maxDoublings times.
	// A job's retry interval starts at minBackoffDuration,
	// then doubles maxDoublings times, then increases linearly,
	// and finally retries retries at intervals of maxBackoffDuration up to retryCount times.
	MaxDoublings pulumi.IntPtrInput `pulumi:"maxDoublings"`
	// The time limit for retrying a failed job, measured from time when an execution was first attempted.
	// If specified with retryCount, the job will be retried until both limits are reached.
	// A duration in seconds with up to nine fractional digits, terminated by 's'.
	MaxRetryDuration pulumi.StringPtrInput `pulumi:"maxRetryDuration"`
	// The minimum amount of time to wait before retrying a job after it fails.
	// A duration in seconds with up to nine fractional digits, terminated by 's'.
	MinBackoffDuration pulumi.StringPtrInput `pulumi:"minBackoffDuration"`
	// The number of attempts that the system will make to run a
	// job using the exponential backoff procedure described by maxDoublings.
	// Values greater than 5 and negative values are not allowed.
	RetryCount pulumi.IntPtrInput `pulumi:"retryCount"`
}

func (JobRetryConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobRetryConfig)(nil)).Elem()
}

func (i JobRetryConfigArgs) ToJobRetryConfigOutput() JobRetryConfigOutput {
	return i.ToJobRetryConfigOutputWithContext(context.Background())
}

func (i JobRetryConfigArgs) ToJobRetryConfigOutputWithContext(ctx context.Context) JobRetryConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobRetryConfigOutput)
}

func (i JobRetryConfigArgs) ToJobRetryConfigPtrOutput() JobRetryConfigPtrOutput {
	return i.ToJobRetryConfigPtrOutputWithContext(context.Background())
}

func (i JobRetryConfigArgs) ToJobRetryConfigPtrOutputWithContext(ctx context.Context) JobRetryConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobRetryConfigOutput).ToJobRetryConfigPtrOutputWithContext(ctx)
}

// JobRetryConfigPtrInput is an input type that accepts JobRetryConfigArgs, JobRetryConfigPtr and JobRetryConfigPtrOutput values.
// You can construct a concrete instance of `JobRetryConfigPtrInput` via:
//
// 		 JobRetryConfigArgs{...}
//
//  or:
//
// 		 nil
//
type JobRetryConfigPtrInput interface {
	pulumi.Input

	ToJobRetryConfigPtrOutput() JobRetryConfigPtrOutput
	ToJobRetryConfigPtrOutputWithContext(context.Context) JobRetryConfigPtrOutput
}

type jobRetryConfigPtrType JobRetryConfigArgs

func JobRetryConfigPtr(v *JobRetryConfigArgs) JobRetryConfigPtrInput {
	return (*jobRetryConfigPtrType)(v)
}

func (*jobRetryConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobRetryConfig)(nil)).Elem()
}

func (i *jobRetryConfigPtrType) ToJobRetryConfigPtrOutput() JobRetryConfigPtrOutput {
	return i.ToJobRetryConfigPtrOutputWithContext(context.Background())
}

func (i *jobRetryConfigPtrType) ToJobRetryConfigPtrOutputWithContext(ctx context.Context) JobRetryConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobRetryConfigPtrOutput)
}

type JobRetryConfigOutput struct{ *pulumi.OutputState }

func (JobRetryConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobRetryConfig)(nil)).Elem()
}

func (o JobRetryConfigOutput) ToJobRetryConfigOutput() JobRetryConfigOutput {
	return o
}

func (o JobRetryConfigOutput) ToJobRetryConfigOutputWithContext(ctx context.Context) JobRetryConfigOutput {
	return o
}

func (o JobRetryConfigOutput) ToJobRetryConfigPtrOutput() JobRetryConfigPtrOutput {
	return o.ToJobRetryConfigPtrOutputWithContext(context.Background())
}

func (o JobRetryConfigOutput) ToJobRetryConfigPtrOutputWithContext(ctx context.Context) JobRetryConfigPtrOutput {
	return o.ApplyT(func(v JobRetryConfig) *JobRetryConfig {
		return &v
	}).(JobRetryConfigPtrOutput)
}

// The maximum amount of time to wait before retrying a job after it fails.
// A duration in seconds with up to nine fractional digits, terminated by 's'.
func (o JobRetryConfigOutput) MaxBackoffDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobRetryConfig) *string { return v.MaxBackoffDuration }).(pulumi.StringPtrOutput)
}

// The time between retries will double maxDoublings times.
// A job's retry interval starts at minBackoffDuration,
// then doubles maxDoublings times, then increases linearly,
// and finally retries retries at intervals of maxBackoffDuration up to retryCount times.
func (o JobRetryConfigOutput) MaxDoublings() pulumi.IntPtrOutput {
	return o.ApplyT(func(v JobRetryConfig) *int { return v.MaxDoublings }).(pulumi.IntPtrOutput)
}

// The time limit for retrying a failed job, measured from time when an execution was first attempted.
// If specified with retryCount, the job will be retried until both limits are reached.
// A duration in seconds with up to nine fractional digits, terminated by 's'.
func (o JobRetryConfigOutput) MaxRetryDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobRetryConfig) *string { return v.MaxRetryDuration }).(pulumi.StringPtrOutput)
}

// The minimum amount of time to wait before retrying a job after it fails.
// A duration in seconds with up to nine fractional digits, terminated by 's'.
func (o JobRetryConfigOutput) MinBackoffDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobRetryConfig) *string { return v.MinBackoffDuration }).(pulumi.StringPtrOutput)
}

// The number of attempts that the system will make to run a
// job using the exponential backoff procedure described by maxDoublings.
// Values greater than 5 and negative values are not allowed.
func (o JobRetryConfigOutput) RetryCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v JobRetryConfig) *int { return v.RetryCount }).(pulumi.IntPtrOutput)
}

type JobRetryConfigPtrOutput struct{ *pulumi.OutputState }

func (JobRetryConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobRetryConfig)(nil)).Elem()
}

func (o JobRetryConfigPtrOutput) ToJobRetryConfigPtrOutput() JobRetryConfigPtrOutput {
	return o
}

func (o JobRetryConfigPtrOutput) ToJobRetryConfigPtrOutputWithContext(ctx context.Context) JobRetryConfigPtrOutput {
	return o
}

func (o JobRetryConfigPtrOutput) Elem() JobRetryConfigOutput {
	return o.ApplyT(func(v *JobRetryConfig) JobRetryConfig { return *v }).(JobRetryConfigOutput)
}

// The maximum amount of time to wait before retrying a job after it fails.
// A duration in seconds with up to nine fractional digits, terminated by 's'.
func (o JobRetryConfigPtrOutput) MaxBackoffDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobRetryConfig) *string {
		if v == nil {
			return nil
		}
		return v.MaxBackoffDuration
	}).(pulumi.StringPtrOutput)
}

// The time between retries will double maxDoublings times.
// A job's retry interval starts at minBackoffDuration,
// then doubles maxDoublings times, then increases linearly,
// and finally retries retries at intervals of maxBackoffDuration up to retryCount times.
func (o JobRetryConfigPtrOutput) MaxDoublings() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *JobRetryConfig) *int {
		if v == nil {
			return nil
		}
		return v.MaxDoublings
	}).(pulumi.IntPtrOutput)
}

// The time limit for retrying a failed job, measured from time when an execution was first attempted.
// If specified with retryCount, the job will be retried until both limits are reached.
// A duration in seconds with up to nine fractional digits, terminated by 's'.
func (o JobRetryConfigPtrOutput) MaxRetryDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobRetryConfig) *string {
		if v == nil {
			return nil
		}
		return v.MaxRetryDuration
	}).(pulumi.StringPtrOutput)
}

// The minimum amount of time to wait before retrying a job after it fails.
// A duration in seconds with up to nine fractional digits, terminated by 's'.
func (o JobRetryConfigPtrOutput) MinBackoffDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobRetryConfig) *string {
		if v == nil {
			return nil
		}
		return v.MinBackoffDuration
	}).(pulumi.StringPtrOutput)
}

// The number of attempts that the system will make to run a
// job using the exponential backoff procedure described by maxDoublings.
// Values greater than 5 and negative values are not allowed.
func (o JobRetryConfigPtrOutput) RetryCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *JobRetryConfig) *int {
		if v == nil {
			return nil
		}
		return v.RetryCount
	}).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(JobAppEngineHttpTargetOutput{})
	pulumi.RegisterOutputType(JobAppEngineHttpTargetPtrOutput{})
	pulumi.RegisterOutputType(JobAppEngineHttpTargetAppEngineRoutingOutput{})
	pulumi.RegisterOutputType(JobAppEngineHttpTargetAppEngineRoutingPtrOutput{})
	pulumi.RegisterOutputType(JobHttpTargetOutput{})
	pulumi.RegisterOutputType(JobHttpTargetPtrOutput{})
	pulumi.RegisterOutputType(JobHttpTargetOauthTokenOutput{})
	pulumi.RegisterOutputType(JobHttpTargetOauthTokenPtrOutput{})
	pulumi.RegisterOutputType(JobHttpTargetOidcTokenOutput{})
	pulumi.RegisterOutputType(JobHttpTargetOidcTokenPtrOutput{})
	pulumi.RegisterOutputType(JobPubsubTargetOutput{})
	pulumi.RegisterOutputType(JobPubsubTargetPtrOutput{})
	pulumi.RegisterOutputType(JobRetryConfigOutput{})
	pulumi.RegisterOutputType(JobRetryConfigPtrOutput{})
}
