// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package filestore

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get info about a Google Cloud Filestore instance.
//
// ## Example Usage
func LookupInstance(ctx *pulumi.Context, args *LookupInstanceArgs, opts ...pulumi.InvokeOption) (*LookupInstanceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupInstanceResult
	err := ctx.Invoke("gcp:filestore/getInstance:getInstance", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getInstance.
type LookupInstanceArgs struct {
	// The name of the location of the instance. This
	// can be a region for ENTERPRISE tier instances. If it is not provided,
	// the provider region or zone is used.
	Location *string `pulumi:"location"`
	// The name of a Filestore instance.
	//
	// ***
	Name string `pulumi:"name"`
	// The project in which the resource belongs. If it
	// is not provided, the provider project is used.
	Project *string `pulumi:"project"`
}

// A collection of values returned by getInstance.
type LookupInstanceResult struct {
	CreateTime      string                 `pulumi:"createTime"`
	Description     string                 `pulumi:"description"`
	EffectiveLabels map[string]string      `pulumi:"effectiveLabels"`
	Etag            string                 `pulumi:"etag"`
	FileShares      []GetInstanceFileShare `pulumi:"fileShares"`
	// The provider-assigned unique ID for this managed resource.
	Id           string               `pulumi:"id"`
	KmsKeyName   string               `pulumi:"kmsKeyName"`
	Labels       map[string]string    `pulumi:"labels"`
	Location     *string              `pulumi:"location"`
	Name         string               `pulumi:"name"`
	Networks     []GetInstanceNetwork `pulumi:"networks"`
	Project      *string              `pulumi:"project"`
	Protocol     string               `pulumi:"protocol"`
	PulumiLabels map[string]string    `pulumi:"pulumiLabels"`
	Tier         string               `pulumi:"tier"`
	Zone         string               `pulumi:"zone"`
}

func LookupInstanceOutput(ctx *pulumi.Context, args LookupInstanceOutputArgs, opts ...pulumi.InvokeOption) LookupInstanceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupInstanceResult, error) {
			args := v.(LookupInstanceArgs)
			r, err := LookupInstance(ctx, &args, opts...)
			var s LookupInstanceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupInstanceResultOutput)
}

// A collection of arguments for invoking getInstance.
type LookupInstanceOutputArgs struct {
	// The name of the location of the instance. This
	// can be a region for ENTERPRISE tier instances. If it is not provided,
	// the provider region or zone is used.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The name of a Filestore instance.
	//
	// ***
	Name pulumi.StringInput `pulumi:"name"`
	// The project in which the resource belongs. If it
	// is not provided, the provider project is used.
	Project pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupInstanceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupInstanceArgs)(nil)).Elem()
}

// A collection of values returned by getInstance.
type LookupInstanceResultOutput struct{ *pulumi.OutputState }

func (LookupInstanceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupInstanceResult)(nil)).Elem()
}

func (o LookupInstanceResultOutput) ToLookupInstanceResultOutput() LookupInstanceResultOutput {
	return o
}

func (o LookupInstanceResultOutput) ToLookupInstanceResultOutputWithContext(ctx context.Context) LookupInstanceResultOutput {
	return o
}

func (o LookupInstanceResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

func (o LookupInstanceResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupInstanceResultOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupInstanceResult) map[string]string { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

func (o LookupInstanceResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.Etag }).(pulumi.StringOutput)
}

func (o LookupInstanceResultOutput) FileShares() GetInstanceFileShareArrayOutput {
	return o.ApplyT(func(v LookupInstanceResult) []GetInstanceFileShare { return v.FileShares }).(GetInstanceFileShareArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupInstanceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupInstanceResultOutput) KmsKeyName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.KmsKeyName }).(pulumi.StringOutput)
}

func (o LookupInstanceResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupInstanceResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

func (o LookupInstanceResultOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupInstanceResult) *string { return v.Location }).(pulumi.StringPtrOutput)
}

func (o LookupInstanceResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupInstanceResultOutput) Networks() GetInstanceNetworkArrayOutput {
	return o.ApplyT(func(v LookupInstanceResult) []GetInstanceNetwork { return v.Networks }).(GetInstanceNetworkArrayOutput)
}

func (o LookupInstanceResultOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupInstanceResult) *string { return v.Project }).(pulumi.StringPtrOutput)
}

func (o LookupInstanceResultOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.Protocol }).(pulumi.StringOutput)
}

func (o LookupInstanceResultOutput) PulumiLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupInstanceResult) map[string]string { return v.PulumiLabels }).(pulumi.StringMapOutput)
}

func (o LookupInstanceResultOutput) Tier() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.Tier }).(pulumi.StringOutput)
}

func (o LookupInstanceResultOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.Zone }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupInstanceResultOutput{})
}
