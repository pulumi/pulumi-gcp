// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package filestore

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A Google Cloud Filestore instance.
//
// To get more information about Instance, see:
//
// * [API documentation](https://cloud.google.com/filestore/docs/reference/rest/v1beta1/projects.locations.instances/create)
// * How-to Guides
//   - [Copying Data In/Out](https://cloud.google.com/filestore/docs/copying-data)
//   - [Official Documentation](https://cloud.google.com/filestore/docs/creating-instances)
//   - [Use with Kubernetes](https://cloud.google.com/filestore/docs/accessing-fileshares)
//
// ## Example Usage
//
// ### Filestore Instance Basic
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/filestore"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := filestore.NewInstance(ctx, "instance", &filestore.InstanceArgs{
//				Name:     pulumi.String("test-instance"),
//				Location: pulumi.String("us-central1-b"),
//				Tier:     pulumi.String("BASIC_HDD"),
//				FileShares: &filestore.InstanceFileSharesArgs{
//					CapacityGb: pulumi.Int(1024),
//					Name:       pulumi.String("share1"),
//				},
//				Networks: filestore.InstanceNetworkArray{
//					&filestore.InstanceNetworkArgs{
//						Network: pulumi.String("default"),
//						Modes: pulumi.StringArray{
//							pulumi.String("MODE_IPV4"),
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Filestore Instance Full
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/filestore"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := filestore.NewInstance(ctx, "instance", &filestore.InstanceArgs{
//				Name:     pulumi.String("test-instance"),
//				Location: pulumi.String("us-central1-b"),
//				Tier:     pulumi.String("BASIC_SSD"),
//				FileShares: &filestore.InstanceFileSharesArgs{
//					CapacityGb: pulumi.Int(2560),
//					Name:       pulumi.String("share1"),
//					NfsExportOptions: filestore.InstanceFileSharesNfsExportOptionArray{
//						&filestore.InstanceFileSharesNfsExportOptionArgs{
//							IpRanges: pulumi.StringArray{
//								pulumi.String("10.0.0.0/24"),
//							},
//							AccessMode: pulumi.String("READ_WRITE"),
//							SquashMode: pulumi.String("NO_ROOT_SQUASH"),
//						},
//						&filestore.InstanceFileSharesNfsExportOptionArgs{
//							IpRanges: pulumi.StringArray{
//								pulumi.String("10.10.0.0/24"),
//							},
//							AccessMode: pulumi.String("READ_ONLY"),
//							SquashMode: pulumi.String("ROOT_SQUASH"),
//							AnonUid:    pulumi.Int(123),
//							AnonGid:    pulumi.Int(456),
//						},
//					},
//				},
//				Networks: filestore.InstanceNetworkArray{
//					&filestore.InstanceNetworkArgs{
//						Network: pulumi.String("default"),
//						Modes: pulumi.StringArray{
//							pulumi.String("MODE_IPV4"),
//						},
//						ConnectMode: pulumi.String("DIRECT_PEERING"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Filestore Instance Protocol
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/filestore"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := filestore.NewInstance(ctx, "instance", &filestore.InstanceArgs{
//				Name:     pulumi.String("test-instance"),
//				Location: pulumi.String("us-central1"),
//				Tier:     pulumi.String("ENTERPRISE"),
//				Protocol: pulumi.String("NFS_V4_1"),
//				FileShares: &filestore.InstanceFileSharesArgs{
//					CapacityGb: pulumi.Int(1024),
//					Name:       pulumi.String("share1"),
//				},
//				Networks: filestore.InstanceNetworkArray{
//					&filestore.InstanceNetworkArgs{
//						Network: pulumi.String("default"),
//						Modes: pulumi.StringArray{
//							pulumi.String("MODE_IPV4"),
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Filestore Instance Enterprise
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/filestore"
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/kms"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			filestoreKeyring, err := kms.NewKeyRing(ctx, "filestore_keyring", &kms.KeyRingArgs{
//				Name:     pulumi.String("filestore-keyring"),
//				Location: pulumi.String("us-central1"),
//			})
//			if err != nil {
//				return err
//			}
//			filestoreKey, err := kms.NewCryptoKey(ctx, "filestore_key", &kms.CryptoKeyArgs{
//				Name:    pulumi.String("filestore-key"),
//				KeyRing: filestoreKeyring.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = filestore.NewInstance(ctx, "instance", &filestore.InstanceArgs{
//				Name:     pulumi.String("test-instance"),
//				Location: pulumi.String("us-central1"),
//				Tier:     pulumi.String("ENTERPRISE"),
//				FileShares: &filestore.InstanceFileSharesArgs{
//					CapacityGb: pulumi.Int(1024),
//					Name:       pulumi.String("share1"),
//				},
//				Networks: filestore.InstanceNetworkArray{
//					&filestore.InstanceNetworkArgs{
//						Network: pulumi.String("default"),
//						Modes: pulumi.StringArray{
//							pulumi.String("MODE_IPV4"),
//						},
//					},
//				},
//				KmsKeyName: filestoreKey.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Instance can be imported using any of these accepted formats:
//
// * `projects/{{project}}/locations/{{location}}/instances/{{name}}`
//
// * `{{project}}/{{location}}/{{name}}`
//
// * `{{location}}/{{name}}`
//
// When using the `pulumi import` command, Instance can be imported using one of the formats above. For example:
//
// ```sh
// $ pulumi import gcp:filestore/instance:Instance default projects/{{project}}/locations/{{location}}/instances/{{name}}
// ```
//
// ```sh
// $ pulumi import gcp:filestore/instance:Instance default {{project}}/{{location}}/{{name}}
// ```
//
// ```sh
// $ pulumi import gcp:filestore/instance:Instance default {{location}}/{{name}}
// ```
type Instance struct {
	pulumi.CustomResourceState

	// Creation timestamp in RFC3339 text format.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Indicates whether the instance is protected against deletion.
	DeletionProtectionEnabled pulumi.BoolPtrOutput `pulumi:"deletionProtectionEnabled"`
	// The reason for enabling deletion protection.
	DeletionProtectionReason pulumi.StringPtrOutput `pulumi:"deletionProtectionReason"`
	// A description of the instance.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Directory Services configuration.
	// Should only be set if protocol is "NFS_V4_1".
	// Structure is documented below.
	DirectoryServices InstanceDirectoryServicesPtrOutput `pulumi:"directoryServices"`
	// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
	EffectiveLabels pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	// Output only fields for replication configuration.
	// Structure is documented below.
	EffectiveReplications InstanceEffectiveReplicationArrayOutput `pulumi:"effectiveReplications"`
	// Server-specified ETag for the instance resource to prevent
	// simultaneous updates from overwriting each other.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// File system shares on the instance. For this version, only a
	// single file share is supported.
	// Structure is documented below.
	FileShares InstanceFileSharesOutput `pulumi:"fileShares"`
	// Replication configuration, once set, this cannot be updated.
	// Additionally this should be specified on the replica instance only, indicating the active as the peerInstance
	// Structure is documented below.
	InitialReplication InstanceInitialReplicationPtrOutput `pulumi:"initialReplication"`
	// KMS key name used for data encryption.
	KmsKeyName pulumi.StringPtrOutput `pulumi:"kmsKeyName"`
	// Resource labels to represent user-provided metadata.
	//
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// The name of the location of the instance. This can be a region for ENTERPRISE tier instances.
	Location pulumi.StringOutput `pulumi:"location"`
	// The resource name of the instance.
	Name pulumi.StringOutput `pulumi:"name"`
	// VPC networks to which the instance is connected. For this version,
	// only a single network is supported.
	// Structure is documented below.
	Networks InstanceNetworkArrayOutput `pulumi:"networks"`
	// Performance configuration for the instance. If not provided,
	// the default performance settings will be used.
	// Structure is documented below.
	PerformanceConfig InstancePerformanceConfigPtrOutput `pulumi:"performanceConfig"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
	// Either NFSv3, for using NFS version 3 as file sharing protocol,
	// or NFSv4.1, for using NFS version 4.1 as file sharing protocol.
	// NFSv4.1 can be used with HIGH_SCALE_SSD, ZONAL, REGIONAL and ENTERPRISE.
	// The default is NFSv3.
	// Default value is `NFS_V3`.
	// Possible values are: `NFS_V3`, `NFS_V4_1`.
	Protocol pulumi.StringPtrOutput `pulumi:"protocol"`
	// The combination of labels configured directly on the resource
	// and default labels configured on the provider.
	PulumiLabels pulumi.StringMapOutput `pulumi:"pulumiLabels"`
	// A map of resource manager tags. Resource manager tag keys
	// and values have the same definition as resource manager
	// tags. Keys must be in the format tagKeys/{tag_key_id},
	// and values are in the format tagValues/456. The field is
	// ignored when empty. The field is immutable and causes
	// resource replacement when mutated. This field is only set
	// at create time and modifying this field after creation
	// will trigger recreation. To apply tags to an existing
	// resource, see the `tags.TagValue` resource.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The service tier of the instance.
	// Possible values include: STANDARD, PREMIUM, BASIC_HDD, BASIC_SSD, HIGH_SCALE_SSD, ZONAL, REGIONAL and ENTERPRISE
	Tier pulumi.StringOutput `pulumi:"tier"`
	// (Optional, Deprecated)
	// The name of the Filestore zone of the instance.
	//
	// > **Warning:** `zone` is deprecated and will be removed in a future major release. Use `location` instead.
	//
	// Deprecated: `zone` is deprecated and will be removed in a future major release. Use `location` instead.
	Zone pulumi.StringOutput `pulumi:"zone"`
}

// NewInstance registers a new resource with the given unique name, arguments, and options.
func NewInstance(ctx *pulumi.Context,
	name string, args *InstanceArgs, opts ...pulumi.ResourceOption) (*Instance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FileShares == nil {
		return nil, errors.New("invalid value for required argument 'FileShares'")
	}
	if args.Networks == nil {
		return nil, errors.New("invalid value for required argument 'Networks'")
	}
	if args.Tier == nil {
		return nil, errors.New("invalid value for required argument 'Tier'")
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"effectiveLabels",
		"pulumiLabels",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Instance
	err := ctx.RegisterResource("gcp:filestore/instance:Instance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInstance gets an existing Instance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InstanceState, opts ...pulumi.ResourceOption) (*Instance, error) {
	var resource Instance
	err := ctx.ReadResource("gcp:filestore/instance:Instance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Instance resources.
type instanceState struct {
	// Creation timestamp in RFC3339 text format.
	CreateTime *string `pulumi:"createTime"`
	// Indicates whether the instance is protected against deletion.
	DeletionProtectionEnabled *bool `pulumi:"deletionProtectionEnabled"`
	// The reason for enabling deletion protection.
	DeletionProtectionReason *string `pulumi:"deletionProtectionReason"`
	// A description of the instance.
	Description *string `pulumi:"description"`
	// Directory Services configuration.
	// Should only be set if protocol is "NFS_V4_1".
	// Structure is documented below.
	DirectoryServices *InstanceDirectoryServices `pulumi:"directoryServices"`
	// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
	EffectiveLabels map[string]string `pulumi:"effectiveLabels"`
	// Output only fields for replication configuration.
	// Structure is documented below.
	EffectiveReplications []InstanceEffectiveReplication `pulumi:"effectiveReplications"`
	// Server-specified ETag for the instance resource to prevent
	// simultaneous updates from overwriting each other.
	Etag *string `pulumi:"etag"`
	// File system shares on the instance. For this version, only a
	// single file share is supported.
	// Structure is documented below.
	FileShares *InstanceFileShares `pulumi:"fileShares"`
	// Replication configuration, once set, this cannot be updated.
	// Additionally this should be specified on the replica instance only, indicating the active as the peerInstance
	// Structure is documented below.
	InitialReplication *InstanceInitialReplication `pulumi:"initialReplication"`
	// KMS key name used for data encryption.
	KmsKeyName *string `pulumi:"kmsKeyName"`
	// Resource labels to represent user-provided metadata.
	//
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// The name of the location of the instance. This can be a region for ENTERPRISE tier instances.
	Location *string `pulumi:"location"`
	// The resource name of the instance.
	Name *string `pulumi:"name"`
	// VPC networks to which the instance is connected. For this version,
	// only a single network is supported.
	// Structure is documented below.
	Networks []InstanceNetwork `pulumi:"networks"`
	// Performance configuration for the instance. If not provided,
	// the default performance settings will be used.
	// Structure is documented below.
	PerformanceConfig *InstancePerformanceConfig `pulumi:"performanceConfig"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// Either NFSv3, for using NFS version 3 as file sharing protocol,
	// or NFSv4.1, for using NFS version 4.1 as file sharing protocol.
	// NFSv4.1 can be used with HIGH_SCALE_SSD, ZONAL, REGIONAL and ENTERPRISE.
	// The default is NFSv3.
	// Default value is `NFS_V3`.
	// Possible values are: `NFS_V3`, `NFS_V4_1`.
	Protocol *string `pulumi:"protocol"`
	// The combination of labels configured directly on the resource
	// and default labels configured on the provider.
	PulumiLabels map[string]string `pulumi:"pulumiLabels"`
	// A map of resource manager tags. Resource manager tag keys
	// and values have the same definition as resource manager
	// tags. Keys must be in the format tagKeys/{tag_key_id},
	// and values are in the format tagValues/456. The field is
	// ignored when empty. The field is immutable and causes
	// resource replacement when mutated. This field is only set
	// at create time and modifying this field after creation
	// will trigger recreation. To apply tags to an existing
	// resource, see the `tags.TagValue` resource.
	Tags map[string]string `pulumi:"tags"`
	// The service tier of the instance.
	// Possible values include: STANDARD, PREMIUM, BASIC_HDD, BASIC_SSD, HIGH_SCALE_SSD, ZONAL, REGIONAL and ENTERPRISE
	Tier *string `pulumi:"tier"`
	// (Optional, Deprecated)
	// The name of the Filestore zone of the instance.
	//
	// > **Warning:** `zone` is deprecated and will be removed in a future major release. Use `location` instead.
	//
	// Deprecated: `zone` is deprecated and will be removed in a future major release. Use `location` instead.
	Zone *string `pulumi:"zone"`
}

type InstanceState struct {
	// Creation timestamp in RFC3339 text format.
	CreateTime pulumi.StringPtrInput
	// Indicates whether the instance is protected against deletion.
	DeletionProtectionEnabled pulumi.BoolPtrInput
	// The reason for enabling deletion protection.
	DeletionProtectionReason pulumi.StringPtrInput
	// A description of the instance.
	Description pulumi.StringPtrInput
	// Directory Services configuration.
	// Should only be set if protocol is "NFS_V4_1".
	// Structure is documented below.
	DirectoryServices InstanceDirectoryServicesPtrInput
	// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
	EffectiveLabels pulumi.StringMapInput
	// Output only fields for replication configuration.
	// Structure is documented below.
	EffectiveReplications InstanceEffectiveReplicationArrayInput
	// Server-specified ETag for the instance resource to prevent
	// simultaneous updates from overwriting each other.
	Etag pulumi.StringPtrInput
	// File system shares on the instance. For this version, only a
	// single file share is supported.
	// Structure is documented below.
	FileShares InstanceFileSharesPtrInput
	// Replication configuration, once set, this cannot be updated.
	// Additionally this should be specified on the replica instance only, indicating the active as the peerInstance
	// Structure is documented below.
	InitialReplication InstanceInitialReplicationPtrInput
	// KMS key name used for data encryption.
	KmsKeyName pulumi.StringPtrInput
	// Resource labels to represent user-provided metadata.
	//
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// The name of the location of the instance. This can be a region for ENTERPRISE tier instances.
	Location pulumi.StringPtrInput
	// The resource name of the instance.
	Name pulumi.StringPtrInput
	// VPC networks to which the instance is connected. For this version,
	// only a single network is supported.
	// Structure is documented below.
	Networks InstanceNetworkArrayInput
	// Performance configuration for the instance. If not provided,
	// the default performance settings will be used.
	// Structure is documented below.
	PerformanceConfig InstancePerformanceConfigPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// Either NFSv3, for using NFS version 3 as file sharing protocol,
	// or NFSv4.1, for using NFS version 4.1 as file sharing protocol.
	// NFSv4.1 can be used with HIGH_SCALE_SSD, ZONAL, REGIONAL and ENTERPRISE.
	// The default is NFSv3.
	// Default value is `NFS_V3`.
	// Possible values are: `NFS_V3`, `NFS_V4_1`.
	Protocol pulumi.StringPtrInput
	// The combination of labels configured directly on the resource
	// and default labels configured on the provider.
	PulumiLabels pulumi.StringMapInput
	// A map of resource manager tags. Resource manager tag keys
	// and values have the same definition as resource manager
	// tags. Keys must be in the format tagKeys/{tag_key_id},
	// and values are in the format tagValues/456. The field is
	// ignored when empty. The field is immutable and causes
	// resource replacement when mutated. This field is only set
	// at create time and modifying this field after creation
	// will trigger recreation. To apply tags to an existing
	// resource, see the `tags.TagValue` resource.
	Tags pulumi.StringMapInput
	// The service tier of the instance.
	// Possible values include: STANDARD, PREMIUM, BASIC_HDD, BASIC_SSD, HIGH_SCALE_SSD, ZONAL, REGIONAL and ENTERPRISE
	Tier pulumi.StringPtrInput
	// (Optional, Deprecated)
	// The name of the Filestore zone of the instance.
	//
	// > **Warning:** `zone` is deprecated and will be removed in a future major release. Use `location` instead.
	//
	// Deprecated: `zone` is deprecated and will be removed in a future major release. Use `location` instead.
	Zone pulumi.StringPtrInput
}

func (InstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceState)(nil)).Elem()
}

type instanceArgs struct {
	// Indicates whether the instance is protected against deletion.
	DeletionProtectionEnabled *bool `pulumi:"deletionProtectionEnabled"`
	// The reason for enabling deletion protection.
	DeletionProtectionReason *string `pulumi:"deletionProtectionReason"`
	// A description of the instance.
	Description *string `pulumi:"description"`
	// Directory Services configuration.
	// Should only be set if protocol is "NFS_V4_1".
	// Structure is documented below.
	DirectoryServices *InstanceDirectoryServices `pulumi:"directoryServices"`
	// File system shares on the instance. For this version, only a
	// single file share is supported.
	// Structure is documented below.
	FileShares InstanceFileShares `pulumi:"fileShares"`
	// Replication configuration, once set, this cannot be updated.
	// Additionally this should be specified on the replica instance only, indicating the active as the peerInstance
	// Structure is documented below.
	InitialReplication *InstanceInitialReplication `pulumi:"initialReplication"`
	// KMS key name used for data encryption.
	KmsKeyName *string `pulumi:"kmsKeyName"`
	// Resource labels to represent user-provided metadata.
	//
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// The name of the location of the instance. This can be a region for ENTERPRISE tier instances.
	Location *string `pulumi:"location"`
	// The resource name of the instance.
	Name *string `pulumi:"name"`
	// VPC networks to which the instance is connected. For this version,
	// only a single network is supported.
	// Structure is documented below.
	Networks []InstanceNetwork `pulumi:"networks"`
	// Performance configuration for the instance. If not provided,
	// the default performance settings will be used.
	// Structure is documented below.
	PerformanceConfig *InstancePerformanceConfig `pulumi:"performanceConfig"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// Either NFSv3, for using NFS version 3 as file sharing protocol,
	// or NFSv4.1, for using NFS version 4.1 as file sharing protocol.
	// NFSv4.1 can be used with HIGH_SCALE_SSD, ZONAL, REGIONAL and ENTERPRISE.
	// The default is NFSv3.
	// Default value is `NFS_V3`.
	// Possible values are: `NFS_V3`, `NFS_V4_1`.
	Protocol *string `pulumi:"protocol"`
	// A map of resource manager tags. Resource manager tag keys
	// and values have the same definition as resource manager
	// tags. Keys must be in the format tagKeys/{tag_key_id},
	// and values are in the format tagValues/456. The field is
	// ignored when empty. The field is immutable and causes
	// resource replacement when mutated. This field is only set
	// at create time and modifying this field after creation
	// will trigger recreation. To apply tags to an existing
	// resource, see the `tags.TagValue` resource.
	Tags map[string]string `pulumi:"tags"`
	// The service tier of the instance.
	// Possible values include: STANDARD, PREMIUM, BASIC_HDD, BASIC_SSD, HIGH_SCALE_SSD, ZONAL, REGIONAL and ENTERPRISE
	Tier string `pulumi:"tier"`
	// (Optional, Deprecated)
	// The name of the Filestore zone of the instance.
	//
	// > **Warning:** `zone` is deprecated and will be removed in a future major release. Use `location` instead.
	//
	// Deprecated: `zone` is deprecated and will be removed in a future major release. Use `location` instead.
	Zone *string `pulumi:"zone"`
}

// The set of arguments for constructing a Instance resource.
type InstanceArgs struct {
	// Indicates whether the instance is protected against deletion.
	DeletionProtectionEnabled pulumi.BoolPtrInput
	// The reason for enabling deletion protection.
	DeletionProtectionReason pulumi.StringPtrInput
	// A description of the instance.
	Description pulumi.StringPtrInput
	// Directory Services configuration.
	// Should only be set if protocol is "NFS_V4_1".
	// Structure is documented below.
	DirectoryServices InstanceDirectoryServicesPtrInput
	// File system shares on the instance. For this version, only a
	// single file share is supported.
	// Structure is documented below.
	FileShares InstanceFileSharesInput
	// Replication configuration, once set, this cannot be updated.
	// Additionally this should be specified on the replica instance only, indicating the active as the peerInstance
	// Structure is documented below.
	InitialReplication InstanceInitialReplicationPtrInput
	// KMS key name used for data encryption.
	KmsKeyName pulumi.StringPtrInput
	// Resource labels to represent user-provided metadata.
	//
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// The name of the location of the instance. This can be a region for ENTERPRISE tier instances.
	Location pulumi.StringPtrInput
	// The resource name of the instance.
	Name pulumi.StringPtrInput
	// VPC networks to which the instance is connected. For this version,
	// only a single network is supported.
	// Structure is documented below.
	Networks InstanceNetworkArrayInput
	// Performance configuration for the instance. If not provided,
	// the default performance settings will be used.
	// Structure is documented below.
	PerformanceConfig InstancePerformanceConfigPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// Either NFSv3, for using NFS version 3 as file sharing protocol,
	// or NFSv4.1, for using NFS version 4.1 as file sharing protocol.
	// NFSv4.1 can be used with HIGH_SCALE_SSD, ZONAL, REGIONAL and ENTERPRISE.
	// The default is NFSv3.
	// Default value is `NFS_V3`.
	// Possible values are: `NFS_V3`, `NFS_V4_1`.
	Protocol pulumi.StringPtrInput
	// A map of resource manager tags. Resource manager tag keys
	// and values have the same definition as resource manager
	// tags. Keys must be in the format tagKeys/{tag_key_id},
	// and values are in the format tagValues/456. The field is
	// ignored when empty. The field is immutable and causes
	// resource replacement when mutated. This field is only set
	// at create time and modifying this field after creation
	// will trigger recreation. To apply tags to an existing
	// resource, see the `tags.TagValue` resource.
	Tags pulumi.StringMapInput
	// The service tier of the instance.
	// Possible values include: STANDARD, PREMIUM, BASIC_HDD, BASIC_SSD, HIGH_SCALE_SSD, ZONAL, REGIONAL and ENTERPRISE
	Tier pulumi.StringInput
	// (Optional, Deprecated)
	// The name of the Filestore zone of the instance.
	//
	// > **Warning:** `zone` is deprecated and will be removed in a future major release. Use `location` instead.
	//
	// Deprecated: `zone` is deprecated and will be removed in a future major release. Use `location` instead.
	Zone pulumi.StringPtrInput
}

func (InstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceArgs)(nil)).Elem()
}

type InstanceInput interface {
	pulumi.Input

	ToInstanceOutput() InstanceOutput
	ToInstanceOutputWithContext(ctx context.Context) InstanceOutput
}

func (*Instance) ElementType() reflect.Type {
	return reflect.TypeOf((**Instance)(nil)).Elem()
}

func (i *Instance) ToInstanceOutput() InstanceOutput {
	return i.ToInstanceOutputWithContext(context.Background())
}

func (i *Instance) ToInstanceOutputWithContext(ctx context.Context) InstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceOutput)
}

// InstanceArrayInput is an input type that accepts InstanceArray and InstanceArrayOutput values.
// You can construct a concrete instance of `InstanceArrayInput` via:
//
//	InstanceArray{ InstanceArgs{...} }
type InstanceArrayInput interface {
	pulumi.Input

	ToInstanceArrayOutput() InstanceArrayOutput
	ToInstanceArrayOutputWithContext(context.Context) InstanceArrayOutput
}

type InstanceArray []InstanceInput

func (InstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Instance)(nil)).Elem()
}

func (i InstanceArray) ToInstanceArrayOutput() InstanceArrayOutput {
	return i.ToInstanceArrayOutputWithContext(context.Background())
}

func (i InstanceArray) ToInstanceArrayOutputWithContext(ctx context.Context) InstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceArrayOutput)
}

// InstanceMapInput is an input type that accepts InstanceMap and InstanceMapOutput values.
// You can construct a concrete instance of `InstanceMapInput` via:
//
//	InstanceMap{ "key": InstanceArgs{...} }
type InstanceMapInput interface {
	pulumi.Input

	ToInstanceMapOutput() InstanceMapOutput
	ToInstanceMapOutputWithContext(context.Context) InstanceMapOutput
}

type InstanceMap map[string]InstanceInput

func (InstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Instance)(nil)).Elem()
}

func (i InstanceMap) ToInstanceMapOutput() InstanceMapOutput {
	return i.ToInstanceMapOutputWithContext(context.Background())
}

func (i InstanceMap) ToInstanceMapOutputWithContext(ctx context.Context) InstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMapOutput)
}

type InstanceOutput struct{ *pulumi.OutputState }

func (InstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Instance)(nil)).Elem()
}

func (o InstanceOutput) ToInstanceOutput() InstanceOutput {
	return o
}

func (o InstanceOutput) ToInstanceOutputWithContext(ctx context.Context) InstanceOutput {
	return o
}

// Creation timestamp in RFC3339 text format.
func (o InstanceOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Indicates whether the instance is protected against deletion.
func (o InstanceOutput) DeletionProtectionEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.BoolPtrOutput { return v.DeletionProtectionEnabled }).(pulumi.BoolPtrOutput)
}

// The reason for enabling deletion protection.
func (o InstanceOutput) DeletionProtectionReason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.DeletionProtectionReason }).(pulumi.StringPtrOutput)
}

// A description of the instance.
func (o InstanceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Directory Services configuration.
// Should only be set if protocol is "NFS_V4_1".
// Structure is documented below.
func (o InstanceOutput) DirectoryServices() InstanceDirectoryServicesPtrOutput {
	return o.ApplyT(func(v *Instance) InstanceDirectoryServicesPtrOutput { return v.DirectoryServices }).(InstanceDirectoryServicesPtrOutput)
}

// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
func (o InstanceOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// Output only fields for replication configuration.
// Structure is documented below.
func (o InstanceOutput) EffectiveReplications() InstanceEffectiveReplicationArrayOutput {
	return o.ApplyT(func(v *Instance) InstanceEffectiveReplicationArrayOutput { return v.EffectiveReplications }).(InstanceEffectiveReplicationArrayOutput)
}

// Server-specified ETag for the instance resource to prevent
// simultaneous updates from overwriting each other.
func (o InstanceOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// File system shares on the instance. For this version, only a
// single file share is supported.
// Structure is documented below.
func (o InstanceOutput) FileShares() InstanceFileSharesOutput {
	return o.ApplyT(func(v *Instance) InstanceFileSharesOutput { return v.FileShares }).(InstanceFileSharesOutput)
}

// Replication configuration, once set, this cannot be updated.
// Additionally this should be specified on the replica instance only, indicating the active as the peerInstance
// Structure is documented below.
func (o InstanceOutput) InitialReplication() InstanceInitialReplicationPtrOutput {
	return o.ApplyT(func(v *Instance) InstanceInitialReplicationPtrOutput { return v.InitialReplication }).(InstanceInitialReplicationPtrOutput)
}

// KMS key name used for data encryption.
func (o InstanceOutput) KmsKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.KmsKeyName }).(pulumi.StringPtrOutput)
}

// Resource labels to represent user-provided metadata.
//
// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
func (o InstanceOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// The name of the location of the instance. This can be a region for ENTERPRISE tier instances.
func (o InstanceOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The resource name of the instance.
func (o InstanceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// VPC networks to which the instance is connected. For this version,
// only a single network is supported.
// Structure is documented below.
func (o InstanceOutput) Networks() InstanceNetworkArrayOutput {
	return o.ApplyT(func(v *Instance) InstanceNetworkArrayOutput { return v.Networks }).(InstanceNetworkArrayOutput)
}

// Performance configuration for the instance. If not provided,
// the default performance settings will be used.
// Structure is documented below.
func (o InstanceOutput) PerformanceConfig() InstancePerformanceConfigPtrOutput {
	return o.ApplyT(func(v *Instance) InstancePerformanceConfigPtrOutput { return v.PerformanceConfig }).(InstancePerformanceConfigPtrOutput)
}

// The ID of the project in which the resource belongs.
// If it is not provided, the provider project is used.
func (o InstanceOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Either NFSv3, for using NFS version 3 as file sharing protocol,
// or NFSv4.1, for using NFS version 4.1 as file sharing protocol.
// NFSv4.1 can be used with HIGH_SCALE_SSD, ZONAL, REGIONAL and ENTERPRISE.
// The default is NFSv3.
// Default value is `NFS_V3`.
// Possible values are: `NFS_V3`, `NFS_V4_1`.
func (o InstanceOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.Protocol }).(pulumi.StringPtrOutput)
}

// The combination of labels configured directly on the resource
// and default labels configured on the provider.
func (o InstanceOutput) PulumiLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringMapOutput { return v.PulumiLabels }).(pulumi.StringMapOutput)
}

// A map of resource manager tags. Resource manager tag keys
// and values have the same definition as resource manager
// tags. Keys must be in the format tagKeys/{tag_key_id},
// and values are in the format tagValues/456. The field is
// ignored when empty. The field is immutable and causes
// resource replacement when mutated. This field is only set
// at create time and modifying this field after creation
// will trigger recreation. To apply tags to an existing
// resource, see the `tags.TagValue` resource.
func (o InstanceOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The service tier of the instance.
// Possible values include: STANDARD, PREMIUM, BASIC_HDD, BASIC_SSD, HIGH_SCALE_SSD, ZONAL, REGIONAL and ENTERPRISE
func (o InstanceOutput) Tier() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.Tier }).(pulumi.StringOutput)
}

// (Optional, Deprecated)
// The name of the Filestore zone of the instance.
//
// > **Warning:** `zone` is deprecated and will be removed in a future major release. Use `location` instead.
//
// Deprecated: `zone` is deprecated and will be removed in a future major release. Use `location` instead.
func (o InstanceOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.Zone }).(pulumi.StringOutput)
}

type InstanceArrayOutput struct{ *pulumi.OutputState }

func (InstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Instance)(nil)).Elem()
}

func (o InstanceArrayOutput) ToInstanceArrayOutput() InstanceArrayOutput {
	return o
}

func (o InstanceArrayOutput) ToInstanceArrayOutputWithContext(ctx context.Context) InstanceArrayOutput {
	return o
}

func (o InstanceArrayOutput) Index(i pulumi.IntInput) InstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Instance {
		return vs[0].([]*Instance)[vs[1].(int)]
	}).(InstanceOutput)
}

type InstanceMapOutput struct{ *pulumi.OutputState }

func (InstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Instance)(nil)).Elem()
}

func (o InstanceMapOutput) ToInstanceMapOutput() InstanceMapOutput {
	return o
}

func (o InstanceMapOutput) ToInstanceMapOutputWithContext(ctx context.Context) InstanceMapOutput {
	return o
}

func (o InstanceMapOutput) MapIndex(k pulumi.StringInput) InstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Instance {
		return vs[0].(map[string]*Instance)[vs[1].(string)]
	}).(InstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceInput)(nil)).Elem(), &Instance{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceArrayInput)(nil)).Elem(), InstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceMapInput)(nil)).Elem(), InstanceMap{})
	pulumi.RegisterOutputType(InstanceOutput{})
	pulumi.RegisterOutputType(InstanceArrayOutput{})
	pulumi.RegisterOutputType(InstanceMapOutput{})
}
